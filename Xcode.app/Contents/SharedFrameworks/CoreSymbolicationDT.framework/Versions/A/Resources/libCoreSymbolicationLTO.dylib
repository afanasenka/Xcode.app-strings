N12_GLOBAL__N_111ARMAsmLexerE
N12_GLOBAL__N_115ARMBaseAsmLexerE
N12_GLOBAL__N_113ThumbAsmLexerE
N12_GLOBAL__N_112ARMAsmParserE
N12_GLOBAL__N_110ARMOperandE
N12_GLOBAL__N_115ARMDisassemblerE
N12_GLOBAL__N_117ThumbDisassemblerE
N12_GLOBAL__N_119DarwinARMAsmBackendE
N12_GLOBAL__N_113ARMAsmBackendE
N12_GLOBAL__N_116ELFARMAsmBackendE
.data.rel.ro.local
N12_GLOBAL__N_118ARMELFObjectWriterE
N4llvm18ARMMCAsmInfoDarwinE
N4llvm15ARMELFMCAsmInfoE
N4llvm2cl11OptionValueIbEE
N4llvm2cl15OptionValueCopyIbEE
N12_GLOBAL__N_116ARMMCCodeEmitterE
N4llvm9ARMMCExprE
D4_D6_D8_D10
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D14_D16_D18_D20
D17_D18_D19_D20
D24_D26_D28_D30
D27_D28_D29_D30
MVFR0
D9_D10_D11
D5_D7_D9_D11
Q8_Q9_Q10_Q11
D19_D20_D21
D15_D17_D19_D21
D29_D30_D31
D25_D27_D29_D31
Q0_Q1
MVFR1
D6_D8_D10_D12
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D16_D18_D20_D22
D19_D20_D21_D22
D0_D2
D0_D1_D2
Q1_Q2
D7_D9_D11_D13
D11_D12_D13
Q10_Q11_Q12_Q13
D17_D19_D21_D23
D21_D22_D23
D1_D3
D1_D2_D3
Q0_Q1_Q2_Q3
D8_D10_D12_D14
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D18_D20_D22_D24
D21_D22_D23_D24
D0_D2_D4
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D9_D11_D13_D15
D13_D14_D15
Q12_Q13_Q14_Q15
D19_D21_D23_D25
D23_D24_D25
D1_D3_D5
D3_D4_D5
Q2_Q3_Q4_Q5
D10_D12_D14_D16
D13_D14_D15_D16
D20_D22_D24_D26
D23_D24_D25_D26
D0_D2_D4_D6
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D11_D13_D15_D17
D15_D16_D17
D21_D23_D25_D27
D25_D26_D27
D1_D3_D5_D7
D5_D6_D7
Q4_Q5_Q6_Q7
D12_D14_D16_D18
D15_D16_D17_D18
D22_D24_D26_D28
D25_D26_D27_D28
D2_D4_D6_D8
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D13_D15_D17_D19
D17_D18_D19
D23_D25_D27_D29
D27_D28_D29
D3_D5_D7_D9
D7_D8_D9
Q6_Q7_Q8_Q9
FPEXC
FPSID
ITSTATE
FPSCR
APSR
CPSR
SPSR
FPSCR_NZCV
@UUU
VMRS_MVFR0
VTBL1
VMRS_MVFR1
VTBX1
t2LDRBi12
t2STRBi12
t2LDRSBi12
t2PLDi12
t2LDRHi12
t2STRHi12
t2LDRSHi12
t2PLIi12
t2LDRi12
t2STRi12
t2PLDWi12
t2SUBri12
t2ADDri12
ATOMSUB6432
ATOMADD6432
ATOMAND6432
ATOMNAND6432
ATOMCMPXCHG6432
ATOMSWAP6432
ATOMOR6432
ATOMXOR6432
ATOMIC_LOAD_SUB_I32
ATOMIC_LOAD_ADD_I32
ATOMIC_LOAD_NAND_I32
ATOMIC_LOAD_AND_I32
COPY_STRUCT_BYVAL_I32
ATOMIC_LOAD_UMIN_I32
ATOMIC_LOAD_MIN_I32
ATOMIC_SWAP_I32
ATOMIC_CMP_SWAP_I32
ATOMIC_LOAD_XOR_I32
ATOMIC_LOAD_OR_I32
ATOMIC_LOAD_UMAX_I32
ATOMIC_LOAD_MAX_I32
VLD3dWB_fixed_Asm_32
VST3dWB_fixed_Asm_32
VLD4dWB_fixed_Asm_32
VST4dWB_fixed_Asm_32
VLD1LNdWB_fixed_Asm_32
VST1LNdWB_fixed_Asm_32
VLD2LNdWB_fixed_Asm_32
VST2LNdWB_fixed_Asm_32
VLD3LNdWB_fixed_Asm_32
VST3LNdWB_fixed_Asm_32
VLD4LNdWB_fixed_Asm_32
VST4LNdWB_fixed_Asm_32
VLD3DUPdWB_fixed_Asm_32
VLD4DUPdWB_fixed_Asm_32
VLD3qWB_fixed_Asm_32
VST3qWB_fixed_Asm_32
VLD4qWB_fixed_Asm_32
VST4qWB_fixed_Asm_32
VLD2LNqWB_fixed_Asm_32
VST2LNqWB_fixed_Asm_32
VLD3LNqWB_fixed_Asm_32
VST3LNqWB_fixed_Asm_32
VLD4LNqWB_fixed_Asm_32
VST4LNqWB_fixed_Asm_32
VLD3DUPqWB_fixed_Asm_32
VLD4DUPqWB_fixed_Asm_32
VLD3dWB_register_Asm_32
VST3dWB_register_Asm_32
VLD4dWB_register_Asm_32
VST4dWB_register_Asm_32
VLD1LNdWB_register_Asm_32
VST1LNdWB_register_Asm_32
VLD2LNdWB_register_Asm_32
VST2LNdWB_register_Asm_32
VLD3LNdWB_register_Asm_32
VST3LNdWB_register_Asm_32
VLD4LNdWB_register_Asm_32
VST4LNdWB_register_Asm_32
VLD3DUPdWB_register_Asm_32
VLD4DUPdWB_register_Asm_32
VLD3qWB_register_Asm_32
VST3qWB_register_Asm_32
VLD4qWB_register_Asm_32
VST4qWB_register_Asm_32
VLD2LNqWB_register_Asm_32
VST2LNqWB_register_Asm_32
VLD3LNqWB_register_Asm_32
VST3LNqWB_register_Asm_32
VLD4LNqWB_register_Asm_32
VST4LNqWB_register_Asm_32
VLD3DUPqWB_register_Asm_32
VLD4DUPqWB_register_Asm_32
VLD3dAsm_32
VST3dAsm_32
VLD4dAsm_32
VST4dAsm_32
VLD1LNdAsm_32
VST1LNdAsm_32
VLD2LNdAsm_32
VST2LNdAsm_32
VLD3LNdAsm_32
VST3LNdAsm_32
VLD4LNdAsm_32
VST4LNdAsm_32
VLD3DUPdAsm_32
VLD4DUPdAsm_32
VLD3qAsm_32
VST3qAsm_32
VLD4qAsm_32
VST4qAsm_32
VLD2LNqAsm_32
VST2LNqAsm_32
VLD3LNqAsm_32
VST3LNqAsm_32
VLD4LNqAsm_32
VST4LNqAsm_32
VLD3DUPqAsm_32
VLD4DUPqAsm_32
VLD2b32
VST2b32
VLD1d32
VST1d32
VLD2d32
VST2d32
VLD3d32
VST3d32
VREV64d32
VLD4d32
VST4d32
VLD1LNd32
VST1LNd32
VLD2LNd32
VST2LNd32
VLD3LNd32
VST3LNd32
VLD4LNd32
VST4LNd32
VTRNd32
VLD1DUPd32
VLD2DUPd32
VLD3DUPd32
VLD4DUPd32
VEXTd32
VMOVv2f32
VCGEzv2f32
VCLEzv2f32
VCEQzv2f32
VCGTzv2f32
VCLTzv2f32
VMOVv4f32
VCGEzv4f32
VCLEzv4f32
VCEQzv4f32
VCGTzv4f32
VCLTzv4f32
VMLAv2i32
VSUBv2i32
VADDv2i32
VQNEGv2i32
VQDMULHv2i32
VQRDMULHv2i32
VSLIv2i32
VSRIv2i32
VMULv2i32
VRSUBHNv2i32
VSUBHNv2i32
VRADDHNv2i32
VADDHNv2i32
VRSHRNv2i32
VSHRNv2i32
VQSHRUNv2i32
VQRSHRUNv2i32
VMVNv2i32
VMOVNv2i32
VCEQv2i32
VQABSv2i32
VABSv2i32
VCLSv2i32
VMLSv2i32
VTSTv2i32
VMOVv2i32
VCLZv2i32
VBICiv2i32
VSHLiv2i32
VORRiv2i32
VQSHLsiv2i32
VQSHLuiv2i32
VMLAslv2i32
VQDMULHslv2i32
VQRDMULHslv2i32
VQDMLALslv2i32
VQDMULLslv2i32
VQDMLSLslv2i32
VMULslv2i32
VMLSslv2i32
VABAsv2i32
VRSRAsv2i32
VSRAsv2i32
VHSUBsv2i32
VQSUBsv2i32
VABDsv2i32
VRHADDsv2i32
VHADDsv2i32
VQADDsv2i32
VCGEsv2i32
VPADALsv2i32
VPADDLsv2i32
VQSHLsv2i32
VQRSHLsv2i32
VRSHLsv2i32
VSHLsv2i32
VMINsv2i32
VQSHRNsv2i32
VQRSHRNsv2i32
VQMOVNsv2i32
VRSHRsv2i32
VSHRsv2i32
VCGTsv2i32
VMAXsv2i32
VMLALslsv2i32
VMULLslsv2i32
VMLSLslsv2i32
VABAuv2i32
VRSRAuv2i32
VSRAuv2i32
VHSUBuv2i32
VQSUBuv2i32
VABDuv2i32
VRHADDuv2i32
VHADDuv2i32
VQADDuv2i32
VCGEuv2i32
VPADALuv2i32
VPADDLuv2i32
VQSHLuv2i32
VQRSHLuv2i32
VRSHLuv2i32
VSHLuv2i32
VMINuv2i32
VQSHRNuv2i32
VQRSHRNuv2i32
VQMOVNuv2i32
VRSHRuv2i32
VSHRuv2i32
VCGTuv2i32
VMAXuv2i32
VMLALsluv2i32
VMULLsluv2i32
VMLSLsluv2i32
VQSHLsuv2i32
VQMOVNsuv2i32
VCGEzv2i32
VCLEzv2i32
VCEQzv2i32
VCGTzv2i32
VCLTzv2i32
VMLAv4i32
VSUBv4i32
VADDv4i32
VQNEGv4i32
VQDMULHv4i32
VQRDMULHv4i32
VSLIv4i32
VSRIv4i32
VQDMLALv4i32
VQDMULLv4i32
VQDMLSLv4i32
VMULv4i32
VMVNv4i32
VCEQv4i32
VQABSv4i32
VABSv4i32
VCLSv4i32
VMLSv4i32
VTSTv4i32
VMOVv4i32
VCLZv4i32
VBICiv4i32
VSHLiv4i32
VORRiv4i32
VQSHLsiv4i32
VQSHLuiv4i32
VMLAslv4i32
VQDMULHslv4i32
VQRDMULHslv4i32
VMULslv4i32
VMLSslv4i32
VABAsv4i32
VRSRAsv4i32
VSRAsv4i32
VHSUBsv4i32
VQSUBsv4i32
VABDsv4i32
VRHADDsv4i32
VHADDsv4i32
VQADDsv4i32
VCGEsv4i32
VABALsv4i32
VPADALsv4i32
VMLALsv4i32
VSUBLsv4i32
VABDLsv4i32
VPADDLsv4i32
VADDLsv4i32
VQSHLsv4i32
VQRSHLsv4i32
VRSHLsv4i32
VSHLsv4i32
VSHLLsv4i32
VMULLsv4i32
VMLSLsv4i32
VMOVLsv4i32
VMINsv4i32
VRSHRsv4i32
VSHRsv4i32
VCGTsv4i32
VSUBWsv4i32
VADDWsv4i32
VMAXsv4i32
VABAuv4i32
VRSRAuv4i32
VSRAuv4i32
VHSUBuv4i32
VQSUBuv4i32
VABDuv4i32
VRHADDuv4i32
VHADDuv4i32
VQADDuv4i32
VCGEuv4i32
VABALuv4i32
VPADALuv4i32
VMLALuv4i32
VSUBLuv4i32
VABDLuv4i32
VPADDLuv4i32
VADDLuv4i32
VQSHLuv4i32
VQRSHLuv4i32
VRSHLuv4i32
VSHLuv4i32
VSHLLuv4i32
VMULLuv4i32
VMLSLuv4i32
VMOVLuv4i32
VMINuv4i32
VRSHRuv4i32
VSHRuv4i32
VCGTuv4i32
VSUBWuv4i32
VADDWuv4i32
VMAXuv4i32
VQSHLsuv4i32
VCGEzv4i32
VCLEzv4i32
VCEQzv4i32
VCGTzv4i32
VCLTzv4i32
VPADDi32
VSHLLi32
VGETLNi32
VSETLNi32
VLD1q32
VST1q32
VLD2q32
VST2q32
VLD3q32
VST3q32
VREV64q32
VLD4q32
VST4q32
VLD2LNq32
VST2LNq32
VLD3LNq32
VST3LNq32
VLD4LNq32
VST4LNq32
VTRNq32
VZIPq32
VLD1DUPq32
VLD3DUPq32
VLD4DUPq32
VUZPq32
VEXTq32
VPMINs32
VPMAXs32
VPMINu32
VPMAXu32
t2MRC2
t2MRRC2
VTBL2
t2CDP2
t2MCR2
t2MCRR2
VTBX2
VLD2DUPd32x2
VLD2DUPd16x2
VLD2DUPd8x2
VTBL3
VTBX3
tSUBi3
tADDi3
VLD1d64
VST1d64
VSUBv1i64
VADDv1i64
VSLIv1i64
VSRIv1i64
VMOVv1i64
VSHLiv1i64
VQSHLsiv1i64
VQSHLuiv1i64
VRSRAsv1i64
VSRAsv1i64
VQSUBsv1i64
VQADDsv1i64
VQSHLsv1i64
VQRSHLsv1i64
VRSHLsv1i64
VSHLsv1i64
VRSHRsv1i64
VSHRsv1i64
VRSRAuv1i64
VSRAuv1i64
VQSUBuv1i64
VQADDuv1i64
VQSHLuv1i64
VQRSHLuv1i64
VRSHLuv1i64
VSHLuv1i64
VRSHRuv1i64
VSHRuv1i64
VQSHLsuv1i64
VSUBv2i64
VADDv2i64
VSLIv2i64
VSRIv2i64
VQDMLALv2i64
VQDMULLv2i64
VQDMLSLv2i64
VMOVv2i64
VSHLiv2i64
VQSHLsiv2i64
VQSHLuiv2i64
VRSRAsv2i64
VSRAsv2i64
VQSUBsv2i64
VQADDsv2i64
VABALsv2i64
VMLALsv2i64
VSUBLsv2i64
VABDLsv2i64
VADDLsv2i64
VQSHLsv2i64
VQRSHLsv2i64
VRSHLsv2i64
VSHLsv2i64
VSHLLsv2i64
VMULLsv2i64
VMLSLsv2i64
VMOVLsv2i64
VRSHRsv2i64
VSHRsv2i64
VSUBWsv2i64
VADDWsv2i64
VRSRAuv2i64
VSRAuv2i64
VQSUBuv2i64
VQADDuv2i64
VABALuv2i64
VMLALuv2i64
VSUBLuv2i64
VABDLuv2i64
VADDLuv2i64
VQSHLuv2i64
VQRSHLuv2i64
VRSHLuv2i64
VSHLuv2i64
VSHLLuv2i64
VMULLuv2i64
VMLSLuv2i64
VMOVLuv2i64
VRSHRuv2i64
VSHRuv2i64
VSUBWuv2i64
VADDWuv2i64
VQSHLsuv2i64
BCCi64
BCCZi64
VLD1q64
VST1q64
VEXTq64
VTBL4
VTBX4
MLAv5
UMAALv5
SMLALv5
UMLALv5
SMULLv5
UMULLv5
MULv5
t2SXTAB16
t2UXTAB16
t2SXTB16
t2UXTB16
t2SHSUB16
t2UHSUB16
t2QSUB16
t2UQSUB16
t2SSUB16
t2USUB16
t2SHADD16
t2UHADD16
t2QADD16
t2UQADD16
t2SADD16
t2UADD16
ATOMIC_LOAD_SUB_I16
ATOMIC_LOAD_ADD_I16
ATOMIC_LOAD_NAND_I16
ATOMIC_LOAD_AND_I16
ATOMIC_LOAD_UMIN_I16
ATOMIC_LOAD_MIN_I16
ATOMIC_SWAP_I16
ATOMIC_CMP_SWAP_I16
ATOMIC_LOAD_XOR_I16
ATOMIC_LOAD_OR_I16
ATOMIC_LOAD_UMAX_I16
ATOMIC_LOAD_MAX_I16
t2SSAT16
t2USAT16
t2REV16
tREV16
VLD3dWB_fixed_Asm_16
VST3dWB_fixed_Asm_16
VLD4dWB_fixed_Asm_16
VST4dWB_fixed_Asm_16
VLD1LNdWB_fixed_Asm_16
VST1LNdWB_fixed_Asm_16
VLD2LNdWB_fixed_Asm_16
VST2LNdWB_fixed_Asm_16
VLD3LNdWB_fixed_Asm_16
VST3LNdWB_fixed_Asm_16
VLD4LNdWB_fixed_Asm_16
VST4LNdWB_fixed_Asm_16
VLD3DUPdWB_fixed_Asm_16
VLD4DUPdWB_fixed_Asm_16
VLD3qWB_fixed_Asm_16
VST3qWB_fixed_Asm_16
VLD4qWB_fixed_Asm_16
VST4qWB_fixed_Asm_16
VLD2LNqWB_fixed_Asm_16
VST2LNqWB_fixed_Asm_16
VLD3LNqWB_fixed_Asm_16
VST3LNqWB_fixed_Asm_16
VLD4LNqWB_fixed_Asm_16
VST4LNqWB_fixed_Asm_16
VLD3DUPqWB_fixed_Asm_16
VLD4DUPqWB_fixed_Asm_16
VLD3dWB_register_Asm_16
VST3dWB_register_Asm_16
VLD4dWB_register_Asm_16
VST4dWB_register_Asm_16
VLD1LNdWB_register_Asm_16
VST1LNdWB_register_Asm_16
VLD2LNdWB_register_Asm_16
VST2LNdWB_register_Asm_16
VLD3LNdWB_register_Asm_16
VST3LNdWB_register_Asm_16
VLD4LNdWB_register_Asm_16
VST4LNdWB_register_Asm_16
VLD3DUPdWB_register_Asm_16
VLD4DUPdWB_register_Asm_16
VLD3qWB_register_Asm_16
VST3qWB_register_Asm_16
VLD4qWB_register_Asm_16
VST4qWB_register_Asm_16
VLD2LNqWB_register_Asm_16
VST2LNqWB_register_Asm_16
VLD3LNqWB_register_Asm_16
VST3LNqWB_register_Asm_16
VLD4LNqWB_register_Asm_16
VST4LNqWB_register_Asm_16
VLD3DUPqWB_register_Asm_16
VLD4DUPqWB_register_Asm_16
VLD3dAsm_16
VST3dAsm_16
VLD4dAsm_16
VST4dAsm_16
VLD1LNdAsm_16
VST1LNdAsm_16
VLD2LNdAsm_16
VST2LNdAsm_16
VLD3LNdAsm_16
VST3LNdAsm_16
VLD4LNdAsm_16
VST4LNdAsm_16
VLD3DUPdAsm_16
VLD4DUPdAsm_16
VLD3qAsm_16
VST3qAsm_16
VLD4qAsm_16
VST4qAsm_16
VLD2LNqAsm_16
VST2LNqAsm_16
VLD3LNqAsm_16
VST3LNqAsm_16
VLD4LNqAsm_16
VST4LNqAsm_16
VLD3DUPqAsm_16
VLD4DUPqAsm_16
VLD2b16
VST2b16
VLD1d16
VST1d16
VREV32d16
VLD2d16
VST2d16
VLD3d16
VST3d16
VREV64d16
VLD4d16
VST4d16
VLD1LNd16
VST1LNd16
VLD2LNd16
VST2LNd16
VLD3LNd16
VST3LNd16
VLD4LNd16
VST4LNd16
VTRNd16
VZIPd16
VLD1DUPd16
VLD2DUPd16
VLD3DUPd16
VLD4DUPd16
VUZPd16
VEXTd16
VMLAv4i16
VSUBv4i16
VADDv4i16
VQNEGv4i16
VQDMULHv4i16
VQRDMULHv4i16
VSLIv4i16
VSRIv4i16
VMULv4i16
VRSUBHNv4i16
VSUBHNv4i16
VRADDHNv4i16
VADDHNv4i16
VRSHRNv4i16
VSHRNv4i16
VQSHRUNv4i16
VQRSHRUNv4i16
VMVNv4i16
VMOVNv4i16
VCEQv4i16
VQABSv4i16
VABSv4i16
VCLSv4i16
VMLSv4i16
VTSTv4i16
VMOVv4i16
VCLZv4i16
VBICiv4i16
VSHLiv4i16
VORRiv4i16
VQSHLsiv4i16
VQSHLuiv4i16
VMLAslv4i16
VQDMULHslv4i16
VQRDMULHslv4i16
VQDMLALslv4i16
VQDMULLslv4i16
VQDMLSLslv4i16
VMULslv4i16
VMLSslv4i16
VABAsv4i16
VRSRAsv4i16
VSRAsv4i16
VHSUBsv4i16
VQSUBsv4i16
VABDsv4i16
VRHADDsv4i16
VHADDsv4i16
VQADDsv4i16
VCGEsv4i16
VPADALsv4i16
VPADDLsv4i16
VQSHLsv4i16
VQRSHLsv4i16
VRSHLsv4i16
VSHLsv4i16
VMINsv4i16
VQSHRNsv4i16
VQRSHRNsv4i16
VQMOVNsv4i16
VRSHRsv4i16
VSHRsv4i16
VCGTsv4i16
VMAXsv4i16
VMLALslsv4i16
VMULLslsv4i16
VMLSLslsv4i16
VABAuv4i16
VRSRAuv4i16
VSRAuv4i16
VHSUBuv4i16
VQSUBuv4i16
VABDuv4i16
VRHADDuv4i16
VHADDuv4i16
VQADDuv4i16
VCGEuv4i16
VPADALuv4i16
VPADDLuv4i16
VQSHLuv4i16
VQRSHLuv4i16
VRSHLuv4i16
VSHLuv4i16
VMINuv4i16
VQSHRNuv4i16
VQRSHRNuv4i16
VQMOVNuv4i16
VRSHRuv4i16
VSHRuv4i16
VCGTuv4i16
VMAXuv4i16
VMLALsluv4i16
VMULLsluv4i16
VMLSLsluv4i16
VQSHLsuv4i16
VQMOVNsuv4i16
VCGEzv4i16
VCLEzv4i16
VCEQzv4i16
VCGTzv4i16
VCLTzv4i16
VMLAv8i16
VSUBv8i16
VADDv8i16
VQNEGv8i16
VQDMULHv8i16
VQRDMULHv8i16
VSLIv8i16
VSRIv8i16
VMULv8i16
VMVNv8i16
VCEQv8i16
VQABSv8i16
VABSv8i16
VCLSv8i16
VMLSv8i16
VTSTv8i16
VMOVv8i16
VCLZv8i16
VBICiv8i16
VSHLiv8i16
VORRiv8i16
VQSHLsiv8i16
VQSHLuiv8i16
VMLAslv8i16
VQDMULHslv8i16
VQRDMULHslv8i16
VMULslv8i16
VMLSslv8i16
VABAsv8i16
VRSRAsv8i16
VSRAsv8i16
VHSUBsv8i16
VQSUBsv8i16
VABDsv8i16
VRHADDsv8i16
VHADDsv8i16
VQADDsv8i16
VCGEsv8i16
VABALsv8i16
VPADALsv8i16
VMLALsv8i16
VSUBLsv8i16
VABDLsv8i16
VPADDLsv8i16
VADDLsv8i16
VQSHLsv8i16
VQRSHLsv8i16
VRSHLsv8i16
VSHLsv8i16
VSHLLsv8i16
VMULLsv8i16
VMLSLsv8i16
VMOVLsv8i16
VMINsv8i16
VRSHRsv8i16
VSHRsv8i16
VCGTsv8i16
VSUBWsv8i16
VADDWsv8i16
VMAXsv8i16
VABAuv8i16
VRSRAuv8i16
VSRAuv8i16
VHSUBuv8i16
VQSUBuv8i16
VABDuv8i16
VRHADDuv8i16
VHADDuv8i16
VQADDuv8i16
VCGEuv8i16
VABALuv8i16
VPADALuv8i16
VMLALuv8i16
VSUBLuv8i16
VABDLuv8i16
VPADDLuv8i16
VADDLuv8i16
VQSHLuv8i16
VQRSHLuv8i16
VRSHLuv8i16
VSHLuv8i16
VSHLLuv8i16
VMULLuv8i16
VMLSLuv8i16
VMOVLuv8i16
VMINuv8i16
VRSHRuv8i16
VSHRuv8i16
VCGTuv8i16
VSUBWuv8i16
VADDWuv8i16
VMAXuv8i16
VQSHLsuv8i16
VCGEzv8i16
VCLEzv8i16
VCEQzv8i16
VCGTzv8i16
VCLTzv8i16
t2MOVCCi16
VPADDi16
VSHLLi16
VSETLNi16
t2MOVTi16
t2MOVi16
VLD1q16
VST1q16
VREV32q16
VLD2q16
VST2q16
VLD3q16
VST3q16
VREV64q16
VLD4q16
VST4q16
VLD2LNq16
VST2LNq16
VLD3LNq16
VST3LNq16
VLD4LNq16
VST4LNq16
VTRNq16
VZIPq16
VLD1DUPq16
VLD3DUPq16
VLD4DUPq16
VUZPq16
VEXTq16
VPMINs16
VGETLNs16
VPMAXs16
VPMINu16
VGETLNu16
VPMAXu16
t2USADA8
t2SHSUB8
t2UHSUB8
t2QSUB8
t2UQSUB8
t2SSUB8
t2USUB8
t2USAD8
t2SHADD8
t2UHADD8
t2QADD8
t2UQADD8
t2SADD8
t2UADD8
ATOMIC_LOAD_SUB_I8
ATOMIC_LOAD_ADD_I8
ATOMIC_LOAD_NAND_I8
ATOMIC_LOAD_AND_I8
ATOMIC_LOAD_UMIN_I8
ATOMIC_LOAD_MIN_I8
ATOMIC_SWAP_I8
ATOMIC_CMP_SWAP_I8
ATOMIC_LOAD_XOR_I8
ATOMIC_LOAD_OR_I8
ATOMIC_LOAD_UMAX_I8
ATOMIC_LOAD_MAX_I8
VLD3dWB_fixed_Asm_8
VST3dWB_fixed_Asm_8
VLD4dWB_fixed_Asm_8
VST4dWB_fixed_Asm_8
VLD1LNdWB_fixed_Asm_8
VST1LNdWB_fixed_Asm_8
VLD2LNdWB_fixed_Asm_8
VST2LNdWB_fixed_Asm_8
VLD3LNdWB_fixed_Asm_8
VST3LNdWB_fixed_Asm_8
VLD4LNdWB_fixed_Asm_8
VST4LNdWB_fixed_Asm_8
VLD3DUPdWB_fixed_Asm_8
VLD4DUPdWB_fixed_Asm_8
VLD3qWB_fixed_Asm_8
VST3qWB_fixed_Asm_8
VLD4qWB_fixed_Asm_8
VST4qWB_fixed_Asm_8
VLD3DUPqWB_fixed_Asm_8
VLD4DUPqWB_fixed_Asm_8
VLD3dWB_register_Asm_8
VST3dWB_register_Asm_8
VLD4dWB_register_Asm_8
VST4dWB_register_Asm_8
VLD1LNdWB_register_Asm_8
VST1LNdWB_register_Asm_8
VLD2LNdWB_register_Asm_8
VST2LNdWB_register_Asm_8
VLD3LNdWB_register_Asm_8
VST3LNdWB_register_Asm_8
VLD4LNdWB_register_Asm_8
VST4LNdWB_register_Asm_8
VLD3DUPdWB_register_Asm_8
VLD4DUPdWB_register_Asm_8
VLD3qWB_register_Asm_8
VST3qWB_register_Asm_8
VLD4qWB_register_Asm_8
VST4qWB_register_Asm_8
VLD3DUPqWB_register_Asm_8
VLD4DUPqWB_register_Asm_8
VLD3dAsm_8
VST3dAsm_8
VLD4dAsm_8
VST4dAsm_8
VLD1LNdAsm_8
VST1LNdAsm_8
VLD2LNdAsm_8
VST2LNdAsm_8
VLD3LNdAsm_8
VST3LNdAsm_8
VLD4LNdAsm_8
VST4LNdAsm_8
VLD3DUPdAsm_8
VLD4DUPdAsm_8
VLD3qAsm_8
VST3qAsm_8
VLD4qAsm_8
VST4qAsm_8
VLD3DUPqAsm_8
VLD4DUPqAsm_8
VLD2b8
VST2b8
VLD1d8
VST1d8
VREV32d8
VLD2d8
VST2d8
VLD3d8
VST3d8
VREV64d8
VLD4d8
VST4d8
VREV16d8
VLD1LNd8
VST1LNd8
VLD2LNd8
VST2LNd8
VLD3LNd8
VST3LNd8
VLD4LNd8
VST4LNd8
VTRNd8
VZIPd8
VLD1DUPd8
VLD2DUPd8
VLD3DUPd8
VLD4DUPd8
VUZPd8
VEXTd8
VMLAv16i8
VSUBv16i8
VADDv16i8
VQNEGv16i8
VSLIv16i8
VSRIv16i8
VMULv16i8
VCEQv16i8
VQABSv16i8
VABSv16i8
VCLSv16i8
VMLSv16i8
VTSTv16i8
VMOVv16i8
VCLZv16i8
VSHLiv16i8
VQSHLsiv16i8
VQSHLuiv16i8
VABAsv16i8
VRSRAsv16i8
VSRAsv16i8
VHSUBsv16i8
VQSUBsv16i8
VABDsv16i8
VRHADDsv16i8
VHADDsv16i8
VQADDsv16i8
VCGEsv16i8
VPADALsv16i8
VPADDLsv16i8
VQSHLsv16i8
VQRSHLsv16i8
VRSHLsv16i8
VSHLsv16i8
VMINsv16i8
VRSHRsv16i8
VSHRsv16i8
VCGTsv16i8
VMAXsv16i8
VABAuv16i8
VRSRAuv16i8
VSRAuv16i8
VHSUBuv16i8
VQSUBuv16i8
VABDuv16i8
VRHADDuv16i8
VHADDuv16i8
VQADDuv16i8
VCGEuv16i8
VPADALuv16i8
VPADDLuv16i8
VQSHLuv16i8
VQRSHLuv16i8
VRSHLuv16i8
VSHLuv16i8
VMINuv16i8
VRSHRuv16i8
VSHRuv16i8
VCGTuv16i8
VMAXuv16i8
VQSHLsuv16i8
VCGEzv16i8
VCLEzv16i8
VCEQzv16i8
VCGTzv16i8
VCLTzv16i8
VMLAv8i8
VSUBv8i8
VADDv8i8
VQNEGv8i8
VSLIv8i8
VSRIv8i8
VMULv8i8
VRSUBHNv8i8
VSUBHNv8i8
VRADDHNv8i8
VADDHNv8i8
VRSHRNv8i8
VSHRNv8i8
VQSHRUNv8i8
VQRSHRUNv8i8
VMOVNv8i8
VCEQv8i8
VQABSv8i8
VABSv8i8
VCLSv8i8
VMLSv8i8
VTSTv8i8
VMOVv8i8
VCLZv8i8
VSHLiv8i8
VQSHLsiv8i8
VQSHLuiv8i8
VABAsv8i8
VRSRAsv8i8
VSRAsv8i8
VHSUBsv8i8
VQSUBsv8i8
VABDsv8i8
VRHADDsv8i8
VHADDsv8i8
VQADDsv8i8
VCGEsv8i8
VPADALsv8i8
VPADDLsv8i8
VQSHLsv8i8
VQRSHLsv8i8
VRSHLsv8i8
VSHLsv8i8
VMINsv8i8
VQSHRNsv8i8
VQRSHRNsv8i8
VQMOVNsv8i8
VRSHRsv8i8
VSHRsv8i8
VCGTsv8i8
VMAXsv8i8
VABAuv8i8
VRSRAuv8i8
VSRAuv8i8
VHSUBuv8i8
VQSUBuv8i8
VABDuv8i8
VRHADDuv8i8
VHADDuv8i8
VQADDuv8i8
VCGEuv8i8
VPADALuv8i8
VPADDLuv8i8
VQSHLuv8i8
VQRSHLuv8i8
VRSHLuv8i8
VSHLuv8i8
VMINuv8i8
VQSHRNuv8i8
VQRSHRNuv8i8
VQMOVNuv8i8
VRSHRuv8i8
VSHRuv8i8
VCGTuv8i8
VMAXuv8i8
VQSHLsuv8i8
VQMOVNsuv8i8
VCGEzv8i8
VCLEzv8i8
VCEQzv8i8
VCGTzv8i8
VCLTzv8i8
t2LDRBi8
t2STRBi8
t2LDRSBi8
tSUBi8
VPADDi8
tADDi8
t2PLDi8
t2LDRDi8
t2STRDi8
t2LDRHi8
t2STRHi8
t2LDRSHi8
t2PLIi8
VSHLLi8
VSETLNi8
tCMPi8
t2LDRi8
t2STRi8
tMOVi8
t2PLDWi8
VLD1q8
VST1q8
VREV32q8
VLD2q8
VST2q8
VLD3q8
VST3q8
VREV64q8
VLD4q8
VST4q8
VREV16q8
VTRNq8
VZIPq8
VLD1DUPq8
VLD3DUPq8
VLD4DUPq8
VUZPq8
VEXTq8
VPMINs8
VGETLNs8
VPMAXs8
VPMINu8
VGETLNu8
VPMAXu8
RFEDA
sysLDMDA
sysSTMDA
SRSDA
VLDMDIA
VSTMDIA
t2RFEIA
t2LDMIA
sysLDMIA
tLDMIA
t2STMIA
sysSTMIA
VLDMQIA
VSTMQIA
VLDMSIA
VSTMSIA
t2SRSIA
t2MLA
t2SMMLA
t2SXTAB
t2UXTAB
t2SMLABB
t2SMLALBB
t2SMULBB
t2TBB
t2RFEDB
t2LDMDB
sysLDMDB
t2STMDB
sysSTMDB
t2SRSDB
RFEIB
sysLDMIB
sysSTMIB
SRSIB
t2DMB
SWPB
PICLDRB
PICSTRB
t2DSB
t2ISB
PICLDRSB
tLDRSB
tRSB
t2SMLATB
t2PKHTB
t2SMLALTB
t2SMULTB
t2SXTB
tSXTB
t2UXTB
tUXTB
t2QDSUB
t2QSUB
t2SMLAWB
t2SMULWB
t2LDREXB
t2STREXB
tSBC
tADC
t2BFC
tBIC
t2SMC
t2MRC
t2MRRC
MOVr_TC
tSVC
VMSR_FPEXC
VMRS_FPEXC
VNMLAD
t2SMLAD
VMLAD
VFMAD
VFNMAD
t2SMUAD
VSUBD
tPICADD
t2QDADD
t2QADD
VADDD
VCMPED
VNEGD
VTOSHD
VTOUHD
VMSR_FPSID
VMRS_FPSID
t2SMLALD
tYIELD
t2SMLSLD
VTOSLD
VNMULD
VMULD
VTOULD
tAND
tSETEND
LIFETIME_END
tBRIND
tTAILJMPdND
VSHTOD
VUHTOD
VSITOD
VUITOD
VSLTOD
VULTOD
VCMPD
VLD3d32_UPD
VST3d32_UPD
VLD4d32_UPD
VST4d32_UPD
VLD1LNd32_UPD
VST1LNd32_UPD
VLD2LNd32_UPD
VST2LNd32_UPD
VLD3LNd32_UPD
VST3LNd32_UPD
VLD4LNd32_UPD
VST4LNd32_UPD
VLD3DUPd32_UPD
VLD4DUPd32_UPD
VLD3q32_UPD
VST3q32_UPD
VLD4q32_UPD
VST4q32_UPD
VLD2LNq32_UPD
VST2LNq32_UPD
VLD3LNq32_UPD
VST3LNq32_UPD
VLD4LNq32_UPD
VST4LNq32_UPD
VLD3DUPq32_UPD
VLD4DUPq32_UPD
VLD3d16_UPD
VST3d16_UPD
VLD4d16_UPD
VST4d16_UPD
VLD1LNd16_UPD
VST1LNd16_UPD
VLD2LNd16_UPD
VST2LNd16_UPD
VLD3LNd16_UPD
VST3LNd16_UPD
VLD4LNd16_UPD
VST4LNd16_UPD
VLD3DUPd16_UPD
VLD4DUPd16_UPD
VLD3q16_UPD
VST3q16_UPD
VLD4q16_UPD
VST4q16_UPD
VLD2LNq16_UPD
VST2LNq16_UPD
VLD3LNq16_UPD
VST3LNq16_UPD
VLD4LNq16_UPD
VST4LNq16_UPD
VLD3DUPq16_UPD
VLD4DUPq16_UPD
VLD3d8_UPD
VST3d8_UPD
VLD4d8_UPD
VST4d8_UPD
VLD1LNd8_UPD
VST1LNd8_UPD
VLD2LNd8_UPD
VST2LNd8_UPD
VLD3LNd8_UPD
VST3LNd8_UPD
VLD4LNd8_UPD
VST4LNd8_UPD
VLD3DUPd8_UPD
VLD4DUPd8_UPD
VLD3q8_UPD
VST3q8_UPD
VLD4q8_UPD
VST4q8_UPD
VLD3DUPq8_UPD
VLD4DUPq8_UPD
RFEDA_UPD
sysLDMDA_UPD
sysSTMDA_UPD
SRSDA_UPD
VLDMDIA_UPD
VSTMDIA_UPD
RFEIA_UPD
t2LDMIA_UPD
sysLDMIA_UPD
tLDMIA_UPD
t2STMIA_UPD
sysSTMIA_UPD
tSTMIA_UPD
VLDMSIA_UPD
VSTMSIA_UPD
t2SRSIA_UPD
VLDMDDB_UPD
VSTMDDB_UPD
RFEDB_UPD
t2LDMDB_UPD
sysLDMDB_UPD
t2STMDB_UPD
sysSTMDB_UPD
VLDMSDB_UPD
VSTMSDB_UPD
t2SRSDB_UPD
RFEIB_UPD
sysLDMIB_UPD
sysSTMIB_UPD
SRSIB_UPD
VLD3d32Pseudo_UPD
VST3d32Pseudo_UPD
VLD4d32Pseudo_UPD
VST4d32Pseudo_UPD
VLD2LNd32Pseudo_UPD
VST2LNd32Pseudo_UPD
VLD3LNd32Pseudo_UPD
VST3LNd32Pseudo_UPD
VLD4LNd32Pseudo_UPD
VST4LNd32Pseudo_UPD
VLD3DUPd32Pseudo_UPD
VLD4DUPd32Pseudo_UPD
VLD3q32Pseudo_UPD
VST3q32Pseudo_UPD
VLD4q32Pseudo_UPD
VST4q32Pseudo_UPD
VLD1LNq32Pseudo_UPD
VST1LNq32Pseudo_UPD
VLD2LNq32Pseudo_UPD
VST2LNq32Pseudo_UPD
VLD3LNq32Pseudo_UPD
VST3LNq32Pseudo_UPD
VLD4LNq32Pseudo_UPD
VST4LNq32Pseudo_UPD
VLD3d16Pseudo_UPD
VST3d16Pseudo_UPD
VLD4d16Pseudo_UPD
VST4d16Pseudo_UPD
VLD2LNd16Pseudo_UPD
VST2LNd16Pseudo_UPD
VLD3LNd16Pseudo_UPD
VST3LNd16Pseudo_UPD
VLD4LNd16Pseudo_UPD
VST4LNd16Pseudo_UPD
VLD3DUPd16Pseudo_UPD
VLD4DUPd16Pseudo_UPD
VLD3q16Pseudo_UPD
VST3q16Pseudo_UPD
VLD4q16Pseudo_UPD
VST4q16Pseudo_UPD
VLD1LNq16Pseudo_UPD
VST1LNq16Pseudo_UPD
VLD2LNq16Pseudo_UPD
VST2LNq16Pseudo_UPD
VLD3LNq16Pseudo_UPD
VST3LNq16Pseudo_UPD
VLD4LNq16Pseudo_UPD
VST4LNq16Pseudo_UPD
VLD3d8Pseudo_UPD
VST3d8Pseudo_UPD
VLD4d8Pseudo_UPD
VST4d8Pseudo_UPD
VLD2LNd8Pseudo_UPD
VST2LNd8Pseudo_UPD
VLD3LNd8Pseudo_UPD
VST3LNd8Pseudo_UPD
VLD4LNd8Pseudo_UPD
VST4LNd8Pseudo_UPD
VLD3DUPd8Pseudo_UPD
VLD4DUPd8Pseudo_UPD
VLD3q8Pseudo_UPD
VST3q8Pseudo_UPD
VLD4q8Pseudo_UPD
VST4q8Pseudo_UPD
VLD1LNq8Pseudo_UPD
VST1LNq8Pseudo_UPD
VLD3q32oddPseudo_UPD
VST3q32oddPseudo_UPD
VLD4q32oddPseudo_UPD
VST4q32oddPseudo_UPD
VLD3q16oddPseudo_UPD
VST3q16oddPseudo_UPD
VLD4q16oddPseudo_UPD
VST4q16oddPseudo_UPD
VLD3q8oddPseudo_UPD
VST3q8oddPseudo_UPD
VLD4q8oddPseudo_UPD
VST4q8oddPseudo_UPD
VLDRD
VTOSIRD
VTOUIRD
VMOVRRD
VSTRD
VABSD
VNMLSD
t2SMLSD
VMLSD
VFMSD
VFNMSD
VCVTSD
t2SMUSD
VSQRTD
FCONSTD
VDIVD
VMOVD
t2LDREXD
t2STREXD
VCMPEZD
VTOSIZD
VTOUIZD
VCMPZD
REG_SEQUENCE
tWFE
BUNDLE
t2LDC2_PRE
t2STC2_PRE
t2LDRB_PRE
t2STRB_PRE
t2LDRSB_PRE
t2LDC_PRE
t2STC_PRE
t2LDRD_PRE
t2STRD_PRE
t2LDRH_PRE
t2STRH_PRE
t2LDRSH_PRE
t2LDC2L_PRE
t2STC2L_PRE
t2LDCL_PRE
t2STCL_PRE
t2LDR_PRE
t2STR_PRE
DBG_VALUE
IMPLICIT_DEF
t2DBG
EXTRACT_SUBREG
INSERT_SUBREG
LDRB_PRE_REG
STRB_PRE_REG
LDR_PRE_REG
STR_PRE_REG
SUBREG_TO_REG
LDRB_POST_REG
STRB_POST_REG
LDR_POST_REG
STR_POST_REG
LDRBT_POST_REG
STRBT_POST_REG
LDRT_POST_REG
STRT_POST_REG
t2SXTAH
t2UXTAH
t2TBH
PICLDRH
PICSTRH
VCVTBSH
PICLDRSH
tLDRSH
VCVTTSH
tPUSH
t2REVSH
tREVSH
t2SXTH
tSXTH
t2UXTH
tUXTH
t2LDREXH
t2STREXH
t2BFI
tWFI
t2BXJ
t2UMAAL
t2SMLAL
t2UMLAL
GC_LABEL
PROLOG_LABEL
EH_LABEL
t2SEL
BMOVPCB_CALL
tBX_CALL
BMOVPCRX_CALL
KILL
t2SMULL
t2UMULL
t2MUL
t2SMMUL
tMUL
LDRB_PRE_IMM
STRB_PRE_IMM
LDR_PRE_IMM
STR_PRE_IMM
LDRB_POST_IMM
STRB_POST_IMM
LDR_POST_IMM
STR_POST_IMM
LDRBT_POST_IMM
STRBT_POST_IMM
LDRT_POST_IMM
STRT_POST_IMM
INLINEASM
tLDRpciASM
t2MSR_M
t2MRS_M
t2LDC2_OPTION
t2STC2_OPTION
t2LDC_OPTION
t2STC_OPTION
t2LDC2L_OPTION
t2STC2L_OPTION
t2LDCL_OPTION
t2STCL_OPTION
tMVN
tADJCALLSTACKDOWN
tTRAP
tCDP
VNOP
tNOP
tPOP
tADDrSP
tADJCALLSTACKUP
VLD1d32Q
VST1d32Q
VLD1d64Q
VST1d64Q
VLD1d16Q
VST1d16Q
VSETLNi16Q
VLD1d8Q
VST1d8Q
VSETLNi8Q
t2SMMLAR
t2MSR_AR
t2MRS_AR
t2MRSsys_AR
t2MCR
t2ADR
tADR
PICLDR
MOVPCLR
t2SMMULR
tEOR
tROR
t2MCRR
VMOVDRR
tORR
VMOVSRR
t2SMMLSR
VMSR
VMOVSR
PICSTR
VNMLAS
VMLAS
VFMAS
VFNMAS
t2ABS
VSUBS
VADDS
VCVTDS
VCMPES
VNEGS
VCVTBHS
VTOSHS
VCVTTHS
VTOUHS
t2MLS
t2SMMLS
VTOSLS
VNMULS
VMULS
VTOULS
VSHTOS
VUHTOS
VSITOS
VUITOS
VSLTOS
VULTOS
tCPS
VCMPS
VLDRS
VTOSIRS
VTOUIRS
VMRS
VMOVRRS
VSTRS
VMOVRS
COPY_TO_REGCLASS
VABSS
VNMLSS
VMLSS
VFMSS
VFNMSS
VSQRTS
FCONSTS
VDIVS
VMOVS
VCMPEZS
VTOSIZS
VTOUIZS
VCMPZS
VLD1d32T
VST1d32T
VLD1d64T
VST1d64T
VLD1d16T
VST1d16T
VLD1d8T
VST1d8T
t2SSAT
t2USAT
FMSTAT
t2SMLABT
t2PKHBT
t2SMLALBT
t2SMULBT
t2LDRBT
t2STRBT
t2LDRSBT
t2LDMIA_RET
tPOP_RET
tBX_RET
t2LDC2_OFFSET
t2STC2_OFFSET
t2LDC_OFFSET
t2STC_OFFSET
t2LDC2L_OFFSET
t2STC2L_OFFSET
t2LDCL_OFFSET
t2STCL_OFFSET
t2LDRHT
t2STRHT
t2LDRSHT
t2IT
t2RBIT
t2TBB_JT
t2TBH_JT
t2BR_JT
t2LEApcrelJT
tLEApcrelJT
t2HINT
tBKPT
LIFETIME_START
t2LDRT
t2STRT
t2LDC2_POST
t2STC2_POST
t2LDRB_POST
t2STRB_POST
t2LDRSB_POST
t2LDC_POST
t2STC_POST
t2LDRD_POST
t2STRD_POST
t2LDRH_POST
t2STRH_POST
t2LDRSH_POST
t2LDC2L_POST
t2STC2L_POST
t2LDCL_POST
t2STCL_POST
t2LDR_POST
t2STR_POST
tTST
t2SMLATT
t2SMLALTT
t2SMULTT
t2SMLAWT
t2SMULWT
t2REV
tREV
tSEV
t2SDIV
t2UDIV
t2RFEIAW
t2RFEDBW
t2SHSAX
t2UHSAX
t2QSAX
t2UQSAX
t2SSAX
t2USAX
t2SMLADX
t2SMUADX
t2SMLALDX
t2SMLSLDX
t2SMLSDX
t2SMUSDX
t2LDREX
t2CLREX
t2STREX
t2SBFX
t2UBFX
MOVPCRX
t2RRX
t2SHASX
t2UHASX
t2QASX
t2UQASX
t2SASX
t2UASX
COPY
CONSTPOOL_ENTRY
tCBZ
t2CLZ
tCBNZ
t2Bcc
tBcc
VMOVDcc
VMOVScc
t2LDRpci_pic
tLDRpci_pic
VDUPLN32d
VDUP32d
VNEGs32d
VDUPLN16d
VDUP16d
VNEGs16d
VDUPLN8d
VDUP8d
VNEGs8d
VBICd
VANDd
VACGEd
VRECPEd
VRSQRTEd
VBIFd
VBSLd
VORNd
VMVNd
tTAILJMPd
VSWPd
VEORd
VORRd
VACGTd
VBITd
VCNTd
BR_JTadd
BL_pred
BX_pred
BLX_pred
VLD2q32PseudoWB_fixed
VST2q32PseudoWB_fixed
VLD2q16PseudoWB_fixed
VST2q16PseudoWB_fixed
VLD2q8PseudoWB_fixed
VST2q8PseudoWB_fixed
VST1d64QPseudoWB_fixed
VST1d64TPseudoWB_fixed
VLD2b32wb_fixed
VST2b32wb_fixed
VLD1d32wb_fixed
VST1d32wb_fixed
VLD2d32wb_fixed
VST2d32wb_fixed
VLD1DUPd32wb_fixed
VLD2DUPd32wb_fixed
VLD1q32wb_fixed
VST1q32wb_fixed
VLD2q32wb_fixed
VST2q32wb_fixed
VLD1DUPq32wb_fixed
VLD2DUPd32x2wb_fixed
VLD2DUPd16x2wb_fixed
VLD2DUPd8x2wb_fixed
VLD1d64wb_fixed
VST1d64wb_fixed
VLD1q64wb_fixed
VST1q64wb_fixed
VLD2b16wb_fixed
VST2b16wb_fixed
VLD1d16wb_fixed
VST1d16wb_fixed
VLD2d16wb_fixed
VST2d16wb_fixed
VLD1DUPd16wb_fixed
VLD2DUPd16wb_fixed
VLD1q16wb_fixed
VST1q16wb_fixed
VLD2q16wb_fixed
VST2q16wb_fixed
VLD1DUPq16wb_fixed
VLD2b8wb_fixed
VST2b8wb_fixed
VLD1d8wb_fixed
VST1d8wb_fixed
VLD2d8wb_fixed
VST2d8wb_fixed
VLD1DUPd8wb_fixed
VLD2DUPd8wb_fixed
VLD1q8wb_fixed
VST1q8wb_fixed
VLD2q8wb_fixed
VST2q8wb_fixed
VLD1DUPq8wb_fixed
VLD1d32Qwb_fixed
VST1d32Qwb_fixed
VLD1d64Qwb_fixed
VST1d64Qwb_fixed
VLD1d16Qwb_fixed
VST1d16Qwb_fixed
VLD1d8Qwb_fixed
VST1d8Qwb_fixed
VLD1d32Twb_fixed
VST1d32Twb_fixed
VLD1d64Twb_fixed
VST1d64Twb_fixed
VLD1d16Twb_fixed
VST1d16Twb_fixed
VLD1d8Twb_fixed
VST1d8Twb_fixed
VCVTs2fd
VCVTxs2fd
VCVTu2fd
VCVTxu2fd
VMLAfd
VFMAfd
VSUBfd
VABDfd
VADDfd
VCGEfd
VRECPEfd
VRSQRTEfd
VNEGfd
VMULfd
VMINfd
VCEQfd
VABSfd
VMLSfd
VFMSfd
VRECPSfd
VRSQRTSfd
VCGTfd
VMAXfd
VMLAslfd
VMULslfd
VMLSslfd
VMULpd
VCVTf2sd
VCVTf2xsd
VCVTf2ud
VCVTf2xud
VCVTh2f
VPADDf
VPMINf
VPMAXf
VDUPfdf
VDUPfqf
t2MOVsra_flag
t2MOVsrl_flag
tBX_RET_vararg
VCVTf2h
tLDRBi
tSTRBi
t2MVNCCi
t2MOVCCi
tLDRHi
tSTRHi
LSLi
t2MVNi
tADDrSPi
tLDRi
RORi
ASRi
LSRi
MSRi
tSTRi
LDRSBTi
LDRHTi
STRHTi
LDRSHTi
t2MOVi
tBLXi
RRXi
t2LDRBpci
t2LDRSBpci
t2LDRHpci
t2LDRSHpci
t2LDRpci
tLDRpci
TCRETURNdi
tSUBspi
tADDspi
tLDRspi
tSTRspi
t2RSBri
t2SUBri
t2SBCri
t2ADCri
t2BICri
RSCri
t2ADDri
t2ANDri
t2LSLri
tLSLri
t2CMNri
t2ORNri
TCRETURNri
t2CMPri
t2TEQri
t2EORri
t2RORri
t2ORRri
t2ASRri
tASRri
t2LSRri
tLSRri
t2RSBSri
t2SUBSri
t2ADDSri
t2TSTri
MOVCCsi
MVNsi
t2MOVSsi
t2MOVsi
RSBrsi
SUBrsi
SBCrsi
ADCrsi
BICrsi
RSCrsi
ADDrsi
ANDrsi
CMPrsi
TEQrsi
EORrsi
ORRrsi
RSBSrsi
SUBSrsi
ADDSrsi
TSTrsi
CMNzrsi
t2LEApcrel
tLEApcrel
t2LDRBpcrel
t2LDRSBpcrel
t2LDRHpcrel
t2LDRSHpcrel
t2LDRpcrel
t2MOVTi16_ga_pcrel
t2MOVi16_ga_pcrel
t2MOV_ga_pcrel
t2MOVCClsl
BR_JTm
t2MOVCCi32imm
t2MOVi32imm
ITasm
t2MOV_ga_dyn
VLD3d32Pseudo
VST3d32Pseudo
VLD4d32Pseudo
VST4d32Pseudo
VLD2LNd32Pseudo
VST2LNd32Pseudo
VLD3LNd32Pseudo
VST3LNd32Pseudo
VLD4LNd32Pseudo
VST4LNd32Pseudo
VLD3DUPd32Pseudo
VLD4DUPd32Pseudo
VLD2q32Pseudo
VST2q32Pseudo
VLD1LNq32Pseudo
VST1LNq32Pseudo
VLD2LNq32Pseudo
VST2LNq32Pseudo
VLD3LNq32Pseudo
VST3LNq32Pseudo
VLD4LNq32Pseudo
VST4LNq32Pseudo
VTBL3Pseudo
VTBX3Pseudo
VTBL4Pseudo
VTBX4Pseudo
VLD3d16Pseudo
VST3d16Pseudo
VLD4d16Pseudo
VST4d16Pseudo
VLD2LNd16Pseudo
VST2LNd16Pseudo
VLD3LNd16Pseudo
VST3LNd16Pseudo
VLD4LNd16Pseudo
VST4LNd16Pseudo
VLD3DUPd16Pseudo
VLD4DUPd16Pseudo
VLD2q16Pseudo
VST2q16Pseudo
VLD1LNq16Pseudo
VST1LNq16Pseudo
VLD2LNq16Pseudo
VST2LNq16Pseudo
VLD3LNq16Pseudo
VST3LNq16Pseudo
VLD4LNq16Pseudo
VST4LNq16Pseudo
VLD3d8Pseudo
VST3d8Pseudo
VLD4d8Pseudo
VST4d8Pseudo
VLD2LNd8Pseudo
VST2LNd8Pseudo
VLD3LNd8Pseudo
VST3LNd8Pseudo
VLD4LNd8Pseudo
VST4LNd8Pseudo
VLD3DUPd8Pseudo
VLD4DUPd8Pseudo
VLD2q8Pseudo
VST2q8Pseudo
VLD1LNq8Pseudo
VST1LNq8Pseudo
VLD1d64QPseudo
VST1d64QPseudo
VLD1d64TPseudo
VST1d64TPseudo
VLD3q32oddPseudo
VST3q32oddPseudo
VLD4q32oddPseudo
VST4q32oddPseudo
VLD3q16oddPseudo
VST3q16oddPseudo
VLD4q16oddPseudo
VST4q16oddPseudo
VLD3q8oddPseudo
VST3q8oddPseudo
VLD4q8oddPseudo
VST4q8oddPseudo
tMOVCCr_pseudo
t2CPS1p
t2CPS2p
t2CPS3p
VMULLp
LDRcp
t2Int_eh_sjlj_setjmp_nofp
Int_eh_sjlj_dispatchsetup_nofp
tInt_eh_sjlj_longjmp
t2Int_eh_sjlj_setjmp
tInt_eh_sjlj_setjmp
tInt_eh_sjlj_dispatchsetup
VDUPLN32q
VDUP32q
VNEGf32q
VNEGs32q
VDUPLN16q
VDUP16q
VNEGs16q
VDUPLN8q
VDUP8q
VNEGs8q
VBICq
VANDq
VACGEq
VRECPEq
VRSQRTEq
VBIFq
VBSLq
VORNq
VMVNq
VSWPq
VEORq
VORRq
VACGTq
VBITq
VCNTq
VCVTs2fq
VCVTxs2fq
VCVTu2fq
VCVTxu2fq
VMLAfq
VFMAfq
VSUBfq
VABDfq
VADDfq
VCGEfq
VRECPEfq
VRSQRTEfq
VMULfq
VMINfq
VCEQfq
VABSfq
VMLSfq
VFMSfq
VRECPSfq
VRSQRTSfq
VCGTfq
VMAXfq
VMLAslfq
VMULslfq
VMLSslfq
VMULpq
VCVTf2sq
VCVTf2xsq
VCVTf2uq
VCVTf2xuq
tLDRBr
tSTRBr
t2MOVCCr
tLDRHr
tSTRHr
LSLr
t2MVNr
tCMPr
tTAILJMPr
tLDRr
RORr
ASRr
LSRr
tSTRr
tMOVSr
LDRSBTr
LDRHTr
STRHTr
LDRSHTr
tBR_JTr
t2MOVr
tMOVr
tBLXr
tBfar
MOV_ga_pcrel_ldr
VLD2q32PseudoWB_register
VST2q32PseudoWB_register
VLD2q16PseudoWB_register
VST2q16PseudoWB_register
VLD2q8PseudoWB_register
VST2q8PseudoWB_register
VST1d64QPseudoWB_register
VST1d64TPseudoWB_register
VLD2b32wb_register
VST2b32wb_register
VLD1d32wb_register
VST1d32wb_register
VLD2d32wb_register
VST2d32wb_register
VLD1DUPd32wb_register
VLD2DUPd32wb_register
VLD1q32wb_register
VST1q32wb_register
VLD2q32wb_register
VST2q32wb_register
VLD1DUPq32wb_register
VLD2DUPd32x2wb_register
VLD2DUPd16x2wb_register
VLD2DUPd8x2wb_register
VLD1d64wb_register
VST1d64wb_register
VLD1q64wb_register
VST1q64wb_register
VLD2b16wb_register
VST2b16wb_register
VLD1d16wb_register
VST1d16wb_register
VLD2d16wb_register
VST2d16wb_register
VLD1DUPd16wb_register
VLD2DUPd16wb_register
VLD1q16wb_register
VST1q16wb_register
VLD2q16wb_register
VST2q16wb_register
VLD1DUPq16wb_register
VLD2b8wb_register
VST2b8wb_register
VLD1d8wb_register
VST1d8wb_register
VLD2d8wb_register
VST2d8wb_register
VLD1DUPd8wb_register
VLD2DUPd8wb_register
VLD1q8wb_register
VST1q8wb_register
VLD2q8wb_register
VST2q8wb_register
VLD1DUPq8wb_register
VLD1d32Qwb_register
VST1d32Qwb_register
VLD1d64Qwb_register
VST1d64Qwb_register
VLD1d16Qwb_register
VST1d16Qwb_register
VLD1d8Qwb_register
VST1d8Qwb_register
VLD1d32Twb_register
VST1d32Twb_register
VLD1d64Twb_register
VST1d64Twb_register
VLD1d16Twb_register
VST1d16Twb_register
VLD1d8Twb_register
VST1d8Twb_register
tCMPhir
t2MOVCCror
tADDspr
t2RSBrr
t2SUBrr
tSUBrr
t2SBCrr
t2ADCrr
t2BICrr
RSCrr
t2ADDrr
tADDrr
t2ANDrr
t2LSLrr
tLSLrr
t2ORNrr
t2CMPrr
t2TEQrr
t2EORrr
t2RORrr
t2ORRrr
t2ASRrr
tASRrr
t2LSRrr
tLSRrr
t2SUBSrr
t2ADDSrr
t2TSTrr
tADDhirr
t2CMNzrr
MOVCCsr
MVNsr
t2MOVSsr
t2MOVsr
t2MOVCCasr
t2MOVCClsr
RSBrsr
SUBrsr
SBCrsr
ADCrsr
BICrsr
RSCrsr
ADDrsr
ANDrsr
CMPrsr
TEQrsr
EORrsr
ORRrsr
RSBSrsr
SUBSrsr
ADDSrsr
TSTrsr
CMNzrsr
t2LDRBs
t2STRBs
t2LDRSBs
t2PLDs
t2LDRHs
t2STRHs
t2LDRSHs
t2PLIs
t2MVNs
t2LDRs
t2STRs
t2PLDWs
LDRBrs
STRBrs
t2RSBrs
t2SUBrs
t2SBCrs
t2ADCrs
t2BICrs
t2ADDrs
PLDrs
t2ANDrs
PLIrs
t2ORNrs
t2CMPrs
t2TEQrs
LDRrs
t2EORrs
t2ORRrs
STRrs
t2RSBSrs
t2SUBSrs
t2ADDSrs
t2TSTrs
PLDWrs
t2CMNzrs
MRSsys
tTPsoft
t2STRB_preidx
t2STRH_preidx
t2STR_preidx
STRBi_preidx
STRi_preidx
STRBr_preidx
STRr_preidx
tCMNz
N12_GLOBAL__N_118ARMMCInstrAnalysisE
N12_GLOBAL__N_119ARMMachObjectWriterE
1VB1VB1V(
1F(d1FB1F$d1FB1F&d1F$d1F&d1F(d
d>GB>G
d>GB>G
dqH($qH$$qH&$qH$$qH&$qH($
B*DB*t
WB"F<
CaC C
CaE C
CaG CQ
B CaC C
D CaE C
F CaG CQ<,CQ>,CQ*,CQ<
Ca<Ca>Ca*CqC
G TQ<-TQ>-TQ*-TQ<
G TQ
TQ<.TQ>.TQ*.TQ<
${E $
BQUN
vUBvUBvUBvUN
veBveBve$
BGDBGDBGDBGD
BpUB
$#DB#DB#D
$0DB0DB0D
BWGB
YQ<.YQ>.YQ*.YQ<
JSB
JSBJSBJS(
rl wS
ldc2
mrc2
mrrc2
stc2
cdp2
mcr2
mcrr2
rfeda
rfeia
rfedb
rfeib
mrrc
setend
ldc2l
stc2l
mcrr
movs
bkpt
pldw
cbnz
srsda
sp!, 
srsia
sp!, 
srsdb
sp!, 
srsib
sp!, 
srsda
sp, 
srsia
sp, 
srsdb
sp, 
srsib
sp, 
vld1
vst1
vrev32
ldc2
stc2
vld2
vst2
vld3
vst3
vrev64
vld4
vst4
sxtab16
uxtab16
sxtb16
uxtb16
shsub16
uhsub16
uqsub16
ssub16
usub16
shadd16
uhadd16
uqadd16
sadd16
uadd16
ssat16
usat16
vrev16
usada8
shsub8
uhsub8
uqsub8
ssub8
usub8
usad8
shadd8
uhadd8
uqadd8
sadd8
uadd8
LIFETIME_END
BUNDLE
DBG_VALUE
LIFETIME_START
vaba
ldmda
stmda
rfeia
vldmia
vstmia
srsia
smmla
vnmla
vmla
vfma
vfnma
vrsra
vsra
sxtab
uxtab
smlabb
smlalbb
smulbb
rfedb
vldmdb
vstmdb
srsdb
ldmib
stmib
swpb
ldrb
strb
ldrsb
smlatb
pkhtb
smlaltb
smultb
vcvtb
sxtb
uxtb
qdsub
vhsub
vqsub
vsub
smlawb
smulwb
ldrexb
strexb
vbic
mrrc
smlad
smuad
vabd
qdadd
vrhadd
vhadd
vpadd
vqadd
vadd
smlald
yield
smlsld
vand
ldrd
strd
smlsd
smusd
ldrexd
strexd
vacge
vcge
vcle
vrecpe
vcmpe
vrsqrte
vbif
vqneg
vneg
sxtah
uxtah
vqdmulh
vqrdmulh
ldrh
strh
ldrsh
push
revsh
sxth
uxth
ldrexh
strexh
vsli
vsri
ldc2l
stc2l
umaal
vabal
vpadal
vqdmlal
smlal
umlal
vmlal
vtbl
vsubl
ldcl
stcl
vabdl
vpaddl
vaddl
vqshl
vqrshl
vrshl
vshl
vshll
vqdmull
smull
umull
vmull
vbsl
vqdmlsl
vmlsl
smmul
vnmul
vmul
vmovl
vrsubhn
vsubhn
vraddhn
vaddhn
vpmin
vmin
vqshrn
vqrshrn
vrshrn
vshrn
vorn
vtrn
vqshrun
vqrshrun
vqmovun
vmvn
vqmovn
vmovn
trap
vzip
vcmp
vdup
vswp
vuzp
vceq
smmlar
vldr
vrshr
vshr
smmulr
veor
mcrr
vorr
smmlsr
vmsr
vstr
vcvtr
vqabs
vabs
vcls
smmls
vnmls
vmls
vfms
vfnms
vrecps
vmrs
asrs
lsrs
vrsqrts
movs
ssat
usat
smlabt
pkhbt
smlalbt
smulbt
ldrbt
strbt
ldrsbt
vacgt
vcgt
ldrht
strht
ldrsht
rbit
vbit
vclt
vcnt
hint
bkpt
ldrt
vsqrt
strt
vtst
smlatt
smlaltt
smultt
vcvtt
vcvt
movt
smlawt
smulwt
vext
vqshlu
sdiv
udiv
vdiv
vmov
vsubw
vaddw
pldw
movw
vpmax
vmax
shsax
uhsax
uqsax
ssax
usax
vtbx
smladx
smuadx
smlaldx
smlsldx
smlsdx
smusdx
ldrex
clrex
strex
sbfx
ubfx
shasx
uhasx
uqasx
sasx
uasx
vclz
D4_D6_D8_D10
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D14_D16_D18_D20
D17_D18_D19_D20
D24_D26_D28_D30
D27_D28_D29_D30
mvfr0
D9_D10_D11
D5_D7_D9_D11
Q8_Q9_Q10_Q11
D19_D20_D21
D15_D17_D19_D21
D29_D30_D31
D25_D27_D29_D31
Q0_Q1
mvfr1
D6_D8_D10_D12
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D16_D18_D20_D22
D19_D20_D21_D22
D0_D2
D0_D1_D2
Q1_Q2
D7_D9_D11_D13
D11_D12_D13
Q10_Q11_Q12_Q13
D17_D19_D21_D23
D21_D22_D23
D1_D3
D1_D2_D3
Q0_Q1_Q2_Q3
D8_D10_D12_D14
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D18_D20_D22_D24
D21_D22_D23_D24
D0_D2_D4
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D9_D11_D13_D15
D13_D14_D15
Q12_Q13_Q14_Q15
D19_D21_D23_D25
D23_D24_D25
D1_D3_D5
D3_D4_D5
Q2_Q3_Q4_Q5
D10_D12_D14_D16
D13_D14_D15_D16
D20_D22_D24_D26
D23_D24_D25_D26
D0_D2_D4_D6
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D11_D13_D15_D17
D15_D16_D17
D21_D23_D25_D27
D25_D26_D27
D1_D3_D5_D7
D5_D6_D7
Q4_Q5_Q6_Q7
D12_D14_D16_D18
D15_D16_D17_D18
D22_D24_D26_D28
D25_D26_D27_D28
D2_D4_D6_D8
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D13_D15_D17_D19
D17_D18_D19
D23_D25_D27_D29
D27_D28_D29
D3_D5_D7_D9
D7_D8_D9
Q6_Q7_Q8_Q9
fpexc
fpsid
itstate
fpscr
apsr
cpsr
spsr
fpscr_nzcv
N4llvm14ARMInstPrinterE
N4llvm15X86Disassembler22X86GenericDisassemblerE
x)4?@
!#CDgi
%'EGkm
)+IJoq
45SUz{
68WY|~
:;[]
"$CDhj
&(EGln
*,IJpr
CDTV
EGXZ
IJ\^
<B-3_fKR
sy
>@/1acMO
uw
`eLQ
bdNP
N12_GLOBAL__N_111X86AsmLexerE
Unable to lookup field referenceUnexpected tokenNon-constant offsets are not supN12_GLOBAL__N_112X86AsmParserE
N12_GLOBAL__N_110X86OperandE
^RJJ
^RJc
JJ^^
^^JJ
JJJ]
JJ`]
KKK]
KKb]
]JJJ
]KKK
]`JJ
]bKK
JJJ]
JJ`]
KKK]
KKb]
]JJJ
]KKK
]`JJ
]bKK
JJJJ
JJJJ
JJ`J
J`JJ
KKKK
KKKK
KKbK
KbKK
JJJJ
JJJJ
JJ`J
J`JJ
KKKK
KKKK
KKbK
KbKK
^RJJJ
^RJJc
JJJ^
JJ`^
KKK^
KKb^
^JJJ
^KKK
^`JJ
^bKK
JJJ^
JJ`^
KKK^
KKb^
^JJJ
^KKK
^`JJ
^bKK
JJJ^
JJd^
^JJJ
^dJJ
JJJ^
JJc^
^JJJ
^cJJ
JJJ]
JJ`]
]JJJ
]`JJ
JJJ]
JJ`]
KKK]
KKb]
]JJJ
]KKK
]`JJ
]bKK
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJd
JJdJ
JdJJ
dJJJ
JJJJ
JJJJ
JJJc
JJcJ
JcJJ
cJJJ
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJd
JJdJ
JdJJ
dJJJ
JJJJ
JJJJ
JJJc
JJcJ
JcJJ
cJJJ
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJd
JJdJ
JdJJ
dJJJ
JJJJ
JJJJ
JJJc
JJcJ
JcJJ
cJJJ
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJJ
JJJJ
JJJd
JJdJ
JdJJ
dJJJ
JJJJ
JJJJ
JJJc
JJcJ
JcJJ
cJJJ
KKJ^
KK`^
^JKK
^`KK
KKJ^
KK`^
^JKK
^`KK
JJJ]
JJc]
]JJJ
]cJJ
JJJ]
JJ`]
KKK]
KKb]
]JJJ
]KKK
]`JJ
]bKK
JJJ^
JJ`^
KKK^
KKb^
^JJJ
^KKK
^`JJ
^bKK
JJJ]
JJ`]
KKK]
KKb]
]JJJ
]KKK
]`JJ
]bKK
JJJJ
JJJJ
JJ`J
J`JJ
KKKK
KKKK
KKbK
KbKK
JJJ]
JJ`]
KKK]
KKb]
]JJJ
]KKK
]`JJ
]bKK
JJJ^
JJ`^
^JJJ
^`JJ
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
KKKK
KKKK
KKKb
KKbK
KbKK
`JJJ
bKKK
JJJ^
JJ`^
^JJJ
^`JJ
JJJ^
JJ`^
^JJJ
^`JJ
JJJ^
JJ`^
^JJJ
^`JJ
JJJ^
JJ`^
^JJJ
^`JJ
JJJ^
JJ`^
^JJJ
^`JJ
JJJ^
JJ`^
^JJJ
^`JJ
JJJ^
JJ`^
^JJJ
^`JJ
JJJ^
JJ`^
^JJJ
^`JJ
KKK^
KKb^
^KKK
^bKK
KKK^
KKb^
^KKK
^bKK
JJJJ^
JJJ`^
JJ`J^
KKKK^
KKKb^
KKbK^
^JJJJ
^J`JJ
^KKKK
^KbKK
^`JJJ
^bKKK
JJJJ^
JJJ`^
JJ`J^
KKKK^
KKKb^
KKbK^
^JJJJ
^J`JJ
^KKKK
^KbKK
^`JJJ
^bKKK
JJ,[
JJf[
[,JJ
[fJJ
JJ,[
JJc[
[,JJ
[cJJ
JJF[
JJd[
[FJJ
[dJJ
JJ,[
JJF[
JJa[
[,JJ
[FJJ
[aJJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJ`J
J`JJ
JJJJ
JJJJ
JJJ`
JJ`J
J`JJ
`JJJ
JJJ[
JJg[
[JJJ
[gJJ
JJJ[
JJg[
[JJJ
[gJJ
^JJJ
^KKK
^`JJ
^bKK
JJJ^
JJ`^
KKK^
KKb^
^JJJ
^KKK
^`JJ
^bKK
N12_GLOBAL__N_122DarwinX86_32AsmBackendE
N12_GLOBAL__N_119DarwinX86AsmBackendE
N12_GLOBAL__N_113X86AsmBackendE
N12_GLOBAL__N_120WindowsX86AsmBackendE
N12_GLOBAL__N_119ELFX86_32AsmBackendE
N12_GLOBAL__N_116ELFX86AsmBackendE
N12_GLOBAL__N_122DarwinX86_64AsmBackendE
N12_GLOBAL__N_119ELFX86_64AsmBackendE
N4llvm2cl15OptionValueBaseIbLb0EEE
N12_GLOBAL__N_118X86ELFObjectWriterE
N4llvm18X86MCAsmInfoDarwinE
N4llvm21X86_64MCAsmInfoDarwinE
N4llvm15X86ELFMCAsmInfoE
N4llvm21X86MCAsmInfoMicrosoftE
N4llvm19X86MCAsmInfoGNUCOFFE
N4llvm2cl3optI17AsmWriterFlavorTyLb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageI17AsmWriterFlavorTyLb0ELb0EEE
N4llvm2cl6parserI17AsmWriterFlavorTyEE
N4llvm2cl11OptionValueI17AsmWriterFlavorTyEE
N4llvm2cl15OptionValueBaseI17AsmWriterFlavorTyLb0EEE
N4llvm2cl15OptionValueCopyI17AsmWriterFlavorTyEE
AL_OFFSET_TABLE__GLOBAL_OFFSET_TN12_GLOBAL__N_116X86MCCodeEmitterE
XMM10
YMM10
CR10
XMM0
YMM0
XMM11
YMM11
CR11
XMM1
YMM1
XMM12
YMM12
CR12
XMM2
YMM2
XMM13
YMM13
CR13
XMM3
YMM3
XMM14
YMM14
CR14
XMM4
YMM4
XMM15
YMM15
CR15
XMM5
YMM5
XMM6
YMM6
XMM7
YMM7
XMM8
YMM8
XMM9
YMM9
R10B
R11B
R12B
R13B
R14B
R15B
R10D
R11D
R12D
R13D
R14D
R15D
EFLAGS
R10W
R11W
R12W
R13W
R14W
R15W
FPSW
 """
DDDD
DDDD
DDDD
DDDD
DDDD
MORESTACK_RET_RESTORE_R10
LD_Fp080
LD_Fp180
CMOV_RFP80
SUB_FpI32m80
ADD_FpI32m80
MUL_FpI32m80
SUBR_FpI32m80
DIVR_FpI32m80
DIV_FpI32m80
ILD_Fp32m80
IST_Fp32m80
ISTT_Fp32m80
ILD_Fp64m80
IST_Fp64m80
ISTT_Fp64m80
SUB_FpI16m80
ADD_FpI16m80
MUL_FpI16m80
SUBR_FpI16m80
DIVR_FpI16m80
DIV_FpI16m80
ILD_Fp16m80
IST_Fp16m80
ISTT_Fp16m80
CMOVNB_Fp80
SUB_Fp80
CMOVB_Fp80
ADD_Fp80
CMOVNBE_Fp80
CMOVBE_Fp80
CMOVNE_Fp80
CMOVE_Fp80
MUL_Fp80
SIN_Fp80
CMOVNP_Fp80
CMOVP_Fp80
ABS_Fp80
CHS_Fp80
COS_Fp80
SQRT_Fp80
TST_Fp80
DIV_Fp80
UCOM_FpIr80
UCOM_Fpr80
LD_F0
V_SET0
AVX_SET0
PREFETCHT0
SUB_FrST0
ADD_FrST0
MUL_FrST0
SUBR_FrST0
DIVR_FrST0
DIV_FrST0
SUB_FPrST0
ADD_FPrST0
MUL_FPrST0
SUBR_FPrST0
DIVR_FPrST0
DIV_FPrST0
PBLENDVBrm0
BLENDVPDrm0
BLENDVPSrm0
MOV32r0
MOV64r0
MOV16r0
MOV8r0
PBLENDVBrr0
BLENDVPDrr0
BLENDVPSrr0
XSHA1
LD_F1
FPREM1
F2XM1
FYL2XP1
PREFETCHT1
JA_1
JB_1
JAE_1
JBE_1
JGE_1
JE_1
JLE_1
JNE_1
JG_1
JL_1
JO_1
JNO_1
JP_1
JMP_1
JNP_1
JS_1
JNS_1
RCL32m1
SHL32m1
ROL32m1
SAR32m1
RCR32m1
SHR32m1
ROR32m1
RCL64m1
SHL64m1
ROL64m1
SAR64m1
RCR64m1
SHR64m1
ROR64m1
RCL16m1
SHL16m1
ROL16m1
SAR16m1
RCR16m1
SHR16m1
ROR16m1
RCL8m1
SHL8m1
ROL8m1
SAR8m1
RCR8m1
SHR8m1
ROR8m1
RCL32r1
SHL32r1
ROL32r1
SAR32r1
RCR32r1
SHR32r1
ROR32r1
RCL64r1
SHL64r1
ROL64r1
SAR64r1
RCR64r1
SHR64r1
ROR64r1
RCL16r1
SHL16r1
ROL16r1
SAR16r1
RCR16r1
SHR16r1
ROR16r1
RCL8r1
SHL8r1
ROL8r1
SAR8r1
RCR8r1
SHR8r1
ROR8r1
LD_Fp032
LD_Fp132
ATOMSUB6432
ATOMADD6432
ATOMAND6432
ATOMNAND6432
ATOMMIN6432
ATOMUMIN6432
ATOMSWAP6432
ATOMOR6432
ATOMXOR6432
ATOMMAX6432
ATOMUMAX6432
INVLPGA32
PUSHA32
POPA32
VMLOAD32
LXADD32
INVPCID32
INVVPID32
ATOMAND32
ATOMNAND32
VMSAVE32
CMOV_V4F32
CMOV_V8F32
PUSHF32
POPF32
LCMPXCHG32
ATOMMIN32
ATOMUMIN32
VMRUN32
ADJCALLSTACKDOWN32
CMOV_RFP32
ADJCALLSTACKUP32
CMOV_FR32
CMOV_GR32
ATOMOR32
ATOMXOR32
SCAS32
PUSHCS32
PUSHDS32
POPDS32
PUSHES32
POPES32
PUSHFS32
POPFS32
PUSHGS32
POPGS32
CMPS32
PUSHSS32
POPSS32
IRET32
INVEPT32
ATOMMAX32
ATOMUMAX32
SEG_ALLOCA_32
REP_STOSB_32
REP_MOVSB_32
REP_STOSD_32
REP_MOVSD_32
WIN_FTOL_32
REP_STOSW_32
REP_MOVSW_32
JECXZ_32
TLSCall_32
SBB32i32
SUB32i32
ADC32i32
ADD32i32
AND32i32
CMP32i32
XOR32i32
TEST32i32
SBB64i32
SUB64i32
ADC64i32
ADD64i32
AND64i32
PUSH64i32
CMP64i32
XOR64i32
TEST64i32
MOV64ri64i32
PUSHi32
SBB64mi32
LOCK_SUB64mi32
ADC64mi32
LOCK_ADD64mi32
LOCK_AND64mi32
CMP64mi32
LOCK_XOR64mi32
LOCK_OR64mi32
TEST64mi32
MOV64mi32
IMUL64rmi32
SBB64ri32
SUB64ri32
ADC64ri32
ADD64ri32
AND64ri32
CMP64ri32
XOR64ri32
TEST64ri32
MOV64ri32
IMUL64rri32
CALL64pcrel32
JMP64pcrel32
CALLpcrel32
ST_FpP80m32
SUB_Fp80m32
ADD_Fp80m32
MUL_Fp80m32
SUBR_Fp80m32
DIVR_Fp80m32
ST_Fp80m32
DIV_Fp80m32
SUB_FpI32m32
ADD_FpI32m32
MUL_FpI32m32
SUBR_FpI32m32
DIVR_FpI32m32
DIV_FpI32m32
ILD_Fp32m32
IST_Fp32m32
ISTT_Fp32m32
CRC32r32m32
ST_FpP64m32
SUB_Fp64m32
ADD_Fp64m32
ILD_Fp64m32
MUL_Fp64m32
SUBR_Fp64m32
DIVR_Fp64m32
IST_Fp64m32
ISTT_Fp64m32
DIV_Fp64m32
SUB_FpI16m32
ADD_FpI16m32
MUL_FpI16m32
SUBR_FpI16m32
DIVR_FpI16m32
DIV_FpI16m32
ILD_Fp16m32
IST_Fp16m32
ISTT_Fp16m32
MOVSX64rm32
MOVZX64rm32
MOV32ao32
CMOVNB_Fp32
SUB_Fp32
CMOVB_Fp32
ADD_Fp32
CMOVNBE_Fp32
CMOVBE_Fp32
CMOVNE_Fp32
CMOVE_Fp32
MUL_Fp32
SIN_Fp32
CMOVNP_Fp32
CMOVP_Fp32
ABS_Fp32
CHS_Fp32
COS_Fp32
SQRT_Fp32
TST_Fp32
DIV_Fp32
CRC32r32r32
UCOM_FpIr32
TLS_addr32
TLS_base_addr32
UCOM_Fpr32
MOVSX64rr32
MOVZX64rr32
VMOVMSKPDrr32
VMOVMSKPSrr32
VMOVMSKPDYrr32
VMOVMSKPSYrr32
FLDLG2
FLDLN2
PREFETCHT2
INT3
LD_Fp064
LD_Fp164
MMX_MOVD64rrv164
INVLPGA64
VMLOAD64
LXADD64
INVPCID64
INVVPID64
ATOMAND64
ATOMNAND64
RDFSBASE64
WRFSBASE64
RDGSBASE64
WRGSBASE64
LEAVE64
VMSAVE64
FXSAVE64
CMOV_V2F64
CMOV_V4F64
PUSHF64
POPF64
LCMPXCHG64
CMOV_V2I64
CMOV_V4I64
FARCALL64
ATOMMIN64
ATOMUMIN64
EH_RETURN64
VMRUN64
ADJCALLSTACKDOWN64
CMOV_RFP64
FARJMP64
ADJCALLSTACKUP64
MMX_MASKMOVQ64
CMOV_FR64
ATOMOR64
FXRSTOR64
ATOMXOR64
SCAS64
PUSHFS64
POPFS64
PUSHGS64
POPGS64
CMPS64
IRET64
SYSRET64
SYSEXIT64
INVEPT64
XSAVEOPT64
VMASKMOVDQU64
ATOMMAX64
ATOMUMAX64
SEG_ALLOCA_64
REP_STOSB_64
REP_MOVSB_64
REP_STOSD_64
REP_MOVSD_64
VAARG_64
WIN_FTOL_64
REP_STOSQ_64
REP_MOVSQ_64
REP_STOSW_64
REP_MOVSW_64
JECXZ_64
TLSCall_64
TAILJMPd64
TCRETURNdi64
TCRETURNmi64
TCRETURNri64
ST_FpP80m64
SUB_Fp80m64
ADD_Fp80m64
MUL_Fp80m64
SUBR_Fp80m64
DIVR_Fp80m64
ST_Fp80m64
DIV_Fp80m64
SUB_FpI32m64
ADD_FpI32m64
MUL_FpI32m64
SUBR_FpI32m64
DIVR_FpI32m64
DIV_FpI32m64
ILD_Fp32m64
IST_Fp32m64
ISTT_Fp32m64
ILD_Fp64m64
IST_Fp64m64
ISTT_Fp64m64
CRC32r64m64
SUB_FpI16m64
ADD_FpI16m64
MUL_FpI16m64
SUBR_FpI16m64
DIVR_FpI16m64
DIV_FpI16m64
ILD_Fp16m64
IST_Fp16m64
ISTT_Fp16m64
TAILJMPm64
MMX_PSHUFBrm64
MMX_PSIGNBrm64
MMX_PABSBrm64
MMX_PHSUBDrm64
MMX_PHADDrm64
MMX_PSIGNDrm64
MMX_PABSDrm64
MMX_PHSUBWrm64
MMX_PHADDWrm64
MMX_PSIGNWrm64
MMX_PABSWrm64
MMX_PMADDUBSWrm64
MMX_PHSUBSWrm64
MMX_PHADDSWrm64
MMX_PMULHRSWrm64
CMOVNB_Fp64
SUB_Fp64
CMOVB_Fp64
ADD_Fp64
CMOVNBE_Fp64
CMOVBE_Fp64
CMOVNE_Fp64
CMOVE_Fp64
MUL_Fp64
SIN_Fp64
CMOVNP_Fp64
CMOVP_Fp64
ABS_Fp64
CHS_Fp64
COS_Fp64
SQRT_Fp64
TST_Fp64
DIV_Fp64
CRC32r64r64
UCOM_FpIr64
TAILJMPr64
XCHG32ar64
TLS_addr64
TLS_base_addr64
UCOM_Fpr64
MMX_PSHUFBrr64
MMX_PSIGNBrr64
VPEXTRBrr64
MMX_PABSBrr64
MMX_PHSUBDrr64
MMX_PHADDrr64
MMX_PSIGNDrr64
VMOVMSKPDrr64
MMX_PABSDrr64
VMOVMSKPSrr64
VEXTRACTPSrr64
MMX_PHSUBWrr64
MMX_PHADDWrr64
MMX_PSIGNWrr64
MMX_PABSWrr64
MMX_PMADDUBSWrr64
MMX_PHSUBSWrr64
MMX_PHADDSWrr64
MMX_PMULHRSWrr64
VMOVMSKPDYrr64
VMOVMSKPSYrr64
JA_4
JB_4
JAE_4
JBE_4
JGE_4
JE_4
JLE_4
JNE_4
JG_4
JL_4
JO_4
JNO_4
JP_4
JMP_4
JNP_4
JS_4
JNS_4
LXADD16
ATOMAND16
ATOMNAND16
PUSHF16
POPF16
LCMPXCHG16
ATOMMIN16
ATOMUMIN16
CMOV_GR16
ATOMOR16
ATOMXOR16
SCAS16
PUSHCS16
PUSHDS16
POPDS16
PUSHES16
POPES16
PUSHFS16
POPFS16
PUSHGS16
POPGS16
CMPS16
PUSHSS16
POPSS16
IRET16
ATOMMAX16
ATOMUMAX16
PUSH64i16
SBB16i16
SUB16i16
ADC16i16
ADD16i16
AND16i16
CMP16i16
XOR16i16
TEST16i16
PUSHi16
CALLpcrel16
CRC32r32m16
MOVSX32rm16
MOVZX32rm16
MOVSX64rm16
MOVZX64rm16
MOV16ao16
CRC32r32r16
MOVSX32rr16
MOVZX32rr16
MOVSX64rr16
MOVZX64rr16
XSHA256
VPABSBrm256
VPABSDrm256
VPABSWrm256
VPMADDUBSWrm256
VPHSUBSWrm256
VPHADDSWrm256
VPMULHRSWrm256
VPABSBrr256
VPABSDrr256
VPABSWrr256
VPMADDUBSWrr256
VPHSUBSWrr256
VPHADDSWrr256
VPMULHRSWrr256
VBROADCASTF128
VBROADCASTI128
VPABSBrm128
VPABSDrm128
VPABSWrm128
VPMADDUBSWrm128
VPHSUBSWrm128
VPHADDSWrm128
VPMULHRSWrm128
VPHMINPOSUWrm128
VPABSBrr128
VPABSDrr128
VPABSWrr128
VPMADDUBSWrr128
VPHSUBSWrr128
VPHADDSWrr128
VPMULHRSWrr128
VPHMINPOSUWrr128
LXADD8
ATOMAND8
ATOMNAND8
LCMPXCHG8
ATOMMIN8
ATOMUMIN8
CMOV_GR8
ATOMOR8
ATOMXOR8
SCAS8
CMPS8
ATOMMAX8
ATOMUMAX8
PUSH64i8
SBB8i8
SUB8i8
ADC8i8
AAD8i8
ADD8i8
AND8i8
AAM8i8
CMP8i8
XOR8i8
TEST8i8
PUSHi8
SBB32mi8
LOCK_SUB32mi8
ADC32mi8
BTC32mi8
LOCK_ADD32mi8
LOCK_AND32mi8
CMP32mi8
LOCK_XOR32mi8
LOCK_OR32mi8
BTR32mi8
BTS32mi8
BT32mi8
SBB64mi8
LOCK_SUB64mi8
ADC64mi8
BTC64mi8
LOCK_ADD64mi8
LOCK_AND64mi8
CMP64mi8
LOCK_XOR64mi8
LOCK_OR64mi8
BTR64mi8
BTS64mi8
BT64mi8
SBB16mi8
LOCK_SUB16mi8
ADC16mi8
BTC16mi8
LOCK_ADD16mi8
LOCK_AND16mi8
CMP16mi8
LOCK_XOR16mi8
LOCK_OR16mi8
BTR16mi8
BTS16mi8
BT16mi8
IMUL32rmi8
IMUL64rmi8
IMUL16rmi8
SBB32ri8
SUB32ri8
ADC32ri8
BTC32ri8
ADD32ri8
AND32ri8
CMP32ri8
XOR32ri8
BTR32ri8
BTS32ri8
BT32ri8
SBB64ri8
SUB64ri8
ADC64ri8
BTC64ri8
ADD64ri8
AND64ri8
CMP64ri8
XOR64ri8
BTR64ri8
BTS64ri8
BT64ri8
SBB16ri8
SUB16ri8
ADC16ri8
BTC16ri8
ADD16ri8
AND16ri8
CMP16ri8
XOR16ri8
BTR16ri8
BTS16ri8
BT16ri8
SHLD32mri8
SHRD32mri8
SHLD64mri8
SHRD64mri8
SHLD16mri8
SHRD16mri8
SHLD32rri8
SHRD32rri8
IMUL32rri8
SHLD64rri8
SHRD64rri8
IMUL64rri8
SHLD16rri8
SHRD16rri8
IMUL16rri8
CRC32r32m8
CRC32r64m8
MOVSX32rm8
MOVZX32rm8
MOVSX64rm8
MOVZX64rm8
MOVSX16rm8
MOVZX16rm8
MOVZX32_NOREXrm8
MOV8ao8
CRC32r32r8
CRC32r64r8
MOVSX32rr8
MOVZX32rr8
MOVSX64rr8
MOVZX64rr8
MOVSX16rr8
MOVZX16rr8
MOVZX32_NOREXrr8
W64ALLOCA
WIN_ALLOCA
PREFETCHNTA
UD2B
LCMPXCHG16B
LCMPXCHG8B
XCRYPTECB
ADD64ri32_DB
ADD32ri8_DB
ADD64ri8_DB
ADD16ri8_DB
ADD32ri_DB
ADD16ri_DB
ADD32rr_DB
ADD64rr_DB
ADD16rr_DB
XCRYPTCFB
XCRYPTOFB
LODSB
STOSB
OUTSB
MOVSB
XCRYPTCBC
RDPMC
VMFUNC
RDTSC
CPUID
LIFETIME_END
FsFLD0SD
LODSD
STOSD
MOVNTSD
OUTSD
MOVSD
WBINVD
FLDL2E
LFENCE
MFENCE
SFENCE
REG_SEQUENCE
CWDE
FFREE
FSCALE
BUNDLE
VMRESUME
LOOPNE
LOOPE
CDQE
XSTORE
RDFSBASE
WRFSBASE
RDGSBASE
WRGSBASE
PAUSE
DBG_VALUE
LEAVE
FXSAVE
IMPLICIT_DEF
VMXOFF
LAHF
SAHF
CMOVNB_F
CMOVB_F
CMOVNBE_F
CMOVBE_F
CMOVNE_F
CMOVE_F
XCH_F
SIN_F
CMOVNP_F
CMOVP_F
ABS_F
CHS_F
COS_F
SQRT_F
TST_F
VPCMPESTRM128REG
VPCMPISTRM128REG
EXTRACT_SUBREG
INSERT_SUBREG
SUBREG_TO_REG
INVLPG
VMLAUNCH
PREFETCH
CLFLUSH
CLGI
STGI
FLDPI
EXTRQI
INSERTQI
LRETI
FpPOP_RETVAL
RCL32mCL
SHL32mCL
ROL32mCL
SAR32mCL
RCR32mCL
SHR32mCL
ROR32mCL
RCL64mCL
SHL64mCL
ROL64mCL
SAR64mCL
RCR64mCL
SHR64mCL
ROR64mCL
RCL16mCL
SHL16mCL
ROL16mCL
SAR16mCL
RCR16mCL
SHR16mCL
ROR16mCL
RCL8mCL
SHL8mCL
ROL8mCL
SAR8mCL
RCR8mCL
SHR8mCL
ROR8mCL
RCL32rCL
SHL32rCL
ROL32rCL
SAR32rCL
RCR32rCL
SHR32rCL
ROR32rCL
RCL64rCL
SHL64rCL
ROL64rCL
SAR64rCL
RCR64rCL
SHR64rCL
ROR64rCL
RCL16rCL
SHL16rCL
ROL16rCL
SAR16rCL
RCR16rCL
SHR16rCL
ROR16rCL
RCL8rCL
SHL8rCL
ROL8rCL
SAR8rCL
RCR8rCL
SHR8rCL
ROR8rCL
SHLD32mrCL
SHRD32mrCL
SHLD64mrCL
SHRD64mrCL
SHLD16mrCL
SHRD16mrCL
SHLD32rrCL
SHRD32rrCL
SHLD64rrCL
SHRD64rrCL
SHLD16rrCL
SHRD16rrCL
GC_LABEL
PROLOG_LABEL
EH_LABEL
VMMCALL
VMCALL
SYSCALL
VZEROALL
KILL
NOOPL
LRETL
MONTMUL
FXAM
VPCMPESTRM128MEM
VPCMPISTRM128MEM
FP80_TO_INT32_IN_MEM
FP32_TO_INT32_IN_MEM
FP64_TO_INT32_IN_MEM
FP80_TO_INT64_IN_MEM
FP32_TO_INT64_IN_MEM
FP64_TO_INT64_IN_MEM
FP80_TO_INT16_IN_MEM
FP32_TO_INT16_IN_MEM
FP64_TO_INT16_IN_MEM
FPREM
INLINEASM
FPATAN
FPTAN
VMXON
EH_RETURN
INTO
TRAP
RDTSCP
FNOP
LOOP
NOOP
FCOMPP
FDECSTP
FINCSTP
EXTRQ
LODSQ
STOSQ
MOVSQ
LRETQ
INSERTQ
MMX_MASKMOVQ
MOVZX64rm16_Q
MOVZX64rr16_Q
MOVZX64rm8_Q
MOVZX64rr8_Q
VZEROUPPER
SYSENTER
MONITOR
FXRSTOR
VLDMXCSR
VSTMXCSR
RDMSR
WRMSR
XCRYPTCTR
AVX2_SETALLONES
V_SETALLONES
VASTART_SAVE_XMM_REGS
SWAPGS
FEMMS
MMX_EMMS
FSINCOS
FsFLD0SS
COPY_TO_REGCLASS
MOVNTSS
CLTS
FLDL2T
XLAT
FXTRACT
SYSRET
MORESTACK_RET
WAIT
SKINIT
FNINIT
SYSEXIT
FRNDINT
XSAVEOPT
LIFETIME_START
VMASKMOVDQU
XGETBV
XSETBV
VFMADDSUBPD4rrY_REV
VFMSUBPD4rrY_REV
VFNMSUBPD4rrY_REV
VFMSUBADDPD4rrY_REV
VFMADDPD4rrY_REV
VFNMADDPD4rrY_REV
VFMADDSUBPS4rrY_REV
VFMSUBPS4rrY_REV
VFNMSUBPS4rrY_REV
VFMSUBADDPS4rrY_REV
VFMADDPS4rrY_REV
VFNMADDPS4rrY_REV
SBB32rr_REV
SUB32rr_REV
ADC32rr_REV
ADD32rr_REV
AND32rr_REV
CMP32rr_REV
XOR32rr_REV
MOV32rr_REV
SBB64rr_REV
SUB64rr_REV
ADC64rr_REV
ADD64rr_REV
AND64rr_REV
CMP64rr_REV
XOR64rr_REV
MOV64rr_REV
VFMADDSUBPD4rr_REV
VFMSUBPD4rr_REV
VFNMSUBPD4rr_REV
VFMSUBADDPD4rr_REV
VFMADDPD4rr_REV
VFNMADDPD4rr_REV
VFMSUBSD4rr_REV
VFNMSUBSD4rr_REV
VFMADDSD4rr_REV
VFNMADDSD4rr_REV
VFMADDSUBPS4rr_REV
VFMSUBPS4rr_REV
VFNMSUBPS4rr_REV
VFMSUBADDPS4rr_REV
VFMADDPS4rr_REV
VFNMADDPS4rr_REV
VFMSUBSS4rr_REV
VFNMSUBSS4rr_REV
VFMADDSS4rr_REV
VFNMADDSS4rr_REV
SBB16rr_REV
SUB16rr_REV
ADC16rr_REV
ADD16rr_REV
AND16rr_REV
CMP16rr_REV
XOR16rr_REV
MOV16rr_REV
SBB8rr_REV
SUB8rr_REV
ADC8rr_REV
ADD8rr_REV
AND8rr_REV
CMP8rr_REV
XOR8rr_REV
MOV8rr_REV
VMOVDQArr_REV
VMOVAPDrr_REV
VMOVUPDrr_REV
VMOVSDrr_REV
VMOVAPSrr_REV
VMOVUPSrr_REV
VMOVSSrr_REV
VMOVDQUrr_REV
VMOVDQAYrr_REV
VMOVAPDYrr_REV
VMOVUPDYrr_REV
VMOVAPSYrr_REV
VMOVUPSYrr_REV
VMOVDQUYrr_REV
PREFETCHW
LRETIW
NOOPW
LODSW
STOSW
OUTSW
MOVSW
LRETW
FYL2X
FNCLEX
TEST8ri_NOREX
MOV8rm_NOREX
MOV8mr_NOREX
MOV8rr_NOREX
REX64_PREFIX
DATA16_PREFIX
REPNE_PREFIX
LOCK_PREFIX
REP_PREFIX
CS_PREFIX
DS_PREFIX
ES_PREFIX
FS_PREFIX
GS_PREFIX
SS_PREFIX
COPY
VFMADDSUBPDr231mY
VFMSUBPDr231mY
VFNMSUBPDr231mY
VFMSUBADDPDr231mY
VFMADDPDr231mY
VFNMADDPDr231mY
VFMADDSUBPSr231mY
VFMSUBPSr231mY
VFNMSUBPSr231mY
VFMSUBADDPSr231mY
VFMADDPSr231mY
VFNMADDPSr231mY
VFMADDSUBPDr132mY
VFMSUBPDr132mY
VFNMSUBPDr132mY
VFMSUBADDPDr132mY
VFMADDPDr132mY
VFNMADDPDr132mY
VFMADDSUBPSr132mY
VFMSUBPSr132mY
VFNMSUBPSr132mY
VFMSUBADDPSr132mY
VFMADDPSr132mY
VFNMADDPSr132mY
VFMADDSUBPDr213mY
VFMSUBPDr213mY
VFNMSUBPDr213mY
VFMSUBADDPDr213mY
VFMADDPDr213mY
VFNMADDPDr213mY
VFMADDSUBPSr213mY
VFMSUBPSr213mY
VFNMSUBPSr213mY
VFMSUBADDPSr213mY
VFMADDPSr213mY
VFNMADDPSr213mY
VFMADDSUBPD4rmY
VFMSUBPD4rmY
VFNMSUBPD4rmY
VFMSUBADDPD4rmY
VFMADDPD4rmY
VFNMADDPD4rmY
VFMADDSUBPS4rmY
VFMSUBPS4rmY
VFNMSUBPS4rmY
VFMSUBADDPS4rmY
VFMADDPS4rmY
VFNMADDPS4rmY
VPERMIL2PDrmY
VFRCZPDrmY
VPERMIL2PSrmY
VFRCZPSrmY
VPCMOVrmY
VFMADDSUBPDr231rY
VFMSUBPDr231rY
VFNMSUBPDr231rY
VFMSUBADDPDr231rY
VFMADDPDr231rY
VFNMADDPDr231rY
VFMADDSUBPSr231rY
VFMSUBPSr231rY
VFNMSUBPSr231rY
VFMSUBADDPSr231rY
VFMADDPSr231rY
VFNMADDPSr231rY
VFMADDSUBPDr132rY
VFMSUBPDr132rY
VFNMSUBPDr132rY
VFMSUBADDPDr132rY
VFMADDPDr132rY
VFNMADDPDr132rY
VFMADDSUBPSr132rY
VFMSUBPSr132rY
VFNMSUBPSr132rY
VFMSUBADDPSr132rY
VFMADDPSr132rY
VFNMADDPSr132rY
VFMADDSUBPDr213rY
VFMSUBPDr213rY
VFNMSUBPDr213rY
VFMSUBADDPDr213rY
VFMADDPDr213rY
VFNMADDPDr213rY
VFMADDSUBPSr213rY
VFMSUBPSr213rY
VFNMSUBPSr213rY
VFMSUBADDPSr213rY
VFMADDPSr213rY
VFNMADDPSr213rY
VFMADDSUBPD4mrY
VFMSUBPD4mrY
VFNMSUBPD4mrY
VFMSUBADDPD4mrY
VFMADDPD4mrY
VFNMADDPD4mrY
VFMADDSUBPS4mrY
VFMSUBPS4mrY
VFNMSUBPS4mrY
VFMSUBADDPS4mrY
VFMADDPS4mrY
VFNMADDPS4mrY
VPERMIL2PDmrY
VPERMIL2PSmrY
VPCMOVmrY
VFMADDSUBPD4rrY
VFMSUBPD4rrY
VFNMSUBPD4rrY
VFMSUBADDPD4rrY
VFMADDPD4rrY
VFNMADDPD4rrY
VFMADDSUBPS4rrY
VFMSUBPS4rrY
VFNMSUBPS4rrY
VFMSUBADDPS4rrY
VFMADDPS4rrY
VFNMADDPS4rrY
VPERMIL2PDrrY
VFRCZPDrrY
VPERMIL2PSrrY
VFRCZPSrrY
VPCMOVrrY
JCXZ
JRCXZ
MOV32o32a
MOV16o16a
MOV8o8a
MOV32rc
MOV64rc
TAILJMPd
OR32mrLocked
MOV32rd
MOV64rd
FARCALL32i
FARJMP32i
VPINSRWrr64i
FARCALL16i
FARJMP16i
TCRETURNdi
SBB32mi
LOCK_SUB32mi
ADC32mi
LOCK_ADD32mi
LOCK_AND32mi
RCL32mi
SHL32mi
ROL32mi
CMP32mi
SAR32mi
RCR32mi
SHR32mi
ROR32mi
LOCK_XOR32mi
LOCK_OR32mi
TEST32mi
MOV32mi
RORX32mi
RCL64mi
SHL64mi
ROL64mi
SAR64mi
RCR64mi
SHR64mi
ROR64mi
RORX64mi
SBB16mi
LOCK_SUB16mi
ADC16mi
LOCK_ADD16mi
LOCK_AND16mi
RCL16mi
SHL16mi
ROL16mi
CMP16mi
SAR16mi
RCR16mi
SHR16mi
ROR16mi
LOCK_XOR16mi
LOCK_OR16mi
TEST16mi
MOV16mi
SBB8mi
LOCK_SUB8mi
ADC8mi
LOCK_ADD8mi
LOCK_AND8mi
RCL8mi
SHL8mi
ROL8mi
CMP8mi
SAR8mi
RCR8mi
SHR8mi
ROR8mi
LOCK_XOR8mi
LOCK_OR8mi
TEST8mi
MOV8mi
VPCOMBmi
VPROTBmi
VPCOMUBmi
VPSHUFDmi
VPCOMDmi
VPERMILPDmi
VPROTDmi
VPCOMUDmi
TCRETURNmi
VPCOMQmi
VPROTQmi
VPCOMUQmi
VPERMILPSmi
MMX_PSHUFWmi
VPSHUFHWmi
VPSHUFLWmi
VPCOMWmi
VPROTWmi
VPCOMUWmi
VPSHUFDYmi
VPERMILPDYmi
VPERMPDYmi
VPERMQYmi
VPERMILPSYmi
VPSHUFHWYmi
VPSHUFLWYmi
IMUL32rmi
IMUL16rmi
VPBLENDDrmi
VBLENDPDrmi
VSHUFPDrmi
VDPPDrmi
VCMPPDrmi
VBLENDPSrmi
VSHUFPSrmi
VDPPSrmi
VCMPPSrmi
VMPSADBWrmi
VPBLENDWrmi
VPINSRWrmi
VPBLENDDYrmi
VBLENDPDYrmi
VSHUFPDYrmi
VCMPPDYrmi
VBLENDPSYrmi
VSHUFPSYrmi
VDPPSYrmi
VCMPPSYrmi
VMPSADBWYrmi
VPBLENDWYrmi
MMX_PINSRWirmi
SBB32ri
SUB32ri
ADC32ri
ADD32ri
AND32ri
RCL32ri
SHL32ri
ROL32ri
IN32ri
CMP32ri
SAR32ri
RCR32ri
SHR32ri
ROR32ri
XOR32ri
TEST32ri
MOV32ri
RORX32ri
RCL64ri
SHL64ri
ROL64ri
SAR64ri
RCR64ri
SHR64ri
ROR64ri
MOV64ri
RORX64ri
SBB16ri
SUB16ri
ADC16ri
ADD16ri
AND16ri
RCL16ri
SHL16ri
ROL16ri
IN16ri
CMP16ri
SAR16ri
RCR16ri
SHR16ri
ROR16ri
XOR16ri
TEST16ri
MOV16ri
SBB8ri
SUB8ri
ADC8ri
ADD8ri
AND8ri
RCL8ri
SHL8ri
ROL8ri
IN8ri
CMP8ri
SAR8ri
RCR8ri
SHR8ri
ROR8ri
XOR8ri
TEST8ri
MOV8ri
VPCOMBri
VPROTBri
VPCOMUBri
VPSRADri
MMX_PSRADri
VPSHUFDri
VPSLLDri
MMX_PSLLDri
VPSRLDri
MMX_PSRLDri
VPCOMDri
VPERMILPDri
VPROTDri
VPCOMUDri
TCRETURNri
VPSLLDQri
VPSRLDQri
VPSLLQri
MMX_PSLLQri
VPSRLQri
MMX_PSRLQri
VPCOMQri
VPROTQri
VPCOMUQri
VPERMILPSri
VPSRAWri
MMX_PSRAWri
MMX_PSHUFWri
VPSHUFHWri
VPSHUFLWri
VPSLLWri
MMX_PSLLWri
VPSRLWri
MMX_PSRLWri
VPCOMWri
VPEXTRWri
VPROTWri
VPCOMUWri
VPSRADYri
VPSHUFDYri
VPSLLDYri
VPSRLDYri
VPERMILPDYri
VPERMPDYri
VPSLLDQYri
VPSRLDQYri
VPSLLQYri
VPSRLQYri
VPERMQYri
VPERMILPSYri
VPSRAWYri
VPSHUFHWYri
VPSHUFLWYri
VPSLLWYri
VPSRLWYri
IMUL32rri
IMUL16rri
VPBLENDDrri
VBLENDPDrri
VSHUFPDrri
VDPPDrri
VCMPPDrri
VBLENDPSrri
VSHUFPSrri
VDPPSrri
VCMPPSrri
VMPSADBWrri
VPBLENDWrri
VPINSRWrri
VPBLENDDYrri
VBLENDPDYrri
VSHUFPDYrri
VCMPPDYrri
VBLENDPSYrri
VSHUFPSYrri
VDPPSYrri
VCMPPSYrri
VMPSADBWYrri
VPBLENDWYrri
MMX_PINSRWirri
MMX_PEXTRWirri
LD_F80m
ST_FP80m
ST_FpP80m
LD_Fp80m
VFMADDSUBPDr231m
VFMSUBPDr231m
VFNMSUBPDr231m
VFMSUBADDPDr231m
VFMADDPDr231m
VFNMADDPDr231m
VFMSUBSDr231m
VFNMSUBSDr231m
VFMADDSDr231m
VFNMADDSDr231m
VFMADDSUBPSr231m
VFMSUBPSr231m
VFNMSUBPSr231m
VFMSUBADDPSr231m
VFMADDPSr231m
VFNMADDPSr231m
VFMSUBSSr231m
VFNMSUBSSr231m
VFMADDSSr231m
VFNMADDSSr231m
VFMADDSUBPDr132m
VFMSUBPDr132m
VFNMSUBPDr132m
VFMSUBADDPDr132m
VFMADDPDr132m
VFNMADDPDr132m
VFMSUBSDr132m
VFNMSUBSDr132m
VFMADDSDr132m
VFNMADDSDr132m
VFMADDSUBPSr132m
VFMSUBPSr132m
VFNMSUBPSr132m
VFMSUBADDPSr132m
VFMADDPSr132m
VFNMADDPSr132m
VFMSUBSSr132m
VFNMSUBSSr132m
VFMADDSSr132m
VFNMADDSSr132m
LOCK_DEC32m
LOCK_INC32m
SUB_F32m
ADD_F32m
ILD_F32m
MUL_F32m
SUBR_F32m
DIVR_F32m
IST_F32m
DIV_F32m
NEG32m
SUB_FI32m
ADD_FI32m
MUL_FI32m
SUBR_FI32m
DIVR_FI32m
DIV_FI32m
FARCALL32m
IMUL32m
FCOM32m
FICOM32m
IST_FP32m
ISTT_FP32m
FARJMP32m
FCOMP32m
FICOMP32m
ST_FpP32m
NOT32m
IDIV32m
DEC64_32m
INC64_32m
SUB_Fp32m
ADD_Fp32m
LD_Fp32m
MUL_Fp32m
SUBR_Fp32m
DIVR_Fp32m
ST_Fp32m
DIV_Fp32m
VFMADDSUBPDr213m
VFMSUBPDr213m
VFNMSUBPDr213m
VFMSUBADDPDr213m
VFMADDPDr213m
VFNMADDPDr213m
VFMSUBSDr213m
VFNMSUBSDr213m
VFMADDSDr213m
VFNMADDSDr213m
VFMADDSUBPSr213m
VFMSUBPSr213m
VFNMSUBPSr213m
VFMSUBADDPSr213m
VFMADDPSr213m
VFNMADDPSr213m
VFMSUBSSr213m
VFNMSUBSSr213m
VFMADDSSr213m
VFNMADDSSr213m
LOCK_DEC64m
LOCK_INC64m
SUB_F64m
ADD_F64m
ILD_F64m
MUL_F64m
SUBR_F64m
DIVR_F64m
ST_F64m
DIV_F64m
NEG64m
CALL64m
IMUL64m
FCOM64m
IST_FP64m
ISTT_FP64m
JMP64m
FCOMP64m
ST_FpP64m
SLDT64m
NOT64m
IDIV64m
SUB_Fp64m
ADD_Fp64m
LD_Fp64m
MUL_Fp64m
SUBR_Fp64m
DIVR_Fp64m
ST_Fp64m
DIV_Fp64m
LOCK_DEC16m
LOCK_INC16m
ILD_F16m
IST_F16m
NEG16m
SUB_FI16m
ADD_FI16m
MUL_FI16m
SUBR_FI16m
DIVR_FI16m
DIV_FI16m
FARCALL16m
IMUL16m
FICOM16m
IST_FP16m
ISTT_FP16m
FARJMP16m
FICOMP16m
LGDT16m
SGDT16m
LIDT16m
SIDT16m
LLDT16m
SLDT16m
NOT16m
IDIV16m
FLDCW16m
FNSTCW16m
LMSW16m
SMSW16m
DEC64_16m
INC64_16m
LOCK_DEC8m
LOCK_INC8m
NEG8m
IMUL8m
NOT8m
IDIV8m
SETAm
SETBm
FBLDm
VMPTRLDm
VROUNDPDm
VSQRTPDm
VROUNDYPDm
VROUNDSDm
VSQRTSDm
SETAEm
SETBEm
SETGEm
SETLEm
SETNEm
SETEm
FSAVEm
SETGm
SETLm
SETNOm
SETOm
TAILJMPm
SETNPm
SETPm
FBSTPm
VMCLEARm
FRSTORm
VERRm
LTRm
STRm
SETNSm
VROUNDPSm
VRCPPSm
VRSQRTPSm
VSQRTPSm
VROUNDYPSm
VROUNDSSm
VRCPSSm
VRSQRTSSm
VSQRTSSm
SETSm
LGDTm
SGDTm
LIDTm
SIDTm
VMPTRSTm
FLDENVm
FSTENVm
VERWm
FNSTSWm
VSQRTPDYm
VRCPPSYm
VRSQRTPSYm
VSQRTPSYm
PUSH32rmm
POP32rmm
PUSH64rmm
POP64rmm
PUSH16rmm
POP16rmm
PFRCPIT1rm
PFRSQIT1rm
CMOVA32rm
SBB32rm
SUB32rm
CMOVB32rm
ADC32rm
VMREAD32rm
XADD32rm
AND32rm
CMOVAE32rm
CMOVBE32rm
CMOVGE32rm
CMOVLE32rm
CMOVNE32rm
VMWRITE32rm
CMOVE32rm
BSF32rm
CMPXCHG32rm
CMOVG32rm
BZHI32rm
BLSI32rm
BLSMSK32rm
LSL32rm
IMUL32rm
CMOVL32rm
ANDN32rm
CMOVNO32rm
CMOVO32rm
PDEP32rm
CMP32rm
CMOVNP32rm
CMOVP32rm
LAR32rm
XOR32rm
BSR32rm
BLSR32rm
BEXTR32rm
LDS32rm
BOUNDS32rm
LES32rm
LFS32rm
LGS32rm
CMOVNS32rm
LSS32rm
CMOVS32rm
POPCNT32rm
LZCNT32rm
TZCNT32rm
TEST32rm
PEXT32rm
ACQUIRE_MOV32rm
SHLX32rm
MULX32rm
SARX32rm
SHRX32rm
PFRCPIT2rm
CMOVA64rm
SBB64rm
SUB64rm
CMOVB64rm
ADC64rm
VMREAD64rm
XADD64rm
AND64rm
Int_VCVTSI2SD64rm
Int_CVTSI2SD64rm
MMX_MOVD64rm
CMOVAE64rm
CMOVBE64rm
CMOVGE64rm
CMOVLE64rm
CMOVNE64rm
VMWRITE64rm
CMOVE64rm
BSF64rm
CMPXCHG64rm
CMOVG64rm
BZHI64rm
Int_VCVTTSD2SI64rm
Int_CVTTSD2SI64rm
VCVTSD2SI64rm
Int_VCVTTSS2SI64rm
Int_CVTTSS2SI64rm
VCVTSS2SI64rm
BLSI64rm
BLSMSK64rm
LSL64rm
IMUL64rm
CMOVL64rm
ANDN64rm
CMOVNO64rm
CMOVO64rm
PDEP64rm
CMP64rm
CMOVNP64rm
CMOVP64rm
MMX_MOVQ64rm
LAR64rm
XOR64rm
BSR64rm
BLSR64rm
BEXTR64rm
LFS64rm
LGS64rm
CMOVNS64rm
Int_VCVTSI2SS64rm
Int_CVTSI2SS64rm
LSS64rm
CMOVS64rm
POPCNT64rm
LZCNT64rm
TZCNT64rm
TEST64rm
PEXT64rm
ACQUIRE_MOV64rm
SHLX64rm
MULX64rm
SARX64rm
SHRX64rm
VFMADDSUBPD4rm
VFMSUBPD4rm
VFNMSUBPD4rm
VFMSUBADDPD4rm
VFMADDPD4rm
VFNMADDPD4rm
VFMSUBSD4rm
VFNMSUBSD4rm
VFMADDSD4rm
VFNMADDSD4rm
VFMADDSUBPS4rm
VFMSUBPS4rm
VFNMSUBPS4rm
VFMSUBADDPS4rm
VFMADDPS4rm
VFNMADDPS4rm
VFMSUBSS4rm
VFNMSUBSS4rm
VFMADDSS4rm
VFNMADDSS4rm
CMOVA16rm
SBB16rm
SUB16rm
CMOVB16rm
ADC16rm
XADD16rm
AND16rm
CMOVAE16rm
CMOVBE16rm
CMOVGE16rm
CMOVLE16rm
CMOVNE16rm
CMOVE16rm
BSF16rm
CMPXCHG16rm
CMOVG16rm
LSL16rm
IMUL16rm
CMOVL16rm
CMOVNO16rm
CMOVO16rm
CMP16rm
CMOVNP16rm
CMOVP16rm
LAR16rm
XOR16rm
BSR16rm
LDS16rm
BOUNDS16rm
LES16rm
LFS16rm
LGS16rm
CMOVNS16rm
LSS16rm
CMOVS16rm
POPCNT16rm
LZCNT16rm
TZCNT16rm
TEST16rm
ACQUIRE_MOV16rm
VPALIGNR256rm
VPERM2F128rm
VINSERTF128rm
VPERM2I128rm
VINSERTI128rm
VPCMPESTRM128rm
VPCMPISTRM128rm
VPALIGNR128rm
VAESKEYGENASSIST128rm
SBB8rm
SUB8rm
ADC8rm
XADD8rm
AND8rm
CMPXCHG8rm
CMP8rm
XOR8rm
TEST8rm
ACQUIRE_MOV8rm
VMOVNTDQArm
VMOVDQArm
VPSHABrm
VPSUBBrm
VPADDBrm
VPSHUFBrm
VPAVGBrm
VPSHLBrm
VPSIGNBrm
VPCMPEQBrm
VPINSRBrm
VPSUBSBrm
VPADDSBrm
VPMINSBrm
VPSUBUSBrm
VPADDUSBrm
PAVGUSBrm
VPMAXSBrm
VPCMPGTBrm
VPROTBrm
VPBROADCASTBrm
VPMINUBrm
PFSUBrm
VPMAXUBrm
VPBLENDVBrm
VPACKSSWBrm
VPACKUSWBrm
PFACCrm
PFNACCrm
PFPNACCrm
VAESDECrm
VAESIMCrm
VAESENCrm
VPSHADrm
VPSRADrm
MMX_PSRADrm
VPHADDBDrm
VPHADDUBDrm
VPHSUBDrm
VPSUBDrm
VPMOVSXBDrm
VPMOVZXBDrm
PFADDrm
VPHADDDrm
VPADDDrm
VPGATHERDDrm
VPMACSDDrm
VPMACSSDDrm
PI2FDrm
PF2IDrm
VPSHLDrm
VPSLLDrm
MMX_PSLLDrm
VPMULLDrm
VPSRLDrm
MMX_PSRLDrm
VPANDrm
VPSIGNDrm
VPERMIL2PDrm
VCVTDQ2PDrm
VCVTPS2PDrm
FsVMOVAPDrm
FsMOVAPDrm
PSWAPDrm
VADDSUBPDrm
VHSUBPDrm
VSUBPDrm
VMINCPDrm
VMAXCPDrm
VHADDPDrm
VADDPDrm
VANDPDrm
VFsANDPDrm
VGATHERDPDrm
VUNPCKHPDrm
VMOVHPDrm
VPERMILPDrm
VUNPCKLPDrm
VMULPDrm
VMOVLPDrm
VANDNPDrm
VFsANDNPDrm
VMINPDrm
VGATHERQPDrm
VORPDrm
VXORPDrm
VFsXORPDrm
VFsORPDrm
VTESTPDrm
VMOVUPDrm
VBLENDVPDrm
VDIVPDrm
VMASKMOVPDrm
VMAXPDrm
VFRCZPDrm
VPCMPEQDrm
VPGATHERQDrm
VPINSRDrm
Int_VCVTSI2SDrm
Int_CVTSI2SDrm
Int_VCVTSS2SDrm
Int_CVTSS2SDrm
VSUBSDrm
VMINCSDrm
VMAXCSDrm
VADDSDrm
Int_VUCOMISDrm
Int_UCOMISDrm
Int_VCOMISDrm
Int_COMISDrm
VMULSDrm
VPMINSDrm
VMINSDrm
Int_VCMPSDrm
Int_CMPSDrm
VDIVSDrm
VMOVSDrm
VPMAXSDrm
VMAXSDrm
VFRCZSDrm
VMOV64toSDrm
VPCMPGTDrm
VPROTDrm
VPBROADCASTDrm
VPMINUDrm
VPMAXUDrm
VPSRAVDrm
VPSLLVDrm
VPSRLVDrm
VPMASKMOVDrm
VPHSUBWDrm
VPHADDWDrm
VPMADDWDrm
VPUNPCKHWDrm
VPUNPCKLWDrm
VPMACSWDrm
VPMADCSWDrm
VPMACSSWDrm
VPMADCSSWDrm
VPHADDUWDrm
VPMOVSXWDrm
VPMOVZXWDrm
PFCMPGErm
VPMACSDQHrm
VPMACSSDQHrm
VMOVDI2PDIrm
VMOVZDI2PDIrm
MMX_MOVZDI2PDIrm
VMOVQI2PQIrm
VMOVZQI2PQIrm
VMOVZPQILo2PQIrm
VPCMPESTRIrm
VPCMPISTRIrm
Int_VCVTTSD2SIrm
Int_CVTTSD2SIrm
VCVTSD2SIrm
Int_VCVTTSS2SIrm
Int_CVTTSS2SIrm
VCVTSS2SIrm
VPMACSDQLrm
VPMACSSDQLrm
PFMULrm
VPPERMrm
VPANDNrm
PFMINrm
PFRCPrm
VMOVDDUPrm
VMOVSHDUPrm
VMOVSLDUPrm
VPSHAQrm
VPHADDBQrm
VPHADDUBQrm
VPSUBQrm
VPMOVSXBQrm
VPMOVZXBQrm
CVTTPD2DQrm
CVTPD2DQrm
VCVTTPS2DQrm
VCVTPS2DQrm
VPHSUBDQrm
VPADDQrm
VPHADDDQrm
VPUNPCKHDQrm
VPUNPCKLDQrm
VPMULDQrm
VPUNPCKHQDQrm
VPUNPCKLQDQrm
VPCLMULQDQrm
VPGATHERDQrm
VPHADDUDQrm
VPMULUDQrm
VPMOVSXDQrm
VPMOVZXDQrm
PFCMPEQrm
VPSHLQrm
VPSLLQrm
MMX_PSLLQrm
VPSRLQrm
MMX_PSRLQrm
VPCMPEQQrm
VPGATHERQQrm
VPINSRQrm
VPCMPGTQrm
VPROTQrm
VPBROADCASTQrm
VPSLLVQrm
VPSRLVQrm
VPMASKMOVQrm
VPHADDWQrm
VPHADDUWQrm
VPMOVSXWQrm
VPMOVZXWQrm
PFSUBRrm
VPORrm
VPXORrm
CVTPD2PSrm
VCVTPH2PSrm
VPERMIL2PSrm
VCVTDQ2PSrm
FsVMOVAPSrm
FsMOVAPSrm
VADDSUBPSrm
VHSUBPSrm
VSUBPSrm
VMINCPSrm
VMAXCPSrm
VHADDPSrm
VADDPSrm
VANDPSrm
VFsANDPSrm
VGATHERDPSrm
VUNPCKHPSrm
VMOVHPSrm
VPERMILPSrm
VUNPCKLPSrm
VMULPSrm
VMOVLPSrm
VANDNPSrm
VFsANDNPSrm
VMINPSrm
VGATHERQPSrm
VORPSrm
VXORPSrm
VFsXORPSrm
VFsORPSrm
VINSERTPSrm
VTESTPSrm
VMOVUPSrm
VBLENDVPSrm
VDIVPSrm
VMASKMOVPSrm
VMAXPSrm
VFRCZPSrm
Int_VCVTSD2SSrm
Int_CVTSD2SSrm
VMOVDI2SSrm
Int_VCVTSI2SSrm
Int_CVTSI2SSrm
VSUBSSrm
VMINCSSrm
VMAXCSSrm
VADDSSrm
Int_VUCOMISSrm
Int_UCOMISSrm
Int_VCOMISSrm
Int_COMISSrm
VMULSSrm
VMINSSrm
Int_VCMPSSrm
Int_CMPSSrm
VBROADCASTSSrm
VDIVSSrm
VMOVSSrm
VMAXSSrm
VFRCZSSrm
PFCMPGTrm
PFRSQRTrm
VAESDECLASTrm
VAESENCLASTrm
VPTESTrm
VLDDQUrm
VMOVDQUrm
VPCMOVrm
VPSHAWrm
VPSRAWrm
MMX_PSRAWrm
VPHSUBBWrm
VPSADBWrm
VPHADDBWrm
VPUNPCKHBWrm
VPUNPCKLBWrm
VPHADDUBWrm
VPHSUBWrm
VPSUBWrm
VPMOVSXBWrm
VPMOVZXBWrm
VPHADDWrm
VPADDWrm
VPACKSSDWrm
VPACKUSDWrm
PI2FWrm
VPAVGWrm
VPMULHWrm
PF2IWrm
VPSHLWrm
VPSLLWrm
MMX_PSLLWrm
VPMULLWrm
VPSRLWrm
MMX_PSRLWrm
VPSIGNWrm
VPCMPEQWrm
PMULHRWrm
VPSUBSWrm
VPADDSWrm
VPMINSWrm
VPSUBUSWrm
VPADDUSWrm
VPMAXSWrm
VPCMPGTWrm
VPROTWrm
VPBROADCASTWrm
VPMULHUWrm
VPMINUWrm
VPMAXUWrm
VPMACSWWrm
VPMACSSWWrm
PFMAXrm
VCVTTPD2DQXrm
VCVTPD2DQXrm
VCVTPD2PSXrm
VMOVNTDQAYrm
VMOVDQAYrm
VPSUBBYrm
VPADDBYrm
VPSHUFBYrm
VPAVGBYrm
VPSIGNBYrm
VPCMPEQBYrm
VPSUBSBYrm
VPADDSBYrm
VPMINSBYrm
VPSUBUSBYrm
VPADDUSBYrm
VPMAXSBYrm
VPCMPGTBYrm
VPBROADCASTBYrm
VPMINUBYrm
VPMAXUBYrm
VPBLENDVBYrm
VPACKSSWBYrm
VPACKUSWBYrm
VPSRADYrm
VPHSUBDYrm
VPSUBDYrm
VPMOVSXBDYrm
VPMOVZXBDYrm
VPHADDDYrm
VPADDDYrm
VPGATHERDDYrm
VPSLLDYrm
VPMULLDYrm
VPSRLDYrm
VPERMDYrm
VPANDYrm
VPSIGNDYrm
VCVTDQ2PDYrm
VCVTPS2PDYrm
VMOVAPDYrm
VADDSUBPDYrm
VHSUBPDYrm
VSUBPDYrm
VMINCPDYrm
VMAXCPDYrm
VHADDPDYrm
VADDPDYrm
VANDPDYrm
VGATHERDPDYrm
VUNPCKHPDYrm
VPERMILPDYrm
VUNPCKLPDYrm
VMULPDYrm
VANDNPDYrm
VMINPDYrm
VGATHERQPDYrm
VORPDYrm
VXORPDYrm
VTESTPDYrm
VMOVUPDYrm
VBLENDVPDYrm
VDIVPDYrm
VMASKMOVPDYrm
VMAXPDYrm
VPCMPEQDYrm
VPGATHERQDYrm
VPMINSDYrm
VBROADCASTSDYrm
VPMAXSDYrm
VPCMPGTDYrm
VPBROADCASTDYrm
VPMINUDYrm
VPMAXUDYrm
VPSRAVDYrm
VPSLLVDYrm
VPSRLVDYrm
VPMASKMOVDYrm
VPMADDWDYrm
VPUNPCKHWDYrm
VPUNPCKLWDYrm
VPMOVSXWDYrm
VPMOVZXWDYrm
VPANDNYrm
VMOVDDUPYrm
VMOVSHDUPYrm
VMOVSLDUPYrm
VPSUBQYrm
VPMOVSXBQYrm
VPMOVZXBQYrm
VCVTTPD2DQYrm
VCVTPD2DQYrm
VCVTTPS2DQYrm
VCVTPS2DQYrm
VPADDQYrm
VPUNPCKHDQYrm
VPUNPCKLDQYrm
VPMULDQYrm
VPUNPCKHQDQYrm
VPUNPCKLQDQYrm
VPGATHERDQYrm
VPMULUDQYrm
VPMOVSXDQYrm
VPMOVZXDQYrm
VPSLLQYrm
VPSRLQYrm
VPCMPEQQYrm
VPGATHERQQYrm
VPCMPGTQYrm
VPBROADCASTQYrm
VPSLLVQYrm
VPSRLVQYrm
VPMASKMOVQYrm
VPMOVSXWQYrm
VPMOVZXWQYrm
VPORYrm
VPXORYrm
VCVTPD2PSYrm
VCVTPH2PSYrm
VCVTDQ2PSYrm
VMOVAPSYrm
VADDSUBPSYrm
VHSUBPSYrm
VSUBPSYrm
VMINCPSYrm
VMAXCPSYrm
VHADDPSYrm
VADDPSYrm
VANDPSYrm
VGATHERDPSYrm
VUNPCKHPSYrm
VPERMILPSYrm
VUNPCKLPSYrm
VMULPSYrm
VPERMPSYrm
VANDNPSYrm
VMINPSYrm
VGATHERQPSYrm
VORPSYrm
VXORPSYrm
VTESTPSYrm
VMOVUPSYrm
VBLENDVPSYrm
VDIVPSYrm
VMASKMOVPSYrm
VMAXPSYrm
VBROADCASTSSYrm
VPTESTYrm
VLDDQUYrm
VMOVDQUYrm
VPSRAWYrm
VPSADBWYrm
VPUNPCKHBWYrm
VPUNPCKLBWYrm
VPHSUBWYrm
VPSUBWYrm
VPMOVSXBWYrm
VPMOVZXBWYrm
VPHADDWYrm
VPADDWYrm
VPACKSSDWYrm
VPACKUSDWYrm
VPAVGWYrm
VPMULHWYrm
VPSLLWYrm
VPMULLWYrm
VPSRLWYrm
VPSIGNWYrm
VPCMPEQWYrm
VPSUBSWYrm
VPADDSWYrm
VPMINSWYrm
VPSUBUSWYrm
VPADDUSWYrm
VPMAXSWYrm
VPCMPGTWYrm
VPBROADCASTWYrm
VPMULHUWYrm
VPMINUWYrm
VPMAXUWYrm
MMX_PALIGNR64irm
MMX_PSUBBirm
MMX_PADDBirm
MMX_PAVGBirm
MMX_PCMPEQBirm
MMX_PSUBSBirm
MMX_PADDSBirm
MMX_PSUBUSBirm
MMX_PADDUSBirm
MMX_PCMPGTBirm
MMX_PMINUBirm
MMX_PMAXUBirm
MMX_PACKSSWBirm
MMX_PACKUSWBirm
MMX_PSUBDirm
MMX_PADDDirm
MMX_PANDirm
MMX_CVTPI2PDirm
MMX_PCMPEQDirm
MMX_PCMPGTDirm
MMX_PMADDWDirm
MMX_PUNPCKHWDirm
MMX_PUNPCKLWDirm
MMX_CVTTPD2PIirm
MMX_CVTPD2PIirm
MMX_CVTTPS2PIirm
MMX_CVTPS2PIirm
MMX_PANDNirm
MMX_PSUBQirm
MMX_PADDQirm
MMX_PUNPCKHDQirm
MMX_PUNPCKLDQirm
MMX_PMULUDQirm
MMX_PORirm
MMX_PXORirm
MMX_CVTPI2PSirm
MMX_PSADBWirm
MMX_PUNPCKHBWirm
MMX_PUNPCKLBWirm
MMX_PSUBWirm
MMX_PADDWirm
MMX_PACKSSDWirm
MMX_PAVGWirm
MMX_PMULHWirm
MMX_PMULLWirm
MMX_PCMPEQWirm
MMX_PSUBSWirm
MMX_PADDSWirm
MMX_PMINSWirm
MMX_PSUBUSWirm
MMX_PADDUSWirm
MMX_PMAXSWirm
MMX_PCMPGTWirm
MMX_PMULHUWirm
MOV32sm
MOV64sm
MOV16sm
SUB_FST0r
ADD_FST0r
MUL_FST0r
COM_FST0r
COMP_FST0r
SUBR_FST0r
DIVR_FST0r
DIV_FST0r
VFMADDSUBPDr231r
VFMSUBPDr231r
VFNMSUBPDr231r
VFMSUBADDPDr231r
VFMADDPDr231r
VFNMADDPDr231r
VFMSUBSDr231r
VFNMSUBSDr231r
VFMADDSDr231r
VFNMADDSDr231r
VFMADDSUBPSr231r
VFMSUBPSr231r
VFNMSUBPSr231r
VFMSUBADDPSr231r
VFMADDPSr231r
VFNMADDPSr231r
VFMSUBSSr231r
VFNMSUBSSr231r
VFMADDSSr231r
VFNMADDSSr231r
VFMADDSUBPDr132r
VFMSUBPDr132r
VFNMSUBPDr132r
VFMSUBADDPDr132r
VFMADDPDr132r
VFNMADDPDr132r
VFMSUBSDr132r
VFNMSUBSDr132r
VFMADDSDr132r
VFNMADDSDr132r
VFMADDSUBPSr132r
VFMSUBPSr132r
VFNMSUBPSr132r
VFMSUBADDPSr132r
VFMADDPSr132r
VFNMADDPSr132r
VFMSUBSSr132r
VFNMSUBSSr132r
VFMADDSSr132r
VFNMADDSSr132r
LEA32r
DEC32r
INC32r
MOVPC32r
SETB_C32r
RDRAND32r
NEG32r
PUSH32r
CALL32r
IMUL32r
BSWAP32r
JMP32r
POP32r
STR32r
SLDT32r
NOT32r
IDIV32r
SMSW32r
LEA64_32r
DEC64_32r
INC64_32r
VFMADDSUBPDr213r
VFMSUBPDr213r
VFNMSUBPDr213r
VFMSUBADDPDr213r
VFMADDPDr213r
VFNMADDPDr213r
VFMSUBSDr213r
VFNMSUBSDr213r
VFMADDSDr213r
VFNMADDSDr213r
VFMADDSUBPSr213r
VFMSUBPSr213r
VFNMSUBPSr213r
VFMSUBADDPSr213r
VFMADDPSr213r
VFNMADDPSr213r
VFMSUBSSr213r
VFNMSUBSSr213r
VFMADDSSr213r
VFNMADDSSr213r
LEA64r
DEC64r
INC64r
SETB_C64r
RDRAND64r
NEG64r
PUSH64r
CALL64r
IMUL64r
BSWAP64r
JMP64r
POP64r
STR64r
SLDT64r
NOT64r
IDIV64r
SMSW64r
VPMOVMSKBr64r
VMOVMSKPDr64r
VMOVMSKPSr64r
VPMOVMSKBYr64r
VMOVMSKPDYr64r
VMOVMSKPSYr64r
LEA16r
DEC16r
INC16r
SETB_C16r
RDRAND16r
NEG16r
PUSH16r
IMUL16r
POP16r
STR16r
LLDT16r
SLDT16r
NOT16r
IDIV16r
LMSW16r
SMSW16r
FNSTSW16r
DEC64_16r
INC64_16r
DEC8r
INC8r
SETB_C8r
NEG8r
IMUL8r
NOT8r
IDIV8r
SETAr
SETBr
VROUNDPDr
VSQRTPDr
VROUNDYPDr
VROUNDSDr
VSQRTSDr
SETAEr
SETBEr
SETGEr
SETLEr
SETNEr
SETEr
UCOM_Fr
SETGr
UCOM_FIr
SETLr
SETNOr
SETOr
UCOM_FPr
UCOM_FIPr
TAILJMPr
SETNPr
UCOM_FPPr
SETPr
VERRr
LTRr
SETNSr
VROUNDPSr
VRCPPSr
VRSQRTPSr
VSQRTPSr
VROUNDYPSr
VROUNDSSr
VRCPSSr
VRSQRTSSr
VSQRTSSr
SETSr
VERWr
VSQRTPDYr
VRCPPSYr
VRSQRTPSYr
VSQRTPSYr
XCHG32ar
XCHG64ar
XCHG16ar
MOV32cr
MOV64cr
MOV32dr
MOV64dr
Int_MemBarrier
OUT32ir
OUT16ir
OUT8ir
SBB32mr
LOCK_SUB32mr
ADC32mr
BTC32mr
LOCK_ADD32mr
LOCK_AND32mr
MOVBE32mr
CMP32mr
LOCK_XOR32mr
LOCK_OR32mr
BTR32mr
BTS32mr
BT32mr
RELEASE_MOV32mr
SBB64mr
LOCK_SUB64mr
ADC64mr
BTC64mr
LOCK_ADD64mr
LOCK_AND64mr
MMX_MOVD64mr
MOVBE64mr
CMP64mr
MMX_MOVQ64mr
LOCK_XOR64mr
LOCK_OR64mr
BTR64mr
BTS64mr
BT64mr
RELEASE_MOV64mr
MOVNTI_64mr
VMOVSDto64mr
VFMADDSUBPD4mr
VFMSUBPD4mr
VFNMSUBPD4mr
VFMSUBADDPD4mr
VFMADDPD4mr
VFNMADDPD4mr
VFMSUBSD4mr
VFNMSUBSD4mr
VFMADDSD4mr
VFNMADDSD4mr
VFMADDSUBPS4mr
VFMSUBPS4mr
VFNMSUBPS4mr
VFMSUBADDPS4mr
VFMADDPS4mr
VFNMADDPS4mr
VFMSUBSS4mr
VFNMSUBSS4mr
VFMADDSS4mr
VFNMADDSS4mr
SBB16mr
LOCK_SUB16mr
ADC16mr
BTC16mr
LOCK_ADD16mr
LOCK_AND16mr
MOVBE16mr
ARPL16mr
CMP16mr
LOCK_XOR16mr
LOCK_OR16mr
BTR16mr
BTS16mr
BT16mr
RELEASE_MOV16mr
VEXTRACTF128mr
VEXTRACTI128mr
VMOVLQ128mr
SBB8mr
LOCK_SUB8mr
ADC8mr
LOCK_ADD8mr
LOCK_AND8mr
CMP8mr
LOCK_XOR8mr
LOCK_OR8mr
RELEASE_MOV8mr
VMOVDQAmr
VPSHABmr
VPSHLBmr
VPEXTRBmr
VPROTBmr
VPSHADmr
VPSHLDmr
VPERMIL2PDmr
VMOVAPDmr
VMOVHPDmr
VMOVLPDmr
VMOVNTPDmr
VMOVUPDmr
VMASKMOVPDmr
VPEXTRDmr
VMOVSDmr
VPROTDmr
VPMASKMOVDmr
VCVTPS2PHmr
VMOVPDI2DImr
VMOVSS2DImr
VMOVPQI2QImr
MOVNTImr
VPPERMmr
VPSHAQmr
VMOVNTDQmr
VPSHLQmr
VPEXTRQmr
MMX_MOVNTQmr
VPROTQmr
VPMASKMOVQmr
VPERMIL2PSmr
VMOVAPSmr
VMOVHPSmr
VMOVLPSmr
VEXTRACTPSmr
VMOVNTPSmr
VMOVUPSmr
VMASKMOVPSmr
VMOVSSmr
VMOVDQUmr
VPCMOVmr
VPSHAWmr
VPSHLWmr
VPEXTRWmr
VPROTWmr
VMOVDQAYmr
VMOVAPDYmr
VMOVNTPDYmr
VMOVUPDYmr
VMASKMOVPDYmr
VPMASKMOVDYmr
VCVTPS2PHYmr
VMOVNTDQYmr
VPMASKMOVQYmr
VMOVAPSYmr
VMOVNTPSYmr
VMOVUPSYmr
VMASKMOVPSYmr
VMOVDQUYmr
PUSH32rmr
POP32rmr
PUSH64rmr
POP64rmr
PUSH16rmr
POP16rmr
PFRCPIT1rr
PFRSQIT1rr
CMOVA32rr
SBB32rr
SUB32rr
CMOVB32rr
ADC32rr
BTC32rr
VMREAD32rr
XADD32rr
AND32rr
CMOVAE32rr
CMOVBE32rr
CMOVGE32rr
CMOVLE32rr
CMOVNE32rr
VMWRITE32rr
CMOVE32rr
BSF32rr
CMPXCHG32rr
CMOVG32rr
BZHI32rr
BLSI32rr
BLSMSK32rr
LSL32rr
IMUL32rr
CMOVL32rr
ANDN32rr
IN32rr
CMOVNO32rr
CMOVO32rr
PDEP32rr
CMP32rr
CMOVNP32rr
CMOVP32rr
LAR32rr
XOR32rr
BSR32rr
BLSR32rr
BTR32rr
BEXTR32rr
CMOVNS32rr
BTS32rr
CMOVS32rr
BT32rr
POPCNT32rr
LZCNT32rr
TZCNT32rr
TEST32rr
OUT32rr
PEXT32rr
MOV32rr
SHLX32rr
MULX32rr
SARX32rr
SHRX32rr
PFRCPIT2rr
CMOVA64rr
SBB64rr
SUB64rr
CMOVB64rr
ADC64rr
BTC64rr
VMREAD64rr
XADD64rr
AND64rr
Int_VCVTSI2SD64rr
Int_CVTSI2SD64rr
MMX_MOVD64rr
CMOVAE64rr
CMOVBE64rr
CMOVGE64rr
CMOVLE64rr
CMOVNE64rr
VMWRITE64rr
CMOVE64rr
BSF64rr
CMPXCHG64rr
CMOVG64rr
BZHI64rr
Int_VCVTTSD2SI64rr
Int_CVTTSD2SI64rr
VCVTSD2SI64rr
Int_VCVTTSS2SI64rr
Int_CVTTSS2SI64rr
VCVTSS2SI64rr
BLSI64rr
BLSMSK64rr
LSL64rr
IMUL64rr
CMOVL64rr
ANDN64rr
CMOVNO64rr
CMOVO64rr
PDEP64rr
CMP64rr
CMOVNP64rr
CMOVP64rr
MMX_MOVQ64rr
LAR64rr
MMX_MOVQ2FR64rr
XOR64rr
BSR64rr
BLSR64rr
BTR64rr
BEXTR64rr
CMOVNS64rr
Int_VCVTSI2SS64rr
Int_CVTSI2SS64rr
BTS64rr
CMOVS64rr
BT64rr
POPCNT64rr
LZCNT64rr
TZCNT64rr
TEST64rr
PEXT64rr
MOV64rr
SHLX64rr
MULX64rr
SARX64rr
SHRX64rr
VMOVQd64rr
MMX_MOVD64from64rr
MMX_MOVD64to64rr
VMOVSDto64rr
VMOVPQIto64rr
VMOVQs64rr
VFMADDSUBPD4rr
VFMSUBPD4rr
VFNMSUBPD4rr
VFMSUBADDPD4rr
VFMADDPD4rr
VFNMADDPD4rr
VFMSUBSD4rr
VFNMSUBSD4rr
VFMADDSD4rr
VFNMADDSD4rr
VFMADDSUBPS4rr
VFMSUBPS4rr
VFNMSUBPS4rr
VFMSUBADDPS4rr
VFMADDPS4rr
VFNMADDPS4rr
VFMSUBSS4rr
VFNMSUBSS4rr
VFMADDSS4rr
VFNMADDSS4rr
CMOVA16rr
SBB16rr
SUB16rr
CMOVB16rr
ADC16rr
BTC16rr
XADD16rr
AND16rr
CMOVAE16rr
CMOVBE16rr
CMOVGE16rr
CMOVLE16rr
CMOVNE16rr
CMOVE16rr
BSF16rr
CMPXCHG16rr
CMOVG16rr
ARPL16rr
LSL16rr
IMUL16rr
CMOVL16rr
IN16rr
CMOVNO16rr
CMOVO16rr
CMP16rr
CMOVNP16rr
CMOVP16rr
LAR16rr
XOR16rr
BSR16rr
BTR16rr
CMOVNS16rr
BTS16rr
CMOVS16rr
BT16rr
POPCNT16rr
LZCNT16rr
TZCNT16rr
TEST16rr
OUT16rr
MOV16rr
VPALIGNR256rr
VPERM2F128rr
VEXTRACTF128rr
VINSERTF128rr
VPERM2I128rr
VEXTRACTI128rr
VINSERTI128rr
VPCMPESTRM128rr
VPCMPISTRM128rr
VPALIGNR128rr
VAESKEYGENASSIST128rr
SBB8rr
SUB8rr
ADC8rr
XADD8rr
AND8rr
CMPXCHG8rr
IN8rr
CMP8rr
XOR8rr
TEST8rr
OUT8rr
MOV8rr
VMOVDQArr
VPSHABrr
VPSUBBrr
VPADDBrr
VPSHUFBrr
VPAVGBrr
VPMOVMSKBrr
MMX_PMOVMSKBrr
VPSHLBrr
VPSIGNBrr
VPCMPEQBrr
VPINSRBrr
VPEXTRBrr
VPSUBSBrr
VPADDSBrr
VPMINSBrr
VPSUBUSBrr
VPADDUSBrr
PAVGUSBrr
VPMAXSBrr
VPCMPGTBrr
VPROTBrr
VPBROADCASTBrr
VPMINUBrr
PFSUBrr
VPMAXUBrr
VPBLENDVBrr
VPACKSSWBrr
VPACKUSWBrr
PFACCrr
PFNACCrr
PFPNACCrr
VAESDECrr
VAESIMCrr
VAESENCrr
VPSHADrr
VPSRADrr
MMX_PSRADrr
VPHADDBDrr
VPHADDUBDrr
VPHSUBDrr
VPSUBDrr
VPMOVSXBDrr
VPMOVZXBDrr
PFADDrr
VPHADDDrr
VPADDDrr
VPMACSDDrr
VPMACSSDDrr
PI2FDrr
PF2IDrr
VPSHLDrr
VPSLLDrr
MMX_PSLLDrr
VPMULLDrr
VPSRLDrr
MMX_PSRLDrr
VPANDrr
VPSIGNDrr
VPERMIL2PDrr
VCVTDQ2PDrr
VCVTPS2PDrr
FsVMOVAPDrr
FsMOVAPDrr
PSWAPDrr
VADDSUBPDrr
VHSUBPDrr
VSUBPDrr
VMINCPDrr
VMAXCPDrr
VHADDPDrr
VADDPDrr
VANDPDrr
VFsANDPDrr
VUNPCKHPDrr
VPERMILPDrr
VUNPCKLPDrr
VMULPDrr
VANDNPDrr
VFsANDNPDrr
VMINPDrr
VORPDrr
VXORPDrr
VFsXORPDrr
VFsORPDrr
VTESTPDrr
VMOVUPDrr
VBLENDVPDrr
VDIVPDrr
VMAXPDrr
VFRCZPDrr
VPCMPEQDrr
VPINSRDrr
VPEXTRDrr
Int_VCVTSI2SDrr
Int_CVTSI2SDrr
Int_VCVTSS2SDrr
Int_CVTSS2SDrr
VSUBSDrr
VMINCSDrr
VMAXCSDrr
VADDSDrr
Int_VUCOMISDrr
Int_UCOMISDrr
Int_VCOMISDrr
Int_COMISDrr
VMULSDrr
VPMINSDrr
VMINSDrr
Int_VCMPSDrr
Int_CMPSDrr
VDIVSDrr
VMOVSDrr
VPMAXSDrr
VMAXSDrr
VFRCZSDrr
VMOV64toSDrr
VPCMPGTDrr
VPROTDrr
VPBROADCASTDrr
VPMINUDrr
VPMAXUDrr
VPSRAVDrr
VPSLLVDrr
VPSRLVDrr
VPHSUBWDrr
VPHADDWDrr
VPMADDWDrr
VPUNPCKHWDrr
VPUNPCKLWDrr
VPMACSWDrr
VPMADCSWDrr
VPMACSSWDrr
VPMADCSSWDrr
VPHADDUWDrr
VPMOVSXWDrr
VPMOVZXWDrr
PFCMPGErr
LD_Frr
ST_Frr
VCVTPS2PHrr
VPMACSDQHrr
VPMACSSDQHrr
VMOVPDI2DIrr
VMOVSS2DIrr
VMOVDI2PDIrr
VMOVZDI2PDIrr
MMX_MOVZDI2PDIrr
VMOVZQI2PQIrr
VMOVZPQILo2PQIrr
VMOV64toPQIrr
VPCMPESTRIrr
VPCMPISTRIrr
Int_VCVTTSD2SIrr
Int_CVTTSD2SIrr
VCVTSD2SIrr
Int_VCVTTSS2SIrr
Int_CVTTSS2SIrr
VCVTSS2SIrr
VPMACSDQLrr
VPMACSSDQLrr
PFMULrr
VPPERMrr
VPANDNrr
PFMINrr
PFRCPrr
ST_FPrr
VMOVDDUPrr
VMOVSHDUPrr
VMOVSLDUPrr
MMX_MOVFR642Qrr
MMX_MOVDQ2Qrr
VPSHAQrr
VPHADDBQrr
VPHADDUBQrr
VPSUBQrr
VPMOVSXBQrr
VPMOVZXBQrr
VCVTTPD2DQrr
VCVTPD2DQrr
MMX_MOVQ2DQrr
VCVTTPS2DQrr
VCVTPS2DQrr
VPHSUBDQrr
VPADDQrr
VPHADDDQrr
VPUNPCKHDQrr
VPUNPCKLDQrr
VPMULDQrr
VPUNPCKHQDQrr
VPUNPCKLQDQrr
VPCLMULQDQrr
VPHADDUDQrr
VPMULUDQrr
VPMOVSXDQrr
VPMOVZXDQrr
PFCMPEQrr
VPSHLQrr
VPSLLQrr
MMX_PSLLQrr
VPSRLQrr
MMX_PSRLQrr
VPCMPEQQrr
VPINSRQrr
VPEXTRQrr
VPCMPGTQrr
VPROTQrr
VPBROADCASTQrr
VPSLLVQrr
VPSRLVQrr
VPHADDWQrr
VPHADDUWQrr
VPMOVSXWQrr
VPMOVZXWQrr
PFSUBRrr
VPORrr
VPXORrr
VCVTPD2PSrr
VCVTPH2PSrr
VPERMIL2PSrr
VCVTDQ2PSrr
FsVMOVAPSrr
FsMOVAPSrr
VADDSUBPSrr
VHSUBPSrr
VSUBPSrr
VMINCPSrr
VMAXCPSrr
VHADDPSrr
VADDPSrr
VANDPSrr
VFsANDPSrr
VUNPCKHPSrr
VMOVLHPSrr
VMOVHLPSrr
VPERMILPSrr
VUNPCKLPSrr
VMULPSrr
VANDNPSrr
VFsANDNPSrr
VMINPSrr
VORPSrr
VXORPSrr
VFsXORPSrr
VFsORPSrr
VEXTRACTPSrr
VINSERTPSrr
VTESTPSrr
VMOVUPSrr
VBLENDVPSrr
VDIVPSrr
VMAXPSrr
VFRCZPSrr
Int_VCVTSD2SSrr
Int_CVTSD2SSrr
VMOVDI2SSrr
Int_VCVTSI2SSrr
Int_CVTSI2SSrr
VSUBSSrr
VMINCSSrr
VMAXCSSrr
VADDSSrr
Int_VUCOMISSrr
Int_UCOMISSrr
Int_VCOMISSrr
Int_COMISSrr
VMULSSrr
VMINSSrr
Int_VCMPSSrr
Int_CMPSSrr
VBROADCASTSSrr
VDIVSSrr
VMOVSSrr
VMAXSSrr
VFRCZSSrr
PFCMPGTrr
MWAITrr
PFRSQRTrr
VAESDECLASTrr
VAESENCLASTrr
VPTESTrr
VMOVDQUrr
VPCMOVrr
VPSHAWrr
VPSRAWrr
MMX_PSRAWrr
VPHSUBBWrr
VPSADBWrr
VPHADDBWrr
VPUNPCKHBWrr
VPUNPCKLBWrr
VPHADDUBWrr
VPHSUBWrr
VPSUBWrr
VPMOVSXBWrr
VPMOVZXBWrr
VPHADDWrr
VPADDWrr
VPACKSSDWrr
VPACKUSDWrr
PI2FWrr
VPAVGWrr
VPMULHWrr
PF2IWrr
VPSHLWrr
VPSLLWrr
MMX_PSLLWrr
VPMULLWrr
VPSRLWrr
MMX_PSRLWrr
VPSIGNWrr
VPCMPEQWrr
PMULHRWrr
VPSUBSWrr
VPADDSWrr
VPMINSWrr
VPSUBUSWrr
VPADDUSWrr
VPMAXSWrr
VPCMPGTWrr
VPROTWrr
VPBROADCASTWrr
VPMULHUWrr
VPMINUWrr
VPMAXUWrr
VPMACSWWrr
VPMACSSWWrr
PFMAXrr
VMOVDQAYrr
VPSUBBYrr
VPADDBYrr
VPSHUFBYrr
VPAVGBYrr
VPMOVMSKBYrr
VPSIGNBYrr
VPCMPEQBYrr
VPSUBSBYrr
VPADDSBYrr
VPMINSBYrr
VPSUBUSBYrr
VPADDUSBYrr
VPMAXSBYrr
VPCMPGTBYrr
VPBROADCASTBYrr
VPMINUBYrr
VPMAXUBYrr
VPBLENDVBYrr
VPACKSSWBYrr
VPACKUSWBYrr
VPSRADYrr
VPHSUBDYrr
VPSUBDYrr
VPMOVSXBDYrr
VPMOVZXBDYrr
VPHADDDYrr
VPADDDYrr
VPSLLDYrr
VPMULLDYrr
VPSRLDYrr
VPERMDYrr
VPANDYrr
VPSIGNDYrr
VCVTDQ2PDYrr
VCVTPS2PDYrr
VMOVAPDYrr
VADDSUBPDYrr
VHSUBPDYrr
VSUBPDYrr
VMINCPDYrr
VMAXCPDYrr
VHADDPDYrr
VADDPDYrr
VANDPDYrr
VUNPCKHPDYrr
VPERMILPDYrr
VUNPCKLPDYrr
VMULPDYrr
VANDNPDYrr
VMINPDYrr
VORPDYrr
VXORPDYrr
VTESTPDYrr
VMOVUPDYrr
VBLENDVPDYrr
VDIVPDYrr
VMAXPDYrr
VPCMPEQDYrr
VPMINSDYrr
VBROADCASTSDYrr
VPMAXSDYrr
VPCMPGTDYrr
VPBROADCASTDYrr
VPMINUDYrr
VPMAXUDYrr
VPSRAVDYrr
VPSLLVDYrr
VPSRLVDYrr
VPMADDWDYrr
VPUNPCKHWDYrr
VPUNPCKLWDYrr
VPMOVSXWDYrr
VPMOVZXWDYrr
VCVTPS2PHYrr
VPANDNYrr
VMOVDDUPYrr
VMOVSHDUPYrr
VMOVSLDUPYrr
VPSUBQYrr
VPMOVSXBQYrr
VPMOVZXBQYrr
VCVTTPD2DQYrr
VCVTPD2DQYrr
VCVTTPS2DQYrr
VCVTPS2DQYrr
VPADDQYrr
VPUNPCKHDQYrr
VPUNPCKLDQYrr
VPMULDQYrr
VPUNPCKHQDQYrr
VPUNPCKLQDQYrr
VPMULUDQYrr
VPMOVSXDQYrr
VPMOVZXDQYrr
VPSLLQYrr
VPSRLQYrr
VPCMPEQQYrr
VPCMPGTQYrr
VPBROADCASTQYrr
VPSLLVQYrr
VPSRLVQYrr
VPMOVSXWQYrr
VPMOVZXWQYrr
VPORYrr
VPXORYrr
VCVTPD2PSYrr
VCVTPH2PSYrr
VCVTDQ2PSYrr
VMOVAPSYrr
VADDSUBPSYrr
VHSUBPSYrr
VSUBPSYrr
VMINCPSYrr
VMAXCPSYrr
VHADDPSYrr
VADDPSYrr
VANDPSYrr
VUNPCKHPSYrr
VPERMILPSYrr
VUNPCKLPSYrr
VMULPSYrr
VPERMPSYrr
VANDNPSYrr
VMINPSYrr
VORPSYrr
VXORPSYrr
VTESTPSYrr
VMOVUPSYrr
VBLENDVPSYrr
VDIVPSYrr
VMAXPSYrr
VBROADCASTSSYrr
VPTESTYrr
VMOVDQUYrr
VPSRAWYrr
VPSADBWYrr
VPUNPCKHBWYrr
VPUNPCKLBWYrr
VPHSUBWYrr
VPSUBWYrr
VPMOVSXBWYrr
VPMOVZXBWYrr
VPHADDWYrr
VPADDWYrr
VPACKSSDWYrr
VPACKUSDWYrr
VPAVGWYrr
VPMULHWYrr
VPSLLWYrr
VPMULLWYrr
VPSRLWYrr
VPSIGNWYrr
VPCMPEQWYrr
VPSUBSWYrr
VPADDSWYrr
VPMINSWYrr
VPSUBUSWYrr
VPADDUSWYrr
VPMAXSWYrr
VPCMPGTWYrr
VPBROADCASTWYrr
VPMULHUWYrr
VPMINUWYrr
VPMAXUWYrr
MMX_MOVD64grr
MMX_PALIGNR64irr
MMX_PSUBBirr
MMX_PADDBirr
MMX_PAVGBirr
MMX_PCMPEQBirr
MMX_PSUBSBirr
MMX_PADDSBirr
MMX_PSUBUSBirr
MMX_PADDUSBirr
MMX_PCMPGTBirr
MMX_PMINUBirr
MMX_PMAXUBirr
MMX_PACKSSWBirr
MMX_PACKUSWBirr
MMX_PSUBDirr
MMX_PADDDirr
MMX_PANDirr
MMX_CVTPI2PDirr
MMX_PCMPEQDirr
MMX_PCMPGTDirr
MMX_PMADDWDirr
MMX_PUNPCKHWDirr
MMX_PUNPCKLWDirr
MMX_CVTTPD2PIirr
MMX_CVTPD2PIirr
MMX_CVTTPS2PIirr
MMX_CVTPS2PIirr
MMX_PANDNirr
MMX_PSUBQirr
MMX_PADDQirr
MMX_PUNPCKHDQirr
MMX_PUNPCKLDQirr
MMX_PMULUDQirr
MMX_PORirr
MMX_PXORirr
MMX_CVTPI2PSirr
MMX_PSADBWirr
MMX_PUNPCKHBWirr
MMX_PUNPCKLBWirr
MMX_PSUBWirr
MMX_PADDWirr
MMX_PACKSSDWirr
MMX_PAVGWirr
MMX_PMULHWirr
MMX_PMULLWirr
MMX_PCMPEQWirr
MMX_PSUBSWirr
MMX_PADDSWirr
MMX_PMINSWirr
MMX_PSUBUSWirr
MMX_PADDUSWirr
MMX_PMAXSWirr
MMX_PCMPGTWirr
MMX_PMULHUWirr
MONITORrrr
MOV32sr
MOV64sr
MOV16sr
VMOVQxrxr
MOV32ms
MOV64ms
MOV16ms
MOV32rs
MOV64rs
MOV16rs
VCMPPDrmi_alt
VCMPPSrmi_alt
VCMPPDYrmi_alt
VCMPPSYrmi_alt
VCMPPDrri_alt
VCMPPSrri_alt
VCMPPDYrri_alt
VCMPPSYrri_alt
VCMPSDrm_alt
VCMPSSrm_alt
VMOVQd64rr_alt
VCMPSDrr_alt
VCMPSSrr_alt
VFMSUBSDr213m_Int
VFNMSUBSDr213m_Int
VFMADDSDr213m_Int
VFNMADDSDr213m_Int
VFMSUBSSr213m_Int
VFNMSUBSSr213m_Int
VFMADDSSr213m_Int
VFNMADDSSr213m_Int
VSQRTPDm_Int
VSQRTSDm_Int
VRCPPSm_Int
VRSQRTPSm_Int
VSQRTPSm_Int
VRCPSSm_Int
VRSQRTSSm_Int
VSQRTSSm_Int
VSQRTPDYm_Int
VRCPPSYm_Int
VRSQRTPSYm_Int
VSQRTPSYm_Int
VFMSUBSD4rm_Int
VFNMSUBSD4rm_Int
VFMADDSD4rm_Int
VFNMADDSD4rm_Int
VFMSUBSS4rm_Int
VFNMSUBSS4rm_Int
VFMADDSS4rm_Int
VFNMADDSS4rm_Int
VMINPDrm_Int
VMAXPDrm_Int
VSUBSDrm_Int
VADDSDrm_Int
VMULSDrm_Int
VMINSDrm_Int
VDIVSDrm_Int
VMAXSDrm_Int
VMINPSrm_Int
VMAXPSrm_Int
VSUBSSrm_Int
VADDSSrm_Int
VMULSSrm_Int
VMINSSrm_Int
VDIVSSrm_Int
VMAXSSrm_Int
VMINPDYrm_Int
VMAXPDYrm_Int
VMINPSYrm_Int
VMAXPSYrm_Int
VFMSUBSDr213r_Int
VFNMSUBSDr213r_Int
VFMADDSDr213r_Int
VFNMADDSDr213r_Int
VFMSUBSSr213r_Int
VFNMSUBSSr213r_Int
VFMADDSSr213r_Int
VFNMADDSSr213r_Int
VSQRTPDr_Int
VROUNDSDr_Int
SQRTSDr_Int
VRCPPSr_Int
VRSQRTPSr_Int
VSQRTPSr_Int
VROUNDSSr_Int
RCPSSr_Int
RSQRTSSr_Int
VSQRTPDYr_Int
VRCPPSYr_Int
VRSQRTPSYr_Int
VSQRTPSYr_Int
VFMSUBSD4mr_Int
VFNMSUBSD4mr_Int
VFMADDSD4mr_Int
VFNMADDSD4mr_Int
VFMSUBSS4mr_Int
VFNMSUBSS4mr_Int
VFMADDSS4mr_Int
VFNMADDSS4mr_Int
VMOVDQUmr_Int
VFMSUBSD4rr_Int
VFNMSUBSD4rr_Int
VFMADDSD4rr_Int
VFNMADDSD4rr_Int
VFMSUBSS4rr_Int
VFNMSUBSS4rr_Int
VFMADDSS4rr_Int
VFNMADDSS4rr_Int
VMINPDrr_Int
VMAXPDrr_Int
VSUBSDrr_Int
VADDSDrr_Int
VMULSDrr_Int
VMINSDrr_Int
VDIVSDrr_Int
VMAXSDrr_Int
VMINPSrr_Int
VMAXPSrr_Int
VSUBSSrr_Int
VADDSSrr_Int
VMULSSrr_Int
VMINSSrr_Int
VDIVSSrr_Int
VMAXSSrr_Int
VMINPDYrr_Int
VMAXPDYrr_Int
VMINPSYrr_Int
VMAXPSYrr_Int
N12_GLOBAL__N_119X86MachObjectWriterE
N12_GLOBAL__N_122X86WinCOFFObjectWriterE
N4llvm27MCWinCOFFObjectTargetWriterE
)W!W
)'Ag
)W!V
crc32b 
crc32l 
crc32q 
vextractps 
crc32w 
prefetcht0
prefetcht1
pfrcpit1
pfrsqit1
prefetcht2
pfrcpit2
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovntdqa
vmovdqa
seta
prefetchnta
cmpxchg16b
cmpxchg8b
vpshab
sbbb
vpsubb
adcb
decb
incb
vpaddb
xaddb
andb
vpshufb
negb
cmpxchgb
vpavgb
vpmovmskb
rclb
vpshlb
rolb
imulb
vpcomb
vpsignb
fcmovnb
cmpb
vpcmpeqb
sarb
rcrb
shrb
rorb
xorb
vpinsrb
vpextrb
vpabsb
vpsubsb
vpaddsb
vpminsb
vpsubusb
vpaddusb
pavgusb
vpmaxsb
setb
vpcmpgtb
notb
vprotb
vpbroadcastb
testb
vpcomub
vpminub
pfsub
vpmaxub
vpblendvb
idivb
fcmovb
vpacksswb
vpackuswb
pfacc
pfnacc
pfpnacc
vaesdec
vaesimc
vaesenc
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
vphaddd
vpaddd
vpblendd
vpgatherdd
vpmacsdd
vpmacssdd
pi2fd
vpshufd
pf2id
invvpid
fbld
vpshld
vpslld
vpmulld
vpsrld
vmptrld
vpcomd
vpermd
vpand
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
cvtpi2pd
vpermil2pd
vcvtdq2pd
vcvtps2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vandpd
vblendpd
vroundpd
vgatherdpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgatherqpd
vorpd
vxorpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpinsrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vucomisd
vcomisd
vmulsd
vpminsd
vminsd
vcmpsd
movntsd
vsqrtsd
vbroadcastsd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpcmpgtd
vprotd
vpbroadcastd
vpcomud
vpminud
vpmaxud
vpsravd
vpsllvd
vpsrlvd
vpmaskmovd
vmovd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
setae
fcmovnbe
setbe
fcmovbe
ffree
pfcmpge
setge
setle
loopne
setne
fcmovne
loope
sete
fnsave
fxsave
fcmove
invlpg
setg
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
leal
cmoval
sbbl
movsbl
fsubl
fisubl
cmovbl
movzbl
adcl
decl
incl
btcl
vmreadl
faddl
fiaddl
xaddl
fldl
shldl
fildl
rdrandl
shrdl
vcvtsi2sdl
cmovael
cmovbel
cmovgel
cmovlel
cmovnel
rdfsbasel
wrfsbasel
rdgsbasel
wrgsbasel
vmwritel
cmovel
bsfl
negl
cmpxchgl
cmovgl
pushl
bzhil
blsil
movntil
blsmskl
rcll
fildll
shll
lcalll
roll
fistpll
fisttpll
lsll
fmull
fimull
cmovll
fcoml
ficoml
andnl
cmovnol
cmovol
bswapl
pdepl
cmpl
ljmpl
fcompl
ficompl
cmovnpl
nopl
popl
arpl
fstpl
fistpl
fisttpl
cmovpl
vpmacsdql
vpmacssdql
larl
sarl
fsubrl
fisubrl
rcrl
shrl
rorl
xorl
bsrl
blsrl
btrl
strl
bextrl
fdivrl
fidivrl
ldsl
lesl
lfsl
lgsl
cmovnsl
vcvtsi2ssl
lssl
btsl
cmovsl
sldtl
lretl
setl
popcntl
lzcntl
tzcntl
notl
testl
fstl
fistl
pextl
pfmul
fdivl
fidivl
movl
smswl
movswl
movzwl
shlxl
mulxl
sarxl
shrxl
rorxl
fcom
fucom
vpperm
vpcmpestrm
vpcmpistrm
vpandn
pfmin
vmxon
setno
seto
fsubp
pfrcp
faddp
fmulp
fcomp
fucomp
setnp
loop
fsubrp
fdivrp
setp
fbstp
fstp
vmovddup
vmovshdup
vmovsldup
fdivp
movdq2q
leaq
vpshaq
cmovaq
sbbq
vphaddbq
movsbq
vphaddubq
vpsubq
cmovbq
vpmovsxbq
vpmovzxbq
movzbq
adcq
decq
incq
btcq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vmreadq
vphsubdq
vpaddq
xaddq
vphadddq
vpunpckhdq
shldq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
rdrandq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
shrdq
vcvtsi2sdq
vmovntdq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
cmovaeq
cmovbeq
cmovgeq
cmovleq
cmovneq
pfcmpeq
rdfsbaseq
wrfsbaseq
rdgsbaseq
wrgsbaseq
vmwriteq
fxsaveq
cmoveq
bsfq
negq
cmpxchgq
cmovgq
pushq
bzhiq
blsiq
movntiq
blsmskq
rclq
vpshlq
callq
vpsllq
rolq
vpsrlq
lslq
movslq
imulq
cmovlq
vpcomq
vpermq
andnq
cmovnoq
cmovoq
bswapq
pdepq
cmpq
jmpq
cmovnpq
popq
cmovpq
vpcmpeqq
vpgatherqq
larq
sarq
rcrq
shrq
rorq
fxrstorq
xorq
bsrq
blsrq
vpinsrq
btrq
strq
bextrq
vpextrq
movabsq
lfsq
lgsq
cmovnsq
vcvtsi2ssq
lssq
btsq
cmovsq
sldtq
vpcmpgtq
popcntq
lzcntq
tzcntq
movntq
notq
vprotq
xsaveoptq
insertq
vpbroadcastq
testq
pextq
vpcomuq
idivq
vpsllvq
vpsrlvq
vpmaskmovq
vmovq
vphaddwq
smswq
movswq
vphadduwq
vpmovsxwq
vpmovzxwq
movzwq
shlxq
mulxq
sarxq
shrxq
rorxq
vmclear
pfsubr
enter
vpalignr
vpor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
fdivr
fsubs
fisubs
fadds
fiadds
flds
filds
fmuls
fimuls
fcoms
ficoms
setns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
cvtpi2ps
vpermil2ps
vcvtdq2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
vfmaddps
vfnmaddps
vaddps
vandps
vblendps
vroundps
vgatherdps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
fcomps
ficomps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgatherqps
vorps
vxorps
vextractps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
fstps
fistps
fisttps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
fsubrs
fisubrs
fdivrs
fidivrs
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vfmsubss
vfnmsubss
vsubss
vfmaddss
vfnmaddss
vaddss
vroundss
vucomiss
vcomiss
vmulss
vminss
vrcpss
vcmpss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
fsts
fists
fdivs
fidivs
lgdt
sgdt
lidt
sidt
fldt
pfcmpgt
invept
xsaveopt
fstpt
pfrsqrt
vaesdeclast
vaesenclast
vptest
vaeskeygenassist
vmptrst
fcmovnu
vlddqu
vmaskmovdqu
vmovdqu
fdiv
fldenv
fnstenv
vpcmov
leaw
vpshaw
vpsraw
cmovaw
sbbw
vphsubbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
vpunpcklbw
movsbw
vphaddubw
vphsubw
vpsubw
cmovbw
vpmovsxbw
vpmovzxbw
movzbw
adcw
fldcw
decw
incw
btcw
fnstcw
vphaddw
vpaddw
xaddw
shldw
rdrandw
vpblendw
shrdw
vpackssdw
vpackusdw
cmovaew
cmovbew
cmovgew
cmovlew
cmovnew
cmovew
pi2fw
bsfw
pshufw
negw
cmpxchgw
vpavgw
cmovgw
vpshufhw
vpmulhw
pushw
pf2iw
rclw
vpshuflw
vpshlw
lcallw
vpsllw
vpmullw
rolw
vpsrlw
lslw
imulw
cmovlw
vpcomw
vpsignw
cmovnow
cmovow
cmpw
ljmpw
cmovnpw
nopw
popw
cmovpw
vpcmpeqw
larw
sarw
rcrw
verw
pmulhrw
shrw
rorw
xorw
bsrw
vpinsrw
btrw
ltrw
strw
vpextrw
vpabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
ldsw
lesw
lfsw
lgsw
vpminsw
cmovnsw
vpmulhrsw
lssw
btsw
fnstsw
vpsubusw
vpaddusw
cmovsw
vpmaxsw
lgdtw
sgdtw
lidtw
sidtw
lldtw
sldtw
lretw
vpcmpgtw
popcntw
lzcntw
tzcntw
notw
vprotw
vpbroadcastw
testw
vpmulhuw
vpcomuw
vpminuw
vphminposuw
vpmaxuw
idivw
movw
vpmacsww
lmsww
smsww
vpmacssww
pfmax
vcvttpd2dqx
vcvtpd2dqx
vcvtpd2psx
vcvttpd2dqy
vcvtpd2dqy
vcvtpd2psy
jecxz
jcxz
jrcxz
fcmovu
fsub
%st(0), 
fadd
%st(0), 
fmul
%st(0), 
fsubr
%st(0), 
fdivr
%st(0), 
fdiv
%st(0), 
outb
%al, 
movb
%al, 
rclb
%cl, 
shlb
%cl, 
rolb
%cl, 
sarb
%cl, 
rcrb
%cl, 
shrb
%cl, 
rorb
%cl, 
shldl
%cl, 
shrdl
%cl, 
rcll
%cl, 
shll
%cl, 
roll
%cl, 
sarl
%cl, 
rcrl
%cl, 
shrl
%cl, 
rorl
%cl, 
shldq
%cl, 
shrdq
%cl, 
rclq
%cl, 
shlq
%cl, 
rolq
%cl, 
sarq
%cl, 
rcrq
%cl, 
shrq
%cl, 
rorq
%cl, 
shldw
%cl, 
shrdw
%cl, 
rclw
%cl, 
shlw
%cl, 
rolw
%cl, 
sarw
%cl, 
rcrw
%cl, 
shrw
%cl, 
rorw
%cl, 
outw
%ax, 
movw
%ax, 
outl
%eax, 
movl
%eax, 
#VAARG_64 
#eh_return, addr: 
#VASTART_SAVE_XMM_REGS 
invpcid 
prefetch 
prefetchw 
#CMOV_GR32* PSEUDO!
#CMOV_GR16* PSEUDO!
#CMOV_RFP80 PSEUDO!
#ATOMSUB6432 PSEUDO!
#ATOMADD6432 PSEUDO!
#ATOMAND6432 PSEUDO!
#ATOMNAND6432 PSEUDO!
#ATOMMIN6432 PSEUDO!
#ATOMUMIN6432 PSEUDO!
#ATOMSWAP6432 PSEUDO!
#ATOMOR6432 PSEUDO!
#ATOMXOR6432 PSEUDO!
#ATOMMAX6432 PSEUDO!
#ATOMUMAX6432 PSEUDO!
#ATOMAND32 PSEUDO!
#ATOMNAND32 PSEUDO!
#CMOV_V4F32 PSEUDO!
#CMOV_V8F32 PSEUDO!
#ATOMMIN32 PSEUDO!
#ATOMUMIN32 PSEUDO!
#CMOV_RFP32 PSEUDO!
#CMOV_FR32 PSEUDO!
#ATOMOR32 PSEUDO!
#ATOMXOR32 PSEUDO!
#ATOMMAX32 PSEUDO!
#ATOMUMAX32 PSEUDO!
#ATOMAND64 PSEUDO!
#ATOMNAND64 PSEUDO!
#CMOV_V2F64 PSEUDO!
#CMOV_V4F64 PSEUDO!
#CMOV_V2I64 PSEUDO!
#CMOV_V4I64 PSEUDO!
#ATOMMIN64 PSEUDO!
#ATOMUMIN64 PSEUDO!
#CMOV_RFP64 PSEUDO!
#CMOV_FR64 PSEUDO!
#ATOMOR64 PSEUDO!
#ATOMXOR64 PSEUDO!
#ATOMMAX64 PSEUDO!
#ATOMUMAX64 PSEUDO!
#ATOMAND16 PSEUDO!
#ATOMNAND16 PSEUDO!
#ATOMMIN16 PSEUDO!
#ATOMUMIN16 PSEUDO!
#ATOMOR16 PSEUDO!
#ATOMXOR16 PSEUDO!
#ATOMMAX16 PSEUDO!
#ATOMUMAX16 PSEUDO!
#ATOMAND8 PSEUDO!
#ATOMNAND8 PSEUDO!
#ATOMMIN8 PSEUDO!
#ATOMUMIN8 PSEUDO!
#CMOV_GR8 PSEUDO!
#ATOMOR8 PSEUDO!
#ATOMXOR8 PSEUDO!
#ATOMMAX8 PSEUDO!
#ATOMUMAX8 PSEUDO!
#ACQUIRE_MOV PSEUDO!
#RELEASE_MOV PSEUDO!
lcalll
ljmpl
lcallq
ljmpq
lcallw
ljmpw
xsha1
fld1
fprem1
f2xm1
fyl2xp1
# TLSCall_32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
# TLSCall_64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
BUNDLE
DBG_VALUE
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
LIFETIME_START
ud2b
xcryptecb
xcryptcfb
xcryptofb
scasb
lodsb
insb
rep;stosb
cmpsb
outsb
rep;movsb
xlatb
xcryptcbc
rdpmc
vmfunc
rdtsc
cpuid
cltd
cwtd
wbinvd
fldl2e
lfence
mfence
sfence
fscale
vmresume
repne
xstore
pause
leave
vmxoff
lahf
sahf
vmlaunch
clgi
stgi
fldpi
# win32 fptoui
lock
%dx, %al
pushal
popal
pushfl
popfl
vmmcall
vmcall
syscall
vzeroall
scasl
lodsl
insl
rep;stosl
cmpsl
outsl
rep;movsl
iretl
lretl
sysretl
sysexitl
cwtl
montmul
fxam
fprem
fpatan
fptan
fsin
# dynamic stack allocation
into
cqto
rdtscp
vcmp
fnop
fcompp
fucompp
fdecstp
fincstp
pushfq
popfq
scasq
lodsq
rep;stosq
cmpsq
rep;movsq
iretq
lretq
sysretq
sysexitq
cltq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
pushl
pushw
pushl
popl
pushw
popw
pushl
popl
pushw
popw
pushl
popl
pushq
popq
pushw
popw
pushl
popl
pushq
popq
pushw
popw
swapgs
fchs
# variable sized alloca for segmented stacks
femms
fcos
fsincos
pushl
popl
pushw
popw
clts
fldl2t
fxtract
mwait
fninit
frndint
fsqrt
ftst
xgetbv
xsetbv
pushfw
popfw
scasw
lodsw
insw
rep;stosw
cmpsw
outsw
rep;movsw
cbtw
iretw
lretw
fyl2x
%dx, %ax
fnstsw %ax
vmload
%eax
vmsave
%eax
vmrun
%eax
skinit
%eax
invlpga
%ecx, %eax
%dx, %eax
vmload
%rax
vmsave
%rax
vmrun
%rax
invlpga
%ecx, %rax
outb
%al, %dx
outw
%ax, %dx
outl
%eax, %dx
fnclex
fldz
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
cr10
xmm0
ymm0
xmm11
ymm11
cr11
xmm1
ymm1
xmm12
ymm12
cr12
xmm2
ymm2
xmm13
ymm13
cr13
xmm3
ymm3
xmm14
ymm14
cr14
xmm4
ymm4
xmm15
ymm15
cr15
xmm5
ymm5
xmm6
ymm6
xmm7
ymm7
xmm8
ymm8
xmm9
ymm9
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
N4llvm17X86ATTInstPrinterE
N4llvm14format_object1IyEE
R(%R
crc32 
vextractps 
prefetcht0
prefetcht1
pfrcpit1
pfrsqit1
prefetcht2
pfrcpit2
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovntdqa
vmovdqa
seta
prefetchnta
cmova
cmpxchg16b
cmpxchg8b
vpshab
vpsubb
vpaddb
vpshufb
vpavgb
vpmovmskb
vpshlb
vpcomb
vpsignb
vpcmpeqb
vpinsrb
vpextrb
vpabsb
vpsubsb
vpaddsb
vpminsb
vpsubusb
vpaddusb
pavgusb
vpmaxsb
setb
vpcmpgtb
vprotb
vpbroadcastb
vpcomub
vpminub
pfsub
fisub
vpmaxub
vpblendvb
cmovb
vpacksswb
vpackuswb
pfacc
pfnacc
pfpnacc
vaesdec
vaesimc
vaesenc
vmread
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
fiadd
xadd
vphaddd
vpaddd
vpblendd
vpgatherdd
vpmacsdd
vpmacssdd
pi2fd
vpshufd
pf2id
invvpid
fbld
vpshld
fild
vpslld
vpmulld
vpsrld
vmptrld
vpcomd
vpermd
vpand
rdrand
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
cvtpi2pd
vpermil2pd
vcvtdq2pd
vcvtps2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vandpd
vblendpd
vroundpd
vgatherdpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgatherqpd
vorpd
vxorpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
shrd
vpinsrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtsi2sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vucomisd
vcomisd
vmulsd
vpminsd
vminsd
vcmpsd
movntsd
vsqrtsd
vbroadcastsd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpcmpgtd
vprotd
vpbroadcastd
vpcomud
vpminud
vpmaxud
vpsravd
vpsllvd
vpsrlvd
vpmaskmovd
vmovd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
movsxd
setae
cmovae
setbe
cmovbe
ffree
pfcmpge
setge
cmovge
setle
cmovle
loopne
setne
cmovne
loope
rdfsbase
wrfsbase
rdgsbase
wrgsbase
sete
vmwrite
fnsave
fxsave
cmove
retf
cmpxchg
invlpg
setg
cmovg
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
push
bzhi
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
blsi
movnti
blsmsk
lcall
arpl
vpmacsdql
vpmacssdql
setl
pfmul
fimul
cmovl
fcom
ficom
fucom
vpperm
vpcmpestrm
vpcmpistrm
vpandn
pfmin
vmxon
setno
cmovno
seto
cmovo
bswap
fsubp
pfrcp
faddp
pdep
fmulp
ljmp
fcomp
ficomp
fucomp
setnp
cmovnp
loop
fsubrp
fdivrp
setp
fbstp
fstp
fistp
fisttp
vmovddup
vmovshdup
vmovsldup
fdivp
cmovp
movdq2q
vpshaq
vphaddbq
vphaddubq
vpsubq
vpmovsxbq
vpmovzxbq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vphsubdq
vpaddq
vphadddq
vpunpckhdq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vmovntdq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
pfcmpeq
fxsaveq
vpshlq
vpsllq
vpsrlq
vpcomq
vpermq
jmpq
vpcmpeqq
vpgatherqq
fxrstorq
vpinsrq
vpextrq
vpcmpgtq
movntq
vprotq
xsaveoptq
insertq
vpbroadcastq
vpcomuq
vpsllvq
vpsrlvq
vpmaskmovq
vmovq
vphaddwq
vphadduwq
vpmovsxwq
vpmovzxwq
vmclear
pfsubr
fisubr
enter
vpalignr
vpor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
blsr
bextr
fdivr
fidivr
movabs
setns
cmovns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
cvtpi2ps
vpermil2ps
vcvtdq2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
vfmaddps
vfnmaddps
vaddps
vandps
vblendps
vroundps
vgatherdps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgatherqps
vorps
vxorps
vextractps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vcvtsi2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vfmsubss
vfnmsubss
vsubss
vfmaddss
vfnmaddss
vaddss
vroundss
vucomiss
vcomiss
vmulss
vminss
vrcpss
vcmpss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
cmovs
lgdt
sgdt
lidt
sidt
lldt
sldt
pfcmpgt
popcnt
lzcnt
tzcnt
invept
xsaveopt
pfrsqrt
vaesdeclast
vaesenclast
vptest
fist
vaeskeygenassist
vmptrst
pext
vlddqu
vmaskmovdqu
vmovdqu
fdiv
fidiv
fldenv
fnstenv
vpcmov
vpshaw
vpsraw
vphsubbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
vpunpcklbw
vphaddubw
vphsubw
vpsubw
vpmovsxbw
vpmovzxbw
fldcw
fnstcw
vphaddw
vpaddw
vpblendw
vpackssdw
vpackusdw
pi2fw
pshufw
vpavgw
vpshufhw
vpmulhw
pf2iw
vpshuflw
vpshlw
callw
vpsllw
vpmullw
vpsrlw
vpcomw
vpsignw
vpcmpeqw
verw
pmulhrw
vpinsrw
vpextrw
vpabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
lmsw
smsw
vpminsw
vpmulhrsw
fnstsw
vpsubusw
vpaddusw
vpmaxsw
lgdtw
sgdtw
lidtw
sidtw
vpcmpgtw
vprotw
vpbroadcastw
vpmulhuw
vpcomuw
vpminuw
vphminposuw
vpmaxuw
vpmacsww
vpmacssww
pfmax
shlx
mulx
vcvttpd2dqx
vcvtpd2dqx
sarx
shrx
rorx
vcvtpd2psx
movsx
movzx
jecxz
jcxz
jrcxz
fcmovnb
ST(0), 
fcmovb
ST(0), 
fcmovnbe
ST(0), 
fcmovbe
ST(0), 
fcmovne
ST(0), 
fcmove
ST(0), 
fcmovnu
ST(0), 
fcmovu
 ST(0), 
AL, 
AL, 
AL, 
AL, 
AL, 
AL, 
AL, 
AL, 
test
AL, 
AL, 
AX, 
AX, 
AX, 
AX, 
AX, 
xchg
AX, 
AX, 
AX, 
AX, 
test
AX, 
EAX, 
EAX, 
EAX, 
EAX, 
EAX, 
xchg
EAX, 
EAX, 
EAX, 
EAX, 
test
EAX, 
EAX, 
RAX, 
RAX, 
RAX, 
RAX, 
RAX, 
xchg
RAX, 
RAX, 
RAX, 
test
RAX, 
#VAARG_64 
#eh_return, addr: 
#VASTART_SAVE_XMM_REGS 
invpcid 
prefetch 
prefetchw 
#CMOV_GR32* PSEUDO!
#CMOV_GR16* PSEUDO!
#CMOV_RFP80 PSEUDO!
#ATOMSUB6432 PSEUDO!
#ATOMADD6432 PSEUDO!
#ATOMAND6432 PSEUDO!
#ATOMNAND6432 PSEUDO!
#ATOMMIN6432 PSEUDO!
#ATOMUMIN6432 PSEUDO!
#ATOMSWAP6432 PSEUDO!
#ATOMOR6432 PSEUDO!
#ATOMXOR6432 PSEUDO!
#ATOMMAX6432 PSEUDO!
#ATOMUMAX6432 PSEUDO!
#ATOMAND32 PSEUDO!
#ATOMNAND32 PSEUDO!
#CMOV_V4F32 PSEUDO!
#CMOV_V8F32 PSEUDO!
#ATOMMIN32 PSEUDO!
#ATOMUMIN32 PSEUDO!
#CMOV_RFP32 PSEUDO!
#CMOV_FR32 PSEUDO!
#ATOMOR32 PSEUDO!
#ATOMXOR32 PSEUDO!
#ATOMMAX32 PSEUDO!
#ATOMUMAX32 PSEUDO!
#ATOMAND64 PSEUDO!
#ATOMNAND64 PSEUDO!
#CMOV_V2F64 PSEUDO!
#CMOV_V4F64 PSEUDO!
#CMOV_V2I64 PSEUDO!
#CMOV_V4I64 PSEUDO!
#ATOMMIN64 PSEUDO!
#ATOMUMIN64 PSEUDO!
#CMOV_RFP64 PSEUDO!
#CMOV_FR64 PSEUDO!
#ATOMOR64 PSEUDO!
#ATOMXOR64 PSEUDO!
#ATOMMAX64 PSEUDO!
#ATOMUMAX64 PSEUDO!
#ATOMAND16 PSEUDO!
#ATOMNAND16 PSEUDO!
#ATOMMIN16 PSEUDO!
#ATOMUMIN16 PSEUDO!
#ATOMOR16 PSEUDO!
#ATOMXOR16 PSEUDO!
#ATOMMAX16 PSEUDO!
#ATOMUMAX16 PSEUDO!
#ATOMAND8 PSEUDO!
#ATOMNAND8 PSEUDO!
#ATOMMIN8 PSEUDO!
#ATOMUMIN8 PSEUDO!
#CMOV_GR8 PSEUDO!
#ATOMOR8 PSEUDO!
#ATOMXOR8 PSEUDO!
#ATOMMAX8 PSEUDO!
#ATOMUMAX8 PSEUDO!
#ACQUIRE_MOV PSEUDO!
#RELEASE_MOV PSEUDO!
xsha1
fld1
fprem1
f2xm1
fyl2xp1
# TLSCall_32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
# TLSCall_64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
BUNDLE
DBG_VALUE
DX, AL
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
push
push
push
push
push
push
LIFETIME_START
DX, AX
vmload
vmsave
vmrun
skinit
DX, EAX
vmload
vmsave
vmrun
invlpga
EAX, ECX
invlpga
RAX, ECX
AL, DX
AX, DX
EAX, DX
pusha
popa
ud2b
xcryptecb
xcryptcfb
xcryptofb
scasb
lodsb
rep stosb
cmpsb
outsb
rep movsb
xlatb
xcryptcbc
rdpmc
vmfunc
rdtsc
pushfd
popfd
cpuid
scasd
lodsd
rep stosd
cmpsd
outsd
rep movsd
iretd
wbinvd
fldl2e
lfence
mfence
sfence
cwde
fscale
vmresume
repne
cdqe
xstore
pause
leave
vmxoff
lahf
sahf
pushf
popf
retf
vmlaunch
clgi
stgi
fldpi
# win32 fptoui
lock
vmmcall
vmcall
syscall
vzeroall
montmul
fxam
fprem
fpatan
fptan
fsin
# dynamic stack allocation
into
rdtscp
vcmp
fnop
fcompp
fucompp
fdecstp
fincstp
pushfq
popfq
scasq
lodsq
rep stosq
cmpsq
rep movsq
iretq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
swapgs
fchs
# variable sized alloca for segmented stacks
femms
fcos
fsincos
clts
fldl2t
fxtract
iret
sysret
mwait
fninit
sysexit
frndint
fsqrt
ftst
xgetbv
xsetbv
scasw
lodsw
rep stosw
cmpsw
outsw
rep movsw
fyl2x
fnstsw %ax
fnclex
fldz
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
cr10
xmm0
ymm0
xmm11
ymm11
cr11
xmm1
ymm1
xmm12
ymm12
cr12
xmm2
ymm2
xmm13
ymm13
cr13
xmm3
ymm3
xmm14
ymm14
cr14
xmm4
ymm4
xmm15
ymm15
cr15
xmm5
ymm5
xmm6
ymm6
xmm7
ymm7
xmm8
ymm8
xmm9
ymm9
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
N4llvm19X86IntelInstPrinterE
N12_GLOBAL__N_118DisasmMemoryObjectE
N4llvm18MCParsedAsmOperandE
N4llvm20MCAsmParserExtensionE
N4llvm17MCTargetAsmParserE
N12_GLOBAL__N_115ELFObjectWriterE
N4llvm12MCAsmBackendE
N4llvm9MCAsmInfoE
N4llvm13MCAsmInfoCOFFE
N4llvm18MCAsmInfoMicrosoftE
N4llvm16MCAsmInfoGNUCOFFE
N4llvm15MCAsmInfoDarwinE
N12_GLOBAL__N_113MCAsmStreamerE
N4llvm14format_object1IhEE
N4llvm14MCDataFragmentE
N4llvm10MCFragmentE
N4llvm10ilist_nodeINS_10MCFragmentEEE
N4llvm15ilist_half_nodeINS_10MCFragmentEEE
N4llvm14MCInstFragmentE
N4llvm15MCAlignFragmentE
N4llvm14MCFillFragmentE
N4llvm13MCOrgFragmentE
N4llvm13MCLEBFragmentE
N4llvm23MCDwarfLineAddrFragmentE
N4llvm24MCDwarfCallFrameFragmentE
N4llvm13MCCodeEmitterE
N4llvm14MCDisassemblerE
N4llvm23MCELFObjectTargetWriterE
N12_GLOBAL__N_113MCELFStreamerE
N4llvm12MCTargetExprE
N4llvm6MCExprE
N4llvm13MCInstPrinterE
N4llvm15MCInstrAnalysisE
N12_GLOBAL__N_115MCMachOStreamerE
N4llvm24MCMachObjectTargetWriterE
N4llvm16MCObjectStreamerE
N4llvm14MCObjectWriterE
N4llvm9MCSectionE
N4llvm13MCSectionCOFFE
N4llvm12MCSectionELFE
N4llvm14MCSectionMachOE
N4llvm10MCStreamerE
N4llvm16MCTargetAsmLexerE
N4llvm16MachObjectWriterE
N4llvm14format_object3IjPKcS2_EE
N12_GLOBAL__N_119WinCOFFObjectWriterE
N12_GLOBAL__N_115WinCOFFStreamerE
N4llvm13SlabAllocatorE
N4llvm19MallocSlabAllocatorE
N4llvm2cl6OptionE
N4llvm2cl18GenericOptionValueE
N4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl19generic_parser_baseE
N4llvm2cl17basic_parser_implE
N4llvm2cl12basic_parserIbEE
N4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl3optIbLb0ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIbLb0ELb0EEE
N4llvm2cl6parserIbEE
N4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_111HelpPrinterELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_111HelpPrinterEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_111HelpPrinterELb1EEE
N4llvm2cl3optIN12_GLOBAL__N_114VersionPrinterELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114VersionPrinterELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114VersionPrinterEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114VersionPrinterELb1EEE
N4llvm12MemoryObjectE
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
N4llvm14format_object5IjjjPKcS2_EE
N4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ENS0_6parserIS8_EEEE
N4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ELb1EEE
                                                                                
N4llvm11raw_ostreamE
N4llvm18raw_string_ostreamE
N4llvm16raw_null_ostreamE
N4llvm18format_object_baseE
N4llvm14raw_fd_ostreamE
N4llvm19raw_svector_ostreamE
N4llvm14format_object1IdEE
N4llvm14error_categoryE
N4llvm11_do_messageE
N4llvm23_generic_error_categoryE
conditional execution not supported in Thumb1
too many conditions on IT instruction
illegal IT block condition mask '
instruction '
' can not set flags, but 's' suffix specified
' is not predicable, but condition code specified
unexpected token in argument list
vceq
vcle
vcmpe
rfeia
srsia
vldr
vmov
vmrs
vmsr
vstr
vldmia
vstmia
vadd.f64
vadd.f32
vcmp.f64
vcmp.f32
vmov.f64
vmov.f32
vdiv.f64
vdiv.f32
vmla.f64
vmla.f32
vmul.f64
vmul.f32
vneg.f64
vneg.f32
ldmdb
rfedb
rfeib
rfeda
srsdb
srsib
srsda
stmdb
vabs
vadd
vand
vbic
vcvt
veor
vmax
vmin
vmul
vmvn
vorr
vshl
vshr
vsub
vswp
vzip
vcvt.f64.s32
vcvt.f32.s32
vsqrt
vcvtr.s32.f64
vcvtr.s32.f32
vcvtr.u32.f64
vcvtr.u32.f32
vcvt.f64.u32
vcvt.f32.u32
vcvt.s32.f64
vcvt.s32.f32
vcvt.u32.f64
vcvt.u32.f32
qsax
sasx
ssax
uasx
usax
shasx
shsax
uhasx
uhsax
uqasx
uqsax
vrecpe.f32
vrecpe.u32
register name expected
unexpected input in .req directive.
redefinition of '
' does not match original.
<ARMCC::
<ccout 
(tt)
(et)
(te)
(ee)
(ttt)
(ett)
(tet)
(eet)
(tte)
(ete)
(tee)
(eee)
<it-mask 
<coprocessor number: 
<coprocessor register: 
<coprocessor option: 
<mask: 
<ARM_MB::
<memory 
 base:
post-idx register 
<ARM_PROC::
<register 
<shift 
<so_reg_reg 
<so_reg_imm 
<ror 
<bitfield 
lsb: 
, width: 
<register_list 
<vector_list 
<vector_list(all lanes) 
<vector_list(lane 
<vectorindex 
#0xd
#0xc
ishst
#0x9
#0x8
nshst
#0x5
#0x4
oshst
#0x1
#0x0
mcrr2
mrrc2
ldc2l
stc2l
.f32
.f64
unexpected token in operand
apsr_nzcv
APSR_nzcv
addw
bkpt
cbnz
cdp2
clrex
faddd
fadds
fcmpzd
fcmpzs
fmdhr
fmdlr
fmstat
fsubd
fsubs
hint
ldc2
ldc2l
ldcl
ldmda
ldmdb
ldmib
ldrb
ldrbt
ldrd
ldrex
ldrexb
ldrexd
ldrexh
ldrh
ldrht
ldrsb
ldrsbt
ldrsh
ldrsht
ldrt
mcr2
mcrr
mcrr2
movs
movt
movw
mrc2
mrrc
mrrc2
pkhbt
pkhtb
pldw
push
qadd
qadd16
qadd8
qasx
qdadd
qdsub
qsax
qsub
qsub16
qsub8
rbit
rev16
revsh
rfeda
rfedb
rfeia
rfeib
sadd16
sadd8
sasx
sbfx
sdiv
setend
shadd16
shadd8
shasx
shsax
shsub16
shsub8
smlabb
smlabt
smlad
smladx
smlal
smlalbb
smlalbt
smlald
smlaldx
smlaltb
smlaltt
smlatb
smlatt
smlawb
smlawt
smlsd
smlsdx
smlsld
smlsldx
smmla
smmlar
smmls
smmlsr
smmul
smmulr
smuad
smuadx
smulbb
smulbt
smull
smultb
smultt
smulwb
smulwt
smusd
smusdx
srsda
srsdb
srsia
srsib
ssat
ssat16
ssax
ssub16
ssub8
stc2
stc2l
stcl
stmda
stmdb
stmib
strb
strbt
strd
strex
strexb
strexd
strexh
strh
strht
strt
subw
swpb
sxtab
sxtab16
sxtah
sxtb
sxtb16
sxth
trap
uadd16
uadd8
uasx
ubfx
udiv
uhadd16
uhadd8
uhasx
uhsax
uhsub16
uhsub8
umaal
umlal
umull
uqadd16
uqadd8
uqasx
uqsax
uqsub16
uqsub8
usad8
usada8
usat
usat16
usax
usub16
usub8
uxtab
uxtab16
uxtah
uxtb
uxtb16
uxth
vaba
vabal
vabd
vabdl
vabs
vacge
vacgt
vadd
vaddhn
vaddl
vaddw
vand
vbic
vbif
vbit
vbsl
vceq
vcge
vcgt
vcle
vcls
vclt
vclz
vcmp
vcmpe
vcnt
vcvt
vcvtb
vcvtr
vcvtt
vdiv
vdup
veor
vext
vfma
vfms
vfnma
vfnms
vhadd
vhsub
vld1
vld2
vld3
vld4
vldmdb
vldmia
vldr
vmax
vmin
vmla
vmlal
vmls
vmlsl
vmov
vmovl
vmovn
vmrs
vmsr
vmul
vmull
vmvn
vneg
vnmla
vnmls
vnmul
vorn
vorr
vpadal
vpadd
vpaddl
vpmax
vpmin
vpop
vpush
vqabs
vqadd
vqdmlal
vqdmlsl
vqdmulh
vqdmull
vqmovn
vqmovun
vqneg
vqrdmulh
vqrshl
vqrshrn
vqrshrun
vqshl
vqshlu
vqshrn
vqshrun
vqsub
vraddhn
vrecpe
vrecps
vrev16
vrev32
vrev64
vrhadd
vrshl
vrshr
vrshrn
vrsqrte
vrsqrts
vrsra
vrsubhn
vshl
vshll
vshr
vshrn
vsli
vsqrt
vsra
vsri
vst1
vst2
vst3
vst4
vstmdb
vstmia
vstr
vsub
vsubhn
vsubl
vsubw
vswp
vtbl
vtbx
vtrn
vtst
vuzp
vzip
yield
constant expression expected
register expected
'#' expected
malformed immediate expression
'lsb' operand must be an immediate
'lsb' operand must be in the range [0,31]
too few operands
'width' operand must be an immediate
'width' operand must be in the range [1,32-lsb]
illegal expression
coprocessor option must be an immediate in range [0, 255]
encoded floating point value out of range
invalid floating point immediate
apsr
apsr_g
apsr_nzcvqg
iapsr
iapsr_g
iapsr_nzcvqg
eapsr
eapsr_g
eapsr_nzcvqg
xpsr
xpsr_g
xpsr_nzcvqg
ipsr
epsr
iepsr
primask
basepri
basepri_max
faultmask
control
nzcvq
nzcvqg
cpsr
spsr
immediate value out of range
 operand expected.
illegal shift operator
shift amount must be an immediate
immediate shift value out of range
none
malformed rotate expression
rotate amount must be an immediate
'ror' rotate amount must be 8, 16, or 24
'be' or 'le' operand expected
shift operator 'asr' or 'lsl' expected
malformed shift expression
'asr' shift amount must be in range [1,32]
'asr #32' shift amount not allowed in Thumb mode
'lsr' shift amount must be in range [0,31]
vector register expected
sequential registers in double spaced list
invalid register in register list
bad range in register list
mismatched lane index in register list
invalid register in double-spaced list (must be 'D' register')
non-contiguous register range
'}' expected
lane index must be empty or an integer
']' expected
lane index out of range
immediate value expected for vector index
shift must be of a register
invalid immediate shift value
expected immediate or register in shift operand
malformed memory operand
alignment specifier must be 16, 32, 64, 128, or 256 bits
register list not in ascending order
duplicated register (
) in register list
expected prefix identifier in operand
unexpected prefix in operand
unexpected token after prefix
.thumb
.arm
.thumb_func
.code
.syntax
.unreq
.arch
.eabi_attribute
unexpected token in directive
unexpected token in .thumb_func directive
unexpected token in .code directive
invalid operand to .code directive
unexpected token in .syntax directive
'.syntax divided' arm asssembly not supported
unrecognized syntax mode in .syntax directive
unexpected input in .unreq directive.
too few operands for instruction
invalid operand for instruction
invalid instruction
flag setting instruction only valid outside IT block
instruction only valid inside IT block
instruction variant requires ARMv6 or later
instruction variant requires Thumb2
immediate operand must be in the range [0,15]
instructions in IT block must be predicable
incorrect condition in IT block; got '
', but expected '
predicated instructions must be in IT block
destination operands must be sequential
source operands must be sequential
bitfield width must be in range [1,32-lsb]
registers must be in range r0-r7
writeback operator '!' expected
writeback operator '!' not allowed when base register in register list
destination register must match source register
registers must be in range r0-r7 or pc
registers must be in range r0-r7 or lr
source register must be the same as destination
push
armv4t
armv5te
armv6
armv6t2
armv7
VFP2
VFP3
VFP4
NEON
half-float
divide
pack/extract
thumb2-dsp
data-barriers
mp-extensions
thumb
thumb2
armv7m
armv7a/r
arm-mode
(unknown)
: Unexpected decode table opcode!
literal pool for: 
fixup_arm_ldst_pcrel_12
fixup_t2_ldst_pcrel_12
fixup_arm_pcrel_10_unscaled
fixup_arm_pcrel_10
fixup_t2_pcrel_10
fixup_thumb_adr_pcrel_10
fixup_arm_adr_pcrel_12
fixup_t2_adr_pcrel_12
fixup_arm_condbranch
fixup_arm_uncondbranch
fixup_t2_condbranch
fixup_t2_uncondbranch
fixup_arm_thumb_br
fixup_arm_uncondbl
fixup_arm_condbl
fixup_arm_blx
fixup_arm_thumb_bl
fixup_arm_thumb_blx
fixup_arm_thumb_cb
fixup_arm_thumb_cp
fixup_arm_thumb_bcc
fixup_arm_movt_hi16
fixup_arm_movw_lo16
fixup_t2_movt_hi16
fixup_t2_movw_lo16
fixup_arm_movt_hi16_pcrel
fixup_arm_movw_lo16_pcrel
fixup_t2_movt_hi16_pcrel
fixup_t2_movw_lo16_pcrel
out of range pc-relative fixup value
unexpected instruction to relax: 
Total number of PIC Relocations
Total number of non-PIC relocations
arm-enable-ehabi
Generate ARM EHABI tables
.code
.code
.weak
Not supported instr: 
mccodeemitter
Number of constant pool relocations created.
Number of MC instructions emitted.
:upper16:
:lower16:
SPR_8
GPRnopc
rGPR
hGPR
tGPR
GPRnopc_and_hGPR
hGPR_and_rGPR
tcGPR
tGPR_and_tcGPR
hGPR_and_tcGPR
GPRsp
DPR_VFP2
DPR_8
DPairSpc
DPairSpc_with_ssub_0
DPairSpc_with_dsub_2_then_ssub_0
DPairSpc_with_dsub_0_in_DPR_8
DPairSpc_with_dsub_2_in_DPR_8
DPair
DPair_with_ssub_0
DPair_with_ssub_2
DPair_with_dsub_0_in_DPR_8
QPR_VFP2
DPair_with_dsub_1_in_DPR_8
QPR_8
DTriple
DTripleSpc
DTripleSpc_with_ssub_0
DTriple_with_ssub_0
DTriple_with_dsub_1_dsub_2_in_QPR
DTriple_with_qsub_0_in_QPR
DTriple_with_ssub_2
DTripleSpc_with_dsub_2_then_ssub_0
DTriple_with_dsub_2_then_ssub_0
DTripleSpc_with_dsub_4_then_ssub_0
DTripleSpc_with_dsub_0_in_DPR_8
DTriple_with_dsub_0_in_DPR_8
DTriple_with_qsub_0_in_QPR_VFP2
DTriple_with_ssub_0_and_DTriple_with_dsub_1_dsub_2_in_QPR
DTriple_with_dsub_1_dsub_2_in_QPR_VFP2
DTriple_with_dsub_1_in_DPR_8
DTriple_with_dsub_2_then_ssub_0_and_DTriple_with_qsub_0_in_QPR
DTripleSpc_with_dsub_2_in_DPR_8
DTriple_with_dsub_2_in_DPR_8
DTripleSpc_with_dsub_4_in_DPR_8
DTriple_with_dsub_0_in_DPR_8_and_DTriple_with_dsub_1_dsub_2_in_QPR
DTriple_with_qsub_0_in_QPR_8
DTriple_with_dsub_1_dsub_2_in_QPR_8
DTriple_with_dsub_2_in_DPR_8_and_DTriple_with_qsub_0_in_QPR
DQuadSpc
DQuadSpc_with_ssub_0
DQuadSpc_with_dsub_2_then_ssub_0
DQuadSpc_with_dsub_4_then_ssub_0
DQuadSpc_with_dsub_0_in_DPR_8
DQuadSpc_with_dsub_2_in_DPR_8
DQuadSpc_with_dsub_4_in_DPR_8
DQuad
DQuad_with_ssub_0
DQuad_with_ssub_2
QQPR
DQuad_with_dsub_1_dsub_2_in_QPR
DQuad_with_dsub_2_then_ssub_0
DQuad_with_dsub_3_then_ssub_0
DQuad_with_dsub_0_in_DPR_8
DQuad_with_qsub_0_in_QPR_VFP2
DQuad_with_ssub_0_and_DQuad_with_dsub_1_dsub_2_in_QPR
DQuad_with_dsub_1_dsub_2_in_QPR_VFP2
DQuad_with_dsub_1_in_DPR_8
DQuad_with_qsub_1_in_QPR_VFP2
DQuad_with_dsub_2_in_DPR_8
DQuad_with_dsub_3_then_ssub_0_and_DQuad_with_dsub_1_dsub_2_in_QPR
DQuad_with_dsub_3_in_DPR_8
DQuad_with_dsub_0_in_DPR_8_and_DQuad_with_dsub_1_dsub_2_in_QPR
DQuad_with_qsub_0_in_QPR_8
DQuad_with_dsub_1_dsub_2_in_QPR_8
DQuad_with_qsub_1_in_QPR_8
DQuad_with_dsub_3_in_DPR_8_and_DQuad_with_dsub_1_dsub_2_in_QPR
QQQQPR
QQQQPR_with_ssub_0
QQQQPR_with_dsub_2_then_ssub_0
QQQQPR_with_dsub_5_then_ssub_0
QQQQPR_with_dsub_7_then_ssub_0
QQQQPR_with_dsub_0_in_DPR_8
QQQQPR_with_dsub_2_in_DPR_8
QQQQPR_with_dsub_4_in_DPR_8
QQQQPR_with_dsub_6_in_DPR_8
32bit
Prefer 32-bit Thumb instrs
Cortex-A15 ARM processors
Cortex-A8 ARM processors
Cortex-A9 ARM processors
a9-erratum-754319
Processor has Cortex-A9 hardware bug erratum #754319
a9-erratum-754320
Processor has Cortex-A9 hardware bug erratum #754320
avoid-partial-cpsr
Avoid CPSR partial update for OOO execution
Restrict VFP3 to 16 double registers
Has data barrier (dmb / dsb) instructions
fp-only-sp
Floating point unit supports single precision only
fp16
Enable half-precision floating point
hwdiv
Enable divide instructions
hwdiv-arm
Enable divide instructions in ARM mode
mclass
Is microcontroller profile ('M' series)
Supports Multiprocessing extension
neon
Enable NEON instructions
neonfp
Use NEON for single precision FP
noarm
Does not support ARM mode execution
Has return address stack
slow-fp-brcc
FP compare + branch is slow
slowfpvmlx
Disable VFP / NEON MAC instructions
swift
Swift ARM processors
t2dsp
Supports v7 DSP instructions in Thumb2
t2xtpk
Enable Thumb2 extract and pack instructions
thumb-mode
Thumb mode
Enable Thumb2 instructions
Support ARM v4T instructions
Support ARM v5T instructions
v5te
Support ARM v5TE, v5TEj, and v5TExp instructions
Support ARM v6 instructions
v6t2
Support ARM v6t2 instructions
Support ARM v7 instructions
vfp2
Enable VFP2 instructions
vfp3
Enable VFP3 instructions
vfp4
Enable VFP4 instructions
vmlx-forwarding
Has multiplier accumulator forwarding
arm1020e
Select the arm1020e processor
arm1020t
Select the arm1020t processor
arm1022e
Select the arm1022e processor
arm10e
Select the arm10e processor
arm10tdmi
Select the arm10tdmi processor
arm1136j-s
Select the arm1136j-s processor
arm1136jf-s
Select the arm1136jf-s processor
arm1156t2-s
Select the arm1156t2-s processor
arm1156t2f-s
Select the arm1156t2f-s processor
arm1176jz-s
Select the arm1176jz-s processor
arm1176jzf-s
Select the arm1176jzf-s processor
arm710t
Select the arm710t processor
arm720t
Select the arm720t processor
arm7tdmi
Select the arm7tdmi processor
arm7tdmi-s
Select the arm7tdmi-s processor
arm8
Select the arm8 processor
arm810
Select the arm810 processor
arm9
Select the arm9 processor
arm920
Select the arm920 processor
arm920t
Select the arm920t processor
arm922t
Select the arm922t processor
arm926ej-s
Select the arm926ej-s processor
arm940t
Select the arm940t processor
arm946e-s
Select the arm946e-s processor
arm966e-s
Select the arm966e-s processor
arm968e-s
Select the arm968e-s processor
arm9e
Select the arm9e processor
arm9tdmi
Select the arm9tdmi processor
cortex-a15
Select the cortex-a15 processor
cortex-a7
Select the cortex-a7 processor
cortex-a8
Select the cortex-a8 processor
cortex-a9
Select the cortex-a9 processor
cortex-a9-mp
Select the cortex-a9-mp processor
cortex-m0
Select the cortex-m0 processor
cortex-m3
Select the cortex-m3 processor
cortex-m4
Select the cortex-m4 processor
ep9312
Select the ep9312 processor
generic
Select the generic processor
iwmmxt
Select the iwmmxt processor
mpcore
Select the mpcore processor
mpcorenovfp
Select the mpcorenovfp processor
pj4b
Select the pj4b processor
strongarm
Select the strongarm processor
strongarm110
Select the strongarm110 processor
strongarm1100
Select the strongarm1100 processor
strongarm1110
Select the strongarm1110 processor
Select the swift processor
xscale
Select the xscale processor
armv
+v7,+noarm,+db,+hwdiv,+mclass
+v7,+noarm,+db,+hwdiv,+t2dsp,t2xtpk,+mclass
+v7,+swift,+neon,+db,+t2dsp,+t2xtpk
+v7,+neon,+db,+t2dsp,+t2xtpk
+v6t2
+v6,+noarm,+mclass
+v5te
+v5t
+v4t
+thumb-mode
,+thumb-mode
unsupported relocation on symbol
FIXME: relocations to absolute targets not yet implemented
symbol '
' can not be undefined in a subtraction expression
Thumb
.f64
.f32
APSR_nzcv, fpscr
pc, lr
.s32
.s16
.u32
.u16
.i64
.i32
.i16
.f32.f16
.f16.f32
.f64.f32
.f32.f64
.s32.f32
.u32.f32
.f32.s32
.f32.u32
fpscr, 
fpexc, 
fpsid, 
.s64
.u64
.f64.s16
.f32.s16
.f64.s32
.s16.f64
.s16.f32
.s32.f64
.u16.f64
.u16.f32
.u32.f64
.f64.u16
.f32.u16
.f64.u32
sp, 
sp!, 
, #0
, apsr
, spsr
[], 
, fpscr
, fpexc
, fpsid
, mvfr0
, mvfr1
[]}, 
]}, 
, #1
yield
vpush
vpop
[pc, #
, lsl #1]
, asr #
, lsl #
APSR_
SPSR
CPSR
<und>
, #-
, #-0
, ror #
KOSW[_cgw
MQUY]aei+.0-6,5/LPTX\`dhjmolskrnJNRVZ^bfBCDEFGHI
x)?@!"#$%&'(
symbol stub for: 
Read from 0x%llx to 0x%llx: length %zu
Instruction exceeds 15-byte limit
readPrefixes()
Redundant Group 1 prefix
Redundant Group 2 prefix
Redundant Group 3 prefix
Redundant Group 4 prefix
Found prefix 0x%hhx
Couldn't read second byte of VEX
Found VEX prefix 0x%hhx 0x%hhx 0x%hhx
Found VEX prefix 0x%hhx 0x%hhx
Redundant REX prefix
Found REX prefix 0x%hhx
readOpcode()
Unhandled m-mmmm field for instruction (0x%hhx)
Found a two-byte escape prefix (0x%hhx)
Found a three-byte escape prefix (0x%hhx)
Didn't find a three-byte escape prefix
getID()
readModRM()
readDisplacement()
readSIB()
SIB-based addressing doesn't work in 16-bit mode
readOperands()
We currently don't hande code-offset encodings
Encountered an operand with an unknown encoding.
readVVVV()
fixupReg()
readImmediate()
readOpcodeRegister()
readOpcodeModifier()
invalid register name
register %
 is only available in 64-bit mode
expected stack index
invalid stack index
expected ')'
setb
setnb
unord
eq_uq
false
neq_oq
true
eq_os
lt_oq
le_oq
unord_s
neq_us
nlt_uq
nle_uq
ord_s
eq_us
nge_uq
ngt_uq
false_os
neq_os
ge_oq
gt_oq
true_us
vcmpss
cmpss
vcmpsd
cmpsd
vcmpps
cmpps
vcmppd
cmppd
repe
repne
data16
movsb
movsw
movsl
movsq
lodsb
lodsw
lodsl
lodsq
stosb
stosw
stosl
stosq
int3
Unsupported directive!
Unable to parse expression!
Unable to lookup TYPE of expr!
Expected ':' token!
Expected '[' token!
Expected ']' token!
Expected register
Unexpected token
unexpected token after +
expected ']' token!
%eiz and %riz can only be used as index registers
eiz and riz can only be used as index registers
expected comma in scale expression
expected scale expression
scale factor in address must be 1, 2, 4 or 8
scale factor without index register is ignored
unexpected token in memory operand
index register is 32-bit, but base register is 64-bit
index register is 64-bit, but base register is 32-bit
.code32
.code64
unexpected directive 
adcb
adcl
adcq
adcw
addb
addl
addpd
addps
addq
addsd
addss
addsubpd
addsubps
addw
aesdec
aesdeclast
aesenc
aesenclast
aesimc
aeskeygenassist
andb
andl
andn
andnl
andnpd
andnps
andnq
andpd
andps
andq
andw
arpl
bextr
bextrl
bextrq
blendpd
blendps
blendvpd
blendvps
blsi
blsil
blsiq
blsmsk
blsmskl
blsmskq
blsr
blsrl
blsrq
bound
bsfl
bsfq
bsfw
bsrl
bsrq
bsrw
bswap
bswapl
bswapq
btcl
btcq
btcw
btrl
btrq
btrw
btsl
btsq
btsw
bzhi
bzhil
bzhiq
call
calll
callq
callw
cbtw
cdqe
clflush
clgi
clrb
clrl
clrq
clrw
cltd
cltq
clts
cmova
cmovae
cmovael
cmovaeq
cmovaew
cmoval
cmovaq
cmovaw
cmovb
cmovbe
cmovbel
cmovbeq
cmovbew
cmovbl
cmovbq
cmovbw
cmove
cmovel
cmoveq
cmovew
cmovg
cmovge
cmovgel
cmovgeq
cmovgew
cmovgl
cmovgq
cmovgw
cmovl
cmovle
cmovlel
cmovleq
cmovlew
cmovll
cmovlq
cmovlw
cmovne
cmovnel
cmovneq
cmovnew
cmovno
cmovnol
cmovnoq
cmovnow
cmovnp
cmovnpl
cmovnpq
cmovnpw
cmovns
cmovnsl
cmovnsq
cmovnsw
cmovo
cmovol
cmovoq
cmovow
cmovp
cmovpl
cmovpq
cmovpw
cmovs
cmovsl
cmovsq
cmovsw
cmpb
cmpl
cmppd
cmpps
cmpq
cmpsb
cmpsd
cmpsl
cmpsq
cmpss
cmpsw
cmpw
cmpxchg
cmpxchg16b
cmpxchg8b
cmpxchgb
cmpxchgl
cmpxchgq
cmpxchgw
comisd
comiss
cpuid
cqto
crc32
crc32b
crc32l
crc32q
crc32w
cvtdq2pd
cvtdq2ps
cvtpd2dq
cvtpd2pi
cvtpd2ps
cvtpi2pd
cvtpi2ps
cvtps2dq
cvtps2pd
cvtps2pi
cvtsd2si
cvtsd2sil
cvtsd2siq
cvtsd2ss
cvtsi2sd
cvtsi2sdl
cvtsi2sdq
cvtsi2ss
cvtsi2ssl
cvtsi2ssq
cvtss2sd
cvtss2si
cvtss2sil
cvtss2siq
cvttpd2dq
cvttpd2pi
cvttps2dq
cvttps2pi
cvttsd2si
cvttsd2sil
cvttsd2siq
cvttss2si
cvttss2sil
cvttss2siq
cwde
cwtd
cwtl
data16
decb
decl
decq
decw
divb
divl
divpd
divps
divq
divsd
divss
divw
dppd
dpps
emms
enter
extractps
extrq
f2xm1
fabs
fadd
faddl
faddp
fadds
fbld
fbstp
fchs
fcmovb
fcmovbe
fcmove
fcmovnb
fcmovnbe
fcmovne
fcmovnu
fcmovu
fcom
fcomi
fcoml
fcomp
fcompi
fcompl
fcompp
fcomps
fcoms
fcos
fdecstp
fdiv
fdivl
fdivp
fdivr
fdivrl
fdivrp
fdivrs
fdivs
femms
ffree
fiadd
fiaddl
fiadds
ficom
ficoml
ficomp
ficompl
ficomps
ficoms
fidiv
fidivl
fidivr
fidivrl
fidivrs
fidivs
fild
fildl
fildll
filds
fimul
fimull
fimuls
fincstp
fist
fistl
fistp
fistpl
fistpll
fistps
fists
fisttp
fisttpl
fisttpll
fisttps
fisub
fisubl
fisubr
fisubrl
fisubrs
fisubs
fld1
fldcw
fldenv
fldl
fldl2e
fldl2t
fldlg2
fldln2
fldpi
flds
fldt
fldz
fmul
fmull
fmulp
fmuls
fnclex
fninit
fnop
fnsave
fnstcw
fnstenv
fnstsw
fpatan
fprem
fprem1
fptan
frndint
frstor
fscale
fsin
fsincos
fsqrt
fstl
fstp
fstpl
fstps
fstpt
fsts
fsub
fsubl
fsubp
fsubr
fsubrl
fsubrp
fsubrs
fsubs
ftst
fucom
fucomi
fucomp
fucompi
fucompp
fxam
fxch
fxrstor
fxrstorq
fxsave
fxsaveq
fxtract
fyl2x
fyl2xp1
haddpd
haddps
hsubpd
hsubps
idiv
idivb
idivl
idivq
idivw
imul
imulb
imull
imulq
imulw
incb
incl
incq
incw
insb
insertps
insertq
insl
insw
int3
into
invd
invept
invlpg
invlpga
invpcid
invvpid
iret
iretd
iretl
iretq
iretw
jcxz
jecxz
jmpl
jmpq
jmpw
jrcxz
lahf
larl
larq
larw
lcall
lcalll
lcallq
lcallw
lddqu
ldmxcsr
ldsl
ldsw
leal
leaq
leave
leaw
lesl
lesw
lfence
lfsl
lfsq
lfsw
lgdt
lgdtw
lgsl
lgsq
lgsw
lidt
lidtw
ljmp
ljmpl
ljmpq
ljmpw
lldt
lldtw
lmsw
lmsww
lock
lodsb
lodsd
lodsl
lodsq
lodsw
loop
loope
loopne
lretl
lretq
lretw
lsll
lslq
lslw
lssl
lssq
lssw
ltrw
lzcnt
lzcntl
lzcntq
lzcntw
maskmovdqu
maskmovq
maxpd
maxps
maxsd
maxss
mfence
minpd
minps
minsd
minss
monitor
montmul
movabs
movabsq
movapd
movaps
movb
movbe
movbel
movbeq
movbew
movd
movddup
movdq2q
movdqa
movdqu
movhlps
movhpd
movhps
movl
movlhps
movlpd
movlps
movmskpd
movmskps
movntdq
movntdqa
movnti
movntil
movntiq
movntpd
movntps
movntq
movntsd
movntss
movq
movq2dq
movsb
movsbl
movsbq
movsbw
movsd
movshdup
movsl
movsldup
movslq
movsq
movss
movsw
movswl
movswq
movsx
movsxd
movupd
movups
movw
movzbl
movzbq
movzbw
movzwl
movzwq
movzx
mpsadbw
mulb
mull
mulpd
mulps
mulq
mulsd
mulss
mulw
mulx
mulxl
mulxq
mwait
negb
negl
negq
negw
nopl
nopw
notb
notl
notq
notw
orpd
orps
outb
outl
outsb
outsd
outsl
outsw
outw
pabsb
pabsd
pabsw
packssdw
packsswb
packusdw
packuswb
paddb
paddd
paddq
paddsb
paddsw
paddusb
paddusw
paddw
palignr
pand
pandn
pause
pavgb
pavgusb
pavgw
pblendvb
pblendwpclmulhqhqdqpclmulhqlqdqpclmullqhqdqpclmullqlqdq
pclmulqdq
pcmpeqb
pcmpeqd
pcmpeqq
pcmpeqw
pcmpestri
pcmpestrm
pcmpgtb
pcmpgtd
pcmpgtq
pcmpgtw
pcmpistri
pcmpistrm
pdep
pdepl
pdepq
pext
pextl
pextq
pextrb
pextrd
pextrq
pextrw
pf2id
pf2iw
pfacc
pfadd
pfcmpeq
pfcmpge
pfcmpgt
pfmax
pfmin
pfmul
pfnacc
pfpnacc
pfrcp
pfrcpit1
pfrcpit2
pfrsqit1
pfrsqrt
pfsub
pfsubr
phaddd
phaddsw
phaddw
phminposuw
phsubd
phsubsw
phsubw
pi2fd
pi2fw
pinsrb
pinsrd
pinsrq
pinsrw
pmaddubsw
pmaddwd
pmaxsb
pmaxsd
pmaxsw
pmaxub
pmaxud
pmaxuw
pminsb
pminsd
pminsw
pminub
pminud
pminuw
pmovmskb
pmovsxbd
pmovsxbq
pmovsxbw
pmovsxdq
pmovsxwd
pmovsxwq
pmovzxbd
pmovzxbq
pmovzxbw
pmovzxdq
pmovzxwd
pmovzxwq
pmuldq
pmulhrsw
pmulhrw
pmulhuw
pmulhw
pmulld
pmullw
pmuludq
popa
popal
popcnt
popcntl
popcntq
popcntw
popf
popfd
popfl
popfq
popfw
popl
popq
popw
prefetch
prefetchnta
prefetcht0
prefetcht1
prefetcht2
prefetchw
psadbw
pshufb
pshufd
pshufhw
pshuflw
pshufw
psignb
psignd
psignw
pslld
pslldq
psllq
psllw
psrad
psraw
psrld
psrldq
psrlq
psrlw
psubb
psubd
psubq
psubsb
psubsw
psubusb
psubusw
psubw
pswapd
ptest
punpckhbw
punpckhdq
punpckhqdq
punpckhwd
punpcklbw
punpckldq
punpcklqdq
punpcklwd
push
pusha
pushal
pushf
pushfd
pushfl
pushfq
pushfw
pushl
pushq
pushw
pxor
rclb
rcll
rclq
rclw
rcpps
rcpss
rcrb
rcrl
rcrq
rcrw
rdfsbase
rdfsbasel
rdfsbaseq
rdgsbase
rdgsbasel
rdgsbaseq
rdmsr
rdpmc
rdrand
rdrandl
rdrandq
rdrandw
rdtsc
rdtscp
repne
retf
retw
rex64
rolb
roll
rolq
rolw
rorb
rorl
rorq
rorw
rorx
rorxl
rorxq
roundpd
roundps
roundsd
roundss
rsqrtps
rsqrtss
sahf
sarb
sarl
sarq
sarw
sarx
sarxl
sarxq
sbbb
sbbl
sbbq
sbbw
scasb
scasd
scasl
scasq
scasw
seta
setae
setb
setbe
sete
setg
setge
setl
setle
setne
setno
setnp
setns
seto
setp
sets
sfence
sgdt
sgdtw
shlb
shld
shldl
shldq
shldw
shll
shlq
shlw
shlx
shlxl
shlxq
shrb
shrd
shrdl
shrdq
shrdw
shrl
shrq
shrw
shrx
shrxl
shrxq
shufpd
shufps
sidt
sidtw
skinit
sldt
sldtl
sldtq
sldtw
smsw
smswl
smswq
smsww
sqrtpd
sqrtps
sqrtsd
sqrtss
stgi
stmxcsr
stosb
stosd
stosl
stosq
stosw
strl
strq
strw
subb
subl
subpd
subps
subq
subsd
subss
subw
swapgs
syscall
sysenter
sysexit
sysexitl
sysexitq
sysret
sysretl
sysretq
test
testb
testl
testq
testw
tzcnt
tzcntl
tzcntq
tzcntw
ucomisd
ucomiss
ud2b
unpckhpd
unpckhps
unpcklpd
unpcklps
vaddpd
vaddps
vaddsd
vaddss
vaddsubpd
vaddsubps
vaesdec
vaesdeclast
vaesenc
vaesenclast
vaesimc
vaeskeygenassist
vandnpd
vandnps
vandpd
vandps
vblendpd
vblendps
vblendvpd
vblendvps
vbroadcastf128
vbroadcasti128vbroadcastsdvbroadcastss
vcmp
vcmppd
vcmpps
vcmpsd
vcmpss
vcomisd
vcomiss
vcvtdq2pd
vcvtdq2ps
vcvtpd2dq
vcvtpd2dqx
vcvtpd2dqy
vcvtpd2ps
vcvtpd2psx
vcvtpd2psy
vcvtph2ps
vcvtps2dq
vcvtps2pd
vcvtps2ph
vcvtsd2si
vcvtsd2sil
vcvtsd2siq
vcvtsd2ss
vcvtsi2sd
vcvtsi2sdl
vcvtsi2sdq
vcvtsi2ss
vcvtsi2ssl
vcvtsi2ssq
vcvtss2sd
vcvtss2si
vcvtss2sil
vcvtss2siq
vcvttpd2dq
vcvttpd2dqx
vcvttpd2dqy
vcvttps2dq
vcvttsd2si
vcvttsd2sil
vcvttsd2siq
vcvttss2si
vcvttss2sil
vcvttss2siq
vdivpd
vdivps
vdivsd
vdivss
vdppd
vdpps
verr
verwvextractf128vextracti128
vextractps
vfmadd132pd
vfmadd132ps
vfmadd132sd
vfmadd132ss
vfmadd213pd
vfmadd213ps
vfmadd213sd
vfmadd213ss
vfmadd231pd
vfmadd231ps
vfmadd231sd
vfmadd231ss
vfmaddpd
vfmaddps
vfmaddsd
vfmaddss
vfmaddsub132pd
vfmaddsub132ps
vfmaddsub213pd
vfmaddsub213ps
vfmaddsub231pd
vfmaddsub231ps
vfmaddsubpd
vfmaddsubps
vfmsub132pd
vfmsub132ps
vfmsub132sd
vfmsub132ss
vfmsub213pd
vfmsub213ps
vfmsub213sd
vfmsub213ss
vfmsub231pd
vfmsub231ps
vfmsub231sd
vfmsub231ss
vfmsubadd132pd
vfmsubadd132ps
vfmsubadd213pd
vfmsubadd213ps
vfmsubadd231pd
vfmsubadd231ps
vfmsubaddpd
vfmsubaddps
vfmsubpd
vfmsubps
vfmsubsd
vfmsubssvfnmadd132pdvfnmadd132psvfnmadd132sdvfnmadd132ssvfnmadd213pdvfnmadd213psvfnmadd213sdvfnmadd213ssvfnmadd231pdvfnmadd231psvfnmadd231sdvfnmadd231ss
vfnmaddpd
vfnmaddps
vfnmaddsd
vfnmaddssvfnmsub132pdvfnmsub132psvfnmsub132sdvfnmsub132ssvfnmsub213pdvfnmsub213psvfnmsub213sdvfnmsub213ssvfnmsub231pdvfnmsub231psvfnmsub231sdvfnmsub231ss
vfnmsubpd
vfnmsubps
vfnmsubsd
vfnmsubss
vfrczpd
vfrczps
vfrczsd
vfrczss
vgatherdpd
vgatherdps
vgatherqpd
vgatherqps
vhaddpd
vhaddps
vhsubpd
vhsubps
vinsertf128
vinserti128
vinsertps
vlddqu
vldmxcsr
vmaskmovdqu
vmaskmovpd
vmaskmovps
vmaxpd
vmaxps
vmaxsd
vmaxss
vmcall
vmclear
vmfunc
vminpd
vminps
vminsd
vminss
vmlaunch
vmload
vmmcall
vmovapd
vmovaps
vmovd
vmovddup
vmovdqa
vmovdqu
vmovhlps
vmovhpd
vmovhps
vmovlhps
vmovlpd
vmovlps
vmovmskpd
vmovmskps
vmovntdq
vmovntdqa
vmovntpd
vmovntps
vmovq
vmovsd
vmovshdup
vmovsldup
vmovss
vmovupd
vmovups
vmpsadbw
vmptrld
vmptrst
vmread
vmreadl
vmreadq
vmresume
vmrun
vmsave
vmulpd
vmulps
vmulsd
vmulss
vmwrite
vmwritel
vmwriteq
vmxoff
vmxon
vorpd
vorps
vpabsb
vpabsd
vpabsw
vpackssdw
vpacksswb
vpackusdw
vpackuswb
vpaddb
vpaddd
vpaddq
vpaddsb
vpaddsw
vpaddusb
vpaddusw
vpaddw
vpalignr
vpand
vpandn
vpavgb
vpavgw
vpblendd
vpblendvb
vpblendwvpbroadcastbvpbroadcastdvpbroadcastqvpbroadcastw
vpclmulhqhqdq
vpclmulhqlqdq
vpclmullqhqdq
vpclmullqlqdq
vpclmulqdq
vpcmov
vpcmpeqb
vpcmpeqd
vpcmpeqq
vpcmpeqw
vpcmpestri
vpcmpestrm
vpcmpgtb
vpcmpgtd
vpcmpgtq
vpcmpgtw
vpcmpistri
vpcmpistrm
vpcomb
vpcomd
vpcomq
vpcomub
vpcomud
vpcomuq
vpcomuw
vpcomw
vperm2f128
vperm2i128
vpermd
vpermil2pd
vpermil2ps
vpermilpd
vpermilps
vpermpd
vpermps
vpermq
vpextrb
vpextrd
vpextrq
vpextrw
vpgatherdd
vpgatherdq
vpgatherqd
vpgatherqq
vphaddbd
vphaddbq
vphaddbw
vphaddd
vphadddq
vphaddsw
vphaddubd
vphaddubq
vphaddubw
vphaddudq
vphadduwd
vphadduwq
vphaddw
vphaddwd
vphaddwq
vphminposuw
vphsubbw
vphsubd
vphsubdq
vphsubsw
vphsubw
vphsubwd
vpinsrb
vpinsrd
vpinsrq
vpinsrw
vpmacsdd
vpmacsdqh
vpmacsdql
vpmacssdd
vpmacssdqh
vpmacssdql
vpmacsswd
vpmacssww
vpmacswd
vpmacsww
vpmadcsswd
vpmadcswd
vpmaddubsw
vpmaddwd
vpmaskmovd
vpmaskmovq
vpmaxsb
vpmaxsd
vpmaxsw
vpmaxub
vpmaxud
vpmaxuw
vpminsb
vpminsd
vpminsw
vpminub
vpminud
vpminuw
vpmovmskb
vpmovsxbd
vpmovsxbq
vpmovsxbw
vpmovsxdq
vpmovsxwd
vpmovsxwq
vpmovzxbd
vpmovzxbq
vpmovzxbw
vpmovzxdq
vpmovzxwd
vpmovzxwq
vpmuldq
vpmulhrsw
vpmulhuw
vpmulhw
vpmulld
vpmullw
vpmuludq
vpor
vpperm
vprotb
vprotd
vprotq
vprotw
vpsadbw
vpshab
vpshad
vpshaq
vpshaw
vpshlb
vpshld
vpshlq
vpshlw
vpshufb
vpshufd
vpshufhw
vpshuflw
vpsignb
vpsignd
vpsignw
vpslld
vpslldq
vpsllq
vpsllvd
vpsllvq
vpsllw
vpsrad
vpsravd
vpsraw
vpsrld
vpsrldq
vpsrlq
vpsrlvd
vpsrlvq
vpsrlw
vpsubb
vpsubd
vpsubq
vpsubsb
vpsubsw
vpsubusb
vpsubusw
vpsubw
vptest
vpunpckhbw
vpunpckhdq
vpunpckhqdq
vpunpckhwd
vpunpcklbw
vpunpckldq
vpunpcklqdq
vpunpcklwd
vpxor
vrcpps
vrcpss
vroundpd
vroundps
vroundsd
vroundss
vrsqrtps
vrsqrtss
vshufpd
vshufps
vsqrtpd
vsqrtps
vsqrtsd
vsqrtss
vstmxcsr
vsubpd
vsubps
vsubsd
vsubss
vtestpd
vtestps
vucomisd
vucomiss
vunpckhpd
vunpckhps
vunpcklpd
vunpcklps
vxorpd
vxorps
vzeroall
vzeroupper
wait
wbinvd
wrfsbase
wrfsbasel
wrfsbaseq
wrgsbase
wrgsbasel
wrgsbaseq
wrmsr
xadd
xaddb
xaddl
xaddq
xaddw
xchg
xchgb
xchgl
xchgq
xchgw
xcryptcbc
xcryptcfb
xcryptctr
xcryptecb
xcryptofb
xgetbv
xlatb
xorb
xorl
xorpd
xorps
xorq
xorw
xrstor
xrstorq
xsave
xsaveopt
xsaveoptq
xsaveq
xsetbv
xsha1
xsha256
xstore
xstorerng
fstsw
fstcw
fstsww
fstcww
finit
fsave
fstenv
fclex
fninit
fnsave
fnstcw
fnstenv
fnstsw
fnclex
instruction requires a CPU feature not currently enabled
bwlq
ambiguous instructions require an explicit suffix (could be 
invalid instruction mnemonic '
unknown use of instruction mnemonic without a size suffix
cbtw
cltd
cqto
cwtd
popl
popq
calll
callq
cltq
cwtl
iretl
lretl
popfl
popfq
pushl
pushq
shlb
shll
shlq
shlw
sete
fildll
wait
lgdt
lidt
loope
pushfl
pushfq
setbe
setae
setle
setge
setne
setp
setnp
sgdt
sidt
verr
cmovbl
cmovbq
cmovbw
cmovel
cmoveq
cmovew
fcmovnbe
fcmove
fcompi
fistpll
fldcw
leave
loopne
seta
setl
setg
sysretl
cmovbel
cmovbeq
cmovbew
cmovael
cmovaeq
cmovaew
cmovlel
cmovleq
cmovlew
cmovgel
cmovgeq
cmovgew
cmovnel
cmovneq
cmovnew
cmovpl
cmovpq
cmovpw
cmovnpl
cmovnpq
cmovnpw
fcmovnb
fcmovbe
fisttpll
fucompi
sysexitl
cmoval
cmovaq
cmovaw
cmovll
cmovlq
cmovlw
cmovgl
cmovgq
cmovgw
fcmovb
mc-x86-disable-arith-relaxation
Disable relaxation of arithmetic instruction for X86
reloc_riprel_4byte
reloc_riprel_4byte_movq_load
reloc_signed_4byte
reloc_global_offset_table
x86-asm-syntax
Choose style of code to emit from X86 backend:
Emit AT&T-style assembly
intel
Emit Intel-style assembly
mark-data-regions
Mark code section jump table data regions.
.note.GNU-stack
Cannot find option named '
FORM: 
_GLOBAL_OFFSET_TABLE_
GR8_NOREX
GR8_ABCD_H
GR8_ABCD_L
GR16
GR16_NOREX
SEGMENT_REG
GR16_ABCD
FPCCR
FR32
GR32
GR32_NOAX
GR32_NOSP
GR32_NOAX_and_GR32_NOSP
DEBUG_REG
GR32_NOREX
GR32_NOAX_and_GR32_NOREX
GR32_NOREX_NOSP
RFP32
GR32_NOAX_and_GR32_NOREX_NOSP
GR32_ABCD
GR32_ABCD_and_GR32_NOAX
GR32_TC
GR32_AD
GR32_NOAX_and_GR32_TC
GR32_AD_and_GR32_NOAX
RFP64
GR64
CONTROL_REG
FR64
GR64_with_sub_8bit
GR64_NOSP
GR64_with_sub_32bit_in_GR32_NOAX
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP
GR64_NOREX
GR64_TC
GR64_NOSP_and_GR64_TC
GR64_with_sub_16bit_in_GR16_NOREX
VR64
GR64_NOREX_NOSP
GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX
GR64_NOREX_and_GR64_TC
GR64_TCW64
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP
GR64_NOREX_NOSP_and_GR64_TC
GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX
GR64_ABCD
GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX
GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX
GR64_with_sub_32bit_in_GR32_TC
GR64_with_sub_32bit_in_GR32_AD
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC
GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX
RFP80
VR128
VR256
3dnow
Enable 3DNow! instructions
3dnowa
Enable 3DNow! Athlon instructions
64bit
Support 64-bit instructions
64bit-mode
64-bit mode (x86_64)
Enable AES instructions
atom
Intel Atom processors
Enable AVX instructions
avx2
Enable AVX2 instructions
Support BMI instructions
bmi2
Support BMI2 instructions
cmov
Enable conditional move instructions
cmpxchg16b
64-bit with cmpxchg16b
f16c
Support 16-bit floating point conversion instructions
fast-unaligned-mem
Fast unaligned memory access
Enable three-operand fused multiple-add
fma4
Enable four-operand fused multiple-add
fsgsbase
Support FS/GS Base instructions
idiv-to-divb
Use small divide for positive values less than 256
lea-sp
Use LEA for adjusting the stack pointer
lzcnt
Support LZCNT instruction
Enable MMX instructions
movbe
Support MOVBE instruction
pclmul
Enable packed carry-less multiplication instructions
popcnt
Support POPCNT instruction
rdrand
Support RDRAND instruction
slow-bt-mem
Bit testing of memory is slow
Enable SSE instructions
sse2
Enable SSE2 instructions
sse3
Enable SSE3 instructions
sse41
Enable SSE 4.1 instructions
sse42
Enable SSE 4.2 instructions
sse4a
Support SSE 4a instructions
ssse3
Enable SSSE3 instructions
vector-unaligned-mem
Allow unaligned memory operands on vector/SIMD instructions
Enable XOP instructions
amdfam10
Select the amdfam10 processor
athlon
Select the athlon processor
athlon-4
Select the athlon-4 processor
athlon-fx
Select the athlon-fx processor
athlon-mp
Select the athlon-mp processor
athlon-tbird
Select the athlon-tbird processor
athlon-xp
Select the athlon-xp processor
athlon64
Select the athlon64 processor
athlon64-sse3
Select the athlon64-sse3 processor
Select the atom processor
bdver1
Select the bdver1 processor
bdver2
Select the bdver2 processor
btver1
Select the btver1 processor
Select the c3 processor
c3-2
Select the c3-2 processor
core-avx-i
Select the core-avx-i processor
core-avx2
Select the core-avx2 processor
core2
Select the core2 processor
corei7
Select the corei7 processor
corei7-avx
Select the corei7-avx processor
geode
Select the geode processor
i386
Select the i386 processor
i486
Select the i486 processor
i586
Select the i586 processor
i686
Select the i686 processor
Select the k6 processor
k6-2
Select the k6-2 processor
k6-3
Select the k6-3 processor
Select the k8 processor
k8-sse3
Select the k8-sse3 processor
nehalem
Select the nehalem processor
nocona
Select the nocona processor
opteron
Select the opteron processor
opteron-sse3
Select the opteron-sse3 processor
penryn
Select the penryn processor
pentium
Select the pentium processor
pentium-m
Select the pentium-m processor
pentium-mmx
Select the pentium-mmx processor
pentium2
Select the pentium2 processor
pentium3
Select the pentium3 processor
pentium3m
Select the pentium3m processor
pentium4
Select the pentium4 processor
pentium4m
Select the pentium4m processor
pentiumpro
Select the pentiumpro processor
prescott
Select the prescott processor
westmere
Select the westmere processor
winchip-c6
Select the winchip-c6 processor
winchip2
Select the winchip2 processor
Select the x86-64 processor
yonah
Select the yonah processor
+64bit-mode
-64bit-mode
unsupported relocation of modified symbol
unsupported pc-relative relocation of difference
unsupported relocation with identical base
unsupported relocation of variable '
unsupported relocation of undefined symbol '
unsupported symbol modifier in relocation
unsupported symbol modifier in branch relocation
TLVP symbol modifier should have been rip-rel
0x%x
Section too large, can't encode r_address (
) into 24 bits of scattered relocation entry.
32-bit X86: Pentium-Pro and above
x86-64
64-bit X86: EM64T and AMD64
, %ax
, %eax
, %rax
, %al
, %st(0)
  # NOREX
  # TAILCALL
fcomp
fcomi
fcom
fdivp
fdivrp
inw %dx
inl %dx
inb %dx
movsd
fmulp
outw %dx
outl %dx
outb %dx
shldw $r2, $r1
shldl $r2, $r1
shldq $r2, $r1
shrdw $r2, $r1
shrdl $r2, $r1
shrdq $r2, $r1
fsubp
fsubrp
fucomi
fucomp
fucom
fxch
clrw $reg
clrl $reg
clrq $reg
clrb $reg
xstorerng
lock
imm = 0x%llX
zero
, ST(0)
, AL
, EAX
, AX
, CL
, %cl
WORD PTR 
DWORD PTR 
QWORD PTR 
BYTE PTR 
XMMWORD PTR 
OPAQUE PTR 
XWORD PTR 
YMMWORD PTR 
A @@ version cannot be undefined
.rela
.rel
.shstrtab
.symtab
.symtab_shndx
.strtab
Size expression must be absolute.
FK_Data_1
FK_Data_2
FK_Data_4
FK_Data_8
FK_PCRel_1
FK_PCRel_2
FK_PCRel_4
FK_PCRel_8
FK_GPRel_1
FK_GPRel_2
FK_GPRel_4
FK_GPRel_8
FK_SecRel_1
FK_SecRel_2
FK_SecRel_4
FK_SecRel_8
NO_APP
.code16
.zero
.ascii
.asciz
.byte
.short
.long
.quad
.align
.globl
.linkonce discard
 InlineAsm Start
 InlineAsm End
.weak_definition 
.weak_reference 
.space
.cfi_startproc
.cfi_endproc
__TEXT
__text
.syntax unified
.subsections_via_symbols
.data_region
.data_region jt8
.data_region jt16
.data_region jt32
.end_data_region
.thumb_func
.weakref 
.type
function
gnu_indirect_function
object
tls_object
common
no_type
gnu_unique_object
.hidden
.indirect_symbol
.internal
.lazy_reference
.local
.no_dead_strip
.symbol_resolver
.private_extern
.protected
.reference
.weak_definition
.weak_def_can_be_hidden
.desc
.def
.scl
.endef
.secrel32
.size
.comm
.lcomm
.zerofill 
.tbss 
Don't know how to emit this value.
.uleb128 
.sleb128 
.p2alignw 
.p2alignl 
, 0x
.balign
.balignw
.balignl
.org 
.file
.loc
 basic_block
 prologue_end
 epilogue_begin
 is_stmt 
isa 
discriminator 
.cfi_sections 
.eh_frame
, .debug_frame
.debug_frame
.cfi_def_cfa 
.cfi_def_cfa_offset 
.cfi_def_cfa_register 
.cfi_offset 
.cfi_personality 
.cfi_lsda 
.cfi_remember_state
.cfi_restore_state
.cfi_same_value 
.cfi_rel_offset 
.cfi_adjust_cfa_offset 
.cfi_signal_frame
.seh_proc 
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler 
, @unwind
, @except
.seh_handlerdata
.xdata
.seh_pushreg 
.seh_setframe 
.seh_stackalloc 
.seh_savereg 
.seh_savexmm 
.seh_pushframe
 @code
.seh_endprologue
.fnstart
.fnend
.cantunwind
.personality 
.handlerdata
.setfp
.pad
.vsave
.save
encoding: [
0x%02x
  fixup 
offset: 
, value: 
, kind: 
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
expected relocatable expression
expected assembly-time absolute expression
invalid .org offset '
' (at offset '
assembler
Number of evaluated fixups
Number of fragment layouts
undefined .align directive, value size '
' is not a divisor of padding size '
unable to write nop sequence of 
 bytes
Number of emitted assembler fragments
Number of emitted object file bytes
Number of relaxed instructions
Number of assembler layout and relaxation steps
AS_SECURE_LOG_FILE
.group
llvm-mc (based on LLVM 
3.2svn
Range Start
Range Length
Compact Unwind Encoding: 0x
Personality Function
LSDA
EH_frame
CIE Length
CIE ID Tag
DW_CIE_VERSION
CIE Augmentation
CIE Code Alignment Factor
CIE Data Alignment Factor
CIE Return Address Column
Augmentation Size
Personality Encoding
Personality
LSDA Encoding
FDE Encoding
<unknown encoding>
absptr
omit
pcrel
udata4
udata8
sdata4
sdata8
pcrel udata4
pcrel sdata4
pcrel udata8
screl sdata8
indirect pcrel udata4
indirect pcrel sdata4
indirect pcrel udata8
indirect pcrel sdata8
DW_CFA_advance_loc4
DW_CFA_def_cfa_offset
DW_CFA_def_cfa
Reg 
Offset 
DW_CFA_def_cfa_register
DW_CFA_offset_extended_sf
DW_CFA_offset + Reg(
DW_CFA_offset_extended
DW_CFA_remember_state
DW_CFA_restore_state
DW_CFA_same_value
DW_CFA_restore
Escape bytes
FDE Length
FDE CIE Offset
FDE initial location
FDE address range
Augmentation size
Language Specific Data Area
.text
.data
.bss
<<invalid>>
<<none>>
GOTOFF
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
DTPOFF
TLVP
SECREL
(PLT)
(GOT)
(GOTOFF)
(tpoff)
(gottpoff)
(tlsgd)
(target1)
tocbase
ha16
lo16
tprel@ha
tprel@l
GPREL
GOT_CALL
GOT16
ABS_HI
ABS_LO
DTPREL_HI
DTPREL_LO
GOTTPREL
TPREL_HI
TPREL_LO
GPOFF_HI
GPOFF_LO
GOT_DISP
GOT_PAGE
GOT_OFST
HIGHER
HIGHEST
mcexpr
Number of MCExpr evaluations
<MCOperand 
INVALID
Reg:
Imm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
__DATA
__bss
__eh_frame
This file format doesn't support weak aliases.
.linkonce one_only
.linkonce same_size
.linkonce same_contents
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
.section
.section
,#alloc
,#execinstr
,#write
,#tls
init_array
fini_array
preinit_array
nobits
note
progbits
,comdat
,none,
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
debug
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
unsupported directive in streamer
No open frame
No open Win64 EH frame function!
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
Frame register and offset already specified!
Misaligned frame pointer offset!
Misaligned stack allocation!
Misaligned saved register offset!
Misaligned saved vector register offset!
If present, PushMachFrame must be the first UOP
Not implemented yet
EmitRawText called on an MCStreamer that doesn't support it,  something must not be fully mc'ized
' is not a recognized processor for this target
 (ignoring processor)
.pdata
invalid 'common' alignment '
' is not a recognized feature for this target
 (ignoring feature)
help
Available CPUs for this target:
  %-*s - %s.
Available features for this target:
Use +feature to enable a feature, or -feature to disable it.
For example, llc -mcpu=mycpu -mattr=+feature1,-feature2
.default
COFF string table is greater than 999999 bytes.
: for the -
 option: 
' is invalid value for boolean argument! Try 0 or 1
    =
 -   
    -
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
Display available options (-help-hidden for more)
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
: CommandLine Error: Argument '
' defined more than once!
Cannot specify more than one option with cl::ConsumeAfter!
OVERVIEW: 
USAGE: 
 [options]
OPTIONS:
LLVM (http://llvm.org/):
LLVM
 version 
 Apple Build #3425-36
Optimized build
  Built 
Sep 12 2020
06:06:16
  Default target: 
  Host CPU: 
string
LLVM ERROR: 
x86_64-apple-darwin20.0
TERM
dumb
Included from 
<unknown>
<stdin>
error: 
warning: 
note: 
stats
Enable statistics output from program
                          ... Statistics Collected ...
%*u %-*s - %s
Unable to find target for this triple (no targets are registered)
No available targets are compatible with this triple, see -version for the available targets.
" and "
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
filename
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
Error opening output file '
IO failure on output stream.
<premain>
