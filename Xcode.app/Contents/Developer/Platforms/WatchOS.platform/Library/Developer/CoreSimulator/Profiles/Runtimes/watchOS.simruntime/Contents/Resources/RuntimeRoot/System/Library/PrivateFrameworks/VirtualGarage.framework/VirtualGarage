@(#)PROGRAM:VirtualGarage  PROJECT:Navigation-1
VoltronUseMapsSyncLiveUpdates
VoltronKeyNameForModelID
model_id
VoltronKeyNameInManifestForWhitelistedModelIDs
model_ids
VoltronNameForWhitelistKey
whitelist
VoltronNameForBundleIDKey
VoltronResourceNameForWhitelistedModels
supportedEVInfo.json
VoltronForceShowLastSyncDate
VoltronOEMAppPullInterval
VoltronIntentsRequestTimeout
VoltronStreamUpdatesDuringNav
VoltronEnableWhiteListing
VoltronDisabledApplications
VoltronSynchronousVehicleStateUpdate
VoltronEnableIAP2Onboarding
VoltronUseCarDisplaySimIdentifier
VoltronEnableAutomaticVehicleDeselection
AutomaticallyDeselectMissingVehicles
__invalid__
+[VGVehicleDeduper actionForAddingNewVehicle:withExistingGarageVehicles:andUnpairedVehicles:]
newVehicle == nil
newVehicle cannot be nil
garageVehicles == nil
garageVehicles cannot be nil
unpairedVehicles == nil
unpairedVehicles cannot be nil
B32@?0@"VGVehicle"8Q16^B24
@"NSDictionary"16@?0@"NSData"8
_identifier
_iapIdentifier
_siriIntentsIdentifier
_creationDate
_lastStateUpdateDate
_displayName
_year
_manufacturer
_model
_colorHex
_headUnitIdentifier
_headUnitBluetoothIdentifier
_licensePlate
_lprVehicleType
_lprPowerType
_supportedConnectors
_powerByConnector
_currentVehicleState
_pairedAppIdentifier
_pairedAppInstallDeviceIdentifier
_pairedAppInstallSessionIdentifier
<%@:%p,
 identifier: %@,
 iapIdentifier: %@,
 siriIntentsIdentifier: %@,
 creationDate: %@,
 lastStateUpdateDate: %@,
 displayName: %@,
 year: %@,
 manufacturer: %@,
 model: %@,
 colorHex: %@,
 headUnitBluetoothIdentifier: %@,
 headUnitIdentifier: %@,
 license plate: %@,
 lprVehicleType: %@,
 lprPowerType: %@,
 supportedConnectors: %@,
 powerByConnector: %@,
 currentState: %@,
 pairedAppIdentifier: %@,
 pairedAppInstallDeviceIdentifier: %@,
 pairedAppInstallSessionIdentifier: %@
supportsSecureCoding
TB,R
pairedAppInstallDeviceIdentifier
T@"NSString",&,N,V_pairedAppInstallDeviceIdentifier
pairedAppInstallSessionIdentifier
T@"NSData",&,N,V_pairedAppInstallSessionIdentifier
identifier
T@"NSString",R,C,N,V_identifier
creationDate
T@"NSDate",R,C,N,V_creationDate
lastStateUpdateDate
T@"NSDate",R,C,N,V_lastStateUpdateDate
displayName
T@"NSString",C,N,V_displayName
year
T@"NSString",R,C,N,V_year
manufacturer
T@"NSString",R,C,N,V_manufacturer
model
T@"NSString",R,C,N,V_model
colorHex
T@"NSString",C,N,V_colorHex
headUnitBluetoothIdentifier
T@"NSString",R,C,N,V_headUnitBluetoothIdentifier
headUnitIdentifier
T@"NSString",R,C,N,V_headUnitIdentifier
licensePlate
T@"NSString",C,N,V_licensePlate
lprVehicleType
T@"NSString",C,N,V_lprVehicleType
lprPowerType
T@"NSString",C,N,V_lprPowerType
supportedConnectors
TQ,N,V_supportedConnectors
powerByConnector
T@"NSDictionary",R,C,N,V_powerByConnector
currentVehicleState
T@"VGVehicleState",R,N,V_currentVehicleState
isPureElectricVehicle
TB,R,N
pairedAppIdentifier
T@"NSString",&,N,V_pairedAppIdentifier
iapIdentifier
T@"NSString",&,N,V_iapIdentifier
siriIntentsIdentifier
T@"NSString",&,N,V_siriIntentsIdentifier
Unknown
iAP2
SiriIntents
%@ %@
dateOfUpdate
origin
batteryPercentage
currentEVRange
maxEVRange
minBatteryCapacity
currentBatteryCapacity
maxBatteryCapacity
consumptionArguments
chargingArguments
isCharging
activeConnector
T@"NSString",&,N,V_identifier
hasDateOfUpdate
TB,N
Td,N,V_dateOfUpdate
hasOrigin
Ti,N,V_origin
hasBatteryPercentage
Td,N,V_batteryPercentage
hasCurrentEVRange
Td,N,V_currentEVRange
hasMaxEVRange
Td,N,V_maxEVRange
hasMinBatteryCapacity
Td,N,V_minBatteryCapacity
hasCurrentBatteryCapacity
Td,N,V_currentBatteryCapacity
hasMaxBatteryCapacity
Td,N,V_maxBatteryCapacity
hasConsumptionArguments
T@"NSString",&,N,V_consumptionArguments
hasChargingArguments
T@"NSString",&,N,V_chargingArguments
hasIsCharging
TB,N,V_isCharging
hasActiveConnector
Ti,N,V_activeConnector
hasPairedAppInstallSessionIdentifier
hasPairedAppInstallDeviceIdentifier
UNKNOWN
IAP2
SIRIINTENTS
(unknown: %i)
NONE
J1772
CCS1
CCS2
CHADEMO
GBT_AC
GBT_DC
TESLA
MENNEKES
VGDataCoordinatorDeviceIdentifierKey
VGDataCoordinator.WorkQueue
VGDataCoordinator.DelegateQueue
v24@?0@"NSArray"8@"NSError"16
v8@?0
-[VGDataCoordinator _updateGarageWithVehicle:selectVehicle:syncAcrossDevices:]
-[VGDataCoordinator _updateStateOfChargeForVehicle:syncAcrossDevices:completion:]_block_invoke
v24@?0@"VGVehicleState"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
-[VGDataCoordinator finishOnboardingVehicle:]_block_invoke
-[VGDataCoordinator unpairVehicle:]_block_invoke
B32@?0@"VGOEMApplication"8Q16^B24
-[VGDataCoordinator startContinuousUpdatesForVehicle:]
vehicle == nil
can't start continuous updates with a nil vehicle.
-[VGDataCoordinator startContinuousUpdatesForVehicle:]_block_invoke
-[VGDataCoordinator endAllContinuousUpdates]_block_invoke
-[VGDataCoordinator _refreshStateForTrackedVehicles]_block_invoke
-[VGDataCoordinator _loadAllOEMVehiclesForApps:completion:]_block_invoke
-[VGDataCoordinator vehicleStateUpdated:]_block_invoke
-[VGDataCoordinator accessoryUpdatedWithVehicle:]_block_invoke
v32@?0@"VGVehicle"8Q16^B24
-[VGDataCoordinator OEMAppsUpdated:]_block_invoke
-[VGDataCoordinator getLatestStateOfVehicle:withReply:]
Could not get latest state of vehicle.
-[VGDataCoordinator getLatestStateOfVehicle:withReply:]_block_invoke
Could not get latest state of vehicle, because the provider was nil.
unpairedVehicles
T@"NSArray",R,C,N
%@ (empty)
%@ [%@]
%@<%p>
<nil>
%02lX%02lX%02lX%02lX
<%@:%p, _displayName=%@, _mapsDisplayName=%@, _engineType=%@, _rangeByEngines=%@>
name
T@"NSString",R,N
T@"NSString",R,N,V_manufacturer
T@"NSString",R,N,V_model
T@"NSString",R,N,V_year
T@"NSString",R,N,V_colorHex
T@"NSMeasurement",R,N
T@"NSMeasurement",R,N,V_maxEVRange
T@"NSString",R,N,V_consumptionArguments
T@"NSString",R,N,V_chargingArguments
batteryCharge
T@"NSNumber",R,N,V_batteryCharge
T@"NSMeasurement",R,N,V_minBatteryCapacity
T@"NSMeasurement",R,N,V_currentBatteryCapacity
T@"NSMeasurement",R,N,V_maxBatteryCapacity
T@"NSNumber",R,N,V_supportedConnectors
TB,R,N,V_isCharging
T@"NSNumber",R,N,V_activeConnector
T@"NSDictionary",R,N,V_powerByConnector
-[VGExternalAccessory _accessoryDidDisconnect:]
-[VGExternalAccessory _updateFromVehicleInfo:]
CarDisplaySim
isConnected
isConnectedToElectricVehicle
bluetoothIdentifier
currentState
T@"VGExternalAccessoryState",R,N
accessoryUpdateDelegate
T@"<VGExternalAccessoryUpdating>",W,N,V_accessoryUpdateDelegate
@"NSString"12@?0i8
Gasoline
Diesel
Electric
v24@?0i8i12@"NSMutableArray"16
CHAdeMO
Tesla
Mennekes
@"NSString"16@?0Q8
v24@?0Q8Q16
_dateOfUpdate
_origin
_batteryPercentage
_currentEVRange
_maxEVRange
_minBatteryCapacity
_currentBatteryCapacity
_maxBatteryCapacity
_consumptionArguments
_chargingArguments
_isCharging
_activeConnector
<%@:%p, identifier: %@, dateOfUpdate: %@, origin: %@, batteryCharge: %@, currentEVRange: %@, maxEVRange: %@, minBatteryCapacity: %@, currentBatteryCapacity: %@, maxBatteryCapacity: %@, consumptionArguments: %@, chargingArguments: %@, isCharging: %@, activeConnector: %@>
T@"NSNumber",R,N,V_batteryPercentage
T@"NSString",R,N,V_identifier
T@"NSDate",R,N,V_dateOfUpdate
Tq,R,N,V_origin
T@"NSMeasurement",R,N,V_currentEVRange
TQ,R,N,V_activeConnector
com.apple.navigation.VirtualGarage
Assert
ExternalAccessory
DataCoordinator
OEMApplication
Persisting
UIHelper
VirtualGarage
-[VGVirtualGarage initWithGaragePersister:]
persister == nil
Garage should be initialized with a persister.
-[VGVirtualGarage initWithGaragePersister:]_block_invoke
_vehicles
_selectedVehicleIdentifier
<%@:%p,
 _selectedVehicleIdentifier: %@,
 _vehicles: %@
B24@?0@"VGVehicle"8@"NSDictionary"16
v16@?0@"VGVirtualGarage"8
-[VGVirtualGarage virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:]
identifier == nil
vehicleIdentifier cannot be nil
reply == nil
reply block cannot be nil
v24@?0@"VGVehicle"8@"NSError"16
selectedVehicle
T@"VGVehicle",R,N
vehicles
T@"NSArray",R,N
delegate
T@"<VGVirtualGarageDelegate>",W,N,V_delegate
shouldAssumeFullCharge
TB,N,V_shouldAssumeFullCharge
VGOEMApplicationFinderQueue
-[VGOEMApplicationFinder valueChangedForGEOConfigKey:]_block_invoke
-[VGOEMApplicationFinder findOEMApplications]_block_invoke
-[VGOEMApplicationFinder applicationsDidInstall:]_block_invoke
-[VGOEMApplicationFinder applicationsDidUninstall:]_block_invoke
T@"<VGOEMApplicationFinderUpdates>",W,N
disabledAppIdentifiers
T@"NSSet",&,N,V_disabledAppIdentifiers
T@"NSDictionary",&,N,V_whitelist
applications
T@"NSMutableDictionary",&,N,V_applications
T@"<VGOEMApplicationFinderUpdates>",W,N,V_delegate
VGOEMApplicationQueue
-[VGOEMApplication listCarsWithCompletion:]
completion == nil
Completion cannot be nil!
-[VGOEMApplication listCarsWithCompletion:]_block_invoke
v24@?0@"INListCarsIntentResponse"8@"INCExtensionError"16
v24@?0@"<INCExtensionProxy>"8@"NSError"16
-[VGOEMApplication getStateOfChargeForVehicle:completion:]
-[VGOEMApplication getStateOfChargeForVehicle:completion:]_block_invoke
Intents error with code: %ld
Intent response with unsupported code: %ld
Invalid Formula
v24@?0@"INGetCarPowerLevelStatusIntentResponse"8@"INCExtensionError"16
-[VGOEMApplication _createChargeStreamingConnectionIfNeededForVehicle:]
Vehicle cannot be nil
-[VGOEMApplication _createChargeStreamingConnectionIfNeededForVehicle:]_block_invoke
-[VGOEMApplication startSendingChargeUpdatesForVehicle:]
-[VGOEMApplication startSendingChargeUpdatesForVehicle:]_block_invoke
-[VGOEMApplication stopSendingChargeUpdatesForVehicle:]
-[VGOEMApplication stopSendingChargeUpdatesForVehicle:]_block_invoke
-[VGOEMApplication intentResponseDidUpdate:withSerializedCacheItems:]
-[VGOEMApplication intentResponseDidUpdate:withSerializedCacheItems:]_block_invoke
-[VGOEMApplication _connectionWithIntent:]_block_invoke
v16@?0@"NSError"8
Identifier: %@
applicationRecord
T@"LSApplicationRecord",R,N
enabled
TB,N,GisEnabled
chargeStreamingDelegate
T@"<VGOEMAppSOCStreaming>",W,N
allowedFormulaIDs
T@"NSArray",&,N,V_allowedFormulaIDs
T@"LSApplicationRecord",R,N,V_applicationRecord
TB,N,GisEnabled,V_enabled
T@"<VGOEMAppSOCStreaming>",W,N,V_chargeStreamingDelegate
+[VGExternalAccessoryAdapter vehicleStateFromExternalAccessory:]
accessory == nil
accessory cannot be nil
accessory.identifier == nil
accessory cannot have a nil identifier
+[VGExternalAccessoryAdapter vehicleFromExternalAccessory:]
com.apple.maps.virtualgarage.server.%@.%p
com.apple.maps.virtualgarage.server
-[VGVirtualGarageServer startWithPersister:]_block_invoke
-[VGVirtualGarageServer stop]_block_invoke
com.apple.maps.virtualgarage.vehicles
-[VGVirtualGarageServer listener:shouldAcceptNewConnection:]_block_invoke
v24@?0@"VGVirtualGarage"8@"NSError"16
hostsVirtualGarage
TB,N,V_hostsVirtualGarage
garage
T@"VGVirtualGarage",&,N,V_garage
listener
T@"NSXPCListener",&,N,V_listener
activeConnections
T@"NSMutableArray",&,N,V_activeConnections
observer
T@"<VGVirtualGarageObserver>",W,N,V_observer
observerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_observerQueue
com.apple.maps.virtualgarage.callbacks.%@.%p
com.apple.maps.virtualgarage.service.%p.isolater
com.apple.maps.virtualgarage.service.%@.%p
-[VGVirtualGarageService openForClient:]
client == nil
Can't call openForClient: with a nil client
-[VGVirtualGarageService closeForClient:]
Can't call closeForClient: with a nil client
-[VGVirtualGarageService _closeConnection]_block_invoke
VirtualGarage isn't enabled, service isn't able to call to server.
-[VGVirtualGarageService virtualGarageAddVehicle:]
-[VGVirtualGarageService virtualGarageRemoveVehicle:]
-[VGVirtualGarageService virtualGarageGetGarageWithReply:]
-[VGVirtualGarageService virtualGarageSelectVehicle:]
-[VGVirtualGarageService virtualGarageOnboardVehicle:]
-[VGVirtualGarageService virtualGarageSaveVehicle:]
-[VGVirtualGarageService virtualGarageStartContinuousUpdatesIfNeeded]
-[VGVirtualGarageService virtualGarageEndContinuousUpdates]
-[VGVirtualGarageService virtualGarageGetListOfUnpairedVehiclesWithReply:]
-[VGVirtualGarageService virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:]
-[VGVirtualGarageService virtualGarageDidUpdate:]
-[VGVirtualGarageService virtualGarage:didUpdateUnpairedVehicles:]
connection
T@"NSXPCConnection",&,N,V_connection
activeVehicleIdentifier
T@"NSString",C,V_activeVehicleIdentifier
invalid VirtualGarageConfig_ requested identifier %u
%{public}s forbids: %{public}s. %{public}s
Failed to load powerByConnector dictionary from MapsSyncVehicle: %@.
Failed to parse a powerByConnector dictionary from MapsSyncVehicle: %@.
Failed to load vehicleStateStorage from MapsSyncVehicle: %@.
Tried to update a vehicle %@, with an incompatible state: id: %@, origin: %@
Tried to pair a vehicle: (%@) to iapID: %@, bluetoothID: %@, but it was already paired.
Pairing vehicle to iapIdentifier: %@, bluetoothIdentifier: %@
Querried a vehicle for battery state that is not an EV. Vehicle: %@
Vehicle does not have a displayable battery percentage, fallback to `batteryPercentageBasedOfCapacity`.
Vehicle provided invalid battery state: %@
Loaded device id of invalid class: <%p:%@>
_updateGarageWithState: tried to update garage with a nil vehicle. No action for the DataCoordinator.
strongDelegate went away in %s line %d
_updateGarageWithVehicle: No action to update the garage with.
_updateGarageWithVehicle: Updating a vehicle in VG :%@.
_updateGarageWithVehicle: Updated vehicle is also the selected one.
_updateGarageWithVehicle: Selecting a vehicle in garage based on update call from accessory.
_updateGarageWithVehicle: didn't find an unpaired vehicle to update in _unpairedVehicles array: %@, vehicle: %@
_updateGarageWithVehicle: Replacing an upaired vehicle with an updated one. existing vehicle: %@, updated vehicle: %@
_updateGarageWithVehicle: Tried to add unpaired vehicle, but it already exists in the array: %@, vehicle: %@
_updateGarageWithVehicle: Found a new vehicle. Saving vehicle in dataCoordinator until it's onboarded through UI. Vehicle: :%@.
Will update SoC using %@ for vehicle: %@.
Couldn't update SoC for vehicle: %@, because there was no source.
strongSelf went away in %s line %d
strongSelf2 went away in %s line %d
Failed to get vehicleState for vehicle: %@. error: %@
Received vehicleState and will update vehicle. Source: %@ state: %@.
vehicleStateProvider: %@ does not conform to VGVehicleStateProviding
finishOnboardingVehicle: will update and remove vehicle: %@ from unpairedVehicles.
_removeUnpairedVehicle: Tried to remove unpaired vehicle: %@, but _unpairedVehicles don't contain that vehicle. %@
_removeUnpairedVehicle: removed vehicle: %@ from unpairedVehicles.
shouldUnpairVehicle: This flow is not supported on this platform.
_saveOnboardingInfoForVehicle: Onboarding is not supported on this platform.
unpairVehicle: Tried to unpair a vehicle without siriIdentifier/pairedAppIdentifier -> ignoring the call.
unpairVehicle: Tried to unpair a vehicle %@, but _applications didn't contain the vehicle's paired app (%@). Not adding it back to unpaired vehicles.
unpairVehicle: will reload all vehicles for app: %@
Refresh timer ticked, pulling SoC for vehicles: %@
Invalidating refresh timer.
Starting refresh timer with interval: %ld
Requesting list of vehicles for %@
ListCars
Error Listing Cars from Intents: %@
Didn't receive any vehicles from %@, bailing.
Received Vehicles from %@: %@
Couldn't modify charge stream for vehicle, because VoltronStreamUpdatesDuringNav is false.
Couldn't modify charge stream for vehicle: %@. Underlying app was not found.
Will start charge stream for vehicle: %@.
Will stop charge stream for vehicle: %@.
SoC Streaming couldn't find vehicle for state: %@ in observed vehicles: %@
SoC Streaming will update vehicle: %@ with state: %@
accessoryUpdatedWithVehicle: disconnected from iAP2 vehicle. Will remove it from unpaired if possible
accessoryUpdatedWithVehicle: accessory connected to a vehicle that is not in VG and is not an EV. Will remove any unpaired vehicles if necessary.
accessoryUpdatedWithVehicle: accessory connected to a vehicle that is not in VG and is not an EV. Will also deselect the currently selected vehicle.
accessoryUpdatedWithVehicle: received an update from a disambiguated non-EV. Automatic selection is disabled -> Ignoring the update.
accessoryUpdatedWithVehicle: received an update from a disambiguated non-EV. Will select it in the garage
accessoryUpdatedWithVehicle: iAP2 onboarding is disabled. The dataCoordinator won't save the iAP2 vehicle.
accessoryUpdatedWithVehicle: accessory did update vehicle. Will update garage and select the vehicle
Will remove an existing unpaired iap2 vehicle: %@
Haven't found any iAP2 unpaired vehicles upon disconnecting from iAP2.
OEMAppsUpdated, reseting unpairedVehicles, updating apps from %@ to %@.
Started pulling all vehicles for apps: %@.
PullAllVehicles
Finished pulling all vehicles for apps: %@.
Tried to get SoC for vehicle, that is not saved in the garage.
getLatestStateOfVehicle: called for a vehicle (%@) that doesn't have a stateProvider. Make sure that the paired app is installed, otherwise there might be an issue in the VG logic.
getLatestStateOfVehicle: using %@ to fetch SoC.
getLatestStateOfVehicle: Tried to fetch SoC for %@, but failed with error: %@.
getLatestStateOfVehicle: Fetched latest vehicle state: %@
Color does not have 4 components
Color is not in RGB colorspace
init: created new VGExternalAccessory: %p, connected EAAccessory: %@.
dealloc: deallocating accessory: %p
_accessoryDidConnect: received an unsupported accessory: %p, %@
_accessoryDidConnect: new accessory: %p, %@
_accessoryDidUpdateVehicle: accessory: %p, did update vehicle with vehicleInfo: %@
_accessoryDidUpdate: accessory %p does not support CarPlay
_accessoryDidUpdate: accessory %p supports CarPlay, will load initial state and update from userInfo
_accessoryDidDisconnect: accessory %p
_strongDelegate went away in %s line %d
_loadInitialAccessoryState: loading initial accessory state for accessory: %p
_updateFromVehicleInfo: tried to update from a nil vehicleInfo.
_updateFromVehicleInfo: received userInfo of an accessory that we don't track.
_updateFromVehicleInfo: did update accessoryState: %@ from vehicleInfo: %@
updated _currentVehicle: %@
Either accessory is not connected or we don't have any _currentVehicleState yet.
SoC requested for %@ but the currently connected vehicle is %@
Tried to get a string version of a multiple option bitmask: %lu. This is not supported.
Failed to load origin from protoOrigin: %@
Failed to load a single connector type from protoConnectorType: %@
Failed to persist origin from vgOrigin: %@
Failed to persist a single connector type from vgConnectorType: %@
Creating new virtualGarage: %p with persister: %p
Failed to load virtual garage with error: %@
LoadVehicles
Garage did finish loading initial vehicles.
Deallocating virtualGarage: %p with persister: %p
Didn't find vehicle with identifier: %@ in vehicles: %@.
addVehicle: tried to add a vehicle that is already in the garage.
Added vehicle: %@, vehicles.count: %lu
Default selecting new vehicle: %@
removeVehicle: tried to remove a vehicle that is not in the garage.
Removed vehicle: %@, vehicles.count: %lu
selectVehicle: tried to select a vehicle that is not in the garage.
Selected vehicle: %@
Tried to use a method (%s) that requires a dataCoordinator.
virtualGarageOnboardVehicle tried to onboard vehicle %@, but didn't find exactly one match, unpairedVehicles: %@
Onboarding vehicle: %@ in virtual garage.
Unpairing vehicle: %@
Garage will not start continuous updates, because there is no selected vehicle
Garage will start continuous updates for vehicle: %@
Garage will end continuous updates.
EV Routing not enabled. Will strip EV vehicles from VG.
There are no queued completion handlers, nothing to do.
Will execute %lu queued completionHandlers with garage: %@.
Finished executing %lu queued completionHandlers
Will check for vehicles (%lu) that no longer have their paired apps.
The OEM app on the primary device was uninstalled. Will remove vehicle: %@
Tried to update local vehicles with nil vehicles.
Force updating local vehicles: %@, with following vehicles: %@
Forced vehicle update removed the selected vehicle. Will deselect
GeoConfig_VoltronUseMapsSyncLiveUpdates is not set, we're ignoring live updates.
garagePersister: %@ wants to update vehicles with vehicles: %@
DataCoordinator wants to save vehicle: %@
DataCoordinator wants to select vehicle: %@
DataCoordinator updated installed apps. Will try to remove vehicles that have no OEM app.
Garage hasn't finished loading vehicles from persistor. Once finished, reply block will be executed
GetVehicleState
data is nil. Error parsing manifest resource: %@
Error parsing manifest resource. error: %@
Unexpected class type
No whitelisted apps. Returning.
Encountered a bundle that is malformed: %@
Error parsing manifest resource. Not having any whitelisted apps is a grave error.
Won't create an LSAppRecord for bundleId: %@ as we already have this app saved.
Failed making LSApplicationRecord for '%@': %@. App is not installed
Whitelisted application '%@' doesn't support our required intents: %@
Added application: %@
Removed application: %@
FindOEMApplications
Whitelisted formula IDs do not contain the formula in the Consumption Arguments. Current formula: %@, Allowed formula IDs: %@
Failed to get an updateDate from components: %@
Assuming vehicle state response: %{private}@ was created now
Listing cars received a non-Success response code: %ld
Failed to extract power for connector type: %lu, from car array: %@.
Constructed powerByConnector dictionary: %@
Application %@ is not enabled returning no results
Returning because of a connection error: %@
strongSelf3 went away in %s line %d
Returning because of an underlying error in the connection: %@
Application %@ is not enabled returning existing SoC
error in handleIntentWithCompletionHandler: %@
Unsupported response code: %@
Received a vehicle state: %@ that doesn't apply to the provided vehicle: %@
getStateOfChargeForVehicle fetched %@
Started a new Intent %@ with %@
%@ starting updates
Connection error while receiving updates: %@
%@ stopping updates
strongChargeStreamingDelegate went away in %s line %d
%@ received INGetCarPowerLevelStatusResponse live update: %@
Received stream callback when disabled
Unexpected streaming response class. Received an %@ instance
chargeStreamingDelegate does not implement required method vehicleStateUpdated:
Unsupported response code: %ld
Formula from the response is invalid
Response failed to deserialize to a valid VGVehicleState %@
Creating connection for OEMApp: (%@), with timeout %.2f
Connection for OEMApp: (%@), timed out with error: %@
Tried to serialize nil arguments.
Failed to serialize VGVehicleArguments into a string. arguments: %@, error: %@
Serializing arguments as: %@
Started listening for connections: %@
Stopped virtualGarageServer
VGServer: GEOConfigs changed. VirtualGarageIsEnabled: %@
Unauthorized access to VG XPC service from connection: %@
Service connection interrupted
Service connection invalidated
strongConnection went away in %s line %d
%s %@, %@
%s %@ %@
Tried to openForClient:, but virtual garage isn't enabled
Tried to open connection twice for client: %@.
Will openForClient: %@
Will closeForClient: %@
Tried to closeForClient: (%@) that wasn't in _clients and VG was enabled. Check if the feature flag changed during run time. If it hasn't, there is probably in issue in your open/close logic.
VGVirtualGarageService opening connection
Server connection interrupted
Server connection invalidated
VGVirtualGarageService closing connection
Adding observer: %@
Removing observer: %@
VirtualGarage isn't enabled, service isn't able to call to server.
%s %@
virtualGarageSetAssumesFullCharge: is only supported on macOS
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
VGVehicleDeduper
VGExtras
VGVehicle
NSCopying
NSSecureCoding
NSCoding
VGVehicleStateStorage
VGVehicleStateProviding
NSObject
VGDataCoordinator
VGOEMApplicationFinderUpdates
VGExternalAccessoryUpdating
VGOEMAppSOCStreaming
VGExternalAccessoryState
VGExternalAccessory
VGVehicleState
VGVirtualGarage
VGDataCoordinatorDelegate
VGVirtualGaragePersistingDelegate
GEOConfigChangeListenerDelegate
VGVirtualGarageActions
VGOEMApplicationFinder
LSApplicationWorkspaceObserverProtocol
VGOEMApplicationFinding
VGOEMApplication
INIntentResponseObserver
VGExternalAccessoryAdapter
VGVirtualGarageObserver
VGVirtualGarageServer
NSXPCListenerDelegate
VGVirtualGarageDelegate
VGVirtualGarageService
_vehicleMatchingVehicle:inArray:
_vehicleByUpdatingWithVehicle:
indexOfObjectPassingTest:
objectAtIndex:
actionForAddingNewVehicle:withExistingGarageVehicles:andUnpairedVehicles:
sharedServer
startWithPersister:
stop
compare:
isLessThanMeasurement:
isGreaterThanMeasurement:
unit
measurementByConvertingToUnit:
doubleValue
numberWithDouble:
isEqualToMeasurement:
isGreaterThanOrEqualToMeasurement:
isLessThanOrEqualToMeasurement:
iapIdentifier
isEqualToString:
siriIntentsIdentifier
init
UUID
UUIDString
date
copy
vehicleIdentifier
dateOfVehicleIngestion
lastStateUpdateDate
displayName
year
stringValue
manufacturer
model
colorHex
licensePlate
lprVehicleType
lprPowerType
headUnitMacAddress
headUnitBluetoothIdentifier
supportedConnectors
unsignedIntegerValue
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
watts
initWithDoubleValue:unit:
setObject:forKeyedSubscript:
powerByConnector
currentVehicleState
initWithData:
_vehicleStateFromStorage:
pairedAppIdentifier
pairedAppInstallDeviceIdentifier
pairedAppInstallSessionIdentifier
decodeObjectOfClass:forKey:
initWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
numberWithUnsignedInteger:
consumptionArguments
length
chargingArguments
_canBeUpdatedFromState:
identifier
origin
_updateWithVehicleState:
headUnitIdentifier
_identifierForVehicleStateOrigin:
isPureElectricVehicle
batteryPercentage
batteryPercentageBasedOfCapacity
minBatteryCapacity
maxBatteryCapacity
currentBatteryCapacity
allocWithZone:
initWithIdentifier:displayName:year:manufacturer:model:colorHex:licensePlate:lprVehicleType:lprPowerType:
stringWithFormat:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
initWithDisplayName:year:manufacturer:model:colorHex:headUnitIdentifier:headUnitBluetoothIdentifier:supportedConnectors:powerByConnector:
initWithLicensePlate:lprVehicleType:lprPowerType:
initWithMapsSyncVehicle:
pairToIapIdentifier:bluetoothIdentifier:
combinedDisplayName
displayedBatteryPercentage
description
isEqual:
creationDate
setDisplayName:
setColorHex:
setLicensePlate:
setLprVehicleType:
setLprPowerType:
setSupportedConnectors:
setPairedAppIdentifier:
setIapIdentifier:
setSiriIntentsIdentifier:
setPairedAppInstallDeviceIdentifier:
setPairedAppInstallSessionIdentifier:
.cxx_destruct
_identifier
_creationDate
_lastStateUpdateDate
_displayName
_year
_manufacturer
_model
_colorHex
_headUnitBluetoothIdentifier
_headUnitIdentifier
_licensePlate
_lprVehicleType
_lprPowerType
_supportedConnectors
_powerByConnector
_currentVehicleState
_pairedAppIdentifier
_iapIdentifier
_siriIntentsIdentifier
_pairedAppInstallDeviceIdentifier
_pairedAppInstallSessionIdentifier
dictionaryRepresentation
dictionary
setObject:forKey:
numberWithBool:
setIdentifier:
setConsumptionArguments:
setChargingArguments:
isMemberOfClass:
hash
setDateOfUpdate:
setHasDateOfUpdate:
hasDateOfUpdate
setOrigin:
setHasOrigin:
hasOrigin
originAsString:
StringAsOrigin:
setBatteryPercentage:
setHasBatteryPercentage:
hasBatteryPercentage
setCurrentEVRange:
setHasCurrentEVRange:
hasCurrentEVRange
setMaxEVRange:
setHasMaxEVRange:
hasMaxEVRange
setMinBatteryCapacity:
setHasMinBatteryCapacity:
hasMinBatteryCapacity
setCurrentBatteryCapacity:
setHasCurrentBatteryCapacity:
hasCurrentBatteryCapacity
setMaxBatteryCapacity:
setHasMaxBatteryCapacity:
hasMaxBatteryCapacity
hasConsumptionArguments
hasChargingArguments
setIsCharging:
setHasIsCharging:
hasIsCharging
activeConnector
setActiveConnector:
setHasActiveConnector:
hasActiveConnector
activeConnectorAsString:
StringAsActiveConnector:
hasPairedAppInstallSessionIdentifier
hasPairedAppInstallDeviceIdentifier
readFrom:
writeTo:
copyTo:
mergeFrom:
dateOfUpdate
currentEVRange
maxEVRange
isCharging
_batteryPercentage
_currentBatteryCapacity
_currentEVRange
_dateOfUpdate
_maxBatteryCapacity
_maxEVRange
_minBatteryCapacity
_activeConnector
_chargingArguments
_consumptionArguments
_origin
_isCharging
_has
array
setDelegate:
findOEMApplications
setAccessoryUpdateDelegate:
firstObject
accessoryUpdatedWithVehicle:
listCarsWithCompletion:
_invalidateRefreshTimer
dealloc
standardUserDefaults
objectForKey:
vehicles
dataCoordinator:wantsToUpdateVehicle:syncAcrossDevices:
selectedVehicle
dataCoordinator:wantsToSelectVehicle:
_indexOfVehicleInUnpairedVehicles:
objectAtIndexedSubscript:
replaceObjectAtIndex:withObject:
dataCoordinator:didUpdateUnpairedVehicles:
addObject:
_vehicleStateProviderForVehicle:
_updateGarageWithVehicle:selectVehicle:syncAcrossDevices:
getStateOfChargeForVehicle:completion:
isConnectedToElectricVehicle
_applicationForVehicle:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
_saveOnboardingInfoForVehicle:
removeObjectAtIndex:
isEnabled
arrayWithObjects:count:
_loadAllOEMVehiclesForApps:completion:
_startChargeStreamForVehicle:
_refreshStateForTrackedVehicles
_setupTimerIfNeeded
_stopChargeStreamForVehicle:
removeAllObjects
allObjects
_updateStateOfChargeForVehicle:syncAcrossDevices:completion:
invalidate
_vehicleStateRefreshInterval
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
count
_oemAppForChargeStreamForVehicle:
setChargeStreamingDelegate:
startSendingChargeUpdatesForVehicle:
stopSendingChargeUpdatesForVehicle:
_removeUnpairedIapVehicleIfNeeded
enumerateObjectsUsingBlock:
removeObject:
dataCoordinatorDidUpdateInstalledApps:
containsObject:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
OEMAppsUpdated:
vehicleStateUpdated:
initWithApplicationFinder:externalAccessory:delegate:
unpairedVehicles
deviceIdentifier
finishOnboardingVehicle:
shouldUnpairVehicle:
unpairVehicle:
startContinuousUpdatesForVehicle:
endAllContinuousUpdates
getLatestStateOfVehicle:withReply:
_delegate
_workQueue
_delegateQueue
_applicationFinder
_applications
_accessory
_unpairedVehicles
_vehicleStateRefreshTimer
_observedVehicles
arrayWithCapacity:
componentsJoinedByString:
longLongValue
kilometers
kilowattHours
boolValue
dictionaryWithCapacity:
_updateWithVehicleInfo:
name
batteryCharge
_mapsDisplayName
_engineType
_rangesByEngineType
_batteryCharge
defaultCenter
_accessoryDidConnect:
addObserver:selector:name:object:
_accessoryDidUpdateVehicle:
_accessoryDidUpdate:
_accessoryDidDisconnect:
sharedAccessoryManager
registerForLocalNotifications
connectedAccessories
supportsCarPlay
_loadInitialAccessoryState
unregisterForLocalNotifications
removeObserver:
userInfo
_updateFromVehicleInfo:
accessoryUpdateDelegate
getVehicleInfoData
vehicleInfoInitialData
connectionID
vehicleStateFromExternalAccessory:
vehicleFromExternalAccessory:
isConnected
serialNumber
macAddress
bluetoothIdentifier
currentState
_accessoryState
_currentVehicle
_accessoryUpdateDelegate
timeIntervalSinceDate:
dateWithTimeIntervalSinceReferenceDate:
initWithIdentifier:dateOfUpdate:origin:batteryPercentage:currentEVRange:maxEVRange:minBatteryCapacity:currentBatteryCapacity:maxBatteryCapacity:consumptionArguments:chargingArguments:isCharging:activeConnector:
timeIntervalSinceReferenceDate
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
isSignificantlyDifferentFromVehicleState:
_storage
_executeQueuedCompletionHandlersIfNeeded
_forceUpdateWithVehicles:
loadVehiclesWithCompletion:
selectedVehicleIdentifier
_vehicleWithIdentifier:
_notifyObserversGarageDidUpdateVehicles
addVehicle:
_selectVehicleWithIdentifier:
indexOfObject:
saveVehicle:syncAcrossDevices:
_addVehicle:
_endContinuousUpdates
removeVehicle:
_unpairVehicle:
setSelectedVehicleIdentifier:
predicateWithBlock:
filteredArrayUsingPredicate:
mutableCopy
_garageCopy
_removeVehicleWithIdentifier:
delegate
virtualGarageDidUpdate:
mutableCopyWithZone:
_saveVehicle:syncAcrossDevices:
virtualGarage:didUpdateUnpairedVehicles:
_removeVehiclesWithUninstalledAppsIfNeeded
_onboardVehicle:
_startContinuousUpdatesIfNeeded
setShouldAssumeFullCharge:
garagePersister:wantsToUpdateVehicles:
valueChangedForGEOConfigKey:
virtualGarageAddVehicle:
virtualGarageRemoveVehicle:
virtualGarageSaveVehicle:
virtualGarageSelectVehicle:
virtualGarageOnboardVehicle:
virtualGarageStartContinuousUpdatesIfNeeded
virtualGarageEndContinuousUpdates
virtualGarageSetAssumesFullCharge:
virtualGarageGetGarageWithReply:
virtualGarageGetListOfUnpairedVehiclesWithReply:
virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:
initWithGaragePersister:
shouldAssumeFullCharge
_vehicles
_selectedVehicleIdentifier
_isDataCoordinatorRunning
_dataCoordinator
_persister
_finishedLoadingVehicles
_queuedGetGarageCompletionHandlers
_shouldAssumeFullCharge
defaultWorkspace
addObserver:
sharedManager
dataForResourceWithName:fallbackBundle:
JSONObjectWithData:options:error:
_whitelistPayload
initWithCapacity:
componentsSeparatedByString:
setWithArray:
setDisabledAppIdentifiers:
applications
disabledAppIdentifiers
setEnabled:
allValues
whitelist
initWithBundleIdentifier:allowPlaceholder:error:
bundleIdentifier
appInfoWithApplicationRecord:
supportedIntents
isSubsetOfSet:
initWithIdentifier:applicationRecord:
setAllowedFormulaIDs:
_applicationRecordForBundleIdentifier:
_addOEMApplicationForApplicationRecordIfNeeded:
enumeratorWithOptions:
nextObject
_removeOEMApplicationForBundleIdentifier:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
setWhitelist:
setApplications:
_requiredIntents
_queue
_disabledAppIdentifiers
_whitelist
consumptionFormulaArguments
allowedFormulaIDs
carIdentifier
dateOfLastStateUpdate
currentCalendar
dateFromComponents:
chargePercentRemaining
distanceRemainingElectric
maximumDistanceElectric
minimumBatteryCapacity
maximumBatteryCapacity
chargingFormulaArguments
charging
_VGChargingConnectorTypeOptionFromINCarChargingConnectorType:
code
cars
make
color
headUnit
iAP2Identifier
supportedChargingConnectors
_VGChargingConnectorTypeOptionsFromINCarChargingConnectorTypes:
_powerByConnectorDictionaryFromCar:
allKeys
maximumPowerForChargingConnectorType:
powerPerConnectors
_connectionWithIntent:
underlyingError
_vehiclesFromListCarsIntentResponse:
reset
handleIntentWithCompletionHandler:
resumeWithCompletionHandler:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
initWithCarName:
errorCode
_isValidConsumptionModelForResponse:
_vehicleStateFromResponse:error:
initWithIntent:
setRequiresTCC:
intent
_setLaunchId:
_createChargeStreamingConnectionIfNeededForVehicle:
localizedDescription
startSendingUpdatesToObserver:
stopSendingUpdates
setRequestTimeoutInterval:
setTimeoutHandler:
intentResponseDidUpdate:withSerializedCacheItems:
intentResponseDidUpdate:
applicationRecord
chargeStreamingDelegate
_chargeStreamingConnection
_enabled
_applicationRecord
_chargeStreamingDelegate
_allowedFormulaIDs
dataWithJSONObject:options:error:
initWithData:encoding:
UTF8String
_setupVirtualGarageHostingIfNeeded
initWithMachServiceName:
canUseVirtualGarageXPCService
listener
resume
_cleanUp
setListener:
setHostsVirtualGarage:
valueForEntitlement:
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedInterface:
garage
setExportedObject:
setInterruptionHandler:
activeConnections
setInvalidationHandler:
observer
observerQueue
remoteObjectProxyWithErrorHandler:
listener:shouldAcceptNewConnection:
setObserver:
setObserverQueue:
hostsVirtualGarage
setGarage:
setActiveConnections:
_isolationQueue
_hostsVirtualGarage
_observer
_observerQueue
_garage
_listener
_activeConnections
initWithFormat:
initWithOptions:capacity:
initWithProtocol:queue:
_openConnection
_closeConnection
initWithMachServiceName:options:
setClasses:forSelector:argumentIndex:ofReply:
_setQueue:
activeVehicleIdentifier
setActiveVehicleIdentifier:
connection
messageTargetWithErrorReply:
_clearActiveVehicleIdentifierIfNeeded:
sharedService
openForClient:
closeForClient:
setConnection:
_clients
_clientsIsolater
_observers
_callbackQueue
_connectionQueue
_activeVehicleIdentifier
_connection
q40@0:8^@16@24@32
@32@0:8@16@24
B24@0:8@16
q24@0:8@16
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@88@0:8@16@24@32@40@48@56@64Q72@80
@40@0:8@16@24@32
@88@0:8@16@24@32@40@48@56@64@72@80
v32@0:8@16@24
@24@0:8q16
@16@0:8
d16@0:8
Q16@0:8
v24@0:8Q16
v16@0:8
@"NSString"
@"NSDate"
@"NSDictionary"
@"VGVehicleState"
@"NSData"
v24@0:8d16
v20@0:8B16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="batteryPercentage"b1"currentBatteryCapacity"b1"currentEVRange"b1"dateOfUpdate"b1"maxBatteryCapacity"b1"maxEVRange"b1"minBatteryCapacity"b1"activeConnector"b1"origin"b1"isCharging"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"VGVehicle"16@?<v@?@"VGVehicleState"@"NSError">24
v24@0:8@"NSArray"16
v24@0:8@"VGVehicle"16
v24@0:8@"VGVehicleState"16
v32@0:8@16B24B28
v36@0:8@16B24@?28
Q24@0:8@16
@"<VGDataCoordinatorDelegate>"
@"NSObject<OS_dispatch_queue>"
@"<VGOEMApplicationFinding>"
@"NSArray"
@"VGExternalAccessory"
@"NSMutableArray"
@"NSTimer"
@"NSMutableSet"
@"NSMeasurement"
@"NSNumber"
@"VGExternalAccessoryState"16@0:8
@"EAAccessory"
@"VGExternalAccessoryState"
@"VGVehicle"
@"<VGExternalAccessoryUpdating>"
@116@0:8@16@24q32@40@48@56@64@72@80@88@96B104Q108
q16@0:8
v36@0:8@16@24B32
v36@0:8@"VGDataCoordinator"16@"VGVehicle"24B32
v32@0:8@"VGDataCoordinator"16@"VGVehicle"24
v32@0:8@"VGDataCoordinator"16@"NSArray"24
v24@0:8@"VGDataCoordinator"16
@"VGVehicle"16@0:8
@"NSArray"16@0:8
v32@0:8@"<VGVirtualGaragePersisting>"16@"NSArray"24
v32@0:8{?=I^v}16
v24@0:8@?<v@?@"VGVirtualGarage"@"NSError">16
v36@0:8@"NSString"16B24@?<v@?@"VGVehicle"@"NSError">28
v28@0:8@16B24
@"VGDataCoordinator"
@"<VGVirtualGaragePersisting>"
@"<VGVirtualGarageDelegate>"
v32@0:8@"NSArray"16@"NSArray"24
@"<VGOEMApplicationFinderUpdates>"16@0:8
v24@0:8@"<VGOEMApplicationFinderUpdates>"16
@"NSSet"
@"<VGOEMApplicationFinderUpdates>"
@"NSMutableDictionary"
v32@0:8@"INIntentResponse"16@"NSSet"24
v24@0:8@"INIntentResponse"16
@32@0:8@"NSString"16@"LSApplicationRecord"24
@"LSApplicationRecord"16@0:8
@"<VGOEMAppSOCStreaming>"16@0:8
v24@0:8@"<VGOEMAppSOCStreaming>"16
@32@0:8@16^@24
@"INCExtensionConnection"
@"LSApplicationRecord"
@"<VGOEMAppSOCStreaming>"
v24@0:8@"VGVirtualGarage"16
v32@0:8@"VGVirtualGarage"16@"NSArray"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<VGVirtualGarageObserver>"
@"VGVirtualGarage"
@"NSXPCListener"
@24@0:8@?16
@"NSHashTable"
@"geo_isolater"
@"GEOObserverHashTable"
@"NSXPCConnection"
