iconservicesagent launched.
com.apple.iconservices
v8@?0
default
/System/Library/CoreServices/SystemVersion.plist
ProductBuildVersion
IconCacheSaltKey
BuildVersion
UniqueDeviceID
04:53:45
%s%@%@
com.apple.iconservice.iconsqueue
_iconservices
apple-internal-install
CFBundlePrimaryIcon
CFBundleIconName
B16@?0^@8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
serviceName
T@"NSString",R,C,V_serviceName
com.apple.private.coreservices.canmaplsdatabase
lsd connection queue
Stating IconServices agent service with name: %s
Removing cache at URL: %@
Could not write __system_version_info__ to %@ error domain: %@ code %ld
Could not serialize __system_version_info__ file error  domain: %@ code %ld
Could not configure cache folder directory
InterruptionHandler called
InvalidationHandler called
Caught exception %@
Looking up resourceURL for app %@
Checking if SystemPlaceholder exists for %@, no other icon resources found
Falling back to using %@ and %@
clearCachedItemsForBundeID: %@
Clearing icons for bundle %@ (%@)
Clearing icon cache.
Writing icon bitmap %@ to cache %@
Failed to set the permissions for %@: %i (%s)
Failed to write icon bitmap %@ to cache %@: error domain: %@ code: %ld
Failed to map icon bitmap %@ from cache %@: error domain: %@ code: %ld
Cache directory is missing at URL: %@
Generating icon data for %@ <%d> %@
Calling MI to get primary icon from .car resource dir URL: %@  icon name: %@
Calling MI to get primary icon from png resources from dir URL: %@  icon name: %@
Failed to get resource for name %@ from dir URL: %@ trying again with NULL icon name.
Writeing cache entry named: %@
Failed to get requested resource value with error: `%@`
Evicting cache image with URL: %@
Failed to remove cache file %@ error: %@
Failed to set ACL
Failed to set requested resource value with error: `%@`
Client connection %@ is not allowed to lookup app data for icon generation
stringWithUTF8String:
initWithServiceName:
start
stringWithFormat:
UUIDStringForString:
copy
cacheFolderURL
cacheSalt
initWithCacheURL:salt:
dictionaryWithContentsOfFile:
iconCacheSystemVersionFileURL
dictionaryWithContentsOfURL:
objectForKey:
defaultManager
cacheURL
path
attributesOfItemAtPath:error:
fileOwnerAccountName
isEqualToString:
URLByDeletingLastPathComponent
fileSystemRepresentation
dictionaryWithDictionary:
setObject:forKey:
dataWithPropertyList:format:options:error:
writeToURL:options:error:
domain
code
serviceName
initWithMachServiceName:
anonymousListener
setDelegate:
resume
xpcInterface
setExportedInterface:
setExportedObject:
_setQueue:
setInterruptionHandler:
setInvalidationHandler:
resourceDirectoryURL
currentConnection
bundleIdentifier
applicationProxyForIdentifier:
appState
isValid
applicationProxyForSystemPlaceholder:
__IS_iconResourceLocator
resourceLocatorWithLSIconResourceLocator:
supportsAlternateIconNames
alternateIconName
primaryIconName
setPreferedResourceName:
generateIconBitmapDataWithResourceLocator:variant:options:withReply:
bundleCacheKeyPrefixForBundleIdentifier:
stringByAppendingString:
cacheKeySalt
fileExistsAtPath:
URLByAppendingPathComponent:isDirectory:
initWithContentsOfURL:options:error:
generateBitmapDataWithTypeResourceLocator:variant:options:
iconsDictionary
preferedResourceName
cacheKeyFromResourceURL:bundleIdentifier:iconDictionary:preferedIconName:
bundleCacheKeyForBundleIdentifier:cacheKey:variant:options:
currentDisplayGamut
addIconData:toCacheWithKey:
iconDataForKey:ignoreCache:generatorBlock:
_IS_assetCatalogURLWithBundleURL:
assetCatalogResourceWithURL:imageName:error:
dictionaryWithObjects:forKeys:count:
addElementWithRecipe:resources:
imageForSize:scale:
CGImage
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
getIconBitmapDataWithResourceLocator:variant:options:reply:
clearCachedItemsForBundeID:olderThanDate:reply:
copyIconBitmapCacheConfigurationWithReply:
listener:shouldAcceptNewConnection:
.cxx_destruct
_serialQueue
_serviceName
getResourceValue:forKey:error:
arrayWithObjects:count:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
countByEnumeratingWithState:objects:count:
__is__modDate
compare:
removeItemAtURL:error:
setResourceValue:forKey:error:
auditToken
lastPathComponent
hasPrefix:
pidFromAuditToken:
ISIconCacheService
ISIconCacheServiceProtocol
NSObject
NSXPCListenerDelegate
Util
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16i24i28@?32
v40@0:8@16@24@?32
v24@0:8@?16
v40@0:8@"ISIconResourceLocator"16i24i28@?<v@?B@"NSData">32
v40@0:8@"NSString"16@"NSDate"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSURL"@"NSString"@"NSString">16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v16@0:8
@32@0:8@16@24
@32@0:8@16i24i28
@"NSObject<OS_dispatch_queue>"
@"NSString"
i24@0:8r^{?=[8I]}16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/containers/Bundle/Application/</string>
<string>/Applications/</string>
<string>/AppleInternal/Applications/</string>
<string>/Developer/Applications/</string>
<string>/private/var/personalized_factory/</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache/</string>
<string>/private/var/tmp/</string>
<string>/private/var/mobile/Library/Caches/com.apple.iconservicesagent/</string>
<string>/private/var/mobile/Library/Caches/com.apple.metal/</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.lsd.iconscache</string>
</array>
<key>com.apple.security.ts.opengl-or-metal</key>
<true/>
<key>com.apple.security.ts.render-images</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
zPLR
