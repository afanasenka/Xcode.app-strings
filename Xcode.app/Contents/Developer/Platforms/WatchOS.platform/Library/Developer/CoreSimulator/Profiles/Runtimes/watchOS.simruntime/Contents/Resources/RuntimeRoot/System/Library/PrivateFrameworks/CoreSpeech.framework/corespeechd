%s Not supported in this platform
%s Cannot handle unexpected message type : %lld
%s CSFallbackAudioSessionReleaseProvider is nil from CSSpeechManager
%s Start Recording Host Time = %{public}llu
%s disconnect activationXPCClient
%s cannot handle event : event = %{public}p
%s ignore unknown types of message 
%s cannot handle error : error = %{public}p
%s Listener connection disconnected
%s connection error: %{public}s
%s Cannot create SampleRateConverter using AudioConverterNew : %{public}d
%s Cannot set Quality property to audioConverter
%s Cannot set Complexity property to audioConverter
%s Audio resampling done : %lu
%s AudioConverter is sad: 0x%{public}xd
%s Start monitoring : SpeakerRecognition Asset meta update
%s Stop monitoring : SpeakerRecognition Asset meta update
%s New Speaker Recognition asset metadata is available
%s Celestial is not available on this platform.
%s notification = %{public}@
%s Cannot deactivateAudioSession since audio recorder doesn't exist
%s Cannot deactivateAudioSession with %{public}@
%s channelId %d out of bound %d
%s Cannot generate subChunk since channel(%{public}tu) is larger than number of channels(%{public}tu)
%s Cannot generate subChunk if it reuqest more than it has : %{public}tu %{public}tu %{public}tu
%s SpkrId:: Processing ended at: numSamplesProcessed=%lu, totalSampleCountToReach=%lu
%s Start monitoring : SpeakerRecognition Asset Download
%s Stop monitoring : SpeakerRecognition Assets Download
%s New SpeakerRecognition Assets is now installed
%s ERR: Delegate received for invalid Trial assetType:%lu
%s ::: %{public}s enable: %{public}d reason: %{public}@ timestamp : %{public}lf
%s Ignoring request to enable/disable voice trigger with nil reason.
%s ::: Asserting that VoiceTrigger should be %{public}@ with reason: %{public}@. Existing assertions (%{public}lu): %{public}@; times: %{public}@ vs %{public}f
%s Ignoring request to enable/disable voice trigger - time order violation.
%s ::: Ignore request as phraseSpotter already %{public}@
%s ::: Asserting that PhraseSpotter should be %{public}@, timeout: %{public}f
%s ::: Timeout!! PhraseSpotter should be NOT bypassed
%s ::: Ignore request as raiseToSpeak already %{public}@
%s ::: Asserting that raiseToSpeak should be %{public}@, timeout: %{public}f
%s ::: Timeout!! raiseToSpeak should be NOT bypassed
%s HandleDisconnect
%s Audio steam %{public}@ is still streaming when we get new streamProvider
%s CSAudioStreamProvidingProxy has received xpc disconnection
%s Trying to stop audio stream on CSAudioStreamProvidingProxy
%s Unknown body type : %{public}lld
%s Cannot handle setCurrentContext throught XPC : audioStreamProviding is nil
%s Cannot handle setCurrentContext throught XPC : given context is nil
%s Cannot handle AudioStreamRequest throught XPC : given audioStreamRequest is nil
%s Cannot handle AudioStreamRequest throught XPC : audioStreamProviding is nil
%s Getting audio stream has failed : %{public}@
%s Cannot handle PrepareRequest throught XPC : audioStreamProviding is nil
%s Given audioStreamRequest is nil, use default audioStreamRequest
%s Cannot handle startAudioStream : given audio stream option is nil
%s Cannot handle startAudioStream : audioStream is nil
%s Cannot handle startAudioStream : audioStreamProviding is nil
%s Cannot handle stopAudioStream : audioStreamProviding is nil
%s Cannot handle stopAudioStream : audioStream is nil
%s Fail to parse recordContext
%s Timed-out for fetching voiceTriggerInfo
%s TiggerInfoProviding is nil
%s Cannot handle IsRecording : audioStreamProviding is nil
%s Cannot handle RecordRoute : audioStreamProviding is nil
%s Cannot handle RecordDeviceInfo : audioStreamProviding is nil
%s Cannot handle RecordSettings : audioStreamProviding is nil
%s Cannot handle IsNarrowband : audioStreamProviding is nil
%s Cannot handle PlaybackRoute : audioStreamProviding is nil
%s CSAudioStreamProvidingProxy
%s setting allow mixable audio while recording to %{public}@
%s Failed to setAllowMixableAudioWhileRecording : %{public}@
%s Failure disposing audio file %{public}d
%s Audio file already configured, closing first
%s Creating audio file at URL %{public}@
%s Failed creating audio file at url %{public}@ %{public}d
%s Error setting input format %{public}d
%s No audio file to append data
%s Failed writing audio file %{public}d
%s Closing file at URL %{public}@, audio size: %{public}u
%s Mediaserverd/bridgeaudiod crashed
%s Mediaserverd/bridgeaudiod recovered from crash
%s Start monitoring : AudioSessionInterruption
%s Start monitoring : AudioSessionRouteChangeNotification
%s Stop monitoring AudioSession activities
%s Plan removing the temp file %{public}@
%s Failed to remove temp file %{public}@ reason: %{public}@
%s Start copying %{public}u bytes of data to crashreporter with wav file header offset %{public}llu
%s Failed to read data from %{public}@
%s Finished copying data to crashreporter.
%s Logging audio file into : %{public}@
%s ERR: reading contents of gradingDir: %{public}@ with error %{public}@
%s Deleting orphaned grading file %{public}@
%s ERR: Failed to delete %{public}@ with error %{public}@
%s Removing non-dir at AttentiveSiri AudioLog dir: %@
%s Error removing %@: err: %@
%s Failed to create AudioLogging directory for AttentiveSiri: %@
%s Created AudioLogging dir for AttentiveSiri at: %@
%s SmartSiriVolume cannot be resumed since Siri is speaking
%s Start monitoring : Setting preference change
%s Stop monitoring : Setting preference change
%s Siri restricted on lock screen : %{public}@
%s default to recordContext : %{public}@
%s Registering for post build install/first unlock activity - %s
%s Received event for XPC activity: %@ in state: %ld
%s XPC activity: %@ deferred: %@ firstUnlock: %@
%s Registered XPC activity got triggered...
%s VT is disabled, skipping post build activity !
%s Post build install/first unlock tasks got completed with error - %{public}@
%s Registered XPC activity complete. State: %@.
%s Cannot get a VoiceTrigger asset : %{public}@
%s CSVoiceTriggerAsset found: %{public}@
%s Asset Query failed : %{public}@
%s cached asset:%{public}@, new asset:%{public}@
%s New asset is same as cached asset, ignore notification
%s New asset is different from cached one. Updating cached asset
%s new VoiceTrigger asset downloaded
%s Language Code Changed : %{public}@
%s First unlock notification received : %{public}d
%s MpVT: supportedPhrasesInfo: %@
%s MpVT: ctcResults=%@
%s OldTrigPh: %@, NewTrigPh: %@
%s getCoreSpeechXPCConnection Invalidated
%s Asking current VoiceTrigger aset for %{public}d.%{public}d
%s Asking keyword language given Jarvis language list %{public}@, jarvis-selected language: %{public}@
%s CSCoreSpeechServices Invalidated
%s Request updated SAT audio succeed.
%s Request updated SAT audio failed.
%s Start monitoring : Mediaserverd crash / recover event
%s Sending XPCClientType : %{public}d
%s Prepare Audio Provider with Context : %{public}@
%s Failed to get reply result correctly
%s Received alertStartTime = %{public}llu
%s Received peakPower = %{public}f
%s Received averagePower = %{public}f
%s Sending audioMetric request
%s Failed to get audioMetric reply
%s audioMetric : %{public}@
%s Received invalid audioMetric
%s Error creating message
%s audioStreamWithRequest for stream %{public}@
%s Invalid message: stream is nil or request is nil
%s PrepareAudioStream %{public}@
%s Sending VoiceTriggerInfo request
%s Failed to get VoiceTriggerInfo request
%s Received VoiceTriggerInfo %{public}@
%s Failed to parse VoiceTriggerInfo from raw data
%s Received rtsTriggerInfo %{public}@
%s Failed to parse rtsTriggerInfo from raw data
%s Message not valid
%s Not implemented
%s NO reply!!!
%s No message!!
%s No reply for hostTimeFromSampleCount request with sampleCount %{public}llu
%s No message for hostTimeFromSampleCount request with sampleCount %{public}llu
%s No reply for sampleCountFromHostTime request with hostTime %{public}llu
%s No message for sampleCountFromHostTime request with hostTime %{public}llu
%s Cannot handle nil message
%s Unexpected message type : %{public}lld
%s AlertProvidingDelegate messageType : %{public}lld
%s Unexpected type : %{public}lld
%s SessionProvidingDelegate messageType : %{public}lld
%s context : %{public}@
%s invalid context
%s SessionInfoProvidingDelegate messageType : %{public}lld
%s Received notificationInfo %{public}@
%s Failed to parse notificationInfo from raw data
%s startListenWithOption : %{public}d, %{public}@
%s stopListenWithCompletion : %{public}d, %{public}@
%s hasRemoteVADAvailable : %d
%s hasVADAvailable : %d
%s didStopUnexpectly : %d
%s MobileTimer is not available on this platform.
%s Fetching CommandControl Listening State: %d
%s PhraseSpotter enabled = %{public}@
%s PhraseSpotter is already %{public}@, received duplicated notification!
%s Asset available from CAT from: %{public}@
%s getCATXPCConnection Invalidated
%s CSVoiceTriggerXPCListener start listening
%s Received new remote control connection request
%s Connection request is nil
%s Error = %{public}s
%s Getting new client connection : %{public}p
%s Client connection disconnected, removing %{public}p from client connection pool
%s Dealloc audioStreamHolding : %{public}@
%s CSAudioInjectionXPCListener start listening
%s we got unknown types of XPC connection request
%s CSAudioProvider is deallocated
%s CSAudioProvider[%{public}@]:StreamState changed from : %{public}@ to : %{public}@
%s CSAudioProvider[%{public}@]:Setting audioRecorder : %{public}p
%s CSAudioProvider[%{public}@]:setCurrentContext : %{public}@
%s CSAudioProvider[%{public}@]:Cannot change context since audio recorder is currently recording
%s CSAudioProvider[%{public}@]:audioStreamWithRequest for stream <%{public}@>
%s Failed to _prepareAudioStreamSync : %{public}@
%s CSAudioProvider[%{public}@]:Prepare audio stream reuqested while state is %{public}@
%s CSAudioProvider[%{public}@]:Cannot prepare, audio system is recovering
%s CSAudioProvider[%{public}@]:Asking AudioRecorder prepareAudioStreamRecord
%s CSAudioProvider[%{public}@]:prepareAudioStreamRecord failed : %{public}@
%s CSAudioProvider[%{public}@]:Create circular buffer
%s CSAudioProvider[%{public}@]:Tear down circular buffer
%s CSAudioProvider[%{public}@]:startAudioStream with stream : %{public}@ with stream state : %{public}@, option : %{public}@, streamId : %{public}llu
%s CSAudioProvider[%{public}@]:state was %{public}@, prepareAudioStream first
%s CSAudioProvider[%{public}@]:prepareAudioStreamSync with stream : %{public}@ with stream state : %{public}@
%s CSAudioProvider[%{public}@]:prepareAudioStream with stream : %{public}@ with stream state : %{public}@
%s CSAudioProvider[%{public}@]:Cannot handle start audio stream on : %{public}@
%s CSAudioProvider[%{public}@]:Cannot startAudioStream, audio system is recovering
%s CSAudioProvider[%{public}@]:Requested startHostTime = %{public}llu, _clientStartSampleCount = %{public}tu
%s CSAudioProvider[%{public}@]:%{public}@ is requesting earlier audio than asked, we can't deliver earlier audio
%s CSAudioProvider[%{public}@]:Set circularBufferStartHostTime = %{public}llu, circularBufferStartSampleCount = %{public}lu
%s CSAudioProvider[%{public}@]:Entering dispatch group for recordingWillStartGroup
%s CSAudioProvider[%{public}@]:Failed to fetch historical audio since _clientStartSampleCount is newer than audioBuffer sample count(%{public}llu)
%s Failed to switch to record mode : %{public}@
%s CSAudioProvider[%{public}@]:Leaving dispatch group for recordingWillStartGroup
%s CSAudioProvider[%{public}@]:Received didStartRecording while %{public}@
%s CSAudioProvider[%{public}@]:Received didStopRecording reason : %{public}d, streamState : %{public}@
%s CSAudioProvider[%{public}@]:Received didStopRecording while %{public}@
%s CSAudioProvider[%{public}@]:Waiting for recordingWillStartGroup before scheduling stopAudioStream
%s CSAudioProvider[%{public}@]:Scheduled stopAudioStream after waiting for recordingWillStartGroup - stopAudioStream %{public}@ with streamState : %{public}@
%s CSAudioProvider[%{public}@]:requested stop audio stream while stoppingWithScheduledStart, take out audio stream from schedule
%s CSAudioProvider[%{public}@]:Stream %{public}@ is not streaming on stream state : %{public}@, ignore the stopAudioStream request
%s CSAudioProvider[%{public}@]:Cannot handle stop audio stream on : %{public}@
%s CSAudioProvider[%{public}@]:requested stop audio stream while stopping, adding audio stream into stop pending
%s CSAudioProvider[%{public}@]:Stop all recordings, moving stream state to %{public}@
%s CSAudioProvider[%{public}@]:Failed to stop audioStream : %{public}@
%s Saving circular buffer from %{public}lu to %{public}lu
%s CSAudioProvider[%{public}@]:%{public}@ ask for audio hold stream for %{public}f
%s CSAudioProvider[%{public}@]:Timeout for %{public}@ has fired
%s CSAudioProvider[%{public}@]:Removing %{public}@ from stream holders
%s CSAudioProvider[%{public}@]:%{public}@ stream holder was already removed from stream holders
%s CSAudioProvider[%{public}@]:%{public}@ ask for cancel hold stream
%s Failed to prewarmAudioSessionWithError : %{public}@
%s Failed to activateAudioSessionWithReason: %{public}@
%s CSAudioProvider[%{public}@]:Activating Audio Session under : %{public}@
%s Failed to activateAudioSession : %{public}@
%s Failed to deactivate audio session : %{public}@
%s CSAudioProvider[%{public}@]:Deactivating Audio Session under : %{public}@
%s Failed to deactivateAudioSession : %{public}@
%s CSAudioProvider[%{public}@]:AVVC is recovering, ignore command...
%s Fetching voiceTriggerInfo locally for context type : %{public}lld
%s Fetching voiceTriggerInfo from audioRecorder
%s CSAudioProvider[%{public}@]:Cannot stopRecording as there are %{public}tu streamHolders
%s CSAudioProvider[%{public}@]:Shouldn't stop AVVC recording as there are %{public}tu streams
%s CSAudioProvider[%{public}@]:
%s CSAudioProvider[%{public}@]:Buffer underrun!!!!, lastForwardedSampleTime:%{public}lu, oldestSampleTimeInBuffer:%{public}lu, stream:%{public}@
%s CSAudioProvider[%{public}@]:Ignore forwarding stream %{public}@                                        the audio packets until sampleCount == %{public}lu (theMostRecentSampleCount:%{public}lu)
%s CSAudioProvider[%{public}@]:Buffer overrun!!! lastForwardedSampleTime:%{public}lu,                                    theMostRecentSampleCount:%{public}lu, stream:%{public}@
%s ScheduleAlertFinishTimeout : %{public}@
%s ScheduleAlertFinishTimeout will be ignored : %{public}@, %{public}@
%s Received finishStartAlertPlaybackAt:%{public}llu streamState : %{public}@
%s CSAudioProvider[%{public}@]:Requested alertFinishHostTime = %{public}llu, _clientStartSampleCount = %{public}tu, circularBufferSampleCount = %{public}tu
%s Audio Streaming already stopped
%s Will invalidate current builtIn audio stream : %{public}@
%s failed to stopAudioStream : %{public}@
%s CSAudioProvider[%{public}@]:Audio Recorder Disconnected
%s CSAudioProvider[%{public}@]:Mediaserverd/bridgeaudiod crashed
%s CSAudioProvider[%{public}@]:Mediaserverd/bridgeaudiod recovered from crash
%s CSAudioProvider[%{public}@]:AudioRecorder will be destroyed
%s CSAudioProvider[%{public}@]:recordingTransaction already released
%s CSAudioProvider[%{public}@]:Release recording transaction at streamState : %{public}@
%s Schedule didStart WDT %{public}@ for %{public}lf seconds
%s startRecordingWatchDogDidFire : %{public}@, currentToken : %{public}@
%s startRecordingWatchDogToken doesn't match. Ignore this WDT fire
%s Clearing didStartRecordingDelegate WatchDogTimer : %{public}@
%s Schedule didStop WDT %{public}@ for %{public}lf seconds
%s stopRecordingWatchDogDidFire : %{public}@, currentToken : %{public}@
%s stopRecordingWatchDogToken doesn't match. Ignore this WDT fire
%s Clearing didStopRecordingDelegate WatchDogTimer : %{public}@
%s %@ task delivered.
%s %@ completed with response %@ and error %@.
%s CS logging files under %{public}@ created before %{public}@ will be removed.
%s Couldn't get creation date: %{public}@
%s Could not remove %{public}@: %{public}@
%s CS logging files number %{public}lu with pattern %{public}@ under %{public}@ exceeding limit, only keep the latest %{public}lu ones
%s Regular expression is nil!
%s VoiceTrigger cannot be turned on since SpeechDetectionVAD is not present
%s VoiceTrigger cannot be turned on since voiceTriggerInCoreSpeech is NO
%s VoiceTrigger cannot be turned on since VoiceTrigger is disabled
%s VoiceTrigger cannot be turned on since Siri is disabled
%s VoiceTrigger cannot be turned on since SpringBoard is not started yet
%s VoiceTrigger cannot be turned on since device is not unlocked after restart
%s VoiceTrigger cannot be turned on since device is on battery
%s VoiceTrigger cannot be turned on since Siri is restricted on lock screen
%s VoiceTrigger cannot be turned on since Software Update Checking is running
%s NDAPI initialization failed
%s set StartAnalyzeSampleCount = %{public}lld
%s NDAPI config doesn't contain threshold_normal
%s NDAPI config doesn't contain threshold_logging
%s NDAPI config doesn't contain threshold_reject_logging
%s CS doesn't have ndblobbuilder!
%s latestMajorVersion = %d, LatestMinorVersion = %d
%s corespeech.json doesn't contains rtblobs
%s blob file name is not exists
%s blob file is not exists at %{public}@
%s Reading blob from : %{public}@
%s Blob is nil : %{public}@
%s Locale map for %{public}@ is not available on asset
%s Tagging as handheld as user interacted in last %f secs
%s Tagging as farfield as last user interaction %f secs back
%s Tagging as FarField as user dismissed
%s Received external route change notification
%s Received CarPlay route change notification
%s Stop monitoring : AudioRouteChangeMonitor
%s Notifying Hearst Connection State : %{public}d
%s Notifying Jarvis Connection State : %{public}d
%s Failed to create AVVC : %{public}@
%s Create new CSAudioRecorder = %{public}p
%s CSAudioRecorder %{public}p deallocated
%s AVVC initialization failed
%s Successfully create AVVC : %{public}p
%s Calling AVVC setContext
%s Failed to get handle id : %{public}@
%s setContext elapsed time = %{public}lf
%s Calling AVVC setContextForStream : %{public}@
%s setCurrentContext elapsed time = %{public}lf
%s Calling AVVC prepareRecordForStream(%{public}llu) : %{public}@
%s AVVC prepareRecordForStream failed : %{public}@
%s prepareRecordForStream elapsed time = %{public}lf
%s ::: CSAudioRecord will inject audio file instead of recording
%s Resetting AudioFilePathIndex
%s Increase AudioFilePathIndex = %d
%s AudioFilePathIndex is out-of-boundary _audioFilePathIndex:%d injectAudioFilePaths:%d
%s AudioFilePathIndex:%d accessing:%@
%s Unable to find injectAudioFilePath = %@
%s Calling AVVC startRecordForStream : %{public}@
%s startRecordForStream failed : %{public}@
%s startRecordForStream elapsed time = %{public}lf
%s Calling AVVC stopRecordForStream
%s Failed to stopRecordForStream : %{public}@
%s stopRecordForStream elapsed time = %{public}lf
%s Session State = %d
%s AudioSessionState = YES
%s AudioSessionState = NO
%s AVVC sampling rate = %{public}f
%s AVVC doesn't return sampleRate, assume it is default sample rate
%s isNarrowBand = NO for streamHandleId = %{public}lu
%s isNarrowBand = %{public}@ for streamHandleId = %{public}lu
%s Calling AVVC setSessionActive for Prewarm
%s Prewarm AudioSession has failed : %{public}@
%s Calling AVVC setRecordMode to mode : %{public}d
%s AVVC successfully setRecordMode
%s setRecordMode elapsed time = %{public}lf
%s Calling AVVC setSessionActivate for activation
%s AVVC setSessionActivate has failed : %{public}@
%s AVVC successfully activated audioSession
%s setSessionActivate elapsed time = %{public}lf
%s Calling AVVC setSessionActivate for deactivation : %{public}tu
%s Failed to setIamTheAssistant : %{public}@
%s Creating audio session with allow mixable audio while recording to YES
%s Calling AVVC : Enable Smart Routing Consideration
%s Calling AVVC : Disable Smart Routing Consideration
%s enableSmartRoutingConsiderationForStream elapsed time = %{public}lf
%s Fail to setSmartRoutingConsideration : %{public}@
%s Should not call setDuckOthersOptions with NO in B238
%s %{public}@ miniDucking now
%s enableMiniDucking elapsed time = %{public}lf
%s %{public}@
%s configureAlertBehavior elapsed time = %{public}lf
%s VoiceTriggerInfo is nil from AVVC
%s Updated languageCode to: %{public}@ in VTEI received from remote
%s Peak : %f, Avg : %f
%s AVVCAudioBuffer contains %{public}d packet descriptions, size %{public}d, channels %{public}d. Ignoring
%s packetCount %{public}d
%s Bad packet length %{public}d. Skipping rest of record buffer.
%s Cannot handle audio buffer : unexpected format(%{public}u)
%s Compensating %{public}u channel(s), heartbeat = %{public}lld
%s Calling AVVC playAlertSoundForType to play alert
%s Calling AVVC playAlertSoundsForType : %{public}ld
%s Received didStartRecording : %{public}p, forStream:%{public}llu, successfully:%{public}d, error:%{public}@
%s Received audio buffer %{public}d, heartbeat = %{public}llu, streamID (%{public}lu)
%s Received didStopRecording : %{public}p forStream:%{public}llu forReason:%{public}ld
%s Received Stream Invalidated : %{public}llu
%s toConfiguration : %{public}d
%s type : %{public}d, error : %{public}@
%s Encoder error : %{public}@
%s withContext : %{public}@
%s activate : %{public}d
%s AVVC lost mediaserverd connection
%s AVVC informed mediaserverd reset, no further action required
%s Failed to deinterleave the data: %{public}d
%s Cannot create de-interleaver using AudioConverterNew: %{public}d
%s Created de-interleaver
%s Unsupported audio format!
%s Start Listening request with deviceId : %{public}@
%s CSOpportuneSpeakListener received didStart : %{public}d, %{public}@
%s remoteVADDuration = %{public}d, spgDuration = %{public}d, _remoteVADSPGRatio = %{public}d
%s AudioStreamRequest has failed : %{public}@
%s CSOpportuneSpeakListener received didStop : %{public}d, %{public}@
%s Request stop CSOpportuneSpeakListener
%s Audio coming from DoAP should contains RemoteVAD
%s boronScore : %{public}d, reportBoron : %{public}d, slienceScore : %{public}lf
%s Cannot create NSData with size 0
%s xpc object should be XPC_TYPE_DATA
%s Start monitoring : Siri setting switch, Siri is %{public}@
%s Stop monitoring : Siri setting switch
%s Siri Enabled = %{public}@
%s Trying to access BTLocalDevice
%s Accessing BTLocalDevice
%s BTLocalDevice %{public}p
%s Failed to get sharing enable flag : %d
%s Failed getting sharing device addresses %d
%s Failed converting address from BTDeviceAddress (result = %d).
%s Device is temporary paired and not in contacts
%s Detaching bluetooth session : %{public}p
%s Already Attaching Bluetooth Session
%s Start attaching bluetooth session
%s session = %{public}p, result = %{public}d
%s session = %p
%s detached session is different from currently attached session, ignore
%s terminated session is different from currently attached session, ignore
%s Bluetooth Session is NULL
%s Failed to get default local device from session %{public}p, (result = %{public}d)
%s Failed to add local device callback from session %{public}p, (result = %{public}d
%s CSActivationXPCListener start listening
%s sessionID = %{public}llu
%s Trying to get sessionID when audioSessionInfoProvider is nil
%s SmartSiriVolume not supported on this platform - Bailing out
%s SmartSiriVolume connection started listening
%s _csAssetsDictionary = %{public}@
%s CSAssetController cannot query for nil language
%s ::: found %{public}lu installed assets for assetType=%{public}lu, matching query: %{public}@
%s Error running asset-query for assetType:%{public}lu, query: %{public}@, error: %{public}lu
%s ::: found %{public}lu assets for assetType=%{public}lu, matching query: %{public}@
%s Asset state : %{public}ld
%s ::: %{public}s
%s ::: %{public}s; query: %{public}@
%s Found %{public}lu assets
%s Error running asset query: error %{public}lu, or result is empty
%s ::: Request Fetching RemoteMetaData : assetType : %{public}d
%s Fetching remote meta data failed, scheduled retry after %{public}f seconds
%s ::: Request fetching remote asset
%s ::: found %{public}lu assets for assetType %{public}lu
%s Failed to finish query for assetType %{public}lu with error %{public}lu
%s Meta data downloaded successfully for assetType %{public}lu
%s Failed to download meta data for assetType %{public}lu with error %{public}lu
%s ::: Fetching remote asset
%s ::: Purging installed asset : %{public}@
%s ::: Request downloading remote asset for assetType %{public}lu
%s ::: Start downloading asset
%s ::: download progress: %{public}3.0f%%
%s ::: Error downloading from %{public}@ with error %{public}@
%s ::: download completed successfully from %{public}@.
%s Attempting to download asset %{public}@, asset state : %{public}ld
%s ERR: Unknown AssetType: %{public}lu
%s Request to init device with deviceType : %ld, deviceName : %@, deviceId : %@, productId : %@
%s Request inject audio %@ into device with UUID %@ and scale factor %f
%s Audio url %@ is nil, or url not existing in path
%s Can't find device with uuid %@
%s Device speak audio with startTime = %llu, stopTime = %llu
%s Request connect device with UUID %@
%s input device uuid is nil
%s Request disconnect device with UUID %@
%s deviceUUID %@ not existing in deviceDictionary, already disconnected
%s Request fetching primary input device
%s Error fetching primary device!
%s Cannot create NSNumber if xpcObject is NULL
%s XPC object type should be BOOL, DOUBLE, INT64, or UINT64
%s Cannot create xpcObject if objcType is NULL
%s Cannot create xpcObject since there is no matching type
%s Found pending activation : %{public}@, handle pending activation immediately
%s Received Activation Event in CoreSpeechDaemon: %{public}@
%s Returning error for already existing pending activation event : %{public}@
%s No delegate registered : Postpone activation event handling until we have delegate registered
%s Pending Timeout fired for %{public}@ returning error for timeout
%s There is no pending activation event to timeout
%s corespeechd received mediaserverd launched event
%s Start monitoring : AOP First Pass trigger
%s Stop monitoring : AOP First Pass trigger
%s AOP First Pass trigger detected
%s Cannot handle activation event : %{public}@
%s SmartSiriVolume: deleted %{public}u elements in energy buffer.
%s SmartSiriVolume: number of elements to delete exceeds energy buffer size, ignore.
%s SmartSiriVolume init value for noise estimation %{public}f
%s SmartSiriVolume init value for LKFS estimation %{public}f
%s SmartSiriVolume enable policy changed : %{public}@
%s Already started listen polling, skip
%s listen polling has failed : %{public}@
%s Skip listen polling since audio is streaming / Siri disabled
%s Start audio stream successfully ? %{public}@, error : %{public}@
%s Received didStartRecording when Siri is off
%s Failed in requesting audio stream : %{public}@
%s Failed to stop audio stream : %{public}@
%s No audio stream to stop, we shouldn't hit this
%s SmartSiriVolume received MediaRemote initial state as %{public}@
%s SmartSiriVolume haven't got MediaRemote callback yet, let's assume media is playing.
%s SmartSiriVolume received alarm initial state as %{public}@
%s SmartSiriVolume received timer initial state as %{public}@
%s asset is nil, use default parameters(this should not happen).
%s SmartSiriVolume configure: %{public}@
%s SmartSiriVolume heartbeat = %{public}lld
%s SmartSiriVolume: estimated noise level %{public}f
%s SmartSiriVolume: estimated LKFS %{public}f
%s SmartSiriVolume: pause SSV calculation.
%s SmartSiriVolume: resume SSV calculation.
%s Siri is disabled, we shouldn't receive audio here, heartbeat = %{public}lld
%s stream stopped unexpectedly : %{public}ld
%s SmartSiriVolume received VT event!
%s SmartSiriVolume remove samples from VT utterances by %{public}llu, with startAnalyzeSampleCount = %{public}llu, samplesFed = %{public}llu, triggerStartSampleCount = %{public}llu
%s SmartSiriVolume trying to delete too many VT samples, set triggerDurationToDelete to be limited max: %{public}llu
%s SmartSiriVolume got empty VT event!
%s SmartSiriVolume dismiss alarm firing as VoiceTrigger detected.
%s SmartSiriVolume dismiss timer firing as VoiceTrigger detected.
%s SmartSiriVolume: final estimated TTS volume in dB %{public}f
%s SmartSiriVolume: adjust TTS volume since alarm/timer is firing.
%s SmartSiriVolume: TTS volume in dB from noise %{public}f, from LKFS %{public}f, with user offset %{public}f
%s SmartSiriVolume: soft volume algorithm in use
%s SmartSiriVolume: pause LKFS calculation according to MediaRemote notification.
%s SmartSiriVolume: resume LKFS calculation according to MediaRemote notification.
%s SmartSiriVolume received unknown media playing state, let's assume media is playing.
%s SmartSiriVolume received unknown alarm state, let's reset alarm state.
%s SmartSiriVolume: alarm firing status = %@ according to MobileTimer notification.
%s SmartSiriVolume received unknown timer state, let's reset timer state.
%s SmartSiriVolume: timer firing status = %@ according to MobileTimer notification.
%s Siri enabled : %{public}d
%s SmartSiriVolume dismiss alarm firing as Siri client is recording.
%s SmartSiriVolume dismiss timer firing as Siri client is recording.
%s SmartSiriVolume: set StartAnalyzeSampleCount = %{public}lld
%s SmartSiriVolume: final estimated TTS volume %{public}f with music volume %{public}f
%s Dealloc CSAudioInjectionProvider : %@
%s Stopping Audio Injection Provider : %@
%s Calling start audio stream : %@ %@
%s Calling stop audio stream : %@
%s Unable to expand archive %{public}@ to directory %{public}@
%s Listening on watch cannot be turned on since speech detection VAD is disabled
%s Listening on watch cannot be turned on since Siri is disabled
%s Listening on watch cannot be turned on since SpringBoard is not started
%s Listening on watch cannot be turned on since device is not unlocked after restart
%s Listening on watch cannot be turned on since Siri assertion is disabled
%s Listening on watch cannot be turned on since audioInjection is enabled
%s Siri language is nil, falling back to %@
%s ::: Error reading file %@, err: %d
%s CSAudioFileReader requires prepare recording settings to feed audio
%s CSAudioFileReader only support LinearPCM to feed
%s Setting ExtAudioFileSetProperty failed : %d
%s Starting audio file feed timer, bufferDuration = %f sampleRate = %f, bytesPerFrame = %d, channelsPerFrame = %d
%s ::: Error reading data from audio file : %d
%s Reach to EOF, chunkSize = %d
%s Stopping audio file feed timer
%s _bestStartDetectSample %lu was greater than _bestEarlyDetectSample %lu or _bestEndDetectSample %lu
%s _bestEarlyDetectSample %lu was greater than _bestEndDetectSample %lu
%s _speechVoiceLevel %lu is 0
%s _numberOfTotalFramesETFT %lu is 0
%s Advert data: %{public}@
%s advert data write failed
%s BeepCanceller asset file loading from : %{public}@
%s Could not read beep file: %@
%s beepVector Size = %{public}lu
%s Cannot initialize beep canceller
%s Beep canceller initialized with maxNumSamples = %{public}d
%s It will beep now
%s Reset beep cancellation
%s Dealloc CSAudioInjectionEngine : %@
%s Looking up audio diff:%llu sampleCount:%llu %@
%s Start monitoring : Springboard start
%s Cannot start monitoring Springboard start because it was already started
%s Stop monitoring : Springboard start
%s SpringBoard started = %{public}@
%s Received Activation Event : %{public}@
%s activation client not exist
%s ERR: Failed to initialize SSV Manager!
%s ERR: %{public}@
%s Stop monitoring : First unlock
%s xpc object string return nil
%s xpc object should be XPC_TYPE_STRING
%s xpc object should be XPC_TYPE_ARRAY
%s xpcObject value is NULL
%s Cannot decode non-plist types of XPC object
%s Cannot encode non-plist types into XPC object : %{public}@
%s invalid packets
%s Invoked Siri client
%s Cannot invoke Siri client : %{public}@
%s Invoked Siri client for voice trigger from Jarvis
%s Cannot invoke Siri client for voice trigger from Jarvis : %{public}@
%s SiriActivationConnection deactivated due to %ld
%s ::: Error creating output file %{public}@, err: %{public}d
%s ::: Error writing to output wave file. : %{public}ld
%s metaInfo passed is nil - Bailing out
%s Unable to read data from file: %@
%s Could not read existing %@ file: err: %@
%s ERR: Failed to create json %{public}@ with %{public}@
%s saveAudioChunk toURL: %{public}@
%s Invalid request: nothing to write to file
%s stream %{public}@ initialized
%s stream %{public}@ is deallocated
%s Creating UUID for start audio stream request : %{public}@
%s AudioStream<%{public}@> is streaming : %{public}d
%s AudioStream<%{public}@> has received didStopStreamUnexpectly
%s AudioStream<%{public}@> has received didHardwareConfigurationChange
%s Start monitoring : VoiceTrigger Asset meta update
%s Stop monitoring : VoiceTrigger Asset meta update
%s New VoiceTrigger asset metadata is available
%s Resetting audio preprocessor : %{public}f, containsVoiceTrigger:%{public}d
%s Flushing audio preprocessor
%s Record route = %{public}@, playback route = %{public}@
%s Device endpointType = %{public}lu
%s Received active route change notification
%s Start monitoring : speech endpoint asset meta update
%s Stop monitoring : speech endpoint asset meta update
%s New speech endpoint asset is available
%s ::: CoreSpeech logging initialized (%s)
%s Couldn't create CoreSpeech log directory at path %{public}@ %{public}@
%s event = %{public}p client = %{public}p cannot handle event
%s ignore unknown types of message
%s message = %{public}p, client = %{public}p, cannot handle message
%s MessageType = %{public}lld
%s Received error %{public}@ from client %{public}@
%s Client %{public}p connection disconnected, noticing xpc listener
%s AssetManager cannot be turned on since isFirstUnlocked is NO
%s AssetManager cannot be turned on since network is not available
%s CSXPCListener start listening
%s ::: incrementing false wakeup to %{public}llu
%s ::: accumulated false wakeup count is %{public}llu so far, not reporting yet because it has been only %{public}.2f seconds since last report
%s Sending event with non determenistic triggerLengthSampleCount %llu, triggerLengthSampleCountDetermenisticFromFirstPass %llu, and delta of %lld samples
%s VoiceTrigger is already %{public}@, received duplicated notification!
%s Start monitring : VoiceTrigger setting switch
%s Cannot start monitoring VoiceTrigger setting switch because it was already started
%s Stop monitring : VoiceTrigger setting switch
%s VoiceTrigger enabled = %{public}@
%s Received AOP Listening state change notification : %{public}d
%s Unexpected XPC audioTimeConvert providing request : %{public}lld
%s From sampleCount %{public}llu fetched hostTime = %{public}llu
%s From hostTime %{public}llu fetched sampleCount = %{public}llu
%s Non internal build, Ignoring command %@ from peerId %@ - Bailing out!
%s Received Malformed command %@ from peerId %@ - Bailing out!
%s Command %@ received from peerId %@
%s Unknown Command: (%@) - Ignoring
%s Triggering sync with peer - %@
%s Triggering nearmiss sync with peer - %@
%s Triggering voice profile sync with peer - %@
%s CSP2P_RemoteHeySiriCmd: ENABLE HeySiri: Not Implemented Yet: 
%s CSP2P_RemoteHeySiriCmd: DISABLE HeySiri: Not Implemented Yet: 
%s Cannot read contents of directory: %@, err: %@
%s Could not determine if [%@] is a directory or not. Err=%@
%s Found dir: %@. Skipping compression
%s _compressFilesInDirectory: Malloc failed for file %@ (%lu) - Discarding
%s _compressFilesInDirectory: Compression failed for file %@ (%lu) - Sending Uncompressed
%s _compressFilesInDirectory: File %@ compressed from %ld to %ld 
%s Failed in compressing %{public}@ with errror %{public}@ - Bailing out
%s Transfering NearMiss file %@ withCompression %{public}@ and size %ld in batch %{public}@
%s Transfering grading file %@ withCompression %{public}@ and size %ld in batch %{public}@
%s %@ is nil - Bailing out
%s Failed in transporting Voice file %@ with reponse: %@, error %@
%s Failed to remove the file %@ with error %@
%s Failed to move the file %@ to %@ with error %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: received malformed command - %@ %@ %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: unknown IDS peer with passed Identifier %@, %@ %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: received malformed command - %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: Creating directory failed with error %@
%s Ignoring sync of existing file %@ from %@
%s Syncing parallel recorded audio file - %@ from %@
%s Uncompressed file %@ sent by peer %@
%s ERR: Failed to allocate buffer of size %zu, bailing out
%s Writing to file(%@) failed!. Err=%@
%s received malformed command - %@ %@ %@
%s unknown IDS peer with passed Identifier %@, %@ %@
%s received malformed command - %@
%s Syncing audio file - %@ from %@
%s CSP2P_VoiceProfileTransferCmd: received malformed command - %@ %@ %@
%s CSP2P_VoiceProfileTransferCmd: received malformed command: CSP2P_VoiceProfileData_Key: %@CSP2P_VoiceProfileFileName_Key: %@CSP2P_VoiceProfileSpeakerName_Key: %@CSP2P_VoiceProfileLocale_Key: %@CSP2P_VoiceProfileDataType_Key: %@CSP2P_VoiceProfileTotalSegments_Key: %@CSP2P_VoiceProfileSegment_Key: %@
%s CSP2P_VoiceProfileTransferCmd: Received VoiceProfile Segment (%@/%@) from peerId %@
%s CSP2P_VoiceProfileTransferCmd: Failed to delete the directory %@ with error %@
%s CSP2P_VoiceProfileTransferCmd: received VoiceProfileSegment %@, expected %d
%s CSP2P_VoiceProfileTransferCmd: Creating directory failed with error %@
%s CSP2P_VoiceProfileTransferCmd: Writing to file failed!!!
%s Received request to delete VoiceProfile %@ from peerId %@
%s Cannot send data across when _adCompanionServiceProvider is nil - returning
%s ERR: Rejecting command %@ sent to non Horseman device
%s ERR: received malformed command - %@ %@
%s ERR: unknown IDS peer with passed Identifier %@, %@ %@
%s ERR: received malformed command with locale nil - %@
%s Fetching homeUserId for siriProfileId %{public}@
%s siriProfileId %{public}@ maps to homeUserId %{public}@
%s ERR: Home User Id erred %{public}@ for Siri Profile Id %{private}@
%s ERR: %@
%s ERR: received malformed command with profileId nil - %@
%s ERR: Failed to find voice profile with identifier - %@
%s CSP2P_VoiceProfileFetchCmd: Transferring voice profile %{public}@
%s CSP2P_VoiceProfileFetchCmd: File %@ isCompressed: %d, compressedSize: %ld, err: %@
%s CSP2P_VoiceProfileReverseTransferCmd: Failed VoiceProfileTransfer: %@, error %@
%s CSP2P_VoiceProfileReverseTransferCmd: Successfully transferred %@
%s CSP2P_VoiceProfileReverseTransferCmd: Failed transferring voice profile %@ with error %@
%s CSP2P_VoiceProfileReverseTransferCmd: Successfully transferred voice profile %@
%s ERR: Rejecting command %@ sent to Horseman device
%s ERR: received malformed command with relative path nil - %@
%s Failed in sending trigger for Voice profile update to peer %@ with error %@
%s SpkrId:: path is nil - Bailing out
%s SpkrId:: Direntry with same name exists, this will be removed: %@
%s SpkrId:: Creating Directory : %@
%s SpkrId:: Creating Directory failed : %@
%s Error reading directory at %@: err: %@
%s %@ is empty
%s Using audioInjectionProvider as recorder
%s HEP enabled=%d
%s Device supporting barge-in ? %{public}@
%s Failed to find matching service to IOPlatformExpertDevice
%s Fetched hardware revision : %{public}@
%s Failed to find property "config-number"
%s init-_currentLanguageCode: %{public}@
%s Asset Manager Policy has been %{public}@
%s Asset Manager Policy has been enabled, start fetching meta data now
%s %@
%s Need to fetch remote meta now, since we have new asset need to be downloaded
%s Does not need to fetch remote meta now
%s Cannot fetch VoiceTrigger asset meta data
%s Undefined assetType : %{public}u
%s _currentLanguageCode changed: %{public}@
%s Trying to start download meta data
%s Periodical downloading is already scheduled, ignore request.
%s No periodical downloading is scheduled, ignore request.
%s zeroFilterWinSz: %{public}tu, numHostTicksPerAudioSample: %{public}f
%s _vtEndInSampleCount:%{public}ld, _numSamplesProcessed: %{public}ld, voiceTriggerInfo: %{public}@
%s Creating OS Transaction for %{public}@
%s Release OS Transaction for %{public}@
%s Metric Providing Request Message has arrived : %{public}lld
%s Unexpected XPC Metric providing request : %{public}lld
%s audioMetric = %{public}@
%s audioMetricProvider not existing
%s Start monitoring: wake Gesture
%s ::: Received Gesture: %@
%s Wake Gesture: currDate=%@, wakeGestureTimeStamp=%@, 
currMachAbsTime=%llu, timeDelta=%f, 
timeDeltaInTicks=%llu, possWakeGesture=%llu
%s Message type = %{public}lld
%s Cannot handle wrong message type
%s Cannot handle activateEventMessage since event is nil
%s Start monitoring : Siri language code
%s Stop monitoring : Siri language code
%s Siri language changed to : %{public}@
%s Ignore notifying change of language code, since it is nil
%s Start monitoring : VoiceTrigger Asset Download
%s Stop monitoring : VoiceTrigger Asset Download
%s New VoiceTrigger is now installed
%s Failed to create regular expression : %{public}@
%s Smart Siri Volume not supported on this platform - Bailing out
%s ERR: Failed to initialize Smart Siri Volume with sampling %{public}f and %{public}@
%s AlarmState changed to %{public}d
%s TimerState changed to %{public}d
%s MusicVolume changed to %{public}f
%s AlarmVolume changed to %{public}f
%s UUID was nil will not start fingerprint provider
%s Updated in use services for fingerprintProvider. %lu services in use
%s Starting continuousFingerprintProvider
%s UUID was nil will not stop fingerprint provider
%s Updated in use services for fingerprintProvider. %lu services remaining
%s Stopping continuousFingerprintProvider
%s Start monitoring : AdBlocker Asset Download
%s Stop monitoring : AdBlocker Asset Download
%s New AdBlockerAsset is now installed
%s CSVoiceIdXPCListener start listening
%s speechController = %{public}p
%s xpcListener = %{public}p
%s context = %{public}@
%s Failed to create audio recorder : %{public}@
%s For Context : %{public}@, audioStreamId(%llu) has allocated
%s Failed to get audio stream handle ID : %{publid}@
%s has match with audio stream handle id : %llu
%s does not match with audio stream handle id(%llu), creating new audio provider
%s have matched audioProvider with stream handle id : %llu
%s don't have matched audioProvider with stream handle id : %llu, need to create one later
%s audioProvider[%{public}@] invalidated with streamHandleId : %{public}llu
%s No matched audioProvider found for streamHandleId : %{public}llu
%s Received VoiceTrigger cached asset change notification, let's reinitialize VoiceTrigger
%s Trying to start clear logging files
%s Clear logging file timer is already started, ignore startClearLoggingFilesTimer request.
%s cannot handle nil event 
%s ignore unknown types of message: %{public}@
%s cannot handle nil error
%s In %@: Continuous digital zero detected, lasting %{public}u samples per channel
%s In %@: Continuous digital zero in this audio chunk detected, lasting %{public}u samples per channel
%s Fallback asset resource path : %{public}@
%s Cannot find corespeech asset from resourcePath : %{public}@
%s Configuration file is not exists : %{public}@
%s Cannot read configuration file : %{public}@
%s Cannot decode configuration json file : %{public}@
%s Configuration json file is not expected format
%s Cannot access to %{public}@ %{public}@ using default value=%{public}@
%s Cannot send nil message
%s Unable to send message to client since there is no connection
%s Cannot handle audio providing message
%s Audio Providing Request Message has arrived : %{public}lld
%s Unable to handle audio providing switch message : context is nil
%s Setting XPCClientType to %{public}d
%s Handing PingPong message
%s Received SIGTERM. Exiting
%s CSHostDaemon didLaunch
%s Got xpc event for notification %s
%s numChannels: %{public}lu, recordingDuration: %{public}f, sampleRate: %{public}f
%s Cannot copy samples since this is empty
%s Could NOT copyFrom: %{public}lu to: %{public}lu, retSampleCount: %{public}lu
%s copyBuffer: oldestSample: %{public}lu latestSample: %{public}lu, numSamplesCopied: %{public}lu
%s CSAudioCircularBuffer.reset
%s Invalid request: reqStartSample=%{public}lu, reqEndSample=%{public}lu, oldestSampleInBuffer: %{public}lu, latestSampleInBuffer=%{public}lu
%s Error reading audio file: %{public}d, skipping...
%s Notifying CoreSpeechDaemon launched
%s Start monitoring : corespeechd state
%s Cannot start monitoring corespeechd state because it was already started
%s Stop monitoring : corespeechd state
%s CoreSpeechDaemon state changed to %{public}u
%s Delta is larger than anchorHostTime: anchorSampleCount = %{public}lld, sampleTime = %{public}lld, anchorHostTime = %{public}lld
%s Delta is larger than anchorSampleCount
%s Not supported on this platform
%s ERR: Mach Service Name is nil - Bailing out
%s ERR: Proxy Object is nil - Bailing out
%s ERR: Exported interface is nil - Bailing out
%s Started listening for %{public}@
%s Service %{public}@ dealloced - %{public}@
%s Got connection on service %{public}@
%s Invalid listener - %{public}@
%s Rejecting connection to %{public}@ due to entitlement
%s Interruption Handler: %{public}@, client PID: %{public}d)
%s Invalidation Handler: %{public}@, client PID: %{public}d exited
%s Adding connection for client PID (%{public}d)
%s Client connections dump:
For client PID (%d): %@
%s Sending message for client PID (%{public}d)
%s RemoteObjectProxy is nil for client PID (%{public}d)
%s Cannot create directory at : %{public}@ : %{public}@
%s Successfully make CoreSpeechDaemon as KeepAlive
%s Failed to make CoreSpeechDaemon as KeepAlive : Cannot create file at %{public}@, error : %{public}@, %{public}@
%s KeepAlive file %{public}@ already existing
%s Start monitoring: siri assertion enable/disable
%s Stop monitoring: siri assertion enable/disable
%s did receive enable assertion
%s did receive disable assertion
%s CSAudioSessionProvidingProxy has received xpc disconnection _streamClientType : %{public}d
%s Trying to release audio stream on CSAudioSessionProvidingProxy
%s Session Providing Request Message has arrived : %{public}lld
%s Unexpected XPC session providing request : %{public}lld
%s Failed to prewarm audio session, error : %{public}@
%s Session activate reason : %{public}u, dynamicAttributeType : %{public}u, bundleId: %{public}@
%s Failed to activate audio session, error : %{public}@
%s Session activate reason : %{public}u
%s Failed to deactivate audio session, error : %{public}@
%s Session request getting duck others option
%s Trying to get duck others option when audioSessionProvider is nil
%s Session set duck others option : %{public}d
%s Trying to set duck others option when audioSessionProvider is nil
%s Session %{public}@ mini ducking
%s Trying to enalbe mini ducking when audioSessionProvider is nil
%s Session %{public}@ smart routing consideration
%s Trying to enable smart routing consideration when audioSessionProvider is nil
%s Dealloc CSAudioInjectionEngineRemoraEngine : %@
%s unbalanced dispatch_group_enter and leave : ignore we are ignore dispatch_group_leave
%s Alert Providing Request Message has arrived : %{public}lld
%s Unexpected XPC alert providing request : %{public}lld
%s Alert sound url : %{public}@, alertType = %{public}d
%s Set alert sound successful ? %{public}@
%s audioAlertProvider not existing
%s AlertType = %{public}d
%s Play alert sound successful ? %{public}@
%s PlayRecordStartingAlertAndResetEndpointer successful ? %{public}@
%s alertStartTime = %{public}llu
%s Invalid alert behavior
%s Alert behavior : %{public}@
%s value = %{public}d
%s Couldn't create SSV log directory at path %{public}@ %{public}@
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Force enabling VoiceTrigger AP mode ? %{public}@
%s Force enabling VoiceTrigger AOP mode ? %{public}@
%s Couldn't create SoS log directory at path %{public}@ %{public}@
%s enableAudioInection: is only available on internal builds
%s setAudioInjectionFilePath: is only available on internal builds
%s kCSAudioInjectionFilePathKey is not array type
%s kCSAudioInjectionFilePathKey array size = %d
%s kCSAudioInjectionFilePathKey doesn't have NSString as an array entry
%s Override iOS barge-in support key to: %{public}@
%s Shouldn't be called on non-iOS platform
%s Request to bypass PhraseSpotter : %{public}d with timeout %{public}lf seconds
%s Received Siri Session did cancelled
%s Connection %{public}p rejected due to missing entitlement
%s Start monitoring : AdBlocker Asset meta update
%s Stop monitoring : AdBlocker Asset meta update
%s New AdBlocker asset metadata is available
%s Error reading file
%s Version of AdBlockerAsset: %d
%s Stopping AudioInjectionEngine : %@
%s Failed to open audio file %@, error : %d
%s Streaming from %@
%s Cannot speak nil Audio URL
%s Cannot speak since audio file does not exists : %@
%s Calling stopAudioStream
%s Start monitoring : Software update checking state
%s Cannot start monitoring software update checking state because it was already started
%s Stop monitoring : Software update checking state
%s Software update checking running : %{public}@
%s There is not audio buffer to convert. Skip this.
%s MachTime of sending first speech packet: %{public}llu
%s Resetting AudioConverter buffer
%s createAudioConverter : initial frames per buffer = dur %{public}.2f * sr %{public}.2f = %{public}u
%s Failed to get audioConverter property (kAudioConverterCurrentOutputStreamDescription) : %{public}d
%s _configureAudioConverter: encoded audio needs minimum of %{public}u bytes per output buffer
%s _configureAudioConverter: AudioConverterGetProperty(kAudioConverterPropertyMinimumOutputBufferSize) returned status %{public}d
%s _configureAudioConverter: final framesPerBuffer: %{public}u
%s _configureAudioConverter: _convertPacketCount: %{public}u
%s _configureAudioConverter: AudioConverterGetProperty(MaximumOutputPacketSize): returned status %{public}d
%s createAudioConverter: outputSizePerPacket: %{public}u
%s _configureAudioConverter: _convertAudioCapacity %{public}u bytes
%s Cannot create AudioConverter using AudioConverterNew : %{public}u
%s Cannot set encoder bit rate : %{public}u
%s Cannot set codecQuality : %{public}u
%s Get initial state from MediaRemote: media is on playing state %{public}ld.
%s Start monitoring MediaRemote: media playback
%s Stop monitoring MediaRemote: media playback
%s MediaRemote reported the now playing app playback state changed to %s (state %d)
%s Turn on AP mode since device is hands free state
%s CommandControl Streaming = %{public}d
%s Turn on AP mode since command control is streaming
%s VoiceTrigger AOP mode cannot be turned on since builtIn speaker is active
%s AudioRecordContext = %{public}@, recordState = RECORDING
%s hypotheticalRoute = %{public}@
%s Audio route changing to HFP is expected
%s VoiceTrigger AOP mode cannot be turned on since Siri client is recording
%s AOP Listening is disabled
%s Turn on AP mode since device is on the phone(or ringtone) call state
%s Speech Detection VAD is not available, we will still running in AOP mode
%s Will notify Siri Client record state change to STOPPED in %{public}f seconds, eventUUID = %{public}@
%s Notifying Siri Client record state change to STOPPED, eventUUID = %{public}@
%s There is no pending event to timeout : pendingRecordingStopUUID = %{public}@, timeoutTargetUUID = %{public}@
%s network state notify key : %s
%s Start monitoring : network availability
%s Stop monitoring : network availability
%s Network availability changed
%s xpc object should be XPC_TYPE_DICTIONARY
%s xpcObject key or value is NULL
%s Cannot encode key into xpcobject since the key is not NSString class type
%s Meter Providing Request Message has arrived : %{public}lld
%s Unexpected XPC Meter providing request : %{public}lld
%s setMeteringEnabled : %{public}d
%s audioMeterProvider not existing
%s updateMeters
%s power = %{public}f with powerType %{public}u
-[CSSyncKeywordAnalyzerQuasar initWithConfigPath:triggerTokens:useKeywordSpotting:]
triggerConfidence
Td,N,V_triggerConfidence
activeChannel
TQ,N,V_activeChannel
ctcKwdToPhraseIdMap
T@"NSDictionary",&,N,V_ctcKwdToPhraseIdMap
phraseIdScores
T@"NSDictionary",R,N,V_phraseIdScores
samples_fed
best_start
best_end
best_score
is_secondchance
isEarlyDetect
samplesFed
TQ,N,V_samplesFed
bestStart
TQ,N,V_bestStart
bestEnd
TQ,N,V_bestEnd
bestScore
Tf,N,V_bestScore
isSecondChance
TB,N,V_isSecondChance
TB,N,V_isEarlyDetect
dictionary
T@"NSDictionary",R,N
delegate
T@"<CSKeywordAnalyzerNDEAPIScoreDelegate>",W,N,V_delegate
type
-[CSFallbackAudioSessionReleaseProvidingProxy handleXPCMessage:messageBody:client:]
option
-[CSFallbackAudioSessionReleaseProvidingProxy _handleDeactivateAudioSessionRequestMessage:messageBody:client:]
result
resultErrorDomain
resultErrorCode
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
xpcConnection
T@"CSXPCConnection",W,N,V_xpcConnection
-[CSAudioStartStreamOption(AVVC) avvcStartRecordSettingsWithAudioStreamHandleId:]
com.apple.corespeech.corespeechd.activation.xpc
v16@?0@"NSObject<OS_xpc_object>"8
-[CSActivationXPCClient dealloc]
-[CSActivationXPCClient _handleListenerEvent:]
-[CSActivationXPCClient _handleListenerError:]
-[CSActivationXPCClient notifyActivationEvent:completion:]
v20@?0B8@"NSError"12
event
T@"NSObject<OS_xpc_object>",&,N,V_xpcConnection
v8@?0
CSSampleCountHostTimeConverter
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
anchorSampleCount
TQ,N,V_anchorSampleCount
anchorHostTime
TQ,N,V_anchorHostTime
-[CSAudioSampleRateConverter _createSampleRateConverterWithInASBD:outASBD:]
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[CSAudioSampleRateConverter convertSampleRateOfBuffer:]
v12@?0i8
-[CSSpeakerRecognitionAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeakerRecognitionAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeakerRecognitionAssetMetaUpdateMonitor _didReceiveSpeakerRecognitionAssetMetaData]
v16@?0@8
com.apple.MobileAsset.SpeakerRecognitionAssets.ma.cached-metadata-updated
Audio/Video
Alarm
CSVolumeMonitor queue
-[CSVolumeMonitor _startMonitoringWithQueue:]
-[CSVolumeMonitor fetchVolumeFromAVSystemControllerForAudioCategory:]_block_invoke
-[CSVolumeMonitor systemControllerDied:]
-[CSVolumeMonitor startObservingSystemVolumes]
-[CSVolumeMonitor _startObservingSystemControllerLifecycle]
CSFallbackAudioSessionReleaseProvider
-[CSFallbackAudioSessionReleaseProvider fallbackDeactivateAudioSession:error:]_block_invoke
-[CSFallbackAudioSessionReleaseProvider fallbackDeactivateAudioSession:error:]
audioRecorder
T@"CSAudioRecorder",&,N,V_audioRecorder
-[CSAudioChunk chunkForChannel:]
-[CSAudioChunk subChunkFrom:numSamples:forChannel:]
-[CSAudioChunk subChunkFrom:numSamples:]
-[CSAudioChunk splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:]
T@"NSData",R,N,V_data
TQ,R,N,V_numChannels
TQ,R,N,V_numSamples
TQ,R,N,V_sampleByteDepth
TQ,R,N,V_startSampleCount
TQ,R,N,V_hostTime
remoteVADAvailable
TB,R,N
T@"NSData",&,N,V_remoteVAD
xpcObject
T@"NSObject<OS_xpc_object>",R,N
numChannels
numSamples
sampleByteDepth
startSampleCount
hostTime
data
remoteVAD
-[CSSpeakerRecognitionAssetDownloadMonitor _startMonitoringWithQueue:]
-[CSSpeakerRecognitionAssetDownloadMonitor _stopMonitoring]
-[CSSpeakerRecognitionAssetDownloadMonitor _didInstalledNewAsset]
-[CSSpeakerRecognitionAssetDownloadMonitor trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:]
trialAssetMonitor
T@"CSTrialAssetDownloadMonitor",&,N,V_trialAssetMonitor
com.apple.MobileAsset.SpeakerRecognitionAssets.ma.new-asset-installed
-[CSVoiceTriggerXPCServiceProxy enableVoiceTrigger:withAssertion:timestamp:]
voicetrigger assertion queue
-[CSVoiceTriggerXPCServiceProxy enableVoiceTrigger:withAssertion:timestamp:]_block_invoke
Enabled
Disabled
phrasespotter assertion queue
-[CSVoiceTriggerXPCServiceProxy setPhraseSpotterBypassing:timeout:]_block_invoke_2
bypassed
NOT bypassed
-[CSVoiceTriggerXPCServiceProxy setPhraseSpotterBypassing:timeout:]_block_invoke
raise-to-speak assertion queue
-[CSVoiceTriggerXPCServiceProxy setRaiseToSpeakBypassing:timeout:]_block_invoke_2
-[CSVoiceTriggerXPCServiceProxy setRaiseToSpeakBypassing:timeout:]_block_invoke
-[CSVoiceTriggerXPCServiceProxy notifyVoiceTriggeredSiriSessionCancelled]
-[CSVoiceTriggerXPCServiceProxy notifyServiceConnectionLost]
activationAssertions
T@"NSMutableSet",&,N,V_activationAssertions
isPhraseSpotterBypassed
TB,N,V_isPhraseSpotterBypassed
isRaiseToSpeakBypassed
TB,N,V_isRaiseToSpeakBypassed
observers
T@"NSHashTable",&,N,V_observers
-[CSAudioStreamProvidingProxy setAudioStreamProvidingForProxy:]
-[CSAudioStreamProvidingProxy CSXPCConnectionReceivedClientError:clientError:client:]
-[CSAudioStreamProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleSetCurrentConextMessage:messageBody:client:]
context
audioStreamRequest
-[CSAudioStreamProvidingProxy _handleAudioStreamRequestMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleAudioStreamPrepareMessage:messageBody:client:]
startAudioStreamOption
-[CSAudioStreamProvidingProxy _handleStartAudioStreamMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleStopAudioStreamMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleVoiceTriggerInfoMessage:messageBody:client:]
v24@?0@"NSDictionary"8@"NSDictionary"16
voiceTriggerInfo
rtsTriggerInfo
-[CSAudioStreamProvidingProxy _handleIsRecordingMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleRecordRouteMessage:messageBody:client:]
recordRoute
-[CSAudioStreamProvidingProxy _handleRecordDeviceInfo:messageBody:client:]
recordDeviceInfo
-[CSAudioStreamProvidingProxy _handleRecordSettings:messageBody:client:]
recordSettings
-[CSAudioStreamProvidingProxy _handleIsNarrowband:messageBody:client:]
-[CSAudioStreamProvidingProxy _handlePlaybackRouteMessage:messageBody:client:]
playbackRoute
-[CSAudioStreamProvidingProxy audioStreamProvider:didStopStreamUnexpectly:]
stopReason
chunk
-[CSAudioStreamProvidingProxy audioStreamProvider:didHardwareConfigurationChange:]
hardwareConfig
body
-[CSAudioStreamProvidingProxy _setAllowMixableAudioWhileRecording:]
audioStream
T@"CSAudioStream",&,N,V_audioStream
lastVoiceTriggerInfo
T@"NSDictionary",C,V_lastVoiceTriggerInfo
lastRTSTriggerInfo
T@"NSDictionary",C,V_lastRTSTriggerInfo
recordContext
T@"CSAudioRecordContext",&,N,V_recordContext
recordEventUUID
T@"NSString",&,N,V_recordEventUUID
audioStreamProviding
T@"<CSAudioStreamProviding>",W,N,SsetAudioStreamProvidingForProxy:,V_audioStreamProviding
triggerInfoProviding
T@"<CSTriggerInfoProviding>",W,N,V_triggerInfoProviding
streamClientType
TQ,N,V_streamClientType
-[CSAudioFileLog _closeAudioFile]
-[CSAudioFileLog startRecording]_block_invoke
-input.wav
-[CSAudioFileLog appendAudioData:]_block_invoke
-[CSAudioFileLog stopRecording]_block_invoke
CSAudioSessionInfoProvider
-[CSAudioSessionInfoProvider CSAudioServerCrashMonitorDidReceiveServerCrash:]_block_invoke
-[CSAudioSessionInfoProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]_block_invoke
-[CSAudioSessionInfoProvider _registerInterruptionNotification]
-[CSAudioSessionInfoProvider _registerAudioRouteChangeNotification]
-[CSAudioSessionInfoProvider _handleInterruption:]_block_invoke
-[CSAudioSessionInfoProvider _audioRouteChanged:]_block_invoke
-[CSAudioSessionInfoProvider _deregisterAudioSessionNotifications]
sessionInfoQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionInfoQueue
OPP-
PCM-
OPUS_
Ads-
PHS-
-synced
com.apple.CoreSpeech.AudioLogging
+[CSAudioFileManager generateDeviceAudioLogging:speechId:]_block_invoke
FLLR
+[CSAudioFileManager _readDataFromFileHandle:toFileHandle:]
%@%@.wav
%@/%@%@.wav
+[CSAudioFileManager _createAudioFileWriterForAdBlockerWithLoggingDir:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterForOpportuneSpeakListenerWithLoggingDir:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterWithLoggingDir:withLoggingUUID:inputFormat:outputFormat:]
+[CSAudioFileManager _createAudioFileWriterForPHSTrainingWithLoggingDir:inputFormat:outputFormat:]
en_US_POSIX
yyyy_MM_dd-HHmmss.SSS
^%@*
%@(%@)?.wav$
+[CSAudioFileManager cleanupOrphanedGradingFiles]
+[CSAudioFileManager cleanupOrphanedGradingFiles]_block_invoke
v32@?0@"NSString"8@"NSURL"16^B24
attsiri
+[CSAudioFileManager audioFileWriterForAttentiveSiri]
%@.wav
initialState
Tq,N,V_initialState
transitions
T@"NSMutableDictionary",&,N,V_transitions
T@"<CSStateMachineDelegate>",W,N,V_delegate
currentState
Tq,R,N,V_currentState
audioURL : %@, numberOfChannels : %lu, scaleFactor: %f
audioURL
T@"NSURL",R,N,V_audioURL
outASBD
T{AudioStreamBasicDescription=dIIIIIIII},N,V_outASBD
fFile
T^{OpaqueExtAudioFile=},N,V_fFile
scaleFactor
Tf,R,N,V_scaleFactor
CSSmartSiriVolumeEnablePolicy queue
B8@?0
-[CSSmartSiriVolumeEnablePolicy _addSmartSiriVolumeEnabledConditions]_block_invoke
-[CSSiriRestrictionOnLockScreenMonitor _startMonitoringWithQueue:]
-[CSSiriRestrictionOnLockScreenMonitor _stopMonitoring]
-[CSSiriRestrictionOnLockScreenMonitor _checkSiriRestrictedOnLockScreen]
+[CSAudioRecordContext defaultContext]
CSAudioRecordTypeUnspecified
CSAudioRecordTypeHomePress
CSAudioRecordTypeWiredHeadsetButtonPress
CSAudioRecordTypeBluetoothHeadSetButtonPress
CSAudioRecordTypeUIButtonPress
CSAudioRecordTypeServerInvoke
CSAudioRecordTypeVoiceTrigger
CSAudioRecordTypeStark
CSAudioRecordTypeTVRemote
CSAudioRecordTypeRaiseToSpeak
CSAudioRecordTypeHearstDoubleTap
CSAudioRecordTypeHearstVoice
CSAudioRecordTypeJarvis
CSAudioRecordTypePost
CSAudioRecordTypeDictation
CSAudioRecordTypeVoiceTriggerTraining
CSAudioRecordTypeOpportuneSpeaker
CSAudioRecordTypeRemoraVoice
CSAudioRecordTypeUnknown
recordType[%@] deviceId[%@] alwaysUseBuiltInMic[%d]
Tq,N,V_type
T@"NSString",&,N,V_deviceId
TB,N,V_alwaysUseRemoteBuiltInMic
alwaysUseRemoteBuiltInMic
deviceId
-[CSPostBuildInstallService registerPostBuildInstallService]
-[CSPostBuildInstallService registerPostBuildInstallService]_block_invoke
com.apple.cs.postinstall
v16@?0@"NSError"8
CSInitialContinousZeros
CSMaxContinousZeros
CSMidSegmentContinousZeros
start
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
-[CSKeywordAnalyzerQuasar dealloc]
-[CSKeywordAnalyzerQuasar runRecognition]
-[CSKeywordAnalyzerQuasar endAudio]
Td,R,N,V_triggerConfidence
T@"<CSKeywordAnalyzerQuasarScoreDelegate>",W,N,V_delegate
v24@?0@"CSAsset"8@"NSError"16
-[CSVoiceTriggerAssetHandlerMac _getVoiceTriggerAssetFromAssetManager:]_block_invoke
-[CSVoiceTriggerAssetHandlerMac _checkNewAssetAvailablity]_block_invoke
-[CSVoiceTriggerAssetHandlerMac CSVoiceTriggerAssetDownloadMonitor:didInstallNewAsset:]
-[CSVoiceTriggerAssetHandlerMac CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSVoiceTriggerAssetHandlerMac CSFirstUnlockMonitor:didReceiveFirstUnlock:]
cachedAsset
T@"CSAsset",&,V_cachedAsset
[requestHistoricalAudioDataWithHostTime = %@]
[requestHistoricalAudioDataSampleCount = %@]
[useOpportunisticZLL = %@]
[startRecordingHostTime = %llu]
[startRecordingSampleCount = %llu]
[alertBehavior = %llu %llu %llu]
[skipAlertBehavior = %@]
[requireSingleChannelLookup = %@]
[selectedChannel = %u]
TB,N,V_requestHistoricalAudioDataWithHostTime
TB,N,V_requestHistoricalAudioDataSampleCount
TQ,N,V_startRecordingHostTime
TQ,N,V_startRecordingSampleCount
TB,N,V_useOpportunisticZLL
Tq,N,V_startAlertBehavior
Tq,N,V_stopAlertBehavior
Tq,N,V_errorAlertBehavior
TB,N,V_skipAlertBehavior
localizedDescription
T@"NSString",R,N
TB,N,V_requireSingleChannelLookup
TI,N,V_selectedChannel
requestHistoricalAudioDataWithHostTime
requestHistoricalAudioDataSampleCount
startRecordingHostTime
startRecordingSampleCount
useOpportunisticZLL
startAlertBehavior
stopAlertBehavior
errorAlertBehavior
skipAlertBehavior
requireSingleChannelLookup
selectedChannel
triggerScore
effectiveThreshold
recognizerScore
recognizerThresholdOffset
threshold
satThreshold
supportedPhrases
mpvt2ndPassTriggeredPhraseId
phraseId
phraseStr
ndapiScore
2ndChanceThreshold
loggingThreshold
recognizerScoreScaleFactor
tdsrSatCombinedSATThreshold
%lu:%@:ndapi=%f:ctc=%f:comb=%f:thr=%f:maxd=%d:
%lu:%@:ndapi=%f:ctc=%f:comb=%f:thr=%f:maxd=%d:res=%@
phId
TQ,N,V_phId
phStr
T@"NSString",&,N,V_phStr
Tf,N,V_threshold
secondChanceThreshold
Tf,N,V_secondChanceThreshold
Tf,N,V_loggingThreshold
useKwdSpotting
TB,N,V_useKwdSpotting
Tf,N,V_recognizerScoreScaleFactor
Tf,N,V_recognizerThresholdOffset
Tf,N,V_satThreshold
Tf,N,V_tdsrSatCombinedSATThreshold
Tf,N,V_ndapiScore
ctcCheckerScore
Tf,N,V_ctcCheckerScore
combinedScore
Tf,N,V_combinedScore
isMaximized
TB,N,V_isMaximized
ndapiResult
T@"CSKeywordAnalyzerNDAPIResult",&,N,V_ndapiResult
-[CSVTSecondPassScorer initWithAsset:firstPassSource:]
-[CSVTSecondPassScorer updateWithCtcCheckerResults:]
-[CSVTSecondPassScorer getTriggeredPhraseWithSecondChanceEnabled:]
%@, 
triggeredPhrase
T@"CSVTSecondPassPhraseScore",&,N,V_triggeredPhrase
phraseMap
T@"NSDictionary",&,N,V_phraseMap
com.apple.corespeech.corespeechservices
com.apple.corespeech.xpc
+[CSCoreSpeechServices installedVoiceTriggerAssetForLanguageCode:completion:]_block_invoke
reason
CoreSpeechXPC service invalidated
+[CSCoreSpeechServices fetchRemoteVoiceTriggerAssetForLanguageCode:completion:]_block_invoke
+[CSCoreSpeechServices voiceTriggerRTModelForVersion:minorVersion:downloadedModels:preinstalledModels:completion:]
+[CSCoreSpeechServices voiceTriggerRTModelForVersion:minorVersion:downloadedModels:preinstalledModels:completion:]_block_invoke
+[CSCoreSpeechServices voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]_block_invoke
+[CSCoreSpeechServices voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]
+[CSCoreSpeechServices requestUpdatedSATAudio]_block_invoke
v12@?0B8
+[CSCoreSpeechServices getFirstPassRunningMode]_block_invoke
v16@?0q8
VoiceTrigger Asset Change Monitor
T@"<CSVoiceTriggerAssetChangeDelegate>",W,N,V_delegate
com.apple.corespeech.voicetriggerassetchange
-[CSAudioServerCrashMonitor _startMonitoringWithQueue:]
serverState
TQ,N,V_serverState
com.apple.corespeech.corespeechd.xpc
-[CSXPCClient sendXPCClientType]
xpcClientType
-[CSXPCClient prepareAudioProviderWithContext:clientType:error:]
clientType
activateReason
dynamicAttribute
dictationRequestBundleId
deactivateOption
setDuckOthersOption
enableSmartRoutingConsideration
enableMiniDucking
alertType
soundPath
alertStartTime
-[CSXPCClient alertStartTime]
alertBehavior
setMeterEnable
channelNumber
power
-[CSXPCClient peakPowerForChannel:]
-[CSXPCClient averagePowerForChannel:]
-[CSXPCClient audioMetric]
audioMetric
-[CSXPCClient audioStreamWithRequest:streamName:error:]
v24@?0@"CSAudioStream"8@"NSError"16
-[CSXPCClient audioStreamWithRequest:streamName:completion:]
-[CSXPCClient prepareAudioStreamSync:request:error:]
-[CSXPCClient prepareAudioStream:request:completion:]
-[CSXPCClient triggerInfoForContext:completion:]
-[CSXPCClient audioChunkFrom:to:]
-[CSXPCClient audioChunkToEndFrom:]
-[CSXPCClient audioChunkToEndFrom:channelIdx:]
-[CSXPCClient saveRecordingBufferFrom:to:toURL:]
-[CSXPCClient saveRecordingBufferToEndFrom:toURL:]
-[CSXPCClient holdAudioStreamWithDescription:timeout:]
-[CSXPCClient cancelAudioStreamHold:]
-[CSXPCClient isRecording]
sessionID
-[CSXPCClient audioSessionID]
sampleCount
replyHostTime
-[CSXPCClient hostTimeFromSampleCount:]
replySampleCount
-[CSXPCClient sampleCountFromHostTime:]
-[CSXPCClient _handleListenerEvent:]
-[CSXPCClient _handleListenerMessage:]
-[CSXPCClient _handleListenerError:]
-[CSXPCClient _handleAlertProvidingDelegateMessageBody:]
didFinishAlertPlayback
errorDomain
errorCode
-[CSXPCClient _handleSessionProvidingDelegateMessageBody:]
interruptionContext
-[CSXPCClient _handleSessionProvidingDelegateBeginInterruptionWithContext:]
willSetAudioSessionActive
didSetAudioSessionActive
streamHandleIdInvalidationflag
didChangeContextFlag
-[CSXPCClient _handleSessionInfoProvidingDelegateMessageBody:]
notificationInfo
-[CSXPCClient _handleSessionInfoProvidingDelegateInterruptionNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateRouteChangeNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateMediaServicesWereLostNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateMediaServicesWereResetNotification:]
-[CSXPCClient _handleStreamProvidingDelegateMessageBody:]
audioSessionInfoObservers
T@"NSHashTable",&,N,V_audioSessionInfoObservers
TQ,N,V_xpcClientType
audioSessionProvidingDelegate
T@"<CSAudioSessionProvidingDelegate>",W,N,V_audioSessionProvidingDelegate
audioStreamProvidingDelegate
T@"<CSAudioStreamProvidingDelegate>",W,N,V_audioStreamProvidingDelegate
audioAlertProvidingDelegate
T@"<CSAudioAlertProvidingDelegate>",W,N,V_audioAlertProvidingDelegate
T@"<CSXPCClientDelegate>",W,N,V_delegate
UUID
T@"NSString",R,N,V_UUID
CSOpportuneSpeakListnerTestService
com.apple.corespeech.opportunelistner.start
com.apple.corespeech.opportunelistner.stop
A945B95D-69F6-FC77-4FAE-91F50A039CD8
-[CSOpportuneSpeakListnerTestService receiveOpportuneSpeakListenerStart]_block_invoke
-[CSOpportuneSpeakListnerTestService receiveOpportuneSpeakListenerStop]_block_invoke
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:hasRemoteVADAvailable:]
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:hasVADAvailable:]
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:didStopUnexpectly:]
CSTimerMonitor queue
-[CSTimerMonitor _startMonitoringWithQueue:]
-[CSTimerMonitor _stopMonitoring]
CSOpportuneSpeakEventMonitor
-[CSOpportuneSpeakEventMonitor isStreaming]
isOpportuneSpeakListening
TB,N,V_isOpportuneSpeakListening
audioProviderUUID
T@"NSString",&,N,V_audioProviderUUID
audioRecordContext
T@"CSAudioRecordContext",&,N,V_audioRecordContext
token
T@"NSUUID",&,N,V_token
kVTPreferencesPhraseSpotterEnabledDidChangeDarwinNotification
-[CSPhraseSpotterEnabledMonitor _checkPhraseSpotterEnabled]
-[CSPhraseSpotterEnabledMonitor _phraseSpotterEnabledDidChange]
CSVoiceTriggerAssetHandler
-[CSVoiceTriggerAssetHandler getVoiceTriggerAsset:]
/Library/Caches/com.apple.xbs/Sources/CoreSpeech_Sim/CoreSpeech-446.6/CoreSpeech/CSVoiceTriggerAssetHandler.m
Serial CSCATAssetManager queue
-[CSCATAssetManager downloadForManifest:withAssetName:]_block_invoke_2
v32@?0@"NSString"8@"NSString"16@"NSError"24
-[CSCATAssetManager fetchRemoteCATAssetForResource:withNameOfFile:completion:]_block_invoke
CATXPC service invalidated
T@"<CSCATAssetManagerDelegate>",W,N,V_delegate
lastHash
T@"NSData",C
signalEstimate
Ts,N,V_signalEstimate
signalFractional
TC,N,V_signalFractional
CSVoiceTriggerXPCListener
com.apple.corespeech.voicetriggerservice
-[CSVoiceTriggerXPCListener listen]
-[CSVoiceTriggerXPCListener _handleListenerEvent:]
-[CSVoiceTriggerXPCListener _handleListenerError:]
-[CSVoiceTriggerXPCListener _handleNewRemoteConnection:]
voicetrigger.voicetriggerservice
-[CSVoiceTriggerXPCListener CSXPCConnectionReceivedClientError:clientError:client:]_block_invoke
listener
T@"NSObject<OS_xpc_object>",&,N,V_listener
connections
T@"NSMutableArray",&,N,V_connections
-[CSAudioStreamHolding dealloc]
name
T@"NSString",&,N,V_name
smartSiriVolume
noiseLevelChannelBitset
LKFSChannelBitset
DistanceChannelBitset
energyBufferSize
noiseLowerPercentile
noiseUpperPercentile
LKFSLowerPercentile
LKFSUpperPercentile
noiseTimeConstant
noiseMicSensitivityOffset
noiseMicSensitivityOffsetDeviceSimple
LKFSTimeConstant
LKFSMicSensitivityOffset
noiseTTSMappingInputRangeLow
noiseTTSMappingInputRangeHigh
noiseTTSMappingOutputRangeLow
noiseTTSMappingOutputRangeHigh
LKFSTTSMappingInputRangeLow
LKFSTTSMappingInputRangeHigh
LKFSTTSMappingOutputRangeLow
LKFSTTSMappingOutputRangeHigh
userOffsetInputRangeLow
userOffsetInputRangeHigh
userOffsetOutputRangeLow
userOffsetOutputRangeHigh
TTSVolumeLowerLimitDB
TTSVolumeUpperLimitDB
noiseWeight
SSVNoiseLevelChannelBitset
TQ,R,N
SSVLKFSChannelBitset
SSVDistanceChannelBitset
SSVEnergyBufferSize
TI,R,N
SSVNoiseLowerPercentile
SSVNoiseUpperPercentile
SSVLKFSLowerPercentile
SSVLKFSUpperPercentile
SSVNoiseTimeConstant
Tf,R,N
SSVNoiseMicSensitivityOffset
SSVNoiseMicSensitivityOffsetDeviceSimple
SSVLKFSTimeConstant
SSVLKFSMicSensitivityOffset
SSVNoiseTTSMappingInputRangeLow
SSVNoiseTTSMappingInputRangeHigh
SSVNoiseTTSMappingOutputRangeLow
SSVNoiseTTSMappingOutputRangeHigh
SSVLKFSTTSMappingInputRangeLow
SSVLKFSTTSMappingInputRangeHigh
SSVLKFSTTSMappingOutputRangeLow
SSVLKFSTTSMappingOutputRangeHigh
SSVUserOffsetInputRangeLow
SSVUserOffsetInputRangeHigh
SSVUserOffsetOutputRangeLow
SSVUserOffsetOutputRangeHigh
SSVTTSVolumeLowerLimitDB
SSVTTSVolumeUpperLimitDB
SSVNoiseWeight
SSVParameterDirectionary
com.apple.corespeech.audioinjection.xpc
-[CSAudioInjectionXPCListener listen]
-[CSAudioInjectionXPCListener listener:shouldAcceptNewConnection:]
corespeech.audioinjection.xpc
RTModelData
RTModelHash
RTModelLocale
RTModelDigest
RTModelSignature
RTModelCertificate
RT Model for 
 from asset 
CorealisRTModel
CorealisRTModelVersion
dataSize(%d), hash(%@), locale(%@), digest(%@), cert(%@), signature(%@)
supportsSecureCoding
TB,R
modelData
T@"NSData",R,N,V_modelData
modelLocale
T@"NSString",R,N,V_modelLocale
modelHash
T@"NSString",R,N,V_modelHash
digest
T@"NSData",R,N,V_digest
signature
T@"NSData",R,N,V_signature
certificate
T@"NSData",R,N,V_certificate
CSAudioProvider
CSAudioProvider logging
-[CSAudioProvider dealloc]
-[CSAudioProvider setStreamState:]
-[CSAudioProvider setAudioRecorder:]_block_invoke
-[CSAudioProvider setCurrentContext:error:]
-[CSAudioProvider setCurrentContext:error:]_block_invoke
-[CSAudioProvider _audioStreamWithRequest:streamName:error:]
-[CSAudioProvider _prepareAudioStreamSync:request:error:]
-[CSAudioProvider _createCircularBufferIfNeeded]
-[CSAudioProvider _tearDownCircularBufferIfNeeded]
-[CSAudioProvider startAudioStream:option:completion:]
-[CSAudioProvider startAudioStream:option:completion:]_block_invoke
-[CSAudioProvider prepareAudioStreamSync:request:error:]
-[CSAudioProvider prepareAudioStream:request:completion:]
-[CSAudioProvider _startAudioStream:option:completion:]
-[CSAudioProvider _switchToRecordingMode]
-[CSAudioProvider _switchToListeningMode]
-[CSAudioProvider _handleDidStartAudioStreamWithResult:error:]
-[CSAudioProvider _handleDidStopAudioStreamWithReason:]
-[CSAudioProvider _stopAudioStream:option:completion:]
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/CoreSpeech_Sim/CoreSpeech-446.6/CoreSpeech/CSAudioProvider.m
-[CSAudioProvider _saveRecordingBufferFrom:to:toURL:]_block_invoke
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]_block_invoke_2
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]_block_invoke
-[CSAudioProvider cancelAudioStreamHold:]
-[CSAudioProvider cancelAudioStreamHold:]_block_invoke
-[CSAudioProvider prewarmAudioSessionWithError:]
-[CSAudioProvider activateAudioSessionWithReason:dynamicAttribute:bundleID:error:]
-[CSAudioProvider _activateAudioSessionWithReason:error:]
-[CSAudioProvider deactivateAudioSession:error:]
-[CSAudioProvider _deactivateAudioSession:error:]
-[CSAudioProvider setAlertSoundFromURL:forType:]
-[CSAudioProvider playAlertSoundForType:]
-[CSAudioProvider playRecordStartingAlertAndResetEndpointer]
-[CSAudioProvider alertStartTime]
-[CSAudioProvider triggerInfoForContext:completion:]_block_invoke
-[CSAudioProvider _shouldStopRecording]
-[CSAudioProvider audioRecorderStreamHandleIdInvalidated:]
-[CSAudioProvider audioRecorderWillBeDestroyed:]_block_invoke
-[CSAudioProvider _fetchHistoricalAudioAndForwardToStream:remoteVAD:]
-[CSAudioProvider _scheduleAlertFinishTimeout:]
-[CSAudioProvider _scheduleAlertFinishTimeout:]_block_invoke
-[CSAudioProvider _didReceiveFinishStartAlertPlaybackAt:]
-[CSAudioProvider audioRecorderBuiltInAudioStreamInvalidated:error:]_block_invoke
-[CSAudioProvider audioRecorderDisconnected:]
-[CSAudioProvider CSAudioServerCrashMonitorDidReceiveServerCrash:]
-[CSAudioProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]
-[CSAudioProvider _handleAudioSystemFailure]
StreamInit
StreamPrepared
StreamStarting
StreamSteaming
StreamStopping
StreamStoppingWithScheduledStart
unknown(%tu)
Recording transaction
-[CSAudioProvider _releaseRecordingTransactionIfNeeded]
%@-%@
-[CSAudioProvider _scheduleDidStartRecordingDelegateWatchDog]
-[CSAudioProvider _schduleDidStartRecordingDelegateWatchDogWithToken:]
-[CSAudioProvider _clearDidStartRecordingDelegateWatchDog]
-[CSAudioProvider _scheduleDidStopRecordingDelegateWatchDog]
-[CSAudioProvider _scheduleDidStopRecordingDelegateWatchDog:]
-[CSAudioProvider _clearDidStopRecordingDelegateWatchDog]
recordQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordQueue
loggingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_loggingQueue
streamState
TQ,N,V_streamState
startPendingStreams
T@"NSHashTable",&,N,V_startPendingStreams
startPendingOnStoppingStreams
T@"NSHashTable",&,N,V_startPendingOnStoppingStreams
alertPlaybackFinishWaitingStreams
T@"NSHashTable",&,N,V_alertPlaybackFinishWaitingStreams
streams
T@"NSHashTable",&,N,V_streams
stopPendingStreams
T@"NSHashTable",&,N,V_stopPendingStreams
pendingStartCompletions
T@"NSMutableArray",&,N,V_pendingStartCompletions
alertPlaybackFinishWaitingCompletions
T@"NSMutableArray",&,N,V_alertPlaybackFinishWaitingCompletions
pendingStopCompletions
T@"NSMutableArray",&,N,V_pendingStopCompletions
startPendingOnStoppingStreamToCompletionDict
T@"NSMutableDictionary",&,N,V_startPendingOnStoppingStreamToCompletionDict
providerDelegate
T@"<CSAudioProviderDelegate>",W,N,V_providerDelegate
sessionDelegate
T@"<CSAudioSessionProvidingDelegate>",W,N,V_sessionDelegate
streamHolders
T@"NSMutableArray",&,N,V_streamHolders
historicalBufferRequestStreams
T@"NSHashTable",&,N,V_historicalBufferRequestStreams
circularBuffer
T@"CSAudioCircularBuffer",&,N,V_circularBuffer
alertDelegate
T@"<CSAudioAlertProvidingDelegate>",W,N,V_alertDelegate
lastAudioRecorderContext
T@"CSAudioRecordContext",&,N,V_lastAudioRecorderContext
audioSystemRecovering
TB,N,V_audioSystemRecovering
audioPreprocessor
T@"CSAudioPreprocessor",&,N,V_audioPreprocessor
recordingTransaction
T@"CSOSTransaction",&,N,V_recordingTransaction
recordingWillStartGroup
T@"NSObject<OS_dispatch_group>",&,N,V_recordingWillStartGroup
waitingForAlertFinish
TB,N,V_waitingForAlertFinish
audioStreamHandleId
TQ,N,V_audioStreamHandleId
alertPlaybackFinishTimeoutToken
T@"NSUUID",&,N,V_alertPlaybackFinishTimeoutToken
startRecordingWatchDogToken
T@"NSUUID",&,N,V_startRecordingWatchDogToken
stopRecordingWatchDogToken
T@"NSUUID",&,N,V_stopRecordingWatchDogToken
circularBufferStartHostTime
TQ,N,V_circularBufferStartHostTime
circularBufferStartSampleCount
TQ,N,V_circularBufferStartSampleCount
com.apple.siri.SiriDebug.SpeakerVoiceGradingTrigger
com.apple.siri.SiriDebug.RemoteNearMissGradingTrigger
com.apple.siri.SiriDebug.VoiceProfileAddedTrigger
com.apple.siri.SiriDebug.VoiceProfileSyncTrigger
com.apple.siri.SiriDebug
+[CSSiriDebugConnection launchSiriDebugAppWithMessage:]_block_invoke
v24@?0@"AFSiriResponse"8@"NSError"16
set option : allowVoiceTriggerAssetsDownload ? %@;           allowEndpointAssetDownload ? %@;           allowLanguageDetectorAssetDownload ? %@;           allowAdBlockerAssetDownload ? %@;           allowSpeakerRecognitionAssetDownload ? %@
allowVoiceTriggerAssetDownloading
TB,N,V_allowVoiceTriggerAssetDownloading
allowEndpointAssetDownloading
TB,N,V_allowEndpointAssetDownloading
allowLanguageDetectorAssetDownloading
TB,N,V_allowLanguageDetectorAssetDownloading
allowAdBlockerAssetDownloading
TB,N,V_allowAdBlockerAssetDownloading
allowSpeakerRecognitionAssetDownloading
TB,N,V_allowSpeakerRecognitionAssetDownloading
Dispose Log Queue
+[CSUtils(Directory) removeLogFilesInDirectory:matchingPattern:beforeDays:]_block_invoke
v24@?0@"NSArray"8^@16
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke_2
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke
Unable to get %@ for file at %@: %@
q24@?0@"NSURL"8@"NSURL"16
B24@?0@"NSURL"8@"NSDictionary"16
+[CSUtils(Directory) _contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:]
T@"<CSVoiceTriggerDelegate>",W,N,V_delegate
-[CSVoiceTriggerEnabledPolicyNonAOP _addVoiceTriggerEnabledConditions]_block_invoke
T@"<CSBiometricMatchMonitorDelegate>",W,N,V_delegate
-[CSSpeechDetectionDevicePresentMonitor handleSpeechDetectionVADPresentChange:]
-[CSSpeechDetectionDevicePresentMonitor _systemControllerDied:]
best_phrase
early_warning
is_rescoring
samples_at_fire
start_sample_count
TQ,N,V_phraseId
bestPhrase
TQ,N,V_bestPhrase
isEarlyWarning
TB,N,V_isEarlyWarning
isRescoring
TB,N,V_isRescoring
samplesAtFire
TQ,N,V_samplesAtFire
TQ,N,V_startSampleCount
-[CSKeywordAnalyzerNDAPI initWithConfigPath:resourcePath:]
-[CSKeywordAnalyzerNDAPI _setStartAnalyzeTime:]
threshold_normal
-[CSKeywordAnalyzerNDAPI getThreshold]
threshold_logging
-[CSKeywordAnalyzerNDAPI getLoggingThreshold]
threshold_reject_logging
-[CSKeywordAnalyzerNDAPI getRejectLoggingThreshold]
activePhraseId
TI,N,V_activePhraseId
T@"<CSKeywordAnalyzerNDAPIScoreDelegate>",W,N,V_delegate
rtblobs
blob
majorVersion
minorVersion
cert
rtlocalemap
jarvislocalemap
-[CSAsset(RTModel) createRTModelWithLocale:]
-[CSAsset(RTModel) latestHearstRTModelForLocale:]
-[CSAsset(RTModel) hearstRTModelWithMajorVersion:minorVersion:locale:]
-[CSAsset(RTModel) localeMapWithName:]
%02x
-[CSGestureMonitor isTriggerHandheld]
wakeGestureTimestamp
TQ,N,V_wakeGestureTimestamp
dismissalTimestamp
TQ,N,V_dismissalTimestamp
CSAudioRouteChangeMonitorImpl queue
-[CSAudioRouteChangeMonitorImpl preferredExternalRouteDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImpl carPlayAudioRouteDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImpl _stopMonitoring]
-[CSAudioRouteChangeMonitorImpl _notifyHearstConnectionState:]
-[CSAudioRouteChangeMonitorImpl _notifyJarvisConnectionState:]
languageCode
[streamHandleId = %d]
[startHostTime = %llu]
[startAlert = %d]
[stopAlert = %d]
[stopOnErrorAlert = %d]
[skipAlert = %@]
VoiceControllerCreationQueue
-[CSAudioRecorder initWithQueue:error:]
-[CSAudioRecorder willDestroy]
-[CSAudioRecorder dealloc]
-[CSAudioRecorder _destroyVoiceController]
-[CSAudioRecorder _voiceControllerWithError:]_block_invoke
-[CSAudioRecorder _voiceControllerWithError:]
-[CSAudioRecorder setContext:error:]
-[CSAudioRecorder setCurrentContext:streamHandleId:error:]
-[CSAudioRecorder prepareAudioStreamRecord:streamHandleId:error:]
-[CSAudioRecorder _startAudioStreamForAudioInjection]
-[CSAudioRecorder startAudioStreamWithOption:streamHandleId:error:]
-[CSAudioRecorder stopAudioStreamWithStreamHandleId:error:]
-[CSAudioRecorder isSessionCurrentlyActivated]
Builtin Microphone
-[CSAudioRecorder recordingSampleRateWithStreamHandleId:]
-[CSAudioRecorder isNarrowBandWithStreamHandleId:]
-[CSAudioRecorder prewarmAudioSessionWithStreamHandleId:error:]
-[CSAudioRecorder setRecordMode:streamHandleId:error:]
-[CSAudioRecorder activateAudioSessionWithReason:streamHandleId:error:]
-[CSAudioRecorder deactivateAudioSession:error:]
+[CSAudioRecorder createSharedAudioSession]
-[CSAudioRecorder enableSmartRoutingConsiderationForStream:enable:]
-[CSAudioRecorder setDuckOthersOption:]
-[CSAudioRecorder enableMiniDucking:]
Enable
Disable
-[CSAudioRecorder configureAlertBehavior:audioStreamHandleId:]
-[CSAudioRecorder voiceTriggerInfo]
en-US
-[CSAudioRecorder _updateLanguageCodeForRemoteVTEIResult:]
useRemoteBuiltInMic
-[CSAudioRecorder _processAudioBuffer:audioStreamHandleId:]
-[CSAudioRecorder _compensateChannelDataIfNeeded:receivedNumChannels:]
-[CSAudioRecorder playRecordStartingAlertAndResetEndpointerFromStream:]
-[CSAudioRecorder playAlertSoundForType:]
-[CSAudioRecorder voiceControllerDidStartRecording:forStream:successfully:error:]
-[CSAudioRecorder voiceControllerAudioCallback:forStream:buffer:]
-[CSAudioRecorder voiceControllerDidStopRecording:forStream:forReason:]
-[CSAudioRecorder voiceControllerStreamInvalidated:forStream:]
-[CSAudioRecorder voiceControllerRecordHardwareConfigurationDidChange:toConfiguration:]
-[CSAudioRecorder voiceControllerDidFinishAlertPlayback:ofType:error:]
-[CSAudioRecorder voiceControllerEncoderErrorDidOccur:error:]
-[CSAudioRecorder voiceControllerBeginRecordInterruption:]
-[CSAudioRecorder voiceControllerBeginRecordInterruption:withContext:]
-[CSAudioRecorder voiceControllerEndRecordInterruption:]
-[CSAudioRecorder voiceControllerWillSetAudioSessionActive:willActivate:]
-[CSAudioRecorder voiceControllerDidSetAudioSessionActive:isActivated:]
-[CSAudioRecorder voiceControllerMediaServicesWereLost:]
-[CSAudioRecorder voiceControllerMediaServicesWereReset:]
-[CSAudioRecorder _deinterleaveBufferIfNeeded:force:]
-[CSAudioRecorder _createDeInterleaverIfNeeded]
-[CSAudioRecorder _getRecordSettingsWithRequest:]
voiceControllerCreationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_voiceControllerCreationQueue
crashEventDelegate
T@"<CSAudioServerCrashEventProvidingDelegate>",W,N,V_crashEventDelegate
sessionEventDelegate
T@"<CSAudioSessionEventProvidingDelegate>",W,N,V_sessionEventDelegate
duckOthersOption
TB,N
RemoteVAD Align Queue
-[CSOpportuneSpeakListener startListenWithOption:completion:]
-[CSOpportuneSpeakListener _startRequestWithCompletion:]_block_invoke
-[CSOpportuneSpeakListener _startRequestWithCompletion:]
-[CSOpportuneSpeakListener stopListenWithStateReset:completion:]_block_invoke
-[CSOpportuneSpeakListener stopListenWithStateReset:completion:]
-[CSOpportuneSpeakListener audioStreamProvider:audioBufferAvailable:]
-[CSOpportuneSpeakListener spgEndpointAnalyzer:hasSilenceScoreEstimate:]
spgEndpointAnalyzer
T@"CSSPGEndpointAnalyzer",&,N,V_spgEndpointAnalyzer
remoteVADSPGRatio
Ti,N,V_remoteVADSPGRatio
audioStreamProvider
T@"<CSAudioStreamProviding>",&,N,V_audioStreamProvider
audioSessionProvider
T@"<CSAudioSessionProviding>",&,N,V_audioSessionProvider
latestContext
T@"CSAudioRecordContext",&,N,V_latestContext
isMediaPlayingNow
TB,V_isMediaPlayingNow
remoteVADAlignBuffer
T@"NSMutableArray",&,N,V_remoteVADAlignBuffer
remoteVADAlignCount
TQ,N,V_remoteVADAlignCount
alignBufferQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_alignBufferQueue
audioFileWriter
T@"CSPlainAudioFileWriter",&,N,V_audioFileWriter
T@"<CSOpportuneSpeakListenerDelegate>",W,N,V_delegate
-[NSData(XPCObject) _cs_initWithXPCObject:]
-[CSSiriEnabledMonitor _startMonitoringWithQueue:]
-[CSSiriEnabledMonitor _stopMonitoring]
_AssistantPrefsChangedNotification
CSBluetoothManager Queue
-[CSBluetoothManager getBTLocalDeviceWithCompletion:]
-[CSBluetoothManager getBTLocalDeviceWithCompletion:]_block_invoke
v16@?0^{BTLocalDeviceImpl=}8
-[CSBluetoothManager _getWirelessSplitterInfoFromLocalDevice:]
-[CSBluetoothManager _detachBluetoothSession]
-[CSBluetoothManager _attachBluetoothSession]
CSBluetoothManager
-[CSBluetoothManager _sessionAttached:result:]
-[CSBluetoothManager _sessionDetached:]
-[CSBluetoothManager _sessionTerminated:]
-[CSBluetoothManager _setUpLocalDevice]
bluetoothSession
T^{BTSessionImpl=},N,V_bluetoothSession
isAttachingBluetoothSession
TB,N,V_isAttachingBluetoothSession
localDevice
T^{BTLocalDeviceImpl=},N,V_localDevice
pairedDeviceAddresses
T@"NSArray",&,N,V_pairedDeviceAddresses
connectedDeviceAddresses
T@"NSArray",&,N,V_connectedDeviceAddresses
bluetoothSessionSetupGroup
T@"NSObject<OS_dispatch_group>",&,N,V_bluetoothSessionSetupGroup
CSActivationXPCListener
-[CSActivationXPCListener listen]
-[CSActivationXPCListener _handleListenerEvent:]
-[CSActivationXPCListener _handleListenerError:]
-[CSActivationXPCListener _handleNewRemoteConnection:]
corespeechd.activation
-[CSActivationXPCListener CSXPCConnectionReceivedClientError:clientError:client:]_block_invoke
-[CSAudioSessionInfoProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioSessionInfoProvidingProxy _handleSessionIDRequestMessage:messageBody:client:]
audioSessionInfoProvider
T@"<CSAudioSessionInfoProviding>",W,N,V_audioSessionInfoProvider
+[CSConnectionListener(SmartSiriVolume) createSmartSiriVolumeListener]
com.apple.corespeech.corespeechd.ssv.service
+[CSConnectionListener(SmartSiriVolume) createSmartSiriVolumeListener]_block_invoke
-[CSAssetController init]
Serial CSAssetController queue
V1 Assets Clean-up queue
-[CSAssetController _cleanUpMobileAssetV1Directory]
-[CSAssetController assetOfType:language:]
-[CSAssetController allInstalledAssetsOfType:language:]
q24@?0@"MAAsset"8@"MAAsset"16
v32@?0@"MAAsset"8Q16^B24
-[CSAssetController assetOfType:language:completion:]
-[CSAssetController installedAssetOfType:language:]
-[CSAssetController installedAssetOfType:language:completion:]
v24@?0@"MAAsset"8@"NSError"16
-[CSAssetController _installedAssetOfType:withLanguage:]
-[CSAssetController _installedAssetOfType:withLanguage:completion:]_block_invoke
-[CSAssetController _findLatestInstalledAsset:]
-[CSAssetController _assetQueryForAssetType:]
-[CSAssetController _runAssetQuery:completion:]
-[CSAssetController _runAssetQuery:completion:]_block_invoke
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]_block_invoke
v20@?0@"NSError"8B16
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]_block_invoke_2
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]_block_invoke
-[CSAssetController _downloadAssetCatalogForAssetType:complete:]_block_invoke
-[CSAssetController _updateFromRemoteToLocalAssets:forAssetType:completion:]
-[CSAssetController _downloadAsset:withComplete:]
v16@?0d8
-[CSAssetController _downloadAsset:withComplete:]_block_invoke
-[CSAssetController _startDownloadingAsset:progress:completion:]
v16@?0@"MAProgressNotification"8
assetsMigrationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetsMigrationQueue
csAssetsDictionary
T@"NSDictionary",&,N,V_csAssetsDictionary
T@"NSMutableDictionary",&,N,V_observers
+[CSAssetController(Utils) addKeyValuePairForQuery:assetType:]
com.apple.MobileAsset.VoiceTriggerAssets
com.apple.MobileAsset.VoiceTriggerAssetsIPad
com.apple.MobileAsset.VoiceTriggerAssetsWatch
com.apple.MobileAsset.VoiceTriggerAssetsMarsh
com.apple.MobileAsset.VoiceTriggerAssetsMac
com.apple.MobileAsset.SpeechEndpointAssetsWatch
com.apple.MobileAsset.LanguageDetectorAssets
com.apple.MobileAsset.AdBlockerAssets
com.apple.MobileAsset.SpeakerRecognitionAssets
voic
carplay
hearst
raisetospeak
auto
unknown
CSAudioInjectionXPC Queue
-[CSAudioInjectionXPC createAudioInjectionDeviceWithType:deviceName:deviceID:productID:completion:]
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:completion:]
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:completion:]_block_invoke
v16@?0Q8
-[CSAudioInjectionXPC connectDeviceWithUUID:completion:]
-[CSAudioInjectionXPC disconnectDeviceWithUUID:completion:]
-[CSAudioInjectionXPC disconnectDeviceWithUUID:completion:]_block_invoke
-[CSAudioInjectionXPC primaryInputDeviceUUIDWithCompletion:]
-[NSNumber(XPCObject) _cs_initWithXPCObject:]
-[NSNumber(XPCObject) _cs_xpcObject]
sampleFed
TQ,N,V_sampleFed
earlyWarning
TB,N,V_earlyWarning
CSActivationEventNotificationHandler Queue
-[CSActivationEventNotificationHandler setDelegate:forType:]_block_invoke
-[CSActivationEventNotificationHandler notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotificationHandler _notifyActivationEvent:completion:]
-[CSActivationEventNotificationHandler _notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotificationHandler _startMonitoring]
-[CSActivationEventNotificationHandler _stopMonitoring]
-[CSActivationEventNotificationHandler _didReceiveAOPFirstPassTrigger:completion:]
-[CSActivationEventNotificationHandler _didReceiveAOPFirstPassTrigger:completion:]_block_invoke
delegates
T@"NSMapTable",&,N,V_delegates
pendingActivationEvent
T@"CSActivationEvent",&,N,V_pendingActivationEvent
pendingCompletion
T@?,C,N,V_pendingCompletion
triggerStartSampleCount
isMediaPlaying
noiseLevelDB
musicLevelDB
musicPlaybackVolumeDB
alarmVolume
finalTTSVolume
isAlarmPlaying
isTimerPlaying
isLKFSProcessPaused
removeVoiceTriggerSamples
-[CSSmartSiriVolume initWithSamplingRate:asset:]
-[CSSmartSiriVolume startSmartSiriVolume]_block_invoke
RUNNING
PAUSED
v20@?0B8Q12
-[CSSmartSiriVolume _startListenPolling]
-[CSSmartSiriVolume _startListenPollingWithInterval:completion:]
-[CSSmartSiriVolume _startListenPollingWithInterval:completion:]_block_invoke
-[CSSmartSiriVolume _startListenWithCompletion:]_block_invoke_2
-[CSSmartSiriVolume _startListenWithCompletion:]_block_invoke
-[CSSmartSiriVolume _startListenWithCompletion:]
-[CSSmartSiriVolume _stopListening]
-[CSSmartSiriVolume _stopListening]_block_invoke
-[CSSmartSiriVolume initializeMediaPlayingState]_block_invoke
playing
NOT playing
-[CSSmartSiriVolume initializeMediaPlayingState]
-[CSSmartSiriVolume initializeAlarmState]_block_invoke
firing
NOT firing
-[CSSmartSiriVolume initializeTimerState]_block_invoke
-[CSSmartSiriVolume _setAsset:]
-[CSSmartSiriVolume _processAudioChunk:soundType:]
-[CSSmartSiriVolume estimateSoundLevelbySoundType:]_block_invoke
-[CSSmartSiriVolume _pauseSSVProcessing]_block_invoke
-[CSSmartSiriVolume _resumeSSVProcessing]_block_invoke
-[CSSmartSiriVolume audioStreamProvider:audioBufferAvailable:]_block_invoke
-[CSSmartSiriVolume audioStreamProvider:didStopStreamUnexpectly:]
-[CSSmartSiriVolume didDetectKeywordWithResult:]
-[CSSmartSiriVolume didDetectKeywordWithResult:]_block_invoke
-[CSSmartSiriVolume estimatedTTSVolumeForNoiseLevelAndLKFS:LKFS:]_block_invoke
-[CSSmartSiriVolume _combineResultsWithOptimalFromNoise:andOptimalFromLkfs:withUserOffset:]
-[CSSmartSiriVolume CSMediaPlayingMonitor:didReceiveMediaPlayingChanged:]_block_invoke
-[CSSmartSiriVolume didReceiveAlarmChanged:]_block_invoke
-[CSSmartSiriVolume didReceiveTimerChanged:]_block_invoke
-[CSSmartSiriVolume CSSiriEnabledMonitor:didReceiveEnabled:]
-[CSSmartSiriVolume CSAudioServerCrashMonitorDidReceiveServerRestart:]
-[CSSmartSiriVolume siriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:withEventUUID:]_block_invoke
-[CSSmartSiriVolume _setStartAnalyzeTime:]
-[CSSmartSiriVolume getVolumeForTTSType:withOverrideMediaVolume:WithRequestTime:]
listenPollingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_listenPollingTimer
listenPollingTimerCount
Tq,N,V_listenPollingTimerCount
CSAudioInjectionProvider
ATVRemoteInput
BuiltInMic
-[CSAudioInjectionProvider dealloc]
-[CSAudioInjectionProvider stop]
-[CSAudioInjectionProvider startAudioStreamWithOption:streamHandleId:error:]
-[CSAudioInjectionProvider stopAudioStreamWithStreamHandleId:error:]
BuiltInSpeaker
uuid
T@"NSUUID",&,N,V_uuid
connectedDevices
T@"NSMutableArray",&,N,V_connectedDevices
builtInDevice
T@"CSAudioInjectionDevice",&,N,V_builtInDevice
bundleTvRemote
T@"CSAudioInjectionDevice",&,N,V_bundleTvRemote
builtInAudioInjectionEngine
T@"CSAudioInjectionEngine",&,N,V_builtInAudioInjectionEngine
audioInjectionEngines
T@"NSMutableDictionary",&,N,V_audioInjectionEngines
latestPluginStreamId
TQ,N,V_latestPluginStreamId
didStartDelayInSeconds
Tf,N,V_didStartDelayInSeconds
+[CSUtils(Compression) extractArchiveFromDirectory:toDir:]
-[CSListeningEnabledPolicyWatch _addListeningEnabledConditions]_block_invoke
+[CSUtils(LanguageCode) getSiriLanguageWithFallback:]
CSAudioFileReader Queue
-[CSAudioFileReader initWithURL:]
-[CSAudioFileReader prepareRecording:]
-[CSAudioFileReader startRecording]
-[CSAudioFileReader _readAudioBufferAndFeed]
-[CSAudioFileReader stopRecording]
T@"<CSAudioFileReaderDelegate>",W,N,V_delegate
RMSScore
Td,N,V_RMSScore
lastSampleCount
TQ,N,V_lastSampleCount
-[CSShadowMicScoreCreator calculateShadowMicScore]
rmsSamplesForEntireAudio
T@"NSMutableArray",&,N,V_rmsSamplesForEntireAudio
audioBuffer
T@"NSMutableData",&,N,V_audioBuffer
speechVoiceLevel
Td,N,V_speechVoiceLevel
numberOfVoicingFrames
TQ,N,V_numberOfVoicingFrames
numberOfTotalFramesETFT
Tq,N,V_numberOfTotalFramesETFT
bestStartDetectSample
TQ,N,V_bestStartDetectSample
bestEarlyDetectSample
TQ,N,V_bestEarlyDetectSample
bestEndDetectSample
TQ,N,V_bestEndDetectSample
shadowMicScore
Td,N,V_shadowMicScore
triggerEndMachTime
-[CSMyriadSelfTriggerCoordinator selfTriggerDetector:didDetectSelfTrigger:]
com.apple.siri.corespeech.selftrigger
T@"<CSMyriadSelfTriggerCoordinatorDelegate>",W,N,V_delegate
beepLocation
statsComputed
beepPower
signalPower
originalPower
absMaxVal
above95pcOfMax
totalInputSamples
totalOutputSamples
jbl_begin.bin
-[CSBeepCanceller init]
-[CSBeepCanceller willBeep]
-[CSBeepCanceller reset]
T@"<CSBeepCancellerDelegate>",W,N,V_delegate
metrics
CSAudioInjectionBuiltInEngine
-[CSAudioInjectionBuiltInEngine dealloc]
SampleCount
HostTime
-[CSAudioInjectionBuiltInEngine startAudioStreamWithOption:]_block_invoke
trigger-time
T@"<CSAudioInjectionEngineDelegate>",W,N,V_delegate
keywordAnalyzer
T@"CSKeywordAnalyzerNDEAPI",&,N,V_keywordAnalyzer
lastForwardedSampleCount
TQ,N,V_lastForwardedSampleCount
hostTimeBuffer
T@"NSMutableArray",&,N,V_hostTimeBuffer
voiceTriggerEnabled
TB,N,V_voiceTriggerEnabled
connectedDevice
T@"CSAudioInjectionDevice",W,N,V_connectedDevice
isForwarding
TB,N,V_isForwarding
-[CSSpringboardStartMonitor _startMonitoringWithQueue:]
-[CSSpringboardStartMonitor _stopMonitoring]
-[CSSpringboardStartMonitor _checkSpringBoardStarted]
com.apple.springboard.finishedstartup
speakerRecognition
combinationWeight
implicitProfileThreshold
implicitProfileDeltaThreshold
implicitVTThreshold
pruningExplicitSATThreshold
pruningExplicitPSRThreshold
pruningSATThreshold
pruningPSRThreshold
numPruningRetentionUtt
maxEnrollmentUtterances
pruningCookie
configFileRecognizer
configFileNDAPI
voiceTriggerSecondPassAOP
implicit_training_enabled
multiUserHighScoreThreshold
multiUserLowScoreThreshold
multiUserConfidentScoreThreshold
multiUserDeltaScoreThreshold
recognizer.json
config.txt
containsSpeakerRecognitionCategory
satScoreThreshold
Tq,R,N
psrCombinationWeight
satImplicitProfileThreshold
satImplicitProfileDeltaThreshold
satVTImplicitThreshold
satImplicitTrainingEnabled
pruningExplicitUttThresholdSAT
pruningExplicitUttThresholdPSR
pruningThresholdSAT
pruningThresholdPSR
pruningNumRetentionUtterance
maxAllowedEnrollmentUtterances
voiceProfilePruningCookie
keywordDetectorNDAPIConfigFilePath
keywordDetectorQuasarConfigFilePath
CSActivationEventNotifier
-[CSActivationEventNotifier notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotifier notifyActivationEvent:deviceId:activationInfo:completion:]_block_invoke
-[CSActivationEventNotifier _createXPCClientConnection]
CSAlarmMonitor queue
-[CSAlarmMonitor _startMonitoringWithQueue:]
-[CSAlarmMonitor _stopMonitoring]
-[CSSmartSiriVolumeServiceProxy init]
overrideMediaVolume
SSV Manager returned estimate as nil
-[CSSmartSiriVolumeServiceProxy getVolumeForTTSType:withContext:reply:]
SmartSiriVolume not supported on this device type. smartSiriVolume : %p
ssvManager
T@"CSSmartSiriVolumeManager",&,N,V_ssvManager
-[CSFirstUnlockMonitor _stopMonitoring]
-[NSString(XPCObject) _cs_initWithXPCObject:]
-[NSArray(XPCObject) _cs_initWithXPCObject:]
-[NSArray(XPCObject) _cs_initWithXPCObject:]_block_invoke
B24@?0Q8@"NSObject<OS_xpc_object>"16
-[NSArray(XPCObject) _cs_xpcObject]_block_invoke
v32@?0@8Q16^B24
-[CSAudioChunkForTV initWithXPCObject:]
T@"NSArray",&,N,V_packets
Tf,N,V_avgPower
Tf,N,V_peakPower
TQ,N,V_timeStamp
TI,N,V_numChannels
TI,N,V_audioFormat
TQ,N,V_streamHandleID
avgPower
peakPower
timeStamp
audioFormat
streamHandleID
packets
route
isRemoteDevice
remoteDeviceUID
remoteDeviceProductIdentifier
%@ {route = %@, isRemoteDevice = %d, remoteDeviceUID = %@, remoteDeviceProductIdentifier = %@}
T@"NSString",R,C,N,V_route
TB,R,N,V_isRemoteDevice
T@"NSUUID",R,C,N,V_remoteDeviceUID
T@"NSString",R,C,N,V_remoteDeviceProductIdentifier
CSCommandControlBehaviorMonitor
-[CSCommandControlBehaviorMonitor notifyWillStartStreamWithContext:option:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyDidStartStreamWithContext:successfully:option:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyWillStopStream:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyDidStopStream:]_block_invoke
v16@?0@"<AFMyriadContextMutating>"8
-[CSSiriLauncher notifyBuiltInVoiceTrigger:myriadPHash:completion:]_block_invoke
-[CSSiriLauncher notifyCarPlayVoiceTrigger:deviceId:myriadPHash:completion:]_block_invoke_2
-[CSSiriLauncher notifyCarPlayVoiceTrigger:deviceId:myriadPHash:completion:]_block_invoke
-[CSSiriLauncher notifyBluetoothDeviceVoiceTrigger:deviceId:completion:]_block_invoke
-[CSSiriLauncher deactivateSiriActivationConnectionWithReason:withOptions:]_block_invoke
v16@?0@"AFSiriActivationResult"8
-[CSPlainAudioFileWriter initWithURL:inputFormat:outputFormat:]
-[CSPlainAudioFileWriter addSamples:numSamples:]
json
productType
productVersion
buildVersion
-[CSPlainAudioFileWriter addContextKey:withContext:]
-[CSPlainAudioFileWriter addContextKey:fromMetaFile:]
+[CSPlainAudioFileWriter saveAudioChunck:toURL:]
fileURL
T@"NSURL",R,N,V_fileURL
-[CSAudioStream initWithAudioStreamProvider:streamName:streamRequest:]
-[CSAudioStream dealloc]
-[CSAudioStream startAudioStreamWithOption:completion:]
-[CSAudioStream isStreaming]
-[CSAudioStream audioStreamProvider:didStopStreamUnexpectly:]
-[CSAudioStream audioStreamProvider:didHardwareConfigurationChange:]
streaming
TB,V_streaming
streamingUUID
T@"NSUUID",&,V_streamingUUID
streamProvider
T@"<CSAudioStreamProviding>",W,N,V_streamProvider
T@"<CSAudioStreamProvidingDelegate>",W,N,V_delegate
scheduledFutureSample
TB,N,V_scheduledFutureSample
streamRequest
T@"CSAudioStreamRequest",&,N,V_streamRequest
startStreamOption
T@"CSAudioStartStreamOption",&,N,V_startStreamOption
-[CSVoiceTriggerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetMetaUpdateMonitor _stopMonitoring]
-[CSVoiceTriggerAssetMetaUpdateMonitor _didReceiveNewVoiceTriggerAssetMetaData]
com.apple.MobileAsset.VoiceTriggerAssets.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsIPad.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.cached-metadata-updated
-[CSAudioPreprocessor resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:]
-[CSAudioPreprocessor flush]
-[CSAudioPreprocessor _isHeadphoneDeviceWithRecordRoute:playbackRoute:]
sampleRate
Tf,N,V_sampleRate
upsampler
T@"CSAudioSampleRateConverter",&,N,V_upsampler
zeroFilter
T@"CSVoiceTriggerAwareZeroFilter",&,N,V_zeroFilter
beepCanceller
T@"CSBeepCanceller",&,N,V_beepCanceller
zeroCounter
T@"CSAudioZeroCounter",&,N,V_zeroCounter
T@"<CSAudioPreprocessorDelegate>",W,N,V_delegate
CSAudioRouteChangeMonitorImplWatch queue
-[CSAudioRouteChangeMonitorImplWatch activeAudioRouteDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImplWatch _stopMonitoring]
-[CSAudioRouteChangeMonitorImplWatch _notifyHearstConnectionState:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeechEndpointAssetMetaUpdateMonitor _didReceiveNewSpeechEndpointAssetMetaData]
com.apple.MobileAsset.SpeechEndpointAssetsWatch.ma.cached-metadata-updated
com.apple.corespeech
Framework
Logs/CrashReporter/CoreSpeech/audio/
%@/%@%@%@
::: Initializing CoreSpeech logging...
yyyyMMdd-HHmmss
CSLogInitIfNeeded_block_invoke
gitrelno_unavailable
_CSGetOrCreateAudioLogDirectory
/tmp
corespeechd speaker xpc connection client queue
-[CSVoiceIdXPCConnection _handleClientEvent:]
-[CSVoiceIdXPCConnection _handleClientMessage:client:]
-[CSVoiceIdXPCConnection _handleClientError:client:]
connection
T@"NSObject<OS_xpc_object>",&,N,V_connection
-[CSAssetManagerEnablePolicy _addAssetManagerEnabledConditions]_block_invoke
CSXPCListener
-[CSXPCListener listen]
-[CSXPCListener _handleListenerEvent:]
-[CSXPCListener _handleListenerError:]
-[CSXPCListener _handleNewRemoteConnection:]
corespeech.corespeechd.xpc
-[CSXPCListener CSXPCConnectionReceivedClientError:clientError:client:]_block_invoke
configVersion
firstPassTriggerSource
stop
com.apple.corespeech.aopFirstPassTriggerWakeupLatency
latency
device
@"NSDictionary"8@?0
com.apple.corespeech.SecondPassWakeUp
modelVersion
firstPassSource
triggerAPWakeup
-[CSVoiceTriggerStatAggregator logFalseWakeUp:]
-[CSVoiceTriggerStatAggregator logTriggerLengthSampleCountStatistics:withFirstPassDeterministicTriggerLengthSampleCount:]
com.apple.exprAOPSecondPass
newTriggerLengthSampleCount
oldTriggerLengthSampleCount
sampleCountDelta
com.apple.corespeech.AudioZeroRun
duration
numFalseWakeUp
TQ,N,V_numFalseWakeUp
lastAggTimeFalseWakeUp
TQ,N,V_lastAggTimeFalseWakeUp
CSAudioInjectionTvRemoteEngine
opusEncoder
T@"CSAudioConverter",&,N,V_opusEncoder
com.apple.coreaudio.BorealisToggled
-[CSVoiceTriggerEnabledMonitor _startMonitoringWithQueue:]_block_invoke
-[CSVoiceTriggerEnabledMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerEnabledMonitor _stopMonitoring]
-[CSVoiceTriggerEnabledMonitor _checkVoiceTriggerEnabled]
announcemessage
estimatedTTSVolume
debugLogPath
T@"NSString",R,N,V_debugLogPath
volumeEstimate
Tf,R,N,V_volumeEstimate
-[CSAlwaysOnProcessorStateMonitor _didReceiveAOPListeningStateChange:]
com.apple.
com.apple.private.
-[CSAudioTimeConversionProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioTimeConversionProvidingProxy _handleXPCTimeConvertProvidingTypeHostTimeFromSampleCountMessage:messageBody:client:]
-[CSAudioTimeConversionProvidingProxy _handleXPCTimeConvertProvidingTypeSampleCountFromHostTimeMessage:messageBody:client:]
meta_version.json
enrollment_version.json
CSP2P_CommandType_Key
CSP2P_CommandDict_Key
corespeech
com.apple.siridebug.command.remote.heysiri
com.apple.siridebug.command.parallel.recording
com.apple.siridebug.command.transfer.voiceprofile
com.apple.siridebug.command.query.voiceprofile
com.apple.siridebug.command.reverse.transfer.voiceprofile
com.apple.siridebug.command.fetch.voiceprofile
com.apple.siridebug.command.voiceprofile.update.trigger
com.apple.siridebug.command.transfer.parallelrecording
com.apple.siridebug.command.fetch.voicegradingdata
com.apple.siridebug.command.transfer.voicegradingdata
com.apple.siridebug.command.delete.voiceprofile
CSP2P_RemoteHeySiriEnable_Key
CSP2P_RemoteHeySiriStatus_Key
CSP2P_RemoteRecordingStart_Key
CSP2P_RemoteRecordingStatus_Key
CSP2P_VoiceProfileData_Key
CSP2P_VoiceProfileFileName_Key
CSP2P_VoiceProfileSpeakerName_Key
CSP2P_VoiceProfileLocale_Key
CSP2P_VoiceProfileDataType_Key
CSP2P_VoiceProfileSegment_Key
CSP2P_VoiceProfileTotalSegments_Key
CSP2P_VoiceProfileStatus_Key
CSP2P_VoiceProfileProfileId_Key
CSP2P_VoiceProfileHomeUserId_Key
CSP2P_VoiceProfileRelativeFilePath_Key
CSP2P_VoiceProfileSiriProfileId_Key
CSP2P_VoiceProfileAppDomain_Key
CSP2P_VoiceProfileOnboardTimeStamp_Key
CSP2P_VoiceProfileTransferCompleted_Key
CSP2P_VoiceProfileRecordedData_Key
CSP2P_VoiceProfileRemoteFileName_Key
CSP2P_VoiceDataToBeGraded_Key
CSP2P_VoiceFileNameToBeGraded_Key
CSP2P_GradingDataTransferStatus_Key
CSP2P_PeerIdentifier_Key
CSP2P_IsDataCompressed_Key
CSP2P_UncompressedDataSize_Key
CSP2P_GradingBatchTransferID_Key
remote
-triggered
-almost
com.apple.corespeech.p2psvc
-[CSP2PService processRemoteCommandWithPayload:fromPeer:withReply:]_block_invoke
CoreSpeech
-[CSP2PService sendCoreSpeechGradingDataToNearbyPeer]_block_invoke
-[CSP2PService sendVTNearMissGradingDataToCompanion]_block_invoke
-[CSP2PService sendVoiceProfileUpdatedMessageToNearbyPeerForLocale:]_block_invoke
-[CSP2PService _processRemoteHeySiriCommandWithRequest:fromSenderID:withReply:]
-[CSP2PService _compressFilesInDirectory:matchingPredicate:compressedFileAvailable:]
-[CSP2PService _sendVoiceTriggerGradingDataToPeerId:]_block_invoke_2
-[CSP2PService _sendVoiceTriggerGradingDataToPeerId:]_block_invoke
v52@?0@"NSString"8@"NSData"16Q24Q32B40@"NSError"44
.wav
.json
-[CSP2PService _sendCoreSpeechGradingDataToPeerId:]_block_invoke_2
-[CSP2PService _sendCoreSpeechGradingDataToPeerId:]_block_invoke
-[CSP2PService _sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:]
fileData
fileName
peerId
-[CSP2PService _sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
-[CSP2PService _receiveParallelRecordingFromPeerId:recordingInfo:withReply:]
%@_%@
-[CSP2PService _receiveVoiceGradingDataFromPeerId:requestInfo:withReply:]
%@.%@.%@
suppressnotification
%@.%@
-[CSP2PService _receiveVoiceProfileFromPeerId:voiceProfileInfo:withReply:]
CoreSpeechCache
audio
tdti
com.apple.siri.corespeech.voiceprofilelist.change
-[CSP2PService _processVoiceProfileDeleteCommandWithRequest:fromSenderID:withReply:]_block_invoke
-[CSP2PService _processGradingDataFetchCommandWithRequest:fromSenderID:withReply:]
-[CSP2PService _processVoiceProfileListQueryCommandFromPeerId:requestInfo:withReply:]
yyyyMMddHHmmss
v24@?0@"NSString"8@"NSError"16
voiceprofiles
-[CSP2PService _getHomeUserIdForSharedSiriId:withCompletion:]
-[CSP2PService _getHomeUserIdForSharedSiriId:withCompletion:]_block_invoke
homeUserId query for siriProfileId %@ timedout !
-[CSP2PService _processFetchVoiceProfileCommandFromPeerId:requestInfo:withReply:]
Caches/VoiceTrigger/SATUpdate
_%d_%d_%@
-[CSP2PService _sendVoiceProfile:toPeerId:]
td/audio
tdti/audio
ti/audio
-[CSP2PService _sendVoiceProfile:toPeerId:]_block_invoke
-[CSP2PService _processReverseTransferVoiceProfileCommandFromPeerId:requestInfo:withReply:]
-[CSP2PService _processVoiceProfileUpdateTriggerFromPeerId:requestInfo:withReply:]
-[CSP2PService _sendVoiceProfileUpdateTriggerToPeerId:forLocale:]_block_invoke
Logs/CoreSpeech/spid/grading
-[CSP2PService _createDirectoryIfDoesNotExist:]
SiriDebugVT
RemoteGradingData
VoiceProfileStore
trained_users.json
Caches
-[CSP2PService _getContentsOfDirectory:]
lastCommunicatedPeer
T@"NSString",&,N,V_lastCommunicatedPeer
voiceTriggerBatchId
T@"NSString",&,N,V_voiceTriggerBatchId
voiceIdentificationBatchId
T@"NSString",&,N,V_voiceIdentificationBatchId
adCompanionServiceProvider
T@"<CSADCompanionServiceProvider>",W,N,V_adCompanionServiceProvider
+[CSAudioRecorderFactory audioRecorderWithQueue:error:]
liveOnHomePod
U+73bmG4kBGj6kpreQXUTQ
InternalBuild
+N9mZUAHooNvMiQnjeTJ8g
+[CSUtils supportHybridEndpointer]
PTQ+ABwag03BwO/CKvIK/A
4D8XW4YwJI7QvyPhv1TEdw
+[CSUtils isIOSDeviceSupportingBargeIn]_block_invoke
BuildVersion
IOPlatformExpertDevice
+[CSUtils deviceHwRevision]
config-number
yyyyMMdd
Serial CSAssetManager queue
-[CSAssetManager initWithDownloadOption:]
-[CSAssetManager initWithDownloadOption:]_block_invoke
ENABLED
DISABLED
-[CSAssetManager setAssetDownloadingOption:]_block_invoke
-[CSAssetManager _fetchRemoteMetaData]
-[CSAssetManager _canFetchRemoteAsset:]
-[CSAssetManager CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSAssetManager _createPeriodicalDownloadTimer]
-[CSAssetManager _createPeriodicalDownloadTimer]_block_invoke
-[CSAssetManager _startPeriodicalDownload]
-[CSAssetManager _stopPeriodicalDownload]
currentLanguageCode
-[CSVoiceTriggerAwareZeroFilter resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:]
triggerEndSeconds
vtEndInSampleCount
TQ,N,V_vtEndInSampleCount
numSamplesProcessed
TQ,N,V_numSamplesProcessed
T@"CSAudioZeroFilter",&,N,V_zeroFilter
T@"<CSVoiceTriggerAwareZeroFilterDelegate>",W,N,V_delegate
T@"<CSSPGEndpointAnalyzerDelegate>",W,N,V_delegate
-[CSOSTransaction initWithDescription:]
-[CSOSTransaction dealloc]
-[CSAudioMetricProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioMetricProvidingProxy _handleMetricProvidingRequestTypeAudioMetricMessage:messageBody:client:]
audioMetricProvider
T@"<CSAudioMetricProviding>",W,N,V_audioMetricProvider
-[CSGestureMonitorWatch _startMonitoringWithQueue:]
-[CSGestureMonitorWatch wakeGestureRecognized:]
CSLSWakeGestureMonitor
Unable to find class %s
/System/Library/PrivateFrameworks/CarouselServices.framework/CarouselServices
/System/Library/PrivateFrameworks/CarouselServices.framework/Contents/MacOS/CarouselServices
corespeechd xpc connection client queue
-[CSActivationXPCConnection _handleClientEvent:]
-[CSActivationXPCConnection _handleClientMessage:client:]
-[CSActivationXPCConnection _handleClientError:client:]
-[CSActivationXPCConnection _handleActivateEventMesssage:client:]
T@"<CSActivateXPCConnectionDelegate>",W,N,V_delegate
address
T@"NSString",C,N,V_address
supportDoAP
TB,N,V_supportDoAP
isTemporaryPairedNotInContacts
TB,N,V_isTemporaryPairedNotInContacts
CSSiriClientBehaviorMonitor
-[CSSiriClientBehaviorMonitor notifyWillStartStreamWithContext:option:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyDidStartStreamWithContext:successfully:option:withEventUUID:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyWillStopStream:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyDidStopStream:withEventUUID:]_block_invoke
isStreaming
TB,N,V_isStreaming
Serial CSPolicy queue
-[CSLanguageCodeUpdateMonitor _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitor _stopMonitoring]
-[CSLanguageCodeUpdateMonitor _didReceiveLanguageCodeUpdate]
CSAudioInjectionHearstEngine
-[CSAudioInjectionHearstEngine dealloc]
T@"CSKeywordAnalyzerNDAPI",&,N,V_keywordAnalyzer
lastDetectedVoiceTriggerBeginSampleCount
TQ,N,V_lastDetectedVoiceTriggerBeginSampleCount
numOfAVVCRecordingClients
TQ,R,N,V_numOfAVVCRecordingClients
Serial CSEventMonitor queue
-[CSEventMonitor _startMonitoringWithQueue:]
/Library/Caches/com.apple.xbs/Sources/CoreSpeech_Sim/CoreSpeech-446.6/CoreSpeech/CSEventMonitor.m
-[CSEventMonitor _stopMonitoring]
[%@]
[%llu]
[%f]
BuiltInAOPVoiceTrigger
RemoteMicVoiceTrigger
RemoteMicVAD
JarvisVoiceTrigger
mediaserverdLaunched
RemoraVoiceTrigger
Unknown
TQ,N,V_type
T@"NSDictionary",&,N,V_activationInfo
TQ,N,V_hosttime
Tf,N,V_vadScore
activationInfo
vadScore
hosttime
-[CSVoiceTriggerAssetDownloadMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetDownloadMonitor _stopMonitoring]
-[CSVoiceTriggerAssetDownloadMonitor _didInstalledNewVoiceTriggerAsset]
com.apple.MobileAsset.VoiceTriggerAssets.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsIPad.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.new-asset-installed
audioSessionState
TQ,N,GgetAudioSessionState,V_audioSessionState
Dpg:%.3f Dpd:%.3f T:%.3f
Td,R,N,V_droppingPrediction
Td,R,N,V_droppedPrediction
Td,R,N,V_timestamp
droppingPrediction
droppedPrediction
timestamp
deviceType
Tq,R,N,V_deviceType
deviceName
T@"NSString",R,N,V_deviceName
deviceID
T@"NSString",R,N,V_deviceID
deviceUID
T@"NSUUID",R,N,V_deviceUID
productIdentifier
T@"NSString",R,N,V_productIdentifier
isConnected
TB,N,V_isConnected
isPluginDevice
enableAlwaysOnVoiceTrigger
TB,N,V_enableAlwaysOnVoiceTrigger
injectionEngine
T@"CSAudioInjectionEngine",W,N,V_injectionEngine
nohash
((?:[a-z]|[0-9])*)\.asset
+[CSUtils(ResourcePathHash) assetHashInResourcePath:]
T@"NSString",C,N,V_deviceId
-[CSSmartSiriVolumeManager initWithSamplingRate:withAsset:]
-[CSSmartSiriVolumeManager CSAlarmMonitor:didReceiveAlarmChanged:]
-[CSSmartSiriVolumeManager CSTimerMonitor:didReceiveTimerChanged:]
-[CSSmartSiriVolumeManager CSVolumeMonitor:didReceiveMusicVolumeChanged:]
-[CSSmartSiriVolumeManager CSVolumeMonitor:didReceiveAlarmVolumeChanged:]
T@"<CSSmartSiriVolumeProcessor>",&,N,V_smartSiriVolume
T@"<CSConnectionServiceDelegate>",W,N,V_delegate
CSContinuousAudioFingerprintProvider
-[CSContinuousAudioFingerprintProvider startWithUUID:withMaximumBufferSize:]
-[CSContinuousAudioFingerprintProvider startWithUUID:withMaximumBufferSize:]_block_invoke
-[CSContinuousAudioFingerprintProvider stopWithUUID:]
-[CSContinuousAudioFingerprintProvider stopWithUUID:]_block_invoke
-[CSContinuousAudioFingerprintProvider _startListenPollingWithInterval:completion:]
-[CSContinuousAudioFingerprintProvider _startListenPollingWithInterval:completion:]_block_invoke
-[CSContinuousAudioFingerprintProvider _startListenWithCompletion:]_block_invoke_2
-[CSContinuousAudioFingerprintProvider _startListenWithCompletion:]_block_invoke
-[CSContinuousAudioFingerprintProvider _startListenWithCompletion:]
-[CSContinuousAudioFingerprintProvider _startListenPolling]
-[CSContinuousAudioFingerprintProvider _stopListening]
-[CSContinuousAudioFingerprintProvider _stopListening]_block_invoke
-[CSContinuousAudioFingerprintProvider CSSiriEnabledMonitor:didReceiveEnabled:]
-[CSContinuousAudioFingerprintProvider audioStreamProvider:didStopStreamUnexpectly:]
-[CSContinuousAudioFingerprintProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]
isListenPollingStarting
TB,N,V_isListenPollingStarting
audioLoggingBuffer
T@"CSAudioCircularBuffer",&,N,V_audioLoggingBuffer
inUseServices
T@"NSMutableDictionary",&,N,V_inUseServices
currentMaximumBufferSize
Tf,N,V_currentMaximumBufferSize
[SplitterEnabled(%d)]
[Device%d(%@) DoAP(%d)]
[SplitterState:%d]
splitterEnabled
TB,N,V_splitterEnabled
shouldDisableSpeakerVerificationInSplitterMode
-[CSAdBlockerAssetDownloadMonitor _startMonitoringWithQueue:]
-[CSAdBlockerAssetDownloadMonitor _stopMonitoring]
-[CSAdBlockerAssetDownloadMonitor _didInstalledNewAdBlockerAsset]
-[CSAdBlockerAssetDownloadMonitor trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:]
monitor
T@"CSTrialAssetDownloadMonitor",&,N,V_monitor
com.apple.MobileAsset.AdBlockerAssets.ma.new-asset-installed
CSVoiceIdXPCListener
com.apple.corespeech.corespeechd.voiceid.xpc
-[CSVoiceIdXPCListener listen]
-[CSVoiceIdXPCListener _handleListenerEvent:]
-[CSVoiceIdXPCListener _handleListenerError:]
-[CSVoiceIdXPCListener _handleNewRemoteConnection:]
corespeech.corespeechd.voiceid.xpc
Trial
didStartWatchDogFire
didStopWatchDogFire
streamDeallocDuringStreaming
resourceNotAvailable
InsufficientPriority
VoiceTrigger
CSSpeechManager Asset Query Queue
-[CSSpeechManager startManager]
-[CSSpeechManager registerSpeechController:]
-[CSSpeechManager registerSiriClientProxy:]
v32@?0@"NSNumber"8@"CSAudioProvider"16^B24
-[CSSpeechManager audioProviderWithContext:error:]
-[CSSpeechManager audioProviderWithContext:error:]_block_invoke
-[CSSpeechManager audioProviderWithStreamID:]_block_invoke
-[CSSpeechManager _getAudioRecorderWithError:]
-[CSSpeechManager audioProviderInvalidated:streamHandleId:]_block_invoke
-[CSSpeechManager audioRecorderWillBeDestroyed:]_block_invoke
-[CSSpeechManager voiceTriggerAssetHandler:didChangeCachedAsset:]
-[CSSpeechManager _createClearLoggingFileTimer]
-[CSSpeechManager _createClearLoggingFileTimer]_block_invoke
-[CSSpeechManager _startClearLoggingFilesTimer]
assetQueryQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetQueryQueue
audioProviders
T@"NSMutableDictionary",&,N,V_audioProviders
fallbackAudioSessionReleaseProvider
T@"CSFallbackAudioSessionReleaseProvider",&,N,V_fallbackAudioSessionReleaseProvider
clientController
T@"<CSSpeechManagerDelegate>",W,N,V_clientController
clearLoggingFileTimer
T@"NSObject<OS_dispatch_source>",&,N,V_clearLoggingFileTimer
clearLoggingFileTimerCount
Tq,N,V_clearLoggingFileTimerCount
opportuneSpeakListnerTestService
T@"CSOpportuneSpeakListnerTestService",&,N,V_opportuneSpeakListnerTestService
postBuildInstallService
T@"CSPostBuildInstallService",&,N,V_postBuildInstallService
-[CSVoiceIdXPCClient _handleListenerEvent:]
-[CSVoiceIdXPCClient _handleListenerError:]
utterencePath
audioDevice
audioRecord
voiceTriggerEventInfo
otherCtxt
-[CSAudioZeroCounter getZeroStatisticsFromBuffer:entireSamples:]
-[CSAudioZeroCounter stopReportZeroStatistics]
CSOpportuneSpeakBehaviorMonitor
-[CSOpportuneSpeakBehaviorMonitor notifyWillStartStreamWithContext:audioProviderUUID:option:]_block_invoke
-[CSOpportuneSpeakBehaviorMonitor notifyDidStartStreamWithContext:audioProviderUUID:successfully:option:]_block_invoke
-[CSOpportuneSpeakBehaviorMonitor notifyWillStopStream:]_block_invoke
-[CSOpportuneSpeakBehaviorMonitor notifyDidStopStream:]_block_invoke
T@"NSDictionary",C,N,V_voiceTriggerInfo
T@"NSDictionary",C,N,V_rtsTriggerInfo
triggerNotifiedMachTime
TQ,N,V_triggerNotifiedMachTime
corespeech.json
assets.json
speakerRecognition.json
adBlockerPayload.bin
hybridendpointer.json
hybridendpointer_marsh.json
/System/Library/PrivateFrameworks/CoreSpeech.framework
+[CSAsset fallBackAssetResourcePath]
defaultFallbackHearst
defaultFallbackAdBlocker
-[CSAsset initWithResourcePath:configFile:configVersion:assetProvderType:]
-[CSAsset _decodeJson:]
-[CSAsset getNumberForKey:category:default:]
-[CSAsset getStringForKey:category:default:]
configVersion:%@ resourcePath:%@ path:%@
MobileAssets
path
T@"NSString",R,N,V_path
resourcePath
T@"NSString",R,N,V_resourcePath
hashFromResourcePath
T@"NSString",R,N,V_configVersion
assetProvider
TQ,R,N,V_assetProvider
-[CSXPCConnection sendMessageToClient:]
-[CSXPCConnection sendMessageToClient:]_block_invoke
-[CSXPCConnection _handleClientEvent:]
-[CSXPCConnection _handleClientMessage:client:]
-[CSXPCConnection _handleAudioProvidingMessage:messageBody:client:]
-[CSXPCConnection _handleAudioProvidingRequestTypeSwitchMessage:messageBody:client:]
-[CSXPCConnection _handleSetXPCClientTypeMessage:messageBody:client:]
-[CSXPCConnection _handleClientError:client:]
-[CSXPCConnection _handlePingPongMessage:client:]
audioSessionProvidingProxy
T@"CSAudioSessionProvidingProxy",&,N,V_audioSessionProvidingProxy
fallbackAudioSessionProvidingProxy
T@"CSFallbackAudioSessionReleaseProvidingProxy",&,N,V_fallbackAudioSessionProvidingProxy
audioSessionInfoProvidingProxy
T@"CSAudioSessionInfoProvidingProxy",&,N,V_audioSessionInfoProvidingProxy
audioStreamProvidingProxy
T@"CSAudioStreamProvidingProxy",&,N,V_audioStreamProvidingProxy
audioAlertProvidingProxy
T@"CSAudioAlertProvidingProxy",&,N,V_audioAlertProvidingProxy
audioMeterProvidingProxy
T@"CSAudioMeterProvidingProxy",&,N,V_audioMeterProvidingProxy
audioMetricProvidingProxy
T@"CSAudioMetricProvidingProxy",&,N,V_audioMetricProvidingProxy
TQ,N,V_clientType
T@"<CSXPCConnectionDelegate>",W,N,V_delegate
-[CSHostDaemon init]_block_invoke
CSHostDaemon
-[CSHostDaemon _daemonDidLaunch]
com.apple.notifyd.matching
-[CSHostDaemon _setupNotifyHandlers]_block_invoke
AFLanguageCodeDidChangeDarwinNotification
xpcListener
T@"CSXPCListener",&,N,V_xpcListener
activationXpcListener
T@"CSActivationXPCListener",&,N,V_activationXpcListener
voiceIdXpcListener
T@"CSVoiceIdXPCListener",&,N,V_voiceIdXpcListener
voiceTriggerXpcListener
T@"CSVoiceTriggerXPCListener",&,N,V_voiceTriggerXpcListener
audioInjectionXpcListener
T@"CSAudioInjectionXPCListener",&,N,V_audioInjectionXpcListener
signalSource
T@"NSObject<OS_dispatch_source>",&,N,V_signalSource
-[CSAudioCircularBuffer initWithNumChannels:recordingDuration:samplingRate:]
-[CSAudioCircularBuffer copySamplesFromHostTime:]
-[CSAudioCircularBuffer copySamplesFrom:to:]
-[CSAudioCircularBuffer copySamplesFrom:to:channelIdx:]
-[CSAudioCircularBuffer copybufferFrom:to:]
-[CSAudioCircularBuffer copyBufferWithNumSamplesCopiedIn:]
-[CSAudioCircularBuffer reset]
bufferLength
TQ,N,V_bufferLength
copySamples
+[CSUtils(AudioFile) readAudioChunksFrom:block:]
-[CSCoreSpeechDaemonStateMonitor notifyDaemonStateChanged:]
com.apple.corespeech.corespeechd.launch
-[CSCoreSpeechDaemonStateMonitor _startMonitoringWithQueue:]
-[CSCoreSpeechDaemonStateMonitor _stopMonitoring]
-[CSCoreSpeechDaemonStateMonitor _didReceiveDaemonStateChanged:]
+[CSUtils(Time) hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:]
+[CSUtils(Time) sampleCountFromHostTime:anchorHostTime:anchorSampleCount:]
+[CSUtils(Time) macHostTimeFromBridgeHostTime:]
CSRemoteRecordClient Queue
T@"<CSRemoteRecordClientDelegate>",W,N,V_delegate
-[CSConnectionListener initWithMachService:withServiceInterface:withServiceObject:withDelegateInterface:]
com.apple.CoreSpeech.Connection.Listener
-[CSConnectionListener dealloc]
-[CSConnectionListener listener:shouldAcceptNewConnection:]
-[CSConnectionListener listener:shouldAcceptNewConnection:]_block_invoke
-[CSConnectionListener listener:shouldAcceptNewConnection:]_block_invoke_2
-[CSConnectionListener notifyClientsWithBlock:]_block_invoke
clientConnections
T@"NSMutableArray",&,N,V_clientConnections
machServiceName
T@"NSString",&,N,V_machServiceName
/var/mobile/Library/VoiceTrigger
/var/mobile/Library/VoiceTrigger/KeepAlive
-[CSCoreSpeechDKeepAliveHandler _enableCoreSpeechDaemonKeepAlive]
KeepAlive
-[CSCoreSpeechDKeepAliveHandler _coreSpeechDaemonKeepAlived]
T@"<CSAudioDecoderDelegate>",W,V_delegate
CSSiriAssertionMonitor queue
-[CSSiriAssertionMonitor init]
-[CSSiriAssertionMonitor _stopMonitoring]
-[CSSiriAssertionMonitor enableAssertionReceived]_block_invoke
-[CSSiriAssertionMonitor disableAssertionReceived]_block_invoke
-[CSAudioSessionProvidingProxy CSXPCConnectionReceivedClientError:clientError:client:]
-[CSAudioSessionProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypePrewarmMessage:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeActivateMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeDeactivateMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeGetDuckOthersOption:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeSetDuckOthersOption:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeEnableMiniDucking:messageBody:client:]
ENABLE
DISABLE
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeEnableSmartRoutingConsideration:messageBody:client:]
-[CSAudioSessionProvidingProxy audioSessionProvider:providerInvalidated:]
CSAudioInjectionRemoraEngine
-[CSAudioInjectionRemoraEngine dealloc]
Languages
Footprint
Premium
-[CSCommandControlStreamEventMonitor isStreaming]
-[CSDispatchGroup leave]
-[CSAudioAlertProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeSetAlertSoundMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypePlayAlertSoundMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypePlayRecordStartingAlertAndResetEndpointerMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeAlertStartTimeMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeConfigureAlertBehavior:messageBody:client:]
-[CSAudioAlertProvidingProxy audioAlertProvidingDidFinishAlertPlayback:ofType:error:]
audioAlertProvider
T@"<CSAudioAlertProviding>",W,N,V_audioAlertProvider
com.apple.voicetrigger
com.apple.voicetrigger.notbackedup
kCSPreferencesJarvisTriggerModeDidChangeDarwinNotification
Phrase Detector Enabled
AttentiveSiri Enabled
AttentiveSiri AudioLogging Enabled
VoiceTrigger CoreSpeech Enabled
-[CSPreferences voiceTriggerInCoreSpeech]_block_invoke
Enable Two Shot Notification
com.apple.demo-settings
StoreDemoMode
File Logging Level
Library
Logs/CrashReporter/VoiceTrigger/audio/
/Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
-[CSPreferences getSSVLogFilePathWithSessionIdentifier:]
%@/SSV_%@.json
VoiceTrigger/TrialAssetData
VoiceTrigger/adBlocker
/Logs/CrashReporter/Assistant/
SpeechLogs
-[CSPreferences assistantAudioFileLogDirectory]
siriBC
Second Pass Audio Logging Enabled
Speaker Recognition Audio Logging Enabled
Jarvis Audio Logging Enabled
Jarvis Trigger Mode
Enable SoS Audio Logging
Force VoiceTrigger AP Mode
-[CSPreferences forceVoiceTriggerAPMode]_block_invoke
Force VoiceTrigger AOP Mode
-[CSPreferences forceVoiceTriggerAOPMode]_block_invoke
mobile
Logs/CrashReporter/CoreSpeech/sos/
-[CSPreferences getStartOfSpeechAudioLogFilePath]
yyyyMMdd_HHmmss.SSS
%@/%@
Remote VoiceTrigger Delay
Remote VoiceTrigger Endpoint Timeout
VoiceTrigger/interstitial
Myriad File Logging Enabled
Audio Injection Enabled
Programmable Audio Injection Enabled
-[CSPreferences enableAudioInjection:withKey:]
-[CSPreferences setAudioInjectionFilePath:]
Audio Injection File Path
-[CSPreferences audioInjectionFilePath]
-[CSPreferences audioInjectionFilePath]_block_invoke
SpeakerId Enabled
SpeakerId Score Type
SmartSiriVolume SoftVolume Enabled
Audio Session Activation Delay
Max Number Logging Files
Max Number Grading Files
Enable SiriActivation HomePod
Enable SiriActivation watchOS
IOS Support Barge-in
-[CSPreferences iOSBargeInSupportEnabled]_block_invoke
enabled
disabled
-[CSPreferences iOSBargeInSupportEnabled]
Overwrite Remote VAD Score
Hearst First Pass Model Version
Hearst Second Pass Model Version
Hearst Fake Model Path
VoiceTrigger Companion Sync Enabled
Enable OpportuneSpeakListener Bypass
Bypass Personalized HeySiri
MultiPhraseVTEnabled
MultiChannelAudioLoggingEnabled
Enable AdBlocker Audio Logging
Enable Self Trigger Audio Logging
voicetrigger xpc service connection client queue
-[CSVoiceTriggerXPCConnection _handleClientEvent:]
-[CSVoiceTriggerXPCConnection _handleClientMessage:client:]
-[CSVoiceTriggerXPCConnection _handleClientError:client:]
-[CSVoiceTriggerXPCConnection _handleVoiceTriggerXPCServiceMessage:client:]
phraseSpotterBypass
bypassTimeout
-[CSVoiceTriggerXPCConnection _handlePhraseSpotterBypassRequest:]
raiseToSpeakBypass
-[CSVoiceTriggerXPCConnection _handleVoiceTriggeredSiriSessionCancelled]
enable
assertion
triggerStats
T@"<CSVoiceTriggerXPCConnectionDelegate>",W,N,V_delegate
-[CSAudioRouteChangeMonitor _startMonitoringWithQueue:]
/Library/Caches/com.apple.xbs/Sources/CoreSpeech_Sim/CoreSpeech-446.6/CoreSpeech/CSAudioRouteChangeMonitor.m
-[CSAudioRouteChangeMonitor _stopMonitoring]
-[CSAudioRouteChangeMonitor getHearstConnected:]
-[CSAudioRouteChangeMonitor hearstConnected]
-[CSAudioRouteChangeMonitor getJarvisConnected:]
-[CSAudioRouteChangeMonitor jarvisConnected]
+[CSUtils(machXPC) machXPCConnection:hasEntitlement:]
-[CSAdBlockerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSAdBlockerAssetMetaUpdateMonitor _stopMonitoring]
-[CSAdBlockerAssetMetaUpdateMonitor _didReceiveNewAdBlockerAssetMetaData]
com.apple.MobileAsset.AdBlockerAssets.ma.cached-metadata-updated
+[CSAudioStreamRequest defaultRequestWithContext:]
+[CSAudioStreamRequest requestForLpcmRecordSettingsWithContext:]
+[CSAudioStreamRequest requestForOpusRecordSettingsWithContext:]
+[CSAudioStreamRequest requestForSpeexRecordSettingsWithContext:]
TB,N,V_requiresHistoricalBuffer
TB,N,V_useCustomizedRecordSettings
Tq,N,V_audioFormat
Td,N,V_sampleRate
TI,N,V_lpcmBitDepth
TB,N,V_lpcmIsFloat
numberOfChannels
TI,N,V_numberOfChannels
TI,N,V_encoderBitRate
TB,N,V_isSiri
requiresHistoricalBuffer
useCustomizedRecordSettings
lpcmBitDepth
lpcmIsFloat
NumberOfChannels
encoderBitRate
isSiri
+[CSAdBlockerAssetDecoderFactory adBlockerAssetDecoderWithVersion:]
payloadData
T@"NSData",&,N,V_payloadData
maxFingerprintBufferSize
Tf,R,N,V_maxFingerprintBufferSize
shouldResetAdsDictionary
T@"NSMutableDictionary",R,N,V_shouldResetAdsDictionary
CSAudioInjectionEngine
-[CSAudioInjectionEngine _createDeInterleaverIfNeeded]
-[CSAudioInjectionEngine stop]_block_invoke
-[CSAudioInjectionEngine _readAudioBufferAndFeed]
-[CSAudioInjectionEngine injectAudio:withScaleFactor:outASBD:playbackStarted:completion:]
-[CSAudioInjectionEngine stopAudioStream]_block_invoke
-[CSAudioInjectionEngine _deinterleaveBufferIfNeeded:]
-[CSAudioInjectionEngine _compensateChannelDataIfNeeded:receivedNumChannels:]
fileOption
T@"CSAudioInjectionFileOption",&,N,V_fileOption
audioFeedTimer
T@"NSObject<OS_dispatch_source>",&,N,V_audioFeedTimer
isRecording
TB,N,V_isRecording
bufferDuration
Td,N,V_bufferDuration
injectionAudioFileList
T@"NSMutableArray",&,N,V_injectionAudioFileList
injectionStartNotifyBlocks
T@"NSMutableArray",&,N,V_injectionStartNotifyBlocks
injectionCompletionNotifyBlocks
T@"NSMutableArray",&,N,V_injectionCompletionNotifyBlocks
deinterleaver
T^{OpaqueAudioConverter=},N,V_deinterleaver
pNonInterleavedABL
T^{AudioBufferList=I[1{AudioBuffer=II^v}]},N,V_pNonInterleavedABL
didSetScaleFactor
TB,N,V_didSetScaleFactor
Tf,N,V_scaleFactor
-[CSSelectiveChannelAudioFileWriter initWithURL:inputFormat:outputFormat:channelBitset:]
-[CSSelectiveChannelAudioFileWriter addSamples:numSamples:]
TI,R,N,V_numberOfChannels
-[CSSoftwareUpdateCheckingMonitor _startMonitoringWithQueue:]
-[CSSoftwareUpdateCheckingMonitor _stopMonitoring]
-[CSSoftwareUpdateCheckingMonitor _checkSoftwareUpdateCheckingState]
com.apple.duetscheduler.restartCheckNotification
-[CSAudioConverter _convertBufferedLPCM:allowPartial:timestamp:]
-[CSAudioConverter reset]
-[CSAudioConverter _configureAudioConverter:]
T@"<CSAudioConverterDelegate>",W,V_delegate
CreateAudioConverter
CSMediaPlayingMonitor queue
-[CSMediaPlayingMonitor initializeMediaPlayingState]_block_invoke_2
v12@?0I8
-[CSMediaPlayingMonitor _startMonitoringWithQueue:]
-[CSMediaPlayingMonitor _stopMonitoring]
-[CSMediaPlayingMonitor _notePossiblePlayPausedStateChange:]
PLAYING
NOT PLAYING
com.apple.corespeech.cat.xpc
deque
CSVoiceTriggerAOPModeEnabledPolicyIOS RecordState queue
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _addConditionsForIOSBargeIn]_block_invoke
BTDetails_IsHFPRoute
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _addConditionsForIOSAOP]_block_invoke
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _isSpeechDetectionDevicePresent]
-[CSVoiceTriggerAOPModeEnabledPolicyIOS siriClientBehaviorMonitor:didChangedRecordState:withEventUUID:withContext:]_block_invoke
isSiriClientConsideredAsRecord
TB,N,V_isSiriClientConsideredAsRecord
pendingRecordingStopUUID
T@"NSString",&,N,V_pendingRecordingStopUUID
-[CSNetworkAvailabilityMonitor _startMonitoringWithQueue:]
-[CSNetworkAvailabilityMonitor _stopMonitoring]
-[CSNetworkAvailabilityMonitor _availabilityChanged]
-[NSDictionary(XPCObject) _cs_initWithXPCObject:]
-[NSDictionary(XPCObject) _cs_initWithXPCObject:]_block_invoke
B24@?0r*8@"NSObject<OS_xpc_object>"16
-[NSDictionary(XPCObject) _cs_xpcObject]_block_invoke
v32@?0@8@16^B24
-[CSAudioMeterProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypeSetMeteringEnabledMessage:messageBody:client:]
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypeUpdateMetersMessage:messageBody:client:]
v16@?0B8f12
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypePowerMessage:messageBody:client:powerType:]
audioMeterProvider
T@"<CSAudioMeterProviding>",W,N,V_audioMeterProvider
CSSyncKeywordAnalyzerQuasar
CSKeywordAnalyzerNDEAPIResult
CSKeywordAnalyzerNDEAPI
CSFallbackAudioSessionReleaseProvidingProxy
CSXPCConnectionDelegate
NSObject
AVVC
CSActivationXPCClient
CSAudioTimeConverter
CSAudioSampleRateConverter
CSSpeakerRecognitionAssetMetaUpdateMonitor
CSVolumeMonitor
CSFallbackAudioSessionReleaseProvider
CSAudioRecorderDelegate
CSFallbackAudioSessionReleaseProviding
CSAudioChunk
CSSpeakerRecognitionAssetDownloadMonitor
CSTrialAssetDownloadMonitorDelegate
CSVoiceTriggerXPCServiceProxy
CSAudioStreamProvidingProxy
CSAudioStreamProvidingDelegate
CSAudioFileLog
CSAudioSessionInfoProvider
CSAudioSessionInfoProviding
CSAudioFileManager
CSStateMachine
CSAudioInjectionFileOption
CSSmartSiriVolumeEnablePolicy
CSSiriRestrictionOnLockScreenMonitor
MCProfileConnectionObserver
CSAudioRecordContext
NSCopying
AudioInjectionXPCProtocol
CSPostBuildInstallService
CSAssetControllerFactory
CSAudioZeroFilter
CSVoiceTriggerDataCollector
CSKeywordAnalyzerQuasar
CSVoiceTriggerAssetHandlerMac
CSVoiceTriggerAssetDownloadMonitorDelegate
CSFirstUnlockMonitorDelegate
CSLanguageCodeUpdateMonitorDelegate
CSAudioStartStreamOption
CSVTSecondPassPhraseScore
CSVTSecondPassScorer
CSCoreSpeechServices
CSVoiceTriggerAssetChangeMonitor
CSAudioServerCrashMonitor
CSAudioServerCrashEventProvidingDelegate
CSXPCClient
CSAudioSessionProviding
CSAudioStreamProviding
CSAudioAlertProviding
CSAudioMeterProviding
CSAudioMetricProviding
CSAudioTimeConversionProviding
CSTriggerInfoProviding
CSOpportuneSpeakListnerTestService
CSOpportuneSpeakListenerDelegate
CSTimerMonitor
CSOpportuneSpeakEventMonitor
CSOpportuneSpeakBehaviorMonitorDelegate
CSPhraseSpotterEnabledMonitor
CSVoiceTriggerAssetHandler
CSCATAssetManager
AudioStreamBasicDescription
CSMyriadPHash
CSVoiceTriggerXPCListener
CSVoiceTriggerXPCConnectionDelegate
CSAudioStreamHolding
SmartSiriVolume
CSAudioInjectionXPCListener
NSXPCListenerDelegate
CSVoiceTriggerRTModel
NSSecureCoding
NSCoding
CSAudioProvider
CSAudioServerCrashMonitorDelegate
CSAudioPreprocessorDelegate
CSSiriDebugConnection
CSAssetDownloadingOption
Directory
CSPowerAssertionMac
CSVoiceTriggerFirstPassHearstAP
CSOpportuneSpeakEventMonitorDelegate
CSVoiceTriggerEnabledPolicyNonAOP
CSBiometricMatchMonitor
CSSpeechDetectionDevicePresentMonitor
CSKeywordAnalyzerNDAPIResult
CSKeywordAnalyzerNDAPI
RTModel
CSDefaultAudioRouteChangeMonitorMac
CSGestureMonitor
CSAudioRouteChangeMonitorImpl
debugDescription
remoteVoiceActivityVADBuffer
CSAudioRecorder
AVVoiceControllerRecordDelegate
CSAudioDecoderDelegate
CSAudioFileReaderDelegate
CSAudioServerCrashEventProviding
CSAudioSessionEventProviding
CSOpportuneSpeakListener
CSSPGEndpointAnalyzerDelegate
XPCObject
CSSiriEnabledMonitor
CSBluetoothManager
CSJarvisTriggerModeMonitor
CSActivationXPCListener
CSActivateXPCConnectionDelegate
AudioHardware
Trial
CSAudioSessionInfoProvidingProxy
CSAudioSessionInfoProvidingDelegate
CSSmartSiriVolumeService
CSSmartSiriVolumeServiceDelegate
CSAssetController
CSEventMonitorDelegate
Utils
RecordContext
CSAudioInjectionXPC
CSNovDetectorResult
CSNovDetector
CSActivationEventNotificationHandler
CSSmartSiriVolume
CSMediaPlayingMonitorDelegate
CSSiriEnabledMonitorDelegate
CSSiriClientBehaviorMonitorDelegate
CSSmartSiriVolumeProcessor
isPluginContext
CSAudioInjectionProvider
CSAudioInjectionEngineDelegate
Compression
CSListeningEnabledPolicyWatch
CSHostPowerSourceMonitor
LanguageCode
CSAudioFileReader
RMSSample
CSShadowMicScoreCreator
CSMyriadSelfTriggerCoordinator
CSSelfTriggerDetectorDelegate
CSBeepCanceller
CSAudioInjectionBuiltInEngine
CSSpringboardStartMonitor
SpeakerRecognition
CSActivationEventNotifier
CSMacWakeSleepMonitor
CSAlarmMonitor
CSSmartSiriVolumeServiceProxy
CSFirstUnlockMonitor
LPCMTypeConversion
CSAudioChunkForTV
CSAudioRecordDeviceInfo
CSCommandControlBehaviorMonitor
CSSiriLauncher
CSPlainAudioFileWriter
CSAudioFileWriter
CSAudioStream
CSVoiceTriggerAssetMetaUpdateMonitor
CSOpportuneSpeakListenerOption
CSAudioPreprocessor
CSVoiceTriggerAwareZeroFilterDelegate
CSBeepCancellerDelegate
CSAudioRouteChangeMonitorImplWatch
CSSpeechEndpointAssetMetaUpdateMonitor
CSScreenLockMonitor
CSVoiceIdXPCConnection
CSAssetManagerEnablePolicy
CSXPCListener
CSDarkWakePowerAssertionMac
Indexing
CSVoiceTriggerStatAggregator
CSAssetManagerEnablePolicyFactory
CSAudioInjectionTvRemoteEngine
CSAudioConverterDelegate
CSVoiceTriggerEnabledMonitor
CSMSNExceptionManager
CSSmartSiriVolumeEstimate
CSAlwaysOnProcessorStateMonitor
CSCoreSpeechServiceListenerDelegate
NSXPC
CSAudioTimeConversionProvidingProxy
CSP2PService
CSAudioRecorderFactory
CSUtils
CoreSpeechXPCProtocol
CSAssetManager
CSVoiceTriggerAssetMetaUpdateMonitorDelegate
CSSpeechEndpointAssetMetaUpdateMonitorDelegate
CSAdBlockerMetaUpdateMonitorDelegate
CSAssetControllerDelegate
CSSpeakerRecognitionAssetMetaUpdateMonitorDelegate
CSVoiceTriggerAwareZeroFilter
CSSPGEndpointAnalyzer
CSOSTransaction
CSAudioMetricProvidingProxy
CSGestureMonitorWatch
CSLSWakeGestureObserver
CSActivationXPCConnection
CSBluetoothDeviceInfo
CSSiriClientBehaviorMonitor
CSPolicy
CSLanguageCodeUpdateMonitor
CSAudioInjectionHearstEngine
CSAVVCRecordingClientMonitor
CSEventMonitor
CSActivationEvent
CSVoiceTriggerAssetDownloadMonitor
CSAudioSessionMonitor
CSAudioSessionEventProvidingDelegate
CSGestureDropEvent
CSAudioInjectionDevice
ResourcePathHash
CSOpportuneSpeakListenerDeviceManager
CSSmartSiriVolumeManager
CSVoiceTriggerDelegate
CSAlarmMonitorDelegate
CSTimerMonitorDelegate
CSVolumeMonitorDelegate
CSContinuousAudioFingerprintProvider
CSBluetoothWirelessSplitterInfo
CSAdBlockerAssetDownloadMonitor
CSVoiceIdXPCListener
CSDiagnosticReporter
CSSpeechManager
CSVoiceTriggerAssetHandlerDelegate
CSActivationEventNotificationHandlerDelegate
CSAudioProviderDelegate
CSVoiceIdXPCClient
VoiceTriggerRecord
CSAudioZeroCounter
CSOpportuneSpeakBehaviorMonitor
CSVoiceTriggerEventInfoProvider
CSAsset
CSXPCConnection
CSHostDaemon
CSAudioCircularBuffer
AudioFile
CSCoreSpeechDaemonStateMonitor
Time
CSBuiltinSpeakerStateMonitor
CSRemoteRecordClient
CSConnectionListener
CSConnectionServiceDelegate
CSCoreSpeechDKeepAliveHandler
CSAudioDecoder
CSSiriAssertionMonitor
CSAudioSessionProvidingProxy
CSAudioSessionProvidingDelegate
CSBluetoothWirelessSplitterMonitor
CSUserSessionActiveMonitor
CSAudioInjectionRemoraEngine
CSCommandControlStreamEventMonitor
CSCommandControlBehaviorMonitorDelegate
CSTrialAssetManager
CSDispatchGroup
CSAudioAlertProvidingProxy
CSAudioAlertProvidingDelegate
CSPreferences
CSVoiceTriggerXPCConnection
CSVoiceProfileRetrainManager
Bitset
CSAudioRouteChangeMonitor
CSAlertBehaviorPredictor
CSConfig
machXPC
CSAudioInjectionEngineFactory
CSAdBlockerAssetMetaUpdateMonitor
CSAudioStreamRequest
CSAdBlockerAssetDecoderFactory
CSAdBlockerAssetDecoderV2
CSAudioInjectionEngine
CSSelectiveChannelAudioFileWriter
CSSoftwareUpdateCheckingMonitor
CSPhoneCallStateMonitor
CSAudioConverter
CSMediaPlayingMonitor
CSAdBlockerAssetDecoderV1
CSBatteryMonitor
CSCATXPCProtocol
CSVoiceTriggerAOPModeEnabledPolicyIOS
CSTrialAssetDownloadMonitor
CSAVVoiceTriggerClientManager
CSVoiceTriggerAOPModeEnabledPolicyFactory
CSNetworkAvailabilityMonitor
CSAudioMeterProvidingProxy
initWithConfigPath:triggerTokens:useKeywordSpotting:
processAudioChunk:
resetWithLanguage:withFarField:withAudioSource:
flushAudio
triggerConfidence
setTriggerConfidence:
activeChannel
setActiveChannel:
ctcKwdToPhraseIdMap
setCtcKwdToPhraseIdMap:
phraseIdScores
.cxx_destruct
_triggerConfidence
_activeChannel
_ctcKwdToPhraseIdMap
_phraseIdScores
init
bytes
numberWithUnsignedInteger:
numberWithFloat:
numberWithBool:
dictionaryWithObjects:forKeys:count:
initWithBlob:isEarlyDetected:
dictionary
samplesFed
setSamplesFed:
bestStart
setBestStart:
bestEnd
setBestEnd:
bestScore
setBestScore:
isSecondChance
setIsSecondChance:
isEarlyDetect
setIsEarlyDetect:
_isSecondChance
_isEarlyDetect
_bestScore
_samplesFed
_bestStart
_bestEnd
dealloc
initWithBlob:
checkForTriggerWithBytes:withNumberOfSamples:
processAudioBytes:withNumberOfSamples:
reset
delegate
setDelegate:
_currentBlob
_delegate
setXpcConnection:
_handleDeactivateAudioSessionRequestMessage:messageBody:client:
sharedManagerForCoreSpeechDaemon
fetchFallbackAudioSessionReleaseProvider
fallbackDeactivateAudioSession:error:
_sendReply:client:result:error:
domain
UTF8String
code
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handleXPCMessage:messageBody:client:
CSXPCConnectionReceivedClientError:clientError:client:
initWithXPCConnection:
xpcConnection
_xpcConnection
startRecordingHostTime
initWithStreamID:atStartHostTime:
avvcAlertBehavior
objectForKeyedSubscript:
unsignedIntegerValue
setStartAlert:
setStopAlert:
setStopOnErrorAlert:
skipAlertBehavior
setSkipAlert:
requestHistoricalAudioDataWithHostTime
numberWithUnsignedLongLong:
setObject:forKey:
_alertBehaviorTypeFromAVVCOberrideType:
setStartAlertBehavior:
setStopAlertBehavior:
setErrorAlertBehavior:
startAlertBehavior
_avvcAlertOverrideType:
stopAlertBehavior
errorAlertBehavior
numberWithInteger:
avvcStartRecordSettingsWithAudioStreamHandleId:
avvcSettings
setAVVCAlertBehavior:
_handleListenerEvent:
_handleListenerError:
xpcObject
_sendMessage:connection:completion:
_decodeError:
errorWithDomain:code:userInfo:
stringWithUTF8String:
connect
notifyActivationEvent:completion:
hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:
sampleCountFromHostTime:anchorHostTime:anchorSampleCount:
sharedInstance
processSampleCount:hostTime:
hostTimeFromSampleCount:
sampleCountFromHostTime:
queue
setQueue:
anchorSampleCount
setAnchorSampleCount:
anchorHostTime
setAnchorHostTime:
_queue
_anchorSampleCount
_anchorHostTime
lpcmNarrowBandASBD
lpcmASBD
initWithInASBD:outASBD:
_createSampleRateConverterWithInASBD:outASBD:
length
dataWithLength:
mutableBytes
setLength:
upsampler
downsampler
convertSampleRateOfBuffer:
_sampleRateConverter
_outBufferScaleFactor
_inASBD
_outASBD
_asssetMetaUpdatedKey
_didReceiveSpeakerRecognitionAssetMetaData
_notifyObserver:
enumerateObservers:
notifyObserver:
CSSpeakerRecognitionAssetMetaUpdateMonitor:didReceiveNewSpeakerRecognitionAssetMetaData:
_startMonitoringWithQueue:
_stopMonitoring
_notifyToken
fetchVolumeFromAVSystemControllerForAudioCategory:
_startObservingSystemControllerLifecycle
startObservingSystemVolumes
defaultCenter
removeObserver:
isEqualToString:
musicVolume
musicVolumeWithCompletion:
alarmVolume
systemVolumeDidChange:
systemControllerDied:
_supportAVSystemVolumeFetch
_musicVolumeLevel
_alarmVolumeLevel
audioRecorder
registerObserver:
deactivateAudioSession:error:
localizedDescription
unregisterObserver:
audioRecorderBufferAvailable:audioStreamHandleId:buffer:remoteVAD:atTime:
audioRecorderBufferAvailable:audioStreamHandleId:buffer:
audioRecorderDidStartRecord:audioStreamHandleId:successfully:error:
audioRecorderDidStopRecord:audioStreamHandleId:reason:
audioRecorderRecordHardwareConfigurationDidChange:toConfiguration:
audioRecorderDidFinishAlertPlayback:ofType:error:
audioRecorderBeginRecordInterruption:
audioRecorderBeginRecordInterruption:withContext:
audioRecorderEndRecordInterruption:
audioRecorder:willSetAudioSessionActive:
audioRecorder:didSetAudioSessionActive:
voiceTriggerDetectedOnAOP:
audioRecorderDisconnected:
audioRecorderLostMediaserverd:
audioRecorderWillBeDestroyed:
audioRecorderBuiltInAudioStreamInvalidated:error:
audioRecorderStreamHandleIdInvalidated:
initWithAudioRecorder:
setAudioRecorder:
_audioRecorder
initWithBytes:length:
dataForChannel:
copy
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:remoteVAD:
subdataWithRange:
dataWithCapacity:
appendData:
apply12dBGain:
numSamples
subChunkFrom:numSamples:
initWithXPCObject:
chunkForChannel:
dataWithRemoteVADWithScaleFactor:numAudioSamplesPerRemoteVAD:
remoteVADAvailable
subChunkFrom:numSamples:forChannel:
remoteVADSubChunkFrom:numSamples:numAudioSamplesPerRemoteVAD:
gainCompensatedChunk
skipSamplesAtStartSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
data
numChannels
sampleByteDepth
startSampleCount
hostTime
remoteVAD
setRemoteVAD:
_data
_numChannels
_numSamples
_sampleByteDepth
_startSampleCount
_hostTime
_remoteVAD
addObserver:
_notificationKey
_didInstalledNewAsset
enumerateObserversInQueue:
CSSpeakerRecognitionAssetDownloadMonitor:didInstallNewAsset:assetProviderType:
trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:
trialAssetMonitor
setTrialAssetMonitor:
_lastUpdatedAssetType
_trialAssetMonitor
weakObjectsHashTable
addObject:
removeObject:
objectForKey:
count
doubleValue
numberWithDouble:
enableAssertionReceived
disableAssertionReceived
countByEnumeratingWithState:objects:count:
CSVoiceTriggerXPCServiceProxy:bypassPhraseSpotter:
CSVoiceTriggerXPCServiceProxy:bypassRaiseToSpeak:
processInfo
systemUptime
enableVoiceTrigger:withAssertion:timestamp:
setPhraseSpotterBypassing:timeout:
setRaiseToSpeakBypassing:timeout:
fetchVoiceTriggerHeartBeatMetrics
notifyVoiceTriggeredSiriSessionCancelled
notifyServiceConnectionLost
fetchVoiceTriggerStats
activationAssertions
setActivationAssertions:
isPhraseSpotterBypassed
setIsPhraseSpotterBypassed:
isRaiseToSpeakBypassed
setIsRaiseToSpeakBypassed:
observers
setObservers:
_isPhraseSpotterBypassed
_isRaiseToSpeakBypassed
_activationAssertions
_observers
audioStream
streamProvider
isStreaming
submitAudioIssueReport:
name
setAudioStream:
setRecordContext:
_setAllowMixableAudioWhileRecording:
notifyWillStopStream:
notifyDidStopStream:withEventUUID:
notifyDidStopStream:
stopAudioStreamWithOption:completion:
_handleSetCurrentConextMessage:messageBody:client:
_handleAudioStreamRequestMessage:messageBody:client:
_handleAudioStreamPrepareMessage:messageBody:client:
_handleStartAudioStreamMessage:messageBody:client:
_handleStopAudioStreamMessage:messageBody:client:
_handleVoiceTriggerInfoMessage:messageBody:client:
_handleIsRecordingMessage:messageBody:client:
_handleRecordRouteMessage:messageBody:client:
_handleRecordDeviceInfo:messageBody:client:
_handleRecordSettings:messageBody:client:
_handleIsNarrowband:messageBody:client:
_handlePlaybackRouteMessage:messageBody:client:
audioStreamProviding
setCurrentContext:error:
audioStreamWithRequest:streamName:error:
streamRequest
prepareAudioStreamSyncWithRequest:error:
notifyWillStartStreamWithContext:option:
UUID
notifyWillStartStreamWithContext:audioProviderUUID:option:
UUIDString
notifyDidStartStreamWithContext:successfully:option:withEventUUID:
notifyDidStartStreamWithContext:successfully:option:
notifyDidStartStreamWithContext:audioProviderUUID:successfully:option:
startAudioStreamWithOption:completion:
shouldRunVTOnCS
voiceTriggerInfo
rtsTriggerInfo
triggerInfoForContext:completion:
setLastVoiceTriggerInfo:
setLastRTSTriggerInfo:
lastVoiceTriggerInfo
_cs_xpcObject
lastRTSTriggerInfo
isRecording
recordRoute
recordDeviceInfo
recordSettings
isNarrowBand
playbackRoute
_sendDelegateMessageToClient:
sendMessageToClient:
setAllowMixableAudioWhileRecording:error:
audioStreamProvider:didStopStreamUnexpectly:
audioStreamProvider:audioBufferAvailable:
audioStreamProvider:audioChunkForTVAvailable:
audioStreamProvider:didHardwareConfigurationChange:
setAudioStreamProvidingForProxy:
setInitialContext:
triggerInfoProviding
setTriggerInfoProviding:
streamClientType
setStreamClientType:
recordContext
recordEventUUID
setRecordEventUUID:
_audioStreamProviding
_triggerInfoProviding
_streamClientType
_audioStream
_lastVoiceTriggerInfo
_lastRTSTriggerInfo
_recordContext
_recordEventUUID
utteranceFileASBD
_closeAudioFile
fileURLWithPath:isDirectory:
startRecording
appendAudioData:
stopRecording
_audioFile
_asbd
_url
_audioLength
_deregisterAudioSessionNotifications
_startMonitoring
opaqueSessionID
audioSessionInfoProvider:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:
_registerAudioSessionNotifications
audioSessionInfoProvider:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:
removeObserver:name:object:
_handleInterruption:
addObserver:selector:name:object:
_audioRouteChanged:
audioSessionInfoProvider:didReceiveAudioSessionInterruptionNotificationWithUserInfo:
userInfo
audioSessionInfoProvider:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:
_registerInterruptionNotification
_registerAudioRouteChangeNotification
audioSessionID
CSAudioServerCrashMonitorDidReceiveServerCrash:
CSAudioServerCrashMonitorDidReceiveServerRestart:
sessionInfoQueue
setSessionInfoQueue:
_sessionInfoQueue
_sharedAudioLoggingQueue
fileURL
URLByDeletingLastPathComponent
path
sharedPreferences
assistantAudioFileLogDirectory
containsString:
defaultManager
removeItemAtURL:error:
inputRecordingNumberOfChannels
inputRecordingSampleRate
inputRecordingSampleByteDepth
seekToEndOfFile
seekToFileOffset:
readDataOfLength:
getBytes:length:
initWithData:encoding:
offsetInFile
writeData:
fileLoggingIsEnabled
_createAudioFileWriterForOpportuneSpeakListenerWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterForPHSTrainingWithLoggingDir:inputFormat:outputFormat:
_createAudioFileWriterWithLoggingDir:withLoggingUUID:inputFormat:outputFormat:
_getDateLabel
stringWithFormat:
stringByAppendingPathComponent:
fileURLWithPath:
getNumElementInBitset:
lpcmNonInterleavedASBDWithSampleRate:numberOfChannels:
lpcmInterleavedASBDWithSampleRate:numberOfChannels:
initWithURL:inputFormat:outputFormat:channelBitset:
isAdBlockerAudioLoggingEnabled
voiceTriggerAudioLogDirectory
_createAudioFileWriterForAdBlockerWithLoggingDir:inputFormat:outputFormat:
pruneLogFiles
URLWithString:
initWithURL:inputFormat:outputFormat:
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
removeLogFilesInDirectory:matchingPattern:beforeDays:
maxNumGradingFiles
pruneNumberOfGradingFilesTo:
maxNumLoggingFiles
pruneNumberOfLogFilesTo:
arrayWithObjects:
clearLogFilesInDirectory:matchingPattern:exceedNumber:
cleanupOrphanedGradingFiles
arrayWithObjects:count:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
absoluteString
lastPathComponent
stringByDeletingPathExtension
setObject:forKeyedSubscript:
removeObjectForKey:
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
enumerateKeysAndObjectsUsingBlock:
isAttentiveSiriAudioLoggingEnabled
assistantLogDirectory
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
generateDeviceAudioLogging:speechId:
_readDataFromFileHandle:toFileHandle:
createAudioFileWriterForOpportuneSpeakListenerWithInputFormat:outputFormat:
createAudioFileWriterForPHSTrainingWithInputFormat:outputFormat:
createAudioFileWriterForRemoteVADWithInputFormat:outputFormat:withLoggingUUID:
createAudioFileWriterWithInputFormat:outputFormat:withLoggingUUID:
createSelectiveChannelAudioFileWriterWithChannelBitset:
createAudioFileWriterForAdBlockerWithInputFormat:outputFormat:
removeLogFilesOlderThanNDays:
audioFileWriterForAttentiveSiri
integerValue
didTransitFrom:to:by:
didIgnoreEvent:from:
initWithInitialState:
addTransitionFrom:to:for:
performTransitionForEvent:
currentState
initialState
setInitialState:
transitions
setTransitions:
_currentState
_initialState
_transitions
initWithAudioURL:withScaleFactor:outASBD:
audioURL
outASBD
setOutASBD:
fFile
setFFile:
scaleFactor
_scaleFactor
_audioURL
_fFile
_addSmartSiriVolumeEnabledConditions
_subscribeEventMonitors
subscribeEventMonitor:
getAudioSessionState
addConditions:
sharedConnection
_checkSiriRestrictedOnLockScreen
effectiveBoolValueForSetting:
_notifyObserver:withRestricted:
CSSiriRestrictionOnLockScreenMonitor:didReceiveRestrictionChanged:
_didReceiveRestrictionChanged:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
isRestricted
_didReceiveRestrictionChangedInQueue:
_isRestricted
initWithRecordType:deviceId:
setAlwaysUseRemoteBuiltInMic:
contextForServerInvoke
recordTypeFromAVVCActivationMode:
setType:
copyWithZone:
setDeviceId:
_createAVVCContextWithType:deviceId:
avvcActivationMode:
type
deviceId
isBuiltInVoiceTriggered
isHearstVoiceTriggered
isJarvisVoiceTriggered
isHearstDoubleTapTriggered
string
recordTypeString:
appendFormat:
contextForHearstVoiceTriggerWithDeviceId:
contextForRemoraVoiceTriggerWithDeviceId:
contextForOpportuneSpeakerListener
contextForBuiltInVoiceTrigger
contextForJarvisWithDeviceId:
contextForBTLEWithDeviceId:
contextForVoiceTriggerTraining
contextForHomeButton
defaultContext
initWithAVVCContext:
avvcContext
isVoiceTriggered
isTriggeredFromHearst
isRTSTriggered
isHomePressed
isServerInvoked
isStarkTriggered
isDictation
alwaysUseRemoteBuiltInMic
_alwaysUseRemoteBuiltInMic
_type
_deviceId
pingpong:completion:
createAudioInjectionDeviceWithType:deviceName:deviceID:productID:completion:
injectAudio:toDeviceWithUUID:withScaleFactor:completion:
connectDeviceWithUUID:completion:
disconnectDeviceWithUUID:completion:
primaryInputDeviceUUIDWithCompletion:
interfaceWithProtocol:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
isFirstUnlocked
isEnabled
_performPostBuildInstallWithCompletion:
numberWithLong:
sharedService
registerPostBuildInstallService
sharedController
defaultController
dataWithBytes:length:
array
numberWithUnsignedLong:
initWithZeroWindowSize:approxAbsSpeechThreshold:numHostTicksPerAudioSample:
filterZerosInAudioPacket:atBufferHostTime:filteredPacket:
endAudioAndFetchAnyTrailingZerosPacket:
metrics
.cxx_construct
_audioZeroFilterImpl
addVTRejectEntry:truncateData:
addVTAcceptEntryAndSubmit:
runRecognition
endAudio
_recognizeWavData:length:
_previousUtteranceTokens
_triggerTokenList
_useKeywordSpotting
start
setCachedAsset:
cachedAsset
defaultFallbackModelIfNil:
_getVoiceTriggerAssetFromAssetManager:
sharedManager
assetForCurrentLanguageOfType:completion:
isEqualAsset:
notifyObservers:
_checkNewAssetAvailablity
CSVoiceTriggerAssetDownloadMonitor:didInstallNewAsset:
CSFirstUnlockMonitor:didReceiveFirstUnlock:
CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:
getVoiceTriggerAsset:
_cachedAsset
setSkipAlertBehavior:
noAlertOption
setRequestHistoricalAudioDataWithHostTime:
requestHistoricalAudioDataSampleCount
setRequestHistoricalAudioDataSampleCount:
setStartRecordingHostTime:
startRecordingSampleCount
setStartRecordingSampleCount:
useOpportunisticZLL
setUseOpportunisticZLL:
requireSingleChannelLookup
setRequireSingleChannelLookup:
selectedChannel
setSelectedChannel:
_requestHistoricalAudioDataWithHostTime
_requestHistoricalAudioDataSampleCount
_useOpportunisticZLL
_skipAlertBehavior
_requireSingleChannelLookup
_selectedChannel
_startRecordingHostTime
_startRecordingSampleCount
_startAlertBehavior
_stopAlertBehavior
_errorAlertBehavior
unsignedIntValue
floatValue
_update
didTriggerWithSecondChanceEnabled:
initWithPhraseInfoDict:useKeywordSpotting:
updateWithNdapiResult:
updateWithCtcScore:
effectiveThresholdWithSecondChanceEnabled:
hasNearMissTriggerWithSecondChanceEnabled:
dictionaryRepresentationWithSecondChanceEnabled:
phId
setPhId:
phStr
setPhStr:
threshold
setThreshold:
secondChanceThreshold
setSecondChanceThreshold:
loggingThreshold
setLoggingThreshold:
useKwdSpotting
setUseKwdSpotting:
recognizerScoreScaleFactor
setRecognizerScoreScaleFactor:
recognizerThresholdOffset
setRecognizerThresholdOffset:
satThreshold
setSatThreshold:
tdsrSatCombinedSATThreshold
setTdsrSatCombinedSATThreshold:
ndapiScore
setNdapiScore:
ctcCheckerScore
setCtcCheckerScore:
combinedScore
setCombinedScore:
isMaximized
setIsMaximized:
ndapiResult
setNdapiResult:
_useKwdSpotting
_isMaximized
_threshold
_secondChanceThreshold
_loggingThreshold
_recognizerScoreScaleFactor
_recognizerThresholdOffset
_satThreshold
_tdsrSatCombinedSATThreshold
_ndapiScore
_ctcCheckerScore
_combinedScore
_phId
_phStr
_ndapiResult
VTSecondPassCategoryForFirstPassSource:
supportedVTPhrasesInfoForCategory:
dictionaryWithCapacity:
VTSecondPassUseKeywordSpottingFrom:
objectAtIndexedSubscript:
arrayWithCapacity:
initWithAsset:firstPassSource:
updateWithNdapiResults:
updateWithCtcCheckerResults:
getTriggeredPhraseWithSecondChanceEnabled:
getNearMissPhraseWithSecondChanceEnabled:
bestScoringPhrase
phraseMap
setPhraseMap:
triggeredPhrase
setTriggeredPhrase:
_phraseMap
_triggeredPhrase
initWithMachServiceName:options:
setRemoteObjectInterface:
initWithServiceName:
getCoreSpeechXPCConnection
setInvalidationHandler:
resume
remoteObjectProxy
installedVoiceTriggerAssetForLanguageCode:completion:
fetchRemoteVoiceTriggerAssetForLanguageCode:completion:
voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:
voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:
getCoreSpeechServiceConnection
requestUpdatedSATAudio:
getFirstPassRunningMode:
voiceTriggerRTModelForVersion:minorVersion:downloadedModels:preinstalledModels:completion:
requestUpdatedSATAudio
getFirstPassRunningMode
assetChangeMonitorDidDetectAssetChange:
sharedMonitor
startMonitoring
notifyVoiceTriggerAssetChanged
_didReceiveMediaserverNotification:
_notifyObserver:withMediaserverState:
audioServerCrashEventProvidingLostMediaserverd
_mediaserverdDidRestart
serverState
setServerState:
_serverState
sendXPCClientType
disconnect
_sendMessageAndReplySync:connection:error:
setAudioSessionProvidingDelegate:
setAudioAlertProvidingDelegate:
_cs_initWithXPCObject:
initWithAudioStreamProvider:streamName:streamRequest:
createPrepareAudioStreamMessageWithRequest:
createStartAudioStreamMessageWithOption:
createStopAudioStreamMessage
_handleListenerMessage:
_handleSessionProvidingDelegateMessageBody:
_handleStreamProvidingDelegateMessageBody:
_handleAlertProvidingDelegateMessageBody:
_handleSessionInfoProvidingDelegateMessageBody:
_handleListenerDisconnectedError:
CSXPCClient:didDisconnect:
_handleAlertProvidingDelegateDidFinishAlertPlayback:
audioAlertProvidingDelegate
audioAlertProvidingDidFinishAlertPlayback:ofType:error:
_handleSessionProvidingDelegateBeginInterruption:
_handleSessionProvidingDelegateBeginInterruptionWithContext:
_handleSessionProvidingDelegateEndInterruption:
_handleSessionProvidingDelegateWillSetAudioSession:
_handleSessionProvidingDelegateDidSetAudioSession:
_handleSessionProvidingDelegateStreamHandleIdInvalidation:
_handleSessionProvidingDelegateDidChangeContext:
audioSessionProvidingDelegate
audioSessionProviderBeginInterruption:
audioSessionProviderBeginInterruption:withContext:
audioSessionProviderEndInterruption:
audioSessionProvider:willSetAudioSessionActive:
audioSessionProvider:didSetAudioSessionActive:
audioSessionProvider:providerInvalidated:
audioSessionProvider:didChangeContext:
_handleSessionInfoProvidingDelegateInterruptionNotification:
_handleSessionInfoProvidingDelegateRouteChangeNotification:
_handleSessionInfoProvidingDelegateMediaServicesWereLostNotification:
_handleSessionInfoProvidingDelegateMediaServicesWereResetNotification:
_handleStreamProvidingDelegateDidStopUnexpectly:
_handleStreamProvidingDelegateChunkAvailable:
_handleStreamProvidingDelegateChunkForTVAvailable:
_handleStreamProvidingDelegateHardwareConfigChange:
createAudioStreamMessageWithRequest:
setAudioSessionDelegate:
prewarmAudioSessionWithError:
activateAudioSessionWithReason:dynamicAttribute:bundleID:error:
duckOthersOption
setDuckOthersOption:
enableMiniDucking:
enableSmartRoutingConsideration:
audioStreamWithRequest:streamName:completion:
prepareAudioStreamSync:request:error:
prepareAudioStream:request:completion:
startAudioStream:option:completion:
stopAudioStream:option:completion:
audioChunkFrom:to:
audioChunkToEndFrom:
audioChunkToEndFrom:channelIdx:
saveRecordingBufferFrom:to:toURL:
saveRecordingBufferToEndFrom:toURL:
holdAudioStreamWithDescription:timeout:
cancelAudioStreamHold:
setAudioAlertDelegate:
setAlertSoundFromURL:forType:
playAlertSoundForType:
playRecordStartingAlertAndResetEndpointer
alertStartTime
configureAlertBehavior:
setMeteringEnabled:
updateMeters
peakPowerForChannel:
averagePowerForChannel:
audioMetric
initWithType:
prepareAudioProviderWithContext:clientType:error:
pingpong:
audioStreamProvidingDelegate
setAudioStreamProvidingDelegate:
audioSessionInfoObservers
setAudioSessionInfoObservers:
xpcClientType
setXpcClientType:
_audioSessionProvidingDelegate
_audioStreamProvidingDelegate
_audioAlertProvidingDelegate
_UUID
_audioSessionInfoObservers
_xpcClientType
receiveOpportuneSpeakListenerStart
receiveOpportuneSpeakListenerStop
startListenWithOption:completion:
stopListenWithCompletion:
opportuneSpeakListener:hasRemoteVADAvailable:
opportuneSpeakListener:hasVADAvailable:
opportuneSpeakListener:didStopUnexpectly:
listener
initializeTimerState
timerState
_timerFiringState
opportuneSpeakEventMonitor:didStreamStateChanged:
_notifyStopOpportuneSpeakWithDelay:
opportuneSpeakBehaviorMonitor:willStartStreamWithContext:audioProviderUUID:option:
opportuneSpeakBehaviorMonitor:didStartStreamWithContext:audioProviderUUID:successfully:option:
opportuneSpeakBehaviorMonitor:willStopStream:
opportuneSpeakBehaviorMonitor:didStopStream:
audioProviderUUID
audioRecordContext
isOpportuneSpeakListening
setIsOpportuneSpeakListening:
setAudioProviderUUID:
setAudioRecordContext:
token
setToken:
_isOpportuneSpeakListening
_audioProviderUUID
_audioRecordContext
_token
_checkPhraseSpotterEnabled
_notifyObserver:withEnabled:
CSPhraseSpotterEnabledMonitor:didReceiveEnabled:
phraseSpotterEnabled
_didReceivePhraseSpotterSettingChangedInQueue:
_phraseSpotterEnabledDidChange
_isPhraseSpotterEnabled
voiceTriggerAssetHandler:didChangeCachedAsset:
sharedHandler
catAssetManagerDelegate:withVersion:withError:
fetchRemoteCATAssetForResource:withNameOfFile:completion:
getCATXPCConnection
downloadForManifest:withAssetName:
inputRecordingSampleRateNarrowBand
inputRecordingBytesPerPacket
inputRecordingFramesPerPacket
inputRecordingBytesPerFrame
inputRecordingSampleBitDepth
inputRecordingIsFloat
lpcmInt16ASBD
lpcmInt16NarrowBandASBD
lpcmFloatASBD
opusASBD
opusNarrowBandASBD
speexASBD
lpcmInterleavedASBD
lpcmInterleavedWithRemoteVADASBD
lpcmMonoInterleavedWithRemoteVADASBD
lpcmNonInterleavedASBD
lpcmNonInterleavedWithRemoteVADASBD
lpcmMonoNonInterleavedWithRemoteVADASBD
aiffFileASBD
generateEmptyPHash:writeFile:
notifyHashlessTrigger:
setLastHash:
lastHash
generatePHashFromVoiceTriggerInfo:writeFile:
pHash:length:
signalEstimate
setSignalEstimate:
signalFractional
setSignalFractional:
_signalFractional
_signalEstimate
_handleNewRemoteConnection:
machXPCConnection:hasEntitlement:
initWithConnection:
activateConnection
CSVoiceTriggerXPCConnectionReceivedClientError:clientError:client:
listen
setListener:
connections
setConnections:
_listener
_connections
setName:
_name
getNumberForKey:category:default:
unsignedLongLongValue
SSVNoiseLevelChannelBitset
SSVLKFSChannelBitset
SSVEnergyBufferSize
numberWithUnsignedInt:
SSVNoiseLowerPercentile
SSVNoiseUpperPercentile
SSVLKFSLowerPercentile
SSVLKFSUpperPercentile
SSVNoiseTimeConstant
SSVNoiseMicSensitivityOffset
SSVLKFSTimeConstant
SSVLKFSMicSensitivityOffset
SSVNoiseTTSMappingInputRangeLow
SSVNoiseTTSMappingInputRangeHigh
SSVNoiseTTSMappingOutputRangeLow
SSVNoiseTTSMappingOutputRangeHigh
SSVLKFSTTSMappingInputRangeLow
SSVLKFSTTSMappingInputRangeHigh
SSVLKFSTTSMappingOutputRangeLow
SSVLKFSTTSMappingOutputRangeHigh
SSVUserOffsetInputRangeLow
SSVUserOffsetInputRangeHigh
SSVUserOffsetOutputRangeLow
SSVUserOffsetOutputRangeHigh
SSVTTSVolumeLowerLimitDB
SSVTTSVolumeUpperLimitDB
SSVNoiseWeight
SSVDistanceChannelBitset
SSVNoiseMicSensitivityOffsetDeviceSimple
SSVParameterDirectionary
SSVDefaultNoiseChannelCount
SSVDefaultLKFSChannelCount
SSVDefaultDistanceChannelCount
getSSVDeviceType
programmableAudioInjectionEnabled
initWithMachServiceName:
setExportedInterface:
xpcConnection:hasEntitlement:
invalidate
setExportedObject:
listener:shouldAcceptNewConnection:
_exportedObject
containsValueForKey:
decodeObjectForKey:
encodeObject:forKey:
stringByAppendingString:
base64EncodedStringWithOptions:
substringToIndex:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithData:hash:locale:digest:signature:certificate:
initWithHash:locale:
initWithData:hash:locale:
builtInRTModelDictionary
modelData
modelLocale
modelHash
digest
signature
certificate
_modelData
_modelLocale
_modelHash
_digest
_signature
_certificate
setStreamState:
_holdRecordingExceptionIfNeeded:
_streamStateName:
setProviderDelegate:
audioStreamHandleId
isRecordingWithStreamHandleId:
setCurrentContext:streamHandleId:error:
_prepareAudioStreamSync:request:error:
requiresHistoricalBuffer
historicalBufferRequestStreams
_createCircularBufferIfNeeded
_audioStreamWithRequest:streamName:error:
setStreamRequest:
_handleAudioSystemFailure
prepareAudioStreamRecord:streamHandleId:error:
voiceTriggerInCoreSpeech
setVoiceTriggerInfo:
inputRecordingDurationInSecs
initWithNumChannels:recordingDuration:samplingRate:
_startAudioStream:option:completion:
_prepareAudioStream:request:completion:
startPendingOnStoppingStreams
startPendingOnStoppingStreamToCompletionDict
containsObject:
sampleCount
setLastForwardedSampleCount:
_didPlayStartAlertSoundForSiri:audioStream:
alertPlaybackFinishWaitingStreams
alertPlaybackFinishWaitingCompletions
_scheduleAlertFinishTimeout:
isSiri
_switchToRecordingMode
circularBufferStartHostTime
circularBufferStartSampleCount
setScheduledFutureSample:
startPendingStreams
pendingStartCompletions
_holdRecordingTransactionIfNeeded
initWithSampleRate:
recordingSampleRateWithStreamHandleId:
resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:
startAudioStreamWithOption:streamHandleId:error:
_scheduleDidStartRecordingDelegateWatchDog
_resetCircularBufferStartTime
setCircularBufferStartHostTime:
setCircularBufferStartSampleCount:
supportOpportunisticZLL
streams
setRecordMode:streamHandleId:error:
_clearDidStartRecordingDelegateWatchDog
removeAllObjects
_releaseRecordingTransactionIfNeeded
flush
_clearDidStopRecordingDelegateWatchDog
_preEpilogueAudioStream
stopPendingStreams
pendingStopCompletions
_postEpilogueAudioStream
_shouldHandleStartPendingOnStopping:withStopReason:
startStreamOption
objectEnumerator
_stopAudioStream:option:completion:
_cs_isHashTableEmpty
_shouldStopRecording
_scheduleDidStopRecordingDelegateWatchDog
stopAudioStreamWithStreamHandleId:error:
_switchToListeningMode
_audioChunkFrom:to:
_audioChunkFrom:to:channelIdx:
copySamplesFrom:to:
copySamplesFrom:to:channelIdx:
_saveRecordingBufferFrom:to:toURL:
saveAudioChunck:toURL:
streamHolders
recordRouteWithStreamHandleId:
recordDeviceInfoWithStreamHandleId:
recordSettingsWithStreamHandleId:
setSessionDelegate:
prewarmAudioSessionWithStreamHandleId:error:
_activateAudioSessionWithReason:error:
activateAudioSessionWithReason:streamHandleId:error:
_deactivateAudioSession:error:
enableSmartRoutingConsiderationForStream:enable:
setAlertDelegate:
playRecordStartingAlertAndResetEndpointerFromStream:
willBeepWithRecordRoute:playbackRoute:
_isVoiceTriggerInfoAvailableLocally:
_processAudioBuffer:remoteVAD:atTime:
_handleDidStartAudioStreamWithResult:error:
_handleDidStopAudioStreamWithReason:
sessionDelegate
providerDelegate
audioProviderInvalidated:streamHandleId:
bufferLength
lastForwardedSampleCount
scheduledFutureSample
_fetchHistoricalAudioAndForwardToStream:remoteVAD:
addSamples:numSamples:atHostTime:
processBuffer:atTime:
audioInjectionEnabled
isNarrowBandWithStreamHandleId:
_didReceiveFinishStartAlertPlaybackAt:
alertDelegate
willDestroy
initWithDescription:
isSessionCurrentlyActivated
beginAnnounceMessageException:reason:
endAnnounceMessageException:reason:
_schduleDidStartRecordingDelegateWatchDogWithToken:
_scheduleDidStopRecordingDelegateWatchDog:
audioPreprocessor:hasAvailableBuffer:atTime:
initWithAudioStreamHandleId:audioRecorder:
setAudioProviderDelegate:
_tearDownCircularBufferIfNeeded
notifyProviderContextChanged
recordQueue
setRecordQueue:
loggingQueue
setLoggingQueue:
streamState
setStartPendingStreams:
setStartPendingOnStoppingStreams:
setAlertPlaybackFinishWaitingStreams:
setStreams:
setStopPendingStreams:
setPendingStartCompletions:
setAlertPlaybackFinishWaitingCompletions:
setPendingStopCompletions:
setStartPendingOnStoppingStreamToCompletionDict:
setStreamHolders:
setHistoricalBufferRequestStreams:
circularBuffer
setCircularBuffer:
lastAudioRecorderContext
setLastAudioRecorderContext:
audioSystemRecovering
setAudioSystemRecovering:
audioPreprocessor
setAudioPreprocessor:
recordingTransaction
setRecordingTransaction:
recordingWillStartGroup
setRecordingWillStartGroup:
waitingForAlertFinish
setWaitingForAlertFinish:
setAudioStreamHandleId:
alertPlaybackFinishTimeoutToken
setAlertPlaybackFinishTimeoutToken:
startRecordingWatchDogToken
setStartRecordingWatchDogToken:
stopRecordingWatchDogToken
setStopRecordingWatchDogToken:
_audioSystemRecovering
_waitingForAlertFinish
_recordQueue
_loggingQueue
_streamState
_startPendingStreams
_startPendingOnStoppingStreams
_alertPlaybackFinishWaitingStreams
_streams
_stopPendingStreams
_pendingStartCompletions
_alertPlaybackFinishWaitingCompletions
_pendingStopCompletions
_startPendingOnStoppingStreamToCompletionDict
_providerDelegate
_sessionDelegate
_streamHolders
_historicalBufferRequestStreams
_circularBuffer
_alertDelegate
_lastAudioRecorderContext
_audioPreprocessor
_recordingTransaction
_recordingWillStartGroup
_audioStreamHandleId
_alertPlaybackFinishTimeoutToken
_startRecordingWatchDogToken
_stopRecordingWatchDogToken
_circularBufferStartHostTime
_circularBufferStartSampleCount
initWithAppBundleIdentifier:
initWithTaskDeliverer:
initWithMessage:makeAppFrontmost:
handleSiriRequest:deliveryHandler:completionHandler:
launchSiriDebugAppWithMessage:
allowVoiceTriggerAssetDownloading
setAllowVoiceTriggerAssetDownloading:
allowEndpointAssetDownloading
setAllowEndpointAssetDownloading:
allowLanguageDetectorAssetDownloading
setAllowLanguageDetectorAssetDownloading:
allowAdBlockerAssetDownloading
setAllowAdBlockerAssetDownloading:
allowSpeakerRecognitionAssetDownloading
setAllowSpeakerRecognitionAssetDownloading:
_allowVoiceTriggerAssetDownloading
_allowEndpointAssetDownloading
_allowLanguageDetectorAssetDownloading
_allowAdBlockerAssetDownloading
_allowSpeakerRecognitionAssetDownloading
_sharedDisposeLoggingQueue
dateWithTimeIntervalSinceNow:
distantFuture
getResourceValue:forKey:error:
compare:
URLsInDirectory:matchingPattern:completion:
objectAtIndex:
_sortedURLsInDirectory:matchingPattern:completion:
_contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:
sortedArrayUsingComparator:
regularExpressionWithPattern:options:error:
numberOfMatchesInString:options:range:
predicateWithBlock:
filteredArrayUsingPredicate:
initWithTimeout:
setAsset:
_addVoiceTriggerEnabledConditions
isPresent
isSpringboardStarted
batteryState
isScreenLocked
isSoftwareUpdateCheckingRunning
startObserving
getLastBiometricMatchEvent:atTime:
getBiometricMatchResultForTriggerTimeStamp:
_startObservingSpeechDetectionVADPresence
handleSpeechDetectionVADPresentChange:
_systemControllerDied:
phraseId
setPhraseId:
bestPhrase
setBestPhrase:
isEarlyWarning
setIsEarlyWarning:
isRescoring
setIsRescoring:
samplesAtFire
setSamplesAtFire:
setStartSampleCount:
_isEarlyWarning
_isRescoring
_phraseId
_bestPhrase
_samplesAtFire
initWithConfigPath:resourcePath:
_resetStartAnalyzeTime
resetBest
_setStartAnalyzeTime:
analyzeWavFloatData:numSamples:
analyzeWavData:numSamples:
getAnalyzedResultForPhraseId:
sampleFed
isMultiPhraseVTEnabled
getAnalyzedMpVtResults
keywordAnalyzerNDAPI:hasMpVtResultsAvailable:forChannel:
getAnalyzedResult
keywordAnalyzerNDAPI:hasResultAvailable:forChannel:
earlyWarning
_keywordAnalyzerNDAPIResultForPhraseId:withNovDetectorResult:
numResultsAvailable
setObject:atIndexedSubscript:
getSuperVectorWithEndPoint:
getOptionValue:
getThreshold
getLoggingThreshold
getRejectLoggingThreshold
activePhraseId
setActivePhraseId:
_novDetector
_startAnalyzeSampleCount
_isStartSampleCountMarked
_lastSampleFed
_sampleFedWrapAroundOffset
_activePhraseId
getSiriLanguageWithFallback:
createRTModelWithLocale:
hearstRTModelWithMajorVersion:minorVersion:locale:
resourcePath
fileExistsAtPath:
dataWithContentsOfFile:
_sha1:
substringWithRange:
_sha256:
localeMapWithName:
stringWithCapacity:
RTModelWithFallbackLanguage:
latestHearstRTModelForLocale:
hearstRTModelLocaleMap
jarvisRTModelLocaleMap
isDefaultInputBuiltInMic
isDefaultOutputBultInSpeaker
defaultOutputAudioDeviceID
wakeGestureTimestamp
dismissalTimestamp
hostTimeToSeconds:
isTriggerHandheld
setWakeGestureTimestamp:
setDismissalTimestamp:
_wakeGestureTimestamp
_dismissalTimestamp
_fetchHearstConnectionState
_notifyHearstConnectionState:
_fetchJarvisConnectionState
_notifyJarvisConnectionState:
CSAudioRouteChangeMonitor:didReceiveAudioRouteChangeEvent:
getHearstConnected:
hearstConnected
getJarvisConnected:
jarvisConnected
preferredExternalRouteDidChange:
carPlayAudioRouteDidChange:
_isHearstConnected
_isJarvisConnected
streamID
startHostTime
startAlert
stopAlert
stopOnErrorAlert
skipAlert
remoteVoiceActivityAvailable
remoteVoiceActivityVAD
remoteVoiceActivityVADBuffer
_voiceControllerWithError:
_destroyVoiceController
_audioRecorderDidStartRecordingSuccessfully:streamHandleID:error:
setRecordDelegate:
initWithError:
setSynchronousCallbackEnabled:
date
avvcContextSettings
setContext:error:
timeIntervalSinceDate:
setContextForStream:forStream:error:
_getRecordSettingsWithRequest:
_createDeInterleaverIfNeeded
inputRecordingBufferDuration
initWithStreamID:settings:bufferDuration:
prepareRecordForStream:error:
_logResourceNotAvailableErrorIfNeeded:
_shouldInjectAudio
_needResetAudioInjectionIndex:
audioInjectionFilePath
initWithURL:
setRecordBufferDuration:
lpcmRecordSettings
prepareRecording:
_startAudioStreamForAudioInjection
startRecordForStream:error:
stopRecordForStream:error:
getCurrentSessionState
hasRemoteBuiltInMic
getCurrentStreamState:
getRecordDeviceInfoForStream:
initWithAVVCRecordDeviceInfo:
getRecordSettingsForStream:
isUpsamplingSourceAudio
activateAudioSessionForStream:isPrewarm:error:
_shouldLogResourceNotAvailableError
activateAudioSessionForStream:isPrewarm:recordMode:error:
_convertDeactivateOption:
deactivateAudioSessionWithOptions:
setIAmTheAssistant:error:
enableSmartRoutingConsiderationForStream:enable:error:
voiceTriggerEventInfo
_updateLanguageCodeForRemoteVTEIResult:
mutableCopy
runningVoiceTriggerOnMac
boolValue
channels
packetDescriptionCount
bytesDataSize
initWithCapacity:
packetDescriptions
setPackets:
updateMeterForStream:
getPeakPowerForStream:forChannel:
getAveragePowerForStream:forChannel:
setPeakPower:
setAvgPower:
setTimeStamp:
setNumChannels:
streamDescription
setAudioFormat:
setStreamHandleID:
_deinterleaveBufferIfNeeded:force:
_compensateChannelDataIfNeeded:receivedNumChannels:
timeStamp
_processAudioChain:audioStreamHandleId:remoteVAD:atTime:
opusDecoder
addPackets:audioStreamHandleId:remoteVAD:timestamp:receivedNumChannels:
initWithLength:
replaceBytesInRange:withBytes:
playAlertSoundForType:overrideMode:
_processAudioBuffer:audioStreamHandleId:
_audioRecorderDidStopRecordingForReason:streamHandleID:
audioSessionEventProvidingWillSetAudioSessionActive:
audioSessionEventProvidingDidSetAudioSessionActive:
shouldDeinterleaveAudioOnCS
useCustomizedRecordSettings
defaultRequestWithContext:
audioFormat
sampleRate
lpcmBitDepth
lpcmIsFloat
numberOfChannels
encoderBitRate
createSharedAudioSession
voiceControllerDidStartRecording:successfully:
voiceControllerDidStartRecording:successfully:error:
voiceControllerDidStopRecording:forReason:
voiceControllerDidDetectStartpoint:
voiceControllerDidDetectEndpoint:ofType:
voiceControllerDidDetectEndpoint:ofType:atTime:
voiceControllerEncoderErrorDidOccur:error:
voiceControllerDidFinishAlertPlayback:ofType:error:
voiceControllerDidFinishAlertPlayback:withSettings:error:
voiceControllerRecordHardwareConfigurationDidChange:toConfiguration:
voiceControllerBeginRecordInterruption:
voiceControllerBeginRecordInterruption:withContext:
voiceControllerEndRecordInterruption:
voiceControllerMediaServicesWereLost:
voiceControllerMediaServicesWereReset:
voiceControllerWillSetAudioSessionActive:willActivate:
voiceControllerDidSetAudioSessionActive:isActivated:
voiceControllerRecordBufferAvailable:buffer:
voiceControllerLPCMRecordBufferAvailable:buffer:
voiceControllerWirelessSplitterRouteAvailable:devices:
voiceControllerDidStartRecording:forStream:successfully:error:
voiceControllerDidStopRecording:forStream:forReason:
voiceControllerAudioCallback:forStream:buffer:
voiceControllerStreamInvalidated:forStream:
audioDecoderDidDecodePackets:audioStreamHandleId:buffer:remoteVAD:timestamp:receivedNumChannels:
audioFileReaderBufferAvailable:buffer:atTime:
audioFileReaderDidStartRecording:successfully:error:
audioFileReaderDidStopRecording:forReason:
setAudioServerCrashEventDelegate:
setAudioSessionEventDelegate:
initWithQueue:error:
configureAlertBehavior:audioStreamHandleId:
_shouldUseRemoteRecordForContext:
_shouldUseRemoteBuiltInMic:
voiceControllerCreationQueue
setVoiceControllerCreationQueue:
crashEventDelegate
setCrashEventDelegate:
sessionEventDelegate
setSessionEventDelegate:
_voiceController
_deinterleaver
_interleavedABL
_pNonInterleavedABL
_remoteRecordClient
_latestContext
_shouldUseRemoteRecord
_opusDecoders
_audioFileReader
_audioFilePathIndex
_waitingForDidStart
_pendingTwoShotVTToken
_voiceControllerCreationQueue
_crashEventDelegate
_sessionEventDelegate
initWithAnalyzeMode
_resetAlignBuffer
_startRequestWithCompletion:
setRequiresHistoricalBuffer:
getFrameDurationMs
remoteVADDuration
stop
stopListenWithStateReset:completion:
channelForProcessedInput
addAudio:numSamples:
opportuneSpeakListenerBypassEnabled
_addRemoteVADSignal:
addSamples:numSamples:
removeObjectAtIndex:
_shouldReportBoron
_popRemoteVADSignal
spgEndpointAnalyzer:hasSilenceScoreEstimate:
spgEndpointAnalyzer
setSpgEndpointAnalyzer:
remoteVADSPGRatio
setRemoteVADSPGRatio:
audioStreamProvider
setAudioStreamProvider:
audioSessionProvider
setAudioSessionProvider:
latestContext
setLatestContext:
isMediaPlayingNow
setIsMediaPlayingNow:
remoteVADAlignBuffer
setRemoteVADAlignBuffer:
remoteVADAlignCount
setRemoteVADAlignCount:
alignBufferQueue
setAlignBufferQueue:
audioFileWriter
setAudioFileWriter:
_isMediaPlayingNow
_remoteVADSPGRatio
_spgEndpointAnalyzer
_audioStreamProvider
_audioSessionProvider
_remoteVADAlignBuffer
_remoteVADAlignCount
_alignBufferQueue
_audioFileWriter
CSSiriEnabledMonitor:didReceiveEnabled:
_didReceiveSiriSettingChanged:
fetchIsEnabled
_isSiriEnabled
_attachBluetoothSession
_getWirelessSplitterInfoFromLocalDevice:
getBTLocalDeviceWithCompletion:
setSplitterEnabled:
initWithUTF8String:
setAddress:
setSupportDoAP:
setIsTemporaryPairedNotInContacts:
addDeviceIntoSplitterDeviceList:
_tearDownLocalDevice
_detachBluetoothSession
_setUpLocalDevice
getWirelessSplitterInfoWithCompletion:
device:serviceMask:serviceEventType:serviceSpecificEvent:result:
_sessionAttached:result:
_sessionDetached:
_sessionTerminated:
localDevice:event:result:
bluetoothSession
setBluetoothSession:
isAttachingBluetoothSession
setIsAttachingBluetoothSession:
localDevice
setLocalDevice:
pairedDeviceAddresses
setPairedDeviceAddresses:
connectedDeviceAddresses
setConnectedDeviceAddresses:
bluetoothSessionSetupGroup
setBluetoothSessionSetupGroup:
_isAttachingBluetoothSession
_bluetoothSession
_localDevice
_pairedDeviceAddresses
_connectedDeviceAddresses
_bluetoothSessionSetupGroup
setTriggerMode:
getTriggerMode
CSActivationXPCConnectionReceivedClientError:clientError:client:
getAssetTypeForNamespace:
getTrialIdsForAssetType:withCompletion:
_handleSessionIDRequestMessage:messageBody:client:
audioSessionInfoProvider
setAudioSessionInfoProvider:
_audioSessionInfoProvider
supportSmartVolume
getVolumeForTTSType:withContext:reply:
didTTSVolumeChangeForReason:
initWithMachService:withServiceInterface:withServiceObject:withDelegateInterface:
setListenerDelegate:
resumeConnection
createSmartSiriVolumeListener
getVoiceTriggerAssetTypeString
getEndpointAssetTypeString
getLanguageDetectorAssetTypeString
getAdBlockerAssetTypeString
getSpeakerRecognitionAssetTypeString
_cleanUpMobileAssetV1Directory
_isReadyToUse
installedAssetOfType:withLanguage:
_fetchRemoteAssetOfType:withLanguage:completion:
_assetQueryForAssetType:
returnTypes:
queryMetaDataSync
results
filteredAssetsForAssets:assetType:language:
queryParams
isLatestCompareTo:
state
getCSAssetOfType:
enumerateObjectsUsingBlock:
installedAssetOfType:withLanguage:completion:
_installedAssetOfType:withLanguage:
_installedAssetOfType:withLanguage:completion:
_findLatestInstalledAsset:
queryMetaData:
attributes
addKeyValuePairForQuery:assetType:
fetchRemoteMetaOfType:allowRetry:
_runAssetQuery:completion:
_downloadAssetCatalogForAssetType:complete:
_updateFromRemoteToLocalAssets:forAssetType:completion:
_defaultDownloadOptions
_isRetryRecommendedWithResult:
startCatalogDownload:options:then:
isCSAssetInstalled
isDownloading
cancelDownloadSync
canBePurged
purgeSync
CSAssetController:didDownloadNewAssetForType:
_downloadAsset:withComplete:
setAllowsCellularAccess:
setCanUseLocalCacheServer:
setDiscretionary:
assetServerUrl
_startDownloadingAsset:progress:completion:
expectedTimeRemaining
totalWritten
totalExpected
attachProgressCallBack:
spaceCheck:
startDownload:then:
getAssetTypeStringForType:
CSEventMonitorDidReceiveEvent:
assetOfType:language:
allInstalledAssetsOfType:language:
assetOfType:language:completion:
installedAssetOfType:language:
installedAssetOfType:language:completion:
fetchRemoteMetaOfType:
addObserver:forAssetType:
removeObserver:forAssetType:
assetsMigrationQueue
setAssetsMigrationQueue:
csAssetsDictionary
setCsAssetsDictionary:
_assetsMigrationQueue
_csAssetsDictionary
valueForKey:
supportPremiumAssets
getVoiceTriggerAssetCurrentCompatibilityVersion
getEndpointAssetCurrentCompatibilityVersion
getLanguageDetectorCurrentCompatibilityVersion
getAdBlockerCurrentCompatibilityVersion
getSpeakerRecognitionCurrentCompatibilityVersion
addKeyValuePair:with:
filteredAssetsForFetchRemoteMetaDataForAssets:assetType:
isRecordContextVoiceTrigger:
isRecordContextJarvisVoiceTrigger:
isRecordContextHearstDoubleTap:
isRecordContextRaiseToSpeak:
isRecordContextAutoPrompt:
isRecordContextHomeButtonPress:
isRecordContextSpeakerIdTrainingTrigger:
isRecordContextHearstVoiceTrigger:
isRecordContextJarvisButtonPress:
recordContextString:
mapTableWithStrongToStrongObjects
defaultInjectionProvider
primaryInputDevice
setEnableAlwaysOnVoiceTrigger:
deviceUID
initWithDeviceType:deviceName:deviceID:productID:
speakAudio:withScaleFactor:playbackStarted:completion:
connectDevice:
disconnectDevice:
_deviceMapTable
initWithBool:
initWithDouble:
initWithLongLong:
initWithUnsignedLongLong:
objCType
longLongValue
initWithResult:
setSampleFed:
setEarlyWarning:
_earlyWarning
_sampleFed
strongToWeakObjectsMapTable
_hasPendingActivationForType:
activationEventNotificationHandler:event:completion:
_notifyActivationEvent:completion:
_isVoiceTriggerEvent:
hosttime
secondsToHostTime:
initWithType:deviceId:activationInfo:hosttime:
setDelegate:forType:
_didReceiveAOPFirstPassTrigger:completion:
delegates
setDelegates:
pendingActivationEvent
setPendingActivationEvent:
pendingCompletion
setPendingCompletion:
_delegates
_pendingActivationEvent
_pendingCompletion
_setDefaultParameters
_setAsset:
_convertDB2Mag:
_reset
initializeMediaPlayingState
initializeAlarmState
fetchInitSystemVolumes
_resumeSSVProcessing
_pauseSSVProcessing
setCallback:
_startListenPolling
_startListenPollingWithInterval:completion:
_startListenWithCompletion:
audioProviderWithContext:error:
_stopListening
mediaPlayingState
alarmState
_getDevicedBFSForInputLinearVolume:
_getFloatBufferData:
iterateBitset:block:
_prepareSoundLevelBufferFromSamples:soundType:
_processAudioChunk:soundType:
_estimatedTTSVolume:lowerLimit:upperLimit:TTSmappingInputRangeLow:TTSmappingInputRangeHigh:TTSmappingOutputRangeLow:TTSmappingOutputRangeHigh:
_getUserOffsetFromMusicVolumeDB:
_combineResultsWithOptimalFromNoise:andOptimalFromLkfs:withUserOffset:
_getDeviceSimpleOutputLinearVolumeFordBFSValue:
_scaleInputWithInRangeOutRange:minIn:maxIn:minOut:maxOut:
sharedAnalytics
logEventWithType:context:
smartSiriVolumeSoftVolumeEnabled
convertToFloatLPCMBufFromShortLPCMBuf:
_getMusicVolumeDBCSSSVDeviceSimple:
_getMusicVolumeDBCSSSVDeviceDefault:
_deviceSpecificLinearVolumeToDBMappingCSSSVDeviceSimple:
_deviceSpecificDBToLinearVolumeMappingCSSSVDeviceSimple:
_getDeviceSimpledBFSForOutputLinearVolume:
estimateSoundLevelbySoundType:
estimatedTTSVolumeForNoiseLevelAndLKFS:LKFS:
initWithVolumeEstimate:debugLogFile:
CSMediaPlayingMonitor:didReceiveMediaPlayingChanged:
siriClientBehaviorMonitor:willStartStreamWithContext:option:
siriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:withEventUUID:
siriClientBehaviorMonitor:willStopStream:
siriClientBehaviorMonitor:didStopStream:withEventUUID:
siriClientBehaviorMonitor:didChangedRecordState:withEventUUID:withContext:
initWithSamplingRate:asset:
startSmartSiriVolume
getVolumeForTTSType:withOverrideMediaVolume:WithRequestTime:
didReceiveAlarmChanged:
didReceiveTimerChanged:
didReceiveMusicVolumeChanged:
didReceiveAlarmVolumeChanged:
didDetectKeywordWithResult:
prepareSoundLevelBufferFromSamples:soundType:firedVoiceTriggerEvent:triggerStartTimeSampleOffset:triggerEndTimeSampleOffset:
listenPollingTimer
setListenPollingTimer:
listenPollingTimerCount
setListenPollingTimerCount:
_smartSiriVolumeNoiseLevel
_smartSiriVolumeLKFS
_floatBuffer
_defaults
_ssvEnablePolicy
_processedSampleCount
_isListenPollingStarting
_shouldPauseSSVProcess
_shouldPauseLKFSProcess
_alarmSoundIsFiring
_timerSoundIsFiring
_mediaIsPlaying
_currentAsset
_musicVolumeDB
_alarmVolume
_noiseLevelChannelBitset
_LKFSChannelBitset
_energyBufferSize
_noiseLowerPercentile
_noiseUpperPercentile
_LKFSLowerPercentile
_LKFSUpperPercentile
_noiseTimeConstant
_noiseMicSensitivityOffset
_noiseMicSensitivityOffsetDeviceSimple
_LKFSTimeConstant
_LKFSMicSensitivityOffset
_noiseTTSMappingInputRangeLow
_noiseTTSMappingInputRangeHigh
_noiseTTSMappingOutputRangeLow
_noiseTTSMappingOutputRangeHigh
_LKFSTTSMappingInputRangeLow
_LKFSTTSMappingInputRangeHigh
_LKFSTTSMappingOutputRangeLow
_LKFSTTSMappingOutputRangeHigh
_userOffsetInputRangeLow
_userOffsetInputRangeHigh
_userOffsetOutputRangeLow
_userOffsetOutputRangeHigh
_TTSVolumeLowerLimitDB
_TTSVolumeUpperLimitDB
_noiseWeight
_listenPollingTimer
_listenPollingTimerCount
isPluginContext
deviceType
_createSpeechDetectionVADIfNeeded
isPluginDevice
_connectPluginDevice:
_tearDownSpeechDetectionVADIfNeeded
engineWithDeviceType:streamHandleId:
setInjectionEngine:
attachDevice:
initWithStreamHandleId:
injectionEngine
deviceID
startAudioStreamWithOption:
stopAudioStream
deviceName
productIdentifier
initWithRoute:isRemoteDevice:remoteDeviceUID:remoteDeviceProductIdentifier:
setActive:withOptions:error:
setActive:error:
streamHandleID
audioEngineDidStartRecord:audioStreamHandleId:successfully:error:
audioEngineDidStopRecord:audioStreamHandleId:reason:
audioEngineBufferAvailable:audioStreamHandleId:buffer:remoteVAD:atTime:
audioEngineAudioChunkForTvAvailable:audioChunk:
deactivateAudioSession:streamHandleId:error:
didStartDelayInSeconds
setDidStartDelayInSeconds:
uuid
setUuid:
connectedDevices
setConnectedDevices:
builtInDevice
setBuiltInDevice:
bundleTvRemote
setBundleTvRemote:
builtInAudioInjectionEngine
setBuiltInAudioInjectionEngine:
audioInjectionEngines
setAudioInjectionEngines:
latestPluginStreamId
setLatestPluginStreamId:
_didStartDelayInSeconds
_uuid
_connectedDevices
_builtInDevice
_bundleTvRemote
_builtInAudioInjectionEngine
_audioInjectionEngines
_latestPluginStreamId
extractArchiveFromDirectory:toDir:
_addListeningEnabledConditions
currentPowerSource
_readAudioBufferAndFeed
close
readSamplesFromChannelIdx:
_audioFeedTimer
_bufferDuration
RMSScore
initWithRMSScore:lastSampleCount:
compareScoresDesc:
setRMSScore:
lastSampleCount
setLastSampleCount:
_RMSScore
_lastSampleCount
getBytes:range:
_calculateRMSWithFrameData:
_calculateSpeechVoicingLevel
_calculateNumberOfVoicingFrames
numberOfVoicingFrames
sortUsingSelector:
addDataToBuffer:
calculateShadowMicScore
bestStartDetectSample
setBestStartDetectSample:
bestEarlyDetectSample
setBestEarlyDetectSample:
bestEndDetectSample
setBestEndDetectSample:
shadowMicScore
setShadowMicScore:
rmsSamplesForEntireAudio
setRmsSamplesForEntireAudio:
audioBuffer
setAudioBuffer:
speechVoiceLevel
setSpeechVoiceLevel:
setNumberOfVoicingFrames:
numberOfTotalFramesETFT
setNumberOfTotalFramesETFT:
_bestStartDetectSample
_bestEarlyDetectSample
_bestEndDetectSample
_shadowMicScore
_rmsSamplesForEntireAudio
_audioBuffer
_speechVoiceLevel
_numberOfVoicingFrames
_numberOfTotalFramesETFT
appendBytes:length:
myriadHashFilePath
writeToFile:atomically:
CSMyriadSelfTriggerCoordinator:didGenerateMyriadPHashForSelfTrigger:
selfTriggerDetector:didDetectSelfTrigger:
bundleForClass:
bundlePath
dataWithContentsOfFile:options:error:
zeroFilterWindowSizeInMs
convertToShortLPCMBufFromFloatLPCMBuf:
beepCancellerDidCancelSamples:buffer:timestamp:
numberWithInt:
cancelBeepFromSamples:timestamp:
willBeep
_beepCanceller
_beepFloatVec
_shortBuffer
_numTotalInputSamples
_numTotalOutputSamples
setConnectedDevice:
enableAlwaysOnVoiceTrigger
isAlwaysOnVoiceTriggerAvailable
setAlwaysOnVoiceTriggerEnabled:
injectAudio:
injectAudio:withScaleFactor:playbackStarted:completion:
applyNegative12dBGain:
builtInMicVoiceTriggerEvent:hostTime:
copybufferFrom:to:
alwaysOnVoiceTriggerEnabled
keywordAnalyzer
setKeywordAnalyzer:
hostTimeBuffer
setHostTimeBuffer:
voiceTriggerEnabled
setVoiceTriggerEnabled:
connectedDevice
isForwarding
setIsForwarding:
_voiceTriggerEnabled
_isForwarding
_keywordAnalyzer
_lastForwardedSampleCount
_hostTimeBuffer
_connectedDevice
_checkSpringBoardStarted
_didReceiveSpringboardStarted:
_notifyObserver:withStarted:
CSSpringboardStartMonitor:didReceiveStarted:
_didReceiveSpringboardStartedInQueue:
_isSpringBoardStarted
containsCategory:
satScoreThreshold
getStringForKey:category:default:
getBoolForKey:category:default:
containsSpeakerRecognitionCategory
multiUserLowScoreThreshold
multiUserHighScoreThreshold
multiUserConfidentScoreThreshold
multiUserDeltaScoreThreshold
psrCombinationWeight
satImplicitProfileThreshold
satImplicitProfileDeltaThreshold
satVTImplicitThreshold
pruningExplicitUttThresholdSAT
pruningExplicitUttThresholdPSR
pruningThresholdSAT
pruningThresholdPSR
pruningNumRetentionUtterance
maxAllowedEnrollmentUtterances
voiceProfilePruningCookie
keywordDetectorQuasarConfigFilePath
keywordDetectorNDAPIConfigFilePath
satImplicitTrainingEnabled
_createXPCClientConnection
sharedNotifier
notifyActivationEvent:deviceId:activationInfo:completion:
deviceIsInSleep
_alarmFiringState
ssvManager
setSsvManager:
_ssvManager
_checkFirstUnlocked
_didReceiveFirstUnlock:
_notifyObserver:withUnlocked:
_firstUnlockNotified
_didReceiveFirstUnlockInQueue:
_firstUnlocked
applyGain:toBuffer:
initWithArray:
packets
avgPower
peakPower
_avgPower
_peakPower
_audioFormat
_packets
_timeStamp
_streamHandleID
initWithUUIDString:
initWithFormat:
decodeObjectOfClass:forKey:
isRemoteDevice
remoteDeviceUID
remoteProductIdentifier
route
remoteDeviceProductIdentifier
_isRemoteDevice
_route
_remoteDeviceUID
_remoteDeviceProductIdentifier
commandControlBehaviorMonitor:willStartStreamWithContext:option:
commandControlBehaviorMonitor:didStartStreamWithContext:successfully:option:
commandControlBehaviorMonitor:willStopStream:
commandControlBehaviorMonitor:didStopStream:
setTimestamp:
initWithData:
setPerceptualAudioHash:
newWithBuilder:
initWithServicePort:
deactivateForReason:options:context:completion:
sharedLauncher
notifyBuiltInVoiceTrigger:myriadPHash:completion:
notifyCarPlayVoiceTrigger:deviceId:myriadPHash:completion:
notifyBluetoothDeviceVoiceTrigger:deviceId:completion:
notifyRemoraVoiceTrigger:deviceId:completion:
deactivateSiriActivationConnectionWithReason:withOptions:
URLByDeletingPathExtension
URLByAppendingPathExtension:
deviceProductType
deviceProductVersion
deviceBuildVersion
dictionaryWithDictionary:
dataWithJSONObject:options:error:
JSONObjectWithData:options:error:
addContextKey:withContext:
initWithFilepath:
addContextKey:fromMetaFile:
isWriting
inASBD
_fileURL
setStreamProvider:
setStreaming:
stringByAppendingFormat:
setStreamingUUID:
setStartStreamOption:
streamingUUID
streaming
prepareAudioStreamWithRequest:completion:
_scheduledFutureSample
_streaming
_streamProvider
_streamRequest
_startStreamOption
_streamingUUID
_didReceiveNewVoiceTriggerAssetMetaData
CSVoiceTriggerAssetMetaUpdateMonitor:didReceiveNewVoiceTriggerAssetMetaData:
supportZeroFilter
supportBeepCanceller
resetWithSampleRate:
initWithToken:sampleRate:numChannels:
setSampleRate:
_isNarrowBand:
setUpsampler:
zeroFilter
beepCanceller
getZeroStatisticsFromBuffer:entireSamples:
_reportMetrics
_isHeadphoneDeviceWithRecordRoute:playbackRoute:
currentRoute
outputs
endpointType
stopReportZeroStatistics
zeroFilter:zeroFilteredBufferAvailable:atHostTime:
setZeroFilter:
setBeepCanceller:
zeroCounter
setZeroCounter:
_sampleRate
_upsampler
_zeroFilter
_zeroCounter
activeAudioRouteDidChange:
_didReceiveNewSpeechEndpointAssetMetaData
CSSpeechEndpointAssetMetaUpdateMonitor:didReceiveNewSpeechEndpointAssetMetaData:
baseDir
stringByReplacingOccurrencesOfString:withString:
_handleClientEvent:
_handleClientMessage:client:
_handleClientError:client:
_sendReplyMessageWithResult:error:event:client:
connection
setConnection:
_connection
_addAssetManagerEnabledConditions
_shouldCheckNetworkAvailability
isAvailable
initWithMode:deviceUID:
initWithDescription:timeout:
_borealisPowerlog:
systemUpTime
numberWithLongLong:
sharedAggregator
powerLogVoiceTriggerStart
powerLogVoiceTriggerStop
logAOPFirstPassTriggerWakeupLatency:
logSecondPassResult:eventInfo:triggerAPWakeUp:
logFalseWakeUp:
logTriggerLengthSampleCountStatistics:withFirstPassDeterministicTriggerLengthSampleCount:
logAudioZeroRun:
numFalseWakeUp
setNumFalseWakeUp:
lastAggTimeFalseWakeUp
setLastAggTimeFalseWakeUp:
_numFalseWakeUp
_lastAggTimeFalseWakeUp
assetManagerEnabledPolicy
opusConverter
addSamples:timestamp:
audioConverterDidConvertPackets:packets:durationInSec:timestamp:
opusEncoder
setOpusEncoder:
_opusEncoder
_checkVoiceTriggerEnabled
_didReceiveVoiceTriggerSettingChanged:
CSVoiceTriggerEnabledMonitor:didReceiveEnabled:
_didReceiveVoiceTriggerSettingChangedInQueue:
_isVoiceTriggerEnabled
volumeEstimate
debugLogPath
_volumeEstimate
_debugLogPath
CSAlwaysOnProcessorStateMonitor:didReceiveStateChange:
_didReceiveAOPListeningStateChange:
_isListeningEnabled
getTestResponse:
getCurrentVoiceTriggerLocale:
setDelayInterstitialSounds:level:completion:
getTriggerCount:
clearTriggerCount:
valueForEntitlement:
_handleXPCTimeConvertProvidingTypeHostTimeFromSampleCountMessage:messageBody:client:
_handleXPCTimeConvertProvidingTypeSampleCountFromHostTimeMessage:messageBody:client:
_processRemoteHeySiriCommandWithRequest:fromSenderID:withReply:
_processParallelRecordingCommandWithRequest:fromSenderID:withReply:
_receiveParallelRecordingFromPeerId:recordingInfo:withReply:
_receiveVoiceProfileFromPeerId:voiceProfileInfo:withReply:
_processGradingDataFetchCommandWithRequest:fromSenderID:withReply:
_processVoiceProfileDeleteCommandWithRequest:fromSenderID:withReply:
_receiveVoiceGradingDataFromPeerId:requestInfo:withReply:
_processVoiceProfileListQueryCommandFromPeerId:requestInfo:withReply:
_processFetchVoiceProfileCommandFromPeerId:requestInfo:withReply:
_processReverseTransferVoiceProfileCommandFromPeerId:requestInfo:withReply:
_processVoiceProfileUpdateTriggerFromPeerId:requestInfo:withReply:
_sendCoreSpeechGradingDataToPeerId:
_sendVoiceTriggerGradingDataToPeerId:
_sendVoiceProfileUpdateTriggerToPeerId:forLocale:
companionSyncVoiceTriggerUtterancesEnabled
pathExtension
_sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:
_compressFilesInDirectory:matchingPredicate:compressedFileAvailable:
stringByAppendingPathExtension:
moveItemAtPath:toPath:error:
sendMessageWithPayload:toPeer:withReply:
_spIdSiriDebugVoiceProfileRootDirectoryForProfile:locale:
writeToFile:options:error:
_spIdSiriDebugGradingDataRootDirectory
temporaryDirectory
URLByAppendingPathComponent:
_createDirectoryIfDoesNotExist:
writeToURL:atomically:
newVoiceProfileWithLocale:withAppDomain:
initWithVoiceRetrainingContext:error:
_getContentsOfDirectory:
addUtterances:toProfile:withContext:withCompletion:
updateVoiceProfile:withUserName:
profileID
provisionedVoiceProfilesForLocale:
appDomain
profileId
voiceProfileForId:
deleteUserVoiceProfile:
sharedSiriId
dateAdded
homeId
_getHomeUserIdForSharedSiriId:withCompletion:
userName
languageCode
initWithObjectsAndKeys:
enter
leave
getHomeUserIdForSharedUserId:completion:
waitWithTimeout:
_sendVoiceProfile:toPeerId:
siriProfileId
locale
contentsOfDirectoryAtPath:error:
stringByDeletingLastPathComponent
_spIdSiriDebugVoiceProfileCacheDirectoryForProfile:locale:
URLsForDirectory:inDomains:
lastObject
_spIdSiriDebugVTDataDirectory
_spIdSiriDebugVoiceProfileStoreRootDirectory
_spIdSiriDebugVoiceProfileStoreRootDirectoryForLocale:
processRemoteCommandWithPayload:fromPeer:withReply:
sendCoreSpeechGradingDataToNearbyPeer
sendVTNearMissGradingDataToCompanion
sendVoiceProfileUpdatedMessageToNearbyPeerForLocale:
_speakerRecognitionAudioLogsGradingDir
_spIdSiriDebugTrainedUsersFilePathForLocale:
adCompanionServiceProvider
setAdCompanionServiceProvider:
lastCommunicatedPeer
setLastCommunicatedPeer:
voiceTriggerBatchId
setVoiceTriggerBatchId:
voiceIdentificationBatchId
setVoiceIdentificationBatchId:
_adCompanionServiceProvider
_lastCommunicatedPeer
_voiceTriggerBatchId
_voiceIdentificationBatchId
audioRecorderWithQueue:error:
supportRaiseToSpeak
supportHearstVoiceTrigger
supportPremiumWatchAssets
channelForOutputReference
supportTTS
supportJarvisVoiceTrigger
supportBluetoothDeviceVoiceTrigger
rootQueueWithFixedPriority:
supportHybridEndpointer
csAudioProcessingQueuePriority
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
supportContinuousVoiceTrigger
supportKeywordDetector
supportSelfTriggerSuppression
supportCSTwoShotDecision
supportSAT
supportCompactPlus
isIOSDeviceSupportingBargeIn
supportAdBlocker
supportContinuousAudioFingerprint
supportPremiumModel
supportPhatic
shouldDelayPhaticForMyriadDecision
supportSessionActivateDelay
supportLanguageDetector
shouldDownloadVTAssetsOnDaemon
supportLazySessionActivation
hasRemoteCoreSpeech
supportRemoraVoiceTrigger
supportCircularBuffer
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getFixedHighPrioritySerialQueueWithLabel:
deviceUserAssignedName
deviceHwRevision
timeStampWithSaltGrain
supportsSpeakerRecognitionAssets
supportHandsFree
supportsVoiceTriggerFides
initWithDownloadOption:
_createPeriodicalDownloadTimer
_startPeriodicalDownload
_stopPeriodicalDownload
_fetchRemoteMetaData
_canFetchRemoteAsset:
getInstalledAssetofType:completion:
CSAssetManagerDidDownloadNewAsset:
CSAdBlockerMetaUpdateMonitor:didReceiveNewAdBlockerAssetMetaData:
setAssetDownloadingOption:
assetForCurrentLanguageOfType:
installedAssetForCurrentLanguageOfType:
installedAssetForCurrentLanguageOfType:completion:
assetOfType:providerType:language:completion:
currentLanguageCode
_enablePolicy
_currentLanguageCode
_downloadingOption
_downloadTimer
_downloadTimerCount
getHostClockFrequency
zeroFilterApproxAbsSpeechThreshold
vtEndInSampleCount
setVtEndInSampleCount:
numSamplesProcessed
setNumSamplesProcessed:
_vtEndInSampleCount
_numSamplesProcessed
initWithEndpointThreshold:
_transaction
_description
_handleMetricProvidingRequestTypeAudioMetricMessage:messageBody:client:
audioMetricProvider
setAudioMetricProvider:
_audioMetricProvider
addObserver:observeFilteredGestures:includingWhenScreenOff:
gestureType
timestamp
_didReceiveWakeGesture
gestureMonitorDidReceiveWakeGesture:
wakeGestureRecognized:
wakeGestureRecognized:date:
_gestureMonitor
_handleActivateEventMesssage:client:
address
supportDoAP
isTemporaryPairedNotInContacts
_supportDoAP
_isTemporaryPairedNotInContacts
_address
setIsStreaming:
_isStreaming
_checkAllConditionsEnabled
notifyCallback:option:
notifyCallbackWithOption:
_monitors
_conditions
_callback
_notifyObserver:withLanguageCode:
_didReceiveLanguageCodeUpdate
remoteMicVoiceTriggerEvent:activationInfo:hostTime:
lastDetectedVoiceTriggerBeginSampleCount
setLastDetectedVoiceTriggerBeginSampleCount:
_lastDetectedVoiceTriggerBeginSampleCount
numOfAVVCRecordingClients
_numOfAVVCRecordingClients
initWithType:deviceId:activationInfo:vadScore:hosttime:
_activationTypeString
remoteMicVADEvent:vadScore:hostTime:
jarvisVoiceTriggerEvent:activationInfo:hostTime:
remoraVoiceTriggerEvent:hostTime:
mediaserverdLaunchedEvent:
activationInfo
setActivationInfo:
setHosttime:
vadScore
setVadScore:
_vadScore
_activationInfo
_hosttime
_didInstalledNewVoiceTriggerAsset
setAudioSessionState:
_audioSessionState
initWithDroppingPrediction:droppedPrediction:timestamp:
toString
droppingPrediction
droppedPrediction
_droppingPrediction
_droppedPrediction
_timestamp
injectAudio:withScaleFactor:outASBD:playbackStarted:completion:
speakAudio:
speakAudio:withScaleFactor:outASBD:playbackStarted:completion:
isConnected
setIsConnected:
_isConnected
_enableAlwaysOnVoiceTrigger
_deviceType
_deviceName
_deviceID
_deviceUID
_productIdentifier
_injectionEngine
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
assetHashInResourcePath:
initWithSamplingRate:withAsset:
notifyClientsWithBlock:
voiceTriggerDidDetectKeyword:deviceId:
voiceTriggerDidDetectKeyword:deviceId:completion:
voiceTriggerDidDetectNearMiss:
voiceTriggerDidDetectSpeakerReject:
keywordDetectorDidDetectKeyword
voiceTriggerGotSuperVector:
raiseToSpeakDetected:
voiceTriggerDidRejected:
CSAlarmMonitor:didReceiveAlarmChanged:
CSTimerMonitor:didReceiveTimerChanged:
CSVolumeMonitor:didReceiveMusicVolumeChanged:
CSVolumeMonitor:didReceiveAlarmVolumeChanged:
smartSiriVolume
setSmartSiriVolume:
_smartSiriVolume
defaultContinousFingerprintBufferDuration
intValue
setValue:forKey:
_setMaximumBufferSizeFromInUseServices
copyBufferWithNumSamplesCopiedIn:
startWithUUID:withMaximumBufferSize:
stopWithUUID:
isListenPollingStarting
setIsListenPollingStarting:
audioLoggingBuffer
setAudioLoggingBuffer:
inUseServices
setInUseServices:
currentMaximumBufferSize
setCurrentMaximumBufferSize:
_currentMaximumBufferSize
_audioLoggingBuffer
_inUseServices
splitterState
_hasDeviceTemporaryPairedNotInContacts
splitterDeviceList
shouldDisableSpeakerVerificationInSplitterMode
splitterEnabled
_splitterDeviceList
_splitterEnabled
_didInstalledNewAdBlockerAsset
CSAdBlockerAssetDownloadMonitor:didInstallNewAsset:assetProviderType:
monitor
setMonitor:
_monitor
submitVoiceIdIssueReport:
submitVoiceTriggerIssueReport:
submitEndpointerIssueReport:
submitTrialIssueReport:
startManager
_createClearLoggingFileTimer
_startClearLoggingFilesTimer
_getAudioRecorderWithError:
audioProviders
daysBeforeRemovingLogFiles
voiceTriggerEventNotifier
audioFingerprintProvider
_getVoiceTriggerAssetIfNeeded:
registerSpeechController:
registerSiriClientProxy:
audioProviderWithUUID:
audioProviderWithStreamID:
_reinitializeSmartSiriVolumeWithAsset:
assetQueryQueue
setAssetQueryQueue:
setAudioProviders:
fallbackAudioSessionReleaseProvider
setFallbackAudioSessionReleaseProvider:
clientController
setClientController:
clearLoggingFileTimer
setClearLoggingFileTimer:
clearLoggingFileTimerCount
setClearLoggingFileTimerCount:
opportuneSpeakListnerTestService
setOpportuneSpeakListnerTestService:
postBuildInstallService
setPostBuildInstallService:
_assetQueryQueue
_audioProviders
_fallbackAudioSessionReleaseProvider
_clientController
_clearLoggingFileTimer
_clearLoggingFileTimerCount
_opportuneSpeakListnerTestService
_postBuildInstallService
initWithDictionary:
notifyImplicitUtterance:audioDeviceType:audioRecordType:voiceTriggerEventInfo:otherCtxt:completion:
audioConverterBitrate
alertMuteBehaviorDict
voiceTriggerRecordContext
hearstVoiceTriggerRecordContext:
jarvisVoiceTriggerRecordContext:
opusRecordSettings
speexRecordSettings
alertMuteSettings
zeroFilterWindowSizeInMsForReport
_methodToken
_continuousZeroCounter
_zeroCounterWinSz
_zeroCounterWinSzForReport
_maxContinuousZeroCount
_analyzeStep
_shouldDeinterleaveAudio
setRtsTriggerInfo:
triggerNotifiedMachTime
setTriggerNotifiedMachTime:
_voiceTriggerInfo
_rtsTriggerInfo
_triggerNotifiedMachTime
assetForAssetType:resourcePath:configVersion:assetProvider:
hybridEndpointerAssetFilename
firstObject
initWithResourcePath:configFile:configVersion:assetProvderType:
fallBackAssetResourcePath
_decodeJson:
assetForAssetType:resourcePath:configVersion:
getConfigFileNameForAssetType:
defaultFallBackAssetForSmartSiriVolume
defaultFallBackAssetForHearst
defaultFallBackAssetForAdBlocker
containsKey:category:
hashFromResourcePath
stringForCurrentAssetProviderType
configVersion
assetProvider
_decodedInfo
_path
_resourcePath
_configVersion
_assetProvider
audioAlertProvider
setAudioAlertProvider:
setAudioMeterProvider:
_handleAudioProvidingMessage:messageBody:client:
_handlePingPongMessage:client:
_handleSetXPCClientTypeMessage:messageBody:client:
_handleAudioProvidingRequestTypeSwitchMessage:messageBody:client:
_getAudioProvideWithContext:streamClientType:
_notifyXPCDisconnectionToProxies
clientType
_notifyXPCDisconnectionToProxy:
audioSessionProvidingProxy
setAudioSessionProvidingProxy:
fallbackAudioSessionProvidingProxy
setFallbackAudioSessionProvidingProxy:
audioSessionInfoProvidingProxy
setAudioSessionInfoProvidingProxy:
audioStreamProvidingProxy
setAudioStreamProvidingProxy:
audioAlertProvidingProxy
setAudioAlertProvidingProxy:
audioMeterProvidingProxy
setAudioMeterProvidingProxy:
audioMetricProvidingProxy
setAudioMetricProvidingProxy:
setClientType:
_audioSessionProvidingProxy
_fallbackAudioSessionProvidingProxy
_audioSessionInfoProvidingProxy
_audioStreamProvidingProxy
_audioAlertProvidingProxy
_audioMeterProvidingProxy
_audioMetricProvidingProxy
_clientType
_daemonDidLaunch
_daemonWillShutdown
_setupNotifyHandlers
notifyDaemonStateChanged:
sharedDaemon
didLaunch
shutdown
xpcListener
setXpcListener:
activationXpcListener
setActivationXpcListener:
voiceIdXpcListener
setVoiceIdXpcListener:
voiceTriggerXpcListener
setVoiceTriggerXpcListener:
audioInjectionXpcListener
setAudioInjectionXpcListener:
signalSource
setSignalSource:
_xpcListener
_activationXpcListener
_voiceIdXpcListener
_voiceTriggerXpcListener
_audioInjectionXpcListener
_signalSource
createAudioCircularBufferWithDefaultSettings
copySamplesFromHostTime:
setBufferLength:
_csAudioCircularBufferImpl
_bufferLength
readAudioChunksFrom:block:
_didReceiveDaemonStateChanged:
_notifyObserver:withDaemonState:
coreSpeechDaemonStateMonitor:didReceiveStateChanged:
hostTimeToTimeInterval:
macHostTimeFromBridgeHostTime:
currentBuiltinSpeakerState
isBuiltinSpeakerMuted
setBuiltInSpeakerState:
waitingForConnection:error:
startRecordingWithOptions:error:
stopRecording:
didPlayEndpointBeep
hasPendingTwoShotBeep
processIdentifier
clientConnections
setInterruptionHandler:
setClientConnections:
machServiceName
setMachServiceName:
_exportedInterface
_remoteInterface
_proxyObject
_clientConnections
_machServiceName
_enableCoreSpeechDaemonKeepAlive
_coreSpeechDaemonKeepAlived
writeToFile:atomically:encoding:error:
localizedRecoverySuggestion
speexDecoder
_decoder
CSSiriAssertionMonitor:didReceiveEnabled:
_assertionState
_handleSessionProvidingRequestTypePrewarmMessage:client:
_handleSessionProvidingRequestTypeActivateMessage:messageBody:client:
_handleSessionProvidingRequestTypeDeactivateMessage:messageBody:client:
_handleSessionProvidingRequestTypeGetDuckOthersOption:messageBody:client:
_handleSessionProvidingRequestTypeSetDuckOthersOption:messageBody:client:
_handleSessionProvidingRequestTypeEnableMiniDucking:messageBody:client:
_handleSessionProvidingRequestTypeDuckAudioDevice:messageBody:client:
_handleSessionProvidingRequestTypeDuckDefaultOutputAudioDevice:messageBody:client:
_handleSessionProvidingRequestTypeEnableSmartRoutingConsideration:messageBody:client:
audioSessionProvider:didReceiveAudioSessionInterruptionNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:
splitterState:
isUserActive
getLocalUrl
_compatibilityVersion
stringValue
appendString:
_version
_footprint
isPremium
_notifyStopCommandControl
_isCommandControlStreaming
_dispatchGroup
_dispatchGroupCounter
_handleAlertProvidingRequestTypeSetAlertSoundMessage:messageBody:client:
_handleAlertProvidingRequestTypePlayAlertSoundMessage:messageBody:client:
_handleAlertProvidingRequestTypePlayRecordStartingAlertAndResetEndpointerMessage:messageBody:client:
_handleAlertProvidingRequestTypeAlertStartTimeMessage:messageBody:client:
_handleAlertProvidingRequestTypeConfigureAlertBehavior:messageBody:client:
_sendReplyMessageWithResult:event:client:
_audioAlertProvider
_storeModeEnabled
setFileLoggingLevel:
fileLoggingLevel
myriadHashDirectory
interstitialRelativeDirForLevel:
enableAudioInjection:withKey:
audioInjectionEnabledWithKey:
smartSiriVolumeContextAwareEnabled
isAttentiveSiriEnabled
twoShotNotificationEnabled
setFileLoggingIsEnabled:
ssvLogDirectory
getSSVLogFilePathWithSessionIdentifier:
trialBaseAssetDirectory
getCatAdBlockerAssetUpdateDirectory
secondPassAudioLoggingEnabled
speakerRecognitionAudioLoggingEnabled
jarvisAudioLoggingEnabled
setJarvisTriggerMode:
getJarvisTriggerMode
startOfSpeechAudioLoggingEnabled
forceVoiceTriggerAPMode
forceVoiceTriggerAOPMode
getStartOfSpeechAudioLogFilePath
_isDirectory:
remoteVoiceTriggerDelayTime
remoteVoiceTriggerEndpointTimeoutWithDefault:
interstitialAbsoluteDirForLevel:
myriadFileLoggingEnabled
enableAudioInjection:
enableProgrammableAudioInjection:
setAudioInjectionFilePath:
isPHSSupported
_isRemoteVoiceTriggerAvailable
isSpeakerRecognitionAvailable
speakerIdScoreReportingType
smartSiriVolumeContextAwareLoggingEnabled
audioSessionActivationDelay
useSiriActivationSPIForHomePod
useSiriActivationSPIForwatchOS
iOSBargeInSupportEnabled
shouldOverwriteRemoteVADScore
overwritingRemoteVADScore
setHearstFirstPassModelVersion:
setHearstSecondPassModelVersion:
fakeHearstModelPath
bypassPersonalizedHeySiri
isMultiChannelAudioLoggingEnabled
isSelfTriggerFileLoggingEnabled
_handleVoiceTriggerXPCServiceMessage:client:
_handleServiceConnectionLostIfNeeded
_handlePhraseSpotterBypassRequest:
_handleVoiceTriggeredSiriSessionCancelled
_handleEnableVoiceTriggerWithSiriAssertionRequest:
_handleRaiseToSpeakBypassRequest:
_handleVoiceTriggerStatsFetchEvent:client:
triggerVoiceProfileRetrainingWithAsset:
mainRunLoop
hearstNumberOfBytesPerChunk
hearstNumberOfSamplesPerChunk
EncryptionAudioSampleByteDepth
inputRecordingEncoderAudioQuality
inputRecordingSampleRateConverterAlgorithm
serverLoggingChannelBitset
_didReceiveNewAdBlockerAssetMetaData
setEncoderBitRate:
setNumberOfChannels:
setLpcmBitDepth:
setLpcmIsFloat:
setUseCustomizedRecordSettings:
requestForLpcmRecordSettingsWithContext:
requestForOpusRecordSettingsWithContext:
requestForSpeexRecordSettingsWithContext:
setIsSiri:
_requiresHistoricalBuffer
_useCustomizedRecordSettings
_lpcmIsFloat
_isSiri
_lpcmBitDepth
_numberOfChannels
_encoderBitRate
adBlockerAssetDecoderWithVersion:
maxFingerprintBufferSize
shouldResetAdsDictionary
payloadData
setPayloadData:
_maxFingerprintBufferSize
_shouldResetAdsDictionary
_payloadData
_startAudioFeedingTimer
_deinterleaveBufferIfNeeded:
setFileOption:
_defaultOutASBD
fileOption
audioFeedTimer
setAudioFeedTimer:
setIsRecording:
bufferDuration
setBufferDuration:
injectionAudioFileList
setInjectionAudioFileList:
injectionStartNotifyBlocks
setInjectionStartNotifyBlocks:
injectionCompletionNotifyBlocks
setInjectionCompletionNotifyBlocks:
deinterleaver
setDeinterleaver:
pNonInterleavedABL
setPNonInterleavedABL:
didSetScaleFactor
setDidSetScaleFactor:
setScaleFactor:
_isRecording
_didSetScaleFactor
_fileOption
_injectionAudioFileList
_injectionStartNotifyBlocks
_injectionCompletionNotifyBlocks
selectedChannelList
_checkSoftwareUpdateCheckingState
_didReceiveSoftwareUpdateCheckingStateChanged:
_softwareUpdateCheckingState
_notifyObserver:withSoftwareUpdateCheckingRunning:
CSSoftwareUpdateCheckingMonitor:didReceiveStateChanged:
_didReceiveSoftwareUpdateCheckingStateChangedInQueue:
_isSoftwareUpdateCheckingRunning
isInPhoneCallState
_configureAudioConverter:
_convertBufferedLPCM:allowPartial:timestamp:
replaceBytesInRange:withBytes:length:
narrowBandOpusConverter
_opusConverter
_bufferedLPCM
_recordBasePacketsPerSecond
_opusOutASBD
_convertPacketCount
_convertAudioCapacity
_lastTimestamp
_outPacketSizeInSec
_didSendFirstPacket
_notifyObserver:mediaIsPlayingState:
_notePossiblePlayPausedStateChange:
mediaPlayingStateWithCompletion:
_addVoiceTriggerAOPModeEnabledConditions
_addConditionsForIOSBargeIn
_addConditionsForIOSAOP
_isSpeechDetectionDevicePresent
isSiriClientConsideredAsRecord
pickedRoute
setIsSiriClientConsideredAsRecord:
setPendingRecordingStopUUID:
pendingRecordingStopUUID
_recordStateQueue
_isSiriClientConsideredAsRecord
_pendingRecordingStopUUID
sharedVoiceTriggerClient
voiceTriggerAOPModeEnabledPolicy
_availabilityChanged
_didReceivedNetworkAvailabilityChangedNotification:
_notifyObserver:withNetworkAvailability:
CSNetworkAvailabilityMonitor:didReceiveNetworkAvailabilityChanged:
_handleMeterProvidingRequestTypeSetMeteringEnabledMessage:messageBody:client:
_handleMeterProvidingRequestTypeUpdateMetersMessage:messageBody:client:
_handleMeterProvidingRequestTypePowerMessage:messageBody:client:powerType:
audioMeterProvider
_audioMeterProvider
@36@0:8@16@24B32
v24@0:8@16
v36@0:8@16C24@28
v16@0:8
d16@0:8
v24@0:8d16
Q16@0:8
v24@0:8Q16
@16@0:8
@"NSDictionary"
@28@0:8@16B24
f16@0:8
v20@0:8f16
B16@0:8
v20@0:8B16
@24@0:8@16
@32@0:8r^s16q24
@32@0:8^v16q24
@"NSMutableData"
@"<CSKeywordAnalyzerNDEAPIScoreDelegate>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
v40@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v40@0:8@"CSXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v44@0:8@16@24B32@36
@"CSXPCConnection"
@24@0:8Q16
q24@0:8q16
v32@0:8@16@?24
v40@0:8@16@24@?32
@"NSObject<OS_xpc_object>"
v32@0:8Q16Q24
Q24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
^{OpaqueAudioConverter=}96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
^{OpaqueAudioConverter=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
r*16@0:8
v24@0:8@?16
v56@0:8@16Q24@32@40Q48
v40@0:8@16Q24@32
v44@0:8@16Q24B32@36
v40@0:8@16Q24q32
v32@0:8@16q24
v40@0:8@16q24@32
v32@0:8@16@24
v28@0:8@16B24
v56@0:8@"CSAudioRecorder"16Q24@"NSData"32@"NSData"40Q48
v40@0:8@"CSAudioRecorder"16Q24@"CSAudioChunkForTV"32
v44@0:8@"CSAudioRecorder"16Q24B32@"NSError"36
v40@0:8@"CSAudioRecorder"16Q24q32
v32@0:8@"CSAudioRecorder"16q24
v40@0:8@"CSAudioRecorder"16q24@"NSError"32
v24@0:8@"CSAudioRecorder"16
v32@0:8@"CSAudioRecorder"16@"NSDictionary"24
v28@0:8@"CSAudioRecorder"16B24
v24@0:8@"NSDictionary"16
v32@0:8@"CSAudioRecorder"16@"NSError"24
B32@0:8Q16^@24
@"CSAudioRecorder"
@72@0:8@16Q24Q32Q40Q48Q56@64
@28@0:8f16Q20
@40@0:8Q16Q24Q32
@32@0:8Q16Q24
v40@0:8Q16Q24@?32
@"NSData"
v36@0:8@16B24Q28
@"CSTrialAssetDownloadMonitor"
v36@0:8B16@20d28
v28@0:8B16d20
@"NSMutableSet"
@"NSHashTable"
v32@0:8@"<CSAudioStreamProviding>"16q24
v32@0:8@"<CSAudioStreamProviding>"16@"CSAudioChunk"24
v32@0:8@"<CSAudioStreamProviding>"16@"CSAudioChunkForTV"24
@"<CSAudioStreamProviding>"
@"<CSTriggerInfoProviding>"
@"CSAudioStream"
@"CSAudioRecordContext"
@"NSString"
^{OpaqueExtAudioFile=}
@"NSURL"
I16@0:8
v24@0:8@"<CSAudioSessionInfoProvidingDelegate>"16
@104@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56@96
@104@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64
@112@0:8@16@24{AudioStreamBasicDescription=dIIIIIIII}32{AudioStreamBasicDescription=dIIIIIIII}72
@24@0:8q16
v40@0:8q16q24q32
v24@0:8q16
q16@0:8
@"<CSStateMachineDelegate>"
@"NSMutableDictionary"
@68@0:8@16f24{AudioStreamBasicDescription=dIIIIIIII}28
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
^{OpaqueExtAudioFile=}16@0:8
v24@0:8^{OpaqueExtAudioFile=}16
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
@24@0:8^{_NSZone=}16
@32@0:8q16@24
v56@0:8q16@24@32@40@?48
v44@0:8@16@24f32@?36
v32@0:8@"NSString"16@?<v@?@"NSString">24
v56@0:8q16@"NSString"24@"NSString"32@"NSString"40@?<v@?B@"NSError"@"NSUUID">48
v44@0:8@"NSURL"16@"NSUUID"24f32@?<v@?B@"NSError"QQ>36
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError"@"NSUUID">16
@36@0:8Q16S24d28
Q40@0:8@16Q24^@32
Q24@0:8^@16
{unique_ptr<CSAudioZeroFilterImpl<unsigned short>, std::__1::default_delete<CSAudioZeroFilterImpl<unsigned short> > >="__ptr_"{__compressed_pair<CSAudioZeroFilterImpl<unsigned short> *, std::__1::default_delete<CSAudioZeroFilterImpl<unsigned short> > >="__value_"^{CSAudioZeroFilterImpl<unsigned short>}}}
v28@0:8r^s16i24
@"NSMutableArray"
@"NSArray"
@"<CSKeywordAnalyzerQuasarScoreDelegate>"
v28@0:8@"CSFirstUnlockMonitor"16B24
v32@0:8@16@"NSString"24
@"CSAsset"
v20@0:8I16
B20@0:8B16
f20@0:8B16
@20@0:8B16
@"CSKeywordAnalyzerNDAPIResult"
@32@0:8@16Q24
@"CSVTSecondPassPhraseScore"
v56@0:8Q16Q24@32@40@?48
@"<CSVoiceTriggerAssetChangeDelegate>"
v32@0:8@16Q24
B24@0:8^@16
B48@0:8Q16Q24@32^@40
v24@0:8@"<CSAudioSessionProvidingDelegate>"16
B48@0:8Q16Q24@"NSString"32^@40
B32@0:8@16^@24
@40@0:8@16@24^@32
B40@0:8@16@24^@32
v40@0:8Q16Q24@32
v32@0:8Q16@24
@32@0:8@16d24
B32@0:8@"CSAudioRecordContext"16^@24
@"CSAudioStream"40@0:8@"CSAudioStreamRequest"16@"NSString"24^@32
v40@0:8@"CSAudioStreamRequest"16@"NSString"24@?<v@?@"CSAudioStream"@"NSError">32
B40@0:8@"CSAudioStream"16@"CSAudioStreamRequest"24^@32
v40@0:8@"CSAudioStream"16@"CSAudioStreamRequest"24@?<v@?B@"NSError">32
v40@0:8@"CSAudioStream"16@"CSAudioStartStreamOption"24@?<v@?B@"NSError">32
v40@0:8@"CSAudioStream"16@"CSAudioStopStreamOption"24@?<v@?B@"NSError">32
@"CSAudioChunk"32@0:8Q16Q24
@"CSAudioChunk"24@0:8Q16
v40@0:8Q16Q24@"NSURL"32
v32@0:8Q16@"NSURL"24
@"CSAudioStreamHolding"32@0:8@"NSString"16d24
v24@0:8@"CSAudioStreamHolding"16
@"CSAudioRecordDeviceInfo"16@0:8
@"NSDictionary"16@0:8
B32@0:8@16q24
B24@0:8q16
v24@0:8@"<CSAudioAlertProvidingDelegate>"16
B32@0:8@"NSURL"16q24
f24@0:8Q16
v32@0:8@"CSAudioRecordContext"16@?<v@?@"NSDictionary"@"NSDictionary">24
B40@0:8@16Q24^@32
@"<CSAudioSessionProvidingDelegate>"
@"<CSAudioStreamProvidingDelegate>"
@"<CSAudioAlertProvidingDelegate>"
@"<CSXPCClientDelegate>"
v28@0:8@"CSOpportuneSpeakListener"16B24
@"CSOpportuneSpeakListener"
v48@0:8@16@24@32@40
v52@0:8@16@24@32B40@44
v48@0:8@"CSOpportuneSpeakBehaviorMonitor"16@"CSAudioRecordContext"24@"NSString"32@"CSAudioStartStreamOption"40
v52@0:8@"CSOpportuneSpeakBehaviorMonitor"16@"CSAudioRecordContext"24@"NSString"32B40@"CSAudioStartStreamOption"44
v32@0:8@"CSOpportuneSpeakBehaviorMonitor"16@"CSAudioStopStreamOption"24
@"NSUUID"
@"<CSCATAssetManagerDelegate>"
{AudioStreamBasicDescription=dIIIIIIII}24@0:8f16I20
@28@0:8Q16B24
S28@0:8^f16i24
s16@0:8
v20@0:8s16
C16@0:8
v20@0:8C16
v40@0:8@"CSVoiceTriggerXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"CSAudioInjectionXPC"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@64@0:8@16@24@32@40@48@56
@32@0:8@16@24
@40@0:8@16@24@32
v24@0:8@"CSAudioServerCrashMonitor"16
v40@0:8@16@24Q32
v40@0:8@"CSAudioPreprocessor"16@"NSData"24Q32
@32@0:8Q16@24
v28@0:8B16@20
B32@0:8Q16q24
@"<CSAudioProviderDelegate>"
@"CSAudioCircularBuffer"
@"CSAudioPreprocessor"
@"CSOSTransaction"
@"NSObject<OS_dispatch_group>"
v36@0:8@16@24f32
@48@0:8@16@24@32^@40
@24@0:8d16
v28@0:8@"CSOpportuneSpeakEventMonitor"16B24
@"<CSVoiceTriggerDelegate>"
B32@0:8^B16^Q24
@"<CSBiometricMatchMonitorDelegate>"
@28@0:8I16@20
@"CSNovDetector"
@"<CSKeywordAnalyzerNDAPIScoreDelegate>"
@40@0:8Q16Q24@32
v36@0:8@16B24@28
v28@0:8@16i24
v36@0:8@16i24d28
v36@0:8@16i24@28
v28@0:8@"AVVoiceController"16B24
v36@0:8@"AVVoiceController"16B24@"NSError"28
v32@0:8@"AVVoiceController"16q24
v24@0:8@"AVVoiceController"16
v28@0:8@"AVVoiceController"16i24
v36@0:8@"AVVoiceController"16i24d28
v32@0:8@"AVVoiceController"16@"NSError"24
v36@0:8@"AVVoiceController"16i24@"NSError"28
v40@0:8@"AVVoiceController"16@"AVVCAlertInformation"24@"NSError"32
v32@0:8@"AVVoiceController"16@"NSDictionary"24
v32@0:8@"AVVoiceController"16@"AVVCAudioBuffer"24
v28@0:8B16@"NSArray"20
v44@0:8@"AVVoiceController"16Q24B32@"NSError"36
v40@0:8@"AVVoiceController"16Q24q32
v40@0:8@"AVVoiceController"16Q24@"AVVCAudioBuffer"32
v32@0:8@"AVVoiceController"16Q24
v60@0:8@16Q24@32@40Q48I56
v60@0:8@"CSAudioDecoder"16Q24@"NSData"32@"NSData"40Q48I56
v40@0:8@"CSAudioFileReader"16@"NSData"24Q32
v36@0:8@"CSAudioFileReader"16B24@"NSError"28
v32@0:8@"CSAudioFileReader"16q24
v24@0:8@"<CSAudioServerCrashEventProvidingDelegate>"16
v24@0:8@"<CSAudioSessionEventProvidingDelegate>"16
@32@0:8@16^@24
@24@0:8^@16
Q32@0:8@16^@24
B24@0:8Q16
B40@0:8q16Q24^@32
B40@0:8Q16Q24^@32
v28@0:8Q16B24
v48@0:8@16Q24@32Q40
@28@0:8@16I24
v36@0:8B16Q20@28
v32@0:8q16Q24
@"AVVoiceController"
{AudioBufferList="mNumberBuffers"I"mBuffers"[1{AudioBuffer="mNumberChannels"I"mDataByteSize"I"mData"^v}]}
^{AudioBufferList=I[1{AudioBuffer=II^v}]}
@"CSRemoteRecordClient"
@"CSAudioFileReader"
@"<CSAudioServerCrashEventProvidingDelegate>"
@"<CSAudioSessionEventProvidingDelegate>"
v28@0:8B16@?20
v32@0:8@16d24
i16@0:8
v20@0:8i16
@"<CSOpportuneSpeakListenerDelegate>"
@"CSSPGEndpointAnalyzer"
@"<CSAudioSessionProviding>"
@"CSPlainAudioFileWriter"
@24@0:8^{BTLocalDeviceImpl=}16
v40@0:8^{BTDeviceImpl=}16I24i28I32i36
v28@0:8^{BTSessionImpl=}16i24
v24@0:8^{BTSessionImpl=}16
v32@0:8^{BTLocalDeviceImpl=}16i24i28
^{BTSessionImpl=}16@0:8
^{BTLocalDeviceImpl=}16@0:8
v24@0:8^{BTLocalDeviceImpl=}16
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
v40@0:8@"CSActivationXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
Q24@0:8@16
v32@0:8Q16@?24
v32@0:8@"<CSAudioSessionInfoProviding>"16@"NSDictionary"24
@"<CSAudioSessionInfoProviding>"
v40@0:8Q16@24@?32
v40@0:8Q16@"NSDictionary"24@?<v@?@"NSError"@"CSSmartSiriVolumeEstimate">32
v40@0:8@16Q24@?32
v40@0:8@16@?24@?32
@40@0:8@16Q24@32
v32@0:8^@16Q24
@"NSMapTable"
@20@0:8I16
@?16@0:8
@"CSActivationEvent"
v32@0:8@"CSMediaPlayingMonitor"16q24
v28@0:8@"CSSiriEnabledMonitor"16B24
v52@0:8@16@24B32@36@44
v44@0:8@16B24@28@36
v40@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioRecordContext"24@"CSAudioStartStreamOption"32
v52@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioRecordContext"24B32@"CSAudioStartStreamOption"36@"NSString"44
v32@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioStopStreamOption"24
v40@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioStopStreamOption"24@"NSString"32
v44@0:8@"CSSiriClientBehaviorMonitor"16B24@"NSString"28@"CSAudioRecordContext"36
@28@0:8f16@20
@40@0:8Q16@24Q32
@28@0:8f16@"CSAsset"20
v24@0:8@"CSAsset"16
@"CSSmartSiriVolumeEstimate"40@0:8Q16@"NSNumber"24Q32
v32@0:8d16@?24
v28@0:8I16q20
v52@0:8@16q24B32Q36Q44
f24@0:8q16
f24@0:8f16f20
f20@0:8f16
f36@0:8f16f20f24f28f32
f44@0:8f16f20f24f28f32f36f40
f28@0:8f16f20f24
^f24@0:8@16
{unique_ptr<SmartSiriVolume, std::__1::default_delete<SmartSiriVolume> >="__ptr_"{__compressed_pair<SmartSiriVolume *, std::__1::default_delete<SmartSiriVolume> >="__value_"^{SmartSiriVolume}}}
{vector<float, std::__1::allocator<float> >="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::__1::allocator<float> >="__value_"^f}}
@"NSUserDefaults"
@"CSSmartSiriVolumeEnablePolicy"
@"NSObject<OS_dispatch_source>"
v40@0:8@16Q24Q32
v44@0:8@"CSAudioInjectionEngine"16Q24B32@"NSError"36
v40@0:8@"CSAudioInjectionEngine"16Q24Q32
v56@0:8@"CSAudioInjectionEngine"16Q24@"NSData"32@"NSData"40Q48
v32@0:8@"CSAudioInjectionEngine"16@"CSAudioChunkForTV"24
@"CSAudioInjectionDevice"
@"CSAudioInjectionEngine"
B24@0:8d16
@"<CSAudioFileReaderDelegate>"
@32@0:8d16Q24
q24@0:8@16
d24@0:8[80s]16
v32@0:8@"CSSelfTriggerDetector"16@"NSDictionary"24
@"<CSMyriadSelfTriggerCoordinatorDelegate>"
{unique_ptr<BatchBeepCanceller, std::__1::default_delete<BatchBeepCanceller> >="__ptr_"{__compressed_pair<BatchBeepCanceller *, std::__1::default_delete<BatchBeepCanceller> >="__value_"^{BatchBeepCanceller}}}
{vector<short, std::__1::allocator<short> >="__begin_"^s"__end_"^s"__end_cap_"{__compressed_pair<short *, std::__1::allocator<short> >="__value_"^s}}
@"<CSBeepCancellerDelegate>"
B44@0:8@16f24@?28@?36
@"<CSAudioInjectionEngineDelegate>"
@"CSKeywordAnalyzerNDEAPI"
v48@0:8Q16@24@32@?40
@"CSSmartSiriVolumeManager"
v28@0:8f16@20
@44@0:8@16B24@28@36
v48@0:8@16@24@32@?40
B32@0:8r^v16Q24
B32@0:8r^v16q24
@"CSAudioStreamRequest"
@"CSAudioStartStreamOption"
v40@0:8@"CSVoiceTriggerAwareZeroFilter"16@"NSData"24Q32
v40@0:8@"CSBeepCanceller"16@"NSData"24Q32
@20@0:8f16
v32@0:8f16B20@24
B20@0:8f16
@"<CSAudioPreprocessorDelegate>"
@"CSAudioSampleRateConverter"
@"CSVoiceTriggerAwareZeroFilter"
@"CSBeepCanceller"
@"CSAudioZeroCounter"
v44@0:8B16@20@28@36
v32@0:8i16@20B28
v44@0:8@16@24f32Q36
v44@0:8@"CSAudioConverter"16@"NSArray"24f32Q36
@"CSAudioConverter"
Vv24@0:8@?16
Vv40@0:8@16q24@?32
Vv24@0:8@?<v@?@"NSString">16
Vv40@0:8@"NSArray"16q24@?<v@?@"NSError">32
Vv24@0:8@?<v@?Q>16
Vv24@0:8@?<v@?>16
Vv24@0:8@?<v@?B>16
Vv24@0:8@?<v@?q>16
v64@0:8@16@24@32B40Q44@52B60
@"<CSADCompanionServiceProvider>"
@20@0:8i16
@28@0:8@16i24
v64@0:8Q16Q24@32@40@48@?56
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
v64@0:8Q16Q24@"NSString"32@"NSArray"40@"NSArray"48@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"CSAssetController"16Q24
v48@0:8Q16Q24@32@?40
@"CSPolicy"
@"CSAssetDownloadingOption"
@"<CSVoiceTriggerAwareZeroFilterDelegate>"
@"CSAudioZeroFilter"
@"<CSSPGEndpointAnalyzerDelegate>"
@"NSObject<OS_os_transaction>"
@"<CSAudioMetricProviding>"
v24@0:8@"CSLSWakeGesture"16
v32@0:8Q16@"NSDate"24
@"CSLSWakeGestureMonitor"
@"<CSActivateXPCConnectionDelegate>"
v28@0:8B16Q20
@"CSKeywordAnalyzerNDAPI"
@40@0:8@16@24Q32
@36@0:8@16f24Q28
@52@0:8Q16@24@32f40Q44
@48@0:8Q16@24@32Q40
@40@0:8d16d24d32
@48@0:8q16@24@32@40
B84@0:8@16f24{AudioStreamBasicDescription=dIIIIIIII}28@?68@?76
v32@0:8@"NSDictionary"16@"NSString"24
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?>32
v24@0:8@"NSData"16
v32@0:8@"CSAlarmMonitor"16q24
v32@0:8@"CSTimerMonitor"16q24
v28@0:8@16f24
v28@0:8@"CSVolumeMonitor"16f24
@"<CSConnectionServiceDelegate>"
@"<CSSmartSiriVolumeProcessor>"
v32@0:8@"CSVoiceTriggerAssetHandler"16@"CSAsset"24
v40@0:8@"CSActivationEventNotificationHandler"16@"CSActivationEvent"24@?<v@?B@"NSError">32
v32@0:8@"CSAudioProvider"16Q24
@"CSFallbackAudioSessionReleaseProvider"
@"<CSSpeechManagerDelegate>"
@"CSOpportuneSpeakListnerTestService"
@"CSPostBuildInstallService"
v64@0:8@16@24@32@40@48@?56
@32@0:8@16f24I28
v28@0:8@16I24
@40@0:8Q16@24@32
@48@0:8@16@24@32Q40
B36@0:8@16@24B32
B32@0:8@16Q24
@"<CSXPCConnectionDelegate>"
@"CSAudioSessionProvidingProxy"
@"CSFallbackAudioSessionReleaseProvidingProxy"
@"CSAudioSessionInfoProvidingProxy"
@"CSAudioStreamProvidingProxy"
@"CSAudioAlertProvidingProxy"
@"CSAudioMeterProvidingProxy"
@"CSAudioMetricProvidingProxy"
@"CSXPCListener"
@"CSActivationXPCListener"
@"CSVoiceIdXPCListener"
@"CSVoiceTriggerXPCListener"
@"CSAudioInjectionXPCListener"
@32@0:8Q16f24f28
v32@0:8r^v16Q24
v40@0:8r^v16Q24Q32
@24@0:8^Q16
{unique_ptr<corespeech::CSAudioCircularBufferImpl<unsigned short>, std::__1::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short> > >="__ptr_"{__compressed_pair<corespeech::CSAudioCircularBufferImpl<unsigned short> *, std::__1::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short> > >="__value_"^{CSAudioCircularBufferImpl<unsigned short>}}}
B32@0:8@16@?24
Q20@0:8f16
d24@0:8Q16
Q40@0:8Q16Q24Q32
B32@0:8d16^@24
@"<CSRemoteRecordClientDelegate>"
v24@0:8@?<v@?@>16
@48@0:8@16@24@32@40
@"NSXPCInterface"
v52@0:8@16Q24@32Q40I48
@"<CSAudioDecoderDelegate>"
v24@0:8@"<CSAudioSessionProviding>"16
v32@0:8@"<CSAudioSessionProviding>"16@"NSDictionary"24
v28@0:8@"<CSAudioSessionProviding>"16B24
v40@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioRecordContext"24@"CSAudioStartStreamOption"32
v44@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioRecordContext"24B32@"CSAudioStartStreamOption"36
v32@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioStopStreamOption"24
q24@0:8Q16
v40@0:8@"<CSAudioAlertProviding>"16q24@"NSError"32
v36@0:8B16@20@28
@"<CSAudioAlertProviding>"
d24@0:8d16
B28@0:8B16^{__CFString=}20
B24@0:8^{__CFString=}16
@"<CSVoiceTriggerXPCConnectionDelegate>"
I24@0:8Q16
S16@0:8
@32@0:8q16Q24
@24@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16
^{OpaqueAudioConverter=}16@0:8
v24@0:8^{OpaqueAudioConverter=}16
^{AudioBufferList=I[1{AudioBuffer=II^v}]}16@0:8
v24@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16
@"CSAudioInjectionFileOption"
@112@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64Q104
@"<CSAudioConverterDelegate>"
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSString"@"NSString"@"NSError">32
v48@0:8@16@24@32Q40
@"<CSAudioMeterProviding>"
Apbhw
pbtb
pbiu
otua
ciov
bhev
eltb
siar
tdtb
cvdh
cvpc
tcid
tsop
rtsh
tvps
cvdh
Amcplsupoxeps
(knN
ffffff
@mcpl
fff?
softlink:r:path:/System/Library/PrivateFrameworks/CarouselServices.framework/CarouselServices
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>19A603013</string>
<key>CFBundleIdentifier</key>
<string>com.apple.corespeechd</string>
<key>CFBundleName</key>
<string>corespeech daemon</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>18R5569x</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>7.1</string>
<key>DTSDKBuild</key>
<string>18R5569x</string>
<key>DTSDKName</key>
<string>watchsimulator7.1.internal</string>
<key>DTXcode</key>
<string>1200</string>
<key>DTXcodeBuild</key>
<string>12A8179f</string>
<key>MinimumOSVersion</key>
<string>7.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.airplay.carplayavvc</key>
<true/>
<key>com.apple.assistant.analytics</key>
<true/>
<key>com.apple.assistant.client</key>
<true/>
<key>com.apple.assistant.multiuser.service</key>
<true/>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.coreaudio.CanRecordPastData</key>
<true/>
<key>com.apple.coreaudio.CanRecordWithoutSessionActivation</key>
<true/>
<key>com.apple.coreaudio.i-am-siri</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.corespeech.cat.xpc</key>
<true/>
<key>com.apple.hid.system.user-access-fast-path</key>
<true/>
<key>com.apple.managedconfiguration.profiled.profile-list-read</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.borealis</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.phs</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.AdBlockerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsIPad</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.SpeechEndpointAssets</string>
<string>com.apple.MobileAsset.SpeechEndpointAssetsWatch</string>
<string>com.apple.MobileAsset.RaiseToSpeakAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMac</string>
<string>com.apple.MobileAsset.SpeakerRecognitionAssets</string>
</array>
<key>com.apple.private.audio.dark-wake-audio</key>
<true/>
<key>com.apple.private.audio.hal.aop-audio.user-access</key>
<true/>
<key>com.apple.private.audio.notification-wake-audio</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.corespeech.xpc.remote</key>
<true/>
<key>com.apple.private.corespeechd.activation</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.medicaliddata</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.homekit.siri-audio-connection</key>
<true/>
<key>com.apple.private.iokit.darkwake-control</key>
<true/>
<key>com.apple.private.mediasafetynet.exception.announcemessage</key>
<true/>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.security.storage.triald</key>
<true/>
<key>com.apple.private.shazamkit.allow-remote-recognition</key>
<true/>
<key>com.apple.private.shazamkit.allow-signature-generation</key>
<true/>
<key>com.apple.private.siri.activation</key>
<true/>
<key>com.apple.private.siri.invoke</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.proactive.eventtracker</key>
<true/>
<key>com.apple.rootless.storage.CoreSpeech</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array/>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Caches/com.apple.corespeech.cat.xpc/</string>
<string>/Library/Trial/Treatments/200/</string>
<string>/Library/Trial/NamespaceDescriptors/</string>
<string>/Library/Trial/Treatments/322/</string>
<string>/Library/Trial/Treatments/404/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/VoiceTrigger/</string>
<string>/Library/Logs/CrashReporter/Assistant/</string>
<string>/Library/Logs/CrashReporter/VoiceTrigger/</string>
<string>/Library/Logs/CrashReporter/ssr/</string>
<string>/Library/Logs/CrashReporter/CoreSpeech/</string>
<string>/Library/Logs/CrashReporter/RTS/</string>
<string>/Library/Caches/VoiceTrigger/</string>
<string>/Library/Caches/com.apple.corespeechd/</string>
<string>/Documents/Logs/CoreSpeech/</string>
</array>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>AppleSPUHIDDriverUserClient</string>
<string>IOHIDEventServiceFastPathUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.carousel.backlightxpc</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.frontboard.systemappservices</string>
<string>com.apple.assistant.settings</string>
<string>com.apple.MobileTimer.timerserver</string>
<string>com.apple.MobileTimer.alarmserver</string>
<string>com.apple.audio.voicetrigger.xpc</string>
<string>com.apple.audio.AudioComponentRegistrar</string>
<string>com.apple.voicetrigger.voicetriggerservice</string>
<string>com.apple.audio.AudioQueueServer</string>
<string>com.apple.server.bluetooth</string>
<string>com.apple.powerlog.plxpclogger.xpc</string>
<string>com.apple.SystemConfiguration.NetworkInformation</string>
<string>com.apple.mediaremoted.xpc</string>
<string>com.apple.coremedia.carplayavvc.xpc</string>
<string>com.apple.iohideventsystem</string>
<string>com.apple.siri.activation</string>
<string>com.apple.siri.activation.horseman</string>
<string>com.apple.siri.activation.blackbird</string>
<string>com.apple.assistant.analytics</string>
<string>com.apple.audio.SystemSoundServer-iOS</string>
<string>com.apple.BTLEAudioController.xpc</string>
<string>com.apple.healthd.server</string>
<string>com.apple.SystemConfiguration.configd</string>
<string>com.apple.PowerManagement.control</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.locationd.registration</string>
<string>com.apple.backlightd</string>
<string>com.apple.carousel.wakegesturemonitor</string>
<string>com.apple.homekit.audio.xpc</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.nsurlsessiond.NSURLSessionProxyService</string>
<string>com.apple.nsurlstorage-cache</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.mediasafetynet.exceptions</string>
<string>com.apple.symptom_diagnostics</string>
<string>com.apple.systemstatus.activityattribution</string>
<string>com.apple.assistant.multiuser.service</string>
<string>com.apple.callkit.callcontrollerhost</string>
<string>com.apple.siri.morphunassetsupdaterd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.nano</string>
<string>com.apple.raisetospeak</string>
<string>com.apple.assistant.backedup</string>
<string>com.apple.assistant.support</string>
<string>com.apple.CoreMotion</string>
<string>com.apple.airplay</string>
<string>com.apple.mediaremote</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.niservices</string>
<string>com.apple.voicetrigger</string>
<string>com.apple.voicetrigger.notbackedup</string>
<string>com.apple.avfoundation.avvc</string>
<string>com.apple.audio.virtualaudio</string>
<string>com.apple.speakerrecognition</string>
<string>com.apple.coreaudio</string>
</array>
<key>com.apple.security.ts.mobile-keybag-access</key>
<true/>
<key>com.apple.security.ts.play-audio</key>
<true/>
<key>com.apple.security.ts.play-media</key>
<true/>
<key>com.apple.siri.activation</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>com.apple.voicetrigger.voicetriggerservice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.corespeech</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
ciov
cvdh
cvpc
mcpl
supo
xeps
333333
333333
