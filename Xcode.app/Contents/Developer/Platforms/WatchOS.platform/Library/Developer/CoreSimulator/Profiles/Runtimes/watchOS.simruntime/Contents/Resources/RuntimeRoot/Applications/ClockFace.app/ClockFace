scrollFace
Invalid face index. Does the face exist?
v8@?0
Clock
School
Sleep
status-state-clockFace-dnd
active
inactive
mainWindowContextID
TI,R,N
TI,N
v24@?0@"HKSPSleepSettings"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T@"<TWRSleepLockOptionsProviderDelegate>",W,N,V_delegate
options
T@"TWRSleepLockOptions",R,N
clockViewController
T@"NTKClockViewController",R,N,V_clockViewController
zoomHandler
T@"<CUISClockZooming>",&,N,V_zoomHandler
faceIdentifier
fastSwitchToOnDeckFace
cccc
EEEjmm
Mdjmm
MMMd
MMMdjmm
EEEEMMMMd
H:mm:ss
0:00:00
mm:ss
00:00
H:m:ss
0:0:00
m:ss
0:00
yyyy-MM-dd HH:mm:ss zzz
yyyy-MM-dd-HHmmss
dayOfWeekFormatter
T@"NSDateFormatter",R,N
dayOfWeekWithTimeFormatter
dayMonthYearFormatter
shortDayMonthFormatter
shortDayMonthTimeFormatter
abbrevDayMonthFormatter
abbrevDayMonthTimeFormatter
timeFormatter
relativeDateTimeFormatter
relativeDateFormatter
dayOfWeekMonthDayFormatter
timeNoAMPMFormatter
longYMDHMSZFormatter
longYMDHMSNoSpaceFormatter
decimalFormatter
T@"NSNumberFormatter",R,N
abbreviatedTimerWithHoursFormatter
abbreviatedTimerJustMinutesSecondsFormatter
alarmSnoozeWithHoursFormatter
alarmSnoozeJustMinutesSecondsFormatter
TWRNanoTimeKitClientPauseReasonsChangedNotification
v16@?0@"CSLClockSettings"8
v16@?0@"CSLMutableClockClientSettings"8
v24@?0Q8Q16
v16@?0d8
NPRFBatteryCenterLaunchNotification
HearingAidPresentAlertNotificationName
clock
T@"NTKClockViewController",W,N,V_clock
clockContainer
T@"ClockContainerViewController",W,N,V_clockContainer
screenWakeProvider
T@"<CSLPIRootScreenWakeProviderWithClient>",W,N,V_screenWakeProvider
backlightProxy
T@"<CSLPIBacklightProxy>",W,N,V_backlightProxy
pauseReasons
T@"NSSet",R,N
GalleryScroll
GalleryScrollAddable
TWRPPTGalleryScrollTestUnknownTestName
%@ is an unknown test name
com.apple.carousel.clockfacestatusview
PUICStatusSleepLockedState
status-state-clockFace-sleep
status-state-statusBar-sleep
intendedUI
v32@?0@"NSNumber"8@"TWRClockFaceStatusViewController"16^B24
displayMode
activeStatusViewController
statusViewControllerMap
    
T@"NSMutableDictionary",R,N,V_statusViewControllerMap
T@"TWRClockFaceStatusViewController",&,N,V_activeStatusViewController
placement
T@"CUISSensorActivityIndicatorPlacement",&,N,V_placement
T@"<TWRStatusViewPlacementCoordinatorDelegate>",W,N,V_delegate
Tq,N,V_displayMode
client
T@"<CSLSAOTModeProvider>",&,N
usesFlipbook
TB,R,N
CFFIXED_USER_HOME
HOME
activeStateNames
suppressedStateNames
activeStates
suppressedStates
@"<NSObject>"8@?0
supportsSecureCoding
TB,R
T@"NSSet",C,N,V_activeStateNames
T@"NSSet",C,N,V_suppressedStateNames
timeToGetFaceOnDeck
yOffset
Td,R,N
defaultWidth
defaultHeight
SchoolTimeInactive
schoolTimeViewController
T@"NTKSchoolTimeViewController",R,N,V_schoolTimeViewController
schoolMode
T@"TWRSchoolMode",R,N,V_schoolMode
T@"<TWRSchoolTimeViewControllerDelegate>",W,N,V_delegate
schoolTimeActive
TB,R,N,GisSchoolTimeActive
statusViewController
T@"UIViewController<NTKClockStatusBarViewController>",R,N
T@"<CSLSAOTModeProvider>",R,N
fastSwitchToFace
Face not found
settings
%@ entries
T@"BSMutableSettings",R,N,V_settings
hasCommittedFirstFrame
currentFaceAnalog
TB,R,N,GisCurrentFaceAnalog
currentFaceDescription
T@"NSString",R,C,N
currentFaceClass
siriContextFaceIdentifier
powerLogDescription
T@"NSDictionary",R,C,N
currentFaceReportingValue
currentComplicationReportingValues
T@"NSArray",R,C,N
editing
TB,R,N,GisEditing
TB,D,N
TB,D,N,GisCurrentFaceAnalog
T@"NSString",C,D,N
T@"NSDictionary",C,D,N
T@"NSArray",C,D,N
TB,D,N,GisEditing
diff
T@"BSSettingsDiff",&,N,V_diff
isFaceAnalog
faceDescription
faceClass
CSLPhysicalTherapyState
status-state-clockFace-physicalTherapy
CSLWorkoutState
status-state-clockFace-workout
CSLFirstPartyWorkoutState
status-state-clockFace-workout-firstParty
CSLNikeWorkoutState
status-state-clockFace-workout-nike
CSLNavigationState
status-state-clockFace-nav
CSLFirstPartyNavigationState
status-state-clockFace-nav-firstParty
CSLNowPlayingState
status-state-clockFace-nowPlaying
CSLRecordingState
status-state-clockFace-recording
CSLPhoneCallState
status-state-clockFace-phoneCall
statusView
T@"TWRClockFaceStatusView",&,N,V_statusView
Cannot set school mode state on %@ after the view has been loaded
Cannot set sleep mode state on %@ after the view has been loaded
Cannot set flipbook compatibility on %@ after the view has been loaded
chargingStatusShowsPercentage
TB,N,GisChargingStatusShowingPercentage
usesFlipbookCompatibleStatusView
TB,N
statusObserver
T@"<NTKClockStatusBarViewControllerStatusObserver>",W,N
padding
T{CGPoint=dd},N,V_padding
horizontalPadding
Td,N
verticalPadding
wantsIconShadow
TB,N,V_wantsIconShadow
displayingStatus
TB,R,N,GisDisplayingStatus
animating
TB,R,N,GisAnimating
paddingObserver
T@"<TWRClockFaceStatusViewControllerPaddingObserver>",W,N,V_paddingObserver
blanked
TB,N,GisBlanked
willBeOn
screenOn
TB,N,GisScreenOn
TB,N,GisBlanked,V_blanked
TB,N,V_willBeOn
TB,N,GisScreenOn,V_screenOn
backlightRequest
T@"<CSLSBacklightRequest>",R,N
transactionID
flags
rampDuration
iconShadow
statusViewStateActive
TB,N,GstatusViewIsStateActive
TB,N,GstatusViewIsStateActive,V_statusViewStateActive
listener
T@"NSXPCListener",&,N,V_listener
connection
T@"NSXPCConnection",&,N,V_connection
displayLink
T@"CADisplayLink",&,N,V_displayLink
endpoint
T@"NSXPCListenerEndpoint",R,N,V_endpoint
T@"<CUISClockZooming>",W,N,V_clock
CSLAirplaneModeState
CSLChargingState
CSLDoNotDisturbState
CSLDowntimeState
CSLDisconnectedState
CSLLockedState
CSLNopeState
CSLNotificationsState
CSLNullState
CSLSleepModeStatusState
CSLTinCanAvailabilityState
CSLTheaterState
CSLWaterLockedState
v12@?0B8
statusViewClient
T@"TWRClockFaceStatusViewClient",R,N
configuration
T@"CSLClockFaceStatusViewConfiguration",R,N,V_configuration
stateMap
T@"NSDictionary",R,N,V_stateMap
unlockedStates
T@"NSArray",R,N,V_unlockedStates
lockedStates
T@"NSArray",R,N,V_lockedStates
T@"NSMutableSet",R,N,V_suppressedStates
stateToSessionTypeMap
T@"NSMapTable",R,N,V_stateToSessionTypeMap
states
T@"NSArray",&,N,V_states
T@"TWRClockFaceStatusViewClient",R,N,V_statusViewClient
T@"PUICStatusView",R,N,V_statusView
statusViewSettings
T@"CSLClockFaceStatusViewSettings",R,C,N,V_statusViewSettings
T@"<NTKClockStatusBarViewControllerStatusObserver>",W,N,V_statusObserver
SleepLockInactive
T@"<TWRSleepLockViewControllerDelegate>",W,N,V_delegate
sleepLockEnabled
TB,R,N,V_sleepLockEnabled
createFace
No face with face identifier %@
No face style for face name %@
T@"<TWRClockFaceStatusViewClientDelegate>",W,N,V_delegate
kApplicationIdentifier
kCountOnFace
v32@?0@"NTKClockComplicationCount"8Q16^B24
v32@?0@"CSLClockComplicationCount"8Q16^B24
applicationIdentifier
countOnFace
orbToFaceLibraryFromFace
com.apple.clocktower
T@"SCLSchoolMode",R,N,V_schoolMode
state
T@"SCLState",&,V_state
TB,R,N,GisActive
T@"<TWRSchoolModeDelegate>",W,N,V_delegate
delegateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
v16@?0@"FBSMutableSceneClientSettings"8
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
useAnalogView
showDNDIcon
showTime
showDate
showAlarm
TB,R,N,V_useAnalogView
TB,R,N,V_showDNDIcon
TB,R,N,V_showTime
TB,R,N,V_showDate
TB,R,N,V_showAlarm
CSL_HOME_DIRECTORY_OVERRIDE
com.apple.Carousel.NTKServer
startLevel
endLevel
naturalFrequency
fence
slotID
Td,N,V_startLevel
Td,N,V_endLevel
Td,N,V_naturalFrequency
T@"BKSAnimationFenceHandle",&,N,V_fence
TI,N,V_slotID
ComplicationPicker
ComplicationPickerScrollPicker
TWRPPTComplicationPickerScrollTestUnknownTestName
%@:%@ %@
timestamp
T@"NSDate",R,N,V_timestamp
data
T@"NSDictionary",R,N,V_data
Diagnostic log for %@
%@: %@
statusBar
clockFace
dock
testOptions
T@"NSDictionary",&,N,V_testOptions
handler
T@"TWRPPTHandler",W,N,V_handler
allowsAnimations
environment
TB,N,V_allowsAnimations
Tq,N,V_environment
forFlipbook
TB,R,N,GisForFlipbook
main
school
sleep
T@"<CUISClockZooming>",&,N,V_clock
startTime
Td,N,V_startTime
T@"<TWRZoomSimulatorDelegate>",W,N,V_delegate
running
TB,R,N,GisRunning,V_running
createComplicationsOnFace
Invalid face index %@
%@-%@
synchronously
TB,N,V_synchronously
%@-%@%@%@
%@/Library/Logs/CrashReporter/DiagnosticLogs/Carousel
idleDuration
idleOnFace
slowModeEnabled
TB,R,N,GisSlowModeEnabled
screenBlanked
TB,R,N,GisScreenBlanked
launchCompleted
TB,R,N,GisLaunchCompleted
AOTEnabled
TB,R,N,GisAOTEnabled
screenWakeProviderState
TQ,R,N
TI,D,N
TB,D,N,GisSlowModeEnabled
TB,D,N,GisScreenBlanked
TB,D,N,GisLaunchCompleted
TB,D,N,GisAOTEnabled
TQ,D,N
isEmpty
Unknown setting %@
deactivating
toggleClockSwitcher
SwitcherBringup
SwitcherDismiss
com.apple.carousel.clkcomplicationobserver
containerViewController
T@"ClockContainerViewController",N,V_containerViewController
j8/Omm6s1lsmTDFsXjsBfA
v24@?0@"CUISSensorActivityIndicatorPlacementAssertion"8@"NSError"16
zoomViewController
T@"UIViewController<NTKClockIconZoomAnimator>",&,N,V_zoomViewController
iconView
T@"NTKClockIconView",&,N,V_iconView
placeholderScrollCenterView
T@"UIScrollView",&,N,V_placeholderScrollCenterView
clockIsEditing
TB,N,V_clockIsEditing
clockIsInteractive
TB,N,V_clockIsInteractive
systemGestureAssertion
T@"CSLSSuspendSystemGestureAssertion",&,N,V_systemGestureAssertion
isClockViewControllerReady
TB,N,V_isClockViewControllerReady
placementCoordinator
T@"TWRStatusViewPlacementCoordinator",R,N,V_placementCoordinator
indicatorPlacementAssertion
T@"CUISSensorActivityIndicatorPlacementAssertion",R,N,V_indicatorPlacementAssertion
T@"CSLNTKClockViewController",&,N,V_clockViewController
T@"TWRSchoolTimeViewController",&,N,V_schoolTimeViewController
sleepLockViewController
T@"TWRSleepLockViewController",&,N,V_sleepLockViewController
T@"<CSLPIRootScreenWakeProviderWithClient>",R,N,V_screenWakeProvider
zoomDown
zoomUp
zoomCurrentFace
PPT Placeholder Slot Image
v16@?0@"UIGraphicsImageRendererContext"8
createComplicationsSynchronouslyOnFace
handler
testPrefix
_determineFaceIndexForTest:withTestPrefix:
sharedApplication
failedTest:withFailure:
clockViewController
startedTest:
finishedTest:
PPTRunScrollTestNamed:withCompletion:
PPTSwitchToFaceAtIndex:withCompletion:
runTest:
sleepModeOptions
optionsWithAnalogView:showDNDIcon:showTime:showDate:showAlarm:
twr_sleepLockOptions
bundleForClass:
sleepModeColor
initWithName:withImageName:inBundle:withTintColor:
statusViewIsStateActive
setStatusViewStateActive:
builderWithObject:
appendBool:withName:
build
state
description
clientSettingsClass
initWithSettings:
otherSettings
objectForSetting:
unsignedIntValue
keyDescriptionForSetting:
mainWindowContextID
mutableCopyWithZone:
numberWithUnsignedInt:
setObject:forSetting:
copyWithZone:
setMainWindowContextID:
init
addObserver:
_setCurrentSettings:
currentSleepSettingsWithCompletion:
_optionsForSleepSettings:
_withLock:
sleepLockOptionsProvider:didUpdateOptions:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
sleepStore:sleepScheduleDidChange:
sleepStore:sleepSettingsDidChange:
sleepStore:sleepEventDidOccur:
sleepStore:sleepScheduleStateDidChange:
sleepStore:sleepModeOnDidChange:
options
delegate
setDelegate:
.cxx_destruct
_lock
_sleepStore
_currentSettings
_delegate
sharedTileNavigationService
navigateToClockAnimated:completion:
navigateToClockAnimated:
start
_faceNameForTest:withTestPrefix:
_determineFaceStyleForTest:withTestPrefix:
numberWithInteger:
PPTSetupLibraryForSwitchToFacePPT:isTargetFaceInDock:
PPTFaceIndexForFaceStyle:
length
substringFromIndex:
PPTFaceIndexForPPTFaceName:
PPTFaceIndexForPPTFaceIdentifier:
PPTFaceStyleForPPTFaceName:
PPTUseBlankFaceLibrary
PPTRestoreLibrary
_availableTestDictionary
allKeys
countByEnumeratingWithState:objects:count:
hasPrefix:
objectForKey:
alloc
setTestOptions:
setHandler:
_availableTestList
count
dictionaryWithCapacity:
setObject:forKey:
copy
arrayWithObjects:count:
initWithClockViewController:zoomHandler:
prepareFaceForTest:testPrefix:completion:
_determineFaceIndexForTestWithFaceIdentifier:
_useBlankFaceLibrary
_restoreLibrary
runTest:options:
zoomHandler
setZoomHandler:
_availableTests
_clockViewController
_zoomHandler
testOptions
PPTSetupLibraryForSwitchToFacePPTWithFaceIdentifier:isTargetFaceInDock:
failedTest:
dealloc
currentLocale
locale
setLocale:
dateFormatFromTemplate:options:locale:
setDateFormat:
setAMSymbol:
setPMSymbol:
setTimeStyle:
setDateStyle:
setDoesRelativeDateFormatting:
setNumberStyle:
dateFromString:
decimalFormatter
stringFromNumber:
dayOfWeekFormatter
stringFromDate:
dayOfWeekWithTimeFormatter
dayMonthYearFormatter
shortDayMonthTimeFormatter
abbrevDayMonthFormatter
abbrevDayMonthTimeFormatter
timeFormatter
relativeDateTimeFormatter
dayOfWeekMonthDayFormatter
timeNoAMPMFormatter
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
longYMDHMSZFormatter
longYMDHMSNoSpaceFormatter
relativeDateFormatter
_shouldShowHoursForTimerDuration:
abbreviatedTimerWithHoursFormatter
abbreviatedTimerJustMinutesSecondsFormatter
dateWithTimeInterval:sinceDate:
alarmSnoozeWithHoursFormatter
alarmSnoozeJustMinutesSecondsFormatter
sharedInstance
shortDayMonthFormatter
formatNumberAsDecimal:
formatDateAsDayOfWeek:
formatDateAsAbbreviatedDayOfWeekWithTime:
formatDateAsDayMonthYearStyle:
formatDateAsShortDayMonthWithTimeStyle:
formatDateAsAbbreviatedDayMonthStyle:
formatDateAsAbbreviatedDayMonthWithTimeStyle:
formatDateAsTimeStyle:
formatDateAsRelativeDateAndTimeStyle:
formatDateAsDayOfWeekMonthDayStyle:
formatDateAsTimeNoAMPM:
formatDateAsLongYMDHMSZWithDate:
formatDateAsLongYMDHMSNoSpacesWithDate:
formatDateAsRelativeDateStyle:
formatAbbreviatedTimerDuration:
formatAlarmSnoozeDuration:
_dayOfWeekFormatter
_dayOfWeekWithTimeFormatter
_dayMonthYearFormatter
_shortDayMonthFormatter
_shortDayMonthTimeFormatter
_abbrevDayMonthFormatter
_abbrevDayMonthTimeFormatter
_timeFormatter
_relativeDateTimeFormatter
_relativeDateFormatter
_dayOfWeekMonthDayFormatter
_timeNoAMPMFormatter
_longYMDHMSZFormatter
_longYMDHMSNoSpaceFormatter
_decimalFormatter
_abbreviatedTimerWithHoursFormatter
_abbreviatedTimerJustMinutesSecondsFormatter
_alarmSnoozeWithHoursFormatter
_alarmSnoozeJustMinutesSecondsFormatter
_timerReferenceDate
_alarmReferenceDate
initWithMachServiceName:options:
setExportedObject:
setExportedInterface:
setRemoteObjectInterface:
setInvalidationHandler:
clockContainer
setClock:
resume
endpoint
diffFromSettings:toSettings:
connectWithInitialSettings:zoomEndpoint:completion:
defaultCenter
_handleClockBeginEditing
addObserver:selector:name:object:
_handleClockEndEditing
mutableCopy
remoteObjectProxy
applyClientSettingsDiff:options:
clock
currentFaceClass
setCurrentFaceClass:
currentFaceDescription
setCurrentFaceDescription:
siriContextFaceIdentifier
setSiriContextFaceIdentifier:
powerLogDescription
setPowerLogDescription:
currentFaceIsAnalog
setCurrentFaceAnalog:
currentFaceReportingValue
setCurrentFaceReportingValue:
currentComplicationReportingValues
setCurrentComplicationReportingValues:
name
postNotificationName:
setHasCommittedFirstFrame:
didInvalidateFlipbook:
didRenderFlipbookSession:
invalidateAllFramesForReason:
settingsByApplyingToMutableCopyOfSettings:
postNotificationName:object:
isSlowModeEnabled
enableSlowMode
disableSlowMode
isScreenBlanked
backlightProxy
setBlanked:
screenWakeProvider
handleScreenBlanked
handleScreenUnblanked
isLaunchCompleted
isAOTEnabled
handleAOTEnabled:
screenWakeProviderState
didChangeActiveProvider:completion:
willBecomeInactiveProvider:
inspectChangesWithBlock:
sharedStartupService
markLaunchCompleted
pauseReasons
setEditing:
launchRectForComplicationApplicationIdentifier:
flags
backlightRequest
canSendResponse
response
sendResponse:
initWithRampDuration:
handleBacklightRequest:animated:flags:brightnessRamp:completion:
disableFlipbookGeneration:
abortAllSleepTasks
view
window
firstResponder
walkResponderChainToHandleButton:eventType:firstDownTime:lastUpTime:handlersChecked:
handleAlwaysOnTapToWakeEvent:
performLocalZoomWithOptions:completion:
completeLocalZoomAtLevel:fence:
forwardNotification:
_handleSignificantAppearanceChange:
defaultClient
applySettingsDiff:completion:
getLaunchRectForComplicationApplicationIdentifier:completion:
handleScreenChangedAction:brightnessRampAction:synchronously:completion:
handleButton:eventType:firstDownTime:lastUpTime:synchronously:completion:
handleAlwaysOnTapToWakeEvent:synchronously:completion:
logStateAsFault:errorMessage:
prepareZoomFaceTestWithName:prefix:completion:
zoomFaceTestCompleted
firstFrameWasCommitted
sendInvalidateAllFramesForReason:
setClockContainer:
setScreenWakeProvider:
setBacklightProxy:
_connection
_PPThandler
_clientSettings
_settings
_zoomSession
_zoomSimulator
_clock
_clockContainer
_screenWakeProvider
_backlightProxy
isEqualToString:
stringWithFormat:
exceptionWithName:reason:userInfo:
raise
registerClientWithConfiguration:completion:
launchSessionAppForSessionType:
interfaceWithProtocol:
setClass:forSelector:argumentIndex:ofReply:
prepareToAnimate
showFinalStateAnimated:
applySettings:
mainBundle
appendString:withName:
stateForIntendedUI:
_intendedUI
placementForClockIndicatorWithOffset:
usesFlipbookCompatibleStatusView
removeObjectForKey:
displayMode
setActiveStatusViewController:
setPaddingObserver:
placementForStatusViewController:
setPlacement:
statusViewControllerMap
placementCoordinator:didUpdatePlacement:
padding
activeStatusViewController
integerValue
setObject:forKeyedSubscript:
enumerateKeysAndObjectsUsingBlock:
appendObject:withName:
appendDictionarySection:withName:multilinePrefix:skipIfEmpty:
appendBodySectionWithName:multilinePrefix:block:
statusViewController:didUpdatePadding:
setStatusViewController:forDisplayMode:
setDisplayMode:
placement
_displayMode
_placement
_statusViewControllerMap
_activeStatusViewController
initWithDelegate:initialClient:stateProvider:flipbookProviderModel:backlightProxy:
client
setClient:
setAlwaysOnEnabled:
setActive:
isOnOperation
setScreenOn:
clientDidChange:
clientStartedHandlingBacklightRequest:animated:flags:
clientCompletedHandlingBacklightRequest:animated:flags:completion:
usesFlipbook
initWithClient:backlightProxy:
_multiClientProvider
_stateProvider
setPagingEnabled:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
bounds
setContentSize:
puic_crownInputSequencer
setCrownIndicatorMode:
panGestureRecognizer
_setHysteresis:
_setCanPanHorizontally:
setContentOffset:
setWithObjects:
decodeObjectOfClasses:forKey:
activeStateNames
encodeObject:forKey:
suppressedStateNames
setActiveStateNames:
setSuppressedStateNames:
allObjects
componentsJoinedByString:
builderWithObject:ofExpectedClass:
appendObject:counterpart:
isEqual
builder
appendObject:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_activeStateNames
_suppressedStateNames
currentDevice
puic_deviceVariant
initialize
yOffset
defaultWidth
defaultHeight
initWithDelegateQueue:
schoolModeDidUpdateActiveState:
viewDidLoad
initWithStatusViewControllerClass:
addChildViewController:
setAutoresizingMask:
setFrame:
addSubview:
didMoveToParentViewController:
_updatePauseReasons
schoolTimeViewControllerDidLoadView:
schoolMode
isActive
addObject:
schoolTimeViewController
setPauseReasons:
statusBarViewController
schoolTimeViewControllerDidUpdateSchoolTimeActive:
isSchoolTimeActive
statusViewController
_schoolTimeViewController
_schoolMode
setDetentProvider:
takeMinorDetentAssertion:
decodeObjectOfClass:forKey:
setDescriptionProvider:
settings
boolForSetting:
numberWithUnsignedInteger:
settings:appendDescriptionToBuilder:forFlag:object:ofSetting:
settings:keyDescriptionForSetting:
settings:valueDescriptionForFlag:object:ofSetting:
appendDescriptionToBuilder:forFlag:object:ofSetting:
valueDescriptionForFlag:object:ofSetting:
hasCommittedFirstFrame
isCurrentFaceAnalog
isEditing
setFlag:forSetting:
diff
initWithDiff:
applyToSettings:
setDiff:
_diff
setWithArray:
arrayWithCapacity:
objectForKeyedSubscript:
statusView
convertRect:fromView:
hitTest:withEvent:
setStatusView:
_statusView
setEnvironment:
invalidate
mainScreen
initWithFrame:
setView:
_setQueue:
initWithFrame:configuration:
setStatusObserver:
setUserInteractionEnabled:
positionStatusView
statusViewClient
addGestureRecognizer:
handleTapGesture:
addTarget:action:
isViewLoaded
raise:format:
setAllowsAnimations:
allowsAnimations
setAlpha:
animateWithDuration:animations:
horizontalPadding
verticalPadding
setTransform:
setStatusViewHidden:animated:
paddingObserver
setPadding:
setWantsIconShadow:
isDisplayingStatus
isAnimating
statusObserver
alpha
sessionTypeForVisibleState
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
animate
hideAnimated:
showAnimated:
setHorizontalPadding:
setVerticalPadding:
setForSchoolMode:
setForSleepMode:
isChargingStatusShowingPercentage
setChargingStatusShowsPercentage:
setUsesFlipbookCompatibleStatusView:
loadView
wantsIconShadow
_containerView
_statusViewConfiguration
_cachedStatusObserver
_wantsIconShadow
_paddingObserver
_padding
setProvider:
offForIdentifier:reason:isUserInitiated:
onForIdentifier:reason:isUserInitiated:
releaseBacklightAssertion:completion:
takeBacklightAssertion:completion:
backlightProviderIsScreenOn
backlightProviderWillScreenBeOn
backlightProviderIsScreenBlanked
onForIdentifier:reason:isUserInitiated:pid:timestamp:
offForIdentifier:reason:isUserInitiated:pid:timestamp:
isBlanked
willBeOn
setWillBeOn:
isScreenOn
offForIdentifier:reason:isUserInitiated:pid:
onForIdentifier:reason:isUserInitiated:pid:
_blanked
_willBeOn
_screenOn
initWithBacklightRequest:
initWithInfo:timeout:forResponseOnQueue:withHandler:
info
initWithBacklightRequest:transactionID:flags:completion:
transactionID
numberWithDouble:
initWithInfo:error:
doubleValue
rampDuration
colorWithRed:green:blue:alpha:
initWithImageNamed:inBundle:color:templated:
isShadowed
setShadowed:
defaultStateTransitionInDuration
defaultStateTransitionOutDuration
statusViewStateName
statusViewIndicatorView
iconShadow
setIconShadow:
statusViewTransitionInDuration
statusViewTransitionOutDuration
statusViewDoExitAnimation:completion:
statusViewDoEntranceAnimation:willGoToState:completion:
statusViewHandleTapGesture:
initWithStatusViewStateName:
_indicatorView
_statusViewStateName
_statusViewStateActive
anonymousListener
setConnection:
setZoomFraction:iconDiameter:
cleanupAfterZoom
prepareToZoomWithIconViewFrame:minDiameter:maxDiameter:
displayLinkFired:
displayLinkWithTarget:selector:
mainRunLoop
addToRunLoop:forMode:
setPreferredFramesPerSecond:
setPaused:
listener:shouldAcceptNewConnection:
setZoomFraction:diameter:completion:
cleanupAfterZoom:
prepareToZoomWithIconViewFrame:minDiameter:maxDiameter:parameters:completion:
listener
setListener:
connection
displayLink
setDisplayLink:
_zoomParameters
_parametersSize
_expectedFrameIndex
_endpoint
_listener
_displayLink
initWithClock:
sharedObserver
complicationWillBeginWakeSessionForBundleIdentifier:
complicationWillEndWakeSessionForBundleIdentifier:
complicationDidReloadOrExtendForBundleIdentifier:
currentOrderedClockComplicationCounts
convertOrderedSet:
isEqualToOrderedSet:
complicationCountsDidChange:
startDefaultObserverWithClock:
complicationListDidChange
_complicationIdentifiers
setVerticalAlignment:
initializeStatusObjects
_notificationIndicatorSettingsChanged:
setDataSource:
airPlaneModeState:
chargingState:
doNotDisturbState:
environment
downtimeState:
disconnectedState:
lockedState:
nopeState:
unreadNotificationsState:
configuration
isForFlipbook
walkieTalkieState:
theaterState:
waterLockedState:
removeObjectsInArray:
dictionaryWithObjects:forKeys:count:
strongToStrongObjectsMapTable
_updateNotificationsStateSuppression
_updateSleepSuppression
sharedMonitor
setStates:
stateMap
objectEnumerator
suppressedStates
containsObject:
lockedStates
unlockedStates
reloadData
_needsCycleForUpdatingActiveStates
isAnyStateActive
setNeedsLayout
layoutIfNeeded
_statusBarWillChange
showFinalStateAnimated:completion:
visibleState
_statesForStateNames:
_effectiveSuppressedStates
minusSet:
states
intersectSet:
reverseObjectEnumerator
statusBarDidChange
layoutSubviews
sizeThatFits:
isAnyStateActive:
_canDisplayNotificationsIndicator
removeObject:
isNotificationsIndicatorEnabled
objectAtIndex:
_setSettings:
showStateNamed:animated:completion:
shouldHideForSensitivity:
numberOfStatesForStatusView:
stateByIndex:forStatusView:
statusViewClientPrepareToAnimate:
statusViewClient:showFinalStateAnimated:
statusViewClient:applySettings:
sensitiveUIStateChanged
_statusViewIsActive
statusViewSettings
stateToSessionTypeMap
_statusViewClient
_statusViewSettings
_statusObserver
_configuration
_stateMap
_unlockedStates
_lockedStates
_suppressedStates
_stateToSessionTypeMap
_states
sharedProvider
interfaceForType:
_sleepLockDidUpdate:
setDidUpdate:
initWithStatusViewControllerClass:options:
willMoveToParentViewController:
sleepLockViewControllerDidLoadView:
viewDidLayoutSubviews
sleepLockEnabled
sleepLockViewController:didUpdateSleepLock:
setOptions:
_optionsProvider
_sleepLockViewController
_sleepLockInterface
_sleepLockEnabled
PPTCreateBundledFaceWithfaceIdentifier:withCompletion:
PPTCreateFaceOfStyle:withCompletion:
applicationIdentifier
countOnFace
initWithApplicationIdentifier:countOnFace:
orderedSet
initWithComplicationCount:
enumerateObjectsUsingBlock:
decodeIntForKey:
encodeInt:forKey:
descriptionForObject:withObjectsAndNames:
complicationCountsToBundleIDs:
addObserver:observeFilteredGestures:includingWhenScreenOff:
wakeGestureRecognized:
wakeGestureRecognized:date:
_monitor
PPTShowFaceSwitcherWithCompletion:
setIdentifier:
setTargetQueue:
initWithConfiguration:
delegateQueue
setState:
schoolMode:didUpdateState:fromState:
schoolMode:didUpdateScheduleSettings:
schoolMode:didLoadScheduleSettings:
schoolModeDidUpdateUnlockHistory:
schoolModeDidLoad:
_delegateQueue
_state
_setShouldFixMainThreadPriority:
setFlushTimerEnabled:
startPluginServices
setRootViewController:
initWithClockViewController:
instancesRespondToSelector:
setWindow:
makeKeyAndVisible
setStatusBarHidden:withAnimation:
windowScene
_FBSScene
_contextId
updateClientSettingsWithBlock:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
application:runTest:options:
_PPTHandler
_clockContainerViewController
_pushManager
_carouselPluginService
_window
initWithAnalogView:showDNDIcon:showTime:showDate:showAlarm:
useAnalogView
showDNDIcon
showTime
showDate
showAlarm
_useAnalogView
_showDNDIcon
_showTime
_showDate
_showAlarm
_isSecure
setXPCType:forSelector:argumentIndex:ofReply:
decodeFloatForKey:
decodeInt32ForKey:
encodeFloat:forKey:
encodeInt32:forKey:
startLevel
setStartLevel:
endLevel
setEndLevel:
naturalFrequency
setNaturalFrequency:
fence
setFence:
slotID
setSlotID:
_slotID
_startLevel
_endLevel
_naturalFrequency
_fence
initWithEntry:withTimestamp:
timestamp
data
_timestamp
_data
array
writeToURL:atomically:encoding:error:
fileHandleForWritingToURL:error:
seekToEndOfFile
dataUsingEncoding:
writeData:
closeFile
addEntry:withTimestamp:
writeDiagnosticWithName:
_entries
animation
setMass:
setStiffness:
setDamping:
settlingDuration
setDuration:
CSL_criticallyDampedAnimationWithNaturalFrequency:
_testOptions
_handler
_emptyView
decodeBoolForKey:
decodeIntegerForKey:
encodeBool:forKey:
encodeInteger:forKey:
_allowsAnimations
_environment
setFullDiameter:
setHidden:
_synchronizeDrawingWithFence:
objectForSlot:
layer
setContents:
performLocalZoomFromLevel:endLevel:naturalFrequency:completion:
frame
zoomSimulatorDidPrepareZoom:
_handleDisplayLink:
applyZoomFraction:
addCommitHandler:forPhase:
_timeFunction:
removeFromSuperview
startTime
setStartTime:
isRunning
_iconView
_minDiameter
_maxDiameter
_springAnimation
_lastFireTime
_start
_end
_duration
_imageView
_completion
_running
_startTime
_detentService
_tileNavigationService
_wakeGestureService
setSynchronously:
PPTUniqueComplicationsToSlotForCurrentFace
PPTDescriptionForComplication:
PPTPrepareComplicationTest
startedSubTest:forTest:
synchronously
PPTCreateComplication:forSlot:synchronously:
finishedSubTest:forTest:
PPTCleanupLastComplication
_synchronously
date
fileURLWithPath:
URLByAppendingPathComponent:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
path
floatValue
intValue
setSlowModeEnabled:
setScreenBlanked:
setLaunchCompleted:
setAOTEnabled:
setScreenWakeProviderState:
isEmpty
PPTHideFaceSwitcherWithCompletion:
setClasses:forSelector:argumentIndex:ofReply:
containerViewController
setContainerViewController:
_containerViewController
initWithClient:telemetryDelegate:frameCapacity:backlightProxy:
_didReceiveClockViewControllerDidFinishLoadingNotification
removeObserver:name:object:
_handleClockBeginInteractive
_handleClockEndInteractive
_handlePauseReasonsChanged:
updateSnapshotsSynchronously
setEnabled:
initWithPlacement:client:
acquireWithCompletion:
transitionFromView:toView:duration:options:completion:
setByAddingObject:
placementCoordinator
setIsClockViewControllerReady:
flush
borrowIconZoomController
prepareToZoomWithIconView:minDiameter:maxDiameter:
clearColor
setBackgroundColor:
restoreIconZoomController
blackColor
systemGestureAssertion
setSystemGestureAssertion:
setContentOffset:animated:
indicatorPlacementAssertion
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
clockViewController:didUpdateActiveStatusBarViewController:
prefersStatusBarHidden
enableSlowMode:
setClockViewController:
setSchoolTimeViewController:
sleepLockViewController
setSleepLockViewController:
zoomViewController
setZoomViewController:
iconView
setIconView:
placeholderScrollCenterView
setPlaceholderScrollCenterView:
clockIsEditing
setClockIsEditing:
clockIsInteractive
setClockIsInteractive:
isClockViewControllerReady
_clockIsEditing
_clockIsInteractive
_isClockViewControllerReady
_zoomViewController
_placeholderScrollCenterView
_systemGestureAssertion
_placementCoordinator
_indicatorPlacementAssertion
arrayWithObjects:
takeAssertionWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:
createPPTSlot
releaseAssertion
destroyPPTSlot
_boundContext
whiteColor
setTextColor:
setText:
setNumberOfLines:
initWithSize:
CGContext
renderInContext:
imageWithActions:
CGImage
begin
createSlot
setObject:forSlot:
commit
deleteSlot:
firstObject
removeObjectAtIndex:
installCACommitCompletionBlock:
_backlightAssertion
_subtestQueue
_testName
_slotContext
_pptSlot
TWRPPTScrollFaceTest
TWRSleepLockOptions
CSLSleepDoNotDisturbStatusViewState
TWRClockFaceSceneSpecification
TWRClockFaceSceneClientSettings
TWRMutableClockFaceSceneClientSettings
TWRSleepLockOptionsProvider
HKSPSleepStoreObserver
NSObject
TWRTileNavigationService
CSLPINavigationHandler
TWRPPTHandler
TWRPPTFastSwitchToOnDeckFaceTest
CSLDateLabelStringFormatCache
TWRNanoTimeKitClient
CSLNanoTimeKitClientInterface
CSLFlipbookTelemetryDelegate
TWRPPTGalleryScrollTest
CSLClockFaceStatusViewControllerServer
CSLClockFaceStatusViewControllerClient
CSLSleepModeStatusViewState
TWRStatusViewPlacementCoordinator
TWRClockFaceStatusViewControllerPaddingObserver
TWRPassthroughScreenWakeProvider
CSLPIMultiClientScreenWakeProviderDelegate
CSLPIRootScreenWakeProviderWithClient
CSLPIScreenWakeProviderWithClient
CSLSScreenWakeProvider
CSLPIRootScreenWakeProvider
CSLClockFaceStatusViewSettings
NSSecureCoding
NSCoding
NSCopying
TWRPPTTimeToGetFaceOnDeck
TWRClockFaceStatusViewLayoutAttributes
TWRSchoolTimeViewController
TWRSchoolModeDelegate
TWRDetentService
CSLPIMinorDetentAssertionProviding
TWRPPTFastSwitchToFaceTest
CSLClockClientSettings
BSSettingDescriptionProvider
NSMutableCopying
CSLMutableClockClientSettings
CSLClockClientSettingsDiff
TWRClockFaceStatusContainerView
TWRClockFaceStatusViewController
UIGestureRecognizerDelegate
NTKClockStatusBarViewController
ClockBacklightProxy
CSLPIBacklightProvider
CSLSBacklightAssertionProvider
CSLPIBacklightProxy
CSLClockScreenAnimationAction
CSLClockBacklightRampActionResponse
CSLClockBacklightRampAction
Sleep
TWRShadowedStatusViewState
PUICStatusViewMutableState
PUICStatusViewState
TWRZoomSession
NSXPCListenerDelegate
CSLNanoTimeKitZoomSession
TWRComplicationObserver
CLKComplicationObserver
TWRClockFaceStatusView
PUICStatusViewDataSource
TWRClockFaceStatusViewClientDelegate
HKSPSensitiveUIObserver
TWRStatusView
TWRSleepLockViewController
TWRSleepLockOptionsProviderDelegate
TWRPPTCreateFaceTest
TWRClockFaceStatusViewClient
CSLClockComplicationCount
TWRWakeGestureService
CSLSWakeGestureObserver
TWRPPTOrbToFaceLibraryFromFaceTest
TWRSchoolMode
SCLSchoolModeDelegate
ClockAppDelegate
UIApplicationTestingDelegate
UIApplicationDelegate
NTKSleepLockOptions
TWRClockWindow
CSLNanoTimeKitServerInterface
TWRLocalZoomOptions
TWRPPTComplicationPickerScrollTest
CSLDiagnosticEntry
CSLDiagnosticLog
CSLNaturalFrequency
TWRPPTTest
TWRNullStatusViewState
CSLClockFaceStatusViewConfiguration
TWRZoomSimulator
TWRCarouselPluginService
TWRPPTCreateComplicationsOnFaceTest
TWRPPTIdleOnFaceTest
CSLClockSettings
CSLMutableClockSettings
CSLClockSettingsDiff
TWRPPTToggleClockSwitcherTest
CSLComplicationObserverInterface
CSLNTKClockViewController
ClockContainerViewController
UIScrollViewDelegate
NTKClockViewControllerDelegate
TWRStatusViewPlacementCoordinatorDelegate
TWRSchoolTimeViewControllerDelegate
TWRSleepLockViewControllerDelegate
CUISClockZooming
TWRLocalZoomTest
TWRZoomSimulatorDelegate
TWRPPTCreateComplicationsSynchronouslyOnFaceTest
@16@0:8
v24@0:8@16
v20@0:8B16
#16@0:8
I16@0:8
@24@0:8^{_NSZone=}16
@24@0:8Q16
v20@0:8I16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@16Q24
v28@0:8@16B24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSchedule"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSettings"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEvent"24
v32@0:8@"HKSPSleepStore"16Q24
v28@0:8@"HKSPSleepStore"16B24
v24@0:8@?16
@24@0:8@16
v16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"HKSPSleepStore"
@"HKSPSleepSettings"
@"<TWRSleepLockOptionsProviderDelegate>"
@32@0:8@16@24
v40@0:8@16@24@?32
q32@0:8@16@24
q24@0:8@16
B32@0:8@16@24
@"NSDictionary"
@"NTKClockViewController"
@"<CUISClockZooming>"
B24@0:8d16
@24@0:8d16
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"NSDateFormatter"
@"NSNumberFormatter"
@"NSDate"
Vv32@0:8@16@?24
Vv24@0:8@16
Vv44@0:8@16@24B32@?36
Vv20@0:8B16
Vv60@0:8Q16Q24Q32Q40B48@?52
Vv36@0:8@16B24@?28
Vv28@0:8B16@20
Vv40@0:8@16@24@?32
Vv32@0:8d16@24
Vv32@0:8@"CSLClockSettingsDiff"16@?<v@?>24
Vv24@0:8@"NSString"16
Vv32@0:8@"NSString"16@?<v@?{CGRect={CGPoint=dd}{CGSize=dd}}>24
Vv44@0:8@"CSLClockScreenAnimationAction"16@"CSLClockScreenAnimationAction"24B32@?<v@?>36
Vv60@0:8Q16Q24Q32Q40B48@?<v@?B>52
Vv36@0:8@"CSLSAlwaysOnTapToWakeEvent"16B24@?<v@?B>28
Vv28@0:8B16@"NSString"20
Vv40@0:8@"NSString"16@"NSString"24@?<v@?B>32
Vv32@0:8@"TWRLocalZoomOptions"16@?<v@?B>24
Vv32@0:8d16@"BKSAnimationFenceHandle"24
v24@0:8@"CSLFlipbookInvalidation"16
v24@0:8@"CSLFlipbookRenderSession"16
@"NSXPCConnection"
@"TWRPPTHandler"
@"CSLClockClientSettings"
@"CSLClockSettings"
@"TWRZoomSession"
@"TWRZoomSimulator"
@"ClockContainerViewController"
@"<CSLPIRootScreenWakeProviderWithClient>"
@"<CSLPIBacklightProxy>"
v32@0:8@16@?24
v24@0:8q16
v32@0:8@"CSLClockFaceStatusViewConfiguration"16@?<v@?>24
v24@0:8@"CSLClockFaceStatusViewSettings"16
v40@0:8@16{CGPoint=dd}24
v40@0:8@"TWRClockFaceStatusViewController"16{CGPoint=dd}24
v32@0:8@16q24
q16@0:8
@"<TWRStatusViewPlacementCoordinatorDelegate>"
@"CUISSensorActivityIndicatorPlacement"
@"NSMutableDictionary"
@"TWRClockFaceStatusViewController"
v32@0:8@16B24I28
v40@0:8@16B24I28@?32
v24@0:8@"<CSLSAOTModeProvider>"16
v32@0:8@"<CSLSBacklightRequest>"16B24I28
v40@0:8@"<CSLSBacklightRequest>"16B24I28@?<v@?>32
v48@0:8@16B24I28@?32@?40
v28@0:8B16@?20
v48@0:8@"<CSLSBacklightRequest>"16B24I28@?<v@?d>32@?<v@?>40
v24@0:8@?<v@?>16
v28@0:8B16@?<v@?>20
@"<CSLSAOTModeProvider>"16@0:8
v24@0:8@"NSString"16
@"CSLPIMultiClientScreenWakeProvider"
@"CSLPIScreenWakeSimpleStateProvider"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSSet"
d16@0:8
v24@0:8@"TWRSchoolMode"16
@"<TWRSchoolTimeViewControllerDelegate>"
@"NTKSchoolTimeViewController"
@"TWRSchoolMode"
@24@0:8@"NSString"16
B56@0:8@16@24q32@40Q48
@32@0:8@16Q24
@48@0:8@16q24@32Q40
B48@0:8@16q24@32Q40
@40@0:8q16@24Q32
B56@0:8@"BSSettings"16@"BSDescriptionBuilder"24q32@40Q48
@"NSString"32@0:8@"BSSettings"16Q24
@"NSString"48@0:8@"BSSettings"16q24@32Q40
B48@0:8@"BSDescriptionBuilder"16q24@32Q40
@"NSString"24@0:8Q16
@"NSString"40@0:8q16@24Q32
@"BSMutableSettings"
@"BSSettingsDiff"
@40@0:8{CGPoint=dd}16@32
@"TWRClockFaceStatusView"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v24@0:8d16
@"<NTKClockStatusBarViewControllerStatusObserver>"16@0:8
v24@0:8@"<NTKClockStatusBarViewControllerStatusObserver>"16
v24@0:8B16B20
v32@0:8{CGPoint=dd}16
{CGPoint=dd}16@0:8
@"TWRClockFaceStatusContainerView"
@"CSLClockFaceStatusViewConfiguration"
@"<NTKClockStatusBarViewControllerStatusObserver>"
@"<TWRClockFaceStatusViewControllerPaddingObserver>"
{CGPoint="x"d"y"d}
v44@0:8@16I24B28i32Q36
v44@0:8@"NSString"16I24B28i32Q36
v32@0:8@"CSLSBacklightAssertionBase"16@?<v@?>24
v36@0:8@16I24B28i32
@40@0:8@16I24I28@?32
B32@0:8@16@?24
B40@0:8@16@24@?32
@"UIView"16@0:8
B32@0:8@"<PUICStatusViewState>"16@?<v@?B>24
B40@0:8@"<PUICStatusViewState>"16@"<PUICStatusViewState>"24@?<v@?B>32
v24@0:8@"UITapGestureRecognizer"16
@"PUICStatusViewImageView"
@"NSString"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
Vv40@0:8d16d24@?32
Vv24@0:8@?16
Vv80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48d56@64@?72
Vv40@0:8d16d24@?<v@?>32
Vv24@0:8@?<v@?>16
Vv80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48d56@"NSObject<OS_xpc_object>"64@?<v@?>72
^{TWRZoomParameters=iiidd}
@"NSXPCListenerEndpoint"
@"NSXPCListener"
@"CADisplayLink"
@"NSOrderedSet"
Q24@0:8@16
@32@0:8Q16@24
Q24@0:8@"PUICStatusView"16
@"<PUICStatusViewState>"32@0:8Q16@"PUICStatusView"24
v24@0:8@"TWRClockFaceStatusViewClient"16
v28@0:8@"TWRClockFaceStatusViewClient"16B24
v32@0:8@"TWRClockFaceStatusViewClient"16@"CSLClockFaceStatusViewSettings"24
@"TWRClockFaceStatusViewClient"16@0:8
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"TWRClockFaceStatusViewClient"
@"PUICStatusView"
@"CSLClockFaceStatusViewSettings"
@"NSArray"
@"NSMutableSet"
@"NSMapTable"
v32@0:8@"TWRSleepLockOptionsProvider"16@"TWRSleepLockOptions"24
@"TWRSleepLockOptionsProvider"
@"NTKSleepLockViewController"
@"<CSLSSystemStateInterface>"
@"<TWRSleepLockViewControllerDelegate>"
@"<TWRClockFaceStatusViewClientDelegate>"
v32@0:8Q16@24
v24@0:8@"CSLSWakeGesture"16
v32@0:8Q16@"NSDate"24
@"CSLPIWakeGestureMonitor"
v40@0:8@16@24@32
v40@0:8@"SCLSchoolMode"16@"SCLState"24@"SCLState"32
v32@0:8@"SCLSchoolMode"16@"SCLScheduleSettings"24
v24@0:8@"SCLSchoolMode"16
@"<TWRSchoolModeDelegate>"
@"NSObject<OS_dispatch_queue>"
@"SCLSchoolMode"
@"SCLState"
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
Q32@0:8@16@24
@40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
B40@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32
@"NTKComplicationPushManager"
@"TWRCarouselPluginService"
@"UIWindow"
@36@0:8B16B20B24B28B32
Vv32@0:8@16q24
Vv40@0:8@"CSLClockClientSettings"16@"NSXPCListenerEndpoint"24@?<v@?@"CSLClockSettings">32
Vv32@0:8@"CSLClockClientSettingsDiff"16q24
Vv24@0:8@"CSLFlipbookInvalidation"16
Vv24@0:8@"CSLFlipbookRenderSession"16
@"BKSAnimationFenceHandle"
@"NSMutableArray"
@"UIView"
v48@0:8d16d24d32@?40
v32@0:8d16@24
@"NTKClockIconView"
@"CASpringAnimation"
@"UIImageView"
@"<TWRZoomSimulatorDelegate>"
@"TWRDetentService"
@"TWRTileNavigationService"
@"TWRWakeGestureService"
v24@0:8Q16
v24@0:8@"NSOrderedSet"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v32@0:8@"NTKClockViewController"16@"UIViewController<NTKClockStatusBarViewController>"24
v32@0:8@"TWRStatusViewPlacementCoordinator"16@"CUISSensorActivityIndicatorPlacement"24
v24@0:8@"TWRSchoolTimeViewController"16
v28@0:8@"TWRSleepLockViewController"16B24
v24@0:8@"TWRSleepLockViewController"16
v64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48d56
v32@0:8d16d24
@"CSLNTKClockViewController"
@"TWRSchoolTimeViewController"
@"TWRSleepLockViewController"
@"UIViewController<NTKClockIconZoomAnimator>"
@"UIScrollView"
@"CSLSSuspendSystemGestureAssertion"
@"TWRStatusViewPlacementCoordinator"
@"CUISSensorActivityIndicatorPlacementAssertion"
v24@0:8@"TWRZoomSimulator"16
@"CSLSBacklightAssertion"
@"CAContext"
%@ did update to %@
TWRSleepLockOptionsProvider received sleep settings: %@
Created TWRSleepLockOptionsProvider!
TWRSleepLockOptionsProvider returning existing settings %@
TWRSleepLockOptionsProvider returning default options
Settings %@ are of class %@; expected HKSPSleepSettings
sleepSettingsDidChange: %@
Prepare face for test: %@ prefix: %@
Face style for test %@ with prefix %@ is invalid: %@
Face index for test %@ with prefix %@ is invalid: %@
Prepared face for test %@
runTest::%@ options:%@
TWRNanoTimeKitClient connection invalidated
Starting TWRNanoTimeKitClient
Initial diff from %@ to %@
Inspect diff: %@
markLaunchCompleted
Posting notification %@
will send response to screenChangedAction: %{public}@
unable to send response to screenChangedAction: %{public}@
unable to send response to brightnessRampAction: %{public}@
(statedump) %{public}@
prepareZoomFaceTestWithName: %@ prefix: %@
Clock Significant Appearance Change
Status view controller %@ is not an instance of TWRClockFaceStatusViewController
Failed to apply home directory '%s'; current directory: '%@'
Set home directory to %@
SchoolTime clock setPauseReasons: %@
Clock face status view connection invalidated
Caching statusObserver:%@ until statusView is created
Launching session type %@ from status view
Zoom session received connection: %@
Zoom session cleanup
Error unmapping zoom parameters: %d
Zoom session prepare to zoom
Failed to map shmem object %@
Consuming shmem %@ for zoom
No shared memory object - Expecting XPC zoom updates
Skipping frame %d; expected index %d
FrameIndex: %d
Remote Zoom Parameters
Checksum didn't add up. Skipping frame
complicationListDidChange updating %@
complicationListDidChange no update, keeping %@
Adding observer %@ to HKSPSensitiveUIMonitor
Tin can state is active but no Null state is available for %@
Sleep clock setPauseReasons: %@
TWRSleepLockViewController _sleepLockDidUpdate: %{bool}u
Did finish launching
failed to write %@ diagnostics to %@ - error:%@: %@
failed to open %@ for writing %@ diagnostics - error:%@: %@
failed to write to %@ for writing %@ diagnostics - exception:%@: %@
Failed to create diagnostic log, could not create directory: "%@"
Failed to acquire placement assertion: %@
view did load
Set Clock Display Mode
Setting display mode from %@ to %@ animated=%{BOOL}d
Finished setting display mode to %@
Display modes don't match; Current=%@; Requested=%@; animationFinished=%{BOOL}d
Switching screen wake client to %@
commitFirstFrameIfPossible
ClockViewController is not ready because _isClockViewControllerReady=NO
clockViewController will commit the first frame.
Prepare to zoom
Set zoom fraction: %.2lf diameter: %.2lf
Cleanup after zoom
?333333
MbP?
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.clockface</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.Carousel.sensorActivityIndicatorPlacement</key>
<array>
<string>com.apple.clockface</string>
</array>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.CoreRoutine.LocationOfInterest</key>
<true/>
<key>com.apple.CoreRoutine.Prediction</key>
<true/>
<key>com.apple.CoreRoutine.VehicleLocation</key>
<true/>
<key>com.apple.QuartzCore.flipbook</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.radios.plist</string>
</array>
<key>com.apple.TimeAppServices.stopwatchclient</key>
<true/>
<key>com.apple.TimeAppServices.timerclient</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.appleidauthentication.defaultaccess</key>
<true/>
<key>com.apple.assistant.client</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.carousel.backlight.anyreason</key>
<true/>
<key>com.apple.carousel.backlightaccess</key>
<true/>
<key>com.apple.carousel.blanking_backlight_assertion</key>
<true/>
<key>com.apple.carousel.clockfacestatusview</key>
<true/>
<key>com.apple.carousel.touchlock_backlight_assertion</key>
<true/>
<key>com.apple.carousel.unlimited_backlight_assertion</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.healthkit</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboard.workspace</key>
<true/>
<key>com.apple.gizmoappd.appmanager.allow</key>
<true/>
<key>com.apple.imagent.av</key>
<true/>
<key>com.apple.imagent.chat</key>
<true/>
<key>com.apple.intents.extension.discovery</key>
<true/>
<key>com.apple.locationd.absolute_altimeter</key>
<true/>
<key>com.apple.locationd.activity</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.private_info</key>
<true/>
<key>com.apple.locationd.prompt_behavior</key>
<true/>
<key>com.apple.locationd.slc_configurer</key>
<true/>
<key>com.apple.locationd.slc_when_in_use</key>
<true/>
<key>com.apple.locationd.slv_configurer</key>
<true/>
<key>com.apple.locationd.spectator</key>
<true/>
<key>com.apple.locationd.usage_oracle</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.powerui.smartcharging</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SysCfg</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.CharacterVoices</string>
</array>
<key>com.apple.private.avatar.store</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.corespotlight.search.internal</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.donotdisturb.behavior.resolution.client-identifiers</key>
<array>
<string>com.apple.accessibility.AXTapticChimesScheduler</string>
</array>
<key>com.apple.private.externalaccessory.showallaccessories</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.authorization_bypass</key>
<true/>
<key>com.apple.private.healthkit.source_override</key>
<string>com.apple.private.health.localdevice</string>
<key>com.apple.private.homekit</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.audiocontrol.music</string>
<string>com.apple.private.alloy.siri.icloud</string>
<string>com.apple.private.alloy.siri.phrasespotter</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.spi.database-access</key>
<true/>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.security.sandbox.debug-mode</key>
<false/>
<key>com.apple.private.sleepd</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
<string>kTCCServiceMotion</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.watch.NanoCelebrations</string>
</array>
<key>com.apple.proactive.AppPrediction.predictions</key>
<true/>
<key>com.apple.proactive.PersonalizationPortrait.Event</key>
<true/>
<key>com.apple.proactive.PersonalizationPortrait.NamedEntity.readOnly</key>
<true/>
<key>com.apple.proactive.PersonalizationPortrait.Topic.readOnly</key>
<true/>
<key>com.apple.rootless.storage.proactivepredictions</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/containers/Bundle/</string>
<string>/private/var/tmp/com.apple.messages/</string>
<string>/Applications/SessionTrackerApp.app/Assets.car</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/tmp/</string>
<string>/var/tmp/</string>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Media/PhotoData/</string>
<string>/Library/Logs/CrashReporter/</string>
<string>/Library/NanoMusicSync/</string>
<string>/Library/SyncedIntentDefinitions/</string>
<string>/Library/UserConfigurationProfiles/EffectiveUserSettings.plist</string>
<string>/Library/NanoPhotos/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Media/iTunes_Control/iTunes/</string>
<string>/Library/Logs/CrashReporter/DiagnosticLogs/Carousel/</string>
<string>/Library/NanoTimeKit/</string>
<string>/Library/Caches/</string>
<string>/Library/RelevanceEngine/</string>
<string>/Library/Logs/MediaServices/</string>
<string>/Library/Logs/com.apple.StoreServices/</string>
<string>/Library/com.apple.WatchListKit/</string>
<string>/Library/Cookies/</string>
<string>/Library/relevanced/</string>
<string>/Library/DuetExpertCenter/</string>
<string>/Library/Maps/</string>
<string>/Library/CoreBehavior/</string>
<string>/Documents/Mica/</string>
</array>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.NTKFaceSnapshotService</string>
<string>com.apple.carousel.navigationservice</string>
<string>com.apple.dmd.emergency-mode</string>
<string>com.apple.dmd.policy</string>
<string>com.apple.carousel.uitriggerserver</string>
<string>com.apple.accessibility.AXCarouselServer</string>
<string>com.apple.accessibility.heard</string>
<string>com.apple.adid</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.assistant.client</string>
<string>com.apple.backlightd</string>
<string>com.apple.bulletindistributor.settingsservice</string>
<string>com.apple.carousel.backlightxpc</string>
<string>com.apple.carousel.clkcomplicationobserver</string>
<string>com.apple.carousel.clockfacestatusview</string>
<string>com.apple.Carousel.clockzoom</string>
<string>com.apple.carousel.connectionstatusservice</string>
<string>com.apple.Carousel.CSLSDetentService</string>
<string>com.apple.carousel.fromClock</string>
<string>com.apple.Carousel.NTKServer</string>
<string>com.apple.Carousel.sensorActivityIndicatorPlacement</string>
<string>com.apple.Carousel.suspendSystemGestureAssertion</string>
<string>com.apple.carousel.tilenavigation</string>
<string>com.apple.carousel.wakegesturemonitor</string>
<string>com.apple.Carousel.wristmonitor</string>
<string>com.apple.ClockFace.RelevanceEngine.RemoteTraining</string>
<string>com.apple.ClockFace.RelevanceEngine.TrainingSimulation</string>
<string>com.apple.ClockKit.complicationserver</string>
<string>com.apple.coreduetd.context</string>
<string>com.apple.coreduetd.knowledge</string>
<string>com.apple.donotdisturb.service</string>
<string>com.apple.duetactivityscheduler</string>
<string>com.apple.gizmoappd.appmanager</string>
<string>com.apple.homed.xpc</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.idsremoteurlconnectionagent.embedded.auth</string>
<string>com.apple.imagent.embedded.auth</string>
<string>com.apple.itunescloud.music-subscription-status-service</string>
<string>com.apple.mediaremoted.xpc</string>
<string>com.apple.MobileTimer.alarmserver</string>
<string>com.apple.MobileTimer.timerserver</string>
<string>com.apple.nanomapsgd.xpc.MapsSuggestions</string>
<string>com.apple.nanomaps.xpc.Navigation</string>
<string>com.apple.NanoMediaRemote</string>
<string>com.apple.nanonews.service.gizmo</string>
<string>com.apple.nanotimekit.collectionserver</string>
<string>com.apple.nanotimekit.complicationstoreserver</string>
<string>com.apple.nanotimekit.facesnapshotserver</string>
<string>com.apple.NanoTimeKit.Siri</string>
<string>com.apple.nanoweatherd.forecast-observer</string>
<string>com.apple.nanoweatherd.location-observer</string>
<string>com.apple.nanoweatherd.routineforecast-observer</string>
<string>com.apple.powerui.smartChargeManager</string>
<string>com.apple.proactive.PersonalizationPortrait.Event</string>
<string>com.apple.proactive.PersonalizationPortrait.NamedEntity.readOnly</string>
<string>com.apple.proactive.PersonalizationPortrait.Topic.readOnly</string>
<string>com.apple.relevanceengine.pipedlocation</string>
<string>com.apple.relevanceengine.predictedactionserver</string>
<string>com.apple.relevanceengine.siriactionsperformer</string>
<string>com.apple.relevanced.RelevanceEngine.TrainingSimulation</string>
<string>com.apple.remindd</string>
<string>com.apple.routined.registration</string>
<string>com.apple.Safari.SafeBrowsing.Service</string>
<string>com.apple.schooltime.schedule</string>
<string>com.apple.siri.client_lite</string>
<string>com.apple.siri.external_request</string>
<string>com.apple.symptom_analytics</string>
<string>com.apple.symptom_diagnostics</string>
<string>com.apple.sysdiagnose.service.xpc</string>
<string>com.apple.TimeAppServices.stopwatchserver</string>
<string>com.apple.wcd.private</string>
<string>com.apple.lsd.xpc</string>
<string>com.apple.sleepd.sleepserver</string>
<string>com.apple.NanoTimeKit.GreenfieldShareWatchFace</string>
<string>com.apple.powerlog.plxpclogger.xpc</string>
<string>com.apple.xpc.amsengagementd</string>
</array>
<key>com.apple.security.exception.mach-register.global-name</key>
<array>
<string>com.apple.carousel.toClock</string>
<string>com.apple.NanoTimeKit.userphotofaceserver</string>
<string>com.apple.ClockKit.complicationserver</string>
<string>com.apple.NanoTimeKit.developertoolsserver</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.Carousel</string>
<string>com.apple.Carousel.internal</string>
<string>com.apple.ControlCenter</string>
<string>com.apple.DeepBreathing</string>
<string>com.apple.Maps</string>
<string>com.apple.MobileSMS</string>
<string>com.apple.nano</string>
<string>com.apple.nanobuddy</string>
<string>com.apple.nanophotos</string>
<string>com.apple.pairedsync</string>
<string>com.apple.system.prefs</string>
<string>com.apple.tincan</string>
<string>com.apple.duetexpertd</string>
<string>com.apple.compass</string>
<string>com.apple.HearingAids</string>
<string>com.apple.nanolifestyle</string>
<string>com.apple.internal.sync</string>
<string>com.apple.internal.sleep</string>
<string>com.apple.brook</string>
<string>com.apple.private.health.menstrual-cycles</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.ClockKit</string>
<string>com.apple.ClockKit.activeComplications</string>
<string>com.apple.imessage.bag</string>
<string>com.apple.NanoTimeKit</string>
<string>com.apple.NanoTimeKit.daemon</string>
<string>com.apple.NanoTimeKit.face</string>
<string>com.apple.WatchListKit</string>
<string>com.apple.Accessibility.CharacterVoice</string>
<string>com.apple.Noise</string>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.NanoMusicSync</string>
<string>com.apple.springboard</string>
<string>com.apple.RelevanceEngine</string>
<string>com.apple.mobiletimer</string>
<string>com.apple.nanoprefsyncd</string>
<string>com.apple.tv</string>
</array>
<key>com.apple.security.temporary-exception.files.absolute-path.read-write</key>
<array>
<string>/Library/Avatar</string>
<string>/Library/Caches/com.apple.AvatarUI</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.avatar.service</string>
<string>com.apple.avatar.support</string>
<string>com.apple.avatarsd</string>
</array>
<key>com.apple.security.temporary-exception.shared-preference.read-write</key>
<array>
<string>com.apple.animoji</string>
<string>com.apple.AvatarUI.Staryu</string>
</array>
<key>com.apple.seld.tsmmanager</key>
<true/>
<key>com.apple.siri.client_lite</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.siri.task</key>
<true/>
<key>com.apple.siri.task.client</key>
<true/>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
<key>com.apple.system.diagnostics.iokit-properties</key>
<true/>
<key>com.apple.watchlist.private</key>
<true/>
<key>com.apple.wcd.listener.allow.complication-manager</key>
<true/>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
