LastSystemVersionMigrated
v8@?0
/var/mobile/Library/Caches/com.apple.Carousel.sharedimagecache/
BackupLibrarySequenceIdKey
v36@?0@"NSArray"8@"NSUUID"16@"NSDictionary"24f32
com.apple.NTKPoodleFaceBundle
com.apple.NTKShibaFaceBundle
com.apple.NTKAkitaFaceBundle
com.apple.NTKGreyhoundFaceBundle
com.apple.NTKMargaritaFaceBundle
com.apple.NTKAlaskanFaceBundle.NTKSalmonFaceBundle
com.apple.NTKAlaskanFaceBundle.NTKTroutFaceBundle
com.apple.NTKAlaskanFaceBundle.NTKSharkFaceBundle
com.apple.NTKCollieFaceBundle
v16@?0@"NTKFace"8
v32@?0@"NTKFace"8Q16^B24
v32@?0@"NSData"8Q16^B24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.ntkd.zip-archivist
extractPKZip
sequesterResources
copyResources
inputStream
createPKZip
outputStream
com.apple.ntkd.complicationstore.%p
com.apple.ntkd.complicationstore.observercallback.%p
v16@?0@"NTKComplicationKey"8
v32@?0@"CLKComplicationDescriptor"8Q16^B24
com.apple.ntkd.complicationstore.asyncwork
com.apple.ntkd.complicationstore.asyncobservercallback
v32@?0@"NTKComplicationKey"8@"NSNumber"16^B24
v24@?0@"NSNumber"8@?<v@?>16
q24@?0@"NSNumber"8@"NSNumber"16
ComplicationCollectionStores
GlobalStores
PerDeviceStores
manifest.plist
version.string
deleted.plist
sequence-id.string
manifest-sequence-id.string
last-delete-sequence-id.string
Complications
sample-template
sample-template-sequence-id.string
ComplicationDescriptors
descriptor
descriptor-sequence-id.string
clientID
typeID
v32@?0@"NSDictionary"8@"NSNumber"16^B24
collectionIdentifier
T@"NSString",R,N,V_collectionIdentifier
deviceUUID
T@"NSUUID",R,N,V_deviceUUID
ClientToSampleTemplate
ClientToComplicationDescriptorIdentifiers
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NTKComplicationKey"8@"NSMutableArray"16^B24
com.apple.ntkd.collectionstorecreation
com.apple.ntkd.collectioncoordinator
com.apple.ntkd.collectioncoordinator.xpcIncomingMessageQueue
com.apple.ntkd.collectioncoordinator.callouts
v16@?0@"NTKDCollectionClient"8
v16@?0@"NTKDCollectionStore"8
v24@?0@"NSString"8@"NSUUID"16
v32@?0@"NTKDCollectionStoreKey"8@"NTKDCollectionStore"16^B24
com.apple.ntkd.collectioncoordinator.busy
com.apple.ntkd.collectioncoordinator.callout
com.apple.ntkd.curatecollection.
com.apple.ntkd.facesnapshotclient.busy
com.apple.ntkd.facesnapshotclient.%p
-[NTKDFaceSnapshotClientHandler updateAllSnapshots]
-[NTKDFaceSnapshotClientHandler requestSnapshotOfFace:]
-[NTKDFaceSnapshotClientHandler performAfterCompletingCurrentlyPendingSnapshots:]
-[NTKDFaceSnapshotClientHandler snapshotFace:options:completion:]
-[NTKDFaceSnapshotClientHandler snapshotLibrarySelectedFaceForDeviceUUID:options:completion:]
invalidationHandler
T@?,C,N,V_invalidationHandler
v24@?0@"LSBundleProxy"8^B16
com.apple.ntkd.photolibraryobserver.asyncwork
com.apple.ntkd.photofacesobserver
_NTKObservingFace[%@-%@, opt=%ld, col=%@, tgt=%ld]
store
T@"NTKDCollectionStore",R,N,V_store
uuid
T@"NSUUID",R,N,V_uuid
contentOption
TQ,R,N,V_contentOption
reader
T@"NTKPhotosReader",R,N,V_reader
collectionTarget
Tq,R,N
v12@?0B8
_NTKObservedCollection[col=%@, tgt=%ld, %ld faces]
assetCollection
T@"PHAssetCollection",R,N,V_assetCollection
collectionTargetObserver
T@"NTKCollectionTargetObserver",R,N,V_collectionTargetObserver
assets
T@"PHFetchResult",R,N,V_assets
creationDate
Tq,R,N,V_collectionTarget
faceDataSource
T@"<_NTKObservingFaceDataSource>",R,W,N,V_faceDataSource
%@-%@
v32@?0@"NSUUID"8Q16^B24
v16@?0@"NSString"8
face.json
Resources
data
Clock Face Sync Error
A rare error has occurred. Please trigger a co-sysdiagnose (hold both crown & side button for 1 second) and file a bug under 'Watch Faces | all'. (Internal alert only.)
DateOfLastActivity_
com.apple.nanotimekit.daemon-activity-queue
v16@?0@"NSObject<OS_xpc_object>"8
checkin
guard-early-jetsam
--30s-extension
com.apple.nanotimekit.daemon-activity
com.apple.nanotimekit.daemon-transaction-queue
com.apple.NTKFaceSnapshotService
CleanSnapshotCache
CleanAllFaceSnapshots
snapshotting-session-activity
delaying-snapshots
NTKFaceSnapshotsAreDirtyKey
com.apple.nanotimekitd.snapshot.queue
com.apple.ntkd.facesnapshotcontroller.%p
com.apple.ntkd.facesnapshotcontroller.observercallback.%p
v32@?0@8@"NTKFaceSnapshotContext"16^B24
v20@?0B8@"UIImage"12
v16@?0@"CLKFullColorImageProvider"8
v16@?0@"NSError"8
-[NTKDFaceSnapshotController provideSnapshotOfFace:options:completion:]
__PRETTY_FUNCTION__
-[NTKDFaceSnapshotController provideSnapshotOfFace:options:completion:]_block_invoke
-[NTKDFaceSnapshotController provideSnapshotOfFace:options:completion:]_block_invoke_2
-[NTKDFaceSnapshotController snapshotLibrarySelectedFaceForDeviceUUID:options:completion:]
v16@?0@"UIImage"8
-[NTKDFaceSnapshotController provideSnapshotOfComplicationSnapshotDescriptor:options:completion:]
v32@?0@"NSUUID"8@"NTKFace"16^B24
v16@?0@"NSArray"8
com.apple.ntkd.facesnapshotcontroller.asyncmappedimagecachework
v32@?0@"NSString"8Q16^B24
com.apple.ntkd.facesnapshotcontroller.asyncwork
com.apple.ntkd.facesnapshotcontroller.asyncobservercallback
v24@?0@"NSString"8^B16
B32@?0@"_NTKDFaceSnapshotObject"8Q16^B24
%@%@%@
SnapshotSequenceIdKey
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
face
T@"NTKFace",&,N,V_face
options
T@"NSDictionary",&,N,V_options
T@"NSString",&,N,V_key
context
T@"NTKFaceSnapshotContext",&,N,V_context
snapshotStale
TB,N,V_snapshotStale
SnapshotContexts.archive
SnapshotKeysWithBlankComplications.archive
com.apple.ntkd.collectionclient.busy
com.apple.ntkd.collectionclient.shared
com.apple.ntkd.collectionclient.register
outgoing-sync-session-activity
com.apple.ntkd.synccontroller.outgoingsession
com.apple.ntkd.synccontroller.incomingsession
com.apple.ntkd.synccontroller.outgoingsessionrequested
com.apple.ntkd.synccontroller.libraryvalidation
com.apple.ntkd.synccontroller
ENABLED
DISABLED
v32@?0@8@"NTKDCollectionStore"16^B24
v32@?0@8@"NTKDComplicationStore"16^B24
v16@?0@"NTKDCompanionRelayClient"8
com.apple.ntkd.synccontroller.busy
v16@?0@"NTKDComplicationStore"8
v32@?0@8@"_MessageList"16^B24
v32@?0@"NTKComplicationKey"8@"NTKComplicationSampleData"16^B24
DailyLibraryHashValidation
outgoingSessionTransactionCount
Tq,N,V_outgoingSessionTransactionCount
incomingSessionTransactionCount
Tq,N,V_incomingSessionTransactionCount
nextObjectBlock
T@?,C,N,V_nextObjectBlock
message-type
face-uuid
complicaiton-clientID
complication-family
complication-descriptor
payload-id
v32@?0@"NSDictionary"8Q16^B24
@"NTKDSyncMessage"8@?0
B16@?0@"NSDictionary"8
needs-reset-sync
sequence-id
needsResetSync
TB,N
seqId
T@"NSNumber",&,N
Global
Sync
store-status.plist
complication-store-status.plist
incoming-messages.plist
outgoing-messages.plist
v16@?0@"NSUUID"8
MessagePayloads
com.apple.ntkd.snapshotcoordinator
com.apple.ntkd.snapshotcoordinator.callouts
com.apple.ntkd.snapshotcoordinator.xpcIncomingMessageQueue
v16@?0@"NTKDFaceSnapshotClientHandler"8
B8@?0
com.apple.notifyd.matching
LanguageChange
LocaleChange
SignificantTimeChange
com.apple.private.alloy.clockface.sync
com.apple.pairedsync.faces
NTKSyncBackoffPeriodInSeconds
com.apple.nanotimekit.messageType
com.apple.nanotimekit.message
receiverSyncVersion
senderSyncVersion
com.apple.pairedsync.faces.NTKSyncBackoffQueue
com.apple.pairedsync.faces.NTKSyncServiceQueue
v28@?0B8@"NSString"12@"NSError"20
isMaster
TB,R,N,V_isMaster
delegate
T@"<NTKDSyncDelegate>",W,N,V_delegate
NanoTimeKit
pomeranian_face
UUIDs
facebackup
v24@?0@"NTKFace"8@"NSString"16
Backups
faceList
selectedFace
version
npsManager
T@"NPSManager",&,N,V_npsManager
archivist
T@"NTKDZIPArchivist",&,N,V_archivist
com.apple.ntkd.collectionstore.shared
com.apple.ntkd.collectionstore.observers
%@:%@
global
com.apple.ntkd.collectionstore.asyncwork
com.apple.ntkd.collectionstore.asyncobservercallback
v16@?0@"NSTimer"8
v32@?0@"NSUUID"8@"NSNumber"16^B24
%@ [%@], 
%02x
Tf,N
isInitialSetupComplete
TB,R,N
isEmpty
refusesToDeleteLastFace
CollectionManifest[
(%@:%@)
style
expected a string for key '%@' (instead found %@)
could not generate UUID from string: %@
expected a number for key '%@' (instead found %@)
CollectionStores
selected-uuid-sequence-id.string
added-sequence-id.string
Faces
configuration-sequence-id.string
upgrade-sequence-id.string
resources-sequence-id.string
build-version.string
setup-complete
selected-uuid.string
string could not be converted to UUID: %@
com.apple.nanotimekit.collectionstore.cleanup
invalid UUID string: %@
com.apple.ntkd.complicationcollectioncoordinator
com.apple.ntkd.complicationcollectioncoordinator.callouts
v16@?0@"NTKDComplicationCollectionClient"8
v32@?0@"NTKDCollectionStoreKey"8@"NTKDComplicationStore"16^B24
com.apple.ntkd.complicationcollectioncoordinator.busy
com.apple.ntkd.complicationcollectioncoordinator.callout
com.apple.nanotimekitd.daemon-queue
CleanupResources
com.apple.ntkd.companionrelayclient
RemoteComplications
com.apple.ntkd.complicationcollectionclient.busy
com.apple.ntkd.complicationcollectionclient.%p
com.apple.ntkd.complicaitoncollectionclient.register
%@: descriptor must be non-nil!
beginning pre migration
pre migration complete
beginning post migration
post migration complete
error cleaning up old snapshot directory: %@
cleaned up old snapshot directory
Beginning library face curation - waiting for NPS
Finishing library face curation
Setup still incomplete - attempting migration from prefs archive
Successfully migrated
Store is empty - adding default faces. isAltDevice: %lu
Store initial setup is incomplete; checking with the backup manager
Backup manager returned %d faces
Removing unavailable faces
Removing face of style %@
Adding face to default list: %{public}@
Error decoding archived face: %@
Couldn't create BOMCopier for zipping
Error copying/zipping: %d
BOM file error: symlinks are unsupported
BOM could not extract archive %s
BOM could not extract archive for path %s: %s
BOM file error for path %s, %s
BOM file conflict error for path %s
Cleaning up orphaned complication stores...
...deleting complication stores for device uuid %@
No identifier for descriptor %@ (%@) of client %@
NTKDComplicationStore, removing sample data for %@, %@
Error decoding sample complication template for family %@: %@
Successfully wrote complication descriptor %@ for %@
Failed to write complication descriptor %@ for %@
Successfully removed complication sample data for %@, %@
Failed to remove complication sample data for %@, %@
Error reading removals dictionary at path %@: %@
_NTKDComplicationCollectionManifest, removing sample data for %@, %@
Unable to read manifest at path %@: %@
Read manifest with descriptors %@
Encountered nil client identifier while writing manifest!
Successfully wrote manifest with descriptors %@ %@
Failed to write manifest with descriptors %@ %@
checking for orphaned resource directories
Connection invalidated: %@ %@
Inside: %@ %s
%@ faceSnapshotChangedForKey:%@
Couldn't make record for %@ - %@
applicationsDidInstall will rewrite available data sources to NPS
applicationsDidUninstall will rewrite available data sources to NPS
_collectionTargetObserverForFace: face %@ has a bad contentOption
%@: updateWithLibraryPhoto(%@)
%@ updated face with resources in %@
%@: creation of temp resource directory failed!
%@ is already up to date
%@: init
%@: addFace(%@)
%@: addFace(%@) done
%@: removeFace(%@)
%@: removeFace(%@) done
_NTKPhotosFacesTargetObserver(%ld): startObservingForFace %@
_NTKPhotosFacesTargetObserver(%ld): startObservingForFace %@ done (not yet initialized)
_NTKPhotosFacesTargetObserver(%ld): startObservingForFace %@ done
_NTKPhotosFacesTargetObserver(%ld): startObservingForFace %@ done (no collection)
_NTKPhotosFacesTargetObserver(%ld): stopObservingForFace(%@)
_NTKPhotosFacesTargetObserver(%ld): stopObservingForFace %@ done (not yet initialized)
_NTKPhotosFacesTargetObserver(%ld): stopObservingForFace(%@) done
_NTKPhotosFacesTargetObserver(%ld): newAssetCollections:forObserver:
_NTKPhotosFacesTargetObserver(%ld): newAssetCollections:forObserver: done
_NTKPhotosFacesTargetObserver(%ld): assetsChanged:forCollection: %@, looking for uuid %@
_NTKPhotosFacesTargetObserver(%ld): assetsChanged:forCollection: %@ done
_NTKPhotosFacesTargetObserver(%ld): _resetFetchCountsOfUnusedCollections
_NTKPhotosFacesTargetObserver(%ld): _resetFetchCountsOfUnusedCollections: removing fetch count for %@
_NTKPhotosFacesTargetObserver(%ld): _resetFetchCountsOfUnusedCollections done
%@: _requestAssetsForAssetCollection(%@): setting fetchcount for %@ to 50
NTKDPhotosFacesObserver: run
NTKDPhotosFacesObserver: collectionStoreHasBeenCreated(%@)
NTKDPhotosFacesObserver: collectionStoreWillBePurged(%@)
NTKDPhotosFacesObserver: loadEverything:...(%@). WHY IS THIS STILL CALLED???
NTKDPhotosFacesObserver: loadEverything:...(%@) done
NTKDPhotosFacesObserver: didUpdateFace(%@, %@): ignored
NTKDPhotosFacesObserver: didUpdateResourceDirectory(%@, %@)
NTKDPhotosFacesObserver: didUpdateResourceDirectory(%@, %@) done
NTKDPhotosFacesObserver: didUpdateResourceDirectory(%@, %@) ignored
NTKDPhotosFacesObserver: didAddFace(%@, %@)
NTKDPhotosFacesObserver: didAddFace(%@, %@) done
NTKDPhotosFacesObserver: didRemoveFace(%@, %@)
NTKDPhotosFacesObserver: didRemoveFace(%@, %@) done
NTKDPhotosFacesObserver: addStore(%@)
NTKDPhotosFacesObserver: addStore(%@) done
NTKDPhotoFacesObserver: purgeStore(%@)
NTKDPhotoFacesObserver: purgeStore(%@) done
NTKDPhotosFacesObserver: _stopObservingForFaceWithUUID(%@, %@): not observing this face
_makeObservingFaceForFaceUUID: bad photos face %@: content option class is %@
Migrating Infograph face from %@ color to NTKFaceColorWhistlerBlack
Failed to create face from data: %@
unzip failed, data written to disk for analysis: %@
prompting to raise a radar re: unzip failure
Failed to archive face to json data. Face style: %lu - error: %{public}@
Failed to create directory at path to backup face data. Face style: %lu - bundle location: %{public}@ - error: %{public}@
Failed to link resource path for face. Face style: %lu - resource Path: %{public}@ - error: %{public}@
performing activity for identifier %@ because minimum interval %g has elapsed since last performed (%@)
not performing activity for identifier %@ because minimum interval %g has not elapsed since last performed (%@)
checkin complete with state = %s
begin activity '%@'
end activity '%@'
unregistering xpc activity
scheduling xpc activity for 5 minutes from now
xpc activity handler unexpectedly invoked -- we should have adjusted it further into the future before it fired
adjust xpc activity criteria timer fired
****** imbalanced transactions for reason '%@' -- please file a radar on Watch Faces ******
Delaying snapshots for %is
Snapshot delay elapsed; starting
Clean snapshot caches due not having been cleaned in the last %lu days
update all snapshots as context is stale
adding NTKDFaceSnapshotController observer - %@
removing NTKDFaceSnapshotController observer - %@
Swift UI Proxy ERROR: %@
%@: %s: In here. Face: %@
Returning early: Face is nil. %@ %s
%@: %s snapshotInDaemon: YES
Returning early: No block given for: %@ %s
%@: %s wantsToPersistSnapshot: YES, image: %@
%@: %s operation block started with face: %@
%@: %s face: %@ callbackExecuted: %d.
PROXY ERROR: %@
%@: %s face: %@ calling proxy: %@
%@: %s face: %@ provideSnapshotOfFace competionBlock: %d %@.
%@: %s face: %@ Done!
%@: %s adding the operation %@ to the queue:%@, count: %lld/%lld
Library (%@) for deviceUUID (%@) doesn't have any faces. Nothing to snapshot.
snapshot selected face:%@
Prewarm: Checking if %@ needs snapshot prewarm. %lu
Prewarm: %lu stores to enumerate.
Prewarm: Store %@ has %lu face UUIDs to enumerate.
Prewarm: Snapshotting next face in store %@
Prewarm: Store %@ finished.
Prewarm: Store %@ will snapshot face %@.
Prewarm: Store %@ generated snapshot %@ face %@.
Returning early: Complication is nil. %@ %s
Complication Snapshot - Proxy error: %@
notify face snapshot changed for key:%@
collection store has been created
collection store will be purged
Updating snapshot due to face configuration change for face %@
Updating snapshot due to face resource directory change for face %@
Updating snapshot due to face added for face %@
Updating snapshots due to loading all faces for collection store
Updating snapshot due to updating selected UUID for face %@
Updating snapshot due to upgrade for face %@
Updating snapshots for library on active gizmo
Updating snapshots for other collections
Maybe need updated snapshot for face %@
No update needed.
Update needed!
Persisting snapshot contexts
Persisting snapshot keys with blank complications
Cleaning snapshot cache
Removing snapshot for key: %@
taking snapshots for %lu faces
writing snapshot to disk
did write snapshot to disk
failed to write snapshot to disk
starting snapshotting activity
ending snapshotting activity
Setting daemon to exit when clean
No snapshots taken. Not setting daemon to exit when clean
Error decoding face snapshot contexts: %@
Error decoding snapshot keys with blank complications: %@
register for <%@,%@> with seqId %@
<%@,%@> setSelectedFaceUUID: %@
<%@,%@> setOrderedFaceUUIDs: %@
<%@,%@> updateFaceForUUID: %@ withConfiguration: %@
<%@,%@> updateFaceForUUID: %@ withResourceDirectory: %@
<%@,%@> upgradeFace:ForUUID: %@  face: %@ 
<%@,%@> addFaceForUUID: %@ face: %@
<%@,%@> removeFaceForUUID: %@
<%@,%@> resetCollection
<%@,%@> flushUpdatesWithIdentifier: %@
outgoing to client: <%@,%@> load %@ faces (seqId = %@)
outgoing to client: <%@,%@> update selected uuid to %@ (seqId = %@)
outgoing to client: <%@,%@> update ordered uuids to %@ (seqId = %@)
outgoing to client: <%@,%@> update face for UUID %@ to config %@ (seqId = %@)
outgoing to client: <%@,%@> update face for UUID %@ with resource directory %@ (seqId = %@)
outgoing to client: <%@,%@> upgrade face %@ for UUID %@ (seqId = %@)
outgoing to client: <%@,%@> add face %@ for UUID %@ (seqId = %@)
outgoing to client: <%@,%@> remove face of style %@ for UUID %@ (seqId = %@)
outgoing to client: <%@,%@> reset collection store 
Cleaning up orphaned sync directories...
...deleting sync data for device uuid %@
SYNC DISABLED.
SYNC SHOULD BE %{public}@. isDemoMode: %lu, altdv: %lu, deviceSupportsCapability: %lu, has nrDevice: %lu, deviceUUID: %{public}@
NTKDSyncController received NRPairedDeviceRegistryDeviceDidPairNotification
NTKDSyncController received CLKActiveDeviceChangedNotification
Requested to setup NTKDSyncController but it is already setup
SYNC ENABLED. Setting up NTKDSyncController.
SYNC DISABLED. Tearing down NTKDSyncController.
collectionStore (seqId = %@) did update selected uuid: %@
collectionStore (seqId = %@) did update ordered uuids
collectionStore (seqId = %@) did update face for uuid '%@' with configuration: %@
collectionStore (seqId = %@) did update face for uuid '%@' with resource directory: %@
collectionStore (seqId = %@) did upgrade face for uuid '%@': %@
collectionStore (seqId = %@) did add face for uuid '%@': %@
collectionStore (seqId = %@) did remove face of style %@ for uuid '%@'
collectionStore seqId = %@
complicationStore did update template of family %@ for client '%@'
complicationStore did update complication descriptors for client '%@'
complicationStore did remove complication for client '%@'
complicationStore seqId is now %@
complicationStore requested reset sync
NRDevicePropertySystemBuildVersion did change. enqueuing sync request
outgoing session (reset=%@) did start for device with UUID: %@
estimated number of messages to send: %lu
progress: %lu / %lu => %f
outgoing session get next message: returning %@
outgoing session end (success=%@)
incoming session (reset=%@) did start for device with UUID: %@
incoming session: ignoring unexpected request to reset data store -- should not happen on watch!
incoming session, enqueuing message: %@
incoming session end (success=%@)
clearing incoming message list after unsuccessful sync session
Can send data? shouldEnableSync: %lu, syncUnrestricted: %lu
requesting reset sync (needed for collection: %@, complication: %@)
applying incoming message lists
incoming message list for device uuid '%@' has messages; will apply...
building up reset state from reset message list
processing incoming message (part of reset): %@
**** ignoring unexpected message type %@ in reset sync message list (this should not be possible: please file a radar on Watch Faces) ****
unsuccessful reset sync! no face or complication changes. not applying changes, will request new reset sync.
applying incoming message: %@
**** ignoring unexpected 'reset' message inside delta message list (this should not be possible: please file a radar on Watch Faces) ****
ignoring library store validation attempt -- sync messages currently enqueued
unable to read message list at path %@: %@
message list enqueue message %@
Pruning enqueued message made obsolete by new message. Pruned message: %@
Unable to read store status at path %@: %@
*** Migrating old photo faces in %@
Migrating old %@ face from %@ to %@
Cannot convert old resource directory %@
==> Keeping failing %@ face %@ around for inspection
*** Done migrating old photo faces in %@
Migrated the complication: %@ for slot:%@
Failed to migrate the complication: %@ for slot:%@
**** Migrating legibility for photos faces in %@
Cannot create reader for %@
Cannot create new resource directory for face %@
**** Done migrating legibility for photos faces in %@
Update all snapshots due to daemon exiting while snapshotting
NTKDFaceSnapshotClientHandler %p accept from connection %@
NTKDFaceSnapshotClientHandler %p invalidated %@
Update all snapshots due to calendar day changed notification
Update all snapshots due to current localed changed notification
Updated addable snapshots - %ld
Update all snapshots due to %s
NTKDCompanionSyncWrapper initialized. %{public}@ - isMaster:%d - _syncServiceQueue:%@ _syncService:%@
NTKDCompanionSyncWrapper dealloc'ed. %{public}@
Resuming companion sync service.
error resuming companion sync: %@
Syspending companion sync
sent library validation hash to companion: %@
sent memory viewed with collection identifier to companion: %@
sent up next log collection message to companion: %@
error sending out of band message [%ld, %@], error: %@
reset sync successfully requested
reset sync ongoing, incoming request ignored
delta sync successfully requested
backing off for %tu seconds before attempting sync
reset sync under backoff, delta sync delayed
delta sync under backoff, reset sync delayed
delta sync already under backoff, no delta sync requested
Companion sync won't start session. It can't send data.
Companion sync starting session.
sync service encountered an error: %@
requesting new reset sync after previous failure
ignoring unexpected incoming out of band message -- should not happen on watch!
UNEXPECTED SYNC OUTCOME: please file a radar w/ co-sysdiagnose under 'Watch Faces'
sessionStateResult: %ld, messageToSend: %@
Companion Sync session applying changes
failed to unarchive sync message: %@
apply sync mesage: %@, success=%@
sync session ended with error: %@
didSwitchFromPairingID:%@ toPairingID:%@
Pairing ID did switched. Reset _resetSyncRequested to NO.
error decoding sync message (%@): %@
Migration error for Extra Large face lunar complications. Unhandled device size class: %ld.
Migrating Extra Large face lunar complication from %ld to %ld
Adding face with UUID %@ to backup
Failed to archive/write data for face. uuid:%{public}@ - data length: %lu
Removing face with UUID %@ from backup
Setting backup list of face UUIDs to %@
List of face UUIDs in backup already set to %@
Setting backup selected face UUID to %@
Selected face UUID in backup already set to %@
Setting backup version to %f
Version in backup already set to %f
Starting backup load
Found a face with UUID %@
Found a facebackup file that's not a UUID: %@
No faces found in backup
Attempting to load face %@ from backup
Successfully loaded face %@
Failed to load face %@
Finished loading faces
Selected face UUID in the backup wasn't available; selecting the first one instead
Failed to load face (%@) backup (%@) with error: %@
Failed to load face backup with UUID %@: couldn
t find backup file
Failed to load face UUIDs (%@) with error: %@
Failed to unarchive face UUIDs with error: %@
Face UUIDs do not exist at path %@
Failed to load string (%@) with error: %@
Selected face UUID does not exist at path %@
Cleaning up orphaned face collection stores...
...deleting face collection stores for device uuid %@
...deleting GLOBAL face collection stores
store<%@,%@> created with setupComplete: %@, seqId: %@, manifest: %@
store<%@,%@> set version: %f
store<%@,%@> set build version: %@
store<%@,%@> mark initial setup complete
Swapping in faces (%@) for collection (%@)
<%@,%@,%@> update face for UUID %@: configuration = %@
<%@,%@,%@> update face for UUID %@: new resource directory = %@
<%@,%@,%@> upgrade face for UUID %@
<%@,%@,%@> remove face for UUID %@
<%@,%@,%@> add face for UUID %@: %@
<%@,%@> did not add face (because face already present) for UUID: %@
<%@,%@> ignoring attempt to add nil face for UUID: %@
<%@,%@,%@> set selected UUID: %@
<%@,%@> ignoring attempt to select already-selected UUID %@
<%@,%@,%@> set ordered UUIDs (first uuid = %@)
<%@,%@> ignoring reorder request that would not change face order
collection store string: %@
collection store string, part 2: %@
collection store string, part 3: %@
collection store string, part 4: %@
collection store string, part 5: %@
collection store string, part 6: %@
generated library collection store hash: %@
store<%@,%@> playback changes since seqId %@
[playback changes - seqId %@] update selected uuid: %@
[playback changes - seqId %@] update ordered uuids (first uuid = %@))
[playback changes - seqId %@] add face %@
[playback changes - seqId %@] upgrade face %@
[playback changes - seqId %@] update face configuration %@
[playback changes - seqId %@] update face resource directory %@
[playback changes - seqId %@] remove face for uuid %@
Error reading selected UUID at path %@: string could not be converted to UUID: %@
Unable to extract face from JSON object. Error = %@. JSON object = %@
_RemoveResourceDirectoriesExceptUUIDs: Removing %@
Could not remove Resources directory at path (%@) with error (%@)
_RemoveResourceDirectoriesExceptUUIDs: Keeping %@
Unable to read removals dictionary at path %@: %@
Not executing _WriteRemovals as we are in demo mode and have no companion
No path given %@
Couldn't find anything at path %@ - %@
Attempting to remove store at path %@
Store already removed at path %@
Couldn't remove store at path %@ - %@
Unable to convert payload data to array of UUIDS: %@
Unable to convert payload data to NTKComplicationSampleData: %@
Unable to convert payload data to CLKComplicationTemplate: %@
Unable to convert payload data to NSArray<CLKComplicationDescriptor>: %@
daemon is running
SNAPSHOT TEST MODE: all nonessential features are disabled
sharedInstance
updateDeviceDataSourcesInNanoPreferences
migrateIfNecessary
_cleanUpOutdatedSnapshotCache
isEqualToString:
defaultManager
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
runPreMigrator
runPostMigrator
init
registerCurator:forCollectionIdentifier:
isRunningInStoreDemoMode
isInitialSetupComplete
_migrateFromLibraryPrefsArchiveToStore:
markInitialSetupComplete
synchronize
_deleteLibraryPrefsArchive
runWithCollectionStore:
isStoreVersionPreGrace
_removeUnavailableFacesFromStore:
isEmpty
currentDevice
isTinker
_addDefaultFacesToStore:
_ensureSelectedFaceInStore:
setVersion:
selectedUUID
setSelectedFaceUUID:
orderedUUIDs
setFaceUUIDs:
setRefusesToDeleteLastFace:
addObserver:withSeqId:
persistCurrentBuildVersion
count
countByEnumeratingWithState:objects:count:
objectForKey:
addFace:forUUID:
setOrderedUUIDs:
setSelectedUUID:
loadBackupWithCompletion:
_waitForNanoPrefsSyncWithCompletion:
isLuxo
sharedManager
collectionType
faceBundleForBundleIdentifier:onDevice:
storeDemoFacesForDevice:
addObjectsFromArray:
defaultFaceFromFaceDescriptor:forDevice:
optionWithFaceColor:forDevice:
selectOption:forCustomEditMode:slot:
anyComplicationOfType:
setComplication:forSlot:
addObject:
optionWithColor:forDevice:
_allDefaultFaces
mutableCopy
objectAtIndexedSubscript:
faceDescriptor
swapInTheseFaces:
_selectFaceWithDescriptor:inStore:
addFace:withUUID:
faceForUUID:
removeFaceWithUUID:
UUID
faceStyleForUUID:
removeFaceForUUID:
date
setCreationDate:
setEditedState:
setOrigin:
_addFace:toStore:andSelect:
enumerateObjectsUsingBlock:
initForReadingFromData:error:
setDecodingFailurePolicy:
decodeObjectOfClass:forKey:
floatValue
firstObject
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
curateCollectionStore:completion:
resetStoreDefaults:
collectionStore:loadOrderedUUIDs:selectedUUID:facesByUUID:seqId:acknowledge:
collectionStore:didUpdateSelectedUUID:seqId:
collectionStore:didUpdateOrderedUUIDs:seqId:
collectionStore:didUpdateFaceForUUID:withConfiguration:seqId:
collectionStore:didUpdateFaceForUUID:withResourceDirectory:seqId:acknowledge:
collectionStore:didAddFace:forUUID:seqId:
collectionStore:didRemoveFaceOfStyle:forUUID:seqId:acknowledge:
collectionStore:didUpgradeFace:forUUID:seqId:
resetCollectionStore:
.cxx_destruct
_initialSyncCompletedHandler
_backupManager
dictionaryWithObjects:forKeys:count:
fileSystemRepresentation
initToMemory
open
propertyForKey:
unzipStream:toPath:completionHandler:
zippedDataForPath:
_unzipQueue
containsObject:
copy
stringWithFormat:
UTF8String
weakObjectsHashTable
dictionary
initWithCollectionIdentifier:deviceUUID:
_faultInAllClientData
clientIds
_faultInComplicationDescriptorsForClientID:
_faultInSampleDataForKey:
_enumerateAllKeysForClientID:usingBlock:
objectForKeyedSubscript:
familiesWithSampleTemplateForKey:
initWithSupportedFamilies:
setObject:forKey:
supportedFamilies
integerValue
templateForFamily:
setTemplate:forFamily:
array
complicationDescriptorIdentifiersForClientIdentifier:
initWithClientIdentifier:descriptor:
complicationIdentifier
initWithClientIdentifier:complicationIdentifier:
legacyComplicationDescriptorWithSupportedFamilies:
_queue_loadFullCollectionForObserver:
_queue_playbackChangesForObserver:fromSeqId:
_onQueue_async:
removeObject:
_queue_clearRemovalsThroughSeqId:
_queue_sampleTemplateForKey:family:
_queue_complicationDescriptorsForClientIdentifier:
_updateLocalizableSampleDataTemplate:forKey:family:skipSyncObserver:
_updateComplicationDescriptors:forClientIdentifier:skipSyncObserver:
_removeComplicationForKey:skipSyncObserver:
_updateLocalizableSampleData:forKey:skipSyncObserver:
addKey:supportForSampleTemplateForFamily:
_queue_incrementSeqId
_queue_notifyDidUpdateSampleTemplate:forKey:family:skipSyncObserver:
_updateLocalizableSampleData:forKey:family:skipSyncObserver:
removeObjectForKey:
identifier
displayName
setClientId:supportForComplicationDescriptorIdentifiers:
_queue_notifyDidUpdateComplicationDescriptors:forClientIdentifier:skipSyncObserver:
removeSampleTemplatesForKey:
clientIdentifier
_queue_notifyDidRemoveComplicationForKey:skipSyncObserver:
complicationDescriptorsForClientIdentifier:
initWithIdentifier:displayName:supportedFamilies:
unsignedIntegerValue
numberWithUnsignedInteger:
enumerateKeysAndObjectsUsingBlock:
removeObjectsForKeys:
complicationStore:didUpdateComplicationDescriptors:forClientIdentifier:seqId:
_onObserverQueue_async:
_descriptorForKey:
complicationStore:didUpdateLocalizableSampleTemplate:forClientIdentifier:descriptor:family:seqId:
complicationStore:didRemoveComplicationSampleTemplatesForClientIdentifier:descriptor:seqId:
allKeys
sortedArrayUsingComparator:
complicationStore:loadFullCollectionWithLocalizableSampleTemplates:complicationDescriptors:seqId:
complicationStore:didSuppressNotificationForSeqId:
stringByAppendingPathComponent:
UUIDString
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringWithContentsOfFile:encoding:error:
numberWithInteger:
writeToFile:atomically:encoding:error:
initWithContentsOfFile:
emptyManifest
writeToFile:atomically:
initWithContentsOfFile:options:error:
archivedDataWithRootObject:requiringSecureCoding:error:
initWithJSONObjectRepresentation:
JSONObjectRepresentation
dictionaryWithContentsOfFile:
setObject:forKeyedSubscript:
reason
removeAllObjects
cleanupOrphanedStoresWithCurrentDeviceUUIDs:
complicationSampleDataForClientID:descriptor:
removeObserver:
setSyncObserver:withSeqId:
clearSyncObserver
version
clients
sampleTemplateForClientIdentifier:descriptor:family:
updateLocalizableSampleDataTemplate:forClientIdentifier:descriptor:family:
updateComplicationDescriptors:forClientIdentifier:
removeComplicationSampleTemplatesForClientIdentifier:descriptor:
withoutNotifyingSyncObserverSetComplicationSampleData:forClientIdentifier:descriptor:
withoutNotifyingUpdateComplicationDescriptors:forClientIdentifier:
withoutNotifyingUpdateLocalizableSampleDataTemplate:forClientIdentifier:descriptor:family:
withoutNotifyingSyncObserverRemoveComplicationSampleTemplatesForClientIdentifier:descriptor:
collectionIdentifier
deviceUUID
_queue
_storeDirectory
_seqId
_observers
_syncObserver
_observerCallbackQueue
_manifest
_clientToSampleData
_clientIDtoComplicationDescriptors
_removals
_collectionIdentifier
_deviceUUID
allObjects
arrayWithObject:
_clients
_clientToSampleTemplateFamilies
_clientToComplicationDescriptorIdentifiers
contentsOfDirectoryAtPath:error:
initWithUUIDString:
initWithMachServiceName:
setDelegate:
resume
initWithConnection:
setInvalidationHandler:
_setQueue:
keyWithCollectionIdentifier:deviceUUID:
checkoutStore:
_onCalloutQueue_async:
_queue_addCheckoutHandler:forStoreKey:
_queue_notifyObserversStoreCreated:
_queue_invokeCheckoutHandlersForStoreKey:withStore:
_queue_curateStore:withCompletion:
enumerateAllStoresIncludingUnpaired:withHandler:
checkoutStoreForCollectionIdentifier:deviceUUID:withHandler:
relinquishStore:
enumerateStoreIdentifiersWithBlock:
collectionStoreHasBeenCreated:
removeUnusedResourceDirectories
runCollectionServer
listener:shouldAcceptNewConnection:
enumerateAllStoresWithHandler:
addCollectionLifecycleObserver:
removeCollectionLifecycleObserver:
removeOrphanedResourceDirectories
_curatedStores
_storesBeingCurated
_checkoutHandlersByStoreKey
_curatorsByCollectionIdentifier
_collectionLifecycleObservers
_xpcIncomingMessageQueue
_calloutQueue
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
addObserver:
_handleInvalidation
updateAllSnapshots
_onQueueAsync:
createFaceForPerformanceTesting:
updateSnapshotForFace:
performAfterCompletingCurrentlyPendingSnapshots:
snapshotFace:options:completion:
snapshotLibrarySelectedFaceForDeviceUUID:options:completion:
snapshotComplicationDescriptor:options:completion:
convertSwiftUIViewData:options:intoImageProviderWithCompletion:
remoteObjectProxy
faceSnapshotChangedForKey:
initWithConnection:snapshotController:
registerForUpdates
requestSnapshotOfFace:
invalidationHandler
_connection
_snapshotController
_invalidationHandler
defaultWorkspace
dealloc
bundleIdentifier
applicationProxyForIdentifier:
applicationType
initWithBundleIdentifier:allowPlaceholder:error:
appInfoWithApplicationRecord:
supportedActionsByExtensions
supportedActions
enumerateBundlesOfType:block:
setWatchThirdPartyDataSources:
setWatchHasMigratedAvailableDataSources:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
initWithName:
photoFacesObserverQueue
reader
assetCollectionIdentifier
contentOption
store
uuid
updateFaceForUUID:withResourceDirectory:
resourceDirectory
readerForResourceDirectory:
collectionTarget
initWithStore:uuid:contentOption:reader:
updateWithLibraryPhoto:
_store
_uuid
_contentOption
_reader
observeAssetsForAssetCollection:completion:
assets
stopObservingAssetsForAssetCollection:completion:
assetCollection
collectionTargetObserver
initWithAssetCollection:observer:
addFace:
removeFace:
updateAssets:
_assetCollection
_collectionTargetObserver
_assets
_numberOfFaces
useKeyAssetsForCollectionTarget:
_fetchOptions
initWithCollectionTarget:fetchOptions:observerOptions:
_allCollectionsHaveBeenSet
_findAssetCollectionForFace:
_startObservingCollection:forFace:
_stopObservingCollection:forFace:
_resetCollectionData:
faceDataSource
facesForCollectionTarget:
startObservingForFace:
_resetFetchCountsOfUnusedCollections
dispatch:
_findObservedCollectionForAssetCollection:
_haveRequestedAssetsForAssetCollection:
_requestAssetsForAssetCollection:
_collectionUUIDForFace:
uuidFromLocalIdentifier:
allAssetCollections
npto_fetchCountsForAllCollections
npto_setFetchCountsForAllCollections:
npto_setAlwaysUpdatingEnabledForAllCollections:
npto_fetchCountForAssetCollection:
npto_setFetchCount:forAssetCollection:
npto_setAlwaysUpdatingEnabled:forAssetCollection:
sortDescriptorWithKey:ascending:
arrayWithObjects:count:
setSortDescriptors:
addFetchPropertySets:
setFetchLimit:
newAssetCollections:forObserver:
assetsChanged:forCollection:info:forObserver:
initWithCollectionTarget:faceDataSource:
stopObservingForFace:
_workQ
_collectionTarget
_faceDataSource
_allCollections
_observedCollections
_setPhotosLibraryData
_addStore:
_purgeStore:
allValues
_stopObservingForFaceWithUUID:inStore:
_startObservingForFacesInStore:
_startObservingForFaceWithUUID:inStore:
faceStyle
_stopObservingForFacesInStore:
intValue
_makeObservingFacesInStore:
_startObservingForFace:
_makeObservingFaceForFaceUUID:store:
selectedOptionsForCustomEditModes
photosContent
collectionStoreWillBePurged:
_stores
_allFaces
_photosFacesTargetObservers
isEqualToAsset:
_migrateWhistlerAnalogFacesToMonochromeInCollection:
selectedOptionForCustomEditMode:slot:
faceColor
device
replaceObjectAtIndex:withObject:
valueForProperty:
activePairedDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
close
inputStreamWithData:
fileExistsAtPath:
JSONObjectWithData:options:error:
faceWithJSONObjectRepresentation:forDevice:forMigration:allowFallbackFromInvalidFaceStyle:
setResourceDirectory:
dataWithJSONObject:options:error:
linkItemAtPath:toPath:error:
stringByAppendingString:
timeIntervalSinceDate:
_queue_beginActivity:
_queue_endActivity:
_queue_setOrUpdateActivityAndTimer
beginActivity:
endActivity:
checkin
_activityIdentifiers
_adjustCriteriaTimer
_removePostWakeActivityTimer
_xpcActivityRegistered
sharedJetsamMonitor
incrementTransactionCount
decrementTransactionCount
removeLastObject
setName:
setMaxConcurrentOperationCount:
setQualityOfService:
queue
_preferencesKeyForCollectionStore:
_queue_cleanCache
_currentContext
localeMatchesContext:
buildVersionMatchesContext:
_queue_updateAllSnapshots
defaultCenter
lock
unlock
_queue_allSnapshotObjects
_queue_cleanCacheExcludingKeys:
_queue_updateSnapshots:completion:
_updateSnapshotForFace:inStore:
defaultFaceOfStyle:forDevice:
viewControllerForFace:withOptions:
provideSnapshotOfFace:options:completion:
provideSnapshotOfComplicationSnapshotDescriptor:options:completion:
provideImageProviderOfSwiftUIViewData:options:completion:
valueForKey:
initWithServiceName:
interfaceWithProtocol:
invalidate
remoteObjectProxyWithErrorHandler:
blockOperationWithBlock:
setQueuePriority:
addOperation:
boolValue
progress
completedUnitCount
totalUnitCount
name
queue_updateAddableAndGallerySnapshotsWithContinuationBlock:finishedBlock:
removeObjectAtIndex:
objectAtIndex:
defaultModernSnapshotOptions
priority
indexOfObject:
exchangeObjectAtIndex:withObjectAtIndex:
_modernSnapshottingEnabledForStore:
_queue_snapshotObjectsForFace:
_queue_snapshotObjectsForFace:complicationTemplateChanged:
dailySnapshotKey
unadornedSnapshotKey
_snapshotExistsForKey:
snapshotContext:isStaleRelativeToContext:
wantsUnadornedSnapshot
setFace:
setOptions:
setKey:
setContext:
setSnapshotStale:
removeImageForKey:withCompletion:
_queue_cleanContexts
currentContext
complicationForSlot:
complicationType
enumerateComplicationSlotsWithBlock:
_queue_updateSnapshotForFace:inStore:
setValue:forKey:
_queue_updateSnapshotForFace:complicationTemplateChanged:
snapshotStale
indexesOfObjectsPassingTest:
objectsAtIndexes:
_endSnapshottingActivityDidTakeSnapshot:
sharedRenderingContext
setDevice:
_startSnapshottingActivity
_queue_snapshotFaces:completion:
subarrayWithRange:
face
initWithLabel:
options
_queue_cleanSnapshotKeysWithBlankComplications
_writeImageToDisk:imageName:
_noteExternalChangeForKey:
_notifyFaceSnapshotChangedForKey:
logCurrentInterval
setImage:forKey:withCompletion:
context
postNotificationName:object:
stringByAppendingPathExtension:
writeToFile:options:error:
complicationCollection:didUpdateSampleTemplateForClient:descriptor:
complicationCollection:didUpdateComplicationDescriptorsForClient:
complicationCollection:didRemoveSampleTemplatesForClient:descriptor:
complicationCollectionDidLoad:
updateAddableAndGallerySnapshotsWithContinuationBlock:finishedBlock:
_enumerateAllFacesForDeviceUUID:block:
_enumerateRemoteComplicationsForFace:block:
_snapshotKeysWithBlankComplications
_snapshotContexts
_needToUpdateSnapshotsForFacesWithThirdPartyComplications
_observersLock
_setImageForKeyOperationsCount
_currentSnapshots
_currentSnapshotCompletions
_pendingSnapshots
_pendingSnapshotCompletions
_snapshotter
_xpcSnapshotOperationQueue
isEquivalentToFace:
isEqualToDictionary:
_snapshotStale
_face
_options
_key
_context
setWithObjects:
decodeObjectOfClasses:forKey:
_sharedCollectionStoreQueue
_performOrEnqueueAction:
updateFaceForUUID:withConfiguration:
upgradeFace:forUUID:
flushCompleteForIdentifier:
_onQueue:
flushWithObserverCallback:
loadFullCollectionWithOrderedUUIDs:selectedUUID:facesByUUID:seqId:completion:
updateSelectedFaceUUID:seqId:
updateOrderedFaceUUIDs:seqId:
updateFaceForUUID:withConfiguration:seqId:
updateFaceForUUID:withResourceDirectory:seqId:completion:
upgradeFace:forUUID:seqID:
addFace:forUUID:seqId:
removeFaceForUUID:seqId:completion:
resetClientCollection
registerForCollectionIdentifier:deviceUUID:withSeqId:
setOrderedFaceUUIDs:
resetCollection
flushUpdatesWithIdentifier:
_collectionStore
_actionsEnqueuedWhileWaitingForStore
shouldEnableSyncPrintingLogs:
setUp
handleDeviceTinkerStateChangedNotification
addObserver:selector:name:object:
nrDevice
CLKDeviceUUIDForNRDevice:
tearDown
isSetup
initAsMaster:
addComplicationCollectionLifecycleObserver:
_queue_applyIncomingMessageLists
_queue_requestSyncIfNecessary
suspend
removeComplicationCollectionLifecycleObserver:
_queue_storeStatusForDeviceUUID:
seqId
_queue_complicationStoreStatusForDeviceUUID:
_queue_outgoingMessageListForDeviceUUID:
messageOfType:
enqueueMessage:
setSeqId:
messageOfType:withFaceUUID:
messageOfType:withComplicationCliendId:descriptor:family:
messageOfType:withComplicationClientId:
setNeedsResetSync:
_queue_checkoutLibraryStoreForDeviceUUID:
_queue_checkoutComplicationStoreForDeviceUUID:
clearAllMessages
initWithPersistencePath:
suspendCoalescing
messageEnumerator
nextObject
setProgress:
_queue_addPayloadToMessage:withFaceStore:complicationStore:
clearMessageCount:
_queue_endGuardingOutgoingSessionRequest
_queue_validateLibraryFaces
resumeCoalescing
_queue_incomingMessageListForDeviceUUID:
_queue_applyIncomingMessageList:collectionStore:complicationStore:storeStatus:
_queue_requestSyncIfNecessaryAndForceDeltaRequestOtherwise:
shouldEnableSync
initWithConnection:syncWrapper:
checkoutStoreForComplicationCollectionIdentifier:deviceUUID:withHandler:
needsResetSync
requestResetSync
isMaster
hasMessages
requestDeltaSync
_queue_beginGuardingOutgoingSessionRequest
firstMessage
messageType
_queue_applyResetMessageList:collectionStore:complicationStore:
_queue_applyDeltaMessageList:collectionStore:complicationStore:
faceUUID
payloadData
complicationClientID
complicationDescriptor
withoutNotifyingSyncObserverResetWithFaces:orderedUUIDs:selectedUUID:
descriptor
withoutNotifyingSyncObserverAddFace:forUUID:
withoutNotifyingSyncObserverUpdateFaceForUUID:withConfiguration:
withoutNotifyingSyncObserverUpdateFaceForUUID:withResourceDirectory:
withoutNotifyingSyncObserverRemoveFaceForUUID:
withoutNotifyingSyncObserverSetOrderedUUIDs:
withoutNotifyingSyncObserverSetSelectedUUID:
withoutNotifyingSyncObserverUpgradeFace:forUUID:
complicationFamily
dequeueFirstMessage
setPayloadData:
sendOutOfBandMessage:ofType:
_queue_executeIfSyncQueuesAreEmpty:
flushAndComputeValidationHashWithObserverCallback:
cleanupOrphanedSyncDirectoriesWithCurrentDeviceUUIDs:
complicationCollectionStoreHasBeenCreated:
complicationCollectionStoreWillBePurged:
collectionStore:didSuppressNotificationForSeqId:
requestResetSyncForComplicationStore:
outgoingSyncSessionDidStart:
outgoingSyncSessionGetNextMessage
outgoingSyncSessionDidEnd:withError:
incomingSyncSessionDidStart:
incomingSyncSessionApplyMessage:
incomingSyncSessionResetDataStoreWithError:
incomingSyncSessionDidEnd:withError:
incomingLibraryValidationMessage:
companionSyncWrapperCanSendData
device:propertyDidChange:fromValue:
handleActiveDeviceChangedNotification
outgoingSessionTransactionCount
setOutgoingSessionTransactionCount:
incomingSessionTransactionCount
setIncomingSessionTransactionCount:
_companionSyncWrapper
_device
_outgoingMessageLists
_incomingMessageLists
_storeStatuses
_complicationStoreStatuses
_complicationStores
_guardingOutgoingSessionRequest
_sessionMessageList
_sessionStoreStatus
_sessionComplicationStoreStatus
_sessionStore
_sessionComplicationStore
_sessionIsResetSync
_estimatedNumberOfMessagesToSend
_countOfSentMessages
_outgoingSessionMessageEnumerator
_listener
_outgoingSessionTransactionCount
_incomingSessionTransactionCount
nextObjectBlock
setNextObjectBlock:
_nextObjectBlock
arrayWithContentsOfFile:
_enqueueMessageDict:
_persistMessageDictionaries
removeObjectsInRange:
_ensureCoalescingSuspended
_messageAtIndex:
_getMessageType:
setMessageType:
_getFaceUUID:
setFaceUUID:
_getClientID:
setComplicationClientID:
_getFamily:
setComplicationFamily:
_getComplicationDescriptor:
setComplicationDescriptor:
_pruneMessagesMadeObsoleteByNewMessageOfType:withFaceUUID:clientID:family:complicationDescriptor:
indexSet
addIndex:
removeObjectsAtIndexes:
_persistencePath
_messageDictionaries
_coalescingSuspended
numberWithBool:
_status
null
_migratePhotoFacesInCollection:
_migratePhotosFacesLegibilityInCollection:
initWithCapacity:
_shouldMigratePhotoFaceOfStyle:
faceForMigrationForUUID:
_newPhotosFaceForStyle:fromOldFace:
_removeTemporaryPaths:
optionWithPhotosContent:forDevice:
indexSetWithIndex:
allowedComplicationTypesForSlot:
containsIndex:
_cloneResourceDirectoryForReader:
arrayWithCapacity:
imageURL
setImageURL:
isIris
irisVideoURL
encodeAsDictionary
_setupXPCEventListner
_updateAllSnapshots
_handleCalendarDayChangedNotification
_handleCurrentLocaleDidChangeNotification
runSnapshotServer
initWithService:priority:asMasterStore:options:
setDelegate:queue:
resume:
_queue_resetSync
_queue_deltaSync
initRequiringSecureCoding:
encodeInteger:forKey:
encodeObject:forKey:
encodedData
sendData:options:completion:
setNeedsResetSync
_queue_requestSync:withBlock:
setHasChangesAvailable
_getSyncBackoffPeriod
delegate
initWithDomain:code:userInfo:
setSerializer:
setTargetQueue:
sessionMetadata
dictionaryWithDictionary:
isSending
setSessionMetadata:
isResetSync
serializer
dataFromChange:
unarchivedObjectOfClass:fromData:error:
setIsResetSync:
sentChangeCount
setChangesSent:
sentChangeByteCount
setBytesSent:
setDidSucceed:
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
_syncService
_syncServiceQueue
_resetSyncRequested
_syncFailureCount
_syncBackoffOngoing
_syncSerialQueue
_deltaSyncRequiredAfterBackoff
_resetSyncRequiredAfterBackoff
_isMaster
_delegate
_migrateLunarComplicationsInCollection:
sizeClass
length
_pathForFaceBackupWithUUID:
_notifyBackupFileChangedAtPath:
_faceUUIDs
isEqualToArray:
_faceUUIDListPath
_selectedFaceUUID
_selectedFacePath
_version
_versionPath
_backupDirectoryPath
pathExtension
stringByDeletingPathExtension
lastPathComponent
arrayByExcludingObjectsInArray:
_loadFaceWithUUID:completion:
setAttributes:ofItemAtPath:error:
backupFileAtPath:
_removeBackupDirectory
npsManager
setNpsManager:
archivist
setArchivist:
_npsManager
_archivist
_sharedCollectionStoreObserverQueue
_queue_loadFullCollectionForObserver:completion:
_deviceBuildVersion
_storeBuildVersion
compare:options:
_queue_isEmpty
_queue_faceForUUID:
_setOrderedUUIDs:skipSyncObserver:
_setSelectedUUID:skipSyncObserver:
_addFace:forUUID:skipSyncObserver:
_updateFaceForUUID:withConfiguration:skipSyncObserver:
_updateFaceForUUID:withResourceDirectory:skipSyncObserver:
_upgradeFace:forUUID:skipSyncObserver:
_removeFaceForUUID:skipSyncObserver:
_fromSyncResetWithFaces:orderedUUIDs:selectedUUID:
_resetWithFaces:orderedUUIDs:selectedUUID:completion:
_queue_setOrderedUUIDs:
_queue_notifyDidUpdateOrderedUUIDs:skipSyncObserver:
_queue_setSelectedUUID:
_queue_notifyDidUpdateSelectedUUID:skipSyncObserver:
_queue_addFace:forUUID:
_queue_notifyDidAddFace:forUUID:skipSyncObserver:
applyConfiguration:
_queue_notifyDidUpdateFaceForUUID:withConfiguration:skipSyncObserver:
_queue_notifyDidUpdateFaceForUUID:withResourceDirectory:skipSyncObserver:completion:
_queue_notifyDidUpgradeFace:forUUID:skipSyncObserver:
_queue_isEmptyExceptForUUID:
removeUUID:
_queue_notifyDidRemoveFaceOfStyle:forUUID:skipSyncObserver:completion:
removeAllUUIDs
_queue_computeValidationHash
addUUID:withFaceStyle:
isValid
scheduledTimerWithTimeInterval:repeats:block:
updateOrderWithUUIDs:
configuration
setResourceDirectoryExists:
complication
validationString
appendFormat:
substringFromIndex:
stringWithCapacity:
_queue_copyAllFacesByUUID
isBuildVersionOutdated
refusesToDeleteLastFace
_initialSetupComplete
_refusesToDeleteLastFace
_facesByUUID
_selectedUUID
stringWithString:
appendString:
removeObjectsInArray:
_getUUID:boxedStyle:fromEntry:
raise:format:
_containsUUID:
_orderedUUIDs
_boxedStylesByUUID
destinationOfSymbolicLinkAtPath:error:
data
copyItemAtPath:toPath:error:
createSymbolicLinkAtPath:withDestinationPath:error:
faceWithJSONObjectRepresentation:forDevice:
initWithData:encoding:
dataUsingEncoding:
runComplicationStoreServer
plistRepresentation
copyWithZone:
runSnapshotTool
runDaemon
killDaemon
mainRunLoop
sharedMonitor
addSensitiveUIObserver:
prewarmGizmoDaemon
notifyMemoryRemotelyViewedWithCollectionIdentifier:
fileUpnextRadarWithDiagnosticLogs:
_syncWrapper
loadFullCollectionWithLocalizableSampleTemplates:complicationDescriptors:seqId:
updateLocalizableSampleTemplate:forClientIdentifier:descriptor:family:seqId:
updateComplicationDescriptors:forClientIdentifier:seqId:
removeComplicationSampleTemplatesForClientIdentifier:descriptor:seqId:
_complicationStore
NTKDMigrator
NTKDLibraryFacesCurator
NTKDCollectionCurator
NSObject
NTKDCollectionStoreObserver
NTKDZIPArchivist
NTKDComplicationStore
_NTKDComplicationCollectionManifest
NTKDCollectionCoordinator
NSXPCListenerDelegate
NTKDFaceSnapshotClientHandler
NTKDFaceSnapshotControllerObserver
NTKDSiriDataSourcesObserver
LSApplicationWorkspaceObserverProtocol
PhotoFacesObserver
_NTKObservingFace
_NTKObservedCollection
_NTKPhotosFacesTargetObserver
NTKCollectionTargetObserverDelegate
NTKDPhotosFacesObserver
NTKDCollectionLifecycleObserver
_NTKObservingFaceDataSource
NTKDWhistlerAnalogFaceMigrator
NTKDActivityTracker
NTKFaceSnapshotServiceProtocol
NTKDFaceSnapshotController
NTKComplicationCollectionObserver
_NTKDFaceSnapshotObject
NTKDCollectionClient
NTKCollectionServer
NTKDSyncController
NTKDComplicationCollectionLifecycleObserver
NTKDCollectionStoreSyncObserver
NTKDComplicationStoreSyncObserver
NTKDComplicationStoreObserver
NTKDSyncDelegate
NRDevicePropertyObserver
_MessageListEnumerator
_MessageList
_StoreStatus
NTKDPhotosFaceMigrator
NTKDFaceSnapshotCoordinator
NTKDCompanionSyncWrapper
SYServiceDelegate
SYSessionDelegate
SYChangeSerializer
NTKDExtraLargeFaceMigrator
NTKDBackupFileManager
NTKDCollectionStore
_NTKDCollectionManifest
NTKDComplicationStoreCoordinator
NTKDCollectionStoreKey
NSCopying
NTKDDaemon
NTKDCompanionRelayClient
NTKDComplicationStoreComplicationDescriptorMigrator
NTKDComplicationCollectionClient
NTKComplicationStoreServer
v16@0:8
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v24@0:8@16
v32@0:8@"NTKDCollectionStore"16@?<v@?>24
v24@0:8@"NTKDCollectionStore"16
v64@0:8@16@24@32@40@48@?56
v40@0:8@16@24@32
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@?48
v56@0:8@16q24@32@40@?48
v64@0:8@"NTKDCollectionStore"16@"NSArray"24@"NSUUID"32@"NSDictionary"40@"NSNumber"48@?<v@?>56
v40@0:8@"NTKDCollectionStore"16@"NSUUID"24@"NSNumber"32
v40@0:8@"NTKDCollectionStore"16@"NSArray"24@"NSNumber"32
v48@0:8@"NTKDCollectionStore"16@"NSUUID"24@"NTKFaceConfiguration"32@"NSNumber"40
v56@0:8@"NTKDCollectionStore"16@"NSUUID"24@"NSString"32@"NSNumber"40@?<v@?>48
v48@0:8@"NTKDCollectionStore"16@"NTKFace"24@"NSUUID"32@"NSNumber"40
v56@0:8@"NTKDCollectionStore"16q24@"NSUUID"32@"NSNumber"40@?<v@?>48
v36@0:8@16@24B32
v32@0:8@16@24
v24@0:8@?16
@"NTKDBackupFileManager"
v40@0:8@16@24@?32
@24@0:8@16
@"NSObject<OS_dispatch_queue>"
@32@0:8@16@24
f16@0:8
v20@0:8f16
@40@0:8@16@24q32
v48@0:8@16@24@32q40
v44@0:8@16@24q32B40
v28@0:8@16B24
@32@0:8@16q24
@"NSString"
@"NSNumber"
@"NSHashTable"
@"<NTKDComplicationStoreSyncObserver>"
@"_NTKDComplicationCollectionManifest"
@"NSMutableDictionary"
@"NSUUID"
B32@0:8@16q24
@"NSMutableSet"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v28@0:8B16@?20
v32@0:8@?16@24
v24@0:8@"NSString"16
v24@0:8q16
@?16@0:8
@"NSXPCConnection"
@"NTKDFaceSnapshotController"
v20@0:8B16
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@48@0:8@16@24Q32@40
q16@0:8
@"NTKDCollectionStore"
@"NTKPhotosReader"
@"PHAssetCollection"
@"NTKCollectionTargetObserver"
@"PHFetchResult"
v32@0:8@"NSArray"16@"NTKCollectionTargetObserver"24
v48@0:8@"PHFetchResult"16@"PHAssetCollection"24@"NSDictionary"32@"NTKCollectionTargetObserver"40
@32@0:8q16@24
@"NTKFirstUnlockQueue"
@"<_NTKObservingFaceDataSource>"
@"NSMutableArray"
@24@0:8q16
B24@0:8q16
@"NSArray"24@0:8q16
@"NSObject<OS_dispatch_source>"
v40@0:8@"NTKFace"16@"NSDictionary"24@?<v@?B@"UIImage">32
v40@0:8@"NTKComplicationSnapshotDescriptor"16@"NTKComplicationSnapshotOptions"24@?<v@?@"UIImage">32
v40@0:8@"NSData"16@"NSDictionary"24@?<v@?@"CLKFullColorImageProvider">32
v40@0:8@"NTKComplicationCollection"16@"NSString"24@"CLKComplicationDescriptor"32
v32@0:8@"NTKComplicationCollection"16@"NSString"24
v24@0:8@"NTKComplicationCollection"16
v32@0:8@?16@?24
@28@0:8@16B24
^{__CFString=}24@0:8@16
@"NSRecursiveLock"
@"NSObject<OS_dispatch_semaphore>"
@"NSArray"
@"NTKFaceSnapshotter"
@"NSOperationQueue"
@"NTKFace"
@"NSDictionary"
@"NTKFaceSnapshotContext"
v40@0:8@"NSString"16@"NSUUID"24@"NSNumber"32
v24@0:8@"NSUUID"16
v32@0:8@"NSUUID"16@"NTKFaceConfiguration"24
v32@0:8@"NSUUID"16@"NSString"24
v32@0:8@"NTKFace"16@"NSUUID"24
v24@0:8@"NTKDComplicationStore"16
v32@0:8@"NTKDCollectionStore"16@"NSNumber"24
v64@0:8@16@24@32@40q48@56
v48@0:8@"NTKDComplicationStore"16@"NSDictionary"24@"NSDictionary"32@"NSNumber"40
v64@0:8@"NTKDComplicationStore"16@"CLKComplicationTemplate"24@"NSString"32@"CLKComplicationDescriptor"40q48@"NSNumber"56
v48@0:8@"NTKDComplicationStore"16@"NSArray"24@"NSString"32@"NSNumber"40
v48@0:8@"NTKDComplicationStore"16@"NSString"24@"CLKComplicationDescriptor"32@"NSNumber"40
v32@0:8@"NTKDComplicationStore"16@"NSNumber"24
v28@0:8B16@20
B24@0:8^@16
@"NTKDSyncMessage"16@0:8
v28@0:8B16@"NSError"20
B24@0:8@"NTKDSyncMessage"16
v40@0:8@"NRDevice"16@"NSString"24@32
B20@0:8B16
B40@0:8@16@24@32
@"NTKDCompanionSyncWrapper"
@"CLKDevice"
@"_MessageList"
@"_StoreStatus"
@"NTKDComplicationStore"
@"NSEnumerator"
@"NSXPCListener"
v24@0:8Q16
@24@0:8Q16
v56@0:8q16@24@32@40@48
q24@0:8@16
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
@40@0:8@16@24@32
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
@20@0:8B16
v32@0:8@16q24
v32@0:8q16@?24
@"SYService"
@"<NTKDSyncDelegate>"
@"NPSManager"
@"NTKDZIPArchivist"
v44@0:8@16@24B32@?36
v44@0:8q16@24B32@?36
@"<NTKDCollectionStoreSyncObserver>"
@"_NTKDCollectionManifest"
v40@0:8^@16^@24@32
@24@0:8^{_NSZone=}16
v48@0:8@"CLKComplicationTemplate"16@"NSString"24@"CLKComplicationDescriptor"32q40
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSString"16@"CLKComplicationDescriptor"24
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.nanotimekitd</string>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.CoreRoutine.LocationOfInterest</key>
<true/>
<key>com.apple.CoreRoutine.Prediction</key>
<true/>
<key>com.apple.CoreRoutine.VehicleLocation</key>
<true/>
<key>com.apple.QuartzCore.secure-capture</key>
<true/>
<key>com.apple.TimeAppServices.stopwatchclient</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.carousel.backlightaccess</key>
<true/>
<key>com.apple.developer.healthkit</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.avatar.store</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.authorization_bypass</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.clockface.sync</string>
</array>
<key>com.apple.private.security.storage.Photos</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServicePhotos</string>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/UserConfigurationProfiles/EffectiveUserSettings.plist</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.nanomapsgd.xpc.MapsSuggestions</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.NanoTimeKit</string>
</array>
<key>com.apple.security.temporary-exception.files.absolute-path.read-write</key>
<array>
<string>/Library/Avatar</string>
<string>/Library/Caches/com.apple.AvatarUI</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.avatar.service</string>
<string>com.apple.avatar.support</string>
<string>com.apple.avatarsd</string>
</array>
<key>com.apple.security.temporary-exception.shared-preference.read-write</key>
<array>
<string>com.apple.animoji</string>
<string>com.apple.AvatarUI.Staryu</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
