@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
invalidationObservers
T@"NSArray",&,N
personalizedModelObjects
T@"MPSectionedCollection",&,N,V_personalizedModelObjects
T@"NSArray",&,N,V_invalidationObservers
_MPCPlaybackEngineMediaFrameworkImplementation State
@"NSDictionary"16@?0^{os_state_hints_s=I*II}8
Playback engine implementation no longer exist
Unable to find a start item in the playback context %@
v16@?0q8
v24@?0@"NSString"8@"NSError"16
v8@?0
v16@?0@"NSError"8
InternalPauseWithFadeout_%@
InternalEndPlayback_%@
Attemping to toggle playback when neither paused, nor playing - CurrentState:%@
next
previous
playbackState
currentItem
currentRate
currentTime
targetRate
MediaFoundationStack
_MPCPlaybackEngineMediaFoundationImplementation.m
MPCPlaybackEngine: AVAudioSessionCategory cannot be nil.
Queue Controller Contents Changed
Error resolution paused
Invalid parameter not satisfying: %@
queueItem != nil
playbackEngine
T@"MPCPlaybackEngine",R,W,N
queueController
T@"<MPAVQueueController>",&,N
T@"MPAVItem",R,N
queuePlayer
T@"MPQueuePlayer",R,N
Td,N
state
Tq,R,N
stateBeforeInterruption
videoView
T@"MPVideoView",R,N
pictureInPictureController
T@"AVPictureInPictureController",R,N
wantsPictureInPicture
TB,N
automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds
hasPlayedSuccessfully
autoPlayWhenLikelyToKeepUp
actionAtQueueEnd
Tq,N
playbackStackController
T@"<MFPlaybackStackController><MFQueueManagement>",&,N,V_playbackStackController
bookmarker
T@"MPCItemBookmarker",&,N,V_bookmarker
translator
T@"MPCMediaFoundationTranslator",&,N,V_translator
errorController
T@"MPCErrorControllerImplementation",&,N,V_errorController
externalPlaybackController
T@"MPCExternalPlaybackControllerImplementation",&,N,V_externalPlaybackController
assetLoader
T@"<MFAssetLoading>",&,N,V_assetLoader
leaseController
T@"MPCLeaseController",&,N,V_leaseController
stateHandle
TQ,N,V_stateHandle
playerViewController
T@"AVPlayerViewController",R,N
_stateDictionary
T@"NSDictionary",R,N
T@"MPCPlaybackEngine",R,W,N,V_playbackEngine
T@"<MPAVQueueController>",&,N,V_queueController
T@"MPAVItem",R,N,V_currentItem
T@"MPQueuePlayer",R,N,V_queuePlayer
Td,N,V_currentTime
Tq,R,N,V_state
Tq,R,N,V_stateBeforeInterruption
T@"MPVideoView",R,N,V_videoView
T@"AVPictureInPictureController",R,N,V_pictureInPictureController
TB,N,V_wantsPictureInPicture
TB,N,V_automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds
TB,N,V_hasPlayedSuccessfully
TB,N,V_autoPlayWhenLikelyToKeepUp
Tq,N,V_actionAtQueueEnd
MFPlaybackStackControllerImplementation
/System/Library/PrivateFrameworks/MediaFoundation.framework/MediaFoundation
MFAudioSessionConfiguration
MFDescription
Play Queue Identifiers Changed
Item Changed: 
Content item completed without error or value: %@
v24@?0@"MPNowPlayingContentItem"8@"NSError"16
v32@?0@"NSString"8Q16^B24
Failed to get play queue identifers
v16@?0@"NSArray"8
Playing Identifier Changed
Failed to get playing identifier
v16@?0@"MPModelGenericObject"8
v16@?0@"MPNowPlayingContentItem"8
Queue Identifier Changed
v24@?0@"NSArray"8@"NSError"16
playQueueIdentifiersFuture=%@ playingIdentifierFuture=%@ playerPathObserver=%@
sourceContentItems
T@"MPSectionedCollection",R,N
modelObjects
playingIndexPath
T@"NSIndexPath",R,C,N
error
T@"NSError",R,N
invalidationHandler
T@?,C,N
T@"NSArray",R,N
inputProtocols
outputProtocols
inputOperations
T@"NSMapTable",&,N
middleware
T@"MPCMediaRemoteMiddleware",&,N,V_middleware
request
T@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>",&,N,V_request
playQueueIdentifiersFuture
T@"MPCFuture",&,N,V_playQueueIdentifiersFuture
playingIdentifierFuture
T@"MPCFuture",&,N,V_playingIdentifierFuture
queueIdentifierFuture
T@"MPCFuture",&,N,V_queueIdentifierFuture
T@"NSMapTable",&,N,V_inputOperations
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
MPCModelGenericAVItemPlaybackPreventionStateDidChangeNotification
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.accessQueue
%@ [repeatIteration=%ld] %@
%@ %@
%lli
 not
v24@?0@"ICMusicSubscriptionLeaseSession"8@"MPSubscriptionStatusPlaybackInformation"16
com.apple.MediaPlayer.MPCModelGenericAVItem.assetLoadOperationQueue
v24@?0@"MPCModelGenericAVItemAssetLoadResult"8@"NSError"16
DisableOptimizeAccessForLinearMoviePlayback
com.apple.mobileipod
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSError"16
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
isPlaceholder
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.sCompletionSerialQueue
host mismatch
path mismatch
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
v16@?0@"MPModelFileAsset"8
v20@?0B8@"NSError"12
v24@?0@"MPCSuzeLeaseSession"8@"NSError"16
serverError
T@"NSError",R,C,N
dialog
T@"ICStoreDialogResponse",R,C,N
v16@?0@"ICMusicSubscriptionLeaseSession"8
stream-provider-id
/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-4018.200.29/MediaPlaybackCore/Engine/Implementation/Model/Generic AV Item/_ios_tvos_watchos/MPCModelGenericAVItem.m
@"MPArtworkCatalog"16@?0d8
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
v24@?0@"ICURLBag"8@"NSError"16
v24@?0@"MPCModelGenericAVItemTimedMetadataResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.timedMetadataOperationQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.LyricsOperationQueue
v24@?0@"MPModelSong"8@"NSError"16
AlwaysUse64kbpsQuality
AlwaysUse256kbpsQuality
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.utilitySerialQueue
/bfa1LxXd7G1WqHujpjsdA
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseSessionLoadQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseLoadCalloutQueue
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v24@?0@"ICMusicSubscriptionLeaseSession"8@"NSError"16
app.music.tilt.stream-track
app.music.tilt.track
app.music.uploaded-content
app.music.match
app.music.purchase
app.music.subscription
app.music.synced
.cloud
info
com.apple.radio.ping.jingle
rtcReportingParentHierarchyToken
T@,R,N
rtcReportingServiceIdentifier
T@"NSString",R,C,N
rtcReportingAssetType
assetCacheProvider
T@"<MPCModelPlaybackAssetCacheProviding>",&,N,V_assetCacheProvider
assetSourceStoreFrontID
T@"NSString",C,N,V_assetSourceStoreFrontID
equivalencySourceAdamID
Tq,N,V_equivalencySourceAdamID
genericObject
T@"MPModelGenericObject",&,N,V_genericObject
jingleTimedMetadata
T@"NSData",R,C,N,V_jingleTimedMetadata
mediaLibrary
T@"MPMediaLibrary",&,N,V_mediaLibrary
siriInitiated
T@"NSNumber",C,N,GisSiriInitiated,V_siriInitiated
radioPlayback
TB,N,GisRadioPlayback,V_radioPlayback
radioStreamPlayback
TB,N,GisRadioStreamPlayback,V_radioStreamPlayback
subscriptionRequired
TB,N,GisSubscriptionRequired,V_subscriptionRequired
shouldReportPlayEventsToStore
TB,R,N
playbackRequestEnvironment
T@"MPCPlaybackRequestEnvironment",R,C,N,V_playbackRequestEnvironment
stationItemLikedState
Tq,N,V_stationItemLikedState
trackInfo
T@"NSDictionary",&,N,V_trackInfo
eventStream
T@"MPCPlaybackEngineEventStream",W,N,V_eventStream
supportsRadioTrackActions
TB,N,VsupportsRadioTrackActions
asset
T@"AVURLAsset",R,W,N,V_asset
completionHandler
T@?,C,N,V_completionHandler
Unknown
Cellular
Bluetooth
WiFi
Bridged WiFi
Wired Ethernet
Other
v32@?0^{__CFArray=}8^{__CFArray=}16^{__CFError=}24
v32@?0^{__CFArray=}8^v16^{__CFError=}24
waitForCompleteClusters
TB,N,V_waitForCompleteClusters
v24@?0@"ICUserIdentityProperties"8@"NSError"16
identityProperties
T@"ICUserIdentityProperties",C,N,V_identityProperties
delegatedIdentityProperties
T@"ICUserIdentityProperties",C,N,V_delegatedIdentityProperties
jinglePlayActivityReportingController
T@"MPCJinglePlayActivityReportingController",&,N,V_jinglePlayActivityReportingController
reportingPlaybackObserver
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
v16@?0^{__CFError=}8
v28@?0^v8@"NSString"16f24
v20@?0f8^{__CFError=}12
v16@?0^v8
v32@?0^v8^v16@"NSError"24
v24@?0@"NSArray"8@"NSArray"16
YYYY-MM-dd HH:mm:ss.SSSXX
com.apple.MediaPlaybackCore/logging
B24@?0@"MPCPlaybackEngineEvent"8@"<MPCPlaybackEngineEventStreamCursor>"16
identifier
dateFormatter
T@"NSDateFormatter",R,N
subscription
T@"<MPCPlaybackEngineEventStreamSubscription>",R,N,V_subscription
Unreachable
Likely Reachable
Reachable
Device
Account
Queue
Unsupported
No player found for %@
Unexpected implementation class found: %@
# Player: %@
## PlaybackStack
v32@?0@"MPModelObject"8q16^B24
v32@?0@8q16^B24
v32@?0@"NSIndexPath"8Q16^B24
MPCModelStorePlaybackItemsRequestAccumulator.m
Unknown playlist entry: %@
v16@?0@"MPModelPlaylistEntry"8
@32@?0@8q16^B24
Found unplayable object in SOD: %@
@32@?0@8@"NSIndexPath"16^B24
Attempting to populate items for non model object: %@
v24@?0Q8^B16
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
equivalencyMapping
T@"NSDictionary",R,C,N,V_equivalencyMapping
unpersonalizedContentDescriptors
adamIDData
T@"NSData",C,N,V_adamIDData
streamFields
T@"MPCModelGenericAVItemTimedMetadataStreamFields",&,N,V_streamFields
T@"MPSectionedCollection",C,N,V_unpersonalizedContentDescriptors
title
T@"NSString",C,N,V_title
artist
T@"NSString",C,N,V_artist
album
T@"NSString",C,N,V_album
explicitContent
TB,N,GisExplicitContent,V_explicitContent
artworkDictionaries
T@"NSArray",C,N,V_artworkDictionaries
com.apple.MediaPlaybackCore/Siri
SecureKeyBlockingLoadDuration
TracklistLoadDuration
PerceivedTotalStartupTime
Duration
refId
endTimeReciever
 playerPath=%@
playerPath
T@"MPCPlayerPath",R,N
tracklistRange
T{?=qq},R
playingItemProperties
T@"MPPropertySet",R,N
queueItemProperties
queueSectionProperties
preferredFallbackItemRelationship
T@"NSString",R,N
T@"MPCPlayerPath",&,N,V_playerPath
sessionProperties
T@"MPPropertySet",C,N,V_sessionProperties
builder
T@"<MPCPlayerSessionResponseBuilder>",R,D,N
controller
T@"MPCMediaRemoteController",R,N,V_controller
items
T@"MPSectionedCollection",R,N,V_items
v16@?0@"MPModelObject"8
No item provided to setNowPlayingItem
Unable to play item %@
PlayItemInPlaybackQueue not available
%@:%@ did not provide image data.
v16@?0@"UIImage"8
%@:%@ does not support artwork.
Queue descriptor was not provided.
Queue was interrupted by another queue
Preparing queue timed out
iapd
Failed to prepare to play
Failed to prepare queue for prepend
Failed to prepare queue for append
_MPCMusicPlayerControllerServer.m
performQueueModifications is not supported for the system music application
v32@?0@"NSString"8@"MPMusicPlayerQueueDescriptor"16^B24
Failed to apply queue modifications
Prepare queue failed with unexpected start item
DelayMusicServerConnection
systemCache
T@"MPMusicPlayerControllerSystemCache",R,N,V_systemCache
listener
T@"NSXPCListener",R,N,V_listener
activeConnections
T@"NSMutableArray",R,N,V_activeConnections
endpoint
T@"NSXPCListenerEndpoint",R,N
running
TB,R,N,GisRunning
MPCMusicPlayerControllerServer
flavor IN %@ AND streamURL != nil
q24@?0@"MPStoreRadioStreamAssetInfo"8@"MPStoreRadioStreamAssetInfo"16
q24@?0@"MPStoreFileAssetInfo"8@"MPStoreFileAssetInfo"16
allowsAssetCaching
TB,N,V_allowsAssetCaching
allowsAssetInfoCaching
TB,N,V_allowsAssetInfoCaching
assetPathExtension
T@"NSString",C,N,V_assetPathExtension
assetProtectionType
Tq,N,V_assetProtectionType
assetQualityType
Tq,N,V_assetQualityType
assetURL
T@"NSURL",C,N,V_assetURL
isHomeSharingAsset
TB,N,V_isHomeSharingAsset
isHLSAsset
TB,N,V_isHLSAsset
isCloudStreamingAsset
TB,N,V_isCloudStreamingAsset
onlineSubscriptionKeysRequired
TB,N,V_onlineSubscriptionKeysRequired
protectedContentSupportStorageFileURL
T@"NSURL",C,N,V_protectedContentSupportStorageFileURL
purchaseBundleDictionary
T@"NSDictionary",C,N,V_purchaseBundleDictionary
streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyCertificateURL
streamingKeyServerURL
T@"NSURL",C,N,V_streamingKeyServerURL
alternateHLSPlaylistURL
T@"NSURL",C,N,V_alternateHLSPlaylistURL
alternateHLSKeyServerURL
T@"NSURL",C,N,V_alternateHLSKeyServerURL
alternateHLSKeyCertificateURL
T@"NSURL",C,N,V_alternateHLSKeyCertificateURL
suzeLeaseID
T@,&,N,V_suzeLeaseID
iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
willBecomeActivePlayerItemHandler
T@?,C,N,V_willBecomeActivePlayerItemHandler
hasValidAsset
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.serialWorkQueue
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.calloutQueue
sharedLoader
T@"MPCReportingDeviceIdentityPropertiesLoader",R
app.music.media-clip
tracks
mediaClip
T@"MPModelMediaClip",R,N,V_mediaClip
com.apple.MediaPlaybackCore.playbackSession-v3.opack
com.apple.MediaPlaybackCore.playbackSession-v4.opack
com.apple.MediaPlaybackCore
REMOTE_CONTROL_LIKE_TRACK_RADIO
Radio
REMOTE_CONTROL_LIKE_TRACK_SHORT
REMOTE_CONTROL_DISLIKE_TRACK_RADIO
REMOTE_CONTROL_DISLIKE_TRACK_SHORT
_MPCSkipNextStateRestoration
now_playing
Delegate failed to call completion for prepareForActivationWithCompletion:
v24@?0@?<v@?>8@?<v@?@"NSError">16
v12@?0B8
v32@?0@"NSError"8@?<v@?>16@?<v@?@"NSError">24
v16@?0@?<v@?B@"NSError">8
v24@?0@"MPPlaybackContext"8@"NSError"16
MediaPlayer
auto_play
DisableQHO
v16@?0@"MPRemoteCommandCenter"8
<missing command identifier: %@>
 (%lu)
 (%@)
StartPictureInPicture (MPC)
DisableQueueModifications (MPC)
ClearUpNextQueue (MPC)
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
privateListeningOverride
T@"NSNumber",C,N
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]_block_invoke
T@"MPCPlaybackRequestEnvironment",C,N
siri
no current item after set playback session
unexpected current item after set playback session: expectedContentItemID=%@ currentContentItemID=%@
no current item after commit playback session
initializedSupportedCommands
TB,N,GhasInitializedSupportedCommands,V_initializedSupportedCommands
engineRestoringState
TB,N,GisEngineRestoringState,V_engineRestoringState
mediaServerAvailable
TB,N,GisMediaServerAvailable,V_mediaServerAvailable
infoCenter
T@"MPNowPlayingInfoCenter",R,N,V_infoCenter
commandCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
requestImageWithCompletionHandler: called with nil image.
_MPCMediaRemotePublisher.m
Transportable representations only available for queue controller.
Session contains non-transportable content
cloudLibrary
storeFront
v16@?0@"MPModelPlaybackPosition"8
v16@?0@"MPModelSong"8
requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
assetLoadProperties
T@"MPCModelGenericAVItemAssetLoadProperties",&,N,V_assetLoadProperties
requirePreferredAssetQuality
TB,N,V_requirePreferredAssetQuality
responseHandler
T@?,C,N,V_responseHandler
NSBundle+MediaPlaybackCore.m
unable to find MediaPlaybackCore framework
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.amp.mediaplaybackcore
Default
Default_Oversize
Assistant
Assistant_Oversize
MediaRemote
MediaRemote_Oversize
Middleware
Middleware_Oversize
Playback
Playback_Oversize
PlaybackEvents
PlaybackEvents_Oversize
PlaybackEventStream
PlaybackEventStream_Oversize
Queue_Oversize
Reporting
Reporting_Oversize
QueueController
QueueController_Oversize
SDKPlayback
Session
Session_Oversize
Delegation
Delegation_Oversize
v32@?0@8@16^B24
com.apple.MediaPlaybackCore.MPCModelPlaybackContext.MPCPlaybackQueue.serialQueue
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.remotePlaybackQueueResolution
v24@?0@"MPModelResponse"8@"NSError"16
Tracklist token missing model request (nil).
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackContext.MPCPlaybackQueue.serialQueue
Unexpected queueController class found: %@
## Queue <%p> [%@]
## AutoPlay Queue
### State
MPCMediaLibraryPlaybackAssetCacheProviderErrorDomain
plist
deviceGUID
deviceName
systemReleaseType
requestUserAgent
privateListeningStateSource
storeAccountID
timeZone
supportsSecureCoding
TB,R
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_deviceGUID
T@"NSString",R,C,N,V_deviceName
T@"MPCPrivateListeningStateSource",R,C,N,V_privateListeningStateSource
Tq,R,N,V_systemReleaseType
T@"NSString",R,C,N,V_requestUserAgent
T@"NSTimeZone",R,C,N,V_timeZone
TQ,D,N
T@"NSString",C,D,N
T@"MPCPrivateListeningStateSource",C,D,N
Tq,D,N
T@"NSTimeZone",C,D,N
 source=%@
MPCPlaybackIntent.m
completion
v24@?0@"MPRemotePlaybackQueue"8@"NSError"16
com.apple.amp.MPCPlaybackIntent.MediaSuggestion
Cannot provide representative metadata for content item returned by queue feeder.
Failed to generate now playing info for shuffled container or model object.
v32@?0@"MPModelGenericObject"8@"MPNowPlayingContentItem"16@"NSError"24
original
sessionID
supplemental
containsLiveStream
containsTransportableContent
<ARCHIVE LOADER>
v16@?0@"<MPMutableRadioIdentifiers>"8
Cannot handle unknown generic object metadata.
Cannot handle unknown playlist entry when capturing metadata.
com.apple.MediaPlayer
SEASON_DISPLAY_FORMAT_%@
tracklistDataSource
T@"<MPCPlaybackIntentDataSource>",R,N
localizedTitle
T@"NSString",C,N,V_localizedTitle
tracklistSource
Tq,N,V_tracklistSource
tracklistToken
T@"<NSSecureCoding>",&,N,V_tracklistToken
actionAfterQueueLoad
Tq,N,V_actionAfterQueueLoad
shuffleMode
Tq,N,V_shuffleMode
repeatMode
Tq,N,V_repeatMode
prefersEnqueuingUsingAirPlay
TB,N,V_prefersEnqueuingUsingAirPlay
playActivityFeatureName
T@"NSString",C,N,V_playActivityFeatureName
playActivityRecommendationData
T@"NSData",C,N,V_playActivityRecommendationData
siriAssetInfo
T@"NSString",C,N,V_siriAssetInfo
siriReferenceIdentifier
T@"NSString",C,N,V_siriReferenceIdentifier
containsAppleMusicRadioContent
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
v16@?0@"MPModelRadioStation"8
controllerFuture
T@"MPCFuture",R,N
T@"MPCMediaRemoteController",R,N
PlaybackEngine.implementation.currentItem.type didChange
v16@?0@"NSNotification"8
T@"MPCPlaybackEngineMiddleware",&,N,V_middleware
playerRequest
T@"MPCPlayerRequest",&,N,V_playerRequest
com.apple.MediaPlaybackCore.MPCPlaybackHistoryController.operationQueue
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
lastRecordedPlayEvent
T@"MPModelPlayEvent",&,N,V_lastRecordedPlayEvent
Playback State Changed
v16@?0@?<I@?>8
Failed to get playback state
playbackStateFuture=%@
playbackStateFuture
T@"MPCFuture",&,N,V_playbackStateFuture
MPCAssetLoadingOperation - Item has no asset to load - Item:%@
MPCAssetLoadingOperation - Asset loading cancelled - Item:%@
MPCAssetLoadingOperation - Asset loading failed [No AVPlayerItem] - Item:%@
item
T@"MPAVItem",R,C,N,V_item
delegate
T@"<MPCAssetLoaderDelegate>",W,N,V_delegate
configurator
T@"MPCPlayerItemConfigurator",&,N,V_configurator
token
Tq,R,N,V_token
T@?,R,C,N,V_completion
callbackQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_callbackQueue
com.apple.amp.mediaplaybackcore.MPCAssetLoader
MPCAssetLoader.m
MPCAssetLoader must have a configurator set to work properly
Attempting to load an item which has no loadable asset: %@
v32@?0@"MPAVItem"8q16@"NSError"24
loadingQueue
T@"NSOperationQueue",R,N,V_loadingQueue
T@"NSString",R,C,N,V_identifier
artworkIdentifier
T@"NSString",R,C,N,V_artworkIdentifier
artworkProperties
T@"MPExportableArtworkProperties",R,C,N,V_artworkProperties
sharedDataSource
T@"MPCRemotePlayerArtworkDataSource",R,N
RadioAvailabilityController
/System/Library/PrivateFrameworks/Radio.framework/Radio
MPCAssistantStreamingAvailabilityNone
MPCAssistantStreamingAvailabilityOnNetwork
MPCAssistantStreamingAvailabilityOnCompanion
MPCAssistantStreamingAvailabilityOnDevice
MPCAssistantStreamingAvailabilityNeedsCompanion
Store Front Local Equivalency Metadata Response Finished
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
overridePlayingItem
T@"MPModelGenericObject",R,N
playingItemIndexPath
T@"NSIndexPath",R,N
T@"MPCStoreFrontLocalEquivalencyMiddleware",&,N,V_middleware
v16@?0@"MPModelAlbum"8
v16@?0@"MPModelMovie"8
v16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelTVSeason"8
MPCPlayerCommandRequestMediaRemoteOptionPlaybackContext
MPCPlayerCommandRequestMediaRemoteOptionPlaybackIntent
MPCPlayerCommandRequestMediaRemoteOptionReplaceIntent
MPCPlayerCommandRequestMediaRemoteOptionDevices
No commands provided.
MPCPlayerChangeRequest.m
Cannot perform command request without a player path [not on request, or fallback from controller] request=%@
All requests must have the same player path.
commands
T@"NSArray",&,N,V_commands
options
TQ,N,V_options
command
TI,R,N,V_command
T@"NSDictionary",R,C,N,V_options
userInitiatedOptions
T@"NSDictionary",C,N,V_userInitiatedOptions
T@"MPCPlayerPath",R,N,V_playerPath
label
T@"NSString",C,N,V_label
Either Controller or PlayerPath is required to perform a change request.
Failed to send command %ld
v16@?0@"MPCPlayerPath"8
PlayerPath did not resolve route to origin: %@
v24@?0@"MPCPlayerPath"8@"NSError"16
T@"MPCPlayerCommandRequest",R,N,V_request
TQ,R,N,V_options
com.apple.music.playbackqueue.tracklist
com.apple.music.playbackqueue.radio
com.apple.mediaplayer.playbackcontext
com.apple.MediaPlaybackCore.playbackContextArchive-v1.opack
InProcess-com.apple.mediaplayer.playbackcontext
MPCPlayerErrorKeyMediaRemoteCommandHandlerStatus
MPCPlayerRequestErrorDomain
T@"MPPropertySet",C,N,V_playingItemProperties
T@"MPPropertySet",C,N,V_queueSectionProperties
T@"MPPropertySet",C,N,V_queueItemProperties
disablePlaybackStateValidation
TB,N,V_disablePlaybackStateValidation
disablePlaybackRateValidation
TB,N,V_disablePlaybackRateValidation
T@"NSString",C,N,V_preferredFallbackItemRelationship
T{?=qq},N,V_tracklistRange
tracklist
T@"<MPCPlayerResponseBuilder>",R,D,N
T@"UIView<MPCVideoView>",&,N,V_videoView
videoOutput
T@"<MPCVideoOutput>",&,N,V_videoOutput
T@"MPCPlayerResponseTracklist",R,N,V_tracklist
response
T@"MPCPlayerResponse",R,N,V_response
T@"MPCPlayerPath",R,C,N,V_playerPath
{-%ld, +%ld}
MPCPlayerStateUnknown
MPCPlayerStateStopped
MPCPlayerStatePlaying
MPCPlayerStateBuffering
MPCPlayerStatePaused
MPCPlayerStateSeeking
MPCPlayerStateInterrupted
Station
ContinueListening
CL_MaxQueueReferences
CL_PrefetchThreshold
StationURL
NowPlayingContentReference
SeedContentReference
PlaybackRequestEnvironment
repeat/shuffle
queueEndAction
continueListening
nowPlaying
seed
stationID
stationName
stationURL
userIdentity
T@"ICUserIdentity",C,N
T@"MPCPlaybackRequestEnvironment",C,N,V_playbackRequestEnvironment
continueListeningStation
TB,N,V_continueListeningStation
continueListeningQueueProvider
T@"<MPCContinueListeningRadioQueueProviding>",W,N,V_continueListeningQueueProvider
continueListeningMaxQueueReferences
Tq,N,V_continueListeningMaxQueueReferences
continueListeningPrefetchThreshold
Tq,N,V_continueListeningPrefetchThreshold
nowPlayingContentReference
T@"MPCModelRadioContentReference",C,N,V_nowPlayingContentReference
seedContentReference
T@"MPCModelRadioContentReference",C,N,V_seedContentReference
radioStation
T@"MPModelRadioStation",&,N,V_radioStation
T@"NSURL",C,N,V_stationURL
T@"ICUserIdentity",C,N,V_userIdentity
com.apple.MediaPlaybackCore/RTC
app.%@.unknown
com.apple.Music
playbackRequestEnvironment=%@
 storeIDs=[ %@ ]
 sectionedModelObjects=[ <%ld sections>
  %2ld <%ld items> %@: [
  %2ld,%2ld %@
    ... (%ld remaining items)
  ... (%ld remaining sections)
app.music.queue-source.catalog
MPCModelStorePlaybackItemsRequestAllowLocalEquivalencies
MPCModelStorePlaybackItemsRequestClientIdentifier
MPCModelStorePlaybackItemsRequestPlaybackRequestEnvironment
MPCModelStorePlaybackItemsRequestWantsDetailedKeepLocalRequestableResponse
MPCModelStorePlaybackItemsRequestStoreIDs
MPCModelStorePlaybackItemsRequestShouldBatchResultsWithPlaceholderObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjectsSecureCoding
shouldBatchResultsWithPlaceholderObjects
wantsDetailedKeepLocalRequestableResponse
rtcReportingPlayQueueSourceIdentifier
previousResponse
T@"MPModelResponse",&,N
playbackPrioritizedIndexPaths
T@"NSArray",C,N,V_playbackPrioritizedIndexPaths
T@"MPModelResponse",&,N,V_previousResponse
TB,N,V_shouldBatchResultsWithPlaceholderObjects
TB,N,V_wantsDetailedKeepLocalRequestableResponse
allowLocalEquivalencies
TB,N,V_allowLocalEquivalencies
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
sectionedModelObjects
T@"MPSectionedCollection",C,N,V_sectionedModelObjects
storeIDs
T@"NSArray",C,N,V_storeIDs
_obj
<%@:%p>
<NULL>
T@"MPCPlaybackEngine",&,N,V_playbackEngine
MediaPlaybackCoreErrorDomain
MPCErrorUserInfoKeyStoreDialogDictionary
MPCErrorUserInfoKeyLeaseStatus
MPCErrorUserInfoKeyMetricsDictionary
finalResponse
TB,R,N,GisFinalResponse
invalidForPersonalization
TB,R,N,GisInvalidForPersonalization,V_invalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
T@"NSDictionary",C,N,V_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_personalizationResponse
T@"MPStoreLibraryPersonalizationResponse",R,N,V_personalizationResponse
TB,N,GisFinalResponse,V_finalResponse
invalidationDate
T@"NSDate",C,N,V_invalidationDate
MPAssistantErrorDomain
MPCAssistantMediaRemoteSendCommandErrorDomain
MediaRemoteSendCommandErrorCode
An unknown error occurred.
The requested output device(s) were not able to be discovered.
The requested AV endpoint is not remote controllable.
Failed to establish remote control connection to the remote endpoint.
The output context was unable to be prepared for playback.
MediaRemote failed to send the remote control command to the player.
Command required stopping playback on a primary device.
Command required stopping playback on a silent primary device.
Output devices specified were not valid
A safety timeout expired
An external representation of a playback session could not be created.
allowsHLSContent
TB,N,V_allowsHLSContent
assetSourceStorefrontID
T@"NSString",C,N,V_assetSourceStorefrontID
prefersVideoContent
TB,N,V_prefersVideoContent
fileAsset
T@"MPModelFileAsset",&,N,V_fileAsset
homeSharingAsset
T@"MPModelHomeSharingAsset",&,N,V_homeSharingAsset
itemIdentifiers
T@"MPIdentifierSet",&,N,V_itemIdentifiers
prefersHighQualityContent
TB,N,V_prefersHighQualityContent
storeAsset
T@"MPModelStoreAsset",&,N,V_storeAsset
followUp
TB,N,GisFollowUp,V_followUp
accountID
TQ,N,V_accountID
delegatedAccountID
TQ,N,V_delegatedAccountID
householdID
T@"NSString",C,N,V_householdID
storefrontID
T@"NSString",C,N,V_storefrontID
Controller Invalidated
v16@?0@"MPCMediaRemoteController"8
controllerFuture=%@
T@"MPCFuture",&,N,V_controllerFuture
account-begin
account-rectification
account-update
application-termination
audio-route-changed
container-begin
container-end
container-hls-begin
container-hls-end
device-changed
interrupt-begin
interrupt-end
asset-load-begin
asset-load-end
item-begin
item-buffer-finish
item-buffer-ready
item-buffer-stall
item-end
item-failed
item-first-audio-frame
item-first-video-frame
item-hls-stream-begin
item-hls-stream-end
item-hls-timed-metadata-begin
item-hls-timed-metadata-end
item-pause
item-placeholder-begin
item-placeholder-end
item-position-jump
item-resume
item-timed-metadata-ping
item-key-request-begin
item-key-request-end
network-reachability-changed
network-type-changed
playback-behavior-changed
policy-begin
policy-end
queue-add
queue-item-add
queue-item-remove
queue-item-reorder
queue-load-begin
queue-load-end
remote-control-begin
remote-control-end
session-begin
session-will-begin
session-end
session-migrate-begin
session-migrate-end
session-restore-begin
session-restore-end
account-id
account-metadata
previous-account-id
rectification-section-id
rectification-reason
route-metadata
route-should-pause
container-ids
container-kind
container-indeterminate-duration
container-metadata
private-listening-source
queue-section-id
interrupt-name
interrupt-should-resume
asset-load-error
key-request-error
item-did-play-to-end
item-end-position
item-ids
item-kind
item-metadata
item-jump-user-initiated
queue-item-id
radio-track-info
rtc-hierarchy-token
rtc-service-id
item-start-position
item-start-item-id
item-end-item-id
item-stream-id
item-timed-metadata
playback-behavior-metadata
network-constrained
network-high-quality
network-reachability
network-type
queue-load-error
queue-reporting-metadata
remote-control-id
remote-control-options
remote-control-source
remote-control-status
remote-control-type
device-metadata
session-id
session-migration-error
session-restoration-error
queue-account-id
active
delegated
household-id
subscription-status
private-listening-enabled
store-account-id
store-front-id
route-description
route-is-airplay
container-title
container-playlist-version-hash
container-radio-type
container-radio-subtype
application-bundle-id
application-name
application-version
device-model
device-name
device-software-variant
system-name
system-version
system-build
user-agent
feature-name
reco-data
siri-ref-id
siri-wha-metrics
item-duration
item-has-video
item-initial-position
item-artist-uploaded
item-title
item-is-start-item
item-is-placeholder
requires-mpaf
repeat-type
shuffle-type
autoplay-mode
MPCPlaybackEngineEventMonotonicTimeWithHostTime
/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-4018.200.29/MediaPlaybackCore/Engine/Event Stream/_ios_tvos_watchos/MPCPlaybackEngineEvent.m
time.machAbsoluteTime > machAbsoluteTime
MPCPlaybackEngineEvent.m
type
payload
<MPCPlaybackEngineEvent: %@ %@ [%llu] %@>
monotonicTime
T{?=QQQQd},R,N,V_monotonicTime
machAbsoluteTime
TQ,R,N,V_machAbsoluteTime
monotonicTimeNanoSeconds
TQ,R,N
T@"NSUUID",R,C,N,V_identifier
T@"NSString",R,C,N,V_type
T@"NSDictionary",R,C,N,V_payload
date
T@"NSDate",R,N
monotonicDate
Supported Commands Changed
v16@?0@"<MPCSupportedCommands>"8
Failed to get supported commands
supportedCommandsFuture=%@
supportedCommandsFuture
T@"MPCFuture",&,N,V_supportedCommandsFuture
{?=dddddffBB}
{?=dddddffBB}72@?0@8{?=dddddffBB}16
_skippedMetadata
skippedMetadata
TB,R,N,V_skippedMetadata
T@"MPCMediaRemoteController",&,N,V_controller
queueContentItems
T@"MPSectionedCollection",&,N,V_queueContentItems
queueModelObjects
T@"MPSectionedCollection",&,N,V_queueModelObjects
supportedCommands
T@"<MPCSupportedCommands>",&,N,V_supportedCommands
T@"NSIndexPath",C,N,V_playingIndexPath
queueIdentifier
T@"NSString",C,N,V_queueIdentifier
playerState
Tq,N,V_playerState
MPCMediaRemoteMiddleware.m
Could not find content item at indexPath: %@
mpc_isAirplayDeviceBusyError
mpc_isRentalContentRequiresDownloadError
mpc_isAirplayStreamingNotSupportedError
mpc_isQueueLoadingFailure
mpc_isAssetUnavailableFailure
mpc_isUnrecoverableAssetLoadingError
v24@?0q8@"NSError"16
T@"MPCPlaybackEngine",W,N,V_playbackEngine
T@"MPCMediaFoundationTranslator",R,N,V_translator
failedItemsIdentifiers
T@"NSMutableSet",&,N,V_failedItemsIdentifiers
externalPlaybackRouter
T@"<MPCExternalPlaybackRouter>",&,N,V_externalPlaybackRouter
lastItemUsedForErrorResolution
T@"MPAVItem",&,N,V_lastItemUsedForErrorResolution
preferredFirstContentItemID
T@"NSString",C,N,VpreferredFirstContentItemID
itemsHavePlayed
TB,N,VitemsHavePlayed
com.apple.MediaPlaybackCore.MPCModelGenericAVItemSubscriptionAssetLoadOperation.accessQueue
<%@: %p followUp>
DisableMiniSINF
flavor
metadata
fileExtension
sinfs
sinf2
MPCModelGenericAVItemSubscriptionAssetLoadOperation.m
Invalid operation type: %li
Response did not contain asset for item identifiers: %@
operationType
Tq,N,V_operationType
requestContext
T@"ICStoreRequestContext",C,N,V_requestContext
subscriptionLeaseSession
T@"ICMusicSubscriptionLeaseSession",&,N,V_subscriptionLeaseSession
unknown
LWHQ
Music
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.accessQueue
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.diffQueue
v32@?0@"MPIdentifierSet"8@"NSNumber"16^B24
ForceLibrarySupplemental
v32@?0q8@"MPIdentifierSet"16^B24
q16@?0@"MPQueueFeederIdentifierRegistry"8
v16@?0@"MPModelPlayEvent"8
@16@?0@"MPQueueFeederIdentifierRegistry"8
No start item was found for playback context: %@
<REPRESENTATIVE ITEM LOADER>
Could not convert startItem into metadata: %@
MPCModelQueueFeeder.m
Response class (%@) must conform to MPCModelPlaybackResponse
B24@?0q8q16
v16@?0@"MPQueueFeederIdentifierRegistry"8
@"MPIdentifierSet"16@?0q8
@"NSString"16@?0q8
Failed to resolve startItemIdentifiers: %@ for %@
Request class (%@) must conform to MPCModelPlaybackRequest
Invalid request item class: %@ for %@
com.apple.MediaPlayer.MPCModelQueueFeeder: 
<missing request label>
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
v16@?0@"MPIdentifierSet"8
v24@?0@"MPCModelGenericAVItemUserIdentityPropertySet"8@"NSError"16
IndexPath not found for globalIndex from registry: %ld
IndexPath was not an item index path with globalIndex from registry: %ld
rtcReportingSessionAdditionalUserInfo
T@"NSDictionary",R,C,N
requiredPropertiesForStaticMediaClips
fallbackSectionRepresentation
T@"MPModelGenericObject",C,N,V_fallbackSectionRepresentation
Could not discern required properties for %@
v32@?0@"ICRadioStationTrack"8q16^B24
v32@?0@"MPModelRadioStation"8q16^B24
v24@?0@"MPStoreLibraryPersonalizationResponse"8@"NSError"16
v16@?0@"MPAsyncBlockOperation"8
radioStationTracks
T@"MPSectionedCollection",C,N,V_radioStationTracks
results
T@"MPSectionedCollection",R,C,D,N
spcb
<_MPCQueueControllerDataSourceState %p> playbackContext: %@ - originalContext: %@ - supplementalContext: %@
_MPCQueueControllerDataSourceState.m
No active context for datasoure state for section: %@
showInternalSections
UpdatedPlaybackContext changed types %@ != %@
stateLock
T{os_unfair_lock_s=I},R,N,V_stateLock
supplementalPlaybackContextBehavior
Tq,R,N,V_supplementalPlaybackContextBehavior
supplementalPlaybackContext
T@"MPPlaybackContext",R,N,V_supplementalPlaybackContext
dataSource
T@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>",R,N,V_dataSource
playbackContext
T@"MPPlaybackContext",R,N,V_playbackContext
shouldAddOriginalPlaybackContextAfterReplacement
originalPlaybackContext
T@"MPPlaybackContext",R,N,V_originalPlaybackContext
Tq,N,V_state
frozen
TB,N,GisFrozen,V_frozen
sectionIdentifier
T@"NSString",R,N,V_sectionIdentifier
preferredStartItemIdentifier
T@"NSString",R,N,V_preferredStartItemIdentifier
tailPlaceholderItem
T@"MPPlaceholderAVItem",R,N,V_tailPlaceholderItem
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
com.apple.MediaPlaybackCore/PAF
v24@?0@"MPCPlaybackEngineEvent"8^B16
ENGINE_V2
Carrier
Beta
Internal
play-activity-feed-post-all-play-starts
radioPlayActivityEvents
T@"NSMutableArray",R,N,V_radioPlayActivityEvents
playActivityController
T@"ICPlayActivityController",R,N,V_playActivityController
contextID
T@"NSString",R,C,N,V_contextID
supportedOnCurrentPlatform
shouldOverrideManuallyCuratedQueue
TB,N,V_shouldOverrideManuallyCuratedQueue
shouldImmediatelyStartPlayback
TB,N,V_shouldImmediatelyStartPlayback
siriRecommendationID
T@"NSString",C,N,V_siriRecommendationID
featureName
T@"NSString",C,N,V_featureName
siriWHAMetricsInfo
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
homeKitUserIdentifier
T@"NSString",C,N,V_homeKitUserIdentifier
%@ query=%@
query
T@"MPMediaQuery",R,N,V_query
firstItem
T@"MPMediaItem",&,N,V_firstItem
shuffleType
Tq,N,V_shuffleType
%@ station=%@
stationStringID
T@"NSString",R,N,V_stationStringID
%@ collection=%@ identifiers=%@
storeItemIDs
T@"NSArray",R,N,V_storeItemIDs
collectionIdentifierSet
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
%@ seed=%@
seedTrack
T@"NSURL",R,N,V_seedTrack
%@ identifier=%@
T@"NSString",R,N,V_identifier
customData
T@"NSData",R,N,V_customData
autoPlaySection
TB,R,N,GisAutoPlaySection,V_autoPlaySection
T@"MPCPlayerResponse",R,W,N,V_response
metadataObject
T@"MPModelGenericObject",R,N,V_metadataObject
MPCPlayerPath.m
%s is only for use with custom origins.
+[MPCPlayerPath pathWithCustomOrigin:bundleID:playerID:]
Unsupported route type %@
<%@:
 route=%@
 deviceUID=%@
 origin[MR]=%@-%d
 bundleID[MR]=%@
 pid[MR]=%@
 playerID[MR]=%@
 [system media app]
 bundleID=%@
 pid=%@
 playerID=%@
 local active
route
bundleID
playerID
PlayerPathDisplayName
resolved player path %@ did not have an origin. (unresolved player path %@)
v24@?0^v8^{__CFError=}16
Missing external device for endpoint %@.
Could not discover endpoint for device UID (%@).
Could not get active origin.
v20@?0C8^v12
MPCPlayerPath
external device %@ did not have an origin. (connection %@, isConnected:%d isInvalidated:%d)
%@ did not have connection
mediaRemotePlayerPath
T^v,R,N,V_mediaRemotePlayerPath
deviceUID
T@"NSString",R,N,V_deviceUID
representedBundleDisplayName
representedBundleID
T@"MPAVRoute",R,N,V_route
systemMusicPath
TB,R,N,GisSystemMusicPath
resolved
TB,R,N,GisResolved,V_resolved
fullyResolved
TB,R,N,GisFullyResolved
origin
T^v,R,N
T@"NSString",R,C,N,V_bundleID
T@"NSString",R,C,N,V_playerID
inProcess
TB,R,N,GisInProcess
com.apple.MediaPlaybackCore/environment
ReleaseType
MPCModelPlaybackIntentTracklistTokenRequest
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
T@"MPModelRequest",C,N,V_request
startItemIdentifiers
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
containerID
T@"NSString",C,N
ICRadioContentReference
T@"ICRadioContentReference",R,N,V_ICRadioContentReference
referenceModelObjectIdentifiers
T@"MPIdentifierSet",R,N,V_referenceModelObjectIdentifiers
com.apple.MediaPlayer.MPCReportingController.accessQueue
MPCReportingController.m
reportingController != nil
Reporting controller (%@) does not have correct parent (%@ expected, %@ actual)
parentReportingController
T@"MPCReportingController",W,N
childReportingControllers
T@"NSArray",R,C,N
future
T@"MPCFuture",&,N,V_future
com.apple.MediaPlaybackCore/MPCFuture.accessQueue
MPCFuture.m
Finish with value on already finalized future.
Finish with error on already finalized future.
<%@ %p:
 debugLabel=%@
 finalized=YES
 invalid=YES
 error=%@
accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
calloutQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
successBlocks
T@"NSMutableArray",R,N,V_successBlocks
failureBlocks
T@"NSMutableArray",R,N,V_failureBlocks
completionBlocks
T@"NSMutableArray",R,N,V_completionBlocks
invalidBlocks
T@"NSMapTable",R,N,V_invalidBlocks
result
T@,R,N,V_result
T@"NSError",R,N,V_error
finalized
TB,R,N,GisFinalized,V_finalized
invalid
TB,R,N,GisInvalid,V_invalid
debugLabel
T@"NSString",C,N,V_debugLabel
v32@?0@"MPModelGenericObject"8q16^B24
Personalization response did invalidate
T@"MPCStoreLibraryPersonalizationMiddleware",&,N,V_middleware
MPCPlayerItemConfigurator.m
Attempting to configure a non-loaded player item.
defaultEQPresetType
Tq,N,V_defaultEQPresetType
T@"MPCMediaFoundationTranslator",R,W,N,V_translator
stackController
T@"<MFPlaybackStackController>",R,W,N,V_stackController
Picked route can't play encrypted local files via progressive download
Picked route can't play local file from a sending device
Picked route doesn't have a UI to nicely present audio-only items
routingController
T@"MPAVRoutingController",R,N,V_routingController
com.apple.MPCFoundation.MPCJinglePlayActivityReportingController.accessSerialQueue
shouldReportPlayActivityEvents
TB,N,V_shouldReportPlayActivityEvents
com.apple.MediaPlaybackCore.MPCRadioArtworkDataSouce.cachedArtworkRepresentationsAccessQueue
image/jpeg
v32@?0@"NSData"8@"NSString"16@"NSError"24
v32@?0@"<NSCopying><NSObject>"8@"MPArtworkRepresentation"16^B24
v20@?0I8^{__CFArray=}12
com.apple.assistant.SendCommand
v32@?0@"NSArray"8@"NSError"16Q24
v16@?0^{__CFArray=}8
com.apple.mediaplayer.assistant.grouping
v36@?0I8^{__CFError=}12^{__CFString=}20^{__CFArray=}28
v24@?0^{__CFError=}8^{__CFString=}16
com.apple.mediaplayer.assistant.callback
returnStatuses
T@"NSArray",R,N,V_returnStatuses
devicesControlled
T@"NSNumber",C,N,V_devicesControlled
app.music.queue-source.library
MPCPlayerEnqueueErrorDomain
MPCPlayerResponseTracklistDisplaySectionPreviousItems
MPCPlayerResponseTracklistDisplaySectionPlayingItem
MPCPlayerResponseTracklistDisplaySectionNextItems
MPCPlayerResponseTracklistDisplaySectionAutoPlayItems
<missing queue identifier>
uniqueID
lastChangeDirection
playingItem
<NONE>
T@"MPSectionedCollection",R,C,N,V_items
T@"NSIndexPath",R,C,N,V_playingItemIndexPath
displayItems
T@"MPSectionedCollection",R,C,N,V_displayItems
playingItemGlobalIndex
Tq,R,N,V_playingItemGlobalIndex
globalItemCount
Tq,R,N,V_globalItemCount
uniqueIdentifier
T@"NSString",R,N,V_uniqueIdentifier
Tq,R,N,V_lastChangeDirection
upNextItemCount
Tq,R,N,V_upNextItemCount
T@"MPCPlayerResponseItem",R,N
repeatType
Tq,R,N,V_repeatType
Tq,R,N,V_shuffleType
Tq,R,N,V_actionAtQueueEnd
T@"NSIndexPath",&,N,V_playingItemIndexPath
{_MSVSignedRange=qq}
v32@?0@"MPCPlayerResponseSection"8q16^B24
MPCPlayerResponseTracklist.m
Count mismatch: sections=%@ sectionRangeMap=%@
Missing section range for section: %@
Non-contiguous range detected: location=%ld expectedLocation=%ld
sectionRangeMap does not include all items: sectionRangesCount=%ld / items.totalItemCount=%ld
Provided display index path is out of bounds for this collection: %@ (section count %@)
Provided display index path is out of bounds for this collection: %@ (item count %@)
structureIndexPath did not produce a valid global index: %@
Could not find a displayIndexPath for structuredIndexPath: %@
sections
T@"NSArray",R,N,V_sections
sectionRanges
T@"NSDictionary",R,N,V_sectionRanges
presumptuous command
specializedIntents
devices
T@"NSArray",C,N,V_devices
supportedSpecializedQueues
T@"NSDictionary",&,N,V_supportedSpecializedQueues
supportsSetQueueCommand
TB,N,V_supportsSetQueueCommand
supportedQueueTypes
T@"NSSet",&,N,V_supportedQueueTypes
supportedCustomDataQueueIdentifiers
T@"NSSet",&,N,V_supportedCustomDataQueueIdentifiers
supportsCreateStation
TB,N,V_supportsCreateStation
supportedInsertionPositions
T@"NSSet",&,N,V_supportedInsertionPositions
Invalid section collection (2).
supportedRepeatTypes
currentRepeatType
Tq,N,V_currentRepeatType
T@"NSArray",&,N,V_supportedRepeatTypes
supportsChangeRepeat
TB,N,V_supportsChangeRepeat
supportsAdvanceRepeat
TB,N,V_supportsAdvanceRepeat
supportedShuffleTypes
currentShuffleType
Tq,N,V_currentShuffleType
T@"NSArray",&,N,V_supportedShuffleTypes
supportsChangeShuffle
TB,N,V_supportsChangeShuffle
supportsAdvanceShuffle
TB,N,V_supportsAdvanceShuffle
supportedActions
T@"NSArray",&,N,V_supportedActions
changeItemSupport
TQ,R,N,V_changeItemSupport
disabled
TB,R,N,GisDisabled
TB,N,GisDisabled,S_setDisabled:,V_disabled
MPCPlayerDirectionReverseJump
MPCPlayerDirectionReverse
MPCPlayerDirectionStationary
MPCPlayerDirectionForward
MPCPlayerDirectionForwardJump
MPCPlayerDirectionQueueBoundary
_PLACEHOLDER_
_PLACEHOLDER_TAIL_
_PLACEHOLDER_AUTOPLAY_
queueStructures
dataSources
QHOMaximumSize
MPCQueueController State
v32@?0@"NSString"8@"_MPCQueueControllerDataSourceState"16^B24
apil
dncia
apep
apit
AutoPlayArtwork - Trigger is not needed
AutoPlayArtwork - AutoPlay triggered
AutoPlayPlaceholderArtworkVisualIdenticality
v24@?0@"_MPCQueueControllerDataSourceState"8@"NSError"16
Cannot insert at Last position in AutoPlay.
MPCQueueController.m
ContentItemID was nil [reverse enumeration]
ContentItemID was nil [current item]
ContentItemID was nil [forward enumeration]
ContentItemID was nil [tail placeholder]
ContentItemID was nil [loading placeholder]
Received a move command but the source is not available in the queue.
Received a move command but the target is not available in the queue.
Received a move command but the source and target lists are not the same. Moving items between auto play and the queue is not supported.
Unexpected entry type when reverse enumerating for before item: %d
User default should be resolved before setting on queue controller.
Requested removing content item that is not in the queue.
Both previous and next item are set. Did you mean reloadItemsKeepingCurrentItem:NO?
@"MPAVItem"16@?0@"<MPSectionedIdentifierListIdentifierPair>"8
Unknown asset failure reason
DisablePeriodicPositionRestore
 %@=%@
Attempting to add datasource for an already existing section.
The identifierList changed before the data source finished loading.
The specified insertion position [head] was unsupported because the current item is a placeholder and there is no deferredNextContentItemAnchorID.
The specified insertion position [specified] was unsupported because the specified item is a placeholder and there is no deferredNextContentItemAnchorID.
Unsupported insertion type for %s
-[MPCQueueController _addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
The autoplay identifierList changed before the data source finished loading.
-[MPCQueueController _addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
AutoPlayPlaceholder
Cannot find valid identifier for an item not in this list: %@
_nextContentItemID
_deferredNextContentItemAnchorID
_allowsQueueModifications
_repeatType
_shuffleType
_hasUserMutations
_currentItem
_autoPlayState
_autoPlayEndPosition
_identifierList
_autoPlayIdentifierList
Unexpected state transition from: %@ to: %@
Failed to create AutoPlay playbackContext: %@
T@"MPAVItem",&,N
hasUserMutations
T@"<MPAVQueueControllerDelegate>",W,N
queueCoordinator
T@"<MPAVQueueCoordinating>",&,N
displayCount
autoPlayEnabled
userCanChangeShuffleAndRepeatType
allowsQueueModifications
userCanEnableAutoPlay
nextContentItemID
T@"NSString",C,N,V_nextContentItemID
deferredNextContentItemAnchorID
T@"NSString",C,N,V_deferredNextContentItemAnchorID
restorationError
T@"NSError",C,N,V_restorationError
coderVersions
T@"NSMutableDictionary",&,N,V_coderVersions
nextContentItemIDReason
Tq,N,V_nextContentItemIDReason
autoPlayState
Tq,N,V_autoPlayState
autoPlayEndPosition
T@"MPSectionedIdentifierListPosition",&,N,V_autoPlayEndPosition
autoPlayIsTriggered
TB,N,V_autoPlayIsTriggered
restoreLastStartTimePositionToContentItemID
T@"NSString",C,N,V_restoreLastStartTimePositionToContentItemID
lastSavedTime
Td,R,N,V_lastSavedTime
identifierList
T@"MPShuffleableSectionedIdentifierList",&,N,V_identifierList
autoPlayIdentifierList
T@"MPSectionedIdentifierList",&,N,V_autoPlayIdentifierList
T@"NSMutableDictionary",&,N,V_dataSources
autoplayMode
Tq,R,N,G_autoplayMode
currentItemFromAutoPlay
TB,R,N,GisCurrentItemFromAutoPlay
T@"MPAVItem",&,N,V_currentItem
TB,R,N,V_hasUserMutations
T@"<MPAVQueueControllerDelegate>",W,N,V_delegate
T@"<MPAVQueueCoordinating>",&,N,V_queueCoordinator
Tq,N,V_repeatType
TB,N,V_allowsQueueModifications
T@"NSString",R,C,N,V_preferredFirstContentItemID
T@"MPCQueueController",R,W,N,V_queueController
mode
Tq,R,N,V_mode
enumerator
T@"NSEnumerator",R,N,V_enumerator
startPosition
T@"MPSectionedIdentifierListPosition",R,N,V_startPosition
endPosition
T@"MPSectionedIdentifierListPosition",R,N,V_endPosition
branchDepth
entryType
itemIdentifier
removed
TB,R,N,GisRemoved
preferredItemCount
Tq,N,V_preferredItemCount
Paused
Stopped
Interrupted
NSString * _Nonnull NSStringFromMPNowPlayingPlaybackState(MPNowPlayingPlaybackState)
MPNowPlayingInfoCenter_Private.h
Unknown MPNowPlayingPlaybackState value %ld
UnsupportedPendingEnable
Disabled
WaitingForItemsToEnable
WaitingForItemsToDisable
WaitingForTriggerToEnable
LoadingAutoPlay
Enabled
EnabledPendingDisable
UnexpectedState:%ld
v24@?0@"MPCReportingIdentityProperties"8@"NSError"16
v16@?0@"ICStoreRequestContext"8
PASShouldReportPlayActivityEvents
com.apple.PlayActivitySync
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
_MPCAVController.m
SIM_VOLUME
firstPlaybackItemIdentifier
T@"NSString",C,N,V_firstPlaybackItemIdentifier
currentValue
T@"NSNumber",R,C,N,V_currentValue
overrideValue
T@"NSNumber",C,N,V_overrideValue
sourceType
value
com.apple.mediaplaybackcore._MPCPrivateListeningStateUserIdentitySource.accessQueue
sharedAccessQueue
T@"NSObject<OS_dispatch_queue>",R
v16@?0@"MRAVEndpoint"8
B16@?0@"MRAVOutputDevice"8
MPCAssistantEndpointContext
modificationInProgress
T@"NSObject<OS_dispatch_group>",&,N,V_modificationInProgress
<%@: %p %@>
contentItemID
revision
duration
indexPath
explicitBadge
localizedDurationString
languageOptionGroups
T@"NSIndexPath",R,N,V_indexPath
placeholder
TB,R,N,GisPlaceholder,V_placeholder
autoPlay
TB,R,N,GisAutoPlay,V_autoPlay
contentItemIdentifier
T@"NSString",R,N,V_contentItemIdentifier
Tq,R,N,V_revision
T{?=dddddffBB},R,N,V_duration
T@"NSString",R,N,V_localizedDurationString
T@"NSString",R,N,V_explicitBadge
T@"NSArray",R,N,V_languageOptionGroups
T@"NSString",C,N,V_contentItemID
preferredBackwardJumpIntervals
preferredForwardJumpIntervals
seekSupport
TQ,R,N,V_seekSupport
prefersNegativeBackwardSkipIntervals
TB,N,V_prefersNegativeBackwardSkipIntervals
T@"NSArray",C,N,V_preferredBackwardJumpIntervals
T@"NSArray",C,N,V_preferredForwardJumpIntervals
supportedPlaybackRates
preferredPlaybackRate
Tf,R,N
T@"NSArray",C,N,V_supportedPlaybackRates
Tf,N,V_preferredPlaybackRate
localizedShortTitle
presentationStyle
T@"NSString",C,N,V_localizedShortTitle
Tq,N,V_presentationStyle
TB,N,V_value
minimumValue
maximumValue
Tf,N,V_minimumValue
Tf,N,V_maximumValue
snapshotTime
startTime
endTime
elapsedDuration
rate
defaultRate
isLiveContent
isLoading
_calculatedElapsedTime
MPCReportingPlaybackObserverPlayStartNotification
MPCReportingPlaybackObserverPlayEndNotification
MPCReportingPlaybackObserverPlayEndEventStartTimeKey
MPCReportingPlaybackObserverPlayEndEventEndTimeKey
com.apple.MediaPlaybackCore.MPCReportingPlaybackObserver.recordEventOperationQueue
player
T@"MPAVController",R,N,V_player
offline
TB,N,GisOffline,V_offline
reportingController
T@"MPCReportingController",R,N,V_reportingController
SBEnabled
TB,N,GisSBEnabled,V_SBEnabled
TQ,N,V_storeAccountID
storeFrontID
T@"NSString",C,N,V_storeFrontID
identityPropertiesLoader
T@"<MPCReportingIdentityPropertiesLoading>",&,N,V_identityPropertiesLoader
eventDuration
Td,N,V_eventDuration
overrideItemType
TQ,N,V_overrideItemType
lyricsID
T@"NSString",C,N,V_lyricsID
itemGenericObject
T@"MPModelGenericObject",&,N,V_itemGenericObject
privateListeningEnabled
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TB,N,V_shouldReportPlayEventsToStore
T@"NSData",C,N,V_trackInfo
modelPlayEvent
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
T@"NSData",C,N,V_jingleTimedMetadata
recommendationData
T@"NSData",C,N,V_recommendationData
requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleIdentifier
requestingBundleVersion
T@"NSString",C,N,V_requestingBundleVersion
powerLevel
Tf,N,V_powerLevel
sampleRate
Tf,N,V_sampleRate
fftSetup
T^{OpaqueFFTSetup=},N,V_fftSetup
window
T^f,N,V_window
observers
T@"NSMutableArray",&,N,V_observers
selfRef
T@"MPCAudioSpectrumAnalyzer",&,N,V_selfRef
numberOfBands
Tq,R,N,V_numberOfBands
onUpdate
T@?,C,N,V_onUpdate
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %@
v16@?0@"ICAgeVerificationState"8
MPCExplicitContentAuthorizationManager.m
At this stage the age verification state should never be `unknown`
MPCGenericAVItem authorization handler was released and not called.
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %@
sharedManager
T@"MPCExplicitContentAuthorizationManager",R,N
authorizationReason
status
Tq,N,V_status
authorizationError
T@"NSError",C,N,V_authorizationError
lastKnownAgeVerificationState
T@"ICAgeVerificationState",C,N,V_lastKnownAgeVerificationState
T@"<MPCExplicitContentAuthorizationDelegate>",W,N,V_delegate
<MPCItemIdentifierImplementation:%p _contentItemID=%@ Rindex=%ld>
repeatIndex
Tq,N,V_repeatIndex
avPlayerItem
T@"AVPlayerItem",R,N
T@"NSURL",R,C,N
isVideoContent
hasLoadableAsset
isAssetLoaded
isFullyDownloaded
prefersSeekOverSkip
itemID
T@"<MPCItemIdentifier>",R,C,N
com.apple.MediaPlaybackCore/MediaRemoteReplyQueue
com.apple.MPCMediaRemoteController.playerPathControllersQueue/access
com.apple.MPCMediaRemoteController.playerPathControllersQueue/callout
future controller
Failed to send command %ld (MRSendCommandError = %ld)
Failed to send command %ld (MRMediaRemoteCommandHandlerStatus = %ld)
v28@?0I8@"NSError"12@"NSArray"20
MPCMediaRemoteController.m
playbackIntent
Failed to create playback context from playback intent %@
Failed to create playback queue from playback intent %@
Failed to create external representation from playback queue %@
com.apple.MediaPlaybackCore.performRemoteQueueCommand-
com.apple.MediaPlaybackCore/MPCMediaRemoteController
com.apple.MediaPlaybackCore/MPCMediaRemoteController.callout
MPCMediaRemoteController
resolvedPlayerPath
contentItemIDs
contentItemChanges:keys
<EMPTY>
optimisticStateContentItems
loadedRange
requestedRange
playingItemIdentifier
playbackState [was nil before]
I8@?0
v12@?0I8
supportedCommands [was nil before]
v24@?0^{__CFArray=}8^{__CFError=}16
<MPCMediaRemoteController: %p>
PlaybackQueue Response failed to include now playing item
Requested content item %@ state does not exist.
Got error from MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got nil items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got zero items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got a different artwork identifier from remote artwork loading than whan we requested %@ -> %@
Got no image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got invalid image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
playbackState [from notification]
@"MPArtworkCatalog"16@?0@"MPModelObject"8
playbackState [optimistic state]
playbackState [restored state / optimistic failure]
playingItemIdentifier [optimistic state]
playingItemIdentifier [restored state / optimistic failure]
mediaRemoteReplyQueue
T@"NSObject<OS_dispatch_queue>",R,N
T@"MPCPlayerPath",&,N,V_resolvedPlayerPath
mediaRemoteArtworkDataSource
T@"<MPArtworkDataSource>",R,N,V_mediaRemoteArtworkDataSource
remotePlayerArtworkDataSource
T@"<MPArtworkDataSource>",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
invalidationToken
T@,&,N,V_invalidationToken
playbackStateCacheState
Tq,R,N,V_playbackStateCacheState
supportedCommandsCacheState
Tq,R,N,V_supportedCommandsCacheState
playingIdentifierCacheState
Tq,R,N,V_playingIdentifierCacheState
playingIdentifier
queueIdentifierCacheState
Tq,R,N,V_queueIdentifierCacheState
enabled
<DEFAULT>
%@ (%d)
continue-listening
station
radioStationURL
T@"NSURL",C,N,V_radioStationURL
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
kind
offers
downloadAssets
v32@?0@"NSDictionary"8Q16^B24
childrenIds
children
com.apple.mediaplayer.assistant.connectToEndpoint
v20@?0I8^{__CFError=}12
MPCAssistantConnection
PlaybackEventStreams
%@.sqlpkg
_MPC_CLEAR_EVS
Database
MPCPlaybackEngineEventStream.m
database
com.apple.MediaPlaybackCore.MPCPlaybackEngineEventStream/access
CREATE TABLE IF NOT EXISTS events(identifier BLOB PRIMARY KEY, type TEXT, monoAbsolute INT, monoContinuous INT, monoTimebaseNS INT, userNS INT, payload TEXT, _ns INT UNIQUE GENERATED ALWAYS AS (monoTimebaseNS + monoContinuous) STORED) WITHOUT ROWID
 - Assertions: %@
 - Subscriptions: %@
reason
INSERT INTO events (identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload) VALUES (@identifier, @type, @monoAbsolute, @monoContinuous, @monoTimebaseNS, @userNS, @payload)
@identifier
@type
@monoAbsolute
@monoContinuous
@monoTimebaseNS
@userNS
@payload
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events ORDER BY _ns LIMIT @count
@count
testingDelegate
T@"<MPCPlabackEngineEventStreamTestingDelegate>",W,N,V_testingDelegate
lastEvent
T@"MPCPlaybackEngineEvent",R,N
maximumEventDeliveryTimestamp
TQ,N
<%@: %p consumer=%@ events=%@>
Consumer %@ already has a mutating subscription to %@
Consumer %@ already has an immediate subscription to %@
Consumer %@ already has a subscription to %@
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS ORDER BY _ns
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS && _ns < @maximumNS ORDER BY _ns
@lastNS
@maximumNS
consumer
T@"<MPCPlaybackEngineEventConsumer>",R,W,N,V_consumer
T@"MPCPlaybackEngineEventStream",R,W,N,V_eventStream
lastEventSuccessTimestamp
TQ,N,V_lastEventSuccessTimestamp
mutatingEventHandlers
T@"NSMutableDictionary",R,N,V_mutatingEventHandlers
immediateEventHandlers
T@"NSMutableDictionary",R,N,V_immediateEventHandlers
eventHandlers
T@"NSMutableDictionary",R,N,V_eventHandlers
Start event must be chronologically AFTER the limiting event.
COUNT(DISTINCT events.identifier)
eventType
Must provide event types to enumerate.
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadJSONValue>"16^B24
Query too large
SELECT %@ FROM events
, json_tree(events.payload, @payload_key_%d) AS payload_%d
(payload_%d.value = @payload_value_%d)
events.type = @type
events.type IN (
@type_%d
_ns < (SELECT _ns FROM events WHERE identifier = @startIdentifier)
_ns > (SELECT _ns FROM events WHERE identifier = @endIdentifier)
 WHERE 
 AND 
 ORDER BY _ns DESC
@startIdentifier
@payload_key_%d
@payload_value_%d
Unable to convert payload value to JSON: %@
Unknown payload value type for query: %@
v32@?0@"NSString"8@16^B24
@endIdentifier
DISTINCT events.identifier, events.type, events.monoAbsolute, events.monoContinuous, events.monoTimebaseNS, events.userNS, events.payload
T@"MPCPlaybackEngineEventStream",R,N,V_eventStream
startEventIdentifier
T@"NSUUID",R,C,N,V_startEventIdentifier
endEventIdentifier
T@"NSUUID",R,C,N,V_endEventIdentifier
<%@: %p reason=%@>
T@"NSString",R,C,N,V_reason
void _MPCPlaybackEngineEventStreamValidateSystemTime(MPCPlaybackEngineEventType  _Nonnull __strong, uint64_t)
Event %@ time out of bounds: %llu < %llu < %llu
Event %@ time overflows int64 size: %llu < %lld
com.apple.MediaPlaybackCore/%@.activeprogress
v24@?0@"ICUserIdentity"8@"NSError"16
com.apple.MediaPlayer.MPCModelStorePlaybackItemsRequestOperation.operationQueue
Request must contain either storeIDs or sectionedModelObjects
v36@?0@"MPSectionedCollection"8B16@"NSDate"20@"NSDictionary"28
v32@?0@"NSString"8@"NSString"16^B24
DisableNewStoreAccumulator
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
T@"MPCModelStorePlaybackItemsRequest",R,C,N,V_request
T@?,R,C,N,V_responseHandler
containerType
identifierSet
hasContainerType
Ti,N,V_containerType
hasIdentifierSet
T@"_MPCProtoContainerIdentifierSet",&,N,V_identifierSet
T@"NSMutableArray",&,N,V_items
hasPlayActivityFeatureName
T@"NSString",&,N,V_playActivityFeatureName
delegateInfoID
storeAdamID
storePlaylistGlobalID
storePlaylistVersionHash
cloudID
cloudCollectionID
radioStationID
cloudUniversalLibraryID
hasDelegateInfoID
Tq,N,V_delegateInfoID
hasStoreAdamID
Tq,N,V_storeAdamID
hasStorePlaylistGlobalID
T@"NSString",&,N,V_storePlaylistGlobalID
hasStorePlaylistVersionHash
T@"NSString",&,N,V_storePlaylistVersionHash
hasCloudID
Tq,N,V_cloudID
hasCloudCollectionID
T@"NSString",&,N,V_cloudCollectionID
hasRadioStationID
T@"NSString",&,N,V_radioStationID
hasCloudUniversalLibraryID
T@"NSString",&,N,V_cloudUniversalLibraryID
uuid
timeZoneName
hasAccountID
hasUuid
T@"NSString",&,N,V_uuid
hasDeviceGUID
T@"NSString",&,N,V_deviceGUID
hasDeviceName
T@"NSString",&,N,V_deviceName
hasSystemReleaseType
Ti,N,V_systemReleaseType
hasRequestUserAgent
T@"NSString",&,N,V_requestUserAgent
hasTimeZoneName
T@"NSString",&,N,V_timeZoneName
hasPrivateListeningEnabled
TB,N,V_privateListeningEnabled
mediaType
excludeFromShuffle
hasMediaType
Ti,N,V_mediaType
T@"_MPCProtoItemIdentifierSet",&,N,V_identifierSet
hasExcludeFromShuffle
TB,N,V_excludeFromShuffle
storeSubscriptionAdamID
purchaseHistoryID
hasContentItemID
T@"NSString",&,N,V_contentItemID
hasStoreSubscriptionAdamID
Tq,N,V_storeSubscriptionAdamID
hasPurchaseHistoryID
Tq,N,V_purchaseHistoryID
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
hasLibraryAlbumContentReference
T@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference",&,N,V_libraryAlbumContentReference
hasLibraryArtistContentReference
T@"_MPCProtoRadioContentReferenceLibraryArtistContentReference",&,N,V_libraryArtistContentReference
hasLibraryItemContentReference
T@"_MPCProtoRadioContentReferenceLibraryItemContentReference",&,N,V_libraryItemContentReference
hasStoreContentReference
T@"_MPCProtoRadioContentReferenceStoreContentReference",&,N,V_storeContentReference
albumName
representativeItemCloudID
hasAlbumName
T@"NSString",&,N,V_albumName
hasRepresentativeItemCloudID
Tq,N,V_representativeItemCloudID
artistName
hasArtistName
T@"NSString",&,N,V_artistName
albumArtistName
composerName
contentType
copyrightText
albumDiscCount
discNumber
fileSize
genreName
isCompilation
albumTrackCount
trackNumber
year
hasAlbumArtistName
T@"NSString",&,N,V_albumArtistName
hasComposerName
T@"NSString",&,N,V_composerName
hasContentType
Ti,N,V_contentType
hasCopyrightText
T@"NSString",&,N,V_copyrightText
hasAlbumDiscCount
Ti,N,V_albumDiscCount
hasDiscNumber
Ti,N,V_discNumber
hasFileSize
Td,N,V_fileSize
hasGenreName
T@"NSString",&,N,V_genreName
hasIsCompilation
TB,N,V_isCompilation
hasDuration
Td,N,V_duration
hasTitle
T@"NSString",&,N,V_title
hasAlbumTrackCount
Ti,N,V_albumTrackCount
hasTrackNumber
Ti,N,V_trackNumber
hasYear
Ti,N,V_year
radioStationURLString
accountInfo
hasRadioStationURLString
T@"NSString",&,N,V_radioStationURLString
hasSeedContentReference
T@"_MPCProtoRadioContentReference",&,N,V_seedContentReference
hasNowPlayingContentReference
T@"_MPCProtoRadioContentReference",&,N,V_nowPlayingContentReference
hasAccountInfo
T@"_MPCProtoDelegateInfo",&,N,V_accountInfo
container
startingItemIndexPath
accountInfos
T@"NSMutableArray",&,N,V_accountInfos
containers
T@"NSMutableArray",&,N,V_containers
hasStartingItemIndexPath
T@"_MPCProtoTracklistIndexPath",&,N,V_startingItemIndexPath
hasShuffleMode
Ti,N,V_shuffleMode
containerIndex
itemIndex
hasContainerIndex
Tq,N,V_containerIndex
hasItemIndex
Tq,N,V_itemIndex
com.apple.MediaPlaybackCore.MPCModelGenericAVItemMediaRedownloadOperation.accessQueue
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksOperation
v32@?0@"MPCModelRadioGetTracksStep"8@"MPCModelRadioGetTracksResponse"16@"NSError"24
v16@?0@"MPCModelRadioGetTracksStep"8
tracklistAction
Tq,R,N,V_tracklistAction
T@"MPSectionedCollection",R,C,N,V_tracks
v32@?0@"_MPCProtoItem"8Q16^B24
v32@?0@"_MPCProtoContainer"8Q16^B24
v24@?0@"MPCPlaybackRequestEnvironment"8@"NSError"16
Missing tracklist data in playback queue.
Missing creation properties data in playback queue.
Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
Unknown queue identifier: %@
Cannot play fuse content
Genius is Disabled
Genius is not avialable for this item
v16@?0@?<v@?@"ICUserIdentity"@"NSError">8
v20@?0@"ICMutableUserIdentityProperties"8B16
Failed to create delegated account.
Delegation is unsupported on this device.
Failed to add delegation uuid.
unknown-guid
MPIdentifierSet *__MPIdentifierSetWithMPCProtoContainer(_MPCProtoContainer *__strong, _MPCProtoTracklist *__strong)_block_invoke
MPRemotePlaybackQueue+MPCAdditions.m
Attempted to decode container identifier set without personID
%llu
MPIdentifierSet *__MPIdentifierSetWithMPCProtoItem(_MPCProtoItem *__strong, _MPCProtoTracklist *__strong)_block_invoke
startPictureInPictureCommand
disableQueueModificationsCommand
clearUpNextQueueCommand
T@"MPRemoteCommand",R,N
MPCRemoteCommandEventOptionPauseFadeoutDurationKey
MPCRemoteCommandEventOptionSkipImmediatelyKey
com.apple.MediaPlaybackCore/MPCFairPlayPerformance-miniSinf
v24@?0@"MPServerObjectDatabaseAsset"8^B16
POST
guid
flavors
adamIds
application/json
v24@?0@"ICURLResponse"8@"NSError"16
v32@?0@"NSString"8@"_MPCMiniSINFEndpointInfo"16^B24
max-mini-sinf-batch-size
https://itunes.apple.com/
v24@?0@"NSData"8@"NSError"16
v24@?0@"NSURLRequest"8@"NSError"16
endpointURL
T@"NSURL",R,C,N,V_endpointURL
maximumBatchSize
Tq,R,N,V_maximumBatchSize
T@"ICStoreRequestContext",R,N,V_requestContext
com.apple.iBooks
com.apple.podcasts
com.apple.NanoRadio
com.apple.NanoBooks
<%@ %p bundleID = "%@", playerID = "%@", origin = "%@", outputDeviceUIDs = %@, outputGroups = %@, outputGroupID = %@>
v16@?0@"NSDictionary"8
 Companion connected
 Companion disconnected
appBundleID
T@"NSString",R,N,V_appBundleID
T@"NSString",R,N,V_playerID
T^v,R,N,V_origin
outputDeviceUIDs
T@"NSArray",R,N,V_outputDeviceUIDs
hashedOutputDeviceUIDs
T@"NSArray",R,N,V_hashedOutputDeviceUIDs
outputGroups
T@"NSArray",R,N,V_outputGroups
outputGroupID
T@"NSString",R,N,V_outputGroupID
singleGroup
TB,R,N,V_singleGroup
T^v,D,N
T@"NSArray",C,D,N
TB,D,N
MPCPlaybackEngine.m
MPCPlaybackEngine API must be called on the main thread. %@
Unable to restore state. Too many failed attempts.
v20@?0B8@?<v@?>12
audioSessionCategory
new_playback_engine_homepod
new_playback_engine
event_stream_paf_homepod
event_stream_paf
event_stream_siri_homepod
event_stream_siri
event_stream_rtc_homepod
event_stream_rtc
DisableAudioAnalysis
Error while archiving playback state: %@
stateRestoration-%@
attempts
Explicit content not allowed [unable to handle request] - item=%@ - reason=%@
allowed
not allowed
requiresMainThread
usesNewPlaybackImplementation
usesEventStreamPAF
usesEventStreamSiri
usesEventStreamRTC
scheduledPlaybackStatePreservation
TB,N,GhasScheduledPlaybackStatePreservation,V_scheduledPlaybackStatePreservation
needsUISnapshot
TB,N,V_needsUISnapshot
eventObserver
T@"MPProtocolProxy<MPCPlaybackEngineEventObserving>",R,N,V_eventObserver
implementation
T@"<MPCPlaybackEngineImplementation>",R,N,V_implementation
mediaRemotePublisher
T@"_MPCMediaRemotePublisher",R,N,V_mediaRemotePublisher
musicPlayerControllerServer
T@"_MPCMusicPlayerControllerServer",R,N,V_musicPlayerControllerServer
T@"_MPCReportingController",R,N,V_reportingController
sessionManager
T@"_MPCPlaybackEngineSessionManager",R,N,V_sessionManager
leaseManager
T@"_MPCLeaseManager",R,N,V_leaseManager
accountManager
T@"_MPCPlaybackAccountManager",R,N,V_accountManager
fairPlayPerformanceController
T@"_MPCFairPlayPerformanceController",R,N,V_fairPlayPerformanceController
T@"UIView",R,N
T@"<MPCVideoOutput>",R,N,V_videoOutput
systemMusicApplication
TB,N,GisSystemMusicApplication,V_systemMusicApplication
T@"NSString",C,N,V_audioSessionCategory
audioSessionOptions
TQ,N,V_audioSessionOptions
audioAnalyzerEnabled
TB,N,GisAudioAnalyzerEnabled,V_audioAnalyzerEnabled
audioAnalyzer
T@"MPCAudioSpectrumAnalyzer",R,N,V_audioAnalyzer
serverEndpoint
T@"<MPCPlaybackEngineDelegate>",W,N,V_delegate
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
videoSupported
TB,N,GisVideoSupported,V_videoSupported
fallbackPlaybackIntent
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
stateRestorationSupported
TB,N,GisStateRestorationSupported,V_stateRestorationSupported
queueHandoffSupported
TB,N,GisQueueHandoffSupported,V_queueHandoffSupported
MPNowPlayingInfoCenter_MPCPlaybackEngine
@"MPCPlaybackEngine"8@?0
T@"MPCPlaybackEngine",W,N
None
Age Gating
Age Verification
com.apple.MediaPlaybackCore/MRNowPlayingNotificationQueue
com.apple.MediaPlaybackCore/MPCPlayerPathCache
com.apple.MediaPlaybackCore/MPCPlayerPathCache.callout
resolvedPlayerPath and error was nil
B32@?0@8Q16^B24
sharedCache
T@"MPCPlayerPathCache",R,N
playerPathResolutions
T@"NSMutableDictionary",R,N,V_playerPathResolutions
playerPathObservers
T@"NSMutableDictionary",R,N,V_playerPathObservers
endpointObservers
T@"NSMutableDictionary",R,N,V_endpointObservers
MPCModelStorePlaybackItemsRequestAccumulatorLegacy.m
MPCModelStorePlaybackItemsRequestAccumulator - No section for specified store ID [unrecoverable error] - currentStoreID=%@ - currentStoreItemMetadata=%@
MPCModelStorePlaybackItemsRequestAccumulator - No model object for section [unrecoverable error] - currentStoreID=%@ - , currentStoreItemMetadata=%@ - currentSection=%ld
MPCModelStorePlaybackItemsRequestAccumulator - Section model objects should never be nil [unrecoverable error] - currentStoreID=%@ - currentStoreItemMetadata=%@ - currentSection=%ld - sourceModelObject=%@
MPCSuzeLeaseSessionControllerLeaseSessionRenewDidFailNotification
MPCSuzeLeaseControllerUserInfoKeySession
MPCSuzeLeaseControllerUserInfoKeyError
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.accessQueue
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.calloutQueue
sharedController
T@"MPCSuzeLeaseSessionController",R
clientCount
Tq,N,V_clientCount
icLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icLeaseSession
mpcLeaseSession
T@"MPCSuzeLeaseSession",R,N,V_mpcLeaseSession
shouldStopWhenFinished
TB,N,V_shouldStopWhenFinished
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadValue>"16^B24
domain
code
userInfo
modelClass
_empty
library
db-id
contained-pid
sync
personal
person-id
cloud
cloud-album
reco-id
universal
global-playlist
adam
former-ids
ulid
purchased
social-profile
media-clip
static-asset
radio
station-string
station-hash
station-id
id<MPCPlaybackEngineEventPayloadValue>  _Nullable _coercePayloadFromJSONValue(__strong id<MPCPlaybackEngineEventPayloadJSONValue> _Nonnull, NSString *__strong _Nonnull)
MPCPlaybackEngineEventPayload.m
Unexpected type for key %@ actual=%@ expected=%@
Unexpected type for element in array for key %@ actual=%@ expected=%@
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull)_block_invoke
Unexpected type for key: %@ actual=%@ expected=%@
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull)
Attempt to JSON coerce unsupported value type: %@
modelSong
T@"MPModelSong",&,N,V_modelSong
T@"NSString",&,N,V_lyricsID
visibleDuration
Td,N,V_visibleDuration
displayType
Tq,N,V_displayType
displayedCharacterCount
Tq,N,V_displayedCharacterCount
language
T@"NSString",C,N,V_language
Tq,N,V_sourceType
icSuzeLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icSuzeLeaseSession
LeasePreventionPause_%@
leaseEndIgnoreReasons
T@"NSMutableSet",&,N,V_leaseEndIgnoreReasons
prepareCompletions
T@"NSMutableDictionary",&,N,V_prepareCompletions
hasSubscriptionPlaybackCapability
TB,N,V_hasSubscriptionPlaybackCapability
enqueuerProperties
T@"ICPlayActivityEnqueuerProperties",C,N,V_enqueuerProperties
contentItem.protobuf.gz
artwork
artworkHash
contentItem
compressionAlgorithm
com.apple.mediaplaybackcore.sessionArchive
T@"MPNowPlayingContentItem",C,N,V_contentItem
artworkImage
T@"UIImage",C,N,V_artworkImage
lastModifiedDate
T@"NSDate",R,C,N,V_lastModifiedDate
<MPCPlaybackAccount:%p hashedDSID=%@ identity=%@ isActiveAccount=%@ isDelegated=%@ cloudLibraryEnabled=%@ privateListeningEnabled=%@ canAutoPlay=%@ storeFront=%@ subscriptionStatus=%@ bag=%@>
hashedDSID
T@"NSString",C,N,V_hashedDSID
hasCloudLibraryEnabled
TB,N,V_hasCloudLibraryEnabled
storeFrontIdentifier
T@"NSString",C,N,V_storeFrontIdentifier
activeAccount
TB,N,GisActiveAccount,V_activeAccount
TB,N,GisPrivateListeningEnabled,V_privateListeningEnabled
T@"ICURLBag",&,N,V_bag
T@"ICUserIdentity",R,N,V_userIdentity
subscriptionStatus
T@"ICMusicSubscriptionStatus",R,N,V_subscriptionStatus
TB,R,N,GisDelegated,V_delegated
canAutoPlay
hasCatalogPlaybackCapability
usesLease
q24@?0@"MPCPlaybackAccount"8@"MPCPlaybackAccount"16
v16@?0@"MPCPlaybackAccount"8
accounts
hasLoadedInitialAccounts
TB,R,N,V_hasLoadedInitialAccounts
T@"MPCPlaybackAccount",R,N
T@"MPCPlayerSessionResponse",R,W,N,V_response
request.playbackRequestEnvironment
MPCModelPlaybackContextRequest
MPCModelPlaybackContextPlaybackRequestEnvironment
MPCModelPlaybackContextStartItemIdentifiers
MPCModelPlaybackContextStartTimeModifications
MPCModelPlaybackContextEndTimeModifications
MPCModelPlaybackContextAssetStoreFronts
MPCModelPlaybackContextUserIdentity
MPCModelPlaybackContextFallbackSectionRepresentation
MPCModelPlaybackContextMediaLibraryUniqueID
semlUID
encodedMediaLibraryUniqueID
T@"NSString",R,C,N,V_encodedMediaLibraryUniqueID
skipEncodingMediaLibraryUniqueID
TB,N,V_skipEncodingMediaLibraryUniqueID
startTimeModifications
T@"NSDictionary",C,N,V_startTimeModifications
endTimeModifications
T@"NSDictionary",C,N,V_endTimeModifications
assetStoreFronts
T@"NSDictionary",C,N,V_assetStoreFronts
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
playActivityEvent
T@"ICPlayActivityEvent",C,N,V_playActivityEvent
shouldReportToStore
TB,N,V_shouldReportToStore
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
MPCPlaybackHistoryRecordChangeRequestOperation.m
Unsupported request type: %ld
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
T@"MPModelGenericObject",&,N,V_overridePlayingItem
T@"NSIndexPath",C,N,V_playingItemIndexPath
MPCNullPlaybackContextCodingKeyLabel
_MPCNullPlaybackContext.m
No identifier set lookups allowed for _MPCNullQueueFeeder.
No item lookups allowed for _MPCNullQueueFeeder.
T@"ICUserIdentity",R,N
assistantAnalyticsController
T@"MPAssistantAnalyticsReportingController",&,N,V_assistantAnalyticsController
rtcReportingController
T@"MPRTCReportingController",&,N,V_rtcReportingController
playbackHistoryController
T@"MPCPlaybackHistoryController",&,N,V_playbackHistoryController
lyricsReportingController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
B32@?0@"MPNowPlayingInfoLanguageOption"8Q16^B24
LANGUAGE_OPTIONS_AUDIO_SECTION_TITLE
MediaPlaybackCore
LANGUAGE_OPTIONS_SUBTITLE_SECTION_TITLE
LANGUAGE_OPTIONS_EMPTY_SELECTION_TITLE
LANGUAGE_OPTIONS_AUTO_SELECTION_TITLE
numberOfOptions
indexOfSelectedOption
T@"NSArray",R,N,V_options
selectedOption
T@"MPNowPlayingInfoLanguageOption",R,N
allowEmptySelection
TB,R,N,V_allowEmptySelection
mapping
T@"NSMutableDictionary",R,C,N,V_mapping
T@"<MPCQueueItemProviding>",R,N,V_queueController
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
mpcReporting_identityPropertiesLoader
T@"<MPCReportingIdentityPropertiesLoading>",R,N
mpcReporting_equivalencySourceAdamID
mpcReporting_isValidReportingItem
mpcReporting_jingleTimedMetadata
T@"NSData",R,C,N
mpcReporting_privateListeningEnabled
T@"NSNumber",R,C,N
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_siriInitiated
mpcReporting_trackInfo
mpcReporting_itemType
additionalData
getTracks
v16@?0@"ICStoreDialogResponseButtonAction"8
v32@?0@"MPUserNotification"8Q16@"NSDictionary"24
T@"ICUserIdentityProperties",R,C,N,V_delegatedIdentityProperties
T@"NSError",R,C,N,V_error
finished
TB,R,N,GisFinished,V_finished
T@"ICUserIdentityProperties",R,C,N,V_identityProperties
T@"ICPlayActivityController",R,C,N,V_playActivityController
playActitySessionToken
TQ,R,N,V_playActitySessionToken
T@"ICRadioGetTracksRequest",R,C,N,V_request
T@"ICRadioGetTracksResponse",R,C,N,V_response
siriAssetInfoGetTracksResponse
T@"ICRadioGetTracksResponse",R,N,V_siriAssetInfoGetTracksResponse
v24@?0@"ICUserVerificationContext"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksPrepareIdentityStep
Unable to get radio tracks [invalid user identity] - userIdentity=%@ - properties%@
v32@?0@"NSArray"8Q16@"NSError"24
v24@?0@"ICRadioGetTracksResponse"8@"NSError"16
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
AirMusic
<MPCPlaybackRequestEnvironment: %p> - %@
clientVersion
delegationProperties
[delegated account missing]
[promoting delegated account]
[base account missing]
[base account is delegated]
activeAccountRequestEnvironment
T@"MPCPlaybackRequestEnvironment",R,N
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
T@"MPCPlaybackDelegationProperties",R,C,N,V_delegationProperties
T@"MPCPlaybackDelegationProperties",C,D,N
T@"ICUserIdentity",&,D,N
EncodeSerialQueue
LOCAL_DEVICE
DecodeSerialQueue
AFSecurityConnection
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue
v16@?0@"ICMutableRadioPlaybackHistory"8
v32@?0@"ICRadioStationTrack"8@"NSIndexPath"16^B24
identityPropertySet
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N
numberOfItems
playbackHistory
T@"ICRadioPlaybackHistory",R,C,N
trackModels
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue.accessQueue.StationTracksSection
T@"ICMutableRadioPlaybackHistory",R,N
T@"MPSectionedCollection",R,C,N,V_trackModels
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N,V_identityPropertySet
MPCRadioPlaybackErrorCategoryKey
ADD_STATION_FAILED_ALBUM_ALERT_MESSAGE
ADD_STATION_FAILED_ARTIST_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_MESSAGE
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_%@
EXPLICIT_CONTENT_NOT_ALLOWED_TITLE
EXPLICIT_CONTENT_NOT_ALLOWED_SETTINGS_BUTTON_TITLE
prefs:root=SCREEN_TIME&path=CONTENT_PRIVACY
PLAYBACK_FAILURE_LOCATION_RESTRICTION_TITLE
ADD_STATION_FAILED_TEMPORARY_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_TITLE
requestDeviceCount
source
com.apple.MediaAssistant.siri
com.apple.mediaplaybackcore.assistant.pause
no UIDs provided
success
errorMessage
@"NSDictionary"8@?0
no origin for endpoint
v24@?0@"NSError"8@"NSArray"16
v16@?0@"MPCAssistantRemoteControlDestination"8
MPCAssistantPause
removedDeviceCount
pausedDeviceCount
removedEndpointCount
pausedEndpointCount
appleTVsAffected
homepodsAffected
forceRemoveDeviceCount
com.apple.MediaAssistant
com.apple.mediaplayer.assistant.MPCAssistantCommand.sendCommandQueue
resultCodes
com.apple.mediaplayer.assistant.command
v16@?0@"MPCAssistantSendCommandResult"8
actualDestination
local
actualDeviceCount
When processing %@ if we are the group leader, pause our now-playing app if we have one
requestedUIDs
outputGroupIDPresent
formGroup
remote
v16@?0^{__CFString=}8
v32@?0@"MPCAssistantRemoteControlDestination"8@"NSError"16@"NSArray"24
proxy promotion
group leader
errorString
errorCode
allowsStoreContainerImport
TB,N,V_allowsStoreContainerImport
playEvent
T@"MPModelPlayEvent",&,N,V_playEvent
Tq,N,V_type
shouldExpectEmptyQueue
shouldDeferItemLoading
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_playbackStackController
MPCItemBookmarker.m
Tear down existing timer before creating a new one
bookmarkingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_bookmarkingTimer
MPCModelRadioQueueFeederErrorDomain
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.loadingOperationQueue
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.diffQueue
v24@?0@"ICRadioPlaybackHistory"8@"NSError"16
MPCModelRadioQueueFeeder.m
Provided section identifier did not match stored section identifier: %@ != %@
LOADING_AUDIO_LABEL
RADIO_LABEL
app.music.queue-source.tilt
RadioStationID
v24@?0@"MPCModelRadioPersonalizationResponse"8@"NSError"16
v24@?0@"MPCModelRadioGetTracksResponse"8@"NSError"16
-sessions
playbackSessionArchive
playbackSessionIdentifier-v3
q24@?0@"_MPCPlaybackSessionArchive"8@"_MPCPlaybackSessionArchive"16
com.apple.MediaPlaybackCore._MPCPlaybackEngineSessionManager/serialQueue
Playback engine doesn't support state restoration
Archive is missing for identifier: %@
Failed to decode queue controller for identifier: %@
Failed to load session due to timeout.
v16@?0@?<v@?@"NSError">8
_MPCPlaybackEngineSessionManager.m
Session management only available with MPCQueueController
Can't save an archive before first unlock (cannot write to container data).
Can't save an archive without a now playing content item.
Opting not to save an archive with a placeholder content item.
v24@?0@"UIImage"8@"NSError"16
PlaybackSessions
serialQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
sessionArchives
T@"NSMutableArray",R,N,V_sessionArchives
sessionIdentifierArchiveMap
T@"NSMutableDictionary",R,N,V_sessionIdentifierArchiveMap
stagedQueueControllers
T@"NSMutableDictionary",R,N,V_stagedQueueControllers
stateRestorationSessionIdentifier
T@"NSString",&,N
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_artworkIdentifier
T@"MPCMediaRemoteController",R,W,N,V_controller
com.apple.radio.adamid
com.apple.radio.explicit
artworkURL_
width
height
v16@?0@"MPModelArtist"8
MPCModelGenericAVItemTimedMetadataRequest.m
MPCModelGenericAVItemTimedMetadataRequest: unexepected genericObject type: %ld
v16@?0@"MPSectionedCollection"8
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
metadataIdentifiers
T@"NSArray",R
T@"MPCModelGenericAVItemTimedMetadataResponse",&,N,V_previousResponse
T@"MPModelGenericObject",R,N,V_genericObject
storeRequestContext
T@"ICStoreRequestContext",R,C,N,V_storeRequestContext
timedMetadataGroups
T@"NSArray",R,C,N,V_timedMetadataGroups
PSP: Resetting hasPlayedSuccessfully: [reloadWithPlaybackContext] playerID=%{public}@
MPCPlaybackEngineImplementation: %p - reloadWithPlaybackContext completed with error %{public}@
MPCPlaybackEngineImplementation: %p - reloadWithPlaybackContext completed - Stack current item: %{public}@
MPCPlaybackEngineImplementation: %p - reloadWithPlaybackContext failed [no queue item] - error: %{public}@ - resolution: %ld
MPCPlaybackEngineImplementation: %p - calling setQueueWithInitialItem on playback stack - item: %{public}@
MPCPlaybackEngineImplementation: %p - loadSessionWithQueueController - Load session failed - error: %{public}@
MPCPlaybackEngineImplementation: %p - Set audio session active failed - error: %{public}@
MPCPlaybackEngineImplementation: %p - Set audio session active succeeded
MPCPlaybackEngineImplementation: %p - changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error: - delta:%ld - currentTime:%3.2fs
Skip backward [jumped to previous track] command %{public}@ completed - error=%{public}@
Skip backward [jumped to start of track] command %{public}@ completed - error=%{public}@
Skip forward [jumped to next track] command %{public}@ completed - error=%{public}@
Pause command %{public}@ completed - error=%{public}@
PSP: Resetting hasPlayedSuccessfully: [endPlayback] playerID=%{public}@
End playback command %{public}@ completed - error=%{public}@
Play command %{public}@ completed - error=%{public}@
MPCPlaybackEngineImplementation: %p - skipWithDirection:identifier:completion: - direction:%ld - currentTime:%3.2fs
Skip [jumped to %{public}@ track] command %{public}@ completed - error=%{public}@
Begin seek command %{public}@ completed - direction=%ld - error=%{public}@
End seek command %{public}@ completed - error=%{public}@
Set rate command %{public}@ completed - rate=%f - error=%{public}@
Set current time command %{public}@ completed - time=%f - error=%{public}@
MPCPlaybackEngine: -[AVAudioSession setCategory:%{public}@ mode:%{public}@]
ConfigureAudioSession
Playback paused [asset loading error] - item:%{public}@ - error:%{public}@
%{public}@ - itemDidBecomeCurrent - item=%{public}@ - timeStamp:%{public}@
%{public}@ - itemDidResignCurrent - item=%{public}@ - timeStamp:%{public}@
%{public}@ - playbackDidReachQueueEnd - timeStamp:%{public}@
%{public}@ - playbackTimeDidChangeTo - Live item [ignoring time change] - time:%.2fs - item=%{public}@ - timeStamp:%{public}@
%{public}@ - playbackTimeDidChangeTo - Regular item [processing time change] - time:%.2fs - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
%{public}@ - itemDidFailToLoad - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
%{public}@ - itemDidFailToPlayToEnd - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
%{public}@ - itemDidPlayToEnd - item=%{public}@ - timeStamp:%{public}@
%{public}@ - itemIsReadyToPlay - item=%{public}@ - timeStamp:%{public}@
%{public}@ - playbackDidStartForItem:rate: - item=%{public}@ - rate:%1.2f - timeStamp:%{public}@
PSP: Setting hasPlayedSuccessfully: [playbackDidStartForItem] playerID=%{public}@ item=%{public}@
%{public}@ - playbackDidStopForItem - item=%{public}@ - timeStamp:%{public}@
%{public}@ - playbackRateDidChangeToRate - item=%{public}@ - rate:%1.2f - timeStamp:%{public}@
%{public}@ - playbackWaitingToPlayFor - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
%{public}@ - routeDidChange - shouldPause=%{BOOL}u - route:%{public}@ - isAirplay=%{BOOL}u - timeStamp:%{public}@
%{public}@ - stateDidChange - [MFPlayerState: %{public}@] - [MPPlaybackState: %ld] - [MPNowPlayingPlaybackState: %ld] - timeStamp:%{public}@
%{public}@ - interruptionDidBeginWithInterruptor - interruptor=%{public}@ - timeStamp:%{public}@
%{public}@ - interruptionDidFinishForInterruptor:shouldResume: - interruptor=%{public}@ - shouldResume=%{BOOL}u - timeStamp:%{public}@
%{public}@ - playbackBufferStateDidChangeToState: - state=Full - item=%{public}@ - timeStamp:%{public}@
%{public}@ - playbackBufferStateDidChangeToState: - state=Empty - item=%{public}@ - timeStamp:%{public}@
%{public}@ - playbackIsLikelyToKeepUp: - Likely - item=%{public}@ - timeStamp:%{public}@
%{public}@ - playbackIsLikelyToKeepUp: - Unlikely - item=%{public}@ - timeStamp:%{public}@
 Enforcing policy due to screen recording. setMuted/setHidden: %{BOOL}u - timeStamp:%{public}@
%{public}@ - end of queue reached [%{public}@]
%{public}@ - Media Services were interrupted - timeStamp:%{public}@
%{public}@ - Media Services were restored - timeStamp:%{public}@
%{public}@ - Playback stuck on non-playable item: %{public}@
%{public}@ - firstVideoFrameWasRenderedForItem: - item=%{public}@ - timeStamp:%{public}@
INVALIDATE: %p: Invalidated before returning a response. Re-requesting items.
%{public}@: Starting asset load...
%{public}@: Missing DSID in delegated identity properties - skipping playback
%{public}@: Returning asset load early with error: %{public}@
%{public}@: Based on network type of %li and last known network type of %li, we are%{public}@ preferring high quality content.
%{public}@: Finished loading subscription lease properties.
%{public}@: Timed out loading subscription lease properties.
%{public}@: Using local file asset at path: %{public}@.
%{public}@: Timed out while attempting to load local file of specified quality [request aborted after %lds].
%{public}@: Using home sharing asset.
%{public}@: Timed out while attempting to load home sharing asset [request aborted after %lds].
%{public}@: Using existing Radio cached playback response: %{public}@
%{public}@: No cached Radio playback response found.
%{public}@: No local file of appropriate quality, using cloud streaming.
%{public}@: Subscription is required, and the user does not have subscription playback capability, setting error to subscription required.
%{public}@: Subscription is required, and we failed to load the subscription status.
%{public}@: Timed out while attempting to load subscription asset [request aborted after %lds].
%{public}@: Timed out while attempting to load media redownload asset [request aborted after %lds].
%{public}@: No valid endpoint type (%ld), skipping streaming redownload.
%{public}@: Timed out while attempting to load low quality local file [request aborted after %lds].
not enabling AVURLAssetOptimizeAccessForLinearMoviePlaybackKey because its disabled in settings
%{public}@: Radio station does not require a subscription, skipping subscription key check.
%{public}@: Protection type is %li, skipping subscription key check.
%{public}@: Not subscription content, skipping playback key check.
%{public}@: Lease session invalid, skipping key loading.
%{public}@: Reloading FairPlay key status to ensure the latest value is known...
%{public}@: Finished reload of FairPlay key status: %{public}@ with error: %{public}@
%{public}@: Finished reload of FairPlay key status: %{public}@
%{public}@: Timed out reloading FairPlay key status; using the last known status [request aborted after %lds].
%{public}@: Already have playback keys from lease status: %{public}@, no need to do another request.
%{public}@: Requesting playback keys because the asset requires online keys
%{public}@: Requesting playback keys because the lease status indicates none available: %{public}@
%{public}@: Finished subscription lease request for playback keys with error: %{public}@.
%{public}@: Timed out while attempting to acquire lease for playback keys [request aborted after %lds].
%{public}@: Using purchase bundle: %{public}@
%{public}@: Attempting to load full subscription asset [first asset requires online keys]
%{public}@: Asset download completed successfully.
%{public}@: Writing placeholder purchase bundle at path: %{public}@
%{public}@: Asset download completed with error: %{public}@
%{public}@: Loaded full subscription asset, updated purchaseBundle = %@
%{public}@: Ignoring full subscription asset purchase bundle [%{public}@] expected=%{public}@ loaded=%{public}@
%{public}@: Failed to load full subscription asset: %{public}@.
%{public}@: Writing purchase bundle at path: %{public}@
%{public}@: Not writing purchase bundle [asset no longer on disk] assetPath = %{public}@ purchaseBundlePath = %{public}@
%{public}@: Error caching file asset: %{public}@.
%{public}@: Finished caching file asset.
%{public}@: Removed incomplete download at URL: %{public}@
%{public}@: Failed to remove incomplete downloaded file at URL: %{public}@ error: %{public}@.
%{public}@: Setting gapless info: %{public}@
%{public}@: Starting Suze lease session...
%{public}@: Failed to create suze lease with error: %{public}@.
%{public}@: Timed out creating Suze lease session: %{public}@ [request aborted after %lds].
%{public}@: Asset load finished.
%{public}@: Player item has not connected to internet error, current network type is %li, cellular allowed is %{public}@ 
%{public}@: Transforming error to cellular restricted error instead of original: %{public}@
%{public}@: (Watch) Transforming error to cellular restricted error instead of original: %{public}@
%{public}@: Transforming error network unavailable instead of original: %{public}@
%{public}@: Preparing for rate: %f.
%{public}@: Finished preparing for rate: %f.
%{public}@: Getting subscription lease session for rate preparation.
%{public}@: Sending subscription lease request for rate preparation.
%{public}@: Finished subscription lease request for rate preparation with response: %{public}@ error: %{public}@
%{public}@: Finished subscription lease request for rate preparation with response: %{public}@
%{public}@ Using start time: %f
%{public}@ Using stop time: %f
%{public}@ Using bookmark start time: %f
BackgroundTask: End assertion (%lli) at %{public}s:%d
BackgroundTask: Took assertion (%lli) at %{public}s:%d
%{public}@ - Unable to report track information [serialization error] - track-info=%{public}@ - error=%{public}@
No lyrics available. Error: %{public}@, modelObject: %{public}@
Unable to provide lyrics for contentItemID %{public}@, modelObject: %{public}@
%{public}@ - Timeout values [Network likely reachable: %{BOOL}u]: Local file=%lds - subscription lease session=%lds - home sharing=%lds - cloud streaming=%lds - cloud redownload=%lds - fairplay status=%lds - fairplay lease=%lds - suze lease=%lds
%{public}@: Setting loudness info %{public}@ on player item %{public}@
%{public}@: Set preferredMaximumResolution=%{public}@ lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
%{public}@: Set preferredPeakBitRate=%f lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
%{public}@: Loading subscription status...
%{public}@: Finished loading subscription status: %{public}@
%{public}@: Skipping subscription lease load since the subscription status indicated it shouldn't be used
%{public}@: Finished loading subscription status: %{public}@ with error: %{public}@
%{public}@: Loading subscription lease session...
%{public}@: Finished loading subscription lease session: %{public}@
%{public}@: Failed to load subscription lease session with error: %{public}@
%{public}@: Lease playback prevention state did change to: %li
Timed out with partial discovery. Found endpoints: %{public}@
Timed out with no devices discovered
Failed to discover output devices error: %{public}@
Found %lu endpoints, %lu devices.
Audio session category failed: %{public}@ (AirPlay devices may be missed)
%{public}@: Failed to load delegated user identity properties. err: %{public}@
%{public}@: Failed to load user identity properties. err=%{public}@
Not reporting non store lyrics event for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Beginning report for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Reported <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f> with playActivityEvent: %p
Did not report <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
[MPCAssistantSetVolume] new volume for uid: %{public}@: %f
[MPCAssistantSetVolume] volume set failed with error: %{public}@
[MPCAssistantSetVolume] volume: %f endpoint %{public}@
[MPCAssistantSetVolume] set volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] increase volume: %f outputDeviceUID %{public}@
volume: %f error: %{public}@
volume: %f
[MPCAssistantSetVolume] decrease volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] completion %{public}@
|%{public}@ %{public}@
 SESSION                  %{public}@
|%{public}@ %{public}@
 SESSION                  %{public}@
|%{public}@ %{public}@
 SESSION RESTORE          %{public}@
|%{public}@ %{public}@
 SESSION RESTORE          %{public}@ [%.2fs]
|%{public}@ %{public}@
 APPLICATION TERMINATION
|%{public}@ %{public}@
 DEVICE CHANGED
|%{public}@ %{public}@
 name: %{public}@; model: %{public}@ 
|%{public}@ %{public}@
 application: %{public}@/%{public}@; bundleID: %{public}@ 
|%{public}@ %{public}@
 os: %{public}@ [%{public}@]/%{public}@ %{public}@ 
|%{public}@ %{public}@
 private-listening: %{BOOL}u 
|%{public}@ %{public}@
 NETWORK REACHABILITY CHANGED
|%{public}@ %{public}@
 reachability: %{public}@ 
|%{public}@ %{public}@
 NETWORK TYPE CHANGED
|%{public}@ %{public}@
 type: %{public}@; constrained: %{BOOL}u; high quality: %{BOOL}u 
|%{public}@ %{public}@
 COMMAND BEGIN             %{public}@ %{public}@   %{public}@
|%{public}@ %{public}@
 source: %{public}@ 
|%{public}@ %{public}@
 status: %{public}@ 
|%{public}@ %{public}@
 COMMAND END               %{public}@ %{public}@   %{public}@ [%.2fs]
|%{public}@ %{public}@
 QUEUE ADD                %{public}@
|%{public}@ %{public}@
 feature: %{public}@ 
|%{public}@ %{public}@
 account: %{public}@ 
|%{public}@ %{public}@
 requesting application: %{public}@ %{public}@ 
|%{public}@ %{public}@
 QUEUE ITEM ADD           %{public}@ %{public}@
|%{public}@ %{public}@
 QUEUE ITEM REMOVE        %{public}@ %{public}@
|%{public}@ %{public}@
 QUEUE ITEM REORDER       %{public}@ %{public}@
|%{public}@ %{public}@
 QUEUE LOAD BEGIN         %{public}@
|%{public}@ %{public}@
 QUEUE LOAD END           %{public}@ 
 %{public}@ [%gs]
|%{public}@ %{public}@
 QUEUE LOAD END           %{public}@ [%.2fs]
|%{public}@ %{public}@
 CONTAINER BEGIN
|%{public}@ %{public}@
 title: %{public}@ 
|%{public}@ %{public}@
 identifiers: %{public}@ 
|%{public}@ %{public}@
 playlistVersionHash: %{public}@ 
|%{public}@ %{public}@
 stationType: %{public}@; stationSubtype: %{public}@ 
|%{public}@ %{public}@
 private-listening-source: %{public}@ 
|%{public}@ %{public}@
 CONTAINER END
|%{public}@ %{public}@
 ITEM BEGIN           %{public}@ %{public}@
|%{public}@ %{public}@
 title: %{public}@ 
|%{public}@ %{public}@
 duration: %0.2f; initialPosition: %0.2f 
|%{public}@ %{public}@
 identifiers: %{public}@ 
|%{public}@ %{public}@
 private-listening-source: %{public}@ 
|%{public}@ %{public}@
 video: %{BOOL}u artistUploaded: %{BOOL}u 
|%{public}@ %{public}@
 ITEM JUMP            %{public}@ %{public}@ 
|%{public}@ %{public}@
 start: %0.2f  end: %0.2f 
|%{public}@ %{public}@
 userInitiated: %{BOOL}u 
|%{public}@ %{public}@
 ITEM PAUSE           %{public}@ %{public}@ 
|%{public}@ %{public}@
 end: %0.2f 
|%{public}@ %{public}@
 ITEM RESUME          %{public}@ %{public}@ 
|%{public}@ %{public}@
 start: %0.2f 
|%{public}@ %{public}@
 ITEM BUFFER READY    %{public}@ %{public}@ %0.2f
|%{public}@ %{public}@
 ITEM BUFFER STALL    %{public}@ %{public}@ %0.2f
|%{public}@ %{public}@
 ITEM BUFFER FINISH   %{public}@ %{public}@
|%{public}@ %{public}@
 ITEM SECKEY BEGIN    %{public}@ %{public}@
|%{public}@ %{public}@
 ITEM SECKEY END      %{public}@ %{public}@ [%.2fs]
|%{public}@ %{public}@
 ITEM METADATA PING   %{public}@ %{public}@
|%{public}@ %{public}@
 end: %0.2f; didPlayToEnd: %{BOOL}u 
|%{public}@ %{public}@
 ITEM END             %{public}@ %{public}@
|%{public}@ %{public}@
 ITEM ASSET BEGIN     %{public}@ %{public}@
|%{public}@ %{public}@
error: %{public}@
|%{public}@ %{public}@
 ITEM ASSET END       %{public}@ %{public}@ [%.2fs]
|%{public}@ %{public}@
 ITEM FAILED          %{public}@ %{public}@
|%{public}@ %{public}@
 error: %{public}@ 
|%{public}@ %{public}@
 PLACEHOLDER BEGIN        %{public}@ %{public}@
|%{public}@ %{public}@
 PLACEHOLDER END          %{public}@ %{public}@
|%{public}@ %{public}@
 HLS BEGIN            %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@
 hasIndeterminateDuration: %{BOOL}u 
|%{public}@ %{public}@
 HLS END              %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@
 TIMED METADATA BEGIN %{public}@
|%{public}@ %{public}@
 TIMED METADATA END   %{public}@
|%{public}@ %{public}@
 INTERRUPT BEGIN          %{public}@
|%{public}@ %{public}@
 INTERRUPT END            %{public}@ resume=%{BOOL}u
|%{public}@ %{public}@
 POLICY BEGIN
|%{public}@ %{public}@
 POLICY END
|%{public}@ %{public}@
 BEHAVIOR CHANGED         %{public}@
|%{public}@ %{public}@
 shuffle: %{public}@; repeat: %{public}@; autoplay: %{public}@ 
|%{public}@ %{public}@
 ACCOUNT BEGIN            %{public}@
|%{public}@ %{public}@
 ACCOUNT UPDATE           %{public}@
|%{public}@ %{public}@
 store-id: %{private}llu storefront: %{public}@ delegated: %{BOOL}u 
|%{public}@ %{public}@
 household-id: %{public}@ 
|%{public}@ %{public}@
 subscription: %{public}@ 
[PIA] %p using UUID [section object has no preferred storeID] uuid=%{public}@ section=%{public}@
[PIA] %p using UUID [item object has no preferred storeID] uuid=%{public}@ item=%{public}@
[PIA] %p using UUID [section object is not a section type] uuid=%{public}@ section=%{public}@
MPMusicPlayerControllerServer: startServer: systemMusicApplication=%{BOOL}u
MPMusicPlayerControllerServer: stopServer
getNowPlaying
getNowPlayingAtIndex
setNowPlayingItem
getTimeSnapshot
play
pauseWithFadeDuration
skipWithBehavior
reshuffle
beginSeekWithDirection
endSeek
setRepeatMode
getRepeatMode
setShuffleMode
getShuffleMode
setElapsedTime
setPlaybackRate
getUserQueueModificationsDisabled
setUserQueueModificationsDisabled
MPMusicPlayerControllerServer: connection invalidated: pid=%u
MPMusicPlayerControllerServer: acceptNewConnection: delaying connection [%ds] %{public}@
MPMusicPlayerControllerServer: acceptNewConnection: %{public}@
[Publisher] getShouldRestoreState: %{BOOL}u pendingCommands=%{public}@
Invalidating playback queue because %{public}@
[Publisher] Updating active account storefront: %{public}@
[Publisher] Updating active account subscription capabilities: %{BOOL}u
Lyrics begin event: %{public}@, Lyrics ID = %{public}@, Info = %{public}@
Lyrics end event: %{public}@ - %{public}@, ID = %{public}@, Info = %{public}@
Lyrics end event: invalid duration for reporting. Duration = %{public}g
Lyrics end event: no song found for contentItemID %{public}@
Lyrics end event: missing lyrics identifier. Token = %{public}@
AudioSessionActivation
_MPCMediaRemotePublisher: Failed to bless application
success=%{BOOL}u
publisher:bless
_MPCMediaRemotePublisher: Activated audio session [become active]
_MPCMediaRemotePublisher: Audio session was not activated error=%{public}@
Attempting reload with fallback playback context
Failed to generate fallback playback context: %{public}@ %{public}@
Failed to load fallback playback context: %{public}@ %{public}@
[Publisher] _exportableSessionTypes empty [queueController is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is tv-episode/movie]
[Publisher] _exportableSessionTypes empty [queueController: %p does not contain transportable content]
[Publisher] _updateSupportedCommands sessionIdentifier=%{public}@ currentItem=%{public}@
[Publisher] _updateSupportedCommands canSeek=%{BOOL}u canSkip=%{BOOL}u prefersSeekOverSkip=%{BOOL}u
[Publisher] _updateSupportedCommands allowsQueueModifications=%{BOOL}u supportsCreateRadioStation=%{BOOL}u (activeAccountAllowsSubscriptionPlayback=%{BOOL}u, currentItemPlaceholder=%{BOOL}u)
[Publisher] _updateSupportedCommands canRepeatShuffle=%{BOOL}u shuffleType=%ld repeatType=%ld queueEndAction=%ld supportedActions=[%{public}@]
[Publisher] _updateSupportedCommands allowsQueueModifications=%{BOOL}u supportedPositions=[%{public}@]
[Publisher] _updateSupportedCommands disableQHO=%{BOOL}u supportedSessionTypes=%{public}@ exportableSessionTypes=%{public}@
UpdateSupportedCommands
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: received MRMediaRemoteCommand type=%{public}@ id=%{public}@ interface=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=MPRemoteCommandHandlerStatusSuccess
Cannot skip current item: %{public}@
SeekToPlaybackPosition failed. Could not jump to the specified time. (error = %{public}@)
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
Insert playback context failed. error: %{public}@
Insert playback context failed. Specific insertion position, but no content item ID provided.
MPRemoteCommandHandlerStatus = %ld
%{public}@: status = MPRemoteCommandHandlerStatusSuccess
[Skipping PrepareForSetQueue] No playback account found for user identity: %@
Cannot override manually curated queue.
Play queue verification failed with error: %{public}@
Create playback context failed with error: %{public}@
[Publisher] performCommandEvent: account rectification [%{public}@] context: %{public}@
Reload with playback context failed with error: %{public}@
 SetPlaybackQueue (keeping up next with no current item) recovered
Radio station getPlaybackContext failed with error: %{public}@
Add to playback context failed: %ld
MPCMediaRemotePublisher: failed to decode queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: no current item after set playback session: %{public}@
MPCMediaRemotePublisher: unexpected current item after set playback session: %{public}@ expectedContentItemID=%{public}@ currentContentItemID=%{public}@
Unsupported sessionType [SetPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: failed to decode queue controller from preload playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from preload playback session: %{public}@ error: %{public}@
Unsupported sessionType [PreloadPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: no current item after commit playback session: %{public}@
SkipForward failed. Could not skip to the specified time. (error = %{public}@)
SkipBackward failed. Could not skip to the specified time. (error = %{public}@)
Unsupported command: %{public}@ id=%{public}@
%{public}@: Skipping local asset [invalid purchase bundle] purchaseBundlePath=%{public}@
%{public}@: Skipping purchase bundle [data at path has length zero] purchaseBundlePath=%{public}@
Error serializing state capture: %{public}@
%{public}@: File asset missing file path, finishing.
%{public}@: Writing path %{public}@ for media item: %{public}@
MPPlaybackArchive containsAppleMusicRadioContent failed [decode failure] archive=%{public}@ error=%{public}@
MPCPlaybackHistoryController %p - Ignoring track change [missing previous and current track]
MPCPlaybackHistoryController %p - Processing track change [transitioning from a track to none] - previous:%{public}@
MPCPlaybackHistoryController %p - Processing track change [transitioning from one track to the next] - previous:%{public}@ - next:%{public}@
MPCPlaybackHistoryController %p - Committing previous track to history - previous:%{public}@
item=%{public}@
LoadAsset
Device supports streaming
Network connection is available
No network connection available
watchOS: Will send request to companion
watchOS: Will ask for companion
Device does not support streaming
watchOS: Will direct playback to the companion
Using cached availability: %{BOOL}u
Radio availability: %{public}@
Error fetching radio availability: %{public}@
Using fetched availability: %{BOOL}u
Network type: %ld
Wifi: %{BOOL}u Wired: %{BOOL}u Cellular: %{BOOL}u Allowed: %{BOOL}u
Network streaming available: %{BOOL}u
PlayerChangeRequest
Unable to convert timebase to host time - timebase=%{public}@ - hostTimeFromTimeBase=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Starting error resolution - item:%{public}@ - error:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [airPlayVideoEnded] - Actual resolution:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [rental requires download] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable AirPlay failure [streaming not supported on device] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable failure [general error] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Attempting to recover from error [using item resolution] - item:%{public}@ - error:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Item error resolution failed [proposed resolution: %{public}@]- item:%{public}@ - error: %{public}@ - resolutionError:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Item error resolution succeeded [proposed resolution: %{public}@] - item:%{public}@ - error:%{public}@ - resolutionError:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Unable resolve error [determining final resolution] - item:%{public}@ - error:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Final error resolution reached [%{public}@] - item:%{public}@ - error:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - handlePlaybackErrorForItem:error: nil item received [Queue failure] error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - handlePlaybackErrorForItem:error: Notifying delegate [Failed to queue any items] error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - handlePlaybackErrorForItem:error: Notifying delegate [Queue item failure - nil item] error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - handlePlaybackErrorForItem:error: Ending playback [Entire queue failure]
MPCErrorControllerImplementation %p <%{public}@> - handlePlaybackErrorForItem:error: playback has not yet succeeded [Adding to queue failure set]
MPCErrorControllerImplementation %p <%{public}@> - handlePlaybackErrorForItem:error: playback has succeeded for at least one item [Ignoring queue failure set]
MPCErrorControllerImplementation %p <%{public}@> - handlePlaybackErrorForItem:error: Notifying delegate and ending playback [Specified first item failure] error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - handlePlaybackErrorForItem:error: Notifying delegate [Queue item failure] error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - handlePlaybackErrorForItem:error: Stopping playback for a first item or unrecoverable error. error=%{public}@
%{public}@: Using subscription playback endpoint with operation type: %li
%{public}@: Has subscription lease session, using it.
%{public}@: Skipping assets in the server object database [delegated lease]
%{public}@: Skipping assets in the server object database [no online lease]
%{public}@: Using assets in the server object database
%{public}@: Skipping assets in the server object database [no assets found]
%{public}@: Skipping assets in the server object database [skipped due to asset load policy]
%{public}@: Using existing cached playback response: %{public}@
%{public}@: Performing subscription playback request...
%{public}@: Finished subscription playback request with response: %{public}@, error: %{public}@
%{public}@: Skipping subscription asset request [offline]
%{public}@: Failed loading subscription asset due to missing lease session.
%{public}@: Performing subscription accountless playback request...
%{public}@: Finished subscription accountless playback request with response: %{public}@, error: %{public}@
%{public}@: Skipping accountless playback request [offline]
%{public}@ setting override start time: %{public}@ for item: %{public}@
%{public}@ setting override stop time: %{public}@ for item: %{public}@
MQF %p - Supplemental playback context created: %{public}@ - reason: %ld
%{public}@: Siri asset info: %@
MQF - loadPlaybackContext - Mismatch between request and context's user identities [self correcting] - request PRE=%{public}@ - context PRE=%{public}@
%{public}@ Failed to load identity properties. error: %{public}@
%{public}@ itemForItem:inSection: returning nil [no index for item in registry] item=%{public}@
[BackgroundTasks] %{public}@ Expired.
[BackgroundTasks] %{public}@ Background Task Failed to Start.
[BackgroundTasks] %{public}@ Start [%lu]
[BackgroundTasks] %{public}@ End [%lu]
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source loading or frozen] - _frozen=%{BOOL}u _state=%{public}ld
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [error] error=%{public}@
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [success]
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source can't load more]
dataSourceState %p: reloadSection:completion: loading playback context [dataSource %p] playbackContext=%{public}@ 
dataSourceState %p: reloadSection:completion: load playback context failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section succeeded [dataSource %p]
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier] - event:%{public}@ - cursor:%{public}@
[MPCPlayActivityFeedEventConsumer] Failed to fetch the bag.
[MPCPlayActivityFeedEventConsumer] Failed to flush play activity events.
[MPCPlayActivityFeedEventConsumer] Failed to record play activity events.
Reporting event not recorded due to it being invalid: %{public}@
[MPCReportingController] Recording reporting events: %{public}@
Deallocating future that wasn't finalized or invalidated: %{public}@
MPCPlayerItemConfigurator %p - Configuring player item %{public}@ 
MPCPlayerItemConfigurator %p - Setting EQ to %ld
MPCPlayerItemConfigurator %p - Setting up EQ for %{public}@
MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding wantsExternalPlayback to NO] - Picked route does not support external display - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
MPCExternalPlaybackControllerImplementation %p - External playback configuration [diagnosis]- pickedRouteSubtype: %{public}ld, itemAllowsExternalPlayback: %{BOOL}u, hasAirPlayCloudRoute: %{BOOL}u, itemAllowsAirPlayFromCloud: %{BOOL}u, externalScreenType: %{public}ld, itemType: %{public}ld, itemPlaybackMode: %{public}ld, itemHasProtectedContent: %{BOOL}u
MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating player] - usesExternalPlaybackWhileExternalScreenIsActive:%{BOOL}u, usesAudioOnlyMode:%{BOOL}u, wantsExternalPlayback:%{BOOL}u
MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating item] - queueItem:%{public}@ - externalDisplay:%{BOOL}u
Dispatching %{public}@ command to destination: %{public}@
Sent %{public}@ to %{public}@ informational: %{public}@
Sent %{public}@ to %{public}@ error: %{public}@
Sent %{public}@ to %{public}@
Command %{public}@ to destination: %{public}@
Command %{public}@ all %lu endpoints: %{public}@
To endpoint: %{public}@
Cannot send command: no output devices specified in destination: %{public}@
Cannot decode active identity
Searching for output devices matching UIDs: %{public}@
The remote group leader went silent. Logs on the external device should be checked.
Got error when grouping devices: %{public}@
Send to external destination: No devices found.
Send to external destination: Not remote controllable.
No remote controllable device found among devices: %{public}@
Sending pause to future group leader at: %{public}@
Sent %{public}@ to %{public}@: %{public}@
Send to external destination: No matching account.
Sending command: %{public}@ endpoint %{public}@...
Sending command to remote origin %@...
Successfully sent command to external device. Statuses = %@
Failed to send command to external device. err = %ld
queueController %p: containsTransportableContent: NO [no items]
queueController %p: containsTransportableContent: NO [items greater than maximum queue size] itemCount=%ld maximumSize=%ld
MPCQueueController %p - initWithCoder: setting autoPlayIsTriggered = YES [decoded non-nil autoPlayIdentifierList]
MPCQueueController %p - initWithCoder: skipping unknown nextContentItemID - nextContentItemID=%{public}@
MPCQueueController %p - initWithCoder: skipping unknown deferredNextContentItemAnchorID - deferredNextContentItemAnchorID=%{public}@
queueController %p: evaluating autoPlayIsTriggered [loading artwork for autoPlayPlaceholder] triggered=YES
MPCQueueController %p - finalizeStateRestorationWithAccountManager: processing data source %{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: skipping unknown section - section=%{public}@
section=%{public}@
QC-FinalizeDataSource
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@
QC-FinalizeDataSource-Rectify
QC-FinalizeDataSource-Replace
MPCQueueController %p - finalizeStateRestorationWithAccountManager: replacing SIL data source failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@ - originalPlaybackContext
reasons=%{public}@
QC-FinalizeDataSource-Original-Rectify
QC-FinalizeDataSource-Add
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed (autoplay) - dataSource=%{public}@ section=%{public}@
queueController %p: jumpToContentItemID:userInitiated: setting nextContentItemID [jumpToContentItemID] nextContentItemID=%{public}@ - userInitiated=%{BOOL}u
queueController %p: jumpToContentItemID:userInitiated: reloading items [jump to item]
queueController %p: jumpToContentItemID:userInitiated: failed [content item not in SIL] contentItemID=%{public}@
queueController %p: jumpToFirstContentItem: setting nextContentItemID [jumpToFirstContentItem] nextContentItemID=%{public}@
queueController %p: jumpToFirstContentItem: reloading items [jump to item]
queueController %p: setQueueCoordinator: reloading items [queue coordinator changed]
queueController %p: setRepeatType: reloading items [setRepeatType]
queueController %p: reset
queueController %p: reset: setting SIL shuffle type [reset] shuffleType=%{public}@
queueController %p: _addPlaybackContext: state change [state: loading]
queueController %p: reshuffle: setting SIL shuffle type [reshuffle] shuffleType=MPShuffleTypeSongs
queueController %p: setShuffleType: setting SIL shuffle type [setShuffleType] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: autoplay waiting for trigger [new supported content]
queueController %p: reloadWithPlaybackContext: completed [first data source] - error=%{public}@
queueController %p: reloadWithPlaybackContext: reloading items [first data source]
queueController %p: itemToFollowItem: previousContentItemID=%{public}@
queueController %p: itemToFollowItem: enumerating [deferredNextContentItem] anchorID=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading]
queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading - shuffled] loadingSectionIdentifier=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem - no new items]
queueController %p: itemToFollowItem: returning nil [invalid nextContentItemID] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ [invalid nextContentItemID] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID]
queueController %p: itemToFollowItem: returning nil [previous item is placeholder]
queueController %p: itemToFollowItem: returning nil [repeat one item no longer exists] previousContentItemID=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ [repeat one item no longer exists] previousContentItemID=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ [repeat one]
queueController %p: itemToFollowItem: enumerating [next item search]
queueController %p: itemToFollowItem: enumeration starting at beginning
queueController %p: itemToFollowItem: enumeration starting at %{public}@ 
 %{public}@
queueController %p: itemToFollowItem: returning %{public}@ [enumerated next item]
queueController %p: itemToFollowItem: enumeration encountered tail of section %{public}@
queueController %p: itemToFollowItem: load items if needed [enumerated to tail] section=%{public}@
queueController %p: itemToFollowItem: reloading items [loading finished, same placeholder] section=%{public}@ keepCurrentItem=%{BOOL}u
queueController %p: itemToFollowItem: returning %{public}@ placeholder [started loading]
queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading]
queueController %p: itemToFollowItem: unexpected state found state=%ld section=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading - shuffled] loadingSectionIdentifier=%{public}@
queueController %p: engine:didChangeToState: updating saved time [changed to state %{public}@] currentItem=%{public}@ lastSavedTime=%f
queueController %p: engine:didChangeItemElapsedTime:rate: updating saved time [engine time changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: autoplay waiting for trigger [finished waitingForItems]
queueController %p: autoplay unsupported [no queue references]
queueController %p: autoplay disabled [finished waitingForItems]
queueController %p: dataSourceDidAddItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems:inSection: ignoring SIL change [dataSourceState: loading]
queueController %p: dataSourceDidChangeItems:inSection setting nextContentItemID [current item no longer exists] nextContentItemID=%{public}@
queueController %p: dataSourceDidChangeItems:inSection: reloading items [SIL changed] keepCurrentItem=%{BOOL}u
queueController %p: didDequeueShuffledItemsInSectionedIdentifierList: ignoring SIL change [state: loading]
queueController %p: _addPlaybackContext: freezing section [play later] section=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: disabling auto play [data source unsupported]
queueController %p: _addPlaybackContext: setting shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [no current item] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: state change [state: ready]
queueController %p: _addPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: state change [state: ready]
queueController %p: _addAutoPlayPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addAutoPlayPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addAutoPlayPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addAutoPlayPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: previousItem=%{public}@ currentItem=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: updating saved time [item changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: _currentItemDidChangeFrom:toItem: clearing deferred next content item anchor [item changed]
queueController %p: evaluating autoPlayIsTriggered [currentItem is autoPlayPlaceholder] triggered=YES
queueController %p: _currentItemDidChangeFrom:toItem: setting deferred next content item anchor [item changed to placeholder] section=%{public}@ deferredNextContentItemAnchorID=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [current item placeholder] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished loading] keepCurrentItem=%{BOOL}u
queueController %p: evaluating autoPlayIsTriggered currentIndex/totalItemCount=%ld/%ld threshold=%ld triggered=%{BOOL}u
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [preloading] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
MPCQueueController %p - _itemForContentItemID:allowReuse: - Item found does not match contentItemID - item.contentItemID=%{public}@ - contentItemID=%{public}@
queueController %p: Unexpected state transition from: %{public}@ to: %{public}@
queueController %p: _transitionToAutoPlayState from=%{public}@ to=%{public}@
queueController %p: failed to enable AutoPlay error: %{public}@
queueController %p: _transitionToAutoPlayState: reloading items [failed to load AutoPlay]
queueController %p: AutoPlay disabled in bag
queueController %p: autoplay loading [triggered]
Setting %{public}@ EQ to %d
Setting up EQ for %{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: nil item received [Queue failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Failed to queue any items] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Queue item failure - nil item] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Ending playback [Entire queue failure]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: playback has not yet succeeded [Adding to queue failure set]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: playback has succeeded for at least one item [Ignoring queue failure set]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate and ending playback [Specified first item failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Queue item failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Stopping playback for a first item or unrecoverable error. error=%{public}@
_MPCAVController %p - playbackHasStartedForItem: [marking play as successful] item=%{public}@
PSP: Setting hasPlayedSuccessfully: [playbackHasStartedForItem] playerID=%{public}@ item=%{public}@
MPCPlaybackEngine: Unable to set audio session category to %{public}@: %{public}@. Retrying in 1s.
Setting simulator volume to %f
AVController: queue boundary, restarting queue [%{public}@]
MPCPrivateListeningStateSource %p - Setting override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Removing override
MPCPrivateListeningStateSource %p - Value from override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from defaults - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from init - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from user identity %{public}@ - value=%{BOOL}u
%{public}@ Failed to load private listenting value from account. err=%{public}@
Modify context: fast error: %{public}@
Modify context: fast
Modify context: slow error: %{public}@
Modify context: slow
Discover devices of group: %{public}@
Discover devices: %{public}@
Discover logical devices: %{public}@
Using local endpoint.
Local endpoint: %{public}@
Breakaway from endpoint: %{public}@
Discovered primary endpoint: %{public}@
Takeover legacy endpoint: %{public}@
No discovered endpoint, use local
Failed to set output devices on primary endpoint: %{public}@
[MPCReportingPlaybackObserver] DidReloadWithPlaybackContextNotification _isReloadingWithPlaybackContext (was=%{BOOL}u, is=%{BOOL}u), _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemWillChangeNotification Item will change from: %p to: %p, _hasPendingContainerChange=%{BOOL}u, _isReloadingWithPlaybackContext=%{BOOL}u, playbackState=%d, updatedPlaybackState=%d, willIgnoreItemChangeNotification=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemWillChangeNotification did not find valid end reason to post event
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification _isReloadingWithPlaybackContext=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u - returning
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification oldPlaybackState == playbackState (%d) - returning
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification currentItem: %p, _hasPendingContainerChange=%{BOOL}u, _isReloadingWithPlaybackContext=%{BOOL}u, oldPlaybackState=%d, playbackState=%d
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification playbackState=%d
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification _isReloadingWithPlaybackContext (was=%{BOOL}u, is=%{BOOL}u), _hasPendingContainerChange=%{BOOL}u, shouldPostPlayEndEvent=%{BOOL}u
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification ignoring notification - playback state=%d, _isReloadingWithPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemDidChangeWhenReloadingPlaybackContextNotification _isReloadingWithPlaybackContext=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
<MPCAudioSpectrumAnalyzer: %p> Skipping audio tap installation for: %{public}@
<MPCAudioSpectrumAnalyzer: %p> Attached audio tap to: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is allowed for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is not allowed and failing silently in accordance with business rules for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been granted by client for: %{public}@
MRC: Resolving player path %@
MRC: Resolved player path %@ (resolved = %@)
SendCommand:groupDevicesAndSendCommand
SendCommand:sendCommandToPlayer
MRC %{public}@: Undo optimistic state [timeout] command=%{public}@
MRC %{public}@: Undo optimistic state [failed] command=%{public}@ error=%{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info present, starting URL bag load...
[MPCModelStorePlaybackItemsRequest] Failed to load URL bag for Siri asset info due to error: %{public}@
[MPCModelStorePlaybackItemsRequest] Successfully loaded URL bag for Siri asset info, loading identity properties...
[MPCModelStorePlaybackItemsRequest] Failed to load identity properties for Siri asset info.
[MPCModelStorePlaybackItemsRequest] Finished loading identity properties for Siri asset info.
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to be dictionary, was another type: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to have results dictionary, found %{public}@ instead.
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary key, but no objects inside.
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary with invalid key or value format.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no metadata.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu metadata entities.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info resulting in preferred shuffled starting subscription adam ID %llu
No device for %{public}@
Successfully connected to external device.
No origin for %{public}@
Connection failed %{public}@: %{public}@
EVS: databasePath: %{public}@
EVS: Unable to create events database at path: %{public}@. error:%{public}@
EVS: Unable to create events table. error:%{public}@
EVS: addConsumer consumer=%{public}@:%p
EVS: removeConsumer %{public}@:%p
EVS: eventDeliveryDeferralAssertionForReason reason=%{public}@
EVS: emitEventType time=%{time_t}zd continuousTime=%ldns id=%{public}@: type=%{public}@
EVS: emitEventType id=%{public}@ payload=%{public}@
EVS: emitEventType failed [json bind failure] eventType=%{public}@ error: %{public}@
EVS: emitEventType failed [insert statement failed] eventType=%{public}@ error: %{public}@
EVS: emitEventType fault [subscriber ahead of event] eventType=%{public}@ consumer=%{public}@
EVS: _invalidateAssertion reason=%{public}@
EVS: cancelSubscription consumer=%{public}@:%p
EVS: flushEvents consumer=%{public}@:%p
EVS: subscribeToEventType consumer=%{public}@:%p options=%llu eventType=%{public}@
EVS: _onQueue_flush query lastEventSuccessTimestamp=%llu consumer=%{public}@
EVS: _onQueue_flush: event time jumped a large amount: %lluns consumer=%{public}@
EVS: _onQueue_flush updating lastEventSuccessTimestamp=%llu consumer=%{public}@
EVC: step error: %{public}@
EVC: statement error %{public}@ : %{public}@
EVC: json decode error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Unable to retrieve the request user identity - requestUserIdentity:%@ - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Request doesn't contain any storeIDs nor sectionedModelObjects, completing with an empty response.
MPCModelStorePlaybackItemsRequestOperation %p  - Using legacy PlaybackItemsAccumulator
MPCModelStorePlaybackItemsRequestOperation %p completing without using store metadata controller [no remaining IDs to request]
MPCModelStorePlaybackItemsRequestOperation %p - Falling back to existing previous response from errors: %{public}@, current item count: %li, previous item count: %li
MPCModelStorePlaybackItemsRequestOperation %p - Validation succeeded [no identity on request - using local active account]
MPCModelStorePlaybackItemsRequestOperation %p  - Starting identity validation - playbackRequestEnvironment=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation failed [Request user identity has no DSID] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [Error retrieving local user identities for validation] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [local account]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [delegated account]
MPCModelStorePlaybackItemsRequestOperation %p Failed to get subscription status for identity: %{public}@ error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - user is a subscriber, assuming valid
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found, and user not a subscriber]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found]
%{public}@: Using existing subscription cached playback response despite redownload request: %{public}@
%{public}@: Skipping redownload asset request [offline]
%{public}@: Performing media redownload request...
%{public}@: Finished media redownload request with response: %{public}@, error: %{public}@
%{public}@: Missing redownload parameters.
%{public}@: Missing store request context.
RQF %p [GTO %p]: _runStep: [performWithCompletionHandler] step=%{public}@
RQF %p [GTO %p]: _runStep: [completed] step=%{public}@ nextStep=%{public}@ nextStepIsFinished=%{BOOL}u
[RemotePlaybackQueue] using originalPlaybackContext
[RemotePlaybackQueue] originalPlaybackContext is not supported, using supplementalPlaybackContext
[RemotePlaybackQueue] Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
[RemotePlaybackQueue] originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
[RemotePlaybackQueue] Could not set playback queue. Media query is nil for queue %{public}@
[RemotePlaybackQueue] Could not set playback queue. Missing both station string ID and station ID queue %{public}@
[RemotePlaybackQueue] Attempting to prepare Genius Playlist for store item %{public}@
[RemotePlaybackQueue] Could not set PlaybackContext for GeniusPlaybackQueue. %{public}@. <%{public}@>
_MPCProtoDelegateInfo %p - Retrieving dsid from base identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Received account info for potential delegation - UUID=%{private}@ - DSID=%{private}lld
_MPCProtoDelegateInfo %p - Getting delegated playback request environment failed [no valid delegation info]
_MPCProtoDelegateInfo %p - Retrieving supported user identities failed - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [property insertion failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - different from base] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - idential to base] - error=%{public}@
_MPCProtoDelegateInfo %p - Attempting delegated playback [no local identity found] - error=%{public}@
_MPCProtoDelegateInfo %p - Device does not support delegation - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [uuid addition failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Delegation supported - properties=%{public}@
[FPPC] engine:didChangeAccounts: removing account=%{public}@
[FPPC] _optimisticallyFetchLeaseForAccount: skipping [account doesn't use lease] account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount
account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount:getHasPreparedLease
error=%{public}@
fppc:_optimisticallyFetchLeaseForAccount:prepareLease
fetched lease
already had lease
fppc:fetchMiniSINFs
accountID=%{public}@ flavors=%d assets=%d hasMoreAssets=%{BOOL}u
fppc:fetchMiniSINFs:account:enumerateAsset
accountID=%{public}@
fppc:fetchMiniSINFs:account
fppc:fetchMiniSINFs:account:request
[FPPC] _fetchMiniSINFs: failed [network failure] error=%{public}@
[FPPC] _fetchMiniSINFs: failed [import failure] error=%{public}@
accountID=%{public}@ error=%{public}@
[FPPC] _fetchMiniSINFs: finished importing sinfs for %d identifiers
fppc:fetchMiniSINFs:account:import
hasMoreAssets=%{BOOL}u
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account doesn't use lease]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account already loading]
fppc:prewarmMiniSINF
fppc:prewarmMiniSINF:bag
account=%{public}@ error=%{public}@
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [account removed while loading]
account=%{public}@ [removed]
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [missing endpointURL or batch size] endpointURL=%{public}@ batchSize=%lld
account=%{public}@ [failed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmSAPSigningForAccount: ignoring account=%{public}@ [already prewarmed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [already prewarming]
fppc:prewarmSAP
fppc:prewarmSAP:bag
fppc:prewarmSAP:buildURL
fppc:prewarmSAP:signData
watchOS: companion connection status = %s
watchOS: audio routing info = {
    hasPickedVirtualAudioRoute = %{BOOL}u
    hasAvailableW1Route = %{BOOL}u
    speakerRouteEnabled = %{BOOL}u
watchOS: Using local origin
watchOS: Companion origin not connected. Returning no origin.
watchOS: Attempting to fetch companion origin for dispatch
watchOS: Found companion origin: %{public}@
watchOS: Companion origin not found. Returning no origin.
PSP: Requested playback state preservation for player: %{public}@
StateRestore-MRCheck
shouldRestore=%{BOOL}u
didRestore=%{BOOL}u
StateRestore
PSP: Finished playback state preservation for player: %{public}@ didRestore=%{BOOL}u error: %{public}@
PSP: Finished playback state preservation for player: %{public}@ didRestore=%{BOOL}u
PSP: Skipping playback state preservation for player: %{public}@ [MediaRemote commands pending]
StateRestore-Load
PSP: Beginning playback state preservation for player: %{public}@
PSP: Skipping attempt to restore due to too many failed attempts: %{public}@ identifier=%{public}@
didRestore=NO
-[MPCPlayerEngine setPictureInPictureSupported:] has no effect on non-iOS platforms.
Starting playback preheating...
PSP: Scheduling playback state preservation for player: %{public}@
PSP: Skipping playback state preservation for player: %{public}@ [not supported by client]
PSP: Skipping playback state preservation for player: %{public}@ [playback has not begun]
PSP: Saved playback state preservation for player: %{public}@
PSP: Unable to playback state preserve for player: %{public}@ [ignoring] error: %{public}@
PSP: Archiving playback state for player: %{public}@ failed with error: %{public}@
PlaybackEngine %p: _screenBrightnessDidChangeNotification: brightness=%f
PSP: _detectCrashLoopForSessionIdentifier: identifier=%{public}@ attempt=%ld
Using new playback engine
Using legacy playback engine
PlaybackEngine %p: _updateUISnapshotIfNeeded: brightness=%f
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Received request to authorize explicit item - item=%{public}@ - reason=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content not allowed [request failed] - item=%{public}@ - error=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content %{public}@ [request succeeded] - item=%{public}@
MRCPPC: Registering for invalidation with player path %@ (unresolved %@)
MRCPPC: Received invalidation for player path %@ (future player path: %@)
MRCPPC: Registering for endpoint topology changes with unresolved player path %@
MRCPPC: Received change for endpoint %@ (associated player path: %@). Output device no longer exists on endpoint.
[MPCLeaseManager] prepareForPlayback: Ignoring request to prepare lease for account: %@ hasCatalogPlayback=%{BOOL}u usesLease=%{BOOL}u
[MPCLeaseManager] prepareForPlayback: preparing lease account: %@
[MPCLeaseManager] prepareForPlayback: finished [no subscription lease session] error: %{public}@
[MPCLeaseManager] prepareForPlayback: failed [failed to reload FairPlay key status] error: %{public}@
[MPCLeaseManager] prepareForPlayback: finished [already had lease with playback keys]. status: %{public}@
[MPCLeaseManager] prepareForPlayback: renewing lease account: %@
[MPCLeaseManager] prepareForPlayback: finished error: %{public}@
[MPCLeaseManager] prepareForPlayback: finished
MPCLeaseManager: %p: engine:didChangeToState: - Received user interaction event - state:%lu
MPCLeaseManager: %p: Ignoring lease playback prevention [pending reasons %{public}@]
MPCLeaseManager: %p: Pausing [current item (%{public}@) requested playback prevention]
[AccountManager] - Updated accounts: %{public}@
[AccountManager] - Refreshing due to previous timeout
[AccountManager] Unable to get DSID for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for active identity error: %{public}@
[AccountManager] - DSID found for %{public}@ [%{public}@]
[AccountManager] Unable to get properties for identity: %{public}@ error: %{public}@
[AccountManager] Subscription status timed out. identity=%{public}@ firstLoad=%{BOOL}u
[AccountManager] Failed to get subscription status for identity: %{public}@ error: %{public}@
[AccountManager] URL bag timed out. identity=%{public}@
[AccountManager] Failed to get URL bag for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for delegated identity: %{public}@
[AccountManager] Unable to get properties for delegated identity: %{public}@ error:%{public}@
[AccountManager] Unable to get user identities: %{public}@
[AccountManager] - Manageable user identities: %{public}@
[AccountManager] - Delegated user identities: %{public}@
<%{public}@: %p> isSupported: NO [user default override]
<%{public}@: %p> isSupported: %{BOOL}u [encodedMediaLibraryUniqueID] deviceLibraryUniqueID=%{public}@ encodedMediaLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: %{BOOL}u [requestLibraryUniqueID] deviceLibraryUniqueID=%{public}@ requestLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: YES [non-library request] requestClass=%{public}@
Cannot decode override user identity. Using active account.
MPCMediaFoundationTranslator %p - itemToFollow:%{public}@ - direction:%ld - distance:%ld - reason:%ld
MPCMediaFoundationTranslator %p - itemToFollow:direction:distance: -> next item found %{public}@ 
[MPCModelRadioGetTracksStep] Using Siri Asset Info as side-packed getTracks response.
[MPCModelRadioGetTracksStep] Siri Asset Info provided with invalid content: %{public}@
[MPCModelRadioGetTracksStep] Siri Asset Info failed to deserialize with error: %{public}@.
[MPCModelRadioGetTracksStep] Siri Asset Info expected to be a dictionary, but is %{public}@ instead.
[MPCModelRadioGetTracksStep] Failed to convert Siri Asset Info into UTF-8 data.
rectifiedPlaybackRequestEnvironmentForAccountManager - Account Manager accounts: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account for DSID %@: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account missing & replaced by activeAccount with DSID %@
Error encoding route UID: %{public}@
Unexpected LOCAL_DEVICE identifier.
Error decoding route UID: %{public}@
MPCAssistantEncodings (decode): route UID decoding table
MPCAssistantEncodings (decode): hashed %{public}@ = decoded %{public}@
MPCAssistantEncodings (decode): could not decrypt: %{public}@
Setting output devices on the shared audio presentation context: %{public}@
Failed to set output devices on the shared audio presentation context: %{public}@
%{public}@
discovering UIDs: %{public}@
discovered: %{public}@
no origin from endpoint: %{public}@
connected to origin %{public}@ on endpoint %{public}@
origin %{public}@ leader %{public}@
origin %{public}@ assumed leader %{public}@
origin %{public}@ contains %{public}@
origin %{public}@ will remove %{public}@
sending pause to origin %{public}@
no application on target
removing devices from origin %{public}@
remove failed with error: %{public}@
force remove for output devices: %{public}@
result: %{public}@
completed error: %{public}@
completed
Send Command: %{public}@
Send Command Result: %{public}@, [%{public}@] informational: %{public}@
Send Command Result: %{public}@, [%{public}@] error: %{public}@
Send Command Result: %{public}@, [%{public}@]
Attempting local device system music context modification to prepare for local playback.
Send to destination: LOCAL
Command completed
No valid destination provided.
No identifiers requested, processing locally.
Existing group ID requested, processing locally.
Local identifier requested, processing locally.
Send to destination: %{public}@
Send Queue: %{public}@
Send Queue (User Identity): %{public}@ error: %{public}@
Send Queue (User Identity): %{public}@
Send Playback Archive: %@
Failed to create external representation from %@ with error %@ and status %@
Found Default Destination: Proxy Promotion
Found Default Destination: Group Leader %{public}@
Found Default Destination: WHA Group ID %{public}@
Group leader endpoint is: %{public}@ error: %{public}@
Group leader endpoint is: %{public}@
[MPCAssistantGetVolume] Completing with volume: %f
[MPCAssistantGetVolume] Completing with error: %{public}@
MPCItemBookmarker %p - playbackDidStartForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - playbackDidStopForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - Unexpected rate change to %.1f received [Should be handled by playbackDidStart/Stop] - item=%{public}@
RQF %p: Updating current item: %{public}@
RQF %p - Supplemental playback context created: %{public}@ - reason: %ld
RQF %p: didSignificantlyChangeItem: %{public}@ before=%{public}@ after=%{public}@
MPCModelRadioQueueFeeder %p: containsTransportableContent: NO [station subtype is Episode]
rqf:loadPlaybackContext
RQF %p: loadPlaybackContext: context=%{public}@
rqf:loadPlaybackContext:loadIdentityProperties
RQF %p: loadPlaybackContext: finished loading identity properties error: %{public}@
RQF %p: loadPlaybackContext: finished loading identity properties
 error=%{public}@
rqf:loadPlaybackContext:getTracks
reasonType=%d error=%{public}@
reasonType=%d
rqf:loadPlaybackContext:getHistory
RQF %p: loadAdditionalItemsForSection: section=%{public}@ preferredItemCount=%ld
rqf:loadAdditionalItems:loadTracks
RQF %p: loadAdditionalItemsForSection: section=%{public}@ error: %{public}@
RQF %p: loadAdditionalItemsForSection: section=%{public}@
rqf:reloadSection
changes=%{public}@
rqf:reloadSection:diff
rqf:reloadSection:apply
RQF %p: _updateAdditionalLoadingSupport: loading additional items enabled
RQF %p: _updateAdditionalLoadingSupport: loading additional items disabled [cellular streaming restricted]
[BackgroundTasks] %{public}@ Expired [%lu]
rqf:detectSignOut:getUserIdentityProperties
didSignOut=%{BOOL}u error=%{public}@
didSignOut=%{BOOL}u
RQF %p: _detectSignOutForIdentityStore: freezing tracklist [nil active account]
RQF %p: _errorForRequest:withError: - Received not connected to internet error - current network type: %li - cellular data allowed: %{BOOL}u
RQF %p: _errorForRequest:withError: - Transforming error to cellular restricted error instead of: %{public}@
RQF %p: _errorForRequest:withError: - (Watch) Transforming error to cellular restricted error instead of: %{public}@
RQF %p: _errorForRequest:withError: - Transforming error to radio queue feeder network unavailable instead of: %{public}@
RQF %p: _handleGetTracksResponse: failed [no track response] error=%{public}@
RQF %p: _handleGetTracksResponse: merging playback queue: currentIndex=%lld
rqf:_handleGetTracksResponse:merge
rqf:_handleGetTracksResponse:personalize
rqf:_handlePersonalizationResponse
rqf:_handlePersonalizationResponse:diff
rqf:_handlePersonalizationResponse:apply
final tracklist loading completion startItemIdentifier=%{public}@
numberOfItems=%lld
RQF %p: adding get tracks operation operationCount=%lld
RQF %p: personalization response is invalid
RQF %p: Removing %ld restricted tracks from section
rqf:_removeRestrictedTracks:diff
rqf:_removeRestrictedTracks:apply
identifier: %{public}@
LoadSession-QCDecode
decodeError=%{public}@
failed to decode queue controller
LoadSession
timeout
LoadSession-Finalize
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [before first unlock] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - failed with error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [item in playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [remove from playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [unexpected command]
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
MPCStoreLibraryPersonalizationMiddleware
MPMiddleware
NSObject
MPCPlayerResponseBuilder
MPCResponseMediaRemoteControllerChaining
_MPCPlaybackEngineMediaFoundationImplementation
MFPlaybackStackControllerDelegate
MPAVQueueControllerDelegate
MPCAssetLoaderDelegate
MPCPlaybackEngineImplementation
ICErrorProcessing
MPCMediaRemoteMiddlewareModelObjectsProviding
MPCMediaRemoteMiddlewareMetadataOperation
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperation
ModelObjectsProviding
ICStoreResponseProtocol
MPCModelGenericAVItem
AVAssetResourceLoaderDelegate
AVPlayerItemMetadataOutputPushDelegate
AVPlayerItemOutputPushDelegate
ICEnvironmentMonitorObserver
MPRTCReportingItemSessionCreating
_MPCURLAssetDownloadCompletionObserver
MPCModelPlaybackAssetCacheProvidingInternalAdditions
MPCAssistantDiscovery
MPCModelGenericAVItemUserIdentityPropertySet
MPCLyricsReportingController
MPCAssistantSetVolume
MPCPlaybackEngineLoggingConsumer
MPCPlaybackEngineEventConsumer
Debugging
MPCModelStorePlaybackItemsRequestAccumulator
MPCModelGenericAVItemTimedMetadataResponse
MPCModelGenericAVItemTimedMetadataStreamFields
MPCAssistantAnalyticsEventConsumer
MPCPlayerSessionRequest
MPCMediaRemoteMiddlewareMetadataOperationConfiguration
MPCPlayerSessionResponseBuilder
MPCPlayerSessionResponse
MPMusicPlayerControllerSystemServer
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerActions
MPMusicPlayerControllerApplicationServer
MPMusicPlayerControllerClient
_MPCMusicPlayerControllerServer
NSXPCListenerDelegate
MPCPlaybackEngineEventObserving
MPCMusicPlayerControllerServer
MPCModelGenericAVItemAssetLoadResult
MPCReportingDeviceIdentityPropertiesLoader
MPCReportingIdentityPropertiesLoading
MPCModelMediaClipAVItem
MPCPlaybackContextPrivateListeningOverridable
MPCModelPlaybackRequestEnvironmentConsuming
_MPCMediaRemotePublisher
PlaybackQueue
MPNowPlayingPlaybackQueueDataSourcePrivate
MPNowPlayingPlaybackQueueDataSource
MPCModelRadioStationTrackGenericObjectBuilder
MPCModelGenericAVItemLocalFileLoadOperation
MediaPlayerCore
MPCPlaybackQueue
MPCModelPlaybackIntentDataSourceAdditions
MPCMediaLibraryPlaybackAssetCacheProvider
MPCModelPlaybackAssetCacheProviding
MPCPlaybackDelegationProperties
NSCopying
NSMutableCopying
NSSecureCoding
NSCoding
MPCMutablePlaybackDelegationProperties
MPCQueueControllerDataSource
MPShuffleableSectionedIdentifierListDataSource
MPSectionedIdentifierListDataSource
MPCPlaybackIntent
ForShortcutsOnly
MPCModelRadioStationBuilder
MPCMediaRemoteMiddlewareControllerProviding
MPCPlaybackEngineMiddlewareOperation
MPCPlaybackHistoryController
MPCMediaRemoteMiddlewarePlaybackStateOperation
MPCAssetLoadingOperation
MPCAssetLoader
MFAssetLoading
MPNowPlayingContentItemRemoteArtworkToken
MPArtworkDataSourceVisualIdenticality
MPCRemotePlayerArtworkDataSource
MPCAssistantAvailability
MPCStoreFrontLocalEquivalencyMiddlewarePlayingItemProviding
MPCStoreFrontLocalEquivalencyMiddlewareOperation
MPCStoreFrontLocalEquivalencyMiddlewareAdditions
MPCPlayerChangeRequest
MPCPlayerCommandRequest
MPCMediaRemoteCommandOperation
MPCPlayerRequest
MPCPlayerResponse
_MPCPlayerCommand
MPCModelRadioPlaybackContext
MPCPlaybackContextUserIdentityConsuming
MPCRTCEventConsumer
MPCModelStorePlaybackItemsRequest
MPCModelPlaybackRequest
MPModelRequestDetailedKeepLocalStatusRequesting
MPCModelRequestRTCReporting
MPCModelStorePreviousRequestStoring
MPCPlaybackEngineMiddleware
_MPCStateDumpPropertyListTransformable
MPCErrorAdditions
MPCModelStorePlaybackItemsResponse
MPModelStoreEquivalencyMapping
MPModelResponseDetailedKeepLocalStatusRequesting
MPCModelPlaybackResponse
MPCModelGenericAVItemAssetLoadProperties
MPCMediaRemoteMiddlewareControllerOperation
ControllerProviding
MPCPlaybackEngineEvent
MPCMediaRemoteMiddlewareCommandsOperation
MPCMediaRemoteMiddleware
MPCErrorController
MPCErrorControllerImplementation
MFErrorController
MFResettable
MPCModelGenericAVItemSubscriptionAssetLoadOperation
MPCModelPlaybackAdditions
MPCModelQueueFeeder
MPRTCReportingItemSessionContaining
MPRequestResponseControllerDelegate
MPCModelQueueFeederAdditions
MPCModelRadioPersonalizationRequest
MPCModelRadioPersonalizationResponse
_MPCQueueControllerDataSourceState
MPCPlayActivityFeedEventConsumer
_MPCMediaRemoteNullController
MPCQueueDescriptorPlaybackIntentDataSource
MPCPlaybackIntentDataSource
MPCAssistantPlaybackQueue
MPCAssistantQueryPlaybackQueue
MPCAssistantRadioPlaybackQueue
MPCAssistantStoreTracklistPlaybackQueue
MPCAssistantGeniusPlaybackQueue
MPCAssistantCustomDataPlaybackQueue
MPCPlayerResponseSection
MPCPlayerPath
MPCPlaybackEngineEnvironmentConsumer
MPCModelPlaybackIntentTracklistToken
ICRadioContentReferenceContainable
MPCModelRadioContentReference
ICRadioContentReference
MPCReportingController
MPCFutureInvalidationToken
MPCFuture
MPCStoreLibraryPersonalizationMiddlewareOperation
MPCPlayerItemConfigurator
MPCExternalPlaybackControllerImplementation
MPAVRoutingControllerDelegate
MFExternalPlaybackController
MPCExternalPlaybackRouter
MPCJinglePlayActivityReportingController
MPCRadioArtworkDataSource
MPCAssistantSendCommand
MPCAssistantSendCommandResult
MPCAdditions
MPCPlayerResponseTracklist
_MPCPlayerResponseTracklistDataSource
MPLazySectionedCollectionDataSource
_MPCPlayerResponseTracklistDisplayDataSource
_MPCPlayerResetTracklistCommand
MPCPlayerResetTracklistCommand
MPCPlayerCommand
_MPCPlayerInsertItemsCommand
MPCPlayerInsertItemsCommand
_MPCPlayerReorderItemsCommand
MPCPlayerReorderItemsCommand
_MPCPlayerRepeatCommand
MPCPlayerRepeatCommand
_MPCPlayerShuffleCommand
MPCPlayerShuffleCommand
_MPCPlayerActionAtQueueEndCommand
MPCPlayerActionAtQueueEndCommand
_MPCPlayerChangeItemCommand
MPCPlayerChangeItemCommand
_MPCPlayerDisableModificationsCommand
MPCPlayerDisableModificationsCommand
MPCQueueController
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
MPSectionedIdentifierListAnnotationDelegate
MPCContinueListeningRadioQueueProviding
MPArtworkDataSource
MPCQueueItemProviding
MPAVQueueController
MPAVQueueCoordinatingDataSource
MSVSegmentedCoding
_MPCQueueControllerEnumerator
_MPCAutoPlayEnumerationResult
MPSectionedIdentifierListEnumerationItem
MPSectionedIdentifierListEnumerationResult
MPCQueueControllerDataSourceLoadRequest
MPCReportingPlaybackEnvironmentPropertiesLoader
_MPCAVController
MPCPrivateListeningStateSource
_MPCPrivateListeningStateLocalDeviceSource
_MPCPrivateListeningStateStaticSource
_MPCPrivateListeningStateUserIdentitySource
MPCAssistantEndpointContext
MPCPlayerResponseItem
_MPCPlayerItemCommand
_MPCPlayerSeekCommand
MPCPlayerSeekCommand
_MPCPlayerPlaybackRateCommand
MPCPlayerPlaybackRateCommand
_MPCPlayerFeedbackCommand
MPCPlayerFeedbackCommand
_MPCPlayerRateCommand
MPCPlayerRateCommand
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
MPCAudioSpectrumAnalyzer
MPCAudioSpectrumObserver
MPCExplicitContentAuthorizationManager
MPCItemIdentifierImplementation
MPCItemIdentifier
MFQueuePlayerItem
MFPlayerItem
MPCMediaRemoteController
MSVLRUDictionaryDelegate
MPMediaRemoteEntityArtworkGenerator
_MPCSupportedCommands
MPCSupportedCommands
MPCRadioPlaybackIntentTracklistToken
MPCSiriPlaybackAdditions
MPCAssistantConnection
MPCPlaybackEngineEventStream
_MPCPlaybackEngineEventStreamSubscription
MPCPlaybackEngineEventStreamSubscription
_MPCPlaybackEngineEventStreamCursor
MPCPlaybackEngineEventStreamCursor
_MPCPlaybackEngineEventStreamDeferralAssertion
MPCPlaybackEngineEventStreamDeferralAssertion
MPCModelStorePlaybackItemsRequestOperation
_MPCProtoContainer
_MPCProtoContainerIdentifierSet
_MPCProtoDelegateInfo
_MPCProtoItem
_MPCProtoItemIdentifierSet
_MPCProtoRadioContentReference
_MPCProtoRadioContentReferenceLibraryAlbumContentReference
_MPCProtoRadioContentReferenceLibraryArtistContentReference
_MPCProtoRadioContentReferenceLibraryItemContentReference
_MPCProtoRadioContentReferenceStoreContentReference
_MPCProtoRadioCreationProperties
_MPCProtoTracklist
_MPCProtoTracklistIndexPath
MPCModelGenericAVItemMediaRedownloadOperation
MPCModelRadioGetTracksOperation
MPCModelRadioGetTracksResponse
MPCRemoteQueueAdditions
MPCCustomCommands
_MPCFairPlayPerformanceController
MPServerObjectDatabaseObserver
_MPCMiniSINFEndpointInfo
MPCModelPlaybackIntentDataSource
MPCAssistantRemoteControlDestination
MPCAssistantMutableRemoteControlDestination
MPCPlaybackEngine
MPCExplicitContentAuthorizationDelegate
MPCPlayerPathCache
MPCModelStorePlaybackItemsRequestAccumulatorLegacy
MPCSuzeLeaseSessionController
ICSuzeLeaseSessionDelegate
_MPCSuzeLeaseSessionInfo
MPCPlaybackEngineEventPayload
MPCPlaybackEngineEventPayloadJSONValue
MPCPlaybackEngineEventPayloadValue
MPCPlaybackEngineEventPayloadValueJSONConvertible
MPCReportingLyricsViewEvent
MPCSuzeLeaseSession
_MPCLeaseManager
MPCReportingIdentityProperties
_MPCPlaybackSessionArchive
MPCPlaybackAccount
_MPCPlaybackAccountManager
MPCPlayerSessionResponseItem
MPCModelPlaybackContext
MPCReportingPlaybackActivityEvent
MPCReportingEvent
MPCPlaybackHistoryRecordChangeRequestOperation
MPCStoreFrontLocalEquivalencyMiddleware
_MPCNullPlaybackContext
_MPCNullQueueFeeder
_MPCReportingController
MPCRadioPlaybackIntentDataSource
MPCLeaseController
MFLeaseControlling
MPCPlayerLanguageOptionGroup
MPCMediaFoundationTranslator
MFQueueControlling
MPCReportingAdditions
MPCModelRadioGetTracksStep
MPCModelRadioGetTracksEstablishAccountStep
MPCModelRadioGetTracksPrepareIdentityStep
MPCModelRadioGetTracksPreparePlayActivityStep
MPCModelRadioGetTracksRequestStep
MPCModelRadioGetTracksRetryDialogStep
MPCModelGenericAVItemHomeSharingLoadOperation
MPCPlaybackRequestEnvironment
MPCMutablePlaybackRequestEnvironment
MPCAssistantEncodings
MPCAssistantContext
MPCModelRadioPlaybackQueue
_MPCModelRadioPlaybackQueueStationTracksCollection
MPCAssistantPause
MPCAssistantCommand
MPCPlaybackHistoryRecordChangeRequest
MPCAssistantGetVolume
MPCMediaFoundationQueueCoordinator
MPAVQueueCoordinating
MPCItemBookmarker
MPCModelRadioQueueFeeder
MPAVItemObserver
_MPCPlaybackEngineSessionManager
MPNowPlayingContentItemArtworkToken
MPCMediaRemoteArtworkRemoteDataSource
MPCModelGenericAVItemTimedMetadataRequest
operationsForPlayerRequest:
initWithMiddleware:playerRequest:
arrayWithObjects:count:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
operationsForRequest:
invalidationObservers
setInvalidationObservers:
personalizedModelObjects
setPersonalizedModelObjects:
.cxx_destruct
_invalidationObservers
_personalizedModelObjects
length
section
sectionAtIndex:
itemAtIndexPath:
nextObject
playerModelObject:propertySet:atIndexPath:chain:
controller:chain:
playerState:chain:
tracklistUniqueIdentifier:chain:
playerRepeatType:chain:
playerShuffleType:chain:
playerQueueEndAction:chain:
playerLastChangeDirection:chain:
playerUpNextItemCount:chain:
playerNumberOfSections:chain:
playerNumberOfItems:inSection:chain:
playerItemDuration:atIndexPath:chain:
playerItemLocalizedDurationString:atIndexPath:chain:
playerItemExplicitBadge:atIndexPath:chain:
playerItemEditingStyleFlags:atIndexPath:chain:
playerItemIsPlaceholder:atIndexPath:chain:
playerPlayingItemIndexPath:chain:
playerPlayingItemGlobalIndex:chain:
playerGlobalItemCount:chain:
sectionIsAutoPlaySection:atIndex:chain:
playerItemLanguageOptionGroups:atIndexPath:chain:
playerItemCurrentLanguageOptions:atIndexPath:chain:
playerCommandSupported:command:chain:
playerCommandEnabled:command:chain:
playerCommandOptionValue:forKey:command:chain:
playerVideoView:chain:
videoOutput:chain:
init
_setupPlaybackStackWithPlaybackEngine:queueController:
_stateDictionary
dealloc
errorController
reset
playbackStackController
playbackEngine
playerID
queueController
MPCErrorWithDomain:code:debugDescription:
currentQueueItem
actionAfterQueueLoad
translator
itemToFollowItem:direction:distance:reason:
resolve:forItem:completion:
preferredFirstContentItemID
setPreferredFirstContentItemID:
eventObserver
engine:didResetQueueWithPlaybackContext:error:
setQueueWithInitialItem:andPlay:identifier:completion:
isAssetLoaded
canUseLoadedAsset
canReusePlayerItem
prepareForRate:completionHandler:
reloadWithPlaybackContext:completionHandler:
_resetPlaybackStack
contentItemID
playerItemDidBecomeCurrent:
restoreQueue:
setAudioSessionActive:withOptions:error:
currentTime
UUIDString
skipWithDirection:identifier:completion:
jumpTo:identifier:completion:
pauseWithFadeout:
stringWithFormat:
pauseWithFadeOut:identifier:completion:
play
currentItem
_updateAudioSessionForItem:
_MPAVItemForMFPlayerItem:
currentState
interruptedState
itemsHavePlayed
endPlaybackWithIdentifier:completion:
pauseWithIdentifier:completion:
playWithRate:identifier:completion:
MPCErrorWithDomain:code:underlyingError:debugDescription:
shouldSkipJumpToItemStart:
bookmarker
userDidSkipDuringPlaybackFromItem:direction:
beginScanningWithDirection:identifier:completion:
endScanningWithIdentifier:completion:
_setCurrentPlaybackRate:
setRate:identifier:completion:
setDelegate:
setPlaybackEngine:
initWithQueueController:
initWithDelegate:
initWithPlaybackEngine:translator:
initWithPlaybackEngine:translator:externalPlaybackRouter:
initWithTranslator:
leaseManager
initWithTranslator:leaseManager:
initWithQueueController:assetLoader:errorController:externalPlaybackController:leaseController:queue:
setPlaybackStackController:
setMaximumPlayerQueueLength:
initWithStackController:
setQueueCoordinator:
initWithPlaybackEngine:stackController:translator:
setConfigurator:
updateAudioSession
numberWithInteger:
rate
numberWithFloat:
numberWithDouble:
targetRate
stateDictionary
dictionaryWithObjects:forKeys:count:
audioSessionCategory
audioSessionOptions
initWithCategory:mode:routeSharingPolicy:options:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
updateAudioSessionWithConfiguration:
eventStream
sectionIdentifier
itemIdentifier
numberWithBool:
emitEventType:payload:atTime:
MPAVItemForMFPlayerItem:
currentItemTransition
setCurrentItemTransition:
defaultCenter
postNotificationName:object:
updateDurationSnapshotWithTime:forItem:rate:
schedulePlaybackStatePreservation
engine:didChangeQueueWithReason:
dictionary
setObject:forKeyedSubscript:
itemError
errorWithDomain:code:userInfo:
engine:didChangeRepeatType:
engine:didChangeShuffleType:
engine:didChangeActionAtQueueEnd:
engine:willChangeToItem:fromItem:
_willResignActivePlayerItem
_willBecomeActivePlayerItem
prepareForCurrentItemPlayback
time
itemDidBecomeCurrent:time:
engine:didChangeToItem:
itemDidResignCurrent:time:
playerItemDidResignCurrent:
repeatType
setMPAVItem:forMFPlayerItem:
isAlwaysLive
contentItem
elapsedTimeTimestamp
calculatedElapsedTime
_logTimeJumpForItem:fromTime:toTime:userInitiated:timeStamp:
engine:didChangeItemElapsedTime:rate:
null
itemDidPlayToEnd:time:
engine:didEndPlaybackOfItem:
reevaluateHasProtectedContent
reevaluateType
setItemsHavePlayed:
playbackDidStartForItem:time:rate:
emitEventType:payload:
playbackDidStopForItem:time:
playbackRateDidChangeToRate:forItem:time:
routeDescription
isAirplay
playbackStateDidChangeFromState:toState:forItem:time:rate:
engine:didChangeToState:
engine:didAchieveLikelyToKeepUpWithItem:
engine:didReachEndOfQueueWithReason:
source
type
identifier
numberWithUnsignedInt:
sourceID
resetMapping
engineDidLoseMediaServices:
engineDidResetMediaServices:
currentItemWillChangeFromItem:toItem:timeStamp:
itemIsReadyToPlay:timeStamp:
itemDidFailToLoad:error:timeStamp:
itemDidFailToPlayToEnd:error:timeStamp:
itemDidBecomeCurrent:timeStamp:
itemDidResignCurrent:timeStamp:
playbackDidStartForItem:rate:timeStamp:
playbackDidStopForItem:timeStamp:
playbackWaitingToPlayForItem:reason:timeStamp:
itemDidPlayToEnd:timeStamp:
playbackTimeDidChangeTo:forItem:reason:timeStamp:
playbackRateDidChangeToRate:forItem:timeStamp:
playbackIsLikelyToKeepUp:forItem:timeStamp:
playbackBufferStateDidChangeToState:forItem:timeStamp:
didReachEndOfQueueWithReason:
interruptionDidBeginWithInterruptor:timeStamp:
interruptionDidFinishForInterruptor:shouldResume:timeStamp:
routeDidChange:metadata:timeStamp:
stateDidChangeFromState:toState:timeStamp:
screenRecordingDidChange:timeStamp:
userActionDidBegin:
userActionDidEnd:error:
mediaServicesInterruptionDidBeginWithTimeStamp:
mediaServicesInterruptionDidEndWithTimeStamp:
playbackIsBlockedOnNonPlayableItem:
queueControllerDidChangeContents:
queueController:failedToLoadItem:
queueController:didChangeContentsWithReplacementPlaybackContext:
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
queueController:didChangeActionAtQueueEnd:
queueController:didIncrementVersionForSegment:
assetLoadingDidStartForItem:
assetLoadingDidCompleteForItem:error:
initWithPlaybackEngine:
reloadWithPlaybackContext:identifier:completionHandler:
loadSessionWithQueueController:completionHandler:
becomeActiveWithError:
setQueueController:
queuePlayer
state
stateBeforeInterruption
videoView
pictureInPictureController
wantsPictureInPicture
setWantsPictureInPicture:
automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds
setAutomaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds:
hasPlayedSuccessfully
setHasPlayedSuccessfully:
autoPlayWhenLikelyToKeepUp
setAutoPlayWhenLikelyToKeepUp:
actionAtQueueEnd
setActionAtQueueEnd:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error:
playWithOptions:
pause
togglePlayback
setRate:completion:
beginSeek:
endSeek
setCurrentTime:
endPlayback
beginUsingVideoLayer
endUsingVideoLayer
pauseWithFadeout:identifier:completion:
togglePlaybackWithIdentifier:completion:
skipWithDirectionShouldJumpToItemStart:
jumpToTime:identifier:completion:
playerViewController
playbackDidReachQueueEndWithTimeStamp:
firstVideoFrameWasRenderedForItem:timeStamp:
setBookmarker:
setTranslator:
setErrorController:
externalPlaybackController
setExternalPlaybackController:
assetLoader
setAssetLoader:
leaseController
setLeaseController:
stateHandle
setStateHandle:
_wantsPictureInPicture
_automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds
_hasPlayedSuccessfully
_autoPlayWhenLikelyToKeepUp
_playbackEngine
_queueController
_currentItem
_queuePlayer
_currentTime
_videoView
_state
_stateBeforeInterruption
_pictureInPictureController
_actionAtQueueEnd
_playbackStackController
_bookmarker
_translator
_errorController
_externalPlaybackController
_assetLoader
_leaseController
_stateHandle
hostTime
userSecondsSinceReferenceDate
forPlayerState:
forPlaybackTimeChangeReason:
serverError
domain
code
userInfo
mutableCopy
dialog
responseDictionary
count
setObject:forKey:
_isAgeVerificationError:
errorForICError:response:
request
tracklistRange
rangeFromTracklistRange:
playingItemProperties
relationships
objectForKeyedSubscript:
queueItemProperties
label
middleware
controller
playQueueIdentifiersForRequest:
setPlayQueueIdentifiersFuture:
playQueueIdentifiersFuture
onInvalid:
isCancelled
finish
arrayWithCapacity:
contentItemForIdentifier:
addObject:
stringByAppendingString:
replaceObjectAtIndex:withObject:
onCompletion:
enumerateObjectsUsingBlock:
arrayByAddingObject:
qualityOfService
controllerFuture
isInvalid
_loadItemsWithCompletion:
onSuccess:
onFailure:
playingIdentifier
setPlayingIdentifierFuture:
playingIdentifierFuture
cancel
finishWithError:
queueSectionProperties
translatorForMPModelClass:
setArtworkGenerator:
appendSection:
sectionObjectForPropertySet:contentItem:context:
emptyIdentifierSet
initWithIdentifiers:block:
firstObject
objectAtIndexedSubscript:
collectionIdentifier
isEqualToString:
collectionInfo
isEqualToDictionary:
playingIndexPath
numberOfSections
numberOfItemsInSection:
indexPathForItem:inSection:
setPlayingIndexPath:
_itemGenericObjectPropertySetForContentItem:propertySet:
objectForPropertySet:contentItem:context:
appendItem:
setQueueContentItems:
setQueueModelObjects:
queueIdentifier
setQueueIdentifierFuture:
queueIdentifierFuture
setQueueIdentifier:
_loadPlayingIdentifierWithCompletion:
sharedCache
playerPath
observationTokenDescriptionForPlayerPath:
sourceContentItems
modelObjects
requiredStoreLibraryPersonalizationProperties
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
emptyPropertySet
propertySetByCombiningWithPropertySet:
initWithProperties:relationships:
deviceSpecificUserInfo
mediaType
_genericObjectPropertySetForContentItem:preferredRelationships:propertySet:
preferredFallbackItemRelationship
error
invalidationHandler
setInvalidationHandler:
timeoutDescription
inputProtocols
outputProtocols
inputOperations
setInputOperations:
initWithMiddleware:request:
execute
setMiddleware:
setRequest:
_invalidationHandler
_inputOperations
_middleware
_request
_playQueueIdentifiersFuture
_playingIdentifierFuture
_queueIdentifierFuture
queueModelObjects
queueContentItems
flattenedGenericObject
copy
_createStoreRequestContext
newHierarchyTokenFromParentToken:
_contentTasteControllerDidChangeNotification:
sharedController
addObserver:selector:name:object:
_ageVerificationStateDidChangeNotification:
removeObserver:name:object:
standardUserDefaults
endAutomaticallyRefreshingLease
stopLeaseSession:completion:
repeatIndex
mainTitle
song
album
title
year
artist
name
tvEpisode
season
show
identifiers
universalStore
adamID
purchasedAdamID
subscriptionAdamID
trackNumber
trackCount
volumeNormalization
setSoundCheckVolumeNormalization:
setLoudnessInfoVolumeNormalization:
composer
copyrightText
duration
movie
_shouldRememberBookmarkTime
storeItemInt64ID
storeSubscriptionAdamID
genre
_radioStation
subtype
performWithoutEnforcement:
isRadioStreamPlayback
playerItem
status
_playerItemDurationIfAvailable
isExplicitSong
isExplicitTrack
identity
activeAccount
defaultManager
ageVerificationStateForUserIdentity:
treatment
isRadioPlayback
sharedManager
isItemAuthorized:shouldAskForAuthorization:
_timeoutValues
_storeRequestContext
homeSharingAsset
localFileAsset
storeAsset
hasVideo
gaplessInfo
volumeAdjustment
isArtistUploadedContent
identityProperties
delegatedIdentity
delegatedIdentityProperties
DSID
unsignedLongLongValue
isDelegated
setItemError:
sharedMonitor
networkType
lastKnownNetworkType
_prefersHighQualityVideoContentForNetworkType:
_prefersHighQualityAudioContentForNetworkType:
_getSubscriptionLeasePropertiesWithCompletion:
endpointType
setAllowsHLSContent:
setPrefersVideoContent:
setAssetCacheProvider:
setFileAsset:
setGenericObject:
setItemIdentifiers:
setPrefersHighQualityContent:
setRadioPlayback:
setStoreAsset:
assetSourceStoreFrontID
setAssetSourceStorefrontID:
setHomeSharingAsset:
setAccountID:
storefrontIdentifier
setStorefrontID:
setDelegatedAccountID:
setMaxConcurrentOperationCount:
setName:
setQualityOfService:
setAssetLoadProperties:
setRequirePreferredAssetQuality:
setResponseHandler:
addOperation:
assetURL
_allowsStreamingPlayback
hasValidAsset
accountID
delegatedAccountID
setRequestType:
setStoreRadioAdamID:
cachedResponseForRequest:
assetLoadResultWithStoreAssetPlaybackResponse:assetLoadProperties:error:
isSubscriptionRequired
hasPlaybackCapability
setRequestContext:
shouldUseAccountLessStreaming
setOperationType:
setSubscriptionLeaseSession:
assetProtectionType
purchaseBundleDictionary
protectedContentSupportStorageFileURL
isHLSAsset
isCloudStreamingAsset
userAgent
isHomeSharingAsset
personalizedStore
cloudID
numberWithUnsignedLongLong:
numberWithLongLong:
reloadFairPlayKeyStatusWithCompletionHandler:
leaseStatus
hasOnlinePlaybackKeys
onlineSubscriptionKeysRequired
hasOfflinePlaybackKeys
requestContext
initWithRequestContext:
performPlaybackRequest:completionHandler:
assetQualityType
allowsAssetCaching
isFileURL
_allowsAssetCaching
assetPathExtension
getPlaybackAssetCacheDestinationURL:purchaseBundleDestinationURL:forGenericObject:assetQualityType:pathExtension:
sharedNetworkObserver
isMusicCellularStreamingAllowed
_rtcReportingServiceIdentifierWithAssetURL:
URLAssetWithURL:options:
objectForKey:
setFollowUp:
dataWithPropertyList:format:options:error:
writeToURL:options:error:
host
path
fileExistsAtPath:
identityKind
initWithModelKind:block:
relativePath
setFilePath:
setQualityType:
setNonPurgeable:
setProtectionType:
setPurchaseBundleFilePath:
setPlaybackAssetCacheFileAsset:forGenericObject:withCompletionHandler:
removeItemAtURL:error:
mpc_addDownloadCompletionHandler:
resourceLoader
setDelegate:queue:
playerItemWithAsset:
setVolumeAdjustment:
setAudioTimePitchAlgorithm:
setPlaybackLikelyToKeepUpTrigger:
setMediaKind:
heuristicInfo
encodingDelayInFrames
encodingDrainInFrames
durationInFrames
lastPacketsResync
setGaplessInfo:
metadataIdentifiers
initWithIdentifiers:
addOutput:
addObserver:
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
_applyPreferredPeakBitRateToPlayerItem:withItemType:
setPlayerItem:
willBecomeActivePlayerItemHandler
alternateHLSKeyCertificateURL
streamingKeyCertificateURL
alternateHLSKeyServerURL
streamingKeyServerURL
isiTunesStoreStream
suzeLeaseID
initWithRequestContext:leaseID:mediaType:
startLeaseSessionWithConfiguration:completion:
_suzeLeaseSessionRenewDidFailNotification:
beginAutomaticallyRefreshingLease
persistentID
mediaLibrary
itemWithPersistentID:verifyExistence:
itemFromModelObject:
library
databaseID
personID
universalCloudLibraryID
cloudAlbumID
notePlaybackFinishedByHittingEnd
durationIfAvailable
_handlePlaybackFinishedTime:didFinishByHittingEnd:
flushNowPlayingCaches
playbackError
shouldShowComposer
shouldPlaybackRequireOnlineKeys
shouldUseLease
setShouldRequireLeaseAcquisition:
_updatePreventionStatusWithLeaseSession:
_getUnverifiedSubscriptionLeaseSessionWithCompletion:
supportsRating
mediaItem
setValue:forProperty:withCompletionBlock:
postNotificationName:object:userInfo:
shouldReportPlayEvents
radio
stationID
stationHash
stationStringID
longLongValue
lyrics
text
hasStoreLyrics
hasTimeSyncedLyrics
containerUniqueID
playbackInfoForItem:
_startTime
_stopTime
doubleValue
durationFromExternalMetadata
_bookmarkTime
addEntriesFromDictionary:
userRating
isItemAuthorized:
_updateBookmarkTime:isCheckpoint:
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
sharedApplication
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
_updateHasBeenPlayedWithElapsedTime:completion:
setPlaybackStoppedTime:
includeContentItemDebugFields
privateListeningStateSource
currentValue
boolValue
_currentPlaybackRateDidChange:
_updateAutomaticSubscriptionLeaseRefresh
controllerWithUserIdentity:
setTasteType:forModel:withCompletionHandler:
tasteTypeForModel:
UUID
MSVBase64UUIDString
artworkCatalog
equivalencySourceAdamID
mpcReporting_itemType
initWithPlaybackRequestEnvironment:
jingleTimedMetadata
requestingBundleIdentifier
requestingBundleVersion
shouldReportPlayEventsToStore
_isPrivateListeningEnabled
isSiriInitiated
didAttemptToLoadAsset
date
setShouldIncludeDeviceGUID:
setCertificateURL:
setKeyServerURL:
setLeaseActionType:
configureUsingAssetResourceLoadingRequest:
setITunesStoreRequest:
setRentalID:
setSkippedRentalCheckout:
initWithObjectsAndKeys:
finishAssetResourceLoadingRequest:withError:
performWithResponseHandler:
sharedBagProvider
urlForBagKey:
getBagForRequestContext:withCompletionHandler:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
_reloadTimedMetadataRequest
_updateJingleTimedMetadata
_invalidateContentItem
_setNeedsPersistedLikedStateUpdate
_postInvalidationNotifications
initWithGenericObject:timedMetadataGroups:storeRequestContext:
setPreviousResponse:
setItemProperties:
_timedMetadataResponseDidInvalidateNotification:
results
firstItem
newOperationWithResponseHandler:
anyObject
setSong:
initWithIdentifier:userInfo:
initWithLyrics:userProvided:token:
deviceMediaLibraryWithUserIdentity:
invalidateContentItemDeviceSpecificUserInfo
explicitBadge
setExplicitBadge:
object
isRemoteServerLikelyReachable
currentDeviceInfo
isWatch
isNetworkConstrained
allowsHighQualityMusicStreamingOnCellular
isCurrentNetworkLinkExpensive
preferredVideosAssetQualityOnWifi
isVideoCellularStreamingAllowed
preferredVideosAssetQualityOnCellular
isAudioAccessory
mediaKind
loudnessInfoVolumeNormalization
modelPlayEvent
itemType
setLoudnessInfo:
preferredMaximumResolution
setPreferredMaximumResolution:
preferredPeakBitRate
setPreferredPeakBitRate:
_modelPlaybackPosition
bookmarkTime
initWithStoreRequestContext:
setShouldIgnoreCache:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
sharedStatusController
subscriptionStatus
initWithICSubscriptionStatus:
performSubscriptionStatusRequest:withCompletionHandler:
_subscriptionLeaseStatusDidChangeNotification:
getLeaseSessionWithRequestContext:completionHandler:
setUserSkippedPlayback:
initWithModel:
setMediaLibrary:
_utilitySerialQueue
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
observer
didSignificantlyChangeItem:
playbackPosition
radioStation
isRedownloadable
filePath
isNonPurgeable
shouldRememberBookmarkTime
startTime
stopTime
storeUbiquitousIdentifier
_currentPlaybackRate
userSkippedPlayback
playbackInfo
_expectedStopTimeWithPlaybackInfo:
items
keySpace
extraAttributes
dataValue
isEqualToData:
hasPendingLeaseAcquisition
leaseState
shouldPreventPlayback
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
outputSequenceWasFlushed:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
rtcReportingParentHierarchyToken
rtcReportingServiceIdentifier
rtcReportingAssetType
initWithGenericObject:itemProperties:playbackRequestEnvironment:identityPropertySet:
albumYear
albumArtist
albumStoreID
artistStoreID
albumTrackNumber
albumTrackCount
allowsEQ
applyVolumeNormalizationWithSoundCheckEnabled:
artworkTimeMarkers
chapterTimeMarkers
externalContentIdentifier
isAssetURLValid
isLikedStateEnabled
isRadioItem
isStreamable
isValidPlayerSubstituteForItem:
loadAssetAndPlayerItem
modelGenericObject
cloudUniversalLibraryID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
prefersSeekOverSkip
setRating:
stationName
stationProviderID
supportsLikedState
libraryLyrics
urlTimeMarkers
useEmbeddedChapterData
allowsAirPlayFromCloud
allowsExternalPlayback
requiresLoadedAssetForAirPlayProperties
resolvePlaybackError:withCompletion:
storeAccountID
storeFrontIdentifier
useListeningHistory
usesSubscriptionLease
_handleUpdatedLikedState:forUserIdentity:completion:
_persistedLikedState
artworkCatalogBlock
mpcReporting_equivalencySourceAdamID
mpcReporting_identityPropertiesLoader
mpcReporting_jingleTimedMetadata
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_privateListeningEnabled
mpcReporting_siriInitiated
mpcReporting_trackInfo
nowPlayingInfoCenter:lyricsForContentItem:completion:
_applyLoudnessInfo
_storeUbiquitousIdentifier
leasePlaybackPreventionState
supportsRadioTrackActions
setSupportsRadioTrackActions:
assetCacheProvider
setAssetSourceStoreFrontID:
setEquivalencySourceAdamID:
genericObject
setSiriInitiated:
setRadioStreamPlayback:
setSubscriptionRequired:
playbackRequestEnvironment
stationItemLikedState
setStationItemLikedState:
trackInfo
setTrackInfo:
setEventStream:
_accessQueue
_allowsAirPlayFromCloud
_hasLoadedSubscriptionLeaseSession
_subscriptionLeaseSessionLoadQueue
_subscriptionLeaseSession
_hasLoadedSubscriptionPlaybackInformation
_subscriptionPlaybackInformation
_subscriptionPlaybackInformationLoadQueue
_shouldAutomaticallyRefreshSubscriptionLease
_isAssetSubscriptionProtectionType
_isSubscriptionPolicyContent
_lastPreparedForNonZeroRate
_subscriptionLeaseRequestCount
_didDeferPreventionStatusUpdate
_suzeLeaseSession
_isAutomaticallyRefreshingSuzeLeaseSession
_firstBecomeActivePlayerItemBlock
_currentGlobalTimedMetadataGroups
_flattenedGenericObject
_flattenedMetadataGenericObject
_metadataGenericObject
_itemProperties
_identityPropertiesLoader
_timedMetadataRequest
_timedMetadataResponse
_timedMetadataOperationQueue
_isMusicCellularStreamingAllowed
_isHLSAsset
_didReceiveHLSTimedMetadata
_hlsStreamIdentifier
_isiTunesStoreStream
_streamingKeyCertificateURL
_streamingKeyServerURL
_rtcReportingParentHierarchyToken
_rtcReportingServiceIdentifier
_identityPropertySet
_radioPlayback
_radioStreamPlayback
_subscriptionRequired
_leasePlaybackPreventionState
_leaseStatus
_assetCacheProvider
_assetSourceStoreFrontID
_equivalencySourceAdamID
_genericObject
_jingleTimedMetadata
_mediaLibrary
_siriInitiated
_playbackRequestEnvironment
_stationItemLikedState
_trackInfo
_eventStream
_downloadCompleteSuccessNotification:
_downloadCompleteFailedNotification:
_notifyCompletionHandlerWithSuccess:error:
completionHandler
setCompletionHandler:
initWithAsset:
asset
_asset
_completionHandler
stopDiscovery
_discoverAirplayDevices:
auxiliarySession
setCategory:error:
opaqueSessionID
discoverAirplayDevicesMatchingGroupID:completion:
discoverAirplayDevicesMatchingLogicalDeviceIDs:expectedCount:completion:
discoverAirplayDevicesMatchingUIDs:completion:
discoverRemoteControlEndpointsMatchingUIDs:completion:
waitForCompleteClusters
setWaitForCompleteClusters:
_reconSession
_waitForCompleteClusters
identityStore
initWithIdentityProperties:delegatedIdentityProperties:
getPropertiesForUserIdentity:completionHandler:
identityPropertySetFromRequestContext:completion:
setIdentityProperties:
setDelegatedIdentityProperties:
_identityProperties
_delegatedIdentityProperties
initWithWritingStyle:
setShouldReportPlayActivityEvents:
initWithPlayer:reportingController:
setOffline:
modelSong
displayType
visibleDuration
activeAccountRequestEnvironment
setIdentityPropertiesLoader:
setItemGenericObject:
setModelPlayEvent:
featureName
setFeatureName:
recommendationData
setRecommendationData:
lyricsID
setLyricsID:
newPlayActivityEvent
setEventType:
setItemEndTime:
displayedCharacterCount
setLyricsDisplayedCharacterCount:
language
setLyricsLanguage:
sourceType
setSourceType:
setDisplayType:
recordPlayActivityEvents:forEventSource:
recordLyricsViewEvent:
jinglePlayActivityReportingController
setJinglePlayActivityReportingController:
reportingPlaybackObserver
setReportingPlaybackObserver:
_jinglePlayActivityReportingController
_reportingPlaybackObserver
executeWithUIDs:action:volumeValue:completion:
containsUID:
connectToEndpoint:completion:
setVolume:withUIDs:completion:
increaseVolumeBy:withUIDs:completion:
decreaseVolumeBy:withUIDs:completion:
setDateFormat:
dateFormatter
stringFromDate:
_prefixWithCursor:
payload
subscribeToEventType:handler:
findPreviousEventWithType:matchingPayload:
durationSinceEvent:
integerValue
_logAccountEvent:cursor:
unsignedIntValue
_symbolForCommand:
humanDescription
findPreviousEventWithTypes:matchingPayload:
subscribeToEventStream:
unsubscribeFromEventStream:
subscription
_subscription
infoCenterForPlayerID:
playbackQueueDataSource
implementation
string
appendFormat:
describePlayer:
sharedServerObjectDatabase
initWithRequest:serverObjectDatabase:
sectionedModelObjects
delegationProperties
userIdentity
defaultIdentityStore
DSIDForUserIdentity:outError:
array
sharedRestrictionsMonitor
allowsExplicitContent
needsPersonalization
preferredStoreStringIdentifierForPersonID:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
storeIDs
_resolveContentDescriptorsUsingServerObjectDatabase
genericObjectWithModelObject:
setPlaceholder:
copyWithBlock:
copyWithIdentifiers:propertySet:
initWithModel:personalizationStyle:
setWithCapacity:
_eligibilityForItem:
countForObject:
_playlistEntryForObject:containerUniqueID:
allStoreItemDictionaries
initWithPayload:
_userIdentityWithRequest:
setUserIdentity:
importObjectsFromRequest:options:error:
lastBatchItemIdentifiers
storeItemMetadataForItemIdentifier:
_addEquivalencyForMetadata:requestStoreIdentifier:
isFinalResponse
addObjectsFromArray:
removeAllObjects
totalItemCount
playbackPrioritizedIndexPaths
isPlaceholder
clientIdentifier
setClientIdentifier:
setReason:
setTimeoutInterval:
setRetryDelay:
allowLocalEquivalencies
setAllowLocalEquivalencies:
setPersonalizationStyle:
indexOfObject:
objectAtIndex:
removeObjectAtIndex:
clientInfo
setClientInfo:
setDelegatedUserIdentity:
setUserIdentityStore:
playlistEntry
setContainerUniqueID:
setMovie:
setTvEpisode:
indexSet
orderedSet
_serverObjectFromPlaceholderContentDescriptor:propertySet:
indexPathWithIndex:
_mergedObjectWithRequestedObjectIfNeeded:forIndexPath:
addIndex:
replaceSectionsUsingBlock:
replaceItemsUsingBlock:
item
replaceSectionAtIndex:withObject:
removeItemAtIndexPath:
insertSection:atIndex:
moveItemFromIndexPath:toIndexPath:
shiftIndexesStartingAtIndex:by:
relatedIdentifierSetsForParentIdentifierSet:childKey:
removeObject:
modelObjectMatchingIdentifierSet:propertySet:
insertItem:atIndexPath:
enumerateIndexesUsingBlock:
minusSet:
setAdamID:
setGlobalPlaylistID:
setUniversalCloudLibraryID:
setUniversalStoreIdentifiersWithBlock:
setPersonalStoreIdentifiersWithPersonID:block:
indexAtPosition:
mergeWithObject:
specificAccountWithDSID:
identityAllowingDelegation:
initWithRequest:
unpersonalizedContentDescriptors
handleResponse:
newStoreItemMetadataRequest
equivalencyMapping
_requestUsesSectionedModelObjects
_sod
_personID
_requestPropertySet
_importResults
_allowsExplicitContent
_defaultLibraryPersonalizationStyle
_unknownEndpointLibraryPersonalizationStyle
_equivalencyMapping
_pendingStoreIDs
_failedStoreIDs
_storePersonalizationStyle
_progressiveContentDescriptors
sectionProperties
sectionKind
modelClass
wantsDetailedKeepLocalRequestableResponse
supportsKeepLocalStatusObservation
requiredKeepLocalStatusObservationProperties
itemProperties
propertySetWithProperties:
setResults:
_personalizationResponseDidInvalidateNotification:
isValid
_invalidate
initWithRequest:personalizationResponse:
adamIDData
setAdamIDData:
streamFields
setStreamFields:
setUnpersonalizedContentDescriptors:
_personalizationResponse
_adamIDData
_streamFields
_unpersonalizedContentDescriptors
setTitle:
setArtist:
setAlbum:
isExplicitContent
setExplicitContent:
artworkDictionaries
setArtworkDictionaries:
_explicitContent
_title
_artist
_album
_artworkDictionaries
_contextWithEvent:
sharedAnalytics
monotonicTime
logEventWithType:machAbsoluteTime:context:
cursorUntilEvent:
timeIntervalSinceReferenceDate
deviceActivePlayerPath
stringByReplacingCharactersInRange:withString:
copyWithZone:
responseClass
setPlayerPath:
middlewareClasses
sessionProperties
setSessionProperties:
_playerPath
_sessionProperties
sessionNumberOfPlayerPaths:chain:
sessionNumberOfSessions:forPlayerPathAtIndex:chain:
sessionPlayerPath:atIndex:chain:
sessionMetadataObject:atIndexPath:chain:
initWithRequest:middleware:
builder
chain
initWithModelGenericObject:indexPath:response:
builderProtocol
_items
_controller
addEngineObserver:
isSystemMusicApplication
initWithMachServiceName:
anonymousListener
resume
invalidate
endpoint
_nowPlayingWithItem:
modelObject
setContentItemID:
copyWithIdentifiers:block:
initWithModelObject:
displayIndexForContentItemID:
displayCount
artworkIdentifier
nowPlayingWithItem:itemIdentifier:artworkIdentifier:index:count:
contentItemIDAtIndex:
itemForContentItemID:
mediaRemotePublisher
commandCenter
playItemInQueueCommand
isSupportedAndEnabled
newCommandEventWithCommandType:options:
serverCopy
invokeCommandWithEvent:completion:
setFittingSize:
requestImageWithCompletionHandler:
_player
liveSnapshotWithRate:state:
timebase
snapshotWithElapsedTime:duration:rate:atTimestamp:state:
_timeSnapshotWithElapsedTime:rate:
playbackContext
setQueueEndAction:
currentConnection
auditToken
hasSuffix:
setPlaybackQueueCommand
setActionAfterQueueLoad:
initWithPlaybackContext:
setReplaceIntent:
initWithCommand:playbackQueue:
insertIntoPlaybackQueueCommand
initWithCommand:playbackQueue:options:
playCommand
newCommandEvent
pauseCommand
pauseWithFadeDuration:
nextTrackCommand
changePlaybackPositionCommand
newCommandEventWithPositionTime:
previousTrackCommand
reshuffleCommand
seekForwardCommand
seekBackwardCommand
newSeekCommandEventWithType:
changeRepeatModeCommand
newCommandEventWithType:
currentRepeatType
changeShuffleModeCommand
currentShuffleType
changePlaybackRateCommand
isSupported
newCommandEventWithPlaybackRate:
allowsQueueModifications
setAllowsQueueModifications:
publishIfNeeded
removedItemIdentifiers
removeContentItemID:completion:
insertedDescriptors
addPlaybackContext:atPosition:jumpToIt:userModification:completion:
addPlaybackContext:afterContentItemID:completion:
enumerateKeysAndObjectsUsingBlock:
remoteObjectProxy
setServerTimeSnapshot:
setNowPlaying:
setServerNowPlaying:
isReloadingForPlaybackContextChange
matchesStartItem:
queueDescriptor
setQueueDescriptor:
setServerQueueDescriptor:
autoPlayEnabled
serverPlaybackModeDidChangeAffectingQueue:
serverQueueDidEnd
serverItemDidEnd
processIdentifier
stop
skipWithBehavior:
reshuffle
beginSeekWithDirection:
setRepeatMode:
getRepeatModeWithReply:
setShuffleMode:
getShuffleModeWithReply:
setElapsedTime:completion:
setPlaybackRate:completion:
getNowPlayingWithReply:
getNowPlayingAtIndex:reply:
setNowPlayingItem:itemIdentifier:completion:
getImageForArtworkIdentifier:itemIdentifier:atSize:reply:
getTimeSnapshotWithReply:
getDescriptorWithReply:
setDescriptor:completion:
prependDescriptor:completion:
appendDescriptor:completion:
getUserQueueModificationsDisabledWithReply:
setUserQueueModificationsDisabled:
interfaceWithProtocol:
setExportedInterface:
performQueueModifications:completion:
exportedInterface
protocol
proxyWithObject:protocol:
setExportedObject:
setRemoteObjectInterface:
integerForKey:
listener:shouldAcceptNewConnection:
engine:didChangeAccounts:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
isRunning
startServer
stopServer
systemCache
listener
activeConnections
_queueDescriptor
_preparingDescriptor
_prepareCompletionHandler
_skipWaitingForLikelyToKeepUp
_systemCache
_listener
_activeConnections
mediaRemoteOptions
command
mediaRemoteCommandType
initWithCommand:mediaRemoteType:options:
isLiveRadioStream
prefersHighQualityContent
predicateWithFormat:
radioStreamAssetInfoList
filteredArrayUsingPredicate:
flavor
sortUsingComparator:
streamURL
setAssetURL:
keyServerURL
setStreamingKeyServerURL:
keyCertificateURL
setStreamingKeyCertificateURL:
setITunesStoreStream:
setAllowsAssetInfoCaching:
setIsCloudStreamingAsset:
streamProtocol
setIsHLSAsset:
allowsHLSContent
hlsAssetInfo
playlistURL
alternatePlaylistURL
setAlternateHLSPlaylistURL:
alternateKeyServerURL
setAlternateHLSKeyServerURL:
alternateKeyCertificateURL
setAlternateHLSKeyCertificateURL:
prefersVideoContent
fileAssetInfoList
flavorType
setAssetQualityType:
fileExtension
setAssetPathExtension:
setOnlineSubscriptionKeysRequired:
fairPlayInfoList
purchaseBundleSinfDictionary
setPurchaseBundleDictionary:
protectionType
setAssetProtectionType:
setSuzeLeaseID:
setAllowsAssetCaching:
updateForPlaybackOfFileAsset:fromResponse:
setWillBecomeActivePlayerItemHandler:
allowsAssetInfoCaching
setIsHomeSharingAsset:
setProtectedContentSupportStorageFileURL:
alternateHLSPlaylistURL
_allowsAssetInfoCaching
_isHomeSharingAsset
_isCloudStreamingAsset
_onlineSubscriptionKeysRequired
_iTunesStoreStream
_assetPathExtension
_assetProtectionType
_assetQualityType
_assetURL
_protectedContentSupportStorageFileURL
_purchaseBundleDictionary
_alternateHLSPlaylistURL
_alternateHLSKeyServerURL
_alternateHLSKeyCertificateURL
_suzeLeaseID
_willBecomeActivePlayerItemHandler
setStoreAccountID:
localStoreAccountProperties
setStoreFrontID:
cloudServiceStatusControllerWithUserIdentity:
musicSubscriptionStatus
setHasSubscriptionPlaybackCapability:
sharedLoader
loadReportingIdentityPropertiesWithCompletionHandler:
_calloutQueue
_serialWorkQueue
staticAssets
sharedNetworkPlayabilityMonitor
_allowsCellularPlayback
mediaClip
_currentPreferredStaticAsset
setMediaClip:
previewArtworkCatalog
_isVideoAsset
statusOfValueForKey:error:
tracks
effectiveNetworkTypeForPlayback
requiredMediaClipProperties
initWithMediaClip:
_modelGenericObject
_mediaClip
initWithPlayerID:
setWantsSerializedEventDelivery:
setPlaybackQueueDataSource:
lastSiriPlaybackContextIDForPlayerID:
initWithSuiteName:
_durationAvailableNotification:
_likedStateChangedNotification:
_updateLaunchCommands
sharedCommandCenter
becomeActive
systemRoute
pathWithRoute:mediaRemotePlayerPath:isResolved:
isEngineRestoringState
isQueueHandoffSupported
accountManager
hasLoadedInitialAccounts
hasInitializedSupportedCommands
_performCommandEvent:completion:
hasTargets
removeTarget:action:
addTarget:action:
stopCommand
togglePlayPauseCommand
registerSupportedQueueType:
registerSupportedCustomQueueIdentifier:
prepareForSetPlaybackQueueCommand
setSkipSerializedEventDelivery:
clearUpNextQueueCommand
skipForwardCommand
setPreferredIntervals:
skipBackwardCommand
bundleWithIdentifier:
localizedStringForKey:value:table:
likeCommand
setLocalizedTitle:
setLocalizedShortTitle:
dislikeCommand
setInitializedSupportedCommands:
_updateSupportedCommands
boolForKey:
removeObjectForKey:
componentsJoinedByString:
getPendingCommandTypesWithCompletion:
invalidatePlaybackQueue
setPlaybackState:
setCurrentRepeatType:
setCurrentShuffleType:
changeQueueEndActionCommand
setCurrentQueueEndAction:
isEqualToArray:
isActiveAccount
hasCatalogPlaybackCapability
startDate
token
endDate
timeIntervalSinceDate:
setModelSong:
setVisibleDuration:
reportingController
delegate
engine:prepareForActivationWithCompletion:
initWithDeallocHandler:
disarm
engine:didFailToActivateWithError:resolution:
contextID
fallbackPlaybackIntent
commandID
getPlaybackContextWithCompletion:
containsTransportableContent
isCurrentItemFromAutoPlay
accountForDSID:
hasCloudLibraryEnabled
hashedDSID
componentsSeparatedByString:
setEnabled:
_supportedSessionTypes
setPlaybackSessionCommand
setSupportedSessionTypes:
preloadPlaybackSessionCommand
updateLaunchCommandsWithConfigurationHandler:
uniqueIdentifier
setCurrentPlaybackSessionIdentifier:
setCanBeControlledByScrubbing:
canSkipItem:
isTailPlaceholder
createRadioStationCommand
userCanChangeShuffleAndRepeatType
advanceRepeatModeCommand
advanceShuffleModeCommand
shuffleType
userCanEnableAutoPlay
setSupportedQueueEndActions:
supportedInsertionPositions
setSupportedInsertionPositions:
reorderQueueCommand
removeFromPlaybackQueueCommand
disableQueueModificationsCommand
_exportableSessionTypes
setExportableSessionTypes:
sessionManager
stagedQueueControllerIdentifiers
setPriorityForPlaybackSessionCommand
setPreloadedSessions:
discardPlaybackSessionCommand
stationAllowsItemLiking
setPresentationStyle:
likedState
setActive:
ratingCommand
stringByAppendingFormat:
isNegative
interfaceID
_mediaRemoteCommandInfoOptions
isMediaServerAvailable
_enqueueFallbackIntentIfNeededForCommandEvent:completion:
_becomeActiveIfNeededWithCompletion:
isAd
defaultMediaLibrary
setPersistentID:
setLibraryIdentifiersWithDatabaseID:block:
firstContentItemIDForItemIntersectingIdentifierSet:
setContainedPersistentID:
jumpToContentItemID:
isRequestingDefermentToPlaybackQueuePosition
positionTime
playbackQueue
privateListeningOverride
setPrivateListeningOverride:
setSiriReferenceIdentifier:
insertionPosition
insertAfterContentItemID
addPlaybackContext:atPosition:completion:
stringWithUTF8String:
insertBeforeContextItemID
moveContentItemID:beforeContentItemID:completion:
insertAfterContextItemID
moveContentItemID:afterContentItemID:completion:
setRepeatType:
preservesRepeatMode
setMusicRepeatType:
setShuffleType:
preservesShuffleMode
setMusicShuffleType:
queueEndAction
setAutoPlayEnabled:
preservesQueueEndAction
setAutoPlayEnabled:forUserIdentity:
accountForUserIdentity:
prepareForPlaybackWithAccount:completion:
replaceIntent
hasUserMutations
verifyWithError:
supportsAccountRectification
setPlaybackRequestEnvironment:
rectifiedPlaybackRequestEnvironmentForAccountManager:reasons:
setLastSiriPlaybackContextID:forPlayerID:
setCanStealLeaseIfNeeded
addPlaybackContext:atPosition:jumpToIt:completion:
shouldBecomeActive
stationURL
radioPlaybackIntentWithStationURL:
setPlayActivityFeatureName:
isRequestingPlaybackInitialization
_playbackStateIsIdle:
radioPlaybackIntentFromSong:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
playbackSessionData
decodedObjectOfClass:fromData:error:
_emitEventsForPlaybackBehaviorChange
infoCenter
invalidatePlaybackQueueWithCompletion:
finalizeStateRestorationWithAccountManager:completion:
stageQueueController:forIdentifier:
queueControllerForIdentifier:
unstageQueueControllerForIdentifier:
durationIsValid
durationInSeconds
interval
setLikedState:forUserIdentity:
rating
clearUpNext
playbackRate
reportUserBackgroundedApplication
getShouldRestoreStateWithCompletion:
nowPlayingInfoCenter:didBeginLyricsEvent:
nowPlayingInfoCenter:didEndLyricsEvent:
_disableQueueModificationsChangedNotification:
setEngineRestoringState:
setMediaServerAvailable:
_libraryAddStatusObserver
_lastContextID
_accounts
_activeAccountAllowsSubscriptionPlayback
_activeAccountStoreFrontIdentifier
_ipodDefaults
_hasBeganFastForward
_hasBeganRewind
_initializedSupportedCommands
_engineRestoringState
_mediaServerAvailable
_infoCenter
_commandCenter
isPlaceholderItemForContentItemID:
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
contentItemIDsFromOffset:toOffset:nowPlayingIndex:
updateLocationDependentPropertiesForItem:
progressWithTotalUnitCount:
nowPlayingInfoCenter:artworkCatalogForContentItem:
setCompletedUnitCount:
artworkCatalogForPlaybackTime:
encodedDataWithRootObject:userInfo:error:
responseWithIdentifier:sessionType:data:
beginIgnoringLeaseEndEventsForReason:
endIgnoringLeaseEndEventsForReason:
playbackQueueIdentifierForNowPlayingInfoCenter:
nowPlayingInfoCenter:contentItemIDForOffset:
nowPlayingInfoCenter:contentItemForID:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
nowPlayingInfoCenter:willBeginSessionMigrationWithIdentifier:
nowPlayingInfoCenter:didEndMigrationWithIdentifier:error:
nowPlayingInfoCenter:infoForContentItem:completion:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
contentItemForOffset:
substringToIndex:
requestedProperties
initWithRequestedProperties:
properties
containsObject:
storePlatformMetadata
genericObjectForStorePlatformMetadata:userIdentity:
storeAdamID
formerStoreAdamIDs
setFormerAdamIDs:
offerWithType:
setSubscriptionAdamID:
setTrackNumber:
setTrackCount:
setBookmarkTime:
setHasBeenPlayed:
setShouldRememberBookmarkTime:
setUserPlayCount:
setStartTime:
setStopTime:
setStoreUbiquitousIdentifier:
setPlaybackPosition:
genericObjectForRadioStationTrack:containerUniqueID:userIdentity:
_storePlatformBuilder
_requestedSongProperties
_requestedProperties
assetLoadProperties
fileAsset
qualityType
itemIdentifiers
initWithFileAsset:sourceItemIdentifiers:
setSourceItemIdentifiers:
fileExistsAtPath:isDirectory:
purchaseBundleFilePath
initWithContentsOfFile:
propertyListWithData:options:format:error:
fileURLWithPath:isDirectory:
pathExtension
clearPlaybackAssetCacheFileAssetForGenericObject:withCompletionHandler:
requirePreferredAssetQuality
responseHandler
_requirePreferredAssetQuality
_assetLoadProperties
_responseHandler
mediaPlaybackCoreBundle
dataUsingEncoding:
bytes
isNSArray__
isNSDictionary__
_stateDumpObject
propertyList:isValidForFormat:
getRemotePlaybackQueueRepresentationWithCompletion:
musicShuffleType
itemKind
mpc_remotePlaybackQueueRequiredProperties
setSectionProperties:
setLabel:
startItemIdentifiers
playActivityFeatureName
mpc_protoContainerRepresentation
identifierSet
setDelegateInfoID:
intersectsSet:
setContainerIndex:
setItemIndex:
mpc_protoItemRepresentation
setItems:
setContainers:
setStartingItemIndexPath:
addDelegationUUIDs:forUserIdentity:completionHandler:
currentDeviceDelegateInfo
setUuid:
addAccountInfo:
getDelegationUUIDsForUserIdentity:completionHandler:
data
initWithIdentifier:data:
setRequestingImmediatePlayback:
playActivityRecommendationData
initWithData:encoding:
setSiriRecommendationIdentifier:
setAccountInfo:
seedContentReference
ICRadioContentReference
setSeedContentReference:
nowPlayingContentReference
setNowPlayingContentReference:
setRadioStationID:
absoluteString
setRadioStationURLString:
setContainerType:
originalIdentifierSet
setStoreAdamID:
setIdentifierSet:
setCloudID:
globalPlaylistID
setStorePlaylistGlobalID:
setCloudUniversalLibraryID:
cloudVersionHash
setStorePlaylistVersionHash:
setMediaType:
setStoreSubscriptionAdamID:
shouldExcludeFromShuffle
setExcludeFromShuffle:
identifierList
autoPlayIdentifierList
_stateDictionaryIncludingIdentifierList:
_initWithMediaLibrary:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
_highQualityCachedAssetDestinationDirectoryForMediaLibrary:
_lowQualityCachedAssetDestinationDirectoryForMediaLibrary:
lowercaseString
stringByAppendingPathComponent:
stringByAppendingPathExtension:
setWithObjects:
valuesForProperties:
setShouldLibraryAdd:
setModelObjects:
ml3Library
autoupdatingSharedLibrary
pathForResourceFileOrFolder:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
deviceLibraryProviderWithUserIdentity:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeInteger:forKey:
_copyWithClass:zone:
allocWithZone:
initWithStoreAccountID:deviceGUID:privateListeningStateSource:
supportsSecureCoding
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
deviceGUID
deviceName
systemReleaseType
requestUserAgent
timeZone
_deviceGUID
_deviceName
_privateListeningStateSource
_systemReleaseType
_requestUserAgent
_storeAccountID
_timeZone
setDeviceGUID:
setDeviceName:
setPrivateListeningStateSource:
setRequestUserAgent:
setSystemReleaseType:
setTimeZone:
insertString:atIndex:
tracklistDataSourceForSource:
tracklistDataSource
setPlayActivityRecommendationData:
siriAssetInfo
setSiriAssetInfo:
siriReferenceIdentifier
getPlaybackContextForIntent:withCompletion:
route
isDeviceRoute
archivedDataWithRootObject:requiringSecureCoding:error:
_mediaRemotePlaybackQueue
initWithName:
dateWithTimeIntervalSinceNow:
setExpirationDate:
sharedService
addAssertion:
queueFeederClass
nowPlayingInfo
genericObjectRepresentation
generateNowPlayingContentItemWithMetadataObject:
artworkCatalogForMetadataModelObject:
getRepresentativeMetadataForPlaybackContext:completion:
preferredArtworkSize
supplementalPlaybackContextBehavior
supplementalPlaybackContextWithReason:
encodedDataWithRootObject:error:
reloadSection:completion:
section:supportsShuffleType:
section:shouldShuffleExcludeItem:
loadPlaybackContext:completion:
itemForItem:inSection:
supportsAutoPlayForItem:inSection:
containsLiveStream
itemDidBeginPlayback:
shouldRequestAdditionalItemsWhenReachingTailOfSection:
prefetchThresholdForSection:
shouldUsePlaceholderForItem:inSection:
loadAdditionalItemsWithRequest:forSection:completion:
placeholderItemForLoadingAdditionalItemsInSection:
firstItemIntersectingIdentifierSet:
supportsAutoPlay
subtitle
initWithTitle:subtitle:artworkImageData:
mainBundle
bundleIdentifier
initWithType:sessionIdentifier:data:dataType:bundleIdentifier:supportedOptions:displayProperties:
setTracklistToken:
setTracklistSource:
setContinueListeningStation:
referenceWithMPModelObject:
radioPlaybackIntentFromReference:
setRadioStation:
setStationStringID:
setRadioIdentifiersWithBlock:
setRadioStationURL:
setSubtitle:
playlist
number
stringValue
podcast
author
podcastEpisode
curator
socialPerson
tracksTiledArtworkCatalogWithRows:columns:
editorialArtworkCatalog
intentFromQueueDescriptor:
continueListeningRadioPlaybackIntent
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
radioPlaybackIntentWithStation:
radioPlaybackIntentWithStationStringID:
getRemotePlaybackQueueRepresentationWithPlayerPath:completion:
getRemotePlaybackQueueDataWithCompletion:
getNowPlayingInfoWithArtworkCatalogConfiguration:artworkHandler:completion:
getArchiveWithConfiguration:completion:
localizedTitle
tracklistSource
tracklistToken
shuffleMode
repeatMode
prefersEnqueuingUsingAirPlay
setPrefersEnqueuingUsingAirPlay:
_resolvedTracklistDataSource
_prefersEnqueuingUsingAirPlay
_localizedTitle
_tracklistSource
_tracklistToken
_actionAfterQueueLoad
_shuffleMode
_repeatMode
_playActivityFeatureName
_playActivityRecommendationData
_siriAssetInfo
_siriReferenceIdentifier
playbackSessionType
decodedObjectOfClasses:fromData:error:
containsAppleMusicRadioContent
setStationHash:
setStationID:
setBeats1:
descriptionText
setEditorNotes:
setShortEditorNotes:
setHasExplicitContent:
artworkInfo
responseArray
artworkURL
artworkRequestTokenForStorePlatformArtworkValue:
sharedStoreArtworkDataSource
initWithToken:dataSource:
setArtworkCatalogBlock:
allowsItemLiking
setAllowsItemLiking:
attributionLabel
setAttributionLabel:
setType:
setSubtype:
providerResource
setProviderUniversalLink:
setProviderBundleIdentifier:
modelRadioStationForMetadata:
_requestedRadioStationProperties
resolvedPlayerPath
isInProcess
playerRequest
initWithName:object:handler:
setPlayerRequest:
_playerRequest
lastRecordedPlayEvent
meetsPlaybackHistoryThreshold
setPlayEvent:
setAllowsStoreContainerImport:
operationQueue
setOperationQueue:
setLastRecordedPlayEvent:
_operationQueue
_lastRecordedPlayEvent
playbackState
setPlaybackStateFuture:
playbackStateFuture
setPlayerState:
initWithMiddleware:
_playbackStateFuture
hasLoadableAsset
completion
configurator
configurePlayerItem:
setRepeatIndex:
setPrefersSeekOverSkip:
initWithPlayerItem:configurator:delegate:token:callbackQueue:completion:
main
callbackQueue
_item
_delegate
_configurator
_token
_completion
_callbackQueue
loadingQueue
cancelAllOperations
loadAssetFor:token:completion:
cancelLoading
_loadingQueue
artworkProperties
initWithIdentifier:artworkProperties:artworkIdentifier:
stringRepresentation
_identifier
_artworkIdentifier
_artworkProperties
valueWithCGSize:
sizeInfo
bestArtworkSizes
hasMaxSupportedSize
systemConfiguration
mediaLibraryArtworkType
supportedSizesForMediaType:artworkType:
allObjects
maxSupportedSize
supportedSizes
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
_urlForCatalog:size:
requestWithURL:cachePolicy:timeoutInterval:
sharedDataSource
areRepresentationsAvailableForCatalog:
supportedSizesForCatalog:
requestForCatalog:size:
getExportableArtworkPropertiesForCatalog:completionHandler:
cacheKeyForCatalog:size:
initWithCapacity:
CGSizeValue
assistantStreamingGetAvailability:
assistantRadioGetAvailability:completion:
hasLoadedRadioAvailability
isRadioAvailable
getRadioAvailabilityWithCompletionHandler:
assistantStreamingGetAvailability
assistantRadioGetAvailability:
origin
objectForInfoDictionaryKey:
applicationProxyForIdentifier:
shortVersionString
bundleVersion
MPC_storeFrontIdentifierKey
setShouldRequireCachedResults:
defaultInfo
setClientVersion:
setShouldIgnoreExpiration:
sharedStoreItemMetadataRequestController
cacheMissItemIdentifiers
getStoreItemMetadataForRequest:responseHandler:
initWithRequestedPropertySet:
setShouldUsePlaylistEntry:
modelObjectWithStoreItemMetadata:userIdentity:
MPC_modelObjectWithStoreFrontLocalEquivalentModelObject:
setOverridePlayingItem:
setPlayingItemIndexPath:
overridePlayingItem
playingItemIndexPath
setPurchasedAdamID:
setCloudAlbumID:
hasLoadedValueForKey:
isLibraryAddEligible
setLibraryAddEligible:
setPlaylistEntry:
setSeason:
rangeOfString:
performRequest:options:completion:
requestWithCommandRequests:
setOptions:
performWithCompletion:
initWithCommandRequests:
options
blockOperationWithBlock:
initWithCommandRequest:options:
addDependency:
performRequest:completion:
commands
setCommands:
_options
_commands
initWithMediaRemoteCommand:options:playerPath:label:
initWithMediaRemoteCommand:options:controller:label:
setCommandOptionValue:forKey:
userInitiatedOptions
setUserInitiatedOptions:
_command
_userInitiatedOptions
_label
dependencies
sendCommand:options:completion:
sendCommand:options:toPlayerPath:completion:
resolveWithRouteResolvedHandler:completion:
lightweightPersonalizationPropertiesForModelClass:
propertySetByIntersectingWithPropertySet:
isEmpty
arrayByAddingObjectsFromArray:
setTracklistRange:
setPlayingItemProperties:
setQueueSectionProperties:
setQueueItemProperties:
disablePlaybackStateValidation
setDisablePlaybackStateValidation:
disablePlaybackRateValidation
setDisablePlaybackRateValidation:
setPreferredFallbackItemRelationship:
_disablePlaybackStateValidation
_disablePlaybackRateValidation
_playingItemProperties
_queueSectionProperties
_queueItemProperties
_preferredFallbackItemRelationship
_tracklistRange
initWithResponse:
_commandRequestForMediaRemoteCommand:
tracklist
setVideoView:
videoOutput
setVideoOutput:
_tracklist
_videoOutput
initWithPlayerPath:
response
_response
decodeBoolForKey:
encodeBool:forKey:
setStationURL:
continueListeningStation
continueListeningMaxQueueReferences
setContinueListeningMaxQueueReferences:
continueListeningPrefetchThreshold
setContinueListeningPrefetchThreshold:
continueListeningQueueProvider
setContinueListeningQueueProvider:
descriptionComponents
isEqualToIdentity:inStore:
requestEnvironmentWithUserIdentity:
overrideValue
setOverrideValue:
_continueListeningStation
_userIdentity
_continueListeningQueueProvider
_continueListeningMaxQueueReferences
_continueListeningPrefetchThreshold
_nowPlayingContentReference
_seedContentReference
_stationURL
processInfo
processName
initWithSessionInfo:userInfo:frameworksToCheck:
_reportingSessionWithToken:serviceIdentifier:
kindWithVariants:
kindWithSongKind:
kindWithKinds:
kindWithVariants:playlistEntryKind:options:
kindWithRelationshipKinds:
setItemKind:
setSectionKind:
deleteCharactersInRange:
appendString:
initWithRequest:responseHandler:
decodeObjectOfClasses:forKey:
isSubclassOfClass:
requiresNetwork
shouldBatchResultsWithPlaceholderObjects
setShouldBatchResultsWithPlaceholderObjects:
setWantsDetailedKeepLocalRequestableResponse:
rtcReportingPlayQueueSourceIdentifier
previousResponse
setSectionedModelObjects:
setStoreIDs:
setPlaybackPrioritizedIndexPaths:
_shouldBatchResultsWithPlaceholderObjects
_wantsDetailedKeepLocalRequestableResponse
_allowLocalEquivalencies
_previousResponse
_clientIdentifier
_sectionedModelObjects
_storeIDs
_playbackPrioritizedIndexPaths
_MPCErrorWithDomain:code:underlyingError:debugDescriptionFormat:arguments:
initWithFormat:arguments:
_allowsExplicitContentDidChangeNotification:
_activeUserDidChangeNotification:
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
timeIntervalSinceNow
equivalencySourceStoreAdamIDForLocalStoreAdamID:
setInvalidationDate:
setFinalResponse:
isInvalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
setLocalStoreAdamIDToEquivalencySourceStoreAdamIDMap:
invalidationDate
_invalidationTimer
_finalResponse
_invalidForPersonalization
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_invalidationDate
initWithDomain:code:userInfo:
assetSourceStorefrontID
isFollowUp
householdID
setHouseholdID:
storefrontID
_allowsHLSContent
_prefersVideoContent
_prefersHighQualityContent
_followUp
_assetSourceStorefrontID
_fileAsset
_homeSharingAsset
_itemIdentifiers
_storeAsset
_accountID
_delegatedAccountID
_householdID
_storefrontID
controllerForPlayerPath:
setControllerFuture:
setController:
initWithMiddleware:playerPath:
_controllerFuture
dateWithTimeIntervalSince1970:
defaultTimeZone
stringFromDate:timeZone:formatOptions:
dateWithTimeIntervalSinceReferenceDate:
initWithType:payload:monotonicTime:identifier:
monotonicDate
monotonicTimeNanoSeconds
machAbsoluteTime
_type
_payload
_machAbsoluteTime
_monotonicTime
supportedCommands
setSupportedCommandsFuture:
supportedCommandsFuture
setSupportedCommands:
_supportedCommandsFuture
registerReturnType:returnValueBlock:
operationsForSessionRequest:
pathByAppendingPlayerIDSuffix:
playerState
skippedMetadata
_skippedMetadata
_queueContentItems
_queueModelObjects
_supportedCommands
_playingIndexPath
_queueIdentifier
_playerState
_supportedCommands:infoValueForKey:
unsignedIntegerValue
commandInfoForCommand:
isLoading
elapsedTime
_playbackRateForContentItem:
defaultPlaybackRate
isAlwaysLiveItem
localizedDurationString
editingStyleFlags
auxiliaryNowPlayingInfo
availableLanguageOptions
currentLanguageOptions
_mediaRemoteContentItem
mpc_isAirplayDeviceBusyError
mpc_isRentalContentRequiresDownloadError
mpc_isAirplayStreamingNotSupportedError
mpc_isQueueLoadingFailure
mpc_isAssetUnavailableFailure
mpc_isUnrecoverableAssetLoadingError
setLastItemUsedForErrorResolution:
failedItemsIdentifiers
externalPlaybackRouter
pickBestDeviceRoute
lastItemUsedForErrorResolution
_playbackFailedWithError:item:canResolve:proposedResolution:completion:
hasPerformedErrorResolution
setHasPerformedErrorResolution:
_resolutionForPlaybackError:item:
engine:didFailToPlayFirstItem:withError:
isStartItem
engine:didFailToPlayItem:withError:
setFailedItemsIdentifiers:
setExternalPlaybackRouter:
_failedItemsIdentifiers
_externalPlaybackRouter
_lastItemUsedForErrorResolution
forErrorResolution:
cancellationHandler
operationType
subscriptionLeaseSession
assetsWithMiniSINFsMatchingIdentifierSet:
isDelegatedLeaseSession
miniSINF
initWithFileAssetResponseDictionary:
setExpectedProtectionType:
initWithiTunesCloudStoreFileAssetInfo:
setFileAssetInfoList:
setStoreCloudID:
setStorePurchasedAdamID:
setCancellationHandler:
_handlePlaybackResponse:withPlaybackCacheRequest:error:
initWithRequestContext:storeSubscriptionAdamID:
assetExpirationDate
setDialogDictionary:
fileAssets
hlsAsset
initWithiTunesCloudStoreHLSAssetInfo:
setHlsAssetInfo:
addCachedResponse:forRequest:
_cancellationHandler
_operationType
_requestContext
setRequestingBundleIdentifier:
setRequestingBundleVersion:
_addRequestingBundleIdentifierToPlaybackRequestEnvironment:
query
setLegacyMediaQuery:
startItem
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
setStartItemIdentifiers:
startTimes
setStartTimeModifications:
endTimes
setEndTimeModifications:
startItemID
storeItemID
playParametersQueue
itemID
startItemPlayParameters
localizedName
playbackArchive
soundCheckEnabled
_equivalencySourceAdamIDForIdentifierSet:
_sectionedModelObjectsRepresentationForSectionedCollection:
firstSection
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
enumerateSectionIdentifiersUsingBlock:
_supplementalLibraryRequest
setSkipEncodingMediaLibraryUniqueID:
indexForItem:
identifierRegistryWithExclusiveAccessReturningInteger:
indexPathForGlobalIndex:
setPlaylist:
itemAtIndex:
identifierRegistryWithExclusiveAccessReturningObject:
mqf_requiredItemPlaybackProperties
copyWithPropertySet:
performSuppressingChangeNotifications:
lock
modelResponse
identifierSetAtIndex:
identifiersForItemAtIndexPath:
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
identifierRegistryWithExclusiveAccess:
applyChanges:identifierSetLookupBlock:
applyChanges:itemLookupBlock:
indexPathForItemWithIdentifiersIntersectingSet:
globalIndexForIndexPath:
unlock
updateSection
_beginBackgroundTaskAssertion
_endBackgroundTaskAssertion
fallbackSectionRepresentation
siriWHAMetricsInfo
setSiriWHAMetricsInfo:
startTimeModifications
endTimeModifications
assetStoreFronts
mqf_requiredSectionPlaybackProperties
setModelRequest:
setNeedsReload
enumerateItemIdentifiersUsingBlock:
beginAutomaticResponseLoading
MPC_consumeSiriAssetInfo:withCompletion:
weakObjectsHashTable
setFeeder:
identifierSetForItem:
beginBackgroundTaskWithName:expirationHandler:
allowedSectionIdentifiers
modelKind
setAllowedSectionIdentifiers:
allowedItemIdentifiers
setAllowedItemIdentifiers:
scopedContainers
setScopedContainers:
requiredPropertiesForStaticMediaClips
rtcReportingSessionAdditionalUserInfo
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
applyVolumeNormalizationForItem:
updatedPlaybackContext
setFallbackSectionRepresentation:
_diffQueue
_diffLock
_activeModelGenericAVItems
_assetStoreFronts
_backgroundTaskIdentifier
_backgroundTasks
_endTimeModifications
_loadingCompletionHandler
_requestController
_rtcReportingPlayQueueSourceIdentifier
_isSiriInitiated
_startItemIdentifiers
_startTimeModifications
_section
_playbackContext
_fallbackSectionRepresentation
mqf_newPlaybackItemMetadata
mqf_configurePlaybackItemMetadata:
mqf_playbackItemMetadataModelObject
requiredProperties
setEpisode:
episode
initWithRadioStationTracks:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
setRepresentedObjects:
initWithStartHandler:
_radioStationTracks
representedObjectResults
setRadioStationTracks:
radioStationTracks
originalPlaybackContext
supplementalPlaybackContext
replaceIdentifierRegistry:
containsRestorableContent
msv_userInfo
shouldRequestAdditionalItemsAtTail
_buildPlaceholder
_inLock_buildPlaceholder
setTailPlaceholder:
shouldAddOriginalPlaybackContextAfterReplacement
prefetchThreshold
shouldShowPlaceholderAtTail
loadAdditionalItemsIfNeededWithRequest:completion:
tailPlaceholderItem
updatePlaybackContext
dataSource
setState:
isFrozen
setFrozen:
preferredStartItemIdentifier
stateLock
_supportedMethods
_frozen
_stateLock
_tailPlaceholderItem
_dataSource
_originalPlaybackContext
_sectionIdentifier
_preferredStartItemIdentifier
_supplementalPlaybackContextBehavior
_supplementalPlaybackContext
_handleItemResumeEvent:cursor:
_handleItemPositionJumpEvent:cursor:
_handleItemPauseEvent:cursor:
_handleItemEndEvent:cursor:
_handleItemMetadataPingEvent:cursor:
setEventDate:
setEndReasonType:
countOfPreviousEventsWithType:matchingPayload:
setReasonHintType:
_updatePAFEvent:withItemBeginEvent:containerBeginPayload:cursor:
_updatePAFEvent:withQueueAddEvent:queueSectionIdentifier:cursor:
_updatePAFEvent:withDeviceInfoFromCursor:
_getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:cursor:
setItemStartTime:
setTimedMetadata:
setItemDuration:
_clampTimeValuesForPAFEvent:withDuration:
_finalizePAFEvents:
_findRecentPlaybackStartFromTypes:matchingPayload:cursor:
_generateAggregateNoncatalogEndEventForCursor:
enumeratePreviousEventsWithType:usingBlock:
cursorFromEvent:untilEvent:
enumeratePreviousEventsWithTypes:matchingPayload:usingBlock:
setItemType:
_updatePAFEvent:withAccountIdentifier:cursor:
enumeratePreviousEventsWithTypes:usingBlock:
setBuildFeatures:
setCloudPlaylistID:
setPlaylistVersionHash:
setContainerIDs:
setRadioAdamID:
radioAdamID
setItemIDs:
setSBEnabled:
setPrivateListeningEnabled:
setBuildVersion:
intValue
setRepeatPlayMode:
setShufflePlayMode:
setAutoPlayMode:
systemTimeZone
setEventTimeZone:
itemStartTime
itemEndTime
initWithIdentity:
valueForBagKey:
eventType
endReasonType
reasonHintType
containerType
numberWithInt:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
radioPlayActivityEvents
playActivityController
_radioPlayActivityEvents
_playActivityController
_init
initWithQueue:
finishWithValue:
_shouldRegisterForNotifications
playbackStateCacheState
supportedCommandsCacheState
playQueueIdentifiersCacheStateForRange:
playQueueIdentifiersForRange:
playingIdentifierCacheState
contentItemCacheStateForIdentifier:
contentItemArtworkCacheStateForIdentifier:size:
contentItemArtworkForContentItemIdentifier:artworkIdentifier:size:
invalidateAllTokens
_contentItemForIdentifierFuture
_contentItemArtworkForIdentifierFuture
initWithContextID:
createRemotePlaybackQueue
supportedOnCurrentPlatform
shouldOverrideManuallyCuratedQueue
setShouldOverrideManuallyCuratedQueue:
shouldImmediatelyStartPlayback
setShouldImmediatelyStartPlayback:
siriRecommendationID
setSiriRecommendationID:
homeKitUserIdentifier
setHomeKitUserIdentifier:
_shouldOverrideManuallyCuratedQueue
_shouldImmediatelyStartPlayback
_contextID
_siriRecommendationID
_featureName
_siriWHAMetricsInfo
_homeKitUserIdentifier
initWithContextID:query:
protobufferEncodableObjectFromLibrary:
multiverseIdentifier
queryQueueWithContextID:query:
setFirstItem:
_query
_firstItem
_shuffleType
initWithContextID:stationStringID:
radioQueueWithContextID:stationStringID:
_stationStringID
initWithContextID:storeItemIDs:collectionIdentifierSet:
storeTracklistQueueWithContextID:storeItemIDs:collectionIdentifierSet:
storeItemIDs
collectionIdentifierSet
_storeItemIDs
_collectionIdentifierSet
initWithContextID:seedTrack:
geniusQueueWithContextID:seedTrack:
seedTrack
_seedTrack
initWithContextID:identifier:customData:
customData
customDataQueueWithContextID:identifier:customData:
_customData
initWithModelGenericObject:sectionIndex:response:
remove
isAutoPlaySection
metadataObject
_autoPlaySection
_metadataObject
initWithRoute:bundleID:playerID:
initWithDeviceUID:bundleID:pid:playerID:
pathWithRoute:bundleID:playerID:
initWithRoute:bundleID:pid:playerID:
bundleID
decodeInt32ForKey:
encodeInt32:forKey:
representedBundleID
lastObject
initWithEndpoint:
initWithExternalDevice:
setConnection:
connection
externalDevice
isConnected
isInvalidated
connectWithUserInfo:completion:
systemMusicPathWithRoute:playerID:
pathWithDeviceUIDs:bundleID:pid:playerID:
pathWithDeviceUID:bundleID:pid:playerID:
pathWithCustomOrigin:bundleID:playerID:
isFullyResolved
isSystemMusicPath
representedBundleDisplayName
resolveWithCompletion:
mediaRemotePlayerPath
deviceUID
isResolved
_pid
_resolved
_bundleID
_playerID
_mediaRemotePlayerPath
_deviceUID
_route
_snapshotAccount:eventType:atTime:
_devicePrivateListeningDidChange:
_applicationWillTerminate:
_snapshotDeviceWithEvent:nudge:
_snapshotNetworkReachabilityWithEvent:nudge:
_snapshotNetworkTypeWithEvent:nudge:
subscribeToEventType:options:handler:
_snapshotAccount:eventType:event:nudge:
removeObserver:
removeEngineObserver:
_snapshotNetworkReachabilityAtTime:
_snapshotNetworkTypeAtTime:
_snapshotDeviceAtTime:
accountForHashedDSID:
lastKnownHouseholdID
isPrivateListeningEnabled
isDevicePrivateListeningEnabled
deviceModel
clientVersion
productPlatform
productVersion
buildVersion
isRemoteServerReachable
isCurrentNetworkLinkHighQuality
referenceWithMPModelObject:containerModelPlayEvent:
mpc_radioContentReference
containerID
setContainerID:
initWithStoreIdentifier:trackInfo:
referenceWithStoreIdentifier:trackInfo:
initWithICRadioContentReference:
referenceModelObjectIdentifiers
_ICRadioContentReference
_referenceModelObjectIdentifiers
setAlbumName:
setRepresentativeCloudIdentifier:
setStoreIdentifier:
setArtistName:
setKind:
setAlbumArtistName:
discCount
setDiscCount:
isCompilation
setCompilation:
setYear:
setComposerName:
setCopyright:
discNumber
setDiscNumber:
fileSize
setFileSize:
setGenreName:
setDuration:
setStoreAdamIdentifier:
setStoreCloudIdentifier:
playbackIntentWithStartItemIdentifiers:
setParentReportingController:
isValidReportingEvent
_recordReportingEvents:
parentReportingController
childReportingControllers
addChildReportingController:
recordReportingEvents:
removeChildReportingController:
_childReportingControllers
_parentReportingController
future
setFuture:
_future
weakToStrongObjectsMapTable
_onQueue_finalize
objectEnumerator
result
isFinalized
debugLabel
setDebugLabel:
accessQueue
calloutQueue
successBlocks
failureBlocks
completionBlocks
invalidBlocks
_finalized
_invalid
_result
_error
_debugLabel
_successBlocks
_failureBlocks
_completionBlocks
_invalidBlocks
initWithUnpersonalizedContentDescriptors:
setProperties:forItemAtIndexPath:
musicEQPreset
_setupNotifications
resetBookkeeping
setupPlaybackInfo
defaultEQPresetType
setupEQPresetWithDefaultPreset:
audioAnalyzer
_playbackUserDefaultsEQPresetDidChangeNotification:
setDefaultEQPresetType:
stackController
_defaultEQPresetType
_stackController
setFetchAvailableRoutesSynchronously:
routingController
pickedRoute
hasProtectedContent
playbackMode
externalScreenType
canAccessRemoteAssets
usesAudioOnlyModeForExternalPlayback
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
routeSubtype
setUsesAudioOnlyModeForExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setAllowsExternalPlayback:
isAppleTVRoute
setExternalDisplay:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
configureExternalPlaybackForPlayer:queueItem:
_routingController
_applicationWillTerminateNotification:
reportingEventType
playActivityEvent
shouldReportToStore
eventDate
_captureNonCatalogAggregatePlayActivityEventWithNonCatalogAggregateEndTime:
isSBEnabled
storeFrontID
isOffline
_clearNonCatalogAggregatePlayActivityEventData
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
acquirePendingPlayActivityEventsForStoreAccountID:completionHandler:
shouldReportPlayActivityEvents
_accessSerialQueue
_nonCatalogAggregatePlayDuration
_nonCatalogAggregateStartTime
_nonCatalogDeviceName
_nonCatalogOffline
_nonCatalogSBEnabled
_nonCatalogStoreAccountID
_nonCatalogBuildVersion
_nonCatalogStoreFrontID
_nonCatalogSourceType
_shouldReportPlayActivityEvents
_handleDidEnterBackgroundNotification:
_handleDidReceiveMemoryWarningNotification:
_handleWillEnterForegroundNotification:
artworks
scaledFittingSize
bestArtworkForPixelSize:
representationSize
pixelSize
cachedImageDataForRadioArtwork:MIMEType:
destinationScale
mainScreen
scale
imageWithData:scale:
representationWithSize:image:
_cacheArtworkRepresentation:forKey:
requestWithURL:
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
CGImage
loadImageForRadioArtwork:withCompletionHandler:
isSuspendedUnderLock
_setCacheSize:preserveExisting:
_clearCache
initWithMaximumCapacity:
allKeys
sharedRadioArtworkDataSource
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_backgroundCacheSize
_cacheSize
_cachedArtworkRepresentations
_cachedArtworkRepresentationsAccessQueue
_resumeToForegroundCacheSize
createPlayerPath
initWithReturnStatuses:error:
outputDeviceUIDs
numberWithUnsignedInteger:
setDevicesControlled:
_sendCommand:withOptions:toEndpoint:toDestination:completion:
singleGroup
_formGroupAndSendCommand:withOptions:toExternalDestination:completion:
outputGroups
_sendCommand:path:options:queue:completion:
appBundleID
valueForKey:
unarchivedObjectOfClass:fromData:error:
accountDSID
dictionaryWithDictionary:
_isAnyDeviceControllable:
_findEndpointFromEndpoints:byGroupLeader:
unsignedShortValue
_checkForAccount:destination:origin:queue:completion:
sendMediaRemoteCommand:withOptions:toLocalDestination:completion:
sendMediaRemoteCommand:withOptions:toEndpointDestination:completion:
_connection
_discovery
returnStatuses
devicesControlled
_returnStatuses
_devicesControlled
initWithClientInfo:
deviceInfo
setTimeZoneName:
setDevices:
initWithResponse:playingItemIndexPath:
initWithDataSource:
initWithTracklistItems:playingItemIndexPath:
_determineChangeItemSupport
structuredIndexPathForDisplayIndexPath:
displayIndexPathForStructuredIndexPath:
setSupportsSetQueueCommand:
setSupportedSpecializedQueues:
setWithArray:
setSupportedQueueTypes:
setSupportedCustomDataQueueIdentifiers:
setSupportsCreateStation:
setSupportsChangeRepeat:
setSupportsAdvanceRepeat:
setSupportedRepeatTypes:
setSupportsChangeShuffle:
setSupportsAdvanceShuffle:
setSupportedShuffleTypes:
setSupportedActions:
initWithResponse:changeItemSupport:
_setDisabled:
playingItem
resetCommandForPlayerPath:devices:
insertCommandForPlayerPath:devices:
resetCommand
insertCommand
reorderCommand
repeatCommand
shuffleCommand
actionAtQueueEndCommand
changeItemCommand
disableModificationsCommand
lastChangeDirection
upNextItemCount
displayItems
playingItemGlobalIndex
globalItemCount
_changeItemSupport
_uniqueIdentifier
_lastChangeDirection
_upNextItemCount
_repeatType
_playingItemIndexPath
_displayItems
_playingItemGlobalIndex
_globalItemCount
identifiersForSectionAtIndex:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
valueWithBytes:objCType:
isAutoPlay
signedRangeValue
sectionRanges
sections
_sections
_sectionRanges
supportedQueueTypes
replaceWithPlaybackIntent:replaceIntent:
supportsSetQueueCommand
supportedCustomDataQueueIdentifiers
clear
clearUpNextItems
replaceWithPlaybackIntent:
specializedIntents
devices
supportedSpecializedQueues
_supportsSetQueueCommand
_devices
_supportedSpecializedQueues
_supportedQueueTypes
_supportedCustomDataQueueIdentifiers
_createRadioStationCommandRequest
contentItemIdentifier
_insertWithOptions:
_isSupportedPlaybackIntent:forRemotePlayer:atInsertionPosition:
supportsCreateStation
insertAfterPlayingItemWithPlaybackIntent:
insertPlaybackIntent:afterItem:
insertAtEndOfTracklistWithPlaybackIntent:
_supportsCreateStation
_supportedInsertionPositions
indexPath
limitedDisplayIndexPathForMovingIndexPath:toProprosedIndexPath:
limitedIndexPathForMovingIndexPath:toProprosedIndexPath:
canMoveItem:
moveItem:afterItem:
moveItem:beforeItem:
supportsChangeRepeat
supportsAdvanceRepeat
supportedRepeatTypes
advance
_supportsChangeRepeat
_supportsAdvanceRepeat
_currentRepeatType
_supportedRepeatTypes
supportsChangeShuffle
supportsAdvanceShuffle
supportedShuffleTypes
_supportsChangeShuffle
_supportsAdvanceShuffle
_currentShuffleType
_supportedShuffleTypes
supportedActions
_supportedActions
previousItem
previousItemDeferringToPlaybackQueuePosition
previousSection
previousChapter
nextItem
nextSection
nextChapter
changeToSection:
changeToItem:
changeItemSupport
setDisabled:
isDisabled
_disabled
registerDefaults:
_highQualityMusicStreamingOnCellularDidChange:
_soundCheckEnabledChangedNotification:
itemCount
hasSection:
setAnnotationDelegate:
decodeDoubleForKey:
_identifierListForSection:
hasItem:inSection:
encodeDouble:forKey:
numberWithLong:
_transitionToAutoPlayState:
setAutomaticallyReversesNonDestructiveDataSourceEdits:
_addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
positionForItem:inSection:
enumeratorWithQueueController:mode:options:startPosition:endPosition:
itemResult
removeItem:fromSection:
incrementVersionForSegment:
reloadItemsKeepingCurrentItem:
_contentItemIDWithOffset:fromItem:mode:didReachEnd:
insertObject:atIndex:
positionForTailOfSection:
entryType
trackingEntryResult
clearStartItem
replaceDataSource:forSection:completion:
restorationError
setNowPlayingInfo:
setUserInfo:
_itemForContentItemID:allowReuse:
jumpToContentItemID:userInitiated:
_firstContentItemID
setNextContentItemIDReason:
moveItem:fromSection:afterItem:inSection:
enumeratorWithOptions:startPosition:endPosition:
moveItem:fromSection:afterHeadOfSection:
moveItem:fromSection:afterTailOfSection:
_currentItemDidChangeFromItem:toItem:
performChangeImmediately:
initWithIdentifier:
setShuffleType:startingItem:inSection:
_allDataSourcesSupportInsertionPositionLast
setShouldExpectEmptyQueue:
sessionIdentifier
initWithUUIDString:
resetWithIdentifier:
allSectionIdentifiers
queueCoordinator:itemToFollowItem:
allValues
_nextValidIdentifierPairStartingAtContentItemID:wasInvalid:
_itemForPair:
setStartItem:
setPreferredItemCount:
_accountForAutoPlay
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
isDeletedItem:inSection:
queueReferencesWithMaxCount:
previousContentItemID
_emitEventsForItemChangeFromItem:toCurrentItem:
canAutoPlay
musicRepeatType
autoPlayEnabledForUserIdentity:
_emitEventsForAddingPlaybackContext:sectionIdentifier:
_firstContentItemIDInSectionWithIdentifier:
addDataSource:section:sequentially:afterItem:inSection:completion:
addDataSourceAtEnd:section:sequentially:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
addDataSourceAtStart:section:completion:
addDataSource:section:afterItem:inSection:completion:
addDataSourceAtEnd:section:completion:
addDataSource:section:afterTailOfSection:completion:
feeder
initialPlaybackStartTime
_applyVolumeNormalizationForQueuedItems
deferredNextContentItemAnchorID
radioConfiguration
continueListeningLoadStationThreshold
continueListeningMaxUpcomingTracksSizeToMaintain
didReachEnd
_privateListeningSourceForSection:
_autoplayMode
enumeratorWithOptions:
queueCoordinator
disableItemReuse
setInitialPlaybackStartTimeOverride:
isContinueListeningAvailable
continueListeningMaxQueueSizeInRequest
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
didDequeueShuffledItemsInSectionedIdentifierList:
debugDescriptionForItem:inSection:
debugDescriptionForSection:
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
areRepresentationsOfKind:availableForCatalog:
existingRepresentationOfKind:forArtworkCatalog:
loadRepresentationOfKind:forArtworkCatalog:completionHandler:
itemForContentItemID:allowReuse:
itemToFollowItem:direction:distance:jumpToItem:
canSkipInDirection:fromQueueItem:
setCurrentItem:
queueCoordinator:willLoadItem:
queueCoordinator:didLoadItem:
queueCoordinator:failedToLoadItem:
queueCoordinator:willInsertItem:afterItem:
queueCoordinatorDidChangeItems:
player:currentItemDidChangeFromItem:toItem:
jumpToFirstContentItem
segmentForCodingKey:
versionForSegment:
didRestoreVersion:forSegment:
nextContentItemID
setNextContentItemID:
setDeferredNextContentItemAnchorID:
setRestorationError:
coderVersions
setCoderVersions:
nextContentItemIDReason
autoPlayState
setAutoPlayState:
autoPlayEndPosition
setAutoPlayEndPosition:
autoPlayIsTriggered
setAutoPlayIsTriggered:
restoreLastStartTimePositionToContentItemID
setRestoreLastStartTimePositionToContentItemID:
lastSavedTime
setIdentifierList:
setAutoPlayIdentifierList:
dataSources
setDataSources:
_defaults
_hasUserMutations
_allowsQueueModifications
_autoPlayIsTriggered
_preferredFirstContentItemID
_queueCoordinator
_nextContentItemID
_deferredNextContentItemAnchorID
_restorationError
_coderVersions
_nextContentItemIDReason
_autoPlayState
_autoPlayEndPosition
_restoreLastStartTimePositionToContentItemID
_lastSavedTime
_identifierList
_autoPlayIdentifierList
_dataSources
_buildEnumerator
initWithSectionIdentifier:
mode
enumerator
startPosition
endPosition
_nextEnumerator
_isEnumeratingFromRepeatAllBase
_hasEmittedItemFromRepeatAllBase
_mode
_enumerator
_startPosition
_endPosition
branchDepth
isRemoved
preferredItemCount
_preferredItemCount
hasPrefix:
substringFromIndex:
handleFailureInFunction:file:lineNumber:description:
musicLibraryForUserAccount:
jaliscoAccountID
getLastKnownHouseholdIDWithCompletion:
setDelegatedIdentity:
storefrontHeaderSuffix
setIdentity:
setEnqueuerProperties:
_getHasSubscriptionPlaybackCapabilityForUserIdentity:completion:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
_setQueueController:deferItemLoading:
setFirstPlaybackItemIdentifier:
_configureAudioSession
shouldDeferItemLoading
setShouldDeferItemLoading:
togglePlaybackWithOptions:
changePlaybackIndexBy:deltaType:
avPlayer
_setEQPreset:
defaultItemEQPresetType
handlePlaybackErrorWithUserInfo:
firstPlaybackItemIdentifier
playbackHasStartedForItem:
sharedInstance
setCategory:mode:routeSharingPolicy:options:error:
_connectAVPlayerDeferringItemLoading:
setVolume:
_contentsChanged
_itemWillChange:
_enforcingPolicy:
_itemDidSignificantlyChangeElapsedTime:rate:
_itemDidChange:
_itemFailedToPlayToEnd:
_setState:
_itemPlaybackDidEndNotification:
MPAVItem
_streamLikelyToKeepUp:
_streamUnlikelyToKeepUp:
_streamRanDry:
_streamBufferFull:
_firstVideoFrameDisplayed:
prefersApplicationAudioSession
_networkPolicyItemCellularRestrictedNotification:
_connectAVPlayer
_expectedAssetTypesForPlaybackMode:
_queueDidEndWithReason:lastItem:
_updateStateForPlaybackPrevention
_firstPlaybackItemIdentifier
_initWithValue:
localDeviceSource
_initWithUserIdentity:
staticSourceWithValue:
sourceWithUserIdentity:
_overrideValue
_currentValue
_value
_handleUserIdentityStoreDidChangeNotification:
_loadCurrentValueFromIdentityProperties
sharedAccessQueue
privateListeningEnabled
_cachedValue
localOrigin
outputDevices
isEqualToSet:
_setOutputDevices:onEndpoint:completion:
_discoverLocalEndpointFromDeviceInfo:completion:
outputGroupID
_updateDiscoverableDeviceList:deviceInfo:completion:
tightSyncUID
valueForKeyPath:
outputDevicesMatchingPredicate:
designatedGroupLeader
groupContainsGroupLeader
setOutputDevices:initiator:withReplyQueue:completion:
modifySystemMusicContextForDestination:completion:
modificationInProgress
setModificationInProgress:
_discoveryLogical
_discoveryAudio
_discoveryEndpoint
_modificationInProgress
_buildLanguageOptionGroups:currentLanguageOptions:
_determineSeekSupport
initWithResponse:seekSupport:
seekSupport
setPreferredForwardJumpIntervals:
setPreferredBackwardJumpIntervals:
preferredBackwardJumpIntervals
setPrefersNegativeBackwardSkipIntervals:
setSupportedPlaybackRates:
floatValue
setPreferredPlaybackRate:
_feedbackCommandWithMediaRemoteCommand:
setMinimumValue:
setMaximumValue:
initWithLanguageOptionGroups:currentLanguageOptions:response:
initWithResponse:mediaRemoteCommand:
setValue:
seekCommand
playbackRateCommand
wishlistCommand
rateCommand
startPictureInPicture
revision
languageOptionGroups
_seekSupport
_placeholder
_autoPlay
_contentItemIdentifier
_revision
_localizedDurationString
_explicitBadge
_languageOptionGroups
_indexPath
_duration
_contentItemID
_seekCommandWithMediaRemoteCommand:options:
prefersNegativeBackwardSkipIntervals
jumpByInterval:
changePositionToElapsedInterval:
preferredForwardJumpIntervals
_prefersNegativeBackwardSkipIntervals
_preferredBackwardJumpIntervals
_preferredForwardJumpIntervals
supportedPlaybackRates
setPlaybackRate:
preferredPlaybackRate
_preferredPlaybackRate
_supportedPlaybackRates
changeValue:
localizedShortTitle
presentationStyle
value
_localizedShortTitle
_presentationStyle
minimumValue
maximumValue
_minimumValue
_maximumValue
_itemReportingJingleTimedMetadataDidChangeNotification:
_playerItemDidChangeNotification:
_playerItemWillChangeNotification:
_playerPlaybackStateDidChangeNotification:
_playerDidReloadWithPlaybackContextNotification:
_playerWillReloadWithPlaybackContextNotification:
_playerDidSetCurrentTimeNotification:
_playerWillSetCurrentTimeNotification:
_playerItemDidChangeWhenReloadingPlaybackContextNotification:
identityPropertiesLoader
eventDuration
itemGenericObject
overrideItemType
timedMetadata
enqueuerProperties
hasSubscriptionPlaybackCapability
_newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
mpcReporting_isValidReportingItem
initWithAVItem:
_itemStartTimeForItem:
_itemEndTimeForItem:withProposedEndTime:
_setLastPlayEventEndTime:forItemContentItemID:
_reportPlaybackEndedForTimeoutWithItem:
_sendPlaybackEndNotification:endTime:
userChangedItemsDuringPlayback
player
lastDirection
_sendPlaybackStartNotification
setPlayActivityEvent:
setShouldReportToStore:
notificationWithName:object:
postNotification:
notificationWithName:object:userInfo:
didHitPlaybackTimeoutEndingPlayback:withCurrentItem:
didTransitionItemForBan:
recordUserSeekFromTime:toTime:forItem:
willHitPlaybackTimeoutEndingPlayback:withCurrentItem:
willTransitionItemForBan:
_currentJingleReportingTimedMetadata
_hasPendingContainerChange
_hasSetLastPlayEventTimeStamp
_isReloadingWithPlaybackContext
_itemDidChangeWhenReloadingPlaybackContext
_isScrubbing
_currentItemIsHLS
_itemForCurrentTimeChange
_recordEventOperationQueue
_itemContentItemIDForLastPlayEventEndTime
_lastPlayEventEndTimeForCurrentItem
_lastPlayEventTimeStamp
_shouldReportAsPlaying
_startTimeForCurrentTimeChange
_offline
_SBEnabled
_reportingController
_storeFrontID
setEventDuration:
setOverrideItemType:
setShouldReportPlayEventsToStore:
setJingleTimedMetadata:
_shouldReportPlayEventsToStore
_eventDuration
_overrideItemType
_lyricsID
_itemGenericObject
_privateListeningEnabled
_modelPlayEvent
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_createAudioTap
_itemAssetLoadedNotification:
_itemInsertedNotification:
_freeBuffers
_destroyFFTSetup
_destroyAudioTap
_shouldAttachToPlayerItem:
_attachAudioTapToPlayerItem:
loadValuesAsynchronouslyForKeys:completionHandler:
isAirPlayingToDevice
audioMix
audioMixInputParametersWithTrack:
setAudioTapProcessor:
setInputParameters:
setAudioMix:
observers
_analyzeFrequencies:numberFrames:timeRange:observers:
beginReport
fftSetup
setPowerLevel:
sampleRate
finishReport
_analyzeSamples:numberFrames:timeRange:
_resizeBuffers:
setSampleRate:
powerLevel
setFftSetup:
window
setWindow:
setObservers:
selfRef
setSelfRef:
_frequencyBuffersSize
_intermediateBuffer
_windowSize
_fftBuffer
_audioProcessingTap
_sampleRate
_powerLevel
_fftSetup
_window
_observers
_selfRef
addAnalysisBand:
_resizeBandStorage
onUpdate
defaultObserver
numberOfBands
averagePowerOfBandAtIndex:band:
setOnUpdate:
_bands
_bandsStorageSize
_numberOfBands
_onUpdate
_retrieveAgeVerificationStateForUserIdentity:
_updateAuthorizationStatusWithAuthorizationState:forItem:
authorizationError
_explicitContentErrorWithUnderlyingError:message:
authorizationReason
_shouldAskPlaybackAuthorizationForItem:reason:
_askPlaybackAuthorizationForItem:reason:
getAgeVerificationStateWithCompletion:
_setupWithAgeVerificationState:
_setupWithAgeGateForItem:
isExplicitContentAllowed
setStatus:
requestAuthorizationForExplicitItem:reason:completion:
setAuthorizationError:
lastKnownAgeVerificationState
setLastKnownAgeVerificationState:
_status
_authorizationError
_lastKnownAgeVerificationState
initWithContentItemID:repeatIndex:
identifierForMFQueuePlayerItem:
_repeatIndex
setLastChangeDirection:
avPlayerItem
isFullyDownloaded
isVideoContent
setIsVideoContent:
setItemID:
resolvedPlayerPathForPlayerPath:
setInvalidationToken:
setResolvedPlayerPath:
_sendLocalCommand:playbackIntent:options:toPlayerPath:completion:
_sendRemoteCommand:playbackIntent:options:toPlayerPath:completion:
_sendCommand:options:appOptions:toPlayerPath:completion:
mediaRemoteReplyQueue
strongToWeakObjectsMapTable
_playbackStateDidChangeNotification:
_supportedCommandsDidChangedNotification:
_playbackQueueChangedNotification:
_playbackQueueContentItemsChangedNotification:
_contentItemArtworkChangedNotification:
_allCommandInfos
initWithController:
initWithKeyOptions:valueOptions:capacity:
_legacyCommands
_onQueue_updateOptimisticStateForCommand:options:
_onQueue_identifiersForRange:
beginTransaction
_onQueue_mergeContentItems:queueRange:requestRange:
endTransaction
pokeKey:
_mergeContentItem:
imageWithData:
_initWithMediaRemoteContentItem:
_onQueue_invalidateArtworkFuturesForContentItemID:
_onQueue_purgeArtworkForContentItemIdentifier:
_onQueue_purgeArtworkForContentItemIdentifier:artworkIdentifier:
supportsArtworkCatalogLoading
_artworkCatalogForContentItem:
_createExportableArtworkPropertiesForContentItem:
remotePlayerArtworkDataSource
mediaRemoteArtworkDataSource
initWithIdentifier:artworkIdentifier:
artworkURLTemplates
setArtworkTemplateItems:
setResolvedURLString:
setMediaLibraryArtworkType:
subarrayWithRange:
maximumCapacity
setMaximumCapacity:
performTransaction:
replaceObjectsInRange:withObjectsFromArray:
_onQueue_setOptimisticPlaybackState:withOptions:
_onQueue_setOptimisticElapsedTimeForContentItem:elapsedTime:rate:
_onQueue_setOptimisticPlayingItemIdentifier:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:beforeContentItemIdentifier:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:afterContentItemIdentifier:
setElapsedTime:
dictionary:willRemoveObject:forKey:
artworkCatalogBlockForContentItem:
contentItemArtworkCacheStateForArtworkIdentifier:size:
queueIdentifierCacheState
setAccessQueue:
setCalloutQueue:
invalidationToken
_playbackStateCacheState
_supportedCommandsCacheState
_playingItemIdentifierFuture
_playingIdentifierCacheState
_playingItemIdentifier
_queueIdentifierCacheState
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIDs
_contentItems
_optimisticStateContentItems
_contentItemChanges
_contentItemArtwork
_contentItemArtworkIdentifiers
_contentItemIDsFutures
_contentItemFutures
_contentItemArtworkFutures
_mediaRemoteArtworkDataSource
_resolvedPlayerPath
_invalidationToken
radioStationURL
_radioStationURL
JSONObjectWithData:options:error:
initWithStorePlatformDictionary:expirationDate:
addStoreItemMetadata:
initWithItemResponseDictionary:urlBag:
customOrigin
setConnectionStateCallback:withQueue:
connectWithOptions:userInfo:
URLsForDirectory:inDomains:
URLByAppendingPathComponent:isDirectory:
setBool:forKey:
initWithURL:error:
initWithPlayerID:database:
hashTableWithOptions:
statementWithString:error:
executeStatement:error:
initWithConsumer:eventStream:
consumer
initWithEventStream:reason:
timeIntervalSince1970
msv_UUIDData
bindDataValue:toParameterNamed:
bindStringValue:toParameterNamed:
bindUInt64Value:toParameterNamed:
bindJSONValue:toParameterNamed:error:
testingDelegate
eventStream:didFailToEmitEvent:error:
lastEventSuccessTimestamp
setLastEventSuccessTimestamp:
mutatingEventHandlers
immediateEventHandlers
initWithEventStream:startEventIdentifier:endEventIdentifier:
_onQueue_flush
lastEventsWithCount:
bindInt64Value:toParameterNamed:
resultsForStatement:
reason
addConsumer:
removeConsumer:
eventDeliveryDeferralAssertionForReason:
lastEvent
maximumEventDeliveryTimestamp
setMaximumEventDeliveryTimestamp:
resetConsumerEventDeliveryToTimestamp:
setTestingDelegate:
_maximumEventDeliveryTimestamp
_subscriptions
_deferralAssertions
_database
_queue
_lastReceivedEventIdentifier
_testingDelegate
stringValueAtColumnIndex:
uint64ValueAtColumnIndex:
flushEventsWithCompletion:
cancelSubscription
eventHandlers
_lock
_consumer
_lastEventSuccessTimestamp
_mutatingEventHandlers
_immediateEventHandlers
_eventHandlers
earlierDate:
countOfPreviousEventsWithTypes:matchingPayload:
int64ValueAtColumnIndex:
nextObjectWithError:
_statementForColumnsExpression:eventTypes:payload:
bindNullValueToParameterNamed:
enumeratePreviousEventsWithType:matchingPayload:usingBlock:
startEventIdentifier
endEventIdentifier
_startEventIdentifier
_endEventIdentifier
dataValueAtColumnIndex:
msv_UUIDWithData:
jsonValueAtColumnIndex:error:
_reason
UTF8String
_executeWithUserIdentity:
_validateUserIdentityForRequestWithCompletion:
currentThread
_shouldUseLegacyAccumulator
initWithRequest:shouldLibraryPersonalize:
userIdentitiesForManageableAccountsWithError:
setIdentityStore:
setAllowsExpiredBags:
initWithUserInteractionLevel:
setAuthenticationProvider:
initWithBlock:
statusType
enumerateDelegateTokensWithType:usingBlock:completionHandler:
_activeProgress
_activeProgressQueue
dictionaryRepresentation
addItem:
mergeFrom:
setHasContainerType:
hasContainerType
hasIdentifierSet
clearItems
itemsCount
hasPlayActivityFeatureName
readFrom:
writeTo:
_containerType
_identifierSet
_has
setCloudCollectionID:
setHasDelegateInfoID:
hasDelegateInfoID
setHasStoreAdamID:
hasStoreAdamID
hasStorePlaylistGlobalID
hasStorePlaylistVersionHash
setHasCloudID:
hasCloudID
hasCloudCollectionID
hasRadioStationID
hasCloudUniversalLibraryID
delegateInfoID
storePlaylistGlobalID
storePlaylistVersionHash
cloudCollectionID
radioStationID
_cloudID
_delegateInfoID
_storeAdamID
_cloudCollectionID
_cloudUniversalLibraryID
_radioStationID
_storePlaylistGlobalID
_storePlaylistVersionHash
setHasAccountID:
hasAccountID
hasUuid
hasDeviceGUID
hasDeviceName
setHasSystemReleaseType:
hasSystemReleaseType
hasRequestUserAgent
hasTimeZoneName
setHasPrivateListeningEnabled:
hasPrivateListeningEnabled
uuid
timeZoneName
_timeZoneName
_uuid
setHasMediaType:
hasMediaType
setHasExcludeFromShuffle:
hasExcludeFromShuffle
excludeFromShuffle
_mediaType
_excludeFromShuffle
hasContentItemID
setHasStoreSubscriptionAdamID:
hasStoreSubscriptionAdamID
setPurchaseHistoryID:
setHasPurchaseHistoryID:
hasPurchaseHistoryID
purchaseHistoryID
_purchaseHistoryID
_storeSubscriptionAdamID
setLibraryAlbumContentReference:
setLibraryArtistContentReference:
setLibraryItemContentReference:
setStoreContentReference:
hasLibraryAlbumContentReference
hasLibraryArtistContentReference
hasLibraryItemContentReference
hasStoreContentReference
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
_libraryAlbumContentReference
_libraryArtistContentReference
_libraryItemContentReference
_storeContentReference
hasAlbumName
setRepresentativeItemCloudID:
setHasRepresentativeItemCloudID:
hasRepresentativeItemCloudID
albumName
representativeItemCloudID
_representativeItemCloudID
_albumName
hasArtistName
artistName
_artistName
setCopyrightText:
hasAlbumArtistName
hasComposerName
contentType
setContentType:
setHasContentType:
hasContentType
hasCopyrightText
setAlbumDiscCount:
setHasAlbumDiscCount:
hasAlbumDiscCount
setHasDiscNumber:
hasDiscNumber
setHasFileSize:
hasFileSize
hasGenreName
setIsCompilation:
setHasIsCompilation:
hasIsCompilation
setHasDuration:
hasDuration
hasTitle
setAlbumTrackCount:
setHasAlbumTrackCount:
hasAlbumTrackCount
setHasTrackNumber:
hasTrackNumber
setHasYear:
hasYear
albumArtistName
composerName
albumDiscCount
genreName
_fileSize
_albumArtistName
_albumDiscCount
_albumTrackCount
_composerName
_contentType
_copyrightText
_discNumber
_genreName
_trackNumber
_year
_isCompilation
hasRadioStationURLString
hasSeedContentReference
hasNowPlayingContentReference
hasAccountInfo
radioStationURLString
accountInfo
_accountInfo
_radioStationURLString
addContainer:
accountInfoType
clearAccountInfos
accountInfosCount
accountInfoAtIndex:
clearContainers
containersCount
containerAtIndex:
hasStartingItemIndexPath
setHasShuffleMode:
hasShuffleMode
accountInfos
setAccountInfos:
containers
startingItemIndexPath
_accountInfos
_containers
_startingItemIndexPath
setHasContainerIndex:
hasContainerIndex
setHasItemIndex:
hasItemIndex
containerIndex
itemIndex
_containerIndex
_itemIndex
redownloadParameters
initWithRequestContext:redownloadParametersString:
setUsePrioritizedURLSession:
setRedownloadParameters:
isAppleTV
setPlaybackRequest:
performRequestWithResponseHandler:
_mediaDownloadRequest
reasonType
initWithGetTracksRequest:siriAssetInfo:playActivityController:
playActitySessionToken
playActivityEvents
_runStep:withFinishHandler:
flattenedTracksWithTracks:
trackType
setLiveRadioStream:
expirationDate
radioStreamAssets
initWithiTunesCloudStoreRadioStreamAssetInfo:
setRadioStreamAssetInfoList:
isFinished
tracklistActionType
_cacheTracksForStep:
appendItems:
initWithTracks:tracklistAction:
performWithCompletionHandler:
initWithGetTracksRequest:siriAssetInfo:playActivityController:radioQueueFeeder:
_radioQueueFeederPointerForLogging
tracklistAction
_tracklistAction
_tracks
stationMetadata
getRemoteRepresentationForPlayerPath:completion:
createPlaybackContextWithCompletion:
initWithData:
isRequestingImmediatePlayback
siriRecommendationIdentifier
_getPlaybackRequestEnvironmentWithBaseEnvironment:completion:
URLWithString:
setSessionIdentifier:
setSupportsAccountRectification:
mediaQuery
trackIdentifiers
firstTrackIdentifier
_getPlaybackContextWithRecommendedContentWithSeedAdamID:completion:
isHomeSharingLibrary
stringByRemovingPercentEncoding
initWithBase64EncodedString:options:
initWithMultiverseIdentifier:library:
itemWithPersistentID:
valueForProperty:
isGeniusEnabled
_getPlaybackContextFromCloudControllerWithSeedItem:completion:
_getPlaybackContextFromMediaLibraryWithSeedItem:completion:
fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:
songsQuery
predicateWithPersistentIDs:count:shouldContain:
addFilterPredicate:
geniusItemsForSeedItem:completion:
predicateWithProperty:values:
loadGeniusItemsForSagaID:completionHandler:
setDelegated:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
timeZoneWithName:
setDelegationProperties:
kindWithModelClass:
setCloudVersionHash:
_createRemoteCommandWithConcreteClass:mediaRemoteType:
startPictureInPictureCommand
setImportToServerObjectDatabase:
_applicationWillEnterForegroundNotification:
_prewarmSAPSigningForAccount:
applicationState
_optimisticallyFetchLeaseForAccount:
_prewarmMiniSINFEndpointForAccount:
scheduleMiniSINFFetch
usesLease
getHasPreparedLeaseForAccount:completion:
_fetchMiniSINFsWithCompletion:
maximumBatchSize
enumerateAssetsMissingSINFsForHashedPersonID:usingBlock:
endpointURL
initWithURL:
setHTTPMethod:
dataWithJSONObject:options:error:
setHTTPBody:
addValue:forHTTPHeaderField:
initWithURLRequest:requestContext:
defaultSession
parsedBodyDictionary
initWithPayload:requestPayload:hashedPersonID:
importAssetsFromRequest:error:
enqueueDataRequest:withCompletionHandler:
int64ValueForBagKey:
initWithEndpointURL:maximumBatchSize:requestContext:
initWithURL:requestContext:
sharedSAPSessionWithVersion:URLBag:requestContext:
signData:withCompletionHandler:
buildURLRequestWithCompletionHandler:
database:didFailImportRequest:withErrror:
database:didFinishImportRequest:
_SAPSignPrewarmingAccounts
_SAPSignPrewarmedAccounts
_miniQueue
_miniSINFEndpointLoadingAccounts
_miniSINFAccounts
_scheduledMiniSINFs
_endpointURL
_maximumBatchSize
initWithAppBundleID:
initWithAppBundleID:playerID:origin:
resolveWithHashedRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
resolveWithRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
setOutputDeviceUIDs:
setHashedOutputDeviceUIDs:
decodeHashedRouteUIDs:completion:
setAppBundleID:
setOrigin:
_getCompanionOrigin:
_copyWithZone:usingConcreteClass:
systemMediaApplicationDestination
watchRadioApplicationDestination
podcastsApplicationDestination
iBooksApplicationDestination
nowPlayingApplicationDestination
resolveWithHashedRouteIdentifiers:completion:
resolveWithRouteIdentifiers:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:completion:
hashedOutputDeviceUIDs
_appBundleID
_origin
_outputDeviceUIDs
_hashedOutputDeviceUIDs
_outputGroups
_outputGroupID
_singleGroup
setPlayerID:
setOutputGroups:
setOutputGroupID:
setSingleGroup:
requiresMainThread
isMainThread
callStackSymbols
_initializePlaybackStack
_screenBrightnessDidChangeNotification:
preheatPlayback
stateRestorationSessionIdentifier
loadSessionWithIdentifier:completion:
setStateRestorationSessionIdentifier:
_detectCrashLoopForSessionIdentifier:block:
objects
reportUserSeekFromTime:toTime:
hasScheduledPlaybackStatePreservation
setScheduledPlaybackStatePreservation:
isStateRestorationSupported
_updateUISnapshotIfNeeded
_shouldIgnorePlaybackSessionError:
saveSessionWithCompletion:
brightness
needsUISnapshot
dictionaryForKey:
usesEventStreamPAF
usesEventStreamSiri
usesEventStreamRTC
proxyForObjects:protocol:
usesNewPlaybackImplementation
_updateSnapshotForBackgroundApplication:
setNeedsUISnapshot:
engine:requiresAuthorizationToPlayItem:reason:authorizationHandler:
start
restoreStateWithCompletion:
setPictureInPictureSupported:
setQueueHandoffSupported:
setVideoSupported:
setAudioSessionCategory:
setAudioSessionOptions:
setStateRestorationSupported:
setSystemMusicApplication:
setAudioAnalyzerEnabled:
serverEndpoint
isPictureInPictureSupported
isVideoSupported
setFallbackPlaybackIntent:
musicPlayerControllerServer
fairPlayPerformanceController
isAudioAnalyzerEnabled
_pictureInPictureSupported
_videoSupported
_stateRestorationSupported
_queueHandoffSupported
_scheduledPlaybackStatePreservation
_needsUISnapshot
_systemMusicApplication
_audioAnalyzerEnabled
_fallbackPlaybackIntent
_eventObserver
_implementation
_mediaRemotePublisher
_musicPlayerControllerServer
_sessionManager
_leaseManager
_accountManager
_fairPlayPerformanceController
_audioSessionCategory
_audioSessionOptions
_audioAnalyzer
_onQueue_registerForInvalidationWithUnresolvedPlayerPath:invalidationPlayerPath:
_onQueue_registerForEndpointChangeWithUnresolvedPlayerPath:
indexOfObjectPassingTest:
playerPathResolutions
playerPathObservers
endpointObservers
_playerPathResolutions
_playerPathObservers
_endpointObservers
_prepareRequestInformation
_originalIndexPathsForStoreID:
_shouldUsePlaylistEntriesForSectionAtIndex:
_modelObjectWithStoreItemMetadata:requestModelObject:shouldUsePlaylistEntries:
_indexPathAccountingForRemovalsWithOriginalIndexPath:
replaceObjectAtIndexPath:withObject:
_removeItemAtOriginalIndexPath:
_appendProgressiveContentDescriptorsWithStoreItemMetadata:
childStoreItemMetadatas
initWithObjects:
countOfIndexesInRange:
modelObjectWithStoreItemMetadata:sourceModelObject:userIdentity:
initWithStorePlatformDictionary:
_addOriginalIndexPath:forStoreID:
removeObjectsInArray:
indexSetWithIndexesInRange:
insertObjects:atIndexes:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
indexSetWithIndex:
_currentBatchCount
_lastStoreIDBasedSectionWasPlaylist
_orderedStoreIDs
_pendingOrderedStoreIDs
_pendingPrioritizedStoreIDs
_unprocessedItemIdentifiers
_receivedStoreIDs
_resultsGenericObjectBuilder
_sectionIndexToDeletedIndexSet
_storeIDToIndexPathReference
_shouldLibraryPersonalize
leaseID
initWithConfiguration:
initWithICLeaseSession:
strongToStrongObjectsMapTable
clientCount
setClientCount:
icLeaseSession
mpcLeaseSession
startLeaseSessionWithCompletionHandler:
icSuzeLeaseSession
configuration
stopLeaseSessionWithCompletionHandler:
suzeLeaseSession:leaseRenewalDidFailWithError:
_leaseIDToLeaseSessionInfo
initWithICSuzeLeaseSession:
shouldStopWhenFinished
setShouldStopWhenFinished:
_shouldStopWhenFinished
_clientCount
_icLeaseSession
_mpcLeaseSession
mpc_jsonValue
payloadValueFromJSONValue:
base64EncodedStringWithOptions:
setSyncID:
setRecommendationID:
setSocialProfileID:
setInformalMediaClipID:
setInformalStaticAssetID:
containedPersistentID
syncID
recommendationID
formerAdamIDs
socialProfileID
informalMediaClipID
informalStaticAssetID
initWithResponseDictionary:
setDisplayedCharacterCount:
setLanguage:
_modelSong
_visibleDuration
_displayType
_displayedCharacterCount
_language
_sourceType
_icSuzeLeaseSession
initWithUserIdentity:
setShouldPreventLeaseAcquisition:
receivedUserInteractionEvent
_itemShouldPreventPlaybackDidChangeNotification:
engine:didPauseForLeaseEndWithError:
stateReasonDialog
stateReasonDialogMetricsDictionary
engineDidPauseForLeaseEnd:
leaseEndIgnoreReasons
setLeaseEndIgnoreReasons:
prepareCompletions
setPrepareCompletions:
_leaseEndIgnoreReasons
_prepareCompletions
_hasSubscriptionPlaybackCapability
_enqueuerProperties
infoDictionary
setNeedsInfoDictionaryUpdate
packageURL
deleteWithError:
saveWithError:
writeWithError:
createExternalRepresentation
linkItemAtURL:toURL:error:
dataWithContentsOfURL:
initWithExternalRepresentation:
imageWithContentsOfFile:
packageTypeIdentifier
initWithURL:identifier:
artworkImage
setContentItem:
setArtworkImage:
lastModifiedDate
_contentItem
_artworkImage
_lastModifiedDate
hashInStore:
initWithDelegatedUserIdentity:
initWithUserIdentity:subscriptionStatus:
hasAddToCloudLibraryCapability
setHashedDSID:
setHasCloudLibraryEnabled:
setStoreFrontIdentifier:
setActiveAccount:
setBag:
_hasCloudLibraryEnabled
_delegated
_activeAccount
_subscriptionStatus
_hashedDSID
_storeFrontIdentifier
_bag
_subscriptionStatusChangedNotification:
_userIdentityStoreChangedNotification:
_updateAccounts
compare:
sortedArrayUsingComparator:
_buildAccountFromLocalIdentity:completion:
_buildAccountFromDelegatedIdentity:completion:
accounts
_enumerateIdentitiesWithCompletion:
isActiveLocker
setShouldReturnLastKnownStatusOnly:
shouldReturnLastKnownStatusOnly
initWithTimeout:interruptionHandler:
_needsRefreshDueToTimeout
_hasLoadedInitialAccounts
playOnPlayerPath:
setAssetStoreFronts:
skipEncodingMediaLibraryUniqueID
updateRequestPlaybackEnvironment
encodedMediaLibraryUniqueID
_skipEncodingMediaLibraryUniqueID
_encodedMediaLibraryUniqueID
_shouldReportToStore
_playActivityEvent
_finishChangeRequestOperationWithError:
playEvent
itemExistsInDatabaseWithPersistentID:
playbackHistoryPlaylist
removeItems:atFilteredIndexes:completionBlock:
appendItems:completion:
recordPlayEventForAlbumPersistentID:
allowsStoreContainerImport
recordPlayEventForPlaylistPersistentID:
_overridePlayingItem
representativeCloudIdentifier
storeIdentifier
copyright
kind
storeAdamIdentifier
storeCloudIdentifier
storeItemWithIdentifier:
registerPlayer:
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
assistantAnalyticsController
setAssistantAnalyticsController:
rtcReportingController
setRtcReportingController:
playbackHistoryController
setPlaybackHistoryController:
lyricsReportingController
setLyricsReportingController:
_assistantAnalyticsController
_rtcReportingController
_playbackHistoryController
_lyricsReportingController
requestLeaseForItem:completion:
relinquishLeaseForItem:completion:
allowEmptySelection
languageOptions
isEqualToLanguageOption:
languageOptionType
displayName
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
copyExternalRepresentation
numberOfOptions
indexOfSelectedOption
selectedOption
localizedTitleForOptionAtIndex:
changeRequestForOptionAtIndex:
_currentIndex
_allowEmptySelection
_MPAVItemForMFPlayerItem:allowReuse:
mapping
queueItemForPlayerItem:allowReuse:
canSkipInDirection:fromItem:
_mapping
initWithResponseDictionary:expirationDate:
initWithPreviousStep:
_performDefaultHandlingForButtonAction:
_presentServerDialog:completionHandler:
handleButtonAction:usingRequestContext:withCompletionHandler:
initWithStoreDialog:
setAllowInCar:
createCFUserNotification
action
initWithCFUserNotification:
showWithCompletionHandler:
nextStepWithError:
_fireAndForgetServerDialog:
siriAssetInfoGetTracksResponse
_finished
_playActivitySessionToken
_siriAssetInfoGetTracksResponse
_playActitySessionToken
setInteractionLevel:
initWithVerificationContext:
getVerificationContextForUserIdentity:completionHandler:
nextStepWithIdentityProperties:delegatedIdentityProperties:
setPlayActivityEvents:
nextStepWithResponse:error:
actionDictionary
setAdditionalRequestParameters:
nextStepByPerformingButtonAction:
buttons
isAvailable
_copyWithPlaybackRequestEnvironmentClass:
setAllowsHandlingNonAuthenticationDialogs:
setStoreDialogResponseHandler:
_clientVersion
_delegationProperties
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
processData:usingProcedure:completion:
encodeURLData:
decodeURLData:
encodeHashedRouteUIDs:completion:
identityPropertySet
setIdentityPropertySet:
AVItemAtIndex:
isExplicitItemAtIndex:
numberOfItems
playbackHistory
removeExplicitItems
savePlaybackHistoryWithUpdates:completionHandler:
initWithIdentityStore:
stationIdentifier
currentTrack
setCurrentTrack:
numberOfSkips
setNumberOfSkips:
setTracks:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
trackModels
trackForItemAtIndex:
enumerateItemsUsingBlock:
updateWithPersonalizedResponse:
savePlaybackHistoryWithUpdates:
tracksByApplyingTracksResponse:currentIndex:
_playbackHistoryStore
_stationTracks
initWithStationIdentifier:
initWithIndexesInRange:
removeTracksAtIndexes:
initWithTrack:
addTrack:
serverTrackInfo
likeState
parentTrack
_playbackHistory
_trackModels
initWithInteger:
mediaPlayerBundle
currentDevice
model
pauseDevicesByUID:withRefId:audioRoutingInfo:source:completion:
removeObjectsForKeys:
isLocalEndpoint
isLocalDevice
clusterComposition
sendCommand:toDestination:withOptions:completion:
isGroupLeader
removeOutputDevices:initiator:withReplyQueue:completion:
localizedFailureReason
pauseDevicesByUID:withRefId:audioRoutingInfo:completion:
deviceUIDsQueue
_setAnalyticsKey:value:
_setAnalyticsError:
initWithFormat:
sendPlaybackQueue:toDestination:withOptions:completion:
_findOutputDevicesForDestination:completion:
boolValueForOption:
supportedOptions
playbackSessionIdentifier
arrayWithObject:
sendPlaybackQueue:toDestination:completion:
sendPlaybackArchive:toDestination:completion:
_sendCommand
_context
_sendCommandQueue
_analytics
_analyticsQueue
_analyticsGroup
_startDate
_allowsStoreContainerImport
_playEvent
getVolumeLevelForUID:completion:
clearPlaybackQueue
shouldExpectEmptyQueue
setUserAdvancedDuringPlayback:
setUserChangedItemsDuringPlayback:
_teardownBookmarkingTimer
adjustEffectiveNetworkTypeUsingPreviouslyPlayedItem:
_updateDurationSnapshotWithElapsedTime:playbackRate:
_setupBookmarkingTimerForItem:
setHasPlayedThisSession:
bookmarkingTimer
setBookmarkingTimer:
_bookmarkingTimer
hasCellularDataCapability
_allowCellularStreamingDidChangeNotification:
_updateAdditionalLoadingSupport
userAdvancedDuringPlayback
setObserver:
setSkipDate:
replaceTrackAtIndex:withTrack:
isSkippable
replaceItemAndIdentifierSet:atIndex:
setPreviousContentItemID:
insertItems:afterItem:
removeItem:
allItems
_endObservingIdentityStoreForSignOut
_defaultGetTracksRequestWithContext:radioStation:
setReasonType:
setQueueContentReferences:
_loadTracksWithRequest:completion:
setPreservingCurrentlyPlayingItem:
setPlaybackContext:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
setRequestedTrackCount:
setMainTitle:
_detectSignOutForIdentityStore:
_responseDidInvalidate
_detectSignOutForIdentityStoreChangeNotification:
setAllowsExplicitContent:
setShouldResponseContainStationMetadata:
setDelegatedPrivateListeningEnabled:
autoupdatingActiveAccount
_errorForRequest:withError:
_handlePersonalizationResponse:personalizationError:fromRequest:completion:
_observePersonalizationResponse:
_savePlaybackHistoryWithCurrentIndex:
_beginObservingIdentityStoreForSignOut
itemForIdentifierSet:
pairWithFirst:second:
first
second
_handleGetTracksResponse:getTracksError:fromRequest:completion:
sharedQueue
operationCount
_responseDidInvalidateNotification:
_removeRestrictedTracks
_repersonalizeCurrentTracks
synchronizeWithCompletionHandler:
_isTransientLoadingError:
_playbackQueue
_needsSectionUpdate
_hasReachedTracklistEnd
_supportsLoadingAdditionalItems
_lastCleanPlayedIdentifier
_lastPlayedIdentifier
_lastResponse
_mayHaveRestrictedContent
_queueGeneration
_observedIdentityStore
_finalTracklistLoadingCompletionHandler
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
distantPast
_playbackSessionsDirectory
archivesAtURL:
setDataSourceQueue:
setDisableAutomaticCanBeNowPlaying:
removeTarget:
initWithCodingPackage:error:
setWithObject:
decodeRootObjectOfClasses:error:
sharedSecurityInfo
isContentProtectionEnabled
isDeviceClassCUnlocked
nowPlayingContentItem
initWithCodingPackage:userInfo:
encodeRootObject:
removeObjectIdenticalTo:
removeLastObject
_cachesDirectory
stringWithContentsOfURL:encoding:error:
writeToURL:atomically:encoding:error:
deleteSessionWithIdentifier:completion:
copyWithNewIdentifier:
serialQueue
sessionArchives
sessionIdentifierArchiveMap
stagedQueueControllers
_serialQueue
_sessionArchives
_sessionIdentifierArchiveMap
_stagedQueueControllers
setIdentifier:
setArtworkIdentifier:
timedMetadataGroups
getBytes:length:
charValue
scannerWithString:
scanString:intoString:
scanUpToString:intoString:
isAtEnd
initWithArtworkResponseArray:
tokenWithImageArtworkInfo:
setExplicitSong:
setTimedMetadataData:
storeRequestContext
setStoreRequestContext:
allStorePlatformMetadata
_timedMetadataGroups
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v24@0:8@16
@"NSArray"24@0:8@"MPRequest"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
v16@0:8
@"NSArray"
@"MPSectionedCollection"
@48@0:8@16@24@32@40
@32@0:8@16@24
@"MPCMediaRemoteController"32@0:8@"MPCMediaRemoteController"16@"MPMiddlewareChain"24
q32@0:8q16@24
Q32@0:8Q16@24
Q40@0:8Q16Q24@32
{?=dddddffBB}88@0:8{?=dddddffBB}16@72@80
@40@0:8@16@24@32
q40@0:8q16@24@32
B36@0:8B16@20@28
B36@0:8B16q20@28
B32@0:8B16I20@24
@44@0:8@16@24I32@36
q32@0:8q16@"MPMiddlewareChain"24
@"NSString"32@0:8@"NSString"16@"MPMiddlewareChain"24
Q32@0:8Q16@"MPMiddlewareChain"24
Q40@0:8Q16Q24@"MPMiddlewareChain"32
{?=dddddffBB}88@0:8{?=dddddffBB}16@"NSIndexPath"72@"MPMiddlewareChain"80
@"NSString"40@0:8@"NSString"16@"NSIndexPath"24@"MPMiddlewareChain"32
q40@0:8q16@"NSIndexPath"24@"MPMiddlewareChain"32
B36@0:8B16@"NSIndexPath"20@"MPMiddlewareChain"28
@"MPModelGenericObject"48@0:8@"MPModelGenericObject"16@"MPPropertySet"24@"NSIndexPath"32@"MPMiddlewareChain"40
@"NSIndexPath"32@0:8@"NSIndexPath"16@"MPMiddlewareChain"24
B36@0:8B16q20@"MPMiddlewareChain"28
@"NSArray"40@0:8@"NSArray"16@"NSIndexPath"24@"MPMiddlewareChain"32
B32@0:8B16I20@"MPMiddlewareChain"24
@44@0:8@16@"NSString"24I32@"MPMiddlewareChain"36
@"UIView<MPCVideoView>"32@0:8@"UIView<MPCVideoView>"16@"MPMiddlewareChain"24
@"<MPCVideoOutput>"32@0:8@"<MPCVideoOutput>"16@"MPMiddlewareChain"24
v40@0:8@16@24@32
v32@0:8@16@24
v36@0:8@16f24@28
v48@0:8d16@24q32@40
v36@0:8f16@20@28
v36@0:8B16@20@28
v40@0:8q16@24@32
v36@0:8@16B24@28
v40@0:8q16q24@32
v28@0:8B16@20
v40@0:8@"<MFPlayerItem>"16@"<MFPlayerItem>"24@"<MFTimeStamp>"32
v32@0:8@"<MFPlayerItem>"16@"<MFTimeStamp>"24
v40@0:8@"<MFPlayerItem>"16@"NSError"24@"<MFTimeStamp>"32
v36@0:8@"<MFPlayerItem>"16f24@"<MFTimeStamp>"28
v40@0:8@"<MFPlayerItem>"16@"NSString"24@"<MFTimeStamp>"32
v48@0:8d16@"<MFPlayerItem>"24q32@"<MFTimeStamp>"40
v36@0:8f16@"<MFPlayerItem>"20@"<MFTimeStamp>"28
v36@0:8B16@"<MFPlayerItem>"20@"<MFTimeStamp>"28
v40@0:8q16@"<MFPlayerItem>"24@"<MFTimeStamp>"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"<MFTimeStamp>"24
v36@0:8@"NSString"16B24@"<MFTimeStamp>"28
v36@0:8B16@"<MFRouteChangeMetadata>"20@"<MFTimeStamp>"28
v40@0:8q16q24@"<MFTimeStamp>"32
v28@0:8B16@"<MFTimeStamp>"20
v24@0:8@"<MFUserAction>"16
v32@0:8@"<MFUserAction>"16@"NSError"24
v24@0:8@"<MFTimeStamp>"16
v24@0:8@"<MFPlayerItem>"16
v32@0:8@16q24
v24@0:8@"<MPAVQueueController>"16
v32@0:8@"<MPAVQueueController>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueController>"16@"MPPlaybackContext"24
v32@0:8@"<MPAVQueueController>"16q24
v32@0:8@"<MPAVQueueController>"16@"NSString"24
v32@0:8@"<MFPlayerItem>"16@"NSError"24
v40@0:8@16@24@?32
v32@0:8@16@?24
B24@0:8^@16
d16@0:8
q16@0:8
v20@0:8B16
v24@0:8q16
B48@0:8q16q24B32B36^@40
v24@0:8Q16
v20@0:8f16
B28@0:8f16@?20
v20@0:8i16
v24@0:8d16
v36@0:8f16@20@?28
v40@0:8d16@24@?32
B24@0:8q16
v40@0:8q16@24@?32
@24@0:8@"MPCPlaybackEngine"16
v40@0:8@"MPPlaybackContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"<MPAVQueueController>"16@?<v@?@"NSError">24
@"MPCPlaybackEngine"16@0:8
@"<MPAVQueueController>"16@0:8
@"MPAVItem"16@0:8
@"MPQueuePlayer"16@0:8
@"MPVideoView"16@0:8
@"AVPictureInPictureController"16@0:8
B28@0:8f16@?<v@?>20
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8f16@"NSString"20@?<v@?@"NSError">28
v40@0:8d16@"NSString"24@?<v@?@"NSError">32
v40@0:8q16@"NSString"24@?<v@?@"NSError">32
v52@0:8@16d24d32B40@44
@"MPCPlaybackEngine"
@"<MPAVQueueController>"
@"MPAVItem"
@"MPQueuePlayer"
@"MPVideoView"
@"AVPictureInPictureController"
@"<MFPlaybackStackController><MFQueueManagement>"
@"MPCItemBookmarker"
@"MPCMediaFoundationTranslator"
@"MPCErrorControllerImplementation"
@"MPCExternalPlaybackControllerImplementation"
@"<MFAssetLoading>"
@"MPCLeaseController"
@"MPSectionedCollection"16@0:8
@"NSIndexPath"16@0:8
@?16@0:8
v24@0:8@?16
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@"NSMapTable"16@0:8
v24@0:8@"NSMapTable"16
{_MSVSignedRange=qq}32@0:8{?=qq}16
@"NSMapTable"
@"MPCMediaRemoteMiddleware"
@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>"
@"MPCFuture"
@"ICStoreDialogResponse"16@0:8
B32@0:8@16@24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v24@0:8@"AVPlayerItemOutput"16
v40@0:8@"AVPlayerItemMetadataOutput"16@"NSArray"24@"AVPlayerItemTrack"32
v24@0:8@"ICEnvironmentMonitor"16
v28@0:8f16@?20
f16@0:8
{?=qqqqqqqq}16@0:8
v28@0:8d16B24
v32@0:8d16@?24
@"NSObject<OS_dispatch_queue>"
@"NSNumber"
@"ICMusicSubscriptionLeaseSession"
@"MPSubscriptionStatusPlaybackInformation"
@"MPCSuzeLeaseSession"
@"MPModelGenericObject"
@"MPPropertySet"
@"<MPCReportingIdentityPropertiesLoading>"
@"MPCModelGenericAVItemTimedMetadataRequest"
@"MPCModelGenericAVItemTimedMetadataResponse"
@"NSOperationQueue"
@"NSString"
@"ICStoreRequestContext"
@"NSURL"
@"MPCModelGenericAVItemUserIdentityPropertySet"
@"ICMusicSubscriptionLeaseStatus"
@"<MPCModelPlaybackAssetCacheProviding>"
@"NSData"
@"MPMediaLibrary"
@"MPCPlaybackRequestEnvironment"
@"NSDictionary"
@"MPCPlaybackEngineEventStream"
@"AVURLAsset"
v40@0:8@16Q24@?32
@"ICUserIdentityProperties"
@"MPCJinglePlayActivityReportingController"
@"MPCReportingPlaybackObserver"
v44@0:8@16Q24f32@?36
v24@0:8@"<MPCPlaybackEngineEventStreamSubscription>"16
@20@0:8I16
@"<MPCPlaybackEngineEventStreamSubscription>"
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BB}24@0:8@16
{_MPCModelStorePlaybackItemEligibility=Bq}24@0:8@16
@"MPCModelStorePlaybackItemsRequest"
@"MPServerObjectDatabase"
@"NSMutableArray"
@"NSMutableDictionary"
@"NSMutableOrderedSet"
@"NSMutableSet"
@"MPMutableSectionedCollection"
@"MPModelResponse"
@"MPCModelGenericAVItemTimedMetadataStreamFields"
{?=qq}16@0:8
@"MPCPlayerPath"16@0:8
@"MPPropertySet"16@0:8
@24@0:8^{_NSZone=}16
@"MPCPlayerPath"
q40@0:8q16q24@32
@40@0:8@16q24@32
q40@0:8q16q24@"MPMiddlewareChain"32
@"MPCPlayerPath"40@0:8@"MPCPlayerPath"16q24@"MPMiddlewareChain"32
@"MPModelGenericObject"40@0:8@"MPModelGenericObject"16@"NSIndexPath"24@"MPMiddlewareChain"32
@"MPCMediaRemoteController"
v24@0:8@?<v@?q>16
v32@0:8d16@?<v@?>24
v28@0:8f16@?<v@?>20
v32@0:8q16@?24
v56@0:8@16@24{CGSize=dd}32@?48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">16
v32@0:8q16@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">24
v40@0:8@"MPMediaItem"16@"NSString"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"NSString"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlayingTimeSnapshot">16
v24@0:8@?<v@?@"MPMusicPlayerQueueDescriptor"@"NSError">16
v32@0:8@"MPMusicPlayerQueueDescriptor"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v32@0:8@"MPMusicPlayerControllerApplicationQueueModifications"16@?<v@?@"NSError">24
v24@0:8@"MPMusicPlayerQueueDescriptor"16
v24@0:8@"MPMusicPlayerControllerNowPlaying"16
v24@0:8@"MPMusicPlayerControllerNowPlayingTimeSnapshot"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16Q24
v36@0:8@16d24f32
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v36@0:8@"MPCPlaybackEngine"16d24f32
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v32@0:8@"MPCPlaybackEngine"16@"NSArray"24
v24@0:8@"MPCPlaybackEngine"16
@28@0:8d16f24
@"MPMusicPlayerQueueDescriptor"
@"MPMusicPlayerControllerSystemCache"
@"NSXPCListener"
@40@0:8@16@24^@32
v24@0:8@?<v@?@"MPCReportingIdentityProperties"@"NSError">16
@"MPModelMediaClip"
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"MPCPlaybackRequestEnvironment"16@0:8
v24@0:8@"MPCPlaybackRequestEnvironment"16
@"MPLibraryAddStatusObserver"
@"NSUserDefaults"
@"MPNowPlayingInfoCenter"
@"MPRemoteCommandCenter"
@32@0:8@16q24
@48@0:8@16q24q32^q40
@56@0:8@16@24{CGSize=dd}32@?48
@40@0:8@16@24@?32
@24@0:8q16
@"NSString"32@0:8@"MPNowPlayingInfoCenter"16q24
@"MPNowPlayingContentItem"32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
@"NSString"24@0:8@"MPNowPlayingInfoCenter"16
@"NSProgress"56@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24{CGSize=dd}32@?<v@?@"UIImage"@"NSError">48
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"MPNowPlayingInfoLyricsItem"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSString"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSArray"@"NSError">32
@"NSArray"48@0:8@"MPNowPlayingInfoCenter"16q24q32^q40
@"NSString"40@0:8@"MPNowPlayingInfoCenter"16q24@"MPNowPlayingContentItem"32
v32@0:8@"MPNowPlayingInfoCenter"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"MPNowPlayingInfoCenter"16@"<MPNowPlayingInfoTransportableSessionRequest>"24@?<v@?@"MPNowPlayingInfoTransportableSessionResponse"@"NSError">32
v32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
v40@0:8@"MPNowPlayingInfoCenter"16@"NSString"24@"NSError"32
@"MPNowPlayingContentItem"24@0:8q16
@"MPArtworkCatalog"32@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24
@"MPModelStorePlatformMetadataGenericObjectBuilder"
{?="initialized"b1"trackNumber"b1"trackCount"b1"playbackPosition"{?="identifiers"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}}
@"MPCModelGenericAVItemAssetLoadProperties"
v56@0:8^@16^@24@32q40@48
v32@0:8@"MPModelGenericObject"16@?<v@?@"NSError">24
v56@0:8^@16^@24@"MPModelGenericObject"32q40@"NSString"48
v40@0:8@"MPModelFileAsset"16@"MPModelGenericObject"24@?<v@?@"NSError">32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@32@0:8#16^{_NSZone=}24
@"MPCPrivateListeningStateSource"
@"NSTimeZone"
v32@0:8@"<MPMutableIdentifierListSection>"16@?<v@?@"NSError">24
B32@0:8@16q24
B32@0:8@"NSString"16q24
B32@0:8@"NSString"16@"NSString"24
q24@0:8@16
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSString"@"NSError">24
@"MPAVItem"32@0:8@"NSString"16@"NSString"24
v24@0:8@"MPAVItem"16
B24@0:8@"NSString"16
q24@0:8@"NSString"16
v40@0:8@"MPCQueueControllerDataSourceLoadRequest"16@"NSString"24@?<v@?@"NSError">32
@"MPPlaceholderAVItem"24@0:8@"NSString"16
@"NSString"24@0:8@"MPIdentifierSet"16
v40@0:8@?16@?24@?32
@"<MPCPlaybackIntentDataSource>"
@"<NSSecureCoding>"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"I"artwork"b1"allowsItemLiking"b1"attributionLabel"b1"type"b1"subtype"b1"subscriptionRequired"b1"providerUniversalLink"b1"providerBundleIdentifier"b1}
@"MPCFuture"16@0:8
@"MPCMediaRemoteController"16@0:8
@"MPCPlaybackEngineMiddleware"
@"MPCPlayerRequest"
@"MPModelPlayEvent"
@64@0:8@16@24@32q40@48@?56
@"<MPCAssetLoaderDelegate>"
@"MPCPlayerItemConfigurator"
v40@0:8@16q24@?32
v40@0:8@"<MFQueuePlayerItem>"16q24@?<v@?@"<MFQueuePlayerItem>"q@"NSError">32
@"MPExportableArtworkProperties"
@40@0:8@16{CGSize=dd}24
q20@0:8{?=BBBB}16
v28@0:8{?=BBBB}16@?20
@"MPModelGenericObject"16@0:8
@"MPCStoreFrontLocalEquivalencyMiddleware"
@44@0:8I16@20@28@36
I16@0:8
@32@0:8@16Q24
@"MPCPlayerCommandRequest"
v32@0:8{?=qq}16
{?="reverseCount"q"forwardCount"q}
@"MPCPlayerResponseTracklist"
@"UIView<MPCVideoView>"
@"<MPCVideoOutput>"
@"MPCPlayerResponse"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
@"ICUserIdentity"
@"<MPCContinueListeningRadioQueueProviding>"
@"MPCModelRadioContentReference"
@"MPModelRadioStation"
@"MPModelResponse"16@0:8
v24@0:8@"MPModelResponse"16
@24@0:8@?16
@48@0:8@16q24@32@40
@56@0:8@16q24@32@40[1{__va_list_tag=II^v^v}]48
@"NSNumber"24@0:8q16
@32@0:8q16@?24
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@"NSObject<OS_dispatch_source>"
@"MPStoreLibraryPersonalizationResponse"
@"NSDate"
@"MPModelFileAsset"
@"MPModelHomeSharingAsset"
@"MPIdentifierSet"
@"MPModelStoreAsset"
@80@0:8@16@24{?=QQQQd}32@72
d24@0:8@16
{?=QQQQd}16@0:8
@"NSUUID"
{?="flags"Q"machAbsoluteTime"Q"rawNanoSeconds"Q"timebase"Q"userSecondsSinceReferenceDate"d}
@"<MPCSupportedCommands>"
@"NSIndexPath"
@28@0:8I16@20
f24@0:8@16
v40@0:8@"NSError"16@"<MFPlayerItem>"24@?<v@?q>32
v52@0:8@16@24B32q36@?44
q32@0:8@16@24
@"<MPCExternalPlaybackRouter>"
@"NSDictionary"16@0:8
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
@"NSLock"
@"NSHashTable"
@"MPRequestResponseController"
@"MPModelRequest<MPCModelPlaybackRequest>"
@"MPModelResponse<MPCModelPlaybackResponse>"
@"<MPMutableIdentifierListSection>"
@"MPCModelPlaybackContext"
{os_unfair_lock_s=I}16@0:8
{?="dataSourcePlaceholderItemForLoadingAdditionalItemsInSection"b1"dataSourceSupplementalPlaybackContextWithReason"b1"dataSourceSupplementalPlaybackContextBehavior"b1"dataSourceCanSkipItem"b1"dataSourceFirstItemIntersectingIdentifierSet"b1"dataSourceItemDidBeginPlayback"b1"dataSourceShouldRequestAdditionalItemsWhenReachingTailOfSection"b1"dataSourcePrefetchThresholdForSection"b1"dataSourceShouldUsePlaceholderForItemInSection"b1"dataSourceSectionShouldShuffleExcludeItem"b1"dataSourceUpdatedPlaybackContext"b1}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MPPlaceholderAVItem"
@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>"
@"MPPlaybackContext"
d40@0:8@16@24@32
v48@0:8@16@24@32@40
v32@0:8@16d24
@"ICPlayActivityController"
v36@0:8I16@20@?28
q32@0:8{_MSVSignedRange=qq}16
@32@0:8{_MSVSignedRange=qq}16
@24@0:8^v16
q40@0:8@16{CGSize=dd}24
@48@0:8@16@24{CGSize=dd}32
v32@0:8@"MPCPlaybackIntent"16@?<v@?@"MPPlaybackContext"@"NSError">24
^{_MRSystemAppPlaybackQueue=}16@0:8
@"MPMediaQuery"
@"MPMediaItem"
@44@0:8@16@24i32@36
@36@0:8@16^v24B32
@40@0:8^v16@24@32
v32@0:8@?16@?24
^v16@0:8
@"MPAVRoute"
v44@0:8@16@24@32i40
v72@0:8@16@24{?=QQQQd}32
v28@0:8@16i24
v56@0:8{?=QQQQd}16
@"MPModelRequest"
@"ICRadioContentReference"
@"MPCReportingController"
@"NSError"
@"MPCStoreLibraryPersonalizationMiddleware"
@"<MFPlaybackStackController>"
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v32@0:8@"<MFExternalPlaybackConfigurable>"16@"<MFQueuePlayerItem>"24
@"MPAVRoutingController"
@24@0:8Q16
v32@0:8Q16@?24
v48@0:8@16Q24Q32@?40
@24@0:8d16
v28@0:8Q16B24
@"CPLRUDictionary"
v44@0:8I16@20@28@?36
v56@0:8@16@24@32@40@?48
v52@0:8I16@20^v28@36@?44
v52@0:8I16^v20@28@36@?44
^v32@0:8@16@24
@"MPCAssistantConnection"
@"MPCAssistantDiscovery"
Q24@0:8Q16
{_NSRange=QQ}16@0:8
q24@0:8q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@"MPCPlayerCommandRequest"16@0:8
@"MPCPlayerCommandRequest"24@0:8@"MPCPlaybackIntent"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16q24
@"NSSet"
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16@"MPCPlayerResponseItem"24
B32@0:8@16B24i28
B24@0:8@"MPCPlayerResponseItem"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlayerResponseItem"16@"MPCPlayerResponseItem"24
@"NSIndexPath"32@0:8@"NSIndexPath"16@"NSIndexPath"24
@"MPCPlayerCommandRequest"24@0:8q16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseSection"16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseItem"16
@20@0:8B16
@"MPCPlayerCommandRequest"20@0:8B16
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v24@0:8@"MPShuffleableSectionedIdentifierList"16
@"NSString"32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
@"NSArray"24@0:8q16
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B32@0:8q16@24
@32@0:8q16@24
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
B32@0:8q16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"32@0:8q16@"MPArtworkCatalog"24
v40@0:8q16@"MPArtworkCatalog"24@?<v@?@"MPArtworkRepresentation"@"NSError">32
@28@0:8@16B24
@44@0:8@16q24q32B40
@"MPAVItem"28@0:8@"NSString"16B24
@"MPAVItem"44@0:8@"MPAVItem"16q24q32B40
B32@0:8q16@"MPAVItem"24
@"MPAVItem"32@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24
v40@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24@"MPAVItem"32
v24@0:8@"<MPAVQueueCoordinating>"16
v44@0:8@16q24B32@?36
v48@0:8@16q24B32B36@?40
@40@0:8q16q24^B32
@40@0:8q16q24^q32
B24@0:8@"MPAVItem"16
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSError">24
v40@0:8@"MPPlaybackContext"16q24@?<v@?@"NSError">32
v44@0:8@"MPPlaybackContext"16q24B32@?<v@?@"NSError">36
v48@0:8@"MPPlaybackContext"16q24B32B36@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"MPAVController"16@"MPAVItem"24@"MPAVItem"32
v28@0:8@"NSString"16B24
@"NSString"24@0:8q16
@"NSString"40@0:8q16q24^B32
@"MPAVItem"24@0:8@"NSString"16
@"<MPAVQueueControllerDelegate>"16@0:8
v24@0:8@"<MPAVQueueControllerDelegate>"16
@"<MPAVQueueCoordinating>"16@0:8
@"NSArray"40@0:8q16q24^q32
v32@0:8q16@24
v32@0:8q16@"NSString"24
v64@0:8@16q24@32@40Q48@?56
@48@0:8q16@24q32^B40
@32@0:8@16^B24
@"<MPAVQueueControllerDelegate>"
@"<MPAVQueueCoordinating>"
@"MPSectionedIdentifierListPosition"
@"MPShuffleableSectionedIdentifierList"
@"MPSectionedIdentifierList"
@56@0:8@16q24Q32@40@48
@"MPCQueueController"
@"NSEnumerator"
@"<MPSectionedIdentifierListEnumerationItem>"16@0:8
@"<MPSectionedIdentifierListEnumerationTrackingEntry>"16@0:8
v28@0:8d16f24
@"NSObject<OS_dispatch_group>"
{?=dddddffBB}16@0:8
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
@"MPCPlayerCommandRequest"24@0:8d16
@20@0:8f16
@"MPCPlayerCommandRequest"20@0:8f16
@28@0:8@16I24
v40@0:8d16d24@32
v32@0:8d16d24
v32@0:8d16@24
d32@0:8@16d24
@"MPAVController"
v80@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16q24{?={?=qiIq}{?=qiIq}}32
v88@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16q24{?={?=qiIq}{?=qiIq}}32@80
^{OpaqueFFTSetup=}16@0:8
v24@0:8^{OpaqueFFTSetup=}16
^f16@0:8
v24@0:8^f16
{DSPSplitComplex="realp"^f"imagp"^f}
^{opaqueMTAudioProcessingTap=}
^{OpaqueFFTSetup=}
@"MPCAudioSpectrumAnalyzer"
q24@0:8{MPCAudioSpectrumAnalyzerBand=ff}16
f32@0:8q16o^{MPCAudioSpectrumAnalyzerBand=ff}24
^{_MPCAudioSpectrumAnalyzerBandInternal={MPCAudioSpectrumAnalyzerBand=ff}fffQ}
B28@0:8@16B24
@"<MPCExplicitContentAuthorizationDelegate>"
@"ICAgeVerificationState"
@"AVPlayerItem"16@0:8
@"NSURL"16@0:8
v48@0:8I16@20I28@32@?40
v52@0:8I16@20@28@36@?44
v40@0:8@"MSVLRUDictionary"16@24@32
@?24@0:8@16
@?<@"MPArtworkCatalog"@?@"MPModelObject">24@0:8@"MPNowPlayingContentItem"16
v56@0:8@16{_MSVSignedRange=qq}24{_MSVSignedRange=qq}40
@?28@0:8I16@20
@?36@0:8@16d24f32
{_MSVSignedRange="location"q"length"q}
@"MSVLRUDictionary"
@"<MPArtworkDataSource>"
^v20@0:8I16
v32@0:8^v16@?24
@"MSVSQLDatabase"
@"<MPCPlabackEngineEventStreamTestingDelegate>"
v32@0:8@"NSString"16@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">24
v40@0:8@"NSString"16Q24@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">32
v24@0:8@?<v@?>16
@"<MPCPlaybackEngineEventConsumer>"
v32@0:8@"NSString"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
v32@0:8@"NSArray"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
@"MPCPlaybackEngineEvent"32@0:8@"NSString"16@"NSDictionary"24
@"MPCPlaybackEngineEvent"32@0:8@"NSArray"16@"NSDictionary"24
q32@0:8@"NSString"16@"NSDictionary"24
q32@0:8@"NSArray"16@"NSDictionary"24
@"<MPCPlaybackEngineEventStreamCursor>"24@0:8@"MPCPlaybackEngineEvent"16
@"<MPCPlaybackEngineEventStreamCursor>"32@0:8@"MPCPlaybackEngineEvent"16@"MPCPlaybackEngineEvent"24
@32@0:8@16@?24
@"NSProgress"
i16@0:8
@"_MPCProtoContainerIdentifierSet"
{?="containerType"b1}
{?="cloudID"b1"delegateInfoID"b1"storeAdamID"b1}
{?="accountID"b1"delegateInfoID"b1"systemReleaseType"b1"privateListeningEnabled"b1}
@"_MPCProtoItemIdentifierSet"
{?="mediaType"b1"excludeFromShuffle"b1}
{?="cloudID"b1"delegateInfoID"b1"purchaseHistoryID"b1"storeAdamID"b1"storeSubscriptionAdamID"b1}
@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference"
@"_MPCProtoRadioContentReferenceLibraryArtistContentReference"
@"_MPCProtoRadioContentReferenceLibraryItemContentReference"
@"_MPCProtoRadioContentReferenceStoreContentReference"
{?="representativeItemCloudID"b1"storeAdamID"b1}
{?="cloudID"b1"duration"b1"fileSize"b1"storeAdamID"b1"albumDiscCount"b1"albumTrackCount"b1"contentType"b1"discNumber"b1"trackNumber"b1"year"b1"isCompilation"b1}
{?="storeAdamID"b1}
@"_MPCProtoDelegateInfo"
@"_MPCProtoRadioContentReference"
@"_MPCProtoTracklistIndexPath"
{?="shuffleMode"b1}
{?="containerIndex"b1"itemIndex"b1}
@"ICMediaRedownloadRequest"
@"ICRadioGetTracksRequest"
v40@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24@"NSError"32
v32@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24
@40@0:8@16@24^v32
v36@0:8@16{?=BBBB}24@?28
v44@0:8@16@24B32@?36
v48@0:8@16@24B32{?=BBBB}36@?40
@32@0:8^{_NSZone=}16#24
v24@0:8^v16
v40@0:8@"MPAVItem"16q24@?<v@?B@"NSError">32
@"<MPCPlaybackEngineDelegate>"
@"MPCPlaybackIntent"
@"MPProtocolProxy<MPCPlaybackEngineEventObserving>"
@"<MPCPlaybackEngineImplementation>"
@"_MPCMediaRemotePublisher"
@"_MPCMusicPlayerControllerServer"
@"_MPCReportingController"
@"_MPCPlaybackEngineSessionManager"
@"_MPCLeaseManager"
@"_MPCPlaybackAccountManager"
@"_MPCFairPlayPerformanceController"
v32@0:8@16^v24
@36@0:8@16@24B32
@"MPStoreModelGenericObjectBuilder"
v32@0:8@"ICSuzeLeaseSession"16@"NSError"24
@"ICSuzeLeaseSession"
@"<MPCPlaybackEngineEventPayloadJSONValue>"16@0:8
@24@0:8@"<MPCPlaybackEngineEventPayloadJSONValue>"16
@"MPModelSong"
@"ICPlayActivityEnqueuerProperties"
@"MPNowPlayingContentItem"
@"UIImage"
@"ICMusicSubscriptionStatus"
@"ICURLBag"
@"MPCPlayerSessionResponse"
@"ICPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@"MPAssistantAnalyticsReportingController"
@"MPRTCReportingController"
@"MPCPlaybackHistoryController"
@"MPCLyricsReportingController"
v32@0:8@"<MFPlayerItem>"16@?<v@?>24
@48@0:8@16q24q32q40
@"<MFQueuePlayerItem>"48@0:8@"<MFQueuePlayerItem>"16q24q32q40
@"<MFQueuePlayerItem>"28@0:8@"<MFPlayerItem>"16B24
B32@0:8q16@"<MFPlayerItem>"24
@"<MPCQueueItemProviding>"
@"ICRadioGetTracksResponse"
@32@0:8@16^@24
@24@0:8#16
@"MPCPlaybackDelegationProperties"
@"ICRadioPlaybackHistoryStore"
@"_MPCModelRadioPlaybackQueueStationTracksCollection"
@"ICMutableRadioPlaybackHistory"
v44@0:8@16@24{?=BBBB}32@?36
v52@0:8@16@24{?=BBBB}32@36@?44
v48@0:8@16@24@32@?40
@"MPCAssistantSendCommand"
@"MPCAssistantEndpointContext"
v36@0:8f16@20d28
v52@0:8q16q24@32d40f48
v36@0:8d16@24f32
@"MPCModelRadioPlaybackQueue"
@"MPCModelRadioPlaybackContext"
@"MPCModelRadioPersonalizationResponse"
@"ICUserIdentityStore"
