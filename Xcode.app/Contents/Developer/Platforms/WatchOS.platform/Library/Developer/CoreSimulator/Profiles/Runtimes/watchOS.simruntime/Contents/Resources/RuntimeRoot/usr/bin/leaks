@(#)PROGRAM:leaks  PROJECT:SamplingTools-64541.4.1
@DYLD_INSERT_LIBRARIES=
MbP?
.memgraph
%s[%d]: [fatal] unable to read input graph: %s
Command args:    %@
Target process:  %@ [%u]
Parent process:  %@ [%u]
Target process of memgraph:  %@ [%u]
../lib/libLeaksAtExit.dylib
%s[%d]: [fatal] unable to locate required library: %s
DYLD_INSERT_LIBRARIES
DYLD_INSERT_LIBRARIES=%s:%s
DYLD_INSERT_LIBRARIES=%s
%s[%d]: [fatal] --atExit must be followed by " -- <command>"
%s[%d]: [fatal] No command specified after '--atExit -- '
%s[%d]: [fatal] Unable to launch --atExit command '%s': %s
%s[%d]: [fatal] Couldn't get task port for pid %u immediately after launch
%s[%d]: Unable to deallocate target task port: %d (%s)
%s[%d]: [fatal] Couldn't get task port for pid %u after receiving STOP signal
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
launchd
coresymbolicationd
coreservicesd
UserEventAgent
rpc.lockd
launchservicesd
Activity Monitor
mdworker
spindump_agent
WindowServer
hidd
bluetoothd
logd
loginwindow
usbd
TouchBarServer
sysdiagnose
coreaudiod
kextd
notifyd
powerd
ReportCrash
ReportMemoryException
ReportPanic
watchdogd
cfprefsd
Process exists but has not started -- it is launched-suspended
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
DT_FORCE_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
%s[%d]: respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but the analysis process does not match the SDK variant of the target process %d.
Analysis of malloc zones may fail.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
DYLD_FORCE_PLATFORM
x86_64
i386
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
__check_mach_ports_lookup
__check_parent_tool_v1
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal]  child process status could not be determined; exit code unavailable.
v8@?0
v20@?0I8I12I16
v12@?0I8
i24@?0r^v8r^v16
%s-%d-%s
/tmp/%s-allProcesses[%d].XXXXXX
%s[%d]: [fatal] Couldn't create output directory from template %s, exiting
%s[%d]: [fatal] Couldn't change directory to %s
stderr.txt
Couldn't create error file stderr.txt (%s)
Couldn't replace stderr file with stderr.txt (%s)
Writing output files into %s
Skipping process of wrong architecture:  %d %s
%5d: %s
.txt
Couldn't open output file %s (%s)
Couldn't replace output file with %s (%s)
generate corpse in analyzeAllProcesses()
Exception '%s', reason: '%s'
v16@?0i8I12
v40@?0i8r*12B20I24I28^B32
Wrote output files into %s
To print all files in pid order use:  (cd %s; cat `/bin/ls -tr1 *.txt`) 
%s[%d]: [fatal] 'pid_for_task' failed: %s (%d)
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
Target process is using %s so not generating corpse for better performance.
Failed to generate corpse from the process: %d (%s)
%s[%d]: [fatal] %s, exiting
%s[%d]: %s
%s[%d]: [fatal] Corpse generated for the process is incomplete, which can happen with processes that use a lot of memory
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
v24@?0{_CSTypeRef=QQ}8
%s/usr/bin/%s
v20@?0I8@?<v@?>12
_.([@
error in %@ <classes> pattern '%@' - cannot match the start of a class name
error in %@ <classes> pattern '%@' - no starting bracket [: %s
malloc
non-object
error in %@ <classes> pattern '%@': %s
Region
Thread
.*%@
%@.*
error in % <region-description> pattern '%@': %s
malloc size pattern '%@' was not of expected format '[size]' or '[lowerSizeBound-upperSizeBound]'
error in malloc size pattern '%@':  if upper bound of size is given, it must be %llu or more
error in malloc size pattern '%@': lower bound of size (%llu) should be <= upper bound of size (%llu)
error in malloc size pattern '%@':  size must be %llu or more
error in malloc size pattern '%@':  size must be a multiple of %llu, or a range like '[lowerSizeBound-upperSizeBound]'
%s[%d]: [fatal] %s
-[VMUClassPatternMatcher matchesNodeDetails:orNodeDescription:]
VMUClassPatternMatcher.m
malloc size lower bound (%llu) expected to be <= upper bound (%llu)
matchingKindOfClass
TB,N,GisMatchingKindOfClass
com.apple.dt.instruments
debugTimer
T@"VMUDebugTimer",&,N,V_debugTimer
returnCode
Ti,N,V_returnCode
inputGraphPath
T@"NSString",&,N,V_inputGraphPath
inputGraphData
T@"NSData",&,N,V_inputGraphData
outputGraphPath
T@"NSString",&,N,V_outputGraphPath
parser
T@"VMUOptionParser",&,N,V_parser
argumentError
T@"NSError",&,N,V_argumentError
excludedFrames
T@"NSMutableSet",&,N,V_excludedFrames
showProcessInfoMode
TB,N,V_showProcessInfoMode
debugMode
TB,N,V_debugMode
debugLayout
TB,N,V_debugLayout
debugHistogram
TB,N,V_debugHistogram
debugReferences
TB,N,V_debugReferences
debugContents
TB,N,V_debugContents
referenceTreeMode
TB,N,V_referenceTreeMode
TB,N,V_groupByType
referenceTreeShowRegionVirtualSize
TB,N,V_referenceTreeShowRegionVirtualSize
traceMode
TB,N,V_traceMode
traceTree
TB,N,V_traceTree
autoreleasePoolMode
TB,N,V_autoreleasePoolMode
allProcesses
TB,N,V_allProcesses
maxInterior
TQ,N,V_maxInterior
exactScanning
TB,N,V_exactScanning
collectVMpageStatistics
TB,N,V_collectVMpageStatistics
collectPhysFootprintStatistics
TB,N,V_collectPhysFootprintStatistics
checkAbandoned
TB,N,V_checkAbandoned
TB,N,V_forkCorpse
collectFullDiskStackLogs
TB,N,V_collectFullDiskStackLogs
showListOfLeaks
TB,N,V_showListOfLeaks
showRawClassNames
TB,N,V_showRawClassNames
showStacks
TB,N,V_showStacks
TB,N,V_fullStacks
showSourceInfo
TB,N,V_showSourceInfo
showBinaryContents
TB,N,V_showBinaryContents
showLeakedVMregions
TB,N,V_showLeakedVMregions
showOnlyVMregions
TB,N,V_showOnlyVMregions
quietMode
TB,N,V_quietMode
TB,N,V_suppressOutput
compress
TB,N,V_compress
objectContentLevel
TI,N,V_objectContentLevel
TB,N,V_nocontext
excludePersonalInfo
TB,N,V_excludePersonalInfo
postprocessGraph
TB,N,V_postprocessGraph
atExit
TB,N,V_atExit
desiredAddress
TQ,N,V_desiredAddress
classesPatternMatcher
T@"VMUClassPatternMatcher",&,N,V_classesPatternMatcher
ipsIncidentID
T@"NSString",&,N,V_ipsIncidentID
nonIPSMemgraphCount
Ti,N,V_nonIPSMemgraphCount
rateLimit
TB,N,V_rateLimit
outputFile
T^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq},N,V_outputFile
autoreleasePoolsExtraReleasesCount
TI,N,V_autoreleasePoolsExtraReleasesCount
message
unknown error
Search through a process for leaked memory.
[options] pid | partial-process-name | memory-graph-file
       leaks [options] --atExit -- <command-and-arguments>
exclude
exclude leaked blocks whose backtraces include the specified symbol
v24@?0@"NSString"8^@16
help
show this helpful usage message!
showTiming
initialization
quiet
suppress the process description header and footer
list
print the leaks as a list ("classic"-style) rather than as a tree
groupByType
in leak trees, group children by type rather than showing individual instances
nostacks
do not print backtraces or save them in the memory graph file, even when available
fullStacks
print backtraces with one line per frame
nosources
do not show sourceFile:lineNumber in backtraces
rawNames
show raw class names instead of display names.
fullStackHistory
collects all memory allocation call stacks that are available, including historical allocations that have been freed.
outputGraph
path
save a memory graph file into the given directory or file
/tmp
physFootprint
collect phys_footprint statistics for memory regions
fullContent
print or save full allocation content descriptions
(this is the default for printing output for live processes)
readonlyContent
print or save just readonly allocation content descriptions
(this is the default for saving memory graphs)
noContent
do not save or print any allocation content descriptions
nocontext
excludePersonalInformation
nocontents
show the hex content of leaked allocations, if there is no description of content
conservative
don't attempt smart ivar-based scanning, go byte for byte
noScanOverlay
DT_NO_SCAN_OVERLAY
forkCorpse
generate a corpse fork from process and run leaks on it
getCorpseFromParent
trace
address
print chains of references from process 'roots' (e.g., global data) to the given block
print a reverse tree of references, from the given block up to the process roots
-traceTree
referenceTree
print a reference tree of allocated memory starting at root nodes
virtual
show virtual size of referenced VM regions instead of dirty size
autoreleasePools
print contents of autorelease pools, by thread
debug
mode
enable additional debugging modes; list available modes with -debug=help
Modes of 'leaks <process> -debug'.  More than one different mode flag can be passed,
such as '-debug='.*Storage.*' -debug=references'.
    -debug            -- full output
    -debug=layout     -- full output, including object layout and values of ivars
    -debug=histogram  -- only show histogram of number of allocations having each reference count
    -debug=references -- only show references to the allocation (not content or layout), and only if reference count > 1
    -debug=contents   -- only show contents (reference from the allocation)
    -debug=<address>  -- only show the allocation at or containing <address>
    -debug=<classes-pattern>  -- show allocations whose class name matches pattern
    -debug=<region-description-pattern>  -- show non-malloc nodes (e.g. VM regions, threads) whose description matches pattern
    -debug=stacks     -- show stack backtraces for nodes
layout
histogram
references
contents
stacks
-debug
maxInteriorOffset
how far into large regions to scan to find outgoing references, in bytes
suppressOutput
write output to given path instead of stdout
unable to open output file "%s" for writing: %s (%d)
vmalso
show leaked VM regions
novm
vmonly
vmPageStatistics
report abandoned memory
minimumPid
run leaks against all processes (or those >= minimumPid), with the given arguments
launch the specified command and run leaks when that process exits.
This should be the last argument; use '--atExit -- <command-and-arguments>'
processInfo
show only process description header and binary images list
Cannot pass pid, process-name, or memgraph ('%@'), with '--atExit -- <command>'
unknown argument: %@
com.apple.leaks
at most one mode should be specified (--outputGraph, --autoreleasePools, --traceTree, --referenceTree, --debug, --processInfo)
at most one mode should be specified (--outputGraph, --traceTree)
%s[%d]: --nocontext is deprecated, use --noContent instead
only one of --fullContent, --readonlyContent, --noContent, or --nocontext can be specified;  also, --nocontext is deprecated, use --noContent instead
only one of --fullContent, --readonlyContent, or --noContent can be specified
Ignoring --fullContent flag because --excludePersonalInfo was specified.
--al
to generate memgraphs for all processes, use 'leaks -outputGraph -allProcesses <other arguments>'
no output graph path specified
no process specified
Saving all memgraph files into output directory (ignoring path %s)
%s[%d]: [fatal] target process no longer exists; abandoning...
%s[%d]: [fatal] mach port for process %d not valid
%s[%d]: [fatal] process %d has not started
generate corpse
Process %d is not debuggable. Due to security restrictions, leaks can only show or save contents of readonly memory of restricted processes.
-[scanner processSnapshotGraph]
v16@?0^v8
completed setup of scanner and/or graph, proceeding to leaks analysis mode
%s[%d]: [fatal] ignoring --outputGraph option as path provided would overwrite the source graph file
leaks Report Version: 3.0
leaks Report Version: 4.0
, multi-line stacks
unable to instantiate a memory scanner.
%s[%d]: %s
%s[%d]: [fatal] %s
addRootNodesFromTask
addMallocNodesFromTask
archiving graph
%s[%d]: [fatal] cannot save a memgraph in IPS format and also save disk logs
length
bug_type
memgraph
name
displayName
incidentID
%s[%d]: [fatal] unable to write JSON header: %s
write graph to file
%@[%d].XXXXXX.%@
%s[%d]: [fatal] unable to create file "%s" for memory graph: %d %s
%s[%d]: [fatal] unable to write graph to output file "%s": %s
url= <<%s>>
%@_%@
LogType
Output graph successfully written to '%s' [%3.2f MB]
memgraph.%@
Will not upload memgraph. rate limits: global=%lf proc=%lf. rand=%lf
memgraph.CountLimit
memgraph.%@.CountLimit
Will not take memgraph, because the limit of %.0lf graphs has been reached
%@.t
%@.signal
%@.exponent
%@.numerator
%@.coef_denominator
com.apple.da
mobile
DISKLOGS
v16@?0@?<i@?^vQ>8
v68@?0I8I12I16{?=^{?}{?=QIQ}^{?}}20^B60
SCANNING %s
Call stack: %s
REFERENCES TO THIS: %u
   STRONG: %u  CONSERVATIVE: %u  WEAK UU etc: %u
   SELF: %u
  SELF-REF
   %s
v28@?0I8I12I16^B20
LAYOUT OF %s (%s)
%llu bytes into 
--> %@%@
%5u: %s%s%s  %s
v32@?0@"VMUFieldInfo"8Q16^B24
v16@?0@"VMUClassInfo"8
%5u: <extra space>[%llu]
CONTENTS:
%u POINTERS FROM %s
v24@?0@"VMUVMRegion"8^B16
NODE COUNT:  %u   OWNING-REFS COUNT: %u   AVERAGE OWNING-REFS PER NODE: %.2f
    %10u %s references
SELF-REFERENCES:  %u
%26lu   %8lu
   leaked blocks and VM regions
   %s
MallocStackLoggingLite
v44@?0I8{?=Qb60b4@}12^B36
%s[%d]: [fatal] address provided for reference tracing (%#llx) not found in target process's heap
Tracing: %s
C16@?0I8C12
B28@?0I8I12I16*20
Found %u root%s referencing: %s
This is a reverse reference tree showing how the specified block is referenced.
The top node is the specified block, the next level down are blocks that reference that, and so on.
The number at the start of each line is the number of paths-to-roots going through that node.
This reverse reference tree can be imported into Instruments using Import Sample Data to allow data mining.
printReferenceTree identifying root regions
printReferenceTree building call tree from references
__DATA
%@ %@
Stack
Stack of %@
void printReferenceTree(VMUProcessObjectGraph *__strong)
leaks.m
Malloc blocks should not be root nodes of reference graph
__DATA __objc
void printReferenceTree(VMUProcessObjectGraph *__strong)_block_invoke
expected dstCallTreeNode to be nil since dstNode wasn't marked reachable previously
%@ %@: '%@[]'
expected to get VMUVMRegion for VM region node
%@  dirty: %s  swapped: %s
%@  purgableVolatile: %s
printReferenceTree addChildCountsIntoNode
printReferenceTree printing call tree
printReferenceTree releasing tree
no posix thread
unsigned int printAutoreleasePools(VMUProcessObjectGraph *__strong, VMUTaskMemoryScanner *__strong, __strong id<VMUStackLogReader>)_block_invoke
dyld
_main_thread
%*s  %8u
Total entries in autoreleasepools:
Unique entries in autoreleasepools:
%*s  %8u block%s  %8s bytes
Memory size of autoreleasepool content blocks:
Memory directly held only by autorelease pools:
Memory indirectly held only by autorelease pools:
%*s    ======           ======
Total memory of autorelease pools and content blocks:
Thread %u  %s
    %s
Number of autoreleases coalesced into previous entries: %u
   COALESCED AUTORELEASES: %u
        %u:  
%s%s
NSString *memoryTreeHeldByAutoreleasedNode(LeakDetector *__strong, VMUMarkingMap *, VMUCallTreeNode *__unsafe_unretained *, uint32_t)
Expected non-nil srcCallTreeNode
NSString *memoryTreeHeldByAutoreleasedNode(LeakDetector *__strong, VMUMarkingMap *, VMUCallTreeNode *__unsafe_unretained *, uint32_t)_block_invoke
COUNT OF OWNING REFERENCES   NUMBER OF NODES WITH THAT COUNT
Autorelease pool pages not associated with a thread
    no autorelease pool
No autorelease pools.
        Empty
      POOL BOUNDARY
containsString:
hasSuffix:
stringByResolvingSymlinksInPath
defaultManager
fileExistsAtPath:isDirectory:
isExecutableFileAtPath:
attributesOfItemAtPath:error:
fileSize
dataWithContentsOfFile:options:error:
localizedDescription
UTF8String
string
processInfo
arguments
arrayWithArray:
objectAtIndexedSubscript:
lastPathComponent
setObject:atIndexedSubscript:
componentsJoinedByString:
appendFormat:
initWithTask:getBinariesList:
executablePath
parentPid
parentProcessPath
processName
length
mainBundle
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
stringByStandardizingPath
fileExistsAtPath:
intValue
initWithPid:
name
containsObject:
is64Bit
valueForEnvVar:
stringWithFormat:
numberWithUnsignedInt:
stringValue
numberWithInt:
sharedTimerIfCreated
startWithMessage:
reason
callStackSymbols
init
letterCharacterSet
addCharactersInString:
rangeOfCharacterFromSet:
rangeOfString:options:
substringFromIndex:
substringToIndex:
_parseMallocSizePattern:error:
isEqualToString:
hasPrefix:
dealloc
className
_regex:matchesName:
displayName
superclassInfo
_matchesClassInfo:
classInfoWithClassName:binaryPath:type:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
isMatchingKindOfClass
setMatchingKindOfClass:
initWithPattern:forArgument:error:
resetCachedMatches
matchesNodeDetails:orNodeDescription:
_classesRegex
_vmRegionsRegex
_memoizedRegexResult
_matchingKindOfClass
_patternMatchesNonObjects
_allocationSizeLowerBound
_allocationSizeUpperBound
debugTimer
setDebugTimer:
returnCode
setReturnCode:
inputGraphPath
setInputGraphPath:
inputGraphData
setInputGraphData:
outputGraphPath
setOutputGraphPath:
parser
setParser:
argumentError
setArgumentError:
excludedFrames
setExcludedFrames:
showProcessInfoMode
setShowProcessInfoMode:
debugMode
setDebugMode:
debugLayout
setDebugLayout:
debugHistogram
setDebugHistogram:
debugReferences
setDebugReferences:
debugContents
setDebugContents:
referenceTreeMode
setReferenceTreeMode:
groupByType
setGroupByType:
referenceTreeShowRegionVirtualSize
setReferenceTreeShowRegionVirtualSize:
traceMode
setTraceMode:
traceTree
setTraceTree:
autoreleasePoolMode
setAutoreleasePoolMode:
allProcesses
setAllProcesses:
maxInterior
setMaxInterior:
exactScanning
setExactScanning:
collectVMpageStatistics
setCollectVMpageStatistics:
collectPhysFootprintStatistics
setCollectPhysFootprintStatistics:
checkAbandoned
setCheckAbandoned:
forkCorpse
setForkCorpse:
collectFullDiskStackLogs
setCollectFullDiskStackLogs:
showListOfLeaks
setShowListOfLeaks:
showRawClassNames
setShowRawClassNames:
showStacks
setShowStacks:
fullStacks
setFullStacks:
showSourceInfo
setShowSourceInfo:
showBinaryContents
setShowBinaryContents:
showLeakedVMregions
setShowLeakedVMregions:
showOnlyVMregions
setShowOnlyVMregions:
quietMode
setQuietMode:
suppressOutput
setSuppressOutput:
compress
setCompress:
objectContentLevel
setObjectContentLevel:
nocontext
setNocontext:
excludePersonalInfo
setExcludePersonalInfo:
postprocessGraph
setPostprocessGraph:
atExit
setAtExit:
desiredAddress
setDesiredAddress:
classesPatternMatcher
setClassesPatternMatcher:
ipsIncidentID
setIpsIncidentID:
nonIPSMemgraphCount
setNonIPSMemgraphCount:
rateLimit
setRateLimit:
outputFile
setOutputFile:
autoreleasePoolsExtraReleasesCount
setAutoreleasePoolsExtraReleasesCount:
.cxx_destruct
_showProcessInfoMode
_debugMode
_debugLayout
_debugHistogram
_debugReferences
_debugContents
_referenceTreeMode
_groupByType
_referenceTreeShowRegionVirtualSize
_traceMode
_traceTree
_autoreleasePoolMode
_allProcesses
_exactScanning
_collectVMpageStatistics
_collectPhysFootprintStatistics
_checkAbandoned
_forkCorpse
_collectFullDiskStackLogs
_showListOfLeaks
_showRawClassNames
_showStacks
_fullStacks
_showSourceInfo
_showBinaryContents
_showLeakedVMregions
_showOnlyVMregions
_quietMode
_suppressOutput
_compress
_nocontext
_excludePersonalInfo
_postprocessGraph
_atExit
_rateLimit
_returnCode
_objectContentLevel
_nonIPSMemgraphCount
_autoreleasePoolsExtraReleasesCount
_debugTimer
_inputGraphPath
_inputGraphData
_outputGraphPath
_parser
_argumentError
_excludedFrames
_maxInterior
_desiredAddress
_classesPatternMatcher
_ipsIncidentID
_outputFile
initWithTask:graph:scanner:stackLogReader:
doNormalLeakDetection
task
doNormalLeakDetectionWithError:
userInfo
objectForKeyedSubscript:
doNormalLeakDetectionWithTask:graph:scanner:stackLogReader:
checkTaskExistence
setPurposeDescription:
setSyntaxDescription:
addObject:
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:handler:
usage:
sharedTimer
stringByExpandingTildeInPath
boolValue
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:flags:handler:
copy
optind
parseArguments:withBlock:
stringWithCString:encoding:
characterAtIndex:
directedGraphWithData:error:
processDescriptionString
binaryImagesDescription
description
usage:shouldExit:
setObjectContentLevelForNodeLabels:
stackLogReader
initWithTask:symbolicator:
setScanner:
setScanningMask:
processSnapshotGraphWithOptions:
defaultOverlay
refineTypesWithOverlay:
refineEdges:withOptions:markingInvalid:
removeMarkedEdges:
withEdgeMarkingMap:
stop
initWithTask:options:
setExactScanningEnabled:
setAbandonedMarkingEnabled:
setMaxInteriorOffset:
addRootNodesFromTask
addMallocNodesFromTask
plistRepresentationWithOptions:
numberWithUnsignedInteger:
setValue:forKey:
dataWithJSONObject:options:error:
dataWithData:
appendBytes:length:
appendData:
fileSystemRepresentation
initWithFileDescriptor:closeOnDealloc:
closeFile
pathExtension
stringByAppendingPathExtension:
createFileAtPath:contents:attributes:
fileURLWithPath:
fileHandleForWritingToURL:error:
absoluteString
truncateFileAtOffset:
numberWithDouble:
scannerWithString:
scanDouble:
isAtEnd
streamFullStackLogsToBlock:
encapsulateData:to:withSupplementalDataTag:dataGeneratorBlock:
writeData:
invertedGraph
mapTableWithKeyOptions:valueOptions:
nodeNamespaceSize
zoneNameForIndex:
usesLiteMode
nodeDetails:
nodeDescription:
enumerateReferencesOfNode:withBlock:
symbolicatedBacktraceForNode:nodeDetails:isLiteZone:options:
referenceInfoWithName:
nodeDescription:withDestinationNode:referenceInfo:
stringByAppendingString:
enumerateEdgesOfNode:withBlock:
instanceSize
pointerSize
contentForNode:
typeName
offset
bitfieldWidth
size
descriptionOfFieldValueInObjectMemory:scanner:
getLeafFieldAtOffset:leafOffset:
stride
scanType
infoType
fullIvarNameAtOffset:
typedDescription
enumerateTypeFieldsWithBlock:
enumerateClassHierarchyWithBlock:
referenceDescription:withSourceNode:destinationNode:alignmentSpacing:
enumerateRegionsWithBlock:
count
enumerateObjectsWithBlock:
invertEdges
breadthFirstSearch:nodeVisitBlock:edgeVisitBlock:
initWithSymbolicator:sampler:options:
addChildWithName:address:count:numBytes:toNode:
appendString:
invertedNode
stringFromCallTreeIndentIfNoBranches:
withNodeMarkingMap:
vmuVMRegionForNode:
path
isSubmap
type
binarySectionRangeContainingAddress:
binarySectionNameForAddress:
regionSymbolRangeContainingAddress:
addRange:
sort
addUniqueChildWithName:address:count:numBytes:toNode:
rangeForLocation:
regionSymbolNameForAddress:
nodeTypeDescription:details:mallocBySize:
is64bit
referenceDescription:dstDescription:is64bit:
addChildCountsIntoNode
printCallTreeToFile:
markReachableNodesFromRoots:inMap:options:
markReachableNodesFromRoots:inMap:
threadNameForAddress:
nodeIsAutoreleasePoolContentPage:
rangeForSymbolName:inRegion:
nodeDetailIsAutoreleasePoolContentPage:
countByEnumeratingWithState:objects:count:
unsignedIntValue
graph
removeObject:
srcAddressToExtraAutoreleaseCountDict
numberWithUnsignedLongLong:
componentsSeparatedByString:
nodeDescription:usingDetails:
stringFromCallTreeWithOptions:
examining %@ [%u]
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_port_deallocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
%s[%d]: [error] 'mach_msg_send' failed: %s (%d)
VMUClassPatternMatcher
LeaksGlobals
LeakDetector
B16@0:8
v20@0:8B16
@40@0:8@16@24^@32
v16@0:8
B32@0:8@16^@24
B32@0:8^{?=iQ*^{re_guts}}16@24
B24@0:8@16
B48@0:8{?=Qb60b4@}16@40
^{?=iQ*^{re_guts}}
^{__CFDictionary=}
@16@0:8
v24@0:8@16
i16@0:8
v20@0:8i16
Q16@0:8
v24@0:8Q16
I16@0:8
v20@0:8I16
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@0:8
v24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
@"VMUDebugTimer"
@"NSString"
@"NSData"
@"VMUOptionParser"
@"NSError"
@"NSMutableSet"
@"VMUClassPatternMatcher"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
I44@0:8I16@20@28@36
@44@0:8I16@20@28@36
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>19A603013</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.SamplingTools.leaks</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>18R5569x</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>7.1</string>
<key>DTSDKBuild</key>
<string>18R5569x</string>
<key>DTSDKName</key>
<string>watchsimulator7.1.internal</string>
<key>DTXcode</key>
<string>1200</string>
<key>DTXcodeBuild</key>
<string>12A8179f</string>
<key>MinimumOSVersion</key>
<string>7.1</string>
<key>SecTaskAccess</key>
<array>
<string>allowed</string>
<string>safe</string>
</array>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.iosurfaceinfo</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceRootUserClient</string>
</array>
<key>task_for_pid-allow</key>
<true/>
</dict>
</plist>
zPLR
zPLR
