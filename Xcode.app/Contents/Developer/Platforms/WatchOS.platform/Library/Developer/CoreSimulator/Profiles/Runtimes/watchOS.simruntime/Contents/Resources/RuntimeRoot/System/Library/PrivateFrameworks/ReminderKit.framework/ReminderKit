@(#)PROGRAM:ReminderKit  PROJECT:ReminderKit-286.2
33333
0E-C
?333333
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA>AAA?456789:;<=AAAAAAA
AAAAAA
 !"#$%&'()*+,-./0123AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
@(#)PROGRAM:CRFramework  PROJECT:ReminderKit-
N6google8protobuf11MessageLiteE
N6google8protobuf2io16ArrayInputStreamE
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io18StringOutputStreamE
N6google8protobuf2io18CopyingInputStreamE
N6google8protobuf2io25CopyingInputStreamAdaptorE
N6google8protobuf2io19CopyingOutputStreamE
N6google8protobuf2io26CopyingOutputStreamAdaptorE
N15replica_manager22VectorTimestampElementE
N15replica_manager12ReplicaEntryE
N15replica_manager14ReplicaManagerE
N6google8protobuf2io19ZeroCopyInputStreamE
N6google8protobuf2io20ZeroCopyOutputStreamE
N18versioned_document8DocumentE
N18versioned_document7VersionE
N8topotext6StringE
N8topotext34VectorTimestamp_Clock_ReplicaClockE
N8topotext21VectorTimestamp_ClockE
N8topotext15VectorTimestampE
N8topotext6CharIDE
N8topotext9SubstringE
N8topotext15Selection_RangeE
N8topotext9SelectionE
N8topotext12AttributeRunE
N8topotext4FontE
N8topotext14ParagraphStyleE
N8topotext14AttachmentInfoE
N8topotext10AttachmentE
N8topotext8LocationE
N8topotext5MediaE
N8topotext12PreviewImageE
N8topotext4TodoE
N8topotext5ColorE
N6google8protobuf14FatalExceptionE
N6google8protobuf7ClosureE
N6google8protobuf8internal16FunctionClosure0E
N4CRDT8ObjectIDE
N4CRDT9TimestampE
N4CRDT14RegisterLatestE
N4CRDT23VectorTimestamp_ElementE
N4CRDT15VectorTimestampE
N4CRDT18Dictionary_ElementE
N4CRDT10DictionaryE
N4CRDT13Index_ElementE
N4CRDT5IndexE
N4CRDT13OneOf_ElementE
N4CRDT5OneOfE
N4CRDT27StringArray_ArrayAttachmentE
N4CRDT11StringArrayE
N4CRDT5ArrayE
N4CRDT10OrderedSetE
N4CRDT30Document_CustomObject_MapEntryE
N4CRDT21Document_CustomObjectE
N4CRDT18Document_DocObjectE
N4CRDT8DocumentE
N6google8protobuf8internal12FieldSkipperE
N6google8protobuf8internal29CodedOutputStreamFieldSkipperE
DEFAULT_TASK_CALENDAR_NAME
Reminders
local
Invalid day number
dayOfTheWeek
weekNumber
%ld%@
%@ <0x%x> { %@ }
supportsSecureCoding
TB,R
Tq,R,N,V_dayOfTheWeek
Tq,R,N,V_weekNumber
com.apple.reminderkit
default
type
ascending
Tq,R,N,V_type
TB,R,N,V_ascending
REMCDAuxiliaryReminderChangeDeleteInfo
reminderIdentifier
T@"NSString",R,N
oldListIdentifier
oldExternalIdentifier
T@"NSString",R,D,N
REMCDAuxiliaryReminderChangeMoveInfo
%llu.%llu
[%@]
elements
T@"NSArray",C,N,V_elements
<%@: %p>{UUID: %d, clock: %@, state: %@}
In Use
Available
{UUID: %d, clock: %@}
replicaUUIDIndex
TI,N,V_replicaUUIDIndex
clockElementList
T@"REMClockElementList",&,N,V_clockElementList
inUse
TB,N,V_inUse
client
T@"<REMReplicaManagerClient>",N,V_client
v8@?0
com.apple.dt.xctest.tool
com.apple.TestReminderKit.xctrunner
com.apple.iOSTestReminders.xctrunner
com.apple.macOSTestReminders.xctrunner
com.apple.watchOSTestReminders.xctrunner
Invalid crdtID
Invalid replicaUUIDIndex
Invalid crdtIDIndex
B32@?0@"REMReplicaEntry"8Q16^B24
v16@?0@"REMReplicaEntry"8
<%@: %p> {
currentVersion: %llu
maxLastSavedVersion: %llu
Replica UUIDs: %@
Replica Entries: %@
%lu: %@
v32@?0@"NSUUID"8Q16^B24
%@: %@
v32@?0@"NSString"8@"NSMutableArray"16^B24
version: %llu
Replica UUIDs: %@
Replica Entries: %@
Cannot deserialize replica manager from input data
Cannot serialize replica manager to data
Attempting to serialize a REMReplicaManager that is marked non-persistable
ivarLock
T{os_unfair_lock_s=I},N,V_ivarLock
isPersistable
TB,N,V_isPersistable
replicaUUIDs
T@"NSMutableOrderedSet",&,N,V_replicaUUIDs
replicaEntries
T@"NSMutableDictionary",&,N,V_replicaEntries
currentVersion
TQ,N,V_currentVersion
maxLastSavedVersion
TQ,N,V_maxLastSavedVersion
exceededMaxSerializedSize
TB,N,V_exceededMaxSerializedSize
managerData
version
<%@: %p>{version: %llu; %ld bytes}
isRepresentingDiscardedReplicaManager
TB,R,N
T@"NSData",R,N,V_managerData
TQ,R,N,V_version
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
store
T@"REMStore",R,N,V_store
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h
CHECK failed: (index) >= (0): 
CHECK failed: (index) < (size()): 
<%@: %p>{crdtID: %@}
ImportOptionConsiderDTENDForDueDate
/RID=
%@/RID=%llu
New in %@
This list is shared
Shared with %@
Shared with %@ & %u other(s)
Shared by %@
Invited by %@
declined
Invitation to share a reminder list with %@.
%1$@ %2$@ your shared reminder list.
joined
Local
%@ and %lu other items
Due Today
Untitled
New Reminder
%u more reminders
Complete
Ignore
Later
Mark as Completed
You have overdue reminders
Remind Me Tomorrow
Remind Me in an Hour
Remind Me in the Morning
Remind Me Next Weekend
Remind Me This Afternoon
Remind Me Tonight
%@ assigned you a reminder
%@ assigned you %lu reminders
View
Decline
Decline All
%u more lists with assignments
New Assignment
New List
Unknown
changeTracking
editor
crdt
alarmEngine
accountPlugin
utility
com.apple.reminderkit.store
suggestedAttributes
cloudkit
cloudkit.collaboration
migration
dataAccess
userAction
siriKit
applicationShortcut
notification
search
account
analytics
scripting
T@"NSObject<OS_os_log>",R,N
cloudkitCollaboration
com.apple.reminderkit.signpost
database
sync
container
read
write
OVERSIZED
com.apple.ReminderKit.REMChangeErrorDomain
Unexpected type of input token.
Error occurred internally executing history request.
Unsupported type of history result.
Failed to delete history.
Change token expired -- history is incomplete/truncated.
Failed to coalesce changes due to internal errors.
Could not map to an account object ID from the transaction.
Could not look up a store for the account identifier in the tracking state.
Persistence layer failure trying to read or write tracking state.
Could not encode or decode tracking state due to corrupted data.
Could not encode or decode auxiliary change info.
objectID
accountID
listID
parentReminderID
daCalendarItemUniqueIdentifier
externalIdentifier
externalModificationTag
daSyncToken
daPushKey
titleDocumentData
titleDocument
completed
completionDate
priority
flagged
startDateComponents
dueDateComponents
timeZone
allDay
creationDate
lastModifiedDate
recurrenceRules
notesDocumentData
notesDocument
attachments
alarms
assignments
contactHandles
icsDisplayOrder
icsUrl
importedICSData
subtaskIDsToUndelete
userActivity
siriFoundInAppsData
siriFoundInAppsUserConfirmation
lastBannerPresentationDate
<%@: %p %@>
accountCapabilities
resolutionTokenMap
T@"REMResolutionTokenMap",&,N
resolutionTokenMapData
T@"NSData",&,N
T@"NSString",C,N
changedKeysObserver
T@"REMChangedKeysObserver",&,N,V_changedKeysObserver
T@"REMObjectID",&,D,N
T@"NSArray",&,D,N
T@"NSSet",&,D,N
T@"NSData",&,D,N
TB,R,D,N
TQ,D,N
remObjectID
T@"REMObjectID",R,D,N
T@"NSDate",C,D,N
storage
T@"REMReminderStorage",&,N,V_storage
T@"REMAccountCapabilities",R,D,N
T@"REMCRMergeableStringDocument",&,D,N
titleAsString
notesAsString
T@"REMContactRepresentation",C,D,N
Tq,D,N
T@"NSString",C,D,N
T@"REMUserActivity",C,D,N
T@"NSData",C,D,N
displayDate
T@"REMDisplayDate",R,C,D,N
isOverdue
isRecurrent
legacyNotificationIdentifier
T@"NSString",R,C,D,N
T@"NSURL",C,D,N
assignmentContext
T@"REMReminderAssignmentContextChangeItem",R,N
saveRequest
T@"REMSaveRequest",R,N,V_saveRequest
listChangeItem
T@"REMListChangeItem",R,N
title
T@"NSAttributedString",C,N
notes
TB,D,N,GisCompleted
T@"NSDateComponents",C,D,N
T@"NSArray",R,D,N
attachmentContext
T@"REMReminderAttachmentContextChangeItem",R,N
subtaskContext
T@"REMReminderSubtaskContextChangeItem",R,N
flaggedContext
T@"REMReminderFlaggedContextChangeItem",R,N
T@"REMResolutionTokenMap",&,D,N
reminderChangeItem
T@"REMReminderChangeItem",&,N,V_reminderChangeItem
B24@?0@"REMAttachment"8@16
B32@?0@"REMAttachment"8Q16^B24
B24@?0@"REMAttachment"8@"NSDictionary"16
mutableAttachments
T@"NSMutableArray",&,N,V_mutableAttachments
T@"NSArray",R,N
fileAttachments
imageAttachments
urlAttachments
Tq,N
v24@?0@"REMAssignment"8^B16
mutableAssignments
T@"NSMutableSet",&,N,V_mutableAssignments
currentAssignment
T@"REMAssignment",R,N
T@"NSSet",R,N
com.apple.reminderkit.storeMustRefresh
com.apple.reminderkit.storeChanged
com.apple.reminderkit.shouldNotifyOfInteractionWithPeople
REMStoreDidChangeNotification
v12@?0i8
createIsolatedStoreContainer
v16@?0@"NSError"8
v24@?0@"REMStoreContainerToken"8@"NSError"16
destroyIsolatedStoreContainerWithToken
<%@: %p[%ld] storeContainerToken: %@>
<%@ inProgressSaveRequestContainer: %@>
nukeDatabase
@16@?0@"_REMInProgressSaveRequestsContainer"8
fetchReplicaManagerForAccountID:
v24@?0@"REMReplicaManagerSerializedData"8@"NSError"16
fetchReplicaManagersForAccountID
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"<REMXPCStorePerformer>"8
fetchRequest
v24@?0@"REMFetchResult"8@"NSError"16
inv_%@
v24@?0@"REMStoreInvocationResult"8@"NSError"16
swInv_%@
v24@?0@"REMStoreSwiftInvocationResult"8@"NSError"16
v24@?0@"REMList"8^B16
fetchShareForList
v24@?0@"CKShare"8@"NSError"16
createShareForList
updateShare
stopShare
acceptShare
v20@?0B8@"NSError"12
distributedEvaluation
DistributedEvaluation Export produced no result and no error
v24@?0@"NSData"8@"NSError"16
storeDidChangeNotificationName
storeContainerToken
T@"REMStoreContainerToken",R,N,V_storeContainerToken
l_inProgressSaveRequestsContainer
T@"_REMInProgressSaveRequestsContainer",R,N,V_l_inProgressSaveRequestsContainer
lock
T{os_unfair_lock_s=I},R,N,V_lock
daemonController
T@"<REMDaemonController>",&,N,V_daemonController
mode
TQ,N,V_mode
assertOnMainThreadFetches
TB,N,V_assertOnMainThreadFetches
nonUserInteractiveStore
T@"REMStore",&,N,V_nonUserInteractiveStore
respondToCalDAVSharedList
Given invitation list isn't a CalDAV list.
Given invitation list isn't a sharing invitation.
Given invitation list has no external identifier.
Could not find the external identifier from the given invitation list.
Implementation error to use unknown CalDAV share response.
___dummy-client-identifier
___dummy-account-identifier
notifyOfInteractionWithPeople
MCIsManagedAccountWithObjectID:
v24@?0@"NSNumber"8@"NSError"16
triggerSyncForDataAccessAccountsWithAccountIDs
v16@?0@"<REMXPCSyncInterfacePerformer>"8
updateAccountsAndSync
UpdateAccounts
v24@?0B8B12@"NSError"16
updateAccountsAndFetchMigrationState
updateAccountWithAccountID
removeOrphanedAccountsWithCompletion
requestToMergeLocalDataIntoSyncData
requestToDeleteSyncData
requestToDeleteLocalData
T@"REMStore",&,N,V_store
<%@: %p identifier: %@>
identifier
T@"NSUUID",R,N,V_identifier
fetchResultTokenToDiffAgainst
name
T@"REMFetchResultToken",R,N,V_fetchResultTokenToDiffAgainst
resultData
resultStorages
latestFetchResultToken
T@"NSData",R,N,V_resultData
T@"NSDictionary",R,N,V_resultStorages
T@"REMFetchResultToken",R,N,V_latestFetchResultToken
Attempting to instantiate an abstract class. Please use a subclass of REMAlarmTrigger.
Abstract method called -[%@ %@]
REMCDAlarmTrigger
T@"REMObjectID",R,N
cdEntityName
T@"REMObjectID",&,N,V_objectID
isTemporal
REMCDAlarmTimeIntervalTrigger
timeInterval
%@ %f
Td,N,V_timeInterval
REMCDAlarmDateTrigger
%@ %@
dateComponents
T@"NSDateComponents",C,N,V_dateComponents
REMCDAlarmLocationTrigger
structuredLocation
proximity
%@ {structuredLocation = %@; proximity = %ld;}
T@"REMStructuredLocation",C,N,V_structuredLocation
Tq,N,V_proximity
REMCDAlarmVehicleTrigger
event
%@ {event = %@}
Tq,N,V_event
REMCAlarmContactTrigger
contactRepresentation
%@ {contact: %@}
T@"REMContactRepresentation",R,N,V_contactRepresentation
REMAlarmVehicleTriggerEventNone
REMAlarmVehicleTriggerEventConnected
REMAlarmVehicleTriggerEventDisconnected
Unknown REMAlarmVehicleTriggerEvent %ld
v32@?0@"<REMCRMergeableDataType>"8Q16^B24
<%@: %p document: %@>
REMCRMergeableOrderedSet
Failed to merge CR documents.
replicaIDSource
document
T@"REMReplicaIDSource",&,N,V_replicaIDSource
T@"CRDocument",&,N,V_document
undos
T@"NSMutableArray",R,N,V_undos
orderedSet
T@"NSOrderedSet",R,N
count
TQ,R,N
replicaManagerProvider
T@"<REMReplicaManagerProviding>",&,N
replicaIDHelper
T@"REMReplicaIDHelper",&,N,V_replicaIDHelper
currentUndo
T@"REMMutableCRUndo",&,N,V_currentUndo
T@"<REMReplicaManagerProviding>",&,N,V_replicaManagerProvider
<%@: %p type:%ld, %@>
<%@: %p[%ld.%ld] type:%ld name:%@ %@>
listIDsMergeableOrdering
markedForRemoval
listIDsToUndelete
listsDADisplayOrderChanged
inactive
didChooseToMigrate
didChooseToMigrateLocally
didFinishMigration
daConstraintsDescriptionPath
daAllowsCalendarAddDeleteModify
daSupportsSharedCalendars
daWasMigrated
REMAccount missing required fields
REMCDAccount
Tq,N,V_type
T@"NSString",&,N,V_name
displayName
T@"REMCRMergeableOrderedSet",&,N,V_listIDsMergeableOrdering
TB,N,V_markedForRemoval
T@"NSSet",&,N,V_listIDsToUndelete
TB,N,V_listsDADisplayOrderChanged
T@"REMResolutionTokenMap",&,N,V_resolutionTokenMap
T@"NSData",&,N,V_resolutionTokenMapData
TB,N,V_inactive
TB,N,V_didChooseToMigrate
TB,N,V_didChooseToMigrateLocally
TB,N,V_didFinishMigration
T@"NSString",C,N,V_daConstraintsDescriptionPath
TB,N,V_daAllowsCalendarAddDeleteModify
TB,N,V_daSupportsSharedCalendars
TB,N,V_daWasMigrated
T@"NSString",C,N,VexternalIdentifier
T@"NSString",C,N,VexternalModificationTag
T@"NSString",C,N,VdaSyncToken
T@"NSString",C,N,VdaPushKey
Event will occur every hour.
Event will occur every %@ hours.
Event will occur every day.
Event will occur every %@ days.
Event will occur every week.
Event will occur every %@ weeks.
Event will occur every weekday.
Event will occur every week on %@.
Event will occur every %@ weeks on %@.
Event will occur every month on the %@ %@.
Event will occur every %@ months on the %@ %@.
Event will occur every month on the %@-XX01.
Event will occur every month on the %@.
Event will occur every %@ months on the %@-XX01.
Event will occur every %@ months on the %@.
Event will occur every month on %@.
Event will occur every %@ months on %@.
Event will occur every month.
Event will occur every %@ months.
, %@
Recurrence rule last item format.  The last part of a list: X, Y and Z. Here %@ is 'Z'
 and %@
Event will occur every %@ years.
Event will occur every year.
Event will occur every year on the %@ %@ of %@.
Event will occur every %@ years on the %@ %@ of %@.
Event will occur every year on the %@ %@.
Event will occur every %@ years on the %@ %@.
Event will occur every year on the %@ of %@.
Event will occur every %@ years on the %@ of %@.
Event will occur every year on the %@.
Event will occur every %@ years on the %@.
Event will occur every year on every %@ in %@.
Event will occur every %@ years on every %@ in %@.
Event will occur every year on every %@.
Event will occur every %@ years on every %@.
Event will occur every year in %@.
Event will occur every %@ years in %@.
-[NSDateFormatter weekdaySymbols] invalid, reverting to US dates
Sunday
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday
-[NSDateFormatter monthSymbols] invalid, reverting to US dates
January
February
March
April
June
July
August
September
October
November
December
the last part of a list: X, Y and Z. Here %@ is 'Z'
, %@-XX01
last day
1st-XX01
2nd-XX01
3rd-XX01
4th-XX01
5th-XX01
6th-XX01
7th-XX01
8th-XX01
9th-XX01
10th-XX01
10th
11th-XX01
11th
12th-XX01
12th
13th-XX01
13th
14th-XX01
14th
15th-XX01
15th
16th-XX01
16th
17th-XX01
17th
18th-XX01
18th
19th-XX01
19th
20th-XX01
20th
21st-XX01
21st
22nd-XX01
22nd
23rd-XX01
23rd
24th-XX01
24th
25th-XX01
25th
26th-XX01
26th
27th-XX01
27th
28th-XX01
28th
29th-XX01
29th
30th-XX01
30th
31st-XX01
31st
last
1st-XX02
2nd-XX02
3rd-XX02
4th-XX02
5th-XX02
6th-XX02
7th-XX02
8th-XX02
9th-XX02
10th-XX02
11th-XX02
12th-XX02
13th-XX02
14th-XX02
15th-XX02
16th-XX02
17th-XX02
18th-XX02
19th-XX02
20th-XX02
21st-XX02
22nd-XX02
23rd-XX02
24th-XX02
25th-XX02
26th-XX02
27th-XX02
28th-XX02
29th-XX02
30th-XX02
31st-XX02
32nd-XX02
32nd
33rd-XX02
33rd
34th-XX02
34th
35th-XX02
35th
36th-XX02
36th
37th-XX02
37th
38th-XX02
38th
39th-XX02
39th
40th-XX02
40th
41st-XX02
41st
42nd-XX02
42nd
43rd-XX02
43rd
44th-XX02
44th
45th-XX02
45th
46th-XX02
46th
47th-XX02
47th
48th-XX02
48th
49th-XX02
49th
50th-XX02
50th
51st-XX02
51st
52nd-XX02
52nd
53rd-XX02
53rd
 or %@
, %@-XX02
day-XX02
weekday
weekend day
, and %@
Monthly
Custom Repeat
Every %u hours
Hourly
Every %u days
Daily
SINGULAR_WEEKLY_RECURRENCE
Weekly
Every %u weeks
Weekdays
Weekends
Every %u weeks on %@
Every %u months on the last day
Every month on the last day
Every %u months on the first day
Every month on the first day
Every %u months, each %@
Every month, each %@
Every %u months that have %u days
Every month that has %u days
Every %u months on the last weekday
Every month on the last weekday
Every %u months on the first weekday
Every month on the first weekday
Every %u months on the last weekend day
Every month on the last weekend day
Every %u months on the first weekend day
Every month on the first weekend day
Every %u months on the %@
Every month on the %@
Every %u months
Every %u years in %@
Every year in %@
Every %u years on the last day %@
Every year on the last day %@
Every %u years on the first day %@
Every year on the first day %@
Every %u years on the last weekday %@
Every year on the last weekday %@
Every %u years on the first weekday %@
Every year on the first weekday %@
Every %u years on the last weekend day %@
Every year on the last weekend day %@
Every %u years on the first weekend day %@
Every year on the first weekend day %@
Every %u years on the %@ %@
Every year on the %@ %@
Every %u years
Yearly
first
second
third
fourth
fifth
Custom by-day item format
of January%@
of February%@
of March%@
of April%@
of May%@
of June%@
of July%@
of August%@
of September%@
of October%@
of November%@
of December%@
Never
Biweekly
Custom
Every 3 Months
Every 6 Months
T@"NSDictionary",R,N
T@"REMObjectID",&,N,VremObjectID
T@"NSDictionary",&,N,V_storage
auxiliaryChangeInfos
T@"NSArray",&,N,V_auxiliaryChangeInfos
typedKlass
T#,N,V_typedKlass
changeObjectForAuxiliaryChangeInfoMap
T@"NSMutableDictionary",&,N,V_changeObjectForAuxiliaryChangeInfoMap
predicateDescriptor
sortDescriptors
options
<%@: %p predicate: %@, sortDescriptors: %@>
T@"REMListPredicateDescriptor",&,N,V_predicateDescriptor
T@"NSArray",&,N,V_sortDescriptors
TQ,R,N,V_options
weakValue
T@"<REMSaveRequestTrackedValue>",W,N,V_weakValue
template
T@"<REMSaveRequestTrackedValue>",&,N,V_template
Calendar must be nil or Gregorian
%@_%ld_%ld_%ld_%ld_%ld_%ld_%ld_%ld
__floating
lastConsumedChangeToken
lastConsumedDate
T@"NSDate",&,N,V_lastConsumedDate
T@"REMChangeToken",&,N,V_lastConsumedChangeToken
keysToObserve
T@"NSArray",&,N,V_keysToObserve
mutableChangedKeys
T@"NSMutableSet",&,N,V_mutableChangedKeys
target
T@"NSObject",R,N,V_target
changedKeys
com.apple.NanoReminders
com.apple.reminders
group.com.apple.reminders
com.apple.remindd
com.apple.remindtool
com.apple.aps.remindd
com.apple.reminders.ReminderIndex
com.apple.remindd.userInteractive
remindd
com.apple.ReminderKitUI.ReminderCreationViewService
com.apple.reminders.ics
DEFAULT_LIST
%@/%@
crdtID
<%@: %p> (account=%@, crdtId=%@)
T@"REMObjectID",R,N,V_accountID
T@"NSString",R,N,V_crdtID
<No protocol supplied>
REMCDAlarm
trigger
acknowledgedDate
alarmUID
originalAlarmUID
 (uid: %@)
 (original-uid: %@)
%@ %@ %@%@
T@"REMAlarmTrigger",&,N,V_trigger
T@"NSDate",&,N,V_acknowledgedDate
T@"NSString",&,N,V_alarmUID
T@"NSString",&,N,V_originalAlarmUID
startDate
dueDate
alarmStorage
list
parentReminder
isCompleted
<%@: %p objectID: %@, attachments.count: %ld, alarms.count: %ld, assignments.count: %ld>
startDate: %@ tz: %@
dueDate: %@ tz: %@
displayDate: %@ tz: %@
%@ tz: %@
alarm[%ld]: %@
/?&:$+,;=@
x-apple-eventkit-alert-x-apple-reminder://%@
REMCDReminder
T@"REMObjectID",&,N,V_accountID
T@"REMObjectID",&,N,V_listID
T@"REMObjectID",&,N,V_parentReminderID
T@"NSData",&,N,V_titleDocumentData
T@"NSData",&,N,V_notesDocumentData
TB,N,GisCompleted,V_completed
T@"NSDate",C,N,V_completionDate
T@"NSSet",&,N,V_subtaskIDsToUndelete
TQ,N,V_priority
T@"NSDateComponents",C,N,V_startDateComponents
T@"NSDateComponents",C,N,V_dueDateComponents
T@"NSString",C,N,V_timeZone
TB,N,V_allDay
T@"NSDate",C,N,V_creationDate
T@"NSDate",C,N,V_lastModifiedDate
T@"NSArray",&,N,V_recurrenceRules
T@"NSArray",&,N,V_attachments
T@"NSArray",&,N,V_alarms
T@"REMContactRepresentation",&,N,V_contactHandles
TQ,N,V_icsDisplayOrder
T@"NSURL",C,N,V_icsUrl
T@"NSData",&,N,V_importedICSData
T@"NSString",C,N,V_daCalendarItemUniqueIdentifier
T@"REMUserActivity",C,N,V_userActivity
T@"NSData",C,N,V_siriFoundInAppsData
Tq,N,V_siriFoundInAppsUserConfirmation
T@"NSDate",C,N,V_lastBannerPresentationDate
Tq,N,V_flagged
T@"NSSet",&,N,V_assignments
T@"REMDisplayDate",C,N,V_displayDate
T@"NSString",R,C,N
isUniversal
v32@?0@"NSString"8Q16^B24
v16@?0@"REMMutableCRMergeableOrderedSet"8
listChangeItem (%@) has incorrect saveRequest (%@). Expected %@
capabilities
T@"REMCRMergeableOrderedSet",R,D,N
TB,D,N
T@"NSString",&,D,N
Tq,R,D,N
T@"REMAccountStorage",R,C,N,V_storage
groupContext
T@"REMAccountGroupContextChangeItem",R,N
accountChangeItem
T@"REMAccountChangeItem",&,N,V_accountChangeItem
incompleteReminderCounts
scheduledCount
T@"NSDictionary",R,N,V_incompleteReminderCounts
Tq,R,N,V_scheduledCount
objectIDs
parentListID
T@"REMObjectID",&,N,V_parentListID
T@"NSArray",&,N,V_objectIDs
T@"REMReminderPredicateDescriptor",&,N,V_predicateDescriptor
subtaskCounts
dueDateCounts
T@"NSDictionary",R,N,V_subtaskCounts
T@"NSArray",R,N,V_dueDateCounts
T@"NSDate",R,N,V_dueDate
Tq,R,N,V_count
<%@: %p date: %@, timeZone: %@, allDay: %ld>
date
isAllDay
T@"NSDate",R,C,N,V_date
TB,R,N,GisAllDay,V_allDay
T@"NSTimeZone",R,N,V_timeZone
com.apple.reminders.smartlist.today
com.apple.reminders.smartlist.flagged
com.apple.reminders.smartlist.scheduled
com.apple.reminders.smartlist.all
com.apple.reminders.smartlist.assigned
com.apple.reminders.smartlist.siriFoundInApps
5C68F825-9BD6-4F45-96F9-C3B071313DB1
sortingStyle
sortingDirection
Tq,R,N
T@"REMSmartListStorage",C,N,V_storage
T@"REMResolutionTokenMap",R,D,N
T@"NSData",R,D,N
isPersisted
smartListTag
ordering
currentChangeTokenForAllAccounts
v16@?0@"REMChangeToken"8
v16@?0@"<REMXPCChangeTrackingPerformer>"8
currentChangeTokenForAccountTypes
currentChangeToken
earliestChangeToken
getTrackingState
v24@?0@"REMChangeTrackingState"8@"NSError"16
saveTrackingState
fetchHistoryAfterToken
v24@?0@"REMChangeSet"8@"NSError"16
fetchHistoryAfterDate
deleteHistoryBeforeToken
deleteHistoryBeforeDate
persistenceStoreID
v16@?0@"NSString"8
transactionAuthorKeysToExclude
T@"NSSet",R,N,V_transactionAuthorKeysToExclude
changeTrackingClientID
T@"<REMChangeTrackingClientIdentifying>",R,N,V_changeTrackingClientID
T@"<REMDaemonController>",R,N,V_daemonController
entityName
T@"NSString",&,N,V_entityName
transactionFetchLimit
TQ,N,V_transactionFetchLimit
fetchAuxiliaryChangeInfo
clientName
accountIdentifier
 - {clientName: %@, accountIdentifier: %@};
T@"NSString",R,N,V_clientName
T@"NSString",R,N,V_accountIdentifier
uuidString
hostURL
<%@: %p objectID: %@, owner: %@, uuid: %@, hostURL: %@, extID: %@>
REMCDCalDAVNotification
T@"NSString",&,N,V_uuidString
T@"NSURL",&,N,V_hostURL
T@"REMObjectID",R,N,V_objectID
T@"REMObjectID",R,N,V_listID
T@"NSURL",&,D,N
reminderID
<%@: %p objectID: %@, uti: %@>
REMCDAttachment
T@"REMObjectID",R,N,V_reminderID
T@"NSString",R,N,V_uti
REMCDFileAttachment
fileSize
fileURL
isTemporaryFileURL
TQ,N,V_fileSize
T@"NSURL",&,N,V_fileURL
TB,N,V_isTemporaryFileURL
REMCDImageAttachment
width
height
TQ,N,V_width
TQ,N,V_height
REMCDURLAttachment
metadata
<%@: %p objectID: %@>
<%@: %p objectID: %@, url: %@>
T@"NSURL",&,N,V_url
T@"NSData",&,N,V_metadata
state
isObserver
timeElapsed
listsMigrated
remindersMigrated
T@"NSString",R,N,V_state
TB,R,N,V_isObserver
Td,R,N,V_timeElapsed
TQ,R,N,V_listsMigrated
TQ,R,N,V_remindersMigrated
T@"NSString",R,N,V_log
daIsEventOnlyContainer
owningListIdentifier
address
owningReminderIdentifier
changeID
changedObjectID
changeType
tombstone
updatedProperties
Tq,N,V_changeID
T@"REMObjectID",C,N,V_changedObjectID
Tq,N,V_changeType
T@"REMNSPersistentHistoryChangeTombstone",C,N,V_tombstone
T@"NSSet",C,N,V_updatedProperties
objectIdentifier
shareeOwningListIdentifier
shareeDisplayName
shareeAddress
assignmentOwningReminderIdentifier
persistentHistoryChangeTombstone
T@"NSDictionary",&,V_persistentHistoryChangeTombstone
<REMNSPersistentHistoryChange - changeID(%lld) changeType(%@) mocID(%@) remID(%@)>
REMChangeType
REMChangeTypeInsert
REMChangeTypeUpdate
REMChangeTypeDelete
T@"_REMNSPersistentHistoryChangeStorage",&,V_storage
persistentHistoryChange
T@"NSPersistentHistoryChange",R,W,V_persistentHistoryChange
internal_ChangeTransaction
T@"REMChangeTransaction",W,N,V_internal_ChangeTransaction
isCoalesced
TB,N,V_isCoalesced
coalescedChanges
T@"NSArray",&,N,V_coalescedChanges
timestamp
T@"NSDate",R,N,V_timestamp
changes
T@"NSArray",R,N,V_changes
storeID
T@"NSString",R,N,V_storeID
author
T@"NSString",R,N,V_author
token
T@"REMChangeToken",R,N,V_token
mailto:
tel:
persistentHistoryTokens
<%@: %p persistentHistoryTokens: %@> 
T@"NSDictionary",R,N,V_persistentHistoryTokens
REMChangeSet<%p>: {raw-txn-count=%lu, chg-ids-from=%lld, chg-ids-to=%lld}; {filtered-txn-count=%lu, cnsld-inserts=%lu, cnsld-updates=%lu, #cnsld-deletes=%lu}; {error=%@}
q24@?0@"REMChangeObject"8@"REMChangeObject"16
B16@?0@"REMChangeObject"8
v24@?0@"NSArray"8q16
error
transactions
T@"NSError",&,N,V_error
isTruncated
TB,N,V_isTruncated
inserts
T@"NSArray",&,N,V_inserts
updates
T@"NSArray",&,N,V_updates
deletes
T@"NSArray",&,N,V_deletes
filterByTransactionAuthorStrings
T@"NSArray",&,N,V_filterByTransactionAuthorStrings
filterByTransactionAuthorsIsExclusion
TB,N,V_filterByTransactionAuthorsIsExclusion
filteredTransactions
T@"NSArray",&,N,V_filteredTransactions
T@"NSArray",R,N,V_transactions
T@"NSUUID",R,N,V_objectIdentifier
T@"NSString",R,N,V_externalIdentifier
T@"NSNumber",R,N,V_daIsEventOnlyContainer
T@"NSUUID",R,N,V_shareeOwningListIdentifier
T@"NSString",R,N,V_shareeDisplayName
T@"NSString",R,N,V_shareeAddress
T@"NSUUID",R,N,V_assignmentOwningReminderIdentifier
transaction
T@"REMChangeTransaction",R,W,N,V_transaction
Tq,R,N,V_changeID
T@"REMObjectID",R,N,V_changedObjectID
Tq,R,N,V_changeType
T@"REMChangeTombstone",R,N,V_tombstone
rem_now
T@"NSDate",R,C,N
debug_rem_nowOverride
T@"NSDate",C,N
bookmarks1
bookmarks2
celebration1
celebration2
concept1
concept2
concept3
education1
education2
education3
education4
education5
finance1
finance2
finance3
fitness
food
health1
health2
lifestyle1
lifestyle2
location1
location2
location3
media1
media2
media3
media4
media5
nature1
nature2
people1
people2
people3
pet1
pet2
pet3
shopping1
shopping2
shopping3
shopping4
sport1
sport2
sport3
sport4
sport5
sport6
symbol1
symbol2
symbol3
symbol4
symbol5
symbol6
symbol7
transport1
transport2
transport3
transport4
vacation
weather1
weather2
weather3
weather4
weather5
wine
work1
work2
work3
work4
work5
endDate is nil
endDate
occurrenceCount
%@ %p { UNTIL=%@ } 
%@ %p { COUNT=%lu }
T@"NSDate",R,N,V_endDate
TQ,R,N,V_occurrenceCount
com.apple.remindd.dataaccess.REMSaveRequest.author
com.apple.remindd.dataaccess
supportsEventKitSync
TB,R,N,V_supportsEventKitSync
supportsCloudKitSync
TB,R,N,V_supportsCloudKitSync
supportsCalDAVNotifications
TB,R,N,V_supportsCalDAVNotifications
supportsListSharees
TB,R,N,V_supportsListSharees
supportsListShareesMutation
TB,R,N,V_supportsListShareesMutation
supportsMoveAcrossLists
TB,R,N,V_supportsMoveAcrossLists
supportsMoveAcrossSharedLists
TB,R,N,V_supportsMoveAcrossSharedLists
supportsMultipleDateAlarmsOnRecurrence
TB,R,N,V_supportsMultipleDateAlarmsOnRecurrence
defaultReminderPriorityLevel
Tq,R,N,V_defaultReminderPriorityLevel
supportsHandoff
TB,R,N,V_supportsHandoff
supportsReminderActions
TB,R,N,V_supportsReminderActions
supportsCRDTs
TB,R,N,V_supportsCRDTs
supportsAssignments
TB,R,N,V_supportsAssignments
insertsCompletedRecurrentCloneAtTail
TB,R,N,V_insertsCompletedRecurrentCloneAtTail
supportsSubtasks
TB,R,N,V_supportsSubtasks
supportsAttachments
TB,R,N,V_supportsAttachments
supportsListAppearance
TB,R,N,V_supportsListAppearance
supportsGroups
TB,R,N,V_supportsGroups
supportsFlagged
TB,R,N,V_supportsFlagged
supportsPersonTrigger
TB,R,N,V_supportsPersonTrigger
supportsLocation
TB,R,N,V_supportsLocation
supportsHourlyRecurrence
TB,R,N,V_supportsHourlyRecurrence
com.apple.CRDT.NSString
preWarmModels
suggestedAttributesPerformer-%@
uncachedSuggestedAttributesPerfomer produced no result and no error
v24@?0@"<REMXPCSuggestedAttributesPerformer>"8@"NSError"16
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
q_cachedXPCPerformer
T@"<REMXPCSuggestedAttributesPerformer>",&,N,V_q_cachedXPCPerformer
RemindersCount
T@"REMObjectID",R,N,V_parentReminderID
includingSubtasks
TB,R,N,V_includingSubtasks
showMarkedForDeleteObjects
T@"NSArray",R,N,V_objectIDs
TB,N,V_showMarkedForDeleteObjects
T@"REMReminderPredicateDescriptor",R,N,V_predicateDescriptor
T@"NSArray",R,N,V_sortDescriptors
T@"REMReminderFetchOptions",R,N,V_options
parentReminderIDs
T@"NSArray",R,N,V_parentReminderIDs
externalIdentifiers
listObjectID
T@"NSArray",R,N,V_externalIdentifiers
T@"REMObjectID",R,N,V_listObjectID
daCalendarItemUniqueIdentifiers
T@"NSArray",R,N,V_daCalendarItemUniqueIdentifiers
accountStorages
listStorages
reminderStorages
T@"NSArray",R,N,V_accountStorages
T@"NSArray",R,N,V_listStorages
T@"NSArray",R,N,V_reminderStorages
showLazyDeleteObjects
TB,N,V_showLazyDeleteObjects
T@"NSSet",R,N,V_assignments
T@"NSString",R,N,V_smartListTag
reminderIDs
T@"NSArray",R,N,V_reminderIDs
createIfNeeded
TB,N,V_createIfNeeded
smartListStorages
T@"NSArray",R,N,V_smartListStorages
REMDAChangeTrackingHelper: Cannot get last consumed token when trying to peekHasChangesSinceLastConsumed
The given model class is not a known trackable-fetchable type for this API, you shouldn't call this with {modelClass: %@}.
The given model class is not a known trackable type for this API, you shouldn't call this with {modelClass: %@}.
v16@?0@"<REMDAChangedIdentifierResult>"8
v16@?0@"REMObjectID"8
v24@?0@"REMChangeObject"8q16
Mixed change types is not supported.
resolutionTokenMap_v2_JSON
resolutionTokenMap_v3_JSONData
The given model class does not support fetching, shouldn't enter this function call {%@}.
The given model class does not support lazy delete, shouldn't enter this function call with includeLazyDeleteObjects=YES {%@}.
changeSet
T@"REMChangeSet",&,N,V_changeSet
sinceToken
T@"REMChangeToken",&,N,V_sinceToken
upToToken
T@"REMChangeToken",&,N,V_upToToken
remStore
T@"REMStore",&,N,V_remStore
T@"REMChangeTracking",&,N,V_changeTracking
cached_remAccountObjectID
T@"REMObjectID",&,N,V_cached_remAccountObjectID
cached_insertedModelObjectResultsByModelClassName
T@"NSMutableDictionary",&,N,V_cached_insertedModelObjectResultsByModelClassName
cached_updatedModelObjectResultsByModelClassName
T@"NSMutableDictionary",&,N,V_cached_updatedModelObjectResultsByModelClassName
cached_currentChangeToken
T@"REMChangeToken",&,N,V_cached_currentChangeToken
cached_currentTrackingState
T@"REMChangeTrackingState",&,N,V_cached_currentTrackingState
T@"NSString",&,N,V_clientName
T@"<REMDAAccountProviding>",R,N,V_account
markedForDeletion
@"<_REMDAChangeTrackableModel>"36@?0@"REMObjectID"8B16@"REMStore"20^@28
@"NSDictionary"32@?0@"NSArray"8@"REMStore"16^@24
@"<REMDAChangedIdentifierResult>"16@?0@"REMChangeTombstone"8
@"<REMDAChangedIdentifierResult>"16@?0@"<_REMDAChangeTrackableModel>"8
externalIdentifierForMarkedForDeletionObject
rem_DA_supportsFetching
rem_DA_supportsLazyDelete
rem_DA_lazyDeleteProperties
rem_DA_fetchByObjectIDBlock
T@?,R,N
rem_DA_fetchByObjectIDsBlock
rem_DA_deletedKeyFromTombstoneBlock
rem_DA_deletedKeyFromLazyDeletedModelObjectBlock
<%@: %p objectID: %@, owningListIdentifier: %@>
T@"NSUUID",&,N,V_objectIdentifier
T@"NSUUID",&,N,V_owningListIdentifier
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_address
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to check on lazy delete properties for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object ID for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object IDs for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to call +rem_DA_deletedKeyFromLazyDeletedModelObjectBlock for REMSharee.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to check on lazy delete properties for REMCalDAVNotification.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object ID for REMCalDAVNotification.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to fetch by object IDs for REMCalDAVNotification.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ASSERT failure: Should not attempt to call +rem_DA_deletedKeyFromLazyDeletedModelObjectBlock for REMCalDAVNotification.
<%@: %p objectID: %@, owningReminderIdentifier: %@>
T@"NSUUID",&,N,V_owningReminderIdentifier
assignee
listIDs
T@"NSArray",R,N,V_listIDs
T@"NSDate",R,N,V_startDate
REMErrorObjectIDEntityNameKey
REMErrorObjectIDUUIDKey
REMErrorRetryAfterKey
Mismatched objectID type {objectID: %@, expected: %@}
Unexpected nil property {class: %@, property: %@}
Unexpected Error
Missing entitlement: %@
Missing entitlement: %@ {requestedAccessLevel: %@, currentAccesslevel: %@}
Operation is throttled {remainingTime: %.4f}
Operation is babysat {operationName: %@}
No such object error {objectID: %@}
No such object error {externalIdentifier: %@}
No such object error {daCalendarItemUniqueIdentifier: %@}
No such smart list error {smartListTag: %@}
Moving between accounts is unsupported {fromAccountID: %@, toAccountID: %@}
List should not have nil account {listID: %@}
Moving between lists is unsupported in this account {fromListID: %@, toListID: %@, accountID: %@}
Nested subtasks is unsupported {parentReminderID: %@, reminderID: %@}
Subtask has different list from its parent reminder {parentReminderID: %@, reminderID: %@}
Unhandled constraint conflict {identifier: %@, constraint: %@}
NSUnderlyingException
exception.name: %@, reason: %@
assigneeID
originatorID
status
assignedDate
_debug_cdAssigneeLinked
_debug_cdOriginatorLinked
<%@: %p objectID: %@, reminderID: %@, status: %@, date: %@, originatorID: %@, assigneeID: %@, originatorLinked: %@, assigneeLinked: %@>
REMCDAssignment
T@"NSDate",C,N,V_assignedDate
TB,N,V__debug_cdAssigneeLinked
TB,N,V__debug_cdOriginatorLinked
Tq,R,N,V_status
T@"REMObjectID",R,N,V_assigneeID
T@"REMObjectID",R,N,V_originatorID
C6613346-F378-45AB-8DBD-57BE9AAFB009
counter
modificationTime
replicaID
<counter=%ld modificationTime=%lf replicaID=%@>
Tq,N,V_counter
Td,N,V_modificationTime
T@"NSUUID",&,N,V_replicaID
start
<%@: %p %@> start:%lf end:%lf
REMCDSmartListOrder
T@"REMObjectID",R,&,N,V_reminderID
Td,N,V_start
Td,N,V_end
@"REMAccount"16@?0@"REMSaveRequest"8
@"REMList"16@?0@"REMSaveRequest"8
@"REMReminder"16@?0@"REMSaveRequest"8
@16@?0@"REMSaveRequest"8
inProgressSaveRequests
T@"NSMutableArray",&,N,V_inProgressSaveRequests
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_name
com.apple.remindd.eventKitMigration.begin
com.apple.remindd.eventKitMigration.error
stage
errorDomain
errorCode
@"NSMutableDictionary"8@?0
com.apple.remindd.eventKitMigration.end
success
duration
@"NSDictionary"8@?0
isDatabaseMigrated
TB,N
containerToken
T@"REMStoreContainerToken",&,N,V_containerToken
cachedStore
T@"REMStore",&,N,V_cachedStore
migrationStartDate
T@"NSDate",&,N,V_migrationStartDate
hasPerformedEnsureAccountsExist
TB,N,V_hasPerformedEnsureAccountsExist
lastReportedErrorIdentifier
T@"NSString",&,N,V_lastReportedErrorIdentifier
lastReportedErrorStage
TQ,N,V_lastReportedErrorStage
lastReportedError
T@"NSError",&,N,V_lastReportedError
shouldDeleteMigratedData
REMDatabaseMigrationContextStageUnknown
REMDatabaseMigrationContextStageSetup
REMDatabaseMigrationContextStageAccountCreation
REMDatabaseMigrationContextStageListCreation
REMDatabaseMigrationContextStageReminderCreation
REMDatabaseMigrationContextStageSave
REMDatabaseMigrationContextStageArchiveEventKitData
fetchedAccountStorages
fetchedListStorages
fetchedReminderStorages
requestedObjectIDs
fetchResultToken
[a:%ld,l:%ld,r:%ld,ids:%ld]
count: %ld
objectIDs.count: %ld
metadata: %@
fetchResultToken: %@
<%@: %p type: %@%@%@>
T@"NSArray",R,N,V_requestedObjectIDs
T@"NSArray",R,N,V_fetchedAccountStorages
T@"NSArray",R,N,V_fetchedListStorages
T@"NSArray",R,N,V_fetchedReminderStorages
T@"REMFetchMetadata",R,N,V_metadata
T@"REMFetchResultToken",&,N,V_fetchResultToken
5d18e4d0-8a71-406c-899d-6ff8e3e94c37
3B242529-8F5D-47A1-9351-444101218C30
localInternalAccountID
localAccountID
T@"NSSet",R,D,N
T@"REMAccountCapabilities",&,N,V_capabilities
listIDsOrdering
daSupportsPhoneNumbers
supportsSharingLists
T@"REMAccountGroupContext",R,N
T@"REMAccount",&,N,V_account
iCloud
CalDAV
Exchange
replicaUUID
T@"NSUUID",R,N
owner
T@"<REMReplicaIDHelperOwner>",W,N,V_owner
acquiredReplicaUUID
T@"NSUUID",&,N,V_acquiredReplicaUUID
lazilyCachedReplicaManagerProvider
T@"<REMReplicaManagerProviding>",&,N,V_lazilyCachedReplicaManagerProvider
replicaManager
T@"REMReplicaManager",R,N
replicaClockProvider
T@"<REMReplicaClockProviding>",&,N,V_replicaClockProvider
reminderTitleCategoryEmbeddingFilename
includeListNames
includeListNameFuzzedEmbeddings
includeReminderTitles
includeReminderTitleFuzzedEmbeddings
includeSystemLanguage
includeSystemTimezone
includeAccountType
includeListGroupInfo
includeReminderTitleSaltedHash
includeDates
includeRecurrenceInfo
includeLocationInfo
includeAttachmentUTIs
includeRemindMeWhenMessagingInfo
includeAlarmDates
includeSubtaskInfo
includeUserActivityInfo
includeIsFlagged
includePriority
relevantWordTagsIncludeOtherWord
dateResolutionInSeconds
includeReminderTitleCategoryFilteredStopWords
includeReminderTitleCategoryUniversalGrammar
includeReminderTitleCategorySentence2Vec
reminderTitleCategoryDistanceTolerance
reminderTitleCategoryEmbeddingURL
<%@:%p 
%@:%ld 
%@:%.3f 
%@:%@ 
Did not find url {filename: %@, key: %@, urls: %@}
Unexpected type for fileame {filename: %@, key: %@}
TB,N,V_includeListNames
TB,N,V_includeReminderTitles
TB,N,V_includeListNameFuzzedEmbeddings
TB,N,V_includeReminderTitleFuzzedEmbeddings
TB,N,V_includeSystemLanguage
TB,N,V_includeSystemTimezone
TB,N,V_includeAccountType
TB,N,V_includeListGroupInfo
TB,N,V_includeReminderTitleSaltedHash
TB,N,V_includeDates
includeDayOfWeek
TB,N,V_includeDayOfWeek
TB,N,V_includeRecurrenceInfo
TB,N,V_includeLocationInfo
TB,N,V_includeAttachmentUTIs
TB,N,V_includeRemindMeWhenMessagingInfo
TB,N,V_includeAlarmDates
TB,N,V_includeSubtaskInfo
TB,N,V_includeUserActivityInfo
TB,N,V_includeIsFlagged
TB,N,V_includePriority
TB,N,V_relevantWordTagsIncludeOtherWord
TB,N,V_includeReminderTitleCategoryFilteredStopWords
TB,N,V_includeReminderTitleCategoryUniversalGrammar
TB,N,V_includeReminderTitleCategorySentence2Vec
Td,N,V_reminderTitleCategoryDistanceTolerance
T@"NSURL",&,N,V_reminderTitleCategoryEmbeddingURL
TQ,N,V_dateResolutionInSeconds
creationDateWithinDays
TQ,N,V_creationDateWithinDays
<%@: %p serviceName:%@>
eventKitSyncStub
v24@?0@8@"NSError"16
l_performersByName
T@"NSMutableDictionary",&,N,V_l_performersByName
serviceName
T@"NSString",&,N,V_serviceName
xpcConnection
T@"NSXPCConnection",&,N,V_xpcConnection
T@"REMStoreContainerToken",&,N,V_storeContainerToken
cloudKitNetworkActivityDelegate
T@"<REMXPCDaemonControllerCloudKitNetworkActivityDelegate>",W,N,V_cloudKitNetworkActivityDelegate
debug
indexing
%@ {locationUID = %@}
%@ {title: %@; latlong: (%f, %f); radius: %f; locationUID = %@}
latitude
longitude
radius
locationUID
routing
referenceFrameString
contactLabel
mapKitHandle
minimumRegionMonitoringDistance
Td,R,N
T@"NSString",R,N,V_locationUID
T@"NSString",C,N,V_title
Td,N,V_latitude
Td,N,V_longitude
Td,N,V_radius
T@"NSString",C,N,V_address
T@"NSString",C,N,V_routing
T@"NSString",C,N,V_referenceFrameString
T@"NSString",C,N,V_contactLabel
T@"NSData",C,N,V_mapKitHandle
orange
yellow
green
lightBlue
blue
indigo
purple
pink
rose
brown
gray
custom
#[\dA-F]{6}([\dA-F]{2})?
0123456789ABCDEF
Q16@?0@"NSString"8
#%02X%02X%02X
#%02X%02X%02X%02X
alpha
colorRGBSpace
daSymbolicColorName
daHexString
ckSymbolicColorName
REMColor:rgba(%lf,%lf,%lf,%lf)
T@"NSString",R,N,V_daSymbolicColorName
T@"NSString",R,N,V_daHexString
T@"NSString",R,N,V_ckSymbolicColorName
TQ,R,N,V_colorRGBSpace
Td,R,N,V_blue
Td,R,N,V_red
Td,R,N,V_green
Td,R,N,V_alpha
#FF3B30
#FF9500
#FFCC00
#4CD964
#5AC8FA
#007AFF
#5856D6
#E357A8
#FF2D55
#D9A69F
#9D8563
#5B626A
daemonUserDefaults
T@"REMDaemonUserDefaults",R,N
suiteName
T@"NSString",R,N,V_suiteName
observers
T@"NSMutableDictionary",R,N,V_observers
showRemindersAsOverdue_cached
TB,N,V_showRemindersAsOverdue_cached
userDefaults
T@"NSUserDefaults",R,N,V_userDefaults
showRemindersAsOverdue
databaseMigrationTestModeEnabled
databaseMigrationTimedOut
lastDatabaseMigrationSystemBuildVersion
cloudKitMigrationMaxNumInvocations
cloudKitMigrationMaxNumFailures
cloudKitMigrationDelayAfterError
cloudKitMigrationObserverPollingInterval
cloudKitMigrationSimulatedError
cloudKitResultsLimitPerSyncOperation
cloudKitMigrationDisableCleanUp
preferredDefaultListID
preferredDefaultListObjectIDUrl
acAccountIdentifierToMergeLocalDataIntoSyncData
acAccountIdentifierToMigrateInactivatedCalDavData
cloudKitMergeLocalLastDateMaxRetryReached
cloudKitMergeLocalLastBuildVersionMaxRetryReached
spotlightIndexVersion
nextScheduledAlarmDate
lastPresentAlarmDate
lastSuggestedAttributesAutoTrainingToken
suggestedAttributesHarvestingOverrides
embedding
neighborsToConsider
suggestedAttributesTrainingOverrides
corebehavior
suggestedAttributesAccepted
lastSyncPoll
userInteractionsData
simulateMAIDAccount
enableWelcomeScreen
forceShowWelcomeScreen
enableInAppDebugMenu
todayNotificationFireTime
disableAlarmEngineDataSourcePrefetching
enableAssignmentNotifications
accountsListCategorizedCountsCache
debugSimulateSqliteFull
_temp
%@_%@
newAppShouldTakeoverEKReminderNotifications
dataaccessDaemonStopSyncingReminders
siriShouldRouteIntentsToNewRemindersApp
T@"NSNumber",&,N
T@"NSString",&,N
T@"NSDate",&,N
T@"NSNumber",C,N
T@"NSData",C,N
T@"REMObjectID",&,N
T@"NSURL",&,N
T@"NSDateComponents",&,N
T@"NSDictionary",C,N
T@"REMUserDefaults",&,N,V_userDefaults
userDefaultsKey
T@"NSString",C,N,V_userDefaultsKey
block
T@?,C,N,V_block
removed
TB,N,V_removed
remindersIsUsingCloudKit
remindersDidFinishMigrationToCloudKit
com.apple.reminders.apple-account-utilities
CardDAViCloudDaemonAccount
https://p01-caldav.icloud.com:443
accountStore
T@"ACAccountStore",&,N,V_accountStore
primaryICloudACAccountIsValid
TB,N,V_primaryICloudACAccountIsValid
_debug_primaryICloudACAccount
T@"ACAccount",&,N,V__debug_primaryICloudACAccount
primaryICloudACAccount
T@"ACAccount",R,V_primaryICloudACAccount
primaryICloudAccountEnabled
transactionNumber
bundleID
processID
contextName
T@"NSDate",C,N,V_timestamp
T@"NSArray",C,N,V_changes
Tq,N,V_transactionNumber
T@"NSString",C,N,V_storeID
T@"NSString",C,N,V_bundleID
T@"NSString",C,N,V_processID
T@"NSString",C,N,V_contextName
T@"NSString",C,N,V_author
T@"REMNSPersistentHistoryToken",&,N,V_token
T@"REMObjectID",C,N,V_accountID
<REMNSPersistentHistoryTransaction - txnNo(%lld) timestamp(%@) storeID(%@) contextName(%@) author(%@) chgCount(%ld) token(%@)>
T@"_REMNSPersistentHistoryTransactionStorage",&,V_storage
com.apple.CRDT.REMObjectID
Cannot merge REMObjectID with different value.
recurrenceEnd
frequency
interval
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
<%@: %p objectID: %@, reminderID: %@, accountID: %@>
<%@: %p objectID: %@, reminderID: %@, accountID: %@> %@
RRULE:%@
FREQ=%@
;INTERVAL=%lu
;UNTIL=%@
;COUNT=%lu
;BYMONTH=%@
;BYMONTHDAY=%@
;BYYEARDAY=%@
;BYWEEKNO=%@
;BYDAY=%@
;BYSETPOS=%@
;WKST=%@
HOURLY
DAILY
WEEKLY
MONTHLY
YEARLY
yyyyMMdd
yyyyMMdd'T'HHmmss
yyyyMMdd'T'HHmmss'Z'
REMCDRecurrenceRule
T@"REMRecurrenceEnd",R,C,N,V_recurrenceEnd
Tq,R,N,V_frequency
Tq,R,N,V_interval
Tq,R,N,V_firstDayOfTheWeek
T@"NSArray",R,N,V_daysOfTheWeek
T@"NSArray",R,N,V_daysOfTheMonth
T@"NSArray",R,N,V_daysOfTheYear
T@"NSArray",R,N,V_weeksOfTheYear
T@"NSArray",R,N,V_monthsOfTheYear
T@"NSArray",R,N,V_setPositions
interface
T@"NSXPCInterface",R,N
REM_WRAP(%@)
T@"NSPersistentHistoryToken",R,N,V_token
InternalBuild
<%@: %p phones.count=%ld emails.count=%ld>
phones
emails
T@"NSArray",C,N,V_phones
T@"NSArray",C,N,V_emails
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
DA_statusReports
v24@?0@"NSArray"8@"NSError"16
DataAccessEnabled
Enable DataAccess
Disable DataAccess
BabysitterEnabled
Enable Babysitter
Disable Babysitter
DADREMChangeTrackingBehaviors
com.apple.dataaccess.BehaviorOptionsChanged
BehaviorOptions
com.apple.DataAccess.BehaviorOptions
DA_crashDaemon
T@"REMXPCDaemonController",&,N,V_daemonController
REMCDSmartList
T@"NSString",C,N,V_smartListTag
T@"NSArray",&,N,V_ordering
TB,N,V_isPersisted
T@"NSString",C,N,VsortingStyle
Tq,N,VsortingDirection
<%@: %p acounts.count: %ld, lists.count: %ld, smartLists.count: %ld, reminders.count: %ld>
Assertion Failure. Missing REMAccountChangeItem associated with REMListChangeItem. {listChangeItem: %@}
accountChangeItem (%@) has incorrect saveRequest (%@). Expected %@
listSublistContextChangeItem (%@) has incorrect saveRequest (%@). Expected %@
Assertion Failure. Missing REMListChangeItem associated with REMReminderChangeItem. {reminderChangeItem: %@}
listChangeItem is a group and adding reminder to group is not currently supported {listChangeItem: %@}
parentReminderChangeItem (%@) has incorrect saveRequest (%@). Expected %@
com.apple.eventkitsyncd
com.apple.reminderkit.REMSaveRequest
v40@?0@"NSArray"8@"NSArray"16@"NSArray"24@"NSArray"32
q24@?0@"REMAlarm"8@"REMAlarm"16
List has incorrect save request {original: %@, saveRequest: %@, expectedSaveRequest: %@}
Parent reminder has incorrect save request {original: %@, saveRequest: %@, expectedSaveRequest: %@}
Original reminder has incorrect save request {original: %@, saveRequest: %@, expectedSaveRequest: %@}
saved
TB,N,GisSaved,V_saved
trackedAccountChangeItems
T@"NSMutableDictionary",R,N,V_trackedAccountChangeItems
trackedListChangeItems
T@"NSMutableDictionary",R,N,V_trackedListChangeItems
trackedSmartListChangeItems
T@"NSMutableDictionary",R,N,V_trackedSmartListChangeItems
trackedReminderChangeItems
T@"NSMutableDictionary",R,N,V_trackedReminderChangeItems
trackedAccountCapabilities
T@"NSMutableDictionary",R,N,V_trackedAccountCapabilities
updateLastModifiedDates
TB,N,V_updateLastModifiedDates
saveIsNoopIfNoChangedKeys
TB,N,V_saveIsNoopIfNoChangedKeys
cloneCompletedRecurrentRemindersAtSave
TB,N,V_cloneCompletedRecurrentRemindersAtSave
applyCRDTsWithoutMerging
TB,N,V_applyCRDTsWithoutMerging
syncToCloudKit
TB,N,V_syncToCloudKit
x-apple-reminderkit
<%@>
%@://%@/%@
%@~%@
<%@>%@~%@
uuid
T@"NSUUID",R,N,V_uuid
T@"NSString",R,N,V_entityName
stringRepresentation
urlRepresentation
T@"NSURL",R,N
REMFetchRequestTypeStoragesAndParents
REMFetchRequestTypeStoragesOnly
REMFetchRequestTypeCount
REMFetchRequestTypeObjectIDs
REMFetchRequestTypeMetadata
Unknown REMFetchRequestType %ld
fetchExecutor
fetchLimit
<%@: %p type: %@, executor:%@%@>
T@"_REMFetchExecutor",&,N,V_fetchExecutor
TQ,N,V_fetchLimit
parentAccount
parentList
isGroup
reminderIDsToUndelete
reminderIDsMergeableOrderingData
reminderIDsMergeableOrdering
color
badgeEmblem
showingLargeAttachments
parentAccountID
reminderIDsOrderingHints
remindersICSDisplayOrderChanged
daExternalIdentificationTag
daDisplayOrder
daIsReadOnly
daIsImmutable
daIsNotificationsCollection
lastUserAccessDate
sharedOwnerName
sharedOwnerAddress
sharingStatus
sharees
sharedOwnerID
calDAVNotifications
isPlaceholder
currentUserShareParticipantID
daBulkRequests
<%@: %p %@ %@ [%ld.%ld (%ld)]>
reminderIDsMergeableOrderingData is nil when trying to deserialize from list storage
REMCDList
_forceDisableFullRemindersSorting
TB,N,V_isGroup
T@"NSString",C,N,V_name
T@"REMColor",&,N,V_color
T@"NSString",&,N,V_badgeEmblem
TB,N,V_showingLargeAttachments
T@"REMObjectID",&,N,V_parentAccountID
T@"NSOrderedSet",&,N
T@"NSData",&,N,V_reminderIDsMergeableOrderingData
T@"NSDictionary",&,N,V_reminderIDsOrderingHints
T@"NSSet",&,N,V_reminderIDsToUndelete
TB,N,V_remindersICSDisplayOrderChanged
T@"NSString",C,N,V_sharedOwnerName
T@"NSString",C,N,V_sharedOwnerAddress
Tq,N,V_sharingStatus
T@"NSArray",&,N,V_sharees
T@"REMObjectID",&,N,V_sharedOwnerID
T@"NSDate",C,N,V_lastUserAccessDate
T@"NSArray",&,N,V_calDAVNotifications
T@"NSString",&,N,V_daExternalIdentificationTag
T@"NSDictionary",&,N,V_daBulkRequests
Tq,N,V_daDisplayOrder
TB,N,V_daIsEventOnlyContainer
TB,N,V_daIsReadOnly
TB,N,V_daIsImmutable
TB,N,V_daIsNotificationsCollection
TB,N,V_isPlaceholder
T@"NSString",C,N,V_currentUserShareParticipantID
startingDueDate
endingDueDate
descriptors
text
textMatching
T@"NSDate",&,N,V_startingDueDate
T@"NSDate",&,N,V_endingDueDate
TB,N,V_completed
T@"NSArray",&,N,V_descriptors
T@"NSString",&,N,V_text
Tq,N,V_textMatching
T@"NSString",R,N,V_title
dueAfter
T@"NSDate",R,N,V_dueAfter
dueBefore
T@"NSDate",R,N,V_dueBefore
T@"NSNumber",R,N,V_completed
hasLocation
T@"NSNumber",R,N,V_hasLocation
location
T@"NSString",R,N,V_location
X-Apple-Radius
X-APPLE-RADIUS
X-Apple-ABUID
X-APPLE-ABUID
X-APPLE-REFERENCEFRAME
405e3bdb-9308-4ad5-85b5-d3c5943d17c5
3C8C2A71-84BF-4C87-8EFD-BB4827650D15
siriFoundInAppsListID
localAccountDefaultListID
T@"NSDictionary",R,D,N
T@"REMListStorage",C,N,V_storage
reminderIDsOrdering
T@"NSOrderedSet",R,D,N
T@"REMList",&,N,V_parentList
canBeShared
canBeIncludedInGroup
isShared
isOwnedByMe
isSharedToMe
T@"NSDate",R,C,D,N
calDAVNotificationContext
T@"REMListCalDAVNotificationContext",R,N
shareeContext
T@"REMListShareeContext",R,N
T@"REMAccount",R,N,V_account
T@"REMColor",R,D,N
appearanceContext
T@"REMListAppearanceContext",R,N
sublistContext
T@"REMListSublistContext",R,N
T@"REMList",&,N,V_list
badge
T@"REMListBadge",R,N
B24@?0@8@"NSDictionary"16
sharedOwner
T@"REMSharee",R,N,V_sharedOwner
v16@?0@"REMCRReminderIDList"8
Should not call +cdEntityName on this test-only class.
replica
T@"NSUUID",R,N,V_replica
T@"REMObjectID",&,N,V_remObjectID
delegate
T@"NSObject<REMCRReminderIDListDelegate>",W,N,V_delegate
reminderIDsProxy
T@"NSMutableOrderedSet",R,N
com.apple.remindd.RDMasterStore.defaultValuesMigration
com.apple.remindd.RDMasterStore.JSONPropertiesMigration
com.apple.remindd.RDMasterStore.CKParentReminderIdentifierMigration
com.apple.remindd.RDMasterStore.OrphanedListMigration
com.apple.RDMasterStore.deleteAccountStore
com.apple.remindd.RDDisplayDateUpdater
com.apple.remindd.notificationConsumer.lastBannerPresentationDate
com.apple.remindd.todayEngine.notification.lastBannerPresentationDate
com.apple.remindd.ICCloudContext.internal
CalDAVMobileAccountDelegatePrincipalPath
REMCRMergeableStringDocument
Failed to merge documents.
T@"TTMergeableStringVersionedDocument",&,N,V_document
string
attributedString
T@"NSAttributedString",R,N
v40@?0@"NSDictionary"8{_NSRange=QQ}16^B32
mergeableString
T@"TTMergeableAttributedString",R,N
America/Los_Angeles
America/New_York
Reminders/
Container_v1/
IsolatedContainers/
xctest
remindtool
REMPathsCreateApplicationDocumentsURL
LocationBundles
RemindersAlerts.bundle
REMPathsCreatePersistentdataURL
ppt.sentinel
applicationDocumentsURL
reminderDataURL
locationBundleURL
hasDisplayDate
TB,N,V_hasDisplayDate
hasAlarmDateComponents
TB,N,V_hasAlarmDateComponents
isInitWithDueDateComponents
TB,N,V_isInitWithDueDateComponents
T@"NSDateComponents",&,N,V_dueDateComponents
floatingDateComponents
T@"NSDateComponents",&,N,V_floatingDateComponents
nonFloatingDateComponents
T@"NSDateComponents",&,N,V_nonFloatingDateComponents
T@"REMSmartListStorage",R,C,N,V_storage
purpose
Tq,R,N,V_purpose
valueStorage
<%@: %p valueStorage: %@>
T@"NSMutableDictionary",&,N,V_valueStorage
Emoji
{"%@" : "%@"}
emblem
T@"NSString",C,N,Vemblem
emoji
T@"NSString",C,N,Vemoji
rawValue
v24@?0@"NSMutableOrderedSet"8@"NSMutableDictionary"16
v16@?0@"NSMutableOrderedSet"8
T@"NSDictionary",&,D,N
T@"REMAccount",R,N,V_parentAccount
T@"REMListStorage",R,C,N,V_storage
T@"REMListCalDAVNotificationContextChangeItem",R,N
T@"REMListShareeContextChangeItem",R,N
T@"REMColor",&,D,N
T@"REMListAppearanceContextChangeItem",R,N
T@"REMListSublistContextChangeItem",R,N
T@"REMListChangeItem",&,N,V_listChangeItem
T@"REMListBadge",C,N
Reminder
geo:%f,%f
none
high
medium
Unexpected REMReminderChangeTrackingProperty key.
T@"REMReminder",&,N,V_parentReminder
T@"REMReminderStorage",R,N,V_storage
T@"REMCRMergeableStringDocument",R,D,N
T@"REMContactRepresentation",R,D,N
TQ,R,D,N
T@"NSURL",R,D,N
T@"REMUserActivity",R,D,N
T@"NSDate",R,D,N
T@"REMReminderAssignmentContext",R,N
T@"REMList",R,N,V_list
T@"NSAttributedString",R,C,N
TB,R,D,N,GisCompleted
T@"NSDateComponents",R,C,D,N
T@"REMReminderAttachmentContext",R,N
T@"REMReminderSubtaskContext",R,N
T@"REMReminderFlaggedContext",R,N
reminder
T@"REMReminder",&,N,V_reminder
T@"REMReminder",R,N
T@"REMReminder",W,N,V_reminder
undoBlocks
T@"NSArray",R,N,V_undoBlocks
T@"NSMutableArray",R,N,V_undoBlocks
%@ (type=%@, bytes=%@, details=%@)
{type: %@, title: %@, URL: %@, userInfo: %@}
%@ (type=%@, bytes=%@)
universalLink
NSUserActivity
SiriIntent
Unknown REMUserActivityType %ld
T@"NSData",R,N,V_storage
firstName
middleName
lastName
namePrefix
nameSuffix
nickname
accessLevel
<%@: %p objectID: %@, listID: %@, status: %@, access: %@>
<%@: %p objectID: %@, listID: %@, status: %@, access: %@, address: %@>
REMCDSharee
0D5A5BA9-302D-4518-AE2D-58DDA388E850
T@"NSString",R,N,V_displayName
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_middleName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_namePrefix
T@"NSString",R,N,V_nameSuffix
T@"NSString",R,N,V_nickname
personNameComponents
T@"NSPersonNameComponents",R,N
T@"NSString",R,N,V_address
Tq,R,N,V_accessLevel
T@"NSMutableDictionary",&,N,V_map
-REMCDOBJECT_DELETED-
%@%@%@
accountObjectID
T@"REMObjectID",R,N,V_accountObjectID
groupObjectID
T@"REMObjectID",R,N,V_groupObjectID
manual
REMCDChangeTrackingState
lastConsumedChangeTokenData
Invalid merge, classes must be equal for merge.
T@"CRTTCompatibleDocument",&,N
uuidSet
T@"NSMutableOrderedSet",&,N,V_uuidSet
keySet
T@"NSMutableOrderedSet",&,N,V_keySet
encodedObjects
T@"NSMutableOrderedSet",&,N,V_encodedObjects
currentDocument
T^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{VectorTimestamp}^{VectorTimestamp}{RepeatedPtrField<CRDT::Document_DocObject>=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}^{VectorTimestamp}},N,V_currentDocument
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
<%@ %p %@ %@>
value
T@"<CRDataType>",&,N,V_value
T@"CRVectorTimestamp",&,N,V_timestamp
v40@?0@"<CRDataType>"8@"<CRDataType>"16^{Dictionary_Element=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{ObjectID}^{ObjectID}^{VectorTimestamp}^{RegisterLatest}}24@"CRCoder"32
@"<CRDataType>"32@?0r^{Dictionary_Element=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{ObjectID}^{ObjectID}^{VectorTimestamp}^{RegisterLatest}}8^@16@"CRCoder"24
v16@?0@"CRCoder"8
<%@ %p>
<%@ %p (
  %@ %@,
  %@ : %@ %@,
contents
T@"NSMapTable",&,N,V_contents
removeClock
Tq,N,V_removeClock
T@"CRDocument",W,N,V_document
clock
TQ,N,V_clock
subclock
TQ,N,V_subclock
<%@ %p>(
  %@:%lu.%lu
<%@ %p>(
timestamps
T@"NSArray",&,N,V_timestamps
isDocumentShared
1.2.11
v24@?0^{TopoSubstring={TopoIDRange={TopoID=@I}I}{TopoID=@I}IB{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}I}8^B16
v56@?0{TopoIDRange={TopoID=@I}I}8{TopoIDRange={TopoID=@I}I}32
v32@?0^{TopoSubstring={TopoIDRange={TopoID=@I}I}{TopoID=@I}IB{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}I}8{_NSRange=QQ}16
TopoText
TTMergeableString graph has loop.
TTMergeableString graph has two characters with the same id.
mergeA-%p.data
mergeB-%p.data
DebugDumpMergeData
Reached substring that is not in our graph.
<%@ %p = '%@'>
subgraph cluster_%ld%p_%ld {
  rankdir="LR";
<Fragment>
  label="%@_%ld (%ld)    '%@'"
  color=lightgrey;
  N%ld%p [label="Start\n%@,%d"];
  N%ld%p [label="End\n%@,%d"];
  N%ld%p [label="%@ %@,%d-%u (%@,%d)"];
  N%ld%p -> N%ld%p;
T@"TTVectorMultiTimestamp",&,N,V_timestamp
hasLocalChanges
TB,N,V_hasLocalChanges
T@"NSUUID",&,N,V_replicaUUID
T@"NSMutableAttributedString",&,N,V_attributedString
replicaTextClock
TQ,R,N,V_replicaTextClock
replicaStyleClock
TQ,R,N,V_replicaStyleClock
T@"NSObject<TTMergeableStringDelegate>",W,N,V_delegate
objectsNeedingUpdatedRanges
T@"NSHashTable",R,N,V_objectsNeedingUpdatedRanges
com.apple.coreCRDT
TTArray
TTArray: no object at index %lu
TTArrayAttachment
v40@?0@8{_NSRange=QQ}16^B32
TTArray cannot merge with object of type %@.
v16@?0@"TTArray"8
T@"TTMergeableAttributedString",R,N,V_contents
nsArray
T@"NSObject<CRUndoDelegate>",W,N,V_delegate
Q16@?0@"NSUUID"8
<TTMergeableStringSelection %p 
 %@:%d
-%@:%d
selectionAffinity
TQ,N,V_selectionAffinity
set_affinity
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/topotext.pb.h
::topotext::Selection_Affinity_IsValid(value)
documentArchive
T^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<versioned_document::Version>=^^viii}I},N,V_documentArchive
futureVersionCount
GetEmptyStringAlreadyInited
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/google/protobuf/generated_message_util.h
empty_string_ != NULL
CHECK failed: (&other) != (this): 
CHECK failed: (start) >= (0): 
CHECK failed: (num) >= (0): 
CHECK failed: (start + num) <= (size()): 
CHECK failed: (current_size_) > (0): 
protobufArchiveKey
set_alignment
::topotext::ParagraphStyle_Alignment_IsValid(value)
set_writingdirection
::topotext::AttributeRun_WritingDirection_IsValid(value)
<TTMergeableStringUndoGroup %p %@>
seen
T@"NSMutableDictionary",&,N,V_seen
commands
T@"NSMutableArray",&,N,V_commands
sharedTopotextTimestamp
T@"TTCRVectorMultiTimestamp",&,N,V_sharedTopotextTimestamp
stringsWithClocksNeedingUpdating
T@"NSMutableArray",&,N,V_stringsWithClocksNeedingUpdating
stringsWithClocksToResetAfterRealizingLocalChanges
T@"NSMutableArray",&,N,V_stringsWithClocksToResetAfterRealizingLocalChanges
v16@?0@"CRArray"8
v32@?0@"<CRDataType><CREquatable>"8Q16^B24
CRArray cannot merge with object of type %@.
array
T@"TTArray",&,N,V_array
T@"CRDictionary",&,N,V_contents
moveClock
TB,N,V_moveClock
Cannot merge NSNumber with different value.
integerValue
doubleValue
T@?,C,N,Vblock
dependency
T@,W,N,Vdependency
T@,W,N,Vvalue
No topological sort of completion handlers.
T@"NSUUID",C,N,V_replica
allocedDocObjects
T@"NSMutableArray",&,N,V_allocedDocObjects
currentDocObjectForDecodingPtr
Tr^{Document_DocObject=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i(ContentsUnion=^{RegisterLatest}^{RegisterLatest}^{RegisterLatest}^{Dictionary}^{Dictionary}^{Dictionary}^{Timestamp}^{VectorTimestamp}^{Index}^{String}Q^{OneOf}^{Document_CustomObject}^{StringArray}^{Array}^{OrderedSet})[1I]},N,V_currentDocObjectForDecodingPtr
typeSetForDecoding
T@"NSMutableOrderedSet",&,N,V_typeSetForDecoding
uuidArray
T@"NSMutableArray",&,N,V_uuidArray
completionHandlers
T@"NSMutableArray",&,N,V_completionHandlers
v40@?0@8@16@"CRVectorTimestamp"24^B32
dictionary
T@"CRDictionary",&,N,V_dictionary
T@"NSHashTable",&,N,V_observers
T@"CRDocument",W,N
allObjects
T@"NSArray",R,C
Invalid CRRegisterLatest merge, classes must be equal for merge.
T@"CRTimestamp",&,N,V_timestamp
values
<%@ %p (
%@, 
T@"CRSet",&,N,V_values
cachedValues
T@"NSSet",&,N,V_cachedValues
%ld.
Natural
 needsParagraphCleanup
<%@: %p style=%lu alignment=%lu indent=%ld %@%@%@%@>
 needsListCleanup
style
TI,N,V_style
alignment
TQ,N,V_alignment
writingDirection
Tq,N,V_writingDirection
indent
TQ,N,V_indent
startingItemNumber
TQ,N,V_startingItemNumber
hints
TI,N,V_hints
needsParagraphCleanup
TB,N,V_needsParagraphCleanup
needsListCleanup
TB,N,V_needsListCleanup
canIndent
isList
isHeader
uniqueToLine
preferSingleLine
wantsFollowingNewLine
trackingUUID
TI,D,N
<TTMergeableStringUndoAttributeCommand %p 
%@:%d-%u => %@ 
attributeRanges
T^{vector<std::__1::pair<TopoIDRange, NSDictionary *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSDictionary *> > >=^{pair<TopoIDRange, NSDictionary *>}^{pair<TopoIDRange, NSDictionary *>}{__compressed_pair<std::__1::pair<TopoIDRange, NSDictionary *> *, std::__1::allocator<std::__1::pair<TopoIDRange, NSDictionary *> > >=^{pair<TopoIDRange, NSDictionary *>}}},R,N,V_attributeRanges
TTFont
TTHints
TTUnderline
TTStrikethrough
TTColor
TTStyle
TPItemNumber
TPMaxApproxItemNumber
TPInsertDate
TTTimestamp
DDFoundExistingLink
_UITextInputDictationResultMetadata
NSSuperScript
v32@?0@8@16^B24
CRPropertyRegisterLatest
CRPropertySet
CRPropertyString
CRPropertyOneOf
identity
Invalid CRObject merge, classes must be equal for merge.
v32@?0@8@"<CRIdentifiable>"16^B24
<%@ %p %@>
v@:@
T@"NSUUID",R,N,V_identity
fields
T@"NSDictionary",R,N,V_fields
Cannot merge NSUUID with different value.
%02X%02X
UUIDIndex
<%@: %p %@ %0.1f%@%@>
 bold
 italic
nativeFont
T@,&,N,V_nativeFont
fontName
T@"NSString",R,N,V_fontName
pointSize
Td,R,N,V_pointSize
fontHints
TI,R,N,V_fontHints
v16@?0@"<CRDataType>"8
v16@?0@8
<%@ %p version=%@ root=%@>
T@"CRVectorTimestamp",R,N,V_version
startVersion
T@"CRVectorTimestamp",R,N,V_startVersion
rootObject
T@,&,N,V_rootObject
replicaClock
Tq,R,N,V_replicaClock
unserializedReplicaClock
Tq,N,V_unserializedReplicaClock
objects
T@"NSMutableDictionary",R,N,V_objects
T@"TTMergeableAttributedString",&,N,V_mergeableString
self
Subclass must implement.
Cannot tombstone a non-value / non-identified object.
T@,&,D,N
NSAttachment
NSLink
NSParagraphStyle
NSWritingDirection
NSTextAlternatives
<%@ %p %ld:%@>
%ld:%@
T@"NSUUID",&,N,V_replica
Cannot calculate deltas for vector timestamps.
%@:%lu 
com.apple.CRDT.NSNumber
com.apple.CRDT.NSUUID
com.apple.CRDT.CRRegisterMultiValueLeast
com.apple.CRDT.CRRegisterMultiValue
clusterTypeSet
T@"NSOrderedSet",R,N,V_clusterTypeSet
typeToClassDict
typeSet
TTMergeableUndoStringDidAddUndoNotification
CRTombstoneOrderedSet
CRTombstoneOrderedSet: inserting element at invalid index
v16@?0@"CRTombstoneOrderedSet"8
v24@?0Q8^B16
CRTombstoneOrderedSet: moving element to an invalid index
v24@?0@"NSUUID"8^B16
CRTombstoneOrderedSet cannot merge with object of type %@.
cachedIdentifierSet
T@"NSMutableOrderedSet",R,N,V_cachedIdentifierSet
cachedIndexMapping
T@"NSMapTable",R,N,V_cachedIndexMapping
T@"CRArray",&,N,V_ordering
T@"CRSet",&,N,V_elements
<TTMergeableStringUndoEditCommand %p Delete:
%@:%d-%u, 
  Insert:
%@:%d-%u=>'%@', 
deleteRanges
T^{vector<TopoIDRange, std::__1::allocator<TopoIDRange> >=^{TopoIDRange}^{TopoIDRange}{__compressed_pair<TopoIDRange *, std::__1::allocator<TopoIDRange> >=^{TopoIDRange}}},R,N,V_deleteRanges
insertStrings
T^{vector<std::__1::pair<TopoIDRange, NSAttributedString *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *> > >=^{pair<TopoIDRange, NSAttributedString *>}^{pair<TopoIDRange, NSAttributedString *>}{__compressed_pair<std::__1::pair<TopoIDRange, NSAttributedString *> *, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *> > >=^{pair<TopoIDRange, NSAttributedString *>}}},R,N,V_insertStrings
crTimestamp
T@"CRVectorTimestamp",&,N,V_crTimestamp
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/google/protobuf/message_lite.cc
CHECK failed: !coded_out.HadError(): 
CHECK failed: IsInitialized(): 
serialize
parse
Can't 
 message of type "
" because it is missing required fields: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
Protocol message was modified concurrently during serialization.
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of the message.
This shouldn't be called if all the sizes are equal.
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc
CHECK failed: (last_returned_size_) > (0): 
BackUp() can only be called after a successful Next().
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) >= (0): 
Cannot allocate buffer larger than kint32max for 
StringOutputStream.
CHECK failed: (count) <= (target_->size()): 
CHECK failed: backup_bytes_ == 0 && buffer_.get() != NULL: 
 BackUp() can only be called after Next().
CHECK failed: (count) <= (buffer_used_): 
 Can't back up over more bytes than were returned by the last call to Next().
 Parameter to BackUp() can't be negative.
CHECK failed: (backup_bytes_) == (0): 
CHECK failed: (buffer_used_) == (buffer_size_): 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/replica-manager.pb.cc
CHECK failed: (&from) != (this): 
replica_manager.VectorTimestampElement
replica_manager.ReplicaEntry
replica_manager.ReplicaManager
down_cast
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/google/protobuf/stubs/common.h
f == NULL || dynamic_cast<To>(f) != NULL
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream.cc
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/versioned-document.pb.cc
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/topotext.pb.cc
topotext.String
topotext.VectorTimestamp.Clock.ReplicaClock
topotext.VectorTimestamp.Clock
topotext.VectorTimestamp
topotext.CharID
topotext.Substring
topotext.Selection.Range
topotext.Selection
topotext.AttributeRun
topotext.Font
topotext.ParagraphStyle
topotext.AttachmentInfo
topotext.Attachment
topotext.Location
topotext.Media
topotext.PreviewImage
topotext.Todo
topotext.Color
CHECK failed: (size()) < (Capacity()): 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/google/protobuf/stubs/common.cc
This program requires version 
 of the Protocol Buffer runtime library, but the installed version is 
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
This program was compiled against version 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
%d.%d.%d
INFO
WARNING
ERROR
FATAL
[libprotobuf %s %s:%d] %s
pthread_mutex_lock: 
pthread_mutex_unlock: 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/google/protobuf/io/coded_stream.cc
The total number of bytes read was 
A protocol message was rejected because it was too big (more than 
 bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (0) == (BufferSize()): 
Reading dangerously large protocol message.  If the message turns out to be larger than 
 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (buffer_size) >= (0): 
CHECK failed: (str.size()) <= (kuint32max): 
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/crframework.pb.cc
CRDT.ObjectID
CRDT.Timestamp
CRDT.RegisterLatest
CRDT.VectorTimestamp.Element
CRDT.VectorTimestamp
CRDT.Dictionary.Element
CRDT.Dictionary
CRDT.Index.Element
CRDT.Index
CRDT.OneOf.Element
CRDT.OneOf
CRDT.StringArray.ArrayAttachment
CRDT.StringArray
CRDT.Array
CRDT.OrderedSet
CRDT.Document.CustomObject.MapEntry
CRDT.Document.CustomObject
CRDT.Document.DocObject
CRDT.Document
/Library/Caches/com.apple.xbs/Sources/ReminderKit_Sim/ReminderKit-286.1/CRProtobuf/protobuf-lite/google/protobuf/wire_format_lite.cc
CHECK failed: value.size() <= kint32max: 
CHECK failed: (end - target) == (size): 
Unknown REMWeekday %ld
Unknown REMListSortDescriptorType %ld
rem_log_fault_if(aCount != bCount) -- clock elements should have the same count {aCount: %ld, bCount: %ld}
Creating a new, in-memory only replica manager {account = %@}
Deserializing existing replica manager {account = %@, size = %lu}
Creating a new replica manager {account = %@}
Clock element list is incompatible with existing list {cliet: %@}
Client clock newer that replica manager clock {client: %@, clientClockElementList: %@, replicaEntry.clockElementList: %@, replicaUUID: %@}
rem_log_fault_if(!entry.inUse) -- Client attempt to update replica while it is not in use {client: %@, replicaUUID: %@}
rem_log_fault_if(client != entry.client) -- Client attempt to update a replica not checked out by it {client: %@, entry.client: %@}
rem_log_fault_if(comparisonResult != REMClockElementsComparisonResultDescending) -- Can only update with a newer version.
rem_log_fault_if(!entry.inUse) -- Client attempts to return replicaUUID while it is not in use {client = %@, replicaUUID = %@}
rem_log_fault_if(client != entry.client) -- Client attempts to return replicaUUID not checked out by it {client = %@, replicaUUID = %@, checked out by = %@}
Importing ICS data into list change item {%@}.
Failed to parse data to ICS document {error: %@}.
Could not find a component with {key: %@}.
Added ICSTodo as reminder change item into list change item {reminder: %@, list: %@}.
Setting ICS item UID to reminder change item {%@, uid: %@}.
The imported ICS reminder doesn't have display order and creation time. {icsTodoItem.url: %@}
Import ICS alarm and triggers to reminder {alarmUID: %@, reminderID: %@}.
Imported ICS alarm has no UID, generating one {alarmUID: %@, reminderID: %@}.
Importing a Proximity/Location trigger when we have already imported a TimeInterval/Date trigger from the same ICSAlarm. So we found a concrete case that they co-exist. {alarmUID: %@, reminderID: %@}
Trying to import setting proximity without a location. {alarmUID: %@, reminderID: %@}
Trying to import setting location without a proximity value. {alarmUID: %@, reminderID: %@}
Couldn't populate the recurrence rule {icsRecurrence: %@, reminderID: %@}
Ignoring invalid coordinates when converting location from ICS: %@
Ignoring unexpected location URL scheme when converting location from ICS: %@.
Encountered an ICS frequency that we don't handle: %d. Defaulting to daily
Encountered an unknown ICS frequency: %d
Encountered an unknown ICSWeekday: %d
Unknown ReminderKit change tracking error code.
ERROR: REMChangeError occurred - code=%@, desc=%@, nserror=%@
rem_log_fault_if(listChangeItem == nil) -- listChangeItem is nil. Unable to insert ordering info to the list.
Unable to duplicate. parentReminderID is present but parentReminder.subtaskContext is nil. {parentReminderID: %@}
Unable to duplicate. Cannot find list with listID {listID: %@}
Malformed original reminder - either parentReminderID or listID must be non-nil.
rem_log_fault_if(listChangeItem == nil) -- listChangeItem is nil. Unable to update list when setting icsDisplayOrder.
Adding recurrenceRule before recurrenceRule {reminderChangeItem: %@, recurrenceRule: %@, siblisngRecurrenceRule: %@}
Adding recurrenceRule after recurrenceRule {reminderChangeItem: %@, recurrenceRule: %@, siblisngRecurrenceRule: %@}
Removing recurrenceRule {reminderChangeItem: %@, recurrenceRule: %@}
Removing all recurrenceRules {reminderChangeItem: %@}
Behavior is undefined if you set a time interval (duration) alarm trigger without a due date on the reminder!
Adding alarm  {reminderChangeItem: %@, alarm: %@}
REMSaveRequest.isSaved MUST be FALSE
Adding data attachment {reminderChangeItem: %@, data.length: %ld, uti: %@}
Adding image attachment {reminderChangeItem: %@, data.length: %ld, width: %ld, height: %ld}
Adding attachment before attachment {reminderChangeItem: %@, attachment: %@, siblisngAttachment: %@}
Adding attachment after attachment {reminderChangeItem: %@, attachment: %@, siblisngAttachment: %@}
Removing attachment {reminderChangeItem: %@, attachment: %@}
Removing all attachments {reminderChangeItem: %@}
Removing all attachments {reminderChangeItem: %@} for class %@
Adding assignment {reminderChangeItem: %@, assignment: %@}
Removing assignment {reminderChangeItem: %@, recurrenceRule: %@}
Removing all assignment {reminderChangeItem: %@}
REMStore did change
Failed to create isolated store container {error: %@}
Did create isolated store container {token: %@}
Failed to destroy isolated store container {error: %@, token: %@}
Did destory isolated store container {token: %@}
Created isolated store {store: %@}
Invalidating REMStore {store: %@}
Not invalidating connection for REMStore becuase its not an isolated store {store: %@}
xpc error while using debug performer {error :%@}
Nuked database with error: %@
XPC error while fetching replica manager {error: %@, account: %@}
Store replica manager fetch successful {account: %@, fetchSerializedData: %@}
Store replica manager fetch failed {error: %@, account: %@}
Store replica manager fetch successful {account: %@, bundleID: %@, managerByID.count: %lu}
Store replica manager fetch failed {error: %@, account: %@, bundleID: %@}
XPC error while saving {error: %{public}@, store: %@}
Failed to get results from fetchResult {error: %@, fetchResult: %@, fetchRequest: %@}
REMStore.fetchByObjectID
XPC error while executing fetchRequest {error: %@, fetchRequest: %@}
Store fetch successful {fetchRequest: %@, fetchResult: %@}
Succesfully executed fetch {fetchResult: %@}
Failed to get fetchResult or error from fetchRequest {fetchRequest: %@}
Store failed to execute fetchRequest {error: %@, fetchRequest: %@, store: %@}
REMStore Invocation
 enableTelemetry=YES Name=%{public, signpost.telemetry:string1, Name=InvocationName}s UserInteractive=%{public, signpost.telemetry:number1, Name=UserInteractive}d
FETCH START {name: %{public}@}
FETCH END ERROR_XPC {name: %{public}@, error: %{public}@}
FETCH END {name: %{public}@}
FETCH END ERROR {name: %{public}@, error: %{public}@}
 enableTelemetry=YES 
REMStore.invocation
REMStore swiftInvocation
FETCH START {name: %{public}@, parametersData.length %ld, storages.count: %ld}
FETCH END {name: %{public}@, result.data.length: %ld, result.storages.count: %ld}
FETCH END ERROR {name: %{public}@, error: %@}
 enableTelemetry=YES ResultCount=%{public, signpost.telemetry:number1, Name:ResultCount}ld DataSize=%{public, signpost.telemetry:number2, Name:DataSize}ld
Unexpected error when fetching all reminders from list {list: %@, error: %@}
Unexpected error when fetching all accounts: %@
Unexpected error when fetching all lists from account {account: %@, error: %@}
xpc error while using xpcPerformer {error: %{public}@, store: %@}
REMStore.save
(client) SAVE START {author: %{public}@, accountChangeItems.count: %lu, listChangeItems.count: %lu,  reminderChangeItems.count: %lu}
Will save REMReplicaManager {version: %llu, accountID: %@}
Failed to serialize REMReplicaManager {error: %{public}@}
(client) SAVE FAIL {error: %{public}@}
(client) SAVE END
Marking REMReplicaManager as saved {version: %llu, accountID: %@}
XPC error while fetching share for list {error: %@, list: %@}
Store fetch share failed {error: %@, account: %@}
Store fetch share successful {list: %@, share: %@}
XPC error while creating share for list {error: %@, list: %@}
Store create share failed {error: %@, account: %@}
Store create share successful {list: %@, share: %@}
XPC error while updating share {error: %@, share: %@}
XPC error while stopping share {error: %@, share: %@}
XPC error while accepting share {error: %@, metadata: %@}
(client) DistributedEvaluation Export START {options: %{public}@
XPC error while fetching store performer {error: %{public}@}
DistributedEvaluation Export produced no result and no error
DistributedEvaluation Export ERROR {error: %{public}@}
(client) DistributedEvaluation Export END
Given invitation list isn't a CalDAV list {invitationList: %@, account: %@}
Given invitation list isn't a sharing invitation {invitationList: %@, account: %@}
Given invitation list has no external identifier {invitationList: %@, account: %@}
Could not find the external identifier from the given invitation list {invitationList: %@, account: %@}
XPC error while accepting CalDAV share {error: %@, invitationList: %@}
Could not create a change tracking client because some of the parameters are missing.
Could not get a daemon controller to create the change tracking client.
_shouldNotifyReminddOfInteractionWithPeople returned NO. Skipping notification {people: %@}
_shouldNotifyReminddOfInteractionWithPeople returned YES. Notifying people interaction {people: %@}
Failed to notify of interaction {error: %@, people: %@}
XPC error while notifying of interaction {error: %@, people: %@}
Failed to register shouldNotifyOfInteractionWithPeople with notifyd {status: %d}
Failed to register shouldNotifyOfInteractionWithPeople with notify. Returning YES to _shouldNotifyReminddOfInteractionWithPeople {token: %d}
Failed to check notifyd token. Returning YES to _shouldNotifyReminddOfInteractionWithPeople {token: %d, status: %d}
shouldNotifyOfInteractionWithPeople did not change. Returning cached value {__sShouldNotifyRemindd: %d}
shouldNotifyOfInteractionWithPeople did change. Updating cache
Failed to get notify state. Returning YES to _shouldNotifyReminddOfInteractionWithPeople {token: %d, status: %d}
Successfuly notify_get_state updating cache {state: %llu}
DEPRECATED API called -[REMStore fetchReminderWithExternalIdentifier:inList:error:] called, without bounded by an REMList as param.
DEPRECATED API called -[REMStore fetchRemindersWithExternalIdentifiers:inList:error:] called, without bounded by an REMList as param.
XPC error while trying to perform MCIsManagedAccountWithObjectID {error: %@, account: %@}
Store perform MCIsManagedAccountWithObjectID successful {account: %@, MCIsManaged: %@}
Store perform MCIsManagedAccountWithObjectID failed {error: %@, account: %@}
EventKitSync: enabled on watchOS
Sync throttled
Triggering sync for dataAccess accounts {accountIDs: %{public}@}
XPC error while syncing {error: %{public}@}
Error updating account. Not Triggering sync {error: %@}
XPC error while updating accounts {error: %@}
Error updating account and fetching migration state {error: %@}
XPC error while updating account {error: %@, accountID: %@}
[REMStore deleteAccountWithAccountID] is deprecated. Please update your account plugin!
XPC error while removing orphaned accounts {error: %@}
XPC error while syncing {error: %@}
XPC error while requesting to initiate merge local data to sync data {accountIdentifier: %@, error: %@}
XPC error while requesting to delete sync data {accountIdentifier: %@, error: %@}
XPC error while requesting to delete local data {error: %@}
_REMDACalDAVSyncReplicaManagerProvider: Deserializing existing replica manager {account = %@, size = %lu}
_REMDACalDAVSyncReplicaManagerProvider: Creating a new replica manager {account = %@}
Unknown REMAlarmProximity %ld
Unknown REMAlarmVehicleTriggerEvent %ld
Undo stack is empty. Cannot -undo.
rem_log_fault_if(![self.undos containsObject:undo]) -- Supplied undo is not found in undo stack. Normally, if the undo is obtained from this particular REMCRMergeableOrderedSet, the undo will also be present in self.undos, whose value is now: %@
Attempted to decode REMAccount missing objectID, type or name {objectID: %{public}@, type: %ld, name: %@, listIDs: %@, markedForRemoval: %d}
You are about to trigger decoding the resolution token map from JSON data. This is probably not what you want for performance to trigger it from -isEqual:, unless you are running Tests then it's fine {class: %{public}@, self-map: %@, other-map: %@}
Nil resolutionTokenMapData when reading resolutionTokenMap from account storage. Initialize an empty map {list: %@}
Unknown REMAccountType %ld
REMChangeTracking+AuxiliaryChgInfo: Could not instantiate auxiliary change info model for {class: %{public}@, remObjectID: %{public}@}
REMChangeTracking+AuxiliaryChgInfo: Failed to decode data to plist dictionary for {class: %{public}@, remObjectID: %{public}@, plistError: %{public}@}
REMChangeTracking+AuxiliaryChgInfo: No object identifier decoded from plist dictionary for {class: %{public}@, remObjectID: %{public}@}
REMChangeTracking+AuxiliaryChgInfo: Decoded object identifier from the plist dictionary does not match with input object ID for {class: %{public}@, remObjectID: %{public}@, decodedObjID: %{public}@}
Could not get a date component with floating time zone {date %@, flags: %@}
Could not get a date component with {date %@, timeZone: %@, flags: %@}
Calendar must be nil or Gregorian
Invalid date components: must have at least a year, a month, and a day
Date components without time zone cannot be compared to date components with timezone
Date components with time zone cannot be compared to date components without timezone
Cannot create date from date components
REMChangedKeysObserver detected a change {keyPath: %@, old: %@, new: %@}
rem_log_fault_if(src != nil && result == nil) -- Unexpected object type in checked dynamic cast %@ expects %@
rem_log_fault_if(!protocol) -- Protocol is nil {src: %@}
rem_log_fault_if(src != nil && result == nil) -- Unexpected object type in checked protocol cast %@ expects %s
Tried to compare two REMReminderStorage instances without first deserializing their CRDT titleDocument {self: %@, other: %@}
Tried to compare two REMReminderStorage instances without first deserializing their CRDT notesDocument {self: %@, other: %@}
Failed to read titleDocument from data. Returning nil.
Failed to read notesDocument from data. Returning nil.
Nil resolutionTokenMapData when reading resolutionTokenMap from reminder storage. Initialize an empty map {class: %{public}@, reminder: %@}
Unknown REMSiriFoundInAppsUserConfirmation %ld
Should not be trying to compare with the universal token.
Should not be trying to compare equality of the universal token. Use REMCHANGE_IS_UNIVERSAL_TOKEN() instead.
rem_log_fault_if(!isUniversal) -- isUniversal == NO on decoded universal change token
Attemped to get ordering of lists not belonging to the provided account {objectIDs: %@}
Tried to remove list not present in ordering list {objectID: %@, ordering: %@}
rem_log_fault_if(listChangeItem.accountID == nil || ![listChangeItem.accountID isEqual:self.objectID]) -- listChangeItem must have been assigned to this account change item at this point
Failed to find the insert after index of the given sibling list -- Appending to the end {objectID: %@}.
Unknown REMListPredicateDescriptorType %ld
REMDisplayDate unexpectedly initialized with a nil date. Returning nil.
Unable to obtain a valid floating date from floating date components; returning nil
Unable to obtain a valid non-floating date from non-floating date components; returning nil
Floating date components must not have a timezone {dateComponents %@}
Non-floating date components must have a timezone {dateComponents %@}
Non-floating display date is all day but only floating display dates should be all day {dateComponents %@}
rem_log_fault_if(!error) -- Daemon returned nil result and error for persistentHistoryFetch {token: %{public}@}
rem_log_fault_if(!error) -- Daemon returned nil result and error for persistentHistoryFetch {date: %{public}@}
xpc error while using debug performer {error: %{public}@, store: %@}
rem_log_fault_if(!debugPerformer) -- Failed to get debugPerformer fetching persistentStoreID {accountID: %{public}@}
xpc error while using changeTracking performer {error: %{public}@, store: %@}
rem_log_fault_if(!changeTrackingPerformer) -- Returned nil for both error and changeTrackingPerformer
rem_log_fault_if(coalescedChangeObjects == nil) -- changeObject.coalescedChanges should not be nil if changeObject.isCoalesced is YES
No auxiliary change info object IDs found with change object {changeObject: %@}
Auxiliary change info object IDs to fetch {objectIDs: %{public}@, changeObject: %@}
Daemon returned error for auxiliary change info fetch with {error: %{public}@, changeObject: %@, auxChgInfoIds: %{public}@}
rem_log_fault_if(!changeObject) -- ERROR changeObjectsMap lost track of {auxiliaryChangeInfoObjectID: %{public}@}
rem_log_fault_if(!data) -- ERROR XPC returned a mapOfData that has no data entry for {auxiliaryChangeInfoObjectID: %{public}@}
Failed to decode one of the change infos data for {changeObject: %@, objectID: %{public}@, decodeError: %{public}@}
Created new container for account ID %@
Created new default container
REMCalDAVNotification is designed to be immutable and does not do marked-for-deletion.
Adding snooze alarm: %@
Acknowledging original alarm: %@
Replacing alarm with acknowledged version: %@
Not replacing non-temporal alarm: %@
Removing non-original alarm: %@
Unable to remove temporary file because {error: %@}
Unable to create temporary directory because {error: %@}
Unable to write temporary file because {error: %@}
Unable to link temporary file because {error: %@}
Nil changedObjectID in persistentHistoryChange {change: %@}
Unexpected REMChangeType {type: %lu}
Unknown REMChangeType %ld
REMChangeSet applyFilterByTransactionAuthors: {self=%p, exclude=%d, authors=%{public}@}
transaction has no mapped accountID! {txn: %@}
Trying to populate flattened changes with a change that lost back pointer to its transaction %@.
chg.changedObjectID is nil! {chg: %@, txn: %@}
Unknown persistent history change type. {changeType: %lu}
rem_log_fault_if(!changedObjectID) -- Nil coalesced.changeObjectID {coalesced: %@}
rem_log_fault_if(!changedObjectID) -- Nil update change objectID {ups[0]: %@}
rem_log_fault_if(!ins) -- Nil change for insertedID {insertedID: %{public}@}
REMChangeSet _filterAndFlattenAndConsolidateChanges was successful. ChangeSet: %@
REMChangeSet _filterAndFlattenAndConsolidateChanges failed. ChangeSet: %@
rem_log_fault_if(!modelEntityName) -- Missing entityName for REMObjectIDProviding {klass: %{public}@}
Missing changeEntityName {change: %@}
Requested change tracking for unsupported class {klass: %{public}@}
REMChangeSet is in error or truncated. Returning nil token for account {accountID: %{public}@, error: %@, isTruncated: %{public}@, transactions: %@}
REMChangeset does not contain token for accountID (this is not an error). Returning nil {accountID: %{public}@, transactions: %@}
rem_log_fault_if(transactions.count != 0) -- Attempt to decode an error change set with non-empty transaction list. {error: %@, transaction: %@}
REMChangeSet initWithCoder: {self=%p}
Unknown REMReminderSortDescriptorType %ld
An REMRecurrenceEnd was created with an occurrence count of 0. %@
XPC error performing suggestedAttributesPerformer.preWarmModel {error: %{public}@}
REMSuggestedAttributesPerformer swiftInvocation
 enableTelemetry=YES Name=%{public, signpost.telemetry:string1, Name=InvocationName}s}d
INVOCATION START {name: %{public}@, parametersData.length %ld, storages.count: %ld}
INVOCATION END ERROR_XPC {name: %{public}@, error: %{public}@}
INVOCATION END {name: %{public}@, result.data.length: %ld, result.storages.count: %ld}
INVOCATION END ERROR {name: %{public}@, error: %@}
suggestedAttributesPerformer invalidated. Dropping cache
Cache-miss getting suggestedAttributesPerformer. Resolving.
Failed to get storePerformer for suggestedAttributesPerformer. {action: %@}
uncachedSuggestedAttributesPerfomer produced no result and no error
uncachedSuggestedAttributesPerfomer ERROR {error: %{public}@}
Request non-existent reminder {objectID: %@}
Failed to fetch reminders count of list {listID: %@}
Requested non-existent reminder {externalIdentifier: %@}
Request non-existent reminder {externalIdentifier: %@}
Request non-existent reminder {daCalendarItemUniqueIdentifier: %@}
REMDAChangeTrackingHelper: ERROR: Couldn't initialize REMDAChangeTrackingHelper without an account.
REMDAChangeTrackingHelper: ERROR: Couldn't initialize REMDAChangeTrackingHelper without an REM store {account: %{public}@}.
REMDAChangeTrackingHelper: ERROR: Couldn't initialize REMDAChangeTrackingHelper because we failed to obtain a change tracking API handle {account: %{public}@}.
REMDAChangeTrackingHelper: ERROR: Failed to get change tracking state with error {clientID: %{public}@, error: %@}
REMDAChangeTrackingHelper: ERROR: Failed to get current change token to initialize tracking state with error {clientID: %{public}@, error: %@}
REMDAChangeTrackingHelper: Initializing a change tracking state for {clientID: %{public}@, nowToken: %{public}@}
REMDAChangeTrackingHelper: ERROR: Failed to save an initialization of tracking state with error {clientID: %{public}@, error: %@}
REMDAChangeTrackingHelper: Found and fetched change tracking state for {clientID: %{public}@, lastSyncToken: %{public}@, lastSyncDate: %{public}@}
REMDAChangeTrackingHelper: Cannot get last consumed token when compareCurrentChangeTokenToLastConsumedWithError {clientID: %{public}@}
REMDAChangeTrackingHelper: Cannot get last current change token when compareCurrentChangeTokenToLastConsumedWithError {clientID: %{public}@}
REMDAChangeTrackingHelper: compareCurrentChangeTokenToLastConsumedWithError: comparing current token vs last consumed: {clientID: %{public}@, current: %{public}@, lastConsumed: %{public}@}
REMDAChangeTrackingHelper: Fails to compare current token with last consumed when compareCurrentChangeTokenToLastConsumedWithError {clientID: %{public}@}
REMDAChangeTrackingHelper: fetched history since {clientID: %{public}@, lastSyncToken: %{public}@, lastSyncDate: %{public}@, changeSet: %{public}@}
REMDAChangeTrackingHelper: ERROR: Fetched truncated or error change history {clientID: %{public}@, lastSyncToken: %{public}@, isTruncated: %{public}@, changeSet.error: %@}
REMDAChangeTrackingHelper: Will try to reset tracking state to current token because we had a truncated or error change-set {clientID: %{public}@, nowToken: %{public}@}
REMDAChangeTrackingHelper: fetchChangesSinceLastConsumed done {clientID: %{public}@, lastSyncToken: %{public}@, upToToken: %{public}@}
REMDAChangeTrackingHelper: Had problem getting change history for account "%{public}@"
REMDAChangeTrackingHelper: ERROR: Could not get a change tracking client to fetch history for {client: %{public}@, accountID: %{public}@}
REMDAChangeTrackingHelper: ERROR: Cannot get current token to mark to {clientID: %{public}@, account: %{public}@, error: %@}
REMDAChangeTrackingHelper: No newer change token in this history {token: %{public}@, clientID: %{public}@, account: %{public}@}
REMDAChangeTrackingHelper: ERROR: Unexpected change token {token: %{public}@, clientID: %{public}@, account: %{public}@, error: %@}
REMDAChangeTrackingHelper: No newer change token in this history {clientID: %{public}@, account: %{public}@}
REMDAChangeTrackingHelper: ERROR: Failed to save tracking state with error {tokenToSave: %{public}@, clientID: %{public}@, error: %@, account: %{public}@, forcedToCurrent: %d}
REMDAChangeTrackingHelper: markChangesConsumed done {tokenToSave: %{public}@, clientID: %{public}@, account: %{public}@, forcedToCurrent: %d}
REMDAChangeTrackingHelper: ERROR: We didn't get a change tracking client so we have no change set to enumerate from %{public}@.
REMDAChangeTrackingHelper: ERROR: Couldn't change tracking client ID to enumerate changed objects from %{public}@.
REMDAChangeTrackingHelper: ERROR: Couldn't get REM account objectID to enumerate changed objects from %{public}@ for %{public}@.
REMDAChangeTrackingHelper: Change set is nil and we have nothing to enumerate for %{public}@.
REMDAChangeTrackingHelper: Change set was truncated or had error and we are not going to enumerate it for %{public}@ {isTruncated: %{public}@, changeSet.error: %@}.
REMDAChangeTrackingHelper: Why does the just inserted object got a deletionKey? {objectID: %{public}@, deletionKey: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: (NOTICE)(May be legit) Had a (real-)deleted model object without a deletion key (e.g. external id) {objectID: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: Unexpectedly got a changed model object from a different account {modelObject: %{public}@, modelObject.account: %{public}@, daREMAccount: %{public}@, clientID: %{public}@, changeType: %lu}
REMDAChangeTrackingHelper: Could not find changed model object(s) in the ReminderKit with {clientID: %{public}@, changeType: %lu, missingIDs: %{public}@}
REMDAChangeTrackingHelper: ERROR: Failed to fetch changed model objects for account: {remAccount: %{public}@, clientID: %{public}@, changeType: %lu}
REMDAChangeTrackingHelper: (NOTICE)(Can be legit) Had a (marked-for-)deleted model object without an external identifier {objectID: %{public}@, modelObject: %{public}@, clientID: %{public}@}
REMDAChangeTrackingHelper: _fetchModelObjectOfClass:withObjectID:includeLazyDeleteObjects: Cannot proceed to fetch because the change objectID is nil {clientID: %{public}@, model: %{public}@}.
rem_log_fault_if(!remStore) -- REMDAChangeTrackingHelper: remStore is nil when trying to _fetchModelObjectOfClass:withObjectID:includeLazyDeleteObjects:
REMDAChangeTrackingHelper: _fetchModelObjectOfClass:withObjectID:includeLazyDeleteObjects: failed {clientID: %{public}@, error: %@}
rem_log_fault_if(!remStore) -- REMDAChangeTrackingHelper: remStore is nil when trying to _fetchModelObjectsOfClass:withObjectIDs:
REMDAChangeTrackingHelper: ERROR: Couldn't get a change tracking client from store for DataAccess from {account %{public}@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMList {objectID: %{public}@, includeLazyDeleteObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMList {objectIDs: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMReminder {objectID: %{public}@, includeLazyDeleteObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMReminder {objectIDs: %{public}@, error: %@}.
rem_log_fault_if(assignments.count > 1) -- REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: FAULT: Fetch returned more than 1 assignment with 1 object ID.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: LOOKATME Requested REMAssignment not found {objectID: %{public}@, includeLazyDeleteObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: LOOKATME Failed to fetch REMAssignment {objectID: %{public}@, includeLazyDeleteObjects: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: ERROR: Failed to fetch REMAssignment {objectIDs: %{public}@, error: %@}.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: LOOKATME: Given lazyDeletedObject is nil when trying to obtain delete key from it.
REMDAChangeTrackingHelper:_REMDAChangeTrackableModel: LOOKATME: Can't cast lazy-deleted object to REMAssignment {lazyDeletedObject: %@}.
Mismatched objectID type {objectID: %@, expected: %@}
No error object to produce REMErrorCodeMultipleErrors.
noSuchObject REMError has an invalid UUID string {errorUUIDString: %{public}@}
noSuchObject REMError has unexpected keys {error.userInfo: %{public}@}
Unknown REMAssignmentStatus %ld
Can't construct REMResolutionToken from invalid JSON {jsonObject: %@}
rem_log_fault_if([self.inProgressSaveRequests containsObject:saveRequest]) -- SaveRequest save already in progress {saveRequest: %@, inProgressSaveRequests: %@}
REMSaveRequest.isSaved MUST be TRUE
SaveRequest is not in progress. Ignoring. {saveRequest: %@, inProgressSaveRequests: %@}
Failed to get account for inProgressList. Returning nil {listObjectID: %@, accountID: %@}
Failed to get parentlist for inProgressList. Returning nil {listObjectID: %@, trackedListChangeItem.parentListID: %@
Failed to get list for inProgressReminder. Returning nil {reminderObjectID: %@, listID: %@}
Failed to get parent reminder for inProgressReminder. Returning nil {reminderObjectID: %@, parentReminderID: %@}
ReminderChangeItem missing both listID and parentReminderID. Returning nil {reminderObjectID: %@}
REMDatabaseMigrationAccountInfo cannot be initialized without an account type and an identifier.
Failed to create isolated store container for database migration {error: %{public}@}
Failed to destroy isolated store container for database migration {error: %{public}@}
Database Migration will begin
Migration Error {identifier: %{public}@, stage: %{public}@, error: %{public}@, error.debugDescription: %@}
_postMigrationLocalAccountCleanup: Trying to clean up local account after local migration
_postMigrationLocalAccountCleanup: Cannot fetch local account lists for post local migration cleanup {error: %{public}@}
_postMigrationLocalAccountCleanup: No lists or only one list is found. No cleanup is necessary
_postMigrationLocalAccountCleanup: Failed to reminders count of the default list for post local migration cleanup {error: %{public}@}
_postMigrationLocalAccountCleanup: Our default list isn't empty. Not going to remove it
_postMigrationLocalAccountCleanup: Removing empty default list because the local migration has copied some list(s) to the local account
_postMigrationLocalAccountCleanup: Failed to save account objects for local migration {error: %{public}@}
_postMigrationLocalAccountCleanup: Empty default list removed
_postMigrationLocalAccountCleanup: No local account is found for post local migration cleanup. This is unexpected {error: %{public}@}
Database Migration did finish {success: %d, duration: %.2f}
ensureAccountsExist: Finished calling [_cleanLocalDatabases]
ensureAccountsExist: There is no need to clean local database before we ensure accounts exist for local migration.
ensureAccountsExist: There's no input account info. There's nothing we need to do.
ensureAccountsExist: Local account is ignored {accountID: %{public}@, name: %@}
ensureAccountsExist: About to add account per request {accountID: %{public}@, name: %@, type: %ld}
ensureAccountsExist: Found unexpected existing account with external identifier we are about to use for creating new account {uuid: %{public}@}
ensureAccountsExist: Invalid UUID. Skip. {uuid: %{public}@}
ensureAccountsExist: CloudKit account type is not expected. {uuid: %{public}@}
ensureAccountsExist: About to save pending changes to our database
Failed to save account objects for local migration {error: %{public}@}
ensureAccountsExist: Decommissioned [REMDatabaseMigrationContext ensureAccountsExist:] called. Migration will not work.
ensureAccountsExist: Given account info #(%{public}@) does not contain an identifier: %@
ensureAccountsExist: Given account info #(%{public}@) does not contain an account type: %@
Failed to fetch existing accounts when trying to clear local database before we can create clean ones for local migration {error: %{public}@}
REMDatabaseMigrationContext found existing CalDAV account locally before migration, deleting store: {name: %@, id: %{public}@, externalIdentifier: %{public}@}
REMDatabaseMigrationContext found existing local account locally before migration, emptying content: {id: %{public}@}
_cleanLocalDatabases saving changes
Failed to remove existing accounts when trying to clear local database before we can create clean ones for local migration {error: %{public}@}
Unknown REMFetchRequestType %ld
isConsideredEmpty: Error fetching lists from local account {error: %@}.
isConsideredEmpty: Account thas more than 1 lists. Treating as non-empty.
isConsideredEmpty: Error fetching reminders from list in local account {listID: %@, error: %@}.
isConsideredEmpty: Account has no reminders. Treating as empty.
isConsideredEmpty: Account has reminders. Treating as non-empty.
isConsideredEmpty: Account has no lists. Treating as empty.
Performed XPC -MCIsManagedAccountWithObjectID: failed {account: %@, error: %@}
Performed XPC -MCIsManagedAccountWithObjectID: successful {account: %@, result: %@}
Invalid unknown account type, cannot convert to string {%@}.
Unknown account type, cannot convert to string {%@}.
rem_log_fault_if(!self.owner) -- Editting REMReplicaIDHelper without an owner {replicaIDHelper: %@}
Created new REMXPCDaemonController {self: %{public}@}
REMXPCDaemonController invalidate
Clearing cached performer due to proxy xpc error {name: %{public}@, error: %{public}@}
Returning existing performer {name: %{public}@, performer: %@}
Clearing cached performer due to resolve xpc error {name: %{public}@, error: %{public}@}
Returning existing performer {name: %{public}@, reason: %{public}@, performer: %@}
Cache-miss getting performer. Resolving async {name: %{public}@, reason: %{public}@}
xpc connection error getting resolver {name: %{public}@, error: %{public}@}
Resolve performer {name: %{public}@, performer: %@}
Error resolving performer {name: %{public}@, error: %{public}@}
Cache-miss getting performer. Resolving sync {name: %{public}@, reason: %{public}@}
Resolved performer {name: %{public}@, performer: %@}
XPC connection was interrupted
XPC connection was invalidated
Error decoding color {error: %@}
Error encoding color
Unknown REMColorRGBSpace %ld
REMUserDefaults created {suiteName: %@, container: %@}
REMUserDefaults created {standardUserDefaults: true}
REMUserDefaults created {suiteName: %@}
REMUserDefaults KVO change observed {userDefaultsKey: %@}
rem_log_fault_if(!sharedInstance) -- Failed to create REMAppleAccountUtilities shared instance
Trying to set didChooseToMigrate=%d didFinishMigration=%d on ACAccount (%@)
Actually setting didChooseToMigrate=%d didFinishMigration=%d on ACAccount (%@)
Error saving migration state to ACAccount: %@
Saved didChooseToMigrate=%d didFinishMigration=%d on ACAccount (%@)
Trying to unset didChooseToMigrate and didFinishMigration on ACAccount (%@)
XXXXXXXXX: Done unset didChooseToMigrate and didFinishMigration on ACAccount (%@)
Hourly recurrence is not supported by CalendarFoundation.
Unknown REMRecurrenceFrequency %ld
Unable to unarchive data to create REMContactRepresentation: %@
XPC error while fetching status reports {error: %@}
Error getting DataAccess status reports {error: %@}
xpc error while trying to carsh daemon {error: %@}
xpc error while using xpcPerformer {error: %{public}@}
Nil resolutionTokenMapData when reading resolutionTokenMap from smartlist storage. Initialize an empty map {smartlist: %@}
Unknown REMAccountSortDescriptorType %ld
Creating saveRequest in migration mode
Creating saveRequest in CalDAV-Sync mode
Creating saveRequest in EventKitSync mode
Creating saveRequest in AccountDataMoving mode
resolutionTokenMap should never be undefined
Save Request has no changed keys. Opted to return early as no-op. {author: %{public}@, saveIsNoopIfNoChangedKeys: %d}
LOOKATME: Save Request has no changed keys. Save will continue. Revisit if caller should avoid such saves. {author: %{public}@}
os_transaction INIT {name: com.apple.reminderkit.REMSaveRequest}
REMSaveRequest save async
os_transaction RELEASE {name: com.apple.reminderkit.REMSaveRequest}
REMSaveRequest save sync
RecurrenceClone: Error fetching parentsOfRecurrentSubtasks {error: %@}
RecurrenceClone: Advancing forward alarm of reminder with date {reminderID: %{public}@, date: %{public}@};
RecurrenceClone: Unable to advance forward date alarm for reminder with dueDate missing timezone {reminderID: %{public}@, dueDate: %{public}@}
RecurrenceClone: Advancing forward only earliest date alarm of reminder {reminderID: %{public}@, supportsMultipleDateAlarmsOnRecurrence: false, dateAlarms count:%lu}
RecurrenceClone: Adding new date alarm of reminder with dueDate {reminderID: %{public}@, dueDate: %{public}@}; failed to advance forward any previous date alarms
RecurrenceClone: New recurrence rules of reminder {reminderID: %{public}@, recurrenceRuleID: %{public}@, recurrenceRule: %{public}@};
RecurrenceClone: Keep old recurrence rule of reminder {reminderID: %{public}@, recurrenceRuleID: %{public}@, recurrenceRule: %{public}@};
RecurrenceClone: Unable to clone recurrent reminder with dueDateAdvanceAmount < 0 {reminderID: %{public}@, dueDateAdvanceAmount: %f}
_trackAccountCapabilities {SaveRequest: %@ accountCapabilities: %@ objectID: %@
_trackedAccountCapabilitiesForObjectID {SaveRequest: %@ objectID: %@
Don't have account capabilities for {objectID: %@}
Failed to create REMObjectID {url: %@}
REMObjectID: nil value passed to non-nil parameter. Something must have gone wrong. {uuid: %@, entityName: %@}
Failed to serialize provided reminderIDsMergeableOrdering. Using emptyArray {error: %@}
Serialized input reminderIDsMergeableOrdering into data when init REMListStorage. {objectID: %@}
rem_log_fault_if(_reminderIDsMergeableOrdering == nil && _reminderIDsMergeableOrderingData == nil) -- Attempted to decode REMListStorage with both _reminderIDsMergeableOrdering and _reminderIDsMergeableOrderingData missing {objectID: %{public}@, name: %{sensitive}@}
Attempted to decode REMListStorage missing objectID, name, reminderIDs {objectID: %{public}@, name: %{sensitive}@}
rem_log_fault_if(self.reminderIDsMergeableOrderingData == nil) -- Attempted to encode REMListStorage with both _reminderIDsMergeableOrdering and _reminderIDsMergeableOrderingData missing {%{public}@}
You are about to trigger decoding the reminderIDsMergeableordering. This is probably not what you want for performance to trigger it from -isEqual:, unless you are running Tests then it's fine {class: %{public}@, self-idsOrdering: %@, other-idsOrdering: %@}
Nil reminderIDsMergeableOrderingData when reading reminderIDsMergeableOrdering from list storage. Initialize an empty set {objectID: %{public}@}
REMListStorage reminderIDsMergeableOrdering deserialized {objectID: %{public}@, self: %p, orderedSet.count: %@}
Failed to read reminderIDsMergeableOrdering from data. Returning empty set {error: %@}
Nil resolutionTokenMapData when reading resolutionTokenMap from list storage. Initialize an empty map {list: %@}
Failed to serialize uuidStrings {error: %@, uuidStrings: %@}
Missing reminderIDsMergeableOrderingData. Returning nil {list: %@}
Failed to create uuid from string. Skipping objectID from list {uuidString: %@}
unexpected class for deserialized reminderIDsMergeableOrdering. Returning nil {class: %@}
Failed to deserialize reminderIDsMergeableOrdering data. Returning nil {error: %@, list: %@}
Unknown REMListSharingStatus %ld
Unknown REMReminderPredicateDescriptorType %ld
Unknown REMReminderPredicateDescriptorTextMatching %ld
rem_log_fault_if(self.storage.reminderIDsMergeableOrdering == nil) -- list.store.reminderIDsMergeableOrdering should not be nil {objectID: %{public}@}
hack_overrideReminderIDsOrderingWithOrderedObjectIDs: reminderIDsMergeableOrdering set {ids.count: %@}
rem_log_fault_if(![document isKindOfClass:[CRTTCompatibleDocument class]]) -- Unexpected class for deserialized document for REMCRReminderIDList {document: %@}
An unexpected list is passed to the undo block which does not match the originating list. Passed in: %@
rem_log_fault_if(![self.replicaIDSource.crdtID isEqualToString:anotherDocument.replicaIDSource.crdtID]) -- Documents with different CRDT IDs cannot be merged.
Failed to deserialize mergeable string document {objectID: %@, key: %@}: %@
NSFileManager failed to return our group container, falling back to bundle proxy
Failed to get group container URL for "%@"
%@ group container URL is not reachable. URL=%@
Error creating %@ group container: %@
Group container URL: %@
Cannot move reminders after a reminderID that does not exist in the smart list %@
Request non-existent account {objectID: %{public}@}
Request non-existent account {externalIdentifier: %@}
Request results with account without externalIdentifier {objectID: %@}
REMAccountsDataView -fetchAccountsWithExternalIdentifiers: More than 1 account found for the given external identifier {extID: %@, acctObjID1: %@, acctObjID2: %@}.
REMAccountsDataView -fetchAccountsWithExternalIdentifiers: fetched more accounts than the number of external identifiers {expected: %@, actual: %@}.
Unknown REMAccountsDataViewInvocation_fetchAll_purpose %ld
xpc error while using sync interface performer {error :%@}
Tried to initialize a nested group {listChangeItem: %@}
Trying to optimistically insert reminderID to the ordering of a REMListChangeItem for a REMReminderChangeItem tracked by the same REMSaveRequest {saveRequest: %@}
objectID of reminderChangeItem does not exist in its listChangeItem.reminderIDsMergeableOrdering {objectID: %@}
Unexpected index of objectID in reminderIDsMergeableOrdering {index: %ld}
Cannot move reminders across accounts {original: %@, accountID: %@, expectedAccountID: %@}
Cannot move reminder across lists for account {original: %@, accountID: %@}
Cannot move reminder across shared lists for account {original: %@, accountID: %@}
Tried to add a new subtask with a parent reminder but could not find the parent reminder in the list's reminder IDs ordering {listID: %@, reminderID: %@, parentReminderID: %@}.
Tried to remove reminder not present in ordering list {objectID: %@, ordering: %@}
rem_log_fault_if(accountChangeItem == nil) -- accountChangeItem is nil. Unable to update account when setting daDisplayOrder.
rem_log_fault_if(accountChangeItem == nil) -- accountChangeItem is nil. Unable to update account when setting daIsNotificationsCollection.
rem_log_fault_if(reminderChangeItem.listID == nil || ![reminderChangeItem.listID isEqual:self.objectID]) -- reminderChangeItem must have been assigned to this list change item at this point
Failed to find the insert after index of the given sibling reminder -- Appending to the end {objectID: %@}.
REMListChangeItem updated storage.reminderIDsMergeableOrdering {objectID: %@, saveReq: %@, ordering.count: %@}
Nested group is not supported {listID: %@, parentListID: %@}
Adding calDAVNotification {listChangeItem: %@, calDAVNotification: %@}
Removing calDAVNotification {listChangeItem: %@, calDAVNotification: %@}
Attempted to remove a calDAVNotification object that does not belong to this list {listChangeItem: %@, calDAVNotification: %@}
Removing all calDAVNotifications {listChangeItem: %@}
Updating calDAVNotification {listChangeItem: %@, calDAVNotification: %@}
Attempted to update a calDAVNotification object that does not belong to this list {listChangeItem: %@, calDAVNotification: %@}
Adding sharee {listChangeItem: %@, sharee: %@}
Removing sharee {listChangeItem: %@, recurrenceRule: %@}
Removing all sharee {listChangeItem: %@}
ListChangeItem (AccountDataMover): Copying from a source list which is a group, the case is not supported for now {sourceID: %@}.
Couldn't create ICSComponents for reminder %@
Failed to parse reminder.importedICSData to an ICS document {error: %@}.
Failed to obtain an NSTimeZone from reminder.timeZone when exporting due date components to ICS {timeZoneString: %@, reminderID: %@}.
Couldn't update the calendar item components of reminder.
rem_log_fault_if(REMIsInvalidICSAlarmDateComponents(remAlarmDateTrigger.dateComponents)) -- ReminderKit does not create nor import invalid alarm trigger date in alarms.
Unexpected type of REMAlarmTrigger (%@), unable to export to ICSAlarm.
AlarmUID was not set, generating one when exporting to ICS {remObjectID: %@}.
UpdateICSStructuredLocationFromREMStructuredLocation dropping mapkit handle because it exceeds the max length restriction on many servers.
Couldn't create an ICSRecurrence from REMRecurrenceRule %@ {reminderID: %@}
Setting ICS recurrence until date: untilDate=%@ remEndDate=%@)
Setting ICS byday days array: %@ %@
Encountered an unknown calendar frequency: %@
Encountered an unknown REMWeekday: %@
Found internal inconsistency between reminder.storage.timeZone vs reminder.storage.dueDateComponents.timeZone {dueDateComponents.timeZone: %@, storage.timeZone: %@}.
Found internal inconsistency between reminder.storage.allDay vs reminder.storage.dueDateComponents {dueDateComponents: %@}.
Error when archiving NSUserActivity. {userActivity: %@}
Error when archiving Siri Intent. {siriIntent: %@, error: %@}
Failed to serialize user activity {error: %@}
Error decoding REMUserActivity {error: %@}
Error encoding REMUserActivity
Timed out serializing user activity.
Error when unarchiving Siri Intent. {error: %@}
Unknown REMUserActivityType %ld
Unknown REMShareeStatus %ld
Unknown REMShareeAccessLevel %ld
Comparing two undefined resolution token is unexpected and should never happen {key: %{public}@, self.map.allKeys: %@, other.map.allKeys: %@}
Error encoding resolution token map {error: %@}
Error decoding resolution token map {error: %@}
Unexpected class to decode data to REMResolutionTokenMap. Returning nil {class: %@}
Failed to decode data to REMResolutionTokenMap. Returning nil {error: %@}
Request non-existent list {objectID: %@}
Request non-existent list {externalIdentifier: %@}
TTMergeableString document set to non-TT-compatible document.
TTMergeableString initialized with non-TT-compatible document.
rem_log_fault_if(self.document.sharedTopotextTimestamp != self.timestamp) -- Timestamp should be the same the as one in document.
Setting value for an existing key has no effect in a CRDictionary.
inflate failed returned %d
inflateEnd failed
Text clock is too low.
Style clock is too low.
Dumping merge: %p %@ %@ %@
Failed to merge strings: %@
Failed to merge strings.
No object at index %{public}lu
Cannot merge with object of type %{public}@.
TTMergeableStringSelection protobuf corrupt.
TTVersionedDocument is wrong versionedDocumentSerializationVersion %d != %d.
TTVersionedDocument gzipped protobuf corrupt.
Loading old version %d < %d
Loading current version %d
Loading future version %d > %d where min-supported %d
Should not attempt to load invalid version.
TTVersionedDocument did not load any compatible version.
Saving versioned document %d with %d future versions.
TTVectorMultiTimestamp protobuf corrupt.
TTVectorMultiTimestamp clock requires uuids.
TTVectorMultiTimestamp requires the same number of clocks as capacity %d != %ld.
TTParagraphStyle protobuf corrupt.
TTMergeableAttributedString cannot load attributes.
TTMergeableAttributedString attribute length is not equal to string length.
Incorrect number of color components for foreground color. Expected %d and got %d
Merging should not modify local replica clock: %ld => %ld
Version clock should equal cached replica clock: %ld => %ld
rem_log_fault_if(![self isEqual:other]) -- Cannot merge NSString with different value.
TTMergeableString protobuf corrupt.
Corrupt mergeable string, bad string data.
Corrupt mergeable string, substring missing component.
Corrupt mergeable string, uuid index > number of uuids - loading empty string.
Corrupt mergeable string, substring max > string max.
Corrupt mergeable string, child substring index > number of substrings.
Corrupt mergeable string, length of substrings != attributedString length.
Corrupt mergeable string, zeroed UUID timestamp.
Inserting element at invalid index %lu
Moving element at invalid index %lu
CRTombstoneOrderedSet cannot merge with object of type %{public}@.
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
REMDisplayNameUtils
REMRecurrenceDayOfWeek
NSCopying
NSSecureCoding
NSCoding
REMListSortDescriptor
REMAuxiliaryReminderChangeDeleteInfo
REMAuxiliaryReminderChangeInfo
REMAuxiliaryReminderChangeMoveInfo
REMClockElementList
REMReplicaEntry
0 0@
REMReplicaManager
REMReplicaManagerSerializedData
_REMDefaultReplicaManagerProvider
REMReplicaManagerProviding
NSObject
REMSaveRequestImporting
Importing
REMBundleLookupObject
REMXPCIndexingPerformer
REMXPCIndexingPerformerInterface
REMLog
REMSignpost
REMLogStore
REMChangeError
REMReminderChangeItem
REMConflictResolving
REMSaveRequestTrackedValue
REMExternalSyncMetadataWritableProviding
SiriFoundInApps
REMReminderSubtaskContextChangeItem
REMReminderAttachmentContextChangeItem
REMReminderFlaggedContextChangeItem
REMReminderAssignmentContextChangeItem
REMStore
CalDAVSharing
ChangeTrackingSupport
REMChangeTrackingProvider
ChangeTrackingProvider_IntegrationTestsOnlyAPIsSupport
iMessageInteractionSPI
EventKitBridging
SiriSearch
CalendarDataAccess
EventKitCompatibility
REMAssignment_ChangeTrackingInternalSupport
UserActivity
AccountManagement
_REMDACalDAVSyncReplicaManagerProvider
ReplicaManagerProviders
Debugging
REMStoreContainerToken
REMStoreSwiftInvocation
REMStoreSwiftInvocationResult
ReminderKitAdditions
REMAlarmTrigger
REMObjectIDProviding
REMNullableObjectIDProviding
REMAlarmTimeIntervalTrigger
REMAlarmDateTrigger
REMAlarmLocationTrigger
REMAlarmVehicleTrigger
REMAlarmContactTrigger
REMCRMergeableOrderedSet
REMMutableCRMergeableOrderedSet
REMReplicaIDHelperOwner
CRUndoDelegate
REMAccountStorage
REMRecurrenceRuleFormatter
REMAuxiliaryChangeInfoType
REMAuxiliaryChangeInfoObject
REMAuxiliaryChangeInfoFetchResult
REMChangeTrackingInternalAccess
REMListFetchExecutor
REMEnableObjectiveCpp
REMSaveRequestTrackedValueContainer
ReplicaClock
REMReplicaClockProviding
REMChangeTrackingState
reminddIntegrationTests_additions
REMChangedKeysObserver
REMReplicaIDSource
REMXPCSyncInterfacePerformer
REMXPCSyncInterfacePerformerInterface
REMAlarm
REMReminderStorage
REMChangeToken
_REMChangeUniversalToken
REMAccountChangeItem
REMAccountGroupContextChangeItem
REMListFetchMetadata
REMListPredicateDescriptor
REMReminderFetchExecutor
REMReminderFetchMetadata
REMReminderFetchMetadataDueDateCount
REMDisplayDate
REMSmartList
REMSortingStyleReadonlyProtocol
REMChangeTracking
REMAuxiliaryChangeInfoAdditions
_REMChangeTrackingClientID
REMChangeTrackingClientIdentifying
REMCloudContainer
REMCalDAVNotification
REMExternalSyncMetadataProviding
REMMutableCalDAVNotification
REMXPCChangeTrackingPerformer
REMXPCChangeTrackingPerformerInterface
Snooze
REMAttachment
REMFileAttachment
REMImageAttachment
REMURLAttachment
REMMigrationResult
_REMNSPersistentHistoryChangeStorage
REMNSPersistentHistoryChangeTombstone
REMNSPersistentHistoryChange
HexStringAdditions
REMChangeTransaction
REMFetchResultToken
REMChangeSet
REMReminderSortDescriptor
REMChangeTombstone
REMChangeObject
REMChangeCoalesceable
REMRecurrenceEnd
REMAccountCapabilities
CRDT_REMAdditions_Subset
NSXPCProxyCreating
REMSuggestedAttributesPerformer
REMRemindersDataView
REMRemindersDataViewInvocation_fetchByParentReminderID
REMRemindersDataViewInvocation_fetchByListID
REMRemindersDataViewInvocation_fetchByObjectID
REMRemindersDataViewInvocation_fetchByPredicateDescriptor
REMRemindersDataViewInvocation_fetchByParentReminderIDs
REMRemindersDataViewInvocation_fetchByExternalIdentifier
REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier
REMRemindersDataViewInvocation_fetchRemindersCountByListID
REMRemindersDataViewInvocationResult
REMAssignmentsDataViewInvocation_fetchByObjectID
REMAssignmentsDataViewInvocationResult
REMSmartListsDataView
REMSmartListsDataViewInvocation_fetchSmartList
REMSmartListsDataViewInvocationResult
REMDAChangeTrackingHelper
UnitTests
REMDAChangeTrackingHelper_Additions
REMDAChangeTrackableFetchableModel
REMDAChangeTrackableModel
REMDAChangedModelObjectResult
REMDAChangedIdentifierResult
REMDAChangeTrackingHelper_PrivateAdditions
_REMDAChangeTrackableModel
REMDAShareeTombstone
REMDAAssignmentTombstone
REMEventKitBridgingDataView
REMEventKitBridgingDataViewInvocation_fetchLists
REMEventKitBridgingDataViewInvocation_fetchReminders
REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate
REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate
REMError
REMAssignment
CDIngestorExtensions
REMResolutionToken
REMSmartListOrder
_REMInProgressSaveRequestsContainer
REMDatabaseMigrationAccountInfo
REMDatabaseMigrationContext
REMFetchResult
REMAccount
REMAccountGroupContext
REMReplicaIDHelper
REMReplicaManagerClient
REMHumanReadableIdentifier
REMDistributedEvaluationCollectionOptions
REMReminderFetchOptions
REMXPCDaemonController
REMDaemonController
REMXPCDaemonControllerPerformerResolver
REMXPCDaemonControllerPerformerResolver_store
REMXPCDaemonControllerPerformerResolver_debug
REMXPCDaemonControllerPerformerResolver_changeTracking
REMXPCDaemonControllerPerformerResolver_sync
REMXPCDaemonControllerPerformerResolver_indexing
REMXPCDaemonControllerExportedObject
REMXPCClient
REMStructuredLocation
REMFetchMetadata
REMColor
REMUserDefaults
REMDaemonUserDefaults
REMUserDefaultsObserver
REMUserDefaultsObserveToken
REMXPCStorePerformer
REMXPCStorePerformerInterface
REMAppleAccountUtilities
_REMNSPersistentHistoryTransactionStorage
REMNSPersistentHistoryTransaction
CRDT_Additions
REMCRMergeableDataType
CRDataType
CREquatable
CRCoding
REMRecurrenceRule
REMXPCDaemon
REMXPCDaemonInterface
REMXPCClientInterface
REMNSPersistentHistoryToken
REMSystemUtilities
REMXPCDebugPerformer
REMXPCDebugPerformerInterface
REMXPCSuggestedAttributesPerformer
REMXPCSuggestedAttributesPerformerInterface
REMContactRepresentation
Base64
REMDataAccessBehaviorManager
REMSmartListStorage
REMSortingStyleReadWriteProtocol
REMAccountSortDescriptor
REMSaveRequest
REMObjectID
REMFetchRequest
_REMFetchExecutor
REMListStorage
REMReminderPredicateDescriptor
REMXPCStorageClasses
REMSiriSearchLimitedDataView
REMSiriSearchLimitedDataViewInvocation_fetchReminders
REMList
REMListAppearanceContext
REMListSublistContext
REMListCalDAVNotificationContext
REMListShareeContext
REMCRReminderIDList
REMCRMergeableStringDocument
REMMutableCRMergeableStringDocument
DataConversion
REMDispatchQueue
REMPaths
REMDisplayDateUtils
REMSmartListChangeItem
REMAccountsDataView
REMAccountsDataViewInvocation_fetchAll
REMAccountsDataViewInvocationResult
REMAccountsDataViewInvocation_fetchByObjectID
REMAccountsDataViewInvocation_fetchByExternalIdentifier
REMStoreInvocationValueStorage
REMStoreInvocation
REMStoreInvocationResult
REMListBadge
REMSyncInterface
REMListChangeItem
REMListAppearanceContextChangeItem
REMListSublistContextChangeItem
REMListCalDAVNotificationContextChangeItem
REMListShareeContextChangeItem
AccountDataMoving
REMExporting
ICSExport
REMReminder
REMReminderSubtaskContext
REMReminderAttachmentContext
REMReminderFlaggedContext
REMReminderAssignmentContext
REMCRUndo
REMMutableCRUndo
REMUserActivity
REMSharee
REMShareeNameCleanup
REMResolutionTokenMap
REMExternalSyncMetadataUtils
REMListsDataView
REMListsDataViewInvocation_fetchListsInAccount
REMListsDataViewInvocation_fetchListsInGroup
REMListsDataViewInvocation_fetchByObjectIDs
REMListsDataViewInvocation_fetchDefaultList
REMListsDataViewInvocation_fetchUserSelectableDefaultLists
REMListsDataViewInvocation_dataAccessFetchListsInAccount
REMListsDataViewInvocation_dataAccessFetchByObjectID
REMListsDataViewInvocation_dataAccessFetchByObjectIDIncludingMarkedForDelete
REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier
REMListsDataViewInvocation_userActivityFetchByExternalIdentifier
REMListsDataViewInvocation_debugFetchPhantomLists
REMListsDataViewInvocationResult
REMCDChangeTrackingState
CoreDataProperties
CRCoderArchiver
CRDictionaryElement
CRDictionary
NSFastEnumeration
TTVectorTimestampElement
TTVectorTimestamp
TTVectorMultiTimestamp
Gzip
TTMergeableString
TTArray
TTMergeableStringDelegate
TTMergeableStringSelection
TTMergeableStringIDTracker
TTVersionedDocument
TTVectorTimestampPersistenceAdditions
TTParagraphStylePersistenceAdditions
TTMergeableStringUndoGroup
TTMergeableStringUndoCommand
CRTTCompatibleDocument
TTAttributedStringPersistenceAdditions
CRArray
CRCoderUnarchiverCompletionHandler
CRCoderUnarchiver
CRSet
CRRegisterLatest
CRRegisterMultiValue
CRRegisterMultiValueLeast
RemindersAdditions
TTParagraphStyle
NSMutableCopying
TTModelAttributeComparable
TTMutableParagraphStyle
CRRegisterGreatest
CRRegisterLeast
TTMergeableStringUndoAttributeCommand
PersistenceAdditions
TTMergeableAttributedString
CRObject
CRIdentifiable
TTFont
CRDocument
TTMergeableStringVersionedDocument
CRFramework
CRRegister
CRReplica
TTMergeableStringPersistenceAdditions
CRTimestamp
CRVectorTimestampElement
CRVectorTimestamp
CRCoder
CppConvenience
TTMergeableUndoString
CRTombstoneOrderedSet
TTMergeableStringUndoEditCommand
TTCRVectorTimestamp
TTCRVectorMultiTimestamp
ICProtobufUtilities
CRConstant
NSUUIDAdditions
length
isEqualToString:
lowercaseString
displayNameFromListName:isPlaceholder:
displayNameFromAccountName:
initWithDayOfTheWeek:weekNumber:
raise:format:
init
decodeIntegerForKey:
dayOfTheWeek
encodeInteger:forKey:
weekNumber
iCalendarValueFromDayOfTheWeek:
stringWithFormat:
iCalendarDescription
dayOfWeek:
dayOfWeek:weekNumber:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
description
hash
isEqual:
_dayOfTheWeek
_weekNumber
initWithType:ascending:
decodeBoolForKey:
type
ascending
encodeBool:forKey:
sortDescriptorSortingByNameAscending:
sortDescriptorSortingByOrderingInAccountAscending:
_ascending
_type
cdEntityName
reminderIdentifier
oldListIdentifier
oldExternalIdentifier
copy
count
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
clock
setClock:
subclock
setSubclock:
addObject:
initWithCRVectorTimestampElements:
elements
objectAtIndexedSubscript:
rem_compareToVectorTimestampElement:
list:isCompatibleToList:
compareList:toList:
firstObject
componentsJoinedByString:
initWithTTVectorTimestampElements:
encodeIntoEntryArchive:
initWithEntryArchive:
setElements:
.cxx_destruct
_elements
replicaUUIDIndex
clockElementList
initWithReplicaUUIDIndex:clockElementList:inUse:forClient:
inUse
persistenceDescription
hasEqualPersistedPropertiesAs:
setReplicaUUIDIndex:
setClockElementList:
setInUse:
client
setClient:
_inUse
_replicaUUIDIndex
_clockElementList
_client
uuid
objectForKeyedSubscript:
disablesInMemoryOnlyCheck
shouldUseNewInMemoryOnlyReplicaManager
setIsPersistable:
fetchReplicaManagerForAccountID:error:
managerData
replicaManagerWithSerializedData:error:
dictionary
setObject:forKeyedSubscript:
mainBundle
bundleIdentifier
commonInit
orderedSet
orderedSetWithCapacity:
initWithUUIDBytes:
dictionaryWithCapacity:
initWithBytes:length:encoding:
internalErrorWithDebugDescription:
array
numberWithUnsignedInt:
replicaUUIDs
getUUIDBytes:
replicaEntries
UTF8String
lengthOfBytesUsingEncoding:
l_checkoutReplicaUUIDForClient:
performLocked:
crdtID
objectForKey:
setObject:forKey:
objectAtIndex:
indexOfObjectPassingTest:
indexOfObject:
clockElementListForReplicaUUID:
UUID
currentVersion
setCurrentVersion:
replicaUUID
l_updateVersionOfEntry:forClient:
modifyReplicaEntryForClient:block:
l_replicaUUIDsDescription
l_replicaEntriesDescriptionForPersistence:
maxLastSavedVersion
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
isPersistable
hasUnsavedChanges
isRepresentingDiscardedReplicaManager
bytes
initWithArchive:error:
version
setMaxLastSavedVersion:
encodeIntoArchive:
initWithLength:
mutableBytes
initWithManagerData:version:
exceededMaxSerializedSize
serializedDataRepresentingDiscardedReplicaManager
l_serializedDataWithError:
setExceededMaxSerializedSize:
numberWithBool:
numberWithUnsignedLongLong:
UUIDString
arrayWithObject:
replicaManagerForAccountID:store:
unsavedReplicaManagersForAccountIDs:
setDisablesInMemoryOnlyCheck:
replicaManagerIfLoadedForAccountID:
setReplicaManager:forAccountID:
checkoutReplicaUUIDForClient:
updateVersionForClient:
returnReplicaForClient:
serializedDataCappedAtMaxSize:error:
didSaveVersion:
replicaEntryCount
availabilityOfFirstReplicaForCRDTID:
clockOfFirstReplicaForCRDTID:
hasEqualPersistedEntriesAs:
addRandomReplicaEntriesWithCount:
ivarLock
setIvarLock:
setReplicaUUIDs:
setReplicaEntries:
_isPersistable
_exceededMaxSerializedSize
_ivarLock
_replicaUUIDs
_replicaEntries
_currentVersion
_maxLastSavedVersion
encodeObject:forKey:
encodeInt64:forKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
data
_managerData
_version
store
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
replicaManagerForAccountID:
initWithStore:
_store
crdt
summary
rem_nonNilSummary
objectID
initWithData:options:error:
saveRequest
updateLastModifiedDates
setUpdateLastModifiedDates:
cloneCompletedRecurrentRemindersAtSave
setCloneCompletedRecurrentRemindersAtSave:
calendar
componentKeys
componentForKey:
addReminderWithTitle:toListChangeItem:
_populateReminderChangeItem:withICSTodoItem:icsCalendar:isNew:withOptions:
_iCalendarDataFromICSTodoItem:icsCalendar:
setImportedICSData:
updateReminderChangeItem:fromICSTodo:icsCalendar:isNew:withOptions:
recurrence_id
rem_dateWithICSCalendar:
timeIntervalSinceReferenceDate
setDaCalendarItemUniqueIdentifier:
componentsSeparatedByString:
x_calendarserver_access
setX_calendarserver_access:
arrayWithObjects:count:
setComponents:options:
setTitleAsString:
setNotesAsString:
last_modified
dtstamp
rem_dateAsUTC
setLastModifiedDate:
created
setCreationDate:
priority
setPriority:
icsDueOrEndDateWithICSCalendarItem:options:
components
setDueDateComponents:
systemTimeZoneForDate:
dueDateComponents
setTimeZone:
updateUIDInReminderChangeItem:fromICSComponent:icsCalendar:
setIcsUrl:
_populateAlarmsInReminderChangeItem:withICSAlarms:icsCalendar:
_populateRecurrencesInReminderChangeItem:withICSComponent:icsCalendar:
completed
percentComplete
status
date
setCompleted:
setCompletionDate:
x_apple_activity
value
initWithUniversalLink:
setUserActivity:
x_apple_appLinkData
initWithUserActivityData:
x_apple_sort_order
setIcsDisplayOrder:
listChangeItem
setRemindersICSDisplayOrderChanged:
valueForKey:
unsignedIntegerValue
dtend
removeAllAlarms
action
trigger
isDurationBased
_addAlarmsToReminderChangeItem:withICSAlarm:icsCalendar:
x_wr_alarmuid
makeUID
timeInterval
initWithTimeInterval:
addAlarmWithTrigger:
setAlarmUID:
initWithValue:
initWithDateComponents:
x_apple_proximity
x_apple_structured_location
location
initWithStructuredLocation:proximity:
initWithEvent:
acknowledged
setAcknowledgedDate:
relatedTo
setOriginalAlarmUID:
removeAllRecurrenceRules
rrule
accountID
addRecurrenceRule:
importRemindersFromICSData:insertIntoListChangeItem:error:
updateReminderChangeItem:fromICSData:isNew:withOptions:error:
write
title
initWithTitle:
scheme
absoluteString
substringFromIndex:
rangeOfString:
substringToIndex:
doubleValue
setLatitude:
setLongitude:
parameterValueForName:
setRadius:
address
setAddress:
routing
setRouting:
setReferenceFrameString:
setContactLabel:
mapKitHandle
setMapKitHandle:
freq
interval
integerValue
wkst
until
dateByAddingTimeInterval:
recurrenceEndWithEndDate:
recurrenceEndWithOccurrenceCount:
byday
weekday
number
newObjectID
bymonthday
bymonth
byweekno
byyearday
bysetpos
initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
initWithCalendar:
ICSDataWithOptions:
localizedStringForKey:value:table:
bundleForClass:
testIndexDummyItemWithCompletion:
reindexAllSearchableItemsWithAcknowledgementHandler:
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
deleteAllSearchableItemsWithCompletionHandler:
interfaceWithProtocol:
interface
changeTracking
editor
alarmEngine
accountPlugin
utility
suggestedAttributes
cloudkit
cloudkitCollaboration
migration
dataAccess
userAction
siriKit
applicationShortcut
notification
search
account
analytics
scripting
database
sync
container
read
OVERSIZED
_defaultDescriptionForREMChangeErrorCode:
errorWithREMChangeErrorCode:description:underlyingError:
numberWithInteger:
initWithDomain:code:userInfo:
errorWithREMChangeErrorCode:
errorWithREMChangeErrorCode:underlyingError:
setWithArray:
_trackAccountCapabilities:forObjectID:
initWithTarget:keysToObserve:includeInitial:
initWithSaveRequest:storage:accountCapabilities:changedKeysObserver:
initWithObjectID:listID:accountID:
titleReplicaIDSource
initWithReplicaIDSource:string:
setTitleDocument:
lowLevelAddReminderIDToOrdering:withParentReminderChangeItem:
accountCapabilities
initWithSaveRequest:storage:accountCapabilities:observeInitialValues:
reminderChangeItem
listID
setParentReminderID:
_updateListWithReminderChangeItem:
copyInto:
_trackedAccountCapabilitiesForObjectID:
storage
datesDebugDescriptionInTimeZone:
titleAsString
insertsCompletedRecurrentCloneAtTail
parentReminderID
_trackedReminderChangeItemForObjectID:
subtaskContext
addReminderWithTitle:toReminderSubtaskContextChangeItem:reminderObjectID:
insertReminderChangeItem:beforeReminderChangeItem:
addReminderWithTitle:toListChangeItem:reminderObjectID:
insertReminderChangeItem:adjacentToReminderChangeItem:isAfter:withParentReminderChangeItem:
assignmentContext
currentAssignment
assigneeID
originatorID
addAssignmentWithAssigneeID:originatorID:status:
assignedDate
setAssignedDate:
setTitle:
notes
setNotes:
creationDate
lastModifiedDate
isCompleted
completionDate
startDateComponents
setStartDateComponents:
lastBannerPresentationDate
setLastBannerPresentationDate:
userActivity
icsUrl
recurrenceRules
initWithRecurrenceRule:objectID:accountID:reminderID:
_copyAlarmsInto:
attachmentContext
removeAllAttachments
attachments
initWithAttachment:objectID:accountID:reminderID:
addAttachment:
flaggedContext
flagged
setFlagged:
removeAllAssignments
alarms
initWithCapacity:
initWithAlarm:objectID:
alarmUID
originalAlarmUID
setAlarms:
dateComponents
rem_stringRepresentation
containsObject:
numberWithDouble:
changedKeysObserver
_trackedListChangeItemForObjectID:
titleDocument
attributedString
string
isEqualToAttributedString:
mutableDocument
initWithReplicaIDSource:
replicaManagerProvider
setReplicaManagerProvider:
wipeAndReplaceWithString:
_editDocument:replicaIDSource:newString:
keyDidChange:
initWithString:
notesDocument
notesReplicaIDSource
setNotesDocument:
rem_gregorianEquivalent
updateDisplayDate
rem_isAllDayDateComponents
setAllDay:
timeZone
name
defaultTimeZone
removeAllSnoozeAlarms
isTemporal
removeAlarm:updateDisplayDate:
icsDisplayOrder
initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:end:
addRecurrenceRuleWithFrequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
insertRecurrenceRule:afterRecurrenceRule:
mutableCopy
insertObject:atIndex:
setRecurrenceRules:
removeObject:
rem_dateWithDateComponents:timeZone:
laterDate:
nextRecurrentDueDateAfter:dueDate:timeZone:allDay:recurrenceRules:
timeIntervalSinceDate:
rem_dateComponentsWithDate:timeZone:isAllDay:
rem_strippingTimeZone
initWithTrigger:
addAlarm:
addAlarm:updateDisplayDate:
supportsSubtasks
isSubtask
initWithReminderChangeItem:
supportsAttachments
supportsFlagged
supportsAssignments
lowLevelRemoveReminderIDFromOrdering:
setListID:
removeFromListAllowingUndo
willChangeValueForKey:
didChangeValueForKey:
removeFromParentReminderAllowingUndo
changedKeys
isSaved
setValue:forKey:
initialize
_deduplicateAlarms:
resolutionTokenKeyForChangedKey:
resolutionTokenMap
setResolutionTokenMap:
resolutionTokenMapData
setResolutionTokenMapData:
shallowCopyWithSaveRequest:
externalIdentifier
setExternalIdentifier:
externalModificationTag
setExternalModificationTag:
daSyncToken
setDaSyncToken:
daPushKey
setDaPushKey:
initWithObjectID:title:insertIntoListChangeItem:
initWithObjectID:title:insertIntoParentReminderSubtaskContextChangeItem:
initWithReminderChangeItem:insertIntoListChangeItem:
initWithReminderChangeItem:insertIntoParentReminderSubtaskContextChangeItem:
duplicateForRecurrenceUsingReminderID:
notesAsString
setDueDateComponentsWithAlarmsIfNeeded:
addRecurrenceRuleWithFrequency:interval:end:
addRecurrenceRuleWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
insertRecurrenceRule:beforeRecurrenceRule:
removeRecurrenceRule:
nextRecurrentAdvanceAmountForDateComponents:afterDate:
nextRecurrentDueDateComponentsAfter:
removeAlarm:
removeFromList
updateAccountCapabilities:
removeFromParentReminder
forwardingTargetForSelector:
valueForUndefinedKey:
setValue:forUndefinedKey:
setStorage:
setChangedKeysObserver:
_saveRequest
_storage
_changedKeysObserver
setSiriFoundInAppsUserConfirmation:
confirmForSiriFoundInAppsAppendingToList:
rejectForSiriFoundInApps
_listChangeItem
undeleteReminderWithID:usingUndo:
subtaskIDsToUndelete
setByAddingObject:
setSubtaskIDsToUndelete:
addReminderChangeItem:
insertReminderChangeItem:afterReminderChangeItem:
undeleteSubtaskWithID:usingUndo:
setReminderChangeItem:
_reminderChangeItem
predicateWithBlock:
filteredArrayUsingPredicate:
attachmentsOfClass:
resourceValuesForKeys:error:
unsignedLongLongValue
initWithObjectID:accountID:reminderID:UTI:fileSize:fileURL:data:
insertAttachment:afterAttachment:
initWithObjectID:accountID:reminderID:UTI:fileSize:fileURL:data:width:height:
removeURLAttachments
addURLAttachmentWithURL:
initWithObjectID:accountID:reminderID:url:metadata:
removeAllAttachmentsWithClass:
setAttachments:
removeObjectAtIndex:
filterUsingPredicate:
fileAttachments
imageAttachments
urlAttachments
addFileAttachmentWithURL:error:
addFileAttachmentWithData:uti:
addImageAttachmentWithURL:width:height:error:
addImageAttachmentWithData:uti:width:height:
setURLAttachmentWithURL:
insertAttachment:beforeAttachment:
removeAttachment:
mutableAttachments
setMutableAttachments:
_mutableAttachments
assignments
orderValue
setAssignments:
initWithObjectID:accountID:reminderID:assigneeID:originatorID:status:
addAssignment:
addAssignmentWithAssignee:originator:status:
removeAssignment:
mutableAssignments
setMutableAssignments:
_mutableAssignments
storeQueue
defaultCenter
postNotificationName:object:
weakSharedInstance
syncDebugPerformerWithReason:errorHandler:
createIsolatedStoreContainerWithCompletion:
destroyIsolatedStoreContainerWithToken:completion:
initWithStoreContainerToken:
initWithDaemonController:storeContainerToken:
userInteractiveDaemonController
storeContainerToken
storeGeneration
l_inProgressSaveRequestsContainer
daemonController
invalidate
setDaemonController:
nukeDatabase:
fetchAllAccountsWithError:
fetchAllAccountsForAccountManagementWithError:
fetchAccountsWithError:
fetchAllAccountsForDumpingWithError:
siriFoundInAppsListID
fetchListWithObjectID:error:
latestSaveInProgressAccount:
_withInProgressSaveRequestContainer:
latestSaveInProgressList:
latestSaveInProgressReminder:
latestSaveInProgressReminderForReminderChangeItem:
fetchAccountWithObjectID:error:
fetchAccountsWithObjectIDs:error:
fetchListsWithObjectIDs:error:
fetchSmartListWithSmartListTag:createIfNeeded:error:
fetchSmartListWithSmartListTag:reminderIDs:createIfNeeded:error:
initWithUUIDString:
objectIDWithUUID:
initWithObjectID:smartListTag:
setOrdering:
initWithStore:storage:
fetchRemindersWithObjectIDs:error:
fetchRemindersMatchingPredicateDescriptor:sortDescriptors:options:error:
fetchRemindersWithParentReminderIDs:error:
fetchReminderWithObjectID:error:
_xpcSyncStorePerformerWithReason:errorHandler:
fetchReplicaManagerForAccountID:completion:
fetchReplicaManagersForAccountID:bundleID:completion:
_incrementStoreGeneration
saveRequestSaveDidStart:
syncToCloudKit
_saveAccountChangeItems:listChangeItems:smartListChangeItems:reminderChangeItems:author:replicaManagerProvider:synchronously:syncToCloudKit:performer:completion:
saveRequestSaveDidFinish:
asyncStorePerformerWithReason:loadHandler:errorHandler:
fetchResultByExecutingFetchRequest:error:
fetchExecutor
resultsFromFetchResult:inStore:error:
executeFetchRequest:error:
remObjectID
executeFetchRequest:completion:
assertOnMainThreadFetches
_isUserInteractiveStore
cStringUsingEncoding:
performInvocation:completion:
resultData
resultStorages
performSwiftInvocation:withParametersData:storages:completion:
fetchRemindersWithError:
localizedDescription
enumerateAllListsWithBlock:
_enumerateAllListsIncludingGroups:withBlock:
fetchListsWithError:
isGroup
sublistContext
syncStorePerformerWithReason:errorHandler:
ordering
mode
saveAccountStorages:listStorages:smartListStorages:reminderStorages:changedKeys:replicaManagers:author:mode:synchronously:syncToCloudKit:completion:
fetchShareForObjectWithID:completion:
createShareForObjectWithID:completion:
updateShare:completion:
stopShare:completion:
acceptShareWithMetadata:completion:
daemonUserDefaults
siriShouldRouteIntentsToNewRemindersApp
compressedDistributedEvaluationDataWithOptions:completion:
fetchEligibleDefaultListsWithError:
fetchDefaultListWithError:
nonUserInteractiveStore
storeDidChangeNotificationName
createIsolatedStoreContainerWithError:
destroyIsolatedStoreContainerWithToken:error:
initUserInteractive:
initWithDaemonController:
nukeDatabase
fetchAccountsIncludingInactive:error:
fetchAccountsForDumpingWithError:
fetchSiriFoundInAppsListWithError:
refreshAccount:
refreshList:
refreshReminder:
optimisticallyMaterializeReminderChangeItem:
smartListWithSmartListTag:objectID:ordering:error:
fetchReplicaManagersForAccountID:bundleID:error:
saveSaveRequest:accountChangeItems:listChangeItems:smartListChangeItems:reminderChangeItems:author:replicaManagerProvider:error:
saveSaveRequest:accountChangeItems:listChangeItems:smartListChangeItems:reminderChangeItems:author:replicaManagerProvider:queue:completion:
resultsIndexedByObjectIDFromExecutingFetchRequest:error:
countForFetchRequest:error:
resultFromPerformingInvocation:error:
resultFromPerformingSwiftInvocation:parametersData:storages:error:
enumerateAllRemindersWithBlock:
enumerateAllGroupsAndListsWithBlock:
fetchShareForListWithID:error:
createShareForListWithID:error:
updateShare:queue:completion:
stopShare:queue:completion:
acceptShareWithMetadata:queue:completion:
everConnectedToCar
compressedDistributedEvaluationDataWithOptions:error:
fetchDefaultAccountWithError:
lock
setMode:
setAssertOnMainThreadFetches:
setNonUserInteractiveStore:
_assertOnMainThreadFetches
_lock
_storeContainerToken
_l_inProgressSaveRequestsContainer
_daemonController
_mode
_nonUserInteractiveStore
_respondToCalDAVSharedList:withResponse:queue:completion:
sharingStatus
invalidParameterErrorWithDescription:
acceptCalDAVShareWithCalendarURL:acAccountID:completion:
rejectCalDAVShareWithCalendarURL:acAccountID:completion:
acceptCalDAVSharedList:queue:completion:
rejectCalDAVSharedList:queue:completion:
provideChangeTrackingForAccountID:clientName:transactionAuthorKeysToExclude:
initWithClientName:accountIdentifier:
initWithClientID:daemonController:transactionAuthorKeysToExclude:
initWithClientID:daemonController:
provideChangeTrackingForAccountID:clientName:
provideAnonymousChangeTrackingWithTransactionAuthorKeysToExclude:
notifyOfInteractionWithPeople:force:completion:
_shouldNotifyReminddOfInteractionWithPeople
notifyOfInteractionWithPeople:completion:
notifyOfInteractionWithPeople:
fetchRemindersWithListIDs:error:
fetchIncompleteRemindersWithDueDateFrom:to:withListIDs:error:
fetchCompletedRemindersWithCompletionDateFrom:to:withListIDs:error:
fetchAllRemindersWithExternalIdentifier:error:
fetchListsForEventKitBridgingWithError:
fetchRemindersForEventKitBridgingWithListIDs:error:
fetchIncompleteRemindersForEventKitBridgingWithDueDateFrom:to:withListIDs:error:
fetchCompletedRemindersForEventKitBridgingWithCompletionDateFrom:to:withListIDs:error:
fetchRemindersMatchingTitle:dueAfter:dueBefore:isCompleted:hasLocation:location:error:
fetchAccountWithExternalIdentifier:error:
fetchAccountsWithExternalIdentifiers:error:
fetchListsIncludingSpecialContainersInAccount:error:
fetchListIncludingMarkedForDeleteWithObjectID:error:
fetchListIncludingSpecialContainerWithObjectID:error:
fetchReminderIncludingMarkedForDeleteWithObjectID:error:
fetchReminderWithExternalIdentifier:inList:error:
fetchReminderWithExternalIdentifier:error:
fetchRemindersWithExternalIdentifiers:inList:error:
fetchRemindersWithExternalIdentifiers:error:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
MCIsManagedAccountWithObjectID:completion:
newAppShouldTakeoverEKReminderNotifications
dataaccessDaemonStopSyncingReminders
MCIsManagedAccountWithObjectID:error:
notificationsEnabled
isEventKitSyncEnabledForReminderKit
initWithObjectIDs:
setShowLazyDeleteObjects:
fetchAssignmentsWithObjectIDs:includeLazyDeleteObjects:error:
fetchAllListsWithExternalIdentifier:inAccount:error:
fetchAllListsWithExternalIdentifier:error:
domain
code
_triggerSyncWithReason:forcingCloudKitReload:discretionary:completion:
syncDataAccessAccountsWithAccountIDs:bypassThrottler:completion:
asyncSyncInterfacePerformerWithReason:loadHandler:errorHandler:
updateAccountsAndFetchMigrationState:completion:
updateAccountWithAccountID:restartDA:completion:
updateAccountWithACAccountID:restartDA:completion:
removeOrphanedAccountWithCompletion:
restartCloudKitSyncWithReason:completion:
syncCloudKitWithReason:discretionary:completion:
requestToMergeLocalDataIntoSyncDataWithAccountIdentifier:completion:
requestToDeleteSyncDataWithAccountIdentifier:completion:
requestToDeleteLocalDataWithCompletion:
triggerThrottledSyncWithReason:discretionary:WithCompletion:
triggerSyncForDataAccessAccountsWithAccountIDs:
updateAccountsAndSync:completion:
updateAccountWithAccountID:completion:
deleteAccountWithAccountID:completion:
removeOrphanedAccountsWithCompletion:
replicaManagerForAccountID:withStore:
setStore:
replicaManagerProviderForCalDAVSync
debugFetchPhantomListsWithError:
identifier
initWithIdentifier:
_identifier
initWithFetchResultTokenToDiffAgainst:
fetchResultTokenToDiffAgainst
_fetchResultTokenToDiffAgainst
remStorageClasses
decodeObjectOfClasses:forKey:
initWithResultData:storages:latestFetchResultToken:
latestFetchResultToken
_resultData
_resultStorages
_latestFetchResultToken
stringForKey:
URLWithString:
objectIDWithURL:
urlRepresentation
objectIDForKey:
setObjectID:forKey:
_deepCopy
initWithObjectID:
objectIDWithUUID:entityName:
initWithAlarmTrigger:objectID:
isContentEqual:
setObjectID:
_objectID
setTimeInterval:
decodeDoubleForKey:
encodeDouble:forKey:
initWithObjectID:timeInterval:
_timeInterval
setDateComponents:
initWithObjectID:dateComponents:
_dateComponents
setStructuredLocation:
setProximity:
structuredLocation
proximity
initWithObjectID:structuredLocation:proximity:
_structuredLocation
_proximity
setEvent:
event
initWithObjectID:event:
_event
contactRepresentation
initWithContactRepresentation:
initWithObjectID:contactRepresentation:
_contactRepresentation
initWithReplicaIDSource:document:undos:
replicaUUIDForCreation
initWithReplica:
initWithDocument:
setRootObject:
realizeLocalChanges
initWithReplicaIDSource:document:
nonEditingReplicaUUID
unarchiveFromData:replica:
document
rootObject
orderedSetWithOrderedSet:
isEqualToOrderedSet:
indexOfEqualObject:
replicaIDSource
undos
initWithReplicaIDSource:immutableDocumentToEdit:undos:
archivedData
copyForReplica:
mergeWithDocument:
dictionaryWithObjects:forKeys:count:
initWithReplicaIDSource:serializedData:error:
initWithReplicaIDSource:orderedSet:
mutableOrderedSet
serializedData
mergedOrderedSetWithOrderedSet:error:
setReplicaIDSource:
setDocument:
_replicaIDSource
_document
_undos
setDelegate:
initWithReplicaIDSource:owner:replicaClockProvider:
replicaIDHelper
didCopy
willEdit
setCurrentUndo:
documentToEdit
currentUndo
immutableCopy
moveObjectFromIndex:toIndex:
lastObject
removeLastObject
undoBlocks
reverseObjectEnumerator
addUndoBlock:
setReplicaClockProvider:
replicaIDHelperDidAcquireReplicaUUID:
addUndoCommandsForObject:block:
wantsUndoCommands
immutableOrderedSet
undo
undo:
setReplicaIDHelper:
_replicaManagerProvider
_replicaIDHelper
_currentUndo
listIDsMergeableOrderingReplicaIDSourceWithAccountID:
initWithObjectID:type:name:listIDsMergeableOrdering:
listIDsMergeableOrdering
listIDsToUndelete
setListIDsToUndelete:
listsDADisplayOrderChanged
setListsDADisplayOrderChanged:
inactive
setInactive:
didChooseToMigrate
setDidChooseToMigrate:
didChooseToMigrateLocally
setDidChooseToMigrateLocally:
didFinishMigration
setDidFinishMigration:
daConstraintsDescriptionPath
setDaConstraintsDescriptionPath:
daAllowsCalendarAddDeleteModify
setDaAllowsCalendarAddDeleteModify:
daSupportsSharedCalendars
setDaSupportsSharedCalendars:
daWasMigrated
setDaWasMigrated:
setWithObjects:
setMarkedForRemoval:
markedForRemoval
failWithError:
allObjects
cdKeyToStorageKeyMap
resolutionTokenMapWithJSONData:keyMap:
initWithAccountID:objectID:property:
initWithObjectID:type:name:
setStoreGenerationIfNeeded:
displayName
listIDsMergeableOrderingReplicaIDSource
setType:
setName:
setListIDsMergeableOrdering:
_storeGeneration
_copyGeneration
_markedForRemoval
_listsDADisplayOrderChanged
_inactive
_didChooseToMigrate
_didChooseToMigrateLocally
_didFinishMigration
_daAllowsCalendarAddDeleteModify
_daSupportsSharedCalendars
_daWasMigrated
_name
_listIDsMergeableOrdering
_listIDsToUndelete
_resolutionTokenMap
_resolutionTokenMapData
_daConstraintsDescriptionPath
frequency
daysOfTheWeek
daysOfTheMonth
monthsOfTheYear
weeksOfTheYear
daysOfTheYear
setPositions
recurrenceEnd
naturalLanguageDescriptionForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:withStartDate:
currentCalendar
components:fromDate:
_readableWeekDays
_readableMonths
localizedStringFromNumber:numberStyle:
daysTypeForDayArray:
_andDaysOfWeekString:
_weekDayPositionAsString:
_orDaysOfWeekString:
_dayOfMonthAsString:
appendString:
appendFormat:
month
standaloneWeekdaySymbols
initWithObjects:
standaloneMonthSymbols
_numberedWeekDayString:
_daysOfWeek
arrayWithArray:
_customDayCombinationDescription:
shortNaturalLanguageDescriptionForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:setPositions:date:timeZone:lowercase:
currentLocale
arrayWithObjects:
lowercaseStringWithLocale:
localizedStringWithFormat:
_stringForDayOfWeek:
intValue
isEqualToArray:
_stringForByDayOfWeek:setPositions:
_stringForMonthNumber:
_localizedOfMonthStringForMonth:
_byDayOfWeekOrdinalStrings
_customByDayItemFormatLocalizedString
repeatTypeForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:recurrenceDate:recurrenceTimeZone:getRepeatEnd:
occurrenceCount
endDate
naturalLanguageDescriptionForRecurrenceRule:withStartDate:
shortNaturalLanguageDescriptionForRecurrenceRule:date:timeZone:lowercase:
repeatTypeForRecurrenceRules:recurrenceDate:recurrenceTimeZone:getRepeatEnd:
localizedDescriptionForRepeatType:
rangeOfUnit:inUnit:forDate:
setRemObjectID:
resolveInstanceMethod:
initWithREMObjectID:
changeObjectForAuxiliaryChangeInfoMap
initWithAuxiliaryChangeInfoType:
changeObjectForAuxiliaryChangeInfo:
auxiliaryChangeInfos
setAuxiliaryChangeInfos:
typedKlass
setTypedKlass:
setChangeObjectForAuxiliaryChangeInfoMap:
_auxiliaryChangeInfos
_typedKlass
_changeObjectForAuxiliaryChangeInfoMap
propertyListWithData:options:format:error:
auxiliaryChangeInfoFromData:withObjectID:fromChangeObject:error:
auxiliaryChangeInfoFetchResultOfType:
predicateDescriptor
sortDescriptors
options
fetchedAccountStorages
fetchedListStorages
initWithStore:account:storage:
requestedObjectIDs
parentListID
setParentList:
initWithPredicateDescriptor:sortDescriptors:options:
resultsFromFetchResult:inAccount:error:
resultsFromFetchResult:inParentList:error:
setPredicateDescriptor:
setSortDescriptors:
_predicateDescriptor
_sortDescriptors
_options
weakValue
template
setWeakValue:
valueForSaveRequest:
valueWithoutPerformingCopy
setTemplate:
_weakValue
_template
numberWithUnsignedInteger:
setYear:
setMonth:
setDay:
setHour:
setMinute:
setSecond:
setCalendar:
calendarIdentifier
setNanosecond:
year
hour
minute
second
nanosecond
exceptionWithName:reason:userInfo:
calendarWithIdentifier:
component:fromDate:
timeZoneWithName:
rem_compare:
dateFromComponents:
compare:
rem_dateComponentsByAddingTimeInterval:
rem_allDayDateComponents
rem_isValidDateComponents
rem_isWeekendDateComponents
rem_dateComponentsWithDateUsingArchivingTimeZone:isAllDay:
rem_dateWithDateComponentsUsingArchivingTimeZone:
rem_dateComponentsWithYear:month:day:hour:minute:second:allDay:timeZone:
initWithCalendarIdentifier:
rem_isEquivalentTo:
mergeableString
generateIdsForLocalChanges
timestamp
timestamps
clockElementForUUID:
lastConsumedChangeToken
lastConsumedDate
setLastConsumedChangeToken:
setLastConsumedDate:
_lastConsumedChangeToken
_lastConsumedDate
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
dealloc
null
mutableChangedKeys
observeValueForKeyPath:ofObject:change:context:
target
keysToObserve
setKeysToObserve:
setMutableChangedKeys:
_target
_keysToObserve
_mutableChangedKeys
crdtIDWithObjectID:property:
initWithAccountID:crdtID:
_accountID
_crdtID
deleteApplicationDataFromCloudKitWithCompletion:
migrateICloudCalDavToCloudKitForAccountID:disableCache:userInitiated:completion:
debugDownloadMigrationCacheWithCompletion:
fetchUserRecordWithCompletion:
setMigrationStateToDidChooseToMigrate:didFinishMigration:completion:
fetchServerRecordFor:completion:
observeCloudKitNetworkActivityChanges
setTrigger:
initWithTrigger:objectID:
acknowledgedDate
isAcknowledged
isOriginal
isSnooze
_trigger
_acknowledgedDate
_alarmUID
_originalAlarmUID
daCalendarItemUniqueIdentifier
titleDocumentData
setTitleDocumentData:
allDay
notesDocumentData
setNotesDocumentData:
contactHandles
setContactHandles:
importedICSData
siriFoundInAppsData
setSiriFoundInAppsData:
siriFoundInAppsUserConfirmation
displayDate
setDisplayDate:
rem_formatterWithTimeZone:
rem_stringFromDateComponents:
stringFromDate:
documentFromSerializedData:replicaIDSource:forKey:ofObjectID:
URLFragmentAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
titleReplicaIDSourceWithAccountID:reminderID:
notesReplicaIDSourceWithAccountID:reminderID:
initWithDueDateComponents:alarms:
startOfDayForDate:
isAllDay
showRemindersAsOverdue
isDate:overdueAtReferenceDate:allDay:showAllDayRemindersAsOverdue:
legacyNotificationIdentifier
isOverdue
isRecurrent
setAccountID:
_hasDeserializedTitleDocument
_hasDeserializedNotesDocument
_deserializedTitleDocumentCache
_deserializedNotesDocumentCache
_completed
_allDay
_listID
_parentReminderID
_titleDocumentData
_notesDocumentData
_completionDate
_subtaskIDsToUndelete
_priority
_startDateComponents
_dueDateComponents
_timeZone
_creationDate
_lastModifiedDate
_recurrenceRules
_attachments
_alarms
_contactHandles
_icsDisplayOrder
_icsUrl
_importedICSData
_daCalendarItemUniqueIdentifier
_userActivity
_siriFoundInAppsData
_siriFoundInAppsUserConfirmation
_lastBannerPresentationDate
_flagged
_assignments
_displayDate
dictionaryWithObjectsAndKeys:
compareToken:error:
universalToken
isUniversal
initWithSaveRequest:storage:capabilities:changedKeysObserver:
_emptyListIDsOrderingWithAccountID:
initWithAccountType:
initWithSaveRequest:storage:capabilities:observeInitialValues:
capabilities
supportsGroups
initWithAccountChangeItem:
insertListChangeItem:adjacentToListChangeItem:isAfter:withParentListChangeItem:
_lowLevelApplyUndoToOrdering:
removeObjectForKey:
allKeys
_editListIDsOrderingUsingBlock:
_reassignListChangeItem:withParentListChangeItem:
_lowLevelAddListChangeItemToOrdering:atIndexOfSibling:isAfter:withParentListChangeItem:
removeFromParent
setParentAccountID:
setParentListID:
initWithObjectID:type:name:insertIntoSaveRequest:
groupContext
addListChangeItem:
insertListChangeItem:beforeListChangeItem:
insertListChangeItem:afterListChangeItem:
undeleteListWithID:usingUndo:
removeFromStore
listChangeItemsByOrderingListChangeItems:
lowLevelAddListIDToOrdering:withParentListChangeItem:
lowLevelRemoveListIDFromOrdering:
accountChangeItem
setAccountChangeItem:
_accountChangeItem
incompleteReminderCounts
scheduledCount
initWithIncompleteReminderCounts:scheduledCount:
_incompleteReminderCounts
_scheduledCount
initWithType:
objectIDs
predicateDescriptorForAllLists
setObjectIDs:
_parentListID
_objectIDs
fetchedReminderStorages
initWithStore:list:storage:
allValues
setParentReminder:
list
resultsFromFetchResult:inList:error:
resultsFromFetchResult:inParentReminder:error:
subtaskCounts
dueDateCounts
initWithSubtaskCounts:
initWithDueDateCounts:
initWithSubtaskCounts:dueDateCounts:
_subtaskCounts
_dueDateCounts
dueDate
initWithDueDate:count:
_dueDate
_count
distantFuture
displayDateWithDueDateComponents:alarms:
initWithDate:allDay:timeZone:
boolValue
initWithFloatingDateComponents:nonFloatingDateComponents:
_date
sortingStyle
sortingDirection
entityNamesToIncludeFromTracking
internalTransactionAuthorKeysToExclude
defaultTransactionAuthorKeysToExclude
currentChangeToken:
_performChangeTrackingWithReason:block:xpcErrorHandler:
currentChangeTokenForAccountTypes:completion:
changeTrackingClientID
accountIdentifier
currentChangeTokenForAccountID:completion:
earliestChangeTokenForAccountID:completion:
getTrackingStateWithClientID:completion:
saveTrackingState:withClientID:completionHandler:
entityName
transactionFetchLimit
fetchHistoryAfterToken:entityName:transactionFetchLimit:completionHandler:
transactionAuthorKeysToExclude
consolidateAndFilterChangesWithTransactionAuthors:isExclusion:
errorChangeSetWithError:
fetchHistoryAfterDate:entityName:transactionFetchLimit:completionHandler:
deleteHistoryBeforeToken:completionHandler:
deleteHistoryBeforeDate:completionHandler:
persistenceStoreIDForAccountID:completion:
syncChangeTrackingPerformerWithReason:errorHandler:
entityNamesToIncludeFromTrackingWithOptionProvider:
currentChangeTokenForAllAccountsWithError:
currentChangeTokenForAccountTypes:error:
currentChangeTokenWithError:
earliestChangeTokenWithError:
getTrackingStateWithError:
saveTrackingState:error:
fetchHistoryAfterToken:error:
fetchHistoryAfterDate:error:
deleteHistoryBeforeToken:error:
deleteHistoryBeforeDate:error:
persistenceStoreIDForAccountID:error:
setEntityName:
setTransactionFetchLimit:
_changeTrackingClientID
_entityName
_transactionFetchLimit
_transactionAuthorKeysToExclude
isCoalesced
coalescedChanges
arrayByAddingObjectsFromArray:
transaction
changes
changeType
changedObjectID
fetchAuxiliaryChangeInfos:completionHandler:
fetchAuxiliaryChangeInfosOfType:withChangeObject:error:
clientName
stringByAppendingString:
_clientName
_accountIdentifier
newCloudContainerForAccountID:
isSandboxEnvironment
initWithContainerIdentifier:environment:
initWithAccountID:
setAccountInfoOverride:
initWithContainerID:options:
initWithContainerID:
defaultCloudContainerName
defaultCloudContainer
uuidString
hostURL
decodeExternalIdentifierForMarkedForDeletionObject:
externalIdentifierForMarkedForDeletionObject
initCalDAVNotificationWithObjectID:accountID:listID:uuidString:hostURL:externalIdentifier:externalModificationTag:
setUuidString:
setHostURL:
_uuidString
_hostURL
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
snoozeToDate:
_createSnoozeAlarmWithDateComponents:
hourForNextThirdsFromHour:
_cleanupOriginalAlarmsForSnoozing
_timeIntervalToAddSinceStartDate:withNow:step:
dateWithTimeIntervalSinceNow:
snoozeFromNowForTimeInterval:
snoozeToNextThirds
snoozeForever
snoozeFromDueDateForFutureIntegralMultipleOfTimeInterval:
initWithObjectID:accountID:reminderID:UTI:
reminderID
_uti
_reminderID
createTemporaryFileWithData:UTI:
isTemporaryFileURL
fileURL
defaultManager
removeItemAtURL:error:
reminderDataURL
URLForDirectory:inDomain:appropriateForURL:create:error:
processInfo
globallyUniqueString
URLByAppendingPathComponent:
URLByAppendingPathExtension:
createTemporaryFileURLWithUTI:
writeToURL:options:error:
fileSize
initWithURL:readonly:
setFileSize:
linkItemAtURL:toURL:error:
setFileURL:
setIsTemporaryFileURL:
_isTemporaryFileURL
_fileSize
_fileURL
width
height
setWidth:
setHeight:
_width
_height
metadata
setUrl:
setMetadata:
_url
_metadata
state
isObserver
timeElapsed
listsMigrated
remindersMigrated
initWithState:IsObserver:timeElapsed:listsMigrated:remindersMigrated:log:
_isObserver
_state
_timeElapsed
_listsMigrated
_remindersMigrated
_log
changeID
tombstone
updatedProperties
setChangeID:
setChangedObjectID:
setChangeType:
setTombstone:
setUpdatedProperties:
_changeID
_changedObjectID
_changeType
_tombstone
_updatedProperties
persistentHistoryChangeTombstone
objectIdentifier
daIsEventOnlyContainer
shareeOwningListIdentifier
shareeDisplayName
shareeAddress
assignmentOwningReminderIdentifier
initWithDictionary:
setPersistentHistoryChangeTombstone:
_persistentHistoryChangeTombstone
initWithStorage:
persistentHistoryChange
shortStringForChangeType:
internal_ChangeTransaction
stringForChangeType:
stringByReplacingOccurrencesOfString:withString:
setWithSet:
unionSet:
setInternal_ChangeTransaction:
initWithPersistentHistoryChange:
changedManagedObjectID
resolveWithObjectID:
copyForCoalescing
setIsCoalesced:
setCoalescedChanges:
_isCoalesced
_internal_ChangeTransaction
_coalescedChanges
_persistentHistoryChange
dataWithLength:
characterAtIndex:
setLength:
rem_dataWithHexString:
storeID
author
token
_timestamp
_changes
_storeID
_author
_token
rangeOfString:options:
rem_hasPrefixCaseInsensitive:
rem_hasMailto
rem_hasTel
rem_addingMailto
rem_removingMailto
rem_addingTel
rem_removingTel
unarchivedObjectOfClass:fromData:error:
initWithPersistentHistoryTokens:
persistentHistoryTokens
archivedDataWithRootObject:requiringSecureCoding:error:
fetchResultTokenFromDataRepresentation:error:
dataRepresentationWithError:
_persistentHistoryTokens
initWithError:
isTruncated
error
filteredTransactions
filterByTransactionAuthorStrings
filterByTransactionAuthorsIsExclusion
setFilterByTransactionAuthorStrings:
setFilterByTransactionAuthorsIsExclusion:
_filterAndFlattenAndConsolidateChanges
addObjectsFromArray:
transactions
setError:
setFilteredTransactions:
sortUsingComparator:
subarrayWithRange:
removeObjectsForKeys:
sortedArrayUsingComparator:
setUpdates:
setInserts:
setDeletes:
inserts
updates
deletes
initWithChangeTransactions:
applyFilterByTransactionAuthors:isExclusion:
enumerateChanges:forModelsOfClass:withBlock:
lastChangeTokenForAccountID:
setIsTruncated:
_isTruncated
_filterByTransactionAuthorsIsExclusion
_transactions
_inserts
_updates
_deletes
_error
_filterByTransactionAuthorStrings
_filteredTransactions
sortDescriptorSortingByTitleAscending:
sortDescriptorSortingByCreationDateAscending:
sortDescriptorSortingByDueDateAscending:
sortDescriptorSortingByPriorityAscending:
sortDescriptorSortingByOrderingInListAscending:
_objectIdentifier
_externalIdentifier
_daIsEventOnlyContainer
_shareeOwningListIdentifier
_shareeDisplayName
_shareeAddress
_assignmentOwningReminderIdentifier
_transaction
setDebug_rem_nowOverride:
debug_rem_nowOverride
rem_now
initWithEndDate:
initWithOccurrenceCount:
dateWithTimeIntervalSinceReferenceDate:
callStackSymbols
isEqualToDate:
usesEndDate
_endDate
_occurrenceCount
supportsListAppearance
supportsPersonTrigger
supportsLocation
supportsHourlyRecurrence
supportsEventKitSync
supportsCloudKitSync
supportsCalDAVNotifications
supportsListSharees
supportsListShareesMutation
supportsMoveAcrossLists
supportsMoveAcrossSharedLists
supportsMultipleDateAlarmsOnRecurrence
defaultReminderPriorityLevel
supportsHandoff
supportsReminderActions
supportsCRDTs
_supportsSubtasks
_supportsAttachments
_supportsListAppearance
_supportsGroups
_supportsFlagged
_supportsPersonTrigger
_supportsLocation
_supportsHourlyRecurrence
_supportsEventKitSync
_supportsCloudKitSync
_supportsCalDAVNotifications
_supportsListSharees
_supportsListShareesMutation
_supportsMoveAcrossLists
_supportsMoveAcrossSharedLists
_supportsMultipleDateAlarmsOnRecurrence
_supportsHandoff
_supportsReminderActions
_supportsCRDTs
_supportsAssignments
_insertsCompletedRecurrentCloneAtTail
_defaultReminderPriorityLevel
rem_registerClassAtCRCoderIfNeeded
registerClass:forType:
queue
q_syncSuggestedAttributesPerformerWithReason:errorHandler:
preWarmModels
q_cachedXPCPerformer
q_resolveSuggestedAttributesPerformerWithReason:errorHandler:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
setQ_cachedXPCPerformer:
uncachedSuggestedAttributesPerformerWithReason:completion:
initWithQueue:store:
setQueue:
_queue
_q_cachedXPCPerformer
initWithListID:includingSubtasks:
accountStorages
listStorages
reminderStorages
remindersFromAccountStorages:listStorages:reminderStorages:store:requestedReminderIDs:showMarkedForDeleteObjects:
initWithParentReminderID:
noSuchObjectErrorWithObjectID:
fetchRemindersWithObjectIDs:includeMarkedForDelete:error:
initWithParentReminderIDs:
setShowMarkedForDeleteObjects:
initWithListID:
storedPropertyForKey:
unexpectedError
noSuchObjectErrorWithExternalIdentifier:
initWithExternalIdentifiers:listObjectID:
remindersFromAccountStorages:listStorages:reminderStorages:store:requestedStringIdentifiers:identifierSelector:
remindersFromAccountStorages:listStorages:reminderStorages:store:showMarkedForDeleteObjects:
noSuchObjectErrorWithDACalendarItemUniqueIdentifier:
initWithDACalendarItemUniqueIdentifiers:listObjectID:
fetchRemindersWithListID:includingSubtasks:error:
fetchRemindersWithParentReminderID:error:
fetchRemindersCountWithListID:error:
includingSubtasks
_includingSubtasks
showMarkedForDeleteObjects
_showMarkedForDeleteObjects
parentReminderIDs
_parentReminderIDs
externalIdentifiers
listObjectID
_externalIdentifiers
_listObjectID
daCalendarItemUniqueIdentifiers
_daCalendarItemUniqueIdentifiers
initWithAccountStorages:listStorages:reminderStorages:objectIDs:
_accountStorages
_listStorages
_reminderStorages
showLazyDeleteObjects
_showLazyDeleteObjects
initWithAssignments:
initWithSmartListTag:reminderIDs:createIfNeeded:
smartListStorages
smartListsFromSmartListStorages:store:
smartListTag
reminderIDs
createIfNeeded
setCreateIfNeeded:
_createIfNeeded
_smartListTag
_reminderIDs
initWithSmartListStorages:
_smartListStorages
initWithREMDAAccount:clientName:withREMStore:entityName:
loggingDescription
_rem_changeTracking:
cached_currentChangeToken
setCached_currentChangeToken:
cached_currentTrackingState
setCached_currentTrackingState:
upToToken
fetchAndInitializeChangeTrackingStateIfNeeded
changeSet
setChangeSet:
setSinceToken:
setCached_insertedModelObjectResultsByModelClassName:
setCached_updatedModelObjectResultsByModelClassName:
setUpToToken:
rem_accountObjectID
markChangesConsumed:
sinceToken
_cachedModeObjectResultsForModelClass:changeType:
_changeTypeMaskFromChangeType:
_changedModelObjectsOfClass:ofChangeTypes:
_setCachedModeObjectResults:forModelClass:changeType:
_rem_accountObjectID
_handleLazyDeletionChange:ofModelClass:forClientID:deleteHandler:undeleteHandler:
shouldIgnoreChangeOfModelClassProperties:withChangeObject:
rem_DA_deletedKeyFromTombstoneBlock
rem_DA_supportsFetching
_fetchModelObjectsOfClass:withObjectIDs:
removeObjectsInArray:
rem_DA_supportsLazyDelete
rem_DA_lazyDeleteProperties
_fetchModelObjectOfClass:withObjectID:includeLazyDeleteObjects:
rem_DA_deletedKeyFromLazyDeletedModelObjectBlock
minusSet:
remStore
rem_DA_fetchByObjectIDBlock
rem_DA_fetchByObjectIDsBlock
cached_insertedModelObjectResultsByModelClassName
cached_updatedModelObjectResultsByModelClassName
cached_remAccountObjectID
setCached_remAccountObjectID:
initWithREMDAAccount:clientName:withREMStore:
compareCurrentChangeTokenToLastConsumedWithResult:error:
fetchChangesSinceLastConsumed
markChangesConsumed
changedModelObjectsOfModelClass:ofChangeType:
changedIdentifiersOfModelClass:ofChangeType:
clearCachedModelObjectResultsForModelClass:
setClientName:
setRemStore:
setChangeTracking:
_account
_changeSet
_sinceToken
_upToToken
_remStore
_changeTracking
_cached_remAccountObjectID
_cached_insertedModelObjectResultsByModelClassName
_cached_updatedModelObjectResultsByModelClassName
_cached_currentChangeToken
_cached_currentTrackingState
_debug_resetCaches
isChangeTrackableModel
isChangeTrackableFetchableModel
owningListIdentifier
setObjectIdentifier:
setOwningListIdentifier:
setDisplayName:
_owningListIdentifier
_displayName
_address
owningReminderIdentifier
setOwningReminderIdentifier:
_owningReminderIdentifier
anyObject
listsFromAccountStorages:listStorages:store:requestedListIDs:
initWithListIDs:
initWithListIDs:startDate:endDate:
listIDs
_listIDs
startDate
_startDate
_errorSanitizedForXPCFromError:
_isCoreDataError:
_errorWithCode:underlyingError:
errorWithDomain:code:userInfo:
userInfo
reason
errorSanitizedForXPCFromError:
mismatchedObjectIDWithObjectID:expected:
unexpectedNilPropertyWithClass:property:
errorFromErrors:
unauthorizedErrorWithMissingEntitlement:
unauthorizedErrorWithMissingEntitlement:requestedAccessLevel:currentAccesslevel:
throttledErrorWithRemainingTimeInterval:
babySatErrorWithOperationName:
cancelledError
retryLaterErrorWithInterval:
isNoSuchObjectError:forObjectID:
noSuchSmartListErrorWithSmartListTag:
saveErrorWithCoreDataError:
validationErrorMoveFromAccount:toAccout:
validationErrorListHasNoAccount:
validationErrorMoveReminderFromList:toList:inAccount:
validationErrorNestedSubtask:parentReminderID:
validationErrorSubtaskAndParentNotOnSameList:parentReminderID:
constraintConflictWithIdentifier:constraint:
nullifiedRelationshipErrorWithRelationshipName:
xpcPerformerUnavailableErrorWithDescription:
initWithObjectID:accountID:reminderID:assigneeID:originatorID:status:assignedDate:
_debug_cdAssigneeLinked
_debug_cdOriginatorLinked
isEqualToAssignment:
nullifiedAssignmentOriginatorID
orderValueWithAssignedDate:objectIdentifier:
isOriginatorNullified
set_debug_cdAssigneeLinked:
set_debug_cdOriginatorLinked:
__debug_cdAssigneeLinked
__debug_cdOriginatorLinked
_status
_assigneeID
_originatorID
_assignedDate
nullifiedOriginatorAssignmentWithObjectID:accountID:reminderID:assigneeID:status:assignedDate:
setCounter:
setModificationTime:
setReplicaID:
initWithCounter:modificationTime:replicaID:
counter
modificationTime
replicaID
CR_compare:
resolutionTokenWithJSONObject:
initWithDefaultValue
update
_counter
_modificationTime
_replicaID
initWithObjectID:reminderID:start:end:lastModifiedDate:
start
initWithReminderID:start:end:
setStart:
setEnd:
_start
_end
inProgressSaveRequests
_latestSaveInProgressAccountForObjectID:saveRequest:
_firstMatchInSaveRequests:
parentList
_latestSaveInProgressListForObjectID:fallbackAccount:fallbackParentList:saveRequest:
parentReminder
_latestSaveInProgressReminderForObjectID:fallbackAccount:fallbackList:fallbackParentList:fallbackParentReminder:saveRequest:
_trackedAccountChangeItemForObjectID:
setInProgressSaveRequests:
_inProgressSaveRequests
initWithAccountType:identifier:name:
databaseMigrationTestModeEnabled
initWithSandboxDatabaseEnabled:
containerToken
systemBuildVersion
lastDatabaseMigrationSystemBuildVersion
isDatabaseMigrated
setIsDatabaseMigrated:
cachedStore
setCachedStore:
setContainerToken:
destroySandboxContainerIfNecessary
setMigrationStartDate:
setLastReportedErrorIdentifier:
setLastReportedError:
setLastReportedErrorStage:
localAccountID
localAccountDefaultListID
updateList:
saveSynchronouslyWithError:
migrationStartDate
timeIntervalSinceNow
lastReportedErrorStage
lastReportedErrorIdentifier
lastReportedError
_diagnosticReportWithStage:failureIdentifier:error:
setShouldDataAccessStopSyncingReminders:
setLastDatabaseMigrationSystemBuildVersion:
_postMigrationLocalAccountCleanup
hasPerformedEnsureAccountsExist
_cleanLocalDatabases:
setHasPerformedEnsureAccountsExist:
_addAccountWithType:name:accountObjectID:
_migrationAccountInfosFromDEPRECATEDInfoDictionaryList:
ensureAccountsExistWithMigrationAccountInfos:error:
updateAccount:
shouldDeleteMigratedData
reportMigrationWillBegin
reportMigrationErrorWithIdentifier:atStage:error:objectLocator:
reportMigrationDidFinishWithSuccess:
ensureAccountsExist:error:
ensureAccountsExist:
_hasPerformedEnsureAccountsExist
_containerToken
_cachedStore
_migrationStartDate
_lastReportedErrorIdentifier
_lastReportedErrorStage
_lastReportedError
fetchResultToken
initWithCount:
initWithAccountStorages:listStorages:reminderStorages:requestedObjectIDs:metadata:
initWithAccountStorages:
initWithListStorages:
initWithReminderStorages:
initWithRequestedObjectIDs:
initWithMetadata:
setFetchResultToken:
_requestedObjectIDs
_fetchedAccountStorages
_fetchedListStorages
_fetchedReminderStorages
_fetchResultToken
initWithAccount:
fetchListsInAccount:error:
fetchListIncludingSpecialContainerWithExternalIdentifier:inAccount:error:
localInternalAccountID
_accountTypeMaskWithBitMask:
supportsSharingLists
canCopyReminderLosslesslyToAccount:
isConsideredEmptyWithResultPtr:withError:
fetchListsIncludingSpecialContainersWithError:
fetchListIncludingSpecialContainerWithExternalIdentifier:error:
MCIsManagedWithResultPtr:error:
listIDsOrdering
daSupportsPhoneNumbers
setCapabilities:
_capabilities
fetchGroupsWithError:
setAccount:
replicaManager
acquiredReplicaUUID
setAcquiredReplicaUUID:
owner
didSerialize
lazilyCachedReplicaManagerProvider
setLazilyCachedReplicaManagerProvider:
replicaClockProvider
setOwner:
_replicaClockProvider
_owner
_acquiredReplicaUUID
_lazilyCachedReplicaManagerProvider
rem_humanReadableIdentifier
_init
setIncludeListNames:
setIncludeReminderTitles:
setIncludeListNameFuzzedEmbeddings:
setIncludeReminderTitleFuzzedEmbeddings:
setIncludeSystemLanguage:
setIncludeSystemTimezone:
setIncludeAccountType:
setIncludeListGroupInfo:
setIncludeReminderTitleSaltedHash:
setIncludeDayOfWeek:
setIncludeDates:
setIncludeRecurrenceInfo:
setIncludeLocationInfo:
setIncludeAttachmentUTIs:
setIncludeRemindMeWhenMessagingInfo:
setIncludeAlarmDates:
setIncludeSubtaskInfo:
setIncludeUserActivityInfo:
setIncludeIsFlagged:
setIncludePriority:
setRelevantWordTagsIncludeOtherWord:
setDateResolutionInSeconds:
setCreationDateWithinDays:
setReminderTitleCategoryEmbeddingURL:
setIncludeReminderTitleCategorySentence2Vec:
setIncludeReminderTitleCategoryUniversalGrammar:
setIncludeReminderTitleCategoryFilteredStopWords:
setReminderTitleCategoryDistanceTolerance:
_attachmentURLFromFilenameWithKey:inJSONRepresentation:attachmentURLs:error:
optionsWithDefaultValues
includeListNames
remdes_boolForKey:defaultValue:
includeListNameFuzzedEmbeddings
includeReminderTitles
includeReminderTitleFuzzedEmbeddings
includeSystemLanguage
includeSystemTimezone
includeAccountType
includeListGroupInfo
includeReminderTitleSaltedHash
includeDates
includeRecurrenceInfo
includeLocationInfo
includeAttachmentUTIs
includeRemindMeWhenMessagingInfo
includeAlarmDates
includeSubtaskInfo
includeUserActivityInfo
includeIsFlagged
includePriority
relevantWordTagsIncludeOtherWord
remdes_nsuintegerForKey:defaultValue:
includeReminderTitleCategoryFilteredStopWords
includeReminderTitleCategoryUniversalGrammar
includeReminderTitleCategorySentence2Vec
remdes_doubleForKey:defaultValue:
dateResolutionInSeconds
reminderTitleCategoryEmbeddingURL
reminderTitleCategoryDistanceTolerance
isInternalInstall
lastPathComponent
optionsWithEverythingOff
optionsFromJSONRepresentation:attachmentURLs:error:
includeDayOfWeek
creationDateWithinDays
_includeListNames
_includeReminderTitles
_includeListNameFuzzedEmbeddings
_includeReminderTitleFuzzedEmbeddings
_includeSystemLanguage
_includeSystemTimezone
_includeAccountType
_includeListGroupInfo
_includeReminderTitleSaltedHash
_includeDates
_includeDayOfWeek
_includeRecurrenceInfo
_includeLocationInfo
_includeAttachmentUTIs
_includeRemindMeWhenMessagingInfo
_includeAlarmDates
_includeSubtaskInfo
_includeUserActivityInfo
_includeIsFlagged
_includePriority
_relevantWordTagsIncludeOtherWord
_includeReminderTitleCategoryFilteredStopWords
_includeReminderTitleCategoryUniversalGrammar
_includeReminderTitleCategorySentence2Vec
_reminderTitleCategoryDistanceTolerance
_reminderTitleCategoryEmbeddingURL
_dateResolutionInSeconds
_creationDateWithinDays
_xpcConnectionReconnectingIfNecessary
initWithStoreContainerToken:userInteractive:
serviceName
xpcConnection
exportedObject
setCloudKitNetworkActivityDelegate:
_syncPerformerWithResolver:reason:errorHandler:
_asyncPerformerWithResolver:reason:loadHandler:errorHandler:
_resolveAndCachePerformerWithResolver:reason:errorHandler:
l_performersByName
_asyncResolveAndCachePerformerWithResolver:reason:completion:
_resolvePerformerWithResolver:reason:errorHandler:
_asyncResolvePerformerWithResolver:reason:completion:
resolveWithDaemon:reason:completion:
initWithMachServiceName:options:
setRemoteObjectInterface:
cloudKitNetworkActivityDelegate
setExportedObject:
setExportedInterface:
_xpcConnectionDidInterrupt
removeAllObjects
setInterruptionHandler:
_xpcConnectionDidInvalidate
setXpcConnection:
setInvalidationHandler:
resume
cloudKitNetworkActivityDidChange:
syncDebugPerformerWithErrorHandler:
syncSyncInterfacePerformerWithReason:errorHandler:
syncIndexingPerformerWithReason:errorHandler:
asyncIndexingPerformerWithReason:loadHandler:errorHandler:
setL_performersByName:
setServiceName:
setStoreContainerToken:
_cloudKitNetworkActivityDelegate
_l_performersByName
_serviceName
_xpcConnection
processName
storePerformerWithProcessName:storeContainerToken:reason:completion:
debugPerformerWithReason:completion:
changeTrackingPerformerWithStoreContainerToken:reason:completion:
syncInterfacePerformerWithReason:completion:
indexingPerformerWithReason:completion:
cloudKitNetworkActivityDidUpdate:
locationUID
latitude
longitude
radius
referenceFrameString
contactLabel
initWithTitle:locationUID:latitude:longitude:radius:address:routing:referenceFrameString:contactLabel:mapKitHandle:
initWithTitle:locationUID:
host
minimumRegionMonitoringDistance
_title
_latitude
_longitude
_radius
_routing
_referenceFrameString
_contactLabel
_mapKitHandle
_locationUID
formatOptions
setFormatOptions:
dateFromString:
rem_dateComponentsFromString:
initWithRed:green:blue:alpha:
initWithRed:green:blue:alpha:colorSpace:
initWithHexString:
initWithWhite:alpha:
hexString
uppercaseString
substringWithRange:
initWithDASymbolicColorName:daHexString:ckSymbolicColorName:
green
blue
alpha
hexStringWithAlpha
daSymbolicColorName
daHexString
ckSymbolicColorName
colorRGBSpace
encodeInt:forKey:
decodeIntForKey:
initForReadingFromData:error:
initRequiringSecureCoding:
encodedData
colorWithRed:green:blue:alpha:
colorWithRed:green:blue:alpha:targetRGBSpace:
colorWithHexString:
clearColor
blackColor
whiteColor
grayColor
lightGrayColor
redColor
greenColor
blueColor
cyanColor
yellowColor
magentaColor
orangeColor
purpleColor
brownColor
colorWithDictionaryData:error:
initWithRed:green:blue:alpha:colorSpace:daSymbolicColorName:daHexString:ckSymbolicColorName:
initWithDASymbolicColorName:daHexString:
initWithCKSymbolicColorName:hexString:
archivedDictionaryDataWithError:
_colorRGBSpace
_blue
_red
_green
_alpha
_daSymbolicColorName
_daHexString
_ckSymbolicColorName
initWithSuiteName:containerURL:
_initWithSuiteName:container:
standardUserDefaults
initWithSuiteName:
_addObserverForKey:block:
userDefaults
observers
initWithOptions:capacity:
initWithUserDefaults:key:block:
userDefaultsKey
removeObserver:forKeyPath:
block
appGroupUserDefaults
_startObservingValuesForKey:block:
_startStreamingValuesForKey:block:
_removeObserver:
suiteName
showRemindersAsOverdue_cached
setShowRemindersAsOverdue_cached:
_showRemindersAsOverdue_cached
_suiteName
_observers
_userDefaults
defaultValues
registerDefaults:
boolForKey:
setBool:forKey:
_deletePreferredDefaultListObjectIDUrl
preferredDefaultListID
dictionaryForKey:
numberWithLong:
todayNotificationFireTimeFromStorageNumber:
storageNumberForTodayNotificationTime:
todayNotificationFireTime
_reminderIDAttributeKey:attributeType:
deletePreferredDefaultListID
_pptPreferredDefaultListIDKey
setPreferredDefaultListID:
setDatabaseMigrationTestModeEnabled:
databaseMigrationTimedOut
setDatabaseMigrationTimedOut:
cloudKitMigrationMaxNumInvocations
setCloudKitMigrationMaxNumInvocations:
cloudKitMigrationMaxNumFailures
setCloudKitMigrationMaxNumFailures:
cloudKitMigrationDelayAfterError
setCloudKitMigrationDelayAfterError:
cloudKitMigrationObserverPollingInterval
setCloudKitMigrationObserverPollingInterval:
cloudKitMigrationSimulatedError
setCloudKitMigrationSimulatedError:
cloudKitResultsLimitPerSyncOperation
setCloudKitResultsLimitPerSyncOperation:
cloudKitMigrationDisableCleanUp
setCloudKitMigrationDisableCleanUp:
observePreferredDefaultListIDWithBlock:
preferredDefaultListObjectIDUrl
setPreferredDefaultListObjectIDUrl:
acAccountIdentifierToMergeLocalDataIntoSyncData
setAcAccountIdentifierToMergeLocalDataIntoSyncData:
acAccountIdentifierToMigrateInactivatedCalDavData
setAcAccountIdentifierToMigrateInactivatedCalDavData:
cloudKitMergeLocalLastDateMaxRetryReached
setCloudKitMergeLocalLastDateMaxRetryReached:
cloudKitMergeLocalLastBuildVersionMaxRetryReached
setCloudKitMergeLocalLastBuildVersionMaxRetryReached:
spotlightIndexVersion
setSpotlightIndexVersion:
nextScheduledAlarmDate
setNextScheduledAlarmDate:
lastPresentAlarmDate
setLastPresentAlarmDate:
lastSuggestedAttributesAutoTrainingToken
setLastSuggestedAttributesAutoTrainingToken:
setSuggestedAttributesHarvestingOverrides:
setBestKForKNN:
setSuggestedAttributesTrainingOverrides:
setCoreBehaviorTrainingParameters:
setSuggestedAttributesAccepted:
lastSyncPoll
setLastSyncPoll:
userInteractionsData
setUserInteractionsData:
simulateMAIDAccount
setSimulateMAIDAccount:
setShowRemindersAsOverdue:
observeShowRemindersAsOverdueWithBlock:
enableWelcomeScreen
setEnableWelcomeScreen:
forceShowWelcomeScreen
setForceShowWelcomeScreen:
enableInAppDebugMenu
setEnableInAppDebugMenu:
setTodayNotificationFireTime:
streamTodayNotificationFireTime:
disableAlarmEngineDataSourcePrefetching
setDisableAlarmEngineDataSourcePrefetching:
enableAssignmentNotifications
setEnableAssignmentNotifications:
suggestedAttributesTrainingOverrides
suggestedAttributesHarvestingOverrides
suggestedAttributesAccepted
accountsListCategorizedCountsCache
setAccountsListCategorizedCountsCache:
debugSimulateSqliteFull
setDebugSimulateSqliteFull:
updateAcceptedAttributesForReminderWithID:attributeType:
hasSuggestedRecentlyForReminderWithID:attributeType:
ppt_handleInstall
ppt_handleRestore
removed
setRemoved:
stopObserving
setUserDefaults:
setUserDefaultsKey:
setBlock:
_removed
_userDefaultsKey
_block
setInterface:forSelector:argumentIndex:ofReply:
initForObservingAccountStoreChanges:
accountStoreDidChange:
addObserver:selector:name:object:
removeObserver:
_debug_primaryICloudACAccount
accessQueue
primaryICloudACAccountIsValid
accountStore
aa_primaryAppleAccount
setPrimaryICloudACAccountIsValid:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
displayAccount
internalInvalidatePrimaryICloudACAccount
saveAccount:withCompletionHandler:
primaryICloudACAccount
isEnabledForDataclass:
dataclassProperties
accountDescription
set_debug_primaryICloudACAccount:
sharedInstance
getAppleIDSession
accountDescriptionWithACAccount:
allICloudAccountsWithCloudKitEnabled
invalidatePrimaryICloudACAccount
saveDidChooseToMigrate:didFinishMigration:toACAccount:inStore:completionHandler:
primaryICloudAccountEnabled
primaryICloudAccountCalDavService
_unsetMigrationFlagsWithACAccount:inStore:completionHandler:
_setPrimaryICloudACAccount:
setAccountStore:
_primaryICloudACAccountIsValid
_primaryICloudACAccount
_accountStore
__debug_primaryICloudACAccount
transactionNumber
bundleID
processID
contextName
setTimestamp:
setChanges:
setTransactionNumber:
setStoreID:
setBundleID:
setProcessID:
setContextName:
setAuthor:
setToken:
_transactionNumber
_bundleID
_processID
_contextName
_resolveAccountID:
decodeStringForKey:
initWithCRCoder:
initWithUUID:entityName:
encodeString:forKey:
encodeWithCRCoder:
mergeWith:
deltaSince:in:
walkGraph:
realizeLocalChangesIn:
firstDayOfTheWeek
isEqualToRecurrenceRule:
stringValueAsDateOnly:isFloating:
iCalendarValueFromRecurrenceType:
iCalendarValueFromDate:isDateOnly:isFloating:
iCalendarValueFromWeekday:
stringWithString:
setFormatterBehavior:
setDateFormat:
setEventStartDate:
setEventEndDate:
setEventTimeZone:
setDaysOfTheWeek:
setDaysOfTheMonth:
setDaysOfTheYear:
setWeeksOfTheYear:
setMonthsOfTheYear:
setSetPositions:
setInterval:
_convertREMRecurrenceFrequencyToCalRecurrenceFrequency:
setFrequency:
setWeekStart:
weekStart
setEndDate:
copyOccurrenceDatesWithInitialDate:allDay:rangeStart:rangeEnd:timeZone:limit:
sortedArrayUsingSelector:
initWithRecurrenceRule:objectID:end:
_recurrenceEnd
_frequency
_interval
_firstDayOfTheWeek
_daysOfTheWeek
_daysOfTheMonth
_daysOfTheYear
_weeksOfTheYear
_monthsOfTheYear
_setPositions
initWithPersistentHistoryToken:
daemonVersion:
daemonStatus:
testInitialSyncWithAccountName:completion:
testReinitializeCloudKitWithCompletionHandler:
cancelCloudKitSync:
cloudKitStatus:
fireDebugNotificationWithText:identifier:categoryIdentifier:reference:isRemove:completion:
purgeDeletedObjectsWithCompletionHandler:
fetchGeofencesWithCompletion:
addGeofenceWithLatitude:longitude:radius:uuid:completion:
removeGeofenceWithUUID:completion:
simulateCoreLocationEnterRegionWithIdentifier:completion:
simulateCoreLocationExitRegionWithIdentifier:completion:
crashDaemonWithMessage:
fetchContactsMatching:completion:
logStoresDirectoryContents
dataAccessStatusReports:
resetBabysitterWithRestrictedAccountID:completion:
downloadContainerToOutputDir:completion:
phones
emails
intersectsSet:
initWithStringValue:
isLikePhoneNumber:
initWithPhones:emails:
representationFromData:
matchesContactRepresentation:
setPhones:
setEmails:
_phones
_emails
dataUsingEncoding:
dataWithBytes:length:
base64EncodedString
dataFromBase64String:
_debugPerformerWithReason:errorHandler:
_getBoolForKey:withDefaultValue:
_setBoolValue:forBehaviorKey:
_crashDaemonWithMessage:
_getIntegerForKey:withDefaultValue:
changeTrackingBehaviors
_setIntegerValue:forBehaviorKey:
fetchStatusReportsWithError:
isDataAccessEnabled
enableDataAccess
disableDataAccess
isBabySitterEnabled
enableBabySitter
disableBabySitter
applyChangeTrackingBehavior:
unapplyChangeTrackingBehavior:
setSortingStyle:
setSortingDirection:
isPersisted
initWithArray:copyItems:
setIsPersisted:
setSmartListTag:
_isPersisted
_ordering
trackedAccountChangeItems
trackedListChangeItems
trackedSmartListChangeItems
trackedReminderChangeItems
_trackAccountChangeItem:
parentAccountID
initWithObjectID:name:insertIntoAccountChangeItem:isGroup:
_trackListChangeItem:
addGroupWithName:toAccountGroupContextChangeItem:groupObjectID:
initWithObjectID:name:insertIntoAccountChangeItem:
addListWithName:toAccountChangeItem:listObjectID:
initWithObjectID:name:insertIntoListSublistContextChangeItem:
addListWithName:toListSublistContextChangeItem:listObjectID:
_updateListStorage:accountCapabilities:
_trackedSmartListChangeItemForObjectID:
initWithSaveRequest:storage:observeInitialValues:
_trackSmartListChangeItem:
_trackReminderChangeItem:
updateForKey:
_updateResolutionTokenMapForChangeItem:
_changeItemsAreAllEmpty
saveIsNoopIfNoChangedKeys
setSaved:
_prepareSave:
performPreSaveActions
_willSaveAccountChangeItems:listChangeItems:smartListChangeItems:reminderChangeItems:
performRecurrenceClone
setWithCapacity:
objectEnumerator
updateReminder:
trackedAccountCapabilities
_addAccountWithType:name:
_updateAccountWithListChangeItem:
addGroupWithName:toAccountGroupContextChangeItem:
addListWithName:toAccountChangeItem:
addListWithName:toListSublistContextChangeItem:
updateSmartList:
addReminderWithTitle:toReminderSubtaskContextChangeItem:
saveWithQueue:completion:
_updateTrackedAccountChangeItem:withObjectID:
_updateTrackedListChangeItem:withObjectID:
_updateTrackedSmartListChangeItem:withObjectID:
_updateTrackedReminderChangeItem:withObjectID:
_copyReminder:toListChangeItem:
_copyReminder:toReminderSubtaskContextChangeItem:
_copyReminderChangeItem:toListChangeItem:
_copyReminderChangeItem:toReminderSubtaskContextChangeItem:
setSaveIsNoopIfNoChangedKeys:
applyCRDTsWithoutMerging
setApplyCRDTsWithoutMerging:
setSyncToCloudKit:
_saved
_updateLastModifiedDates
_saveIsNoopIfNoChangedKeys
_cloneCompletedRecurrentRemindersAtSave
_applyCRDTsWithoutMerging
_syncToCloudKit
_trackedAccountChangeItems
_trackedListChangeItems
_trackedSmartListChangeItems
_trackedReminderChangeItems
_trackedAccountCapabilities
pathComponents
stringRepresentation
redactedDescription
_uuid
copyWithType:
initWithFetchExecutor:
fetchLimit
setFetchLimit:
storagesAndParentFetchRequest
storagesOnlyFetchRequest
countOnlyFetchRequest
objectIDsOnlyFetchRequest
metadataFetchRequest
fetchRequestWithFetchResultToken:
setFetchExecutor:
_fetchLimit
_fetchExecutor
metadataFromFetchResult:inStore:error:
initWithObjectID:accountID:name:isGroup:reminderIDsMergeableOrdering:
reminderIDUUIDStringsJSONDataFromReminderIDsMergeableOrdering:error:
initWithObjectID:accountID:name:isGroup:reminderIDsMergeableOrderingData:
reminderIDsMergeableOrderingData
setReminderIDsMergeableOrdering:
setIsGroup:
daExternalIdentificationTag
setDaExternalIdentificationTag:
daBulkRequests
setDaBulkRequests:
daDisplayOrder
setDaDisplayOrder:
setDaIsEventOnlyContainer:
daIsReadOnly
setDaIsReadOnly:
daIsImmutable
setDaIsImmutable:
daIsNotificationsCollection
setDaIsNotificationsCollection:
color
setColor:
badgeEmblem
setBadgeEmblem:
lastUserAccessDate
setLastUserAccessDate:
showingLargeAttachments
setShowingLargeAttachments:
reminderIDsOrderingHints
setReminderIDsOrderingHints:
reminderIDsToUndelete
setReminderIDsToUndelete:
remindersICSDisplayOrderChanged
sharedOwnerName
setSharedOwnerName:
sharedOwnerAddress
setSharedOwnerAddress:
setSharingStatus:
sharees
setSharees:
sharedOwnerID
setSharedOwnerID:
calDAVNotifications
setCalDAVNotifications:
isPlaceholder
setIsPlaceholder:
currentUserShareParticipantID
setCurrentUserShareParticipantID:
orderedSetWithArray:
dataWithPropertyList:format:options:error:
reminderIDsMergeableOrdering
reminderIDsMergeableOrderingFromReminderIDUUIDStringsJSONData:error:
dataWithJSONObject:options:error:
JSONObjectWithData:options:error:
_forceDisableFullRemindersSorting
set_forceDisableFullRemindersSorting:
initWithObjectID:accountID:name:
ekColor
hasDeserializedReminderIDsMergeableOrdering
setReminderIDsMergeableOrderingData:
_reminderIDsMergeableOrdering
_isGroup
_showingLargeAttachments
_remindersICSDisplayOrderChanged
_daIsReadOnly
_daIsImmutable
_daIsNotificationsCollection
_isPlaceholder
_color
_badgeEmblem
_parentAccountID
_reminderIDsMergeableOrderingData
_reminderIDsOrderingHints
_reminderIDsToUndelete
_sharedOwnerName
_sharedOwnerAddress
_sharingStatus
_sharees
_sharedOwnerID
_lastUserAccessDate
_calDAVNotifications
_daExternalIdentificationTag
_daBulkRequests
_daDisplayOrder
_currentUserShareParticipantID
setDescriptors:
setStartingDueDate:
setEndingDueDate:
setText:
setTextMatching:
startingDueDate
endingDueDate
descriptors
text
textMatching
andPredicateDescriptorWithDescriptors:
orPredicateDescriptorWithDescriptors:
predicateDescriptorForRemindersWithListID:
predicateDescriptorForRemindersWithParentReminderID:
predicateDescriptorForRemindersWithObjectIDs:
predicateDescriptorForRemindersWithDueDateOnOrBefore:
predicateDescriptorForRemindersWithDueDateOnOrAfter:
predicateDescriptorForRemindersWithDueDateBetween:and:
predicateDescriptorForRemindersWithCompleted:
predicateDescriptorForRemindersWithTitleEquals:
predicateDescriptorForRemindersWithTitleContains:
predicateDescriptorForRemindersWithTitleBeginsWith:
predicateDescriptorForRemindersWithTitleEndsWith:
_startingDueDate
_endingDueDate
_descriptors
_text
_textMatching
initWithTitle:dueAfter:dueBefore:isCompleted:hasLocation:location:
dueBefore
dueAfter
hasLocation
_dueAfter
_dueBefore
_hasLocation
_location
initWithList:
isSharedToMe
isSharedWithShareeCount:sharingStatus:
shareeContext
sharedOwner
formattedName
isShared
formattedSharedOwnerName
isOwnedByMe
shareesExcludingOwner
fetchRequestWithPredicateDescriptor:sortDescriptors:
appearanceContext
calDAVNotificationContext
reminderIDsOrdering
canBeShared
canBeIncludedInGroup
fetchRemindersAndSubtasksWithError:
sharingStatusText
hack_overrideReminderIDsOrderingWithOrderedObjectIDs:
_parentList
initWithRawValue:
badge
emblem
setList:
_list
fetchListsInGroup:error:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
_sharedOwner
initWithDocument:objectID:
replica
reminderIDsProxy
mutableOrderedSetValueForKey:
delegate
_orderedSet
addUndoCommandsForList:block:
listFromSerializedData:replica:
addReminder:
countOfReminderIDs
objectInReminderIDsAtIndex:
indexInReminderIDsOfObject:
insertObject:inReminderIDsAtIndex:
removeObjectFromReminderIDsAtIndex:
_reminderIDsStorage
_delegate
_replica
_remObjectID
initWithReplicaID:
insertString:atIndex:
initWithMergeableString:
initWithData:andReplicaID:
serialize
initWithReplicaIDSource:immutableDocumentToEdit:
rem_isEqual:
rem_copyWithReplicaIDForNewEdits:
mergeWithStringVersionedDocument:
mergedWithDocument:error:
deleteCharactersInRange:
insertAttributedString:atIndex:
setAttributes:range:
enumerateAttributesInRange:options:usingBlock:
immutableDocument
_test_insertString:atIndex:
remDebugTimeZone_LosAngeles
remDebugTimeZone_NewYork
remDebugTimeZone_GMT
isEqualToTimeZone:
getCharacters:range:
_shouldUseCentralizedDataPath
URLsForDirectory:inDomains:
URLForGroupContainerWithIdentifier:
applicationDocumentsURL
containerURLForSecurityApplicationGroupIdentifier:
bundleProxyForIdentifier:
groupContainerURLs
checkResourceIsReachableAndReturnError:
attributesForGroupContainerDirectory
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
mainContainerURL
URLByAppendingPathComponent:isDirectory:
locationBundleURL
setApplicationDocumentsURL:
mainContainerBackupURL
pptSentinelURLInContainerURL:
urlForIsolatedContainerWithIdentifier:
setHasDisplayDate:
setIsInitWithDueDateComponents:
setFloatingDateComponents:
setNonFloatingDateComponents:
setHasAlarmDateComponents:
_displayDateWithDueDateComponents:alarms:hasAlarmDateComponents:floatingDateComponents:nonFloatingDateComponents:displayDateUtils:
hasDisplayDate
isInitWithDueDateComponents
hasAlarmDateComponents
floatingDateComponents
nonFloatingDateComponents
updateDisplayDateWithDueDateComponents:alarm:alarmsProviding:
_hasDisplayDate
_hasAlarmDateComponents
_isInitWithDueDateComponents
_floatingDateComponents
_nonFloatingDateComponents
initWithSaveRequest:storage:changedKeysObserver:
dictionaryFromOrdering:
minStart
update:start:stride:orderLookup:
maxEnd
resetOrderingWithReminderIDs:start:
cleanupOrderingWithReminderIDs:
moveRemindersWithIDs:beforeReminderWithID:
moveRemindersWithIDs:afterReminderWithID:
initWithPurpose:
accountsFromStorages:
initWithExternalIdentifiers:
purpose
_purpose
initWithStorages:
valueStorage
setValueStorage:
storeProperty:forKey:
_valueStorage
setEmblem:
setEmoji:
_isJSONString:
_emojiFromRawString:
emoji
initWithEmblem:
initWithEmoji:
rawValue
_isSingleCharacterEmoji:
syncCloudKitWithReason:discretionary:queue:completion:
restartCloudKitSyncWithReason:queue:completion:
initWithObjectID:name:insertIntoAccountChangeItem:isGroup:withParentList:
initWithListChangeItem:
removeFromAccountAllowingUndo
_lowLevelAddReminderIDToOrdering:relativeToSiblingID:isAfter:
setByAddingObjectsFromArray:
_editReminderIDsOrderingUsingBlock:
_reassignReminderChangeItem:withParentReminderChangeItem:
_lowLevelAddReminderChangeItemToOrdering:atIndexOfSibling:isAfter:withParent:
numberWithUnsignedLong:
addEntriesFromDictionary:
removeFromParentAllowingUndo
optimisticallyInsertReminderIDToOrderingForReminderChangeItemBeingSaved:
undeleteRemindersWithoutUndoWithIDs:isCalDAV:
_testingOnly_setReminderIDsMergeableOrder:
parentAccount
_parentAccount
setBadge:
setListChangeItem:
_insertListChangeItem:adjacentToListChangeItem:isAfter:
_addCalDAVNotification:
addCalDAVNotificationWithUUIDString:hostURL:externalIdentifier:externalModificationTag:
removeCalDAVNotication:
clearCalDAVNotifications
updateCalDAVNotification:withBlock:
initShareeWithObjectID:accountID:listID:displayName:firstName:middleName:lastName:namePrefix:nameSuffix:nickname:address:status:accessLevel:
addSharee:
addShareeWithDisplayName:firstName:middleName:lastName:namePrefix:nameSuffix:nickname:address:status:accessLevel:
givenName
middleName
familyName
namePrefix
nameSuffix
nickname
addShareeWithDisplayName:firstName:lastName:address:status:accessLevel:
addShareeWithPersonNameComponents:address:status:accessLevel:
removeSharee:
removeAllSharees
copyListDataFrom:
exportICSCalendarFromReminders:exportingOption:
_icsCalendarItemsFromReminders:exportingOption:
icsTodoFromReminder:exportingOption:
initWithYear:month:day:
setDue:
initWithYear:month:day:hour:minute:second:timeZone:
initWithYear:month:day:hour:minute:second:
setDtstart:
_updateICSComponentWithReminder:icsCalendarItem:
setUid:
universalLink
initWithValue:type:
setX_apple_activity:
userActivityData
setX_apple_appLinkData:
setPercentComplete:
setStatus:
setX_apple_sort_order:
setSummary:
setDescription:
setDtstamp:
setLast_modified:
setCreated:
exportICSCalendarFromReminders:
icsTodoFromReminder:
CalGregorianGMTCalendar
initWithDate:
dtstart
setComponents:
initWithWeeks:days:hours:minutes:seconds:
initWithDuration:
setAction:
setX_wr_alarmuid:
setX_apple_proximity:
setAcknowledged:
setRelatedTo:
setX_apple_structured_location:
setValue:type:
setParameterValue:forName:
stringValue
ICSStringWithOptions:
setRrule:
initWithFrequency:
setWkst:
setCount:
setUntil:
initWithWeekday:number:
setByday:
setBymonth:
setBymonthday:
setByweekno:
setByyearday:
setBysetpos:
fetchRequestForRemindersListID:withSortDescriptors:
initWithReminder:
fetchRequestForRemindersListID:
fetchRequestForScheduledRemindersWithDueDateOnOrAfter:
_parentReminder
reminder
setReminder:
_reminder
initWithUndoBlocks:
_undoBlocks
dataFromUserActivity:
initWithType:storage:
_createUserActivityDataWithOptions:completionHandler:
initWithData:encoding:
_initWithUserActivityData:
stringForActivityType:
debugDescriptionDetails
activityType
webpageURL
siriIntent
userActivityWithUserActivity:completion:
userActivityWithDictionaryData:error:
initWithUserActivity:
initWithSiriIntent:
archivedDictionaryData
firstName
lastName
accessLevel
isEqualToSharee:
setGivenName:
setMiddleName:
setFamilyName:
setNamePrefix:
setNameSuffix:
setNickname:
rem_tidyFormattedNameString
formattedNameWithStyle:
personNameComponents
localizedStringFromPersonNameComponents:style:options:
formattedStringValue
initShareeWithObjectID:accountID:listID:displayName:firstName:lastName:address:status:accessLevel:
initShareeWithObjectID:accountID:listID:personNameComponents:address:status:accessLevel:
shortName
_firstName
_middleName
_lastName
_namePrefix
_nameSuffix
_nickname
_accessLevel
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
setMap:
initWithMap:
initWithDictionary:copyItems:
compare:forKey:
compareAndMergeWithMap:forKey:
keyEnumerator
mapWithData:
initTokenWithDefaultValueIfNecessaryForKey:
mergeWithMap:forKey:
getTokenForKey:
setToken:forKey:
getTokenKeys
_map
encodeExternalIdentifierForMarkedForDeletionObject:
initWithParentAccountObjectID:
initWithParentGroupObjectID:
listsFromAccountStorages:listStorages:store:
listsFromAccountStorages:listStorages:store:requestedExternalIdentifiers:
fetchListsIncludingMarkedForDeleteWithObjectIDs:error:
fetchListsIncludingSpecialContainersWithObjectIDs:error:
fetchListsWithExternalIdentifiers:inAccount:error:
initWithExternalIdentifiers:accountObjectID:
initWithExternalIdentifier:accountObjectID:
accountObjectID
_accountObjectID
groupObjectID
_groupObjectID
initWithAccountStorages:listStorages:objectIDs:
accountType
aa_isManagedAppleID
aa_isAccountClass:
rem_didChooseToMigrate
rem_didFinishMigration
rem_isManagedAppleID
rem_isRemindersMigrated
rem_isPrimaryAppleAccount
fetchRequestWithEntityName:
fetchRequest
setReplicaUUID:
sharedTopotextTimestamp
mergeWithString:mergeTimestamps:
stringsWithClocksNeedingUpdating
stringsWithClocksToResetAfterRealizingLocalChanges
currentDocumentObjectForDecoding
initWithArchive:andReplicaID:andSharedTimestamp:
currentDocumentObjectForEncoding
encodeWithCRCoder:string:
saveToArchive:
initWithCRCoder:string:
registerCRClasses
encodeDocument:
setCurrentDocument:
setKeySet:
setUuidSet:
setEncodedObjects:
currentDocument
encodeIntoProtobufTimestamp:coder:
startVersion
encodedObjects
valueWithNonretainedObject:
setTypeIndexForCurrentCustomObjectIfNecessary:
keySet
typeSet
uuidSet
typeIndexForClass:
currentCustomObjectForEncoding
mutableObjectIDForKey:
encodeObject:forObjectID:
indexForKey:
encodedDataWithDocument:
encodeUUID:forKey:
encodeInt32:forKey:
encodeUInt32:forKey:
encodeUInt64:forKey:
encodeUUIDIndexFromUUID:
.cxx_construct
currentDocObjectEncodingStack
_uuidSet
_keySet
_encodedObjects
_currentDocument
initWithValue:timestamp:
shortDescription
temporaryElementWithValue:
setValue:
_value
strongToStrongObjectsMapTable
encodeWithCRCoder:dictionary:
encodeWithCRCoder:dictionary:elementValueCoder:
contents
initWithCRCoder:dictionary:
decodeObjectForProtobufObjectID:
initWithCRCoder:dictionary:elementValueDecoder:
initWithProtobufTimestamp:decoder:
addDecoderCompletionHandler:dependency:for:
replicaClock
unserialisedIdentifier
setClock:forUUID:
setDocumentFor:
setRemoveClock:
clockForUUID:
removeUUID:
unserializedReplicaClock
setUnserializedReplicaClock:
removeClock
mergeWithDictionary:
minusVectorTimestamp:
localObject:
replaceCharactersInRange:withString:
enumerateKeysObjectsAndTimestampsUsingBlock:
setContents:
_contents
_removeClock
_clock
_subclock
mergeWithTimestamp:
compareTo:
TTCompare:
allUUIDs
setClock:subclock:forUUID:
sortedUUIDs
subclockForUUID:
incrementClockForUUID:
setObject:atIndexedSubscript:
initWithTimestamps:
isDocumentShared
clockElementForUUID:atIndex:
clockForUUID:atIndex:
setClock:forUUID:atIndex:
setClock:subclock:forUUID:atIndex:
setTimestamps:
_timestamps
increaseLengthBy:
dataWithData:
TT_gzipInflate
TT_gzipDeflate
initWithReplicaID:asFragment:
TTZero
initWithArchive:andReplicaID:
replaceCharactersInRange:withAttributedString:
beginEditing
endEditing
getSubstrings:forCharacterRange:
deleteSubstrings:withCharacterRanges:
orderedSubstrings
splitTopoSubstring:atIndex:
invalidateCache
insertAttributedString:after:before:
coalesce
selectionForCharacterRanges:selectionAffinity:
setSelectionAffinity:
rangeValue
selectionRanges
characterRangesForSelection:selectedSubstringsBlock:
valueWithRange:
selectionAffinity
shouldInvalidateCachedSubstringsWithTimestamp:
updateClock
unserialisedReplicaID
edited:range:changeInLength:
updateSubstringIndexes
getSubstrings:inOrderedSubstrings:forCharacterRange:
substring:modifiedAfter:
textEitherSideOfSelectionAnchor:wasModifiedAfter:
updateCache
ic_appendAttributedSubstring:fromRange:
isFragment
updateTopoIDRange:toNewRangeID:
traverseUnordered:
objectsNeedingUpdatedRanges
hasTopoIDsThatCanChange
minusHashTable:
generateIdsForLocalChangesSafeForSharedTimestamp:
cleanupObjectsNeedingUpdatedRanges
startNodes
endNodes
initWithIndexesInRange:
intersectsIndexesInRange:
addIndexesInRange:
mutableString
stringByAppendingPathComponent:
writeToFile:atomically:
dumpMergeData:
checkTimestampLogStyleErrors:
canMergeString:
check:
ic_replaceCharactersInRange:withAttributedSubstring:fromRange:
sortSplitNodes
updateAttributedStringAfterMerge
graphIsEqual:
TTShortDescription
replicaUUIDForCharacterAtIndex:
selectionForCharacterRanges:
characterRangesForSelection:
resetLocalReplicaClocksToTimestampValues
_testSetTextTimestamp:
updateTimestampsInRange:
moveRange:toIndex:
getSubstringBeforeTopoID:
getSubstrings:forTopoIDRange:
getCharacterRanges:forSubstrings:
getCharacterIndexForCharID:
enumerateSubstrings:
enumerateRangesModifiedAfter:usingBlock:
selection:wasModifiedAfter:
mergeWithString:
dotDescription:
hasLocalChanges
setHasLocalChanges:
setAttributedString:
replicaTextClock
replicaStyleClock
_startNodes
_endNodes
_orderedSubstrings
_unserializedClock
_editCount
_cacheInvalid
_updateRangeBlock
_hasLocalChanges
_replicaUUID
_objectsNeedingUpdatedRanges
_attributedString
_replicaTextClock
_replicaStyleClock
initWithContents:
textAttachmentAtIndex:
enumerateAttribute:inRange:options:usingBlock:
initWithUTF8String:
applyToString:
addUndoCommand:
replaceObjectAtIndex:withObject:
nsArray
initWithArchive:
initWithData:
_selectionRanges
_selectionAffinity
loadData:
loadArchive:
versionedDocumentSerializationVersion
loadDocumentArchive:
serializationVersion
dataWithBytesNoCopy:length:freeWhenDone:
mergeVersion:fromData:
minimumSupportedVersion
serializeCurrentVersion:
documentArchive
saveCurrentVersion:
futureVersionCount
mergeWithVersionedDocument:
maxDocumentVersion
setDocumentArchive:
_documentArchive
initWithData:andCapacity:
initWithArchive:andCapacity:
setStyle:
textAlignmentForParagraphStyleAlignment:
setAlignment:
writingDirectionForAttribute:
setWritingDirection:
setIndent:
setStartingItemNumber:
setHints:
style
alignment
paragraphStyleAlignmentForTextAlignment:
writingDirection
attributeForWritingDirection:
indent
startingItemNumber
hints
setSeen:
addToGroup:
commands
seen
containsIndexesInRange:
closeGroup
addCommand:
addSeenRange:
setCommands:
_seen
_commands
initWithVersion:startVersion:rootObject:replica:topoTimestamp:
initWithVersion:startVersion:rootObject:replica:
setSharedTopotextTimestamp:
setStringsWithClocksNeedingUpdating:
setStringsWithClocksToResetAfterRealizingLocalChanges:
mergeResultForMergingWithDocument:
mergeTimestampWithDocument:
_sharedTopotextTimestamp
_stringsWithClocksNeedingUpdating
_stringsWithClocksToResetAfterRealizingLocalChanges
initWithArchive:andReplicaID:withOrderedSubstrings:timestamp:
attributesForRun:
numberWithInt:
unsignedLongValue
saveAttributesOfString:toArchive:
attributesAtIndex:longestEffectiveRange:inRange:
saveAttributes:toArchive:
i_saveDeltasSinceTimestamp:toArchive:
saveDeltaSinceTimestamp:toArchive:
initWithTTArray:contents:document:
setArray:
_addObject:
_insertObject:atIndex:
_insertObject:withIdentifier:atIndex:forUndo:
removeObjectAtIndex:forUndo:
setMoveClock:
moveClock
firstIndexOf:fromIndex:
_moveClock
_array
hasDecodableValueForKey:
decodeInt32ForKey:
initWithInteger:
initWithDouble:
dependency
setDependency:
decodeDocumentFromData:replica:
isSubclassOfClass:
allocedDocObjects
typeSetForDecoding
typeToClassDict
willModifySelfInInitForClass:
setReplica:
setCompletionHandlers:
setUuidArray:
uuidArray
setTypeSetForDecoding:
setAllocedDocObjects:
stringWithUTF8String:
setCurrentDocObjectForDecodingPtr:
allocedObjectAtIndex:outNeedsInit:
sortCompletionHandlers
completionHandlers
currentDocObjectForDecodingPtr
currentObjectIDForKey:
decodedDocumentFromData:replica:
decodeObjectForKey:
decodeUUIDForKey:
decodeUInt32ForKey:
decodeUInt64ForKey:
decodeUUIDFromUUIDIndex:
_allocedDocObjects
_currentDocObjectForDecodingPtr
_typeSetForDecoding
_uuidArray
_completionHandlers
weakObjectsHashTable
initWithCRCoder:set:
setDictionary:
nextObject
setUpdated:
encodeWithCRCoder:set:
encodeWithCRCoder:set:elementValueCoder:
initWithCRCoder:set:elementValueDecoder:
member:
addObserver:
setObject:
setObservers:
_dictionary
initWithReplica:andCounter:
initWithContents:timestamp:document:
encodeIntoProtobufRegisterLatest:coder:
initWithProtobufRegisterLatest:decoder:
initWithContents:document:
mergeWithRegisterLatest:
timestampForReplica:
_setContents:
isEqualContents:
values
cachedValues
setCachedValues:
mergeWithRegisterMultiValue:
initWithValues:
allContents
setValues:
_values
_cachedValues
needsParagraphCleanup
setNeedsParagraphCleanup:
needsListCleanup
setNeedsListCleanup:
isEqualToParagraphStyle:
isEqualToModelParagraphStyle:
isList
isUnknownStyle
attribute:atIndex:effectiveRange:
defaultParagraphStyle
paragraphStyleNamed:
mutableCopyWithZone:
isEqualToModelComparable:
canIndent
isHeader
preferSingleLine
wantsFollowingNewLine
uniqueToLine
listBulletInAttributedString:atIndex:
trackingUUID
_needsParagraphCleanup
_needsListCleanup
_style
_hints
_alignment
_writingDirection
_indent
_startingItemNumber
compare:with:
mergeWithRegisterGreatest:
setAttributes:substring:
attributeRanges
_attributeRanges
initWithCRCoder:stringArray:
serializeDataFromArchive:
whitelistedTypingAttributes
attributesAtIndex:effectiveRange:
initWithString:attributes:
whitelistedAttributesForModel
attributesEqual:toRange:modelEqual:
attributesEqual:to:modelEqual:
whitelistedAttributesForStyle
CRProperties
registerWithType:contents:
setupConstraintsFor:in:
initWithIdentity:fields:
objects
identity
fields
mergeWithObject:
CR_shortDescription
hasPrefix:
keyFromSelector:
setFieldKey:value:
_identity
_fields
constant
CR_repeatedCharUUID:
CR_zero
fontName
pointSize
fontHints
initWithName:size:hints:
nativeFont
setNativeFont:
_fontHints
_fontName
_pointSize
_nativeFont
initWithVersion:rootObject:replica:
updateGraphDocumentPointers
updateObjectsSet
hashTableWithOptions:
walkGraph:root:
maxClock:forUUID:
mergeWithData:
documentWithReplica:
documentWithRootObject:replica:
updateObjects:
deltaSince:
_startVersion
_rootObject
_objects
_replicaClock
_unserializedReplicaClock
setMergeableString:
_mergeableString
encodeWithCRCoder:array:
initWithCRCoder:array:
registerWithType:contents:document:
initWithArchive:andReplicaID:withOrderedSubstrings:
saveSubstrings:archiveSet:linkSet:archivedString:toArchive:
attributedSubstringFromRange:
appendAttributedString:
serializeDeltaSinceTimestamp:
isEqualToTimestamp:
nextTimestampForReplica:
nextTimestamp
earlierTimestamp:
laterTimestamp:
encodeWithCRCoder:orderedSet:
initWithCRCoder:orderedSet:
initWithOrdering:elements:document:
_registerClass:forType:cluster:
clusterTypeSet
_clusterTypeSet
CR_toStdString
CR_UUIDFromStdString:
insertStrings
deleteRanges
applyUndoCommand:
undeleteSubstrings:
cachedIdentifierSet
regenerateNSOrderedIdentifierSetAndIndexMapping
generateNSOrderedIdentifierSetWithIndexMapping:
addIndex:
indexSetWithIndex:
objectForIdentifier:
cachedIndexMapping
firstIndex
identifierForObjectInCachedSet:
shiftCachedIndicesStartingAtIndex:by:
undoablyRemoveObjectIdentifiersFromElements:
wipeoutCaches
undoablyInsertObjectIdentifiersIntoElements:
shiftIndexesStartingAtIndex:by:
enumerateIndexesUsingBlock:
_removeObjectsFromOrderingAtIndices:
moveObjectFromIndex:toIndex:mutableSafe:
removeIndex:
reinsertIdentifier:withMaskedIdentifiers:atIndex:forObjectToMove:
moveObjectsAtIndexes:toIndex:
enumerateIndexesWithOptions:usingBlock:
lastIndex
containsObjectEqualTo:
safeMoveObjectFromIndex:toIndex:
realizeElementMutations
_cachedIdentifierSet
_cachedIndexMapping
updateInsertTopoIDRange:toNewRangeID:
_deleteRanges
_insertStrings
setCrTimestamp:
crTimestamp
_crTimestamp
@28@0:8@16B24
@24@0:8@16
@24@0:8q16
@32@0:8q16q24
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
B24@0:8@16
q16@0:8
@20@0:8B16
@28@0:8q16B24
@"NSString"16@0:8
B32@0:8@16@24
q32@0:8@16@24
v24@0:8^{ReplicaEntry=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]iII{RepeatedPtrField<replica_manager::VectorTimestampElement>=^^viii}}16
@24@0:8r^{ReplicaEntry=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]iII{RepeatedPtrField<replica_manager::VectorTimestampElement>=^^viii}}16
v16@0:8
@"NSArray"
@40@0:8I16@20B28@32
I16@0:8
v20@0:8I16
v20@0:8B16
@"REMClockElementList"
@"<REMReplicaManagerClient>"
@32@0:8@16@24
@32@0:8@16^@24
v32@0:8@16@24
@32@0:8r^{ReplicaManager=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<replica_manager::ReplicaEntry>=^^viii}}16^@24
v24@0:8^{ReplicaManager=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<replica_manager::ReplicaEntry>=^^viii}}16
v24@0:8@?16
v32@0:8@16@?24
@24@0:8^@16
@28@0:8B16^@20
v24@0:8Q16
v24@0:8q16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableOrderedSet"
@"NSMutableDictionary"
@32@0:8@16Q24
@"NSData"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"REMReplicaManager"24@0:8@"REMObjectID"16
@"NSDictionary"24@0:8@"NSSet"16
@"REMStore"
@40@0:8@16@24^@32
v52@0:8@16@24@32B40@44
B52@0:8@16@24B32@36^@44
v40@0:8@16@24@32
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?>16
v32@0:8@"NSArray"16@?<v@?>24
@32@0:8q16@24
@40@0:8q16@24@32
@"NSString"24@0:8@"NSString"16
@"NSSet"16@0:8
@"REMResolutionTokenMap"16@0:8
v24@0:8@"REMResolutionTokenMap"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@24@0:8@"REMSaveRequest"16
v24@0:8@"NSString"16
@48@0:8@16@24@32@40
@44@0:8@16@24@32B40
@40@0:8@16@24@32
@40@0:8q16q24@32
@88@0:8q16q24@32@40@48@56@64@72@80
@96@0:8q16q24q32@40@48@56@64@72@80@88
d32@0:8@16@24
v28@0:8@16B24
@"REMSaveRequest"
@"REMReminderStorage"
@"REMChangedKeysObserver"
@"REMReminderChangeItem"
@24@0:8#16
@48@0:8@16Q24Q32^@40
@48@0:8@16@24Q32Q40
v24@0:8#16
@"NSMutableArray"
@40@0:8@16@24q32
@"NSMutableSet"
B32@0:8@16^@24
@36@0:8@16B24^@28
@44@0:8@16@24B32^@36
@48@0:8@16@24@32^@40
B80@0:8@16@24@32@40@48@56@64^@72
v88@0:8@16@24@32@40@48@56@64@72@?80
Q32@0:8@16^@24
v28@0:8B16@?20
@32@0:8@16@?24
v88@0:8@16@24@32@40@48@56B64B68@72@?80
v40@0:8@16@24@?32
@24@0:8@?16
@"REMStoreContainerToken"
@"_REMInProgressSaveRequestsContainer"
@"<REMDaemonController>"
v48@0:8@16q24@32@?40
@"REMChangeTracking"32@0:8@"REMObjectID"16@"NSString"24
@"REMChangeTracking"40@0:8@"REMObjectID"16@"NSString"24@"NSSet"32
v36@0:8@16B24@?28
@72@0:8@16@24@32@40@48@56^@64
v40@0:8@16B24B28@?32
@"NSUUID"
@"REMFetchResultToken"
@"NSDictionary"
@"REMObjectID"16@0:8
@"REMObjectID"24@0:8@"NSUUID"16
@"REMObjectID"
@32@0:8@16d24
@24@0:8d16
d16@0:8
v24@0:8d16
@"NSDateComponents"
@32@0:8@16q24
@"REMStructuredLocation"
@"REMContactRepresentation"
@24@0:8Q16
Q24@0:8@16
@"REMReplicaIDSource"
@"CRDocument"
v24@0:8@"REMReplicaIDHelper"16
@"<REMReplicaManagerProviding>"16@0:8
v24@0:8@"<REMReplicaManagerProviding>"16
v32@0:8@16@?<v@?@>24
@32@0:8Q16Q24
@"<REMReplicaManagerProviding>"
@"REMReplicaIDHelper"
@"REMMutableCRUndo"
@48@0:8@16q24@32@40
@40@0:8@16q24@32
@"NSString"
@"REMCRMergeableOrderedSet"
@"NSSet"
@"REMResolutionTokenMap"
@96@0:8q16q24@32@40@48@56@64@72@80@88
q24@0:8@16
@84@0:8q16q24@32@40@48@56@64@72B80
q48@0:8@16@24@32o^@40
q112@0:8q16q24@32@40@48@56@64@72@80@88@96o^@104
@"NSDictionary"16@0:8
@40@0:8@16@24Q32
@"REMListPredicateDescriptor"
@"<REMSaveRequestTrackedValue>"
@36@0:8@16@24B32
@76@0:8q16q24q32q40q48q56B64@68
@"REMClockElementList"24@0:8@"NSUUID"16
@"REMChangeToken"
@"NSDate"
v48@0:8@16@24@32^v40
@"NSObject"
v32@0:8B16B20@?24
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
v40@0:8@"REMObjectID"16B24B28@?<v@?@"REMMigrationResult"@"NSError">32
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?@"CKRecord"@"NSError">16
v32@0:8B16B20@?<v@?@"NSError">24
v32@0:8@"REMObjectID"16@?<v@?@"CKRecord"@"NSError">24
@"REMAlarmTrigger"
B40@0:8@16@24B32B36
@"REMCRMergeableStringDocument"
@"NSURL"
@"REMUserActivity"
@"REMDisplayDate"
q32@0:8@16^@24
v44@0:8@16@24B32@36
@"REMAccountStorage"
@"REMAccountChangeItem"
@"REMReminderPredicateDescriptor"
@36@0:8@16B24@28
@"NSTimeZone"
@"REMSmartListStorage"
@32@0:8q16^@24
v32@0:8@16^@24
v40@0:8@16@?24@?32
@"<REMChangeTrackingClientIdentifying>"
@40@0:8#16@24^@32
@72@0:8@16@24@32@40@48@56@64
v32@0:8q16@?24
v48@0:8@16@24Q32@?40
v24@0:8@?<v@?@"REMChangeToken">16
v32@0:8q16@?<v@?@"REMChangeToken">24
v32@0:8@"NSString"16@?<v@?@"REMChangeToken">24
v32@0:8@"<REMChangeTrackingClientIdentifying>"16@?<v@?@"REMChangeTrackingState"@"NSError">24
v40@0:8@"REMChangeTrackingState"16@"<REMChangeTrackingClientIdentifying>"24@?<v@?@"NSError">32
v48@0:8@"REMChangeToken"16@"NSString"24Q32@?<v@?@"REMChangeSet"@"NSError">40
v48@0:8@"NSDate"16@"NSString"24Q32@?<v@?@"REMChangeSet"@"NSError">40
v32@0:8@"REMChangeToken"16@?<v@?@"NSError">24
v32@0:8@"NSDate"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
d40@0:8@16@24d32
q24@0:8q16
@72@0:8@16@24@32@40Q48@56@64
@88@0:8@16@24@32@40Q48@56@64Q72Q80
@56@0:8@16@24@32@40@48
@60@0:8@16B24d28Q36Q44@52
@"REMNSPersistentHistoryChangeTombstone"
@"REMChangeTransaction"
@"_REMNSPersistentHistoryChangeStorage"
@"NSPersistentHistoryChange"
B28@0:8@16B24
B40@0:8q16#24@?32
@"NSError"
@"NSNumber"
@"NSArray"16@0:8
@"REMChangeTombstone"
@24@0:8@?<v@?@"NSError">16
@"NSObject<OS_dispatch_queue>"
@"<REMXPCSuggestedAttributesPerformer>"
@60@0:8@16@24@32@40@48B56
@64@0:8@16@24@32@40@48:56
@52@0:8@16@24@32@40B48
@"REMReminderFetchOptions"
B32@0:8#16@24
B32@0:8^q16^@24
@32@0:8#16q24
v56@0:8@16#24@32@?40@?48
@36@0:8#16@24B32
@32@0:8#16@24
v40@0:8@16#24q32
@"<REMDAAccountProviding>"
@"REMChangeSet"
@"REMChangeTracking"
@"REMChangeTrackingState"
@?16@0:8
@?<@"<_REMDAChangeTrackableModel>"@?@"REMObjectID"B@"REMStore"^@>16@0:8
@?<@"NSDictionary"@?@"NSArray"@"REMStore"^@>16@0:8
@?<@"<REMDAChangedIdentifierResult>"@?@"REMChangeTombstone">16@0:8
@?<@"<REMDAChangedIdentifierResult>"@?@"<_REMDAChangeTrackableModel>">16@0:8
@32@0:8@16#24
@64@0:8@16@24@32@40@48q56
@72@0:8@16@24@32@40@48q56@64
@64@0:8@16@24@32@40q48@56
@40@0:8q16d24@32
@40@0:8@16d24d32
@56@0:8@16@24d32d40@48
@64@0:8@16@24@32@40@48@56
v48@0:8@16Q24@32@40
v40@0:8Q16@24@32
B24@0:8^@16
@"REMFetchMetadata"
B32@0:8^B16^@24
@"REMAccountCapabilities"
@"REMAccount"
@"NSUUID"16@0:8
@"<REMReplicaClockProviding>"
@"<REMReplicaIDHelperOwner>"
Q32@0:8@16Q24
d32@0:8@16d24
@"<REMXPCChangeTrackingPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
@"<REMXPCDebugPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
@"<REMXPCDebugPerformer>"24@0:8@?<v@?@"NSError">16
@"<REMXPCStorePerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCStorePerformer>">24@?<v@?@"NSError">32
@"<REMXPCSyncInterfacePerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCSyncInterfacePerformer>">24@?<v@?@"NSError">32
@"<REMXPCIndexingPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCIndexingPerformer>">24@?<v@?@"NSError">32
@40@0:8@16@24@?32
v48@0:8@16@24@?32@?40
@"<REMXPCDaemonControllerCloudKitNetworkActivityDelegate>"
@"NSXPCConnection"
v24@0:8@"NSNumber"16
@96@0:8@16@24d32d40d48@56@64@72@80@88
@48@0:8d16d24d32d40
@56@0:8d16d24d32d40Q48
@32@0:8d16d24
@80@0:8d16d24d32d40Q48@56@64@72
@"NSUserDefaults"
@"REMUserDefaults"
v48@0:8@16@24@32@?40
v96@0:8@16@24@32@40@48@56@64Q72B80B84@?88
v32@0:8@"REMFetchRequest"16@?<v@?@"REMFetchResult"@"NSError">24
v32@0:8@"REMStoreInvocation"16@?<v@?@"REMStoreInvocationResult"@"NSError">24
v48@0:8@"REMStoreSwiftInvocation"16@"NSData"24@"NSDictionary"32@?<v@?@"REMStoreSwiftInvocationResult"@"NSError">40
v32@0:8@"REMObjectID"16@?<v@?@"REMReplicaManagerSerializedData"@"NSError">24
v40@0:8@"REMObjectID"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"REMDistributedEvaluationCollectionOptions"16@?<v@?@"NSData"@"NSError">24
v96@0:8@"NSArray"16@"NSArray"24@"NSArray"32@"NSArray"40@"NSDictionary"48@"NSDictionary"56@"NSString"64Q72B80B84@?<v@?@"NSError">88
v32@0:8@"REMObjectID"16@?<v@?@"CKShare"@"NSError">24
v32@0:8@"CKShare"16@?<v@?@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v28@0:8B16@?<v@?BB@"NSError">20
v36@0:8@"NSString"16B24@?<v@?BB@"NSError">28
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSString"16@?<v@?@"<REMXPCSuggestedAttributesPerformer>"@"NSError">24
v32@0:8@"REMObjectID"16@?<v@?@"NSNumber"@"NSError">24
v48@0:8B16B20@24@32@?40
@"ACAccount"
@"ACAccountStore"
@"REMNSPersistentHistoryToken"
@"_REMNSPersistentHistoryTransactionStorage"
v24@0:8@"<CRDataType>"16
@"<CRDataType>"32@0:8@"CRVectorTimestamp"16@"CRDocument"24
v24@0:8@"CRDocument"16
v24@0:8@?<v@?@>16
v24@0:8@"CRCoder"16
@24@0:8@"CRCoder"16
@32@0:8@16B24B28
@52@0:8@16@24@32B40@44
i24@0:8q16
@64@0:8@16@24@32q40q48@56
@120@0:8@16@24@32q40q48q56@64@72@80@88@96@104@112
@24@0:8B16B20
@"REMRecurrenceEnd"
v40@0:8@"REMStoreContainerToken"16@"NSString"24@?<v@?@"<REMXPCChangeTrackingPerformer>"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"<REMXPCDebugPerformer>"@"NSError">24
v48@0:8@"NSString"16@"REMStoreContainerToken"24@"NSString"32@?<v@?@"<REMXPCStorePerformer>"@"NSError">40
v32@0:8@"NSString"16@?<v@?@"<REMXPCSyncInterfacePerformer>"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"<REMXPCIndexingPerformer>"@"NSError">24
@"NSPersistentHistoryToken"
v60@0:8@16@24@32@40B48@?52
v56@0:8d16d24d32@40@?48
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?q@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSDictionary"@"NSError">16
v60@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
v32@0:8@"REMObjectID"16@?<v@?@"NSString">24
v24@0:8@?<v@?@"NSArray">16
v56@0:8d16d24d32@"NSUUID"40@?<v@?>48
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8@"NSString"16@?<v@?>24
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"REMStoreContainerToken"@"NSError">16
v32@0:8@"REMStoreContainerToken"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v28@0:8B16@20
v32@0:8q16@24
q32@0:8@16q24
@"REMXPCDaemonController"
v48@0:8@16@24@32@40
@"_REMFetchExecutor"
@"NSOrderedSet"
@"REMColor"
B32@0:8Q16q24
@"REMListStorage"
@"REMList"
@"REMSharee"
v32@0:8@16Q24
@"CRTombstoneOrderedSet"
@"NSObject<REMCRReminderIDListDelegate>"
@"TTMergeableStringVersionedDocument"
@60@0:8@16@24B32@36@44@52
v32@0:8@16d24
v48@0:8@16d24d32@40
v44@0:8@16B24@28@?36
B36@0:8@16@24B32
@"REMListChangeItem"
v36@0:8@16@24B32
@96@0:8@16@24@32@40@48@56@64@72q80q88
@64@0:8@16@24@32@40q48q56
@48@0:8@16@24q32q40
@"REMReminder"
@120@0:8@16@24@32@40@48@56@64@72@80@88@96q104q112
@88@0:8@16@24@32@40@48@56@64q72q80
@72@0:8@16@24@32@40@48q56q64
@32@0:8@16r^{String=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{RepeatedPtrField<topotext::Substring>=^^viii}^{VectorTimestamp}{RepeatedPtrField<topotext::AttributeRun>=^^viii}{RepeatedPtrField<topotext::Attachment>=^^viii}}24
v32@0:8@16^{String=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{RepeatedPtrField<topotext::Substring>=^^viii}^{VectorTimestamp}{RepeatedPtrField<topotext::AttributeRun>=^^viii}{RepeatedPtrField<topotext::Attachment>=^^viii}}24
v32@0:8@16^{ObjectID=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i(ContentsUnion=qQd^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}I)[1I]}24
v32@0:8d16@24
v28@0:8i16@20
v28@0:8I16@20
v32@0:8Q16@24
^{ObjectID=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i(ContentsUnion=qQd^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}I)[1I]}24@0:8@16
^{Document_CustomObject=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>=^^viii}i}16@0:8
^{Document_DocObject=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i(ContentsUnion=^{RegisterLatest}^{RegisterLatest}^{RegisterLatest}^{Dictionary}^{Dictionary}^{Dictionary}^{Timestamp}^{VectorTimestamp}^{Index}^{String}Q^{OneOf}^{Document_CustomObject}^{StringArray}^{Array}^{OrderedSet})[1I]}16@0:8
i24@0:8@16
^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{VectorTimestamp}^{VectorTimestamp}{RepeatedPtrField<CRDT::Document_DocObject>=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}^{VectorTimestamp}}16@0:8
v24@0:8^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{VectorTimestamp}^{VectorTimestamp}{RepeatedPtrField<CRDT::Document_DocObject>=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}^{VectorTimestamp}}16
{vector<CRDT::Document_DocObject *, std::__1::allocator<CRDT::Document_DocObject *> >="__begin_"^^{Document_DocObject}"__end_"^^{Document_DocObject}"__end_cap_"{__compressed_pair<CRDT::Document_DocObject **, std::__1::allocator<CRDT::Document_DocObject *> >="__value_"^^{Document_DocObject}}}
^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{VectorTimestamp}^{VectorTimestamp}{RepeatedPtrField<CRDT::Document_DocObject>=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}^{VectorTimestamp}}
@"<CRDataType>"
@"CRVectorTimestamp"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v32@0:8@16^{Dictionary=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<CRDT::Dictionary_Element>=^^viii}}24
v40@0:8@16^{Dictionary=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<CRDT::Dictionary_Element>=^^viii}}24@?32
@32@0:8@16r^{Dictionary=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<CRDT::Dictionary_Element>=^^viii}}24
@40@0:8@16r^{Dictionary=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<CRDT::Dictionary_Element>=^^viii}}24@?32
@"NSMapTable"
v40@0:8Q16Q24@32
v40@0:8Q16@24Q32
v48@0:8Q16Q24@32Q40
v40@0:8{_NSRange=QQ}16@32
v32@0:8{_NSRange=QQ}16
^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}16@0:8
v32@0:8^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}16^{vector<_NSRange, std::__1::allocator<_NSRange> >=^{_NSRange}^{_NSRange}{__compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >=^{_NSRange}}}24
{TopoIDRange={TopoID=@I}I}40@0:8@16^{TopoSubstring={TopoIDRange={TopoID=@I}I}{TopoID=@I}IB{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}I}24^{TopoSubstring={TopoIDRange={TopoID=@I}I}{TopoID=@I}IB{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}I}32
v40@0:8{_NSRange=QQ}16Q32
v40@0:8^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}16{_NSRange=QQ}24
v48@0:8^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}16^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}24{_NSRange=QQ}32
^{TopoSubstring={TopoIDRange={TopoID=@I}I}{TopoID=@I}IB{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}I}32@0:8{TopoID=@I}16
v48@0:8^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}16{TopoIDRange={TopoID=@I}I}24
v32@0:8^{vector<_NSRange, std::__1::allocator<_NSRange> >=^{_NSRange}^{_NSRange}{__compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >=^{_NSRange}}}16^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}24
Q32@0:8{TopoID=@I}16
q32@0:8^{TopoSubstring={TopoIDRange={TopoID=@I}I}{TopoID=@I}IB{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}I}16@24
B40@0:8{TopoID=@I}16@32
^{TopoSubstring={TopoIDRange={TopoID=@I}I}{TopoID=@I}IB{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}I}28@0:8^{TopoSubstring={TopoIDRange={TopoID=@I}I}{TopoID=@I}IB{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}I}16I24
v64@0:8{TopoIDRange={TopoID=@I}I}16{TopoIDRange={TopoID=@I}I}40
Q28@0:8@16B24
{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >="__begin_"^^{TopoSubstring}"__end_"^^{TopoSubstring}"__end_cap_"{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >="__value_"^^{TopoSubstring}}}
@"TTVectorMultiTimestamp"
@"NSObject<TTMergeableStringDelegate>"
@"NSHashTable"
@"NSMutableAttributedString"
v48@0:8Q16{_NSRange=QQ}24q40
@"NSObject<CRUndoDelegate>"
@"TTMergeableAttributedString"
^{vector<std::__1::pair<TopoID, TopoID>, std::__1::allocator<std::__1::pair<TopoID, TopoID> > >=^{pair<TopoID, TopoID>}^{pair<TopoID, TopoID>}{__compressed_pair<std::__1::pair<TopoID, TopoID> *, std::__1::allocator<std::__1::pair<TopoID, TopoID> > >=^{pair<TopoID, TopoID>}}}16@0:8
@24@0:8r^{Selection=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<topotext::Selection_Range>=^^viii}i}16
v24@0:8^{Selection=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<std::__1::basic_string<char> >=^^viii}{RepeatedPtrField<topotext::Selection_Range>=^^viii}i}16
{vector<std::__1::pair<TopoID, TopoID>, std::__1::allocator<std::__1::pair<TopoID, TopoID> > >="__begin_"^{pair<TopoID, TopoID>}"__end_"^{pair<TopoID, TopoID>}"__end_cap_"{__compressed_pair<std::__1::pair<TopoID, TopoID> *, std::__1::allocator<std::__1::pair<TopoID, TopoID> > >="__value_"^{pair<TopoID, TopoID>}}}
@24@0:8r^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<versioned_document::Version>=^^viii}I}16
v24@0:8r^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<versioned_document::Version>=^^viii}I}16
v24@0:8^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<versioned_document::Version>=^^viii}I}16
@24@0:8^I16
v24@0:8^{Version=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]iII^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}16
^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<versioned_document::Version>=^^viii}I}16@0:8
^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<versioned_document::Version>=^^viii}I}
@24@0:8r^{VectorTimestamp=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<topotext::VectorTimestamp_Clock>=^^viii}}16
v24@0:8^{VectorTimestamp=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<topotext::VectorTimestamp_Clock>=^^viii}}16
@32@0:8r^{VectorTimestamp=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<topotext::VectorTimestamp_Clock>=^^viii}}16Q24
@24@0:8r^{ParagraphStyle=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]iIiii^{Todo}II}16
v24@0:8^{ParagraphStyle=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]iIiii^{Todo}II}16
Q20@0:8i16
i24@0:8Q16
v24@0:8@"TTMergeableUndoString"16
B24@0:8@"TTMergeableStringUndoGroup"16
B40@0:8{TopoIDRange={TopoID=@I}I}16
@"TTCRVectorMultiTimestamp"
@48@0:8r^{String=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{RepeatedPtrField<topotext::Substring>=^^viii}^{VectorTimestamp}{RepeatedPtrField<topotext::AttributeRun>=^^viii}{RepeatedPtrField<topotext::Attachment>=^^viii}}16@24^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}32@40
v24@0:8^{String=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{RepeatedPtrField<topotext::Substring>=^^viii}^{VectorTimestamp}{RepeatedPtrField<topotext::AttributeRun>=^^viii}{RepeatedPtrField<topotext::Attachment>=^^viii}}16
q20@0:8i16
@24@0:8r^{AttributeRun=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{ParagraphStyle}II^{Font}II^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}ii^{Color}^{AttachmentInfo}Q}16
v32@0:8@16^{AttributeRun=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{ParagraphStyle}II^{Font}II^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}ii^{Color}^{AttachmentInfo}Q}24
@44@0:8@16@24Q32B40
v28@0:8Q16B24
v32@0:8Q16Q24
@"TTArray"
@"CRDictionary"
@32@0:8Q16^B24
r^{ObjectID=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i(ContentsUnion=qQd^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}I)[1I]}24@0:8@16
@24@0:8r^{ObjectID=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i(ContentsUnion=qQd^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}I)[1I]}16
d24@0:8@16
I24@0:8@16
v40@0:8@?16@24@32
r^{Document_DocObject=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i(ContentsUnion=^{RegisterLatest}^{RegisterLatest}^{RegisterLatest}^{Dictionary}^{Dictionary}^{Dictionary}^{Timestamp}^{VectorTimestamp}^{Index}^{String}Q^{OneOf}^{Document_CustomObject}^{StringArray}^{Array}^{OrderedSet})[1I]}16@0:8
v24@0:8r^{Document_DocObject=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i(ContentsUnion=^{RegisterLatest}^{RegisterLatest}^{RegisterLatest}^{Dictionary}^{Dictionary}^{Dictionary}^{Timestamp}^{VectorTimestamp}^{Index}^{String}Q^{OneOf}^{Document_CustomObject}^{StringArray}^{Array}^{OrderedSet})[1I]}16
r^{Document_DocObject=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i(ContentsUnion=^{RegisterLatest}^{RegisterLatest}^{RegisterLatest}^{Dictionary}^{Dictionary}^{Dictionary}^{Timestamp}^{VectorTimestamp}^{Index}^{String}Q^{OneOf}^{Document_CustomObject}^{StringArray}^{Array}^{OrderedSet})[1I]}
@32@0:8r^{RegisterLatest=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{Timestamp}^{ObjectID}}16@24
v32@0:8^{RegisterLatest=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{Timestamp}^{ObjectID}}16@24
@"CRTimestamp"
@"CRSet"
@20@0:8I16
B24@0:8@"<TTModelAttributeComparable>"16
^{vector<std::__1::pair<TopoIDRange, NSDictionary *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSDictionary *> > >=^{pair<TopoIDRange, NSDictionary *>}^{pair<TopoIDRange, NSDictionary *>}{__compressed_pair<std::__1::pair<TopoIDRange, NSDictionary *> *, std::__1::allocator<std::__1::pair<TopoIDRange, NSDictionary *> > >=^{pair<TopoIDRange, NSDictionary *>}}}16@0:8
^{vector<std::__1::pair<TopoIDRange, NSDictionary *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSDictionary *> > >=^{pair<TopoIDRange, NSDictionary *>}^{pair<TopoIDRange, NSDictionary *>}{__compressed_pair<std::__1::pair<TopoIDRange, NSDictionary *> *, std::__1::allocator<std::__1::pair<TopoIDRange, NSDictionary *> > >=^{pair<TopoIDRange, NSDictionary *>}}}
@24@0:8r^{StringArray=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{String}{RepeatedPtrField<CRDT::StringArray_ArrayAttachment>=^^viii}}16
@32@0:8r^{StringArray=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{String}{RepeatedPtrField<CRDT::StringArray_ArrayAttachment>=^^viii}}16@24
v24@0:8^{StringArray=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{String}{RepeatedPtrField<CRDT::StringArray_ArrayAttachment>=^^viii}}16
@32@0:8@16r^{StringArray=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{String}{RepeatedPtrField<CRDT::StringArray_ArrayAttachment>=^^viii}}24
@32@0:8Q16^{_NSRange=QQ}24
v40@0:8@16{_NSRange=QQ}24
B48@0:8@16{_NSRange=QQ}24^B40
B40@0:8@16@24^B32
v32@0:8@16^{TopoSubstring={TopoIDRange={TopoID=@I}I}{TopoID=@I}IB{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}I}24
@20@0:8C16
@36@0:8@16d24I32
v32@0:8@?16@24
@32@0:8r^{Document=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<versioned_document::Version>=^^viii}I}16@24
v56@0:8{_NSRange=QQ}16@32{_NSRange=QQ}40
@24@0:8r^{Font=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}fI}16
v24@0:8^{Font=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}fI}16
v32@0:8@16^{Array=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{StringArray}^{Dictionary}}24
@32@0:8@16r^{Array=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{StringArray}^{Dictionary}}24
@32@0:8Q16@24
@40@0:8Q16@24@32
@32@0:8r^{String=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{RepeatedPtrField<topotext::Substring>=^^viii}^{VectorTimestamp}{RepeatedPtrField<topotext::AttributeRun>=^^viii}{RepeatedPtrField<topotext::Attachment>=^^viii}}16@24
@40@0:8r^{String=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{RepeatedPtrField<topotext::Substring>=^^viii}^{VectorTimestamp}{RepeatedPtrField<topotext::AttributeRun>=^^viii}{RepeatedPtrField<topotext::Attachment>=^^viii}}16@24@32
@40@0:8r^{String=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{RepeatedPtrField<topotext::Substring>=^^viii}^{VectorTimestamp}{RepeatedPtrField<topotext::AttributeRun>=^^viii}{RepeatedPtrField<topotext::Attachment>=^^viii}}16@24^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}32
v56@0:8^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}16^{unordered_set<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *> >={__hash_table<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *>, std::__1::allocator<std::__1::__hash_node<TopoSubstring *, void *> > >={__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *>=^{__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<TopoSubstring *> >=Q}{__compressed_pair<float, std::__1::equal_to<TopoSubstring *> >=f}}}24^{unordered_set<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *> >={__hash_table<TopoSubstring *, std::__1::hash<TopoSubstring *>, std::__1::equal_to<TopoSubstring *>, std::__1::allocator<TopoSubstring *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *>, std::__1::allocator<std::__1::__hash_node<TopoSubstring *, void *> > >={__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *>=^{__hash_node_base<std::__1::__hash_node<TopoSubstring *, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<TopoSubstring *> >=Q}{__compressed_pair<float, std::__1::equal_to<TopoSubstring *> >=f}}}32^@40^{String=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{RepeatedPtrField<topotext::Substring>=^^viii}^{VectorTimestamp}{RepeatedPtrField<topotext::AttributeRun>=^^viii}{RepeatedPtrField<topotext::Attachment>=^^viii}}48
@32@0:8@16^{String=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{RepeatedPtrField<topotext::Substring>=^^viii}^{VectorTimestamp}{RepeatedPtrField<topotext::AttributeRun>=^^viii}{RepeatedPtrField<topotext::Attachment>=^^viii}}24
@32@0:8r^{Timestamp=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]iQq}16@24
v32@0:8^{Timestamp=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]iQq}16@24
v32@0:8@16^{OrderedSet=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{Array}^{Dictionary}}24
@32@0:8@16r^{OrderedSet=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i^{Array}^{Dictionary}}24
@32@0:8r^{VectorTimestamp=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<CRDT::VectorTimestamp_Element>=^^viii}}16@24
v32@0:8^{VectorTimestamp=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}[1I]i{RepeatedPtrField<CRDT::VectorTimestamp_Element>=^^viii}}16@24
v32@0:8#16@24
v36@0:8#16@24B32
Q24@0:8#16
{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16@0:8
@24@0:8r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16
v32@0:8^{vector<TopoSubstring *, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}^^{TopoSubstring}{__compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *> >=^^{TopoSubstring}}}16^{vector<_NSRange, std::__1::allocator<_NSRange> >=}24
v24@0:8^{vector<std::__1::pair<TopoIDRange, NSAttributedString *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *> > >=^{pair<TopoIDRange, NSAttributedString *>}^{pair<TopoIDRange, NSAttributedString *>}{__compressed_pair<std::__1::pair<TopoIDRange, NSAttributedString *> *, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *> > >=^{pair<TopoIDRange, NSAttributedString *>}}}16
v32@0:8Q16q24
v36@0:8Q16Q24B32
v48@0:8@16@24Q32@40
@"CRArray"
^{vector<TopoIDRange, std::__1::allocator<TopoIDRange> >=^{TopoIDRange}^{TopoIDRange}{__compressed_pair<TopoIDRange *, std::__1::allocator<TopoIDRange> >=^{TopoIDRange}}}16@0:8
^{vector<std::__1::pair<TopoIDRange, NSAttributedString *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *> > >=^{pair<TopoIDRange, NSAttributedString *>}^{pair<TopoIDRange, NSAttributedString *>}{__compressed_pair<std::__1::pair<TopoIDRange, NSAttributedString *> *, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *> > >=^{pair<TopoIDRange, NSAttributedString *>}}}16@0:8
^{vector<TopoIDRange, std::__1::allocator<TopoIDRange> >=^{TopoIDRange}^{TopoIDRange}{__compressed_pair<TopoIDRange *, std::__1::allocator<TopoIDRange> >=^{TopoIDRange}}}
^{vector<std::__1::pair<TopoIDRange, NSAttributedString *>, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *> > >=^{pair<TopoIDRange, NSAttributedString *>}^{pair<TopoIDRange, NSAttributedString *>}{__compressed_pair<std::__1::pair<TopoIDRange, NSAttributedString *> *, std::__1::allocator<std::__1::pair<TopoIDRange, NSAttributedString *> > >=^{pair<TopoIDRange, NSAttributedString *>}}}
