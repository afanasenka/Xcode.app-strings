MusicEQPresetName
MusicSoundCheckEnabledSetting
com.apple.mobileipod-prefsChanged
SpeakerRouteEnabled
StageDemoMode
VolumeControlMultiplier
v8@?0
com.apple.mobileipod
PerformingBatchNMCPrefsUpdate
deviceLibraryPersistentID
syncID
globalPlaylistID
storeAdamID
formerStoreAdamIDs
socialProfileID
storeCloudID
cloudUniversalLibraryID
storeCloudAlbumID
storeRecommendationID
storePurchasedAdamID
storeSubscriptionAdamID
radioStationStringID
radioStationHash
radioStationID
contentItemID
lyricsID
vendorID
informalMediaClipID
informalStaticAssetID
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
76,8194
76,8207
76,8206
76,8198
76,8197
76,8195
76,8205
76,8204
76,8201
76,8203
76,8208
%u,%u
<%@:%p name: %@, address: %@, type: %@, connected: %@>
hasSystemRoute
TB,N,V_hasSystemRoute
name
T@"NSString",R,C,N
address
type
Tq,R,N
routeType
connected
TB,R,N,GisConnected
NMCBluetoothAudioDeviceTypeUnknown
NMCBluetoothAudioDeviceTypeHeadset
NMCBluetoothAudioDeviceTypeHandsFree
NMCBluetoothAudioDeviceTypeSpeaker
NMCBluetoothAudioDeviceTypeHeadphones
NMCBluetoothAudioDeviceTypeCarStereo
NMCBluetoothAudioDeviceTypeHiFiStereo
NMCBluetoothAudioDeviceTypeA2DP
com.apple.NanoMusic.telemetry
com.apple.NanoMusic.launched
com.apple.NanoMusic.localMusicSelected
com.apple.NanoMusic.viewedAlbums
com.apple.NanoMusic.viewedArtists
com.apple.NanoMusic.viewedSongs
viewArtist
v32@?0@"MPModelObject"8q16^B24
v24@?0@"MPModelResponse"8@"NSError"16
T@"NSURL",C,N,V_URL
modelObject
T@"MPModelObject",C,N,V_modelObject
kind
playlist
album
artist
seeAllUrl
title
dkExternalId
v16@?0@"MPModelStoreBrowseSection"8
song
radioStation
pageData.componentName
artist_page
pageData.id
storePlatformData.artist.results
pageData.content
sectionName
adamIds
storePlatformData.lockup.results
storePlatformData.playlist-product.results
storePlatformData.product-dv.results
childrenIds
children
pageData.dkId
pageData
pageData.adamIds
B24@?0@8@"NSDictionary"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
transferring
TB,N,GisTransferring,V_transferring
T@"NSString",R,C,N,V_name
hasSystemRoute: %@
, isPicked: %@
, isSystemSpeaker: %@
, isW1H1Route: %@
bluetoothDevice: %@
, isConnected: %@
<%@:%p name: %@, %@, %@>
systemRoute
T@"MPAVRoute",&,N,V_systemRoute
bluetoothDevice
T@"NMCBluetoothAudioDevice",&,N,V_bluetoothDevice
hearingDevice
T@"NMCHearingAidAudioDevice",&,N,V_hearingDevice
cachedPicked
TB,N,V_cachedPicked
picked
TB,R,N,GisPicked
systemSpeaker
TB,R,N,GisSystemSpeaker
playerResponseItem
T@"MPCPlayerResponseItem",W,N
playerResponse
T@"MPCPlayerResponse",R,N,V_playerResponse
request
T@"NMCPlaybackQueueRequest",C,N,V_request
responseHandler
T@?,C,N,V_responseHandler
playerRequest
T@"MPCPlayerRequest",&,N,V_playerRequest
responseDelegate
T@"<NMCPlaybackQueueResponseDelegate>",W,N,V_responseDelegate
T@"MPCPlayerResponse",R,N
delegate
T@"<NMCPlaybackQueueResponseDelegate>",W,N,V_delegate
_storeURL
T@"NSURL",&,N,G_storeURL,S_setStoreURL:
%@:%@:%@
v16@?0@"MPIdentifierSet"8
pptIdentifier
T@"NSString",R,N
_identifiers
T@"MPIdentifierSet",R,N
com.apple.NanoMusicCore.NMCConnectivityManager
CONNECTED
DISCONNECTED
_genericRelationshipKey
v16@?0@"NSError"8
v24@?0@"MPCPlayerResponse"8@"NSError"16
NanoMusic fallback playback request
-[NMCMediaPlayerModelPlaybackController performMediaRemoteCommand:options:completionHandler:]_block_invoke
sharedController
T@"NMCMediaPlayerModelPlaybackController",R,N
wantsRadioSupport
TB,N,V_wantsRadioSupport
wantsDefaultMusicFallbackPlaybackIntent
TB,N,V_wantsDefaultMusicFallbackPlaybackIntent
nowPlayingController
T@"NMRNowPlayingController",&,N,V_nowPlayingController
/bfa1LxXd7G1WqHujpjsdA
-[MPCPlayerResponse(NanoMusicCore) nmc_commandRequestWithMediaRemoteCommand:options:]
T@"NSString",C,N,V_name
TB,N,GisPicked,V_picked
Tq,N,V_routeType
NMCPairedBluetoothAudioDeviceFailedToConnectNotification
NMCPairedBluetoothAudioDevicesChangedNotification
NMCSystemAudioRouteFailedToConnectNotification
NMCSystemAudioRoutesChangedNotification
NMCVirtualAudioRoutesDidChangeNotification
NMCVirtualAudioRouteUserInfoKey
virtualAudioRoutes
T@"NSArray",C,N,V_virtualAudioRoutes
systemAudioRoutes
T@"NSArray",C,N,V_systemAudioRoutes
pickedVirtualAudioRoute
T@"NMCVirtualAudioRoute",&,N,V_pickedVirtualAudioRoute
hasPickedVirtualAudioRoute
TB,N,V_hasPickedVirtualAudioRoute
hasAvailableW1Route
TB,N,V_hasAvailableW1Route
Audio/Video
com.apple.NanoMusic.NMCAudioRoutingManager
v16@?0@"NSArray"8
q24@?0@"NMCVirtualAudioRoute"8@"NMCVirtualAudioRoute"16
v32@?0@"NMCVirtualAudioRoute"8Q16^B24
paired
not paired!
disconnected
available
unavailable
enabled
disabled
bluetoothAvailableAndEnabled
TB,N,GisBluetoothAvailableAndEnabled,V_bluetoothAvailableAndEnabled
audioCategory
T@"NSString",C,D,N
routingControllerName
speakerRouteEnabled
TB,N,GisSpeakerRouteEnabled,V_speakerRouteEnabled
pairedBluetoothAudioDevices
T@"NSArray",R,C,N
NanoMusicCore
NanoMusicCore-Oversize
NanoMediaRemote
NanoMediaRemote-Oversize
NanoAudioControl
NanoMusicSync
NanoMusicSync-Oversize
NanoMediaUI
NanoMediaUI-Oversize
NanoMediaTool
com.apple.nanomusic
newWasSubscriberLastCheck
NMCSubscriptionStatusDidChangeNotification
NMCSubscriptionManagerCloudMusicLibraryEnabledStateDidChangeNotification
com.apple.NanoMusicCore.NMCSubscriptionManager
v16@?0@"NSNotification"8
v12@?0B8
subscriber
TB,R,N,GisSubscriber
cloudMusicLibraryEnabled
TB,R,N,GisCloudMusicLibraryEnabled
-[NMCWiFiManager applicationDidBecomeActive:]
-[NMCWiFiManager applicationDidEnterBackground:]
-[NMCWiFiManager originObserver:didUpdateNowPlayingInfoForOrigin:]
-[NMCWiFiManager originObserver:didUpdateElapsedTimeForOrigin:]
-[NMCWiFiManager originObserver:didUpdatePlaybackStateForOrigin:]
PreferWiFiOverMagnet
PreferWifiOverMagnetTimeoutInSeconds
NSURLSessionProxyWiFiToken
directWiFiAssertionTimer
T@"NSObject<OS_dispatch_source>",&,N,V_directWiFiAssertionTimer
holdingWiFiAssertion
TB,N,V_holdingWiFiAssertion
TB,N,V_enabled
wifiTimerLengthInSeconds
TQ,N,V_wifiTimerLengthInSeconds
com.apple.rootrobot
configuration
minimal
PPTDevice
NMCDefaults initialized.
Received an unrecognized Bluetooth ProductID:%@
Missing bag value for view artist. Unable to send store catalog request for storeLookupID: %@
_sectionResultIDs: %@, _sectionResults: %@, _sectionedItemResultIDs: %@, _itemResults: %@
[NMCConnectivityManager] Connectivity state changed from %@ to %@.
[NMCConnectivityManager] We were connected but now we're not.  Waiting %d seconds to see if things clear up...
[NMCConnectivityManager] Nope, still not connected
[NMCConnectivityManager] All good after waiting!
Failed to perform player request with error: %@
[PlaybackEngine] overriding resetCommand: %@
[PlaybackEngine] Sending command to playback engine: Replace Playback Queue
-addPlaybackIntent:withOptions:completion: failed with error: %@
[PlaybackEngine] Sending command to playback engine: Playback Intent Insertion (Play Next)
-insertAfterPlayingItemWithPlaybackIntent: failed with error: %@
[PlaybackEngine] Sending command to playback engine: Playback Intent Insertion (Play Last)
-insertAtEndOfTracklistWithPlaybackIntent: failed with error: %@
Playback did fail due to activation failure with error %@
Playback did pause for lease end
Playback error %@
[PlaybackEngine] Sending command to playback engine: Command Request (%@)
%s command request %@ failed with error: %@
Cellular Error: Cellular not supported
Cellular Error: Cellular data settings not enabled
Cellular Error: No ctServerConnection
Cellular Error: No cellular policy. Defaulting to NO
%s ignoring MRMediaRemoteCommand: %d
[Routing] Force reloading available audio routes from MediaRemote.
[Routing] Removing virtual route: %@
[Routing] (MPAVRoute) Created virtual route for MPAVRoute: %@
[Routing] (MPAVRoute) Updated virtual route for MPAVRoute: %@
[Routing] (Bluetooth) Created virtual route for device: %@.
[Routing] (Bluetooth) Updated virtual route for device %@.
[Routing] Virtual routes updated: %@
[Routing] (MPAVRoute) Available routes did change.
[Routing] (MPAVRoute) Picked routes did change: %@.
[Routing] (MPAVRoute) Failed to pick system route with error: %@
[Routing] (MPAVRoute) System routes with category (%@) updated to %@
[Routing] (MPAVRoute) Skipped updating for invalid route %@
[Routing] (MPAVRoute) Pending route now has system route, trying to pick %@.
[Routing] Failed to pick system route %@ due to %@.
[Routing] (MPAVRoute) Route does not exists, removing %@
[Routing] (Bluetooth) Device %@ discovered; adding the the list.
[Routing] (Bluetooth) Device %@ removed but is still either paired or connected; ignoring.
[Routing] (Bluetooth) Device %@ removed.
[Routing] (Bluetooth) Device %@ unpaired.
[Routing] (Bluetooth) Audio device %@ connected.
[Routing] (Bluetooth) Device %@ (%@) failed to connect (%@), but we're ignoring the error per <rdar://problem/19657430>.
[Routing] (Bluetooth) Device %@ (%@) failed to connect (%@).
[Routing] (Bluetooth) Device %@ disconnected (currently %@).
[Routing] (Bluetooth) Failed to disconnect from device %@ (%@).
[Routing] (Bluetooth) Connection status changed to %@.
[Routing] (Bluetooth) Device paired status changed.
[Routing] (Bluetooth) Bluetooth became %@ and %@.
[Routing] (Bluetooth) Refreshing paired bluetooth devices list!
[Routing] (Bluetooth) Bluetooth device does not exist, removing %@
No cached ICMusicSubscriptionStatus, will assume the user is not subscribed
Apple
Music subscription status: %lu
iCloud Music Library authenticated: %d
[WiFiManager] %s
[WiFiManager] Functionality disabled
[WiFiManager] playback rate > 0.0, reschedule disabling Wi-Fi assertion
[WiFiManager] the application is active, reschedule disabling Wi-Fi assertion
[WiFiManager] scheduling disabling Wi-Fi assertion
[WiFiManager] Disabling Wi-Fi assertion fired
[WiFiManager] Enabling Wi-Fi
[WiFiManager] Already enabled
[WiFiManager] Disabling Wi-Fi
zPLR
zPLR
zPLR
NanoMusicCore
NMCBluetoothAudioDevice
NMCTelemetry
NMCStoreModelCatalogRequest
NMCStoreModelCatalogRequestOperation
NMCStoreModelCatalogDefaultSectionedCollectionDataSource
MPLazySectionedCollectionDataSource
NSObject
NMCKeyValueObserver
NMCHearingAidAudioDevice
NMCMediaPlayerModelPlaybackIntent
NMCPlayerPlaybackIntent
NMCVirtualAudioRoute
NMCPlaybackQueueRequest
NMCPlaybackQueueResponseDataSource
NMCPlaybackQueueRequestOperation
MPRequestResponseControllerDelegate
NMCPlaybackQueueResponse
NMCConnectivityManager
CSLSConnectionStatusObserver
NMCMediaPlayerModelPlaybackController
MPCPlaybackEngineDelegate
NMCFeatureSupport
NMCMockVirtualAudioRoute
NMCAudioRoutesInfo
NMCAudioRoutingManager
MPAVRoutingControllerDelegate
NMCSubscriptionManager
NMCWiFiManager
NMROriginObserverDelegate
countByEnumeratingWithState:objects:count:
objectForKey:
boolValue
eqPresetForName:
typeForAVController
currentThread
threadDictionary
setObject:forKeyedSubscript:
removeObjectForKey:
dictionaryWithObjects:forKeys:count:
valueForKey:
defaultCenter
postNotificationName:object:
name
isEqualToString:
value
longLongValue
setDeviceLibraryPersistentID:
setSyncID:
setGlobalPlaylistID:
setStoreAdamID:
array
componentsSeparatedByString:
numberWithLongLong:
addObject:
copy
setFormerStoreAdamIDs:
setSocialProfileID:
setStoreCloudID:
setCloudUniversalLibraryID:
setStoreCloudAlbumID:
setStoreRecommendationID:
setStorePurchasedAdamID:
setStoreSubscriptionAdamID:
setRadioStationStringID:
setRadioStationHash:
setRadioStationID:
setContentItemID:
setLyricsID:
setVendorID:
setInformalMediaClipID:
setInformalStaticAssetID:
initWithModelKind:block:
deviceLibraryPersistentID
stringValue
queryItemWithName:value:
syncID
globalPlaylistID
storeAdamID
formerStoreAdamIDs
count
componentsJoinedByString:
socialProfileID
storeCloudID
numberWithUnsignedLongLong:
cloudUniversalLibraryID
storeCloudAlbumID
storeRecommendationID
storePurchasedAdamID
storeSubscriptionAdamID
radioStationStringID
radioStationHash
radioStationID
contentItemID
lyricsID
vendorID
informalMediaClipID
informalStaticAssetID
nmc_urlQueryItems
nmc_isEmpty
nmc_identifierSetWithURLQueryItems:modelKind:
init
address
type
vendorId
productId
stringWithFormat:
connected
connect
routeSubtype
routeUID
_addressMatchesRouteUID:
isConnected
rangeOfString:
initWithDevice:
routeType
matchesSystemRoute:
description
isEqual:
hasSystemRoute
setHasSystemRoute:
.cxx_destruct
_device
_hasSystemRoute
launched
localMusicSelected
displayedAlbums
displayedArtists
displayedSongs
_queue
setRequest:
results
initWithModel:personalizationStyle:
appendSection:
appendItem:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
performWithResponseHandler:
setResponseHandler:
copyWithZone:
emptyPropertySet
allSupportedProperties
propertySetByCombiningWithPropertySet:
allSupportedSectionProperties
allSupportedItemProperties
newOperationWithResponseHandler:
setURL:
modelObject
setModelObject:
_URL
_modelObject
request
_requestConfigurationWithURL:
identifiers
nms_universalStoreLookupID
_viewArtistURLWithStoreLookupID:storeBagDictionary:error:
arrayWithObjects:count:
initWithRequestedItemIdentifiers:reason:
errorWithDomain:code:userInfo:
userIdentity
initWithRequest:responseDictionary:userIdentity:
initWithRequest:
initWithDataSource:
setResults:
URLWithString:
ic_URLByAppendingQueryParameters:
remainingTimeInterval
requestWithURL:cachePolicy:timeoutInterval:
initWithURLRequest:
configurationForLoadingModelDataWithStoreBagDictionary:error:
produceResponseWithLoadedOutput:completion:
_parseResponseDictionary
objectAtIndexedSubscript:
objectForKeyedSubscript:
sectionKind
sectionProperties
_genericRelationshipKey
initWithProperties:relationships:
initWithRequestedPropertySet:
initWithStorePlatformDictionary:
modelObjectWithStoreItemMetadata:userIdentity:
anyObject
_setStoreURL:
setObject:forKey:
valueForKeyPath:
emptyIdentifierSet
setTitle:
_uniformContentTypeForString:
setUniformContentItemType:
setLoadAdditionalContentURL:
initWithIdentifiers:block:
section
item
itemKind
itemProperties
relationships
setShouldUsePlaylistEntry:
initWithURL:resolvingAgainstBaseURL:
queryItems
allKeys
containsObject:
predicateWithBlock:
filteredArrayUsingPredicate:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
numberOfSections
sectionAtIndex:
numberOfItemsInSection:
itemAtIndexPath:
identifiersForItemAtIndexPath:
identifiersForSectionAtIndex:
indexPathForItemWithIdentifiersIntersectingSet:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
_request
_responseDictionary
_userIdentity
_artistResult
_sectionResultIDs
_sectionedItemResultIDs
_sectionResults
_itemResults
_cachedSections
_cachedItems
setWithObject:
initWithObject:keyPaths:options:handler:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
dealloc
observeValueForKeyPath:ofObject:change:context:
initWithObject:keyPath:options:handler:
_object
_keyPaths
_handler
setTransferring:
sharedInstance
requestHearingAidConnectionWithReason:
initWithName:
isTransferring
_transferring
_name
sharedController
replacePlaybackQueueWithIntent:preventingAutomaticPlayback:completionHandler:
insertPlaybackIntent:intoPlaybackQueueAtInsertionPosition:completionHandler:
mediaPlaybackCorePlaybackIntent
getRemotePlaybackQueueRepresentationWithPlayerPath:completion:
replacePlaybackQueueWhilePreventingAutomaticPlayback:completionHandler:
insertIntoPlaybackQueueAtInsertionPosition:completionHandler:
initWithSiriPlayMediaIntent:
getCompanionPlaybackQueueRepresentationWithCompletionHandler:
getRemotePlaybackQueueRepresentationWithPlayerPath:completionHandler:
routeName
length
_bluetoothDeviceName
hearingDevice
isPicked
isSystemSpeaker
systemRoute
routeTypeFromMPAVRoute:
isAirpodsRoute
isB298Route
isPowerbeatsRoute
isB364Route
isB372Route
isB444Route
isBeatsSoloRoute
isB419Route
isBeatsStudioRoute
isBeatsXRoute
isCarplayRoute
isAppleTVRoute
isHomePodRoute
isW1Route
isH1Route
stringByAppendingFormat:
isEqualToVirtualAudioRoute:
setSystemRoute:
bluetoothDevice
setBluetoothDevice:
setHearingDevice:
cachedPicked
setCachedPicked:
_cachedPicked
_systemRoute
_bluetoothDevice
_hearingDevice
playerResponseItem
setPlayerResponseItem:
_playerResponseItems
metadataObject
tracklist
items
displayItems
initWithPlayerResponse:disableDisplayItemsSectioning:
playerResponse
_disableDisplayItemsSectioning
_playerResponse
playerRequest
setDelegate:
beginAutomaticResponseLoading
responseDelegate
_setRequestResponseController:
delegate
playbackQueueResponseShouldDisableDisplayItemsSectioning:
response
finishWithError:
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
execute
responseHandler
_requestResponseController
_responseHandler
setQualityOfService:
sharedManager
localOrigin
mainBundle
bundleIdentifier
playerPathWithBundleID:playerID:
setPlayerPath:
setTracklistRange:
setPlayerRequest:
setResponseDelegate:
_playerRequest
_responseDelegate
_handleResponseDidInvalidateNotification:
addObserver:selector:name:object:
removeObserver:
object
_invalidate
dataSource
_dataSource
_delegate
_storeURL
title
album
artist
itemPersistentID
itemCompanionPersistentID
initWithBlock:
pptIdentifier
_identifiers
weakObjectsHashTable
addObserver:
status
_updateConnectivityState
removeObject:
_notifyObserversForConnectedState
manager:connectivityDidChange:
connectionStatusDidChange:
wifiSignalStrengthBarsDidChange:
registrationStatusDidChange:
cellularSignalStrengthBarsDidChange:
lastKnownCountryCodeDidChange:
simActiveDidChange:
_connectionStatus
_connectionStatusQueue
_observers
_connected
_waitingForReconnect
modelClass
setNowPlayingController:
_setupPlaybackEngineIfNecessary
setActionAfterQueueLoad:
setFallbackPlaybackIntent:
resetCommand
_playerPath
resetCommandForPlayerPath:devices:
replaceWithPlaybackIntent:
performRequest:completion:
performWithCompletion:
insertCommand
insertAfterPlayingItemWithPlaybackIntent:
insertAtEndOfTracklistWithPlaybackIntent:
infoDictionary
pathWithRoute:bundleID:playerID:
setSystemMusicApplication:
initWithPlayerID:
isSystemMusicApplication
isSpeakerRouteEnabled
setAudioSessionCategory:
audioSessionOptions
setAudioSessionOptions:
_configureLocalOriginObserverAndCommandHandler
_configureDefaultFallbackPlaybackIntentIfNeededWithPlaybackEngine:
becomeActive
start
domain
code
_playbackErrorFromError:
numberWithInteger:
userInfo
sharedNetworkObserver
isMusicCellularStreamingAllowed
sharedRestrictionsMonitor
allowsExplicitContent
playbackControllerDidPauseForLeaseEnd:
playbackController:didFailToActivateWithError:resolution:
_playbackErrorTypeFromTopLevelError:
playbackController:didFailToPlayItem:error:errorType:
playerPath
initWithPlayerPath:options:
setOriginObserver:forOrigin:
setOriginCommandHandler:forOrigin:
wantsDefaultMusicFallbackPlaybackIntent
setLabel:
kindWithVariants:
setItemKind:
setFilteringOptions:
setShuffleMode:
setTracklistToken:
setTracklistSource:
performMediaRemoteCommand:options:completionHandler:
nmc_commandRequestWithMediaRemoteCommand:options:
engineDidPauseForLeaseEnd:
engine:didPauseForLeaseEndWithError:
engine:prepareForActivationWithCompletion:
engine:didFailToActivateWithError:resolution:
engine:didFailToPlayFirstItem:withError:
engine:didFailToPlayItem:withError:
engine:requiresAuthorizationToPlayItem:authorizationHandler:
engine:requiresAuthorizationToPlayItem:reason:authorizationHandler:
setupPlaybackEngine
addErrorHandler:
removeErrorHandler:
performMediaRemoteCommand:completionHandler:
wantsRadioSupport
setWantsRadioSupport:
setWantsDefaultMusicFallbackPlaybackIntent:
nowPlayingController
_playbackEngine
_errorHandlers
_systemMusicApplication
_wifiManager
_wantsRadioSupport
_wantsDefaultMusicFallbackPlaybackIntent
_nowPlayingController
deviceSupportsCellularData
isEnabled
deviceSupportsMediaStreaming
pause
play
stop
changeItemCommand
nextItem
previousItem
doubleValue
playingItem
seekCommand
jumpByInterval:
beginSeekWithDirection:
floatValue
playbackRateCommand
setPlaybackRate:
likeCommand
changeValue:
dislikeCommand
wishlistCommand
integerValue
repeatCommand
setRepeatType:
shuffleCommand
setShuffleType:
actionAtQueueEndCommand
setQueueEndAction:
setName:
setPicked:
setRouteType:
_picked
_routeType
virtualAudioRoutes
setVirtualAudioRoutes:
pickedVirtualAudioRoute
setPickedVirtualAudioRoute:
systemAudioRoutes
setSystemAudioRoutes:
hasPickedVirtualAudioRoute
setHasPickedVirtualAudioRoute:
hasAvailableW1Route
setHasAvailableW1Route:
_hasPickedVirtualAudioRoute
_hasAvailableW1Route
_virtualAudioRoutes
_pickedVirtualAudioRoute
_systemAudioRoutes
setAudioCategory:
setRoutingControllerName:
beginObservingAudioRoutes
_updateSpeakerRouteEnabled
_registerForBluetoothManagerNotifications
_refreshBluetoothDevices
_hearingDevicesDidChange
setDiscoveryMode:
_performBlockAfterFetchingAvailableRoutesIgnoringCache:completion:
allValues
_cancelPickRouteTimeout
_postVirtualAudioRoutesChangedNotification
setCategory:
category
availableRoutes
_updateSystemAudioRoutesWithRoutes:
w1Route
fetchAvailableRoutesWithCompletionHandler:
compare:
indexOfObject:inSortedRange:options:usingComparator:
_indexOfVirtualAudioRoute:forInsertion:
insertObject:atIndex:
removeObjectAtIndex:
_existingVirtualAudioRouteForMPAVRoute:
_addVirtualAudioRoute:
_existingVirtualAudioRouteForBluetoothAudioDevice:
_removeVirtualAudioRoute:
audioCategory
initWithCapacity:
_createOrUpdateVirtualAudioRouteForMPAVRoute:
setWithArray:
selectRoute:operation:completion:
enumerateObjectsUsingBlock:
_postSystemAudioRoutesChangedNotification
_bluetoothAvailabilityChangedNotification:
_bluetoothPowerChangedNotification:
_bluetoothDeviceDiscoveredNotification:
_bluetoothDeviceRemovedNotification:
_bluetoothDeviceUnpairedNotification:
_bluetoothDeviceConnectSuccessNotification:
_bluetoothDeviceConnectFailedNotification:
_bluetoothDeviceDisconnectSuccessNotification:
_bluetoothDeviceDisconnectFailedNotification:
_bluetoothConnectionStatusChangedNotification:
_bluetoothDevicePairedStatusChangedNotification:
_handleBluetoothAvailabilityChange
_setNeedsRefreshingBluetoothDevices
paired
connectingDevices
postNotificationName:object:userInfo:
available
enabled
pairedDevices
_createOrUpdateVirtualAudioRouteForBluetoothAudioDevice:
isEqualToSet:
_postPairedBluetoothAudioDevicesChangedNotification
setSpeakerRouteEnabled:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
pairedBluetoothAudioDevices
fetchAudioRoutesInfoWithCompletion:
pickVirtualAudioRoute:
routingControllerName
_beginPickRouteTimeoutWithRoute:
isBluetoothAvailableAndEnabled
setBluetoothAvailableAndEnabled:
_pairedBluetoothDevices
_routingController
_pendingVirtualRouteChangeNotification
_pendingPairedBluetoothAudioDeviceChangeNotification
_pendingSystemAudioRoutesChangedNotification
_pendingPickedRoutesStateDidChangeNotification
_hasFetchedInitialAvailableRoutes
_availableRoutesFetchGroup
_pickRouteTimer
_pendingPickingRoute
_bluetoothNotificationTimer
_bluetoothAvailableAndEnabled
_speakerRouteEnabled
isServiceSupported:
_updateAppleMusicSubscriptionStatus
_updateCloudMusicLibraryEnabledStatus
isSubscriber
removeObserver:name:object:
mainQueue
addObserverForName:object:queue:usingBlock:
_handleSubscriptionStatusDidChangeNotification:
standardUserDefaults
subscriptionStatus
numberWithBool:
setValue:forKey:
_handleUserIdentityStoreDidChangeNotification:
defaultIdentityStore
isAuthenticatedWithCompletionHandler:
preloadAppleMusicSubscriptionStatus
isCloudMusicLibraryEnabled
preloadCloudMusicLibraryEnabledStatus
performBlockWhenSubscribed:
_cloudClient
_cloudMusicLibraryEnabled
_subscriptionManager
_subscriber
_readDefaults
_enableWiFiAssertionIfNeeded
applicationDidBecomeActive:
applicationDidEnterBackground:
_removeWoWClient
endObservingOrigins
removeObserverDelegate:
addObserverDelegate:
beginObservingOrigins
_disableWiFiAssertionWhenNeeded
setEnabled:
setWifiTimerLengthInSeconds:
_addWoWClient
_scheduleDisablingWiFiAssertion
activeNowPlayingOrigin
nowPlayingStateForOrigin:
playbackRate
sharedApplication
applicationState
directWiFiAssertionTimer
setDirectWiFiAssertionTimer:
wifiTimerLengthInSeconds
holdingWiFiAssertion
addWoWClient:
addWiFiAutoAssociationClientToken:
setHoldingWiFiAssertion:
removeWoWClient:
removeWiFiAutoAssociationClientToken:
originObserver:didUpdateNowPlayingInfoForOrigin:
originObserver:didUpdateNowPlayingApplicationBundleIdentifierForOrigin:
originObserver:didUpdatePlaybackStateForOrigin:
originObserver:didUpdateSupportedCommandsForOrigin:
originObserver:didUpdateElapsedTimeForOrigin:
originObserver:didUpdateTimestampForOrigin:
originObserver:didUpdatePlaybackQueueForOrigin:
_holdingWiFiAssertion
_enabled
_directWiFiAssertionTimer
_wifiTimerLengthInSeconds
isRunningInStoreDemoMode
initWithSuiteName:
stringForKey:
boolForKey:
@16@0:8
B16@0:8
@32@0:8@16@24
@24@0:8@16
q16@0:8
v16@0:8
B24@0:8@16
v20@0:8B16
@"BluetoothDevice"
@"NSObject<OS_dispatch_queue>"
@24@0:8@?16
@24@0:8^{_NSZone=}16
v24@0:8@16
@"NSURL"
@"MPModelObject"
@32@0:8@16^@24
v32@0:8@16@?24
@40@0:8@16@24^@32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8Q16
Q24@0:8Q16
@24@0:8q16
{_NSRange=QQ}16@0:8
q24@0:8q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
@"NSArray"16@0:8
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@40@0:8@16@24@32
q24@0:8@16
@"NMCStoreModelCatalogRequest"
@"NSDictionary"
@"ICUserIdentity"
@"NSArray"
@"NSCache"
@48@0:8@16@24Q32@?40
v48@0:8@16@24@32^v40
@"NSObject"
@"NSSet"
@"NSString"
v28@0:8B16@?20
v32@0:8Q16@?24
v24@0:8@?16
v28@0:8B16@?<v@?@"NSError">20
v32@0:8Q16@?<v@?@"NSError">24
@24@0:8@"INPlayMediaIntent"16
v24@0:8@?<v@?@"MPRemotePlaybackQueue"@"NSError">16
v32@0:8@"MPCPlayerPath"16@?<v@?@"MPRemotePlaybackQueue"@"NSError">24
@"MPAVRoute"
@"NMCBluetoothAudioDevice"
@"NMCHearingAidAudioDevice"
@28@0:8@16B24
@"MPCPlayerResponse"
B32@0:8@16@24
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
@?16@0:8
@"MPRequestResponseController"
@"NMCPlaybackQueueRequest"
@"MPCPlayerRequest"
@"<NMCPlaybackQueueResponseDelegate>"
v24@0:8Q16
v20@0:8i16
v24@0:8q16
v24@0:8@"NSString"16
@"NSHashTable"
v32@0:8@16@24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v48@0:8@16@24q32@?40
v24@0:8@"MPCPlaybackEngine"16
v32@0:8@"MPCPlaybackEngine"16@"NSError"24
v32@0:8@"MPCPlaybackEngine"16@?<v@?B@"NSError">24
v40@0:8@"MPCPlaybackEngine"16@"NSError"24@?<v@?B>32
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"NSError"32
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@?<v@?B@"NSError">32
v48@0:8@"MPCPlaybackEngine"16@"MPAVItem"24q32@?<v@?B@"NSError">40
v36@0:8@16B24@?28
v40@0:8@16Q24@?32
v28@0:8I16@?20
v36@0:8I16@20@?28
@"MPCPlaybackEngine"
@"NMCWiFiManager"
@"NMRNowPlayingController"
@28@0:8I16@20
@"NMCVirtualAudioRoute"
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
Q28@0:8@16B24
@"NSMutableDictionary"
@"MPAVRoutingController"
@"NSMutableArray"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_source>"
@"ICCloudClient"
@"NMSSubscriptionManager"
v32@0:8@16@"NMROrigin"24
