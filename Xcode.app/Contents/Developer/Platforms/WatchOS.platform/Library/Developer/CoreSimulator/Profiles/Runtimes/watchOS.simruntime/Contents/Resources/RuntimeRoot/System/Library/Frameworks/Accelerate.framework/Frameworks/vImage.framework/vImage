(vb'
gfff=
c'vb
v%j>
VUUU
UUU5
^CyM^
e%+Y
]AL.
!5Aj
$I"I
VUUU
-d!+d
o0E>b
DDDD#
E@|4
333s
.Nk6
F]QW
]Lv;
3333
^-nB
AQN}
jLDz
, _w
@RKv
gs<u
U?',r
|NO1i
/@Kn^
sI,\
oS=F[
MuRX
Ow~CW
O1uV
){qU
G7<T
U#:R
.K5Q
K"dN
m_(LN
b'v"J
yI@xI
r0cI
$I$I
/;|wG
}]dF
M 9VD
5?lC
7r#7C
P#,wB
&3xA
xP`@
9-$P@
S\2?
Zk->
~5&"=
~c&:
mtpr8
$2M8
1y48
 'Zn6
ph>W6
m@6@6
n'i5
XPx4
gfff3
s?=3
#=}2
-o_2
S<$2
qAF1
}vJa.
[ZZZ-
2NJ-
-`LB-
bM:-
6Q2-
Ra"-
:0!@,
Z_|8,
f7_+
@Tz)
fN~K)
wHT(
>4V'
&!J'
AGj{&
L5G%
IM0^$
^mD$
6@$
V[{#
rOO#
yQqJ#
@Pd="
E6Q!
{-9D!
2F7!
G]*!
qqD 
LtB8 
Z<(0 
w%jW
-2u@
{8]p
f>O^
K?s:
\i1Y
\RhH
yxxX
UUUU
F&U<
6:89
7b]z
~ZPQ
gffN
CCO}
G#qT
F,(<
2222
E9do
1{}r
x!A(
oL]}
?gjy
* GP
4dUN
/[r~
<(pu
B-`L
Pry<
U=*)
 l<Z
lD6"
n\Hu
gffF
8r_9
1E>s
%;Gk
yC+V
<I'8
DDD4
Vtfj
b]z,
""""
K%t
Bk}P
1RsO
T2F%
@|4!
f]O|
| )B
OQ+&
vL{#
dBA}
&FWx
V0KR
T ~Q
jC"C
dj`/
<<<,
Vhs+
?}mq
mq+f
9K3X
eE}N
u'XJ
OZuC
6}.9
aAS0
!L~
Cp}
'a8|
5[w
bwl
]ti
]@h
a?e
2d
h$E\
Y1PV
#(R
1twJ
JnII
\WF
!*E
uw@
YK?
,r9
)iG8
x]5
m|34
}K1
G"0
7<-
9t'
~k#
 ?K~
D$C}
H.yr
|1sq
UdNj
yr"C
so'A
LFO6
Y{s/
*x9%
?@,}
4mWp
1E>k
m:ej
h0qF
t-8>
gff=
wxk4
3333
|.c2
p^B&
)ht%
*cDu
E"8t
K67l
)sPZ
T"JY
@{vQ
~JfM
}x\J
`]I?
k{R3
7f_.
Xgz'
-c+&
[`~{
u/Iw
y?rv
%?Pk
-2=e
c>Pc
Nc_[
`,HZ
J>1Y
v;`X
rxSQ
+r]C
Ofo@
M9E4
 I+2
4`I/
{e^+
/)w'
lh!%
7tZ$
Qc6y
x/Ye
kbmc
_Wr`
*q4\
>8uY
WZLV
{ZyQ
igwL
Y#BL
x1mK
WGcJ
lxy@
_&l>
_&;
!xr5
't42
e,/0
\ZY%
?K&%
L+Z$
n*'$
eC[#
Lr+!
s5` 
Om- 
%tm|
pcC|
.8uz
_PTx
cJYw
t{/w
j"du
"W@t
$Z*q
yVbo
Kd0k
>cje
^LQ`
vK_
O=N]
uO@[
_IjX
CY7V
7@^Q
05=L
i;:J
+x%I
aw$G
Z 8F
<bsE
pYwA
w%j>
Ms):
qLT5
sf93
CHy2
h|,2
mEF1
;Q`0
SfV(
7L''
kZQ#
iBa 
<Yf|
PAH|
4&.x
0$Pv
5c,s
eE!r
Pjoq
^+4q
(<p
x_=o
+rem
N ?l
Zdqk
`+Di
@Qwh
D{Lf
8EFe
La#d
/1ka
k>Na
?F_
Kts[
IWqZ
Rb6Y
P@nX
CrlU
^poH
^ntG
;#BF
T\2D
S*wB
a1$B
(^~A
&23@
dNr?
z}U<
ebx6
Q}r0
fje/
M]5+
Ysz*
ch**
(%U)
`yx!
?nq 
 &W 
L#S
m- 
~@z|
k f|
JbWy
Q^Cy
'eSx
Cj?x
GP6u
/q"u
(VFs
=D0p
&j0o
@]rj
/*Ni
1M.g
N3Yf
Zvd
MwOd
-&o_
Ws*^
cRt\
|IN\
,C(\
rJj[
<Y1[
1)OX
th)X
('eV
kr8U
``T
}'QS
p"^R
=uKR
@4[M
pE}L
% @I
R^,G
mxuF
UTQE
34/C
9kl@
W!$@
C}K?
|s9?
Mj'?
a/s>
[)=>
1Aw=
FMS=
5TA=
z8';
hPt:
O@7
mrY6
#7r3
-\{2
(l}0
"gv/
$_S/
qY0/
Jg^.
7lX-
.X_+
BzI*
0!8*
b h)
y}E)
+'p&
BF+&
Zy:%
RJ)%
VA[$
%g|#
dZ7"
LD&"
-fY!
?WH!
y%A
#a 
aVK}
i)?}
02Y{
]8iy
o&]y
Le{w
VL'w
zLsv
EUOv
[k0q
~,gp
N; p
REco
IlHn
EB]m
V%[l
smOl
jQek
f>Bk
}\dj
jF{i
'6dh
4)*h
gfff
4HOf
<+8f
A/#e
6"e
<kvd
[g_d
Ac1d
2*)c
Gw8b
4;M`
DyM^
wv_]
F$T]
~/2]
)C}\
P_[\
!~9\
=\A[
(E`Z
9W<Y
Hm#W
3Z9V
fs.U
.3$T
XawQ
b\aQ
UZVQ
%mzP
JudP
nR<O
d{aN
zDqM
~\fM
&O@L
a'\K
"MQK
*sFK
j;J
FCOG
mF$G
vQXF
_&8F
j&7E
h`E
taD
hm!D
o:lC
OY,C
ilC
UsBB
`6-B
bBnA
vT;@
"+h?
/(*<
j*D;
9H/;
4O;9
gT 7
fff6
x =6
f`Y4
36c3
P{D3
&gc2
7A11
kPQ0
z%G0
=FI/
o`j.
fxY-
[`O-
f|g,
[j],
C-{*
i'q*
$>}(
SbK(
MjA(
b=z'
asR'
FFF&
w,v%
LFl%
_`b%
6;k$
;|W$
'pC#
%jW"
K!0"
MUX!
i%1!
86w 
dom 
uVF 
Hm$
#0w~
 qE~
v(l}
(*M}
\vO|
WYq{
IJ!{
l#Jz
zOgy
S0ay
];0y
rrTw
&y[v
'IIv
c9Cv
ur{u
aOiu
Y-Wu
<"Qu
\Eu
${s
2 os
}6yr
q9sr
dF[r
OQIr
-UCr
(Y=r
@]7r
va1r
:j%r
y,lq
cp<q
dy6q
MLBp
yN~o
,8jm
JQ/m
A%Dl
oF>l
%BBk
4h<k
:`^j
"5Aj
nTui
N?Xi
t,jh
=`dh
x0Mh
670h
|\sf
R\f
VIEf
ZB.f
V[He
%$7e
Lg1e
f1 e
yKtd
/ cd
Mg]d
J=Ld
X4$d
V\c
p:Kc
sl4c
zcba
#dQa
Lh/a
6J<`
C[+`
Kq`_
`/U_
HMD_
h9_
 l3_
]'i^
bRX^
V~G^
Ut+^
t>x]
WS@]
XZw\
4{[\
n:\
Sz4\
mV)\
ilP[
W[QZ
:IFZ
:&0Z
V>tY
X4iY
J}!Y
q?|X
J>PX
!@:X
j&dW
EN8W
<Y-W
 ?~V
;=!U
P0~T
&cT
eWMT
dYIS
MQ.S
5&|R
T]qR
#M+R
B>dQ
N TQ
'bIQ
h]MP
q3rO
j.RO
3-BO
_-"O
'lrN
x>=N
;L-N
sM^M
@gNM
sQ)M
a*pL
(Y;L
R;&L
 /cK
=dSK
\K)K
^eqJ
\h\J
X)WJ
7.BJ
D'{I
%I"I
}J{H
\qfH
O;aH
s.GH
X^HG
d-CG
8HlE
Xh.E
X@VD
Sl7D
NI2D
`&-D
}ytC
q:jC
6#<C
/R`B
~7[B
7e2B
VK-B
?~Y@
=[O@
d'@@
3=C?
&[`>
xR[>
`AQ>
e(B>
? =>
q"t=
<#g;
a1X;
E6S;
>;N;
O@I;
uED;
mU5;
-f&;
<cx:
<'E9
^5@9
G`19
P}'9
F.X8
DeI8
'b7
&TX7
O#,7
HR"7
*c6
$1`5
[O{4
yHY4
flT4
D!<4
4j24
2;u3
O|N3
IFk2
2%S2
l362
kXz1
J921
O!G0
(//0
`e*0
Zd;/
\N(/
S>s.
bmH.
1):.
f?i-
,IV-
<TC-
gin,
f=`,
.YM,
?v:,
zUf+
K`{*
NzL*
Axp)
)sb)
#h8)
O1y(
;SA(
z]3(
nh%(
@aT'
wwF'
U1='
:yq&
A:h&
`\Z&
wAC&
te5&
9iS%
^d<%
ra%%
vT{$
T&r$
V4[$
DDD$
J(V#
w*6#
G0["
*Fs!
[_Z 
xTQ 
/:~
Tpm
c|C
l"&
z~
K1h~
6XV~
KlM~
a1K~
R 7~
pp0~
Xt~}
|@h}
8GT}
UgK}
l/I}
P@}
i95}
l#*}
~E!}
bEp|
QD0|
{=%|
mYw{
N]l{
/s@{
XA>{
>z5{
YP({
.S{z
36nz
hIcz
?]Xz
+n~y
26oy
mNWy
<"Uy
U\%y
d3zx
ecox
>A`x
N Qx
o^ww
2Phw
*CYw
W7Jw
'I.w
O#,w
xf!w
<A\v
f&Kv
kv@v
KS>v
20<v
1;-v
#j v
'xou
jWmu
aR\u
?oMu
D7ft
/JUt
MABt
|W1t
]:/t
4o t
)n^s
oS\s
|~Ks
|IGs
qv6s
+\4s
#a^r
OI\r
T\Gr
7-Cr
aZ0r
v2lq
uuYq
h|@q
:S<q
$*8q
jr%q
S-yp
|@^p
m.\p
'{Gp
ZiEp
c"=p
&a&p
R>"p
P`do
s#\o
2`Ao
WQ?o
=u o
zC~n
'*zn
t{]n
%o[n
]JUn
%>Sn
/f.n
hZ,n
37&n
Kcjm
"Pfm
Lz7m
Eq5m
Eh3m
J_1m
UV/m
fM-m
}D+m
Fxrl
rqpl
XVhl
ABbl
^.\l
9!Xl
*}Ik
*oAk
Lh=k
*^7k
;T1k
MG)k
 D'k
?sVj
grTj
@oLj
ulDj
1k@j
vi:j
jh6j
vg2j
2f,j
ve(j
 e&j
Bd j
o%vh
].rh
b7nh
}@jh
ONdh
S\^h
RoVh
 tTh
$&sg
q-qg
xCkg
CRgg
$acg
n"2g
q*0g
z2.g
"c"g
Qk g
qSNf
zhJf
lJye
BWwe
z'Xe
 ORe
b\Pe
g31e
S\+e
5-gd
,MDd
_]Bd
d!+d
[B'd
gc#d
v+d
PR{c
C0dc
9h^c
Mh*c
-Ujb
}+Wb
/lQb
e/@b
0E>b
C +b
I6)b
SL'b
cb%b
yx#b
B[Sa
'7Ba
?h>a
n-/a
,F-a
jrm`
<=M`
hXK`
Ai8`
u)+`
#|%`
G2p_
dml_
fx[_
P+P_
4IN_
9?_
6u;_
/*0_
kH._
U}r^
7?g^
R"Z^
ccV^
vhG^
H>^
k4-^
lU+^
rv)^
_gX]
S;M]
SP1]
kn"]
3X{\
F:p\
D}G\
]<>\
U"3\
&o/\
z2~[
!@f[
G(P[
TFC[
EoA[
F<8[
Ue6[
E*"[
5*pZ
bUnZ
Y6OZ
ngBZ
Q$%Z
IP#Z
G|!Z
7B}Y
~kY
m:iY
`hgY
a `Y
mN^Y
:JJY
/`?Y
XH6Y
{w Y
rzY
,a{X
<wgX
I"NX
8SLX
)HCX
5yAX
u<X
y31X
-[&X
 3yW
KfwW
&3pW
hfnW
S:CW
,=:W
~@1W
it/W
HD(W
Kx&W
y^qV
L6jV
MlhV
*SXV
LbOV
n%8V
?6/V
=~$V
FYyU
r;rU
m9bU
/r`U
eUYU
]<2U
V@"U
IXvT
=EoT
}2hT
v[_T
_IXT
,sOT
6/3T
oYT
UcxS
C\S
@lES
m'@S
?!9S
hT)S
-O"S
'kqR
~/eR
0pcR
_2^R
#s\R
`vUR
}?qQ
mLjQ
)g\Q
{1WQ
~?PQ
`\BQ
>k;Q
fz4Q
%"oP
3'IP
smGP
P@BP
cs4P
w{!P
1K|O
L$wO
5d]O
C>XO
@aQO
(_EO
bbjN
SbMN
E'CN
Kg0N
#rzM
 -kM
=ddM
l7ZM
@!UM
:oSM
BYNM
rCIM
|f=M
1Q8M
pu,M
iJyL
<|mL
FmhL
x^cL
QAYL
kuML
ogHL
f>9L
O[{K
BLqK
L)XK
o|VK
qiGK
jcBK
@R3K
tB$K
HD}J
aDxJ
GFdJ
!G_J
"HZJ
JIUJ
kOAJ
TQ<J
dS7J
{Z(J
%]#J
ma}I
AixI
;qsI
L!pI
[ynI
m:aI
NgHI
Mz>I
o+;I
B56I
;?1I
ZI,I
^"I
wHkH
'y\H
r?TH
8POH
$aJH
6rEH
W(BH
 K8H
BI!H
dP}G
Q9pG
K#cG
N;^G
vSYG
D?LG
4E:G
q^5G
~3-G
Q*}F
6IxF
@hsF
fffF
zFDF
aH7F
]i2F
RK*F
8'F
-iYE
:.VE
%kDE
KR~D
@xqD
~piD
M:fD
"iaD
+bYD
K,VD
nUID
IJ9D
sz4D
NE1D
]q$D
uIiC
rTYC
%o9C
j)|B
e:tB
->FB
?z.B
RO+B
t$(B
Gd#B
D'wA
MlrA
BcgA
><dA
,4YA
qSQA
N&CA
eg3A
fA0A
d1}@
o[u@
)9r@
*)Y@
f3N@
a>C@
Bk;@
(`_?
OC\?
t{T?
>BN?
hB@?
*&=?
,b'?
kF$?
(|s>
~wb>
Z\=>
%E:>
gt/>
x],>
I~v=
mDm=
B1j=
e#S=
WbH=
~=B=
(+?=
tk4=
cY1=
aG.=
n5+=
r{v<
qPm<
9Bj<
@gV<
yYS<
fL3<
M?0<
C2-<
H%*<
^'~;
Dsm;
{Na;
nE^;
p<[;
^rA;
<Y8;
%g;
lI~:
,.l:
U!c:
|xC:
mq=:
Fg4:
Hh9
V"/9
$ww8
a|t8
~%^8
7+[8
Fa@8
Qt78
&&!8
M'o7
IFf7
9[`7
cpZ7
/c;7
qn87
Z-(7
,d6
c;a6
;Z[6
LyU6
q N6
30K6
%(56
_826
ei)6
ODu5
*Xr5
52e5
^Fb5
>6R5
V_L5
{Q<5
jf95
g{65
KE,5
vEy4
}Mi4
fff4
,WY4
bpV4
IL4
b"B4
}o94
O%%4
^n}3
OUs3
hxc3
,%_3
4,R3
[JO3
S4E3
-q?3
/\53
/4!3
Lu}2
fei2
o^_2
J5X2
 XU2
{Q2
s/N2
yRK2
D*D2
zMA2
"I72
sE-2
kB#2
>f 2
\-u1
oTr1
Z6k1
qg^1
JJW1
x-P1
<UM1
^)51
[D!1
~f{0
XJ\0
29U0
a(N0
UqA0
na:0
1`y/
ESk/
KMd/
2~a/
QBV/
{sS/
Q=O/
K4A/
D0:/
a^0/
1),/
![)/
#&%/
5X"/
(sz.
Qxs.
]Ho.
ZZZ.
<oE.
[H:.
zP3.
M"/.
9*k-
rdh-
;va-
%`V-
m6@-
pq=-
Fr+-
cK'-
)` -
]s},
DQy,
I/u,
<Ln,
8!I,
0@B,
y_;,
2?7,
L_%,
lst+
N#h+
F2]+
$vZ+
)(N+
NlK+
_}@+
$v1+
)]-+
JD)+
lp"+
GEm*
<S^*
3=G*
>a<*
8b)*
uP%*
>$|)
OJm)
&1e)
2~b)
=Y)
!*F)
>l?)
kJ3)
]?/)
k4+)
~9)
5n|(
%bt(
G\p(
TKd(
];X(
B6T(
D1P(
a,L(
8uA(
[l9(
aT!(
Nn~'
$rn'
_sj'
'vb'
S!a'
^yZ'
#{V'
k&U'
T(Q'
Z*M'
{,I'
g>-'
eA)'
|/z&
O7v&
>?r&
HGn&
mOj&
X'U&
*0Q&
"BI&
FKE&
Xg9&
T2,&
A<(&
IF$&
mP &
^Zz%
{6m%
^s]%
/#\%
UBT%
!B?%
mR;%
Vs3%
.4.%
D@|$
lkt$
N=^$
|IM$
E`I$
(wE$
y)D$
M!7$
(P/$
-($
6ay#
iNp#
-<g#
#v_#
STM#
DDD#
!b@#
/D.#
@q}"
!gP"
JBK"
BBB"
, +"
""""
s"u!
u=c!
9#G!
K3>!
@ "!
[r!
Ce{ 
- z 
*Zh 
#3^ 
>9= 
('8 
Y6* 
Ei& 
5Sx
$Tm
<!k
Zoc
@#`
o?V
*&U
X\L
(CK
Of6
MM5
M44

VUVUVU
%I%I%I
ffffff
]t]t]t
dpdpdp
UUUUUU
}h}h}h
434343
T\T\T\
-d-d-d
%I%I%I
282828
Q^Q^Q^
?4?4?4
DyDyDy
NoNoNo
qRqRqR
%I%I%I
*.*.*.
w%w%w%
111
@~@~@~
*x*x*x
*r*r*r
>l>l>l
gfgfgf
UUUUUU
SJSJSJ
U:U:U:
"5"5"5
A_A_A_
r\r\r\
*T*T*T
uQuQuQ
yIyIyI
DDDDDD
'?'?'?
":":":
252525
X0X0X0
9)9)9)
G"G"G"
VVV
VUVUVU
%I%I%I
ffffff
]t]t]t
dpdpdp
UUUUUU
}h}h}h
434343
T\T\T\
-d-d-d
%I%I%I
282828
Q^Q^Q^
?4?4?4
DyDyDy
NoNoNo
qRqRqR
%I%I%I
*.*.*.
w%w%w%
111
@~@~@~
*x*x*x
*r*r*r
>l>l>l
gfgfgf
UUUUUU
SJSJSJ
U:U:U:
"5"5"5
A_A_A_
r\r\r\
*T*T*T
uQuQuQ
yIyIyI
DDDDDD
'?'?'?
":":":
252525
X0X0X0
9)9)9)
G"G"G"
VVV
   " $ & ( * , . 0 2 4 6 8 : < > @ B D F H J L N P R T V X Z \ ^ ` b d f h j l n p r t v x z | ~ 
! !"!$!&!(!*!,!.!0!2!4!6!8!:!<!>!@!B!D!F!H!J!L!N!P!R!T!V!X!Z!\!^!`!b!d!f!h!j!l!n!p!r!t!v!x!z!|!~!
" """$"&"("*","."0"2"4"6"8":"<">"@"B"D"F"H"J"L"N"P"R"T"V"X"Z"\"^"`"b"d"f"h"j"l"n"p"r"t"v"x"z"|"~"
# #"#$#&#(#*#,#.#0#2#4#6#8#:#<#>#@#B#D#F#H#J#L#N#P#R#T#V#X#Z#\#^#`#b#d#f#h#j#l#n#p#r#t#v#x#z#|#~#
$ $!$"$#$$$%$&$'$($)$*$+$,$-$.$/$0$1$2$3$4$5$6$7$8$9$:$;$<$=$>$?$@$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&~&
' '!'"'#'$'%'&'''(')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'L'M'N'O'P'Q'R'S'T'U'V'W'X'Y'Z'['\']'^'_'`'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
(((
( ( (!(!("("(#(#($($(%(%(&(&('('((((()()(*(*(+(+(,(,(-(-(.(.(/(/(0(0(1(1(2(2(3(3(4(4(5(5(6(6(7(7(8(8(9(9(:(:(;(;(<(<(=(=(>(>(?(?(@(@(A(A(B(B(C(C(D(D(E(E(F(F(G(G(H(H(I(I(J(J(K(K(L(L(M(M(N(N(O(O(P(P(Q(Q(R(R(S(S(T(T(U(U(V(V(W(W(X(X(Y(Y(Z(Z([([(\(\(](](^(^(_(_(`(`(a(a(b(b(c(c(d(d(e(e(f(f(g(g(h(h(i(i(j(j(k(k(l(l(m(m(n(n(o(o(p(p(q(q(r(r(s(s(t(t(u(u(v(v(w(w(x(x(y(y(z(z({({(|(|(}(}(~(~(
)))
) ) )!)!)")")#)#)$)$)%)%)&)&)')')()()))))*)*)+)+),),)-)-).).)/)/)0)0)1)1)2)2)3)3)4)4)5)5)6)6)7)7)8)8)9)9):):););)<)<)=)=)>)>)?)?)@)@)A)A)B)B)C)C)D)D)E)E)F)F)G)G)H)H)I)I)J)J)K)K)L)L)M)M)N)N)O)O)P)P)Q)Q)R)R)S)S)T)T)U)U)V)V)W)W)X)X)Y)Y)Z)Z)[)[)\)\)])])^)^)_)_)`)`)a)a)b)b)c)c)d)d)e)e)f)f)g)g)h)h)i)i)j)j)k)k)l)l)m)m)n)n)o)o)p)p)q)q)r)r)s)s)t)t)u)u)v)v)w)w)x)x)y)y)z)z){){)|)|)})})~)~)
***
* * *!*!*"*"*#*#*$*$*%*%*&*&*'*'*(*(*)*)*****+*+*,*,*-*-*.*.*/*/*0*0*1*1*2*2*3*3*4*4*5*5*6*6*7*7*8*8*9*9*:*:*;*;*<*<*=*=*>*>*?*?*@*@*A*A*B*B*C*C*D*D*E*E*F*F*G*G*H*H*I*I*J*J*K*K*L*L*M*M*N*N*O*O*P*P*Q*Q*R*R*S*S*T*T*U*U*V*V*W*W*X*X*Y*Y*Z*Z*[*[*\*\*]*]*^*^*_*_*`*`*a*a*b*b*c*c*d*d*e*e*f*f*g*g*h*h*i*i*j*j*k*k*l*l*m*m*n*n*o*o*p*p*q*q*r*r*s*s*t*t*u*u*v*v*w*w*x*x*y*y*z*z*{*{*|*|*}*}*~*~*
+++
+ + +!+!+"+"+#+#+$+$+%+%+&+&+'+'+(+(+)+)+*+*+++++,+,+-+-+.+.+/+/+0+0+1+1+2+2+3+3+4+4+5+5+6+6+7+7+8+8+9+9+:+:+;+;+<+<+=+=+>+>+?+?+@+@+A+A+B+B+C+C+D+D+E+E+F+F+G+G+H+H+I+I+J+J+K+K+L+L+M+M+N+N+O+O+P+P+Q+Q+R+R+S+S+T+T+U+U+V+V+W+W+X+X+Y+Y+Z+Z+[+[+\+\+]+]+^+^+_+_+`+`+a+a+b+b+c+c+d+d+e+e+f+f+g+g+h+h+i+i+j+j+k+k+l+l+m+m+n+n+o+o+p+p+q+q+r+r+s+s+t+t+u+u+v+v+w+w+x+x+y+y+z+z+{+{+|+|+}+}+~+~+
,,,,,
, , , , ,!,!,!,!,",",",",#,#,#,#,$,$,$,$,%,%,%,%,&,&,&,&,',',',',(,(,(,(,),),),),*,*,*,*,+,+,+,+,,,,,,,,,-,-,-,-,.,.,.,.,/,/,/,/,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,:,:,:,:,;,;,;,;,<,<,<,<,=,=,=,=,>,>,>,>,?,?,?,?,@,@,@,@,A,A,A,A,B,B,B,B,C,C,C,C,D,D,D,D,E,E,E,E,F,F,F,F,G,G,G,G,H,H,H,H,I,I,I,I,J,J,J,J,K,K,K,K,L,L,L,L,M,M,M,M,N,N,N,N,O,O,O,O,P,P,P,P,Q,Q,Q,Q,R,R,R,R,S,S,S,S,T,T,T,T,U,U,U,U,V,V,V,V,W,W,W,W,X,X,X,X,Y,Y,Y,Y,Z,Z,Z,Z,[,[,[,[,\,\,\,\,],],],],^,^,^,^,_,_,_,_,`,`,`,`,a,a,a,a,b,b,b,b,c,c,c,c,d,d,d,d,e,e,e,e,f,f,f,f,g,g,g,g,h,h,h,h,i,i,i,i,j,j,j,j,k,k,k,k,l,l,l,l,m,m,m,m,n,n,n,n,o,o,o,o,p,p,p,p,q,q,q,q,r,r,r,r,s,s,s,s,t,t,t,t,u,u,u,u,v,v,v,v,w,w,w,w,x,x,x,x,y,y,y,y,z,z,z,z,{,{,{,{,|,|,|,|,},},},},~,~,~,~,
-----
`-`-`-`-a-a-a-a-b-b-b-b-c-c-c-c-d-d-d-d-e-e-e-e-f-f-f-f-g-g-g-g-h-h-h-h-i-i-i-i-j-j-j-j-k-k-k-k-l-l-l-l-m-m-m-m-n-n-n-n-o-o-o-o-p-p-p-p-q-q-q-q-r-r-r-r-s-s-s-s-t-t-t-t-u-u-u-u-v-v-v-v-w-w-w-w-x-x-x-x-y-y-y-y-z-z-z-z-{-{-{-{-|-|-|-|-}-}-}-}-~-~-~-~-
.....
`.`.`.`.a.a.a.a.b.b.b.b.c.c.c.c.d.d.d.d.e.e.e.e.f.f.f.f.g.g.g.g.h.h.h.h.i.i.i.i.j.j.j.j.k.k.k.k.l.l.l.l.m.m.m.m.n.n.n.n.o.o.o.o.p.p.p.p.q.q.q.q.r.r.r.r.s.s.s.s.t.t.t.t.u.u.u.u.v.v.v.v.w.w.w.w.x.x.x.x.y.y.y.y.z.z.z.z.{.{.{.{.|.|.|.|.}.}.}.}.~.~.~.~.
/////
`/`/`/`/a/a/a/a/b/b/b/b/c/c/c/c/d/d/d/d/e/e/e/e/f/f/f/f/g/g/g/g/h/h/h/h/i/i/i/i/j/j/j/j/k/k/k/k/l/l/l/l/m/m/m/m/n/n/n/n/o/o/o/o/p/p/p/p/q/q/q/q/r/r/r/r/s/s/s/s/t/t/t/t/u/u/u/u/v/v/v/v/w/w/w/w/x/x/x/x/y/y/y/y/z/z/z/z/{/{/{/{/|/|/|/|/}/}/}/}/~/~/~/~/
000000000
0 0 0 0 0 0 0 0 0!0!0!0!0!0!0!0!0"0"0"0"0"0"0"0"0#0#0#0#0#0#0#0#0$0$0$0$0$0$0$0$0%0%0%0%0%0%0%0%0&0&0&0&0&0&0&0&0'0'0'0'0'0'0'0'0(0(0(0(0(0(0(0(0)0)0)0)0)0)0)0)0*0*0*0*0*0*0*0*0+0+0+0+0+0+0+0+0,0,0,0,0,0,0,0,0-0-0-0-0-0-0-0-0.0.0.0.0.0.0.0.0/0/0/0/0/0/0/0/00000000000000000101010101010101020202020202020203030303030303030404040404040404050505050505050506060606060606060707070707070707080808080808080809090909090909090:0:0:0:0:0:0:0:0;0;0;0;0;0;0;0;0<0<0<0<0<0<0<0<0=0=0=0=0=0=0=0=0>0>0>0>0>0>0>0>0?0?0?0?0?0?0?0?0@0@0@0@0@0@0@0@0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0G0G0G0G0G0G0G0G0H0H0H0H0H0H0H0H0I0I0I0I0I0I0I0I0J0J0J0J0J0J0J0J0K0K0K0K0K0K0K0K0L0L0L0L0L0L0L0L0M0M0M0M0M0M0M0M0N0N0N0N0N0N0N0N0O0O0O0O0O0O0O0O0P0P0P0P0P0P0P0P0Q0Q0Q0Q0Q0Q0Q0Q0R0R0R0R0R0R0R0R0S0S0S0S0S0S0S0S0T0T0T0T0T0T0T0T0U0U0U0U0U0U0U0U0V0V0V0V0V0V0V0V0W0W0W0W0W0W0W0W0X0X0X0X0X0X0X0X0Y0Y0Y0Y0Y0Y0Y0Y0Z0Z0Z0Z0Z0Z0Z0Z0[0[0[0[0[0[0[0[0\0\0\0\0\0\0\0\0]0]0]0]0]0]0]0]0^0^0^0^0^0^0^0^0_0_0_0_0_0_0_0_0`0`0`0`0`0`0`0`0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0g0g0g0g0g0g0g0g0h0h0h0h0h0h0h0h0i0i0i0i0i0i0i0i0j0j0j0j0j0j0j0j0k0k0k0k0k0k0k0k0l0l0l0l0l0l0l0l0m0m0m0m0m0m0m0m0n0n0n0n0n0n0n0n0o0o0o0o0o0o0o0o0p0p0p0p0p0p0p0p0q0q0q0q0q0q0q0q0r0r0r0r0r0r0r0r0s0s0s0s0s0s0s0s0t0t0t0t0t0t0t0t0u0u0u0u0u0u0u0u0v0v0v0v0v0v0v0v0w0w0w0w0w0w0w0w0x0x0x0x0x0x0x0x0y0y0y0y0y0y0y0y0z0z0z0z0z0z0z0z0{0{0{0{0{0{0{0{0|0|0|0|0|0|0|0|0}0}0}0}0}0}0}0}0~0~0~0~0~0~0~0~0
111111111
1 1 1 1 1 1 1 1 1!1!1!1!1!1!1!1!1"1"1"1"1"1"1"1"1#1#1#1#1#1#1#1#1$1$1$1$1$1$1$1$1%1%1%1%1%1%1%1%1&1&1&1&1&1&1&1&1'1'1'1'1'1'1'1'1(1(1(1(1(1(1(1(1)1)1)1)1)1)1)1)1*1*1*1*1*1*1*1*1+1+1+1+1+1+1+1+1,1,1,1,1,1,1,1,1-1-1-1-1-1-1-1-1.1.1.1.1.1.1.1.1/1/1/1/1/1/1/1/10101010101010101111111111111111121212121212121213131313131313131414141414141414151515151515151516161616161616161717171717171717181818181818181819191919191919191:1:1:1:1:1:1:1:1;1;1;1;1;1;1;1;1<1<1<1<1<1<1<1<1=1=1=1=1=1=1=1=1>1>1>1>1>1>1>1>1?1?1?1?1?1?1?1?1@1@1@1@1@1@1@1@1A1A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F1F1G1G1G1G1G1G1G1G1H1H1H1H1H1H1H1H1I1I1I1I1I1I1I1I1J1J1J1J1J1J1J1J1K1K1K1K1K1K1K1K1L1L1L1L1L1L1L1L1M1M1M1M1M1M1M1M1N1N1N1N1N1N1N1N1O1O1O1O1O1O1O1O1P1P1P1P1P1P1P1P1Q1Q1Q1Q1Q1Q1Q1Q1R1R1R1R1R1R1R1R1S1S1S1S1S1S1S1S1T1T1T1T1T1T1T1T1U1U1U1U1U1U1U1U1V1V1V1V1V1V1V1V1W1W1W1W1W1W1W1W1X1X1X1X1X1X1X1X1Y1Y1Y1Y1Y1Y1Y1Y1Z1Z1Z1Z1Z1Z1Z1Z1[1[1[1[1[1[1[1[1\1\1\1\1\1\1\1\1]1]1]1]1]1]1]1]1^1^1^1^1^1^1^1^1_1_1_1_1_1_1_1_1`1`1`1`1`1`1`1`1a1a1a1a1a1a1a1a1b1b1b1b1b1b1b1b1c1c1c1c1c1c1c1c1d1d1d1d1d1d1d1d1e1e1e1e1e1e1e1e1f1f1f1f1f1f1f1f1g1g1g1g1g1g1g1g1h1h1h1h1h1h1h1h1i1i1i1i1i1i1i1i1j1j1j1j1j1j1j1j1k1k1k1k1k1k1k1k1l1l1l1l1l1l1l1l1m1m1m1m1m1m1m1m1n1n1n1n1n1n1n1n1o1o1o1o1o1o1o1o1p1p1p1p1p1p1p1p1q1q1q1q1q1q1q1q1r1r1r1r1r1r1r1r1s1s1s1s1s1s1s1s1t1t1t1t1t1t1t1t1u1u1u1u1u1u1u1u1v1v1v1v1v1v1v1v1w1w1w1w1w1w1w1w1x1x1x1x1x1x1x1x1y1y1y1y1y1y1y1y1z1z1z1z1z1z1z1z1{1{1{1{1{1{1{1{1|1|1|1|1|1|1|1|1}1}1}1}1}1}1}1}1~1~1~1~1~1~1~1~1
222222222
2 2 2 2 2 2 2 2 2!2!2!2!2!2!2!2!2"2"2"2"2"2"2"2"2#2#2#2#2#2#2#2#2$2$2$2$2$2$2$2$2%2%2%2%2%2%2%2%2&2&2&2&2&2&2&2&2'2'2'2'2'2'2'2'2(2(2(2(2(2(2(2(2)2)2)2)2)2)2)2)2*2*2*2*2*2*2*2*2+2+2+2+2+2+2+2+2,2,2,2,2,2,2,2,2-2-2-2-2-2-2-2-2.2.2.2.2.2.2.2.2/2/2/2/2/2/2/2/20202020202020202121212121212121222222222222222223232323232323232424242424242424252525252525252526262626262626262727272727272727282828282828282829292929292929292:2:2:2:2:2:2:2:2;2;2;2;2;2;2;2;2<2<2<2<2<2<2<2<2=2=2=2=2=2=2=2=2>2>2>2>2>2>2>2>2?2?2?2?2?2?2?2?2@2@2@2@2@2@2@2@2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2G2G2G2G2G2G2G2G2H2H2H2H2H2H2H2H2I2I2I2I2I2I2I2I2J2J2J2J2J2J2J2J2K2K2K2K2K2K2K2K2L2L2L2L2L2L2L2L2M2M2M2M2M2M2M2M2N2N2N2N2N2N2N2N2O2O2O2O2O2O2O2O2P2P2P2P2P2P2P2P2Q2Q2Q2Q2Q2Q2Q2Q2R2R2R2R2R2R2R2R2S2S2S2S2S2S2S2S2T2T2T2T2T2T2T2T2U2U2U2U2U2U2U2U2V2V2V2V2V2V2V2V2W2W2W2W2W2W2W2W2X2X2X2X2X2X2X2X2Y2Y2Y2Y2Y2Y2Y2Y2Z2Z2Z2Z2Z2Z2Z2Z2[2[2[2[2[2[2[2[2\2\2\2\2\2\2\2\2]2]2]2]2]2]2]2]2^2^2^2^2^2^2^2^2_2_2_2_2_2_2_2_2`2`2`2`2`2`2`2`2a2a2a2a2a2a2a2a2b2b2b2b2b2b2b2b2c2c2c2c2c2c2c2c2d2d2d2d2d2d2d2d2e2e2e2e2e2e2e2e2f2f2f2f2f2f2f2f2g2g2g2g2g2g2g2g2h2h2h2h2h2h2h2h2i2i2i2i2i2i2i2i2j2j2j2j2j2j2j2j2k2k2k2k2k2k2k2k2l2l2l2l2l2l2l2l2m2m2m2m2m2m2m2m2n2n2n2n2n2n2n2n2o2o2o2o2o2o2o2o2p2p2p2p2p2p2p2p2q2q2q2q2q2q2q2q2r2r2r2r2r2r2r2r2s2s2s2s2s2s2s2s2t2t2t2t2t2t2t2t2u2u2u2u2u2u2u2u2v2v2v2v2v2v2v2v2w2w2w2w2w2w2w2w2x2x2x2x2x2x2x2x2y2y2y2y2y2y2y2y2z2z2z2z2z2z2z2z2{2{2{2{2{2{2{2{2|2|2|2|2|2|2|2|2}2}2}2}2}2}2}2}2~2~2~2~2~2~2~2~2
333333333
3 3 3 3 3 3 3 3 3!3!3!3!3!3!3!3!3"3"3"3"3"3"3"3"3#3#3#3#3#3#3#3#3$3$3$3$3$3$3$3$3%3%3%3%3%3%3%3%3&3&3&3&3&3&3&3&3'3'3'3'3'3'3'3'3(3(3(3(3(3(3(3(3)3)3)3)3)3)3)3)3*3*3*3*3*3*3*3*3+3+3+3+3+3+3+3+3,3,3,3,3,3,3,3,3-3-3-3-3-3-3-3-3.3.3.3.3.3.3.3.3/3/3/3/3/3/3/3/30303030303030303131313131313131323232323232323233333333333333333434343434343434353535353535353536363636363636363737373737373737383838383838383839393939393939393:3:3:3:3:3:3:3:3;3;3;3;3;3;3;3;3<3<3<3<3<3<3<3<3=3=3=3=3=3=3=3=3>3>3>3>3>3>3>3>3?3?3?3?3?3?3?3?3@3@3@3@3@3@3@3@3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3G3G3G3G3G3G3G3G3H3H3H3H3H3H3H3H3I3I3I3I3I3I3I3I3J3J3J3J3J3J3J3J3K3K3K3K3K3K3K3K3L3L3L3L3L3L3L3L3M3M3M3M3M3M3M3M3N3N3N3N3N3N3N3N3O3O3O3O3O3O3O3O3P3P3P3P3P3P3P3P3Q3Q3Q3Q3Q3Q3Q3Q3R3R3R3R3R3R3R3R3S3S3S3S3S3S3S3S3T3T3T3T3T3T3T3T3U3U3U3U3U3U3U3U3V3V3V3V3V3V3V3V3W3W3W3W3W3W3W3W3X3X3X3X3X3X3X3X3Y3Y3Y3Y3Y3Y3Y3Y3Z3Z3Z3Z3Z3Z3Z3Z3[3[3[3[3[3[3[3[3\3\3\3\3\3\3\3\3]3]3]3]3]3]3]3]3^3^3^3^3^3^3^3^3_3_3_3_3_3_3_3_3`3`3`3`3`3`3`3`3a3a3a3a3a3a3a3a3b3b3b3b3b3b3b3b3c3c3c3c3c3c3c3c3d3d3d3d3d3d3d3d3e3e3e3e3e3e3e3e3f3f3f3f3f3f3f3f3g3g3g3g3g3g3g3g3h3h3h3h3h3h3h3h3i3i3i3i3i3i3i3i3j3j3j3j3j3j3j3j3k3k3k3k3k3k3k3k3l3l3l3l3l3l3l3l3m3m3m3m3m3m3m3m3n3n3n3n3n3n3n3n3o3o3o3o3o3o3o3o3p3p3p3p3p3p3p3p3q3q3q3q3q3q3q3q3r3r3r3r3r3r3r3r3s3s3s3s3s3s3s3s3t3t3t3t3t3t3t3t3u3u3u3u3u3u3u3u3v3v3v3v3v3v3v3v3w3w3w3w3w3w3w3w3x3x3x3x3x3x3x3x3y3y3y3y3y3y3y3y3z3z3z3z3z3z3z3z3{3{3{3{3{3{3{3{3|3|3|3|3|3|3|3|3}3}3}3}3}3}3}3}3~3~3~3~3~3~3~3~3
44444444444444444
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4!4!4!4!4!4!4!4!4!4!4!4!4!4!4!4!4"4"4"4"4"4"4"4"4"4"4"4"4"4"4"4"4#4#4#4#4#4#4#4#4#4#4#4#4#4#4#4#4$4$4$4$4$4$4$4$4$4$4$4$4$4$4$4$4%4%4%4%4%4%4%4%4%4%4%4%4%4%4%4%4&4&4&4&4&4&4&4&4&4&4&4&4&4&4&4&4'4'4'4'4'4'4'4'4'4'4'4'4'4'4'4'4(4(4(4(4(4(4(4(4(4(4(4(4(4(4(4(4)4)4)4)4)4)4)4)4)4)4)4)4)4)4)4)4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4*4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4-4.4.4.4.4.4.4.4.4.4.4.4.4.4.4.4.4/4/4/4/4/4/4/4/4/4/4/4/4/4/4/4/404040404040404040404040404040404141414141414141414141414141414142424242424242424242424242424242434343434343434343434343434343434444444444444444444444444444444445454545454545454545454545454545464646464646464646464646464646464747474747474747474747474747474748484848484848484848484848484848494949494949494949494949494949494:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4<4=4=4=4=4=4=4=4=4=4=4=4=4=4=4=4=4>4>4>4>4>4>4>4>4>4>4>4>4>4>4>4>4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4@4@4@4@4@4@4@4@4@4@4@4@4@4@4@4@4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4G4G4G4G4G4G4G4G4G4G4G4G4G4G4G4G4H4H4H4H4H4H4H4H4H4H4H4H4H4H4H4H4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4J4J4J4J4J4J4J4J4J4J4J4J4J4J4J4J4K4K4K4K4K4K4K4K4K4K4K4K4K4K4K4K4L4L4L4L4L4L4L4L4L4L4L4L4L4L4L4L4M4M4M4M4M4M4M4M4M4M4M4M4M4M4M4M4N4N4N4N4N4N4N4N4N4N4N4N4N4N4N4N4O4O4O4O4O4O4O4O4O4O4O4O4O4O4O4O4P4P4P4P4P4P4P4P4P4P4P4P4P4P4P4P4Q4Q4Q4Q4Q4Q4Q4Q4Q4Q4Q4Q4Q4Q4Q4Q4R4R4R4R4R4R4R4R4R4R4R4R4R4R4R4R4S4S4S4S4S4S4S4S4S4S4S4S4S4S4S4S4T4T4T4T4T4T4T4T4T4T4T4T4T4T4T4T4U4U4U4U4U4U4U4U4U4U4U4U4U4U4U4U4V4V4V4V4V4V4V4V4V4V4V4V4V4V4V4V4W4W4W4W4W4W4W4W4W4W4W4W4W4W4W4W4X4X4X4X4X4X4X4X4X4X4X4X4X4X4X4X4Y4Y4Y4Y4Y4Y4Y4Y4Y4Y4Y4Y4Y4Y4Y4Y4Z4Z4Z4Z4Z4Z4Z4Z4Z4Z4Z4Z4Z4Z4Z4Z4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4[4\4\4\4\4\4\4\4\4\4\4\4\4\4\4\4\4]4]4]4]4]4]4]4]4]4]4]4]4]4]4]4]4^4^4^4^4^4^4^4^4^4^4^4^4^4^4^4^4_4_4_4_4_4_4_4_4_4_4_4_4_4_4_4_4`4`4`4`4`4`4`4`4`4`4`4`4`4`4`4`4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4a4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4b4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4g4g4g4g4g4g4g4g4g4g4g4g4g4g4g4g4h4h4h4h4h4h4h4h4h4h4h4h4h4h4h4h4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4j4j4j4j4j4j4j4j4j4j4j4j4j4j4j4j4k4k4k4k4k4k4k4k4k4k4k4k4k4k4k4k4l4l4l4l4l4l4l4l4l4l4l4l4l4l4l4l4m4m4m4m4m4m4m4m4m4m4m4m4m4m4m4m4n4n4n4n4n4n4n4n4n4n4n4n4n4n4n4n4o4o4o4o4o4o4o4o4o4o4o4o4o4o4o4o4p4p4p4p4p4p4p4p4p4p4p4p4p4p4p4p4q4q4q4q4q4q4q4q4q4q4q4q4q4q4q4q4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4r4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4t4t4t4t4t4t4t4t4t4t4t4t4t4t4t4t4u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4u4v4v4v4v4v4v4v4v4v4v4v4v4v4v4v4v4w4w4w4w4w4w4w4w4w4w4w4w4w4w4w4w4x4x4x4x4x4x4x4x4x4x4x4x4x4x4x4x4y4y4y4y4y4y4y4y4y4y4y4y4y4y4y4y4z4z4z4z4z4z4z4z4z4z4z4z4z4z4z4z4{4{4{4{4{4{4{4{4{4{4{4{4{4{4{4{4|4|4|4|4|4|4|4|4|4|4|4|4|4|4|4|4}4}4}4}4}4}4}4}4}4}4}4}4}4}4}4}4~4~4~4~4~4~4~4~4~4~4~4~4~4~4~4~4
55555555555555555
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5!5!5!5!5!5!5!5!5!5!5!5!5!5!5!5!5"5"5"5"5"5"5"5"5"5"5"5"5"5"5"5"5#5#5#5#5#5#5#5#5#5#5#5#5#5#5#5#5$5$5$5$5$5$5$5$5$5$5$5$5$5$5$5$5%5%5%5%5%5%5%5%5%5%5%5%5%5%5%5%5&5&5&5&5&5&5&5&5&5&5&5&5&5&5&5&5'5'5'5'5'5'5'5'5'5'5'5'5'5'5'5'5(5(5(5(5(5(5(5(5(5(5(5(5(5(5(5(5)5)5)5)5)5)5)5)5)5)5)5)5)5)5)5)5*5*5*5*5*5*5*5*5*5*5*5*5*5*5*5*5+5+5+5+5+5+5+5+5+5+5+5+5+5+5+5+5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5.5.5.5.5.5.5.5.5.5.5.5.5.5.5.5.5/5/5/5/5/5/5/5/5/5/5/5/5/5/5/5/505050505050505050505050505050505151515151515151515151515151515152525252525252525252525252525252535353535353535353535353535353535454545454545454545454545454545455555555555555555555555555555555565656565656565656565656565656565757575757575757575757575757575758585858585858585858585858585858595959595959595959595959595959595:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5<5=5=5=5=5=5=5=5=5=5=5=5=5=5=5=5=5>5>5>5>5>5>5>5>5>5>5>5>5>5>5>5>5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@5@5@5@5@5@5@5@5@5@5@5@5@5@5@5@5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5D5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5G5G5G5G5G5G5G5G5G5G5G5G5G5G5G5G5H5H5H5H5H5H5H5H5H5H5H5H5H5H5H5H5I5I5I5I5I5I5I5I5I5I5I5I5I5I5I5I5J5J5J5J5J5J5J5J5J5J5J5J5J5J5J5J5K5K5K5K5K5K5K5K5K5K5K5K5K5K5K5K5L5L5L5L5L5L5L5L5L5L5L5L5L5L5L5L5M5M5M5M5M5M5M5M5M5M5M5M5M5M5M5M5N5N5N5N5N5N5N5N5N5N5N5N5N5N5N5N5O5O5O5O5O5O5O5O5O5O5O5O5O5O5O5O5P5P5P5P5P5P5P5P5P5P5P5P5P5P5P5P5Q5Q5Q5Q5Q5Q5Q5Q5Q5Q5Q5Q5Q5Q5Q5Q5R5R5R5R5R5R5R5R5R5R5R5R5R5R5R5R5S5S5S5S5S5S5S5S5S5S5S5S5S5S5S5S5T5T5T5T5T5T5T5T5T5T5T5T5T5T5T5T5U5U5U5U5U5U5U5U5U5U5U5U5U5U5U5U5V5V5V5V5V5V5V5V5V5V5V5V5V5V5V5V5W5W5W5W5W5W5W5W5W5W5W5W5W5W5W5W5X5X5X5X5X5X5X5X5X5X5X5X5X5X5X5X5Y5Y5Y5Y5Y5Y5Y5Y5Y5Y5Y5Y5Y5Y5Y5Y5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5Z5[5[5[5[5[5[5[5[5[5[5[5[5[5[5[5[5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5]5]5]5]5]5]5]5]5]5]5]5]5]5]5]5]5^5^5^5^5^5^5^5^5^5^5^5^5^5^5^5^5_5_5_5_5_5_5_5_5_5_5_5_5_5_5_5_5`5`5`5`5`5`5`5`5`5`5`5`5`5`5`5`5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5g5g5g5g5g5g5g5g5g5g5g5g5g5g5g5g5h5h5h5h5h5h5h5h5h5h5h5h5h5h5h5h5i5i5i5i5i5i5i5i5i5i5i5i5i5i5i5i5j5j5j5j5j5j5j5j5j5j5j5j5j5j5j5j5k5k5k5k5k5k5k5k5k5k5k5k5k5k5k5k5l5l5l5l5l5l5l5l5l5l5l5l5l5l5l5l5m5m5m5m5m5m5m5m5m5m5m5m5m5m5m5m5n5n5n5n5n5n5n5n5n5n5n5n5n5n5n5n5o5o5o5o5o5o5o5o5o5o5o5o5o5o5o5o5p5p5p5p5p5p5p5p5p5p5p5p5p5p5p5p5q5q5q5q5q5q5q5q5q5q5q5q5q5q5q5q5r5r5r5r5r5r5r5r5r5r5r5r5r5r5r5r5s5s5s5s5s5s5s5s5s5s5s5s5s5s5s5s5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t5t5u5u5u5u5u5u5u5u5u5u5u5u5u5u5u5u5v5v5v5v5v5v5v5v5v5v5v5v5v5v5v5v5w5w5w5w5w5w5w5w5w5w5w5w5w5w5w5w5x5x5x5x5x5x5x5x5x5x5x5x5x5x5x5x5y5y5y5y5y5y5y5y5y5y5y5y5y5y5y5y5z5z5z5z5z5z5z5z5z5z5z5z5z5z5z5z5{5{5{5{5{5{5{5{5{5{5{5{5{5{5{5{5|5|5|5|5|5|5|5|5|5|5|5|5|5|5|5|5}5}5}5}5}5}5}5}5}5}5}5}5}5}5}5}5~5~5~5~5~5~5~5~5~5~5~5~5~5~5~5~5
66666666666666666
6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6!6!6!6!6!6!6!6!6!6!6!6!6!6!6!6!6"6"6"6"6"6"6"6"6"6"6"6"6"6"6"6"6#6#6#6#6#6#6#6#6#6#6#6#6#6#6#6#6$6$6$6$6$6$6$6$6$6$6$6$6$6$6$6$6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6%6&6&6&6&6&6&6&6&6&6&6&6&6&6&6&6&6'6'6'6'6'6'6'6'6'6'6'6'6'6'6'6'6(6(6(6(6(6(6(6(6(6(6(6(6(6(6(6(6)6)6)6)6)6)6)6)6)6)6)6)6)6)6)6)6*6*6*6*6*6*6*6*6*6*6*6*6*6*6*6*6+6+6+6+6+6+6+6+6+6+6+6+6+6+6+6+6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6-6-6-6-6-6-6-6-6-6-6-6-6-6-6-6-6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6.6/6/6/6/6/6/6/6/6/6/6/6/6/6/6/6/606060606060606060606060606060606161616161616161616161616161616162626262626262626262626262626262636363636363636363636363636363636464646464646464646464646464646465656565656565656565656565656565666666666666666666666666666666666767676767676767676767676767676768686868686868686868686868686868696969696969696969696969696969696:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6<6=6=6=6=6=6=6=6=6=6=6=6=6=6=6=6=6>6>6>6>6>6>6>6>6>6>6>6>6>6>6>6>6?6?6?6?6?6?6?6?6?6?6?6?6?6?6?6?6@6@6@6@6@6@6@6@6@6@6@6@6@6@6@6@6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6A6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6G6G6G6G6G6G6G6G6G6G6G6G6G6G6G6G6H6H6H6H6H6H6H6H6H6H6H6H6H6H6H6H6I6I6I6I6I6I6I6I6I6I6I6I6I6I6I6I6J6J6J6J6J6J6J6J6J6J6J6J6J6J6J6J6K6K6K6K6K6K6K6K6K6K6K6K6K6K6K6K6L6L6L6L6L6L6L6L6L6L6L6L6L6L6L6L6M6M6M6M6M6M6M6M6M6M6M6M6M6M6M6M6N6N6N6N6N6N6N6N6N6N6N6N6N6N6N6N6O6O6O6O6O6O6O6O6O6O6O6O6O6O6O6O6P6P6P6P6P6P6P6P6P6P6P6P6P6P6P6P6Q6Q6Q6Q6Q6Q6Q6Q6Q6Q6Q6Q6Q6Q6Q6Q6R6R6R6R6R6R6R6R6R6R6R6R6R6R6R6R6S6S6S6S6S6S6S6S6S6S6S6S6S6S6S6S6T6T6T6T6T6T6T6T6T6T6T6T6T6T6T6T6U6U6U6U6U6U6U6U6U6U6U6U6U6U6U6U6V6V6V6V6V6V6V6V6V6V6V6V6V6V6V6V6W6W6W6W6W6W6W6W6W6W6W6W6W6W6W6W6X6X6X6X6X6X6X6X6X6X6X6X6X6X6X6X6Y6Y6Y6Y6Y6Y6Y6Y6Y6Y6Y6Y6Y6Y6Y6Y6Z6Z6Z6Z6Z6Z6Z6Z6Z6Z6Z6Z6Z6Z6Z6Z6[6[6[6[6[6[6[6[6[6[6[6[6[6[6[6[6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6]6]6]6]6]6]6]6]6]6]6]6]6]6]6]6]6^6^6^6^6^6^6^6^6^6^6^6^6^6^6^6^6_6_6_6_6_6_6_6_6_6_6_6_6_6_6_6_6`6`6`6`6`6`6`6`6`6`6`6`6`6`6`6`6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6c6c6c6c6c6c6c6c6c6c6c6c6c6c6c6c6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6g6g6g6g6g6g6g6g6g6g6g6g6g6g6g6g6h6h6h6h6h6h6h6h6h6h6h6h6h6h6h6h6i6i6i6i6i6i6i6i6i6i6i6i6i6i6i6i6j6j6j6j6j6j6j6j6j6j6j6j6j6j6j6j6k6k6k6k6k6k6k6k6k6k6k6k6k6k6k6k6l6l6l6l6l6l6l6l6l6l6l6l6l6l6l6l6m6m6m6m6m6m6m6m6m6m6m6m6m6m6m6m6n6n6n6n6n6n6n6n6n6n6n6n6n6n6n6n6o6o6o6o6o6o6o6o6o6o6o6o6o6o6o6o6p6p6p6p6p6p6p6p6p6p6p6p6p6p6p6p6q6q6q6q6q6q6q6q6q6q6q6q6q6q6q6q6r6r6r6r6r6r6r6r6r6r6r6r6r6r6r6r6s6s6s6s6s6s6s6s6s6s6s6s6s6s6s6s6t6t6t6t6t6t6t6t6t6t6t6t6t6t6t6t6u6u6u6u6u6u6u6u6u6u6u6u6u6u6u6u6v6v6v6v6v6v6v6v6v6v6v6v6v6v6v6v6w6w6w6w6w6w6w6w6w6w6w6w6w6w6w6w6x6x6x6x6x6x6x6x6x6x6x6x6x6x6x6x6y6y6y6y6y6y6y6y6y6y6y6y6y6y6y6y6z6z6z6z6z6z6z6z6z6z6z6z6z6z6z6z6{6{6{6{6{6{6{6{6{6{6{6{6{6{6{6{6|6|6|6|6|6|6|6|6|6|6|6|6|6|6|6|6}6}6}6}6}6}6}6}6}6}6}6}6}6}6}6}6~6~6~6~6~6~6~6~6~6~6~6~6~6~6~6~6
77777777777777777
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7!7!7!7!7!7!7!7!7!7!7!7!7!7!7!7!7"7"7"7"7"7"7"7"7"7"7"7"7"7"7"7"7#7#7#7#7#7#7#7#7#7#7#7#7#7#7#7#7$7$7$7$7$7$7$7$7$7$7$7$7$7$7$7$7%7%7%7%7%7%7%7%7%7%7%7%7%7%7%7%7&7&7&7&7&7&7&7&7&7&7&7&7&7&7&7&7'7'7'7'7'7'7'7'7'7'7'7'7'7'7'7'7(7(7(7(7(7(7(7(7(7(7(7(7(7(7(7(7)7)7)7)7)7)7)7)7)7)7)7)7)7)7)7)7*7*7*7*7*7*7*7*7*7*7*7*7*7*7*7*7+7+7+7+7+7+7+7+7+7+7+7+7+7+7+7+7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7-7-7-7-7-7-7-7-7-7-7-7-7-7-7-7-7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7.7/7/7/7/7/7/7/7/7/7/7/7/7/7/7/7/707070707070707070707070707070707171717171717171717171717171717172727272727272727272727272727272737373737373737373737373737373737474747474747474747474747474747475757575757575757575757575757575767676767676767676767676767676767777777777777777777777777777777778787878787878787878787878787878797979797979797979797979797979797:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7<7=7=7=7=7=7=7=7=7=7=7=7=7=7=7=7=7>7>7>7>7>7>7>7>7>7>7>7>7>7>7>7>7?7?7?7?7?7?7?7?7?7?7?7?7?7?7?7?7@7@7@7@7@7@7@7@7@7@7@7@7@7@7@7@7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7A7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7G7G7G7G7G7G7G7G7G7G7G7G7G7G7G7G7H7H7H7H7H7H7H7H7H7H7H7H7H7H7H7H7I7I7I7I7I7I7I7I7I7I7I7I7I7I7I7I7J7J7J7J7J7J7J7J7J7J7J7J7J7J7J7J7K7K7K7K7K7K7K7K7K7K7K7K7K7K7K7K7L7L7L7L7L7L7L7L7L7L7L7L7L7L7L7L7M7M7M7M7M7M7M7M7M7M7M7M7M7M7M7M7N7N7N7N7N7N7N7N7N7N7N7N7N7N7N7N7O7O7O7O7O7O7O7O7O7O7O7O7O7O7O7O7P7P7P7P7P7P7P7P7P7P7P7P7P7P7P7P7Q7Q7Q7Q7Q7Q7Q7Q7Q7Q7Q7Q7Q7Q7Q7Q7R7R7R7R7R7R7R7R7R7R7R7R7R7R7R7R7S7S7S7S7S7S7S7S7S7S7S7S7S7S7S7S7T7T7T7T7T7T7T7T7T7T7T7T7T7T7T7T7U7U7U7U7U7U7U7U7U7U7U7U7U7U7U7U7V7V7V7V7V7V7V7V7V7V7V7V7V7V7V7V7W7W7W7W7W7W7W7W7W7W7W7W7W7W7W7W7X7X7X7X7X7X7X7X7X7X7X7X7X7X7X7X7Y7Y7Y7Y7Y7Y7Y7Y7Y7Y7Y7Y7Y7Y7Y7Y7Z7Z7Z7Z7Z7Z7Z7Z7Z7Z7Z7Z7Z7Z7Z7Z7[7[7[7[7[7[7[7[7[7[7[7[7[7[7[7[7\7\7\7\7\7\7\7\7\7\7\7\7\7\7\7\7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7]7^7^7^7^7^7^7^7^7^7^7^7^7^7^7^7^7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7_7`7`7`7`7`7`7`7`7`7`7`7`7`7`7`7`7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7c7c7c7c7c7c7c7c7c7c7c7c7c7c7c7c7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7d7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7g7g7g7g7g7g7g7g7g7g7g7g7g7g7g7g7h7h7h7h7h7h7h7h7h7h7h7h7h7h7h7h7i7i7i7i7i7i7i7i7i7i7i7i7i7i7i7i7j7j7j7j7j7j7j7j7j7j7j7j7j7j7j7j7k7k7k7k7k7k7k7k7k7k7k7k7k7k7k7k7l7l7l7l7l7l7l7l7l7l7l7l7l7l7l7l7m7m7m7m7m7m7m7m7m7m7m7m7m7m7m7m7n7n7n7n7n7n7n7n7n7n7n7n7n7n7n7n7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7o7p7p7p7p7p7p7p7p7p7p7p7p7p7p7p7p7q7q7q7q7q7q7q7q7q7q7q7q7q7q7q7q7r7r7r7r7r7r7r7r7r7r7r7r7r7r7r7r7s7s7s7s7s7s7s7s7s7s7s7s7s7s7s7s7t7t7t7t7t7t7t7t7t7t7t7t7t7t7t7t7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7v7w7w7w7w7w7w7w7w7w7w7w7w7w7w7w7w7x7x7x7x7x7x7x7x7x7x7x7x7x7x7x7x7y7y7y7y7y7y7y7y7y7y7y7y7y7y7y7y7z7z7z7z7z7z7z7z7z7z7z7z7z7z7z7z7{7{7{7{7{7{7{7{7{7{7{7{7{7{7{7{7|7|7|7|7|7|7|7|7|7|7|7|7|7|7|7|7}7}7}7}7}7}7}7}7}7}7}7}7}7}7}7}7~7~7~7~7~7~7~7~7~7~7~7~7~7~7~7~7
888888888888888888888888888888888
`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8`8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8b8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8g8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8h8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8j8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8k8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8l8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8m8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8n8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8o8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8p8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8q8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8r8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8s8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8t8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8u8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8v8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8w8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8x8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8y8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8z8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8{8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8|8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8}8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8~8
999999999999999999999999999999999
`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9`9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9c9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9g9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9h9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9i9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9j9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9k9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9l9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9m9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9n9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9o9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9p9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9q9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9r9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9s9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9t9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9u9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9v9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9w9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9x9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9y9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9z9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9{9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9|9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9}9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9~9
:::::::::::::::::::::::::::::::::
: : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : :!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:!:":":":":":":":":":":":":":":":":":":":":":":":":":":":":":":":":#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:#:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:$:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:%:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:&:':':':':':':':':':':':':':':':':':':':':':':':':':':':':':':':':(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:(:):):):):):):):):):):):):):):):):):):):):):):):):):):):):):):):):*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:*:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:+:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:-:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:.:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:/:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:2:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:3:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:5:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:6:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:7:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:9:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:<:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:>:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:?:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:@:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:B:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:C:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:D:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:E:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:F:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:G:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:H:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:I:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:J:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:K:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:L:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:M:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:N:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:O:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:P:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:Q:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:R:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:S:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:T:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:U:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:V:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:W:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:X:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Y:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:Z:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:[:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:]:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:^:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:_:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:`:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:a:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:b:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:c:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:d:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:e:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:f:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:g:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:h:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:j:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:k:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:l:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:m:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:n:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:o:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:p:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:q:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:r:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:s:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:t:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:u:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:v:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:w:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:x:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:y:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:z:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:{:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:}:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:~:
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;!;";";";";";";";";";";";";";";";";";";";";";";";";";";";";";";";";#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;#;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;$;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;%;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;&;';';';';';';';';';';';';';';';';';';';';';';';';';';';';';';';';(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;(;););););););););););););););););););););););););););););););););*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;+;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;,;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;-;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;.;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;/;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;1;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;3;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;4;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;5;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;7;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;8;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;9;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;:;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;<;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;=;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;>;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;?;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;@;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;B;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;C;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;D;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;E;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;F;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;G;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;H;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;I;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;J;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;K;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;L;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;M;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;N;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;O;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;P;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;Q;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;R;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;S;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;T;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;U;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;V;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;W;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Y;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;Z;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;[;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;];];];];];];];];];];];];];];];];];];];];];];];];];];];];];];];];^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;^;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;`;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;a;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;b;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;c;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;d;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;f;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;g;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;h;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;i;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;j;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;k;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;l;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;m;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;n;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;o;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;p;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;q;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;r;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;s;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;t;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;u;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;v;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;x;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;y;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;z;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;{;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;|;};};};};};};};};};};};};};};};};};};};};};};};};};};};};};};};};~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;~;
"3DUfw



@>@>@>@>@>@>@>@>
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
! 1 
! A! 
" "!"
!!!!
q9Yn
2D>&
g!i@
\_A?
]B[>
GYni=
|;BB~7>
?@s!
:qo<
3 ?d$-?a
<kGPu
4U~K
rT;K
@8,D
@8,D
<8Mc=
S=#qw>.f1?
?}%u?
$N?*gE?
5??X-?
S=#qw>#qw>#qw>#qw>.f1?.f1?.f1?.f1?
   00
0 00
p @ P ` p0@0P0`0p
@ @0P
P P0`
` `0p
p p0@@@P@`@pP@PPP`Pp`@`P```pp@pPp`pp@
0$0D0d0
1%1E1e1
2&2F2f2
3'3G3g3
4$444D4T4d4t4
5%555E5U5e5u5
6&666F6V6f6v6
7'777G7W7g7w7
8$8,848<8D8L8T8\8d8l8t8|8
9%9-959=9E9M9U9]9e9m9u9}9
:&:.:6:>:F:N:V:^:f:n:v:~:
;';/;7;?;G;O;W;_;g;o;w;

                                             !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!""""""""""""""""""""""""""""""""################################$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&''''''''''''''''''''''''''''''''((((((((((((((((((((((((((((((((())))))))))))))))))))))))))))))))********************************++++++++++++++++++++++++++++++++,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,--------------------------------................................////////////////////////////////0000000000000000000000000000000001111111111111111111111111111111122222222222222222222222222222222333333333333333333333333333333334444444444444444444444444444444455555555555555555555555555555555666666666666666666666666666666667777777777777777777777777777777788888888888888888888888888888888899999999999999999999999999999999::::::::::::::::::::::::::::::::;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<================================>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>????????????????????????????????@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOPPPPPPPPPPPPPPPPPQQQQQQQQQQQQQQQQRRRRRRRRRRRRRRRRSSSSSSSSSSSSSSSSTTTTTTTTTTTTTTTTUUUUUUUUUUUUUUUUVVVVVVVVVVVVVVVVWWWWWWWWWWWWWWWWXXXXXXXXXXXXXXXXYYYYYYYYYYYYYYYYZZZZZZZZZZZZZZZZ[[[[[[[[[[[[[[[[\\\\\\\\\\\\\\\\]]]]]]]]]]]]]]]]^^^^^^^^^^^^^^^^________________`````````````````aaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbccccccccccccccccddddddddddddddddeeeeeeeeeeeeeeeeffffffffffffffffgggggggggggggggghhhhhhhhhhhhhhhhiiiiiiiiiiiiiiiijjjjjjjjjjjjjjjjkkkkkkkkkkkkkkkkllllllllllllllllmmmmmmmmmmmmmmmmnnnnnnnnnnnnnnnnoooooooooooooooopppppppppppppppppqqqqqqqqqqqqqqqqrrrrrrrrrrrrrrrrssssssssssssssssttttttttttttttttuuuuuuuuuuuuuuuuvvvvvvvvvvvvvvvvwwwwwwwwwwwwwwwwxxxxxxxxxxxxxxxxyyyyyyyyyyyyyyyyzzzzzzzzzzzzzzzz{{{{{{{{{{{{{{{{||||||||||||||||}}}}}}}}}}}}}}}}~~~~~~~~~~~~~~~~
?w\>
|}?T
A'??M=?
[;G;
`t?K
EQ?\
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
F333333
 1=
 1=
+01+
-H8"
-3 #
 ;4H
"H9"
"H9"
Z JZ
36J?,
_"C2
^!4S
"C\9
*6&F*
PN;P
#5$)
@%CK
HAV
G 8>
HAV
0 A.
A"B6
A"B6
,6G!
)*N5
J+D
DPNC
dOB
DMX
DMX
S)C"
PU!E
K53O
g:8>
Oc= 

Oc= 

g:8>
g:8>
g:8>
g:8>
g:8>
g:8>





 !$%(),-"#&'*+./014589<=2367:;>?




 !$%(),-"#&'*+./014589<=2367:;>?




 !$%(),-"#&'*+./014589<=2367:;>?





 !$%(),-"#&'*+./014589<=2367:;>?





 !$%(),-"#&'*+./014589<=2367:;>?








 !$%(),-"#&'*+./014589<=2367:;>?








 !$%(),-"#&'*+./014589<=2367:;>?








 !$%(),-"#&'*+./014589<=2367:;>?
 !()"#*+$%,-&'./018923:;45<=67>?
 !()"#*+$%,-&'./018923:;45<=67>?
 !()"#*+$%,-&'./018923:;45<=67>?





 !$%(),-"#&'*+./014589<=2367:;>?





 !$%(),-"#&'*+./014589<=2367:;>?
 !()"#*+$%,-&'./018923:;45<=67>?
 !()"#*+$%,-&'./018923:;45<=67>?
 !()"#*+$%,-&'./018923:;45<=67>?
 !()"#*+$%,-&'./018923:;45<=67>?
 !()"#*+$%,-&'./018923:;45<=67>?















g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
Oc= 
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 
g:8>
g:8>
Oc= 

g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
































g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
g:8>
sConvolveFcip
/Library/Caches/com.apple.xbs/Sources/vImage_Sim/vImage-540/Source/Separable_scalar.c
xs == CLAMP(xs, 0, srcWidth - 1)
ys == CLAMP(ys, 0, srcHeight - 1)
sConvolve8cip
sConvolve16Ucip
sConvolve8to16Ucip
ComputeTileSize
/Library/Caches/com.apple.xbs/Sources/vImage_Sim/vImage-540/Compression/Deepmap2/Deepmap2.c
maxRawSize <= DEEPMAP2_DECODE_MAX_RAW_BUFFER_SIZE
SetvImageVectorAvailable(0) no longer forces scalar code. See sImage.framework.
v8@?0
com.apple.vImage
/Library/Caches/com.apple.xbs/Sources/vImage_Sim/vImage-540/Source/Alpha.c
kvImagePrintDiagnosticsToConsole: %s invalid permute map: values {%u, %u, %u, %u} must be in [0,3]
vImagePremultipliedAlphaBlendWithPermute_ARGB8888
vImagePremultipliedAlphaBlendWithPermute_RGBA8888
quantizeVectorHalf
/Library/Caches/com.apple.xbs/Sources/vImage_Sim/vImage-540/Compression/Mesh/MeshCompression.c
p - dst == (d + 1) * ((vectorCount + 1) / 2)
p - dst == vectorDimension * ((vectorCount + 1) / 2)
quantizeHalf
((uint32_t)n >> 12) == 0
q16@?0r^{?=QQQQ}8
/Library/Caches/com.apple.xbs/Sources/vImage_Sim/vImage-540/Source/Conversion.c
vImageConvert_ARGBFFFFtoARGB8888_dithered
vImageConvert_ARGB16UtoARGB8888_dithered
v16@?0Q8
q24@?0r^{vImage_Buffer=^vQQQ}8r^{vImage_Buffer=^vQQQ}16
vImageConvert_Planar8toIndexed
numberOfColors <= maximumNumberOfColors
/Library/Caches/com.apple.xbs/Sources/vImage_Sim/vImage-540/Source/Alpha_CGComposite.c
vImageCGCompositeConstShape_ARGB16F
vImageCGCompositePixelShape_ARGB16F
vImageCGCompositeConstMask_ARGB16F
vImageCGCompositeImage_ARGB16F
vImageCGCompositePixelMask_ARGB16F
Mapping_CreateFromMap_Image8U
/Library/Caches/com.apple.xbs/Sources/vImage_Sim/vImage-540/Source/Mapping.c
ui >= 0 && vi >= 0
ind >=0 && (size_t)ind < height * rowBytes * numChannels
coord2ind_diff
ind >= 0 && ind < size - 1
hw.physicalcpu_max
hw.logicalcpu_max
Convert Pass: %s  (%p):
next:        %p
tempBPP:     %lu
tempSize:    %lu
in:          %s
out:         %s
worksInPlace %s
isStochastic %s
planarSrcA   %s
planarDestA  %s
flags:       0x%8.8x
vImageConverter_Print:
converter type:      %s
flags:                0x%8.8x
input  buffers:       %u
output buffers:       %u
max buffers:          %lu
max chunk bits:       %lu
tempBufferBits/pix    %lu
extraTempBufferSpace  %lu
temporally varies     %s
quantum height        %lu
quantum width         %lu
srcs:  
dests: 
%s  (%s -> %s)
/Library/Caches/com.apple.xbs/Sources/vImage_Sim/vImage-540/Source/ConvertAnyToAny.c
kvImagePrintDiagnosticsToConsole: vImageConverter: Internal error in CreatePass_SrcDecode. Unexpected bitdepth %u
kvImagePrintDiagnosticsToConsole: vImageConverter: Internal error in CreatePass_SrcTransDecode. Unexpected bitdepth %u
kvImagePrintDiagnosticsToConsole: vImageConverter: Internal error. Unexpected bitdepth %u -> 8 in CreatePass_DestDecode
kvImagePrintDiagnosticsToConsole: vImageConverter: Internal error. Unexpected bitdepth %u -> 16 in CreatePass_DestDecode
kvImagePrintDiagnosticsToConsole: vImageConverter: Internal error. Unexpected bitdepth %u -> 32 in CreatePass_DestDecode
kvImagePrintDiagnosticsToConsole: vImageConverter: Internal error in CreatePass_DestDecode. Unexpected bitdepth %u
(some rows / columns full of 0's eliminated)
Using vImageMatrixMultiply_PlanarF with %ux%u matrix:
Using vImageMatrixMultiply_Planar16Q12 with s19.12 fixed-point %ux%u matrix:
<matix empty>
%10.14f
, %10.14f
bias:
%10.14f
, %d
bias:
divisor: %d
hasAlpha:    %u
isPremultiplied: %s
channels:        %u
back color:      { 
0x%2.2x, 
0x%2.2x }
0x%4.4x, 
0x%4.4x }
%f, 
%f }
<unhandled %lu-bit format> }
map: { %u
, %u
channelCount: %u
map:          {%u, %u, %u, %u}
kvImagePrintDiagnosticsToConsole: vImageConverter: source images may only have an indexed color space if the srcFormat->bitsPerComponent is 1,2,4, or 8 and is equal to srcFormat->bitsPerPixel.
kvImagePrintDiagnosticsToConsole: vImageConverter_CreateWithColorSyncCodeFragment failed with internal error. No libCGInterfaces.dylib loaded
kvImagePrintDiagnosticsToConsole: vImageConverter_CreateWithCGColorConverter failed with internal error. No libCGInterfaces.dylib loaded
vImageConverter_CreateForCGToCVImageFormat
kvImagePrintDiagnosticsToConsole: %s error: srcFormat may not be NULL.
kvImagePrintDiagnosticsToConsole: %s error: destFormat may not be NULL.
kvImagePrintDiagnosticsToConsole: %s error: matrix is missing in vImageCVImageFormatRef.
vImageConverter_CreateForCVToCGImageFormat
kvImagePrintDiagnosticsToConsole: vImageConverter_CreateForCVToCGImageFormat error: insufficient information in srcCVFormat to decode image. vImageCVImageFormatError = %ld
kvImagePrintDiagnosticsToConsole: vImageConverter_MustOperateOutOfPlace: converter may not be NULL for vImageConverter_MustOperateOutOfPlace
kvImagePrintDiagnosticsToConsole: vImageConverter_MustOperateOutOfPlace: srcs and dests must either both be NULL or neither NULL
kvImagePrintDiagnosticsToConsole: vImageConverter_MustOperateOutOfPlace: vFlags bits 0x%8.8x are not allowed by vImageConvert_AnyToAny
kvImagePrintDiagnosticsToConsole: vImageConverter_MustOperateOutOfPlace: invalid converter %p has no vtbl!
kvImagePrintDiagnosticsToConsole: converter may not be NULL
kvImagePrintDiagnosticsToConsole: dests[0].data may not be NULL
kvImagePrintDiagnosticsToConsole: vImageConvert_AnyToAny encountered disallowed flags bits: 0x%8.8x
kvImagePrintDiagnosticsToConsole: vImageConvert_AnyToAny: dests[%u].data may not be NULL
kvImagePrintDiagnosticsToConsole: vImageConvert_AnyToAny: dests[%u].height does not match dests[0].height
kvImagePrintDiagnosticsToConsole: vImageConvert_AnyToAny: dests[%u].width does not match dests[0].width
kvImagePrintDiagnosticsToConsole: vImageConvert_AnyToAny: srcs[%u].data may not be NULL
kvImagePrintDiagnosticsToConsole: vImageConvert_AnyToAny: srcs[%u].height must be >= dests[0].height
kvImagePrintDiagnosticsToConsole: vImageConvert_AnyToAny: srcs[%u].width must be >= dests[0].width
kvImagePrintDiagnosticsToConsole: vImageConvert_AnyToAny: converter is empty!
Please file a bug with detailed information on how to reproduce the problem.
kvImagePrintDiagnosticsToConsole: vImageConvert_AnyToAny: Memory allocation of %lu bytes for temp buffer failed
kvImagePrintDiagnosticsToConsole: vImageConvert_AnyToAny: Memory allocation of %lu bytes for temp buffer failed.
vImageConvert_AnyToAny failed while attempting to convert the image data: (err code %ld) @ pass: %p
srcs[%d] = {%p, h:%lu, w:%lu, rb:%lu}
dests[%d] = {%p, h:%lu, w:%lu, rb:%lu}
flags     = 0x%8.8x
FAILED_PASS:
============
kvImagePrintDiagnosticsToConsole: %s
vImageConvert_AnyToAny tempBuffer legacy mode enabled.
End of List
<Color Space Channel 1>
<Color Space Channel 2>
<Color Space Channel 3>
<Color Space Channel 4>
<Color Space Channel 5>
<Color Space Channel 6>
<Color Space Channel 7>
<Color Space Channel 8>
<Color Space Channel 9>
<Color Space Channel 10>
<Color Space Channel 11>
<Color Space Channel 12>
<Color Space Channel 13>
<Color Space Channel 14>
<Color Space Channel 15>
<Color Space Channel 16>
Alpha
Indexed
CVPixelBuffer_YCbCr
Luminance
Chroma (CbCr)
CG Format
Green
Blue
Cyan
Magenta
Yellow
Black
<NULL>
Monochrome
(Monochrome)
(RGB)
(CMYK)
(L*a*b*)
(Indexed)
%s %s
kvImagePrintDiagnosticsToConsole: vImageCGConverter_MustOperateOutOfPlace: This conversion has no conversion passes! It seems to be invalid.
, bpc: %u
, bpc: %u->%u
, bpp: %u
, bpp: %u->%u
, cs: %p
, cs: %p->%p
, %s
, %s->%s
kCGBitmapFloatComponents
 with %d stage user color transform
 Same format%s (%s)
 <Simple Copy> (%s)
 %s%s
 %s%s (%s)
vImageConverterRef (%p)
kCGImageAlphaNone
kCGImageAlphaPremultipliedLast
kCGImageAlphaPremultipliedFirst
kCGImageAlphaLast
kCGImageAlphaFirst
kCGImageAlphaNoneSkipLast
kCGImageAlphaNoneSkipFirst
kCGImageAlphaOnly
kCGBitmapByteOrderDefault
kCGBitmapByteOrder16Little
kCGBitmapByteOrder32Little
kCGBitmapByteOrder16Big
kCGBitmapByteOrder32Big
<unknown byte order mask (5<<12)>
<unknown byte order mask (6<<12)>
<unknown byte order mask (7<<12)>
destFormat:
ConvertNode (%s, %p) can't print itself
%s<NULL vImage_CGImageFormat>
%s | %s
 | kCGBitmapFloatComponents
kvImageDecodeArray_16Q12Format
kvImageConstDecodeArray0
<Error: libCGInterfaces not loaded>
<colorspace has no color components>
{ %f, %f
, %f, %f
<libCGInterfaces not loaded>
%sbitsPerComponent: %u
%sbitsPerPixel:     %u
%scolorSpace:       %p
%sbitmapInfo:       0x%8.8x
(%s)
%sversion:          %u
%sdecode:           %p
%srenderingIntent:  %s
kCGRenderingIntentDefault
kCGRenderingIntentAbsoluteColorimetric
kCGRenderingIntentRelativeColorimetric
kCGRenderingIntentPerceptual
kCGRenderingIntentSaturation
<invalid rendering intent code>
channelMask:  0x%8.8x
channelCount: %u
special:      inversion
channelCount: %u
iFactor:      { %f, %f
, %f, %f}
channelCount: %u
fFactor:      { %f, %f
kvImagePrintDiagnosticsToConsole: Unanticipated dest precision 8->%u in CreatePass_ConvertToDestPrecision
kvImagePrintDiagnosticsToConsole: Unanticipated dest precision 16Q12->%u in CreatePass_ConvertToDestPrecision
kvImagePrintDiagnosticsToConsole: Unanticipated dest precision 16->%u in CreatePass_ConvertToDestPrecision
kvImagePrintDiagnosticsToConsole: Unanticipated dest precision 32->%u in CreatePass_ConvertToDestPrecision
kvImagePrintDiagnosticsToConsole: Unanticipated src precision %u in CreatePass_ConvertToDestPrecision
kvImagePrintDiagnosticsToConsole: vImageConverter: kCGBitmapByteOrder16Little is not allowed on {1,2,3,4,6,7}-bit images when the pixel is not 16 bits in size.
kvImagePrintDiagnosticsToConsole: vImageConverter: kCGBitmapByteOrder32Little is not allowed on {1,2,3,4,6,7}-bit images when the pixel is not 32 bits in size.
kvImagePrintDiagnosticsToConsole: vImageConverter: unknown byte ordering encountered.
kvImagePrintDiagnosticsToConsole: vImageConverter: 32-bit byte orderings are not allowed on 5-bit per component images.
kvImagePrintDiagnosticsToConsole: vImageConverter: kCGBitmapByteOrder16Little is not allowed on 8-bit images with pixel size of 32 bits.
kvImagePrintDiagnosticsToConsole: vImageConverter: kCGBitmapByteOrder32Little is not allowed on 8-bit images with pixel size != 32 bits.
kvImagePrintDiagnosticsToConsole: vImageConverter: kCGBitmapByteOrder16Little is not allowed on 8-bit images with pixel size != 16 bits.
kvImagePrintDiagnosticsToConsole: vImageConverter: kCGBitmapByteOrder16Little is not allowed on 10-bit images.
kvImagePrintDiagnosticsToConsole: vImageConverter: little endian byte ordering is not allowed on packed 10-bit images.
kvImagePrintDiagnosticsToConsole: vImageConverter: little endian byte ordering is not allowed on packed 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 bit images.
kvImagePrintDiagnosticsToConsole: vImageConverter: 32-bit byte orderings are not allowed on 16-bit per component images.
kvImagePrintDiagnosticsToConsole: vImageConverter: 16-bit byte orderings are not allowed on 32-bit per component images.
kvImagePrintDiagnosticsToConsole: vImageConverter: unknown %u bit image format in ConvertByteOrderingToDefault.
kvImagePrintDiagnosticsToConsole: vImageConverter: srcFormat indexed color must be (kCGImageAlphaNone | kCGBitmapByteOrderDefault)
kvImagePrintDiagnosticsToConsole: vImageConverter: expected to find a base colorspace attached to indexed src colorspace
kvImagePrintDiagnosticsToConsole: vImageConverter:  source buffers with indexed color space must have bitsPerComponent of 1, 2, 4 or 8
tables:      %lu
map:         {%u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u}
kvImagePrintDiagnosticsToConsole: vImageConverter: destFormat indexed color must be (kCGImageAlphaNone | kCGBitmapByteOrderDefault)
kvImagePrintDiagnosticsToConsole: vImageConverter: expected to find a base colorspace attached to indexed dest colorspace
kvImagePrintDiagnosticsToConsole: vImageConverter: can only convert to indexed color for grayscale images. This image has %lu channels
kvImagePrintDiagnosticsToConsole: vImageConverter:  destination buffers with indexed color space must have bitsPerComponent of 1, 2, 4 or 8
kvImagePrintDiagnosticsToConsole: vImageConverter: CreatePass_ConvertTinyTo8Bit encountered %u bit image. Must be {1,2,4}
kvImagePrintDiagnosticsToConsole: vImageConverter: CreatePass_Convert8BitToTiny encountered %u bit image. Must be {1,2,4}
kvImagePrintDiagnosticsToConsole: vImageConverter: CreatePass_ConvertTinyTo8Bit encountered %u bit image. Must be {1-7}
kvImagePrintDiagnosticsToConsole: vImageConverter: CreatePass_Convert8BitToTiny encountered %u bit image. Must be {1-7}
kvImagePrintDiagnosticsToConsole: Error 5-bit image formats must have a pixel size of 16 bits.
kvImagePrintDiagnosticsToConsole: vImageConverter: Cant convert 565 to %s
kvImagePrintDiagnosticsToConsole: vImageConverter: There is no support currently for 5-bit per channel formats with alpha last.
alpha:      %u
kvImagePrintDiagnosticsToConsole: vImageConverter error: unhandled conversion to alpha only format
hasAlpha:    %s
kvImagePrintDiagnosticsToConsole: vImageConverter: CreatePass_ConvertNToF encountered %u bit image. Must be {9~15,17~32}
kvImagePrintDiagnosticsToConsole: vImageConverter: CreatePass_ConvertFToNbit encountered %u bit image. Must be {9~15,17~32}
kvImagePrintDiagnosticsToConsole: vImageConverter: failed to allocate %lu bytes to hold the result vImageConverter
kvImagePrintDiagnosticsToConsole: vImageConverter_CreateForCG  failed for gap: {%d, 0x%4.4x, %p} -> {%d, 0x%4.4x, %p}
                             Full conversion: {%d, 0x%4.4x, %p} -> {%d, 0x%4.4x, %p}
                                           c: %p, flags: 0x%8.8x
       Please file a bug report.
kvImagePrintDiagnosticsToConsole: vImageConverter: The srcFormat and destFormat pointers may not be NULL.
kvImagePrintDiagnosticsToConsole: vImageConverter: encountered unknown / unsupported flags bit: 0x%8.8x
kvImagePrintDiagnosticsToConsole: vImageConverter: srcFormat->bitmapInfo is invalid.
kvImagePrintDiagnosticsToConsole: vImageConverter: destFormat->bitmapInfo is invalid.
kvImagePrintDiagnosticsToConsole: vImageConverter: vImage_CGImageFormat.version must be same for both srcFormat and destFormat.
kvImagePrintDiagnosticsToConsole: vImageConverter: vImage_CGImageFormat.version must be 0 or 1.
kvImagePrintDiagnosticsToConsole: vImageConverter Error: vImage_CGImageFormat.bitsPerComponent = %u is not supported.
Valid vImage_CGImageFormat.bitsPerComponent are: 1 ~ 32
kvImagePrintDiagnosticsToConsole: vImageConverter Error: (vImage_CGImageFormat.bitmapInfo & kCGBitmapAlphaInfoMask) = 0x%4.4x is not a known value.
kvImagePrintDiagnosticsToConsole: vImageConverter Error: Floating-point pixels must be 16 or 32 bits per component, not %u.
kvImagePrintDiagnosticsToConsole: vImageConverter: wrong alpha information for 5-bit packed format.
kvImagePrintDiagnosticsToConsole: vImageConverter: 5-bit per component pixel formats like 565 or 1555 or 5551 must be 16 bits per pixel and a 3-channel colorspace
kvImagePrintDiagnosticsToConsole: vImageConverter: wrong alpha information for 10-bit packed format.
kvImagePrintDiagnosticsToConsole: vImageConverter: 10-bit per component pixel formats like CIF-10 or 1010102 or 2101010 must be 32 bits per pixel
kvImagePrintDiagnosticsToConsole: vImageConverter: In this version of the converter, most pixel formats must be packed arrays of samples with no empty space, 
except as appropriate for kCGImageAlphaNoneSkipFirst/Last. Here, the colorspace has %lu channels, with %lu more for alpha, 
which should mean (%lu+%lu channels/pixel)*%u bits per channel = %lu bits per pixel.  You passed %u in format->bitsPerPixel.
kvImagePrintDiagnosticsToConsole: vImageConverter: wrong alpha information for packed format.
kvImagePrintDiagnosticsToConsole: vImageConverter: Packed formats with numChannels = %d must be either kCGImageAlphaNone or kCGImageAlphaOnly.
kvImagePrintDiagnosticsToConsole: vImageConverter: Packed formats with numChannels = %d can't be either kCGImageAlphaNone or kCGImageAlphaOnly.
kvImagePrintDiagnosticsToConsole: vImageConverter: Packed formats with numChannels = %d has to be kCGImageAlphaNone.
kvImagePrintDiagnosticsToConsole: vImageConverter: Packed formats with numChannels = %d has to have alpha like CMYK with alpha.
kvImagePrintDiagnosticsToConsole: vImageConverter: Internal error during conversion. Exiting to avoid infinite loop
kvImagePrintDiagnosticsToConsole: vImageConverter: Unknown pixel size %u encountered in CreatePass_Unpremultiply
kvImagePrintDiagnosticsToConsole: vImageConverter: Unknown pixel size %u encountered in CreatePass_Premultiply_version1
kvImagePrintDiagnosticsToConsole: vImageConverter: disallowed dest alpha %s encountered in CreatePass_Flatten
kvImagePrintDiagnosticsToConsole: vImageConverter: Unknown pixel size %u encountered in CreatePass_Flatten_version1
kvImagePrintDiagnosticsToConsole: vImage internal error: GetPixelForBackgroundColor pixel is NULL.
kvImagePrintDiagnosticsToConsole: Unknown CGBitmapInfo alpha 0x%8.8x in GetPixelForBackgroundColor
kvImagePrintDiagnosticsToConsole: Unexpected format {%u, 0x%8.8x} in GetPixelForBackgroundColor
kvImagePrintDiagnosticsToConsole: vImageConverter: Unknown pixel size %u encountered in CreatePass_Premultiply
kvImagePrintDiagnosticsToConsole: Encountered unknown srcPixelBits (%u) in CreatePass_ChunkyToPlanar
kvImagePrintDiagnosticsToConsole: vImageConverter: unable to allocate ChunkyToGammaPlanarPass. kvImageMemoryAllocationError
kvImagePrintDiagnosticsToConsole: vImageConverter: encountered unexpected destination image bitdepth.
kvImagePrintDiagnosticsToConsole: vImageConverter_CreateWithCGImageFormat failed for gap: {%d, 0x%4.4x, %p} -> {%d, 0x%4.4x, %p}
                                        Full conversion: {%d, 0x%4.4x, %p} -> {%d, 0x%4.4x, %p}
                                                      c: %p, flags: 0x%8.8x
       Please file a bug report.
kvImagePrintDiagnosticsToConsole: vImageConverter: Unknown pixel size %u encountered in CreatePass_Flatten
kvImagePrintDiagnosticsToConsole: vImageConverter Internal error: CreatePass_ConvertToDestChannelOrder handed different bitsPerComponent: %u, %u
kvImagePrintDiagnosticsToConsole: vImageConverter: unexpectedly encountered a kCGImageAlphaNone image as output type for CreatePass_AddAlpha
kvImagePrintDiagnosticsToConsole: vImageConverter:  failed to allocate in CreatePass_Swap32(). Memory low.
copyMask:    0x%4.4x
alpha:       0x%2.2x
copyMask:    0x%4.4x
alpha:       0x%4.4x
copyMask:    0x%4.4x
alpha:       %f
map:         {%d, %d, %d, %d}
color:       {0x%2.2x, 0x%2.2x, 0x%2.2x, 0x%2.2x}
map:         {%d, %d, %d, %d}
color:       {0x%4.4x, 0x%4.4x, 0x%4.4x, 0x%4.4x}
map:         {%d, %d, %d, %d}
color:       {%f, %f, %f, %f}
kvImagePrintDiagnosticsToConsole: ConvertToCVRGB101010 internal error: 8-bpc RGB format must have 32-bpp (%u) for 8-bpc
kvImagePrintDiagnosticsToConsole: ConvertToCVRGB101010 internal error: 16-bpc RGB format must have 64-bpp (%u) for 8-bpc
kvImagePrintDiagnosticsToConsole: ConvertToRGB101010 internal error: unknown bitdepth for src buffer %u
kvImagePrintDiagnosticsToConsole: CreateARGBtoYpCbCrMatrixPass error: unhandled or unknown CV image type: '%c%c%c%c'
kvImagePrintDiagnosticsToConsole: CreateARGBtoYpCbCrMatrixPass error: unable to get Y' vImageChannelDescription for format '%c%c%c%c'
kvImagePrintDiagnosticsToConsole: CreateARGBtoYpCbCrMatrixPass error: unable to get CbCr vImageChannelDescription for format '%c%c%c%c'
 Perhaps the Cb and Cr descriptions don't match? vImage currently can only handle identically formatted chroma.
kvImagePrintDiagnosticsToConsole: CreateARGBtoYpCbCrMatrixPass error: unable to get valid conversion matrix for format '%c%c%c%c'
 Got matrix %p of format %u
kvImagePrintDiagnosticsToConsole: ConvertFromCVRGB101010 internal error: 8-bpc RGB format must have 32-bpp (%u) for 8-bpc
kvImagePrintDiagnosticsToConsole: ConvertFromCVRGB101010 internal error: 16-bpc RGB format must have 64-bpp (%u) for 8-bpc
kvImagePrintDiagnosticsToConsole: ConvertFromCVRGB101010 internal error: unknown bitdepth for destInation buffer %u
kvImagePrintDiagnosticsToConsole: CreateYpCbCrToARGBMatrixPass error: unhandled or unknown CV image type: '%c%c%c%c'
kvImagePrintDiagnosticsToConsole: CreateYpCbCrToARGBMatrixPass error: unable to get Y' vImageChannelDescription for format '%c%c%c%c'
kvImagePrintDiagnosticsToConsole: CreateYpCbCrToARGBMatrixPass error: unable to get CbCr vImageChannelDescription for format '%c%c%c%c'
 Perhaps the Cb and Cr descriptions don't match? vImage currently can only handle identically formatted chroma.
kvImagePrintDiagnosticsToConsole: CreateYpCbCrToARGBMatrixPass error: unable to get valid conversion matrix for format '%c%c%c%c'
 Got matrix %p of format %u
kvImagePrintDiagnosticsToConsole: CreateYpCbCrToARGBMatrixPass error: unable to get inverse of conversion matrix for format '%c%c%c%c'
Buffer planes:
Summary:
Details:
End converter
 <converter.vtbl.printfunc = NULL>
 Converter doesn't know how to print itself
vImageConverter_Print: <converter.vtbl = NULL>
 Converter probably invalid
vImageConverter_Print: <converter = NULL>
*** Error: vImageConverter_PrintPasses truncated. ***
/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Libraries/libCGInterfaces.dylib
Init_CGInterfaces
541.1
<dladdr failed!>
*** vImage Internal error. vImage has version %s but libCGInterfaces.dylib loaded at %s has version %s
/Library/Caches/com.apple.xbs/Sources/vImage_Sim/vImage-541.1/Source/Conversion_YUV.c
kvImagePrintDiagnosticsToConsole: vImageConvert_YpCbCrToARGB_GenerateConversion: One of the vImage_YpCbCrToARGBMatrix inputs seems well out of expected range.
{Yp = %f, Cr_R = %f, Cr_G = %f, Cb_G = %f, Cb_B = %f}
If you feel this message is in error, please file a bug report.
kvImagePrintDiagnosticsToConsole: vImageConvert_YpCbCrToARGB_GenerateConversion: One of the vImage_YpCbCrPixelRange inputs seems well out of expected range for an 8-bit format [0,255].
{yRange = %f, uvRange = %f}
If you feel this message is in error, please file a bug report.
kvImagePrintDiagnosticsToConsole: vImageConvert_YpCbCrToARGB_GenerateConversion: One of the vImage_YpCbCrPixelRange inputs seems well out of expected range for an 10-bit format [0,1023].
{yRange = %f, uvRange = %f}
If you feel this message is in error, please file a bug report.
kvImagePrintDiagnosticsToConsole: vImageConvert_YpCbCrToARGB_GenerateConversion: One of the vImage_YpCbCrPixelRange inputs seems well out of expected range for an 16-bit format [0,65535].
{yRange = %f, uvRange = %f}
If you feel this message is in error, please file a bug report.
kvImagePrintDiagnosticsToConsole: vImageConvert_YpCbCrToARGB_GenerateConversion warning: The provided vImage_YpCbCrToARGBMatrix: 
%10.14f, %10.14f, %10.14f
%10.14f, %10.14f, %10.14f
%10.14f, %10.14f, %10.14f
deviates from the canonical form of the Y'CbCr -> RGB conversion matrix enough that vImage may have
to move to a lower performance algorithm.  The expected canonical form is as follows: 
%10.14f, %10.14f, %10.14f
%10.14f, %10.14f, %10.14f
%10.14f, %10.14f, %10.14f
kvImagePrintDiagnosticsToConsole: vImageConvert_ARGBToYpCbCr_GenerateConversion: One of the vImage_ARGBToYpCbCrMatrix inputs seems well out of expected range[-1,1].
{R_Yp = %f, G_Yp = %f, B_Yp = %f, R_Cb = %f, G_Cb = %f, B_Cb_R_Cr = %f, G_Cr = %f, B_Cr = %f}
If you feel this message is in error, please file a bug report.
kvImagePrintDiagnosticsToConsole: vImageConvert_ARGBToYpCbCr_GenerateConversion: One of the vImage_YpCbCrPixelRange inputs seems well out of expected range for an 8-bit format [0,255].
{yRange = %f, uvRange = %f}
If you feel this message is in error, please file a bug report.
kvImagePrintDiagnosticsToConsole: vImageConvert_ARGBToYpCbCr_GenerateConversion: One of the vImage_YpCbCrPixelRange inputs seems well out of expected range for an 10-bit format [0,1023].
{yRange = %f, uvRange = %f}
If you feel this message is in error, please file a bug report.
kvImagePrintDiagnosticsToConsole: vImageConvert_ARGBToYpCbCr_GenerateConversion: One of the vImage_YpCbCrPixelRange inputs seems well out of expected range for an 16-bit format [0,65535].
{yRange = %f, uvRange = %f}
If you feel this message is in error, please file a bug report.
kvImagePrintDiagnosticsToConsole: vImageConvert_ARGBToYpCbCr_GenerateConversion warning: The provided vImage_ARGBToYpCbCrMatrix: 
%10.14f, %10.14f, %10.14f
%10.14f, %10.14f, %10.14f
%10.14f, %10.14f, %10.14f
deviates from the canonical form of the RGB -> Y'CbCr conversion matrix enough that vImage may have
to move to a lower performance algorithm.  The expected canonical form is as follows: 
%10.14f, %10.14f, %10.14f
%10.14f, %10.14f, %10.14f
%10.14f, %10.14f, %10.14f
kvImagePrintDiagnosticsToConsole: %s error: vImage_YpCbCrToARGB has unknown version
vImageConvert_422YpCbYpCr8ToARGB8888
kvImagePrintDiagnosticsToConsole: %s error: vImage_ARGBToYpCbCr has unknown version
vImageConvert_ARGB8888To422YpCbYpCr8
vImageConvert_422CbYpCrYp8ToARGB8888
vImageConvert_ARGB8888To422CbYpCrYp8
vImageConvert_422CbYpCrYp8_AA8ToARGB8888
vImageConvert_ARGB8888To422CbYpCrYp8_AA8
vImageConvert_444AYpCbCr8ToARGB8888
vImageConvert_ARGB8888To444AYpCbCr8
vImageConvert_444CrYpCb8ToARGB8888
vImageConvert_ARGB8888To444CrYpCb8
vImageConvert_444CbYpCrA8ToARGB8888
vImageConvert_ARGB8888To444CbYpCrA8
vImageConvert_420Yp8_Cb8_Cr8ToARGB8888
vImageConvert_ARGB8888To420Yp8_Cb8_Cr8
vImageConvert_420Yp8_CbCr8ToARGB8888
vImageConvert_ARGB8888To420Yp8_CbCr8
vImageConvert_444AYpCbCr16ToARGB8888
vImageConvert_ARGB8888To444AYpCbCr16
vImageConvert_444AYpCbCr16ToARGB16U
vImageConvert_ARGB16UTo444AYpCbCr16
vImageConvert_422CbYpCrYp16ToARGB8888
vImageConvert_ARGB8888To422CbYpCrYp16
vImageConvert_422CbYpCrYp16ToARGB16U
vImageConvert_ARGB16UTo422CbYpCrYp16
vImageConvert_444CrYpCb10ToARGB8888
vImageConvert_ARGB8888To444CrYpCb10
vImageConvert_444CrYpCb10ToARGB16Q12
vImageConvert_ARGB16Q12To444CrYpCb10
vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB8888
vImageConvert_ARGB8888To422CrYpCbYpCbYpCbYpCrYpCrYp10
vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB16Q12
vImageConvert_ARGB16Q12To422CrYpCbYpCbYpCbYpCrYpCrYp10
vImageConvert_444Yp10_CbCr10ToXRGB2101010W
vImageConvert_XRGB2101010WTo444Yp10_CbCr10
vImageConvert_422Yp10_CbCr10ToXRGB2101010W
vImageConvert_XRGB2101010WTo422Yp10_CbCr10
vImageConvert_420Yp10_CbCr10ToXRGB2101010W
vImageConvert_XRGB2101010WTo420Yp10_CbCr10
vImageConvert_444YpCbCr10ToXRGB2101010W
vImageConvert_XRGB2101010WTo444YpCbCr10
vImageConvert_422CbYpCrYp10ToXRGB2101010W
vImageConvert_XRGB2101010WTo422CbYpCrYp10
vImageConvert_444Yp10_CbCr10ToARGB16F
vImageConvert_ARGB16FTo444Yp10_CbCr10
vImageConvert_422Yp10_CbCr10ToARGB16F
vImageConvert_ARGB16FTo422Yp10_CbCr10
vImageConvert_420Yp10_CbCr10ToARGB16F
vImageConvert_ARGB16FTo420Yp10_CbCr10
vImageConvert_444YpCbCr10ToARGB16F
vImageConvert_ARGB16FTo444YpCbCr10
vImageConvert_422CbYpCrYp10ToARGB16F
vImageConvert_ARGB16FTo422CbYpCrYp10
/Library/Caches/com.apple.xbs/Sources/vImage_Sim/vImage-540/Source/ImageTilingInfo.c
CreateImageTilingInfoForCV error: Unknown CV image format code: '%c%c%c%c'
pixel
422 chunk
420 chunk
%u x %u chunk
%s1 plane, %u bits per %s
%s%u planes, bits per %s: { %u, 
%u, 
%u }
vImageConverter TableCache
kCGImageFormatType
kCGCVImageFormatType
kCVCGImageFormatType
vImageInvert_8
vImageInvert_16U
vImageInvert_F
vImageLinearTransform_8
vImageLinearTransform_16U
vImageLinearTransform_F
vImageLinearTransform_8to16Q12
vImageLinearTransform_8toF
vImageLinearTransform_16UtoF
vImageLinearTransform_8
vImageLinearTransform_16U
vImageLinearTransform_F
vImageLinearTransform_8to16Q12
vImageLinearTransform_8toF
vImageLinearTransform_16UtoF
vImageInvert_8
vImageInvert_16U
vImageInvert_F
vImageLinearTransform_8
vImageLinearTransform_16U
vImageLinearTransform_F
vImageLinearTransform_8to16Q12
vImageLinearTransform_8toF
vImageLinearTransform_16UtoF
vImageInvert_8
vImageInvert_16U
vImageInvert_F
vImageLinearTransform_8
vImageLinearTransform_16U
vImageLinearTransform_F
vImageLinearTransform_16Q12to8
vImageLinearTransform_8to16U
vImageLinearTransform_8toF
vImageLinearTransform_Fto8
vImageLinearTransform_16Uto8
vImageLinearTransform_Fto16U
vImageLinearTransform_16UtoF
vImageLinearTransform_8
vImageLinearTransform_16U
vImageLinearTransform_F
vImageLinearTransform_16Q12to8
vImageLinearTransform_8to16U
vImageLinearTransform_8toF
vImageLinearTransform_Fto8
vImageLinearTransform_16Uto8
vImageLinearTransform_Fto16U
vImageLinearTransform_16UtoF
vImagePermuteChannels_RGB888
vImagePermuteChannels_RGB888
vPermuteChannels_ARGB8888 (byteswap 32)
vImageConvert_Planar8To16U
vImageConvert_ARGB8888ToARGB16U
vImageConvert_ARGB8888ToRGB16U
vImageConvert_Planar8toPlanarF
vImageConvert_16UToPlanar8
vImageConvert_ARGB16UToARGB8888
vImageConvert_16UToF
vImageConvert_PlanarFtoPlanar8
vImageConvert_FTo16U
vImageConvert_8to16Q12
vImageConvert_16Uto16Q12
vImageConvert_Fto16Q12
vImageConvert_16Q12to8
vImageConvert_16Q12to16U
vImageConvert_16Q12toF
vImageByteSwap_Planar16U
vImageConvert_Indexed1toPlanar8
vImageConvert_Indexed2toPlanar8
vImageConvert_Indexed4toPlanar8
vImageTableLookUp_Planar8
vImageConvert_PlanarToChunky8
vImageConvert_Planar8toRGB888
vImageConvert_Planar8toARGB8888
vImageConvert_Planar8toIndexed1
vImageConvert_Planar8toIndexed2
vImageConvert_Planar8toIndexed4
vImageTableLookUp_Planar8
vImageConvert_Planar1toPlanar8
vImageConvert_Planar2toPlanar8
vImageConvert_Planar4toPlanar8
vImageConvert_Planar8toPlanar1
vImageConvert_Planar8toPlanar2
vImageConvert_Planar8toPlanar4
vImageConvert_Planar1toPlanar8
vImageConvert_Planar2toPlanar8
vImageConvert_PlanarNtoPlanar8
vImageConvert_Planar4toPlanar8
vImageConvert_PlanarNtoPlanar8
vImageConvert_PlanarNtoPlanar8
vImageConvert_PlanarNtoPlanar8
vImageConvert_Planar8toPlanar1
vImageConvert_Planar8toPlanar2
vImageConvert_Planar8toPlanarN
vImageConvert_Planar8toPlanar4
vImageConvert_Planar8toPlanarN
vImageConvert_Planar8toPlanarN
vImageConvert_Planar8toPlanarN
vImageConvert_ARGB1555toARGB8888
vImageConvert_ARGB1555toBGRA8888
vImageConvert_RGBA5551toRGBA8888
vImageConvert_RGB565toARGB8888
vImageConvert_RGB565toRGBA8888
vImageConvert_RGB565toBGRA8888
vImageConvert_RGB565toABGR8888
vImageConvert_RGB565toRGB888
vImageConvert_ARGB8888toARGB1555_dithered
vImageConvert_ARGB8888toRGB565_dithered
vImageConvert_RGBA8888toRGB565_dithered
vImageConvert_RGBA8888toRGBA5551_dithered
vImageConvert_BGRA8888toRGB565_dithered
vImageConvert_RGB888toRGB565_dithered
vImageConvert_ARGB2101010ToARGB8888 (RGBA8888 channel order)
vImageConvert_ARGB2101010ToARGB8888
vImageConvert_ARGB2101010ToARGB8888 (BGRA8888 channel order)
vImageConvert_ARGB2101010ToRGB888
vImageConvert_ARGB8888ToARGB2101010 (RGBA8888 channel order)
vImageConvert_ARGB8888ToARGB2101010
vImageConvert_ARGB8888ToARGB2101010 (BGRA8888 channel order)
vImageConvert_RGB888ToARGB2101010
vImageConvert_ARGB2101010ToARGB16Q12 (RGBA16Q12 channel order)
vImageConvert_ARGB2101010ToARGB16U (RGBA16U channel order)
vImageConvert_ARGB2101010ToRGB16U
vImageConvert_ARGB16Q12ToARGB2101010 (RGBA16Q12 channel order)
vImageConvert_ARGB16UToARGB2101010 (RGBA16U channel order)
vImageConvert_RGB16UToARGB2101010
vImageConvert_ARGB2101010ToARGBFFFF (RGBAFFFF channel order)
vImageConvert_ARGB2101010ToRGBFFF
vImageConvert_ARGBFFFFToARGB2101010 (RGBAFFFF channel order)
vImageConvert_RGBFFFToARGB2101010
vImageConvert_ARGB2101010ToARGB16Q12 (RGBA16Q12 channel order)
vImageConvert_ARGB16Q12ToARGB2101010 (RGBA16Q12 channel order)
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarNtoPlanarF
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_PlanarFtoPlanarN
vImageConvert_12Uto16U
vImageConvert_16Uto12U
vImageConvert_16Fto16Q12
vImageConvert_16Q12to16F
vImageConvert_16Fto16U
vImageConvert_Planar16FtoPlanarF
vImageConvert_PlanarFtoPlanar16F
vImageConvert_16Uto16F
vImageTableLookup_Planar8
vImageLookupTable_Planar8toPlanar16
vImageLookupTable_Planar8toPlanar24
vImageLookupTable_Planar8toPlanarF
vImageLookupTable_Planar8toPlanar48
vImageLookupTable_Planar8toPlanar96
vImageLookupTable_Planar8toPlanar128
vImageLUTPass_LookupTable_8to64U
vImageUnpremultiplyData_RGBA8888
vImageUnpremultiplyData_ARGB8888
vImageUnpremultiplyData_Chunky8AlphaLast
vImageUnpremultiplyData_Chunky8AlphaFirst
vImageUnpremultiplyData_RGBA16U
vImageUnpremultiplyData_ARGB16U
vImageUnpremultiplyData_Chunky16AlphaLast
vImageUnpremultiplyData_Chunky16AlphaFirst
vImageUnpremultiplyData_RGBA16Q12
vImageUnpremultiplyData_ARGB16Q12
vImageUnpremultiplyData_Chunky16Q12AlphaLast
vImageUnpremultiplyData_Chunky16Q12AlphaFirst
vImageUnpremultiplyData_RGBAFFFF
vImageUnpremultiplyData_ARGBFFFF
vImageUnpremultiplyData_ChunkyFAlphaLast
vImageUnpremultiplyData_ChunkyFAlphaFirst
vImagePremultiplyData_RGBA8888
vImagePremultiplyData_ARGB8888
PremultiplyData_Chunky8AlphaLast
PremultiplyData_Chunky8AlphaFirst
vImagePremultiplyData_RGBA16U
vImagePremultiplyData_ARGB16U
PremultiplyData_Chunky16AlphaLast
PremultiplyData_Chunky16AlphaFirst
vImagePremultiplyData_RGBA16Q12
vImagePremultiplyData_ARGB16Q12
PremultiplyData_Chunky16Q12AlphaLast
PremultiplyData_Chunky16Q12AlphaFirst
vImagePremultiplyData_RGBAFFFF
vImagePremultiplyData_ARGBFFFF
PremultiplyData_ChunkyFAlphaFirst
PremultiplyData_ChunkyFAlphaLast
vImageFlatten_BGRA8888ToRGB888
vImageFlatten_RGBA8888ToRGB888
vImageFlatten_ARGB8888ToRGB888
vImageFlatten_RGBA8888
vImageFlatten_Chunky8AlphaLast
vImageFlatten_Chunky8AlphaFirst
vImageFlatten_RGBA16U
vImageFlatten_ARGB16U
vImageFlatten_RGBA16Q12
vImageFlatten_ARGB16Q12
vImageFlatten_Chunky16AlphaLast
vImageFlatten_Chunky16AlphaFirst
vImageFlatten_Chunky16Q12AlphaLast
vImageFlatten_Chunky16Q12AlphaFirst
vImageFlatten_ChunkyFAlphaFirst
vImageFlatten_ChunkyFAlphaLast
vImageFlatten_ARGBFFFF
vImageFlatten_RGBAFFFF
vImageFlatten_ARGBFFFFToRGBFFF
vImageFlatten_RGBAFFFFToRGBFFF
vImageFlatten_ARGB8888
RemoveAlpha_ChunkyFAlphaFirst
RemoveAlpha_ChunkyFAlphaLast
vImageConvert_ARGBFFFFtoRGBFFF
vImageConvert_RGBAFFFFtoRGBFFF
RemoveAlpha_Chunky8AlphaFirst
RemoveAlpha_Chunky8AlphaLast
vImageConvert_ARGB8888toRGB888
vImageConvert_RGBA8888toRGB888
vImageConvert_BGRA8888toRGB888
RemoveAlpha_Chunky16UAlphaFirst
RemoveAlpha_Chunky16UAlphaLast
vImageConvert_ARGB16UtoRGB16U
vImageConvert_RGBA16UtoRGB16U
vImagePremultiplyData_RGBA8888
vImagePremultiplyData_ARGB8888
PremultiplyData_Chunky8AlphaLast
PremultiplyData_Chunky8AlphaFirst
vImagePremultiplyData_RGBA16U
vImagePremultiplyData_ARGB16U
PremultiplyData_Chunky16AlphaLast
PremultiplyData_Chunky16AlphaFirst
vImagePremultiplyData_RGBA16Q12
vImagePremultiplyData_ARGB16Q12
PremultiplyData_Chunky16Q12AlphaLast
PremultiplyData_Chunky16Q12AlphaFirst
vImagePremultiplyData_RGBAFFFF
vImagePremultiplyData_ARGBFFFF
PremultiplyData_ChunkyFAlphaFirst
PremultiplyData_ChunkyFAlphaLast
vImageConvert_ARGB8888toPlanar16Q12
vImageConvert_RGB888toPlanar16Q12
vImageConvert_8to16Q12
vImageConvert_Planar8toPlanarF
vImageConvert_ARGB8888toPlanar8
vImageConvert_RGB888toPlanar8
vImageConvert_ChunkyToPlanar8
vImageConvert_ARGB16UtoPlanar16U
vImageConvert_RGB16UtoPlanar16U
vImageConvert_ChunkyToPlanar16
vImageConvert_ARGBFFFFtoPlanarF
vImageConvert_RGBFFFtoPlanarF
vImageConvert_ChunkytoPlanarF
vImagePiecewiseGamma_Planar8toPlanar16Q12
vImageConvert_16UToF
<NULL Colorspace Transform ?!>
vImageMatrixMultiply_<fmt>
vImagePiecewiseGamma_<fmt>
vImageMultiDimensionalInterpolatedLookupTable_<fmt>
vImageInterpolatedLookupTable_<fmt>
vImageOverwriteChannelsWithScalar_<fmt>
CGColorConversionInfo vImageMatrixMultiply_<fmt>
CGColorConversionInfo vImageTRCs_<fmt>
CGColorConversionInfo vImageLUT_<fmt> 
CGColorConversionInfo vImageLuminanceScaling_<fmt>
CGColorConversionInfo vImageHLGSceneReferredMapping_<fmt>
CGColorConversionInfo vImagePQToneMapping_<fmt>
vImageConvert_Planar16Q12toARGB8888
vImageConvert_Planar16Q12toRGB888
vImageConvert_16Q12to8
vImageConvert_16Q12toF
vImageConvert_Planar16UtoARGB16U
vImageConvert_Planar16UtoRGB16U
the one copy we couldn't get rid of
vImageConvert_PlanarToChunky16
vImageConvert_PlanarToChunky8
vImageConvert_PlanarFtoARGBFFFF
vImageConvert_PlanarFtoRGBFFF
vImageConvert_PlanarToChunkyF
vImageConvert_PlanarFToARGB8888
vImageConvert_PlanarFToPlanar8
vImageConvert_FTo16U
vImageConvert_FTo16Q12
vImageConvert_PlanarFToXRGBFFFF
vImageConvert_PlanarFToRGBXFFFF
the one copy we couldn't get rid of
vImageConvert_Planar16Q12toARGB8888
vImageConvert_Planar16Q12toRGB888
vImageConvert_16Q12to8
vImageConvert_16Q12toF
vImageConvert_Planar16UtoARGB16U
vImageConvert_Planar16UtoRGB16U
the one copy we couldn't get rid of
vImageConvert_PlanarToChunky16
vImageConvert_PlanarToChunky8
vImageConvert_PlanarFtoARGBFFFF
vImageConvert_PlanarFtoRGBFFF
vImageConvert_PlanarToChunkyF
vImageConvert_PlanarFToARGB8888
vImageConvert_PlanarFToPlanar8
vImageConvert_FTo16U
vImageConvert_FTo16Q12
vImageConvert_PlanarFToXRGBFFFF
vImageConvert_PlanarFToRGBXFFFF
the one copy we couldn't get rid of
vImageFlatten_BGRA8888ToRGB888
vImageFlatten_RGBA8888ToRGB888
vImageFlatten_ARGB8888ToRGB888
vImageFlatten_RGBA8888
vImageFlatten_Chunky8AlphaLast
vImageFlatten_Chunky8AlphaFirst
vImageFlatten_RGBA16U
vImageFlatten_ARGB16U
vImageFlatten_RGBA16Q12
vImageFlatten_ARGB16Q12
vImageFlatten_Chunky16AlphaLast
vImageFlatten_Chunky16AlphaFirst
vImageFlatten_Chunky16Q12AlphaLast
vImageFlatten_Chunky16Q12AlphaFirst
vImageFlatten_ChunkyFAlphaFirst
vImageFlatten_ChunkyFAlphaLast
vImageFlatten_ARGBFFFF
vImageFlatten_RGBAFFFF
vImageFlatten_ARGBFFFFToRGBFFF
vImageFlatten_RGBAFFFFToRGBFFF
vImageFlatten_ARGB8888
vImagePermuteChannelsSetAlphaTo1_ChunkyF
vImagePermuteChannelsSetAlphaTo1_ARGBFFFF
vImagePermuteChannelsSetAlphaTo1_Chunky16U
vImagePermuteChannelsSetAlphaTo1_ARGB16U
vImagePermuteChannelsSetAlphaTo1_Chunky8
vImagePermuteChannelsSetAlphaTo1_ARGB8888
PermuteChannels_ChunkyF
vImagePermuteChannels_ARGBFFFF
PermuteChannels_Chunky16U
vImagePermuteChannels_ARGB16U
PermuteChannels_Chunky8
vImagePermuteChannels_ARGB8888
vImageOverwriteChannelsWithScalar_Planar8
vImageOverwriteChannelsWithScalar_ARGB8888
vImageOverwriteChannelsWithScalar_Chunky8
vImageOverwriteChannelsWithScalar_Planar16U
vImageOverwriteChannelsWithScalar_Chunky16U
vImageOverwriteChannelsWithScalar_PlanarF
vImageOverwriteChannelsWithScalar_ARGBFFFF
vImageOverwriteChannelsWithScalar_ChunkyF
vImageConvert_RGB888toRGBA8888
AddAlpha_Chunky8AlphaFirst
AddAlpha_Chunky8AlphaLast
vImageConvert_RGB888toARGB8888
vImageConvert_RGB888toBGRA8888
AddAlpha_ChunkyFAlphaLast
AddAlpha_ChunkyFAlphaFirst
vImageConvert_RGBFFFtoRGBAFFFF
vImageConvert_RGBFFFtoARGBFFFF
AddAlpha_Chunky16UAlphaLast
AddAlpha_Chunky16UAlphaFirst
vImageConvert_RGB16UtoRGBA16U
vImageConvert_RGB16UtoARGB16U
vImagePermuteChannelsWithMaskedInsert_ARGB8888
vImagePermuteChannelsWithMaskedInsert_ARGB16U
vImagePermuteChannelsWithMaskedInsert_ARGBFFFF
vImageConvert_ARGB8888ToRGBA1010102
vImageConvert_ARGB16Q12ToRGB101010
vImageConvert_ARGB16UToRGB101010
vImageConvert_ARGB8888To422CbYpCrYp8
vImageConvert_ARGB8888To444CbYpCrA8
vImageConvert_ARGB8888To444AYpCbCr8
vImageConvert_ARGB8888To444AYpCbCr16
vImageConvert_ARGB16UTo444AYpCbCr16
vImageConvert_ARGB8888To444CrYpCb8
vImageConvert_ARGB8888To422CbYpCrYp16
vImageConvert_ARGB16UTo422CbYpCrYp16
vImageConvert_ARGB8888To422CrYpCbYpCbYpCbYpCrYpCrYp10
vImageConvert_ARGB16Q12To422CrYpCbYpCbYpCbYpCrYpCrYp10
vImageConvert_ARGB8888To444CrYpCb10
vImageConvert_ARGB16Q12To444CrYpCb10
vImageConvert_ARGB8888To420Yp8_Cb8_Cr8
vImageConvert_ARGB8888To422CbYpCrYp8_AA8
vImageConvert_ARGB8888To420Yp8_CbCr8
vImageConvert_ARGB8888To422YpCbYpCr8
vImageConvert_ARGB8888toPlanar16Q12
vImageConvert_RGB888toPlanar16Q12
vImageConvert_8to16Q12
vImageConvert_ARGB8888toPlanar8
vImageConvert_RGB888toPlanar8
vImageConvert_ChunkyToPlanar8
vImageConvert_ARGB16UtoPlanar16U
vImageConvert_RGB16UtoPlanar16U
vImageConvert_ChunkyToPlanar16
vImageConvert_ARGBFFFFtoPlanarF
vImageConvert_RGBFFFtoPlanarF
vImageConvert_ChunkytoPlanarF
vImagePiecewiseGamma_Planar8toPlanar16Q12
<NULL Colorspace Transform ?!>
vImageMatrixMultiply_<fmt>
vImagePiecewiseGamma_<fmt>
vImageMultiDimensionalInterpolatedLookupTable_<fmt>
vImageInterpolatedLookupTable_<fmt>
vImageOverwriteChannelsWithScalar_<fmt>
Copy
vImageConvert_RGBA1010102ToARGB8888
vImageConvert_RGB101010ToARGB16Q12
vImageConvert_RGB101010ToARGB16U
vImageConvert_422CbYpCrYp8ToARGB8888
vImageConvert_444CbYpCrA8ToARGB8888
vImageConvert_444AYpCbCr8ToARGB8888
vImageConvert_444AYpCbCr16ToARGB8888
vImageConvert_444AYpCbCr16ToARGB16U
vImageConvert_444CrYpCb8ToARGB8888
vImageConvert_422CbYpCrYp16ToARGB8888
vImageConvert_422CbYpCrYp16ToARGB16U
vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB8888
vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB16Q12
vImageConvert_444CrYpCb10ToARGB8888
vImageConvert_444CrYpCb10ToARGB16Q12
vImageConvert_420Yp8_Cb8_Cr8ToARGB8888
vImageConvert_422CbYpCrYp8_AA8ToARGB8888
vImageConvert_420Yp8_CbCr8ToARGB8888
vImageConvert_422YpCbYpCr8ToARGB8888
