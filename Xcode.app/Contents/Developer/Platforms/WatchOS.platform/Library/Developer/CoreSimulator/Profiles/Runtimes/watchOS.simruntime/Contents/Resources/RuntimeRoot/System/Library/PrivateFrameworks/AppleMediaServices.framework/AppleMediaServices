@(#)PROGRAM:AppleMediaServices  PROJECT:AppleMediaServices-1
333333
(knN
verifiedExpirationDate
autoPlay
canUseAppClips
hasAgreedToAppClipTerms
hasAgreedToTerms
isRestrictedAccount
isDisabledAccount
isManagedAccount
isInRestrictedRegion
isInBadCredit
personalization
retailDemo
underThirteen
accountFlags
altDSID
automaticDownloadKinds
biometricsState
cookies
accountCredits
demoAccountRawPassword
didAgreeToTerms
dsid
firstName
freeDownloadsPasswordSetting
homeIdentifier
iCloudFamily
inGoodStanding
isDemoAccount
isManagedAppleID
lastName
lastAuthenticateCredentialSource
lastAuthenticationServerResponse
mergedPrivacyAcknowledgements
paidPurchasesPasswordSetting
privacyAcknowledgement
pushRegistrationThrottleMap
registerSuccessCriteria
storefrontID
validPayment
@16@?0@"NSDictionary"8
B16@?0@"NSHTTPCookie"8
personID
accountType
active
username
not in
https
com.apple.account.
<ACAccount: %p type = %@ | backingID = %@
Account Property Encryption
Failed to retrieve an account property because its encrypted value was nil.
B16@?0#8
Account Property
Failed to retrieve an account property because it wasn't of the expected type.
@"NSHTTPCookie"24@?0@"NSArray"8@"NSHTTPCookie"16
v32@?0@"NSHTTPCookie"8Q16^B24
@16@?0@"NSHTTPCookie"8
 | active = %@
true
false
 | username = %@
 | altDSID = %@ | DSID = %@
 | storefront = %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
hashedDescription
T@"NSString",R,N
ams_altDSID
ams_automaticDownloadKinds
T@"NSArray",R,N
ams_cookies
ams_creditsString
ams_DSID
T@"NSNumber",R,N
ams_firstName
ams_demoAccount
TB,R,N,Gams_isDemoAccount
ams_freePasswordPromptSetting
TQ,N,Sams_setFreePasswordPromptSetting:
ams_fullName
ams_HSA2
TB,R,N,Gams_isHSA2
ams_iCloudAccount
TB,R,N,Gams_isiCloudAccount
ams_IDMSAccount
TB,R,N,Gams_isIDMSAccount
ams_iTunesAccount
TB,R,N,Gams_isiTunesAccount
ams_lastName
ams_localAccount
TB,R,N,Gams_isLocalAccount
ams_managedAppleID
TB,R,N,Gams_isManagedAppleID
ams_mergedPrivacyAcknowledgement
TB,N,Sams_setMergedPrivacyAcknowledgement:
ams_paidPasswordPromptSetting
TQ,N,Sams_setPaidPasswordPromptSetting:
ams_privateListeningEnabled
TB,R,N,Gams_isPrivateListeningEnabled
ams_privacyAcknowledgement
T@"NSDictionary",R,N
ams_pushRegistrationThrottleMap
ams_sandboxAccount
TB,R,N,Gams_isSandboxAccount
ams_securityLevel
TQ,R,N
ams_storefront
iTunesDemo-D080A994-76FD-4BF8-BE64-6C9439D0338E
iTunesLocal-421A04EA-479A-4E46-B49D-556F7144518D
com.apple.gs.itunes.mu.invite
com.apple.gs.appleid.auth
com.apple.AppleMediaServices.accountmediatype.appstore.beta
com.apple.AppleMediaServices.accountmediatype.appstore.sandbox
com.apple.AppleMediaServices.accountmediatype.production
apple
com.apple.itunesstored.token
local
v8@?0
B16@?0@"ACAccount"8
AIDA Account Missing
There's no AIDA account matching %@.
GrandSlam Token Missing
There's no GrandSlam token (%@) for %@.
@"AMSPromise"16@?0@"ACAccountType"8
@"AMSPromise"16@?0@"NSNumber"8
@"AMSPromise"16@?0@"NSError"8
Saving Nil Account
You cannot save a nil account.
Saving New Account
Use AMSAuthenticateTask to add a new account to the system.
Saving Unmodifed Account
You attempted to save an unmodifed account.
Failed to set the secure token for %@. err = %d
Failed to Set Secure Token
Invalid Parameter
The AMSURLResult didn't contain a NSHTTPURLResponse.
v24@?0@"ACAccount"8@"NSError"16
@"AMSBinaryPromise"16@?0@"NSError"8
@"AMSPromise"16@?0@"NSArray"8
Local Account Not Found
The local account doesn't exist.
v24@?0@"NSArray"8@"NSError"16
v16@?0@"NSError"8
com.apple.appstore
com.apple.iBooksX
com.apple.iTunes
ams_activeAccountCombined
TB,R,N,Gams_isActiveAccountCombined
ams_activeiCloudAccount
T@"ACAccount",R,N
ams_activeiTunesAccount
ams_iTunesAccounts
ams_iTunesAccountsWithHomeUserIdentifiers
ams_localiTunesAccount
ams_mediaType
ams_defaultMediaType
T@"NSString",&,N,Sams_setDefaultMediaType:
com.apple.AppleMediaServices.accountmediatype.itunes
/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
/System/Library/PrivateFrameworks/AppleAccount.framework/Contents/MacOS/AppleAccount
AMSAbsinthe
criteria
host
path
buyParams
regex
body
headers
params
v20@?0B8@"NSData"12
absinthe
v28@?0@"NSArray"8B16@"NSError"20
bagKeySet
T@"AMSBagKeySet",R,N
bagSubProfile
bagSubProfileVersion
signature
T@"NSString",&,N,V_signature
servKey
T@"NSString",&,N,V_servKey
Absinthe Session Failure
Platform not supported
defaultSession
T@"AMSAbsintheSession",R,N
sessionRef
T^v,N,V_sessionRef
isLocalAccount
com.apple.AMSAccountsChangedObservable.notifications
com.apple.AppleMediaServices.AMSAccountsChangedObservable.createdObservables
createdObservables
T@"NSPointerArray",R,N
createdObservablesAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N
sharedInstance
T@"AMSAccountsChangedObservable",R,N
sharedLocalAccountInstance
observable
T@"AMSObservable",&,N,V_observable
notificationsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationsQueue
account
T@"ACAccount",R,N,V_account
accountTypeIdentifier
T@"NSString",R,N,V_accountTypeIdentifier
com.apple.accountsd
accountsDaemon
TB,R,N,GisAccountsDaemon
com.apple.AppleMediaServices.AMSAccountStoreCache.cache
cache
T@"NSMutableDictionary",R,N
cacheAccessQueue
AMSAcknowledgePrivacyTask Failed
The OnBoardingKit content version for the identifier is invalid.
B16@?0^@8
privacyIdentifiers
T@"NSSet",C,N,V_privacyIdentifiers
T@"ACAccount",&,N,V_account
Anisette Failed
AMSAnisette
anisette-SP
anisette-SM
Anisette Provisioning Failed
T@"<AMSBagProtocol>",R,N,V_bag
data
T@"NSData",R,N,V_data
type
Tq,R,N,V_type
Anisette Sync Failed
Silent Enrollment Error
No GS Token
AMSAppleCardSilentEnrollment
AppleIDAuthenticationAppleIDSettingsTokenIdentifier
/System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/AppleIDSSOAuthentication
/System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Contents/MacOS/AppleIDSSOAuthentication
v24@?0@"AMSAuthenticateResult"8@"NSError"16
AMSApplePayClassic
v32@?0@"NSString"8Q16^B24
Attestation Error
Incorrect number of attestation: %@
Incorrect number of attestations: %@
primaryX509Chain
extendedX509Chain
touchIdAttestation
extendedAttestation
v32@?0@"NSData"8Q16^B24
AMSAuthenticateOptionsAllowSecondaryCredentialSource
AMSAuthenticateOptionsAllowServerDialogs
AMSAuthenticateOptionsAppProvidedContext
AMSAuthenticateOptionsAppProvidedData
AMSAuthenticateOptionsAuthenticationTypeKey
AMSAuthenticateOptionsCancelButtonString
AMSAuthenticateOptionsCanMakeAccountActiveKey
AMSAuthenticateOptionsClientInfo
AMSAuthenticateOptionsCreateAccountQueryParamsKey
AMSAuthenticateOptionsCredentialSourceKey
AMSAuthenticateOptionsDebugReason
AMSAuthenticateOptionsDefaultButtonString
AMSAuthenticateOptionsEnableAccountCreationKey
AMSAuthenticateOptionsEphemeralKey
AMSAuthenticateOptionsLogKeyKey
AMSAuthenticateOptionsHTTPHeadersKey
AMSAuthenticateOptionsIgnoreAccountConversion
AMSAuthenticateOptionsPromptTitle
AMSAuthenticateOptionsRemoteProxyAuthenticationKey
AMSAuthenticateOptionsProxyAppNameKey
AMSAuthenticateOptionsProxyAppBundleIDKey
AMSAuthenticateOptionsReason
AMSAuthenticateOptionsServiceIdentifierKey
AMSAuthenticateOptionsServiceType
AMSAuthenticateOptionsUserAgentKey
AMSAuthenticateOptionsUserAgentSuffixKey
kCodingKeyOptionsDictionary
supportsSecureCoding
TB,R
allowSecondaryCredentialSource
TB,N,V_allowSecondaryCredentialSource
companionDeviceClientInfo
T@"NSString",&,N,V_companionDeviceClientInfo
companionDeviceUDID
T@"NSString",&,N,V_companionDeviceUDID
demoAccountSetup
TB,N,GisDemoAccountSetup,V_demoAccountSetup
ephemeral
TB,N,V_ephemeral
serviceType
Tq,N,V_serviceType
remoteProxyAuthentication
TB,R,N,GisRemoteProxyAuthentication,V_remoteProxyAuthentication
serviceIdentifier
T@"NSString",&,N,V_serviceIdentifier
allowServerDialogs
TB,N,V_allowServerDialogs
authenticationType
TQ,N
appProvidedContext
T@"NSString",C,N,V_appProvidedContext
appProvidedData
T@"NSDictionary",C,N,V_appProvidedData
cancelButtonString
T@"NSString",&,N,V_cancelButtonString
canMakeAccountActive
TB,N,V_canMakeAccountActive
createAccountQueryParams
T@"NSDictionary",&,N,V_createAccountQueryParams
clientInfo
T@"AMSProcessInfo",&,N,V_clientInfo
credentialSource
TQ,N,V_credentialSource
debugReason
T@"NSString",&,N,V_debugReason
defaultButtonString
T@"NSString",&,N,V_defaultButtonString
enableAccountCreation
TB,N,V_enableAccountCreation
HTTPHeaders
T@"NSDictionary",&,N,V_HTTPHeaders
iconBundleURL
T@"NSURL",&,N,V_iconBundleURL
ignoreAccountConversion
TB,N,V_ignoreAccountConversion
logKey
T@"NSString",&,N,V_logKey
promptTitle
T@"NSString",&,N,V_promptTitle
proxyAppBundleID
T@"NSString",&,N,V_proxyAppBundleID
proxyAppName
T@"NSString",&,N,V_proxyAppName
reason
T@"NSString",&,N,V_reason
userAgent
T@"NSString",&,N,V_userAgent
userAgentSuffix
T@"NSString",&,N,V_userAgentSuffix
usernameEditable
TB,N,V_usernameEditable
kAASaveOptionCompanionDeviceClientInfoKey
kAASaveOptionCompanionDeviceUDIDKey
kAAErrorDetailsProxiedDeviceDataKey
AMSAuthenticateRequestUserInfoKeyServerPayload
kCodingKeyAccount
kCodingKeyLogKey
kCodingKeyOptions
kCodingKeyUserInfo
options
userInfo
T@"AMSAuthenticateOptions",&,N,V_options
T@"NSDictionary",&,N,V_userInfo
serverResponse
T@"NSDictionary",R,N,V_serverResponse
AMSAuthenticateErrorDialog
Authentication Failed
The verify credentials call failed.
@16@?0^@8
Account Modifications Disabled
Account modificiations are disabled. Unable to sign into a new account.
%@: [%@] 
%@: 
@"AMSPromise"16@?0@8
v24@?0@"AMSDialogResult"8@"NSError"16
Dialog Delegate Not Found
Unable to present dialog due to missing delegate
User cancelled
T@"<AMSBagProtocol>",&,N,V_bag
delegate
T@"<AMSAuthenticateTaskDelegate>",W,N,V_delegate
T@"AMSAuthenticateOptions",R,N,V_options
password
T@"NSString",&,N,V_password
multiUserToken
T@"NSString",&,N,V_multiUserToken
rawPassword
T@"NSString",&,N,V_rawPassword
T@"NSString",&,N,V_altDSID
DSID
T@"NSNumber",&,N,V_DSID
T@"NSUUID",&,N,V_homeIdentifier
homeUserIdentifier
T@"NSUUID",&,N,V_homeUserIdentifier
T@"NSString",&,N,V_username
authenticationResults
T@"NSDictionary",R,N,V_authenticationResults
metricsAuthenticationAttempts
****
v24@?0@"NSDictionary"8@"NSError"16
Unknown AuthKit Failure
The AuthKit authentication succeeded, but the results did not contain a password.
@"AMSPromise"16@?0@"NSDictionary"8
v16@?0@"AMSAuthKitUpdateResult"8
@"AMSPromise"8@?0
amstool
com.apple.amsaccountsd
com.apple.dt.xctest.tool
com.apple.AppleMediaServicesUITestsHost
com.apple.appstoreagent
com.apple.appstored
com.apple.appstorecomponentsd
com.apple.AppStoreOverlays.ViewService
authType
client
proxyApp
T@"<AMSAuthKitUpdateTaskDelegate>",W,N,V_delegate
cancel
enterPassword
actionType
details
dialogId
Password
UserNamePassword
dialogType
SignIn
dialog
eventType
failure
result
success
Cancel
targetId
userActions
badServerResponse
invalidCredentials
maxNumberOfAttemptsReached
unknown
responseTime
authenticate
%lld
product
mtTopic
enabled-media-kinds
An account is required.
We cannot sync the local account's automatic download kinds.
@"AMSPromise"16@?0@"AMSURLRequest"8
@"AMSPromise"16@?0@"AMSURLResult"8
AMSAutomaticDownloadKinds
enabledMediaKinds
T@"NSArray",R,N,V_enabledMediaKinds
media-types
status
Invalid Server Response
The server responded with a non 0 status code: %ld
v24@?0@8@"NSError"16
session
T@"AMSURLSession",&,N,V_session
presentationDelegate
T@"<AMSRequestPresentationDelegate>",R,W,N,V_presentationDelegate
AMSBagChangedNotification
changedKeys
profile
profileVersion
AMSBagInvalidatedNotification
v40@?0@"NSString"8@"NSString"16@"NSDictionary"24@"NSDictionary"32
v24@?0@"NSString"8@"NSString"16
com.apple.AppleMediaServices.AMSBag.bagCache
No Registered Bag Key Set
You cannot create a bag snapshot without registering a bag key set first.
Cannot Create Snapshot
We can't create a snapshot because we failed to load the bag.
We failed to create the snapshot.
expired
TB,R,N,GisExpired
expirationDate
T@"NSDate",R,N
T@"NSString",R,C,N
processInfo
T@"AMSProcessInfo",R,C,N
bagCache
T@"AMSLRUCache",R,N
bagCacheAccessQueue
dataSource
T@"<AMSBagDataSourceProtocol>",&,N,V_dataSource
descriptionExtended
<%@: %p; profile: %@; version: %@>
loaded
TB,R,N,GisLoaded
T@"NSString",&,N
dataSourceChangedHandler
T@?,C,N
dataSourceDataInvalidatedHandler
T@"AMSBagKeySet",R,N,V_bagKeySet
T@"NSArray",R,N,V_cookies
T@"NSDictionary",R,N,V_data
T@"NSDate",R,N,V_expirationDate
T@"AMSProcessInfo",R,C,N,V_processInfo
T@"NSString",R,C,N,V_profile
T@"NSString",R,C,N,V_profileVersion
T@"AMSBagKeySet",&,N,V_bagKeySet
T@"NSArray",&,N,V_cookies
T@"NSDictionary",&,N,V_data
T@"NSDate",&,N,V_expirationDate
T@"NSString",&,N,V_profile
T@"NSString",&,N,V_profileVersion
T@"AMSProcessInfo",&,N,V_processInfo
properties
<key=%@; type=%@; defaultValue=%@>
bagKey
defaultValue
valueType
T@"NSString",R,N,V_bagKey
T@"<NSObject>",R,N,V_defaultValue
TQ,R,N,V_valueType
com.apple.AppleMediaServices.AMSBagKeySet.bagKeySetCache
keys
bagKeySetCache
bagKeySetCacheAccessQueue
T@"NSSet",R,N,V_keys
count
mutableKeys
T@"NSMutableSet",&,N,V_mutableKeys
%@:%@:%@
v32@?0@"NSString"8@"AMSBagKeySet"16^B24
bagKeySets
T@"NSMutableDictionary",&,N,V_bagKeySets
AMSBagNetworkDataSourceInvalidateCacheNotification
com.apple.AppleMediaServices.AMSBagNetworkDataSource.cachedData
com.apple.AppleMediaServices.AMSBagNetworkDataSource.cachedStorefront
com.apple.AppleMediaServices.AMSBagNetworkDataSource.processAccountStoreDidChangeNotification
v16@?0@"AMSAccountsChangedResult"8
<%@: %p; profile: %@; version: %@; sandbox: %d>
v24@?0@"AMSBagNetworkTaskResult"8@"NSError"16
activeFailure
accountsChangedObserver
T@"AMSObserver",&,N,V_accountsChangedObserver
cachedResult
T@"AMSBagNetworkTaskResult",&,N,V_cachedResult
cachedDataAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cachedDataAccessQueue
cachedStorefront
T@"NSString",&,N,V_cachedStorefront
cachedStorefrontAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cachedStorefrontAccessQueue
completionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_completionQueue
currentLoadTask
T@"AMSBagNetworkTask",&,N,V_currentLoadTask
T@"NSError",&,N,V_activeFailure
processAccountStoreDidChangeNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_processAccountStoreDidChangeNotificationQueue
T@?,C,N,V_dataSourceChangedHandler
T@?,C,N,V_dataSourceDataInvalidatedHandler
https://bag.itunes.apple.com/bag.xml
https://sandbox.itunes.apple.com/WebObjects/MZInit.woa/wa/initiateSession
storefront-header-suffix
TB,R,N
storefront
T@"NSString",&,N,V_storefront
Bag Load Failed
We failed to load the bag.
urlCookies
Maximum number of attempts exceeded.
@"AMSBagNetworkTaskResult"16@?0^@8
os=%@
&osVersion=%@
&deviceClass=%@
&product=%@
&productVersion=%@
&profile=%@
&profileVersion=%@
&format=json
&storefront=%@
&buildVariant=%@
&%@=%@
%@?%@
Watch
com.apple.AppleMediaServices
internal
seed
itma
itfe
URLSession
T@"AMSURLSession",&,N,V_URLSession
absinthe-handshake
absinthe-requests
account-flags
authenticateAccount
change-language
update-password-settings
privacyAcknowledgementUrl
amd-domains
amd-finish-provisioning
amd-sync-machine
md-domains
md-finish-provisioning
aps-enabled-patterns
aps-sampling-percentage
aps-allowed-product-type
auto-enrollment-percentage
auto-enrollment-session-duration
countryCode
currencyCode
use-extended-enrollment
use-enrollment-upsell
alipay-terms-url
applePaySilentEnrollEligible
use-silent-enrollment
applePayPaymentSession
applePayEnroll
apple-pay-classic-networks
use-apple-pay-classic
appleMusicDeviceOfferDeepLink
iCloudDeviceOfferDeepLink
deviceOffers
deviceOffersByCreationDate
language-tag
marketing-item-media-api-realm
marketing-item-media-api-realm-mappings
marketing-item-media-api-path
apps-media-api-host
books-media-api-host
music-media-api-host
podcasts-media-api-host
token-service-backoff-interval
token-service-backoff-max
token-service-enabled
token-service-refresh-percentage
token-service-refresh-time
sf-api-token-service-url
sign-sap-setup-cert
primeUrl
sign-sap-setup
signed-actions
sign-sap-request
sign-sap-response
metrics
metrics/metricsUrl
notificationSettingChangeEventEnabled
enabled-media-types-url
register-media-types-url
backgroundUpdateProduct
buyProduct
downloadProduct
afds-enabled
guid-urls/regex
p2-in-app-buy
guid-urls/schemes
mobile-network-constraints
signup
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
TLSSamplingPercentage
TLSSamplingSessionDuration
TFOSamplingPercentage
TFOSamplingSessionDuration
touchIDChallengeSigningDelay
trustedDomains
updateProduct
update-touch-id-settings
volumeStoreDownloadProduct
%@:%@
Array
Bool
Double
Integer
String
Dictionary
 [%@]
v32@?0@8B16B20@"NSError"24
Bag Key Not Registered
Unable to retrieve %@ because you haven't yet registered it.
Bag Key Value Type Mismatch
The bag key's registered value type doesn't match the requested value type. (key = %@ | registeredValueType = %@ | requestedValueType = %@)
Unable to retrieve %@ because we failed to load the bag.
@"NSString"16@?0@"NSString"8
Invalid Bag Value
The URL was malformed for key: %@
The bag value for %@ doesn't match the type you requested. (requestedValueType = %@ | actualValueClass = %@)
The bag value for %@ doesn't match the type you expected. (expectedValueType = %@ | actualValueClass = %@)
Bag Value Missing
The bag does not contain %@ nor did anyone register a default value. %@
v28@?0@8B16@"NSError"20
globalBagValueStorage
T@"AMSThreadSafeSet",R,N
T@"ACAccount",C,N,V_account
T@"<AMSBagDataSourceProtocol>",W,N,V_dataSource
T@"NSString",&,N,V_key
transformBlocks
T@"NSArray",&,N,V_transformBlocks
TQ,N,V_valueType
@16@?0@"AMSBinaryPromise"8
v16@?0@8
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"NSNumber"8
v20@?0B8@"NSError"12
@"AMSPromise"24@?0@"NSNumber"8@"NSError"16
com.apple.StoreServices.AMSBinaryPromise.globalPromiseStorageAccessQueue
backingPromise
T@"AMSPromise",&,N,V_backingPromise
cbio
cbtn
ckon
pbiot
pmoc
pmuc
odel
osgn
@"AMSPromise"16@?0@"AMSBiometricsSignatureResult"8
identityMap
T@"NSArray",R,C,N
deviceState
Tq,R,N
identityMapValid
TB,R,N,GisIdentityMapValid
Biometrics presentation error
Delegate doesn't respond to AMSURLSession:task:handleAuthenticateRequest:completion:
Delegate doesn't respond to AMSURLSession:task:handleDialogRequest:completion:
T@"AMSURLSession",R,N,V_session
task
T@"NSURLSessionTask",R,N,V_task
Biometric Error
Biometrics not available
@"AMSPromise"16@?0@"<AMSSecurityServiceInterface>"8
Invalid Identity Map
T@"ACAccount",R,C,N,V_account
challenge
T@"NSString",R,C,N,V_challenge
T@"AMSProcessInfo",R,C,N,V_clientInfo
dualAction
TB,N,GisDualAction,V_dualAction
keychainOptions
T@"AMSKeychainOptions",R,N,V_keychainOptions
localAuthAccessControlRef
T^{__SecAccessControl=},R,N,V_localAuthAccessControlRef
localAuthContext
T@"LAContext",R,N,V_localAuthContext
localAuthOptions
T@"NSDictionary",R,N,V_localAuthOptions
originalRequest
T@"AMSBiometricsSignatureRequest",&,N,V_originalRequest
Biometrics dialog failed
Biometrics dialog cancelled
Signature Failed
No data to sign
Fatal error when signing data
Fatal error prior to signing data
Finished without result or error
@"AMSBiometricsSignatureResult"16@?0^@8
request
T@"AMSBiometricsSignatureRequest",R,N,V_request
Biometrics Update Failed
Platform does not have biometrics
Could not handle authenticate request, presentation delegate not set
Could not handle dialog request, presentation delegate not set
shouldPromptUser
TB,N,V_shouldPromptUser
additionalDialogMetrics
T@"NSDictionary",&,N,V_additionalDialogMetrics
T@"<AMSRequestPresentationDelegate>",W,N,V_presentationDelegate
shouldGenerateKeysOnly
TB,N,V_shouldGenerateKeysOnly
shouldRequestConfirmation
TB,N,V_shouldRequestConfirmation
valuePromise
T@"AMSPromise",&,N,V_valuePromise
caller
appExtVrsId
bundleID
bvrs
disableTouchID
externalVersionId
existingExternalVersionId
guid
hasBeenAuthedForBuy
hasConfirmedPaymentSheet
icloud-backup-enabled
installedSoftwareRating
is-background
salableAdamId
kbsync
ownerDsid
pkPayment
applePayPaymentServiceURL
price
pricingParameters
productType
serialNumber
existingSinf
requestType
softwareVersionExternalIdentifier
v32@?0@8@16^B24
<AMSBuyParams: %p buyParams = %@>
kCodingKeyBuyParamsString
Td,R,N
dictionary
T@"NSDictionary",R
Card Authorization Error
bioLockout
@"PKPayment"16@?0^@8
didBiometricsLockout
TB,N,V_didBiometricsLockout
didCancelHomeButton
TB,N,V_didCancelHomeButton
T@"NSMutableArray",&,N,V_userActions
confirmationStyle
Tq,N,V_confirmationStyle
T@"NSString",&,N,V_countryCode
T@"NSString",&,N,V_currencyCode
metricsEvent
T@"AMSMetricsEvent",C,N,V_metricsEvent
passSerialNumber
T@"NSString",&,N,V_passSerialNumber
passTypeIdentifier
T@"NSString",&,N,V_passTypeIdentifier
paymentSession
T@"NSDictionary",R,N,V_paymentSession
AMSCardEnrollment
need-apple-pay-auto-enroll-retry
paymentServicesMerchantURL
T@"NSURL",R,C,N
shouldAttemptAutoEnrollment
cardType
APPLE_PAY_AQUAMAN
APPLE_PAY_BROADWAY
Feature Not Enabled
No active iTunes account
No active iCloud account
Split Account
eligible
Failed to deserialize JSON response
v24@?0@"AMSURLResult"8@"NSError"16
v16@?0@"AMSLazyPromise"8
T@"NSString",R,C,N,V_countryCode
Platform Not Supported
cardArtwork
descriptionLong
descriptionShort
paymentNetwork
suffix
T@"NSString",&,N,V_cardArtwork
Tq,N,V_cardType
T@"NSString",&,N,V_descriptionLong
T@"NSString",&,N,V_descriptionShort
Tq,N,V_paymentNetwork
T@"NSString",&,N,V_serialNumber
T@"NSString",&,N,V_suffix
T@"NSDictionary",&,N,V_dictionary
cardData
T@"NSData",R,N,V_cardData
brokerURL
T@"NSURL",R,N,V_brokerURL
paymentServicesURL
T@"NSURL",R,N,V_paymentServicesURL
@"AMSCardRegistrationResult"16@?0^@8
Method Not Available
T@"NSString",C,N,V_countryCode
merchantIdentifier
T@"NSString",C,N,V_merchantIdentifier
com.apple.AppleMediaServices.AMSCircularBuffer.access
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
currentIndex
TQ,N,V_currentIndex
buffer
T@"NSMutableArray",&,N,V_buffer
allObjects
maxSize
com.apple.AppleMediaServices.clientCertRequest
Simulator not supported.
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQueue
T@"AMSKeychainOptions",&,V_options
(%ld) %@
%@%@
 %@ 
%@%@%@%@%@%@%@
| %@
NOTE: Skipping button input while running in unit tests.
      Automatically selecting the first button...
Select a button: 
Invalid input detected!
Press <return> to continue...
NOTE: Skipping textfield input while running in unit tests.
Enter response for '%@' textfield [%@]: 
Enter response for '%@' textfield: 
T@"AMSDialogRequest",R,N,V_request
maximumDialogWidth
Td,N,V_maximumDialogWidth
minimumDialogWidth
Td,N,V_minimumDialogWidth
dialogPadding
Td,N,V_dialogPadding
automaticButtonSelection
Tq,N,V_automaticButtonSelection
com.apple.AppleMediaServices.AMSCommerceService.sharedConnection
com.apple.commerced
com.apple.commerce
sharedConnection
T@"NSXPCConnection",&,N
sharedConnectionAccessQueue
proxyObject
T@"<AMSCommerceService>",R,N
proxyObjectAsync
attributes.kind
attributes.label
attributes.name
attributes.value
kind
label
name
value
contentRatingID
T@"NSString",R,N,V_contentRatingID
T@"NSString",R,N,V_kind
T@"NSString",R,N,V_label
T@"NSString",R,N,V_name
T@"NSNumber",R,N,V_value
AMSContractBagShim
Not Supported
AMSContractBagShim doesn't support creating a snapshot.
mescalContract
metricsContract
metricsUrl
family-info
familyInfoURL
personalizedLookupURL
unpersonalizedLookupURL
mescalCertificateURL
mescalPrimingURL
mescalSetupURL
mescalSignedActions
mescalSignSapRequests
mescalSignSapResponses
metricsDictionary
metricsURL
apsEnabledPatterns
apsSamplingPercent
apsAllowedProductTypes
guidRegexes
guidSchemes
storefrontSuffix
bagContract
T@"NSObject",&,N,V_bagContract
com.apple.xpc.amsaccountsd
T@,W,N,V_delegate
%@.serviceQueue
v24@?0@"<AMSDaemonConnectionProtocol>"8@"AMSPromise"16
Connection Proxy Failed
%@ proxy unavailable
Async
Sync
AMSDaemonConnection Error
Unknown error occurred while fetching Async remote object proxy
Unknown error occurred while fetching sync remote object proxy
Proxy Failure
Failed to fetch connection proxy. Missing either an error or result.
Connection interrupted
Connection could not be established (invalidated)
T@"NSXPCConnection",&,N,V_sharedConnection
T@"NSObject<OS_dispatch_queue>",R,N,V_sharedConnectionAccessQueue
activePromises
T@"NSMutableSet",R,N,V_activePromises
interruptionHandlers
T@"NSMutableArray",R,N,V_interruptionHandlers
1.2.11
Decoding Failed
Unable to determine encoding for unknown encoding
Data Encoding Failed
Invalid JSON object
Invalid PLIST object
Invalid String object
/json
/xml
/plist
/data
AMSNewFeaturesEnabled
currentBuildVersion
T@"NSString",C,N,V_currentBuildVersion
optionsArray
previousBuildVersion
T@"NSString",C,N,V_previousBuildVersion
scenario
TQ,N,V_scenario
com.apple.AppleMediaServices.notbackedup
kAMSUserDefaultsAllowDuplicateAccounts
AMSAllowUpsellForAppliedAccounts
AMSAlwaysSendBuster
AMSAlwaysSendGuid
AuthenticationStarted
BagOverrides
AMSBagURLCookies
AMSCardEnrollmentAutomatic
AMSCardEnrollmentManual
AMSCardEnrollmentSilent
AMSCardEnrollmentUpsell
AMSDefaultPaymentPassIdentifier
AMSDeviceBiometricsIdentities
AMSDeviceBiometricsState
AMSDeviceOfferEligibility
AMSDeviceOffersSerialNumber
AMSDidRetrieveDeviceOffers
AMSDidRetrieveDeviceOffersEligibility
AMSDidRetrieveTVOffers
AMSDisableHARLogging
AMSDisableStubbedMarketingItems
AMSEnableCameraRedeem
AMSEnableFullDeviceOffersRetrieval
AMSEnablePurchaseQueue
AMSEnableRemoteSecuritySigning
AMSExtendedBiometricACLVersion
AMSForceEngagementPurchaseSuccess
AMSForceLoadUrlMetrics
AMSHARURLFilters
AMSIgnoreServerTrustEvaluation
AMSIncludeFullRequestInHARLogging
AMSIncludeFullResponseInHARLogging
AMSJourneysURLOverride
AMSLogHARData
AMSMarketingItemOverrides
AMSMediaTokenOverride
AMSMediaTokens
AMSFPCertExpiration
AMSMetricsCanaryIdentifier
AMSMetricsTimingWindowStartTime
AMSMigratedDeviceOffers
AMSMigratedToNewCookieStorage
AMSMultiUserContainerID
AMSPerformedDeviceOfferSetup
AMSPrimaryBiometricACLVersion
AMSPushEnvironment
AMSQAMode
AMSReversePushEnabled
AMSSamplingSession
lastSampleDate
lastSampleResult
AMSShowSandboxAccountUI
AMSSourceOverrides
AMSStorefrontSuffixes
AMSUIURLOverrides
AMSShowSpyglassPurchasesTab
com.apple.itunesstored
ISIgnoreExtendedValidation
DisableGDPR
AutoEnrollment
TLSSessionTickets
@"AMSPair"24@?0@"NSString"8@"NSString"16
@"AMSPair"24@?0@"NSString"8@"NSURL"16
%@-%@
com.apple.AMSDefaults.lock
defaults.lock
com.apple.AMSDefaults.badging
Badges:%@
deviceBiometricIdentities
T@"NSArray",&,N
deviceBiometricsState
Tq,N
disablePrivacyAcknowledgement
TB,N
perfomedDeviceOfferSetup
enableFullDeviceOffersRetrieval
enablePurchaseQueue
enableRemoteSecuritySigning
forceEngagementPurchaseSuccess
disableStubbedMarketingItems
marketingItemOverrides
T@"NSDictionary",&,N
mediaTokens
mescalCertExpiration
T@"NSDate",&,N
metricsTimingWindowStartTime
allowDuplicateAccounts
alwaysSendCacheBuster
alwaysSendGUID
authenticationStarted
applePayClassic
bagOverrides
bagURLCookies
cardEnrollmentAutomatic
cardEnrollmentManual
cardEnrollmentSilent
cardEnrollmentUpsell
defaultPaymentPassIdentifier
deviceOfferEligibility
deviceOffersSerialNumber
didRetrieveDeviceOffers
didRetrieveDeviceOffersEligibility
didRetrieveTVOffers
disableHARLogging
enableCameraRedeem
forceLoadUrlMetrics
harURLFilters
ignoreServerTrustEvaluation
includeFullRequestInHARLogging
includeFullResponseInHARLogging
journeysURLOverride
T@"NSURL",&,N
logHARData
mediaTokenOverride
metricsCanaryIdentifier
migratedDeviceOffers
migratedToNewAccountStore
migratedToNewCookieStorage
multiUserContainerID
pushEnvironment
QAMode
reversePushEnabled
showSandboxAccountUI
showSpyglassPurchases
sourceOverrides
storefrontSuffixes
useNewAccountStore
T@"AMSBagValue",R,N
T@"<AMSMescalBagContract>",R,N
T@"<AMSMetricsBagContract>",R,N
AppleLanguageCodeSetup
AppleLanguages
language
com.apple.AppleMediaServices.deviceOffersChanged
com.apple.TV
expressedIntent
isDeviceEligible
isGift
v24@?0@"AMSDeviceOffer"8^B16
B16@?0@"AMSDeviceOffer"8
companionSerialNumbers
v32@?0@"NSDictionary"8Q16^B24
deviceEligibility
eligibilityCriteria
agreedToTerms
goodStanding
isICloudFamily
B16@?0@"NSDictionary"8
offerIdentifier
deviceOffersCheck
AMSDeviceOffers
device offers
v16@?0@"AMSAuthenticateResult"8
@"NSDictionary"16@?0@"NSArray"8
@"NSString"16@?0@"AMSDeviceOffer"8
T@"NSSet",R,N
eligibleForOffers
TB,R,N,GisEligibleForOffers
gift
TB,R,N,GisGift
%012x
iPad Simulator
iPhone Simulator
watchOS
v24@?0@8@"CTXPCServiceSubscriptionContext"16
System/Library/CoreServices/SystemVersion.plist
biometricState
buildVersion
compatibleProductType
deviceGUID
deviceName
hardwarePlatform
localIPAddress
macAddress
macAddressData
T@"NSData",R,N
MLBSerialNumber
operatingSystem
productVersion
ROMAddress
runningInStoreDemoMode
TB,R,N,GisRunningInStoreDemoMode
screenScale
screenHeight
screenWidth
secureElementAvailable
TB,R,N,GisSecureElementAvailable
thinnedAppVariantId
uniqueDeviceId
UIApplication
Unable to find class %s
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/UIKit.framework/Contents/MacOS/UIKit
filter
T@"AMSDeviceMessengerFilter",&,N,V_filter
block
T@?,C,N,V_block
com.apple.AMSDeviceMessenger
v24@?0@"<AMSDeviceMessengerServiceInterface>"8@"NSError"16
AMSDeviceMessenger Error
Invalid bridge dialog for clear
Invalid bridge dialog for send
connection
T@"AMSDaemonConnection",&,N,V_connection
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
updateHandlers
T@"NSMutableArray",&,N,V_updateHandlers
messageType
Tq,N,V_messageType
deviceType
Tq,N,V_deviceType
com.apple.AppleMediaServices.deviceOffers.AppleMusic
com.apple.AppleMediaServices.deviceOffers.AppleMusic_and_iCloud
com.apple.AppleMediaServices.deviceOffers.iCloud
com.apple.AppleCare
com.apple.Music
com.apple.iCloud
@"AMSDeviceOffer"16@?0@"NSDictionary"8
adamId
isDowngrading
isSubscribed
T@"NSNumber",C,N,V_adamId
T@"NSString",C,N,V_description
downgrading
TB,N,GisDowngrading,V_downgrading
T@"NSString",C,N,V_offerIdentifier
offerType
serialNumbers
T@"NSSet",R,N,V_serialNumbers
subscribed
TB,N,GisSubscribed,V_subscribed
v24@?0@"NSSet"8@"NSError"16
companionDevices
services
No account specified for registering device offers
We cannot use the local account to register and retrive device offers.
@"AMSPromise"16@?0@"NSMutableURLRequest"8
offers
@"NSDictionary"16@?0@"NSString"8
self
POST
URL Request could not be created
bagURL is nil
v28@?0@"NSURL"8B16@"NSError"20
AMSDeviceOfferRegistrationTask
lightweightCheckOnly
TB,N,V_lightweightCheckOnly
offerIdentifiers
T@"NSSet",&,N,V_offerIdentifiers
com.apple.AMSDialog.systemDialogs
buttons
T@"NSArray",C,N,V_buttons
completionHandler
T@?,C,N,V_completionHandler
icon
T@"NSImage",C,N,V_icon
message
T@"NSString",C,N,V_message
selectedButtonIndex
Tq,N,V_selectedButtonIndex
style
Tq,N,V_style
textFields
T@"NSArray",C,N,V_textFields
title
T@"NSString",C,N,V_title
{ id: %@, title: %@ }
kCodingKeyDeepLink
kCodingKeyDialogRequest
kCodingKeyIdentifier
kCodingKeyMetrics
kCodingKeyRequest
kCodingKeyInferLinkDest
kCodingKeyRetry
kCodingKeyStyle
kCodingKeyTitle
deepLink
T@"NSURL",C,N,V_deepLink
identifier
T@"NSString",C,N,V_identifier
inferLinkDestination
TB,N,V_inferLinkDestination
T@"NSURLRequest",C,N,V_request
dialogRequest
T@"AMSDialogRequest",C,N,V_dialogRequest
T@"NSMutableDictionary",C,N,V_userInfo
shouldRetry
TB,N,V_shouldRetry
handler
T@?,C,N,V_handler
AMSDialogRequestUserInfoKeyServerPayload
{ id: %@, title: %@, default: %@, actions: %@ }
kCodingKeyButtonActions
kCodingKeyDefaultAction
kCodingKEyMessage
kCodingKeyTextFields
buttonActions
T@"NSArray",C,N,V_buttonActions
defaultAction
T@"AMSDialogAction",&,N,V_defaultAction
T@"NSURL",C,N,V_iconBundleURL
T@"NSString",C,N,V_logKey
T@"NSDictionary",C,N,V_userInfo
identity map
PROMPT_REASON_NEW_FINGERS_FORMAT_%@
Mesa
PROMPT_REASON_NEW_FINGERS_ANONYMOUS
PROMPT_REASON_NEW_FACE_FORMAT_%@
PROMPT_REASON_NEW_FACE_ANONYMOUS
Identity Map Failure
Failed to determine biometric type
T@"NSURLSessionTask",&,N,V_task
AMSDialogResultDismissIdentifier
<%@:%p selected:%@>
kCodingKeyOriginalRequest
kCodingKeySelectionActionId
kCodingKeyTextfieldValues
T@"AMSDialogRequest",R,N,V_originalRequest
selectedActionIdentifier
T@"NSString",C,N,V_selectedActionIdentifier
textfieldValues
T@"NSArray",C,N,V_textfieldValues
kCodingKeyKeyboardType
kCodingKeyPlaceholder
kCodingKeySecure
kCodingKeyTag
kCodingKeyText
keyboardType
Tq,N,V_keyboardType
placeholder
T@"NSString",C,N,V_placeholder
secure
TB,N,V_secure
Tq,N,V_tag
text
T@"NSString",C,N,V_text
AMSDoubleLinkedListInvalidNode
Attempting to add a node that has already been added to another list.
Attempting to remove a node from a list it doesn't belong to.
listIdentifier
T@"NSString",&,N,V_listIdentifier
allNodes
TQ,R,N,V_count
head
T@"AMSDoubleLinkedListNode",&,N,V_head
tail
T@"AMSDoubleLinkedListNode",&,N,V_tail
previous
T@"AMSDoubleLinkedListNode",&,N,V_previous
object
T@,&,N,V_object
next
T@"AMSDoubleLinkedListNode",&,N,V_next
AMSEnagementConnectionErrorNotification
com.apple.AMSEngagement
Invalid Engagement Data
(prev: %@)
v24@?0@"AMSEngagementEnqueueResult"8@"NSError"16
v24@?0@"AMSEngagementSyncResult"8@"NSError"16
Engagement Connection Failed
The connection encountered an error
com.apple.AMSEngagementConnection
T@"AMSEngagementConnection",&,N,V_connection
runningPromises
T@"NSMutableSet",&,N,V_runningPromises
cachedResponses
whitelist
v32@?0@"NSString"8@16^B24
T@"NSArray",&,N,V_cachedResponses
T@"NSString",R,N,V_identifier
T@"NSArray",&,N,V_whitelist
cacheInfo
duration
definition
created
T@"NSDictionary",R,N,V_definition
cacheKey
T@"NSDate",R,N,V_created
responseData
allowsResponse
apps
lastSyncedBuild
clientData.txt
v32@?0@"NSString"8@"AMSEngagementAppData"16^B24
AMSEngagementClientDataChanged
amsengagementd
com.apple.AMSEngagementClientData
T@"NSMutableDictionary",&,N,V_apps
T@"NSString",&,N,V_lastSyncedBuild
com.apple.xpc.amsengagementd
com.apple.AppleMediaServices.engagement
T@"NSXPCConnection",&,N,V_connection
proxy
T@"<AMSEngagementServiceProtocol>",&,N,V_proxy
errorHandler
T@?,C,N,V_errorHandler
<AMSEngagementDestination: %@>
kCodingKeyAllowsResponse
T@"NSString",&,N,V_identifier
TB,N,V_allowsResponse
kCodingKeyClientInfo
kCodingKeyDestinations
kCodingKeyEvents
kCodingKeyTimeoOut
destinations
T@"NSArray",&,N,V_destinations
events
T@"NSArray",&,N,V_events
timeout
Td,N,V_timeout
kCodingKeyActions
kCodingKeyData
actions
T@"NSArray",&,N,V_actions
T@"AMSEngagementRequest",&,N,V_request
clientData
failOnDismiss
metricsOverlay
T@"NSDictionary",&,N,V_clientData
TB,N,V_failOnDismiss
T@"NSDictionary",&,N,V_metricsOverlay
T@"NSURL",&,N,V_URL
kCodingKeyContext
kCodingKeyTimeout
context
T@"NSDictionary",&,N,V_context
bagKeyRegistrationEnabled
HARLoggingEnabled
processAssertionsEnabled
v16@?0@"NSMutableDictionary"8
com.apple.AppleMediaServices.AMSEphemeralDefaults
HARLoggingItemLimit
AMSErrorDomain
AMSServerErrorDomain
DEFAULT_ERROR_TITLE
AMSAnisetteErrorCode
AMSContentType
AMSEngagementPresented
AMSServerAllowed
AMSServerErrorCode
AMSServerPayload
AMSStatusCode
AMSURL
error
T@"NSError",&,N,V_error
com.apple.StoreServices.SSVFamilyContentDeletionNotification
pairs
downloaderAccountID
TQ,R,N,V_downloaderAccountID
familyID
TQ,R,N,V_familyID
purchaserAccountID
TQ,R,N,V_purchaserAccountID
family
hohSharingPayment
members
family.hohSharingPayment
@16@?0@"AMSFamilyMember"8
isCached
familyMembers
family.members
B16@?0@8
B16@?0@"AMSFamilyMember"8
q24@?0@"AMSFamilyMember"8@"AMSFamilyMember"16
dictionaryRepresentation
cached
TB,R,N,GisCached,V_cached
T@"NSArray",R,N,V_familyMembers
headOfHouseholdSharingPayment
TB,R,N,GisHeadOfHouseholdSharingPayment,V_headOfHouseholdSharingPayment
circle
timestamp
AMSFamilyInfo
Family Info Lookup Failed
We cannot load the family circle if there's no account.
We failed to load the family info for the active account.
@"AMSFamilyInfoLookupResult"16@?0^@8
We were unable to get the family circle URL.
JFamilyCircle.plist
askToBuy
ICloudDsid
accountName
ITunesPreferredDsid
ITunesPreferredAccountName
sharingPurchases
iCloudDSID
iCloudUsername
isCurrentSignedInUser
iTunesDSID
iTunesUsername
isAskToBuyEnabled
isSharingPurchases
currentSignedInUser
TB,N,GisCurrentSignedInUser,V_currentSignedInUser
askToBuyEnabled
TB,R,N,GisAskToBuyEnabled,V_askToBuyEnabled
T@"NSString",R,N,V_firstName
T@"NSNumber",R,N,V_iCloudDSID
T@"NSString",R,N,V_iCloudUsername
T@"NSNumber",R,N,V_iTunesDSID
T@"NSString",R,N,V_iTunesUsername
T@"NSString",R,N,V_lastName
TB,R,N,GisSharingPurchases,V_sharingPurchases
.apple.com
features
com.apple.storeservices.itfe
additionalFeatures
B24@?0@"NSString"8@"NSNumber"16
@24@?0@"NSString"8@"NSNumber"16
cookie
T@"NSHTTPCookie",R,N
/System/Library/FeatureFlags/Domain
Description
DisplayName
Hidden
AMPFlagGroup
AMPITFE
AMPTestable
B16@?0@"AMSFeatureFlag"8
hidden
TB,N,GisHidden,V_hidden
feature
T@"NSString",C,N,V_feature
displayName
T@"NSString",C,N,V_displayName
featureDescription
T@"NSString",C,N,V_featureDescription
domain
T@"NSString",C,N,V_domain
ITFE
T@"NSString",C,N,V_ITFE
flagGroup
T@"NSString",C,N,V_flagGroup
testable
TB,N,GisTestable,V_testable
enabled
TB,N,GisEnabled,V_enabled
defaultEnabled
TB,N,GisDefaultEnabled,V_defaultEnabled
userEnabled
TB,N,GisUserEnabled,V_userEnabled
GoBack
Goto
OpenURL
RetryRestoreAll
creditString
T@"NSString",&,N,V_creditString
Tq,N,V_kind
taskInfo
T@"AMSURLTaskInfo",&,N,V_taskInfo
failureType
loud
silent
url: %@; status: %lu; correlation: %@
no dialogResponse in AMSFinanceAuthenticateResponse
AMSFinanceAuthenticationResponse Failed
Request for authentication finished without a result or error
authentication
Finance Authentication Error
No delegate to perform authentication: %@
dialogDictionary
T@"NSDictionary",&,N,V_dialogDictionary
dialogResponse
T@"AMSFinanceDialogResponse",R,N,V_dialogResponse
authenticateRequest
T@"AMSAuthenticateRequest",R,N,V_authenticateRequest
cancelButtonAction
cancelButton
explanation
otherButtonAction
otherButtonString
okButtonAction
okButtonString
okButton
paymentSheetInfo
authorization
action
background
inline
goback
QRCode
redeem-code
Review
GotoFinance
GotoFinanceV2
ServiceAction
FamilyPermissionAction
subtarget
tidContinue
kActionUserInfoKeyCommerceUIURL
kActionUserInfoKeyType
kActionUserInfoKeySubtarget
kActionUserInfoKeyURL
kActionUserInfoKeyURLType
kActionUserInfoKeyResolvedInterruption
signatureResumption
eventVersion
pixelRatio
ams_commerceUIURL
TB,N,Sams_setCommerceUIURL:
ams_actionType
Tq,N,Sams_setActionType:
ams_buyParams
T@"NSString",&,N,Sams_setBuyParams:
ams_buttonDictionary
T@"NSDictionary",&,N,Sams_setButtonDictionary:
ams_resolvedInterruption
TB,N,Sams_setResolvedInterruption:
ams_subtarget
T@"NSString",&,N,Sams_setSubtarget:
ams_rawURL
T@"NSURL",&,N,Sams_setRawURL:
ams_URLType
Tq,N,Sams_setURLType:
Finance Dialog Error
No delegate to present the dialog
Finance Dialog Failed
No dialog request
WATCH_INTERRUPTION_MESSAGE_TINKER
WATCH_INTERRUPTION_MESSAGE
WATCH_INTERRUPTION_TITLE
Finance Engagement Error
Not allowed to present engagement
No delegate to present the engagement
No URL for engagement
inlineInterrupt
v24@?0@"AMSEngagementResult"8@"NSError"16
http://
containsCommerceUIURL
TB,R,N,V_containsCommerceUIURL
T@"NSDictionary",R,C,N,V_dialogDictionary
responseDictionary
T@"NSDictionary",R,C,N,V_responseDictionary
T@"AMSURLTaskInfo",C,N,V_taskInfo
T@"AMSDialogRequest",R,N,V_dialogRequest
tid-dialog
accountHeader
attributedList
header
size
large
caseControl
confirmationTitle
confirm
install
rent
redeem
subscribe
currency
displayPrice
flexList
headerIcon
valueStyle
images
isApplePay
paymentSummary
preSheetDialog
priceSection
pricingSection
rating
requestor
AppleMusic
AppleNews
AppStore
iBooks
iTunes
salableIcon
salableIconType
merchant
messages
watch
salableInfo
storeName
gray
grey
enum
WATCH_PASSCODE_REQUIRED_ALERT_TITLE
WATCH_PASSCODE_REQUIRED_ALERT_MESSAGE
WATCH_PASSCODE_REQUIRED_ALERT_BUTTON
prefs:root=PASSCODE_ID
payment sheet passcode
payment sheet
v32@?0@8Q16^B24
useLargeSize
authenticateResponse
T@"AMSFinanceAuthenticateResponse",R,N,V_authenticateResponse
T@"NSDictionary",R,N,V_metricsDictionary
paymentSheetRequest
T@"AMSPaymentSheetRequest",R,N,V_paymentSheetRequest
PKPaymentContentItemLightColorAttribute
/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
/System/Library/PrivateFrameworks/PassKitCore.framework/Contents/MacOS/PassKitCore
protocol
m-allowed
creditDisplay
customerMessage
ping
pings
store-version
redirect-url
dsPersonId
The server encountered an error
Server Error
cachedAuthenticateResponse
T@"AMSFinanceAuthenticateResponse",&,N,V_cachedAuthenticateResponse
cachedDialogResponse
T@"AMSFinanceDialogResponse",&,N,V_cachedDialogResponse
cachedPaymentSheetResponse
T@"AMSFinancePaymentSheetResponse",&,N,V_cachedPaymentSheetResponse
dialogKind
Tq,R,N,V_dialogKind
T@"NSDictionary",&,N,V_responseDictionary
pingURLs
serverError
T@"NSError",R,N
supportedProtocolVersion
versionMismatchURL
T@"NSURL",R,N
carrierBillingUrls
verifyCodeUrl
sendCodeUrl
customerTitleMessage
failureClientInfo
localization
nextActionUrl
customerSubmitButtonMessage
customerSendNewCodeButtonMessage
machineName
verificationCode
carrierBillingVerificationFailed
machineVerificationFailed
5202
2025
Verify Dialog Error
Unknown verify type
Dialogs were suppressed by the caller
Max attempts reached, cancelling dialog
VERIFY_PAYMENT_ENTER_CODE
CANCEL
VERIFY_PAYMENT_ENTER_CVV
Verify Purchase Failed
No new code URL found
No verify URL found
No verify URL
Apple-Watch
T@"AMSDialogRequest",&,N,V_dialogRequest
verifyType
Tq,N,V_verifyType
com.apple.AppleMediaServices.followUpQueue
B16@?0@"AMSFollowUpItem"8
No follow-ups exist for %@.
Item Not Found
Follow up item could not be found
Unable To Overwrite
Unable to overwrite a follow up with higher priority
followUpQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_followUpQueue
AMSLogKey
AMSMetrics
AMSPreferredClient
AMSRequest
AMSRequestMethod
AMSRequestBody
AMSRequestURL
AMSParentIdentifier
AMSRequiresFollowUpUI
AMSShouldClear
com.apple.AppleMediaServices.followUpAction
com.apple.AppleMediaServices.followUpActionInternal
backingIdentifier
T@"NSString",&,N,V_backingIdentifier
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
actionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_actionQueue
T@"NSString",&,N,V_label
T@"AMSMetricsEvent",&,N,V_metricsEvent
parentIdentifier
preferredClient
T@"NSURLRequest",&,N
requiresFollowUpUI
shouldClear
T@"NSURL",&,N,V_url
T@"NSMutableDictionary",&,N
AMSPriority
com.apple.AppleMediaServices.FollowUpExtension
AMS_
com.apple.AppleMediaServices.FollowUpItem
com.apple.AppleMediaServices.FollowUpItemMetrics
%@%@%@
metricsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_metricsQueue
displayStyle
Tq,N,V_displayStyle
footer
T@"NSString",&,N,V_footer
groupIdentifier
informativeText
T@"NSString",&,N,V_informativeText
priority
shouldPostNotification
TB,N,V_shouldPostNotification
T@"NSString",&,N,V_title
T@"NSMutableDictionary",&,N,V_userInfo
xp_amp_followup
AMSFrozenBagValue
com.apple.AMSGenerateFraudScoreTask+AMSPurchase.fraudScoreCache
Generating fraud scores isn't supported on this platform.
%02x
Unknown Encoding Error
Failed to encode a generated fraud score.
@"AMSPromise"16@?0@"NSData"8
freeBuy
paidBuy
review
TQ,R,N,V_action
Family permission failed
Family permission required
proxyBundleId
T@"NSString",C,N,V_proxyBundleId
T@"AMSDialogRequest",R,N
T@"AMSDialogResult",R,N,V_result
T@"NSError",R,C,N,V_error
APRequestHandler
/System/Library/PrivateFrameworks/AskPermission.framework/AskPermission
/System/Library/PrivateFrameworks/AskPermission.framework/Contents/MacOS/AskPermission
.har
.har.compressed
Library
Logs
com.apple.StoreServices
HTTPArchives
entries
%@_%f%@
AppleMediaServices
version
creator
comment
response
time
startedDateTime
@16@?0@"NSURLSessionTaskTransactionMetrics"8
YYYY-MM-dd'T'HH:mm:ss.SZZZ
en_US_POSIX
@"NSDateFormatter"16@?0@"NSTimeZone"8
APS-Attempted
APS-Succeeded
clientIPAddress
bodySize
mimeType
@24@?0@"NSString"8@"NSString"16
headersSize
HTTP/1.1
httpVersion
method
/WebObjects/MZFinance.woa/wa/authenticate
******
postData
Content-Length
content
X-Apple-Connection-Reused
statusText
directory
backingJSONData
T@"NSData",&,N,V_backingJSONData
compressed
TB,N,GisCompressed,V_compressed
JSONData
T@"NSData",R,N,V_JSONData
urlString
T@"NSString",&,N,V_urlString
v16@?0@"NSString"8
SSHTTPArchiveShouldSaveToDiskNotification
SSHTTPArchiveShouldSaveToDiskDecompressedNotification
AMSUpdateHARFiltersNotification
AMSHTTPArchiveController
com.apple.AppStore
T@"AMSCircularBuffer",R,N
removeDisabled
TB,N,GisRemoveDisabled
maxBufferSizeOverride
T@"NSNumber",&,N
AMSInlineDelegate.%@
v24@?0@"NSValue"8^B16
implementations
T@"NSMutableSet",&,N,V_implementations
T@"Protocol",&,N,V_protocol
com.apple.multitasking.systemappassertions
ams_assertionCount
TQ,N,V_ams_assertionCount
com.apple.AMSKeepAlive.assertions
AMSKeepAlive[%@]:%@
%@-%ld
Tq,R,N,V_style
com.apple.ams.AMSKeybag.dispatch
T@"AMSKeybag",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
fairPlayContextID
TI,N,V_fairPlayContextID
com.apple.AppleMediaServices.cert.X509.client.extended
com.apple.AppleMediaServices.cert.X509.client.intermediate
com.apple.AppleMediaServices.cert.X509.client.primary
com.apple.AppleMediaServices.resumptionHeaders
Certificate Lookup: Invalid number of keychain labels: %@ options: %@
Keychain Error
Certificate Lookup: Failed to find cert. status: %@ options: %@
Certificate Lookup: Cert fetch finished without either an error or both certs. options: %@
Private Key Lookup: Invalid private key label: %@. options: %@
Private Key Lookup: Failed to fetch privateKey. status: %@ options: %@
Private Key Lookup: Finished without a result or error. options: %@
Delete Certificate: Invalid number of keychain labels: %@ options: %@
Delete Certificate: NULL privateKey label for options: %@
Delete Certificate: Failed to delete cert. label: %@ status: %@ options: %@
Delete Certificate: Failed to delete cert key. label: %@ status: %@ options: %@
mt-tid-%@
Store Certificate: Invalid private key OR label. label: %@ options: %@
Store Certificate: Invalid certs. options: %@
Store Certificate: Invalid number of keychain labels: %@ options: %@
Store Certificate: Failed to save privateKey for label: %@ status: %@ options: %@
Store Certificate: Failed to save client cert for label: %@ status: %@ options: %@
Store Certificate: Failed to save intermediate cert for label: %@ status: %@ options: %@
Keypair Delete: Invalid keychain label for options: %@
Keypair Delete: Failed to delete legacy key. label: %@ status: %@ options: %@
com.apple.AppleMediaServices.cert.watch.client.primary
com.apple.AppleMediaServices.cert.watch.intermediate.primary
com.apple.AppleMediaServices.primaryKey
com.apple.AppleMediaServices.extendedKey
Create ACL: Failed to create ACL reference
Create ACL: Failed to create ACL constraints
pbioc
pkofn
com.apple.AppleMediaServices.cert.X509.primary
com.apple.AppleMediaServices.cert.X509.extended
Private Key: Failed to lookup private key
Public Key: Failed to copy public key
Generate Keypair: Failed to generate ACL constraints
Generate Keypair: Failed to generate keypair
Keychain Attestation: Invalid attestation style for options: %@
Keychain Attestation: Invalid keychain label for options: %@
Keychain Attestation: Attesting key lookup failed for options: %@
Keychain Attestation: Failed to create attestation data for options: %@
AMSKeychainOptionsAuthenticationFallbackVisible
AMSKeychainOptionsClientCertLabel
AMSKeychainOptionsDisplayAuthenticationReason
AMSKeychainOptionsIntermediateCertLabel
AMSKeychainOptionsLabel
AMSKeychainOptionsPrompt
AMSKeychainOptionsPurpose
AMSKeychainOptionsRegenerateKeys
AMSKeychainOptionsStyle
authenticationFallbackVisible
clientCertLabel
displayAuthenticationReason
intermediateCertLabel
prompt
purpose
regenerateKeys
preferredAttestationStyle
T@"NSString",C,N,V_clientCertLabel
T@"NSString",C,N,V_intermediateCertLabel
T@"NSString",C,N,V_label
TQ,N,V_purpose
TB,N,V_regenerateKeys
TQ,N,V_style
TB,N,V_authenticationFallbackVisible
TB,N,V_displayAuthenticationReason
T@"NSString",C,N,V_prompt
executedBlock
TB,N,V_executedBlock
Error domain=%@, code=%ld
, underlyingError={ 
?REDACTED
com.apple.AppleMediaServices.AMSLogConfig
general
ams.oversize
accounts.plugins.authentication
accounts.daemon
accounts
accounts.cookies
datamigration
deviceoffers
accounts.logout
accounts.migration
accounts.migration-oversize
accounts.multiuser
accounts.plugins.notification
accounts.oversize
accounts.storefront
accounts.plugins.sync
fairplay.anisette
keychain.attestation
bag.cache
followup
keychain
marketingitem
media
privacy
purchase
pushnotification
ratingsprovider
usernotification
accounts.plugins.mediaServiceOwner
%@: {
  category: %@
  subsystem: %@
backingOSLogObject
T@"NSObject<OS_os_log>",&,N,V_backingOSLogObject
propertyAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_propertyAccessQueue
category
T@"NSString",C,N,V_category
subsystem
T@"NSString",C,N,V_subsystem
debugLogsEnabled
OSLogObject
T@"NSObject<OS_os_log>",R,N
T@"NSString",C,D,N
external-version-id
lockup
play
playlist-product
bundleId
artwork
platform
lang
Unknown Error
Lookup request finished without a result
AMSLookup
Lookup JS Failure
Platform not supported for JS signing
T@"NSString",&,N,V_caller
imageProfile
T@"NSString",&,N,V_imageProfile
keyProfile
T@"NSString",&,N,V_keyProfile
T@"NSString",&,N,V_platform
signatureType
Tq,N,V_signatureType
Tq,N,V_version
T@"NSString",&,N,V_language
AMSEncodingDictionary
artistName
bundleIdentifier
categoryNames
itemKind
iTunesStoreIdentifier
T@"NSNumber",R,C,N
offerName
POIBased
TB,R,N,GisPOIBased
productPageURL
numberOfUserRatings
userRating
Tf,R,N
numberOfUserRatingsForCurrentVersion
userRatingForCurrentVersion
itemDictionary
T@"NSDictionary",R,N,V_itemDictionary
bgColor
textColor1
textColor2
textColor3
textColor4
height
width
alpha
Td,N,V_alpha
blue
Td,N,V_blue
green
Td,N,V_green
Td,N,V_red
artworkDictionary
T@"NSDictionary",R,N,V_artworkDictionary
URLString
actionText
action-params
priceFormatted
subscription
buyParameters
formattedPrice
lookupDictionary
T@"NSDictionary",R,N,V_lookupDictionary
subscriptionType
downloaded
downloading
long
medium
short
podcast
v32@?0@"AMSLookupItem"8Q16^B24
v32@?0@8@"NSDictionary"16^B24
T@"NSDate",C,N,V_expirationDate
allItems
isAuthenticated
results
artistUrl
contentRating
advisories
copyright
standard
genreNames
poiBased
nameRaw
newsstandArtwork
releaseDate
requiredCapabilities
screenshotsByType
ipad
iphone
iphone5
shortUrl
softwareInfo
hasInAppPurchases
isGameCenter
eulaUrl
privacyPolicyUrl
requirementsString
supportUrl
itunesNotes
ratingCount
ratingCountCurrentVersion
valueCurrentVersion
com.apple.AppleMediaServices.AMSLRUCache.accessQueue.%p
v32@?0@8@"AMSDoubleLinkedListNode"16^B24
%@: %@,
backingDictionary
T@"NSMutableDictionary",&,N,V_backingDictionary
backingList
T@"AMSDoubleLinkedList",&,N,V_backingList
TQ,R,N,V_maxSize
T@"<NSCopying>",W,N,V_key
com.apple.appstore.bridgestoreextension
com.apple.appstore.messagesstoreextension
com.apple.appstore2
com.apple.appstore3
com.apple.appstore3.messagesstoreextension
com.apple.appstore3.bridgestoreextension
com.apple.applemediaservices.followupextension
com.apple.asclient
com.apple.bridge
com.apple.fitness
com.apple.ibooks
com.apple.ios.storekituiservice
com.apple.itunesu
com.apple.lowtide
com.apple.maps
com.apple.mobilestore
com.apple.mobilesms
com.apple.music
com.apple.music.connectpostextension
com.apple.music.mediasocialshareservice
com.apple.music.messages
com.apple.music.musiccorespotlightextension
com.apple.music.recentlyplayedtodayextension
com.apple.music.storeflowextension
com.apple.musicuiservice
com.apple.podcasts
com.apple.welcomekit
com.apple.videos
MacAppStore
macappstore
macappstores
com.apple.configurator.ui
Configurator
itms-books
itms-bookss
Music
itms
itmss
Podcasts
itms-podcasts
AppleTV
itms-apps
itms-appss
com.apple.iBooks
com.apple.Fitness
fitnessapp
AMSFollowUpExtension
itunesstored
iTunesU
itms-itunesu
itms-itunesus
com.apple.Maps
Maps
com.apple.matd
matd
com.apple.MobileSMS
Messages
com.apple.MobileStore
MobileStore
music
musics
com.apple.StoreKitUIService
StoreKitUIService
its-videos
its-videoss
itms-watch
itms-watchs
/System/Library/Messages/iMessageBalloons/ASMessagesProvider.bundle
currentBundleInfo
T@"AMSMappedBundleInfo",R,N
T@"NSString",&,N,V_bundleIdentifier
clientName
T@"NSString",&,N,V_clientName
clientVersion
T@"NSString",&,N,V_clientVersion
scheme
T@"NSString",&,N,V_scheme
secureScheme
T@"NSString",&,N,V_secureScheme
accountMediaType
T@"NSString",&,N,V_accountMediaType
@"AMSPair"24@?0@8@16
@"AMSMarketingItemAction"16@?0@"NSDictionary"8
@"AMSMediaVideo"16@?0@8
badge
campaignID
itemID
itemActions
rawValues
T@"NSDictionary",R,C,N,V_rawValues
relatedContent
subtitle
templateID
videos
link
@"AMSMarketingItemActionComponent"16@?0@"NSString"8
T@"NSDictionary",&,N,V_rawValues
T@"AMSBuyParams",R,N
callToActionLabel
disclaimerText
isDefault
isFamily
isRecommended
offerID
priceForDisplay
priceDiff
priceDiffForDisplay
valuePropDetail
valuePropInfo
serviceComponents
artworkURL
T@"NSDictionary",R,N,V_rawValues
attributes
availableInterval
relationships
contents
marketingArtwork
campaignId
serviceDisplayData
display.template
display.templateParameters
variantId
marketingVideo
valueProposition.price
valueProposition.priceDiff
valueProposition.priceDiffForDisplay
valueProposition.priceForDisplay
valueProposition.detail
valueProposition.info
%@.%@
%@.%@.%@
No marketing items found
Found no marketing items for the given account
Engagement
AMSMarketingItemParser
placement
items
item
 NOT
<noerror>
No marketing item
Engagement did not select a marketing item
@"AMSMarketingItem"16@?0^@8
@"NSArray"16@?0^@8
@"AMSPromise"16@?0@"NSURL"8
Could not find array for key path results.data in response dictionary
Data expected is missing.
v16@?0@"AMSURLResult"8
AMSMarketingItemTask
contextInfo
T@"NSDictionary",C,N,V_contextInfo
clientIdentifier
T@"NSString",R,N,V_clientIdentifier
T@"NSString",R,N,V_clientVersion
hydrateRelatedContent
TB,N,V_hydrateRelatedContent
T@"NSString",R,N,V_placement
T@"NSString",R,N,V_serviceType
includeMediaAssets
TB,N,V_includeMediaAssets
{cc}
extend[marketing-items]
include
meta[marketing-items]
priceDiffsForDisplay
Could not build marketing item URL
Bag is missing URL components
heic
artworkSize
T{CGSize=dd},R,N
tokenService
T@"<AMSMediaTokenServiceProtocol>",R,N,V_tokenService
isMediaRequest
mediaToken
v16@?0@"AMSURLRequest"8
v24@?0@"AMSMediaToken"8@"NSError"16
requestEncoder
T@"AMSURLRequestEncoder",R,N,V_requestEncoder
disableAccountMediaTypeComponent
TB,N,V_disableAccountMediaTypeComponent
URLKnownToBeTrusted
T@"ACAccount",&,N
T@"<AMSBagProtocol>",R,N
T@"AMSProcessInfo",&,N
disableResponseDecoding
responseDecoder
T@"<AMSResponseDecoding>",&,N
Invalid Status Code
Media token is expired.
Media token is invalid.
Media resource not found.
Response status code is: %lu
Invalid Response
Response is not of type NSHTTPURLResponse.
T@"NSDictionary",R,N,V_responseDictionary
responseDataItems
com.apple.AppleMediaServices.AMSMediaSharedProperties
sharedPropertiesMapTable
T@"NSMapTable",R,N
appex
deviceProtocol
extension
isbn
identity
isrc
appletv
AMSMediaTask
TB,N,V_URLKnownToBeTrusted
additionalPlatforms
T@"NSArray",&,N,V_additionalPlatforms
additionalQueryParams
T@"NSDictionary",&,N,V_additionalQueryParams
bundleIdentifiers
T@"NSArray",&,N,V_bundleIdentifiers
charts
TB,N,V_charts
filters
T@"NSDictionary",&,N,V_filters
includedResultKeys
T@"NSArray",&,N,V_includedResultKeys
itemIdentifiers
T@"NSArray",&,N,V_itemIdentifiers
searchTerm
T@"NSString",&,N,V_searchTerm
albums
app-bundles
audio-books
books
book-series
in-apps
music-videos
playlists
podcasts
podcast-episodes
songs
stations
hostBagKey
T@"NSString",R,N,V_hostBagKey
includePlatform
TB,R,N,V_includePlatform
typeString
T@"NSString",R,N,V_typeString
{clientVersion}
{storefront}
{filter}
{type}
filter[{filter}]
include[{type}]
term
types
/v{clientVersion}/catalog/{storefront}/
search
Invalid media task configuration
Bundle identifiers, charts, filters, item identifiers, or search term must be specified.
Bundle identifiers, charts, item identifiers, or search term cannot be set on the same request.
Bundle identifiers only availble for AMSMediaTaskTypeApp, AMSMediaTaskTypeAppBundle, and AMSMediaTaskTypeInApp.
@"AMSPromise"16@?0@"NSString"8
config
T@"AMSMediaTaskTypeConfig",R,N,V_config
lifetime
tokenString
Td,R,N,V_lifetime
T@"NSString",R,N,V_tokenString
valid
TB,R,N,GisValid,V_valid
Authorization
Bearer 
x-request-timestamp
clientId
osVersion
buildVariant
bypassMescal
com.apple.AppleMediaServices.AMSMediaTokenService
Token Service Disabled
Bag value of token-service-enabled is false.
AMSMediaTokenService
Token request throttled
Throttling to reduce server load.
Token request encoding failed
The token request encoder finished with an error.
Token result error
The token result promise finished with an error.
Token result could not be deserialized.
cachedMediaToken
T@"AMSMediaToken",&,N
throttler
T@"AMSMediaTokenServiceThrottler",R,N,V_throttler
tokenFetchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_tokenFetchQueue
tokenStore
T@"AMSMediaTokenServiceStore",R,N,V_tokenStore
refreshPercentage
Td,N,V_refreshPercentage
refreshTime
Td,N,V_refreshTime
keychainAccessGroup
T@"AMSURLSession",W,N,V_session
token
Invalid token result
Result object is not a dictionary.
Result could not be decoded.
com.apple.AppleMediaServices.mediaToken
T@"NSString",&,N,V_keychainAccessGroup
com.apple.AppleMediaServices.mediaTokenChanged.%@.%@
keychain-access-groups
memoryMediaToken
T@"AMSMediaToken",&,N,V_memoryMediaToken
keychainStore
T@"AMSMediaTokenServiceKeychainStore",&,N,V_keychainStore
userDefaultsStore
T@"AMSMediaTokenServiceUserDefaultsStore",&,N,V_userDefaultsStore
attemptNumber
TQ,N,V_attemptNumber
throttleDate
T@"NSDate",&,N,V_throttleDate
baseSleepInterval
Td,N,V_baseSleepInterval
maxSleepInterval
Td,N,V_maxSleepInterval
video
videoDictionary
T@"NSDictionary",R,C,N,V_videoDictionary
T@"AMSObservable",R,N
lastKnownStatus
Mescal Signature Failed
Unknown error occurred generating the mescal signature from data
Bag not provided
Failed to locate session for type: %d
Unknown error occurred generating the mescal signature using request
verificationFailure
AMSCore
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
fields
Mescal Denied
Mescal denied for exchange
FairPlay Mescal Failed
An unknown error occurred exchanging data
Mescal denied for priming
An unknown error occurred priming data
Mescal Denied for signing
An unknown error occurred signing data
Mescal denied for prime
Mescal denied for signature verification
complete
TB,R,N,GisComplete,V_complete
fairplay-client
com.apple.AppleMediaServices.AMSMescalSession
Mescal Failed
Connection not primed
Failed to establish context
Mescal Session Failure
No SAP context for signature verification
sap-setup-cert.txt
Failed to locate a mescal entitlement
Context establishment finished without actually completing
Unknown error while attemptint to establish context
Mescal Session Failed
An unknown error occurred loading certificate data
sign-sap-setup-buffer
Posting exchanged data finished without a response
primed
TB,N,V_primed
AMSFlushTimerEnabledNotificationName
UIApplicationDidBecomeActiveNotification
UIApplicationWillEnterForegroundNotification
com.apple.AppleMediaServices.metrics.completion
com.apple.AppleMediaServices.metrics.flush
v16@?0@"NSNotification"8
Metrics Flush Failed
Flush disabled
sharedApplication
com.apple.AppleMediaServices.metricsTimer
sharedTimerQueue
appAnalyticsAllowed
diagnosticsSubmissionAllowed
disableBackgroundMetrics
flushDelayEnabled
flushTimerEnabled
currentFlushStrategy
T@"<AMSMetricsFlushStrategy>",&,N,V_currentFlushStrategy
databaseSource
T@"AMSMetricsDatabaseDataSource",&,N,V_databaseSource
destination
Tq,N,V_destination
engagementQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_engagementQueue
flushingDisabled
TB,N,V_flushingDisabled
flushOnForeground
TB,N,V_flushOnForeground
flushIntervalBlock
T@?,C,N,V_flushIntervalBlock
flushIntervalStartTime
T@"NSDate",&,N,V_flushIntervalStartTime
flushQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_flushQueue
T@"<AMSMetricsBagContract>",&,N
containerId
T@"NSString",R,N,V_containerId
eventCount
TB,N,V_flushTimerEnabled
maxBatchSize
Tq,N,V_maxBatchSize
maxRequestCount
Tq,N,V_maxRequestCount
monitorsLifecycleEvents
TB,N,V_monitorsLifecycleEvents
com.apple.AMSMetricsDatabase.internal
com.apple.AMSMetricsDatabase
SELECT COUNT(*) FROM events
 locked_by = ? AND locked_time > ?
v32@?0@"AMSSQLiteCursor"8@"NSError"16^B24
v24@?0@"AMSSQLiteQueryResults"8@"NSError"16
B8@?0
DELETE FROM events
 WHERE locked_by = ?
v16@?0@"<AMSSQLiteBinding>"8
DELETE FROM events WHERE pid in (%@);
SELECT pid, eventBody, batchId, account FROM events
 AND
 report_url = ?
 WHERE%@
 ORDER BY report_url ASC, batchId ASC, timestampInserted ASC;
INSERT OR REPLACE INTO events (report_url, eventBody, batchId, account, timestampInserted) VALUES (?,?,?,?,?);
UPDATE events SET locked_by = ?, locked_time = ? WHERE locked_by IS NULL OR locked_by = '' OR locked_time <= ?;
UPDATE events SET locked_by = NULL, locked_time = 0 WHERE locked_by = ? OR locked_time <= ?;
UPDATE events SET locked_by = NULL, locked_time = 0 WHERE pid in (%@);
DELETE FROM identifiers WHERE expires<=?
DELETE FROM identifiers WHERE account=?
INSERT OR IGNORE INTO identifiers (key, account, value, expires) VALUES (?,?,?,?);
UPDATE identifiers SET value=?, expires=? WHERE key=? AND account=? AND (expires<? OR expires is null OR expires='')
SELECT value FROM identifiers WHERE key=? AND account=? AND expires>?
PRAGMA incremental_vacuum(100);
T@"AMSSQLiteConnection",&,N,V_connection
keepAliveCount
Tq,N,V_keepAliveCount
T@"NSString",&,N,V_containerId
com.apple.AMSMetricsDatabaseDataSource
v40@?0@"AMSMetricsEvent"8@"NSString"16@"NSError"24^B32
database
T@"AMSMetricsDatabase",R,N,V_database
currentLockKey
T@"NSString",&,N,V_currentLockKey
containerIdentifier
T@"NSString",R,N,V_containerIdentifier
v16@?0@"AMSSQLiteSchemaMigration"8
metrics.sqlitedb
Metrics
PRAGMA auto_vacuum = 2;
CREATE TABLE events (pid INTEGER, report_url TEXT, eventBody TEXT, locked_by TEXT, locked_time REAL DEFAULT 0, timestampInserted REAL, PRIMARY KEY (pid));
CREATE INDEX events_locked_by ON events (locked_by);
CREATE INDEX events_locked_time ON events (locked_time);
CREATE INDEX events_report_url ON events (report_url);
CREATE INDEX events_timestampInserted ON events (timestampInserted);
ALTER TABLE events ADD account TEXT;
ALTER TABLE events ADD batchId TEXT;
CREATE TABLE identifiers (key TEXT, account TEXT, value TEXT, expires REAL, PRIMARY KEY (key, account));
appInstall
click
enter
exit
impressions
loadUrl
page
buyConfirmed
appVersion
anonymous
baseVersion
canaryIdentifier
clientEventId
eventTime
timezoneOffset
topic
clientOnlyProperties
checkDU
diagnosticsSubmissionBugType
preventSampling
engagementEvent
com.apple.AppleMediaServices.AMSMetricsEvent
T@"NSObject<OS_dispatch_queue>",R,N,V_internalQueue
clientEventID
databaseEventBody
databasePID
T@"NSNumber",&,N,V_databasePID
dictionaryForPosting
checkDiagnosticsAndUsageSetting
underlyingDictionary
T@"NSMutableDictionary",R,N,V_underlyingDictionary
TB,N,GisAnonymous
overrides
fieldFilters
com.apple.AMSMetricsFigaroBagConfguration
Figaro Bag Failure
Failed to locate the figaro bag configuration
T@"NSArray",R,N,V_overrides
defaultModifier
T@"AMSMetricsFigaroEventModifier",R,N,V_defaultModifier
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
postFrequency
blacklistedFields
blacklistedEvents
disabled
sendDisabled
sampling
percentage
v32@?0@"NSString"8@"NSSet"16^B24
Figaro
hostApp
hostAppVersion
delegateApp
pageId
pageType
pageContext
T@"NSDictionary",R,N,V_fieldFilters
overrideDictionary
T@"NSDictionary",R,N,V_overrideDictionary
sampleSessionKey
T@"NSString",R,N,V_sampleSessionKey
flushInterval
TB,N,V_anonymous
T@"NSString",&,N,V_canaryIdentifier
containsLoadURL
TB,N,V_containsLoadURL
droppedEvents
T@"NSArray",&,N,V_droppedEvents
eventDictionaries
T@"NSArray",&,N,V_eventDictionaries
reportURL
T@"NSURL",&,N,V_reportURL
skippedEvents
T@"NSArray",&,N,V_skippedEvents
Flush Figaro Task Failed
Cancelled
Metrics Mescal Failed
Failed to generate digest
Signature is nil
deliveryVersion
postTime
No Metrics Body
Unable to post nil metrics body
Unable to Gzip body
Unable to Gzip the metrics flush body
gzip
application/json; charset=utf-8
cancelled
currentCancellablePromise
T@"AMSPromise",&,N,V_currentCancellablePromise
requestCount
Ti,N,V_requestCount
T@"AMSURLSession",R,N,V_URLSession
T@"<AMSMetricsDataSource>",&,N,V_dataSource
T@"NSString",&,N,V_topic
TB,R,N,V_cancelled
com.apple.AppleMediaServices.meta
clientGeneratedId
com.apple.AMSMetricsIdentifier
T@"NSString",&,N,V_domain
Td,N,V_duration
xp_amp_clientperf
appleTimingApp
apsRelayAttempted
apsRelayDidFallback
apsRelaySucceeded
cachedResponse
clientCorrelationKey
clientError
connectionEndTime
connectionInterface
connectionReused
connectionStartNStatRXBytes
connectionStartNStatTXBytes
connectionStartTime
connectionStopNStatRXBytes
connectionStopNStatTXBytes
connectionType
dnsServersIPAddresses
domainLookupEndTime
domainLookupStartTime
edgeNodeCacheStatus
environmentDataCenter
fetchStartTime
networkQualityReports
radioTechnology
radioType
redirectCount
redirectEndTime
redirectStartTime
requestMessageSize
requestStartTime
requestUrl
resolvedIPAddress
responseDate
responseEndTime
responseMessageSize
responseStartTime
secureConnectionStartTime
statusCode
TFOEnabled
tidState
xpSessionDuration
xpSamplingForced
xpSamplingPercentageUsers
xpSamplingPercentageCachedResponses
XXDC
performance
sessionDuration
samplingPercentageUsers
samplingPercentageCachedResponses
decodedResponseBody
T@"NSDictionary",&,N,V_decodedResponseBody
responseBody
T@"NSData",&,N,V_responseBody
T@"NSURLSession",&,N,V_session
taskMetrics
T@"NSURLSessionTaskMetrics",&,N,V_taskMetrics
_kCFNTimingDataConnectEnd
_kCFNTimingDataConnectionInterfaceIdentifier
_kCFNTimingDataConnectionReused
_kCFNTimingDataConnectionStartTimeCounts
_kCFNTimingDataNStatRXBytes
_kCFNTimingDataNStatTXBytes
_kCFNTimingDataConnectStart
_kCFNTimingDataConnectionStopTimeCounts
_kCFNTimingDataDomainLookupEnd
_kCFNTimingDataDomainLookupStart
_kCFNTimingDataFetchStart
_kCFNTimingDataRedirectCount
_kCFNTimingDataRedirectEnd
_kCFNTimingDataRedirectStart
_kCFNTimingDataTotalBytesSent
_kCFNTimingDataRequestStart
_kCFNTimingDataResponseEnd
_kCFNTimingDataTotalBytesReceived
_kCFNTimingDataResponseStart
_kCFNTimingDataSecureConnectionStart
Td,N
DNSServers
originalApp
requestURL
TIDState
xxdc
batches
T@"NSMutableDictionary",&,N,V_batches
B16@?0@"AMSMockURLOverride"8
_executedOverrides
T@"NSMutableArray",R,N
registeredOverrides
executedOverrides
currentOverride
T@"AMSMockURLOverride",&,N,V_currentOverride
mockURLOverride
T@"AMSMockURLOverride",&,V_mockURLOverride
B16@?0@"NSURLRequest"8
@"<NSCopying>"16@?0@"NSURLQueryItem"8
v32@?0@"NSString"8@"NSString"16^B24
comparators
T@"NSMutableArray",&,N,V_comparators
executedObservable
T@"AMSObservable",&,N,V_executedObservable
T@"AMSMockURLResponse",&,N,V_response
criteriaBlock
T@?,C,N,V_criteriaBlock
content-encoding
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
responseHandlerBlocks
T@"NSMutableArray",&,N,V_responseHandlerBlocks
runningTask
T@"NSURLSessionTask",&,N,V_runningTask
TQ,N,V_statusCode
T@"NSDictionary",&,N,V_headers
T@"NSData",&,N,V_body
performActualRequest
TB,N,V_performActualRequest
T@"NSURLRequest",R,N,V_originalRequest
com.apple.AppleMediaServices.AMSMultiUserService.sharedConnection
com.apple.amsaccountsd.multiuser
com.apple.private.applemediaservices
machServiceName
serviceInterface
T@"NSXPCInterface",R,N
T@"<AMSMultiUserServiceProtocol>",R,N
kinds
size-limits
Media type not found
Could not find network constraints
AMSNetworkConstraints
%@: %@
sizeLimits
T@"NSMutableDictionary",&,N,V_sizeLimits
anyNetworkTypeEnabled
TB,R,GisAnyNetworkTypeEnabled
None
WiFi
Cellular
Ethernet
interface
dataStalls
isKnownGood
isLowInternetDL
isLowInternetUL
lastReportedRxSignalStrength
linkQuality
loadedLQM
com.apple.symptoms.NetworkOfInterest
com.apple.symptom_analytics.query
T@"AMSNetworkQualityInquiry",R,N
lastConnectionReport
settingId
value.data
value.dataUpdated
itemId
desc
userChanged
T@"NSString",R,N,V_desc
T@"NSString",R,N,V_title
TB,N,V_userChanged
sections
T@"NSArray",R,N,V_sections
sectionId
settings
@16@?0@8
T@"NSString",R,N,V_footer
T@"NSArray",R,N,V_items
We cannot sync settings without an account.
We cannot sync the local account's push notification settings.
getGranularNotificationSettings
serviceId
setGranularNotificationSettings
GranularNotificationSettings
T@"NSObject",&,N,V_context
keyPath
T@"NSString",C,N,V_keyPath
T@"NSObject",W,N,V_object
coma.apple.AppleMediaServices.AMSObservable.sendMessage
behavior
TQ,R,N,V_behavior
failureError
T@"NSError",&,N,V_failureError
observers
T@"NSMutableArray",&,N,V_observers
queuedResults
T@"NSMutableArray",&,N,V_queuedResults
sendMessageQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sendMessageQueue
stateLock
T@"NSConditionLock",&,N,V_stateLock
TB,R,N,GisCancelled
TB,R,N,GisComplete
completionBlock
T@?,C,N,V_completionBlock
failureBlock
T@?,C,N,V_failureBlock
resultBlock
T@?,C,N,V_resultBlock
AMSOpenURL
applicationState
TI,N,V_applicationState
T@"NSString",&,N,V_bundleID
defaultIndex
Tq,N,V_defaultIndex
normalScheme
T@"NSString",&,N,V_normalScheme
Open URL Failed
No URL to open
Unable to open the given URL: %@
http
com.apple.Bridge
q24@?0@"NSString"8@"NSString"16
attemptedTargets
T@"NSMutableSet",&,N,V_attemptedTargets
T@"NSURL",R,N,V_URL
parentOperation
T@"AMSOperation",W,N,V_parentOperation
promise
T@"AMSBinaryPromise",R,N,V_promise
TB,N,V_success
T@,R,N,V_value
first
T@,R,N,V_first
second
T@,R,N,V_second
mtClientId
Biometric
biometricsAnalyze
cancelHomeButton
enterPasswordCancelled
enterPasswordPressed
EnterPassword
IForgot
open
T@"NSString",C,N,V_price
APPS-BRAZIL
GAMES
ITUNESGAMES
ITUNES-GAMES
NZ-OFLC
RP13
RP16
NOT RATED
UNRATED
BBFC
MPAA
PG-13
NC-17
RIAA
CLEAN
EXPLICIT
TV-US
US-TV
TV-G
TV-MA
TV-PG
TV-Y
TV-Y7
TV-14
Rating-Brazil_10
Rating-Brazil_12
Rating-Brazil_14
Rating-Brazil_16
Rating-Brazil_18
Rating-Brazil_L
Rating-Movie_NZ_G
Rating-Movie_NZ_PG
Rating-Movie_NZ_M
Rating-Movie_NZ_R13
Rating-Movie_NZ_R15
Rating-Movie_NZ_R16
Rating-Movie_NZ_R18
Rating-Movie_NZ_RP13
Rating-Movie_NZ_RP16
Rating-Movie_NZ_R
Rating-Movie_UK_U
Rating-Movie_UK_PG
Rating-Movie_UK_12
Rating-Movie_UK_12A
Rating-Movie_UK_15
Rating-Movie_UK_18
Rating-Movie_UK_R18
Rating-MPAA_G
Rating-MPAA_PG
Rating-MPAA_PG13
Rating-MPAA_R
Rating-MPAA_NC17
Rating-MPAA_Unrated
Rating-MPAA_NR
Rating-RIAA_Clean
Rating-RIAA_Explicit
Rating-TV_US_Y
Rating-TV_US_Y7
Rating-TV_US_Y7FV
Rating-TV_US_14
Rating-TV_US_G
Rating-TV_US_PG
Rating-TV_US_MA
Rating-TV_US_D
Rating-TV_US_L
Rating-TV_US_S
Rating-TV_US_V
localAssetName
ratingType
Tq,R,N,V_ratingType
serverSupplied
TB,R,N,GisServerSupplied
tint
T@"NSString",R,C,N,V_URLString
T@"NSString",R,C,N,V_value
%%image_
%%IMAGE_
%@ %@
CONFIRMATION_TITLE_PAY
v32@?0@"AMSPaymentSheetPriceSectionItem"8Q16^B24
v40@?0@8{_NSRange=QQ}16^B32
tiff
San Francisco
ams_confirmationStyle
ams_paymentRequestorType
PKPaymentSummaryItem
/System/Library/PrivateFrameworks/PassKit.framework/PassKit
/System/Library/PrivateFrameworks/PassKit.framework/Contents/MacOS/PassKit
PKPaymentContentItem
PKPaymentContentItemImageAndScaleAttachment
PKPaymentContentItemImageKey
PKPaymentContentItemScaleKey
PKPaymentContentItemImageAttachment
T@"NSString",C,N,V_accountHeader
TB,N,GisApplePayClassic,V_applePayClassic
T@"NSArray",C,N,V_attributedList
biometricsRequest
T@"AMSBiometricsSignatureRequest",&,N,V_biometricsRequest
Tq,N,V_confirmationTitle
T@"NSString",C,N,V_currencyCode
T@"NSString",C,N,V_displayPrice
T@"NSString",C,N,V_explanation
T@"NSArray",C,N,V_flexList
inlineImages
T@"NSArray",&,N,V_inlineImages
merchantSession
T@"NSDictionary",C,N,V_merchantSession
payee
Tq,N,V_payee
T@"NSString",C,N,V_paymentSession
T@"NSString",C,N,V_paymentSummary
T@"NSArray",C,N,V_preSheetDialog
T@"NSNumber",C,N,V_price
priceSectionItems
T@"NSArray",C,N,V_priceSectionItems
ratingHeader
T@"NSString",C,N,V_ratingHeader
ratingValue
T@"NSString",C,N,V_ratingValue
Tq,N,V_salableIcon
salableIconURL
T@"NSURL",C,N,V_salableIconURL
T@"NSArray",C,N,V_salableInfo
salableInfoLabel
T@"NSAttributedString",C,N,V_salableInfoLabel
requiresAuthorization
TB,N,V_requiresAuthorization
shouldUppercaseText
TB,N,V_shouldUppercaseText
T@"NSString",C,N,V_storeName
titleType
Tq,N,V_titleType
passwordEquivalentToken
T@"NSString",&,N,V_passwordEquivalentToken
paymentToken
T@"NSString",&,N,V_paymentToken
signatureResult
T@"AMSBiometricsSignatureResult",&,N,V_signatureResult
didAuthorizePayment
TB,N,V_didAuthorizePayment
cancellationType
TQ,N,V_cancellationType
didPresent
TB,N,V_didPresent
com.apple.AMSPaymentSheet.presentation
Payment Sheet Failed
Biometrics (LAContext) required
Passcode required
Invalid AuthKit context (Username is nil)
Payment request is nil
Finished without a result
Unable to create authorization controller
Presentation failed
v12@?0B8
AuthKit authorization failed
Failed to sign challenge.
Unknown error occurred during authorization
Payment sheet cancelled
assetCache
T@"AMSPaymentSheetAssetCache",&,N,V_assetCache
authenticationContext
T@"AKAppleIDAuthenticationContext",&,N,V_authenticationContext
paymentSheetPromise
T@"AMSPromise",&,N,V_paymentSheetPromise
presentationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_presentationQueue
state
T@"_PaymentSheetState",&,N,V_state
T@"AMSPaymentSheetRequest",&,N,V_request
T@"NSDictionary",&,N,V_metricsDictionary
purchaseInfo
T@"AMSPurchaseInfo",&,N,V_purchaseInfo
PKPaymentAuthorizationController
PKPaymentRequest
PKPaymentAuthorizationResult
auditTokenData
bundleURL
executableName
localizedName
mediaType
partnerHeader
com.apple.AppleMediaServices.AMSClientInfo
@"NSBundle"8@?0
@24@?0^{__CFString=}8#16
ISClientValueParameter
ISClientPartnerHeaderChangedNotification
mach-lookup
com.apple.AppleMediaServices.AMSProcessInfo.defaultMediaType
<AMSProcessInfo: %p name = %@ | bundleIdentifier = %@ | clientVersion = %@ | mediaType = %@ | proxyAppBundleID = %@ | userAgentSuffix = %@>
Process Info Failure
Failed to locate current bundle record
v16@?0@"AMSLRUCache"8
com.apple.AMSProcessInfo
amsaccountsd
defaultMediaTypeAccessQueue
currentProcess
T@"AMSProcessInfo",R,N
buddyRunning
TB,R,N,GisBuddyRunning
defaultMediaTypeForCurrentProcess
mappedBundleInfo
T@"AMSMappedBundleInfo",R,N,V_mappedBundleInfo
T@"NSData",&,N,V_auditTokenData
T@"NSURL",&,N,V_bundleURL
T@"NSString",&,N,V_executableName
T@"NSString",&,N,V_localizedName
B28@?0@8@"NSError"16B24
v16@?0@"AMSPromiseResult"8
Promise Timed Out
@"AMSPromise"24@?0@8@"NSError"16
com.apple.AppleMediaServices.AMSPromise.globalPromiseStorageAccessQueue
completionBlocks
T@"AMSPromiseCompletionBlocks",&,N,V_completionBlocks
promiseResult
T@"AMSPromiseResult",&,N,V_promiseResult
finished
TB,R,N,GisFinished
timedOut
TB,R,N,GisTimedOut
T@,R,N,V_result
isComplete
TB,N,V_isComplete
lock
T@"NSLock",&,N,V_lock
T@"AMSLazyPromise",R,N,V_promise
purchases
T@"NSMutableArray",R,N,V_purchases
purchaseMap
T@"NSMutableDictionary",R,N,V_purchaseMap
T@"NSMutableArray",R,N,V_results
{ key: %@ }
accountId
T@"NSNumber",C,N,V_accountId
additionalHeaders
T@"NSDictionary",C,N,V_additionalHeaders
T@"AMSBuyParams",R,N,V_buyParams
callerBundleId
T@"NSString",C,N,V_callerBundleId
T@"NSString",C,N,V_clientId
T@"AMSProcessInfo",C,N,V_clientInfo
ignoreRequirePasswordRestriction
TB,N,V_ignoreRequirePasswordRestriction
logUUID
T@"NSString",C,N,V_logUUID
ownerAccountId
T@"NSNumber",C,N,V_ownerAccountId
T@"NSDictionary",C,N,V_metricsOverlay
purchaseType
Tq,R,V_purchaseType
requiresAccount
TB,N,V_requiresAccount
T@"NSString",C,N,V_storefront
uniqueIdentifier
T@"NSNumber",R,N,V_uniqueIdentifier
userInitiated
TB,N,GisUserInitiated,V_userInitiated
useJSONContentType
TB,N,V_useJSONContentType
AMSPurchase
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/updateTouchIDSettings
{ logUUID: %@ accountId: %@ purchaseType: %@ purchaseId: %@ }
BuyProduct
BackgroundUpdate
Download
InAppBuy
Update
Unknown
T@"NSMutableDictionary",&,N,V_additionalHeaders
addKBSync
TB,N,V_addKBSync
T@"AMSBuyParams",&,N,V_buyParams
T@"AMSProcessInfo",R,N,V_clientInfo
T@"<AMSPurchaseDelegate>",&,N,V_delegate
T@"NSDictionary",&,N,V_dialog
T@"NSString",&,N,V_dialogId
TB,N,V_hasBeenAuthedForBuy
hasRetriedOriginalOwnerAccount
TB,N,V_hasRetriedOriginalOwnerAccount
T@"NSURL",&,N,V_paymentServicesURL
T@"AMSPurchase",R,N,V_purchase
appStoreEntitlements
newsEntitlements
activityEntitlements
musicEntitlements
tvEntitlements
iCloudEntitlements
cancel-purchase-batch
keybag
Purchase Cancelled
The dialog was cancelled
Purchase Failed
Server canceled the purchase
Purchase Dialog Failed
Not user initiated
Purchase delegate not observing callback
Purchase Authentication Failed
Purchase Engagement Failed
v32@?0@"NSString"8@"NSNumber"16^B24
com.apple.ams.purchasequeue.dispatch
Queue has vanished
v24@?0@"AMSPurchaseResult"8@"NSError"16
Purchase Batch Failed
Delegate method for authentications not found
Delegate method for dialogs not found
Delegate method for engagement not found
T@"NSMutableArray",&,N,V_batches
T@"AMSPurchaseQueueConfiguration",&,N,V_config
isSuspeneded
TB,N,V_isSuspeneded
T@"<AMSPurchaseResponseProtocol>",&,N,V_delegate
com.apple.PurchaseRequest
Purchase Encoder Failed
Invalid request
v24@?0@"AMSURLRequest"8@"NSError"16
afds
T@"AMSPurchaseInfo",R,N,V_purchaseInfo
purchaseRequestQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_purchaseRequestQueue
correlationID
T@"NSString",C,N,V_correlationID
T@"NSError",C,N,V_error
T@"AMSPurchase",C,N,V_purchase
T@"NSDictionary",C,N,V_responseDictionary
@"AMSPurchaseResult"16@?0^@8
Pre-authentication due to device restrictions around purchasing.
AMSPurchaseTask promptForAccount
source
code
Engagement presentation failed
Delegate does not respond: %@
Delegate does not respond to auth callback
Delegate does not respond to dialog callback
T@"<AMSPurchaseDelegate>",W,N
T@"<AMSPushHandlerDelegate>",W,N,V_delegate
userNotificationExtensionId
T@"NSString",&,N,V_userNotificationExtensionId
enabledActionTypes
T@"NSSet",&,N,V_enabledActionTypes
T@"<AMSPushHandlerContract>",R,N,V_bagContract
T@"<AMSPushHandlerDelegate>",W,N
configuration
T@"AMSPushConfiguration",R,N,V_configuration
badgeId
Failed To Badge
No delegate registered to provide consent
shouldSkipAccountCheck
event
com.apple.AMSFollowUpIdentifier.Billing
com.apple.AMSFollowUpIdentifier.HardwareOffer
clear
notification
alert
uuid
com.apple.ams+%@
com.apple.AppleMediaServices.notification
accountIdentifier
alertType
T@"NSString",R,N,V_logKey
payload
T@"NSDictionary",R,N,V_payload
@"AMSRatingsStoreFront"16@?0@"NSDictionary"8
ratingsStoreFronts
T@"NSArray",R,N,V_ratingsStoreFronts
AMSRatingsProviderMusicURL
AMSRatingsProviderVideoURL
@"AMSRatingsProviderResult"16@?0^@8
ratings
%@-%@.json
https://amp-api.videos.apple.com/v1/storefronts/%@?include=rating-systems
https://amp-api.music.apple.com/v1/storefronts/%@?include=rating-systems
TQ,R,N,V_mediaType
storeFront
T@"NSString",R,N,V_storeFront
attributes.defaultLanguageTag
attributes.supportedLanguageTags
relationships.rating-systems.data
@"AMSRatingSystem"16@?0@"NSDictionary"8
supportedLanguages
defaultLanguages
ratingSystems
defaultLanguage
T@"NSString",R,N,V_defaultLanguage
T@"NSArray",R,N,V_ratingSystems
storeFrontID
T@"NSString",R,N,V_storeFrontID
T@"NSArray",R,N,V_supportedLanguages
relationships.ratings.data
@"AMSContentRating"16@?0@"NSDictionary"8
contentRatings
T@"NSArray",R,N,V_contentRatings
ratingSystemID
T@"NSString",R,N,V_ratingSystemID
com.apple.springboard
SBParentalControlsEnabled
allowAccountModifications
eroticaAllowed
explicitContentAllowed
inAppPurchaseAllowed
maximumMediaRank
onDeviceDiagnosticsAllowed
parentalControlEnabled
TB,R,N,GisParentalControlEnabled
requirePasswordImmediately
AMSSetDemoAccountTask performTask
<%@: %p canMakeAccountActive = %@ | debugReason = %@ | ignoreAccountConversion = %@ | skipAuthentication = %@>
skipAuthentication
TB,N,V_skipAuthentication
No result found.
Completed promise without result.
v16@?0@"AMSURLAction"8
v16@?0@"<AMSSecurityServiceInterface>"8
AMSSigningSecurityService Error
Connection request was unresponsive
v24@?0@"<AMSSecurityServiceInterface>"8@"NSError"16
serviceBroker
T@"<AMSDServiceBrokerProtocol>",R,N,V_serviceBroker
@16@?0@"ACAccount"8
%@ can only operate on iTunes accounts.
Non-iTunes Account
T@"NSArray",&,N,V_accounts
AMSSnapshotBagExpiredValueAccessedNotification
@"AMSPromise"16@?0@"AMSSnapshotBag"8
creationData
T@"AMSBagFrozenDataSource",&,N,V_dataSource
creationDate
T@"NSDate",R,N,V_creationDate
Missing Required Parameter
One or more required parameters are missing.
ROLLBACK TRANSACTION
COMMIT TRANSACTION
i16@?0^B8
BEGIN DEFERRED TRANSACTION
currentError
T@"NSError",R,C,N
T@"AMSSQLiteConnectionOptions",R,C,N,V_options
T@"<AMSSQLiteConnectionDelegate>",W,N,V_delegate
lastChangeCount
Statement from a different connection
PRAGMA journal_mode=WAL
PRAGMA cache_size=%ld
databasePath
T@"NSString",C,N,V_databasePath
cacheSize
Tq,N,V_cacheSize
protectionType
T@"NSString",C,N,V_protectionType
readOnly
TB,N,GisReadOnly,V_readOnly
numberOfColumns
ROWID
+[%@ databaseTable] not implemented
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
SELECT 
 FROM 
 WHERE 
.ROWID = ?;
SELECT 1 FROM 
 =  ? LIMIT 1;
UPDATE 
 SET 
 = ?
 = ?;
INSERT OR REPLACE INTO 
) VALUES (?
[%public}@] Error: %@
DELETE FROM %@ WHERE %@ = ?;
T@"AMSSQLiteConnection",R,N,V_connection
persistentID
Tq,R,N,V_persistentID
existsInDatabase
AMSSQLiteErrorDomain
%@: %lld
databaseID
Tq,N,V_databaseID
propertyValues
T@"NSDictionary",R,C,N,V_propertyValues
externalPropertyValues
T@"NSDictionary",R,C,N,V_externalPropertyValues
property
T@"NSString",R,N,V_property
%@ %@ ?
 LIKE 
comparisonType
Tq,R,N,V_comparisonType
 NOT IN (
 IN (
negative
TB,R,N,GisNegative,V_negative
query
T@"AMSSQLiteQuery",R,N,V_query
queryProperty
T@"NSString",R,N,V_queryProperty
values
T@"NSArray",R,N,V_values
IS NULL
IS NOT NULL
matchesNull
TB,R,N,V_matchesNull
 AND 
 OR 
predicates
T@"NSArray",R,N,V_predicates
connectionPointer
Tr^v,R,N,V_connectionPointer
T@"NSString",R,C,N,V_SQL
v32@?0q8Q16^B24
CREATE TEMPORARY TABLE 
 AS 
v40@?0q8@"NSDictionary"16Q24^B32
T@"AMSSQLiteConnection",R
queryDescriptor
T@"AMSSQLiteQueryDescriptor",R
countOfEntities
Tq,R
DISTINCT 
 FROM %@
 ORDER BY 
 LIMIT ?
entityClass
T#,N,V_entityClass
memoryEntityClass
T#,N,V_memoryEntityClass
limitCount
Tq,N,V_limitCount
orderingClause
T@"NSString",C,N,V_orderingClause
orderingDirections
T@"NSArray",C,N,V_orderingDirections
orderingProperties
T@"NSArray",C,N,V_orderingProperties
returnsDistinctEntities
TB,N,V_returnsDistinctEntities
predicate
T@"AMSSQLitePredicate",C,N,V_predicate
COUNT
%@(%@)
v32@?0@"AMSSQLiteMemoryEntity"8Q16^B24
firstInt64Value
firstNumberValue
hasRows
PRAGMA table_info(%@);
PRAGMA user_version;
SELECT name FROM sqlite_master where name = '?'
PRAGMA user_version = %lld;
currentUserVersion
PINCodeTitle
PINCodeUrlSubtitle
PINCodeUrl
PINCodeSubtitle
PINCode
Divider
QRCodeTitle
QRCodeSubtitle
QRCodeUrl
PBCFUserNotificationTemplateType
PBCFUserNotificationTwoWaySignInTemplate
PBCFUserNotificationPINCodeTitle
PBCFUserNotificationPINCodeURLSubtitle
PBCFUserNotificationPINCodeURL
PBCFUserNotificationPINCodeSubtitle
PBCFUserNotificationPINCode
PBCFUserNotificationDividerText
PBCFUserNotificationQRCodeTitle
PBCFUserNotificationQRCodeSubtitle
PBCFUserNotificationQRCodeURL
T@"NSError",R,V_error
TB,R,V_success
sqlite3_stmt
T^{sqlite3_stmt=},R,N,V_statement
columnIndexByName
T@"NSDictionary",R,C,N
TB,R,N,GisReadOnly
Statement already finalized
autoRenewEnabled
expiration
familySubscription
freeTrialEligible
inAppAdamId
inAppVersion
offerId
inTrialPeriod
inOfferPeriod
purchaser
carrierErrorCode
carrierOperatorName
carrierPhoneNumber
carrierSessionId
carrierStatus
TB,N,V_autoRenewEnabled
T@"NSDate",&,N,V_expiration
TB,N,V_familySubscription
TB,N,V_freeTrialEligible
T@"NSNumber",&,N,V_inAppAdamId
T@"NSString",&,N,V_inAppVersion
T@"NSString",&,N,V_offerId
period
TQ,N,V_period
TB,N,V_purchaser
TI,N,V_source
TI,N,V_status
Tq,N,V_carrierErrorCode
T@"NSString",&,N,V_carrierOperatorName
T@"NSString",&,N,V_carrierPhoneNumber
T@"NSString",&,N,V_carrierSessionId
TI,N,V_carrierStatus
music-match
appAdamId
v32@?0@"NSString"8@"AMSSubscriptionEntitlement"16^B24
entitlements
T@"NSNumber",&,N,V_appAdamId
T@"NSNumber",&,N,V_appVersion
T@"NSDictionary",&,N,V_entitlements
T@"NSDictionary",&,N,V_serverResponse
ASD Subscription Failed
Platform not available
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
Cached Subscription Status Failed
Neither a result nor error returned
Reload Subscription Status Failed
v32@?0@"NSArray"8B16B20@"NSError"24
Entitlements Failure
Unhandled segment for mediaType: %ld
cachePolicy
Tq,N,V_cachePolicy
extendedCarrierCheck
TB,N,V_extendedCarrierCheck
Tq,N,V_mediaType
ASDSubscriptionEntitlements
/System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon
/System/Library/PrivateFrameworks/AppStoreDaemon.framework/Contents/MacOS/AppStoreDaemon
ICMusicSubscriptionStatusController
/System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud
/System/Library/PrivateFrameworks/iTunesCloud.framework/Contents/MacOS/iTunesCloud
ICStoreRequestContext
ICMusicSubscriptionStatusRequest
free
paid
always
sometimes
never
manageAccountUrl
paymentInformationUrl
purchaseHistoryUrl
showSubscriptionsUrl
@"AMSSyncPasswordSettingsResult"16@?0^@8
https://finance-app.itunes.apple.com/purchases
https://finance-app.itunes.apple.com/subscriptions/manage
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/accountSummary
Accounts
T@"<NSURLSessionDelegate><AMSURLProtocolDelegate>",R,W,N,V_delegate
freeSetting
TQ,R,N,V_freeSetting
paidSetting
TQ,R,N,V_paidSetting
System Dialog Task Failed
Unknown error occurred creating the note dictionary
Unable to create the system notification
System dialog task finished without a result
defaultButtonIndex
Tq,V_defaultButtonIndex
dismissOnHomeButton
TB,V_dismissOnHomeButton
dismissOnLock
TB,V_dismissOnLock
shouldDismissAfterUnlock
TB,V_shouldDismissAfterUnlock
shouldDisplayAsTopMost
TB,V_shouldDisplayAsTopMost
shouldPendInSetupIfNotAllowed
TB,V_shouldPendInSetupIfNotAllowed
displaysOnLockscreen
TB,V_displaysOnLockscreen
unlockActionButtonIndex
Tq,V_unlockActionButtonIndex
com.apple.AppleMediaServices.AMSTask.promise
com.apple.AppleMediaServices.AMSTaskCache.taskCache
com.apple.AppleMediaServices.%@
com.apple.AppleMediaServices.%@.performTask
taskCache
T@"NSMutableSet",R,N
taskCacheAccessQueue
performTaskQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_performTaskQueue
T@"AMSPromise",&,N,V_promise
promiseAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_promiseAccessQueue
TB,R,N,GisCancelled,V_cancelled
running
TB,R,N,GisRunning
runMode
Tq,N,V_runMode
com.apple.AMSThreadSafeDictionary.backingDictionary
backingDictionaryAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_backingDictionaryAccessQueue
allKeys
T@"NSArray",R,C
allValues
com.apple.AppleMediaServices.AMSThreadSafeObject
objectAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_objectAccessQueue
com.apple.AppleMediaServices.AMSThreadSafeSet.backingSet
backingSet
T@"NSMutableSet",&,N,V_backingSet
backingSetAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_backingSetAccessQueue
com.apple.AppleMediaServices.AMSUniqueExecutionQueue.completionCallbacks
com.apple.AppleMediaServices.AMSUniqueExecutionQueue.executeBlock
com.apple.AppleMediaServices.AMSUniqueExecutionQueue.executionPromise
completionCallbacksQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_completionCallbacksQueue
executeBlockQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executeBlockQueue
executionPromise
T@"AMSPromise",&,N,V_executionPromise
executionPromiseAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_executionPromiseAccessQueue
XCTestProbe
isTesting
runningUnitTests
TB,R,N,GisRunningUnitTests
v16@?0@"NSArray"8
Unknown Center
Unable to locate notification center for posting
v16@?0@"UNNotificationContent"8
Remove Not Implemented
T@"AMSURLSession",R,W,N,V_session
authkit-anisette
interruption
payment-sheet
reverse-push
verify-CVV
verify-carrier
Unable to redirect
Redirect URL not found
<%@ type=%ld reason=%@ redirectURL=%@ retryId=%@>
redirectURL
authenticateResult
T@"AMSAuthenticateResult",&,N,V_authenticateResult
dialogResult
T@"AMSDialogResult",&,N,V_dialogResult
updatedHeaders
T@"NSDictionary",&,N,V_updatedHeaders
Tq,R,N,V_actionType
T@"NSError",R,N,V_error
T@"NSURL",R,N,V_redirectURL
retryIdentifier
T@"NSString",&,N,V_retryIdentifier
commerce-ui-urls
url-patterns
v2-url-patterns
dynamic-url-patterns
No URL to match
There was no URL passed in for matching
Commerce UI URL not found
The parsed URL did not match a commerce UI URL pattern
Commerce UI URL Type Not Found
URL Type Not Found
AMSURLParser
CommerceUI Value Not Found
Bag value not found for key: %@
Commerce UI URL type not found
The parsed URL did not match a commerce UI default URL pattern
The parsed URL did not match a commerce UI dynamic URL pattern
The parsed URL did not match a commerce UI legacy URL pattern
com.apple.private.alloy.itunes.apsr
com.apple.AppleMediaServices.URLResponsePing
com.apple.AppleMediaServices.LoadURLMetrics
Mescal Verification Failed
Failed to verify mescal response header
Invalid Request
URL not trusted
daemon security
reverse push
T@"AMSURLSession",W,N
responsePingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_responsePingQueue
signingService
T@"AMSSigningSecurityService",R,N,V_signingService
T@"AMSURLSession",W,N,Vsession
T@"AMSURLRequestProperties",&,N,V_properties
com.apple.AMSURLRequestEncoder
URL Encoder Error
%@_%ld
br, gzip, deflate
Accept-Encoding
Request encoding failed
The request encoder finished with a nil request
CONNECT
DELETE
HEAD
PATCH
Request URL is nil
encodeCount
Tq,N,V_encodeCount
parentTask
T@"NSURLSessionTask",&,N,V_parentTask
additionalMetrics
T@"NSDictionary",&,N,V_additionalMetrics
anisetteType
Tq,N,V_anisetteType
compressRequestBody
TB,N,V_compressRequestBody
TB,N,V_disableResponseDecoding
dialogOptions
Tq,N,V_dialogOptions
TB,N,V_enableRemoteSecuritySigning
includeClientVersions
TB,N,V_includeClientVersions
T@"AMSKeychainOptions",&,N,V_keychainOptions
T@"NSString",&,N,V_logUUID
mescalType
Tq,N,V_mescalType
requestEncoding
Tq,N,V_requestEncoding
T@"<AMSResponseDecoding>",&,N,V_responseDecoder
shouldSetCookiesFromResponse
TB,N,V_shouldSetCookiesFromResponse
shouldSetStorefrontFromResponse
TB,N,V_shouldSetStorefrontFromResponse
urlKnownToBeTrusted
TB,N,V_urlKnownToBeTrusted
T@"<AMSURLBagContract>",&,N,V_bagContract
dataEncoding
disableLoadURLMetrics
TB,N,V_disableLoadURLMetrics
knownToBeTrusted
TB,N,V_knownToBeTrusted
maxRetryCount
Tq,N,V_maxRetryCount
remoteSecuritySigningEnabled
TB,N,V_remoteSecuritySigningEnabled
reversePushType
Tq,N,V_reversePushType
The response has an invalid status code
Invalid Content Type
The response has an invalid content type
allowedStatusCodes
T@"NSIndexSet",C,N,V_allowedStatusCodes
allowedContentTypes
T@"NSSet",C,N,V_allowedContentTypes
T@"NSData",&,N,V_data
T@"NSURLSessionTaskMetrics",R,N,V_taskMetrics
T@"NSURLResponse",&,N,V_response
responseCorrelationId
responseStatusCode
responseHeaders
defaultPolicy
T@"AMSURLSecurityPolicy",R
trustMode
Tq,N,V_trustMode
pinnedCertificates
T@"NSSet",&,N,V_pinnedCertificates
v16@?0q8
v24@?0q8@"NSURLCredential"16
v16@?0@"NSURLRequest"8
. Error: %@
Failed to create data task with invalid request
Request finished without a result.
AMSErrorDomainWasNil
Redirecting
Retrying
Reached max retry count
Task reached max retry count (%ld / %ld);
Retry Failed
Encountered a <nil> task while redirecting the request
Task Failed
Session has been invalidated
Request is nil
sharedAuthKitSession
T@"AKAppleIDSession",R,N
delegateProxy
T@"AMSURLDelegateProxy",&,N,V_delegateProxy
invalidated
TB,N,V_invalidated
securityPolicy
T@"AMSURLSecurityPolicy",&,N,V_securityPolicy
T@"NSURLSessionConfiguration",R,N,V_configuration
T@"<NSURLSessionDelegate><AMSURLProtocolDelegate>",W,N
delegateQueue
T@"NSOperationQueue",R,N,V_delegateQueue
protocolHandler
T@"<AMSURLHandling>",&,N,V_protocolHandler
T@"<AMSRequestEncoding>",&,N,V_requestEncoder
T@"NSURLSession",R,N,V_session
com.apple.AppleMediaServices.TaskQueue
com.apple.AppleMediaServices.AMSURLTaskInfo.task
sharedTaskStore
sharedTaskQueue
T@"NSMutableData",&,N,V_data
previousAuthorizationCredentialSource
TQ,N,V_previousAuthorizationCredentialSource
T@"NSURLSessionTaskMetrics",&,N,V_metrics
receivedAction
T@"AMSURLAction",&,N,V_receivedAction
retryCount
Tq,N,V_retryCount
retryIdentifiers
T@"NSMutableSet",&,N,V_retryIdentifiers
taskQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_taskQueue
T@"NSMutableDictionary",R,N,V_userInfo
buster
X-Apple-AbsintheAction
X-Apple-AbsintheSignature
X-Apple-AbsintheSrv
X-Apple-ADSID
Accept
Accept-Language
apple-timing-app
X-Apple-Application-Site
x-apple-aps-delivery-type
Cache-Control
X-Apple-NSURLCachePolicy
X-Apple-Canary-Id
X-Apple-Client-Application
X-Apple-Client-Versions
X-Apple-Connection-Type
Content-Encoding
Content-Type
Cookie
X-Apple-Jingle-Correlation-Key
Date
X-DSID
X-CACHE
Expires
X-Apple-GS-Token
X-Apple-GS-Token-Identifier
Guid
iCloud-DSID
X-Apple-Ignore-Account-Conversion
X-Apple-Issuing-Process
Location
X-MMe-Client-Info
X-Mme-Device-Id
X-Apple-Partner
X-Apple-Requesting-Process
X-Apple-Restrictions
Set-Cookie
X-Apple-Set-Cookie
X-Set-Apple-Store-Front
X-Apple-Set-User-Cookie
X-Apple-Store-Front
X-Apple-Tz
X-Apple-TID-Action
X-Apple-TID-Challenge
X-Apple-TID-Pkey
X-Apple-TID-Pkeyid
X-Apple-TID-Signature
X-Apple-TID-SignatureVersion
X-Apple-TID-State
User-Agent
X-Apple-ActionSignature
X-Apple-Allow-Auth-Types
X-Apple-AMD
X-Apple-AMD-Action
X-Apple-AMD-Data
X-Apple-AMD-M
X-Apple-MD
X-Apple-MD-Action
X-Apple-MD-Data
X-Apple-MD-M
X-Token
X-XDC
build/%@
%@/%@
model/%@
hwp/%@
watchOS/%@
iOS/%@
 AppleTV/%@
CFBundleVersion
AMS/%@
iPad
iPhone
iPod
iProd
(%@)
bundleInfo
T@"AMSMappedBundleInfo",R,N,V_bundleInfo
T@"AMSProcessInfo",R,N,V_processInfo
com.apple.news
_del
_delAll
thread
tapUrl
_logKey
_url
ams_
User Notification Cancelled
Cancel action selected
User Notification Failure
Action not found
Unable to parse the notification response
v16@?0@"UNNotificationSettings"8
AMSUserNotifications
UserNotificationImageCache
@"NSDictionary"20@?0@"AMSUserNotificationAction"8B16
yyyy-MM-dd'T'HH:mm:ssZ
anonymizeMetrics
TB,N,V_anonymizeMetrics
intent
Tq,N,V_intent
categoryIdentifier
T@"NSString",&,N,V_categoryIdentifier
shouldSuppressDefaultAction
TB,N,V_shouldSuppressDefaultAction
threadIdentifier
T@"NSString",&,N,V_threadIdentifier
artworkUrl
T@"NSURL",&,N,V_artworkUrl
videoUrl
T@"NSURL",&,N,V_videoUrl
T@"NSArray",&,N,V_buttonActions
centerBundleIdentifier
T@"NSString",&,N,V_centerBundleIdentifier
T@"AMSUserNotificationAction",&,N,V_defaultAction
explicitContent
TB,N,V_explicitContent
T@"NSDictionary",&,N,V_metricsEvent
scheduledTime
T@"NSDate",&,N,V_scheduledTime
subsections
T@"NSSet",&,N,V_subsections
T@"NSString",&,N,V_subtitle
_AMSDefaultURL
_AMSIdentifier
_AMSMetrics
_AMSRequestBody
_AMSRequestHeaders
_AMSRequestMethod
_AMSRequestURL
_AMSStyle
_AMSTitle
un_ActionOptions
defaultURL
T@"NSURL",&,N,V_defaultURL
T@"NSURLRequest",&,N,V_request
Invalid parameters. center:%@ badgeId:%@
Failed to badge
Badge id already exists
Failed to unbadge
Badge id not found
B16@?0@"NSMutableSet"8
strategy
T@"<AMSUserNotificationStrategy>",R,N,V_strategy
xp_amp_notifications
errorDescription
postedSuccessfully
displayCriteria
alertSetting
alertStyle
authorizationStatus
badgeSetting
carPlaySetting
criticalAlertSetting
displayScheduledTime
explicitEnabled
groupingSetting
lockScreenSetting
notificationCenterSetting
providesAppNotificationSettings
showPreviewsSetting
soundSetting
explicit
clean
badgeRequest
longpress
gestureType
navigate
targetType
notificationId
Settings
Notifications
actionContext
button
none
banner
denied
authorized
provisional
notDetermined
default
whenAuthenticated
notSupported
kJSONKeyIdentifier
kJSONKeyType
AMSXDDevice Error
Invalid JSON for device
JSONDictionary
Tq,N,V_type
kJSONKeyDestination
kJSONKeyExpirationInterval
kJSONKeyIsReply
kJSONKeyLogKey
kJSONKeyMessageID
kJSONKeyObject
kJSONKeyObjectClassName
AMSXDMessage Error
Failed to decode JSON dictionary: Either object or objectClassName is nil. Class name: %@
kJSONKeyOrigin
kJSONKeyObjectPurpose
kJSONKeyReceiptDate
[AMSXDMessage purpose:%ld; id:%@; logKey:%@; reply:%d; msgID:%@; expInt: %lf; received:%@]
Invalid JSON for message: %@
objectClassName
T@"NSString",&,N,V_objectClassName
isReply
TB,N,V_isReply
messageID
T@"NSString",&,N,V_messageID
receiptDate
T@"NSDate",&,N,V_receiptDate
T@"AMSXDDevice",&,N,V_destination
expirationInterval
Td,N,V_expirationInterval
T@"<NSObject><NSSecureCoding>",&,N,V_object
origin
T@"AMSXDDevice",&,N,V_origin
Tq,N,V_purpose
messageData
-[AMSXDProtoMessage writeTo:]
/Library/Caches/com.apple.xbs/Sources/AppleMediaServices_Sim/AppleMediaServices-3.2.8/Generated/AMSXDProtoMessage.m
nil != self->_messageData
T@"NSData",&,N,V_messageData
hasLogKey
<%@: %p>
  %@
v32@?0@"NSArray"8Q16^B24
You cannot return nil from the block.
/System/Library/PrivateFrameworks/AppleMediaServices.framework
/System/Applications/Music.app
ams_AppleMediaServicesBundle
T@"NSBundle",R,N
ams_MusicBundle
Failed to decrypt data. status = %d
Data Encryption
The encryption key isn't valid. Data encryption will fail. length = %lu, requiredLength = %lu
Failed to encrypt data. status = %d
com.apple.AppleMediaServices.AESKeyGeneration
Failed to fetch an AMSDataProtectionClass encryption/decryption key. error = %d
Failed to generate IV data. status = %d
AMS Class C Encryption Key
ams_compressedData
ams_decompressedData
ams_hexAddressDescription
ams_nvramDescription
ams_SHA1
ams_message
ams_title
ams_underlyingError
ams_userCancelledError
TB,R,N,Gams_isUserCancelledError
itspod
<NSHTTPCookie: %p {
  name = %@,
  domain = %@,
  path = %@,
  expires = %@,
  isSecure = %@,
  value = %@,
ams_cookieValidForBag
TB,R,N,Gams_isCookieValidForBag
ams_deleted
TB,R,N,Gams_isDeleted
ams_expired
TB,R,N,Gams_isExpired
ams_actionData
ams_actionDataV1
ams_actionDataV1_5
ams_actionName
ams_actionNameV1
ams_actionNameV1_5
 %@ = {
  %@,
  %@ = %@,
ams_JSONClasses
ams_PLISTClasses
%%appleId%%
%%APPLE_ID%%
[/b]
[br/]
[/i]
Helvetica-Bold
Helvetica-Italic
 %s + %llu
 (%s:%u)
%-3d %-30s
0x%0*llx%s%s
ams_symbolicatedCallStackSymbols
/Library/Caches/com.apple.AppleMediaServices
itms-news
itms-gc
its-music
itms-newss
itms-gcs
its-musics
itms-podcastss
B16@?0@"NSURLQueryItem"8
ams_parameters
ams_cachesDirectory
ams_engagementDirectory
@"NSURLQueryItem"24@?0@8@16
Malloc Failure
Could not allocate %zu bytes to read HTTPBodyStream
StreamReadError
An error occurred while reading HTTPBodyStream (%ld)
ams_requestIsBagLoad
NSURLRequestReloadIgnoringCacheData
NSURLRequestReloadIgnoringLocalAndRemoteCacheData
NSURLRequestReturnCacheDataElseLoad
NSURLRequestReloadRevalidatingCacheData
NSURLRequestReturnCacheDataDontLoad
NSURLRequestUseProtocolCachePolicy
com.apple.gamecenter
GameCenter
application/x-apple-plist
application/data
text/html
@"<NSCopying>"16@?0@"NSHTTPCookie"8
Invalid Query Parameters
Query parameters must be dictionary format
max-age
ams_expirationInterval
ams_headers
ams_statusCode
com.apple.nsurlstorage.extension-cache
com.apple.AMS.ClearNSURLCache
%{public}@: [%{public}@] Using the demo password.
%{public}@: [%{public}@] The demo account is missing a raw password.
%{public}@: Security level check failed to find IDMS account
%{public}@ [%{public}@] Someone is attempting to set mergedPrivacyAcknowledgement on a non-local account.
%{public}@: [%{public}@] Setting the demo account's raw password.
%{public}@: The account has no value for an account flag. We'll return the default value. accountFlag = %{public}@ | account = %{public}@
%{public}@: An account flag was stored with an invalid value. account = %{public}@ | flag = %{public}@ | value = %{public}@ | value.class = %{public}@
%{public}@: Someone is trying to modify a read-only account flag. account = %{public}@ | flag = %{public}@
%{public}@: Someone is trying to set an account flag with an invalid value. account = %{public}@ | flag = %{public}@ value.class = %{public}@
%{public}@: We failed to decrypt the original account flags. Refusing to add new flags. account = %{public}@ | error = %{public}@
%{public}@: [%{public}@] %{public}@ cannot set active on local account.
%{public}@: [%{public}@] Marking an account as %@ use for AKAppleIDServiceStore. account = %{public}@
%{public}@: [%{public}@] Unable to mark the account as not in use. It has no altDSID or DSID.
%{public}@: [%{public}@] Failed to set cookies on an account. The given AMSURLResult does not contain a NSHTTPURLResponse. account = %{public}@ | result = %{public}@
%{public}@: [%{public}@] Failed to set global cookies. The given AMSURLResult does not contain a NSHTTPURLResponse. result = %{public}@
%{public}@: [%{public}@] Decrypting an account property. key = %{public}@ | dataProtectionClass = %ld
%{public}@: [%{public}@] Failed to decrypt an account property. key = %{public}@ | value = %{public}@ | value.class = %{public}@
%{public}@: [%{public}@] Failed to decrypt account property. key = %{public}@ | error = %{public}@
%{public}@: [%{public}@] Failed to unarchive decrypted account property. key = %{public}@ | error = %{public}@
%{public}@: [%{public}@] An account property was stored as the wrong type. key = %{public}@ | actualClass = %{public}@ | expectedClasses = %{public}@
%{public}@: [%{public}@] Someone attempted to store an account property as the wrong type. key = %{public}@ | expectedClass = %{public}@ | actualClass = %{public}@
%{public}@: [%{public}@] Encrypting an account property. key = %{public}@ | dataProtectionClass = %ld
%{public}@: [%{public}@] Failed to archive an account property in order to encrypt it. key = %{public}@ | error = %{public}@
%{public}@: [%{public}@] Failed to encrypt an account property in order to encrypt it. key = %{public}@ | error = %{public}@
%{public}@: [%{public}@] Someone attempted to set an account property to its existing value. key = %{public}@
%{public}@: Failed to fetch the iTunes accounts. error = %{public}@
%{public}@: Unit tests are trying to access real account data.
%{public}@: [%{public}@] Failed to create/fetch the local account. error = %{public}@
%{public}@ [%{public}@] Someone is attempting to save a nil account. account = %{public}@
%{public}@ [%{public}@] Someone is attempting to save a new account instead of using AMSAuthenticateTask. account = %{public}@
%{public}@: [%{public}@] Saving a new account. options = %ld
%{public}@ [%{public}@] Someone attempted to save an unmodified account. account = %{public}@
%{public}@: [%{public}@] Deleting a secure token from the keychain for %{public}@.
%{public}@: [%{public}@] Adding a new secure token to keychain for %{public}@.
%{public}@: [%{public}@] Updating an existing secure token in keychain for %{public}@.
%{public}@: [%{public}@] Failed to set the global cookies. url = %{public}@ | error = %{public}@
%{public}@: [%{public}@] Failed to set the user cookies. url = %{public}@ | error = %{public}@
%{public}@: Failed to fetch the cached account. error = %{public}@
%{public}@: Failed to find a corresponding account. accountTypeIdentifier = %{public}@ | account = %{public}@
%{public}@: [%{public}@] Failed to save an account. account = %{public}@ | error = %{public}@
%{public}@: [%{public}@] We don't have a secure token stored for %{public}@.
%{public}@: [%{public}@] Failed to fetch the secure token (X-Token) for %{public}@. error = %d
%{public}@: [%{public}@] Failed to convert a media type to a store client identifier. mediaType = %{public}@
%{public}@: [%{public}@] Handling reprovision action
%{public}@: [%{public}@] Skipping absinthe (bag)
%{public}@: [%{public}@] Criteria matches, but no data to sign
%{public}@: [%{public}@] Skipping absinthe
%{public}@: [%{public}@] Provisioning session
[%{public}@] Running in accountsd.
%{public}@: [%{public}@] Failed to fetch the local account.
[%{public}@] [%{public}@] Received an ACAccountStoreDidChangeNotification.
[%{public}@] [%{public}@] Ignoring an ACAccountStoreDidChangeNotification. accountType = %{public}@
[%{public}@] [%{public}@] Received an ACAccountStoreDidChangeNotification without a valid ACAccountIdentifierKey. identifier = %{public}@
[%{public}@] [%{public}@] Ignoring a change account. account = %{public}@
[%{public}@] [%{public}@] Notifying observers of a changed account. changedAccount = %{public}@
[%{public}@] [%{public}@] The observable responds to all account changes.
[%{public}@] [%{public}@] The observable matches the changed account.
[%{public}@] [%{public}@] The observable matches the changed account type.
%{public}@: [%{public}@] %{public}@ was passed a nil media type. Returning a ACAccountStore that isn't associated with a media type.
%{public}@: [%{public}@] Creating a new ACAccountStore for a media type. mediaType = %{public}@
%{public}@: [%{public}@] Running AMSAcknowledgePrivacyTask. privacyIdentifiers = %{public}@
%{public}@: [%{public}@] The privacy identifier has an invalid content version. Refusing to acknowledge it. privacyIdentifier = %{public}@
%{public}@: [%{public}@] We have an account. Merging the privacy acknowledgement into it. account = %{public}@
%{public}@: [%{public}@] Determining if privacy acknowledgement is needed. privacyIdentifier = %{public}@
%{public}@: [%{public}@] Privacy acknowledgement is not needed because AMSDefaults.disablePrivacyAcknowledgement is true.
%{public}@: [%{public}@] No account provided, attempting to use the local account. privacyIdentifier = %{public}@
%{public}@: [%{public}@] Privacy acknowledgement is needed because we failed to get an account.
%{public}@: [%{public}@] Privacy acknowledgement is needed. acknowledgedVersion = %{public}@ | currentVersion = %{public}@
%{public}@: [%{public}@] Privacy acknowledgement is not needed. acknowledgedVersion = %{public}@ | currentVersion = %{public}@
%{public}@: [%{public}@] Previous acknowledgement will not be fetched because AMSDefaults.disablePrivacyAcknowledgement is true.
%{public}@: [%{public}@] No Previous acknowledgement because we failed to get an account.
%{public}@: [%{public}@] Previous Privacy acknowledgement found. acknowledgedVersion = %{public}@
%{public}@: [%{public}@] No Previous Privacy acknowledgement found.
%{public}@: [%{public}@] Handling anisette action name: %{public}@ type: %ld
%{public}@: [%{public}@] Retrying machine data proivsioning
%{public}@: [%{public}@] Retrying machine data sync
%{public}@: [%{public}@] Performing provisioning. type: %ld
%{public}@: [%{public}@] Provisioning failed. Error = %{public}@
%{public}@: [%{public}@] Provisioning succeeded.
%{public}@: [%{public}@] Starting sync with type: %ld account: %{public}@
%{public}@: [%{public}@] Synchronize failed. (state: %@) %{public}@
%{public}@: [%{public}@] Synchronize succeeded. (state: %@)
%{public}@: [%{public}@] GS-Token lookup failed for no GS token
%{public}@: [%{public}@] Silent enrollment not supported
%{public}@: [%{public}@] Failed to find active iCloud account
%{public}@: [%{public}@] Attestation did not delete keys: %{public}@
%{public}@: [%{public}@] Did not find certificates in keychain, generating new certifcates: %{public}@
%{public}@: [%{public}@] Certificate chain lookup and/or generation failed with error: %{public}@
%{public}@: [%{public}@] Certificate chain attestation failed with error: %{public}@
%{public}@: [%{public}@] Legacy attestation failed with error: %{public}@
%{public}@: [%{public}@] Failed to generate primary attestation with error: %{public}@
%{public}@: [%{public}@] Extended attestation failed with error: %{public}@
%{public}@: [%{public}@] Failed to create attestation plist
%{public}@: [%{public}@] Cannot create cert-based primary attestation with %{public}@ certs in chain.
%{public}@: [%{public}@] Cannot create cert-based extended attestation with %{public}@ certs in chain.
%{public}@: [%{public}@] Cannot create legacy-based primary attestation with %{public}@ elements in reponse.
%{public}@: [%{public}@] Cannot create legacy-based extended attestation with %{public}@ elements in reponse.
%{public}@: [%{public}@] Create cert chain failed with error: %{public}@
AMSAuthenticateOptions: [%{public}@] Failed to unarchive the client info. error = %{public}@
%{public}@: [%{public}@] Failed to archive the client info. error = %{public}@
%{public}@: [%{public}@] Failed to encode AKDevice. Proxied authentication will fail.
%{public}@: [%{public}@] Performing an iTunes authentication. altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | options = %{public}@
%{public}@: [%{public}@] Generating a password.
%{public}@: [%{public}@] Removing the account's raw password to force an interactive authentication.
%{public}@: [%{public}@] Successfully generated a password. Performing the authentication.
%{public}@: [%{public}@] Failed to generate a password. Performing the authentication in order to attempt proxy authentication.
%{public}@: [%{public}@] Successfully authenticated the account.
%{public}@: [%{public}@] The authentication failed. error = %{public}@
%{public}@: [%{public}@] Looking for an existing account. altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@
%{public}@: [%{public}@] Using the device's demo account. username = %{public}@
%{public}@: [%{public}@] Failed to find an existing account. Unable to procceed with the authentication because account modifications are not allowed.
%{public}@: [%{public}@] Failed to find an existing account. We'll create a new one instead.
%{public}@: [%{public}@] The device doesn't have an active account for %{public}@. We'll make the account active if we successfully authenticate it.
%{public}@: [%{public}@] We would normally make the account active, but canMakeAccountActive is set to false.
%{public}@: [%{public}@] Attempting to authenticate the account by reusing its password.
%{public}@: [%{public}@] Failed to authenticate the account by reusing its password. error = %{public}@
%{public}@Falling back to sub profile bag
%{public}@: [%{public}@] The authentication's error contained an encoded AMSDialogRequest. Decoding it.
%{public}@: [%{public}@] Failed to decode the AMSDialogRequest. error = %{public}@
%{public}@: [%{public}@] Sending dialog request to delegate.
%{public}@: [%{public}@] The account's credential's source is unknown.
%{public}@: [%{public}@] The account doesn't have a password.
%{public}@: [%{public}@] Found a secondary password.
%{public}@: [%{public}@] The caller provided an altDSID, and the account didn't have one.
%{public}@: [%{public}@] The caller provided a DSID, and the account didn't have one.
%{public}@: [%{public}@] The caller provided an updated username. oldUsername = %{public}@ | newUsername = %{public}@
%{public}@: [%{public}@] We have a password (PET) we can use.
%{public}@: [%{public}@] We have a raw password we can use.
%{public}@: [%{public}@] AuthKit gave us an updated altDSID. oldAltDSID = %{public}@ | newAltDSID = %{public}@
%{public}@: [%{public}@] AuthKit gave us an updated DSID. oldDSID = %{public}@ | newDSID = %{public}@
%{public}@: [%{public}@] AuthKit gave us an updated username. oldUsername = %{public}@ | newUsername = %{public}@
%{public}@: [%{public}@] AuthKit gave us updated identifiers. We'll attempt to find an existing account that matches the new identifiers.
%{public}@: [%{public}@] The new identifiers are for the account we're already working with.
%{public}@: [%{public}@] The new identifiers are for a different existing account. existingAccount = %{public}@
%{public}@: [%{public}@] Performing an AuthKit authentication. account = %{public}@ | account.ams_password = %{public}@ | account.ams_rawPassword = %{public}@ | options = %{public}@
%{public}@: [%{public}@] An authentication was performed without a debugReason. client = %{public}@
%{public}@: [%{public}@] The AuthKit authentication succeeded. result = %{public}@
%{public}@: [%{public}@] The AuthKit authentication failed. error = %{public}@
%{public}@: [%{public}@] AMSAuthKitUpdateTaskDelegate is deprecated and no longer supported. Please remove your usage of it.
%{public}@: [%{public}@] Overriding authenticationType with AKAppleIDAuthenticationTypeSilentPreferred. Performing a remote proxy authentication.
%{public}@: [%{public}@] Overriding authenticationType with AKAppleIDAuthenticationTypeSilent. The current process cannot perform a background prompt.
%{public}@: [%{public}@] Prompted for credentials. (%d) %{public}@
%{public}@: [%{public}@] The account has no raw password.
%{public}@: [%{public}@] Found a secondary raw password.
%{public}@: [%{public}@] Returning cached automatic download kinds. account = %{public}@
%{public}@: [%{public}@] Syncing automatic download kinds. account = %{public}@
%{public}@: [%{public}@] Fetched automatic download kinds. account = %{public}@ | enabled media kinds = %{public}@
%{public}@: [%{public}@] Enabled media kinds are the same as our currently set values, skipping network request.
%{public}@: [%{public}@] Syncing automatic download kinds. account = %{public}@ | enabled media kinds = %{public}@
%{public}@: [%{public}@] Successfully registered automaic media types.
%{public}@: [%{public}@] The server responded with invalid status: %ld
%{public}@: [%{public}@] Releasing task: %{public}@
%{public}@: [%{public}@] The bag changed. Posting a notification.
%{public}@: [%{public}@] The bag was invalidated. Posting a notification.
%{public}@: [%{public}@] Someone is attempting to create a snapshot before registering a bag key set.
%{public}@: [%{public}@] Attempting to create a snapshot. originalBag = %{public}@
AMSBag: [%{public}@] Someone called -[AMSBag createSnapshotWithCompletion:] but didn't hold onto a reference to the original AMSBag.
%{public}@: [%{public}@] Failed to load the bag. Unable to create a snapshot. error = %{public}@
%{public}@: [%{public}@] Successfully created the snapshot.
%{public}@: [%{public}@] Failed to create the snapshot. error = %{public}@
AMSBag: Someone called -[AMSBag registerBagKeySet:forProfile:profileVersion] but 'strongSelf' is nil.
%{public}@: Removing all registered bag key sets.
%{public}@: [%{public}@] An account changed.
%{public}@: [%{public}@] The backing data for the bag expired. profile = %{public}@ | profileVersion = %{public}@
%{public}@: [%{public}@] The storefront changed. Clearing the bag from the in-memory cache. oldStorefront = %{public}@ | newStorefront = %{public}@
%{public}@: [%{public}@] Returning active failure
%{public}@: [%{public}@] Awaiting bag load
%{public}@: [%{public}@] Loading bag from the network. %{public}@
%{public}@: [%{public}@] Notification received to invalidate cache
AMSBagNetworkDataSource: Someone is loading the bag but not holding onto the data source object.
%{public}@: [%{public}@] The bag data we got from the server is different than what we have.
%{public}@: [%{public}@] There's no active account or the active account doesn't have a storefront. Falling back to the local account. activeAccount = %{public}@ | mediaType = %{public}@
%{public}@: [%{public}@] Overriding the following keys: %{public}@
%{public}@: [%{public}@] Failed to successfully load the bag data. error = %{public}@
%{public}@: [%{public}@] Successfully loaded the bag data.
%{public}@: [%{public}@] Attempting to load the bag again due to urlCookies. originalCookies = %{public}@ | newCookies = %{public}@
%{public}@: [%{public}@] Attempting to load the bag again because the response had a x-set-apple-store-front header. originalStorefront = %{public}@ | newStorefront = %{public}@
%{public}@: [%{public}@] Unable to set a storefront suffix because we have no bundle identifier.
%{public}@: [%{public}@] Updating a storefront suffix. originalStorefontSuffix = %{public}@ | newStorefrontSuffix = %{public}@ | bundleID = %{public}@
%{public}@:%{public}@ Failed to fetch value: %{public}@. %{public}@ %{public}@
%{public}@: Transform (%ld) block returned nil promise for %{public}@. Resolving with previous value.
%{public}@: Transform (%ld) failed for %{public}@. %{public}@
%{public}@: [%{public}@] Biometric identities not supported on platform
%{public}@: [%{public}@] Error deleting biometrics keys: %{public}@
%{public}@: [%{public}@] Error unsetting biometrics state: %{public}@
%{public}@: [%{public}@] ACL version evaluation failed for no ACL
%{public}@: [%{public}@] Failed to determine version for ACL
%{public}@: [%{public}@] Error disabling biometrics keys: %{public}@
%{public}@: [%{public}@] Error deleting primary keys: %{public}@
%{public}@: [%{public}@] Error deleting extended keys: %{public}@
%{public}@: [%{public}@] Received touch ID action: %{public}@
%{public}@: [%{public}@] LocalAuth action evaluation failed for no ACL
%{public}@: [%{public}@] Evaluating ACL constraints for LocalAuth action: %{public}@
%{public}@: [%{public}@] PSD2 Passcode ACL not supported on platform
%{public}@: [%{public}@] Evaluated extended action %{public}@ with result: %{public}@
%{public}@: [%{public}@] LocalAuth action evaluation failed for unrecognized action type: %{public}@
%{public}@: [%{public}@] Passcode ACLs not supported on platform
%{public}@: [%{public}@] Failed to determine ACL version for LocalAuth action type: %{public}@
%{public}@: [%{public}@] Error deleting keys: %{public}@
%{public}@: [%{public}@] Failed to fetch biometric availability: %{public}@
%{public}@: [%{public}@] Biometric identity map invalid
%{public}@: [%{public}@] Starting signature operation
%{public}@: [%{public}@] Signature failed with error: %{public}@
%{public}@: [%{public}@] Re-attestation failed. error: %{public}@
%{public}@: [%{public}@] Signature operation completed successfully
%{public}@: [%{public}@] Signature operation completed with error: %{public}@
%{public}@: [%{public}@] Starting token update. DSID: %{public}@
%{public}@: [%{public}@] Completed with error: %{public}@
%{public}@: [%{public}@] Completed successfully
%{public}@: [%{public}@] Sending request to amsaccountsd
%{public}@: [%{public}@] Handling authenticate request. Request: %{public}@
%{public}@: [%{public}@] Delegate handled authenticate request. Request: %{public}@
%{public}@: [%{public}@] Handling dialog request. Request: %{public}@
%{public}@: [%{public}@] Delegate handled dialog request. Request: %{public}@
%{public}@: [%{public}@] Parsing buyParams string: %@
%{public}@: [%{public}@] Metrics post failed for unsupported platform
%{public}@: [%{public}@] Platform not supported
%{public}@: [%{public}@] ACL copy failed with error: %{public}@
%{public}@: [%{public}@] [auto-enrollment] Removing auto-enrollment identifier
%{public}@: [%{public}@] Skipping DPAN update check for auto-enrollment requirement
%{public}@: [%{public}@] Finished auto-enrollment, performing DPAN update check
%{public}@: [%{public}@] Clearing DPAN cache for auto-enrollment, server-driven instruction
%{public}@: [%{public}@] Updating cached DPAN identifier for auto-enrollment
%{public}@: [%{public}@] Did not finish auto-enrollment, leaving DPAN cache unchanged
%{public}@: [%{public}@] Skipping DPAN update check for auto-enrollment with state: %{public}@ %{public}@
%{public}@: [%{public}@] [apple-pay-classic] No bag key found: %{public}@, error: %{public}@
%{public}@: [%{public}@] [auto-enrollment] Platform not supported
%{public}@: [%{public}@] [auto-enrollment] No bag key found: %{public}@, error: %{public}@
%{public}@ [%{public}@] [auto-enrollment] Sampling with bag values: %{public}@, %{public}@ and result: %{public}@
%{public}@: [%{public}@] [auto-enrollment] Failed to obtain current DPAN identifier during update operation with error: %{public}@
%{public}@: [%{public}@] [auto-enrollment] Updating extended enrollment identifier with value: %{public}@
%{public}@: [%{public}@] [apple-pay-classic] Platform not supported
%{public}@: [%{public}@] Performing can write billing info with passTypeIdentifier: %{public}@, serialNumber: %{public}@
%{public}@: [%{public}@] Failed to load bag
%{public}@: [%{public}@] Can write billing info failed for feature not enabled
%{public}@: [%{public}@] Can write billing info failed for no active iTunes account
%{public}@: [%{public}@] Can write billing info failed for no active iCloud account
%{public}@: [%{public}@] Can write billing info failed for no combined account
%{public}@: [%{public}@] Found card type: %{public}@
%{public}@: [%{public}@] Can write billing info skipping URL decoration
%{public}@: [%{public}@] Can write billing info failed to encode request with error: %{public}@
%{public}@: [%{public}@] Can write billing info will attach store front header manually
%{public}@: [%{public}@] Can write billing info failed with network error: %{public}@
%{public}@: [%{public}@] Can write billing info completed with response: %{public}@
%{public}@: [%{public}@] Can write billing info failed to deserialize response
%{public}@: [%{public}@] Payment session failed with error: %{public}@
%{public}@: [%{public}@] Silent-enrollment payment verification failed with error: %{public}@
%{public}@: [%{public}@] Starting cert task
%{public}@: [%{public}@] Presenting command line alert using request: %{public}@
AMSCommerceService: Failed to create the proxy object (sync). error = %{public}@
AMSCommerceService: Failed to create the proxy object (async). error = %{public}@
AMSCommerceService: Initializing commerce xpc connection
AMSCommerceService: The connection was interrupted.
AMSCommerceService: The connection was invalidated.
%{public}@: deallocated
%{public}@: [%{public}@] Error connecting (async) to daemon. %{public}@
%{public}@: [%{public}@] Error connecting (sync) to daemon. %{public}@
%{public}@: [%{public}@] Connection interrupted.
%{public}@: [%{public}@] Connection could not be established (invalidated)
%{public}@: [%{public}@] Initializing XPC connection
%{public}@: Failed to decode data. Error = %{public}@
%{public}@: [%{public}@] Starting AppleMediaServices data migration. scenario = %lu | previousVersion = %{public}@ | currentVersion = %{public}@
%{public}@: [%{public}@] Finished AppleMediaServices data migration. executionTime = %f
%{public}@: Unable to create lock file
%{public}@: Unable to acquire lock
%{public}@: [%{public}@] Failed to setup the demo account. error = %{public}@
AMSDevice+Offers: Failed to find device offers of type: %@
AMSDevice+Offers: [%{public}@] Posting all follow ups for account: %{public}@
AMSDevice+Offers: [%{public}@] Offers count - Total: %{public}@, iCloud: %{public}@, Apple Music: %{public}@
AMSDevice+Offers: [%{public}@] Posting unified followup for iCloud and Apple Music
AMSDevice+Offers: [%{public}@] Found %{public}@ iCloud offers, posting follow-up
AMSDevice+Offers: [%{public}@] Found %{public}@ AppleMusic offers, posting follow-up
AMSDevice+Offers: [%{public}@] No offers were found for which to post follow-up(s)
AMSDevice+Offers: [%{public}@] Follow ups not available on this platform
AMSDevice+Offers: Attempting to register companion serial number: %@
AMSDevice+Offers: Failed to register companion serial number for nil serial number
AMSDevice+Offers: Found device offer eligibility dictionary
AMSDevice+Offers: Failed to find companion serial number array, creating new instance
AMSDevice+Offers: Failed to find device offer eligibility dictionary, creating new instance
AMSDevice+Offers: Device offer registration could not be performed - no account
AMSDevice+Offers: [%{public}@] Failed to tear down all follow ups while removing device offer: %{public}@ for account: %{public}@
AMSDevice+Offers: [%{public}@] Failed to find device offer: %{public}@ for account: %{public}@
AMSDevice+Offers: [%{public}@] Failed to find any offers to remove while removing device offer: %{public}@ for account: %{public}@
AMSDevice+Offers: [%{public}@] Posting device offer followups for account: %{public}@
AMSDevice+Offers: [%{public}@] Device is eligible, saving offers
AMSDevice+Offers: [%{public}@] Device is eligible but no offers were found
AMSDevice+Offers: [%{public}@] Device is not eligible, removing any persisted device offers
AMSDevice+Offer: [%{public}@] Posting offers changed notification
AMSDevice+Offers: Will decorate request parameters with serial number
AMSDevice+Offers: Decorating request parameters with serial numbers: %@
AMSDevice+Offers: Internal deviceOffer serial number override found: %@
AMSDevice+Offers: Decorating request parameters with serial number: %@
AMSDevice+Offers: Skipping decoration of request parameters with serial number
AMSDevice+Offers: Skipping decoration of request parameters with serial number for no request parameters
AMSDevice+Offers: No account specified for offer check
AMSDevice+Offers: Determining setup device offer eligibility for iCloud account: %@, iTunes account: %@, isEligible: %@, isCombinedAccount: %@, hasOffers: %@
AMSDevice+Offers: Attempting to perform silent auth.
AMSDevice+Offers: Silent auth attempt failed for no account
AMSDevice+Offers: Register Serial: Silent auth did succeed with result: %{public}@
AMSDevice+Offers: Register Serial: Silent auth failed with error: %{public}@
%@: [%@] Biometric state read not supported on platform
%@: [%@] Biometric state write not supported on platform
%{public}@: [%@] Platform does not support Secure Element
AMSDevice: Failed to obtain MAC address for unsupported platform.
AMSDevice: Failed to obtain MAC address data for unsupported platform.
%{public}@: [%{public}@] Returning a cached phone number. phoneNumber = %{public}@
%{public}@: [%{public}@] Fetching the device's phone number.
%{public}@: [%{public}@] The device's phone number changed.
%{public}@: [%{public}@] Failed to fetch the device's phone number. Unable to create a CoreTelephonyClient instance.
%{public}@: [%{public}@] Failed to fetch the device's phone number. Unable to get the active CoreTelephony contexts. error = %{public}@
%{public}@: [%{public}@] Failed to fetch the device's phone number. Unable to get the preferred context's identifier.
%{public}@: [%{public}@] Failed to fetch the device's phone number. Unable to get the preferred context.
%{public}@: [%{public}@] Failed to fetch the device's phone number. phoneNumberInfo = %@ || error = %{public}@
%{public}@: [%{public}@] Successfully fetched the device's phone number. phoneNumber = %{public}@
AMSDevice: Failed to obtain serial number for unknown device platform.
AMSDevice: Failed to obtain UUID for unsupported platform.
%{public}@: [%{public}@] Failed to receive dialogs
%{public}@: [%{public}@] Received dialogs
%{public}@: [%{public}@] Clearing dialog with identifier: %{public}@
%{public}@: [%{public}@] Invalid dialog for clear
%{public}@: [%{public}@] Clear bridge dialog message sent!
%{public}@: [%{public}@] Clear bridge dialog message NOT sent! Error: %{public}@
%{public}@: [%{public}@] Sending dialog with identifier: %{public}@
%{public}@: [%{public}@] Invalid dialog for send
%{public}@: [%{public}@] Bridge dialog message sent!
%{public}@: [%{public}@] Bridge dialog message NOT sent! Error: %{public}@
%{public}@: [%{public}@] Daemon received clear for: %{public}@
%{public}@: [%{public}@] Daemon received message: %{public}@
%{public}@: [%{public}@] Daemon received reply: %{public}@
%{public}@: Daemon did update devices
%{public}@: Sending update to delegate
%{public}@: No adamId found in initializer dictionary, setting to 0
%{public}@: [%{public}@] %{public}@ skipping. Not valid for erase installs.
%{public}@: [%{public}@] %{public}@ skipping. We already migrated.
%{public}@: [%{public}@] %{public}@ skipping. No account is signed in during upgrade.
%{public}@: [%{public}@] %{public}@ started.
%{public}@: [%{public}@] %{public}@ Error running the device offer registration. error = %{public}@.
%{public}@: [%{public}@] %{public}@ finished. executionTime = %f
%{public}@: [%{public}@] Starting device offer registration task. account = %{public}@
%{public}@: [%{public}@] Device offers retrieved from server: %{public}@
%{public}@: [%{public}@] Lightweight check only flag has been set.
%{public}@: [%{public}@] Offer identifiers were specified for request: %{public}@
%{public}@: [%{public}@] No offer identifiers were specified for the request.
%@: [%@] Identity map check completed with result: %{public}@, error: %{public}@
%{public}@: [%{public}@] Attempting to pre-authenticate purchase for invalid biometric identity map
%{public}@: [%{public}@] Failed to determine biometric type
%{public}@: [%{public}@] Identity map authentication failed with error: %{public}@
%{public}@: [%{public}@] Returned cached response (%.3f), type: %{public}@
%{public}@: [%{public}@] Enqueueing event for type: %{public}@, dest: [%{public}@] %{public}@
%{public}@: [%{public}@] Enqueue finished with error (%.3f) %{public}@
%{public}@: [%{public}@] Enqueue finished (%.3f) request: %{public}@, actions: %ld
%{public}@: [%{public}@] Starting sync. %{public}@
%{public}@: [%{public}@] Sync finished with error (%.3f) %{public}@
%{public}@: [%{public}@] Sync finished (%.3f)
%{public}@: Failing %ld connections
%{public}@: [%{public}@] Scheduling initial sync
%{public}@: [%{public}@] Whitelist missing filter: %@
%{public}@: [%{public}@] Error creating directory. %{public}@
%{public}@: [%{public}@] Failing to validate client data, invalid format.
%{public}@: [%{public}@] Failing to serialize client data. %{public}@
%{public}@: [%{public}@] Removing existing clientData
%{public}@: [%{public}@] Failed to remove clientData file. %{public}@
%{public}@: [%{public}@] No client data
%{public}@: [%{public}@] Failed to lookup client data. %{public}@
%{public}@: [%{public}@] Failed to decode client data. %{public}@
%{public}@: Client data changed
%{public}@: [%{public}@] Failed to retrieve remote object. %{public}@
%{public}@: [%{public}@] Performing AMSLoadFamilyCircleTask
%{public}@: [%{public}@] AMSLoadFamilyCircleTask failed because there's no account.
%{public}@: [%{public}@] Failed to load the family info because the network call failed. error = %{public}@
%{public}@: [%{public}@] Failed to load the family info because we were unable to process the server response.
%{public}@: [%{public}@] Returning cached family info.
%{public}@: [%{public}@] We failed to load the family info, and we have no cached family info to return.
%{public}@: [%{public}@] AMSLoadFamilyCircleTask failed because the bag didn't give us the URL. error = %{public}@
%{public}@: [%{public}@] Unable to generate the path in order to cache a family info lookup.
%{public}@: [%{public}@] Unable to cache a family info lookup because the given account has no DSID. account = %{public}@
%{public}@: [%{public}@] Failed to serialize the family info. error = %{public}@
%{public}@: [%{public}@] Failed to write the serialized family info to disk. error = %{public}@
%{public}@: [%{public}@] Unable to load cached family info because the account has no DSID. account = %{public}@
%{public}@: [%{public}@] Our cached family info isn't for the given account.
%{public}@: [%{public}@] We have cached family info for the account, but it's too old to return.
%{public}@: [%{public}@] Unable to generate the path in order to load cached family info.
%{public}@: [%{public}@] Failed to deserialize the cached family info. error = %{public}@
AMSFamilyMember: Received an invalid server response for AMSFamilyMember. serverResponse = %@
%{public}@: Unable to generate the ITFE cookie. The features aren't stored in a dictionary.
%{public}@: An ITFE key or value is of the wrong type. key = %{public}@ | value = %{public}@
%{public}@: [%{public}@] Performing creditDisplay response action
%{public}@: [%{public}@] Performing Goto response action
%{public}@: [%{public}@] Action opening standard URL
%{public}@: [%{public}@] Action opening app URL
%{public}@: [%{public}@] Overriding the authentication type. originalAuthenticationType = %lu | newAuthenticationType = %lu
%{public}@: [%{public}@] Authentication finished (success: %d)
%{public}@: [%{public}@] Authentication returned a dialog.
%{public}@: [%{public}@] Performing authentication
%{public}@: [%{public}@] Calling legacy delegate for authentication handling
%{public}@: [%{public}@] Updating account on URL task
%{public}@: [%{public}@] Failed to determine the credential source from authentication.
%{public}@: [%{public}@] Attempting to initialize a finance dialog without a dictionary
%{public}@: [%{public}@] Encountered a redundant authorization dialog. dialogDictionary = %{public}@
%{public}@: [%{public}@] Dialogs were suppressed by the caller
%{public}@: [%{public}@] Failed to determine if is commerce URL. %{public}@
%{public}@: [%{public}@] Failed to present dialog (no delegate). %{public}@
%{public}@: [%{public}@] Failed to present dialog (no request). %{public}@
%{public}@: [%{public}@] Presenting dialog: %{public}@
%{public}@: [%{public}@] Calling legacy delegate for dialog handling
%{public}@: [%{public}@] Dialog succeeded.
%{public}@: [%{public}@] Dialog failed. %{public}@
%{public}@: [%{public}@] Sending dialog over IDS
%{public}@: [%{public}@] Failed to send IDS dialog. %{public}@
%{public}@: [%{public}@] Presenting instructional dialog
%{public}@: [%{public}@] Attempting inline engagement.
%{public}@: [%{public}@] Failed to present engagement (no delegate). %{public}@
%{public}@: [%{public}@] Failed to present engagement (no URL). %{public}@
%{public}@: [%{public}@] Engagement succeeded.
%{public}@: [%{public}@] Engagement failed. %{public}@
%{public}@: [%{public}@] Received updated buy params from engagement request
%{public}@: [%{public}@] Payment sheet missing biometrics. Running auth instead.
%{public}@Unable to continue the purchase.
%{public}@: [%{public}@] JSON serialization of payment session failed with error: %{public}@
%{public}@: [%{public}@] Skipping dual-action buy for no payment session
%{public}@: [%{public}@] Skipping dual-action buy for no tid-dialog
%{public}@: [%{public}@] Failed to generate biometrics request. Error: %{public}@
%{public}@: [%{public}@] Unexpected response type: %{public}@
%{public}@: [%{public}@] Unexpected inner response type: %{public}@
%{public}@: [%{public}@] Requestor key not found, attempting to infer requestor from title enumeration.
%{public}@: [%{public}@] No requestor identified for title: %{public}@
%{public}@: [%{public}@] No requestor identified, title type is not enumeration
%{public}@: [%{public}@] Unknown verify purchase type: %ld
%{public}@: [%{public}@] Performing verification with type: %ld
%{public}@: [%{public}@] Failed to present dialog. Error: %{public}@
%{public}@: [%{public}@] Max attempts reached
%{public}@: [%{public}@] Handling CVV dialog result: %{public}@
%{public}@: [%{public}@] Failed to send new code. %{public}@
%{public}@: [%{public}@] No code provided, cancelling verification
%{public}@: [%{public}@] User entered incorrect SMS code. (failureType: %@)
%{public}@: [%{public}@] Carrier verification failed. %{public}@
%{public}@: [%{public}@] Carrier verification succeeded
%{public}@: [%{public}@] Invalid verification code
%{public}@: [%{public}@] CVV verification failed. %{public}@
%{public}@: [%{public}@] Verification succeeded
%{public}@: [%{public}@] Dialog cancelled
%{public}@: Follow up clear finished without clearing anything
%{public}@: [%{public}@] Performing request
%{public}@: [%{public}@] Opening url: %@
%{public}@: Failed to fetch pending followups for determining active status. Error: %{public}@
%{public}@: [%{public}@] Metrics event enqueued (impression)
%{public}@: [%{public}@] Unable to fetch a cached fraud score. We don't have a purchase identifier. purchase = %{public}@
%{public}@: [%{public}@] Unable to cache fraud score. We don't have a purchase identifier. purchase = %{public}@
%{public}@: [%{public}@] Successfully generated the fraud score. fraudScore = %{public}@
%{public}@: [%{public}@] Handling dialog result: %{public}@
%{public}@: [%{public}@] Error completing the dialog result request: %{public}@
%{public}@: [%{public}@] Completed dialog result request successfully
%{public}@: [%{public}@] Error creating request: %{public}@
%{public}@: [%{public}@] Starting ask permission request: %@
%{public}@: [%{public}@] Opening standard URL: %@
%{public}@: [%{public}@] Starting QR code dialog action
%{public}@: [%{public}@] Error presenting QR code dialog: %{public}@
%{public}@: [%{public}@] QR code dialog presented: %@
HARData: %@ %d/%d %@
%{public}@: Failed to create the directory to write HAR files into. error = %{public}@
%{public}@: Failed to write a HAR object to disk. error = %{public}@
%{public}@: [%{public}@] Failed to determine a method's type. methodName = %{public}@ | methodType = %{public}s
%{public}@: [%{public}@] Failed to create a method implementation for a block. methodName = %{public}@
%{public}@: [%{public}@] Starting keep alive: %{public}@-%ld
%{public}@: [%{public}@] Releasing
%{public}@: [%{public}@] Assertion released
%{public}@: [%{public}@] Still alive. (a: %d, t: %d)
%{public}@: [%{public}@] Assertion invalidated
%{public}@: Assertion expiration notice received
%{public}@: [%{public}@] Failed to acquire assertion
AMSPurchaseDRM failed to intialize fairplay context. Error: %{public}@
%{public}@: Destroying context
%{public}@: Creating context
%{public}@: [%{public}@] Fetching cert for label: %{public}@
%{public}@: [%{public}@] Legacy StoreServices certificate private key lookup only supported on iOS
%{public}@: [%{public}@] Legacy StoreServices private key lookup only supported on iOS
%{public}@: [%{public}@] Legacy StoreServices public key lookup only supported on iOS
%{public}@: [%{public}@] Attempting to lookup public key for options: %@
%{public}@: [%{public}@] Did not find public key for options: %@, error: %{public}@
%{public}@: [%{public}@] Attempting second lookup for public key for options: %@
%{public}@: [%{public}@] Cert not found for label: %{public}@
%{public}@: [%{public}@] Key (cert) not found for label: %{public}@
%{public}@: [%{public}@] Failed to delete certs. Error: %{public}@
%{public}@: [%{public}@] Failed to deserialize TID continue headers. %{public}@
%{public}@: [%{public}@] Found %ld TID headers. %ld
%{public}@: [%{public}@] Stashing TID headers
%{public}@: [%{public}@] Failed to serialize TID continue headers
%{public}@: [%{public}@] Error occurred serializing TID continue headers. %{public}@
%{public}@: [%{public}@] Failed to stash TID continue headers. Status: %{public}@
%{public}@: [%{public}@] Key (legacy) not found for label: %{public}@
%{public}@: [%@] WARNING - Property options.generateKeys is ignored at this layer: %{public}@
%{public}@: [%{public}@] Attestation failed with error: %{public}@
%{public}@: [%{public}@] Failed to generate certificate keychain labels for keychain options: %{public}@ %{public}@
%{public}@: [%{public}@] Failed to generate legacy keychain label for keychain options: %{public}@ %{public}@
%{public}@: [%{public}@] ACL lookup failed for no ACL associated with key
%{public}@: [%{public}@] ACL lookup failed to fetch key attributes
%{public}@: [%{public}@] ACL lookup failed for no private key: %{public}@
%{public}@: [%{public}@] Creating access control reference with options: %@
%{public}@: [%{public}@] Failed to create access controll reference with error: %{public}@
%{public}@: [%{public}@] Failed to create access control reference
%{public}@: [%{public}@] Successfully configured ACL constraints
%{public}@: [%{public}@] Failed to create ACL constraints
%{public}@: [%{public}@] Extended ACL is not supported on watchOS
%{public}@: [%{public}@] Failed to generate certificate privateKey keychain labels. options: %{public}@ %{public}@
%{public}@: [%{public}@] Did not find private key with options: %@, status: %{public}@
%{public}@: [%{public}@] Did not find private key with options: %@
%{public}@: [%{public}@] Failed to copy public key representation
%{public}@: [%{public}@] Successfully copied public key
%{public}@: [%{public}@] Failed to delete resumption headers. %{public}@
%{public}@: [%{public}@] Failed to generate access control reference
%{public}@: [%{public}@] Failed to sepecify access control constraints for options: %@
%{public}@: [%{public}@] Configured keypair ACL constraints for options: %@
%{public}@: [%{public}@]: Failed to create keypair
%{public}@: [%{public}@] Keypair generated for options: %@
%{public}@: [%{public}@] ** WARNING ** Failing attestation for incorrect attestation style: %{public}@
%{public}@: [%{public}@] Did not find private key for options: %@, error: %{public}@
%{public}@: [%{public}@] Attempting second lookup for private key for options: %@
%{public}@: [%{public}@] Failed to generate private key for options: %@
%{public}@: [%{public}@] Generating attestation for options: %@
%{public}@: [%{public}@] Starting lookup request
%{public}@: [%{public}@] AMSURLRequestEncoder failed for no bag or bag contract
%{public}@: [%{public}@] NSURL lookup in bag failed for no bag or bag contract
%{public}@: [%{public}@] NSURLSessionConfiguration failed for no bag or bag contract
%{public}@: [%{public}@] Lookup failed. Error = %{public}@
%{public}@: [%{public}@] Error occurred during JS sign: %{public}@
%@: %@ resulted in a cache miss.
%@: Cache is full. The oldest object will be evicted.
%{public}@: %{public}@ -> %{public}@ (%{public}@) = %{public}@
%{public}@: Couldn't find %{public}@ store version (iOS), falling back to hardcoded
%{public}@: [%{public}@] Parsing marketing items
%{public}@: [%{public}@] Parsing failed. Will%{public}@ fall back to first item. %{public}@
%{public}@: [%{public}@] Marketing item selected
%{public}@: [%{public}@] No marketing item selected
%{public}@: [%{public}@] Fetching marketing items for serviceType: %{public}@ 
placement: %{public}@ 
context: %{public}@
%{public}@: [%{public}@] Using local stubs
%{public}@: [%{public}@] Error generating media request: %{public}@
%{public}@: [%{public}@] Retrieving language tag from bag failed, using fallback: %{public}@
%{public}@: [%{public}@] Error retrieving realm mappings.
%{public}@: [%{public}@] %{public}@
%{public}@: [%{public}@] We weren't provided a media token. Error code: %ld.
%{public}@: [%{public}@] We did not receive a media token. We will continue regardless. %{public}@
%{public}@: [%{public}@] We received an invalid media token. Will continue regardless.
%{public}@: [%{public}@] We received a valid media token.
%{public}@: [%{public}@] Starting media task
%{public}@: [%{public}@] Unknown device platform
%{public}@: [%{public}@] Overriding media token. Identifier: %{public}@
%{public}@: [%{public}@] Token request throttled. Returning cached media token if available.
%{public}@: [%{public}@] Token request encoding failed. Returning cached media token if available. Error: %{public}@
%{public}@: [%{public}@] Token result error. Returning cached media token if available. Error: %{public}@
%{public}@: [%{public}@] Token result could not be deserialized. Returning cached media token if available. Error: %{public}@
%{public}@: Media token string not found in response.
%{public}@: Media token string was not split to 3 parts. Media token string: %@
%{public}@: Payload string could not be corrected. Media token string: %@
%{public}@: Payload data could not be encoded from media token string. Media token string: %@
%{public}@: Dictionary could not be decoded from payload data. Error: %{public}@. Media token string: %@
%{public}@: Time intervals could not be retrieved from date dictionary. Media token string: %@
%{public}@: [%{public}@] Failed to fetch media token data from keychain. Status: %{public}@
%{public}@: [%{public}@] Failed to unarchive media token data. Error: %{public}@
%{public}@: [%{public}@] Retrieved media token data from keychain
%{public}@: [%{public}@] Failed to archive media token. Error: %{public}@
%{public}@: [%{public}@] Failed to save media token data to keychain. Status: %{public}@
%{public}@: Failed to save media token to keychain, it will be refetched for every request (performance concern)
%{public}@: [%{public}@] Saved media token data to keychain.
%{public}@: [%{public}@] Failed to remove media token data from keychain. Status: %{public}@
%{public}@: [%{public}@] Removed media token data from keychain
%{public}@: [%{public}@] Received media token changed notification.
%{public}@: [%{public}@] Failed to fetch media token data from user defaults
%{public}@: [%{public}@] Retrieved media token data from user defaults
%{public}@: [%{public}@] Saved media token data to user defaults.
%{public}@: The memory pressure status changed. old = %{public}@ | new = %{public}@
%{public}@: Failed to prime the connection. Error = %{public}@
%{public}@: Failed to mescal sign data. Error = %{public}@
%{public}@: [%{public}@] Mescal disabled
%{public}@: [%{public}@] Skipping mescal - unabled to locate data to sign
%{public}@: [%{public}@] Failed to mescal sign request. Error = %{public}@
%{public}@: Failed to verify the task. Error = %{public}@
%{public}@: [%{public}@] Could not fetch signed actions. Skipping signature verification: %{public}@
%{public}@: [%{public}@] Failed to exchange data. Error = %{public}@
%{public}@: [%{public}@] Failed to prime data. Error = %{public}@
%{public}@: [%{public}@] Failed to signing data. Error = %{public}@
%{public}@: [%{public}@] Failed to verify primed signature. Error = %{public}@
%{public}@: [%{public}@] Failed to verifying signature. Error = %{public}@
%{public}@: [%{public}@] Failed to prime the connection. Error = %{public}@
%{public}@: [%{public}@] SAP signing failed. Attempting a retry..
%{public}@: [%{public}@] Failed to sign data. Error = %{public}@
%{public}@: [%{public}@] SAP signature verification failed. Attempting a retry..
%{public}@: [%{public}@] Failed to verify data. Error = %{public}@
%{public}@: Failed to determine cache path
%{public}@: Failed to remove existing mescal cert. Error: %{public}@
%{public}@: Failed to cache mescal cert. Error: %{public}@
%{public}@: Removed mescal cert
%{public}@: Saved mescal cert with expiration: %ld
%{public}@: Removing expired cert data cache
%{public}@: Loaded cert data
%{public}@: Unable to find cert data. Error: %{public}@
%{public}@: [%{public}@] Failed to establish context. Error = %{public}@
%{public}@: [%{public}@] Failed to load certificate. Error = %{public}@
%{public}@: [%public}@] Failed to post exchange data. Error = %{public}@
%{public}@: [%{public}@] Verify prime finished: %{public}@
%{public}@: [%{public}@] Failed to verify prime response. Error = %{public}@
%{public}@: [%{public}@] Dropping event due to D&U. Topic: %{public}@
%{public}@: [%{public}@] Dropping event due to failed recording of event flagged for appAnalytics recording. Topic: %{public}@
%{public}@: [%{public}@] Enqueueing event (%{public}@) topic: %{public}@ id: %{public}@
%{public}@: [%{public}@] Flushing events for container: %{public}@ prevLogKey: %{public}@
%{public}@: [%{public}@] Flushing disabled
%{public}@: [%{public}@] Failed to flush internal metrics. Error: %{public}@
%{public}@: [%{public}@] Flush failed. count: %@ error: %{public}@
%{public}@: [%{public}@] Successfully flushed %@ events
%{public}@: [%{public}@] Failed to schedule interval (no bag). 
%{public}@: [%{public}@] Failed to schedule interval (no interval)
%{public}@: [%{public}@] Flush scheduled. (style: %ld, time: %.3f)
%{public}@: [%{public}@] Scheduled flush fired
%{public}@: [%{public}@] Skipping flush trigger
%{public}@: [%{public}@] Scheduled flush unable to run while app is suspended
%{public}@: Fatal Error: Failed to fetch dbPath
%{public}@: Fatal Error: Failed to create the database schema
%{public}@: Failed to close the database connection
%{public}@: Failed to count events. Error = %{public}@
%{public}@: Failed to drop events. Error = %{public}@
%{public}@: Failed to query events. Error = %{public}@
%{public}@: Failed to enumerate events. Error = %{public}@
%{public}@: Unable to locate account for dsid: %{public}@ topic: %{public}@
%{public}@: No topic found on event
%{public}@: Failed to serialize event fields to JSON. Error: %{public}@
%{public}@: Failed to finalize statement. Error = %{public}@
%{public}@: Inserting events failed without an error
%{public}@: Failed to insert events. Error = %{public}@
%{public}@: Failed to lock events. Error = %{public}@
%{public}@: Failed to query identifiers. %{public}@
%{public}@: Failed to enumerate identifiers. %{public}@
%{public}@: Failed to reset database after corruption. This is bad!
%{public}@: Incremental vacuum failed. Error = %{public}@
%{public}@: [%{public}@] Failed to count events. Error = %{public}@
%{public}@: [%{public}@] Failed to initialize metrics database
%{public}@: [%{public}@] Failed to insert events. Error = %{public}@
%{public}@: [%{public}@] Failed to drop events. Error = %{public}@
%{public}@: [%{public}@] Error unlocking event. Error = %{public}@
%{public}@: Failed to update database scheme. Success = NO
%{public}@: Failed to update database scheme. User version did not change
%{public}@: Database location = %{public}@
%{public}@: Failed to remove database. Unable to determine container URL.
%{public}@: Failed to remove database. Error = %{public}@
%{public}@: Error excluding nil URL from backup
%{public}@: Error excluding %{public}@ from backup %{public}@
%{public}@: Failed to create metrics directory. Error = %{public}@
%{public}@: [%{public}@] Attempting to set invalid topic from dictionary: %{public}@
%{public}@: [%{public}@] [FILE A RADAR] Invalid metrics property. Property must be JSON serializable. Topic: %{public}@ Key: %{public}@ Property: %{public}@
%{public}@: [%{public}@] Override blacklisted eventType: %{public}@ (topic: %{public}@)
%{public}@: [%{public}@] Blacklisted eventType: %{public}@ (topic: %{public}@)
%{public}@: [%{public}@] Metrics sampling key: '%{public}@' filters: '%{public}@'
%{public}@: Cancelling task
%{public}@: [%{public}@] Dropping event with no reporting URL. Topic: %{public}@
%{public}@: [%{public}@] Failed to fetch next batch. Error = %{public}@
%{public}@: [%{public}@] Posting batch. (anon:%d)
%{public}@: [%{public}@] Failed to generate mescal signature. Error = %{public}@
%{public}@: [%{public}@] Failed to cleanup identifiers. %{public}@
%{public}@: [%{public}@] Failed to fetch identifier (dsid: %@, client: %{public}@) %{public}@
%{public}@: [%{public}@] Failed to insert identifier (dsid: %@, client: %{public}@) %{public}@
%{public}@: [%{public}@] Failed to fetch identifier after insert (dsid: %@, client: %{public}@) %{public}@
%{public}@: [%{public}@] Failed to remove identifiers for account: %@. %{public}@
%{public}@: [%{public}@] Received cached response
%{public}@: Failed to fetch performance metrics from bag
%{public}@: Metrics network inquiry error occurred. Error: %@
%{public}@: Failed to load metrics dictionary from bag
%{public}@: Failed to load metrics dictionary. Error = %{public}@
%{public}@: Overriding request: %{public}@
%{public}@: [%{public}@] Initializing amsaccountsd XPC connection.
%{public}@: [%{public}@] The connection was interrupted.
%{public}@: [%{public}@] The connection was invalidated.
%{public}@: The network quality inquiry failed to initialize.
%{public}@: The network quality inquiry is not available.
%{public}@ [%{public}@] Unable to sync notification settings without an account.
%{public}@ [%{public}@] Unable to sync notification settings without a local account.
%{public}@: [%{public}@] Fetching Granular Push Notification Settings. account = %{public}@ | identifier = %{public}@
%{public}@: [%{public}@] Updating Granular Push Notification Setting. account = %{public}@ | identifier = %{public}@ | items = %{public}@
%{public}@: [%{public}@] Someone is attempting to send a completion from a completed AMSObservable.
%{public}@: [%{public}@] Someone is attempting to send a failure from a completed AMSObservable.
%{public}@: [%{public}@] Someone is attempting to send a result from a completed AMSObservable.
%{public}@: [%{public}@] There's at least one observer. Sending the result.
%{public}@: [%{public}@] The are no observers.
%{public}@: [%{public}@] The are no observers. Queuing the result.
%{public}@: [%{public}@] Someone is attempting to add an observer to a completed AMSObservable.
%{public}@: [%{public}@] Someone is attempting to add an observer to a AMSObservable it's already observing.
%{public}@: [%{public}@] There are pending results. Sending them now that we have an observer.
%{public}@: [%{public}@] Someone is attempting to remove an observer from a completed observable.
%{public}@: [%{public}@] Someone is attempting to remove an observer from an observable it isn't subscribed to.
%{public}@: [%{public}@] Someone is attempting to remove all observers from a completed observable.
%{public}@: [%{public}@] Opening URL: %{public}@
%{public}@: [%{public}@] URL opened successfully.
%{public}@: [%{public}@] URL failed to open.
%{public}@: [%{public}@] Failed to open URL. %{public}@
%{public}@: [%{public}@] Failed to find feature with error: %{public}@
%{public}@: [%{public}@] Candidate payment setup feature state: %{public}@
%{public}@: [%{public}@] Unknown biometric match state: %{public}@
%{public}@: [%{public}@] Unknown user action: %{public}@
%{public}@: [%{public}@] Failed to obtain or format account name
%{public}@: [%{public}@] Failed to load salable icon image
%{public}@: [%{public}@] Warning - Array out of bounds for index: %{public}@, label: %{public}@
%{public}@: [%{public}@] Fetching server-supplied inline image at URL: %{public}@
%{public}@: [%{public}@] Generating client-supplied inline image with rating value: %{public}@
%{public}@: [%{public}@] Fetching client-supplied inline image with rating type: %{public}@, name: %{public}@
%{public}@: [%{public}@] Failed to fetch rating image for unknown rating image type
%{public}@: [%{public}@] Failed to finalized inline rating image
%{public}@: [%{public}@] Failed to load flexList icon image
%{public}@: [%{public}@] Rendering Retina image for tag: %{public}@, scale: %{public}@ tint:%{public}@
%{public}@: [%{public}@] Rendering non-Retina image for tag: %{public}@
%{public}@: [%{public}@] Skipping attributed list
%{public}@: [%{public}@] Image Source: Failed to bundle
%{public}@: [%{public}@] Image Source: Failed to find path for resource: %{public}@
%{public}@: [%{public}@] Image Source: Failed image count: %{public}@
%{public}@: [%{public}@] Image Source: Failed to create image source for resource: %{public}@
%{public}@: [%{public}@] Image Source: Failed to create image for no resource name
%{public}@: [%{public}@] Loading image resource at: %{public}@
%{public}@: [%{public}@] Failed to load image resource. Error: %{public}@
%{public}@: [%{public}@] Warning - Attempting to mask image with an unsupported color model: %{public}@
%{public}@: [%{public}@] Starting payment sheet task
%{public}@: [%{public}@] Skipping challenge signing delay for no TouchID
%{public}@: [%{public}@] Failed to parse challenge signing delay with error: %{public}@
%{public}@: [%{public}@] Recording metrics for a successful biometric authorization that is neither Signature- nor PET-based
%{public}@: [%{public}@] Presenting payment sheet
%{public}@: [%{public}@] Payment sheet has presented
%{public}@: [%{public}@] Authorizing payment...
%{public}@: [%{public}@] Payment authorized with PET from AuthKit
%{public}@: [%{public}@] Payment authorized without authentication (confirmation only)
%{public}@: [%{public}@] Signing biometrics challenge
%{public}@: [%{public}@] Payment authorization cancelled before challenge was signed
%{public}@: [%{public}@] Payment authorizated with signed biometrics challenge
%{public}@: [%{public}@] Received biometric payment token
%{public}@: [%{public}@] Skipping biometric payment token
%{public}@: [%{public}@] Payment authorization failed with error, but an error already exists: %{public}@
%{public}@: [%{public}@] Payment sheet did finish
%{public}@: [%{public}@] Recording metrics for event: %{public}@
Entitlement fetch failed. Value is not a number/boolean
%{public}@: Setting the default media type for the process. defaultMediaType = %{public}@
Entitlement fetch failed. Value is not a string
%{public}@: Entitlement fetch failed with error: %{public}@
%{public}@Failed to fetch process info. %{public}@
%{public}@: Someone is finishing a promise with both a result and an error. This will result in both the success and error blocks being called. result = %{public}@ error = %{public}@
%{public}@: Someone is finishing a promise with neither a result nor an error. This will result in neither the success nor the error blocks being called.
%{public}@: Someone is attempting to finish or cancel a finished AMSPromise.
AMSPurchaseQueue: [%{public}@] Finished purchase with error: %{public}@
AMSPurchaseQueue: [%{public}@] Finished batch item purchase with error: %{public}@
AMSPurchaseQueue: [%{public}@] Finished purchase with result: %{public}@
AMSPurchaseQueue: [%{public}@] Finished promise with results: %{public}@
%{public}@: [%{public}@] Initializing purchaseInfo with iTunes account: %@
%{public}@: [%{public}@] Initializing purchaseInfo with backing iTunes account for iCloud account: %@
%{public}@: [%{public}@] Initializing purchaseInfo with iCloud account: %@
%{public}@: [%{public}@] Initializing purchaseInfo with accountId: %@
%{public}@: [%{public}@] Initializing purchaseInfo with active iTunes account: %@
%{public}@: [%{public}@] Purchase account has changed to: %{public}@
%{public}@: [%{public}@] Failed to reconfigure purchases request. Error: %{public}@
%{public}@: [%{public}@] Failed to fetch the APS sampling percentage. The task has no buy params.
%{public}@: [%{public}@] Failed to fetch the APS sampling percentage. The buy params have no product type. buyParams = %{public}@
%{public}@: [%{public}@] Failed to fetch the APS sampling percentage from the bag. error = %{public}@
%{public}@: [%{public}@] Failed to fetch the APS sampling percentage. The task's product type is not an allowed product type. productType = %{public}@ | allowedProductTypes = %{public}@
AMSPurchaseProtocolHandler: [%{public}@] Updating buy params from selected action
AMSPurchaseProtocolHandler: [%{public}@] Updating buy params from any action
AMSPurchaseProtocolHandler: [%{public}@] Appending payment token to buyParams
AMSPurchaseProtocolHandler: [%{public}@] Falling back to owner account
AMSPurchaseProtocolHandler: [%{public}@] Error importing keybag data for account: %{public}@ error: %{public}@
AMSPurchaseQueue: [%{public}@] Ignoring suspend request due to queue being empty
AMSPurchaseQueue: [%{public}@] Suspending purchase queue
AMSPurchaseQueue: [%{public}@] Resuming purchase queue
AMSPurchaseQueue: Not handling next purchase due to queue being suspended
AMSPurchaseQueue: Queue empty
AMSPurchaseQueue: [%{public}@] Processing purchase
AMSPurchaseRequestEncoder: [%{public}@] Adding a fraud score to the request. fraudScore = %{public}@
AMSPurchaseRequestEncoder: [%{public}@] No fraud score is available.
AMSPurchaseRequestEncoder: [%{public}@] 'hasBeenAuthedForBuy' flag set: Attaching to buyParams
%{public}@: [%{public}@] Starting purchase task
%{public}@: [%{public}@] 'hasBeenAuthedForBuy' flag set: Pre-Flight Authentication
%{public}@: [%{public}@] 'hasBeenAuthedForBuy' flag set: Device Restrictions
%{public}@: [%{public}@] Purchase completed with error: %{public}@
%{public}@: [%{public}@] Purchase completed successfully
AMSPurchaseQueue: [%{public}@] Successfully generated a fraud score. fraudScore = %{public}@
%{public}@: [%{public}@] Failed to generate the fraud score. error = %{public}@
%{public}@: [%{public}@] Attempting to pre-authenticate purchase for device restrictions
%{public}@: [%{public}@] Purchase pre-authentication for device restrictions failed with error: %{public}@
%{public}@: [%{public}@] Performing purchase
%{public}@: [%{public}@] Recording engagement event. success: %d
%{public}@: [%{public}@] Handling engagement request
%{public}@: [%{public}@] Engagement completed successfully
%{public}@: [%{public}@] Biometrics enabled, skipping purchase pre-authentication
%{public}@: [%{public}@] Auth task dialog is being dropped as there is no purchase delegate set on this task.
%{public}@: [%{public}@] Ignoring notification for inactive account: %{public}@
%{public}@: [%{public}@] Handling notification of type: %{public}@ class: %{public}@
%{public}@: [%{public}@] Unable to handle notification with action type: %ld
%{public}@: [%{public}@] Refreshing push token if needed
%{public}@: [%{public}@] Failed to fetch push service. %{public}@
%{public}@: [%{public}@] Received badging push. Client: %{public}@ Id: %{public}@ enabled: %{public}@
%{public}@: [%{public}@] Not allowed to badge.
%{public}@: [%{public}@] Failed to handle badge push. %{public}@
%{public}@: [%{public}@] Finished handling badge push.
%{public}@: [%{public}@] Enqueueing engagement event
%{public}@: [%{public}@] Engagement event contains no fields
%{public}@: [%{public}@] Finished enqueueing event. %{public}@
%{public}@: [%{public}@] Attempting to clear device offer with notification for client identifier: %{public}@
%{public}@: [%{public}@] Failed to recognize client identifier: %{public}@
%{public}@: [%{public}@] Clear device offer with notification failed for no account
%{public}@: [%{public}@] Attempting to clear device offer with notification for identifier: %{public}@
%{public}@: [%{public}@] Failed to clear device offer with notification
%{public}@: [%{public}@] Handling follow up response.
%{public}@: [%{public}@] Posting follow up with identifier: %{public}@
%{public}@: [%{public}@] Follow up DENIED due to unwhitelisted identifier: %{public}@
%{public}@: [%{public}@] Follow up DENIED due to inactive account %{public}@
%{public}@: [%{public}@] Posting notification with identifier: %{public}@
%{public}@: [%{public}@] Dialog handling failed with error: %{public}@
%{public}@: [%{public}@] Failed to determine dialog request.
%{public}@: [%{public}@] Failed to determine user notification.
%{public}@: [%{public}@] Deleting notification with identifier: %{public}@
%{public}@: [%{public}@] Failed to deserialize APS. %{public}@
%{public}@: [%{public}@] URL for Ratings: %@.
%{public}@: [%{public}@] Request generated: %@.
%{public}@: [%{public}@] Request completed with error: %@.
%{public}@: [%{public}@] Request completed: %@.
%{public}@: [%{public}@] Failed to cache data
%{public}@: [%{public}@] Error loading URL from bag: %@.
%{public}@: [%{public}@] Setting up the demo account. username = %{public}@ | clientInfo = %{public}@
%{public}@: [%{public}@] Removing the existing demo account. existingAccount = %{public}@
%{public}@: [%{public}@] Failed to remove the existing demo account. error = %{public}@
%{public}@: [%{public}@] Successfully setup the demo account. account = %{public}@
%{public}@: [%{public}@] Signing out of all iTunes accounts.
%{public}@: [%{public}@] Ignoring a non-iTunes account. account = %{public}@
%{public}@: [%{public}@] Signing out of an account. account = %{public}@
%{public}@: The default initializer is deprecated and should not be used
%{public}@: Failed to unarchived snapshot bag. Error: %{public}@
%{public}@: Failed to archive snapshot bag. Error: %{public}@
%{public}@: Asking delegate to reset database after corruption: %{public}@
%{public}@: Truncating database after corruption: %{public}@
%{public}@: Reopening database after IO error: %{public}@
%{public}@: [%{public}@] Failed to fetch ASD segment for mediaType: %ld. %{public}@
%{public}@: [%{public}@] Caching ASD entitlement data for mediaType: %ld
%{public}@: [%{public}@] Reloading entitlement data for mediaType: %ld
%{public}@: [%{public}@] Fetching Music subscription entitlements
%{public}@: [%{public}@] Lookup failed. %{public}@
%{public}@: [%{public}@] Lookup succeeded
%{public}@: [%{public}@] Fetching ASD cached subscriptions
%{public}@: [%{public}@] Forcing ASD fetch for subscriptions
%{public}@: [%{public}@] Syncing password settings. account = %{public}@ | settings = Free: %lu, paid: %lu
%{public}@: [%{public}@] Presenting system alert using request: %{public}@
%{public}@: [%{public}@] Failed to create note dictionary.
%{public}@: [%{public}@] Error creating note %ld.
%{public}@: [%{public}@] System dialog finished without a selected button
%{public}@: [%{public}@] === Starting ===
%{public}@: [%{public}@] == Finished ===
%{public}@: [%{public}@] == Failed === -> error = %{public}@
AMSUniqueExecutionQueue: [%{public}@] Someone is using AMSUniqueExecutionQueue without holding onto the object while it executes.
%{public}@: [%{public}@] addCompletionBlock: - Block isn't running.
%{public}@: [%{public}@] addCompletionBlock: - Block is already running. tag = %p
%{public}@: [%{public}@] addCompletionBlock: - Finished. result = %{public}@ | error = %{public}@
%{public}@: [%{public}@] addCompletionBlockForSubsequentExecution: - Block isn't running.
%{public}@: [%{public}@] addCompletionBlockForSubsequentExecution: - Finished. result = %{public}@ | error = %{public}@
%{public}@: [%{public}@] addCompletionBlockForSubsequentExecution: - Block is already running.
%{public}@: [%{public}@] Previous execution finished. Queuing a new execution.
%{public}@: [%{public}@] Executing block.
AMSUniqueExecutionQueue: Someone is using AMSUniqueExecutionQueue without holding onto the object while it executes.
%{public}@: [%{pubulic}@] Posting notification: %{public}@
%{public}@: [%{pubulic}@] Failed to post notification: %{public}@. Error: %{public}@
%{public}@: [%{pubulic}@] Successfully posted notification: %{public}@
%{public}@: [%{public}@] Removing notification: %{public}@
%{public}@: There was no bag value found for commerce UI URL patterns. [%{public}@]
%{public}@: Invalid commerceUI pattern. %{public}@
%{public}@: [%{public}@] Protocol encountered verification error = %{public}@
%{public}@: [%{public}@] URL not trusted: %{public}@
%{public}@: [%{public}@] Unable to parse decodedObject
%{public}@: [%{public}@] Unsupported protocol version, redirecting to: %{public}@
%{public}@: [%{public}@] Calling legacy delegate for shouldFailWithServerError
%{public}@: [%{public}@] StatusCode: %ld; %{public}@; Environment: %{public}@
%{public}@: [%{public}@] Failed to set the storefront. error = %{public}@
%{public}@: [%{public}@] Set store front received (%{public}@) with no account to set it on
%{public}@: [%{public}@] Retrying for AuthKit anisette
%{public}@: [%{public}@] Reverse push received response header %ld
%{public}@: [%{public}@] Skipping LoadURL Metrics
%{public}@: [%{public}@] Recording LoadURL Metrics
%{public}@: Response ping url failed to fetch metrics url string. %{public}@
%{public}@: Response ping url failed to encode url. %{public}@
%{public}@: [%{public}@] Pinging %{public}@. %{public}@
%{public}@: [%{public}@] Ping failed. %{public}@
%{public}@: [%{public}@] Reverse push disabled
%{public}@: [%{public}@] Failed to fetch APS sampling percentage from the bag
%{public}@: [%{public}@] We weren't provided an account and were unable to get the local account.
%{public}@: [%{public}@] Encoding request for URL: %{public}@ { 
account = %{public}@ 
mediaType = %{public}@ 
%{public}@: [%{public}@] Error adding absinthe headers: %{public}@
%{public}@: Request encoding failed. bagURL returns a nil value.
%{public}@: Request encoding failed. requestURL = nil.
%{public}@: [%{public}@] Ignoring extended validation (EV) for trust
%{public}@: [%{public}@] Invalid trust (EV) error: %{public}@
%{public}@: [%{public}@] Ignoring certificate pinning validation
%{public}@: [%{public}@] Invalid trust (pinned) error: %{public}@
%{public}@: [%{public}@] Trust failed certificate pinning validation
AMSURLSession: dealloc
%{public}@: [%{public}@] Task received response
%{public}@: [%{public}@] Response headers: %{public}@
%{public}@: [%{public}@] Task redirecting to URL: %{public}@
%{public}@: [%{public}@] Failed to redirect. Error = %{public}@
%{public}@: [%{public}@] Skipping completion - no task info
%{public}@: [%{public}@] Skipping completion
%{public}@: [%{public}@] Task finished loading
%{public}@: [%{public}@] Protocol skipping data decoding%{public}@
%{public}@: [%{public}@] Protocol completed with error. %{public}@
%{public}@: [%{public}@] Warning: falling back to default properties (this may cause an additional bag load)
%{public}@: [%{public}@] Task created: %{public}@ Session: %{public}@
%{public}@: [%{public}@] Session decoder failed. Result = %{public}@; Error = %{public}@
%{public}@: [%{public}@] Request decoder failed. Result = %{public}@; Error = %{public}@
%{public}@: [%{public}@] Recording HAR log. Listening: %d
%{public}@: [%{public}@] Task completed with error = %{public}@
%{public}@: [%{public}@] Task completed successfully
%{public}@: [%{public}@] Handling URL action: %{public}@
%{public}@: [%{public}@] %{public}@ the request...
%{public}@: [%{public}@] Exceeded max retry count
%{public}@: [%{public}@] Preparing request: %{public}@
%{public}@: [%{public}@] Request encoding failed with error: %{public}@
%{public}@: [%{public}@] Request headers: %{public}@
%{public}@: [%{public}@] Not allowed to operate on a NSUserNotification that did not originate from AMS. Identifier: %{public}@
%{public}@: [%{public}@] Scheduling notification for time: %{public}@
%{public}@: [%{public}@] Default action selected
%{public}@: [%{public}@] Default action selected, but action not defined
%{public}@: [%{public}@] User dismissed alert
%{public}@: [%{public}@] User selected button index: %d
%{public}@: [%{public}@] Handling button tap without a bag.
%{public}@: [%{public}@] Handling RichNotification response.
%{public}@: [%{public}@] Error performing request: %{public}@
%{public}@: [%{public}@] Handling service extension for note: %{public}@
%{public}@: [%{public}@] Explicit content disallowed
%{public}@: [%{public}@] Removing notification
%{public}@: [%{public}@] Failed to remove notification for nil bundle identifier
%{public}@: [%{public}@] Error generating attachment: %{public}@
%{public}@: [%{public}@] No default action - Opened via %@ instead
%{public}@: [%{public}@] No default action - Failed to open via %@ - %@
%{public}@: [%{public}@] Error downloading asset: %{public}@
%{public}@: [%{public}@] Failed to cache asset data: %{public}@
%@: Comparing version strings with nil: candidate: %@, required: %@
%{public}@: Failed to sanitize version string: %{public}@
%{public}@: Failed to encode message. Error: %{public}@
%{public}@: Failed to decode JSON. Error: %{public}@
%{public}@: [%{public}@] Failed to decode nil protoMessage data
%{public}@: [%{public}@] Failed to decode message with error: %{public}@
%{public}@: [%{public}@] Failed to decode JSON with error: %{public}@
%{public}@: [%{public}@] Failed to encode message: %{public}@
%{public}@: [%{public}@] Failed to encode proto message: %{public}@ error: %{public}@
%{public}@: [%{public}@] Failed to encode message. Error: %{public}@
%{public}@: [%{public}@] Error compressing LZMA data. %{public}@
%{public}@: [%{public}@] Error decompressing LZMA data. %{public}@
%{public}@: Failed to get the AES key. Data decryption will fail. dataProtectionClass = %lu
%{public}@: Data decryption failed. status = %d
%{public}@: Failed to get the AES key. Data encryption will fail. dataProtectionClass = %lu
%{public}@: The encryption key isn't valid. Data encryption will fail. length = %lu, requiredLength = %lu
%{public}@: Data encryption failed. status = %d
%{public}@: Failed to generate an encryption/decryption key. status = %d
%{public}@: Running unit tests. We won't go to the keychain for the AES key. dataProtectionClass = %lu
%{public}@: Generating an AMSDataProtectionClass encryption/decryption key. dataProtectionClass = %lu
%{public}@: Failed to fetch an AMSDataProtectionClass encryption/decryption key. dataProtectionClass = %lu | error = %d
%{public}@: Failed to generate IV data. Data encryption will fail. status = %d
NSString+AppleMediaServices: [%{public}@] Failed to determine display username
%{public}@: Failed to fetch correct caches directory
%{public}@: Failed to create caches directory. %{public}@
%{public}@: [%{public}@] Skipping GUID patterns
%{public}@: [%{public}@] Skipping GUID schemes
%{public}@: [%{public}@] Failed to add mescal header. Error: %{public}@
%{public}@: [%{public}@] Failed to encode data from parameters. Error: %{public}@
%{public}@: [%{public}@] Only dictionaries are supported for query parameters;
%{public}@: [%{public}@] Failed to fetch storefront suffix from bag. Error = %{public}@
NSURLSessionConfiguration+AMS: [%{public}@] Generating session configuration (tls:%d tfo:%d qa:%d)
%{public}@: Intializing AMS URLCache
%{public}@: Falling back to sharedURLCache
NSURLSessionConfiguration+AppleMediaServices: [%{public}@] Received clear caches notification
softlink:r:path:/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
softlink:r:path:/System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/AppleIDSSOAuthentication
softlink:r:path:/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
softlink:r:path:/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
softlink:r:path:/System/Library/PrivateFrameworks/AskPermission.framework/AskPermission
softlink:r:path:/System/Library/PrivateFrameworks/PassKit.framework/PassKit
softlink:r:path:/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
softlink:r:path:/System/Library/PrivateFrameworks/PassKit.framework/PassKit
softlink:r:path:/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
softlink:r:path:/System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon
softlink:r:path:/System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
AppleMediaServices
AMSHashable
NSObject
AMSAbsinthe
AMSBagConsumer_Project
AMSBagConsumer
AMSAbsintheSignature
AMSAbsintheSession
AMSAccountsChangedObservable
AMSAccountsChangedResult
AMSAccountStoreCache
AMSAcknowledgePrivacyTask
AMSAnisette
AMSAnisetteProvisionTask
AMSAnisetteSyncTask
AMSAppleCardSilentEnrollment
AMSAppleCardSilentEnrollmentProtocolHandler
NSURLSessionDelegate
AMSURLProtocolDelegate
AMSApplePayClassic
AMSAttestation
AMSAuthenticateOptions
NSCopying
NSSecureCoding
NSCoding
AMSAuthenticateRequest
AMSAuthenticateResult
AMSAuthenticateTask
AMSAuthKitUpdateResult
AMSAuthKitUpdateTask
AKAppleIDAuthenticationDelegate
AMSAutomaticDownloadKindsFetchTask
AMSAutomaticDownloadKindsResult
AMSAutomaticDownloadKindsSetTask
AMSBag
AMSBagProtocol
AMSBagFrozenDataSource
AMSBagDataSourceProtocol
AMSBagFrozenDataSourceBuilder
AMSSecureCoding
AMSBagKeyInfo
AMSBagKeySet
NSMutableCopying
AMSMutableBagKeySet
AMSBagKeySetAggregator
AMSBagNetworkDataSource
AMSBagNetworkTaskResult
AMSBagNetworkTask
NSURLSessionTaskDelegate
AMSBagURLParser
AMSBagValue
AMSBinaryPromise
AMSBiometrics
AMSBiometricsDisableTask
AMSBiometricsMigrator
AMSBiometricsPresentationProxy
AMSRequestPresentationDelegate
AMSBiometricsSecurityService
AMSBiometricsSignatureRequest
AMSBiometricsSignatureResult
AMSBiometricsSignatureTask
AMSBiometricsTokenUpdateTask
AMSSecurityClientInterface
AMSBridgedBagValue
AMSBuyParams
AMSCardAuthorizationTask
AMSCardAutoEnrollment
AMSCardEnrollment
AMSCardEnrollmentEligibilityTask
AMSCardEnrollmentPaymentSessionTask
AMSCardEnrollmentVerificationTask
AMSCardMetadataRegistrationResult
AMSCardRegistrationResult
AMSCardRegistrationTask
AMSCircularBuffer
AMSClientCertificateTask
AMSCommandLineDialogTask
AMSCommerceMigrator
AMSCommerceService
AMSContentRating
AMSContractBagShim
AMSConnectionDelegateProxy
AMSDaemonConnection
AMSDServiceBrokerProtocol
AMSDaemonConnectionProtocol
AMSPushNotificationServiceInterface
AMSDeviceMessengerClientInterface
AMSDeviceMessengerServiceInterface
AMSSecurityServiceInterface
AMSDaemonConnectionInterface
AMSData
AMSDataMigrator
AMSDataMigratorOptions
AMSDefaults
AMSDeprecatedBagContract
AMSDeviceOfferBagContract
AMSMetricsBagContract
AMSURLBagContract
AMSMescalBagContract
AMSLookupBagContract
Language
Offers
Offers_Deprecated
CoreTelephonyClientSuppServicesDelegate
AMSDevice
AMSDeviceUpdateHandlerInfo
AMSDeviceMessenger
AMSDeviceMessengerFilter
AMSDeviceOffer
AMSDeviceOfferMigrator
AMSDeviceOfferRegistrationTask
AMSDeviceOffersStore
AMSDeviceOffersTracking
AMSDialog
AMSDialogAction
AMSDialogButton
AMSDialogRequest
AMSBiometricsIdentityMapChangeTask
AMSDialogResult
AMSDialogTextField
AMSDoubleLinkedList
AMSDoubleLinkedListNode
AMSEngagement
AMSEngagementAppData
AMSEngagementAppResponseModel
AMSEngagementAppWhitelistModel
AMSEngagementClientData
AMSEngagementServiceProtocol
AMSEngagementConnection
AMSEngagementDestination
AMSEngagementEnqueueRequest
AMSEngagementEnqueueResult
AMSEngagementRequest
AMSEngagementResult
AMSEngagementSyncRequest
AMSEngagementSyncResult
AMSEphemeralDefaults
AMSFailingBagValue
AMSFamilyContentDeletionEvent
AMSFamilyAccountPair
AMSFamilyInfoLookupResult
AMSFamilyInfoLookupTask
AMSFamilyMember
AMSFeatureEnabler
AMSFeatureFlag
AMSFinanceActionResponse
AMSFinancePerformable
AMSFinanceAuthenticateResponse
Finance
AMSFinanceDialogResponse
AMSFinancePaymentSheetResponse
AMSFinanceResponse
AMSFinanceVerifyPurchaseResponse
AMSFollowUp
AMSFollowUpAction
AMSFollowUpItem
AMSFollowUpMetricsEvent
AMSFrozenBagValue
AMSPurchase
AMSGenerateFraudScoreTask
AMSHandleDialogResultTask
AMSHTTPArchive
AMSHTTPArchiveController
AMSInlineDelegate
AMSBKSProcessAssertion
AMSKeepAlive
AMSKeybag
AMSKeychain
AMSKeychainOptions
AMSLazyPromise
AMSLogConfig
AMSMutableLogConfig
AMSLookupDecoder
AMSResponseDecoding
AMSLookup
AMSLookupItem
AMSLookupItemArtworkColor
AMSLookupItemArtwork
AMSLookupItemOffer
AMSLookupResult
AMSLRUCache
AMSLRUCacheItem
AMSMappedBundleInfo
AMSMarketingItem
AMSMarketingItemAction
AMSMarketingItemActionComponent
AMSMarketingItemParser
AMSMarketingItemStub
AMSMarketingItemTask
AMSMarketingItemTaskURLBuilder
AMSMediaArtwork
AMSMediaProtocolHandler
AMSMediaRequestEncoder
AMSRequestEncoding
AMSMediaResponseDecoder
AMSMediaResult
AMSMediaSharedProperties
AMSMediaTask
AMSMediaTaskTypeConfig
AMSMediaTaskURLBuilder
AMSMediaToken
AMSMediaTokenService
AMSMediaTokenServiceProtocol
AMSMediaTokenServiceDeserializer
AMSMediaTokenServiceKeychainStore
AMSMediaTokenServiceStore
AMSMediaTokenServiceThrottler
AMSMediaTokenServiceUserDefaultsStore
AMSMediaURLBuilderUtility
AMSMediaVideo
AMSMemoryPressure
AMSMescal
AMSMescalFairPlay
AMSMescalSession
AMSMetrics
AMSMetricsClientIdentifier
AMSMetricsDatabase
AMSSQLiteConnectionDelegate
AMSMetricsDatabaseDataSource
AMSMetricsDataSource
AMSMetricsDatabaseSchema
AMSMetricsEvent
AMSMetricsFigaroBagConfguration
AMSMetricsFigaroEventModifier
AMSMetricsBatch
AMSMetricsFigaroFlushTask
AMSMetricsFlushStrategy
AMSMetricsIdentifier
AMSMetricsLoadURLContext
AMSMetricsLoadURLEvent
AMSMetricsMemoryDataSource
AMSMockNetworkProxy
AMSMockPurchaseQueue
AMSMockURLOverride
AMSMockURLRequestComparator
AMSURLRequestComparator
AMSMockURLResponse
AMSMockURLSession
AMSMultiUserServiceProtocol
AMSMultiUserService
AMSMachService
AMSNetworkConstraints
AMSNetworkQualityInquiry
AMSNotificationSettingsItem
AMSNotificationSettingsResult
AMSNotificationSettingsSection
AMSNotificationSettingsTask
NSKeyValueObserving
_AMSKeyValueObservable
NSNotification
_AMSNotificationObservable
AMSObservable
AMSObserver
URLTarget
AMSOpenURL
AMSOperation
AMSOptional
AMSPair
AMSPaymentSetupFeatureVerification
AMSPaymentSheetMetricsEvent
AMSPaymentSheetPriceSectionItem
AMSPaymentSheetRatingImage
AMSPaymentSheetAssetCache
PassKit
AMSPaymentSheetRequest
AMSPaymentSheetResult
_PaymentSheetState
AMSPaymentSheetTask
PKPaymentAuthorizationControllerDelegate
PKPaymentAuthorizationControllerPrivateDelegate
AMSProcessInfo
AMSPromise
AMSPromiseCompletionBlocks
AMSPromiseResult
AMSPurchaseBatch
AMSPurchaseBagConsumer
AMSPurchaseInfo
AMSPurchaseProtocolHandler
AMSPurchaseQueue
AMSPurchaseDelegate
AMSPurchaseQueueConfiguration
AMSPurchaseRequestEncoder
AMSPurchaseResult
AMSPurchaseTask
AMSAuthenticateTaskDelegate
AMSPushConfiguration
AMSPushHandler
AMSPushNotificationService
AMSPushParsableBadging
AMSPushParsable
AMSPushParsableEngagementEvent
DeviceOffers
AMSPushParsableFollowUp
AMSUserNotificationIntentDelegate
AMSPushParsableGenericNotification
AMSPushParsableRichNotification
AMSPushPayload
AMSRatingsProviderResult
AMSRatingsProviderTask
AMSRatingsStoreFront
AMSRatingSystem
AMSRemoteNotification
AMSRestrictions
AMSSetDemoAccountTask
AMSSignInContext
SecuritySigningService
AMSSigningSecurityService
AMSSignOutTask
AMSSimulatedCrash
AMSSnapshotBag
AMSSnapshotBagBuilder
AMSSQLiteConnection
AMSSQLiteConnectionOptions
AMSSQLiteCursor
AMSSQLiteEntity
AMSSQLiteMemoryEntity
AMSSQLitePredicate
AMSSQLitePropertyPredicate
AMSSQLiteComparisonPredicate
AMSSQLiteContainsPredicate
AMSSQLiteNullPredicate
AMSSQLiteCompoundPredicate
AMSSQLitePreparedStatement
AMSSQLiteQuery
AMSSQLiteQueryDescriptor
AMSSQLiteQueryAdditions
AMSSQLiteQueryResults
AMSSQLiteBinding
AMSSQLiteSchema
AMSQRCodeDialogTask
AMSSQLiteSchemaMigration
AMSSQLiteStatement
AMSSubscriptionEntitlement
AMSSubscriptionEntitlementsResult
AMSSubscriptionEntitlementsTask
AMSSyncPasswordSettingsResult
AMSSyncPasswordSettingsTask
AMSSystemAlertDialogTask
AMSTask
AMSThreadSafeDictionary
AMSThreadSafeObject
AMSThreadSafeSet
AMSUniqueExecutionQueue
AMSUnitTests
AMSUNUserNotificationStrategy
AMSUserNotificationStrategy
AMSURLDelegateProxy
AMSURLAction
AMSURLParser
AMSURLProtocolHandler
AMSURLHandling
AMSURLRequest
AMSURLRequestEncoder
AMSURLRequestProperties
AMSURLResponseDecoder
AMSURLResult
AMSURLSecurityPolicy
AMSURLSession
NSURLSessionDataDelegate
AMSURLTaskInfo
AMSUserAgent
AMSUserNotification
AMSUserNotificationAction
AMSUserNotificationCenter
AMSUserNotificationMetricsEvent
AMSVersionComparator
AMSXDDevice
AMSXDMessage
AMSXDProtoMessage
AppleMediaServices_EncryptionResult
AMSMockURLRequest
ams_PLISTClasses
_accountPropertyForKey:dataProtectionClass:expectedClasses:error:
ams_storefront
ams_setNullableObject:forKey:
ams_isIDMSAccount
sharedInstance
altDSIDForAccount:
_accountPropertyForKey:expectedClass:
integerValue
initWithProperties:
ams_mapWithTransform:
cookie
arrayByAddingObject:
ams_isDeleted
ams_isExpired
ams_filterUsingTest:
ams_isiCloudAccount
objectForKeyedSubscript:
longLongValue
numberWithLongLong:
DSIDForAccount:
isEqualToNumber:
unsignedIntegerValue
numberWithUnsignedInteger:
_setAccountProperty:forKey:expectedClass:
ams_firstName
ams_lastName
setFamilyName:
setGivenName:
stringFromPersonNameComponents:
ams_isiTunesAccount
boolValue
ams_securityLevel
accountType
identifier
isEqualToString:
ams_isSandboxAccount
credential
password
credentialItemForKey:
ams_isDemoAccount
sharedAccountsConfig
sharedConfig
OSLogObject
ams_DSID
ams_sharedAccountStore
ams_IDMSAccountForAccount:
securityLevelForAccount:
_setAccountProperty:forKey:dataProtectionClass:expectedClass:
numberWithBool:
numberWithInteger:
stringValue
ams_isLocalAccount
setCredential:
setPassword:
setCredentialItem:forKey:
ams_setStorefront:forMediaType:
ams_storefrontForMediaType:
ams_accountFlags
hashedDescription
_defaultValueForAccountFlag:
_isAccountFlagValue:validForAccountFlag:
accountProperties
allKeys
setWithArray:
unionSet:
countByEnumeratingWithState:objects:count:
isEqual:
initWithFirst:second:
setObject:forKeyedSubscript:
isActive
username
copy
accountPropertyForKey:
ams_encryptionResult
ams_setAccountFlags:
ams_altDSID
lowercaseString
ams_privacyAcknowledgement
addObjectsFromArray:
_isAccountFlagWritable:
mutableCopy
isEqualToDictionary:
setActive:
sharedAccountsAuthenticationPluginConfig
setAppleIDWithAltDSID:inUse:forService:
setAppleIDWithDSID:inUse:forService:
_updateCookiesWithCookiesToAdd:cookiesToRemove:
_getSetCookiesForResponse:
ams_addCookies:
response
ams_addCookiesForResponse:
_getSetGlobalCookiesForResponse:
ams_addGlobalCookiesForResponse:
host
hasPrefix:
stringByAppendingString:
path
scheme
ams_cookies
isSecure
expiresDate
timeIntervalSinceReferenceDate
domain
hasSuffix:
length
_cookiesMatchingProperties:
ams_removeCookies:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
_hashedIdentifiers
ams_appendNullableString:
_hashedMultiUserIdentifiers
_hashedActiveState
_hashedStorefront
appendString:
setWithObject:
ams_decryptUsingDataProtectionClass:initializationVectorData:tagData:error:
unarchivedObjectOfClasses:fromData:error:
ams_firstObjectPassingTest:
properties
count
ams_isEquivalent:
removeObject:
addObject:
enumerateObjectsUsingBlock:
ams_cookieByMarkingCookieAsDeleted:
isEqualToArray:
_initWithIdentifier:private:
setCookieAcceptPolicy:
setCookie:
allHeaderFields
objectForKey:
cookiesWithResponseHeaderFields:forURL:
appendFormat:
archivedDataWithRootObject:requiringSecureCoding:error:
ams_encryptDataUsingDataProtectionClass:error:
ams_dictionaryWithEncryptionResult:
setAccountProperty:forKey:
ams_secureTokenForAccount:
ams_setAccountFlagValue:forAccountFlag:
ams_accountFlagValueForAccountFlag:
ams_allStorefronts
ams_automaticDownloadKinds
ams_biometricsState
ams_creditsString
ams_didAgreeToTerms
ams_freePasswordPromptSetting
ams_setFreePasswordPromptSetting:
ams_fullName
ams_isHSA2
ams_isiCloudFamily
ams_isInGoodStanding
ams_isManagedAppleID
ams_isValidPayment
ams_lastAuthenticationCredentialSource
ams_lastAuthenticationServerResponse
ams_mergedPrivacyAcknowledgement
ams_paidPasswordPromptSetting
ams_setPaidPasswordPromptSetting:
ams_password
ams_pushRegistrationThrottleMap
ams_rawPassword
ams_registerSuccessCriteria
ams_requiresAuthKitUpdate
ams_setAgreedToTerms:
ams_setAltDSID:
ams_setBiometricsState:
ams_setCreditsString:
ams_setDemoAccount:
ams_setDSID:
ams_setFirstName:
ams_setiCloudFamily:
ams_setInGoodStanding:
ams_setLastAuthenticationCredentialSource:
ams_setLastName:
ams_setManagedAppleID:
ams_setMergedPrivacyAcknowledgement:
ams_setPassword:
ams_setPushRegistrationThrottleMap:
ams_setRawPassword:
ams_setRegisterSuccessCriteria:
ams_setServerResponse:
ams_setStorefront:
ams_setValidPayment:
ams_delta:
ams_encryptAccountFlags
ams_isActiveForMediaType:
ams_isDuplicate:
ams_mergePrivacyAcknowledgement:
ams_setActive:forMediaType:
ams_setInUse:
ams_addCookiesForResult:
ams_addGlobalCookiesForResult:
ams_cookiesForURL:
ams_removeAllCookies
ams_removeCookiesMatchingProperties:
_createCookieStorage
ams_addHomeUserIdentifier:
ams_secureToken
ams_postAccountFlagsWithBagContract:
ams_removeHomeUserIdentifier:
ams_setValue:forAccountFlag:
ams_valueForAccountFlag:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
isRunningUnitTests
defaultMediaTypeForCurrentProcess
ams_sharedAccountStoreForMediaType:
accountMediaType
accountStoreForMediaType:
ams_activeiCloudAccount
ams_activeiTunesAccount
aa_primaryAppleAccount
ams_mediaType
ams_iTunesAccountWithAltDSID:DSID:username:
ams_iTunesAccounts
ams_accountTypeIdentifierForMediaType:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:options:error:
ams_hasDomain:code:
ams_localiTunesAccountForAccountMediaType:
resultWithError:
mediaTypeForAccountStore:
aida_accountForAltDSID:
credentialForAccount:serviceID:error:
token
ams_localiTunesAccount
name
allValues
_correspondingAccountWithAccountTypeIdentifier:forAccount:
ams_iTunesAccountWithAltDSID:
ams_iTunesAccountWithDSID:
ams_iTunesAccountWithUsername:
_accountTypeForMediaType:
ams_localiTunesAccountForAccountType:
thenWithBlock:
_fetchLocaliTunesAccountForAccountType:
promiseWithError:
_createLocaliTunesAccountForAccountType:
promiseAdapter
catchWithBlock:
ams_saveAccount:verifyCredentials:
ams_saveAccount:withOptions:
_isAccountNew:
isDirty
_saveAccount:verifyCredentials:
_secureTokenForIdentifier:
ams_iTunesAccountForAccount:
dataUsingEncoding:
reload
_addUserCookiesForResponse:account:error:
_addGlobalCookiesForResponse:error:
ams_addCookiesForResponse:account:error:
_alliTunesAccounts
completionHandlerAdapter
accountTypeWithIdentifier:completion:
sharedAccountsCookiesConfig
cachedAccountWithIdentifier:completion:
ams_accountWithAltDSID:DSID:username:accountTypeIdentifier:
initWithAccountType:
setUsername:
ams_saveAccount:
promiseWithSuccess
_iTunesAccountsForAccountType:
promiseWithResult:
accountWithIdentifier:
finishWithResult:
finishWithError:
accountsWithAccountType:options:completion:
saveAccount:withDataclassActions:doVerify:completion:
addErrorBlock:
initWithData:encoding:
ams_isActiveAccountCombined
ams_fetchGrandSlamTokenForAccount:withIdentifier:error:
ams_demoAccount
ams_iCloudAccountForAccount:
ams_IDSAccountForAccount:
ams_setSecureToken:forAccount:error:
ams_addCookiesForResponse:request:account:error:
ams_addCookiesForResult:account:error:
ams_removeCookiesMatchingProperties:error:
_cachedAccountWithIdentifier:
_storeClientIdentifier
ams_iTunesAccountForHomeWithIdentifier:
ams_iTunesSandboxAccounts
ams_sharedAccountStoreForClient:
ams_sharedAccountStoreForProcessInfo:
defaultSession
signData:bag:error:
signature
servKey
dictionaryWithObjects:forKeys:count:
_signingDataFromRequest:buyParams:bag:completion:
clearSession
retryAction
setReason:
setRetryIdentifier:
hasBagKeySetForConsumer:
addBagKey:valueType:
addBagKeySet:forConsumer:
addRequiredBagKeysToAggregator:
generateAggregatedBagKeySet
bagKeySet
bagSubProfile
bagSubProfileVersion
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
HTTPBody
allHTTPHeaderFields
ams_parameters
cStringUsingEncoding:
dataWithLength:
mutableBytes
arrayForKey:
containsString:
propertyForKey:
rangeOfString:options:
absoluteString
_dataToSignFromRequest:bagDefinition:
valueWithCompletion:
headersForRequest:buyParams:bag:
handleResponse:bag:
createBagForSubProfile
setSignature:
setServKey:
.cxx_destruct
_signature
_servKey
init
verifyData:bag:error:
_prepareContextWithBag:error:
sessionRef
setSessionRef:
_sessionRef
_initWithAccount:accountTypeIdentifier:
currentProcess
isAccountsDaemon
defaultCenter
_accountStoreDidChange:
addObserver:selector:name:object:
createdObservablesAccessQueue
createdObservables
addPointer:
removeObserver:
dealloc
weakObjectsPointerArray
initWithAccount:
observable
subscribe:
unsubscribe:
notificationsQueue
userInfo
_processChangedAccount:
_shouldNotifyObserversForChangedAccount:
sendResult:
pointerAtIndex:
compact
account
accountTypeIdentifier
sharedLocalAccountInstance
initWithAccountTypeIdentifier:
setObservable:
setNotificationsQueue:
_account
_accountTypeIdentifier
_observable
_notificationsQueue
bundleIdentifier
cacheAccessQueue
cache
removeAllObjects
_resetAccountStoreCache
initWithPrivacyIdentifier:account:
initWithPrivacyIdentifiers:account:
sharedPrivacyConfig
privacyIdentifiers
_contentVersionForPrivacyIdentifier:
_multiplexPrivacyIdentifier:contentVersion:
addEntriesFromDictionary:
performBinaryTaskWithBlock:
_accountStoreForPrivacyIdentifier:
acknowledgementNeededForPrivacyIdentifier:account:
disablePrivacyAcknowledgement
compare:
hasPreviouslyAcknowledgedPrivacyIdentifier:account:
_storePrivacyIdentifiers
containsObject:
acknowledgementNeededForPrivacyIdentifier:
hasPreviouslyAcknowledgedPrivacyIdentifier:
initWithPrivacyIdentifier:
initWithPrivacyIdentifiers:
acknowledgePrivacy
setAccount:
setPrivacyIdentifiers:
_privacyIdentifiers
handleResponse:type:bag:account:
actionType
ams_actionNameV1
ams_actionDataV1
_handleActionName:actionData:account:type:bag:
ams_actionNameV1_5
ams_actionDataV1_5
substringFromIndex:
caseInsensitiveCompare:
_provisionMachineWithActionData:type:account:bag:
_syncMachineWithActionData:type:account:bag:
_eraseProvisioningForType:account:
initWithData:type:account:bag:
performProvisioning
_shouldRetryAfterError:
performSync
handleResponse:account:type:bag:
headersForRequest:account:type:bag:
_accountIDForType:account:
_bagDomainExistsForURL:type:bag:completion:
_headersForRequest:account:type:
sharedAnisetteConfig
type
data
_bag
_data
_type
accountStore
gsTokenForAccount:error:
headersForAccount:
reconfigureNewRequest:originalTask:redirect:error:
ams_addSilentEnrollmentHeadersForAccount:
initWithRequest:
performAuthentication
addFinishBlock:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
AMSURLSession:task:handleAuthenticateRequest:completion:
AMSURLSession:task:handleDialogRequest:completion:
AMSURLSession:task:handleEngagementRequest:completion:
AMSURLSession:task:shouldFailWithServerError:
AMSURLSession:handleAuthenticateRequest:completion:
AMSURLSession:handleDialogRequest:completion:
AMSURLSession:shouldFailWithServerError:
AMSURLSession:shouldHandleAuthenticationForAccount:dialogDictionary:
AMSURLSession:shouldHandleDialogDictionary:
regenerateKeys
style
deleteCertificateChainWithOptions:error:
deleteKeyPairWithOptions:error:
sharedAttestationConfig
certificateChainStringsForOptions:error:
_generateCertificateChainStringsForOptions:error:
legacyAttestationForOptions:error:
setPurpose:
setRegenerateKeys:
setStyle:
attestationWithOptions:error:
_attestationPListWithStyle:primaryAttestation:extendedAttestation:error:
dataWithPropertyList:format:options:error:
setState:forAccount:
objectAtIndexedSubscript:
initWithOptions:
performClientCertChainRequest
base64EncodedStringWithOptions:
attestationHTTPBodyDataWithStyle:regenerateKeys:error:
clearAttestationWithAccount:options:error:
initWithOptionsDictionary:
ams_objectForKey:defaultValue:
unarchivedObjectOfClass:fromData:error:
optionsDictionary
encodeObject:forKey:
decodeObjectOfClasses:forKey:
allowSecondaryCredentialSource
allowServerDialogs
appProvidedContext
appProvidedData
authenticationType
cancelButtonString
canMakeAccountActive
clientInfo
companionDeviceClientInfo
companionDeviceUDID
createAccountQueryParams
credentialSource
debugReason
defaultButtonString
enableAccountCreation
ephemeral
isRemoteProxyAuthentication
logKey
HTTPHeaders
ignoreAccountConversion
promptTitle
proxyAppBundleID
proxyAppName
reason
serviceIdentifier
serviceType
userAgent
userAgentSuffix
currentDevice
setLinkType:
serializedData
ams_generateDescriptionWithSubObjects:
allocWithZone:
setAppProvidedData:
setAccountMediaType:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
optionsDictionaryForRemoteProxyAuthentication
setAuthenticationType:
authKitData
mediaType
presentingViewController
setAuthKitData:
setMediaType:
setPresentingViewController:
setAllowServerDialogs:
setAppProvidedContext:
setCancelButtonString:
setCanMakeAccountActive:
setCreateAccountQueryParams:
setClientInfo:
setCredentialSource:
setDebugReason:
setDefaultButtonString:
setEnableAccountCreation:
setHTTPHeaders:
iconBundleURL
setIconBundleURL:
setIgnoreAccountConversion:
setLogKey:
setPromptTitle:
setProxyAppBundleID:
setProxyAppName:
setUserAgent:
setUserAgentSuffix:
usernameEditable
setUsernameEditable:
setAllowSecondaryCredentialSource:
setCompanionDeviceClientInfo:
setCompanionDeviceUDID:
isDemoAccountSetup
setDemoAccountSetup:
setEphemeral:
setServiceType:
setServiceIdentifier:
_authenticationType
_allowServerDialogs
_canMakeAccountActive
_enableAccountCreation
_ignoreAccountConversion
_usernameEditable
_allowSecondaryCredentialSource
_demoAccountSetup
_ephemeral
_remoteProxyAuthentication
_appProvidedContext
_appProvidedData
_cancelButtonString
_createAccountQueryParams
_clientInfo
_credentialSource
_debugReason
_defaultButtonString
_HTTPHeaders
_iconBundleURL
_logKey
_promptTitle
_proxyAppBundleID
_proxyAppName
_reason
_userAgent
_userAgentSuffix
_companionDeviceClientInfo
_companionDeviceUDID
_serviceType
_serviceIdentifier
initWithAccount:options:
options
decodeObjectOfClass:forKey:
initWithDSID:altDSID:username:options:
setOptions:
setUserInfo:
_options
_userInfo
serverResponse
_serverResponse
_createFallbackBag
initWithAccount:options:bag:
initWithRequest:bag:
sharedAccountsOversizeConfig
altDSID
DSID
_accountForAuthenticationWithError:
_runCreateAccountDialogWithError:
_attemptMultiUserTokenAuthenticationForAccount:
_attemptPasswordReuseAuthenticationForAccount:error:
_createAuthKitUpdateTaskForAccount:
performAuthKitUpdate
_performAuthenticationUsingAccount:credentialSource:error:
_sanitizeError:
performTaskWithBlock:
_accountStoreForAuthentication
allowActiveAccountModifications
accountTypeWithAccountTypeIdentifier:error:
_updateAccountWithProvidedInformation:
delegate
authenticateTask:handleDialogRequest:completion:
_runDialogRequest:
initWithResult:bag:
perform
waitUntilFinished
ams_errorByAddingUserInfo:
verifyCredentialsForAccount:options:completion:
_handleDialogFromError:
finishWithResult:error:
code
rawPassword
_updateAccountPasswordUsingSecondaryAccounts:
homeIdentifier
UUIDString
initWithUUIDString:
setHomeIdentifier:
homeID
setHomeID:
setBag:
setDelegate:
multiUserToken
setMultiUserToken:
setRawPassword:
setAltDSID:
setDSID:
homeUserIdentifier
setHomeUserIdentifier:
_delegate
_password
_multiUserToken
_rawPassword
_altDSID
_DSID
_homeIdentifier
_homeUserIdentifier
_username
_createUpdatedAccount:usingAuthenticationResults:options:
initWithAccount:authenticationResults:options:
initWithAccount:authenticationResults:credentialSource:options:
authenticationResults
_authenticationResults
_updateAccountRawPasswordUsingSecondaryAccounts:
_createAuthKitContext
_configureAuthKitContext:
_createAuthKitController
authenticateWithContext:completion:
_logPromptSummaryForResults:context:
addSuccessBlock:
performTaskWithPromiseBlock:
metricsAuthenticationAttemptDictionaryForAuthKitError:
authenticationTypeForOptions:
_canPresentBackgroundPrompt
updateAuthKitContext:forAccount:options:
_setPassword:
setIsEphemeral:
_configureClientInfoForContext:
_configureCompanionDeviceForContext:
_configureIdentifiersForContext:
_configureProxyIdentifiersForContext:
_configureStringsForContext:
setServerFriendlyDescription:
setUniqueDeviceIdentifier:
setCompanionDevice:
setIsUsernameEditable:
isUsernameEditable
_setProxyingForApp:
_setProxiedAppBundleID:
_setProxiedAppName:
set_passwordPromptTitle:
setTitle:
createAuthKitContext
createAuthKitController
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
initWithAccount:accountStore:options:
_topicFromAuthenticationContext:
initWithTopic:
setProperty:forBodyKey:
_buyParamsStringFromAuthenticationContext:
date
timeIntervalSince1970
componentsSeparatedByString:
_buyParamsFromString:
createEventFromAuthenticationContext:error:
initWithAccount:andEnabledMediaKinds:
initWithBag:
setRequestEncoding:
setLogUUID:
deviceGUID
URLForKey:
requestWithMethod:bagURL:parameters:
dataTaskPromiseWithRequest:
object
initWithAccount:bag:
enabledMediaKinds
_enabledMediaKinds
configuration
initWithConfiguration:delegate:delegateQueue:
setSession:
session
longValue
presentationDelegate
handleAuthenticateRequest:completion:
handleDialogRequest:completion:
initWithEnabledMediaKinds:account:bag:presentationDelegate:
initWithEnabledMediaKinds:account:bag:
_presentationDelegate
_session
bagForProfile:profileVersion:processInfo:
bagCacheAccessQueue
bagCache
initWithProfile:profileVersion:processInfo:
initWithDataSource:
initWithArray:
sharedBagConfig
postNotificationName:object:userInfo:
dataSource
setDataSourceChangedHandler:
setDataSourceDataInvalidatedHandler:
loadWithCompletion:
setObject:forKey:
expirationDate
processInfo
profile
profileVersion
isLoaded
bagKeyRegistrationEnabled
registeredBagKeySetForProfile:profileVersion:
sharedConfigOversize
setData:
setExpirationDate:
setProfile:
setProfileVersion:
setProcessInfo:
buildWithError:
descriptionExtended
initWithDataSource:key:valueType:
initWithDataSource:key:valueType:account:
_resetBagCache
boolForKey:
createSnapshotWithCompletion:
doubleForKey:
integerForKey:
stringForKey:
dictionaryForKey:
isExpired
URLForKey:account:
setDataSource:
_dataSource
bagKeyInfoForKey:
valueForURLVariable:account:clientInfo:
cookies
arrayWithObjects:count:
valueForURLVariable:account:
setDescriptionExtended:
dataSourceChangedHandler
dataSourceDataInvalidatedHandler
_initWithProfile:profileVersion:data:expirationDate:bagKeySet:cookies:processInfo:
_expirationDate
_processInfo
_profile
_profileVersion
_bagKeySet
_cookies
initWithFrozenDataSource:
createFrozenDataSource
setBagKeySet:
setCookies:
initWithBagKey:valueType:defaultValue:
bagKey
valueType
defaultValue
encodeInteger:forKey:
decodeObjectForKey:
decodeIntegerForKey:
initWithBagKey:valueType:
_bagKey
_defaultValue
_valueType
bagKeySetCacheAccessQueue
keys
bagKeySetCache
unionBagKeySet:
initWithSet:
setMutableKeys:
isEqualToSet:
resetRegisteredBagKeySets
mutableCopyWithZone:
hasKey:
_keys
mutableKeys
addBagKey:valueType:defaultValue:
_mutableKeys
bagKeySets
enumerateKeysAndObjectsUsingBlock:
setBagKeySets:
_bagKeySets
bagStorefrontForAccountMediaType:
_shouldProcessChangedAccount:forMediaType:
_accountStoreDidChange
initWithResultBlock:
_invalidateCacheNotification:
accountsChangedObserver
cachedDataAccessQueue
cachedResult
dataWithJSONObject:options:error:
expired
_fetchBag
bagAccountForAccountMediaType:
ams_isCookieValidForBag
value
processAccountStoreDidChangeNotificationQueue
cachedStorefrontAccessQueue
cachedStorefront
setCachedStorefront:
setCachedResult:
activeFailure
errorWithDomain:code:userInfo:
currentLoadTask
performFetch
initWithClientInfo:profile:profileVersion:
setCurrentLoadTask:
setActiveFailure:
_updateCachedResult:
finishWithPromise:
_isDataDictionary:equalToDataDictionary:
setAccountsChangedObserver:
setCachedDataAccessQueue:
setCachedStorefrontAccessQueue:
completionQueue
setCompletionQueue:
setProcessAccountStoreDidChangeNotificationQueue:
_dataSourceChangedHandler
_dataSourceDataInvalidatedHandler
_accountsChangedObserver
_cachedResult
_cachedDataAccessQueue
_cachedStorefront
_cachedStorefrontAccessQueue
_completionQueue
_currentLoadTask
_activeFailure
_processAccountStoreDidChangeNotificationQueue
initWithData:
storefront
setStorefront:
_storefront
ams_configurationWithProcessInfo:bag:
setTimeoutIntervalForResource:
_URLCookieNamesForProfile:
storefrontSuffixes
_createRequestWithCookieNames:storefront:
URLSession
ams_expirationInterval
dateWithTimeIntervalSinceReferenceDate:
_setURLCookieNames:forProfile:
_updateStorefrontSuffixIfNecessaryWithBagData:
_setStorefrontFromURLResponse:bagData:
_shouldRetryForResult:cookieNames:urlCookies:newStorefront:
bagOverrides
ams_dictionaryByAddingEntriesFromDictionary:
accountMediaTypeInfoForProcessInfo:
bundleInfoForProcessInfo:
operatingSystem
productVersion
_deviceString
clientName
clientVersion
_OSBuildTypeString
_cookiesForNames:
URLQueryAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
URLWithString:
setUrlKnownToBeTrusted:
setIncludeClientVersions:
requestWithMethod:URL:parameters:
setValue:forHTTPHeaderField:
_shouldReloadDataForOriginalCookies:newCookies:
ams_valueForQueryParameter:
processName
sharedAccountsStorefrontConfig
removeObjectForKey:
setStorefrontSuffixes:
bagURLCookies
setBagURLCookies:
_defaultURLCookieNames
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
setURLSession:
_URLSession
_rangeOfTemplateInURLString:
substringWithRange:
_firstVariableInTemplate:includeTags:
stringByReplacingOccurrencesOfString:withString:options:range:
_rangeofSubstringWithOpeningTag:closingTag:inString:
rangeOfString:
rangeOfString:options:range:
URLBySubstitutingVariablesInURLString:usingBlock:
initWithKey:valueType:valuePromise:
initWithKey:valueType:error:
initWithKey:value:valueType:
transformBlocks
setTransformBlocks:
globalBagValueStorage
_valueFromDictionary:forBagKey:
_value:isKindOfValueType:
_processedDefaultValue:
_applyTransformsToValue:index:completion:
valuePromise
initWithTimeout:
bagValueWithKey:valueType:valuePromise:
failingBagValueWithKey:valueType:error:
frozenBagValueWithKey:value:valueType:
transformWithBlock:
valueWithError:
setKey:
setValueType:
_key
_transformBlocks
_globalPromiseStorageAccessQueue
_globalPromiseStorage
promiseWithAll:
binaryPromiseAdapter
promiseWithAny:
finishWithSuccess
backingPromise
cancel
_removeFromGlobalPromiseStorage
finishWithSuccess:error:
resultWithTimeout:error:
waitUntilFinishedWithTimeout:
continueWithBlock:
promiseWithFlattenedPromises:
promiseWithPromise:
setBackingPromise:
_backingPromise
deviceBiometricsState
setDeviceBiometricsState:
deleteKeysWithError:
ACLVersionForConstraints:
isActionSupported:withConstraints:
minimumACLVersionForAction:
preferredAttestationStyle
_deleteKeysWithOptions:error:
ams_valueForHTTPHeader:
performUpdate
task
initWithSession:task:
setPresentationDelegate:
setShouldRequestConfirmation:
purchaseInfo
buyParams
setAdditionalDialogMetrics:
purpose
copyPublicKeyForOptions:error:
_stateHeaderValueForAccount:
originalRequest
challenge
stateForAccount:
sharedConnection
isPasscodeSet
identityMap
initWithDictionary:
initWithAccount:clientInfo:challenge:options:error:
performSignature
deviceState
isIdentityMapValid
setDeviceState:
ACLVersionForAccessControl:
disableForAccount:
handleResponse:session:taskInfo:
headersWithAccount:options:signatureResult:
isActionSupported:withAccessControl:
isAvailableForAccount:
resumptionHeadersFromRequest:
saveIdentityMap
signChallenge:withAccount:clientInfo:options:
_shouldAddBiometricHeader
migrateBiometricStateWithOptions:
_task
securityServiceProxyWithDelegate:
isBiometricsAvailableForAccount:completion:
isIdentityMapValidWithCompletion:
saveIdentityMapWithCompletion:
createAccessControlRefWithOptions:error:
_localAuthOptions
dictionary
localAuthAccessControlRef
setLocalAuthAccessControlRef:
isDualAction
setDualAction:
keychainOptions
localAuthContext
localAuthOptions
_dualAction
_localAuthAccessControlRef
_challenge
_keychainOptions
_localAuthContext
setOriginalRequest:
_originalRequest
request
copyPrivateKeyWithContext:options:error:
evaluateAccessControl:operation:options:reply:
_request
_sendRequestToDaemon
additionalDialogMetrics
shouldGenerateKeysOnly
shouldRequestConfirmation
shouldPromptUser
performBiometricTokenUpdateWithAccount:clientInfo:additionalDialogMetrics:shouldGenerateKeysOnly:shouldRequestConfirmation:completion:
setShouldGenerateKeysOnly:
setShouldPromptUser:
_shouldGenerateKeysOnly
_shouldRequestConfirmation
_shouldPromptUser
_additionalDialogMetrics
setValuePromise:
_valuePromise
initWithString:
_parseBuyParams:
_normalizedDictionary
setNumberStyle:
numberFromString:
doubleValue
stringByRemovingPercentEncoding
valueForKey:
setValue:forKey:
queryItemWithName:value:
setQueryItems:
percentEncodedQuery
sharedPurchaseConfig
setPercentEncodedQuery:
queryItems
buyParamsWithString:
buyParametersForRequest
clear
price
importURLEncodedBuyParams:
setProperty:forKey:
requestDataWithError:
_backingDictionary
_metricsTimestamp
didBiometricsLockout
initWithPaymentSession:
performCardAuthorization
_metricsPost
_metricsUserActionDictionary
confirmationStyle
setConfirmationStyle:
countryCode
setCountryCode:
currencyCode
setCurrencyCode:
metricsEvent
setMetricsEvent:
passSerialNumber
setPassSerialNumber:
passTypeIdentifier
setPassTypeIdentifier:
paymentSession
setDidBiometricsLockout:
didCancelHomeButton
setDidCancelHomeButton:
userActions
setUserActions:
_didBiometricsLockout
_didCancelHomeButton
_confirmationStyle
_countryCode
_currencyCode
_metricsEvent
_passSerialNumber
_passTypeIdentifier
_paymentSession
_userActions
shouldUseApplePayClassicWithBag:
shouldUseAutoEnrollmentWithBag:
copyAccessControlRefWithAccount:options:error:
shouldAttemptApplePayClassicWithBag:accessControlRef:
shouldAttemptAutoEnrollmentWithBag:accessControlRef:
setDefaultPaymentPassIdentifier:
responseDictionary
clearAutoEnrollmentIdentifier
updateAutoEnrollmentIdentifier
uppercaseString
shouldAttemptApplePayClassicWithCountryCode:paymentNetworks:accessControlRef:
shouldSampleWithPercentage:sessionDuration:identifier:
numberWithDouble:
_currentIdentifier
paymentServicesMerchantURL
beginCardEnrollmentAttemptWithBag:account:
finishCardEnrollmentAttemptWithBag:buyParams:purchaseResult:
shouldAttemptAutoEnrollment
shouldAttemptAutoEnrollmentWithCountryCode:
shouldUseAutoEnrollmentWithPercentage:sessionDuration:
_cardEligibilityStatusForCountryCode:
_paymentServicesMerchantURLPromise
_shouldAttemptApplePayWithCountryCode:paymentNetworks:
performCanWriteBillingInfoQueryWithPassTypeIdentifier:serialNumber:
_cardTypeForPassTypeIdentifier:serialNumber:
setDialogOptions:
ams_URLByAppendingQueryParameters:
valueForHTTPHeaderField:
ams_addStoreFrontHeaderForAccount:client:withBag:
_performSilentEnrollmentCheckWithRequest:
addIndexesInRange:
setAllowedStatusCodes:
setResponseDecoder:
setProtocolHandler:
dataTaskWithRequest:completionHandler:
resume
initWithBlock:
initWithCountryCode:
initWithBag:countryCode:
canWriteBillingInfoWithPassTypeIdentifier:serialNumber:completion:
performPaymentSessionEnrollment
performPaymentSessionEnrollmentWithBag:
ams_URLByDeletingTrailingSlash
characterSetWithCharactersInString:
invertedSet
paymentSessionWithCompletion:
paymentSessionWithBag:completion:
_paymentServiceURLStringForMerchantURL:
performPaymentVerificationForPayment:isDefault:
performPaymentVerificationForPayment:isDefault:bag:
verifyPayment:isDefault:completion:
verifyPayment:isDefault:bag:completion:
cardArtwork
cardType
descriptionLong
descriptionShort
paymentNetwork
serialNumber
suffix
setCardArtwork:
setCardType:
setDescriptionLong:
setDescriptionShort:
setPaymentNetwork:
setSerialNumber:
setSuffix:
setDictionary:
_cardArtwork
_cardType
_descriptionLong
_descriptionShort
_paymentNetwork
_serialNumber
_suffix
_dictionary
cardData
brokerURL
paymentServicesURL
_cardData
_brokerURL
_paymentServicesURL
initWithCountryCode:merchantIdentifier:
performCardRegistration
_performCardRegistration
merchantIdentifier
setMerchantIdentifier:
_merchantIdentifier
initWithMaxSize:
initWithCapacity:
accessQueue
buffer
currentIndex
_rearrangeObjects:forCurrentIndex:
_flush
setCurrentIndex:
removeObjectAtIndex:
insertObject:atIndex:
setBuffer:
allObjects
maxSize
setMaxSize:
flush
setAccessQueue:
_maxSize
_accessQueue
_currentIndex
_buffer
dispatchQueue
setDispatchQueue:
_dispatchQueue
buttonActions
dialogPadding
title
minimumDialogWidth
maximumDialogWidth
_createHorizontolLineWithWidth:
_createText:width:centered:omitLeftPipe:
message
textFields
_createTextfieldWithTextfield:width:
_createLinesFromText:width:
substringToIndex:
_printMessage:
_gatherTextfieldInput
automaticButtonSelection
_gatherButtonInput
initWithOriginalRequest:selectedActionIdentifier:
setTextfieldValues:
stringByPaddingToLength:withString:startingAtIndex:
initWithFormat:
text
placeholder
_getUserInput
secure
stringWithUTF8String:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
fileHandleWithStandardInput
availableData
newlineCharacterSet
fileHandleWithStandardOutput
writeData:
present
setMaximumDialogWidth:
setMinimumDialogWidth:
setDialogPadding:
setAutomaticButtonSelection:
_maximumDialogWidth
_minimumDialogWidth
_dialogPadding
_automaticButtonSelection
migrateCommerceAccountsWithOptions:
sharedConnectionAccessQueue
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectProxyWithErrorHandler:
_createXPCConnection
isBuddyRunning
initWithMachServiceName:options:
setSharedConnection:
setInterruptionHandler:
setInvalidationHandler:
ams_removeDeviceOffer:storeClientIdentifier:account:logKey:
interfaceWithProtocol:
setRemoteObjectInterface:
proxyObject
proxyObjectAsync
valueForKeyPath:
kind
label
contentRatingID
contentRatingWithDictionary:
_contentRatingID
_kind
_label
_name
_value
_bagValueForBagKey:bagValueType:
bagContract
_callSelector:onBagContract:
_selectorForBagKey:
methodForSelector:
initWithBagContract:
setBagContract:
_bagContract
methodSignatureForSelector:
selector
invokeWithTarget:
proxyWithDelegate:
forwardInvocation:
sharedAccountsDaemonConfig
invalidate
interruptionHandlers
getDeviceMessengerServiceProxyWithDelegate:replyHandler:
_connectionProxyForAsync:accessBlock:
getPushNotificationServiceProxyWithReplyHandler:
getSecurityServiceProxyWithDelegate:replyHandler:
isFinished
activePromises
_setQueue:
_handleInvalidation
_handleInterruption
interface
deviceMessengerProxyWithDelegate:
pushNotificationService
addInterruptionHandler:
_sharedConnection
_sharedConnectionAccessQueue
_activePromises
_interruptionHandlers
_deviceMessengerClientInterface
setInterface:forSelector:argumentIndex:ofReply:
_deviceMessengerServiceInterface
registerTokensIfNeeded
_securityClientInterface
_securityServiceInterface
deviceMessengerDidReceiveMessage:
deviceMessengerDidReceiveReply:
deviceMessengerDidClearMessage:
deviceMessengerDidUpdateDevices
setClass:forSelector:argumentIndex:ofReply:
getMessagesWithPurpose:completion:
sendMessage:completion:
setClasses:forSelector:argumentIndex:ofReply:
_configureURLPresentationDelegateClasses:
handleResponse:completion:
signedHeadersForRequest:buyParams:completion:
_setUpSecurityInterfaceSignedHeadersSelector:
_setUpSecurityInterfaceHandleResponseSelector:
_setUpSecurityInterfaceBiometricProxy:
bytes
initWithLength:
setLength:
appendBytes:length:
JSONObjectWithData:options:error:
propertyListWithData:options:format:error:
objectWithData:encoding:error:
_dataEncodingFromResponse:
isValidJSONObject:
propertyList:isValidForFormat:
compressedGzippedDataWithData:
decompressedDataWithGzippedData:
objectWithData:response:error:
dataWithObject:encoding:error:
sharedDataMigrationConfig
scenario
previousBuildVersion
currentBuildVersion
migrateDeviceOffersWithOptions:
setLogHARData:
timeIntervalSinceDate:
performMigrationWithOptions:
initWithOptionsArray:
_stringFromOptionsArray:atIndex:
optionsArray
setCurrentBuildVersion:
setPreviousBuildVersion:
setScenario:
_currentBuildVersion
_previousBuildVersion
_scenario
_boolForKey:defaultValue:
_integerForKey:defaultValue:
_valueForKey:domain:
_valueForKey:
_boolForKey:defaultValue:domain:
_setBool:forKey:
_setInteger:forKey:
_setValue:forKey:domain:
_setValue:forKey:
_setBool:forKey:domain:
dateByAddingTimeInterval:
_randomDouble
ams_cachesDirectory
URLByAppendingPathComponent:
_integerForKey:defaultValue:domain:
first
second
initWithUsername:password:
performTask
allowDuplicateAccounts
alwaysSendCacheBuster
alwaysSendGUID
applePayClassic
authenticationStarted
cardEnrollmentAutomatic
cardEnrollmentManual
cardEnrollmentSilent
cardEnrollmentUpsell
defaultPaymentPassIdentifier
deviceBiometricIdentities
deviceOfferEligibility
deviceOffersSerialNumber
didRetrieveDeviceOffers
didRetrieveDeviceOffersEligibility
didRetrieveTVOffers
disableHARLogging
disableStubbedMarketingItems
enableCameraRedeem
enableFullDeviceOffersRetrieval
enablePurchaseQueue
enableRemoteSecuritySigning
forceEngagementPurchaseSuccess
forceLoadUrlMetrics
harURLFilters
ignoreServerTrustEvaluation
includeFullRequestInHARLogging
includeFullResponseInHARLogging
journeysURLOverride
logHARData
marketingItemOverrides
mediaTokenOverride
mediaTokens
mescalCertExpiration
metricsCanaryIdentifier
metricsTimingWindowStartTime
migratedDeviceOffers
migratedToNewCookieStorage
multiUserContainerID
perfomedDeviceOfferSetup
pushEnvironment
QAMode
reversePushEnabled
showSandboxAccountUI
showSpyglassPurchases
sourceOverrides
UIURLOverrides
useNewAccountStore
setAllowDuplicateAccounts:
setAlwaysSendCacheBuster:
setAlwaysSendGUID:
setApplePayClassic:
setAuthenticationStarted:
setBagOverrides:
setCardEnrollmentAutomatic:
setCardEnrollmentManual:
setCardEnrollmentSilent:
setCardEnrollmentUpsell:
setDeviceBiometricIdentities:
setDeviceOfferEligibility:
setDidRetrieveDeviceOffersEligibility:
setDidRetrieveDeviceOffers:
setDidRetrieveTVOffers:
setDisableHARLogging:
setDisablePrivacyAcknowledgement:
setDisableStubbedMarketingItems:
setEnableCameraRedeem:
setEnableFullDeviceOffersRetrieval:
setEnablePurchaseQueue:
setEnableRemoteSecuritySigning:
setForceLoadUrlMetrics:
setForceEngagementPurchaseSuccess:
setIgnoreServerTrustEvaluation:
setIncludeFullRequestInHARLogging:
setIncludeFullResponseInHARLogging:
setJourneysURLOverride:
setHarURLFilters:
setMarketingItemOverrides:
setMediaTokenOverride:
setMediaTokens:
setMescalCertExpiration:
setMetricsCanaryIdentifier:
setMetricsTimingWindowStartTime:
setMigratedDeviceOffers:
setMigratedToNewCookieStorage:
setPerfomedDeviceOfferSetup:
setPushEnvironment:
setQAMode:
setReversePushEnabled:
setShowSandboxAccountUI:
setSourceOverrides:
setUIURLOverrides:
cleanupSampleSessions
shouldSampleWithPercentageValue:sessionDurationValue:identifier:
syncWithBlock:
updateBadgeIdsForBundle:block:
ss_ignoreServerTrustEvaluation
allowUpsellEnrollmentForAppliedAccounts
demoAccount
extendedBiometricACLVersion
primaryBiometricACLVersion
setAllowUpsellEnrollmentForAppliedAccounts:
setDemoAccount:
setExtendedBiometricACLVersion:
setPrimaryBiometricACLVersion:
useNewCookieStorage
appleMusicDeviceOfferDeepLink
iCloudDeviceOfferDeepLink
apsEnabledPatterns
apsSamplingPercent
apsAllowedProductTypes
guidRegexes
guidSchemes
mescalContract
storefrontSuffix
TLSSamplingPercentage
TLSSamplingSessionDuration
TFOSamplingPercentage
TFOSamplingSessionDuration
trustedDomains
metricsContract
metricsURL
metricsDictionary
metricsUrl
mescalCertificateURL
mescalSetupURL
mescalPrimingURL
mescalSignedActions
mescalSignSapRequests
mescalSignSapResponses
personalizedLookupURL
unpersonalizedLookupURL
deviceIsAudioAccessory
standardUserDefaults
firstObject
language
startListeningForDeviceLanguageChangeWithBagContract:
stopListeningForDeviceLanguageChange
offersSetFromArray:
deviceOffers
offerType
setWithSet:
postDeviceOfferFollowUpWithIdentifier:account:priority:bag:logKey:
_performAuth
tearDownAllDeviceOfferFollowUpsForAccount:logKey:
offerIdentifier
postAllDeviceOfferFollowUpsForAccount:priority:bag:logKey:
_setDeviceEligibilityKeepingExistingDeviceOffers:offersStore:
saveDeviceOffers:
_setRawDeviceOffers:offersStore:
shouldPresentSetupOffersForAccount:issues:
isEligibleForOffers
dictionaryWithDictionary:
_shouldPostOffersUpdatedNotification:oldOffers:
setDeviceOffers:
ams_dictionaryUsingTransform:
expressedIntent
isGift
deviceOffersContainType:
deviceOffersForType:
registerCompanionWithSerialNumber:bag:
removeDeviceOfferWithIdentifier:account:bag:logKey:
saveDeviceOffersForAccount:response:logKey:
saveDeviceOfferEligibility:
setDeviceOffersCheckEncodingForRequestParameters:
shouldPresentSetupOffersForAccount:
tearDownDeviceOfferFollowUpWithIdentifier:account:logKey:
_followUpItemWithIdentifier:account:priority:bag:
_notificationIdFromFollowUpId:account:
postAllDeviceOfferFollowUpsForAccount:priority:bagContract:logKey:
postDeviceOfferFollowUpWithIdentifier:account:priority:bagContract:logKey:
registerCompanionWithSerialNumber:
removeDeviceOfferWithIdentifier:account:bagContract:logKey:
deviceIsiPad
isRunningInStoreDemoMode
suppServicesEvent:event:settingsType:data:
spcUnlockSuccessful:
phoneBookSelected:
phoneBookFetched:
phoneBookWritten:
phoneBookError:
phoneNumberAvailable:
phoneNumberChanged:
suppServicesStarted:
suppServicesCompleted:
suppServicesError:error:
initWithProtocol:
implementOptionalInstanceMethodWithSelector:block:
initWithQueue:
getActiveContexts:
voicePreferred
findForUuid:
context
getPhoneNumber:error:
number
stringByAppendingPathComponent:
initWithContentsOfFile:
numberWithUnsignedLongLong:
componentsJoinedByString:
biometricState
setBiometricState:
buildVersion
compatibleProductType
deviceName
hardwarePlatform
isSecureElementAvailable
localIPAddress
macAddress
macAddressData
MLBSerialNumber
phoneNumber
productType
ROMAddress
screenScale
screenHeight
screenWidth
thinnedAppVariantId
uniqueDeviceId
deviceIsAppleTV
deviceIsAppleWatch
deviceIsiPhone
deviceIsiPod
deviceIsMac
_dataForNVRAMKey:
_systemVersionDictionary
deviceIsInternalBuild
deviceIsSeedBuild
filter
setFilter:
block
setBlock:
_filter
_block
setMessageType:
queue
updateHandlers
_getProxyObject
matchesMessage:
_identifierFromDialogRequest:
allPairedDevices
initWithIdentifier:destination:purpose:object:
_sendDelegateUpdateForMessage:
addUpdateHandlerForType:filter:handler:
dialogsWithFilter:
clearDialog:
sendDialog:account:
connection
setConnection:
setQueue:
setUpdateHandlers:
_proxyObject
_connection
_queue
_updateHandlers
messageType
deviceType
origin
setDeviceType:
_deviceType
_messageType
ams_mapWithTransformIgnoresNil:
initWithOfferIdentifier:
adamId
isDowngrading
isSubscribed
serialNumbers
setAdamId:
setDescription:
setDowngrading:
setOfferIdentifier:
setSubscribed:
_downgrading
_subscribed
_adamId
_description
_serialNumbers
_offerIdentifier
setLightweightCheckOnly:
_deviceOffersURL
_urlRequestWithBagURL:
_requestParameters
requestByEncodingRequest:parameters:
_updateWithDeviceOffers:
lightweightCheckOnly
offerIdentifiers
_bucketedOffers:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
_latestOffersWithFetchedDeviceOffers:offersStore:
requestWithURL:
_urlRequestMethod
setHTTPMethod:
ams_addRequestTimestampHeader
setOfferIdentifiers:
_lightweightCheckOnly
_offerIdentifiers
dialogWithTitle:message:style:
initWithTitle:message:style:
buttons
setButtons:
setTextFields:
dialogWithTitle:message:
addButton:
addTextField:
presentFromViewController:
presentSheetFromWindow:
presentSystemDialog
completionHandler
setCompletionHandler:
icon
setIcon:
setMessage:
selectedButtonIndex
setSelectedButtonIndex:
_systemDialogQueue
_buttons
_completionHandler
_icon
_message
_selectedButtonIndex
_style
_textFields
_title
UUID
actionWithTitle:identifier:
actionWithTitle:
setIdentifier:
deepLink
dialogRequest
underlyingDictionary
inferLinkDestination
encodeBool:forKey:
shouldRetry
decodeBoolForKey:
ams_JSONClasses
initWithUnderlyingDictionary:
setDeepLink:
setDialogRequest:
setRequest:
setInferLinkDestination:
setShouldRetry:
actionWithTitle:style:
_inferLinkDestination
_shouldRetry
_deepLink
_identifier
_dialogRequest
initWithTitle:style:handler:
buttonWithTitle:style:handler:
buttonWithTitle:handler:
handler
setHandler:
_handler
ams_title
ams_message
initWithTitle:message:
defaultAction
setButtonActions:
setDefaultAction:
setObject:atIndexedSubscript:
requestWithTitle:message:
initWithError:
addButtonAction:
locateActionWithIdentifier:
replaceAction:
_buttonActions
_defaultAction
ams_AppleMediaServicesBundle
localizedStringForKey:value:table:
initWithAccount:session:task:
setTask:
selectedActionIdentifier
textfieldValues
setSelectedActionIdentifier:
_selectedActionIdentifier
_textfieldValues
setPlaceholder:
setSecure:
keyboardType
textFieldWithPlaceholder:secure:
setKeyboardType:
setTag:
setText:
_secure
_keyboardType
_placeholder
_tag
_text
head
next
listIdentifier
exceptionWithName:reason:userInfo:
tail
setTail:
setHead:
setPrevious:
setNext:
setListIdentifier:
initWithObject:
appendNode:
insertNode:
previous
allNodes
appendObject:
insertObject:
removeAllNodes
removeNode:
_count
_head
_tail
_listIdentifier
setObject:
_previous
_object
_next
_connectionErrorNotification
_manageRunningPromise:
loadFromDisk
_scheduleSyncIfNeeded:
destinationsForEvent:
cachedResponseDataForEvent:
timeIntervalSinceNow
setEvents:
setTimeout:
setDestinations:
proxy
actions
_parseActions:
setActions:
enqueueWithRequest:completion:
syncWithRequest:completion:
_removeRunningPromise:
runningPromises
_connectionQueue
postNotificationName:object:
setErrorHandler:
_failAllRunningPromisesWithError:
lastSyncedBuild
sync
enqueueData:
_createCombinedLogKey
setRunningPromises:
_runningPromises
initWithCacheObject:
cachedResponses
exportObject
cacheKey
whitelist
initWithIdentifier:cacheObject:
setCachedResponses:
setWhitelist:
_cachedResponses
_whitelist
dateWithTimeIntervalSince1970:
_shouldEvictDefinition:created:
definition
created
matchEvent:toFilter:
initWithData:cacheInfo:
responseData
matchesEvent:
_created
_definition
regularExpressionWithPattern:options:error:
rangeOfFirstMatchInString:options:range:
initWithFilter:allowsResponse:
allowsResponse
_registerNotifications
_sharedQueue
_fetchClientData
_assertEngagementd
apps
setAllowsResponse:
ams_engagementDirectory
defaultManager
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
removeItemAtPath:error:
writeToFile:atomically:
setApps:
dataWithContentsOfURL:options:error:
_isDaemon
addCachedResponseData:cacheInfo:appIdentifier:
setWhitelists:appIdentifier:
saveToDisk
_cleanUpApps
setLastSyncedBuild:
_lastSyncedBuild
_apps
_newRemoteConnection
_removeRemoteConnection
archiveClasses
errorHandler
setProxy:
_proxy
_errorHandler
initWithIdentifier:
_allowsResponse
destinations
events
timeout
encodeDouble:forKey:
decodeDoubleForKey:
_destinations
_events
_timeout
_actions
clientData
failOnDismiss
metricsOverlay
setClientData:
setFailOnDismiss:
setMetricsOverlay:
setURL:
_failOnDismiss
_clientData
_metricsOverlay
_URL
setContext:
_context
_propertyForKey:defaultValue:expectedType:
maxBufferSizeOverride
_setProperty:forKey:
setMaxBufferSizeOverride:
_accessDataStoreUsingBlock:
HARLoggingEnabled
HARLoggingItemLimit
processAssertionsEnabled
setBagKeyRegistrationEnabled:
setHARLoggingEnabled:
setHARLoggingItemLimit:
setProcessAssertionsEnabled:
bundleForClass:
initWithFormat:locale:arguments:
error
setError:
_error
_notificationPayloadWithAccountPairs:
downloaderAccountID
familyID
purchaserAccountID
initWithObjectsAndKeys:
postDistributedNotificationWithAccountPairs:
initWithDownloaderAccountID:purchaserAccountID:familyID:
_downloaderAccountID
_familyID
_purchaserAccountID
_familyMembersFromDictionaryRepresentation:
familyMembers
dictionaryRepresentation
isHeadOfHouseholdSharingPayment
isCached
null
initWithDictionaryRepresentation:
iCloudDSID
iTunesDSID
setCurrentSignedInUser:
firstName
isCurrentSignedInUser
localizedCaseInsensitiveCompare:
sortedArrayUsingComparator:
initWithDictionaryRepresentation:cached:
_cached
_headOfHouseholdSharingPayment
_familyMembers
_performFamilyInfoRequestForAccount:error:
_processURLResult:
_cachedFamilyInfoLookupResultForAccount:
_cacheFamilyInfoLookupResult:forAccount:
_pathForCachedFamilyInfoLookupResult
writeToFile:options:error:
_currentCachedFamilyInfo
lastObject
pathWithComponents:
performFamilyInfoLookup
isAskToBuyEnabled
isSharingPurchases
iCloudUsername
iTunesUsername
lastName
_askToBuyEnabled
_currentSignedInUser
_sharingPurchases
_firstName
_iCloudDSID
_iCloudUsername
_iTunesDSID
_iTunesUsername
_lastName
_fetchEnabledFeatures
sortedArrayUsingSelector:
dateWithTimeIntervalSinceNow:
ams_arrayUsingTransform:
allFlagGroupsIncludingHidden:
feature
flagForFeature:domain:
setUserEnabled:
shared
stateForFeature:domain:level:
addNewITFEFeaturesWithNames:
setNonProfileITFEFeatureName:toValue:
enableFeature:domain:level:
disableFeature:domain:level:
commitUpdates:
contentsOfDirectoryAtPath:error:
stringByDeletingPathExtension
dictionaryWithContentsOfFile:
setHidden:
isHidden
setTestable:
setITFE:
setDisplayName:
setFeatureDescription:
setFeature:
setDomain:
setFlagGroup:
stateForFeature:domain:
setEnabled:
setDefaultEnabled:
flagGroupWithName:includingHidden:
setFlagGroup:enabled:error:
isTestable
isDefaultEnabled
fetchProfileITFEFeatures
fetchITFEFeatures
enableFlagForFeature:domain:error:
disableFlagForFeature:domain:error:
allFlagGroups
flagGroupWithName:
enableFlagGroup:error:
disableFlagGroup:error:
displayName
featureDescription
ITFE
flagGroup
isEnabled
isUserEnabled
_testable
_enabled
_defaultEnabled
_userEnabled
_hidden
_feature
_displayName
_featureDescription
_domain
_ITFE
_flagGroup
initWithTaskInfo:
setKind:
setCreditString:
_performCreditDisplayUpdate
_performOpenAppURL
_performGotoURL
_performOpenStandardURL
creditString
taskInfo
logUUID
redirectActionWithURL:
openStandardURL:
openURL:clientInfo:bag:
actionWithActionDictionary:taskInfo:
actionWithUpdatedCreditString:account:taskInfo:
performWithTaskInfo:
setTaskInfo:
_creditString
_taskInfo
valueForProtocolKey:inResponse:
initWithResponseDictionary:kind:taskInfo:
authenticationTypeForResponse:responseDictionary:
_authenticateRequestWithAuthType:taskInfo:dialogResponse:
ams_statusCode
_performAuthRequest:actionResult:redirectURL:taskInfo:
dialogResponse
_locateActionableButtonUsingDialogResponse:
ams_rawURL
authenticateRequest
dialogOptions
ams_headers
ams_actionType
ams_subtarget
_presentAuthRequest:taskInfo:
actionWithError:
_handleDialogFromAuthError:taskInfo:
_updateTaskWithAuthedAccount:taskInfo:
_updateTaskWithLastCredentialSource:taskInfo:
ams_URLType
handleDialogResult:taskInfo:
setDialogResult:
setAuthenticateResult:
setUpdatedHeaders:
performFinanceDialog:taskInfo:
setPreviousAuthorizationCredentialSource:
previousAuthorizationCredentialSource
performAuthFromResponse:taskInfo:
initWithResponseDictionary:taskInfo:
dialogDictionary
setDialogDictionary:
_authenticateRequest
_dialogDictionary
_dialogResponse
ams_buttonDictionary
ams_setButtonDictionary:
ams_setActionType:
ams_buyParams
ams_commerceUIURL
ams_resolvedInterruption
ams_setBuyParams:
ams_setCommerceUIURL:
ams_setResolvedInterruption:
ams_setSubtarget:
ams_setRawURL:
ams_setURLType:
_createDialogRequest
_credentialSource:satisfiesAuthenticationType:
isVerifyPurchasePayload:
_stashTIDContinueHeadersForResult:info:
_presentEngagementForResult:taskInfo:
_updatedDialogResultFromResult:engagementResult:error:
setRunMode:
setProxyBundleId:
proceedAction
_shouldSendOverIDS:taskInfo:
_presentIDSDialog:taskInfo:
_presentDialog:taskInfo:
_actionTypeFromButtonDictionary:
_isCommerceUIURL:actionType:URLType:
_URLForCommerceUIFromURL:tidContinue:
ams_replacingPatternWithUsername:
_enrichedMetricsDictionaryWithFinanceDictionary:
_createRequestButtonsFromDialogDictionary:
_createActionFromButtonDictionary:title:
isCommerceUIURL:
_isTinkerMode
currentRequest
stashResumptionHeaders:
activePairedDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
valueForProperty:
ams_URLByReplaceingQueryParameters:
dialogKindForTaskInfo:withResponseDictionary:
containsCommerceUIURL
_containsCommerceUIURL
_responseDictionary
_createRequestFromDictionary:confirmationOnly:authenticateResponse:taskInfo:
_createMerchantSessionFromDictionary:
setMerchantSession:
biometricsRequest
paymentSheetRequest
setMetricsDictionary:
setPurchaseInfo:
requiresAuthorization
authenticateResponse
passwordEquivalentToken
signatureResult
initWithBase64EncodedString:options:
setRequiresAuthorization:
setBiometricsRequest:
setShouldUppercaseText:
setTitleType:
setAccountHeader:
accountHeader
localizedUppercaseString
setPrice:
setDisplayPrice:
displayPrice
setExplanation:
shouldUppercaseText
setLabel:
setPriceSectionItems:
_payeeForRequestorValue:
setPayee:
_payeeInferredFromEnumeratedTitle:
setSalableIconURL:
_salableIconForString:
setSalableIcon:
setStoreName:
storeName
setRatingHeader:
setRatingValue:
ratingHeader
ratingValue
_confirmationTitleForString:
setConfirmationTitle:
setPaymentSummary:
paymentSummary
_flexListDictionaryForValues:account:shouldUppercaseText:
setPreSheetDialog:
setSalableInfo:
salableInfo
arrayWithArray:
_attributedStringForSalableInfoStringArray:account:shouldUppercase:
setSalableInfoLabel:
initWithURLString:
setInlineImages:
setFlexList:
_attributedListDictionaryForValues:account:
setAttributedList:
_attributedStringForAttributedDictionary:account:
_attributedStringForAttributedArray:account:
_attributedStringForStringArray:useGrey:account:shouldUppercase:
titleType
ams_replacingMarkupUsingAccount:shouldUppercase:
appendAttributedString:
initWithAttributedString:
addAttribute:value:range:
_greyAttributedStringForAttributedString:range:
initWithResponseDictionary:confirmationOnly:taskInfo:
_authenticateResponse
_metricsDictionary
_paymentSheetRequest
_valueForProtocolKey:
dialogKind
_performerForAuthenticate
_performerForDialog
_performerForPaymentSheet
ams_addNullableObject:
_performerForActionDictionary
_performerForCreditDisplay
arrayWithObjects:
array
numberWithLong:
cachedAuthenticateResponse
setCachedAuthenticateResponse:
cachedDialogResponse
initWithPayload:taskInfo:
setCachedDialogResponse:
cachedPaymentSheetResponse
setCachedPaymentSheetResponse:
initWithTaskInfo:decodedObject:
pingURLs
serverError
supportedProtocolVersion
versionMismatchURL
setResponseDictionary:
_cachedAuthenticateResponse
_cachedDialogResponse
_cachedPaymentSheetResponse
_dialogKind
_verifyTypeFromPayload:
_dialogRequestForCVVFromPayload:verifyType:
_dialogRequestForCarrierFromPayload:verifyType:
verifyType
_handleCVVDialogResult:shouldReattempt:
_handleCarrierDialogResult:shouldReattempt:
_runCarrierNewCodeWithError:
_runCarrierVerifyCode:error:
_runCVVRequestForCode:error:
setParentTask:
setVerifyType:
_verifyType
backingIdentifier
clearFollowUpWithBackingIdentifier:
followUpQueue
sharedFollowUpConfig
backingIdentifierForIdentifier:account:
pendingFollowUps
_pendingFollowUpWithBackingIdentifier:error:
shouldOverwriteItem:
priority
clearFollowUpItem:
clearFollowUpWithIdentifier:account:
pendingFollowUpsForAccount:
pendingFollowUpWithIdentifier:account:
postFollowUpItem:
setFollowUpQueue:
_followUpQueue
internalQueue
initWithURL:
setHTTPBody:
_setUserInfoProperty:forKey:
HTTPMethod
actionQueue
requiresFollowUpUI
shouldClear
parentIdentifier
eventFromMetricsDictionary:
internalInstanceUsingBag:
enqueueEvent:
initWithLabel:parentIdentifier:
initWithAction:parentIdentifier:
performActionsWithBag:account:
preferredClient
setParentIdentifier:
setPreferredClient:
setRequiresFollowUpUI:
setShouldClear:
postMetricsWithBag:
initWithLabel:
initWithAction:
performActionsWithContract:account:
postMetricsWithBagContract:
setUrl:
setBackingIdentifier:
setInternalQueue:
setActionQueue:
_url
_backingIdentifier
_internalQueue
_actionQueue
componentsFromBackingIdentifier:
initWithIdentifier:account:priority:
active
groupIdentifier
setPriority:
displayStyle
setDisplayStyle:
footer
setFooter:
informativeText
setInformativeText:
shouldPostNotification
setShouldPostNotification:
metricsQueue
setMetricsQueue:
_shouldPostNotification
_displayStyle
_footer
_informativeText
_metricsQueue
addPropertiesWithDictionary:
distantFuture
initWithAction:account:bag:
purchase
uniqueIdentifier
_fraudScoreCacheAccessQueue
_fraudScoreCache
initWithPurchaseInfo:bag:
cachedFraudScoreForPurchaseInfo:
cacheFraudScore:forPurchaseInfo:
_deviceSupportsFraudScores
_generateFraudScore
_serverEndpointIdentifierForFraudScoreAction:
runTask
action
_action
result
_handleAskPermissionRequestWithURL:account:
proxyBundleId
addRequestWithURL:account:completion:
initWithRequest:result:error:bag:
_proxyBundleId
_result
metrics
_createJSONObjectForTaskMetrics:requestData:responseData:
transactionMetrics
initWithJSONObject:
ams_compressedData
backingJSONData
isCompressed
ams_decompressedData
ams_compressWithAlgorithm:
merge:withEstimatedFileSizeLimit:
_createJSONObjectForEntries:
directory
enumeratorAtPath:
_timeIntervalFromFilename:
fileURLWithPath:
writeToURL:options:error:
currentBundleInfo
_generateCommentsStringForMetrics:
_generateRequestDictionaryForMetrics:requestData:
_generateResponseDictionaryForMetrics:responseData:
responseEndDate
requestStartDate
systemTimeZone
_dateFormatterForTimeZone:
fetchStartDate
stringFromDate:
setDateFormat:
localeWithLocaleIdentifier:
setLocale:
setTimeZone:
objectForKey:withCreationBlock:
_apsRelayAttempted
_apsRelaySucceeded
expectedContentLength
MIMEType
_generateHeadersArrayForHTTPHeaders:
_generateContentDictionaryForResponse:responseData:
resourceFetchType
statusCode
localizedStringForStatusCode:
scannerWithString:
scanDouble:
merge:
removeHTTPArchiveFilesOlderThanDate:
initWithURLTaskInfo:
initWithMetrics:requestData:responseData:
writeToDiskWithError:compressed:
urlString
setBackingJSONData:
setCompressed:
JSONData
setUrlString:
_compressed
_backingJSONData
_JSONData
_urlString
_updateMaxBufferSize
_updateHarFileFilters
_disabled
_shouldAddRequest:
keepAliveWithName:style:block:
isRemoveDisabled
lastKnownStatus
setRemoveDisabled:
_harURLFilters
initialize
addHTTPArchive:
_writeHTTPArchivesToDiskCompressed:
UTF8String
_initWithProtocol:
pointerValue
_implementMethodWithSelector:isRequired:isInstance:block:
protocol
decimalDigitCharacterSet
ams_stringByRemovingCharactersInSet:
implementations
valueWithPointer:
implementOptionalClassMethodWithSelector:block:
implementRequiredClassMethodWithSelector:block:
implementRequiredInstanceMethodWithSelector:block:
setImplementations:
setProtocol:
_implementations
_protocol
ams_assertionCount
setAms_assertionCount:
_ams_assertionCount
initWithName:
initWithName:style:
keepAliveWithName:style:
_takeOSTransaction
_takeProcessAssertion
_startLogTimer
_removeProcessAssertion
_removeOSTransaction
_cacheKey
valid
_accessAssertionCache:
_assertionName
boolForEntitlement:
initWithPID:flags:reason:name:
_handleAssertionExpiration
acquire
keepAliveWithFormat:
keepAliveWithName:
_transaction
fairplayContextWithError:
_getFairplayContext:
importKeybagWithData:error:
keybagSyncDataWithAccountID:transactionType:error:
_destroyContext
fairplayContext:
importKeybagData:outError:
keybagSyncData:transactionType:outError:
kybsyncData:transationType:error:
resetContext
fairPlayContextID
setFairPlayContextID:
_fairPlayContextID
certificateKeychainLabelsForOptions:
sharedKeychainConfig
numberWithInt:
_certificatePrivateKeyLabelForOptions:
keychainLabelForOptions:
_copyLegacyPublicKeyForOptions:error:
_generateLegacyKeypairForOptions:error:
_copyLegacyPrivateKeyForOptions:error:
_resumptionHeadersQuery
_deleteResumptionHeaders
sharedMediaConfig
_legacyAttestationForOptions:error:
clientCertLabel
intermediateCertLabel
copyCertificatePrivateKeyWithContext:account:options:error:
copyPrivateKeyWithContext:account:options:error:
_primaryConstraintsWithOptions:
_extendedConstraintsWithOptions:
_primaryConstraints
_primaryConstraintsForMac
_primaryConstraintsForWatch
prompt
copyPublicKeyForAccount:options:error:
storePrimaryCert:intermediateCert:privateKey:options:error:
performForwardKeyMigrationForDSID:forceMigration:
resumptionHeaders
authenticationFallbackVisible
displayAuthenticationReason
_compareString:withString:
setClientCertLabel:
setIntermediateCertLabel:
setAuthenticationFallbackVisible:
setDisplayAuthenticationReason:
setPrompt:
_regenerateKeys
_authenticationFallbackVisible
_displayAuthenticationReason
_clientCertLabel
_intermediateCertLabel
_purpose
_prompt
_runBlock
resultBeforeDate:error:
stateLock
lock
condition
unlock
executedBlock
setExecutedBlock:
startTimeout:
initWithTimeout:block:
_executedBlock
debugLogsEnabled
componentsWithURL:resolvingAgainstBaseURL:
query
setQuery:
currentThread
threadDictionary
_createLogConfigWithSubsystem:category:
_createLogConfigWithBaseConfig:subystem:category:
_debugLogsEnabled:
propertyAccessQueue
backingOSLogObject
subsystem
category
setBackingOSLogObject:
setCategory:
setSubsystem:
sharedDeviceOffersConfig
sharedAccountsLogoutConfig
sharedAccountsMigrationConfig
sharedAccountsMigrationConfigOversize
sharedAccountsMultiUserConfig
sharedAccountsNotificationPluginConfig
sharedAccountsSyncPluginConfig
sharedBagCacheConfig
sharedMarketingItemConfig
sharedPushNotificationConfig
sharedRatingsProviderConfig
sharedUserNotificationConfig
sharedMediaServiceOwnerConfig
setPropertyAccessQueue:
_category
_subsystem
_backingOSLogObject
_propertyAccessQueue
initWithResult:dictionary:
resultFromResult:error:
contract
signatureType
setMescalType:
_compileQueryParametersWithBundleIds:itemIds:
_addJSSignatureToRequest:
initWithConfiguration:
finishTasksAndInvalidate
version
caller
mainBundle
imageProfile
keyProfile
platform
initWithBagContract:caller:keyProfile:
initWithBag:caller:keyProfile:
performLookupWithBundleIdentifiers:itemIdentifiers:
setContract:
setCaller:
setImageProfile:
setKeyProfile:
setPlatform:
setSignatureType:
setVersion:
setLanguage:
_caller
_imageProfile
_keyProfile
_platform
_signatureType
_version
_language
initWithObjects:
initWithArtworkDictionary:
initWithLookupDictionary:
floatValue
artistName
artwork
categoryNames
isPOIBased
itemKind
iTunesStoreIdentifier
numberOfUserRatings
numberOfUserRatingsForCurrentVersion
offerName
offers
productPageURL
userRating
userRatingForCurrentVersion
itemDictionary
_itemDictionary
alpha
setAlpha:
blue
setBlue:
green
setGreen:
setRed:
_alpha
_blue
_green
_red
artworkDictionary
URLString
replaceCharactersInRange:withString:
colorWithKind:
width
height
URLWithHeight:width:cropStyle:format:
_artworkDictionary
lookupDictionary
actionTextForType:
buyParameters
formattedPrice
subscriptionType
_lookupDictionary
initWithResult:
_enumerateItemsWithBlock:
allItems
appStoreURLWithReason:initialIndex:
itemForKey:
_response
backingDictionary
backingList
_addObject:forKey:
_removeObjectForKey:
initWithKey:object:
allObjectsAndKeys
setBackingDictionary:
setBackingList:
_backingList
_initWithClient:processInfo:
compare:options:
initWithBundleIdentifier:
_clientNameFromProcessInfo:
_clientVersionFromProcessInfo:clientName:
_accountMediaTypeForClientName:bundleID:
executableName
bundleWithPath:
infoDictionary
setBundleIdentifier:
setClientName:
setClientVersion:
setScheme:
secureScheme
setSecureScheme:
_bundleIdentifier
_clientName
_clientVersion
_scheme
_secureScheme
_accountMediaType
rawValues
videos
badge
campaignID
itemID
itemActions
relatedContent
subtitle
templateID
abSettings
endDate
renderingAttributes
tagline
video
_rawValues
_serviceNames
_servicesData
_serviceComponentsFromMap:withNames:
callToActionLabel
disclaimerText
isDefault
isFamily
isRecommended
offerID
priceDiff
priceDiffForDisplay
priceForDisplay
serviceComponents
valuePropDetail
valuePropInfo
dismissLabel
freeTrialPeriod
inAppID
introOfferPeriod
introOfferPrice
introOfferPriceForDisplay
isYearly
priceFormatted
priceString
recurringSubscriptionPeriod
setRawValues:
artworkURL
selectionFromRawMarketingItems:
selectionFromRawMarketingItems:serviceType:placement:
_rawMarketingItemSelectionFromRawMarketingItems:serviceType:placement:engagementService:
selectionFromMarketingItems:
stubForServiceType:placement:
initWithBag:clientIdentifier:clientVersion:placement:serviceType:
_fetchItems
placement
contextInfo
hydrateRelatedContent
urlWithServiceType:placement:bag:hydrateRelatedContents:additionalParameters:
_fetchItemsFromURL:
propertiesForMarketingItemTask:
tokenService
initWithTokenService:bag:
_processMediaResultFromPromise:
initWithAccount:bag:clientIdentifier:clientVersion:placement:serviceType:
performWithFetchOnly
setContextInfo:
clientIdentifier
setHydrateRelatedContent:
includeMediaAssets
setIncludeMediaAssets:
_hydrateRelatedContent
_includeMediaAssets
_contextInfo
_clientIdentifier
_placement
_realmOverridesFromBag:
_realmFromBag:
_formattedURLPathWithBag:
_languageTagFromBag:fallback:
queryItemsFromDictionary:
_additionalQueryItems
setHost:
setPath:
devicePlatform
initWithName:value:
_stringForKey:fromBag:
_urlPathFromBag:
_countryCodeFromBag:
_qualityForFormat:
URLWithSize:cropStyle:format:quality:
replaceOccurrencesOfString:withString:options:range:
artworkSize
URLWithSize:
URLWithSize:cropStyle:format:
handleResponse:task:
taskInfoForTask:
invalidateMediaToken
fetchMediaToken
tokenString
initWithTokenService:
_tokenService
requestEncoder
disableResponseDecoding
responseDecoder
urlKnownToBeTrusted
setDisableResponseDecoding:
setAdditionalMetrics:
setMaxRetryCount:
isValid
requestByEncodingRequest:parameters:error:
URLKnownToBeTrusted
setURLKnownToBeTrusted:
requestWithComponents:
disableAccountMediaTypeComponent
setDisableAccountMediaTypeComponent:
_disableAccountMediaTypeComponent
_requestEncoder
initWithIndexesInRange:
containsIndex:
responseDataItems
_propertiesForClientIdentifier:bag:URLKnownToBeTrusted:
defaultSessionConfiguration
initWithClientIdentifier:bag:
sharedPropertiesMapTable
_initWithClientIdentifier:bag:URLKnownToBeTrusted:
mapTableWithKeyOptions:valueOptions:
invalidateAndCancel
propertiesForMediaTask:
propertiesForRatingsTask:
configForType:
initWithConfig:clientVersion:bag:
additionalPlatforms
setAdditionalPlatforms:
additionalQueryParams
setAdditionalQueryParams:
bundleIdentifiers
setBundleIdentifiers:
charts
setCharts:
filters
setFilters:
includedResultKeys
setIncludedResultKeys:
itemIdentifiers
setItemIdentifiers:
searchTerm
setSearchTerm:
build
initWithType:clientIdentifier:clientVersion:bag:
_charts
_URLKnownToBeTrusted
_additionalPlatforms
_additionalQueryParams
_bundleIdentifiers
_filters
_includedResultKeys
_itemIdentifiers
_searchTerm
initWithType:typeString:hostBagKey:includePlatform:
hostBagKey
includePlatform
typeString
_includePlatform
_hostBagKey
_typeString
_verifyConfiguration
_hostPromise
_pathPromise
_queryItems
_addBundleIdentifiers:
_addCharts:
_addItemIdentifiers:
_addSearchTerm:
config
_devicePlatform
arrayByAddingObjectsFromArray:
_config
initWithString:expirationDate:lifetime:valid:
lifetime
isEqualToDate:
initWithString:expirationDate:lifetime:
invalidCopy
percentageOfLifetimeRemaining
willExpireWithin:
_valid
_lifetime
_tokenString
initWithClientIdentifier:keychainAccessGroup:bag:
initWithBaseSleepInterval:maxSleepInterval:
initWithClientIdentifier:keychainAccessGroup:
tokenStore
retrieveToken
keychainAccessGroup
storeToken:
setKeychainAccessGroup:
_fetchBagProperties
cachedMediaToken
_shouldReturnMediaToken:
_refreshMediaTokenIfNeeded:
_fetchToken
setCachedMediaToken:
throttler
setBaseSleepInterval:
setMaxSleepInterval:
setRefreshPercentage:
setRefreshTime:
tokenFetchQueue
shouldThrottle
_tokenRequestWithError:
throttle
mediaTokenFromDictionary:error:
reset
_shouldRefreshMediaToken:
refreshPercentage
refreshTime
addValue:forHTTPHeaderField:
initWithClientIdentifier:clientVersion:bag:
_throttler
_tokenFetchQueue
_tokenStore
_refreshPercentage
_refreshTime
_deserializeMediaTokenDictionary:
_correctPayload:
initWithTimeIntervalSinceNow:
_copyKeychainQuery
_removeTokenFromKeychain
_keychainAccessGroup
initWithClientIdentifier:
_setupKeychainNotifications
_teardownKeychainNotifications
keychainStore
setMemoryMediaToken:
memoryMediaToken
userDefaultsStore
_postMediaTokenChangedNotification
valueForEntitlement:
_hasAppleGroupEnabled
_mediaTokenChangedNotificationName
_mediaTokenChanged
addObserver:selector:name:object:suspensionBehavior:
setKeychainStore:
setUserDefaultsStore:
_memoryMediaToken
_keychainStore
_userDefaultsStore
setThrottleDate:
setAttemptNumber:
throttleDate
_calculateThrottleInterval
attemptNumber
baseSleepInterval
maxSleepInterval
_baseSleepInterval
_maxSleepInterval
_attemptNumber
_throttleDate
videoDictionary
_videoDictionary
_memoryPressureStatusForMemoryPressure:
sessionWithType:
primeTheConnectionWithBag:error:
_matchSignSapURL:bagDictionary:error:
_matchSignedActions:withURL:error:
_signedActionDataFromRequest:policy:
responseStatusCode
verifyData:withSignature:bag:error:
lastPathComponent
_DAAPActionsForURLBagActions:
uppercaseLetterCharacterSet
rangeOfCharacterFromSet:options:range:
insertString:atIndex:
appendData:
primeTheConnectionWithContract:logKey:error:
signatureFromData:type:bagContract:logKey:error:
signatureFromData:type:bag:error:
signatureUsingRequest:type:bagContract:logKey:error:
signatureUsingRequest:type:bag:error:
verifyTask:data:type:bagContract:logKey:error:
verifyTask:data:type:bag:error:
shouldReprimeConnectionWithResult:
primeTheConnectionWithContract:error:
signatureFromData:type:bagContract:error:
signatureUsingRequest:type:bagContract:error:
verifyTask:data:type:bagContract:error:
initWithMescalType:
exchangeData:error:
primingSignatureForData:error:
signData:error:
verifyPrimeSignature:error:
verifySignature:forData:error:
_teardownSession
_dataWithFairPlayBytes:length:
isComplete
_complete
initWithType:
_verifyPrimeResponse:error:
primed
_establishContextWithBag:error:
_shouldRetryFairPlayForError:
_resetSession
setPrimed:
_cachedCertPath
dataWithContentsOfFile:options:error:
_cacheCertData:expiration:
_verifyEntitlements
_loadCertificateDataWithBag:error:
_postExchangeData:bag:error:
_cachedCertData
_certificateData
_urlSession
_fairPlayContext
_mescalType
_primed
initWithContainerIdentifier:
_applicationWillEnterForeground
_beginFlushIntervalWithStyle:events:
addObserverForName:object:queue:usingBlock:
initWithContainerID:bag:
removeObserver:name:object:
flushingDisabled
flushQueue
databaseSource
eventCount
sharedTimerQueue
_scheduledFlushAllowedForStyle:
setFlushingDisabled:
currentFlushStrategy
removeAllEvents
enqueueEvents:
enqueueAsyncEvents:
_enqueueFigaroEvents:
_flushDataSource:topic:
initWithEvents:
serverTimeFromTimeInterval:
flushOnForeground
setFlushOnForeground:
destination
initWithDataSource:bag:
maxBatchSize
setMaxBatchSize:
maxRequestCount
setMaxRequestCount:
setTopic:
engagementEvent
clientEventID
setClientEventID:
diagnosticsSubmissionBugType
checkDiagnosticsAndUsageSetting
diagnosticsSubmissionAllowed
topic
recordAppAnalyticsForEvent:bugType:
containerId
_flushIntervalInvalidate
_determineFlushStrategyWithDataSource:topic:
setCurrentFlushStrategy:
performFlush
cancelled
flushTimerEnabled
_flushIntervalForEvents:
_handleFlushIntervalWithStyle:
configurationWithBag:error:
modifierForEvent:
flushInterval
flushIntervalBlock
setFlushIntervalBlock:
monitorsLifecycleEvents
sharedApplication
applicationState
appAnalyticsAllowed
disableBackgroundMetrics
flushDelayEnabled
setDisableBackgroundMetrics:
setFlushDelayEnabled:
setFlushTimerEnabled:
serverTimeFromDate:
timeIntervalFromServerTime:
dropEvents
flushTopic:
flushEvents:
initWithContainerId:bagContract:
setMonitorsLifecycleEvents:
setDatabaseSource:
setDestination:
engagementQueue
setEngagementQueue:
flushIntervalStartTime
setFlushIntervalStartTime:
setFlushQueue:
_flushTimerEnabled
_flushingDisabled
_monitorsLifecycleEvents
_flushOnForeground
_containerId
_maxBatchSize
_maxRequestCount
_currentFlushStrategy
_databaseSource
_destination
_engagementQueue
_flushIntervalBlock
_flushIntervalStartTime
_flushQueue
databasePathForContainerId:
initWithDatabasePath:
createOrUpdateSchemaUsingConnection:
strongToWeakObjectsMapTable
initWithContainerId:
close
bindString:atPosition:
bindFloat:atPosition:
int64ForColumnIndex:
enumerateRowsUsingBlock:
executeQuery:withResults:
_performTransaction:
executeStatement:error:bindings:
databasePID
executeStatement:error:
stringForColumnIndex:
initWithDatabaseEventBody:
setDatabasePID:
prepareStatement:error:
databaseEventBody
bindNullableString:atPosition:
bindDouble:atPosition:
executePreparedStatement:error:bindings:
finalizePreparedStatement:error:
_lockedById
truncate
removeDatabaseForContainerId:
performTransaction:
sharedDatabaseWithContainerId:
connectionNeedsResetForCorruption:
countAllEventsWithLockKey:error:
dropAllEventsWithLockKey:error:
dropEvents:error:
enumerateEventsWithTopic:lockKey:objectBlock:
insertEvents:error:
lockAllEventsWithError:
unlockAllEventsWithKey:error:
unlockEvents:error:
cleanupInvalidIdentifiersWithError:
removeIdentifiersForAccount:error:
setIdentifier:forKey:account:duration:error:
identifierForKey:account:error:
setContainerId:
keepAliveCount
setKeepAliveCount:
_keepAliveCount
database
containerIdentifier
batchesFromEvents:
currentLockKey
setCurrentLockKey:
didFinishBatching
enumerateSortedEventsForTopic:block:
skipEvents:error:
removeEvents:error:
willStartBatchingWithLogKey:error:
_database
_containerIdentifier
_currentLockKey
initWithConnection:
currentUserVersion
migrateVersion0to1WithMigration:
migrateToVersion:usingBlock:
migrateVersion1to2WithMigration:
migrateVersion2to3WithMigration:
migrateVersion3to4WithMigration:
_containerURLForContainerId:
removeItemAtURL:error:
setResourceValue:forKey:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_applyProtectionClassForDirectoryAtURL:
_addSkipBackupAttribute:forURL:
executeStatement:
_setProperty:forBodyKey:clientOnly:
_isValidJSONProperty:
localTimeZone
secondsFromGMTForDate:
sanitizedObject:
propertyForBodyKey:
_propertyForBodyKey:clientOnly:
removeObjectsForKeys:
initForEngagement
dictionaryForPosting
appVersion
baseVersion
canaryIdentifier
eventTime
eventType
eventVersion
isAnonymous
preventSampling
osVersion
timezoneOffset
setAnonymous:
setApp:
setAppVersion:
setBaseVersion:
setCanaryIdentifier:
setCheckDiagnosticsAndUsageSetting:
setClientIdentifier:
setDiagnosticsSubmissionBugType:
setEventTime:
setEventType:
setEventVersion:
setPreventSampling:
setOsVersion:
setTimezoneOffset:
addClientIdentifier:
removePropertiesForKeys:
_underlyingDictionary
_databasePID
initWithMetricsDictionary:overrideDictionary:
initWithMetricsDictionary:
_generateModifiersIfNeeded
defaultModifier
overrides
fieldFiltersMatchEvent:
prepareForFlush
_overrides
_defaultModifier
_fieldFiltersFromOverrides:
_createSampleSessionKey
fieldFilters
_overridePropertyForKey:
_shouldSampleEvent:
overrideDictionary
sampleSessionKey
ams_SHA1
prepareEvent:
reportingURLForEvent:
shouldDropEvent:
shouldSkipEvent:
_fieldFilters
_sampleSessionKey
_overrideDictionary
anonymous
containsLoadURL
setContainsLoadURL:
droppedEvents
setDroppedEvents:
eventDictionaries
setEventDictionaries:
reportURL
setReportURL:
skippedEvents
setSkippedEvents:
_anonymous
_containsLoadURL
_canaryIdentifier
_droppedEvents
_eventDictionaries
_reportURL
_skippedEvents
setURLCache:
setRequestCachePolicy:
setAllowsCellularAccess:
currentCancellablePromise
setRequestCount:
requestCount
_nextBatchWithConfig:error:
_postBatch:error:
_shouldClearEventsDespiteError:result:
_mescalSignatureWithBodyData:error:
setNetworkServiceType:
setCachePolicy:
setTimeoutInterval:
setDisableLoadURLMetrics:
setCurrentCancellablePromise:
_cancelled
_requestCount
_topic
_currentCancellablePromise
generateIdentifier
duration
_generateCacheKey
_accountIdentifierForAccount:
cleanupIdentifiers
removeIdentifiersForAccount:
generateEventFields
setDuration:
_duration
initWithTask:metrics:
initWithTaskInfo:serverPayload:
responseBody
setResponseBody:
taskMetrics
setTaskMetrics:
decodedResponseBody
setDecodedResponseBody:
_responseBody
_taskMetrics
_decodedResponseBody
_prepareEventWithContext:
_timingData
setAppleTimingApp:
setApsRelayAttempted:
setApsRelayDidFallback:
setApsRelaySucceeded:
setCachedResponse:
setClientCorrelationKey:
localizedDescription
setClientError:
_timingDataMetricToServerTimeInterval:
setConnectionEndTime:
setConnectionInterface:
setConnectionReused:
setConnectionStartNStatRXBytes:
setConnectionStartNStatTXBytes:
setConnectionStartTime:
setConnectionStopNStatRXBytes:
setConnectionStopNStatTXBytes:
setConnectionType:
_DNSServerIPAddresses
setDNSServers:
setDomainLookupEndTime:
setDomainLookupStartTime:
setEdgeNodeCacheStatus:
setEnvironmentDataCenter:
setFetchStartTime:
_fetchNetworkQualityReports
setNetworkQualityReports:
setOriginalApp:
reportForTask:fromReports:
setRadioType:
setRadioTechnology:
setRedirectCount:
setRedirectEndTime:
setRedirectStartTime:
setRequestMessageSize:
setRequestStartTime:
setRequestURL:
_resolvedIPAddressFromTask:
setResolvedIPAddress:
setResponseDate:
setResponseEndTime:
setResponseMessageSize:
setResponseStartTime:
setSecureConnectionStartTime:
setStatusCode:
_allowsTCPFastOpen
setTFOEnabled:
setTIDState:
_allowsTLSSessionTickets
setTLSSessionTickets:
_metricsDictionaryFromConfig:
setXpSessionDuration:
setXpSamplingPercentageUsers:
setXpSamplingPercentageCachedResponses:
setXpSamplingForced:
setWt:
setXxdc:
investigateNetworks
ams_requestIsBagLoad
_CFURLResponse
stringWithCString:encoding:
shouldCollectMetricsForContext:
initWithContext:
appleTimingApp
apsRelayAttempted
apsRelayDidFallback
apsRelaySucceeded
cachedResponse
clientCorrelationKey
clientError
connectionEndTime
connectionInterface
connectionReused
connectionStartNStatRXBytes
connectionStartNStatTXBytes
connectionStopNStatRXBytes
connectionStopNStatTXBytes
connectionStartTime
connectionType
DNSServers
domainLookupEndTime
domainLookupStartTime
edgeNodeCacheStatus
environmentDataCenter
fetchStartTime
networkQualityReports
originalApp
radioTechnology
radioType
redirectCount
redirectEndTime
redirectStartTime
requestMessageSize
requestStartTime
requestURL
resolvedIPAddress
responseDate
responseEndTime
responseMessageSize
responseStartTime
secureConnectionStartTime
TFOEnabled
TIDState
TLSSessionTickets
xpSessionDuration
xpSamplingForced
xpSamplingPercentageUsers
xpSamplingPercentageCachedResponses
xxdc
batches
indexOfObject:
setBatches:
_batches
_sync:
_executedOverrides
_removeOverride:
shouldOverrideURLRequest:
setCurrentOverride:
handleReceivedRequest:
sendResponse:
executedObservable
sendFailure:
finishWithData:
currentOverride
stopRunningTasks
performRedirectFromResponse:
client
URLProtocol:didReceiveResponse:cacheStoragePolicy:
URLProtocol:wasRedirectedToRequest:redirectResponse:
URLProtocol:didLoadData:
URLProtocolDidFinishLoading:
URLProtocol:didFailWithError:
registeredOverrides
executedOverrides
addOverride:
clearOverrides
removeOverride:
canInitWithRequest:
canonicalRequestForRequest:
_removeAllOverrides
startLoading
stopLoading
_currentOverride
initWithConfiguration:mockURLOverride:
mockURLOverride
setMockURLOverride:
_mockURLOverride
setResponse:
withURLMatchingHost:
withURLContainingPath:
withURLRegexValidation:
_withURLMatchingHost:containingPath:queryItems:
initWithCriteriaBlock:
comparators
body
overrideWithHost:usingResponse:
overrideWithPathComponent:usingResponse:
overrideWithURLRegex:usingResponse:
withURLQueryItems:
withHTTPBodyValidation:encoding:
withResponse:
setExecutedObservable:
setComparators:
_executedObservable
_comparators
criteriaBlock
setCriteriaBlock:
_criteriaBlock
setPerformActualRequest:
setHeaders:
setBody:
ams_objectForCaseInsensitiveKey:
performActualRequest
sessionWithConfiguration:
setRunningTask:
runningTask
headers
initWithURL:statusCode:HTTPVersion:headerFields:
responseHandlerBlocks
responseFromActualResponse
responseWithStatus:headers:body:
responseWithHARFile:
addResponseHandler:
setResponseHandlerBlocks:
_performActualRequest
_statusCode
_headers
_body
_responseHandlerBlocks
_runningTask
protocolClasses
setProtocolClasses:
initWithSession:delegate:
setMaxConcurrentOperationCount:
delegateQueue
sessionWithConfiguration:delegate:delegateQueue:
generateInfoWithCompletion:
iTunesAccountForHomeWithIdentifier:completion:
invalidateMultiUserTokenForAccount:homeUserIdentifier:completion:
invalidateMultiUserTokenForHomeIdentifier:completion:
multiUserTokenForAccount:homeUserIdentifier:completion:
refreshAfterTimeInterval:completion:
setiTunesAccount:forHomeWithIdentifier:completion:
updateMultiUserTokenForAccount:completion:
multiUserTokenForAccount:completion:
machServiceName
serviceInterface
isConnectionEntitled:
_networkConstraintsForMediaType:withArray:
_setSizeLimit:forNetworkType:
sizeLimits
_sizeLimitForNetworkType:
isEqualToConstraints:
_disableAllNetworkTypes
_initWithStoreConstraintDictionary:
networkConstraintsForMediaType:withBag:
isAnyNetworkTypeEnabled
hasSizeLimitForNetworkType:
sizeLimitForNetworkType:
setSizeLimits:
_sizeLimits
initWithInterfaceName:
lastConnectionReport
updateLastConnectionReportWithTask:
isEntitled
_lastKnownReports
_lastReportRefreshTimestamp
_currentInvestigation
desc
userChanged
initWithTitle:description:identifier:enabled:
setUserChanged:
_userChanged
_desc
_sectionsFromDictionaryRepresentation:
sections
_sections
items
initWithTitle:footer:items:
_items
fetchAllSettings
_generateParametersForItems:
arrayWithCapacity:
dictionaryWithObject:forKey:
initWithIdentifier:account:bag:
fetchSettingForIdentifier:
fetchSettingsForSections:
updateSettings:
initWithObject:keyPath:options:
initWithObserver:
addObserver:forKeyPath:options:context:
keyPath
removeObserver:forKeyPath:context:
sendCompletion
observeValueForKeyPath:ofObject:change:context:
setKeyPath:
_keyPath
initWithNotification:object:
_receivedNotification:
initWithObserver:behavior:
initWithObservers:behavior:
initWithCondition:
_isComplete
failureError
ams_isUserCancelledError
observers
unlockWithCondition:
sendMessageQueue
_sendCompletionUsingQueue:
setFailureError:
_sendFailure:usingQueue:
queuedResults
behavior
_sendResult:usingQueue:
initWithObservers:
isCancelled
subscribeWithResultBlock:
unsubscribeAll
setObservers:
setQueuedResults:
setSendMessageQueue:
setStateLock:
_behavior
_failureError
_observers
_queuedResults
_sendMessageQueue
_stateLock
initWithResultBlock:completionBlock:failureBlock:
completionBlock
failureBlock
resultBlock
setCompletionBlock:
setFailureBlock:
setResultBlock:
_completionBlock
_failureBlock
_resultBlock
applicationStateForApplication:
initWithBundle:scheme:secureScheme:
targetWithBundle:scheme:secureScheme:
setApplicationState:
bundleID
setBundleID:
defaultIndex
setDefaultIndex:
normalScheme
setNormalScheme:
_applicationState
_bundleID
_defaultIndex
_normalScheme
defaultWorkspace
openSensitiveURL:withOptions:
initWithURL:clientInfo:bag:
_performOpen
setAttemptedTargets:
_openURL:bundleInfo:
_sortedTargets
_shouldOpenURL:
_modifiedURLFromURL:bundleInfo:
applicationsAvailableForOpeningURL:
attemptedTargets
sortUsingComparator:
openURL:account:preferredClient:
_attemptedTargets
makeObjectsPerformSelector:
currentQueue
runSubOperation:onQueue:
setParentOperation:
start
addOperations:waitUntilFinished:
main
runSubOperation:
parentOperation
promise
success
setSuccess:
_lock
_subOperations
_success
_parentOperation
_promise
initWithValue:
optionalWithNil
optionalWithValue:
_first
_second
performPaymentSetupFeatureLookup
state
isPaymentSetupFeatureSupportedWithError:
_timestamp
dictionaryForBiometricMatchState:didBiometricsLockout:
userAgentForProcessInfo:
dictionaryForCancellationEvent:didBiometricsLockout:
dictionaryForUserAction:didBiometricsLockout:
addBiometricMatchStateFinal:
addClientMetadataForPurchaseInfo:metricsDictionary:
addDualActionSuccess:
addUserActions:
_price
_ratingTypeForType:
ratingType
isServerSupplied
localAssetName
tint
_ratingType
_URLString
retainAsset:
_imageArrayRef
confirmationTitle
payee
priceSectionItems
zero
summaryItemWithLabel:amount:
setLocalizedAmount:
setUseDarkColor:
decimalValue
decimalNumberWithDecimal:
attributedList
_summaryItemsForAttributedList:cache:bag:
flexList
_contentItemsForFlexibleList:cache:bag:
preSheetDialog
salableInfoLabel
salableIconURL
salableIcon
_createImageRefWithURL:adornmentStyle:bag:
setImage:
_countImagePlaceholderTags:
inlineImages
_createRatingImageWithStringValue:assetScale:
_createImageForResourceName:outAssetScale:
_replaceImagePlaceholderTagWithImageData:tag:data:scale:tint:
_removeAllImagePlaceholderTags:
string
mutableString
numberWithFloat:
decimalNumberWithString:
summaryItemWithLabel:amount:type:
setLocalizedTitle:
setUseLargeFont:
enumerateAttribute:inRange:options:usingBlock:
URLForResource:withExtension:
_createImageRefForImageSource:screenScale:outAssetScale:
numberWithUnsignedLong:
_imageTypeForURL:
_createBorderPathForAdornmentStyle:iconWidth:iconHeight:
_createDefaultImageWithImageRef:size:borderPath:
_createMaskedImageRefForImageRef:withPathRef:andAdornmentStyle:
_createRGBImageRefForGreyScaleImageRef:width:height:
_createImageMaskRefWithSize:andPath:
ams_confirmationStyle
ams_paymentRequestorType
ams_createSummaryItems
ams_createSummaryItemsForAttributedListWithCache:bag:
ams_createContentItemForAccount
ams_createContentItemsForFlexibleListWithCache:bag:
ams_createContentItemsForPreScreenDialogWithCache:bag:
ams_createContentItemForRating
ams_createContentItemForSalableInfoWithCache:bag:
_createResizedImageWithOriginalImage:targetHeight:
isApplePayClassic
explanation
merchantSession
setPaymentSession:
_applePayClassic
_requiresAuthorization
_shouldUppercaseText
_accountHeader
_attributedList
_biometricsRequest
_confirmationTitle
_displayPrice
_explanation
_flexList
_inlineImages
_merchantSession
_payee
_paymentSummary
_preSheetDialog
_priceSectionItems
_ratingHeader
_ratingValue
_salableIcon
_salableIconURL
_salableInfo
_salableInfoLabel
_storeName
_titleType
setPasswordEquivalentToken:
paymentToken
setPaymentToken:
setSignatureResult:
_passwordEquivalentToken
_paymentToken
_signatureResult
didAuthorizePayment
setDidAuthorizePayment:
cancellationType
setCancellationType:
didPresent
setDidPresent:
_didAuthorizePayment
_didPresent
_cancellationType
_authenticationContextForRequest:
canEvaluatePolicy:error:
authenticationContext
_paymentRequest
setPaymentSheetPromise:
_presentPaymentSheetWithPaymentRequest:error:
paymentSheetPromise
setShouldAllowAppleIDCreation:
setShouldUpdatePersistentServiceTokens:
initWithPaymentRequest:
setPrivateDelegate:
presentationQueue
presentWithCompletion:
setAccesssControlRef:
setAppleIDAuthenticationContext:
externalizedContext
setExternalizedContext:
setRequestType:
setLocalizedNavigationTitle:
setRequestor:
assetCache
setPaymentContentItems:
setPaymentSummaryItems:
setPaymentSummaryPinned:
setSuppressTotal:
setLocalizedSummaryItemsTitle:
authKitAuthenticationResults
_challengeSigningDelay
initWithStatus:errors:
paymentData
dismissWithCompletion:
paymentAuthorizationControllerDidFinish:
paymentAuthorizationController:didAuthorizePayment:handler:
paymentAuthorizationController:didAuthorizePayment:completion:
paymentAuthorizationControllerWillAuthorizePayment:
paymentAuthorizationController:didRequestMerchantSessionUpdate:
paymentAuthorizationController:didSelectShippingMethod:handler:
paymentAuthorizationController:didSelectShippingContact:handler:
paymentAuthorizationController:didSelectPaymentMethod:handler:
paymentAuthorizationController:didSelectShippingMethod:completion:
paymentAuthorizationController:didSelectShippingContact:completion:
paymentAuthorizationController:didSelectPaymentMethod:completion:
presentationWindowForPaymentAuthorizationController:
paymentAuthorizationController:didEncounterAuthorizationEvent:
paymentAuthorizationController:willFinishWithError:
paymentAuthorizationController:didRequestMerchantSession:
paymentAuthorizationController:didAuthorizePurchase:completion:
paymentAuthorizationController:didAuthorizePeerPaymentQuote:handler:
paymentAuthorizationController:didAuthorizeDisbursementVoucher:handler:
paymentAuthorizationController:didAuthorizeContextWithHandler:
setAssetCache:
setAuthenticationContext:
setPresentationQueue:
setState:
_purchaseInfo
_assetCache
_authenticationContext
_paymentSheetPromise
_presentationQueue
_state
_cachedProcessInfoForIdentifier:
copyPropertiesFrom:to:
_bundleRecordForIdentifier:
_bundleForIdentifier:record:
objectForKey:ofClass:
bundleURL
executableURL
localizedName
_cacheProcessInfo:
_currentProcessBundleIdentifier
setExecutableName:
defaultMediaTypeAccessQueue
auditTokenData
partnerHeader
bundleWithURL:
bundleRecordForCurrentProcess
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
_accessProcessInfoCache:
boolForMachLookupAccess:
setDefaultMediaTypeForCurrentProcess:
stringForEntitlement:
setPartnerHeader:
generateConfiguration
generateConfigurationFromBag:
generateConfigurationFromBagContract:
setAuditTokenData:
setBundleURL:
setLocalizedName:
mappedBundleInfo
_partnerHeader
_auditTokenData
_bundleURL
_executableName
_localizedName
_mappedBundleInfo
promiseWithAll:timeout:
_finishWithResult:error:logDuplicateFinishes:
_enumeratePromises:startingAt:block:
promiseWithAny:timeout:
_configureFlattenedPromise:withPromises:results:previousError:currentPromiseIndex:
_finishPromise:withPromise:
_isFinished
promiseResult
_errorIsCanceledError:
_errorIsTimeOutError:
completionBlocks
callErrorBlock:withPromiseResult:
_addBlock:orCallWithResult:
addCompletionBlock:
callCompletionBlock:withPromiseResult:
callSuccessBlock:withPromiseResult:
lockWhenCondition:beforeDate:
initWithResult:error:
setPromiseResult:
flushCompletionBlocksWithPromiseResult:
promiseWithTimeout:
isTimedOut
boolCompletionHandlerAdapter
errorOnlyCompletionHandlerAdapter
nilValueCompletionHandlerAdapter
setCompletionBlocks:
_completionBlocks
_promiseResult
_shouldCallImmediately
purchases
initWithPurchases:weakPromise:
purchaseForPurchaseId:
finishPurchase:withError:
finishPurchase:withResult:
nextPurchase
setIsComplete:
setLock:
purchaseMap
results
_purchases
_purchaseMap
_results
_generateIdentifier
accountId
additionalHeaders
callerBundleId
clientId
ignoreRequirePasswordRestriction
purchaseType
requiresAccount
isUserInitiated
initWithPurchaseType:buyParams:
setAccountId:
setAdditionalHeaders:
setCallerBundleId:
setClientId:
setIgnoreRequirePasswordRestriction:
ownerAccountId
setOwnerAccountId:
setRequiresAccount:
setUserInitiated:
useJSONContentType
setUseJSONContentType:
_ignoreRequirePasswordRestriction
_requiresAccount
_userInitiated
_useJSONContentType
_logUUID
_accountId
_additionalHeaders
_buyParams
_callerBundleId
_clientId
_ownerAccountId
_purchaseType
_uniqueIdentifier
_purchaseStringForType:
initWithPurchase:
addKBSync
setAddKBSync:
setBuyParams:
dialog
setDialog:
dialogId
setDialogId:
hasBeenAuthedForBuy
setHasBeenAuthedForBuy:
hasRetriedOriginalOwnerAccount
setHasRetriedOriginalOwnerAccount:
setPaymentServicesURL:
_addKBSync
_hasBeenAuthedForBuy
_hasRetriedOriginalOwnerAccount
_dialog
_dialogId
_purchase
_updateSubscriptionStatusFromBody:account:
handleCompletionWithTask:metrics:decodedObject:
dialogResult
_locateBuyParamsFromResponse:selectedAction:purchaseInfo:
_updatePasswordSettingWithBuyParams:account:
_shouldRetryForFailureAction:response:task:decodedObject:responseDictionary:
_syncKeybagFromResponse:purchaseInfo:
configureRequest:purchaseInfo:bag:error:
purchase:handleDialogRequest:completion:
purchase:handleAuthenticateRequest:completion:
purchase:handleEngagementRequest:completion:
freePasswordSettingFromServerValue:
paidPasswordSettingFromServerValue:
updateCacheForMediaType:account:data:
reversePushSamplingPercentageForTask:
_handleNextPurchase
_processPurchase:
initWithPurchase:bag:
performPurchase
isSuspeneded
handleAuthenticateRequest:purchase:purchaseQueue:completion:
handleDialogRequest:purchase:purchaseQueue:completion:
handleEngagementRequest:purchase:purchaseQueue:completion:
enquePurchases:
setSuspended:logUUID:
setConfig:
setIsSuspeneded:
_isSuspeneded
_anisetteTypeFromAccount:
ams_addAnisetteHeadersForAccount:type:bag:
ams_addXTokenHeaderWithAccount:
keyEnumerator
_parametersFromPurchaseInfo:error:
ams_addParameters:encoding:compressBody:error:
purchaseRequestQueue
setAnisetteType:
setKeychainOptions:
_bagURL
initWithPurchaseInfo:
encodeRequest
setPurchaseRequestQueue:
_purchaseRequestQueue
correlationID
setCorrelationID:
setPurchase:
_correlationID
_generateFraudScoreWithInfo:
_promptForAccount
_shouldPreauthenticatePurchase:
_performPreauthenticate
_performPurchaseWithError:
_recordEngagementEventWithInfo:result:error:
_runAuthenticateRequest:
requirePasswordImmediately
initWithEnabledActionTypes:
userNotificationExtensionId
setUserNotificationExtensionId:
enabledActionTypes
setEnabledActionTypes:
_userNotificationExtensionId
_enabledActionTypes
initWithPayload:
_enabledParsables
shouldSkipAccountCheck
handleNotificationPayload:config:bag:
initWithConfiguration:bag:
handleNotification:
shouldHandleNotification:
initWithConfiguration:bagContract:
_configuration
pushPaylod:shouldUpdateBadgeForBundleIdentifier:badgeIdentifier:enabled:
badgeBundleId:badgeId:enabled:error:
eventForBadgingForMetricsDictionary:bundleID:
removeDeviceOfferWithPayload:logKey:bag:
isDeviceOfferNotification:
_shouldAllowFollowUp:
_shouldClearFollowUpFromPayload:
_performClearWithPayload:
_performPostWithPayload:bag:
userNotification:selectedButtonAction:bag:
_createFollowUpItemFromPayload:
_createFollowUpItemFromNotification:
_createNotificationFromFollowUpItem:
_shouldPresentAlertForPayload:
_generateDialogRequestFromPayload:config:
initWithPayload:andConfig:
postNotification:bag:centerBundleId:
alertType
initWithTitle:
setCenterBundleIdentifier:
setCategoryIdentifier:
setDefaultURL:
_generateNotificationFromPayload:config:
shouldDeleteNotificationForPayload:outIdentifier:scheduledOnly:
removeNotificationWithIdentifier:centerBundleId:logKey:scheduledOnly:
notificationWithPayload:andConfig:
userNotification:selectedButtonAction:
accountIdentifier
payload
actionTypeFromPayload:
_payload
initWithDictionaries:mediaType:andStoreFront:
_mapRatingsDictionaries:withMediaType:andStoreFront:
_ratingInfoMediaTypeForTaskMediaType:
storeFrontWithDictionary:mediaType:andStoreFront:
initWithURLResult:mediaType:andStoreFront:
initWithData:mediaType:andStoreFront:
ratingsStoreFronts
_ratingsStoreFronts
_clearCacheIfNeeded
_cachedRatingsData
_urlForMediaType:
storeFront
_cachePath
createFileAtPath:contents:attributes:
attributesOfItemAtPath:error:
fileModificationDate
URLByAppendingPathComponent:isDirectory:
_cacheDirectory
cacheTitle
_hasCachedData
contentsAtPath:
initWithMediaType:storeFront:clientIdentifier:bag:
_mediaType
_storeFront
ratingSystemWithDictionary:
initWithDictionary:mediaType:andStoreFront:
storeFrontID
supportedLanguages
defaultLanguage
ratingSystems
_defaultLanguage
_ratingSystems
_storeFrontID
_supportedLanguages
ratingSystemID
contentRatings
_contentRatings
_ratingSystemID
_sharedPushHandler
effectiveBoolValueForSetting:
isDiagnosticSubmissionAllowed
_featureNameForMediaType:
effectiveValueForSetting:
maximumMediaRank
allowAccountModifications
eroticaAllowed
explicitContentAllowed
inAppPurchaseAllowed
isParentalControlEnabled
onDeviceDiagnosticsAllowed
rankForMediaType:
removeAccount:withCompletionHandler:
skipAuthentication
setSkipAuthentication:
_skipAuthentication
promiseFinishedWithDefaultErrorOrResult:
initWithServiceBroker:
serviceBroker
_handleResponse:bag:securityServicePromise:onDenied:
_headersForRequest:buyParams:bag:securityServicePromise:onDenied:
_handleSecurityServicePromise:onConnected:onDenied:onError:
_defaultSecurityServiceWithDelegate:
_serviceBroker
accounts
_signOutOfAccount:
initWithAccounts:
setAccounts:
_accounts
throwSimulatedCrashWithFormat:
creationDate
_initWithSnapshotBag:
_initWithDataSource:
compile
_creationDate
bindNullAtPosition:
bindData:atPosition:
objCType
bindInt64:atPosition:
strongToStrongObjectsMapTable
_close
_verifiedStatementForPreparedStatement:error:
initWithStatement:
clearBindings
_executeStatement:error:
_verifiedStatementForSQL:error:
initWithConnection:SQL:
finalizeStatement
_open
_flushAfterTransactionBlocks
_prepareStatement:error:
isReadOnly
_openAndAllowRetry:
_finalizeAllStatements
_executeWithError:usingBlock:
step
_resetAfterCorruptionError
_resetAfterIOError
objectEnumerator
_performResetAfterCorruptionError
databasePath
initWithStatement:onConnection:
connectionPointer
_statementForPreparedStatement:error:
dispatchAfterTransaction:
executePreparedQuery:withResults:
executePreparedStatement:error:
lastChangeCount
open
currentError
executeWithError:usingBlock:
_afterTransactionBlocks
_didResetForCorruption
_preparedStatements
_transactionDepth
_transactionWantsRollback
raise:format:
setCacheSizeWithNumberOfKilobytes:
setCacheSize:
cacheSize
setCacheSizeWithNumberOfDatabasePages:
applyToDatabase:
setDatabasePath:
protectionType
setProtectionType:
setReadOnly:
_readOnly
_databasePath
_cacheSize
_protectionType
sqlite3_stmt
dataWithBytes:length:
columnIndexForColumnName:
dataForColumnIndex:
dateForColumnIndex:
numberForColumnIndex:
URLForColumnIndex:
columnIndexByName
intValue
dataForColumnName:
dateForColumnName:
doubleForColumnIndex:
doubleForColumnName:
intForColumnIndex:
intForColumnName:
int64ForColumnName:
numberForColumnName:
numberOfColumns
stringForColumnName:
URLForColumnName:
_columnTypeForColumnIndex:
_columnIndexByName
_statement
_statementWrapper
_copyTableClusteredValuesWithValues:
_insertValues:intoTable:withPersistentID:onConnection:
initWithPersistentID:onConnection:
joinClauseForProperty:
databaseTable
_deleteRowFromTable:usingColumn:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
hasRows
disambiguatedSQLForProperty:
dictionaryWithCapacity:
setValue:forProperty:
setValuesWithDictionary:
getValuesForProperties:
foreignDatabaseTableForProperty:
foreignDatabaseColumnForProperty:
memoryEntityClass
deleteFromDatabase
initWithPropertyValues:onConnection:
existsInDatabase
persistentID
_persistentID
reloadFromDatabaseEntity:properties:
setValues:forProperties:count:
setValues:forExternalProperties:count:
databaseID
propertyValues
externalPropertyValues
databaseEntityClass
defaultProperties
initWithDatabaseEntity:properties:
setExternalValuesWithDictionary:
setValue:forExternalProperty:
valueForExternalProperty:
setDatabaseID:
_databaseID
_propertyValues
_externalPropertyValues
applyBinding:atIndex:
SQLForEntityClass:
SQLJoinClausesForEntityClass:
property
_property
initWithLongLong:
predicateWithProperty:equalToValue:
predicateWithProperty:value:comparisonType:
bindNumber:atPosition:
comparisonType
_comparisonTypeString
predicateWithProperty:equalToLongLong:
_comparisonType
isNegative
values
stringWithString:
copySelectSQLWithProperties:
containsPredicateWithProperty:values:
containsPredicateWithProperty:query:queryProperty:
doesNotContainPredicateWithProperty:values:
queryProperty
_negative
_query
_queryProperty
_values
matchesNull
isNotNullPredicateWithProperty:
isNullPredicateWithProperty:
_matchesNull
predicateMatchingAnyPredicates:
predicates
predicateMatchingAllPredicates:
predicateWithProperty:values:comparisonType:
_combinationOperation
_predicates
_connectionPointer
_SQL
predicate
limitCount
enumeratePersistentIDsUsingBlock:
entityClass
_newSelectSQLWithProperties:columns:
setOrderingDirections:
setOrderingProperties:
enumerateMemoryEntitiesWithProperties:usingBlock:
enumeratePersistentIDsAndProperties:usingBlock:
_newSelectSQLWithProperties:
initOnConnection:descriptor:
copyEntityIdentifiers
countOfEntities
createTemporaryTableWithName:properties:
deleteAllEntities
enumerateMemoryEntitiesUsingBlock:
queryDescriptor
_descriptor
objectAtIndex:
setEntityClass:
setMemoryEntityClass:
setLimitCount:
orderingClause
setOrderingClause:
orderingDirections
orderingProperties
returnsDistinctEntities
setReturnsDistinctEntities:
setPredicate:
_entityClass
_limitCount
_memoryEntityClass
_orderingClause
_orderingDirections
_orderingProperties
_predicate
_returnsDistinctEntities
queryOnConnection:predicate:
_aggregateValueForProperty:function:predicate:onConnection:
queryOnConnection:predicate:orderingProperties:
arrayWithObject:
anyOnConnection:predicate:
countForProperty:predicate:onConnection:
maxValueForProperty:predicate:onConnection:
minValueForProperty:predicate:onConnection:
bindArray:atPosition:
bindDataCopy:atPosition:
bindDate:atPosition:
bindDictionary:atPosition:
bindInt:atPosition:
bindStringCopy:atPosition:
bindURL:atPosition:
firstInt64Value
firstNumberValue
_setUserVersion:
column:existsInTable:
tableExists:
_createNoteDictionaryWithKeys:buttonActions:outOptions:
_executeStatement:canFailMigration:bindings:
executeOptionalStatement:
executeOptionalStatement:bindings:
executeStatement:bindings:
initWithInt:
initWithUTF8String:
_strongSelf
stringByDeletingLastPathComponent
fileSystemRepresentation
autoRenewEnabled
expiration
familySubscription
freeTrialEligible
inAppAdamId
inAppVersion
offerId
period
purchaser
source
numberWithUnsignedInt:
status
carrierErrorCode
carrierOperatorName
carrierPhoneNumber
carrierSessionId
carrierStatus
setAutoRenewEnabled:
setExpiration:
setFamilySubscription:
setFreeTrialEligible:
setInAppAdamId:
setInAppVersion:
setOfferId:
setPeriod:
setPurchaser:
setSource:
setStatus:
setCarrierErrorCode:
setCarrierOperatorName:
setCarrierPhoneNumber:
setCarrierSessionId:
setCarrierStatus:
_autoRenewEnabled
_familySubscription
_freeTrialEligible
_purchaser
_source
_status
_carrierStatus
_expiration
_inAppAdamId
_inAppVersion
_offerId
_period
_carrierErrorCode
_carrierOperatorName
_carrierPhoneNumber
_carrierSessionId
appAdamId
entitlements
setAppAdamId:
setEntitlements:
setServerResponse:
_appAdamId
_appVersion
_entitlements
_fetchEntitlementsFromIC
_fetchEntitlementsFromASD
_segmentForMediaType:error:
setSubscriptionEntitlementsWithDictionary:forAccountID:segment:
initWithMediaType:
performExternalLookup
sharedStatusController
activeStoreAccountRequestContext
initWithStoreRequestContext:
_shouldIgnoreCaches
setShouldIgnoreCache:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
_shouldIgnoreRemoteData
setShouldReturnLastKnownStatusOnly:
extendedCarrierCheck
setCarrierBundleProvisioningStyle:
_resultFromICResponse:
performSubscriptionStatusRequest:withCompletionHandler:
_reloadASDSubscriptionForSegment:controller:
getCachedSubscriptionEntitlementsForSegment:withResultHandler:
getSubscriptionEntitlementsForSegment:ignoreCaches:withCacheInfoResultHandler:
subscriptionStatus
isMatchEnabled
statusType
reasonType
isEligibleForFreeTrial
isPurchaser
carrierBundlingErrorCode
cellularOperatorName
sessionIdentifier
carrierBundlingStatusType
isInFreeTrial
sourceType
unsignedLongValue
cachePolicy
_queryCachedASDSubscriptionForSegment:controller:reloadIfNeeded:
setExtendedCarrierCheck:
_extendedCarrierCheck
_cachePolicy
freeSetting
paidSetting
serverValueForFreePasswordSetting:
serverValueForPaidPasswordSetting:
initWithAccount:freeSetting:paidSetting:delegate:bag:
_freeSetting
_paidSetting
_reorderButtonActions
_showNotificationFromDictionary:options:
_handleResponseForNote:buttonActions:keys:
_keyboardTypeFor:
_defaultButtonIndexForActions:
unlockActionButtonIndex
displaysOnLockscreen
dismissOnHomeButton
dismissOnLock
shouldDisplayAsTopMost
shouldDismissAfterUnlock
shouldPendInSetupIfNotAllowed
defaultButtonIndex
setDefaultButtonIndex:
setDismissOnHomeButton:
setDismissOnLock:
setShouldDismissAfterUnlock:
setShouldDisplayAsTopMost:
setShouldPendInSetupIfNotAllowed:
setDisplaysOnLockscreen:
setUnlockActionButtonIndex:
_dismissOnHomeButton
_dismissOnLock
_shouldDismissAfterUnlock
_shouldDisplayAsTopMost
_shouldPendInSetupIfNotAllowed
_displaysOnLockscreen
_defaultButtonIndex
_unlockActionButtonIndex
promiseAccessQueue
taskCacheAccessQueue
setPromise:
taskCache
runMode
setPerformTaskQueue:
performTaskQueue
isRunning
setPromiseAccessQueue:
_runMode
_performTaskQueue
_promiseAccessQueue
backingDictionaryAccessQueue
setBackingDictionaryAccessQueue:
_backingDictionaryAccessQueue
objectAccessQueue
accessAndSetObjectWithBlock:
setObjectAccessQueue:
_objectAccessQueue
backingSetAccessQueue
backingSet
setBackingSet:
setBackingSetAccessQueue:
_backingSet
_backingSetAccessQueue
executionPromiseAccessQueue
executionPromise
_createExecutionPromise
_beginExecutingBlockWithPromise:
completionCallbacksQueue
executeBlockQueue
setExecutionPromise:
addCompletionBlockForSubsequentExecution:
setCompletionCallbacksQueue:
setExecuteBlockQueue:
_completionCallbacksQueue
_executeBlockQueue
_executionPromise
_executionPromiseAccessQueue
invocationWithMethodSignature:
setSelector:
getReturnValue:
_encryptionKeys
encryptionKeyForDataProtectionClass:
setEncryptionKey:forDataProtectionClass:
_centerForBundleId:
getDeliveredNotificationsWithCompletionHandler:
initWithUNNotification:
badgeNumber
setBadgeNumber:withCompletionHandler:
createUNNotificationContent
createUNNotificationRequestFromContent:
addNotificationRequest:withCompletionHandler:
handleServiceExtensionNotificationRequest:bag:withContentHandler:
removePendingNotificationRequestsWithIdentifiers:
removeDeliveredNotificationsWithIdentifiers:
currentNotificationCenter
_activeNotificationsWithCenterBundleId:
_badgeBundleId:increment:error:
_postNotification:bag:centerBundleId:
_removeNotificationWithIdentifier:centerBundleId:logKey:scheduledOnly:
_removeNotification:centerBundleId:
forwardingTargetForSelector:
signatureWithObjCTypes:
redirectURL
retryIdentifier
initWithType:error:reason:redirectURL:
authenticateResult
updatedHeaders
_actionType
_redirectURL
_retryIdentifier
_authenticateResult
_dialogResult
_updatedHeaders
ams_URLByReplacingSchemeWithScheme:
_commerceUIArrayForKey:
_matchURL:toPatterns:
typeForURL:
_defaultWebAllowedForURL:
_dynamicUIAllowedForURL:
_legacyWebAllowedForURL:
_waitForPromises:block:
numberOfMatchesInString:options:range:
typeForCommerceUIURL:
mescalType
knownToBeTrusted
_URLIsTrustedFromRequest:bag:
_shouldEnableReversePushForTask:
set_APSRelayTopic:
_pingURL:session:bag:
reportMetricsForTaskInfo:decodedObject:
_setResponseCookiesFromResponse:taskInfo:
shouldSetStorefrontFromResponse
remoteSecuritySigningEnabled
signingService
anisetteType
sharedAuthKitSession
handleResponse:forRequest:shouldRetry:
setReversePushType:
ams_addCookiesForAccount:clientInfo:
ams_addIdentifierHeadersForAccount:
reversePushType
ams_addAbsintheHeadersWithBuyParams:bag:
ams_addMescalHeaderWithType:bag:logKey:
ams_removeAnisetteHeaders
disableLoadURLMetrics
additionalMetrics
responsePingQueue
shouldSetCookiesFromResponse
decodeData:task:error:
didCreateTask:fromRequest:error:
setResponsePingQueue:
_responsePingQueue
_signingService
_CFURLRequest
_initWithCFURLRequest:
setProperties:
_properties
requestEncoding
_methodStringFromMethod:
encodeCount
compressRequestBody
setKnownToBeTrusted:
setRemoteSecuritySigningEnabled:
setShouldSetCookiesFromResponse:
setShouldSetStorefrontFromResponse:
parentTask
ams_addPrimaryiCloudIdentifierHeader
ams_addAuthKitHeaders
ams_addAcceptLanguageHeader
ams_addCacheBusterParameter
ams_addCachePolicyHeader
ams_addClientIdentifierHeaderForClient:
includeClientVersions
ams_addClientVersionsForClient:
ams_addConnectionTypeHeader
ams_addGUIDParameterUsingBag:
ams_addIssuingProcessHeader
ams_addRequestingProcessWithClient:
ams_addTimezoneOffsetHeader
ams_addUserAgentHeaderFromClient:
_addSecuritySigningHeadersToRequest:buyParams:bag:
ams_addBiometricsHeadersForAccount:options:
setEncodeCount:
ams_addHeaders:
requestWithMethod:bagURL:parameters:error:
requestWithMethod:URL:parameters:error:
requestWithMethod:URLString:parameters:error:
dataEncoding
setDataEncoding:
requestWithMethod:bagURL:error:
requestWithMethod:URL:error:
requestWithMethod:URLString:error:
setCompressRequestBody:
_compressRequestBody
_disableResponseDecoding
_enableRemoteSecuritySigning
_includeClientVersions
_shouldSetCookiesFromResponse
_shouldSetStorefrontFromResponse
_urlKnownToBeTrusted
_additionalMetrics
_anisetteType
_dialogOptions
_requestEncoding
_responseDecoder
_encodeCount
_parentTask
maxRetryCount
_disableLoadURLMetrics
_knownToBeTrusted
_remoteSecuritySigningEnabled
_maxRetryCount
_reversePushType
allowedStatusCodes
allowedContentTypes
setAllowedContentTypes:
_allowedStatusCodes
_allowedContentTypes
initWithTask:response:data:object:
initWithTaskInfo:object:
responseCorrelationId
responseHeaders
initWithTrustMode:
initWithTrustMode:pinnedCertificated:
trustMode
_evaluateExtendedValidationWithTrust:forTask:
_evaluatePinnedCertificatesWithTrust:forTask:
_shouldSkipValidation
pinnedCertificates
defaultPolicy
evaluateTrust:forTask:
setTrustMode:
setPinnedCertificates:
_trustMode
_pinnedCertificates
delegateProxy
setInvalidated:
getAllTasksWithCompletionHandler:
taskQueue
protocolHandler
_handleURLAction:task:error:
addOperationWithBlock:
URLSession:dataTask:didReceiveData:
setMetrics:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
receivedAction
_completeTask:decodedObject:error:
removeTaskInfoForTask:
_prepareRequest:properties:error:
dataTaskWithRequest:
_createSharedDataForTask:properties:completionHandler:
_formatError:task:decodedObject:
createTaskInfoForTask:
ams_underlyingError
_retryTask:action:error:
setReceivedAction:
retryIdentifiers
retryCount
setRetryCount:
migrateFromTaskInfo:
invalidated
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:willCacheResponse:completionHandler:
dataTaskPromiseWithRequestPromise:
setRequestEncoder:
setDelegateProxy:
securityPolicy
setSecurityPolicy:
_delegateProxy
_delegateQueue
_protocolHandler
_invalidated
_securityPolicy
sharedTaskQueue
sharedTaskStore
initWithTask:
setRetryIdentifiers:
_previousAuthorizationCredentialSource
_metrics
_receivedAction
_retryCount
_retryIdentifiers
_taskQueue
bundleInfo
_sharedCache
_compileAndShouldCache:
cachedUserAgentForBundleIdentifier:
initWithProcessInfo:
cacheUserAgent:forBundleIdentifier:
_sharedComponentFairPlayDeviceType
_iOSComponentClientInfo
_iOSComponentProductVersion
_iOSComponentDeviceModel
_iOSComponentHardwarePlatform
_iOSComponentBuildVersion
_sharedComponentParentheticalWithFairPlayDeviceType:
_sharedComponentFrameworkVersion
ams_nonEmptyComponentsJoinedByString:
_sharedComponentParentheticalWithFairPlayDeviceType:productType:
_bundleInfo
ams_ensureDirectoryExists:
initWithTitle:intent:
_serverFriendlyFormatter
dateFromString:
_identifierFromPayload:
eventFromMetricsDictionary:centerBundleId:
anonymizeMetrics
setDisplayScheduledTime:
setPostedSuccessfully:
setAllHTTPHeaderFields:
content
_canParseNotificationWithIdentifier:userInfo:
attachments
un_ActionOptions
actionWithIdentifier:title:options:
categoryIdentifier
threadIdentifier
setThreadIdentifier:
setSubtitle:
_generatePayload
shouldSuppressDefaultAction
setShouldSuppressDefaultAction:
setShouldBackgroundDefaultAction:
setShouldAuthenticateDefaultAction:
subsections
setTopicIdentifiers:
scheduledTime
currentCalendar
components:fromDate:
triggerWithDateMatchingComponents:repeats:
requestWithIdentifier:content:trigger:
actionIdentifier
shouldHandleNotificationResponse:
notification
determineSelectedActionFromResponse:error:
defaultURL
openAppUsingBundleIdentifier:
handleSelectedButton:bag:
intent
centerBundleIdentifier
explicitEnabledForCenterBundleID:
explicitContent
artworkUrl
_downloadAssetAtUrl:withIdentifier:logKey:bag:
attachmentWithIdentifier:URL:options:error:
setAttachments:
setFrontBoardOptions:
openApplicationWithBundleIdentifier:configuration:completionHandler:
eventForSettingsChangedWithSettings:bundleID:
getNotificationSettingsWithCompletionHandler:
pathExtension
_cachedImagePathForIdentifier:assetURL:
videoUrl
initWithLocaleIdentifier:
timeZoneForSecondsFromGMT:
handleNotificationResponse:bag:
notificationCenter:didChangeSettings:bag:
notificationCenter:openSettingsForNotification:bag:
shouldHandleServiceExtensionNotificationRequest:
handleNotificationResponse:bagContract:
initWithNSUserNotification:
createNSUserNotification
createUNNotificationActions
handleSelectedButton:bagContract:
setArtworkUrl:
setVideoUrl:
setExplicitContent:
setScheduledTime:
setSubsections:
setAnonymizeMetrics:
setIntent:
_explicitContent
_anonymizeMetrics
_shouldSuppressDefaultAction
_artworkUrl
_videoUrl
_centerBundleIdentifier
_scheduledTime
_subsections
_subtitle
_intent
_categoryIdentifier
_threadIdentifier
initWithTitle:style:
initWithUserInfoAction:
generateUserInfoAction
_defaultURL
_determineStrategyForBundleId:
activeNotificationsWithCenterBundleId:
removeNotification:centerBundleId:
strategy
_strategy
eventFromNotificationCenterSettings:centerBundleId:
notificationSettings
initWithTopic:settings:centerBundleId:
alertSetting
_stringFromNotificationSetting:
badgeSetting
soundSetting
lockScreenSetting
carPlaySetting
notificationCenterSetting
criticalAlertSetting
alertStyle
authorizationStatus
groupingSetting
providesAppNotificationSettings
showPreviewsSetting
eventForContentEngagementWithNotification:
eventForVideoPlaybackForNotification:
displayScheduledTime
errorDescription
postedSuccessfully
setErrorDescription:
_createDisplayCriteriaFromSettings:
_sanitizedVersionStringForVersionString:
isVersionSupported:requiredVersion:
initWithDeviceID:type:
JSONDictionary
initWithJSONDictionary:
activePairedDevices
deviceFromIdentifier:
setType:
messageData
expirationInterval
isReply
messageID
objectClassName
receiptDate
setMessageData:
messageFromProtoMessage:
createProtoMessage
setObjectClassName:
setIsReply:
setMessageID:
setReceiptDate:
setExpirationInterval:
setOrigin:
_isReply
_objectClassName
_messageID
_receiptDate
_expirationInterval
_origin
hasLogKey
readFrom:
writeTo:
copyTo:
mergeFrom:
_messageData
ams_invertedDictionaryUsingTransformIgnoresNil:
ams_allWithTest:
ams_anyWithTest:
ams_invertedDictionaryUsingTransform:
ams_objectAtIndex:
ams_enumerateObjectsForArrays:usingBlock:
ams_MusicBundle
ams_decompressWithAlgorithm:
_compressGZIP
_compressLZMA
_decompressGZIP
_decompressLZMA
compressedDataUsingAlgorithm:error:
decompressedDataUsingAlgorithm:error:
_AESKeyForDataProtectionClass:error:
ams_decryptUsingKey:initializationVectorData:tagData:error:
ams_encryptDataUsingKey:error:
_generateInitializationVectorDataWithError:
_labelForDataProtectionClass:
_accessibleAttributeForDataProtectionClass:
ams_generateEncryptionKey
ams_hexAddressDescription
ams_nvramDescription
serverFriendlyFormatter
ams_firstKeyObjectPassingTest:
ams_componentsJoinedByString:
ams_firstKeyPassingTest:
initWithDomain:code:userInfo:
ams_underlyingErrorWithDomain:code:
ams_errorByAddingUnderlyingError:
distantPast
ams_actionData
ams_actionName
ams_addObjectsFromNullableArray:
ams_removeObjectsPassingTest:
formattedUsernameFromUsername:
_replaceMarkupForMutableAttributedString:markupType:
_replaceBreakingSpaceMarkupForMutableAttributedString:
componentsSeparatedByCharactersInSet:
ams_matchesRegex:
callStackReturnAddresses
ams_symbolicatedCallStackSymbols
ams_realHomeDirectory
isWritableFileAtPath:
URLForDirectory:inDomain:appropriateForURL:create:error:
initWithURL:resolvingAgainstBaseURL:
ams_schemeSwizzledURL
ams_unescapedStringForString:
HTTPBodyStream
hasBytesAvailable
read:maxLength:
appleIDHeadersForRequest:
aa_personID
aa_authToken
_ams_addCookies:
ams_addContentTypeHeaderForEncoding:
ams_addContentLengthHeaderForData:
ak_addClientTimeHeader
secondsFromGMT
setHTTPShouldHandleCookies:
requestHeaderFieldsWithCookies:
ams_addAuthorizationHeaderForAccount:
_getCacheControlMaxAge:
dateWithNaturalLanguageString:
ams_configureWithProcessInfo:bag:
setHTTPShouldUsePipelining:
set_timingDataOptions:
set_tlsTrustPinningPolicyName:
_URLBagCache
set_alwaysPerformDefaultTrustEvaluation:
set_allowsTLSSessionTickets:
set_allowsTCPFastOpen:
set_infersDiscretionaryFromOriginatingClient:
set_sourceApplicationAuditTokenData:
_allowsAMSURLCache
_initWithExistingCFURLCache:
sharedURLCache
removeAllCachedResponses
@16@0:8
q16@0:8
B16@0:8
Q16@0:8
v24@0:8Q16
v24@0:8@16
v20@0:8B16
v24@0:8q16
@24@0:8@16
B24@0:8@16
q24@0:8@16
v32@0:8@16@24
v28@0:8B16@20
v16@0:8
@32@0:8@16#24
@48@0:8@16Q24@32^@40
B32@0:8@16@24
v40@0:8@16@24#32
v48@0:8@16@24Q32#40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24@32@40
@40@0:8@16@24^@32
@40@0:8@16@24@32
@28@0:8@16B24
@32@0:8@16q24
B40@0:8@16@24^@32
B48@0:8@16@24@32^@40
B32@0:8@16^@24
@32@0:8@16@24
v48@0:8@16@24@32@?40
@"AMSBagKeySet"16@0:8
@"AMSBag"16@0:8
v24@0:8@"AMSBagKeySetAggregator"16
@"NSString"
^v16@0:8
v24@0:8^v16
@"ACAccount"
@"AMSObservable"
@"NSObject<OS_dispatch_queue>"
Q24@0:8@16
@32@0:8@16Q24
@"NSSet"
B48@0:8@16@24q32@40
@48@0:8@16q24@32@40
@48@0:8@16@24q32@40
Q32@0:8q16@24
v48@0:8@16q24@32@?40
@32@0:8q16@24
@56@0:8@16@24@32q40@48
@40@0:8@16@24q32
@"<AMSBagProtocol>"
@"NSData"
@32@0:8@16^@24
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
B40@0:8@16@24@32
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSAuthenticateRequest"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSDialogRequest"32@?<v@?@"AMSDialogResult"@"NSError">40
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSEngagementRequest"32@?<v@?@"AMSEngagementResult"@"NSError">40
B40@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"AMSURLSession"16@"AMSAuthenticateRequest"24@?<v@?@"AMSAuthenticateResult"@"NSError">32
v40@0:8@"AMSURLSession"16@"AMSDialogRequest"24@?<v@?@"AMSDialogResult"@"NSError">32
B32@0:8@"AMSURLSession"16@"NSError"24
B40@0:8@"AMSURLSession"16@"ACAccount"24@"NSDictionary"32
B32@0:8@"AMSURLSession"16@"NSDictionary"24
v44@0:8@16@24B32^@36
@36@0:8Q16B24^@28
@48@0:8Q16@24@32^@40
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSDictionary"
@"AMSProcessInfo"
@"NSURL"
@"AMSAuthenticateOptions"
@24@0:8^@16
@40@0:8@16Q24^@32
B24@0:8^@16
@"<AMSAuthenticateTaskDelegate>"
@"NSNumber"
@"NSUUID"
@48@0:8@16@24Q32@40
B48@0:8@16@24@32@40
v56@0:8@16@24@32@40@?48
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
@"<AMSAuthKitUpdateTaskDelegate>"
@"NSArray"
@"<AMSRequestPresentationDelegate>"
@"AMSURLSession"
v24@0:8@?16
@"AMSBagValue"24@0:8@"NSString"16
v24@0:8@?<v@?@"AMSSnapshotBag"@"NSError">16
@"NSDate"16@0:8
@"AMSBagValue"32@0:8@"NSString"16@"ACAccount"24
@"AMSProcessInfo"16@0:8
@"<AMSBagDataSourceProtocol>"
@?16@0:8
@"AMSBagKeyInfo"24@0:8@"NSString"16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
@"NSString"32@0:8@"NSString"16@"ACAccount"24
v24@0:8@"NSString"16
@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSDictionary">16@0:8
v24@0:8@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSDictionary">16
@?<v@?@"NSString"@"NSString">16@0:8
v24@0:8@?<v@?@"NSString"@"NSString">16
@72@0:8@16@24@32@40@48@56@64
@"NSDate"
@"AMSBagKeySet"
@40@0:8@16Q24@32
@"<NSObject>"
v40@0:8@16@24@32
v32@0:8@16Q24
v40@0:8@16Q24@32
@"NSMutableSet"
v32@0:8@16#24
@"NSMutableDictionary"
@"AMSObserver"
@"AMSBagNetworkTaskResult"
@"AMSBagNetworkTask"
@"NSError"
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
@32@0:8@16@?24
{_NSRange=QQ}40@0:8@16@24@32
{_NSRange=QQ}24@0:8@16
@40@0:8@16@24Q32
B32@0:8@16Q24
@24@0:8@?16
v40@0:8@16q24@?32
B28@0:8B16@20
B32@0:8d16^@24
v24@0:8d16
@"AMSPromise"
@24@0:8^{__SecAccessControl=}16
B32@0:8q16^{__SecAccessControl=}24
B32@0:8q16@24
@24@0:8q16
v32@0:8@16@?24
v32@0:8@"AMSAuthenticateRequest"16@?<v@?@"AMSAuthenticateResult"@"NSError">24
v32@0:8@"AMSDialogRequest"16@?<v@?@"AMSDialogResult"@"NSError">24
@"NSURLSessionTask"
@56@0:8@16@24@32@40^@48
^{__SecAccessControl=}16@0:8
v24@0:8^{__SecAccessControl=}16
^{__SecAccessControl=}
@"AMSKeychainOptions"
@"LAContext"
@"AMSBiometricsSignatureRequest"
d16@0:8
@"AMSMetricsEvent"
@"NSMutableArray"
B32@0:8@16^{__SecAccessControl=}24
B40@0:8@16@24^{__SecAccessControl=}32
B32@0:8d16d24
Q32@0:8@16@24
v36@0:8@16B24@?28
v44@0:8@16B24@28@?36
@36@0:8@16B24@28
@24@0:8Q16
@40@0:8@16q24B32B36
@"AMSDialogRequest"
v48@0:8@16@24@32@40
v48@0:8@"NSString"16@"NSString"24@"ACAccount"32@"NSString"40
:24@0:8@16
@"NSObject"
@"AMSPromise"24@0:8@"<AMSDeviceMessengerClientInterface>"16
@"AMSPromise"16@0:8
@"AMSPromise"24@0:8@"<AMSSecurityClientInterface>"16
v24@0:8@?<v@?>16
@28@0:8B16@?20
@"NSXPCConnection"
v32@0:8@"<AMSDeviceMessengerClientInterface>"16@?<v@?@"<AMSDeviceMessengerServiceInterface>"@"NSError">24
v24@0:8@?<v@?@"<AMSPushNotificationServiceInterface>"@"NSError">16
v32@0:8@"<AMSSecurityClientInterface>"16@?<v@?@"<AMSSecurityServiceInterface>"@"NSError">24
v24@0:8@"AMSXDMessage"16
v32@0:8q16@?24
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"AMSXDMessage"16@?<v@?B@"NSError">24
v56@0:8@16@24@32B40B44@?48
v32@0:8@"NSURLResponse"16@?<v@?@"AMSURLAction">24
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v56@0:8@"ACAccount"16@"AMSProcessInfo"24@"NSDictionary"32B40B44@?<v@?B@"NSError">48
v24@0:8@?<v@?@"NSError">16
v40@0:8@"NSURLRequest"16@"AMSBuyParams"24@?<v@?@"NSDictionary"@"NSError">32
@40@0:8@16q24^@32
B40@0:8d16d24@32
B28@0:8@16B24
B36@0:8@16B24^{__CFString=}28
q32@0:8@16q24
q40@0:8@16q24^{__CFString=}32
v36@0:8B16@20^{__CFString=}28
v32@0:8q16@24
v40@0:8@16@24^{__CFString=}32
@32@0:8@16^{__CFString=}24
@"AMSBagValue"16@0:8
@"<AMSMescalBagContract>"16@0:8
@"<AMSMetricsBagContract>"16@0:8
B24@0:8Q16
B48@0:8@16q24@32@40
B56@0:8@16@24q32@40@48
B32@0:8@16^q24
v40@0:8@16i24i28@32
v40@0:8@"CTXPCServiceSubscriptionContext"16i24i28@"CTSuppServicesNotificationData"32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSError"24
@"AMSDeviceMessengerFilter"
v40@0:8q16@24@?32
@"<AMSDeviceMessengerServiceInterface>"
@"AMSDaemonConnection"
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"NSImage"
@"NSURLRequest"
@40@0:8@16q24@?32
@"AMSDialogAction"
@"AMSDoubleLinkedListNode"
@"AMSEngagementConnection"
v32@0:8@"AMSEngagementEnqueueRequest"16@?<v@?@"AMSEngagementEnqueueResult"@"NSError">24
v32@0:8@"AMSEngagementSyncRequest"16@?<v@?@"AMSEngagementSyncResult"@"NSError">24
@"<AMSEngagementServiceProtocol>"
@"AMSEngagementRequest"
@40@0:8@16@24#32
@40@0:8Q16Q24Q32
v40@0:8@16@24^@32
@20@0:8B16
v32@0:8@16^@24
v36@0:8@16B24^@28
@"AMSURLAction"24@0:8@"AMSURLTaskInfo"16
@"AMSURLTaskInfo"
@40@0:8Q16@24@32
@"AMSAuthenticateRequest"
@"AMSFinanceDialogResponse"
q32@0:8@16@24
B32@0:8Q16Q24
@40@0:8@16q24@32
B40@0:8@16q24q32
@44@0:8@16B24@28@36
@36@0:8@16@24B32
@40@0:8@16B24@28B36
@40@0:8@16{_NSRange=QQ}24
@"AMSFinanceAuthenticateResponse"
@"AMSPaymentSheetRequest"
@"AMSFinancePaymentSheetResponse"
@32@0:8@16^B24
@"AMSDialogResult"
d24@0:8@16
B28@0:8^@16B24
B32@0:8:16@24
B40@0:8:16B24B28@32
@"Protocol"
@"NSObject<OS_os_transaction>"
I24@0:8^@16
@36@0:8@16I24^@28
I16@0:8
v20@0:8I16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}40@0:8@16@24^@32
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}48@0:8@16@24@32^@40
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32@0:8@16^@24
B56@0:8^{__SecCertificate=}16^{__SecCertificate=}24^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32@40^@48
^{__SecAccessControl=}40@0:8@16@24^@32
^{__SecAccessControl=}32@0:8@16^@24
@32@0:8d16@?24
@32@0:8d16^@24
@"NSObject<OS_os_log>"
@"AMSURLResult"32@0:8@"AMSURLResult"16^@24
f16@0:8
@48@0:8q16q24@32@40
@32@0:8q16q24
@"AMSDoubleLinkedList"
@"<NSCopying>"
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48@56
@52@0:8@16@24@32B40@44
{CGSize=dd}16@0:8
^{CGColor=}24@0:8@16
@32@0:8{CGSize=dd}16
@48@0:8{CGSize=dd}16@32@40
@56@0:8{CGSize=dd}16@32@40Q48
@"<AMSMediaTokenServiceProtocol>"
@"AMSPromise"32@0:8@"NSURLRequest"16@24
@"NSMutableURLRequest"40@0:8@"NSURLRequest"16@24^@32
@"AMSURLRequestEncoder"
@48@0:8q16@24@32@40
@44@0:8q16@24@32B40
@"AMSMediaTaskTypeConfig"
@40@0:8@16@24d32
@44@0:8@16@24d32B40
B24@0:8d16
@"AMSMediaTokenServiceThrottler"
@"AMSMediaTokenServiceStore"
^{__CFDictionary=}16@0:8
@"AMSMediaToken"
@"AMSMediaTokenServiceKeychainStore"
@"AMSMediaTokenServiceUserDefaultsStore"
@32@0:8d16d24
@20@0:8I16
@48@0:8@16q24@32^@40
B56@0:8@16@24q32@40^@48
@56@0:8@16q24@32@40^@48
B64@0:8@16@24q32@40@48^@56
@28@0:8r*16I24
B32@0:8@16d24
@"AMSMescalFairPlay"
@24@0:8d16
B24@0:8q16
@"<AMSMetricsFlushStrategy>"
@"AMSMetricsDatabaseDataSource"
B24@0:8@"AMSSQLiteConnection"16
q32@0:8@16^@24
v24@0:8^@16
v56@0:8@16@24@32d40^@48
@"AMSSQLiteConnection"
v32@0:8@"NSString"16@?<v@?@"AMSMetricsEvent"@"NSString"@"NSError"^B>24
v32@0:8@"NSArray"16^@24
v32@0:8@"NSString"16^@24
@"AMSMetricsDatabase"
v36@0:8@16@24B32
@"AMSMetricsFigaroEventModifier"
i16@0:8
v20@0:8i16
@"<AMSMetricsDataSource>"
@"NSURLSession"
@"NSURLSessionTaskMetrics"
@"AMSMockURLOverride"
v32@0:8@?16q24
@"AMSMockURLResponse"
B24@0:8@"NSURLRequest"16
{?=@@@}24@0:8@16
v32@0:8d16@?24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSUUID"16@?<v@?@"ACAccount"@"NSError">24
v40@0:8@"ACAccount"16@"NSUUID"24@?<v@?B@"NSError">32
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v40@0:8@"ACAccount"16@"NSUUID"24@?<v@?@"NSString"@"NSError">32
v32@0:8d16@?<v@?B@"NSError">24
v32@0:8@"ACAccount"16@?<v@?@"NSString"@"NSError">24
B24@0:8@"NSXPCConnection"16
@"NSXPCInterface"16@0:8
@44@0:8@16@24@32B40
v48@0:8@16@24@32^v40
@"NSConditionLock"
@40@0:8@?16@?24@?32
@"NSLock"
@"AMSOperation"
@"AMSBinaryPromise"
@28@0:8q16B24
@28@0:8Q16B24
^{__CFArray=}
@48@0:8@16@24@32f40B44
^{CGPath=}40@0:8q16d24d32
^{CGImage=}48@0:8^{CGImage=}16{CGSize=dd}24^{CGPath=}40
^{CGImage=}32@0:8@16^f24
^{CGImage=}40@0:8{CGSize=dd}16^{CGPath=}32
^{CGImage=}36@0:8^{CGImageSource=}16f24^f28
^{CGImage=}40@0:8@16q24@32
^{CGImage=}40@0:8^{CGImage=}16^{CGPath=}24q32
^{CGImage=}32@0:8^{CGImage=}16d24
^{CGImage=}40@0:8^{CGImage=}16Q24Q32
@"NSAttributedString"
@"AMSBiometricsSignatureResult"
v24@0:8@"PKPaymentAuthorizationController"16
v40@0:8@"PKPaymentAuthorizationController"16@"PKPayment"24@?<v@?@"PKPaymentAuthorizationResult">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPayment"24@?<v@?q>32
v32@0:8@"PKPaymentAuthorizationController"16@?<v@?@"PKPaymentRequestMerchantSessionUpdate">24
v40@0:8@"PKPaymentAuthorizationController"16@"PKShippingMethod"24@?<v@?@"PKPaymentRequestShippingMethodUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKContact"24@?<v@?@"PKPaymentRequestShippingContactUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPaymentMethod"24@?<v@?@"PKPaymentRequestPaymentMethodUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKShippingMethod"24@?<v@?q@"NSArray">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKContact"24@?<v@?q@"NSArray"@"NSArray">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPaymentMethod"24@?<v@?@"NSArray">32
@"UIWindow"24@0:8@"PKPaymentAuthorizationController"16
v32@0:8@"PKPaymentAuthorizationController"16Q24
v32@0:8@"PKPaymentAuthorizationController"16@"NSError"24
v32@0:8@"PKPaymentAuthorizationController"16@?<v@?@"PKPaymentMerchantSession"@"NSError">24
v40@0:8@"PKPaymentAuthorizationController"16@"PKServiceProviderPurchase"24@?<v@?q>32
v40@0:8@"PKPaymentAuthorizationController"16@"PKAuthorizedPeerPaymentQuote"24@?<v@?@"PKPaymentAuthorizationResult">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKDisbursementVoucher"24@?<v@?@"PKPaymentAuthorizationResult">32
v32@0:8@"PKPaymentAuthorizationController"16@?<v@?@"PKPaymentAuthorizationResult">24
@"AMSPurchaseInfo"
@"AMSPaymentSheetAssetCache"
@"AKAppleIDAuthenticationContext"
@"_PaymentSheetState"
@"AMSMappedBundleInfo"
@32@0:8@16d24
v56@0:8@16@24@32@40Q48
v32@0:8@?16@?24
B36@0:8@16@24B32
@"AMSPromiseCompletionBlocks"
@"AMSPromiseResult"
v32@0:8@?16@24
@"AMSLazyPromise"
@"AMSBuyParams"
@"<AMSPurchaseDelegate>"
@"AMSPurchase"
B56@0:8@16@24@32@40@48
v40@0:8@"AMSPurchase"16@"AMSAuthenticateRequest"24@?<v@?@"AMSAuthenticateResult"@"NSError">32
v40@0:8@"AMSPurchase"16@"AMSDialogRequest"24@?<v@?@"AMSDialogResult"@"NSError">32
v40@0:8@"AMSPurchase"16@"AMSEngagementRequest"24@?<v@?@"AMSEngagementResult"@"NSError">32
@"AMSPurchaseQueueConfiguration"
@"<AMSPurchaseResponseProtocol>"
v48@0:8@16@24@32^@40
v40@0:8@"AMSAuthenticateTask"16@"AMSDialogRequest"24@?<v@?@"AMSDialogResult"@"NSError">32
@"<AMSPushHandlerDelegate>"
@"AMSPushConfiguration"
@"<AMSPushHandlerContract>"
v40@0:8@"AMSPushPayload"16@"AMSPushConfiguration"24@"<AMSBagProtocol>"32
v40@0:8@"AMSUserNotification"16@"AMSUserNotificationAction"24@"<AMSBagProtocol>"32
Q24@0:8Q16
@48@0:8Q16@24@32@40
@48@0:8@16@24@32@?40
@56@0:8@16@24@32@40@?48
v48@0:8@16@?24@?32@?40
@"<AMSDServiceBrokerProtocol>"
@"AMSBagFrozenDataSource"
B40@0:8@16^@24@?32
B32@0:8^@16@?24
B20@0:8B16
^{sqlite3=}
@"<AMSSQLiteConnectionDelegate>"
@"NSMapTable"
@"AMSSQLiteConnectionOptions"
i24@0:8^{sqlite3=}16
@20@0:8i16
d20@0:8i16
i20@0:8i16
i24@0:8@16
q20@0:8i16
^{sqlite3_stmt=}
@"AMSSQLiteStatement"
@24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSArray"16
B32@0:8@16@"NSString"24
B24@0:8@"NSDictionary"16
v32@0:8@16@"NSString"24
@"NSString"24@0:8@"NSString"16
@"NSSet"16@0:8
v40@0:8^@16r^@24q32
v32@0:8@16N^i24
@24@0:8#16
@"AMSSQLiteQuery"
@32@0:8r^v16@24
r^v16@0:8
@"AMSSQLiteQueryDescriptor"
v24@0:8#16
@"AMSSQLitePredicate"
v28@0:8d16i24
v24@0:8f16i20
v24@0:8i16i20
v28@0:8q16i24
v28@0:8@16i24
v28@0:8@"NSString"16i24
v28@0:8@"NSNumber"16i24
v28@0:8@"NSData"16i24
v28@0:8@"NSDate"16i24
v28@0:8@"NSURL"16i24
v28@0:8@"NSArray"16i24
v28@0:8@"NSDictionary"16i24
B32@0:8q16@?24
^{__CFDictionary=}40@0:8^{ButtonKey=^{__CFString}i}16@24^Q32
@32@0:8^{sqlite3_stmt=}16@24
^{sqlite3_stmt=}16@0:8
@40@0:8q16@24@32
Q32@0:8q16^@24
@36@0:8Q16@24B32
@32@0:8Q16@24
@56@0:8@16Q24Q32@40@48
@"<NSURLSessionDelegate><AMSURLProtocolDelegate>"
^{__CFUserNotification=}32@0:8^{__CFDictionary=}16Q24
@40@0:8^{__CFUserNotification=}16@24^{ButtonKey=^{__CFString}i}32
q24@0:8q16
B36@0:8@16B24^@28
@"NSArray"24@0:8@"NSString"16
B36@0:8@"NSString"16B24^@28
@"AMSBinaryPromise"40@0:8@"AMSUserNotification"16@"<AMSBagProtocol>"24@"NSString"32
@"AMSBinaryPromise"32@0:8@"AMSUserNotification"16@"NSString"24
@"AMSBinaryPromise"44@0:8@"NSString"16@"NSString"24@"NSString"32B40
@"AMSAuthenticateResult"
@40@0:8@"NSData"16@"NSURLSessionTask"24^@32
v40@0:8@"NSURLSessionTask"16@"NSURLRequest"24^@32
@"AMSURLAction"40@0:8@"NSURLSessionTask"16@"NSURLSessionTaskMetrics"24@32
@"AMSURLAction"32@0:8@"NSURLResponse"16@"NSURLSessionTask"24
v44@0:8@"NSMutableURLRequest"16@"NSURLSessionTask"24B32^@36
@"AMSURLSession"16@0:8
v24@0:8@"AMSURLSession"16
@"AMSSigningSecurityService"
@"AMSURLRequestProperties"
@40@0:8q16@24^@32
@48@0:8q16@24@32^@40
@"<AMSResponseDecoding>"
@"<AMSURLBagContract>"
@"NSIndexSet"
@"NSURLResponse"
B32@0:8^{__SecTrust=}16@24
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@40@0:8@16@24@?32
@"NSURLSessionConfiguration"
@"AMSURLDelegateProxy"
@"NSOperationQueue"
@"<AMSURLHandling>"
@"<AMSRequestEncoding>"
@"AMSURLSecurityPolicy"
@"NSMutableData"
@"AMSURLAction"
@24@0:8^B16
B40@0:8@16^@24^B32
@"AMSUserNotificationAction"
B44@0:8@16@24B32^@36
#24@0:8@16
@"<AMSUserNotificationStrategy>"
@"AMSXDDevice"
@"<NSObject><NSSecureCoding>"
B24@0:8@?16
@48@0:8@16@24@32^@40
{?=@@@}32@0:8Q16^@24
{?=@@@}32@0:8@16^@24
r^{__CFString=}24@0:8Q16
@32@0:8Q16^@24
{?=@@@}16@0:8
@40@0:8{?=@@@}16
v40@0:8@16q24@32
v40@0:8q16@24@32
v44@0:8@16q24B32^@36
B24@0:8^d16
