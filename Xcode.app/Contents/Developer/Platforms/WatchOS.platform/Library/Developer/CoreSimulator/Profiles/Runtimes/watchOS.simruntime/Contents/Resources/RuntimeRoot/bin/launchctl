@(#)PROGRAM:launchctl  PROJECT:libxpc-2038.40.35
names
name
loaded
enabled
paths
bootstrap-error
errors
type
handle
filesize
data
stack
core
memlock
maxproc
maxfiles
XPC API Misuse: %s
API Misuse
send
send-once
(unknown)
com.apple.xpc.launchctl
kern.singleuser
LAUNCHCTL_ENV_REEXEC
This subcommand requires root privileges: %s
Could not find domain for %s
Unrecognized domain-target specifier.
Please refer to `man launchctl` for explanation of the domain-target specifiers.
Could not find service "%s" in domain for %s
Could not find service.
Unrecognized domain-target specifier. <service-target> takes a form of <domain-target>/<service-id>.
Please refer to `man launchctl` for explanation of the <domain-target> specifiers.
Unrecognized target specifier. <service-target> takes a form of <domain-target>/<service-id>.
Command is not yet implemented.
Unrecognized subcommand: %s
Usage: %s <subcommand> ... | help [subcommand]
Many subcommands take a target specifier that refers to a domain or service within that domain. The available specifier forms are:
system/[service-name]
Targets the system-wide domain or service within. Root privileges are required to make modifications.
user/<uid>/[service-name]
Targets the user domain or service within. A process running as the target user may make modifications. Root may modify any user's domain. User domains do not exist on iOS.
gui/<uid>/[service-name]
Targets the GUI domain or service within. Each GUI domain is associated with a user domain, and a process running as the owner of that user domain may make modifications. Root may modify any GUI domain. GUI domains do not exist on iOS.
session/<asid>/[service-name]
Targets a session domain or service within. A process running within the target security audit session may make modifications. Root may modify any session domain.
pid/<pid>/[service-name]
Targets a process domain or service within. Only the process which owns the domain may modify it. Even root may not do so.
When using a legacy subcommand which manipulates a domain, the target domain is assumed to be the system domain. Only the user which owns the target instance of the launchd simulating the desired iOS environment may modify it.
Subcommands:
%-16s%s
%s%s
bootstrap
Bootstraps a domain or a service into a domain.
<domain-target> [service-path, service-path2, ...]
bootout
Tears down a domain or removes a service from a domain.
<domain-target> [service-path1, service-path2, ...] | <service-target>
enable
Enables an existing service.
<service-target>
disable
Disables an existing service.
kickstart
Forces an existing service to start.
[-k] [-p] <service-target>
Terminates the service if it is already running.
Prints the PID of the service that was started.
Starts the service suspended so that a debugger may attach.
attach
Attach the system's debugger to a service.
[-k] [-s] [-x] <service-target>
Forces the service to start if it isn't already running.
Attaches to execution trampoline for the service (implies -k).
debug
Configures the next invocation of a service for debugging.
<service-target> [--program <program-path>] [--start-suspended] [--guard-malloc] [--malloc-stack-logging] [--malloc-nano-allocator] [--debug-libraries] [--NSZombie] [--32] [--stdin [path]] [--stdout [path]] [--stderr [path]] [--environment VARIABLE0=value0 VARIABLE1=value1 ...] -- [argv0 argv1 ...]
--program
Use a different binary for the service's executable.
--start-suspended
Start the process suspended.
--guard-malloc
Enable libgmalloc(3) for the service.
--malloc-stack-logging
Enable malloc(3) stack logging.
--malloc-nano-allocator
Enables the malloc(3) nano allocator.
--debug-libraries
Sets DYLD_IMAGE_SUFFIX to "_debug".
--NSZombie
Enables NSZombie
--32
Runs the service in 32-bit mode (only available on 64-bit platforms).
--stdin
When an argument is given, the file at that path is used as the service's stdin. With no argument, the current terminal is used as the service's stdin.
--stdout
When an argument is given, the file at that path is used as the service's stdout. With no argument, the current terminal is used as the service's stdout.
--stderr
When an argument is given, the file at that path is used as the service's stderr. With no argument, the current terminal is used as the service's stderr.
--environment
Set environment variables on the service.
kill
Sends a signal to the service instance.
<signal-number|signal-name> <service-target>
blame
Prints the reason a service is running.
print
Prints a description of a domain or service.
<domain-target> | <service-target>
print-cache
Prints information about the service cache.
print-disabled
Prints which services are disabled.
plist
Prints a property list embedded in a binary (targets the Info.plist by default).
[segment,section] <path>
procinfo
Prints port information about a process.
<pid>
hostinfo
Prints port information about the host.
resolveport
Resolves a port name from a process to an endpoint in launchd.
<owner-pid> <port-name>
limit
Reads or modifies launchd's resource limits.
[<limit-name> [<both-limits> | <soft-limit> <hard-limit>]
runstats
Prints performance statistics for a service.
examine
Runs the specified analysis tool against launchd in a non-reentrant manner.
[<tool> [arg0, arg1, ... , @PID, ...]]
With no arguments, causes launchd to fork(2) itself for examination by subsequent analysis tools and prints the PID of this instance to stdout. You are responsible for killing this instance.
Alternatively, the arguments to this subcommand consist of an invocation of a tool with which to examine launchd, with the argument for the PID or process name replaced with the "@PID" argument. So to examine launchd for leaks, the invocation would be:
$ launchctl examine leaks @PID
config
Modifies persistent configuration parameters for launchd domains.
<system|user> <parameter> <value>
When given the "system" argument, modifies the configuration for the system domain. When given the "user" argument on supported platforms, modifies the configuration for all user domains. You must reboot for changes to take effect.
Note that if a service specifies a conflicting configuration, the service's parameter will be preferred.
Supported configuration parameters are:
umask <integer as octal>
Modifies the umask(2) applied to services launched in the domain.
path <string>
Modifies the PATH environment variable set on each service in the domain.
dumpstate
Dumps launchd state to stdout.
reboot
Initiates a system reboot of the specified type.
With no arguments or the "system" argument, causes launchd to begin a reboot of the system, equivalent to calling the reboot2() interface (not to be confused with the reboot(2) system call). When given the "userspace" argument, causes launchd to tear down userspace as it normally would, except that when userspace has quiesced, launchd will instead re-exec itself, providing for a faster reboot without re-initializing the hardware or kernel.
When rebooting the system, will bring the subsequent boot session up in single-user mode.
load
Bootstraps a service or directory of services.
<service-path, service-path2, ...>
If the service is disabled, it will be enabled. In previous versions of launchd, being disabled meant that a service was not loaded. Now, services are always loaded. If a service is disabled, launchd does not advertise its service endpoints (sockets, Mach ports, etc.).
Forcibly load the service. This flag will ignore the service's disabled state. In previous versions of launchd, this flag would also ignore the ownership and permissions of the specified launchd.plist. This is no longer the case. Note that, unlike the -w flag, this flag will not  modify the service's disabled state; it will instead only ignore it for the load operation.
-S <session>
This flag takes a single argument which is the name of a session and may only be used when loading agents. All daemons exist within the same session, which is the system session. Agents may designate which sessions they can be loaded in with the LimitLoadToSessionType key.
-D <domain>
Loads launchd.plist(5) files from the specified domain. Depending on the current execution context, launchctl will look in a LaunchDaemons or LaunchAgents directory for launchd.plists. When running in the system's execution context (i.e. when run as root via a root shell or with sudo), the LaunchDaemons directory is searched. When running in a user's context (i.e. run normally from a shell), the LaunchAgents directory is searched. Valid domains are:
system
Searches /System/Library for either daemons or agents.
local
Searches /Library for either daemons or agents.
network
Searches /Network. This session type is no longer valid.
user
Searches the home directory of the calling user for agents only. Daemons may not be loaded from this domain.
unload
Unloads a service or directory of services.
Additionally disables the service such that future load operations will result in a service which launchd tracks but cannot be launched or discovered in any way.
Only unloads the services associated with the specified session.
Unloads launchd.plist(5) files from the specified domain. See the discussion regarding this same flag when given to the load subcommand for further details.
remove
Unloads the specified service name.
<service-name>
list
Lists information about services.
[service-name]
start
Starts the specified service.
stop
Stops the specified service if it is running.
setenv
Sets the specified environment variables for all services within the domain.
<<key> <value>, ...>
unsetenv
Unsets the specified environment variables for all services within the domain.
<key, ...>
getenv
Gets the value of an environment variable from within launchd.
<key>
bsexec
Execute a program in another process' bootstrap context.
<pid> <program> [...]
submit
Submit a basic job from the command line.
-l <label> [-p <program>] [-o <stdout-path>] [-e <stderr-path] -- <command> [arg0, arg1, ...]
managerpid
Prints the PID of the launchd controlling the session.
manageruid
Prints the UID of the current launchd session.
managername
Prints the name of the current launchd session.
error
Prints a description of an error.
[posix|mach|bootstrap] <code>
variant
Prints the launchd variant.
version
Prints the launchd version.
help
Prints the usage for a given subcommand.
<subcommand>
bootstrapped
Bootstrap failed: %d: %s
/LaunchDaemons
%s/%s
%s: service already %s
%s: %s
B24@?0r*8@"NSObject<OS_xpc_object>"16
no-einprogress
bootout-error
booted out
Boot-out failed: %d: %s
disabled
Could not %s service: %d: %s
suspended
unthrottle
service spawned with pid: %d
Bad request.
Could not kickstart service "%s": %d: %s
proxy
Attaching to pid: %d
Could not attach to service: %d: %s
Could not attach to service "%s": %d: %s
xcrun
lldb
process
DYLD_ROOT_PATH
DYLD_FALLBACK_FRAMEWORK_PATH
DYLD_FALLBACK_LIBRARY_PATH
PATH
/usr/bin:/bin:/usr/sbin:/sbin
lldb exited with code: %d
lldb terminated by signal: %s
waitpid(2): %d: %s
program
start-suspended
guard-malloc
malloc-stack-logging
malloc-nano-allocator
debug-libraries
introspection-libraries
NSZombie
stdin
stdout
stderr
environment
p:gmdiNe:
MallocStackLogging
nano-allocator
NSZombieEnabled
Could not redirect service stdin: %d: %s
Could not redirect service stdout: %d: %s
Could not redirect service stderr: %d: %s
binpref
Invalid environment variable specifier: %s
argv
Cannot specify an empty argument vector.
/usr/lib/libgmalloc.dylib
DYLD_INSERT_LIBRARIES
%s:%s
DYLD_IMAGE_SUFFIX
Cannot specify both --debug-libraries and DYLD_IMAGE_SUFFIX.
_debug
/usr/lib/system/introspection
DYLD_LIBRARY_PATH
Service configured for next launch.
Not privileged to configure service.
Not entitled to configure service.
Configuration failed: %d: %s
Invalid signal.
signal
No process to signal.
Not privileged to signal service.
reason
Could not print domain: %d: %s
/System/Library/xpc/launchd.plist
Unable to load cache from: %s
"%s" = 
"%s";
%lld;
true
false
file-descriptor-object;
mach-port-object;
system
Could not print cache: %d: %s
__TEXT
__info_plist
open(): %d: %s
fdstat(): %d: %s
mmap(): %d: %s
File is not a valid Mach-O or fat file.
Fat file does not contain valid architectures.
32-bit Mach-O does not have a %s,%s or is invalid.
64-bit Mach-O does not have a %s,%s or is invalid.
Mach-O Header is bogus.
program path = %s
program path = (could not resolve path)
Could not print Mach info for pid %d: 0x%x
Could not print Mach exception info for pid %d: 0x%x
mach info = {
task-%s port = 0x%x %s
task-%s port = 0x%x (%s)
host
endpoint
domain
exception port = 0x%x %s
exception port = 0x%x (%s)
EXC_BAD_ACCESS
EXC_BAD_INSTRUCTION
EXC_ARITHMETIC
EXC_EMULATION
EXC_SOFTWARE
EXC_BREAKPOINT
EXC_SYSCALL
EXC_MACH_SYSCALL
EXC_RPC_ALERT
EXC_CRASH
EXC_RESOURCE
EXC_GUARD
EXC_CORPSE_NOTIFY
Could not get proc info PID %d: %d: %s
Could not get max argument size: %d: %s
Could not get process arguments: %d: %s
Process had negative number of arguments. Kernel bug?
argument count = %zu
argument vector = {
[%lu] = %s
environment vector = {
%s (malformed)
%s => %s
bsd proc info = {
pid = %d
unique pid = %llu
ppid = %d
pgid = %d
status = %s
flags = %s
uid = %u
svuid = %u
ruid = %u
gid = %u
svgid = %u
rgid = %u
comm name = %s
long name = %s
controlling tty devnode = 0x%x
controlling tty pgid = %u
running
stopped
lost to control
zombie
terminated (with core)
idle
traced
exiting
pp wait
64-bit
session leader
has controlling tty
has controlling terminal
has thread with cwd
proc_get_dirty(): %d: %s
pressured exit info = {
dirty state tracked = %d
dirty = %d
pressured-exit capable = %d
entitlements = (no entitlements)
entitlements = 
Could not get code signing info: %d: %s
code signing info = %s
ad-hoc signed
get-task-allow entitlement
installer entitlement
refuse invalid pages
kill on invalid pages
check expiration
restrict
require enforcement
require library validation
allowed mach-o
platform dyld
entitlements validated
platform binary
(pid %d is not managed by launchd)
Could not print service: %d: %s
host-%s port = 0x%x %s
host_get_exception_ports(): 0x%x
task_for_pid(): 0x%x
Right name does not exist in task.
mach_port_type(): 0x%x
kern-error
Could not obtain right for port: 0x%x
service
domain = %s
service = %s
endpoint = %s
task rights = %s
Could not obtain task port for PID: %d
Could not find name 0x%x in %d
dead name
port set
mac label
dead-name request
send-possible request
delayed send-possible request
%s is not a valid limit name.
which
file
Could not print resource limits: %d: %s
unlimited
%s is not a valid limit.
softlimit
hardlimit
Could not set resource limits: %d: %s
runs
"%s"
No resource statistics gathered for service yet.
Performance logging is not enabled.
run-reason
rusage
runstats ipc routine returned incorrectly sized struct rusage
forks
execs
dirty-exit
idle-exit
jettisoned
run %lu = {
pid = %lld
reason = %lld
start = %llu
end = %llu
duration = %llu
forks = %llu
execs = %llu
dirty exit = %d
idle exit = %d
jettisoned = %d
rusage = {
user time = %ld
system time = %ld
max resident set = %ld
integral shared memory size = %ld
integral unshared data size = %ld
integral unshared stack size = %ld
page reclaims = %ld
page faults = %ld
swaps = %ld
block input operations = %ld
block output operations = %ld
messages sent = %ld
messages received = %ld
signals received = %ld
voluntary context switches = %ld
involuntary context switches = %ld
Examination is not available on this platform.
Examination is only available on the DEVELOPMENT variant.
@PID
posix_spawnp(): %d: %s
waitpid(): %d: %s
kill(): %d: %s
shmem
bytes-written
State-dump is not available in this configuration.
State-dump is only available on the DEVELOPMENT variant.
State-dump already in progress; please try again later.
State-dump failed with error %d
State-dump was zero length, which is weird.
reboot system
halt
halt system
Failed to %s: %d: %s
wFS:D:
Session types are not supported on iOS. Ignoring session specifier: %s
user
local
network
Ignoring network domain.
legacy-load
force
unloaded
%s: %d: %s
Load failed
Unload failed
cache-misses
Not privileged to remove service.
services
Status
Label
status
Not privileged to start service.
Not privileged to stop service.
envvars
Not privileged to set domain environment.
Could not set environment: %d: %s
envvar
value
bootstrap_get_root(): 0x%x
You must be root to perform this operation.
task_get_bootstrap_port(): 0x%x
XPC_NULL_BOOTSTRAP
task_get_exception_ports(): 0x%x
0x%llx
XPC_FLAGS
posix_spawn(): %d: %s
Could not get manager PID.
%lld
Could not get manager UID.
Could not get manager name.
mach
posix
0x%lx: %s
system = 0x%x
subsystem = 0x%x
code = 0x%x
ipc namespace shortage
vm address space shortage
kernel ipc resource shortage
kernel out-of-line resource shortage
unknown
extra = 0x%x: %s
%u: %s
Could not print variant: %d: %s
%s %s
session
 (%s)
system%s
uid: %llu%s
login: %llu
user gui: %llu
asid: %llu
pid: %llu
port%s
[system|halt] [-s]
Usage: %s %s %s
%s%s%c
        
subsystem
routine
pre-exec
The process attempted to create a prohibited domain. Please file a radar to libxpc|launchd.
Darwin Bootstrapper Control Interface Version 7.0.0: Sun Sep 20 03:58:31 PDT 2020; root:libxpc_executables_Sim-2038.40.35~25/launchctl/RELEASE_X86_64
RELEASE
@(#)VERSION:Darwin Bootstrapper Control Interface Version 7.0.0: Sun Sep 20 03:58:31 PDT 2020; root:libxpc_executables_Sim-2038.40.35~25/launchctl/RELEASE_X86_64
/Library/Caches/com.apple.xbs/Binaries/libxpc_executables_Sim/install/Symbols/launchctl
launchctl %{public}s: %s
<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"><plist version="1.0"><dict>
<key>CFBundleDisplayName</key>
<string>Darwin Bootstrapper Control Interface</string>
<key>CFBundleExecutable</key>
<string>launchctl</string>
<key>CFBundleIdentifier</key>
<string>com.apple.xpc.launchctl</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>launchctl</string>
<key>CFBundleShortVersionString</key>
<string>7.0.0</string>
<key>CFBundleVersion</key>
<string>2038.40.38</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string></string>
<key>DTSDKBuild</key>
<string>12A8179f</string>
<key>DTSDKName</key>
<string>watchsimulator7.1.internal</string>
<key>DTXcode</key>
<string>1200</string>
<key>DTXcodeBuild</key>
<string>12A8179f</string>
<key>DarwinBuilderBuild</key>
<string>19A603013</string>
<key>DarwinBuilderVersion</key>
<string>10.15</string>
<key>DarwinVariant</key>
<string>RELEASE</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 2018 Apple Inc. All rights reserved.</string></dict></plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.xpc.launchd.userspace-reboot</key>
<true/>
<key>com.apple.private.xpc.persona-creator</key>
<true/>
<key>com.apple.private.xpc.service-configure</key>
<true/>
</dict>
</plist>
