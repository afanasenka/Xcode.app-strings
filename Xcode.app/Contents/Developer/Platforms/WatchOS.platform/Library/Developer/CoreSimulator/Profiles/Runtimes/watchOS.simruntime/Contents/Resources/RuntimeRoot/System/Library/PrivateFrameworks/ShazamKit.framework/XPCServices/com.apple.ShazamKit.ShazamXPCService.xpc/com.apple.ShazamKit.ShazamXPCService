@(#)PROGRAM:com.apple.ShazamKit.ShazamXPCService  PROJECT:ShazamKit-1
init
sessionConfiguration
mainQueue
sessionWithConfiguration:delegate:delegateQueue:
defaultSessionConfiguration
setTimeoutIntervalForRequest:
setWaitsForConnectivity:
setDiscretionary:
URLSession
dataTaskWithRequest:completionHandler:
setPriority:
taskWithRequest:withCallback:
resume
invalidateAndCancel
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
performRecognitionRequest:withReply:
invalidate
setURLSession:
.cxx_destruct
_URLSession
fetchShazamModuleEnabledStateWithCompletion:
enableShazamModuleWithCompletion:
startRecognitionForRequest:
stopRecognition
fetchShazamModuleEnabledStateWithReply:
enableShazamModuleWithReply:
interfaceWithProtocol:
setExportedInterface:
matcherDidFindMatch:
matcherDidNotFindMatch:
matcherDidFail:withError:
matcherDidFinishMatchingWithOutcome:
setRemoteObjectInterface:
remoteObjectProxyWithErrorHandler:
auditToken
initWithConnection:
initWithFrameworkProxy:entitlements:associatedBundleID:
setExportedObject:
listener:shouldAcceptNewConnection:
serviceListener
setDelegate:
dealloc
entitlements
isEntitledForRemoteRecognition
errorWithCode:underlyingError:
frameworkProxy
errorResponse
type
isEntitledForExternalAudioRecording
isEntitledForMicrophone
recognitionController
isRecognizing
setTransaction:
recognitionControllerForRequest:
setRecognitionController:
associatedBundleID
startRecognitionForRequest:withBundleID:
partnerName
installationID
initWithPartnerName:installationID:
initWithStore:
initWithShazamSessionManager:
recognitionController:didFindMatch:
recognitionController:didNotFindMatch:withError:
recognitionController:finishedAllRequestsWithOutcome:
setEntitlements:
setFrameworkProxy:
transaction
setAssociatedBundleID:
_recognitionController
_entitlements
_frameworkProxy
_transaction
_associatedBundleID
JSONObjectWithData:options:error:
objectForKeyedSubscript:
doubleValue
objectForKey:
annotateClientError:code:underlyingError:
noMatchWithRecordingIntermission:retrySeconds:
count
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
mediaItemDictionaryFromMatchDictionary:
startDate
syncedLyricsFromMatchDictionary:signatureStartDate:
initWithMatchedMediaItemDictionary:syncedLyrics:
addObject:
initWithMediaItems:forSignature:
initWithRecordingIntermission:retrySeconds:match:
attributionsFromDictionary:
lyricLinesFromDictionary:
dateByAddingTimeInterval:
initWithLyricsStartDate:lines:attribution:
dictionary
setValue:forKey:
URLWithString:
copy
isEqualToString:
numberWithBool:
mediaItemsFromServerData:signature:error:
stopAudioQueueAndClearBuffersWithError:
isAudioQueueRunning
errorWithDomain:code:userInfo:
initStandardFormatWithSampleRate:channels:
streamDescription
recognitionSource
hasAudioQueueFailedWithStatus:annotateError:
startAudioQueueAfterRetrySecondsWithCompletion:
audioRecorderDispatchQueue
initWithSource:
startRecordingWithCompletion:
stopRecordingWithError:
delegate
setRecognitionSource:
audioQueue
setAudioQueue:
audioStreamBasicDescription
setAudioStreamBasicDescription:
setAudioRecorderDispatchQueue:
mBuffers
_delegate
_recognitionSource
_audioQueue
_audioRecorderDispatchQueue
_audioStreamBasicDescription
initWithStreamDescription:
audioBufferFromData:byteSize:inFormat:
sampleRate
initWithAudioTimeStamp:sampleRate:
recorder:producedAudioBuffer:atTime:
audioSessionManager
activateAudioSessionWithOptions:
startRecordersWithCompletion:
isAudioSourceSupported:
internalAudioRecorder
externalAudioRecorder
audioManagerDispatchQueue
deactivateAudioSession
stopRecorders
preferredSession
matchSignature:
areHeadphonesOrExternalSpeakerConnectedWhileAudioPlaying
internalRecognizerSession
externalRecognizerSession
availableAudioSources
numberWithInteger:
containsObject:
metrics
setAudioSource:
match
shazamSessionManager:didFinishAttemptWithResponse:error:
isAudioSessionInterrupted
matchStreamingBufferDispatchQueue
matchStreamingBuffer:atTime:
shazamSessionManagerShouldResumeRecognitionAfterAudioInterruption:
shazamSessionManagerDidFailToResumeRecognitionAfterAudioInterruption:
store
session:shouldAttemptToMatch:
session:didFindMatch:
session:didNotFindMatchForSignature:error:
finishedSession:
session:didNotFindMatchForSignature:matcherResponse:error:
session:didFindMatchWithResponse:
audioSessionManager:interruptionBeganWithOptions:
audioSessionManager:interruptionEndedWithOptions:
matchAudioStreamRecognitionWithCompletion:
audioSessionManagerShouldResumeRecognitionAfterAudioInterruption:
_audioSessionManager
_internalRecognizerSession
_externalRecognizerSession
_internalAudioRecorder
_externalAudioRecorder
_store
_audioManagerDispatchQueue
_matchStreamingBufferDispatchQueue
_availableAudioSources
localizedUserNotificationStringForKey:arguments:
setHeader:
title
setTitle:
webURL
setDefaultActionURL:
setThreadIdentifier:
setSummaryArgumentCount:
setShouldIgnoreDoNotDisturb:
artist
setBody:
setSummaryArgument:
appleMusicURL
absoluteString
setCategoryIdentifier:
dictionaryWithObjects:forKeys:count:
setUserInfo:
arrayWithObjects:count:
setAttachments:
notificationAttachmentForMediaItem:completionHandler:
categoryWithIdentifier:actions:intentIdentifiers:options:
setWithObjects:
dateWithTimeIntervalSinceNow:
setExpirationDate:
setShouldHideDate:
setShouldSuppressDefaultAction:
notificationContentForMediaItem:completionHandler:
notificationCategories
notificationContentForNoMatch
validateAPIKey:
exceptionWithName:reason:userInfo:
validatePartnerName:
stringWithFormat:
validateInstallationID:
_init
initWithPartner:
mainBundle
preferredLocalizations
firstObject
updateToken:withValue:
loadBag:
locallyProvidedEndpoint
locallyProvidedAPIKey
fetchCountryCodeForTokenizedEndpoint:apiKey:callback:
loadEndpoint:
autoupdatingCurrentLocale
countryCode
updateEndpoint:withCountryCode:
length
initWithPartnerName:installationID:endpoint:apiKey:
preload
createMatcher
setLocallyProvidedEndpoint:
setLocallyProvidedAPIKey:
setBag:
_partnerName
_installationID
_locallyProvidedEndpoint
_locallyProvidedAPIKey
_bag
originalURLString
tokenForTokenType:
containsString:
tokenDictionary
stringByReplacingOccurrencesOfString:withString:
tokenURLString
copyWithZone:
initWithTokenURLString:
mutableCopyWithZone:
setTokenDictionary:
URLRepresentation
containsTokens
setOriginalURLString:
_originalURLString
_tokenDictionary
initWithStore:recognitionRequester:
setFormatOptions:
matcher:didFailForSignature:matcherResponse:withError:
matcher:didFindMatchingResponse:
matcher:didNotFindMatchForSignature:matcherResponse:
matchSignature:tokenizedEndpoint:apiKey:
partnerURLRequestForSignature:endpoint:apiKey:
dataRepresentation
networkRequester
responseForServerData:signature:
buildURLForSignature:endpoint:
requestWithURL:
mutableCopy
setHTTPMethod:
base64EncodedStringWithOptions:
iso8601Formatter
stringFromDate:
audioSource
sessionDuration
dictionaryWithDictionary:
dataWithJSONObject:options:error:
setHTTPBody:
frameworkShortVersion
deviceModel
deviceSystemName
deviceProductVersion
deviceOSVersion
addValue:forHTTPHeaderField:
UUIDString
setStore:
setNetworkRequester:
_iso8601Formatter
_networkRequester
defaultCenter
handleAudioSessionInterruption:
addObserver:selector:name:object:
handleAudioSessionRouteChange:
handleMediaServicesWereLost:
handleMediaServicesWereReset:
removeObserver:name:object:
registerObservers
configureAudioSession
sharedInstance
setActive:withOptions:error:
removeObservers
userInfo
unsignedIntegerValue
setIsAudioSessionInterrupted:
setCategory:withOptions:error:
setAllowHapticsAndSystemSoundsDuringRecording:error:
preferDecoupledIO:error:
setActive:error:
currentRoute
outputs
portType
areHeadphonesConnected
isExternalSpeakerConnected
isOtherAudioPlaying
setAudioManagerDispatchQueue:
_isAudioSessionInterrupted
cancelWatchdogTimer
matcherRequest
setMatcherRequest:
startWatchdogTimer
shazamSessionManager
signature
deadline
setCurrentAttributionKey:andApp:
playSystemSoundWithID:
finishSessionIfNecessaryForRequest:response:outcome:
sendNotifications
notificationManager
canSendNotificationForMatch:
sendNotificationForMatch:withCompletion:
finishSessionConditionsMetForRequest:response:outcome:
canSendNotificationForNoMatch
sendNotificationForNoMatch
stopCondition
hasHitDeadline
timeIntervalSinceNow
watchdogTimerSource
_notificationManager
_matcherRequest
_shazamSessionManager
_watchdogTimerSource
bagInvalidated:
addBagKey:valueType:
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
partner
dictionaryForKey:
valueWithCompletion:
_partner
cStringUsingEncoding:
initWithBundleIdentifier:
setNotificationCategories:
currentMediaItem
containsMediaItemWithFuzzyTolerance:
mediaItems
setCurrentMediaItem:
sendMatchNotification:withCompletion:
requestWithIdentifier:content:trigger:
userNotificationCenter
addNotificationRequest:withCompletionHandler:
setUserNotificationCenter:
_currentMediaItem
_userNotificationCenter
array
lyricLineWithText:offset:
artworkURL
attachmentWithIdentifier:URL:options:error:
downloadImageURL:completionHandler:
sharedSession
defaultManager
processInfo
globallyUniqueString
temporaryDirectory
URLByAppendingPathComponent:
URLByAppendingPathExtension:
moveItemAtURL:toURL:error:
downloadTaskWithURL:completionHandler:
SHNetworkRecognitionRequester
NSURLSessionDelegate
NSObject
SHControlCenterService
SHXPCServiceProxy
SHXPCRecognitionProxy
SHXPCSystemServiceProxy
SHXPCFrameworkProxy
SHXPCServiceDelegate
NSXPCListenerDelegate
SHShazamXPCService
SHRecognitionControllerDelegate
SHPartnerAPIServerResponseParser
SHAudioRecorder
SHShazamSessionManager
SHSessionDelegate_Private
SHSessionDelegate
SHAudioSessionManagerDelegate
SHAudioRecorderDelegate
SHNotificationContentProvider
SHPartnerAPIStore
SHTokenizedEndpoint
NSCopying
SHPartnerAPISignatureMatcher
SHMatcher
SHAudioSessionManager
SHRecognitionController
SHShazamSessionManagerDelegate
SHBag
SHNotificationManager
SHPartnerAPISyncedLyricsParser
SHNotificationAttachmentProvider
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v24@0:8@16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v32@0:8@16@?24
v32@0:8@"NSURLRequest"16@?<v@?@"NSData"@"NSURLResponse"@"NSError">24
@32@0:8@16@?24
v16@0:8
@"NSURLSession"
v24@0:8@?16
v24@0:8@"SHMatcherRequest"16
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v24@0:8q16
v24@0:8@"SHMatcherResponse"16
v32@0:8@"SHMatcherResponse"16@"NSError"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@16@24@32
v32@0:8@16q24
v32@0:8@"SHRecognitionController"16@"SHMatcherResponse"24
v40@0:8@"SHRecognitionController"16@"SHMatcherResponse"24@"NSError"32
v32@0:8@"SHRecognitionController"16q24
@40@0:8@16@24@32
@24@0:8@16
@"SHRecognitionController"
@"SHEntitlements"
@"<SHXPCFrameworkProxy>"
@"NSObject<OS_os_transaction>"
@"NSString"
@40@0:8@16@24^@32
@32@0:8@16@24
@24@0:8q16
B24@0:8^@16
q16@0:8
@"<SHAudioRecorderDelegate>"16@0:8
v24@0:8@"<SHAudioRecorderDelegate>"16
B28@0:8i16^@20
^{OpaqueAudioQueue=}16@0:8
v24@0:8^{OpaqueAudioQueue=}16
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
[3^{AudioQueueBuffer}]
@"<SHAudioRecorderDelegate>"
^{OpaqueAudioQueue=}
@"NSObject<OS_dispatch_queue>"
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
B32@0:8@"SHSession"16@"SHSignature"24
v32@0:8@"SHSession"16@"SHMatch"24
v40@0:8@"SHSession"16@"SHSignature"24@"NSError"32
v24@0:8@"SHSession"16
v48@0:8@16@24@32@40
v48@0:8@"SHSession"16@"SHSignature"24@"SHMatcherResponse"32@"NSError"40
v32@0:8@"SHSession"16@"SHMatcherResponse"24
v32@0:8@16Q24
v32@0:8@"SHAudioSessionManager"16Q24
v40@0:8@"<SHAudioRecorder>"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
B24@0:8q16
@"<SHShazamSessionManagerDelegate>"
@"SHAudioSessionManager"
@"SHSession"
@"SHAudioRecorder"
@"SHStore"
@"NSArray"
@48@0:8@16@24@32@40
@"SHTokenizedEndpoint"
@"SHBag"
@24@0:8^{_NSZone=}16
B32@0:8q16@24
@"NSMutableDictionary"
v24@0:8@"SHSignature"16
@"<SHMatcherDelegate>"16@0:8
v24@0:8@"<SHMatcherDelegate>"16
@"<SHMatcherDelegate>"
@"NSISO8601DateFormatter"
@"SHPartnerAPIStore"
@"SHNetworkRecognitionRequester"
v24@0:8Q16
v20@0:8B16
@"<SHAudioSessionManagerDelegate>"
v20@0:8I16
v40@0:8@"SHShazamSessionManager"16@"SHMatcherResponse"24@"NSError"32
v24@0:8@"SHShazamSessionManager"16
B24@0:8@"SHShazamSessionManager"16
v40@0:8@16@24q32
B40@0:8@16@24q32
@"SHNotificationManager"
@"<SHRecognitionControllerDelegate>"
@"SHMatcherRequest"
@"SHShazamSessionManager"
@"NSObject<OS_dispatch_source>"
@"AMSBag"
@"SHMatchedMediaItem"
@"UNUserNotificationCenter"
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
URLSession
T@"NSURLSession",&,N,V_URLSession
v16@?0@"NSError"8
com.apple.ShazamKit.ShazamXPCService
com.apple.ShazamKit.ShazamXPCService.transaction
entitlements
T@"SHEntitlements",&,N,V_entitlements
frameworkProxy
T@"<SHXPCFrameworkProxy>",&,N,V_frameworkProxy
recognitionController
T@"SHRecognitionController",&,N,V_recognitionController
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
associatedBundleID
T@"NSString",C,N,V_associatedBundleID
matches
trackId
title
artist
weburl
openin
applemusic
metadata
retry
recordingIntermission
offset
coverart
adamId
contentrating
EXPLICIT
musicvideourl
lyrics
syncedlyrics
invalidSignature
invalidSignatureErrorCode
com.apple.ShazamKit.shazamaudiorecorder.dispatch
v8@?0
delegate
T@"<SHAudioRecorderDelegate>",W,N
recognitionSource
Tq,R,N
Tq,N,V_recognitionSource
audioQueue
T^{OpaqueAudioQueue=},N,V_audioQueue
audioStreamBasicDescription
T{AudioStreamBasicDescription=dIIIIIIII},N,V_audioStreamBasicDescription
audioRecorderDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_audioRecorderDispatchQueue
T@"<SHAudioRecorderDelegate>",W,N,V_delegate
external
internal
com.apple.ShazamKit.matchstreamingbuffer.dispatch
com.apple.ShazamKit.shazamsessionmanager.dispatch
v20@?0B8@"NSError"12
audioSessionManager
T@"SHAudioSessionManager",R,N,V_audioSessionManager
preferredSession
T@"SHSession",R,N
internalRecognizerSession
T@"SHSession",R,N,V_internalRecognizerSession
externalRecognizerSession
T@"SHSession",R,N,V_externalRecognizerSession
internalAudioRecorder
T@"SHAudioRecorder",R,N,V_internalAudioRecorder
externalAudioRecorder
T@"SHAudioRecorder",R,N,V_externalAudioRecorder
store
T@"SHStore",R,N,V_store
audioManagerDispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_audioManagerDispatchQueue
matchStreamingBufferDispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_matchStreamingBufferDispatchQueue
availableAudioSources
T@"NSArray",R,N,V_availableAudioSources
T@"<SHShazamSessionManagerDelegate>",W,N,V_delegate
com.apple.ShazamNotifications.main-thread
com.apple.ShazamNotifications.category.actionable
com.apple.ShazamNotifications.category.default
com.apple.ShazamNotifications.user-info.apple-music
SHAZAM_MODULE_TITLE
v16@?0@"UNNotificationAttachment"8
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_SUBTITLE
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_BODY
Could not find a valid API key
%@ is not a valid application name
%@ is not a valid installation ID
v32@?0@"SHTokenizedEndpoint"8@"NSString"16@"NSError"24
locallyProvidedEndpoint
T@"SHTokenizedEndpoint",&,N,V_locallyProvidedEndpoint
locallyProvidedAPIKey
T@"NSString",&,N,V_locallyProvidedAPIKey
T@"SHBag",&,N,V_bag
partnerName
T@"NSString",R,C,N,V_partnerName
installationID
T@"NSString",R,C,N,V_installationID
{installationid}
{tagid}
{language}
{countrycode}
originalURLString
T@"NSString",C,N,V_originalURLString
tokenDictionary
T@"NSMutableDictionary",&,N,V_tokenDictionary
tokenURLString
T@"NSString",R,C,N
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
POST
signature
data:audio/vnd.shazam.sig;base64,%@
audioSource
startDate
sessionDuration
%.2f
ShazamKit/%@ model/%@ %@/%@ %@
User-Agent
X-Shazam-Api-Key
application/json
Content-Type
T@"<SHMatcherDelegate>",W,N
T@"SHPartnerAPIStore",&,N,V_store
networkRequester
T@"SHNetworkRecognitionRequester",&,N,V_networkRequester
iso8601Formatter
T@"NSISO8601DateFormatter",R,N,V_iso8601Formatter
T@"<SHMatcherDelegate>",W,N,V_delegate
com.apple.ShazamKit.ShazamXPCService.audiomanager.dispatch
isAudioSessionInterrupted
TB,N,V_isAudioSessionInterrupted
T@"NSObject<OS_dispatch_queue>",&,N,V_audioManagerDispatchQueue
T@"<SHAudioSessionManagerDelegate>",W,N,V_delegate
_SHMusicRecognitionName
matcherRequest
T@"SHMatcherRequest",&,N,V_matcherRequest
shazamSessionManager
T@"SHShazamSessionManager",R,N,V_shazamSessionManager
notificationManager
T@"SHNotificationManager",R,N,V_notificationManager
watchdogTimerSource
T@"NSObject<OS_dispatch_source>",R,N,V_watchdogTimerSource
T@"<SHRecognitionControllerDelegate>",W,N,V_delegate
isRecognizing
TB,R,N
Shazam
shazam-partners
href
apiKey
%@/%@
v28@?0@"NSDictionary"8B16@"NSError"20
T@"AMSBag",&,N,V_bag
partner
T@"NSString",R,C,N,V_partner
core
com.apple.ShazamKit
com.apple.ShazamNotifications
NOMATCH
v16@?0@"UNNotificationContent"8
currentMediaItem
T@"SHMatchedMediaItem",&,N,V_currentMediaItem
userNotificationCenter
T@"UNUserNotificationCenter",&,N,V_userNotificationCenter
canSendNotificationForNoMatch
footer
syncedtext
text
v24@?0@"NSURL"8@"NSError"16
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
Failed to setup the remote proxy %@
Failed to set tmp dir suffix
Deallocating the XPC Service
Missing remote recognition entitlement
Missing audio recognition entitlements
Recognition Controller already recognizing
Stopping recognition
Partner API parser: No response
Partner API parser: Invalid signature, returning results, recording intermission %f, retry %f
Partner API parser: has match %@
Partner API parser: Returning results, recording intermission %f, retry %f
Deallocating SHAudioRecorder
Failed to create a new audio queue input with error %@
Failed to set audio queue property
Failed to add isRunning property listener
Failed to start audio queue, retry one more time
Failed to stop audio queue %@
Failed to remove isRunning property listener %@
Failed to dispose audio queue %@
Failed to start audio queue after a retry
Audio queue <%p> running state has changed
Deallocating SHShazamSessionManager
Failed to stop internal recognizer with error: %@
Failed to stop external recognizer with error: %@
Failed to start internal recorder %@
Failed to start external recorder %@
Failed to start recognizers with error: %@
Using internal recognition session as the preferred session
Using external recognition session as the preferred session
Session: %@ didFindMatch: %@
Session: %@ is not preferred for didFindMatch
Session: %@ didFinishMatchAttempt calls delegate: %@
Session: %@ is not preferred for didNotFindMatchForSignature
Session: %@ didNotFindMatchForSignature calls delegate: %@
Told not to resume after audio interruption ended
Unable to resume recognition after audio interruption: %@
Partner API matching signature of length %f with data of length %lu at %@
Received network response, no data %@
Deallocating audio session manager
Register observers
Remove observers
Deactivating audio session
Failed to deactivate AVAudioSession: %@
Audio interruption started, stopping recognition
Audio interruption ended
Media services lost notification - stopping recognition
Media services reset notification - restarting recognition
Activating audio session
Failed to set category on AVAudioSession: %@
Failed to enable haptics while recording: %@
Failed to decouple IO AVAudioSession: %@
Failed to activate AVAudioSession: %@
handleAudioSessionRouteChange: %@
Deallocating RecognitionController
RecognitionController is already matching
startRecognition of single signature
startRecognition of based upon deadline %@
Not recognizing so returning from stopRecognition
Match attempt ignored, not recognizing
Tagging finish conditions met - stopping
Watchdog timer fired
Sending no match notification
Sending match notification
Failed to schedule notification: %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.shazamkit.controlcenter.ShazamModule</string>
</array>
<key>com.apple.private.mediasafetynet.exception.shazam</key>
<true/>
<key>com.apple.private.shazamkit.allow-remote-recognition</key>
<true/>
<key>com.apple.private.shazamkit.allow-signature-generation</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.ShazamNotifications</string>
</array>
<key>com.apple.security.device.audio-input</key>
<true/>
<key>com.apple.security.device.microphone</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/com.apple.ShazamKit.ShazamXPCService/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Caches/com.apple.AppleMediaServices/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Preferences/com.apple.ShazamKit.ShazamXPCService.plist</string>
<string>/Library/Caches/</string>
<string>/Library/Logs/com.apple.StoreServices/HTTPArchives/</string>
<string>/Containers/Data/Application/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.controlcenter.remoteservice</string>
<string>com.apple.audio.AudioSession</string>
<string>com.apple.audio.AudioQueueServer</string>
<string>com.apple.coremedia.capturesource</string>
<string>com.apple.coremedia.capturesession</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.coremedia.systemcontroller.xpc</string>
<string>com.apple.coremedia.remotequeue</string>
<string>com.apple.audio.AudioComponentRegistrar</string>
<string>com.apple.coremedia.audiodeviceclock.xpc</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.coremedia.admin</string>
<string>com.apple.audio.SystemSoundServer-iOS</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.systemstatus.activityattribution</string>
<string>com.apple.mediasafetynet.exceptions</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.itunesstored</string>
<string>com.apple.coreaudio</string>
<string>com.apple.coremedia</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.AppleMediaServices</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
