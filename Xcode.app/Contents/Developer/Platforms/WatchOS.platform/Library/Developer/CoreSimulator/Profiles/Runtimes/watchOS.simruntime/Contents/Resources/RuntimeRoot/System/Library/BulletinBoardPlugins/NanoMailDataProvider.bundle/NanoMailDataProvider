com.apple.NanoMail.Retail.nextUnreadMessage
com.apple.NanoMail.failedSending
com.apple.NanoMail.newMessage
sender
subject
body
com.apple.NanoMailDataProvider
%@ = Sender (example: "Gustavo Chaurais <gchaurais@apple.com>")
%@ = Subject (example: "Running late")
%@ = Body text (example: "I'll be there in 10.")
Display alert for a message that has failed being sent.
%@ = Subject (example: "Running late")
Display alert for the next unread nessage in the database. This is only used in demo mode, currently for the F5 hardware.
v8@?0
date
com.apple.NanoMail
com.apple.Mail
MAIL
kNMSubtypeIndex
apple-internal-install
%@:%@
Gustavo Chaurais <gchaurais@apple.com>
Lunch
Where are we going for lunch this weekend? I heard there's a new Brazilian Steakhouse in San Jose. Wanna check it out?
B32@?0@8Q16^B24
NO_FROM
NO_SUBJECT
SENDING_FAILURE_ACCOUNT_MESSAGE
SENDING_FAILURE_NO_ACCOUNT_MESSAGE
SENDING_FAILURE_MESSAGE
SENDING_FAILURE_TITLE
SENDING_FAILURE_TRY_AGAIN_BUTTON
SENDING_FAILURE_TAP_TO_RADAR_BUTTON
 <>#%{}|\^[]`
message:%@
@"BBSectionInfo"16@?0@"BBSectionInfo"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
providerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_providerQueue
nanoMailService
T@"NNMKNanoMailService",&,N,V_nanoMailService
settingsGateway
T@"BBSettingsGateway",&,N,V_settingsGateway
bbObserver
T@"BBObserver",&,N,V_bbObserver
systemBBSectionInfo
T@"BBSectionInfo",&,N,V_systemBBSectionInfo
isLoaded
TB,N,V_isLoaded
messageIdsPostedAsBulletins
T@"NSMutableSet",&,N,V_messageIdsPostedAsBulletins
messagesWaitingForContentByMessageId
T@"NSMutableDictionary",&,N,V_messagesWaitingForContentByMessageId
retrievingAccountsSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_retrievingAccountsSemaphore
accountsByAccountId
T@"NSMutableDictionary",&,V_accountsByAccountId
retrievingUnreadMessagesSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_retrievingUnreadMessagesSemaphore
unreadMessagesRetrieved
T@"NSArray",&,V_unreadMessagesRetrieved
retrievingSendingFailuresSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_retrievingSendingFailuresSemaphore
failureSubjectsByComposedMessageIdsRetrieved
T@"NSDictionary",&,V_failureSubjectsByComposedMessageIdsRetrieved
subtypesBeingUsedForFailures
T@"NSMutableIndexSet",&,N,V_subtypesBeingUsedForFailures
connectivityManager
T@"NNMKIDSConnectivityManager",&,N,V_connectivityManager
Sending Mail Failed
A Mail App message failed to send on Apple Watch running %@.
Crash/Hang/Data Loss
I Didn't Try
547623
Mail
watchOS
tap-to-radar://new?Title=%@&Description=%@&Classification=%@&Reproducibility=%@&BundleID=%@&ComponentID=%@&ComponentName=%@&ComponentVersion=%@&AutoDiagnostics=phone,watch
Successfully opened
Failed to open
NRPairedDeviceRegistry
Unable to find class %s
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
/System/Library/PrivateFrameworks/NanoRegistry.framework/Contents/MacOS/NanoRegistry
NRDevicePropertyIsAltAccount
LSApplicationWorkspace
/System/Library/PrivateFrameworks/MobileCoreServices.framework/MobileCoreServices
/System/Library/PrivateFrameworks/MobileCoreServices.framework/Contents/MacOS/MobileCoreServices
Starting NanoMail DataProvider.
Monitoring IDS Conectivity to #wakeup nanomaild when needed.
Requesting Accounts.
NanoMail Application is not installed. Returning zero bulletins...
BBServer requested first %lu bulletins. Loading from database...
clearedInfo is not an array. %{public}@
Message id previously cleared. %{public}@
Ignoring bulletin loading from database because it's expired (Message ID: %{public}@ - Date: %{public}@).
Loaded %lu first bulletins from database. Message IDs: %{public}@
Loading bulletins from database timed out.
BBServer requested first %lu bulletins. Device is locked. Returning 0 bulletins...
Requested to clear bulletin with message id. %{public}@
Requested to clear bulletin with nil message id.
Missing accounts to generate subsections
Missing _systemBBSectionInfo to generate subsections
Failure bulletin dismissed (Id: %{public}@).
User requested to retry composed message (Id: %{public}@).
User requested to file a radar
Requested action not supported
DataProvider received accounts %{public}@
DataProvider failed to receive accounts with error: %{public}@
DataProvider received new account %{public}@ 
Account does not have accountId. Dropping it. %{public}@
Did add message %{public}@
Message is not valid to generate notification. %{public}@ - %lu - 
Message From Watch Push Notification received (Message Id: %{public}@ 
Ignoring notification because a standalone push has arrived first. Message Id: %{public}@ - Notification Id: %{public}@ - Replaced notification: %lu
Message received with no content (Message Id: %{public}@ - Message Id Header: %{public}@, Source: %lu). Waiting for content...
Message received with content (Message Id: %{public}@ - Message Id Header: %{public}@). Posting notification...
Replacing bulletin since message has been replaced and waiting for content (Message Id: %{public}@ - Message Id Header: %{public}@ - Old Id: %{public}@). Replacing notification...
Did update message %{public}@
Received content for message (Message Id: %{public}@ - Message Id Header: %{public}@). Posting notification...
Message that had already been posted updated (Message Id: %{public}@ - Message Id Header: %{public}@). Updating notification...
Message updated to withdraw bulletin (Message Id: %{public}@ - Message Id Header: %{public}@). Removing bulletin...
Message updated to withdraw bulletin (Notification Id: %{public}@ -  Message Id: %{public}@ - Message Id Header: %{public}@). Removing bulletin...
Message deleted (Id: %{public}@). Removing bulletin...
All messages deleted. Invalidating bulletins...
Failure sending composed message reported. (Composed Message Id: %{public}@)
Cache reload requested. Invalidating bulletins...
DataProvider reconnected to nanomaild.
CUITrigger requested - New Message (Content dictionary: %{public}@).
CUITrigger requested - Failure (Content dictionary: %{public}@).
New System BB Section Info received: %{public}@
No account for subsectionId. %{public}@, %{public}@
Dropping Mail Bulletin because we haven't received it's account or account settings yet (Message Id: %{public}@ - Account Id: %{public}@).
Positing bulletin, but shouldn't display due to notification settings (Message ID: %{public}@ - Date: %{public}@ - Settings: %{public}@).
Dropping bulletin because it's expired (Message ID: %{public}@ - Date: %{public}@).
Posting bulletin for Failure (Id: %{public}@).
Creating bulletin for message with id %{public}@, notification id %{public}@
Message does not have account. We will create bulletin with no subsection. (Id %{public}@, Notification Id %{public}@)
Unable to load section info since data provider hasn't yet loaded
Unable to update subsection since there is no section info
Pinging nanomaild to #wakeup due to connectivity changed. %lu
%@ Tap to Radar url, URL: %@
softlink:r:path:/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
softlink:r:path:/System/Library/PrivateFrameworks/CarouselServices.framework/CarouselServices
softlink:r:path:/System/Library/PrivateFrameworks/MobileCoreServices.framework/MobileCoreServices
softlink:r:lib:libsysdiagnose
zPLR
zPLR
NNMLDataProvider
NNMKNanoMailServiceDelegate
NSObject
CSLSUIProvider
NNMKIDSConnectivityObserver
BBObserverDelegate
BBDataProvider
BBSectionIdentity
NNMLTapToRadar
init
initWithServiceName:interface:
setDelegate:
setObserver:
requestAccounts
setObserverFeed:
sharedInstance
stringWithFormat:
addUIProvider:forUITriggerName:englishUsage:
removeUIProvider:withUITriggerName:
dealloc
_retrieveCurrentSystemBBSectionInfo
sortDescriptorWithKey:ascending:
arrayWithObject:
LocalizedStringFromFramework:
isNanoMailInstalled
publisherDestination
maximumCount
sinceDate
enabledSectionIDs
isDeviceUnlocked
allObjects
mutableCopy
countByEnumeratingWithState:objects:count:
isEqualToString:
removeObject:
requestFirstUnreadMessages:sinceDate:fromAccountsWithIds:orVIPs:orNotifyConversation:excludingMessageIds:
_bulletinRequestForMessage:notificationType:
date
_isBulletinWithDateExpired:
addObject:
messageId
count
requestFailedComposedMessages
allKeys
objectForKeyedSubscript:
_bulletinRequestForFailureForComposedMessageId:subject:error:
array
removeObjectAtIndex:
recordID
_shouldGenerateSubsections
_generateSubsectionsFromAccounts
systemBBSectionInfo
subsections
allValues
arrayWithCapacity:
_copySectionInfo:isSubsection:
accountId
setSubsectionID:
actionID
bulletinRecordID
bulletinContext
objectForKey:
unsignedIntegerValue
removeIndex:
discardComposedMessageWithId:
resendComposedMessageWithId:
kickstartForFailedEmail
dictionaryWithCapacity:
setObject:forKeyedSubscript:
updateSubsectionsForSectionInfo:
initWithCapacity:
_messageStatusValidForGeneratingNotification:
containsObject:
source
_postNotificationForMessage:
replaceStandaloneNotification
notificationMessageId
_messageHasContentYet:
messageIdHeader
_updateNotificationForMessage:
_deleteBulletinForMessageWithId:
removeAllObjects
_postSendingFailureForComposedMessageId:subject:error:
bulletinRequestForNewMessageUITrigger:
bulletinRequestForFailureUITrigger:
bulletinRequestForRetailNextUnreadMessageUITrigger
UUID
UUIDString
setMessageId:
setDateReceived:
setFrom:
setSubject:
setPreview:
setSubsectionIDs:
setUsesExternalSync:
dateWithTimeIntervalSince1970:
unreadMessagesRetrieved
firstObject
sectionID
sectionIdentifier
accountsByAccountId
_notificationsEnabledForSectionInfo:
recordNotificationSettingsEnabled:
subsectionID
indexOfObjectPassingTest:
dateWithTimeIntervalSinceNow:
timeIntervalSince1970
dateReceived
subsectionIDs
allowsNotifications
notificationCenterSetting
removeObjectForKey:
checkState:
messageContentHasBeenDownloadedForMessage:
setRecordID:
publisherBulletinId
length
setPublisherBulletinID:
_formattedPublisherBulletinID:
serverId
publisherBulletinID
setDismissalID:
setSectionID:
setShowsUnreadIndicator:
_soundForMessage:
setSound:
setContextValue:forKey:
setSectionSubtype:
displayName
setThreadID:
subject
from
addressComment
preferredCompositeName
setTitle:
setSubtitle:
setDate:
preview
setMessage:
conversationId
setWithObjects:
setAlertSuppressionContexts:
URLWithString:
launchActionWithURL:callblock:
setDefaultAction:
initWithToneAlert:
containsIndex:
code
userInfo
addIndex:
numberWithUnsignedInt:
actionWithIdentifier:
setActivationMode:
setDismissAction:
appearanceWithTitle:
setAppearance:
setSupplementaryActions:
compare:
initWithType:
setTopic:
initWithToneAlertConfiguration:
settingsGateway
sectionInfoForSectionID:
sharedSectionInfoStore
sectionInfoWithSectionID:
showsOnExternalDevices
alertType
characterSetWithCharactersInString:
invertedSet
stringByAddingPercentEncodingWithAllowedCharacters:
defaultSectionInfoForType:
enabled
setEnabled:
setAllowsNotifications:
setAlertType:
sectionInfoSettings
copy
setSectionInfoSettings:
setNotificationCenterSetting:
lockScreenSetting
setLockScreenSetting:
subsectionPriority
setSubsectionPriority:
_subsectionWithId:inSectionInfo:
isEqual:
isTinker
updateSectionInfoForSectionID:withHandler:
nanoMailService
pingServer
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
nanoMailService:didReplyWithConversationOperations:totalConversationsCount:willFetch:error:reloadCache:lastUpdateByMailboxId:
nanoMailService:didReplyWithMessage:
nanoMailService:didReplyWithMessageContent:
nanoMailService:didReplyWithMessageContentLoadFailedForMessageWithId:
nanoMailService:didFailSyncingAttachment:messageId:
nanoMailService:didReplyWithAccounts:error:
nanoMailService:didReplyWithMailboxSelection:
nanoMailService:didReplyWithComposedMessageIds:progress:
nanoMailService:didReplyWithFailedComposedMessageIdsAndSubjects:
nanoMailService:didReplyWithFirstUnreadMessages:
nanoMailService:didReplyWithIsConnected:
nanoMailService:didAddNewMessage:
nanoMailService:didReceiveMessage:replacingPreviousMessageWithId:
nanoMailService:didUpdateMessage:
nanoMailService:didDeleteMessageWithId:
nanoMailService:didExecuteConversationOperations:
nanoMailService:didReceiveContentForMessageWithId:
nanoMailService:didReceiveImageAttachmentForMessageWithId:contentId:
nanoMailService:didAddNewAccount:
nanoMailService:didUpdateAccount:
nanoMailService:didDeleteAccountWithId:
nanoMailService:didChangeMailboxSelection:
nanoMailService:didReportFailureSendingComposedMessageWithId:subject:error:
nanoMailService:didReportSendingComposedMessageStartedWithId:referenceMessageId:
nanoMailService:didFinishSyncingMessagesSuccessfullyReceivingMessages:initialMessages:
nanoMailService:didFailSyncingMessagesWithError:
nanoMailServiceDidNotifyOldMessagesAvailable:
nanoMailServiceDidNotifyFetchRequestCompleted:batchResponse:mailboxIds:
nanoMailService:didReportProgress:forComposedMessageWithId:referenceMessageId:
nanoMailServiceDidDeleteAllMessages:
nanoMailServiceDidRequestReloadCache:
nanoMailService:connectivityDidChange:
nanoMailServiceXPCConnectionInterrupted:
nanoMailServiceXPCConnectionReconnected:
nanoMailService:didFailWithError:
nanoMailService:didUpdateMailboxWithId:lastUpdate:
nanoMailService:didReplyWithMessagesCount:
nanoMailService:didReplyWithAllMessages:
nanoMailService:didReplyWithAddedSubsectionId:inParentSectionId:
nanoMailService:didChangeAccountValidationStatus:accountName:
requestUITriggerWithRegistration:UITriggerName:withDictionary:withReason:withCompletion:
handleIDSConnectivityStateChange:
handleIDSConnectionChanged:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:updateGlobalSettings:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:noteBulletinsLoadedForSectionID:
universalSectionIdentifier
defaultSectionInfo
sectionDisplayName
sectionIcon
sectionIconData
parentSectionIdentifier
sortDescriptors
bulletinsWithRequestParameters:lastCleared:
clearedInfoForBulletins:lastClearedInfo:
clearedInfoForClearingAllBulletinsWithLastClearedInfo:
clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:
clearedInfoForBulletins:
sectionParameters
dataProviderDidLoad
defaultSubsectionInfos
displayNameForSubsectionID:
migrateSectionInfo:oldSectionInfo:
noteSectionInfoDidChange:
receiveMessageWithName:userInfo:
handleBulletinActionResponse:
handleBulletinActionResponse:withCompletion:
syncsBulletinDismissal
bulletinsFilteredBy:count:lastCleared:
bulletinsFilteredBy:enabledSectionIDs:count:lastCleared:
_sectionInfoSettingsMatchesSubsections:
_parentSectionInfoSettingsMatchesSubsections:
providerQueue
setProviderQueue:
setNanoMailService:
setSettingsGateway:
bbObserver
setBbObserver:
setSystemBBSectionInfo:
isLoaded
setIsLoaded:
messageIdsPostedAsBulletins
setMessageIdsPostedAsBulletins:
messagesWaitingForContentByMessageId
setMessagesWaitingForContentByMessageId:
retrievingAccountsSemaphore
setRetrievingAccountsSemaphore:
setAccountsByAccountId:
retrievingUnreadMessagesSemaphore
setRetrievingUnreadMessagesSemaphore:
setUnreadMessagesRetrieved:
retrievingSendingFailuresSemaphore
setRetrievingSendingFailuresSemaphore:
failureSubjectsByComposedMessageIdsRetrieved
setFailureSubjectsByComposedMessageIdsRetrieved:
subtypesBeingUsedForFailures
setSubtypesBeingUsedForFailures:
connectivityManager
setConnectivityManager:
.cxx_destruct
_isLoaded
_providerQueue
_nanoMailService
_settingsGateway
_bbObserver
_systemBBSectionInfo
_messageIdsPostedAsBulletins
_messagesWaitingForContentByMessageId
_retrievingAccountsSemaphore
_accountsByAccountId
_retrievingUnreadMessagesSemaphore
_unreadMessagesRetrieved
_retrievingSendingFailuresSemaphore
_failureSubjectsByComposedMessageIdsRetrieved
_subtypesBeingUsedForFailures
_connectivityManager
activePairedDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
valueForProperty:
boolValue
launchTapToRadarForFailedEmail
currentDevice
systemVersion
mainBundle
bundleIdentifier
URLHostAllowedCharacterSet
defaultWorkspace
openURL:withOptions:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24Q32B40@44B52@56
v32@0:8@16@24
v40@0:8@16@24@32
v28@0:8@16B24
v48@0:8@16@24@32@40
v32@0:8@16B24B28
v24@0:8@16
v36@0:8@16B24@28
v48@0:8@16q24@32@40
v32@0:8@16Q24
v40@0:8@16Q24@32
v64@0:8@"NNMKNanoMailService"16@"NSArray"24Q32B40@"NSError"44B52@"NSDictionary"56
v32@0:8@"NNMKNanoMailService"16@"NNMKMessage"24
v32@0:8@"NNMKNanoMailService"16@"NNMKMessageContent"24
v32@0:8@"NNMKNanoMailService"16@"NSString"24
v40@0:8@"NNMKNanoMailService"16@"NSString"24@"NSString"32
v40@0:8@"NNMKNanoMailService"16@"NSArray"24@"NSError"32
v32@0:8@"NNMKNanoMailService"16@"NNMKMailboxSelection"24
v40@0:8@"NNMKNanoMailService"16@"NSDictionary"24@"NSDictionary"32
v32@0:8@"NNMKNanoMailService"16@"NSDictionary"24
v32@0:8@"NNMKNanoMailService"16@"NSArray"24
v28@0:8@"NNMKNanoMailService"16B24
v40@0:8@"NNMKNanoMailService"16@"NNMKMessage"24@"NSString"32
v32@0:8@"NNMKNanoMailService"16@"NNMKAccount"24
v48@0:8@"NNMKNanoMailService"16@"NSString"24@"NSString"32@"NSError"40
v32@0:8@"NNMKNanoMailService"16B24B28
v32@0:8@"NNMKNanoMailService"16@"NSError"24
v24@0:8@"NNMKNanoMailService"16
v36@0:8@"NNMKNanoMailService"16B24@"NSArray"28
v48@0:8@"NNMKNanoMailService"16q24@"NSString"32@"NSString"40
v40@0:8@"NNMKNanoMailService"16@"NSString"24@"NSDate"32
v32@0:8@"NNMKNanoMailService"16Q24
v40@0:8@"NNMKNanoMailService"16Q24@"NSString"32
v56@0:8@16@24@32q40@?48
v56@0:8@"CSLSUITriggerRegistration"16@"NSString"24@"NSDictionary"32q40@?<v@?B@"NSString">48
v24@0:8Q16
v20@0:8B16
v52@0:8@16@24Q32B40@?44
v40@0:8@16@24Q32
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v32@0:8@"BBObserver"16@"BBGlobalSettings"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
@"BBSectionInfo"16@0:8
@"BBSectionIcon"16@0:8
@"NSData"16@0:8
@32@0:8@16@24
@24@0:8@16
@40@0:8@16@24@32
v16@0:8
B32@0:8@16@24
v32@0:8@16@?24
@40@0:8Q16Q24@32
@48@0:8Q16@24Q32@40
@"NSArray"16@0:8
@"NSSet"32@0:8@"BBBulletinRequestParameters"16@24
@32@0:8@"NSSet"16@24
@40@0:8@"NSDate"16@"NSDate"24@32
@24@0:8@"NSSet"16
@"BBSectionParameters"16@0:8
@"NSString"24@0:8@"NSString"16
B32@0:8@"BBSectionInfo"16@"BBSectionInfo"24
v24@0:8@"BBSectionInfo"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"BBActionResponse"16
v32@0:8@"BBActionResponse"16@?<v@?B>24
@"NSSet"40@0:8Q16Q24@32
@"NSSet"48@0:8Q16@"NSSet"24Q32@40
@32@0:8@16Q24
@28@0:8@16B24
@"NSObject<OS_dispatch_queue>"
@"NNMKNanoMailService"
@"BBSettingsGateway"
@"BBObserver"
@"BBSectionInfo"
@"NSMutableSet"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_semaphore>"
@"NSArray"
@"NSDictionary"
@"NSMutableIndexSet"
@"NNMKIDSConnectivityManager"
