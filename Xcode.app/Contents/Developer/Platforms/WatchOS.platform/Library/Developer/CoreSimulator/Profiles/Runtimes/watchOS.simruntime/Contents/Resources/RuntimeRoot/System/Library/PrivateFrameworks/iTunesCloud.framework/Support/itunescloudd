ICDPowerEventLogger
ICDCloudMusicLibraryRequestHandler
ICDCloudMusicLibrarySagaUpdateTaskHelper
ICDCloudMusicLibraryBackgroundTaskScheduler
NSObject
ICDCloudMusicLibraryProgressObserver
ICDCloudMusicLibraryJaliscoUpdateTaskHelper
ICDJaliscoSupportedMediaKindsHandler
ICEnvironmentMonitorObserver
CloudServerOptions
ICUpdateResponse
ICUpdateRequest
UpdateResponseParserDelegate
DKDAAPParserDelegate
PrivacyConsciousDescription
SagaLoadBulkContainerArtworkInfoOperation
JaliscoSetItemPropertyOperation
JaliscoDeauthenticateOperation
SagaCreatePlaylistOperation
SagaSDKCreatePlaylistOperation
ICBulkRemoveRequest
ICBulkRemoveItemRequest
ICBulkRemovePlaylistRequest
JaliscoLoadChapterArtworkOperation
ICDDefaults
BaseRequestHandler
ICMusicLibraryRecommendationResult
ICMusicLibraryArtistAffinityAnalyzer
ICBulkSetContainerPropertyRequest
SagaSubscribedPlaylistUpdater
ContainerCloudIDsParserDelegate
SubscribedContainersUpdateRequiredParserDelegate
ICDServerNotificationsManager
CloudAuthenticateOperation
ICDCloudServiceStatusMonitor
ICCloudServiceStatusRemoteMonitoringService
NSXPCListenerDelegate
ICCloudServerAvailabilityServiceProtocol
ICDNetworkAvailabilityService
ICBulkLyricsInfoRequest
ICBulkLyricsInfoResponse
JaliscoImporter
ICDLoggable
SagaPublishPlaylistOperation
PublishPlaylistResponseParserDelegate
CloudUserNotificationController
UNUserNotificationCenterDelegatePrivate
UNUserNotificationCenterDelegate
ICCloudContentTasteUpdateResponse
CloudKeepLocalUtilities
CloudLoadBulkArtworkInfoOperation
ICDSaga
ICSetContainerPropertiesResponse
ICSetContainerPropertiesRequest
SetContainerPropertiesResponseParserDelegate
CloudArtworkOperationQueue
SagaCreateGeniusPlaylistOperation
ICCloudServerListenerEndpointServiceProtocol
ICCloudServerProtocol
ICDServer
ICDServerNotificationsManagerDelegate
ICDBackgroundTaskScheduling
ICDHandlerProviding
ICDServerProtocol
JaliscoArtworkImporter
CloudArtistHeroImageImporter
QueueAwareOperation
DetermineArtistStoreIDLookupTypeOperation
UpdateArtistStoreIDsByBulkLibraryMatchLookupOperation
UpdateArtistStoreIDsByMapOperation
UpdateArtistStoreIDsByLibraryMatchLookupOperation
UpdateArtistArtworkTokensOperation
DownloadArtistHeroImagesOperation
FinishArtistHeroUpdateOperation
ICBulkArtworkInfoRequest
ICBulkItemArtworkInfoRequest
ICBulkPlaylistArtworkInfoRequest
ICBulkArtworkInfoResponse
ICDServerOperationsManager
ICCreateGeniusContainerResponse
ICCreateGeniusContainerRequest
ICDJaliscoMediaFilter
ICMusicLibraryContentItemSnapshot
ICDAccountManagerState
NSCopying
GeniusAdditions
AMPMusicFeature
ICMusicLibraryArtistAffinitySnapshot
CloudLibrary
CloudLibraryConcurrentOperation
SagaSetItemPropertyOperation
SagaRequestHandler
CloudLibraryOperation
NSSecureCoding
NSCoding
SagaUpdateSubscribedPlaylistsOperation
SagaGetGeniusItemsOperation
JaliscoUpdateGeniusDataOperation
NSURLSessionTaskDelegate
NSURLSessionDelegate
CloudService
ICAppleMusicAPITokenRequest
CloudGeniusUtilities
CloudGeniusBooleanTransform
CloudGeniusDataTransform
CloudGeniusDateTransform
CloudGeniusHasValueTransform
CloudGeniusNegatedBooleanTransform
CloudGeniusOnlyIfDoesNotHaveValueTransform
CloudGeniusOnlyIfHasValueTransform
CloudGeniusOnlyIfNegatedBooleanTransform
CloudGeniusOnlyIfNonEmptyStringTransform
CloudGeniusOnlyIfNonZeroDoubleTransform
CloudGeniusOnlyIfNonZeroIntegerTransform
CloudMusicSubscriptionStatusServiceListener
ICMusicSubscriptionStatusRemoteRequestingService
JaliscoRequestHandler
ICAppleMusicAPITokenResponse
ICDAdditions
ICDResponse
ICDAccountManagerStateChange
ICGetGeniusItemsRequest
ICGetGeniusItemsResponse
JaliscoGeniusOptOutOperation
ICCloudContentTasteUpdateItem
ICMusicLibraryRecommendationsRequest
SagaImporter
SagaLoadLyricsOperation
ICSubscribedContainersRequest
SagaUpdatePlaylistOperation
SagaRemovePlaylistOperation
ICCloudContentTasteResponseCacheManager
SagaUploadItemPlayDataOperation
AMPMusicArtistContent
ICMusicLibraryRecommendationController
NSError
JaliscoHideItemOperation
ICBulkSetItemPropertyRequest
CloudArtworkImportOperation
CloudAdditions
ICDDeleteOnDeallocTemporaryFile
ICProcessPlayActivityEventsRequestListener
CloudPlayActivityRequestListener
JaliscoLoadBulkItemArtworkInfoOperation
JaliscoLoadBooksOperation
BooksParserDelegate
ICMediaLibraryAccessPermissionsHelper
MediaLibraryAccessRevocationController
CloudPendingChangesCoordinator
ICFileAdditions
ICAppleMusicAPITokenError
SagaCloudSDKAddOperation
SagaCloudSDKAddItemToPlaylistOperation
ICAppleMusicAPITokenCollection
AMPMusicArtistNewContentResponse
CloudLibraryOptOutOperation
AMPMusicCatalogContent
DisableCloudLibraryOperation
ICDHandlerCoordinator
ICDHandlerCoordinating
CloudLibraryConnection
SagaUploadPlaylistArtworkOperation
CloudRemoteRequestOperationExecutionServiceListener
ICRemoteRequestOperationExecutingService
JaliscoUpdateOperation
SagaLoadBulkItemArtworkInfoOperation
ICCreateContainerResponse
ICCreateContainerRequest
ICSDKCreateContainerRequest
CreateContainerResponseParserDelegate
JaliscoMediaImporter
AMPMusicArtistNewContentRequest
SubscriptionRequestHandler
SagaCloudAddOperation
SagaCloudAddItemOperation
SagaCloudAddPlaylistOperation
SagaCloudAddItemToPlaylistOperation
CloudArtworkImportRequest
CloudArtworkImporter
MPMediaDownloadObserver
ICDManageableAccount
ML3AccountInformationProviding
ICDPrivacyPromptOperation
ICDCloudPushNotificationAccountRegistrationState
ICDCloudPushNotificationRegistrationState
CloudPushNotificationController
APSConnectionDelegate
ICItemsRequest
ICContainersRequest
ICMusicLibraryContentMetadataDescriptor
ICSetAddToPlaylistBehaviorRequest
SagaLibrary
ICDResponseDataParser
AppleMusicAPITokenIDSService
IDSServiceDelegate
CloudBackgroundTaskManager
CloudUpdateLibraryOperation
ICDAccountManager
ICDAccountManaging
ICCloudContentTasteUpdateOperation
SagaUploadPlaylistPlayDataOperation
ICDRequest
JaliscoMediaUpdateOperation
ICMusicLibraryRecommendationsResponse
CloudSetAddToPlaylistBehaviorOperation
ICDCloudServiceCapabilitiesRequestOperation
SagaArtworkImporter
ICUpdateContentTasteRequestListener
CloudContentTasteUpdateRequestListener
SagaSetAlbumItemPropertyOperation
SagaAddItemToPlaylistOperation
ICDCloudServiceCapabilitiesRequestContext
JaliscoLibrary
SagaRemoveItemOperation
ArtistImageRequestHandler
ICAddToLibraryResponse
ICAddToLibraryRequest
AddToLibraryResponseParserDelegate
SagaImportController
SagaImportControllerParserDelegate
ICSDKAddToLibraryResponse
ICSDKAddToLibraryRequest
ICSDKAddToPlaylistRequest
SDKAddToLibraryResponseParserDelegate
_ICDBackgroundTask
ICDBackgroundTaskManager
ICDBackgroundTaskManaging
logEvent:payload:
handlerForConfiguration:
initWithConfiguration:
setName:
setMaxConcurrentOperationCount:
setQualityOfService:
dictionary
sharedMonitor
addObserver:
currentDeviceInfo
isWatch
defaultCenter
_handleUserIdentityStoreDidChangeNotification:
addObserver:selector:name:object:
disableCloudLibraryWithReason:completionHandler:
updateLibraryWithReason:completionHandler:
_tryEnablingCloudMusicLibraryForReason:
musicLibrary
sagaLastKnownActiveLockerAccountDSID
longLongValue
userIdentity
accountDSID
setSagaLastKnownActiveLockerAccountDSID:
setSagaPrefersToMergeWithCloudLibrary:
userIdentityStore
getPropertiesForUserIdentity:error:
isActiveLocker
numberWithInteger:
_handleSagaAuthentication:finishedForReason:explicitUserAction:shouldStartInitialImport:completionHandler:
_runSagaAuthenticateOperationWithMergePreference:allowNoisyPrompt:cloudLibraryEnableReason:completionHandler:
_performJaliscoImportByAddingMediaKind:completionHandler:
configuration
_runDisableCloudLibraryOperationByDeletingDatabase:disableActiveLockerAccount:removeSourcePurchaseHistory:isHandlerDeactivating:completionHandler:
DSID
ic_sharedAccountStore
ic_storeAccountForStoreAccountID:error:
ic_updateAutomaticDownloadKindsByAddingMediaKindMusic:error:
updateJaliscoLibraryByRemovingMediaKind:completionHandler:
setJaliscoNeedsUpdateForTokens:
_prepareLibraryLoadErrorWithJaliscoError:sagaError:
count
objectForKey:
jaliscoOnDiskDatabaseRevision
sagaOnDiskDatabaseRevision
getPropertiesForUserIdentity:completionHandler:
updateProgressForLibraryType:completionHandler:
sagaAccountID
errorWithDomain:code:userInfo:
updateLibraryWithReason:allowNoisyAuthPrompt:isExplicitUserAction:completionHandler:
addOperation:priority:
addBackgroundOperation:priority:
cancelPendingChanges
updateProgress
importItemArtworkForSagaID:completionHandler:
importScreenshotForSagaID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
deprioritizeItemArtworkForSagaID:
deprioritizeScreenshotForSagaID:
deprioritizeContainerArtworkForSagaID:
createPlaylistWithPersistentID:properties:trackList:completionHandler:
createPlaylistWithPersistentID:properties:trackList:requestingBundleID:completionHandler:
publishPlaylistWithSagaID:completionHandler:
removeItemsWithSagaIDs:completionHandler:
removePlaylistsWithSagaIDs:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemIDs:itemIDs:completionHandler:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
addStoreItemWithOpaqueID:toPlaylistWithPersistentID:requestingBundleID:completionHandler:
addStoreItemWithAdamID:referral:completionHandler:
addStoreItemWithOpaqueID:requestingBundleID:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
setCloudAddToPlaylistBehavior:completionHandler:
setItemProperties:forSagaID:completionHandler:
setAlbumProperties:forItemsWithAlbumPersistentID:completionHandler:
updateItemPlayDataWithCompletionHandler:
updatePlaylistPlayDataWithCompletionHandler:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:requestReason:pinnedOnly:completionHandler:
loadGeniusItemsForSagaID:completionHandler:
loadArtworkInfoForSagaIDs:completionHandler:
loadArtworkInfoForContainerSagaIDs:completionHandler:
loadScreenshotInfoForSagaIDs:completionHandler:
cloudLibraryStateReason
importItemArtworkForPurchaseHistoryID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeScreenshotForPurchaseHistoryID:
disableJaliscoGeniusWithCompletionHandler:
removeLibraryWithCompletionHandler:
setItemProperties:forPurchaseHistoryID:completionHandler:
setJaliscoGeniusCUID:withCompletionHandler:
loadArtworkInfoForPurchaseHistoryIDs:completionHandler:
loadScreenshotInfoForPurchaseHistoryIDs:completionHandler:
loadIsJaliscoGeniusSupportedWithCompletionHandler:
loadJaliscoGeniusLearnMoreURLWithCompletionHandler:
loadJaliscoGeniusCUIDWithCompletionHandler:
loadJaliscoGeniusOperationStatusWithCompletionHandler:
isMediaKindDisabledForJaliscoLibrary:completionHandler:
enableJaliscoGeniusWithCompletionHandler:
updateJaliscoGeniusDataWithCompletionHandler:
cancelUpdateJaliscoGeniusDataWithCompletionHandler:
loadBooksForStoreIDs:withCompletionHandler:
loadMissingArtwork
hideItemsWithPurchaseHistoryIDs:completionHandler:
jaliscoLastExcludedMediaKinds
containsObject:
numberWithBool:
dictionaryWithObjectsAndKeys:
setObject:forKey:
_postLibraryUpdateProgressChangedForLibraryType:
removeObjectForKey:
integerValue
boolValue
_enqueueCloudUpdateLibraryOperationForReason:
numberWithFloat:
taskScheduler
scheduleBackgroundUpdateType:forConfiguration:
isRemoteServerReachable
_reloadSubscriptionStatusAndEnableCloudMusicLibraryWithReason:completionHandler:
initWithConfiguration:updateTaskHelper:
_handleMusicSubscriptionStatusDidChangeNotification:
removeObserver:
sharedContentTasteRequestListener
removeContentTasteOperationsForConnectionConfiguration:
_deactivateJaliscoLibraryByDeauthenticating:completionHandler:
_deactivateSagaLibraryByDeauthenticating:completionHandler:
updateSagaLibraryWithReason:allowNoisyAuthPrompt:isExplicitUserAction:completionHandler:
updateJaliscoLibraryWithReason:completionHandler:
decreasePriorityForAllOperations
musicLibraryForUserAccount:
defaultManager
allArtistImagesMapCacheFilePathURL
removeItemAtURL:error:
stringWithFormat:
error
copy
setCompletionBlock:
server
cancelOperationsWithCompletionHandler:
userInfo
objectForKeyedSubscript:
DSIDForUserIdentity:outError:
finishWithError:
isActive
initWithStartHandler:
addOperation:
_runSubscriptionStatusCheckOperationWithReason:completionHandler:
sharedBagProvider
initWithIdentity:
libraryDAAPConfiguration
maxSyncRetryIntervalSeconds
dateWithTimeIntervalSinceNow:
getBagForRequestContext:withCompletionHandler:
standardDefaults
shouldTreatSubscriptionStatusAsExpired
shouldTreatSubscriptionStatusCheckAsIncomplete
_enqueueSubscriptionStatusCheckForReason:
_performInitialJaliscoImportWithCompletionHandler:
_retryEnablingCloudMusicLibraryForReason:
intValue
isEqualToNumber:
sagaPrefersToMergeWithCloudLibrary
mergeToCloudLibraryPreference
_wasRestoredFromCloudBackup:
clearSagaCloudLibraryTroveID
clearSagaCloudLibraryCUID
isMediaSyncingSupported
_adjustMergePreferenceWithUserIdentityProperties:
daemonOptionsForConfiguration:
prohibitLibraryUpload
sagaCloudLibraryCUID
sagaCloudLibraryTroveID
length
initWithConfiguration:progressObserver:
increasePriorityForAllOperations
_performInitialSagaImportAllowingNoisyAuthPrompt:completionHandler:
_shouldHandleDaemonStartupOrAccountChangedNotificationWithProperties:
_canEnableCloudMusicLibraryOnPlatformsWithSideLoadedMediaContentWithProperties:includeLocalContentCheck:
_authenticateAndStartInitialImportWithMergePreference:userIdentityProperties:enableReason:withCompletionHandler:
_isNativeMusicAppInstalled
_getCurrentSubscriptionStatusForReason:
finish
_registerDeviceAndPerformInitialImportWithUserIdentityProperties:cloudLibraryEnableReason:completionHandler:
supportsAutomaticEnablingiCloudMusicLibrary
supportsSideLoadedMediaContent
_tryEnablingICMLOnDevicesSupportingSideLoadedContentWithProperties:reason:withCompletionHandler:
initWithConfiguration:mergeToCloudLibraryPreference:allowNoisyAuthPrompt:enableLibraryReason:
status
authenticateFailureCode
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
cancelAllOperations
_resetInternalCloudLibraryState
setDeleteDB:
setDisableActiveLockerAccount:
setRemoveSourcePurchaseHistoryForMusicTracks:
updateContentTasteForConnectionConfiguration:invalidateLocalCache:withCompletionHandler:
updateJaliscoLibraryByAddingMediaKind:completionHandler:
handlers
handler
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
scheduleBackgroundTaskToUpdateLibraryType:
startingUpdateOperationForLibraryType:isInitialImport:
finishedUpdateOperationForLibraryType:withResponse:
setUpdateProgress:forLibraryType:
shouldIncludeMediaKindSongForJaliscoImport
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
handleMusicAppRemoved
handleMusicAppInstalled
enableCloudLibraryAndStartInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completionHandler:
isUpdatingCloudLibrary
isUpdatingCloudLibraryWithCompletion:
updateCloudLibraryProgressWithCompletion:
addOperation:forLibraryType:priority:
addBackgroundOperation:forLibraryType:priority:
cancelPendingChangesForLibraryType:
loadLastKnownEnableICMLStatusWithCompletionHandler:
removeLibraryWithCompletion:
isMediaKindDisabledForJaliscoLibrary:completion:
becomeActive
becomeInactiveWithDeauthentication:completion:
.cxx_destruct
_sagaRequestHandler
_jaliscoRequestHandler
_musicSubscriptionCheckStatus
_accessQueue
_calloutQueue
_operationQueue
_retryQueue
_autoEnableFailureCount
_subscriptionStatusFailureCount
_autoRetryCloudAuthenticateFailureCount
_sagaImportFailureCount
_deauthOperationCount
_havePendingSubscriptionStatusCheck
_havePendingAutoEnableICMLCheck
_havePendingCloudUpdateLibraryCheck
_didAdjustMergePreference
_havePendingSagaUpdate
_didManuallyReloadCloudLibrary
_isPendingAuthentication
_isHandlerActive
_syncProgressDictionary
setProhibitLibraryUpload:
prohibitArtworkPrefetch
setProhibitArtworkPrefetch:
setSupportsAutomaticEnablingiCloudMusicLibrary:
_prohibitLibraryUpload
_prohibitArtworkPrefetch
_supportsAutomaticEnablingiCloudMusicLibrary
databaseRevision
setDatabaseRevision:
hasAddToPlaylistBehavior
setHasAddToPlaylistBehavior:
addToPlaylistBehavior
setAddToPlaylistBehavior:
_hasAddToPlaylistBehavior
_addToPlaylistBehavior
_databaseRevision
initWithAction:
setMethod:
_bodyDataForDatabaseRevision:
setBodyData:
setRequestPersonalizationStyle:
initWithDatabaseRevision:
responseWithResponse:
responseData
inputStreamWithData:
initWithStream:
setDelegate:
parse
serverRevision
writeUInt32:withCode:
requestWithDatabaseRevision:
canonicalResponseForResponse:
parserDidStart:
parser:didFinishWithState:
parserDidCancel:
parser:didFailWithError:
parser:shouldParseCode:
parser:shouldParseCodeAsContainer:
parser:didStartContainerCode:contentLength:
parser:didParseDataCode:bytes:contentLength:
parser:didEndContainerCode:
setServerRevision:
_serverRevision
isInternalBuild
hasDeveloperToken
developerToken
hasUserToken
userToken
privacyConsciousDictionaryRepresentation
privacyConsciousDescription
useLongIDs
itemKind
initWithConfiguration:purchaseHistoryID:properties:
initWithCoder:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
encodeWithCoder:
encodeInt64:forKey:
encodeObject:forKey:
initWithName:
beginTransaction
connection
databaseID
numberWithUnsignedLongLong:
arrayWithObjects:count:
requestWithDatabaseID:itemIDs:properties:useLongIDs:
setShouldPromptForAuthentication:
method
action
responseCode
setStatus:
sendRequest:withResponseHandler:
endTransaction
initWithPurchaseHistoryID:properties:
main
_purchaseHistoryID
_properties
removeSource:usingConnection:withCompletionHandler:
setJaliscoOnDiskDatabaseRevision:
clearJaliscoAccountID
setStorefrontIdentifier:
distantPast
setJaliscoLastGeniusUpdateDate:
jaliscoHasCloudGeniusData
clearAllGeniusData
setJaliscoHasCloudGeniusData:
setJaliscoIsMusicGeniusUserEnabled:
clearAllCloudKVSData
performDatabaseTransactionWithBlock:
initWithConfiguration:playlistPersistentID:properties:trackList:
requestWithDatabaseID:databaseRevision:playlistProperties:trackList:
setWithObjects:
decodeObjectOfClasses:forKey:
newWithPersistentID:inLibrary:
existsInLibrary
valueForProperty:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
mutableCopy
unsignedLongValue
containerID
setValue:forProperty:
updateRequired
supportsSecureCoding
initWithPlaylistPersistentID:properties:trackList:
isPersistent
playlistSagaID
_playlistPersistentID
_trackList
_playlistSagaID
requestWithDatabaseID:databaseRevision:playlistProperties:trackList:requestingBundleID:
initWithPlaylistPersistentID:properties:trackList:requestingBundleID:
initWithConfiguration:playlistPersistentID:properties:trackList:requestingBundleID:
_requestingBundleID
init
_bodyDataForSagaIDs:itemKind:
countByEnumeratingWithState:objects:count:
initWithDatabaseID:sagaIDs:itemKind:
numberWithUnsignedInt:
requestWithDatabaseID:itemID:
requestWithDatabaseID:itemIDs:
requestWithDatabaseID:containerID:
requestWithDatabaseID:containerIDs:
initWithConfiguration:dictionary:
ephemeralSessionConfiguration
setHTTPShouldUsePipelining:
sharedController
isCellularDataRestrictedForVideos
setAllowsCellularAccess:
initWithConfiguration:maxConcurrentRequests:qualityOfService:
shouldProhibitVideosActionForCurrentNetworkConditions
allKeys
isCancelled
predicateWithProperty:equalToInt64:
anyInLibrary:predicate:
unsignedIntValue
persistentID
artworkTokenForChapterWithItemPID:retrievalTime:
unsignedLongLongValue
initWithURLSession:configuration:cloudID:artworkToken:artworkType:sourceType:
setMediaType:
setAssetURL:
cancel
initWithDictionary:
_chapterArtworkToLoad
_powerAssertionIdentifier
_artworkDownloadSession
_artworkDownloadOperationQueue
_init
userDefaults
isNSArray__
_setOrRemoveObject:forKey:
stringForKey:
isNSString__
dataForKey:
isNSData__
initWithSuiteName:
daemonDefaults
knownAccountDSIDs
setKnownAccountDSIDs:
knownActiveAccountDSID
setKnownActiveAccountDSID:
pendingBackgroundTasksData
setPendingBackgroundTasksData:
setUserDefaults:
internalDefaults
setInternalDefaults:
_userDefaults
_internalDefaults
UTF8String
raise:format:
globalSerialQueue
supportsAccountlessHandling
accountlessHandler
setObject:forKeyedSubscript:
allValues
valueForKeyPath:
deleteHandlerForConfiguration:
managedConfigurations
performInitialLibraryUpdate
cancellAllOperations
onCalloutQueue:
cancelOperationsWithCompletion:
setTaskScheduler:
_userIdentity
_userIdentityStore
_configuration
_musicLibrary
_taskScheduler
icd_sagaDatabaseUserVersion
icd_setSagaDatabaseUserVersion:
setValue:forDatabaseProperty:
setSagaNeedsFullUpdateAfterNextUpdate:
emptyAllTables
libraryContainerPath
stringByAppendingPathComponent:
removeItemAtPath:error:
setSagaOnDiskDatabaseRevision:
notifyCloudLibraryAvailabilityDidChange
removeSource:withCompletionHandler:
enumeratorAtPath:
nextObject
hasSuffix:
dictionaryWithContentsOfFile:
setValue:forKey:
executeUpdate:withParameters:error:
enumerateKeysAndObjectsUsingBlock:
databaseConnectionAllowingWrites:withBlock:
predicateWithProperty:equalToInteger:
predicateWithProperty:value:comparison:
predicateMatchingPredicates:
queryWithLibrary:predicate:
array
numberWithLongLong:
addObject:
enumeratePersistentIDsUsingBlock:
setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:
predicateWithProperty:mask:value:
executeUpdate:
predicateWithProperty:
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
deleteAllEntitiesFromLibraryWithDeletionType:
executeQuery:withParameters:
int64ValueForFirstRowAndColumn
defaultRenderer
statementWithPrefix:inParameterCount:
updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:preserveExistingAvailableToken:usingConnection:
cleanupArtworkWithOptions:usingConnection:
sortJaliscoLastSupportedMediaKinds
setWithObject:
updateJaliscoExcludedMediaKindsWith:excludingMediaKindsInSet:
automaticDownloadsEnabled
deleteAutomaticDownloadsKey
ic_activeStoreAccountWithError:
ic_isAutomaticDownloadsEnabledForMediaKindMusic
setAutomaticDownloadsEnabled:
valueForDatabaseProperty:
unarchivedObjectOfClasses:fromData:error:
specificAccountWithDSID:
defaultIdentityStore
initWithUserIdentity:userIdentityStore:
deleteDatabaseProperty:
initWithAdamID:date:score:
adamID
date
score
_adamID
_date
_score
setLabel:
kindWithVariants:
setItemKind:
_requestItemProperties
setItemProperties:
results
initWithSong:
enumerateItemsUsingBlock:
aggregateLibraryRecommendationMetricsFromSnapshots:
createFeatureProviderDictionaryFromNewContentResponse:withLibraryArtistSnapshots:
performWithResponseHandler:
objectAtIndex:
numberWithInt:
artistAdamID
artistContentsCount
artistContentAtIndex:
adamId
uniqueAlbums
catalogContents
storeAdamID
numberWithUnsignedLong:
initWithShape:dataType:error:
catalogContentAtIndex:
contentFeatures
valueAtIndex:
setObject:atIndexedSubscript:
uniqueDatesWithAddedContent
cumulativePlayCount
daysSinceLastPlayedDate
averagePlaysPerItemAdded
numberWithDouble:
addEntriesFromDictionary:
initWithCalendarIdentifier:
isValid
artistMetadataDescriptor
valueForKey:
playCount
setCumulativePlayCount:
skipCount
cumulativeSkipCount
setCumulativeSkipCount:
albumMetadataDescriptor
songMetadataDescriptor
uniqueSongs
libraryAddedDate
components:fromDate:
lastPlayedDate
laterDate:
setLastPlayedDate:
initWithContentItemSnapshot:
propertySetWithProperties:
dictionaryWithObjects:forKeys:count:
initWithProperties:relationships:
performLibraryAnalysisFromResponse:withCompletionHandler:
performLibraryAnalysisWithCompletionHandler:
_bodyDataForContainerIDs:properties:
initWithDatabaseID:containerIDs:properties:
sharedContainerPropertyInfo
objectAtIndexedSubscript:
hasInfoForProperty:
elementCodeForProperty:
valueTypeForProperty:
enumerateObjectsUsingBlock:
requestWithDatabaseID:containerIDs:properties:
arrayWithCapacity:
setWithArray:
predicateWithProperty:values:
timeIntervalSinceReferenceDate
firstObject
ignoreMinRefreshInterval
enumeratePersistentIDsAndProperties:usingBlock:
requestReason
setReason:
payloadDownloadPathOverride
UUID
UUIDString
fileURLWithPathComponents:
setResponseDataDestinationFileURL:
path
databasePath
initWithLibraryPath:trackData:playlistData:
setTracksAreLibraryOwnedContent:
setPlaylistsAreLibraryOwnedContent:
sharedMediaLibraryService
performImport:fromSource:withProgressBlock:completionHandler:
initWithSubscribedPlaylistCloudIDs:cloudLibraryConnection:
performUpdateWithError:
playlistCloudIDs
setRequestReason:
setIgnoreMinRefreshInterval:
setPayloadDownloadPathOverride:
pinnedOnly
setPinnedOnly:
_ignoreMinRefreshInterval
_pinnedOnly
_playlistCloudIDs
_connection
_requestReason
_payloadDownloadPathOverride
inputStreamWithURL:
subscribedPlaylistCloudIDs
currentPlaylistCloudID
currentPlaylistKind
_currentPlaylistKind
_currentPlaylistCloudID
_subscribedPlaylistCloudIDs
_updateRequired
_setupNotifications
_tearDownNotifications
dealloc
_handleFirstUnlockNotification:
_handleLibraryAuthServiceTokenDidChangeNotification:
_handleAllowsExplicitContentChangedNotification:
isEqualToString:
_handleFamilyContentDeletionNotification:streamEvent:
_handleApplicationRegistration:notificationName:streamEvent:
delegate
notificationsManagerDidReceiveAccountChangeDarwinNotification:
notificationsManagerDidReceiveLibraryImportDidFinishDarwinNotification:
notificationsManagerDidReceiveCellularDataRestrictionDidChangeDarwinNotification:
notificationsManagerDidReceiveBuddySetupDoneDarwinNotification:
notificationsManagerDidReceivePhoneNumberChangedNotification:
notificationsManagerDidReceiveFirstUnlockNotification:
notificationsManager:didReceiveSubscriptionStatusDidChangeNotification:
notificationsManager:didReceiveAllowsExplicitContentDidChangeNotification:
notificationsManager:didReceiveAuthServiceTokenDidChangeNotification:
notificationsManagerDidReceiveCloudAuthenticationDidChangeDarwinNotification:
stringWithUTF8String:
notificationWithName:object:userInfo:
notificationsManager:didReceiveApplicationInstallationNotification:
initWithDownloaderAccountID:purchaserAccountID:familyID:
notificationsManager:didReceiveFamilyDeletionEventNotification:
initWithDelegate:
_didReceiveDistributedNotification:withStreamEvent:
_didReceiveDarwinNotification:
_didReceiveTelephonyCenterNotification:
_handleCloudAuthenticationDidChangeNotification
_delegate
enableReason
ic_cloudClientErrorWithCode:userInfo:
setError:
setIgnoreAccountChanges:
setMergeToCloudLibraryPreference:
setActiveLocker:
setCloudLibraryStateReason:
setAuthenticateFailureCode:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
shouldTreatSagaAddComputerCallAsFailed
setSagaAccountID:
allowNoisyAuthPrompt
setAllowNoisyAuthPrompt:
setEnableReason:
_allowNoisyAuthPrompt
_mergeToCloudLibraryPreference
_authenticateFailureCode
_enableReason
_endObservingCloudServiceStatus
currentConnection
_beginObservingCloudServiceStatus
_refreshCloudServiceStatus
_isClientAllowedToRequestCapabilitiesForConnection:
ic_errorWithDomain:code:debugDescription:
_shouldBypassEnforcementOfPrivacyAcknowledgementForClientConnection:forIncomingCloudServiceCapabilitiesRequest:
setCompletionHandler:
setPrivacyAcknowledgementPolicy:
_refreshCapabilitiesWithPrivacyAcknowledgementPolicy:
_isClientAllowedToRequestRestrictedInformationForConnection:
_refreshStorefrontCountryCode
_refreshStorefrontIdentifier
auditToken
bundleIdentifier
_clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier:
initWithDeveloperToken:clientInfo:options:
performRequestWithResponseHandler:
icd_isConnectionAllowedForService:
setExportedObject:
serviceInterface
setExportedInterface:
clientInterface
setRemoteObjectInterface:
_handleClientConnectionInterrupted:
setInterruptionHandler:
_handleClientConnectionInvalidated:
setInvalidationHandler:
resume
icd_isConnectionAllowedForService:validationReason:
valueForEntitlement:
_handleClientConnectionSevered:
originatingClientConnection
removeObjectAtIndex:
endObservingCloudServiceStatusWithToken:completionHandler:
name
_updateWithBag:error:
sharedBagMonitor
_handleUpdatedBag:
beginObservingBagWithHandler:
autoupdatingActiveAccount
sharedMonitorForIdentity:
_handleUpdatedSubscriptionStatus:
beginObservingSubscriptionStatusWithHandler:
removeObserver:name:object:
endObservingBagWithToken:
endObservingSubscriptionStatusWithToken:
activeAccount
setOriginatingClientConnection:
_updateWithCapabilities:error:privacyAcknowledgementPolicy:capabilitiesRequestOperation:
ic_sharedRequestOperationQueueWithQualityOfService:
storefrontIdentifier
localStoreAccountProperties
_updateWithStorefrontIdentifier:error:
valueForBagKey:
remoteObjectProxyWithErrorHandler:
storefrontCountryCodeDidChange:
domain
code
privacyAcknowledgementPolicy
removeObject:
completionHandler
capabilitiesDidChange:
storefrontIdentifierDidChange:
beginObservingCloudServiceStatusWithCompletionHandler:
requestCapabilitiesWithPrivacyPromptPolicy:completionHandler:
requestStorefrontCountryCodeWithCompletionHandler:
requestStorefrontIdentifierWithCompletionHandler:
requestUserTokenForDeveloperToken:clientInfo:completionHandler:
listener:shouldAcceptNewConnection:
_activeObservationTokenToClientConnectionMapping
_cancellableCapabilitiesRequestOperations
_capabilities
_hasValidCapabilities
_capabilitiesRequestContexts
_privilegedCapabilities
_hasValidPrivilegedCapabilities
_storefrontCountryCode
_storefrontCountryCodeRequestCompletionHandlers
_storefrontIdentifier
_storefrontIdentifierRequestCompletionHandlers
_bagObservationToken
_subscriptionStatusObservationToken
_lock
endObservingNetworkReachability
processIdentifier
hasProperNetworkConditionsToPlayMediaWithCompletion:
hasProperNetworkConditionsToShowCloudMediaWithCompletion:
isCellularDataRestrictedForMusicWithCompletion:
shouldProhibitMusicActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForVideosWithCompletion:
shouldProhibitVideosActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForStoreAppsWithCompletion:
shouldProhibitStoreAppsActionForCurrentNetworkConditionsWithCompletion:
canShowCloudDownloadButtonsWithCompletion:
canShowCloudMusicWithCompletion:
canShowCloudVideoWithCompletion:
interfaceWithProtocol:
hasProperNetworkConditionsToPlayMedia
hasProperNetworkConditionsToShowCloudMedia
isCellularDataRestrictedForMusic
shouldProhibitMusicActionForCurrentNetworkConditions
isCellularDataRestrictedForStoreApps
shouldProhibitStoreAppsActionForCurrentNetworkConditions
canShowCloudDownloadButtons
canShowCloudMusic
canShowCloudVideo
_canShowCloudDownloadButtonsDidChangeNotification:
_canShowCloudTracksDidChangeNotification:
_isCellularDataRestrictedDidChangeNotification:
_bodyDataForItemIDs:useLongIDs:
initWithDatabaseID:itemIDs:useLongIDs:
parseResponseData:
setLyricsInfoDictionaries:
requestWithDatabaseID:itemIDs:useLongIDs:
lyricsInfoDictionaries
_lyricsInfoDictionaries
instanceMethodForSelector:
pathWithComponents:
metadataKeys
componentsJoinedByString:
queryFilter
purchaseTokens
includeHiddenItems
includePreorders
requestWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:
includeFlavors
setValue:forArgument:
onDiskRevision
logCategory
updateLibraryFromRevision:toRevision:withResponse:
oversizeLogCategory
initWithConnection:
setProgress:
needsUpdateForTokens
clearNeedsUpdateForTokens
importTracksUpToRevision:withCompletionHandler:
progress
_isCancelled
_progress
initWithConfiguration:sagaID:
playlistGlobalID
playlistShareURL
setValues:forProperties:
initWithSagaID:
_sagaID
_playlistGlobalID
_playlistShareURL
initWithBytes:length:encoding:
initWithBundleIdentifier:queue:
setPrivateDelegate:
setWantsNotificationResponsesDelivered
categoryWithIdentifier:actions:intentIdentifiers:options:
setNotificationCategories:
requestAuthorizationWithOptions:completionHandler:
authorizationStatus
postNotificationName:object:userInfo:
_createBag
notificationCenter:didChangeSettings:bag:
shouldHandleNotificationResponse:
handleNotificationResponse:bag:
addFinishBlock:
initWithSystemApplicationType:
setBagProfile:
bagKeySet
bagProfile
bagProfileVersion
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:didChangeSettings:
userNotificationCenter:didOpenApplicationForResponse:
center
setCenter:
centerQueue
setCenterQueue:
_center
_centerQueue
eTagValueFromContentTasteResponse:
allHeaderFields
lowercaseString
initWithContentTasteResponse:
contentTasteItems
setContentTasteItems:
expirationDate
setExpirationDate:
responseRevisionID
setResponseRevisionID:
isCachedResponse
setCachedResponse:
_cachedResponse
_contentTasteItems
_expirationDate
_responseRevisionID
trackForeignPersistentID
downPinCollectionsForClasses:configuration:
rePinCollectionsForClasses:configuration:
initWithConfiguration:cloudIDs:
isCharging
currentThermalLevel
sharedPrivacyInfo
privacyAcknowledgementRequiredForMedia
initWithDatabaseID:cloudIDs:itemKind:useLongIDs:
artworkInfoDictionaries
initWithCloudIDs:
cloudArtworkInfoDictionaries
_cloudIDs
_useLongIDs
_itemKind
_cloudArtworkInfoDictionaries
sagaDatabaseUserVersion
setSagaDatabaseUserVersion:
sagaCloudAddToPlaylistBehavior
setSagaCloudAddToPlaylistBehavior:
preferredVideoQuality
setPreferredVideoQuality:
icd_sagaCloudAddToPlaylistBehavior
icd_setSagaCloudAddToPlaylistBehavior:
icd_preferredVideoQuality
icd_setPreferredVideoQuality:
setUpdateRequired:
_bodyDataForDatabaseRevision:containerID:trackList:properties:
initWithDatabaseID:databaseRevision:containerID:trackList:properties:
writeUInt64:withCode:
enumerateCloudItemIDsUsingBlock:
requestWithDatabaseID:databaseRevision:containerID:trackList:properties:
activeLockerAccount
sourceType
initWithUserIdentity:
initWithSourceType:configuration:
assetURL
cloudID
artworkType
_hasValidUserIdentity:forSourceType:
subarraysOfSize:
_artworkURLForInfoDictionary:
dataUsingEncoding:
JSONObjectWithData:options:error:
initWithArtworkResponseDictionary:
URLWithString:
initWithArtworkURL:
sizeInfo
maxSupportedSize
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
initWithSourceType:
addOperations:
_sourceType
initWithConfiguration:geniusPlaylistPersistentID:playlistName:seedItemIDs:itemIDs:
requestWithDatabaseID:playlistName:seedItemIDs:itemIDs:
initWithGeniusPlaylistPersistentID:playlistName:seedItemIDs:itemIDs:
_playlistName
_seedItemIDs
_itemIDs
_claimSingleWriterStatus
_setupInternalQueues
_setupKVO
serialQueue
invalidate
_tearDownKVO
_stopAncillaryServices
serverOperationsManager
listCloudServerOperations
_setupXPCListenerForService:
_completeStartupSequenceIfPossible
setStartupSequenceCompleted:
cancelOperationsByClass:
hasOperationsOfClass:
enumerateOperationsUsingBlock:
enumerateBackgroundOperationsUsingBlock:
shouldForceiPhoneBehaviors
isAppleTV
isAudioAccessory
backgroundTaskManager
scheduleTaskOfType:forConfiguration:
accountManager
supportedConfigurations
initWithCapacity:
endpoint
initWithMachServiceName:
anonymousListener
networkAvailabilityService
cloudServiceStatusMonitor
_ICCloudServerSupportedServiceForXPCListener:
getListenerEndpointForService:completion:
isStartupSequenceCompleted
_completeStartupSequenceIfNeeded
initWithHandlerProvider:
setRequestingBundleID:
setupInitialSagaPoolingForConfiguration:
setupInitialJaliscoPoolingForConfiguration:
setPreferredVideoQuality:forConfiguration:completion:
isSagaAuthenticatedForConfiguration:completion:
updateJaliscoLibraryWithReason:forConfiguration:completion:
updateSagaLibraryWithReason:forConfiguration:completion:
authenticateForConfiguration:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completion:
deauthenticateForConfiguration:completion:
disableCloudLibraryWithReason:completion:
setCloudAddToPlaylistBehavior:forConfiguration:completion:
removeJaliscoLibraryForConfiguration:completion:
isMediaKindDisabledForJaliscoLibrary:configuration:completion:
loadIsUpdateInProgressForConfiguration:completion:
loadUpdateProgressForConfiguration:completion:
loadIsSagaUpdateInProgressForConfiguration:completion:
loadSagaUpdateProgressForConfiguration:completion:
loadIsJaliscoUpdateInProgressForConfiguration:completion:
loadJaliscoUpdateProgressForConfiguration:completion:
loadLastKnownEnableICMLErrorStatusForConfiguration:completion:
importItemArtworkForPurchaseHistoryID:configuration:completion:
importScreenshotForPurchaseHistoryID:configuration:completion:
importItemArtworkForSagaID:configuration:completion:
importScreenshotForSagaID:configuration:completion:
importContainerArtworkForSagaID:configuration:completion:
importSubscriptionItemArtworkForPersistentID:configuration:completion:
importSubscriptionScreenshotForPersistentID:configuration:completion:
importSubscriptionContainerArtworkForPersistentID:configuration:completion:
importArtistHeroImageForPersistentID:configuration:completion:
importAlbumArtistHeroImageForPersistentID:configuration:completion:
deprioritizeItemArtworkForPurchaseHistoryID:configuration:
deprioritizeScreenshotForPurchaseHistoryID:configuration:
deprioritizeItemArtworkForSagaID:configuration:
deprioritizeScreenshotForSagaID:configuration:
deprioritizeContainerArtworkForSagaID:configuration:
deprioritizeSubscriptionItemArtworkForPersistentID:configuration:
deprioritizeSubscriptionScreenshotForPersistentID:configuration:
deprioritizeSubscriptionContainerArtworkForPersistentID:configuration:
deprioritizeArtistHeroImageForPersistentID:configuration:
deprioritizeAlbumArtistHeroImageForPersistentID:configuration:
loadArtworkInfoForPurchaseHistoryIDs:configuration:completion:
loadScreenshotInfoForPurchaseHistoryIDs:configuration:completion:
loadArtworkInfoForSagaIDs:configuration:completion:
loadArtworkInfoForContainerSagaIDs:configuration:completion:
loadScreenshotInfoForSagaIDs:configuration:completion:
loadArtworkInfoForSubscriptionItemPersistentIDs:configuration:completion:
loadScreenshotInfoForSubscriptionPersistentIDs:configuration:completion:
loadArtworkInfoForSubscriptionContainerPersistentIDs:configuration:completion:
loadMissingArtworkForConfiguration:
loadGeniusItemsForSagaID:configuration:completion:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:configuration:completion:
createPlaylistWithPersistentID:properties:trackList:configuration:completion:
sdk_createPlaylistWithPersistentID:properties:trackList:configuration:completion:
setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:configuration:completion:
addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:configuration:completion:
publishPlaylistWithSagaID:configuration:completion:
removePlaylistsWithSagaIDs:configuration:completion:
uploadArtworkForPlaylistWithPersistentID:configuration:completion:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:configuration:completion:
updatePinnedSubscribedPlaylistsWithConfiguration:completion:
addStoreItemWithAdamID:referral:configuration:completion:
sdk_addStoreItemWithOpaqueID:configuration:completion:
addStorePlaylistWithGlobalID:configuration:completion:
removeItemsWithSagaIDs:configuration:completion:
hideItemsWithPurchaseHistoryIDs:configuration:completion:
setItemProperties:forPurchaseHistoryID:configuration:completion:
setItemProperties:forSagaID:configuration:completion:
uploadCloudItemPropertiesForConfiguration:completion:
uploadCloudPlaylistPropertiesForConfiguration:completion:
setAlbumProperties:forAlbumPersistentID:configuration:completion:
updateArtistHeroImagesForConfiguration:
loadIsJaliscoGeniusSupportedForConfiguration:completion:
loadJaliscoGeniusLearnMoreURLForConfiguration:completion:
loadJaliscoGeniusCUIDForConfiguration:completion:
setJaliscoGeniusCUID:forConfiguration:completion:
enableJaliscoGeniusForConfiguration:completion:
updateJaliscoGeniusDataForConfiguration:completion:
cancelUpdateJaliscoGeniusDataForConfiguration:completion:
loadJaliscoGeniusOperationStatusForConfiguration:completion:
disableJaliscoGeniusForConfiguration:completion:
loadBooksForStoreIDs:configuration:completion:
_canCompleteStartupSequence
internalOperationQueue
updateState
handlerCoordinator
stateChange
updateHandlersWithAccountStateChange:
activeConfiguration
_ensureSubscriptionInformationIsUpToDateForConfiguration:
_updateAirPlaySettingsForConfiguration:
isIPhone
isIPod
sharedLibraryRecommendationController
handleAccountStateChange:
addOperationWithBlock:
synchronizeWithCompletionHandler:
updateArtistHeroImagesForArtistsAddedSinceLastUpdate
_updateServerAllowsExplicitContentSettingAutomatically:forConfiguration:
_ensureMusicSubscriptionKeysAreAvailableForConfiguration:
_handleFamilyContentDeletionEvent:
_handleApplicationRegistrationNotification:
sharedStatusController
sharedCache
updateBaseCacheKey
observeValueForKeyPath:ofObject:change:context:
initWithType:backgroundTaskScheduler:
initWithAccountManager:handlerCoordinator:
isMac
machServiceListener
defaultInfo
initWithClientInfo:
systemServiceWithRequestContext:
initWithAccountManager:
startSystemXPCService
startObservingRevocations
sharedService
start
startPeriodicPolling
sharedManager
beginObservingNetworkReachability
sharedMusicSubscriptionStatusServiceListener
sharedRemoteRequestOperationExecutionServiceListener
enablePeriodicSubscriptionRefresh
sharedProvider
startService
sharedInstance
performBlockAfterDeviceSetup:
startSystemService
stopObservingRevocations
stop
stopService
stopSystemService
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
isDeviceSetupComplete
sharedSecurityInfo
isDeviceClassCUnlocked
startupQueue
synchronize
_initializeAncillaryServices
_setupMPMediaLibraryFilteringForConfigurations:
_startAncillaryServices
_migrateToLatestUserVersionForConfigurations:
setupHandlersWithAccountStateChange:
_handleURLBagProviderDidUpdateBagNotification:
setFilteringDisabled:
defaultMediaLibrary
setCloudFilteringType:
deviceMediaLibraryWithUserIdentity:
sharedRestrictionsMonitor
allowsExplicitContent
statusType
initWithRequestContext:allowsExplicitContent:isAutomatic:
blockOperationWithBlock:
addDependency:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
getSubscriptionStatusForUserIdentity:bypassingCache:withCompletionHandler:
hasOfflinePlaybackKeys
setAllowsExpiredBags:
setIdentity:
setIdentityStore:
setClientInfo:
initWithUserInteractionLevel:
setAuthenticationProvider:
initWithBlock:
initWithStoreRequestContext:
setCarrierBundleProvisioningStyle:
setShouldIgnoreCache:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
subscriptionStatus
refreshSubscriptionUsingRequestContext:withCompletionHandler:
performSubscriptionStatusRequest:withCompletionHandler:
getKeyStatusForAccountUniqueIdentifier:withCompletionHandler:
_writeURLResolutionCacheFileUsingBag:
_preprocessURLResolutionCacheDictionary:
attributesOfItemAtPath:error:
timeIntervalSinceNow
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
setShouldReturnLastKnownStatusOnly:
purchaserAccountID
downloaderAccountID
familyID
removeItemsWithFamilyAccountID:purchaserAccountID:downloaderAccountID:
handlerWithType:configuration:error:
ignoreAccountChanges
_hasCompletedStartupSequence
pushNotificationController
serverNotificationsManager
stateHandle
xpcListeners
delegateAccountStoreListener
delegationProviderService
mediaPlaybackDefaults
userNotificationController
_ignoreAccountChanges
_startupSequenceCompleted
_accountManager
_handlerCoordinator
_backgroundTaskManager
_preferredVideoQuality
_pushNotificationController
_serverNotificationsManager
_cloudServiceStatusMonitor
_stateHandle
_serialQueue
_startupQueue
_internalOperationQueue
_xpcListeners
_networkAvailabilityService
_serverOperationsManager
_delegateAccountStoreListener
_delegationProviderService
_mediaPlaybackDefaults
_userNotificationController
initWithConfiguration:sourceType:
_importOriginalItemArtwork
_importOriginalScreenshots
initWithEntity:artworkType:
artworkTokenForSource:
_cellularDataAllowedForMediaType:
importArtworkForCloudID:artworkType:token:mediaType:allowsCellularData:completionHandler:
stringForColumnIndex:
int64ForColumnIndex:
intForColumnIndex:
setCloudID:
setToken:
setArtworkType:
setAllowsCellularData:
enumerateRowsWithBlock:
importCloudArtworkForRequests:
constraintsForSystemApplicationType:
shouldAllowDataForCellularNetworkTypes
importAllItemArtworkAndScreenshots
fileURLWithPath:
setTimeoutInterval:
accessQueue
operationQueue
operations
powerAssertionIdentifier
setTimeoutCallback:
_synchronouslyLoadArtistUpdatePollingFrequencyFromBag
timeIntervalSince1970
timeIntervalSinceDate:
currentUpdateOpertion
followupUpdateOpertion
artworkImporter
initWithArtworkImporter:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:
setFollowupUpdateOpertion:
setCurrentUpdateOpertion:
currentRevision
revisionTrackingCode
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:
shouldProcessSpecificArtists
artistPersistentIDsToUpdate
removeObjectsInArray:
setArtistPersistentIDsToUpdate:
albumArtistPersistentIDsToUpdate
setAlbumArtistPersistentIDsToUpdate:
cancelArtistHeroImageUpdateAndWaitForOperationToFinish:
cancelAllImportsAndWaitForOperationsToFinish:
waitUntilAllOperationsAreFinished
_importHeroImageForArtistType:withPersistentID:completionHandler:
deprioritizeImportArtworkForCloudID:artworkType:
unsignedIntegerValue
watchdog
suspend
_artistHeroImageUpdateFinished
updateArtistHeroImages
cancelArtistHeroImageUpdate
importArtistHeroImageForPersistentID:completionHandler:
importAlbumArtistHeroImageForPersistentID:completionHandler:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:
setAccessQueue:
setOperationQueue:
setPowerAssertionIdentifier:
setWatchdog:
setArtworkImporter:
_watchdog
_currentUpdateOpertion
_followupUpdateOpertion
_artworkImporter
_shouldProcessSpecificArtists
_artistPersistentIDsToUpdate
_albumArtistPersistentIDsToUpdate
setBulkArtistNameLibraryMatchURL:
setBulkArtistNameLibraryMatchBatchSize:
setUpdateIntervalSeconds:
setAllArtistImagesMapURL:
setArtistNameLibraryMatchURL:
bulkArtistNameLibraryMatchURL
URLQueryAllowedCharacterSet
removeCharactersInString:
bulkArtistNameLibraryMatchBatchSize
allObjects
componentsWithURL:resolvingAgainstBaseURL:
stringByAddingPercentEncodingWithAllowedCharacters:
queryItemWithName:value:
setPercentEncodedQueryItems:
requestWithURL:
initWithURLRequest:requestContext:
defaultSession
urlResponse
statusCode
parsedBodyDictionary
predicateWithProperty:equalToValue:
setValues:forProperties:usingConnection:
enqueueDataRequest:withCompletionHandler:
cancelRequest:
_bulkArtistNameLibraryMatchURL
_bulkArtistNameLibraryMatchBatchSize
_latestAllArtistImagesMap
_updateSpecificArtistStoreIDsUsingAllArtistImagesMap:
_updateAllArtistStoreIDsUsingAllArtistImagesMap:
artistNameLibraryMatchURL
dictionaryWithContentsOfURL:
earlierDate:
_fetchAndCacheLatestAllArtistImagesMap
allArtistImagesMapURL
bodyData
updateIntervalSeconds
dateByAddingTimeInterval:
writeToURL:atomically:
_updateIntervalSeconds
_allArtistImagesMapURL
_artistNameLibraryMatchURL
ic_URLByAppendingQueryParameters:
_addSpecificStoreArtistIDsToSet:
_addAllStoreArtistIDsToSet:
stringValue
setRequestContext:
setItemIdentifiers:
setPersonalizationStyle:
setProtocolVersion:
itemForIdentifier:
metadataDictionary
_imageURLFromArtworkInfo:
artworkTokenForArtistHeroURL:
importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:usingConnection:
updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:usingConnection:
setCurrentDatabaseRevision:
artworkDataSource
setUsesFallbackCache:
artworkRelativePathFromToken:
hasOriginalArtworkForRelativePath:
importExistingOriginalArtworkWithArtworkToken:artworkType:sourceType:mediaType:
currentDatabaseRevision
_currentDatabaseRevision
setWithCapacity:
_bodyDataForCloudIDs:itemKind:useLongIDs:
setArtworkInfoDictionaries:
_queryFilterString
writeString:withCode:
stringByReplacingOccurrencesOfString:withString:
_artworkInfoDictionaries
setQueuePriority:
operationCount
isNetworkActivityIndicatorVisible
setNetworkActivityIndicatorVisible:
removeObserver:forKeyPath:context:
backgroundOperationQueue
_networkActivityIndicatorVisible
_backgroundOperationQueue
setContainerID:
_containerID
_bodyDataForPlaylistName:seedItemIDs:itemIDs:
initWithDatabaseID:playlistName:seedItemIDs:itemIDs:
lastObject
writeUInt8:withCode:
writeData:withCode:
minusSet:
jaliscoGetSortedMediaKinds:
supportedMediaKinds
initWithKindsToExclude:supportedMediaKindsHandler:
daapQueryFilterString
_excludedKinds
_supportedMediaKinds
_supportedMediaKindsHandler
allMediaDownloadLibraryIdentifiers
cancelDownloads:
title
identifiers
universalStore
initWithTitle:andStoreAdamID:
setSongMetadataDescriptor:
artist
setArtistMetadataDescriptor:
album
setAlbumMetadataDescriptor:
setPlayCount:
setSkipCount:
userRating
setUserRating:
lastDevicePlaybackDate
setLibraryAddedDate:
stringByAppendingFormat:
hasArtistAndAlbumData
setHasArtistAndAlbumData:
_hasArtistAndAlbumData
_userRating
_songMetadataDescriptor
_artistMetadataDescriptor
_albumMetadataDescriptor
_playCount
_skipCount
_lastPlayedDate
_libraryAddedDate
_initWithAccounts:activeAccount:baseConfiguration:
stateForAccounts:baseConfiguration:
isManageable
activeConfigurationDSID
supportedConfigurationsDSIDs
isEqualToSet:
allocWithZone:
copyWithZone:
_configurationForAccount:baseConfiguration:
_updateSupportedConfigurationsWithAccounts:activeConfiguration:
_updateSupportedConfigurationsDSIDs
setSupportedConfigurations:
setSupportedConfigurationsDSIDs:
_userIdentityForAccount:
configurationFromSourceConfiguration:userIdentity:
restoredStatedWithFallbackAccounts:
save
setActiveConfiguration:
setActiveConfigurationDSID:
_supportedConfigurations
_supportedConfigurationsDSIDs
_activeConfiguration
_activeConfigurationDSID
_startGeniusRequestWithStartDate:retryTimeout:debugName:connectionResponseBlock:
propertyListWithData:options:format:error:
urlRequest
storeRequestContext
maxRetryCount
setMaxRetryCount:
shouldUseMescalSigning
setShouldUseMescalSigning:
startGeniusRequestWithRetryTimeout:debugName:connectionResponseBlock:
exceptionWithName:reason:userInfo:
raise
dictionaryRepresentation
setKey:
valuesCount
clearValues
addValue:
hasKey
values
setValues:count:
readFrom:
writeTo:
copyTo:
mergeFrom:
_values
_key
initWithObjects:
setUniqueSongs:
setUniqueAlbums:
setUniqueDatesWithAddedContent:
artistName
legacyScore
_cumulativePlayCount
_cumulativeSkipCount
_uniqueSongs
_uniqueAlbums
_uniqueDatesWithAddedContent
_bagKey
setLibraryBagKey:
setConnectionQueue:
setConnectionGroup:
setAsynchronousRequestsAccessQueue:
libraryIdentifier
setLibraryIdentifier:
failedToConnect
underlyingConnection
setConnection:
completionBlock
_enqueueFailedOperation:
disconnect
_enqueuePendingOperation:
_ensureConnectionWithCompletionHandler:
decreasePriority
_executeBlockForAllOperations:
increasePriority
pendingChangesCoordinator
processPendingChangesUsingLibrary:
addPendingChange:
connectionQueue
connectionState
loginRequestInFlight
connectionGroup
setLoginRequestInFlight:
setUnderlyingConnection:
setFailedToConnect:
_performPendingOperations
baseURL
_continueConnectingToLibraryWithCompletionHandler:
_connectToLibraryWithCompletionHandler:allowRetry:forceBagReload:
_isEnabledWithURLBag:
stringByAppendingString:
setBaseURL:
getBagForRequestContext:forceRefetch:withCompletionHandler:
setInteractionLevel:
setDebugReason:
initWithVerificationContext:
initWithIdentity:identityStore:clientInfo:
setStoreRequestContext:
getVerificationContextForUserIdentity:completionHandler:
connectWithCompletionHandler:
_initWithConfiguration:pendingChangesCoordinator:
asynchronousRequestsAccessQueue
connectionCompletionHandler
setConnectionCompletionHandler:
_failedToConnect
_loginRequestInFlight
_libraryIdentifier
_underlyingConnection
_pendingChangesCoordinator
_connectionQueue
_connectionGroup
_asynchronousRequestsAccessQueue
_connectionCompletionHandler
isFinished
willChangeValueForKey:
didChangeValueForKey:
isExecuting
isConcurrent
isAsynchronous
_executing
_finished
initWithConfiguration:sagaID:properties:
decodeInt32ForKey:
encodeInt32:forKey:
initWithSagaID:properties:
_library
removeAllPendingChangesWithCompletion:
cancelPendingChangesWithCompletion:
playDataBatchIntervalInMinutes
uploadItemPropertiesWithMinimumTimeInterval:
uploadPlaylistPropertiesWithMinimumTimeInterval:
sagaLastItemPlayDataUploadDate
_addLibraryOperation:priority:noLibraryHandler:
waitUntilFinished
setSagaLastItemPlayDataUploadDate:
sagaLastPlaylistPlayDataUploadDate
setSagaLastPlaylistPlayDataUploadDate:
albumAdamID
initWithConfiguration:adamID:playlistPersistentID:referralAlbumAdamID:
initWithConfiguration:adamID:playlistPersistentID:referralPlaylistGlobalID:
initWithConfiguration:adamID:playlistPersistentID:
initWithConfiguration:itemSagaID:playlistPersistentID:
initWithConfiguration:opaqueID:bundleID:playlistPersistentID:
setUpdateCompletionBlock:
initWithConfiguration:itemSagaIDs:
initWithConfiguration:playlistSagaIDs:
initWithConfiguration:playlistPersistentID:
initWithConfiguration:subscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:pinnedOnly:
initWithConfiguration:adamID:referralAlbumAdamID:
initWithConfiguration:adamID:referralPlaylistGlobalID:
initWithConfiguration:adamID:
adamIDToSagaIDMap
initWithConfiguration:opaqueID:bundleID:
initWithConfiguration:playlistGlobalID:
globalIDToSagaIDMap
initWithConfiguration:addToPlaylistBehavior:
initWithConfiguration:albumPersistentID:albumItemProperties:
isInitialUpdate
initWithConfiguration:seedID:numberOfItems:
itemIDs
importAllItemArtwork
cancelAllImports
privacyAcknowledgementRequiredForMusic
initWithConfiguration:reason:updateTaskHelper:
setUploadingLibraryIsSupported:
setIsExplicitUserAction:
_handleCloudLibraryUpdateOperationFinishedWithError:
sagaNeedsFullUpdateAfterNextUpdate
removeAllObjects
cancelOperations
isUpdateInProgressWithIsInitialImport:
_uploadItemPropertiesQueue
_uploadPlaylistPropertiesQueue
_updateCloudLibraryQueue
_updateCloudLibraryOperation
_updateLibraryCompletionHandlers
_itemPropertiesCoalescingTimer
_playlistPropertiesCoalescingTimer
_updateTaskHelper
_persistent
_status
_error
initWithSubscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:
initWithConfiguration:subscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:
_playlistSagaIDs
requestWithDatabaseID:seedID:numberOfItems:
initWithSeedID:numberOfItems:
_seedID
_numberOfItems
jaliscoLastGeniusUpdateDate
_updateGeniusData
cloudMediaLibraryUID
_prepareMetadataPayloadWithCUID:
countOfEntities
_determineUploadURLWithCUID:numberOfItems:
numberWithUnsignedInteger:
isInitialImport
_uploadMetadataWithCUID:toURL:updateID:
_itemsToUpload
_determineResultsURLWhenReadyWithCUID:updateID:
_downloadSimDataFromURL:additionalFieldsFromURL:
_simDataDestinationPathURL
_additionalFieldsDestinationPathURL
defaultSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
userAgent
setValue:forHTTPHeaderField:
moveItemAtURL:toURL:error:
msv_downloadTaskWithRequest:completionHandler:
_importGeniusData
fileExistsAtPath:
initWithBytesNoCopy:length:freeWhenDone:
initWithContentsOfURL:options:error:
scannerWithString:
scanHexLongLong:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
setInitialImport:
geniusOperationStatus
_initialImport
_geniusOperationStatus
handlerProvider
sagaLastLibraryUpdateTime
sagaLastSubscribedContainersUpdateTime
setSagaLastLibraryUpdateTime:
setSagaLastSubscribedContainersUpdateTime:
_updateSagaLibraryWithReason:allowNoisyAuthPrompt:forConfiguration:completionHandler:
requestingBundleID
jaliscoLastLibraryUpdateTime
setJaliscoLastLibraryUpdateTime:
importItemArtworkForPersistentID:completionHandler:
importScreenshotForPersistentID:completionHandler:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
loadArtworkInfoForSubscriptionItemPersistentIDs:completionHandler:
loadScreenshotInfoForSubscriptionPersistentIDs:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentIDs:completionHandler:
importContainerArtworkForPersistentID:completionHandler:
_handlerProvider
setClientIdentifier:
setClientVersion:
setBagProfileVersion:
hasClientIdentifier
hasClientVersion
hasBagProfile
hasBagProfileVersion
setShouldIgnoreUserTokenCache:
setHasShouldIgnoreUserTokenCache:
hasShouldIgnoreUserTokenCache
setShouldIgnoreDeveloperTokenCache:
setHasShouldIgnoreDeveloperTokenCache:
hasShouldIgnoreDeveloperTokenCache
clientIdentifier
clientVersion
shouldIgnoreUserTokenCache
shouldIgnoreDeveloperTokenCache
_bagProfile
_bagProfileVersion
_clientIdentifier
_clientVersion
_shouldIgnoreDeveloperTokenCache
_shouldIgnoreUserTokenCache
_has
_initializeMappings
geniusValueForMLValue:
geniusTrackPropertyForML3TrackProperty:
geniusValueForML3TrackProperty:value:
geniusPlaylistPropertyForML3ContainerProperty:
geniusValueForML3ContainerProperty:value:
allML3TrackPropertiesWithGeniusTrackProperties
setAllML3TrackPropertiesWithGeniusTrackProperties:
allGeniusTrackPropertiesWithML3TrackProperties
setAllGeniusTrackPropertiesWithML3TrackProperties:
allML3ContainerPropertiesWithGeniusPlaylistProperties
setAllML3ContainerPropertiesWithGeniusPlaylistProperties:
allGeniusPlaylistPropertiesWithML3ContainerProperties
setAllGeniusPlaylistPropertiesWithML3ContainerProperties:
_ml3TrackPropertyToGeniusTrackPropertyMap
_ml3TrackPropertyTransformMap
_ml3ContainerPropertyToGeniusPlaylistPropertyMap
_ml3ContainerPropertyTransformMap
_allML3TrackPropertiesWithGeniusTrackProperties
_allGeniusTrackPropertiesWithML3TrackProperties
_allML3ContainerPropertiesWithGeniusPlaylistProperties
_allGeniusPlaylistPropertiesWithML3ContainerProperties
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithURL:append:
currentRunLoop
scheduleInRunLoop:forMode:
open
writePropertyList:toStream:format:options:error:
removeFromRunLoop:forMode:
close
URLByAppendingPathExtension:
mappedDataWithContentsOfTemporaryFileURL:error:
setHTTPMethod:
setHTTPBody:
compare:options:
handleFailureInFunction:file:lineNumber:description:
fileURLWithPath:isDirectory:
lastPathComponent
URLByAppendingPathComponent:isDirectory:
linkItemAtURL:toURL:error:
machServiceName
deliverSubscriptionStatusResponse:forRemoteRequestWithUniqueIdentifier:error:
performSubscriptionStatusRequest:withStatusHandler:
performSubscriptionStatusRequest:forUniqueIdentifier:
_isActive
_serviceListener
jaliscoLibrary
jaliscoLibraryWithReason:
updateLibraryQueue
setJaliscoAccountID:
updateLibraryCompletionHandlers
initWithConfiguration:reason:supportedMediaKindsHandler:
jaliscoNeedsUpdateForTokens
updateLibraryOperation
setUpdateLibraryOperation:
initWithConfiguration:itemPurchaseHistoryIDs:
cancelAllOperationsAndWaitForOperationsToFinish:
clearJaliscoLastExcludedMediaKinds
_DAAPMediaKindFromJaliscoSupportedMediaKind:
_updateJaliscoLibraryWithCompletion:
setCloudMediaLibraryUID:
_updateGeniusDataForInitialImport:completionHandler:
updateGeniusDataOperation
initWithConfiguration:CUID:
setQueryStoreIDs:
books
geniusUpdateQueue
setUpdateGeniusDataOperation:
geniusUpdateGroup
geniusUpdateOperationQueue
_updateLibraryQueue
_jaliscoLibrary
_updateGeniusDataOperation
_updateLibraryOperation
_geniusUpdateOperationQueue
_geniusUpdateQueue
_geniusUpdateGroup
setTokenCollection:
hasTokenCollection
hasError
tokenCollection
_tokenCollection
initWithCode:headerFields:data:MIMEType:error:
responseHeaderFields
MIMEType
responseWithCode:headerFields:data:MIMEType:error:
responseDataFileURL
setResponseDataFileURL:
_MIMEType
_responseCode
_responseHeaderFields
_responseData
_responseDataFileURL
_initWithInitialState:finalState:computation:
computation
initialState
finalState
activeConfigurationChanged
supportedConfigurationsChanged
stateChangeFromState:toState:computation:
_initialState
_finalState
_computation
initWithDatabaseID:seedID:numberOfItems:
setItemIDs:
cuid
_sendOptOutWithCUID:
dictionaryWithObject:forKey:
initWithCUID:
setCuid:
_cuid
uniqueIdentifier
initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:
initWithGlobalPlaylistID:contentTaste:configuration:
storeID
setStoreID:
setConfiguration:
contentTasteType
setContentTasteType:
contentTasteItem
setContentTasteItem:
globalPlaylistID
setGlobalPlaylistID:
updateActionTimeStamp
setUpdateActionTimeStamp:
dsid
setDsid:
_storeID
_contentTasteType
_contentTasteItem
_globalPlaylistID
_updateActionTimeStamp
_dsid
performRequestWithCompletionHandler:
initWithURL:
setCachePolicy:
setAnisetteVersion:
initWithData:
initWithStoreRequestContext:params:
execute
_storeRequestContext
_response
cancelImportOperation:completionHandler:
shouldRestart
requestWithDatabaseID:paginationToken:
setAllowedRetryCount:
processDAAPFileAtURL:
currentPaginationToken
processedItemCount
totalItemCount
currentItemCount
requestWithDatabaseID:
_removeUnavailableSubscriptionAssetsInLibrary:
_updateGlobalPlaylistsFromContainersPayloadAtPath:downloadPathForSubscribedContainersPayload:
cloudIDToLyricsTokenMap
_importLyricsWithLyricsTokenMap:
notifyContentsDidChange
enumeratePathsToDeleteFromLibrary:persistentIDs:usingBlock:
clearLocationFromLibrary:persistentIDs:disableKeepLocal:usingConnection:
initWithConfiguration:sagaIDs:
importTracksFromRevision:toRevision:withCompletionHandler:
stringWithContentsOfURL:encoding:error:
initWithSagaIDs:
_sagaIDs
_bodyDataForContainerIDs:
initWithDatabaseID:containerIDs:
addCloudItemID:idType:
initWithPlaylistSagaIDs:
_mediaContentTasteCacheFilePathForAccount:
_prepareCachedResponseFromArchiveAtPath:
_prepareArchiveWithContentTasteReponse:
writeToFile:atomically:
contentsOfDirectoryAtPath:error:
archivedDataWithRootObject:requiringSecureCoding:error:
dataWithContentsOfFile:
sharedCloudContentTasteResponseCacheManager
getCachedContentTasteResponseForConnectionConfiguration:
setCachedContentTasteUpdateResponse:forConnectionConfiguration:
removeAllCachedContentTasteResponses
removeCachedContentTasteResponseForConnectionConfiguration:
_mediaContentTasteCacheDirectoryPath
dictionaryWithCapacity:
addCatalogContent:
catalogContentsCount
clearCatalogContents
catalogContentType
setAdamId:
setHasAdamId:
hasAdamId
hasName
setCatalogContents:
_adamId
_catalogContents
_name
_handleNewArtistContentResponseNotification:
_clearRecommendationsData
shouldForceLibraryRecommendationAnalysis
scheduleRecommendationsRefreshTimer
_cleanupExpiredApplicationMessages
shouldReduceLibraryRecommendationsXPCInterval
_performRecommendationsUpdate
ic_numberValueForKey:
_getNetworkConstraints
networkType
stringWithContentsOfFile:encoding:error:
initWithBase64EncodedString:options:
_handleRecommendationsResponseModel:completion:
_cacheDirectoryPath
URLByAppendingPathComponent:
addObjectsFromArray:
writeToURL:error:
isWiFiAssociated
settingsSwitches
identifier
isToggled
hasBeenPreviouslyToggled
_performRecommendationsRequest
getAccountNotificationsWithCompletionHandler:
_fetchRecommendationsSetAndModelWithCompletionHandler:
getSubscriptionStatusWithCompletionHandler:
recoId
_wrapAndCacheResponseModelWithCompiledMLModel:
_retrievePreviousRecommendationMatchesFromCache
applicationMessage
targets
removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
_createApplicationMessagesForResult:artistNewContentResponse:completion:
messageEntriesForBundleIdentifier:completion:
_computeLibraryRecommendationWithResponse:completionHandler:
responseModel
mlModel
initWithDictionary:error:
predictionFromFeatures:error:
featureValueForName:
multiArrayValue
allowLowAffinityRecommendations
releaseDate
dateWithTimeIntervalSince1970:
_clearMLModelCache
fileExistsAtPath:isDirectory:
initWithBundleIdentifier:
endDate
setKeyProfile:
setAssetPrefetchStrategy:
compare:
setStartDate:
setEndDate:
setGlobalPresentationPolicyGroup:
setCarousel:
setHasCloseButton:
setIdentifier:
setMaximumDisplays:
setMessageType:
setPriority:
addTarget:
setType:
setRuleOperator:
setComparisonType:
setDataType:
setTriggerValue:
setTriggerCondition:
addSubrules:
isExplicit
setRule:
setTitle:
setSubtitle:
artworkInfos
artworkURLWithSize:cropStyle:format:
absoluteString
setURL:
addImages:
setValue:
addContentParameters:
setRequiresDelegate:
setMessageRemovalPolicy:
setActionType:
setEventType:
setPageId:
setPageType:
setTargetId:
setTargetType:
addActionDetails:
setClickEvent:
addMessageActions:
addContentPages:
setImpressionType:
setRecoAlgoId:
setImpression:
setImpressionEvent:
_createLocalNotificationDictionaryForRecommendationResult:storePlatformMetadata:recommendationID:identifier:
dataWithJSONObject:options:error:
base64EncodedStringWithOptions:
setNotification:
setLocalNotification:
initWithApplicationMessage:bundleIdentifier:
setShouldDownloadResources:
_cacheMatchedRecommendations:
downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
_updateOptInIfNecessary
addMessageEntry:completion:
allItems
initWithLookupItems:
trackData
setPendingMatch:
subtitle
images
startDate
contentPages
_optInMessageContentForPriorityMessageContent:
messageEntryWithIdentifier:bundleIdentifier:completion:
priority
contentParameters
removeLastObject
updateMessageEntry:completion:
_optInMessageForPriorityMessage:completion:
mediaPlayerBundle
localizedStringForKey:value:table:
setDateFormat:
initWithLocaleIdentifier:
setLocale:
timeZoneForSecondsFromGMT:
setTimeZone:
stringFromDate:
currentLocale
_setupCacheDirectoryStructureWithPath:
_affinityAnalyzer
_userHasOptedIn
_userHasEverToggledOptInSwitch
_subscriptionObservationToken
_isSystemService
_failedToPerformAnalysis
_lastSeenDSID
_lastTimePeriodicXPCFired
_refreshIntervalFromBag
setDomain:
setCode:
localizedDescription
setLocalizedDescription:
initWithNSError:
initWithItemPurchaseHistoryIDs:
_itemPurchaseHistoryIDs
_bodyDataForItemIDs:properties:useLongIDs:
initWithDatabaseID:itemIDs:properties:useLongIDs:
sharedItemPropertyInfo
artworkToken
mediaType
allowsCellularData
bodyDataURL
_resizedImageDataFromLocation:
importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:
importOriginalArtworkFromFileURL:withArtworkToken:artworkType:sourceType:mediaType:
enqueueDownloadRequest:withCompletionHandler:
fileSize
data
mainScreenSize
addCompletionHandler:
callCompletionHandlers
URLSession
_completionHandlers
_urlRequest
_allowsCellularData
_mediaType
_URLSession
_cloudID
_artworkToken
_artworkType
_assetURL
dataWithContentsOfURL:options:error:
initWithTemporaryFileURL:
_fileURL
initWithWritingStyle:
_playActivityControllerEndpointRevisionInformationDidChangeNotification:
_playActivityControllerDidRecordEventsNotification:
_scheduleNextPlayActivityFlushOperationWithCriteria:
acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:
getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:
removePlayActivityEventsUpToRevision:withCompletionHandler:
_flushPlayActivityEventsForEndPointIdentifier:withCompletion:
flushPlayActivityEventsForEndPointIdentifier:withReplyBlock:
setRevision:revisionVersionToken:forEndpointIdentifier:withReplyBlock:
acquirePendingPlayActivityEventsForEndpointIdentifier:storeAccountID:shouldFilterStoreAccountID:withReplyBlock:
removePlayActivityEventsUptoRevision:withReplyBlock:
insertPlayActivityEvents:withReplyBlock:
completePendingPlayActivityEvents:forSessionToken:result:withReplyBlock:
setClasses:forSelector:argumentIndex:ofReply:
initWithPlayActivityController:
_criteriaDictionaryForEndPointIdentifier:withPostFrequency:
_timeIntervalForNextFlushOperationWithReplyBlock:
_isValidTimeInterval:
_listener
_queue
_flushOperationQueue
_flushOperationCount
_nextFlushPlayActivityFireSyncInterval
_testNextFlushPlayActivityFireSyncInterval
_playActivityController
queryStoreIDs
setBooks:
metadataFilter
requestWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:
initWithOperation:
_queryFilterEncodedStringForDAAPNameString:
parserSuccess
setParserSuccess:
_parserSuccess
_queryStoreIDs
_books
setPurchaseHistoryID:
setAuthor:
setGenre:
setDatePurchased:
setArtworkURL:
setRedownloadParameters:
setVppLicensed:
setVppOrganizationID:
setVppOrganizationDisplayName:
operation
parsedBooks
currentParsingBook
setCurrentParsingBook:
shouldParseMetadata
setShouldParseMetadata:
_shouldParseMetadata
_operation
_parsedBooks
_currentParsingBook
_stopObservingRevocations
_startObservingRevocations
_scheduleUpdateOfDataNeededUponSignOut
validateExpirationForBundleIdentifier:withReplyBlock:
_identifiersOfApplicationsWithExpiredAccessToMediaLibrary
applicationProxyForIdentifier:
localizedName
setMessage:
setDefaultButtonTitle:
setAlternateButtonTitle:
_displayNotificationForBuilder:withReplyBlock:
mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
_identifiersOfApplicationsWithGrantedAccessToMediaLibrary
initWithArray:
setMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates:
_revokeMusicUserTokensForApplicationsWithIdentifiers:
createCFUserNotification
_storeRequestContextWithIdentity:clientInfo:
_registerFailureToRevokeMusicUserTokensForApplicationsWithIdentifiers:error:
urlForBagKey:
_revokeMusicUserTokensForApplicationWithIdentifier:revokeMusicUserTokenURL:identity:explicitDSID:explicitCookieHeaders:
bundleWithIdentifier:
objectForInfoDictionaryKey:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
deviceInfo
deviceGUID
_notificationCoalescingTimerDidExpire
_updateDataNeededUponSignOut
_checkForRecentRevocations
lastActiveAccountDSID
lastCookieHeadersForRevokingMusicUserTokens
sharedCookieStore
getCookiesHeadersForURL:userIdentifier:
setLastActiveAccountDSID:
isEqualToDictionary:
setLastCookieHeadersForRevokingMusicUserTokens:
_activeAccountDSID
_cookieHeadersForRevokingMusicUserTokens
_notificationCoalescingTimer
_isObservingNotificationsForDataNeededUponSignOut
_identifiersOfApplicationsWithGrantedAccessToMediaLibraryIncludingTCCAcceptanceDates
_tccAccessChangedNotificationToken
_isObservingTCCAccessChangedNotification
_replyBlocksForPID
pathForResourceFileOrFolder:
_pendingChanges
_savePendingChanges:
initWithConfiguration:prefix:loggable:
removeAllPendingChanges
_pendingChangesPath
_loggable
isFileURL
stringByStandardizingPath
stringByResolvingSymlinksInPath
ic_referencesSameFile:
setAlertHeader:
setAlertMessage:
setForceModalAlertAppearance:
initWithOptions:
presentWithCompletion:
setStoreDialogResponseHandler:
initWithURL:requestContext:
setSagaCloudLibraryCUID:
setSagaCloudLibraryTroveID:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
sortedArrayUsingComparator:
componentsSeparatedByString:
insertPropertiesForUserIdentity:andPostAccountChangeNotification:usingBlock:completionHandler:
controllerWithUserIdentity:
isEnablingCloudLibraryDestructive
hasDomain
setHasCode:
hasCode
hasLocalizedDescription
phase
setPhase:
setHasPhase:
hasPhase
phaseAsString:
StringAsPhase:
_code
_domain
_localizedDescription
_phase
requestWithDatabaseID:databaseRevision:opaqueID:bundleID:
updateCompletionBlock
addedItems
initWithOpaqueID:bundleID:
opaqueID
setOpaqueID:
_opaqueID
_bundleID
_updateCompletionBlock
getValuesForProperties:
requestWithDatabaseID:databaseRevision:opaqueID:bundleID:containerID:
initWithOpaqueID:bundleID:playlistPersistentID:
setDeveloperToken:
setUserToken:
_developerToken
_userToken
addArtistContent:
clearArtistContents
setRecoId:
setModel:
artistContentType
hasRecoId
hasModel
artistContents
setArtistContents:
model
_artistContents
_model
_recoId
initWithConfiguration:CUID:troveID:
troveID
_sendOptOutWithCUID:troveID:
initWithCUID:troveID:
setTroveID:
_troveID
addContentFeatures:
contentFeaturesCount
clearContentFeatures
contentFeaturesAtIndex:
contentFeaturesType
contentType
setContentType:
setHasContentType:
hasContentType
contentTypeAsString:
StringAsContentType:
setCanonicalId:
setHasCanonicalId:
hasCanonicalId
setReleaseDate:
setHasReleaseDate:
hasReleaseDate
setIsExplicit:
setHasIsExplicit:
hasIsExplicit
canonicalId
setContentFeatures:
_canonicalId
_releaseDate
_contentFeatures
_contentType
_isExplicit
deleteDB
disableActiveLockerAccount
removeSourcePurchaseHistoryForMusicTracks
setActiveLockerAccountWithDSID:completionHandler:
initWithPersistentID:inLibrary:
enqueueBlockForTransactionCommit:
unrestrictedQueryWithLibrary:predicate:orderingTerms:
removeTracksWithPersistentIDs:fromSource:usingConnection:withCompletionHandler:
clearSagaCloudAccountID
clearSagaLastGeniusUpdateDate
clearSagaLastItemPlayDataUploadDate
clearSagaCloudAddToPlaylistBehavior
clearSagaLastPlaylistPlayDataUploadDate
clearSagaPrefersToMergeWithCloudLibrary
originalArtworkDirectory
performMaintenanceTasksForDatabaseAtPath:withCompletionHandler:
_deleteDB
_disableActiveLockerAccount
_removeSourcePurchaseHistoryForMusicTracks
isSetupCompleted
type
_processSupportedConfigurationsChange:initialSetup:
_processActiveConfigurationChange:initialSetup:
setSetupCompleted:
_deauthenticateUnsupportedConfigurationsFromChange:initialSetup:completion:
_managedHandlerClasses
_configurationsToRemoveForChange:initialSetup:
_configurationsToActivateForChange:initialSetup:
enumerateHandlersForAccountState:usingBlock:
_setupCompleted
_type
queue
_onQueue_sendRequest:withInternalResponseHandler:
requestURLForBaseURL:sessionID:
buildIdentifier
purchaseClientIdentifier
familyMemberStoreID
reason
standardUserDefaults
isPrivateListeningEnabled
allHTTPHeaderFields
requestPersonalizationStyle
setCancelOnHTTPErrors:
responseDataDestinationFileURL
shouldPromptForAuthentication
isSandboxed
clientInfo
parseErrorInResponseData:
initWithData:encoding:
libraryBagKey
setQueue:
_databaseID
_connectionState
setContainerCloudID:
containerCloudID
setUserArtworkToken:
userArtworkToken
initWithToken:artworkType:musicLibrary:
originalFileURL
setAssetFileSize:
assetFileSize
_initiateArtworkUpload
_requestWithURL:URLBagKey:timeoutInterval:additionalBodyFields:
_responseBodyForRequest:retryTimeout:debugName:
_downloadRequestsFromURL:uploadResponsesURL:
_uploadArtworkAssetWithInfo:uploadResponsesURL:uploadResponseData:postUploadBackOffDelay:followupDownloadRequestsURL:
_uploadArtworkAssetWithInfo:completionHandler:
migrateExistingArtworkToken:newArtworkToken:newSourceType:
localeWithLocaleIdentifier:
timeZoneWithAbbreviation:
sessionWithConfiguration:
subdataWithRange:
msv_uploadTaskWithRequest:fromData:completionHandler:
_bodyDataWithAdditionalBodyFields:
_standardBodyDictionaryWithAdditionalFields:
writeData:
closeFile
initWithPlaylistPersistentID:
playlistPersistentID
setPlaylistPersistentID:
_userArtworkToken
_containerCloudID
_assetFileSize
remoteRequestOperation
_setShadowOperationForRemoteExecution:
qualityOfService
response
initWithRemoteRequestOperationResponse:remoteRequestOperationError:
performRequestOnOperationQueue:withCompletionHandler:
performRemoteRequestOperationWithExecutionContext:completionHandler:
initWithConfiguration:reason:
localDatabaseRevision
initWithDomain:code:userInfo:
performUpdate
queryFilterPercentEscaped
beginPerformUpdate
preflightImport
_serverDatabaseRevision:
newImporter
processInfo
systemUptime
handleSuccess:
endPerformUpdate
initWithReason:
powerEventBeginName
setPowerEventBeginName:
powerEventEndName
setPowerEventEndName:
powerEventPayload
setPowerEventPayload:
_reason
_importer
_powerEventBeginName
_powerEventEndName
_powerEventPayload
_bodyDataForDatabaseRevision:playlistProperties:trackList:
initWithDatabaseID:databaseRevision:playlistProperties:trackList:
initWithDatabaseID:databaseRevision:playlistProperties:trackList:requestingBundleID:
bytes
isNSDictionary__
propertyList:isValidForFormat:
mediaFilter
arrayWithObjects:
jaliscoLastSupportedMediaKinds
_supportedMediaKindsDatabasePropertyValue
_importTracksFromRevision:toRevision:withItemsResponse:
initWithContentsOfURL:
floatValue
setStoreAccountID:
setJaliscoLastSupportedMediaKinds:
_chapterDataFromURL:
_chapterArtworkURLsForData:baseURL:
enumerateItemsInResponseData:usingHandler:
initWithConnection:supportedMediaKindsHandler:
_mediaFilter
jaliscoAccountID
setIgnoreSystemFilterPredicates:
hasEntities
_loadArtworkInfoForSubscriptionPersistentIDs:artworkType:entityType:completionHandler:
_importAllItemArtwork
resourceSpecifier
rangeOfString:
cloudAddRequestWithDatabaseID:
logCloudAddRequestDescription
processAddedItems:
removePendingAddedItemsForPermanentlyFailedOperation
requestWithDatabaseID:databaseRevision:adamID:referralAlbumAdamID:referralPlaylistGlobalID:
setAdamIDToSagaIDMap:
allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:
initWithAdamID:
_referralAlbumAdamID
_referralPlaylistGlobalID
_adamIDToSagaIDMap
requestWithDatabaseID:databaseRevision:playlistGlobalID:
setGlobalIDToSagaIDMap:
deleteFromLibrary
initWithPlaylistGlobalID:
_globalIDToSagaIDMap
requestWithDatabaseID:databaseRevision:adamID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:
initWithAdamID:playlistPersistentID:
incrementRevisionWithLibrary:persistentID:deletionType:revisionType:usingConnection:
notifyEntitiesAddedOrRemoved
token
_token
_completionHandler
setArtworkDownloadSession:
setArtworkDownloadAccessQueue:
setArtworkDownloadOperationQueue:
artworkDownloadOperationQueue
setDownloadManager:
downloadManager
_adjustOperationQueueStatusForMediaDownloads
setArtworkDownloadOperationMap:
setArtworkDownloadWatchdog:
artworkDownloadWatchdog
artworkDownloadAccessQueue
artworkDownloadOperationMap
artworkDownloadSession
decreaseQualityOfService
increaseQualityOfService
hasActiveDownloads
isSuspended
setSuspended:
downloadManager:didEnqueueAssetDownloads:didRemoveAssetDownloads:
downloadManager:didUpdateDownloadProgress:
downloadManager:didFinishAsset:withError:
downloadManager:didCancelAssets:
downloadManager:didChangeDownloadPausedReasonForAssets:
initWithMusicLibrary:sourceType:
_artworkDownloadAccessQueue
_artworkDownloadOperationMap
_artworkDownloadWatchdog
_downloadManager
ic_DSID
ic_isManageable
privacyAcknowledgementRequiredForIdentifier:
_didCompleteWithPrivacyPromptStatus:error:
initWithPrivacyIdentifier:
_hasInvokedCompletionHandler
_wasCancelled
_privacyIdentifier
ic_dataValueForKey:
ic_arrayValueForKey:
initWithDictionaryRepresentation:
APNSToken
setAPNSToken:
mediaKinds
setMediaKinds:
_APNSToken
_mediaKinds
ic_dictionaryValueForKey:
registrationStateForAccountDSID:
setRegistrationState:forAccountDSID:
_accountRegistrationStates
pushNotificationState
isRemoteServerLikelyReachable
isCurrentNetworkLinkHighQuality
_updatePushNotificationsRegistration
removeFromRunLoop
initWithMessageUserInfo:
_handleSagaPushMessage:withCompletionHandler:
_handleJaliscoPushMessage:withCompletionHandler:
_handleITunesStorePushMessage:withCompletionHandler:
_handleMusicSocialPushMessage:withCompletionHandler:
enabledTopics
isEqualToArray:
_setEnabledTopics:
publicToken
_updateRegistrationForConfiguration:completion:
_activeConfigurationsWithCompletion:
_createAPNSConnectionWithCompletion:
setPushEnvironment:
_portNameForEnvironmentName:
initWithEnvironmentName:namedDelegatePort:
mainRunLoop
scheduleInRunLoop:
pushEnvironment
_supportedJaliscoMediaKindsWithSagaEnabled
_supportedJaliscoMediaKinds
isEqualToData:
setPushNotificationState:
_registerMediaKinds:usingRequestContext:withCompletion:
_registerAPNSToken:usingRequestContext:withCompletion:
initWithRequestContext:token:
initWithRequestContext:notificationType:notificationParameters:
actionType
sagaServerRevision
sagaUpdatedSubscribedPlaylistIDs
jaliscoChangedMediaTypes
_isSupportedJaliscoMediaKind:
invalidateCachedSubscriptionStatusWithCompletionHandler:
handleContentTasteChangedNotification
moduleIdentifier
_handleInAppMessagesUpdatedPushMessage:
_amsPushHandler
shouldHandleNotification:
handleNotification:
apsPayload
ic_intValueForKey:
syncMessagesWithCompletion:
setUserNotificationExtensionId:
initWithConfiguration:bag:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
setAccountManager:
sagaEnabledOnDevice
setSagaEnabledOnDevice:
_currentAPNSToken
_currentRegistrationState
_sagaEnabledOnDevice
_pushEnvironment
_bodyDataForMetadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:
initWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:
timeoutInterval
initWithDatabaseID:
setStoreAdamID:
_title
_storeAdamID
_bodyDataForDatabaseRevision:addToPlaylistBehavior:
initWithDatabaseID:databaseRevision:addToPlaylistBehavior:
requestWithDatabaseID:databaseRevision:addToPlaylistBehavior:
_parseErrorResponseWithBytes:length:
enumerateRawItemsInResponseData:usingHandler:
_parseResponseCode:bytes:length:usingHandler:
_parseItemPropertyCountWithBytes:length:
parseItemWithBytes:length:valuesOut:valuesCapacity:
parseItemWithBytes:length:usingHandler:
_parseDeletedIDListingWithBytes:length:
_parseLoginResponseWithBytes:length:
_parseItemsResponseWithBytes:length:usingHandler:
_parseUpdateResponseWithBytes:length:
_parseAuthorizedAccountTokenWithBytes:length:
_parseCloudArtworkInfoResponseWithBytes:length:
_parseCloudLyricsInfoResponseWithBytes:length:
_parseEditCommandResponseWithBytes:length:
_parseBulkCloudArtworkInfoResponseWithBytes:length:
_parseBulkCloudLyricsInfoResponseWithBytes:length:
_parseControlInterfacesResponseWithBytes:length:
_parseControlPromptResponseWithBytes:length:
_parsePlayStatusResponseWithBytes:length:
_parseListingCollectionWithBytes:length:usingHandler:
_parseDictionaryCollectionWithBytes:length:
numberWithUnsignedChar:
_parseUpdateTypeWithBytes:length:
_parseBrowseListingWithBytes:length:
_parseListingItemWithBytes:length:usingHandler:
initWithBytes:length:
enumerateDeletedItemsInResponseData:usingHandler:
_parseItemIDArrayWithBytes:length:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithUnsignedChar:
initWithUnsignedShort:
initWithUnsignedLong:
initWithUnsignedLongLong:
initWithService:
_stop
initWithProtobufData:type:isResponse:
numberWithLong:
sendProtobuf:toDestinations:priority:options:identifier:error:
_performTokenRequest:completionHandler:
_start
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
initWithClientInfo:options:
addDelegate:queue:
removeDelegate:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
_service
_serviceName
_initializeBTAHandlers
unscheduleSagaDeferredPushUpate
_baseBtaJobForDeferredPush
_scheduleJobNamed:withStartTime:baseBtaJob:
initWithDouble:
_nextJaliscoMediaPollTimeKey
_setHomeSharingPrefsNumber:forKey:
_cellularDataAllowedForJaliscoMedia
_baseBtaJobForPeriodicPollCellularDataAllowed:
unscheduleJaliscoMediaDeferredPushUpate
_unscheduleJobNamed:
_nextEvaluateSyncRulesThrottleOperationTimeKey
_homeSharingPrefsNumberForKey:
sharedTaskManager
scheduleSagaDeferredPushUpate
scheduleJaliscoMediaPeriodicPoll
unscheduleJaliscoMediaPeriodicPoll
scheduleJaliscoMediaDeferredPushUpate
_handleSagaDeferredPushUpdateJobSatisfied:invalidRequest:
_handleJaliscoMediaPeriodicPollJobSatisfied:invalidRequest:
_handleJaliscoMediaDeferredPushUpdateJobSatisfied:invalidRequest:
_handleJobNamed:satisfied:invalid:
_throttledDeferredEvaluateKeepLocalTime
_nextEvaluateSyncRulesOperationTimeKey
_nextJaliscoAppsPollTimeKey
_cellularDataAllowedForJaliscoApps
_jobNameToSelectorMap
uploadLibraryRequest
getResultsRequest
importer
isExplicitUserAction
uploadingLibraryIsSupported
_ensureDeviceIsRegistered
_uploadLibrary
uploadResponseStatus
_clearAllCloudIDs
_prepareLibraryForInitialUpdate
_updateLibrary
setUpdateRequest:
updateRequest
createFileAtPath:contents:attributes:
fileHandleForWritingToURL:error:
initWithOutputFileHandle:
startDictionary
startArrayForKey:
arrayByAddingObjectsFromArray:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
endArray
unsignedCharValue
dataWithBytes:length:
containerQueryWithContainer:
setUploadLibraryRequest:
_determineResultsURLWhenReadyWithUpdateID:retryTimeout:responseStatusCode:
setUploadResponseStatus:
setGetResultsRequest:
deleteAllEntitiesFromLibraryWithDeletionType:usingConnection:
setImporter:
shouldTreatInitialSagaImportAsFailed
_didSubscriptionStatusLapse
_didEncounterFatalErrorImportingPayload
_uploadingLibraryIsSupported
_isExplicitUserAction
_updateRequest
_uploadLibraryRequest
_getResultsRequest
_uploadResponseStatus
ic_allStoreAccountsWithError:
_buildStateChange
_updateStateWithChange:
accountStore
state
setState:
setStateChange:
_accountStore
_state
_stateChange
_getPBData:includedContentTasteItemUpdates:fromContentTasteUpdateItems:
_prepareCachedResponseFromResponse:byAddingResponseTimeIntervalKey:withResponseTimeInterval:
_setCachedContentTasteResponse:
_contentTasteUpdateResponseWithServerResponse:expirationDate:revisionID:isCachedResponse:
_prepareContentTasteResponse:withContentTasteItems:fromCachedContentTasteResponseItems:includedContentTasteItems:
initWithResponse:data:userInfo:storagePolicy:
_getStoreAdamIDLikedState:playlistGlobalIDLikedState:
_updateContentTasteForMediaItems:
_updateContentTasteForGlobalPlaylists:
setExternalId:
setPreference:
setPreferenceType:
setCreatedOffsetMillis:
setPreferences:
preferences
preference
preferenceType
hasExternalId
externalId
storagePolicy
checkoutReaderConnection
subarrayWithRange:
_setLikedState:forEntity:
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
checkInDatabaseConnection:
addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:
initWithContentTasteUpdateItems:invalidateLocalCache:configuration:
operationIdentifier
contentTasteUpdateResponse
setContentTasteUpdateResponse:
_workQueue
_invalidateLocalCache
_DSID
_contentTasteUpdateResponse
_HTTPMethodStringForICDRequestMethod:
appendString:
URLWithString:relativeToURL:
requestWithURL:cachePolicy:timeoutInterval:
acceptsGzipEncoding
request
URLRequestForBaseURL:sessionID:
setAcceptsGzipEncoding:
allowedRetryCount
_arguments
_concurrent
_acceptsGzipEncoding
_shouldPromptForAuthentication
_action
_method
_bodyData
_responseDataDestinationFileURL
_allowedRetryCount
_requestPersonalizationStyle
initWithNewArtistContentResponseModel:andMLModel:
_responseModel
_mlModel
decodeIntegerForKey:
initWithAddToPlaylistBehavior:
_requestCapabilities
_performPrivacyPromptOperation
_handlePrivacyAcknowledgementErrorWithMessage:underlyingError:
_didCompletePrivacyPromptOperation:withStatus:error:
enqueueChildOperation:
ic_errorWithDomain:code:debugDescription:underlyingError:
serverCorrelationKey
serverEnvironment
_didCompleteAllCapabilitiesAsynchronousRequests
_updateWithIdentityProperties:error:
setShouldBypassEnforcementOfPrivacyAcknowledgement:
_updateWithSubscriptionStatusResponse:error:
_requestBagWithAsynchronousRequestsGroup:
_requestIdentityPropertiesWithAsynchronousRequestsGroup:
_requestSubscriptionStatusWithAsynchronousRequestsGroup:
hasCatalogPlaybackCapability
hasAddToCloudLibraryCapability
isManagedAppleID
_identity
_identityStore
_privacyAcknowledgementPolicy
_originatingClientConnection
_privacyPromptOperation
_bag
_identityProperties
_subscriptionStatusResponse
_importOriginalContainerArtwork
anyInLibrary:predicate:options:
_updateContentTasteForItems:invalidatingLocalCache:configuration:withCompletionHandler:
_resetStateAndWaitForPendingOperationsToFinish:
removeObjectsForKeys:
setContentTaste:forMediaItem:storeIdentifier:configuration:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:configuration:withCompletionHandler:
contentTasteOperationsToIDMap
isEqualToDate:
_scheduleNextContentTasteSyncOperation
contentTasteOperationsToDSIDMap
_handleContentTasteUpdateOperationFinishedWithError:forRequestItems:
arrayWithObject:
_scheduleContentTasteUpdateOperationForFailedItems
descriptionWithLocale:
_isRetryableError:
setContentTasteOperationsToDSIDMap:
setContentTasteOperationsToIDMap:
_callbackQueue
_updateContentTasteOperationQueue
_contentTasteItemsToRetry
_musicAppIsInstalled
_havePendingRetryOperation
_backOffIndex
_responseExpirationDate
_contentTasteOperationsToDSIDMap
_contentTasteOperationsToIDMap
initWithAlbumPersistentID:albumItemProperties:
_albumPersistentID
_albumItemProperties
requestWithDatabaseID:databaseRevision:sagaID:containerID:
initWithItemSagaID:playlistPersistentID:
_itemSagaID
initWithItemSagaIDs:
_itemSagaIDs
setAddedItems:
_addedItems
_bodyDataForDatabaseRevision:adamID:sagaID:playlistGlobalID:referralAlbumAdamID:referralPlaylistGlobalID:
initWithDatabaseID:databaseRevision:adamID:sagaID:playlistGlobalID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:
writeSInt64:withCode:
currentCloudID
currentAdamID
currentGlobalID
_currentCloudID
_currentAdamID
_currentGlobalID
setMutableCloudIDToLyricsTokenMap:
mutableCloudIDToLyricsTokenMap
_shouldRestart
_totalItemCount
_currentItemCount
_processedItemCount
_currentPaginationToken
_mutableCloudIDToLyricsTokenMap
currentLyricsToken
_currentLyricsToken
initWithAction:databaseID:databaseRevision:opaqueID:bundleID:
_bodyDataForDatabaseRevision:opaqueID:
encodeInteger:forKey:
taskWithType:configuration:
_restoreCurrentTasks
_pollingRefreshIntervalSecondsUsingBag:
_pollingGracePeriodSecondsForRefreshInterval:
_periodicPollingActivityCriteriaWithRefreshInterval:gracePeriod:
currentTasks
_taskWithName:
_startTask:
_saveCurrentTasks
_scheduleTask:withStartTime:
_unscheduleTask:
activityCriteriaForTask:startTimeInSeconds:
_stopTask:
_handleTask:completion:
objectsPassingTest:
anyObject
_handleSagaDeferredPushUpdateTask:completion:
_handleJaliscoDeferredPushUpdateTask:completion:
_deferredPushGracePeriodSeconds
_deferredPushActivityCriteriaForTask:startTime:gracePeriod:
bypassBagSanityChecks
_cellularDataAllowed
_currentTasks
v32@0:8@16@24
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
v28@0:8q16B24
v32@0:8q16@24
v28@0:8f16q20
v32@0:8q16@"NSDictionary"24
v24@0:8@16
v24@0:8@"ICEnvironmentMonitor"16
@24@0:8@16
v16@0:8
v40@0:8B16q20B28@?32
v32@0:8q16@?24
v24@0:8@?16
v40@0:8q16B24B28@?32
v36@0:8@16q24i32
v32@0:8Q16@?24
v24@0:8Q16
v48@0:8q16@24@32@?40
v56@0:8q16@24@32@40@?48
v32@0:8@16@?24
v48@0:8q16@24q32@?40
v40@0:8Q16q24@?32
v48@0:8@16q24@32@?40
v40@0:8q16@24@?32
v40@0:8@16@24@?32
v48@0:8@16@24q32@?40
v40@0:8@16Q24@?32
v40@0:8@16q24@?32
v48@0:8@16B24q28B36@?40
v28@0:8B16@?20
q24@0:8q16
q28@0:8@16B24
q24@0:8@16
v44@0:8@16B24q28@?36
v40@0:8B16B20B24B28@?32
@32@0:8@16@24
v48@0:8@16q24B32B36@?40
@"SagaRequestHandler"
@"JaliscoRequestHandler"
@"NSObject<OS_dispatch_queue>"
@"NSOperationQueue"
@"NSMutableDictionary"
v20@0:8B16
I16@0:8
v20@0:8I16
C16@0:8
v20@0:8C16
@20@0:8I16
v32@0:8@16q24
B28@0:8@16I24
v32@0:8@16I24I28
v40@0:8@16I24*28I36
v28@0:8@16I24
v24@0:8@"DKDAAPParser"16
v32@0:8@"DKDAAPParser"16q24
v32@0:8@"DKDAAPParser"16@"NSError"24
B28@0:8@"DKDAAPParser"16I24
v32@0:8@"DKDAAPParser"16I24I28
v40@0:8@"DKDAAPParser"16I24*28I36
v28@0:8@"DKDAAPParser"16I24
@32@0:8Q16@24
@40@0:8@16Q24@32
@"NSDictionary"
@40@0:8q16@24@32
@48@0:8@16q24@32@40
@40@0:8I16I20@24@32
@"ICCloudItemIDList"
@48@0:8q16@24@32@40
@56@0:8@16q24@32@40@48
@"NSString"
@32@0:8I16@20C28
@28@0:8@16C24
@24@0:8I16I20
@28@0:8I16@20
@"ICURLSession"
@"NSUserDefaults"
@"ICUserIdentity"
@"ICUserIdentityStore"
@"ICConnectionConfiguration"
@"ML3MusicLibrary"
@"<ICDBackgroundTaskScheduling>"
@40@0:8@16@24@32
@"NSNumber"
@"NSDate"
@36@0:8I16@20@28
B24@0:8^@16
q16@0:8
@"NSArray"
@"CloudLibraryConnection"
@"NSURL"
@"NSMutableArray"
v36@0:8B16@20@28
@"<ICDServerNotificationsManagerDelegate>"
@44@0:8@16@24B32q36
B28@0:8@16B24
v24@0:8@?<v@?@"NSUUID">16
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8q16@?<v@?Q@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8@"NSString"16@"ICClientInfo"24@?<v@?@"NSString"@"NSError">32
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8Q16@24q32@40
@"<NSCopying>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v24@0:8@?<v@?B>16
@32@0:8I16@20B28
@28@0:8@16B24
@"NSObject<OS_os_log>"16@0:8
v20@0:8f16
@32@0:8I16I20@24
v28@0:8I16@?20
f16@0:8
@24@0:8Q16
@32@0:8@16Q24
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationSettings"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24
@"UNUserNotificationCenter"
@44@0:8I16I20I24@28@36
@24@0:8q16
@32@0:8q16@24
B32@0:8@16q24
v32@0:8q16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v40@0:8Q16@24@?32
v32@0:8Q16@24
v64@0:8q16@24@32@40@48@?56
v56@0:8@16@24q32@40@?48
v56@0:8q16@24q32@40@?48
v48@0:8q16q24@32@?40
v44@0:8@16B24@28@?36
v48@0:8@16Q24@32@?40
v24@0:8@"ICConnectionConfiguration"16
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"B>24
v48@0:8@"ICConnectionConfiguration"16B24q28B36@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?B@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?BB>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"f>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8Q16@"ICConnectionConfiguration"24
v32@0:8q16@"ICConnectionConfiguration"24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError"@"NSArray">32
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v64@0:8q16@"NSString"24@"NSArray"32@"NSArray"40@"ICConnectionConfiguration"48@?<v@?Q@"NSError">56
v56@0:8q16@"NSDictionary"24@"ICCloudItemIDList"32@"ICConnectionConfiguration"40@?<v@?Q@"NSError">48
v56@0:8@"NSDictionary"16@"ICCloudItemIDList"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v56@0:8q16@"ICCloudAddReferral"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8q16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSString"16q24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSString"@"NSString"@"NSError">32
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v44@0:8@"NSArray"16B24@"ICConnectionConfiguration"28@?<v@?@"NSError">36
v48@0:8q16@"ICCloudAddReferral"24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@"NSDictionary"16Q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSDictionary"16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?B@"NSError">24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?q@"NSError">24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v24@0:8@"ICDServerNotificationsManager"16
v32@0:8@"ICDServerNotificationsManager"16@"NSNotification"24
@40@0:8q16@24^@32
@"BaseRequestHandler"40@0:8q16@"ICConnectionConfiguration"24^@32
v28@0:8@16i24
v28@0:8@"NSOperation"16i24
v24@0:8@?<v@?@"NSOperation"^B>16
@"CloudServerOptions"24@0:8@"ICConnectionConfiguration"16
@"<ICDAccountManaging>"16@0:8
@"<ICDHandlerCoordinating>"16@0:8
@"<ICDBackgroundTaskManaging>"16@0:8
v48@0:8@16@24@32^v40
v28@0:8B16@20
@"<ICDAccountManaging>"
@"<ICDHandlerCoordinating>"
@"<ICDBackgroundTaskManaging>"
@"CloudPushNotificationController"
@"ICDServerNotificationsManager"
@"ICDCloudServiceStatusMonitor"
@"ICDNetworkAvailabilityService"
@"ICDServerOperationsManager"
@"ICDelegateAccountStoreServiceListener"
@"ICDelegationProviderService"
@"CloudUserNotificationController"
B20@0:8I16
v40@0:8q16q24@?32
@"MSVWatchdog"
@"DetermineArtistStoreIDLookupTypeOperation"
@"CloudArtworkImporter"
@48@0:8@16@24@32@40
@36@0:8I16@20C28B32
@32@0:8@16C24B28
@44@0:8I16@20@28@36
@"<ICDJaliscoSupportedMediaKindsHandler>"
@"ICMusicLibraryContentMetadataDescriptor"
@24@0:8^{_NSZone=}16
@"NSSet"
v40@0:8d16@24@?32
v48@0:8@16d24@32@?40
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="list"^f"count"Q"size"Q}
d16@0:8
@"NSMutableSet"
v32@0:8@?16B24B28
@?16@0:8
@"CloudPendingChangesCoordinator"
@"NSObject<OS_dispatch_group>"
@36@0:8@16I24@28
v24@0:8d16
B24@0:8^B16
v36@0:8@16i24@?28
@"SagaLibrary"
@"SagaArtworkImporter"
@"CloudUpdateLibraryOperation"
@"NSObject<OS_dispatch_source>"
@"<ICDCloudMusicLibrarySagaUpdateTaskHelper>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSError"
@36@0:8@16B24q28
@48@0:8@16@24B32q36B44
@28@0:8Q16I24
@36@0:8@16Q24I32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v32@0:8@16Q24
v44@0:8q16B24@28@?36
@"<ICDHandlerProviding>"
{?="shouldIgnoreDeveloperTokenCache"b1"shouldIgnoreUserTokenCache"b1}
v32@0:8@"ICMusicSubscriptionStatusRequest"16@"NSUUID"24
@"NSXPCListener"
@"<ICDCloudMusicLibraryJaliscoUpdateTaskHelper>"
@"JaliscoLibrary"
@"JaliscoUpdateGeniusDataOperation"
@"JaliscoArtworkImporter"
@"JaliscoMediaUpdateOperation"
@"ICAppleMusicAPITokenError"
@"ICAppleMusicAPITokenCollection"
B24@0:8q16
B32@0:8q16q24
@56@0:8Q16@24@32@40@48
@"NSData"
@40@0:8@16@24q32
@"ICDAccountManagerState"
@32@0:8I16Q20I28
@48@0:8q16q24q32@40
@40@0:8@16q24@32
@"ICStoreRequestContext"
@"AMPMusicArtistNewContentResponse"
v32@0:8I16I20@?24
{?="adamId"b1}
@"ICMusicLibraryArtistAffinityAnalyzer"
@40@0:8I16@20@28B36
@36@0:8@16@24B32
@64@0:8@16@24Q32@40q48q56
@"ICURLRequest"
@32@0:8@16^@24
v48@0:8Q16@24@32@?40
v44@0:8@16Q24B32@?36
v48@0:8@16Q24Q32@?40
v32@0:8@"NSString"16@?<v@?@"NSError">24
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"NSString"16Q24B32@?<v@?@"NSArray"Q@"NSError">36
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16Q24Q32@?<v@?@"NSError">40
@32@0:8@16d24
B24@0:8d16
@"ICPlayActivityController"
@"JaliscoLoadBooksOperation"
@"ICBook"
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v56@0:8@16@24@32@40@48
@40@0:8@16@24#32
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="code"b1"phase"b1}
@40@0:8i16i20@24@32
@48@0:8@16@24@32q40
{?="adamId"b1"canonicalId"b1"releaseDate"b1"contentType"b1"isExplicit"b1}
@32@0:8q16@"<ICDBackgroundTaskScheduling>"24
v24@0:8@"ICDAccountManagerStateChange"16
v32@0:8@"ICDAccountManagerState"16@?<v@?@"BaseRequestHandler">24
v36@0:8@16B24@?28
v28@0:8@16B24
@32@0:8@16q24
v52@0:8@16@24@32I40@44
@40@0:8@16d24@32
@48@0:8@16@24d32@40
v32@0:8@"ICRemoteRequestOperationExecutionContext"16@?<v@?@"ICRemoteRequestOperationExecutionResponse">24
I20@0:8I16
@"JaliscoImporter"
@48@0:8I16I20@24@32@40
@"ICDJaliscoMediaFilter"
v48@0:8@16q24q32@?40
@40@0:8@16q24q32
@32@0:8q16q24
@48@0:8@16q24q32q40
@48@0:8@16q24q32@40
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPMediaDownloadManager"16@"NSArray"24
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSError"32
v56@0:8Q16q24@32I40B44@?48
v32@0:8Q16q24
@"CloudArtworkOperationQueue"
@"MPMediaDownloadManager"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@"ICDCloudPushNotificationRegistrationState"
@"AMSPushHandler"
@"APSConnection"
@48@0:8I16@20@28@36B44
@52@0:8I16@20@28@36B44B48
@60@0:8I16@20@28@36B44B48@52
@56@0:8@16@24@32B40B44@48
@28@0:8I16I20C24
@24@0:8I16C20
@32@0:8@16@?24
Q48@0:8r*16Q24^{?=I*Qq}32Q40
v40@0:8r*16Q24@?32
Q32@0:8r*16Q24
@44@0:8I16r*20Q28@?36
@32@0:8r*16Q24
@40@0:8r*16Q24@?32
@36@0:8r*16I24@?28
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
v24@0:8B16B20
v40@0:8r*16@24@32
v24@0:8r*16
v32@0:8r*16B24B28
@20@0:8B16
@"NSMapTable"
@40@0:8@16d24o^q32
@"SagaImporter"
@"ICStoreURLRequest"
@"NSArray"16@0:8
@"ICConnectionConfiguration"16@0:8
@"ICDAccountManagerState"16@0:8
@"ICDAccountManagerStateChange"16@0:8
@"ACAccountStore"
@"ICDAccountManagerStateChange"
@36@0:8@16B24@28
v40@0:8^@16^@24@32
@44@0:8@16@24Q32B40
v32@0:8^@16^@24
v48@0:8^@16^@24@32@40
@"ICCloudContentTasteUpdateResponse"
@28@0:8@16I24
@"MLModel"
v40@0:8@16q24@32
@"NSXPCConnection"
@"ICDPrivacyPromptOperation"
@"ICURLBag"
@"ICUserIdentityProperties"
@"ICMusicSubscriptionStatusResponse"
v56@0:8q16q24q32@40@?48
v36@0:8B16@20@?28
v56@0:8q16q24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8q16@"NSString"24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v36@0:8B16@"ICConnectionConfiguration"20@?<v@?@"NSError">28
@32@0:8Q16q24
@40@0:8@16Q24q32
@"CloudArtistHeroImageImporter"
@48@0:8I16I20q24q32@40
@52@0:8I16I20q24I32q36@44
@36@0:8I16I20q24I32
@68@0:8I16I20q24q32@40I48q52@60
@60@0:8I16q20q28@36q44@52
@48@0:8@16I24I28@32@40
@44@0:8I16I20@24@32I40
@32@0:8@"<ICDAccountManaging>"16@"<ICDHandlerCoordinating>"24
ffffff
ICDCloudLibraryIsInitialImportKey
ICDCloudLibrarySyncProgressKey
ICDCloudLibrarySagaLibraryUpdateErrorKey
ICDCloudLibraryJaliscoLibraryUpdateErrorKey
ICDCloudMusicLibraryProgressUpdateOperationStatusKey
ICDCloudMusicLibraryProgressPermanentFailureTypeKey
ICDCloudMusicLibraryProgressTemporaryFialureTypeKey
ICDCloudMusicLibraryProgressRequestReasonKey
ICDCloudMusicLibraryProgressWasInitialImportKey
ICDCloudMusicLibraryProgressWasExplicitUserActionKey
CloudLibraryStateReasonKey
EnableCloudLibraryFailureReasonKey
AutoEnableCloudLibraryFailureReasonKey
AppleMusicSubscriptionStatusCheckFailureKey
MatchSubscriptionStatusCheckFailureKey
v8@?0
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.accessQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.calloutQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.operationQueue
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.retryQueue
v20@?0@"NSError"8B16
v16@?0@"CloudAuthenticateOperation"8
v16@?0@"NSError"8
v24@?0q8@"NSError"16
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v24@?0B8B12@"NSError"16
com.apple.amp.itunescloudd.JaliscoRequestHandler.%@.deauthenticate
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.jaliscoDeauthenticateOperation
v16@?0@"ICAsyncBlockOperation"8
v24@?0@"ICURLBag"8@"NSError"16
UserRequestedSubscriptionHidden
com.apple.mobileipod
v24@?0@"NSDictionary"8@"NSError"16
v12@?0B8
ICDCloudMusicLibraryRequestHandler.m
SagaAuthenticateOperation can only return CloudLibraryOperationStatusSuccess OR CloudLibraryOperationStatusPermanentlyFailed
Invalid State - We already have a valid SagaRequestHandler
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.cloudAuthenticateOperation
com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.sagaDeauthenticateOperation
com.apple.itunescloudd.sagaUpdateInProgressChanged
com.apple.itunescloudd.jaliscoUpdateInProgressChanged
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Jalisco
Saga
Unknown
prohibitLibraryUpload
TB,N,V_prohibitLibraryUpload
prohibitArtworkPrefetch
TB,N,V_prohibitArtworkPrefetch
supportsAutomaticEnablingiCloudMusicLibrary
TB,N,V_supportsAutomaticEnablingiCloudMusicLibrary
databaseRevision
TI,N,V_databaseRevision
hasAddToPlaylistBehavior
TB,N,V_hasAddToPlaylistBehavior
addToPlaylistBehavior
TC,N,V_addToPlaylistBehavior
update
v16@?0@"DKDAAPWriter"8
serverRevision
TI,N,V_serverRevision
<redacted>
developerToken
userToken
%@ %@
JaliscoSetItemPropertyOperationPurchaseHistoryIDKey
JaliscoSetItemPropertyOperationPropertiesKey
JaliscoSetItemPropertyOperation - (purchase_history_id = %llu)
POST
v24@?0@"ICDResponse"8@"NSError"16
JaliscoDeauthenticateOperation
v20@?0B8@"NSError"12
B16@?0@"ML3DatabaseConnection"8
SagaCreatePlaylistOperationPlaylistPersistentIDKey
SagaCreatePlaylistOperationProperties
SagaCreatePlaylistOperationTrackListKey
SagaSDKCreatePlaylistOperationRequestingBundleKey
SagaCreatePlaylistOperation - (playlist persistent-id = %lld)
playlistSagaID
TQ,R,N,V_playlistSagaID
databases/%u/edit
com.apple.itunescloudd.%@
ICDDefaultsKeyKnowAccountDSIDs
ICDDefaultsKeyKnownActiveAccountDSID
ICDDefaultsKeyPendingBackgroundTasksData
com.apple.itunescloud.daemon
com.apple.itunescloud.daemon.internal
daemonDefaults
T@"ICDDefaults",R,N
userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
internalDefaults
T@"NSUserDefaults",&,N,V_internalDefaults
knownAccountDSIDs
T@"NSArray",C,N
knownActiveAccountDSID
T@"NSString",C,N
pendingBackgroundTasksData
T@"NSData",&,N
com.apple.%@.global.serial.queue
Implement this class property in subclasses
Implement this class property in subclasses supporting accountless handling
-init is not supported, use handlerForConfiguration: or initWithConfiguration:
%@ %p [dsid=%@]
globalSerialQueue
T@"NSObject<OS_dispatch_queue>",R,N
handlers
T@"NSMutableDictionary",R,N
accountlessHandler
T@"BaseRequestHandler",R,N
supportsAccountlessHandling
TB,R,N
managedConfigurations
T@"NSArray",R,N
userIdentity
T@"ICUserIdentity",R,N,V_userIdentity
userIdentityStore
T@"ICUserIdentityStore",R,N,V_userIdentityStore
configuration
T@"ICConnectionConfiguration",R,N,V_configuration
musicLibrary
T@"ML3MusicLibrary",R,N,V_musicLibrary
taskScheduler
T@"<ICDBackgroundTaskScheduling>",&,N,V_taskScheduler
MLCloudNeedsContainerRefetch
iTunes_Control/iTunes/LatestCloudPlayCountChanges.plist
iTunes_Control/iTunes/LatestCloudPlayDateChanges.plist
iTunes_Control/iTunes/LatestCloudSkipCountChanges.plist
iTunes_Control/iTunes/LatestCloudPlayDataChangesDate.plist
MLResetCollectionsOnNextImport
/var/mobile/Media/Purchases
.plist
itemId
com.apple.iTunesStore.downloadInfo
mediaAssetFilename
UPDATE item_store SET store_item_id = ? WHERE item_pid IN (SELECT item_pid FROM item_extra WHERE location = ?)
v32@?0@"NSString"8@"NSNumber"16^B24
v16@?0@"ML3DatabaseConnection"8
v32@?0q8Q16^B24
UPDATE container SET is_src_remote = 2 WHERE cloud_is_subscribed AND is_src_remote = 0
SELECT COUNT() FROM artwork_token WHERE artwork_type = ? AND artwork_token LIKE '%%0x0%%'
MLArtistHeroImageImportDate
DELETE FROM artwork_token WHERE artwork_source_type=%d AND entity_pid
MLEnableICMLConfig
MLActiveAccountDSID
MLAutoEnableICML
adamID
T@"NSNumber",R,N,V_adamID
date
T@"NSDate",R,N,V_date
score
T@"NSNumber",R,N,V_score
LibraryRecommendationArtistAffinity
v32@?0@8@"NSIndexPath"16^B24
v24@?0@"MPModelLibraryResponse"8@"NSError"16
-[ICMusicLibraryArtistAffinityAnalyzer createFeatureProviderDictionaryFromNewContentResponse:withLibraryArtistSnapshots:]
/Library/Caches/com.apple.xbs/Sources/iTunesCloud_Sim/iTunesCloud-4018.200.29/HomeSharing/itunescloudd/Classes/ContentRecommendations/Library Artist Analysis/ICMusicLibraryArtistAffinityAnalyzer.m
releaseIx.count == daysWithAdds.count
releaseIx.count == albumCount.count
releaseIx.count == playCount.count
releaseIx.count == daysSinceLastPlay.count
releaseIx.count == playsPerItem.count
days_with_adds
num_albums
num_plays
days_since_last_play
plays_per_item
release_ix
%llu
MPModelLibraryRequest
/System/Library/PrivateFrameworks/MediaPlayer.framework/MediaPlayer
MPModelSong
MPModelRelationshipSongArtist
MPPropertySet
MPModelPropertyArtistName
MPModelRelationshipSongAlbum
MPModelPropertyAlbumTitle
MPModelPropertySongTitle
MPModelPropertySongPlayCount
MPModelPropertySongSkipCount
MPModelPropertySongLastDevicePlaybackDate
MPModelPropertySongLibraryAddedDate
MPModelPropertySongUserRating
persistent-id
kind
has-subscription-drm
item-name
item-id
playlist-name
playlist-id
playlist-artist-name
playlist-artist-id
artist-name
artist-id
composer-name
composer-id
genre-name
genre-id
compilation
year
duration
track-number
track-count
disc-number
disc-count
store-front-id
added-date
modified-date
purchased-date
released-date
copyright
last-played-date
has-been-played
play-count
skip-count
user-rating
album-rating
item-checked
comment
has-lyrics
lacks-cover-art
cloud-only
beats-per-minute
filename
size
sample-rate
bit-rate
format
audio-codec
audio-codec-sub-type
gapless-heuristic
gapless-encoding-drain
gapless-encoding-delay
gapless-duration
gapless-frame-resynch
normalized-volume
playlist-sort-order
playlist-sort-reversed
parent-id
playlist-global-id
items
data
genius-seed-tracks
contentFilter
smartInfo
isDefaultSmartPlaylist
external-vendor-identifier
external-vendor-display-name
external-vendor-container-tag
databases/%u/containers/edit
v32@?0@"NSString"8@16^B24
v32@?0@"NSNumber"8Q16^B24
SagaSubscribedPlaylistUpdater.m
Invalid parameter not satisfying: %@
connection
v40@?0q8r^@16Q24^B32
com.apple.MediaServices
subscribed-containers.daap
v28@?0B8@"NSError"12@"NSData"20
playlistCloudIDs
T@"NSArray",R,C,N,V_playlistCloudIDs
T@"CloudLibraryConnection",R,N,V_connection
requestReason
Tq,N,V_requestReason
ignoreMinRefreshInterval
TB,N,V_ignoreMinRefreshInterval
payloadDownloadPathOverride
T@"NSURL",C,N,V_payloadDownloadPathOverride
pinnedOnly
TB,N,V_pinnedOnly
subscribedPlaylistCloudIDs
T@"NSMutableArray",R,N,V_subscribedPlaylistCloudIDs
currentPlaylistCloudID
TI,R,N,V_currentPlaylistCloudID
currentPlaylistKind
TC,R,N,V_currentPlaylistKind
updateRequired
TB,R,N,V_updateRequired
ICDServerNotificationsManagerFamilyEventKey
ICDServerNotificationsManagerIsApplicationRegistrationKey
ICDServerNotificationsManagerApplicationRegistrationBundleIDsKey
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
com.apple.itunesstored.accountschanged
com.apple.mobileipod.libraryimportdidfinish
com.apple.itunesstored.autodownloaddefaultschange
com.apple.purplebuddy.setupdone
UserInfo
isPlaceholder
bundleIDs
pairs
B24@?0Q8@"NSObject<OS_xpc_object>"16
delegate
T@"<ICDServerNotificationsManagerDelegate>",R,W,N,V_delegate
MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
CloudAuthenticateOperation
v20@?0@"ICMutableUserIdentityProperties"8B16
authenticateFailureCode
T@"NSNumber",&,N,V_authenticateFailureCode
mergeToCloudLibraryPreference
T@"NSNumber",N,V_mergeToCloudLibraryPreference
allowNoisyAuthPrompt
TB,N,V_allowNoisyAuthPrompt
enableReason
Tq,N,V_enableReason
Client is not allowed to request cloud service capabilities.
Client is not allowed to request storefront country code.
Client is not allowed to request storefront identifier.
Client is not allowed to request user token.
Failed to retrieve bundle identifier of the requesting application. The requesting application is likely missing the "%@" entitlement.
application-identifier
v24@?0@"NSString"8@"NSError"16
com.apple.itunesstored.privacy-acknowledged
v32@?0@"ICDCloudServiceCapabilitiesRequestOperation"8Q16^B24
v16@?0@"ICURLBag"8
v24@?0@"ICMusicSubscriptionStatusMonitor"8@"ICMusicSubscriptionStatus"16
v24@?0Q8@"NSError"16
Found nil storefront identifier from local store account.
ICDCloudServiceStatusMonitor.m
%@: Either storefrontCountryCode or finalError are expected to be non-nil at this point.
v32@?0@"NSUUID"8@"NSXPCConnection"16^B24
%@: Either storefrontIdentifier or error are expected to be non-nil at this point.
databases/%u/extra_data/cloud-lyrics-info
lyricsInfoDictionaries
T@"NSArray",C,N,V_lyricsInfoDictionaries
JaliscoImporterErrorDomain
JaliscoImporter.m
Subclass %@ must implement -%@ defined in %@.
JaliscoImporter
items.daap
includeItemFlavors
delta
revision-id
isCancelled
TB,R,N,V_isCancelled
progress
Tf,R,N,V_progress
SagaPublishPlaylistOperation - (playlist cloud id = %llu)
playlistGlobalID
T@"NSString",R,N,V_playlistGlobalID
playlistShareURL
T@"NSString",R,N,V_playlistShareURL
com.apple.itunescloudd.usernotifications
com.apple.Music
music-notification-default
center
T@"UNUserNotificationCenter",&,N,V_center
centerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_centerQueue
ETag
contentTasteItems
T@"NSArray",C,N,V_contentTasteItems
expirationDate
T@"NSDate",C,N,V_expirationDate
responseRevisionID
TQ,N,V_responseRevisionID
cachedResponse
TB,N,GisCachedResponse,V_cachedResponse
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
CloudLoadBulkArtworkInfoOperation.m
CloudIDs must be an array!
%@ - (item count = %lu)
useLongIDs
TB,R,N,V_useLongIDs
itemKind
TC,R,N,V_itemKind
cloudArtworkInfoDictionaries
T@"NSArray",R,N,V_cloudArtworkInfoDictionaries
icd_sagaDatabaseUserVersion
Tq,N,Sicd_setSagaDatabaseUserVersion:
icd_sagaCloudAddToPlaylistBehavior
Tq,N,Sicd_setSagaCloudAddToPlaylistBehavior:
icd_preferredVideoQuality
Tq,N,Sicd_setPreferredVideoQuality:
TB,N,V_updateRequired
v40@?0Q8q16Q24^B32
CloudArtworkOperationQueue.m
Unknown sourceType for CloudArtworkOperationQueue addOperations: %ld
Only operations of type CloudArtworkImportOperation are supported
v32@?0@"CloudArtworkImportOperation"8Q16^B24
purchase history
cloud
container cloud
cloud (subscription)
container cloud (subscription)
Unknown sourceType/artworkType pair for CloudArtworkOperationQueue addOperations: %ld/%@
Failed to resolve artwork URL for %@ ID: %@
com.apple.itunescloudd.CloudArtworkOperation.bulkArtworkInfoOperation
v32@?0@"NSNumber"8@"NSMutableArray"16^B24
sourceType
Tq,R,N,V_sourceType
SagaAddPlaylistOperationPlaylistPersistentIDKey
SagaAddPlaylistOperationPlaylistNameKey
SagaAddPlaylistOperationPlaylistSeedItemIDsKey
SagaAddPlaylistOperationPlaylistItemIDsKey
SagaCreateGeniusPlaylistOperation - (playlist_persistent_id  = %lld / playlist_name = %@)
com.apple.mediaplaybackcore
MPCPlaybackPrivateListeningEnabled
v32@?0@"NSString"8@"NSXPCListener"16^B24
iTunesCloudService State
@"NSDictionary"16@?0^{os_state_hints_s=I*II}8
com.apple.itunescloudd.launched
Attempting to retrieve handler for an unsupported configuration [dsid=%@]
Attempting to retrieve handler for an unsupported configuration
An ICCloudClient (or HSCloudClient) instance is using a signed-out user identity.
Listen to ICActiveUserIdentityDidChangeNotification and either update ICCloudClient with the new active account or recreate it
ICCloudServiceErrorDomain
Unable to get an anonymous listener for %@[%ld] - This usually indicates an attempt to access itunescloudd without the proper entitlements.
com.apple.itunescloudd.xpc
ICDServer.m
We should never get here
unknown
AllowAutoDownloadOnCellular
com.apple.itunesstored
com.apple.itunescloudd.ICDServer.serial.queue
com.apple.itunescloudd.ICDServer.startup.queue
com.apple.itunescloudd.ICDServer.internal.operation.queue
MLLastUploadedExplicitContentAllowedBoolean
com.apple.itunescloudd.setParentalControlRequestOperation
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
v16@?0@"ICRequestContext"8
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v24@?0@"ICMusicSubscriptionFairPlayKeyStatus"8@"NSError"16
com.apple.itunescloudd.CloudServer.keyRefreshOperation
installed
uninstalled
v32@?0@"ICConnectionConfiguration"8Q16^B24
p2-url-resolution
p2-launch-host-suffix-whitelist
p2-launch-apple-store-host-patterns
p2-launch-apple-store-path-patterns
p2-launch-appstore-host-patterns
p2-launch-appstore-path-patterns
p2-launch-ebookstore-host-patterns
p2-launch-ebookstore-path-patterns
p2-launch-mobilestore-host-patterns
p2-launch-mobilestore-path-patterns
vpp-licensing-invitation-url-pattern
Library/Caches/com.apple.itunesstored/url-resolution.plist
com.apple.itunesstored.changed-url-resolution
AppleMusicSubscriber
AppleMusicUndecided
AppleMusicDisabled
p2-url-section-name
Music
MusicNS
ignoreAccountChanges
TB,N
preferredVideoQuality
Tq,N
accountManager
T@"<ICDAccountManaging>",R,N
handlerCoordinator
T@"<ICDHandlerCoordinating>",R,N
backgroundTaskManager
T@"<ICDBackgroundTaskManaging>",R,N
server
T@"ICDServer",R,N
serialQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
startupQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_startupQueue
internalOperationQueue
T@"NSOperationQueue",R,N,V_internalOperationQueue
xpcListeners
T@"NSMutableDictionary",R,N,V_xpcListeners
cloudServiceStatusMonitor
T@"ICDCloudServiceStatusMonitor",R,N,V_cloudServiceStatusMonitor
networkAvailabilityService
T@"ICDNetworkAvailabilityService",R,N,V_networkAvailabilityService
serverOperationsManager
T@"ICDServerOperationsManager",R,N,V_serverOperationsManager
serverNotificationsManager
T@"ICDServerNotificationsManager",R,N,V_serverNotificationsManager
startupSequenceCompleted
TB,N,GisStartupSequenceCompleted,V_startupSequenceCompleted
delegateAccountStoreListener
T@"ICDelegateAccountStoreServiceListener",R,N,V_delegateAccountStoreListener
delegationProviderService
T@"ICDelegationProviderService",R,N,V_delegationProviderService
pushNotificationController
T@"CloudPushNotificationController",R,N,V_pushNotificationController
mediaPlaybackDefaults
T@"NSUserDefaults",R,N,V_mediaPlaybackDefaults
userNotificationController
T@"CloudUserNotificationController",R,N,V_userNotificationController
stateHandle
TQ,R,N,V_stateHandle
TB,N,V_ignoreAccountChanges
Tq,N,V_preferredVideoQuality
T@"<ICDAccountManaging>",R,N,V_accountManager
T@"<ICDHandlerCoordinating>",R,N,V_handlerCoordinator
T@"<ICDBackgroundTaskManaging>",R,N,V_backgroundTaskManager
MPStoreDownloadManager
MPMediaQuery
MPMediaLibrary
MPRestrictionsMonitor
No purchase_history_artwork_token for purchase_history_id = %llu
No purchase_history_screenshot_token for purchase_history_id = %llu
SELECT DISTINCT (fetchable_artwork_token), purchase_history_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = 0 JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
v32@?0@"ML3DatabaseRow"8@"NSError"16^B24
AllArtistImagesMapNextUpdateDateKey
AllArtistImagesMapDataDictionaryKey
allArtistImagesMap.plist
com.apple.itunescloudd.cloudartistheroimageimporter.accessqueue
com.apple.itunescloudd.cloudartistheroimageimporter.operationqueue
operationCount
com.apple.itunescloudd.cloudartistheroimageimporter
v48@?0q8q16i24i28q32^B40
min-artist-update-polling-frequency-secs
SELECT fetchable_artwork_token, store_id FROM best_artwork_token JOIN item_artist ON entity_pid = item_artist_pid AND entity_type = ? WHERE entity_pid = ?
SELECT fetchable_artwork_token, store_id FROM best_artwork_token JOIN album_artist ON entity_pid = album_artist_pid AND entity_type = ? WHERE entity_pid = ?
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
powerAssertionIdentifier
T@"NSString",&,N,V_powerAssertionIdentifier
watchdog
T@"MSVWatchdog",&,N,V_watchdog
currentUpdateOpertion
T@"DetermineArtistStoreIDLookupTypeOperation",&,N,V_currentUpdateOpertion
followupUpdateOpertion
T@"DetermineArtistStoreIDLookupTypeOperation",&,N,V_followupUpdateOpertion
artworkImporter
T@"CloudArtworkImporter",&,N,V_artworkImporter
T@"CloudArtworkImporter",R,N,V_artworkImporter
T@"NSOperationQueue",R,W,N,V_operationQueue
shouldProcessSpecificArtists
TB,R,N,V_shouldProcessSpecificArtists
artistPersistentIDsToUpdate
T@"NSArray",&,N,V_artistPersistentIDsToUpdate
albumArtistPersistentIDsToUpdate
T@"NSArray",&,N,V_albumArtistPersistentIDsToUpdate
library-match-rules
artist-image-match-bulk-url
an-batch-size
all-artist-images-map-url
update-interval-seconds
v24@?0@"ICURLResponse"8@"NSError"16
v32@?0@"NSArray"8Q16^B24
bulkArtistNameLibraryMatchURL
T@"NSURL",&,N,V_bulkArtistNameLibraryMatchURL
bulkArtistNameLibraryMatchBatchSize
T@"NSNumber",&,N,V_bulkArtistNameLibraryMatchBatchSize
updateIntervalSeconds
T@"NSNumber",&,N,V_updateIntervalSeconds
allArtistImagesMapURL
T@"NSURL",&,N,V_allArtistImagesMapURL
artistNameLibraryMatchURL
T@"NSURL",&,N,V_artistNameLibraryMatchURL
artist
v24@?0@"NSString"8^B16
artwork
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
v24@?0@"NSNumber"8^B16
SELECT store_id FROM item_artist LEFT OUTER JOIN artwork_token ON item_artist_pid = entity_pid AND entity_type = ? AND artwork_type = ? AND artwork_source_type = ? WHERE store_id != 0
SELECT store_id FROM album_artist LEFT OUTER JOIN artwork_token ON album_artist_pid = entity_pid AND entity_type = ? AND artwork_type = ? AND artwork_source_type = ? WHERE store_id != 0
SELECT DISTINCT (fetchable_artwork_token), store_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token LEFT OUTER JOIN item_artist ON item_artist_pid = entity_pid WHERE artwork_token IS NULL AND entity_type = ? AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
SELECT DISTINCT (fetchable_artwork_token), store_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token LEFT OUTER JOIN album_artist ON album_artist_pid = entity_pid WHERE artwork_token IS NULL AND entity_type = ? AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
v32@?0@"NSNumber"8@"NSString"16^B24
currentDatabaseRevision
Tq,N,V_currentDatabaseRevision
required-fields
MLArtistHeroImageImportDatabaseRevision
databases/%u/extra_data/cloud-artwork-info
com.apple.itunes.extended-media-kind
'%@:%d'
(%@)
artworkInfoDictionaries
T@"NSArray",C,N,V_artworkInfoDictionaries
ICDServerOperationsManagerOperationNamesKey
ICDServerOperationsManagerBackgroundOperationNamesKey
name=%@, object=%p
SBSSetStatusBarShowsActivityForApplication
SpringBoardServices
com.apple.itunescloudd.ICDServerOperationsManager.serial.queue
com.apple.itunescloudd.ICDServerOperationsManager.operationQueue
com.apple.itunescloudd.ICDServerOperationsManager.backgroundOperationQueue
T@"NSOperationQueue",R,N,V_operationQueue
backgroundOperationQueue
T@"NSOperationQueue",R,N,V_backgroundOperationQueue
networkActivityIndicatorVisible
TB,N,GisNetworkActivityIndicatorVisible,V_networkActivityIndicatorVisible
containerID
TI,N,V_containerID
dmap.itemid
geniusSeedTrackIDs
supportedMediaKinds
T@"NSArray",R,C,N
daapQueryFilterString
T@"NSString",R,C,N
MPMediaDownloadManager
%@ - %@ - %@, playCount: %ld
, lastPlayedDate: %@
songMetadataDescriptor
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_songMetadataDescriptor
artistMetadataDescriptor
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_artistMetadataDescriptor
albumMetadataDescriptor
T@"ICMusicLibraryContentMetadataDescriptor",&,N,V_albumMetadataDescriptor
playCount
Tq,N,V_playCount
skipCount
Tq,N,V_skipCount
userRating
Tf,N,V_userRating
lastPlayedDate
T@"NSDate",C,N,V_lastPlayedDate
libraryAddedDate
T@"NSDate",C,N,V_libraryAddedDate
hasArtistAndAlbumData
TB,N,V_hasArtistAndAlbumData
v32@?0@"<ICDManageableAccount>"8Q16^B24
ICDAccountManagerState %p:
[active dsid=%@]
[no active dsid]
[supported dsids=%@]
[no supported dsids]
v24@?0@"ICConnectionConfiguration"8^B16
supportedConfigurations
T@"NSSet",C,N,V_supportedConfigurations
supportedConfigurationsDSIDs
T@"NSSet",C,N,V_supportedConfigurationsDSIDs
activeConfiguration
T@"ICConnectionConfiguration",C,N,V_activeConfiguration
activeConfigurationDSID
T@"NSString",C,N,V_activeConfigurationDSID
SSURLConnectionRequestGeniusAdditionsErrorDomain
server-status-code
status
retry-in-ms
SSURLConnectionRequest+GeniusAdditions
idx (%tu) is out of range (%tu)
value
hasKey
T@"NSString",&,N,V_key
valuesCount
TQ,R,N
values
T^f,R,N
Artist: %@: Score: %f, artistID: %lld, cumulativePlayCount: %ld, cumulativeSkipCount: %ld, playsPerItem: %f, uniqueAlbums: %lu, uniqueSongs: %lu, daysWithAdds: %lu, daysSinceLastPlay: %ld
uniqueSongs
T@"NSMutableArray",&,N,V_uniqueSongs
uniqueAlbums
T@"NSMutableArray",&,N,V_uniqueAlbums
uniqueDatesWithAddedContent
T@"NSMutableSet",&,N,V_uniqueDatesWithAddedContent
cumulativePlayCount
Tq,N,V_cumulativePlayCount
cumulativeSkipCount
Tq,N,V_cumulativeSkipCount
artistName
artistAdamID
Tq,R,N
averagePlaysPerItemAdded
Td,R,N
daysSinceLastPlayedDate
base-url
CloudLibrary.m
CloudLibrary
I'm abstract, please instantiate a subclass.
com.apple.itunescloudd.%@.connection
com.apple.itunescloudd.asyncrequests
v16@?0@"NSOperation"8
CloudLibrary has no bag key
%@ Ensure Connection
v16@?0@"CloudLibraryConnection"8
v16@?0@"ICStoreRequestContext"8
Connecting to cloud library
v24@?0@"ICUserVerificationContext"8@"NSError"16
v24@?0@"NSOperation"8^B16
failedToConnect
TB,N,V_failedToConnect
underlyingConnection
T@"CloudLibraryConnection",&,N,V_underlyingConnection
connectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
connectionGroup
T@"NSObject<OS_dispatch_group>",&,N,V_connectionGroup
loginRequestInFlight
TB,N,V_loginRequestInFlight
asynchronousRequestsAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_asynchronousRequestsAccessQueue
connectionCompletionHandler
T@?,C,N,V_connectionCompletionHandler
libraryIdentifier
T@"NSString",R,C,N,V_libraryIdentifier
pendingChangesCoordinator
T@"CloudPendingChangesCoordinator",R,N,V_pendingChangesCoordinator
SagaSetItemPropertyOperationSagaIDKey
SagaSetItemPropertyOperationPropertiesKey
SagaSetItemPropertyOperation - (saga_id = %u)
-init is not supported, use +handler
@"NSString"16@?0@"NSString"8
com.apple.itunescloudd.sagaUploadItemPropertiesQueue
com.apple.itunescloudd.sagaUploadPlaylistPropertiesQueue
com.apple.itunescloudd.sagaUpdateLibraryQueue
com.apple.itunescloudd.calloutQueue
SagaRequestHandler.m
MSVDeviceSupportsMultipleLibraries()
com.apple.itunescloudd.SagaRequestHandler.uploadPlayDataOperation
com.apple.itunescloudd.SagaRequestHandler.createPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.createGeniusPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.addItemToPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.updatePlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.publishPlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.removeItemOperation
com.apple.itunescloudd.SagaRequestHandler.removePlaylistOperation
com.apple.itunescloudd.SagaRequestHandler.uploadPlaylistArtworkOperation
com.apple.itunescloudd.SagaRequestHandler.updateSubscribedPlaylistsOperation
com.apple.itunescloudd.SagaRequestHandler.cloudAddOperation
com.apple.itunescloudd.SagaRequestHandler.setAddToPlaylistBehaviorOperation
com.apple.itunescloudd.SagaRequestHandler.setAlbumPropertiesOperation
com.apple.itunescloudd.SagaRequestHandler.loadArtworkInfoOperation
No saga artwork_token for screenshot item with persistent-id = %lld
NSDebugDescription
com.apple.itunescloudd.SagaRequestHandler.getGeniusItemsOperation
daap.incrementplaycount
daap.incrementskipcount
daap.songdateadded
com.apple.itunescloudd.SagaRequestHandler.setItemPropertyOperation
com.apple.itunescloudd.SagaRequestHandler.updateLibraryOperation
%@ %p
supportsSecureCoding
TB,R
T@"CloudLibraryConnection",&,N,V_connection
T@"NSString",C,N,V_libraryIdentifier
persistent
TB,R,N,GisPersistent,V_persistent
Tq,N,V_status
error
T@"NSError",&,N,V_error
CloudLibraryOperationStatusPending
CloudLibraryOperationStatusSuccess
CloudLibraryOperationStatusFailed
CloudLibraryOperationStatusPermanentlyFailed
CloudLibraryOperationStatusCancelled
Unknown Cloud Library Operation Status
SagaUpdateSubscribedPlaylistsOperation - (saga_id count = %llu)
SagaGetGeniusItemsOperation - (seed_id = %llu)
itemIDs
T@"NSArray",R,N,V_itemIDs
library-update-request
library-update-check
JaliscoUpdateGeniusDataOperation
cuid
num-tracks
auto-update
incremental
determineUploadURL
v32@?0@"ICURLResponse"8@"NSDictionary"16@"NSError"24
update-id
%08X%08X
persistent-library-id
tracks
determineResultsURL
sim-url
additional-fields-url
User-Agent
v40@?0@"NSURLSessionDownloadTask"8@"NSURL"16@"NSURLResponse"24@"NSError"32
INSERT OR REPLACE INTO genius_config (data, version, id, default_num_results, min_num_results) VALUES (?, ?, 0, 25, 2);
INSERT OR REPLACE INTO genius_metadata (genius_id, data) VALUES (?, ?);
INSERT OR REPLACE INTO genius_similarities (genius_id, data) VALUES (?, ?);
match-id
%llx
song
com.apple.itunescloudd
GeniusSimData-Jalisco
GeniusAdditionalFieldsData-Jalisco
initialImport
TB,N,GisInitialImport,V_initialImport
geniusOperationStatus
Tq,R,N,V_geniusOperationStatus
com.apple.iTunesCloud.CloudService.operationQueue
auto-update-polling-frequency-secs
subscribed-container-polling-frequency-secs
v24@?0B8B12B16B20
v12@?0f8
v24@?0@"NSArray"8@"NSError"16
v32@?0@"NSString"8@"NSString"16@"NSError"24
v24@?0@"NSNumber"8@"NSError"16
update-on-app-focus-enabled
update-polling-frequency-secs
v24@?0@"NSURL"8@"NSError"16
loadBooksForStoreIDs: - Invalid user identity [missing DSID] - userIdentity=%@
Artist images are not supported on this device.
handlerProvider
T@"<ICDHandlerProviding>",R,W,N,V_handlerProvider
requestingBundleID
T@"NSString",C,N,V_requestingBundleID
clientIdentifier
clientVersion
bagProfile
bagProfileVersion
shouldIgnoreUserTokenCache
shouldIgnoreDeveloperTokenCache
hasClientIdentifier
T@"NSString",&,N,V_clientIdentifier
hasClientVersion
T@"NSString",&,N,V_clientVersion
hasBagProfile
T@"NSString",&,N,V_bagProfile
hasBagProfileVersion
T@"NSString",&,N,V_bagProfileVersion
hasShouldIgnoreUserTokenCache
TB,N,V_shouldIgnoreUserTokenCache
hasShouldIgnoreDeveloperTokenCache
TB,N,V_shouldIgnoreDeveloperTokenCache
can't initialize simfile, no path
can't initialize simfile, failed to open file '%s'
can't initialize simfile, incorrect magic number %u
can't initialize simfile, incorrect format version %u
allML3TrackPropertiesWithGeniusTrackProperties
T@"NSArray",&,N,V_allML3TrackPropertiesWithGeniusTrackProperties
allGeniusTrackPropertiesWithML3TrackProperties
T@"NSArray",&,N,V_allGeniusTrackPropertiesWithML3TrackProperties
allML3ContainerPropertiesWithGeniusPlaylistProperties
T@"NSArray",&,N,V_allML3ContainerPropertiesWithGeniusPlaylistProperties
allGeniusPlaylistPropertiesWithML3ContainerProperties
T@"NSArray",&,N,V_allGeniusPlaylistPropertiesWithML3ContainerProperties
protocol-version
min-compatible-version
body.plist
application/x-apple-plist
Content-Type
gzip
Content-Encoding
sha256
ICStoreURLRequest *_CloudGeniusUtilitiesCreatePostRequest(NSURL *__strong, NSString *__strong, NSTimeInterval, NSInteger, NSMutableDictionary *__strong, BOOL, BOOL)
CloudGeniusUtilities.m
Must provide either a URL or a URL Bag Key
com.apple.itunescloudd.CloudMusicSubscriptionStatusServiceListener.accessQueue
sharedMusicSubscriptionStatusServiceListener
T@"CloudMusicSubscriptionStatusServiceListener",R
active
TB,R,GisActive
ios-library-update-accepting-requests
genius-learn-more-url
com.apple.itunescloudd.JaliscoRequestHandler.updateLibraryQueue
com.apple.itunescloudd.JaliscoRequestHandler.calloutQueue
com.apple.itunescloudd.jaliscoGeniusDownloadQueue
com.apple.homesharing
JaliscoDisabled
Unable update library [no DSID on user identity] - userIdentity=%@ - properties=%@
com.apple.itunescloudd.JaliscoRequestHandler.updateLibraryOperation
com.apple.itunescloudd.JaliscoRequestHandler.hideItemOperation
com.apple.itunescloudd.JaliscoRequestHandler.setItemPropertyOperation
com.apple.itunescloudd.JaliscoRequestHandler.loadArtworkInfoOperation
No purchase history artwork_token for screenshot item with persistent-id = %lld
JaliscoRequestHandler.m
com.apple.itunescloudd.JaliscoRequestHandler.disableJaliscoGenius
com.apple.itunescloudd.JaliscoRequestHandler.genniusOptOutOperation
com.apple.itunescloudd.JaliscoRequestHandler.loadBooksOperation
ICGeniusOperationStatusNotRunning
ICGeniusOperationStatusOperationEnqueued
ICGeniusOperationStatusVerifyingOperation
ICGeniusOperationStatusPreparingLibraryForUpload
ICGeniusOperationStatusUploadingLibrary
ICGeniusOperationStatusWaitingForResults
ICGeniusOperationStatusDownloadingResults
ICGeniusOperationStatusImportingResults
ICGeniusOperationStatusComplete
updateGeniusDataOperation
T@"JaliscoUpdateGeniusDataOperation",&,N,V_updateGeniusDataOperation
jaliscoLibrary
T@"JaliscoLibrary",R,N,V_jaliscoLibrary
T@"JaliscoArtworkImporter",R,N,V_artworkImporter
updateLibraryQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_updateLibraryQueue
updateLibraryOperation
T@"JaliscoMediaUpdateOperation",&,N,V_updateLibraryOperation
geniusUpdateOperationQueue
T@"NSOperationQueue",R,N,V_geniusUpdateOperationQueue
geniusUpdateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_geniusUpdateQueue
geniusUpdateGroup
T@"NSObject<OS_dispatch_group>",R,N,V_geniusUpdateGroup
updateLibraryCompletionHandlers
T@"NSMutableArray",R,C,N,V_updateLibraryCompletionHandlers
tokenCollection
hasTokenCollection
T@"ICAppleMusicAPITokenCollection",&,N,V_tokenCollection
hasError
T@"ICAppleMusicAPITokenError",&,N,V_error
 [%ld]: %ld bytes (%@)
MIMEType
T@"NSString",R,N,V_MIMEType
responseCode
TQ,R,N,V_responseCode
responseHeaderFields
T@"NSDictionary",R,N,V_responseHeaderFields
responseData
T@"NSData",R,N,V_responseData
responseDataFileURL
T@"NSURL",C,N,V_responseDataFileURL
T@"NSError",R,N,V_error
ICDAccountManagerStateChange %p: %@ -> %@ - [active changed=%u] [supported changed=%u]
computation
Tq,R,N,V_computation
initialState
T@"ICDAccountManagerState",R,N,V_initialState
finalState
T@"ICDAccountManagerState",R,N,V_finalState
activeConfigurationChanged
supportedConfigurationsChanged
databases/%u/getgeniusitems
seed-id
num-items
dmap.longitemid
T@"NSArray",C,N,V_itemIDs
genius-opt-out
T@"NSString",C,N,V_cuid
%d:%lld:%lld
storeID=%lld, DSID=%lld, globalPlaylistID=%@, contentTasteType=%ld, contentTasteItem=%ld, updateTimeStamp=%@
storeID
Tq,N,V_storeID
T@"ICConnectionConfiguration",&,N,V_configuration
contentTasteType
Tq,N,V_contentTasteType
contentTasteItem
Tq,N,V_contentTasteItem
globalPlaylistID
T@"NSString",C,N,V_globalPlaylistID
updateActionTimeStamp
T@"NSDate",&,N,V_updateActionTimeStamp
dsid
T@"NSNumber",&,N,V_dsid
SagaImporterErrorDomain
SagaImporter.m
containers.daap
items_%u.daap
meta
daap.playlistsongs
v36@?0@"NSString"8q16B24q28
com.apple.itunescloudd.SagaImporter.loadLyricsOperation
T@"ICUserIdentity",R,C,N,V_userIdentity
SagaLoadLyricsOperation-bulk (item count = %llu)
com.apple.itunescloudd.SagaLoadLyricsOperation
dmap.dictionary
text-url
databases/%u/subscribed-containers
SagaUpdatePlaylistOperationArchiveVersionKey
SagaUpdatePlaylistOperationPlaylistPersistentIDKey
SagaUpdatePlaylistOperationProperties
SagaUpdatePlaylistOperationTrackListKey
SagaUpdatePlaylistOperationItemSagaIDsKey
SagaUpdatePlaylistOperationcloudItemIDListKey
SagaUpdatePlaylistOperation - (playlist_persistent_id = %lld)
SagaRemovePlaylistOperationArchiveVersionKey
SagaRemovePlaylistOperationPlaylistSagaIDsKey
SagaRemovePlaylistOperationPlaylistSagaIDKey
SagaRemovePlaylistOperation - (saga_id count = %llu)
-init is not supported, use sharedCloudContentTasteResponseCacheManager
com.apple.amp.iTunesCloud.ICCloudContentTasteResponseCacheManager.accessQueue
Library/Caches/com.apple.itunescloud/MediaContentTaste
SyncResponse-%llu
SagaUploadItemPlayDataOperation
adamId
name
catalogContent
hasAdamId
Tq,N,V_adamId
hasName
T@"NSString",&,N,V_name
catalogContents
T@"NSMutableArray",&,N,V_catalogContents
serializedRecommendationsResponse
compiledMLModel.mlmodelc
com.apple.itunescloud.library_recommendations_refresh
min-refresh-freq-in-seconds
com.apple.itunescloudd.ICMusicLibraryRecommendationsHandleNewArtistContentResponseNotification
com.apple.itunescloudd.ICMusicLibraryRecommendationsClearCacheNotification
ICMusicLibraryRecommendationsHandleNewArtistContentFilePath
musicRecommendationsData
matchedAdamIDs
Library_Recommendation
non-subscriber-notification-content-opt-in
com.apple.amp.inappmessages.private
com.apple.itunescloud.ICMusicLibraryRecommendationController.accessQueue
v16@?0@"NSObject<OS_xpc_object>"8
v24@?0@"ICMusicAccountNotificationsSettingsResponse"8@"NSError"16
v16@?0@"AMPMusicArtistNewContentResponse"8
v16@?0@"ICMusicLibraryRecommendationResult"8
thresholded_score
v16@?0@"NSMutableDictionary"8
propertyKey
v24@?0@"AMPMusicArtistNewContentResponse"8@"NSError"16
Caches/com.apple.iTunesCloud/LibraryRecommendations/ResourceCache
page-detail-rule
eventType:page|pageId:%lld
detail-event
isOptedInToNewArtistContent
true
optin-context
isExplicitContent
is-explicit-rule
isAppleMusicSubscriber
false
subscription-status-context
album-detail-segue
click
LibraryContentBannerNonsubscriber
recoId
close-button
impressions
banner
v24@?0@"ICStorePlatformResponse"8@"NSError"16
album-lockup
albumTitle
non-subscriber-opt-in-message
v24@?0@"ICInAppMessageEntry"8@"NSError"16
NEW_ALBUM_NOTIFICATION_TITLE
MediaPlayer
NEW_ALBUM_NOTIFICATION_BODY_FORMAT
title
body
alert
_url
https://itunes.apple.com/album/id%lld?itsct=NonSubsNewContentRelease&itscg=10100
actionType
actionUrl
eventType
notificationAction
eventVersion
notificationId
targetType
notification
topic
xp_amp_notifications
notificationType
Content
details
notificationSubtype
NonSubsNewContentRelease
NEW_ALBUM_NOTIFICATION_GOTO_BUTTON_TITLE
goToAlbum
targetId
AmpMusic.Notifications.NewRelease.Buttons.GoToAlbum
button
content-available
ams_%@
_bid
yyyy-MM-dd'T'HH:mm:ssZ
en_US_POSIX
notificationRequest
isExplicit
language
platformId
platformName
sharedLibraryRecommendationController
T@"ICMusicLibraryRecommendationController",R
ML3StoreItemTrackData
/System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
ML3MusicLibrary
ML3MutableDatabaseImport
MLMediaLibraryService
JaliscoHideItemOperationItemPurchaseHistoryIDsKey
JaliscoHideItemOperation - (purchase_history_id count = %llu)
databases/%u/items/edit
<%@: %p cloud_id=%llu, artworkToken=%@, artworkType=%lld, sourceType=%lld>
Original artwork found, but failed to import.
Artwork downloaded successfully, but failed to import.
URLSession
T@"ICURLSession",R,N,V_URLSession
cloudID
TQ,R,N,V_cloudID
artworkToken
T@"NSString",R,N,V_artworkToken
artworkType
Tq,R,N,V_artworkType
mediaType
TI,N,V_mediaType
assetURL
T@"NSURL",C,N,V_assetURL
allowsCellularData
TB,N,V_allowsCellularData
_NSDataCloudAdditionsTemporaryFileKey
play-activity-feed-post-frequency
com.apple.itunescloudd.CloudPlayActivityRequestListenerErrorDomain
-init is not supported, use +sharedInstance
com.apple.itunescloudd.CloudPlayActivityRequestListener.flushOperationQueue
v32@?0@"NSArray"8Q16@"NSError"24
com.apple.itunesstored.private
com.apple.itunescloudd.playactivity
will
will not
v16@?0d8
CloudPlayActivityListenerNextFlushPlayActivityEndPointKey
CloudPlayActivityListenerNextFlushPlayActivityFireDateKey
com.apple.itunescloudd.flushPlayactivityEventsBackgroundTask
JaliscoLoadBooksOperation
books.daap
('%@:%d')
dmap.persistentid
com.apple.itunes.itms-songid
dmap.itemname
daap.songartist
daap.songgenre
daap.songdatepurchased
com.apple.itunes.cloud-artwork-url
com.apple.itunes.store.vpp-is-licensed
com.apple.itunes.store.vpp-org-id
com.apple.itunes.store.vpp-org-display-name
com.apple.itunes.item-flavor-listing
com.apple.itunes.item-flavor
com.apple.itunes.item-redownload-param-2
parserSuccess
TB,N,V_parserSuccess
books
T@"NSArray",&,N,V_books
queryStoreIDs
T@"NSArray",&,N,V_queryStoreIDs
operation
T@"JaliscoLoadBooksOperation",R,N,V_operation
parsedBooks
T@"NSMutableArray",R,N,V_parsedBooks
currentParsingBook
T@"ICBook",&,N,V_currentParsingBook
shouldParseMetadata
TB,N,V_shouldParseMetadata
_ICApplicationIdentifierForRevokingAllMusicUserTokens
com.apple.Music.iOS.VPPA.UnifiedReconsentDialogShown
com.apple.Music.iOS.VPPA.ApprovalButtonSelected
com.apple.Music.iOS.VPPA.CancelButtonSelected
com.apple.itunescloudd.MediaLibraryAccessRevocationController.accessQueue
com.apple.itunescloudd.tcchelper
SBParentalControlsCapabilities
com.apple.springboard
TCC_EXPIRATION_SINGLE_APP_TITLE
TCC_EXPIRATION_MULTIPLE_APPS_TITLE
TCC_EXPIRATION_ACCEPT_BUTTON_TITLE
TCC_EXPIRATION_REJECT_BUTTON_TITLE
guid
v32@?0@"NSString"8@"NSString"16^B24
com.apple.tcc.access.changed
v12@?0i8
sharedController
T@"MediaLibraryAccessRevocationController",R
%@-CloudPendingChanges
noDSID
com.apple.itunescloudd.pendingchanges.%@.%@
%@.plist
%@-AddPendingChange
%@-ProcessPendingChanges
%@-RemoveAllPendingChanges
T@"ICConnectionConfiguration",R,C,N,V_configuration
unable to create cache directory
DeviceClassNumber
ENABLE_CLOUD_LIBRARY_FAILED_TOO_MANY_ITEMS_TITLE
ENABLE_CLOUD_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPAD
ENABLE_CLOUD_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPOD
ENABLE_CLOUD_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPHONE
ENABLE_CLOUD_LIBRARY_FAILED_TITLE
ENABLE_CLOUD_LIBRARY_FAILED_BODY
void CloudLibraryUtilitiesShowFailedToEnableCloudLibrarySystemDialog(ICCloudLibraryUtilitiesDisableICMLReason)
CloudLibraryUtilities.m
Either alertHeader or alertMessage is required.
cloud-info
troveid
System
Cloud
Sync
Purchase
Store
Subscription
DaapDebugging
Initial
q24@?0@"NSDate"8@"NSDate"16
Revision_%u_to_%u
track_data_%lu.daap
playlist_data_%lu.daap
SubscribedPlaylists
SubscribedContainersResponse_%llu
daap_data_%lu.daap
v28@?0@"NSError"8B16B20B24
MPCloudController
domain
code
localizedDescription
phase
hasDomain
T@"NSString",&,N,V_domain
hasCode
Tq,N,V_code
hasLocalizedDescription
T@"NSString",&,N,V_localizedDescription
hasPhase
Ti,N,V_phase
FetchingDeveloperToken
FetchingUserToken
(unknown: %i)
NETWORK_FAILED
UNKNOWN_ERROR
updateCompletionBlock
T@?,C,N,V_updateCompletionBlock
opaqueID
T@"NSString",C,N,V_opaqueID
MPErrorDomain
hasDeveloperToken
T@"NSString",&,N,V_developerToken
hasUserToken
T@"NSString",&,N,V_userToken
artistContent
model
artistContents
T@"NSMutableArray",&,N,V_artistContents
hasRecoId
T@"NSString",&,N,V_recoId
hasModel
T@"NSData",&,N,V_model
cloud-library-opt-out-url
min-itunes-match-compatible-version
itunes-match-protocol-version
troveID
T@"NSString",C,N,V_troveID
contentType
canonicalId
releaseDate
contentFeatures
hasContentType
Ti,N,V_contentType
hasCanonicalId
Tq,N,V_canonicalId
hasReleaseDate
Tq,N,V_releaseDate
hasIsExplicit
TB,N,V_isExplicit
T@"NSMutableArray",&,N,V_contentFeatures
Album
Song
Playlist
MusicVideo
ArtistUploadedContent
DisableCloudLibraryOperation
com.apple.itunescloudd.DisableCloudLibraryOperation.deauthenticate
MLSyncClientLastSyncedRevision
MLSyncClientSyncAnchor
MLSyncClientGenerationID
MLSyncClientHasPendingAssets
deleteDB
TB,N,V_deleteDB
disableActiveLockerAccount
TB,N,V_disableActiveLockerAccount
removeSourcePurchaseHistoryForMusicTracks
TB,N,V_removeSourcePurchaseHistoryForMusicTracks
com.apple.itunescloudd.ICDHandlerCoordinator.operationQueue
ICDHandlerCoordinator.m
The method `setupHandlers` must only be called once
com.apple.itunescloudd.ICDHandlerCoordinator.setupHandlersWithAccountStateChange
The method `setupHandlers` must be call prior to attempting to update active configurations
com.apple.itunescloudd.ICDHandlerCoordinator.updateHandlersWithAccountStateChange
The method _processSupportedConfigurationsChange:initialSetup: is only suitable for parallel multi user setup.
The method _processActiveConfigurationChange:initialSetup: is only suitable for single user and serial multi user setup.
setupCompleted
TB,N,GisSetupCompleted,V_setupCompleted
type
Tq,N,V_type
T@"<ICDBackgroundTaskScheduling>",R,W,N,V_taskScheduler
CloudLibraryConnectionRequestForbiddenAdditonalErrorCodeKey
database-id
database-name
com.apple.itunescloudd.CloudLibraryConnection.serial
application/x-dmap-tagged
Client-Cloud-Daap-Version
Client-Cloud-Purchase-DAAP-Version
X-FM-Dsid
Client-Cloud-DAAP-Request-Reason
Cloud library server requested authentication
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
databaseID
TI,R,N,V_databaseID
connectionState
Tq,R,N,V_connectionState
T@"ICUserIdentity",R,N
T@"ICUserIdentityStore",R,N
MPPlaybackUserDefaults
cloud-assets-update
SagaUploadPlaylistArtworkOperationPlaylistPersistentIDKey
cloud-ids
file-size
hash-values
payload
initiate asset change
back-off-delay-in-ms
upload-responses-url
download-requests-url
download requests phase 1 (fetch work items)
cloud-id
actions
action
upload-playlist
assets
upload-info
response-data
v24@?0@"NSURLResponse"8@"NSError"16
token
response-code
upload responses (report work item responses)
download requests phase 2 (fetch work items)
all-work-completed
operations
endpoint
method
requiredHeaders
clientGenerated
en_US
EEE',' dd MMM yyyy HH':'mm':'ss 'GMT'
content
byterange
offset
length
v40@?0@"NSURLSessionUploadTask"8@"NSData"16@"NSURLResponse"24@"NSError"32
Not enough information to upload artwork asset.
updateplaylistasset.XXXXXX
playlistPersistentID
Tq,N,V_playlistPersistentID
T@"NSString",&,N,V_cuid
T@"NSString",&,N,V_troveID
userArtworkToken
T@"NSString",&,N,V_userArtworkToken
containerCloudID
T@"NSNumber",&,N,V_containerCloudID
T@"NSURL",&,N,V_assetURL
assetFileSize
TQ,N,V_assetFileSize
com.apple.itunescloudd.CloudRemoteRequestOperationExecutionServiceListener.accessQueue
sharedRemoteRequestOperationExecutionServiceListener
T@"CloudRemoteRequestOperationExecutionServiceListener",R
JaliscoUpdateOperation.m
JaliscoUpdateOperation
UpdateOperationBegin
UpdateOperationEnd
reason
class
initial
Must Subclass
query
includeHiddenItems
TB,R,N,GisInitialImport,V_initialImport
updateProgress
Tf,R,N
powerEventBeginName
T@"NSString",C,V_powerEventBeginName
powerEventEndName
T@"NSString",C,V_powerEventEndName
powerEventPayload
T@"NSDictionary",C,V_powerEventPayload
TI,R,N,V_containerID
General
iTunesCloudD-Oversize
Accounts
AppPurchaseSync
AppPurchaseSync-Oversize
Artwork
Artwork-Oversize
CloudSync
CloudSync-Oversize
Connections
Connections-Oversize
Downloads
Genius
Genius-Oversize
PurchaseSync
PurchaseSync-Oversize
Push
PlayActivity
PlayActivity-Oversize
ContentTaste
ContentTaste-Oversize
BackgroundTasks
CloudLibraryCoordinator
ICDLogLibraryRecommendations
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.amp.itunescloudd
v32@?0@8@16^B24
daap.songalbumartist
daap.songalbum
daap.songalbumuserrating
daap.songcomment
daap.songcompilation
daap.songcomposer
daap.songcontentrating
daap.songdatemodified
daap.songdateplayed
daap.songdatereleased
daap.songdisabled
daap.songdisccount
daap.songdiscnumber
daap.songexcludefromshuffle
daap.songgrouping
daap.songlastskipdate
daap.sortalbumartist
daap.sortalbum
daap.sortartist
daap.sortcomposer
daap.sortname
daap.songstarttime
daap.songstoptime
daap.songtrackcount
daap.songtracknumber
daap.songyear
daap.songuserplaycount
daap.songuserrating
daap.songuserskipcount
dmap.itemavailable
dmap.itemhidden
com.apple.itunes.store.episode-screenshot
com.apple.itunes.cloud-artwork-token
com.apple.itunes.cloud-purchased-token
com.apple.itunes.content-rating
com.apple.itunes.itms-artistid
com.apple.itunes.itms-composerid
com.apple.itunes.itms-genreid
com.apple.itunes.itms-playlistid
com.apple.itunes.itms-storefrontid
daap.songcodectype
daap.songcodecsubtype
daap.songbitrate
daap.songbeatsperminute
daap.songsamplerate
daap.songformat
daap.songsize
daap.songlongsize
daap.songtime
daap.songrelativevolume
daap.songdatakind
daap.songdataurl
daap.songcontentdescription
daap.songlongcontentdescription
com.apple.itunes.movie-info-xml
com.apple.itunes.item-flavor-id
com.apple.itunes.norm-volume
com.apple.itunes.has-video
com.apple.itunes.gapless-heur
com.apple.itunes.gapless-enc-del
com.apple.itunes.gapless-enc-dr
com.apple.itunes.gapless-dur
com.apple.itunes.gapless-resy
com.apple.itunes.is-hd-video
com.apple.itunes.copyright
com.apple.itunes.drm-user-id
com.apple.itunes.non-drm-user-id
com.apple.itunes.drm-key1-id
com.apple.itunes.drm-key2-id
com.apple.itunes.drm-versions
com.apple.itunes.drm-platform-id
com.apple.itunes.item-redownload-param
com.apple.itunes.has-chapter-data
com.apple.itunes.flat-chapter-data
com.apple.itunes.season-num
com.apple.itunes.xid
com.apple.itunes.series-name
com.apple.itunes.episode-num-str
com.apple.itunes.chapter-metadata-url
com.apple.itunes.collection-description
com.apple.itunes.cloud-lyrics-token
com.apple.itunes.episode-sort
com.apple.itunes.store.extras-url
com.apple.itunes.store.playlist-artist-id
com.apple.itunes.mastered-for-itunes
com.apple.itunes.store.subscription-adam-id
com.apple.itunes.store.playback-endpoint
daap.songwork
daap.songmovementname
daap.songmovementcount
daap.songmovementnumber
com.apple.itunes.store.lyrics-available
com.apple.itunes.store.supports-hls-playback
com.apple.itunes.store.ams-show-type
com.apple.itunes.store.ams-episode-type
com.apple.itunes.store.ams-episode-display-label
com.apple.itunes.store.ams-episode-sort-order
com.apple.itunes.store.color-capability
com.apple.itunes.store.hls-color-capability
com.apple.itunes.store.hls-video-quality
com.apple.itunes.store.hls-playback-url
com.apple.itunes.store.audio-capability
com.apple.itunes.store.hls-audio-capability
com.apple.itunes.rental-duration
com.apple.itunes.rental-pb-duration
com.apple.itunes.rental-pb-start
com.apple.itunes.rental-start
com.apple.itunes.store.is-premium-rental
com.apple.itunes.publication-version
com.apple.itunes.display-publication-version
com.apple.itunes.page-progression
com.apple.itunes.store.show-composer-as-artist
chapters
chapter-list
nominal-image-resolutions
images
start
v32@?0^{?=I*Qq}8Q16^B24
No subscription artwork_token for item with persistent-id = %lld
No subscription screenshot_token for item with persistent-id = %lld
%@ Unsupported entity type %ld for subscription artwork info
%@ Failed to fetch artwork info lookup for cloud IDs: %@
SELECT DISTINCT (fetchable_artwork_token), subscription_store_item_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = ? JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
SagaCloudAddItemOperationAdamIDKey
SagaCloudAddPlaylistOperationPlaylistGlobalIDKey
SagaCloudAddItemToPlaylistOperationPlaylistPersistentIDKey
v32@?0@"NSNumber"8@"NSNumber"16^B24
adamIDToSagaIDMap
T@"NSDictionary",&,N,V_adamIDToSagaIDMap
globalIDToSagaIDMap
T@"NSDictionary",&,N,V_globalIDToSagaIDMap
UPDATE item_store set store_saga_id = store_saga_id WHERE item_pid = ?
UPDATE item SET keep_local = ? WHERE item_pid = ? AND in_my_library = 1 AND media_type IN (8, 1032)
TQ,N,V_cloudID
T@"NSString",C,N,V_token
Tq,N,V_artworkType
completionHandler
T@?,C,N,V_completionHandler
CloudArtworkImporter.m
configuration.userIdentity != nil
com.apple.itunescloudd.artworkimporter.artworkDownloadAccessQueue
Request must be of type %@
Suspending
Resuming
artworkDownloadSession
T@"ICURLSession",&,N,V_artworkDownloadSession
artworkDownloadAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_artworkDownloadAccessQueue
artworkDownloadOperationQueue
T@"CloudArtworkOperationQueue",&,N,V_artworkDownloadOperationQueue
artworkDownloadOperationMap
T@"NSMutableDictionary",&,N,V_artworkDownloadOperationMap
T@"NSString",C,N,V_powerAssertionIdentifier
artworkDownloadWatchdog
T@"MSVWatchdog",&,N,V_artworkDownloadWatchdog
downloadManager
T@"MPMediaDownloadManager",&,N,V_downloadManager
artwork_operation(%llu, %ld, %ld)
ML3ArtworkTypeUnknown
ML3ArtworkTypeItem
ML3ArtworkTypeScreenshot
ML3ArtworkTypeChapter
ML3ArtworkTypeArtistHero
ML3ArtworkTypePlaylist
ML3ArtworkSourceTypeUnknown
ML3ArtworkSourceTypeCloud
ML3ArtworkSourceTypeSync
ML3ArtworkSourceTypePurchaseHistory
ML3ArtworkSourceTypeStore
ML3ArtworkSourceTypeSubscriptionStoreContent
accountDSID
manageable
TB,R,N,GisManageable
TB,R,N,GisActive
Prompting the user to acknowledge the latest privacy policy is not supported on the current platform.
notNeeded
cancelled
accepted
T@?,C
com.apple.sagad
com.apple.jalisco
com.apple.music.service
com.apple.music.social
environment
APNSToken
mediaKinds
T@"NSData",&,N,V_APNSToken
T@"NSArray",&,N,V_mediaKinds
accountStates
v32@?0@"NSNumber"8@"ICDCloudPushNotificationAccountRegistrationState"16^B24
com.apple.itunescloudd.NSOperationQueue.CloudPushNotificationController.operationQueue
com.apple.itunescloudd.NSOperationQueue.CloudPushNotificationController.updatePushNotificationsOperationSyncQueue
Ignoring push notification [account is not active] - accountDSID=%lld - activeAccountDSID=%lld
com.apple.itunescloudd.aps
com.apple.itunescloudd.aps.dev
com.apple.itunescloudd.aps.demo
v24@?0@"ICPushNotificationsResponse"8@"NSError"16
media-kinds
com.apple.itunesstored.PlaybackLeaseDidEnd
payloadVersion
music-video
feature-movie
tv-episode
book
software
T@"<ICDAccountManaging>",W,N,V_accountManager
sagaEnabledOnDevice
TB,N,V_sagaEnabledOnDevice
pushEnvironment
T@"NSString",C,N,V_pushEnvironment
T@"APSConnection",&,N,V_connection
databases/%u/items
databases/%u/containers
Title: %@, storeAdamID: %lld
T@"NSString",C,N,V_title
storeAdamID
Tq,N,V_storeAdamID
library-daap
v24@?0r*8Q16
com.apple.itunes.drm-token-request-status
com.apple.itunes.drm-token-data
dmap.serverrevision
daap.baseplaylist
daap.songalbumid
daap.songartistid
daap.bookmarkable
daap.songbookmark
daap.songcategory
dmap.itemdateadded
dmap.itemdateplayed
daap.songdescription
daap.songeqpreset
daap.songextradata
dmap.objectextradata
daap.songgapless
daap.songhasbeenplayed
daap.songkeywords
daap.songpodcasturl
daap.sortseriesname
dacp.protocolversion
dacp.supports-speakerselection
dacp.supports-setuserrating
dmap.containercount
dmap.containeritemid
dmap.databasekind
dmap.itemcount
dmap.itemkind
dmap.parentcontainerid
dmap.status
dmcp.interfacekind
dmcp.protocolversion
dmcp.supportsbonjoursourcesupdates
dmcp.supportscontrolpromptrequests
dmcp.supportsplaystatusupdates
dmcp.supportsremotelibraryselection
dmcp.supportsvolumecontrol
com.apple.itunes.drm-key-list-id
com.apple.itunes.itunes-machine-id
com.apple.itunes.playlist-data
com.apple.itunes.playlist-kind
com.apple.itunes.playlist-sort-is-reversed
com.apple.itunes.playlist-sort
com.apple.itunes.supports-fprap
com.apple.itunes.supported-itunes-extensions
com.apple.itunes.supports-genius-control
com.apple.itunes.store.newsstand-artwork-url
com.apple.itunes.store.product-url
com.apple.jingle.newsstandBindingEdge
com.apple.jingle.newsstandBindingType
com.apple.jingle.AppIconNeedsShine
com.apple.itunes.special-playlist
daap.syncid
daap.albumsyncid
daap.artistsyncid
daap.albumartistsyncid
daap.composersyncid
daap.genresyncid
com.apple.itunes.cloud-match-type
com.apple.itunes.cloud-connect-status
dmap.itemidlisting
com.apple.itunes.genius-seed-track-id-listing
com.apple.itunescloudd.AppleMusicAPITokenIDSService.accessQueue
v16@?0@"ICAppleMusicAPITokenResponse"8
v28@?0@"ICAppleMusicAPITokenCollection"8@"NSError"16i24
sharedService
T@"AppleMusicAPITokenIDSService",R
com.apple.private.alloy.itunescloudd
requestTokens
com.apple.itunescloudd.deferredPushUpdate.saga
CloudPeriodicPoller - JaliscoMedia - LoadBag
purchase-daap
forced-refresh-frequency-minutes
com.apple.itunescloudd.periodicPoll.jaliscoMedia
com.apple.itunescloudd.deferredPushUpdate.jaliscoMedia
NextEvaluateSyncRulesOperationTime
NextEvaluateSyncRulesThrottleOperationTime
NextJaliscoLibraryPeriodicPollTime
NextJaliscoAppsPeriodicPollTime
cloud-library-update-request
cloud-library-update-check
subscription lapsed
load initial cloud library - isInitialImport
load initial cloud library
DisableLibraryUpload
ForceLibraryUnification
libraryUpdateRequest
CloudLibraryUpload.plist
should-upload
process-playlists
playlists
CloudLibraryUploadResults.plist
createdBuiltInSmartPlaylists
autoCreatedSmartPlaylistsDeleted
Failed to get a database revision during library update operation
MusicShowCloudMediaEnabledSetting
com.apple.mobileipod-prefsChanged
SELECT best_artwork_token.entity_pid FROM best_artwork_token JOIN artwork_token ON best_artwork_token.entity_pid = artwork_token.entity_pid AND best_artwork_token.entity_type = artwork_token.entity_type AND best_artwork_token.available_artwork_token=artwork_token.artwork_token WHERE best_artwork_token.entity_type = ? AND best_artwork_token.artwork_type = ? AND artwork_source_type = ? AND available_artwork_token != ''
UPDATE item_store SET store_saga_id = 0
UPDATE container SET store_cloud_id = 0
Tq,N,V_reason
importer
T@"SagaImporter",&,N,V_importer
updateRequest
T@"ICStoreURLRequest",&,N,V_updateRequest
uploadLibraryRequest
T@"ICStoreURLRequest",&,N,V_uploadLibraryRequest
getResultsRequest
T@"ICStoreURLRequest",&,N,V_getResultsRequest
uploadResponseStatus
Tq,N,V_uploadResponseStatus
uploadingLibraryIsSupported
TB,N,V_uploadingLibraryIsSupported
isExplicitUserAction
TB,N,V_isExplicitUserAction
initialUpdate
TB,R,N,GisInitialUpdate
com.apple.itunescloudd.ICDAccountManager.serial.queue
T@"ICConnectionConfiguration",R,C,N
state
T@"ICDAccountManagerState",R,C,N
stateChange
T@"ICDAccountManagerStateChange",R,C,N
accountStore
T@"ACAccountStore",R,N,V_accountStore
T@"ICDAccountManagerState",C,N,V_state
T@"ICDAccountManagerStateChange",C,N,V_stateChange
T@"NSArray",R,C,N,V_supportedConfigurations
T@"ICConnectionConfiguration",R,C,N,V_activeConfiguration
_MediaContentTasteUpdateResponseTimeIntervalSinceReferenceDate
-init is not supported, use initWithContentTasteUpdateItems:invalidateLocalCache:dsid
com.apple.amp.iTunesCloud.ICUpdateContentTasteOperation.workQueue
config_id=%p items=%@
Unable create a request context - userIdentity=%@ 
If-None-Match
If-Match
application/x-protobuf
B16@?0@"ICCloudContentTasteUpdateItem"8
NonMediaItemStoreAdamIds
longLongValue
store_item_id
subscription_store_item_id
SELECT item_pid, liked_state, store_item_id, subscription_store_item_id, store_saga_id, is_subscription FROM item_store JOIN item_stats USING (item_pid) WHERE 
SELECT album_pid, liked_state, store_playlist_id, item_store.item_pid, item_store.store_saga_id, item_store.is_subscription FROM album JOIN item_store ON (album.representative_item_pid == item_store.ROWID) WHERE item_store.store_playlist_id
SELECT container_pid, liked_state, cloud_global_id FROM container WHERE cloud_global_id
contentTasteUpdateResponse
T@"ICCloudContentTasteUpdateResponse",&,N,V_contentTasteUpdateResponse
SagaUploadPlaylistPlayDataOperation
subclass must implement
 %@ [%@]
session-id
%@=%@
Accept-Encoding
%d.%d
Client-iTunes-Sharing-Version
T@"NSString",R,N,V_action
concurrent
TB,R,N,GisConcurrent,V_concurrent
Tq,N,V_method
timeoutInterval
bodyData
T@"NSData",C,N,V_bodyData
acceptsGzipEncoding
TB,N,V_acceptsGzipEncoding
shouldPromptForAuthentication
TB,N,V_shouldPromptForAuthentication
responseDataDestinationFileURL
T@"NSURL",C,N,V_responseDataDestinationFileURL
allowedRetryCount
Tq,N,V_allowedRetryCount
requestPersonalizationStyle
Tq,N,V_requestPersonalizationStyle
responseModel
T@"AMPMusicArtistNewContentResponse",R,N,V_responseModel
mlModel
T@"MLModel",R,N,V_mlModel
CloudSetAddToPlaylistBehaviorOperationBehaviorIDKey
CloudSetAddToPlaylistBehaviorOperation - (add to playlist behavior = %@)
Privacy acknowledgement required, but presenting the privacy prompt is not allowed.
Privacy acknowledgement required, but user did not accept latest privacy policy.
Encountered error while performing privacy prompt operation.
privacyAcknowledgementPolicy
originatingClientConnection
T@"NSXPCConnection",&
No cloud_artwork_token for item saga id = %llu
No cloud_screenshot_token for item saga id = %llu
No cloud_artwork_token for playlist saga id = %llu
SELECT DISTINCT (fetchable_artwork_token), store_saga_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = ? JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
SELECT DISTINCT (fetchable_artwork_token), store_cloud_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN container ON entity_pid = container_pid AND entity_type = ? WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token
com.apple.amp.iTunesCloud.CloudContentTasteUpdateRequestListener.accessQueue
com.apple.amp.iTunesCloud.CloudContentTasteUpdateRequestListener.callbackQueue
com.apple.iTunesCloud.CloudContentTasteUpdateRequestListener._updateContentTasteOperationQueue
com.apple.itunescloud.contenttaste
v32@?0@"NSString"8@"ICCloudContentTasteUpdateItem"16^B24
v32@?0@"NSNumber"8@"ICConnectionConfiguration"16^B24
contentTasteOperationsToDSIDMap
T@"NSMutableDictionary",&,N,V_contentTasteOperationsToDSIDMap
contentTasteOperationsToIDMap
T@"NSMutableDictionary",&,N,V_contentTasteOperationsToIDMap
MediaContentTasteResponseExpirationTimeKey
com.apple.amp.iTunesCloud.media-content-taste-refresh
SagaSetAlbumItemPropertyOperationAlbumPersistentIDKey
SagaSetAlbumItemPropertyOperationAlbumItemPropertiesKey
SagaSetAlbumItemPropertyOperation - (album_persistent_id = %lld)
ItemSagaIDKey
PlaylistPersistentIDKey
SagaAddItemToPlaylistOperation - (saga_id = %llu)
Tq,N,V_privacyAcknowledgementPolicy
Jalisco-Media
SagaRemoveItemOperationArchiveVersionKey
SagaRemoveItemOperationItemSagaIDsKey
SagaRemoveItemOperationItemSagaIDKey
SagaRemoveItemOperation - (saga_id count = %llu)
T@"CloudArtistHeroImageImporter",R,N,V_importer
addedItems
T@"NSDictionary",&,N,V_addedItems
ICAddToLibraryRequest.m
You can only send one field (adam-id or playlist-global-id
You can not add a playlist-global-id to a container
databases/%u/containers/%u/cloud-add
databases/%u/cloud-add
adam-id cannot be zero.
cannot specify more than one referral
container-id cannot be zero.
saga-id cannot be zero.
playlist-global-id must be a non-zero length string.
T@"NSMutableDictionary",R,N,V_addedItems
currentCloudID
TQ,R,N,V_currentCloudID
currentAdamID
TQ,R,N,V_currentAdamID
currentGlobalID
T@"NSString",R,N,V_currentGlobalID
mutableCloudIDToLyricsTokenMap
T@"NSMutableDictionary",R,N,V_mutableCloudIDToLyricsTokenMap
shouldRestart
TB,R,N,V_shouldRestart
totalItemCount
TI,R,N,V_totalItemCount
currentItemCount
TI,R,N,V_currentItemCount
processedItemCount
TI,R,N,V_processedItemCount
currentPaginationToken
T@"NSString",R,N,V_currentPaginationToken
cloudIDToLyricsTokenMap
T@"NSDictionary",R,N
Tq,R,N,V_currentCloudID
currentLyricsToken
T@"NSString",R,N,V_currentLyricsToken
T@"NSMutableDictionary",&,N,V_mutableCloudIDToLyricsTokenMap
%@.%@
config
T@"NSString",R,C,N,V_name
Tq,R,N,V_type
ICDBackgroundTaskManager - Polling setup - LoadBag
com.apple.itunescloud.ICDBackgroundTaskManager.periodic-poll-activity
v16@?0@"BaseRequestHandler"8
no-name
B24@?0@"_ICDBackgroundTask"8^B16
ICDBackgroundTaskManager.m
More tasks than expected have the same name
task.configuration.userIdentity.accountDSID != nil
currentTasks
T@"NSMutableSet",R,N,V_currentTasks
com.apple.itunescloudd.deferredPushUpdate.jalisco
%{public}@ - Handling music app removal
%{public}@ - Handling music app install
%{public}@ - Starting to enable cloud library, start initial import=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u
%{public}@ - Clearing last known locker account
%{public}@ - ICML is already enabled
%{public}@ - Not enabling cloud library. Could not get properties of %{public}@, error=%{public}@
%{public}@ - Starting to disable cloud library for reason=%d
%{public}@ - account with DSID (%lld) does not have ICML enabled
Removing media kind music from automatic downloads finished with error=%{public}@.
Could not get account for DSID=%lld - error=%{public}@. Not removing media kind music from automatic downloads
Could not get properties for user identify - error=%{public}@. Not removing media kind music from automatic downloads
%{public}@ - Updating Jalisco library for reason=%d
%{public}@ - Updating Jalisco library for reason=%d, Setting jaliscoNeedsUpdateForTokens=YES
%{public}@ - Will not update Jalisco library for reason=%d as the locker bit was not set.
%{public}@ - Will not update Jalisco library for reason=%d _jaliscoRequestHandler=%p
%{public}@ - Finished disablig cloud library for reason=%d
%{public}@ - isUpdatingCloudLibraryWithCompletion sagaUpdateInProgress=%{BOOL}u, sagaInitialImport=%{BOOL}u, jaliscoUpdateInProgress=%{BOOL}u, jaliscoInitialImport=%{BOOL}u, _havePendingSagaUpdate=%{BOOL}u
%{public}@ - Ignoring request for periodic poll because ICML is not enabled
%{public}@ - Not updating saga library as the handler is nil
%{public}@ - Not updating jalisco library as the handler is nil
%{public}@ - Unsupported request to add background operation (%p) for Jalisco library
%{public}@ - updateProgressForLibraryType for libraryType=%{public}@, progress=%f
%{public}@ - updateProgressForLibraryType for libraryType=%{public}@, jaliscoDatabaseVersion=%d, _havePendingSagaUpdate=%{BOOL}u, _didManuallyReloadCloudLibrary=%{BOOL}u, sagaUpdateProgress=%f, progress=%f
%{public}@ - ignoring importItemArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importScreenshotForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring importContainerArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeItemArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeScreenshotForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring deprioritizeContainerArtworkForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring createPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring publishPlaylistWithSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring removeItemsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring removePlaylistsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring uploadArtworkForPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addGeniusPlaylistWithPersistentID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStoreItemWithAdamID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addItemWithSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStoreItemWithOpaqueID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring addStorePlaylistWithGlobalID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setPlaylistProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setCloudAddToPlaylistBehavior as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setItemProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring setAlbumProperties as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updateItemPlayDataWithCompletionHandler as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updatePlaylistPlayDataWithCompletionHandler as we don't have a valid SagaRequestHandler
%{public}@ - ignoring updateSubscribedPlaylistsWithSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadGeniusItemsForSagaID as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadArtworkInfoForSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadArtworkInfoForContainerSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - ignoring loadScreenshotInfoForSagaIDs as we don't have a valid SagaRequestHandler
%{public}@ - last known error reason enabling iCML=%{public}@
%{public}@ - locker bit is not set, not returning last known error enabling iCML. cloudLibraryStateReason=%{public}@
%{public}@ - could not load user identity properties (error=%{public}@), not returning last known error enabling iCML
%{public}@ - ignoring importItemArtworkForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring importScreenshotForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring deprioritizeItemArtworkForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring deprioritizeScreenshotForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring disableJaliscoGeniusWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring removeLibraryWithCompletion as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring setItemProperties as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring setJaliscoGeniusCUID as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadArtworkInfoForPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadScreenshotInfoForPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadIsJaliscoGeniusSupportedWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadJaliscoGeniusLearnMoreURLWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadJaliscoGeniusCUIDWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadJaliscoGeniusOperationStatusWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring isMediaKindDisabledForJaliscoLibrary as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring enableJaliscoGeniusWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring updateJaliscoGeniusDataWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring cancelUpdateJaliscoGeniusDataWithCompletionHandler as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadBooksForStoreIDs as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring loadMissingArtwork as we don't have a valid JaliscoRequestHandler
%{public}@ - ignoring hideItemsWithPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler
%{public}@ includeMediaKindSong=%{BOOL}u on non standalone wOS platform
%{public}@ - user is a subscriber and locker bit is set. includeMediaKindSong=%{BOOL}u
%{public}@ - user is a subscriber and locker bit is NOT set. includeMediaKindSong=%{BOOL}u
%{public}@ - user is a NOT a subscriber. includeMediaKindSong=%{BOOL}u
%{public}@ Error %{public}@ loading subscription status. includeMediaKindSong=%{BOOL}u
%{public}@ starting update operation for %{public}@ library, initialImport=%{BOOL}u
%{public}@ finished update operation for %{public}@ library, response=%{public}@
%{public}@ - Showing system dialog for enable cloud library error code=%d
%{public}@ - scheduling initial cloud library update
%{public}@ - network reachability changed, _musicSubscriptionCheckStatus = %d. Reloading subscription status
%{public}@ - becomeActive
%{public}@ - initializing JaliscoRequestHandler
%{public}@ - we have a valid JaliscoRequestHandler.
%{public}@ - Start observing subscription status changed notification
%{public}@ - becomeInactiveWithDeauthentication, deauthentication=%{BOOL}u, _isHandlerActive=%{BOOL}u
%{public}@ - Finished removing content taste items with error=%{public}@
%{public}@ - Starting to deauthenticate Jalisco library
%{public}@ - Deauthenticating Jalisco library finished with error=%{public}@
%{public}@ - Starting to deauthenticate Saga library
%{public}@ - Deauthenticating Saga library finished with error=%{public}@
%{public}@ - finished deauthenticating
Updating Jalisco Library with reason=%d
Finished updating Jalisco Library with reason=%d, error=%{public}@
Updating Saga Library with reason=%d
Finished updating Saga Library with reason=%d, error=%{public}@
%{public}@ - Updating last known active locker account from %lld to %lld
%{public}@ - Store account ID was removed, deauthenticating if allowed.
%{public}@ - becomeInactiveWithDeauthentication failed [cancelling operations failed] error=%{public}@
%{public}@ - Removing allArtistImagesMapCacheFile due to account change
%{public}@ - Removing purchase history due to account change
%{public}@ - Ignoring native music app check on platforms that support multiple libraries
%{public}@ - Ignoring native music app check on traditional wOS
%{public}@ - Handling subscription status change notification
%{public}@ - Subscription change notification received for another account [no action to take] - handlerDSID=%@ - notificationDSID=%@
%{public}@ - Starting operation to refresh subscription status.
%{public}@ - Not refreshing subscription status. isActiveLocker=%{BOOL}u, loading user identity properties finished with error=%{public}@
%{public}@ - Not refreshing subscription status. isActiveAccount=%{BOOL}u, isActiveLocker=%{BOOL}u, loading user identity properties finished with error=%{public}@
%{public}@ - We already have a pending subscription status check operation.
%{public}@ - Will retry getting subscription status in %f seconds for reason %d.
%{public}@ - Not reloading subscription status as the handler is not active.
%{public}@ - Will retry getting subscription status in %f seconds for reason %d, _subscriptionStatusFailureCount=%ld
%{public}@ Fetched library DAAP configuration: %{public}@
%{public}@ - Scheduling retry to update cloud libary on %{public}@ (failureCount=%lu, retryDelaySeconds=%lu)
%{public}@ - retrying to enable cloud library for reason=%d
%{public}@ - NOT retrying to update cloud library for reason=%d as the handler is not active
%{public}@ - shouldTreatSubscriptionStatusAsExpired is set. Will force subscription status to be expired
%{public}@ - reloading subscription status. Current status=%d, reason=%d
%{public}@ - shouldTreatSubscriptionStatusCheckAsIncomplete is set (_subscriptionStatusFailureCount=%ld). Will force subscription status check to fail with error
%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@
%{public}@ - _musicSubscriptionCheckStatus=%d, subscribedToAppleMusic=%{BOOL}u, subscribedToiTunesMatch=%{BOOL}u, setting userRequestedSubscriptionHidden to 0
%{public}@ - subscription status has changed (old=%d, new=%d)
%{public}@ - subscription status has not changed (status=%d)
%{public}@ - We already have a pending enable ICML operation.
%{public}@ - Will retry enabling iCML in %f seconds.
%{public}@ - Starting retry operation to enable ICML.
%{public}@ - Could not get properties for current user identity - error=%{public}@., _autoEnableFailureCount=%ld
%{public}@ - Finished loading user identity properties with error=%{public}@. account is active=%{BOOL}u. Not loading iCML
%{public}@ - NOT retrying to enable cloud library for reason=%d as the handler is not active
%{public}@ - Checking if ICML can be enabled. includeLocalContentCheck=%{BOOL}u
%{public}@ - DSID (%lld) is already the active locker account
%{public}@ - Cannot enable ICML as the DSID (%lld) is invalid
%{public}@ - Cannot enable ICML as the user manually disabled it
%{public}@ - Error (%{public}@ determining if user manually disabled iCML. Will schedule a retry.
%{public}@ - Cannot enable ICML as there are local destructive changes
%{public}@ - Can conditionally enable ICML as DSID (%lld) is a preexisting store acount
%{public}@ - currentSagaDatabaseVersion=%d, wasRestoredFromCloudBackup=%{BOOL}u
%{public}@ - Active locker account is different from previous locker account - shouldMergeWithCloudLibrary=%d
%{public}@ - Active locker account is the same as previous locker account - shouldMergeWithCloudLibrary=%d
%{public}@ - Found mergePreference on the active locker account - shouldMerge=%d.
%{public}@ - Updating merge preference from %{BOOL}u to %{BOOL}u
%{public}@ - Clearing TroveID and CUID, setting merge preference to %{BOOL}u
%{public}@ - Will not adjust merge preference.
%{public}@ - previousAccountID=%lld, activeAccountID=%lld, lastKnownActiveLockerAccountID=%lld, currentSagaDatabaseVersion=%d, accountIDWasAdded=%{BOOL}u, accountIDWasChanged=%{BOOL}u
%{public}@ - No changes to process
%{public}@ - Locker bit set, but the account is not active. Enqueuing a SagaDeauth
%{public}@ - Device is already registered with CUID and TroveID
%{public}@ - Initializing SagaRequestHander ....
%{public}@ - We have a valid SagaRequestHander (%p)....
%{public}@ - Enqueuing SagaDeauth as device registration failed.
%{public}@ - No pending changes to handle. Ignoring reason=%d
%{public}@ - Not enabling ICML (status = %d)
%{public}@ - Will schedule a retry to enable ICML (status = %d)
%{public}@ -  enabling ICML (status = %d)
%{public}@ - Not enabling ICML for reason = %d, status = %d
%{public}@ - Trying to enable cloud library for reason=%d
%{public}@ - Native music app is NOT installed. Not enabling Cloud Music Library
%{public}@ - isActiveLockerAccount=%{BOOL}u, subscriptionStatus=%d. Disabling CloudLibrary as the user is no longer a subscriber
%{public}@ - New account [enabling iCML if possible]
%{public}@ - Preparing to enable Cloud Music Library for reason=%d
%{public}@ - Skipping initial import on non standalone watch for reason=%d
%{public}@ - Not enabling iCML on unsupported platform %{public}@
%{public}@ - Platform %{public}@ doesn't support automatically enabling cloud library
%{public}@ - Error %{public}@ loading user identity properties.
%{public}@ - Enqueueing CloudAuthenticateOperation shouldMerge:%d, allowNoisyPrompt:%{BOOL}u
%{public}@ - Authentication finished for %{public}@ with error=%{public}@, status=%d, authFailureCode=%{public}@
%{public}@ - We already have a pending authentication operation. Will not authenticate again.
%{public}@ - We already have a pending deauthentication operation (isHandlerDeactivating=%{BOOL}u, _deauthOperationCount=%d). Will not deauthenticate again.
%{public}@ - Running DisableCloudLibraryOperation deletingDatabase:%{BOOL}u, disableActiveLockerAccount:%{BOOL}u, removeSourcePurchaseHistory=%{BOOL}u, isHandlerDeactivating=%{BOOL}u, _deauthOperationCount=%d
%{public}@ - Cancelling all Jalisco operations.
%{public}@ - Cancelling all Saga operations.
%{public}@ - No valid SagaRequestHandler - not cancelling pending SagaLibrary operations.
%{public}@ - locker bit is set on the account, creating SagaRequestHandler
%{public}@ - locker bit is not set on the account and we have a valid SagaRequestHandler. Removing it now ....
%{public}@ - ignoring store did change notification
%{public}@ - Reload media purchase history
%{public}@ - not reloading media purchase history. jaliscoDatabaseVersion=%d, _jaliscoRequestHandler=%p
%{public}@ - not reloading media purchase history by adding kind=%d, _jaliscoRequestHandler=%p
%{public}@ - performing initial saga update
%{public}@ - not performing initial saga import. sagaDatabaseVersion=%d, _sagaRequestHandler=%p
%{public}@ - Posting JALISCO_UPDATE_IN_PROGRESS_CHANGED for libraryType=%{public}@
%{public}@ - Posting SAGA_UPDATE_IN_PROGRESS_CHANGED for libraryType=%{public}@
%{public}@ - Finished reloading media purchase history by adding kind=%d for reason=%d with error=%{public}@, _didManuallyReloadCloudLibrary=%{BOOL}u
%{public}@ - Finished reloading saga library for reason=%d with error=%{public}@
%{public}@ - Will schedule a retry for status=%d, failureCode=%d
Sending set item properties request <%{public}@: %p method=%{public}@ action=%{public}@> for purchase history id: %llu properties: %{public}@
<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>
JaliscoSetItemPropertyOperation failed with error: %{public}@
Not running JaliscoDeauthenticateOperation on wOS platform
Removing purchase history tracks
Clearing purchase history database revision (%ld)
No purchase history database revision, skipping deauthenticate and clean up.
Cancelling any outstanding jalisco track downloads.
Translated parent persistent-id %lld to cloud-id %lu
Failed to find parent cloud-id for persistent-id %lld
Updating playlist with persistent-id %lld, setting cloud-id to %llu
Triggering playlist artwork upload in case this playlist has user artwork.
Requesting library update because the response contained update-required flag
Skipping library update because the response did not contain update-required flag
Playlist with pid = %lld is not in the database, skipping save to cloud library.
Loading Chapter Artwork with power assertion: %{public}@
Fetching chapter artwork (purchase history ID = %lld, chapter time = %lld): %{public}@
Loading Chapter Artwork Complete, releasing power assertion: %{public}@
ICDDefaults %p - knownActiveAccountDSID: %@
ICDDefaults %p - setKnownAccountDSIDs: %@
ICDDefaults %p - setKnownActiveAccountDSID: %@
ICDDefaults %p - pendingBackgroundTasksData: %@
ICDDefaults %p - setPendingBackgroundTasksData: %@
BaseRequestHandler %p - Deleting handler %p - class=%{public}@ dsid=%{public}@
Migrating to version %ld, from userVersion=%ld, sagaDatabaseRevision=%ld, jaliscoDatabaseRevision=%ld
Current user version: %ld
Setting current user version: %ld
Skipping migration and setting user version to latest: %ld
-[CloudServer _migrateFromUserVersion0to348294]
-[CloudServer _migrateFromUserVersion348294to348295]
-[CloudServer _migrateFromUserVersion348295to366559]
-[CloudServer _migrateFromUserVersion366559to370000]
-[CloudServer _migrateFromUserVersion370000to370100]
Deleting ML database
Removing play data plists
-[CloudServer _migrateFromUserVersion370100to370200]
resetting jalisco and saga revisions to zero
RemoveSource error: %{public}@
updating track with location '%{public}@' to store_item_id=%lld
failed to update track with location '%{public}@'
-[CloudServer _migrateFromUserVersion370200to370300]
-[CloudServer _migrateFromUserVersion370300to370400]
-[CloudServer _migrateFromUserVersion370400to380000]
-[CloudServer _migrateFromUserVersion380000to380010]
-[CloudServer _migrateFromUserVersion380010to380020]
-[CloudServer _migrateFromUserVersion380020to380030]
-[CloudServer _migrateFromUserVersion380030to380040]
Cloud library is enabled, repairing subscribed containers is_src_remote (if any)
Cloud library is NOT enabled, deleting subscribed containers (if any)
-[CloudServer _migrateFromUserVersion380040to380050]
-[CloudServer _migrateFromUserVersion380050to380060]
-[CloudServer _migrateFromUserVersion380060to380070]
-[CloudServer _migrateFromUserVersion380070to380080]
-[CloudServer _migrateFromUserVersion380080to380090]
Detected %lld invalid artist artwork tokens, clearing last artist image import date...
-[CloudServer _migrateFromUserVersion380090to380100]
-[CloudServer _migrateFromUserVersion3800100to380110]
-[CloudServer _migrateFromUserVersion3800110to380115]
Failed to purge artwork_token for movies and tv shows. err=%{public}@
-[CloudServer _migrateFromUserVersion3800110to380120]
-[CloudServer _migrateFromUserVersion3800120to380130]
-[CloudServer _migrateFromUserVersion380130to380140]
-[CloudServer _migrateFromUserVersion380140to380150]
resetting jalisco revisions to zero to force a reset sync
-[CloudServer _migrateFromUserVersion380150to380160]
resetting jalisco revision to zero to force a reset sync
-[CloudServer _migrateFromUserVersion380160to380170]
-[CloudServer _migrateFromUserVersion380170to390000]
Found Automatic Downloads Key in user defaults
Could not get active store account, error=%{public}@
Automatic Downloads Key does not exist in user defaults
-[CloudServer _migrateFromUserVersion390000to390010]
Automatic Downloads is enabled on the active account. Setting appropriate user defaults
-[CloudServer _migrateFromUserVersion390010to390020]
-[CloudServer _migrateFromUserVersion390020to390030]
Resetting sagaOnDiskDatabaseRevision to 1 to update missing cloud_universal_library_id
Error (%{public}@) unarchiving enableICMLConfigData
Found autoEnableICMLConfig=%{public}@
No configuration to determine if iCML should be enabled/disabled
%{public}@ Failed to retrieve library response for artist analysis. err=%{public}@
%{public}@ Analyzing %lu user library artists.
%{public}@ MLModel inputs: unique days with added content: %{public}@
%{public}@ MLModel inputs: number of unique albums: %{public}@
%{public}@ MLModel inputs: cumulative song play count: %{public}@
%{public}@ MLModel inputs: number of days since last play: %{public}@
%{public}@ MLModel inputs: average plays per item added: %{public}@
No DAAP code found for container property: %{public}@
Skipping update for playlist cloud ID: %lu -- time since update = %.fs (min refresh = %llus)
Found %lu subscribed playlists to update for periodic poll.
SagaSubscribedPlaylistUpdater import succeeded: %d
SagaSubscribedPlaylistUpdater import failed: %{public}@
Received non-200 HTTP code: %lu, skipping import.
No playlists to update (based on min refresh interval).
Received distributed notification: %{public}@
Received darwin notification %{public}@
Received unsupported darwin notification %{public}@
Received telephony center notification %{public}@
First unlock has occured
Subscription status has changed - updating client status
handleLibraryAuthServiceTokenDidChangeNotification - posting dynamite state change
Cloud authentication status has changed - updating client status
%{public}@ - Starting authentication - Device registered with CUID and TroveID=%{BOOL}u, canPerformLibraryUpload=%{BOOL}u, requiresDeviceRegistration=%{BOOL}u, enableReason=%d
%{public}@ - Not authenticating ... unable to get properties for specified account
%{public}@ - Not authenticating ... account is not active. DSID=%@
%{public}@ - ICML was manually disabled by the user. Not retrying CloudAuthenticateOperation for reason=%d
%{public}@ - Setting account %{public}@ as the active locker account, dsid=%{public}@, _mergeToCloudLibraryPreference=%d, enableReason=%d finished with error=%{public}@
%{public}@ - shouldTreatSagaAddComputerCallAsFailed is set. Will force SagaAddComputer call to fail.
%{public}@ - Completed authentication successfully [ICCloudClientIsAuthenticatedDidChangeNotification posted]
%{public}@: Registered new cloud service status observer with token: %{public}@.
%{public}@: Tried to remove unknown cloud service status observer with token: %{public}@. Ignoring.
%{public}@: Removed cloud service status observer with token: %{public}@.
%{public}@: %{public}@ originatingClientConnection = %{public}@.
%{public}@: Failed to retrieve bundle identifier of the requesting application from the audit_token_t; instead, using bundle identifier from %{public}@, i.e. %{public}@.
%{public}@: Accepted new client connection: %{public}@.
%{public}@: Client has %{public}@ entitlement. No need to enforce privacy acknowledgement for cloud service capabilities request.
%{public}@: Client connection was interrupted: %{public}@.
%{public}@: Client connection was invalidated: %{public}@.
%{public}@: Found capabilities request operation for severed client connection %{public}@: %{public}@. Cancelling that operation.
%{public}@: Found observation token for severed client connection %{public}@: %{public}@. Forcibly ending observing cloud service status for this observation token.
%{public}@: Handling %{public}@.
%{public}@: Bag was updated: %{public}@.
%{public}@: Subscription status was updated: %{public}@.
%{public}@: Beginning to observe cloud service status.
%{public}@: Stopped observing cloud service status.
%{public}@: Refreshing storefront country code.
%{public}@: No bag was present on the bag monitor.
%{public}@: Requesting bag directly.
%{public}@: Failed to fetch bag with error: %{public}@.
%{public}@: Refreshing storefront identifier.
%{public}@: Encountered error getting properties for active account: %{public}@.
%{public}@: %{public}@
%{public}@: Could not find storefront country code from bag %{public}@; error: %{public}@.
%{public}@: Storefront country code did not change. Skipping invoking observation handlers.
%{public}@: Storefront country code did change: "%{public}@". About to notify %llu observer%s.
%{public}@: Skipping notification of updated storefront country code for client with observation token %{public}@: client connection %{public}@ is not allowed to access restricted information.
%{public}@: Notifying client with observation token %{public}@ of updated storefront country code: "%{public}@".
%{public}@: Failed to obtain remote proxy to notify of updated storefront country code; error = %{public}@.
%{public}@: Could not find valid cloud service capabilities; error: %{public}@.
%{public}@: Cloud service capabilities did not change. Skipping invoking observation handlers.
%{public}@: Cloud service capabilities did change: %{public}@. About to notify %llu observer%s.
%{public}@: Skipping notification of updated cloud service capabilities for client with observation token %{public}@: client connection %{public}@ is not allowed to access capabilities.
%{public}@: Notifying client with observation token %{public}@ of updated cloud service capabilities: %{public}@.
%{public}@: Failed to obtain remote proxy to notify of updated cloud service capabilities; error = %{public}@.
%{public}@: Could not find valid storefront identifier; error: %{public}@.
%{public}@: Storefront identifier did not change. Skipping invoking observation handlers.
%{public}@: Storefront identifier did change: "%{public}@". About to notify %llu observer%s.
%{public}@: Skipping notification of updated storefront identifier for client with observation token %{public}@: client connection %{public}@ is not allowed to access restricted information.
%{public}@: Notifying client with observation token %{public}@ of updated storefront identifier: "%{public}@".
%{public}@: Failed to obtain remote proxy to notify of updated storefront identifier; error = %{public}@.
ICDNetworkAvailabilityService %p - XPC connection from %{public}@[%d]
Sending items request <%{public}@: %p method=%{public}@ action=%{public}@> on connection: <%{public}@ %p>
Fetching tracks failed with error: %{public}@
Received playlist globalID: %{public}@ shareURL: %{public}@
SagaPublishPlaylistOperation failed with error: %{public}@
Playlist with cloud id = %llu is not in the database, skipping publish request.
Received user notification authorization response. Granted: %d %{public}@
User notification did change settings
DownPinning collection classes %{public}@ and configuration %{public}@
DownPinning %{public}@
RePinning collection classes %{public}@ and configuration %{public}@
RePinning %{public}@
Clearing status for %{public}@
Not performing artwork info operation because power is required
Not performing artwork info operation because of elevated thermal levels
%{public}@ Skipping update because privacy acknowledgement is required
[%{public}@] Loading artwork info for %lu cloud IDs
Determined %lu operations with artworkType=%{public}@ need to resolve artwork URLs before executing.
Sending bulk artwork info request for %lu %{public}@ IDs.
Received %lu artwork info dictionaries for %{public}@ IDs.
Failed to resolve artwork URL for %{public}@ ID: %llu
No store account for source_type %ld, canceling %lu requests
Playlist with pid = %lld is not in the database, skipping add to cloud library.
Starting server...
Stopped server.
Setting options for phone.
Setting options for apple tv.
Setting options for audio accessory.
Setting options for watch.
Setting options for watch. isMediaSyncingSupported=%{BOOL}u, prohibitLibraryUpload=%{BOOL}u, prohibitArtworkPrefetch =%{BOOL}u, supportsAutomaticEnablingiCloudMusicLibrary=%{BOOL}u
Setting options for phone/ipad/ipod.
Could not get ICML state reason, error=%{public}@
Not allowing automatic enabling of iCML notEnabledInBackup=%{BOOL}u, unsupportedDisposition=%{BOOL}u
isEnablingICMLDestructive=%{BOOL}u, cloudLibraryStateReason=%{public}@, supportsAutomaticEnablingiCloudMusicLibrary=%d
Allowing automatic enabling of iCML, isEnablingICMLDestructive=%{BOOL}u
ICDServer %p - Attempt to retrieve handler for unsupported configuration [returning nil] - Configuration dsid=%@
ICDServer %p - Unable to get an anonymous listener for %{public}@[%ld] - This usually indicates an attempt to access itunescloudd without the proper entitlements.
ICDServer %p - No XPC listener [unknown service]
ICDServer %p - Looking up XPC Listener [%{public}@]
ICDServer %p - Retrieved XPC Listener [%{public}@]
ICDServer %p - Refusing XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld]: not ready.
ICDServer %p - Setting XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
ICDServer %p - Refusing XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
ICDServer %p - Ignoring notification [Account change - Not ready]
ICDServer %p - Processing notification [Account change]
ICDServer %p - Ignoring notification [Buddy done - Not ready]
ICDServer %p - Processing notification [Buddy done]
ICDServer %p - Ignoring notification [Import finished - Not ready]
ICDServer %p - Processing notification [Import finished]
Received library import did finish notification, triggering artist hero update.
ICDServer %p - Ignoring notification [Cellular restriction - Not ready]
ICDServer %p - Processing notification [Cellular restriction]
[CellularDataEnabled] An active account exists, updating Purchase History...
[CellularDataEnabled] An active locker account exists, updating iCloud Music Library...
ICDServer %p - Ignoring notification [Cloud authentication - Not ready]
ICDServer %p - Processing notification [Cloud authentication]
ICDServer %p - Ignoring notification [Allows explicit content - Not ready]
ICDServer %p - Processing notification [Allows explicit content]
ICDServer %p - Ignoring notification [Subscription status - Not ready]
ICDServer %p - Processing notification [Subscription status]
ICDServer %p - Ignoring notification [Auth service token - Not ready]
ICDServer %p - Processing notification [Auth service token]
ICDServer %p - Ignoring notification [Family deletion event - Not ready]
ICDServer %p - Processing notification [Family deletion event]
ICDServer %p - Ignoring notification [Application install/removal - Not ready]
ICDServer %p - Processing notification [Application install/removal]
ICDServer %p - Ignoring notification [First unlock - Not ready]
ICDServer %p - Processing notification [First unlock]
ICDServer %p - Ignoring notification [Phone number changed - Not ready]
ICDServer %p - Processing notification [Phone number changed]
Private listening changed, notifying assistant.
ICDServer %p - _startAncillaryServices... 1
ICDServer %p - _startAncillaryServices... 2
ICDServer %p - _startAncillaryServices... 3
ICDServer %p - _startAncillaryServices... 4
ICDServer %p - _startAncillaryServices... 5
ICDServer %p - _startAncillaryServices... 6
ICDServer %p - _startAncillaryServices... 7
ICDServer %p - _startAncillaryServices... 8
ICDServer %p - _startAncillaryServices... 9
ICDServer %p - _startAncillaryServices... 10
ICDServer %p - _startAncillaryServices... 11
ICDServer %p - _startAncillaryServices... 12
ICDServer %p - _startAncillaryServices... 13
ICDServer %p - _startAncillaryServices... 14
ICDServer %p - _startAncillaryServices... 15
ICDServer %p - _startAncillaryServices... 16
ICDServer %p - Can complete startup sequence [%{BOOL}u] - deviceUnlocked=%{public}u - deviceSetupComplete=%{public}u
ICDServer %p - _completeStartupSequenceIfNeeded - Nothing to do [blocked]
ICDServer %p - _completeStartupSequenceIfNeeded - Nothing to do [startup sequence completed]
ICDServer %p - Completing server setup ....
ICDServer %p - Server Setup - 1. Synchronized user identity store...
ICDServer %p - Server Setup - 2. Services initialized...
ICDServer %p - Server Setup - 3. Services started...
ICDServer %p - Server Setup - 4. Migration completed...
ICDServer %p - Server Setup - 5. Explicit content settings updated...
ICDServer %p - Server Setup - 6. Airplay settings updated...
ICDServer %p - Server Setup - 7. Handlers setup...
ICDServer %p - Server Setup - 8. Subscription keys retrieved...
ICDServer %p - Server setup completed
ICDServer %p - _migrateToLatestUserVersion - Migrating library [dsid=%@]
ICDServer %p - _updateServerAllowsExplicitContentSettingAutomatically - No action [No active configuration]
updating explicit content lastUploadedValue %{public}@, setting allowsExplicitContent %d, automatic %d
Could not update parental settings to %d - error %{public}@.
parental control settings have not changed - allowExplicitContent %d
User Identity %{public}@ has subscription status %ld.
ICDServer %p - _ensureSubscriptionInformationIsUpToDateForConfiguration - No action [No active configuration]
ICDServer %p - _ensureMusicSubscriptionKeysAreAvailableForConfiguration - No action [No active configuration]
Ensuring that we have off-line music subscription keys if the user has a slot
No account properties - skipping subscription key refresh. err=%{public}@
Failed to get current subscription key status - skipping key refresh. err=%{public}@
Offline subscription keys already present for DSID %llu - skipping key refresh
Failed to obtain subscription status - skipping key refresh. err=%{public}@
Subscription not enabled - skipping key refresh
Subscription refresh complete. err=%{public}@, status=%{public}@
Handling app install changed notification - apps=%{public}@, registration=%{public}@
Updating resolution cache file
Failed to update URL resolution cache file. err=%{public}@
Successfully updated URL resolution cache file
ICDServer %p - _handleFamilyContentDeletionEvent - No action [No active configuration]
Received %llu account pairs for family content removal.
Family content removal (purchaser = %lld, downloader = %lld, family = %lld
Watchdog fired, operation queue contents: %{public}@
Watchdog fired, releasing power assertion: %{public}@
Last artist update time: %{time_t}zd
Elapsed time since last artist hero image update: %g, minimum: %g
Artist hero image update already in progress: scheduling a maximum of one additional update.
Updating all artist hero images...
Skipping update, not enough time has passed since last update.
Searching for artists added since database revision %lld
Found %lu artist(s) and %lu album artist(s) to update
A follow-up artist hero image update already exists, merging artist persistent ids to update.
A follow-up artist hero image update already exists, it should include the specific artist persistent ids.
Artist hero image update already in progress: scheduling a follow-up update.
The artist hero image update that is already in progress will already update all of the requests artists, skipping a follow-up update.
Found zero new artists and zero new album artists to update
Database revision is the same as the last update.
Taking power assertion: %{public}@
Releasing power assertion: %{public}@
Using polling frequency from bag: %ld
Failed to get polling frequency from the URL bag, using default polling frequency: %ld
Failed to receive response for URL bag, using default polling frequency: %ld
Running second artist hero image update
Cancelled after loading URL bag
'an-batch-size' was not in the bag, defaulting to batches of %lld.
'update-interval-seconds' was not in the bag, defaulting to %lld seconds.
Updating artist store IDs using the bulk artist name lookup service (batch size = %@)
Updating artist store IDs using the allArtistImagesMap
Updating artist store IDs using the single artist name lookup service
Failed to load URL bag, skipping artist hero image update
Failed to resolve bulk artist name lookup URL from the library match rules bag, skipping artist hero image upate.
Batching %lu library match requests in to chunks of size %ld.
Bulk library match results: %{public}@
Setting store_id '%lld' for item_artist with name: '%{public}@'
Setting store_id '%lld' for album_artist with name: '%{public}@'
Failed to receive response for bulk artist id look up request after %d seconds, cancelling request
Noticed cancel flag while looking up artist store ids by name, stopping...
Cancelled after looking up artist store ids by name.
Cancelled after getting latest all artist image map data.
Cancelled after updating album_artist store ids.
allArtistImagesMap.plist (null) needsUpdate: %d
allArtistImagesMap.plist (count = %lu) needsUpdate: %d
Attempting to fetch latest all-artist-images-map
all-artist-images-map-url: %{public}@
Received all artist images map with %lu artist ids.
Failed to fetch all artist images map [HTTP %ld] - error: %{public}@
Failed to receive response for all-artist-images-map after %d seconds, cancelling request
Failed to get 'all-artist-images-map-url'. Cannot fetch map at this time.
Noticed cancel flag while updating artist store ids, stopping...
Cancelled after updating artist store ids.
Noticed cancel flag while updating album_artist store ids, stopping...
Failed to resolve an artist name lookup URL from the library match rules bag, skipping artist hero image upate.
Library match results for '%{public}@': %{public}@
Failed to receive response for artist id look up request after %d seconds, cancelling request
Cancelled after gathering artist artwork tokens.
Batching %lu lookup requests in to chunks of size %d.
Sending lookup request: %p
Waiting for lookup request: %p
Received response for lookup request: %p
Failed to receive response for lookup request: %p after %d seconds
Noticed cancel flag while looking up artist hero image URLs, stopping...
Cancelled after looking up artist hero image URLs.
Cancelled while processing artist artwork tokens.
Setting artist hero image artwork_token '%{public}@' for item_artist with pid: %lld (name = %{public}@)
Setting artist hero image artwork_token '%{public}@' for album_artist with pid: %lld (name = %{public}@)
Cancelled after updating artist artwork tokens.
Found %lu artist artwork tokens to download
Creating request for artwork token: %{public}@
Import request for artwork token: %{public}@ failed with error: %{public}@
Found hero image on disk for artwork token: %{public}@, attempting to import into database...
Inserted artist hero image for artwork token: %{public}@
Noticed cancel flag while downloading artist hero images, stopping...
Cancelled after starting downloads for artist hero images.
Enqueued all artist hero images to download.
Updating artist hero images complete.
[Item Artist] Assigned store artist ID %lld to %{public}@
[Item Artist] No store artist id found for: '%{public}@'
[Album Artist] Assigned store artist ID %lld to %{public}@
[Album Artist] No store artist id found for: '%{public}@'
%{public}@ Adding operation %p (name=%{public}@) with priority %d
%{public}@ Adding background operation %p (name=%{public}@) with priority %d
operations count=%d, backgroundOperations count=%d
cloudServerOperations=%{public}@
%{public}@ - Supported media kinds=%{public}@, Disabled media kinds=%{public}@
%{public}@ - Media importer query filter set to: %{public}@
Cancelling %d downloads
ICDAccountManagerState %p - restoredStatedWithAccountStore: - Restoring from known accounts
ICDAccountManagerState %p - restoredStatedWithAccountStore: - Restoring from all accounts [no known accounts]
ICDAccountManagerState %p - stateForAccounts: active account is not manageable!
ICDAccountManagerState %p - stateForAccounts:baseConfiguration: - activeAccount=%@ - supportedAccounts=%@
ICDAccountManagerState %p - Saving - %@
ICDAccountManagerState %p - Supported configurations is active configuration - dsid=%@
ICDAccountManagerState %p - Supported configurations contains %lu configurations
Sending request for %{public}@ (retryTimeRemaining = %g seconds)
Received error loading %{public}@: %{public}@
Received non-zero status response loading %{public}@: Status=%ld responseURL: %{public}@
Retrying loading %{public}@ in %g seconds
Failed to load %{public}@ after %g seconds
CloudLibrary %p - No active account, returning nil library (which will suspend operation queue).
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusSuccess.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusFailed.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusPermanentlyFailed.
CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusCancelled.
CloudLibrary %p - OPERATION FAILED TO SET STATUS %{public}@ %p
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusSuccess.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusFailed.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusPermanentlyFailed.
CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusCancelled.
CloudLibrary %p - BACKGROUND OPERATION FAILED TO SET STATUS %{public}@ %p
%{public}@ %p -  decreasePriorityForAllOperations
%{public}@ %p -  Decreasing priority of one of our operations [%{public}@ %p]
%{public}@ %p -  increasePriorityForAllOperations
%{public}@ %p -  Increasing priority of one of our operations [%{public}@ %p]
%{public}@ %p - cancelAllOperations
%{public}@ %p - Cancelling one of our operations [%{public}@ %p]
CloudLibrary %p - Performing pending changes with coordinator: <%{public}@ %p>
CloudLibrary %p - Enqueuing failed operation to the pending changes coordinator: <%{public}@: %p>
CloudLibrary %p - Enqueuing unserviceable operation to the pending changes coordinator: <%{public}@: %p>
CloudLibrary %p - Calling completion block on non-executing, cancelled operation: <%{public}@: %p>
CloudLibrary %p - Connected to library
CloudLibrary %p - Loading URL bag...
CloudLibrary %p - failed to load url bag. err=%{public}@
CloudLibrary %p - Library Bag: %{public}@
CloudLibrary %p - Determined server URL: %{public}@
CloudLibrary %p - No library URL found, invalidating the URL bag and retrying...
CloudLibrary %p - No library URL found.
CloudLibrary %p - No URL bag found
CloudLibrary %p - Service disabled in URL bag.
CloudLibrary %p - Connected to library successfully.
CloudLibrary %p - Failed to connect to library with error: %{public}@
%{public}@ %p -  _executeBlockForAllOperations
%{public}@ %p -  Calling block on one of our operations [%{public}@ %p]
%{public}@ %p -  Ignoring operation which is not ours [%{public}@ %p]
%{public}@ %p -  Calling block on one of our background operations [%{public}@ %p]
%{public}@ %p -  Ignoring background operation which is not ours [%{public}@ %p]
Set item properties response status code: %lu
Set item properties received no response
Set item properties response failed with error: %{public}@
%{public}@ - dealloc
%{public}@ - cancelPendingChangesWithCompletion: - Library=%@ - PendingChangesCoordinator:%@
%{public}@ - cancelOperationsWithCompletion: - Starting...
%{public}@ - cancelOperationsWithCompletion: - Done!
%{public}@ - cancelOperations: - Starting...
%{public}@ - cancelOperations: - _updateCloudLibraryOperation
%{public}@ - cancelOperations: - Done!
%{public}@ - decreasePriorityForAllOperations:
%{public}@ - increasePriorityForAllOperations:
%{public}@ - Updating item play data
%{public}@ - Fetched library DAAP configuration: %{public}@
%{public}@ - Updating playlist play data
%{public}@ = Fetched library DAAP configuration: %{public}@
%{public}@ - Created timer to update item play data
%{public}@ - Uploading item play data since %{time}zd
%{public}@ - Upload item play data operation failed with status: %{public}@
%{public}@ - Skipping item play data upload (minimum time interval not satisfied (%.0f < %.0f)
%{public}@ - Postponing item play data timer due to continued updates
%{public}@ - Created timer to update playlist play data
%{public}@ - Uploading playlist play data since %{time}zd
%{public}@ - Upload playlist play data operation failed with status: %{public}@
%{public}@ - Skipping playlist play data upload (minimum time interval not satisfied (%.0f < %.0f)
%{public}@ - Postponing playlist play data timer due to continued updates
%{public}@ - Creating cloud playlist with initial properties: %{public}@
%{public}@ - ... with cloud tracks: %{public}@
%{public}@ - Creating cloud playlist for %{public}@ with initial properties: %{public}@
%{public}@ - Creating Genius playlist (pid = %lld) with seed ID: %lld
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld, referral albumAdamID = %lld)
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld, referral playlistGlobalID = %{public}@)
%{public}@ - Adding store item with adam ID: %lld to cloud playlist (pid = %lld)
%{public}@ - Adding item with saga ID: %llu to cloud playlist (pid = %lld)
%{public}@ - Adding store item with opaque ID: %{public}@ to cloud playlist (pid = %lld)
%{public}@ - Updating cloud playlist (pid = %lld), setting properties: %{public}@
%{public}@ - Publishing playlist with cloud id = %llu.
%{public}@ - Removing items with cloud ids = %{public}@
%{public}@ - Removing playlists with cloud ids = %{public}@
%{public}@ - Setting artwork on saga playlist (pid = %lld)
%{public}@ - Updating subscribed playlists (reason = %{public}@) with cloud ids = %{public}@
%{public}@ - Received request to add store item with adam ID: %lld (referral albumAdamID = %lld)
%{public}@ - Received request to add store item with adam ID: %lld (referral playlistGlobalID = %{public}@)
%{public}@ - Received request to add store item with adam ID: %lld
%{public}@ - Received request to add store item with opaque ID: %{public}@ from %{public}@
%{public}@ - Received request to add store playlist with global ID: %{public}@
%{public}@ - Setting cloud add to playlist behavior to: %{public}@
%{public}@ - Setting album properties %{public}@ on items with album persistent ID: %lld
%{public}@ - No active locker account, skipping import item artwork for saga ID: %llu
%{public}@ - No active locker account, skipping import screenshot for saga ID: %llu
%{public}@ - No active locker account, skipping import container artwork for saga ID: %llu
%{public}@ - Got load artwork info request for saga IDs: %{public}@
%{public}@ - No WiFi connection, skipping artwork info load.
%{public}@ - Got load artwork info request for container saga IDs: %{public}@
No saga artwork_token for screenshot item with persistent-id = %lld
%{public}@ - Get genius items for saga ID: %llu
%{public}@ - Updating item properties for sagaID %lld. properties=%{public}@
%{public}@ - Issuing immediate property change: %{public}@
%{public}@ - Device is plugged in - checking for artwork to download
%{public}@ - Device was unplugged from power - cancelling artwork downloads
%{public}@ - Received request to update cloud library (requestReason = %{public}@), allowNoisyAuthPrompt=%{BOOL}u, isExplicitUserAction=%{BOOL}u
%{public}@ - No WiFi connection, skipping update (requestReason = %{public}@)
%{public}@ - Rescheduling push notification triggered update when WiFi becomes available.
%{public}@ - Skipping update because privacy acknowledgement is required
%{public}@ - Could not initialize saga library
%{public}@ - Could not load user identity properties. error=%{public}@
%{public}@ - Locker bit is not set on the account. Will not updateLibrary for reason=%d, allowNoisyAuthPrompt=%{BOOL}u
%{public}@ - CloudIds are different. oldValue=%lld, currentValue=%lld
%{public}@ - Cloud library update already in progress, attaching completion handler.
%{public}@ - Enqueuing update cloud library operation (requestReason = %{public}@)
%{public}@ - Enqueuing cloud library reset update.
%{public}@ - Posting Saga update in progress changed notification
No subscribed playlist saga ids to update.
Error updating global playlists: %{public}@
iCloud Music Library is enabled: skipping Jalisco Genius data update
Last date of Jalisco Genius import: %@
Elapsed time since last Jalisco Genius import: %g
Skipping Jalisco Genius update, time since last update: %g, min: %g
Using Jalisco Genius CUID: %{public}@
Found %lu items to upload for Jalisco Genius.
No items to upload for Jalisco Genius.
Determine Jalisco Genius upload URL response: %{public}@
Jalisco Genius metadata upload response: %{public}@
Making initial check for Jalisco Genius results request in %ld milliseconds
Jalisco Genius metadata upload response failed with status code: %ld error: %{public}@
Determine result URLs response: %@
Finished downloading Jalisco Genius sim data
Encountered error downloading Jalisco Genius sim data: %{public}@. NSURLSessionDownloadTask: %{public}@
Finished downloading Jalisco Genius additional fields data
Encountered error downloading Jalisco Genius additional fields data: %{public}@. NSURLSessionDownloadTask: %{public}@
Waiting for Jalisco Genius results to download
Failed to download Jalisco Genius sim data with error: %{public}@
Failed to move Jalisco Genius sim data with error: %{public}@
Failed to download Jalisco Genius additional fields data with error: %{public}@
Failed to move Jalisco Genius additional fields data with error: %{public}@
Cleared non Jalisco Genius data
Importing Jalisco Genius sim data for %li tracks
Error: Unable to process Jalisco Genius sim data at index %li (code: %i)
Jalisco Genius sim data import ended.
Error: Unable to create cursor into Jalisco Genius sim file at %{public}@
Error: Unable to open Jalisco Genius sim file at %{public}@
Found %ld tracks to assign global ids for Jalisco Genius
Track: %{public}@
Got global id %lli for persistent id %lli
Warning: No track for persistent id %lli
Error: Unable to open Jalisco Genius additional fields file at %{public}@
Jalisco Genius additional fields data import ended.
Noting date of Jalisco Genius import: %@
CloudService %p - [BecomeActive::Cloud] - Unable to service cloud library request - error=%{public}@.
[BecomeActive::Cloud] Could not get properties for user identity: %{public}@ - error=%{public}@.
[BecomeActive::Cloud] Last library update time: %{time_t}zd
[BecomeActive::Cloud] Elapsed time since last library update: %g, minimum: %g
[BecomeActive::Cloud] Last subscribed containers update time: %{time_t}zd
[BecomeActive::Cloud] Elapsed time since last subscribed containers update: %g, minimum: %g
[BecomeActive::Cloud] Subscribed containers periodic update disabled via bag.
[BecomeActive::Cloud] Updating cloud library. databaseRevision=%u, allowNoisyAuthPrompts=%{BOOL}u, reason=%d
[BecomeActive::Cloud] Update saga library completed successfully, updating all subscribed containers...
[BecomeActive::Cloud] Update saga library completed successfully, skipped updating all subscribed containers. Updating all subscribed containers with no last_update now...
[BecomeActive::Cloud] Skipped cloud library update, updating all subscribed containers now...
[BecomeActive::Cloud] Skipped cloud library update and skipped updating all subscribed containers. Updating all subscribed containers with no last_update now...
CloudService %p - updateSagaLibraryWithReason (%d) - Unable to service request for purchases - error=%{public}@
CloudService %p - updateJaliscoLibraryWithReason - Unable to service request for purchases/reason=%d - error=%{public}@
CloudService %p - deauthenticateForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - setCloudAddToPlaylistBehavior (%d) - Unable to service request for purchases - error=%{public}@
CloudService %p - loadIsSagaUpdateInProgressForConfiguration: - Saga initial import: %{BOOL}u. Update in progress: %{BOOL}u
CloudService %p - loadIsSagaUpdateInProgressForConfiguration: - Unable to service cloud library request - error=%{public}@
CloudService %p - loadSagaUpdateProgressForConfiguration: - Saga update progress: %f
CloudService %p - loadSagaUpdateProgressForConfiguration: - Unable to service cloud library request - error=%{public}@
CloudService %p - importItemArtworkForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - importScreenshotForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - importContainerArtworkForSagaID (sagaID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - deprioritizeItemArtworkForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - deprioritizeScreenshotForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - deprioritizeContainerArtworkForSagaID (%llu) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadArtworkInfoForSagaIDs: - Sending saga artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadArtworkInfoForContainerSagaIDs: - Sending saga container artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForContainerSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadScreenshotInfoForSagaIDs: - Sending saga screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadScreenshotInfoForSagaIDs (%{public}@) - Unable to service cloud library request - error=%{public}@
CloudService %p - loadGeniusItemsForSagaID (%llu) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addGeniusPlaylistWithPersistentID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - createPlaylistWithPersistentID (%lld, properties=%{public}@): - Unable to service request for cloud library - error=%{public}@
CloudService %p - setPlaylistProperties (properties=%{public}@, forPlaylistPersistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - addStoreItemWithAdamIDToPlaylistWithPersistentID (adamID=%lld, persistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - addItemWithSagaID (sagaID=%lld, persistentID=%lld) - Unable to service request for purchases - error=%{public}@
CloudService %p - publishPlaylistWithSagaID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - removePlaylistsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - uploadArtworkForPlaylistWithPersistentID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - updateSubscribedPlaylistsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addStoreItemWithAdamID (%lld) - Unable to service request for cloud library - error=%{public}@
CloudService %p - addStorePlaylistWithGlobalID (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - removeItemsWithSagaIDs (%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - loadLastKnownEnableICMLErrorStatusForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - setItemProperties: (sagaID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - uploadCloudItemPropertiesForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - uploadCloudPlaylistPropertiesForConfiguration - Unable to service request for purchases - error=%{public}@
CloudService %p - setAlbumProperties: (albumID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - sdk_createPlaylistWithPersistentID (%lld, properties=%{public}@) - Unable to service request for cloud library - error=%{public}@
CloudService %p - sdk_addStoreItemWithOpaqueID: - Unable to service request for cloud library - error=%{public}@
CloudService %p - [BecomeActive::Jalisco] - Unable to service purchase request - error=%{public}@.
[BecomeActive::Jalisco] Last library update time: %{time_t}zd
[BecomeActive::Jalisco] Elapsed time since last library update: %g, minimum: %g
[BecomeActive::Jalisco] Periodic update on app focus disabled via bag.
[BecomeActive::Jalisco] Updating jalisco library...
CloudService %p - removeJaliscoLibraryForConfiguration - Unable to service purchase request - error=%{public}@
CloudService %p - isMediaKindDisabledForJaliscoLibrary: - Unable to service purchase request - error=%{public}@
CloudService %p - loadIsJaliscoGeniusSupportedForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - loadJaliscoGeniusLearnMoreURLForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - loadJaliscoGeniusCUIDForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - setJaliscoGeniusCUID Unable to service request for purchases - error=%{public}@
CloudService %p - enableJaliscoGeniusForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - updateJaliscoGeniusDataForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - cancelUpdateJaliscoGeniusDataForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - loadJaliscoGeniusOperationStatusForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - disableJaliscoGeniusForConfiguration Unable to service request for purchases - error=%{public}@
CloudService %p - loadIsJaliscoUpdateInProgressForConfiguration: - Jalisco initial import: %{BOOL}u. Update in progress: %{BOOL}u
CloudService %p - loadIsJaliscoUpdateInProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - loadSagaUpdateProgressForConfiguration: - Jalisco update progress: %f
CloudService %p - loadJaliscoUpdateProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - importItemArtworkForPurchaseHistoryID(%llu): - Unable to service purchase request - error=%{public}@
CloudService %p - importScreenshotForPurchaseHistoryID(%llu): - Unable to service purchase request - error=%{public}@
CloudService %p - deprioritizeItemArtworkForPurchaseHistoryID(%llu) - Unable to service purchase request - error=%{public}@
CloudService %p - deprioritizeScreenshotForPurchaseHistoryID(%llu) - Unable to service purchase request - error=%{public}@
CloudService %p - Sending purchase history artwork info: %{public}@
CloudService %p - loadArtworkInfoForPurchaseHistoryIDs (%{public}@) Unable to service request for purchases - error=%{public}@
CloudService %p - loadScreenshotInfoForPurchaseHistoryIDs: - Sending purchase history screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadScreenshotInfoForPurchaseHistoryIDs (%{public}@) Unable to service request for purchases - error=%{public}@
CloudService %p - loadBooksForStoreIDs: - Unable to process cloud request [missing DSID]
CloudService %p - loadBooksForStoreIDs %{public}@ - Unable to service request for purchases - error=%{public}@
CloudService %p - hideItemsWithPurchaseHistoryIDs: (purchaseHistoryIDs=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - setItemProperties: (purchaseHistoryID=%llu, properties=%{public}@) - Unable to service request for purchases - error=%{public}@
CloudService %p - deprioritizeArtistHeroImageForPersistentID: - Unable to service artist image request - error=%{public}@
CloudService %p - deprioritizeAlbumArtistHeroImageForPersistentID: - Unable to service artist image request - error=%{public}@
CloudService %p - updateArtistHeroImagesForConfiguration: - Unable to service artwork request - error=%{public}@
CloudService %p - updateArtistHeroImagesForConfiguration: - Received request to update artist hero images.
CloudService %p - updateArtistHeroImagesForConfiguration: - Skipping artist hero image update (unsupported device)
CloudService %p - %{public}@ - Unable to service artwork request - error=%{public}@
CloudService %p - importArtistHeroImageForPersistentID: - Skipping artist hero import (unsupported device) for persistentID: %lld
CloudService %p - Skipping album artist hero import (unsupported device) for persistentID: %lld
CloudService %p - %{public}@ - Unable to service subscription request - error=%{public}@
CloudService %p - deprioritizeSubscriptionItemArtworkForPersistentID: - Unable to service subscription request - error=%{public}@
CloudService %p - deprioritizeSubscriptionScreenshotForPersistentID: - Unable to service subscription request - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionItemPersistentIDs: - Unable to service subscription request - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionItemPersistentIDs: - Sending subscription item artwork info: %{public}@ - error=%{public}@
CloudService %p - loadScreenshotInfoForSubscriptionPersistentIDs: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadScreenshotInfoForSubscriptionPersistentIDs: - Sending subscription screenshot artwork info: %{public}@ - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionContainerPersistentIDs: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadArtworkInfoForSubscriptionContainerPersistentIDs: - Sending subscription container artwork info: %{public}@ - error=%{public}@
CloudService %p - loadIsUpdateInProgressForConfiguration: Saga [initial import: %{BOOL}u. Update in progress: %{BOOL}u], Jalisco [initial import: %{BOOL}u. Update in progress: %{BOOL}u]
CloudService %p - loadIsUpdateInProgressForConfiguration: - Unable to service purchase request - error=%{public}@
CloudService %p - loadUpdateProgressForConfiguration: - Unable to service purchase request - error=%{public}@
loadMissingArtworkForConfiguration: - Sending request to load missing artwork
CloudService %p - loadMissingArtworkForConfiguration: - Unable to service request for subscription - error=%{public}@
CloudService %p - loadMissingArtworkForConfiguration: - Unable to service request for purchases - error=%{public}@
CloudService %p - Starting to run a subscription status check
CloudService %p - loading subscription status finished with error=%{public}@, not enabling iCML with policy=%d 
CloudService %p - authenticateForConfiguration (startInitialImport=%{BOOL}u, enableCloudLibraryPolicy=%d, isExplicitUserAction=%{BOOL}u) - Unable to service request for cloud library - error=%{public}@
CloudService %p - disableCloudLibraryWithReason (%d) - Unable to service request for cloud library - error=%{public}@
CloudService %p - updatePinnedSubscribedPlaylistsWithConfiguration Unable to service request for cloud library - error=%{public}@
Sending request to update Cloud Library...
Can't update cloud library using current network - skipping
Update Match Library failed with status: %ld
Serializing body dictionary to plist: %{public}@
Compressing plist to path: %{public}@
Failed to serialize body dictionary to plist with error: %{public}@
failed to fetch bag. err=%{public}@
not creating request because url bag key '%{public}@' not found
%{public}@ Delivering response to remote client for request %@
%{public}@ Failed to obtain remote proxy to deliver subscription status response. error = %{public}@.
%{public}@ - Clearing library for %{public}@
%{public}@ - Clearing library which failed to connect
%{public}@ - Got update library request with reason %{public}@
%{public}@ - Purchase history import disabled via the preference
%{public}@ - No WiFi connection, skipping update (reason = %{public}@)
%{public}@ - Could not initialize jalisco library
%{public}@ - No account DSID - skipping update
%{public}@ - Updating media purchase history - Reason=%{public}@ - isInitialLoad=%{BOOL}u - prefetchArtwork=%{BOOL}u, _updateLibraryOperation=%p
%{public}@ - Library update finished.
%{public}@ - Update Jalisco library completed
%{public}@ - Importing artwork and screenshots if relevant [post library update]
%{public}@ - Posting Jalisco update in progress notification
%{public}@ - Update library operation in progress, attaching completion handler.
%{public}@ - Received request to hide purchaseHistoryIDs %{public}@
%{public}@ - Received request to update item with purchaseHistoryID %llu properties: %{public}@
%{public}@ - No active account, skipping import artwork for purchase history ID: %llu
%{public}@ - No active account, skipping import screenshot for purchase history ID: %llu
%{public}@ - Got load artwork info request for %lu purchase history IDs
%{public}@ - No WiFi connection, skipping artwork load.
No purchase history artwork_token for screenshot item with persistent-id = %lld
%{public}@ - Removing purchase history due to user action
%{public}@ - cancelOperationsWithCompletion
%{public}@ - decreasePriorityForAllOperations
%{public}@ - increasePriorityForAllOperations
%{public}@ - Failed to get account properties - DSID=%{public}@ err=%{public}@
%{public}@ - Reload media purchase history by adding media kind %d
%{public}@ - Reload media purchase history by removing media kind %d
%{public}@ - cancelAllOperationsAndWaitForOperationsToFinish - wait=%{BOOL}u
%{public}@ - cancelling %lu operations in genius update queue, _updateGeniusDataOperation=%p
%{public}@ - cancelling _updateLibraryOperation=%p
%{public}@ - Checking URL bag for Genius support...
%{public}@ - URL bag result, Genius supported: %d
%{public}@ - Loading Genius Learn More URL from bag...
%{public}@ - Genius Learn More URL: %{public}@
%{public}@ - Returning Genius CUID: %{public}@
%{public}@ - Setting Genius CUID to: %{public}@
%{public}@ - No WiFi connection, cannot enable Genius.
%{public}@ - No WiFi connection, skipping update of Genius data.
%{public}@ - JaliscoUpdateGeniusDataOperation cancelled.
%{public}@ - JaliscoUpdateGeniusDataOperation status: %{public}@
%{public}@ - Disabled Jalisco Genius...
%{public}@ - Starting new update Jalisco Genius operation...
%{public}@ - Update Jalisco Genius operation in progress, attaching completion handler.
%{public}@ - Update Jalisco Genius completed successfully
%{public}@ - Update Jalisco Genius completed with error: %{public}@
%{public}@ - Need Cloud CUID to update Jalisco Genius
Incoming XPC connection %{public}@ from %{public}@[%ld] for service %{public}@[%ld].
ICDAccountManagerStateChange %p - configurationChanged: NO [computation option driven]
ICDAccountManagerStateChange %p - Initial configuration [%@] -> Final configuration [%@]
ICDAccountManagerStateChange %p - supportedConfigurationsChanged: NO [computation option driven]
ICDAccountManagerStateChange %p - Initial configurations [%@] -> Final configurations [%@]
Sending opt-out for Jalisco Genius CUID: %{public}@
No Jalisco Genius CUID, skipping opt-out request.
Jalisco Genius opt-out request failed with non-2xx status code %ld
Jalisco Genius opt-out request failed with error: %{public}@
%{public}@ Beginning request for AMPMusicArtistNewContentResponse
%{public}@ failed to load bag. err=%{public}@
%{public}@ Executing request for AMPMusicArtistNewContentResponse
%{public}@ Failure to find bag key for artist recommendations url. Bag Key: %{public}@
%{public}@ Sync request failed. err=%{public}@
%{public}@ Sync request failed. Artist new content request returned no data %{public}@
%{public}@ failed to decode response object
Server requested restarting from initial items request, clearing previous pages and trying again...
Failed to remove obsolete items DAAP files with error: %@
Making items request with pagination token: %{public}@
Received non-200 response for items request, failing update from %u to %u
Update from %u to %u was cancelled
Failed to complete items request for update from %u to %u. err=%{public}@
Downloaded items response contains %u tracks -- overall progress = %.0f%% (%u/%u)
Import failed with error = %{public}@
Found %lu unavailable tracks to unlink with asset protection type = %d
Deleting assets with protection type = %d that are no longer cloud available: %{public}@
Failed to clear location for unavailable tracks with asset protection type = %d
Taking power assertion: com.apple.itunescloudd.SagaLoadLyricsOperation
Fetching lyrics for %ld tracks (batch size = %u)
[Bulk] Received %lu lyrics info dictionaries
[Bulk] Loading lyrics from URL '%{public}@'...
[Bulk] Error getting lyrics from %{public}@: %{public}@
[Bulk] Setting lyrics of length: %lu on track with saga ID %lld
[Bulk] No track found for saga ID %lld when attempting to set lyrics.
Releasing power assertion: com.apple.itunescloudd.SagaLoadLyricsOperation
Translated parent persistent-id %llu to cloud-id %llu
Failed to find parent cloud-id for persistent-id %llu
Updating playlist with cloud-id %u, setting trackList: %{public}@ properties: %{public}@
Playlist with pid = %lld does not have a cloud_id in the database, skipping save to cloud library.
No playlist saga ids to delete.
Sending delete request <%{public}@: %p method=%{public}@ action=%{public}@> for playlist saga ids: %{public}@
SagaRemovePlaylistOperation failed with error: %{public}@
%{public}@ content taste response for %{public}@ was written to %{public}@ with status=%{BOOL}u
%{public}@ Error %{public}@ creating content taste update directory
%{public}@ Got %lu content taste archives to remove with error %{public}@
%{public}@ Error %{public}@ removing archive at %{public}@
%{public}@ Cached content taste response at %{public}@ was deleted with status=%{BOOL}u, error=%{public}@ 
%{public}@ Could not get DSID for configuration=%p. error=%{public}@
%{public}@ Exception %{public}@ thrown while encoding archive
%{public}@ Exception %{public}@ thrown while decoding archive
Sending item property changes: %{public}@
Bulk set item properties response code: %lu
Bulk set item properties response with error: %{public}@
Play data update succeeded for track with persistent ID: %lld
%{public}@ Starting system service...
%{public}@ Stopping system service...
%{public}@ Forcing library recommendation analysis without a timer.
%{public}@ Scheduling periodic updates every %lld seconds
%{public}@ Failed to create NSData blob from filePath=%{public}@ err=%{public}@
%{public}@ Handle new AMPMusicArtistNewContentResponse from notification finished
%{public}@ Cache Directory URL is nil failed to clear cached recommendations data with path received: %{public}@
%{public}@ Cache Directory URL is nil failed to cache recommendations data with path received: %{public}@
%{public}@ Failed to write to disk the matched recommendations. err=%{public}@
%{public}@ Will not perform recommendations update. The user has disabled Apple Music.
%{public}@ Performing recommendations update on cellular network
%{public}@ User has opted out of artist and shows notifications; recommendations request is skipped.
%{public}@ Updating recommendations
%{public}@ Skipping update because we failed to load account properties. err=%{public}@
%{public}@ Skipping update because the user is not signed in
%{public}@ Skipping update because we failed to obtain the subscription status. err=%{public}@
%{public}@ Skipping update because the user is a subscriber
%{public}@ Library Recommendations Computation Finished
%{public}@ No response model from the server - skipping update
%{public}@ Received New Release Recommendations response, %lu new release albums, recoID: %@.
%{public}@ No recommendations found.
%{public}@ Matched recommendation already created for AdamID: %llu
%{public}@ Failed to remove message %{public}@, err=%{public}@
%{public}@ Removing stale messages for new recommendation update. Removed message: %{public}@
%{public}@ Attempting to create new recommendation message for AdamID: %llu
%{public}@ Beginning Affininity Analysis using MLModel.
%{public}@ No matched results found
%{public}@ Failed to compute scores. err=%{public}@
%{public}@ Found %lu new recommendations: %{public}@
%{public}@ Generated %lu matches, but zero results scored above the model score threshold.
%{public}@ Failed to fetch recommendations model. err=%{public}@
%{public}@ Failed to remove cached MLModel. err=%{public}@
%{public}@ failed to create cache directory structure err=%{public}@
%{public}@ Failed to remove expired message %{public}@
%{public}@ Removed expired message %{public}@
%{public}@ platform lookup failed. err=%@
%{public}@ Unable to create message. There is no store platform data for AdamID: %@
%{public}@ Creating application message for adamID %lld : %{public}@
%{public}@ Failed to serialize local notification data. err=%{public}@
%{public}@ Created new application message %{public}@ for adamID %lld
%{public}@ Failed to save application message %{public}@ for adamID %lld. err=%{public}@
%{public}@ Failed to import lookup responses into media library. err=%{public}@
%{public}@ Unable to retrieve message with identifier %{public}@. err=%{public}@
%{public}@ Unable to get message entries for identifier %{public}@. err=%{public}@
%{public}@ Unable to find priority message.
%{public}@ Unable to update opt-in message entry %{public}@.
%{public}@ Failed to create opt-in message %{public}@. err=%{public}@
%{public}@ Failed to save application message %{public}@. err=%{public}@
%{public}@ Failed to download resources for message %{public}@. err=%{public}@
%{public}@ Failed to remove message with identifier %{public}@. err=%{public}@
No item purchase history ids to delete.
Sending hide items request <%{public}@: %p method=%{public}@ action=%{public}@> for purchase history ids: %{public}@
JaliscoHideItemOperation failed with error: %{public}@
No DAAP code found for item property: %{public}@
Cannot import artwork without artwork token.
Cannot import artwork without an asset URL.
Cannot import artwork on the watch while its not plugged in
Already have original on disk, attempting to import into database...
Downloading artwork from '%{public}@'
Downloaded artwork successfully from '%{public}@'
Failed to download artwork with HTTP status code %lld (URL = %{public}@)
Failed to download artwork from '%{public}@' with error: %{public}@
failed to create image source for resizing image at '%{public}@'
failed to create image destination for resizing image at '%{public}@'
failed to finalize resized image at '%{public}@'
failed to resize image at '%{public}@'
%{public}@ starting ....
%{public}@ stopping ....
%{public}@ finished acquiring %lu play activity events for endpoint %{public}@ storeId %llu with error %{public}@
%{public}@ finished acquiring %lu play activity events for endpoint %{public}@ with error %{public}@
%{public}@ endpoint identifier cannot be nil when getting playactivity events
%{public}@ finished setting revision %llu, revisionVersionToken %{public}@ for endpoint %{public}@ with error %{public}@
%{public}@ endpoint identifier cannot be nil when setting revision
%{public}@ finished remvoving play activity events upto version %llu with error %{public}@
%{public}@ revision should be greater than 0 when removing play activity events
%{public}@ finished inserting %lu play activity events with error %{public}@
%{public}@ no play activity events to insert
%{public}@ completed %lu play activity events for sessionToken:%llu with error %{public}@
%{public}@ no play activity events to complete
%{public}@ connection from pid %i was interrupted
%{public}@ connection from pid %i was invalidated
%{public}@ pid %i is not entitled to connect to %s
%{public}@ connection from pid %i %s be accepted
%{public}@ starting operation for flush play activity events for endpoint %{public}@ pendingOperationCount %lld, nextFlushPlayActivityFireSyncInterval %f, _testNextFlushPlayActivityFireSyncInterval %f 
%{public}@ finished flushing play activity events for identifier %{public}@ error %{public}@
%{public}@ Have pending play activity events to flush
%{public}@ invalid endpoint identifier to flush play activity events
%{public}@ Responding to endpoint revision info changed notification, _flushOperationCount=%lld
%{public}@ Responding to play activity controller did record notification, _nextFlushPlayActivityFireSyncInterval=%f, _testNextFlushPlayActivityFireSyncInterval=%f
%{public}@ Found postFrequency %f from bag
%{public}@ Did not find postFrequency from bag using default value (%f)
%{public}@ No active user identity - using default value (%f) to update the criteria to flush play activity events
%{public}@ Creating new criteria to fire on %{public}@ with grace period till %{public}@ for endpoint %{public}@
%{public}@ Not creating a new criteria for flush play activity events nextFlushPlayActivityFireSyncInterval (%f), testNextFlushPlayActivityFireSyncInterval (%f)
%{public}@ Setting criteria to fire the next play activity event on %{public}@
%{public}@ updating current criteria to flush the next play activity event from %{public}@ to %{public}@
%{public}@ Found existing activity to flush play activity events on %{public}@
%{public}@ Loading next play activity flush event to fire on %{public}@
%{public}@ Loading default nextFlushPlayActivityFireSyncInterval to %f
%{public}@ starting xpc activity to flush play activity events for endpoint identifier %s
%{public}@ not starting xpc activity for invalid endpoint identifier
%{public}@ Unknown state
Sending Books ItemsRequest [<%{public}@: %p method=%{public}@ action=%{public}@>] on Connection: [%p]
Books ItemsRequest retrieved a response: <%{public}@: %p code=%ld, length=%{bytes}lu> -- Code: %d
Books ItemsRequest failed with error: %{public}@
%{public}@ connection from pid %i beginning for service com.apple.itunescloudd.tcchelper
%{public}@ connection from pid %i was interrupted for service com.apple.itunescloudd.tcchelper
%{public}@ connection from pid %i was invalidated for service com.apple.itunescloudd.tcchelper
Can not present dialog for renewing applications, parental controls active
User accepted to renew premissions for all expired bundle identifiers %{public}@
User rejected to renew premissions for all expired bundle identifiers, resetting for %{public}@
Failed to create a CFUserNotification to renew media library access for TCC expiration
Failed to revoke Music User Tokens for applications %{public}@ with error %{public}@.
Failed to fetch active account DSID; error: %{public}@.
Failed to fetch revokeMusicUserTokenURL as part of updating cookies; error: %{public}@.
CloudPendingChangesCoordinator %p - Creating new coordinator - path=%@
CloudPendingChangesCoordinator %p - addPendingChange: - path=%@
CloudPendingChangesCoordinator %p - processPendingChangesUsingLibrary - path=%@ - libraryIdentifier=%@
Processing %lu pending changes...
No pending changes to process.
%lu pending changes failed again, persisting for another time.
CloudPendingChangesCoordinator %p - removeAllPendingChangesWithCompletion - path=%@
CloudPendingChangesCoordinator %p - Retrieving pending changes - path=%@
Failed to decode pending changes. err=%{public}@
Failed to decode pending changes archived file with exception: %@
CloudPendingChangesCoordinator %p - Saving pending changes [%lu] - path=%@
Failed to encode pending changes. err=%{public}@
Device is already registered with CUID and TroveID
Failed to load url bag. err=%{public}@
Failed to register device because url bag is missing the 'cloud-add-computer' key
Sending request to register device
Failed to register device. err=%{public}@
Received response (length = %{bytes}lu)
Register device response: %{public}@
Successfully registered device (CUID: %{public}@, TroveID: %{public}@)
Updating mergeToICMLPreference to %d for activeLockerAccount
Invalid CloudLibraryStateReasonType (%d)
_CloudLibraryUtilitiesUpdateUserIdentityWithReason finished updating (cloudLibraryStateReason=%{public}@) for account [%{public}@] with error=%{public}@ in %f seconds
CloudLibraryUtilitiesUpdateAccountRemoveEnableICMLErrorReason finished updating (cloudLibraryStateReason=%{public}@) for %{public}@ with error=%{public}@ in %f seconds
Finished updating cloudLibraryStateReason=%{public}@ for %{public}@ with error=%{public}@ in %f seconds
Not updating account with disable iCML reason=%d. wasManuallyDisabled=%{BOOL}u, currentReason=%{public}@
migratorDisposition=%{public}@
preExistingStoreIdentifiers=%{public}@
Failed to load subscription status. error=%{public}@
Subscription is enabled
Account is not subscribed to iCloud Music Library.
Failed to load match status. error=%{public}@
Match is enabled
Account is not subscribed to iTunes Match.
Sending add item request <%{public}@: %p method=%{public}@ action=%{public}@> for opaqueID: %{public}@
SagaCloudSDKAddOperation failed with error: %{public}@
cloud-add permamently failed -- item limit exceeded
Adding opaqueID %{public}@ to playlist with persistent id %lld (cloud-id %u)
Playlist pid %lld: is_src_remote %d, distinguished_kind %d, created %{public}@
Sending cloud library opt-out for Cloud CUID: %{public}@ TroveID: %{public}@
No Cloud CUID or TroveID, skipping opt-out request.
Cloud library opt-out request failed with non-2xx status code %ld
Cloud library opt-out request failed with error: %{public}@
%{public}@ - Starting operation, deleteDB=%{BOOL}u, disableActiveLockerAccount=%{BOOL}u, removeSourcePurchaseHistoryForMusicTracks=%{BOOL}u
%{public}@ - Not running DisableCloudLibraryOperation on non standalone wOS platform
%{public}@ - DSID=%lld, isActiveLocker=%{BOOL}u
%{public}@ - Disabling active locker account: %lld
%{public}@ - Removing account %lld as the active locker account finished with error=%{public}@
%{public}@ - Not disabling active locker account: %lld, _disableActiveLockerAccount=%{BOOL}u, isActiveLocker=%{BOOL}u
%{public}@ - Posting notification [ICCloudClientIsAuthenticatedDidChangeNotification]
%{public}@ - Error (%{public}@) loading account properties. Not removing locker bit from the account
%{public}@ - Saga on disk revision: %ld
%{public}@ - Clearing cloud ID for %ld visible playlists.
%{public}@ - Removing %ld remote playlists.
%{public}@ - Removing %ld visible playlists.
%{public}@ - Removing %ld genius mixes.
%{public}@ - Removing saga tracks
%{public}@ - Clearing database revision (%ld)
%{public}@ - Clearing sync database properties to force reset sync.
%{public}@ - Posting cloud library availability did change notification (library became unavailable)
%{public}@ - Removing source purchase history for music and music videos
%{public}@ - Will remove source purchase history for %d tracks
%{public}@ - Finished removing tracks with source purchase history with status=%{BOOL}u, error=%{public}@
%{public}@ - Cancelling any outstanding saga track downloads.
%{public}@ - Clearing saga database properties.
%{public}@ - Deleting database for deauthentication request
%{public}@ - Completed database changes.
%{public}@ - Completed operation.
ICDHandlersManager %p - setupHandlersWithAccountStateChange
ICDHandlersManager %p - setupHandlers - No account change on startup [restore - [%@]]
ICDHandlersManager %p - setupHandlers - Account change on startup [restore - [%@] -> [%@]]
ICDHandlersManager %p - setupHandlers - Parallel MU setup - State Change=%@
ICDHandlersManager %p - setupHandlers - Single & Sequential MU setups - State Change=%@
ICDHandlersManager %p - updateHandlersWithAccountStateChange
ICDHandlersManager %p - No changes detected - %@
ICDHandlersManager %p - Change detected: %@
ICDHandlersManager %p - Supported configurations changed
ICDHandlersManager %p - Active account changed
ICDHandlersManager %p - Deauthenticating handlers for unsupported accounts
ICDHandlersManager %p - Unable to deactivate handler with deauthentication [deleting it anyway] - class=%{public}@ dsid=%{public}@ error=%{public}@
ICDHandlersManager %p - Enabling handlers for supported accounts
ICDHandlersManager %p - Change processing done [no configurations]
ICDHandlersManager %p - Handler transition: [%p] -> [%p] - class=%{public}@
ICDHandlersManager %p - Activating handler %p - class=%{public}@ dsid=%{public}@
ICDHandlersManager %p - Deactivating handler %p - class=%{public}@ dsid=%{public}@
ICDHandlersManager %p - Unable to deactivate handler - class=%{public}@ dsid=%{public}@ error=%{public}@
ICDHandlersManager %p - Handler is no longer active - class=%{public}@ dsid=%{public}@
Sending request: <%{public}@: %p method=%{public}@ action=%{public}@> to URL: %{public}@
Request headers: %{public}@
Downloading response to: %{public}@
Failed to send request to %{public}@. err=%{public}@
Failed to write response data to %{public}@. err=%{public}@
Received request %p response: <%{public}@: %p code=%ld, length=%{bytes}lu>
Forcing authentication request due to 401 error on request: <%{public}@: %p method=%{public}@ action=%{public}@>
Presenting daily authentication request due to 401 error on request: <%{public}@: %p method=%{public}@ action=%{public}@>
Skipping authentication request due to 401 error for sandbox-only account
Suppressed authentication dialog for 401 error
Response: (HTTP 403, DMAP 403) - Request forbidden.
Response: (HTTP 403, DMAP %d) - Cloud DAAP Subscription Lapsed.
Response: (HTTP 403, DMAP %d) - Cloud DAAP Client Expired (client DAAP version is less than the minimum version supported by the server).
Response: (HTTP 403, DMAP %d) - Cloud DAAP Item Limit Exceeded (no additional items may be added to the library).
Response: (HTTP 403, DMAP %d) - Cloud DAAP Temporary Disconnect Requested.
Will retry request in %lu seconds
Response: (HTTP 403, DMAP %lu) - Unknown code.
Presenting one-time forced authentication request due to 403 error
Skipping one-time forced authentication due to 403 error for sandbox-only account
Suppressed authentication dialog for 403 error
Unhandled Response: (HTTP %lu)
Parsed response data as DMAP error: %{public}@
Unhandled Response: (HTTP %lu)
Raw response data: %{public}@
Received no response for request %p, error %{public}@
Request timed out: %{public}@
Unable to connect, current state: %ld
No library bag key. Failed to determine database ID.
Failed to fetch bag. err=%{public}@
Cloud database: %{public}@ (DatabaseID = %u)
Failed to load database ID, bag library: %{public}@
Playlist with pid = %lld is not in the database, skipping upload of playlist artwork to cloud library.
Playlist with pid = %lld does not have a cloud_id in the database, skipping upload of playlist artwork to cloud library.
Playlist with pid = %lld does not have user set playlist artwork in the database, skipping upload of playlist artwork to cloud library.
SagaUploadPlaylistArtworkOperation failed -- No artwork exists at: %{public}@
SagaUploadPlaylistArtworkOperation failed -- Artwork is zero bytes at: %{public}@
SagaUploadPlaylistArtworkOperation failed -- Missing DSID
SagaUploadPlaylistArtworkOperation failed -- Missing one required parameter: CUID (%{public}@) / TroveID (%{public}@)
SagaUploadPlaylistArtworkOperation cancelled -- After preparing to initiate artwork upload
Failed to get downloadRequestsURL
Failed to get uploadResponsesURL
Backing off before sending downloadRequestsRequest for %u ms
SagaUploadPlaylistArtworkOperation cancelled -- After initiating artwork upload
Received cloudID that does not match the one we initiated the asset upload for: %llu
Work item did not include upload-info and response-data, failing upload
SagaUploadPlaylistArtworkOperation cancelled -- After downloading work items
Uploading artwork asset using info: %{public}@
Artwork upload failed with error: %{public}@
Backing off before sending uploadResponsesRequest for %u ms
Backing off before sending second downloadRequestsRequest for %u ms
Download request phase 2 did not have all-work-completed=true: %{public}@
Received unknown response for download request phase 2: %{public}@
Received http %ld response when uploading artwork asset.
Unknown required client generated header: %{public}@
uploadTask failed: %{public}@. %{public}@
Not enough information to upload artwork asset.
Received an error loading response for %{public}@: %{public}@
Received response with error: Status-%ld when loading URL: %{public}@
Retrying loading %{public}@ URL in %ld milliseconds
Failed to load %{public}@ URL after %g seconds
failed to fetch bag key '%{public}@. err=%{public}@
Compressing items to upload to path: %{public}@
%{public}@ - Cancelling update...
%{public}@ - Query Filter: %{public}@
%{public}@ - Server database revision: %u
%{public}@ Skipping initial import on non standalone wOS platform
%{public}@ - Received error when doing an update request: %{public}@
%{public}@ - On-disk database revision: %u
%{public}@ - Importer: <%{public}@ %p>
%{public}@ - <%{public}@ %p> required: %gs to process
%{public}@ - On-disk database revision is the same as the server revision, skipping update...
%{public}@ - No database revision to update to.
%{public}@ - No library for import.
Error serializing state capture: %{public}@
%{public}@ - JaliscoNeedsUpdateForTokens is YES, forcing a full token refresh.
%{public}@ - Supported media kinds are different, forcing a full token refresh. lastSupportedMediaKinds=%{public}@, currentSupportedMediaKinds=%{public}@
%{public}@ - Import failed with error = %{public}@
%{public}@ - Active account is nil, yet there are subscription tracks in the database... removing source now.
%{public}@ - Remove source failed with error: %{public}@
No subscription artwork_token for item with persistent-id = %lld
%{public}@ - Received %lu artwork info lookup dictionaries for lookup operation in  %{public}@ IDs.
%{public}@ - Failed to fetch artwork info lookup in %{public}@ ID: %llu
[%{public}@] Sending cloud-add request <%{public}@: %p method=%{public}@ action=%{public}@>
[%{public}@] failed with error: %{public}@
Unable to create cloud-add request, skipping...
Operation permanently failed, attempting to remove pending library content...
Cloud-add request for adam ID = %lld
Track with cloud-id %lld is already in the library, no updates needed...
Updating track with persistent-id %lld, setting cloud-id to %lld
Found %lu adam ids that didn't map to a track without a cloud-id, attempting with cloud-id now...
Found cloud-id already in library: %lld
The server returned cloud-ids that are not in the database, but should be: %{public}@
Updating in_my_library for cloud-add success.
Updating in_my_library for cloud-add failure.
Cloud-add request for playlist global ID = %{public}@
Updating playlist with persistent-id %lld, setting cloud-id to %lld
Deleted pending playlist with global id: %{public}@
Failed to delete pending playlist with global id: %{public}@
Could not find a pending playlist to delete with global id: %{public}@
[SagaCloudAddItemToPlaylistOperation] Adding adam-id %lld to playlist with persistent id %lld (cloud-id %u)
[SagaCloudAddItemToPlaylistOperation] Playlist pid %lld: is_src_remote %d, distinguished_kind %d, created %{time}zd
Cloud-add request for adam ID = %lld / container_pid = %lld
[%{public}@] Found %lu track(s) to update in_my_library (based on album store id)...
[%{public}@] Found %lu track(s) to update in_my_library...
[%{public}@] Updated in_my_library for track with persistent ID %lld
[%{public}@] Failed to update in_my_library for track with persistent ID %lld with error: %{public}@
Automatic Downloads are %{BOOL}u.
Could not get account for DSID=%lld. Automatic Downloads are %{BOOL}u
Could not get active account. Treating automatic downloads as disabled
Boosting priority of artwork download (identifier = '%{public}@' type = %{public}@ source = %{public}@)
Decreasing priority of artwork download (identifier = '%{public}@' type = %{public}@ source = %{public}@)
%{public}@ %s operations in coordination with media downloads
%{public}@: Operation was cancelled upon beginning execution. Aborting.
%{public}@: Request is already finished. Skipping running completion logic a second time.
%{public}@: %{public}@.
%{public}@: Encountered error: %{public}@.
%{public}@: Did complete privacy prompt with status: %{public}@.
%{public}@ received new token '%{public}@'
Push notification came from alternate environment, dropping notification from topic "%{public}@": %{public}@
Received push notification on topic "%{public}@": %{public}@
Ignoring push notification for an account that is not the active account. accountDSID=%lld, activeAccountDSID=%lld
Unknown push topic '%{public}@'
%{public}@ Network reachability changed to available - updating push registration if needed
%{public}@ Updating push notification registration
%{public}@ No APNS token available - skipping registration for now
%{public}@ Finished push registration
%{public}@ We already have an operation enqueued to handle push registration
%{public}@ Creating new APNS connection
%{public}@ Failed to fetch bag configuration. error=%{public}@
%{public}@ Registering for push notifications. environment=%{public}@
%{public}@ Updating push registration for configuration %{public}@
%{public}@ Failed to get properties for user identity %{public}@. err=%{public}@
%{public}@ Not registering for push notifications because privacy acknowledgement is required for media
%{public}@ Push notification registration up to date for configuration %{public}@
%{public}@ Registering updated push token %{public}@
%{public}@ Finished registering push token. err=%{public}@, statusCode=%d
%{public}@ Registering updated media types: %{public}@
%{public}@ Finished registering push token. err=%{public}@, statusCode=%{public}ld
%{public}@ received accounts changed notification - updating push notifications
%{public}@ Received saga push notification with no DSID - using active account. userInfo=%{public}@
%{public}@ Ignoring saga push message because we failed to load account properties. err=%{public}@
%{public}@ Ignoring saga push message because the account no longer has icml enabled
%{public}@ Ignoring saga push message for an inactive account
%{public}@ Received unhandled saga push action. userInfo=%{public}@
%{public}@ Received jalisco push notification with no DSID - using active account. userInfo=%{public}@
%{public}@ Ignoring jalisco push message because we failed to load account properties. err=%{public}@
%{public}@ Ignoring jalisco push message for an inactive account
Received update request to media types: %{public}@
Ignoring push notification since it did not contain any supported media types
%{public}@ Received unhandled jalisco push action. userInfo=%{public}@
Unknown fory-you module identifier %d
%{public}@ Received unsupported store push notification - ignoring. userInfo=%{public}@
%{public}@ No aps payload - ignoring push %{public}@
%{public}@Received legacy banner sync payload version - ignoring push %{public}@
%{public}@Received inApp messages push - syncing now
%{public}@Failed to process incoming sync push message. err=%{public}@
%{public}@Received unsupported in-app sync payload version - ignoring push %{public}@
Warning: Invalid response data (code: %08x, length: %lu, encodedLength: %lu)
Unhandled code in response: %c%c%c%c
Login session ID: %lu
Unhandled code in login response: %c%c%c%c
Server revision number: %d
Unhandled code in update response: %c%c%c%c
Unhandled code in authorized account token response: %c%c%c%c
Unhandled code in bulk cloud artwork info response: %c%c%c%c
Unhandled code in bulk cloud lyrics info response: %c%c%c%c
Unhandled code in cloud artwork info response: %c%c%c%c
Unhandled code in control interfaces response: %c%c%c%c
Unhandled code in control prompt response: %c%c%c%c
Unhandled code in deleted item ID listing response: %c%c%c%c
Unhandled code in dictionary collection: %c%c%c%c
Unhandled code in editing command response: %c%c%c%c
Authorized DSIDs revision code: %d
Returned count: %d
Unhandled code in items response: %c%c%c%c
Unhandled code in listing collection response: %c%c%c%c
Unhandled code in browse listing response: %c%c%c%c
Unhandled code in item ID array response: %c%c%c%c
Unhandled code in play status response: %c%c%c%c
Unhandled code in item response: %c%c%c%c (%u bytes long)
%{public}@ Received IDS message %lu:'%{public}s' from ID %{public}@
%{public}@ Successfully sent response message; responseMessageIdentifier = %{public}@.
%{public}@ Failed to send response message with error = %{public}@.
%{public}@ Received IDS message of unknown type %lu:'%{public}s' from ID %{public}@
%{public}@ No client identifier or version was specified in the ICAppleMusicAPITokenRequest instance. Falling back to default client identifier for daemon: %{public}@/%{public}@.
%{public}@ Performing token request %{public}@ and %{public}@.
%{public}@ Reporting completion for token request %{public}@ with response: %{public}@.
%{public}@ Encountered error trying to request Developer Token: %{public}@.
%{public}@ Successfully retrieved Developer Token.
%{public}@ Encountered error trying to request Music User Token: %{public}@.
%{public}@ Started IDS service with name %{public}@.
%{public}@ Stopped IDS service with name %{public}@.
Job Fired: SagaDeferredPushUpate (satisfied = %d)
Saga deferred push update failed with error %{public}@, trying again in an hour.
Saga deferred push update job not satisfied, trying again in an hour.
Job Fired: JaliscoMediaPeriodicPoll (satisfied = %d)
Jalisco media periodic poll update failed with error %{public}@, trying again tomorrow.
Jalisco media periodic poll update job was not satisfied, trying again tomorrow.
Job Fired: JaliscoMediaDeferredPushUpate (satisfied = %d)
Jalisco media deferred push update failed with error %{public}@, trying again in an hour.
Jalisco media deferred push update job was not satisfied, trying again in an hour.
No handler for BTA job named: %{public}s
%{public}@ - Updating cloud library operation (reason = %{public}@), isInitialImport=%{BOOL}u, isExplicitUserAction=%{BOOL}u
%{public}@ - Skipping initial import on non standalone wOS platform
%{public}@ - Preparing for initial library update...
%{public}@ - Failed to register device, bailing on initial library update
%{public}@ - Cancelled after registering device
%{public}@ - self.uploadResponseStatus=%d, treating as a hard failure
%{public}@ - self.uploadResponseStatus=%d, treating as a temporary failure
%{public}@ - Cancelled after uploading library metadata
%{public}@ - Cancelled after preparing library for cloud import
%{public}@ - finished with status=%d, failureReason=%{public}@
%{public}@ - Skipping _uploadLibrary because com.apple.itunescloudd:DisableLibraryUpload is set to YES
%{public}@ - Setting "should-upload" to true because MLCloudLibraryPrefersToMerge is set to YES
%{public}@ - Setting "should-upload" to true because com.apple.itunescloudd:ForceLibraryUnification is set to YES
%{public}@ - Found %lu songs to upload from query: %{public}@
%{public}@ - Error creating updateRequest.
%{public}@ - Sending upload library request: <%{public}@ %p>
%{public}@ - Got upload library response: <%{public}@ %p>
%{public}@ - Upload library response body: %{public}@
%{public}@ - Determined upload URL: %{public}@
%{public}@ - Failed to open file for writing library upload metadata plist with error: %{public}@
%{public}@ - Writing library upload metadata to plist at: %{public}@
%{public}@ - Found %lu playlists to upload from query: %{public}@
%{public}@ - Found zero playlists to upload.
%{public}@ - Determined results URL: %{public}@
%{public}@ - Saved results plist to: %{public}@
%{public}@ - Received empty response when getting match results.
%{public}@ - Importing cloud-ids failed with error: %{public}@
%{public}@ - Failed to import cloud-id mapping.
%{public}@ - Received non-200 response when getting match results: %{public}@ error: %{public}@
%{public}@ - Failed to determined results URL
%{public}@ - Received non-200 response when uploading library: %{public}@ error: %{public}@
%{public}@ - Failed to determined upload URL, skipping upload
%{public}@ - Removing %lu items that do not have a cloud id.
%{public}@ - Removing %lu playlists that do not have a cloud id.
%{public}@ - Server response indicates the subscription has lapsed
%{public}@ - Update response contained add to playlist behavior: %{public}@
%{public}@ - Received error when doing a library update request: %{public}@
%{public}@ - Failed to get a non-zero server database revision.
%{public}@ - On-disk database revision is the same as the server database revision, but force update is TRUE.
%{public}@ - On-disk database revision is the same as the server database revision, skipping update.
%{public}@ - shouldTreatInitialSagaImportAsFailed is set. Will force initial import to fail.
%{public}@ - Setting initial user version: %lli
%{public}@ - Posting cloud library availability did change notification (library became available)
%{public}@ - Triggering post-unification playlist artwork upload for playlist persistentID: %lld
%{public}@ - Error importing cloud library payload. Will treat as permanent failure
%{public}@ - Determine result URLs response: %{public}@
%{public}@ - Failed to determine result URLs with server status code: %ld response: %{public}@
%{public}@ - Failed to determine result URLs with unknown error: %{public}@
%{public}@ - Clearing temporary item cloud ids.
%{public}@ - Clearing temporary container cloud ids.
%{public}@ - Uploading is not supported, no temporary cloud ids to clear.
ICDAccountManager %p - init - Unable to retrieve accounts [empty accounts for restoration fallback] - error=%{public}@
ICDAccountManager %p - init - _state=%@
ICDAccountManager %p - Unable to update state [No state change built]
ICDAccountManager %p - No account changes detected - %@
ICDAccountManager %p - No state changes detected - %@
ICDAccountManager %p - Unable to compute state change [Error retrieving store accounts] - error=%{public}@
%{public}@: Skipping content tast update because privacy acknowledgement is required
%{public}@ invalidating cached response
%{public}@ preparing cached response with date %{public}@, revisionID %llu
[%{public}@] finished with response %{public}@, error %{public}@, responseErrorCode %ld
[%{public}@] Error getting sync url
[%{public}@] Error %{public}@ getting bag for active user
[%{public}@] Could not get DSID. error=%{public}@
%{public}@ prepared %{public}@ content taste update items with expiration date %{public}@, revisionID %llu, isCached %d from server response
Updating content taste for %lu items
Removing [Count:(%lu), items:(%@)] non media items from import list
processing tracks with pendingItemCount: %lu, currentBatchCount: %lu for property: %@
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ will be imported to include subscription data source
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ has a storeSagaID: %lld and will not be updated
Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
Track with storeItemID: %lld will be imported
Updated liked state to: %lld for track with persistenID:%lld
Error updating liked state to: %lld for track with persistenID:%lld
processing albums with pendingItemCount: %lu, currentBatchCount: %lu
Album with albumStoreID: %lld, persistenID: %lld will be imported to include subscription data source
Album with storeItemId: %lld, albumPid: %lld, has storeSagaID: %lld and will not be updated
Album with storeItemId: %lld, albumPid: %lld, liked_state: %lld is imported and has the correct liked state
Album with storeItemID: %lld will be imported
Updated liked_state to:%lld for album with albumPid:%lld
Error updating liked_state to:%lld for album with albumPid:%lld
updated [tracks:(%lu) albums:(%lu)] new items to import[count:(%lu) items:(%@)]
Error importing %lu tracks to the library. %@
Imported %lu mediaItems for %lu storeAdamIds
Not updating liked_state for track with persistentID: %lld, storeAdamID: %lld as it has a valid storeSagaID: %lld
StoreAdamIds (%@) are marked as non-importable and will not be retried
Error updating StoreAdamIds (%@) as non-importable
Finished updating media taste for tracks/albums in %f seconds
Updating content taste for %lu global playlists
processing playlists with pendingplayListCount: %lu, currentBatchCount: %lu
Container with PlaylistGlobalId: %@, persistentID: %lld, liked_state: %lld is imported and has the correct liked state
Updated liked_state to:%lld for playlist with playlistID:%lld
Error updating liked_state to:%lld for playlist with playlistID:%lld
Playlist Import [Count:(%lu) - Ids:(%@)]
Error %{public}@ adding global playlists
global playlist %{public}@ was not imported
Finished updating media taste for global playlists in %f seconds
Entity with persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
Entity with persistenID: %lld is imported and liked state updated from: %lld to: %lld for property: %@
Entity with persistenID: %lld is imported and liked state could not be updated from: %lld to: %lld for property: %@
Updating liked state for entity with persistenID: %lld of type %@ is not supported
Sending container property changes: %{public}@
Bulk set containers properties response code: %lu
Bulk set containers properties failed with error: %{public}@
Play data update succeeded for container with persistent ID: %lld
Updating using connection: <%{public}@ %p>
Setting initial user version: %lli
Sending request %p to set add to playlist behavior to %{public}@
%p received response status code: %lu
%{public}@: Cancelling %{public}@.
%{public}@: Bypassing enforcement of privacy acknowledgement.
%{public}@: Operation was cancelled right before enqueuing privacy prompt operation: %{public}@. Aborting.
%{public}@: Performing %{public}@.
%{public}@: %{public}@ Underlying error: %{public}@.
%{public}@: Requesting bag using %{public}@.
%{public}@: Did complete bag request. Encountered error: %{public}@.
%{public}@: Did complete bag request. Received bag %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@).
%{public}@: Requesting properties for %{public}@.
%{public}@: Did complete user identity properties request. Encountered error: %{public}@.
%{public}@: Did complete user identity properties request.
%{public}@: Requesting subscription status using %{public}@.
%{public}@: Did complete %{public}@. Encountered error: %{public}@.
%{public}@: Did complete %{public}@. Received subscription status response %{public}@.
%{public}@: Did complete request with error: %{public}@.
%{public}@: Did complete request; capabilities: %{public}@.
%{public}@ Music app is installed - starting a content taste update operation
%{public}@ Music app is removed - cancelling %lu content taste update operations, clearing %ld retry items
%{public}@ updating content taste for media items
%{public}@ Could not get DSID for configuration=%p, error=%{public}@
%{public}@ Removed %{public}@ pending content taste items for DSID=%lld
%{public}@ Music app is not installed - not running content taste update operation for item %d, id %lld
%{public}@ Cannot update content taste for item type %d with storeId=%lld, configuration=%{public}@
%{public}@ Music app is not installed - not running content taste update operation for playlist %{public}@
%{public}@ Cannot update content taste for item with globalPlaylistID=%{public}@, configuration=%{public}@
%{public}@ got connection request from pid %i
%{public}@ pid %i is not entitled to connect to content taste update service
%{public}@ will enqueue content taste update for %{public}@ invalidateLocalCache %{BOOL}u, isPeriodicContentTasteUpdateOrPushTask=%{BOOL}u
%{public}@ Could not get DSID from configuration=%p, error=%{public}@
%{public}@ Operation (%p) identifier=%{public}@ finished with error=%{public}@ 
%{public}@ Scheduling next background content taste refresh task from %{public}@ to %{public}@
%{public}@ Rescheduling background content taste sync task from %{public}@ to %{public}@
%{public}@ Retaining response expiration date=%{public}@
%{public}@ Operation (%p) identifier=%{public}@ doesn't exist in our map. Not handling it's completion
%{public}@ Scheduling content taste retry for %lu items after %d seconds
%{public}@ No content taste items to retry
%{public}@ Will not post content taste for %{public}@ as it's missing DSID
%{public}@ Running content taste for %{public}@, DSID=%lld
%{public}@ Scheduling content taste update for %{public}@ with backOff=%d seconds
Setting criteria for media-content-taste-update activity to fire at %{public}@
Updating the criteria for existing task existingInterval:%f, new fire date:%{public}@
Not updating critera to run the next content taste operation - fire date:%{public}@
running media-content-taste-update activity, setting state to XPC_ACTIVITY_STATE_CONTINUE=%d
finished scheduling media-content-taste-update activity, setting state to XPC_ACTIVITY_STATE_DONE=%d
Unknown state: %d when processing media content taste update operation
Finished waiting for all pending content taste operations to finish
%{public}@ Scheduling content taste operation for failed items
%{public}@ Not scheduling content taste operation for %{public}@ items, error=%{public}@, isRetryable=%{BOOL}u
No valid album item properties to set, skipping updates to cloud library.
Sending edit request for %lu items
Set album item properties response: %lu
Set album item properties received no response
Set album item properties response with error: %{public}@
Album with pid = %lld has zero tracks with cloud_ids in the database, skipping updates to cloud library.
Album with pid = %lld has zero tracks in the database, skipping updates to cloud library.
Album with pid = %lld is not in the database, skipping updates to cloud library.
Appending cloud-id %lld to playlist with cloud-id %u
Updating playlist with cloud-id %u, setting trackList: %{public}@
No item saga ids to delete.
Sending delete request <%{public}@: %p method=%{public}@ action=%{public}@> for item saga ids: %{public}@
SagaRemoveItemOperation failed with error: %{public}@
Device does not support ArtistImageRequestHandler
Skipping artist hero image update due to insufficient network conditions
ICDBackgroundTaskManager %p - startPeriodicPolling
ICDBackgroundTaskManager %p - startPeriodicPolling - Setting timer to perform periodic poll for %llds (+/- %llds)
ICDBackgroundTaskManager %p - periodicPolling - Ignoring activity [State != Run]
ICDBackgroundTaskManager %p - periodicPolling - Ignoring polling [No configurations]
ICDBackgroundTaskManager %p - periodicPolling - Performing periodic sync
ICDBackgroundTaskManager %p - periodicPolling - Failed to update %@ %p [error] - error=%{public}@
ICDBackgroundTaskManager %p - periodicPolling - Updated %@ %p [no error]
ICDBackgroundTaskManager %p - scheduleTaskOfType:forConfiguration: - newTask=%{public}@ - currentTasks=%@
ICDBackgroundTaskManager %p - scheduleTaskOfType:forConfiguration: - Task already on-going [%{public}@]
ICDBackgroundTaskManager %p - _restoreCurrentTasks - No state to restore
ICDBackgroundTaskManager %p - _restoreCurrentTasks - Restoring current tasks failed - error=%{public}@
ICDBackgroundTaskManager %p - _restoreCurrentTasks - State restored [%lu tasks] - tasks=%@
ICDBackgroundTaskManager %p - _saveCurrentTasks - Saving current tasks failed - error=%{public}@
ICDBackgroundTaskManager %p - _saveCurrentTasks - State saved [%lu tasks] - tasks=%@
ICDBackgroundTaskManager %p - scheduleTask - taskName=%@
ICDBackgroundTaskManager %p - scheduleTask - Unable to perform asynchrounous work [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Task failed [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Task succeeded [%{public}@]
ICDBackgroundTaskManager %p - scheduleTask - Unable to force task termination [%{public}@]
ICDBackgroundTaskManager %p - Unregistering task: %@
ICDBackgroundTaskManager %p - startPeriodicPolling -  Adjusting bag refresh interval of %lldmin --> 7 days
ICDBackgroundTaskManager %p - Job Fired: sagaDeferredPushUpate [%{public}@]
ICDBackgroundTaskManager %p - sagaDeferredPushUpate - Failed - error=%{public}@
ICDBackgroundTaskManager %p - sagaDeferredPushUpate - Succeeded
ICDBackgroundTaskManager %p - Job Fired: jaliscoDeferredPushUpate [%{public}@]
ICDBackgroundTaskManager %p - jaliscoDeferredPushUpate - Failed - error=%{public}@
ICDBackgroundTaskManager %p - jaliscoDeferredPushUpate - Succeeded
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>19A603013</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>itunescloudd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.itunescloudd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>itunescloudd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>18R5569x</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>7.1</string>
<key>DTSDKBuild</key>
<string>18R5569x</string>
<key>DTSDKName</key>
<string>watchsimulator7.1.internal</string>
<key>DTXcode</key>
<string>1200</string>
<key>DTXcodeBuild</key>
<string>12A8179f</string>
<key>MinimumOSVersion</key>
<string>7.1</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2020 Apple Inc. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.itunescloudd</string>
<key>aps-connection-initiate</key>
<true/>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.inactive.fullaccess</key>
<true/>
<key>com.apple.atc.private</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.networkd.set_source_application</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.itunescloudd</string>
</array>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Music</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.amsaccountsd.multiuser</string>
<string>com.apple.xpc.amsaccountsd</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
ttsm
CRea
rsmc
nnac
anac
lnac
spac
hsac
prac
sfac
svac
cvac
saac
raac
efac
evac
uQec
QMec
QNec
iasa
dbmc
sbmc
tbmc
mbmc
gnac
kmmc
csac
tnac
tsac
usac
SGec
pnac
lpac
ttsm
stsm
CRea
