@(#)PROGRAM:SleepHealth  PROJECT:Sleep-1
Sleep
In Bed
Asleep
Awake
standardDeviationActualTimeAsleep
T@"NSNumber",R,C,N,V_standardDeviationActualTimeAsleep
standardDeviationScheduledTimeAsleep
T@"NSNumber",R,C,N,V_standardDeviationScheduledTimeAsleep
standardDeviationActualVsScheduledTimeAsleep
T@"NSNumber",R,C,N,V_standardDeviationActualVsScheduledTimeAsleep
morningIndexRange
T{?=qq},R,N,V_morningIndexRange
sleepAnalysisAsleepCount
Tq,R,N,V_sleepAnalysisAsleepCount
sleepAnalysisInBedCount
Tq,R,N,V_sleepAnalysisInBedCount
sleepAnalysisCount
Tq,R,N,V_sleepAnalysisCount
averageSleepDuration
T@"HKQuantity",R,C,N,V_averageSleepDuration
averageInBedDuration
T@"HKQuantity",R,C,N,V_averageInBedDuration
bedtimeAchievedCount
Tq,R,N,V_bedtimeAchievedCount
sleepDurationGoalAchievedCount
Tq,R,N,V_sleepDurationGoalAchievedCount
sleepDurationGoalStreakCount
Tq,R,N,V_sleepDurationGoalStreakCount
averageBedtimeMiss
T@"HKQuantity",R,C,N,V_averageBedtimeMiss
averageSleepDurationGoalMiss
T@"HKQuantity",R,C,N,V_averageSleepDurationGoalMiss
averageBedtime
T@"NSDateComponents",R,C,N,V_averageBedtime
averageWakeTime
T@"NSDateComponents",R,C,N,V_averageWakeTime
averageSleepStartTime
T@"NSDateComponents",R,C,N,V_averageSleepStartTime
averageSleepEndTime
T@"NSDateComponents",R,C,N,V_averageSleepEndTime
v32@?0@"HKSHSleepDaySummaryQuery"8@"NSArray"16@"NSError"24
GoalProgress
v32@?0{?=qq}8^B24
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
%@ resultsHandler must not be nil
ascending
TB,R,N,V_ascending
limit
Tq,R,N,V_limit
requireSleepAnalysis
TB,R,N,V_requireSleepAnalysis
onlySleepAnalysis
TB,R,N,V_onlySleepAnalysis
MorningIndexRangeStart
MorningIndexRangeDuration
Ascending
Limit
RequireSleepAnalysis
OnlySleepAnalysis
T{?=qq},N,V_morningIndexRange
TB,N,V_ascending
Tq,N,V_limit
TB,N,V_requireSleepAnalysis
TB,N,V_onlySleepAnalysis
<%@:%p (%@ - %@), %@ samples, category = %@>
<%@:%p>
DateInterval
SampleIntervals
Category
hk_redactedDescription
supportsSecureCoding
TB,R
dateInterval
T@"NSDateInterval",R,C,N,V_dateInterval
sampleIntervals
T@"NSArray",R,C,N,V_sampleIntervals
category
Tq,R,N,V_category
<%@:%p (%@ - %@), segments = %@>
Segments
segments
T@"NSArray",R,C,N,V_segments
v16@?0@"<HDSleepHealthDaemonPluginServerInterface>"8
v16@?0@"NSError"8
taskIdentifier
T@"NSString",R,C,N
healthStore
T@"HKHealthStore",R,N,V_healthStore
NSDate+HKSHSleep.m
Invalid parameter not satisfying: %@
[[gregorianCalendar calendarIdentifier] isEqualToString:NSCalendarIdentifierGregorian]
yyyy-MM-dd HH:mm
<%@:%p %@ (%@ - %@), goal = %@, schedules = %@, periods = %@>
<%@:%p %@ (%@ - %@)>
d16@?0@"HKSleepSchedule"8
MorningIndex
Calendar
Periods
Schedules
SleepDurationGoal
morningIndex
Tq,R,N,V_morningIndex
calendar
T@"NSCalendar",R,C,N,V_calendar
periods
T@"NSArray",R,C,N,V_periods
schedules
T@"NSArray",R,C,N,V_schedules
primarySchedule
T@"HKSleepSchedule",R,C,N
sleepDurationGoal
T@"HKQuantity",R,C,N,V_sleepDurationGoal
inBedDuration
Td,R,N
sleepDuration
[%{public}@:%{public}@] Received batch of %@ summaries (%@ - %@), clear pending: %@, is final: %@
[%{public}@:%{public}@] Delivering summaries for: %{public}@
[%{public}@:%{public}@] Summaries:
[%{public}@:%{public}@] Configured for summaries in range: %{public}@, ascending: %{public}@, limit: %{public}@, requireSleepAnalysis: %{public}@, onlySleepAnalysis: %{public}@
[%{public}@] Found invalid bedtime interval (%@ - %@) for schedule: %@
[%{public}@] Updating current sleep schedules: %@
[%{public}@] starting a sleep tracking session
[%{public}@] failed to start a sleep tracking session with error: %@
[%{public}@] stopping a sleep tracking session
[%{public}@] failed to stop a sleep tracking session with error: %@
[%{public}@] saving sleep tracking samples: %@
zPLR
HKSHGoalProgress
HKSHGoalProgressEngine
HKSHSleep
HKSHSleepDaySummaryQueryClientInterface
HKQueryClientInterface
NSObject
HKSHSleepDaySummaryQuery
HKSHSleepDaySummaryQueryConfiguration
HKSHSleepPeriodSegment
HKRedactedDescription
NSSecureCoding
NSCoding
NSCopying
HKSHSleepPeriod
HKSleepHealthStore
HKSleepHealthStoreInterface
_HKXPCExportable
HDSleepHealthDaemonPluginServerInterface
HKSHSleepDaySummary
copy
goalProgressWithMorningIndexRange:sleepAnalysisAsleepCount:sleepAnalysisInBedCount:sleepAnalysisCount:averageSleepDuration:averageInBedDuration:bedtimeAchievedCount:sleepDurationGoalAchievedCount:sleepDurationGoalStreakCount:averageBedtimeMiss:averageSleepDurationGoalMiss:averageBedtime:averageWakeTime:averageSleepStartTime:averageSleepEndTime:standardDeviationActualTimeAsleep:standardDeviationScheduledTimeAsleep:standardDeviationActualVsScheduledTimeAsleep:
morningIndexRange
sleepAnalysisAsleepCount
sleepAnalysisInBedCount
sleepAnalysisCount
averageSleepDuration
averageInBedDuration
bedtimeAchievedCount
sleepDurationGoalAchievedCount
sleepDurationGoalStreakCount
averageBedtimeMiss
averageSleepDurationGoalMiss
averageBedtime
averageWakeTime
averageSleepStartTime
averageSleepEndTime
standardDeviationActualTimeAsleep
standardDeviationScheduledTimeAsleep
standardDeviationActualVsScheduledTimeAsleep
.cxx_destruct
_sleepAnalysisAsleepCount
_sleepAnalysisInBedCount
_sleepAnalysisCount
_averageSleepDuration
_averageInBedDuration
_bedtimeAchievedCount
_sleepDurationGoalAchievedCount
_sleepDurationGoalStreakCount
_averageBedtimeMiss
_averageSleepDurationGoalMiss
_averageBedtime
_averageWakeTime
_averageSleepStartTime
_averageSleepEndTime
_standardDeviationActualTimeAsleep
_standardDeviationScheduledTimeAsleep
_standardDeviationActualVsScheduledTimeAsleep
_morningIndexRange
init
goalProgressForDaySummaries:inMorningIndexRange:
initWithMorningIndexRange:ascending:limit:requireSleepAnalysis:resultsHandler:
setDebugIdentifier:
executeQuery:
countByEnumeratingWithState:objects:count:
morningIndex
sleepDuration
inBedDuration
numberWithDouble:
addObject:
primarySchedule
calendar
hksh_bedtimeDateIntervalForMorningIndex:calendar:
startDate
initWithStartDate:duration:
periods
dateInterval
intersectsDateInterval:
hk_isAfterOrEqualToDate:
timeIntervalSinceDate:
duration
sleepDurationGoal
secondUnit
doubleValueForUnit:
hk_addDayIndex:
firstObject
lastObject
_timeIntervalForDate:sinceDate:calendar:
endDate
_firstAsleepSegment:
_lastAsleepSegment:
hk_quantityWithSeconds:
hk_enumerateDayIndexRangesWithOptions:usingBlock:
_dateComponentsForInterval:sinceDate:calendar:
_computeStandardDeviationFor:
count
timeIntervalSinceReferenceDate
dateByAddingUnit:value:toDate:options:
components:fromDate:
segments
category
doubleValue
goalProgressForDaySummaries:
initWithHealthStore:
fetchGoalProgressForMorningIndexRange:completion:
_healthStore
hksh_sleepDayStartForMorningIndex:calendar:
initWithStartDate:endDate:
hksh_sleepDayIntervalForMorningIndex:calendar:
hksh_sleepDayIntervalForMorningIndexRange:calendar:
initWithMorningIndexRange:ascending:limit:requireSleepAnalysis:onlySleepAnalysis:resultsHandler:
_initWithObjectType:predicate:
queue
debugIdentifier
numberWithUnsignedInteger:
numberWithInteger:
numberWithBool:
mutableCopy
addObjectsFromArray:
sharedBehavior
showSensitiveLogItems
queue_dispatchToClientForUUID:shouldDeactivate:block:
queue_populateConfiguration:
setMorningIndexRange:
setAscending:
setLimit:
setRequireSleepAnalysis:
setOnlySleepAnalysis:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
client_deliverError:forQuery:
client_deliverDaySummaries:clearPending:isFinalBatch:queryUUID:
configureClientInterface:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
clientQueue
queue_validate
raise:format:
queue_queryDidDeactivate:
configurationClass
clientInterfaceProtocol
queue_deliverError:
ascending
limit
requireSleepAnalysis
onlySleepAnalysis
_resultsHandler
_summariesPendingDelivery
_ascending
_requireSleepAnalysis
_onlySleepAnalysis
_limit
copyWithZone:
initWithCoder:
decodeIntegerForKey:
decodeBoolForKey:
encodeWithCoder:
encodeInteger:forKey:
encodeBool:forKey:
supportsSecureCoding
wakeTimeComponents
hk_componentsWithDayIndex:calendar:
hour
setHour:
minute
setMinute:
bedTimeComponents
nextDateAfterDate:matchingComponents:options:
hksh_wakeDateComponentsForMorningIndex:calendar:
date
hksh_bedtimeDateIntervalForWakeTime:calendar:
weekdays
overrideDayIndex
hksh_hasEquivalentTimesToSleepSchedule:
hksh_hasEquivalentOverrideDayToSleepSchedule:
arrayWithObjects:count:
sleepPeriodSegmentWithDateInterval:sampleIntervals:category:
stringWithFormat:
encodeObject:forKey:
decodeObjectOfClass:forKey:
setWithArray:
decodeObjectOfClasses:forKey:
sampleIntervals
sleepPeriodSegmentWithDateInterval:category:
hk_redactedDescription
_dateInterval
_sampleIntervals
_category
intersectionWithDateInterval:
sleepPeriodWithDateInterval:segments:
durationForCategory:overlappingDateInterval:
_segments
taskIdentifier
UUID
initWithHealthStore:taskIdentifier:exportedObject:taskUUID:
clientQueueActionHandlerWithCompletion:
remote_updateCurrentSleepSchedules:sleepDurationGoal:completion:
fetchProxyWithHandler:errorHandler:
remote_startSleepTrackingSession
remote_stopSleepTrackingSession
remote_saveSleepTrackingSamples:completion:
exportedInterface
remoteInterface
connectionInvalidated
connectionInterrupted
connectionConfigured
updateCurrentSleepSchedules:sleepDurationGoal:completion:
startSleepTrackingSession
stopSleepTrackingSession
saveSleepTrackingSamples:completion:
healthStore
_proxyProvider
interfaceWithProtocol:
hk_dateOnDayIndex:atHour:calendar:
calendarIdentifier
isEqualToString:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
hk_dayIndex
hksh_morningIndexWithCalendar:
setDateFormat:
hk_gregorianCalendarWithCupertinoTimeZone
timeZone
setTimeZone:
dateFromString:
hourUnit
quantityWithUnit:doubleValue:
daySummaryWithMorningIndex:dateInterval:calendar:periods:schedules:sleepDurationGoal:
_categoryTypeWithCode:
categorySampleWithType:value:startDate:endDate:
sleepDurationGoalType
quantitySampleWithType:quantity:startDate:endDate:
hk_componentsWithHour:minute:
sleepScheduleWithDate:weekdays:wakeTimeComponents:bedTimeComponents:overrideDayIndex:device:metadata:
integerValue
hksh_morningIndexRangeWithCalendar:
categoryTypeForIdentifier:
sleepScheduleType
_computeDurationTotalsIfNeeded
hk_firstObjectWithMaximumValueUsingEvaluationBlock:
schedules
objectAtIndexedSubscript:
isEquivalent:
hk_secondsNumber
emptyDaySummaryWithMorningIndex:dateInterval:calendar:
_inBedDuration
_sleepDuration
_didComputeDurationTotals
_morningIndex
_calendar
_periods
_schedules
_sleepDurationGoal
@168@0:8{?=qq}16q32q40q48@56@64q72q80q88@96@104@112@120@128@136@144@152@160
{?=qq}16@0:8
q16@0:8
@16@0:8
v16@0:8
@"HKQuantity"
@"NSDateComponents"
@"NSNumber"
{?="start"q"duration"q}
@24@0:8@16
@40@0:8@16{?=qq}24
d40@0:8@16@24@32
@40@0:8d16@24@32
v40@0:8{?=qq}16@?32
@"HKHealthStore"
@32@0:8q16@24
@40@0:8{?=qq}16@32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"NSError"16@"NSUUID"24
v40@0:8@16B24B28@32
v40@0:8@"NSArray"16B24B28@"NSUUID"32
v24@0:8@16
@56@0:8{?=qq}16B32q36B44@?48
@60@0:8{?=qq}16B32q36B44B48@?52
@"NSMutableArray"
@24@0:8^{_NSZone=}16
v32@0:8{?=qq}16
v20@0:8B16
v24@0:8q16
@32@0:8@16@24
@32@0:8@16q24
@40@0:8@16@24q32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSDateInterval"
@"NSArray"
d32@0:8q16@24
@"NSXPCInterface"16@0:8
v40@0:8@16@24@?32
v32@0:8@16@?24
@"HKTaskServerProxyProvider"
v40@0:8@"NSArray"16@"HKQuantitySample"24@?<v@?B@"NSError">32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
q24@0:8@16
{?=qq}24@0:8@16
@64@0:8q16@24@32@40@48@56
@40@0:8q16@24@32
d16@0:8
@"NSCalendar"
