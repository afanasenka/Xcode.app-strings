%@ %@
muted
category
originIdentifier
hasMuted
TB,N
TB,N,V_muted
hasCategory
TB,R,N
T@"NSString",&,N,V_category
hasOriginIdentifier
Ti,N,V_originIdentifier
v16@?0@"NSError"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
pickedRoute
T@"NACAudioRoute",R,N
availableAudioRoutes
T@"NSArray",R,N
delegate
T@"<NACRoutingControllerDelegate>",W,N
T@"<NACRoutingControllerDelegate>",W,N,V_delegate
enabled
hasEnabled
TB,N,V_enabled
Audio/Video
volumeWarningEnabled
volumeWarningState
hasVolumeWarningEnabled
TB,N,V_volumeWarningEnabled
hasVolumeWarningState
Ti,N,V_volumeWarningState
v8@?0
<NACVolumeControlTarget-System-(%@)>
<NACVolumeControlTarget-Origin-(%@)>
supportsSecureCoding
TB,R
T@"NSNumber",&,N,V_originIdentifier
pairedDevice
TB,R,N,GisPairedDevice
com.apple.NanoAudioControl
NACVolumeValueDidChangeNotification
NACVolumeControlAvailabilityDidChangeNotification
NACMutedStateDidChangeNotificaton
NACSystemMutedStateDidChangeNotification
NACEULimitDidChangeNotification
NACHapticStateDidChangeNotification
NACVolumeWarningDidChangeNotification
NACAvailableListeningModesDidChangeNotification
NACCurrentListeningModeDidChangeNotification
NACFailedToSetCurrentListeningModeNotification
NACAudioRoutesDidChangeNotification
NACHapticIntensityDidChangeNotification
NACProminentHapticStateDidChangeNotification
Current
NanoMusicCore
NanoMusicCore-Oversize
NanoMediaRemote
NanoMediaRemote-Oversize
NanoAudioControl
NanoMusicSync
NanoMusicSync-Oversize
NanoMediaUI
NanoMediaUI-Oversize
NanoMediaTool
com.apple.nanomusic
com.apple.NanoAudioControl.XPC
NACMessageTypeSetVolumeValue
NACMessageTypeVolumeDidChange
NACMessageTypeBeginObservingVolume
NACMessageTypeEndObservingVolume
NACMessageTypeVolumeControlAvailabilityDidChange
NACMessageTypeMutedStateDidChange
NACMessageTypeSetMuted
NACMessageTypeBeginObservingAudioRoutes
NACMessageTypeEndObservingAudioRoutes
NACMessageTypePickAudioRoute
NACMessageTypeAudioRoutesDidChange
NACMessageTypeHapticIntensityDidChange
NACMessageTypeSetHapticIntensity
NACMessageTypeEUVolumeLimitDidChange
NACMessageTypeVolumeWarningDidChange
NACMessageTypeVolumeObservationCancelled
NACMessageTypeRouteObservationCancelled
NACMessageTypeSystemMutedStateDidChange
NACMessageTypeSetSystemMuted
NACMessageTypeProminentHapticStateDidChange
NACMessageTypeSetProminentHapticEnabled
NACMessageTypeHapticStateDidChange
NACMessageTypeSetHapticState
NACMessageTypeListeningModesDidChange
NACMessageTypeSetCurrentListeningMode
NACMessageTypeBeginObservingListeningModes
NACMessageTypeEndObservingListeningModes
RingtonePreview
volumeControlAvailable
TB,N,GisVolumeControlAvailable,V_volumeControlAvailable
TB,N,GisVolumeWarningEnabled,V_volumeWarningEnabled
Tq,N,V_volumeWarningState
TB,N,GisMuted,V_muted
EUVolumeLimit
Tf,N,V_EUVolumeLimit
throttler
T@"NACEventThrottler",&,N,V_throttler
volumeController
T@"MPVolumeController",&,N,V_volumeController
routingController
T@"MPAVRoutingController",&,N,V_routingController
nacVolumeController
T@"<NACVolumeController>",&,N,V_nacVolumeController
runAssertion
T@"NACRunAssertion",&,N,V_runAssertion
message
T@"PBCodable",&,N,V_message
type
Tq,N,V_type
timeout
Td,N,V_timeout
queueOne
T@"NSString",C,N,V_queueOne
com.apple.private.alloy.audiocontrol.music
com.apple.nanoaudiocontrol.ids.server
v16@?0@"NSArray"8
v16@?0@8
v12@?0i8
v16@?0@"MPAVEndpointRoute"8
v32@?0@"NACProxyVolumeControlTarget"8@"_NACVolumeObserverRecord"16^B24
v32@?0@"MPAVRoute"8Q16^B24
RequestedVolume
ForceVolumeWarning
com.apple.springboard.ringerstate
hasVolumeControlAvailable
TB,N,V_volumeControlAvailable
identifier
hasIdentifier
T@"NSString",&,N,V_identifier
volumeValue
Tf,N,V_volumeValue
observers
T@"NSMutableSet",R,N
availableListeningModes
T@"NSOrderedSet",&,N,V_availableListeningModes
currentListeningMode
T@"NSString",&,N,V_currentListeningMode
T@"NSMutableSet",&,N,V_observers
audioRoutes
T@"NSArray",&,N,V_audioRoutes
deferredAudioRoutes
T@"NSArray",&,N,V_deferredAudioRoutes
timestamp
Td,N,V_timestamp
com.apple.NanoAudioControl.Preview
com.apple.nanoaudiocontrol.NACXPCServer
v32@?0@"NACProxyVolumeControlTarget"8@16^B24
errorDomain
errorCode
VolumeRecords
v32@?0@8@16^B24
HapticIntensity
SystemMutedState
ProminentHapticState
HapticState
v32@?0@"NSString"8@"_NACAudioRoutesRecord"16^B24
T@"NACAudioRoute",R,N,V_pickedRoute
T@"NSArray",R,N,V_availableAudioRoutes
v12@?0f8
v12@?0B8
v16@?0q8
v20@?0B8q12
v16@?0@"NSOrderedSet"8
v16@?0@"NSString"8
T@"<NACVolumeControllerDelegate>",W,N
TB,R,N,GisVolumeControlAvailable
TB,R,N,GisVolumeWarningEnabled
Tq,R,N
TB,R,N,GisMuted
Tf,R,N
systemMuted
TB,N,GisSystemMuted
hapticState
Tq,N
T@"NSOrderedSet",R,N
T@"NSString",&,N
hapticIntensity
Tf,N
prominentHapticEnabled
TB,N,GisProminentHapticEnabled
T@"<NACVolumeControllerDelegate>",W,N,V_delegate
TB,R,N,GisVolumeControlAvailable,V_volumeControlAvailable
TB,R,N,GisVolumeWarningEnabled,V_volumeWarningEnabled
Tq,R,N,V_volumeWarningState
TB,R,N,GisMuted,V_muted
Tf,R,N,V_EUVolumeLimit
TB,N,GisSystemMuted,V_systemMuted
Tq,N,V_hapticState
TB,N,GisProminentHapticEnabled,V_prominentHapticEnabled
T@"NSMutableArray",&,N,V_audioRoutes
com.apple.nanoaudiocontrol.ids.client.outgoing
com.apple.nanoaudiocontrol.ids.client.dispatch
T@"<NACIDSClientDelegate>",W,N,V_delegate
com.apple.NanoAudioControl.EndpointObserver
v16@?0^{__CFArray=}8
com.apple.NanoMusic.fetchRouteForOrigin
sharedObserver
T@"NACEndpointObserver",R,N
state
hasState
Ti,N,V_state
uniqueIdentifier
routeName
supportsVolumeControl
picked
routeType
hasUniqueIdentifier
T@"NSString",&,N,V_uniqueIdentifier
hasRouteName
T@"NSString",&,N,V_routeName
hasSupportsVolumeControl
TB,N,V_supportsVolumeControl
hasPicked
TB,N,V_picked
hasRouteType
Ti,N,V_routeType
Unknown
Speaker
Headphones
AirPods
Powerbeats
BeatsSolo
BeatsStudio
BeatsX
CarPlay
AppleTV
HomePod
AirTunes
HomePodPair
PowerbeatsPro
Beats419
Beats364
B298
B372
(unknown: %i)
com.apple.NanoMusic.NACRunAssertion
eventBlock
T@?,C,N,V_eventBlock
minimumDelay
Td,N,V_minimumDelay
value
T@,&,N,V_value
availableListeningMode
error
T@"NSMutableArray",&,N,V_availableListeningModes
hasCurrentListeningMode
hasError
T@"NSData",&,N,V_error
NACVolumeControllerLocal
v16@?0@"NSNumber"8
AVOutputDeviceBluetoothListeningModeNormal
AVOutputDeviceBluetoothListeningModeActiveNoiseCancellation
AVOutputDeviceBluetoothListeningModeAudioTransparency
DemoVolume
Tf,N,V_hapticIntensity
intensity
hasIntensity
Tf,N,V_intensity
hasEUVolumeLimit
eUVolumeLimit
Tf,N,V_eUVolumeLimit
%@ - %@
T@"NSString",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_routeName
Tq,R,N,V_routeType
TB,R,N,V_supportsVolumeControl
TB,R,N,GisPicked,V_picked
VolumeValue-%@
VolumeControlAvailability-%@
MutedState-%@
EUVolumeLimit-%@
VolumeWarning-%@
AudioRoutes-%@
Haptic
RouteObservationCancelled-%@
VolumeObservationCancelled-%@
ListeningModes-%@
systemRoute
T@"MPAVEndpointRoute",&,N,V_systemRoute
T@"NSHashTable",&,N,V_observers
systemVolumeController
T@"MPVolumeController",&,N,V_systemVolumeController
primaryVolumeController
T@"MPVolumeController",&,N,V_primaryVolumeController
secondaryVolumeController
T@"MPVolumeController",&,N,V_secondaryVolumeController
systemOutputDeviceRoute
T@"MPAVOutputDeviceRoute",&,N,V_systemOutputDeviceRoute
primaryOutputDeviceRoute
T@"MPAVOutputDeviceRoute",&,N,V_primaryOutputDeviceRoute
secondaryOutputDeviceRoute
T@"MPAVOutputDeviceRoute",&,N,V_secondaryOutputDeviceRoute
isSplitRoute
TB,R,N,V_isSplitRoute
volumeAudioCategory
T@"NSString",C,N,V_volumeAudioCategory
hasVolumeValue
Failed to pick route: %@ due to %@
Failed to create proxy NACVolumeController with invalid target: %@
XPC connection interrupted
XPC connection invalidated
Error getting proxy object: %@
[NACIDS] Handle end observing system volume
[NACIDS] Handle end observing volume for target: %@
[NACIDS] End observing volume for target: %@
[NACIDS] Received attempt to end observing volume for target (%@), but observing was not in progress
[NACIDS] Handle set volume
[NACIDS] Requested value: %f for category: %@
[NACIDS] Requested value: %f for target: %@
[NACIDS] Handle set muted for category: %@
[NACIDS] Handle set muted for target: %@
[NACIDS] Handle set system muted
[NACIDS] Handle set prominent haptic enabled
[NACIDS] Handle set haptic intensity. Setting haptic intensity: %f
[NACIDS] [NoiseControl] Handle set current listening mode: %@ for target: %@
[NACIDS] [NoiseControl] Handle begin observing listening modes for target: %@
[NACIDS] [NoiseControl] Handle end observing listening modes for target: %@
[NACIDS] Handling set haptic state. Setting haptic intensity to %f, prominent haptic enabled to %@
[NACIDS] Playing prominent haptic preview
[NACIDS] Playing default haptic preview
[NACIDS] Haptic state is the same (%lu). Skipped setting haptic state.
[NACIDS] Handle begin observing audio routes
[NACIDS] Received attempt to begin observing audio routes for category [%@], but observing had already begun
[NACIDS] Begin observing routes for category: %@
[NACIDS] Route observation of category [%@] has been active for 30 seconds, cancelling and informing client
[NACIDS] Handle end observing audio routes
[NACIDS] End observing audio routes for category: %@
[NACIDS] Received attempt to end observing audio routes for category [%@], but observing was not in progress
[NACIDS] Handle pick audio route
[NACIDS] Pick audio route with identifier: %@, category: %@
[NACIDS] Found audio route, attempting to pick
[NACIDS] Failed to pick route: %@ due to %@
[NACIDS] Couldn't find audio route to pick
[NACIDS] Received attempt to pick audio route for category [%@], but observing was not in progress
[NACIDS] Handle begin observing volume
[NACIDS] Volume observation has been holding a run assertion for 30 seconds, cancelling and informing client
[NACIDS] Observing volume for category: %@
[NACIDS] Observing haptic state
[NACIDS] Observing system mute
[NACIDS] Handle begin observing volume for target: %@
[NACIDS] Endpoint route doesn't exist for target: %@
[NACIDS] Failed to get hapticIntensity from AVSystemController!
[NACIDS] Last proxy volume observer cancelled. Cancelling proxy volume run assertion.
[NACIDS] Volume value for target %@ did change: %f
[NACIDS] Volume control availability for target %@ did change: %d
[NACIDS] Volume muted state for target %@ did change: %d
[NACIDS] EU limit for target %@ did change: %f
[NACIDS] Volume warning for target %@ did change (enabled: %d, state: %ld)
[NACIDS] Available routes updated
[NACIDS] -> %@
[NACIDS] Haptic intensity changed
[NACIDS] [NoiseControl] Available listening modes for target %@ did change: %@
[NACIDS] [NoiseControl] Current listening mode for target %@ did change: %@
[NACIDS] [NoiseControl] Failed to set current listening mode for target %@ error: %@
[NACIDS] Sending system volume value: %f for target: %@
[NACIDS] Sending system volume availability: %@ for target: %@
[NACIDS] Sending system EU volume limit: %f for target: %@
[NACIDS] Sending system volume warning enabled: %d state: %ld for category: %@
[NACIDS] Sending system muted state: %d for target: %@
Failed to archive error: %@ with error: %@
[NACIDS] [NoiseControl] Sending available listening modes: %@ current listening mode: %@ error: %@ for target: %@
[NACIDS] Failed to request delivery of IDS message, type: %@, queueOne: %@, identifier: %@, payload size: %tu, error: %@
[NACIDS] Successfully requested delivery of IDS message, type: %@, queueOne: %@, identifier: %@, payload size: %tu
[NACIDS] Successfully sent message (ID: %@).
[NACIDS] Failed to send message (ID: %@) with error "%@".
[NACXPC] XPC connection invalidated
[NACXPC] XPC connection interrupted
[NACXPC] Accepted new XPC connection
[NACXPC] Received request to begin observing volume for %@
[NACXPC] Sending IDS beginObservingVolume request for %@ because first observer is added
[NACXPC] Received request to end observing volume for %@
[NACXPC] Sending IDS endObservingVolume request for %@ because last observer is removed
[NACXPC] Received request to begin observing listening modes for %@
[NACXPC] Received request to end observing listening modes for %@
[NACXPC] Sending IDS beginObservingListeningModes request for %@ because first observer is added
[NACXPC] Sending IDS endObservingListeningModes request for %@ because last observer is removed
Audio route cache expired, waiting for an update from companion
[NACXPC] Existing route list is larger, scheduling deferred update
[NACXPC] Got IDS volume observation cancelled message for %@
[NACXPC] Still have %ld observers. Resending IDS beginObservingVolume request for %@
[NACXPC] Failed to unarchive cached volume records due to %@
[NACXPC] Failed to archive volumeRecords due to %@
VolumeControllerProxy begin observing volume for target: %@
VolumeControllerProxy end observing volume for target: %@
VolumeControllerProxy begin observing listening modes for target: %@
VolumeControllerProxy end observing listening modes for target: %@
Setting volume: %f for target: %@
Received volume value update: %f for target: %@
[NoiseControl] Received available listening modes update: %@ for target: %@
Received current listening mode update: %@ for target: %@
VolumeControllerProxy begin observing volume for target (%@) due to re-entering foreground
VolumeControllerProxy begin observing listening modes for target (%@) due to re-entering foreground
VolumeControllerProxy end observing volume for target (%@) due to entering background
VolumeControllerProxy end observing listeningmodes for target (%@) due to entering background
[NACIDS] Setting haptic state to: %ld
[NACIDS] Handle volume change for target: %@
[NACIDS] Handle volume availability for target: %@
[NACIDS] Handle muted state for target: %@
[NACIDS] Handle haptic intensity change
[NACIDS] Handling EU limit change for target: %@ value: %f
[NACIDS] Handling volume warning change for target: %@
[NACIDS] Handle audio routes changed
[NACIDS] Handle volume observation cancelled for target: %@
[NACIDS] Handle route observation cancelled
[NACIDS] Handle system muted state did change
[NACIDS] Handle prominent haptic state did change
[NACIDS] Handle haptic state did change
[NACIDS] [NoiseControl] Setting current listening mode: %@ for target: %@
[NACIDS] [NoiseControl] Handle listening modes did change
Failed to unarchive error with error: %@
[NACEndpointObserver] Got initial updates for MRAVEndpoints in session %@!
[NACEndpointObserver] Invalidating session %@
[NACEndpointObserver] Starting a new discovery session %@
Handling set haptic intensity. Setting haptic intensity: %f
333?
?333?
r@ffffff
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
NACMutedMessage
NSCopying
NACRoutingControllerLocal
MPAVRoutingControllerDelegate
NSObject
NACRoutingController
NACProminentHapticStateMessage
NACVolumeController
NACVolumeWarningMessage
NACProxyVolumeControlTarget
NSSecureCoding
NSCoding
NACCategoryMessage
NACXPCInterface
NACXPCClient
NACDaemonServer
_NACVolumeObserverRecord
_NACRoutesObserverRecord
_NACIDSMessageRecord
NACIDSServer
NACVolumeControllerDelegate
IDSServiceDelegate
MPVolumeControllerDelegate
NACVolumeControlAvailabilityMessage
NACPickAudioRouteMessage
_NACVolumeRecord
_NACListeningModesRecord
_NACAudioRoutesRecord
NACXPCServer
NSXPCListenerDelegate
NACIDSClientDelegate
NACRoutingControllerProxy
NACVolumeControllerProxy
NACAudioRoutesMessage
NACIDSClient
_NACAVRoutingDiscoverySession
NACEndpointObserver
NACHapticStateMessage
NACAudioRouteBuffer
NACRunAssertion
NACEventThrottler
NACListeningModesMessage
NACOriginIdentifierMessage
NACVolumeControllerLocal
MediaControlsVolumeControllerObserver
NACVolumeControllerDemo
NACHapticIntensityMessage
NACEUVolumeLimitMessage
NACAudioRoute
MediaControlsVolumeController
NACVolumeValueMessage
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithBool:
setObject:forKey:
numberWithInt:
setCategory:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
setMuted:
setHasMuted:
hasMuted
hasCategory
setOriginIdentifier:
setHasOriginIdentifier:
hasOriginIdentifier
readFrom:
writeTo:
copyTo:
mergeFrom:
muted
category
originIdentifier
.cxx_destruct
_category
_originIdentifier
_muted
_has
setDiscoveryMode:
setDelegate:
availableRoutes
countByEnumeratingWithState:objects:count:
audioRouteWithMPAVRoute:
isEqualToAudioRoute:
selectRoute:operation:completion:
pickedRoute
addObject:
routingControllerDidUpdateAvailableRoutes:
routingControllerFailedToPickRoute:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
initWithAudioCategory:
beginObservingRoutes
endObservingRoutes
pickAudioRoute:
availableAudioRoutes
delegate
_routingController
_audioCategory
_delegate
setEnabled:
setHasEnabled:
hasEnabled
enabled
_enabled
initWithRoute:
volumeControlTargetWithCategory:
initWithVolumeControlTarget:
isPairedDevice
localVolumeControllerWithAudioCategory:
localVolumeControllerWithRoute:
proxyVolumeControllerWithAudioCategory:
proxyVolumeControllerWithTarget:
demoVolumeControllerWithAudioCategory:
setVolumeWarningEnabled:
setHasVolumeWarningEnabled:
hasVolumeWarningEnabled
setVolumeWarningState:
setHasVolumeWarningState:
hasVolumeWarningState
volumeWarningEnabled
volumeWarningState
_volumeWarningState
_volumeWarningEnabled
initWithOriginIdentifier:category:
setWithObjects:
containsObject:
decodeObjectOfClass:forKey:
encodeObject:forKey:
volumeControlTargetWithOriginIdentifier:
_isValidOriginIdentifier:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_createConnection
beginObservingVolumeForTarget:
beginObservingListeningModesForTarget:
removeObject:
beginObservingAudioRoutesForCategory:
_proxy
endObservingVolumeForTarget:
endObservingListeningModesForTarget:
volumeValueForTarget:result:
volumeControlAvailabilityForTarget:result:
mutedStateForTarget:result:
hapticState:
hapticIntensity:
prominentHapticEnabled:
systemMutedState:
EULimitForTarget:result:
volumeWarningForTarget:result:
setVolumeValue:forTarget:
setMuted:forTarget:
setHapticIntensity:
setProminentHapticEnabled:
setHapticState:
setSystemMuted:
availableListeningModesForTarget:result:
currentListeningModeForTarget:result:
setCurrentListeningMode:forTarget:
audioRoutesForCategory:result:
endObservingAudioRoutesForCategory:
pickAudioRouteWithIdentifier:category:
playAudioAndHapticPreview
playDefaultHapticPreview
playProminentHapticPreview
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
initWithMachServiceName:options:
setRemoteObjectInterface:
_resumeVolumeObservingIfNecessary
_resumeListeningModesObservingIfNecessary
_resumeRouteObservingIfNecessary
setInterruptionHandler:
invalidate
setInvalidationHandler:
resume
localizedDescription
remoteObjectProxyWithErrorHandler:
sharedClient
_xpcConnection
_xpcConnectionQueue
_routeObservingCategories
_volumeObservingTargets
_listeningModesObservingTargets
arrayWithObjects:count:
initWithVolumeAudioCategories:
beginObservingHapticState
beginObservingSystemMutedState
gizmoServer
companionServer
_idsServer
isVolumeControlAvailable
setVolumeControlAvailable:
isVolumeWarningEnabled
isMuted
EUVolumeLimit
setEUVolumeLimit:
throttler
setThrottler:
volumeController
setVolumeController:
routingController
setRoutingController:
nacVolumeController
setNacVolumeController:
_volumeControlAvailable
_EUVolumeLimit
_throttler
_volumeController
_nacVolumeController
runAssertion
setRunAssertion:
_runAssertion
message
setMessage:
type
setType:
timeout
setTimeout:
queueOne
setQueueOne:
_message
_type
_timeout
_queueOne
initWithService:
_handleSetVolume:
setProtobufAction:forIncomingRequestsOfType:
_handleSetMuted:
_handleBeginObservingVolume:
_handleEndObservingVolume:
_handleBeginObservingAudioRoutes:
_handleEndObservingAudioRoutes:
_handlePickAudioRoute:
_handleSetSystemMuted:
_handleSetHapticState:
_handleSetCurrentListeningMode:
_handleBeginObservingListeningModes:
_handleEndObservingListeningModes:
_handleSetHapticIntensity:
_handleSetProminentHapticEnabled:
addDelegate:queue:
_beginObservingSystemVolume
defaultCenter
removeObserver:
dealloc
_beginObservingHapticState
_beginObservingSystemMutedState
data
initWithData:
_handleBeginObservingSystemVolume
_handleBeginObservingProxyVolumeForTarget:
objectForKeyedSubscript:
removeObjectForKey:
count
volumeValue
sharedAVSystemController
allowUserToExceedEUVolumeLimit
setVolumeValue:
isEqualToString:
server
_setWatchPrefersSalientToneAndVibration:
_updateProminentHapticState
intensity
setVibeIntensityTo:
currentListeningMode
_nacVolumeControllerForTarget:createIfNeeded:
setCurrentListeningMode:
beginObservingListeningModes
availableListeningModes
_sendAvailableListeningModes:currentListeningMode:error:forTarget:
endObservingListeningModes
state
_updateHapticState
setObject:forKeyedSubscript:
_cancelRouteObservationForCategory:
identifier
uniqueIdentifier
fetchAvailableRoutesWithCompletionHandler:
_hasRequestedVolumeAtLeastOnce
_setRequestedVolumeAtLeastOnce
_sendCurrentObservingSystemVolumeValues
_cancelSystemVolumeObservation
setVolumeAudioCategory:
initWithDataSource:
initWithQueue:
setMinimumDelay:
floatValue
_sendVolumeValue:forTarget:
setEventBlock:
volumeControlIsAvailable
_sendVolumeControlAvailability:forTarget:
_sendVolumeWarningEnabled:volumeWarningState:forTarget:
_sendEUVolumeLimit:forTarget:
_hapticIntensityDidChangeNotification:
addObserver:selector:name:object:
updateProminentHapticState
_updateHapticIntensityValue
_updateSystemMutedState
_sendSystemMutedState:
_watchPrefersSalientToneAndVibration
_sendHapticState:
sharedObserver
_beginObservingProxyVolumeForTarget:withEndpointRoute:
fetchRouteForOriginIdentifier:completion:
initWithGroupRoute:outputDeviceRoute:
_cancelProxyVolumeObservationForTarget:
getVibeIntensity:
_sendMessage:type:timeout:queueOne:retry:
intValue
_targetForVolumeController:
numberWithFloat:
setValue:
_sendMutedState:forTarget:
dataSource
volumeAudioCategory
groupRoute
endpointWrapper
unwrappedValue
enumerateKeysAndObjectsUsingBlock:
routeName
isPicked
setSupportsVolumeControl:
enumerateObjectsUsingBlock:
buffersFromAudioRoutes:
mutableCopy
setAudioRoutes:
userInfo
_targetForNACVolumeController:
_shouldForceVolumeWarning
addAvailableListeningMode:
archivedDataWithRootObject:requiringSecureCoding:error:
setError:
setState:
initWithProtobufData:type:isResponse:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
initWithDictionary:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
length
code
volumeControllerDidUpdateVolumeValue:
volumeControllerDidUpdateVolumeControlAvailibility:
volumeControllerDidUpdateSystemMutedState:
volumeControllerDidUpdateMutedState:
volumeControllerDidUpdateEUVolumeLimit:
volumeControllerDidUpdateVolumeWarningEnabled:
volumeControllerDidUpdateVolumeWarningState:
volumeControllerDidUpdateHapticState:
volumeControllerDidUpdateProminentHapticState:
volumeControllerDidUpdateHapticIntensity:
volumeControllerDidUpdateAvailableListeningModes:
volumeControllerDidUpdateCurrentListeningMode:
volumeController:didFailToSetCurrentListeningModeWithError:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
volumeController:volumeControlAvailableDidChange:
volumeController:volumeControlCapabilitiesDidChange:
volumeController:volumeControlLabelDidChange:
volumeController:volumeValueDidChange:
volumeController:mutedStateDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
_systemVolumeRunAssertion
_proxyVolumeRunAssertion
_systemVolumeObservers
_proxyVolumeObservers
_routesObservers
_messageRecords
_volumeAudioCategories
_idsService
_serialQueue
_shouldPickRouteAfterFetching
_shouldObserveSystemMutedState
_isSystemMuted
_systemMuteToken
_shouldObserveHapticState
_prominentHapticEnabled
_hapticIntensity
_hapticState
_hapticThrottler
setHasVolumeControlAvailable:
hasVolumeControlAvailable
volumeControlAvailable
setIdentifier:
hasIdentifier
_identifier
decodeFloatForKey:
decodeBoolForKey:
encodeFloat:forKey:
encodeBool:forKey:
observers
_observers
_volumeValue
setAvailableListeningModes:
setObservers:
_availableListeningModes
_currentListeningMode
audioRoutes
deferredAudioRoutes
setDeferredAudioRoutes:
timestamp
setTimestamp:
_audioRoutes
_deferredAudioRoutes
_timestamp
initWithDomain:
synchronize
_cachedVolumeRecords
_cachedHapticIntensity
_cachedSystemMutedState
_cachedProminentHapticState
_cachedHapticState
initWithMachServiceName:
setExportedInterface:
setExportedObject:
_cleanupConnection:
currentConnection
_beginObservingVolumeForTarget:connection:
_volumeRecordForTarget:
_aggregatedCountOfObserversForTarget:inRecords:
_endObservingVolumeForTarget:connection:
_beginObservingListeningModesForTarget:connection:
_endObservingListeningModesForTarget:connection:
_listeningModesRecordForTarget:
_audioRoutesRecordForCategory:
timeIntervalSinceReferenceDate
_endObservingAudioRoutesForCategory:connection:
_persistVolumeRecords
_persistHapticIntensity
_persistProminentHapticState
_persistHapticState
_persistSystemMutedState
domain
numberWithInteger:
postNotificationName:object:userInfo:
_scheduleDeferredAudioRoutesUpdate:category:
_updateAudioRoutes:category:
_cancelDeferredAudioRoutesUpdate
objectForKey:
unarchivedObjectOfClasses:fromData:error:
dictionaryWithCapacity:
allKeys
boolForKey:
unsignedIntegerValue
_routeObservationCategoriesForConnection:
listener:shouldAcceptNewConnection:
client:volumeValue:didChangeForTarget:
client:volumeControlAvailable:didChangeForTarget:
client:mutedState:didChangeForTarget:
client:EULimit:didChangeForTarget:
client:volumeWarningEnabled:volumeWarningState:didChangeForTarget:
client:volumeObservationCancelledForTarget:
client:availableListeningModes:didChangeForTarget:
client:currentListeningMode:didChangeForTarget:
client:didFailToSetCurrentListeningModeForTarget:error:
client:audioRoutes:didChangeForCategory:
client:routeObservationCancelledForCategory:
client:systemMutedStateDidChange:
client:hapticStateDidChange:
client:hapticIntensityDidChange:
client:prominentHapticStateDidChange:
_internalQueue
_audioAndHapticPreviewQueue
_domainAccessor
_volumeRecords
_listeningModesRecords
_audioRoutesRecords
_xpcListener
_idsClient
_systemMutedState
_audioRouteDeferTimer
_applicationDidBecomeActiveNotification:
_applicationWillResignActiveNotification:
_audioRoutesDidChange
audioRoutesFromBuffers:
_xpcClient
_isObserving
_availableAudioRoutes
_pickedRoute
_setVolumeValue:
_setHapticIntensity:
endObservingVolume
_handleFailedToSetCurrentListeningModeNotification:
addObserver:selector:name:object:suspensionBehavior:
_volumeControlAvailabilityDidChange
_volumeValueDidChange
_mutedStateDidChange
_systemMutedStateDidChange
_hapticStateDidChange
_volumeWarningDidChange
_EUVolumeLimitDidChange
_availableListeningModesDidChange
_currentListeningModeDidChange
_prominentHapticStateDidChange
_hapticIntensityDidChange
sharedApplication
applicationState
_cancelSetVolumeTimer
_volumeTimout
_scheduleTimeoutWithBlock:
_prominentHapticTimeout
_notifyDelegateProminentHapticStateChanged
_cancelSetProminentHapticTimer
_hapticTimeout
_notifyDelegateHapticChanged
_cancelSetHapticTimer
_hapticStateTimeout
_notifyDelegateHapticStateChanged
_cancelSetHapticStateTimer
_notifyDelegateVolumeChanged
_notifyDelegateSystemMutedStateChanged
integerValue
errorWithDomain:code:userInfo:
beginObservingVolume
beginObservingHaptics
endObservingHaptics
isSystemMuted
hapticState
hapticIntensity
isProminentHapticEnabled
_ignoreHapticObservation
setVolumeValue:muted:overrideEULimit:
_target
_volumeThrottler
_setVolumeTimer
_setHapticTimer
_setProminentHapticTimer
_setHapticStateTimer
_observingVolume
_lastRecievedHapticIntensity
_lastReceivedProminentHapticEnabled
_lastReceivedHapticState
_observingListeningModes
_systemMuted
removeAllObjects
objectAtIndex:
initWithCapacity:
addAudioRoutes:
audioRoutesCount
clearAudioRoutes
audioRoutesAtIndex:
audioRoutesType
_handleVolumeValueDidChange:
_handleVolumeControlAvailabilityDidChange:
_handleMutedStateDidChange:
_handleEUVolumeLimitDidChange:
_handleVolumeWarningDidChange:
_handleAudioRoutesDidChange:
_handleVolumeObservationCancelled:
_handleRouteObservationCancelled:
_handleSystemMutedStatedDidChange:
_handleHapticStateDidChange:
_handleListeningModesDidChange:
_handleHapticIntensityDidChange:
_handleProminentHapticStateDidChange:
_sendMessage:type:timeout:queueOne:priority:
setIntensity:
eUVolumeLimit
availableListeningModesCount
orderedSetWithArray:
hasCurrentListeningMode
hasError
classForKeyedUnarchiver
error
_idsDispatchQueue
_idsOutgoingQueue
initWithEndpoint:
_discoverySession
_callbackToken
_initialFetchGroup
_initialFetchCompleted
invalidateDiscoverySession
_nacDiscoverySession
localRoutingControllerWithAudioCategory:
proxyRoutingControllerWithAudioCategory:
setHasState:
hasState
_state
setUniqueIdentifier:
setRouteName:
hasUniqueIdentifier
hasRouteName
setHasSupportsVolumeControl:
hasSupportsVolumeControl
setPicked:
setHasPicked:
hasPicked
routeType
setRouteType:
setHasRouteType:
hasRouteType
routeTypeAsString:
StringAsRouteType:
supportsVolumeControl
picked
_routeName
_routeType
_uniqueIdentifier
_picked
_supportsVolumeControl
_transaction
copy
_fire
cancel
eventBlock
minimumDelay
value
_lastUpdateTime
_timer
_queue
_eventBlock
_minimumDelay
_value
clearAvailableListeningModes
availableListeningModeAtIndex:
availableListeningModeType
_error
_init
_updateMutedStateFromVolumeController:
_updateVolumeState
updateCachedHapticState
endObservingHapticState
_mediaControlsVolumeController
addObserver:
setVolume:withNoticationDelay:
playPreview
availableBluetoothListeningModeForRouteType:
currentBluetoothListeningModeForRouteType:
setCurrentBluetoothListeningModeForRouteType:bluetoothListeningMode:error:
removeObserver:name:object:
updateVolumeValue
updateVolumeWarningState
mediaControlsVolumeController:didUpdateSplitRoute:
mediaControlsVolumeController:didChangeVolumeAvailable:effectiveVolume:forRoute:
_route
_volumeSetHistory
_validCachedMutedValue
_shouldIgnoreHaptics
_monitoringHaptics
_lastNotifiedAvailableListeningModes
_lastNotifiedCurrentListeningMode
_persistVolumeValue:
_setNeedsVolumeReload
_volumeDictionary
orderedSetWithObjects:
firstObject
_defaultsThrottler
_allowUserToExceedEUVolumeLimit
setHasIntensity:
hasIntensity
_intensity
setHasEUVolumeLimit:
hasEUVolumeLimit
_eUVolumeLimit
_routeTypeFromMPAVRoute:
routeUID
initWithMPAVRoute:
_routeTypeFromRouteBufferType:
audioRouteFromBuffer:
buffer
_routeBufferTypeFromRouteType:
routeSubtype
isAirpodsRoute
isB298Route
isPowerbeatsRoute
isB364Route
isB372Route
isB444Route
isBeatsSoloRoute
isB419Route
isBeatsStudioRoute
isBeatsXRoute
isCarplayRoute
isAppleTVRoute
isHomePodRoute
isStereoPair
weakObjectsHashTable
systemRoute
routeDidChangeNotification
_setupOutputDevicesAndVolumeControllersIfNeeded
_iconImageForRoute:
logicalLeaderOutputDevice
_notifyVolumeChangedForVolumeController:volumeControlAvailable:effectiveVolume:
_routeForVolumeController:
isSplitRoute
objectAtIndexedSubscript:
initWithOutputDevices:
outputDevices
isEqualToArray:
routeNameForRouteType:
imageForRouteType:
volumeForRouteType:
volumeControlAvailableForRouteType:
setVolume:forRouteType:
setSystemRoute:
systemVolumeController
setSystemVolumeController:
primaryVolumeController
setPrimaryVolumeController:
secondaryVolumeController
setSecondaryVolumeController:
systemOutputDeviceRoute
setSystemOutputDeviceRoute:
primaryOutputDeviceRoute
setPrimaryOutputDeviceRoute:
secondaryOutputDeviceRoute
setSecondaryOutputDeviceRoute:
_isSplitRoute
_volumeAudioCategory
_systemRoute
_systemVolumeController
_primaryVolumeController
_secondaryVolumeController
_systemOutputDeviceRoute
_primaryOutputDeviceRoute
_secondaryOutputDeviceRoute
setHasVolumeValue:
hasVolumeValue
@24@0:8^{_NSZone=}16
v20@0:8B16
B16@0:8
v20@0:8i16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
i16@0:8
v16@0:8
@"NSString"
{?="originIdentifier"b1"muted"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
@24@0:8@16
@24@0:8@"NSString"16
v24@0:8@"NACAudioRoute"16
@"NACAudioRoute"16@0:8
@"NSArray"16@0:8
@"<NACRoutingControllerDelegate>"16@0:8
v24@0:8@"<NACRoutingControllerDelegate>"16
@"MPAVRoutingController"
@"<NACRoutingControllerDelegate>"
{?="enabled"b1}
{?="originIdentifier"b1"volumeWarningState"b1"volumeWarningEnabled"b1}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16@24
@"NSNumber"
v32@0:8@16@?24
v28@0:8f16@20
v28@0:8B16@20
v24@0:8@?16
v24@0:8q16
v20@0:8f16
v24@0:8@"NACProxyVolumeControlTarget"16
v32@0:8@"NACProxyVolumeControlTarget"16@?<v@?f>24
v32@0:8@"NACProxyVolumeControlTarget"16@?<v@?B>24
v32@0:8@"NACProxyVolumeControlTarget"16@?<v@?Bq>24
v28@0:8f16@"NACProxyVolumeControlTarget"20
v28@0:8B16@"NACProxyVolumeControlTarget"20
v32@0:8@"NACProxyVolumeControlTarget"16@?<v@?@"NSOrderedSet">24
v32@0:8@"NACProxyVolumeControlTarget"16@?<v@?@"NSString">24
v32@0:8@"NSString"16@"NACProxyVolumeControlTarget"24
v24@0:8@?<v@?B>16
v24@0:8@?<v@?q>16
v24@0:8@?<v@?f>16
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v32@0:8@"NSString"16@"NSString"24
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
@"NACIDSServer"
q16@0:8
f16@0:8
@"NACEventThrottler"
@"MPVolumeController"
@"<NACVolumeController>"
@"NACRunAssertion"
d16@0:8
v24@0:8d16
@"PBCodable"
v24@0:8@"<NACVolumeController>"16
v32@0:8@"<NACVolumeController>"16@"NSError"24
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v28@0:8@16I24
v28@0:8@16f24
v32@0:8@16q24
v28@0:8@"MPVolumeController"16B24
v28@0:8@"MPVolumeController"16I24
v32@0:8@"MPVolumeController"16@"NSString"24
v28@0:8@"MPVolumeController"16f24
v32@0:8@"MPVolumeController"16q24
@28@0:8@16B24
v36@0:8B16q20@28
v52@0:8@16q24d32@40B48
@"NSMutableDictionary"
@"NSArray"
@"IDSService"
{?="originIdentifier"b1"volumeControlAvailable"b1}
@"NSOrderedSet"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v36@0:8@16f24@28
v36@0:8@16B24@28
v44@0:8@16B24q28@36
v36@0:8@"NACIDSClient"16f24@"NACProxyVolumeControlTarget"28
v36@0:8@"NACIDSClient"16B24@"NACProxyVolumeControlTarget"28
v44@0:8@"NACIDSClient"16B24q28@"NACProxyVolumeControlTarget"36
v32@0:8@"NACIDSClient"16@"NACProxyVolumeControlTarget"24
v40@0:8@"NACIDSClient"16@"NSOrderedSet"24@"NACProxyVolumeControlTarget"32
v40@0:8@"NACIDSClient"16@"NSString"24@"NACProxyVolumeControlTarget"32
v40@0:8@"NACIDSClient"16@"NACProxyVolumeControlTarget"24@"NSError"32
v40@0:8@"NACIDSClient"16@"NSArray"24@"NSString"32
v32@0:8@"NACIDSClient"16@"NSString"24
v28@0:8@"NACIDSClient"16B24
v32@0:8@"NACIDSClient"16q24
v28@0:8@"NACIDSClient"16f24
q32@0:8@16@24
@"NPSDomainAccessor"
@"NSXPCListener"
@"NACIDSClient"
@"NSObject<OS_dispatch_source>"
@"NACXPCClient"
@"NACAudioRoute"
@"<NACVolumeControllerDelegate>"16@0:8
v24@0:8@"<NACVolumeControllerDelegate>"16
@"NSOrderedSet"16@0:8
v28@0:8f16B20B24
@24@0:8@?16
@"NACProxyVolumeControlTarget"
@"<NACVolumeControllerDelegate>"
@24@0:8Q16
@"NSMutableArray"
v56@0:8@16q24d32@40q48
@"<NACIDSClientDelegate>"
@"NSObject<OS_dispatch_group>"
@"_NACAVRoutingDiscoverySession"
{?="state"b1}
@20@0:8i16
i24@0:8@16
{?="routeType"b1"picked"b1"supportsVolumeControl"b1}
@"NSObject<OS_os_transaction>"
@?16@0:8
@"NSData"
{?="originIdentifier"b1}
v40@0:8@16B24f28Q32
v28@0:8@"MediaControlsVolumeController"16B24
v40@0:8@"MediaControlsVolumeController"16B24f28Q32
@"MPAVRoute"
@"NSCountedSet"
@"MediaControlsVolumeController"
{?="intensity"b1}
{?="eUVolumeLimit"b1"originIdentifier"b1}
q24@0:8@16
i24@0:8q16
q20@0:8i16
B40@0:8Q16@24^@32
f24@0:8Q16
B24@0:8Q16
v28@0:8f16Q20
v32@0:8@16B24f28
Q24@0:8@16
@"MPAVEndpointRoute"
@"NSHashTable"
@"MPAVOutputDeviceRoute"
{?="originIdentifier"b1"volumeValue"b1}
LCOL
NPMC
