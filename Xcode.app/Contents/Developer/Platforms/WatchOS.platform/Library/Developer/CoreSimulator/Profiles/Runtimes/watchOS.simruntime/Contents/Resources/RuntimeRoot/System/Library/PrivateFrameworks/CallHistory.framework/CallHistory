%@ %@
timestamp
success
recordCount
version
hasTimestamp
TB,N
TQ,N,V_timestamp
hasSuccess
TB,N,V_success
hasRecordCount
TI,N,V_recordCount
hasVersion
TI,N,V_version
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
queue
T@"NSObject<OS_dispatch_queue>",R,V_queue
CHDatabaseClientHandleManager
sharedInstance
T@"CHDatabaseClientHandleManager",R,N
databaseClientHandle
T@"CallHistoryDBClientHandle",R,W,N,V_databaseClientHandle
name
T@"NSString",R,V_name
userInfo
T@"NSDictionary",&,V_userInfo
kCHTimerLifetimeKey
kCHTimerOutgoingKey
kCHTimerIncomingKey
ch.dbhandle
v16@?0@"NSNotification"8
com.apple.CallHistoryPluginHelper.launchnotification
remoteParticipantHandles
calltype IN %@
unique_id == %@
unique_id IN %@
Save failed no data stores
objectId
T@"NSString",R,N,VobjectId
callDBManager
T@"CallDBManager",R,N,VcallDBManager
callCount
hasCallCount
TI,N,V_callCount
%s: parameter '%@' cannot be nil
-[CHHandle initWithType:value:]
type
value
<%@ %p 
%@=%ld
%@=%@
supportsSecureCoding
TB,R
normalizedValue
T@"NSString",R,C,N,V_normalizedValue
Tq,R,N,V_type
T@"NSString",R,C,N,V_value
call_category
calltype
face_time_data
date
duration
outgoingLocalParticipantUUID
read
service_provider
unique_id
chCallStatus
TI,N
chHandleType
Tq,R,N
chRecentCall
T@"CHRecentCall",R,N
chRemoteParticipantHandles
T@"NSSet",R,C,N
supportsCallCategory
TB,R,N
supportsHandleType
supportsLocalParticipantUUID
supportsOutgoingLocalParticipantUUID
supportsRemoteParticipantHandles
supportsServiceProvider
supportsVerificationStatus
com.apple.CallHistory
kBootUpResultUsePerm
kBootUpResultUseTemp
kBootUpResultError
Undefined
v12@?0C8
helperConnection
T@"NSXPCConnection",&,V_helperConnection
syncHelperReadyNotificationRef
T@,&,V_syncHelperReadyNotificationRef
momd
storedata
CallHistory
CallHistoryTemp
CallRecord
CallDBProperties
CallHistoryDB
ch.calldbm
kCHNotifyDataStoreChangeReasonPermInitialized
kCHNotifyDataStoreChangeReasonTempInitialized
kCHNotifyDataStoreChangeReasonTempToPermSwitch
kCHNotifyDataStoreChangeReasonUnknown
%@.%@
%@/%@.%@
deviceUnlockNotificationRef
T@,&,V_deviceUnlockNotificationRef
dbManager
T@"DBManager",&,N,V_dbManager
deviceUnlocked
TB,V_deviceUnlocked
dataStoreType
TC,V_dataStoreType
notifyDataStoreChangeReason
TC,V_notifyDataStoreChangeReason
Handle
CHManagedHandle
chHandle
T@"CHHandle",R,N
com.apple.callhistory
CallHistory.framework
DatabaseVersionTemp
DatabaseVersionPerm
com.apple.callhistory.databaseInfo.plist
CHDBMetaInfoDomain
dbInfoPrefFile
T@"NSURL",&,V_dbInfoPrefFile
cloudKitEnabled
delegate
T@"<CHConfigurationDelegate>",W,N
TB,R,N,GisCloudKitEnabled
dataSource
T@"<CHKeyValueDataSource>",R,N,V_dataSource
T@"<CHConfigurationDelegate>",W,N,V_delegate
T@"NSString",C,D,N
Ts,D,N
T@"NSString",&,D,N
localParticipantCalls
T@"NSSet",&,D,N
remoteParticipantCalls
hasDeviceBeenUnlockedSinceBoot
TB,V_hasDeviceBeenUnlockedSinceBoot
GateKeeper
1121.10
1121.10~1
stock
%s%s
CallHistory-
CHPhoneNumber
digits
T@"NSString",R,C,N,V_digits
isoCountryCode
T@"NSString",C,N,V_isoCountryCode
formattedRepresentationAttempted
TB,N,V_formattedRepresentationAttempted
normalizedRepresentationAttempted
TB,N,V_normalizedRepresentationAttempted
formattedRepresentation
T@"NSString",R,C,N,V_formattedRepresentation
normalizedRepresentation
T@"NSString",R,C,N,V_normalizedRepresentation
timer_all
timer_incoming
timer_outgoing
timer_lifetime
timer_last
timer_last_reset
T@"NSNumber",&,D,N
configurations
T@"NSArray",R,C,N,V_configurations
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<CHConfigurationAggregatorDelegate>",W,N,V_delegate
CHManager
@"NSArray"8@?0
B8@?0
@"NSDate"8@?0
@"NSPredicate"8@?0
@"NSString"8@?0
ANY remoteParticipantHandles.normalizedValue IN %@
(service_provider = %@) OR (service_provider = %@)
contactsDisabled
TB,N,GisContactsDisabled,V_contactsDisabled
phoneBookManager
T@"CHPhoneBookIOSManager",R,N
recentCalls
T@"NSArray",&,N,V_recentCalls
numberOfUnseenMissedCalls
Tq,V_numberOfUnseenMissedCalls
syncManager
T@"<SyncManagerProtocol>",&,V_syncManager
cacheIsDirty
TB,V_cacheIsDirty
reCoalesce
TB,V_reCoalesce
uncoalescedRecentCalls
T@"NSArray",&,N,GuncoalescedRecentCallsSync,V_uncoalescedRecentCalls
uncoalescedUnFilteredRecentCalls
T@"NSArray",&,V_uncoalescedUnFilteredRecentCalls
showsFaceTimeVideoCalls
TB,N,V_showsFaceTimeVideoCalls
showsFaceTimeAudioCalls
TB,N,V_showsFaceTimeAudioCalls
showsTelephonyCalls
TB,N,V_showsTelephonyCalls
generateSyncTransactions
TB,N,V_generateSyncTransactions
limitingCallTypes
TI,N,V_limitingCallTypes
limitingStartDate
T@"NSDate",C,N,V_limitingStartDate
limitingEndDate
T@"NSDate",C,N,V_limitingEndDate
limitingCallKinds
T@"NSArray",C,N,V_limitingCallKinds
postFetchingPredicate
T@"NSPredicate",&,N,V_postFetchingPredicate
coalescingStrategy
T@"NSString",C,N,V_coalescingStrategy
SyncManager
%K >= %@
%K <= %@
com.apple.callhistory.RecentDeletedNotification
com.apple.callhistory.RecentsClearedNotification
dbHandle
T@"CallHistoryDBClientHandle",R,N,V_dbHandle
ch.pbm
v24@?0@"CNContact"8^B16
fContactsStore
T@"CNContactStore",&,N,V_fContactsStore
address
answered
T@"NSNumber",C,D,N
T@"NSDate",C,D,N
disconnected_cause
filtered_out_reason
handle_type
iso_country_code
junkConfidence
localParticipantUUID
T@"NSUUID",C,D,N
location
number_availability
originated
verificationStatus
ch.dbm
kDBMDataStoreDoesNotExist
kDBMDataStoreNotMigrated
kDBMNoError
kDBMOtherError
kDBMConstraintViolationError
undefined
errorCode
Tq,N,V_errorCode
dbVersion
Tq,N,V_dbVersion
secure_delete
fPersistentStoreCoordinator
T@"NSPersistentStoreCoordinator",&,N,VfPersistentStoreCoordinator
AWDLogger
awdServer
T@"AWDServerConnection",&,N,V_awdServer
error
hasError
TI,N,V_error
com.apple.callhistory.CHLogServer
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
domain
table
hasDomain
TI,N,V_domain
hasTable
T@"NSString",&,N,V_table
Insert
Update
Delete
BatchDeleteAll
record
transactionType
TQ,R,N,V_transactionType
T@"NSData",R,N,V_record
CHTransactionTypeBatchDeleteAll
CHTransactionTypeDelete
CHTransactionTypeInsert
CHTransactionTypeUpdate
ch.clientdbhandle
@"NSMutableArray"8@?0
@"CHRecentCall"8@?0
@"NSNumber"8@?0
@"CallDBManager"8@?0
dbStoreHandle
T@"CallHistoryDBHandle",R,N,VdbStoreHandle
kTmpDBLocationKey
kMoveCallRecordsFromTemporaryStoreNotitification
%@.%@/%@ %@
@"NSURL"16@?0q8
backup
Database-migration-failed
v16@?0@"CallRecord"8
NOT (%K IN %@)
oldSchema
newSchema
hasOldSchema
TI,N,V_oldSchema
hasNewSchema
TI,N,V_newSchema
call
T@"CHRecentCall",R,N,V_call
TQ,V_type
intent
kCHCallOccurrenceUniqueIdKey
kCHCallOccurrenceCallTypeKey
kCHCallOccurrenceCallStatusKey
kCHCallOccurrenceDurationKey
kCHCallOccurrenceDateKey
kCHCallOccurrenceDataUsageKey
kCHCallOccurrenceServiceProviderKey
kCHCallOccurrenceMediaTypeKey
kCHCallOccurrenceTTYTypeKey
kCHCallOccurrenceVerificationStatusKey
<<RecentsNumberLocationNotFound>>
uniqueId
callerId
callType
callStatus
unreadCount
bytesOfDataUsed
mobileCountryCode
mobileNetworkCode
devicePhoneId
callerIdLocation
callCategory
handleType
serviceRadar
timeToEstablish
q24@?0@"NSDictionary"8@"NSDictionary"16
CHRecentCall
Default Value
BLOCKED_CALLER
UNKNOWN_CALLER
v40@?0@"NSString"8@"GEOPhoneNumberResolutionResult"16@"NSError"24^B32
v16@?0@"GEOPhoneNumberResolutionResultSet"8
UNKNOWN_LABEL
Merged Call %lu:
{%@, %@}
Unknown
CHRecentCallMediaTypeAudio
CHRecentCallMediaTypeVideo
CHRecentCallMediaTypeUnknown
CHRecentCallTTYTypeNone
CHRecentCallTTYTypeDirect
CHRecentCallTTYTypeRelay
CHHandleTypeGeneric
CHHandleTypePhoneNumber
CHHandleTypeEmailAddress
kCallTypeNormal
kCallTypeVoicemail
kCallTypeVOIP
kCallTypeFaceTimeVideo
kCallTypeFaceTimeAudio
kCallTypeAll
kCallTypeTelephony
kCallTypeFaceTime
kCallStatusConnectedIncoming
kCallStatusConnectedOutgoing
kCallStatusAnsweredElsewhere
kCallStatusMissed
kCallStatusCancelled
kCallStatusConnected
kCallStatusAll
kCallStatusAllButMissed
kCHCallCategoryVideo
kCHCallCategoryAudio
kCHCallCategoryTTYDirect
kCHCallCategoryTTYRelay
--------------------------
Unique Id: %@
Local Participant UUID: %@
Outgoing Local Participant UUID: %@
Remote Participant Handles: %@
Call Media Type: %@
Call TTY Type: %@
Handle Type: %@
Call Service Provider: %@
Call Status: %@
Date: %@
Duration: %f
Caller Id Availability: %@
Caller Id Blocked?: %d
Caller Name: %@
Caller Network Name (first, last, name): %@, %@, %@
Caller Id Label: %@
Caller Id Location: %@
Bytes of data used: %@
Mobile country code: %@
Mobile network code: %@
Country Code (ISO): %@
Read: %d
Disconnect Cause: %@
Filtered Out Reason: %@
Junk Confidence: %@
Address Book Id: %@
Multi-Call: %@
Call Occurrences: %@
Unread count: %lu
Verification Status: %@
contactRef
T@"CNContact",C,N,V_contactRef
dictionaryRepresentation
T@"NSDictionary",R,N
Tq,N,V_junkConfidence
Tq,N,V_verificationStatus
callerName
T@"NSString",C,N,V_callerName
callerIdIsBlocked
TB,N,V_callerIdIsBlocked
callerNetworkFirstName
T@"NSString",C,N,V_callerNetworkFirstName
callerNetworkSecondName
T@"NSString",C,N,V_callerNetworkSecondName
TQ,N,V_unreadCount
callOccurrences
T@"NSArray",C,N,V_callOccurrences
callerIdLabel
T@"NSString",C,N,V_callerIdLabel
T@"NSString",C,N,V_callerIdLocation
multiCall
TB,N,V_multiCall
callerIdFormatted
T@"NSString",C,N,GcallerIdForDisplay,V_callerIdFormatted
TB,V_answered
mobileOriginated
TB,V_mobileOriginated
localParticipantHandle
T@"CHHandle",&,N,V_localParticipantHandle
T@"NSUUID",&,N,V_localParticipantUUID
T@"NSUUID",&,N,V_outgoingLocalParticipantUUID
T@"NSSet",C,N,V_remoteParticipantHandles
T@"NSString",C,N,V_uniqueId
callerNetworkName
T@"NSString",C,N,V_callerNetworkName
TI,N,V_callStatus
serviceProvider
T@"NSString",C,N,V_serviceProvider
T@"NSNumber",&,N,V_bytesOfDataUsed
T@"NSDate",&,N,V_date
Td,N,V_duration
TB,N,V_read
T@"NSString",C,N,V_mobileCountryCode
T@"NSString",C,N,V_mobileNetworkCode
disconnectedCause
T@"NSNumber",&,N,V_disconnectedCause
filteredOutReason
T@"NSNumber",&,N,V_filteredOutReason
callerIdAvailability
TI,N,V_callerIdAvailability
isJunk
clientAddressBookRecordId
T@"NSString",C,V_clientAddressBookRecordId
contactIdentifier
T@"NSString",C,N,V_contactIdentifier
mediaType
Tq,N,V_mediaType
ttyType
Tq,N,V_ttyType
Tq,N,V_handleType
T@"NSNumber",&,N,V_timeToEstablish
addressBookRecordRef
T@"NSValue",C,N,V_addressBookRecordRef
addressBookRecordId
T@"NSString",C,N,V_addressBookRecordId
addressBookCallerIDMultiValueId
T@"NSString",C,N,V_addressBookCallerIDMultiValueId
TI,N,V_callCategory
TI,N,V_callType
T@"NSString",C,N,V_devicePhoneId
T@"NSString",C,N,V_callerId
CHRecentCallVerificationStatusNotSet
CHRecentCallVerificationStatusPassed
CHRecentCallVerificationStatusFailed
CHRecentCallVerificationStatusUnknown
CHRecentCallVerificationStatusNoInfo
CHRecentCallJunkConfidenceNone
CHRecentCallJunkConfidenceLow
CHRecentCallJunkConfidenceMedium
CHRecentCallJunkConfidenceHigh
SharedAddressBook
Address Book Cache: %@
addressBookCache
T@"NSMutableDictionary",&,V_addressBookCache
transactionLogCount
hasTransactionLogCount
TI,N,V_transactionLogCount
uploadRecordCount
downloadRecordCount
hasUploadRecordCount
TI,N,V_uploadRecordCount
hasDownloadRecordCount
TI,N,V_downloadRecordCount
procname
hasPid
TI,N,V_pid
hasProcname
T@"NSString",&,N,V_procname
v12@?0B8
ch.calldbmigrator
v16@?0@"NSError"8
kCallUpdatePropertyOutgoingLocalParticipantUUID
kCallUpdatePropertyRead
kCallUpdatePropertyUniqueId
kCallUpdatePropertyBytesUsed
kCallUpdatePropertyCallStatus
com.apple.CallHistorySyncHelper
com.apple.CallHistoryPluginHelper
SharedUtilities
CallHistory: Directory creation failed at location %@ error: %@
CallHistory: Expected a directory at location %@ but found a file
kDBLNoError
kDBLNoSuchFileError
kDBLOtherError
mobile
com.apple.callhistory.save
/var/mobile
Library
Logs
BuildVersion
InternalBuild
CarrierInstallCapability
ReleaseType
Desense
hasCallType
hasCallStatus
kCallHistoryDatabaseChangedNotification
kCallHistoryTimersChangedNotification
kCallHistoryContactStoreChangedInternalNotification
kCallHistoryDatabaseRemoteUpdateReadNotification
kCallHistoryDatabasePluginUpdateNotification
kCallHistoryDistributedSaveNotification
kCallHistoryCallRecordInsertedNotification
kCallHistoryDatabaseChangedInternalNotification
kCallHistoryDeviceUnlockedNotification
kCallHistoryTimersDistributedSaveNotification
kCallHistorySyncHelperReadyNotification
kCallHistoryDatabaseInitializedKey
kCallHistoryDatabaseChangedTokenKey
kCHCoalescingStrategyRecents
kCHCoalescingStrategyCollapseIfEqual
kCHLimitCallTypeKey
kCHLimitStartDateKey
kCHLimitEndDateKey
kCHLimitCallKindsKey
kCHMediaTypeKey
kCHTTYTypeKey
kCHServiceProviderKey
kShowsFaceTimeVideoCallsKey
kShowsFaceTimeAudioCallsKey
kShowsTelephonyCallsKey
kNotificationReason
kNotificationChangeCount
External
Internal
kCHABCacheCNContactIdKey
kCHABCacheCNContactRefKey
com.apple.Telephony
com.apple.FaceTime
kCNContactInfoNotFound
kCHCallerIdAvailable
kCHCallerIdBlocked
kCHCallerIdUnavailable
date >= %@
date <= %@
(call_category & %d) = %d
remoteParticipantHandles.@count = %d
ANY remoteParticipantHandles.type = %d
ANY remoteParticipantHandles.value ==[c] %@
ANY remoteParticipantHandles.normalizedValue ==[c] %@
ANY remoteParticipantHandles.type IN %@
ANY remoteParticipantHandles.value IN %@
service_provider = %@
(service_provider IN %@)
(answered = %@) AND (originated = %@)
answered = %d
originated = %d
read == %d
junkConfidence >= %d
junkConfidence < %d
unique_id = %@
(unique_id IN %@)
TransactionManager
WatchDogTimer
ch.encrypttransform
PluginHelper
v16@?0@"NSArray"8
v16@?0Q8
No call db properties object found
Multiple call db properties object found
Failed to create call db manager
Failed to created the handle
Handling persistent store added notification, store count: %lu
Sending out database change notification when data store is added, reason: %@
Moving records from temp to permanent database
Input database URL is nil
Unable to query version of the database at location: %@
Database at location %@ has version %ld
Input database not in use
Failed to look up entity: %@
Failed to execute fetch on input database
Moving %lu records from input database %@ into permanent database
Failed to save calls from input database to perm database
Failed to delete calls from the input database
handleCallRecordContextDidSaveNotification
Entity %@ not found
Context for given entity %@ not created
Fetch request failed with error: %@
Count calls request failed with error %@
Fetch calls request failed with error %@
Fetch call identifiers request failed with error %@
While creating call record entity %@ not found
Database has no calls with %@ UUID
Multiple object with same uniqueId found but only one requested. Returning last matched object.
Record with %@ uniqueId does not exist
Record with %@ uniqueIds does not exist
Save performed successfully
Failed to save changes to persistent store error: %@
No persistent stores. Not performing save.
No changes in the data context to save
Failed to save call db properties to persistent store: %@
Received a key-value observing notification for key path (%@) object (%@).
Temporary database URL is nil
Temporary data store not used, nothing to move
Failed to add data store at location: %@
Failed to execute fetch on temporary database
Connection to Synchelper interrupted
Connection to Synchelper invalidated
createPermanent client: %@
MetaInfo says permanent database should be initialized but looks like not
Permanent database version: %ld is not the same as current version: %ld
Got error code: %@ while getting permanent data store database location
createTemporary client: %@
MetaInfo says temporary database should be initialized but looks like not
Temporary database version: %ld is not the same as current version: %ld
Got error code: %@ while getting temporary data store database location
Poking sync helper to initialize data store
Boot up result: %@
Permanent database state in client is out of sync with the server.
Temporary database state in client is out of sync with the server.
%@ in a subclass is not overridden
Bundle location not found
Could not find entity description with name %@ in managed object context %@. Falling back to convenience initializer.
Could not find CHManagedHandle entity with name %@ in context %@. Falling back to convenience initializer.
Failed to synchronize preference domain: %@
File at path: %@ is not readable
Unlocked since boot %d
Not formatted. So let's create a CFPhoneNumberRef. Num: %@, iso: %@
Performing normalization migration policy for managed handle %@
Unexpected data type found in value %@ for key %@
Comparing CHHandleType to managed handle type %ld
Normalized email address to %@
Normalized user name to %@
Normalized telephone number to %@
Creating CHManager with default values!
Creating CHManager with user values!
CHManager is getting destroyed...
--- Contact Store changed! Invalidating call's AB info.
--- Got Database changed notification: %@. Make cache dirty and send client DB Changed Notification
--- Got Database changed notification due to an external change! Make cache dirty and send client DB Changed Notification
--- Received current locale changed notification: %@. Invalidating all calls' caller ID formatted values.
Coalescing with kCHCoalescingStrategyRecents
Coalescing with kCHCoalescingStrategyCollapseIfEqual
Coalescing hash not found for call %@
Returning calls with no coalescing since none or invalid (%@) strategy was provided
<== %@ => %lu calls
No predicate to apply, return all calls
==> %@(%@)
<== %@(%@) => %lu calls
Fetching from DB and updating cache. And coalescing: %@, With callType limit: %@
SyncManager returned %lu calls
After coalescing we have %lu calls
User fetching without coalescing!
No fetching required. Recoalscing & applying global filter
<== %@ returns %lu calls
User requested to count calls with predicate, %@. Returning %lu.
<== %@(%@) %lu calls
User requested to insert new call without sync transactions: 
Updating outgoing local participant UUID to %@ for recent calls matching predicate %@.
User requested to mark ALL calls as read
User requested to mark some calls with this predicate, %@, as read
==> %@(%@, %@)
Cannot update. Nil unique id or bytes used!
=> %@(%@)
=> %@
=> deleteCall:%@
==> %@: User requested to delete call at index, %lu
==> %@: User requested to delete ALL calls (with the global limits of course)
Setting limiting call kinds: %@
Setting limiting call type to %@ (0x%x). Cache is drity.
==> %@:%@(0x%x)
==> %@:%@
==> %@: User setting showsFaceTimeVideoCalls to %d
Old limitingCallType: 0x%x (%@). OR Mask: 0x%x. New limitingCallType: 0x%x.
Old limitingCallType: 0x%x (%@). AND Mask: 0x%x. New limitingCallType: 0x%x.
==> %@: User setting showsFaceTimeAudioCalls to %d
Old limitingCallType: 0x%x. OR Mask: 0x%x. New limitingCallType: 0x%x.
Old limitingCallType: 0x%x. AND Mask: 0x%x. New limitingCallType: 0x%x.
==> %@: User setting showsTelephonyCalls to %d
==> %@ => %f seconds
==> %@: User requested to reset call timers
Updating read status for calls matching predicate %@
Could not update calls; operation failed with error %@
Deleting calls matching predicate %@
Could not delete calls; operation failed with error %@
Retrieving count of calls matching predicate %@
Retrieving calls matching predicate %@
Retrieving identifiers for calls matching predicate %@
Retrieving count of coalesced calls matching predicate %@
Retrieving coalesced calls matching predicate %@
Updated read status for %lu calls matching predicate %@
fetching with predicate: %@
Call Record %@ already deleted
No Call Records found
Deleting all %lu objects
Deleting %lu calls
Attempt to archive %@ failed with error %@
Deleting %d objects
Cannot delete %@ call placed on %@ with nil unique ID
fetchCNContact! Trying to find contact info for %@, isEmail? %d
The predicate used to find contact: %@
Num of contacts found: %lu for %@
Error looking for contacts matching caller ID %@, error: %@
Can't find contact for identifier %@, error: %@
==> %@
%@ <== %@
Contacts have not been cached yet, begin prefetching...
Prefetched identifiers for (%ld) handles, found (%ld) contacts
Fetching contact identifiers failed with error: %@
Asked to prefetch contact identifiers, but there is no need to batch fetch.
Failed to created managed object model
Invalid value dbURL: %@ or modelURL: %@
Data store at path %@ does not exist
Unexpected error: %@ when querying meta data for database: %@, treating as data store not initialized
Failed to get the destination managed object model
Destination store at location %@ is not compatible with newer version, migration required
Failed to create peristent coordinator for persistent store
Either version indentifier set is nil (%p) or has count not equal to 1 (%lu)
Failed to get meta data for source data store: %@
Failed to look up the managed object model for the source meta data
Failed to get the source version
Failed to get the destination version
Migrating from version %ld to %ld
Destination store at location %@ is compatible with newer version no migration required
Failed to look for the mapping bundle in the framework bundle, now inferring automatically
Failed to infer the mapping model automatically
Failed to delete data store at path: %@
Failed to migrate the store at location: %@ with error %@
Failed to copy data store src: %@ dst: %@ error: %@
Failed to remove store at URL: %@ with error %@
Database location is nil
Failed to create directory at path: %@
Failed to add the store at location %@ with error %@
Persistent store at URL %@ is not present
Failed to remove persistent store at URL:%@ with error:%@
Managed object does not exist
Coordinator not set
Persistent store not found
No meta data properties dict found
Object id not found
Could not replace persistent data store at %@ with %@: %@
Submitted metric for %u
Received distributed notification %@
Fetching calls from DBStoreHandle. Got back %lu calls
Converting records into CHRecentCall objects. Returning %lu calls
Got call record save notification from other app
Got timers save notification from other app
No calls to update
Objects with given uniqueIds:%@ to update do not exist
Properties dict not found for call with uniqueId: %@
Creating permanent data store: %@
Failed to create call db properties object for permanent store
Creating temporary data store: %@
Failed to create call db properties object for temporary store
Call history database is not recoverable
Booting up the database after taking the backup of the bootless one
Objects ids(%lu) and unique ids(%lu) count mismatch
Failed to create the managed context
Removing the records with duplicate unique ids
There exist no duplicate records in the database
Failed to execute the delete request
Number of records deleted: %@
Failed to execute fetch request
Failed to perform save on the managed context
Populating service provider and call category information
Populating remote participant handles
Populating handle type
Performing necessary steps for migration
Migration result is: %@
Failed to remove duplicates from the database at location: %@
Restricting number of records before performing migration: %@ %@
Total number of records deleted are: %lu
Failed to get the Call DB properties entity description
Failed to get the records with error: %@
Call DB properties object already exist, not creating again
Failed to create the Call DB properties managed object
Failed to save the Call DB properties object to the database with error: %@
No data store intialization required
Error occured when device is unlocked: %@
Transaction type %@ not supported (yet)
Dropping %@ transaction for recent call with destination %@ since it has a nil unique ID
Failing to unarchive the specified value: %@ %@
Cannot coalesce with call. One or more calls contains more than one remote participant. %@ %@
Cannot coalesce with call. Call status does not match. MyStatus: %@, OtherStatus: %@
Cannot coalesce with call. Call media type does not match. MyMediaType: %@, OtherMediaType: %@
Cannot coalesce with call. Call TTY type does not match. MyTTYType: %@, OtherTTYType: %@
Cannot coalesce with call. Calls happened on different dates.
Cannot coalesce with call. Call service provider does not match. MyServiceProvider: %@, OtherServiceProvider: %@
Can coalesce with %@ in %@ strategy? %@
==> %@ %@ %@ with %@
%@ %@ %@ with %@ = %@
Address book information for %@ not found in our cache, looking it up
Updated the ab cache. New cache: %@ 
Address book information for %@ found in our cache, using it
Got CNContact Id: %@, CNContact Pointer: %p from the cache.
Fetched addressbook record id and multi value id. CNContact Id: %@. Is this a Suggestion? %@
Full contact information for %@ not found in our cache, looking it up
Full contact information for %@ found in our cache, using it
CNContact was searched before and not found. Don't need to look agian. Return nil.
ABRecordID was searched before and not found. Don't need to look agian. Return nil.
%@, LEGACY ID IS: %d
<== %@ => %@
Caller name is null. Look in AddressBook for a name
AddressBook did not have a caller name for this caller id. Setting it to network sent name.
MainBundle: %@
ClassBundle: %@
Caller name is nil, let's use caller id formatted
Caller id and caller name are nil, call is blocked or unknown
<== %@ = %@
Could not get location information for phone number %@ error: %@
Timeout occured waiting for GeoServices to return location!
==> %@. Current location info for %@ is %@
Contacts changed, so reverting it and clearing our AB cache
Cannot insert info %@ into address book cache
Cannot insert %@ for key %@ into address book cache
The remote sync helper has crashed
Not able to bootup the daemon
Failed to archive the specified recent call: %@ %@
Ignoring object that isn't a CHRecentCall: %@
Failed to obtain the proxy object with error: %@
Firing %@ notification: %@
OS version:     %@
Version:        %@
Build revision: %s
Build reason:   %s
XPC connection is already valid!
Creating XPC connection to Sync Helper
Appending %lu transactions
Failed to send transactions to XPC service
Now have %lu queued transactions
Invalid XPC connection, attempting to create
Forwarding to XPC Service
Registering for %@
Received Sync Helper ready notification
Setting up invalidation handler
Could not get strong handle to SyncManager!
Handling invalidated XPC connection
Setting up interruption handler
Interrupted XPC connection, should be reestablished when needed
%@ waiting %f seconds
%@: task took longer than %f seconds
Goodbye from %@ timer
Canceling %@ timer
Encryption transformation is only available for NSString
Encryption reverse transformation is only available for NSData
Could not get recent calls: %@
Timed out while waiting for recent calls reply from Plugin Helper!
Could not get unread call count: %@
Timed out while waiting for unread call count reply from Plugin Helper!
Returning %lu unread calls
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
AWDCallHistoryCommCenterMigration
NSCopying
CHSynchronizable
NSObject
CHDatabaseClientHandleManager
NotificationSender
CallHistoryDBHandle
AWDCallHistoryDeviceUnlocked
CHHandle
NSSecureCoding
NSCoding
Additions
CHUserConfiguration
SyncProtocol
CallDBManagerClient
CallDBManager
CallDBMetaInfo
AWDCallHistoryDeleteAll
CHConfiguration
CoreDataProperties
GateKeeper
AWDCallHistoryCallAddedBeforeUnlock
CHPhoneNumber
CHEntityMigrationPolicy
CallDBProperties
CHConfigurationAggregator
CHConfigurationDelegate
CHManagedHandleMigrationPolicy
CHManager
SyncManager
SyncManagerProtocol
CHPhoneBookIOSManager
CHPhoneBookManagerProtocol
DBMigrationResult
DBManager
AWDLogger
AWDCallHistoryGizmoBootstrap
CHLogServer
AWDCallHistoryDatabaseSaveError
AWDCallHistoryUninitializedDatabaseSave
CHLogger
CHTransaction
CHTransactionAdditions
CallRecord
CallHistoryDBClientHandle
CallDBManagerServer
AWDCallHistoryDatabaseMigration
AWDCallHistoryMissingCloudChangeToken
DeserializedTransaction
CHSynchronizedLoggable
CHRecentCall
DayComparison
CHRecentCallAdditions
CHSharedAddressBook
AWDCallHistorySyncOverLimit
AWDCallHistorySync
AWDCallHistoryErrorReport
AWDCallHistoryEntitlementRejection
CHMigrator
CallDBMigrator
AWDCallHistoryGizmoDatabaseMigrationFailure
AWDCallHistoryNilUuid
Predicate
AWDCallHistoryMalformedCloudChangeToken
TransactionManager
WatchDogTimer
CHManagedHandle
EncryptionTransformer
PluginProtocol
CHPluginHelper
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
numberWithBool:
numberWithUnsignedInt:
allocWithZone:
init
isMemberOfClass:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setSuccess:
setHasSuccess:
hasSuccess
setRecordCount:
setHasRecordCount:
hasRecordCount
setVersion:
setHasVersion:
hasVersion
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
timestamp
success
recordCount
version
_timestamp
_recordCount
_version
_success
_has
queue
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
execute:
executeSync:
executeSyncWithResult:
executeSyncWithBOOL:
initWithName:
initWithQueue:
.cxx_destruct
_queue
createForClient
sharedInstance
databaseClientHandle
_databaseClientHandle
name
userInfo
dealloc
setUserInfo:
_name
_userInfo
initWithDomain:
createManagedObjectContext
setMergePolicy:
setUndoManager:
mainBundle
bundleIdentifier
UUID
UUIDString
fetchWithPredicate:forEntity:
count
logHandle
firstObject
initWithDBManager:
instance
logHandleForDomain:
createWithDBManager:
defaultCenter
handleCallRecordContextDidSaveNotification:
addObserverForName:object:queue:usingBlock:
handleCallDBPropContextDidSaveNotification:
callDBManager
tempDBLocation:
moveCallRecordsFromDatabaseAtURL:
dbManager
fPersistentStoreCoordinator
handlePersistentStoreChangedNotification:
registerForNotifications
removeObserver:name:object:
objectForKey:
hasChanges
save:
notifyDataStoreChanged
notifyDataStoreChangeReason
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
versionForDBAtLocation:
getDestinationModelForVersion:
isDataStoreAtURLInitialized:withModelAtURL:
instanceWithModelURL:
addDataStoreAtLocation:isEncrypted:
entityDescriptionHavingName:forContext:
setEntity:
executeFetchRequest:error:
countByEnumeratingWithState:objects:count:
createCallRecord
address
setAddress:
answered
setAnswered:
date
setDate:
duration
setDuration:
face_time_data
setFace_time_data:
setName:
read
setRead:
unique_id
setUnique_id:
calltype
setCalltype:
originated
setOriginated:
disconnected_cause
setDisconnected_cause:
number_availability
setNumber_availability:
iso_country_code
setIso_country_code:
managedObjectContext
compositeCallCategoryForContext:
setCall_category:
compositeHandleTypeForContext:
setHandle_type:
compositeJunkConfidenceForContext:
setJunkConfidence:
compositeServiceProviderForContext:
setService_provider:
compositeLocalParticipantUUIDForContext:
setLocalParticipantUUID:
compositeOutgoingLocalParticipantUUIDForContext:
setOutgoingLocalParticipantUUID:
compositeRemoteParticipantHandlesForContext:
setRemoteParticipantHandles:
deleteObject:
handleSaveForCallRecordContext:error:
removeDataStoreAtLocation:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
numberWithUnsignedLong:
postNotificationName:object:userInfo:deliverImmediately:
postTimersChangedNotification
callDBProperties
timer_incoming
timer_outgoing
timer_lifetime
dictionaryWithObjectsAndKeys:
reset
fetchWithPredicate:forEntity:withLimit:
setReturnsObjectsAsFaults:
setPredicate:
isEqualToString:
setRelationshipKeyPathsForPrefetching:
initWithKey:ascending:
arrayWithObjects:count:
setSortDescriptors:
setFetchLimit:
fetchManagedCallsWithPredicate:sortDescriptors:limit:offset:batchSize:
deleteManagedCalls:
fetchRequest
countForFetchRequest:error:
setFetchBatchSize:
setFetchOffset:
setPropertiesToFetch:
setResultType:
arrayWithCapacity:
length
addObject:
copy
allKeys
setValue:forKey:
initWithEntity:insertIntoManagedObjectContext:
numberWithInteger:
getArrayForCallTypeMask:
predicateWithFormat:
fetchAllObjectsWithUniqueId:
lastObject
fetchObjectWithUniqueId:
fetchObjectsWithUniqueIds:
fetchAllNoLimit
deleteAll:
insertedObjects
integerValue
doubleValue
boolValue
numberWithDouble:
setTimer_outgoing:
setTimer_incoming:
setTimer_lifetime:
updateCallDBProperties
saveTimers:
performSaveWithBackgroundTaskAssertion:error:
persistentStoreCoordinator
persistentStores
uninitializedDatabaseSave
getPropertyValueForKey:forContext:
code
refreshObject:mergeChanges:
databaseSaveError:withTableName:
timeIntervalSinceReferenceDate
setPropertyValue:forKey:forContext:
resetTimers
setTimer_all:
resetAllTimers
unRegisterForNotifications
createForServer
callRecordContext
registerForNotifications:
mergeCallRecordChangesFromRemoteAppSave
mergeCallDBPropChangesFromRemoteAppSave
deleteManagedCallsWithPredicate:
fetchManagedCallCountWithPredicate:sortDescriptors:
fetchManagedCallIdentifiersWithPredicate:sortDescriptors:limit:offset:batchSize:
updateManagedCallsWithPredicate:propertiesToUpdate:
fetchAll
fetchWithCallTypes:
fetchObjectsWithPredicate:
deleteObjectWithUniqueId:
deleteObjectsWithUniqueIds:
deleteAll
timerIncoming
timerOutgoing
timerLifetime
timerLastReset
objectId
fCallRecordContext
fCallDBPropertiesContext
_observerCallRecordRef
_observerCallDBPropRef
_moveCallRecordsFromTempStoreRef
_dataStoreAddedRef
setCallCount:
setHasCallCount:
hasCallCount
callCount
_callCount
type
value
normalizedValue
initWithType:value:normalizedValue:
raise:format:
initWithType:value:
initWithHandle:
encodeInteger:forKey:
encodeObject:forKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
appendFormat:
isEqualToHandle:
lowercaseString
containsString:
supportsSecureCoding
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
normalizedPhoneNumberHandleForValue:isoCountryCode:
handleTypeForValue:
encodeWithCoder:
initWithCoder:
_type
_value
_normalizedValue
supportsHandleType
handle_type
setBytesOfDataUsed:
setCallerIdAvailability:
location
setCallerIdLocation:
setCallerNetworkName:
chCallStatus
setCallStatus:
setDisconnectedCause:
filtered_out_reason
setFilteredOutReason:
setHandleType:
setIsoCountryCode:
junkConfidence
localParticipantUUID
outgoingLocalParticipantUUID
chRemoteParticipantHandles
service_provider
setServiceProvider:
setUniqueId:
verificationStatus
setVerificationStatus:
call_category
setCallCategory:
setCallerId:
setCallType:
setCallOccurrences:
supportsRemoteParticipantHandles
remoteParticipantHandles
initWithCapacity:
chHandle
chHandleType
initWithDigits:isoCountryCode:
normalizedRepresentation
supportsCallCategory
categoryForCallType:
supportsJunkConfidence
supportsLocalParticipantUUID
supportsOutgoingLocalParticipantUUID
setWithCapacity:
copyWithContext:
managedHandlesForHandles:inManagedObjectContext:
supportsServiceProvider
serviceProviderForCallType:
supportsVerificationStatus
entity
managedObjectModel
versionForManagedObjectModel:
setChCallStatus:
chRecentCall
compositeVerificationStatusForContext:
standardUserDefaults
initWithSuiteName:
registeredDefaults
registerDefaults:
userDefaults
addObserver:forKeyPath:options:context:
initWithDataSource:
dataSource
removeObserver:forKeyPath:context:
delegate
propertiesDidChangeForConfiguration:
observeValueForKeyPath:ofObject:change:context:
URLByDeletingLastPathComponent
initWithURL:
readDatabaseVersion:
modelURL
dataStoreType
setNotifyDataStoreChangeReason:
handlePermanentCreated
helperConnection
invalidate
initWithMachServiceName:options:
setHelperConnection:
resetCallTimers:
appendTransactions:
sync:
clearSyncToken:
migrateCallDB:withReply:
bootUp:
moveCallsFromTempDatabase
interfaceWithProtocol:
setRemoteObjectInterface:
createDataStore
setInterruptionHandler:
setInvalidationHandler:
resume
permDBLocation:
pokeSyncHelperToInitDB
handleTemporaryCreated
validateInfo:
willMoveCallsFromTempDatabase
createHelperConnection
remoteObjectProxy
shouldCreatePermanent
validatePermDatabase
createPermanent
shouldCreateTemporary
createTemporary
getDBLocationIsSandboxed:isTemporary:error:
validateTempDatabase
syncHelperReadyNotificationRef
setSyncHelperReadyNotificationRef:
_helperConnection
_syncHelperReadyNotificationRef
reFetch
setDeviceUnlockNotificationRef:
bundleForClass:
URLForResource:withExtension:
URLByAppendingPathComponent:
setDataStoreType:
deviceUnlockNotificationRef
dataStoreName
reFetchState
setDbManager:
deviceUnlocked
setDeviceUnlocked:
_deviceUnlocked
_dataStoreType
_notifyDataStoreChangeReason
_dbManager
_deviceUnlockNotificationRef
entitiesByName
initWithContext:
setType:
setValue:
setNormalizedValue:
managedHandleForHandle:inManagedObjectContext:
dbInfoPrefFile
dictionaryWithContentsOfURL:
mutableCopy
writeToURL:atomically:
defaultManager
path
isReadableFileAtPath:
writeDatabaseVersion:isTemp:
setDbInfoPrefFile:
_dbInfoPrefFile
numberForKey:
setDelegate:
isCloudKitEnabled
_dataSource
_delegate
fetchRequestWithEntityName:
setupMobileKeyBag
cacheUnlockSinceBootState
setHasDeviceBeenUnlockedSinceBoot:
hasDeviceBeenUnlockedSinceBoot
_hasDeviceBeenUnlockedSinceBoot
formattedRepresentationAttempted
digits
isoCountryCode
setFormattedRepresentationAttempted:
normalizedRepresentationAttempted
setNormalizedRepresentationAttempted:
formattedRepresentation
_formattedRepresentationAttempted
_normalizedRepresentationAttempted
_formattedRepresentation
_normalizedRepresentation
_digits
_isoCountryCode
registerConfigurationDelegate
configurations
configurationAggregator:didChangeConfiguration:
initWithConfigurations:queue:
_configurations
valueForKey:
remoteParticipantCalls
anyObject
normalizedValueForManagedHandle:
setLimitingCallTypesSync:
setDefaultInitValues
initWithName:queue:
setInitialLimitingCallKinds:
isContactsDisabled
setLimitingCallKindsSync:
handleCallHistoryContactStoreChangedInternalNotification:
addObserver:selector:name:object:
handleCallHistoryDatabaseChangedInternalNotification:
currentLocaleChanged:
setCacheIsDirty:
setReCoalesce:
fetchRecentCallsSyncWithCoalescing:
setCallerIdFormatted:
coalescedCallWithCall:usingStrategy:
phoneBookManager
fetchAndCacheContactIdentifiersForCalls:
coalescingHash
numberOfOccurrences
callOccurrences
objectAtIndexedSubscript:
unsignedIntegerValue
setMediaType:
setTtyType:
setMultiCall:
setObject:atIndexedSubscript:
multiCall
unCoalesceCall:
filteredArrayUsingPredicate:
sortedArrayUsingDescriptors:
coalescedCallsWithCalls:usingStrategy:
addObjectsFromArray:
evaluateWithObject:
applyPredicate:toCalls:
cacheIsDirty
callTypeAsString:
getLimitsDictionary
syncManager
fetchObjectsWithLimits:
setUncoalescedUnFilteredRecentCalls:
reCoalesce
uncoalescedUnFilteredRecentCalls
predicateFormat
uncoalescedRecentCallsSync
countCallsWithPredicateSync:
uniqueId
callType
callStatus
callAddedWithNilUuid:withCallStatus:
generateSyncTransactions
insert:
insertWithoutTransaction:
updateObjects:
updateAllObjects:
appendString:
deleteTheseCallsSync:
objectAtIndex:
deleteCall:
deleteObjectsWithLimits:
limitingCallKindsForCallType:
deleteAllCallsSync
deleteAllObjects
insertRecordsWithoutTransactions:
setRead:forCallsWithPredicate:error:
deleteCallsWithPredicate:error:
fetchCallCountWithPredicate:sortDescriptors:
fetchCallsWithPredicate:sortDescriptors:limit:offset:batchSize:
fetchCallIdentifiersWithPredicate:sortDescriptors:limit:offset:batchSize:
fetchCoalescedCallCountWithPredicate:sortDescriptors:
fetchCoalescedCallsWithPredicate:sortDescriptors:limit:offset:batchSize:
callsWithPredicate:limit:offset:batchSize:
andPredicateWithSubpredicates:
latestRecentCallMatchingPredicate:
CHCallStatusForCallWithDuration:isOriginated:isAnswered:
initWithFetchingLimitsDictionary:andCoalescingStrategy:andPostFetchingPredicate:withQueue:
recentCalls
recentCallsWithPredicate:
countCallsWithPredicate:
addToCallHistory:
setOutgoingLocalParticipantUUID:forRecentCallsMatchingPredicate:
markAllCallsAsReadWithPredicate:
updateBytesOfDataUsedFor:with:
deleteTheseCalls:
deleteCallAtIndex:
deleteAllCalls
clearDatabase
setLimitingCallKinds:
setLimitingCallTypes:
setPostFetchingPredicate:
setLimitingStartDate:
setLimitingEndDate:
setCoalescingStrategy:
setShowsFaceTimeVideoCalls:
setShowsFaceTimeAudioCalls:
showsTelephonyCalls
showsFaceTimeVideoCalls
showsFaceTimeAudioCalls
limitingCallTypes
limitingStartDate
limitingEndDate
limitingCallKinds
postFetchingPredicate
coalescingStrategy
setShowsTelephonyCalls:
callTimersGetIncoming
callTimersGetOutgoing
callTimersGetLifetime
callTimersReset
flush
addMultipleCallsToCallHistory:
setRead:forCallsWithPredicate:
setRead:forCallsWithPredicate:completion:
deleteCallsWithPredicate:
deleteCallsWithPredicate:completion:
callCountWithPredicate:
callIdentifiersWithPredicate:limit:offset:batchSize:
coalescedCallCountWithPredicate:
coalescedCallsWithPredicate:limit:offset:batchSize:
latestCallMatchingNormalizedRemoteParticipantHandleValues:
setGenerateSyncTransactions:
setContactsDisabled:
setRecentCalls:
numberOfUnseenMissedCalls
setNumberOfUnseenMissedCalls:
setSyncManager:
setUncoalescedRecentCalls:
_showsTelephonyCalls
_showsFaceTimeVideoCalls
_showsFaceTimeAudioCalls
_generateSyncTransactions
_contactsDisabled
_cacheIsDirty
_reCoalesce
_limitingCallTypes
_limitingStartDate
_limitingEndDate
_limitingCallKinds
_postFetchingPredicate
_coalescingStrategy
_recentCalls
_numberOfUnseenMissedCalls
_syncManager
_uncoalescedRecentCalls
_uncoalescedUnFilteredRecentCalls
initDBHandle
archivedDataWithError:
initWithType:andRecord:
arrayWithObject:
dbHandle
createCallRecord:
createCallRecords:
updateCallsWithPredicate:propertiesToUpdate:error:
addUpdateTransactions:
saveDatabase:
predicateForCallsWithMediaType:
predicateForCallsWithTTYType:
predicateForCallsWithServiceProvider:
predicateForCallKind:
orPredicateWithSubpredicates:
predicateForCallKinds:
predicateForLimits:
archiveCallObject:
array
updateCallRecords:
updateAllCallRecords:
initRequiringSecureCoding:
setOutputFormat:
encodedData
fetchAllObjects
_transactionManager
_dbHandle
predicateForContactsMatchingEmailAddress:
predicateForContactMatchingPhoneNumberWithDigits:countryCode:
fetchCNContactsMatchingPredicate:keysToKetch:error:
identifier
fetchCNContact:countryCode:isEmail:
descriptorForRequiredKeysForStyle:
predicateForContactsWithIdentifiers:
initWithKeysToFetch:
setUnifyResults:
fContactsStore
enumerateContactsWithFetchRequest:error:usingBlock:
predicateForContactsMatchingHandleStrings:
stringFromContact:style:
emailAddresses
phoneNumbers
phoneNumberWithStringValue:
isLikePhoneNumber:
label
localizedStringForLabel:
cachedCount
allObjects
fetchContactIdentifiersForHandles:error:
insertAddressBookInfoDictionaryIntoCache:
getRecordId:countryCode:isEmail:
fetchFullCNContactForContactIdentifier:isEmail:
getPersonsNameForContact:
getLocalizedCallerIdLabelForContact:forCallerId:withCallerIdIsEmail:
isABContactASuggestion
setFContactsStore:
_fContactsStore
initWithErrorCode:andDBVersion:
errorCode
setErrorCode:
dbVersion
setDbVersion:
_errorCode
_dbVersion
initWithContentsOfURL:
initWithManagedObjectModel:
metadataForPersistentStoreOfType:URL:error:
isConfiguration:compatibleWithStoreMetadata:
getPersistentCoordinator:
setFPersistentStoreCoordinator:
versionIdentifiers
arrayWithObjects:
mergedModelFromBundles:forStoreMetadata:
modelForDBAtLocation:
mappingModelFromBundles:forSourceModel:destinationModel:
inferredMappingModelForSourceModel:destinationModel:error:
lastPathComponent
fileExistsAtPath:
_destroyPersistentStoreAtURL:withType:options:error:
initWithSourceModel:destinationModel:
persistentStoreOptions:
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
mapToDBMErrorCode:
_replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
migrateDataStoreAtLocation:withGetDestinationModel:isEncrypted:
addPersistentStoreWithType:configuration:URL:options:error:
persistentStoreForURL:
removePersistentStore:error:
setPersistentStoreCoordinator:
metadataForPersistentStore:
setMetadata:forPersistentStore:
URLWithString:
managedObjectIDForURIRepresentation:
objectWithID:
destroyDBAtLocation:withModelAtLocation:
moveDBAtLocation:toLocation:withModelAtLocation:
getStoreURLforContext:
mangedObjectWithURI:inContext:
makeDatabaseAtURLClassCDataProtected:
replacePersistentStore:withURL:
initWithComponentId:andBlockOnConfiguration:
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
submitMetric:withId:
setError:
setOldSchema:
setNewSchema:
setTable:
postMetricWithId:unsignedIntegerValue:
setPid:
setUploadRecordCount:
setDownloadRecordCount:
commCenterMigrationResult:withMigratedCallCount:
databaseMigrationResult:oldVersion:newVersion:
entitlementRejection:
syncSuccess:withDownloadRecordCount:
syncFailure:
bootstrapGizmo:
gizmoDatabaseMigrationFailure
awdServer
setAwdServer:
_awdServer
setHasError:
hasError
error
_error
logHandleForDomainSync:
createLogHandleForDomainSync:
.cxx_construct
fLogHandles
setDomain:
setHasDomain:
hasDomain
hasTable
domain
table
_domain
_table
_logHandle
archivedDataWithRootObject:requiringSecureCoding:error:
setWithObjects:
unarchivedObjectClasses
unarchivedObjectOfClasses:fromData:error:
doesNotRecognizeSelector:
transactionType
record
ch_stringWithCHTransactionType:
isEqualToTransaction:
unarchivedObjectFromData:error:
toString:
initWithString:andRecord:
_transactionType
_record
parseCallStatus_sync:isAnswered:isOriginated:
disconnectedCause
filteredOutReason
setFiltered_out_reason:
bytesOfDataUsed
callerNetworkName
callerIdAvailability
numberWithShort:
serviceProvider
handleType
callerId
callCategory
init:
handleCallRecordSave_sync:
handleCallTimersSave_sync:
convertToCHRecentCalls_sync:
convertToCHRecentCalls_sync:limit:
deleteObjectWithUniqueId:error:
deleteObjectWithUniqueId:error:save:
deleteObjectsWithUniqueIds:error:
createCallRecord:error:
createCallRecord:error:save:
setStoreObject_sync:withClientObject:
createCallRecords:error:
updateCallRecords:error:
updateCallRecords:error:save:
updateCallRecords_sync:error:save:
updateAllCallRecords:error:
updateAllCallRecords_sync:error:
willHandleNotification_sync:
object
updateCallRecord_sync:withChangeDict:
getCallStatus_sync:isOriginated:isAnswered:
manager
dbStoreHandle
_observerCallTimersRef
getNextVersionToDowngradeTo:
getNextVersionToMigrateToCurrentVersion:
getNextVersionToDowngradeTo:withSourceVersion:
bootUpDBAtLocationWithRecovery:isEncrypted:
createCallDBProperties
postNotificationName:object:
bootUpDBAtLocation:isEncrypted:
handleBootUpFailure:
URLByAppendingPathExtension:
sortDescriptorWithKey:ascending:
propertiesByName
createMOCForDBAtLocation:dbVersion:isEncrypted:
getUniqueIdsForAllRecords:
getObjectIdsForAllRecords:
getObjectIdsForDuplicateRecordsWithUniqueIds:andHavingObjectIds:
initWithObjectIDs:
executeRequest:error:
result
modifyCallRecordForDBAtLocation:dbVersion:isEncrypted:modifyCallRecord:
setWithObject:
populateServiceProviderAndCallCategory:dbVersion:isEncrypted:
populateHandleType:dbVersion:isEncrypted:
populateRecentCallRemoteParticipantHandles:dbVersion:isEncrypted:
prepareDatabaseForNextStepInMigration:dbVersion:isEncrypted:
getDestinationModel:
removeDuplicatesFromDBAtLocation:dbVersion:isEncrypted:
handleDatabaseMigration:isEncrypted:isRetry:
getUUIDsOfNMostRecentRecords:fromManagedObjectContext:
initWithFetchRequest:
prepareForMigrationDBAtURL:withModelAtURL:andIsEncrypted:
downgradeDatabaseAtLocation:toVersion:
setHasOldSchema:
hasOldSchema
setHasNewSchema:
hasNewSchema
oldSchema
newSchema
_newSchema
_oldSchema
initWithCall:andType:
call
_call
donateCallHistoryInteractionWithCall:
deleteInteractionWithCalls:
_logger
_synchronizable
arrayByAddingObjectsFromArray:
compare:
sortedArrayUsingComparator:
callStatusAsString:
mediaType
callMediaTypeAsString:
ttyType
callTTYTypeAsString:
isSameDayAsDate:
canCoalesceRemoteParticipantHandlesFromCall:
canCoalesceSyncWithRecentsStrategyWithCall:
canCoalesceWithCall:withStrategy:
callOccurrencesArrayByAddingCallOccurrencesFromArray:
unreadCount
setUnreadCount:
initWithObjects:
fetchAddressBookInfoFromCacheForKey:
callerIdIsEmailAddress
insertAddressBookInfoIntoCache:forKey:
contactIdentifier
fetchAndSetContactIdentifier
fetchAndSetFullContact
contactRef
iOSLegacyIdentifier
setCallerIdIsBlocked:
rangeOfString:
substringToIndex:
substringFromIndex:
setCallerNetworkFirstName:
setCallerNetworkSecondName:
resourcePath
localizedStringForKey:value:table:
callerName
callerIdForDisplay
callerIdIsBlocked
getLocalizedString:
locationName
enumerateResolutionsUsingBlock:
resolvePhoneNumbers:handler:queue:
getLocationForCallerId:andIsoCountryCode:
callerIdLabel
callerIdLocation
ch_stringWithCHRecentCallVerificationStatus:
updateTTYAndMediaType
getCallTypeForCategory:andServiceProvider:
categoryForMediaType:andTTYType:
mediaTypeForCallCategory:
ttyTypeForCallCategory:
encodeBool:forKey:
encodeDouble:forKey:
decodeBoolForKey:
decodeDoubleForKey:
decodeObjectOfClasses:forKey:
containsValueForKey:
fixCallTypeInfo
callHandleTypeAsString:
callerNetworkFirstName
callerNetworkSecondName
mobileCountryCode
mobileNetworkCode
ch_stringWithCHRecentCallJunkConfidence:
callOccurrencesAsString
isEqualToRecentCall:
callCategoryAsString:
coalesceWithCall:withStrategy:
addressBookRecordId
callerNameForDisplay
callerIdSubStringForDisplay
isJunk
localParticipantHandle
setLocalParticipantHandle:
setMobileCountryCode:
setMobileNetworkCode:
clientAddressBookRecordId
setClientAddressBookRecordId:
setContactIdentifier:
timeToEstablish
setTimeToEstablish:
addressBookRecordRef
setAddressBookRecordRef:
setAddressBookRecordId:
addressBookCallerIDMultiValueId
setAddressBookCallerIDMultiValueId:
devicePhoneId
setDevicePhoneId:
setContactRef:
setCallerName:
setCallerIdLabel:
mobileOriginated
setMobileOriginated:
_read
_callerIdIsBlocked
_multiCall
_answered
_mobileOriginated
_callStatus
_callerIdAvailability
_callCategory
_callType
_localParticipantHandle
_localParticipantUUID
_outgoingLocalParticipantUUID
_remoteParticipantHandles
_uniqueId
_callerNetworkName
_serviceProvider
_bytesOfDataUsed
_date
_duration
_mobileCountryCode
_mobileNetworkCode
_disconnectedCause
_filteredOutReason
_callerNetworkFirstName
_callerNetworkSecondName
_unreadCount
_callOccurrences
_clientAddressBookRecordId
_contactIdentifier
_mediaType
_ttyType
_handleType
_timeToEstablish
_addressBookRecordRef
_addressBookRecordId
_addressBookCallerIDMultiValueId
_devicePhoneId
_callerId
_contactRef
_junkConfidence
_verificationStatus
_callerName
_callerIdLabel
_callerIdLocation
_callerIdFormatted
currentCalendar
components:fromDate:
year
month
registerForContactsNotifications
removeObserver:
revertAddressBook:
addressBookCache
removeAllObjects
cleanUpAddressBookCache_sync
sendABChangedNotificationSyncWithUserInfo:
addEntriesFromDictionary:
setAddressBookCache:
_addressBookCache
setTransactionLogCount:
setHasTransactionLogCount:
hasTransactionLogCount
transactionLogCount
_transactionLogCount
setHasUploadRecordCount:
hasUploadRecordCount
setHasDownloadRecordCount:
hasDownloadRecordCount
uploadRecordCount
downloadRecordCount
_downloadRecordCount
_uploadRecordCount
setProcname:
setHasPid:
hasPid
hasProcname
procname
_pid
_procname
migrate:queue:block:
_migrator
remoteObjectProxyWithErrorHandler:
_connection
_interface
resourceValuesForKeys:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
currentLocale
stringWithUTF8String:
stringByAppendingString:
initFileURLWithPath:isDirectory:
setHasCallType:
hasCallType
setHasCallStatus:
hasCallStatus
predicateForCallsWithCategory:
predicateWithValue:
predicateForCallsWithRemoteParticipantHandleValue:
predicateForCallsWithRemoteParticipantHandleNormalizedValue:
predicateForCallsWithRemoteParticipantHandleType:
orderedSetWithCapacity:
predicateForCallsWithAnyRemoteParticipantHandleTypes:
predicateForCallsWithAnyRemoteParticipantHandleValues:
predicateForCallsWithAnyRemoteParticipantHandleNormalizedValues:
predicateForCallsWithRemoteParticipantHandle:
orderedSetWithArray:
predicateForCallsWithUniqueID:
predicateForCallsBetweenStartDate:endDate:
predicateForCallsWithAnyMediaTypes:
predicateForCallsWithRemoteParticipantCount:
predicateForCallsWithAnyRemoteParticipantHandles:
predicateForCallsWithAnyServiceProviders:
predicateForCallsWithStatus:
predicateForCallsWithStatusAnswered:
predicateForCallsWithStatusOriginated:
predicateForCallsWithStatusRead:
predicateForCallsWithStatusJunk:
predicateForCallsWithAnyTTYTypes:
predicateForCallsWithAnyUniqueIDs:
createXpcConnection
createXpcConnection_sync
setupConnectionHandlers_sync
appendTransactions_sync:
_queuedTransactions
initWithQueue:withName:withTimeout:withCallback:
cancel
_timer
dataUsingEncoding:
bytes
initWithBytes:length:encoding:
allowsReverseTransformation
transformedValueClass
transformedValue:
reverseTransformedValue:
recentCallsWithCallType:withReply:
unreadCallCount:
setClasses:forSelector:argumentIndex:ofReply:
recentCallsWithLimitingTypes:
unreadCallCount
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
v20@0:8I16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
I16@0:8
{?="timestamp"b1"recordCount"b1"version"b1"success"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
@24@0:8@?16
B24@0:8@?16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@?<v@?>16
@24@0:8@?<@@?>16
B24@0:8@?<B@?>16
@24@0:8r*16
@24@0:8@16
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"CallHistoryDBClientHandle"
@"NSString"
@"NSDictionary"
@32@0:8@16@24
@36@0:8@16@24B32
q24@0:8@16
Q32@0:8@16@24
@56@0:8@16@24Q32Q40Q48
@20@0:8I16
B32@0:8@16^@24
B24@0:8^@16
@"NSManagedObjectContext"
@"CallDBManager"
{?="timestamp"b1"callCount"b1}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8q16@24
@40@0:8q16@24@32
q16@0:8
v48@0:8@16@24@32^v40
v32@0:8@16@?24
v24@0:8@?<v@?B>16
v24@0:8@"NSArray"16
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSArray"16@?<v@?B>24
v24@0:8@?<v@?C>16
@24@0:8^C16
@"NSXPCConnection"
@32@0:8B16B20^C24
C16@0:8
v20@0:8C16
@"DBManager"
q20@0:8B16
v28@0:8q16B24
B20@0:8B16
@"NSURL"
{?="timestamp"b1"recordCount"b1}
@"<CHConfigurationDelegate>"16@0:8
v24@0:8@"<CHConfigurationDelegate>"16
@"<CHKeyValueDataSource>"
@"<CHConfigurationDelegate>"
{?="timestamp"b1}
v24@0:8@"CHConfiguration"16
@"<CHConfigurationAggregatorDelegate>"
@"NSArray"
I32@0:8d16B24B28
@48@0:8@16@24@32@40
@20@0:8B16
Q24@0:8@16
v32@0:8@16@24
d16@0:8
q28@0:8B16@20
v36@0:8B16@20@?28
@48@0:8@16Q24Q32Q40
v24@0:8q16
@"NSDate"
@"NSPredicate"
@"<SyncManagerProtocol>"
q36@0:8B16@20^@28
q32@0:8@16^@24
q36@0:8B16@"NSPredicate"20^@28
q32@0:8@"NSPredicate"16^@24
Q32@0:8@"NSPredicate"16@"NSArray"24
@"NSArray"56@0:8@"NSPredicate"16@"NSArray"24Q32Q40Q48
v24@0:8@"CHRecentCall"16
@"NSArray"16@0:8
@"CHRecentCall"24@0:8@"NSString"16
@"NSArray"24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
@"TransactionManager"
@28@0:8@16B24
@"NSDictionary"36@0:8@"NSString"16@"NSString"24B32
@"CNContact"28@0:8@"NSString"16B24
@"NSString"24@0:8@"CNContact"16
@"NSString"36@0:8@"CNContact"16@"NSString"24B32
@40@0:8@16@24^@32
@32@0:8@16^@24
@"CNContactStore"
@32@0:8q16q24
q32@0:8@16@24
@36@0:8@16@?24B32
B32@0:8@16@24
B40@0:8@16@24@32
v40@0:8@16@24@32
B28@0:8@16B24
@"NSPersistentStoreCoordinator"
v28@0:8@16I24
v28@0:8B16Q20
v36@0:8B16q20q28
v32@0:8q16@24
v32@0:8Q16Q24
v20@0:8i16
@"AWDServerConnection"
{?="timestamp"b1"error"b1}
^{os_log_s=}24@0:8r*16
v24@0:8r*16
{unordered_map<const char *, os_log_s *, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, os_log_s *> > >="__table_"{__hash_table<std::__1::__hash_value_type<const char *, os_log_s *>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, os_log_s *>, std::__1::hash<const char *>, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, os_log_s *>, std::__1::equal_to<const char *>, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, os_log_s *> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, os_log_s *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, os_log_s *>, std::__1::hash<const char *>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, os_log_s *>, std::__1::equal_to<const char *>, true> >="__value_"f}}}
{?="timestamp"b1"domain"b1"error"b1}
^{os_log_s=}16@0:8
^{os_log_s=}
@24@0:8Q16
@24@0:8^@16
@32@0:8Q16@24
@"NSData"
v36@0:8I16^B20^B28
I40@0:8@16@24@32
@32@0:8@16Q24
B36@0:8@16^@24B32
@36@0:8@16^@24B32
@"CallHistoryDBHandle"
@24@0:8q16
q24@0:8q16
q32@0:8q16q24
@32@0:8@16q24
@36@0:8@16q24B32
B36@0:8@16q24B32
v44@0:8@16q24B32@?36
v36@0:8@16q24B32
B32@0:8@16B24B28
v36@0:8@16@24B32
{?="timestamp"b1"domain"b1"error"b1"newSchema"b1"oldSchema"b1}
@"CHRecentCall"
@32@0:8r*16@24
@"CHLogger"
@"CHSynchronizable"
q20@0:8I16
I32@0:8q16q24
I20@0:8I16
I28@0:8I16@20
v24@0:8d16
@"CHHandle"
@"NSUUID"
@"NSSet"
@"NSNumber"
@"NSValue"
@"CNContact"
@"NSMutableDictionary"
{?="timestamp"b1"transactionLogCount"b1}
{?="timestamp"b1"downloadRecordCount"b1"uploadRecordCount"b1}
{?="timestamp"b1"pid"b1}
v40@0:8@16@24@?32
@"CallDBMigrator"
@"NSXPCInterface"
{?="timestamp"b1"callStatus"b1"callType"b1}
@"NSMutableArray"
@48@0:8@16@24d32@?40
@"NSObject<OS_dispatch_source>"
v28@0:8I16@?20
v28@0:8I16@?<v@?@"NSArray">20
v24@0:8@?<v@?Q>16
