com.apple.managedconfiguration.mdmd-access
com.apple.managedconfiguration.mdmd.push
com.apple.managedconfiguration.profiled-access
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
MCMDMServicer.m
Improper use. Entitlement required for call
XPC_ERROR_LACKS_ENTITLEMENT_CODE
Invalid parameter not satisfying: %@
completion
xpcConnection
T@"NSXPCConnection",W,N,V_xpcConnection
.Managed.plist.lock
mdmd-MigrateMDM
Managed
v32@?0@"NSString"8@"NSDictionary"16^B24
v16@?0@"NSError"8
mdmd Catalyst Queue
mdmd-Start
UDID
v8@?0
MCMDMServer member queue
v20@?0B8@"NSError"12
v24@?0Q8@"NSError"16
MDM_ERROR_NO_INSTALLATION
MDM_ERROR_BAD_INSTALLATION_BAD_VALUE
MDM_ERROR_MISSING_IDENTITY
MDM_ERROR_BAD_INSTALLATION
mdmd-StartMCMDMServer
-[MCMDMServer startOutError:]
-[MCMDMServer startOutError:]_block_invoke_2
-[MCMDMServer startOutError:]_block_invoke_3
v12@?0B8
com.apple.purplebuddy.setupdone
v12@?0i8
mdmd-ReceivedPublicToken
-[MCMDMServer connection:didReceivePublicToken:]_block_invoke
-[MCMDMServer connection:didReceivePublicToken:]_block_invoke_3
-[MCMDMServer connection:didReceivePublicToken:]_block_invoke_2
mdmd-ReceivedMessageForTopic
-[MCMDMServer connection:didReceiveMessageForTopic:userInfo:]
-[MCMDMServer connection:didReceiveMessageForTopic:userInfo:]_block_invoke_2
-[MCMDMServer connection:didReceiveMessageForTopic:userInfo:]_block_invoke_3
mdmd-PushToken
simulatorToken
v24@?0@"CATTaskResultObject"8@"NSError"16
MDM_ERROR_UNAUTHORIZED_BY_SERVER
v16@?0@"NSData"8
v32@?0@"NSData"8q16@"NSError"24
-[MCMDMServer schedulePollingServerForCommandWithAssertion:]
-[MCMDMServer schedulePollingServerForCommandWithAssertion:]_block_invoke_2
-[MCMDMServer schedulePollingServerForCommandWithAssertion:]_block_invoke
(Idle)
mdmd-Request-%@
v16@?0@"NSDictionary"8
mdmd-NetworkReachabilityChanged
-[MCMDMServer _networkReachabilityDidChange]
-[MCMDMServer _networkReachabilityDidChange]_block_invoke_2
-[MCMDMServer _networkReachabilityDidChange]_block_invoke
mdmd-KeybagStateChanged
-[MCMDMServer _keybagStateDidChange]_block_invoke
-[MCMDMServer _keybagStateDidChange]_block_invoke_3
-[MCMDMServer _keybagStateDidChange]_block_invoke_2
mdmd-BuddyFinished
-[MCMDMServer buddyDidFinish]
-[MCMDMServer buddyDidFinish]_block_invoke_2
-[MCMDMServer buddyDidFinish]_block_invoke
/Library/Caches/com.apple.xbs/Sources/ManagedConfigurationTools_Sim/ManagedConfiguration-2031.2/MDM/MCMDMServer.m
-[MCMDMServer notifyNewConfigurationWithCompletion:]
mdmd-NewConfig
-[MCMDMServer notifyNewConfigurationWithCompletion:]_block_invoke
-[MCMDMServer scheduleTokenUpdateWithCompletion:]
mdmd-ScheduleTokenUpdate
-[MCMDMServer scheduleTokenUpdateWithCompletion:]_block_invoke_3
-[MCMDMServer scheduleTokenUpdateWithCompletion:]_block_invoke_2
-[MCMDMServer scheduleTokenUpdateIfNecessaryWithCompletion:]
mdmd-ScheduleTokenUpdateIfNecessary
-[MCMDMServer scheduleTokenUpdateIfNecessaryWithCompletion:]_block_invoke_2
-[MCMDMServer scheduleTokenUpdateIfNecessaryWithCompletion:]_block_invoke
mdmd-PerformOutstandingActivities
-[MCMDMServer performOutstandingActivities]
-[MCMDMServer performOutstandingActivities]_block_invoke_3
-[MCMDMServer performOutstandingActivities]_block_invoke
-[MCMDMServer simulatePushWithCompletion:]
mdmd-SimulatePush
-[MCMDMServer simulatePushIfNetworkTetheredWithCompletion:]
mdmd-SimulatePushNetworkTethered
MDM_ERROR_NOT_NETWORK_TETHERED
-[MCMDMServer simulatePushWithAssertion:completion:]
-[MCMDMServer simulatePushWithAssertion:completion:]_block_invoke_3
-[MCMDMServer simulatePushWithAssertion:completion:]_block_invoke
-[MCMDMServer retryNotNowWithCompletion:]
mdmd-RetryNotNow
-[MCMDMServer retryNotNowWithCompletion:]_block_invoke
mdmd-MigrateMDMWithContext
-[MCMDMServer uprootMDMWithCompletion:]
mdmd-UprootMDM
-[MCMDMServer uprootMDMWithCompletion:]_block_invoke_3
v24@?0@8@"NSError"16
-[MCMDMServer uprootMDMWithCompletion:]_block_invoke
mdmd-ProcessDeviceRequest-%@
com.apple.ManagedConfiguration.PerformDeviceRequest
organizationName
T@"NSString",R,C,N
serverName
memberQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
memberQueueDevAPSConnection
T@"APSConnection",&,N,V_memberQueueDevAPSConnection
memberQueueProdAPSConnection
T@"APSConnection",&,N,V_memberQueueProdAPSConnection
memberQueueIsMDMConfigurationValid
TB,N,V_memberQueueIsMDMConfigurationValid
memberQueueManagingProfileIdentifier
T@"NSString",&,N,V_memberQueueManagingProfileIdentifier
memberQueueIdentity
T^{__SecIdentity=},N,V_memberQueueIdentity
memberQueueServerPinnedSecCertificateRefs
T@"NSArray",&,N,V_memberQueueServerPinnedSecCertificateRefs
memberQueueCheckInPinnedSecCertificateRefs
T@"NSArray",&,N,V_memberQueueCheckInPinnedSecCertificateRefs
memberQueuePinningRevocationCheckRequired
TB,N,V_memberQueuePinningRevocationCheckRequired
memberQueueTopic
T@"NSString",&,N,V_memberQueueTopic
memberQueueServerURL
T@"NSURL",&,N,V_memberQueueServerURL
memberQueueCheckInURL
T@"NSURL",&,N,V_memberQueueCheckInURL
memberQueueOrganizationInfo
T@"NSDictionary",&,N,V_memberQueueOrganizationInfo
memberQueueMDMOptions
T@"NSDictionary",&,N,V_memberQueueMDMOptions
memberQueueAccessRights
Ti,N,V_memberQueueAccessRights
memberQueueUseDevelopmentAPNS
TB,N,V_memberQueueUseDevelopmentAPNS
memberQueuePushMagic
T@"NSString",&,N,V_memberQueuePushMagic
memberQueueSignMessage
TB,N,V_memberQueueSignMessage
memberQueuePushToken
T@"NSData",&,N,V_memberQueuePushToken
memberQueuePollRequested
TB,N,V_memberQueuePollRequested
memberQueueTimerContext
T@"MCTimerContext",&,N,V_memberQueueTimerContext
memberQueuePowerAssertionAssertedNotificationToken
Ti,N,V_memberQueuePowerAssertionAssertedNotificationToken
memberQueuePowerAssertionDeassertedNotificationToken
Ti,N,V_memberQueuePowerAssertionDeassertedNotificationToken
memberQueueCommandUUID
T@"NSString",&,N,V_memberQueueCommandUUID
memberQueueUserSwitchAlreadyInitiated
TB,N,V_memberQueueUserSwitchAlreadyInitiated
memberQueueUseEnrollmentID
TB,N,V_memberQueueUseEnrollmentID
memberQueueEnrollmentID
T@"NSString",&,N,V_memberQueueEnrollmentID
jobQueue
T@"MCJobQueue",&,N,V_jobQueue
memberQueueCachedResponse
T@"NSDictionary",&,N
memberQueueLastResponseWasNotNow
TB,N
executionQueuePushTokenWaitContinuationBlock
T@?,C,N,V_executionQueuePushTokenWaitContinuationBlock
executionQueueIsCheckinInProgress
TB,N,V_executionQueueIsCheckinInProgress
eventQueueBusyCount
Ti,N,V_eventQueueBusyCount
organizationInfo
T@"NSDictionary",C,N
lastResponseWasNotNow
TB,R,N
tokenUpdateScheduled
TB,R,N,GisTokenUpdateScheduled
userSwitchAlreadyInitiated
MDMOptions
PushTokenSentToServerKey
PushTokenDataSentToServerKey
UnlockTokenMigrationDate
UnlockTokenSuperseded
LastUproot
MDMEventQueue
MCMDMXPCProtocol
NSObject
MCMDMClientProtocol
MCMDMServiceDelegate
NSXPCListenerDelegate
MCMDMServicer
MCMDMMigrator
MCMDMServer
MCJobQueueObserver
APSConnectionDelegate
MCMDMServerProtocol
MCMDMEvents
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
getAssertionDescriptionsWithCompletion:
notifyNewConfigurationWithCompletion:
scheduleTokenUpdateWithCompletion:
scheduleTokenUpdateIfNecessaryWithCompletion:
simulatePushWithCompletion:
simulatePushIfNetworkTetheredWithCompletion:
retryNotNowWithCompletion:
migrateMDMWithContext:completion:
uprootMDMWithCompletion:
processDeviceRequest:encodeResponse:completion:
interfaceWithProtocol:
setExportedInterface:
setXpcConnection:
setExportedObject:
resume
listener:shouldAcceptNewConnection:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
xpcConnection
valueForEntitlement:
boolValue
MCErrorWithDomain:code:descriptionArray:errorType:
remoteProcessHasEntitlement:
lacksEntitlementError:
sharedServer
.cxx_destruct
_xpcConnection
initWithReason:
stringByAppendingPathComponent:
defaultManager
fileExistsAtPath:isDirectory:
_moveNonStoreManagedBooksToSystemGroupContainerFromLegacyPath:
_moveNonStoreManagedBooksToSystemGroupContainer
_updateNonStoreBooksManifestForSystemGroupContainer
_updateSkipBackupKeyForNonStoreBooksDirectory
_updateUnlockTokenSecretToClassDIfNeeded
_resetManagedAppRemovability
sharedConfiguration
userMode
removeItemAtPath:error:
contentsOfDirectoryAtPath:error:
count
firstObject
isEqualToString:
fileExistsAtPath:
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
setAttributes:ofItemAtPath:error:
dictionary
dictionaryWithContentsOfFile:
objectForKeyedSubscript:
countByEnumeratingWithState:objects:count:
initWithManifestDictionary:
persistentID
fullPath
hasPrefix:
lastPathComponent
setFullPath:
setObject:forKeyedSubscript:
arrayWithCapacity:
allValues
manifestDictionary
addObject:
writeToFile:atomically:
sharedConnection
isEnterpriseBookBackupAllowed
stringFromService:account:label:description:useSystemKeychain:outError:
removeItemForService:account:label:description:useSystemKeychain:group:
setString:forService:account:label:description:access:group:useSystemKeychain:sysBound:outError:
sharedInstance
recordDateForEvent:
setRemovability:forAppWithBundleID:completion:
enumerateKeysAndObjectsUsingBlock:
sharedMigrator
migrateMDMWithContext:
startOutError:
initWithMachServiceName:
setDelegate:
currentRunLoop
init
setExecutionQueue:
setObserver:
memberQueueIdentity
dealloc
memberQueue
memberQueueServerURL
setMemberQueueServerURL:
memberQueueOrganizationInfo
copy
setMemberQueueOrganizationInfo:
removeObjectForKey:
writeDictToMDMConfigurationFile:
memberQueueMDMOptions
setMemberQueueMDMOptions:
enableActivationLockWithCompletion:
isActivationLockedWithCompletion:
fmipStateWithCompletion:
isEqualToData:
memberQueueLastResponseWasNotNow
objectForKey:
setMemberQueueLastResponseWasNotNow:
setObject:forKey:
MCWriteToBinaryFile:
tokenUpdateCount
memberQueueDevAPSConnection
_setEnabledTopics:
memberQueueProdAPSConnection
setMemberQueueIsMDMConfigurationValid:
setMemberQueueIdentity:
setMemberQueueServerPinnedSecCertificateRefs:
setMemberQueueCheckInPinnedSecCertificateRefs:
setMemberQueuePinningRevocationCheckRequired:
setMemberQueueCheckInURL:
setMemberQueueManagingProfileIdentifier:
setMemberQueueAccessRights:
setMemberQueueUseDevelopmentAPNS:
setMemberQueuePushMagic:
memberQueueForgetCurrentConfiguration
refreshDetailsFromDisk
dataWithContentsOfFile:
MCSafePropertyListWithData:options:format:error:
copyIdentityWithPersistentID:useSystemKeychain:
copyCertificatesWithPersistentIDs:useSystemKeychain:
memberQueueManagingProfileIdentifier
setMemberQueueTopic:
memberQueueTopic
initWithString:
unsignedIntValue
setMemberQueueSignMessage:
memberQueuePushMagic
setMemberQueueUseEnrollmentID:
setMemberQueueEnrollmentID:
memberQueueEnrollmentID
initWithEnvironmentName:namedDelegatePort:
setMemberQueueDevAPSConnection:
mainRunLoop
scheduleInRunLoop:
setMemberQueueProdAPSConnection:
memberQueueUseDevelopmentAPNS
arrayWithObject:
publicToken
setMemberQueuePushToken:
memberQueuePushToken
pushTokenCompletionBlock:
MCErrorWithDomain:code:descriptionArray:suggestion:USEnglishSuggestion:underlyingError:errorType:
checkIn
readConfigurationOutError:
jobQueue
jobDidFinishFromFunction:
executionQueueCheckForOutstandingActivityIsReachabilityEvent:assertion:completionBlock:
fromFunction:enqueueJob:
sharedNetworkObserver
_networkReachabilityDidChange
addNetworkReachableObserver:selector:
buddyDidFinish
cachedResponse
deviceIsLocked
schedulePollingServerForCommandWithAssertion:
memberQueueIsMDMConfigurationValid
isTokenUpdateScheduled
_executionQueueCheckForOutstandingActivityIsReachabilityEvent:assertion:completionBlock:
executionQueueTellServerAboutDeviceTokenWithAssertion:completionBlock:
executionQueue
executionQueuePushTokenWaitContinuationBlock
setExecutionQueuePushTokenWaitContinuationBlock:
MCSHA256Hash
memberQueueLastPushTokenHash
setMemberQueueLastPushTokenHash:
memberQueueIncrementTokenUpdateRequestCount
memberQueuePushMagicMismatchDateMarker
timeIntervalSinceNow
sharedClient
scheduleTokenUpdate
date
initWithDictionary:
setMemberQueuePushMagicMismatchDateMarker:
executionQueuePollServerForCommandWithAssertion:completionBlock:
isUserEnrollment
initWithStatus:isUserEnrollment:isUserChannel:
sendEventLazy
dataUsingEncoding:
setProfileIdentifier:
setType:
systemConnection
performRequest:completion:
setTokenUpdateRequestCountToZero
setCachedResponse:
executionQueueIsCheckinInProgress
setExecutionQueueIsCheckinInProgress:
memberQueueAccessRights
memberQueueCheckInURL
memberQueueCheckInPinnedSecCertificateRefs
memberQueuePinningRevocationCheckRequired
memberQueueSignMessage
userSwitchAlreadyInitiated
setMemberQueueTokenUpdateRequestCount:
isAwaitingDeviceConfigured
numberWithBool:
mutableCopy
memberQueueUseEnrollmentID
dataWithPropertyList:format:options:error:
transactionWithURL:method:
setTimeout:
setUserAgent:
setContentType:
setData:
setIdentity:
setPinnedSecCertificateRefs:
setPinningRevocationCheckRequired:
setCMSSignatureHeaderName:
performSynchronously
error
MCVerboseDescription
statusCode
executionQueueRemoveMDMProfileWithAssertion:
unauthorizedByServerError
memberQueueDecrementTokenUpdateRequestCount
memberQueueTokenUpdateCount
recordData:forEvent:
performOutstandingActivities
memberQueueServerPinnedSecCertificateRefs
_responseDataFromResponseDictionary:
responseData
performCompletionBlock:
sendResponse:completionBlock:
setMemberQueuePollRequested:
_idleResponse
length
malformedRequestErrorResult
setMemberQueueCachedResponse:
stringWithFormat:
executionQueueHandleRequest:withMDMParserOfClass:assertion:completionBlock:
dictionaryWithDictionary:
MCContainsErrorDomain:code:
errorChainFromError:
memberQueueCommandUUID
initWithManagingProfileIdentifier:
setServer:
setMemberQueueCommandUUID:
responseFromBasicResponse:
processRequest:accessRights:assertion:completionBlock:
memberQueueHasOutstandingActivity
memberQueueCachedResponse
intValue
numberWithInt:
isEphemeralMultiUser
memberQueueUserSwitchAlreadyInitiated
setMemberQueueUserSwitchAlreadyInitiated:
simulatePushWithAssertion:completion:
isManagedByMDM
managedAppIDs
setBundleIdentifier:
performRequest:error:
arrayWithObjects:count:
organizationInfo
serverURL
host
setUserSwitchAlreadyInitiated:
assertionDescriptions
appendFormat:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
organizationName
serverName
setServerURL:
setOrganizationInfo:
MDMOptions
setMDMOptions:
lastResponseWasNotNow
setLastResponseWasNotNow:
sendResponseSynchronously:outStatusCode:outError:
hasOutstandingActivity
_keybagStateDidChange
willSwitchUser
setMemberQueue:
memberQueuePollRequested
memberQueueTimerContext
setMemberQueueTimerContext:
memberQueuePowerAssertionAssertedNotificationToken
setMemberQueuePowerAssertionAssertedNotificationToken:
memberQueuePowerAssertionDeassertedNotificationToken
setMemberQueuePowerAssertionDeassertedNotificationToken:
setJobQueue:
eventQueueBusyCount
setEventQueueBusyCount:
_memberQueueIsMDMConfigurationValid
_memberQueuePinningRevocationCheckRequired
_memberQueueUseDevelopmentAPNS
_memberQueueSignMessage
_memberQueuePollRequested
_memberQueueUserSwitchAlreadyInitiated
_memberQueueUseEnrollmentID
_executionQueueIsCheckinInProgress
_memberQueueAccessRights
_memberQueuePowerAssertionAssertedNotificationToken
_memberQueuePowerAssertionDeassertedNotificationToken
_eventQueueBusyCount
_memberQueue
_memberQueueDevAPSConnection
_memberQueueProdAPSConnection
_memberQueueManagingProfileIdentifier
_memberQueueIdentity
_memberQueueServerPinnedSecCertificateRefs
_memberQueueCheckInPinnedSecCertificateRefs
_memberQueueTopic
_memberQueueServerURL
_memberQueueCheckInURL
_memberQueueOrganizationInfo
_memberQueueMDMOptions
_memberQueuePushMagic
_memberQueuePushToken
_memberQueueTimerContext
_memberQueueCommandUUID
_memberQueueEnrollmentID
_jobQueue
_executionQueuePushTokenWaitContinuationBlock
_writerQueue
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v28@0:8i16@?20
v36@0:8@16B24@?28
v24@0:8@?<v@?@"NSError">16
v28@0:8i16@?<v@?@"NSError">20
v36@0:8@"NSDictionary"16B24@?<v@?@"NSError"@"NSDictionary"@"NSData">28
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v24@0:8@16
v16@0:8
@"NSXPCConnection"
v20@0:8i16
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v20@0:8B16
B24@0:8^@16
v36@0:8B16@20@?28
v32@0:8@16@?24
@40@0:8@16^q24^@32
v48@0:8@16#24@32@?40
i16@0:8
^{__SecIdentity=}16@0:8
v24@0:8^{__SecIdentity=}16
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@"APSConnection"
@"NSString"
^{__SecIdentity=}
@"NSArray"
@"NSURL"
@"NSDictionary"
@"NSData"
@"MCTimerContext"
@"MCJobQueue"
Accepted new connection.
MDM migrating...
Unable to create unlock escrow during erase-context migration: %{public}@
Found non-store managed books in seed-only system location. Migrating...
MDM completed migration.
Migrating non-store managed books to system group container...
Moving legacy non-store managed books directory...
Failed to move legacy non-store managed books with error %{public}@
Failed to delete legacy non-store managed books with error %{public}@
Failed to move legacy non-store managed books with no error
Failed to set permissions on new non-store managed books directory with error %{public}@
Removing empty legacy non-store managed books...
Failed to delete empty legacy non-store managed books with error %{public}@
Failed to fix permissions of device's MDM managed non-store books with errors %{public}@
Completed non-store managed books system group container migration.
Beginning update of non-store managed books manifest...
Completed non-store managed books manifest update.
Migrating enterprise book backup flag...
Failed to set backup exclusion on enterprise books directory
Set backup exclusion on enterprise books directory to %d
Could not get unlock token item: %{public}@
Could not set unlock token item: %{public}@
Not migrating old MDM secret because we already have a new one!
Cleaning up managed app removability...
Could not set removability for bundle identifier: %{bundleIdentifier}@, error: %{public}@
mdmd starting...
mdmd stopping.
Could not get device locator state. Error: %{public}@
Could not get activation lock state. Error: %{public}@
Enabling activation lock.
Could not enable activation lock. Error: %{public}@
MCMDMServer: memberQueueForgetCurrentConfiguration: clearing push topics! and forgetting current APNS configuration!
MCMDMServer: readConfigurationOutError:
MCMDMServer: readConfigurationOutError: doneblock:
MCMDMServer: readConfigurationOutError: doneblock: creating Dev APNS connection
MCMDMServer: readConfigurationOutError: doneblock: creating Prod APNS connection
MCMDMServer: readConfigurationOutError: doneblock: valid MDM configuration
MCMDMServer: readConfigurationOutError: doneblock: using Dev APNS, enabling topics: %{public}@
MCMDMServer: readConfigurationOutError: doneblock: using Prod APNS, enabling topics: %{public}@
Waiting for push token to be assigned to this device...
MCMDMServer: readConfigurationOutError: doneblock: No valid MDM installation found. MDM will not listen to push messages. Error: %{public}@
Valid MDM configuration found.
No valid MDM configuration found. Error: %{public}@
No valid MDM configuration found.
Not polling in response to reachability change. Waiting for device to unlock first.
Scheduling poll of MDM server.
No cached response to send.
Checking for outstanding activity. Reachability event: %d
Push token received.
Push token data: '%{public}@' Topic: '%{public}@' Magic: '%{public}@'
Push token is new, need to update
Push token is not new, don't need to update
Received push notification.
Push notification data: %{public}@
Ignoring push notification with mismatched topic: %{public}@
Rejecting MDM push dictionary because it does not contain the "%{public}@" key
Rejecting MDM push dictionary because the "%{public}@" key is not a string.
Rejecting MDM push dictionary because it does not have the right magic string.
Push magic mismatch marker already exists with date: %{public}@
Existing push magic mismatch marker is older than %f seconds (%f seconds old), scheduling token update
Setting push magic mismatch marker with date: %{public}@
Ignoring extra keys in push dictionary: %{public}@
Removing MDM profile.
Could not remove MDM profile: %{public}@
Telling server about new device token.
Telling MDM Check-In Server about new device token.
User switch already initiated. Not telling server about new token right now.
The token update dictionary has Enrollment ID: %{public}@
The token update dictionary has UDID: %{public}@
The certificate that the device is using to authenticate itself to the server has the following properties: %{public}@
Cannot tell MDM server about updated token. Error: %{public}@
Transaction completed. Status: %d
Cannot tell server of a new push token. Error: %{public}@
Polling MDM server %{public}@ for next command.
User switch already initiated. Not polling the server for commands right now.
Could not send response to MDM server. Error: %{public}@
Transaction completed. Status: %d, ResponseUUID: %{public}@
Could not parse command. Error: %{public}@
Server has no commands for this device.
Command Status: %{public}@
Error: %{public}@
Command Status: %{public}@
Processing command UUID: %{public}@
Network reachability has changed.
<%s %s:%lu>
Asked to poll server if tethered, but no MDM installation exists.
Last response was not a NotNow. Ignoring poll request.
Uprooting MDM installation
Could not stop managing app: %{public}@, error: %{public}@
Will switch user. Unfinished assertions:
%{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>19A603013</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>mdmd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.managedconfiguration.mdmd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>12A8179f</string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>14.2</string>
<key>DTSDKBuild</key>
<string>18K5047c</string>
<key>DTSDKName</key>
<string>appletvsimulator14.2.internal</string>
<key>DTXcode</key>
<string>1200</string>
<key>DTXcodeBuild</key>
<string>12A8179f</string>
<key>MinimumOSVersion</key>
<string>14.2</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<false/>
</dict>
<key>NSMainNibFile</key>
<string>MainWindow</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>application-identifier</key>
<string>com.apple.managedconfiguration.mdmd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.GAX.SPI</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.appletv.pbs.allow-active-application</key>
<true/>
<key>com.apple.appletv.pbs.osupdate-service-access</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.dmd-access</key>
<true/>
<key>com.apple.dmd.operation.apply-redemption-code</key>
<true/>
<key>com.apple.dmd.operation.begin-transaction</key>
<true/>
<key>com.apple.dmd.operation.clear-activation-lock-bypass-code</key>
<true/>
<key>com.apple.dmd.operation.clear-device-passcode</key>
<true/>
<key>com.apple.dmd.operation.clear-restrictions-password</key>
<true/>
<key>com.apple.dmd.operation.delete-user</key>
<true/>
<key>com.apple.dmd.operation.disable-lost-mode</key>
<true/>
<key>com.apple.dmd.operation.enable-lost-mode</key>
<true/>
<key>com.apple.dmd.operation.end-transaction</key>
<true/>
<key>com.apple.dmd.operation.erase-device</key>
<true/>
<key>com.apple.dmd.operation.fetch-activation-lock-bypass-code</key>
<true/>
<key>com.apple.dmd.operation.fetch-apps</key>
<true/>
<key>com.apple.dmd.operation.fetch-available-os-updates</key>
<true/>
<key>com.apple.dmd.operation.fetch-certificates</key>
<true/>
<key>com.apple.dmd.operation.fetch-device-properties</key>
<true/>
<key>com.apple.dmd.operation.fetch-location</key>
<true/>
<key>com.apple.dmd.operation.fetch-managed-books</key>
<true/>
<key>com.apple.dmd.operation.fetch-os-update-status</key>
<true/>
<key>com.apple.dmd.operation.fetch-profiles</key>
<true/>
<key>com.apple.dmd.operation.fetch-provisioning-profiles</key>
<true/>
<key>com.apple.dmd.operation.fetch-restrictions</key>
<true/>
<key>com.apple.dmd.operation.fetch-security-information</key>
<true/>
<key>com.apple.dmd.operation.fetch-unlock-token</key>
<true/>
<key>com.apple.dmd.operation.fetch-users</key>
<true/>
<key>com.apple.dmd.operation.install-app</key>
<true/>
<key>com.apple.dmd.operation.install-managed-book</key>
<true/>
<key>com.apple.dmd.operation.install-profile</key>
<true/>
<key>com.apple.dmd.operation.install-provisioning-profile</key>
<true/>
<key>com.apple.dmd.operation.invite-user-to-vpp</key>
<true/>
<key>com.apple.dmd.operation.lock-device</key>
<true/>
<key>com.apple.dmd.operation.log-out-user</key>
<true/>
<key>com.apple.dmd.operation.play-lost-mode-sound</key>
<true/>
<key>com.apple.dmd.operation.refresh-cellular-plans</key>
<true/>
<key>com.apple.dmd.operation.remove-app</key>
<true/>
<key>com.apple.dmd.operation.remove-managed-book</key>
<true/>
<key>com.apple.dmd.operation.remove-profile</key>
<true/>
<key>com.apple.dmd.operation.remove-protected-profile</key>
<true/>
<key>com.apple.dmd.operation.remove-provisioning-profile</key>
<true/>
<key>com.apple.dmd.operation.request-airplay-mirroring</key>
<true/>
<key>com.apple.dmd.operation.restart-device</key>
<true/>
<key>com.apple.dmd.operation.schedule-os-update</key>
<true/>
<key>com.apple.dmd.operation.schedule-os-update-scan</key>
<true/>
<key>com.apple.dmd.operation.set-app-analytics-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-app-associated-domains</key>
<true/>
<key>com.apple.dmd.operation.set-app-associated-domains-enable-direct-downloads</key>
<true/>
<key>com.apple.dmd.operation.set-app-configuration</key>
<true/>
<key>com.apple.dmd.operation.set-app-options</key>
<true/>
<key>com.apple.dmd.operation.set-app-removability</key>
<true/>
<key>com.apple.dmd.operation.set-app-vpn-uuid</key>
<true/>
<key>com.apple.dmd.operation.set-bluetooth-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-data-roaming-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-device-name</key>
<true/>
<key>com.apple.dmd.operation.set-diagnostic-submission-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-maximum-resident-users</key>
<true/>
<key>com.apple.dmd.operation.set-passcode-lock-grace-period</key>
<true/>
<key>com.apple.dmd.operation.set-personal-hotspot-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-user-language</key>
<true/>
<key>com.apple.dmd.operation.set-user-locale</key>
<true/>
<key>com.apple.dmd.operation.set-voice-roaming-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-wallpaper</key>
<true/>
<key>com.apple.dmd.operation.shut-down-device</key>
<true/>
<key>com.apple.dmd.operation.start-managing-app</key>
<true/>
<key>com.apple.dmd.operation.stop-airplay-mirroring</key>
<true/>
<key>com.apple.dmd.operation.stop-managing-app</key>
<true/>
<key>com.apple.dmd.operation.stop-managing-books</key>
<true/>
<key>com.apple.dmd.operation.trigger-diagnostics</key>
<true/>
<key>com.apple.dmd.operation.update-app</key>
<true/>
<key>com.apple.dmd.operation.validate-applications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.configurationprofiles</key>
<array>
<string>Inspection</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>SilentNonUIInstallation</string>
<string>UIInstallation</string>
<string>CloudLockedRemoval</string>
</array>
<key>com.apple.managedconfiguration.profiled.get</key>
<array>
<string>MachineInfo</string>
<string>ManagedApplications</string>
<string>NetworkExtension</string>
<string>WiFiNetworks</string>
</array>
<key>com.apple.managedconfiguration.profiled.provisioningprofiles</key>
<array>
<string>Installation</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>Validation</string>
</array>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ActivationLock</string>
<string>ActivationRecord</string>
<string>Certificates</string>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
<string>Passcode</string>
<string>Safari</string>
<string>UserSettings</string>
</array>
<key>com.apple.managedconfiguration.profiled.usercompliance</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.keychain.sysbound</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.lockdown.ignore-mc-name-restriction</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>AppleJPEGDriverUserClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.wipedevice</key>
<true/>
<key>com.apple.timed</key>
<true/>
<key>com.apple.tzlink.allow</key>
<true/>
<key>com.apple.umd.usersession.provision</key>
<true/>
<key>com.apple.wipedevice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
