@333333
@(#)PROGRAM:CoreMediaStream  PROJECT:CoreMediaStream-310.2.160
33333cs@
?456789:;<=
 !"#$%&'()*+,-./0123
MSASPhoneInvitationDebugFakeAlbumUUID
stateMachine
T@"MSASStateMachine",&,N,V_stateMachine
idsService
T@"IDSService",&,N,V_idsService
sendMessageIdentifierToPhone
T@"NSMutableDictionary",&,N,V_sendMessageIdentifierToPhone
IDS: Failed to send message from %@ for album %@ with identifier %@. Error: %@ Info: %@
IDS: Failed to send message. Error: %@ Info: %@
albumData
com.apple.private.alloy.photostream
MSMSDServerSideConfigurationDidChangeNotification
T@"<MSMediaStreamDaemonDelegate>",N,V_delegate
mme.streams.application.configVersion
ERROR_PUBLISHER_MISSING
storageProtocolURL
T@"NSURL",&,N,V_storageProtocolURL
publishTargetByteCount
Tq,N,V_publishTargetByteCount
publishBatchSize
Ti,N,V_publishBatchSize
T@"<MSPublisherDelegate>",N,V_delegate
T@"<MSPublisherDelegate>",N
ERROR_PUBLISHER_ABORTED
ERROR_PUBLISHER_SEND_QUEUE_MISMATCH
4034
retryafter
code
ERROR_PUBLISHER_ASSET_REJECTED
ERROR_PUT_CONNECTION_INVALID_STORAGE_URL
ERROR_PUT_CONNECTION_INVALID_ASSET_HASH
ERROR_PUT_CONNECTION_INVALID_STREAMS_RESPONSE
%lld
, %lld
ERROR_PUBLISHER_CANNOT_COMPUTE_HASH
ERROR_PUBLISHER_MISSING_HASH
ERROR_PUBLISHER_ASSET_TOO_LARGE
ERROR_PUBLISHER_ASSET_ZERO_SIZE
ERROR_PUBLISHER_UTI_REJECTED_P_UTI
v32@?0@"MSAssetCollection"8Q16^B24
 for the first time
, again
public.png
public.camera-raw-image
public.jpeg
public.tiff
nextActivityDateByPersonIDKey
targetRetrievalByteCount
Tq,N,V_targetRetrievalByteCount
retrievalBatchSize
Ti,N,V_retrievalBatchSize
T@"<MSSubscriberDelegate>",N,V_delegate
hash
T@"<MSSubscriberDelegate>",N
ERROR_SUBSCRIBER_NOT_AUTH
ERROR_SUBSCRIBER_ABORTED
Unexpected state
-[MSSubscriber retrieveAssets:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSSubscriber.m
[asset isKindOfClass:[MSAsset class]]
ERROR_SUBSCRIBER_ASSET_INVALID
subs
poll
Idle
RetryRetrieving
Retrieving
RetryReauth
WaitingForReauth
RetryFetchingNewList
FetchingNewList
MSAssetMetadataFileSize
MSAssetMetadataPixelWidth
MSAssetMetadataPixelHeight
MSAssetMetadataDeviceID
MSAssetMetadataDateContentModified
MSAssetMetadataDateContentCreated
MSAssetMetadataSourceLibraryID
MSAssetMetadataSourceItemID
MSAssetMetadataItemID
MSAssetMetadataStreamIDKey
MSAssetMetadataSHA1HashKey
MSAssetMetadataSourceiCloudPhotoLibraryEnabledKey
MSAssetMetadataSourceContainerTypeKey
cameraRoll
MSAssetMetadataSourceContainerIDKey
MSAssetMetadataSourceContainerDisplayNameKey
MSAssetMetadataDeviceDisplayNameKey
MSAssetMetadataRasterToDisplayRotationAngleKey
MSAssetMetadataAssetFileTransferUUID
MSAssetMetadataAssetType
original
thumbnail
derivative
fullsize-derivative
MSAssetMetadataAssetTypeFlags
MSAssetMetadataHTTPURL
MSAssetMediaAssetType
T@"NSString",&,N,V_GUID
masterAssetHash
T@"NSData",&,N,V_masterAssetHash
T@"NSString",&,N,V_path
T@"NSURL",&,N,V_MMCSURL
T@"NSData",&,N,V_fileData
assetCollectionGUID
T@"NSString",&,N,V_assetCollectionGUID
T@"NSDate",&,N,V_batchCreationDate
photoCreationDate
T@"NSDate",&,N,V_photoCreationDate
T@"NSError",&,N,V_error
mediaAssetType
TQ,N,V_mediaAssetType
TB,N,V_assetDataAvailableOnServer
T@"NSData",&,N
T@"NSString",&,N
TQ,N
MMCSUTI
T@"NSString",&,N,V_type
MMCSItemID
MMCSHash
T@"NSData",&,N,V_fileHash
MMCSItemSize
TQ,N,V_protocolFileSize
MMCSError
T@"NSError",&,N
T@"NSString",&,N,V_MMCSAccessHeader
MMCSAccessHeaderTimeStamp
T@"NSDate",&,N,V_MMCSAccessHeaderTimeStamp
T@"NSString",&,N,V_MMCSReceipt
MMCSItemFlags
TI,N
TQ,R
T#,R
T@"NSDate",&,N
Failed to archive an MSAsset object. Error: %@ Info: %@
assetDataAvailableOnServer
userInfo
batchCreationDate
protocolFileSize
MMCSReceipt
MMCSAccessHeader
type
metadata
  protocol file size:%lld
  Asset data is %@ available on server
  Asset is video
  Media Asset Type %ld
  Asset is photo
  Asset creation date: %@
  Batch creation date: %@
  File data present.
  MMCS Receipt: %@
  MMCS URL: %@
  MMCS Header set on: %@
  MMCS header:%@
  file hash: %@
  master asset hash: %@
  type: %@
metadata: %@
Path: %@ 
Asset collection GUID: %@ 
 GUID: %@ 
assetCollectionID
T@"NSString",&,N,V_assetCollectionID
T@"NSString",&,N,V_ctag
masterAsset
T@"MSAsset",&,N,V_masterAsset
T@"NSData",R,W,N
T@"NSArray",&,N
T@"NSString",&,N,V_fileName
wasDeleted
TB,N,V_wasDeleted
T@"NSDate",&,N,V_serverUploadedDate
Tq,N,V_initialFailureDate
initialFailureDate
fileName
derivedAssets
  Derived assets: %@
  Master asset: %@
 Server uploaded date: %@
 File name: %@
 ctag: %@
  Asset collection ID: %@
%@+%lu
manifest.plist
queue.sqlite3
derivatives.sqlite3
quarantine.sqlite3
protocol
mmcs
config
serverconfig.plist
albumshare
Daemon.sqlite
PersonID.sqlite
mmcs-pub
Model.sqlite
mmcs-sub
perf
perf.sqlite
enabled
TB,N,V_enabled
MSSHA1HashForFileDescriptor
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSUtilities.m
size <= UINT32_MAX
MSSHA1HashForData
length < UINT32_MAX
MSDaemonErrorDomain
MSStreamsPutConnectionErrorDomain
MSStreamsGetConnectionErrorDomain
MSPublishStorageProtocolErrorDomain
MSSubscribeStorageProtocolErrorDomain
MSPublisherErrorDomain
MSSubscriberErrorDomain
MSSharingErrorDomain
MSDeleterErrorDomain
MSASStateMachineErrorDomain
MSASSubscriberErrorDomain
MSASProtocolErrorDomain
MSASAssetTransferErrorDomain
MSASAssetUploaderErrorDomain
MSASAssetDownloaderErrorDomain
MSASModelErrorDomain
B16@?0@"NSError"8
Retry-After
MSErrorIsPrimary
...Underlying error:
UserInfo: %@
Sugg    : %@
Desc    : %@
Domain  : %@
Code    : %ld
-[NSString(MSStringUtilities) MSUniqueID]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSStringUtilities.m
len <= UINT32_MAX
Cannot create temporary file path
MSTempFilePathCannotCreatePath
Cannot allocate temporary file path
MSTempFilePathCannotAllocateTemplate
asset-XXXXXX
Cannot allocate space for hex conversion buffer
unable to allocate memory for length (%lu)
data is too large to encode
Unable to allocate memory for length (%lu)
CoreMediaStream framework has not been initialized before use.
MSCoreMediaStreamNotInitializedException
width
size
fingerprint
ERROR_PUT_CONNECTION_MISSING_ASSET_FIELD_P_FIELD
ERROR_GET_CONNECTION_INVALID_FIELD_P_NAME
ERROR_GET_CONNECTION_MISSING_CHUNK
chunk_%04d.plist
T@"<MSStreamsProtocolDelegate>",N,V_delegate
T@"NSString",R,N,V_personID
putURL
T@"NSURL",R,W,N
getURL
resetURL
reauthorizeURL
uploadCompleteURL
deleteURL
-[MSStreamsProtocol abort]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSStreamsProtocol.m
%@/streams/deletemetadata
%@/streams/uploadcomplete
%@/streams/gettokens
%@/streams/reset
%@/streams/putmetadata
%@/streams/getmetadata
engine
T^{_mmcs_engine=},R,N,V_engine
T@"NSString",R,C
-[MSMMCSProtocol _requestCompleted]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSMMCSProtocol.m
-[MSMMCSProtocol _putItemDone:putReceipt:error:]
-[MSMMCSProtocol _getItemDone:path:error:]
-[MSMMCSProtocol _getFileDescriptorFromItem:]
com.apple.Dataclass.MediaStream
nextFileID
T@"<MSPublishStorageProtocolDelegate>",N,V_delegate
superclass
description
T@"<MSPublishStorageProtocolDelegate>",N
ERROR_PUBLISH_STORAGE_CANNOT_QUEUE
ERROR_PUBLISH_STORAGE_NEED_RESUBMISSION
ERROR_PUBLISH_STORAGE_CANNOT_PUBLISH
T@"<MSSubscribeStorageProtocolDelegate>",N,V_delegate
T@"<MSSubscribeStorageProtocolDelegate>",N
ERROR_SUBSCRIBER_CANNOT_GET_ASSET
ERROR_SUBSCRIBER_BAD_TOKEN
error
asset
ERROR_SUBSCRIBER_CANNOT_RETRIEVE
ERROR_SUBSCRIBER_ASSET_BAD_SIGNATURE
mmcsurl
assets
MSPSPCSendMetadataAsync
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSPublishStreamsProtocolCore.m
messageAssetCollectionsArray
POST
rasterToDisplayRotationAngle
sourceContainerDisplayName
sha1
%llu
checksum
assetcollid
MSPSPCUCSendUploadCompleteAsync
outputArray
receipt
displayname
devices
streamid
tokens
mmcsheader
ERROR_GET_CORE_CONNECTION_BLOCK_SHORT
_didReceiveData
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSSubscribeStreamProtocolCore.m
ERROR_GET_CORE_CONNECTION_INVALID_CHUNK_SIZE
ERROR_GET_CORE_CONNECTION_BAD_STATE
derivatives
deviceDisplayName
dateContentModified
dateContentCreated
bytecount
deviceid
delete
server-uploadeddate
mmcsheaders
errorcode
stream-metadata-end
asset-metadata
reset
ERROR_GET_CORE_CONNECTION_BAD_FIELD_P_FIELD
ctag
ERROR_GET_CORE_CONNECTION_BAD_PART_TYPE
sharing-status
stream-metadata-begin
parttype
ERROR_GET_CORE_CONNECTION_BAD_CHUNK_TYPE
streamsProtocolCoreErrorDomain
MSPublishStreamsProtocolCoreErrorDomain
MSSubscribeStreamsProtocolCoreErrorDomain
MSServerSideConfigCoreErrorDomain
MSDeleteStreamsProtocolCoreErrorDomain
CoreMediaStream
com.apple.CoreMediaStream
hasRetryAfterSeconds
TB,N
Tq,N,V_retryAfterSeconds
hasMpsAction
Ti,N,V_mpsAction
hasIcplAction
Ti,N,V_icplAction
hasVersion
Tq,N,V_version
version
icplAction
NoICPLAct
PromptToEnableICPL
AutomaticEnableICPL
mpsAction
NoMPSAct
PromptToDisableMPS
AutomaticDisableMPS
(unknown: %i)
retryAfterSeconds
%@ %@
MMCSURL
fileData
fileSize
pixelWidth
pixelHeight
deviceID
sourceLibraryID
sourceItemID
itemID
streamID
SHA1
sourceContainerType
sourceContainerID
sourceiCloudPhotoLibraryEnabled
collId
deleted
serverUploadedDate
MSSPCStartHTTPTransaction
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSStreamsProtocolCore.m
method
properties
_scheduleTimer
timer
x-apple-mme-streams-config-version
ERROR_CONNECTION_CORE_FATAL_P_RESPONSE
ERROR_CONNECTION_CORE_FORBIDDEN_ERROR
ERROR_CONNECTION_CORE_AUTH_FAILED_ERROR
ERROR_CONNECTION_CORE_FAILED_SERVER_ERROR
[present]
chunked
authorization
X-MobileMe-AuthToken %@
%@:%@
x-mme-client-info
x-apple-mme-streams-client-udid
x-apple-mme-streams-client-token
MSSPCCreateHexStringFromData
x-apple-mme-streams-version
kfjVrXr0t5Dl
ERROR_CONNECTION_CORE_NO_URL_ERROR
MSSPCCreateDataFromHexString
(length & 1) == 0
T@"NSString",&,N,V_streamID
Stream ID: %@
CTAG: %@
pushToken
UDID
clientInfo
authToken
MSPCUCreateBase64StringFromData
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSProtocolCoreUtilities.m
encodedLength >= length
destBuf
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
0123456789abcdef
hasMPSDeviceID
TB,R,N
mPSDeviceID
T@"NSString",&,N,V_mPSDeviceID
hasICPLDeviceID
T@"NSString",&,N,V_iCPLDeviceID
hasBackupDeviceID
backupDeviceID
T@"NSString",&,N,V_backupDeviceID
hasBackupDeviceUUID
backupDeviceUUID
T@"NSString",&,N,V_backupDeviceUUID
hasBackupDeviceUDID
backupDeviceUDID
T@"NSString",&,N,V_backupDeviceUDID
hasOriginalLibrarySize
originalLibrarySize
Tq,N,V_originalLibrarySize
OriginalLibrarySize
BackupDeviceUDID
BackupDeviceUUID
BackupDeviceID
iCPLDeviceID
MPSDeviceID
Failed to read file for hashing.
T@"<MSServerSideConfigProtocolDelegate>",N,V_delegate
%@/streams/configuration
SERVER_CONFIG_INVALID
MSServerSideConfigChanged
T@"NSDictionary",&,N
debugDescription
mme.streams.client.bidirectionalSharingOnly
mme.streams.client.maxFriends
mme.streams.client.maxPhotosOwner
mme.streams.client.maxPhotosShared
mme.streams.client.pubMaxUploadBatchCount
mme.streams.client.pubUploadBatchTargetSize
mme.streams.client.pubMaxErrorRetryCount
supportedAssets
assetType
maxFileSizeMB
mme.streams.client.subMaxDownloadBatchCount
mme.streams.client.subDownloadBatchTargetSize
mme.streams.client.subMaxErrorRetryCount
mme.streams.client.maxActiveTimeAfterPush
mme.streams.client.maxActiveTimeAfterLossOfForeground
mme.streams.client.maxActiveTimeAfterGlobalResetSync
firstName
personID.plist
personIDToPersonInfoDictionary
T@"NSMutableDictionary",&,N,V_personIDToPersonInfoDictionary
pathForPersonInfoDictionary
T@"NSString",&,N,V_pathForPersonInfoDictionary
personID
T@"MSMediaStreamDaemon",N,V_daemon
MSRPCReauthorizeAsync
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSReauthorizeProtocolCore.m
messageDict
Tq,R
update or ignore Queue set size = ?, object = ?, errorCount = ? where rowid = ?;
-[MSObjectQueue commitObjectsWrappers:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSObjectQueue.m
objectDataLength <= INT_MAX
Failed to archive an MSObjectWrapper object. Error: %@ Info: %@
commitObjectWrappers
update or ignore Queue set errorCount = ? where rowid = ?;
commitErrorCountsForObjectWrappers
delete from Queue;
removeAllObjectWrappersFromQueue
delete from Queue where rowid = ?;
removeObjectWrappersFromQueue
select rowid, size, errorCount, object from Queue order by errorCount desc limit ?;
allObjectsWrapperOrderedByDescendingErrorCountMaxCount
select rowid, size, errorCount, object from Queue where size != 0 order by size asc limit ?;
smallestObjectReferencesTargetTotalSize
select rowid, size, errorCount, object from Queue where size = 0 limit ?;
objectWrappersWithZeroSizeMaxCount
select rowid, size, errorCount, object from Queue limit ?;
allObjectWrappersMaxCount
insert into Queue (size, object) values (?, ?);
-[MSObjectQueue appendObjectWrappers:]
appendObjectWrappers
select count(*) from Queue;
-[MSObjectQueue _statementLabel:query:]
create table if not exists Properties(
   key             text primary key,
   value           text
create table if not exists Queue (
   size            integer,
   object          blob,
   errorCount      integer
create index if not exists QueueBySize on Queue (size asc);
insert or replace into Properties (key, value) values ('version', '0');
Tq,N,V_size
uniqueID
Tq,N,V_uniqueID
object
T@"<NSCoding>",R,N,V_object
Ti,N,V_errorCount
delegate
T@"<MSBackoffManagerDelegate>",N,V_delegate
Td,N,V_initialInterval
Td,N,V_backoffFactor
Td,N,V_randomizeFactor
maxBackoffInterval
Td,N,V_maxBackoffInterval
Td,N,V_currentInterval
T@"NSDate",&
T@"NSDate",&,V_retryAfterDate
nextExpiryDate
currentInterval
randomizeFactor
backoffFactor
initialInterval
supportsSecureCoding
_userManifest
T@"NSMutableDictionary",&,N,V_userManifest
hasDeactivated
TB,N,V_hasDeactivated
-[MSCupidStateMachine _forget]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSCupidStateMachine.m
-[MSCupidStateMachine _abort]
-[MSCupidStateMachine _updateMasterManifest]
MMCSRetryAfterDate
MMCSBackoffDate
MMCSBackoffInterval
streamsRetryAfterDate
streamsBackoffDate
streamsBackoffInterval
batchSize
Ti,N,V_batchSize
T@"<MSDeleterDelegate>",N,V_delegate
T@"<MSDeleterDelegate>",N
ERROR_DELETER_ABORTED
nextActivityDateByPersonID
T@"<MSDeleteStreamsProtocolDelegate>",D,N
fileHash
deleteResult
UUID
MSDSPCSendDeletionRequestAsync
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSDeleteStreamsProtocolCore.m
messageDeleteArray
success
ERROR_DELETE_CORE_BAD_FIELD_P_FIELD
ownerEmail
T@"NSString",&,N,V_ownerEmail
T@"NSString",&,N,V_ownerFullName
ownerPersonID
T@"NSString",&,N,V_ownerPersonID
T@"NSString",&,N,V_ownerFirstName
T@"NSString",&,N,V_ownerLastName
TB,N,V_ownerIsWhitelisted
Ti,N,V_relationshipState
foreignCtag
T@"NSString",&,N,V_foreignCtag
publicURLString
T@"NSString",&,N,V_publicURLString
T@"NSDictionary",&,N,V_metadata
T@,&,N,V_context
isFamilySharedAlbum
TB,N,V_isFamilySharedAlbum
useForeignCtag
 Family shared album
 Public URL: %@
 metadata: %@
 URL: %@
 foreign ctag: %@
 Relationship: %d
 ctag: %@
 subscription date: %@
 owner is whitelisted: %d
 owner: %@ (%@ %@)
 GUID: %@
familySharedAlbum
context
urlString
relationshipState
ownerIsWhitelisted
subscriptionDate
ownerFullName
ownerLastName
ownerFirstName
allowcontributions
phoneInvitationToken
creationDate
inviterAddress
unknown
pendingUploadGUID
batchGUID
batchDateCreated
dateCreated
originalPaths
sourceItemIdentifier
sourceContainerIdentifier
sourceLibraryIdentifier
videoDuration
locationISO6709
mediaGroupUUID
videoComplStillDisplayTime
videoComplDuration
playback-style-identifier
autoloop
playback-variation
GUID
T@"NSArray",&,N,V_assets
T@,&,N,V_userInfo
Tq,N,V_photoNumber
T@"NSDate",&,N,V_timestamp
T@"NSString",&,N,V_personID
fullName
lastName
isDeletable
TB,N,V_isDeletable
TB,N,V_isMine
hasComments
TB,N,V_hasComments
photoNumber
isMine
path
albumGUID
 Assets:
 collection metadata: %@
 Has comments: %d
 Time: %@
 photo number: %lld
 isMine=%@ isDeletable=%@
 email = %@
 personID = %@
 full name = %@
 first,last name: %@,%@
 album GUID: %@
mapQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_mapQueue
personIDToStateMachineMap
T@"NSMutableDictionary",&,N,V_personIDToStateMachineMap
personIDToDelegateMap
T@"NSMutableDictionary",&,N,V_personIDToDelegateMap
daemonModel
T@"MSASDaemonModel",&,N,V_daemonModel
busyCount
Ti,N,V_busyCount
nextUpdateDateByPersonID
T@"NSMutableDictionary",&,N,V_nextUpdateDateByPersonID
T@"<MSAlbumSharingDaemonDelegate>",W,N,V_delegate
T@"MSASStateMachine",N
-[MSAlbumSharingDaemon modelForPersonID:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/AlbumSharing/MSAlbumSharingDaemon.m
[delegate conformsToProtocol:@protocol(MSASModel)]
Ti,N
maxGroupedCallbackEventStaleness
-[MSAlbumSharingDaemon existingModelForPersonID:]
MSAlbumSharingDaemon map queue
MSAlbumSharingDaemon work queue
MSASPlatform
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/AlbumSharing/MSASPlatform.m
_thePlatform
isGlobalResetSync
isAlbumResetSync
isLocalChange
eventIsDueToAlbumDeletion
eventIsDueToAssetCollectionDeletion
notInteresting
isErrorRecovery
info
retval
resetSync
invitationGUID
albumFlags
assetGUID
albums
newCtag
assetCollection
assetCollections
assetCollectionGUIDs
successfulAssetCollections
failedAssetCollections
failedAssetCollectionsAndErrors
sharingRelationship
sharingRelationships
sharingRelationshipGUID
errorCount
commandRetryCount
isUIForeground
lastCommentID
commentPosition
comments
commentsChange
commentGUID
lastViewedDate
albumState
assetCollectionState
scaleFactor
moveLastViewedAssetCollection
event
accessControlGUID
accessControl
params
commandWasRequeued
urlExpiration
modelRefresh
modelRefreshContentOfAlbumWithGUID
modelRefreshAccessControlListOfAlbumWithGUID
modelRefreshCommentsForAssetCollectionWithGUID
modelAddAlbum
modelModifyAlbumMetadata
modelDeleteAlbumWithGUID
modelMarkAlbumGUIDAsViewed
modelSubscribeToAlbumWithGUID
acceptInvitationWithToken
markAsSpamInvitationWithToken
markAsSpamInvitationWithGUID
markAsSpamAlbumWithGUID
modelUnsubscribeFromAlbumWithGUID
modelAcceptInvitationWithGUID
modelRejectInvitationWithGUID
modelAddAccessControl
modelRemoveAccessControlEntryWithGUID
modelAddAssetCollection
modelDeleteAssetCollectionWithGUID
modelDeleteAssetCollectionsWithGUIDs
modelMarkCommentsForAssetCollectionWithGUIDAsViewed
modelAddCommentsToAssetCollectionWithGUID
modelDeleteCommentWithGUID
retrieveAssetsInAlbumWithGUID
retrieveAssetsFromAssetCollectionsWithGUIDs
modelForgetEverything
modelSetPublicAccessEnabled
modelSetMultipleContributorsEnabled
activityIsThrottled
setFocusAssetCollectionGUID
modelAlbumGUIDs
modelAlbumWithGUID
modelAccessControlGUIDs
modelAccessControlWithGUID
modelInvitationGUIDs
modelInvitationWithGUID
assetCollectionWithGUID
videoURLForAssetCollectionWithGUID
videoURLsForAssetCollectionWithGUID
commentGUIDs
commentWithGUID
isAssetCollectionMarkedAsViewed
serverSideConfig
nextActivityDate
isInRetryState
retryOutstandingActivities
retryOutstandingActivitiesForPersonID
cancelActivities
push
setIsUIForeground
setFocusAlbum
rootCtag
pendingRootCtag
rootCtagRetries
com.apple.sharedstreams.config.configVersion
com.apple.sharedstreams.config.maxNumRetriesOnFailure.server
com.apple.sharedstreams.config.maxNumRetriesOnFailure.network
com.apple.sharedstreams.config.maxNumRetriesOnFailure.content
com.apple.sharedstreams.config.maxUploadAssetBatchSize
mme.sharedstreams.client.downloadMMCSBatchSize
mme.sharedstreams.client.downloadMMCSErrorRetries
com.apple.sharedstreams.config.maxnum.ownedAlbums
com.apple.sharedstreams.config.maxnum.subscribedAlbums
com.apple.sharedstreams.config.maxnum.photosPerAlbum
com.apple.sharedstreams.config.maxnum.subscribersPerAlbum
com.apple.sharedstreams.config.maxnum.commentsPerPhoto
com.apple.sharedstreams.config.maxNum.charactersPerComment
com.apple.sharedstreams.config.maxNumPhotosToSendInShareAction
com.apple.sharedstreams.config.dimensions.thumbnail
com.apple.sharedstreams.config.dimensions.preview
com.apple.sharedstreams.config.videoderivatives
com.apple.sharedstreams.config.dimensions.invites
mme.sharedstreams.application.invitationImageCount
com.apple.sharedstreams.config.switch.3G
com.apple.sharedstreams.config.defaultRetryAfterInSeconds
com.apple.sharedstreams.config.maxActiveTimeAfterPush
com.apple.sharedstreams.config.maxActiveTimeAfterLossOfForeground
com.apple.sharedstreams.config.maxActiveTimeAfterGlobalResetSync
com.apple.sharedstreams.config.maxMMCSTokenValidity
com.apple.sharedstreams.config.maxNumPhotosToShare.hourly
com.apple.sharedstreams.config.maxNumPhotosToShare.daily
com.apple.sharedstreams.config.maxNumInvites.daily
com.apple.sharedstreams.config.apiVersion
MSASStabilizedIdleStateDidChangeNotification
MSASFileTransferPushTimerDidStartNotification
MSASFileTransferPushTimerDidEndNotification
MSASServerSideConfigDidChangeNotification
T@"NSString",C,N,V_ownerEmail
T@"NSString",C,N,V_ownerPersonID
T@"NSString",C,N,V_ownerFullName
T@"NSString",C,N,V_ownerFirstName
T@"NSString",C,N,V_ownerLastName
URLString
T@"NSString",&,N,V_URLString
T@"NSString",&,N,V_name
invitation
T@"MSASInvitation",&,N,V_invitation
%@: GUID : %@, name: %@, owner: %@ (%@ %@) was deleted: %@, share: %@
%@: GUID : %@, ctag: %@, was deleted: %@
T@"MSASComment",&,N,V_comment
deletionIndex
Ti,N,V_deletionIndex
%@: Type: %d, comment: %@, deletion index: %d
T@"MSAsset",&,N,V_asset
album
T@"MSASAlbum",&,N,V_album
isRetryingOutstandingActivities
TB,N,V_isRetryingOutstandingActivities
_assetInfoToReauthForDownload
T@"NSMutableArray",&,N,S_setAssetInfoToReauthForDownload:,V_assetInfoToReauthForDownload
_stopHandlerBlock
T@?,C,N,S_setStopHandlerBlock:,V_stopHandlerBlock
eventQueue
serverSideConfigQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serverSideConfigQueue
memberQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
metadataBackoffManagerParameters
T@"NSDictionary",&,N,V_metadataBackoffManagerParameters
MMCSBackoffManagerParameters
T@"NSDictionary",&,N,V_MMCSBackoffManagerParameters
postCommandCompletionBlock
T@?,C,N,V_postCommandCompletionBlock
T@"MSAlbumSharingDaemon",W,N,V_daemon
maxMetadataRetryCount
Ti,N,V_maxMetadataRetryCount
serverSideConfiguration
T@"NSDictionary",&,N,V_serverSideConfiguration
serverSideConfigurationVersion
T@"NSString",R,&,N,V_serverSideConfigurationVersion
T@"MSASProtocol",&,N,V_protocol
phoneInvitations
T@"MSASPhoneInvitations",&,N,V_phoneInvitations
T@"NSString",&,N,V_focusAlbumGUID
focusAssetCollectionGUID
T@"NSString",&,N,V_focusAssetCollectionGUID
derivativeSpecifications
T@"NSArray",R,&,N,V_derivativeSpecifications
derivativeImageScalingSpecification
T@"MSImageScalingSpecification",R,&,N,V_derivativeImageScalingSpecification
thumbnailImageScalingSpecification
T@"MSImageScalingSpecification",R,&,N,V_thumbnailImageScalingSpecification
T@,W,N,V_delegate
v32@?0@"NSError"8@"NSArray"16@"NSDictionary"24
ERROR_STATE_PHOTO_NOT_IN_MODEL
v24@?0@"NSError"8@"NSString"16
ERROR_SUBSCRIBER_CANNOT_GET_VIDEO
Enabling
Disabling
v20@?0@"NSError"8i16
v24@?0@"NSError"8@"NSDictionary"16
v40@?0@"NSError"8@"NSURL"16@"NSArray"24@"NSDictionary"32
ERROR_STATE_ALBUM_STATE_CTAG_MISSING
v32@?0@"NSError"8@"NSDictionary"16@"NSString"24
v32@?0@"NSString"8@"NSDictionary"16@"NSString"24
v40@?0@"NSError"8@"NSString"16@"NSArray"24@"NSArray"32
ERROR_MSAS_SUB_NO_METADATA
v24@?0@"NSError"8@"NSArray"16
v48@?0@"NSError"8B16@"NSArray"20B28@"MSASAlbum"32@"NSString"40
v52@?0@"NSError"8B16@"NSString"20@"NSArray"28@"NSArray"36@"NSArray"44
ERROR_MSAS_SUB_MISSING_FIELD_P_FIELD
ERROR_STATE_PHOTO_FAILED
ERROR_STATE_PHOTO_REJECTED
ERROR_STATE_STOPPED
ERROR_STATE_CANCELED
ERROR_STATE_CANNOT_REQUEUE_AFTER_URL
-[MSASStateMachine workQueueDidFinishCommandDueToCancellation]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/AlbumSharing/MSASStateMachine.m
_commandState == kMSASCommandStatePerformingCommand
-[MSASStateMachine workQueueDidFinishCommandByLeavingCommandInQueue]
-[MSASStateMachine workQueueDidFailToFinishCommandDueToTemporaryError:]
-[MSASStateMachine workQueueDidFinishCommand]
metadataBackoffManager
MMCSBackoffManager
256:332:455
1536:2048:2560
MSASStateMachine work queue
MSASStateMachine event queue
MSASStateMachine server side config queue
MSASStateMachine member queue
MSASStateMachineInitException
nextMMCSItemID
T@"<NSObject>",&,N,V_object
shouldDownloadEarliestPhotosFirst
TB,N,V_shouldDownloadEarliestPhotosFirst
UploadQueue
:alb
:lim
:priority
select object, album, errorCount from UploadQueue where albumGUID = :alb and uploadPriority <= :priority order by uploadPriority,ord limit :lim;
select object, album, errorCount from UploadQueue where uploadPriority <= :priority order by uploadPriority,ord limit :lim;
@16@?0^{sqlite3_stmt=}8
select object, album, errorCount from UploadQueue;
-[MSASPersonModel enqueueAssetCollectionForUpload:album:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/AlbumSharing/MSASPersonModel.m
objectArchiveLength <= INT_MAX
albumArchiveLength <= INT_MAX
Failed to archive an album object. Error: %@ Info: %@
insert into UploadQueue (ord, object, album, GUID, albumGUID, uploadPriority) values (?, ?, ?, ?, ?, ?);
DownloadQueue
update or ignore DownloadQueue set isInflight = 1 where GUID = ?;
:assetcol
:album
select count(*) from DownloadQueue;
select count(*) from DownloadQueue where albumGUID = :album;
select count(*) from DownloadQueue where assetCollectionGUID = :assetcol;
select ord from DownloadQueue limit 1;
select ord from DownloadQueue where albumGUID = :album limit 1;
select ord from DownloadQueue where assetCollectionGUID = :assetcol limit 1;
:thumb
:inflight
select object, albumGUID, errorCount from DownloadQueue where isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate desc, photoCreationDate asc limit:lim;
select object, albumGUID, errorCount from DownloadQueue where isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate asc, photoCreationDate asc limit:lim;
select object, albumGUID, errorCount from DownloadQueue where albumGUID = :album and isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate desc, photoCreationDate asc limit:lim;
select object, albumGUID, errorCount from DownloadQueue where albumGUID = :album and isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate asc, photoCreationDate asc limit:lim;
select object, albumGUID, errorCount from DownloadQueue where assetCollectionGUID = :assetcol and isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate desc, photoCreationDate asc limit:lim;
select object, albumGUID, errorCount from DownloadQueue where assetCollectionGUID = :assetcol and isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate asc, photoCreationDate asc limit:lim;
-[MSASPersonModel enqueueAssetForDownload:inAlbumWithGUID:]_block_invoke
assetArchiveLength <= INT_MAX
Failed to archive an assetArchive object. Error: %@ Info: %@
insert into DownloadQueue (ord, object, GUID, albumGUID, assetCollectionGUID, isThumbnail, batchCreationDate, photoCreationDate) values (?, ?, ?, ?, ?, ?, ?, ?);
select GUID from %@ where GUID = ? limit 1;
delete from %@ where GUID = ?;
update %@ set errorCount = ? where GUID = ?;
select count(*) from %@;
select count(*) from %@ where albumGUID = ?
delete from PendingAssetCollections where albumGUID = ?;
delete from PendingAssetCollections where assetCollectionGUID = ?;
insert or ignore into PendingAssetCollections (assetCollectionGUID, albumGUID) values (?, ?);
select assetCollectionGUID from PendingAssetCollections where assetCollectionGUID = ? limit 1;
select count(*) from CommandQueue;
select count(*) from CommandQueue where command = ?;
PendingAssetCollections
PendingCommandQueue
CommandQueue
delete from %@;
delete from CommandQueue where ord = ?;
-[MSASPersonModel setParams:forCommandWithIdentifier:]_block_invoke
paramsDataLength < INT_MAX
Failed to archive a paramsData object. Error: %@ Info: %@
update CommandQueue set params = ? where ord = ?;
select ord, command, params, personID, albumGUID, assetCollectionGUID from CommandQueue order by ord limit 1;
select ord, command, params, personID, albumGUID, assetCollectionGUID from CommandQueue where ord >= ? order by ord limit 1;
delete from PendingCommandQueue where albumGUID = ?;
select command, params, personID, albumGUID, assetCollectionGUID from PendingCommandQueue where albumGUID = ?;
delete from PendingCommandQueue where AssetCollectionGUID = ?;
select command, params, personID, albumGUID, assetCollectionGUID from PendingCommandQueue where assetCollectionGUID = ?;
insert into CommandQueue (ord, command, params, personID, albumGUID, assetCollectionGUID) values (?, ?, ?, ?, ?, ?);
Failed to archive params object. Error: %@ Info: %@
insert into PendingCommandQueue (ord, command, params, personID, albumGUID, assetCollectionGUID) values (?, ?, ?, ?, ?, ?);
select max(ord) from PendingCommandQueue;
select min(ord) from CommandQueue;
select max(ord) from CommandQueue;
create table if not exists CommandQueue (
   ord                   integer,
   command               text,
   params                blob,
   personID              text,
   albumGUID             text,
   assetCollectionGUID   text
create index if not exists CommandQueueByOrder on CommandQueue (ord asc);
create table if not exists PendingCommandQueue (
   ord                   integer,
   command               text,
   params                blob,
   personID              text,
   albumGUID             text,
   assetCollectionGUID   text
create index if not exists PendingCommandQueueByOrder on PendingCommandQueue (ord asc);
create table if not exists PendingAssetCollections (
   assetCollectionGUID   text unique,
   albumGUID             text
create table if not exists DownloadQueue (
  ord                  integer,
  isThumbnail          integer default 0,
  isInflight           integer default 0,
  GUID                 text,
  albumGUID            text,
  assetCollectionGUID  text,
  batchCreationDate    real,
  photoCreationDate    real,
  errorCount           integer default 0,
  album                blob,
  object               blob
create index if not exists DownloadQueueGeneralOrder on DownloadQueue (isThumbnail asc, albumGUID asc, batchCreationDate asc, photoCreationDate asc);
create index if not exists DownloadQueueGeneralReverseOrder on DownloadQueue (isThumbnail asc, albumGUID asc, batchCreationDate desc, photoCreationDate asc);
create table if not exists UploadQueue (
  ord                  integer,
  uploadPriority       integer default 0,
  GUID                 text,
  albumGUID            text,
  errorCount           integer default 0,
  album                blob,
  object               blob
create index if not exists UploadQueueByOrder on UploadQueue (ord asc);
create index if not exists UploadQueueByGUID on UploadQueue (GUID asc);
create index if not exists DownloadQueueByGUID on DownloadQueue (GUID asc);
alter table DownloadQueue add column batchCreationDate real;
alter table DownloadQueue add column photoCreationDate real;
alter table PendingAssetCollections add column albumGUID text;
alter table UploadQueue add column uploadPriority integer
alter table DownloadQueue drop column album
alter table DownloadQueue add column isInflight integer
delete from NextActivity;
delete from NextActivity where personID = ?;
insert or replace into NextActivity (personID, nextActivity) values (?, ?);
select personID, nextActivity from NextActivity;
select nextActivity from NextActivity order by nextActivity asc limit 1;
create table if not exists NextActivity(
   personID              text unique primary key,
   nextActivity          float
create index if not exists NextActivityByDate on NextActivity (nextActivity asc);
statementQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_statementQueue
statements
T^{__CFDictionary=},N,V_statements
dbQueueDB
T^{sqlite3=},R,N,V_db
dbQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dbQueue
dbWasRecreated
TB,N,V_dbWasRecreated
rollback transaction;
release savepoint save;
savepoint save;
delete from Properties where key = ?;
Failed to archive an object. Error: %@ Info: %@
-[MSASModelBase dbQueueSetPersistentData:forKey:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/AlbumSharing/MSASModelBase.m
insert or replace into Properties (key, value) values (?, ?);
select value from Properties where key = ?
create table if not exists Properties(
   key             text unique primary key,
   value           blob
insert or replace into Properties (key, value) values ('version', ?);
pragma cache_size = -128;
select value from Properties where key = 'version';
savepoint migration;
release savepoint migration;
rollback transaction to savepoint migration;
-journal
-wal
-shm
MSASModelBase db queue - %@
MSASModelBase statement queue - %@
T@"MMCSEngine",W,N,V_engine
Ti,N,V_type
count
TQ,N,V_count
itemIDs
T^Q,N,V_itemIDs
itemFlags
T^I,N,V_itemFlags
signatures
T^*,N,V_signatures
authTokens
T^*,N,V_authTokens
threadKeepAliveTimer
T@"NSTimer",&,N,V_threadKeepAliveTimer
isDone
TB,N,V_isDone
T@"<MMCSEngineDelegate>",W,N,V_delegate
hasOutstandingActivity
autoGenerateItemID
TB,N,V_autoGenerateItemID
isMetricsGatheringEnabled
TB,N,V_isMetricsGatheringEnabled
workThread
T@"NSThread",&,N,V_workThread
nextItemID
nextItemID.plist
-[MMCSEngine unregisterAssets:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MMCSKit/MMCSEngine.m
count <= UINT32_MAX
ERROR_CANNOT_REGISTER_FILE
ERROR_CANNOT_FIND_ASSET_P_ITEMID
ERROR_CANNOT_GET_FD_P_ASSET
Performance logging enabled.
Performance logging disabled.
com.apple.MMCSKit.itemIDToAssetMapQueue
com.apple.MMCSKit.requestorContextQueue
com.apple.MMCSKit.autoItemIDDictionaryQueue
options
dataClass
appIDHeader
workPathURL
modes
None
Pending
Chunking
Authorizing
Transferring
Acknowledging
Cancelling
Done
Unknown
kMMCSKitErrorDomain
Not following any more underlying errors.
MMCSKit
T@"NSMutableArray",&,N,V_itemsInFlight
assetCollectionsToItemInFlightMap
T@"NSMutableDictionary",&,N,V_assetCollectionsToItemInFlightMap
assetToAssetCollectionMap
T@"NSMutableDictionary",&,N,V_assetToAssetCollectionMap
finishedAssetCollections
T@"NSMutableArray",&,N,V_finishedAssetCollections
assetCollectionsWithAuthorizationError
T@"NSMutableSet",&,N,V_assetCollectionsWithAuthorizationError
assetCollectionGUIDToRequestorContext
T@"NSMutableDictionary",&,N,V_assetCollectionGUIDToRequestorContext
T@"<MSASAssetUploaderDelegate>",W,D,N
v16@?0@"NSArray"8
ERROR_ASSET_UPLOADER_ORPHANED
itemsInFlight
assetToItemInFlightMap
T@"NSMutableDictionary",&,N,V_assetToItemInFlightMap
finishedAssets
T@"NSMutableArray",&,N,V_finishedAssets
didEncounterNetworkConditionError
TB,N,V_didEncounterNetworkConditionError
isDownloadingThumbnails
TB,N,V_isDownloadingThumbnails
currentFocusAlbumGUID
T@"NSString",&,N,V_currentFocusAlbumGUID
currentFocusAssetCollectionGUID
T@"NSString",&,N,V_currentFocusAssetCollectionGUID
isWaitingForFirstDownloadEvent
TB,N,V_isWaitingForFirstDownloadEvent
objectGUID
T@"NSString",&,N,V_objectGUID
downloadBatchPerfGUID
T@"NSString",&,N,V_downloadBatchPerfGUID
T@"<MSASAssetDownloaderDelegate>",W,D,N
MSASAssetDownloader.downloadRate
v24@?0d8d16
MSASAssetDownloader.downloadLatency
ERROR_ASSET_DOWNLOADER_ORPHANED
MSASAssetTransfererDidIdle
T@"NSString",C,N,V_personID
T@"MMCSEngine",R,N,V_engine
maxMMCSTokenValidityTimeInterval
Td,N,V_maxMMCSTokenValidityTimeInterval
T@"MSASPersonModel",W,N,V_model
backoffManager
T@"MSBackoffManager",W,N,V_backoffManager
focusAlbumGUID
T@"NSString",C,N,V_focusAlbumGUID
T@"NSString",C,N,V_focusAssetCollectionGUID
maxBatchCount
Ti,N,V_maxBatchCount
maxRetryCount
Ti,N,V_maxRetryCount
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
hasShutDown
TB,N,V_hasShutDown
ERROR_ASSET_TRANS_CANCELED
ERROR_ASSET_TRANS_MMCS_TOKEN_TOO_OLD
ERROR_ASSET_TRANS_MISSING_MMCS_TOKEN
ERROR_ASSET_TRANS_MISSING_URL
-[MSASAssetTransferer _pathForPersonID:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/AlbumSharing/MSASAssetTransferer.m
MSASAssetTransferer work queue
MSASAssetTransferer event queue
MSPlatformPerformanceLoggingSettingDidChange
v16@?0@"NSNotification"8
com.apple.Dataclass.SharedStreams
MPSStateResponseOverride
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Invalid status code %ld in the response
Missing data in the response
received an error from server
v24@?0@"NSString"8@"NSError"16
com.apple.photos.cloud
Content-Type
application/protobuf
X-MMe-Client-Info
mpsstate
sharedstreams
com.apple.mediastream
0123456789 
<%@><%@><%@ (%@)>
%@/%@
CFBundleShortVersionString
+[MSProtocolUtilities Win32SHA1OfUDID:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSProtocolUtilities.m
udidLength < UINT32_MAX
email
T@"NSArray",&,N,V_emails
T@"NSArray",&,N,V_phones
T@"NSString",&,N,V_fullName
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSDate",&,N,V_subscriptionDate
state
Ti,N,V_state
 IsMine
 State: %@
owned
pending
subscribed
unsubscribed
unshared
undefined
 Subscription Date: %@
 PersonID: %@
 Full Name: %@
 phones: %@
 emails: %@
 email: %@
 Album GUID: %@
phones
emails
MSArchiverUtilitiesErrorDomain
Empty data
Ti,N,V_ID
timestamp
T@"NSDate",&,N,V_clientTimestamp
T@"NSString",&,N,V_email
TB,N,V_isLike
TB,N,V_isCaption
TB,N,V_isBatchComment
content
T@"NSString",&,N,V_content
%@, GUID: %@, ID: %d, server timestamp: %@, client timestamp: %@, is Like: %d, is Caption: %d, is Batch Comment: %d, is Mine: %d, content: %@
%@, GUID: %@, ID: %d, name: %@ (%@ %@) server timestamp: %@, client timestamp: %@, is Like: %d, is Caption: %d, is Batch Comment: %d, is Mine: %d, content: %@
(Present)
(No)
isBatchComment
isCaption
isLike
clientTimestamp
TB,R
T^{sqlite3=},N,V_db
stmt
T^{sqlite3_stmt=},N,V_stmt
stepBlock
T@?,C,N,V_stepBlock
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
-[MSASModelEnumerator init]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/AlbumSharing/Model/MSASModelEnumerator.m
T@"NSString",&,N,V_albumGUID
pendingAlbumGUIDsWithKeyValueChanges
T@"NSMutableSet",&,N,V_pendingAlbumGUIDsWithKeyValueChanges
pendingAlbumChanges
T@"NSMutableSet",&,N,V_pendingAlbumChanges
pendingAlbumGUIDsWithSharingInfoChanges
T@"NSMutableSet",&,N,V_pendingAlbumGUIDsWithSharingInfoChanges
pendingAlbumGUIDToAssetCollections
T@"NSMutableDictionary",&,N,V_pendingAlbumGUIDToAssetCollections
observers
T@"NSCountedSet",&,N,V_observers
T@"MSASStateMachine",R,N
commandQueue
T@"MSASServerSideModelGroupedCommandQueue",&,N,V_commandQueue
pendingChanges
T@"MSASPendingChanges",&,N,V_pendingChanges
daemon
T@"NSObject<OS_dispatch_queue>",&,N,V_eventQueue
T@"NSString",R,&,N
maxGroupedCallbackEventIdleInterval
Td,N
MSASCounterpartInstance
T@"MSASStateMachine",N,V_counterpartInstance
v16@?0@"<MSASModelObserver>"8
v24@?0@"NSArray"8@"NSArray"16
v32@?0@"NSArray"8@"NSArray"16@"NSDictionary"24
stateCtag
largestCommentID
q24@?0@8@16
lastviewedctag
lastcommentposition
subscriptionMethod
lastassetposition
reconstruct
flushPendingCommentQueue
preFlushPendingCommentQueue
Model.error.protocol
Model.error.invalidAssetCollectionGUID_GUID
Model.error.invalidACLGUID_GUID
Model.error.invalidInvitationGUID_GUID
select GUID from AssetCollections where albumGUID = ? and photoNumber > ? order by albumGUID asc, batchDate asc, photoDate asc, GUID asc;
lastcommenttimestamp
insert or replace into CommentCheckQueue (assetCollectionGUID, albumGUID) values (?, ?);
select assetCollectionGUID, albumGUID from CommentCheckQueue order by albumGUID;
delete from CommentCheckQueue;
select count(GUID) from AssetCollections where albumGUID = ? and photoNumber > ?;
unviewedFlag
select count(albumGUID) from AlbumMetadata where key = 'unviewedFlag' and value = '1';
select count(*) from AssetCollectionMetadata where albumGUID = ? and key = 'unviewedFlag' and value = '1';
select max(photoNumber) from AssetCollections where AlbumGUID = ?
delete from AssetCollectionMetadata where assetCollectionGUID = ?;
delete from AssetCollectionMetadata where assetCollectionGUID = ? and key = ?;
insert or replace into AssetCollectionMetadata (assetCollectionGUID, albumGUID, key, value) values (?, ?, ?, ?);
select value from AssetCollectionMetadata where assetCollectionGUID = ? and key = ?;
delete from AlbumMetadata where albumGUID = ?;
delete from AlbumMetadata where albumGUID = ? and key = ?;
insert or replace into AlbumMetadata (albumGUID, key, value) values (?, ?, ?);
select value from AlbumMetadata where albumGUID = ? and key = ?;
select assetCollectionGUID from Comments where assetCollectionGUID = ? and isMine > 0;
select max(id) from Comments where assetCollectionGUID = ?;
select count(GUID) from Comments where assetCollectionGUID = ?;
delete from Comments where GUID = ?;
Failed to archive a comment object. Error: %@ Info: %@
insert or replace into Comments (GUID, id, timestamp, assetCollectionGUID, isCaption, isMine, obj, userInfo) values (?, ?, ?, ?, ?, ?, ?, ?);
select obj, GUID, timestamp, isCaption, userInfo from Comments where id = ? and assetCollectionGUID = ?;
select obj, id, timestamp, assetCollectionGUID, isCaption, userInfo from Comments where GUID = ?;
select count(GUID) from AssetCollections where albumGUID = ?
delete from AssetCollections where GUID = ?;
Failed to archive an assetCollection object. Error: %@ Info: %@
insert or replace into AssetCollections (GUID, ctag, albumGUID, batchDate, photoDate, photoNumber, obj, userInfo) values (?, ?, ?, ?, ?, ?, ?, ?);
select obj, ctag, albumGUID, batchDate, photoDate, photoNumber, userInfo from AssetCollections where GUID = ?;
delete from Invitations where GUID = ?;
Failed to archive an invitation object. Error: %@ Info: %@
insert or replace into Invitations (GUID, albumGUID, email, obj, userInfo) values (?, ?, ?, ?, ?);
select obj, GUID, email, userInfo from Invitations where albumGUID = ?;
select obj, albumGUID, email, userInfo from Invitations where GUID = ?;
delete from AccessControls where GUID = ?;
Failed to archive an accessControl object. Error: %@ Info: %@
insert or replace into AccessControls (GUID, email, albumGUID, obj, userInfo) values (?, ?, ?, ?, ?);
select obj, email, albumGUID, userInfo from AccessControls where GUID = ?;
delete from Albums where GUID = ?;
update or ignore Albums set obj = ?, ctag = ? , foreignCtag = ? where GUID = ?;
insert or replace into Albums (GUID, name, ctag, foreignCtag, obj, url, userInfo) values (?, ?, ?, ?, ?, ?, ?);
select obj, name, ctag, foreignCtag, url, userInfo from Albums where GUID = ?;
ERROR_MODEL_INVALID_COMMENT
ERROR_MODEL_INVALID_ALBUM
v24@?0@"NSDictionary"8@"NSError"16
ERROR_MODEL_CANNOT_UNSET_MULTIPLECONTRIBUTORS
ERROR_MODEL_CANNOT_SET_MULTIPLECONTRIBUTORS
ERROR_MODEL_CANNOT_UNSET_PUBLIC
ERROR_MODEL_CANNOT_SET_PUBLIC
invitationToken
Invalid parameter not satisfying: %@
MSASServerSideModel.m
ERROR_MODEL_INVALID_INVITATION
MSASModelDidUpdateServerCommunicationBackoffDateNotification
Failed to archive a userInfo object. Error: %@ Info: %@
update or ignore Comments set userInfo = ? where GUID = ?;
update or ignore Invitations set userInfo = ? where GUID = ?;
update or ignore AccessControls set userInfo = ? where GUID = ?;
update or ignore AssetCollections set userInfo = ? where GUID = ?;
update or ignore Albums set userInfo = ? where GUID = ?;
select obj from Comments where assetCollectionGUID = ? and isCaption != 0 order by timestamp limit 1;
select obj from Comments where assetCollectionGUID = '%@' order by timestamp asc;
select GUID from AssetCollections where albumGUID = '%@' order by albumGUID asc, batchDate asc, photoDate asc, GUID asc;
select obj from AssetCollections where albumGUID = '%@' order by albumGUID asc, batchDate asc, photoDate asc, GUID asc;
v32@?0@"NSError"8@"NSArray"16@"NSDate"24
v32@?0@"NSError"8@"NSURL"16@"NSDate"24
select GUID from Invitations order by email;
select obj from Invitations order by email;
select GUID from AccessControls where albumGUID = '%@' order by email asc;
select obj from AccessControls where albumGUID = '%@' order by email asc;
select GUID from Albums order by GUID asc;
select obj from Albums order by GUID asc;
create table if not exists Albums (
  GUID             text unique primary key,
  name             text,
  ctag             text,
  foreignCtag      text,
  url              text,
  obj              blob,
  userInfo         blob
create index if not exists AlbumsByName on Albums (name asc);
create index if not exists AlbumsByGUID on Albums (GUID asc);
create table if not exists AlbumMetadata (
  albumGUID        text, 
  key              text, 
  value            text,
  constraint UniquePerAlbum primary key (albumGUID, key) on conflict replace);
create table if not exists AccessControls (
  GUID             text unique primary key,
  email            text,
  albumGUID        text,
  obj              blob,
  userInfo         blob
create index if not exists AccessControlsByAlbumGUID on AccessControls (albumGUID asc);
create index if not exists AccessControlsByAlbumGUID on AccessControls (email asc);
create table if not exists Invitations (
  GUID             text unique primary key,
  albumGUID        text,
  email            text,
  obj              blob,
  userInfo         blob
create index if not exists InvitationsByAlbumGUID on Invitations (albumGUID asc);
create index if not exists InvitationsByEmail on Invitations (albumGUID asc);
create table if not exists AssetCollections (
  GUID                text unique primary key,
  ctag                text,
  albumGUID           text,
  batchDate           real,
  photoDate           real,
  photoNumber         int,
  obj                 blob,
  userInfo            blob
create index if not exists AssetCollectionsByAlbumGUID on AssetCollections (albumGUID asc, batchDate asc, photoDate asc, GUID asc);
create table if not exists AssetCollectionMetadata (
  assetCollectionGUID  text, 
  albumGUID            text, 
  key                  text, 
  value                text,
  constraint UniquePerAssetCollection primary key (assetCollectionGUID, key) on conflict replace);
create index if not exists AssetCollectionMetadataByAlbum on AssetCollectionMetadata (albumGUID asc);
create table if not exists Comments (
  GUID                 text unique primary key,
  id                   int,
  timestamp            real,
  assetCollectionGUID  text,
  isCaption            int,
  isMine               int,
  obj                  blob,
  userInfo             blob
create index if not exists CommentsByAssetCollectionGUID on Comments (assetCollectionGUID asc, timestamp asc, GUID asc);
create index if not exists CommentsByAssetCollectionGUIDAndMine on Comments (assetCollectionGUID asc, timestamp asc, isMine asc);
create table if not exists GroupedCommand (
  command              text,
  variant              blob,
  invariant            blob
create table if not exists CommentCheckQueue (
  assetCollectionGUID  text unique,
  albumGUID            text
MSASServerSideModel member queue
delete from GroupedCommand where rowid <= ?;
select rowid, command, invariant, variant from GroupedCommand order by rowid asc limit ?;
select count(*) from GroupedCommand;
Failed to archive an variantParam object. Error: %@ Info: %@
Failed to archive an invariantParam object. Error: %@ Info: %@
insert or rollback into GroupedCommand (command, invariant, variant) values (?, ?, ?);
MSSqliteBindDataOrNull
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSSqliteUtilities.m
dataLength <= INT_MAX
MSSqliteTrapForDBLockError
UIBusyCount
Ti,N,V_UIBusyCount
hysteresisTimer
T@"NSTimer",&,N,V_hysteresisTimer
stabilizedIsBusy
TB,N,V_stabilizedIsBusy
idleCountQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_idleCountQueue
MSDaemon idle count queue
select event, timestamp from PerfLog where operation = ? and GUID = ? order by rowid asc;
delete from PerfLog where operation = ? and GUID = ?;
stop
insert into PerfLog (operation, GUID, event, timestamp) values (?, ?, ?, ?);
start
pragma journal_mode = wal;
create table if not exists PerfLog (
   rowid       integer primary key asc autoincrement,
   operation   text,
   GUID        text,
   event       text,
   timestamp   float);
create index if not exists PerfLogByGUID on PerfLog (GUID asc, operation asc);
analyze;
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/MSPerformanceLogger.m
MSASPServerSideConfigurationDidChangeNotification
MSASPDidReceiveRetryAfterNotification
retryAfterDate
gate
T@"MSASPConnectionGate",&,N,V_gate
pendingConnectionsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pendingConnectionsQueue
pendingConnectionsGroup
T@"NSObject<OS_dispatch_group>",&,N,V_pendingConnectionsGroup
TB,N,V_isShuttingDown
headerVersion
T@"NSString",R,N,V_headerVersion
T@"NSString",R,&,N,V_personID
baseURL
T@"NSURL",&,N,V_baseURL
serverSideConfigVersion
T@"NSString",&,N,V_serverSideConfigVersion
v32@?0@"NSHTTPURLResponse"8@"NSError"16@24
albumlocation
albumguid
albumstatectag
assetstatectag
assetguid
assetstates
deletedcommentposition
commentposition
commenttype
v32@?0@8@16^B24
invitationtoken
albumctag
ERROR_MSAS_PROT_LIMIT_SUBSCRIPTIONS_P_COUNT
4033
contenturl
ERROR_MSAS_PROT_NOT_REAUTHED
hascomments
assetctag
contenttokens
sharinginfochanged
ctagrespected
isfamilysharealbum
publicurl
attributes
sharinginfo
albumstatechanges
sharinginfochanges
fullname
lastname
firstname
personid
name
rootctag
commenttimestamp
ispublic
ERROR_MSAS_PROT_COMMENT_NO_INDEX
ERROR_MSAS_PROT_LIMIT_COMMENT_LENGTH
4035
ERROR_MSAS_PROT_LIMIT_COMMENTS_P_COUNT
comment
isbatchcomment
invitations
v32@?0@8Q16^B24
phonenumber
sharingtype
ERROR_MSAS_PROT_LIMIT_INVITATIONS_P_COUNT
ERROR_MSAS_PROT_LIMIT_SUBSCRIBERS_P_COUNT
4031
alternateemails
phonenumbers
invitationguid
ERROR_MSAS_PROT_COLL_IGNORED
ERROR_MSAS_PROT_COLL_REJECTED
ERROR_MSAS_PROT_MISMATCHED_COLLECTION
assetnumber
pending upload ID
response body
ERROR_MSAS_PROT_BAD_FIELD_P_FIELD
files
videoCompl
video
promote
pendinguploadid
maxallowed
yyyy-MM-dd'T'HH:mm:ss'Z'
en_US
url_expiry
RROR_SHARING_BAD_FIELD_P_FIELD
ERROR_MSAS_PROT_LIMIT_BANDWIDTH
checksums
ERROR_MSAS_PROT_LIMIT_PHOTOS_P_COUNT
4036
ERROR_MSAS_PROT_COLL_ALREADY_EXISTS
ASSET_ALREADY_EXISTS
reason
ERROR_MSAS_PROT_LIMIT_ALBUMS_P_COUNT
4032
ERROR_MSAS_PROT_CANNOT_CREATE_ALBUM
albumurl
configuration
setalbumstate
setassetstate
albumstate
setcommentposition
getcomments
reportspam
unsubscribe
subscribe
gettokens
getassets
albumsummary
getchanges
deletecomment
deleteassets
deletealbum
setallowcontributions
setalbumpublic
addcomment
unshare
share
uploadcomplete
getvideourl
getuploadtokens
putassets
updatealbum
createalbum
ERROR_MSAS_PROT_CANNOT_CONTINUE
ERROR_MSAS_PROT_HTTP_ERROR_P_CODE
ERROR_MSAS_PROT_VISITOR_AUTH_FAILURE
x-apple-mme-sharedstreams-config-version
text/plist
x-apple-mme-sharedstreams-client-token
x-apple-mme-sharedstreams-version
v32@?0@"NSURLResponse"8@"NSData"16@"NSError"24
X-Apple-MMe-Host
ERROR_MSAS_PROT_CANNOT_ENCODE
-[MSASProtocol sendURLRequest:method:bodyObj:checkServerSideConfigVersion:completionBlock:]_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/AlbumSharing/MSASProtocol.m
!self.gate
v16@?0@"NSError"8
ERROR_MSAS_PROT_STOPPING
ERROR_MSAS_PROT_SHUTTING_DOWN
MSASProtocol connections queue
MSASProtocol work queue
MSASProtocol member queue
6oWcrYvjLx0f
height
Original
360p
PosterFrame
collectionmetadata
filename
uploadpending
declined
subscriptiondate
requestedbyme
iscaption
candelete
createdbyme
commentservertimestamp
servertimestamp
T@"NSString",C,N,V_command
variantParam
T@"NSDictionary",&,N,V_variantParam
invariantParam
T@"NSDictionary",&,N,V_invariantParam
invariant
variant
command
lastEnqueuedCommand
T@"MSASEnqueuedCommand",&,N,V_lastEnqueuedCommand
deleteComment
newComment
deleteInvitation
newInvitation
deleteACL
newACL
deleteAssetCollection
newAssetCollection
deleteAlbum
newAlbum
-[MSASServerSideModelGroupedCommandQueue workQueueEnqueueCommand:variantParam:invariantParam:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-310.1.190/workspaces/coremediastream/AlbumSharing/Model/MSASServerSideModelGroupedCommandQueue.m
self.model
i24@?0@"MSASServerSideModelGroupedCommandQueue"8@"NSArray"16
nominalShortSideLength
Td,N,V_nominalShortSideLength
minimumLongSideLength
Td,N,V_minimumLongSideLength
maximumLongSideLength
Td,N,V_maximumLongSideLength
assetTypeFlags
Ti,N,V_assetTypeFlags
%@ Short side: %0.0f min long side: %0.0f max long side: %0.0f
@"NSMutableDictionary"24@?0f8@"NSString"12i20
idleTimerGate
T@"MSTimerGate",&,N,V_idleTimerGate
stalenessTimerGate
T@"MSTimerGate",&,N,V_stalenessTimerGate
model
T@"MSASServerSideModel",W,N,V_model
workQueue
maxGroupedCallbackEventBatchCount
Ti,N,V_maxGroupedCallbackEventBatchCount
Td,N,V_maxGroupedCallbackEventIdleInterval
Td,N,V_maxGroupedCallbackEventStaleness
isAssertingBusyAssertion
TB,R,N,V_isAssertingBusyAssertion
isShuttingDown
v8@?0
MSASGroupedQueue work queue
MSASGroupedQueue member queue
useCellular
TB,R,N,V_useCellular
TB,R,N,V_powerRequired
Td,R,N,V_bitRate
videoType
T@"NSString",R,N,V_videoType
TQ,R,N,V_mediaAssetType
720p
bitRate
powerRequired
cellular
IDS: Get send message callback for service %{public}@ account %@ identifier %{public}@ success %d error %{public}@ info %{public}@
IDS: Successfully send message from %@ for album %{public}@ with IDS identifier %{public}@.
Using debugFakeAlbumGUID %@
IDS: Send message %{public}@ from %@ to %@ for album %{public}@
IDS: Send message with identifier %{public}@
%{public}@
Received quota excess failure for person ID %@. Next retry date: %{public}@
Successfully authenticated person ID %@
Received authentication failure for person ID %@
Media stream daemon stopping.
Media stream daemon starting...
Sending local notification about new server-side configuration for %@
Server-side configuration has changed. Refreshing configuration.
Not refreshing server-side configuration.
%{public}@: Push notification received for My Photo Stream with targetPersonID %@.
%{public}@: Serving push notification
The subscription plugin class does not support push notification refreshing.
Forgetting everything about person ID %@...
Person ID %@ forgotten.
Aborting all activities for person ID %@.
%{public}@: Reenqueuing quarantined activities. Reason: %{public}@.
%{public}@ - %@ Encountered temporary error. Will try again later...
%{public}@ - %@ Error sending upload complete: %{public}@
%{public}@ - %@ Failed to send upload complete for %lu asset collections. Error: %{public}@
%{public}@ - %@ Finished sending upload complete.
%{public}@ - %@ Found mismatch between expecting sending queue count and actual count. Expected %lu, actually %lu.
%{public}@ - %@ Ignoring errors for %lu asset collections.
%{public}@ - %@ Encountered temporary network issues during upload. Will try again later...
%{public}@ - %@ Received auth error. Resending metadata for %lu asset collections.
%{public}@ - %@ Error uploading %lu asset collections.
%{public}@ - %@ error uploading %{public}@: %{public}@ %ld.
%{public}@ - %@ needs to re-register %{public}@.
%{public}@ - %@ Gave up uploading %lu asset collections.
%{public}@ - %@ Will retry uploading %ld asset collections.
%{public}@ - %@ Detected an inconsistent state.
%{public}@ - %@ Successfully uploaded %lu asset collections.
%{public}@ - %@ Closing FD %d for asset %{public}@
%{public}@ - %@ Failed to write temp file at path %@.
%{public}@ - %@ Failed to create temp file.
%{public}@ - %@ Opening asset file at path %@...
%{public}@ - %@ ... got FD %d.
Exception %{public}@ thrown while opening asset file at path %@. Ignored.
%{public}@ - %@ Cannot retrieve file descriptor for asset: %{public}@
%{public}@ - %@ Finished uploading asset. Error: %{public}@
%{public}@ - %@ uploading %ld assets...
%{public}@ - %@ Using contentURL %{public}@ from MSPlatform for upload.
Failed to get contentURL from MSPlatform. Using URL from metadata for upload
%{public}@ - %@ Found authentication error. Will try again later...
%{public}@ - %@ received metadata upload response: %{public}@
Setting MMCS header in asset %{public}@
%{public}@ - %@ Encountered network issues during upload. Will try again later...
%{public}@ - %@ Received a quota error.
%{public}@ - %@ Quota error code: %{public}@
%{public}@ - %@ Server reject asset collection because it is too large: %{public}@
%{public}@ - %@ Could not parse the server's response.
%{public}@ - %@ Error uploading metadata to Streams server: %{public}@
%{public}@ - %@ Too many errors encountered while uploading %ld asset collections. Aborting.
%{public}@ - %@ Nothing to upload.
%{public}@ - %@ Sending metadata...
Wrong state detected. Expected %d, actually %d. Not serving message.
%{public}@ - failed to properly clean up wrappers from queue (before/after count: %lld/%lld). Wrapper ids that were supposed to be removed: (%{public}@)
%{public}@ - %lu collections changed (kept %lu / lost %ld - total collections in queue after cleaning: %lld).
%{public}@ - %@ nothing to send.
%{public}@ - %@ Submitting %ld asset collections for publication.
%{public}@ - %@ ...skipping %ld asset collections.
%{public}@ - %@ The UTI for 
%{public}@
 is not accepted by the server. Asset collection: %{public}@
%{public}@ - %@ The master asset has zero size. Rejecting upload.
%{public}@ - %@ The master asset has size %lld, which is larger than the maximum allowed %lld. %{public}@
%{public}@ - %@ The master asset in the collection does not have a hash. Rejecting from publication: %{public}@
%{public}@ - %@ Could not compute hash for derived asset %{public}@. Rejecting asset from publication.
%{public}@ - %@ The asset has zero size. Rejecting upload.
%{public}@ - %@ The asset has size %lld, which is larger than the maximum allowed %lld. %{public}@
%{public}@ - %@ Rejecting asset collection %{public}@
Error: %{public}@
%{public}@ - %@ No file hash for asset %{public}@
%{public}@ - %@ Requesting derivatives for %ld files.
%{public}@ - Retrying to get derivative for %{public}@ (error count: %i)
%{public}@ - unable to generate derivatives for %{public}@ safely.
%{public}@ - %@ No more derivatives to request.
masterAsset unavailable for asset collection %@, unable to request derivatives
%{public}@ - %@ Not publishing because we're shutting down.
%{public}@ - %@ Not uploading at this time.
%{public}@ - discarding a collection with identifier %{public}@ that was quarantined too many times.
%{public}@ - reenqueuing %ld quarantined collections.
%{public}@ - %{public}@ has disappeared.
%{public}@ - %{public}@ has lost his collection ID.
%{public}@ - %{public}@ for %{public}@ has disappeared. Will have to recompute derivatives.
%{public}@ - quarantine for %{public}@ has been there for too long. Better to just abandon
%{public}@ - putting %{public}@ in quarantine%{public}s.
%{public}@ - %@ Server-side configuration has changed. Reading new values.
Server-side configuration key %{public}@ cannot be parsed as a number.
Server-side configuration key %{public}@ is not a string.
Server-side configuration key %{public}@ does not contain an array.
%{public}@ - %@ _maxSizeByUTI: %{public}@
%{public}@ - %@ dequeuing asset collections: %{public}@
%{public}@ - %@ removed %lu asset collections from upload queue
%{public}@ - %@ enqueuing asset collections: %{public}@
%{public}@: next activity date is %{public}@
Unable to deserialize publisher master manifest: %{public}@
%{public}@ - Found empty person ID.
%{public}@ - setting next activity date for %@ to %{public}@.
%{public}@ - %@ Encountered temporary network error during subscription update. Trying again later. Error :%{public}@
%{public}@ - %@ Reauthorization resulted in %lu rejected assets. Error: %{public}@
%{public}@ - %@ Successfully reauthorized %lu assets.
%{public}@ - %@ Reauthorization protocol received authentication error: %{public}@
%{public}@ - %@ Finished retrieving assets. Checking for errors on %lu assets...
%{public}@ - %@ Ignoring error: %{public}@
%{public}@ - %@ Encountered temporary network error.
%{public}@ - %@ Encountered authentication error.
%{public}@ - %@ Encountered bad asset retrieval token.
%{public}@ - %@ Too many errors encountered for asset. Aborting download. %{public}@
%{public}@ - %@ Asset retrieval failed with error: %{public}@
%{public}@ - %@ Found orphaned asset. Ignoring. %{public}@
%{public}@ - %@ ...Finished handling errors.
%{public}@ - %@ Found temporary network errors during asset downloading. Trying again later.
%{public}@ - %@ Finished retrieving asset.
%{public}@ - %@ Reauthorizing retrieval of %lu assets...
%{public}@ - %@ No more assets to retrieve.
%{public}@ - %@ Retrieving %lu assets...
%{public}@ - %@ Not retrieving assets because we're shutting down.
%{public}@ - %@ Retrieval state: %d
%{public}@ - %@ Not checking for outstanding activities because we're shutting down.
%{public}@ - %@ Scheduling retrieval of %ld assets.
%{public}@ - %@ Rejected invalid asset %{public}@.
%{public}@ - %@ Subscription stream for person ID %{public}@ is temporarily unavailable.
%{public}@ - %@ Received authentication error: %{public}@
%{public}@ - %@ Found temporary network error. Trying again later. Error: %{public}@
%{public}@ - %@ Found error when retrieving subscription updates: %{public}@
%{public}@ - %@ Finished retrieving subscription updates.
%{public}@ - %@ Subscription for personID %@ is no longer available.
%{public}@ - %@ Finished receiving updates for personID: %@.
%{public}@ - %@ New ctag: %{public}@
%{public}@ - %@ Received CTAG for new person ID %@.
%{public}@ - %@ Found %ld new asset collections.
New Collections: %{public}@
Deleted asset collections: %{public}@
%{public}@ - %@ Checking for subscription updates...
%{public}@ - %@ Subscriber state was reset by the server.
%{public}@ - %@ Beginning subscriber updates for personID: %@ wasReset: %d
Metadata: %{public}@
%{public}@ - %@ Not checking for new asset collections because we're shutting down.
checkForNewAssetCollections called, state: %d
will check for new asset collections due to missing ctag for %@
%{public}@ - %@ Not downloading at this time.
%{public}@ - %@ Subscriber sync state was reset locally.
%{public}@ - %@ Setting outstanding poll: %d
[RETRIEVALSTATE %{public}@] %{public}@ -> %{public}@
[STATE %{public}@] %{public}@ -> %{public}@
Unable to deserialize subscriber master manifest: %{public}@
Can't query for file size at path %@. Error: %{public}@
Setting MMCS Item ID to %lld for %{public}@
Ignoring attempt to set MMCS Item Flags on an MSAsset.
failed to create directory at %@: %@
cannot create directory at nil path
The file at %@ could not be opened for hashing.
Not logging any more underlying errors.
%{public}@ - %@ Upload complete connection has failed. Error: %{public}@
%{public}@ - %@ Failed authentication. Error: %{public}@
%{public}@ - %@ Put connection has failed. Error: %{public}@
%{public}@ - %@ Sending upload complete...
%{public}@ - %@ Sending metadata to Streams server...
%{public}@ - %@ Sending metadata for asset collections: %{public}@
%{public}@ - %@ Rejecting asset collection %{public}@
Reason: %{public}@
%{public}@ - %@ Rejecting asset %{public}@
Reason: %{public}@
%{public}@ - %@ Cannot parse asset dictionary. Error: %{public}@
%{public}@ - %@ Subscription temporarily unavailable for person ID %@
%{public}@ - %@ Subscription is gone for person ID %@
%{public}@- %@ Finished stream for personID: %@
%{public}@ - %@ Parsed asset collections: %{public}@
%{public}@ - %@ Could not create asset collections from response. Error: %{public}@
%{public}@ - %@ Begin stream for personID: %@ - was reset: %d
Metadata: %{public}@
%{public}@ - %@ Parsing chunk number %d.
%{public}@- %@ Error found while parsing chunk number %d. Error: %{public}@
%{public}@ - %@ Finished parsing all chunks. Error: %{public}@
%{public}@ - %@ Starting to parse %d chunks.
Got chunk: %{public}@
%{public}@ - %@ Requesting subscription updates...
%{public}@ retrieved a retry-after header, but we're ignoring it.
Removing database.
MMCS reported an error during upload: %{public}@
MMCS uploading callback for itemID: %llu state: %{public}@ progress: %.2f
MMCS reported an error: %{public}@
MMCS reported an error during download: %{public}@
MMCS downloading callback for itemID: %llu state: %{public}@ progress: %.2f
Unable to deserialize MMCS master manifest: %{public}@
%{public}@ - %@ _putItemsFailure
%{public}@ - %@ _requestCompleted
%{public}@ - %@ _putItemDone. Error: %{public}@
%{public}@ - %@ Failed to publish assets: %{public}@
Error: %{public}@
%{public}@ - %@ attempted to get UTI for unknown itemID %llu
%{public}@ - %@ retrieved MMCSItemType for itemID %llu. ItemType: %{public}@
%{public}@ - %@ attempted to get file descriptor for unknown itemID %llu
%{public}@ - %@ retrieving file descriptor for item %llu, returned %d.
%{public}@ - %@ Could not compute signature for asset. Ignoring. %{public}@
Error: %{public}@
%{public}@ - %@ Could not compute hash for asset. Ignoring. %{public}@
%{public}@ - %@ Finished retrieving assets.
%{public}@ - %@ Cannot find asset for item ID %lld
%{public}@ - %@ Retrieved file for asset %{public}@ at path %@, error %{public}@
%{public}@ - %@ Retreived asset %{public}@ with error %{public}@
%{public}@ - %@ Begin retrieving assets %{public}@
%{public}@ - %@ Using contentURL %{public}@ from MSPlatform for download
Failed to get contentURL from MSPlatform. Using URL from asset metadata for download
%{public}@ - %@ Nothing to retrieve.
%{public}@ - %@ Failed to get asset with hash %{public}@
Error: %{public}@
Unable to serialize metadata: %{public}@
Unable to serialize upload complete data: %{public}@
Unable to serialize get metadata request data: %{public}@
Parsing next chunk.
Error encountered during chunk parsing: %{public}@
_parseAny: %{public}@
_parseBegin: %{public}@
Subscription stream was reset by the server.
_parseAssets: %{public}@
Stream %{public}@ is not available. Status: %{public}@
Rejecting derived asset because of error: %{public}@
Rejecting asset collection because of error: %{public}@
_parseEnd: %{public}@
_parseSharingStatus: %{public}@
Error: No URL provided for HTTP transaction.
Could not format auth string.
Could not base64-encode auth string.
Could not create data representation of auth string.
Could not create authentication string.
About to send to URL: %{public}@
Headers: %@
Received response status: %ld
Headers: %@
Could not create character set for date matching.
Found a retry-after header with an date string: %{public}@. Date: %{public}@
Found a retry-after header with a relative interval of %d seconds. Date: %{public}@
Found a retry-after header that could not be parsed: %{public}@
Received response: %@
Transaction completed. Code: %ld.
Transaction failed. A server error has been reported. Code: %ld.
Authentication failed. Code: %ld.
Transaction forbidden. Code: %ld.
Transaction failed. Error: %{public}@
Connection failed. Error: %{public}@
Unable to create SHA1 string of NULL UDID
MSSPCCreateDataFromHexString Could not create data object.
Could not parse file hash.
Failed to retrieve configuration due to authentication error: %{public}@
Finished retrieving server-side configuration: %{public}@, error: %{public}@
Refreshing server-side configuration.
Failed to archive config, error: %@
Cannot save config.
PersonID %@ using server-side value for key %{public}@. Value: %{public}@
PersonID %@ using server-side value for parameter %{public}@. Value: %lld
PersonID %@ using server-side value for parameter %{public}@. Value: %ld
PersonID %@ using server-side value for parameter %{public}@. Value: %f
PersonID %@ using server-side value for parameter %{public}@. Value: %d
Can't reset server state. Error: %{public}@
%{public}@: Failed to save personIDToPersonInfo dictionary %{public}@ to %@.
%{public}@ - %@ Reset server state protocol has failed. Error: %{public}@
Couldn't reset server. Received authentication error: %{public}@
Couldn't reset server. Error: %{public}@
Successfully reset server state.
Resetting server state...
Unable to serialize reauthorize data: %{public}@
%{public}@ - %@ Reauthorization has failed. Error: %{public}@
%{public}@ - %@ Reauthorizing %ld items
Updating objects for %ld items.
Commiting error counts for %ld items.
Removing all entries from the queue.
Removing %ld entries from the queue.
Retrieving up to %lld items from queue ordered by errorCount.
Retrieving up to %lld items from queue, target size: %lld bytes.
Retrieving up to %lld items from queue with zero size.
Retrieving up to %lld items from queue.
sqlite error while fetching objects from the queue. Status: %d
Fetched %ld objects from the queue.
Failed to unarchive object. Error: %{public}@
Could not compile SQL query: %{public}s
Could not create sqlite3 object queue at path %@
%{public}@: Could not set journal mode. Ignoring. Error: %{public}s
Could not create tables. Error: %{public}s
SQL operation failed with code %d
Setting version number in queue database
Could not update version number. Error: %{public}s
Wrong database version. Expected 0. Actual: %{public}s
Could not retrieve database version. SQLITE error: %d
%{public}@: Missing key in archive: 
%{public}@
Backing off. Old interval: %0.3lf sec, new interval: %0.3lf. Next fire date: %{public}@
Backoff manager reset to zero seconds.
Not setting retry-after date because the new date is nil.
Not resetting retry-after date, because the new date %{public}@ is not later than the existing date %{public}@
Setting retry-after date to %{public}@. Old retry-after date was %{public}@
%{public}@ - %@ Received an MMCS server retry-after date of: %{public}@
%{public}@ - %@ Backing off the MMCS server. Interval: %lf, next fire date: %{public}@
%{public}@ - %@ Resetting MMCS backoff timer.
%{public}@ - %@ Received a metadata server retry-after date of: %{public}@
%{public}@ - %@ Backing off the metadata server. Interval: %lf, next fire date: %{public}@
%{public}@ - %@ Resetting metadata stream backoff timer.
Failed to archive userManifest, error: %@
%{public}@ - %@ Cannot save user manifest.
%{public}@ - %@ Received delete response. Successful deletes: %{public}@
Failed deletes: %{public}@
%{public}@ - %@ Successfully sent %lu delete requests.
%{public}@ - %@ Encountered temporary network issues during deletion. Will retry later.
... Error: %{public}@
%{public}@ - %@ Error sending delete request: %{public}@
%{public}@ - %@ Giving up sending %lu delete requests.
%{public}@ - %@ Found authentication error. Will try again later. %{public}@
%{public}@ - %@ No outstanding deletes to send.
%{public}@ - %@ Not deleting because we're shutting down.
%{public}@ - %@ Deleting asset collections: %{public}@
%{public}@ - %@ Not sending delete request at this time.
Unable to deserialize delete master manifest: %{public}@
%{public}@ - %@ Delete request has failed. Error: %{public}@
%{public}@ - %@ Delete response contains unknown file hash %{public}@
%{public}@ - %@ Delete response is missing the delete result. %{public}@
%{public}@ - %@ Delete response is missing a hash: %{public}@
%{public}@ - %@ These asset collections did not receive a delete response: %{public}@
%{public}@ - Asset collection has no master file hash: %@
Cannot convert file hash %{public}@ to string.
Cannot create dictionary.
Unable to serialize delete request data: %{public}@
Response array element is not a dictionary.
%{public}@: Unexpected nil album owner email
%{public}@: Forcing model reset sync.
%{public}@: Could not create delegate for person ID %@.
%{public}@: Shared Photo Stream is disabled for person ID %@. Not instantiating state machine.
Plugin does not conform to MSASStateMachineDelegate protocol.
%{public}@: Forgetting everything.
%{public}@: Could not enumerate contents of Shared Photo Stream directory. Error: %{public}@
%{public}@: Forgotten everything.
%{public}@: Forgetting everything about person ID %@
%{public}@: Model not found for person ID %@.
%{public}@: Shutting down state machine for personID %@.
%{public}@: Shutting down model.
%{public}@: Model has shut down.
%{public}@: Completed forgetting personID %@.
%{public}@: Not setting next activity date for a nil person ID.
%{public}@: Push notification received for Shared Photo Stream with targetPersonID %@.
%{public}@: Canceling all activities for personID %@
%{public}@: Stopping downloads for personID %@.
%{public}@: Unidled.
%{public}@: Idled.
MSASPlatform initialized.
%{public}@: Reauthorizing %ld assets download from album %{public}@
%{public}@: Failed to authorize %ld assets in album %{public}@. Error: %{public}@
%{public}@: Failed to reauthorize asset GUID %{public}@ for redownload.
%{public}@: Successfully reauthorized the download of %ld assets. Trying download again.
 ...Asset GUID %{public}@
%{public}@: Failed to reauthorize asset %{public}@. Error: %{public}@
%{public}@: Scheduling reauthorization for %ld items in album %{public}@
%{public}@: Retrieving %ld assets in albumGUID %{public}@.
%{public}@: The uploaded asset collection GUID %{public}@ is no longer in the model. Discontiniuing upload.
%{public}@: Cleaning up files for asset collection %{public}@.
%{public}@: Deleting asset file: %@
%{public}@: Failed to delete asset file at path %@. Error: %{public}@
%{public}@: Getting video URL for asset collection %{public}@.
%{public}@: Encountered visitor authentication failure. Getting new album URL. Error: %{public}@
%{public}@: Using video URLs %{public}@ with expiration %{public}@ for asset collection %{public}@ and media asset type %ld.
%{public}@: Unable to get a working video URL for asset collection %{public}@. Error: %{public}@.
%{public}@: Requesting video URL using new album URL %{public}@ for album %{public}@.
%{public}@: Unable to get a new album URL for album %{public}@. Error: %{public}@.
%{public}@: No asset has been completely uploaded for asset collection %{public}@.
%{public}@: Using video URL %{public}@ for asset collection %{public}@.
%{public}@: Unable to get a working video URL for asset collection %{public}@. Error:%{public}@
%{public}@: %{public}@ multiple contributors for album %{public}@.
%{public}@: %{public}@ public URL sharing for album %{public}@.
%{public}@: Event fired: %{public}@ for assetCollectionGUID: %{public}@, albumGUID: %{public}@
%{public}@: Scheduling event to fire: %{public}@, asset collection GUID: %{public}@ album GUID: %{public}@
%{public}@: Adding comment %{public}@ to asset collection %{public}@ in album %{public}@.
%{public}@: Failed to add comment %{public}@ to asset collection %{public}@ in album %{public}@. Error: %{public}@
%{public}@: Finished adding comment %{public}@ to asset collection %{public}@ in album %{public}@.
%{public}@: Scheduling the addition of %ld comments to asset collection %{public}@ in album %{public}@.
%{public}@: Removing %ld sharing relationships from album %{public}@
%{public}@: Failed to remove sharing relationships from album %{public}@. Error: %{public}@
%{public}@: Successfully removed sharing relationships from album %{public}@
%{public}@: Scheduling removal of sharing relationships %{public}@ from album %{public}@
%{public}@: Adding %ld sharing relationships to album %{public}@
%{public}@: Failed to add sharing relationships to album %{public}@. Error: %{public}@
%{public}@: Successfully added sharing relationsips to album %{public}@
%{public}@: Scheduling addition of sharing relationships %{public}@ to album %{public}@
%{public}@: Failed to get upload tokens for assets %{public}@. Error: %{public}@
%{public}@: Successfully obtained %ld upload tokens in asset collection %{public}@.
%{public}@: Adding %ld photos to album %{public}@.
%{public}@: Failed to add photos to album %{public}@. Error: %{public}@
%{public}@: Successfully enqueued %ld photos for upload to album %{public}@.
%{public}@: Failed to enqueue %ld photos for upload to album %{public}@.
%{public}@: Sending upload complete for %ld successful photos, and %ld failed photos.
%{public}@: Failed to send upload complete. Error: %{public}@
%{public}@: Successfully sent upload complete.
%{public}@: Preparing upload of assets for %ld asset collections.
%{public}@: No valid asset collections to send to the metadata server.
%{public}@: Skipping publication of %ld asset collections.
%{public}@: Scheduling addition of %ld asset collections.
%{public}@: Not expecting derivatives to arrive from plugin. Proceeding anyway.
%{public}@: Adding %ld asset collections to album %{public}@ retry %d.
%{public}@: Retried %d times to add asset collections %{public}@ to album %{public}@.
%{public}@: Giving up uploading asset collections %{public}@ to album %{public}@.
%{public}@: Cannot copy file from path %@ to %@. Error: %{public}@
%{public}@: Updating album: %{public}@
%{public}@: Failed to update album %{public}@. Error: %{public}@
%{public}@: Successfully updated album %{public}@
%{public}@: Creating album: %{public}@
%{public}@: Failed to create album %{public}@. Error: %{public}@
%{public}@: Successfully created album %{public}@
%{public}@: Deleting comment %{public}@ from asset collection %{public}@ in album %{public}@.
%{public}@: Failed to delete comment %{public}@ from asset collection %{public}@ in album %{public}@. Error: %{public}@
%{public}@: Successfully deleted comment %{public}@ from asset collection %{public}@ in album %{public}@.
%{public}@: Scheduling deletion of %ld comments in asset collection %{public}@ in album %{public}@.
%{public}@: Deleting %ld photos in album %{public}@
%{public}@: Failed to delete %ld asset collections in album %{public}@. Error: %{public}@
%{public}@: Successfully deleted %ld photos in album %{public}@
%{public}@: Deleting album: %{public}@
%{public}@: Failed to delete album. Error: %{public}@
%{public}@: Successfully deleted album %{public}@
%{public}@: Setting synced state for asset collection %{public}@ in album %{public}@
%{public}@: Can't set synced state for asset collection %{public}@ in album %{public}@. This is not an error. Status: %{public}@
%{public}@: Failed to set synced state for asset collection %{public}@ in album %{public}@. Error: %{public}@
%{public}@: Scheduling setting asset collection synced state for asset collection %{public}@ in album %{public}@
%{public}@: Setting synced state for album %{public}@
%{public}@: Not setting synced state for album %{public}@ because we don't have a state ctag.
%{public}@: Can't set synced state for album %{public}@. This is not an error. Status: %{public}@
%{public}@: Failed to set synced state for album %{public}@. Error: %{public}@
%{public}@: Scheduling setting album synced state for album %{public}@
%{public}@: Checking for album synced state changes in album %{public}@
%{public}@: Failed to check for synced state changes in album %{public}@. Error: %{public}@
%{public}@: Scheduling checking for album synced state changes in albums %{public}@
%{public}@: Checking for comment changes in album %{public}@,
%{public}@: Failed to check for comment changes in asset collections %{public}@ in album %{public}@. Error: %{public}@
%{public}@: Successfully checked for comment changes %{public}@ in album %{public}@.
%{public}@: Scheduling checking for comment changes %{public}@ in album %{public}@.
%{public}@: Getting metadata for %ld photos in album %{public}@.
%{public}@: Failed to get metadata. Error: %{public}@
%{public}@: Successfully checked for asset collection updates.
%{public}@: Scheduling update of metadata for %ld photos in album %{public}@
%{public}@: Accepting invitation using token.
%{public}@: Marking as spam invitation for token %{public}@
%{public}@: Failed to mark as spam invitation for token %{public}@. Error: %{public}@
%{public}@: Successfully marked as spam invitation for token %{public}@
%{public}@: Scheduling mark as spam invitation for token %{public}@
%{public}@: Marking as spam invitation for album %{public}@
%{public}@: Failed to mark as spam invitation for album %{public}@. Error: %{public}@
%{public}@: Successfully marked as spam invitation for album %{public}@
%{public}@: Scheduling mark as spam invitation for album %{public}@
%{public}@: Unsubscribing from album %{public}@
%{public}@: Failed to unsubscribe from album %{public}@. Error: %{public}@
%{public}@: Successfully unsubscribed from album %{public}@
%{public}@: Scheduling unsubscription from album %{public}@
%{public}@: Subscribing to album %{public}@
%{public}@: Failed to subscribe to album %{public}@. Error: %{public}@
%{public}@: Successfully subscribed to album %{public}@
%{public}@: Scheduling subscription to album %{public}@
%{public}@: Retrieving access controls for album %{public}@
%{public}@: Failed to retrieve access controls for album %{public}@. Error: %{public}@
%{public}@: Successfully retrieved %ld access control entries for album %{public}@
%{public}@: Scheduling retrieval of ACL for albums %{public}@
%{public}@: Finished checking for updates for %ld albums.
%{public}@: Checking for update in album %{public}@
%{public}@: Could not complete checking for updates for album %{public}@. Error: %{public}@
%{public}@: Finished checking for updates in album %{public}@.
%{public}@: Album %{public}@ was reset synced.
%{public}@: Found changes to %lu asset collections in album %{public}@.
%{public}@: Found sharing info changes to album %{public}@.
%{public}@: Saving album %{public}@.
%{public}@: Scheduling check for updates in albums %{public}@
%{public}@: Checking for album list updates. Reset sync: %d
%{public}@: Global reset sync found.
%{public}@: Failed to check for changes. Error: %{public}@
%{public}@: Successfully checked for changes updates.
%{public}@: New root ctag: %{public}@
%{public}@: Not scheduling another check for changes because there is already one scheduled.
%{public}@: Scheduling check for changes. Reset sync: %d
%{public}@: Scheduling retrieval of server side configuration because we don't have it yet.
%{public}@: checking for changes because there is no root ctag.
%{public}@: Cannot retry a command after a URL validation error, because the command does not have an album parameter.
%{public}@: Command was cancelled.
%{public}@: Command was stopped. Not removing from the command queue.
%{public}@: Encountered temporary network problems.
%{public}@: Received authentication error: %{public}@
%{public}@: Encountered visitor authentication failure. Getting new album URL and retrying command. Error: %{public}@
%{public}@: Encountered fatal error. Not retrying. Error: %{public}@
%{public}@: Encountered error: %{public}@. This command has encountered %d errors so far.
%{public}@: Retrying.
%{public}@: Giving up.
%{public}@: Command finished because it was cancelled.
%{public}@: Leaving command in queue.
%{public}@: Encountered temporary error. Will retry later. Error: %{public}@
%{public}@: Command will be replaced by command: %{public}@
%{public}@: Not performing any more commands because we're shutting down.
%{public}@: No more commands to perform.
%{public}@: Retrieved command for personID %{public}@, but Shared Photo Stream has been disabled. Skipping.
%{public}@: Unknown command: %{public}@. Skipping.
%{public}@: Not checking for any commands because we're shutting down.
%{public}@: Holding off until %{public}@ before performing next command.
%{public}@: Not allowed to transfer metadata at this time. Try again later.
%{public}@: Retrying outstanding activities.
%{public}@: Updated backoff time for backoff manager %{public}@
%{public}@: Received event for unknown backoff manager %{public}@
%{public}@: Computed next activity date: %{public}@
%{public}@: Failed to retrieve server-side configuration. Error: %{public}@
%{public}@: Retrieved server-side config version: %{public}@
%{public}@: Setting server-side configuration.
Original server config: %{public}@
After applying defaults: %{public}@
%{public}@: Reading persisted server-side config from disk.
Raw config: %{public}@
After applying defaults: %{public}@
%{public}@: Canceling outstanding operations for album GUID %{public}@, asset collection GUID %{public}@.
%{public}@: Removing upload items...
%{public}@: Finished removing upload items...
%{public}@: Removing download items...
%{public}@: Finished removing download items...
%{public}@: Retried %lu times for root ctag %{public}@. Replacing with pending root ctag %{public}@.
%{public}@: Setting a new pending root ctag %{public}@ that is different from existing pending root ctag %{public}@.
%{public}@: Canceling current operation.
%{public}@: Cancelling all commands. Filter album GUID: %{public}@, filter asset collection GUID %{public}@
%{public}@: Cancelled %d commands.
%{public}@: Shutting down uploader.
%{public}@: Shutting down downloader.
%{public}@: Shutting down state machine.
%{public}@: Stopping current operation.
%{public}@: Received retry-after from metadata server with date :%{public}@
%{public}@: Server-side config has changed. We will refetch the config and try again.
%{public}@: Querying for next items to upload. Album GUID: %{public}@. Max: %d.
%{public}@: Error retrieving items for upload. Error: %{public}s
%{public}@: ...found %ld items.
%{public}@: Enqueueing upload for asset collection: %{public}@
 In album with GUID: %{public}@
%{public}@: Attempting to re-enqueue asset collection %{public}@ for upload. Ignoring.
%{public}@: Setting inflight for assets with GUIDs %{public}@ in DownloadQueue.
%{public}@: Failed to set inflight for assets with GUIDs %{public}@ in DownloadQueue.
%{public}@: Counting number of assets to download using criteria: focus album GUID: %{public}@ focus asset collection GUID: %{public}@
%{public}@: Error counting items for download. Error: %{public}s
%{public}@: ...found %d assets.
%{public}@: Checking if there are assets to download using criteria: focus album GUID: %{public}@ focus asset collection GUID: %{public}@
%{public}@: Error checking for assets to download. Error: %{public}s
%{public}@: result: %d
%{public}@: Querying for the next assets to download using criteria: thumbnail: %d focus album GUID: %{public}@ focus asset collection GUID: %{public}@ isInflight: %{public}@
%{public}@: Error retrieving items for download. Error: %{public}s
%{public}@: ...found %ld assets.
%{public}@: Attempting to re-enqueue asset (GUID: %{public}@ collectionGUID: %{public}@) for download. Ignoring.
%{public}@: Enqueueing download for asset (GUID: %{public}@ collectionGUID: %{public}@) in album with GUID: %{public}@.
%{public}@: Cannot check if GUID %{public}@ is in %{public}@. Error: %{public}s
%{public}@: Removing GUID %{public}@ from %{public}@.
%{public}@: Setting error count for GUID %{public}@ in %{public}@ to %d.
%{public}@: Cannot count number of assets enqueued in %{public}@. Error: %{public}s
%{public}@: Found %d assets enqueued in %{public}@ for album GUID %{public}@.
%{public}@: Found %d assets enqueued in %{public}@.
%{public}@: Removing asset collections from album with GUID %{public}@ from pending list.
%{public}@: Removing asset collection GUID %{public}@ from pending list.
%{public}@: Adding asset collection GUID %{public}@ in album GUID %{public}@ as pending.
%{public}@: Counting number of commands queued
%{public}@: Error counting number of commands enqueued.sqlite error: %{public}s
%{public}@: ...found %lld commands in the queue.
%{public}@: Counting number of queued command %{public}@
%{public}@: Error counting number of 
%{public}@
 commands enqueued.sqlite error: %{public}s
%{public}@: ...found %lld instances.
%{public}@: Removing all entries from table %{public}@.
%{public}@: Removing command at order %lld.
%{public}@: Setting parameters for command at sequence number %lld.
%{public}@: ...done.
%{public}@: Retrieving command with minimum identifier %{public}@.
%{public}@: Retrieving command at the head of the queue.
%{public}@: Error retrieving command at the head of the queue. sqlite error: %{public}s
%{public}@: ...retrieved command %{public}@ at sequence number %lld for personID %@, album GUID %{public}@,  asset collection GUID %@
%{public}@: Requeueing pended command: %{public}@ at position %lld
%{public}@: Enqueueing pending command 
%{public}@
%{public}@: Enqueueing command %{public}@ at sequence number %lld.
%{public}@: ...smallest command number: %lld
%{public}@: Could not retrieve next command sequence number. sqlite error: %{public}s
%{public}@: ...next command sequence: %lld
%{public}@: Could not create person model command queue. Error: %{public}s
%{public}@: Could not create command queueindex. Error: %{public}s
%{public}@: Could not create person model pending command queue. Error: %{public}s
%{public}@: Could not create pending command queue index. Error: %{public}s
%{public}@: Could not create person model pending asset collections table. Error: %{public}s
%{public}@: Could not create download queue tables. Error: %{public}s
%{public}@: Could not create download queue index. Error: %{public}s
%{public}@: Could not create download queue reverse index. Error: %{public}s
%{public}@: Could not create upload queue tables. Error: %{public}s
%{public}@: Could not create upload queue order index. Error: %{public}s
%{public}@: Could not create upload queue GUID index. Error: %{public}s
%{public}@: Could not create download queue GUID index. Error: %{public}s
%{public}@: Could not analyze database. Ignoring. Error: %{public}s
%{public}@: Could not add download queue column. Error: %{public}s
%{public}@: Could not add albumGUID column to pending asset collections queue. Error: %{public}s
%{public}@: Could not add uploadPriority column to UploadQueue. Error: %{public}s
%{public}@: Could not drop album column in DownloadQueue. Ignoring. Error: %{public}s
%{public}@: Could not add isInflight column to DownloadQueue. Error: %{public}s
%{public}@: Not supporting migration from version %d. Recreating database.
%{public}@: Clearing out all next activity dates.
%{public}@: Setting next activity date %{public}@ for personID %@.
%{public}@: Retrieving next activity date by personID.
%{public}@: Error retrieving next activity date by personID. sqlite error: %{public}s
%{public}@: ...retrieved %ld entries.
%{public}@: Retrieving next activity date.
%{public}@: Cannot retrieve next activity date. sqlite error: %{public}s
%{public}@: ...retrieved date: %{public}@
%{public}@: Could not create daemon model tables. Error: %{public}s
%{public}@: Could not create index. Error: %{public}s
%{public}@: Could not analyze database indexes. Ignoring. Error: %{public}s
%{public}@: Cannot upgrade from database version %d to %d. Recreating database.
%{public}@: Rolling back transaction.
%{public}@: Ending transaction.
%{public}@: Beginning transaction.
%{public}@: Deleting persistent value for key %{public}@.
%{public}@: Could not delete persistent value for key %{public}@.
%{public}@: Setting persistent value for key %{public}@.
%{public}@: Could not set persistent value for key %{public}@.
%{public}@: Retrieved persistent object %{public}@ for key %{public}@.
%{public}@: Could not unarchive persistent object for key %{public}@: %@
%{public}@: Retrieved persistent string %{public}@ for key %{public}@.
%{public}@: Retrieving persistent value for key: %{public}@
%{public}@: Cannot retrieve persistent value for key %{public}@. sqlite status: %d
%{public}@: Could not compile SQL query: %{public}@. sqlite error: %{public}s
%{public}@: Shutting down. For destruction: %d
%{public}@: Can't shut down. sqlite error: %{public}s. Ignoring.
%{public}@: Could not create Properties table. Error: %{public}s
%{public}@: Set database version to %d.
%{public}@: Failed to create properties table.
%{public}@: Opening database at %@
%{public}@ Cannot open sqlite3 database at path %@. Recreating database.
%{public}@: Creating new database.
%{public}@: Cannot create sqlite3 database at path %@. Carrying on.
%{public}@: Could not set cache size. Ignoring. Error: %{public}s
%{public}@: Could not compile version check statement. Deleting database and recreating.
%{public}@: Fatal error: Could not read current version. Deleting database and recreating.
%{public}@: Fatal error: database version %d is greater than what the model understands (%d). Deleting database and recreating.
%{public}@: Migrating database from version %d to version %d.
%{public}@: Could not begin transaction. Error: %{public}s
%{public}@: Could not end transaction. Error: %{public}s
%{public}@: Could not roll back transaction. Error: %{public}s
%{public}@: Could not truncate sqlite database (%d).
%{public}@: Could not close sqlite database.
%{public}@: Database ready.
%{public}@: Hardlinked path %@ to %@.
%{public}@: Copying path %@ to %@.
%{public}@: Could not hardlink path %@ to %@. Error: %{public}@
Attempting to register two different assets under the same MMCS ID. Rejecting.
New asset: %{public}@
Old asset: %{public}@
Put assets called with zero assets.
Begin putting %lu assets.
Assets: %{public}@
URL: %{public}@
DSID: %@
Options: %{public}@
Put items failed with error: %{public}@
Get assets called with zero assets.
Begin getting %lu assets.
Assets: %{public}@
URL: %{public}@
DSID: %@
Options:%{public}@
Get Items failed with error: %{public}@
Unregistered asset: %{public}@
Registered asset for download: %{public}@ 
Could not register asset: %{public}@
Error: %{public}@
Registered asset for upload: %{public}@
Cancel operations: Could not find context. Ignoring
Request completed.
Unknown requestor context type %d found at request completion. Ignoring.
Put item failed. Error: %{public}@
Asset: %{public}@
Put item completed. Asset: %{public}@
Put item done: Could not get asset for item ID %lld.
Put item progress: %f state: %{public}@ asset: %p
Put item progress state: %{public}@ asset: %p
Put item progress: Could not get asset for item ID %lld. Ignoring.
Get item failed. Error: %{public}@
Asset: %{public}@
Get item completed. Asset: %{public}@. Path: %@
Get item done: Could not get asset for item ID %lld.
Get item progress: %f state: %{public}@ asset: %p
Get item progress state: %{public}@ asset: %p
Get item progress: Could not get asset for item ID %lld. Ignoring.
Getting file descriptor for itemID %lld
Could not get file descriptor for itemID %lld. Error: %{public}@
Got file descriptor %d for itemID %lld. UTI: %{public}@
Could not create MMCS Engine!
%{public}@: Unexpected callback - MMCSEngine:didFinishGettingAllAssetsContext:
%{public}@: Unexpected callback - MMCSEngine:didMakeGetProgress:state:onAsset:context:
%{public}@: Unexpected callback - MMCSEngine:didFinishGettingAsset:context:error:
%{public}@: Finished uploading %ld asset collections.
%{public}@: Found %ld orphaned assets. Ignoring.
%{public}@: Found %ld orphaned asset collections.
%{public}@: Upload progress: %.2f, state: %{public}@, on asset: %p
%{public}@: Upload progress state: %{public}@, on asset: %p
%{public}@: Asset upload was canceled. Ignoring.
%{public}@: Encountered temporary network error while uploading asset. Will retry later.
%{public}@: Error: %{public}@
%{public}@: Encountered MMCS auth error. Will reauthorize. Error: %{public}@
%{public}@: Failed to upload asset collection %{public}@. Error: %{public}@. Will retry later.
%{public}@: Failed to upload asset collection: %{public}@. Error: %{public}@. Giving up.
%{public}@: Already reported error on asset %{public}@. Ignoring.
%{public}@: Successfully uploaded asset collection: %{public}@
%{public}@: Could not find upload item that matches the completed asset collection.
%{public}@: Successfully uploaded asset %{public}@, but can't find matching asset collection. Ignoring.
%{public}@: Cannot cancel upload for assetCollections %{public}@ which is either not in progress, or has more than one items in an upload batch
%{public}@: Cancelling in-progress upload for asset collection %{public}@ with context %{public}@
%{public}@: Cannot cancel upload for assetCollection %{public}@ which is not in progress
%{public}@: Not uploading because we're shutting down.
%{public}@: Nothing to upload.
%{public}@: Rejecting asset collection %{public}@ from album %{public}@. Error: %{public}@
%{public}@: Missing expected asset collection in person model item %{public}@.
%{public}@: Uploading %ld assets for %ld asset collections.
%{public}@: No assets to upload, but detected %ld orphaned asset collections.
%{public}@: No assets to upload.
%{public}@: Canceling all uploads.
%{public}@: Stopping all uploads.
%{public}@: Unknown state: %d
%{public}@: Finished downloading %ld assets.
%{public}@: Finished downloading batch of %lu files, for a total of %lld bytes, in %0.3f seconds. Effective download rate: %0.3f kbps.
%{public}@: Download progress: %.2f, state: %{public}@, on asset: %p
%{public}@: Download progress state: %{public}@, on asset: %p
Download Latency: %0.3f seconds.
%{public}@: Asset download was canceled. Ignoring.
%{public}@: Encountered temporary network error while downloading asset. Will retry later.
%{public}@: Failed to download asset: %{public}@ due to MMCS auth error: %{public}@. Will reauthorize now.
%{public}@: Failed to download asset: %{public}@. Error: %{public}@. Will retry later.
%{public}@: Failed to download asset: %{public}@. Error: %{public}@. Giving up.
%{public}@: Already reported on asset %{public}@. Ignoring.
%{public}@: We aren't expecting an event for asset %{public}@. Ignoring.
%{public}@: Successfully downloaded asset %{public}@.
%{public}@: Unexpected callback: MMCSEngine:didFinishPuttingAllAssetsContext:
%{public}@: Unexpected callback: MMCSEngine:didMakePutProgress:state:context:
%{public}@: Unexpected callback: MMCSEngine:didCreateRequestorContext:context:error:
%{public}@: Unexpected callback: MMCSEngine:didFinishPuttingAsset:context:error:
%{public}@: Not downloading any more assets because we're shutting down.
%{public}@: Nothing to download.
%{public}@: Rejecting asset %{public}@ from albumGUID %{public}@. Error: %{public}@
%{public}@: Needing to get auth token for %lu assets
%{public}@: Downloading %ld assets.
%{public}@: No assets to download.
%{public}@: Work queue go idle.
%{public}@: Setting idle state.
%{public}@: Canceling all downloads.
%{public}@: Stopping all downloads.
%{public}@: Not allowed to download assets at this time.
%{public}@: %{public}@
Invalid override string, unexpected item count: %{public}@
Overriding MPS state response to %{public}@ because %{public}@ user default is set
deviceInfo %@
Setting MPS deviceID: %@
Request %@
Received error for request %@: %@
Response %@
MPSStateResponse %{public}@
Missing data from response
Invalid status code %ld, ignoring
Setting iCPL deviceID: %@ Error: %@
Found a retry-after header with a date string: %{public}@. Date: %{public}@
Received a retry-after date which occurs in the past: %{public}@. Ignoring.
Exception thrown during object unarchival from path %@: %{public}@. Ignored.
Exception thrown during object unarchival: %{public}@. Ignored.
%{public}@: Can't enumerate the next object in the model. Error: %{public}s
%{public}@: Could not compile SQL query: 
%{public}@
. sqlite error: %{public}s
%{public}@: Could not remove pending sharing info changes for album with nil GUID.
%{public}@: Could not remove pending asset collection with nil GUID.
%{public}@: Could not remove pending asset collections for album with nil GUID.
%{public}@: Could not add pending asset collection changes for album with nil GUID.
%{public}@: Could not remove pending changes for album with nil GUID.
%{public}@: Could not add pending changes for album with nil GUID.
%{public}@: Could not remove pending key value changes for album with nil GUID.
%{public}@: Failed to add comment GUID %{public}@. Error: %{public}@. Deleting comment.
%{public}@: Failed to delete sharing relationship %{public}@. Error: %{public}@. Reset-syncing ACLs.
%{public}@: Failed to add sharing %ld relationships. Error: %{public}@. Deleting and refreshing list.
%{public}@: Failed to add empty asset collection. Error: %{public}@.
%{public}@: Failed to add asset collection %{public}@. Error: %{public}@. Deleting asset collection and cancelling pending commands.
%{public}@: Requesting derivatives for %ld photos.
%{public}@: Specs: %{public}@
%{public}@: Received derivatives for %ld photos, and received rejections for %ld photos.
%{public}@: Computing derivatives for %ld photos took %.2f seconds, or %.2f per photo.
%{public}@: Failed to update album %{public}@. Error: %{public}@. Re-reading album metadata.
%{public}@: Failed to create album %{public}@. Error: %{public}@.
%{public}@: Failed to delete comment ID %d in asset collection GUID %{public}@. Error: %{public}@. Reset-syncing comments.
%{public}@: Failed to delete asset collection %{public}@. Error: %{public}@. Reset-syncing album.
%{public}@: Failed to delete album %{public}@. Error: %{public}@. Reset-syncing album list.
%{public}@: Failed to set synced state for asset collection %{public}@ in album %{public}@. Error: %{public}@. Requesting latest state.
%{public}@: Failed to set synced state for album %{public}@. Error: %{public}@. Requesting latest state.
%{public}@: Finished checking album synced state
%{public}@: Downloaded asset GUID %{public}@ for an album GUID %{public}@ that no lenger exists. Ignoring.
%{public}@: Failed to unsubscribe from album GUID %{public}@. Error: %{public}@. Reset-syncing albums.
%{public}@: Failed to subscribe from album GUID %{public}@. Error: %{public}@. Reset-syncing albums.
%{public}@: Finished checking asset collections
%{public}@: Finished checking album updates
%{public}@: Reconciling contents of album GUID %{public}@ due to a reset sync.
%{public}@: Finished checking album access controls
%{public}@: Still has pending changes %{public}@
%{public}@: Finished checking for changes
%{public}@: Reconciling current album list due to a reset sync.
%{public}@: Deleting album GUID %{public}@ due to reset sync.
%{public}@: Finished checking album changes
%{public}@: Flushing pending comment check queue.
%{public}@: Flushing pending comment check operation for asset collection GUID %{public}@ in album GUID %{public}@
%{public}@: Enqueuing comment check operation for asset collection GUID %{public}@ in album GUID %{public}@
%{public}@: Deleting all comment check operations.
%{public}@: Setting unviewed count for album %{public}@ to %d.
%{public}@: Not setting unviewed state on album GUID %{public}@ because it is the same as the previous state: %d
%{public}@: Not setting unviewed state on asset collection GUID %{public}@ because it is the same as the previous state: %d
%{public}@: Rejecting comment destined for non-existent asset collection.
%{public}@: Rejecting asset collection destined for non-existent album.
%{public}@: Rejecting access control destined for non-existent album.
%{public}@: Not updating access control with an equivalent object.
%{public}@: Reconstructing model from the server.
%{public}@: Command Queue has shut down.
%{public}@: Could not create album tables. Error: %{public}s
%{public}@: Could not create album by name index. Error: %{public}s
%{public}@: Could not create album by GUID index. Error: %{public}s
%{public}@: Could not create synced album metadata tables. Error: %{public}s
%{public}@: Could not create access control tables. Error: %{public}s
%{public}@: Could not create access control Album GUID index. Error: %{public}s
%{public}@: Could not create access control email index. Error: %{public}s
%{public}@: Could not create invitation tables. Error: %{public}s
%{public}@: Could not create invitation index. Error: %{public}s
%{public}@: Could not create invitation email index. Error: %{public}s
%{public}@: Could not create asset collection tables. Error: %{public}s
%{public}@: Could not create asset collection index. Error: %{public}s
%{public}@: Could not create synced asset collection metadata tables. Error: %{public}s
%{public}@: Could not create asset collection metadata index. Error: %{public}s
%{public}@: Could not create comment tables. Error: %{public}s
%{public}@: Could not create comment index. Error: %{public}s
%{public}@: Could not create comment ownership index. Error: %{public}s
%{public}@: Could not create grouped command tables. Error: %{public}s
%{public}@: Could not create comment checking queue. Error: %{public}s
%{public}@: Cannot migrate from database version %d to %d. Recreating database.
%{public}@: Attempting to enqueue a command without a command string. Rejected and ignored.
%{public}@: %d: SQL operation failed: %{public}s
sqlite3 operation failed with a SQLITE_BUSY. Please grab the crash report and attach to <rdar://problem/11375454>!.
%{public}@ Hysteresis-stabilized idled.
%{public}@: Hysteresis-stabilized unidled.
%{public}@ Releasing UI busy count. Now busy = %d, UI busy = %d
%{public}@ Retaining UI busy count. Now busy = %d, UI busy = %d
%{public}@ Releasing busy count. Now busy = %d, UI busy = %d
%{public}@ Retaining busy count. Now busy = %d, UI busy = %d
Summarizing %{public}@ - %{public}@
%{public}@ - %{public}@ Perf log entry missing event indicator. Aborting.
%{public}@ - %{public}@ Perf log entry missing facility indicator. Aborting.
%{public}@ - %{public}@ Unexpected start event. Aborting.
%{public}@ - %{public}@ Unexpected stop event. Aborting.
%{public}@ - %{public}@ Unknown event type 
%{public}@
. Aborting.
%{public}@ - %{public}@ Discarding measurements.
Stop %{public}@ - %{public}@
Start %{public}@ - %{public}@
Could not create performance log. Error: %{public}s
Could not create performance log index. Error: %{public}s
Could not analyze performance log database. Ignoring. Error: %{public}s
Cannot migrate performance log database from version %d to %d. Recreating.
%{public}s:%d: SQL operation failed: %{public}s
%{public}@: Retrieving new album URL for album with GUID %{public}@.
%{public}@: Refreshing server-side configuration.
%{public}@: Getting synced state for album %{public}@.
%{public}@: Retrieving comments for asset collections %{public}@ in album %{public}@
%{public}@: Unknown comment type: %{public}@. Ignoring
%{public}@: Marking as spam invitation with token %{public}@
%{public}@: Getting tokens for %ld assets from album %{public}@
%{public}@: Using contentURL %{public}@ for album %{public}@
%{public}@: Requesting metadata for %ld photos in album %{public}@.
%{public}@: Finished receiving metadata for %ld assets and skipped %ld assets, in album %{public}@. Error: %{public}@
%{public}@: Requesting summary of changes for album %{public}@.
%{public}@: Finished retrieving album summary for album %{public}@. Error: %{public}@
%{public}@: Requesting sharing relationships for album %{public}@
Found sharing relationship: %{public}@
%{public}@: Requesting changes since root ctag %{public}@
Album change received: %{public}@
Sharing info changed for album GUID: %{public}@
Key-Value info changed for album GUID: %{public}@
%{public}@: Received changes for %ld albums, sharing info changes for %ld albums, KV changes for %ld albums. Error: %{public}@
%{public}@: Sending request to delete comment %{public}@
%{public}@: Sending request to delete %ld photos.
%{public}@: Sending request to delete album %{public}@
%{public}@: Sending upload complete with %ld successful uploads and %ld failed uploads.
%{public}@: Ignoring unknown pending upload ID %{public}@
%{public}@: Skipping asset collection in response. Error: %{public}@
%{public}@: Getting video URL for asset %{public}@.
%{public}@: Bad request to server. Error: %{public}@
%{public}@: Album does not exist on server. Error: %{public}@
%{public}@: Precondition failed. Error: %{public}@
%{public}@: Bandwidth Limit Exceeded
Unknown server error response %{public}@
%{public}@: Unable to create URL with server url string %{public}@
%{public}@: Server does not return expiry for URLs %{public}@.
%{public}@: Setting to expire in 20 minutes.
%{public}@: Requesting MMCS upload token for asset %{public}@ that already has token %{public}@. Ignoring the request.
%{public}@: Empty MMCS hash for asset %{public}@ requesting upload token. Ignoring the request.
%{public}@: Getting upload tokens for %ld assets of asset collection with GUID %{public}@.
%{public}@: Assets %{public}@ already have upload tokens. Ignoring the request.
%{public}@: Obtained upload token %{public}@ for asset %{public}@.
%{public}@: Did not find asset matching hash %{public}@ when requesting upload token.
%{public}@: Sending metadata for %ld photos into album %{public}@.
%{public}@: Could not find matching asset for MMCS hash %{public}@.
%{public}@: Server did not respond to %ld assets out of %ld in a putasset request into album %{public}@.
%{public}@: Finished sending metadata for %ld photos into album %{public}@. Error: %{public}@
%{public}@: Updating album %{public}@
%{public}@: Finished updating album. Error: %{public}@
%{public}@: Creating album %{public}@
%{public}@: Finished creating album. Error: %{public}@
%{public}@: Server side config version has changed.
%{public}@: Our version string: %{public}@, server
s version string: %{public}@
%{public}@: Visitor authentication has failed. Client must reauth.
%{public}@: Rejecting response code %ld
%{public}@: Posting retry-after date of %{public}@ for person ID %@.
%{public}@: Sending request to %{public}@.
Headers: %{public}@
%{public}@: Transaction terminated with error: %{public}@
%{public}@: Received response code %ld
%{public}@: Headers: %@
%{public}@: Will retry request %@ with response %@ due to AuthKit error
%{public}@: Will retry request %@ with response %@ due to partition move
%{public}@: Retrying request %@
%{public}@: Exceeded max retry attempts for request %@, giving up
%{public}@: Cannot unserialize server's response. Error: %{public}@
%{public}@: Not making request because we're shutting down.
%{public}@: Cannot encode object to send to server. Error: %{public}@
%{public}@: Found an unknown video asset type
%{public}@: Found an unsupported videoType %{public}@
%{public}@: Found an unsupported photoType %{public}@
%{public}@: Found uploadpending flag for non-video asset
Unknown sharing relationship: %{public}@, skipping.
Found inconsistency of media asset type between asset (%d) and asset collection (%d)
%{public}@: Not enqueueing command %{public}@ because we're shutting down.
%{public}@: New command %{public}@ cannot be grouped with command %{public}@. Flushing.
%{public}@: There are already %d commands in the queue. Flushing.
%{public}@: Flushing %d events with command %{public}@. Invariant:%{public}@
%{public}@: Cannot find callout block for command: %{public}@
%{public}@: Not enqueueing subsequent item because we're shutting down.
%{public}@: Enqueueing subsequent item.
%{public}@: Not enqueueing first item because we're shutting down.
%{public}@: Enqueueing first item.
%{public}@: Restarting staleness timer.
%{public}@: Staleness timer fired.
%{public}@: Restarting idle timer.
%{public}@: Idle timer fired.
%{public}@: Flushing queue.
%{public}@: Shutting down.
%{public}@: Deasserting busy assertion.
%{public}@: Asserting busy assertion.
MSASPhoneInvitations
IDSServiceDelegate
NSObject
MSMediaStreamDaemon
MSPublisher
MSPublishStorageProtocolDelegate
MSPublishStreamsProtocolDelegate
MSStreamsProtocolDelegate
MSSubscriber
MSReauthorizationProtocolDelegate
MSSubscribeStorageProtocolDelegate
MSSubscribeStreamsProtocolDelegate
MSAsset
NSCopying
NSSecureCoding
NSCoding
MMCSAsset
MSAssetCollection
MSTimerGate
MSErrorUtilities
MCDictionaryUtilities
MSArrayUtilities
MSStringUtilities
MSDataUtilities
MSPublishStreamsProtocol
MSSubscribeStreamsProtocol
MSStreamsProtocol
MSMMCSProtocol
MSStorageProtocol
MSPublishMMCSProtocol
MSPublishStorageProtocol
MSSubscribeMMCSProtocol
MSSubscribeStorageProtocol
MPSStateResponse
MSSubscribedStream
MPSStateRequest
MSServerSideConfigProtocol
MSServerSideConfigManager
MSServerSideConfigProtocolDelegate
MSASPersonInfoManager
MSResetServerProtocol
MSResetServer
MSResetServerProtocolDelegate
MSReauthorizationProtocol
MSObjectQueue
MSObjectWrapper
MSBackoffManager
MSCupidStateMachine
MSDeleter
MSDeleteStreamsProtocolDelegate
MSDeleteStreamsProtocol
MSASAlbum
MSASAssetCollection
MSAlbumSharingDaemon
MSASStateMachineDelegate
MSASModel
MSASAlbumChange
MSASAssetCollectionChange
MSASCommentChange
MSASServerSideModel
MSASDefinitions
MSASAssetInfoToReauthForDownload
MSASStateMachine
MSASAssetDownloaderDelegate
MSASAssetUploaderDelegate
MSBackoffManagerDelegate
MSASPersonModelItem
MSASPersonModel
MSASDaemonModel
MSASModelBase
MSFileUtilities
MMCSRequestorContext
MMCSEngine
MMCSKit
MSASAssetUploader
MSASAssetDownloader
MSASAssetTransferer
MMCSEngineDelegate
MSProtocolUtilities
MSASSharingRelationship
MSUtilities
MSASComment
MSASModelEnumerator
MSASInvitation
MSASCommentCheckOperation
MSASPendingChanges
GroupedCommands
MSDaemon
MSPerformanceLogger
MSASPConnectionGate
MSASProtocol
NSURLConnectionDelegate
MSASEnqueuedCommand
MSASServerSideModelGroupedCommandQueue
MSImageScalingSpecification
MSASGroupedQueue
MSVideoDerivativeSpecification
_stateMachine
_album
_idsService
_sendMessageIdentifierToPhone
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
init
addPendingPhoneInvitations:toOwnedAlbum:inStateMachin:
removeSharingRelationships:forAlbum:
stateMachine
setStateMachine:
album
setAlbum:
idsService
setIdsService:
sendMessageIdentifierToPhone
setSendMessageIdentifierToPhone:
.cxx_destruct
stringWithFormat:
removeObjectForKey:
objectForKey:
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
dictionaryWithObjects:forKeys:count:
numberWithDouble:
setObject:forKey:
archivedDataWithRootObject:requiringSecureCoding:error:
length
valueForKey:
standardUserDefaults
dictionary
addObject:
countByEnumeratingWithState:objects:count:
setWithCapacity:
anyObject
accounts
enumerateKeysAndObjectsUsingBlock:
setWithObject:
addDelegate:queue:
initWithService:
_delegate
_retainedObjects
nextActivityDate
hasOutstandingActivity
personIDHasOutstandingPublications:
isInRetryState
didIdle
didUnidle
_boundPublisherForPersonID:
_boundSubscriberForPersonID:
_boundDeleterForPersonID:
_boundServerSideConfigManagerForPersonID:
retryOutstandingActivities
reenqueueQuarantinedActivitiesWithReason:
abortAllActivityForPersonID:
stopAllActivities
forgetPersonID:
enqueueAssetCollection:personID:outError:
dequeueAssetCollectionWithGUIDs:personID:outError:
pollForSubscriptionUpdatesForPersonID:
pollForSubscriptionUpdatesTriggeredByPushNotificationForPersonID:
resetSubscriberSyncForPersonID:
computeHashForAsset:personID:
subscribedStreamsForPersonID:
ownSubscribedStreamForPersonID:
serverSideConfigurationForPersonID:
didReceiveServerSideConfigurationVersion:forPersonID:
refreshServerSideConfigurationForPersonID:
didReceiveNewServerSideConfigurationForPersonID:
deleteAssetCollections:forPersonID:
start
stop
didReceiveNewShareState:oldShareState:forPersonID:
showInvitationFailureAlertForPersonID:failures:
didReceiveAuthenticationFailureForPersonID:
didReceiveAuthenticationSuccessForPersonID:
didExceedPublishQuotaForPersonID:retryDate:
didReceiveGlobalResetSyncForPersonID:
didReceivePushNotificationForPersonID:
mayDownloadPersonID:
delegate
setDelegate:
subscriberWillDeassignPluginAsDelegateOfSubscriber:
removeObject:
publisherWillDeassignPluginAsDelegateOfPublisher:
personIDForPollingTriggeredByPushNotification
subscriberPluginClass
postNotificationName:object:userInfo:
dictionaryWithObjectsAndKeys:
defaultCenter
isEqualToString:
removeItemAtPath:error:
defaultManager
deleterWillAssignPluginAsDelegateOfDeleter:
deleterPluginForPersonID:
deletePluginClass
subscriberWillAssignPluginAsDelegateOfSubscriber:
subscriberPluginForPersonID:
publisherWillAssignPluginAsDelegateOfPublisher:
publisherPluginForPersonID:
publisherPluginClass
mediaStreamDaemonDidUnidle:
mediaStreamDaemonDidIdle:
containsObject:
compare:
_daemon
_state
_uploadQueue
_derivativesQueue
_quarantinedQueue
_pendingDerivativesQueue
_requestAuthQueue
_sendingQueueCount
_sendingQueue
_fileHashToAssetMap
_protocol
_storageProtocol
_storageProtocolURL
_tempFiles
_maxSizeByUTI
_publishTargetByteCount
_publishBatchSize
_maxErrorCount
publishStorageProtocol:didFinishUploadingAsset:error:
publishStorageProtocol:didRequestFDForAsset:
publishStorageProtocol:didFinishUsingFD:forAsset:
publishStorageProtocolDidFinishPublishingAllAssets:
publishStreamsProtocol:didFinishUploadingMetadataResponse:error:
publishStreamsProtocol:didReceiveAuthenticationError:
publishStreamsProtocol:didFinishSendingUploadCompleteError:
protocol:didReceiveRetryAfterDate:
submitAssetCollectionsForPublication:skipAssetCollections:
abort
publish
reenqueueQuarantinedAssetCollections
publishBatchSize
setPublishBatchSize:
initWithPersonID:baseURL:
deactivate
dealloc
_updateMasterManifest
enqueueAssetCollections:outError:
dequeueAssetCollectionWithGUIDs:outError:
computeHashForAsset:
_refreshServerSideConfiguredParameters
_serverSideConfigurationDidChange:
_registerAsset:
_registerAllAssetsForWrapper:
_quarantineOrDiscardWrappers:withError:
_verifyAssetFile:
_collectionWithNoDerivatives:
_checkAssetCollectionFiles:
_checkObjectWrappers:
_isAllowedToUpload
_requestDerivatives
_addAssetToFileHashMap:
_removeAssetFromFileHashMap:
_removeAssetsInAssetCollectionWrappersFromAssetMap:
_didFinishUsingAssetCollections:
_sendMetadataToStreams
_invalidStreamsResponseErrorUnderlyingError:
_sendFilesToMMCS
_categorizeError:setOutIsIgnorable:setOutIsCounted:setOutIsFatal:setOutNeedsBackoff:setOutIsTemporary:setOutIsTokenAuth:setOutIsAuthError:
_sendUploadComplete
_stop
_abortedError
_abort
_forget
_isInRetryState
daemon
setDaemon:
storageProtocolURL
setStorageProtocolURL:
publishTargetByteCount
setPublishTargetByteCount:
publisher:didEncounterError:publishingAssetCollections:
removeAllObjects
publisher:didFinishPublishingAssetCollections:
arrayWithCapacity:
didDetectUnrecoverableCondition
arrayWithObject:
code
domain
publisher:didRequestCloseFileDescriptor:forAsset:
fileSystemRepresentation
publisher:didRequestOpenFileDescriptorForAsset:
writeData:
initWithFileDescriptor:closeOnDealloc:
contentURLForPersonID:
array
publisher:willPublishAssetCollections:
removeObjectsInArray:
isEqualToData:
nextActivityDateForPersonID:
dateWithTimeIntervalSinceNow:
intValue
URLWithString:
addObjectsFromArray:
initWithFormat:
appendFormat:
longLongValue
publisher:didRequestSubmissionOfAssetCollections:
removeObjectsAtIndexes:
mutableCopy
enumerateObjectsUsingBlock:
addIndex:
indexSet
date
policyMayUpload
fileExistsAtPath:isDirectory:
performSelectorOnMainThread:withObject:waitUntilDone:
mainThread
currentThread
numberWithLongLong:
initWithObjects:
setWithArray:
writeToFile:atomically:
_setMasterNextActivityDate:forPersonID:
addObserver:selector:name:object:
publisherForPersonID:
existingPublisherForPersonID:
_clearInstantiatedPublishersByPersonID
personIDsWithOutstandingActivities
allValues
allKeys
propertyListWithData:options:format:error:
dataWithContentsOfFile:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
baseURLForPersonID:
_checkOneMoreTime
_newSubscriptionsByStreamID
_retrievalState
_reauthProtocol
_retrievalQueue
_assetsBeingRetrieved
_targetRetrievalByteCount
_retrievalBatchSize
reauthorizationProtocol:reauthorizedAssets:rejectedAssets:error:
reauthorizationProtocol:didReceiveAuthenticationError:
subscribeStorageProtocol:didFinishRetrievingAsset:error:
subscribeStorageProtocolDidFinishRetrievingAllAssets:
subscribeStreamsProtocol:willReceiveUpdatesForPersonID:wasReset:metadata:
subscribeStreamsProtocol:didReceiveAssetCollections:forPersonID:
subscribeStreamsProtocol:didFinishReceivingUpdatesForPersonID:ctag:
subscribeStreamsProtocol:didFindDisappearedSubscriptionForPersonID:
subscribeStreamsProtocol:didFindTemporarilyUnavailableSubscriptionForPersonID:
subscribeStreamsProtocol:didFinishError:
subscribeStreamsProtocol:didReceiveAuthenticationError:
resetSync
checkForNewAssetCollectionsIfMissingCtag
checkForNewAssetCollections
checkForOutstandingActivities
retrieveAssets:
subscribedStreams
ownSubscribedStream
_changeStateTo:
_changeRetrievalStateTo:
_refreshServerSideConfigurationParameters
_hasOutstandingPoll
_setHasOutstandingPoll:
_subscriptionsByStreamID
_setSubscriptionsByStreamID:
_isAllowedToDownload
_checkForNewAssetCollections
_didFinishRetrievingSubscriptionUpdate
_didReceiveAuthenticationError:
_retrieveAssets
_retrieveNextAssets
_reauthorizeAssets
_stopOutSubscriberState:outRetrievalState:
_finishedRetrievingAsset:
targetRetrievalByteCount
setTargetRetrievalByteCount:
retrievalBatchSize
setRetrievalBatchSize:
subscriber:didFinishRetrievingAsset:error:
removeObjectAtIndex:
objectAtIndex:
subscriberDidCompleteCheckForNewAssetCollections:
subscriber:didFailToRetriveSubscriptionUpdateWithError:
raise:format:
subscriber:didFindDisappearedSubscriptionforStreamID:
subscriber:didFinishRequestingAssetRetrievalForStreamID:
subscriber:didRequestAssetRetrievalForAssetCollections:streamID:
subscriber:didReceiveDeleteForAssetCollections:streamID:
subscriber:willBeginRequestingAssetRetrievalForStreamID:
subscriber:didResetSyncForStreamID:
dictionaryWithCapacity:
policyMayDownload
numberWithBool:
boolValue
_descriptionForRetrievalState:
_descriptionForState:
subscriberForPersonID:
existingSubscriberForPersonID:
_clearInstantiatedSubscribersByPersonID
_assetDataAvailableOnServer
_masterAssetHash
_metadata
_path
_MMCSURL
_fileData
_error
_type
_fileHash
_protocolFileSize
_MMCSAccessHeader
_MMCSAccessHeaderTimeStamp
_MMCSReceipt
_GUID
_assetCollectionGUID
_batchCreationDate
_photoCreationDate
_userInfo
_mediaAssetType
copyWithZone:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
MMCSOpenNewFileDescriptor
MMCSItemType
MMCSUTI
setMMCSUTI:
MMCSItemID
setMMCSItemID:
MMCSHash
setMMCSHash:
MMCSItemSize
setMMCSItemSize:
MMCSError
setMMCSError:
MMCSAccessHeader
setMMCSAccessHeader:
MMCSAccessHeaderTimeStamp
setMMCSAccessHeaderTimeStamp:
MMCSReceipt
setMMCSReceipt:
MMCSItemFlags
setMMCSItemFlags:
fileHash
setFileHash:
type
setType:
protocolFileSize
setProtocolFileSize:
initWithGUID:
isPhoto
isVideo
_fileSize
setMMCSAccessHeader:andTimeStamp:
_fileSizeOnDisk
setMetadataValue:forKey:
addMetadataValue:forKey:
metadataValueForKey:
masterAssetHash
setMasterAssetHash:
metadata
setMetadata:
path
setPath:
MMCSURL
setMMCSURL:
fileData
setFileData:
error
setError:
GUID
setGUID:
assetCollectionGUID
setAssetCollectionGUID:
batchCreationDate
setBatchCreationDate:
photoCreationDate
setPhotoCreationDate:
userInfo
setUserInfo:
mediaAssetType
setMediaAssetType:
assetDataAvailableOnServer
setAssetDataAvailableOnServer:
decodeBoolForKey:
decodeIntegerForKey:
decodePropertyListForKey:
decodeInt64ForKey:
initWithString:
decodeObjectOfClasses:forKey:
setWithObjects:
decodeObjectOfClass:forKey:
encodeBool:forKey:
encodeInteger:forKey:
encodeInt64:forKey:
absoluteString
encodeObject:forKey:
fileSize
unsignedLongLongValue
attributesOfItemAtPath:error:
pathExtension
numberWithUnsignedLongLong:
asset
assetWithAsset:
copy
_assetCollectionID
_ctag
_masterAsset
_derivedAssets
_fileName
_wasDeleted
_serverUploadedDate
_initialFailureDate
initWithMasterAsset:fileName:derivedAssets:
derivedAssets
setDerivedAssets:
assetCollectionID
setAssetCollectionID:
ctag
setCtag:
masterAsset
setMasterAsset:
fileName
setFileName:
wasDeleted
setWasDeleted:
serverUploadedDate
setServerUploadedDate:
initialFailureDate
setInitialFailureDate:
stringWithString:
collectionWithMasterAsset:fileName:
collectionWithMasterAsset:fileName:derivedAssets:
pathMediaStreamDir
stringByAppendingPathComponent:
pathAlbumSharingDir
alphanumericCharacterSet
invertedSet
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
_enabled
disable
enable
enabled
setEnabled:
dataWithBytes:length:
bytes
MSErrorWithDomain:code:description:suggestion:
localizedDescription
localizedRecoverySuggestion
errorWithDomain:code:userInfo:
_MSVerboseDescriptionRecursionCount:
MSErrorWithDomain:code:description:underlyingError:additionalUserInfo:
_MSApplyBlock:
MSContainsErrorWithDomain:code:
MSVerboseDescription
MSMakePrimaryError
MSIsTemporaryNetworkError
MSASStateMachineIsCanceledError
MSFindPrimaryError
MSCanBeIgnored
MSNeedsBackoff
MSIsCounted
MSIsFatal
MSIsAuthError
MSIsBadTokenError
MSIsQuotaError
MSIsRegistrationError
MSMMCSRetryAfterDate
MSErrorWithDomain:code:description:
MSErrorWithDomain:code:description:underlyingError:
initWithCapacity:
MSMutableDeepCopyWithZone:
MSDeepCopyWithZone:
MSMutableDeepCopy
MSDeepCopy
keyEnumerator
MSRemoveOneObject:
MSRemoveOneObjectByPointerComparison:
cStringUsingEncoding:
stringWithCString:encoding:
MSHexData
MSUniqueID
MSMakeUUID
MSTempFileOutFileName:
MSStringWithBool:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytes:length:encoding:
MSInitWithBase64Encoding:
MSBase64Encoding
MSHexString
getCharacters:range:
initWithBytesNoCopy:length:freeWhenDone:
_context
_assetCollectionsInFlight
_UCContext
_missingAssetFieldErrorWithFieldName:
_insertInfoAboutAsset:intoDictionary:outError:
_resetConnectionVariables
_metadataDictForAsset:outError:
_metadataDictForAssetCollection:outError:
sendMetadataForAssetCollections:
sendUploadCompleteForAssetCollections:
_coreProtocolDidFinishResponse:error:
_coreProtocolDidFailAuthenticationError:
_coreProtocolDidFinishUCResults:error:
unsignedLongValue
_chunkIndex
_parseContext
_pathToChunkIndex:
pollForSubscriptionUpdatesWithAccountAnchors:
_coreProtocolDidFinishError:
_coreProtocolDidGetDataChunk:
_coreProtocolDidFailAuthentication:
_parseChunks
_parseNextChunk
_chunkDidBeginStreamForPersonID:wasReset:metadata:
_chunkDidParseAssetCollections:forPersonID:
_chunkDidEndStreamForPersonID:ctag:
_chunkDidFindSubscriptionGoneForPersonID:
_chunkDidFindSubscriptionTemporarilyUnavailableForPersonID:
_invalidFieldErrorWithFieldName:suggestion:
_invalidFieldErrorWithFieldName:
_assetFromCoreDictionary:personID:outError:
_assetCollectionsFromCoreArray:personID:outError:
dateWithTimeIntervalSince1970:
doubleValue
initWithContentsOfFile:
initWithData:encoding:
_personID
getURL
putURL
resetURL
reauthorizeURL
uploadCompleteURL
deleteURL
deviceInfoDict
_didFindServerSideConfigurationVersion:
_didReceiveRetryAfterDate:
_refreshAuthTokenForContext:
personID
authTokenForPersonID:
theDaemon
URLWithString:relativeToURL:
shouldEnableNewFeatures
_MMCSDirPath
_engine
_engineDirPath
didFinishUsingAssets:
deactivateRemoveAllFiles:
initWithPersonID:path:
_getFileDescriptorFromItem:
_getUTIFromItem:
_getItemDone:path:error:
_putItemDone:putReceipt:error:
_requestCompleted
engine
appBundleInfoString
fileURLWithPath:
getCFRunLoop
currentRunLoop
stringWithFileSystemRepresentation:length:
computeItemIDForAsset:
_itemIDToAssetDict
_itemIDs
_signatures
_authTokens
_itemFlags
_itemsInFlight
publishAssets:URL:
initWithPersonID:
_putItemsFailure
initWithUnsignedLongLong:
_itemCount
_tellDelegateProtocolDidFinishRetrievingAssetParams:
_retryAfterSeconds
_version
_icplAction
_mpsAction
_has
setRetryAfterSeconds:
setHasRetryAfterSeconds:
hasRetryAfterSeconds
mpsAction
setMpsAction:
setHasMpsAction:
hasMpsAction
mpsActionAsString:
StringAsMpsAction:
icplAction
setIcplAction:
setHasIcplAction:
hasIcplAction
icplActionAsString:
StringAsIcplAction:
setVersion:
setHasVersion:
hasVersion
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
retryAfterSeconds
version
shouldLogAtLevel:
logFacility:level:format:args:
logFile:func:line:facility:level:format:args:
_streamID
initWithStreamID:
streamID
setStreamID:
subscribedStreamWithStreamID:
_originalLibrarySize
_backupDeviceID
_backupDeviceUDID
_backupDeviceUUID
_iCPLDeviceID
_mPSDeviceID
hasMPSDeviceID
hasICPLDeviceID
hasBackupDeviceID
hasBackupDeviceUUID
hasBackupDeviceUDID
setOriginalLibrarySize:
setHasOriginalLibrarySize:
hasOriginalLibrarySize
mPSDeviceID
setMPSDeviceID:
iCPLDeviceID
setICPLDeviceID:
backupDeviceID
setBackupDeviceID:
backupDeviceUUID
setBackupDeviceUUID:
backupDeviceUDID
setBackupDeviceUDID:
originalLibrarySize
initWithContentsOfFile:options:error:
_configURL
queryConfiguration
_didFinishWithResponse:error:
_didFailAuthenticationWithError:
initWithString:relativeToURL:
_config
_configPath
serverSideConfigProtocol:didFinishWithConfiguration:error:
serverSideConfigProtocol:didReceiveAuthenticationError:
config
setConfig:
refreshConfiguration
stringByDeletingLastPathComponent
isEqualToDictionary:
configManagerForPersonID:
existingConfigManagerForPersonID:
abortAllActivities
intValueForParameter:forPersonID:defaultValue:
doubleValueForParameter:forPersonID:defaultValue:
longValueForParameter:forPersonID:defaultValue:
longLongValueForParameter:forPersonID:defaultValue:
objectForKey:forPersonID:defaultValue:
longValue
sharedManager
allocWithZone:
initWithPath:
_personIDToPersonInfoDictionary
_pathForPersonInfoDictionary
updateWithSharingRelationship:
firstNameForPersonID:
lastNameForPersonID:
fullNameForPersonID:
emailForPersonID:
personIDToPersonInfoDictionary
setPersonIDToPersonInfoDictionary:
pathForPersonInfoDictionary
setPathForPersonInfoDictionary:
dictionaryWithContentsOfFile:
resetServerState
_selfReference
resetServerProtocol:didFinishWithError:
resetServerProtocol:didReceiveAuthenticationError:
resetServer
resetServerObjectWithPersonID:baseURL:
_assetsInFlight
requestReauthorizationForAssets:
_statements
_statementLabel:query:
count
appendObjectWrappers:
_objectWrapperFromQueueQuery:outSize:
allObjectWrappersMaxCount:
objectWrappersWithZeroSizeMaxCount:
smallestObjectWrappersTargetTotalSize:maxCount:
allObjectWrappersOrderedByDescendingErrorCountMaxCount:
removeObjectWrappersFromQueue:
removeAllObjectWrappersFromQueue
commitErrorCountsForObjectWrappers:
commitObjectsWrappers:
_size
_uniqueID
_object
_errorCount
initWithObject:size:
size
setSize:
uniqueID
setUniqueID:
object
errorCount
setErrorCount:
wrapperWithObject:size:
indexOfObject:inWrapperArray:
objectsFromWrappers:
objectsFromWrappers:equalToObject:
_initialInterval
_backoffFactor
_randomizeFactor
_maxBackoffInterval
_currentInterval
_nextExpiryDate
_retryAfterDate
initWithInitialInterval:backoffFactor:randomizeFactor:maxBackoffInterval:retryAfterDate:
setCurrentInterval:
setNextExpiryDate:
nextExpiryDate
didReceiveRetryAfterDate:
reset
backoff
copyParameters
_complainAboutMissingKeyInArchive:
initialInterval
setInitialInterval:
backoffFactor
setBackoffFactor:
randomizeFactor
setRandomizeFactor:
maxBackoffInterval
setMaxBackoffInterval:
currentInterval
retryAfterDate
setRetryAfterDate:
dateWithTimeIntervalSinceReferenceDate:
decodeDoubleForKey:
containsValueForKey:
timeIntervalSinceReferenceDate
encodeDouble:forKey:
initWithTimeIntervalSinceNow:
distantPast
_manifestPath
_userManifest
_streamsBackoffManager
_MMCSBackoffManager
_hasDeactivated
forget
_commitUserManifest
_resetStreamsBackoffTimer
_backoffStreamsBackoffTimer
_didReceiveStreamsRetryAfterDate:
_resetMMCSBackoffTimer
_backoffMMCSBackoffTimer
_didReceiveMMCSRetryAfterDate:
_latestNextActivityDate
set_userManifest:
hasDeactivated
setHasDeactivated:
_deleteQueue
_requestedDeleteWrappers
_batchSize
deleteProtocol:didFinishSuccessfulCollections:failedCollections:error:
deleteProtocol:didReceiveAuthenticationError:
deleteAssetCollections:
performOutstandingActivities
_isAllowedToDelete
_sendDeleteRequest
batchSize
setBatchSize:
deleter:didFinishDeletingAssetCollection:error:
policyMaySendDelete
deleterForPersonID:
existingDeleterForPersonID:
_clearInstantiatedDeletersByPersonID
_collectionsInFlight
sendDeletionRequestForAssetCollections:
MSDSPAssetCollectionWithMasterFileHash:
_ownerIsWhitelisted
_isFamilySharedAlbum
_relationshipState
_ownerEmail
_ownerPersonID
_ownerFullName
_ownerFirstName
_ownerLastName
_subscriptionDate
_foreignCtag
_URLString
_publicURLString
ownerFullName
ownerFirstName
ownerLastName
ownerEmail
useForeignCtag
setOwnerEmail:
ownerPersonID
setOwnerPersonID:
setOwnerFullName:
setOwnerFirstName:
setOwnerLastName:
ownerIsWhitelisted
setOwnerIsWhitelisted:
subscriptionDate
setSubscriptionDate:
relationshipState
setRelationshipState:
foreignCtag
setForeignCtag:
URLString
setURLString:
publicURLString
setPublicURLString:
context
setContext:
isFamilySharedAlbum
setIsFamilySharedAlbum:
appendString:
encodeInt:forKey:
decodeIntForKey:
albumWithAlbum:
_hasComments
_isDeletable
_isMine
_albumGUID
_assets
_photoNumber
_timestamp
_fullName
_firstName
_lastName
_email
fullName
firstName
lastName
email
initWithFileName:path:
setAssets:
hasVideoAsset
isPhotoIris
isAutoloopVideo
albumGUID
setAlbumGUID:
assets
photoNumber
setPhotoNumber:
timestamp
setTimestamp:
hasComments
setHasComments:
setPersonID:
setFullName:
setFirstName:
setLastName:
setEmail:
isDeletable
setIsDeletable:
isMine
setIsMine:
assetCollectionWithAssetCollection:
_isRetryingOutstandingActivities
_busyCount
_personIDToStateMachineMap
_personIDToDelegateMap
_daemonModel
_mapQueue
_workQueue
_nextUpdateDateByPersonID
shutDown
mapQueueShutDownStateMachineInMap:personIDs:index:forDestruction:completionBlock:
shutDownCompletionBlock:
setFocusAlbumGUID:forPersonID:
setFocusAssetCollectionGUID:forPersonID:
didCreateStateMachineForPersonID:
willDestroyStateMachineForPersonID:
didDestroyStateMachineForPersonID:
didReceiveAuthFailureForPersonID:
didReceiveAuthSuccessForPersonID:
isWaitingForAuth
hasCommandsInGroupedCommandQueue
retryOutstandingActivitiesForPersonID:
stopAssetDownloadsForPersonID:
cancelActivitiesForPersonID:
addAlbum:
deleteAlbumWithGUID:inviterAddress:
personIDListeningToPushNotification
setNextActivityDate:forPersonID:
sendServerSideConfigurationDidChangeNotificationForPersonID:
existingModelForPersonID:
modelForPersonID:
refreshResetSync:personID:
refreshResetSync:personID:info:
refreshContentOfAlbumWithGUID:resetSync:personID:
refreshContentOfAlbumWithGUID:resetSync:personID:info:
refreshAccessControlListOfAlbumWithGUID:personID:
refreshAccessControlListOfAlbumWithGUID:personID:info:
refreshCommentsForAssetCollectionWithGUID:resetSync:personID:
refreshCommentsForAssetCollectionWithGUID:resetSync:personID:info:
addAlbum:personID:
addAlbum:personID:info:
modifyAlbumMetadata:personID:
modifyAlbumMetadata:personID:info:
deleteAlbumWithGUID:personID:
deleteAlbumWithGUID:personID:info:
markAlbumGUIDAsViewed:personID:
markAlbumGUIDAsViewed:personID:info:
markAlbumGUIDAsViewed:personID:moveLastViewedAssetCollectionMarker:info:
subscribeToAlbumWithGUID:personID:
subscribeToAlbumWithGUID:personID:info:
unsubscribeFromAlbumWithGUID:personID:
unsubscribeFromAlbumWithGUID:personID:info:
markAsSpamAlbumWithGUID:personID:
markAsSpamInvitationWithGUID:personID:
markAsSpamInvitationWithToken:personID:
acceptInvitationWithToken:personID:completionBlock:
acceptInvitationWithToken:personID:info:completionBlock:
acceptInvitationWithGUID:personID:
acceptInvitationWithGUID:personID:info:
rejectInvitationWithGUID:personID:
rejectInvitationWithGUID:personID:info:
addAccessControlEntries:toAlbumWithGUID:personID:
addAccessControlEntries:toAlbumWithGUID:personID:info:
removeAccessControlEntryWithGUID:personID:
removeAccessControlEntryWithGUID:personID:info:
setPublicAccessEnabled:forAlbumWithGUID:personID:completionBlock:
setPublicAccessEnabled:forAlbumWithGUID:personID:info:completionBlock:
setMultipleContributorsEnabled:forAlbumWithGUID:personID:completionBlock:
setMultipleContributorsEnabled:forAlbumWithGUID:personID:info:completionBlock:
addAssetCollections:toAlbumWithGUID:personID:
addAssetCollections:toAlbumWithGUID:personID:info:
deleteAssetCollectionWithGUID:personID:
deleteAssetCollectionWithGUID:personID:info:
deleteAssetCollectionsWithGUIDs:personID:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:personID:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:personID:info:
addComments:toAssetCollectionWithGUID:personID:
addComments:toAssetCollectionWithGUID:personID:info:
deleteCommentWithGUID:personID:
deleteCommentWithGUID:personID:info:
retrieveAssets:inAlbumWithGUID:personID:
retrieveAssetsInAssetCollectionsWithGUIDs:assetTypeFlags:personID:
forgetEverythingAboutPersonID:
_postModelShutdownForPersonID:completionBlock:
shutDownStateMachine:forDestruction:completionBlock:
workQueueForgetEverythingAboutPersonID:completionBlock:
forgetEverythingAboutPersonID:completionBlock:
workQueueForgetEverythingAboutPersonIDs:index:completionBlock:
forgetEverythingCompletionBlock:
persistentObjectForKey:personID:
setPersistentObject:forKey:personID:
_delegateForPersonID:
existingStateMachineForPersonID:
boundStateMachineForPersonID:
didReceiveTooManyAlbumsError:personID:
didReceiveTooManyPhotosError:forAlbum:personID:
didReceiveTooManySubscriptionsError:personID:
didReceiveTooManyCommentsError:forAssetCollection:inAlbum:personID:
didReceiveCommentTooLongError:forAssetCollection:inAlbum:personID:
updateOwnerReputationScoreForAlbum:
personIDToStateMachineMap
setPersonIDToStateMachineMap:
personIDToDelegateMap
setPersonIDToDelegateMap:
daemonModel
setDaemonModel:
busyCount
setBusyCount:
isRetryingOutstandingActivities
setIsRetryingOutstandingActivities:
mapQueue
setMapQueue:
workQueue
setWorkQueue:
nextUpdateDateByPersonID
setNextUpdateDateByPersonID:
MSAlbumSharingDaemon:didReceiveCommentTooLongError:forAssetCollection:inAlbum:personID:
MSAlbumSharingDaemon:didReceiveTooManyCommentsError:forAssetCollection:inAlbum:personID:
MSAlbumSharingDaemon:didReceiveTooManySubscriptionsError:personID:
MSAlbumSharingDaemon:didReceiveTooManyPhotosError:forAlbum:personID:
MSAlbumSharingDaemon:didReceiveTooManyAlbumsError:personID:
setMSASCounterpartInstance:
personIDsEnabledForAlbumSharing
personIDEnabledForAlbumSharing:
MSASStateMachineDidStart:
MSASStateMachineDidFindGlobalResetSync:info:
MSASStateMachine:didFindSyncedKeyValueChangesForAlbumGUIDS:albumChanges:accessControlChangesForAlbumGUIDS:info:
MSASStateMachine:didFindAlbumChanges:info:
MSASStateMachine:didFindAccessControlChangesForAlbumGUIDS:info:
MSASStateMachine:didFindSyncedKeyValueChangesForAlbumGUIDS:info:
MSASStateMachine:didFinishCheckingForChangesInfo:error:
MSASStateMachine:willCheckForUpdatesInAlbum:info:
MSASStateMachine:didFindAssetCollectionChanges:forAlbum:info:
MSASStateMachine:didFindChangesInAlbum:info:error:
MSASStateMachine:didFinishCheckingForUpdatesInAlbum:info:error:
MSASStateMachine:didFinishCheckingForUpdatesInAlbums:info:
MSASStateMachine:didFindNewURLString:forAlbumWithGUID:info:
MSASStateMachine:didFinishGettingAccessControls:forAlbum:info:error:
MSASStateMachine:willUpdateAssetCollections:inAlbum:info:
MSASStateMachine:didFinishUpdatingAssetCollections:inAlbum:info:error:
MSASStateMachine:didFinishSubscribingToAlbum:info:error:
MSASStateMachine:didFinishUnsubscribingFromAlbum:info:error:
MSASStateMachine:didFinishMarkingAsSpamInvitationForAlbum:invitationGUID:info:error:
MSASStateMachine:didFinishMarkingAsSpamInvitationForToken:info:error:
MSASStateMachine:didFindCommentChanges:inAssetCollectionWithGUID:inAlbumWithGUID:info:
MSASStateMachine:didFinishCheckingForCommentChangesInAssetCollectionWithGUID:largestCommentID:info:error:
MSASStateMachine:willCheckForAlbumSyncedStateChangesInAlbum:info:
MSASStateMachine:didFindAssetCollectionSyncedState:forAssetCollectionGUID:inAlbum:assetCollectionStateCtag:info:
MSASStateMachine:didFindAlbumSyncedState:forAlbum:info:
MSASStateMachine:didFinishCheckingForAlbumSyncedStateChangesInAlbum:info:error:newAlbumStateCtag:
MSASStateMachine:didFinishSettingSyncedStateForAlbum:info:error:newAlbumStateCtag:
MSASStateMachine:didFinishSettingSyncedStateForAssetCollection:inAlbum:assetStateCtag:info:error:
MSASStateMachineDidRequestAlbumStateCtagForAlbumWithGUID:info:
MSASStateMachineDidRequestAlbumURLStringForAlbumWithGUID:info:
MSASStateMachineDidRequestAlbumWithGUID:
MSASStateMachineDidRequestAssetCollectionStateCtagForAssetCollectionWithGUID:info:
MSASStateMachine:didQueryIsAssetCollectionWithGUIDInModel:
MSASStateMachine:didFinishEnqueueingAssetsForDownload:inAlbumWithGUID:
MSASStateMachine:didFinishRetrievingAsset:inAlbum:error:
MSASStateMachine:didFinishDeletingAlbum:info:error:
MSASStateMachine:didFinishDeletingAssetCollection:inAlbum:info:error:
MSASStateMachine:didFinishDeletingComment:inAssetCollection:inAlbum:info:error:
MSASStateMachine:didFinishCreatingAlbum:info:error:
MSASStateMachine:didFinishUpdatingAlbum:info:error:
MSASStateMachine:didRequestAssetsForAddingAssetCollections:inAlbum:specifications:info:
MSASStateMachine:didFinishAddingAssetCollection:toAlbum:info:error:
MSASStateMachine:didFinishAddingSharingRelationships:toOwnedAlbum:info:error:
MSASStateMachine:didFinishSendingInvitationByPhone:toOwnedAlbum:info:error:
MSASStateMachine:didFinishRemovingSharingRelationship:fromOwnedAlbum:info:error:
MSASStateMachine:didFinishAddingComment:toAssetCollection:inAlbum:info:error:
MSASStateMachine:didFireScheduledEvent:forAssetCollectionGUID:albumGUID:info:
MSASStateMachineDidUpdateServerCommunicationBackoffDate:
MSASCounterpartInstance
delegatePluginForPersonID:
pluginClass
serverSideConfiguration
contentsOfDirectoryAtPath:error:
forgetEverythingInfo:completionBlock:
shutDownForDestruction:completionBlock:
MSAlbumSharingDaemon:didForgetPersonID:
retrieveAssetsFromAssetCollectionsWithGUIDs:assetTypeFlags:
retrieveAssets:inAlbumWithGUID:
deleteCommentWithGUID:info:
addComments:toAssetCollectionWithGUID:info:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:info:
deleteAssetCollectionsWithGUIDs:
deleteAssetCollectionWithGUID:info:
addAssetCollections:toAlbumWithGUID:info:
setMultipleContributorsEnabled:forAlbumWithGUID:info:completionBlock:
setPublicAccessEnabled:forAlbumWithGUID:info:completionBlock:
removeAccessControlEntryWithGUID:info:
addAccessControlEntries:toAlbumWithGUID:info:
rejectInvitationWithGUID:info:
acceptInvitationWithGUID:info:
acceptInvitationWithToken:info:completionBlock:
markAsSpamInvitationWithToken:info:
markAsSpamInvitationWithGUID:info:
markAsSpamAlbumWithGUID:info:
unsubscribeFromAlbumWithGUID:info:
subscribeToAlbumWithGUID:info:
markAlbumGUIDAsViewed:moveLastViewedAssetCollectionMarker:info:
deleteAlbumWithGUID:info:
modifyAlbumMetadata:info:
addAlbum:info:
refreshCommentsForAssetCollectionWithGUID:resetSync:info:
refreshAccessControlListForAlbumWithGUID:info:
refreshContentOfAlbumWithGUID:resetSync:info:
refreshResetSync:info:
cancel
hasEnqueuedActivities
addObserver:
removeObserver:
albums
albumGUIDs
albumWithGUID:
accessControlsForAlbumWithGUID:
accessControlGUIDsForAlbumWithGUID:
accessControlWithGUID:
invitations
invitationGUIDs
invitationForAlbumWithGUID:
invitationWithGUID:
isPublicAccessEnabledForAlbumWithGUID:
assetCollectionsInAlbumWithGUID:
assetCollectionGUIDsInAlbumWithGUID:
assetCollectionWithGUID:
videoURLForAssetCollectionWithGUID:completionBlock:
videoURLsForAssetCollectionWithGUID:forMediaAssetType:completionBlock:
commentsForAssetCollectionWithGUID:
commentWithGUID:
captionForAssetCollectionWithGUID:
isAlbumWithGUIDMarkedAsUnviewed:
unviewedAlbumCount
isAssetCollectionWithGUIDMarkedAsUnviewed:
unviewedAssetCollectionCountForAlbumWithGUID:
earliestUnviewedAssetCollectionGUIDInAlbumWithGUID:
lastViewedCommentDateForAssetCollectionWithGUID:
setUserInfo:forAlbumWithGUID:
userInfoForAlbumWithGUID:
setUserInfo:forAssetCollectionWithGUID:
userInfoForAssetCollectionWithGUID:
setUserInfo:forAccessControlWithGUID:
userInfoForAccessControlWithGUID:
setUserInfo:forInvitationWithGUID:
userInfoForInvitationWithGUID:
setUserInfo:forCommentWithGUID:
userInfoForCommentWithGUID:
serverCommunicationBackoffDate
markAlbumGUIDAsViewed:info:
forgetEverythingInfo:
refreshResetSync:
refreshContentOfAlbumWithGUID:resetSync:
refreshCommentsForAssetCollectionWithGUID:resetSync:
refreshAccessControlListForAlbumWithGUID:
modifyAlbumMetadata:
deleteAlbumWithGUID:
markAlbumGUIDAsViewed:
subscribeToAlbumWithGUID:
unsubscribeFromAlbumWithGUID:
acceptInvitationWithToken:completionBlock:
acceptInvitationWithGUID:
rejectInvitationWithGUID:
addAccessControlEntries:toAlbumWithGUID:
removeAccessControlEntryWithGUID:
setPublicAccessEnabled:forAlbumWithGUID:completionBlock:
setMultipleContributorsEnabled:forAlbumWithGUID:completionBlock:
addAssetCollections:toAlbumWithGUID:
deleteAssetCollectionWithGUID:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:
addComments:toAssetCollectionWithGUID:
deleteCommentWithGUID:
forgetEverything
setFocusAlbumGUID:
setFocusAssetCollectionGUID:
focusAssetCollectionGUID
errorIsCancellation:
maxGroupedCallbackEventBatchCount
setMaxGroupedCallbackEventBatchCount:
maxGroupedCallbackEventIdleInterval
setMaxGroupedCallbackEventIdleInterval:
maxGroupedCallbackEventStaleness
setMaxGroupedCallbackEventStaleness:
isEqualToDate:
null
MSASPersonIDForPollingTriggeredByPushNotification
didFindDeletedAlbumWithGUID:inviterAddress:
didFindNewAlbum:
MSAlbumSharingDaemonDidUnidle:
MSAlbumSharingDaemonDidIdle:
_invitation
_name
invitation
setInvitation:
name
setName:
_deletionIndex
_comment
comment
setComment:
deletionIndex
setDeletionIndex:
addEntriesFromDictionary:
MSASAddDictionary:
MSASAddIsGlobalResetSync
MSASAddIsAlbumResetSyncAlbumGUID:
MSASAddIsLocalChange
MSASAddEventIsDueToAlbumDeletionAlbumGUID:
MSASAddEventIsDueToAssetCollectionDeletionAssetCollectionGUID:
MSASAddNotInterestingKey
MSASAddIsErrorRecovery
MSASDictionaryWithCopyOfDictionary:
MSASIsGlobalResetSync
MSASAlbumResetSyncAlbumGUID
MSASIsLocalChange
MSASEventIsDueToAlbumDeletionAlbumGUID
MSASEventIsDueToAssetCollectionDeletionAssetCollectionGUID
MSASIsNotInteresting
MSASIsErrorRecovery
_asset
setAsset:
_commandState
_model
_currentCommand
_currentCommandID
_currentCommandParams
_metadataBackoffManager
_assetUploader
_assetDownloader
_hasShutDown
_maxMetadataRetryCount
_serverSideConfiguration
_serverSideConfigurationVersion
_focusAlbumGUID
_focusAssetCollectionGUID
_assetInfoToReauthForDownload
_stopHandlerBlock
_phoneInvitations
_derivativeImageScalingSpecification
_thumbnailImageScalingSpecification
_derivativeSpecifications
_metadataBackoffManagerParameters
_MMCSBackoffManagerParameters
_eventQueue
_serverSideConfigQueue
_memberQueue
_postCommandCompletionBlock
MSASAssetDownloader:willBeginBatchCount:
MSASAssetDownloader:didFinishDownloadingAsset:inAlbumGUID:error:
MSASAssetDownloaderDidFinishBatch:
MSASAssetUploader:didFinishUploadingAssetCollection:intoAlbum:error:
MSBackoffManagerDidUpdateNextExpiryDate:
protocol
phoneInvitations
memberQueueMetadataBackoffManager
initWithPersonID:eventQueue:
workQueueApplyServerSideConfiguration
_workQueueEmptyFileTransferQueuesCompletionBlock:
purgeEverythingCompletionBlock:
stopAssetDownloadsCompletionBlock:
cancelCompletionBlock:
workQueueCancelAllCommandsFilteredByAlbumGUID:assetCollectionGUID:
workQueueCancelCompletionBlock:
setPendingRootCtag:
setRootCtagFromPendingRootCtag
rootCtagToCheckForChanges
cancelOutstandingCommandsForAlbumWithGUID:
cancelOutstandingCommandsForAssetCollectionWithGUID:
_cancelOutstandingCommandsDisposition:params:
_serverSideConfigDictionaryByApplyingDefaultsToDictionary:
serverSideConfigurationVersion
serverSideQueueServerSideConfiguration
setServerSideConfiguration:
serverSideQueueSetServerSideConfiguration:
refreshServerSideConfig
workQueueRefreshServerSideConfig
_sendGetServerSideConfigurationDisposition:params:
latestNextActivityDate
workQueueUpdateNextActivityDate
persistentObjectForKey:
setPersistentObject:forKey:
workQueueRetryOutstandingActivities
workQueueCheckForNextCommand
workQueuePerformNextCommand
workQueueDidFinishCommand
workQueueDidFinishCommandByReplacingCurrentCommandWithCommand:params:personID:albumGUID:assetCollectionGUID:
workQueueDidFailToFinishCommandDueToTemporaryError:
workQueueDidFinishCommandByLeavingCommandInQueue
workQueueDidFinishCommandDueToCancellation
workQueueEndCommandWithError:command:params:albumGUID:assetCollectionGUID:
_URLReauthFailureWithUnderlyingError:
_getAlbumURLDisposition:params:
_canceledError
_stoppedError
_assetCollectionRejectedError
_assetCollectionFailedError
checkForChangesIfMissingRootCtag
checkForChangesResetSync:info:
_checkForChangesDisposition:params:
checkForUpdatesInAlbums:resetSync:info:
_checkForUpdatesInAlbumDisposition:params:
_didFinishCheckingUpdatesInAlbumsDisposition:params:
getAccessControlsForAlbums:info:
_getAccessControlsDisposition:params:
subscribeToAlbum:info:
_subscribeToAlbumDisposition:params:
unsubscribeFromAlbum:info:
_unsubscribeFromAlbumDisposition:params:
markAsSpamInvitationForAlbum:invitationGUID:info:
_markAsSpamInvitationForAlbumDisposition:params:
markAsSpamInvitationForToken:info:
_markAsSpamInvitationForTokenDisposition:params:
checkForAssetCollectionUpdates:inAlbum:info:
_checkForAssetCollectionUpdatesDisposition:params:
checkForCommentChanges:inAlbumWithGUID:
_checkForCommentChangesDisposition:params:
checkForAlbumSyncedStateChangesInAlbums:info:
_checkForAlbumSyncedStateDisposition:params:
setAlbumSyncedState:forAlbum:info:
_setAlbumSyncedStateDisposition:params:
setAssetCollectionSyncedState:forAssetCollection:album:info:
_setAssetCollectionSyncedStateDisposition:params:
deleteAlbum:info:
_deleteAlbumDisposition:params:
deleteAssetCollections:inAlbum:info:
_deleteAssetCollectionsDisposition:params:
deleteComments:inAssetCollection:inAlbum:info:
_deleteCommentDisposition:params:
createAlbum:info:
_createAlbumDisposition:params:
updateAlbum:updateAlbumFlags:info:
_updateAlbumDisposition:params:
_createCopiedAssetsInAssetCollections:
addAssetCollections:toAlbum:info:
_addAssetCollectionsDisposition:params:
continueAddingAssetCollections:skipAssetCollections:toAlbum:info:
_continueAddingAssetCollectionsDisposition:params:
_sendUploadCompleteDisposition:params:
_sendPutAssetCollectionsDisposition:params:
_sendGetUploadTokensDisposition:params:
addSharingRelationships:toOwnedAlbum:info:
_addSharingRelationshipsDisposition:params:
removeSharingRelationships:fromOwnedAlbum:info:
_removeSharingRelationshipsDisposition:params:
addComments:toAssetCollection:inAlbum:info:
_addCommentDisposition:params:
scheduleEvent:assetCollectionGUID:albumGUID:info:
_scheduleEventDisposition:params:
setPublicAccessEnabled:forAlbum:info:completionBlock:
setMultipleContributorsEnabled:forAlbum:info:completionBlock:
videoURLForAssetCollection:inAlbum:completionBlock:
videoURLsForAssetCollection:forMediaAssetType:inAlbum:completionBlock:
_deleteAssetFilesInAssetCollection:
_deleteAssetFilesInAssetCollections:
workQueueScheduleReauthForAssets:inAlbum:
_sendReauthorizeAssetsForDownloadDisposition:params:
maxMetadataRetryCount
setMaxMetadataRetryCount:
focusAlbumGUID
_setAssetInfoToReauthForDownload:
_setStopHandlerBlock:
setProtocol:
setPhoneInvitations:
derivativeImageScalingSpecification
thumbnailImageScalingSpecification
derivativeSpecifications
hasShutDown
setHasShutDown:
metadataBackoffManagerParameters
setMetadataBackoffManagerParameters:
MMCSBackoffManagerParameters
setMMCSBackoffManagerParameters:
eventQueue
setEventQueue:
serverSideConfigQueue
setServerSideConfigQueue:
memberQueue
setMemberQueue:
postCommandCompletionBlock
setPostCommandCompletionBlock:
lastObject
firstObject
subarrayWithRange:
copyItemAtPath:toPath:error:
stringByAppendingPathExtension:
numberWithInt:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
MSASIsAllowedToTransferMetadata
earlierDate:
unsignedIntegerValue
numberWithUnsignedInteger:
setSuppressCellular:
mainQueue
addObserverForName:object:queue:usingBlock:
raise
exceptionWithName:reason:userInfo:
setObject:
_shouldDownloadEarliestPhotosFirst
dbQueueUpgradeFromDatabaseVersion:currentVersion:
dbQueueNextCommandSequenceNumber
dbQueueSmallestCommandSequenceNumber
dbQueueEnqueueCommand:params:personID:albumGUID:assetCollectionGUID:
enqueueCommand:params:personID:albumGUID:assetCollectionGUID:
enqueueCommandAtHeadOfQueue:params:personID:albumGUID:assetCollectionGUID:
dbQueueEnqueueCommand:params:personID:albumGUID:assetCollectionGUID:sequenceNumber:
enqueueCommand:params:personID:albumGUID:pendingOnAssetCollectionGUID:
dbQueueRequeuePendingCommandsWithQueryStatement:deleteStatement:
dbQueueRequeuePendingCommandsWithAssetCollectionGUID:
dbQueueRequeuePendingCommandsWithAlbumGUID:
_commandWithMinimumIdentifier:outParams:outCommandIdentifier:outPersonID:outAlbumGUID:outAssetCollectionGUID:
commandAtHeadOfQueueOutParams:outCommandIdentifier:outPersonID:outAlbumGUID:outAssetCollectionGUID:
commandWithMinimumIdentifier:outParams:outCommandIdentifier:outPersonID:outAlbumGUID:outAssetCollectionGUID:
setParams:forCommandWithIdentifier:
dbQueueRemoveCommandAtHeadOfQueue
removeCommandIdentifier:
dbQueueRemoveCommandIdentifier:
dbQueueRemoveAllEntriesFromTable:
purgeCompletionBlock:
countOfEnqueuedCommand:
countOfEnqueuedCommands
isAssetCollectionWithGUIDPending:
dbQueueIsAssetCollectionWithGUIDPending:
addPendingAssetCollectionGUID:albumGUID:
requeuePendingAssetCollectionGUID:
requeuePendingAssetCollectionsWithAlbumGUID:
dbQueueAssetCountAlbumGUID:inQueue:
dbQueueSetErrorCount:forGUID:inQueue:
dbQueueRemoveGUID:fromQueue:
dbQueueIsGUIDQueued:inQueue:
nextMMCSItemID
enqueueAssetForDownload:inAlbumWithGUID:
assetsInDownloadQueue
assetsInDownloadQueueAlbumGUID:
nextItemsForDownloadFocusAlbumGUID:focusAssetCollectionGUID:thumbnails:maxCount:isInflight:
nextItemsForDownloadFocusAlbumGUID:focusAssetCollectionGUID:maxCount:
hasItemsForDownloadCountFocusAlbumGUID:focusAssetCollectionGUID:
itemsForDownloadCountFocusAlbumGUID:focusAssetCollectionGUID:
setErrorCount:forAssetInDownloadQueue:
setInFlightAssets:
removeAssetsFromDownloadQueue:
enqueueAssetCollectionForUpload:album:
assetCollectionsInUploadQueue
assetCollectionsInUploadQueueAlbumGUID:
itemsForUpload
nextItemsForUploadMaxCount:
nextItemsForUploadAlbumGUID:maxPriority:maxCount:
setErrorCount:forAssetCollectionInUploadQueue:
removeAssetCollectionsFromUploadQueue:
shouldDownloadEarliestPhotosFirst
setShouldDownloadEarliestPhotosFirst:
dataWithBytesNoCopy:length:freeWhenDone:
UTF8String
earliestNextActivityDate
nextActivityDateByPersonID
clearAllNextActivityDates
defaultModel
_dbWasRecreated
_statementQueue
_dbQueue
initWithPersonID:databasePath:currentVersion:
dbQueueInitializeDatabasePath:currentVersion:
statementForString:
persistentStringForKey:
setPersistentString:forKey:
deletePersistentValueWithKey:
dbQueuePersistentDataForKey:
dbQueuePersistentStringForKey:
dbQueuePersistentObjectForKey:
dbQueueSetPersistentData:forKey:
dbQueueSetPersistentString:forKey:
dbQueueSetPersistentObject:forKey:
dbQueueDeletePersistentValueWithKey:
beginTransaction
dbQueueBeginTransaction
endTransaction
dbQueueEndTransaction
dbQueueRollbackTransaction
dbQueueDB
statements
setStatements:
statementQueue
setStatementQueue:
dbQueue
dbWasRecreated
setDbWasRecreated:
dataUsingEncoding:
stringByAppendingString:
hardlinkOrCopyFileFromPath:toPath:outError:
stringWithUTF8String:
_count
initWithEngine:type:
setEngine:
signatures
setSignatures:
setCount:
itemIDs
setItemIDs:
itemFlags
setItemFlags:
authTokens
setAuthTokens:
contextWithEngine:type:
_workPathURL
_appIDHeader
_dataClass
_options
_engineClientContext
_itemIDToAssetMap
_itemIDToAssetMapQueue
_requestorContexts
_reqestorContextQueue
_autoItemIDDictionary
_autoItemIDPersistenceURL
_autoItemIDDictionaryQueue
_autoGenerateItemID
_isMetricsGatheringEnabled
_isDone
_workThread
_threadKeepAliveTimer
initWithWorkPath:appIDHeader:dataClass:options:modes:
initWithWorkPath:appIDHeader:dataClass:options:
performBlock:
performBlockOnWorkThread:waitUntilDone:
performBlockOnWorkThread:
_doNothingTimerHandler:
threadMain:
setIsMetricsGatheringEnabled:
_getFileDescriptorAndContentTypeFromItemID:outFD:outItemType:outError:
_getItemProgressItemID:state:progress:requestorContext:error:
_getItemDoneItemID:path:requestorContext:error:
_putItemProgressItemID:state:progress:requestorContext:error:
_putItemDoneItemID:requestorContext:putReceipt:error:
_requestCompletedRequestorContext:
cancelOperationsWithContext:
cancelAllOperations
isActive
registerAssetForUpload:completionBlock:
reregisterAssetForUpload:
reregisterAssetForDownload:
registerAssets:forDownloadCompletionBlock:
unregisterAsset:
unregisterAssets:
getAssets:requestURL:DSID:options:
putAssets:requestURL:DSID:options:
_assetWithItemID:
_removeAssetForItemID:
_registerRequestorContext:
_removeRequestorContext:
_initItemIDPersistence
_nextItemID
autoGenerateItemID
setAutoGenerateItemID:
isMetricsGatheringEnabled
workThread
setWorkThread:
threadKeepAliveTimer
setThreadKeepAliveTimer:
isDone
setIsDone:
writeToURL:atomically:
dictionaryWithContentsOfURL:
URLByAppendingPathComponent:
invalidate
logStringForPutItemState:
logStringForGetItemState:
runMode:beforeDate:
distantFuture
addTimer:forMode:
timerWithTimeInterval:target:selector:userInfo:repeats:
performSelector:onThread:withObject:waitUntilDone:
initWithTarget:selector:object:
bundleForClass:
MMCSIsNetworkConditionsError
MMCSIsAuthorizationError
MMCSIsFatalError
_MMCSApplyBlock:
MMCSErrorType
localizedStringForKey:value:table:
MMCSIsCancelError
MMCSRetryAfterDate
MMCSErrorWithDomain:code:description:
initWithFormat:arguments:
_didEncounterNetworkConditionError
_assetCollectionsToItemInFlightMap
_assetToAssetCollectionMap
_finishedAssetCollections
_assetCollectionsWithAuthorizationError
_assetCollectionGUIDToRequestorContext
_pathForPersonID:
workQueueGoIdle
_workQueueStop
workQueueStop
workQueueShutDownCompletionBlock:
workQueueCancel
_orphanedAssetCollectionError
workQueueUploadNextBatch
workQueueCancelAssetCollections:
workQueueRegisterAssets:index:completionBlock:
workQueueRegisterAssetCollections:index:results:completionBlock:
registerAssetCollections:completionBlock:
unregisterAssetCollections:
unregisterAssetCollections:completionBlock:
cancelAssetCollections:
workQueueStopTrackingItem:
workQueueDidFinishWithItem:error:
MMCSEngine:didFinishPuttingAsset:putReceipt:error:
MMCSEngine:didCreateRequestorContext:forAssets:
MMCSEngine:didMakePutProgress:state:onAsset:
didFinishPuttingAllAssets
MMCSEngine:didFinishGettingAsset:path:error:
MMCSEngine:didMakeGetProgress:state:onAsset:
didFinishGettingAllAssets
state
setState:
itemsInFlight
setItemsInFlight:
assetCollectionsToItemInFlightMap
setAssetCollectionsToItemInFlightMap:
assetToAssetCollectionMap
setAssetToAssetCollectionMap:
finishedAssetCollections
setFinishedAssetCollections:
didEncounterNetworkConditionError
setDidEncounterNetworkConditionError:
assetCollectionsWithAuthorizationError
setAssetCollectionsWithAuthorizationError:
assetCollectionGUIDToRequestorContext
setAssetCollectionGUIDToRequestorContext:
dictionaryWithObject:forKey:
MMCSUploadSocketOptionsForPersonID:
MSASIsAllowedToUploadAssets
_isDownloadingThumbnails
_isWaitingForFirstDownloadEvent
_assetToItemInFlightMap
_finishedAssets
_currentFocusAlbumGUID
_currentFocusAssetCollectionGUID
_objectGUID
_downloadBatchPerfGUID
workQueueObjectGUID
_workQueueGoIdle
workQueueDownloadNextBatch
registerAssets:completionBlock:
workQueueRegisterAssets:completionBlock:
workQueueUnregisterAssets:
didEnqueueAsset:forAlbumGUID:
_workQueueStopTrackingItem:
_workQueueDidFinishWithItem:error:
MMCSEngine:didFinishPuttingAsset:error:
_orphanedAssetError
assetToItemInFlightMap
setAssetToItemInFlightMap:
finishedAssets
setFinishedAssets:
isDownloadingThumbnails
setIsDownloadingThumbnails:
currentFocusAlbumGUID
setCurrentFocusAlbumGUID:
currentFocusAssetCollectionGUID
setCurrentFocusAssetCollectionGUID:
isWaitingForFirstDownloadEvent
setIsWaitingForFirstDownloadEvent:
objectGUID
setObjectGUID:
downloadBatchPerfGUID
setDownloadBatchPerfGUID:
isPerformanceLoggingEnabled
MMCSDownloadSocketOptionsForPersonID:
timeIntervalSinceDate:
MSASPersonIDIsAllowedToDownloadAssets:
_maxBatchCount
_maxRetryCount
_maxMMCSTokenValidityTimeInterval
_backoffManager
MMCSEngine:didRequestAssetWithItemID:
MMCSEngine:shouldLogAtLogLevel:
MMCSEngine:logMessage:logLevel:
MMCSEngine:logPerformanceMetrics:
_rereadPerformanceLoggingSetting
setMaxMMCSTokenValidityTimeInterval:
stopCompletionBlock:
workQueueNextItemID
workQueueMaxMMCSTokenValidityTimeInterval
_missingURLError
_missingMMCSTokenError
_MMCSTokenTooOldError
_sendDidIdleNotification
maxMMCSTokenValidityTimeInterval
model
setModel:
backoffManager
setBackoffManager:
maxBatchCount
setMaxBatchCount:
maxRetryCount
setMaxRetryCount:
logLevel:personID:albumGUID:format:
postNotificationName:object:
MMCSConcurrentConnectionsCount
Win32SHA1OfUDID:
deviceInfoDictForPersonID:
retryAfterDateBasedOnRetryAfterHeaderString:
appleIDSession
_urlSession
fetchMPSStateWithBaseAvailabilityURL:personID:originalLibrarySize:completionBlock:
applyUserDefaultOverridesToResponse:
integerValue
objectAtIndexedSubscript:
componentsSeparatedByString:
stringForKey:
resume
dataTaskWithRequest:completionHandler:
initWithData:
statusCode
setHTTPMethod:
setHTTPBody:
data
fetchCurrentDeviceIDWithCompletionHandler:
containerWithIdentifier:
setAllHTTPHeaderFields:
requestWithURL:
sessionWithConfiguration:
set_appleIDContext:
initWithIdentifier:
defaultSessionConfiguration
timeIntervalSinceNow
pushTokenForPersonID:
UDID
OSString
hardwareString
infoDictionary
_emails
_phones
isEqualToSharingRelationship:
emails
setEmails:
phones
setPhones:
MSSafeUnarchiveAllowedClasses
unarchivedObjectOfClasses:fromData:error:
MSSafeUnarchiveObjectWithData:outError:
MSSafeUnarchiveObjectWithFile:outError:
reason
_isLike
_isCaption
_isBatchComment
_clientTimestamp
_content
setID:
clientTimestamp
setClientTimestamp:
isLike
setIsLike:
isCaption
setIsCaption:
isBatchComment
setIsBatchComment:
content
setContent:
_stmt
_stepBlock
_queue
initWithDatabase:query:stepBlock:
nextObject
setDb:
stmt
setStmt:
stepBlock
setStepBlock:
queue
setQueue:
enumeratorWithDatabase:query:stepBlock:
_pendingAlbumGUIDsWithKeyValueChanges
_pendingAlbumChanges
_pendingAlbumGUIDsWithSharingInfoChanges
_pendingAlbumGUIDToAssetCollections
initWithSyncedKeyValueChangesForAlbumGUIDS:albumChanges:accessControlChangesForAlbumGUIDS:
removePendingKeyValueChangesForAlbumGUID:
addPendingChangesForAlbumGUID:
removePendingChangesForAlbumGUID:
addPendingAssetCollectionChanges:forAlbumGUID:
removePendingAssetCollection:forAlbumGUID:
removePendingSharingInfoChangesForAlbumGUID:
hasPendingChanges
pendingAlbumGUIDsWithKeyValueChanges
setPendingAlbumGUIDsWithKeyValueChanges:
pendingAlbumChanges
setPendingAlbumChanges:
pendingAlbumGUIDsWithSharingInfoChanges
setPendingAlbumGUIDsWithSharingInfoChanges:
pendingAlbumGUIDToAssetCollections
setPendingAlbumGUIDToAssetCollections:
_counterpartInstance
_observers
_commandQueue
_pendingChanges
retainBusy
releaseBusy
initWithPersonID:databasePath:
initWithPersonID:databasePath:eventQueue:
observers
dbQueueAlbumGUIDs
dbQueueAccessControlsForAlbumWithGUID:
dbQueueAccessControlGUIDsForAlbumWithGUID:
dbQueueInvitationForAlbumWithGUID:
dbQueueAssetCollectionGUIDsInAlbumWithGUID:
dbQueueCommentsForAssetCollectionWithGUID:
reconstruct
_reconstruct
dbQueueAlbumWithGUID:outObject:outName:outCtag:outForeignCtag:outURLString:outUserInfoData:
dbQueueSetAlbum:info:
dbQueueUpdateAlbumCtag:
dbQueueDeleteAlbumWithGUID:info:
dbQueueAccessControlWithGUID:outObject:outAlbumGUID:outEmail:outUserInfoData:
dbQueueSetAccessControl:info:
dbQueueDeleteAccessControlWithGUID:info:
dbQueueInvitationWithGUID:outObject:outAlbumGUID:outEmail:outUserInfoData:
dbQueueInvitationWithAlbumGUID:outObject:outInvitationGUID:outEmail:outUserInfoData:
dbQueueSetInvitation:info:
dbQueueDeleteInvitationWithGUID:info:
dbQueueDeleteInvitationForAlbumWithGUID:info:
dbQueueAssetCollectionWithGUID:outObject:outCtag:outAlbumGUID:outBatchDate:outPhotoDate:outPhotoNumber:outUserInfoData:
dbQueueSetAssetCollection:inAlbumWithGUID:info:
dbQueueDeleteAssetCollectionWithGUID:info:
dbQueueCommentWithGUID:outObject:outID:outTimestamp:outAssetCollectionGUID:outIsCaption:outUserInfoData:
dbQueueCommentWithID:assetCollectionGUID:outObject:outGUID:outTimestamp:outIsCaption:outUserInfoData:
dbQueueSetComment:forAssetCollectionWithGUID:info:
dbQueueDeleteCommentWithGUID:info:
dbQueueMaximumCommentIDForAssetCollectionWithGUID:
dbQueueAssetCollectionContainsCommentsFromMeAssetCollectionGUID:
dbQueueAlbumMetadataWithAlbumGUID:key:outValue:
dbQueueSetAlbumMetadataAlbumGUID:key:value:info:
dbQueueDeleteAlbumMetadataAlbumGUID:key:info:
dbQueueDeleteAllAlbumMetadataForAlbumWithGUID:info:
dbQueueAssetCollectionMetadataWithAssetCollectionGUID:key:outValue:
dbQueueSetAssetCollectionMetadataAssetCollectionGUID:key:value:info:
dbQueueDeleteAssetCollectionMetadataAssetCollectionGUID:key:info:
dbQueueDeleteAllAssetCollectionMetadataForAssetCollectionWithGUID:info:
dbQueueMaximumPhotoNumberForAlbumWithGUID:
dbQueueCountOfUnviewedAssetCollectionsInAlbumWithGUID:
dbQueueSetUnviewedState:onAssetCollectionWithGUID:info:
dbQueueSetUnviewedState:onAlbumWithGUID:info:
dbQueueCheckToClearUnviewedStateOnAssetCollectionWithGUID:info:
dbQueueCheckToClearUnviewedStateOnAlbumWithGUID:info:
eventQueueNotifyObserversOfUpdatedUnviewedCountInAlbum:unviewedCount:info:
dbQueueUnviewedAlbumCount
dbQueueUnviewedAssetCollectionCountForAlbumWithGUID:
dbQueueDeleteAllPendingCommentCheckOperations
dbQueuePendingCommentCheckOperations
dbQueueAddCommentCheckOperation:
flushAllPendingCommentCheckOperations
dbQueueFlushAllPendingCommentCheckOperations
eventQueuePerformBlockOnObservers:
dbQueueLookupOrCreateAlbumWithGUID:
dbQueueLookupOrCreateAssetCollectionWithGUID:outAlbum:
dbQueueLookupOrCreateCommentWithGUID:outAssetCollection:outAlbum:
_invalidInvitationGUIDErrorWithGUID:
_invalidAccessControlGUIDErrorwithGUID:
_invalidAssetCollectionGUIDErrorwithGUID:
_protocolErrorForUnderlyingError:
setObservers:
commandQueue
setCommandQueue:
pendingChanges
setPendingChanges:
MSASModel:didFinishAddingComment:toAssetCollection:inAlbum:error:
MSASModel:didFinishAddingComment:toAssetCollection:inAlbum:info:error:
MSASModel:didFinishRemovingAccessControlEntry:fromAlbum:error:
MSASModel:didFinishRemovingAccessControlEntry:fromAlbum:info:error:
MSASModel:didFinishSendingInvitationByPhone:toAlbum:info:error:
MSASModel:didFinishAddingAccessControlEntry:toAlbum:error:
MSASModel:didFinishAddingAccessControlEntry:toAlbum:info:error:
MSASModel:didFinishAddingAssetCollection:toAlbum:error:
MSASModel:didFinishAddingAssetCollection:toAlbum:info:error:
MSASModel:didRequestDerivativesForAssetCollections:specifications:completionBlock:
MSASModel:didRequestDerivativesForAssetCollections:specifications:info:completionBlock:
MSASModel:didFinishModifyingAlbumMetadata:error:
MSASModel:didFinishModifyingAlbumMetadata:info:error:
MSASModel:didFinishAddingAlbum:error:
MSASModel:didFinishAddingAlbum:info:error:
MSASModel:didFinishDeletingComment:fromAssetCollection:inAlbum:error:
MSASModel:didFinishDeletingComment:fromAssetCollection:inAlbum:info:error:
MSASModel:didFinishDeletingAssetCollection:fromAlbum:error:
MSASModel:didFinishDeletingAssetCollection:fromAlbum:info:error:
MSASModel:didFinishDeletingAlbum:error:
MSASModel:didFinishDeletingAlbum:info:error:
sortUsingComparator:
MSASModel:didFinishRetrievingAsset:inAlbum:error:
MSASModel:didFinishEnqueueingAssetsForDownload:inAlbumWithGUID:
MSASModel:didFinishUnsubscribingFromAlbum:error:
MSASModel:didFinishUnsubscribingFromAlbum:info:error:
MSASModel:didFinishRejectingInvitation:error:
MSASModel:didFinishRejectingInvitation:info:error:
MSASModel:didFinishSubscribingToAlbum:error:
MSASModel:didFinishSubscribingToAlbum:info:error:
MSASModel:didFinishAcceptingInvitation:forAlbum:error:
MSASModel:didFinishAcceptingInvitation:forAlbum:info:error:
MSASModel:didFinishCheckingForChangesInfo:error:
MSASModel:didFindGlobalResetSyncInfo:
MSASModel:didUpdateUnviewedAssetCollectionCount:forAlbum:
MSASModel:didUpdateUnviewedAssetCollectionCount:forAlbum:info:
MSASModel:didMarkAlbum:asHavingUnreadContent:
MSASModel:didMarkAlbum:asHavingUnreadContent:info:
MSASModel:didMarkAssetCollection:asHavingUnreadComments:inAlbum:
MSASModel:didMarkAssetCollection:asHavingUnreadComments:inAlbum:info:
MSASModel:didFindLastViewedCommentDate:forAssetCollection:inAlbum:
MSASModel:didFindLastViewedCommentDate:forAssetCollection:inAlbum:info:
MSASModel:didDeleteComment:forAssetCollection:inAlbum:
MSASModel:didFindNewComment:forAssetCollection:inAlbum:
MSASModel:didFindCommentChange:inAssetCollection:inAlbum:
MSASModel:didFindCommentChange:inAssetCollection:inAlbum:info:
MSASModel:didFindDeletedAssetCollection:inAlbum:
MSASModel:didFindNewAssetCollection:inAlbum:
MSASModel:didFindAssetCollectionChange:inAlbum:
MSASModel:didFindAssetCollectionChange:inAlbum:info:
MSASModel:didFindDeletedInvitation:
MSASModel:didFindNewInvitation:
MSASModel:didFindInvitationChange:
MSASModel:didFindInvitationChange:info:
MSASModel:didFindDeletedAccessControl:inAlbum:
MSASModel:didFindNewAccessControl:inAlbum:
MSASModel:didFindAccessControlChange:inAlbum:
MSASModel:didFindAccessControlChange:inAlbum:info:
MSASModel:didFindDeletedAlbum:
MSASModel:didFindNewAlbum:
MSASModel:didFindAlbumMetadataChange:
MSASModel:didFindAlbumMetadataChange:info:
MSASModel:didFailToFindAssetsForAssetCollectionGUID:assetTypeFlags:
MSASModelWillBeForgotten:
MSASModelWillBeForgotten:info:
MSASModel:didFinishMarkingCommentsAsViewedInAssetCollection:inAlbum:error:
MSASModel:didFinishMarkingCommentsAsViewedInAssetCollection:inAlbum:info:error:
MSASModel:didFinishMarkingAsSpamInvitationWithToken:info:error:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
MSASModel:didFinishMarkingAsSpamInvitation:info:error:
MSASModel:didFinishMarkingAlbumAsViewed:error:
MSASModel:didFinishMarkingAlbumAsViewed:info:error:
MSASModelDidDeleteAllAlbumsInAlbumList:
MSASModelDidReceiveNewServerSideConfiguration:
MSASModelDidReceiveNewServerSideConfiguration:info:
enqueueCommand:
commandCount
nextCommandGroupMaxCount:outCommand:outLastCommandIndex:
removeCommandsUpToCommandIndex:
performBlockOnObservers:
_stabilizedIsBusy
_UIBusyCount
_idleCountQueue
_hysteresisTimer
isBusy
retainUIBusy
releaseUIBusy
retainPowerAssertion
releasePowerAssertion
_didChangeIdleBusyState:
_hysteresisTimerDidFire:
stabilizedDidIdle
stabilizedDidUnidle
UIBusyCount
setUIBusyCount:
idleCountQueue
setIdleCountQueue:
hysteresisTimer
setHysteresisTimer:
stabilizedIsBusy
setStabilizedIsBusy:
setFireDate:
_logSqliteErrorLine:
startOperation:itemGUID:
stopOperation:itemGUID:
dbQueueDiscardOperation:itemGUID:
discardOperation:itemGUID:
summarizeOperation:itemGUID:formatBlock:
sharedLogger
nukeCompletionBlock:
gate
_isShuttingDown
_gate
_pendingConnectionsQueue
_pendingConnectionsGroup
_baseURL
_serverSideConfigVersion
_headerVersion
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
shutDownError
stoppingError
stopHandlerBlock
sendURLRequest:bodyObj:completionBlock:
sendURLRequest:method:bodyObj:checkServerSideConfigVersion:completionBlock:
_sendOneURLRequest:checkServerSideConfigVersion:retryCount:completionBlock:
_prepareHeadersForRequest:
HTTPErrorWithStatusCode:
errorFromStandardProcessingOnResponse:responseObject:checkServerSideConfigVersion:error:body:
_createAlbumURL
_updateAlbumURLWithBaseURL:
_putAssetsURLWithBaseURL:
_getUploadTokensURLWithBaseURL:
_getVideoURLWithBaseURL:
_uploadCompleteURLWithBaseURL:
_shareURL
_unshareURL
_addCommentURLWithBaseURL:
_enablePublicAccessURLWithBaseURL:
_enableMultipleContributorsURLWithBaseURL:
_deleteURLWithBaseURL:
_deleteAssetsURLWithBaseURL:
_deleteCommentURLWithBaseURL:
_getChangesURL
_sharingInfoURLWithBaseURL:
_albumSummaryURLWithBaseURL:
_getAssetsURLWithBaseURL:
_getTokensURLWithBaseURL:
_subscribeURL
_unsubscribeURL
_reportSpamURL
_getCommentsURLWithBaseURL:
_setCommentPositionURL
_albumStateURL
_setAssetStateURL
_setAlbumStateURL
_serverSideConfigURL
_getAlbumURL
createAlbum:completionBlock:
updateAlbum:albumURLString:completionBlock:
putAssetCollections:intoAlbum:albumURLString:completionBlock:
getUploadTokens:forAssetCollectionWithGUID:inAlbumWithGUID:albumURLString:completionBlock:
getVideoURL:forAssetCollectionWithGUID:inAlbumWithGUID:albumURLString:completionBlock:
responseDict:containsLimitErrorCode:outMaxAllowed:
sendUploadCompleteSuccessfulAssetCollections:failedAssetCollections:album:completionBlock:
addSharingRelationships:toAlbum:completionBlock:
removeSharingRelationships:fromAlbum:completionBlock:
addComment:toAssetCollection:inAlbum:albumURLString:completionBlock:
setPublicAccessEnabled:forAlbum:completionBlock:
setMultipleContributorsEnabled:forAlbum:completionBlock:
deleteAlbum:completionBlock:
deleteAssetCollections:inAlbum:completionBlock:
deleteComment:fromAssetCollection:inAlbum:albumURLString:completionBlock:
getChangesRootCtag:completionBlock:
getSharingInfoForAlbum:albumURLString:completionBlock:
albumSummaryAlbum:albumURLString:resetSync:completionBlock:
getAssetCollections:inAlbum:albumURLString:completionBlock:
_couldNotReauthorizeError
getTokensForAssets:inAlbum:albumURLString:completionBlock:
subscribeToAlbum:completionBlock:
unsubscribeFromAlbum:completionBlock:
markAsSpamInvitationForAlbum:completionBlock:
markAsSpamInvitationForToken:completionBlock:
getCommentChanges:inAlbumWithGUID:albumURLString:completionBlock:
getAlbumSyncedStateForAlbum:assetCollectionStateBlock:completionBlock:
setAssetCollectionSyncedState:forAssetCollection:inAlbum:assetCollectionStateCtag:completionBlock:
setAlbumSyncedState:forAlbum:albumStateCtag:completionBlock:
getServerSideConfigCompletionBlock:
getAlbumURLForAlbumWithGUID:completionBlock:
setGate:
pendingConnectionsQueue
setPendingConnectionsQueue:
pendingConnectionsGroup
setPendingConnectionsGroup:
baseURL
setBaseURL:
serverSideConfigVersion
setServerSideConfigVersion:
isShuttingDown
setIsShuttingDown:
headerVersion
MSASPCommentFromProtocolDictionary:
MSASPAssetCollectionFromProtocolDictionary:
MSASPSharingRelationshipFromProtocolDictionary:
MSASPInvitationFromProtocolDictionary:
allObjects
dateFromString:
setTimeZone:
timeZoneForSecondsFromGMT:
setDateFormat:
setLocale:
initWithLocaleIdentifier:
MSASPProtocolDictionary
setValue:forKey:
numberWithInteger:
substringToIndex:
caseInsensitiveCompare:
allHeaderFields
HTTPBody
compare:options:
allHTTPHeaderFields
appleIDHeadersForRequest:
sendAsynchronousRequest:queue:completionHandler:
setURL:
initWithScheme:host:path:
scheme
handleResponse:forRequest:shouldRetry:
dataWithPropertyList:format:options:error:
sharedStreamsProtocolVersionString
baseSharingURLForPersonID:
MSASPAssetFromProtocolDictionary:
stringByDeletingPathExtension
numberWithUnsignedLong:
_command
_variantParam
_invariantParam
initWithCommand:variantParam:invariantParam:
canBeGroupedWithCommand:
command
setCommand:
variantParam
setVariantParam:
invariantParam
setInvariantParam:
commandwithCommand:variantParam:invariantParam:
_lastEnqueuedCommand
hasEnqueuedItems
flushQueue
workQueueFlushQueue
workQueueEnqueueCommand:variantParam:invariantParam:
MSASModel:didFindNewAlbum:info:
MSASModel:didFindDeletedAlbum:info:
MSASModel:didFindNewAssetCollection:inAlbum:info:
MSASModel:didFindDeletedAssetCollection:inAlbum:info:
MSASModel:didFindNewAccessControl:inAlbum:info:
MSASModel:didFindDeletedAccessControl:inAlbum:info:
MSASModel:didFindNewInvitation:info:
MSASModel:didFindDeletedInvitation:info:
MSASModel:didFindNewComment:forAssetCollection:inAlbum:info:
MSASModel:didDeleteComment:forAssetCollection:inAlbum:info:
lastEnqueuedCommand
setLastEnqueuedCommand:
calloutBlockForCommand:
MSASModel:didFindDeletedComments:forAssetCollection:inAlbum:info:
MSASModel:didFindNewComments:forAssetCollection:inAlbum:info:
MSASModel:didFindDeletedInvitations:info:
MSASModel:didFindNewInvitations:info:
MSASModel:didFindDeletedAccessControls:inAlbum:info:
MSASModel:didFindNewAccessControls:inAlbum:info:
MSASModel:didFindDeletedAssetCollections:inAlbum:info:
MSASModel:didFindNewAssetCollections:inAlbum:info:
MSASModel:didFindDeletedAlbums:info:
MSASModel:didFindNewAlbums:info:
_assetTypeFlags
_nominalShortSideLength
_minimumLongSideLength
_maximumLongSideLength
scaleFactorForInputSize:
nominalShortSideLength
setNominalShortSideLength:
minimumLongSideLength
setMinimumLongSideLength:
maximumLongSideLength
setMaximumLongSideLength:
assetTypeFlags
setAssetTypeFlags:
specificationWithSharedAlbumSpecificationString:
assetsToGenerateFromImageWithInputSize:toConformToSpecifications:
numberWithFloat:
_isAssertingBusyAssertion
_maxGroupedCallbackEventBatchCount
_maxGroupedCallbackEventIdleInterval
_maxGroupedCallbackEventStaleness
_idleTimerGate
_stalenessTimerGate
assertBusyAssertion
deassertBusyAssertion
workQueueAssertBusyAssertion
workQueueDeassertBusyAssertion
isAssertingBusyAssertion
memberQueueIsAssertingBusyAssertion
memberQueueSetIsAssertingBusyAssertion:
shutDownFlush:completionBlock:
flushQueueCompletionBlock:
workQueueRestartIdleTimer
workQueueClearIdleTimer
workQueueRestartStalenessTimer
workQueueClearStalenessTimer
workQueueDidEnqueueFirstItem
workQueueDidEnqueueSubsequentItem
idleTimerGate
setIdleTimerGate:
stalenessTimerGate
setStalenessTimerGate:
_useCellular
_powerRequired
_bitRate
_videoType
initWithDictionary:
useCellular
powerRequired
bitRate
videoType
floatValue
videoDerivativeSpecificationsWithDictionaryArray:
@"MSASStateMachine"
@"MSASAlbum"
@"IDSService"
@"NSMutableDictionary"
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v24@0:8@16
v40@0:8@16@24@?32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v16@0:8
@"<MSMediaStreamDaemonDelegate>"
@"NSCountedSet"
@24@0:8@16
B40@0:8@16@24^@32
@"<MSPublisherDelegate>"
@"MSMediaStreamDaemon"
@"MSObjectQueue"
@"NSArray"
@"NSMutableArray"
@"MSPublishStreamsProtocol"
@"<MSPublishStorageProtocol>"
@"NSURL"
v40@0:8@"<MSPublishStorageProtocol>"16@"MSAsset"24@"NSError"32
i32@0:8@"<MSPublishStorageProtocol>"16@"MSAsset"24
v36@0:8@"<MSPublishStorageProtocol>"16i24@"MSAsset"28
v24@0:8@"<MSPublishStorageProtocol>"16
i32@0:8@16@24
v36@0:8@16i24@28
v40@0:8@"MSPublishStreamsProtocol"16@"NSDictionary"24@"NSError"32
v32@0:8@"MSPublishStreamsProtocol"16@"NSError"24
v32@0:8@"MSStreamsProtocol"16@"NSDate"24
v32@0:8@"NSArray"16@"NSArray"24
@"<MSPublisherDelegate>"16@0:8
v24@0:8@"<MSPublisherDelegate>"16
i16@0:8
v20@0:8i16
@32@0:8@16@24
B32@0:8@16^@24
v80@0:8@16^B24^B32^B40^B48^B56^B64^B72
q16@0:8
v24@0:8q16
@"<MSSubscriberDelegate>"
@"MSSubscribeStreamsProtocol"
@"<MSSubscribeStorageProtocol>"
@"MSReauthorizationProtocol"
v48@0:8@"MSReauthorizationProtocol"16@"NSArray"24@"NSArray"32@"NSError"40
v32@0:8@"MSReauthorizationProtocol"16@"NSError"24
v40@0:8@"<MSSubscribeStorageProtocol>"16@"MSAsset"24@"NSError"32
v24@0:8@"<MSSubscribeStorageProtocol>"16
v44@0:8@"MSSubscribeStreamsProtocol"16@"NSString"24B32@"NSDictionary"36
v40@0:8@"MSSubscribeStreamsProtocol"16@"NSArray"24@"NSString"32
v40@0:8@"MSSubscribeStreamsProtocol"16@"NSString"24@"NSString"32
v32@0:8@"MSSubscribeStreamsProtocol"16@"NSString"24
v32@0:8@"MSSubscribeStreamsProtocol"16@"NSError"24
v44@0:8@16@24B32@36
v24@0:8@"NSArray"16
@"NSArray"16@0:8
@"MSSubscribedStream"16@0:8
@"<MSSubscriberDelegate>"16@0:8
v24@0:8@"<MSSubscriberDelegate>"16
v20@0:8B16
v32@0:8^i16^i24
@20@0:8i16
@"NSData"
@"NSDictionary"
@"NSString"
@"NSError"
@"NSDate"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@"NSString"16
v24@0:8Q16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"NSError"16@0:8
v24@0:8@"NSError"16
@"NSDate"16@0:8
v24@0:8@"NSDate"16
I16@0:8
v20@0:8I16
@"MSAsset"
@40@0:8@16@24@32
v24@0:8@?16
B32@0:8@16q24
@40@0:8@16q24@32
@48@0:8@16q24@32@40
@56@0:8@16q24@32@40@48
i24@0:8^@16
@20@0:8B16
{__MSPSPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"authFailedCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?"didReceiveRetryAfterCallback"^?}
{__MSPSPCUCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"authFailedCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?}
@32@0:8@16^@24
{__MSSSPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"gotDataChunkCallback"^?"authFailedCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?"didReceiveRetryAfterCallback"^?"connectionTimeout"d"__state"q"__chunkLengthData"^{__CFData}"__currentChunkData"^{__CFData}"__chunkBytesRemaining"q}
^{__MSSSPCChunkParsingContext=^v^?^?^?^?^?^{__CFString}^{__CFURL}^{__CFString}^{__CFString}i}
v36@0:8@16B24@28
@40@0:8@16@24^@32
@"<MSStreamsProtocolDelegate>"
v24@0:8^{__MSSPCContext=^v^{__CFString}^{__CFString}^{__CFDictionary}^{__CFDictionary}d^?^?^?^?^?^{CFURLConnectionClient_V1}^{_CFURLConnection}^{__CFData}^{__CFHTTPMessage}^{__CFError}}16
^{_mmcs_engine=}
i24@0:8Q16
@24@0:8Q16
v40@0:8Q16@24@32
^{_mmcs_engine=}16@0:8
@"<MSPublishStorageProtocolDelegate>"
v32@0:8@"NSArray"16@"NSURL"24
v24@0:8@"MSAsset"16
@"<MSPublishStorageProtocolDelegate>"16@0:8
v24@0:8@"<MSPublishStorageProtocolDelegate>"16
@"<MSSubscribeStorageProtocolDelegate>"
@"<MSSubscribeStorageProtocolDelegate>"16@0:8
v24@0:8@"<MSSubscribeStorageProtocolDelegate>"16
{?="retryAfterSeconds"b1"version"b1"icplAction"b1"mpsAction"b1}
i24@0:8@16
{?="originalLibrarySize"b1}
@"<MSServerSideConfigProtocolDelegate>"
{__MSSSCPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"didFinishCallback"^?"didFailAuthenticationCallback"^?}
@"MSServerSideConfigProtocol"
v40@0:8@"MSServerSideConfigProtocol"16@"NSDictionary"24@"NSError"32
v32@0:8@"MSServerSideConfigProtocol"16@"NSError"24
i36@0:8@16@24i32
d40@0:8@16@24d32
q40@0:8@16@24q32
{__MSRSPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"authFailedCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?}
@"MSResetServerProtocol"
v32@0:8@"MSResetServerProtocol"16@"NSError"24
{__MSRPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"authFailedCallback"^?"didReceiveRetryAfterCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?}
^{sqlite3=}
^{__CFDictionary=}
^{sqlite3_stmt=}32@0:8@16r*24
@32@0:8^{sqlite3_stmt=}16^q24
@24@0:8q16
@32@0:8q16q24
@"<NSObject><NSCoding>"
@32@0:8@16q24
q32@0:8@16@24
@"<MSBackoffManagerDelegate>"
@56@0:8d16d24d32d40@48
v24@0:8d16
d16@0:8
@"MSBackoffManager"
@"MSDeleteStreamsProtocol"
@"<MSDeleterDelegate>"
v48@0:8@"MSDeleteStreamsProtocol"16@"NSArray"24@"NSArray"32@"NSError"40
v32@0:8@"MSDeleteStreamsProtocol"16@"NSError"24
@"<MSDeleterDelegate>"16@0:8
v24@0:8@"<MSDeleterDelegate>"16
{_MSDSPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"authFailedCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?"didReceiveRetryAfterCallback"^?}
@"<MSAlbumSharingDaemonDelegate>"
@"MSASDaemonModel"
@"NSObject<OS_dispatch_queue>"
v52@0:8@16@24Q32B40@?44
v28@0:8B16@20
v36@0:8B16@20@28
v44@0:8@16B24@28@36
v48@0:8@16@24@32@?40
v44@0:8B16@20@28@?36
v52@0:8B16@20@28@36@?44
v32@0:8@16@?24
v36@0:8@16B24@?28
v40@0:8@16Q24@?32
v24@0:8@"MSASStateMachine"16
v32@0:8@"MSASStateMachine"16@"NSDictionary"24
v56@0:8@"MSASStateMachine"16@"NSArray"24@"NSArray"32@"NSArray"40@"NSDictionary"48
v40@0:8@"MSASStateMachine"16@"NSArray"24@"NSDictionary"32
v40@0:8@"MSASStateMachine"16@"NSDictionary"24@"NSError"32
v40@0:8@"MSASStateMachine"16@"MSASAlbum"24@"NSDictionary"32
v48@0:8@"MSASStateMachine"16@"NSArray"24@"MSASAlbum"32@"NSDictionary"40
v48@0:8@"MSASStateMachine"16@"MSASAlbum"24@"NSDictionary"32@"NSError"40
v48@0:8@"MSASStateMachine"16@"NSString"24@"NSString"32@"NSDictionary"40
v56@0:8@"MSASStateMachine"16@"NSArray"24@"MSASAlbum"32@"NSDictionary"40@"NSError"48
v56@0:8@"MSASStateMachine"16@"MSASAlbum"24@"NSString"32@"NSDictionary"40@"NSError"48
v48@0:8@"MSASStateMachine"16@"NSString"24@"NSDictionary"32@"NSError"40
v56@0:8@"MSASStateMachine"16@"NSArray"24@"NSString"32@"NSString"40@"NSDictionary"48
v52@0:8@"MSASStateMachine"16@"NSString"24i32@"NSDictionary"36@"NSError"44
v64@0:8@"MSASStateMachine"16@"NSDictionary"24@"NSString"32@"MSASAlbum"40@"NSString"48@"NSDictionary"56
v48@0:8@"MSASStateMachine"16@"NSDictionary"24@"MSASAlbum"32@"NSDictionary"40
v56@0:8@"MSASStateMachine"16@"MSASAlbum"24@"NSDictionary"32@"NSError"40@"NSString"48
v64@0:8@"MSASStateMachine"16@"MSASAssetCollection"24@"MSASAlbum"32@"NSString"40@"NSDictionary"48@"NSError"56
@"NSString"32@0:8@"NSString"16@"NSDictionary"24
@"MSASAlbum"24@0:8@"NSString"16
B32@0:8@"MSASStateMachine"16@"NSString"24
v40@0:8@"MSASStateMachine"16@"NSArray"24@"NSString"32
v48@0:8@"MSASStateMachine"16@"MSAsset"24@"MSASAlbum"32@"NSError"40
v56@0:8@"MSASStateMachine"16@"MSASAssetCollection"24@"MSASAlbum"32@"NSDictionary"40@"NSError"48
v64@0:8@"MSASStateMachine"16@"MSASComment"24@"MSASAssetCollection"32@"MSASAlbum"40@"NSDictionary"48@"NSError"56
v56@0:8@"MSASStateMachine"16@"NSArray"24@"MSASAlbum"32@"NSArray"40@"NSDictionary"48
v56@0:8@"MSASStateMachine"16@"NSString"24@"MSASAlbum"32@"NSDictionary"40@"NSError"48
v56@0:8@"MSASStateMachine"16@"MSASSharingRelationship"24@"MSASAlbum"32@"NSDictionary"40@"NSError"48
v56@0:8@"MSASStateMachine"16@24@"NSString"32@"NSString"40@"NSDictionary"48
@"MSASStateMachine"16@0:8
v52@0:8@16@24i32@36@44
B32@0:8@16@24
v28@0:8B16@?<v@?>20
v24@0:8@"<MSASModelObserver>"16
@"MSASModelEnumerator"16@0:8
@"MSASModelEnumerator"24@0:8@"NSString"16
@"MSASSharingRelationship"24@0:8@"NSString"16
@"MSASInvitation"24@0:8@"NSString"16
@"NSNumber"24@0:8@"NSString"16
@"MSASAssetCollection"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSURL"@"NSDate">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError"@"NSArray"@"NSDate">32
@"MSASComment"24@0:8@"NSString"16
B24@0:8@"NSString"16
i24@0:8@"NSString"16
@"NSString"24@0:8@"NSString"16
@"NSDate"24@0:8@"NSString"16
v32@0:8@"<NSCoding>"16@"NSString"24
@24@0:8@"NSString"16
v28@0:8B16@"NSDictionary"20
v36@0:8@"NSString"16B24@"NSDictionary"28
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"MSASAlbum"16@"NSDictionary"24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@"NSDictionary"32
v44@0:8B16@"NSString"20@"NSDictionary"28@?<v@?@"NSDictionary"@"NSError">36
v40@0:8@"NSString"16@"NSDate"24@"NSDictionary"32
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
v28@0:8@"NSString"16B24
v24@0:8@"MSASAlbum"16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@"NSString"24
v36@0:8B16@"NSString"20@?<v@?@"NSError">28
v32@0:8@"NSString"16@"NSDate"24
v28@0:8@"NSArray"16i24
@"NSDictionary"16@0:8
B24@0:8@"NSError"16
v28@0:8B16@?20
v28@0:8@16B24
v36@0:8B16@20@?28
v28@0:8@16i24
@"MSASInvitation"
@"MSASComment"
@"MSASPersonModel"
@"MSASAssetUploader"
@"MSASAssetDownloader"
@"MSAlbumSharingDaemon"
@"MSASProtocol"
@"MSASPhoneInvitations"
@"MSImageScalingSpecification"
v32@0:8@"MSASAssetDownloader"16Q24
v48@0:8@"MSASAssetDownloader"16@"MSAsset"24@"NSString"32@"NSError"40
v24@0:8@"MSASAssetDownloader"16
v32@0:8@16Q24
v48@0:8@"MSASAssetUploader"16@"MSASAssetCollection"24@"MSASAlbum"32@"NSError"40
v24@0:8@"MSBackoffManager"16
v28@0:8i16@20
B56@0:8@16@24@32@40@48
v48@0:8@16Q24@32@?40
@?16@0:8
@"<NSObject>"
B24@0:8i16i20
v64@0:8@16@24@32@40@48q56
v32@0:8^{sqlite3_stmt=}16^{sqlite3_stmt=}24
@64@0:8@16^@24^q32^@40^@48^@56
@56@0:8^@16^q24^@32^@40^@48
@64@0:8q16^@24^q32^@40^@48^@56
v32@0:8@16q24
q24@0:8@16
v36@0:8i16@20@28
@44@0:8@16@24B32i36B40
@36@0:8@16@24i32
@32@0:8@16i24i28
^{sqlite3=}16@0:8
^{sqlite3_stmt=}24@0:8@16
^{__CFDictionary=}16@0:8
v24@0:8^{__CFDictionary=}16
@"MMCSEngine"
@28@0:8@16i24
^*16@0:8
v24@0:8^*16
^Q16@0:8
v24@0:8^Q16
^I16@0:8
v24@0:8^I16
{?="version"q"context"^v"getFileDescriptorAndContentTypeFromItemCallback"^?"getItemProgressCallback"^?"getItemDoneCallback"^?"putItemProgressCallback"^?"putItemDoneCallback"^?"requestCompletedCallback"^?}
@"<MMCSEngineDelegate>"
@"NSThread"
@"NSTimer"
@56@0:8@16@24@32@40@48
@48@0:8@16@24@32@40
v28@0:8@?16B24
B48@0:8Q16^i24^@32^@40
v52@0:8Q16i24d28@36@44
v48@0:8Q16@24@32@40
@"NSMutableSet"
v40@0:8@16f24i28@32
v48@0:8@"MMCSEngine"16@"<MMCSAsset>"24@"NSString"32@"NSError"40
v40@0:8@"MMCSEngine"16f24i28@"<MMCSAsset>"32
v40@0:8@"MMCSEngine"16@"MMCSRequestorContext"24@"NSArray"32
@"<MMCSAsset>"32@0:8@"MMCSEngine"16Q24
B28@0:8@"MMCSEngine"16i24
v36@0:8@"MMCSEngine"16@"NSString"24i32
v32@0:8@"MMCSEngine"16@"NSString"24
@32@0:8@16Q24
B28@0:8@16i24
v36@0:8@16@24i32
^{sqlite3_stmt=}
@40@0:8^{sqlite3=}16@24@?32
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
@"MSASServerSideModelGroupedCommandQueue"
@"MSASPendingChanges"
B72@0:8@16^@24^@32^@40^@48^@56^@64
B56@0:8@16^@24^@32^@40^@48
B80@0:8@16^@24^@32^@40^@48^@56^q64^@72
B72@0:8@16^@24^Q32^@40^@48^B56^@64
B68@0:8i16@20^@28^@36^@44^B52^@60
@40@0:8@16^@24^@32
@36@0:8i16^@20^q28
@"MSASPConnectionGate"
@"NSObject<OS_dispatch_group>"
v32@0:8@"NSURLConnection"16@"NSError"24
B24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSURLAuthenticationChallenge"24
B32@0:8@"NSURLConnection"16@"NSURLProtectionSpace"24
v52@0:8@16@24@32B40@?44
v44@0:8@16B24Q28@?36
@52@0:8@16@24B32@36@44
v56@0:8@16@24@32@40@?48
v44@0:8@16@24B32@?36
v40@0:8@16@?24@?32
@"MSASEnqueuedCommand"
@?24@0:8@16
d32@0:8{CGSize=dd}16
@40@0:8{CGSize=dd}16@32
@"MSASServerSideModel"
@"MSTimerGate"
