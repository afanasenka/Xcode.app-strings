ICMusicSubscriptionStatusCacheDidChangeNotification
ICMusicSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification
com.apple.itunescloud.ICMusicSubscriptionStatusDidChangeDistributedNotification
v8@?0
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.calloutQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusCache.persistenceQueue
v16@?0@"ICMusicSubscriptionStatusCacheKey"8
ICMusicSubscriptionStatusCache.m
Caching a non final subscription status request is not allowed: %@.
v32@?0@"ICMusicSubscriptionStatusCacheKey"8@"ICMusicSubscriptionStatusResponse"16^B24
v16@?0@"ICStoreRequestContext"8
v24@?0@"ICURLBag"8@"NSError"16
v16@?0@"NSArray"8
v24@?0@"ICUserIdentityProperties"8@"NSError"16
sharedCache
T@"ICMusicSubscriptionStatusCache",R
B32@?0@"NSURLQueryItem"8q16^B24
v32@?0q8@"NSString"16^B24
v32@?0@"NSNumber"8Q16^B24
signatureDataCookieName
T@"NSString",C,N,V_signatureDataCookieName
signatureDataHeaderName
T@"NSString",C,N,V_signatureDataHeaderName
%@ %@
impressionType
recoAlgoId
hasImpressionType
TB,R,N
T@"NSString",&,N,V_impressionType
hasRecoAlgoId
T@"NSString",&,N,V_recoAlgoId
Missing required expirationDate
Type: CloudCredentials
Type: PICRequest
Expires: %@
Data: %ld Bytes
%@ [%@]
supportsSecureCoding
TB,R
data
T@"NSData",R,C,N,V_data
type
Tq,R,N,V_type
expirationDate
T@"NSDate",R,C,N,V_expirationDate
expired
TB,R,N,GisExpired
keybag
token
keybagData
T@"NSData",R,C,N
tokenData
POST
true
guid
companion-guid
isRequestingSlot
statusCode
v24@?0@"NSArray"8@"NSError"16
v24@?0@"ICURLResponse"8@"NSError"16
v16@?0@"NSDictionary"8
com.apple.iTunesCloud.ICSAPSession.SharedAccessQueue
@"ICSAPSession"16@?0@"NSArray"8
com.apple.iTunesCloud.ICSAPSession.calloutQueue
com.apple.iTunesCloud.ICSAPSession.prepareFairPlayContextOperationQueue
v24@?0@"NSData"8@"NSError"16
v20@?0B8@"NSError"12
_prepareFairPlayContextOperationQueue
T@"NSOperationQueue",R,N,V_prepareFairPlayContextOperationQueue
_sapContext
T@"ICFPSAPContext",&,N,S_setSAPContext:,V_sapContext
_certificateURL
T@"NSURL",R,C,N,V_certificateURL
_requestContext
T@"ICStoreRequestContext",R,C,N,V_requestContext
_setupURL
T@"NSURL",R,C,N,V_setupURL
sapVersion
TI,R,N,V_sapVersion
ICStoreRequestContext.m
Invalid parameter not satisfying: %@
identityStore != nil && identity != nil
<%@: %p [%@/%@; %@]>
delegatedIdentity
identity
identityStore
storeDialogResponseHandler
allowsExpiredBags
personalizationStyle
Mutation not allowed beyond initialization.
T@"ICUserIdentity",R,C,N,V_identity
T@"ICUserIdentity",R,C,N,V_delegatedIdentity
T@"ICUserIdentityStore",R,N,V_identityStore
T@"ICStoreDialogResponseHandler",R,C,N,V_storeDialogResponseHandler
TB,R,N,V_allowsExpiredBags
Tq,R,N,V_personalizationStyle
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
MSVHasher.h
_MSVHasherAppend64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasherAppend64: invalid byte count detected [byteCount & 3]: %lld
void _MSVHasherAppend32(MSVHasher * _Nonnull, uint32_t)
_MSVHasherAppend32: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasherAppend32: invalid byte count detected [byteCount & 3]: %lld
databasePath
T@"NSString",C,N,V_databasePath
singleWriter
TB,N,GisSingleWriter,V_singleWriter
XPCEndpoint
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
XPCServiceName
T@"NSString",C,N,V_serviceName
identifier
target
messageType
carousel
priority
templateURL
maximumDisplays
startDate
endDate
hasCloseButton
contentPages
rule
webArchiveURL
modalPresentationStyle
globalPresentationPolicyGroup
assetPrefetchStrategy
holdoutEvent
localNotification
impressionEvent
presentationTriggers
hasIdentifier
T@"NSString",&,N,V_identifier
targets
T@"NSMutableArray",&,N,V_targets
hasMessageType
TB,N
Ti,N,V_messageType
hasCarousel
TB,N,V_carousel
hasPriority
Ti,N,V_priority
hasTemplateURL
T@"NSString",&,N,V_templateURL
hasMaximumDisplays
Ti,N,V_maximumDisplays
hasStartDate
Td,N,V_startDate
hasEndDate
Td,N,V_endDate
hasHasCloseButton
TB,N,V_hasCloseButton
T@"NSMutableArray",&,N,V_contentPages
hasRule
T@"ICIAMMessageRule",&,N,V_rule
hasWebArchiveURL
T@"NSString",&,N,V_webArchiveURL
hasModalPresentationStyle
Ti,N,V_modalPresentationStyle
hasGlobalPresentationPolicyGroup
Ti,N,V_globalPresentationPolicyGroup
hasAssetPrefetchStrategy
Ti,N,V_assetPrefetchStrategy
hasHoldoutEvent
T@"ICIAMMetricEvent",&,N,V_holdoutEvent
hasLocalNotification
T@"ICIAMLocalNotification",&,N,V_localNotification
hasImpressionEvent
T@"ICIAMMetricEvent",&,N,V_impressionEvent
T@"NSMutableArray",&,N,V_presentationTriggers
Banner
Modal
Native
Notification
(unknown: %i)
Card
Fullscreen
Normal
Restricted
Default
Immediate
Never
sharedAuthKitSession
T@"AKAppleIDSession",R
library-artist
use-artist
artist-name
rep-cloud-id
artist-id
artistName
T@"NSString",C,N,V_artistName
representativeCloudIdentifier
T@"NSNumber",C,N,V_representativeCloudIdentifier
storeIdentifier
T@"NSNumber",C,N,V_storeIdentifier
com.apple.itunescloudd.ICCloudClientCloudService.serial.queue
serialQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
listenerEndpointProvider
T@"<ICCloudServerListenerEndpointProviding>",R,W,N,V_listenerEndpointProvider
xpcConnection
T@"NSXPCConnection",R,N,V_xpcConnection
metadata
downloadKey
flavor
sinfs
fileSize
file-size
asset-info
fileExtension
null
assetURL
T@"NSURL",C,N,V_assetURL
T@"NSString",C,N,V_downloadKey
expectedProtectionType
Tq,N,V_expectedProtectionType
fairPlayInfoList
T@"NSArray",C,N,V_fairPlayInfoList
flavorType
Tq,N,V_flavorType
T@"NSString",C,N,V_fileExtension
TQ,N,V_fileSize
T@"ICStoreFinanceItemMetadata",C,N,V_metadata
T@"NSData",C,N,V_md5
responseDictionary
T@"NSDictionary",R,C,N
protectionType
Tq,R,N
LWHQ
1080p
720p
hdmv
480p
SDMV
T@"NSData",C,N,V_data
responseHandler
T@?,C,N,V_responseHandler
com.apple.iTunesCloud.ICStorePlatformRequestOperation.accessQueue
%.0f
buster
platformRequest
T@"ICStorePlatformRequest",R,C,N,V_platformRequest
events
override-headers
auto-play-mode
build-features
build-version
container-id
container-ids
container-type
device-name
dsid
end-position-in-milliseconds
end-reason-type
enqueuer
external-identifier
feature-name
household-id
internal-build
media-duration-in-milliseconds
media-type
offline
persistent-id
personalized-container-id
player
play-mode
private-enabled
event-reason-hint-type
reco-data
repeat-play-mode
bundle-id
bundle-version
sb-enabled
siri-initiated
shuffle-play-mode
source-type
start-position-in-milliseconds
store-front
timed-metadata
milliseconds-since-play
track-info
event-type
utc-offset-in-seconds
display-type
character-displayed-count
lyric-language
album-adam-id
artist-adam-id
cloud-album-id
cloud-playlist-id
global-playlist-id
playlist-version-hash
station-hash
station-personalized-id
station-id
auc-adam-id
cloud-id
lyric-id
purchased-adam-id
radio-adam-id
orig-sf-adam-id
subscription-adam-id
%lli
currentStoreFrontID
T@"NSString",C,N,V_currentStoreFrontID
song
feature-movie
music-video
tv-episode
itemId
itemName
sort-name
sort-artist
artistId
playlistName
sort-album
playlistArtistName
composerName
sort-composer
genre
genreId
playlistId
discCount
discNumber
trackCount
trackNumber
duration
explicit
year
bitRate
comments
dateAdded
bitrate
gapless
isMasteredForItunes
kind
sampleRate
versionRestrictions
compilation
copyright
rank
releaseDate
yyyy-MM-dd'T'HH:mm:ss'Z'
en_US_POSIX
vendorId
metadataDictionary
T@"NSDictionary",R,C,N,V_metadataDictionary
itemAdamID
T@"NSNumber",R,C,N
itemCloudID
T@"NSString",R,C,N
itemSortName
artistSortName
artistID
albumSortName
composerSortName
genreID
playlistID
T@"NSNumber",R,C,N,V_playlistID
isExplicit
T@"NSDate",R,C,N
drmVersionNumber
isGapless
isMasteredForITunes
isCompilation
storefrontID
vendorID
com.apple.itunescloud.delegate-account-store
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
failureType
status
errorCode
fuseCarrierBundleStatus
checkBack
startFuseHeaderEnrichment
startFuseManualSms
hasFuseCarrierBundleSubscription
fuseHeaderEnrichmentMessage
fuseHeaderEnrichmentSessionId
fuseHeaderEnrichmentUrl
fuseSilentSMSMessage
fuseSilentSMSNumber
fuseSmsSessionId
waitTime
isFamily
carrierBundlingStatusType
Tq,R,N,V_carrierBundlingStatusType
familySubscription
TB,R,N,GisFamilySubscription,V_familySubscription
error
T@"NSError",R,N,V_error
SMSSessionIdentifier
T@"NSString",R,N,V_SMSSessionIdentifier
delayInterval
Td,R,N,V_delayInterval
wantsDelayedRetry
TB,R,N,V_wantsDelayedRetry
headerEnrichmentMessage
T@"NSString",R,N,V_headerEnrichmentMessage
headerEnrichmentSessionIdentifier
T@"NSString",R,N,V_headerEnrichmentSessionIdentifier
headerEnrichmentURL
T@"NSURL",R,N,V_headerEnrichmentURL
needsHeaderEnrichment
TB,R,N,V_needsHeaderEnrichment
needsSilentSMS
TB,R,N,V_needsSilentSMS
silentSMSMessage
T@"NSString",R,N,V_silentSMSMessage
silentSMSNumber
T@"NSString",R,N,V_silentSMSNumber
cellularProviderName
T@"NSString",R,N,V_cellularProviderName
phoneNumber
T@"NSString",R,N,V_phoneNumber
skips-used
queue
skips
stationID
tracks
curIndex
stationIdentifier
T@"NSString",R,C,N,V_stationIdentifier
numberOfSkips
Tq,R,N,V_numberOfSkips
T@"NSArray",R,C,N
currentTrack
T@"ICRadioPlaybackHistoryItem",R,C,N,V_currentTrack
propertyListRepresentation
v16@?0@"NSMutableArray"8
T@"ICRadioPlaybackHistoryItem",C,D,N
Tq,D,N
T@"NSArray",C,D,N
store
containerID
T@"NSString",C,N
T@"NSString",C,N,V_containerID
connection
T@"ICSQLiteConnection",R,N,V_connection
sqlite3_stmt
T^{sqlite3_stmt=},R,N,V_statement
columnIndexByName
readOnly
TB,R,N,GisReadOnly
Statement already finalized
ICAgeVerificationStateDidChangeNotification
com.apple.iTunesCloud.ICAgeVerificationManager.serialAccess
com.apple.iTunesCloud.ICAgeVerificationManager.concurrentCallout
apple
keychain-access-groups
v16@?0@"ICAgeVerificationState"8
Error retrieving properties for account %@ during age verification - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager - Error retrieving bag during age verification
ICAgeVerificationManager.m
Bag should never be nil when no error was provided
korea
v32@?0@"NSString"8Q16^B24
defaultManager
T@"ICAgeVerificationManager",R
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
calloutQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
ageVerificationStateInternal
T@"NSMutableDictionary",&,N,V_ageVerificationStateInternal
ageVerificationState
T@"ICAgeVerificationState",R,N
com.apple.itunescloud.in-app-message-service
ICInAppMessagesDidChangeNotification
com.apple.itunescloud.ICInAppMessagesDidChangeDistributedNotification
com.apple.iTunesCloud.ICInAppMessageManager.operationQueue
com.apple.iTunesCloud.ICInAppMessageManager.downloadOperationQueue
com.apple.iTunesCloud.ICInAppMessageManager.accessQueue
v16@?0@"NSError"8
v24@?0@8@"NSError"16
v20@?0@"NSString"8B16
v24@?0@"ICInAppMessageEntry"8@"NSError"16
v16@?0@"ICAsyncBlockOperation"8
com.apple.iTunesCloud.ICInAppMessageManager.addMessage
com.apple.iTunesCloud.ICInAppMessageManager.updateMessage
com.apple.iTunesCloud.ICInAppMessageManager.removeMessageWithIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.removeAllMessagesForBundleIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.syncMessages
com.apple.iTunesCloud.ICInAppMessageManager.resetMessages
com.apple.iTunesCloud.ICInAppMessageManager.reportEvents
com.apple.iTunesCloud.ICInAppMessageManager.flushEvents
com.apple.iTunesCloud.ICInAppMessageManager.downloadResourcesForMessageWithIdentifier
v24@?0@"ICInAppMessageMetadataEntry"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
com.apple.iTunesCloud.ICInAppMessageManager.updateMetadata
com.apple.iTunesCloud.ICInAppMessageManager.clearMetadataForMessageIdentifier
com.apple.iTunesCloud.ICInAppMessageManager.handleAccountChange
com.apple.itunescloud.ICInAppMessageManager.periodic-poll-activity
v16@?0@"NSObject<OS_xpc_object>"8
v24@?0@"ICInAppMessageConfiguration"8@"NSError"16
v24@?0@"ICIAMSynchronizeMessagesResponse"8@"NSError"16
ams_%@
com.apple.iTunesCloud.ICInAppMessageManager.performSyncRetryIfPending
com.apple.iTunesCloud.ICInAppMessageManager.setShouldDownloadResources
com.apple.iTunesCloud.ICInAppMessageManager.downloadMessageResources
v32@?0@8@16^B24
InAppMessages
ResourceCache
com.apple.iTunesCloud.ICInAppMessageManager.performCacheConsistencyCheck
music-notification-default
Music
sharedManager
T@"ICInAppMessageManager",R
_unsafeMessageStore
T@"ICInAppMessageStore",R,N,V_messageStore
Remove
RemoveAll
Reset
date
connectionStartTime
Td,R,N,V_connectionStartTime
connectionEndTime
Td,R,N,V_connectionEndTime
domainLookupStartTime
Td,R,N,V_domainLookupStartTime
domainLookupEndTime
Td,R,N,V_domainLookupEndTime
fetchStartTime
Td,R,N,V_fetchStartTime
requestStartTime
Td,R,N,V_requestStartTime
responseStartTime
Td,R,N,V_responseStartTime
responseEndTime
Td,R,N,V_responseEndTime
secureConnectionStartTime
Td,R,N,V_secureConnectionStartTime
cachedResponse
TB,R,N,V_cachedResponse
connectionReused
TB,R,N,V_connectionReused
appleTimingApp
T@"NSString",R,N,V_appleTimingApp
connectionType
T@"NSString",R,N,V_connectionType
edgeNodeCacheStatus
T@"NSString",R,N,V_edgeNodeCacheStatus
environmentDataCenter
T@"NSString",R,N,V_environmentDataCenter
responseDate
T@"NSString",R,N,V_responseDate
TQ,R,N,V_statusCode
redirectCount
TQ,R,N,V_redirectCount
requestMessageSize
TQ,R,N,V_requestMessageSize
requestUrl
T@"NSString",R,N,V_requestUrl
resolvedIPAddress
T@"NSString",R,N,V_resolvedIPAddress
responseMessageSize
TQ,R,N,V_responseMessageSize
remoteRequestOperationResponseClassName
remoteRequestOperationResponse
remoteRequestOperationError
T@"<NSSecureCoding>",&,N,V_remoteRequestOperationResponse
T@"NSError",&,N,V_remoteRequestOperationError
salableAdamId
com.apple.iTunesCloud.ICDelegationConsumerNetService.accessQueue
com.apple.iTunesCloud.ICDelegationConsumerNetService.netServiceQueue
com.apple.iTunesCloud.ICDelegationConsumerNetService.calloutQueue
local.
v24@?0@"ICDelegationServiceSecuritySettings"8@"NSError"16
delegate
T@"<ICDelegationConsumerNetServiceDelegate>",W,N,V_delegate
userIdentityDelegationAccountUUIDs
T@"NSDictionary",R,C,N,V_userIdentityDelegationAccountUUIDs
securitySettings
T@"ICDelegationServiceSecuritySettings",R,N
com.apple.iTunesCloud.ICMediaAssetDownloadRequest.
discretionary.
power.
wifi.
failDownloadOnConstrainedNetworks.
destinationURL
T@"NSURL",C,N,V_destinationURL
allowsCellularData
TB,N,V_allowsCellularData
allowsCellularFallback
TB,N,V_allowsCellularFallback
discretionary
TB,N,GisDiscretionary,V_discretionary
requiresPower
TB,N,V_requiresPower
resumeData
T@"NSData",C,N,V_resumeData
com.apple.iTunesCloud.ICURLSessionManager.accessQueue
com.apple.SessionTrackerApp
UserInteractive
UserInitiated
Utility
Background
Unknown
com.apple.iTunesCloud.ICURLSessionManager.%@
sharedSessionManager
T@"ICURLSessionManager",R
defaultSession
T@"ICURLSession",R
highPrioritySession
application/json
application/gzip
userInfo
T@"NSDictionary",R,C,N,V_userInfo
accountDSID
Tq,R,N,V_accountDSID
actionType
Tq,R,N,V_actionType
apsPayload
T@"NSDictionary",R,C,N,V_apsPayload
sagaServerRevision
sagaUpdatedSubscribedPlaylistIDs
jaliscoServerRevision
jaliscoChangedMediaTypes
clientIdentifier
moduleIdentifier
com.apple.iTunesCloud.ICCloudClient.serial.access
MLCloudAccountAddToPlaylistBehavior
v24@?0Q8@"NSError"16
v32@?0@"NSString"8@"NSString"16@"NSError"24
disabled
enabled
v24@?0@"NSURL"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"NSNumber"8@"NSError"16
v24@?0@"NSError"8@"NSArray"16
v16@?0B8B12
v20@?0@"NSError"8f16
com.apple.itunescloudd.launched
com.apple.itunescloudd.jaliscoUpdateInProgressChanged
com.apple.itunescloudd.sagaUpdateInProgressChanged
ICCloudClient.m
userIndentityStore cannot be nil
userIndentity cannot be nil
serialAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serialAccessQueue
preferredVideoQuality
Tq,N,V_preferredVideoQuality
active
TB,N,GisActive,V_active
availabilityService
T@"ICCloudClientAvailabilityService",R,N,V_availabilityService
cloudService
T@"ICCloudClientCloudService",R,N,V_cloudService
T@"ICCloudServerListenerEndpointProvider",R,N,V_listenerEndpointProvider
configuration
T@"ICConnectionConfiguration",R,N,V_configuration
updateSagaInProgressChangedHandler
T@?,C,N,V_updateSagaInProgressChangedHandler
updateJaliscoInProgressChangedHandler
T@?,C,N,V_updateJaliscoInProgressChangedHandler
HasMigratedMusicMatchCellularDataSwitch
com.apple.mobileipod
AllowMatchOnCellular
v24@?0@"ACAccount"8@"NSError"16
AllowAutoDownloadOnCellular
com.apple.itunesstored
com.apple.itunesstored.autodownloaddefaultschange
HasMigratedMusicDownloadsOnCellularDataSwitch
AllowsCellularDataDownloads
com.apple.Music
com.apple.Music-AllowsCellularDataDownloads
MLCloudAccountID
MLCloudDatabaseUserVersion
MLJaliscoAccountID
MLStorefrontID
MLCloudDatabaseRevision
MLCloudLastLibraryUpdate
MLCloudLastSubscribedContainersUpdate
MLJaliscoDatabaseRevision
MLJaliscoLastLibraryUpdate
MLCloudDatabasePreferredVideoQuality
unknown reason
initial load
push notification
user initiated poll
periodic poll
periodic reload
user initiated reload
app launch poll
edit initiated poll
edit error reload
subscribed playlist periodic poll
subscribed playlist TTL refresh
subscribed playlist manual refresh
supported sync media types changed
deferred push notification
ICAddToPlaylistBehaviorUndecided
ICAddToPlaylistBehaviorAlwaysAddToLibrary
ICAddToPlaylistBehaviorOnlyAddToPlaylist
ML3MusicLibrary
/System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
ML3ContainerPropertyName
com.apple.iTunesCloud.ICAsyncBlockOperation.accessQueue
startHandler
T@?,R,C,N,V_startHandler
cancellationHandler
T@?,C,N
com.apple.iTunesCloud.ICRemoteRequestOperationController.accessQueue
v16@?0@"ICRemoteRequestOperationExecutionResponse"8
sharedRemoteRequestOperationController
T@"ICRemoteRequestOperationController",R
songId
artworkURL
cancel-download-url
download-id
purchased-redownload
purchaseDate
redownload-parameters
lease-id
assets
assetExpirationDate
T@"NSDate",C,N,V_assetExpirationDate
storeAdamID
T@"NSURL",R,C,N
cancelDownloadURL
downloadIdentifier
isPurchasedRedownload
T@"ICStoreFinanceItemMetadata",R,C,N
redownloadParameters
fileAssets
hlsAsset
T@"ICStoreHLSAssetInfo",R,C,N
suzeLeaseID
T@,R,N
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
fetchMetadata
v32@?0@"NSURLRequest"8@"ICStoreURLRequestBuilderProperties"16@?<v@?@"NSDictionary"@"NSError">24
storeAdamIDs
T@"NSArray",C,N,V_storeAdamIDs
storeRequestContext
T@"ICStoreRequestContext",C,N,V_storeRequestContext
timedMetadataData
T@"NSData",C,N,V_timedMetadataData
qualityOfService
Tq,N,V_qualityOfService
allowed-kinds
allowed-match-status
gzip
allowedKinds
T@"NSArray",R,C,N,V_allowedKinds
allowedMatchStatus
T@"NSArray",R,C,N,V_allowedMatchStatus
restoreURL
T@"NSURL",R,C,N,V_restoreURL
shouldGZip
TB,R,N,V_shouldGZip
resultCode
serverHostName
serverInstance
success
result
%@ resultCode=%d token=%@
Ti,R,N,V_resultCode
T@"NSString",R,C,N,V_serverHostName
Tq,R,N,V_serverInstance
TB,N,GisSuccess,V_success
tokenResult
T@"ICLibraryAuthServiceClientTokenResult",R,C,N,V_tokenResult
generatedAtMillis
timeToLiveMillis
lifespanMillis
tokenID
<private>
%@: [%@, expires %@]
tokenString
ttlMillis
T@"NSString",R,C,N,V_token
Tq,R,N,V_generatedAtMillis
Tq,R,N,V_timeToLiveMillis
Tq,R,N,V_lifespanMillis
tokenIdentitifer
T@"ICLibraryAuthServiceClientTokenIdentifier",R,C,N,V_tokenIdentitifer
isExpired
deviceGUID
DSID
T@"NSNumber",R,C,N,V_DSID
T@"NSString",R,C,N,V_deviceGUID
Active Account: <%@>
Active Account: <redacted dsid>
Active Account: <unresolved dsid>
Active Locker Account: <%@>
Active Locker Account: <redacted dsid>
Active Locker Account: <unresolved dsid>
Autoupdating Active Account
Autoupdating Active Locker Account
Carrier Bundle: %@
Null
Account: <%@>
Account: <redacted>
%@: [%@]
delegation
time
deviceID
creationTime
TQ,R,N,V_creationTime
deviceIdentifier
allowsDelegation
TB,R,N,V_allowsDelegation
allowsAccountEstablishment
TB,R,N,V_allowsAccountEstablishment
https://init.itunes.apple.com/bag.xml?ix=6
cache_entries
build_version
ICURLBagProviderDidUpdateBagNotification
request_context
url_bag
com.apple.iTunesCloud.ICURLBagProvider.access
com.apple.iTunesCloud.ICURLBagProvider.persistence
com.apple.iTunesCloud.ICURLBagProvider.callback
ICURLBagProvider.m
requestContext != nil
v16@?0@"NSString"8
v32@?0@"ICURLBag"8Q16^B24
%ld-%@-%@-%@-%@-%@
personalized
unpersonalized
v16@?0@"ICUserIdentityProperties"8
&os=%@
&locale=%@
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"ICURLBag"16^B24
%@.plist
unknown
URLBags
sharedBagProvider
T@"ICURLBagProvider",R
expiration
valid
<%@: %p
; expirationDate = %@
; isFinalResponse = %@
; needsReload = YES
; subscriptionStatus = %@
isFinalResponse
needsReload
subscriptionStatus
errorMessage
finalResponse
TB,N,GisFinalResponse,V_finalResponse
TB,N,V_needsReload
T@"ICMusicSubscriptionStatus",C,N,V_subscriptionStatus
mz_at_ssl-%@
sslToken
dsids
v32@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSArray"16@"NSError"24
assetSourceStorefrontID
T@"NSString",C,N,V_assetSourceStorefrontID
requestContext
storeSubscriptionAdamID
Tq,R,N,V_storeSubscriptionAdamID
com.apple.iTunesCloud.ICDelegationConsumerServiceProtocolHandler.operationQueue
com.apple.iTunesCloud.ICDelegationConsumerServiceProtocolHandler.calloutQueue
ATV-
iOS-
bagKey
T@"NSString",R,C,N,V_bagKey
bagValueType
TQ,R,N,V_bagValueType
com.apple.iTunesCloud.ICMusicSubscriptionPlaybackRequestOperation.accessQueue
followup
lease-only
Missing bag key '%@'
delegatedPlayback
TB,N,GisDelegatedPlayback,V_delegatedPlayback
requestType
Tq,N,V_requestType
willBeginExecutionHandler
T@?,C,N,V_willBeginExecutionHandler
T@"ICStoreRequestContext",C,N,V_requestContext
storeCloudID
TQ,N,V_storeCloudID
Tq,N,V_storeSubscriptionAdamID
storePurchasedAdamID
Tq,N,V_storePurchasedAdamID
cloudUniversalLibraryID
T@"NSString",C,N,V_cloudUniversalLibraryID
followUp
TB,N,GisFollowUp,V_followUp
com.apple.itunescloud.setupcompleted
preview
size
Td,R,N
previewDuration
previewURL
%@; shouldSignBody=%d, fields=%@, headers=%@
shouldSignBody
TB,N,V_shouldSignBody
fields
T@"NSArray",C,N,V_fields
headers
T@"NSArray",C,N,V_headers
sessionID
expirationTimeInterval
storefrontIdentifier
hasToken
T@"NSData",&,N,V_token
hasSessionID
TQ,N,V_sessionID
hasExpirationTimeInterval
Td,N,V_expirationTimeInterval
hasStorefrontIdentifier
T@"NSString",&,N,V_storefrontIdentifier
ICDelegateAccountStoreDidChangeNotification
options not single-writer
Invalid XPC options
Non-concrete user identity: %@
Out-of-scope transaction usage: %@
v16@?0@"<ICDelegateAccountStoreWriter>"8
v28@?0B8@"NSString"12@"NSError"20
B8@?0
Cannot use a closed delegate account store: %@
com.apple.itunescloud.ICStorageManager.accessQueue
CACHE_DELETE_VOLUME
/private/var
CACHE_DELETE_AMOUNT
CACHE_DELETE_PURGE_TIMEOUT
v16@?0^{__CFDictionary=}8
storageSpaceAvailable
TQ,R,N
cachingEnabled
Caches
com.apple.iTunesCloud
identityProperties
T@"ICUserIdentityProperties",C,N,V_identityProperties
iCloudIdentityProperties
T@"ICUserIdentityProperties",C,N,V_iCloudIdentityProperties
isExecuting
isFinished
com.apple.iTunesCloud.ICAsyncOperation.childOperationQueue-%@
; name = "%@"
; maxConcurrentOperationCount = %ld
????
userInteractive
userInitiated
utility
background
default
; qualityOfService = %@
T@"NSError",R,C,N,V_error
accountID
TQ,R,N,V_accountID
leaseID
T@,R,N,V_leaseID
mediaKind
TI,R,N,V_mediaKind
com.apple.amp.iTunesCloud.ICNanoPairedDeviceStatusMonitor.queue
com.apple.amp.iTunesCloud.ICNanoPairedDeviceStatusMonitor.callBackQueue
C5DDE5DD-2FF7-4735-80A3-0108488556DE
sharedMonitor
T@"ICNanoPairedDeviceStatusMonitor",R
allPairedDevicePairingIDs
activePairedDevicePairingID
T@"NSUUID",R,C,N
pairedDevicePairingID
pairedDeviceGUID
pairedDeviceMediaGUID
isInitialSyncComplete
TB,N,V_isInitialSyncComplete
mediaSyncingSupported
TB,R,N,GisMediaSyncingSupported
NRDevicePropertyUDID
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
NRDevicePropertyIsAltAccount
NRDevicePropertyCompanionMusicGUID
NRPairedDeviceRegistry
tokenResults
com.apple.iTunesCloud.ICDelegationProviderService.accessQueue
com.apple.iTunesCloud.ICDelegationProviderService.netServiceBrowserQueue
com.apple.iTunesCloud.ICDelegationProviderService.identityStoreOperationQueue
ICDelegationProviderService.m
Cannot start XPC service for non-system service.
local
com.apple.iTunesCloud.ICDelegationProviderService.supportedDelegationAccountUUIDsAccessQueue
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
sharedService
T@"ICDelegationProviderService",R
T@"ICRequestContext",R,C,N,V_requestContext
com.apple.iTunesCloud.ICUserIdentityStoreACAccountBackend.callbackQueue
com.apple.itunesstored.accountschanged
B32@?0@"ACAccount"8q16^B24
T@"<ICUserIdentityStoreBackendDelegate>",W,N
T@"<ICUserIdentityStoreBackendDelegate>",W,N,V_delegate
altDSID
carrierDeviceID
cloudBackup
delegated
delegateToken
firstName
iCloudPersonID
lastName
isManaged
sandboxed
storefront
subscriptionStatusEnabled
username
ageVerificationExpirationDate
mergeToCloudLibraryPreference
homeUserIdentifiers
cloudLibraryStateReason
privateListeningEnabled
activeLocker
privateListeningEnabledForHomeUsers
cloudBackupEnabled
TB,N,GisCloudBackupEnabled,V_cloudBackupEnabled
T@"NSString",C,N,SsetICloudPersonID:,V_iCloudPersonID
T@"NSArray",C,N,V_homeUserIdentifiers
T@"NSDictionary",C,N,V_privateListeningEnabledForHomeUsers
alternateDSID
carrierBundleDeviceIdentifier
T@"NSNumber",R,C,N,V_dsid
managedAppleID
TB,R,N,GisManagedAppleID,V_managedAppleID
TB,R,N,GisSandboxed,V_sandboxed
TB,R,N,GisSubscriptionStatusEnabled,V_subscriptionStatusEnabled
T@"NSNumber",R,C,N,V_privateListeningEnabled
TB,R,N,GisActiveLocker,V_activeLocker
TB,R,N,GisActive,V_active
TB,R,N,GisDelegated,V_delegated
T@"ICDelegateToken",R,C,N,V_delegateToken
T@"NSString",C,D,N
TB,D,N,GisDelegated
T@"ICDelegateToken",C,D,N
T@"NSNumber",C,D,N
TB,D,N,GisManagedAppleID
TB,D,N,GisSandboxed
TB,D,N,GisSubscriptionStatusEnabled
T@"NSDate",C,D,N
T@"NSDictionary",C,D,N
TB,D,N,GisActiveLocker
TB,D,N,GisActive
hasDSID
dSID
Tq,N,V_dSID
hasDeviceID
T@"NSString",&,N,V_deviceID
com.apple.itunescloud.ICHTTPArchive.accessQueue
HTTPArchives
request
response
version
creator
entries
yyyy-MM-dd_HH-mm-ss-SSSS
%@_%@.har
com.apple.itunescloud
name
method
HTTP/1.1
httpVersion
headersSize
text
postData
bodySize
statusText
mimeType
content
value
q24@?0@"NSURL"8@"NSURL"16
sharedArchive
T@"ICHTTPArchive",R
v16@?0@"ICMusicKitRequestContext"8
; client = %@/%@
legacy
musicUserToken
; personalizationMethod = %@
automatic
always
; personalizationStyle = %@
; developerTokenProvider = %@
personalizationMethod
developerTokenProviderClassName
developerTokenProvider
ICMusicKitRequestContext.m
Failed to look up class of developer token provider with name: %@.
Setting up a MusicKit request context with a developer token provider that is not provided by iTunesCloud.framework is not supported.
_storeRequestPersonalizationStyle
T@"<ICDeveloperTokenProvider>",R,N,V_developerTokenProvider
Tq,R,N,V_personalizationMethod
BuildVersion
UNKNOWN
%@/%@
%@/%@%@
baseURL
libraryBagKey
buildIdentifier
purchaseClientIdentifier
requestReason
familyMemberStoreID
userIdentity
userIdentityStore
userIdentityType
userIdentityDSID
userIdentityAllowsDelegation
userIdentityAllowsEstablishment
userIdentityDeviceIdentifier
T@"ICUserIdentity",C,N,V_userIdentity
T@"ICUserIdentityStore",R,N,V_userIdentityStore
T@"NSURL",C,N,V_baseURL
T@"NSString",C,N,V_libraryBagKey
T@"NSString",C,N,V_buildIdentifier
T@"NSString",C,N,V_purchaseClientIdentifier
Tq,N,V_requestReason
T@"NSNumber",C,N,V_familyMemberStoreID
cloudId
adamId
count
Software
recommendedContentIds
silent-only
silent-if-possible
always-renew
establish-only
once-a-day
ACAccount
T@"ACAccount",&,N,V_ACAccount
ACAccountStore
T@"ACAccountStore",&,N,V_ACAccountStore
T@"ICUserIdentityStore",&,N,V_identityStore
verificationStyle
Tq,N,V_verificationStyle
interactionLevel
Tq,N,V_interactionLevel
debugReason
T@"NSString",C,N,V_debugReason
<%@ %p shouldPlaybackRequireOnlineKeys: %@; hasOnlinePlaybackKeys: %@; hasOfflinePlaybackKeys: %@; hasPendingLeaseAcquisition: %@, leaseState: %@; stateReasonDialog: %@>
hasOnlinePlaybackKeys
TB,N,V_hasOnlinePlaybackKeys
hasOfflinePlaybackKeys
TB,N,V_hasOfflinePlaybackKeys
hasPendingLeaseAcquisition
TB,N,V_hasPendingLeaseAcquisition
shouldPlaybackRequireOnlineKeys
TB,N,V_shouldPlaybackRequireOnlineKeys
leaseState
Tq,N,V_leaseState
stateReasonDialog
T@"ICStoreDialogResponse",C,N,V_stateReasonDialog
stateReasonDialogMetricsDictionary
T@"NSDictionary",C,N,V_stateReasonDialogMetricsDictionary
taken
register-success
environment
device-name-data
serial-number
%lld
affiliateID
%02X
lastError
lastUpdateTime
excludeFromBackgroundRefresh
T@"ICLibraryAuthServiceClientTokenResult",C,N,V_tokenResult
T@"NSError",C,N,V_lastError
lastUpdateAttemptTime
Td,N,V_lastUpdateAttemptTime
shouldExcludeFromBackgroundRefresh
TB,N,V_shouldExcludeFromBackgroundRefresh
lockup
play
playlist-product
product
omni
caller
artwork
platform
X-JS-SP-TOKEN
X-JS-TIMESTAMP
com.apple.iTunesCloud.ICStorePlatformRequest.operationQueue
com.apple.iTunesCloud.ICStorePlatformRequest.union
com.apple.iTunesCloud.ICStorePlatformRequest.callout
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
Batch size must be <= %ld
yyyy-MM-dd HH:mm:ss ZZZ
HTTPHeaders
queryItems
T@"NSString",C,N,V_clientIdentifier
clientBundleIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
clientBundleVersion
T@"NSString",C,N,V_clientBundleVersion
itemIdentifiers
T@"NSArray",C,N,V_itemIdentifiers
batchSize
Tq,N,V_batchSize
batchResultsHandler
T@?,C,N,V_batchResultsHandler
imageProfile
T@"NSString",C,N,V_imageProfile
keyProfile
T@"NSString",C,N,V_keyProfile
Tq,N,V_personalizationStyle
platformIdentifier
T@"NSString",C,N,V_platformIdentifier
protocolVersion
T@"NSString",C,N,V_protocolVersion
retryDelay
Td,N,V_retryDelay
returnsLocalEquivalencies
TB,N,V_returnsLocalEquivalencies
timeoutInterval
Td,N,V_timeoutInterval
shouldIgnoreCache
TB,N,V_shouldIgnoreCache
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
message
title
alternateButtonTitle
defaultButtonTitle
otherButtonTitle
allowInCar
displaysActionButtonOnLockScreen
displaysAsTopMost
forcesModalAppearance
alertLevel
Tq,N,V_alertLevel
playlist
album
artist
tvSeason
radioStation
musicVideo
uploadedAudio
uploadedVideo
tvEpisode
movie
libraryTrackId
collectionName
collectionId
composer
contentRatingsBySystem
is-explicit
genreNames
genres
hasLyrics
hasTimeSyncedLyrics
movementCount
movementName
movementNumber
offers
showComposer
formerIds
workName
YYYY-MM-dd
storeServerCalendar
T@"NSCalendar",R
artistStoreAdamID
collectionStoreAdamID
copyrightText
explicitRating
playlistGlobalID
radioStationStringID
shouldShowComposer
formerStoreAdamIDs
artworkInfos
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v16@?0@"ICRequestContext"8
ICMusicSubscriptionStatusRequestOperation.m
%@ _performSubscriptionStatusURLRequestWithRequestContext:... is required to call its completion handler with either a non-nil response, or a non-nil error.
%@%@
v20@?0@"ICMutableMusicSubscriptionStatus"8B16
v24@?0@"ICMusicSubscriptionCarrierBundlingEligibilityResponse"8@"NSError"16
v16@?0@"ICMutableUserIdentityProperties"8
T@"ICMusicSubscriptionStatusRequest",R,C,N,V_request
allowsFuseHeaderEnrichment
TB,N,V_allowsFuseHeaderEnrichment
com.apple.iTunesCloud.ICURLSession.access
com.apple.iTunesCloud.ICURLSession.operation
tmp.%@
Too many redirects (%d)
v24@?0@"NSURLRequest"8@"NSError"16
v36@?0B8q12@"NSString"20@"NSError"28
Download request received HTTP status code %ld
ICURLSession.m
_enqueue request called with nil request
v32@?0q8@"NSString"16@"NSError"24
defaultMaximumConcurrentRequests
maxConcurrentRequests
TQ,R,N,V_maxConcurrentRequests
items
item-id
store-front-id
account-id
match-status
application/x-apple-plist
com.apple.atc
ICInAppMessageEntryResourceIdentifierWebArchive
ICInAppMessageEntryResourceIdentifierTemplate
com.apple.iTunesCloud.ICInAppMessageEntry.accessQueue
[%@:%@, %@, (valid from %@ - %@), download=%d]
applicationMessage
bundleID
shouldDownloadResources
didCacheRequiredResources
resourceCache
T@"ICIAMApplicationMessage",R,N,V_applicationMessage
bundleIdentifier
T@"NSString",R,N,V_bundleIdentifier
T@"NSDictionary",R,N
TB,N,V_shouldDownloadResources
TB,N,V_didCacheRequiredResources
commandType
commandSerialNumber
hasCommandType
Ti,N,V_commandType
hasApplicationMessage
T@"ICIAMApplicationMessage",&,N,V_applicationMessage
hasCommandSerialNumber
Tq,N,V_commandSerialNumber
AMSBag: AMSSnapshotBag failed.
T@"NSDate",R,N
profile
profileVersion
processInfo
T@"AMSProcessInfo",R,C,N
T@"ICStoreRequestContext",R,N,V_requestContext
fairPlaySessionID
TQ,R,N,V_fairPlaySessionID
ICCloudClientErrorDomain
ICCloudClientLibraryUploadErrorDomain
com.apple.iTunesCloud.ICDelegateAccountStoreServiceListener.accessQueue
com.apple.iTunesCloud.ICDelegateAccountStoreServiceListener.callbackQueue
v20@?0@"ICMutableUserIdentityProperties"8B16
T@"NSXPCListenerEndpoint",R,N
dmap.status
dmap.itemid
dmap.longitemid
dmap.dictionary
full-token
full-url
oval-token
oval-url
template-url
supports-layered-image
template-artwork-json
cover-url
cover-artwork-json
com.apple.itunescloudd.isAuthenticatedDidChangeNotification
com.apple.itunescloudd.artworkDownloadsDidCompleteNotification
com.apple.itunescloudd.cloudAddToPlaylistBehaviorDidChangeNotification
com.apple.itunescloudd.enableCloudLibraryFailureTypeChangedNotification
com.apple.itunescloudd.startingInitialImportNotification
main
networkAvailability
cloud
cloudStatusMonitor
applicationMessageSyncResponses
T@"NSMutableArray",&,N,V_applicationMessageSyncResponses
vodkaType
Tq,R,N,V_vodkaType
anonymous
ICRadioPlaybackHistoryStore.m
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore.callback
com.apple.iTunesCloud.ICRadioPlaybackHistoryStore.identity
ICRadioPlaybackHistoryStore
%@_%@.plist
containerDirectoryURL
T@"NSURL",R,C,N,V_containerURL
com.apple.itunescloudd.playactivity
ICPlayActivityControllerEndpointIdentifierJingle
ICPlayActivityControllerEndpointIdentifierPairedDevice
ICPlayActivityControllerDidRecordPlayActivityEventsNotification
ICPlayActivityControllerEndpointRevisionInformationDidChangeNotification
ICPlayActivityControllerUserInfoKeyEndpointIdentifier
ICPlayActivityControllerUserInfoKeyEndRevision
ICPlayActivityControllerUserInfoKeyStartRevision
ICPlayActivityEndpointRevisionInformation
AdditionalPendingRevisions
CurrentRevision
RevisionVersionToken
com.apple.iTunesCloud.ICPlayActivityController.serialQueue
v32@?0@"_ICPlayActivityFlushSessionInformation"8@"NSArray"16@"NSError"24
ShouldDebugLogRecordedEvents
com.apple.PlayActivityFeed
com.apple.iTunesCloud.ICPlayActivityController.debugLogOperationQueue
v32@?0@"NSArray"8Q16@"NSError"24
v32@?0Q8@"NSString"16@"NSError"24
v12@?0i8
writingStyle
TQ,R,N,V_writingStyle
additionalPendingRevisionsIndexSet
T@"NSIndexSet",C,N,V_additionalPendingRevisionsIndexSet
currentRevision
TQ,N,V_currentRevision
revisionVersionToken
T@"NSString",C,N,V_revisionVersionToken
endpointIdentifier
T@"NSString",C,N,V_endpointIdentifier
revisionsIndexSet
T@"NSIndexSet",&,N,V_revisionsIndexSet
sessionToken
TQ,N,V_sessionToken
com.apple.iTunesCloud.ICPlayActivityControllerEndpointRevisionInformationDidChange
remove-push-notification-type-url
notification-type
file-read-data
file-write-data
Tq,N,V_type
supportedSizes
T@"NSArray",C,N,V_supportedSizes
hasMaxSupportedSize
TB,N,V_hasMaxSupportedSize
maxSupportedSize
T{CGSize=dd},N,V_maxSupportedSize
bgColor
textColor1
textColor2
textColor3
textColor4
heic
width
height
hasP3
ICStoreArtworkInfo.m
cropStyle != nil
format != nil
q24@?0@"NSDictionary"8@"NSDictionary"16
{CGSize=dd}
sortedResponseArray
T@"NSArray",C,N,V_sortedResponseArray
sortedSupportedSizesArray
T@"NSArray",C,N,V_sortedSupportedSizesArray
T@"NSURL",R,C,N,V_artworkURL
responseArray
T@"NSArray",R,C,N,V_responseArray
T@"NSDictionary",R,C,N,V_responseDictionary
sizeInfo
T@"ICStoreArtworkSizeInfo",R,N,V_sizeInfo
originalSize
T{CGSize=dd},R,N
stringRepresentation
q24@?0@"ICStoreArtworkInfo"8@"ICStoreArtworkInfo"16
com.apple.iTunesCloud.ICSuzeLeaseSession.calloutQueue
com.apple.iTunesCloud.ICSuzeLeaseSession.operationQueue
v24@?0@"ICSuzeLeaseResponse"8@"NSError"16
Unable to start lease session [no valid DSID for user identity] - userIdentity=%@ - properties=%@
T@"ICSuzeLeaseSessionConfiguration",R,C,N,V_configuration
T@"<ICSuzeLeaseSessionDelegate>",W,N,V_delegate
icloud-backup-enabled
lightweight
playback
streamingRental
T@"NSDictionary",C,N,V_redownloadParameters
requestURLBagKey
T@"NSString",C,N,V_requestURLBagKey
includeKeybagSyncData
TB,N,V_includeKeybagSyncData
includeSubscriptionKeybagSyncData
TB,N,V_includeSubscriptionKeybagSyncData
playbackRequest
TB,N,GisPlaybackRequest,V_playbackRequest
TB,N,GisStreamingRental,V_streamingRental
usePrioritizedURLSession
TB,N,V_usePrioritizedURLSession
accountHistory
lockerHistory
backend
delegationOptions
style
identityStoreStyle
Tq,R,N,V_identityStoreStyle
uniqueIdentifier
Tq,R,N,V_uniqueIdentifier
activeAccountHistory
T@"ICValueHistory",C,N,V_activeAccountHistory
activeLockerAccountHistory
T@"ICValueHistory",C,N,V_activeLockerAccountHistory
T@"<ICUserIdentityStoreBackend>",C,N,V_backend
delegateAccountStoreOptions
T@"ICDelegateAccountStoreOptions",C,N,V_delegateAccountStoreOptions
applicationMessageIdentifier
eventParameters
hasApplicationMessageIdentifier
T@"NSString",&,N,V_applicationMessageIdentifier
T@"NSMutableArray",&,N,V_eventParameters
T@"NSString",C,N,V_iCloudPersonID
URLBag
T@"ICURLBag",&,N,V_URLBag
T@"NSNumber",C,N,V_DSID
T@"NSString",C,N,V_storefrontIdentifier
delegatedDSID
T@"NSNumber",C,N,V_delegatedDSID
delegatedStorefrontIdentifier
T@"NSString",C,N,V_delegatedStorefrontIdentifier
T@"ICDelegateToken",C,N,V_delegateToken
delegatedURLBag
T@"ICURLBag",&,N,V_delegatedURLBag
dpInfo
pinf
sinf
sinf2
responseSinfDictionary
T@"NSDictionary",R,C,N,V_responseSinfDictionary
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
com.apple.itunescloudd
ic_isCloudDaemon
clientInfo
developerToken
options
Missing developer token for user token request.
Missing requesting bundle identifier for user token request.
Missing requesting bundle version for user token request.
assertion
tcc-acceptance-date
error_description
This is most likely due to an expired or otherwise invalid developer token
Failed to fetch music user token with unauthorized (%ld) status code. %@.
music_token
%@ in response is of unexpected type.
playerInfoContextRequestToken
playerInfoContextRequestTokens
T@"NSMutableArray",&,N,V_playerInfoContextRequestTokens
Beta
Carrier
Internal
Desense
Lite Internal
Vendor
NonUI
Restore
ProductType
ReleaseType
HardwarePlatform
%012x
UniqueDeviceID
UserAssignedDeviceName
com.apple.iTunesCloud.ICDeviceInfo.deviceNameUpdateQueue
v24@?0^{__CFString=}8^{__CFDictionary=}16
main-screen-width
main-screen-height
cellular-data
CellularTelephonyCapability
wi-fi
wapi
DeviceSupports720p
DeviceSupports1080p
main-screen-class
System/Library/CoreServices/SystemVersion.plist
watchOS
InternalBuild
AppleLocale
/bfa1LxXd7G1WqHujpjsdA
DeviceClassNumber
currentDeviceInfo
T@"ICDeviceInfo",R
defaultInfo
deviceModel
rawDeviceModel
hardwarePlatform
deviceFairPlayGUIDData
serialNumber
macAddress
macAddressData
mainScreenSize
hasCellularDataCapability
hasTelephonyCapability
hasWiFiCapability
hasWAPICapability
has720pCapability
has1080pCapability
screenClass
Ti,R,N
deviceClass
isIPhone
isAppleTV
isIPad
isIPod
isWatch
isAudioAccessory
isMac
productVersion
productPlatform
buildVersion
internalBuild
TB,R,N,GisInternalBuild
systemReleaseType
fairPlayDeviceType
TI,R,N
currentLocale
supportsSideLoadedMediaContent
supportsMusicStreaming
IOBuiltin
IOService
IOMACAddress
-init is not supported, use initWithPlayActivityController
ICFlushPlayActivityEventsOperation.m
initWithPlayActivityController called with nil playActivityController
com.apple.itunesstored.ICPlayActivityFeedFlushOperation.accessQueue
com.apple.iTunesCloud.ICFlushPlayActivityEventsOperation.serialQueue
v28@?0@"NSArray"8Q16B24
v16@?0Q8
playActivityController
T@"ICPlayActivityController",R,N,V_playActivityController
dataType
comparisonType
triggerValue
triggerConditionType
hasDataType
Ti,N,V_dataType
hasComparisonType
Ti,N,V_comparisonType
hasTriggerValue
T@"NSString",&,N,V_triggerValue
hasTriggerConditionType
Ti,N,V_triggerConditionType
hasKind
Ti,N,V_kind
hasBundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
Boolean
String
Integer
Equal
NotEqual
LessThan
LessThanOrEqualTo
GreaterThan
GreaterThanOrEqualTo
Countable
Value
Event
ContextProperty
hasURL
T@"NSString",&,N,V_uRL
hasWidth
TI,N,V_width
hasHeight
TI,N,V_height
com.apple.iTunesCloud.ICInAppMessageMetadataEntry.accessQueue
base-url
like-event-url
continue-listening
max-queue-size-in-request
max-upcoming-tracks-to-maintain
max-queue-size-for-autoplay
num-kbsyncs-to-include-for-getTracks
max-protocol-version
header-actions
getTracksDPInfoKBSyncCount
maxSupportedProtocolVersion
continueListeningAvailable
TB,R,N,GisContinueListeningAvailable
continueListeningMaxQueueSizeInRequest
continueListeningMaxUpcomingTracksSizeToMaintain
continueListeningLoadStationThreshold
ICAgeVerifier %p - verificationExpirationDate: %@ - status: %@
Tq,N,V_status
explicitContentAllowed
TB,R,N,GisExplicitContentAllowed
verificationExpirationDate
T@"NSDate",R,N,V_verificationExpirationDate
Age verification status unknown
Age verification not required
Age verification required
Age verification completed and successful
PRAGMA journal_mode=WAL
PRAGMA cache_size=%ld
cacheSize
Tq,N,V_cacheSize
TB,N,GisReadOnly,V_readOnly
results
album-id
allStorePlatformMetadata
-----------------------------------------
PlayActivityEvents.log
playActivityEvents
T@"NSArray",C,N,V_playActivityEvents
com.apple.itunescloud.ICURLRequest.observer
[%@/%@]
AppleLanguages
ICURLRequest.m
There is no retry count for ICURLResponseHandlingRetryReasonNone.
progress
T@"NSProgress",R
urlRequest
T@"NSURLRequest",R,N,V_urlRequest
task
T@"NSURLSessionTask",&,N,V_task
waitSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_waitSemaphore
currentURLRequest
T@"NSURLRequest",&,N,V_currentURLRequest
urlResponse
T@"NSURLResponse",&,N,V_urlResponse
responseData
T@"NSMutableData",&,N,V_responseData
responseDataURL
T@"NSURL",&,N,V_responseDataURL
T@"NSError",&,N,V_error
avDownloadOptions
T@"NSDictionary",&,N,SsetAVDownloadOptions:,V_avDownloadOptions
handlingType
Tq,N,V_handlingType
retryReason
T@"NSString",&,N,V_retryReason
retryCount
startTime
Td,N,V_startTime
Td,N,V_lastUpdateTime
lastProgressUpdateTime
Td,N,V_lastProgressUpdateTime
performanceMetrics
T@"ICURLPerformanceMetrics",&,N,V_performanceMetrics
completionHandler
T@?,C,N,V_completionHandler
T@"NSProgress",&,N,V_progress
prioritize
TB,N,V_prioritize
cancelOnHTTPErrors
TB,N,V_cancelOnHTTPErrors
maxRetryCount
TQ,N
TQ,N,V_redirectCount
requestState
Tq,N,V_requestState
T@"NSData",R,C,N,V_resumeData
T@"ICURLResponseHandler",&,N,V_responseHandler
v24@?0@"ACAccountType"8@"NSError"16
v32@?0@"ACAccount"8Q16^B24
ACAccountStore+ICAccountStoreAdditions.m
storeAccountID
homeUserID
ic_allStoreAccounts
ic_activeStoreAccount
T@"ACAccount",&,N,Sic_setActiveStoreAccount:
ic_activeLockerAccount
T@"ACAccount",&,N,Sic_setActiveLockerAccount:
ic_primaryAppleAccount
T@"ACAccount",R,N
ic_sharedAccountStore
T@"ACAccountStore",R
playerDelegateInfoToken
playerDelegateInfoTokens
T@"NSMutableArray",&,N,V_playerDelegateInfoTokens
triggerName
hasTriggerName
T@"NSString",&,N,V_triggerName
ICCloudItemIDListItemIDs
ICCloudItemIDListIDTypes
<%@: %p Item ID Count = %lu>
activeDSID
lockerDSID
localStoreAccountProperties
defaultActiveAccountDSID
T@"NSNumber",C,N
defaultActiveLockerAccountDSID
defaultStorefrontIdentifier
getPushNotificationSettings
setPushNotificationSettings
serviceId=com.apple.Music
application/json; charset=UTF-8
pageId
pageType
pageDetails
targetId
targetType
actionURL
actionDetails
eventType
pageUrl
impression
hasPageId
T@"NSString",&,N,V_pageId
hasPageType
Ti,N,V_pageType
T@"NSMutableArray",&,N,V_pageDetails
hasTargetId
T@"NSString",&,N,V_targetId
hasTargetType
Ti,N,V_targetType
hasActionType
Ti,N,V_actionType
hasActionURL
T@"NSString",&,N,V_actionURL
T@"NSMutableArray",&,N,V_actionDetails
hasEventType
T@"NSString",&,N,V_eventType
hasPageUrl
T@"NSString",&,N,V_pageUrl
hasImpression
T@"ICIAMImpressionNode",&,N,V_impression
Button
Slider
Close
Navigate
Swipe
Select
adamID
T@"NSNumber",R,C,N,V_adamID
T@"NSNumber",R,C,N,V_accountID
matchStatus
T@"NSNumber",R,C,N,V_matchStatus
T@"NSString",R,C,N,V_title
storeFrontID
T@"NSString",R,C,N,V_storeFrontID
T@"NSString",R,C,N,V_mediaKind
T@"NSString",R,C,N,V_flavor
com.apple.ICDelegationConsumerService.accessQueue
v52@?0@"ICDelegationConsumerServiceSession"8@"ICUserIdentity"16@"ICDelegateToken"24@"NSString"32@"NSError"40B48
Td,R,N,V_timeoutInterval
library-album
album-name
albumName
T@"NSString",C,N,V_albumName
T@"NSURL",R,C,N,V_url
T@"NSString",R,C,N,V_bundleIdentifier
NoDSID
ICAgeVerificationState %p - explicit content allowed: %u - status: %@ - treatment: %ld - url: %@ - verifier: %@ - error: %@
ICAgeVerificationState.m
_status != ICAgeVerificationStatusUnknown
ICAgeVerificationStateKeyDSID
ICAgeVerificationStateKeyStatus
ICAgeVerificationStateKeyTreatment
ICAgeVerificationStateKeyVerificationURL
ICAgeVerificationStateKeyAgeVerifierExpirationDate
[dictionaryRepresentation[ICAgeVerificationStateKeyDSID] isKindOfClass:[NSString class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyStatus] isKindOfClass:[NSNumber class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyTreatment] isKindOfClass:[NSNumber class]]
[dictionaryRepresentation[ICAgeVerificationStateKeyVerificationURL] isKindOfClass:[NSString class]] || !dictionaryRepresentation[ICAgeVerificationStateKeyVerificationURL]
[dictionaryRepresentation[ICAgeVerificationStateKeyAgeVerifierExpirationDate] isKindOfClass:[NSDate class]] || !dictionaryRepresentation[ICAgeVerificationStateKeyAgeVerifierExpirationDate]
ageVerifier
T@"ICAgeVerifier",R,C,N,V_ageVerifier
dynamic
TB,R,N,GisDynamic
treatment
Tq,R,N,V_treatment
Tq,R,N,V_status
verificationURL
T@"NSURL",R,C,N,V_verificationURL
T@"ICUserIdentity",R,N,V_userIdentity
v16@?0@?<v@?>8
carrier
IMEI
responseCode
error-domain
error-code
error-title
error-message
error-underlying
ValidateMobile
SOAPAction
com.apple.iTunesCloud.ICMusicSubscriptionCarrierBundlingEligibilityOperation
responseMessage
sessionId
deepLink
TB,N,GisDeepLink,V_deepLink
v40@?0@8Q16q24^B32
v32@?0@"_ICValueHistoryItem"8Q16^B24
timestamp
TQ,R,N,V_timestamp
T@,R,N,V_value
trigger
interval
notification
hasTrigger
Ti,N,V_trigger
hasDate
Td,N,V_date
hasInterval
Td,N,V_interval
hasNotification
T@"NSString",&,N,V_notification
Calendar
TimeInterval
playerInfoContextRequestData
T@"NSData",R,C,N,V_playerInfoContextRequestData
iTunesCloud
iTunesCloud-Oversize
CloudClient
CloudClient-Oversize
Delegation
Delegation-Oversize
AgeVerification
ICLogSubscription
ICLogSubscription-Oversize
AccountNotifications
com.apple.amp.iTunesCloud
stream-protocol
stream-url
stream-key-cert-url
stream-key-server-url
is-itunes-stream
SHOUTCAST
streamProtocol
streamURL
keyCertificateURL
keyServerURL
iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
com.apple.siri.client.state.DynamiteClientState%s
.siri_data_changed
allowsHandlingNonAuthenticationDialogs
shouldRecordLastAuthenticationDialogResponseTime
sagaId
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
TB,N,V_allowsHandlingNonAuthenticationDialogs
TB,N,V_shouldRecordLastAuthenticationDialogResponseTime
com.apple.amp.iTunesCloud.ICDeviceSetupStatusMonitor.queue
com.apple.amp.iTunesCloud.ICDeviceSetupStatusMonitor.callBackQueue
BYSetupAssistantLaunchedDarwinNotification
SetupAssistant
BYSetupAssistantFinishedDarwinNotification
BYSetupAssistantNeedsToRun
T@"ICDeviceSetupStatusMonitor",R
setupAssistantRunning
TB,R,N,GisSetupAssistantRunning
deviceSetupComplete
TB,R,N,GisDeviceSetupComplete
authorized
cancel-purchase-batch
dialog
download-queue-item-count
jingleAction
songList
serverError
T@"NSError",R,C,N
T@"ICStoreDialogResponse",R,C,N
shouldCancelPurchaseBatch
downloadQueueItemCount
subscriptionKeyBagData
syncCommands
hasBundleID
T@"NSString",&,N,V_bundleID
T@"NSMutableArray",&,N,V_syncCommands
repeat_play_mode
shuffle_play_mode
auto_play_mode
hasRepeatPlayMode
repeatPlayMode
Ti,N,V_repeatPlayMode
hasShufflePlayMode
shufflePlayMode
Ti,N,V_shufflePlayMode
hasAutoPlayMode
autoPlayMode
Ti,N,V_autoPlayMode
REPEAT_UNKNOWN
REPEAT_OFF
REPEAT_ONE
REPEAT_ALL
SHUFFLE_UNKNOWN
SHUFFLE_OFF
SHUFFLE_ON
AUTO_UNKNOWN
AUTO_OFF
AUTO_ON
AUTO_ON_CONTENT_UNSUPPORTED
This action requires authentication to proceed
v24@?0@"AMSAuthenticateResult"8@"NSError"16
com.apple.iTunesCloud.ICDispatchOnce
<%@: %p [%@/%@]>
authenticationProviderClassName
authenticationProvider
networkConstraints
ICRequestContext.m
 (Macintosh; OS X %@)
 AppleWebKit/%@
 %@/%@
 AppleTV/%@
 model/%@
 hwp/%@
 build/%@
dt:%d
 (%@)
Frameworks
WebKit.framework
T@"ICClientInfo",R,C,N,V_clientInfo
deviceInfo
T@"ICDeviceInfo",R,N,V_deviceInfo
userAgent
T@"ICURLResponseAuthenticationProvider",R,N,V_authenticationProvider
T@"ICNetworkConstraints",R,C,N,V_networkConstraints
inAppMessagesReportEvent
inAppMessagesSerialCheck
inAppMessagesSync
inAppMessagesResourceDomain
inAppMessagesPollingIntervalSeconds
reportEventURL
T@"NSURL",R,N
serialCheckURL
syncURL
resourceDomainURL
syncPollingInterval
v24@?0@"ICMusicAccountNotificationsSettingsResponse"8@"NSError"16
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
T@"ICMusicAccountNotificationsSettingsManager",R
subscription
promo-content
after
before
drm-type
asset-url
is-skippable
like-value
adam-id
v24@?0@"NSString"8@"NSString"16
storePlatformMetadata
T@"ICStorePlatformMetadata",R,C,N
serverTrackInfo
radioStreamAssets
likeState
skippable
TB,R,N,GisSkippable
trackType
hasStartTime
beforePromoContentTrack
T@"ICRadioStationTrack",R,N
afterPromoContentTrack
parentTrack
T@"ICRadioStationTrack",R,N,V_parentTrack
com.apple.iTunesCloud.ICDelegationServiceConnection.accessQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.calloutQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.streamReaderQueue
com.apple.iTunesCloud.ICDelegationServiceConnection.streamWriterQueue
v16@?0@"NSData"8
T@"<ICDelegationServiceConnectionDelegate>",W,N
connectionRole
Tq,R,N,V_connectionRole
T@"ICDelegationServiceSecuritySettings",R,N,V_securitySettings
T@"ICPBDGSRequest",R,N,V_request
T@?,R,C,N,V_responseHandler
preferences
T@"NSMutableArray",&,N,V_preferences
albumAdamID
T@"NSString",R,C,N,V_playlistGlobalID
Tq,R,N,V_albumAdamID
displayText
requiresDelegate
actionParameters
clickEvent
messageRemovalPolicy
hasDisplayText
T@"NSString",&,N,V_displayText
hasRequiresDelegate
TB,N,V_requiresDelegate
T@"NSMutableArray",&,N,V_actionParameters
hasClickEvent
T@"ICIAMMetricEvent",&,N,V_clickEvent
hasMessageRemovalPolicy
Ti,N,V_messageRemovalPolicy
None
Local
Global
shouldPreventLeaseAcquisition
TB,N,V_shouldPreventLeaseAcquisition
shouldRequireLeaseAcquisition
TB,N,V_shouldRequireLeaseAcquisition
X-Apple-Tz
X-Apple-I-Client-Time
X-Apple-Connection-Type
X-Apple-Cuid
X-Apple-Issuing-Process
X-Apple-Requesting-Process
X-Apple-NSURLCachePolicy
X-Apple-Store-Front
iCloud-DSID
X-Dsid
X-Guid
X-WHA-Token
X-Apple-Set-Cookie
X-Apple-Set-User-Cookie
X-Apple-AMD
X-Apple-AMD-M
X-Apple-AMD-S
X-Apple-AMD-Action
X-Apple-AMD-Data
X-Apple-MD
X-Apple-MD-M
X-Apple-MD-S
X-Apple-MD-Action
X-Apple-MD-Data
X-Apple-ActionSignature
X-Set-Apple-Store-Front
x-apple-jingle-correlation-key
X-Apple-Device-Model
X-Enqueuer-DSID
X-Request-TimeStamp
x-apple-use-amd
X-Apple-Requesting-Bundle-Id
X-Apple-Requesting-Bundle-Version
X-Apple-Request-Store-Front
X-Apple-Private-Listening
X-Apple-Enqueuer-Private-Listening
X-Apple-Enqueuer-Store-Front
X-Apple-Allow-Auth-Types
X-Mme-Device-Id
X-Mme-Client-Application
X-Apple-Application-Site
apple-timing-app
X-Cache
ICStoreURLRequest.m
[requestContext isKindOfClass:[ICStoreRequestContext class]]
[requestContext=%@]
com.apple.iTunesCloud.ICStoreURLRequest.serialQueue
v36@?0@"ICUserCredentialRequest"8@"ICUserCredentialResponse"16@"NSError"24B32
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
itfe
.apple.com
WiFi
NSURLRequestReloadIgnoringCacheData
NSURLRequestReloadIgnoringLocalAndRemoteCacheData
NSURLRequestReturnCacheDataElseLoad
NSURLRequestReloadRevalidatingCacheData
NSURLRequestReturnCacheDataDontLoad
NSURLRequestUseProtocolCachePolicy
currentConnectionTypeHeader
T@"ICStoreRequestContext",R,C,N
anisetteVersion
Tq,N,V_anisetteVersion
shouldUseMescalSigning
TB,N,V_shouldUseMescalSigning
shouldParseBodyData
TB,N,V_shouldParseBodyData
shouldRequireURLBag
TB,N,V_shouldRequireURLBag
machineDataSyncState
T@"NSString",C,N,V_machineDataSyncState
additionalHTTPCookies
T@"NSDictionary",C,N,V_additionalHTTPCookies
additionalQueryItems
T@"NSArray",C,N,V_additionalQueryItems
JSSignConfiguration
T@"ICJSSignConfiguration",C,N,V_JSSignConfiguration
com.apple.iTunesCloud.ICDelegateAccountStoreXPCWriter.accessQueue
com.apple.iTunesCloud.ICDelegateAccountStoreXPCWriter.callbackQueue
v16@?0@"NSXPCConnection"8
externalChangeHandler
T@?,C,N,V_externalChangeHandler
; storeRequestContext = %@
; allowsFallbackToExpiredStatus = YES
; allowsFallbackToStatusNeedingReload = YES
never
once
; carrierBundleProvisioningStyle = %@
; reason = %@
; shouldIgnoreCache = YES
; shouldReturnLastKnownStatusOnly = YES
; shouldBypassEnforcementOfPrivacyAcknowledgement = YES
; requestIdentifier = %@
allowsFallbackToExpiredStatus
allowsFallbackToStatusNeedingReload
carrierBundleProvisioningStyle
reason
shouldReturnLastKnownStatusOnly
shouldBypassEnforcementOfPrivacyAcknowledgement
requestIdentifier
TB,N,V_shouldBypassEnforcementOfPrivacyAcknowledgement
Tq,N,V_reason
TB,N,V_allowsFallbackToExpiredStatus
TB,N,V_allowsFallbackToStatusNeedingReload
TB,N,V_shouldReturnLastKnownStatusOnly
Tq,N,V_carrierBundleProvisioningStyle
T@"NSUUID",R,N,V_requestIdentifier
revision_id
store_account_id
event_data
events_current_revision
events_revision_version_token
%llu
unknown-revision-version
INSERT OR REPLACE INTO events (pid, revision_id, store_account_id, event_data) VALUES (?, ?, ?, ?)
v16@?0@"<ICSQLiteBinding>"8
DELETE FROM %@ WHERE %@ <= ?;
Q16@?0Q8
Library
play_activity.sqlitedb
-wal
-shm
properties
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER PRIMARY KEY, %@ INTEGER, %@ INTEGER, %@ BLOB);
CREATE TABLE IF NOT EXISTS %@ (%@ TEXT PRIMARY KEY, %@ TEXT);
PRAGMA legacy_file_format = 0;
PRAGMA journal_mode=WAL;
DROP TABLE IF EXISTS %@;
INSERT OR IGNORE INTO %@ (%@, %@) VALUES ('%@', '%@');
SELECT 
 FROM %@ WHERE (
(%@ == %llu) AND (
%@ BETWEEN %llu AND %llu
 OR %@ BETWEEN %lu AND %lu
v32@?0{_NSRange=QQ}8^B24
) ORDER BY 
%@,%@ ASC;
%@ ASC;
v32@?0@"ICSQLiteRow"8@"NSError"16^B24
v24@?0@"ICSQLiteQueryResults"8@"NSError"16
SELECT DISTINCT %@ FROM %@ WHERE %@ IN (
%llu%@
ICPlayActivityTable.m
key cannot be nil
INSERT OR REPLACE INTO %@ (%@, %@) VALUES ('%@', '%@');
DELETE FROM %@ WHERE %@ = '%@';
SELECT %@ FROM %@ WHERE %@ = '%@';
currentEventsRevision
eventsRevisionVersionToken
accountUniqueIdentifier
TQ,N,V_accountUniqueIdentifier
_ICPlayActivityEventCoderDataRepresentation
<%@ %p persistentID:%llu
 containerID:'%@'
 containerIDs:'%@'
 containerType:%td
 deviceName:'%@'
 endReasonType:%td
 enqueuerProperties:'%@'
 eventDate:%@
 eventTimeZone:%@
 externalID:'%@'
 featureName:'%@'
 householdID:'%@'
 systemReleaseType: %li
 itemDuration:%f itemStartTime:%f itemEndTime:%f
 itemType:%td
 itemIDs:'%@'
 mediaType:%td
 offline:%@
false
 personalizedContainerID:'%@'
 hasRecommendationData:true
 privateListeningEnabled: %@
 SBEnabled:%@
 siriInitiated: %@
 sourceType:%td
 storeAccountID:%llu
 storeFrontID:%@
 storeID:'%@'
 requestingBundleIdentifier:'%@'
 requestingBundleVersion:'%@'
 timedMetadata(length):%td
 hasTrackInfo:true
 buildFeatures:%@
 autoPlayMode:%td
 repeatPlayMode:%td
 shufflePlayMode:%td
Tq,R,N,V_version
TQ,R,N,V_autoPlayMode
buildFeatures
T@"NSArray",R,C,N,V_buildFeatures
T@"NSString",R,C,N,V_buildVersion
containerIDs
T@"ICPlayActivityEventContainerIDs",R,C,N,V_containerIDs
containerType
TQ,R,N,V_containerType
dataRepresentation
deviceName
T@"NSString",R,C,N,V_deviceName
displayType
TQ,R,N,V_displayType
endReasonType
TQ,R,N,V_endReasonType
enqueuerProperties
T@"ICPlayActivityEnqueuerProperties",R,C,N,V_enqueuerProperties
eventDate
T@"NSDate",R,C,N,V_eventDate
TQ,R,N,V_eventType
eventTimeZone
T@"NSTimeZone",R,C,N,V_eventTimeZone
featureName
T@"NSString",R,C,N,V_featureName
householdID
T@"NSString",R,C,N,V_householdID
itemIDs
T@"ICPlayActivityEventItemIDs",R,C,N,V_itemIDs
itemDuration
Td,R,N,V_itemDuration
itemEndTime
Td,R,N,V_itemEndTime
itemStartTime
Td,R,N,V_itemStartTime
itemType
TQ,R,N,V_itemType
lyricsDisplayedCharacterCount
TQ,R,N,V_lyricsDisplayedCharacterCount
lyricsLanguage
T@"NSString",R,C,N,V_lyricsLanguage
mediaType
TQ,R,N,V_mediaType
TB,R,N,GisOffline,V_offline
persistentID
T@"NSNumber",R,C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
reasonHintType
TQ,R,N,V_reasonHintType
recommendationData
T@"NSData",R,C,N,V_recommendationData
TQ,R,N,V_repeatPlayMode
requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleIdentifier
requestingBundleVersion
T@"NSString",R,C,N,V_requestingBundleVersion
SBEnabled
TB,R,N,GisSBEnabled,V_SBEnabled
TQ,R,N,V_shufflePlayMode
siriInitiated
T@"NSNumber",R,C,N,GisSiriInitiated,V_siriInitiated
sourceType
TQ,R,N,V_sourceType
TQ,R,N,V_storeAccountID
Tq,R,N,V_systemReleaseType
timedMetadata
T@"NSData",R,C,N,V_timedMetadata
trackInfo
T@"NSData",R,C,N,V_trackInfo
T@"NSString",R,C,N,V_containerID
externalID
T@"NSString",R,C,N,V_externalID
personalizedContainerID
T@"NSString",R,C,N,V_personalizedContainerID
storeID
T@"NSString",R,C,N,V_storeID
TQ,D,N
T@"ICPlayActivityEventContainerIDs",C,D,N
T@"ICPlayActivityEnqueuerProperties",C,D,N
T@"NSTimeZone",C,D,N
T@"ICPlayActivityEventItemIDs",C,D,N
Td,D,N
TB,D,N,GisOffline
T@"NSNumber",C,D,N,GisPrivateListeningEnabled
T@"NSData",C,D,N
TB,D,N,GisSBEnabled
T@"NSNumber",C,D,N,GisSiriInitiated
TB,D,N,GisInternalBuild
; DSID = %@
; phoneNumber = "%@"
; storefrontIdentifier = "%@"
ICMusicSubscriptionStatusCacheKey.m
Cannot set a nil DSID on an instance of %@
Cannot set a nil phoneNumber on an instance of %@
Cannot set a nil storefrontIdentifier on an instance of %@
T@"NSString",C,N,V_phoneNumber
subtitle
body
images
messageActions
contentParameters
pageEvent
closeClickEvent
cardClickEvent
hasTitle
T@"NSString",&,N,V_title
hasSubtitle
T@"NSString",&,N,V_subtitle
hasBody
T@"NSString",&,N,V_body
T@"NSMutableArray",&,N,V_images
T@"NSMutableArray",&,N,V_messageActions
T@"NSMutableArray",&,N,V_contentParameters
hasPageEvent
T@"ICIAMMetricEvent",&,N,V_pageEvent
hasCloseClickEvent
T@"ICIAMMetricEvent",&,N,V_closeClickEvent
hasCardClickEvent
T@"ICIAMMetricEvent",&,N,V_cardClickEvent
v12@?0f8
; statusCode = %ld
; serverCorrelationKey = "%@"
; serverEnvironment = "%@"
serverCorrelationKey
T@"NSString",R,C,N,V_serverCorrelationKey
serverEnvironment
T@"NSString",R,C,N,V_serverEnvironment
remoteRequestOperationClassName
remoteRequestOperation
T@"ICRemoteRequestOperation",R,N,V_remoteRequestOperation
verificationRequest
T@"ICUserVerificationRequest",R,C,N,V_verificationRequest
numberOfColumns
ICRadioGetTracksRequest.m
Request context must not be nil.
getTracks
additionalRequestParameters
T@"NSDictionary",C,N,V_additionalRequestParameters
allowsExplicitContent
TB,N,V_allowsExplicitContent
playbackContext
T@"ICRadioPlaybackHistory",C,N,V_playbackContext
preservingCurrentlyPlayingItem
TB,N,GisPreservingCurrentlyPlayingItem,V_preservingCurrentlyPlayingItem
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
delegatedPrivateListeningEnabled
T@"NSNumber",C,N,GisDelegatedPrivateListeningEnabled,V_delegatedPrivateListeningEnabled
reasonType
Tq,N,V_reasonType
shouldResponseContainStationMetadata
TB,N,V_shouldResponseContainStationMetadata
requestedTrackCount
Tq,N,V_requestedTrackCount
stationHash
T@"NSString",C,N,V_stationHash
Tq,N,V_stationID
stationStringID
T@"NSString",C,N,V_stationStringID
stationURL
T@"NSURL",C,N,V_stationURL
seedContentReference
T@"ICRadioContentReference",C,N,V_seedContentReference
nowPlayingContentReference
T@"ICRadioContentReference",C,N,V_nowPlayingContentReference
queueContentReferences
T@"NSArray",C,N,V_queueContentReferences
ruleOperator
subrules
triggerCondition
triggerEventName
requiredApplicationContextBundleIdentifier
hasType
Ti,N,V_type
hasRuleOperator
Ti,N,V_ruleOperator
T@"NSMutableArray",&,N,V_subrules
hasTriggerCondition
T@"ICIAMTriggerCondition",&,N,V_triggerCondition
hasTriggerEventName
T@"NSString",&,N,V_triggerEventName
hasRequiredApplicationContextBundleIdentifier
T@"NSString",&,N,V_requiredApplicationContextBundleIdentifier
Simple
Compound
purchase
mzbookkeeper
com.apple.itunescloud.RecentlyPlayedDidChange
v24@?0@"NSXPCListenerEndpoint"8@"NSError"16
com.apple.itunescloudd.xpc
com.apple.iTunesCloud.ICSuzeLeaseRequest.calloutQueue
media-kind
client-data
clientData
T@"NSData",R,C,N,V_clientData
T@"NSString",R,C,N,V_leaseID
Tq,R,N,V_mediaType
Tq,R,N,V_requestType
podcast
audio-book
booklet
tv-show
timeZoneName
hasBuildVersion
T@"NSString",&,N,V_buildVersion
hasDeviceGUID
T@"NSString",&,N,V_deviceGUID
hasDeviceName
T@"NSString",&,N,V_deviceName
hasTimeZoneName
T@"NSString",&,N,V_timeZoneName
hasSystemReleaseType
Ti,N,V_systemReleaseType
hasSBEnabled
sBEnabled
TB,N,V_sBEnabled
hasStoreAccountID
TQ,N,V_storeAccountID
hasStoreFrontID
T@"NSString",&,N,V_storeFrontID
hasPrivateListeningEnabled
TB,N,V_privateListeningEnabled
CUSTOMER
CARRIER
DEVELOPER
INTERNAL
subscriptionAdamID
purchasedAdamID
radioAdamID
lyricsID
equivalencySourceAdamID
containerAdamID
globalPlaylistID
cloudAlbumID
cloudPlaylistID
playlistVersionHash
eventDateTimestamp
eventTimeZoneName
characterDisplayedCount
lyricLanguage
play_mode
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
eventSecondsFromGMT
Ti,N,V_eventType
hasReasonHintType
Ti,N,V_reasonHintType
hasSubscriptionAdamID
Tq,N,V_subscriptionAdamID
hasPurchasedAdamID
Tq,N,V_purchasedAdamID
hasRadioAdamID
Tq,N,V_radioAdamID
hasItemCloudID
TQ,N,V_itemCloudID
hasLyricsID
T@"NSString",&,N,V_lyricsID
hasEquivalencySourceAdamID
Tq,N,V_equivalencySourceAdamID
hasContainerAdamID
Tq,N,V_containerAdamID
hasGlobalPlaylistID
T@"NSString",&,N,V_globalPlaylistID
hasStationHash
T@"NSString",&,N,V_stationHash
hasStationStringID
T@"NSString",&,N,V_stationStringID
hasStationID
hasCloudAlbumID
T@"NSString",&,N,V_cloudAlbumID
hasCloudPlaylistID
TQ,N,V_cloudPlaylistID
hasPlaylistVersionHash
T@"NSString",&,N,V_playlistVersionHash
hasContainerType
Ti,N,V_containerType
hasEndReasonType
Ti,N,V_endReasonType
hasEventDateTimestamp
Td,N,V_eventDateTimestamp
hasFeatureName
T@"NSString",&,N,V_featureName
hasItemDuration
Td,N,V_itemDuration
hasItemEndTime
Td,N,V_itemEndTime
hasItemStartTime
Td,N,V_itemStartTime
hasItemType
Ti,N,V_itemType
hasMediaType
Ti,N,V_mediaType
hasOffline
TB,N,V_offline
hasPersistentID
Tq,N,V_persistentID
hasSourceType
Ti,N,V_sourceType
hasTimedMetadata
T@"NSData",&,N,V_timedMetadata
hasTrackInfo
T@"NSData",&,N,V_trackInfo
hasRecommendationData
T@"NSData",&,N,V_recommendationData
hasRequestingBundleIdentifier
T@"NSString",&,N,V_requestingBundleIdentifier
hasRequestingBundleVersion
T@"NSString",&,N,V_requestingBundleVersion
hasEnqueuerProperties
T@"ICPAPlayActivityEnqueuerProperties",&,N,V_enqueuerProperties
hasHouseholdID
T@"NSString",&,N,V_householdID
hasSiriInitiated
TB,N,V_siriInitiated
hasEventTimeZoneName
T@"NSString",&,N,V_eventTimeZoneName
hasDisplayType
Ti,N,V_displayType
hasCharacterDisplayedCount
Tq,N,V_characterDisplayedCount
hasLyricLanguage
T@"NSString",&,N,V_lyricLanguage
T@"NSMutableArray",&,N,V_buildFeatures
hasPlayMode
playMode
T@"ICPAPlayModeDictionary",&,N,V_playMode
hasContainerID
T@"NSString",&,N,V_containerID
hasPersonalizedContainerID
T@"NSString",&,N,V_personalizedContainerID
hasStoreID
T@"NSString",&,N,V_storeID
hasExternalID
T@"NSString",&,N,V_externalID
hasTvShowPurchasedAdamID
Tq,N,V_tvShowPurchasedAdamID
hasTvShowSubscriptionAdamID
Tq,N,V_tvShowSubscriptionAdamID
hasInternalBuild
TB,N,V_internalBuild
hasEventSecondsFromGMT
Td,N,V_eventSecondsFromGMT
PlayEnd
PlayStart
LyricDisplay
ContainerChanged
RadioStation
Playlist
Album
Artist
NotApplicable
Other
SkipBackward
SkipForward
QueueChange
ManualPause
Interruption
InactivityPause
InactivitySessionEnd
NaturalTransition
AssetLoadFailure
ScrubBegin
ScrubEnd
QuickPlay
iTunesStoreContent
AudioClip
Stream
TimedMetadataPing
UploadedContent
AggregateNonCatalogPlayTime
Movie
TVEpisode
Audio
Video
Device
PairedWatch
RemoteControl
NoDisplayType
Static
LineByLine
WordByWord
<%@ %p
 adamID: %lli
 cloudAlbumID: %@
 cloudPlaylistID: %llu
 globalPlaylistID: %@
 playlistVersionHash: %@
 stationHash: %@
 stationStringID: %@
 stationID: %lli
ICPlayActivityEventContainerIDsAdamID
ICPlayActivityEventContainerIDsCloudAlbumID
ICPlayActivityEventContainerIDsCloudPlaylistID
ICPlayActivityEventContainerIDsGlobalPlaylistID
ICPlayActivityEventContainerIDsPlaylistVersionHash
ICPlayActivityEventContainerIDsStationHash
ICPlayActivityEventContainerIDsStationStringID
ICPlayActivityEventContainerIDsStationID
Tq,R,N,V_adamID
T@"NSString",R,C,N,V_cloudAlbumID
TQ,R,N,V_cloudPlaylistID
T@"NSString",R,C,N,V_globalPlaylistID
T@"NSString",R,C,N,V_playlistVersionHash
T@"NSString",R,C,N,V_stationHash
T@"NSString",R,C,N,V_stationStringID
Tq,R,N,V_stationID
<default>
com.apple.iTunesCloud.ICDelegationServicePairingSession.accessSerialQueue
com.apple.iTunesCloud.ICDelegationServicePairingSession.calloutQueue
DelegationService-Read-Encryption-Key
DelegationService-Write-Encryption-Key
DelegationService-Salt
T@"<ICDelegationServicePairingSessionDelegate>",W,N,V_delegate
role
Tq,R,N,V_role
; observersCount = %lu
allowExpiredBag
requireValidBag
v32@?0@"<NSCopying>"8@?<v@?@"ICURLBag">16^B24
sharedBagMonitor
T@"ICURLBagMonitor",R
T@"ICURLBag",R
ICPurchasedBookPurchaseHistoryID
ICPurchasedBookStoreID
ICPurchasedBookTitle
ICPurchasedBookAuthor
ICPurchasedBookGenre
ICPurchasedBookDatePurchased
ICPurchasedBookArtworkURL
ICPurchasedBookRedownloadParameters
ICPurchasedBookVPPLicensed
ICPurchasedBookVPPOrganizationID
ICPurchasedBookVPPOrganizationDisplayName
<%@: %p title='%@'>
purchaseHistoryID
TQ,N,V_purchaseHistoryID
TQ,N,V_storeID
T@"NSString",C,N,V_title
author
T@"NSString",C,N,V_author
T@"NSString",C,N,V_genre
datePurchased
T@"NSDate",C,N,V_datePurchased
T@"NSURL",C,N,V_artworkURL
T@"NSString",C,N,V_redownloadParameters
vppLicensed
TB,N,GisVPPLicensed,V_vppLicensed
vppOrganizationID
T@"NSString",C,N,V_vppOrganizationID
vppOrganizationDisplayName
T@"NSString",C,N,V_vppOrganizationDisplayName
v24@?0@"ICRadioLikeResponse"8@"NSError"16
radio-station-id
Tq,N,V_storeAdamID
Tq,N,V_likeState
keybagPath
T@"NSString",C,N,V_keybagPath
T@"NSString",C,N,V_reason
T@"NSData",C,N,V_tokenData
resultError
T@"NSError",R,C,N,V_resultError
T@"NSString",R,C,N,V_storefrontIdentifier
playerAnisetteMID
playerDeviceGUID
playerInfoContextToken
playerUserAgent
hasPlayerAnisetteMID
T@"NSData",&,N,V_playerAnisetteMID
hasPlayerDeviceGUID
T@"NSData",&,N,V_playerDeviceGUID
playerInfoContextTokens
T@"NSMutableArray",&,N,V_playerInfoContextTokens
hasPlayerUserAgent
T@"NSString",&,N,V_playerUserAgent
%@: [status=%d, msg='%@']
T@"NSString",R,N
developer-token-invalidated
music-user-token-invalidated
ICMusicKitURLResponseHandler.m
%@ only knows how to process responses for MusicKit requests. %@ is unsupported.
Failed to invalidate developer token.
Failed to invalidate music user token.
requestUniqueID
startDelegationResponse
finishDelegationResponse
hasRequestUniqueID
TI,N,V_requestUniqueID
hasStartDelegationResponse
T@"ICPBDGSStartDelegationResponse",&,N,V_startDelegationResponse
hasFinishDelegationResponse
T@"ICPBDGSFinishDelegationResponse",&,N,V_finishDelegationResponse
com.apple.iTunesCloud.NSOperationQueue.ICRequestUtility
com.apple.iTunesCloud.NSOperationQueue.ICRequestUserIntitiated
com.apple.iTunesCloud.NSOperationQueue.ICRequestUserInteractive
com.apple.iTunesCloud.NSOperationQueue.ICRequestBackground
com.apple.iTunesCloud.NSOperationQueue.ICRequestDefault
family
refetch
v24@?0@"ICAuthorizeMachineResponse"8@"NSError"16
ICLibraryAuthServiceClientTokenDidChangeNotification
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._ICLibraryAuthServiceClientTokenDidChangeDistributedNotification
com.apple.itunescloud.library-auth-token-provider
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.accessQueue
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.operationQueue
Unable to fetch library token [no DSID on active account] - properties=%@
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.allTokens
ICLibraryAuthServiceClientTokenProvider.m
getTokenForDSID requires a valid DSID
v24@?0@"ICLibraryAuthServiceClientTokenResult"8@"NSError"16
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.getTokenResultForDSID
v32@?0@"NSNumber"8@"ICLibraryAuthServiceClientTokenResult"16^B24
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.getTokenResultsForDSIDs
addTokenResult requires a valid DSID
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.addTokenResult
v24@?0@"ICLibraryAuthServiceClientTokenResponse"8@"NSError"16
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._refreshTokensForDSIDs.resultsGroup
v24@?0@"ICLibraryAuthServiceBulkClientTokenResponse"8@"NSError"16
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._handleLibraryAuthServiceClientTokenDidChangeDistributedNotification
Committing the cache is not allowed from a client
v32@?0@"NSNumber"8@"ICLibraryAuthServiceClientTokenStatus"16^B24
token_refresh_dsid
com.apple.itunescloud.library_auth_token_refresh_timer
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider.tokenRefreshTimer
com.apple.iTunesCloud.ICLibraryAuthServiceClientTokenProvider._handleUserIdentityStoreDidChangeNotification
sharedProvider
T@"ICLibraryAuthServiceClientTokenProvider",R
AFMultiUserConnection
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
connectionPointer
Tr^v,R,N,V_connectionPointer
T@"NSString",R,C,N,V_SQL
Books
Podcasts
AppStore
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"<NSCopying>"8@?<v@?@"NSString"B>16^B24
sharedPrivacyInfo
T@"ICPrivacyInfo",R
privacyAcknowledgementRequiredForMedia
privacyAcknowledgementRequiredForMusic
NSString *getOBPrivacyAppleMusicIdentifier(void)
ICPrivacyInfo.m
OBPrivacyAppleMusicIdentifier
void *OnBoardingKitLibrary(void)
/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit
/System/Library/PrivateFrameworks/OnBoardingKit.framework/Contents/MacOS/OnBoardingKit
NSString *getOBPrivacyTVAppIdentifier(void)
OBPrivacyTVAppIdentifier
NSString *getOBPrivacyiBooksIdentifier(void)
OBPrivacyiBooksIdentifier
NSString *getOBPrivacyPodcastsIdentifier(void)
OBPrivacyPodcastsIdentifier
NSString *getOBPrivacyAppStoreIdentifier(void)
OBPrivacyAppStoreIdentifier
flush-track-cache
shouldFlushTrackCache
hls-key-cert-url
hls-key-server-url
hls-playlist-url
mp-hls-playlist-url
mp-hls-key-cert-url
mp-hls-key-server-url
playlistURL
T@"NSURL",C,N,V_playlistURL
T@"NSURL",C,N,V_keyCertificateURL
T@"NSURL",C,N,V_keyServerURL
TB,N,GisiTunesStoreStream,V_isiTunesStoreStream
alternatePlaylistURL
alternateKeyCertificateURL
alternateKeyServerURL
ICMusicSubscriptionLeaseSessionLeaseStatusDidChangeNotification
com.apple.iTunesCloud.ICMusicSubscriptionLeaseSession.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionLease.calloutQueue
<%@ %p requestContext: %@; leaseStatus: %@>
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
com.apple.iTunesCloud.ICMusicSubscriptionLeaseSession.operationQueue
com.apple.iTunesCloud.ICMusicSubscriptionLeaseSession.innerOperationQueue
v16@?0@"ICMusicSubscriptionPlaybackRequestOperation"8
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSDate"16
T@"<ICMusicSubscriptionLeaseSessionDelegate>",R,W,N,V_delegate
leaseExpirationDate
T@"NSDate",R,C,N,V_leaseExpirationDate
delegatedLeaseSession
TB,R,N,GisDelegatedLeaseSession,V_delegatedLeaseSession
leaseStatus
T@"ICMusicSubscriptionLeaseStatus",R,C,N
automaticallyRefreshingLease
TB,R,N,GisAutomaticallyRefreshingLease
com.apple.itunescloudd.ICCloudClientAvailabilityService.serial.queue
v12@?0B8
purchaseHistory
match
music
musicvideo
tvshow
downloadKey=%@
secondaryClientIdentifier
T@"NSString",C,N,V_secondaryClientIdentifier
httpHeaderFields
T@"NSDictionary",R,C,N,V_httpHeaderFields
Tq,N,V_priority
purchaseBundleMD5
T@"NSData",C,N,V_purchaseBundleMD5
purchaseBundleSinfs
T@"NSArray",C,N,V_purchaseBundleSinfs
songID
T@"NSNumber",C,N,V_songID
contentType
T@"NSString",C,N,V_contentType
T@"NSString",C,N,V_userAgent
T@"NSString",C,N,V_mediaKind
canUseCellularData
TB,N,V_canUseCellularData
allowDownloadOnConstrainedNetworks
TB,N,V_allowDownloadOnConstrainedNetworks
optionsDictionary
preference
adam_id
external_id
created_offset_millis
preference_type
Ti,N,V_preference
hasAdamId
Tq,N,V_adamId
hasExternalId
externalId
T@"NSString",&,N,V_externalId
hasCreatedOffsetMillis
createdOffsetMillis
Tq,N,V_createdOffsetMillis
hasPreferenceType
preferenceType
Ti,N,V_preferenceType
Tq,R,N,V_statusCode
serverRevision
syncPending
lastSyncAttempt
lastSyncedOSVersion
com.apple.iTunesCloud.ICInAppMessageStore.accessQueue
com.apple.iTunesCloud.ICInAppMessageStore.callbackQueue
MessageStore.plist
applicationProperties
messages
lease-duration
v32@?0@"NSString"8@"NSString"16^B24
sapSession
T@"ICSAPSession",&,N,V_sapSession
uploaded-audio
uploaded-video
library-track
album-artist
playlist-name
composer-name
disc-count
disc-number
genre-name
item-name
track-count
track-number
track-ulid
albumArtist
genreName
cloudID
albumArtistName
T@"NSString",C,N,V_albumArtistName
T@"NSString",C,N,V_composerName
T@"NSString",C,N,V_copyright
T@"NSNumber",C,N,V_discCount
T@"NSNumber",C,N,V_discNumber
T@"NSNumber",C,N,V_fileSize
T@"NSString",C,N,V_genreName
T@"NSNumber",C,N,GisCompilation,V_compilation
T@"NSNumber",C,N,V_duration
T@"NSString",C,N,V_kind
T@"NSString",C,N,V_name
storeAdamIdentifier
T@"NSNumber",C,N,V_storeAdamIdentifier
storeCloudIdentifier
T@"NSNumber",C,N,V_storeCloudIdentifier
T@"NSNumber",C,N,V_trackCount
T@"NSNumber",C,N,V_trackNumber
T@"NSNumber",C,N,V_year
universalCloudLibraryID
T@"NSString",C,N,V_universalCloudLibraryID
player-mid
player-guid
player-user-agent
enqueuers
T@"NSData",C,N,V_playerAnisetteMID
T@"NSString",C,N,V_playerDeviceGUID
T@"NSString",C,N,V_playerUserAgent
tokenRequests
T@"NSArray",C,N,V_tokenRequests
T@"NSMutableDictionary",R,C,N
wha-token
cloudCredentialsTokenData
T@"NSData",C,N,V_cloudCredentialsTokenData
SICData
T@"NSData",C,N,V_SICData
ICDefaultsCloudMediaLibraryUID
ICDefaultsCachedSubscriptionStatus
ICDefaultsCachedMusicUserTokens
ICDefaultsRegisteredPushNotificationState
ICDefaultsKeyMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
ICDefaultsKeyLastActiveAccountDSID
ICDefaultsKeyLastCookieHeadersForRevokingMusicUserTokens
ICDefaultsKeyLastAllowedInteractiveAuthenticationTime
ICDefaultsKeyAuthServiceClientTokenCache
ICDefaultsKeyLastAuthenticationDialogResponseTime
ICDefaultsKeyLastKnownLocalStoreAccountProperties
ICDefaultsKeyLastKnownSubscriptionStatusBaseCacheKey
ICDefaultsKeyAccountNotificationsShowInLibrarySwitch
ICDefaultsKeyDeviceClassOverride
ICDefaultsKeyDeviceModelOverride
ICDefaultsKeyFairPlayDeviceTypeOverride
ICDefaultsKeyHardwarePlatformOverride
ICDefaultsKeyProductVersionOverride
ICDefaultsKeyProductPlatformOverride
ICDefaultsKeyNetworkTypeOverride
ICDefaultsKeySpoofIPhone
ICDefaultsKeyBypassBagSanityChecks
ICDefaultsKeyShouldRunAgeVerification
ICDefaultsKeyAgeVerificationExpirationDate
ICDefaultsKeyExplicitContentAllowedForCurrentYear
ICDefaultsKeyExplicitContentAllowedForExpirationYear
ICDefaultsKeyAuthServiceClientTokenTimeToLive
ICDefaultsKeyGrazingPathEnabled
ICDefaultsKeyLastKnownUserAgeVerificationState
ICInternalDefaultsKeyTreatSubscriptionStatusAsExpired
ICInternalDefaultsKeyTreatSubscriptionStatusAsIncomplete
ICInternalDefaultsKeyTreatSagaAddComputerCallAsFailed
ICInternalDefaultsKeyTreatInitialSagaImportAsFailed
ICDefaultsCachedSubscriptionStatusIsValid
com.apple.itunescloud.internal
ISIgnoreExtendedValidation
iPhone12,3
t8030
13.4
ISCacheBuster
standardDefaults
T@"ICDefaults",R
internalDefaults
T@"NSUserDefaults",R,N,V_internalDefaults
cloudMediaLibraryUID
defaultStoreFront
cachedSubscriptionStatus
T@"NSDictionary",C,N
cachedMusicUserTokens
pushNotificationState
mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
lastActiveAccountDSID
lastCookieHeadersForRevokingMusicUserTokens
lastAllowedInteractiveAuthenticationTime
T@"NSDate",C,N
authServiceClientTokenCache
lastAuthenticationDialogResponseTime
Td,N
lastKnownLocalStoreAccountProperties
lastKnownSubscriptionStatusBaseCacheKey
accountNotificationsShowInLibraryDictionary
ignoreExtendedCertificateValidation
bypassBagSanityChecks
TB,N,V_bypassBagSanityChecks
deviceModelOverride
deviceClassOverride
fairPlayDeviceTypeOverride
productVersionOverride
hardwarePlatformOverride
productPlatformOverride
networkTypeOverride
shouldForceiPhoneBehaviors
authServiceClientTokenTimeToLive
shouldRunAgeVerification
explicitContentAllowedForCurrentYear
TB,N,GisExplicitContentAllowedForCurrentYear
explicitContentAllowedForExpirationYear
TB,N,GisExplicitContentAllowedForExpirationYear
grazingPathEnabled
TB,N,GisGrazingPathEnabled
privacyAcknowledgementDisabledForMusic
TB,R,N,GisPrivacyAcknowledgementDisabledForMusic
shouldForceLibraryRecommendationAnalysis
allowLowAffinityRecommendations
shouldReduceLibraryRecommendationsXPCInterval
shouldTreatSubscriptionStatusAsExpired
shouldTreatSagaAddComputerCallAsFailed
shouldTreatInitialSagaImportAsFailed
shouldTreatSubscriptionStatusCheckAsIncomplete
legacyStoreCacheBusterEnabled
TB,R,N,GisLegacyStoreCacheBusterEnabled
automaticDownloadsEnabled
lastKnownUserAgeVerificationState
accountless-streaming
lease-start
lease-renew
action
assetStoreFront
sbsync
subscriptionAdamId
purchaseAdamId
universalLibraryId
is-current-track
pause-position-in-millis
recorded-skip-time-in-millis
expires
pauseTime
skipDate
T@"NSNumber",R,C,N,V_pauseTime
T@"NSDate",R,C,N,V_skipDate
Tq,R,N,V_storeIdentifier
<%@ %p name:'%@'%@ uniqueIdentifier:%@>
 expirationDate:'%@
(unknown)
T@"NSDate",C,N,V_expirationDate
T@"NSString",R,C,N,V_name
T@"NSUUID",R,C,N,V_uniqueIdentifier
 buildVersion: %@
 deviceGUID: %@
 deviceName: %@
 SBEnabled: %@
 storeAccountID: %llu
 storeFrontID: %@
 timeZone:%@
timeZone
T@"NSTimeZone",R,C,N,V_timeZone
v24@?0@"ICFPSAPContext"8@"NSError"16
runLoopSourceRef
T^{__CFRunLoopSource=},N,V_runLoopSourceRef
com.apple.iTunesCloud.ICUserNotificationManager.access
com.apple.iTunesCloud.ICUserNotificationManager.notification
ICUserNotificationManager.m
no dialog info for user notification %@
T@"ICUserNotificationManager",R
sbKeyBag
subKeyBag
wishlistItemName
v24@?0@"ICStorePlatformMetadata"8^B16
v32@?0@"<ICStorePlatformResponse>"8Q16^B24
rawResponse
allItems
accountIdentifier
enqueuerAccountIdentifier
T@,R,C,N
com.apple.itunescloud.delegation-provider
Set parental control failed [no propertires for user identity]- userIdentity=%@
Set parental control failed  [no DSID for user identity] - userIdentity=%@
manual
TB,N,GisAutomatic,V_automatic
T@"ICStoreRequestContext",&,N,V_requestContext
storeURLRequest
T@"ICStoreURLRequest",&,N,V_storeURLRequest
firstInt64Value
firstNumberValue
firstStringValue
ICErrorDomain
ICFairPlayErrorDomain
ICSQLiteErrorDomain
ICStoreServerErrorDomain
ICRadioServerErrorDomain
ICMusicSubscriptionCarrierBundlingServerErrorDomain
ICCloudServiceStatusCapabilitiesDidChangeNotification
ICCloudServiceStatusStorefrontCountryCodeDidChangeNotification
ICCloudServiceStatusStorefrontIdentifierDidChangeNotification
musicCatalogPlayback
addToCloudMusicLibrary
musicCatalogSubscriptionEligible
none
prompt-prohibited
prompt-allowed
ICCloudServiceStatusMonitor.m
%@: Calling %s more than once is invalid.
%@: Calling %s without calling %s first is invalid.
user token
v24@?0@"<ICCloudServiceStatusRemoteMonitoringService>"8@"NSString"16
Calling -_beginTransactionForCloudServiceStatusMonitorConnectionWithIdentifier: with the same transaction identifier more than once is invalid.
Failed to get listener endpoint for cloud service status monitor.
request-%@-%@
Encountered error while requesting %@.
cloud service capabilities
storefront country code
storefront identifier
cloud service status observation token
v16@?0@"NSUUID"8
ongoing-observation-of-cloud-service-status-%@
relinquishment of cloud service status observation token
privacyAcknowledgementPolicy
observingCloudServiceStatus
TB,R,GisObservingCloudServiceStatus
hasRequest
T@"ICPBDGSRequest",&,N,V_request
hasResponse
T@"ICPBDGSResponse",&,N,V_response
uniqueID
startDelegationRequest
finishDelegationRequest
hasUniqueID
TI,N,V_uniqueID
hasStartDelegationRequest
T@"ICPBDGSStartDelegationRequest",&,N,V_startDelegationRequest
hasFinishDelegationRequest
T@"ICPBDGSFinishDelegationRequest",&,N,V_finishDelegationRequest
authentication-performed
other
com.apple.iTunesCloud.ICCloudContentTasteRequestListener.MediaContentTaste
com.apple.itunescloud.contenttaste
HSCloudAvailabilityControllerCanShowCloudDownloadButtonsDidChangeNotification
HSCloudAvailabilityControllerCanShowCloudTracksDidChangeNotification
HSCloudAvailabilityControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification
HSCloudAvailabilityControllerIsCellularDataRestrictedDidChangeNotification
HSCloudAvailabilityControllerNetworkReachabilityDidChangeNotification
com.apple.HomeSharing.HSCloudAvailabilityController.accessQueue
com.apple.mobileipod-prefsChanged
UIApplicationWillEnterForegroundNotification
com.apple.homesharing.HSCloudAvailabilityController
VideosShowCloudMediaEnabledSetting
ICMusicUserTokenCacheDidChangeNotification
com.apple.iTunesCloud.ICMusicUserTokensDidChangeDistributedNotification
com.apple.iTunesCloud.ICMusicUserTokenCache.accessQueue
com.apple.iTunesCloud.ICMusicUserTokenCache.calloutQueue
Failed to create a key for the Music User Token Cache because the key identifier and/or the team identifier could not be derived from developer token "%@".
Failed to create a key for the Music User Token Cache because there was no DSID in the user identity for the request.
%lli;%@;%@
T@"ICMusicUserTokenCache",R
com.apple.iTunesCloud.ICDelegationProviderServiceSession.accessQueue
com.apple.iTunesCloud.ICDelegationProviderServiceSession.calloutQueue
v32@?0@"NSInputStream"8@"NSOutputStream"16@"NSError"24
v24@?0@"ICPBDGSResponse"8@"NSError"16
v28@?0@"ICPBDGSFinishDelegationRequest"8@"NSError"16B24
v32@?0@"ICPBDGSStartDelegationRequest"8@"NSDictionary"16@"NSError"24
T@"<ICDelegationProviderServiceSessionDelegate>",W,N
delegationAccountUUIDs
T@"NSArray",R,C,N,V_delegationAccountUUIDs
netService
T@"ICDelegationProviderNetService",R,N,V_netService
userIdentities
T@"NSArray",R,C,N,V_userIdentities
v20@?0B8q12
Server requested authentication
Failed to get verification context for identity %@
v24@?0@"ICUserVerificationContext"8@"NSError"16
silent
station-dict
tracklist-action-type
station-track-dict
stationMetadata
T@"ICRadioStationMetadata",R,N
tracklistActionType
T@"NSDate",R,C,N,V_assetExpirationDate
error-value
contentDictionary
play-info
token-ttl-in-seconds
playInfoRequest
T@"ICDelegationPlayInfoRequest",C,N,V_playInfoRequest
T@"ICStoreRequestContext",&,N,V_storeRequestContext
hasKey
T@"NSString",&,N,V_key
hasValue
T@"NSString",&,N,V_value
com.apple.itunescloud.ICUserNotificationSettingsDidChangeNotification
com.apple.itunescloud.ICUserNotificationSettingsAreAuthorizedUserInfoKey
<%@: %p; identity = %@; identityStore = %@>
T@"ICUserIdentity",R,N,V_identity
_itsdlgt._tcp.
com.apple.itunescloud.remote-request-execution-service
machServiceName
com.apple.tv
com.apple.iBooks
com.apple.podcasts
com.apple.AppStore
com.apple.NanoMusic
com.apple.NanoBooks
com.apple.TVMusic
com.apple.TVWatchList
NSString * _Nonnull ICBundleIdentifierForSystemApplicationType(ICSystemApplicationType)
ICSystemApplication.m
No bundle identifier defined for application type %d
v24@?0@"AMSMediaToken"8@"NSError"16
AMSMediaTokenService
Class getAMSMediaTokenServiceClass(void)_block_invoke
ICDeveloperTokenFetchRequest.m
Unable to find class %s
void *AppleMediaServicesLibrary(void)
/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
/System/Library/PrivateFrameworks/AppleMediaServices.framework/Contents/MacOS/AppleMediaServices
AMSBagKeySet
Class getAMSBagKeySetClass(void)_block_invoke
AMSBag
Class getAMSBagClass(void)_block_invoke
<%@ %p securityMode: %li hasPassword: %@>
com.apple.iTunesCloud.ICDelegationServiceSecuritySettings.receiverSerialQueue
APSSettingsGetInt64
accessControlLevel
v16@?0^v8
com.apple.iTunesCloud.ICDelegationServiceSecuritySettings.senderSerialQueue
v16@?0^{__CFString=}8
securityMode
Tq,R,N,V_securityMode
password
T@"NSString",R,C,N,V_password
/System/Library/PrivateFrameworks/AirPlaySupport.framework/AirPlaySupport
AUUID-
DeviceName
ServiceVersion
SecurityMode
v32@?0@"NSString"8@"NSData"16^B24
Delegation UUIDs: %@
Delegation UUIDs: Missing
Device name: %@
Device name: Uknonwn
T@"NSArray",C,N,V_delegationAccountUUIDs
T@"NSString",C,N,V_deviceName
Tq,N,V_securityMode
serviceVersion
Tq,N,V_serviceVersion
TXTRecordData
defaultButton
explanation
initialCheckboxValue
m-allowed
isFree
okButtonString
okButtonAction
cancelButtonString
cancelButtonAction
otherButtonString
otherButtonAction
buyParams
subtarget
authorization
cancel
Goto
account
<%@ %p responseDictionary: %@>
TB,R,N,GisInitialCheckboxValue
biometricAuthenticationAllowed
TB,R,N,GisBiometricAuthenticationAllowed
buttons
defaultButtonType
isDefaultButton
TB,R,N,V_isDefaultButton
T@"ICStoreDialogResponseButtonAction",R,C,N,V_action
actionDictionary
T@"NSDictionary",R,C,N,V_actionDictionary
URLString
ICMusicSubscriptionStatusDidChangeNotification
_ICMusicSubscriptionStatusDidChangeDistributedNotification
ICUserIdentityForMusicSubscriptionStatusDidChangeKey
ICNewStatusForMusicSubscriptionStatusDidChangeKey
ICOldStatusForMusicSubscriptionStatusDidChangeKey
com.apple.itunescloud.ICMusicSubscriptionStatusDidChangeFollowingPrivacyAcknowledgementDistributedNotification
com.apple.security.exception.mach-lookup.global-name
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.callbackQueue
com.apple.iTunesCloud.ICMusicSubscriptionStatusController.operationQueue
Disallowing subscription status request for sandboxed user identity %@
com.apple.itunescloud.subscription_status_refresh
v32@?0@"NSUUID"8@"ICMusicSubscriptionStatusRequest"16^B24
sharedStatusController
T@"ICMusicSubscriptionStatusController",R
com.apple.iTunesCloud.ICDelegationConsumerServiceSession.accessQueue
com.apple.iTunesCloud.ICDelegationConsumerServiceSession.calloutQueue
v32@?0@"ICPBDGSStartDelegationResponse"8@"NSDictionary"16@"NSError"24
v32@?0@"NSNumber"8@"ICDelegationConsumerServiceSessionRequestResult"16^B24
v32@?0@"ICPBDGSFinishDelegationResponse"8@"NSDictionary"16@"NSError"24
v32@?0@"ICUserIdentity"8Q16^B24
T@"ICDelegationConsumerServiceRequest",R,C,N,V_request
T@?,R,N,V_responseHandler
v32@?0@"NSDictionary"8@"NSString"16^B24
meta
isAuthenticated
storePlatformData
authenticated
TB,R,N,GisAuthenticated,V_authenticated
resultsDictionary
T@"NSNumber",R,C,N,V_accountIdentifier
T@"NSNumber",R,C,N,V_enqueuerAccountIdentifier
messageID
params
eventID
messageIdentifier
T@"NSString",R,N,V_messageIdentifier
T@"NSDictionary",R,N,V_params
eventIdentifier
T@"NSString",R,N,V_eventIdentifier
ic_underlyingError
T@"NSError",R
T@"ICStoreDialogResponse",C,N,V_dialog
T@"NSError",C,N,V_serverError
rentalExpirationDate
T@"NSDate",C,N,V_rentalExpirationDate
rentalPlaybackStartDate
T@"NSDate",C,N,V_rentalPlaybackStartDate
renewalDate
T@"NSDate",C,N,V_renewalDate
serverPlaybackContextData
T@"NSData",C,N,V_serverPlaybackContextData
contentKeyContextData
T@"NSData",C,N,V_contentKeyContextData
ICTelephonyPhoneNumberDidChangeNotification
com.apple.iTunesCloud.ICTelephonyController.accessQueue
com.apple.iTunesCloud.ICTelephonyController.telephonyCallbackQueue
CarrierName
InternationalMobileEquipmentIdentity
Failed to send SMS using telephony slot: %@.
sharedController
T@"ICTelephonyController",R
providerName
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
scope
isActiveLockerAccount
isManagedAppleID
eligibleServices
automaticDownloadKinds
musicPrivateListeningEnabled
musicPrivateListeningEnabledForHomeUsers
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSUUID"8@"NSNumber"16^B24
enable
disable
ic_DSID
T@"NSNumber",C,N,Sic_setDSID:
ic_altDSID
T@"NSString",C,N,Sic_setAltDSID:
ic_firstName
T@"NSString",C,N,Sic_setFirstName:
ic_lastName
T@"NSString",C,N,Sic_setLastName:
ic_storefront
T@"NSString",C,N,Sic_setStorefront:
ic_uniqueIdentifier
T@"NSNumber",C,N,Sic_setUniqueIdentifier:
ic_sandboxed
TB,N,Gic_isSandboxed,Sic_setSandboxed:
TB,N,Gic_isActiveLockerAccount,Sic_setActiveLockerAccount:
ic_cloudBackupEnabled
TB,R,N,Gic_isCloudBackupEnabled
ic_managedAppleID
TB,N,Gic_isManagedAppleID,Sic_setManagedAppleID:
ic_ageVerificationExpirationDate
T@"NSDate",C,N,Sic_setAgeVerificationExpirationDate:
ic_mergeWithCloudLibraryPreference
T@"NSNumber",C,N,Sic_setMergeWithCloudLibraryPreference:
ic_subscriptionStatusEnabled
TB,N,Gic_isSubscriptionStatusEnabled,Sic_setSubscriptionStatusEnabled:
ic_homeUserIdentifiers
ic_localAccount
TB,R,N,Gic_isLocalAccount
ic_automaticDownloadKinds
T@"NSSet",C,N,Sic_setAutomaticDownloadKinds:
ic_privateListeningEnabled
T@"NSNumber",C,N,Sic_setPrivateListeningEnabled:
ic_cloudLibraryStateReason
T@"NSDictionary",C,N,Sic_setCloudLibraryStateReason:
ic_privateListeningEnabledForHomeUsers
T@"NSDictionary",C,N,Sic_setPrivateListeningEnabledForHomeUsers:
ic_manageable
TB,R,N,Gic_isManageable
guid-urls
getMatchStatusSrv
isMatchServiceEnabled
cloud-welcome
amd-domains
sign-sap-request
sign-sap-response
signed-actions
musicCommon
sign-sap-setup-cert
sign-sap-setup
fps-cert
fps-request
subDownload
md-finish-provisioning
amd-finish-provisioning
md-sync-machine
amd-sync-machine
redownloadProduct
paidRedownloadProduct
auth-can-post
songDownloadDone
radio
storefront-header-suffix
musicForYou
browse
grouping
radioTab
getSubscriptionStatusSrv
lease-stop
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
delegatePlayback
enableSubscription
disableSubscrption
getSubscriptionStatus
getWholeHouseAudioPlayInfo
play-activity-feed-request-post-url
authorizeMachine
mobile-network-constraints
library-auth-service-token-url
musicSubscription
buyProduct
push-notification-types
push-notifications
revokeMusicToken
subscription-status-refresh-interval-in-seconds
push-notification-allowexplicit
library-daap
preference-service-sync-url
preference-service-scheduled-sync-period-in-minutes
musicFriends
isExplicitContentAgeVerificationRequired
ExplicitContentBadgeTreatment
korAgeVerificationUrl
fuseHeaderEnrichment
fuseHeaderEnrichmentResponse
createMusicToken
inAppMessages
musicConnect
addToSiriTagHistoryBaseUrl
addToTRHistoryBaseUrl
pmlt-url
addToWishlistBaseUrl
getShareIdentifiers
purchase-daap
p2-content-restore
cloud-add-computer
storeFrontId
artist-new-content
countryCode
fetchSinfs
fuseCarrierMccMncList
ampMusicAPIDomains
bag_dictionary
expiration_time
server_correlation_key
server_environment
com.apple.itunescloud.ICURLBag
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/getSubscriptionStatusSrv
https://p49-buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/getSubscriptionStatus
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/revokeMusicToken
https://p49-buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/sagaAddComputer
musicMescal
actions
regex
schemes
https
bagValues
T@"NSDictionary",C,N,V_bagValues
convertedActionsCache
T@"NSMutableDictionary",&,N,V_convertedActionsCache
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
GUIDURLRegexPatterns
T@"NSArray",&,N,V_GUIDURLRegexPatterns
GUIDURLSchemes
T@"NSSet",&,N,V_GUIDURLSchemes
_propertyListRepresentation
T@"NSDate",C,N,S_setExpirationDate:,V_expirationDate
allValues
canPostKeybagSyncData
radioConfiguration
T@"ICURLBagRadioConfiguration",R,N
libraryDAAPConfiguration
T@"ICURLBagLibraryDAAPConfiguration",R,N
storefrontHeaderSuffix
com.apple.iTunesCloud.ICDelegationProviderServiceProtocolHandler.operationQueue
com.apple.iTunesCloud.ICDelegationProviderServiceProtocolHandler.calloutQueue
rules
provider-resource
sharing-enabled
like-enabled
core-seed-name
attribution-label
station-type
station-subtype
requires-subscription
artworkInfo
T@"ICStoreArtworkInfo",R,C,N
coreSeedName
descriptionText
attributionLabel
subtype
allowsItemLiking
allowsSharing
subscriptionRequired
TB,R,N,GisSubscriptionRequired
providerResource
T@"ICRadioStationProviderResource",R,C,N
INSERT OR REPLACE INTO delegation_uuid (user_identity, uuid, insertion_date) VALUES (?, ?, ?)
DELETE FROM token
DELETE FROM delegation_uuid WHERE user_identity==? AND uuid=?
DELETE FROM token WHERE expiration_date<?
INSERT OR REPLACE INTO metadata (key, value) VALUES (?, ?)
INSERT OR REPLACE INTO account (identity, storefront) VALUES (?, ?)
DELETE FROM account WHERE identity==?
DELETE FROM token WHERE account_identity==?
INSERT OR REPLACE INTO token (account_identity, data, expiration_date, type) VALUES(?, ?, ?, ?)
Tq,R,N,V_interactionLevel
ICSecurityInfoFirstUnlockNotification
com.apple.itunescloud.ICSecurityInfo.accessQueue
com.apple.itunescloud.ICSecurityInfo.calloutQueue
sharedSecurityInfo
T@"ICSecurityInfo",R
contentProtectionEnabled
TB,R,N,GisContentProtectionEnabled,V_isContentProtectionEnabled
deviceUnlocked
TB,R,N,GisDeviceUnlocked
deviceClassCUnlocked
TB,R,N,GisDeviceClassCUnlocked,V_isDeviceClassCUnlocked
isMatchSubscriber
itunescloudd
v24@?0@"ICRemoteRequestOperationExecutionResponse"8@"NSError"16
_shadowOperationForRemoteExecution
TB,N,G_isShadowOperationForRemoteExecution,S_setShadowOperationForRemoteExecution:,V__shadowOperationForRemoteExecution
T@"<NSSecureCoding>",&,N,V_response
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.accessQueue
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.leaseSessionPreparationOperationQueue
com.apple.iTunesCloud.ICMusicSubscriptionLeaseController.notificationSerialQueue
com.apple.itunesstored.PlaybackLeaseDidEnd
ICMusicSubscriptionLeaseIgnorePushNotifications
v32@?0@"_ICMusicSubscriptionLeaseIdentityCacheKey"8@"ICMusicSubscriptionLeaseSession"16^B24
Failed to get lease session [missing user identity or user identity store] - userIdentity=%@ - userIdentityStore=%@
Failed to get lease session [invalid delegated identity] - delegatedIdentity=%@
Failed to get lease session [no properties for user identity] - userIdentity=%@
T@"ICMusicSubscriptionLeaseController",R
lastKnownHouseholdID
T@"NSNumber",R,C,N,V_delegatedDSID
T@"NSString",R,C,N,V_carrierBundleDeviceIdentifier
%@=%@
Accept-Language
Cookie
Content-Encoding
Content-Type
User-Agent
Set-Cookie
Cache-Control
Content-Range
Expires
max-age
text/xml; charset=utf-8
application/x-protobuf
NSData * _Nonnull ICDAAPUtilitiesCreateData(void (^__strong _Nonnull)(DKDAAPWriter *__strong))
ICDAAPUtilities.m
block
NSData * _Nonnull ICDAAPUtilitiesCreateDataForContainer(DKDAAPElementCode, void (^__strong _Nonnull)(DKDAAPWriter *__strong))
containerCode
v16@?0@"DKDAAPWriter"8
void ICDAAPUtilitiesWriteProperty(DKDAAPWriter *__strong _Nonnull, DKDAAPElementCode, DKDAAPValueType, __strong id _Nonnull)
DKDAAPValueTypeUInt8 only supports NSNumber.
DKDAAPValueTypeSInt8 only supports NSNumber.
DKDAAPValueTypeUInt16 only supports NSNumber.
DKDAAPValueTypeSInt16 only supports NSNumber.
DKDAAPValueTypeUInt32 only supports NSNumber.
DKDAAPValueTypeSInt32 only supports NSNumber.
DKDAAPValueTypeUInt64 only supports NSNumber.
DKDAAPValueTypeSInt64 only supports NSNumber.
DKDAAPValueTypeString only supports NSString.
DKDAAPValueTypeDate only supports NSDate.
DKDAAPValueTypeBinary only supports NSData.
Cannot make element from unsupported DAAP value type.
void ICDAAPUtilitiesWriteContainer(DKDAAPWriter *__strong _Nonnull, DKDAAPElementCode, void (^__strong _Nonnull)(DKDAAPWriter *__strong))
daap.incrementplaycount
daap.incrementskipcount
dmap.itemhidden
com.apple.itunes.cloud-artwork-token
sharedItemPropertyInfo
T@"ICDAAPPropertyInfo",R,N
sharedContainerPropertyInfo
codeMap
T@"NSMutableDictionary",&,N,V_codeMap
valueTypeMap
T@"NSMutableDictionary",&,N,V_valueTypeMap
ML3TrackPropertyUserRating
ML3TrackPropertyHidden
ML3TrackPropertyDatePlayed
ML3TrackPropertyDateSkipped
ML3TrackPropertyLikedState
ML3TrackPropertyAlbumLikedState
ML3ContainerPropertyDescription
ML3ContainerPropertyDatePlayed
ML3ContainerPropertyDateCreated
ML3ContainerPropertyLikedState
ML3ContainerPropertyCloudIsPublic
ML3ContainerPropertyCloudIsVisible
ML3ContainerPropertyCloudAuthorStoreID
ML3ContainerPropertyParentPersistentID
ML3ContainerPropertyExternalVendorIdentifier
ML3ContainerPropertyExternalVendorDisplayName
ML3ContainerPropertyExternalVendorContainerTag
activeCommandsOnly
hasActiveCommandsOnly
TB,N,V_activeCommandsOnly
expiration_prune
CREATE TABLE IF NOT EXISTS account(identity TEXT PRIMARY KEY,storefront TEXT);
CREATE TABLE IF NOT EXISTS metadata(key TEXT PRIMARY KEY,value TEXT);
CREATE TABLE IF NOT EXISTS token(account_identity TEXT UNIQUE,type INTEGER NOT NULL,expiration_date REAL,data BLOB NOT NULL);
CREATE TABLE IF NOT EXISTS delegation_uuid(user_identity TEXT,uuid TEXT,insertion_date REAL,UNIQUE(user_identity, uuid));
ICDelegateAccountStore.db
PRAGMA user_version=%ld
ANALYZE
currentVersion
Tq,R
PRAGMA user_version
ICMusicKitURLRequest.m
[requestContext isKindOfClass:[ICMusicKitRequestContext class]]
; requestContext = %@
Failed to fetch developer token from %@.
Bearer %@
Authorization
Music-User-Token
Failed to fetch user token.
Unauthorized to fetch user token, but reached maximum retry count for developer token invalidation; aborting.
Unauthorized to fetch user token, but developer token invalidation failed; aborting.
_developerToken
T@"NSString",R,C,N,V_developerToken
_pendingEquivalentStoreURLRequest
T@"ICStoreURLRequest",R,N
T@"ICMusicKitRequestContext",R,C,N
signatureData
T@"NSData",C,N,V_signatureData
T@"NSMutableData",&,N,V_data
com.apple.itunescloud.music-subscription-status-service
verificationContext
T@"ICUserVerificationContext",R,C,N,V_verificationContext
; identity = %@
; identityStore = %@
@"ICMusicSubscriptionStatusMonitor"16@?0@"ICUserIdentityContext"8
allowed
restricted
required
v32@?0@"<NSCopying>"8@?<v@?@"ICMusicSubscriptionStatusMonitor"@"ICMusicSubscriptionStatus">16^B24
T@"ICUserIdentity",R,N
T@"ICMusicSubscriptionStatus",R,N,V_subscriptionStatus
SELECT uuid FROM delegation_uuid WHERE user_identity==?
uuid
SELECT data, expiration_date, type, account_identity FROM token WHERE (expiration_date IS NULL) OR (expiration_date >= ?)
SELECT data, expiration_date, type, account_identity FROM token WHERE (type == ?) AND ((expiration_date IS NULL) OR (expiration_date >= ?))
SELECT account.storefront AS storefront, token.data AS data, token.expiration_date AS expiration_date, token.type AS type FROM account LEFT OUTER JOIN token ON account.identity==token.account_identity WHERE account.identity==?
SELECT value FROM metadata WHERE key==?
SELECT count(account_identity) FROM token
SELECT data, expiration_date, type FROM token WHERE account_identity==?
expiration_date
account_identity
lastExpirationPruningDate
overestimatedNumberOfTokens
is-async
%ld/%@
X-Apple-Radio-Client-Version
backgroundRadioRequest
TB,N,GisBackgroundRadioRequest,V_backgroundRadioRequest
Tq,N,V_protocolVersion
radioContentDictionaryCreationBlock
T@?,C,N,V_radioContentDictionaryCreationBlock
machine-data-action-performed
dialog-processed
invalidate-url-bags
errorKey
v24@?0B8B12@"NSError"16
v16@?0@"ICMutableLocalStoreAccountProperties"8
hasAccountID
TQ,N,V_accountID
com.apple.itunescloud.ICStoreHTTPCookieManager
v32@?0@"NSString"8@"NSHTTPCookie"16^B24
sharedCookieStore
T@"ICHTTPCookieStore",R
dataUpdated
settingId
notifications.music.account.showInLibrary
notifications.music.account.artistsAndShows
isToggled
hasBeenPreviouslyToggled
itemResponseDictionary
T@"NSDictionary",R,C,N,V_itemResponseDictionary
ICUserIdentityStoreDelegateAccountStoreDidChangeNotification
ICUserIdentityStoreDidChangeNotification
ICActiveUserIdentityDidChangeNotification
ICUserIdentityStoreLocalStoreAccountPropertiesDidChangeNotification
com.apple.iTunesCloud.ICUserIdentityStore.accessQueue
com.apple.iTunesCloud.ICUserIdentityStore.callback
v16@?0@"ICDelegateAccountStoreReader"8
v24@?0@"NSString"8^B16
Unable to get verification context for user identity - activeAccountDSID=%@ - allowsAccountEstablishment=%u
helper
ICUserIdentityStore.m
The following method is not supported on the null identity store: %s.
v24@?0@"ICDelegateAccountStore"8@"NSError"16
nullIdentityStore
T@"ICUserIdentityStore",R
defaultIdentityStore
_unsafeBackend
T@"<ICUserIdentityStoreBackend>",R,N
T@"ICLocalStoreAccountProperties",R,N
com.apple.iTunesCloud.ICMachineDataSession.callback
com.apple.iTunesCloud.ICMachineDataSession.operation
sharedHandler
T@"ICMachineDataActionHandler",R
previewFrame
video
videoFile
assetUrl
pf=%@/hls=%@/crabs=%@
T@"NSString",R,C,N,V_stringRepresentation
T@"NSDictionary",R,C,N,V_trackInfo
matchDictionary
rawContentDictionary
redownload
action-params
priceFormatted
price
buyParameters
formattedPrice
offerType
ICDelegationProviderNetServiceDelegationAccountUUIDsDidChangeNotification
com.apple.iTunesCloud.ICDelegationProviderNetService.accessQueue
com.apple.iTunesCloud.ICDelegationProviderNetService.serialQueue
com.apple.iTunesCloud.ICDelegationProviderNetService.netServiceStreamResolutionQueue
T@"NSNetService",R,N,V_netService
PRAGMA user_version=%@
ROLLBACK TRANSACTION
COMMIT TRANSACTION
BEGIN DEFERRED TRANSACTION
currentError
T@"ICSQLiteConnectionOptions",R,C,N,V_options
T@"<ICSQLiteConnectionDelegate>",W,N,V_delegate
lastChangeCount
userVersion
Statement from a different connection
T@"NSURLResponse",R,N,V_urlResponse
bodyData
T@"NSData",R,N,V_bodyData
bodyDataURL
T@"NSURL",R,N,V_bodyDataURL
database-id
database-name
is-online-genius-for-match-enabled
play-data-batch-interval-in-minutes
subscribed-container-polling-frequency-secs
update-polling-frequency-secs
auto-update-polling-frequency-secs
max-sync-retry-interval-secs
databaseID
databaseName
onlineGeniusForMatchEnabled
TB,R,N,GisOnlineGeniusForMatchEnabled
playDataBatchIntervalInMinutes
subscribedContainerPollingFrequencySeconds
updatePollingFrequencySeconds
autoUpdatePollingFrequencySeconds
maxSyncRetryIntervalSeconds
ICMusicSubscriptionFairPlayKeyStatusDidChangeNotification
com.apple.itunescloud.ICMusicSubscriptionFairPlayKeyStatusDidChangeNotification
com.apple.iTunesCloud.ICMusicSubscriptionFairPlayController.calloutQueue
com.apple.iTunesCloud.ICMusicSubscriptionFairPlayController.fairPlaySerialQueue
T@"ICMusicSubscriptionFairPlayController",R
householdId
ICMusicSubscriptionLeaseDurationInterval
leaseDurationInSeconds
metrics
leaseInfoData
metricsDictionary
T@"NSData",&,N,V_data
@"NSData"24@?0@"NSData"8^@16
certificateURL
T@"NSURL",C,N,V_certificateURL
contentURI
T@"NSString",C,N,V_contentURI
leaseActionType
Tq,N,V_leaseActionType
T@"ICRequestContext",C,N,V_requestContext
rentalID
Tq,N,V_rentalID
skippedRentalCheckout
TB,N,V_skippedRentalCheckout
ITunesStoreRequest
TB,N,GisITunesStoreRequest,V_ITunesStoreRequest
serverPlaybackContextDataCreationHandler
T@?,C,N,V_serverPlaybackContextDataCreationHandler
shouldIncludeDeviceGUID
TB,N,V_shouldIncludeDeviceGUID
rental-id
skipped-rental-checkout
renew
start
stop
lease-action
fairplay-streaming-request
streaming-keys
fairplay-streaming-response
renew-after
expiration-time
playback-start-time
T@"ICSecureKeyDeliveryRequest",C,N,V_request
path
com.apple.itunescloud.ICEnvironmentMonitor.accessQueue
com.apple.itunescloud.ICEnvironmentMonitor.calloutQueue
UIApplicationDidEnterForegroundNotification
T@"ICEnvironmentMonitor",R
charging
TB,R,N,GisCharging,V_isCharging
networkType
Tq,R,N,V_networkType
lastKnownNetworkType
Tq,R,N,V_lastKnownNetworkType
remoteServerReachable
TB,R,N,GisRemoteServerReachable,V_remoteServerReachable
remoteServerLikelyReachable
TB,R,N,GisRemoteServerLikelyReachable,V_isRemoteServerLikelyReachable
currentNetworkLinkHighQuality
TB,R,N,GisCurrentNetworkLinkHighQuality,V_currentNetworkLinkHighQuality
currentNetworkLinkExpensive
TB,R,N,GisCurrentNetworkLinkExpensive,V_currentNetworkLinkExpensive
wifiAssociated
TB,R,N,GisWiFiAssociated,V_wifiAssociated
ethernetWired
TB,R,N,GisEthernetWired,V_ethernetWired
wiFiActive
TB,R,N,GisWiFiActive,V_isWiFiActive
networkConstrained
TB,R,N,GisNetworkConstrained,V_networkConstrained
currentThermalLevel
TQ,R,N,V_currentThermalLevel
currentBatteryLevel
Td,R,N,V_currentBatteryLevel
telephonyStatusIndicator
T@"NSString",R,C,N,V_telephonyStatusIndicator
telephonyOperatorName
T@"NSString",R,C,N,V_telephonyOperatorName
telephonyRegistrationStatus
T@"NSString",R,C,N,V_telephonyRegistrationStatus
com.apple.iTunesCloud.ICUserCredentialProvider.accessQueue
com.apple.iTunesCloud.ICUserCredentialProvider.calloutQueue
com.apple.iTunesCloud.ICUserCredentialProvider.delegationAccountUUIDOperationQueue
com.apple.iTunesCloud.ICUserCredentialProvider.delegationAccountUUIDSerialQueue
v44@?0@"ICUserIdentity"8@"ICDelegateToken"16@"NSString"24@"NSError"32B40
ICUserCredentialProvider.m
[credentialRequests count] > 0
T@"ICUserCredentialProvider",R
activeICloudAccountProperties
T@"ICUserIdentityProperties",C,N,V_activeICloudAccountProperties
credentialRequests
T@"NSArray",R,C,N,V_credentialRequests
delegationCredentialRequestToSpecificUserIdentity
T@"NSMapTable",&,N,V_delegationCredentialRequestToSpecificUserIdentity
delegationCredentialRequestToIdentityProperties
T@"NSMapTable",&,N,V_delegationCredentialRequestToIdentityProperties
delegationUserIdentityToUUIDs
T@"NSMutableDictionary",&,N,V_delegationUserIdentityToUUIDs
T@"ICUserIdentityStore",R,N
maximumQualityOfService
Tq,R,N,V_maximumQualityOfService
pendingPropertyLoadCredentialRequests
T@"NSMutableArray",&,N,V_pendingPropertyLoadCredentialRequests
pendingResponseCredentialRequests
T@"NSMutableArray",&,N,V_pendingResponseCredentialRequests
hasPendingResponses
 cloudID: %llu
 lyricsID: %@
 purchasedAdamID: %lli
 radioAdamID: %lli
 equivalencySourceAdamID: %lli
 subscriptionAdamID: %lli
ICPlayActivityEventItemIDsCloudID
ICPlayActivityEventItemIDsLyricsID
ICPlayActivityEventItemIDsPurchasedAdamID
ICPlayActivityEventItemIDsRadioAdamID
ICPlayActivityEventItemIDsEquivalencySourceAdamID
ICPlayActivityEventItemIDsSubscriptionAdamID
TQ,R,N,V_cloudID
T@"NSString",R,C,N,V_lyricsID
Tq,R,N,V_purchasedAdamID
Tq,R,N,V_radioAdamID
Tq,R,N,V_equivalencySourceAdamID
Tq,R,N,V_subscriptionAdamID
_ICMusicSubscriptionStatusAdditionalProperties
isMinor
hasFamily
hasFamilyGreaterThanOneMember
isHoH
Enabled
hasOfflineSlots
isInFreeTrial
isNotEligibleForFreeTrial
isPurchaser
source
Apple
Disabled
Discovery
Unlinked
Individual
Family
InvalidToken
terms
cellularOperatorName
sessionIdentifier
carrierBundlingErrorCode
isMinorAccountHolder
isHeadOfHousehold
isMatchEnabled
isEligibleForFreeTrial
statusType
isAdministrator
isDiscoveryModeEligible
termsStatusList
Eligible
NotEligible
NeedsManualVerification
 carrierBundlingErrorCode:%ld
<%@ %p statusType:%@ carrierBundlingStatusType:%@ reasonType:%@ sourceType:%@%@>
hasCatalogPlaybackCapability
hasAddToCloudLibraryCapability
dictionaryRepresentation
minorAccountHolder
TB,R,N,GisMinorAccountHolder,V_isMinorAccountHolder
TB,R,N,V_hasFamily
TB,R,N,V_hasFamilyGreaterThanOneMember
headOfHousehold
TB,R,N,GisHeadOfHousehold,V_isHeadOfHousehold
matchEnabled
TB,R,N,GisMatchEnabled,V_isMatchEnabled
TB,R,N,V_hasOfflineSlots
inFreeTrial
TB,R,N,GisInFreeTrial,V_isInFreeTrial
eligibleForFreeTrial
TB,R,N,GisEligibleForFreeTrial,V_isEligibleForFreeTrial
purchaser
TB,R,N,GisPurchaser,V_isPurchaser
Tq,R,N,V_reasonType
Tq,R,N,V_sourceType
Tq,R,N,V_statusType
administrator
TB,R,N,GisAdministrator,V_isAdministrator
discoveryModeEligible
TB,R,N,GisDiscoveryModeEligible,V_isDiscoveryModeEligible
T@"NSArray",R,C,N,V_termsStatusList
T@"NSString",R,C,N,V_phoneNumber
T@"NSString",R,C,N,V_cellularOperatorName
T@"NSString",R,C,N,V_sessionIdentifier
Tq,R,N,V_carrierBundlingErrorCode
cloudMusicServiceEnabled
TB,R,N,GisCloudMusicServiceEnabled
TB,D,N,GisMinorAccountHolder
TB,D,N
TB,D,N,GisHeadOfHousehold
TB,D,N,GisMatchEnabled
TB,D,N,GisInFreeTrial
TB,D,N,GisEligibleForFreeTrial
TB,D,N,GisPurchaser
TB,D,N,GisAdministrator
TB,D,N,GisDiscoveryModeEligible
Tq,N,V_statusCode
Store
latestTerms
agreedToTerms
acceptedVersion
Tq,R,N,V_acceptedVersion
Tq,R,N,V_currentVersion
ICWiFiManagerWiFiDidChangeNotification
ICWiFiManagerWiFiEnabledUserInfoKey
ICWiFiManagerWiFiAssociatedUserInfoKey
com.apple.amp.HomeSharing.HSWiFiManager.accessQueue
com.apple.wifi.plist
%s (%d)
wiFiEnabled
TB,N,GisWiFiEnabled,V_wiFiEnabled
wiFiAssociated
TB,N,GisWiFiAssociated,V_wiFiAssociated
; bundleIdentifier = "%@"
; processName = "%@"
; clientIdentifier = "%@"
; clientVersion = "%@"
; requestingBundleIdentifier = "%@"
; requestingBundleVersion = "%@"
; bagProfile = "%@"
; bagProfileVersion = "%@"
processName
clientVersion
bagProfile
bagProfileVersion
T@"ICClientInfo",R
T@"NSString",R,C,N,V_processName
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
kinds
size-limits
com.apple.itunescloud.ICNetworkConstraints
sections
settings
sectionId
com.apple.Music.main
settingsSwitches
T@"NSArray",R,N
wasSuccessful
TB,R,N,V_wasSuccessful
add-push-notification-type-url
parameters
Setting cached subscription status response for cache key %{public}@: %{public}@.
Removing cached subscription status response for cache key %{public}@.
Base cache key for subscription status cache remains unchanged: %{public}@.
Base cache key for subscription status cache updated from %{public}@ to %{public}@.
Posting %{public}@.
Received phone number did change notification. Updating base cache key for subscription status cache.
Received user identity store did change notification. Updating base cache key for subscription status cache.
Reloading subscription status cache due to external change notification
Posting local change notification as shouldTreatSubscriptionStatusAsExpired is set
%{public}@ failed to get user identity properties. err=%{public}@
%{public}@ received subscription response %{public}@
%{public}@ failed to import subscription keybag. err=%{public}@
ICCloudClientCloudService %p - Creating XPC Client Connection [started]
ICCloudClientCloudService %p - Creating XPC Client Connection [failed] - endpoint=%{public}@ - error=%{public}@
ICCloudClientCloudService %p - Creating XPC Client Connection [ended] - connection=%{public}@
ICCloudClientCloudService %p - Unable to create XPC Connection [no listener endpoint]
ICCloudClientCloudService %p - Connection to cloud availability service interrupted
ICCloudClientCloudService %p - Resetting XPC connection to nil
ICCloudClientCloudService %p - Connection to cloud availability service invalidated
ICAgeVerificationManager %p - ageVerificationStateForUserIdentity - Retrieving state [Disk cache] - Kicking off refresh - State=%@
ICAgeVerificationManager %p - ageVerificationStateForUserIdentity - Retrieving state [In-memory cache] - State=%@
ICAgeVerificationManager - Missing critical entitlement for age verification: "apple" - "keychain-access-groups"
ICAgeVerificationManager %p - Received ICUserIdentityStoreDidChangeNotification - Refreshing state for active user
ICAgeVerificationManager %p - Error retrieving properties for account %{public}@ during age verification: %{public}@ - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager %p - Error retrieving bag during age verification: %{public}@ - Explicit content allowed and marked with 'E'.
ICAgeVerificationManager %p - There are no properties for account %{public}@ - Explicit content allowed.
ICAgeVerificationManager %p - Explicit content allowed.
ICAgeVerificationManager %p - Performing age verification
%{public}@ - Expiration date provided from ICDefaults: %{time_t}zd
%{public}@ - Expiration date provided from ACAccount: %{time_t}zd
ICAgeVerificationManager %p - Age verification state: %{public}@
ICAgeVerificationManager %p - Bag key(s) missing for age verification: %{public}@ - Explicit content allowed and marked with 'E'.
%{public}@ Starting system service...
%{public}@ Requesting a sync because the system version has changed from %{public}@ --> %{public}@
%{public}@ Stopping system service...
%{public}@ fetching all messages
%{public}@ Failed to connect to remote service. err=%{public}@
%{public}@ Failed to load all messages. err=%{public}@
%{public}@ fetching messages for bundle identifiers %{public}@
%{public}@ Failed to load messages for bundle identifiers %{public}@. err=%{public}@
%{public}@ fetching message with identifier %{public}@ for bundle identifier %{public}@
%{public}@ Failed to load message %{public}@ for bundle identifier %{public}@. err=%{public}@
%{public}@ adding message: %{public}@
Failed to add message %{public}@. err=%{public}@
%{public}@ updating message %{public}@
Failed to update message %{public}@. err=%{public}@
%{public}@ removing message %{public}@ for bundle identifier %{public}@
%{public}@ removing all messages for bundle identifier %{public}@
%{public}@ Performing sync
%{public}@ Performing reset
Failed to reset message store. err=%{public}@
%{public}@ Reporting event for message identifier %{public}@: %{public}@
%{public}@ Failed to add message event. err=%{public}@
%{public}@ Added message event %{public}@ for message 
%{public}@ Flushing message events
%{public}@ Not flushing events because privacy acknowledgement is required
Failed to load message events. err=%{public}@
%{public}@ Flushing %d events
Failed to flush message event %{public}@. err=%{public}@
Failed to remove completed event %{public}@. err=%{public}@
%{public}@ downloading resources for message %{public}@:%{public}@
%{public}@ clearing cached resources for message %{public}@:%{public}@
Failed to get account properties. err=%{public}@
Failed to get message store account property. err=%{public}@
%{public}@ account changed from %lld --> %lld - performing reset
%{public}@ Failed to reset message store. err=%{public}@
%{public}@ Failed to update message store account property. err=%{public}@
%{public}@ Failed to sync after the reset. err=%{public}@
Connection to in-app message service interrupted
Connection to in-app message service invalidated
%{public}@ Adjusting bag refresh interval of %llds --> 7 days
%{public}@ Setting timer to perform periodic poll for %llds (+/- %llds)
%{public}@ Performing periodic sync
%{public}@ Periodic sync completed. err=%{public}@
%{public}@ Failed to update sync pending flag. err=%{public}@
%{public}@ Failed to get properties for active account for sync. err=%{public}@
%{public}@ Not performing sync because there's no active account
%{public}@ Not syncing because privacy acknowledgement is required
%{public}@ Failed to get current server revision from message store. err=%{public}@
%{public}@ Sync request failed. err=%{public}@
%{public}@ Sync completed. err=%{public}@
%{public}@ Ignoring sync command we've already applied (serial# %lld, currentRevision=%lld)
%{public}@ Processing sync command #%lld: %{public}@ %{public}@
%{public}@ Failed to process sync command. err=%{public}@
%{public}@ Finished processing sync commands. currentSyncRevision=%lld
%{public}@ Failed to add message %{public}@. err=%{public}@
%{public}@ Processing local user notification in message %{public}@
%{public}@ Not posting local notification in message %{public}@ because the target app is in the foreground
%{public}@ Ignoring local notification in message %{public}@ because the notification string was not provided
%{public}@ Failed to parse notification for message %{public}@. err=%{public}@, payload=%{public}@
%{public}@ Failed to process notification for message %{public}@. payload=%{public}@
%{public}@ Failed to remove message %{public}@. err=%{public}@
%{public}@ Failed to remove message metadata for identifier %{public}@. err=%{public}@
%{public}@ removing user notifications with identifier %{public}@
%{public}@ Failed to gather messages to remove - some additional cleanup will be skipped. err=%{public}@
%{public}@ Failed to remove messages for bundle identifier %{public}@. err=%{public}@
%{public}@ Failed to remove message metadata for bundle identifier %{public}@. err=%{public}@
%{public}@ Had pending sync - retrying now
%{public}@ failed to fetch message %{public}@:%{public}@ to set the download setting on. err=%{public}@
%{public}@ failed to update message %{public}@:%{public}@ with the updated download setting. err=%{public}@
%{public}@ Initiating downloads for messages marked for caching
%{public}@ failed to load messages to check for downloads. err=%{public}@
%{public}@ Skipping downloads for message %{public}@:%{public}@ as its not allowed on the current network type (%d)
%{public}@ failed to fetch message %{public}@:%{public}@ to set the download flag on. err=%{public}@
%{public}@ base resource url missing from configuration - skipping download
%{public}@ Downloading web archive for message %{public}@:%{public}@
%{public}@ failed to download web archive for message %{public}@. err=%{public}@
%{public}@ Downloading template file for message %{public}@:%{public}@
%{public}@ failed to download template for message %{public}@. err=%{public}@
%{public}@ Downloading image %{public}@ for message %{public}@:%{public}@
%{public}@ failed to download image %{public}@ for message %{public}@. err=%{public}@
%{public}@ Downloaded %d resources for message %{public}@:%{public}@
%{public}@ failed to fetch message %{public}@ to update with cached resource locations. err=%{public}@
%{public}@ failed to update resource cache locations for message %{public}@. err=%{public}@
%{public}@ failed to load bag for configuration. err=%{public}@
%{public}@ failed to load configuration from bag
%{public}@ Purging orphaned cache directory %{public}@
%{public}@ Connection interrupted
%{public}@ Connection invalidated
%{public}@: Did accept connection with service: %{public}@ input: %{public}@ output: %{public}@
%{public}@: Remote server advertisement success with service: %{public}@
%{public}@: Remote server advertisement failed with service: %{public}@, error: %{public}@, retrying in %f seconds...
%{public}@: Created net service %{public}@.
%{public}@: Published net service %{public}@.
%{public}@: Retrieved security settings: %{public}@ with error: %{public}@
%{public}@: Published net service TXTRecord: %{public}@
%{public}@: Stopped net service %{public}@.
Asset download complete. err=%@, destinationPath=%@
%{public}@ Failed to decode compressed aps payload data.
%{public}@ Failed to decompress aps payload data.
%{public}@ Failed to deserialize aps payload data. err=%{public}@
%{public}@ unknown APS format %{public}@. assuming dictionary
Set cloud add-to-playlist behavior failed with error: %{public}@
Must provide at least a playlist name when creating a playlist.
Create cloud playlist failed with error: %{public}@
SDK: Create cloud playlist failed with error: %{public}@
Set cloud playlist properties failed with error: %{public}@
Add store item to playlist failed with error: %{public}@
Add saga id to playlist failed with error: %{public}@
SDK: Add store item to playlist failed with error: %{public}@
Publish cloud playlist failed with error: %{public}@
Upload playlist artwork failed with error: %{public}@
Update subscribed playlists failed with error: %{public}@
Update pinned subscribed playlists failed with error: %{public}@
Must provide a valid adam ID (%lld) adding to library.
Add store item to library failed with error: %{public}@
SDK: Add store item to library failed with error: %{public}@
Add store playlist to library failed with error: %{public}@
Remove cloud playlists from library failed with error: %{public}@
Remove cloud items from library failed with error: %{public}@
Hide items from purchase history failed with error: %{public}@
Create cloud genius playlist failed with error: %{public}@
Failed to create Genius playlist with error: %{public}@
<ICCloudClient %p> - Attempting cloud library authenticate (start initial import with explicit user action, merge policy=%d, shouldStartInitialImport=%{BOOL}u, isExplicitUserAction = %{BOOL}u)
Could not get remote object to authenticate and start initial Saga import - error=%{public}@
Could not authenticate and start initial import of Saga library - error=%{public}@
Successfully authenticated and finished Saga import.
<ICCloudClient %p> - Attempting disable cloud library
Could not get remote object to deauth Saga library - error=%{public}@
Could not deauthenticate Saga library and disable active locker account - error=%{public}@.
Finished deauthenticating Saga library
Update Jalisco Library failed with error: %{public}@
ICCloudClient %p - becomeActive - Error retrieving xpc service - error=%{public}@
Remove Jalisco failed with error: %{public}@
Checking if mediakind=%d is disabled failed with error=%{public}@
Could not get if mediaKind=%d is disabled for Jalisco sync. error=%{public}@, isMediaKindDisabled=%d
mediaKind=%d is %{public}s for Jalisco sync
Sending request to update Cloud Library...
Can't update cloud library using current network - skipping
Update Match Library failed with error: %{public}@
Update Match Library failed with status: %ld
Sending deauthenticate request...
Deauthenticate failed with error: %{public}@
Sending request to load Learn More URL from bag...
Load Learn More failed with error: %{public}@
Sending request to load Genius CUID...
Load Genius CUID failed with error: %{public}@
Sending request to set Genius CUID...
Set Genius CUID failed with error: %{public}@
Sending request to enable Jalisco Genius...
Enable Genius failed with error: %{public}@
Sending request to update Jalisco Genius data...
Update Genius Data failed with error: %{public}@
Sending request to cancel the update Jalisco genius data operation in progress...
Cancel Update Genius Data failed with error: %{public}@
Send request to check status of Jalisco genius operation...
Load Update Genius Status failed with error: %{public}@
Sending request to disable Jalisco Genius...
Disable Genius failed with error: %{public}@
loading last known iCML state change failed with error: %{public}@
Sending request to import item artwork for purchase history ID %llu...
Import Item Artwork failed with error: %{public}@
Skipping request to import item screenshot for purchase history ID %llu due to insufficient network conditions
Sending request to import screenshot for purchase history ID %llu...
Import Purchase History Screenshot failed with error: %{public}@
Sending request to import item artwork for saga ID %llu...
Sending request to import screenshot for saga ID %llu...
Import Cloud Screenshot failed with error: %{public}@
Sending request to import container artwork for saga ID %llu...
Import Container Artwork failed with error: %{public}@
Sending request to import subscription artwork for item persistent ID %lld...
Import Subscription Item Artwork failed with error: %{public}@
Sending request to import subscription screenshot for item persistent ID %lld...
Import Subscription Screenshot failed with error: %{public}@
Sending request to import subscription artwork for container persistent ID %lld...
Import Subscription Container Artwork with error: %{public}@
Sending request to artist hero image hero for item persistent ID %lld...
Import Artist Hero Artwork failed with error: %{public}@
Sending request to import album artist hero image for item persistent ID %lld...
Import Album Artist Hero Artwork failed with error: %{public}@
Sending request to deprioritize item artwork import with purchase history ID %llu...
Failed to deprioritize item artwork import with purchase history ID %llu with error: %{public}@
Sending request to deprioritize screenshot artwork import with purchase history ID %llu...
Failed to deprioritize screenshot artwork import with purchase history ID %llu with error: %{public}@
Sending request to deprioritize item artwork import with saga ID %llu...
Failed to deprioritize item artwork import with saga ID %llu with error: %{public}@
Sending request to deprioritize screenshot import with saga ID %llu...
Failed to deprioritize screenshot import with saga ID %llu with error: %{public}@
Sending request to deprioritize container artwork import with saga ID %llu...
Failed to deprioritize container artwork import with saga ID %llu with error: %{public}@
Sending request to deprioritize subscription item artwork import with persistent ID %lld...
Failed to deprioritize subscription item artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize subscription screenshot import with persistent ID %lld...
Failed to deprioritize subscription screenshot import with persistent ID %lld with error: %{public}@
Sending request to deprioritize subscription container artwork import with persistent ID %lld...
Failed to deprioritize subscription container artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize artist hero artwork import with persistent ID %lld...
Failed to deprioritize artist hero artwork import with persistent ID %lld with error: %{public}@
Sending request to deprioritize album artist hero artwork import with persistent ID %lld...
Failed to deprioritize album artist hero artwork import with persistent ID %lld with error: %{public}@
Load Artwork Info failed with error: %{public}@
Load Artwork Info for purchase history screenshot failed with error: %{public}@
Load Container Artwork Info failed with error: %{public}@
Load Subscription Item Artwork Info failed with error: %{public}@
Load Subscription Screenshot Artwork Info failed with error: %{public}@
Load Subscription Container Artwork Info failed with error: %{public}@
loadMissingArtwork failed with error: %{public}@
Sending load genius items request for saga ID %llu...
Load Genius Items failed with error: %{public}@
Load Update In Progress failed with error: %{public}@
Saga update In Progress failed with error: %{public}@
Jalisco load Update In Progress failed with error: %{public}@
Saga update progress failed with error: %{public}@
Jalisco update progress failed with error: %{public}@
Setting item properties %{public}@ for purchaseHistoryID %llu...
Failed to set item properties with error: %{public}@
Setting item properties %{public}@ for saga ID %llu...
Failed to update cloud item properties with error: %{public}@
Failed to update cloud plaulist properties with error: %{public}@
Setting album properties %{public}@ for persistent ID %llu...
Failed to set collection properties with error: %{public}@
Sending request to update artist hero images...
Failed to update artist hero images with error: %{public}@
Load Books failed with error: %{public}@
Updating user defaults with automaticDownloadsEnabled=1
Not updating automatic download kinds by %{BOOL}u media kind music. Could not load active store account: error=%{public}@
Automatic downloads are %{BOOL}u for media kind music
Not able to determine if automatic downloads are enabled for media kind music. Could not load active store account: error=%{public}@
Failed to list cloud server operations with error: %{public}@
%{public}@ - Receveived Saga update in progress notification [Handler present: %{BOOL}u
%{public}@ - Receveived Jalisco update in progress notification [Handler present: %{BOOL}u
%{public}@ - isAuthenticatedWithQueue: - Error retrieving properties - userIdentity=%@ - error=%{public}@
%{public}@ - isAuthenticatedWithQueue: - isAuthenticated=%{BOOL}u
MIGRATION: isMatchAuthenticated: %d, isMatchCellularDataEnabled: %d, hasAutomaticDownloads: %d, isAutomaticDownloadCellularDataEnabled: %d. New cellular data state: %d
MIGRATION: migrating store auto download setting to music download setting: %d
%{public}@ Failed to obtain remote proxy to perform remote request operation. error = %{public}@.
Invalidating connection to remote request execution service.
Creating connection to remote request execution service.
Connection to remote request execution service interrupted.
Connection to remote request execution service invalidated.
Override may not be less than 120000
Overridden to %lld milis.
warning: ICUserIdentity - Resolving DSID without an externally supplied identity store; if encoding the identity into an NSCoder, make sure to use -[NSCoder ic_encodeUserIdentity:withStore:forKey:]. Falling back to using [ICUserIdentityStore defaultIdentityStore].
ICUserIdentity - Unable to retrieve DSID for userIdentity=%{public}@ - error=%{public}@
%{public}@ failed - no properties for account %{public}@
%{public}@ failed to parse token response
%{public}@ no token in library auth service response: %{public}@
%{public}@ received error %{public}@. http status code=%d
%{public}@ Returned expired URL bag, so forcing a refresh now for next time
%{public}@ Will fetch bag for requestContext %{public}@
%{public}@ Notifying %lu callers that we got the bag for context %{public}@
%{public}@ Invalidating all entries in url bag cache by expiring them
%{public}@ fetched new bag which expires in %fs (expiration date: %{time_t}zd).
%{public}@ user identity changed - invalidating bag cache
%{public}@ Failed to load properties for account %{public}@. err=%{public}@
%{public}@ Failed to load sslToken for account DSID %@ - skipping
%{public}@ Failed to serialize request body. err=%{public}@
%{public}@ Recevied token response %@
%{public}@ Failed to load playback endpoint URL from the bag
Could not truncate delegate account store for reset
Could not setup delegate account store for reset: %{public}@
Could not recreate delegate account store: %{public}@
Failed to obtain system free space. err=%{public}@
%{public}@: Created child operation queue: %{public}@.
%{public}@ performing authentication validation for user identity %{public}@
%{public}@ Failed to fetch the bag. err=%{public}@
%{public}@ Validation failed because the subscription status url is missing from the bag
%{public}@ Failed to fetch subscription status. err=%{public}@
%{public}@ Subscription status load failed due to invalid response.
%{public}@ Subscription status response parsing failed with error: %{public}@.
%{public}@ authentication validation completed successfully
%{public}@ Received invalidToken response - attempting to authenticate
%{public}@ Authentication complete. authenticated = %{BOOL}u, err = %{public}@
APPLE_FEATURE_TINKER
active paired device pairing id %{public}@
paired device pairing id %{public}@
Found %d paired device ids
failed to obtain paired device GUID - you may need an entitlement for this process
failed to obtain paired device GUID because there is no active paired device
failed to obtain CompanionMusicGUID - you may need an entitlement for this process
failed to obtain pairedDeviceMediaGUID because there is no active paired device
%{public}@: Starting XPC service.
%{public}@ Found service %{public}@
%{public}@ Removing service %{public}@
[ICDelegationProviderService] Connection interrupted.
[ICDelegationProviderService] Connection invalidated.
%{public}@: Connection %{public}@ did add assertion: %{public}@
%{public}@: Connection %{public}@ did remove assertion: %{public}@
%{public}@: Delegation account UUIDs did change for with notification: %{public}@
%{public}@: Updating browsing status
%{public}@: Searching for services with browser: %{public}@
%{public}@: Stopping service search with browser: %{public}@
%{public}@: Updating delegation UUIDs [discovered services] - currentUUIDs=%{public}@ - discoveredServices=%{public}@
   |_ Processing service %{public}@ - delegationAccountUUIDs=%{public}@
      Processing service %{public}@ - eligibleDelegationAccountUUIDs=%{public}@
      Processing service %{public}@ - activeSessions=%{public}@
      Processing service %{public}@ - %lu new delegated accounts - delegationAccountUUIDs=%{public}@
%{public}@: Creating delegation provider session [new delegated account] - userIdentity=%{public}@ - delegationAccountUUIDs=%{public}@ -  netService=%{public}@
iTunes accounts have changed - invalidating user identity cache
ICHTTPArchive directory '%{public}@' is not a directory! Disabling archiving
%{public}@: Instantiated MusicKit request context with a default client info.
This is not recommended, as you need to be explicit about the client identifier and client version your application is meant to use, per agreement with the AMP Core Services team.
Nevertheless, proceeding with clientIdentifier = "%{public}@" and clientVersion = "%{public}@".
%{public}@ Performing request with seed itemID %lld, isLibraryID=%d
%{public}@ Failed to serialize recommended content request. err= %{public}@
%{public}@ Failed to fetch recommended content. err=%{public}@
%{public}@ no response body - treating as failure
%{public}@ registering APNS token %{public}@
%{public}@ Failed to load url bag. err=%{public}@
%{public}@ Missing register-success url in bag - skipping
%{public}@ request failed. err=%{public}@
%{public}@ recieved response %{public}@
%{public}@ Performing request with storeID %lld, affiliate %{public}@
%{public}@ No active iTunes account - failing request
%{public}@ Finished request with err %{public}@
%{public}@ Performing platform request of %ld items with profile '%{public}@'
%{public}@ Request completed with %ld responses. err=%{public}@
%{public}@ Returning last known subscription status %{public}@ with error %{public}@ for: %{public}@
%{public}@ Using cached subscription status %{public}@ for: %{public}@
%{public}@ Aborted fetching subscription status because privacy link needs to be displayed first.
%{public}@ Subscription status load failed for %{public}@ due to URL bag load failure: %{public}@
%{public}@ Subscription status load failed for %{public}@ due to missing the key in the bag.
%{public}@ Skipping loading of carrier bundling status because the combination (MCC: %{public}@, MNC: %{public}@) for the current active SIM card is not whitelisted.
%{public}@ Subscription status load failed for %{public}@ due to invalid response.
%{public}@ Received subscription status response for %{public}@: %{public}@
%{public}@ Failed parsing subscription status response for %{public}@ with error: %{public}@.
%{public}@ Received invalid token response for %{public}@, authenticating...
%{public}@ Authentication failed with error: %{public}@
%{public}@ Received invalid token response but not allowed to authenticate for: %{public}@
%{public}@ Subscription status load failed for %{public}@ due to response error: %{public}@
%{public}@ %{public}@ cancelling request...
%{public}@ %{public}@ failed to cancel request because it could not be found
%{public}@ Pausing...
%{public}@ Resuming...
%{public}@ finished task %{public}@ for request %{public}@ [%lld sent, %lld rcvd in %.3fs (%lld bytes/s)]. err=%{public}@
%{public}@ no request for completed task %{public}@ - ignoring
%{public}@ %{public}@ exceeded the redirect limit - aborting
%{public}@ %{public}@ handling redirect response --> %{public}@
%{public}@ %{public}@ Failed to process redirect response. err=%{public}@
%{public}@ either response %{public}@ or new request %{public}@ is invalid - ignoring
%{public}@ no request for redirected task %{public}@ - ignoring
%{public}@ %{public}@ received response for task %{public}@: %{public}@
%{public}@ %{public}@ received response for task %{public}@: %d
%{public}@ no request for data task %{public}@ - ignoring
%@ %{public}@ failed to link download file %{public}@ --> %{public}@
%{public}@ enqueueing new request %{public}@ with url %{public}@
%{public}@ Checking request queue. _activeRequests = %{public}@, _pendingRequests = %{public}@
%{public}@ Activating request %{public}@
%{public}@ %{public}@ failed to build URL request. err=%{public}@
%{public}@ %{public}@ created URL task %{public}@ (attempt %lu/%lu) for request: %{public}@
%{public}@
%{public}@ %{public}@ created URL task %{public}@ (attempt %lu/%lu) for request: %{public}@
%{public}@ retrying request %{public}@ in %f seconds (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu)
%{public}@ rejecting retry for request %{public}@ (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu)
%{public}@ Checking for timeouts
%{public}@ timing out request %{public}@
%{public}@ Scheduling next timeout check in %.2fs
%{public}@ Canceling timeout timer
Error reading restore configuration from bag
Asset type %{public}@ is not present in allowed restore kinds (%{public}@)
StoreMatchStatus is not in acceptable list - allowedMatchStatus=%{public}@, itemMatchStatus=%lld
Error reading restore URL from bag
Could not get properties for %{public}@, error=%{public}@
Invalid userName (%{public}@), DSID (%{public}@)
Error serializing request body data
%{public}@ Serializing request body failed with error: %{public}@
%{public}@ Error %{public}@ completing %lu play activity events with session token:%llu flushResult:%lu
%{public}@ Completed %lu play activity events with session token:%llu flushResult:%lu with error %{public}@
%{public}@  Error %{public}@ flushing play activity events for %{public}@
%{public}@  Finished flushing play activity events for %{public}@ with error %{public}@
%{public}@ Recording play activity events: %@
%{public}@ Error %{public}@ recording %lu play activity events
%{public}@ Finished recording %lu play activity events with error %{public}@
Removing play events up to revision: %llu
%{public}@ Error %{public}@ removing play activity events upto revision %llu
%{public}@ Finished removing play activity events upto revision %llu with error %{public}@
%{public}@ Error %{public}@ setting revision %llu, version token %{public}@ for end point identifier %{public}@
%{public}@ Finished setting revision %llu, version token %{public}@ for end point identifier %{public}@ with error %{public}@
%{public}@ Error %{public}@ getting play activity events for end point identifier %{public}@
%{public}@ Finished getting %lu play activity events for end point identifier %{public}@
Completing pending play events for revision index set: %@ session token: %llu with result: %lu
Session information: %@
Removing pending revisions index set %@ from sessionInformation revisions index set: %@
Resulting index set: %@
Existing additional pending revisions index set: %@
New additional pending revisions index set from flush success: %@
New additional pending revisions index set from flush failure: %@
Revisions version token has changed, clearing out.
Connection to daemon play activity controller interrupted.
Connection to daemon play activity controller invalidated.
%{public}@: Failed to unarchive revision information. Error = %{public}@
%{public}@: Failed to archive revision information. Error = %{public}@
%{public}@ Disabling push notifications for type %{public}@
%{public}@ Missing remove-push-notification-type-url url in bag - skipping
%{public}@ removePushNotification request failed. err=%{public}@
%{public}@ removePushNotification request returned response %{public}@
%{public}@: Starting lease session...
%{public}@: Start: Successfully started.
%{public}@: Start: Failed to import lease response data with error: %{public}@
%{public}@: Start: Client data missing from response.
%{public}@: Start: Received response error: %{public}@
%{public}@: Start: Failed to generate FairPlay sync session with error: %{public}@
%{public}@: Start: Failed to retrieve a valid DSID from the identity store.
%{public}@: Start: Lease session already started.
%{public}@: Stopping lease session...
%{public}@: Stop: Successfully ended lease sync.
%{public}@: Stop: FairPlay failed ending lease sync with error: %{public}@.
%{public}@: Lease session already stopped, returning success.
%{public}@: Lease renew timer fired.
%{public}@: Renew: Successfully processed renew response data.
%{public}@: Renew: Failed to process response data with error: %{public}@.
%{public}@: Renew: No client data in response, treating as successful.
%{public}@: Renew: Response failed with error: %{public}@
%{public}@: Renew: Failed to generate renew request data with error: %{public}@
%{public}@: Lease renew invalid because the session is no longer running.
%{public}@: Skipping renewal timer scheduling with automatic refresh count: %li, leaseExpirationDate: %{public}@, isRunning: %{public}@
%{public}@: Scheduling lease renewal in %f seconds with expiration date of: %{public}@.
Error getting deviceGUID
failed to serialize body data. err=%{public}@, bodyDictionary=%{public}@
%{public}@: Invalid request. %{public}@
%{public}@: Not getting music user token because privacy acknowledgement is required.
%{public}@: No active account. Failing request.
%{public}@: shouldIgnoreCache = YES.
%{public}@: Found music user token in cache.
%{public}@: Did not find music user token in cache.
%{public}@: Failed to get bag with error %{public}@.
%{public}@: Got bag with %{public}@.
%{public}@: Did not find URL to get music user token.
%{public}@: Finished with error %{public}@ and statusCode %ld.
%{public}@: Finished with statusCode %ld.
%{public}@: Music user token was revoked. Error description: %{public}@
%{public}@: %{public}@
%{public}@: Server reported success, but %{public}@ was not a string: %{public}@ (of type %{public}@).
%{public}@: Music user token: "%@".
%{public}@: Revoked TCC access for %{public}@ with status %{bool}u.
Failed to obtain device MAC address
Getting MAC address is not supported on this platform
Failed to obtain device class from MobileGestalt
[%{public}@] flushed %lu play events with result %d isFinalResult: %d
[%{public}@] completed pending play events finished with error: %{public}@ for session token: %llu flushResult: %lu
[%{public}@] removing flushed play events finished with error: %{public}@
[%{public}@] Operation has been cancelled, finishing.
[%{public}@] Received play event acquisition error: %{public}@.
[%{public}@] No pending play events, finishing.
[%{public}@] Unexpected empty store account IDs, finishing.
[%{public}@] Adding PAF event %{public}@.
[%{public}@] error (%{public}@ serializing request data (%{public}@).
[%{public}@] error compressing request data
[%{public}@] Flush %d PAF events finished with HTTP code %ld
[%{public}@] MALFORMED PAF EVENTS 
[%{public}@] MALFORMED PAF EVENTS=%{public}@, requestData=%{public}@
[%{public}@] Uploading malformed PAF events
[%{public}@] response is NOT of kind NSHTTPURLResponse
[%{public}@] operation finished with error %{public}@, HTTTP statusCode %ld, parsedResponseBody %{public}@
[%{public}@] Failed to resolve a URL request for override headers with error: %{public}@
[%{public}@] Post URL missing from bag
[%{public}@] Failed to load URL bag with error: %{public}@
%{public}@ - Provided expiration date is nil
%{public}@ - Age verification status has expired
%{public}@ - Age verification status is current
ACAccountStore %p - Error retrieving iTunesStore accounts. err=%{public}@
ACAccountStore %p - Error retrieving all store accounts, err=%{public}@
ACAccountStore %p - Error updating active bit for account %{public}@. err=%{public}@
active store account does not have the locker bit set - returning nil
Setting %{public}@ as the active locker account
Removing %{public}@ as the active locker account
ACAccountStore %p - Error setting active locker account %{public}@. err=%{public}@
ACAccountStore %p - Error fetching primary apple account. err=%{public}@
ACAccountStore %p - Error retrieving store account for DSID %{public}@. err=%{public}@
ACAccountStore %p - Error retrieving store account type. err=%{public}@
ACAccountStore %p - Error retrieving store account for home ID %{public}@. err=%{public}@
ACAccountStore %p - Error retrieving local store account. err=%{public}@
Failed to serialize body data. error=%{public}@, bodyDictionary=%{public}@
ICAgeVerificationState - cachedStateForDSID: - Reading state from disk - DSID=%@
ICAgeVerificationState - cachedStateForDSID: - Creating default state [No cache found] - DSID=%@
ICAgeVerificationState - cachedStateForDSID: - No cached state [Unactionable DSID] - DSID=%@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to error in response body: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing header enrichment URL in response body: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing silent SMS message or number in response body: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to URL bag load failure: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to missing the key in the bag.
%{public}@ Encountered error trying to serialize body data for %{public}@: %{public}@.
%{public}@ Sending header enrichment response.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ error while sending header enrichment response: %{public}@
%{public}@ Carrier bundling eligibility operation failed for %{public}@ due to invalid response.
%{public}@ Got carrier bundling response for %{public}@ with body: %{public}@
%{public}@ Sending header enrichment request.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ because header enrichment failed with error: %{public}@.
%{public}@ Performing delayed retry after %{public}f seconds: still needs header enrichment.
%{public}@ Sending preflight request.
%{public}@ Carrier bundling eligibility operation failed for %{public}@ error while issuing preflight request: %{public}@
%{public}@ Silent SMS succeeded.
%{public}@ Failed to send silent SMS for %{public}@.
%{public}@ Performing delayed retry after %{public}f seconds: still needs silent SMS.
Failed to create user notification
failed to find user notification button for responseFlags %lu
Performing Buy button action with params %{public}@
Failed to perform buy button action. err=%{public}@
missing action URL in Goto button action - skipping
unknown Goto button action subtarget %{public}@
Received darwin notification: %{public}@
Failed to weak link symbol BYSetupAssistantLaunchedDarwinNotification
Registering for darwin notification: %{public}@
Failed to weak link symbol BYSetupAssistantFinishedDarwinNotification
Setup assistant needs to run: %d
Could not determine if setup assistant needs to run
Device %{public}@ has completed setup and initial sync
Running %d blocks of type %d
%{public}@ Performing %{public}@ authentication for account %{public}@
%{public}@ No account provided - skipping verification
%{public}@ Authentication task complete. err=%{public}@
%{public}@ Retrieving account notifications switches.
%{public}@ Successfully retrieved account notifications switches.
%{public}@ Setting account notifications switches to: %{BOOL}u.
%{public}@ Successfully retrieved account notifications switches response.
%{public}@ Cacheing show in library switch as %{BOOL}u.
%{public}@: Encountered error: %{public}@
%{public}@: Received data of length: %li.
%{public}@: Finished reading.
%{public}@: Writing data of length: %li
%{public}@: Sending request message: %@
%{public}@: Sending response message: %@
%{public}@: Stream did close.
%{public}@: Received message: %@
%{public}@ failed to load account properties. err=%{public}@
%{public}@ failed to load bag. err=%{public}@
%{public}@ failed to find bag key for url endpoint
%{public}@ invalid message parm: {%{public}@ : %{public}@}
%{public}@ failed to serialize request object
%{public}@ Log event request failed. err=%{public}@
Request %{public}@ issued before before first unlock, returning error.
%{public}@ - buildURLRequestWithCompletionHandler [Delegated identity found] - delegatedIdentity=%@
%{public}@ - buildURLRequestWithCompletionHandler - Adding delegation info to builder - delegatedDSID=%@ - delegatedToken=%@
%{public}@ Building %{public}s store URL request
%{public}@ - buildStoreURLRequestWithURLRequest:properties:completionHandler: - Delegation header [dsid] [%@: %@]
%{public}@ - buildStoreURLRequestWithURLRequest:properties:completionHandler: - Delegation header [token] [%@: %@]
%{public}@ failed to sign request. err=%{public}@
%{public}@ creating mescal signature for request. configuration=%{public}@
%{public}@ -- Error creating database, removing if possible...: %@ -- %@
%{public}@ -- Removing database successful, attempting to recreate...: %@ -- %@
%{public}@ -- Error creating database for a second time, bailing out: %@
%{public}@ -- Error removing database: %@ -- %@
%{public}@ -- Error creating directory: %@ -- %@
Failed to query for revisions index set. err=%{public}@
Failed to set database property ('%{public}@' = '%{public}@'). err=%{public}@
Failed to delete database property '%{public}@'. err=%{public}@
Failed to get database property '%{public}@'. err=%{public}@
RemoveDRM operation complete. err=%{public}@, resultInfo=%{public}@
%{public}@: listenerEndpointForService - XPC Error retrieving endpoint [Attempt %ld of %ld] - service=%{public}@[%ld] - error=%{public}@
%{public}@: listenerEndpointForService - XPC Error [no listener endpoint for service] - service=%{public}@[%ld] - error=%{public}@
%{public}@: listenerEndpointForService [done with error] - service=%{public}@[%ld] - endpoint=%{public}@ - error=%{public}@
%{public}@: listenerEndpointForService [done] - service=%{public}@[%ld] - endpoint=%{public}@
%{public}@: listenerEndpointProviderConnection [started]
%{public}@: listenerEndpointProviderConnection [done] - connection:%{public}@
%{public}@: Opening with security settings: %@
%{public}@: Finishing pairing session with error: %{public}@
%{public}@: Failed to derive output key (OSStatus = %li)
%{public}@: Failed to derive input key (OSStatus = %li)
%{public}@: Passing data of length %li to pairing session
%{public}@: Error returned from PairingSessionExchange: %i
%{public}@: Registered new bag observer with token: %{public}@.
%{public}@: Removed bag observer with token: %{public}@.
%{public}@: Invalidated timer for bag expiration.
%{public}@: Bag expiration date is in the past: %{public}@. Not scheduling timer for bag expiration.
%{public}@: Scheduling timer for bag expiration for date %{public}@; i.e. for %.1f seconds.
%{public}@: Bag expiration timer did fire.
%{public}@: Beginning to observe bag.
%{public}@: Stopped observing bag.
%{public}@: Handling %{public}@.
%{public}@: Requesting bag with policy %{public}@.
%{public}@: Failed to fetch bag with error: %{public}@.
%{public}@: Bag did change: %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@). About to invoke %llu observation handler%s.
%{public}@: Bag did not change. Skipping invoking observation handlers.
%{public}@: Invoking observation handler with token %{public}@; bag = %{public}@.
%{public}@: Handling network reachability change; isRemoteServerLikelyReachable = %{BOOL}u.
%{public}@: Deferring to %{public}@ to process initial response with status code %ld for %{public}@.
%{public}@: Invalidating developer token upon processing completed response with status code %ld.
%{public}@: Invalidating developer token upon processing completed response with status code %ld, after considering generic response handler.
%{public}@: Invalidating user token upon processing completed response with status code %ld, after considering generic response handler.
%{public}@: Completed processing response %{public}@ with error %{public}@.
HTTP response=%{public}@
body=%{public}@
%{public}@: Completed processing response %{public}@.
%{public}@: Deferring to %{public}@ to process completed response with status code %ld for %{public}@.
%{public}@: Retrying request after successfully invalidating developer token.
%{public}@: Encountered error while processing initial response %{public}@. %{public}@. Underlying error: %{public}@.
%{public}@: Retrying request after successfully invalidating music user token.
[%{public}@] Finishing.
[%{public}@] Response has invalid format
[%{public}@] Response returned error: %{public}@
[%{public}@] Missing authorize machine URL bag key
%{public}@ failed to get identity properties for token request. err=%{public}@
%{public}@ not fetching library token because there's no active account
%{public}@ Failed to gather DSIDs from the account store to fetch tokens for. err=%{public}@
%{public}@ Skipping account %{public}@ because either the DSID is missing or it has no home user ids
%{public}@ Failed to fetch all client tokens. err=%{public}@
%{public}@ No token result for DSID %@ in bulk response - this will be treated as an error
%{public}@ failed fetching siri shared user id for homeIdentifier %{public}@:%{private}@. err=%{public}@
%{public}@ getTokenResultForDSID returning cached token result %{public}@
%{public}@ Refreshing expired token for DSID %@
%{public}@ Failed to refresh the token. err=%{public}@
%{public}@ failed to get remote object proxy for token request. err=%{public}@
%{public}@ getTokenResultsForDSIDs returning cached token results %{public}@
%{public}@ Refreshing expired tokens for DSIDs %@
%{public}@ Failed to refresh tokens. err=%{public}@
%{public}@ cachedTokenAndResetCache %d
%{public}@ Refreshing token for DSID %@
%{public}@ Not refreshing token for DSID %@ because privacy acknowledgement is required
%{public}@ Token result missing from response for DSID %@
%{public}@ Finished fetching new token for DSID %@. err=%{public}@. token=%@
%{public}@ Refreshing tokens for DSIDs %@
%{public}@ Not refreshing token for DSIDs %@ because privacy acknowledgement is required
%{public}@ Failed to fetch new tokens for DSIDs %@. err=%{public}@
%{public}@ No token result for DSID %@ - attempting to fetch it individually
%{public}@ Failed to fetch new token for DSID %@. err=%{public}@
%{public}@ fetched new token result for DSID %@: %{public}@
%{public}@ got change notification
%{public}@ Clearing token cache for external change notification
ICLibraryAuthServiceClientTokenProvider client connection interrupted
%{public}@ Failed to deserialize cached token result data. err=%{public}@
%{public}@ Failed to serialize token result to cache. err=%{public}@
%{public}@ Skipping background refresh of DSID %@. last error: %{public}@}
%{public}@ Setting timer to refresh library auth token for DSID %@ at %{public}@}
%{public}@ Performing bulk token refresh
%{public}@ No DSIDs available to refresh - ignoring
%{public}@ Rescheduling a refresh due to account changes
%{public}@: Acknowledging privacy policy for %{public}@ (%{public}@)...
%{public}@: Failed to acknowledge privacy policy for %{public}@ (%{public}@). didSucceed = %{BOOL}u, error = %{public}@.
%{public}@: Successfully completed privacy policy acknowledgement for %{public}@.
%{public}@: Beginning to observe privacy acknowledgement for %{public}@.
%{public}@: Registered new observer of privacy acknowledgement for %{public}@ with token: %{public}@.
%{public}@: Removed observer of privacy acknowledgement for %{public}@ with token: %{public}@.
%{public}@: Stopped observing privacy acknowledgement for %{public}@.
%{public}@: Privacy acknowledgement required for %{public}@ (%{public}@)? %{BOOL}u.
%{public}@: Invoking observation handler for %{public}@ with token %{public}@. isPrivacyAcknowledgementRequired = %{BOOL}u.
[%{public}@] Automatic lease refresh timer enabled with time left: %f.
[%{public}@] Automatic lease refresh timer disabled.
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [started]
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [failed] - endpoint=%{public}@ - error=%{public}@
ICCloudClientAvailabilityService %p - Creating XPC Client Connection [done] - connection=%{public}@
ICCloudClientAvailabilityService %p - Unable to create XPC Connection [no listener endpoint]
ICCloudClientAvailabilityService %p - Connection to cloud availability service interrupted
ICCloudClientAvailabilityService %p - Resetting XPC connection to nil
ICCloudClientAvailabilityService %p - Connection to cloud availability service invalidated
%{public}@ Failed to read message store data. err=%{public}@
%{public}@ Failed to deserialize message entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to deserialize message metadata entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to deserialize event entry. err=%{public}@
%{public}@ Failed to serialize message entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to serialize message metadata entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to serialize event entry with identifier %{public}@. err=%{public}@
%{public}@ Failed to commit message store data. err=%{public}@
%{public}@ Failed to generate subscription lease fairplay data. err=%{public}@
%{public}@ Performing request with storeID=%lld, itemName=%{public}@
%{public}@ Finished with err=%{public}@, response=%{public}@
%{public}@ Performing setParentalControl request
%{public}@ failed - no DSID for account %{public}@
%{public}@ setParentalControl request failed. err=%{public}@
%{public}@ setParentalControl request returned response %{public}@
%{public}@ Missing setParentalControl url in bag - skipping
%{public}@: Cloud service status monitor was configured with privacy acknowledgement policy: %{public}@.
%{public}@: Began transaction with identifier %{public}@ for cloud service status monitor connection; updated number of active transactions: %lu.
%{public}@: Attempted to end transaction with unknown transaction identifier for cloud service status monitor connection: %{public}@. Ignoring.
%{public}@: Ended transaction with identifier %{public}@ for cloud service status monitor connection; updated number of active transactions: %lu.
%{public}@: About to invalidate cloud service status monitor connection.
%{public}@: Cloud service status monitor connection was interrupted.
%{public}@: Cloud service status monitor connection was invalidated.
%{public}@: Encountered error while requesting %{public}@. %{public}@ Underlying error: %{public}@.
%{public}@: %{public}@ Error: %{public}@.
%{public}@: Did invalidate cloud service status monitor connection.
%{public}@: Did reset cloud service status monitor connection.
%{public}@: Was previously observing cloud service status with token: %{public}@. Scheduling appropriate triggers to request begin observing cloud service status again.
%{public}@: Began observing cloud service status with token: %{public}@.
%{public}@: Began observing cloud service status with token: %{public}@, despite the fact that the client requested to end observing it. Immediately cancelling this.
%{public}@: Ending observing cloud service status with token: %{public}@.
%{public}@: Ended observing cloud service status with token: %{public}@.
%{public}@: Observation token %{public}@ did not match with active observation token %{public}@. Did not end observing cloud service status.
%{public}@: Cloud service capabilities did change: %{public}@. Posting %@.
%{public}@: Storefront country code did change: "%{public}@". Posting %{public}@.
%{public}@: Storefront identifier did change: "%{public}@". Posting %@.
%{public}@: Handling "%{public}s" notification: cloud server did launch.
%{public}@: Successfully registered notify token for notify topic named "%{public}s".
%{public}@: Failed to register notify token for notify topic named "%{public}s"; notifyRegisterDispatchStatus = %lu.
%{public}@: Successfully cancelled notify token for notify topic named "%{public}s".
%{public}@: Failed to cancel notify token for notify topic named "%{public}s"; notifyCancelStatus = %lu.
%{public}@: Scheduling timeout timer for cloud server launch for %.1f seconds.
%{public}@: Cloud server launch timeout timer did fire.
%{public}@: Invalidated timeout timer for cloud server launch.
%{public}@: Missing cloud service status observation token despite the fact that the client asked to actively observe it.
%{public}@ %{public}@ attempting re-authentication for http response code %d
%{public}@ %{public}@ authentication for http response code %d successful - retrying request
-init is not supported - use sharedCloudContentTasteRequestListener
Error %{public}@ setting content taste type on item %lld.
Set content taste type on item %lld with error %{public}@.
Error %{public}@ setting content taste type on playlist %{public}@
Set content taste type on global playlist %{public}@} with error %{public}@.
Error %{public}@ setting content taste type on album %lld.
Set content taste type on album %lld with error %{public}@.
Error %{public}@ setting running content taste operation
Finished running content taste update operation with error %{public}@.
Connection to media content taste service interrupted
Connection to media content taste service invalidated
Error (domain %d, code %d) registering for RegistrationDataStatusChangedNotification
Error (domain %d, code %d) registering for PerAppNetworkDataAccessPolicyChangedNotification
Videos allow cellular data: %d
StoreApps allow cellular data: %d
_isCellularDataActive=%{BOOL}u, cellularDataRestrictedForMusic=%{BOOL}u, newIsCellularDataActive=%{BOOL}u, newCellularDataRestrictedForMusic=%{BOOL}u
Music restrict cellular data: %d
%{public}@: Reloading Music User Token due to external change notification.
%{public}@: _handleMusicUserTokensDidChangeDistributedNotification: didContentsChange = %{BOOL}d
%{public}@: Failed to correct developer token encoded part: "%@".
%{public}@: Failed to convert base 64 encoded string with developer token encoded part to data: "%@".
%{public}@: Failed to deserialize developer token encoded part data with error: %{public}@.
%{public}@: Failed to decode developer token encoded part because resulting object is of unexpected type: %{public}@.
%{public}@: Failed to extract key identifier and team identifier from developer token "%@" because it has an unexpected number of parts: %lu.
%{public}@: Starting session...
%{public}@: Resolving streams...
%{public}@: Finished resolving streams with error: %{public}@
%{public}@: Opening connection...
%{public}@: Finished opening connection with success: %{public}@ error: %{public}@
%{public}@: Failed to get device sender security settings with error: %{public}@
%{public}@: Received response: %{public}@
%{public}@ Not authenticating because %{public}@ authentication is not allowed for this response
%{public}@ Skipping automatic re-authentication because the user hasn't accepted the latest privacy link, and personalization is automatic
%{public}@ Performing %{public}@ authentication using request context %{public}@
%{public}@ Failed to get verification context for identity %{public}@. error=%{public}@
%{public}@ Sending sync request with revision %lld; %{private}@
%{public}@ failed to decode response object
%{public}@: Requesting developer token using %{public}@ with client identifier %{public}@.
%{public}@: Instantiated AMSBag with profile %{public}@ and version %{public}@: <AMSBag: %p>.
%{public}@: Instantiated AMSMediaTokenService with client identifier %{public}@: %{public}@.
%{public}@: Invalidated cached developer token using %{public}@ with client identifier %{public}@.
%{public}@ - TXTRecord dictionary from data decoding: %{public}@
%{public}@ - TXTRecord dictionary for data encoding: %{public}@
%{public}@ began observing privacy acknowledgement for %{public}@ with token %{public}@.
%{public}@ ending observation of privacy acknowledgement for %{public}@ with token %{public}@.
Disallowing subscription status request for sandboxed user identity %@
warning: it has recently become deprecated to request the music subscription status in process; the new supported code path fetches it in itunescloudd, but you need to add the service %{public}@ to the array value of your entitlement %{public}@ in order to opt into this new code path.
%{public}@ Sending request %{public}@ to subscription status service
%{public}@ Failed to obtain remote proxy to perform subscription status request. error = %{public}@.
Enabling subscription for user identity %@
Failed to enable subscription for user identity %{public}@. err=%{public}@
Disabling subscription for user identity %@
Failed to disable subscription for user identity %{public}@. err=%{public}@
Refreshing subscription for user identity %@
Failed to refresh subscription for user identity %@. err=%{public}@
Invalidating cached subscription status
Setting timer to refresh user subscription for %llds (value from bag: %llds; bag's server correlation key: %{public}@; server environment: %{public}@).
Performing periodic refresh of subscription status
<ICMusicSubscriptionStatusController> - Skipping subscription status refresh [issue retrieving user identities] - error=%{public}@ - userIdentities=%{public}@
<ICMusicSubscriptionStatusController> - Periodic subscription refresh issue for user identity: %@ - error=%{public}@
<ICMusicSubscriptionStatusController> - Periodic subscription refresh complete for user identity: %@
<ICMusicSubscriptionStatusController> - Skipping subscription key refresh complete for user identity: %@ - Subscription status: %{public}@
Delivering result for %{public}@ to %llu status handler%s: error = %{public}@.
Delivering result for %{public}@ to %llu status handler%s: response = %{public}@.
No status handlers found for request %{public}@. pendingRequests = %{public}@
Invalidating connection to music subscription status service.
Creating connection to music subscription status service.
Connection to music subscription status service interrupted.
Connection to music subscription status service invalidated.
Performing %{public}@; total number of pending requests %llu
Skipping redundant %{public}@; pending identical request %{public}@; total number of status handlers: %llu. total number of pending requests %llu
%{public}@ handling privacy acknowledgement requirement changed notification: isPrivacyAcknowledgementRequired = %{BOOL}u. Posting distributed notification %{public}@.
%{public}@ handling %{public}@. Posting %{public}@.
[%{public}@] Failed to get device receiver security settings with error: %{public}@
Failed to retrieve telephony mobile subscriber country code with error: %{public}@.
Failed to retrieve telephony mobile subscriber netword code with error: %{public}@.
Telephony request to send SMS to %@ failed. Telephony context: %{public}@.
Telephony active subscriptions did change.
Telephony phone number available.
Telephony phone number changed.
Failed to instantiate CoreTelephonyClient.
Current device does not have telephony capability. Skipping telephony client initialization.
Failed to get telephony active contexts info with error: %{public}@.
Failed to retrieve UUID of voice preferred telephony subscription context.
Found telephony subscription context %{public}@ at slot %ld as the voice preferred one.
Could not find a valid telephony subscription context. Available telephony subscription contexts: %{public}@.
Failed to retrieve telephony phone number with error: %{public}@.
%@ phone number changed from %@ to %@.
unexpected storefront value type. propertyValue=%{public}@
Loading homeUserIdentifierItems(NSArray)=%{public}@
Loading homeUserIdentifierItems(NSDictionary)=%{public}@
Could not create NSUUID for homeUserIdentifier=%{public}@
updating account to %s automatic downloads for media kinds %{public}@ and %{public}@
Finished updating enabled media kinds=%{public}@ with result=%{public}@, error=%{public}@
enabled media kinds (%{public}@) have not changed. Not running update operation
%{public}@: Skipping saga account status request because privacy acknowledgement is required
%{public}@ Received match status response: %{public}@
performing songDownloadDone request. downloadID=%{public}@, songID=%llu
%{public}@: Request was issued before before first unlock, returning error.
%{public}@: %{public}@ Underlying error: %{public}@.
%{public}@: Deferring to equivalent store URL request to build the actual URL request: %{public}@.
%{public}@: Building %{public}s URL request.
%{public}@: Skipping personalization; issuing request merely decorated with a developer token: %{public}@.
%{public}@: Issuing request decorated with both a developer token and a user token: %{public}@.
%{public}@: %{public}@ (retryReason = %{public}@, retryCount = %lu, maxRetryCount = %lu) Underlying error: %{public}@.
%{public}@: Unauthorized to fetch user token. Invalidating developer token.
%{public}@: Successfully invalidated developer token; retrying building URL request.
%{public}@ was initialized.
%{public}@ is being deallocated.
%{public}@: Registered new subscription status observer with token: %{public}@.
%{public}@: Removed subscription status observer with token: %{public}@.
%{public}@: Ignoring %{public}@ because it specifically refers to a different user identity: %{public}@.
%{public}@: Beginning to observe subscription status.
%{public}@: Stopped observing subscription status.
%{public}@: Requesting subscription status with caching %{public}@, using %{public}@.
%{public}@: Did complete %{public}@. Encountered error: %{public}@.
%{public}@: Did complete %{public}@. Received subscription status response %{public}@.
%{public}@: Subscription status did not change. Skipping invoking observation handlers.
%{public}@: Subscription status did change: %{public}@. About to invoke %llu observation handler%s.
%{public}@: Invoking observation handler with token %{public}@; subscription status = <%{public}@: %p>
%{public}@ retry requested by authkit
%{public}@ invalidating bag cache because invalidate-url-bags is set in the response
%{public}@ completed with error %{public}@. correlationKey=%{public}@
response=%{public}@
body=%{public}@
%{public}@ completed successfully. correlationKey=%{public}@
%{public}@ received failureType=%{public}@
body=%{public}@
%{public}@ retrying request after action taken for dialog response
%{public}@ retrying request after successful re-authentication
%{public}@ retrying request after machine data action %{public}@
%{public}@ mescal verification failed for the response. err=%{public}@
%{public}@ verifying mescal signature for request. configuration=%{public}@
%{public}@ Not verifying mescal signature because the payload is too large. length=%lld, limit=%lld
%{public}@ %{public}@ Recevied authentication error. server response=%{public}@
%{public}@ %{public}@ received store dialog response %{public}@
%{public}@ %{public}@ no dialog response handler - ignoring
%{public}@: Failed to load accounts to remove cookies. err=%{public}@
[ICUserIdentityStore] Request for properties for active iCloud account before first unlock.
[ICUserIdentityStore] Request for properties for user identity %@ before first unlock.
[ICUserIdentityStore] - DSIDForUserIdentity - DSID already resolved - userIdentity=%{public}@
[ICUserIdentityStore] - Error retrieving user identities for manageable accounts - error=%{public}@
[ICUserIdentityStore] Failed to fetch local store account synchronously with error: %{public}@.
[ICUserIdentityStore] Failed to fetch local store account with error: %{public}@.
[ICUserIdentityStore] - Error retrieving user identities for store accounts - error=%{public}@
[ICUserIdentityStore] - Backend changed
[ICUserIdentityStore] - Local store account properties change detected [Posting notification]
[ICUserIdentityStore] - Active account change detected [Posting notification]
[ICUserIdentityStore] - _icValidStoreAccountsFromACAccounts=%{public}@
processing machine data action %{public}@
unknown machine data action %{public}@ - ignoring
machine data action %{public}@ completed. err=%{public}@
failed to decode anisette response data from response %{public}@
NSURL: %p -initWithMasterPlaylistURL: Omitting video dictionary [received video dictionary with inconsistent aspect ratio] currentAspectRatio=%f aspectRatio=%f videoDictionary=%@
%{public}@: TXT record data updated.
%{public}@: Net service did resolve address.
%{public}@: Net service did not resolve address with error dictionary: %{public}@.
%{public}@: Resolved net service.
%{public}@: Getting streams...
%{public}@: Successfully created streams.
%{public}@: Failed to create streams.
%{public}@: Updated net service TXTRecord: %{public}@
Failed to update user version. err=%{public}@
[%{public}@]: Missing certificate URL: %{public}@, key server URL: %{public}@, serverPlaybackContextDataCreationHandler: %{public}@
[%{public}@]: Missing request context.
[%{public}@]: Requesting iTunes Store content with a non-store request context.
[%{public}@]: Loaded successfully.
[%{public}@]: Missing content key context data in response.
[%{public}@]: Received failure in response: %{public}@
[%{public}@]: Missing streaming key dictionary in response.
[%{public}@]: Missing second-level dictionary key in response.
[%{public}@]: Invalid response format.
[%{public}@]: Key server request returned error: %{public}@
[%{public}@]: Failed to serialize key server request data with error: %{public}@
[%{public}@]: Failed to generate server playback context data with error: %{public}@
[%{public}@]: Failed to load certificate data with error: %{public}@
Failed to create network path observer!
error registering for thermal pressure levels change notifications status=%u
Network reachability changed. networkType=%{public}d, telephonyDataIndicator=%{public}@, isRemoteServerReachable=%{BOOL}u, isRemoteServerLikelyReachable=%{BOOL}u, currentNetworkLinkHighQuality=%{BOOL}u%{public}@, _currentNetworkLinkExpensive=%{BOOL}u, _wifiAssociated=%{BOOL}u, _ethernetWired=%{BOOL}u, _networkConstrained=%{BOOL}u
thermal levels changed - oldValue=%llu, newValue=%llu
Failed to get current thermal level. status=%u, using %llu for now
current thermal pressure level=%llu
error getting current thermal pressure level - status=%u, _currentThermalLevel=%llu
error checking for thermal pressure level status=%u
%{public}@ Found network type override value %{public}@
ICNetworkConstraints %p [%@] - cellularDataAllowed:%{BOOL}u, wifiDataAllowed:%{BOOL}u
%{public}@ Enabling push notifications for type %{public}@ with params %{public}@
%{public}@ Missing add-push-notification-type-url url in bag - skipping
%{public}@ addPushNotification request failed. err=%{public}@
%{public}@ addPushNotification request returned response %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit
softlink:r:path:/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
ICMusicSubscriptionStatusCache
ICJSSign
ICJSSignConfiguration
NSCopying
ICIAMImpressionNode
ICUnfairLock
ICDelegateToken
NSSecureCoding
NSCoding
ICAuthorizeMachineResponse
ICMusicSubscriptionRequest
ICSAPSession
ICStoreRequestContext
ICDelegateAccountStoreOptions
ICIAMApplicationMessage
ICAuthenticationUtilities
ICRadioLibraryArtistContentReference
ICCloudServerProtocol
ICCloudClientCloudService
ICStoreFileAssetInfo
ICSAPSessionSignDataOperation
ICStorePlatformRequestOperation
ICPlayActivityFeedSerialization
ICStoreFinanceItemMetadata
ICDelegateAccountStoreServiceClient
NSObject
ICDelegateAccountStoreService
ICMusicSubscriptionCarrierBundlingEligibilityResponse
ICRadioPlaybackHistory
NSMutableCopying
ICMutableRadioPlaybackHistory
ICRadioStoreContentReference
ICRadioContentReferenceContainable
ICSQLiteStatement
ICSQLiteBinding
ICAgeVerificationManager
ICInAppMessageManagerProtocol
ICInAppMessageManager
NSXPCListenerDelegate
ICEnvironmentMonitorObserver
ICURLPerformanceMetrics
ICRemoteRequestOperationExecutionResponse
ICSubscriptionRedownloadRequest
ICDelegationConsumerNetService
NSNetServiceDelegate
ICMachineDataProvisionOperation
ICMediaAssetDownloadRequest
ICMediaAssetDownloadSessionCache
ICURLSessionManager
ICPushNotificationMessage
ic_SagaAdditions
ic_JaliscoAdditions
ic_ITunesStoreAdditions
ICCloudClient
ICCloudAvailability
ICAsyncBlockOperation
ICRemoteRequestOperationController
ICDeveloperTokenDefaultProvider
ICDeveloperTokenProvider
ICStoreMediaResponseItem
ICRadioFetchMetadataRequest
ICMusicRestoreBagConfiguration
ICCloudServiceStatusRemoteMonitoringClient
ICCloudServiceStatusRemoteMonitoringService
ICCloudServiceStatusRemoteMonitoring
ICLibraryAuthServiceClientTokenResponse
ICLibraryAuthServiceClientTokenResult
ICLibraryAuthServiceClientTokenIdentifier
ICUserIdentity
ICLibraryAuthServiceClientTokenRequest
ICURLBagProvider
ICMusicSubscriptionStatusResponse
ICLibraryAuthServiceBulkClientTokenRequest
ICMusicSubscriptionAccountlessPlaybackRequest
ICDelegationConsumerServiceProtocolHandler
ICAMSBagValuePromise
ICMusicSubscriptionPlaybackRequestOperation
ICMusicSubscriptionPlaybackResponseItem
ICStorePlatformOfferAsset
ICURLBagMescalConfiguration
ICPBDGSPlayerDelegateInfoToken
ICDelegateAccountStore
ICSQLiteConnectionDelegate
ICDelegateAccountStoreWriter
ICStorageManager
ICUserCredentialResponse
ICAsyncOperation
ICFPLeaseSyncSession
ICUserAuthenticationValidationRequest
ICNanoPairedDeviceStatusMonitor
ICLibraryAuthServiceBulkClientTokenResponse
ICDelegationProviderService
ICSDelegationProviderServiceXPC
ICDelegationProviderServiceSessionDelegate
NSNetServiceBrowserDelegate
ICUserIdentityStoreACAccountBackend
ICUserIdentityStoreBackend
ICUserIdentityProperties
ICMutableUserIdentityProperties
itunescloudd
ICIAMSerialCheckRequest
ICHTTPArchive
ICMusicKitRequestContext
ICConnectionConfiguration
ICMusicSubscriptionRecommendationsRequest
ICUserVerificationContext
ICMusicSubscriptionLeaseStatus
ICPushNotificationsRegisterAPNSTokenRequest
ICSiriAddToAccousticHistoryRequest
ICLibraryAuthServiceClientTokenStatus
ICStorePlatformRequest
ICUserNotificationBuilder
ICStorePlatformMetadata
ICMusicSubscriptionStatusRequestOperation
ICURLSession
NSURLSessionDelegate
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
ICMusicRestoreRequest
ICInAppMessageEntry
ICIAMApplicationMessageSyncCommand
ICAMSBagAdapter
AMSBagProtocol
ICDelegationConsumerServiceSessionRequestInfo
ICCloudCLientErrorAdditions
ICDelegateAccountStoreServiceListener
ICFPSAPContext
ICIAMSynchronizeMessagesResponse
ICFPContentInfo
ICRadioPlaybackHistoryStore
ICProcessPlayActivityEventsRequestListener
ICPlayActivityController
_ICPlayActivityEndpointRevisionInformation
_ICPlayActivityFlushSessionInformation
ICPushNotificationsDisableTypesRequest
ICAdditions
ICStoreArtworkSizeInfo
ICStoreArtworkInfo
ICSuzeLeaseSession
ICMediaRedownloadRequest
ICUserIdentityStoreCoding
ICIAMLogEventRequest
ICStoreURLRequestBuilderProperties
ICStoreFileAssetFairPlayInfo
ICMusicUserTokenFetchRequest
ICPBDGSStartDelegationRequest
ICDeviceInfo
ICNanoPairedDeviceStatusObserver
ICFlushPlayActivityEventsOperation
ICIAMTriggerCondition
ICIAMImage
ICInAppMessageMetadataEntry
ICMachineDataSyncOperation
ICURLBagRadioConfiguration
ICAgeVerifier
ICSQLiteConnectionOptions
ICRadioFetchMetadataResponse
ICPlayActivityDebugLogOperation
ICURLRequest
NSProgressReporting
ICAccountStoreAdditions
ICPBDGSFinishDelegationRequest
ICIAMMessagePresentationTrigger
ICCloudItemIDList
ICUserIdentityStoreTestingBackend
ICMusicAccountNotificationsSettingsRequestOperation
ICIAMMetricEvent
ICMusicRestoreRequestParameters
ICDelegationConsumerService
ICDelegationConsumerServiceRequest
ICRadioLibraryAlbumContentReference
ICRadioStationProviderResource
ICAgeVerificationState
ICMusicSubscriptionCarrierBundlingEligibilityOperation
ICValueHistory
_ICValueHistoryItem
ICIAMLocalNotification
ICFPStreamContext
ICStoreRadioStreamAssetInfo
ICStoreDialogResponseHandler
ICStoreDialogResponseHandlerConfiguration
ICFairPlayUtilityAdditions
ICDeviceSetupStatusMonitor
ICMediaRedownloadResponse
ICStoreResponseProtocol
ICIAMApplicationMessageSyncResponse
ICPAPlayModeDictionary
ICACAccountVerificationOperation
ICDispatchOnce
ICRequestContext
ICInAppMessageConfiguration
ICMusicAccountNotificationsSettingsManager
ICRadioStationTrack
ICDelegationServiceConnection
ICDelegationServicePairingSessionDelegate
MSVMessageParserDelegate
_ICDelegationServiceConnectionPendingRequestContext
ICCloudContentTastePBFusePreferences
ICCloudAddReferral
ICIAMMessageAction
ICInAppReportEventRequest
ICMusicSubscriptionLeasePlaybackRequest
ICStoreURLRequest
ICDelegateAccountStoreXPCWriter
ICMusicSubscriptionStatusRequest
ICPlayActivityTable
ICMusicSubscriptionFairPlayKeyStatus
ICPlayActivityEvent
ICMutablePlayActivityEvent
ICMusicSubscriptionStatusCacheKey
ICIAMMessageContent
ICMachineDataEraseOperation
ICRemoveMediaDRMOperation
ICMusicKitURLResponse
ICRemoteRequestOperationExecutionContext
ICUserVerificationOperation
ICSQLiteRow
ICRadioGetTracksRequest
ICIAMMessageRule
ICCloudServerListenerEndpointServiceProtocol
ICCloudServerListenerEndpointProvider
ICCloudServerListenerEndpointProviding
ICSuzeLeaseRequest
ICPAPlayActivityEnqueuerProperties
ICPAPlayActivityEvent
ICPlayActivityEventContainerIDs
ICMutablePlayActivityEventContainerIDs
ICDelegationServicePairingSession
ICURLBagMonitor
ICBook
ICRadioLikeRequest
ICAuthorizeMachineURLRequest
ICDelegationConsumerServiceSessionRequestResult
ICPBDGSStartDelegationResponse
ICAddToWishListResponse
ICMusicKitURLResponseHandler
ICPBDGSResponse
ICRequestAdditions
ICAuthorizeMachineRequest
ICLibraryAuthServiceClientTokenProviderProtocol
ICLibraryAuthServiceClientTokenProvider
ICSQLitePreparedStatement
ICPrivacyInfo
ICUserCredentialRequest
ICRadioLikeResponse
ICStoreHLSAssetInfo
ICPBDGSPlayerInfoContextToken
ICMusicSubscriptionLeaseSession
ICKeyedSharedInstanceManager
ICCloudServerAvailabilityServiceProtocol
ICCloudClientAvailabilityService
ICMediaAVAssetDownloadOptions
ICCloudContentTastePBFuseItemPreference
ICPushNotificationsResponse
ICInAppMessageStore
ICSuzeLeaseResponse
ICSAPSessionPrepareFairPlayContextOperation
ICRadioLibraryTrackContentReference
ICDelegationPlayInfoRequest
ICDelegationPlayInfoTokenRequest
ICDefaults
ICMusicSubscriptionPlaybackURLRequest
ICRadioPlaybackHistoryItem
ICMutableRadioPlaybackHistoryItem
ICDelegationProviderServiceAssertion
ICPlayActivityEnqueuerProperties
ICMutablePlayActivityEnqueuerProperties
ICSAPSessionAbstractOperation
ICUserNotificationContext
ICUserNotificationManager
ICAddToWishListRequest
ICStorePlatformResponseGroup
ICStorePlatformResponse
ICCDelegationProviderServiceXPC
ICSetParentalControlRequestOperation
ICIAMLogEventResponse
ICSQLiteQueryResults
ICCloudServiceStatusMonitor
ICPBDGSFinishDelegationResponse
ICPBDGSMessage
ICPBDGSRequest
ICURLResponseHandler
ICUpdateContentTasteRequestListener
ICCloudContentTasteRequestListener
ICCloudAvailabilityController
RadiosPreferencesDelegate
ICMusicUserTokenCache
ICBuyProductRequest
ICDelegationProviderServiceSession
ICDelegationServiceConnectionDelegate
ICStoreURLResponseAuthenticationProvider
ICRadioGetTracksResponse
ICRadioResponse
ICDelegationPlayInfoRequestOperation
ICDelegationPlayInfoResponseToken
ICIAMParameter
ICPurchaseRedownloadRequest
ICInAppMessageSyncRequest
ICUserIdentityContext
ICRemoteRequestOperationExecutingClient
ICRemoteRequestOperationExecutingService
ICRemoteRequestOperationExecuting
ICDeveloperTokenFetchRequest
ICDelegationServiceSecuritySettings
ICDelegationNetServiceTXTRecord
ICStoreDialogResponse
ICStoreDialogResponseButton
ICStoreDialogResponseButtonAction
ML3MusicLibrary
ML3AccountInformationProviding
ICMusicSubscriptionStatusController
ICMusicSubscriptionStatusRemoteRequestingClient
ICDelegationConsumerServiceSession
ICDelegationConsumerNetServiceDelegate
ICInAppMessageEventEntry
ICSecureKeyDeliveryResponse
ICTelephonyController
CoreTelephonyClientDelegate
ICAccountAdditions
ICURLBag
ICDelegationProviderServiceProtocolHandler
ICRadioStationMetadata
ICDelegateAccountStoreSQLWriter
ICURLResponseAuthenticationProvider
ICSecurityInfo
ICSagaGetAccountStatusRequest
ICSongDownloadDoneRequest
MusicKit
MusicKit_Private
ICRemoteRequestOperation
ICMusicSubscriptionLeaseController
ICMusicSubscriptionLeaseSessionDelegate
_ICMusicSubscriptionLeaseIdentityCacheKey
ICDAAPPropertyInfo
ICIAMSynchronizeMessagesRequest
ICDelegateAccountStoreSchema
ICMusicKitURLRequest
ICSAPSessionVerifySignatureOperation
ICMusicSubscriptionStatusRemoteRequestingService
ICMusicSubscriptionStatusRemoteRequesting
ICUserVerificationRequest
ICMusicSubscriptionStatusMonitor
ICDelegateAccountStoreReader
ICRadioURLRequest
ICStoreURLResponseHandler
ICPBDGSPlayerInfoContextRequestToken
ICRequestOperation
ICSuzeLeaseSessionConfiguration
ICMatchRedownloadRequest
ICHTTPCookieStore
ICMusicAccountNotificationsSettingsSwitch
ICUserIdentityStore
ICUserIdentityStoreBackendDelegate
ICMachineDataActionHandler
ICStoreVideoArtworkInfo
ICRadioTrackInfoContentReference
ICRadioContentReference
ICStorePlatformOffer
ICDelegationProviderNetService
ICSQLiteConnection
ICURLResponse
ICURLBagLibraryDAAPConfiguration
ICMusicSubscriptionFairPlayController
ICMusicSubscriptionPlaybackResponse
ICMachineDataOperation
ICSecureKeyDeliveryRequest
ICSecureKeyDeliveryRequestOperation
ICEnvironmentMonitor
ICADIUtilities
ICADIUtilityAdditions
ICADIProvisionSession
ICUserCredentialProvider
_ICUserCredentialProviderRequestSession
ICLocalStoreAccountProperties
ICMutableLocalStoreAccountProperties
ICPlayActivityEventItemIDs
ICMutablePlayActivityEventItemIDs
ICMusicSubscriptionStatus
ICMutableMusicSubscriptionStatus
ICMusicSubscriptionStatusTerms
ICWiFiManager
ICClientInfo
ICMutableClientInfo
ICIAMSerialCheckResponse
ICNetworkConstraints
ICMutableNetworkConstraints
ICMusicAccountNotificationsSettingsResponse
ICPushNotificationsEnableTypesRequest
_init
init
standardDefaults
lastKnownSubscriptionStatusBaseCacheKey
initWithDictionaryRepresentation:requiringDSID:
updateBaseCacheKey
defaultCenter
_handlePhoneNumberDidChangeNotification:
sharedController
addObserver:selector:name:object:
_handleUserIdentityStoreDidChangeNotification:
defaultIdentityStore
_handleSubscriptionStatusChangedDistributedNotification:
_loadPersistedCacheWithCompletion:
removeObserver:name:object:
dealloc
objectForKey:
_getCacheKeyForRequestContext:completion:
isFinalResponse
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
setObject:forKey:
subscriptionStatus
removeObjectForKey:
isEqualToStatus:
_persistCachePostingGlobalNotification:
delegatedIdentity
identity
_statusChangeUserInfoForUserIdentity:oldStatus:newStatus:
_postLocalChangeNotificationWithUserInfo:
copy
needsReload
setNeedsReload:
enumerateKeysAndObjectsUsingBlock:
activeAccount
setIdentity:
setAllowsExpiredBags:
initWithBlock:
sharedBagProvider
valueForBagKey:
length
setStorefrontIdentifier:
phoneNumber
setPhoneNumber:
dictionaryRepresentationIncludingDSID:
setLastKnownSubscriptionStatusBaseCacheKey:
postNotificationName:object:
getBagForRequestContext:forceRefetch:withCompletionHandler:
shouldTreatSubscriptionStatusAsExpired
count
countByEnumeratingWithState:objects:count:
identityStore
DSID
setDSID:
getPropertiesForUserIdentity:completionHandler:
synchronize
cachedSubscriptionStatus
initWithStringRepresentation:
isValidSubscriptionStatusPropertyListRepresentation:error:
initWithPropertyListRepresentation:
addObject:
specificAccountWithDSID:
processInfo
ic_isCloudDaemon
mutableCopy
removeObjectsForKeys:
setCachedSubscriptionStatus:
stringRepresentation
propertyListRepresentation
postNotificationName:object:userInfo:
dictionaryWithCapacity:
setObject:forKeyedSubscript:
sharedCache
getCachedSubscriptionStatusResponseForRequestContext:completion:
setCachedSubscriptionStatusResponse:forRequestContext:completion:
setCachedSubscriptionStatusResponseNeedsReloadForAllRequestContextsWithCompletion:
setCachedSubscriptionStatusResponseNeedsReloadForRequestContext:completion:
.cxx_destruct
_accessQueue
_calloutQueue
_persistenceQueue
_baseCacheKey
_cachedSubscriptionStatusResponses
isEqual:
signatureStringWithURLRequest:
UTF8String
initWithLength:
mutableBytes
setLength:
string
initWithURL:resolvingAgainstBaseURL:
queryItems
ic_valuesForCookieWithName:
firstObject
ic_valueForHTTPHeaderField:
name
caseInsensitiveCompare:
value
appendString:
_enumerateComponentsUsingBlock:
initWithConfiguration:
signatureDataWithURLRequest:
_configuration
includeCookieWithName:
includeHeaderWithName:
includeQueryItemWithName:
setSignatureDataCookieName:
_addRequestComponent:withName:
allocWithZone:
mutableCopyWithZone:
copyWithZone:
initWithInteger:
integerValue
objectAtIndex:
enumerateObjectsUsingBlock:
storePlatformConfiguration
signatureDataCookieName
signatureDataHeaderName
setSignatureDataHeaderName:
_componentNames
_components
_signatureDataCookieName
_signatureDataHeaderName
description
dictionaryRepresentation
stringWithFormat:
dictionary
setImpressionType:
setRecoAlgoId:
isMemberOfClass:
hash
hasImpressionType
hasRecoAlgoId
readFrom:
writeTo:
copyTo:
mergeFrom:
impressionType
recoAlgoId
_impressionType
_recoAlgoId
lock
unlock
lockWithBlock:
_lock
initWithType:data:expirationDate:
raise:format:
compare:
initWithFormat:
componentsJoinedByString:
isEqualToDate:
isEqualToData:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithType:data:
expiresBeforeDate:
isExpired
data
type
expirationDate
_data
_type
_expirationDate
initWithBase64EncodedString:options:
initWithResponseDictionary:
keybagData
tokenData
_responseDictionary
finishWithError:
_bagKeyForRequestType:
urlForBagKey:
errorWithDomain:code:userInfo:
requestWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
deviceInfo
deviceGUID
isWatch
sharedMonitor
pairedDeviceMediaGUID
dataWithPropertyList:format:options:error:
setHTTPBody:
initWithURLRequest:requestContext:
defaultSession
parsedBodyDictionary
intValue
importSubscriptionKeyBagData:completionHandler:
enqueueDataRequest:withCompletionHandler:
getBagForRequestContext:withCompletionHandler:
initWithStoreRequestContext:requestType:requestingOfflineSlot:
execute
_storeRequestContext
_requestType
_requestingOfflineSlot
sapVersion
_certificateURL
_setupURL
_initWithVersion:certificateURL:setupURL:requestContext:
setName:
setMaxConcurrentOperationCount:
setQualityOfService:
setSapSession:
setData:
setResponseHandler:
addOperation:
setSignatureData:
sharedSAPSessionWithVersion:URLBag:requestContext:
signData:withCompletionHandler:
verifySignatureData:forData:withCompletionHandler:
_sapContext
_setSAPContext:
_prepareFairPlayContextOperationQueue
_requestContext
_operationQueue
_sapVersion
initWithIdentity:
defaultInfo
initWithIdentity:clientInfo:
initWithIdentity:identityStore:clientInfo:
initWithUserInteractionLevel:
initWithIdentity:identityStore:clientInfo:authenticationProvider:
setClientInfo:
setIdentityStore:
setAuthenticationProvider:
nullIdentity
nullIdentityStore
clientInfo
clientIdentifier
clientVersion
copyWithBlock:
hashInStore:
decodeBoolForKey:
ic_encodeUserIdentity:withStore:forKey:
encodeBool:forKey:
_allowsMutation
activeStoreAccountRequestContext
setDelegatedIdentity:
setStoreDialogResponseHandler:
setPersonalizationStyle:
storeDialogResponseHandler
allowsExpiredBags
personalizationStyle
_delegatedIdentity
_identity
_identityStore
_storeDialogResponseHandler
_personalizationStyle
_allowsExpiredBags
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
isEqualToIdentity:inStore:
defaultOptionsWithServiceEndpoint:
defaultOptionsWithServiceName:
singleWriterOptionsWithDatabasePath:
databasePath
XPCServiceName
setDatabasePath:
isSingleWriter
setSingleWriter:
XPCEndpoint
setXPCEndpoint:
setXPCServiceName:
_databasePath
_listenerEndpoint
_serviceName
_singleWriter
removeAllObjects
numberWithBool:
numberWithInt:
numberWithDouble:
initWithCapacity:
addTarget:
addContentPages:
addPresentationTriggers:
setIdentifier:
targetsCount
clearTargets
targetAtIndex:
setTemplateURL:
contentPagesCount
clearContentPages
contentPagesAtIndex:
setRule:
setWebArchiveURL:
setHoldoutEvent:
setLocalNotification:
setImpressionEvent:
presentationTriggersCount
clearPresentationTriggers
presentationTriggersAtIndex:
targetType
contentPagesType
presentationTriggersType
hasIdentifier
messageType
setMessageType:
setHasMessageType:
hasMessageType
messageTypeAsString:
StringAsMessageType:
carousel
setCarousel:
setHasCarousel:
hasCarousel
setPriority:
setHasPriority:
hasPriority
hasTemplateURL
setMaximumDisplays:
setHasMaximumDisplays:
hasMaximumDisplays
setStartDate:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
hasCloseButton
setHasCloseButton:
setHasHasCloseButton:
hasHasCloseButton
hasRule
hasWebArchiveURL
modalPresentationStyle
setModalPresentationStyle:
setHasModalPresentationStyle:
hasModalPresentationStyle
modalPresentationStyleAsString:
StringAsModalPresentationStyle:
globalPresentationPolicyGroup
setGlobalPresentationPolicyGroup:
setHasGlobalPresentationPolicyGroup:
hasGlobalPresentationPolicyGroup
globalPresentationPolicyGroupAsString:
StringAsGlobalPresentationPolicyGroup:
assetPrefetchStrategy
setAssetPrefetchStrategy:
setHasAssetPrefetchStrategy:
hasAssetPrefetchStrategy
assetPrefetchStrategyAsString:
StringAsAssetPrefetchStrategy:
hasHoldoutEvent
hasLocalNotification
hasImpressionEvent
identifier
targets
setTargets:
priority
templateURL
maximumDisplays
startDate
endDate
contentPages
setContentPages:
rule
webArchiveURL
holdoutEvent
localNotification
impressionEvent
presentationTriggers
setPresentationTriggers:
_endDate
_startDate
_assetPrefetchStrategy
_contentPages
_globalPresentationPolicyGroup
_holdoutEvent
_identifier
_impressionEvent
_localNotification
_maximumDisplays
_messageType
_modalPresentationStyle
_presentationTriggers
_priority
_rule
_targets
_templateURL
_webArchiveURL
_carousel
_hasCloseButton
_has
isEqualToString:
sharedAuthKitSession
rawContentDictionary
artistName
contentType
matchDictionary
setArtistName:
representativeCloudIdentifier
setRepresentativeCloudIdentifier:
storeIdentifier
setStoreIdentifier:
_artistName
_representativeCloudIdentifier
_storeIdentifier
serialQueue
listenerEndpointProvider
listenerEndpointForService:error:
_xpcConnectionWithListenerEndpoint:
initWithListenerEndpoint:
setupInitialSagaPoolingForConfiguration:
setupInitialJaliscoPoolingForConfiguration:
setPreferredVideoQuality:forConfiguration:completion:
isSagaAuthenticatedForConfiguration:completion:
updateJaliscoLibraryWithReason:forConfiguration:completion:
updateSagaLibraryWithReason:forConfiguration:completion:
authenticateForConfiguration:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completion:
deauthenticateForConfiguration:completion:
disableCloudLibraryWithReason:completion:
setCloudAddToPlaylistBehavior:forConfiguration:completion:
removeJaliscoLibraryForConfiguration:completion:
isMediaKindDisabledForJaliscoLibrary:configuration:completion:
loadIsUpdateInProgressForConfiguration:completion:
loadUpdateProgressForConfiguration:completion:
loadIsSagaUpdateInProgressForConfiguration:completion:
loadSagaUpdateProgressForConfiguration:completion:
loadIsJaliscoUpdateInProgressForConfiguration:completion:
loadJaliscoUpdateProgressForConfiguration:completion:
loadLastKnownEnableICMLErrorStatusForConfiguration:completion:
importItemArtworkForPurchaseHistoryID:configuration:completion:
importScreenshotForPurchaseHistoryID:configuration:completion:
importItemArtworkForSagaID:configuration:completion:
importScreenshotForSagaID:configuration:completion:
importContainerArtworkForSagaID:configuration:completion:
importSubscriptionItemArtworkForPersistentID:configuration:completion:
importSubscriptionScreenshotForPersistentID:configuration:completion:
importSubscriptionContainerArtworkForPersistentID:configuration:completion:
importArtistHeroImageForPersistentID:configuration:completion:
importAlbumArtistHeroImageForPersistentID:configuration:completion:
deprioritizeItemArtworkForPurchaseHistoryID:configuration:
deprioritizeScreenshotForPurchaseHistoryID:configuration:
deprioritizeItemArtworkForSagaID:configuration:
deprioritizeScreenshotForSagaID:configuration:
deprioritizeContainerArtworkForSagaID:configuration:
deprioritizeSubscriptionItemArtworkForPersistentID:configuration:
deprioritizeSubscriptionScreenshotForPersistentID:configuration:
deprioritizeSubscriptionContainerArtworkForPersistentID:configuration:
deprioritizeArtistHeroImageForPersistentID:configuration:
deprioritizeAlbumArtistHeroImageForPersistentID:configuration:
loadArtworkInfoForPurchaseHistoryIDs:configuration:completion:
loadScreenshotInfoForPurchaseHistoryIDs:configuration:completion:
loadArtworkInfoForSagaIDs:configuration:completion:
loadArtworkInfoForContainerSagaIDs:configuration:completion:
loadScreenshotInfoForSagaIDs:configuration:completion:
loadArtworkInfoForSubscriptionItemPersistentIDs:configuration:completion:
loadScreenshotInfoForSubscriptionPersistentIDs:configuration:completion:
loadArtworkInfoForSubscriptionContainerPersistentIDs:configuration:completion:
loadMissingArtworkForConfiguration:
loadGeniusItemsForSagaID:configuration:completion:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:configuration:completion:
createPlaylistWithPersistentID:properties:trackList:configuration:completion:
sdk_createPlaylistWithPersistentID:properties:trackList:configuration:completion:
setPlaylistProperties:trackList:forPlaylistPersistentID:configuration:completion:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:configuration:completion:
addItemWithSagaID:toPlaylistWithPersistentID:configuration:completion:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:configuration:completion:
publishPlaylistWithSagaID:configuration:completion:
removePlaylistsWithSagaIDs:configuration:completion:
uploadArtworkForPlaylistWithPersistentID:configuration:completion:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:configuration:completion:
updatePinnedSubscribedPlaylistsWithConfiguration:completion:
addStoreItemWithAdamID:referral:configuration:completion:
sdk_addStoreItemWithOpaqueID:configuration:completion:
addStorePlaylistWithGlobalID:configuration:completion:
removeItemsWithSagaIDs:configuration:completion:
hideItemsWithPurchaseHistoryIDs:configuration:completion:
setItemProperties:forPurchaseHistoryID:configuration:completion:
setItemProperties:forSagaID:configuration:completion:
uploadCloudItemPropertiesForConfiguration:completion:
uploadCloudPlaylistPropertiesForConfiguration:completion:
setAlbumProperties:forAlbumPersistentID:configuration:completion:
updateArtistHeroImagesForConfiguration:
loadIsJaliscoGeniusSupportedForConfiguration:completion:
loadJaliscoGeniusLearnMoreURLForConfiguration:completion:
loadJaliscoGeniusCUIDForConfiguration:completion:
setJaliscoGeniusCUID:forConfiguration:completion:
enableJaliscoGeniusForConfiguration:completion:
updateJaliscoGeniusDataForConfiguration:completion:
cancelUpdateJaliscoGeniusDataForConfiguration:completion:
loadJaliscoGeniusOperationStatusForConfiguration:completion:
disableJaliscoGeniusForConfiguration:completion:
loadBooksForStoreIDs:configuration:completion:
listCloudServerOperations
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
resume
initWithListenerEndpointProvider:
xpcConnection
_xpcConnection
_serialQueue
_listenerEndpointProvider
absoluteString
dictionaryWithObjects:forKeys:count:
initWithFileAssetResponseDictionary:
URLWithString:
initWithResponseSinfDictionary:
_metadataDictionary
unsignedLongLongValue
initWithMetadataDictionary:
fairPlayInfoList
initWithAssetURL:
responseDictionary
assetURL
downloadKey
fileExtension
flavorType
fileSize
metadata
protectionType
setAssetURL:
setDownloadKey:
setFairPlayInfoList:
setFlavorType:
setFileExtension:
setFileSize:
setMetadata:
setMd5:
expectedProtectionType
setExpectedProtectionType:
_assetURL
_downloadKey
_fairPlayInfoList
_flavorType
_fileExtension
_fileSize
_metadata
_md5
_expectedProtectionType
signData:returningSignatureData:error:
executeWithSAPContext:
finishWithSAPContextPreparationError:
responseHandler
_responseHandler
initWithPlatformRequest:usingURLSession:
qualityOfService
cancel
cancelRequest:
isCancelled
_finishWithResponse:error:
_executePersonalized
_executeUnpersonalized
retryDelay
setRetryDelay:
itemIdentifiers
initWithURLResponse:requestedItemIdentifiers:
_URLRequestWithBaseURL:
_enqueueDataRequest:
setJSSignConfiguration:
setShouldUseMescalSigning:
date
timeIntervalSince1970
setAdditionalHTTPCookies:
requestContext
shouldIgnoreCache
UUID
UUIDString
queryItemWithName:value:
ic_URLByAppendingQueryItems:
initWithURL:
HTTPHeaders
setAllHTTPHeaderFields:
timeoutInterval
setTimeoutInterval:
initWithPlatformRequest:
platformRequest
_activeURLRequest
_strongSelf
_urlSession
_platformRequest
arrayWithObjects:count:
eventType
enqueuerProperties
isSBEnabled
deviceName
storeFrontID
timeZone
secondsFromGMT
numberWithLongLong:
buildVersion
isPrivateListeningEnabled
systemReleaseType
storeAccountID
numberWithUnsignedLongLong:
eventTimeZone
buildFeatures
initWithArray:
containerType
numberWithInteger:
itemEndTime
endReasonType
displayType
numberWithUnsignedInteger:
lyricsDisplayedCharacterCount
lyricsLanguage
featureName
itemDuration
mediaType
isOffline
repeatPlayMode
shufflePlayMode
autoPlayMode
persistentID
eventDate
timeIntervalSinceNow
recommendationData
sourceType
itemStartTime
timedMetadata
trackInfo
propertyListWithData:options:format:error:
itemType
requestingBundleIdentifier
requestingBundleVersion
householdID
isSiriInitiated
version
containerID
externalID
personalizedContainerID
storeID
reasonHintType
itemIDs
radioAdamID
subscriptionAdamID
equivalencySourceAdamID
purchasedAdamID
cloudID
lyricsID
containerIDs
stationHash
stationStringID
stationID
adamID
cloudAlbumID
globalPlaylistID
playlistVersionHash
cloudPlaylistID
defaultOverrideHTTPHeaderFields
propertyListObjectWithPlayActivityEvent:
currentStoreFrontID
setCurrentStoreFrontID:
_currentStoreFrontID
setDateFormat:
localeWithLocaleIdentifier:
setLocale:
setLenient:
timeZoneForSecondsFromGMT:
setTimeZone:
dateFromString:
itemAdamID
itemCloudID
itemName
itemSortName
artistSortName
artistID
playlistName
albumSortName
playlistArtistName
composerName
composerSortName
genre
genreID
albumID
discCount
discNumber
trackCount
trackNumber
duration
isExplicit
year
bitrate
comments
dateAdded
drmVersionNumber
isGapless
isMasteredForITunes
kind
sampleRate
versionRestrictions
isCompilation
copyright
rank
releaseDate
storefrontID
vendorID
metadataDictionary
playlistID
_playlistID
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
delegateAccountStoreDidChange
openWithCompletionHandler:
recreateWithCompletionHandler:
addDelegationUUIDs:forUserIdentity:completionHandler:
removeAllTokensWithCompletionHandler:
removeDelegationUUIDs:forUserIdentity:completionHandler:
removeIdentityPropertiesForUserIdentity:completionHandler:
removeTokenForUserIdentity:completionHandler:
removeTokensExpiringBeforeDate:completionHandler:
setIdentityProperties:forUserIdentity:completionHandler:
setToken:forUserIdentity:completionHandler:
initWithObjects:
ic_errorWithDomain:code:underlyingError:
boolValue
doubleValue
initWithEligibilityDictionary:cellularProviderName:phoneNumber:
carrierBundlingStatusType
isFamilySubscription
error
SMSSessionIdentifier
delayInterval
wantsDelayedRetry
headerEnrichmentMessage
headerEnrichmentSessionIdentifier
headerEnrichmentURL
needsHeaderEnrichment
needsSilentSMS
silentSMSMessage
silentSMSNumber
cellularProviderName
_familySubscription
_wantsDelayedRetry
_needsHeaderEnrichment
_needsSilentSMS
_carrierBundlingStatusType
_error
_SMSSessionIdentifier
_delayInterval
_headerEnrichmentMessage
_headerEnrichmentSessionIdentifier
_headerEnrichmentURL
_silentSMSMessage
_silentSMSNumber
_cellularProviderName
_phoneNumber
indexOfObject:
isEqualToArray:
decodeObjectOfClasses:forKey:
containsValueForKey:
initWithStationIdentifier:
tracks
stationIdentifier
numberOfSkips
currentTrack
_currentTrack
_numberOfSkips
_stationIdentifier
_tracks
_updateTracksUsingBlock:
addObjectsFromArray:
removeObjectAtIndex:
_checkCurrentTrackIsPresent
removeObjectsAtIndexes:
replaceObjectAtIndex:withObject:
containsObject:
addTrack:
addTracks:
removeExpiredTracks
removeTracksAtIndexes:
replaceTrackAtIndex:withTrack:
setCurrentTrack:
setNumberOfSkips:
setTracks:
setContainerID:
initWithStoreIdentifier:
_containerID
initWithInt:
initWithUTF8String:
bytes
longLongValue
bindDouble:atPosition:
bindFloat:atPosition:
bindInt:atPosition:
bindInt64:atPosition:
bindNullAtPosition:
bindNumber:atPosition:
bindData:atPosition:
bindString:atPosition:
bindDataCopy:atPosition:
bindStringCopy:atPosition:
clearBindings
initWithStatement:connection:
columnIndexByName
finalizeStatement
isReadOnly
reset
step
connection
sqlite3_stmt
_connection
_statement
getAgeVerificationStateForUserIdentity:completion:
_updateAgeVerificationStateForUserIdentity:sendNotification:completion:
ageVerificationStateForUserIdentity:
accessQueue
ageVerificationStateInternal
objectForKeyedSubscript:
cachedStateForDSID:
_updateAgeVerificationStateAndSendNotification:completion:
_registerForNotifications
currentDeviceInfo
isInternalBuild
hasEntitlement:inGroup:
_userIdentityStoreDidChange:
_processAgeVerificationState:forDSID:
calloutQueue
_runAgeVerificationForUserIdentity:completion:
ageVerificationStateNotRequiredForUserIdentity:withError:
_bagHasValidKeys:
ageVerificationStateNotRequiredForUserIdentity:
ageVerificationStateNotRequiredForUserIdentity:withTreatment:verificationURL:
boolValueForBagKey:
shouldRunAgeVerification
ageVerificationExpirationDate
initWithExpirationDate:
initWithUserIdentity:ageVerifier:treatment:verificationURL:
saveToUserDefaults
defaultManager
getAgeVerificationStateWithCompletion:
ageVerificationState
setAccessQueue:
setCalloutQueue:
setAgeVerificationStateInternal:
_ageVerificationStateInternal
DSIDForUserIdentity:outError:
stringValue
initWithMessageStore:identityStore:
_handleICInAppMessagesDidChangeDistributedNotification:
isAudioAccessory
initWithMachServiceName:
setDelegate:
_schedulePeriodicUpdate
syncMessagesWithCompletion:
updateStoreProperty:forKey:completion:
getStorePropertyForKey:completion:
addObserver:
sharedPrivacyInfo
_performSyncRetryIfPending
beginObservingPrivacyAcknowledgementForIdentifier:handler:
endObservingPrivacyAcknowledgementForIdentifier:withToken:
removeObserver:
invalidate
_xpcClientConnection
remoteObjectProxyWithErrorHandler:
allMessageEntriesWithCompletion:
getAllMessageEntriesWithCompletion:
setWithObject:
messageEntriesForBundleIdentifiers:completion:
getAllMessageEntriesForBundleIdentifiers:completion:
messageEntryWithIdentifier:bundleIdentifier:completion:
getMessageEntryWithIdentifier:bundleIdentifier:completion:
addMessageEntry:completion:
_addMessageEntry:completion:
initWithStartHandler:
updateMessageEntry:completion:
removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
_removeMessageEntryWithIdentifier:forBundleIdentifier:completion:
removeAllMessageEntriesForBundleIdentifier:completion:
_removeAllMessageEntriesForBundleIdentifier:completion:
_performSyncWithCompletion:
resetMessagesWithCompletion:
_resourceCacheDirectoryPath
removeItemAtPath:error:
resetStoreWithCompletion:
reportEventForMessageIdentifier:withParams:flushImmediately:completion:
initWithMessageIdentifier:params:
eventIdentifier
flushEventsWithCompletion:
addPendingMessageEvent:completion:
_privacyAcknowledgementRequired
messageIdentifier
params
initWithStoreRequestContext:messageIdentifier:params:
removePendingMessageEventWithIdentifier:completion:
performRequestWithResponseHandler:
pendingMessageEventsWithCompletion:
downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
_downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:
_updateShouldDownloadResources:onMessageWithIdentifier:bundleIdentifier:completion:
clearCachedResourcesForMessageWithIdentifier:bundleIdentifier:completion:
getMetadataForMessageIdentifier:bundleIdentifier:completion:
getAllMetadataForBundleIdentifiers:completion:
updateMetadata:messageIdentifier:bundleIdentifier:completion:
removeMetadataForMessageIdentifier:bundleIdentifier:completion:
getGlobalPropertyForKey:completion:
setGlobalProperty:forKey:completion:
getPropertyForKey:bundleIdentifier:completion:
getStorePropertyForKey:bundleIdentifier:completion:
setProperty:forKey:bundleIdentifier:completion:
updateStoreProperty:forKey:bundleIdentifier:completion:
initWithMachServiceName:options:
messageEntriesForBundleIdentifier:completion:
syncPollingInterval
bypassBagSanityChecks
_performCacheConsistencyCheck
_loadConfigurationWithCompletion:
timeIntervalSinceReferenceDate
initWithStoreRequestContext:fromRevision:
_processSyncResponse:completion:
applicationMessageSyncResponsesCount
applicationMessageSyncResponsesAtIndex:
bundleID
syncCommandsCount
syncCommandsAtIndex:
commandSerialNumber
applicationMessage
commandType
initWithApplicationMessage:bundleIdentifier:
shouldDownloadResources
_checkForMessageResourcesNeedingDownloadForcingIfNecessary:
setShouldDownloadResources:
bundleIdentifier
initWithBundleIDs:states:
applicationStateForApplication:
notification
JSONObjectWithData:options:error:
_amsPushHandler
shouldHandleNotification:
handleNotification:
stringByAppendingPathComponent:
isMac
initWithBundleIdentifier:
hasPrefix:
removePendingNotificationRequestsWithIdentifiers:
removeDeliveredNotificationsWithIdentifiers:
removeAllMetadataForBundleIdentifier:completion:
getAllMessageEntriesForBundleIdentifier:completion:
allStorePropertiesWithCompletion:
clearCachedResources
operationCount
lastKnownNetworkType
shouldAllowDataForNetworkType:
resourceDomainURL
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
cachedLocationForResourceWithIdentifier:
URLWithString:relativeToURL:
lastPathComponent
initWithURL:requestContext:
fileURLWithPath:
enqueueDownloadRequest:toDestination:withCompletionHandler:
images
hasURL
setCacheLocation:forResourceWithIdentifier:
setDidCacheRequiredResources:
pathWithComponents:
initWithDictionary:
setWithCapacity:
array
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
removeItemAtURL:error:
privacyAcknowledgementRequiredForIdentifier:
setUserNotificationExtensionId:
bagKeySet
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
initWithConfiguration:bag:
valueForEntitlement:
setExportedInterface:
_removeConnection:
_addConnection:
removeObject:
isRemoteServerLikelyReachable
networkType
isCurrentNetworkLinkHighQuality
sharedManager
listener:shouldAcceptNewConnection:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
startSystemService
stopSystemService
reportEventForMessageIdentifier:withParams:completion:
getAllMetadataForBundleIdentifier:completion:
_unsafeMessageStore
_downloadOperationQueue
_callbackQueue
_messageStore
_isSystemService
_foregroundApplicationIdentifier
_privacyObserverToken
_xpcServiceListener
_xpcConnections
connectStartDate
connectEndDate
domainLookupStartDate
domainLookupEndDate
fetchStartDate
requestStartDate
responseStartDate
responseEndDate
secureConnectionStartDate
resourceFetchType
isReusedConnection
redirectCount
urlRequest
HTTPBody
responseData
response
valueForHTTPHeaderField:
statusCode
_CFURLResponse
stringWithCString:encoding:
initWithTransactionMetrics:request:
connectionStartTime
connectionEndTime
domainLookupStartTime
domainLookupEndTime
fetchStartTime
requestStartTime
responseStartTime
responseEndTime
secureConnectionStartTime
cachedResponse
connectionReused
appleTimingApp
connectionType
edgeNodeCacheStatus
environmentDataCenter
responseDate
requestMessageSize
requestUrl
resolvedIPAddress
responseMessageSize
_cachedResponse
_connectionReused
_connectionStartTime
_connectionEndTime
_domainLookupStartTime
_domainLookupEndTime
_fetchStartTime
_requestStartTime
_responseStartTime
_responseEndTime
_secureConnectionStartTime
_appleTimingApp
_connectionType
_edgeNodeCacheStatus
_environmentDataCenter
_responseDate
_statusCode
_redirectCount
_requestMessageSize
_requestUrl
_resolvedIPAddress
_responseMessageSize
isNSString__
initWithRemoteRequestOperationResponse:remoteRequestOperationError:
remoteRequestOperationResponse
setRemoteRequestOperationResponse:
remoteRequestOperationError
setRemoteRequestOperationError:
_remoteRequestOperationResponse
_remoteRequestOperationError
setRequestURLBagKey:
setIncludeKeybagSyncData:
setIncludeSubscriptionKeybagSyncData:
initWithRequestContext:redownloadParameters:
initWithRequestContext:subscriptionItemID:
stop
delegationConsumerNetService:didAcceptConnectionWithInputStream:outputStream:
code
_updateNetServiceStatus
substringToIndex:
initWithDomain:type:name:port:
objectEnumerator
setDelegationAccountUUIDs:
setServiceVersion:
setDeviceName:
securityMode
setSecurityMode:
TXTRecordData
setTXTRecordData:
publishWithOptions:
getDeviceReceiverSettingsWithCompletion:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
initWithUserIdentityDelegationAccountUUIDs:
securitySettings
publish
delegate
userIdentityDelegationAccountUUIDs
_didPublish
_isPublished
_netService
_netServiceQueue
_securitySettings
_delegate
_userIdentityDelegationAccountUUIDs
_finishWithError:
completionHandler
_provisionSession
ic_sharedRequestOperationQueueWithQualityOfService:
performRequestOnOperationQueue:withCompletionHandler:
_sessionIdentifier
defaultSessionConfiguration
setAllowsCellularAccess:
setDiscretionary:
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
setRequestCachePolicy:
setSessionSendsLaunchEvents:
set_requiresPowerPluggedIn:
set_sourceApplicationBundleIdentifier:
allowDownloadOnConstrainedNetworks
set_socketStreamProperties:
set_prefersInfraWiFi:
set_companionProxyPreference:
sharedSessionManager
sessionWithIdentifier:configuration:
initWithURL:requestContext:resumeData:
progress
addChild:withPendingUnitCount:
optionsDictionary
bodyDataURL
enqueueAVDownloadRequest:toDestination:withOptions:completionHandler:
stringWithString:
initWithRequestContext:assetURL:avAssetDownloadOptions:resumeData:
destinationURL
setDestinationURL:
allowsCellularData
setAllowsCellularData:
allowsCellularFallback
setAllowsCellularFallback:
isDiscretionary
requiresPower
setRequiresPower:
resumeData
setResumeData:
_downloadOptions
_downloadSession
_request
_response
_allowsCellularData
_allowsCellularFallback
_discretionary
_requiresPower
_destinationURL
_resumeData
sessionWithQualityOfService:
_sessionIdentifierWithQualityOfService:
_newSessionWithQualityOfService:
set_tlsTrustPinningPolicyName:
ignoreExtendedCertificateValidation
set_alwaysPerformDefaultTrustEvaluation:
bundleProxyForCurrentProcess
defaultMaximumConcurrentRequests
set_requiresSustainedDataDelivery:
set_ignoreDidReceiveResponseDisposition:
initWithConfiguration:maxConcurrentRequests:qualityOfService:
highPrioritySession
sessionWithIdentifier:
addSession:withIdentifier:
removeSessionWithIdentifier:
_cachedSessions
ic_int64ValueForKey:
ic_intValueForKey:
ic_stringValueForKey:
ic_dictionaryValueForKey:
initWithMessageUserInfo:
userInfo
accountDSID
actionType
apsPayload
_userInfo
_accountDSID
_actionType
_apsPayload
ic_arrayValueForKey:
sagaServerRevision
sagaUpdatedSubscribedPlaylistIDs
jaliscoServerRevision
jaliscoChangedMediaTypes
moduleIdentifier
initWithUserIdentity:
_setupNotifications
_tearDownNotifications
sharedLibrary
valueForDatabaseProperty:
configuration
ic_cloudClientErrorWithCode:userInfo:
sharedContainerPropertyInfo
hasInfoForProperty:
authenticateAndStartInitialImport:completionHandler:
_enableCloudLibraryWithPolicy:startinitialImport:isExplicitUserAction:completionHandler:
_isAuthenticated
disableCloudLibraryWithReason:completionHandler:
isActive
setActive:
isAuthenticated
synchronousRemoteObjectProxyWithErrorHandler:
updateJaliscoLibraryWithReason:completionHandler:
updateSagaLibraryWithReason:completionHandler:
shouldProhibitMusicActionForCurrentNetworkConditions
isAuthenticatedWithQueue:completionHandler:
shouldProhibitVideosActionForCurrentNetworkConditions
loadArtworkInfoForPurchaseHistoryIDs:completionHandler:
loadScreenshotInfoForPurchaseHistoryIDs:completionHandler:
loadArtworkInfoForSagaIDs:completionHandler:
loadArtworkInfoForContainerSagaIDs:completionHandler:
loadScreenshotInfoForSagaIDs:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentIDs:completionHandler:
loadScreenshotInfoForSubscriptionPersistentIDs:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentIDs:completionHandler:
serialAccessQueue
remoteObjectProxy
sharedItemPropertyInfo
uploadCloudItemProperties
ic_sharedAccountStore
ic_activeStoreAccountWithError:
setAutomaticDownloadsEnabled:
ic_updateAutomaticDownloadKindsByAddingMediaKindMusic:completionHandler:
ic_isAutomaticDownloadsEnabledForMediaKindMusic
automaticDownloadsEnabled
availabilityService
hasProperNetworkConditionsToPlayMedia
hasProperNetworkConditionsToShowCloudMedia
isCellularDataRestrictedForMusic
isCellularDataRestrictedForVideos
isCellularDataRestrictedForStoreApps
shouldProhibitStoreAppsActionForCurrentNetworkConditions
canShowCloudDownloadButtons
canShowCloudMusic
canShowCloudVideo
cloudService
updateSagaInProgressChangedHandler
loadIsSagaUpdateInProgressWithCompletionHandler:
updateJaliscoInProgressChangedHandler
loadIsJaliscoUpdateInProgressWithCompletionHandler:
userIdentityStore
userIdentity
getPropertiesForUserIdentity:error:
isActiveLocker
cloudAddToPlaylistBehavior
setCloudAddToPlaylistBehavior:completionHandler:
createPlaylistWithPersistentID:properties:trackList:completionHandler:
sdk_createPlaylistWithPersistentID:properties:tracklist:completionHandler:
canSetPlaylistProperty:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:completionHandler:
publishPlaylistWithSagaID:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:completionHandler:
updatePinnedSubscribedPlaylistsWithCompletion:
addStoreItemWithAdamID:referral:completionHandler:
sdk_addStoreItemWithOpaqueID:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
removePlaylistsWithSagaIDs:completionHandler:
removeItemsWithSagaIDs:completionHandler:
hideItemsWithPurchaseHistoryIDs:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:completionHandler:
authenticateWithCompletionHandler:
enableCloudLibraryWithPolicy:startInitialImport:completionHandler:
disableCloudLibraryWithCompletionHandler:
becomeActive
removeJaliscoLibraryWithCompletionHander:
isMediaKindDisabledForJaliscoLibrary:
updateJaliscoLibraryWithCompletionHandler:
updateSagaLibraryWithCompletionHandler:
deauthenticateWithCompletionHandler:
loadIsJaliscoGeniusSupportedWithCompletionHandler:
loadJaliscoGeniusLearnMoreURLWithCompletionHandler:
loadJaliscoGeniusCUIDWithCompletionHandler:
setJaliscoGeniusCUID:withCompletionHandler:
enableJaliscoGeniusWithCompletionHandler:
updateJaliscoGeniusDataWithCompletionHandler:
cancelUpdateJaliscoGeniusDataInProgressWithCompletionHandler:
loadJaliscoGeniusOperationStatusWithCompletionHandler:
disableJaliscoGeniusWithCompletionHandler:
isAuthenticatedWithCompletionHandler:
loadLastKnownEnableICMLErrorStatusWithCompletionHander:
importItemArtworkForPurchaseHistoryID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
importItemArtworkForSagaID:completionHandler:
importScreenshotForSagaID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
importSubscriptionItemArtworkForPersistentID:completionHandler:
importSubscriptionScreenshotForPersistentID:completionHandler:
importSubscriptionContainerArtworkForPersistentID:completionHandler:
importArtistHeroImageForPersistentID:completionHandler:
importAlbumArtistHeroImageForPersistentID:completionHandler:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeItemArtworkForSagaID:
deprioritizeScreenshotForSagaID:
deprioritizeContainerArtworkForSagaID:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:
loadArtworkInfoForPurchaseHistoryID:completionHandler:
loadScreenshotInfoForPurchaseHistoryID:completionHandler:
loadArtworkInfoForSagaID:completionHandler:
loadArtworkInfoForContainerSagaID:completionHandler:
loadScreenshotInfoForSagaID:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentID:completionHandler:
loadScreenshotInfoForSubscriptionPersistentID:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentID:completionHandler:
loadMissingArtwork
loadGeniusItemsForSagaID:completionHandler:
loadIsUpdateInProgressWithCompletionHandler:
loadUpdateProgressWithCompletionHandler:
loadSagaUpdateProgressWithCompletionHandler:
loadJaliscoUpdateProgressWithCompletionHandler:
resetConfiguration:
resignActive
setDaemonConfiguration:
setPreferredVideoQuality:
canSetItemProperty:
setItemProperties:forPurchaseHistoryID:
setItemProperties:forSagaID:
uploadItemProperties
uploadCloudPlaylistProperties
setAlbumProperties:forAlbumPersistentID:completionHandler:
updateArtistHeroImages
loadBooksForStoreIDs:withCompletionHandler:
handleAutomaticDownloadPreferenceChangedForMediaKindMusic:withCompletionHandler:
isAutomaticDownloadsEnabledForMediaKindMusic
hasSetPreferenceForAutomaticDownloads
isCellularDataRestricted
shouldProhibitActionsForCurrentNetworkConditions
_serverDidLaunch
_serverSagaUpdateInProgressDidChange
_serverJaliscoUpdateInProgressDidChange
setUpdateSagaInProgressChangedHandler:
setUpdateJaliscoInProgressChangedHandler:
preferredVideoQuality
_active
_updateSagaInProgressChangedHandler
_updateJaliscoInProgressChangedHandler
_serialAccessQueue
_preferredVideoQuality
_availabilityService
_cloudService
activeLockerAccount
ic_automaticDownloadKinds
ic_activeStoreAccountWithCompletion:
setValue:forDatabaseProperty:
deleteDatabaseProperty:
dateWithTimeIntervalSinceReferenceDate:
cancellationHandler
setCancellationHandler:
startHandler
_cancellationHandler
_startHandler
_willBeginExecutingRemoteRequestOperation
_clientConnection
_didEndExecutingRemoteRequestOperation
performRemoteRequestOperationWithExecutionContext:completionHandler:
_scheduleInvalidationOfClientConnection
machServiceName
clientInterface
serviceInterface
_cancelClientConnectionInvalidationTimer
_invalidateClientConnection
_clientConnectionInvalidationTimerDidExpire
sharedRemoteRequestOperationController
_numberOfActiveRequests
_clientConnectionInvalidationTimer
initWithClientInfo:options:
invalidateCachedDeveloperTokenForClientInfo:requester:completionHandler:
fetchDeveloperTokenForClientInfo:completionHandler:
invalidateCachedDeveloperTokenForClientInfo:completionHandler:
initWithItemResponseDictionary:
keyServerURL
setKeyServerURL:
keyCertificateURL
setKeyCertificateURL:
fileAssets
initWithItemResponseDictionary:urlBag:
storeAdamID
artworkURL
cancelDownloadURL
downloadIdentifier
isPurchasedRedownload
purchaseDate
redownloadParameters
suzeLeaseID
hlsAsset
downloadableAsset
downloadableAssetMatchingFlavorType:
assetExpirationDate
setAssetExpirationDate:
_itemResponseDictionary
_urlBag
_assetExpirationDate
storeRequestContext
radioConfiguration
baseURL
URLByAppendingPathComponent:isDirectory:
timedMetadataData
storeAdamIDs
setRadioContentDictionaryCreationBlock:
initWithURLResponse:
performWithResponseHandler:
setStoreAdamIDs:
setStoreRequestContext:
setTimedMetadataData:
_storeAdamIDs
_timedMetadataData
_qualityOfService
arrayWithObjects:
ic_boolValueForKey:
initWithServerConfiguration:
allowedKinds
allowedMatchStatus
restoreURL
shouldGZip
_shouldGZip
_allowedKinds
_allowedMatchStatus
_restoreURL
capabilitiesDidChange:
storefrontCountryCodeDidChange:
storefrontIdentifierDidChange:
beginObservingCloudServiceStatusWithCompletionHandler:
endObservingCloudServiceStatusWithToken:completionHandler:
requestCapabilitiesWithPrivacyPromptPolicy:completionHandler:
requestStorefrontCountryCodeWithCompletionHandler:
requestStorefrontIdentifierWithCompletionHandler:
requestUserTokenForDeveloperToken:clientInfo:completionHandler:
resultCode
initWithResultCode:
serverHostName
serverInstance
isSuccess
setSuccess:
tokenResult
_success
_resultCode
_serverHostName
_serverInstance
_tokenResult
isNSNumber__
authServiceClientTokenTimeToLive
dateWithTimeIntervalSince1970:
decodeInt64ForKey:
encodeInt64:forKey:
token
generatedAtMillis
timeToLiveMillis
lifespanMillis
tokenIdentitifer
_token
_generatedAtMillis
_timeToLiveMillis
_lifespanMillis
_tokenIdentitifer
_DSID
_deviceGUID
_isComparableUsingResolvedDSID
_resolvedDSIDUsingSpecificIdentityStore:
deviceIdentifier
_ensureResolvedDSIDUsingSpecificIdentityStore:
_setResolvedDSID:
autoupdatingActiveAccount
autoupdatingActiveLockerAccount
carrierBundleWithDeviceIdentifier:
identityAllowingDelegation:
identityAllowingEstablishment:
allowsDelegation
allowsAccountEstablishment
creationTime
_deviceIdentifier
_allowsDelegation
_allowsAccountEstablishment
_creationTime
archivedDataWithRootObject:requiringSecureCoding:error:
ic_archivedDataWithRootUserIdentity:inStore:requiringSecureCoding:error:
performRequestWithCompletionHandler:
ic_URLByAppendingQueryParameters:
setCachePolicy:
urlResponse
initWithStoreRequestContext:
_loadCache
_fetchBagForRequestContext:withCompletionHandler:
_getCacheKeyForRequestContext:completionHandler:
allValues
_setExpirationDate:
_saveCache
storefrontIdentifier
userAgent
currentLocale
productVersion
componentsSeparatedByString:
appendFormat:
setShouldRequireURLBag:
setAnisetteVersion:
setPrioritize:
_calculatedExpiration
_initWithDictionary:expirationDate:serverCorrelationKey:serverEnvironment:
invalidateCache
_cacheFilePath
initWithContentsOfFile:
_initWithPropertyListRepresentation:
_propertyListRepresentation
stringByDeletingLastPathComponent
writeToFile:atomically:
processName
_cache
_pendingOperationsForCacheKey
isValidSubscriptionStatusResponseDictionary:error:
ic_errorWithDomain:code:debugDescription:
initWithResponseDictionary:expirationDate:
setSubscriptionStatus:
setFinalResponse:
_finalResponse
_needsReload
_subscriptionStatus
arrayWithCapacity:
sharedCookieStore
getCookie:userIdentifier:
dataWithJSONObject:options:error:
initWithStoreRequestContext:accountDSIDs:
_accountDSIDs
progressWithTotalUnitCount:
setCancellable:
setRequestType:
setAssetSourceStorefrontID:
setRequestContext:
setCompletedUnitCount:
setStoreSubscriptionAdamID:
initWithRequestContext:storeSubscriptionAdamID:
assetSourceStorefrontID
storeSubscriptionAdamID
_assetSourceStorefrontID
_storeSubscriptionAdamID
getResponseForFinishDelegationRequest:withSessionIDToRequestInfoMap:completionHandler:
getResponseForStartDelegationRequest:requestContext:withCompletionHandler:
isAppleTV
initWithBagKey:bagValueType:
bagKey
bagValueType
_bagKey
_bagValueType
privacyAcknowledgementRequiredForMusic
setStoreCloudID:
setStorePurchasedAdamID:
setDelegatedPlayback:
setCloudUniversalLibraryID:
setAdditionalQueryItems:
initWithResponseDictionary:requestDate:urlBag:
leaseInfoData
subscriptionKeyBagData
importSubscriptionKeyBagData:leaseInfoData:completionHandler:
start
isDelegatedPlayback
requestType
willBeginExecutionHandler
setWillBeginExecutionHandler:
storeCloudID
storePurchasedAdamID
cloudUniversalLibraryID
isFollowUp
setFollowUp:
_delegatedPlayback
_followUp
_willBeginExecutionHandler
_storeCloudID
_storePurchasedAdamID
_cloudUniversalLibraryID
fileAssetWithFlavorType:
previewDuration
previewURL
size
shouldSignBody
setShouldSignBody:
fields
setFields:
headers
setHeaders:
_shouldSignBody
_fields
_headers
setToken:
hasToken
setSessionID:
setHasSessionID:
hasSessionID
setExpirationTimeInterval:
setHasExpirationTimeInterval:
hasExpirationTimeInterval
hasStorefrontIdentifier
sessionID
expirationTimeInterval
_expirationTimeInterval
_sessionID
_storefrontIdentifier
initWithOptions:
_initWithValidatedOptions:
initSingleWriterWithOptions:error:
initWithAccountStoreOptions:
_openWithXPCWriter:completionHandler:
close
_popConnection
initWithConnection:
_recycleConnection:
_postDidChangeNotification
_writeUsingBlock:
_resetCorruptionUsingSQL
_resetCorruptionUsingXPC
setExternalChangeHandler:
domain
defaultDatabasePath
setReadOnly:
truncate
lastExpirationPruningDate
timeIntervalSinceDate:
performTransaction:
_writeSQLUsingBlock:
_writeXPCUsingBlock:
openWithOptions:completionHandler:
connectionNeedsResetForCorruption:
readUsingBlock:
_connectionPool
_isOpen
_options
_xpcWriter
setupWithConnection:error:
initWithDatabasePath:
attributesOfFileSystemForPath:error:
storageSpaceAvailable
cachingEnabled
ensureStorageIsAvailable:withCompletionHandler:
identityProperties
setIdentityProperties:
iCloudIdentityProperties
setICloudIdentityProperties:
_identityProperties
_iCloudIdentityProperties
currentThread
willChangeValueForKey:
didChangeValueForKey:
_execute
maxConcurrentOperationCount
isAsynchronous
isConcurrent
isExecuting
isFinished
finish
enqueueChildOperation:
_asyncOperationLock
_childOperationQueue
_qualityOfServiceForChildOperationQueue
_isExecuting
_isFinished
leaseSyncSessionWithID:accountID:mediaKind:returningLeaseSyncRequestData:error:
endLeaseSyncAndReturnError:
getLeaseSyncRenewRequestData:error:
importLeaseSyncResponseData:error:
processRenewResponseData:error:
accountID
leaseID
mediaKind
_mediaKind
_accountID
_leaseID
initWithRequestContext:
setMaxRetryCount:
reasonType
authenticationProvider
performAuthenticationUsingRequestContext:withCompletionHandler:
performWithCompletion:
mapTableWithKeyOptions:valueOptions:
_activePairedDevice
valueForProperty:
initWithUUIDString:
supportsCapability:
sharedInstance
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
activePairedDevicePairingID
pairedDevicePairingID
allPairedDevicePairingIDs
pairedDeviceGUID
isInitialSyncComplete
isMediaSyncingSupported
_allObservers
setIsInitialSyncComplete:
_queue
_callBackQueue
_observers
_pairingIDPropertyName
_pairedDeviceGUID
_pairedDeviceMediaGUID
_isInitialSyncComplete
tokenResults
tokenResultForAccountDSID:
_parsedTokenResults
_userIdentityStoreDidChangeNotification:
sharedSecurityInfo
_updateSupportedDelegationAccountUUIDs
performBlockAfterFirstUnlock:
_unregisterNotificationsForDelegationNetService:
_updateBrowsingStatus
delegationProviderServiceAddAssertion:
_updateAssertionTimeouts
delegationProviderServiceRemoveAssertion:
initWithNetService:
_registerNotificationsForDelegationNetService:
_updateDelegationForDiscoveredServices
netService
currentConnection
strongToStrongObjectsMapTable
_netServiceDelegationAccountUUIDsDidChangeNotification:
earlierDate:
minusSet:
setIncludesPeerToPeer:
searchForServicesOfType:inDomain:
delegationAccountUUIDs
allKeys
removeObjectsInArray:
initWithUserIdentities:userIdentityStore:requestContext:netService:delegationAccountUUIDs:
enumerateDelegateTokensWithType:usingBlock:completionHandler:
getDelegationUUIDsForUserIdentity:completionHandler:
sharedService
systemServiceWithRequestContext:
delegationProviderServiceSession:didFinishWithError:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
addAssertion:
removeAssertion:
startSystemXPCService
_activeServiceSessions
_connections
_connectionToAssertions
_assertions
_assertionTimeoutSource
_discoveredServices
_isNetServiceBrowserSearching
_listener
_netServiceBrowser
_netServiceBrowserQueue
_identityStoreOperationQueue
_supportedDelegationAccountUUIDToUserIdentity
initWithACAccountStore:
_accountStoreDidChangeNotification:
_activeStoreAccountWithError:
ic_DSID
_storeAccountForDSID:error:
ic_setActiveStoreAccount:error:
_synchronize
ic_isActiveLockerAccount
ic_setActiveLockerAccount:error:
_newUserIdentityPropertiesForAccount:
null
ic_primaryAppleAccountWithError:
ic_isCloudBackupEnabled
setCloudBackupEnabled:
aa_personID
setICloudPersonID:
removeAccount:withCompletionHandler:
_applyIdentityProperties:toAccount:
saveVerifiedAccount:error:
_storeAccountTypeWithError:
setAccountType:
_storeAccountForDSID:bypassCache:error:
contextWithACAccount:accountStore:
initWithAccountType:
ic_localStoreAccountWithError:
_newLocalStoreAccountPropertiesFromAccount:
_applyLocalStoreAccountProperties:toAccount:
userIdentityStoreBackendDidChange:
_handleITunesStoreAccountsChanged
alternateDSID
ic_setAltDSID:
ic_setDSID:
firstName
ic_setFirstName:
lastName
ic_setLastName:
isManagedAppleID
ic_setManagedAppleID:
isSandboxed
ic_setSandboxed:
ic_setStorefront:
isSubscriptionStatusEnabled
ic_setSubscriptionStatusEnabled:
username
setUsername:
mergeToCloudLibraryPreference
ic_setMergeWithCloudLibraryPreference:
cloudLibraryStateReason
ic_setCloudLibraryStateReason:
privateListeningEnabled
ic_setPrivateListeningEnabled:
ic_setActiveLockerAccount:
ic_allStoreAccountsWithError:
_allStoreAccountsWithError:
ic_storefront
ic_altDSID
setAlternateDSID:
ic_firstName
setFirstName:
ic_lastName
setLastName:
ic_isManagedAppleID
setManagedAppleID:
ic_isSandboxed
setSandboxed:
ic_isSubscriptionStatusEnabled
setSubscriptionStatusEnabled:
ic_ageVerificationExpirationDate
setAgeVerificationExpirationDate:
ic_mergeWithCloudLibraryPreference
setMergeToCloudLibraryPreference:
ic_homeUserIdentifiers
setHomeUserIdentifiers:
ic_cloudLibraryStateReason
setCloudLibraryStateReason:
ic_privateListeningEnabled
setPrivateListeningEnabled:
setActiveLocker:
ic_privateListeningEnabledForHomeUsers
setPrivateListeningEnabledForHomeUsers:
initWithKeyOptions:valueOptions:capacity:
aa_primaryAppleAccount
ic_storeAccountForStoreAccountID:error:
ic_storeAccountTypeWithError:
activeAccountDSIDWithError:
updateActiveAccountDSID:error:
activeLockerAccountDSIDWithError:
updateActiveLockerAccountDSID:error:
identityPropertiesForDSID:error:
identityPropertiesForPrimaryICloudAccountWithError:
removeIdentityForDSID:completion:
replaceIdentityProperties:forDSID:error:
setIdentityProperties:forDSID:error:
localStoreAccountPropertiesWithError:
setLocalStoreAccountProperties:error:
verificationContextForDSID:error:
verificationContextForAccountEstablishmentWithError:
_primaryICloudAccountIdentityProperties
_accountStore
_accountToIdentityProperties
_allStoreAccounts
_dsidToAccount
_primaryICloudAccountIdentityPropertiesValue
_storeAccountType
isSubclassOfClass:
carrierBundleDeviceIdentifier
iCloudPersonID
homeUserIdentifiers
privateListeningEnabledForHomeUsers
delegateToken
isCloudBackupEnabled
isDelegated
_alternateDSID
_carrierBundleDeviceIdentifier
_cloudBackupEnabled
_delegated
_delegateToken
_dsid
_firstName
_iCloudPersonID
_lastName
_managedAppleID
_sandboxed
_subscriptionStatusEnabled
_username
_ageVerificationExpirationDate
_mergeToCloudLibraryPreference
_homeUserIdentifiers
_cloudLibraryStateReason
_privateListeningEnabled
_activeLocker
_privateListeningEnabledForHomeUsers
replaceValuesWithValuesFromProperties:
setCarrierBundleDeviceIdentifier:
setDelegated:
setDelegateToken:
setDeviceID:
setHasDSID:
hasDSID
hasDeviceID
dSID
deviceID
_dSID
_deviceID
fileExistsAtPath:isDirectory:
_loadExistingArchivePaths
_pruneOldArchives
_onQueueFlush
_archiveForRequest:
_archiveForResponse:responseData:
_archiveCreator
stringFromDate:
insertObject:atIndex:
HTTPMethod
allHTTPHeaderFields
_arrayFromHeaderDictionary:
initWithData:encoding:
base64EncodedStringWithOptions:
localizedStringForStatusCode:
allHeaderFields
MIMEType
fileURLWithPath:isDirectory:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
sortUsingComparator:
lastObject
removeLastObject
sharedArchive
archiveRequest:withResponse:responseData:
flush
_loggedEvents
_flushTimer
_currentArchiveFileName
_dateFormatter
_creatorDictionary
_archiveDirectoryPath
_archiveFilePaths
_hasValidArchiveDirectory
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:
bundleForClass:
setDeveloperTokenProvider:
setPersonalizationMethod:
_storeRequestPersonalizationStyle
developerTokenProvider
personalizationMethod
_developerTokenProvider
_personalizationMethod
setUserIdentity:
initWithUserIdentity:userIdentityStore:
libraryBagKey
buildIdentifier
purchaseClientIdentifier
requestReason
familyMemberStoreID
configurationFromSourceConfiguration:userIdentity:
setBaseURL:
setLibraryBagKey:
setBuildIdentifier:
setPurchaseClientIdentifier:
setRequestReason:
setFamilyMemberStoreID:
_userIdentity
_userIdentityStore
_baseURL
_libraryBagKey
_buildIdentifier
_purchaseClientIdentifier
_requestReason
_familyMemberStoreID
parsedBody
initWithRequestContext:seedItemID:isLibraryID:maxResultCount:
_seedItemID
_isLibraryID
_maxResultCount
_resultsList
setACAccount:
setACAccountStore:
setVerificationStyle:
interactionLevel
setInteractionLevel:
debugReason
setDebugReason:
ACAccount
ACAccountStore
verificationStyle
_interactionLevel
_debugReason
_ACAccount
_ACAccountStore
_verificationStyle
shouldPlaybackRequireOnlineKeys
hasOnlinePlaybackKeys
hasOfflinePlaybackKeys
hasPendingLeaseAcquisition
leaseState
stateReasonDialog
stateReasonDialogMetricsDictionary
isEqualToDictionary:
setShouldPlaybackRequireOnlineKeys:
setHasOnlinePlaybackKeys:
setHasOfflinePlaybackKeys:
setHasPendingLeaseAcquisition:
setLeaseState:
setStateReasonDialog:
setStateReasonDialogMetricsDictionary:
_shouldPlaybackRequireOnlineKeys
_hasOnlinePlaybackKeys
_hasOfflinePlaybackKeys
_hasPendingLeaseAcquisition
_leaseState
_stateReasonDialog
_stateReasonDialogMetricsDictionary
dataUsingEncoding:allowLossyConversion:
serialNumber
initWithRequestContext:token:
initWithRequestContext:storeItemID:affiliateIdentifier:
_storeItemID
_affiliateIdentifier
stringWithCapacity:
decodeDoubleForKey:
encodeDouble:forKey:
setTokenResult:
lastError
setLastError:
lastUpdateAttemptTime
setLastUpdateAttemptTime:
shouldExcludeFromBackgroundRefresh
setShouldExcludeFromBackgroundRefresh:
_shouldExcludeFromBackgroundRefresh
_lastError
_lastUpdateAttemptTime
mainBundle
keyProfile
maxConcurrentRequests
cancelAllOperations
copyWithItemIdentifiersInRange:
completedUnitCount
initWithResponses:
subarrayWithRange:
initWithLocaleIdentifier:
returnsLocalEquivalencies
protocolVersion
imageProfile
platformIdentifier
setBatchSize:
setClientIdentifier:
clientBundleIdentifier
setClientBundleIdentifier:
clientBundleVersion
setClientBundleVersion:
setItemIdentifiers:
batchSize
batchResultsHandler
setBatchResultsHandler:
setImageProfile:
setKeyProfile:
setPlatformIdentifier:
setProtocolVersion:
setReturnsLocalEquivalencies:
setShouldIgnoreCache:
_returnsLocalEquivalencies
_shouldIgnoreCache
_clientIdentifier
_clientBundleIdentifier
_clientBundleVersion
_itemIdentifiers
_batchSize
_batchResultsHandler
_imageProfile
_keyProfile
_platformIdentifier
_protocolVersion
_retryDelay
_timeoutInterval
message
setTitle:
explanation
setMessage:
buttons
title
setAlternateButtonTitle:
setDefaultButtonTitle:
setOtherButtonTitle:
_setBoolValue:forKey:
initWithStoreDialog:
allowInCar
alternateButtonTitle
createCFUserNotification
defaultButtonTitle
displaysActionButtonOnLockScreen
displaysAsTopMost
forcesModalAppearance
otherButtonTitle
setAllowInCar:
setDisplaysActionButtonOnLockScreen:
setDisplaysAsTopMost:
setForcesModalAppearance:
alertLevel
setAlertLevel:
_userNotificationDictionary
_alertLevel
initWithMetadataDictionary:expirationDate:
calendarWithIdentifier:
offers
assets
explicitRating
offerType
_storePlatformReleaseDateFormatter
initWithArtworkResponseDictionary:
storeServerCalendar
artistStoreAdamID
collectionName
collectionStoreAdamID
copyrightText
genreNames
hasLyrics
hasTimeSyncedLyrics
movementCount
movementName
movementNumber
playlistGlobalID
offerWithType:
radioStationStringID
shouldShowComposer
formerStoreAdamIDs
workName
artworkInfos
initWithSystemApplicationType:
allowsFallbackToExpiredStatus
allowsFallbackToStatusNeedingReload
shouldReturnLastKnownStatusOnly
shouldBypassEnforcementOfPrivacyAcknowledgement
reason
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
_cacheAccountEligibilityWithStatus:requestContext:
hasCellularDataCapability
setCarrierBundlingStatusType:
carrierBundleProvisioningStyle
statusType
_carrierBundleStatusIsValidForCachedSubscriptionStatus:
cellularOperatorName
setCellularOperatorName:
sessionIdentifier
setSessionIdentifier:
setDeepLink:
setReasonType:
ic_underlyingError
setCarrierBundlingErrorCode:
_performSubscriptionStatusURLRequestWithRequestContext:subscriptionStatusURL:allowsAuthentication:completion:
updatePropertiesForUserIdentity:usingBlock:
initWithRequest:
request
allowsFuseHeaderEnrichment
setAllowsFuseHeaderEnrichment:
_allowsFuseHeaderEnrichment
ephemeralSessionConfiguration
initWithConfiguration:maxConcurrentRequests:
timeoutIntervalForRequest
setTimeoutIntervalForRequest:
sessionWithConfiguration:delegate:delegateQueue:
_checkRequestTimeouts
setType:
setCompletionHandler:
_enqueueRequest:
setResponseDataURL:
setAVDownloadOptions:
cancelRequest:withError:
setHandlingType:
setRetryReason:
setError:
task
_finishRequest:
prioritize
suspend
state
_processPendingRequests
_requestForTask:
setLastUpdateTime:
setUrlResponse:
startTime
countOfBytesSent
countOfBytesReceived
protectionSpace
authenticationMethod
sender
performDefaultHandlingForAuthenticationChallenge:
serverTrust
credentialForTrust:
currentURLRequest
setURL:
setCurrentURLRequest:
setRedirectCount:
_responseClass
performanceMetrics
initWithURLResponse:urlRequest:bodyData:performanceMetrics:
buildURLRequestWithCompletionHandler:
processInitialResponse:toRequest:withCompletionHandler:
_newResponseForRequest:
expectedContentLength
setTotalUnitCount:
_ignoreDidReceiveResponseDisposition
appendData:
_updateProgressForRequest:withTotalBytesWritten:totalBytesExpectedToWrite:
responseDataURL
linkItemAtURL:toURL:error:
transactionMetrics
setPerformanceMetrics:
updateState:
_processRequest:
networkConstraints
shouldAllowDataForCellularNetworkTypes
allowsCellularAccess
dataTaskWithRequest:
setTask:
downloadTaskWithRequest:
uploadTaskWithRequest:fromData:
downloadTaskWithResumeData:
retryCount
maxRetryCount
setResponseData:
setStartTime:
_scheduleNextRequestTimeoutCheck
_retryCountForReason:
_maxRetryCountForReason:
_incrementRetryCountForReason:
bodyData
processCompletedResponse:toRequest:withCompletionHandler:
taskIdentifier
initWithURLResponse:urlRequest:bodyDataURL:performanceMetrics:
_timeoutForRequest:
lastUpdateTime
totalUnitCount
lastProgressUpdateTime
setLastProgressUpdateTime:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
enqueueUploadRequest:withCompletionHandler:
enqueueDownloadRequest:withCompletionHandler:
enqueueAVDownloadRequest:withOptions:completionHandler:
pause
URLSession:avAssetDownloadTask:didReceiveAVAssetDownloadToken:
URLSession:avAssetDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
_pendingRequests
_activeRequests
_completionHandlers
_paused
_requestTimeoutTimer
_maxConcurrentRequests
isIPhone
isIPad
isIPod
matchStatus
_serializedBodyDataWithAccountID:
flavor
dictionaryWithObjectsAndKeys:
setValue:forKey:
initWithRequestContext:parameters:
performRestoreRequestWithCompletionHandler:
_storeURLRequest
_requestParameters
didCacheRequiredResources
updateMetadataValue:forKey:
allCachedResourceLocations
_bundleIdentifier
_resourceCache
_shouldDownloadResources
_didCacheRequiredResources
_applicationMessage
setApplicationMessage:
setCommandType:
setHasCommandType:
hasCommandType
commandTypeAsString:
StringAsCommandType:
hasApplicationMessage
setCommandSerialNumber:
setHasCommandSerialNumber:
hasCommandSerialNumber
_commandSerialNumber
_commandType
bagProfile
bagProfileVersion
_bagValueForKey:valueType:
setExpirationDate:
profile
setProfile:
profileVersion
setProfileVersion:
buildWithError:
_valueFromBagDictionary:forKeyPath:valueType:
_value:matchesExpectedType:
_valueForBagKey:valueType:fromURLBag:urlBagLoadingError:valueRetrievingError:
failingBagValueWithKey:valueType:error:
frozenBagValueWithKey:value:valueType:
_didFinishLoadingBag:error:
bagValueWithKey:valueType:valuePromise:
finishWithResult:
arrayForKey:
boolForKey:
createSnapshotWithCompletion:
doubleForKey:
integerForKey:
stringForKey:
URLForKey:
dictionaryForKey:
URLForKey:account:
_pendingBagValuePromises
_urlBagLoadingError
initWithAccountID:fairPlaySessionID:
fairPlaySessionID
_fairPlaySessionID
ic_cloudClientLibraryUploadErrorWithCode:userInfo:
_initWithXPCListener:testingIdentityStore:
anonymousListener
_userIdentityStoreDelegateAccountStoreDidChangeNotification:
endpoint
_prepareDelegateAccountStoreWithCompletionHandler:
_resetDelegateAccountStoreWithCompletionHandler:
removeAllDelegateTokensWithCompletionHandler:
removePropertiesForUserIdentity:completionHandler:
removeDelegateTokenForUserIdentity:completionHandler:
removeDelegateTokensExpiringBeforeDate:completionHandler:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
updatePropertiesForUserIdentity:usingBlock:completionHandler:
machServiceListener
testingListenerWithIdentityStore:
_ignoresEntitlements
_testingIdentityStore
initReturningError:
exchangeWithSAPVersion:data:returningData:exchangeStatus:error:
processResponseWithSignatureData:data:error:
keyForObject:
addApplicationMessageSyncResponses:
clearApplicationMessageSyncResponses
applicationMessageSyncResponsesType
applicationMessageSyncResponses
setApplicationMessageSyncResponses:
_applicationMessageSyncResponses
whaContentInfoWithAccountID:
vodkaType
_vodkaType
_defaultContainerURL
initWithContainerDirectoryURL:
initWithContainerDirectoryURL:identityStore:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_playbackHistoryOfClass:forStationWithIdentifier:identityKey:error:
_getCacheKeyForUserIdentity:completionHandler:
_fileURLForStationWithIdentifier:identityKey:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
writeToURL:options:error:
initWithContentsOfURL:options:error:
unarchivedObjectOfClass:fromData:error:
initWithIdentityStore:
flushWithCompletionHandler:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
removeHistoryForStationWithIdentifier:userIdentity:completionHandler:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:
containerDirectoryURL
_containerURL
_identityResolutionQueue
initWithWritingStyle:
initWithWritingStyle:databasePath:
_acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:shouldFilterStoreAccountID:completionHandler:
_revisionsIndexSetForPlayActivityEvents:
_completePendingPlayEventsWithRevisionIndexSet:forSessionToken:withResult:completionHandler:
_daemonPlayActivityControllerConnection
completePendingPlayActivityEvents:forSessionToken:result:withReplyBlock:
_revisionsIndexSetForPlayActivityEventPersistentIDs:
flushPlayActivityEventsForEndPointIdentifier:withReplyBlock:
revisionsIndexSet
_getFlushSessionInformationForEndpointIdentifier:shouldAcquire:storeAccountID:shouldFilterStoreAccountID:withCompletionHandler:
_table
currentEventsRevision
eventsRevisionVersionToken
performTransactionWithBlock:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
insertPlayActivityEvent:withRevision:returningError:
setCurrentEventsRevision:
setPlayActivityEvents:
insertPlayActivityEvents:withReplyBlock:
_loadEndpointIdentifierInformationIfNeeded
_requiredEndpointIdentifiers
currentRevision
additionalPendingRevisionsIndexSet
firstIndex
removePlayActivityEventsUpToRevision:withCompletionHandler:
removePlayActivityEventsUpToRevision:returningError:
removePlayActivityEventsUptoRevision:withReplyBlock:
setCurrentRevision:
setRevisionVersionToken:
_setEndpointRevisionInformation:forEndpointIdentifier:
setRevision:revisionVersionToken:forEndpointIdentifier:withReplyBlock:
sessionToken
acquirePendingPlayActivityEventsForEndpointIdentifier:storeAccountID:shouldFilterStoreAccountID:withReplyBlock:
_sessionInformationForSessionToken:
endpointIdentifier
removeIndexes:
_copyEndpointRevisionInformationForEndpointIdentifier:
revisionVersionToken
setAdditionalPendingRevisionsIndexSet:
addIndexes:
setRevisionsIndexSet:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
lastIndex
setEndpointIdentifier:
setSessionToken:
getRevisionInformationWithCompletionHandler:
_setupNotifyTokenIfNeeded
revisionsIndexSetForPlayActivityEvents:
revisionsIndexSetForPlayActivityEventPersistentIDs:
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
completePendingPlayActivityEventPersistentIDs:forSessionToken:withResult:completionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:
getPlayActivityEventsFromRevision:toRevision:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
removeFlushedPlayActivityEventsWithCompletionHandler:
setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:
writingStyle
_debugLogOperationQueue
_endpointIdentifierToEndpointRevisionInformation
_endpointRevisionInformationDidChangeNotifyToken
_hasAttemptedTableCreation
_hasLoadedEndpointRevisionInformation
_hasSetupEndpointRevisionInformationDidChangeNotifyToken
_hasValidEndpointRevisionInformationDidChangeNotifyToken
_pendingFlushingSessions
_writingStyle
isEqualToIndexSet:
_additionalPendingRevisionsIndexSet
_currentRevision
_revisionVersionToken
_endpointIdentifier
_revisionsIndexSet
_sessionToken
initWithRequestContext:notificationType:
_notificationType
setQueryItems:
componentsWithURL:resolvingAgainstBaseURL:
setQuery:
ic_queryParametersDictionary
ic_queryParametersDictionaryFromString:
path
fileSystemRepresentation
supportedSizes
hasMaxSupportedSize
maxSupportedSize
setSupportedSizes:
setHasMaxSupportedSize:
setMaxSupportedSize:
_hasMaxSupportedSize
_supportedSizes
_maxSupportedSize
_sortResponseArray
_sortSupportedSizesArray
initWithArtworkResponseArray:
initWithArtworkURL:
sizeInfo
responseArray
decodePropertyListForKey:
_hasOriginalSize
originalSize
artworkURLWithSize:cropStyle:format:
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
sortedResponseArray
rangeOfString:options:
replaceCharactersInRange:withString:
insertString:atIndex:
sortedArrayUsingComparator:
floatValue
valueWithBytes:objCType:
initWithArtworkResponseValue:
copyColorWithKind:
setSortedResponseArray:
sortedSupportedSizesArray
setSortedSupportedSizesArray:
_sizeInfo
_artworkURL
_sortedResponseArray
_sortedSupportedSizesArray
_responseArray
_updateRenewalTimer
addOperationWithBlock:
_newSuzeLeaseRequestWithType:clientData:
clientData
_updateRenewalTimerWithResponse:
initWithRequestContext:requestType:leaseID:mediaType:clientData:
suzeLeaseSession:leaseRenewalDidFailWithError:
_renewLeaseTimerAction
leaseExpirationDate
beginAutomaticallyRefreshingLease
endAutomaticallyRefreshingLease
startLeaseSessionWithCompletionHandler:
stopLeaseSessionWithCompletionHandler:
_automaticRefreshCount
_isRunning
_leaseExpirationDate
_leaseRenewTimer
_leaseSyncSession
_executeWithActiveICloudAccountProperties:
getPropertiesForActiveICloudAccountWithCompletionHandler:
dictionaryWithDictionary:
initWithRequestContext:redownloadParametersString:
isPlaybackRequest
setPlaybackRequest:
isStreamingRental
setStreamingRental:
usePrioritizedURLSession
setUsePrioritizedURLSession:
setRedownloadParameters:
requestURLBagKey
includeKeybagSyncData
includeSubscriptionKeybagSyncData
_redownloadResponse
_playbackRequest
_streamingRental
_usePrioritizedURLSession
_includeKeybagSyncData
_includeSubscriptionKeybagSyncData
_redownloadParameters
_requestURLBagKey
_initCommon
initWithIdentityStoreStyle:
lock:
identityStoreStyle
uniqueIdentifier
activeAccountHistory
setActiveAccountHistory:
activeLockerAccountHistory
setActiveLockerAccountHistory:
backend
setBackend:
delegateAccountStoreOptions
setDelegateAccountStoreOptions:
_identityStoreStyle
_uniqueIdentifier
_activeAccountHistory
_activeLockerAccountHistory
_backend
_delegateAccountStoreOptions
addEventParameters:
setApplicationMessageIdentifier:
eventParametersCount
clearEventParameters
eventParametersAtIndex:
eventParametersType
hasApplicationMessageIdentifier
applicationMessageIdentifier
eventParameters
setEventParameters:
_applicationMessageIdentifier
_eventParameters
URLBag
setURLBag:
delegatedDSID
setDelegatedDSID:
delegatedStorefrontIdentifier
setDelegatedStorefrontIdentifier:
delegatedURLBag
setDelegatedURLBag:
_URLBag
_delegatedDSID
_delegatedStorefrontIdentifier
_delegatedURLBag
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
responseSinfDictionary
_responseSinfDictionary
performRequestOnOperationQueue:withResponseHandler:
_executeByPerformingStoreRequestWithContext:qualityOfService:
setResponse:
getCachedUserTokenForDeveloperToken:requestContext:completion:
mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
setCancelOnHTTPErrors:
setCachedUserToken:forDeveloperToken:requestContext:completion:
initWithDeveloperToken:clientInfo:options:
_clientInfo
_developerToken
addPlayerInfoContextRequestToken:
playerInfoContextRequestTokenType
clearPlayerInfoContextRequestTokens
playerInfoContextRequestTokensCount
playerInfoContextRequestTokenAtIndex:
playerInfoContextRequestTokens
setPlayerInfoContextRequestTokens:
_playerInfoContextRequestTokens
deviceModelOverride
hardwarePlatformOverride
dataUsingEncoding:
deviceClassOverride
_gestaltDeviceClass
macAddressData
dataWithBytes:length:
productVersionOverride
productPlatformOverride
fairPlayDeviceTypeOverride
unsignedIntValue
nanoPairedDeviceStatusMonitorPairedDeviceChanged:
nanoPairedDeviceStatusMonitorNewActiveDevice:
nanoPairedDeviceStatusMonitor:didChangeClientSyncState:
nanoPairedDeviceStatusMonitor:didFinishInitialSyncForPairingIdentifier:
deviceModel
rawDeviceModel
hardwarePlatform
deviceFairPlayGUIDData
deviceClass
macAddress
mainScreenSize
hasTelephonyCapability
hasWiFiCapability
hasWAPICapability
has720pCapability
has1080pCapability
screenClass
productPlatform
fairPlayDeviceType
supportsSideLoadedMediaContent
supportsMusicStreaming
_hasRegisteredForNameNotifications
_nameNotificationToken
_productVersion
_deviceModel
_rawDeviceModel
_hardwarePlatform
_buildVersion
_deviceClass
_fairPlayDeviceType
_currentLocale
_deviceGUIDData
_name
_serialNumber
_macAddressData
_mainScreenSize
_hasCellularDataCapabilityNumber
_hasTelephonyCapabilityNumber
_hasWiFiCapabilityValue
_hasWAPICapabilityValue
_has720pCapabilityValue
_has1080pCapabilityValue
_screenClassValue
_isInternalBuildNumber
_supportsMusicStreamingValue
_systemReleaseType
storefrontHeaderSuffix
stringByAppendingString:
initWithObjectsAndKeys:
localStoreAccountProperties
initWithPlayActivityController:
playActivityController
_playActivityController
setTriggerValue:
setBundleIdentifier:
dataType
setDataType:
setHasDataType:
hasDataType
dataTypeAsString:
StringAsDataType:
comparisonType
setComparisonType:
setHasComparisonType:
hasComparisonType
comparisonTypeAsString:
StringAsComparisonType:
hasTriggerValue
triggerConditionType
setTriggerConditionType:
setHasTriggerConditionType:
hasTriggerConditionType
triggerConditionTypeAsString:
StringAsTriggerConditionType:
setKind:
setHasKind:
hasKind
kindAsString:
StringAsKind:
hasBundleIdentifier
triggerValue
_comparisonType
_dataType
_kind
_triggerConditionType
_triggerValue
numberWithUnsignedInt:
setWidth:
setHasWidth:
hasWidth
setHeight:
setHasHeight:
hasHeight
width
height
_height
_uRL
_width
setMetadataValue:forKey:
metadataValueForKey:
allMetadataValues
_metadataValues
_finishWithSyncState:error:
urlForBagRadioKey:
initWithBagRadioDictionary:
getTracksDPInfoKBSyncCount
maxSupportedProtocolVersion
isContinueListeningAvailable
continueListeningMaxQueueSizeInRequest
continueListeningMaxUpcomingTracksSizeToMaintain
continueListeningLoadStationThreshold
shouldIncludeHTTPHeaderField:forRequestURL:
_bagRadioDictionary
setStatus:
verificationExpirationDate
status
runAgeVerification
isExplicitContentAllowed
_status
_verificationExpirationDate
setCacheSizeWithNumberOfKilobytes:
setCacheSize:
cacheSize
setCacheSizeWithNumberOfDatabasePages:
applyToDatabase:
_readOnly
_cacheSize
contentDictionary
_storePlatformMetadataDictionaryFromRadioMetadataDictionary:
allStorePlatformMetadata
storePlatformMetadataForStoreAdamID:
playActivityEvents
outputStreamToFileAtPath:append:
open
writePropertyList:toStream:format:options:error:
write:maxLength:
main
_playActivityEvents
initWithURLRequest:requestContext:resumeData:
_responseHandlerClass
setProgress:
stringByAppendingFormat:
standardUserDefaults
setRequestState:
ICURLRequest:didChangeState:
_setMaxRetryCount:forReason:
_ensureValidRetryReason:
unsignedIntegerValue
_defaultMaxRetryCountForReason:
cancelOnHTTPErrors
requestState
waitSemaphore
setWaitSemaphore:
avDownloadOptions
handlingType
retryReason
_maxRetryCounts
_retryCounts
_observerQueue
_prioritize
_cancelOnHTTPErrors
_progress
_requestState
_urlRequest
_task
_waitSemaphore
_currentURLRequest
_urlResponse
_responseData
_responseDataURL
_avDownloadOptions
_handlingType
_retryReason
_startTime
_lastUpdateTime
_lastProgressUpdateTime
_performanceMetrics
_completionHandler
accountsWithAccountType:options:completion:
ic_storeAccountTypeWithCompletion:
accountTypeWithAccountTypeIdentifier:error:
accountsWithAccountType:options:error:
ic_allStoreAccountsWithCompletion:
saveAccount:withDataclassActions:doVerify:completion:
aa_primaryAppleAccountWithCompletion:
aa_appleAccountsWithError:
aa_isAccountClass:
isEqualToNumber:
accountTypeWithIdentifier:completion:
ic_isLocalAccount
ic_activeLockerAccountWithCompletion:
ic_primaryAppleAccountWithCompletion:
ic_setActiveStoreAccount:completion:
ic_setActiveLockerAccount:completion:
ic_storeAccountForStoreAccountID:completion:
ic_activeLockerAccountWithError:
ic_storeAccountForHomeUserIdentifier:completion:
ic_storeAccountForHomeUserIdentifier:error:
ic_localStoreAccountWithCompletion:
ic_allStoreAccounts
ic_activeStoreAccount
ic_activeLockerAccount
ic_primaryAppleAccount
ic_setActiveStoreAccount:
ic_storeAccountForStoreAccountID:
_ic_storeAccountType
addPlayerDelegateInfoToken:
playerDelegateInfoTokenType
clearPlayerDelegateInfoTokens
playerDelegateInfoTokensCount
playerDelegateInfoTokenAtIndex:
playerDelegateInfoTokens
setPlayerDelegateInfoTokens:
_playerDelegateInfoTokens
setTriggerName:
hasTriggerName
triggerName
_triggerName
addCloudItemID:idType:
insertCloudItemID:idType:atIndex:
enumerateCloudItemIDsUsingBlock:
_itemIDs
_idTypes
_propertiesToSaveForProperties:
defaultActiveAccountDSID
setDefaultActiveAccountDSID:
defaultActiveLockerAccountDSID
setDefaultActiveLockerAccountDSID:
defaultStorefrontIdentifier
setDefaultStorefrontIdentifier:
_activeAccountDSID
_activeLockerAccountDSID
_localStoreAccountProperties
addEntriesFromDictionary:
initWithRequestContext:withRequestMethod:
initWithRequestContext:withRequestMethod:andBodyDictionary:
_requestMethod
_bodyDictionary
addPageDetails:
addActionDetails:
setPageId:
pageDetailsCount
clearPageDetails
pageDetailsAtIndex:
setTargetId:
setActionURL:
actionDetailsCount
clearActionDetails
actionDetailsAtIndex:
setEventType:
setPageUrl:
setImpression:
pageDetailsType
actionDetailsType
hasPageId
pageType
setPageType:
setHasPageType:
hasPageType
pageTypeAsString:
StringAsPageType:
hasTargetId
setTargetType:
setHasTargetType:
hasTargetType
targetTypeAsString:
StringAsTargetType:
setActionType:
setHasActionType:
hasActionType
actionTypeAsString:
StringAsActionType:
hasActionURL
hasEventType
hasPageUrl
hasImpression
pageId
pageDetails
setPageDetails:
targetId
actionURL
actionDetails
setActionDetails:
pageUrl
impression
_actionDetails
_actionURL
_eventType
_impression
_pageDetails
_pageId
_pageType
_pageUrl
_targetId
_targetType
initWithItemID:title:storeFrontID:mediaKind:accountID:matchStatus:flavor:
_adamID
_matchStatus
_title
_storeFrontID
_flavor
initWithRequest:responseHandler:
performRequest:withResponseHandler:
_activeSessions
initWithUserIdentityDelegationAccountUUIDs:requestContext:timeoutInterval:
albumName
setAlbumName:
_albumName
initWithRadioStationProviderResourceDictionary:
_url
ageVerificationStateNotRequiredForUserIdentity:withTreatment:
_initWithUserIdentity:status:treatment:verificationURL:error:
lastKnownUserAgeVerificationState
_stateFromDictionaryRepresentation:DSID:
ageVerifier
_dictionaryRepresentationWithDSID:
setLastKnownUserAgeVerificationState:
treatment
verificationURL
isDynamic
_treatment
_verificationURL
_ageVerifier
providerName
IMEI
_sendEnrichmentRequestWithURL:preflightResponse:completionHandler:
_sendSilentSMSRequestWithMessage:number:preflightResponse:completionHandler:
_sendPreflightRequestWithCompletionHandler:
_finishEnrichmentWithBodyDictionary:completionHandler:
_newDefaultRequestBodyDictionary
set_CTDataConnectionServiceType:
initWithURL:statusCode:HTTPVersion:headerFields:
_newDefaultRequestBodyDictionaryWithResponseCode:error:
sendSMSWithText:toPhoneNumber:error:
isDeepLink
_mobileSubscriberCountryCode
_mobileSubscriberNetworkCode
_IMEI
_deepLink
subarraysOfSize:
initWithValue:timestamp:
timestamp
addValue:timestamp:
enumerateValuesUsingBlock:
enumerateObjectsWithOptions:usingBlock:
addValuesFromHistory:
firstValueAfterOrEqualToTimestamp:
firstValueBeforeTimestamp:
lastValue
removeAllValues
removeValuesBeforeTimestamp:
_items
initWithUnsignedLongLong:
_timestamp
_value
setNotification:
trigger
setTrigger:
setHasTrigger:
hasTrigger
triggerAsString:
StringAsTrigger:
setDate:
setHasDate:
hasDate
setInterval:
setHasInterval:
hasInterval
hasNotification
interval
_date
_interval
_notification
_trigger
initWithVersion:contextID:contentInfo:returningError:
getPlayerDelegateInfoDataUsingPlayerDelegateInfoResponseData:returningData:error:
getStreamerInfoContextDataUsingPlayerInfoContextData:returningData:error:
playerInfoContextRequestData
_playerInfoContextRequestData
ICStoreRadioStreamFlavorWithString:
ICStoreRadioStreamProtocolWithString:
streamProtocol
streamURL
isiTunesStoreStream
setITunesStoreStream:
_iTunesStoreStream
allowsHandlingNonAuthenticationDialogs
shouldRecordLastAuthenticationDialogResponseTime
_handleBuyButtonAction:usingRequestContext:withCompletionHandler:
_handleGotoButtonAction:usingRequestContext:withCompletionHandler:
handleStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_handleDefaultStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_handleAuthenticationStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
setAllowsHandlingNonAuthenticationDialogs:
setShouldRecordLastAuthenticationDialogResponseTime:
action
handleButtonAction:usingRequestContext:withCompletionHandler:
displayUserNotification:withCompletionHandler:
setLastAuthenticationDialogResponseTime:
buyParams
initWithRequestContext:buyParametersString:includeKeybagSyncData:
subtarget
URLString
handleStoreDialogResponse:usingRequestContext:withCompletionHandler:
_allowsHandlingNonAuthenticationDialogs
_shouldRecordLastAuthenticationDialogResponseTime
ic_dataWithFairPlayBytes:length:
_runAllPendingBlocksOfType:
isSetupAssistantRunning
isDeviceSetupComplete
performBlockAfterBuddySetup:
performBlockAfterDeviceSetup:
_workQueue
_pendingBuddyCompleteBlocks
_pendingSetupCompleteBlocks
_setupAssistantRunning
_setupAssistantFinishedNotifyToken
_setupAssistantLaunchedNotifyToken
dateByAddingTimeInterval:
serverError
dialog
authorized
shouldCancelPurchaseBatch
downloadQueueItemCount
jingleAction
items
_requestDate
addSyncCommands:
setBundleID:
clearSyncCommands
syncCommandsType
hasBundleID
syncCommands
setSyncCommands:
_bundleID
_syncCommands
setRepeatPlayMode:
setHasRepeatPlayMode:
hasRepeatPlayMode
repeatPlayModeAsString:
StringAsRepeatPlayMode:
setShufflePlayMode:
setHasShufflePlayMode:
hasShufflePlayMode
shufflePlayModeAsString:
StringAsShufflePlayMode:
setAutoPlayMode:
setHasAutoPlayMode:
hasAutoPlayMode
autoPlayModeAsString:
StringAsAutoPlayMode:
_autoPlayMode
_repeatPlayMode
_shufflePlayMode
verificationRequest
verificationContext
lastAllowedInteractiveAuthenticationTime
setLastAllowedInteractiveAuthenticationTime:
setAllowServerDialogs:
setAuthenticationType:
initWithAccount:options:
performAuthentication
addFinishBlock:
_reloadForExternalChange
_invalidate
initWithBool:
startWithTimeout:queue:
failWithError:
initWithBooleanHandler:
initWithObjectHandler:
finishWithBooleanResult:error:
finishWithObjectResult:error:
startWithTimeout:
_booleanHandler
_didFire
_objectHandler
_timeout
_timeoutTimer
defaultProvider
initWithClientInfo:authenticationProvider:
_webkitUserAgentVersion
objectAtIndexedSubscript:
bundleWithPath:
objectForInfoDictionaryKey:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
substringFromIndex:
initWithClientInfo:
setDeviceInfo:
setNetworkConstraints:
_networkConstraints
_deviceInfo
_authenticationProvider
reportEventURL
serialCheckURL
syncURL
_dictionary
settingsSwitches
itemResponseDictionary
setAccountNotificationsShowInLibraryDictionary:
initWithToggleState:hasBeenToggled:identifier:
sharedStatusController
_getSwitchesDependingOnSubscriptionStatus:withResponse:togglingSwitchesToValue:
createResponseBodyWithSwitches:
wasSuccessful
getSubscriptionStatusForUserIdentity:bypassingCache:withCompletionHandler:
accountNotificationsShowInLibraryDictionary
setIsToggled:
getAccountNotificationsWithCompletionHandler:
setAccountNotificationsArtistContentFeature:withCompletionHandler:
setCachedAccountNotificationsShowInLibraryEnabled:
cachedAccountNotificationsShowInLibrarySwitch
beforePromoContentTrack
afterPromoContentTrack
initWithResponseDictionary:responseVersion:expirationDate:
trackType
_hlsAssetFromAssetDictionary:
setPlaylistURL:
flattenedTracksWithTracks:
hasStartTime
radioStreamAssets
isSkippable
likeState
serverTrackInfo
storePlatformMetadata
parentTrack
_responseVersion
_parentTrack
initWithInputStream:queue:
_streamEncounteredError:
setDidEncounterErrorBlock:
processData:
receievedData:
setDidReadDataBlock:
_streamDidClose
setDidFinishReadingBlock:
initWithOutputStream:queue:
writeData:withCompletion:
initWithData:
_streamDidParseMessage:
getDecryptedDataForEncryptedData:withCompletionHandler:
initWithRole:securitySettings:
prepareEncryptedSessionWithCompletionHandler:
_sendRequest:withResponseHandler:
_sendResponse:forRequest:withCompletionHandler:
createHeader:
getEncryptedDataForData:withCompletionHandler:
_nextRequestUniqueID
setUniqueID:
setRequest:
_sendMessage:withCompletionHandler:
uniqueID
setRequestUniqueID:
_finishPendingRequestsWithError:
delegationServiceConnectionDidClose:
hasRequest
delegationServiceConnection:didReceiveRequest:
hasResponse
requestUniqueID
allObjects
delegationServiceConnection:didEncouterError:
delegationServicePairingSession:sendData:withCompletionHandler:
parser:didParseMessage:
initWithConnectionRole:inputStream:outputStream:securitySettings:
sendRequest:withResponseHandler:
sendResponse:forRequest:withCompletionHandler:
connectionRole
_isPaired
_isStarted
_messageParser
_nextRequestID
_pairingSession
_pendingRequestIDToRequestContext
_streamReader
_streamReaderQueue
_streamWriter
_streamWriterQueue
_connectionRole
addPreferences:
preferencesType
clearPreferences
preferencesCount
preferencesAtIndex:
preferences
setPreferences:
_preferences
referralWithPlaylistGlobalID:
referralWithAlbumAdamID:
albumAdamID
_playlistGlobalID
_albumAdamID
addActionParameters:
setDisplayText:
actionParametersCount
clearActionParameters
actionParametersAtIndex:
setClickEvent:
actionParametersType
hasDisplayText
requiresDelegate
setRequiresDelegate:
setHasRequiresDelegate:
hasRequiresDelegate
hasClickEvent
messageRemovalPolicy
setMessageRemovalPolicy:
setHasMessageRemovalPolicy:
hasMessageRemovalPolicy
messageRemovalPolicyAsString:
StringAsMessageRemovalPolicy:
displayText
actionParameters
setActionParameters:
clickEvent
_actionParameters
_clickEvent
_displayText
_messageRemovalPolicy
_requiresDelegate
setKey:
setValue:
_messageIdentifier
_params
shouldPreventLeaseAcquisition
setShouldPreventLeaseAcquisition:
shouldRequireLeaseAcquisition
setShouldRequireLeaseAcquisition:
_shouldPreventLeaseAcquisition
_shouldRequireLeaseAcquisition
isContentProtectionEnabled
isDeviceClassCUnlocked
sharedProvider
buildStoreURLRequestWithURLRequest:builderProperties:completionHandler:
performCredentialRequests:withResponseHandler:
_shouldPersonalizeRequest
shouldAppendDeviceGUIDForURL:
isLegacyStoreCacheBusterEnabled
additionalQueryItems
localTimeZone
currentConnectionTypeHeader
cloudMediaLibraryUID
cachePolicy
_stringForCachePolicy:
setHTTPShouldHandleCookies:
getCookiesHeadersForURL:userIdentifier:
getCookiesForURL:userIdentifier:
requestHeaderFieldsWithCookies:
ic_appendHTTPCookies:
shouldAppendMachineDataHeadersForURL:
ic_appendHTTPCookieWithName:value:
appleIDHeadersForRequest:
_getSignatureDataForRequest:urlBag:completionHandler:
telephonyOperatorName
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
mescalConfigurationForRequest:
privacyAcknowledgementRequiredForBundleIdentifier:
_shouldPersonalizeRequestForClientInfo:personalizationStyle:
additionalHTTPCookies
anisetteVersion
shouldUseMescalSigning
shouldParseBodyData
setShouldParseBodyData:
shouldRequireURLBag
machineDataSyncState
setMachineDataSyncState:
JSSignConfiguration
_shouldUseMescalSigning
_shouldParseBodyData
_shouldRequireURLBag
_anisetteVersion
_machineDataSyncState
_additionalHTTPCookies
_additionalQueryItems
_JSSignConfiguration
_onceWithCompletionHandler:
_getXPCConnectionWithCompletion:
externalChangeHandler
_accountStoreOptions
_externalChangeHandler
_hasReceivedConnectionInvalidation
setReason:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
setShouldReturnLastKnownStatusOnly:
setCarrierBundleProvisioningStyle:
requestIdentifier
setShouldBypassEnforcementOfPrivacyAcknowledgement:
_allowsFallbackToExpiredStatus
_allowsFallbackToStatusNeedingReload
_shouldReturnLastKnownStatusOnly
_shouldBypassEnforcementOfPrivacyAcknowledgement
_reason
_carrierBundleProvisioningStyle
_requestIdentifier
_migrateDatabaseFiles
_defaultDatabasePath
_setupDatabase:
_removeDatabaseReturningError:
contentsOfDirectoryAtPath:error:
_valueForDatabasePropertyKey:
_setValue:forDatabasePropertyKey:
dataRepresentation
executeStatement:error:bindings:
_getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:shouldFilterStoreAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
_eventsDatabaseTableName
_revisionsIndexSetUsingPersisentIDGenerationBlock:count:
fileExistsAtPath:
moveItemAtPath:toPath:error:
_propertiesDatabaseTableName
executeStatement:error:
userVersion
setUserVersion:
initWithString:
enumerateRangesUsingBlock:
int64ForColumnIndex:
containsIndex:
addIndex:
dataForColumnIndex:
initWithDataRepresentation:
enumerateRowsUsingBlock:
executeQuery:withResults:
firstStringValue
_databaseConnection
accountUniqueIdentifier
setAccountUniqueIdentifier:
_accountUniqueIdentifier
hasContainerType
hasDeviceName
hasDisplayType
hasEndReasonType
hasEventDateTimestamp
eventDateTimestamp
hasEventTimeZoneName
eventTimeZoneName
timeZoneWithName:
hasEventSecondsFromGMT
eventSecondsFromGMT
hasFeatureName
hasItemDuration
hasItemEndTime
hasItemStartTime
hasItemType
hasCharacterDisplayedCount
characterDisplayedCount
hasLyricLanguage
lyricLanguage
hasMediaType
hasOffline
offline
hasPersistentID
hasRecommendationData
hasSBEnabled
sBEnabled
hasSourceType
hasStoreAccountID
hasStoreFrontID
hasTimedMetadata
hasTrackInfo
hasReasonHintType
buildFeaturesCount
hasBuildVersion
hasRequestingBundleVersion
hasRequestingBundleIdentifier
hasPlayMode
playMode
hasSystemReleaseType
hasInternalBuild
internalBuild
hasEnqueuerProperties
setBuildVersion:
hasDeviceGUID
setDeviceGUID:
hasTimeZoneName
timeZoneName
setSystemReleaseType:
setSBEnabled:
setStoreAccountID:
setStoreFrontID:
hasPrivateListeningEnabled
hasHouseholdID
hasSiriInitiated
siriInitiated
hasContainerID
hasExternalID
hasPersonalizedContainerID
hasStoreID
hasContainerAdamID
containerAdamID
setAdamID:
hasGlobalPlaylistID
setGlobalPlaylistID:
hasPlaylistVersionHash
setPlaylistVersionHash:
hasStationHash
setStationHash:
hasStationStringID
setStationStringID:
hasStationID
setStationID:
hasCloudAlbumID
setCloudAlbumID:
hasCloudPlaylistID
setCloudPlaylistID:
hasSubscriptionAdamID
setSubscriptionAdamID:
hasPurchasedAdamID
setPurchasedAdamID:
hasRadioAdamID
setRadioAdamID:
hasItemCloudID
setCloudID:
hasLyricsID
setLyricsID:
hasEquivalencySourceAdamID
setEquivalencySourceAdamID:
isEqualToTimeZone:
_mutableCopyClass
setContainerType:
setDisplayType:
setEndReasonType:
setEventDateTimestamp:
setEventTimeZoneName:
setFeatureName:
setItemDuration:
setItemEndTime:
setItemStartTime:
setItemType:
setMediaType:
setCharacterDisplayedCount:
setLyricLanguage:
setOffline:
setPersistentID:
setRecommendationData:
setSourceType:
setTimedMetadata:
setTrackInfo:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setTimeZoneName:
setEnqueuerProperties:
setHouseholdID:
setSiriInitiated:
setExternalID:
setPersonalizedContainerID:
setStoreID:
setPlayMode:
setBuildFeatures:
setReasonHintType:
setContainerAdamID:
setItemCloudID:
isEqualToEvent:
_buildFeatures
_containerIDs
_containerType
_deviceName
_displayType
_endReasonType
_enqueuerProperties
_eventDate
_eventTimeZone
_externalID
_featureName
_householdID
_itemDuration
_itemEndTime
_itemStartTime
_itemType
_lyricsDisplayedCharacterCount
_lyricsLanguage
_mediaType
_offline
_persistentID
_personalizedContainerID
_reasonHintType
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_SBEnabled
_siriInitiated
_sourceType
_storeAccountID
_storeID
_timedMetadata
_trackInfo
_version
setContainerIDs:
setEventDate:
setEventTimeZone:
setInternalBuild:
setItemIDs:
setLyricsDisplayedCharacterCount:
setLyricsLanguage:
setVersion:
addImages:
addMessageActions:
addContentParameters:
setSubtitle:
setBody:
imagesCount
clearImages
imagesAtIndex:
messageActionsCount
clearMessageActions
messageActionsAtIndex:
contentParametersCount
clearContentParameters
contentParametersAtIndex:
setPageEvent:
setCloseClickEvent:
setCardClickEvent:
imagesType
messageActionsType
contentParametersType
hasTitle
hasSubtitle
hasBody
hasPageEvent
hasCloseClickEvent
hasCardClickEvent
subtitle
body
setImages:
messageActions
setMessageActions:
contentParameters
setContentParameters:
pageEvent
closeClickEvent
cardClickEvent
_body
_cardClickEvent
_closeClickEvent
_contentParameters
_images
_messageActions
_pageEvent
_subtitle
fileProcessor
processPurchasedItem:withAttributes:resultInfo:progressBlock:
initWithFilePath:sinfs:
removeDRMWithCompletionHandler:
_mediaFilePath
_sinfs
_newFileExtension
_initializeMusicKitURLResponse
serverCorrelationKey
serverEnvironment
_serverCorrelationKey
_serverEnvironment
initWithRemoteRequestOperation:
remoteRequestOperation
_remoteRequestOperation
operationWithVerificationRequest:
_verificationRequest
columnIndexForColumnName:
numberForColumnIndex:
stringForColumnIndex:
initWithStatement:
dataForColumnName:
doubleForColumnIndex:
doubleForColumnName:
intForColumnIndex:
intForColumnName:
int64ForColumnName:
numberForColumnName:
numberOfColumns
stringForColumnName:
_columnIndexByName
_statementWrapper
setDelegatedPrivateListeningEnabled:
additionalRequestParameters
setAdditionalRequestParameters:
allowsExplicitContent
setAllowsExplicitContent:
playbackContext
setPlaybackContext:
isPreservingCurrentlyPlayingItem
setPreservingCurrentlyPlayingItem:
isDelegatedPrivateListeningEnabled
shouldResponseContainStationMetadata
setShouldResponseContainStationMetadata:
requestedTrackCount
setRequestedTrackCount:
stationURL
setStationURL:
seedContentReference
setSeedContentReference:
nowPlayingContentReference
setNowPlayingContentReference:
queueContentReferences
setQueueContentReferences:
_allowsExplicitContent
_preservingCurrentlyPlayingItem
_shouldResponseContainStationMetadata
_additionalRequestParameters
_playbackContext
_delegatedPrivateListeningEnabled
_reasonType
_requestedTrackCount
_stationHash
_stationID
_stationStringID
_stationURL
_seedContentReference
_nowPlayingContentReference
_queueContentReferences
addSubrules:
subrulesCount
clearSubrules
subrulesAtIndex:
setTriggerCondition:
setTriggerEventName:
setRequiredApplicationContextBundleIdentifier:
subrulesType
setHasType:
hasType
typeAsString:
StringAsType:
ruleOperator
setRuleOperator:
setHasRuleOperator:
hasRuleOperator
ruleOperatorAsString:
StringAsRuleOperator:
hasTriggerCondition
hasTriggerEventName
hasRequiredApplicationContextBundleIdentifier
subrules
setSubrules:
triggerCondition
triggerEventName
requiredApplicationContextBundleIdentifier
_requiredApplicationContextBundleIdentifier
_ruleOperator
_subrules
_triggerCondition
_triggerEventName
_listenerEndpointProviderConnection
getListenerEndpointForService:completion:
initWithResponseDictionary:requestDate:
_clientData
setHasSystemReleaseType:
systemReleaseTypeAsString:
StringAsSystemReleaseType:
setHasSBEnabled:
setHasStoreAccountID:
setHasPrivateListeningEnabled:
_timeZoneName
_sBEnabled
addBuildFeatures:
clearBuildFeatures
buildFeaturesAtIndex:
buildFeaturesType
setHasEventType:
eventTypeAsString:
StringAsEventType:
setHasReasonHintType:
reasonHintTypeAsString:
StringAsReasonHintType:
setHasSubscriptionAdamID:
setHasPurchasedAdamID:
setHasRadioAdamID:
setHasItemCloudID:
setHasEquivalencySourceAdamID:
setHasContainerAdamID:
setHasStationID:
setHasCloudPlaylistID:
setHasContainerType:
containerTypeAsString:
StringAsContainerType:
setHasEndReasonType:
endReasonTypeAsString:
StringAsEndReasonType:
setHasEventDateTimestamp:
setHasItemDuration:
setHasItemEndTime:
setHasItemStartTime:
setHasItemType:
itemTypeAsString:
StringAsItemType:
setHasMediaType:
mediaTypeAsString:
StringAsMediaType:
setHasOffline:
setHasPersistentID:
setHasSourceType:
sourceTypeAsString:
StringAsSourceType:
setHasSiriInitiated:
setHasDisplayType:
displayTypeAsString:
StringAsDisplayType:
setHasCharacterDisplayedCount:
setTvShowPurchasedAdamID:
setHasTvShowPurchasedAdamID:
hasTvShowPurchasedAdamID
setTvShowSubscriptionAdamID:
setHasTvShowSubscriptionAdamID:
hasTvShowSubscriptionAdamID
setHasInternalBuild:
setEventSecondsFromGMT:
setHasEventSecondsFromGMT:
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
_characterDisplayedCount
_cloudPlaylistID
_containerAdamID
_equivalencySourceAdamID
_eventDateTimestamp
_eventSecondsFromGMT
_itemCloudID
_purchasedAdamID
_radioAdamID
_subscriptionAdamID
_tvShowPurchasedAdamID
_tvShowSubscriptionAdamID
_cloudAlbumID
_eventTimeZoneName
_globalPlaylistID
_lyricLanguage
_lyricsID
_playMode
_playlistVersionHash
_internalBuild
_copyWithClass:
password
_handlePairingSessionCompletionWithError:
_receivedData:
subdataWithRange:
_encryptedDataForData:
appendBytes:length:
_deriveEncryptionKeysReturningError:
dataWithBytesNoCopy:length:freeWhenDone:
_sendData:withCompletionHandler:
role
_accessSerialQueue
_existingPairingCompletionHandlers
_inputKey
_inputNonce
_outputKey
_outputNonce
_state
_role
_endObservingBag
_description
_beginObservingBag
_requestBagWithPolicy:completionHandler:
_invalidateBagExpirationTimer
_handleBagExpirationTimerFired
_handleUserIdentityStoreDidChange:
_scheduleBagExpirationTimerForDate:
_updateWithBag:
sharedBagMonitor
beginObservingBagWithHandler:
endObservingBagWithToken:
_bag
_bagExpirationTimer
setPurchaseHistoryID:
setAuthor:
setGenre:
setDatePurchased:
setArtworkURL:
setVppLicensed:
setVppOrganizationID:
setVppOrganizationDisplayName:
purchaseHistoryID
author
datePurchased
isVPPLicensed
vppOrganizationID
vppOrganizationDisplayName
_vppLicensed
_purchaseHistoryID
_author
_genre
_datePurchased
_vppOrganizationID
_vppOrganizationDisplayName
setStoreAdamID:
setLikeState:
_storeAdamID
_likeState
keybagPath
setKeybagPath:
setTokenData:
_keybagPath
_tokenData
initWithDelegateToken:storefrontIdentifier:resultError:
resultError
_resultError
addPlayerInfoContextToken:
setPlayerAnisetteMID:
setPlayerDeviceGUID:
setPlayerUserAgent:
playerInfoContextTokenType
hasPlayerAnisetteMID
hasPlayerDeviceGUID
clearPlayerInfoContextTokens
playerInfoContextTokensCount
playerInfoContextTokenAtIndex:
hasPlayerUserAgent
playerAnisetteMID
playerDeviceGUID
playerInfoContextTokens
setPlayerInfoContextTokens:
playerUserAgent
_playerAnisetteMID
_playerDeviceGUID
_playerInfoContextTokens
_playerUserAgent
_pendingEquivalentStoreURLRequest
_updateRequest:forProcessedResponseOfStoreURLRequest:
_invalidateDeveloperTokenForInitialResponse:toRequest:withCompletionHandler:
_invalidateUserTokenForInitialResponse:toRequest:withCompletionHandler:
ic_errorWithDomain:code:debugDescription:underlyingError:
setStartDelegationResponse:
setFinishDelegationResponse:
setHasRequestUniqueID:
hasRequestUniqueID
hasStartDelegationResponse
hasFinishDelegationResponse
startDelegationResponse
finishDelegationResponse
_finishDelegationResponse
_requestUniqueID
_startDelegationResponse
_handleLibraryAuthServiceClientTokenDidChangeDistributedNotification:
_updateEntriesForAccountsChanges
_updateRefreshTimer
getTokenForDSID:forceRefresh:completion:
getSharedUserIdForHomeUserId:completion:
getTokenResultsForDSIDs:forceRefresh:completion:
getTokenResultForDSID:forceRefresh:completion:
_updateTokenCacheEntryForDSID:tokenResult:error:
_refreshTokenForDSID:forExternalRequest:completion:
_refreshTokensForDSIDs:forExternalRequest:completion:
getTokenForcingRefresh:completion:
addTokenResult:forDSID:completion:
_commitCache
getTokenStatusForDSIDs:forcingRefresh:completion:
_isPrivacyAcknowledgementRequired
authServiceClientTokenCache
setAuthServiceClientTokenCache:
_shouldStopBackgroundRefreshForError:
startService
stopService
getAllTokensForAssistantForcingRefresh:completion:
cachedTokenAndResetCache:
getTokenStatusForcingRefresh:completion:
getAllTokenStatusForAssistantForcingRefresh:completion:
_tokenCache
_isService
_siriConnection
initWithConnection:SQL:
connectionPointer
_connectionPointer
_SQL
_privacyAcknowledgementRequiredForVideos
_privacyAcknowledgementRequiredForIdentifier:
_onboardingKitPrivacyIdentifierForPrivacyIdentifier:
initWithPrivacyIdentifier:
acknowledgePrivacy
_updateForPrivacyAcknowledgementChanged
acknowledgementNeededForPrivacyIdentifier:
_queryPrivacyAcknowledgementRequiredForIdentifier:
privacyAcknowledgementRequiredForMedia
acknowledgePrivacyPolicyForIdentifier:completionHandler:
shouldFlushTrackCache
alternatePlaylistURL
alternateKeyCertificateURL
alternateKeyServerURL
playlistURL
_isiTunesStoreStream
_keyCertificateURL
_keyServerURL
_playlistURL
_updateAutomaticRefreshProperties
_sharedOperationQueue
_newOperationForPlaybackRequest:completionHandler:
musicLeaseSession:requestsFairPlayKeyStatusUpdateWithCompletion:
_onQueue_setLeaseStatus:updatedLeaseExpirationDate:
musicLeaseSession:didFinishPlaybackRequest:withPlaybackResponse:responseError:updatedFairPlayKeyStatusList:completionHandler:
_performAutomaticRefresh
_initWithRequestContext:isDelegatedLeaseSession:delegate:leaseStatus:
leaseStatus
isAutomaticallyRefreshingLease
performPlaybackRequest:completionHandler:
reloadFairPlayKeyStatusWithCompletionHandler:
_handlePlaybackLeaseDidEndPushNotification
_handleRemoteServerDidBecomeLikelyReachable
_receivedUserInteractionEvent
_setLeaseStatus:updatedLeaseExpirationDate:
isDelegatedLeaseSession
_automaticRefreshTimerSource
_isPerformingAutomaticRefresh
_leaseStatus
_pendingLeaseAcquisitionRevisionID
_delegatedLeaseSession
strongToWeakObjectsMapTable
initWithInstantiationHandler:
sharedInstanceForKey:
incrementUsageCountForKey:
decrementUsageCountForKey:
_instantiationHandler
_stronglyHeldSharedInstances
_weaklyHeldSharedInstances
_usageCounts
hasProperNetworkConditionsToPlayMediaWithCompletion:
hasProperNetworkConditionsToShowCloudMediaWithCompletion:
isCellularDataRestrictedForMusicWithCompletion:
shouldProhibitMusicActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForVideosWithCompletion:
shouldProhibitVideosActionForCurrentNetworkConditionsWithCompletion:
isCellularDataRestrictedForStoreAppsWithCompletion:
shouldProhibitStoreAppsActionForCurrentNetworkConditionsWithCompletion:
canShowCloudDownloadButtonsWithCompletion:
canShowCloudMusicWithCompletion:
canShowCloudVideoWithCompletion:
_avDownloadOptionsWithRequestContent:properties:mediaResponseItem:
setUserAgent:
setPurchaseBundleMD5:
setPurchaseBundleSinfs:
setSongID:
setContentType:
_mediaKindFromResponseItemMetadata:
setMediaKind:
getMediaAVAssetDownloadOptionsWithRequestContext:redownloadResponse:completionHandler:
getMediaAVAssetDownloadOptionsWithRequestContext:storeMediaResponseItem:completionHandler:
httpHeaderFields
secondaryClientIdentifier
setSecondaryClientIdentifier:
purchaseBundleMD5
purchaseBundleSinfs
songID
canUseCellularData
setCanUseCellularData:
setAllowDownloadOnConstrainedNetworks:
_httpHeaderFields
_canUseCellularData
_allowDownloadOnConstrainedNetworks
_secondaryClientIdentifier
_purchaseBundleMD5
_purchaseBundleSinfs
_songID
_contentType
_userAgent
setExternalId:
setAdamId:
setHasAdamId:
hasAdamId
hasExternalId
setCreatedOffsetMillis:
setHasCreatedOffsetMillis:
hasCreatedOffsetMillis
preferenceType
setPreferenceType:
setHasPreferenceType:
hasPreferenceType
preference
setPreference:
adamId
externalId
createdOffsetMillis
_adamId
_createdOffsetMillis
_externalId
_preference
_preferenceType
_defaultStoreFilePath
initWithFilePath:
_load
_commit
dictionaryWithObject:forKey:
allApplicationStorePropertiesWithCompletion:
removeMessageEntry:completion:
_messageEntryCache
_globalPropertyCache
_applicationPropertyCache
_messageMetadataCache
_pendingEvents
_filePath
_cacheControlParameters
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
hasCacheControl
cacheControlMaxAge
_exchangeDataWithSAPContext:requestContext:setupURL:responseData:completionHandler:
sapSession
_sapSession
albumArtistName
genreName
setAlbumArtistName:
setComposerName:
setCopyright:
setDiscCount:
setDiscNumber:
setGenreName:
setCompilation:
setDuration:
storeAdamIdentifier
setStoreAdamIdentifier:
storeCloudIdentifier
setStoreCloudIdentifier:
setTrackCount:
setTrackNumber:
setYear:
universalCloudLibraryID
setUniversalCloudLibraryID:
_albumArtistName
_composerName
_copyright
_discCount
_discNumber
_genreName
_compilation
_duration
_storeAdamIdentifier
_storeCloudIdentifier
_trackCount
_trackNumber
_year
_universalCloudLibraryID
tokenRequests
setTokenRequests:
_tokenRequests
initWithDSID:SICData:
cloudCredentialsTokenData
setCloudCredentialsTokenData:
SICData
setSICData:
_cloudCredentialsTokenData
_SICData
initWithSuiteName:
_setOrRemoveObject:forKey:
internalDefaults
_shouldSpoofIPhoneRequestProperties
setBool:forKey:
valueForKey:
setCloudMediaLibraryUID:
defaultStoreFront
cachedMusicUserTokens
setCachedMusicUserTokens:
pushNotificationState
setPushNotificationState:
setMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates:
lastActiveAccountDSID
setLastActiveAccountDSID:
lastCookieHeadersForRevokingMusicUserTokens
setLastCookieHeadersForRevokingMusicUserTokens:
lastAuthenticationDialogResponseTime
lastKnownLocalStoreAccountProperties
setLastKnownLocalStoreAccountProperties:
setIgnoreExtendedCertificateValidation:
networkTypeOverride
shouldForceiPhoneBehaviors
setShouldRunAgeVerification:
isExplicitContentAllowedForCurrentYear
setExplicitContentAllowedForCurrentYear:
isExplicitContentAllowedForExpirationYear
setExplicitContentAllowedForExpirationYear:
isGrazingPathEnabled
setGrazingPathEnabled:
isPrivacyAcknowledgementDisabledForMusic
shouldForceLibraryRecommendationAnalysis
shouldReduceLibraryRecommendationsXPCInterval
shouldTreatSubscriptionStatusCheckAsIncomplete
shouldTreatSagaAddComputerCallAsFailed
shouldTreatInitialSagaImportAsFailed
deleteAutomaticDownloadsKey
allowLowAffinityRecommendations
setBypassBagSanityChecks:
_userDefaults
_bypassBagSanityChecks
_internalDefaults
generateSubscriptionLeaseRequestWithAccountUniqueID:transactionType:completionHandler:
initWithTrack:
pauseTime
skipDate
_pauseTime
_serverTrackInfo
_skipDate
setPauseTime:
setServerTrackInfo:
setSkipDate:
initWithName:
_copyWithClass:zone:
_timeZone
clearRunLoop
runLoopSourceRef
setRunLoopSourceRef:
_runLoopSourceRef
_handleCallbackForUserNotification:responseFlags:
_contextForUserNotification
buyParameters
initWithRequestContext:buyParams:storeItemID:itemName:itemKind:
initWithRequestContext:platformMetadataItem:
_buyParams
_itemName
_itemKind
accountIdentifier
enumerateItemsUsingBlock:
enqueuerAccountIdentifier
itemForIdentifier:
valueForKeyPath:
allItems
rawResponse
_childResponses
_getURLFromBagAndSendRequest
initWithName:value:
query
_buildAndSendRequestForURL:
initWithRequestContext:allowsExplicitContent:isAutomatic:
isAutomatic
setAutomatic:
storeURLRequest
setStoreURLRequest:
_automatic
currentError
resetAfterCorruptionError
resetAfterIOError
firstInt64Value
firstNumberValue
_invalidateTriggersForCloudServiceStatusObservationRecovery
_beginObservingCloudServiceStatus
beginObservingCloudServiceStatus
_endObservingCloudServiceStatusWithToken:
_requestCapabilitiesWithPrivacyPromptPolicy:requestCapabilitiesWithCompletionHandler:
_requestStorefrontCountryCodeWithCompletionHandler:
_requestStorefrontIdentifierWithCompletionHandler:
_didEndRequestingUserTokenWithTransactionIdentifier:
_performCloudServiceStatusMonitorRequestWithDescription:requestHandler:errorHandler:
_updateWithCapabilities:hasValidCapabilities:transactionIdentifier:
_updateWithStorefrontCountryCode:transactionIdentifier:
_updateWithStorefrontIdentifier:transactionIdentifier:
_resetCloudServiceStatusMonitorConnectionAllowingExplicitInvalidation:
_cloudServiceStatusMonitorConnectionWasInterrupted
_cloudServiceStatusMonitorConnectionWasInvalidated
_beginTransactionForCloudServiceStatusMonitorConnectionWithIdentifier:
stringByReplacingOccurrencesOfString:withString:
_cloudServiceStatusMonitorConnectionForTransactionIdentifier:error:
_handleCloudServiceStatusMonitorConnectionRemoteObjectProxyError:forRequestWithDescription:transactionIdentifier:
_endTransactionForCloudServiceStatusMonitorConnectionWithIdentifier:
_scheduleTriggersForCloudServiceStatusObservationRecovery
_didBeginObservingCloudServiceStatusWithToken:transactionIdentifier:
_didEndObservingCloudServiceStatusWithToken:transactionIdentifier:
_recoverObservingCloudServiceStatus
_invalidateCloudServerLaunchTimeoutTimer
_refreshCloudServiceStatus
_registerCloudServerLaunchedNotifyToken
_scheduleCloudServerLaunchTimeoutTimer
_cancelCloudServerLaunchedNotifyToken
privacyAcknowledgementPolicy
setPrivacyAcknowledgementPolicy:
isObservingCloudServiceStatus
endObservingCloudServiceStatus
requestCapabilitiesWithCompletionHandler:
requestUserTokenForDeveloperToken:completionHandler:
_cloudServiceStatusMonitorConnection
_cloudServiceStatusMonitorConnectionEstablishmentError
_activeTransactionIdentifiersForCloudServiceStatusMonitorConnection
_privacyAcknowledgementPolicy
_isObservingCloudServiceStatus
_observationToken
_transactionIdentifierForActiveObservationToken
_cloudServerLaunchedNotifyToken
_cloudServerLaunchTimeoutTimer
_capabilities
_hasValidCapabilities
_storefrontCountryCode
setStartDelegationRequest:
setFinishDelegationRequest:
setHasUniqueID:
hasUniqueID
hasStartDelegationRequest
hasFinishDelegationRequest
startDelegationRequest
finishDelegationRequest
_finishDelegationRequest
_startDelegationRequest
_uniqueID
performAuthenticationToHandleResponse:toRequest:withCompletionHandler:
_setupContentTasteServiceConnection
setContentTaste:forMediaItem:storeIdentifier:configuration:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:configuration:withCompletionHandler:
sharedCloudContentTasteRequestListener
setContentTaste:forMediaItem:storeIdentifier:withCompletionHandler:
setContentTaste:forPlaylistGlobalID:withCompletionHandler:
setContentTaste:forAlbumStoreID:withCompletionHandler:
updateContentTasteForMediaItemsAndInvalidateLocalCache:withCompletionHandler:
airplaneMode
_uncachedIsAutoDownloadOnCellularAllowed
_uncachedIsShowingAllMusic
_uncachedIsShowingAllVideo
_onQueue_updateCanShowCloudDownloadButtonsWithNotification:
_onQueue_updateCanShowCloudTracksWithNotification:
_applicationWillEnterForeground:
_onQueue_updateIsCellularDataRestrictedForMusic
sharedWiFiManager
isWiFiEnabled
isWiFiAssociated
_wifiStateDidChangeNotification:
isEthernetWired
constraintsForSystemApplicationType:
_onQueue_beginObservingReachabilityChanges
_onQueue_endObservingReachabilityChanges
_hasCellularCapability
_hasWiFiCapability
airplaneModeChanged
isNetworkReachable
beginObservingNetworkReachability
endObservingNetworkReachability
_isAutoDownloadOnCellularAllowed
_setNewIsNetworkReachable:networkType:
_hasProperNetworkConditionsToShowCloudMedia
_isAirplaneModeActive
_isCellularDataActive
_isCellularDataRestrictedForMusic
_isShowingAllMusic
_isShowingAllVideo
_isUpdateInProgress
_isWiFiEnabled
_isWiFiAssociated
_isEthernetWired
_isNetworkReachable
_canShowCloudMusic
_canShowCloudVideo
_canShowCloudDownloadButtons
_preferencesChangedNotifyToken
_preferencesChangedNotifyTokenIsValid
_networkType
_radiosPreferences
_networkReachabilityObservationCount
_ctServerConnection
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
_handleMusicUserTokensDidChangeDistributedNotification:
_getCacheKeyForDeveloperToken:requestContext:completion:
_persistCache
_postLocalChangeNotification
_decodeDeveloperTokenPart:
_cachedUserTokens
initWithRequestContext:buyParameters:includeKeybagSyncData:
_buyParameters
_parsedResponse
initWithUserIdentityStore:requestContext:
_startDelegation
getDeviceSenderSettingsForReceiverName:securityMode:completion:
getResolvedStreamsWithCompletionHandler:
getFinishDelegationRequestsWithStartDelegationResponse:streamContexts:replyHandler:
_handleStartDelegationResponse:
getStartDelegationRequestForAccountIDs:withCompletionHandler:
userIdentities
_protocolHandler
_sessionIDToStreamContext
_delegationAccountUUIDs
_userIdentities
_performAuthenticationUsingRequestContext:usingVerificationInteractionLevel:withCompletionHandler:
_adjustedAuthenticationPolicyForResponse:withCompletionHandler:
initWithVerificationContext:
getVerificationContextForUserIdentity:completionHandler:
dateWithTimeIntervalSinceNow:
stationMetadata
tracklistActionType
_finishWithResult:tokens:error:
parsedBodyArray
initWithURL:cachePolicy:timeoutInterval:
finishWithResponse:requestDate:error:
playInfoRequest
setPlayInfoRequest:
_playInfoRequest
hasKey
hasValue
_key
initWithRequestContext:storeItemID:
setActiveCommandsOnly:
_syncResponse
_fromRevision
initWithIdentity:identityStore:
applicationProxyForIdentifier:
appState
isValid
_createMediaTokenServiceForClientInfo:requester:
_invalidateCachedDeveloperTokenForClientInfo:requester:usingMediaTokenService:
fetchMediaToken
_didFetchMediaToken:withError:
initWithClientIdentifier:bag:
invalidateMediaToken
tokenString
_mediaTokenService
_securityMode
_password
dictionaryFromTXTRecordData:
rangeOfString:
dataFromTXTRecordDictionary:
initWithTXTRecordData:
serviceVersion
_serviceVersion
_buttonWithType:
_buttonTitleKeyForType:
_buttonActionKeyForType:
initWithResponseButtonActionDictionary:
defaultButtonType
initWithType:isDefaultButton:title:action:
isInitialCheckboxValue
isBiometricAuthenticationAllowed
isDefaultButton
_isDefaultButton
_action
actionDictionary
_actionDictionary
_handleSubscriptionStatusCacheDidChangeNotification:
_handleSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification:
_handleSubscriptionStatusDidChangeFollowingPrivacyAcknowledgementNotification:
_handlePrivacyAcknowledgementRequirementChanged:
_handleSubscriptionStatusDidChangeDistributedNotification:
_cancelRemoteRequestingClientConnectionInvalidationTimer
_invalidateRemoteRequestingClientConnection
getSubscriptionStatusForUserIdentity:withCompletionHandler:
performSubscriptionStatusRequest:withCompletionHandler:
performSubscriptionStatusRequest:withStatusHandler:
_willPerformSubscriptionStatusRequest:withStatusHandler:
_deliverSubscriptionStatusResponse:forRequest:error:
_hasEntitlementForMusicSubscriptionStatusService
_willBeginRemoteRequestWithUniqueIdentifier:statusHandler:
_remoteRequestingClientConnection
deliverSubscriptionStatusResponse:forRemoteRequestWithUniqueIdentifier:error:
performSubscriptionStatusRequest:forUniqueIdentifier:
enableSubscriptionForUserIdentity:withCompletionHandler:
disableSubscriptionForUserIdentity:withCompletionHandler:
refreshSubscriptionForUserIdentity:withCompletionHandler:
refreshSubscriptionUsingRequestContext:withCompletionHandler:
int64ValueForBagKey:
userIdentitiesForManageableAccountsWithError:
_didEndRemoteRequestWithUniqueIdentifier:
_scheduleInvalidationOfRemoteRequestingClientConnection
_remoteRequestingClientConnectionInvalidationTimerDidExpire
arrayWithObject:
postNotificationName:object:userInfo:deliverImmediately:
getSubscriptionStatusWithCompletionHandler:
enableSubscriptionWithCompletionHandler:
disableSubscriptionWithCompletionHandler:
refreshSubscriptionWithCompletionHandler:
invalidateCachedSubscriptionStatusWithCompletionHandler:
invalidateCachedSubscriptionStatusForUserIdentity:withCompletionHandler:
enablePeriodicSubscriptionRefresh
_numberOfActiveRemoteRequests
_privacyAcknowledgementObservationToken
_remoteRequestingClientConnectionInvalidationTimer
_statusHandlersForPendingIdenticalRequests
_stop
_handleTimeout
_acceptedConnections
_pendingUserIdentities
_sessionIDToRequestInfoMap
_timeoutDispatchSource
initWithResponseDictionary:requestedItemIdentifiers:
_enumerateResultDictionariesUsingBlock:
resultsDictionary
_accountIdentifier
_enqueuerAccountIdentifier
_requestedItemIdentifiers
_authenticated
initWithMessageIdentifier:params:eventIdentifier:
_eventIdentifier
renewalDate
contentInformationRequest
setRenewalDate:
dataRequest
contentKeyContextData
respondWithData:
finishLoadingWithError:
finishLoading
finishAssetResourceLoadingRequest:withError:
setDialog:
setServerError:
rentalExpirationDate
setRentalExpirationDate:
rentalPlaybackStartDate
setRentalPlaybackStartDate:
serverPlaybackContextData
setServerPlaybackContextData:
setContentKeyContextData:
_dialog
_serverError
_rentalExpirationDate
_rentalPlaybackStartDate
_renewalDate
_serverPlaybackContextData
_contentKeyContextData
_updatePhoneNumberAllowingDidChangeNotification:
_ensureTelephonyHandlesAreReady
initWithBundleType:
copyCarrierBundleValue:key:bundleType:error:
copyMobileSubscriberCountryCode:error:
copyMobileSubscriberNetworkCode:error:
slotID
phoneNumberWithDigits:digits:countryCode:
sharedMessageCenter
canonicalFormat
sendSMSWithText:text:serviceCenter:toAddress:
_handleActiveSubscriptionsDidChange
_telephonyClient
_telephonySubscriptionContext
initWithQueue:
getActiveContexts:
voicePreferred
findForUuid:
context
subscriptions
getPhoneNumber:error:
number
subscriptionInfoDidChange
activeSubscriptionsDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
phoneNumberAvailable:
phoneNumberChanged:
_telephonyCallbackQueue
accountPropertyForKey:
setAccountProperty:forKey:
isEnabledForDataclass:
ams_accountFlagValueForAccountFlag:
ams_setAccountFlagValue:forAccountFlag:
ams_isLocalAccount
ams_automaticDownloadKinds
setWithArray:
_updateAutomaticDownloadKindsByAddingMediaKindMusic:error:
bagSubProfile
bagSubProfileVersion
initWithEnabledMediaKinds:account:bag:
perform
resultWithError:
ic_uniqueIdentifier
ic_setUniqueIdentifier:
ic_setAgeVerificationExpirationDate:
ic_isManageable
ic_setAutomaticDownloadKinds:
ic_updateAutomaticDownloadKindsByAddingMediaKindMusic:error:
ic_setPrivateListeningEnabledForHomeUsers:
bagValues
_validateGUIDURLConfigIfNeeded
GUIDURLRegexPatterns
GUIDURLSchemes
scheme
rangeOfFirstMatchInString:options:range:
host
hasSuffix:
_shouldMescalSignBodyForURL:withSignatureConfiguration:
initWithURL:MIMEType:expectedContentLength:textEncodingName:
mescalConfigurationForResponse:
initWithBagLibraryDAAPDictionary:
ic_numberValueForKey:
initWithPattern:options:error:
setGUIDURLRegexPatterns:
setGUIDURLSchemes:
hasValueForBagKey:
mescalConfigurationForRequestURL:
mescalConfigurationForResponseURL:
libraryDAAPConfiguration
canPostKeybagSyncData
setBagValues:
convertedActionsCache
setConvertedActionsCache:
queue
setQueue:
_bagValues
_convertedActionsCache
_GUIDURLRegexPatterns
_GUIDURLSchemes
uppercaseLetterCharacterSet
rangeOfCharacterFromSet:options:range:
lowercaseString
_getPlayInfoRequestWithStartDelegationResponse:streamContexts:completionHandler:
_nextSessionUniqueID
allowsSharing
allowsItemLiking
artworkInfo
coreSeedName
descriptionText
attributionLabel
subtype
isSubscriptionRequired
providerResource
prepareStatement:error:
valueForDate:
executePreparedStatement:error:bindings:
dispatchAfterTransaction:
lastChangeCount
_removeAccountForIdentityKey:
_removeTokenForIdentityKey:
_setToken:forIdentityKey:
_isValid
_getContentProtectionEnabled:isDeviceClassCUnlocked:
_loadContentProtectionEnabled:isDeviceClassCUnlocked:
isDeviceUnlocked
_processFirstUnlockNotification
_hasLoadedDeviceClassCUnlocked
_isDeviceClassCUnlocked
_hasLoadedContentProtectionEnabled
_isContentProtectionEnabled
_firstUnlockNotificationToken
_pendingFirstUnlockBlocks
_isEnabled
_canSubscribe
_isSubscriber
initWithRequestContext:downloadIdentifier:songID:
_downloadIdentifier
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
setClientVersion:
setBagProfile:
setBagProfileVersion:
_clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier:
_isShadowOperationForRemoteExecution
currentQueue
_setShadowOperationForRemoteExecution:
__shadowOperationForRemoteExecution
metricsDictionary
stopSubscriptionLeaseForAccountUniqueIdentifier:completionHandler:
getKeyStatusListWithCompletionHandler:
initWithDSID:carrierBundleDeviceIdentifier:delegatedDSID:
lastKnownHouseholdID
getLastKnownHouseholdIDWithCompletion:
getLeaseSessionWithRequestContext:completionHandler:
receivedUserInteractionEvent
_accountDSIDToFairPlayKeyStatus
_cacheKeyToLeaseSession
_hasReceivedUserInteractionEvent
_isRemoteServerLikelyReachable
_isServerReachable
_lastKnownHouseholdID
_leaseDidEndNotificationToken
_leaseSessionPreparationOperationQueue
outputStreamToMemory
initWithStream:
propertyForKey:
startContainerWithCode:
endContainerWithCode:
writeUInt8:withCode:
unsignedCharValue
charValue
writeSInt8:withCode:
unsignedShortValue
writeUInt16:withCode:
shortValue
writeSInt16:withCode:
writeUInt32:withCode:
writeSInt32:withCode:
writeUInt64:withCode:
writeSInt64:withCode:
writeString:withCode:
writeData:withCode:
mapProperty:toCode:valueType:
elementCodeForProperty:
valueTypeForProperty:
codeMap
setCodeMap:
valueTypeMap
setValueTypeMap:
_codeMap
_valueTypeMap
setHasActiveCommandsOnly:
hasActiveCommandsOnly
activeCommandsOnly
_activeCommandsOnly
_createDefaultSchemaWithConnection:error:
currentVersion
dateForValue:
_updateURLSessionManagedPropertiesForEquivalentStoreURLRequest:
_buildMusicKitURLRequestWithBaseURLRequest:completionHandler:
_setDeveloperToken:
_buildEquivalentStoreURLRequestWithDeveloperToken:completionHandler:
_buildUserTokenBasedMusicKitURLRequestWithBaseURLRequest:developerToken:completionHandler:
signatureData
_signatureData
_verificationContext
sharedMonitorForIdentity:identityStore:
_sharedInstanceManager
_endObservingSubscriptionStatus
_beginObservingSubscriptionStatus
_requestSubscriptionStatusWithCachingPolicy:completion:
_effectiveIdentityForRequestingSubscriptionStatus
_initWithIdentityContext:
_handleSubscriptionStatusDidChange:
_updateWithSubscriptionStatus:
sharedMonitorForIdentity:
beginObservingSubscriptionStatusWithHandler:
endObservingSubscriptionStatusWithToken:
refreshSubscriptionStatus
_identityContext
_enumerateQueryResults:usingBlock:
_tokenWithSQLiteRow:
_userIdentityWithSQLiteRow:
enumerateDelegationUUIDsForUserIdentity:usingBlock:
enumerateTokensUsingBlock:
enumerateTokensWithType:usingBlock:
identityPropertiesForUserIdentity:
overestimatedNumberOfTokens
tokenForUserIdentity:
isBackgroundRadioRequest
_decorateHeaderPropertiesForURLRequest:withBuilderProperties:
radioContentDictionaryCreationBlock
setBackgroundRadioRequest:
_backgroundRadioRequest
_radioContentDictionaryCreationBlock
handleResponse:forRequest:shouldRetry:
cookiesWithResponseHeaderFields:forURL:
saveCookies:forURL:userIdentifier:
saveGlobalAccountCookies:forURL:
_updateDefaultStorefrontIdentifier:usingIdentityStore:
sharedHandler
_verifyMescalSignatureForResponse:toRequest:completionHandler:
processActionFromResponse:withRequestContext:withCompletionHandler:
_performAuthenticationForResponse:toRequest:completionHandler:
_processDialogResponse:toRequest:completionHandler:
updatePropertiesForLocalStoreAccountUsingBlock:completionHandler:
setAccountID:
setHasAccountID:
hasAccountID
discreteProgressWithTotalUnitCount:
initWithRequestContext:leaseID:mediaType:
initWithRequestContext:itemSagaID:
sharedHTTPCookieStorage
cookiesForURL:
_cookieDictionaryForURL:userIdentifier:
getCookiesForUserIdentifier:
setCookies:forURL:mainDocumentURL:
_saveCookies:userIdentifier:
ams_removeCookiesMatchingProperties:
ams_removeAllCookies
saveVerifiedAccount:withCompletionHandler:
_accountForUserIdentifier:
ams_cookiesForURL:
ams_cookies
ams_addCookies:
getCookiesForURL:
getGlobalAccountCookiesForURL:
saveCookies:forURL:
removeCookiesWithProperties:
removeAllCookies
isToggled
hasBeenPreviouslyToggled
setHasBeenPreviouslyToggled:
_valueDictionary
_isToggled
_hasBeenPreviouslyToggled
_initializeLocalStoreAccountProperties
_initWithStyle:delegateAccountStoreOptions:
_assertNonNullIdentityStoreForSelector:
_openDelegateAccountStoreWithError:
_dispatchDidChangeNotification:didDelegateAccountStoreChange:
_existingIdentityPropertiesForUserIdentity:error:
_dsidForUserIdentity:error:
insertPropertiesForUserIdentity:andPostAccountChangeNotification:usingBlock:completionHandler:
_saveIdentityProperties:andPostAccountChangeNotification:forUserIdentity:error:
_allowsDelegationForUserIdentity:
_dsidForTimestamp:history:
_icValidStoreAccountsFromACAccounts:
_refreshLocalStoreAccountPropertiesAllowingDidChangeNotification:
_unregisterForDelegateAccountStoreNotifications:
_registerForDelegateAccountStoreNotifications:
_importValuesFromCodingHelper:
_delegateAccountStoreDidChangeNotification:
_claimSingleWriterStatus
testingIdentityStoreWithDatabasePath:
testingIdentityStoreWithSingleWriterService:
enumerateDelegateTokensUsingBlock:completionHandler:
insertPropertiesForUserIdentity:usingBlock:
setActiveAccountWithDSID:completionHandler:
setActiveLockerAccountWithDSID:completionHandler:
synchronizeWithCompletionHandler:
getUserIdentitiesForManageableAccountsWithCompletionHandler:
userIdentitiesForAllStoreAccountsWithError:
getuserIdentitiesForAllStoreAccountsWithCompletionHandler:
_unsafeBackend
_unsafe_deleteDelegateAccountStore
_updateDelegateAccountStoreUsingBlock:
_openDelegateAccountStoreForUserIdentity:error:
_codingHelper
_delegateAccountStore
processAction:data:withRequestContext:version:withCompletionHandler:
_aspectRatioKeyForAspectRatio:
valueWithCGSize:
initWithVideoArtworkResponseDictionary:
supportedSizesForCRABSVideoForAspectRatio:
CRABSVideoURLMatchingSize:
HLSVideoURLForAspectRatio:
previewFrameArtworkInfoMatchingAspectRatio:
_aspectRatioToCRABSVideoDictionaries
_aspectRatioToHLSVideoURL
_aspectRatioToPreviewFrameArtworkInfo
_stringRepresentation
CGSizeValue
initWithStoreIdentifier:trackInfo:
storeItemWithIdentifier:
formattedPrice
price
mainRunLoop
scheduleInRunLoop:forMode:
resolveWithTimeout:
_updateTXTRecordProperties
_setState:
startMonitoring
getInputStream:outputStream:
_resolveWithCompletionHandler:
_netServiceStreamResolutionQueue
_resolutionCompletionHandlers
_txtRecord
_close
_verifiedStatementForPreparedStatement:error:
_executeStatement:error:
_verifiedStatementForSQL:error:
_open
_flushAfterTransactionBlocks
_prepareStatement:error:
_finalizeAllStatements
_performResetAfterCorruptionError
_statementForPreparedStatement:error:
executePreparedQuery:withResults:
executePreparedStatement:error:
options
_afterTransactionBlocks
_database
_didResetForCorruption
_preparedStatements
_transactionDepth
_transactionWantsRollback
_prepareParsedBodyResponse
_parsedBodyResponseType
_parsedBodyResponse
_bodyData
_bodyDataURL
ic_uintValueForKey:
ic_dataValueForKey:
databaseID
databaseName
isOnlineGeniusForMatchEnabled
playDataBatchIntervalInMinutes
subscribedContainerPollingFrequencySeconds
updatePollingFrequencySeconds
autoUpdatePollingFrequencySeconds
maxSyncRetryIntervalSeconds
_bagDictionary
_handleSubscriptionFairPlayKeyStatusChangedDistributedNotification:
getKeyStatusForAccountUniqueIdentifier:withCompletionHandler:
generateSubscriptionBagRequestWithAccountUniqueIdentifier:transactionType:machineIDData:completionHandler:
_fairPlaySerialQueue
_subscriptionKeyBagStatusCache
itemWithStoreAdamID:
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
setServerPlaybackContextDataCreationHandler:
setContentURI:
configureUsingAssetResourceLoadingRequest:
certificateURL
setCertificateURL:
contentURI
leaseActionType
setLeaseActionType:
rentalID
setRentalID:
skippedRentalCheckout
setSkippedRentalCheckout:
isITunesStoreRequest
setITunesStoreRequest:
serverPlaybackContextDataCreationHandler
shouldIncludeDeviceGUID
setShouldIncludeDeviceGUID:
_skippedRentalCheckout
_ITunesStoreRequest
_shouldIncludeDeviceGUID
_contentURI
_leaseActionType
_rentalID
_serverPlaybackContextDataCreationHandler
weakObjectsHashTable
sharedDefaultEvaluator
addObserver:forKeyPath:options:context:
_networkConstrained
_handleApplicationDidEnterForegroundNotification:
_onQueue_updateNetworkReachabilityAndNotifyObservers:
_onQueue_loadInitialThermalLevel
_onQueue_updateThermalLevelWithToken:
removeObserver:forKeyPath:context:
_currentNetworkType
isExpensive
usesInterfaceType:
_networkTypeFromTelephonyStatusIndicator:
_networkTypeFromWatchCarousel
isConstrained
_onQueue_updateTelephonyStateAndNotifyObservers:
observeValueForKeyPath:ofObject:change:context:
_handleCTServerConnectionNotification:userInfo:
isCharging
telephonyRegistrationStatus
telephonyStatusIndicator
isWiFiActive
isNetworkConstrained
currentBatteryLevel
isCurrentNetworkLinkExpensive
isRemoteServerReachable
currentThermalLevel
_telephonyServerConnectionRef
_networkPathEvaluator
_thermalNotificationToken
_powerNotificationRef
_symptomPresentationFeedDyLibHandle
_isCharging
_isWiFiActive
_currentNetworkLinkHighQuality
_wifiAssociated
_ethernetWired
_currentNetworkLinkExpensive
_remoteServerReachable
_telephonyOperatorName
_telephonyRegistrationStatus
_telephonyStatusIndicator
_currentBatteryLevel
_lastKnownNetworkType
_currentThermalLevel
generateMachineDataForAccountID:returningMachineIDData:otpData:error:
ic_dataWithADIBytes:length:
_destroySession
initWithAccountID:
startWithServerActionData:returningClientData:error:
endWithMessageData:transportKey:error:
maximumQualityOfService
setActiveICloudAccountProperties:
_handleCredentialRequestIdentityPropertiesForSession:
delegationCredentialRequestToSpecificUserIdentity
setDelegationUserIdentityToUUIDs:
_handlePendingDelegationRequestsForSession:
delegationCredentialRequestToIdentityProperties
delegationUserIdentityToUUIDs
pendingResponseCredentialRequests
activeICloudAccountProperties
hasPendingResponses
pendingPropertyLoadCredentialRequests
setDelegationCredentialRequestToSpecificUserIdentity:
setDelegationCredentialRequestToIdentityProperties:
_handleDelegationAccountUUIDsForSession:
credentialRequests
setPendingPropertyLoadCredentialRequests:
_handleIdentityProperties:forIdentity:loadingError:credentialRequest:session:
initWithCredentialRequests:responseHandler:
_handleRequestIndependentPropertiesForSession:
performCredentialRequest:withResponseHandler:
_delegationDiscoveryCount
_delegationConsumerService
setPendingResponseCredentialRequests:
_activeICloudAccountProperties
_credentialRequests
_delegationCredentialRequestToSpecificUserIdentity
_delegationCredentialRequestToIdentityProperties
_delegationUserIdentityToUUIDs
_maximumQualityOfService
_pendingPropertyLoadCredentialRequests
_pendingResponseCredentialRequests
_copyLocalStoreAccountPropertiesToOtherInstance:withZone:
_cloudID
initWithTimeIntervalSince1970:
initWithResponseTermsDictionary:
_copySubscriptionStatusPropertiesToStatus:withZone:
hasCatalogPlaybackCapability
hasAddToCloudLibraryCapability
isCloudMusicServiceEnabled
isMinorAccountHolder
hasFamily
hasFamilyGreaterThanOneMember
isHeadOfHousehold
isMatchEnabled
hasOfflineSlots
isInFreeTrial
isEligibleForFreeTrial
isPurchaser
isAdministrator
isDiscoveryModeEligible
termsStatusList
carrierBundlingErrorCode
_isMinorAccountHolder
_hasFamily
_hasFamilyGreaterThanOneMember
_isHeadOfHousehold
_isMatchEnabled
_hasOfflineSlots
_isInFreeTrial
_isEligibleForFreeTrial
_isPurchaser
_statusType
_isAdministrator
_isDiscoveryModeEligible
_termsStatusList
_cellularOperatorName
_carrierBundlingErrorCode
setMinorAccountHolder:
setHasFamily:
setHasFamilyGreaterThanOneMember:
setHeadOfHousehold:
setMatchEnabled:
setHasOfflineSlots:
setInFreeTrial:
setEligibleForFreeTrial:
setPurchaser:
setStatusType:
setAdministrator:
setDiscoveryModeEligible:
setTermsStatusList:
setStatusCode:
acceptedVersion
_acceptedVersion
_currentVersion
_processIdentifier
_getWiFiEnabledFromPrefs
_wifiCallBack:
_getWiFiAssociated
setWiFiEnabled:
setWiFiAssociated:
_wifiPreferences
_wiFiEnabled
_wiFiAssociated
setProcessName:
shortVersionString
bundleVersion
bundleProxyForIdentifier:
bundleExecutable
_clientInfoCopyWithClass:
_processName
_clientVersion
_bagProfile
_bagProfileVersion
setShouldAllowDataForAllNetworkTypes:
setSizeLimit:forNetworkType:
mediaTypeNetworkConstraintsFromURLBag:
shouldAllowDataForWiFiNetworkTypes
sizeLimitForNetworkType:
_dataAllowedFallbackValue
_cellularDataAllowedFallbackValue
_wiFiDataAllowedFallbackValue
_networkTypeToDataAllowed
_networkTypeToSizeLimit
setShouldAllowData:forNetworkType:
setShouldAllowDataForCellularNetworkTypes:
setShouldAllowDataForWiFiNetworkTypes:
_wasSuccessful
initWithRequestContext:notificationType:notificationParameters:
_notificationParams
@16@0:8
v16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@?16
v24@0:8@16
v20@0:8B16
@40@0:8@16@24@32
@"NSObject<OS_dispatch_queue>"
@"ICMusicSubscriptionStatusCacheKey"
@"NSMutableDictionary"
@24@0:8@16
@"ICJSSignConfiguration"
@24@0:8^{_NSZone=}16
v32@0:8q16@24
@"NSMutableArray"
@"NSString"
B16@0:8
B24@0:8@16
Q16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8q16@24
@40@0:8q16@24@32
q16@0:8
@"NSData"
@"NSDate"
@"NSDictionary"
@36@0:8@16q24B32
@24@0:8q16
@"ICStoreRequestContext"
@36@0:8I16@20@28
@44@0:8I16@20@28@36
I16@0:8
@"NSOperationQueue"
@"NSURL"
@"ICFPSAPContext"
@32@0:8@16@24
@48@0:8@16@24@32@40
@24@0:8@?16
v24@0:8q16
@"ICUserIdentity"
@"ICUserIdentityStore"
@"ICStoreDialogResponseHandler"
@"NSXPCListenerEndpoint"
#16@0:8
@24@0:8Q16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
v24@0:8d16
d16@0:8
@"ICIAMMetricEvent"
@"ICIAMLocalNotification"
@"ICIAMMessageRule"
{?="endDate"b1"startDate"b1"assetPrefetchStrategy"b1"globalPresentationPolicyGroup"b1"maximumDisplays"b1"messageType"b1"modalPresentationStyle"b1"priority"b1"carousel"b1"hasCloseButton"b1}
@"NSNumber"
v40@0:8q16@24@?32
v48@0:8@16B24q28B36@?40
v32@0:8q16@?24
v40@0:8Q16@24@?32
v32@0:8Q16@24
v64@0:8q16@24@32@40@48@?56
v56@0:8q16@24@32@40@?48
v56@0:8@16@24q32@40@?48
v56@0:8q16@24q32@40@?48
v48@0:8q16q24@32@?40
v48@0:8@16q24@32@?40
v44@0:8@16B24@28@?36
v48@0:8q16@24@32@?40
v48@0:8@16Q24@32@?40
v24@0:8@"ICConnectionConfiguration"16
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"B>24
v48@0:8@"ICConnectionConfiguration"16B24q28B36@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?B@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?BB>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSError"f>24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8Q16@"ICConnectionConfiguration"24
v32@0:8q16@"ICConnectionConfiguration"24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError"@"NSArray">32
v40@0:8Q16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
v64@0:8q16@"NSString"24@"NSArray"32@"NSArray"40@"ICConnectionConfiguration"48@?<v@?Q@"NSError">56
v56@0:8q16@"NSDictionary"24@"ICCloudItemIDList"32@"ICConnectionConfiguration"40@?<v@?Q@"NSError">48
v56@0:8@"NSDictionary"16@"ICCloudItemIDList"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v56@0:8q16@"ICCloudAddReferral"24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8q16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSString"16q24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8q16@"ICConnectionConfiguration"24@?<v@?@"NSString"@"NSString"@"NSError">32
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v44@0:8@"NSArray"16B24@"ICConnectionConfiguration"28@?<v@?@"NSError">36
v48@0:8q16@"ICCloudAddReferral"24@"ICConnectionConfiguration"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@"NSDictionary"16Q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v48@0:8@"NSDictionary"16q24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v32@0:8@"ICConnectionConfiguration"16@?<v@?B@"NSError">24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"ICConnectionConfiguration"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16@"ICConnectionConfiguration"24@?<v@?@"NSError">32
v32@0:8@"ICConnectionConfiguration"16@?<v@?q@"NSError">24
v40@0:8@"NSArray"16@"ICConnectionConfiguration"24@?<v@?@"NSArray"@"NSError">32
@"NSXPCConnection"
@"<ICCloudServerListenerEndpointProviding>"
v24@0:8Q16
@"NSArray"
@"ICStoreFinanceItemMetadata"
@?16@0:8
v32@0:8@16@24
@"ICStoreURLRequest"
@"ICStorePlatformRequestOperation"
@"ICURLSession"
@"ICStorePlatformRequest"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?<v@?B@"NSString"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSArray"16@"ICUserIdentity"24@?<v@?B@"NSError">32
v32@0:8@"ICUserIdentity"16@?<v@?B@"NSError">24
v32@0:8@"NSDate"16@?<v@?B@"NSError">24
v40@0:8@"ICUserIdentityProperties"16@"ICUserIdentity"24@?<v@?B@"NSError">32
v40@0:8@"ICDelegateToken"16@"ICUserIdentity"24@?<v@?B@"NSError">32
@"NSError"
@"ICRadioPlaybackHistoryItem"
v24@0:8@"NSString"16
v28@0:8d16i24
v24@0:8f16i20
v24@0:8i16i20
v28@0:8q16i24
v28@0:8@16i24
v28@0:8@"NSNumber"16i24
v28@0:8@"NSData"16i24
v28@0:8@"NSString"16i24
@32@0:8^{sqlite3_stmt=}16@24
^{sqlite3_stmt=}16@0:8
@"ICSQLiteConnection"
^{sqlite3_stmt=}
@"ICSQLiteStatement"
v28@0:8B16@?20
v36@0:8@16B24@?28
B32@0:8@16@24
v44@0:8@16@24B32@?36
v48@0:8@16@24@32@?40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSSet"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ICInAppMessageEntry"@"NSError">32
v32@0:8@"ICInAppMessageEntry"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v44@0:8@"NSString"16@"NSDictionary"24B32@?<v@?@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"ICInAppMessageMetadataEntry"@"NSError">32
v32@0:8@"NSSet"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"ICInAppMessageMetadataEntry"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v32@0:8@"NSString"16@?<v@?@@"NSError">24
v40@0:8@16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@@"NSError">32
v48@0:8@16@"NSString"24@"NSString"32@?<v@?@"NSError">40
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"ICEnvironmentMonitor"16
v44@0:8B16@20@28@?36
@"ICInAppMessageStore"
@"AMSPushHandler"
@"<NSCopying>"
@"NSXPCListener"
@"NSMutableSet"
@"<NSSecureCoding>"
@32@0:8@16Q24
v40@0:8@16@24@32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"NSNetService"
@"ICDelegationServiceSecuritySettings"
@"<ICDelegationConsumerNetServiceDelegate>"
@"ICADIProvisionSession"
@"ICMediaAVAssetDownloadOptions"
@"ICURLRequest"
@"ICURLResponse"
v48@0:8@16@24q32@?40
v48@0:8q16@24q32@?40
v40@0:8q16q24@?32
v40@0:8@16q24@?32
v36@0:8q16B24@?28
v40@0:8q16B24B28@?32
B24@0:8q16
v32@0:8Q16@?24
v32@0:8@16Q24
@"ICConnectionConfiguration"
@"ICCloudServerListenerEndpointProvider"
@"ICCloudClientAvailabilityService"
@"ICCloudClientCloudService"
@"NSObject<OS_dispatch_source>"
v32@0:8@"ICClientInfo"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"ICClientInfo"16@?<v@?B@"NSError">24
@"ICURLBag"
v24@0:8@?<v@?@"NSUUID">16
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8q16@?<v@?Q@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8@"NSString"16@"ICClientInfo"24@?<v@?@"NSString"@"NSError">32
@"ICLibraryAuthServiceClientTokenResult"
@"ICLibraryAuthServiceClientTokenIdentifier"
@20@0:8B16
Q24@0:8@16
@44@0:8@16@24B32^@36
@"ICLibraryAuthServiceClientTokenResponse"
B32@0:8@16^@24
@"ICMusicSubscriptionStatus"
@"ICLibraryAuthServiceBulkClientTokenResponse"
@"NSSet"
@32@0:8@16q24
{?="expirationTimeInterval"b1"sessionID"b1}
B24@0:8@"ICSQLiteConnection"16
@32@0:8@16^@24
@"ICDelegateAccountStoreOptions"
@"ICDelegateAccountStore"
@"ICDelegateAccountStoreXPCWriter"
@"ICUserIdentityProperties"
@52@0:8@16Q24I32^@36^@44
B24@0:8^@16
B32@0:8^@16^@24
@"NSMapTable"
v24@0:8@"ICDelegationProviderServiceAssertion"16
v32@0:8@"ICDelegationProviderServiceSession"16@"NSError"24
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
@"NSNetServiceBrowser"
@"ICRequestContext"
@24@0:8^@16
B40@0:8@16@24^@32
@"NSNumber"24@0:8^@16
B32@0:8@"NSNumber"16^@24
@"ICUserIdentityProperties"32@0:8@"NSNumber"16^@24
@"ICUserIdentityProperties"24@0:8^@16
v32@0:8@"NSNumber"16@?<v@?B@"NSError">24
B40@0:8@"ICUserIdentityProperties"16@"NSNumber"24^@32
@"ICLocalStoreAccountProperties"24@0:8^@16
B32@0:8@"ICLocalStoreAccountProperties"16^@24
@"ICUserVerificationContext"32@0:8@"NSNumber"16^@24
@"ICUserVerificationContext"24@0:8^@16
@"<ICUserIdentityStoreBackendDelegate>"16@0:8
v24@0:8@"<ICUserIdentityStoreBackendDelegate>"16
@36@0:8@16B24^@28
@"ACAccountStore"
@"ACAccountType"
@"ICUnfairLock"
@"<ICUserIdentityStoreBackendDelegate>"
@"ICDelegateToken"
{?="dSID"b1}
@"NSDateFormatter"
@"<ICDeveloperTokenProvider>"
@44@0:8@16q24B32q36
@"ACAccount"
@"ICStoreDialogResponse"
@"ICPushNotificationsResponse"
@40@0:8@16q24@32
@32@0:8{_NSRange=QQ}16
^{__CFUserNotification=}16@0:8
v28@0:8B16^{__CFString=}20
@"ICMusicSubscriptionStatusRequest"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@40@0:8@16Q24q32
v40@0:8@16@24Q32
d24@0:8@16
v40@0:8@16q24q32
@"NSMutableOrderedSet"
@"NSURLSession"
@"ICMediaRedownloadResponse"
@"ICMusicRestoreRequestParameters"
@"ICIAMApplicationMessage"
{?="commandSerialNumber"b1"commandType"b1}
@56@0:8@16Q24@32@40^@48
@40@0:8@16@24Q32
B32@0:8@16Q24
@"AMSBagValue"24@0:8@"NSString"16
v24@0:8@?<v@?@"AMSSnapshotBag"@"NSError">16
@"NSDate"16@0:8
@"AMSBagValue"32@0:8@"NSString"16@"ACAccount"24
@"AMSProcessInfo"16@0:8
@32@0:8Q16Q24
B52@0:8I16@20^@28*36^@44
B40@0:8@16^@24^@32
v48@0:8@16@24@?32@?40
@48@0:8#16@24@32^@40
v48@0:8Q16@24@32@?40
v44@0:8@16Q24B32@?36
v48@0:8@16Q24Q32@?40
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"NSString"16Q24B32@?<v@?@"NSArray"Q@"NSError">36
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16Q24Q32@?<v@?@"NSError">40
@32@0:8Q16@24
v40@0:8@16Q24@?32
v40@0:8Q16Q24@?32
v48@0:8@16B24Q28B36@?40
@"ICPlayActivityTable"
@"NSIndexSet"
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@48@0:8{CGSize=dd}16@32@40
@52@0:8{CGSize=dd}16@32@40B48
^{CGColor=}24@0:8@16
@"ICStoreArtworkSizeInfo"
@"ICFPLeaseSyncSession"
@"ICSuzeLeaseSessionConfiguration"
@"<ICSuzeLeaseSessionDelegate>"
@"ICValueHistory"
@"<ICUserIdentityStoreBackend>"
v32@0:8@16q24
@"ICClientInfo"
v24@0:8@"ICNanoPairedDeviceStatusMonitor"16
v32@0:8@"ICNanoPairedDeviceStatusMonitor"16Q24
v32@0:8@"ICNanoPairedDeviceStatusMonitor"16@"NSUUID"24
{atomic_flag="_Value"AB}
^{MGNotificationTokenStruct=}
@"ICPlayActivityController"
{?="comparisonType"b1"dataType"b1"kind"b1"triggerConditionType"b1}
v20@0:8I16
{?="height"b1"width"b1}
i24@0:8^{sqlite3=}16
@"NSProgress"16@0:8
@"NSProgress"
@"ICURLResponseHandler"
@"NSURLRequest"
@"NSURLSessionTask"
@"NSObject<OS_dispatch_semaphore>"
@"NSURLResponse"
@"NSMutableData"
@"ICURLPerformanceMetrics"
{?="kind"b1}
v32@0:8Q16q24
v40@0:8Q16q24Q32
@"ICLocalStoreAccountProperties"
@"ICMusicAccountNotificationsSettingsResponse"
@"ICIAMImpressionNode"
{?="actionType"b1"pageType"b1"targetType"b1}
@72@0:8@16@24@32@40@48@56@64
@40@0:8@16@24d32
@56@0:8@16q24q32@40@48
@48@0:8@16@24q32@40
@"ICAgeVerifier"
{?="date"b1"interval"b1"trigger"b1}
@40@0:8I16I20@24^@32
q24@0:8@16
v48@0:8@16@24d32@?40
@28@0:8*16I24
@"NSError"16@0:8
@"ICStoreDialogResponse"16@0:8
{?="autoPlayMode"b1"repeatPlayMode"b1"shufflePlayMode"b1}
v28@0:8B16@20
v32@0:8d16@24
@"ICDispatchOnce"
@"ICNetworkConstraints"
@"ICDeviceInfo"
@"ICURLResponseAuthenticationProvider"
@36@0:8@16@24B32
@"ICRadioStationTrack"
v40@0:8@"ICDelegationServicePairingSession"16@"NSData"24@?<v@?B@"NSError">32
v32@0:8@"MSVMessageParser"16@"NSData"24
@48@0:8q16@24@32@40
@"<ICDelegationServiceConnectionDelegate>"
@"MSVMessageParser"
@"ICDelegationServicePairingSession"
@"MSVStreamReader"
@"MSVStreamWriter"
@32@0:8@16@?24
@"ICPBDGSRequest"
{?="messageRemovalPolicy"b1"requiresDelegate"b1}
B32@0:8@16q24
@"NSUUID"
B40@0:8@16Q24^@32
B72@0:8^@16^@24Q32Q40@48@56^@64
B80@0:8^@16^@24Q32Q40Q48@56@64^@72
B32@0:8Q16^@24
B84@0:8^@16^@24Q32Q40Q48B56@60@68^@76
@32@0:8@?16Q24
@"ICPlayActivityEventContainerIDs"
@"ICPlayActivityEnqueuerProperties"
@"NSTimeZone"
@"ICPlayActivityEventItemIDs"
@28@0:8@16B24
@"ICRemoteRequestOperation"
@"ICUserVerificationRequest"
d20@0:8i16
i20@0:8i16
q20@0:8i16
@"ICRadioPlaybackHistory"
@"ICRadioContentReference"
@"ICIAMTriggerCondition"
{?="ruleOperator"b1"type"b1}
v32@0:8q16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
@32@0:8q16^@24
@"NSXPCListenerEndpoint"32@0:8q16^@24
@56@0:8@16q24@32q40@48
{?="storeAccountID"b1"systemReleaseType"b1"privateListeningEnabled"b1"sBEnabled"b1}
@"ICPAPlayActivityEnqueuerProperties"
@"ICPAPlayModeDictionary"
{?="characterDisplayedCount"b1"cloudPlaylistID"b1"containerAdamID"b1"equivalencySourceAdamID"b1"eventDateTimestamp"b1"eventSecondsFromGMT"b1"itemCloudID"b1"itemDuration"b1"itemEndTime"b1"itemStartTime"b1"persistentID"b1"purchasedAdamID"b1"radioAdamID"b1"stationID"b1"storeAccountID"b1"subscriptionAdamID"b1"tvShowPurchasedAdamID"b1"tvShowSubscriptionAdamID"b1"containerType"b1"displayType"b1"endReasonType"b1"eventType"b1"itemType"b1"mediaType"b1"reasonHintType"b1"sourceType"b1"systemReleaseType"b1"internalBuild"b1"offline"b1"privateListeningEnabled"b1"sBEnabled"b1"siriInitiated"b1}
@24@0:8#16
^{PairingSessionPrivate=}
@"<ICDelegationServicePairingSessionDelegate>"
@"ICPBDGSFinishDelegationResponse"
@"ICPBDGSStartDelegationResponse"
{?="requestUniqueID"b1}
v36@0:8@"NSNumber"16B24@?<v@?@"ICLibraryAuthServiceClientTokenResult"@"NSError">28
v36@0:8@"NSSet"16B24@?<v@?@"NSDictionary"@"NSError">28
v40@0:8@"ICLibraryAuthServiceClientTokenResult"16@"NSNumber"24@?<v@?@"NSError">32
@"AFMultiUserConnection"
@32@0:8r^v16@24
r^v16@0:8
{?="sessionID"b1}
@44@0:8@16B24@28@36
@"ICMusicSubscriptionLeaseStatus"
@"<ICMusicSubscriptionLeaseSessionDelegate>"
v24@0:8@?<v@?B>16
{?="adamId"b1"createdOffsetMillis"b1"preferenceType"b1}
@"ICSAPSession"
@"NSUserDefaults"
@32@0:8#16^{_NSZone=}24
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
^{__CFRunLoopSource=}
v32@0:8^{__CFUserNotification=}16@?24
v32@0:8^{__CFUserNotification=}16Q24
@56@0:8@16@24q32@40@48
@"ICAddToWishListResponse"
v24@0:8@?<v@?@"ICStorePlatformMetadata"^B>16
@"ICStorePlatformMetadata"24@0:8@"NSString"16
@"NSArray"16@0:8
@"NSNumber"16@0:8
@32@0:8@16B24B28
v40@0:8@16@?24@?32
v36@0:8Q16B24@28
@"ICPBDGSResponse"
@"ICPBDGSFinishDelegationRequest"
@"ICPBDGSStartDelegationRequest"
{?="uniqueID"b1}
v56@0:8q16q24q32@40@?48
v36@0:8B16@20@?28
v56@0:8q16q24q32@"ICConnectionConfiguration"40@?<v@?@"NSError">48
v48@0:8q16@"NSString"24@"ICConnectionConfiguration"32@?<v@?@"NSError">40
v36@0:8B16@"ICConnectionConfiguration"20@?<v@?@"NSError">28
v48@0:8q16q24q32@?40
v28@0:8B16q20
@"RadiosPreferences"
^{__CTServerConnection=}
v24@0:8@"ICDelegationServiceConnection"16
v32@0:8@"ICDelegationServiceConnection"16@"NSError"24
B32@0:8@"ICDelegationServiceConnection"16@"ICPBDGSRequest"24
@56@0:8@16@24@32@40@48
@"ICDelegationServiceConnection"
@"<ICDelegationProviderServiceSessionDelegate>"
@"ICDelegationProviderServiceProtocolHandler"
@"ICDelegationProviderNetService"
v36@0:8B16@20@28
@"ICDelegationPlayInfoRequestOperation"
@"ICDelegationPlayInfoRequest"
@"ICIAMSynchronizeMessagesResponse"
v32@0:8@"ICRemoteRequestOperationExecutionContext"16@?<v@?@"ICRemoteRequestOperationExecutionResponse">24
@"AMSMediaTokenService"
@44@0:8q16B24@28@36
@"ICStoreDialogResponseButtonAction"
v40@0:8@"ICMusicSubscriptionStatusResponse"16@"NSUUID"24@"NSError"32
B32@0:8@16@?24
v40@0:8@"ICDelegationConsumerNetService"16@"NSInputStream"24@"NSOutputStream"32
@"ICDelegationConsumerNetService"
@"ICDelegationConsumerServiceProtocolHandler"
@"ICDelegationConsumerServiceRequest"
@48@0:8@16q24@32@40
@"CoreTelephonyClient"
@"CTXPCServiceSubscriptionContext"
B28@0:8B16^@20
v32@0:8^B16^B24
v24@0:8B16B20
v64@0:8@16@24@32@40@48@?56
v64@0:8@"ICMusicSubscriptionLeaseSession"16@"ICMusicSubscriptionLeasePlaybackRequest"24@"ICMusicSubscriptionPlaybackResponse"32@"NSError"40@"NSArray"48@?<v@?@"ICMusicSubscriptionLeaseStatus"@"NSDate">56
v32@0:8@"ICMusicSubscriptionLeaseSession"16@?<v@?@"ICMusicSubscriptionLeaseStatus"@"NSError">24
I24@0:8@16
v36@0:8@16I24q28
{?="commandSerialNumber"b1"dSID"b1"activeCommandsOnly"b1}
@24@0:8d16
v32@0:8@"ICMusicSubscriptionStatusRequest"16@"NSUUID"24
@"ICUserVerificationContext"
@"ICUserIdentityContext"
{?="accountID"b1"sessionID"b1}
@40@0:8@16@24q32
@32@0:8B16B20@24
v24@0:8@"<ICUserIdentityStoreBackend>"16
v32@0:8@?16@?24
v40@0:8q16@?24@?32
v44@0:8@16B24@?28@?36
B20@0:8B16
v24@0:8:16
B44@0:8@16B24@28^@36
@"ICUserIdentityStoreCoding"
v56@0:8@16@24@32q40@?48
@32@0:8{CGSize=dd}16
@"ICDelegationNetServiceTXTRecord"
B40@0:8@16^@24@?32
^{sqlite3=}
@"<ICSQLiteConnectionDelegate>"
@"ICSQLiteConnectionOptions"
v44@0:8Q16I24@28@?36
v36@0:8Q16I24@?28
@"ICSecureKeyDeliveryRequest"
v48@0:8@16@24@32^v40
@"NSHashTable"
@"NWPathEvaluator"
B48@0:8Q16^@24^@32^@40
v56@0:8@16@24@32@40@48
@"ICDelegationConsumerService"
v32@0:8@16^{_NSZone=}24
^{__SCPreferences=}
{?="commandSerialNumber"b1}
