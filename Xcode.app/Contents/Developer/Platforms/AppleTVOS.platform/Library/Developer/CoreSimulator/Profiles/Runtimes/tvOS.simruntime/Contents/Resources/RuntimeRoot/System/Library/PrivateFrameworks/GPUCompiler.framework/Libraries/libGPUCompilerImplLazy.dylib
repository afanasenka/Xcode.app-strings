point-instrument-ftracepoint-ins-fno-relaxed-mat-active-platformast-relaxed-math-cl-fast-relaxedth-optimizations-cl-unsafe-math--no-signed-zeros-cl-no-signed-zezero
-cl-denorms-are-only
-cl-finite-math-
dule
llvm.embedded.moH
?terminate@@YAXXmental_type_info__fundamental_tyX
odulemap
module.private.mmodule_private.map
.xctoolchain/usrandLineTools/usr/CommandLineTool/XcodeDefault.xchtml-single-fileplist-multi-fileassembler-with-cpp
line-tables-only
sion
macosx_app_exteniboutletcollection
ownership_returnc_bridge_mutableobjc_bridge_mutac_bridge_relatedobjc_bridge_relanounroll_and_jamreturn_typestateenum_extensibility
objc_method_family
er_with_type_tagpointer_with_typtag_for_datatypetype_tag_for_datnt_with_type_tagargument_with_tyuires_capabilityrequires_capabilquire_capabilitytry_acquire_capatry_acquire_sharexclusive_trylocneric_capabilityrelease_generic_requires_shared_t_exclusive_lockassert_exclusived_locks_requiredshared_locks_reqpability
assert_shared_carequired
exclusive_locks_assert_capabilittion
shared_lock_funcve_lock_functionexclusive_lock_fshared_trylock_facquire_shared_crelease_shared_cacquire_capabiliassert_shared_lock
release_capabiliicationExtensioniOSMacApplicatioiosmac_app_extenmacCatalystAppliwatchOSApplicatixtension
tvOSApplicationEmacOSApplicationac_app_extensionuikitformac_app_iOSApplicationExst_app_extensionmaccatalyst_app_watchos_app_extetvos_app_extensi
 distribute simdteams distributefor simd
target parallel ute parallel forarallel for simddistribute paraltarget teams discancellation point
end declare target
get parallel fortarget exit datatarget enter datparallel for simparallel sectiondeclare reductiointerleave_countance
multiple_inherit
ssing_restrictedubclassing_restrated_initializeresignated_initia_safety_analysisclang::no_threadrns_not_retaineds_returns_not_ref_returns_not_relways_instrumentray_always_instrndependent_classbjc_independent_al_source_symbolxternal_source_srgument_with_typment
ray_never_instrutype
ype_tag_for_datasult
wift_indirect_re_tag
ointer_with_typetime
bjc_precise_lifeblic
to_visibility_pu_runtime_visiblebjc_runtime_visi_polyvector_typeeon_polyvector_t_returns_retaines_returns_retained
wift_error_resulbjc_method_familboutletcollectionum_extensibilitisable_tail_call_per_threadgroupimdgroups_per_thuadgroups_per_th_work_group_sizemdgpu_flat_work_hared_capabilityuires_shared_capease_generic_capns_inner_pointerbjc_returns_inne_auto_cast_stateonsumable_auto_cimageblock_color:alias_implicit_elease_shared_caanalysis
o_thread_safety_cquire_shared_can_in_threadgrouphread_position_ix_in_threadgroupimdgroup_index_iuadgroup_index_inu::no_address_se_locks_requiredxclusive_locks_rssert_shared_cap_saved_registersnu::no_caller_saposition_in_grid:threadgroup_posry_acquire_capab:thread_index_inlign_arg_pointernu::force_align__indirect_resultift_indirect_resared_locks_requitrument_functionnu::no_instrumenay_index
ender_target_arrageblock
lias_implicit_imequires_capabilimdgpu_waves_per_eu
arn_unused_resulelease_capabilitcquire_capabilitd_no_perspectiveentroid_no_perspsanitize_addressnu::no_sanitize_ssert_capability_execution_widthhread_execution_position_in_tileixel_position_ino_sanitize_threaorld_space_directive
ample_no_perspecenter_no_perspecransparent_unionnu::transparent_port_array_indexiewport_array_iny_fragment_testsarly_fragment_teroid_perspectiveentroid_perspectost_depth_coverage
plification_councept_intersectio:returns_nonnullnu::returns_nonnorld_space_origiample_perspectivnter_perspectiverries_dependencyunction_constantosition_in_patcharycentric_coord__device_builtin__launch_bounds_t_initializationrequire_constantet_state_on_readconsumable_set_so_address_safetytrylock_functionxclusive_trylockhread_safety_anaaller_saved_regioup_size
ntel_reqd_sub_grplete_definitionbjc_complete_defhared_trylock_fuorce_align_arg_pxclusive_lock_fuo_instrument_funlock
ssert_exclusive__group_size_hintork_group_size_hed_lock_functionhared_lock_functeqd_work_group_s_sanitize_addresacked_vector_typencl_unroll_hintjc_method_familyarries_dependencsert_shared_lockgroup_imageblockmetal@@threadgrofied_inheritance__unspecified_iniple_inheritance__multiple_inhertual_inheritance__virtual_inheri__single_inherital@@ocl_constantmetal@@ocl_constetal@@ocl_globalNull_unspecifiedmetal@@ocl_localwarn_unused_result
_Null_unspecifietransparent_unioswift_objc_members
swift_indirect_rswift_error_resu_bridged_typedefswift_bridged_tysize
reqd_work_group_hint
work_group_size_force_align_arg_never_instrumentxray_never_instrxray_always_instpass_object_sizepacked_vector_type
opencl_unroll_hid_sub_group_sizeintel_reqd_sub_gobjc_subclassingible
objc_runtime_visobjc_runtime_namobjc_returns_innc_requires_superobjc_requires_suprecise_lifetimeobjc_precise_lifobjc_independentobjc_designated_finition
objc_complete_dereturns_retainedos_returns_retaios_returns_not_ros_consumes_thisno_thread_safetyno_stack_protector
no_sanitize_thread
no_sanitize_memory
no_sanitize_addrno_address_safetno_instrument_funeon_vector_typeneon_polyvector_ns_returns_retains_returns_not_rrns_autoreleasedns_returns_autorns_consumes_selfmin_vector_widthworld_space_origin
_space_directionworld_space_direndex
viewport_array_ids_per_simdgroupthreads_per_simdthreads_per_threthreads_per_gridthread_position_dex_in_simdgroupthread_index_in_dex_in_quadgroupdgroups_per_gridthreadgroups_perthreadgroup_posithreadgroup_imagthread_executionsample_perspective
e_no_perspectivesample_no_perspesimdgroups_per_tsimdgroup_index_rget_array_indexrender_target_arraster_order_group
quadgroups_per_tquadgroup_index_t_depth_coveragepost_depth_coverposition_in_patcpixel_position_ialias_implicit_ilicit_imageblockfunction_constanests
early_fragment_tdispatch_threadscentroid_perspeccentroid_no_perscenter_perspectir_no_perspectivecenter_no_perspebarycentric_cooramplification_idlification_countamplification_coept_intersectionaccept_intersectisibility_publiclto_visibility_pintersectioncallinternal_linkageexternal_source_disable_tail_calls
consumable_auto_carries_dependency
shared_capabilitunknown_transfercf_unknown_transcf_returns_retaicf_returns_not_raudited_transfercf_audited_transno_caller_saved_analyzer_noreturgpu_waves_per_euamdgpu_waves_peramdgpu_flat_work 
tObjectFromCoderreplacementObjecableCopyWithZonemutableCopyWithZATED_INITIALIZERNS_DESIGNATED_INkeConstantString__CFStringMakeCoos_app_extensionmacos_app_extensios_app_extensio
erationWithBlockaddOperationWithStringWithFormatlocalizedStringW
CONCEPT_REQUIRESicCompareAndSwapOSAtomicCompareAobjc_atomicCompa
ration_structureinstance_accelerprimitive_accele_layout_explicitimageblock_layoun_function_tableintersection_funmodule.modulemap////////////////_texture_channel__is_metal_color__is_metal_depthstructor
__has_trivial_de__has_virtual_demove_constructor__has_trivial_monds_to_temporary__reference_bindlly_destructible__is_trivially_dintersection_tag__is_metal_inter__is_destructibl__is_literal_typ__underlying_typ__bridge_transfe__bridge_retaine__builtin_aligno__unknown_anytyplass
__is_interface_csign
__has_nothrow_as__has_trivial_asyout
__is_standard_laaa_t
image2d_array_msth_t
image2d_msaa_depow_constructible__is_nothrow_conr_object_pointer__is_member_objeray_msaa_depth_tthrow_assignable__is_nothrow_assivially_copyable__is_trivially_cin_convertvector__builtin_converRETTY_FUNCTION____PRETTY_FUNCTIOs_convertible_to__is_convertibles_floating_point__is_floating_pos_member_pointer__is_member_poinuiltin_available__builtin_availarow_destructible__is_nothrow_deshrow_move_assign__has_nothrow_mohrow_constructor__has_nothrow_covial_move_assignvial_constructor__has_trivial_coially_assignable__is_trivially_al_buffer_pointee__is_metal_buffepes_compatible_p__builtin_types_ly_constructiblefunction_pointer__is_member_func__builtin_offsetof
__is_constructible
__is_complete_ty__private_extern__
__module_privateltin_choose_expr__builtin_chooselvalue_reference__is_lvalue_refervalue_reference__is_rvalue_refe2d_array_depth_timage2d_array_dereinterpret_cast__builtin_va_arg__is_polymorphic__is_lvalue_expr__is_rvalue_expr__is_fundamental__builtin_astypeimage1d_buffer_timport_as_memberswift_infer_impoeclared_includesno_undeclared_incondition_variabscoped_allocatorinitializer_listions
c_generic_selectcxx_init_capture_binary_literalscxx_binary_literriadic_templatescxx_variadic_temriable_templatescxx_variable_temtrol
cxx_override_conatic_member_initcxx_nonstatic_mepe_template_argscxx_local_type_tversions
cxx_explicit_coneleted_functionscxx_deleted_funcnline_namespacescxx_inline_namesvalue_referencescxx_rvalue_referoadable_unmarkedoverloadable_unmype_pack_element__type_pack_elem__make_integer_seq
__is_target_vendiant_environment__is_target_variarget_variant_osiant
__has_target_varrget_environment__is_target_envi__is_target_archbute_ns_consumedattribute_ns_conbute_cf_consumedattribute_cf_conobjc_ivar_unusedattribute_objc_iunused_on_fieldsattribute_unuseddiagnose_if_objcattribute_diagnoafety_attributesc_thread_safety__ext_vector_typeattribute_ext_veattribute_cf_retattribute_ns_retailability_swiftattribute_availacked_vector_typeattribute_packedattribute_objc_mability_bridgeoslability_watchosute_availabilityute_overloadableattribute_overlonalyzer_noreturnattribute_analyzvailability_tvosddress_sanitizerhwaddress_sanitiaddress_sanitizeptrauth_qualifieizer
efficiency_sanitdataflow_sanitizer
ptrauth_intrinsics
memory_sanitizerthread_sanitizerlized_swift_namegeneralized_swifrator_attributesenumerator_attribility_on_arraysnullability_on_aobjc_instancetypalue_expressionsobjc_boxed_nsvaloxed_expressionsobjc_boxed_expreenerics_varianceobjc_generics_valiterals
objc_dictionary_e_id_on_typedefsobjc_bridge_id_oobjc_subscriptinalifier_manglingobjc_protocol_qu_explicit_atomicobjc_property_exc_nonfragile_abiobjc_nonfragile_c_array_literalsobjc_array_liter_cf_code_auditedarc_cf_code_audic_class_propertyobjc_class_propecxx_static_assercxx_strong_enumscxx_implicit_moves
zed_initializerscxx_generalized_ing_constructorscxx_delegating_ccxx_inheriting_caulted_functionscxx_defaulted_fu_string_literalscxx_raw_string_l_string_builtinscxx_constexpr_st_alias_templatescxx_alias_templas_control_sfinaecxx_access_contrcxx_user_literalestricted_unionscxx_unrestrictedrals
cxx_unicode_lite_trailing_returncxx_trailing_ret_aggregate_nsdmicxx_aggregate_ns_generic_lambdascxx_generic_lambcxx_thread_localn_type_deductioncxx_return_type_elaxed_constexprcxx_relaxed_conscxx_decltype_authas_nothrow_copyhas_trivial_copyhas_nothrow_assign
has_trivial_assitual_conversionscxx_contextual_cis_convertible_tis_constructibleivial_destructorhas_trivial_destrtual_destructorhas_virtual_desthas_nothrow_conshas_trivial_consis_trivially_assis_standard_layout
is_trivially_copis_trivially_conshadow_call_stac
x8r7
intelgpu_icl_1x6intelgpu_icl_1x8intelgpu_skl_gt2r6
intelgpu_kbl_gt2r0
intelgpu_kbl_gt3r1
gpu_gfx1010_nsgcamdgpu_gfx1010_nelgpu_skl_gt3r10intelgpu_skl_gt3amdgpu_gfx600_nw.tls_static_initair.tls_static_illvm.global_ctorllvm.global_dtorternally_definedair.externally_dn_surface_type__n_texture_type____cudart_builtintin_surface_typedevice_builtin_stin_texture_typedevice_builtin_t__include_macrosiency-cache-fragefficiency-cacheteger-truncationimplicit-integerinteger-overflowsigned-integer-oonnull-attributereturns-nonnull-unsigned-integernullability-assinullability-return
cfi-unrelated-cast
nonnull-attributshadow-call-stacr-divide-by-zerointeger-divide-bency-working-setefficiency-workifloat-divide-by-at-cast-overflowfloat-cast-overflicit-conversionimplicit-converskernel-hwaddresspointer-overflowcfi-derived-cast
nios2r2mandatoryexception-handling
trapping-fptointnontrapping-fptoal-thunk
retpoline-externcore_aes_pclmulqdq
_tsx
core_4th_gen_avxcore_5th_gen_avxcore_2_duo_sse4_atom_sse4_2_movbcore_2_duo_ssse3core_2nd_gen_avxcore_3rd_gen_avx_iii_no_xmm_regspentium_iii_no_xxistent-contentsignore-non-existuse-external-namoverlay-relativeexternal-contentllvm.compiler.usair.function_conster_order_groupair.raster_ordermageblock_masterair.imageblock_minfo
air.struct_type_air.arg_type_namair.render_targe
?marker
mips32
mips64
NSt3__120__shared_ptr_emplaceIN5clang22PCHContainerOperationsENS_9allocatorIS2_EEEE
N5clang22AtomicScopeOpenCLModelE
N5clang16AtomicScopeModelE
N5clang7CodeGen17BlockByrefHelpersE
N4llvm14FoldingSetBase4NodeE
N12_GLOBAL__N_116CallBlockReleaseE
N12_GLOBAL__N_118ObjectByrefHelpersE
N12_GLOBAL__N_121ARCStrongByrefHelpersE
N12_GLOBAL__N_126ARCStrongBlockByrefHelpersE
N12_GLOBAL__N_119ARCWeakByrefHelpersE
N12_GLOBAL__N_129NonTrivialCStructByrefHelpersE
N12_GLOBAL__N_132AddressDiscriminatedByrefHelpersE
N12_GLOBAL__N_115CXXByrefHelpersE
N5clang7CodeGen12EHScopeStack18ConditionalCleanupIN12_GLOBAL__N_114CallObjCArcUseEJPN4llvm5ValueEEEE
N12_GLOBAL__N_114CallObjCArcUseE
N4llvm13format_objectIJyEEE
N12_GLOBAL__N_115CGNVCUDARuntimeE
N5clang7CodeGen13CGCUDARuntimeE
N5clang7CodeGen8CGCXXABIE
N12_GLOBAL__N_111NoExpansionE
N12_GLOBAL__N_113TypeExpansionE
N12_GLOBAL__N_116ComplexExpansionE
N12_GLOBAL__N_115RecordExpansionE
N12_GLOBAL__N_122ConstantArrayExpansionE
N12_GLOBAL__N_118CopyBackSwiftErrorE
N5clang7CodeGen12EHScopeStack18ConditionalCleanupIN12_GLOBAL__N_118DestroyUnpassedArgEJNS0_7AddressENS_8QualTypeEEEE
N12_GLOBAL__N_118DestroyUnpassedArgE
N5clang7CodeGen12EHScopeStack18ConditionalCleanupINS0_15CodeGenFunction15CallLifetimeEndEJNS0_7AddressEPN4llvm5ValueEEEE
N5clang7CodeGen15CodeGenFunction15CallLifetimeEndE
N12_GLOBAL__N_112CallBaseDtorE
N12_GLOBAL__N_122CallDelegatingCtorDtorE
N12_GLOBAL__N_112DestroyFieldE
N12_GLOBAL__N_119SanitizeDtorMembersE
N12_GLOBAL__N_118SanitizeDtorVTableE
N12_GLOBAL__N_114CallDtorDeleteE
N12_GLOBAL__N_125CallDtorDeleteConditionalE
N12_GLOBAL__N_113CallLocalDtorE
N5clang7CodeGen12EHScopeStack7CleanupE
N12_GLOBAL__N_111CallCoroEndE
N12_GLOBAL__N_114CallCoroDeleteE
ZNK5clang7CodeGen11CGDebugInfo17getPrintingPolicyEvE3$_0
NSt3__110__function6__funcIZNK5clang7CodeGen11CGDebugInfo17getPrintingPolicyEvE3$_0NS_9allocatorIS5_EEFNS_12basic_stringIcNS_11char_traitsIcEENS6_IcEEEEN4llvm9StringRefEEEE
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4llvm9StringRefEEEE
N12_GLOBAL__N_119CallCleanupFunctionE
N12_GLOBAL__N_116ExtendGCLifetimeE
N5clang7CodeGen12EHScopeStack18ConditionalCleanupIN12_GLOBAL__N_126RegularPartialArrayDestroyEJPN4llvm5ValueES7_NS_8QualTypeENS_9CharUnitsEPFvRNS0_15CodeGenFunctionENS0_7AddressES8_EEEE
N12_GLOBAL__N_126RegularPartialArrayDestroyE
N12_GLOBAL__N_113DestroyObjectE
N12_GLOBAL__N_120DestroyNRVOVariableCE
N12_GLOBAL__N_119DestroyNRVOVariableINS_20DestroyNRVOVariableCEEE
N12_GLOBAL__N_122DestroyNRVOVariableCXXE
N12_GLOBAL__N_119DestroyNRVOVariableINS_22DestroyNRVOVariableCXXEEE
N5clang7CodeGen15CodeGenFunction7FakeUseE
N12_GLOBAL__N_116CallStackRestoreE
N5clang7CodeGen12EHScopeStack18ConditionalCleanupIN12_GLOBAL__N_113DestroyObjectEJNS0_7AddressENS_8QualTypeEPFvRNS0_15CodeGenFunctionES5_S6_EbEEE
N5clang7CodeGen12EHScopeStack18ConditionalCleanupIN12_GLOBAL__N_128IrregularPartialArrayDestroyEJPN4llvm5ValueENS0_7AddressENS_8QualTypeENS_9CharUnitsEPFvRNS0_15CodeGenFunctionES8_S9_EEEE
N12_GLOBAL__N_128IrregularPartialArrayDestroyE
N12_GLOBAL__N_119ConsumeARCParameterE
N5clang7CodeGen12EHScopeStack18ConditionalCleanupIN12_GLOBAL__N_113FreeExceptionEJPN4llvm5ValueEEEE
N12_GLOBAL__N_113FreeExceptionE
N12_GLOBAL__N_122CallEndCatchForFinallyE
N12_GLOBAL__N_114PerformFinallyE
N12_GLOBAL__N_117PerformSEHFinallyE
N12_GLOBAL__N_119CallDeleteDuringNewIZL21EnterNewDeleteCleanupRN5clang7CodeGen15CodeGenFunctionEPKNS1_10CXXNewExprENS2_7AddressEPN4llvm5ValueENS1_9CharUnitsERKNS2_11CallArgListEE24ConditionalCleanupTraitsEE
N12_GLOBAL__N_119CallDeleteDuringNewIZL21EnterNewDeleteCleanupRN5clang7CodeGen15CodeGenFunctionEPKNS1_10CXXNewExprENS2_7AddressEPN4llvm5ValueENS1_9CharUnitsERKNS2_11CallArgListEE19DirectCleanupTraitsEE
N12_GLOBAL__N_116CallObjectDeleteE
N12_GLOBAL__N_115CallArrayDeleteE
ZN5clang7CodeGen19CGAppleMetalRuntime39emitBuiltinMetalGetControlPointCallExprERNS0_15CodeGenFunctionEPKNS_8CallExprENS0_15ReturnValueSlotEE3$_1
NSt3__110__function6__funcIZN5clang7CodeGen19CGAppleMetalRuntime39emitBuiltinMetalGetControlPointCallExprERNS3_15CodeGenFunctionEPKNS2_8CallExprENS3_15ReturnValueSlotEE3$_1NS_9allocatorISB_EEFNS3_6LValueEvEEE
NSt3__110__function6__baseIFN5clang7CodeGen6LValueEvEEE
ZN5clang7CodeGen19CGAppleMetalRuntime39emitBuiltinMetalGetControlPointCallExprERNS0_15CodeGenFunctionEPKNS_8CallExprENS0_15ReturnValueSlotEE3$_0
NSt3__110__function6__funcIZN5clang7CodeGen19CGAppleMetalRuntime39emitBuiltinMetalGetControlPointCallExprERNS3_15CodeGenFunctionEPKNS2_8CallExprENS3_15ReturnValueSlotEE3$_0NS_9allocatorISB_EEFNS3_6LValueEvEEE
N5clang7CodeGen19CGAppleMetalRuntimeE
N5clang7CodeGen14CGMetalRuntimeE
N4llvm10FoldingSetIN5clang7CodeGen19CGAppleMetalRuntime28StructTypeMetadataCacheEntryEEE
N4llvm14FoldingSetImplIN5clang7CodeGen19CGAppleMetalRuntime28StructTypeMetadataCacheEntryEEE
N5clang7CodeGen13CGObjCRuntimeE
N12_GLOBAL__N_116FinishARCDeallocE
N12_GLOBAL__N_111DestroyIvarE
N5clang7CodeGen12EHScopeStack18ConditionalCleanupIN12_GLOBAL__N_115CallObjCReleaseEJPN4llvm5ValueEEEE
N12_GLOBAL__N_115CallObjCReleaseE
N12_GLOBAL__N_129CallObjCAutoreleasePoolObjectE
N12_GLOBAL__N_132CallObjCMRRAutoreleasePoolObjectE
ZN12_GLOBAL__N_19CGObjCGNU20GeneratePropertyListEPKN5clang4DeclEPKNS1_17ObjCContainerDeclEbbE3$_0
NSt3__110__function6__funcIZN12_GLOBAL__N_19CGObjCGNU20GeneratePropertyListEPKN5clang4DeclEPKNS4_17ObjCContainerDeclEbbE3$_0NS_9allocatorISB_EEFvPKNS4_16ObjCProtocolDeclEEEE
NSt3__110__function6__baseIFvPKN5clang16ObjCProtocolDeclEEEE
N12_GLOBAL__N_19CGObjCGNUE
N12_GLOBAL__N_111CGObjCObjFWE
N12_GLOBAL__N_19CGObjCGCCE
N12_GLOBAL__N_114CGObjCGNUstep2E
N12_GLOBAL__N_113CGObjCGNUstepE
N12_GLOBAL__N_115CGObjCCommonMacE
N12_GLOBAL__N_122CGObjCNonFragileABIMacE
N12_GLOBAL__N_121PerformFragileFinallyE
N12_GLOBAL__N_19CGObjCMacE
N12_GLOBAL__N_116CallObjCEndCatchE
N12_GLOBAL__N_112CallSyncExitE
N5clang7CodeGen15CGOpenCLRuntimeE
N5clang7CodeGen20CGAppleOpenCLRuntimeE
N12_GLOBAL__N_117DoacrossCleanupTyE
N5clang7CodeGen15PrePostActionTyE
N12_GLOBAL__N_19CleanupTyE
N12_GLOBAL__N_121CGOpenMPInnerExprInfoE
N12_GLOBAL__N_125CGOpenMPInlinedRegionInfoE
N12_GLOBAL__N_118CGOpenMPRegionInfoE
N12_GLOBAL__N_114CommonActionTyE
N4llvm13format_objectIJjEEE
N12_GLOBAL__N_130CGOpenMPTaskOutlinedRegionInfoE
N12_GLOBAL__N_130CGOpenMPTaskOutlinedRegionInfo18UntiedTaskActionTyE
N12_GLOBAL__N_126CGOpenMPOutlinedRegionInfoE
N12_GLOBAL__N_124CGOpenMPTargetRegionInfoE
N5clang7CodeGen15CGOpenMPRuntimeE
N5clang7CodeGen19CGOpenMPSIMDRuntimeE
ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX18emitFunctionPrologERNS0_15CodeGenFunctionEPKNS_4DeclEE18GlobalizationScope
N12_GLOBAL__N_128CheckVarsEscapingDeclContextE
N5clang16ConstStmtVisitorIN12_GLOBAL__N_128CheckVarsEscapingDeclContextEvJEEE
N5clang15StmtVisitorBaseINS_14make_const_ptrEN12_GLOBAL__N_128CheckVarsEscapingDeclContextEvJEEE
ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX17emitNonSPMDKernelERKNS_22OMPExecutableDirectiveEN4llvm9StringRefERPNS5_8FunctionERPNS5_8ConstantEbRKNS0_15RegionCodeGenTyEE20NVPTXPrePostActionTy
ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX14emitSPMDKernelERKNS_22OMPExecutableDirectiveEN4llvm9StringRefERPNS5_8FunctionERPNS5_8ConstantEbRKNS0_15RegionCodeGenTyEE20NVPTXPrePostActionTy
N12_GLOBAL__N_113NVPTXActionTyE
ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX25emitTeamsOutlinedFunctionERKNS_22OMPExecutableDirectiveEPKNS_7VarDeclENS_19OpenMPDirectiveKindERKNS0_15RegionCodeGenTyEE20NVPTXPrePostActionTy
ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX28emitParallelOutlinedFunctionERKNS_22OMPExecutableDirectiveEPKNS_7VarDeclENS_19OpenMPDirectiveKindERKNS0_15RegionCodeGenTyEE20NVPTXPrePostActionTy
N5clang7CodeGen20CGOpenMPRuntimeNVPTXE
N4llvm18ValueMapCallbackVHIPNS_8ConstantENSt3__16vectorIN12_GLOBAL__N_124PointerAuthConstantEntryENS3_9allocatorIS6_EEEENS_14ValueMapConfigIS2_NS_3sys10SmartMutexILb0EEEEEEE
ZN5clang7CodeGen15CodeGenFunction26EmitOMPTargetDataDirectiveERKNS_22OMPTargetDataDirectiveEE25DevicePointerPrivActionTy
N4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
ZN5clang15BackendConsumer13LinkInModulesEvEUlRN4llvm6ModuleERKNS1_9StringSetINS1_15MallocAllocatorEEEE_
ZZN5clang15BackendConsumer13LinkInModulesEvENKUlRN4llvm6ModuleERKNS1_9StringSetINS1_15MallocAllocatorEEEE_clES3_S8_EUlRKNS1_11GlobalValueEE_
NSt3__110__function6__funcIZZN5clang15BackendConsumer13LinkInModulesEvENKUlRN4llvm6ModuleERKNS4_9StringSetINS4_15MallocAllocatorEEEE_clES6_SB_EUlRKNS4_11GlobalValueEE_NS_9allocatorISG_EEFbSF_EEE
NSt3__110__function6__baseIFbRKN4llvm11GlobalValueEEEE
NSt3__110__function6__funcIZN5clang15BackendConsumer13LinkInModulesEvEUlRN4llvm6ModuleERKNS4_9StringSetINS4_15MallocAllocatorEEEE_NS_9allocatorISC_EEFvS6_SB_EEE
NSt3__110__function6__baseIFvRN4llvm6ModuleERKNS2_9StringSetINS2_15MallocAllocatorEEEEEE
N5clang22ClangDiagnosticHandlerE
N5clang15BackendConsumerE
N5clang13CodeGenActionE
N5clang18EmitLLVMOnlyActionE
N5clang7CodeGen15CodeGenFunction18CGCapturedStmtInfoE
N4llvm2cl11OptionValueIbEE
N4llvm2cl15OptionValueBaseIbLb0EEE
N4llvm2cl15OptionValueCopyIbEE
N4llvm10FoldingSetIN5clang7CodeGen17BlockByrefHelpersEEE
N4llvm14FoldingSetImplIN5clang7CodeGen17BlockByrefHelpersEEE
ZN5clang7CodeGen13CodeGenModule18getMostBaseClassesEPKNS_13CXXRecordDeclEE3$_1
NSt3__110__function6__funcIZN5clang7CodeGen13CodeGenModule18getMostBaseClassesEPKNS2_13CXXRecordDeclEE3$_1NS_9allocatorIS8_EEFvS7_EEE
NSt3__110__function6__baseIFvPKN5clang13CXXRecordDeclEEEE
N4llvm10FoldingSetIN5clang7CodeGen14CGFunctionInfoEEE
N4llvm14FoldingSetImplIN5clang7CodeGen14CGFunctionInfoEEE
N5clang18CoverageSourceInfoE
N5clang22DepArchiverPPCallbacksE
N12_GLOBAL__N_114CallGuardAbortE
N12_GLOBAL__N_112CallEndCatchE
N12_GLOBAL__N_113ItaniumCXXABIE
9AIRCXXABI
N5clang7CodeGen13CatchRetScopeE
N12_GLOBAL__N_117WebAssemblyCXXABIE
N12_GLOBAL__N_111iOS64CXXABIE
N12_GLOBAL__N_19ARMCXXABIE
N5clang16MacroPPCallbacksE
N12_GLOBAL__N_119CallInitThreadAbortE
N12_GLOBAL__N_113ResetGuardBitE
N12_GLOBAL__N_115MicrosoftCXXABIE
N5clang13CodeGeneratorE
N12_GLOBAL__N_117CodeGeneratorImplE
N5clang7CodeGen17TargetCodeGenInfoE
N5clang7CodeGen7ABIInfoE
N5clang7CodeGen12SwiftABIInfoE
N12_GLOBAL__N_114DefaultABIInfoE
N12_GLOBAL__N_121SPIRTargetCodeGenInfoE
N12_GLOBAL__N_122XCoreTargetCodeGenInfoE
N12_GLOBAL__N_112XCoreABIInfoE
N12_GLOBAL__N_124SparcV9TargetCodeGenInfoE
N12_GLOBAL__N_114SparcV9ABIInfoE
N12_GLOBAL__N_124SparcV8TargetCodeGenInfoE
N12_GLOBAL__N_114SparcV8ABIInfoE
N12_GLOBAL__N_123AMDGPUTargetCodeGenInfoE
N12_GLOBAL__N_113AMDGPUABIInfoE
N12_GLOBAL__N_122LanaiTargetCodeGenInfoE
N12_GLOBAL__N_112LanaiABIInfoE
N12_GLOBAL__N_124HexagonTargetCodeGenInfoE
N12_GLOBAL__N_114HexagonABIInfoE
N12_GLOBAL__N_129DarwinX86_64TargetCodeGenInfoE
N12_GLOBAL__N_123X86_64TargetCodeGenInfoE
N12_GLOBAL__N_120PS4TargetCodeGenInfoE
N12_GLOBAL__N_113X86_64ABIInfoE
N12_GLOBAL__N_126WinX86_64TargetCodeGenInfoE
N12_GLOBAL__N_116WinX86_64ABIInfoE
N12_GLOBAL__N_123X86_32TargetCodeGenInfoE
N12_GLOBAL__N_126WinX86_32TargetCodeGenInfoE
N12_GLOBAL__N_113X86_32ABIInfoE
N12_GLOBAL__N_120TCETargetCodeGenInfoE
N12_GLOBAL__N_124DefaultTargetCodeGenInfoE
N12_GLOBAL__N_124SystemZTargetCodeGenInfoE
N12_GLOBAL__N_114SystemZABIInfoE
N12_GLOBAL__N_122RISCVTargetCodeGenInfoE
N12_GLOBAL__N_112RISCVABIInfoE
N12_GLOBAL__N_123MSP430TargetCodeGenInfoE
N12_GLOBAL__N_122NVPTXTargetCodeGenInfoE
N12_GLOBAL__N_112NVPTXABIInfoE
N12_GLOBAL__N_122PPC64TargetCodeGenInfoE
N12_GLOBAL__N_128PPC64_SVR4_TargetCodeGenInfoE
N12_GLOBAL__N_118PPC64_SVR4_ABIInfoE
N12_GLOBAL__N_122PPC32TargetCodeGenInfoE
N12_GLOBAL__N_118PPC32_SVR4_ABIInfoE
N12_GLOBAL__N_127WindowsARMTargetCodeGenInfoE
N12_GLOBAL__N_120ARMTargetCodeGenInfoE
N12_GLOBAL__N_110ARMABIInfoE
N12_GLOBAL__N_128WebAssemblyTargetCodeGenInfoE
N12_GLOBAL__N_118WebAssemblyABIInfoE
N12_GLOBAL__N_124AArch64TargetCodeGenInfoE
N12_GLOBAL__N_130DarwinAArch64TargetCodeGenInfoE
N12_GLOBAL__N_131WindowsAArch64TargetCodeGenInfoE
N12_GLOBAL__N_114AArch64ABIInfoE
N12_GLOBAL__N_120AVRTargetCodeGenInfoE
N12_GLOBAL__N_121MIPSTargetCodeGenInfoE
N12_GLOBAL__N_111MipsABIInfoE
N12_GLOBAL__N_122PNaClTargetCodeGenInfoE
N12_GLOBAL__N_112PNaClABIInfoE
N12_GLOBAL__N_120AIRTargetCodeGenInfoE
N12_GLOBAL__N_110AIRABIInfoE
N5clang19TrivialModuleLoaderE
NSt3__120__shared_ptr_emplaceIN5clang29GlobalCodeCompletionAllocatorENS_9allocatorIS2_EEEE
N12_GLOBAL__N_124StoredDiagnosticConsumerE
NSt3__120__shared_ptr_emplaceIN5clang13TargetOptionsENS_9allocatorIS2_EEEE
N12_GLOBAL__N_116ASTInfoCollectorE
NSt3__120__shared_ptr_emplaceIN5clang12PreprocessorENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN5clang19PreprocessorOptionsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN5clang19HeaderSearchOptionsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN5clang11LangOptionsENS_9allocatorIS2_EEEE
N4llvm37CrashRecoveryContextReleaseRefCleanupIN5clang17DiagnosticsEngineEEE
N4llvm31CrashRecoveryContextCleanupBaseINS_37CrashRecoveryContextReleaseRefCleanupIN5clang17DiagnosticsEngineEEES3_EE
N4llvm33CrashRecoveryContextDeleteCleanupIN5clang7ASTUnitEEE
N4llvm31CrashRecoveryContextCleanupBaseINS_33CrashRecoveryContextDeleteCleanupIN5clang7ASTUnitEEES3_EE
NSt3__120__shared_ptr_emplaceIN5clang18CompilerInvocationENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN5clang18CompilerInvocationEEE
NSt3__120__shared_ptr_pointerIPN5clang18CompilerInvocationENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
N5clang25ChainedDiagnosticConsumerE
N12_GLOBAL__N_121ChainedIncludesSourceE
N12_GLOBAL__N_128ChainedIncludesSourceMembersE
N12_GLOBAL__N_125ChainedIncludesSourceImplE
NSt3__120__shared_ptr_emplaceIN5clang9PCHBufferENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN4llvm3sys2fs6detail12DirIterStateENS_9allocatorIS5_EEEE
NSt3__120__shared_ptr_emplaceIN5clang17BuildTracingStateENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN5clang16CompilerInstance21RealOutputFileManagerEEE
NSt3__120__shared_ptr_pointerIPN5clang16CompilerInstance21RealOutputFileManagerENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
N5clang16CompilerInstance21RealOutputFileManagerE
N5clang16CompilerInstance17OutputFileManagerE
NSt3__120__shared_ptr_emplaceIN5clang19PreprocessorOptions16FailedModulesSetENS_9allocatorIS3_EEEE
N5clang16CompilerInstanceE
NSt3__120__shared_ptr_emplaceIN5clang25ModuleDependencyCollectorENS_9allocatorIS2_EEEE
N12_GLOBAL__N_118TracingPPCallbacksE
ZN5clang16CompilerInstance14loadModuleFileEN4llvm9StringRefEE15ReadModuleNames
NSt3__114default_deleteIN5clang19PreprocessorOptionsEEE
NSt3__120__shared_ptr_pointerIPN5clang19PreprocessorOptionsENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN5clang19HeaderSearchOptionsEEE
NSt3__120__shared_ptr_pointerIPN5clang19HeaderSearchOptionsENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN5clang13TargetOptionsEEE
NSt3__120__shared_ptr_pointerIPN5clang13TargetOptionsENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN5clang11LangOptionsEEE
NSt3__120__shared_ptr_pointerIPN5clang11LangOptionsENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
N4llvm3opt7ArgListE
NSt3__120__shared_ptr_emplaceIN4llvm5RegexENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN5clang23TestModuleFileExtensionENS_9allocatorIS2_EEEE
N12_GLOBAL__N_123DepCollectorASTListenerE
N12_GLOBAL__N_123DepCollectorMMCallbacksE
N5clang18ModuleMapCallbacksE
N12_GLOBAL__N_123DepCollectorPPCallbacksE
N5clang19DependencyCollectorE
N12_GLOBAL__N_113DFGMMCallbackE
N12_GLOBAL__N_17DFGImplE
N12_GLOBAL__N_120DFGASTReaderListenerE
N12_GLOBAL__N_123DependencyGraphCallbackE
N5clang18DiagnosticRendererE
N5clang22DiagnosticNoteRendererE
N12_GLOBAL__N_113FixitReceiverE
N5clang14FrontendActionE
N5clang17ASTFrontendActionE
N12_GLOBAL__N_133DelegatingDeserializationListenerE
N12_GLOBAL__N_124DeserializedDeclsCheckerE
N12_GLOBAL__N_123DeserializedDeclsDumperE
N5clang20GenerateModuleActionE
N5clang33GenerateModuleFromModuleMapActionE
-?:\,[]{}#&*!|>'"%@`
01234567
0123456789abcdefABCDEF
0123456789
N12_GLOBAL__N_122HeaderIncludesCallbackE
N5clang20LayoutOverrideSourceE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
N5clang20LogDiagnosticPrinterE
N12_GLOBAL__N_124ModuleDependencyListenerE
N12_GLOBAL__N_127ModuleDependencyMMCallbacksE
N12_GLOBAL__N_127ModuleDependencyPPCallbacksE
N5clang25ModuleDependencyCollectorE
N5clang35MultiplexASTDeserializationListenerE
N5clang28MultiplexASTMutationListenerE
N5clang17MultiplexConsumerE
N12_GLOBAL__N_124RawPCHContainerGeneratorE
N5clang21RawPCHContainerWriterE
N5clang18PCHContainerWriterE
N5clang21RawPCHContainerReaderE
N5clang18PCHContainerReaderE
NSt3__120__shared_ptr_emplaceIN4llvm13BitCodeAbbrevENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN12_GLOBAL__N_112SDiagsWriter11SharedStateENS_9allocatorIS3_EEEE
N12_GLOBAL__N_114SDiagsRendererE
N12_GLOBAL__N_112SDiagsMergerE
N5clang16serialized_diags26SerializedDiagnosticReaderE
N12_GLOBAL__N_112SDiagsWriterE
N12_GLOBAL__N_119SDErrorCategoryTypeE
N5clang23TestModuleFileExtension6ReaderE
N5clang23TestModuleFileExtension6WriterE
N5clang23TestModuleFileExtensionE
N5clang14TextDiagnosticE
N5clang20TextDiagnosticBufferE
N5clang21TextDiagnosticPrinterE
N12_GLOBAL__N_114RegexDirectiveE
N5clang24VerifyDiagnosticConsumer9DirectiveE
N12_GLOBAL__N_117StandardDirectiveE
N5clang24VerifyDiagnosticConsumerE
full
local-exec
mips1
mips2
mips32r2
mips32r3
mips32r5
mips32r6
mips3
mips4
mips5
mips64r2
mips64r3
mips64r5
mips64r6
hexagonv4
hexagonv55
hexagonv5
hexagonv60
hexagonv62
hexagonv65
no-invalid-source-encoding
invalid-source-encoding
everything
no-macro-redefined
no-sign-compare
no-unused-parameter
no-dllexport-explicit-instantiation-decl
no-deprecated-declarations
no-error
error
error=c++11-compat-deprecated-writable-strings
N4llvm33CrashRecoveryContextDeleteCleanupIN5clang6ParserEEE
N4llvm31CrashRecoveryContextCleanupBaseINS_33CrashRecoveryContextDeleteCleanupIN5clang6ParserEEES3_EE
N12_GLOBAL__N_127PrettyStackTraceParserEntryE
N12_GLOBAL__N_117ResetStackCleanupE
N4llvm31CrashRecoveryContextCleanupBaseIN12_GLOBAL__N_117ResetStackCleanupEKvEE
N5clang6Parser15LateParsedClassE
N5clang6Parser21LateParsedDeclarationE
N5clang6Parser11LexedMethodE
N5clang6Parser27LateParsedMethodDeclarationE
N5clang6Parser27LateParsedMemberInitializerE
N5clang6Parser19LateParsedAttributeE
N12_GLOBAL__N_125CastExpressionIdValidatorE
N12_GLOBAL__N_127PragmaMetalInternalsHandlerE
N12_GLOBAL__N_122PragmaAttributeHandlerE
N12_GLOBAL__N_115PragmaFPHandlerE
N12_GLOBAL__N_123PragmaUnrollHintHandlerE
N12_GLOBAL__N_121PragmaLoopHintHandlerE
N12_GLOBAL__N_121PragmaOptimizeHandlerE
N12_GLOBAL__N_132PragmaForceCUDAHostDeviceHandlerE
N12_GLOBAL__N_123PragmaMSOptimizeHandlerE
N12_GLOBAL__N_124PragmaMSIntrinsicHandlerE
N12_GLOBAL__N_128PragmaMSRuntimeChecksHandlerE
N12_GLOBAL__N_114PragmaMSPragmaE
N12_GLOBAL__N_116PragmaMSVtorDispE
N12_GLOBAL__N_125PragmaMSPointersToMembersE
N12_GLOBAL__N_127PragmaDetectMismatchHandlerE
N12_GLOBAL__N_120PragmaCommentHandlerE
N12_GLOBAL__N_121PragmaNoOpenMPHandlerE
N12_GLOBAL__N_119PragmaOpenMPHandlerE
N12_GLOBAL__N_128PragmaOpenCLExtensionHandlerE
N12_GLOBAL__N_125PragmaClangSectionHandlerE
N12_GLOBAL__N_125PragmaSTDC_UnknownHandlerE
N12_GLOBAL__N_134PragmaSTDC_CX_LIMITED_RANGEHandlerE
N12_GLOBAL__N_129PragmaSTDC_FENV_ACCESSHandlerE
N12_GLOBAL__N_123PragmaFPContractHandlerE
N12_GLOBAL__N_128PragmaRedefineExtnameHandlerE
N12_GLOBAL__N_117PragmaWeakHandlerE
N12_GLOBAL__N_119PragmaUnusedHandlerE
N12_GLOBAL__N_121PragmaMSStructHandlerE
N12_GLOBAL__N_117PragmaPackHandlerE
N12_GLOBAL__N_120PragmaOptionsHandlerE
N12_GLOBAL__N_126PragmaGCCVisibilityHandlerE
N12_GLOBAL__N_118PragmaAlignHandlerE
N12_GLOBAL__N_118StatementFilterCCCE
N12_GLOBAL__N_122ClangAsmParserCallbackE
N12_GLOBAL__N_117TentativeParseCCCE
N5clang6ParserE
ZN5clang6ParserC1ERNS_12PreprocessorERNS_4SemaEbE3$_0
NSt3__110__function6__funcIZN5clang6ParserC1ERNS2_12PreprocessorERNS2_4SemaEbE3$_0NS_9allocatorIS8_EEFNS2_12ActionResultINS2_9OpaquePtrINS2_8QualTypeEEELb0EEEN4llvm9StringRefESH_NS2_14SourceLocationEEEE
NSt3__110__function6__baseIFN5clang12ActionResultINS2_9OpaquePtrINS2_8QualTypeEEELb0EEEN4llvm9StringRefES9_NS2_14SourceLocationEEEE
N12_GLOBAL__N_120ActionCommentHandlerE
N5clang26ASTDeserializationListenerE
N5clang21ASTIdentifierIteratorE
N12_GLOBAL__N_125ChainedIdentifierIteratorE
N5clang9ASTReaderE
N5clang17ASTReaderListenerE
N5clang24ChainedASTReaderListenerE
N5clang12PCHValidatorE
N5clang23SimpleASTReaderListenerE
N12_GLOBAL__N_118SimplePCHValidatorE
N5clang9ASTWriterE
N5clang12PCHGeneratorE
N12_GLOBAL__N_129GlobalIndexIdentifierIteratorE
N5clang25ModuleFileExtensionWriterE
N5clang25ModuleFileExtensionReaderE
N5clang19ModuleFileExtensionE
N12_GLOBAL__N_122UninitValsDiagReporterE
N5clang8consumed12_GLOBAL__N_123ConsumedWarningsHandlerE
N5clang12threadSafety12_GLOBAL__N_120ThreadSafetyReporterE
N12_GLOBAL__N_122UnreachableCodeHandlerE
N12_GLOBAL__N_119LogicalErrorHandlerE
N5clang11CFGCallbackE
N5clang20CodeCompleteConsumerE
N5clang28PrintingCodeCompleteConsumerE
N5clang27MultiplexExternalSemaSourceE
N5clang4sema17FunctionScopeInfoE
N5clang4sema18CapturingScopeInfoE
N5clang4sema14BlockScopeInfoE
N5clang4sema23CapturedRegionScopeInfoE
N5clang18ExternalSemaSourceE
N5clang4sema15SemaPPCallbacksE
N4llvm10FoldingSetIN5clang4Sema32SpecialMemberOverloadResultEntryEEE
N4llvm14FoldingSetImplIN5clang4Sema32SpecialMemberOverloadResultEntryEEE
N5clang4sema15LambdaScopeInfoE
N5clang4Sema18BoundTypeDiagnoserIJNS_11SourceRangeEEEE
N5clang4Sema13TypeDiagnoserE
N12_GLOBAL__N_131NestedNameSpecifierValidatorCCCE
N5clang4Sema18BoundTypeDiagnoserIJEEE
N5clang4Sema18BoundTypeDiagnoserIJPNS_4ExprEEEE
N12_GLOBAL__N_117CheckScanfHandlerE
N12_GLOBAL__N_118CheckFormatHandlerE
N12_GLOBAL__N_118CheckPrintfHandlerE
ZN12_GLOBAL__N_124MetalStitchingHelpersGen18checkSpecialMemberEPN5clang13CXXRecordDeclENS1_4Sema16CXXSpecialMemberEE4$_62
NSt3__110__function6__funcIZN12_GLOBAL__N_124MetalStitchingHelpersGen18checkSpecialMemberEPN5clang13CXXRecordDeclENS4_4Sema16CXXSpecialMemberEE4$_62NS_9allocatorIS9_EEFvvEEE
NSt3__110__function6__baseIFvvEEE
ZN12_GLOBAL__N_124MetalStitchingHelpersGen18checkSpecialMemberEPN5clang13CXXRecordDeclENS1_4Sema16CXXSpecialMemberEE4$_61
NSt3__110__function6__funcIZN12_GLOBAL__N_124MetalStitchingHelpersGen18checkSpecialMemberEPN5clang13CXXRecordDeclENS4_4Sema16CXXSpecialMemberEE4$_61NS_9allocatorIS9_EEFvvEEE
ZN12_GLOBAL__N_124MetalStitchingHelpersGen18checkSpecialMemberEPN5clang13CXXRecordDeclENS1_4Sema16CXXSpecialMemberEE4$_60
NSt3__110__function6__funcIZN12_GLOBAL__N_124MetalStitchingHelpersGen18checkSpecialMemberEPN5clang13CXXRecordDeclENS4_4Sema16CXXSpecialMemberEE4$_60NS_9allocatorIS9_EEFvvEEE
ZN12_GLOBAL__N_124MetalStitchingHelpersGen18checkSpecialMemberEPN5clang13CXXRecordDeclENS1_4Sema16CXXSpecialMemberEE4$_59
NSt3__110__function6__funcIZN12_GLOBAL__N_124MetalStitchingHelpersGen18checkSpecialMemberEPN5clang13CXXRecordDeclENS4_4Sema16CXXSpecialMemberEE4$_59NS_9allocatorIS9_EEFvvEEE
ZN12_GLOBAL__N_122MetalFunctionValidator3runEvE4$_57
NSt3__110__function6__funcIZN12_GLOBAL__N_122MetalFunctionValidator3runEvE4$_57NS_9allocatorIS4_EEFbN5clang8QualTypeENS7_14MetalPatchAttr9PatchTypeEEEE
NSt3__110__function6__baseIFbN5clang8QualTypeENS2_14MetalPatchAttr9PatchTypeEEEE
ZN12_GLOBAL__N_122MetalFunctionValidator3runEvE4$_56
NSt3__110__function6__funcIZN12_GLOBAL__N_122MetalFunctionValidator3runEvE4$_56NS_9allocatorIS4_EEFbN5clang8QualTypeEEEE
NSt3__110__function6__baseIFbN5clang8QualTypeEEEE
ZN12_GLOBAL__N_122MetalFunctionValidator3runEvE4$_55
NSt3__110__function6__funcIZN12_GLOBAL__N_122MetalFunctionValidator3runEvE4$_55NS_9allocatorIS4_EEFbN5clang8QualTypeEEEE
ZN12_GLOBAL__N_122MetalFunctionValidator3runEvE4$_54
NSt3__110__function6__funcIZN12_GLOBAL__N_122MetalFunctionValidator3runEvE4$_54NS_9allocatorIS4_EEFbN5clang8QualTypeES8_EEE
NSt3__110__function6__baseIFbN5clang8QualTypeES3_EEE
ZN12_GLOBAL__N_122MetalFunctionValidator3runEvE4$_53
NSt3__110__function6__funcIZN12_GLOBAL__N_122MetalFunctionValidator3runEvE4$_53NS_9allocatorIS4_EEFbN5clang8QualTypeES8_EEE
N12_GLOBAL__N_126CodeCompletionDeclConsumerE
N5clang12SemaConsumerE
N12_GLOBAL__N_120TypeNameValidatorCCCE
N12_GLOBAL__N_125DifferentNameValidatorCCCE
N5clang4Sema18BoundTypeDiagnoserIJNS0_17AbstractDiagSelIDEEEE
N5clang13DeclFilterCCCINS_12FunctionDeclEEE
N5clang13DeclFilterCCCINS_17ObjCInterfaceDeclEEE
ZN12_GLOBAL__N_123MetalPayloadTypeChecker25checkTrivialSpecialMemberEPN5clang13CXXRecordDeclENS1_4Sema16CXXSpecialMemberENS1_6LangASES6_EUlvE3_
NSt3__110__function6__funcIZN12_GLOBAL__N_123MetalPayloadTypeChecker25checkTrivialSpecialMemberEPN5clang13CXXRecordDeclENS4_4Sema16CXXSpecialMemberENS4_6LangASES9_EUlvE3_NS_9allocatorISA_EEFvvEEE
ZN12_GLOBAL__N_123MetalPayloadTypeChecker25checkTrivialSpecialMemberEPN5clang13CXXRecordDeclENS1_4Sema16CXXSpecialMemberENS1_6LangASES6_EUlvE2_
NSt3__110__function6__funcIZN12_GLOBAL__N_123MetalPayloadTypeChecker25checkTrivialSpecialMemberEPN5clang13CXXRecordDeclENS4_4Sema16CXXSpecialMemberENS4_6LangASES9_EUlvE2_NS_9allocatorISA_EEFvvEEE
ZN12_GLOBAL__N_123MetalPayloadTypeChecker25checkTrivialSpecialMemberEPN5clang13CXXRecordDeclENS1_4Sema16CXXSpecialMemberENS1_6LangASES6_EUlvE1_
NSt3__110__function6__funcIZN12_GLOBAL__N_123MetalPayloadTypeChecker25checkTrivialSpecialMemberEPN5clang13CXXRecordDeclENS4_4Sema16CXXSpecialMemberENS4_6LangASES9_EUlvE1_NS_9allocatorISA_EEFvvEEE
ZN12_GLOBAL__N_123MetalPayloadTypeChecker25checkTrivialSpecialMemberEPN5clang13CXXRecordDeclENS1_4Sema16CXXSpecialMemberENS1_6LangASES6_EUlvE0_
NSt3__110__function6__funcIZN12_GLOBAL__N_123MetalPayloadTypeChecker25checkTrivialSpecialMemberEPN5clang13CXXRecordDeclENS4_4Sema16CXXSpecialMemberENS4_6LangASES9_EUlvE0_NS_9allocatorISA_EEFvvEEE
ZN12_GLOBAL__N_123MetalPayloadTypeChecker25checkTrivialSpecialMemberEPN5clang13CXXRecordDeclENS1_4Sema16CXXSpecialMemberENS1_6LangASES6_EUlvE_
NSt3__110__function6__funcIZN12_GLOBAL__N_123MetalPayloadTypeChecker25checkTrivialSpecialMemberEPN5clang13CXXRecordDeclENS4_4Sema16CXXSpecialMemberENS4_6LangASES9_EUlvE_NS_9allocatorISA_EEFvvEEE
ZN12_GLOBAL__N_123MetalPayloadTypeChecker15VisitRecordTypeEPKN5clang10RecordTypeEEUlvE0_
NSt3__110__function6__funcIZN12_GLOBAL__N_123MetalPayloadTypeChecker15VisitRecordTypeEPKN5clang10RecordTypeEEUlvE0_NS_9allocatorIS8_EEFvvEEE
ZN12_GLOBAL__N_123MetalPayloadTypeChecker15VisitRecordTypeEPKN5clang10RecordTypeEEUlvE_
NSt3__110__function6__funcIZN12_GLOBAL__N_123MetalPayloadTypeChecker15VisitRecordTypeEPKN5clang10RecordTypeEEUlvE_NS_9allocatorIS8_EEFvvEEE
ZL11isTupleLikeRN5clang4SemaENS_14SourceLocationENS_8QualTypeERN4llvm6APSIntEE12ICEDiagnoser
N5clang4Sema18BoundTypeDiagnoserIJNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEE
N5clang4Sema18BoundTypeDiagnoserIJjNS_11SourceRangeEbEEE
N5clang4Sema18BoundTypeDiagnoserIJbEEE
N12_GLOBAL__N_126MemInitializerValidatorCCCE
N12_GLOBAL__N_113MemberBuilderE
N12_GLOBAL__N_111ExprBuilderE
N12_GLOBAL__N_116SubscriptBuilderE
N12_GLOBAL__N_117LvalueConvBuilderE
N12_GLOBAL__N_112DerefBuilderE
N12_GLOBAL__N_111CastBuilderE
N12_GLOBAL__N_111ThisBuilderE
N12_GLOBAL__N_115MoveCastBuilderE
N12_GLOBAL__N_110RefBuilderE
N12_GLOBAL__N_121NamespaceValidatorCCCE
N12_GLOBAL__N_117UsingValidatorCCCE
N5clang4Sema18BoundTypeDiagnoserIJNS_15DeclarationNameEEEE
N5clang4Sema18BoundTypeDiagnoserIJNS_15DeclarationNameEPNS_14IdentifierInfoENS_11SourceRangeEEEE
N12_GLOBAL__N_125ObjCInterfaceValidatorCCCE
N5clang13DeclFilterCCCINS_16ObjCProtocolDeclEEE
N12_GLOBAL__N_133ObjCTypeArgOrProtocolValidatorCCCE
N5clang4Sema18BoundTypeDiagnoserIJiNS_11SourceRangeEEEE
N5clang4Sema18VerifyICEDiagnoserE
N5clang4Sema18BoundTypeDiagnoserIJNS_8QualTypeENS_11SourceRangeEEEE
N12_GLOBAL__N_115FunctionCallCCCE
ZN5clang4Sema19CheckCallReturnTypeENS_8QualTypeENS_14SourceLocationEPNS_8CallExprEPNS_12FunctionDeclEE29CallReturnIncompleteDiagnoser
ZN5clang4Sema19DiagnoseEmptyLookupEPNS_5ScopeERNS_12CXXScopeSpecERNS_12LookupResultENSt3__110unique_ptrINS_27CorrectionCandidateCallbackENS7_14default_deleteIS9_EEEEPNS_24TemplateArgumentListInfoEN4llvm8ArrayRefIPNS_4ExprEEEPPNS_8TypoExprEE3$_1
NSt3__110__function6__funcIZN5clang4Sema19DiagnoseEmptyLookupEPNS2_5ScopeERNS2_12CXXScopeSpecERNS2_12LookupResultENS_10unique_ptrINS2_27CorrectionCandidateCallbackENS_14default_deleteISB_EEEEPNS2_24TemplateArgumentListInfoEN4llvm8ArrayRefIPNS2_4ExprEEEPPNS2_8TypoExprEE3$_1NS_9allocatorISP_EEFvRKNS2_14TypoCorrectionEEEE
NSt3__110__function6__baseIFvRKN5clang14TypoCorrectionEEEE
ZN5clang4Sema31VerifyIntegerConstantExpressionEPNS_4ExprEPN4llvm6APSIntERNS0_18VerifyICEDiagnoserEbE21CXX11ConvertDiagnoser
ZN5clang4Sema31VerifyIntegerConstantExpressionEPNS_4ExprEPN4llvm6APSIntEE18SimpleICEDiagnoser
N5clang4Sema18BoundTypeDiagnoserIJNS_20UnaryExprOrTypeTraitENS_11SourceRangeEEEE
N5clang4Sema18BoundTypeDiagnoserIJNS_7TypeLocEEEE
ZN5clang4Sema31VerifyIntegerConstantExpressionEPNS_4ExprEPN4llvm6APSIntEjbE11IDDiagnoser
ZN5clang4Sema11BuildCXXNewENS_11SourceRangeEbNS_14SourceLocationEN4llvm15MutableArrayRefIPNS_4ExprEEES2_S1_NS_8QualTypeEPNS_14TypeSourceInfoES6_S1_S6_E20SizeConvertDiagnoser
ZN5clang4Sema14ActOnCXXDeleteENS_14SourceLocationEbbPNS_4ExprEE15DeleteConverter
N5clang4Sema27ContextualImplicitConverterE
N5clang4Sema18BoundTypeDiagnoserIJPKciEEE
N5clang13DeclFilterCCCINS_12ObjCIvarDeclEEE
ZL24LookupMemberExprInRecordRN5clang4SemaERNS_12LookupResultEPNS_4ExprEPKNS_10RecordTypeENS_14SourceLocationEbRNS_12CXXScopeSpecEbS9_RPNS_8TypoExprEE3$_2
NSt3__110__function6__funcIZL24LookupMemberExprInRecordRN5clang4SemaERNS2_12LookupResultEPNS2_4ExprEPKNS2_10RecordTypeENS2_14SourceLocationEbRNS2_12CXXScopeSpecEbSC_RPNS2_8TypoExprEE3$_2NS_9allocatorISI_EEFNS2_12ActionResultIS8_Lb1EEES4_SG_NS2_14TypoCorrectionEEEE
NSt3__110__function6__baseIFN5clang12ActionResultIPNS2_4ExprELb1EEERNS2_4SemaEPNS2_8TypoExprENS2_14TypoCorrectionEEEE
ZL24LookupMemberExprInRecordRN5clang4SemaERNS_12LookupResultEPNS_4ExprEPKNS_10RecordTypeENS_14SourceLocationEbRNS_12CXXScopeSpecEbS9_RPNS_8TypoExprEE3$_1
NSt3__110__function6__funcIZL24LookupMemberExprInRecordRN5clang4SemaERNS2_12LookupResultEPNS2_4ExprEPKNS2_10RecordTypeENS2_14SourceLocationEbRNS2_12CXXScopeSpecEbSC_RPNS2_8TypoExprEE3$_1NS_9allocatorISI_EEFvRKNS2_14TypoCorrectionEEEE
N12_GLOBAL__N_128RecordMemberExprValidatorCCCE
N5clang4Sema18BoundTypeDiagnoserIJNS_15DeclarationNameEPNS_4ExprEEEE
N5clang13DeclFilterCCCINS_16ObjCPropertyDeclEEE
N5clang4Sema18BoundTypeDiagnoserIJNS_15DeclarationNameENS_11SourceRangeEEEE
N12_GLOBAL__N_123ObjCInterfaceOrSuperCCCE
N12_GLOBAL__N_128FieldInitializerValidatorCCCE
N5clang13DeclFilterCCCINS_7VarDeclEEE
N5clang21FunctionCallFilterCCCE
N5clang27CorrectionCandidateCallbackE
N5clang19VisibleDeclConsumerE
N5clang22TypoCorrectionConsumerE
N12_GLOBAL__N_116VarDeclFilterCCCE
ZN5clang4Sema38PerformOpenMPImplicitIntegerConversionENS_14SourceLocationEPNS_4ExprEE19IntConvertDiagnoser
N12_GLOBAL__N_122VarOrFuncDeclFilterCCCE
N5clang4Sema19ICEConvertDiagnoserE
ZN5clang4Sema35PerformContextualImplicitConversionENS_14SourceLocationEPNS_4ExprERNS0_27ContextualImplicitConverterEE24TypeDiagnoserPartialDiag
N5clang19NoTypoCorrectionCCCE
N12_GLOBAL__N_119MSPropertyOpBuilderE
N12_GLOBAL__N_115PseudoOpBuilderE
N12_GLOBAL__N_122ObjCSubscriptOpBuilderE
N12_GLOBAL__N_121ObjCPropertyOpBuilderE
ZN5clang4Sema20CheckSwitchConditionENS_14SourceLocationEPNS_4ExprEE22SwitchConvertDiagnoser
ZN5clang4Sema34diagnoseExprIntendedAsTemplateNameEPNS_5ScopeENS_12ActionResultIPNS_4ExprELb1EEENS_14SourceLocationES7_E23TemplateCandidateFilter
ZN5clang4Sema21CheckTemplateArgumentEPNS_23NonTypeTemplateParmDeclENS_8QualTypeEPNS_4ExprERNS_16TemplateArgumentENS0_25CheckTemplateArgumentKindEE19TmplArgICEDiagnoser
N12_GLOBAL__N_125ParameterPackValidatorCCCE
N5clang4Sema18BoundTypeDiagnoserIJiEEE
ZL14isArraySizeVLARN5clang4SemaEPNS_4ExprERN4llvm6APSIntEE12VLADiagnoser
N5clang4Sema18BoundTypeDiagnoserIJNS_8QualTypeEEEE
N5clang15ManagedAnalysisE
ZNK5clang15LocationContext9dumpStackERN4llvm11raw_ostreamENS1_9StringRefEPKcS6_NSt3__18functionIFvPKS0_EEEEd_UlSA_E_
NSt3__110__function6__funcIZNK5clang15LocationContext9dumpStackERN4llvm11raw_ostreamENS4_9StringRefEPKcS9_NS_8functionIFvPKS3_EEEEd_UlSC_E_NS_9allocatorISF_EESD_EE
NSt3__110__function6__baseIFvPKN5clang15LocationContextEEEE
N12_GLOBAL__N_117StmtPrinterHelperE
N5clang8consumed27ConsumedWarningsHandlerBaseE
N5clang16PostOrderCFGViewE
N5clang14reachable_code8CallbackE
N5clang12threadSafety19ThreadSafetyHandlerE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N12_GLOBAL__N_123ScopedLockableFactEntryE
N12_GLOBAL__N_19FactEntryE
N5clang12threadSafety14CapabilityExprE
ZN5clang12threadSafety9BeforeSet16checkBeforeAfterEPKNS_9ValueDeclERKN12_GLOBAL__N_17FactSetERNS5_20ThreadSafetyAnalyzerENS_14SourceLocationEN4llvm9StringRefEE3$_0
NSt3__110__function6__funcIZN5clang12threadSafety9BeforeSet16checkBeforeAfterEPKNS2_9ValueDeclERKN12_GLOBAL__N_17FactSetERNS8_20ThreadSafetyAnalyzerENS2_14SourceLocationEN4llvm9StringRefEE3$_0NS_9allocatorISH_EEFbS7_EEE
NSt3__110__function6__baseIFbPKN5clang9ValueDeclEEEE
N12_GLOBAL__N_117LockableFactEntryE
N5clang22UninitVariablesHandlerE
N12_GLOBAL__N_118PruneBlocksHandlerE
apinotesc
N12_GLOBAL__N_128PrettyStackTraceDoubleStringE
apinotes
N5clang4edit13EditsReceiverE
N5clang11ASTConsumerE
N5clang19ASTMutationListenerE
N5clang6CXXABIE
N4llvm10FoldingSetIN5clang10ASTContext29CanonicalTemplateTemplateParmEEE
N4llvm14FoldingSetImplIN5clang10ASTContext29CanonicalTemplateTemplateParmEEE
N4llvm10FoldingSetIN5clang19NestedNameSpecifierEEE
N4llvm14FoldingSetImplIN5clang19NestedNameSpecifierEEE
N4llvm20ContextualFoldingSetIN5clang36SubstTemplateTemplateParmPackStorageERNS1_10ASTContextEEE
N4llvm14FoldingSetImplIN5clang36SubstTemplateTemplateParmPackStorageEEE
N4llvm10FoldingSetIN5clang32SubstTemplateTemplateParmStorageEEE
N4llvm14FoldingSetImplIN5clang32SubstTemplateTemplateParmStorageEEE
N4llvm10FoldingSetIN5clang21DependentTemplateNameEEE
N4llvm14FoldingSetImplIN5clang21DependentTemplateNameEEE
N4llvm10FoldingSetIN5clang21QualifiedTemplateNameEEE
N4llvm14FoldingSetImplIN5clang21QualifiedTemplateNameEEE
N4llvm10FoldingSetIN5clang8PipeTypeEEE
N4llvm14FoldingSetImplIN5clang8PipeTypeEEE
N4llvm10FoldingSetIN5clang14AttributedTypeEEE
N4llvm14FoldingSetImplIN5clang14AttributedTypeEEE
N4llvm10FoldingSetIN5clang10AtomicTypeEEE
N4llvm14FoldingSetImplIN5clang10AtomicTypeEEE
N4llvm10FoldingSetIN5clang33DeducedTemplateSpecializationTypeEEE
N4llvm14FoldingSetImplIN5clang33DeducedTemplateSpecializationTypeEEE
N4llvm10FoldingSetIN5clang8AutoTypeEEE
N4llvm14FoldingSetImplIN5clang8AutoTypeEEE
N4llvm10FoldingSetIN5clang27DependentUnaryTransformTypeEEE
N4llvm14FoldingSetImplIN5clang27DependentUnaryTransformTypeEEE
N4llvm10FoldingSetIN5clang21ObjCObjectPointerTypeEEE
N4llvm14FoldingSetImplIN5clang21ObjCObjectPointerTypeEEE
N4llvm10FoldingSetIN5clang18ObjCObjectTypeImplEEE
N4llvm14FoldingSetImplIN5clang18ObjCObjectTypeImplEEE
N4llvm10FoldingSetIN5clang17PackExpansionTypeEEE
N4llvm14FoldingSetImplIN5clang17PackExpansionTypeEEE
N4llvm20ContextualFoldingSetIN5clang35DependentTemplateSpecializationTypeERNS1_10ASTContextEEE
N4llvm14FoldingSetImplIN5clang35DependentTemplateSpecializationTypeEEE
N4llvm10FoldingSetIN5clang17DependentNameTypeEEE
N4llvm14FoldingSetImplIN5clang17DependentNameTypeEEE
N4llvm10FoldingSetIN5clang14ElaboratedTypeEEE
N4llvm14FoldingSetImplIN5clang14ElaboratedTypeEEE
N4llvm10FoldingSetIN5clang9ParenTypeEEE
N4llvm14FoldingSetImplIN5clang9ParenTypeEEE
N4llvm20ContextualFoldingSetIN5clang26TemplateSpecializationTypeERNS1_10ASTContextEEE
N4llvm14FoldingSetImplIN5clang26TemplateSpecializationTypeEEE
N4llvm10FoldingSetIN5clang29SubstTemplateTypeParmPackTypeEEE
N4llvm14FoldingSetImplIN5clang29SubstTemplateTypeParmPackTypeEEE
N4llvm10FoldingSetIN5clang25SubstTemplateTypeParmTypeEEE
N4llvm14FoldingSetImplIN5clang25SubstTemplateTypeParmTypeEEE
N4llvm10FoldingSetIN5clang17ObjCTypeParamTypeEEE
N4llvm14FoldingSetImplIN5clang17ObjCTypeParamTypeEEE
N4llvm10FoldingSetIN5clang20TemplateTypeParmTypeEEE
N4llvm14FoldingSetImplIN5clang20TemplateTypeParmTypeEEE
N4llvm10FoldingSetIN5clang21DependentDecltypeTypeEEE
N4llvm14FoldingSetImplIN5clang21DependentDecltypeTypeEEE
N4llvm10FoldingSetIN5clang23DependentTypeOfExprTypeEEE
N4llvm14FoldingSetImplIN5clang23DependentTypeOfExprTypeEEE
N4llvm20ContextualFoldingSetIN5clang17FunctionProtoTypeERNS1_10ASTContextEEE
N4llvm14FoldingSetImplIN5clang17FunctionProtoTypeEEE
N4llvm10FoldingSetIN5clang19FunctionNoProtoTypeEEE
N4llvm14FoldingSetImplIN5clang19FunctionNoProtoTypeEEE
N4llvm10FoldingSetIN5clang24DependentSizedMatrixTypeEEE
N4llvm14FoldingSetImplIN5clang24DependentSizedMatrixTypeEEE
N4llvm10FoldingSetIN5clang10MatrixTypeEEE
N4llvm14FoldingSetImplIN5clang10MatrixTypeEEE
N4llvm10FoldingSetIN5clang19DependentVectorTypeEEE
N4llvm14FoldingSetImplIN5clang19DependentVectorTypeEEE
N4llvm10FoldingSetIN5clang10VectorTypeEEE
N4llvm14FoldingSetImplIN5clang10VectorTypeEEE
N4llvm10FoldingSetIN5clang25DependentAddressSpaceTypeEEE
N4llvm14FoldingSetImplIN5clang25DependentAddressSpaceTypeEEE
N4llvm10FoldingSetIN5clang27DependentSizedExtVectorTypeEEE
N4llvm14FoldingSetImplIN5clang27DependentSizedExtVectorTypeEEE
N4llvm10FoldingSetIN5clang23DependentSizedArrayTypeEEE
N4llvm14FoldingSetImplIN5clang23DependentSizedArrayTypeEEE
N4llvm10FoldingSetIN5clang19IncompleteArrayTypeEEE
N4llvm14FoldingSetImplIN5clang19IncompleteArrayTypeEEE
N4llvm10FoldingSetIN5clang17ConstantArrayTypeEEE
N4llvm14FoldingSetImplIN5clang17ConstantArrayTypeEEE
N4llvm10FoldingSetIN5clang17MemberPointerTypeEEE
N4llvm14FoldingSetImplIN5clang17MemberPointerTypeEEE
N4llvm10FoldingSetIN5clang19RValueReferenceTypeEEE
N4llvm14FoldingSetImplIN5clang19RValueReferenceTypeEEE
N4llvm10FoldingSetIN5clang19LValueReferenceTypeEEE
N4llvm14FoldingSetImplIN5clang19LValueReferenceTypeEEE
N4llvm10FoldingSetIN5clang16BlockPointerTypeEEE
N4llvm14FoldingSetImplIN5clang16BlockPointerTypeEEE
N4llvm10FoldingSetIN5clang12AdjustedTypeEEE
N4llvm14FoldingSetImplIN5clang12AdjustedTypeEEE
N4llvm10FoldingSetIN5clang11PointerTypeEEE
N4llvm14FoldingSetImplIN5clang11PointerTypeEEE
N4llvm10FoldingSetIN5clang11ComplexTypeEEE
N4llvm14FoldingSetImplIN5clang11ComplexTypeEEE
N4llvm10FoldingSetIN5clang8ExtQualsEEE
N4llvm14FoldingSetImplIN5clang8ExtQualsEEE
N5clang17VTableContextBaseE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_11dumpCommentEPKN5clang8comments7CommentEE4$_24EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_11dumpCommentEPKN5clang8comments7CommentEE4$_24EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
NSt3__110__function6__baseIFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_15dumpTypeAsChildEN5clang8QualTypeEE3$_0EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_15dumpTypeAsChildEN5clang8QualTypeEE3$_0EEvT_EUlbE_NS_9allocatorIS9_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_15dumpTypeAsChildEPKN5clang4TypeEE3$_1EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_15dumpTypeAsChildEPKN5clang4TypeEE3$_1EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_20dumpTemplateArgumentERKN5clang16TemplateArgumentENS2_11SourceRangeEE3$_7EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_20dumpTemplateArgumentERKN5clang16TemplateArgumentENS5_11SourceRangeEE3$_7EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_11dumpDeclRefEPKN5clang4DeclEPKcE3$_2EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_11dumpDeclRefEPKN5clang4DeclEPKcE3$_2EEvT_EUlbE_NS_9allocatorISD_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_22VisitFunctionProtoTypeEPKN5clang17FunctionProtoTypeEEUlvE_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_22VisitFunctionProtoTypeEPKN5clang17FunctionProtoTypeEEUlvE_EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_8dumpStmtEPKN5clang4StmtEE4$_20EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_8dumpStmtEPKN5clang4StmtEE4$_20EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_27VisitOMPExecutableDirectiveEPKN5clang22OMPExecutableDirectiveEE4$_21EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_27VisitOMPExecutableDirectiveEPKN5clang22OMPExecutableDirectiveEE4$_21EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_17VisitInitListExprEPKN5clang12InitListExprEE4$_22EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_17VisitInitListExprEPKN5clang12InitListExprEE4$_22EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_8dumpDeclEPKN5clang4DeclEE3$_8EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_8dumpDeclEPKN5clang4DeclEE3$_8EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_15dumpDeclContextEPKN5clang11DeclContextEE3$_3EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_15dumpDeclContextEPKN5clang11DeclContextEE3$_3EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_17VisitFunctionDeclEPKN5clang12FunctionDeclEE4$_10EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_17VisitFunctionDeclEPKN5clang12FunctionDeclEE4$_10EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_17VisitFunctionDeclEPKN5clang12FunctionDeclEE3$_9EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_17VisitFunctionDeclEPKN5clang12FunctionDeclEE3$_9EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_31VisitConstructorUsingShadowDeclEPKN5clang26ConstructorUsingShadowDeclEE4$_15EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_31VisitConstructorUsingShadowDeclEPKN5clang26ConstructorUsingShadowDeclEE4$_15EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_31VisitConstructorUsingShadowDeclEPKN5clang26ConstructorUsingShadowDeclEE4$_14EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_31VisitConstructorUsingShadowDeclEPKN5clang26ConstructorUsingShadowDeclEE4$_14EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_31VisitConstructorUsingShadowDeclEPKN5clang26ConstructorUsingShadowDeclEE4$_13EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_31VisitConstructorUsingShadowDeclEPKN5clang26ConstructorUsingShadowDeclEE4$_13EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEE4$_12EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEE4$_12EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEE4$_11EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEE4$_11EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS0_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE4_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS3_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE4_EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS0_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE3_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS3_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE3_EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS0_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE2_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS3_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE2_EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS0_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE1_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS3_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE1_EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS0_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE0_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS3_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE0_EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS0_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS3_18VisitCXXRecordDeclEPKN5clang13CXXRecordDeclEENK4$_11clEvEUlvE_EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_19VisitObjCMethodDeclEPKN5clang14ObjCMethodDeclEE4$_16EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_19VisitObjCMethodDeclEPKN5clang14ObjCMethodDeclEE4$_16EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_22dumpCXXCtorInitializerEPKN5clang18CXXCtorInitializerEE3$_6EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_22dumpCXXCtorInitializerEPKN5clang18CXXCtorInitializerEE3$_6EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_14VisitBlockDeclEPKN5clang9BlockDeclEE4$_19EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_14VisitBlockDeclEPKN5clang9BlockDeclEE4$_19EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_14VisitBlockDeclEPKN5clang9BlockDeclEE4$_18EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_14VisitBlockDeclEPKN5clang9BlockDeclEE4$_18EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_14VisitBlockDeclEPKN5clang9BlockDeclEE4$_17EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_14VisitBlockDeclEPKN5clang9BlockDeclEE4$_17EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS0_8dumpDeclEPKN5clang4DeclEENK3$_8clEvEUlvE_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS3_8dumpDeclEPKN5clang4DeclEENK3$_8clEvEUlvE_EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_8dumpAttrEPKN5clang4AttrEE3$_5EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_8dumpAttrEPKN5clang4AttrEE3$_5EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_25VisitGenericSelectionExprEPKN5clang20GenericSelectionExprEE4$_23EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_25VisitGenericSelectionExprEPKN5clang20GenericSelectionExprEE4$_23EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS0_11dumpLookupsEPKN5clang11DeclContextEbE3$_4EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZNS3_11dumpLookupsEPKN5clang11DeclContextEbE3$_4EEvT_EUlbE_NS_9allocatorISB_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS0_11dumpLookupsEPKN5clang11DeclContextEbENK3$_4clEvEUlvE0_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS3_11dumpLookupsEPKN5clang11DeclContextEbENK3$_4clEvEUlvE0_EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS0_11dumpLookupsEPKN5clang11DeclContextEbENK3$_4clEvEUlvE_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZZNS3_11dumpLookupsEPKN5clang11DeclContextEbENK3$_4clEvEUlvE_EEvT_EUlbE_NS_9allocatorISC_EEFvbEEE
ZN12_GLOBAL__N_19ASTDumper9dumpChildIZZZNS0_11dumpLookupsEPKN5clang11DeclContextEbENK3$_4clEvENKUlvE_clEvEUlvE_EEvT_EUlbE_
NSt3__110__function6__funcIZN12_GLOBAL__N_19ASTDumper9dumpChildIZZZNS3_11dumpLookupsEPKN5clang11DeclContextEbENK3$_4clEvENKUlvE_clEvEUlvE_EEvT_EUlbE_NS_9allocatorISD_EEFvbEEE
ZZZZN12_GLOBAL__N_19ASTDumper11dumpLookupsEPKN5clang11DeclContextEbENK3$_4clEvENKUlvE_clEvENKUlvE_clEvEUlPNS1_4DeclEE_
NSt3__110__function6__funcIZZZZN12_GLOBAL__N_19ASTDumper11dumpLookupsEPKN5clang11DeclContextEbENK3$_4clEvENKUlvE_clEvENKUlvE_clEvEUlPNS4_4DeclEE_NS_9allocatorISD_EEFvSC_EEE
NSt3__110__function6__baseIFvPN5clang4DeclEEEE
N5clang19TranslationUnitDeclE
N5clang11DeclContextE
N5clang7VarDeclE
N5clang12RedeclarableINS_7VarDeclEEE
N5clang14DeclaratorDeclE
N5clang9ValueDeclE
N5clang9NamedDeclE
N5clang10RecordDeclE
N5clang7TagDeclE
N5clang12RedeclarableINS_7TagDeclEEE
N5clang8TypeDeclE
N5clang12CapturedDeclE
N4llvm15TrailingObjectsIN5clang12CapturedDeclEJPNS1_17ImplicitParamDeclEEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang12CapturedDeclENS_15TrailingObjectsIS3_JPNS2_17ImplicitParamDeclEEEES3_JS6_EEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang12CapturedDeclENS_15TrailingObjectsIS3_JPNS2_17ImplicitParamDeclEEEES6_JEEE
N4llvm25trailing_objects_internal22TrailingObjectsAlignerILi8EEE
N4llvm25trailing_objects_internal19TrailingObjectsBaseE
N5clang17IndirectFieldDeclE
N5clang9MergeableINS_17IndirectFieldDeclEEE
N5clang10ImportDeclE
N4llvm15TrailingObjectsIN5clang10ImportDeclEJNS1_14SourceLocationEEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi4EN5clang10ImportDeclENS_15TrailingObjectsIS3_JNS2_14SourceLocationEEEES3_JS5_EEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi4EN5clang10ImportDeclENS_15TrailingObjectsIS3_JNS2_14SourceLocationEEEES5_JEEE
N4llvm25trailing_objects_internal22TrailingObjectsAlignerILi4EEE
N5clang17PragmaCommentDeclE
N4llvm15TrailingObjectsIN5clang17PragmaCommentDeclEJcEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi1EN5clang17PragmaCommentDeclENS_15TrailingObjectsIS3_JcEEES3_JcEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi1EN5clang17PragmaCommentDeclENS_15TrailingObjectsIS3_JcEEEcJEEE
N4llvm25trailing_objects_internal22TrailingObjectsAlignerILi1EEE
N5clang24PragmaDetectMismatchDeclE
N4llvm15TrailingObjectsIN5clang24PragmaDetectMismatchDeclEJcEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi1EN5clang24PragmaDetectMismatchDeclENS_15TrailingObjectsIS3_JcEEES3_JcEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi1EN5clang24PragmaDetectMismatchDeclENS_15TrailingObjectsIS3_JcEEEcJEEE
N5clang18ExternCContextDeclE
N5clang9LabelDeclE
N5clang17ImplicitParamDeclE
N5clang11ParmVarDeclE
N5clang12FunctionDeclE
N5clang12RedeclarableINS_12FunctionDeclEEE
N5clang9FieldDeclE
N5clang9MergeableINS_9FieldDeclEEE
N5clang16EnumConstantDeclE
N5clang9MergeableINS_16EnumConstantDeclEEE
N5clang15TypedefNameDeclE
N5clang12RedeclarableINS_15TypedefNameDeclEEE
N5clang11TypedefDeclE
N5clang13TypeAliasDeclE
N5clang8EnumDeclE
N5clang16FileScopeAsmDeclE
N5clang9BlockDeclE
N5clang10ExportDeclE
N5clang9EmptyDeclE
N5clang25PrettyDeclStackTraceEntryE
N4llvm10FoldingSetIN5clang26CXXDeductionGuideNameExtraEEE
N4llvm14FoldingSetImplIN5clang26CXXDeductionGuideNameExtraEEE
N4llvm10FoldingSetIN5clang24CXXLiteralOperatorIdNameEEE
N4llvm14FoldingSetImplIN5clang24CXXLiteralOperatorIdNameEEE
N4llvm10FoldingSetIN5clang14CXXSpecialNameEEE
N4llvm14FoldingSetImplIN5clang14CXXSpecialNameEEE
N5clang4DeclE
N5clang20PrettyStackTraceDeclE
N5clang13CXXRecordDeclE
N5clang13NamespaceDeclE
N5clang12RedeclarableINS_13NamespaceDeclEEE
N5clang15UsingShadowDeclE
N5clang12RedeclarableINS_15UsingShadowDeclEEE
N5clang14AccessSpecDeclE
N5clang21CXXDeductionGuideDeclE
N5clang13CXXMethodDeclE
N5clang18CXXConstructorDeclE
N4llvm15TrailingObjectsIN5clang18CXXConstructorDeclEJNS1_20InheritedConstructorEEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang18CXXConstructorDeclENS_15TrailingObjectsIS3_JNS2_20InheritedConstructorEEEES3_JS5_EEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang18CXXConstructorDeclENS_15TrailingObjectsIS3_JNS2_20InheritedConstructorEEEES5_JEEE
N5clang17CXXDestructorDeclE
N5clang17CXXConversionDeclE
N5clang15LinkageSpecDeclE
N5clang18UsingDirectiveDeclE
N5clang18NamespaceAliasDeclE
N5clang12RedeclarableINS_18NamespaceAliasDeclEEE
N5clang26ConstructorUsingShadowDeclE
N5clang9UsingDeclE
N5clang9MergeableINS_9UsingDeclEEE
N5clang13UsingPackDeclE
N4llvm15TrailingObjectsIN5clang13UsingPackDeclEJPNS1_9NamedDeclEEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang13UsingPackDeclENS_15TrailingObjectsIS3_JPNS2_9NamedDeclEEEES3_JS6_EEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang13UsingPackDeclENS_15TrailingObjectsIS3_JPNS2_9NamedDeclEEEES6_JEEE
N5clang9MergeableINS_13UsingPackDeclEEE
N5clang24UnresolvedUsingValueDeclE
N5clang9MergeableINS_24UnresolvedUsingValueDeclEEE
N5clang27UnresolvedUsingTypenameDeclE
N5clang9MergeableINS_27UnresolvedUsingTypenameDeclEEE
N5clang16StaticAssertDeclE
N5clang11BindingDeclE
N5clang17DecompositionDeclE
N4llvm15TrailingObjectsIN5clang17DecompositionDeclEJPNS1_11BindingDeclEEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang17DecompositionDeclENS_15TrailingObjectsIS3_JPNS2_11BindingDeclEEEES3_JS6_EEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang17DecompositionDeclENS_15TrailingObjectsIS3_JPNS2_11BindingDeclEEEES6_JEEE
N5clang14MSPropertyDeclE
N5clang10FriendDeclE
N4llvm15TrailingObjectsIN5clang10FriendDeclEJPNS1_21TemplateParameterListEEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang10FriendDeclENS_15TrailingObjectsIS3_JPNS2_21TemplateParameterListEEEES3_JS6_EEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang10FriendDeclENS_15TrailingObjectsIS3_JPNS2_21TemplateParameterListEEEES6_JEEE
N5clang17ObjCInterfaceDeclE
N5clang12RedeclarableINS_17ObjCInterfaceDeclEEE
N5clang17ObjCContainerDeclE
N5clang16ObjCProtocolDeclE
N5clang12RedeclarableINS_16ObjCProtocolDeclEEE
N5clang16ObjCCategoryDeclE
N5clang14ObjCMethodDeclE
N5clang17ObjCTypeParamDeclE
N5clang16ObjCPropertyDeclE
N5clang12ObjCIvarDeclE
N5clang19ObjCAtDefsFieldDeclE
N5clang12ObjCImplDeclE
N5clang20ObjCCategoryImplDeclE
N5clang22ObjCImplementationDeclE
N5clang23ObjCCompatibleAliasDeclE
N5clang20ObjCPropertyImplDeclE
N5clang20OMPThreadPrivateDeclE
N4llvm15TrailingObjectsIN5clang20OMPThreadPrivateDeclEJPNS1_4ExprEEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang20OMPThreadPrivateDeclENS_15TrailingObjectsIS3_JPNS2_4ExprEEEES3_JS6_EEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang20OMPThreadPrivateDeclENS_15TrailingObjectsIS3_JPNS2_4ExprEEEES6_JEEE
N5clang23OMPDeclareReductionDeclE
N5clang19OMPCapturedExprDeclE
N5clang23NonTypeTemplateParmDeclE
N4llvm15TrailingObjectsIN5clang23NonTypeTemplateParmDeclEJNSt3__14pairINS1_8QualTypeEPNS1_14TypeSourceInfoEEEEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang23NonTypeTemplateParmDeclENS_15TrailingObjectsIS3_JNSt3__14pairINS2_8QualTypeEPNS2_14TypeSourceInfoEEEEEES3_JSA_EEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang23NonTypeTemplateParmDeclENS_15TrailingObjectsIS3_JNSt3__14pairINS2_8QualTypeEPNS2_14TypeSourceInfoEEEEEESA_JEEE
N5clang20TemplateParmPositionE
N5clang24TemplateTemplateParmDeclE
N4llvm15TrailingObjectsIN5clang24TemplateTemplateParmDeclEJPNS1_21TemplateParameterListEEEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang24TemplateTemplateParmDeclENS_15TrailingObjectsIS3_JPNS2_21TemplateParameterListEEEES3_JS6_EEE
N4llvm25trailing_objects_internal19TrailingObjectsImplILi8EN5clang24TemplateTemplateParmDeclENS_15TrailingObjectsIS3_JPNS2_21TemplateParameterListEEEES6_JEEE
N5clang12TemplateDeclE
N5clang31ClassTemplateSpecializationDeclE
N5clang38ClassTemplatePartialSpecializationDeclE
N5clang29VarTemplateSpecializationDeclE
N5clang36VarTemplatePartialSpecializationDeclE
N5clang19BuiltinTemplateDeclE
N4llvm10FoldingSetIN5clang34FunctionTemplateSpecializationInfoEEE
N4llvm14FoldingSetImplIN5clang34FunctionTemplateSpecializationInfoEEE
N5clang20FunctionTemplateDeclE
N5clang24RedeclarableTemplateDeclE
N5clang12RedeclarableINS_24RedeclarableTemplateDeclEEE
N5clang20TemplateTypeParmDeclE
N4llvm10FoldingSetIN5clang38ClassTemplatePartialSpecializationDeclEEE
N4llvm14FoldingSetImplIN5clang38ClassTemplatePartialSpecializationDeclEEE
N4llvm10FoldingSetIN5clang31ClassTemplateSpecializationDeclEEE
N4llvm14FoldingSetImplIN5clang31ClassTemplateSpecializationDeclEEE
N5clang17ClassTemplateDeclE
N5clang18FriendTemplateDeclE
N5clang21TypeAliasTemplateDeclE
N5clang36ClassScopeFunctionSpecializationDeclE
N4llvm10FoldingSetIN5clang36VarTemplatePartialSpecializationDeclEEE
N4llvm14FoldingSetImplIN5clang36VarTemplatePartialSpecializationDeclEEE
N4llvm10FoldingSetIN5clang29VarTemplateSpecializationDeclEEE
N4llvm14FoldingSetImplIN5clang29VarTemplateSpecializationDeclEEE
N5clang15VarTemplateDeclE
N5clang18ArrayTypeTraitExprE
N5clang4ExprE
N5clang4StmtE
N5clang17ExternalASTSourceE
N4llvm14RefCountedBaseIN5clang17ExternalASTSourceEEE
N5clang21analyze_format_string19FormatStringHandlerE
N12_GLOBAL__N_123ItaniumNumberingContextE
N5clang22MangleNumberingContextE
N12_GLOBAL__N_113ItaniumCXXABIE
0123456789abcdefN12_GLOBAL__N_124ItaniumMangleContextImplE
N5clang20ItaniumMangleContextE
N5clang13MangleContextE
N12_GLOBAL__N_125MicrosoftNumberingContextE
N12_GLOBAL__N_115MicrosoftCXXABIE
N12_GLOBAL__N_120msvc_hashing_ostreamE
N12_GLOBAL__N_126MicrosoftMangleContextImplE
N5clang22MicrosoftMangleContextE
N12_GLOBAL__N_124OSLogFormatStringHandlerE
N4llvm13format_objectIJxEEE
N5clang13PrinterHelperE
N12_GLOBAL__N_124StmtProfilerWithPointersE
N12_GLOBAL__N_112StmtProfilerE
N5clang16ConstStmtVisitorIN12_GLOBAL__N_112StmtProfilerEvJEEE
N5clang15StmtVisitorBaseINS_14make_const_ptrEN12_GLOBAL__N_112StmtProfilerEvJEEE
N12_GLOBAL__N_127StmtProfilerWithoutPointersE
N5clang20ItaniumVTableContextE
N5clang22MicrosoftVTableContextE
N5clang28ExternalHeaderFileInfoSourceE
N5clang5LexerE
N5clang18PPChainedCallbacksE
N5clang11PPCallbacksE
N4llvm13format_objectIJiiiEEE
N4llvm13format_objectIJPKciiEEE
N5clang8PTHLexerE
N5clang10PTHManagerE
N5clang12PTHStatCacheE
N5clang13PragmaHandlerE
N5clang18EmptyPragmaHandlerE
N5clang15PragmaNamespaceE
N12_GLOBAL__N_125PragmaIncludeAliasHandlerE
N12_GLOBAL__N_120PragmaWarningHandlerE
N12_GLOBAL__N_119PragmaRegionHandlerE
N12_GLOBAL__N_123PragmaModuleLoadHandlerE
N12_GLOBAL__N_124PragmaModuleBuildHandlerE
N12_GLOBAL__N_122PragmaModuleEndHandlerE
N12_GLOBAL__N_124PragmaModuleBeginHandlerE
N12_GLOBAL__N_125PragmaModuleImportHandlerE
N12_GLOBAL__N_126PragmaAssumeNonNullHandlerE
N12_GLOBAL__N_129PragmaARCCFCodeAuditedHandlerE
N12_GLOBAL__N_118PragmaDebugHandlerE
N12_GLOBAL__N_123PragmaDiagnosticHandlerE
N12_GLOBAL__N_123PragmaDependencyHandlerE
N12_GLOBAL__N_125PragmaSystemHeaderHandlerE
N12_GLOBAL__N_119PragmaPoisonHandlerE
N12_GLOBAL__N_120PragmaMessageHandlerE
N12_GLOBAL__N_121PragmaPopMacroHandlerE
N12_GLOBAL__N_122PragmaPushMacroHandlerE
N12_GLOBAL__N_117PragmaMarkHandlerE
N12_GLOBAL__N_117PragmaOnceHandlerE
N5clang19PreprocessingRecordE
N5clang33ExternalPreprocessingRecordSourceE
N5clang12ModuleLoaderE
N5clang26ExternalPreprocessorSourceE
N5clang14CommentHandlerE
N5clang21CodeCompletionHandlerE
N4llvm10FoldingSetIN5clang11ModuleMacroEEE
N4llvm14FoldingSetImplIN5clang11ModuleMacroEEE
N5clang17PreprocessorLexerE
N4llvm6airlld6ActionE
N4llvm6airlld13LinkingActionE
N4llvm3air15LLVMDiagHandlerE
N4llvm6airlld25CreateStaticLibraryActionE
NSt3__120__shared_ptr_emplaceIN4llvm3air11MetalSourceENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN4llvm6ModuleEEE
NSt3__120__shared_ptr_pointerIPN4llvm6ModuleENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
ZN4llvm6airlld25CreateSharedLibraryAction14getPassManagerERKNS_6TripleEE3$_2
NSt3__110__function6__funcIZN4llvm6airlld25CreateSharedLibraryAction14getPassManagerERKNS2_6TripleEE3$_2NS_9allocatorIS8_EEFbRKNS2_11GlobalValueEEEE
N4llvm6airlld25CreateSharedLibraryActionE
ZN4llvm6airlld27CreateLoweringLibraryAction14getPassManagerERKNS_6TripleEE3$_5
NSt3__110__function6__funcIZN4llvm6airlld27CreateLoweringLibraryAction14getPassManagerERKNS2_6TripleEE3$_5NS_9allocatorIS8_EEFbRKNS2_11GlobalValueEEEE
N4llvm6airlld27CreateLoweringLibraryActionE
NSt3__117reference_wrapperIZN4llvm6airlld21CreateCILibraryAction9linkOwnerERNS1_6LinkerENS1_3air9ObjectPtrEE6ODRZerEE
NSt3__118__weak_result_typeIZN4llvm6airlld21CreateCILibraryAction9linkOwnerERNS1_6LinkerENS1_3air9ObjectPtrEE6ODRZerEE
NSt3__122__weak_result_type_impIZN4llvm6airlld21CreateCILibraryAction9linkOwnerERNS1_6LinkerENS1_3air9ObjectPtrEE6ODRZerLb0EEE
NSt3__135__maybe_derive_from_binary_functionIZN4llvm6airlld21CreateCILibraryAction9linkOwnerERNS1_6LinkerENS1_3air9ObjectPtrEE6ODRZerLb0EEE
NSt3__134__maybe_derive_from_unary_functionIZN4llvm6airlld21CreateCILibraryAction9linkOwnerERNS1_6LinkerENS1_3air9ObjectPtrEE6ODRZerLb0EEE
NSt3__110__function6__funcINS_17reference_wrapperIZN4llvm6airlld21CreateCILibraryAction9linkOwnerERNS3_6LinkerENS3_3air9ObjectPtrEE6ODRZerEENS_9allocatorISB_EEFvRNS3_6ModuleERKNS3_9StringSetINS3_15MallocAllocatorEEEEEE
N4llvm6airlld21CreateCILibraryActionE
ZZN4llvm6airlld22CreateExecutableAction17buildPassManagersERKNS_6TripleEENK3$_7clERNS_8OptionalINS_6legacy11PassManagerEEEEUlRKNS_11GlobalValueEE_
NSt3__110__function6__funcIZZN4llvm6airlld22CreateExecutableAction17buildPassManagersERKNS2_6TripleEENK3$_7clERNS2_8OptionalINS2_6legacy11PassManagerEEEEUlRKNS2_11GlobalValueEE_NS_9allocatorISH_EEFbSG_EEE
N4llvm6airlld22CreateExecutableActionE
N4llvm6airlld17WriteObjectActionE
N5clang18DiagnosticConsumerE
N5clang28ForwardingDiagnosticConsumerE
#pragma-messages
#warnings
CFString-literal
IndependentClass-attribute
NSObject-attribute
absolute-value
abstract-final-class
abstract-vbase-init
address
address-of-packed-member
address-of-temporary
aggregate-return
alloca-with-align-alignof
ambiguous-delete
ambiguous-ellipsis
ambiguous-macro
ambiguous-member-template
analyzer-incompatible-plugin
anonymous-pack-parens
apinotes
arc%arc-bridge-casts-disallowed-in-nonarc
arc-maybe-repeated-use-of-weak
arc-non-pod-memaccess
arc-performSelector-leaks
arc-repeated-use-of-weak
arc-retain-cycles
arc-unsafe-retained-assign
argument-outside-rangearray-bounds
array-bounds-pointer-arithmetic
asm-ignored-qualifier
asm-operand-widths
assign-enum
assume
at-protocol
atimport-in-framework-header
atomic-alignment
atomic-implicit-seq-cst
atomic-memory-ordering
atomic-properties*atomic-property-with-user-defined-accessor
attribute-packed-for-bitfield
attributes
auto-disable-vptr-sanitizer
auto-import
auto-storage-class
auto-var-idavailability
backend-plugin
backslash-newline-escape
bad-function-cast
binary-literal
bind-to-temporary-copy
binding-in-condition
bitfield-constant-conversion
bitfield-enum-conversion
bitfield-width
bitwise-op-parentheses
block-capture-autoreleasing
bool-conversion
bool-conversions
braced-scalar-init
bridge-cast
builtin-macro-redefined
builtin-memcpy-chk-size
builtin-requires-header
c++-compatc++0x-compat
c++0x-extensions
c++0x-narrowingc++11-compat(c++11-compat-deprecated-writable-strings
c++11-compat-pedantic*c++11-compat-reserved-user-defined-literal
c++11-extensions
c++11-extra-semi
c++11-inline-namespace
c++11-long-long
c++11-narrowing
c++14-binary-literalc++14-compat
c++14-compat-pedantic
c++14-extensionsc++17-compat
c++17-compat-mangling
c++17-compat-pedantic
c++17-extensions
c++1y-extensionsc++1z-compat
c++1z-compat-mangling
c++1z-extensionsc++2a-compat
c++2a-compat-pedantic
c++2a-extensions
c++98-c++11-c++14-c++17-compat'c++98-c++11-c++14-c++17-compat-pedantic
c++98-c++11-c++14-compat!c++98-c++11-c++14-compat-pedantic
c++98-c++11-compat!c++98-c++11-compat-binary-literal
c++98-c++11-compat-pedanticc++98-compat#c++98-compat-bind-to-temporary-copy
c++98-compat-extra-semi%c++98-compat-local-type-template-args
c++98-compat-pedantic'c++98-compat-unnamed-type-template-args
c11-extensions
c99-compat
c99-extensions
cast-align
cast-calling-convention
cast-of-sel-type
cast-qual
cast-qual-unrelated
char-align
char-subscriptsclang-cl-pch
class-varargs
comma
comment
comments
compare-distinct-pointer-types
complex-component-init
conditional-type-mismatch
conditional-uninitialized
config-macros
constant-conversion
constant-logical-operand
constexpr-not-const
consumed
conversion
conversion-null
coroutine%coroutine-missing-unhandled-exception
covered-switch-default
cstring-format-directive
ctor-dtor-privacy
cuda-compat
custom-atomic-properties
dangling
dangling-else
dangling-field
dangling-initializer-list
darwin-sdk-settings
date-time
dealloc-in-category
debug-compression-unavailable
declaration-after-statement
delegating-ctor-cycles
delete-incomplete
delete-non-virtual-dtor
deprecated
deprecated-attributes
deprecated-declarations!deprecated-dynamic-exception-spec
deprecated-implementations
deprecated-increment-bool
deprecated-objc-isa-usage%deprecated-objc-pointer-introspection5deprecated-objc-pointer-introspection-performSelector
deprecated-register
deprecated-this-capture
deprecated-writable-strings
direct-ivar-access
disabled-macro-expansion
disabled-optimizationdiscard-qual
distributed-object-modifiers
div-by-zero
division-by-zero
dll-attribute-on-redeclaration%dllexport-explicit-instantiation-decl
dllimport-static-field-def
documentation
documentation-deprecated-sync
documentation-html
documentation-pedantic
documentation-unknown-command
dollar-in-identifier-extension
double-promotion
duplicate-decl-specifier
duplicate-enum
duplicate-method-arg
duplicate-method-match
duplicate-protocol
dynamic-class-memaccess
dynamic-exception-spec
effc++
embedded-directive
empty-body
empty-decomposition
empty-translation-unit
encode-typeendif-labelsenum-compare
enum-compare-switch
enum-conversion
enum-too-large
exceptions
exit-time-destructors
expansion-to-defined
experimental-isel
explicit-initialize-call
explicit-ownership-type
extended-offsetof
extern-c-compat
extern-initializer
extra
extra-qualification
extra-semiextra-tokens
fallback
flag-enum
flexible-array-extensions
float-conversion
float-equal
float-overflow-conversion
float-zero-conversion
for-loop-analysis
format
format-extra-args
format-invalid-specifier
format-non-iso
format-nonliteral
format-pedantic
format-security
format-y2k
format-zero-length
format=2
four-char-constants
frame-larger-than=%framework-include-private-from-public
function-def-in-objc-container
function-multiversion
future-compat
gcc-compat
global-constructors
gnu-alignof-expression
gnu-anonymous-struct
gnu-array-member-paren-init
gnu-auto-type
gnu-binary-literal
gnu-case-range
gnu-complex-integer gnu-compound-literal-initializer
gnu-conditional-omitted-operand
gnu-designator
gnu-empty-initializer
gnu-empty-struct
gnu-flexible-array-initializer
gnu-flexible-array-union-member
gnu-folding-constant
gnu-imaginary-constant
gnu-include-next
gnu-label-as-value
gnu-redeclared-enum
gnu-statement-expression
gnu-static-float-init$gnu-string-literal-operator-template
gnu-union-cast"gnu-variable-sized-type-not-at-end
gnu-zero-line-directive!gnu-zero-variadic-macro-argumentsheader-guard
header-hygiene
idiomatic-parentheses
ignored-attributes
ignored-optimization-argument
ignored-pragma-intrinsic
ignored-pragma-optimize
ignored-pragmas
ignored-qualifiers
implicit
implicit-atomic-properties*implicit-conversion-floating-point-to-bool implicit-exception-spec-mismatch
implicit-fallthrough!implicit-fallthrough-per-function
implicit-function-declarationimplicit-int
implicit-retain-self
implicitly-unsigned-literal
import&import-preprocessor-directive-pedantic
inaccessible-base
include-next-absolute-path
include-next-outside-header
incompatible-exception-spec#incompatible-function-pointer-types"incompatible-library-redeclaration
incompatible-ms-struct
incompatible-pointer-types.incompatible-pointer-types-discards-qualifiers
incompatible-property-type
incompatible-sysroot'incomplete-framework-module-declaration
incomplete-implementation
incomplete-module
incomplete-umbrella
inconsistent-dllimport(inconsistent-missing-destructor-override
inconsistent-missing-override
increment-bool
index-store
infinite-recursion
init-self
initializer-overrides
injected-class-name
inline
inline-asm
inline-new-delete"instantiation-after-specialization
int-conversion
int-conversions
int-to-pointer-cast
int-to-void-pointer-cast
integer-overflow
invalid-command-line-argument
invalid-constexpr
invalid-iboutlet&invalid-initializer-from-system-header
invalid-ios-deployment-target
invalid-noreturn
invalid-offsetof invalid-or-nonexistent-directory
invalid-partial-specialization
invalid-pch
invalid-pp-token
invalid-source-encoding
invalid-token-paste
jump-seh-finally
keyword-compat
keyword-macro
knr-promoted-parameter
language-extension-token
large-by-value-copy
liblto
literal-conversion
literal-range
local-type-template-args
logical-not-parentheses
logical-op-parentheses
long-long
loop-analysis
macro-redefined
main
main-return-type
malformed-warning-check
many-braces-around-scalar-init
max-unsigned-zero
memset-transposed-args
memsize-comparison
metal-addr-spaces
method-signatures
microsoft
microsoft-anon-tag
microsoft-cast
microsoft-charize
microsoft-comment-paste
microsoft-const-init
microsoft-cpp-macro"microsoft-default-arg-redefinition
microsoft-end-of-file microsoft-enum-forward-reference
microsoft-enum-value
microsoft-exception-spec
microsoft-exists#microsoft-explicit-constructor-call
microsoft-extra-qualification
microsoft-fixed-enum
microsoft-flexible-array
microsoft-goto
microsoft-inaccessible-base
microsoft-include
microsoft-mutable-reference
microsoft-pure-definition
microsoft-redeclare-static
microsoft-sealed
microsoft-template microsoft-union-member-reference
microsoft-unqualified-friend
microsoft-using-decl
microsoft-void-pseudo-dtor
mismatched-new-delete
mismatched-parameter-types
mismatched-return-types
mismatched-tags
missing-braces
missing-declarations
missing-exception-spec
missing-field-initializers
missing-format-attribute
missing-include-dirs
missing-method-return-type
missing-noescape
missing-noreturn
missing-prototype-for-cc
missing-prototypes
missing-selector-name
missing-sysroot
missing-variable-declarationsmodule-build
module-conflict
module-file-config-mismatch
module-file-extension
module-import-in-extern-c"modules-ambiguous-internal-linkage
modules-import-nested-redundant
most
movemsvc-include
msvc-not-found
mtl-shader-return-type
multichar
multiple-move-vbase
narrowing
nested-anon-types
nested-externs
new-returns-null
newline-eof
noexcept-type
non-gcc
non-literal-null-conversion'non-modular-include-in-framework-module
non-modular-include-in-module
non-pod-varargs
non-virtual-dtor
nonnull
nonportable-cfstrings
nonportable-include-path!nonportable-private-apinotes-path(nonportable-private-system-apinotes-path
nonportable-system-include-path!nonportable-vector-initialization
nontrivial-memaccess
nsconsumed-mismatch
nsreturns-mismatch
null-arithmetic
null-character
null-conversion
null-dereference
null-pointer-arithmetic
nullability
nullability-completeness"nullability-completeness-on-arrays
nullability-declspec
nullability-extension#nullability-inferred-on-nested-type
nullable-to-nonnull-conversion+objc-autosynthesis-property-ivar-name-match
objc-circular-container
objc-cocoa-api
objc-designated-initializers
objc-flexible-array
objc-forward-class-redefinition
objc-interface-ivars
objc-literal-compare
objc-literal-conversion
objc-macro-redefinition
objc-messaging-id
objc-method-access
objc-missing-property-synthesis
objc-missing-super-calls
objc-multiple-method-names"objc-noncopy-retain-block-property
objc-nonunified-exceptions
objc-property-implementation
objc-property-implicit-mismatch*objc-property-matches-cocoa-ownership-rule
objc-property-no-attribute
objc-property-synthesis#objc-protocol-method-implementation objc-protocol-property-synthesis
objc-protocol-qualifiers"objc-readonly-with-setter-property
objc-redundant-api-use
objc-redundant-literal-use
objc-root-class
objc-string-compare
objc-string-concatenation
objc-unsafe-perform-selector
objc-weak-compat
old-style-cast
old-style-definition
opencl-unsupported-rgba
openmp-clauses
openmp-loop-form
openmp-target
option-ignored!ordered-compare-function-pointers
out-of-line-declaration
out-of-scope-functionover-aligned
overflow
overlength-strings
overloaded-shift-op-parentheses
overloaded-virtual
override-module
overriding-method-mismatch
overriding-t-option
packed
padded
parentheses
parentheses-equality
partial-availability
pass
pass-analysis
pass-failed
pass-missed
pch-date-time
pedantic
pedantic-core-features
pessimizing-move
pointer-arith
pointer-bool-conversionpointer-sign
pointer-to-int-cast
pointer-type-mismatch potentially-evaluated-expression
pragma-clang-attribute
pragma-once-outside-header
pragma-pack
pragma-pack-suspicious-include#pragma-system-header-outside-header
pragmas&predefined-identifier-outside-function
private-extern
private-header
private-module
profile-instr-missing
profile-instr-out-of-date
profile-instr-unprofiled
property-access-dot-syntax
property-attribute-mismatch
protocol%protocol-property-synthesis-ambiguity
ptrauth-null-pointers
qualified-void-return-type"quoted-include-in-framework-header
range-loop-analysis
readonly-iboutlet-property
receiver-expr
receiver-forward-class
redeclared-class-member
redundant-decls
redundant-move
redundant-parens
register
reinterpret-base-class
remark-backend-plugin
reorder
requires-super-attribute
reserved-id-macro
reserved-user-defined-literal
retained-language-linkage
return-stack-address
return-std-move
return-std-move-in-c++11
return-type
return-type-c-linkage
sanitize-address
section
selector
selector-type-mismatch
self-assign
self-assign-field
self-assign-overloaded
self-move
semicolon-before-method-body
sentinel
sequence-point
serialized-diagnostics
shadow
shadow-allshadow-field
shadow-field-in-constructor$shadow-field-in-constructor-modified
shadow-ivar
shadow-uncaptured-local
shift-count-negative
shift-count-overflow
shift-negative-value
shift-op-parentheses
shift-overflow
shift-sign-overflow
shorten-64-to-32sign-compare
sign-conversion
sign-promo
signed-enum-bitfield
sizeof-array-argument
sizeof-array-decay
sizeof-pointer-memaccess
slash-u-filename
sometimes-uninitialized
source-uses-openmp
spir-compat
stack-protector
static-float-init
static-in-inline$static-inline-explicit-instantiation
static-local-in-inline
static-self-init
stdlibcxx-not-found
strict-aliasing
strict-aliasing=0
strict-aliasing=1
strict-aliasing=2
strict-overflow
strict-overflow=0
strict-overflow=1
strict-overflow=2
strict-overflow=3
strict-overflow=4
strict-overflow=5
strict-prototypes
strict-selector-match
string-compare
string-conversion
string-plus-char
string-plus-int
strlcpy-strlcat-sizestrncat-size
super-class-method-mismatch
suspicious-bzero
suspicious-memaccess
swift-name-attribute
swift-newtype-attribute
switch
switch-bool
switch-default
switch-enum%sync-fetch-and-nand-semantics-changed
synth
tautological-compare
tautological-constant-compare&tautological-constant-in-range-compare*tautological-constant-out-of-range-compare
tautological-overlap-compare
tautological-pointer-compare
tautological-type-limit-compare
tautological-undefined-compare'tautological-unsigned-enum-zero-compare"tautological-unsigned-zero-compare$tentative-definition-incomplete-type
thread-safety
thread-safety-analysis
thread-safety-attributes
thread-safety-beta
thread-safety-negative
thread-safety-precise
thread-safety-reference
thread-safety-verbose
trigraphs
type-limits
type-safety
typedef-redefinition
typename-missing
unable-to-open-stats-file
unavailable-declarations
undeclared-selector
undef
undefined-bool-conversion
undefined-func-template
undefined-inline
undefined-internal
undefined-internal-type
undefined-reinterpret-cast
undefined-var-template
unevaluated-expression
unguarded-availability
unguarded-availability-new
unicode
unicode-homoglyph
unicode-whitespace
uninitialized
unknown-argument
unknown-attributes
unknown-escape-sequence
unknown-pragmas
unknown-sanitizers
unknown-warning-option
unnamed-type-template-args
unneeded-internal-declaration
unneeded-member-function
unreachable-code
unreachable-code-aggressive
unreachable-code-break
unreachable-code-loop-increment
unreachable-code-return
unsequenced
unsupported-abs
unsupported-availability-guard
unsupported-cb#unsupported-dll-base-class-template
unsupported-friend
unsupported-gpopt
unsupported-nan
unsupported-target-opt
unsupported-visibility
unusable-partial-specialization
unused
unused-argument
unused-command-line-argument
unused-comparison
unused-const-variable
unused-exception-parameter
unused-function
unused-getter-return-valueunused-label
unused-lambda-capture
unused-local-typedef
unused-local-typedefs
unused-macros
unused-member-function
unused-parameter
unused-private-field
unused-property-ivar
unused-result
unused-templateunused-value
unused-variable
unused-volatile-lvalue
used-but-marked-unused
user-defined-literals
user-defined-warnings
varargs
variadic-macros
vec-elem-size
vector-conversion
vector-conversionsvexing-parse
visibility
vla-extension
void-ptr-dereference
volatile-register-var
weak-template-vtablesweak-vtables
writable-strings
write-strings
zero-as-null-pointer-constant
zero-length-array
N5clang19FileSystemStatCacheE
N5clang18IdentifierIteratorE
N12_GLOBAL__N_119EmptyLookupIteratorE
N5clang20IdentifierInfoLookupE
N4llvm10FoldingSetIN5clang20MultiKeywordSelectorEEE
N4llvm14FoldingSetImplIN5clang20MultiKeywordSelectorEEE
ZN5clang16VisibleModuleSet10setVisibleEPNS_6ModuleENS_14SourceLocationEN4llvm12function_refIFvS2_EEENS5_IFvNS4_8ArrayRefIS2_EES2_NS4_9StringRefEEEEE3$_2
NSt3__110__function6__funcIZN5clang16VisibleModuleSet10setVisibleEPNS2_6ModuleENS2_14SourceLocationEN4llvm12function_refIFvS5_EEENS8_IFvNS7_8ArrayRefIS5_EES5_NS7_9StringRefEEEEE3$_2NS_9allocatorISG_EEFvZNS3_10setVisibleES5_S6_SA_SF_E8VisitingEEE
NSt3__110__function6__baseIFvZN5clang16VisibleModuleSet10setVisibleEPNS2_6ModuleENS2_14SourceLocationEN4llvm12function_refIFvS5_EEENS8_IFvNS7_8ArrayRefIS5_EES5_NS7_9StringRefEEEEE8VisitingEEE
N5clang19PrettyStackTraceLocE
N5clang23ExternalSLocEntrySourceE
N5clang10TargetInfoE
N4llvm14RefCountedBaseIN5clang10TargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_24RenderScript64TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_24RenderScript64TargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_24RenderScript32TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_24RenderScript32TargetInfoEEE
N5clang7targets23WebAssemblyOSTargetInfoINS0_23WebAssembly64TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_23WebAssembly64TargetInfoEEE
N5clang7targets23WebAssemblyOSTargetInfoINS0_23WebAssembly32TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_23WebAssembly32TargetInfoEEE
N5clang7targets15PS4OSTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets14NaClTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets15HaikuTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets25MicrosoftX86_64TargetInfoE
N5clang7targets23WindowsX86_64TargetInfoE
N5clang7targets17WindowsTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets21MinGWX86_64TargetInfoE
N5clang7targets22CygwinX86_64TargetInfoE
N5clang7targets17SolarisTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets18KFreeBSDTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets17FuchsiaTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets17FreeBSDTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets23OpenBSDX86_64TargetInfoE
N5clang7targets17OpenBSDTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets16NetBSDTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets22DragonFlyBSDTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets23AndroidX86_64TargetInfoE
N5clang7targets15LinuxTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets18CloudABITargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets16AnanasTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets16DarwinTargetInfoINS0_16X86_64TargetInfoEEE
N5clang7targets22DarwinX86_64TargetInfoE
N5clang7targets19MCUX86_32TargetInfoE
N5clang7targets14NaClTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets21RTEMSX86_32TargetInfoE
N5clang7targets21HaikuX86_32TargetInfoE
N5clang7targets15HaikuTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets25MicrosoftX86_32TargetInfoE
N5clang7targets23WindowsX86_32TargetInfoE
N5clang7targets17WindowsTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets21MinGWX86_32TargetInfoE
N5clang7targets22CygwinX86_32TargetInfoE
N5clang7targets17SolarisTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets15MinixTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets18KFreeBSDTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets17FreeBSDTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets21OpenBSDI386TargetInfoE
N5clang7targets17OpenBSDTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets20NetBSDI386TargetInfoE
N5clang7targets16NetBSDTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets22DragonFlyBSDTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets23AndroidX86_32TargetInfoE
N5clang7targets15LinuxTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets18CloudABITargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets16AnanasTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets16DarwinTargetInfoINS0_16X86_32TargetInfoEEE
N5clang7targets20DarwinI386TargetInfoE
N5clang7targets15LinuxTargetInfoINS0_17SystemZTargetInfoEEE
N5clang7targets12OSTargetInfoINS0_17SystemZTargetInfoEEE
N5clang7targets17FreeBSDTargetInfoINS0_17SparcV9TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_17SparcV9TargetInfoEEE
N5clang7targets17OpenBSDTargetInfoINS0_17SparcV9TargetInfoEEE
N5clang7targets16NetBSDTargetInfoINS0_17SparcV9TargetInfoEEE
N5clang7targets17SolarisTargetInfoINS0_17SparcV9TargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_17SparcV9TargetInfoEEE
N5clang7targets15RTEMSTargetInfoINS0_19SparcV8elTargetInfoEEE
N5clang7targets12OSTargetInfoINS0_19SparcV8elTargetInfoEEE
N5clang7targets19SparcV8elTargetInfoE
N5clang7targets17OpenBSDTargetInfoINS0_19SparcV8elTargetInfoEEE
N5clang7targets16NetBSDTargetInfoINS0_19SparcV8elTargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_19SparcV8elTargetInfoEEE
N5clang7targets15RTEMSTargetInfoINS0_17SparcV8TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_17SparcV8TargetInfoEEE
N5clang7targets17OpenBSDTargetInfoINS0_17SparcV8TargetInfoEEE
N5clang7targets16NetBSDTargetInfoINS0_17SparcV8TargetInfoEEE
N5clang7targets17SolarisTargetInfoINS0_17SparcV8TargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_17SparcV8TargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_17RISCV64TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_17RISCV64TargetInfoEEE
N5clang7targets17RISCV64TargetInfoE
N5clang7targets15LinuxTargetInfoINS0_17RISCV32TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_17RISCV32TargetInfoEEE
N5clang7targets17RISCV32TargetInfoE
N5clang7targets16NetBSDTargetInfoINS0_15PPC64TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_15PPC64TargetInfoEEE
N5clang7targets15PPC64TargetInfoE
N5clang7targets17FreeBSDTargetInfoINS0_15PPC64TargetInfoEEE
N5clang7targets16PS3PPUTargetInfoINS0_15PPC64TargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_15PPC64TargetInfoEEE
N5clang7targets16DarwinTargetInfoINS0_15PPC64TargetInfoEEE
N5clang7targets21DarwinPPC64TargetInfoE
N5clang7targets15RTEMSTargetInfoINS0_15PPC32TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_15PPC32TargetInfoEEE
N5clang7targets15PPC32TargetInfoE
N5clang7targets17OpenBSDTargetInfoINS0_15PPC32TargetInfoEEE
N5clang7targets16NetBSDTargetInfoINS0_15PPC32TargetInfoEEE
N5clang7targets17FreeBSDTargetInfoINS0_15PPC32TargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_15PPC32TargetInfoEEE
N5clang7targets16DarwinTargetInfoINS0_15PPC32TargetInfoEEE
N5clang7targets21DarwinPPC32TargetInfoE
N5clang7targets14NaClTargetInfoINS0_15PNaClTargetInfoEEE
N5clang7targets12OSTargetInfoINS0_15PNaClTargetInfoEEE
N5clang7targets17OpenBSDTargetInfoINS0_14MipsTargetInfoEEE
N5clang7targets12OSTargetInfoINS0_14MipsTargetInfoEEE
N5clang7targets14NaClTargetInfoINS0_20NaClMips32TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_20NaClMips32TargetInfoEEE
N5clang7targets20NaClMips32TargetInfoE
N5clang7targets16NetBSDTargetInfoINS0_14MipsTargetInfoEEE
N5clang7targets17FreeBSDTargetInfoINS0_14MipsTargetInfoEEE
N5clang7targets15RTEMSTargetInfoINS0_14MipsTargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_14MipsTargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_15Nios2TargetInfoEEE
N5clang7targets12OSTargetInfoINS0_15Nios2TargetInfoEEE
N5clang7targets14NaClTargetInfoINS0_15ARMbeTargetInfoEEE
N5clang7targets12OSTargetInfoINS0_15ARMbeTargetInfoEEE
N5clang7targets15RTEMSTargetInfoINS0_15ARMbeTargetInfoEEE
N5clang7targets17OpenBSDTargetInfoINS0_15ARMbeTargetInfoEEE
N5clang7targets16NetBSDTargetInfoINS0_15ARMbeTargetInfoEEE
N5clang7targets17FreeBSDTargetInfoINS0_15ARMbeTargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_15ARMbeTargetInfoEEE
N5clang7targets14NaClTargetInfoINS0_15ARMleTargetInfoEEE
N5clang7targets12OSTargetInfoINS0_15ARMleTargetInfoEEE
N5clang7targets15RTEMSTargetInfoINS0_15ARMleTargetInfoEEE
N5clang7targets17OpenBSDTargetInfoINS0_15ARMleTargetInfoEEE
N5clang7targets16NetBSDTargetInfoINS0_15ARMleTargetInfoEEE
N5clang7targets17FreeBSDTargetInfoINS0_15ARMleTargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_15ARMleTargetInfoEEE
N5clang7targets18CloudABITargetInfoINS0_15ARMleTargetInfoEEE
N5clang7targets16NetBSDTargetInfoINS0_19AArch64beTargetInfoEEE
N5clang7targets12OSTargetInfoINS0_19AArch64beTargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_19AArch64beTargetInfoEEE
N5clang7targets17FuchsiaTargetInfoINS0_19AArch64beTargetInfoEEE
N5clang7targets17FreeBSDTargetInfoINS0_19AArch64beTargetInfoEEE
N5clang7targets17OpenBSDTargetInfoINS0_19AArch64leTargetInfoEEE
N5clang7targets12OSTargetInfoINS0_19AArch64leTargetInfoEEE
N5clang7targets16NetBSDTargetInfoINS0_19AArch64leTargetInfoEEE
N5clang7targets15LinuxTargetInfoINS0_19AArch64leTargetInfoEEE
N5clang7targets17FuchsiaTargetInfoINS0_19AArch64leTargetInfoEEE
N5clang7targets17FreeBSDTargetInfoINS0_19AArch64leTargetInfoEEE
N5clang7targets18CloudABITargetInfoINS0_19AArch64leTargetInfoEEE
N5clang7targets17AArch64TargetInfoE
N5clang7targets19AArch64leTargetInfoE
N5clang7targets19AArch64beTargetInfoE
N5clang7targets22WindowsARM64TargetInfoE
N5clang7targets17WindowsTargetInfoINS0_19AArch64leTargetInfoEEE
N5clang7targets24MicrosoftARM64TargetInfoE
N5clang7targets16DarwinTargetInfoINS0_19AArch64leTargetInfoEEE
N5clang7targets23DarwinAArch64TargetInfoE
N5clang7targets24RenderScript64TargetInfoE
N5clang7targets20MinGWARM64TargetInfoE
N4llvm13format_objectIJjjjEEE
N5clang7targets13AIRTargetInfoE
N5clang7targets16DarwinTargetInfoINS0_13AIRTargetInfoEEE
N5clang7targets12OSTargetInfoINS0_13AIRTargetInfoEEE
N5clang7targets21DarwinAIR64TargetInfoE
N5clang7targets21DarwinAIR32TargetInfoE
N5clang7targets16AMDGPUTargetInfoE
N5clang7targets13ARMTargetInfoE
N5clang7targets15ARMleTargetInfoE
N5clang7targets15ARMbeTargetInfoE
N5clang7targets20WindowsARMTargetInfoE
N5clang7targets17WindowsTargetInfoINS0_15ARMleTargetInfoEEE
N5clang7targets29ItaniumWindowsARMleTargetInfoE
N5clang7targets24MicrosoftARMleTargetInfoE
N5clang7targets18MinGWARMTargetInfoE
N5clang7targets19CygwinARMTargetInfoE
N5clang7targets16DarwinTargetInfoINS0_15ARMleTargetInfoEEE
N5clang7targets19DarwinARMTargetInfoE
N5clang7targets24RenderScript32TargetInfoE
N5clang7targets13AVRTargetInfoE
N5clang7targets13BPFTargetInfoE
N5clang7targets17HexagonTargetInfoE
N5clang7targets15LanaiTargetInfoE
N5clang7targets14Le64TargetInfoE
N5clang7targets16MSP430TargetInfoE
N5clang7targets14MipsTargetInfoE
N5clang7targets15NVPTXTargetInfoE
N5clang7targets15Nios2TargetInfoE
N5clang7targets15PNaClTargetInfoE
N5clang7targets13PPCTargetInfoE
N5clang7targets15RISCVTargetInfoE
N5clang7targets14SPIRTargetInfoE
N5clang7targets16SPIR32TargetInfoE
N5clang7targets16SPIR64TargetInfoE
N5clang7targets15SparcTargetInfoE
N5clang7targets17SparcV8TargetInfoE
N5clang7targets17SparcV9TargetInfoE
N5clang7targets17SystemZTargetInfoE
N5clang7targets13TCETargetInfoE
N5clang7targets15TCELETargetInfoE
N5clang7targets21WebAssemblyTargetInfoE
N5clang7targets23WebAssembly32TargetInfoE
N5clang7targets23WebAssembly64TargetInfoE
N5clang7targets13X86TargetInfoE
N5clang7targets16X86_32TargetInfoE
N5clang7targets16X86_64TargetInfoE
N5clang7targets15XCoreTargetInfoE
N5clang3vfs6detail11DirIterImplE
N5clang3vfs10FileSystemE
N4llvm24ThreadSafeRefCountedBaseIN5clang3vfs10FileSystemEEE
N5clang3vfs4FileE
N12_GLOBAL__N_113RealFSDirIterE
NSt3__120__shared_ptr_emplaceIN12_GLOBAL__N_113RealFSDirIterENS_9allocatorIS2_EEEE
N12_GLOBAL__N_18RealFileE
N12_GLOBAL__N_114RealFileSystemE
N12_GLOBAL__N_120RedirectingFileEntryE
N12_GLOBAL__N_15EntryE
N12_GLOBAL__N_125RedirectingDirectoryEntryE
N12_GLOBAL__N_122VFSFromYamlDirIterImplE
NSt3__120__shared_ptr_emplaceIN12_GLOBAL__N_122VFSFromYamlDirIterImplENS_9allocatorIS2_EEEE
N12_GLOBAL__N_119FileWithFixedStatusE
N12_GLOBAL__N_121RedirectingFileSystemE
NSt3__120__shared_ptr_emplaceINS_5stackIN5clang3vfs18directory_iteratorENS_6vectorIS4_NS_9allocatorIS4_EEEEEENS6_IS9_EEEE
N4llvm13format_objectIJNS_3sys2fs5permsEEEE
N8metallib11MTLMetadataE
N8metallib12DEPFMetadataE
N8metallib12DEBIMetadataE
llvm.metadata
N8metallib9TypeMapTyE
-triple
-ffast-math
-frelaxed-math
-ftracepoint-instrument
-fno-tracepoint-instrument-line-markers
-ftexture-write-rounding-mode=rte
-ftexture-write-rounding-mode=rtz
-ftexture-write-rounding-mode=native
-menable-no-infs
-menable-no-nans
-menable-unsafe-fp-math
-fno-signed-zeros
-mreassociate
-freciprocal-math
-fno-trapping-math
-ffp-contract=fast
-ffinite-math-only
-dwarf-column-info
-debug-info-kind=standalone
-fno-debuginfo-use-presumed-location
-Wuninitialized
-Wunused-variable
-Wunused-value
-Wunused-function
-Wsign-compare
-Wreturn-type
-Wmissing-braces
-Wmtl-shader-return-type
-Werror=mtl-shader-return-type
-target-abi
-finclude-default-header
-fmodules
-fmodule-map-file=
metal_stdlib
.fast-relaxed-math
.no-fast-math
.maccatalyst
.ios
-relocatable-pch
program_source
31001.43
SIMULATOR_ROOT
program_object
GPUCompiler
program_object_
-macos_version_min
-maccatalyst_version_min
-ios_simulator_version_min
-ios_version_min
-tvos_simulator_version_min
-tvos_version_min
-watchos_simulator_version_min
-watchos_version_min
-sysroot
darwin
_osx_air
-no_write
program_binary
codegen
Code Generation Time
-debug-pass
-limit-float-precision
AIR_DISABLE_BEST_EFFORT_POSITION_INVARIANCE
ThinLTO
Per-function optimization
Per-module optimization passes
Code generation
backend data layout '%0' does not match expected target description '%1'
llvm.embedded.module
llvm.cmdline
__LLVM,__bitcode
.llvmbc
__LLVM,__cmdline
.llvmcmd
.atomictmp
cmpxchg.bool
__atomic_fetch_umin
__atomic_fetch_umax
atomic.scope.continue
opencl_workgroup
opencl_device
opencl_allsvmdevices
opencl_subgroup
cmpxchg.strong
cmxchg.weak
cmpxchg.continue
monotonic_fail
acquire_fail
seqcst_fail
cmpxchg.store_expected
atomic-temp
atomic_bitfield_base
atomic-load
atomic_exit
struct.__block_descriptor
block.isa
block.flags
block.reserved
block.invoke
block.descriptor
block.size
block.align
block.captured-this.addr
block.captured
block.capture.addr
byref.capture
block.captured_block
__block_descriptor_tmp
__copy_helper_block_
__destroy_helper_block_
block.source
block.dest
blockcopy.src
_NSConcreteStackBlock
.block_descriptor
__block_literal_global
block.addr
block.captured-this
block.captured-const
_NSConcreteGlobalBlock
struct.__block_literal_generic
block.literal
byref.addr
forwarding
struct.__block_byref_
__Block_byref_object_dispose_
__Block_byref_object_copy_
dest-object
src-object
byref.isa
byref.forwarding
 Inline flag for BYREF variable layout (%d):
 BLOCK_BYREF_HAS_COPY_DISPOSE
byref.flags
byref.size
byref.copyHelper
byref.disposeHelper
byref.layout
 BLOCK_BYREF_LAYOUT_EXTENDED
 BLOCK_BYREF_LAYOUT_NON_OBJECT
 BLOCK_BYREF_LAYOUT_STRONG
 BLOCK_BYREF_LAYOUT_WEAK
 BLOCK_BYREF_LAYOUT_UNRETAINED
bitscan_end
bitscan_result
bitscan_not_zero
__fastfail call for this architecture
{r0}
udf #251
int $$0x29
__os_log_helper
summary
numArgs
argDescriptor
argSize
argData
argDataCast
abscond
cast
expval
unreachable.cont
cmpinf
isinf
iseq
isnormal
fpclassify_end
fpclassify_result
fpclassify_not_zero
fpclassify_not_nan
fpclassify_not_inf
wmemcmp.gt
wmemcmp.lt
wmemcmp.next
wmemcmp.exit
builtin_eh_return.cont
extend.cast
extend.sext
extend.zext
longjmp.cont
atomic.continue
acquire
acqrel
seqcst
was_set
non-UTF16 __annotation argument
lock 
 $2, ($1)
setc ${0:b}
=r,r,r,~{cc},~{flags},~{fpsr}
bittest.byteidx
bittest.byteaddr
bittest.mask
bittest.byte
bittest.shr
bittest.res
__read_pipe_2
__write_pipe_2
__read_pipe_4
__write_pipe_4
__sub_group_reserve_write_pipe
__sub_group_commit_write_pipe
__get_pipe_num_packets
__get_pipe_max_packets
__enqueue_kernel_basic
__enqueue_kernel_varargs
__enqueue_kernel_basic_events
__enqueue_kernel_events_varargs
__get_kernel_work_group_size_impl
__get_kernel_preferred_work_group_size_multiple_impl
__get_kernel_max_sub_group_size_for_ndrange_impl
__get_kernel_sub_group_count_for_ndrange_impl
ap.val
builtin function
tabort
parameter should have type "local float*"
parameter should have type "float"
stmxcsr
vpmovm2
extract
widen
blend
pshuflw
pshufhw
permil
shufp
perm
palignr
valign
shuf
vperm
pslldq
psrldq
pswapd
int $$0x2c
__cpu_indicator_init
__cpu_model
rbit
ldxp
ldxr
stxp
stxr
vabs
fcvt
facg
fcvth_n
v2i64
lane0
lane1
vpaddd
v2f64
v2f32
vceqz
vcgez
vclez
vcgtz
vcltz
vceqzd
vcmpd
vceqd
vtstd
vset_lane
vget_lane
vgetq_lane
vdups_lane
vdupd_lane
vaddh
vsubh
vmulh
vdivh
vaddd
vsubd
vqdmlXl
vqshlu_n
vqshl_n
vrshr_n
shld_n
shrd_n
lane
vtbl1
vtbl2
vtbx
vtbx1
vtbx2
vtbl3
vtbl4
vtbx3
vtbx4
vbsl
fmla
vmull
vmax
vmin
vabd
vpadal
vpmin
vpmax
vminnm
vmaxnm
vrecps
vqshrun_n
vqrshrun_n
vqshrn_n
vrshrn_n
vqrshrn_n
vrnda
vrndi
vrndm
vrndn
vrndp
vrndx
vrndz
vcvt
vcvta
vcvtm
vcvtn
vcvtp
vmulx
vnegd
vnegh
vpmaxnm
vpminnm
vsqrt
vrbit
vaddv
vmaxv
vminv
vmaxnmv
vminnmv
vaddlv
vsri_n
vsli_n
vsra_n
vld1_lane
vld2
vld3
vld4
vld2_lane
vld3_lane
vld4_lane
vtrn
vuzp
vzip
vsqadd
vuqadd
vaddhn
vcvt_n
vld1
vld1xN
vmovl
vmovn
vpaddl
vqdmlal
vshl_n
vshll_n
vshrn_n
vshr_n
vsubhn
vtst
vdot
vabs_v
vabsq_v
vaddhn_v
vaesdq_v
vaeseq_v
vaesimcq_v
vaesmcq_v
vcage_v
vcageq_v
vcagt_v
vcagtq_v
vcale_v
vcaleq_v
vcalt_v
vcaltq_v
vceqz_v
vceqzq_v
vcgez_v
vcgezq_v
vcgtz_v
vcgtzq_v
vclez_v
vclezq_v
vcls_v
vclsq_v
vcltz_v
vcltzq_v
vclz_v
vclzq_v
vcnt_v
vcntq_v
vcvt_f16_f32
vcvt_f16_v
vcvt_f32_f16
vcvt_f32_v
vcvt_n_f16_v
vcvt_n_f32_v
vcvt_n_f64_v
vcvt_n_s16_v
vcvt_n_s32_v
vcvt_n_s64_v
vcvt_n_u16_v
vcvt_n_u32_v
vcvt_n_u64_v
vcvtq_f16_v
vcvtq_f32_v
vcvtq_n_f16_v
vcvtq_n_f32_v
vcvtq_n_f64_v
vcvtq_n_s16_v
vcvtq_n_s32_v
vcvtq_n_s64_v
vcvtq_n_u16_v
vcvtq_n_u32_v
vcvtq_n_u64_v
vcvtx_f32_v
vdot_v
vdotq_v
vext_v
vextq_v
vfma_v
vfmaq_v
vhadd_v
vhaddq_v
vhsub_v
vhsubq_v
vld1_x2_v
vld1_x3_v
vld1_x4_v
vld1q_x2_v
vld1q_x3_v
vld1q_x4_v
vmovl_v
vmovn_v
vmul_v
vmulq_v
vpadd_v
vpaddl_v
vpaddlq_v
vpaddq_v
vqabs_v
vqabsq_v
vqadd_v
vqaddq_v
vqdmlal_v
vqdmlsl_v
vqdmulh_v
vqdmulhq_v
vqdmull_v
vqmovn_v
vqmovun_v
vqneg_v
vqnegq_v
vqrdmulh_v
vqrdmulhq_v
vqrshl_v
vqrshlq_v
vqshl_n_v
vqshl_v
vqshlq_n_v
vqshlq_v
vqshlu_n_v
vqshluq_n_v
vqsub_v
vqsubq_v
vraddhn_v
vrecpe_v
vrecpeq_v
vrecps_v
vrecpsq_v
vrhadd_v
vrhaddq_v
vrndi_v
vrndiq_v
vrshl_v
vrshlq_v
vrshr_n_v
vrshrq_n_v
vrsqrte_v
vrsqrteq_v
vrsqrts_v
vrsqrtsq_v
vrsubhn_v
vsha1su0q_v
vsha1su1q_v
vsha256h2q_v
vsha256hq_v
vsha256su0q_v
vsha256su1q_v
vshl_n_v
vshl_v
vshll_n_v
vshlq_n_v
vshlq_v
vshr_n_v
vshrn_n_v
vshrq_n_v
vst1_x2_v
vst1_x3_v
vst1_x4_v
vst1q_x2_v
vst1q_x3_v
vst1q_x4_v
vsubhn_v
vtst_v
vtstq_v
vabdd_f64
vabds_f32
vabsd_s64
vaddlv_s32
vaddlv_u32
vaddlvq_s32
vaddlvq_u32
vaddv_f32
vaddv_s32
vaddv_u32
vaddvq_f32
vaddvq_f64
vaddvq_s32
vaddvq_s64
vaddvq_u32
vaddvq_u64
vcaged_f64
vcages_f32
vcagtd_f64
vcagts_f32
vcaled_f64
vcales_f32
vcaltd_f64
vcalts_f32
vcvtad_s64_f64
vcvtad_u64_f64
vcvtas_s32_f32
vcvtas_u32_f32
vcvtd_n_f64_s64
vcvtd_n_f64_u64
vcvtd_n_s64_f64
vcvtd_n_u64_f64
vcvtmd_s64_f64
vcvtmd_u64_f64
vcvtms_s32_f32
vcvtms_u32_f32
vcvtnd_s64_f64
vcvtnd_u64_f64
vcvtns_s32_f32
vcvtns_u32_f32
vcvtpd_s64_f64
vcvtpd_u64_f64
vcvtps_s32_f32
vcvtps_u32_f32
vcvts_n_f32_s32
vcvts_n_f32_u32
vcvts_n_s32_f32
vcvts_n_u32_f32
vcvtxd_f32_f64
vmaxnmv_f32
vmaxnmvq_f32
vmaxnmvq_f64
vmaxv_f32
vmaxv_s32
vmaxv_u32
vmaxvq_f32
vmaxvq_f64
vmaxvq_s32
vmaxvq_u32
vminnmv_f32
vminnmvq_f32
vminnmvq_f64
vminv_f32
vminv_s32
vminv_u32
vminvq_f32
vminvq_f64
vminvq_s32
vminvq_u32
vmull_p64
vmulxd_f64
vmulxs_f32
vpaddd_s64
vpaddd_u64
vpmaxnmqd_f64
vpmaxnms_f32
vpmaxqd_f64
vpmaxs_f32
vpminnmqd_f64
vpminnms_f32
vpminqd_f64
vpmins_f32
vqabsb_s8
vqabsd_s64
vqabsh_s16
vqabss_s32
vqaddb_s8
vqaddb_u8
vqaddd_s64
vqaddd_u64
vqaddh_s16
vqaddh_u16
vqadds_s32
vqadds_u32
vqdmulhh_s16
vqdmulhs_s32
vqdmullh_s16
vqdmulls_s32
vqmovnd_s64
vqmovnd_u64
vqmovnh_s16
vqmovnh_u16
vqmovns_s32
vqmovns_u32
vqmovund_s64
vqmovunh_s16
vqmovuns_s32
vqnegb_s8
vqnegd_s64
vqnegh_s16
vqnegs_s32
vqrdmulhh_s16
vqrdmulhs_s32
vqrshlb_s8
vqrshlb_u8
vqrshld_s64
vqrshld_u64
vqrshlh_s16
vqrshlh_u16
vqrshls_s32
vqrshls_u32
vqrshrnd_n_s64
vqrshrnd_n_u64
vqrshrnh_n_s16
vqrshrnh_n_u16
vqrshrns_n_s32
vqrshrns_n_u32
vqrshrund_n_s64
vqrshrunh_n_s16
vqrshruns_n_s32
vqshlb_n_s8
vqshlb_n_u8
vqshlb_s8
vqshlb_u8
vqshld_s64
vqshld_u64
vqshlh_n_s16
vqshlh_n_u16
vqshlh_s16
vqshlh_u16
vqshls_n_s32
vqshls_n_u32
vqshls_s32
vqshls_u32
vqshlub_n_s8
vqshluh_n_s16
vqshlus_n_s32
vqshrnd_n_s64
vqshrnd_n_u64
vqshrnh_n_s16
vqshrnh_n_u16
vqshrns_n_s32
vqshrns_n_u32
vqshrund_n_s64
vqshrunh_n_s16
vqshruns_n_s32
vqsubb_s8
vqsubb_u8
vqsubd_s64
vqsubd_u64
vqsubh_s16
vqsubh_u16
vqsubs_s32
vqsubs_u32
vrecped_f64
vrecpes_f32
vrecpxd_f64
vrecpxs_f32
vrshld_s64
vrshld_u64
vrsqrted_f64
vrsqrtes_f32
vrsqrtsd_f64
vrsqrtss_f32
vsha1cq_u32
vsha1h_u32
vsha1mq_u32
vsha1pq_u32
vshld_s64
vshld_u64
vslid_n_s64
vslid_n_u64
vsqaddb_u8
vsqaddd_u64
vsqaddh_u16
vsqadds_u32
vsrid_n_s64
vsrid_n_u64
vuqaddb_s8
vuqaddd_s64
vuqaddh_s16
vuqadds_s32
vabdh_f16
vcvtah_s32_f16
vcvtah_s64_f16
vcvtah_u32_f16
vcvtah_u64_f16
vcvth_n_f16_s32
vcvth_n_f16_s64
vcvth_n_f16_u32
vcvth_n_f16_u64
vcvth_n_s32_f16
vcvth_n_s64_f16
vcvth_n_u32_f16
vcvth_n_u64_f16
vcvtmh_s32_f16
vcvtmh_s64_f16
vcvtmh_u32_f16
vcvtmh_u64_f16
vcvtnh_s32_f16
vcvtnh_s64_f16
vcvtnh_u32_f16
vcvtnh_u64_f16
vcvtph_s32_f16
vcvtph_s64_f16
vcvtph_u32_f16
vcvtph_u64_f16
vmulxh_f16
vrecpeh_f16
vrecpxh_f16
vrsqrteh_f16
vrsqrtsh_f16
.inst 0x
.inst.n 0x
ldrexd
ldrex
strexd
strex
vsha1h
vcvtr
vld1q_lane
vrecpe
vrsra_n
vabd_v
vabdq_v
vbsl_v
vbslq_v
vcvt_s16_v
vcvt_s32_v
vcvt_s64_v
vcvt_u16_v
vcvt_u32_v
vcvt_u64_v
vcvta_s16_v
vcvta_s32_v
vcvta_s64_v
vcvta_u16_v
vcvta_u32_v
vcvta_u64_v
vcvtaq_s16_v
vcvtaq_s32_v
vcvtaq_s64_v
vcvtaq_u16_v
vcvtaq_u32_v
vcvtaq_u64_v
vcvtm_s16_v
vcvtm_s32_v
vcvtm_s64_v
vcvtm_u16_v
vcvtm_u32_v
vcvtm_u64_v
vcvtmq_s16_v
vcvtmq_s32_v
vcvtmq_s64_v
vcvtmq_u16_v
vcvtmq_u32_v
vcvtmq_u64_v
vcvtn_s16_v
vcvtn_s32_v
vcvtn_s64_v
vcvtn_u16_v
vcvtn_u32_v
vcvtn_u64_v
vcvtnq_s16_v
vcvtnq_s32_v
vcvtnq_s64_v
vcvtnq_u16_v
vcvtnq_u32_v
vcvtnq_u64_v
vcvtp_s16_v
vcvtp_s32_v
vcvtp_s64_v
vcvtp_u16_v
vcvtp_u32_v
vcvtp_u64_v
vcvtpq_s16_v
vcvtpq_s32_v
vcvtpq_s64_v
vcvtpq_u16_v
vcvtpq_u32_v
vcvtpq_u64_v
vcvtq_s16_v
vcvtq_s32_v
vcvtq_s64_v
vcvtq_u16_v
vcvtq_u32_v
vcvtq_u64_v
vld1_dup_v
vld1_v
vld1q_dup_v
vld1q_v
vld2_dup_v
vld2_lane_v
vld2_v
vld2q_dup_v
vld2q_lane_v
vld2q_v
vld3_dup_v
vld3_lane_v
vld3_v
vld3q_dup_v
vld3q_lane_v
vld3q_v
vld4_dup_v
vld4_lane_v
vld4_v
vld4q_dup_v
vld4q_lane_v
vld4q_v
vmax_v
vmaxnm_v
vmaxnmq_v
vmaxq_v
vmin_v
vminnm_v
vminnmq_v
vminq_v
vmull_v
vpadal_v
vpadalq_v
vpmax_v
vpmin_v
vrnd_v
vrnda_v
vrndaq_v
vrndm_v
vrndmq_v
vrndn_v
vrndnq_v
vrndp_v
vrndpq_v
vrndq_v
vrndx_v
vrndxq_v
vst1_v
vst1q_v
vst2_lane_v
vst2_v
vst2q_lane_v
vst2q_v
vst3_lane_v
vst3_v
vst3q_lane_v
vst3q_v
vst4_lane_v
vst4_v
vst4q_lane_v
vst4q_v
vtrn_v
vtrnq_v
vuzp_v
vuzpq_v
vzip_v
vzipq_v
__commit_write_pipe
__commit_read_pipe
__sub_group_commit_read_pipe
__work_group_commit_read_pipe
__work_group_commit_write_pipe
__reserve_read_pipe
__reserve_write_pipe
__sub_group_reserve_read_pipe
__work_group_reserve_read_pipe
__work_group_reserve_write_pipe
_setjmp3
ptrint
offsetcast
offsetptr
maskedptr
maskcond
%hhd
%hhu
%lld
%llu
UnregisterFatBinary
_module_dtor
__hip
__cuda
_register_globals
RegisterFunction
RegisterVar
RegisterFatBinary
_module_ctor
__hip_fatbin
.hip_fatbin
__NV_CUDA,__nv_relfatbin
__nv_relfatbin
__NV_CUDA,__nv_fatbin
.nv_fatbin
__NV_CUDA,__fatbin
.nvFatBinSegment
__NV_CUDA,__nv_module_id
__nv_module_id
__hip_
__nv_
__hip_module_id
.hipFatBinSegment
_fatbin_wrapper
__hip_gpubin_handle
__cuda_gpubin_handle
__fatbinwrap
__cudaRegisterLinkedBinary
dummy
SetupArgument
setup.end
hipLaunchByPtr
cudaLaunch
setup.next
kcall.configok
kcall.end
vfnkxt
reading a new[] cookie
cannot yet compile %0 in this ABI
array cookie initialization
complete object detection in ctor
member function pointer null testing
member function pointer comparison
member function pointer conversions
loads of member pointers
calls through member pointers
no-frame-pointer-elim
no-frame-pointer-elim-non-leaf
less-precise-fpmad
null-pointer-is-valid
denormal-fp-math
no-trapping-math
strict-float-cast-overflow
use-soft-float
correctly-rounded-divide-sqrt-fp-math
denorms-are-zero
reciprocal-estimates
prefer-vector-width
backchain
ptrauth-returns
ptrauth-calls
nvptx-f32ftz
split-stack
uniform-work-group-size
coerce
swifterror.temp
coerce.val
coerce.val.pi
coerce.highbits
coerce.val.ii
coerce.val.ip
coerce.dive
arg.unpromote
sret
nullcheck
no.nullcheck
return.sloc.load
inalloca.save
icr.temp
icr.isnull
icr.argument
icr.cont
icr.copy
icr.cast
icr.to-use
clang.arc.no_objc_arc_exceptions
invoke.cont
argmem
indirect-arg-temp
byval-temp
Invalid cast from 
call
icr.writeback
icr.done
icr.writeback-cast
alignmentcast
ispositive
positivemask
cast.notnull
cast.end
cast.result
cast.null
sub.ptr
__asan_poison_intra_object_redzone
__asan_unpoison_intra_object_redzone
cmp.vtables
vtable
retval.inhctor
disable-tail-calls
__sanitizer_dtor_callback
dtor.call_delete
dtor.continue
new.ctorloop
isempty
arrayctor.end
arrayctor.loop
arrayctor.cur
arrayctor.next
arrayctor.done
arrayctor.cont
cast.nonnull
cast.check
cast.cont
lambda conversion to variadic function
saved-rvalue
saved-complex
cleanup.cond
cleanup.dest
cleanup.dest.slot
tmp.exprcleanup
forwarded-prebranch
cleanup.done
cleanup.action
cleanup.is_active
cleanup.isactive
.ready
.suspend
.cleanup
.suspend.bool
resume.eh
await
yield
coro.alloc
coro.init
coro.final
coro.ret
coro.ret.on.failure
gro.active
coro.resumed.body
coro.resumed.cont
coro.resumed.eh
funclet
cleanup.cont
coro.free
after.coro.free
Deallocation expressoin does not refer to coro.free
only one __builtin_coro_id can be used in a function
__builtin_coro_id shall not be used in a C++ coroutine
this builtin expect that __builtin_coro_begin has been used earlier in this function
this builtin expect that __builtin_coro_id has been used earlier in this function
__vtbl_ptr_type
__size
__align
__isa
__flags
__reserved
__FuncPtr
__descriptor
opencl_image1d_ro_t
opencl_image1d_array_ro_t
opencl_image1d_buffer_ro_t
opencl_image2d_ro_t
opencl_image2d_array_ro_t
opencl_image2d_depth_ro_t
opencl_image2d_array_depth_ro_t
opencl_image2d_msaa_ro_t
opencl_image2d_array_msaa_ro_t
opencl_image2d_msaa_depth_ro_t
opencl_image2d_array_msaa_depth_ro_t
opencl_image3d_ro_t
opencl_image1d_wo_t
opencl_image1d_array_wo_t
opencl_image1d_buffer_wo_t
opencl_image2d_wo_t
opencl_image2d_array_wo_t
opencl_image2d_depth_wo_t
opencl_image2d_array_depth_wo_t
opencl_image2d_msaa_wo_t
opencl_image2d_array_msaa_wo_t
opencl_image2d_msaa_depth_wo_t
opencl_image2d_array_msaa_depth_wo_t
opencl_image3d_wo_t
opencl_image1d_rw_t
opencl_image1d_array_rw_t
opencl_image1d_buffer_rw_t
opencl_image2d_rw_t
opencl_image2d_array_rw_t
opencl_image2d_depth_rw_t
opencl_image2d_array_depth_rw_t
opencl_image2d_msaa_rw_t
opencl_image2d_array_msaa_rw_t
opencl_image2d_msaa_depth_rw_t
opencl_image2d_array_msaa_depth_rw_t
opencl_image3d_rw_t
opencl_sampler_t
opencl_event_t
opencl_clk_event_t
opencl_queue_t
opencl_reserve_id_t
__forwarding
__copy_helper
__destroy_helper
__byref_variable_layout
__block_literal_
arraydestroy.body
arraydestroy.done
arraydestroy.isempty
arraydestroy.elementPast
arraydestroy.element
pad.arraybegin
pad.arrayend
nrvo.unused
nrvo.skipdtor
nrvo.val
expected a function or method
__const.
vla-setup.loop
vla.iszerosized
nrvo
saved_stack
fake.use
__vla_expr
constant l-value expression
.addr
__cxx_global_array_dtor
atexit
this initialization requires a guard variable, which the kernel does not support
__cxx_init_fn_ptr
_GLOBAL__I_
<null>
_GLOBAL__sub_I_
_GLOBAL__D_a
__gcc_personality_v0
__gcc_personality_sj0
__gcc_personality_seh0
__objc_personality_v0
__gxx_personality_v0
__gxx_personality_sj0
__gxx_personality_seh0
__gnu_objc_personality_v0
__gnu_objc_personality_sj0
__gnu_objc_personality_seh0
__gnustep_objcxx_personality_v0
__gnustep_objc_personality_v0
_except_handler3
__C_specific_handler
__CxxFrameHandler3
__gxx_wasm_personality_v0
__std_terminate
objc_terminate
__cxa_free_exception
exn.slot
ehselector.slot
throw.cont
ehspec.unexpected
ehspec.fails
__cxa_call_unexpected
eh.resume
lpad.val
try.cont
catch.start
rethrow
catch.fallthrough
matches
catch.dispatch
ehcleanup
filter.dispatch
terminate.handler
lpad
terminate.lpad
finally.exn
finally.for-eh
finally.catchall
cleanup.dest.saved
finally.cont
finally.shouldthrow
finally.endcatch
finally.cleanup.cont
__try.__leave
__try.cont
__except.ret
exception_pointers
abnormal_termination
frame_pointer
'this' captured by SEH
VLA captured by SEH
l-value expression
vecins
ivar.offset
extractVec
storetmp
nontemporal
arraydecay
bf.load
bf.value
bf.shl
bf.clear
bf.set
bf.result.shl
bf.result.ashr
bf.result.cast
frombool
.ref.tmp
ref.tmp
unexpected cast lvalue
not.null
vptr.null
vptr.not.null
__ubsan_vptr_type_cache
handler.
non_fatal.
fatal.
__ubsan_handle_
_minimal
_abort
trap
trap-func-name
add_overflow
builtin_unreachable
cfi_check_fail
divrem_overflow
dynamic_type_cache_miss
float_cast_overflow
function_type_mismatch
implicit_conversion
invalid_builtin
load_invalid_value
missing_return
mul_overflow
negate_overflow
nullability_arg
nullability_return
nonnull_arg
nonnull_return
out_of_bounds
pointer_overflow
shift_out_of_bounds
sub_overflow
type_mismatch
vla_bound_not_positive
.src
conditional operator
cond-lvalue
lb_add_len
idx_sub_1
len_sub_1
arrayidx
conv.ptr.element
vector.elt
idxprom
castToVec4
loadVec4
agg.tmp
temp.lvalue
llvm.named.register.
typecheck
callee.knr.cast
cfi.cont
cfi.slowpath
__cfi_slowpath_diag
__cfi_slowpath
agg-temp
undef.agg.tmp
bf.ashr
bf.lshr
bf.cast
__cfi_check
__cfi_check_fail
aggregate three-way comparison with vector arguments
aggregate three-way comparison
and.eq
sel.eq
sel.lt
sel.gt
aggregate expression
weird std::initializer_list
arraystart
arrayend
aggregate va_arg expression
arrayinit.begin
constinit
arrayinit.endOfInit
arrayinit.element
arrayinit.start
arrayinit.end
arrayinit.body
arrayinit.cur
arrayinit.next
arrayinit.done
non-simple lvalue dynamic_cast
lvalue dynamic_cast with a destination
atomic-to-nonatomic.temp
agg.tmp.ensured
arrayinit.index
cmp.lt
cmp.gt
cmp.eq
aggregate binary expression
string.init.end
array.init.end
array.exp.next
new.loop
new.loop.end
array.end
array.isempty
array.cur
array.next
array.atend
new.notnull
new.cont
new.isnull
delete.notnull
delete.end
isnull
del.first
typeid.bad_typeid
typeid.end
dynamic_cast.end
dynamic_cast.null
dynamic_cast.notnull
.realp
.imagp
neg.r
neg.i
conj.i
complex va_arg expression
cond.r
cond.i
.real
.imag
sub.r
sub.i
add.r
add.i
__divhc3
__divsc3
__divdc3
__divxc3
__divtc3
mul_ac
mul_bd
mul_ad
mul_bc
mul_r
mul_i
isnan_cmp
complex_mul_cont
complex_mul_imag_nan
complex_mul_libcall
real_mul_phi
imag_mul_phi
mul.rl
mul.il
mul.ir
mul.rr
mul.r
mul.i
__mulhc3
__mulsc3
__muldc3
__mulxc3
__multc3
complex expression
.compoundliteral
internal error: could not emit constant value "abstractly"
sext
land.ext
land.end
land.rhs
lor.ext
lor.end
lor.rhs
lnot
lnot.ext
vecext
conv
virtual base in offsetof
shuf_idx
shuf_elt
shuf_ins
shuffle
va_arg expression
GNU array range designator extension
vecinit
vext
splat
cast must be folded at compile-time
anyext
truncheck
.splatinsert
.splat
astype
cond.end
atomic_op
vla.negsize
vla.inc
incdec.funcptr
incdec.ptr
incdec.conv
incdec.objptr
atomic_cont
nooverflow
overflow
scalar expression
cmp.r
cmp.i
and.ri
or.ri
sh_prom
shr.mask
shl.mask
check
shl.zeros
shl.check
sub.ptr.lhs.cast
sub.ptr.rhs.cast
sub.ptr.sub
sub.ptr.div
idx.ext
idx.neg
vla.index
non-scalar arg to printf
printf_args
llvm.loop.vectorize.width
llvm.loop.interleave.count
llvm.loop.unroll.count
llvm.loop.unroll_and_jam.count
llvm.loop.vectorize.enable
llvm.loop.unroll.full
llvm.loop.unroll.disable
llvm.loop.unroll.enable
llvm.loop.unroll_and_jam.full
llvm.loop.unroll_and_jam.disable
llvm.loop.unroll_and_jam.enable
llvm.loop.distribute.enable
llvm.mem.parallel_loop_access
packed_
layout_explicit
layout_implicit
sample
air.compile.denorms_enable
air.compile.framebuffer_fetch_enable
__metal_implicit_attr_int_expr_
__metal_implicit_fc_pred_
generated(__air_placeholder__)
___metal_get_control_point_
int32
uint32
pdevice
pthreadgroup
pconstant
pthreadgroup_imageblock
pray_data
user(
generated(
air.world_space_origin
air.world_space_direction
air.viewport_array_index
air.vertex_id
air.tile_index
air.threads_per_simdgroup
air.threads_per_threadgroup
air.threads_per_grid
air.thread_position_in_threadgroup
air.thread_position_in_grid
air.thread_index_in_simdgroup
air.thread_index_in_quadgroup
air.thread_index_in_threadgroup
air.threadgroups_per_grid
air.threadgroup_position_in_grid
air.thread_execution_width
air.stage_in_grid_size
air.stage_in_grid_origin
air.simdgroups_per_threadgroup
air.simdgroup_index_in_threadgroup
air.sample_id
air.quadgroups_per_threadgroup
air.quadgroup_index_in_threadgroup
air.primitive_id
air.position_in_patch
air.point_coord
air.pixels_per_tile
air.pixel_position_in_tile
air.patch_id
air.origin
air.opaque_primitive
air.min_distance
air.max_distance
air.instance_intersection_function_table_offset
air.instance_id
air.geometry_intersection_function_table_offset
air.geometry_id
air.front_facing
air.distance
air.dispatch_threads_per_threadgroup
air.dispatch_simdgroups_per_threadgroup
air.dispatch_quadgroups_per_threadgroup
air.direction
air.disabled
air.base_vertex
air.base_instance
air.amplification_id
air.amplification_count
.coerce
air.ci_sampler
air.ci_matrix
air.ci_builtin
air.stencil
air.sample_mask
air.point_size
air.continue_search
air.clip_distance
air.accept_intersection
pown
rootn
air.vstore
_half
air.vload
air.write_imageblock_slice_to_
texture_1d
texture_1d_array
texture_2d
texture_2d_array
texture_3d
texture_cube
texture_cube_array
.rte
.rtz
store_ack
air.remquo.
air.lgamma_r.
fast_
ldexp.
air.dot.
.rtp
.rtn
.sat
struct.__metal_texture_1d_t
struct.__metal_texture_1d_array_t
struct.__metal_texture_2d_t
struct.__metal_texture_2d_array_t
struct.__metal_texture_3d_t
struct.__metal_texture_cube_t
struct.__metal_texture_cube_array_t
struct.__metal_texture_2d_ms_t
struct.__metal_texture_2d_ms_array_t
struct.__metal_texture_buffer_1d_t
struct.__metal_depth_2d_t
struct.__metal_depth_2d_array_t
struct.__metal_depth_cube_t
struct.__metal_depth_cube_array_t
struct.__metal_depth_2d_ms_t
struct.__metal_depth_2d_ms_array_t
struct.__metal_sampler_t
struct.__metal_work_group_event_t
struct.__metal_imageblock_t
struct.__metal_patch_control_point_t
struct.__metal_command_buffer_t
struct.__metal_render_pipeline_state_t
struct.__metal_compute_pipeline_state_t
struct.__metal_interpolant_t
struct.__metal_visible_function_table_t
struct.__metal_instance_acceleration_structure_t
struct.__metal_primitive_acceleration_structure_t
struct.__metal_intersection_function_table_t
__destructor_
special function 
 for non-trivial C struct has incorrect type
dstarray.end
loop.header
addr.cur
loop.exit
loop.body
done
__default_constructor_
__copy_constructor_
__copy_assignment_
__move_constructor_
__move_assignment_
__NSArray0__
__NSDictionary0__
clang.arc.use
objc_loadWeakRetained
objc_retain
objc_retainAutorelease
objc_retainBlock
objc_autorelease
objc_release
objc_retainAutoreleasedReturnValue
clang.arc.retainAutoreleasedReturnValueMarker
Obj-C getter requiring atomic copy
objc_loadWeak
clang.arc.copy_on_escape
__copy_helper_atomic_property_
Obj-C optimized setter - NYI
Obj-C setter requiring atomic copy
__assign_helper_atomic_property_
objc_storeStrong
Obj-C fast enumeration for this runtime
forcoll.end
state.ptr
items.ptr
forcoll.next
forcoll.empty
forcoll.loopinit
iszero
mutationsptr.ptr
mutationsptr
forcoll.initial-mutations
forcoll.loopbody
forcoll.index
forcoll.count
statemutations
forcoll.mutated
forcoll.notmutated
stateitems.ptr
stateitems
currentitem.ptr
currentitem
forcoll.refetch
cond-cleanup.save
clang.imprecise_release
objc_unsafeClaimAutoreleasedReturnValue
objc_autoreleaseReturnValue
objc_retainAutoreleaseReturnValue
objc_storeWeak
objc_initWeak
objc_destroyWeak
objc_moveWeak
objc_copyWeak
objc_autoreleasePoolPush
objc_autoreleasePoolPop
drain
__isOSVersionAtLeast
__isTargetPlatformNative
__isTargetVariantOSVersionAtLeast
CoreFoundation
CFBundleGetVersionNumber
__clang_at_available_requires_core_foundation_framework
objc_msg_lookup_super
objc_msg_lookup
objc_msg_lookup_stret
objc_msg_lookup_super_stret
_OBJC_CLASS_
__objc_class_ref_
__objc_class_name_
objc_lookup_class
__objc_ivar_offset_
.objc_selector_
.objc_method_list
.objc_protocol_name
._OBJC_PROTOCOL_
.objc_protocol_list
.objc_ivar_list
.guess
__objc_ivar_offset_value_
.objc_protocol
.objc_property_list
objc_get_meta_class
objc_get_class
.objc_metaclass_ref
.objc_class_ref
msgSend
.ivar.offsets
.super_class_name
.class_name
_OBJC_METACLASS_
.objc_category_
.objc_str
__ObjC_Protocol_Holder_Ugly_Hack
AnotherHack
NXConstantString
.objc_static_class_name
.objc_statics
.objc_statics_ptr
.objc_sel_name
.objc_sel_types
.objc_selector_list
.objc_source_file_name
.objc_load_function
__objc_exec_class
class_registerAlias_np
no_alias
GNUObjCMessageSend
objc_getPropertyStruct
objc_setPropertyStruct
.objc_sel_name_
__objc_selectors
.objc_sel_types_
._OBJC_WEAK_REF_CLASS_
._OBJC_REF_CLASS_
._OBJC_CLASS_
.objc_protocol_method_list
._OBJC_REF_PROTOCOL_
__objc_protocol_refs
__objc_protocols
._OBJC_METACLASS_
__objc_class_refs
._OBJC_INIT_CLASS_
__objc_classes
.objc_str_
.objc_string
__objc_constant_string
__objc_id_type_info
__objc_eh_typeinfo_
_ZTVN7gnustep7libobjc22__objc_class_type_infoE
__objc_eh_typename_
.objcv2_load_function
__objc_cats
__objc_class_aliases
.objc_init
__objc_load
.objc_ctor
.ctors
.objc_null_selector
.objc_null_category
.objc_null_cls_init_ref
.objc_null_class_ref
.objc_null_protocol
.objc_null_protocol_ref
.objc_class_alias
.objc_null_class_alias
.objc_null_constant_string
__start_
__stop_
objc_msg_lookup_sender
objc_slot_lookup_super
_Unwind_Resume_or_Rethrow
objc_setCppObjectAtomic
objc_getCppObjectAtomic
struct._objc_method_description
struct._objc_method_description_list
struct._objc_protocol_extension
struct._objc_protocol
struct._objc_protocol_list
struct._objc_ivar
struct._objc_ivar_list
struct._objc_method_list
struct._objc_class_extension
struct._objc_class
struct._objc_category
struct._objc_symtab
struct._objc_module
struct._objc_exception_data
struct.__method_list_t
struct._protocol_t
struct._ivar_t
struct._ivar_list_t
struct._class_ro_t
struct._class_t
struct._category_t
_message_ref_t
struct._super_message_ref_t
struct._objc_typeinfo
OBJC_CLASS_$_NSConstantString
OBJC_CLASS_$_
l_OBJC_PROTOCOL_$_
l_OBJC_$_PROTOCOL_REFS_
l_OBJC_$_PROP_LIST_
l_OBJC_$_PROTOCOL_METHOD_TYPES_
l_OBJC_$_CLASS_PROP_LIST_
l_OBJC_LABEL_PROTOCOL_$_
__objc_protolist
coalesced,no_dead_strip
__DATA,
__DATA, __objc_const
OBJC_CLASS_NAME_
OBJC_METH_VAR_NAME_
OBJC_METH_VAR_TYPE_
OBJC_PROP_NAME_ATTR_
__TEXT,__objc_classname,cstring_literals
__TEXT,__objc_methname,cstring_literals
__TEXT,__objc_methtype,cstring_literals
__OBJC,__property,regular,no_dead_strip
l_OBJC_$_CATEGORY_INSTANCE_METHODS_
l_OBJC_$_CATEGORY_CLASS_METHODS_
l_OBJC_$_INSTANCE_METHODS_
l_OBJC_$_CLASS_METHODS_
l_OBJC_$_PROTOCOL_INSTANCE_METHODS_
l_OBJC_$_PROTOCOL_CLASS_METHODS_
l_OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_
l_OBJC_$_PROTOCOL_CLASS_METHODS_OPT_
 Inline BYREF variable layout: 
 Inline block variable layout: 
0x0%llx
, BL_STRONG:%d
, BL_BYREF:%d
, BL_WEAK:%d
, BL_OPERATOR:0
 Byref variable layout: 
 Block variable layout: 
BL_OPERATOR:
BL_NON_OBJECT_BYTES:
BL_NON_OBJECT_WORD:
BL_STRONG:
BL_BYREF:
BL_WEAK:
BL_UNRETAINED:
 block variable layout for block: 
0x0%x%s
0x%x%s
objc_memmove_collectable
ivar
invariant.load
ivar.conv
OBJC_IVAR_$_
weakassign
globalassign
threadlocalassign
objc_assign_threadlocal
weakread
objc_exception_rethrow
objc_begin_catch
objc_end_catch
NSAutoreleasePool
OBJC_CLASSLIST_REFERENCES_$_
__objc_classrefs
regular,no_dead_strip
OBJC_METACLASS_$_
objc_lookUpClass
objc_copyCppObjectAtomic
objc_copyStruct
objc_setProperty_nonatomic
objc_setProperty_nonatomic_copy
objc_setProperty_atomic_copy
objc_setProperty_atomic
objc_setProperty
objc_getProperty
l_OBJC_PROTOCOL_REFERENCE_$_
__objc_protorefs
OBJC_CLASSLIST_SUP_REFS_$_
__objc_superrefs
objc_msgSendSuper2_stret
msgSend.cont
msgSend.null-receiver
msgSend.call
objc_msgSendSuper2
OBJC_SELECTOR_REFERENCES_
__objc_selrefs
literal_pointers,no_dead_strip
objc_msgSendSuper2_stret_fixup
objc_msgSend_stret_fixup
objc_msgSend_fpret_fixup
objc_msgSendSuper2_fixup
objc_msgSend_fixup
__objc_msgrefs
coalesced
msgSend_fn
isFlipped
isKindOfClass
isEqualToString
_objc_empty_cache
_objc_empty_vtable
OBJC_EHTYPE_$_
objc_ehtype_vtable
__DATA,__objc_const
__DATA, __objc_data
l_OBJC_CLASS_PROTOCOLS_$_
__DATA, __objc_ivar
l_OBJC_$_INSTANCE_VARIABLES_
l_OBJC_METACLASS_RO_$_
l_OBJC_CLASS_RO_$_
%s ivar layout for class '%s': 
l_OBJC_$_CATEGORY_
l_OBJC_CATEGORY_PROTOCOLS_$_
struct.__builtin_NSString
_unnamed_nsstring_
__DATA,__objc_stringobj,regular,no_dead_strip
__OBJC,__cstring_object,regular,no_dead_strip
OBJC_EHTYPE_id
__objc_classlist
OBJC_LABEL_CLASS_$
__objc_nlclslist
OBJC_LABEL_NONLAZY_CLASS_$
__objc_catlist
OBJC_LABEL_CATEGORY_$
__objc_nlcatlist
OBJC_LABEL_NONLAZY_CATEGORY_$
__OBJC,__image_info,regular
__objc_imageinfo
Objective-C Version
Objective-C Image Info Version
Objective-C Image Info Section
Objective-C Garbage Collection
Objective-C GC Only
Objective-C Is Simulated
Objective-C Class Properties
_objc_super
struct._prop_t
struct._prop_list_t
struct._objc_method
struct._objc_cache
_NSConstantStringClassReference
ClassReference
OBJC_PROTOCOL_
__OBJC,__protocol,regular,no_dead_strip
OBJC_PROTOCOL_METHOD_TYPES_
OBJC_$_PROP_PROTO_LIST_
OBJC_$_CLASS_PROP_PROTO_LIST_
l_OBJC_PROTOCOLEXT_
OBJC_PROTOCOL_REFS_
__OBJC,__cat_cls_meth,regular,no_dead_strip
OBJC_CATEGORY_INSTANCE_METHODS_
OBJC_CATEGORY_CLASS_METHODS_
OBJC_INSTANCE_METHODS_
OBJC_CLASS_METHODS_
OBJC_PROTOCOL_INSTANCE_METHODS_
OBJC_PROTOCOL_CLASS_METHODS_
OBJC_PROTOCOL_INSTANCE_METHODS_OPT_
OBJC_PROTOCOL_CLASS_METHODS_OPT_
__OBJC,__cat_inst_meth,regular,no_dead_strip
__OBJC,__cls_meth,regular,no_dead_strip
__OBJC,__inst_meth,regular,no_dead_strip
strongassign
finally.end
finally.rethrow
sync.arg
exceptiondata.ptr
_call_try_exit
setjmp_buffer
setjmp_result
try.handler
did_catch_exception
caught
propagating_exception
setjmp.result
catch_for_catch
match
catch.next
matched
OBJC_CLASS_REFERENCES_
__OBJC,__cls_refs,literal_pointers,no_dead_strip
finally.call_exit
finally.no_call_exit
OBJC_METACLASS_
OBJC_CLASS_
__OBJC,__message_refs,literal_pointers,no_dead_strip
OBJC_CLASS_PROTOCOLS_
__OBJC,__meta_class,regular,no_dead_strip
OBJC_INSTANCE_VARIABLES_
__OBJC,__instance_vars,regular,no_dead_strip
__OBJC,__class,regular,no_dead_strip
OBJC_CLASSEXT_
__OBJC,__class_ext,regular,no_dead_strip
OBJC_CATEGORY_PROTOCOLS_
OBJC_CATEGORY_
__OBJC,__category,regular,no_dead_strip
OBJC_SYMBOLS
__OBJC,__symbols,regular,no_dead_strip
OBJC_MODULES
__OBJC,__module_info,regular,no_dead_strip
.objc_class_name_
.globl .objc_class_name_
.lazy_reference .objc_class_name_
.objc_category_name_
.globl .objc_category_name_
add.ptr
eh.cont
exn.adjusted
opencl.sampler_t
opencl.pipe_ro_t
opencl.pipe_wo_t
opencl.image1d_ro_t
opencl.image1d_array_ro_t
opencl.image1d_buffer_ro_t
opencl.image2d_ro_t
opencl.image2d_array_ro_t
opencl.image2d_depth_ro_t
opencl.image2d_array_depth_ro_t
opencl.image2d_msaa_ro_t
opencl.image2d_array_msaa_ro_t
opencl.image2d_msaa_depth_ro_t
opencl.image2d_array_msaa_depth_ro_t
opencl.image3d_ro_t
opencl.image1d_wo_t
opencl.image1d_array_wo_t
opencl.image1d_buffer_wo_t
opencl.image2d_wo_t
opencl.image2d_array_wo_t
opencl.image2d_depth_wo_t
opencl.image2d_array_depth_wo_t
opencl.image2d_msaa_wo_t
opencl.image2d_array_msaa_wo_t
opencl.image2d_msaa_depth_wo_t
opencl.image2d_array_msaa_depth_wo_t
opencl.image3d_wo_t
opencl.image1d_rw_t
opencl.image1d_array_rw_t
opencl.image1d_buffer_rw_t
opencl.image2d_rw_t
opencl.image2d_array_rw_t
opencl.image2d_depth_rw_t
opencl.image2d_array_depth_rw_t
opencl.image2d_msaa_rw_t
opencl.image2d_array_msaa_rw_t
opencl.image2d_msaa_depth_rw_t
opencl.image2d_array_msaa_depth_rw_t
opencl.image3d_rw_t
opencl.event_t
opencl.clk_event_t
opencl.queue_t
opencl.reserve_id_t
air.compile.denorms_disable
air.compile.fast_math_enable
air.compile.fast_math_disable
air.compile.framebuffer_fetch_disable
kernel function argument metadata
air.work_group_size
air.work_group_size_hint
texture1d<unknown, read>
texture1d<unknown, write>
texture2d<unknown, read>
texture2d<unknown, write>
texture1d_array<unknown, read>
texture1d_array<unknown, write>
texture2d_array<unknown, read>
texture2d_array<unknown, write>
texture_buffer<unknown, read>
texture_buffer<unknown, write>
depth2d<unknown, read>
depth2d<unknown, write>
depth2d_array<unknown, read>
depth2d_array<unknown, write>
texture2d_ms<unknown, read>
texture2d_ms<unknown, write>
texture2d_ms_array<unknown, read>
texture2d_ms_array<unknown, write>
depth2d_ms<unknown, read>
depth2d_ms<unknown, write>
depth2d_ms_array<unknown, read>
depth2d_ms_array<unknown, write>
texture3d<unknown, read>
texture3d<unknown, write>
event
__other_arg
__other_type
__local_arg
kernel function entry point
__entry_
_args
.cnt.addr
__kmpc_fork_call
__kmpc_global_thread_num
__kmpc_threadprivate_cached
__kmpc_critical
__kmpc_critical_with_hint
__kmpc_threadprivate_register
__kmpc_end_critical
__kmpc_cancel_barrier
__kmpc_barrier
__kmpc_for_static_fini
__kmpc_push_num_threads
__kmpc_flush
__kmpc_master
__kmpc_end_master
__kmpc_omp_taskyield
__kmpc_single
__kmpc_end_single
__kmpc_omp_task_alloc
__kmpc_omp_task
__kmpc_copyprivate
__kmpc_reduce
__kmpc_reduce_nowait
__kmpc_end_reduce
__kmpc_end_reduce_nowait
__kmpc_omp_task_begin_if0
__kmpc_omp_task_complete_if0
__kmpc_ordered
__kmpc_end_ordered
__kmpc_omp_taskwait
__kmpc_taskgroup
__kmpc_end_taskgroup
__kmpc_push_proc_bind
__kmpc_omp_task_with_deps
__kmpc_omp_wait_deps
__kmpc_cancellationpoint
__kmpc_cancel
__kmpc_push_num_teams
__kmpc_fork_teams
__kmpc_taskloop
__kmpc_doacross_init
__kmpc_doacross_fini
__kmpc_doacross_post
__kmpc_doacross_wait
__kmpc_task_reduction_init
__kmpc_task_reduction_get_th_data
__tgt_target
__tgt_target_nowait
__tgt_target_teams
__tgt_target_teams_nowait
__tgt_register_lib
__tgt_unregister_lib
__tgt_target_data_begin
__tgt_target_data_begin_nowait
__tgt_target_data_end
__tgt_target_data_end_nowait
__tgt_target_data_update
__tgt_target_data_update_nowait
__tgt_bin_desc
__tgt_offload_entry
__tgt_device_image
.kmpc_loc.addr
kmp_dim
dims
.offload_baseptrs
.offload_ptrs
.offload_sizes
offload_sizes
offload_maptypes
omp_offloading
entries_begin
entries_end
device_images
descriptor
descriptor_unreg
descriptor_reg
img_start
img_end
omp_offload.info
Offloading entry for target region is incorrect: either the address or the ID is invalid.
Offloading entry for declare target variable is incorrect: the address is invalid.
omp_offload.failed
omp_offload.cont
__captured_stmt
.cancel.exit
.cancel.continue
reduction_size
kmp_task_red_input_t
.rd_input.
.rd_input.gep.
red_init
red_fini
red_comb
omp.arrayinit.body
omp.arrayinit.done
omp.arrayinit.isempty
.omp.reduction.case2
atomic_reduction
gomp_critical_user_
reduction_func
kmp_task_t_with_privates
.kmp_privates.t
omp_task_privates_map
omp_task_entry
omp_task_dup
omp_task_destructor
kmp_cmplrdata_t
kmp_task_t
kmp_depend_info
.dep.arr.addr
cache
__omp_offloading_
_%x_
_ctor
_dtor
Unable to find target region on line '%0' in the device code.
__kmpc_global_ctor_
__kmpc_global_dtor_
__omp_threadprivate_init_
_decl_tgt_link_ptr
__kmpc_dispatch_next_4
__kmpc_dispatch_next_4u
__kmpc_dispatch_next_8
__kmpc_dispatch_next_8u
__kmpc_dispatch_fini_4
__kmpc_dispatch_fini_4u
__kmpc_dispatch_fini_8
__kmpc_dispatch_fini_8u
__kmpc_for_static_init_4
__kmpc_for_static_init_4u
__kmpc_for_static_init_8
__kmpc_for_static_init_8u
__kmpc_dispatch_init_4
__kmpc_dispatch_init_4u
__kmpc_dispatch_init_8
__kmpc_dispatch_init_8u
.omp.copyprivate.did_it
.omp.copyprivate.cpr_list
copy_func
.untied.next.
.untied.jmp.
.omp_outlined.
.untied.done.
omp_combiner
omp_initializer
.threadid_temp.
__omp_offloading
region_id
entry_name
entries
ident_t
Unable to parse host IR file '%0':'%1'
_globalized_locals_ty
__kmpc_kernel_init
__kmpc_kernel_deinit
__kmpc_spmd_kernel_init
__kmpc_spmd_kernel_deinit
__kmpc_kernel_prepare_parallel
__kmpc_kernel_parallel
__kmpc_kernel_end_parallel
__kmpc_serialized_parallel
__kmpc_end_serialized_parallel
__kmpc_shuffle_int32
__kmpc_shuffle_int64
__kmpc_nvptx_parallel_reduce_nowait
__kmpc_nvptx_simd_reduce_nowait
__kmpc_nvptx_teams_reduce_nowait
__kmpc_nvptx_end_reduce_nowait
__kmpc_data_sharing_init_stack
__kmpc_data_sharing_init_stack_spmd
__kmpc_data_sharing_push_stack
__kmpc_data_sharing_pop_stack
__kmpc_begin_sharing_variables
__kmpc_end_sharing_variables
__kmpc_get_shared_variables
__kmpc_parallel_level
__kmpc_is_spmd_exec_mode
.zero.addr
_exec_mode
_worker
.await.work
.select.workers
.execute.parallel
.terminate.parallel
.barrier.parallel
.exit
work_fn
exec_status
should_terminate
is_active
work_match
.execute.fn
.check.next
.termination.notifier
.worker
.mastercheck
.master
master_tid
nvptx_warp_size
nvptx_num_threads
nvptx_tid
.omp.deinit
.execute
.omp.reduction.red_list
_omp_reduction_shuffle_and_reduce_func
.omp.reduction.remote_reduce_list
then
ifcont
_omp_reduction_inter_warp_copy_func
__openmp_nvptx_data_transfer_temporary_storage
nvptx_lane_id
nvptx_warp_id
warp_master
num_active_threads
is_active_thread
_omp_reduction_copy_to_scratchpad
_omp_reduction_load_and_reduce
.omp.reduction.remote_red_list
.omp.reduction.default
.omp.reduction.case1
omp_if.then
omp_if.end
.omp.reduction.element
.shuffle.pre_cond
.shuffle.then
.shuffle.exit
omp.critical.loop
omp.critical.test
omp.critical.sync
omp.critical.body
omp.critical.exit
critical_counter
.sequential
.parcheck
master.then
omp_if.else
shared_arg_refs
_wrapper
global_args
__omp_outlined__
resign.cont
resign.nonnull
.ptrauth
llvm.ptrauth
<CGRecordLayout
  LLVMType:
  NonVirtualBaseLLVMType:
  IsZeroInitializable:
  BitFields:[
<CGBitFieldInfo
 Offset:
 IsSigned:
 StorageSize:
 StorageOffset:
.base
*** Dumping IRgen Record Layout
Record: 
for.end
for.cond
for.cond.cleanup
for.body
for.inc
agg.captured
srcloc
asmresult
sw.epilog
sw.default
do.end
do.cond
do.body
while.cond
while.end
while.body
while.exit
if.then
if.end
if.else
addr
sw.bb
sw.caserange
inbounds
LLVM IR generation of compound statement ('{}')
.casted
_debug__
.materialized_ref
.ref
omp.arraycpy.body
omp.arraycpy.done
omp.arraycpy.isempty
omp.arraycpy.srcElementPast
omp.arraycpy.destElementPast
omp.arraycpy.dest.element
omp.arraycpy.src.element
copyin.not.master
copyin.not.master.end
.omp.lastprivate.then
.omp.lastprivate.done
rhs.begin
lhs.begin
.omp.reduction.pu
.omp.reduction.pu.done
omp.body.continue
omp.inner.for.end
omp.inner.for.cond
omp.inner.for.cond.cleanup
omp.inner.for.body
omp.inner.for.inc
.omp.linear.pu
.omp.linear.pu.done
.omp.final.then
.omp.final.done
simd.if.then
simd.if.end
omp.dispatch.end
omp.dispatch.cond
omp.dispatch.cleanup
omp.dispatch.body
omp.dispatch.inc
omp.precond.then
omp.precond.end
omp.loop.exit
cancel.exit
cancel.cont
.omp.sections.lb.
.omp.sections.ub.
.omp.sections.st.
.omp.sections.il.
.omp.sections.iv.
.omp.sections.exit
.omp.sections.case
.priv.ptr.addr
.firstpriv.ptr.addr
.lastpriv.ptr.addr
taskloop.if.then
taskloop.if.end
adjust.null
adjust.notnull
adjust.end
return-adjusting thunk with incomplete parameter type
non-trivial argument copy for return-adjusting thunk
stdext
cannot compile inline asm
empty
irgen
LLVM IR Generation Time
LLVM IR generation of declaration
Per-file LLVM IR generation
 (hotness: 
LLVM IR generation of inline function
no-infs-fp-math
no-nans-fp-math
no-signed-zeros-fp-math
unsafe-fp-math
invariance-late-reassoc
invariance-late-contract
invariance-late-unsafe-fp-math
instrument-function-exit
__cyg_profile_func_exit
instrument-function-exit-inlined
min-legal-vector-width
func_addr.int
global_addr.int
global_addr
decoded_addr
sanitize_thread_no_checking_at_run_time
xray-instruction-threshold
no-jump-tables
profile-sample-accurate
allocapt
return.sloc.ptr
instrument-function-entry
__cyg_profile_func_enter
instrument-function-entry-inlined
__cyg_profile_func_enter_bare
fentry-call
agg.result
retval
skipcount
land.lhs.true
lor.lhs.false
cond.true
cond.false
vla.begin
vla.end
vla-init.loop
vla-init.cont
vla.cur
vla.next
vla-init.isdone
indirectgoto
indirect.goto.dest
array.begin
ro_ret
ro_else
resolver_entry
resolver_return
resolver_else
Emit limited coverage mapping information (experimental)
limited-coverage-experimental
Could not read profile %0: %1
.resolver
arch_
NumRegisterParameters
CodeView
StrictVTablePointers
StrictVTablePointersRequirement
wchar_size
min_enum_size
Cross-DSO CFI
cf-protection-return
cf-protection-branch
nvvm-reflect-ftz
opencl.spir.version
llvm.gcov
clang.global.decl.ptrs
opencl.ocl.version
llvm.linker.options
-framework
llvm.global.annotations
.generalized
.ifunc
.str
bss-section
data-section
rodata-section
implicit-section-name
target-features
Generating code for declaration
static initializer
.cp.rodata
cannot compile this %0 yet
function-instrument
xray-always
xray-log-args
xray-never
_ZSt9terminatev
?terminate@@YAXXZ
terminate
linkage spec
.cxx_destruct
.cxx_construct
$s15SwiftFoundation19_NSCFConstantStringCN
$s10Foundation19_NSCFConstantStringCN
$S15SwiftFoundation19_NSCFConstantStringCN
$S10Foundation19_NSCFConstantStringCN
__T015SwiftFoundation19_NSCFConstantStringCN
__T010Foundation19_NSCFConstantStringCN
__CFConstantStringClassReference
__TEXT,__cstring,cstring_literals
__TEXT,__ustring
.rodata
_unnamed_cfstring_
cfstring
__DATA,__cfstring
__objcFastEnumerationState
<string literal>
clang.decl.ptr
.virtual
__translate_sampler_initializer
Enable value profiling
enable-value-profiling
Simple C++ TBAA
Simple C/C++ TBAA
omnipotent char
any pointer
vtable pointer
anon
Expansion,
Skipped,
Gap,
 (Expanded file = 
__llvm_coverage_mapping
__llvm_coverage_names
File exit not handled before popRegions
non-trivial TLS destruction
__cxa_atexit
_tlv_atexit
__cxa_thread_atexit
__dso_handle
guard.uninitialized
init.check
__cxa_guard_acquire
tobool
__cxa_guard_release
__cxa_guard_abort
__asan_load_cxx_array_cookie
__asan_poison_cxx_array_cookie
__cxa_deleted_virtual
__cxa_pure_virtual
__cxxabiv1
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv123__fundamental_type_infoE
_ZTVN10__cxxabiv117__array_type_infoE
_ZTVN10__cxxabiv120__function_type_infoE
_ZTVN10__cxxabiv116__enum_type_infoE
_ZTVN10__cxxabiv119__pointer_type_infoE
_ZTVN10__cxxabiv129__pointer_to_member_type_infoE
vbase.offset.ptr
vbase.offset
__cxa_bad_cast
offset.to.top
__dynamic_cast
dynamic_cast.bad_cast
__cxa_bad_typeid
__clang_call_terminate
__cxa_begin_catch
exn.byref.tmp
exn.byref
exn.casted
__cxa_get_exception_ptr
__cxa_end_catch
__cxa_allocate_exception
__cxa_throw
__cxa_rethrow
complete-offset.ptr
memptr.ptr
memptr.adj
memptr.virtualbit
memptr.isvirtual
lhs.memptr.ptr
rhs.memptr.ptr
cmp.ptr
cmp.ptr.null
lhs.memptr.adj
rhs.memptr.adj
cmp.adj
or.adj
cmp.or.adj
memptr.ne
memptr.eq
memptr.isnull
src.adj
memptr.virtual
memptr.nonvirtual
memptr.end
memptr.adj.shifted
all-vtables
memptr.virtualfn
memptr.nonvirtualfn
__tls_guard
catchret.dest
thread wrappers
/include:___dyn_tls_init@12
/include:__dyn_tls_init
$initializer$
.CRT$XDU
__tls_init
__tlregdtor
more than 32 guarded initializations
init.end
_Init_thread_epoch
init.attempt
_Init_thread_header
_Init_thread_footer
_Init_thread_abort
_purecall
vbptr
vbtable
vbtindex
vbase_offs
rtti.CompleteObjectLocator
rtti.BaseClassDescriptor
__ImageBase
rtti.ClassHierarchyDescriptor
is_complete_object
Dtor.dtor_vbases
Dtor.skip_vbases
this.adjusted
is_most_derived
should_call_delete
vtordisp.value
vtordisp.ptr
ctor.init_vbases
ctor.skip_vbases
this.int8
vbptr.
__RTCastToVoid
__RTDynamicCast
__RTtypeid
??_7type_info@@6B@
rtti.TypeDescriptor
eh.CatchableTypeArray.
.xdata
eh.ThrowInfo
eh.CatchableType
_CxxThrowException
memptr.cmp0
memptr.cmp
memptr.tobool
lhs.0
rhs.0
memptr.cmp.first
memptr.cmp.rest
memptr.cmp.iszero
thunk
memptr.convert
memptr.converted
memptr.offset
memptr.vadjust
memptr.skip_vadjust
memptr.is_vbase
member pointer representation requires a complete class type for %0 to perform this expression
memptr.base
target_variant_triple
llvm.asan.globals
nosanitize
_kernel
(ABIArgInfo Kind=
Direct Type=
Extend
Ignore
InAlloca Offset=
Indirect Align=
 ByVal=
 Realign=
Expand
CoerceAndExpand Type=
TargetSpecific
varet
hard
soft
xcore.typestrings
crv:
ap.cur
extend
indirect
indirect.arg
ap.next
arg.addr
block_literal
enqueued-block
void*
local_arg
kernel_arg_addr_space
kernel_arg_access_qual
kernel_arg_type
kernel_arg_base_type
kernel_arg_type_qual
kernel_arg_name
workgroup
agent
subgroup
amdgpu-implicitarg-num-bytes
amdgpu-flat-work-group-size
amdgpu-waves-per-eu
amdgpu-num-sgpr
amdgpu-num-vgpr
argp.cur
argp.next
.aligned
probe-stack
__chkstk_darwin
stack-probe-size
no-stack-arg-probe
stackrealign
gp_offset_p
fits_in_gp
fp_offset_p
fits_in_fp
vaarg.in_reg
vaarg.in_mem
vaarg.end
vaarg.addr
overflow_arg_area_p
overflow_arg_area.next
/FAILIFMISMATCH:"
/DEFAULTLIB:
.lib
movl
%ebp, %ebp
// marker for objc_retainAutoreleaseReturnValue
={eax}
opencl.kernel_wg_size_info
overflow_arg_area_ptr
mem_addr
reg_count_ptr
reg_count
fits_in_regs
scaled_reg_count
reg_offset
reg_save_area_ptr
raw_reg_addr
reg_addr
raw_mem_addr
va_arg.addr
indirect_arg
__isr_
maxntidx
minctasm
nvvm.annotations
.vareal
.vaimag
vacplx
numUsedRegs
cond
using_regs
using_overflow
cont
aggr
r7, r7
// marker for objc_retainAutoreleaseReturnValue
no-prototype
fp, fp
// marker for objc_retainAutoreleaseReturnValue
vaarg.maybe_reg
vaarg.on_stack
gr_offs_p
gr_offs
vr_offs_p
vr_offs
align_regoffs
aligned_regoffs
new_reg_offs
inreg
reg_top_p
reg_top
stack_p
align_stack
new_stack
vaargs.addr
long-call
short-call
vaarg.promotion-temp
air.convert
air.source_file_name
fcp.guarded.init
fcp.guarded.cont
LIBCLANG_TIMING
LIBCLANG_OBJTRACKING
+++ %u translation units
--- %u translation units
LIBCLANG_DISABLE_PCH_VALIDATION
.pch
.pch-final
modules.timestamp
reading_modules
Reading modules
.map
LLBUILD_TASK_ID
clang -cc1 version 31001.43
 default target 
 warning
 error
 generated
 when compiling for host
 when compiling for 
frontend
Clang front-end time report
Clang front-end timer
.tmp
loading.
Loading 
__inferred_module.map
preloading.
Preloading 
expected
-verify=
-verify-ignore-unexpected=
opencl-c.h
metal_types
ARC migration
ObjC migration
libc++
no-stdlibcxx-not-found
__CET__=1
__CET__=2
__CET__=3
__TRACEPOINT_INSTRUMENTED__
spir-compat
-x ir
-fxray-instrumentation-bundle=
ieee
preserve-sign
positive-zero
-fdiagnostics-show-hotness
-fdiagnostics-hotness-threshold=
-fsanitize-recover=
-fsanitize-trap=
iso9899:1990
gnu90
iso9899:1999
iso9899:2011
iso9899:2017
c++03
gnu++03
osx-metal1.0
osx-metal1.1
osx-metal1.2
osx-metal2.0
-fgnu89-inline
-faddress-space-map-mangling=
-fms-memptr-rep=
-fdefault-calling-conv=
-fdefault-calling-conv
LLVM IR
Objective-C
Objective-C++
deep
cfg-implicit-dtors
cfg-temporary-dtors
cfg-lifetime
cfg-loopexit
cfg-rich-constructors
cfg-scopes
c++-template-inlining
c++-stdlib-inlining
c++-allocator-inlining
c++-shared_ptr-inlining
c++-temp-dtor-inlining
suppress-null-return-paths
avoid-suppressing-null-argument-paths
suppress-inlined-defensive-checks
c++-container-inlining
suppress-c++-stdlib
crosscheck-with-z3
report-in-main-source-file
stable-report-filename
serialize-stats
objc-inlining
prune-paths
cfg-conditional-static-initializers
faux-bodies
elide-constructors
inline-lambdas
widen-loops
unroll-loops
notes-as-events
aggressive-binary-operation-simplification
eagerly-assume
experimental-enable-naive-ctu-analysis
expand-macros
ipa-always-inline-size
graph-trim-interval
min-cfg-size-treat-functions-as-large
max-symbol-complexity
max-times-inline-large
max-inlinable-size
max-nodes
region-store-small-struct-limit
ctu-dir
ctu-index-name
externalFnMap.txt
model-path
c++-inlining
destructors
inlining
dynamic-bifurcate
exploration_strategy
unexplored_first_queue
a filename
an unsigned
a boolean
<stdin>
 #${}^!
digraph "dependencies" {
header_
 [ shape="box", label="
while building module '
in module '
in file included from 
(skipping 
 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
expanded from here
expanded from macro '
<module-includes>
%0 was deserialized
PCH DECL: 
extern "C" {
#import "
STATISTICS FOR '
unknown module format
^(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$
Note: including file:
/usr/include/c++/v1
/usr/include/c++/4.2.1
i686-apple-darwin10
/usr/include/c++/4.0.0
i686-apple-darwin8
arm-apple-darwin10
arm64-apple-darwin10
powerpc-apple-darwin10
4.7.3
/usr/lib/gcc
i686-pc-cygwin
4.5.3
4.3.4
4.3.2
/usr/include/c++/5.0
amd64
/usr/include/g++
/usr/gnu/include/c++/4.4.3
/usr/local/include
../../..
/boot/system/non-packaged/develop/headers
/boot/system/develop/headers/os
/boot/system/develop/headers/os/app
/boot/system/develop/headers/os/arch
/boot/system/develop/headers/os/device
/boot/system/develop/headers/os/drivers
/boot/system/develop/headers/os/game
/boot/system/develop/headers/os/interface
/boot/system/develop/headers/os/kernel
/boot/system/develop/headers/os/locale
/boot/system/develop/headers/os/mail
/boot/system/develop/headers/os/media
/boot/system/develop/headers/os/midi
/boot/system/develop/headers/os/midi2
/boot/system/develop/headers/os/net
/boot/system/develop/headers/os/opengl
/boot/system/develop/headers/os/storage
/boot/system/develop/headers/os/support
/boot/system/develop/headers/os/translation
/boot/system/develop/headers/os/add-ons/graphics
/boot/system/develop/headers/os/add-ons/input_server
/boot/system/develop/headers/os/add-ons/mail_daemon
/boot/system/develop/headers/os/add-ons/registrar
/boot/system/develop/headers/os/add-ons/screen_saver
/boot/system/develop/headers/os/add-ons/tracker
/boot/system/develop/headers/os/be_apps/Deskbar
/boot/system/develop/headers/os/be_apps/NetPositive
/boot/system/develop/headers/os/be_apps/Tracker
/boot/system/develop/headers/3rdparty
/boot/system/develop/headers/bsd
/boot/system/develop/headers/glibc
/boot/system/develop/headers/posix
/boot/system/develop/headers
/usr/include/w32api
SCE_ORBIS_SDK_DIR
/target/include
/target/include_common
/include
/XcodeDefault.xctoolchain/usr/include
/usr/include
/System/Library/Frameworks
/Library/Frameworks
#include "..." search starts here:
End of search list.
#include <...> search starts here:
 (framework directory)
 (headermap)
ignoring duplicate directory "
  as it is a non-system directory that duplicates 
a system directory
/include/c++
/include/c++/
/include/c++/backward
/backward
ignoring nonexistent directory "
# 1 "<built-in>" 3
_GLIBCXX_PREDEFINED_OBJC_ARC_IS_SCALAR
namespace std {
struct __true_type;
struct __false_type;
template<typename _Tp> struct __is_scalar;
template<typename _Tp>
struct __is_scalar<__attribute__((objc_ownership(strong))) _Tp> {
  enum { __value = 0 };
  typedef __false_type __type;
struct __is_scalar<__attribute__((objc_ownership(weak))) _Tp> {
struct __is_scalar<__attribute__((objc_ownership(autoreleasing)))
 _Tp> {
__STDC__
__STDC_HOSTED__
__STDC_VERSION__
201710L
201112L
199901L
199409L
__cplusplus
201707L
201103L
199711L
__STDCPP_DEFAULT_NEW_ALIGNMENT__
__OBJC__
__OPENCL_CPP_VERSION__
__CL_CPP_VERSION_1_0__
__OPENCL_C_VERSION__
CL_VERSION_1_0
CL_VERSION_1_1
CL_VERSION_1_2
CL_VERSION_2_0
__ENDIAN_LITTLE__
__FAST_RELAXED_MATH__
__ASSEMBLER__
__CUDA__
__HIP__
__HIPCC__
__HIP_DEVICE_COMPILE__
# 1 "<command line>" 1
# 1 "<built-in>" 2
__llvm__
__clang__
__clang_major__
31001
__clang_minor__
__clang_patchlevel__
__clang_version__
"31001.43 
__GNUC_MINOR__
__GNUC_PATCHLEVEL__
__GNUC__
__GXX_ABI_VERSION
1002
__ATOMIC_RELAXED
__ATOMIC_CONSUME
__ATOMIC_ACQUIRE
__ATOMIC_RELEASE
__ATOMIC_ACQ_REL
__ATOMIC_SEQ_CST
__OPENCL_MEMORY_SCOPE_WORK_ITEM
__OPENCL_MEMORY_SCOPE_WORK_GROUP
__OPENCL_MEMORY_SCOPE_DEVICE
__OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES
__OPENCL_MEMORY_SCOPE_SUB_GROUP
__PRAGMA_REDEFINE_EXTNAME
__VERSION__
"4.2.1 Compatible 
__STRICT_ANSI__
__GXX_EXPERIMENTAL_CXX0X__
__OBJC2__
OBJC_ZEROCOST_EXCEPTIONS
__OBJC_GC__
__NEXT_RUNTIME__
__OBJC_GNUSTEP_RUNTIME_ABI__
__OBJFW_RUNTIME_ABI__
__attribute__((iboutlet))
IBOutletCollection(ClassName)
__attribute__((iboutletcollection(ClassName)))
void)__attribute__((ibaction)
IBInspectable
IB_DESIGNABLE
__OBJC_BOOL_IS_BOOL
__cpp_rtti
__cpp_exceptions
__cpp_unicode_characters
200704L
__cpp_raw_strings
200710L
__cpp_unicode_literals
__cpp_user_defined_literals
200809L
__cpp_lambdas
200907L
__cpp_constexpr
200704
201304L
201603L
__cpp_range_based_for
200907
__cpp_static_assert
200410
201411L
__cpp_decltype
200707L
__cpp_attributes
__cpp_rvalue_references
200610L
__cpp_variadic_templates
__cpp_initializer_lists
200806L
__cpp_delegating_constructors
200604L
__cpp_nsdmi
__cpp_inheriting_constructors
201511L
__cpp_ref_qualifiers
__cpp_alias_templates
__cpp_threadsafe_static_init
__cpp_binary_literals
__cpp_digit_separators
201309L
__cpp_init_captures
__cpp_generic_lambdas
__cpp_decltype_auto
__cpp_return_type_deduction
__cpp_aggregate_nsdmi
__cpp_variable_templates
__cpp_sized_deallocation
__cpp_hex_float
__cpp_inline_variables
201606L
__cpp_noexcept_function_type
201510L
__cpp_capture_star_this
__cpp_if_constexpr
__cpp_deduction_guides
__cpp_template_auto
__cpp_namespace_attributes
__cpp_enumerator_attributes
__cpp_nested_namespace_definitions
__cpp_variadic_using
201611L
__cpp_aggregate_bases
__cpp_structured_bindings
__cpp_nontype_template_args
__cpp_fold_expressions
__cpp_guaranteed_copy_elision
__cpp_nontype_template_parameter_auto
__cpp_aligned_new
__cpp_template_template_args
__cpp_experimental_concepts
__cpp_coroutines
__cpp_char8_t
201803L
__METAL_IOS__
__METAL_MACOS__
__METAL_VERSION__
__METAL_ACCESS_SAMPLE__
__METAL_ACCESS_READ__
__METAL_ACCESS_WRITE__
__METAL_ACCESS_READ_WRITE__
__METAL_ADDRESS_CLAMP_TO_ZERO__
__METAL_ADDRESS_CLAMP_TO_EDGE__
__METAL_ADDRESS_REPEAT__
__METAL_ADDRESS_MIRRORED_REPEAT__
__METAL_ADDRESS_CLAMP_TO_BORDER__
__METAL_BORDER_COLOR_TRANSPARENT_BLACK__
__METAL_BORDER_COLOR_OPAQUE_BLACK__
__METAL_BORDER_COLOR_OPAQUE_WHITE__
__METAL_COMPARE_FUNC_NONE__
__METAL_COMPARE_FUNC_LESS__
__METAL_COMPARE_FUNC_LESS_EQUAL__
__METAL_COMPARE_FUNC_GREATER__
__METAL_COMPARE_FUNC_GREATER_EQUAL__
__METAL_COMPARE_FUNC_EQUAL__
__METAL_COMPARE_FUNC_NOT_EQUAL__
__METAL_COMPARE_FUNC_ALWAYS__
__METAL_COMPARE_FUNC_NEVER__
__METAL_COORD_NORMALIZED__
__METAL_COORD_PIXEL__
__METAL_FILTER_NEAREST__
__METAL_FILTER_LINEAR__
__METAL_FILTER_BICUBIC__
__METAL_FAST_MATH__
__METAL_HALF_MATH__
__METAL_NATIVE_MATH__
__METAL_PRECISE_MATH__
__METAL_MAG_FILTER_NEAREST__
__METAL_MAG_FILTER_LINEAR__
__METAL_MAG_FILTER_BICUBIC__
__METAL_MEMORY_FLAGS_NONE__
__METAL_MEMORY_FLAGS_DEVICE__
__METAL_MEMORY_FLAGS_THREADGROUP__
__METAL_MEMORY_FLAGS_TEXTURE__
__METAL_MEMORY_FLAGS_THREADGROUP_IMAGEBLOCK__
__METAL_MEMORY_ORDER_RELAXED__
__METAL_MEMORY_ORDER_ACQUIRE__
__METAL_MEMORY_ORDER_RELEASE__
__METAL_MEMORY_ORDER_ACQ_REL__
__METAL_MEMORY_ORDER_SEQ_CST__
__METAL_MEMORY_SCOPE_THREADGROUP__
__METAL_MEMORY_SCOPE_DEVICE__
__METAL_MEMORY_SCOPE_SIMDGROUP__
__METAL_MIN_FILTER_NEAREST__
__METAL_MIN_FILTER_LINEAR__
__METAL_MIN_FILTER_BICUBIC__
__METAL_MIP_FILTER_NONE__
__METAL_MIP_FILTER_NEAREST__
__METAL_MIP_FILTER_LINEAR__
__METAL_OS_LOG_TYPE_DEFAULT__
__METAL_OS_LOG_TYPE_INFO__
__METAL_OS_LOG_TYPE_DEBUG__
__METAL_OS_LOG_TYPE_ERROR__
__METAL_OS_LOG_TYPE_FAULT__
__METAL_RAYTRACING_FORCED_OPACITY_NONE__
__METAL_RAYTRACING_FORCED_OPACITY_OPAQUE__
__METAL_RAYTRACING_FORCED_OPACITY_NON_OPAQUE__
__METAL_RAYTRACING_GEOMETRY_CULL_MODE_NONE__
__METAL_RAYTRACING_GEOMETRY_CULL_MODE_TRIANGLE__
__METAL_RAYTRACING_GEOMETRY_CULL_MODE_BOUNDING_BOX__
__METAL_RAYTRACING_GEOMETRY_TYPE_NONE__
__METAL_RAYTRACING_GEOMETRY_TYPE_TRIANGLE__
__METAL_RAYTRACING_GEOMETRY_TYPE_BOUNDING_BOX__
__METAL_RAYTRACING_INTERSECTION_TAG_NONE__
__METAL_RAYTRACING_INTERSECTION_TAG_INSTANCING__
__METAL_RAYTRACING_INTERSECTION_TAG_TRIANGLE_DATA__
__METAL_RAYTRACING_INTERSECTION_TAG_WORLD_SPACE_DATA__
__METAL_RAYTRACING_INTERSECTION_TYPE_NONE__
__METAL_RAYTRACING_INTERSECTION_TYPE_TRIANGLE__
__METAL_RAYTRACING_INTERSECTION_TYPE_BOUNDING_BOX__
__METAL_RAYTRACING_OPACITY_CULL_MODE_NONE__
__METAL_RAYTRACING_OPACITY_CULL_MODE_OPAQUE__
__METAL_RAYTRACING_OPACITY_CULL_MODE_NON_OPAQUE__
__METAL_RAYTRACING_TRIANGLE_CULL_MODE_NONE__
__METAL_RAYTRACING_TRIANGLE_CULL_MODE_FRONT__
__METAL_RAYTRACING_TRIANGLE_CULL_MODE_BACK__
__METAL_REDUCTION_WEIGHTED_AVERAGE__
__METAL_REDUCTION_MINIMUM__
__METAL_REDUCTION_MAXIMUM__
__METAL_ROUNDING_RTE__
__METAL_ROUNDING_RTZ__
__METAL_ROUNDING_RTP__
__METAL_ROUNDING_RTN__
__METAL_WINDING_CLOCKWISE__
__METAL_WINDING_COUNTERCLOCKWISE__
__HAVE_ARRAYS_OF_BUFFERS__
__HAVE_ARRAYREFS_OF_BUFFERS__
__HAVE_ARRAYREFS_OF_SAMPLERS__
__HAVE_ARRAYREFS_OF_TEXTURES__
__HAVE_NATIVE_DOUBLE__
__HAVE_NATIVE_LONG_LONG__
__HAVE_NATIVE_WIDE_VECTORS__
__MAX_FUNCTION_CONSTANT_INDEX__
__METAL_TEXTURE_WRITE_ROUNDING_MODE_NATIVE__
__METAL_TEXTURE_WRITE_ROUNDING_MODE_RTE__
__METAL_TEXTURE_WRITE_ROUNDING_MODE_RTZ__
__METAL_TEXTURE_WRITE_ROUNDING_MODE__
__CONSTANT_CFSTRINGS__
__PASCAL_STRINGS__
__block
__attribute__((__blocks__(byref)))
__BLOCKS__
__EXCEPTIONS
__GXX_RTTI
__USING_SJLJ_EXCEPTIONS__
__SEH__
__ARM_DWARF_EH__
__DEPRECATED
__GNUG__
__GXX_WEAK__
_WCHAR_T_DEFINED
_NATIVE_WCHAR_T_DEFINED
__OPTIMIZE__
__OPTIMIZE_SIZE__
__FAST_MATH__
__RELAXED_MATH__
__ORDER_LITTLE_ENDIAN__
1234
__ORDER_BIG_ENDIAN__
4321
__ORDER_PDP_ENDIAN__
3412
__BYTE_ORDER__
__BIG_ENDIAN__
_ILP32
__ILP32__
__CHAR_BIT__
__SCHAR_MAX__
__SHRT_MAX__
__INT_MAX__
__LONG_MAX__
__LONG_LONG_MAX__
__WCHAR_MAX__
__WINT_MAX__
__INTMAX_MAX__
__SIZE_MAX__
__UINTMAX_MAX__
__PTRDIFF_MAX__
__INTPTR_MAX__
__UINTPTR_MAX__
__SIZEOF_DOUBLE__
__SIZEOF_FLOAT__
__SIZEOF_INT__
__SIZEOF_LONG__
__SIZEOF_LONG_DOUBLE__
__SIZEOF_LONG_LONG__
__SIZEOF_POINTER__
__SIZEOF_SHORT__
__SIZEOF_PTRDIFF_T__
__SIZEOF_SIZE_T__
__SIZEOF_WCHAR_T__
__SIZEOF_WINT_T__
__SIZEOF_INT128__
__INTMAX_TYPE__
__INTMAX
__INTMAX_C_SUFFIX__
__UINTMAX_TYPE__
__UINTMAX
__UINTMAX_C_SUFFIX__
__INTMAX_WIDTH__
__PTRDIFF_TYPE__
__PTRDIFF
__PTRDIFF_WIDTH__
__INTPTR_TYPE__
__INTPTR
__INTPTR_WIDTH__
__SIZE_TYPE__
__SIZE
__SIZE_WIDTH__
__WCHAR_TYPE__
__WCHAR_WIDTH__
__WINT_TYPE__
__WINT_WIDTH__
__SIG_ATOMIC_WIDTH__
__SIG_ATOMIC_MAX__
__CHAR16_TYPE__
__CHAR32_TYPE__
__UINTMAX_WIDTH__
__UINTPTR_TYPE__
__UINTPTR
__UINTPTR_WIDTH__
HALF
FLT16
LDBL
__POINTER_WIDTH__
__BIGGEST_ALIGNMENT__
__CHAR_UNSIGNED__
__WCHAR_UNSIGNED__
__WINT_UNSIGNED__
__USER_LABEL_PREFIX__
__FINITE_MATH_ONLY__
__GNUC_GNU_INLINE__
__GNUC_STDC_INLINE__
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL
__CLANG_ATOMIC_
__GCC_ATOMIC_
__NO_INLINE__
__PIC__
__pic__
__PIE__
__pie__
__FLT_EVAL_METHOD__
__FLT_RADIX__
__DECIMAL_DIG__
__LDBL_DECIMAL_DIG__
__HALF_RADIX__
__FLT16_RADIX__
__DBL_RADIX__
__SSP__
__SSP_STRONG__
__SSP_ALL__
__clang_analyzer__
__attribute__((objc_gc(strong)))
__attribute__((objc_ownership(weak)))
__attribute__((objc_ownership(strong)))
__attribute__((objc_ownership(autoreleasing)))
__attribute__((objc_ownership(none)))
__nonnull
__null_unspecified
__nullable
__FP_ILOGB0__
(-__INT_MAX__ - 1)
__FP_ILOGBNAN__
__APPLE_EMBEDDED_SIMULATOR__
_OPENMP
201307
201511
201107
__CLANG_CUDA_APPROX_TRANSCENDENTALS__
cl_khr_select_fprounding_mode
cl_khr_d3d10_sharing
cles_khr_int64
cl_khr_context_abort
cl_khr_d3d11_sharing
cl_khr_dx9_media_sharing
cl_khr_initialize_memory
cl_khr_spir
cl_khr_egl_event
cl_khr_egl_image
cl_khr_srgb_image_writes
cl_khr_terminate_context
cl_intel_subgroups
cl_intel_subgroups_short
__IMAGE_SUPPORT__
__MAX_BUFFERS__
__MAX_COLORS__
__MAX_CONSTANT_BUFFERS__
__MAX_CONSTANT_BUFFER_SIZE__
__MAX_SAMPLERS__
__MAX_TEXTURES__
__MAX_READ_WRITE_TEXTURES__
__MAX_PATCH_DATA_ATTRIBUTES__
__MAX_TESSELLATION_CONTROL_POINTS__
__MAX_THREADGROUP_BUFFERS__
__GLIBCXX_TYPE_INT_N_0
__GLIBCXX_BITSIZE_INT_N_0
BOOL_LOCK_FREE
CHAR_LOCK_FREE
CHAR8_T_LOCK_FREE
CHAR16_T_LOCK_FREE
CHAR32_T_LOCK_FREE
WCHAR_T_LOCK_FREE
SHORT_LOCK_FREE
INT_LOCK_FREE
LONG_LOCK_FREE
LLONG_LOCK_FREE
POINTER_LOCK_FREE
__INT_FAST
__UINT_FAST
_TYPE__
_MAX__
__INT_LEAST
__UINT_LEAST
__INT
__UINT
_C_SUFFIX__
5.9604644775390625e-8
1.40129846e-45
4.9406564584124654e-324
3.64519953188247460253e-4951
4.94065645841246544176568792868221e-324
6.47517511943802511092443895822764655e-4966
9.765625e-4
1.19209290e-7
2.2204460492503131e-16
1.08420217248550443401e-19
1.92592994438723585305597794258492732e-34
6.103515625e-5
1.17549435e-38
2.2250738585072014e-308
3.36210314311209350626e-4932
2.00416836000897277799610805135016e-292
3.36210314311209350626267781732175260e-4932
6.5504e+4
3.40282347e+38
1.7976931348623157e+308
1.18973149535723176502e+4932
1.79769313486231580793728971405301e+308
1.18973149535723176508575932662800702e+4932
DENORM_MIN__
HAS_DENORM__
DIG__
DECIMAL_DIG__
EPSILON__
HAS_INFINITY__
HAS_QUIET_NAN__
MANT_DIG__
MAX_10_EXP__
MAX_EXP__
MAX__
MIN_10_EXP__
MIN_EXP__
MIN__
M_E__
2.71828182845904523536028747135266250
M_LOG2E__
1.44269504088896340735992468100189214
M_LOG10E__
0.434294481903251827651128918916605082
M_LN2__
0.693147180559945309417232121458176568
M_LN10__
2.3025850929940456840179914546843642
M_PI__
3.14159265358979323846264338327950288
M_PI_2__
1.57079632679489661923132169163975144
M_PI_4__
0.785398163397448309615660845819875721
M_1_PI__
0.318309886183790671537767526745028724
M_2_PI__
0.636619772367581343075535053490057448
M_2_SQRTPI__
1.12837916709551257389615890312154517
M_SQRT2__
1.41421356237309504880168872420969808
M_SQRT1_2__
0.707106781186547524400844362104849039
ouxX
_FMT
getLangStandardForKind() on unspecified kind
ISO C 1990
iso9899:199409
ISO C 1990 with amendment 1
gnu89
ISO C 1990 with GNU extensions
ISO C 1999
gnu99
ISO C 1999 with GNU extensions
ISO C 2011
gnu11
ISO C 2011 with GNU extensions
ISO C 2017
gnu17
ISO C 2017 with GNU extensions
c++98
ISO C++ 1998 with amendments
gnu++98
ISO C++ 1998 with amendments and GNU extensions
c++11
ISO C++ 2011 with amendments
gnu++11
ISO C++ 2011 with amendments and GNU extensions
c++14
ISO C++ 2014 with amendments
gnu++14
ISO C++ 2014 with amendments and GNU extensions
c++17
ISO C++ 2017 with amendments
gnu++17
ISO C++ 2017 with amendments and GNU extensions
c++2a
Working draft for ISO C++ 2020
gnu++2a
Working draft for ISO C++ 2020 with GNU extensions
cl1.0
OpenCL 1.0
cl1.1
OpenCL 1.1
cl1.2
OpenCL 1.2
cl2.0
OpenCL 2.0
OpenCL C++ 1.0
ios-metal1.0
Metal 1.0 (iOS)
ios-metal1.1
Metal 1.1 (iOS)
ios-metal1.2
Metal 1.2 (iOS)
ios-metal2.0
Metal 2.0 (iOS)
ios-metal2.1
Metal 2.1 (iOS)
ios-metal2.2
Metal 2.2 (iOS)
ios-metal2.3
Metal 2.3 (iOS)
macos-metal1.0
Metal 1.0 (macOS)
macos-metal1.1
Metal 1.1 (macOS)
macos-metal1.2
Metal 1.2 (macOS)
macos-metal2.0
Metal 2.0 (macOS)
macos-metal2.1
Metal 2.1 (macOS)
macos-metal2.2
Metal 2.2 (macOS)
macos-metal2.3
Metal 2.3 (macOS)
cuda
NVIDIA CUDA(tm)
Type: blah 
*** Dumping AST Record Layout
 Size:
Alignment:
sizeof=
align=
FieldOffsets: [
<dict>
  <key>main-file</key>
  <key>dwarf-debug-flags</key>
  <key>diagnostics</key>
  <array>
  </array>
</dict>
    <dict>
      <key>level</key>
      <key>filename</key>
      <key>line</key>
<integer>
</integer>
      <key>column</key>
      <key>message</key>
      <key>ID</key>
      <key>WarningOption</key>
    </dict>
<string>
</string>
&amp;
&lt;
&gt;
&apos;
&quot;
vfs.yaml
Meta
Diag
DiagInfo
SrcRange
CatName
DiagFlag
FileName
FixIt
Invalid encoding
Unexpected end of file
Failed to open diagnostics file
Invalid diagnostics signature
Parse error reading diagnostics
Malformed block at top-level of diagnostics
Malformed sub-block in a diagnostic
Malformed BlockInfo block
Malformed Metadata block
Malformed Diagnostic block
Malformed Diagnostic record
No version provided in diagnostics
Unsupported diagnostics version
Bitcode constructs that are not supported in diagnostics appear
Generic error occurred while handling a record
clang.serialized_diags
Read extension block message: %s
Hello from 
While building module '
' imported from 
In module '
In file included from 
In included file:
  ...
     
fix-it:"
<U+>
<XX>
 (in PCH)
fatal error
(clang)
 [-ferror-limit=]
 [-Werror
warn
  (frontend)
 File 
 Line 
  File *
  File 
 Line *
 (directive at 
posix
-analyzer-checker
debug.AnalysisOrder,debug.Stats,alpha.security.ArrayBound,alpha.security.ArrayBoundV2,osx.cocoa.AutoreleaseWrite,alpha.unix.BlockInCriticalSection,alpha.core.BoolAssignment,core.builtin.BuiltinFunctions,osx.coreFoundation.CFError,debug.DumpCFG,debug.ViewCFG,osx.coreFoundation.CFNumber,osx.coreFoundation.CFRetainRelease,alpha.unix.cstring.BufferOverlap,alpha.unix.cstring.NotNullTerminated,unix.cstring.NullArg,alpha.unix.cstring.OutOfBounds,unix.cstring.BadSizeArg,cplusplus.SelfAssignment,core.CallAndMessage,alpha.core.CallAndMessageUnInitRefArg,debug.DumpCalls,debug.DumpCallGraph,debug.ViewCallGraph,alpha.core.CastSize,alpha.core.CastToStruct,alpha.unix.Chroot,osx.cocoa.ClassRelease,alpha.clone.CloneChecker,debug.ConfigDumper,alpha.core.Conversion,valist.CopyToSelf,deadcode.DeadStores,alpha.cplusplus.DeleteWithNonVirtualDtor,core.NullDereference,alpha.osx.cocoa.DirectIvarAssignment,alpha.osx.cocoa.DirectIvarAssignmentForAnnotatedFunctions,core.DivideZero,debug.DumpDominators,alpha.core.DynamicTypeChecker,core.DynamicTypePropagation,optin.osx.cocoa.localizability.EmptyLocalizationContextChecker,alpha.cplusplus.EnumCastOutOfRange,debug.ViewExplodedGraph,debug.ExprInspection,alpha.core.FixedAddr,security.FloatLoopCounter,optin.performance.GCDAntipattern,apiModeling.google.GTest,alpha.security.taint.TaintPropagation,alpha.core.IdenticalExpr,cplusplus.InnerPointer,alpha.osx.cocoa.InstanceVariableInvalidation,alpha.cplusplus.InvalidatedIterator,alpha.cplusplus.IteratorRange,alpha.llvm.Conventions,debug.DumpLiveStmts,debug.DumpLiveVars,optin.mpi.MPI-Checker,osx.SecKeychainAPI,osx.API,unix.Malloc,alpha.security.MallocOverflow,unix.MallocSizeof,unix.MismatchedDeallocator,alpha.cplusplus.MismatchedIterator,alpha.osx.cocoa.MissingInvalidationMethod,alpha.security.MmapWriteExec,cplusplus.Move,osx.cocoa.NSAutoreleasePool,osx.cocoa.NSError,cplusplus.NewDelete,cplusplus.NewDeleteLeaks,osx.cocoa.NilArg,core.builtin.NoReturnFunctions,optin.osx.cocoa.localizability.NonLocalizedStringChecker,core.NonNullParamChecker,core.NonnilStringConstants,nullability.NullPassedToNonnull,nullability.NullReturnedFromNonnull,nullability.NullableDereferenced,nullability.NullablePassedToNonnull,nullability.NullableReturnedFromNonnull,osx.NumberObjectConversion,osx.OSObjectRetainCount,osx.cocoa.AtSync,osx.coreFoundation.containers.PointerSizedValues,osx.coreFoundation.containers.OutOfBounds,osx.cocoa.Dealloc,osx.cocoa.ObjCGenerics,osx.cocoa.Loops,osx.cocoa.IncompatibleMethodTypes,osx.cocoa.NonNilReturnValue,osx.ObjCProperty,osx.cocoa.SelfInit,osx.cocoa.MissingSuperCall,osx.cocoa.SuperDealloc,osx.cocoa.UnusedIvars,optin.performance.Padding,alpha.osx.cocoa.localizability.PluralMisuseChecker,alpha.core.PointerArithm,alpha.core.PointerSub,alpha.unix.PthreadLock,osx.cocoa.RetainCount,alpha.security.ReturnPtrRange,core.uninitialized.UndefReturn,osx.cocoa.RunLoopAutoreleaseLeak,alpha.unix.SimpleStream,alpha.core.SizeofPtr,alpha.core.StackAddressAsyncEscape,core.StackAddressEscape,apiModeling.StdCLibraryFunctions,alpha.unix.Stream,debug.TaintTest,alpha.core.TestAfterDivZero,debug.DumpTraversal,apiModeling.TrustNonnull,security.insecureAPI.UncheckedReturn,core.uninitialized.Branch,core.uninitialized.CapturedBlockVariable,core.UndefinedBinaryOperatorResult,core.uninitialized.ArraySubscript,core.uninitialized.Assign,valist.Uninitialized,alpha.cplusplus.UninitializedObject,unix.API,optin.portability.UnixAPI,alpha.deadcode.UnreachableCode,valist.Unterminated,core.VLASize,osx.cocoa.VariadicMethodTypes,unix.Vfork,optin.cplusplus.VirtualCall,security.insecureAPI.bcmp,security.insecureAPI.bcopy,security.insecureAPI.bzero,security.insecureAPI.getpw,security.insecureAPI.gets,security.insecureAPI.mkstemp,security.insecureAPI.mktemp,security.insecureAPI.rand,security.insecureAPI.strcpy,security.insecureAPI.vfork,alpha.unix.cstring,unix,alpha.clone,alpha,debug,osx.coreFoundation,apiModeling,core,optin,unix.cstring,optin.portability,nullability,core.uninitialized,apiModeling.google,alpha.security.taint,alpha.deadcode,alpha.cplusplus,alpha.osx.cocoa,optin.cplusplus,optin.osx.cocoa,deadcode,optin.performance,cplusplus,osx.coreFoundation.containers,osx.cocoa,core.builtin,alpha.llvm,optin.osx.cocoa.localizability,alpha.osx.cocoa.localizability,optin.osx,valist,alpha.osx,alpha.security,security,alpha.unix,osx,llvm,alpha.core,security.insecureAPI,optin.mpi,
-std=
c89,c90,iso9899:1990,iso9899:199409,gnu89,gnu90,c99,iso9899:1999,c9x,iso9899:199x,gnu99,gnu9x,c11,iso9899:2011,c1x,iso9899:201x,gnu11,gnu1x,c17,iso9899:2017,gnu17,c++98,c++03,gnu++98,gnu++03,c++11,c++0x,gnu++11,gnu++0x,c++14,c++1y,gnu++14,gnu++1y,c++17,c++1z,gnu++17,gnu++1z,c++2a,gnu++2a,cl1.0,cl,cl1.1,cl1.2,cl2.0,c++,CL,CL1.1,CL1.2,CL2.0,ios-metal1.0,ios-metal1.1,ios-metal1.2,ios-metal2.0,ios-metal2.1,ios-metal2.2,ios-metal2.3,macos-metal1.0,macos-metal1.1,macos-metal1.2,macos-metal2.0,macos-metal2.1,macos-metal2.2,macos-metal2.3,osx-metal1.0,osx-metal1.1,osx-metal1.2,osx-metal2.0,cuda,hip,
--std=
<action group>
<CompileOnly group>
<g group>
<W/R group>
<I group>
<I/i group>
<T/e/s/t/u group>
<M group>
<O group>
<Preprocessor group>
<R group>
<R (with value) group>
<Static analyzer group>
<T group>
<W group>
<W (with value) group>
</M group>
</volatile group>
<clang-cl options>
CL.EXE COMPATIBILITY OPTIONS
<clang-cl compile-only options>
<clang-cl ignored options>
<clang i group>
<clang ignored f group>
<clang_ignored_gcc_optimization_f_Group>
<clang legacy flags>
<clang ignored m group>
<d group>
<f group>
<f (clang-only) group>
<gN group>
<gTune group>
<g flags group>
<gfortran group>
<ggdbN group>
<i group>
<clang internal options>
<clang debug/development internal options>
DEBUG/DEVELOPMENT OPTIONS
<clang driver internal options>
DRIVER OPTIONS
<m group>
<aarch64 features group>
<amdgpu features group>
<arm features group>
<hexagon features group>
<m libc group>
<mips features group>
<ppc features group>
<riscv features group>
<wasm features group>
<x86 features group>
<opencl group>
<pedantic group>
<reserved libs group>
<u group>
Print (but do not run) the commands to run for this compilation
Display available options
add-plugin
Use the named plugin action in addition to the default action
all-warnings
all_load
allowable_client
analyze-auto
analyze-function=
analyze-function
Run analysis on specific function (for C++ include parameters in name)
analyze-
analyzer-checker-help
Display the list of analyzer checkers that are available
analyzer-checker=
analyzer-checker
Choose analyzer checkers to enable
analyzer-config-compatibility-mode=
analyzer-config-compatibility-mode
Don't emit errors on invalid analyzer-config inputs
analyzer-config-help
Display the list of -analyzer-config options
analyzer-config
Choose analyzer options to enable
analyzer-constraints=
analyzer-constraints
Source Code Analysis - Symbolic Constraint Engines
analyzer-disable-all-checks
Disable all static analyzer checks
analyzer-disable-checker=
analyzer-disable-checker
Choose analyzer checkers to disable
analyzer-disable-retry-exhausted
Do not re-analyze paths leading to exhausted nodes with a different strategy (may decrease code coverage)
analyzer-display-progress
Emit verbose output about the analyzer's progress
analyzer-dump-egraph=
analyzer-dump-egraph
Dump exploded graph to the specified file
analyzer-inline-max-stack-depth=
analyzer-inline-max-stack-depth
Bound on stack depth while inlining (4 by default)
analyzer-inlining-mode=
analyzer-inlining-mode
Specify the function selection heuristic used during inlining
analyzer-list-enabled-checkers
Display the list of enabled analyzer checkers
analyzer-max-loop
The maximum number of times the analyzer will go through a loop
analyzer-no-default-checks
analyzer-opt-analyze-headers
Force the static analyzer to analyze functions defined in header files
analyzer-opt-analyze-nested-blocks
Analyze the definitions of blocks in addition to functions
analyzer-output=
analyzer-output
Static analyzer report output format (html|plist|plist-multi-file|plist-html|text).
Source Code Analysis - Output Options
analyzer-purge=
analyzer-purge
Source Code Analysis - Dead Symbol Removal Frequency
analyzer-stats
Print internal analyzer statistics.
analyzer-store=
analyzer-store
Source Code Analysis - Abstract Memory Store Models
analyzer-viz-egraph-graphviz
Display exploded graph using GraphViz
analyze
Run the static analyzer
Run static analysis engine
ansi
arange_sections
Emit DWARF .debug_arange sections
arch:
Set architecture for code generation
arch_errors_fatal
arch_only
arcmt-check
Check for ARC migration issues that need manual handling
arcmt-migrate-emit-errors
Emit ARC errors even if the migrator can fix them
arcmt-migrate-report-output
Output path for the plist report
arcmt-migrate
Apply modifications and produces temporary files that conform to ARC
arcmt-modify
Apply modifications to files to conform to ARC
assemble
assert=
ast-dump-all
Build ASTs and then debug dump them, forcing deserialization
ast-dump-filter
Use with -ast-dump or -ast-print to dump/print only AST declaration nodes having a certain substring in a qualified name. Use -ast-list to list all filterable declaration node names.
<dump_filter>
ast-dump-lookups
Build ASTs and then debug dump their name lookup tables
ast-dump
Build ASTs and then debug dump them
ast-list
Build ASTs and print the list of declaration node qualified names
ast-merge
Merge the given AST file into the translation unit being compiled.
<ast file>
ast-print
Build ASTs and then pretty-print them
ast-view
Build ASTs and view them with GraphViz
autocomplete=
aux-triple
Auxiliary target triple.
bigobj
bind_at_load
bootclasspath=
bootclasspath
Brepro-
Emit an object file which cannot be reproduced over time
Brepro
Emit an object file which can be reproduced over time
building-pch-with-obj
This compilation is part of building a PCH with corresponding object file.
bundle_loader
bundle
Add <dir> to search path for binaries and object files used implicitly
c-isystem
Add directory to the C SYSTEM include search path
<directory>
cc1as
ccc-arcmt-check
ccc-arcmt-migrate
ccc-arcmt-modify
ccc-gcc-name
Name for native GCC compiler
<gcc-path>
ccc-install-dir
Simulate installation in the given directory
ccc-objcmt-migrate
Apply modifications and produces temporary files to migrate to modern ObjC syntax
ccc-pch-is-pch
Use lazy PCH for precompiled headers
ccc-pch-is-pth
Use pretokenized headers for precompiled headers
ccc-print-bindings
Show bindings of tools to actions
ccc-print-phases
Dump list of actions to perform
ccc-
Include comments from within macros in preprocessed output
cfg-add-implicit-dtors
Add C++ implicit destructors to CFGs for all analyses
cfguard
Emit tables required for Windows Control Flow Guard.
cgthreads
chain-include
Include and chain a header file after turning it into PCH
cikernel
OpenCL only. Allow denormals to be flushed to zero.
cl-ext=
OpenCL only. Enable or disable OpenCL extensions. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
cl-fp32-correctly-rounded-divide-sqrt
OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
cl-kernel-arg-info
OpenCL only. Generate kernel argument metadata.
cl-mad-enable
OpenCL only. Allow use of less precise MAD computations in the generated binary.
OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
cl-opt-disable
OpenCL only. This option disables all optimizations. By default optimizations are enabled.
cl-single-precision-constant
OpenCL only. Treat double precision floating-point constant as single precision constant.
cl-std=
OpenCL language standard to compile for.
cl,CL,cl1.1,CL1.1,cl1.2,CL1.2,cl2.0,CL2.0,c++
cl-strict-aliasing
OpenCL only. This option is added for compatibility with OpenCL 1.0.
cl-uniform-work-group-size
OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
clang:
Pass <arg> to the clang driver
<arg>
CLASSPATH=
classpath=
CLASSPATH
classpath
client_name
code-completion-at=
code-completion-at
Dump code-completion information at a location
<file>:<line>:<column>
code-completion-brief-comments
Include brief documentation comments in code-completion results.
code-completion-macros
Include macros in code-completion results
code-completion-patterns
Include code patterns in code-completion results
code-completion-with-fixits
Include code completion results which require small fix-its.
combine
comments-in-macros
comments
compatibility_version
compiler-options-dump
Dump the compiler configuration options
compile
compress-debug-sections=
DWARF debug sections compression type
compress-debug-sections
DWARF debug sections compression
config-system-dir=
System directory for configuration files
config-user-dir=
User directory for configuration files
Specifies configuration file
constant-cfstrings
coverage-cfg-checksum
Emit CFG checksum for functions in .gcno files.
coverage-data-file=
coverage-data-file
Emit coverage data to this filename.
coverage-exit-block-before-body
Emit the exit block before the body blocks in .gcno files.
coverage-no-function-names-in-data
Emit function names in .gcda files.
coverage-notes-file=
coverage-notes-file
Emit coverage notes to this filename.
coverage-version=
Four-byte version string for gcov files.
coverage
cpp-precomp
cuda-compile-host-device
Compile CUDA code for both host and device (default).  Has no effect on non-CUDA compilations.
cuda-device-only
Compile CUDA code for device only
cuda-gpu-arch=
CUDA GPU architecture (e.g. sm_35).  May be specified more than once.
cuda-host-only
Compile CUDA code for host only.  Has no effect on non-CUDA compilations.
cuda-include-ptx=
Include PTX for the follwing GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
cuda-noopt-device-debug
Enable device-side debug info generation. Disables ptxas optimizations.
cuda-path-ignore-env
Ignore environment variables to detect CUDA installation
cuda-path=
CUDA installation path
current_version
cxx-isystem
Add directory to the C++ SYSTEM include search path
Include comments in preprocessed output
Don't discard comments when preprocessing
Only run preprocess, compile, and assemble steps
Compile only
d1PP
Retain macro definitions in /E mode
d1reportAllClassLayout
Dump record layout information
d2FastFail
d2Zi+
Print macro definitions in -E mode in addition to normal output
dead_strip
debug-forward-template-params
Emit complete descriptions of template parameters in forward declarations
debug-info-kind=
debug-info-macro
Emit macro debug information
debug=
debugger-tuning=
debug
define-macro=
define-macro
defsym
Define a value for a symbol
dependencies
dependency-dot
Filename to write DOT-formatted header dependencies to
dependency-file
Filename (or -) to write dependency output to
dependency-format
Format in which to generate the dependency file
dependency-info
Filename (or -) to write dependency output to in Xcode format
dependent-lib=
Add dependent library
detailed-preprocessing-record
include a detailed record of preprocessing actions
diagnostic-log-file
Filename (or -) to log diagnostics to
diagnostics:caret
Enable caret and column diagnostics (on by default)
diagnostics:classic
Disable column and caret diagnostics
diagnostics:column
Disable caret diagnostics but keep column info
disable-free
Disable freeing of memory on exit
disable-lifetime-markers
Disable lifetime-markers emission even when optimizations are enabled
disable-llvm-optzns
disable-llvm-passes
Use together with -emit-llvm to get pristine LLVM IR from the frontend by not running any LLVM passes at all
disable-llvm-verifier
Don't run the LLVM IR verifier pass
disable-O0-optnone
Disable adding the optnone attribute to functions at O0
disable-objc-default-synthesize-properties
disable the default synthesis of Objective-C properties
disable-red-zone
Do not emit code that uses the red zone.
discard-value-names
Discard value names in LLVM IR
Print include directives in -E mode in addition to normal output
Print macro definitions in -E mode instead of normal output
driver-mode=
Set the driver mode to either 'gcc', 'g++', 'cpp', 'cl', or 'metal'
dump-coverage-mapping
Dump the coverage mapping records, for testing
dump-deserialized-decls
Dump declarations that are deserialized from PCH, for testing
dump-raw-tokens
Lex file in raw mode and dump raw tokens
dump-tokens
Run preprocessor, dump internal rep of tokens
dumpmachine
dumpspecs
dumpversion
dwarf-column-info
Turn on column location information.
dwarf-debug-flags
The string to embed in the Dwarf debug flags record.
dwarf-debug-producer
The string to embed in the Dwarf debug AT_producer record.
dwarf-explicit-import
Generate explicit import from anonymous namespace to containing scope
dwarf-ext-refs
Generate debug info with external references to clang modules or precompiled headers
dwarf-version=
dyld-prefix=
dyld-prefix
dylib_file
dylinker_install_name
dylinker
dynamiclib
Define <macro> to <value> (or 1 if <value> omitted)
<macro>=<value>
Define macro
<macro[=value]>
Exception handling model
emit-ast
Emit Clang AST files for source inputs
emit-codegen-only
Generate machine code, but discard output
emit-html
Output input source as HTML
emit-llvm-bc
Build ASTs then convert to LLVM, emit .bc file
emit-llvm-only
Build ASTs and convert to LLVM, discarding output
emit-llvm-uselists
Preserve order of LLVM use-lists when serializing
emit-llvm
Use the LLVM representation for assembler and object files
emit-module-interface
Generate pre-compiled module file from a C++ module interface
emit-module
Generate pre-compiled module file from a module map
emit-obj
Emit native object files
emit-pch
Generate pre-compiled header file
emit-pth
Generate pre-tokenized header file
enable-split-dwarf
Use split dwarf/Fission
enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
Trivial automatic variable initialization to zero is only here for benchmarks, it'll eventually be removed, and I'm OK with that because I'm only using it to benchmark
encoding=
entry
Eonly
Just run preprocessor, no output (for timings)
Disable linemarker output and preprocess to stdout
error-on-deserialized-decl=
error-on-deserialized-decl
Emit error if a specific declaration is deserialized from PCH, for testing
errorReport
execution-charset:
Runtime encoding, supports only UTF-8
extdirs=
extdirs
extend-lifetimes=
extra-warnings
Only run the preprocessor
Preprocess to stdout
faccess-control
faddress-space-map-mangling=
Set the mode for address space map based mangling; OpenCL testing purposes only
<yes|no|target>
faddrsig
Emit an address-significance table
faggressive-function-elimination
falign-commons
falign-functions=
falign-functions
falign-jumps=
falign-jumps
falign-labels=
falign-labels
falign-loops=
falign-loops
faligned-alloc-unavailable
Aligned allocation/deallocation functions are unavailable
faligned-allocation
Enable C++17 aligned allocation functions
faligned-new=
faligned-new
fall-intrinsics
fallback
Fall back to cl.exe if clang-cl fails to compile
fallow-editor-placeholders
Treat editor placeholders as valid source code
fallow-half-arguments-and-returns
Allow function arguments and returns of type half
fallow-pch-with-compiler-errors
Accept a PCH file that was created with compiler errors
fallow-unsupported
faltivec
fansi-escape-codes
Use ANSI escape codes for diagnostics
fapinotes-cache-path=
Does nothing; API notes are no longer cached separately from modules
fapinotes-modules
Enable module-based external API notes support
fapinotes-swift-version=
Specify the Swift version to use when filtering API notes
fapinotes
Enable external API notes support
fapple-kext-vtable-mitigation
Enable mitigation for kernel v-table exploits through null pointers
fapple-kext
Use Apple's kernel extensions ABI
fapple-pragma-pack
Enable Apple gcc-compatible #pragma pack handling
fapplecl-functional-casts
fapplecl-inline-definitions
fapplecl-lax-vector-conversions
fapplication-extension
Restrict code to those available for App Extensions
farrayref-spi
fasm-blocks
fasm
fassociative-math
fassume-sane-operator-new
fastcp
fastf
fasynchronous-unwind-tables
fauto-profile-accurate
fauto-profile=
fauto-profile
fautolink
fautomatic
favor
Output assembly code file during compilation
Output assembly code to this file during compilation (with /FA)
<file or directory>
fbackslash
fbacktrace
fblas-matmul-limit=
fblocks-runtime-optional
Weakly link in the blocks runtime
fblocks
Enable the 'blocks' language feature
fbootclasspath=
fborland-extensions
Accept non-standard constructs supported by the Borland compiler
fbounds-check
fbracket-depth=
fbracket-depth
Maximum nesting level for parentheses, brackets, and braces
fbranch-count-reg
fbuild-session-file=
Use the last modification time of <file> as the build session timestamp
fbuild-session-timestamp=
Time when the current build session started
<time since Epoch in seconds>
fbuiltin-module-map
Load the clang builtins module map file.
fbuiltin
fc++-static-destructors
Enable C++ static destructor registration (the default)
fcaller-saves
fcaret-diagnostics-max-lines
Set the maximum number of source lines to show in a caret diagnostic
fcaret-diagnostics
fcf-protection=
Instrument control-flow architecture protection. Options: return, branch, full, none.
return,branch,full,none
fcf-protection
Enable cf-protection in 'full' mode
fcf-runtime-abi=
fchar8_t
Enable C++ builtin type char8_t
fcheck-array-temporaries
fcheck-new
fcheck=
fcikernel
fclang-abi-compat=
Attempt to match the ABI of Clang <version>
<major>.<minor>,latest
fclasspath=
fcoarray=
fcolor-diagnostics
fcomment-block-commands=
Treat each comma separated argument in <arg> as a documentation comment block command
fcommon
fcompile-resource=
fcomplete-member-pointers
Require member pointer base types to be complete if they would be significant under the Microsoft ABI
fconcepts-ts
Enable C++ Extensions for Concepts.
fconst-strings
Use a const qualified type for string literals in C and ObjC
fconstant-cfstrings
fconstant-string-class=
fconstant-string-class
Specify the class to use for constant Objective-C string objects.
<class name>
fconstexpr-backtrace-limit=
fconstexpr-backtrace-limit
Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit).
fconstexpr-depth=
fconstexpr-depth
Maximum depth of recursive constexpr function calls
fconstexpr-steps=
fconstexpr-steps
Maximum number of steps in constexpr function evaluation
fconvert=
fcoroutines-ts
Enable support for the C++ Coroutines TS
fcoverage-mapping
Generate coverage mapping to enable code coverage analysis
fcrash-diagnostics-dir=
fcray-pointer
fcreate-profile
fcuda-allow-variadic-functions
Allow variadic functions in CUDA device code.
fcuda-approx-transcendentals
Use approximate transcendental functions
fcuda-flush-denormals-to-zero
Flush denormal floating point values to zero in CUDA device mode.
fcuda-include-gpubinary
Incorporate CUDA device-side binary into host object file.
fcuda-is-device
Generate code for CUDA device
fcuda-rdc
Generate relocatable device code, also known as separate compilation mode.
fcuda-short-ptr
Use 32-bit pointers for accessing const/local/shared address spaces.
fcxx-exceptions
Enable C++ exceptions
fcxx-modules
fd-lines-as-code
fd-lines-as-comments
fdata-sections
Place each data in its own section (ELF Only)
fdebug-compilation-dir
The compilation directory to embed in the debug info.
fdebug-info-for-profiling
Emit extra debug info to make sample profile more accurate.
fdebug-macro
fdebug-pass-arguments
fdebug-pass-manager
Prints debug information for the new pass manager
fdebug-pass-structure
fdebug-prefix-map=
remap file source paths in debug info
fdebug-types-section
Place debug types in their own section (ELF Only)
fdebugger-cast-result-to-id
Enable casting unknown expression results to id
fdebugger-objc-literal
Enable special debugger support for Objective-C subscripting and literals
fdebugger-support
Enable special debugger support behavior
fdeclspec
Allow __declspec as a keyword
fdefault-calling-conv=
Set default calling convention
cdecl,fastcall,stdcall,vectorcall,regcall
fdefault-double-8
fdefault-inline
fdefault-integer-8
fdefault-real-8
fdefer-pop
fdelayed-template-parsing
Parse templated function definitions at the end of the translation unit
fdelete-null-pointer-checks
Treat usage of null pointers as undefined behavior.
fdenormal-fp-math=
fdenorms
fdepfile-entry=
fdeprecated-macro
Defines the __DEPRECATED macro
fdevirtualize-speculatively
fdevirtualize
fdiagnostics-absolute-paths
Print absolute paths in diagnostics
fdiagnostics-color=
fdiagnostics-color
fdiagnostics-fixit-info
fdiagnostics-format=
fdiagnostics-format
Change diagnostic formatting to match IDE and command line tools
clang,msvc,msvc-fallback,vi
fdiagnostics-hotness-threshold=
Prevent optimization remarks from being output if they do not have at least this profile count
<number>
fdiagnostics-parseable-fixits
Print fix-its in machine parseable form
fdiagnostics-print-source-range-info
Print source range spans in numeric form
fdiagnostics-show-category=
fdiagnostics-show-category
Print diagnostic category
none,id,name
fdiagnostics-show-hotness
Enable profile hotness information in diagnostic line
fdiagnostics-show-location=
fdiagnostics-show-note-include-stack
Display include stacks for diagnostic notes
fdiagnostics-show-option
Print option name with mappable diagnostics
fdiagnostics-show-template-tree
Print a template comparison tree for differing templates
fdigraphs
Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
fdisable-module-hash
Disable the module hash
fdiscard-value-names
fdollar-ok
fdollars-in-identifiers
Allow '$' in identifiers
fdouble-square-bracket-attributes
Enable '[[]]' attributes in all C and C++ language modes
fdump-fortran-optimized
fdump-fortran-original
fdump-parse-tree
fdump-record-layouts-simple
Dump record layout information in a simple form used for testing
fdump-record-layouts
fdump-vtable-layouts
Dump the layouts of all vtables that will be emitted in a translation unit
fdwarf-directory-asm
fdwarf-exceptions
Use DWARF style exceptions
fdwarf2-cfi-asm
felide-constructors
feliminate-unused-debug-symbols
feliminate-unused-debug-types
fembed-bitcode-marker
Embed placeholder LLVM IR data as a marker
fembed-bitcode=
Embed LLVM bitcode (option: off, all, bitcode, marker)
<option>
fembed-bitcode
Embed LLVM IR bitcode as data
fembed-source
femit-all-decls
Emit all declarations, even if unused
femit-coverage-data
Instrument the program to emit gcov coverage data when run.
femit-coverage-notes
Emit a gcov coverage notes file when compiling.
femulated-tls
Use emutls functions to access thread_local variables
fenable-matrix
Enable matrix data type and related builtin functions
fencode-extended-block-signature
enable extended encoding of block type signature
fencoding=
ferror-limit=
ferror-limit
Set the maximum number of errors to emit before stopping (0 = no limit).
fescaping-block-tail-calls
fexceptions
Enable support for exception handling
fexcess-precision=
fexec-charset=
fexpensive-optimizations
fexperimental-isel
Enables the experimental global instruction selector
fexperimental-new-pass-manager
Enables an experimental new pass manager in LLVM.
fextdirs=
fextended-identifiers
fexternal-blas
fexternc-nounwind
Assume all functions with C linkage do not unwind
Set output executable file or directory (ends in / or \)
ff2c
ffake-address-space-map
Use a fake address space map; OpenCL testing purposes only
ffast-math
Allow aggressive, lossy floating-point optimizations
ffat-lto-objects
ffine-grained-bitfield-accesses
Use separate accesses for consecutive bitfield runs with legal widths and alignments.
ffinite-math-only
ffixed-form
ffixed-line-length-
ffixed-point
Enable fixed point types
ffixed-r19
Reserve register r19 (Hexagon only)
ffixed-r9
Reserve the r9 register (ARM only)
ffixed-x18
Reserve the x18 register (AArch64 only)
ffixed-x20
Reserve the x20 register (AArch64 only)
ffloat-store
ffor-scope
fforbid-guard-variables
Emit an error if a C++ static local initializer would need a guard variable
fforce-addr
fforce-emit-vtables
Emits more virtual tables to improve devirtualization
fforce-enable-int128
Enable support for int128_t type
ffp-contract=
Form fused FP ops (e.g. FMAs): fast (everywhere) | on (according to FP_CONTRACT pragma, default) | off (never fuse)
fast,on,off
ffpe-trap=
fframebuffer-fetch
ffree-form
ffree-line-length-
ffreestanding
Assert that the compilation takes place in a freestanding environment
ffriend-injection
ffrontend-optimize
ffunction-attribute-list
ffunction-sections
Place each function in its own section (ELF Only)
fgcse-after-reload
fgcse-las
fgcse-sm
fgcse
fgl_max_buffer
fgnu-inline-asm
fgnu-keywords
Allow GNU-extension keywords regardless of language standard
fgnu-runtime
Generate output compatible with the standard GNU Objective-C runtime
fgnu89-inline
Use the gnu89 inline semantics
fgnu
fheinous-gnu-extensions
fhip-dump-offload-linker-script
fhonor-infinites
fhonor-infinities
fhonor-nans
fhosted
fident
fignore-objc-weak
ignore __weak qualifiers in manual reference counting
filelist
filetype
Specify the output file type ('asm', 'null', or 'obj')
fimplement-inlines
fimplicit-module-maps
Implicitly search the file system for module map files.
fimplicit-modules
fimplicit-none
fimplicit-templates
finclude-default-header
Include the default header file for OpenCL/Metal
findirect-virtual-calls
finit-character=
finit-integer=
finit-local-zero
finit-logical=
finit-real=
finline-functions-called-once
finline-functions
Inline suitable functions
finline-hint-functions
Inline functions which are (explicitly or implicitly) marked inline
finline-limit=
finline-limit
finline-small-functions
finline
finput-charset=
finstrument-function-entry-bare
Instrument function entry only, after inlining, without arguments to the instrumentation call
finstrument-functions-after-inlining
Like -finstrument-functions, but insert the calls after inlining
finstrument-functions
Generate calls to instrument function entry and exit
finteger-4-integer-8
fintegrated-as
Enable the integrated assembler
fintersection-call
fintrinsic-modules-path
fipa-cp
fivopts
fix-only-warnings
Apply fix-it advice only for warnings, not errors
fix-what-you-can
Apply fix-it advice even in the presence of unfixable errors
fixit-recompile
Apply fix-it changes and recompile
fixit-to-temporary
Apply fix-it changes to temporary files
fixit=
Apply fix-it advice creating a file with the given suffix
fixit
Apply fix-it advice to the input source
Include file before parsing
Set preprocess output file name (with /P)
fjump-tables
fkeep-inline-functions
flat_namespace
flax-vector-conversions
flimit-debug-info
flimited-precision=
flto-jobs=
Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
flto-unit
Emit IR to support LTO unit features (CFI, whole program vtable opt)
flto-visibility-public-std
Use public LTO visibility for classes in std and stdext namespaces
flto=
Set LTO mode to either 'full' or 'thin'
thin,full
flto
Enable LTO in 'full' mode
fmacro-backtrace-limit=
fmacro-backtrace-limit
Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit).
fmath-errno
Require math functions to indicate errors by setting errno
fmax-array-constructor=
fmax-errors=
fmax-identifier-length
fmax-stack-var-size=
fmax-subrecord-length=
fmax-type-align=
Specify the maximum alignment to enforce on pointers lacking an explicit alignment
fmerge-all-constants
Allow merging of constants
fmerge-constants
fmerge-functions
Permit merging of identical functions when optimizing.
fmessage-length=
fmessage-length
Format message diagnostics so that they fit within N columns or fewer, when possible.
fmodule-feature
Enable <feature> in module map requires declarations
<feature>
fmodule-file-deps
fmodule-file=
Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
[<name>=]<file>
fmodule-format=
Select the container format for clang modules and PCH. Supported options are 'raw' and 'obj'.
fmodule-implementation-of
fmodule-map-file-home-is-cwd
Use the current working directory as the home directory of module maps specified by -fmodule-map-file=<FILE>
fmodule-map-file=
Load this module map file
fmodule-maps
fmodule-name=
Specify the name of the module to build
fmodule-name
fmodule-private
fmodules-cache-path=
Specify the module cache path
fmodules-codegen
Generate code for uses of this module that assumes an explicit object file will be built for the module
fmodules-debuginfo
Generate debug info for types in an object file built from this module and do not generate them elsewhere
fmodules-decluse
Require declaration of modules used within a module
fmodules-disable-diagnostic-validation
Disable validation of the diagnostic options when loading the module
fmodules-embed-all-files
Embed the contents of all files read by this compilation into the produced module file.
fmodules-embed-file=
Embed the contents of the specified file into the module file being compiled.
fmodules-hash-content
Enable hashing the content of a module file
fmodules-hash-error-diagnostics
Use a separate module cache for modules compiled with conflicting -Werror options
fmodules-ignore-macro=
Ignore the definition of the given macro when building and loading modules
fmodules-local-submodule-visibility
Enforce name visibility rules across submodules of the same top-level module.
fmodules-prune-after=
Specify the interval (in seconds) after which a module file will be considered unused
<seconds>
fmodules-prune-interval=
Specify the interval (in seconds) between attempts to prune the module cache
fmodules-search-all
Search even non-imported modules to resolve references
fmodules-strict-decluse
Like -fmodules-decluse but requires all headers to be in modules
fmodules-ts
Enable support for the C++ Modules TS
fmodules-user-build-path
Specify the module user build path
fmodules-validate-once-per-build-session
Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
fmodules-validate-system-headers
Validate the system headers that a module depends on when loading the module
fmodules
Enable the 'modules' language feature
fmodulo-sched-allow-regmoves
fmodulo-sched
fms-compatibility-version=
Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
fms-compatibility
Enable full Microsoft Visual C++ compatibility
fms-extensions
Accept some non-standard constructs supported by the Microsoft compiler
fms-memptr-rep=
fms-volatile
fmsc-version=
Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
fmudflapth
fmudflap
fnative-double
fnative-half-arguments-and-returns
Use the native __fp16 type for arguments and returns (and skip ABI-specific lowering)
fnative-half-type
Use the native half type for __fp16 instead of promoting to float
fnative-long-long
fnative-wide-vectors
fnested-functions
fnew-alignment=
Specifies the largest alignment guaranteed by '::operator new(size_t)'
<align>
fnew-alignment
fnext-runtime
fno-access-control
Disable C++ access control
fno-addrsig
Don't emit an address-significance table
fno-aggressive-function-elimination
fno-align-commons
fno-align-functions
fno-align-jumps
fno-align-labels
fno-align-loops
fno-aligned-allocation
fno-aligned-new
fno-all-intrinsics
fno-allow-editor-placeholders
fno-altivec
fno-apinotes-modules
Disable module-based external API notes support
fno-apinotes
Disable external API notes support
fno-apple-pragma-pack
fno-application-extension
fno-asm-blocks
fno-asm
fno-associative-math
fno-assume-sane-operator-new
Don't assume that C++'s global operator new can't alias any pointer
fno-asynchronous-unwind-tables
fno-auto-profile-accurate
fno-auto-profile
fno-autolink
Disable generation of linker directives for automatic library linking
fno-automatic
fno-backslash
fno-backtrace
fno-bitfield-type-align
Ignore bit-field types when aligning structures
fno-blocks
fno-borland-extensions
fno-bounds-check
fno-branch-count-reg
fno-builtin-
Disable implicit builtin knowledge of a specific function
fno-builtin
Disable implicit builtin knowledge of functions
fno-c++-static-destructors
Disable C++ static destructor registration
fno-caller-saves
fno-caret-diagnostics
fno-char8_t
Disable C++ builtin type char8_t
fno-check-array-temporaries
fno-check-new
fno-color-diagnostics
fno-common
Compile common globals like normal definitions
fno-complete-member-pointers
Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
fno-const-strings
Don't use a const qualified type for string literals in C and ObjC
fno-constant-cfstrings
Disable creation of CodeFoundation-type constant strings
fno-coroutines-ts
fno-coverage-mapping
Disable code coverage analysis
fno-crash-diagnostics
Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
fno-cray-pointer
fno-cuda-approx-transcendentals
fno-cuda-flush-denormals-to-zero
fno-cuda-host-device-constexpr
Don't treat unattributed constexpr functions as __host__ __device__.
fno-cuda-rdc
fno-cuda-short-ptr
fno-cxx-exceptions
fno-cxx-modules
fno-d-lines-as-code
fno-d-lines-as-comments
fno-data-sections
fno-debug-info-for-profiling
Do not emit extra debug info for sample profiler.
fno-debug-macro
Do not emit macro debug information
fno-debug-pass-manager
Disables debug printing for the new pass manager
fno-debug-types-section
fno-debuginfo-use-presumed-location
Ignore #line directives when emitting debug info
fno-declspec
Disallow __declspec as a keyword
fno-default-double-8
fno-default-inline
fno-default-integer-8
fno-default-real-8
fno-defer-pop
fno-delayed-template-parsing
Disable delayed template parsing
fno-delete-null-pointer-checks
Do not treat usage of null pointers as undefined behavior.
fno-deprecated-macro
Undefines the __DEPRECATED macro
fno-devirtualize-speculatively
fno-devirtualize
fno-diagnostics-color
fno-diagnostics-fixit-info
Do not include fixit information in diagnostics
fno-diagnostics-show-hotness
fno-diagnostics-show-note-include-stack
fno-diagnostics-show-option
fno-diagnostics-use-presumed-location
Ignore #line directives when displaying diagnostic locations
fno-digraphs
Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
fno-discard-value-names
Do not discard value names in LLVM IR
fno-dollar-ok
fno-dollars-in-identifiers
Disallow '$' in identifiers
fno-double-square-bracket-attributes
Disable '[[]]' attributes in all C and C++ language modes
fno-dump-fortran-optimized
fno-dump-fortran-original
fno-dump-parse-tree
fno-dwarf-directory-asm
fno-dwarf2-cfi-asm
fno-elide-constructors
Disable C++ copy constructor elision
fno-elide-type
Do not elide types when printing diagnostics
fno-eliminate-unused-debug-symbols
fno-eliminate-unused-debug-types
fno-embed-source
fno-emulated-tls
fno-escaping-block-tail-calls
fno-exceptions
fno-expensive-optimizations
fno-experimental-isel
Disables the experimental global instruction selector
fno-experimental-new-pass-manager
Disables an experimental new pass manager in LLVM.
fno-extended-identifiers
fno-external-blas
fno-f2c
fno-fast-math
fno-fat-lto-objects
fno-fine-grained-bitfield-accesses
Use large-integer access for consecutive bitfield runs.
fno-finite-math-only
fno-fixed-form
fno-fixed-point
Disable fixed point types
fno-float-store
fno-for-scope
fno-force-emit-vtables
fno-force-enable-int128
Disable support for int128_t type
fno-free-form
fno-friend-injection
fno-frontend-optimize
fno-function-attribute-list
fno-function-sections
fno-gcse-after-reload
fno-gcse-las
fno-gcse-sm
fno-gcse
fno-gnu-inline-asm
Disable GNU style inline asm
fno-gnu-keywords
fno-gnu89-inline
fno-gnu
fno-honor-infinites
fno-honor-infinities
fno-honor-nans
fno-ident
fno-implement-inlines
fno-implicit-module-maps
fno-implicit-modules
fno-implicit-none
fno-implicit-templates
fno-include-default-header
Do not include the default header file for OpenCL/Metal
fno-init-local-zero
fno-inline-functions-called-once
fno-inline-functions
fno-inline-limit
fno-inline-small-functions
fno-inline
fno-integer-4-integer-8
fno-integrated-as
Disable the integrated assembler
fno-intrinsic-modules-path
fno-ipa-cp
fno-ivopts
fno-jump-tables
Do not use jump tables for lowering switches
fno-keep-inline-functions
fno-lax-vector-conversions
Disallow implicit conversions between vectors with a different number of elements or different element types
fno-limit-debug-info
fno-lto-unit
fno-lto
Disable LTO mode (default)
fno-math-builtin
Disable implicit builtin knowledge of math functions
fno-math-errno
fno-max-identifier-length
fno-max-type-align
fno-merge-all-constants
Disallow merging of constants
fno-merge-constants
fno-module-file-deps
fno-module-maps
fno-module-private
fno-modules-decluse
fno-modules-error-recovery
Do not automatically import modules for error recovery
fno-modules-global-index
Do not automatically generate or update the global module index
fno-modules-search-all
fno-modules-validate-system-headers
fno-modules
fno-modulo-sched-allow-regmoves
fno-modulo-sched
fno-ms-compatibility
fno-ms-extensions
fno-non-call-exceptions
fno-objc-arc-exceptions
fno-objc-arc
fno-objc-exceptions
fno-objc-infer-related-result-type
do not infer Objective-C related result type based on method family
fno-objc-legacy-dispatch
fno-objc-nonfragile-abi
fno-objc-weak
fno-omit-frame-pointer
fno-openmp-cuda-mode
fno-openmp-simd
fno-openmp
fno-operator-names
Do not treat C++ operator name keywords as synonyms for operators
fno-optimize-sibling-calls
fno-pack-derived
fno-pack-struct
fno-padding-on-unsigned-fixed-point
fno-pascal-strings
fno-pch-timestamp
Disable inclusion of timestamp in precompiled headers
fno-peel-loops
fno-permissive
fno-PIC
fno-pic
fno-PIE
fno-pie
fno-plt
Do not use the PLT to make function calls
fno-prefetch-loop-arrays
fno-preserve-as-comments
Do not preserve comments in inline assembly
fno-preserve-vec3-type
Do not preserve 3-component vector type
fno-printf
fno-profile-arcs
fno-profile-correction
fno-profile-generate-sampling
fno-profile-generate
Disable generation of profile instrumentation.
fno-profile-instr-generate
fno-profile-instr-use
Disable using instrumentation data for profile-guided optimization
fno-profile-reusedist
fno-profile-sample-accurate
fno-profile-sample-use
fno-profile-use
fno-profile-values
fno-profile
fno-protect-parens
fno-ptrauth-calls
fno-ptrauth-intrinsics
fno-ptrauth-returns
fno-ptrauth-soft
fno-range-check
fno-real-4-real-10
fno-real-4-real-16
fno-real-4-real-8
fno-real-8-real-10
fno-real-8-real-16
fno-real-8-real-4
fno-realloc-lhs
fno-reciprocal-math
fno-record-command-line
fno-record-gcc-switches
fno-recursive
fno-register-global-dtors-with-atexit
Don't use atexit or __cxa_atexit to register global destructors
fno-regs-graph
fno-relaxed-math
fno-relaxed-template-template-args
fno-rename-registers
fno-reorder-blocks
fno-repack-arrays
fno-reroll-loops
Turn off loop reroller
fno-rewrite-imports
fno-rewrite-includes
fno-ripa
fno-ropi
fno-rounding-math
fno-rtlib-add-rpath
Do not add -rpath with architecture-specific resource directory to the linker flags
fno-rtti-data
Control emission of RTTI data
fno-rtti
Disable generation of rtti information
fno-rwpi
fno-sanitize-address-poison-class-member-array-new-cookie
Disable poisoning array cookies when using class member operator new[] in AddressSanitizer
fno-sanitize-address-use-after-scope
Disable use-after-scope detection in AddressSanitizer
fno-sanitize-blacklist
Don't use blacklist file for sanitizers
fno-sanitize-cfi-cross-dso
Disable control flow integrity (CFI) checks for cross-DSO calls.
fno-sanitize-coverage=
Disable specified features of coverage instrumentation for Sanitizers
func,bb,edge,indirect-calls,trace-bb,trace-cmp,trace-div,trace-gep,8bit-counters,trace-pc,trace-pc-guard,no-prune,inline-8bit-counters
fno-sanitize-memory-track-origins
Disable origins tracking in MemorySanitizer
fno-sanitize-memory-use-after-dtor
Disable use-after-destroy detection in MemorySanitizer
fno-sanitize-minimal-runtime
fno-sanitize-recover=
Disable recovery for specified sanitizers
fno-sanitize-recover
fno-sanitize-stats
Disable sanitizer statistics gathering.
fno-sanitize-thread-atomics
Disable atomic operations instrumentation in ThreadSanitizer
fno-sanitize-thread-func-entry-exit
Disable function entry/exit instrumentation in ThreadSanitizer
fno-sanitize-thread-memory-access
Disable memory access instrumentation in ThreadSanitizer
fno-sanitize-trap=
Disable trapping for specified sanitizers
fno-sanitize-undefined-trap-on-error
fno-sanitize=
fno-save-optimization-record
fno-schedule-insns2
fno-schedule-insns
fno-second-underscore
fno-see
fno-short-enums
fno-short-wchar
Force wchar_t to be an unsigned int
fno-show-column
Do not include column number on diagnostics
fno-show-source-location
Do not include source location information with diagnostics
fno-sign-zero
fno-signaling-math
fno-signaling-nans
fno-signed-char
Char is unsigned
fno-signed-wchar
Use an unsigned type for wchar_t
fno-signed-zeros
Allow optimizations that ignore the sign of floating point zeros
fno-single-precision-constant
fno-sized-deallocation
fno-slp-vectorize-aggressive
fno-slp-vectorize
fno-spec-constr-count
fno-spell-checking
Disable spell-checking
fno-split-dwarf-inlining
fno-stack-arrays
fno-stack-check
Disable stack checking
fno-stack-protector
Disable the use of stack protectors
fno-stack-size-section
Don't emit section containing metadata on function stack sizes
fno-standalone-debug
Limit debug information produced to reduce size of debug binary
fno-strength-reduce
fno-strict-aliasing
fno-strict-enums
fno-strict-float-cast-overflow
Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
fno-strict-modules-decluse
fno-strict-overflow
fno-strict-return
fno-strict-vtable-pointers
fno-struct-path-tbaa
fno-threadsafe-statics
Do not emit code to make initialization of local statics thread safe
fno-tls-model
fno-tracepoint-instrument-argument-buffers
Disable the instrumentation of the contents of argument buffers.
fno-tracepoint-instrument-global-memory
Disable the instrumentation of global address space memory accesses.
fno-tracepoint-instrument-line-markers
Disable linemarkers for debug information in -ftracepoint-instrument mode.
fno-tracepoint-instrument-local-memory
Disable the instrumentation of local address space memory accesses.
fno-tracepoint-instrument-loops
Disable the instrumentation of loops.
fno-tracepoint-instrument-resources
Disable the instrumentation of resources.
fno-tracer
fno-trapping-math
fno-tree-dce
fno-tree-salias
fno-tree-slp-vectorize
fno-tree-ter
fno-tree-vectorizer-verbose
fno-tree-vectorize
fno-tree-vrp
fno-tree_loop_im
fno-tree_loop_ivcanon
fno-tree_loop_linear
fno-trigraphs
Do not process trigraph sequences
fno-underscoring
fno-unique-section-names
fno-unit-at-a-time
fno-unroll-all-loops
fno-unroll-loops
Turn off loop unroller
fno-unsafe-loop-optimizations
fno-unsafe-math-optimizations
fno-unsigned-char
fno-unswitch-loops
fno-unwind-tables
fno-use-cxa-atexit
Don't use __cxa_atexit for calling destructors
fno-use-init-array
Don't use .init_array instead of .ctors
fno-use-line-directives
fno-use-linker-plugin
fno-validate-pch
Disable validation of precompiled headers
fno-var-tracking
fno-variable-expansion-in-unroller
fno-vect-cost-model
fno-vectorize
fno-verbose-asm
fno-wchar
Disable C++ builtin type wchar_t
fno-web
fno-whole-file
fno-whole-program-vtables
fno-whole-program
fno-working-directory
fno-wrapv
fno-xray-always-emit-customevents
fno-xray-always-emit-typedevents
fno-xray-instrument
fno-zero-initialized-in-bss
fno-zvector
fnon-call-exceptions
fnoopenmp-relocatable-target
fnoopenmp-use-tls
fnoxray-link-deps
fobjc-abi-version=
fobjc-arc-cxxlib=
Objective-C++ Automatic Reference Counting standard library kind
libc++,libstdc++,none
fobjc-arc-exceptions
Use EH-safe code when synthesizing retains and releases in -fobjc-arc
fobjc-arc-unsafeclaim
Enable an optimization to dynamically avoid retain/releases of call results in __unsafe_unretained contexts
fobjc-arc
Synthesize retain and release calls for Objective-C pointers
fobjc-atdefs
fobjc-call-cxx-cdtors
fobjc-dispatch-method=
Objective-C dispatch method to use
legacy,non-legacy,mixed
fobjc-exceptions
Enable Objective-C exceptions
fobjc-gc-only
Use GC exclusively for Objective-C related memory management
fobjc-gc
Enable Objective-C garbage collection
fobjc-infer-related-result-type
fobjc-legacy-dispatch
fobjc-link-runtime
fobjc-new-property
fobjc-nonfragile-abi-version=
fobjc-nonfragile-abi
fobjc-runtime-has-weak
The target Objective-C runtime supports ARC weak operations
fobjc-runtime=
Specify the target Objective-C runtime kind and version
fobjc-sender-dependent-dispatch
fobjc-subscripting-legacy-runtime
Allow Objective-C array and dictionary subscripting in legacy runtime
fobjc-weak
Enable ARC-style weak references in Objective-C
fomit-frame-pointer
fopencl-interop
fopenmp-cuda-mode
fopenmp-dump-offload-linker-script
fopenmp-host-ir-file-path
Path to the IR file produced by the frontend for the host.
fopenmp-is-device
Generate code only for an OpenMP target device.
fopenmp-relocatable-target
fopenmp-simd
Emit OpenMP code only for SIMD-based constructs.
fopenmp-targets=
Specify comma-separated list of triples OpenMP offloading targets to be supported
fopenmp-use-tls
fopenmp-version=
fopenmp=
fopenmp
Parse OpenMP pragmas and generate parallel code.
foperator-arrow-depth=
foperator-arrow-depth
Maximum number of 'operator->'s to call for a member access
foptimization-record-file=
Specify the file name of any generated YAML optimization record
foptimize-sibling-calls
for-linker=
for-linker
force-link=
force-link
force_cpusubtype_ALL
force_flat_namespace
force_load
foutput-class-dir=
foverride-record-layout=
Override record layouts with those in the given file
Set output object file, or directory (ends in / or \) (with /c)
fp:except-
fp:except
fp:fast
fp:precise
fp:strict
fpack-derived
fpack-struct=
Specify the default maximum struct packing alignment
fpack-struct
fpadding-on-unsigned-fixed-point
Force each unsigned fixed point type to have an extra bit of padding to align their scales with those of signed fixed point types
fparse-all-comments
fpascal-strings
Recognize and construct Pascal-style string literals
fpcc-struct-return
Override the default ABI to return all structs on the stack
fpch-preprocess
fpeel-loops
fpermissive
fPIC
fpic
fPIE
fpie
fplt
Use the PLT to make function calls
fplugin=
Load the named plugin (dynamic shared object)
<dsopath>
fprebuilt-module-path=
Specify the prebuilt module path
fprefetch-loop-arrays
fpreserve-as-comments
fpreserve-invariance
Preserve invariance of computation
fpreserve-vec3-type
Preserve 3-component vector type
fprofile-arcs
fprofile-correction
fprofile-dir=
fprofile-generate-sampling
fprofile-generate=
Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
fprofile-generate
Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
fprofile-instr-generate=
Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
fprofile-instr-generate
Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
fprofile-instr-use=
Use instrumentation data for profile-guided optimization
fprofile-instr-use
fprofile-instrument-path=
fprofile-instrument-use-path=
Specify the profile path in PGO use compilation
fprofile-instrument=
Enable PGO instrumentation. The accepted value is clang, llvm, or none
none,clang,llvm
fprofile-reusedist
fprofile-sample-accurate
Specifies that the sample profile is accurate
fprofile-sample-use=
Enable sample-based profile guided optimizations
fprofile-sample-use
fprofile-use=
Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
<pathname>
fprofile-use
fprofile-values
fprofile
fprotect-parens
fptrauth-calls
Enable signing and authentication of all indirect calls
fptrauth-intrinsics
Enable pointer-authentication intrinsics
fptrauth-returns
Enable signing and authentication of return addresses
fptrauth-soft
Enable software lowering of pointer authentication
Set pch filename (with /Yc and /Yu)
<filename>
frandom-seed=
frange-check
freal-4-real-10
freal-4-real-16
freal-4-real-8
freal-8-real-10
freal-8-real-16
freal-8-real-4
frealloc-lhs
freciprocal-math
Allow division operations to be reassociated
frecord-command-line
frecord-gcc-switches
frecord-marker=
frecursive
freg-struct-return
Override the default ABI to return small structs in registers
fregister-global-dtors-with-atexit
Use atexit or __cxa_atexit to register global destructors
fregs-graph
frelaxed-math
Allow aggressive, lossy floating-point optimizations but preserves infs and nans
frelaxed-template-template-args
Enable C++17 relaxed template template argument matching
frename-registers
freorder-blocks
frepack-arrays
freroll-loops
Turn on loop reroller
fretain-comments-from-system-headers
frewrite-imports
frewrite-includes
frewrite-map-file=
frewrite-map-file
fripa
fropi
frounding-math
frtlib-add-rpath
Add -rpath with architecture-specific resource directory to the linker flags
frtti
frwpi
fsanitize-address-field-padding=
Level of field padding for AddressSanitizer
fsanitize-address-globals-dead-stripping
Enable linker dead stripping of globals in AddressSanitizer
fsanitize-address-poison-class-member-array-new-cookie
Enable poisoning array cookies when using class member operator new[] in AddressSanitizer
fsanitize-address-use-after-scope
Enable use-after-scope detection in AddressSanitizer
fsanitize-blacklist=
Path to blacklist file for sanitizers
fsanitize-cfi-cross-dso
Enable control flow integrity (CFI) checks for cross-DSO calls.
fsanitize-cfi-icall-generalize-pointers
Generalize pointers in CFI indirect call type signature checks
fsanitize-coverage-8bit-counters
Enable frequency counters in sanitizer coverage
fsanitize-coverage-indirect-calls
Enable sanitizer coverage for indirect calls
fsanitize-coverage-inline-8bit-counters
Enable inline 8-bit counters in sanitizer coverage
fsanitize-coverage-no-prune
Disable coverage pruning (i.e. instrument all blocks/edges)
fsanitize-coverage-pc-table
Create a table of coverage-instrumented PCs
fsanitize-coverage-stack-depth
Enable max stack depth tracing
fsanitize-coverage-trace-bb
Enable basic block tracing in sanitizer coverage
fsanitize-coverage-trace-cmp
Enable cmp instruction tracing in sanitizer coverage
fsanitize-coverage-trace-div
Enable div instruction tracing in sanitizer coverage
fsanitize-coverage-trace-gep
Enable gep instruction tracing in sanitizer coverage
fsanitize-coverage-trace-pc-guard
Enable PC tracing with guard in sanitizer coverage
fsanitize-coverage-trace-pc
Enable PC tracing in sanitizer coverage
fsanitize-coverage-type=
Sanitizer coverage type
fsanitize-coverage=
Specify the type of coverage instrumentation for Sanitizers
fsanitize-link-c++-runtime
fsanitize-memory-track-origins=
Enable origins tracking in MemorySanitizer
fsanitize-memory-track-origins
fsanitize-memory-use-after-dtor
Enable use-after-destroy detection in MemorySanitizer
fsanitize-minimal-runtime
fsanitize-recover=
Enable recovery for specified sanitizers
fsanitize-recover
fsanitize-stats
Enable sanitizer statistics gathering.
fsanitize-thread-atomics
Enable atomic operations instrumentation in ThreadSanitizer (default)
fsanitize-thread-func-entry-exit
Enable function entry/exit instrumentation in ThreadSanitizer (default)
fsanitize-thread-memory-access
Enable memory access instrumentation in ThreadSanitizer (default)
fsanitize-trap=
Enable trapping for specified sanitizers
fsanitize-undefined-strip-path-components=
Strip (or keep only, if negative) a given number of path components when emitting check metadata.
fsanitize-undefined-trap-on-error
fsanitize=
Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
<check>
fsave-optimization-record
Generate a YAML optimization record file
fsched-interblock
fschedule-insns2
fschedule-insns
fsecond-underscore
fsee
fseh-exceptions
Use SEH style exceptions
fshort-enums
Allocate to an enum type only as many bytes as it needs for the declared range of possible values
fshort-wchar
Force wchar_t to be a short unsigned int
fshow-column
fshow-overloads=
Which overload candidates to show when overload resolution fails: best|all; defaults to all
best,all
fshow-source-location
fsign-zero
fsignaling-math
fsignaling-nans
fsigned-bitfields
fsigned-char
fsigned-wchar
Use a signed type for wchar_t
fsigned-zeros
fsimdgroup-async-copy
fsingle-precision-constant
fsized-deallocation
Enable C++14 sized global deallocation functions
fsjlj-exceptions
Use SjLj style exceptions
fslp-vectorize-aggressive
fslp-vectorize
Enable the superword-level parallelism vectorization passes
fspec-constr-count
fspell-checking-limit=
fspell-checking-limit
Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit).
fspell-checking
fsplit-dwarf-inlining
Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
fsplit-stack
fstack-arrays
fstack-check
Enable stack checking
fstack-protector-all
Force the usage of stack protectors for all functions
fstack-protector-strong
Use a strong heuristic to apply stack protectors to functions
fstack-protector
Enable stack protectors for functions potentially vulnerable to stack smashing
fstack-size-section
Emit section containing metadata on function stack sizes
fstandalone-debug
Emit full debug info for all types used by the program
fstrength-reduce
fstrict-aliasing
fstrict-enums
Enable optimizations based on the strict definition of an enum's value range
fstrict-float-cast-overflow
Assume that overflowing float-to-int casts are undefined (default)
fstrict-overflow
fstrict-return
Always treat control flow paths that fall off the end of a non-void function as unreachable
fstrict-vtable-pointers
Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
fstruct-path-tbaa
fsyntax-only
ftabstop=
ftabstop
Set the tab stop distance.
ftemplate-backtrace-limit=
ftemplate-backtrace-limit
Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit).
ftemplate-depth-
ftemplate-depth=
ftemplate-depth
Maximum depth of recursive template instantiation
fterminated-vtables
ftest-coverage
ftest-module-file-extension=
introduce a module file extension for testing purposes. The argument is parsed as blockname:major:minor:hashed:user info
ftexture-write-rounding-mode=
Set the texture writes rounding mode to either 'native', 'rte', 'rtz'
fthin-link-bitcode=
Write minimized bitcode to <file> for the ThinLTO thin link only
fthinlto-index=
Perform ThinLTO importing using provided function summary index
fthread-globals
fthreadsafe-statics
ftime-report
ftls-model=
ftls-model
ftracepoint-instrument-stdlib
Enable instrumentation of standard library functions.
ftracepoint-instrument
Instrument for the shader execution visualizer.
ftracer
ftrap-function=
Issue call to specified function rather than a trap instruction
ftrapping-math
ftrapv-handler=
Specify the function to be called on overflow
<function name>
ftrapv-handler
ftrapv
Trap on integer overflow
ftree-dce
ftree-salias
ftree-slp-vectorize
ftree-ter
ftree-vectorizer-verbose
ftree-vectorize
ftree-vrp
ftree_loop_im
ftree_loop_ivcanon
ftree_loop_linear
ftrigraphs
Process trigraph sequences
ftrivial-auto-var-init=
Initialize trivial automatic stack variables: uninitialized (default) | pattern
uninitialized,pattern
ftype-visibility
Default type visibility
function-alignment
default alignment for functions
funderscoring
funique-section-names
Use unique names for text and data sections (ELF Only)
funit-at-a-time
funknown-anytype
Enable parser support for the __unknown_anytype type; for testing purposes only
funroll-all-loops
funroll-loops
Turn on loop unroller
funsafe-loop-optimizations
funsafe-math-optimizations
funsigned-bitfields
funsigned-char
funswitch-loops
funwind-tables
fuse-cxa-atexit
fuse-init-array
Use .init_array instead of .ctors
fuse-ld=
fuse-line-directives
fuse-linker-plugin
fuse-register-sized-bitfield-access
Use register sized accesses to bit-fields, when possible.
fvariable-expansion-in-unroller
fveclib=
Use the given vector functions library
Accelerate,SVML,none
fvect-cost-model
fvectorize
Enable the loop vectorization passes
fverbose-asm
fvisibility-inlines-hidden
Give inline C++ member functions hidden visibility by default
fvisibility-ms-compat
Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
fvisibility=
Set the default symbol visibility for all global declarations
hidden,default
fvisibility
Default type and symbol visibility
fvisible-function-stitching
fwchar-type=
Select underlying type for wchar_t
char,short,int
fweb
fwhole-file
fwhole-program-vtables
Enables whole-program vtable optimization. Requires -flto
fwhole-program
fwrapv
Treat signed integer overflow as two's complement
fwritable-strings
Store string literals as writable data
fxray-always-emit-customevents
Determine whether to always emit __xray_customevent(...) calls even if the function it appears in is not always instrumented.
fxray-always-emit-typedevents
Determine whether to always emit __xray_typedevent(...) calls even if the function it appears in is not always instrumented.
fxray-always-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
fxray-attr-list=
Filename defining the list of functions/types for imbuing XRay attributes.
fxray-instruction-threshold=
Sets the minimum function size to instrument with XRay
fxray-instruction-threshold
fxray-instrumentation-bundle=
Select which XRay instrumentation points to emit. Options: all, none, function, custom. Default is 'all'.
fxray-instrument
Generate XRay instrumentation sleds on function entry and exit
fxray-link-deps
Tells clang to add the link dependencies for XRay.
fxray-modes=
List of modes to link in by default into XRay instrumented binaries.
fxray-never-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
fzero-initialized-in-bss
fzvector
Enable System z vector language extension
Add directory to framework include search path
Assume thread-local variables are defined in the executable
gcc-toolchain=
Use the gcc toolchain at the given directory
gcc-toolchain
gcodeview
Generate CodeView debug information
gcoff
gcolumn-info
gdwarf-2
Generate source-level debug information with dwarf version 2
gdwarf-3
Generate source-level debug information with dwarf version 3
gdwarf-4
Generate source-level debug information with dwarf version 4
gdwarf-5
Generate source-level debug information with dwarf version 5
gdwarf-aranges
gdwarf
Set __cdecl as a default calling convention
gembed-source
Embed source text in DWARF debug sections
gen-reproducer
Auto-generates preprocessed source files and a reproduction script
Disable string pooling
gfull
ggdb0
ggdb1
ggdb2
ggdb3
ggdb
ggnu-pubnames
gline-tables-only
Emit debug line number tables only
glldb
gmlt
gmodules
gno-column-info
gno-embed-source
Restore the default behavior of not embedding source text in DWARF debug sections
gno-gnu-pubnames
gno-record-command-line
gno-record-gcc-switches
gno-strict-dwarf
gnu-pubnames
Emit newer GNU style pubnames
Disable emission of RTTI data
grecord-command-line
grecord-gcc-switches
Gregcall
Set __regcall as a default calling convention
Enable emission of RTTI data
Set __fastcall as a default calling convention
Disable buffer security check
gsce
gsplit-dwarf
gstabs
gstrict-dwarf
Enable buffer security check
Set stack probe size
gtoggle
guard:
Enable Control Flow Guard with /guard:cf
gused
gvms
Set __vectorcall as a default calling convention
Don't put each data item in its own section
Put each data item in its own section
Disable exception handling
gxcoff
Enable exception handling
Don't put each function in its own section
Put each function in its own section
Set __stdcall as a default calling convention
Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
<size>
Generate source-level debug information
header-include-file
Filename (or -) to write header include output to
headerpad_max_install_names
help-hidden
Display help for hidden options
HELP
hip-device-lib-path=
HIP device library path
hip-device-lib=
HIP device library
hip-link
Link clang-offload-bundler bundles for HIP
homeparams
hotpatch
Show header includes and nesting depth
Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
iapinotes-modules
Add directory to the API notes search path referenced by module name
idirafter
Add directory to AFTER include search path
iframeworkwithsysroot
Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
iframework
Add directory to SYSTEM framework search path
imacros=
imacros
Include macros from file before parsing
image_base
imsvc
Add directory to system include search path, as if part of %INCLUDE%
imultilib
include-barrier
include-directory-after=
include-directory-after
include-directory=
include-directory
include-pch
Include precompiled header file
include-prefix=
include-prefix
include-pth
include-with-prefix-after=
include-with-prefix-after
include-with-prefix-before=
include-with-prefix-before
include-with-prefix=
include-with-prefix
include=
index-header-map
Make the next included directory (-I or -F) an indexer header map
index-ignore-system-symbols
Ignore symbols from system headers
index-record-codegen-name
Record the codegen name for symbols
index-store-path
Enable indexing with the specified data store path
init-only
Only execute frontend initialization
integrated-as
internal-externc-isystem
Add directory to the internal system include search path with implicit extern "C" semantics; these are assumed to not be user-provided and are used to model system and standard headers' paths.
internal-isystem
Add directory to the internal system include search path; these are assumed to not be user-provided and are used to model system and standard headers' paths.
iprefix
Set the -iwithprefix/-iwithprefixbefore prefix
iquote
Add directory to QUOTE include search path
isysroot
Set the system root directory (usually /)
isystem-after
Add directory to end of the SYSTEM include search path
isystem
Add directory to SYSTEM include search path
ivfsoverlay
iwithprefixbefore
Set directory to include search path with prefix
iwithprefix
Set directory to SYSTEM include search path with prefix
iwithsysroot
Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
Add directory to include search path
Make char type unsigned
keep_private_externs
kernel-
language=
lazy_framework
lazy_library
Create debug DLL
Create DLL
library-directory=
library-directory
linker-option=
Add linker option
Forward options to the linker
<options>
Add directory to library search path
m3dnowa
m3dnow
m80387
mabi=
mabicalls
Enable SVR4-style position-independent code (Mips only)
mabs=
Mach
madx
maes
main-file-name
Main file name to use for debug info
malign-double
Align doubles to two words in structs (x86 only)
malign-functions=
malign-jumps=
malign-loops=
maltivec
mamdgpu-debugger-abi=
Generate additional code for specified <version> of debugger ABI (AMDGPU only)
mappletvos-version-min=
mappletvsimulator-version-min=
march=
marm
masm-verbose
Generate verbose assembly output
masm=
massembler-fatal-warnings
Make assembler warnings fatal
mavx2
mavx512bitalg
mavx512bw
mavx512cd
mavx512dq
mavx512er
mavx512f
mavx512ifma
mavx512pf
mavx512vbmi2
mavx512vbmi
mavx512vl
mavx512vnni
mavx512vpopcntdq
mavx
mbackchain
Link stack frames through backchain on System Z
mbig-endian
mbmi2
mbmi
mbranch-likely
mbridgeos-version-min=
mcheck-zero-division
mcldemote
mclflushopt
mclwb
mclzero
mcmodel=
mcmpb
mcode-model
The code model to use
small,kernel,medium,large
mcompact-branches=
mconsole
mconstant-cfstrings
mconstructor-aliases
Emit complete constructors and destructors as aliases when possible
mcpu=
mcrbits
mcrc
Allow use of CRC instructions (ARM/Mips only)
mcrypto
mcx16
Use DLL debug run-time
mdebug-pass
Enable additional debug output
mdefault-build-attributes
mdirect-move
mdisable-fp-elim
Disable frame pointer elimination optimization
mdisable-tail-calls
Disable tail call optimization, keeping the call stack accurate
mdll
mdouble-float
mdspr2
mdsp
mdynamic-no-pic
Write a depfile containing user and system headers
Use DLL run-time
meabi
Set EABI type, e.g. 4, 5 or gnu (default depends on triple)
default,4,5,gnu
membedded-data
Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
menable-no-infs
Allow optimization to assume there are no infinities.
menable-no-nans
Allow optimization to assume there are no NaNs.
menable-unsafe-fp-math
Allow unsafe floating-point math optimizations which may decrease precision
mexception-handling
mexecute-only
Disallow generation of data access to code sections (ARM only)
mextern-sdata
Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
mf16c
mfancy-math-387
mfentry
Insert calls to fentry at function entry (x86 only)
mfix-and-continue
mfix-cortex-a53-835769
Workaround Cortex-A53 erratum 835769 (AArch64 only)
mfloat-abi=
soft,softfp,hard
mfloat-abi
The float ABI to use
mfloat128
mfma4
mfma
mfp32
Use 32-bit floating point registers (MIPS only)
mfp64
Use 64-bit floating point registers (MIPS only)
mfpmath=
mfpmath
Which unit to use for fp math
mfprnd
mfpu=
mfpxx
Avoid FPU mode dependent operations when used with the O32 ABI
mfsgsbase
mfxsr
Write depfile output from -MMD, -MD, -MM, or -M to <file>
mgeneral-regs-only
Generate code which only uses the general purpose registers (AArch64 only)
mgfni
mginv
mglibc
mglobal-merge
Enable merging of globals
mgpopt
Use GP relative accesses for symbols known to be in a small data section (MIPS)
Add missing headers to depfile
mhard-float
mhtm
mhvx-length=
Set Hexagon Vector Length
64B,128B
mhvx=
Enable Hexagon Vector eXtensions
mhvx
mhwdiv=
mhwdiv
miamcu
Use Intel MCU ABI
mieee-fp
mieee-rnd-near
migrate
Run the migrator
Migrate source code
mimplicit-float
mimplicit-it=
mincremental-linker-compatible
(integrated-as) Emit an object file which can be used with an incremental linker
mindirect-jump=
Change indirect jump instructions to inhibit speculation
minline-all-stringops
minvariant-function-descriptors
minvpcid
mios-simulator-version-min=
mios-version-min=
Set iOS deployment target
miphoneos-version-min=
miphonesimulator-version-min=
Equivalent to -march=mips1
Equivalent to -march=mips2
Equivalent to -march=mips32r2
Equivalent to -march=mips32r3
Equivalent to -march=mips32r5
Equivalent to -march=mips32r6
Equivalent to -march=mips32
Equivalent to -march=mips3
Equivalent to -march=mips4
Equivalent to -march=mips5
Equivalent to -march=mips64r2
Equivalent to -march=mips64r3
Equivalent to -march=mips64r5
Equivalent to -march=mips64r6
Equivalent to -march=mips64
misel
Write a compilation database entry per input
mkernel
mldc1-sdc1
mlimit-float-precision
Limit float precision to the given value
mlink-bitcode-file
Link the given bitcode file before performing optimizations.
mlink-cuda-bitcode
Link and internalize needed symbols from the given bitcode file before performing optimizations.
mlinker-version=
mlittle-endian
Additional arguments to forward to LLVM's option processing
mlocal-sdata
Extend the -G behaviour to object local data (MIPS)
mlong-calls
Generate branches with extended addressability, usually via indirect jumps.
mlongcall
mlwp
mlzcnt
mmacos-version-min=
mmacosx-version-min=
Set Mac OS X deployment target
mmadd4
Enable the generation of 4-operand madd.s, madd.d and related instructions.
mmcu=
Write a depfile containing user headers
mmemops
Enable generation of memop instructions
mmfcrf
mmfocrf
mmicromips
mmmx
mmovbe
mmovdir64b
mmovdiri
mmpx
mms-bitfields
Set the default structure layout to be compatible with the Microsoft compiler standard
mmsa
Enable MSA ASE (MIPS only)
Enable MT ASE (MIPS only)
mmwaitx
Like -MMD, but also implies -E and writes to stdout by default
mnan=
mno-3dnowa
mno-3dnow
mno-80387
mno-abicalls
Disable SVR4-style position-independent code (Mips only)
mno-adx
mno-aes
mno-altivec
mno-avx2
mno-avx512bitalg
mno-avx512bw
mno-avx512cd
mno-avx512dq
mno-avx512er
mno-avx512f
mno-avx512ifma
mno-avx512pf
mno-avx512vbmi2
mno-avx512vbmi
mno-avx512vl
mno-avx512vnni
mno-avx512vpopcntdq
mno-avx
mno-backchain
mno-bmi2
mno-bmi
mno-branch-likely
mno-check-zero-division
mno-cldemote
mno-clflushopt
mno-clwb
mno-clzero
mno-cmpb
mno-constant-cfstrings
mno-crbits
mno-crc
Disallow use of CRC instructions (Mips only)
mno-crypto
mno-cx16
mno-default-build-attributes
mno-direct-move
mno-dspr2
mno-dsp
mno-embedded-data
Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
mno-exception-handling
mno-execute-only
Allow generation of data access to code sections (ARM only)
mno-extern-sdata
Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
mno-f16c
mno-fix-cortex-a53-835769
Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
mno-float128
mno-fma4
mno-fma
mno-fprnd
mno-fsgsbase
mno-fxsr
mno-gfni
mno-ginv
mno-global-merge
Disable merging of globals
mno-gpopt
Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
mno-htm
mno-hvx
Disable Hexagon Vector eXtensions
mno-iamcu
mno-implicit-float
Don't generate implicit floating point instructions
mno-incremental-linker-compatible
(integrated-as) Emit an object file which cannot be used with an incremental linker
mno-inline-all-stringops
mno-invariant-function-descriptors
mno-invpcid
mno-isel
mno-ldc1-sdc1
mno-local-sdata
Do not extend the -G behaviour to object local data (MIPS)
mno-long-calls
Restore the default behaviour of not generating long calls
mno-longcall
mno-lwp
mno-lzcnt
mno-madd4
Disable the generation of 4-operand madd.s, madd.d and related instructions.
mno-memops
Disable generation of memop instructions
mno-mfcrf
mno-mfocrf
mno-micromips
mno-mips16
mno-mmx
mno-movbe
mno-movdir64b
mno-movdiri
mno-movt
Disallow use of movt/movw pairs (ARM only)
mno-mpx
mno-ms-bitfields
Do not set the default structure layout to be compatible with the Microsoft compiler standard
mno-msa
Disable MSA ASE (MIPS only)
mno-mt
Disable MT ASE (MIPS only)
mno-mwaitx
mno-neg-immediates
Disallow converting instructions with negative immediates to their negation or inversion.
mno-nontrapping-fptoint
mno-nvj
Disable generation of new-value jumps
mno-nvs
Disable generation of new-value stores
mno-odd-spreg
Disable odd single-precision floating point registers
mno-omit-leaf-frame-pointer
mno-outline
Disable function outlining (AArch64 only)
mno-packets
Disable generation of instruction packets
mno-pascal-strings
mno-pclmul
mno-pconfig
mno-pie-copy-relocations
mno-pku
mno-popcntd
mno-popcnt
mno-power8-vector
mno-power9-vector
mno-prefetchwt1
mno-prfchw
mno-ptwrite
mno-pure-code
mno-qpx
mno-rdpid
mno-rdrnd
mno-rdseed
mno-red-zone
mno-relax-all
mno-relax
Disable linker relaxation
mno-restrict-it
Allow generation of deprecated IT blocks for ARMv8. It is off by default for ARMv8 Thumb mode
mno-retpoline-external-thunk
mno-retpoline
mno-rtd
mno-rtm
mno-sahf
mno-sgx
mno-sha
mno-shstk
mno-sign-ext
mno-simd128
mno-soft-float
mno-sse2
mno-sse3
mno-sse4.1
mno-sse4.2
mno-sse4a
mno-sse4
mno-sse
mno-ssse3
mno-stack-arg-probe
Disable stack probes which are enabled by default
mno-stackrealign
mno-tbm
mno-thumb
mno-unaligned-access
Force all memory accesses to be aligned (AArch32/AArch64 only)
mno-vaes
mno-virt
mno-vpclmulqdq
mno-vsx
mno-vx
mno-waitpkg
mno-warn-nonportable-cfstrings
mno-wbnoinvd
mno-x87
mno-xgot
mno-xnack
Disable XNACK (AMDGPU only)
mno-xop
mno-xsavec
mno-xsaveopt
mno-xsaves
mno-xsave
mno-zero-initialized-in-bss
Do not put zero initialized data in the BSS
mno-zvector
mnocrc
Disallow use of CRC instructions (ARM only)
mnoexecstack
Mark the file as not needing an executable stack
mnontrapping-fptoint
mnvj
Enable generation of new-value jumps
mnvs
Enable generation of new-value stores
Whether to embed sources and driver options into output
modd-spreg
Enable odd single-precision floating point registers
module-dependency-dir
Directory to dump module dependencies to
module-file-deps
Include module files in dependency output
module-file-info
Provide information about a particular module file
momit-leaf-frame-pointer
Omit frame pointer setup for leaf functions
moslib=
moutline
Enable function outlining (AArch64 only)
Embed sources and driver options into output
mpackets
Enable generation of instruction packets
mpascal-strings
mpclmul
mpconfig
mpie-copy-relocations
Use copy relocations support for PIE builds
mpku
mpopcntd
mpopcnt
mpower8-vector
mpower9-vector
mprefer-vector-width=
Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
mprefetchwt1
mprfchw
mptwrite
mpure-code
Create phony target for each dependency (other than main file)
mqdsp6-compat
Enable hexagon-qdsp6 backward compatibility
mqpx
Specify name of main file output to quote in depfile
mrdpid
mrdrnd
mrdseed
mreassociate
Allow reassociation transformations for floating-point instructions
mrecip=
mrecip
mred-zone
mregparm=
mregparm
Limit the number of registers available for integer arguments
mrelax-all
(integrated-as) Relax all machine instructions
mrelax-relocations
Use relaxable elf relocations
mrelax
Enable linker relaxation
mrelocation-model
The relocation model to use
static,pic,ropi,rwpi,ropi-rwpi,dynamic-no-pic
mrestrict-it
Disallow generation of deprecated IT blocks for ARMv8. It is on by default for ARMv8 Thumb mode.
mretpoline-external-thunk
mretpoline
mrtd
Make StdCall calling convention the default
mrtm
msahf
msave-temp-labels
Save temporary labels in the symbol table. Note this may change .s semantics and shouldn't generally be used on compiler-generated code.
msecure-plt
msgx
msha
mshstk
msign-ext
msimd128
msingle-float
msmall-data-threshold=
msoft-float
Use software floating point
msse2
msse3
msse4.1
msse4.2
msse4a
msse4
msse
mssse3
mstack-alignment=
Set the stack alignment
mstack-arg-probe
Enable stack probes
mstack-probe-size=
Set the stack probe size
mstackrealign
Force realign the stack at entry to every function
mstrict-align
Force all memory accesses to be aligned (same as mno-unaligned-access)
mt-migrate-directory
Directory for temporary files produced during ARC or ObjC migration
mtbm
Use static debug run-time
mthread-model
The thread model to use, e.g. posix, single (posix by default)
posix,single
mthreads
mthumb
mtp=
Read thread pointer from coprocessor register (ARM only)
soft, cp15
Mode for reading thread pointer
mtune=
mtvos-simulator-version-min=
mtvos-version-min=
Specify name of main file output in depfile
Use static run-time
muclibc
multi_module
multiply_defined_unused
multiply_defined
munaligned-access
Allow memory accesses to be unaligned (AArch32/AArch64 only)
municode
munwind-tables
Generate unwinding tables for all functions
mv55
mv60
mv62
mv65
mvaes
mvirt
mvpclmulqdq
mvsx
Use NMake/Jom format for the depfile
mwaitpkg
mwarn-nonportable-cfstrings
mwatch-bitcode-compatibility
mwatchos-simulator-version-min=
mwatchos-version-min=
mwatchsimulator-version-min=
mwbnoinvd
mwindows
mx32
mx87
mxgot
mxnack
Enable XNACK (AMDGPU only)
mxop
mxsavec
mxsaveopt
mxsaves
mxsave
mzvector
Like -MD, but also implies -E and writes to stdout by default
new-struct-path-tbaa
Enable enhanced struct-path aware Type Based Alias Analysis
no-canonical-prefixes
Use relative instead of canonical paths
no-check-inputs-exist
Do not check for inputs existence
no-code-completion-globals
Do not include global declarations in code-completion results.
no-code-completion-ns-level-decls
Do not include declarations inside namespaces (incl. global namespace) in the code-completion results.
no-cpp-precomp
no-cuda-gpu-arch=
Remove GPU architecture (e.g. sm_35) from the list of GPUs to compile for. 'all' resets the list to its default value.
no-cuda-include-ptx=
Do not include PTX for the follwing GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
no-cuda-noopt-device-debug
no-cuda-version-check
Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
no-emit-llvm-uselists
Don't preserve order of LLVM use-lists when serializing
no-finalize-removal
Do not remove finalize method in gc mode
no-implicit-float
no-integrated-as
no-integrated-cpp
no-line-commands
no-ns-alloc-error
Do not error on use of NSAllocateCollectable/NSReallocateCollectable
no-pedantic
no-pie
no-pthread
no-standard-includes
no-standard-libraries
no-struct-path-tbaa
Turn off struct-path aware Type Based Alias Analysis
no-system-header-prefix=
Treat all #include paths starting with <prefix> as not including a system header.
<prefix>
no-system-header-prefix
no-undefined
no-warnings
no_dead_strip_inits_and_terms
nobuiltininc
Disable builtin #include directories
nocpp
nocudainc
nocudalib
nodefaultlibs
nofixprebinding
nolibc
nologo
nomultidefs
nopie
noprebind
noseglinkedit
nostartfiles
nostdinc++
Disable standard #include directories for the C++ standard library
nostdinc
nostdlib++
nostdlibinc
nostdsysteminc
Disable standard system #include directories
Specify <script> as native arch script
<script>
Don't automatically start assembly file with a text section
ObjC++
Treat source input files as Objective-C++ inputs
objc-isystem
Add directory to the ObjC SYSTEM include search path
objcmt-atomic-property
Make migration to 'atomic' properties
objcmt-migrate-all
Enable migration to modern ObjC
objcmt-migrate-annotation
Enable migration to property and method annotations
objcmt-migrate-designated-init
Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
objcmt-migrate-instancetype
Enable migration to infer instancetype for method result type
objcmt-migrate-literals
Enable migration to modern ObjC literals
objcmt-migrate-ns-macros
Enable migration to NS_ENUM/NS_OPTIONS macros
objcmt-migrate-property-dot-syntax
Enable migration of setter/getter messages to property-dot syntax
objcmt-migrate-property
Enable migration to modern ObjC property
objcmt-migrate-protocol-conformance
Enable migration to add protocol conformance on classes
objcmt-migrate-readonly-property
Enable migration to modern ObjC readonly property
objcmt-migrate-readwrite-property
Enable migration to modern ObjC readwrite property
objcmt-migrate-subscripting
Enable migration to modern ObjC subscripting
objcmt-ns-nonatomic-iosonly
Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
objcmt-returns-innerpointer-property
Enable migration to annotate property with NS_RETURNS_INNER_POINTER
objcmt-white-list-dir-path=
objcmt-whitelist-dir-path=
Only modify files with a filename contained in the provided directory path
objcxx-isystem
Add directory to the ObjC++ SYSTEM include search path
ObjC
Treat source input files as Objective-C inputs
Disable optimization
Ofast
Disable use of builtin functions
Enable use of builtin functions
openmp-
openmp
opt-record-file
File name to use for YAML optimization record output
optimize=
Optimize for size
Optimize for speed
output-asm-variant
Select the asm variant index to use for output
output-class-directory=
output-class-directory
output=
output
Optimization level
Write output to <file>
Set output file or directory (ends in / or \)
pagezero_size
param=
pass-exit-codes
pch-through-header=
Stop PCH generation after including this file.  When using a PCH, skip tokens until after this file is included.
pedantic-errors
pedantic
permissive-
Enable mcount instrumentation
pic-is-pie
File is for a position independent executable
pic-level
Value for __PIC__
Use pipes between commands, when possible
plugin-arg-
Pass <arg> to plugin <name>
<name> <arg>
plugin
Use the named plugin action instead of the default action (use "help" to list available options)
preamble-bytes=
Assume that the precompiled header is a precompiled preamble covering the first N bytes of the main file
prebind_all_twolevel_modules
prebind
precompile
Only precompile the input
prefix=
preload
preprocess
print-decl-contexts
Print DeclContexts and their Decls
print-diagnostic-categories
print-file-name=
Print the full library path of <file>
print-file-name
print-ivar-layout
Enable Objective-C Ivar layout bitmap print trace
print-libgcc-file-name
Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
print-missing-file-dependencies
print-multi-directory
print-multi-lib
print-multi-os-directory
print-preamble
Print the "preamble" of a file, which is a candidate for implicit precompiled headers.
print-prog-name=
Print the full program path of <name>
print-prog-name
print-resource-dir
Print the resource directory pathname
print-search-dirs
Print the paths used for finding libraries and programs
print-stats
Print performance metrics and statistics
private_bundle
profile-blocks
profile
pthreads
pthread
Support POSIX threads in generated code
ptxas-path=
Path to ptxas (used for compiling CUDA code)
Disable linemarker output in -E mode
Preprocess to file
Qfast_transcendentals
QIfist
Qimprecise_fwaits
Do not emit metadata containing compiler name and version
Qpar
Qunused-arguments
Don't emit warning for unused driver arguments
Qvec-report
Qvec-
Disable the loop vectorization passes
Qvec
Emit metadata containing compiler name and version
rdynamic
read_only_relocs
record-command-line
The string to embed in the .LLVM.command.line section.
relaxed-aliasing
Turn off Type Based Alias Analysis
relocatable-pch
Whether to build a relocatable precompiled header
remap-file
Replace the contents of the <from> file with the contents of the <to> file
<from>;<to>
remap
resource-dir=
resource-dir
The directory which holds the compiler resource files
resource=
resource
rewrite-legacy-objc
Rewrite Legacy Objective-C source to C++
rewrite-macros
Expand macros without full preprocessing
rewrite-objc
Rewrite Objective-C source to C++
rewrite-test
Rewriter playground
Rpass-analysis=
Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
Rpass-missed=
Report missed transformations by optimization passes whose name matches the given POSIX regular expression
Rpass=
Report transformations performed by optimization passes whose name matches the given POSIX regular expression
rpath
rsp-quoting=
Set the rsp quoting to either 'posix', or 'windows'
rtlib=
Compiler runtime library to use
rtlib
Enable the specified remark
<remark>
save-stats=
Save llvm statistics.
save-stats
save-temps=
Save intermediate compilation results.
save-temps
Save intermediate compilation results
sdl-
sectalign
sectcreate
sectobjectsymbols
sectorder
seg1addr
seg_addr_table_filename
seg_addr_table
segaddr
segcreate
seglinkedit
segprot
segs_read_only_addr
segs_read_write_addr
segs_read_
serialize-diagnostic-file
File for serializing diagnostics in a binary format
serialize-diagnostics
Serialize compiler diagnostics to a file
shared-libasan
shared-libgcc
shared-libsan
show-encoding
Show instruction encoding information in transliterate mode
show-includes
Print cl.exe style /showIncludes to stdout
show-inst
Show internal instruction representation in transliterate mode
showIncludes
Print info about included files to stderr
signed-char
single_module
skip-unused-modulemap-deps
Include module map files only for imported modules in dependency output
source-charset:
Source encoding, supports only UTF-8
specs=
specs
split-dwarf-file
File name to use for split dwarf debug info output
split-dwarf
Split out the dwarf .dwo sections
split-stacks
Try to use a split stack if possible.
stack-protector-buffer-size
Lower bound for a buffer to be considered for stack protection
stack-protector
Enable stack protectors
static-define
Should __STATIC__ be defined
static-libgcc
static-libgfortran
static-libsan
static-libstdc++
stats-file=
Filename to write statistics to
std-default=
std:
Language standard to compile for
std=
stdlib=
C++ standard library to use
libc++,libstdc++,platform
stdlib
sub_library
sub_umbrella
sys-header-deps
Include system headers in dependency output
system-header-prefix=
Treat all #include paths starting with <prefix> as including a system header.
system-header-prefix
Only run preprocess and compilation steps
target-abi
Target a particular ABI type
target-cpu
Target a specific cpu type
target-feature
Target specific attributes
target-help
target-linker-version
Target linker version
target-sdk-version=
The version of target SDK used for compilation
target-variant-sdk-version=
The version of target variant SDK used for compilation
target-variant-triple
Specify the target variant triple
target-variant
Generate code that may run on a particular variant of the deployment target
target=
Generate code for the given target
Tbss
Set starting address of BSS to <addr>
<addr>
Treat all source files as C
Specify a C source file
Tdata
Set starting address of DATA to <addr>
templight-dump
Dump templight information to stdout
test-coverage
Do not generate coverage files or remove coverage changes from IR
time
Time individual commands
token-cache
Use specified token cache file
Treat all source files as C++
Specify a C++ source file
trace-includes
traditional-cpp
Enable some traditional CPP emulation
traditional
trim-egraph
Only show error-related paths in the analysis graph
triple=
triple
Specify target triple (e.g. i686-apple-darwin9)
Ttext
Set starting address of TEXT to <addr>
twolevel_namespace_hints
twolevel_namespace
Specify <script> as linker script
undefine-macro=
undefine-macro
undef all system defines
unexported_symbols_list
unoptimized-cfg
Generate unoptimized CFGs for all analyses
unsigned-char
user-dependencies
utf-8
Set source and runtime encoding to UTF-8 (default)
Undefine macro <macro>
<macro>
Undefine macro
validate-charset-
validate-charset
Control vtordisp placement
vectorize-loops
Run the Loop vectorization passes
vectorize-slp
Run the SLP vectorization passes
verbose
verify-debug-info
Verify the binary representation of debug output
verify-ignore-unexpected=
Ignore unexpected diagnostic messages
verify-ignore-unexpected
verify-pch
Load and verify that a pre-compiled header file is not stale
verify=
Verify diagnostic output using comment directives that start with prefixes in the comma-separated sequence <prefixes>
<prefixes>
verify
Equivalent to -verify=expected
Print version information
Print the compiler version
via-file-asm
Write assembly to file for input to assemble jobs
Use a best-case representation method for member pointers
Use a most-general representation for member pointers
Set the default most-general representation to multiple inheritance
Set the default most-general representation to single inheritance
Set the default most-general representation to virtual inheritance
volatile:iso
Volatile loads and stores have standard semantics
volatile:ms
Volatile loads and stores have acquire and release semantics
vtordisp-mode=
Control vtordisp placement on win32 targets
Show commands to run and use verbose output
Disable all warnings
Enable -Wall
Enable -Wall and -Wextra
Pass the comma separated arguments in <arg> to the assembler
Wall
Enable -Weverything
warn-=
warn-
WCL4
wd4005
wd4018
wd4100
wd4910
wd4996
Wdeprecated
Enable warnings for deprecated constructs and define __DEPRECATED
weak-l
weak_framework
weak_library
weak_reference_mismatches
Wframe-larger-than=
whatsloaded
whyload
Pass the comma separated arguments in <arg> to the linker
Wlarge-by-value-copy=
Wlarge-by-value-copy
Warn if a function definition returns or accepts an object larger in bytes than a given value
Wlarger-than-
Wlarger-than=
Pass the comma separated arguments in <arg> to the arch materializer
Wno-deprecated
Wno-nonportable-cfstrings
Wno-rewrite-macros
Silence ObjC rewriting warnings
Wno-write-strings
Wnonportable-cfstrings
working-directory=
working-directory
Resolve file paths relative to the specified directory
Pass the comma separated arguments in <arg> to the preprocessor
Wp64
write-dependencies
write-user-dependencies
Wwrite-strings
Do not treat warnings as errors
Treat warnings as errors
Enable the specified warning
<warning>
Suppress all warnings
Xanalyzer
Pass <arg> to the static analyzer
Xarch_
Xassembler
Pass <arg> to the assembler
Xclang
Pass <arg> to the clang compiler
Xcuda-fatbinary
Pass <arg> to fatbinary invocation
Xcuda-ptxas
Pass <arg> to the ptxas assembler
Xlinker
Pass <arg> to the linker
Xopenmp-target=
Pass <arg> to the target offloading toolchain identified by <triple>.
<triple> <arg>
Xopenmp-target
Pass <arg> to the target offloading toolchain.
Xpreprocessor
Pass <arg> to the preprocessor
Don't add %INCLUDE% to the include search path
Treat subsequent input files as having type <language>
<language>
Disable precompiled headers, overrides /Yc and /Yu
Generate a pch file for all code up to and including <filename>
Load a pch file and use it instead of all code up to and including <filename>
Z-reserved-lib-cckext
Z-reserved-lib-stdc++
Z-Xlinker-no-demangle
Enable CodeView debug information in object files
Zc:__cplusplus
Zc:auto
Zc:forScope
Zc:inline
Zc:rvalueCast
Zc:sizedDealloc-
Disable C++14 sized global deallocation functions
Zc:sizedDealloc
Zc:strictStrings
Treat string literals as const
Zc:ternary
Zc:threadSafeInit-
Disable thread-safe initialization of static variables
Zc:threadSafeInit
Enable thread-safe initialization of static variables
Zc:trigraphs-
Disable trigraphs (default)
Zc:trigraphs
Enable trigraphs
Zc:twoPhase-
Disable two-phase name lookup in templates
Zc:twoPhase
Enable two-phase name lookup in templates
Zc:wchar_t
Alias for /Z7. Does not produce PDBs.
Zlinker-input
Don't mention any default libraries in the object file
Set the default maximum struct packing alignment to 1
Syntax-check only
Pass -z <arg> to the linker
-isysroot
-resource-dir
-include-pch
STATISTICS:
<eof> parser at end of file
<unknown> parser at unknown location
: at annotation token
: unknown current parser token
: current parser token '
layout_compatible
must_be_null
language
defined_in
generated_declaration
introduced
obsoleted
strict
replacement
parsing struct/union body
 { namespace 
parsing namespace
using declaration
attributes list
alias declaration
parsing struct/union/class body
access declaration
noexcept(false)
block literal parsing
Swift
macCatalyst App Extension
watchOS (App Extension)
tvOS (App Extension)
macOS (App Extension)
iOS (App Extension)
bridgeOS
Android
lambda expression parsing
@catch clause
parsing Objective-C method
initializer
'initializer'
reduction identifier
dependency type
'#pragma omp declare target'
schedule modifier
defaultmap modifier
options
redefine_extname
STDC
OPENCL
pointers_to_members
intrinsic
internals
METAL internals
clang attribute
fast
clang fp
clang loop
clang optimize
'on' or 'off'
optimize
__INTRIN_H
best_case
full_generality
single_inheritance
virtual_inheritance
pragma detect_mismatch
pragma comment
OPENCL EXTENSION
clang section
data
rodata
text
pragma clang section
reset
show
native
natural
power
".CRT$XCU"
".CRT$XCL"
".CRT$XCC"
clang loop 
unless(
'is_member'
'functionType'
'unless(is_union)'
'is_thread_local', 'is_global', 'is_parameter', 'unless(is_parameter)'
'is_instance'
apply_to
any(
do/while
'do'
in compound statement ('{}')
'default'
'case'
parsing function body
InternalPragmaState
parsing function try block
<MS inline asm>
fpsw
mxcsr
asm operand
__except
pixel
top-level asm block
'asm'
partition
submodule ID out of range in AST file
selector ID out of range in AST file
no identifier table in AST file
SourceLocation remap refers to unknown module, cannot find 
declaration ID out-of-range for AST file
malformed AST file: missing C++ ctor initializers
Corrupted AST file
Incorrect encoding of extended qualifier type
Incorrect encoding of complex type
Incorrect encoding of pointer type
Incorrect encoding of decayed type
Decayed type does not decay
Incorrect encoding of adjusted type
Incorrect encoding of block pointer type
Incorrect encoding of lvalue reference type
Incorrect encoding of rvalue reference type
Incorrect encoding of member pointer type
incorrect encoding of vector type in AST file
incorrect encoding of extended vector type in AST file
incorrect encoding of matrix type in AST file
incorrect encoding of no-proto function type
incorrect encoding of typedef type
incorrect encoding of typeof(type) in AST file
incorrect encoding of record type
incorrect encoding of enum type
incorrect encoding of attributed type
incorrect encoding of paren type
incorrect encoding of pack expansion type
Incorrect encoding of atomic type
Incorrect encoding of pipe type
source location entry ID out-of-range for AST file
incorrectly-formatted source location entry in AST file
zlib is not available
could not decompress embedded file contents: 
AST record has invalid code
could not find file '
' referenced by AST file '
*** AST File Statistics:
  %u/%u source location entries read (%f%%)
  %u/%u types read (%f%%)
  %u/%u declarations read (%f%%)
  %u/%u identifiers read (%f%%)
  %u/%u macros read (%f%%)
  %u/%u selectors read (%f%%)
  %u/%u statements read (%f%%)
  %u/%u lexical declcontexts read (%f%%)
  %u/%u visible declcontexts read (%f%%)
  %u/%u method pool entries read (%f%%)
  %u/%u method pool lookups succeeded (%f%%)
  %u/%u method pool table lookups succeeded (%f%%)
  %u / %u identifier table lookups succeeded (%f%%)
*** PCH/ModuleFile Remappings:
Global bit offset map
Global source location entry map
Global type map
Global declaration map
Global identifier map
Global macro map
Global submodule map
Global selector map
Global preprocessed entity map
*** PCH/Modules Loaded:
no macro table in AST file
malformed AST file: missing C++ base specifiers
no preprocessing record
#undef 
#define 
#include "
#__include_macros "
-Wsystem-headers
-Weverything -Werror
-pedantic-errors
target ABI
target CPU
Microsoft Visual C++ full compatibility mode
Microsoft C++ extensions
Microsoft inline asm blocks
Borland extensions
C++11
C++14
C++17
C++2a
Objective-C 1
Objective-C 2
Objective-C App Extension
trigraphs
'//' comments
bool, true, and false keywords
half keyword
wchar_t keyword
char8_t keyword
__declspec keyword
GNU extensions
GNU keywords
digraphs
C++ operator name keywords
Apple kext support
writable string support
const-qualified string support
lax vector conversions
AltiVec-style vector initializers
System z vector extensions
exception handling
Objective-C exceptions
C++ exceptions
dwarf exception handling
setjmp-longjump exception handling
SEH .xdata exception handling
Assume extern C functions don't unwind
traditional CPP emulation
run-time type information
emit run-time type information data
Microsoft-compatible structure layout
freestanding implementation
disable builtin functions
disable math builtin functions
GNU-style inline assembly
C++ coroutines TS
C++17 relaxed matching of template template arguments
pointer authentication intrinsics
function pointer authentication
return pointer authentication
software emulation of pointer authentication
'[[]]' attributes extension for all language standard modes
POSIX thread support
blocks extension to C
errno in math functions
modules extension to C
C++ Modules TS
require declaration of module uses
requiring declaration of module uses and all headers to be in modules
local submodule visibility
hash out diagnostic errors as part of the module hash
__OPTIMIZE__ predefined macro
__OPTIMIZE_SIZE__ predefined macro
__STATIC__ predefined macro (as opposed to __DYNAMIC__)
default struct packing maximum alignment
default maximum alignment for types
Controls if doubles should be aligned to 8 bytes (x86 only)
__PIC__ level
is pie
GNU inline semantics
__NO_INLINE__ predefined macro
__DEPRECATED predefined macro
fast FP math optimizations, and __FAST_MATH__ predefined macro
relaxed FP math optimizations, and __RELAXED_MATH__ predefined macro
__FINITE_MATH_ONLY__ predefined macro
Unsafe Floating Point Math
width of wchar_t
signed or unsigned wchar_t
member-pointer representation method
default calling convention
short enum types
OpenCL
OpenCL C version
OpenCL C++
OpenCL C++ version
Enable OpenCL interoperability
Native half type support
Native half args and returns
half args and returns
CUDA
OpenMP support and version of OpenMP (31, 40 or 45)
Use SIMD only OpenMP support.
Use TLS for threadprivates or runtime calls
Generate code only for OpenMP target device
Generate code for OpenMP pragmas in SIMT/SPMD mode
C++ exceptions handling in the host code.
RenderScript
compiling for CUDA device
allowing variadic functions in CUDA device code
treating unattributed constexpr functions as __host__ __device__
using approximate transcendental functions
generate relocatable device code
Metal iOS dialect
Metal MacOS dialect
Metal: major version
Metal: minor version
Metal: bugfix version
Metal: support for allowing builtins in fields
Metal: allow type mismatch between input and output for color(0)
Metal: allow assignment of const vector elements
Metal: allow dependent attributes
Metal: allow dependent function attributes
Metal: allow duplicated output builtin variables
Metal: allow implicit ext-vector conversion in array initializers
Metal: allow single argument ext-vector constructors taking packed vectors arguments
Metal: allow function constant predicates on control point structure fields
Metal: allow int-to-constant-ptr cast
Metal: allow references not marked with an address space
Metal: allow scalar stage_in argument without vertex_in attribute
Metal: support non-constexpr attribute index arguments
Metal: allow vector literals
Metal: support for arbitrary dispatch grid size
Metal: support for array of samplers
Metal: support for array of textures
Metal: support for barycentric coordinates
Metal: support for the "base_vertex" and "base_instance" attributes
Metal: support for border color
Metal: buffers can be written from fragment functions
Metal: support for CI kernels
Metal: support for command buffers
Metal: support for compute pipeline states
Metal: do not flush denorms to zero
Metal: support derived classes
Metal: support dual source blending
Metal: allow omission of control point count from PTVS patch type attributes
Metal: early fragment test
Metal: support for function constants
Metal: support function pointers
Metal: support C++11 syntax for function qualification
Metal: support host_name extended mangling
Metal: do not raise an error when validating an attribute for a declaration with incompatible type
Metal: support slicing char and uchar types in explicit imageblocks
Metal: support imageblocks
Metal: support function constant predicate on imageblock data fields
Metal: support binding incomplete buffer pointee type
Metal: support for indirect argument buffers
Metal: indirect argument buffer pointee type is not required to be a struct
Metal: support for indirect writable textures
Metal: support for long data types in buffers
Metal: support for max total threads per threadgroup
Metal: support double-precision floating point type
Metal: support {signed,unsigned} long long type
Metal: support for 8/16 elements vectors
Metal: support optional resource indexes
Metal: packed vectors supports component indexing
Metal: support post depth coverage
Metal: support [[invariant]] attribute as modifier of [[position]]
Metal: support for primitive id
Metal: prohibit [[early_fragment_tests]], [[patch(...)]] on decl specs
Metal: support for raytracing
Metal: support for QuadGroup functions
Metal: support raster order group
Metal: support for render pipeline states
Metal: support render target index selection per-primitive
Metal: support render target index in compute kernels
Metal: support restrict keyword
Metal: support for sampler reduction
Metal: support for SIMDGroup functions
Metal: relax nested structure restrictions
Metal: support stencil feedback
Metal: support for struct of resources
Metal: support vertex amplification
Metal: support for Tessellation functions
Metal: textures can be written from fragment functions
Metal: textures can be written from vertex functions
Metal: texture write rounding mode
Metal: support for RTE texture write rounding mode
Metal: support for RTZ texture write rounding mode
Metal: support threadgroup_imageblock keyword
Metal: support for using threadgroup memory in fragment functions
Metal: support for some SPI feature
Metal: allow [[thread_index_in_quadgroup]], [[thread_index_in_simdgroup]], and [[threads_per_simdgroup]] in fragment functions
Metal: do not box packed vectors inside a struct
Metal: support unions
Metal: support variadic functions
Metal: support viewport index selection per-primitive
Metal: support for visible functions
Metal: warn about vector literals being ignored
Metal: maximum function constants index
AppleCL: generic and extended relaxed vector conversions
AppleCL: enable functional casts
AppleCL: force internal linkage for inline definitions
sized deallocation
aligned allocation
aligned allocation functions are unavailable
maximum alignment guaranteed by '::operator new(size_t)'
enable C++ Extensions for Concepts
no constant CoreFoundation strings
treating double-precision floating point constants as single precision constants
OpenCL fast relaxed math
FP contraction type
bit-field type alignment
hexagon-qdsp6 backward compatibility
Objective-C automated reference counting
__weak support in the ARC runtime
Objective-C __weak in ARC and MRC files
Ignore ARC-style __weak instead of erroring
Subscripting support in legacy ObjectiveC runtime
Control-Flow Branch Protection enabled
OpenCL fake address space map
OpenCL address space map mangling mode
Include default header file for OpenCL/Metal
optional blocks runtime
Require member pointer base types to be complete at the point where the type's inheritance model would be determined under the Microsoft ABI
Objective-C Garbage Collection mode
value symbol visibility
type symbol visibility
stack protector mode
stack checking
trivial automatic variable initialization
signed integer overflow handling
Microsoft Visual C/C++ Version
How many vtordisps to insert
Apple gcc-compatible #pragma pack handling
retain documentation comments from system headers in the AST
use external API notes
compilation involves pch
controls how aggressive is ASan field padding (0: none, 1:least aggressive, 2: more aggressive)
controls whether to do XRay instrumentation
controls whether to always emit intrinsic calls to __xray_customevent(...) builtin.
controls whether to always emit intrinsic calls to __xray_typedevent(...) builtin.
whether to emit all vtables
version of Clang that we should attempt to be ABI-compatible with
Default alignment for functions
fixed point types
unsigned fixed point types having one extra padding bit
Register C++ static destructors
Enable or disable the builtin matrix type
module features
target Objective-C runtime
block command names
-fsanitize=
Expected lexical block
Expected visible lookup table block
malformed source manager block record in AST file
' referenced by AST file
invalid record at top-level of AST file
error at end of module block in AST file
malformed preprocessor detail record in AST file
malformed comments block in AST file
duplicate TYPE_OFFSET record in AST file
duplicate DECL_OFFSET record in AST file
duplicate IDENTIFIER_OFFSET record in AST file
invalid special-types record
invalid weak identifiers record
ran out of source locations
Multiple SOURCE_LOCATION_PRELOADS records in AST file
Invalid VTABLE_USES record
Invalid existing PendingInstantiations
Invalid PENDING_IMPLICIT_INSTANTIATIONS block
Invalid SEMA_DECL_REFS block
invalid DECL_UPDATE_OFFSETS block in AST file
duplicate OBJC_CATEGORIES_MAP record in AST file
Invalid existing UndefinedButUsed
invalid undefined-but-used record
duplicate MACRO_OFFSET record in AST file
invalid pragma optimize record
invalid pragma ms_struct record
invalid cuda pragma options record
invalid pragma pack record
malformed submodule block record in AST file
submodule metadata record should be at beginning of block
malformed module definition
too many submodules
mismatched umbrella headers in submodule
mismatched umbrella directories in submodule
Timestamp file
FILE type is NULL
Invalid FILE type in AST file
jmp_buf type is NULL
Invalid jmp_buf type in AST file
sigjmp_buf type is NULL
ucontext_t type is NULL
attempt to read a C++ base-specifier record as a declaration
attempt to read a C++ ctor initializer record as a declaration
malformed block record in AST file
METADATA
MODULE_DIRECTORY
MODULE_MAP_FILE
IMPORTS
ORIGINAL_FILE
ORIGINAL_PCH_DIR
ORIGINAL_FILE_ID
INPUT_FILE_OFFSETS
OPTIONS_BLOCK
LANGUAGE_OPTIONS
TARGET_OPTIONS
FILE_SYSTEM_OPTIONS
HEADER_SEARCH_OPTIONS
PREPROCESSOR_OPTIONS
INPUT_FILES_BLOCK
INPUT_FILE
AST_BLOCK
TYPE_OFFSET
DECL_OFFSET
IDENTIFIER_OFFSET
IDENTIFIER_TABLE
EAGERLY_DESERIALIZED_DECLS
MODULAR_CODEGEN_DECLS
SPECIAL_TYPES
STATISTICS
TENTATIVE_DEFINITIONS
SELECTOR_OFFSETS
METHOD_POOL
PP_COUNTER_VALUE
SOURCE_LOCATION_OFFSETS
SOURCE_LOCATION_PRELOADS
EXT_VECTOR_DECLS
UNUSED_FILESCOPED_DECLS
PPD_ENTITIES_OFFSETS
VTABLE_USES
REFERENCED_SELECTOR_POOL
TU_UPDATE_LEXICAL
SEMA_DECL_REFS
WEAK_UNDECLARED_IDENTIFIERS
PENDING_IMPLICIT_INSTANTIATIONS
UPDATE_VISIBLE
DECL_UPDATE_OFFSETS
DECL_UPDATES
CUDA_SPECIAL_DECL_REFS
HEADER_SEARCH_TABLE
FP_PRAGMA_OPTIONS
OPENCL_EXTENSIONS
OPENCL_EXTENSION_TYPES
OPENCL_EXTENSION_DECLS
DELEGATING_CTORS
KNOWN_NAMESPACES
MODULE_OFFSET_MAP
SOURCE_MANAGER_LINE_TABLE
OBJC_CATEGORIES_MAP
FILE_SORTED_DECLS
IMPORTED_MODULES
OBJC_CATEGORIES
MACRO_OFFSET
INTERESTING_IDENTIFIERS
UNDEFINED_BUT_USED
LATE_PARSED_TEMPLATE
OPTIMIZE_PRAGMA_OPTIONS
MSSTRUCT_PRAGMA_OPTIONS
POINTERS_TO_MEMBERS_PRAGMA_OPTIONS
UNUSED_LOCAL_TYPEDEF_NAME_CANDIDATES
DELETE_EXPRS_TO_ANALYZE
CUDA_PRAGMA_FORCE_HOST_DEVICE_DEPTH
PP_CONDITIONAL_STACK
SOURCE_MANAGER_BLOCK
SM_SLOC_FILE_ENTRY
SM_SLOC_BUFFER_ENTRY
SM_SLOC_BUFFER_BLOB
SM_SLOC_BUFFER_BLOB_COMPRESSED
SM_SLOC_EXPANSION_ENTRY
PREPROCESSOR_BLOCK
PP_MACRO_DIRECTIVE_HISTORY
PP_MACRO_FUNCTION_LIKE
PP_MACRO_OBJECT_LIKE
PP_MODULE_MACRO
PP_TOKEN
SUBMODULE_BLOCK
SUBMODULE_METADATA
SUBMODULE_DEFINITION
SUBMODULE_UMBRELLA_HEADER
SUBMODULE_HEADER
SUBMODULE_TOPHEADER
SUBMODULE_UMBRELLA_DIR
SUBMODULE_IMPORTS
SUBMODULE_EXPORTS
SUBMODULE_REQUIRES
SUBMODULE_EXCLUDED_HEADER
SUBMODULE_LINK_LIBRARY
SUBMODULE_CONFIG_MACRO
SUBMODULE_CONFLICT
SUBMODULE_PRIVATE_HEADER
SUBMODULE_TEXTUAL_HEADER
SUBMODULE_PRIVATE_TEXTUAL_HEADER
SUBMODULE_INITIALIZERS
SUBMODULE_EXPORT_AS
COMMENTS_BLOCK
COMMENTS_RAW_COMMENT
DECLTYPES_BLOCK
TYPE_EXT_QUAL
TYPE_COMPLEX
TYPE_POINTER
TYPE_BLOCK_POINTER
TYPE_LVALUE_REFERENCE
TYPE_RVALUE_REFERENCE
TYPE_MEMBER_POINTER
TYPE_CONSTANT_ARRAY
TYPE_INCOMPLETE_ARRAY
TYPE_VARIABLE_ARRAY
TYPE_VECTOR
TYPE_EXT_VECTOR
TYPE_FUNCTION_NO_PROTO
TYPE_FUNCTION_PROTO
TYPE_TYPEDEF
TYPE_TYPEOF_EXPR
TYPE_TYPEOF
TYPE_RECORD
TYPE_ENUM
TYPE_OBJC_INTERFACE
TYPE_OBJC_OBJECT_POINTER
TYPE_DECLTYPE
TYPE_ELABORATED
TYPE_SUBST_TEMPLATE_TYPE_PARM
TYPE_UNRESOLVED_USING
TYPE_INJECTED_CLASS_NAME
TYPE_OBJC_OBJECT
TYPE_TEMPLATE_TYPE_PARM
TYPE_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_NAME
TYPE_DEPENDENT_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_SIZED_ARRAY
TYPE_DEPENDENT_SIZED_EXT_VECTOR
TYPE_PAREN
TYPE_PACK_EXPANSION
TYPE_ATTRIBUTED
TYPE_SUBST_TEMPLATE_TYPE_PARM_PACK
TYPE_AUTO
TYPE_UNARY_TRANSFORM
TYPE_ATOMIC
TYPE_DECAYED
TYPE_ADJUSTED
TYPE_OBJC_TYPE_PARAM
LOCAL_REDECLARATIONS
DECL_TYPEDEF
DECL_TYPEALIAS
DECL_ENUM
DECL_RECORD
DECL_ENUM_CONSTANT
DECL_FUNCTION
DECL_OBJC_METHOD
DECL_OBJC_INTERFACE
DECL_OBJC_PROTOCOL
DECL_OBJC_IVAR
DECL_OBJC_AT_DEFS_FIELD
DECL_OBJC_CATEGORY
DECL_OBJC_CATEGORY_IMPL
DECL_OBJC_IMPLEMENTATION
DECL_OBJC_COMPATIBLE_ALIAS
DECL_OBJC_PROPERTY
DECL_OBJC_PROPERTY_IMPL
DECL_FIELD
DECL_MS_PROPERTY
DECL_VAR
DECL_IMPLICIT_PARAM
DECL_PARM_VAR
DECL_FILE_SCOPE_ASM
DECL_BLOCK
DECL_CONTEXT_LEXICAL
DECL_CONTEXT_VISIBLE
DECL_NAMESPACE
DECL_NAMESPACE_ALIAS
DECL_USING
DECL_USING_SHADOW
DECL_USING_DIRECTIVE
DECL_UNRESOLVED_USING_VALUE
DECL_UNRESOLVED_USING_TYPENAME
DECL_LINKAGE_SPEC
DECL_CXX_RECORD
DECL_CXX_METHOD
DECL_CXX_CONSTRUCTOR
DECL_CXX_INHERITED_CONSTRUCTOR
DECL_CXX_DESTRUCTOR
DECL_CXX_CONVERSION
DECL_ACCESS_SPEC
DECL_FRIEND
DECL_FRIEND_TEMPLATE
DECL_CLASS_TEMPLATE
DECL_CLASS_TEMPLATE_SPECIALIZATION
DECL_CLASS_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_VAR_TEMPLATE
DECL_VAR_TEMPLATE_SPECIALIZATION
DECL_VAR_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_FUNCTION_TEMPLATE
DECL_TEMPLATE_TYPE_PARM
DECL_NON_TYPE_TEMPLATE_PARM
DECL_TEMPLATE_TEMPLATE_PARM
DECL_TYPE_ALIAS_TEMPLATE
DECL_STATIC_ASSERT
DECL_CXX_BASE_SPECIFIERS
DECL_CXX_CTOR_INITIALIZERS
DECL_INDIRECTFIELD
DECL_EXPANDED_NON_TYPE_TEMPLATE_PARM_PACK
DECL_EXPANDED_TEMPLATE_TEMPLATE_PARM_PACK
DECL_CLASS_SCOPE_FUNCTION_SPECIALIZATION
DECL_IMPORT
DECL_OMP_THREADPRIVATE
DECL_EMPTY
DECL_OBJC_TYPE_PARAM
DECL_OMP_CAPTUREDEXPR
DECL_PRAGMA_COMMENT
DECL_PRAGMA_DETECT_MISMATCH
DECL_OMP_DECLARE_REDUCTION
STMT_STOP
STMT_NULL_PTR
STMT_REF_PTR
STMT_NULL
STMT_COMPOUND
STMT_CASE
STMT_DEFAULT
STMT_LABEL
STMT_ATTRIBUTED
STMT_IF
STMT_SWITCH
STMT_WHILE
STMT_DO
STMT_FOR
STMT_GOTO
STMT_INDIRECT_GOTO
STMT_CONTINUE
STMT_BREAK
STMT_RETURN
STMT_DECL
STMT_GCCASM
STMT_MSASM
EXPR_PREDEFINED
EXPR_DECL_REF
EXPR_INTEGER_LITERAL
EXPR_FLOATING_LITERAL
EXPR_IMAGINARY_LITERAL
EXPR_STRING_LITERAL
EXPR_CHARACTER_LITERAL
EXPR_PAREN
EXPR_PAREN_LIST
EXPR_UNARY_OPERATOR
EXPR_SIZEOF_ALIGN_OF
EXPR_ARRAY_SUBSCRIPT
EXPR_CALL
EXPR_MEMBER
EXPR_BINARY_OPERATOR
EXPR_COMPOUND_ASSIGN_OPERATOR
EXPR_CONDITIONAL_OPERATOR
EXPR_IMPLICIT_CAST
EXPR_CSTYLE_CAST
EXPR_COMPOUND_LITERAL
EXPR_EXT_VECTOR_ELEMENT
EXPR_INIT_LIST
EXPR_DESIGNATED_INIT
EXPR_DESIGNATED_INIT_UPDATE
EXPR_IMPLICIT_VALUE_INIT
EXPR_NO_INIT
EXPR_VA_ARG
EXPR_ADDR_LABEL
EXPR_STMT
EXPR_CHOOSE
EXPR_GNU_NULL
EXPR_SHUFFLE_VECTOR
EXPR_BLOCK
EXPR_GENERIC_SELECTION
EXPR_OBJC_STRING_LITERAL
EXPR_OBJC_BOXED_EXPRESSION
EXPR_OBJC_ARRAY_LITERAL
EXPR_OBJC_DICTIONARY_LITERAL
EXPR_OBJC_ENCODE
EXPR_OBJC_SELECTOR_EXPR
EXPR_OBJC_PROTOCOL_EXPR
EXPR_OBJC_IVAR_REF_EXPR
EXPR_OBJC_PROPERTY_REF_EXPR
EXPR_OBJC_KVC_REF_EXPR
EXPR_OBJC_MESSAGE_EXPR
STMT_OBJC_FOR_COLLECTION
STMT_OBJC_CATCH
STMT_OBJC_FINALLY
STMT_OBJC_AT_TRY
STMT_OBJC_AT_SYNCHRONIZED
STMT_OBJC_AT_THROW
EXPR_OBJC_BOOL_LITERAL
STMT_CXX_CATCH
STMT_CXX_TRY
STMT_CXX_FOR_RANGE
EXPR_CXX_OPERATOR_CALL
EXPR_CXX_MEMBER_CALL
EXPR_CXX_CONSTRUCT
EXPR_CXX_TEMPORARY_OBJECT
EXPR_CXX_STATIC_CAST
EXPR_CXX_DYNAMIC_CAST
EXPR_CXX_REINTERPRET_CAST
EXPR_CXX_CONST_CAST
EXPR_CXX_FUNCTIONAL_CAST
EXPR_USER_DEFINED_LITERAL
EXPR_CXX_STD_INITIALIZER_LIST
EXPR_CXX_BOOL_LITERAL
EXPR_CXX_NULL_PTR_LITERAL
EXPR_CXX_TYPEID_EXPR
EXPR_CXX_TYPEID_TYPE
EXPR_CXX_THIS
EXPR_CXX_THROW
EXPR_CXX_DEFAULT_ARG
EXPR_CXX_DEFAULT_INIT
EXPR_CXX_BIND_TEMPORARY
EXPR_CXX_SCALAR_VALUE_INIT
EXPR_CXX_NEW
EXPR_CXX_DELETE
EXPR_CXX_PSEUDO_DESTRUCTOR
EXPR_EXPR_WITH_CLEANUPS
EXPR_CXX_DEPENDENT_SCOPE_MEMBER
EXPR_CXX_DEPENDENT_SCOPE_DECL_REF
EXPR_CXX_UNRESOLVED_CONSTRUCT
EXPR_CXX_UNRESOLVED_MEMBER
EXPR_CXX_UNRESOLVED_LOOKUP
EXPR_CXX_EXPRESSION_TRAIT
EXPR_CXX_NOEXCEPT
EXPR_OPAQUE_VALUE
EXPR_BINARY_CONDITIONAL_OPERATOR
EXPR_TYPE_TRAIT
EXPR_ARRAY_TYPE_TRAIT
EXPR_PACK_EXPANSION
EXPR_SIZEOF_PACK
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM_PACK
EXPR_FUNCTION_PARM_PACK
EXPR_MATERIALIZE_TEMPORARY
EXPR_CUDA_KERNEL_CALL
EXPR_CXX_UUIDOF_EXPR
EXPR_CXX_UUIDOF_TYPE
EXPR_LAMBDA
PREPROCESSOR_DETAIL_BLOCK
PPD_MACRO_EXPANSION
PPD_MACRO_DEFINITION
PPD_INCLUSION_DIRECTIVE
EXTENSION_BLOCK
EXTENSION_METADATA
UNHASHED_CONTROL_BLOCK
SIGNATURE
DIAGNOSTIC_OPTIONS
HEADER_SEARCH_PATHS
DIAG_PRAGMA_MAPPINGS
serializing
unexpected declaration kind '
*** Global Module Index Dump:
Module files:
modules.idx
*** Global Module Index Statistics:
  %u / %u identifier lookups succeeded (%f%%)
GLOBAL_INDEX_BLOCK
INDEX_METADATA
MODULE
IDENTIFIER_INDEX
-%%%%%%%%
Module: 
  Imports: 
  Base source location offset: 
Source location offset local -> global map
  Base identifier ID: 
  Number of identifiers: 
Identifier ID local -> global map
  Base macro ID: 
  Number of macros: 
Macro ID local -> global map
  Base submodule ID: 
  Number of submodules: 
Submodule ID local -> global map
  Base selector ID: 
  Number of selectors: 
Selector ID local -> global map
  Base preprocessed entity ID: 
  Number of preprocessed entities: 
Preprocessed entity ID local -> global map
  Base type index: 
  Number of types: 
Type index local -> global map
  Base decl ID: 
  Number of decls: 
Decl ID local -> global map
module file out of date
module file not found
.timestamp
signature mismatch
could not read module signature
construct into local variable
construct into new-allocator
construct into return address
materialize temporary
destroy temporary
elide destructor
elide constructor
construct into argument
construct into member variable
[[clang::fallthrough]]
[[fallthrough]]
*** Analysis Based Warnings Stats:
 functions analyzed (
 w/o CFGs).
 CFG blocks built.
 average CFG blocks per function.
 max CFG blocks per function.
 functions analyzed for uninitialiazed variables
 variables analyzed.
 average variables per function.
 max variables per function.
 block visits.
 average block visits per function.
 max block visits per function.
OVERLOAD: 
COMPLETION: 
 (Hidden)
 (requires fix-it:
 to "
Pattern : 
unspecified
imaginary
(error)
(decltype)
__final
xclude_from_explicit_instantiation
bjc_arc_weak_reference_unavailable
:dispatch_threads_per_threadgroup
:max_total_threads_per_threadgroup
lang::consumable_set_state_on_read
clang::try_acquire_shared_capability
clang::require_constant_initialization
clang::objc_requires_property_definitions
eometry_intersection_function_table_offset
nstance_intersection_function_table_offset
clang::objc_protocol_requires_explicit_implementation
clang::objc_returns_inner_pointer
functions and Objective-C methods
functions
variables and functions
variables, functions, and classes
Objective-C methods, enums, structs, unions, classes, functions, and function pointers
structs, unions, and classes
classes
structs, unions, classes, and enums
variables with non-local storage, functions, and Objective-C methods
variables, non-static data members, types, enums, enumerators, labels, non-static data members, Objective-C methods, functions, and function pointers
local variables
variables
thread-local variables
Objective-C interfaces
ExpectedType
typedefs
functions, global variables, Objective-C methods, and Objective-C properties
Objective-C methods and functions
functions and parameters
global variables
non-static non-const member functions
non-static data members and global variables
non-K&R-style functions
parameters and typedefs
Objective-C interfaces and Objective-C protocols
Objective-C methods and Objective-C properties
Objective-C methods
Objective-C protocols
init methods of interface or class extension declarations
structs, unions, classes, and typedefs
functions, Objective-C methods, and Objective-C properties
non-static member functions
functions, methods, and parameters
functions and global variables
functions, Objective-C methods, and global variables
functions, function pointers, Objective-C methods, and variables
variables, enums, typedefs, and non-static data members
parameters and non-static data members
ExpectedField
non-static data members
global constant variables or shader parameters
parameters and implicit object parameters
Objective-C instance methods
Objective-C methods and non-K&R-style functions
Objective-C methods, blocks, and non-K&R-style functions
enums
named declarations
functions, variables, classes, and Objective-C interfaces
functions and classes
parameters, Objective-C methods, and functions
Objective-C methods, functions, and function pointers
functions and variables
inline functions
functions and function pointers
variables and typedefs
structs, variables, functions, and namespaces
kernel functions
Flags: 
FnScope
BreakScope
ContinueScope
DeclScope
ControlScope
ClassScope
BlockScope
TemplateParamScope
FunctionPrototypeScope
FunctionDeclarationScope
AtCatchScope
ObjCMethodScope
SwitchScope
TryScope
FnTryCatchScope
OpenMPDirectiveScope
OpenMPLoopDirectiveScope
OpenMPSimdDirectiveScope
EnumScope
SEHTryScope
SEHExceptScope
SEHFilterScope
CompoundStmtScope
ClassInheritanceScope
Parent: (clang::Scope*)
Depth: 
MSLastManglingNumber: 
MSCurManglingNumber: 
Entity : (clang::DeclContext*)
NRVO not allowed
NRVO candidate : (clang::VarDecl*)
atomic_int
atomic_uint
atomic_long
atomic_ulong
atomic_float
atomic_double
atomic_flag
atomic_intptr_t
atomic_uintptr_t
atomic_size_t
atomic_ptrdiff_t
cl_khr_int64_base_atomics cl_khr_int64_extended_atomics
ocl_image1d_ro_t
ocl_image1d_array_ro_t
ocl_image1d_buffer_ro_t
ocl_image2d_ro_t
ocl_image2d_array_ro_t
ocl_image2d_depth_ro_t
ocl_image2d_array_depth_ro_t
ocl_image2d_msaa_ro_t
ocl_image2d_array_msaa_ro_t
ocl_image2d_msaa_depth_ro_t
ocl_image2d_array_msaa_depth_ro_t
ocl_image3d_ro_t
ocl_image1d_wo_t
ocl_image1d_array_wo_t
ocl_image1d_buffer_wo_t
ocl_image2d_wo_t
ocl_image2d_array_wo_t
ocl_image2d_depth_wo_t
ocl_image2d_array_depth_wo_t
ocl_image2d_msaa_wo_t
ocl_image2d_array_msaa_wo_t
ocl_image2d_msaa_depth_wo_t
ocl_image2d_array_msaa_depth_wo_t
ocl_image3d_wo_t
ocl_image1d_rw_t
ocl_image1d_array_rw_t
ocl_image1d_buffer_rw_t
ocl_image2d_rw_t
ocl_image2d_array_rw_t
ocl_image2d_depth_rw_t
ocl_image2d_array_depth_rw_t
ocl_image2d_msaa_rw_t
ocl_image2d_array_msaa_rw_t
ocl_image2d_msaa_depth_rw_t
ocl_image2d_array_msaa_depth_rw_t
ocl_image3d_rw_t
ocl_sampler_t
ocl_event_t
*** Semantic Analysis Stats:
 SFINAE diagnostics trapped.
'weak'
stack empty
mac68k
pack
vtordisp
a prior #pragma section
, and 
SwiftName API Note
<API Notes>
property expression
container subscripting expression
vector element
structure pointer
'int (*)(const char *, ...)'
'kernel_enqueue_flags_t' (i.e. uint)
ndrange_t
'ndrange_t'
spsel
daifset
daifclr
First arg must be a matrix
Second arg must be pointer to write data back to
Offset must be an integer type
Stride must be an integer type
First parameter must be a pointer or array
Row spec needs to be a constant integer
Column spec needs to be a constant integer
Fourth parameter must be a constant integer
Fifth parameter must be a constant integer
Pointer must be to integer or floating point numbers
First parameter must be a matrix
Scalar must be a float or an integer
Implicit cast to matrix element type failed
The parameter must be a matrix
Both parameters must be matrices
Proper dimensions must be used in the matrix multiplication
Both matrix types must be the same
__builtin_matrix_extract takes a matrix as the first argument
__builtin_matrix_extract takes an int as the second argument
__builtin_matrix_extract takes in int as the third argument
First parameter to __builtin_matrix_insert must be a matrix
Row and Column parameter to __builtin_matrix_insert must be integers
c_str
c_str()
sizeof(
) - 
strlen(
) - 1
std::abs
'std::strong_ordering::greater'
'std::strong_ordering::less'
'super'
_Block_copy
move
_stitching_traits_impl
_stitching_placement_new
load_argument
store_return_value
destroy
imageblock with explicit layout
imageblock with implicit layout
 has imageblock parameter with implicit layout
 has color attachment parameters
has index 
 but 
 has imageblock with implicit layout parameter with
 color attachment index 
 has color attachment parameter with index 
constant buffer
writable buffer
writable texture
read_write texture
patch-data attribute
AIR_ENABLE_ARRAYS_OF_BUFFERS_AB
, nil
, NULL
, (void*)0
nonnull 
nullable 
null_unspecified 
(...)
template<...> class
operator new
operator delete
operator new[]
operator delete[]
operator+
operator-
operator*
operator/
operator%
operator^
operator&
operator|
operator~
operator!
operator=
operator<
operator>
operator+=
operator-=
operator*=
operator/=
operator%=
operator^=
operator&=
operator|=
operator<<
operator>>
operator<<=
operator>>=
operator==
operator!=
operator<=
operator>=
operator<=>
operator&&
operator||
operator++
operator--
operator,
operator->*
operator()
operator[]
operatorco_await
struct <anonymous>
__interface <anonymous>
union <anonymous>
class <anonymous>
enum <anonymous>
declarations
string-literal
declaration
qualifier
parameters
statements
condition
expression
init-expression
init-statement
inc-expression
label
Objective-C type
CF type
std::type_info
expression-or-type
expressions
std::nullptr_t
sizeof...
parameter-pack
char[]
const char[]
@encode
type-name
Protocol *
@protocol
protocol-name
@selector
NSString *
NSArray *
objects, ...
NSDictionary *
object, ...
@catch
@synchronized
@private
@protected
@public
@package
@dynamic
@synthesize
@required
@optional
@class
@interface
@implementation
@compatibility_alias
@import
allocWithZone
args
bycopy
oneway
sender
NSSet
countOf
objectIn
AtIndex
AtIndexes
NSIndexSet *
indexes
range
object-type
range:
NSRange
inRange
insertObject:
insert
atIndexes
atIndexes:
removeObjectFrom
remove
replaceObjectIn
withObject:
replace
with
enumeratorOf
NSEnumerator *
memberOf
Object
NSSet *
intersect
keyPathsForValuesAffecting
NSSet<NSString *> *
automaticallyNotifiesObserversOf
number
filename
ApplicationExtension
std::experimental::coroutine_traits
promise_type
__promise
coroutine_traits
initial_suspend
final_suspend
coroutine_handle
std::experimental::coroutine_handle
from_address
await_ready
await_suspend
await_resume
await_transform
yield_value
return_value
return_void
get_return_object_on_allocation_failure
__coro_gro
unhandled_exception
get_return_object
struct 
__interface 
union 
enum 
asprintf
vasprintf
global or constant
constant or thread
cudaConfigureCall
hipConfigureCall
intptr_t
uintptr_t
FILE
jmp_buf
sigjmp_buf
ucontext_t
ucontext.h
  int 
tune=
fpmath=
arch=
'minsize'
'ns_returns_retained'
'dllimport'
array_ref
visible_function_table
const 
command_buffer
render_pipeline_state
compute_pipeline_state
imageblock
_atomic
interpolant
patch_control_point
'attribute'
'color'
'center_no_perspective'
'sample_mask'
'position'
'interrupt'
'signal'
macos_app_extension
swift
ios_app_extension
watchos_app_extension
tvos_app_extension
maccatalyst_app_extension
__CFString
a CFString
NSMutableString
an NSString
a string type
string type
__declspec(thread)
role
<no message provided>
API_AVAILABLE
API_AVAILABLE(
macCatalystApplicationExtension
macCatalyst
watchOSApplicationExtension
tvOSApplicationExtension
macOSApplicationExtension
iOSApplicationExtension
watchOS
tvOS
macOS
 and 
@available
, *)) {
} else {
// Fallback on earlier versions
tuple_size
tuple_element
 const &
const &
experimental
gets
auto &
constexpr auto 
'const char *'
parameter
(void)
load
forwardInvocation
NSProxy
macOS 10.11
iOS 9
swap
__profile
throw()
throw(
(void*) 0
object_getClass
object_setClass
.c_str()
static_cast<void>(
(void)(
isEqual
'std::strong_ordering::equal'
(vector of 
' values)
type_info
00000000-0000-0000-0000-000000000000
_GUID
'size_t'
default new
bad_alloc
default delete
NSConstantString
valueWithBytes
objCType
bytes
integral
keys
respondsToSelector
CFBridgingRelease
__bridge 
__bridge_transfer 
CFBridgingRetain
__bridge_retained 
CFBridgingRelease 
CFBridgingRetain 
 = {}
NULL
'\0'
L'\0'
u'\0'
U'\0'
Variable
Parameter
CF audited function Parameter
Result
StmtExprResult
Exception
Member
Temporary
CompoundLiteral
RelatedResult
Base
Delegating
ArrayElement 
VectorElement 
ComplexElement 
Block (lambda)
LambdaCapture 
Filter Mode
Addressing Mode
'this'
lookup results for 
        
retain (or strong)
unsafe_unretained
nonatomic, 
__attribute__((objc_method_family(none)))
.global_tid.
.bound_tid.
.part_id.
.privates.
.copy_fn.
.task_t.
.lb.
.ub.
.st.
.liter.
.reductions.
.previous.lb.
.previous.ub.
 or 
.capture_expr.
.omp.lb
.omp.ub
.omp.is_last
.omp.stride
.omp.comb.lb
.omp.comb.ub
.omp.iv
'map'
'map' or 'use_device_ptr'
.firstprivate.temp
.devptr.temp
'source' or 'sink'
threadprivate or private in the enclosing context
.copyprivate.src
.copyprivate.dst
.copyin.src
.copyin.dst
.linear.start
.linear.step
.reduction.lhs
.task_red.
.lastprivate.src
.lastprivate.dst
 (by copy constructor)
 (direct reference binding)
 (reference binding)
No conversions required
No conversion
Lvalue-to-rvalue
Array-to-pointer
Function-to-pointer
Function pointer conversion
Qualification
Integral promotion
Floating point promotion
Complex promotion
Integral conversion
Floating conversion
Complex conversion
Floating-integral conversion
Pointer conversion
Pointer-to-member conversion
Boolean conversion
Compatible-types conversion
Derived-to-base conversion
Vector conversion
Vector packing/unpacking conversion
Vector element-wise conversion
Vector splat
Complex-real conversion
Block Pointer conversion
Transparent Union Conversion
Writeback conversion
OpenCL Zero Event Conversion
C specific type conversion
Incompatible pointer conversion
'enable_if'
operator->
objectForKeyedSubscript
objectAtIndexedSubscript
UNREFERENCED_PARAMETER
countByEnumeratingWithState
objects
__range
__begin
__end
std::move(
literal
default captured statement
Objective-C @finally statement
OpenMP region
'__try'
'try'
__context
__MSASMLABEL_.${:uid}__
assume_safety
full
enable
static_cast<
[with 
instantiating class definition
instantiating enum definition
instantiating default member init
common_type
_Map_base
__detail
instantiating variable definition
instantiating variable initializer
instantiating function definition
omp_in
omp_orig
omp_priv
omp_out
cannot instantiate %0 yet
type name
NSError
va_list
'static'
type qualifier
'__ptr32'
'__ptr64'
'__sptr'
'__uptr'
autoreleasing
'address_space'
Calling 
Calling anonymous code
Entering scope
Invoking block
 defined at 
line 
libcxx03 std::call_once implementation, skipping.
unknown std::call_once implementation, skipping.
__state_
_M_once
 (ENTRY)]
 (EXIT)]
 (INDIRECT GOTO DISPATCH)]
 (NORETURN)]
({ ... ; 
... , 
 (OperatorCall)
 (CXXRecordTypedCall
 (BindTemporary)
 (CXXConstructExpr
 (Implicit destructor)
 (Lifetime ends)
 (LoopExit)
CFGScopeBegin(
CFGScopeEnd(
CFGNewAllocator(
 (Base object destructor)
this->
 (Member object destructor)
() (Temporary object destructor)
   T: 
   Preds 
     
(Unreachable)
   Succs 
    
 NULL
(Temp Dtor) 
try ...
static init 
do ... while 
__builtin_choose_expr( 
__try ...
switch 
while 
 ? ... : ...
 || ...
 && ...
 (Base initializer)
 (Delegating initializer)
 (Member initializer)
raise
NSException
arguments
#null
#undefined
let 
) then 
 else 
return 
branch (
BB_null
phi(
 BB_
let _x
CFG {
cast[
 := 
#ptr
#vref
#lit
Loading API notes from 
_private
APINotes
_private.
APINotes.
CONTROL_BLOCK
MODULE_NAME
IDENTIFIER_BLOCK
OBJC_CONTEXT_BLOCK
OBJC_PROPERTY_BLOCK
OBJC_METHOD_BLOCK
OBJC_SELECTOR_BLOCK
GLOBAL_VARIABLE_BLOCK
GLOBAL_FUNCTION_BLOCK
Name
AvailabilityMsg
SwiftInferImportAsMember
SwiftVersions
Version
not a version number in the form XX.YY
Classes
Protocols
Functions
Nullability
NullabilityOfRet
RetainCountConvention
ResultType
Globals
Enumerators
Tags
EnumKind
CFEnum
NSEnum
CFOptions
NSOptions
CFClosedEnum
NSClosedEnum
Typedefs
SwiftWrapper
Parameters
Position
AuditedForNullability
Methods
Selector
MethodKind
FactoryAsInit
DesignatedInit
Required
Properties
PropertyKind
SwiftImportAsAccessors
Instance
TVOS
WatchOS
BridgeOS
nonswift
multiple definitions of class '
multiple definitions of protocol '
multiple definitions of global variable '
multiple definitions of global function '
multiple definitions of enumerator '
multiple definitions Of tag '
cannot mix EnumKind and EnumExtensibility (for 
cannot mix EnumKind and FlagEnum (for 
multiple definitions of typedef '
nullability info for 
 does not fit
availability message for available API '
' will not be used
duplicate definition of method '
selector 
is missing a ':' at the end
'FactoryAsInit' is no longer valid; use 'SwiftName' instead
duplicate definition of instance property '
duplicate definition of class property '
  <#code#>
<#code#>
break;
Int: 
Float: 
Vector: 
ComplexInt: 
ComplexFloat: 
LValue: <todo>
Array: 
Struct 
 bases: 
 fields: 
Union: 
MemberPointer: <todo>
AddrLabelDiff: <todo>
<uninitialized>
(char*)
 + 1
;{}#@
*** AST Context Stats:
 types total.
 types
 implicit default constructors created
 implicit copy constructors created
 implicit move constructors created
 implicit copy assignment operators created
 implicit move assignment operators created
 implicit destructors created
__int128_t
__uint128_t
__NSConstantString_tag
_cfisa
_swift_rc
_ptr
length
__NSConstantString
objc_super
__block_descriptor
reserved
Size
__block_descriptor_withcopydispose
CopyFuncPtr
DestroyFuncPtr
instancetype
{objc_object=}
{objc_class=}
"_vptr$
__builtin_va_list
__va_list
__stack
__gr_top
__vr_top
__gr_offs
__vr_offs
__va_list_tag
overflow_arg_area
reg_save_area
gp_offset
fp_offset
__ap
__gpr
__fpr
__overflow_arg_area
__reg_save_area
__builtin_ms_va_list
unqualified
the global namespace
the global scope
block literal
lambda expression
method 
function 
values
value
packed 
vector of 
(no argument)
(default) 
 != 
[(default) 
(default) template 
[(default) template 
[template 
[...]
 * ...]
 aka 
(no qualifiers) 
(no qualifiers)
<<<NULL>>>
 Name="
 Arg[
 explicitly
 implicitly
 Param="
 ParamIndex=
 Position=<
" CloseName="
 Text="
 Attrs: 
 SelfClosing
 RenderNormal
 RenderBold
 RenderMonospaced
 RenderEmphasized
<not a builtin command>
<invalid sloc>
QualType
LocInfo Type
Type
 sugar
 dependent
 instantiation_dependent
 variably_modified
 contains_unexpanded_pack
 imported
 written as lvalue reference
 trailing_return
 underlying_type
 depth 
 index 
 pack
 alias
 decltype(auto)
 undeduced
 expansions 
TemplateArgument
 null
 type
 decl
 nullptr
 integral 
 template 
 template expansion
 expr
 noreturn
 produces_result
 regparm 
 altivec
 altivec pixel
 altivec bool
 neon
 neon poly
(CXXTemporary
 global
 array
 this
 list
 functional cast to 
 part_of_explicit_cast
 field 
 extended by 
 selector=
Decl
 isFreeIvar
 class=
 super (instance)
 super (class)
 Kind=MethodRef Getter="
" Setter="
 Kind=PropertyRef Property="
 super
 Messaging=
Getter&Setter
Getter
Setter
 Kind=ArraySubscript GetterForArray="
 Kind=DictionarySubscript GetterForDictionary="
" SetterForArray="
" SetterForDictionary="
ADL) = '
 empty
 sizeof
 alignof
 vec_step
 __builtin_omp_required_simd_align
 catch all
<<<NULL>>> OMPClause
Clause
 <implicit>
array filler
 elidable
 std::initializer_list
 zeroing
 xvalue
 lvalue
 bitfield
 objcproperty
 objcsubscript
 vectorcomponent
 first 
also in 
 implicit
 referenced
 invalid
 constexpr
<undeserialized declarations>
capture this
 C++
 inline
original
super
 required
 optional
 readonly
 assign
 readwrite
 retain
 copy
 nonatomic
 atomic
 weak
 strong
 unsafe_unretained
getter
setter
 ...
 __module_private__
 typename
 covariant
 contravariant
 bounded
 virtual
target 
nominated 
constructed 
 synthesize
 none
 protected
 package
 combiner
 initializer
 omp_priv ()
 omp_priv = 
 dynamic
compiler
exestr
linker
 tls
 tls_dynamic
 nrvo
 cinit
 callinit
 listinit
 pure
_delete
 delete
 trivial
 noexcept-unevaluated 
 noexcept-uninstantiated 
<<NULL params x 
Overrides: [ 
DefinitionData
 parsing_base_specifiers
 generic
 lambda
 pass_in_registers
 aggregate
 standard_layout
 trivially_copyable
 pod
 polymorphic
 abstract
 literal
 has_user_declared_ctor
 has_constexpr_non_copy_move_ctor
 has_mutable_fields
 has_variant_members
 can_const_default_init
Destructor
 simple
 irrelevant
 non_trivial
 user_declared
 needs_implicit
 needs_overload_resolution
 defaulted_is_deleted
MoveAssignment
 exists
CopyAssignment
 has_const_param
 implicit_has_const_param
MoveConstructor
CopyConstructor
DefaultConstructor
 user_provided
 defaulted_is_constexpr
 definition
CXXCtorInitializer
 byref
 nested
FallThrough
Suppress
SwiftContext
SwiftErrorResult
SwiftIndirectResult
Annotate
CFConsumed
CarriesDependency
NSConsumed
NonNull
OSConsumed
PassObjectSize
AMDGPUFlatWorkGroupSize
AMDGPUNumSGPR
AMDGPUNumVGPR
AMDGPUWavesPerEU
ARMInterrupt
AVRInterrupt
AVRSignal
AcquireCapability
AcquiredAfter
AcquiredBefore
AlignMac68k
Aligned
AllocAlign
AllocSize
AlwaysDestroy
AlwaysInline
AnalyzerNoReturn
AnyX86Interrupt
AnyX86NoCallerSavedRegisters
AnyX86NoCfCheck
ArcWeakrefUnavailable
ArgumentWithTypeTag
Artificial
AsmLabel
AssertCapability
AssertExclusiveLock
AssertSharedLock
AssumeAligned
Availability
Blocks
C11NoReturn
CDecl
CFAuditedTransfer
CFReturnsNotRetained
CFReturnsRetained
CFUnknownTransfer
CPUDispatch
CPUSpecific
CUDAConstant
CUDADevice
CUDAGlobal
CUDAHost
CUDAInvalidTarget
CUDALaunchBounds
CUDAShared
CXX11NoReturn
CallableWhen
Capability
CapturedRecord
Cleanup
CodeSeg
Cold
Common
Const
Constructor
Consumable
ConsumableAutoCast
ConsumableSetOnRead
Convergent
DLLExport
DLLImport
Deprecated
DiagnoseIf
DisableTailCalls
EmptyBases
EnableIf
EnumExtensibility
ExcludeFromExplicitInstantiation
ExclusiveTrylockFunction
ExternalSourceSymbol
FastCall
Final
FlagEnum
Flatten
Format
FormatArg
GNUInline
GuardedBy
GuardedVar
IBAction
IBOutlet
IBOutletCollection
InitPriority
IntelOclBicc
InternalLinkage
IntersectionCall
LTOVisibilityPublic
LayoutVersion
LifetimeBound
LockReturned
LocksExcluded
MSABI
MSInheritance
MSNoVTable
MSP430Interrupt
MSStruct
MSVtorDisp
MaxFieldAlignment
MayAlias
MetalFunctionConstant
MicroMips
MinSize
MinVectorWidth
Mips16
MipsInterrupt
MipsLongCall
MipsShortCall
NSConsumesSelf
NSReturnsAutoreleased
NSReturnsNotRetained
NSReturnsRetained
Naked
NoAlias
NoCommon
NoDebug
NoDestroy
NoDuplicate
NoInline
NoInstrumentFunction
NoMicroMips
NoMips16
NoReturn
NoSanitize
NoSplitStack
NoStackProtector
NoThreadSafetyAnalysis
NoThrow
NoTracepoint
NotTailCalled
OMPCaptureNoInit
OMPThreadPrivateDecl
OSConsumesThis
OSReturnsNotRetained
OSReturnsRetained
ObjCBridge
ObjCBridgeMutable
ObjCBridgeRelated
ObjCCompleteDefinition
ObjCException
ObjCExplicitProtocolImpl
ObjCIndependentClass
ObjCMethodFamily
ObjCNSObject
ObjCPreciseLifetime
ObjCRequiresPropertyDefs
ObjCRequiresSuper
ObjCReturnsInnerPointer
ObjCRootClass
ObjCSubclassingRestricted
OpenCLIntelReqdSubGroupSize
OpenCLKernel
OpenCLUnrollHint
OptimizeNone
Override
Ownership
Packed
ParamTypestate
Pascal
PragmaClangBSSSection
PragmaClangDataSection
PragmaClangRodataSection
PragmaClangTextSection
PreserveAll
PreserveMost
PtGuardedBy
PtGuardedVar
Pure
RISCVInterrupt
RegCall
Reinitializes
ReleaseCapability
ReqdWorkGroupSize
RequireConstantInit
RequiresCapability
Restrict
ReturnTypestate
ReturnsNonNull
ReturnsTwice
ScopedLockable
Section
SelectAny
Sentinel
SetTypestate
SharedTrylockFunction
StdCall
SwiftCall
SwiftError
SwiftImportAsNonGeneric
SwiftImportPropertyAsAccessors
SwiftName
SwiftNewtype
SwiftPrivate
SysVABI
TLSModel
Target
TestTypestate
ThisCall
TransparentUnion
TrivialABI
TryAcquireCapability
TypeTagForDatatype
TypeVisibility
Unavailable
Uninitialized
Unused
Used
Uuid
VecReturn
VecTypeHint
VectorCall
Visibility
WarnUnused
WarnUnusedResult
WeakImport
WeakRef
WorkGroupSizeHint
X86ForceAlignArgPointer
XRayInstrument
XRayLogArgs
AbiTag
Alias
AlignValue
IFunc
InitSeg
LoopHint
MetalAcceptIntersection
MetalAmplificationCount
MetalAmplificationId
MetalArrayRefSize
MetalAttributeIndex
MetalBarycentricCoord
MetalBaseInstance
MetalBaseVertex
MetalBlendSourceIndex
MetalBufferIndex
MetalCenterNoPerspective
MetalCenterPerspective
MetalCentroidNoPerspective
MetalCentroidPerspective
MetalClipDistance
MetalColor
MetalContinueSearch
MetalDepth
MetalDirection
MetalDispatchQuadGroupsPerGroup
MetalDispatchSIMDGroupsPerGroup
MetalDispatchThreadsPerGroup
MetalDistance
MetalEarlyFragmentTests
MetalFlat
MetalFragment
MetalFrontFacing
MetalFunctionGroups
MetalGeometryId
MetalGeometryIntersectionFunctionTableOffset
MetalHostName
MetalId
MetalImageblockAliasImplicit
MetalImageblockData
MetalInstanceId
MetalInstanceIntersectionFunctionTableOffset
MetalIntersection
MetalInvariant
MetalKernel
MetalLocalIndex
MetalMaxDistance
MetalMaxTotalThreadsPerThreadGroup
MetalMinDistance
MetalOpaque
MetalOrigin
MetalPatch
MetalPatchId
MetalPayload
MetalPixelPosTile
MetalPixelsPerTile
MetalPointCoord
MetalPointSize
MetalPosition
MetalPositionInPatch
MetalPostDepthCoverage
MetalPrimitiveId
MetalQuadGroupIndexGroup
MetalQuadGroupsPerGroup
MetalRasterOrderGroupIndex
MetalRenderTargetArrayIndex
MetalSIMDGroupIndexGroup
MetalSIMDGroupsPerGroup
MetalSampleId
MetalSampleMask
MetalSampleNoPerspective
MetalSamplePerspective
MetalSamplerIndex
MetalShared
MetalStageIn
MetalStageInGridOrigin
MetalStageInGridSize
MetalStencil
MetalStitchable
MetalTextureIndex
MetalThreadExecWidth
MetalThreadGroupPosGrid
MetalThreadGroupsPerGrid
MetalThreadIndexGroup
MetalThreadIndexQuadGroup
MetalThreadIndexSIMDGroup
MetalThreadPosGrid
MetalThreadPosGroup
MetalThreadsPerGrid
MetalThreadsPerGroup
MetalThreadsPerSIMDGroup
MetalTileIndex
MetalUserDefined
MetalVertex
MetalVertexId
MetalViewportArrayIndex
MetalVisible
MetalWorldSpaceDirection
MetalWorldSpaceOrigin
Mode
NSErrorDomain
NoEscape
OMPCaptureKind
OMPDeclareSimdDecl
OMPDeclareTargetDecl
OMPReferencedVar
ObjCBoxable
ObjCDesignatedInitializer
ObjCRuntimeName
ObjCRuntimeVisible
OpenCLAccess
Overloadable
RenderScriptKernel
SwiftBridge
SwiftBridgedTypedef
SwiftObjCMembers
SwiftVersioned
SwiftVersionedRemoval
Thread
Attr
 Inherited
 Implicit
 IRQ
 FIQ
 SWI
 ABORT
 UNDEF
 Generic
 IsPointer
 Unavailable
 Strict
 ByRef
 Unknown
 Consumed
 Unconsumed
 DT_Error
 DT_Warning
 ArgDependent
 Closed
 Open
 GeneratedDeclaration
 Vectorize
 VectorizeWidth
 Interleave
 InterleaveCount
 Unroll
 UnrollCount
 UnrollAndJam
 UnrollAndJamCount
 Distribute
 Enable
 Disable
 Numeric
 AssumeSafety
 Full
 BestCase
 Any
 Greater
 Less
 None
 IsPredicate
 Triangle
 BoundingBox
 Quad
 sw0
 sw1
 hw0
 hw1
 hw2
 hw3
 hw4
 hw5
 eic
 BS_Undefined
 BS_Inbranch
 BS_Notinbranch
 MT_To
 MT_Link
 OMF_None
 OMF_alloc
 OMF_copy
 OMF_init
 OMF_mutableCopy
 OMF_new
 AAPCS
 AAPCS_VFP
 user
 supervisor
 machine
 NonNullError
 NullResult
 ZeroResult
 NonZeroResult
 NK_Struct
 NK_Enum
 IsReplacedByActive
 LayoutCompatible
 MustBeNull
 Default
 Hidden
 Protected
 IR_None
 IR_ARCForbiddenType
 IR_ForbiddenWeak
 IR_IgnoredWeak
 IR_ARCForbiddenConversion
 IR_ARCInitReturnsUnrelated
 IR_ARCFieldWithOwnership
postfix
prefix
 cannot overflow
' ComputeLHSTy=
 ComputeResultTy=
 result_dependent
 selected
 static
StoredDeclsMap 
 primary
<undeserialized lookups>
DeclarationName 
 __attribute__((amdgpu_flat_work_group_size(
 [[clang::amdgpu_flat_work_group_size(
 __attribute__((amdgpu_num_sgpr(
 [[clang::amdgpu_num_sgpr(
 __attribute__((amdgpu_num_vgpr(
 [[clang::amdgpu_num_vgpr(
 __attribute__((amdgpu_waves_per_eu(
 [[clang::amdgpu_waves_per_eu(
 __attribute__((interrupt("
 [[gnu::interrupt("
")]]
")))
ABORT
UNDEF
 __attribute__((interrupt))
 [[gnu::interrupt]]
 __attribute__((signal))
 [[gnu::signal]]
 __attribute__((abi_tag(
 [[gnu::abi_tag(
 __attribute__((acquire_capability(
 [[clang::acquire_capability(
 __attribute__((acquire_shared_capability(
 [[clang::acquire_shared_capability(
 __attribute__((exclusive_lock_function(
 __attribute__((shared_lock_function(
 __attribute__((acquired_after(
 __attribute__((acquired_before(
 __attribute__((alias("
 [[gnu::alias("
(No spelling)
 __attribute__((align_value(
 __attribute__((aligned
 [[gnu::aligned
 __declspec(align
 alignas
 _Alignas
 __attribute__((alloc_align(
 [[gnu::alloc_align(
 __attribute__((alloc_size
 [[gnu::alloc_size
 __attribute__((always_destroy))
 [[clang::always_destroy]]
 __attribute__((always_inline))
 [[gnu::always_inline]]
 __forceinline
 __attribute__((analyzer_noreturn))
 __attribute__((annotate("
 [[clang::annotate("
 [[gnu::no_caller_saved_registers]]
 [[gnu::nocf_check]]
 __attribute__((objc_arc_weak_reference_unavailable))
 [[clang::objc_arc_weak_reference_unavailable]]
 __attribute__((argument_with_type_tag(
 [[clang::argument_with_type_tag(
 __attribute__((pointer_with_type_tag(
 [[clang::pointer_with_type_tag(
 __attribute__((artificial))
 [[gnu::artificial]]
 asm("
 __asm__("
 __attribute__((assert_capability(
 [[clang::assert_capability(
 __attribute__((assert_shared_capability(
 [[clang::assert_shared_capability(
 __attribute__((assert_exclusive_lock(
 __attribute__((assert_shared_lock(
 __attribute__((assume_aligned(
 [[gnu::assume_aligned(
 __attribute__((availability(
, strict
, introduced=
, deprecated=
, obsoleted=
, unavailable
 [[clang::availability(
 __attribute__((blocks("
 [[clang::blocks("
byref
 _Noreturn
 __attribute__((cdecl))
 [[gnu::cdecl]]
 __cdecl
 _cdecl
 __attribute__((cf_audited_transfer))
 [[clang::cf_audited_transfer]]
 __attribute__((cf_consumed))
 [[clang::cf_consumed]]
 __attribute__((cf_returns_not_retained))
 [[clang::cf_returns_not_retained]]
 __attribute__((cf_returns_retained))
 [[clang::cf_returns_retained]]
 __attribute__((cf_unknown_transfer))
 [[clang::cf_unknown_transfer]]
 __attribute__((cpu_dispatch(
 [[clang::cpu_dispatch(
 __attribute__((cpu_specific(
 [[clang::cpu_specific(
 __attribute__((constant))
 __declspec(__constant__)
 __attribute__((device))
 __declspec(__device__)
 __attribute__((global))
 __declspec(__global__)
 __attribute__((host))
 __declspec(__host__)
 __attribute__((launch_bounds(
 __declspec(__launch_bounds__(
 __attribute__((shared))
 __declspec(__shared__)
 [[noreturn]]
 __attribute__((callable_when(
 [[clang::callable_when(
consumed
unconsumed
 __attribute__((capability("
 [[clang::capability("
 __attribute__((shared_capability("
 [[clang::shared_capability("
 __attribute__((carries_dependency))
 [[carries_dependency]]
 __attribute__((cleanup(
 [[gnu::cleanup(
 __declspec(code_seg("
 __attribute__((cold))
 [[gnu::cold]]
 __attribute__((common))
 [[gnu::common]]
 __attribute__((const))
 [[gnu::const]]
 __attribute__((__const))
 [[gnu::__const]]
 __attribute__((constructor(
 [[gnu::constructor(
 __attribute__((consumable("
 [[clang::consumable("
 __attribute__((consumable_auto_cast_state))
 [[clang::consumable_auto_cast_state]]
 __attribute__((consumable_set_state_on_read))
 [[clang::consumable_set_state_on_read]]
 __attribute__((convergent))
 [[clang::convergent]]
 __declspec(dllexport)
 __attribute__((dllexport))
 [[gnu::dllexport]]
 __declspec(dllimport)
 __attribute__((dllimport))
 [[gnu::dllimport]]
 __attribute__((deprecated("
 [[gnu::deprecated("
 __declspec(deprecated("
 [[deprecated("
 __attribute__((destructor(
 [[gnu::destructor(
 __attribute__((diagnose_if(
", "
 __attribute__((disable_tail_calls))
 [[clang::disable_tail_calls]]
 __declspec(empty_bases)
 __attribute__((enable_if(
 __attribute__((enum_extensibility("
 [[clang::enum_extensibility("
closed
open
 __attribute__((exclude_from_explicit_instantiation))
 [[clang::exclude_from_explicit_instantiation]]
 __attribute__((exclusive_trylock_function(
 __attribute__((external_source_symbol("
 [[clang::external_source_symbol("
 [[fallthrough]]
 [[clang::fallthrough]]
 [[gnu::fastcall]]
 __fastcall
 _fastcall
 final
 sealed
sealed
 __attribute__((flag_enum))
 [[clang::flag_enum]]
 __attribute__((flatten))
 [[gnu::flatten]]
 __attribute__((format(
 [[gnu::format(
 __attribute__((format_arg(
 [[gnu::format_arg(
 __attribute__((gnu_inline))
 [[gnu::gnu_inline]]
 __attribute__((guarded_by(
 __attribute__((guarded_var))
 [[clang::guarded_var]]
 __attribute__((hot))
 [[gnu::hot]]
 __attribute__((ibaction))
 [[clang::ibaction]]
 __attribute__((iboutlet))
 [[clang::iboutlet]]
 __attribute__((iboutletcollection(
 [[clang::iboutletcollection(
 __attribute__((ifunc("
 [[gnu::ifunc("
 __attribute__((init_priority(
 [[gnu::init_priority(
#pragma init_seg
 [[clang::intel_ocl_bicc]]
 __attribute__((internal_linkage))
 [[clang::internal_linkage]]
 [[clang::intersectioncall]]
 __attribute__((lto_visibility_public))
 [[clang::lto_visibility_public]]
 __declspec(layout_version(
 __attribute__((lifetimebound))
 __attribute__((lock_returned(
 __attribute__((locks_excluded(
#pragma clang loop
#pragma unroll
#pragma nounroll
#pragma unroll_and_jam
#pragma nounroll_and_jam
vectorize
vectorize_width
interleave
interleave_count
unroll_count
unroll_and_jam_count
 [[gnu::ms_abi]]
 __single_inheritance
 __multiple_inheritance
 __virtual_inheritance
 __unspecified_inheritance
__unspecified_inheritance
 __declspec(novtable)
 __attribute__((interrupt(
 [[gnu::interrupt(
 __attribute__((ms_struct))
 [[gnu::ms_struct]]
 __attribute__((may_alias))
 [[gnu::may_alias]]
 [[accept_intersection]]
 [[amplification_count]]
 [[amplification_id]]
 [[array_ref_size(
 [[attribute(
 [[barycentric_coord]]
 [[base_instance]]
 [[base_vertex]]
 [[index(
 [[buffer(
 [[center_no_perspective]]
 [[center_perspective]]
 [[centroid_no_perspective]]
 [[centroid_perspective]]
 [[clip_distance]]
 [[color(
 [[continue_search]]
 [[depth("
 [[direction]]
 [[dispatch_quadgroups_per_threadgroup]]
 [[dispatch_simdgroups_per_threadgroup]]
 [[dispatch_threads_per_threadgroup]]
 [[distance]]
 [[early_fragment_tests]]
 [[flat]]
 fragment
 [[fragment]]
 [[front_facing]]
 [[function_constant(
 [[function_groups(
 [[geometry_id]]
 [[geometry_intersection_function_table_offset]]
 [[host_name("
 [[id(
 [[alias_implicit_imageblock(
 [[alias_implicit_imageblock_color(
 [[imageblock_data(
 [[instance_id]]
 [[instance_intersection_function_table_offset]]
 [[intersection("
bounding_box
 [[invariant]]
 kernel
 [[kernel]]
 [[threadgroup(
 [[max_distance]]
 [[max_total_threads_per_threadgroup(
 [[min_distance]]
 [[opaque]]
 [[origin]]
 [[patch("
 [[patch_id]]
 [[payload]]
 [[pixel_position_in_tile]]
 [[pixels_per_tile]]
 [[point_coord]]
 [[point_size]]
 [[position]]
 [[position_in_patch]]
 [[post_depth_coverage]]
 [[primitive_id]]
 [[quadgroup_index_in_threadgroup]]
 [[quadgroups_per_threadgroup]]
 [[raster_order_group(
 [[render_target_array_index]]
 [[simdgroup_index_in_threadgroup]]
 [[simdgroups_per_threadgroup]]
 [[sample_id]]
 [[sample_mask]]
 [[sample_no_perspective]]
 [[sample_perspective]]
 [[sampler(
 [[shared]]
 [[stage_in]]
 [[grid_origin]]
 [[grid_size]]
 [[stencil]]
 [[stitchable]]
 [[texture(
 [[thread_execution_width]]
 [[threadgroup_position_in_grid]]
 [[threadgroups_per_grid]]
 [[thread_index_in_threadgroup]]
 [[thread_index_in_quadgroup]]
 [[thread_index_in_simdgroup]]
 [[thread_position_in_grid]]
 [[thread_position_in_threadgroup]]
 [[threads_per_grid]]
 [[threads_per_threadgroup]]
 [[threads_per_simdgroup]]
 [[tile_index]]
 [[user(
 vertex
 [[vertex]]
 [[vertex_id]]
 [[viewport_array_index]]
 [[world_space_direction]]
 [[world_space_origin]]
 __attribute__((micromips))
 [[gnu::micromips]]
 __attribute__((minsize))
 [[clang::minsize]]
 __attribute__((min_vector_width(
 [[clang::min_vector_width(
 __attribute__((mips16))
 [[gnu::mips16]]
vector=sw0
vector=sw1
vector=hw0
vector=hw1
vector=hw2
vector=hw3
vector=hw4
vector=hw5
 __attribute__((long_call))
 [[gnu::long_call]]
 __attribute__((far))
 [[gnu::far]]
 __attribute__((short_call))
 [[gnu::short_call]]
 __attribute__((near))
 [[gnu::near]]
 __attribute__((mode(
 [[gnu::mode(
 __attribute__((ns_consumed))
 [[clang::ns_consumed]]
 __attribute__((ns_consumes_self))
 [[clang::ns_consumes_self]]
 __attribute__((ns_error_domain(
 __attribute__((ns_returns_autoreleased))
 [[clang::ns_returns_autoreleased]]
 __attribute__((ns_returns_not_retained))
 [[clang::ns_returns_not_retained]]
 [[clang::ns_returns_retained]]
 __attribute__((naked))
 [[gnu::naked]]
 __declspec(naked)
 __declspec(noalias)
 __attribute__((nocommon))
 [[gnu::nocommon]]
 __attribute__((nodebug))
 [[gnu::nodebug]]
 __attribute__((no_destroy))
 [[clang::no_destroy]]
 __attribute__((noduplicate))
 [[clang::noduplicate]]
 __attribute__((noescape))
 [[clang::noescape]]
 __attribute__((noinline))
 [[gnu::noinline]]
 __declspec(noinline)
 __attribute__((no_instrument_function))
 [[gnu::no_instrument_function]]
 __attribute__((nomicromips))
 [[gnu::nomicromips]]
 __attribute__((nomips16))
 [[gnu::nomips16]]
 [[gnu::noreturn]]
 __declspec(noreturn)
 __attribute__((no_sanitize(
 [[clang::no_sanitize(
 __attribute__((no_split_stack))
 [[gnu::no_split_stack]]
 __attribute__((no_stack_protector))
 [[clang::no_stack_protector]]
 __attribute__((no_thread_safety_analysis))
 [[clang::no_thread_safety_analysis]]
 __attribute__((nothrow))
 [[gnu::nothrow]]
 __declspec(nothrow)
 __attribute__((no_tracepoint))
 [[clang::no_tracepoint]]
 __attribute__((nonnull(
 [[gnu::nonnull(
 __attribute__((not_tail_called))
 [[clang::not_tail_called]]
#pragma omp declare simd
 simdlen(
 uniform
 aligned(
 linear(
inbranch
notinbranch
#pragma omp declare target
 __attribute__((os_consumed))
 [[clang::os_consumed]]
 __attribute__((os_consumes_this))
 [[clang::os_consumes_this]]
 __attribute__((os_returns_not_retained))
 [[clang::os_returns_not_retained]]
 __attribute__((os_returns_retained))
 [[clang::os_returns_retained]]
 __attribute__((objc_boxable))
 [[clang::objc_boxable]]
 __attribute__((objc_bridge(
 [[clang::objc_bridge(
 __attribute__((objc_bridge_mutable(
 [[clang::objc_bridge_mutable(
 __attribute__((objc_bridge_related(
 [[clang::objc_bridge_related(
 __attribute__((objc_complete_definition))
 __attribute__((objc_designated_initializer))
 [[clang::objc_designated_initializer]]
 __attribute__((objc_exception))
 [[clang::objc_exception]]
 __attribute__((objc_protocol_requires_explicit_implementation))
 [[clang::objc_protocol_requires_explicit_implementation]]
 __attribute__((objc_independent_class))
 [[clang::objc_independent_class]]
 __attribute__((objc_method_family("
 [[clang::objc_method_family("
 __attribute__((NSObject))
 [[clang::NSObject]]
 __attribute__((objc_precise_lifetime))
 [[clang::objc_precise_lifetime]]
 __attribute__((objc_requires_property_definitions))
 [[clang::objc_requires_property_definitions]]
 __attribute__((objc_requires_super))
 [[clang::objc_requires_super]]
 __attribute__((objc_returns_inner_pointer))
 [[clang::objc_returns_inner_pointer]]
 __attribute__((objc_root_class))
 [[clang::objc_root_class]]
 __attribute__((objc_runtime_name("
 [[clang::objc_runtime_name("
 __attribute__((objc_runtime_visible))
 [[clang::objc_runtime_visible]]
 __attribute__((objc_subclassing_restricted))
 [[clang::objc_subclassing_restricted]]
 __read_only
 read_only
 __write_only
 write_only
 __read_write
 read_write
 __attribute__((intel_reqd_sub_group_size(
 __kernel
 __attribute__((opencl_unroll_hint(
 __attribute__((optnone))
 [[clang::optnone]]
 __attribute__((overloadable))
 [[clang::overloadable]]
 override
 __attribute__((ownership_holds(
 [[clang::ownership_holds(
 __attribute__((ownership_returns(
 [[clang::ownership_returns(
 __attribute__((ownership_takes(
 [[clang::ownership_takes(
 __attribute__((packed))
 [[gnu::packed]]
 __attribute__((param_typestate("
 [[clang::param_typestate("
 [[clang::pascal]]
 __pascal
 _pascal
 __attribute__((pass_object_size(
 [[clang::pass_object_size(
 __attribute__((pcs("
 [[gnu::pcs("
 [[clang::preserve_all]]
 [[clang::preserve_most]]
 __attribute__((pt_guarded_by(
 __attribute__((pt_guarded_var))
 [[clang::pt_guarded_var]]
 __attribute__((pure))
 [[gnu::pure]]
supervisor
machine
 [[gnu::regcall]]
 __regcall
 __attribute__((reinitializes))
 [[clang::reinitializes]]
 __attribute__((release_capability(
 [[clang::release_capability(
 __attribute__((release_shared_capability(
 [[clang::release_shared_capability(
 __attribute__((release_generic_capability(
 [[clang::release_generic_capability(
 __attribute__((unlock_function(
 [[clang::unlock_function(
 __attribute__((kernel))
 __attribute__((reqd_work_group_size(
 __attribute__((require_constant_initialization))
 [[clang::require_constant_initialization]]
 __attribute__((requires_capability(
 [[clang::requires_capability(
 __attribute__((exclusive_locks_required(
 [[clang::exclusive_locks_required(
 __attribute__((requires_shared_capability(
 [[clang::requires_shared_capability(
 __attribute__((shared_locks_required(
 [[clang::shared_locks_required(
 __declspec(restrict)
 __attribute__((malloc))
 [[gnu::malloc]]
 __attribute__((return_typestate("
 [[clang::return_typestate("
 __attribute__((returns_nonnull))
 [[gnu::returns_nonnull]]
 __attribute__((returns_twice))
 [[gnu::returns_twice]]
 __attribute__((scoped_lockable))
 [[clang::scoped_lockable]]
 __attribute__((section("
 [[gnu::section("
 __declspec(allocate("
 __declspec(selectany)
 __attribute__((selectany))
 [[gnu::selectany]]
 __attribute__((sentinel(
 [[gnu::sentinel(
 __attribute__((set_typestate("
 [[clang::set_typestate("
 __attribute__((shared_trylock_function(
 [[gnu::stdcall]]
 __stdcall
 _stdcall
 [[gsl::suppress(
 __attribute__((swift_bridge("
 __attribute__((swift_bridged_typedef))
 [[clang::swiftcall]]
 __attribute__((swift_context))
 [[clang::swift_context]]
 __attribute__((swift_error("
 [[gnu::swift_error("
nonnull_error
null_result
zero_result
nonzero_result
 __attribute__((swift_error_result))
 [[clang::swift_error_result]]
 __attribute__((swift_indirect_result))
 [[clang::swift_indirect_result]]
 __attribute__((swift_name("
 [[gnu::swift_name("
 __attribute__((swift_newtype("
 __attribute__((swift_wrapper("
 __attribute__((swift_objc_members))
 __attribute__((swift_private))
 [[gnu::swift_private]]
 [[gnu::sysv_abi]]
 __attribute__((tls_model("
 [[gnu::tls_model("
 __attribute__((target("
 [[gnu::target("
 __attribute__((test_typestate("
 [[clang::test_typestate("
 [[gnu::thiscall]]
 __thiscall
 _thiscall
 __declspec(thread)
 __attribute__((transparent_union))
 [[gnu::transparent_union]]
 __attribute__((trivial_abi))
 [[clang::trivial_abi]]
 __attribute__((try_acquire_capability(
 [[clang::try_acquire_capability(
 __attribute__((try_acquire_shared_capability(
 [[clang::try_acquire_shared_capability(
 __attribute__((type_tag_for_datatype(
 [[clang::type_tag_for_datatype(
 __attribute__((type_visibility("
 [[clang::type_visibility("
hidden
 __attribute__((unavailable("
 [[clang::unavailable("
 __attribute__((uninitialized))
 [[clang::uninitialized]]
 [[maybe_unused]]
 __attribute__((unused))
 [[gnu::unused]]
 __attribute__((used))
 [[gnu::used]]
 __declspec(uuid("
[uuid("
 __attribute__((vecreturn))
 [[clang::vecreturn]]
 __attribute__((vec_type_hint(
 [[clang::vectorcall]]
 __vectorcall
 _vectorcall
 __attribute__((visibility("
 [[gnu::visibility("
 __attribute__((warn_unused))
 [[gnu::warn_unused]]
 [[nodiscard]]
 [[clang::warn_unused_result]]
 __attribute__((warn_unused_result))
 [[gnu::warn_unused_result]]
 __attribute__((weak))
 [[gnu::weak]]
 __attribute__((weak_import))
 [[clang::weak_import]]
 __attribute__((weakref("
 [[gnu::weakref("
 __attribute__((work_group_size_hint(
 __attribute__((force_align_arg_pointer))
 [[gnu::force_align_arg_pointer]]
 __attribute__((xray_always_instrument))
 [[clang::xray_always_instrument]]
 __attribute__((xray_never_instrument))
 [[clang::xray_never_instrument]]
 __attribute__((xray_log_args(
 [[clang::xray_log_args(
NoCommentKind
BlockCommandComment
ParamCommandComment
TParamCommandComment
VerbatimBlockComment
VerbatimLineComment
ParagraphComment
FullComment
HTMLEndTagComment
HTMLStartTagComment
InlineCommandComment
TextComment
VerbatimBlockLineComment
Returns 
textblock
abstract
addtogroup
attention
author
authors
brief
callback
category
classdesign
coclass
code
endcode
copyright
date
defgroup
details
discussion
enddot
functiongroup
headerfile
helper
helperclass
helps
htmlonly
endhtmlonly
ingroup
instancesize
latexonly
endlatexonly
/link
mainpage
manonly
endmanonly
method
methodgroup
endmsc
note
overload
ownership
paragraph
param
performance
post
related
relatedalso
relates
relatesalso
remarks
result
returns
rtfonly
endrtfonly
security
seealso
since
subpage
subsection
subsubsection
superclass
templatefield
/textblock
throws
todo
tparam
verbatim
endverbatim
weakgroup
xmlonly
endxmlonly
\@&<
__attribute__((deprecated))
[in]
[out]
[in,out]
equivalent
nonequivalent
nonequal
unordered
weak_equality
strong_equality
partial_ordering
weak_ordering
strong_ordering
(anonymous namespace)
`anonymous namespace'
(anonymous 
CFStringCreateWithFormat
CFStringCreateWithFormatAndArguments
CFStringAppendFormat
CFStringAppendFormatAndArguments
main
nothrow_t
destroying_delete_t
matrix
field-padding
<deduction guide for 
<using-directive>
AccessSpec
Block
Captured
ClassScopeFunctionSpecialization
Empty
Export
ExternCContext
FileScopeAsm
Friend
FriendTemplate
Import
LinkageSpec
Label
Namespace
NamespaceAlias
ObjCCompatibleAlias
ObjCCategory
ObjCCategoryImpl
ObjCImplementation
ObjCProtocol
ObjCMethod
ObjCProperty
BuiltinTemplate
ClassTemplate
FunctionTemplate
TypeAliasTemplate
VarTemplate
TemplateTemplateParm
CXXRecord
ClassTemplateSpecialization
ClassTemplatePartialSpecialization
TypeAlias
UnresolvedUsingTypename
Using
UsingDirective
UsingPack
UsingShadow
ConstructorUsingShadow
Binding
Field
ObjCAtDefsField
ObjCIvar
Function
CXXDeductionGuide
CXXMethod
CXXConstructor
CXXConversion
CXXDestructor
MSProperty
NonTypeTemplateParm
Decomposition
ImplicitParam
OMPCapturedExpr
ParmVar
VarTemplateSpecialization
VarTemplatePartialSpecialization
EnumConstant
IndirectField
OMPDeclareReduction
UnresolvedUsingValue
OMPThreadPrivate
ObjCPropertyImpl
PragmaComment
PragmaDetectMismatch
StaticAssert
TranslationUnit
*** Decl Stats:
 decls total.
 AccessSpec decls, 
 Block decls, 
 Captured decls, 
 ClassScopeFunctionSpecialization decls, 
 Empty decls, 
 Export decls, 
 ExternCContext decls, 
 FileScopeAsm decls, 
 Friend decls, 
 FriendTemplate decls, 
 Import decls, 
 LinkageSpec decls, 
 Label decls, 
 Namespace decls, 
 NamespaceAlias decls, 
 ObjCCompatibleAlias decls, 
 ObjCCategory decls, 
 ObjCCategoryImpl decls, 
 ObjCImplementation decls, 
 ObjCInterface decls, 
 ObjCProtocol decls, 
 ObjCMethod decls, 
 ObjCProperty decls, 
 BuiltinTemplate decls, 
 ClassTemplate decls, 
 FunctionTemplate decls, 
 TypeAliasTemplate decls, 
 VarTemplate decls, 
 TemplateTemplateParm decls, 
 Enum decls, 
 Record decls, 
 CXXRecord decls, 
 ClassTemplateSpecialization decls, 
 ClassTemplatePartialSpecialization decls, 
 TemplateTypeParm decls, 
 ObjCTypeParam decls, 
 TypeAlias decls, 
 Typedef decls, 
 UnresolvedUsingTypename decls, 
 Using decls, 
 UsingDirective decls, 
 UsingPack decls, 
 UsingShadow decls, 
 ConstructorUsingShadow decls, 
 Binding decls, 
 Field decls, 
 ObjCAtDefsField decls, 
 ObjCIvar decls, 
 Function decls, 
 CXXDeductionGuide decls, 
 CXXMethod decls, 
 CXXConstructor decls, 
 CXXConversion decls, 
 CXXDestructor decls, 
 MSProperty decls, 
 NonTypeTemplateParm decls, 
 Var decls, 
 Decomposition decls, 
 ImplicitParam decls, 
 OMPCapturedExpr decls, 
 ParmVar decls, 
 VarTemplateSpecialization decls, 
 VarTemplatePartialSpecialization decls, 
 EnumConstant decls, 
 IndirectField decls, 
 OMPDeclareReduction decls, 
 UnresolvedUsingValue decls, 
 OMPThreadPrivate decls, 
 ObjCPropertyImpl decls, 
 PragmaComment decls, 
 PragmaDetectMismatch decls, 
 StaticAssert decls, 
 TranslationUnit decls, 
raytracing
_app_extension
not available on 
introduced in 
obsoleted in 
first deprecated in 
__invoke
00000000-0000-0000-C000-000000000046
00020400-0000-0000-C000-000000000046
_cmd
#pragma omp end declare target
__asm (
friend 
extern "
inline 
namespace 
@compatibility_alias 
@interface 
@end
@implementation 
@class 
@protocol 
, ...
@required
@optional
@property
readonly
getter = 
setter = 
assign
readwrite
strong
nonatomic
null_resettable
__module_private__ 
 class
 struct
template<> 
using 
typedef 
using typename 
typename 
using namespace 
#pragma omp declare reduction (
 initializer(
omp_priv(
omp_priv = 
#pragma omp threadprivate
@synthesize 
@dynamic 
static_assert(
__thread 
_Thread_local 
thread_local 
constexpr 
mutable 
inout 
out 
bycopy 
byref 
oneway 
__covariant 
__contravariant 
class 
extern 
__private_extern__ 
 restrict
 thread
 device
 threadgroup
 constant
 threadgroup_imageblock
 ray_data
 = 0
 = delete
 = default
template <
virtual 
__cdecl 
__stdcall 
__fastcall 
__thiscall 
__vectorcall 
__regcall 
 const
 volatile
top level
0123456789ABCDEF
\U00
Dependent
BitCast
LValueBitCast
LValueToRValue
NoOp
BaseToDerived
DerivedToBase
UncheckedDerivedToBase
Dynamic
AsType
ToUnion
ArrayToPointerDecay
FunctionToPointerDecay
NullToPointer
NullToMemberPointer
BaseToDerivedMemberPointer
DerivedToBaseMemberPointer
MemberPointerToBoolean
ReinterpretMemberPointer
UserDefinedConversion
ConstructorConversion
IntegralToPointer
PointerToIntegral
PointerToBoolean
ToVoid
VectorSplat
VectorPack
VectorConvert
IntegralCast
IntegralToBoolean
IntegralToFloating
FloatingToIntegral
FloatingToBoolean
BooleanToSignedIntegral
FloatingCast
CPointerToObjCPointerCast
BlockPointerToObjCPointerCast
AnyPointerToBlockPointerCast
ObjCObjectLValueCast
FloatingRealToComplex
FloatingComplexToReal
FloatingComplexToBoolean
FloatingComplexCast
FloatingComplexToIntegralComplex
IntegralRealToComplex
IntegralComplexToReal
IntegralComplexToBoolean
IntegralComplexCast
IntegralComplexToFloatingComplex
ARCProduceObject
ARCConsumeObject
ARCReclaimReturnedObject
ARCExtendBlockObject
AtomicToNonAtomic
NonAtomicToAtomic
CopyAndAutoreleaseBlockObject
BuiltinFnToFnPtr
ZeroToOCLEvent
ZeroToOCLQueue
AddressSpaceConversion
IntToOCLSampler
IntToMetalSamplerT
even
captures not currently allowed
<invalid cast>
generation counter overflowed
' (aka '
12_GLOBAL__N_1
U17pass_object_size
allocator
basic_string
char_traits
basic_istream
basic_ostream
basic_iostream
U2ASI
CLglobal
CLlocal
CLconstant
CLprivate
CLgeneric
CUdevice
CUconstant
CUshared
MTLdevice
MTLthreadgroup
MTLconstant
MTLthreadgroupimageblock
MTLraydata
u8__uuidoft
u8__uuidofz
?: operator with omitted middle operand cannot be mangled
cannot yet mangle vec_step expression
cannot yet mangle __builtin_omp_required_simd_align expression
_SUBSTPACK_
v110_SUBSTPACK
LDnE
v18co_await
v18co_yield
dtdefpT
DF16_
U10__float128
11objc_object
10objc_class
13objc_selector
ocl_image1d_ro
ocl_image1d_array_ro
ocl_image1d_buffer_ro
ocl_image2d_ro
ocl_image2d_array_ro
ocl_image2d_depth_ro
ocl_image2d_array_depth_ro
ocl_image2d_msaa_ro
ocl_image2d_array_msaa_ro
ocl_image2d_msaa_depth_ro
ocl_image2d_array_msaa_depth_ro
ocl_image3d_ro
ocl_image1d_wo
ocl_image1d_array_wo
ocl_image1d_buffer_wo
ocl_image2d_wo
ocl_image2d_array_wo
ocl_image2d_depth_wo
ocl_image2d_array_depth_wo
ocl_image2d_msaa_wo
ocl_image2d_array_msaa_wo
ocl_image2d_msaa_depth_wo
ocl_image2d_array_msaa_depth_wo
ocl_image3d_wo
ocl_image1d_rw
ocl_image1d_array_rw
ocl_image1d_buffer_rw
ocl_image2d_rw
ocl_image2d_array_rw
ocl_image2d_depth_rw
ocl_image2d_array_depth_rw
ocl_image2d_msaa_rw
ocl_image2d_array_msaa_rw
ocl_image2d_msaa_depth_rw
ocl_image2d_array_msaa_depth_rw
ocl_image3d_rw
11ocl_sampler
9ocl_event
12ocl_clkevent
9ocl_queue
13ocl_reserveid
20__metal_texture_1d_t
26__metal_texture_1d_array_t
20__metal_texture_2d_t
26__metal_texture_2d_array_t
20__metal_texture_3d_t
22__metal_texture_cube_t
28__metal_texture_cube_array_t
23__metal_texture_2d_ms_t
29__metal_texture_2d_ms_array_t
27__metal_texture_buffer_1d_t
18__metal_depth_2d_t
24__metal_depth_2d_array_t
20__metal_depth_cube_t
26__metal_depth_cube_array_t
21__metal_depth_2d_ms_t
27__metal_depth_2d_ms_array_t
17__metal_sampler_t
27__metal_threadgroup_event_t
20__metal_imageblock_t
29__metal_patch_control_point_t
24__metal_command_buffer_t
31__metal_render_pipeline_state_t
32__metal_compute_pipeline_state_t
21__metal_interpolant_t
32__metal_visible_function_table_t
41__metal_instance_acceleration_structure_t
42__metal_primitive_acceleration_structure_t
37__metal_intersection_function_table_t
U13block_pointer
U6packed
cannot mangle this dependent neon vector type yet
u6typeof
3eut
U8__kindof
objcproto
8ocl_pipe
U7_Atomic
Poly8
Poly16
Poly64
Float64
Float32
Float16
Uint64
Uint32
Uint16
Uint8
Int64
Int32
Int16
Int8
poly64_t
poly16_t
float16_t
float32_t
float64_t
uint64_t
int64_t
uint32_t
int32_t
uint16_t
int16_t
uint8_t
poly8_t
int8_t
__simd64_
__simd128_
MTLvisible
Ua9enable_ifI
_ZTW
_ZTH
_ZTC
_ZTT
_ZTV
.MTL_VISIBLE_FN_REF
.MTL_FC_INIT_
__fin_
__filt_
__dtor_
__cxx_global_var_init
_ZGV
_ZTS
_ZTI
_ZGR
__regcall3__
_block_invoke_
??_R4@
??_R4
??_R3
_block_invoke
__block_literal
cannot mangle this dependent-length array yet
objc_object
objc_class
objc_selector
PAUocl_image1d_ro@@
PAUocl_image1d_array_ro@@
PAUocl_image1d_buffer_ro@@
PAUocl_image2d_ro@@
PAUocl_image2d_array_ro@@
PAUocl_image2d_depth_ro@@
PAUocl_image2d_array_depth_ro@@
PAUocl_image2d_msaa_ro@@
PAUocl_image2d_array_msaa_ro@@
PAUocl_image2d_msaa_depth_ro@@
PAUocl_image2d_array_msaa_depth_ro@@
PAUocl_image3d_ro@@
PAUocl_image1d_wo@@
PAUocl_image1d_array_wo@@
PAUocl_image1d_buffer_wo@@
PAUocl_image2d_wo@@
PAUocl_image2d_array_wo@@
PAUocl_image2d_depth_wo@@
PAUocl_image2d_array_depth_wo@@
PAUocl_image2d_msaa_wo@@
PAUocl_image2d_array_msaa_wo@@
PAUocl_image2d_msaa_depth_wo@@
PAUocl_image2d_array_msaa_depth_wo@@
PAUocl_image3d_wo@@
PAUocl_image1d_rw@@
PAUocl_image1d_array_rw@@
PAUocl_image1d_buffer_rw@@
PAUocl_image2d_rw@@
PAUocl_image2d_array_rw@@
PAUocl_image2d_depth_rw@@
PAUocl_image2d_array_depth_rw@@
PAUocl_image2d_msaa_rw@@
PAUocl_image2d_array_msaa_rw@@
PAUocl_image2d_msaa_depth_rw@@
PAUocl_image2d_array_msaa_depth_rw@@
PAUocl_image3d_rw@@
ocl_sampler
ocl_event
ocl_clkevent
ocl_queue
ocl_reserveid
__clang
_Half
cannot mangle this built-in %0 type yet
cannot mangle this dependent-sized extended vector type yet
Cannot mangle this dependent-sized matrix type yet
cannot mangle this dependent address space type yet
cannot mangle this dependent-sized vector type yet
Cannot mangle this matrix type yet
$$A8@@
$$A6
cannot mangle this unresolved dependent type yet
cannot mangle this typeof(expression) yet
cannot mangle this typeof(type) yet
cannot mangle this decltype() yet
cannot mangle this unary transform type yet
cannot mangle this template type parameter type yet
cannot mangle this substituted parameter pack yet
cannot mangle this template specialization type yet
cannot mangle this 'auto' type yet
cannot mangle this deduced class template specialization type yet
cannot mangle this dependent name type yet
cannot mangle this dependent template specialization type yet
cannot mangle this pack expansion yet
Protocol
__ObjC
cannot mangle this OpenCL pipe type yet
Autoreleasing
Strong
Weak
cannot mangle this packed vector type yet
__m64
PAXI@Z
PEAXI@Z
<decltype-auto>
<auto>
__pass_object_size
$$J0
<lambda_
<unnamed-type-
<unnamed-enum-
<unnamed-type-$S
?__L
cannot mangle this three-way comparison operator yet
cannot mangle this conditional operator yet
?__K
_GUID_
__s_GUID
cannot yet mangle expression type %0
$$$V
$0A@
??_R2
??_R1
_CTA
??_K
?$TSS
@4HA
??_8
??_S
??_7
?fin$
?filt$
??__
YAXXZ
?$S1@
??_B
??__J
@4IA
??_C@_
??_R0
?$RT
??_E
Mangling declaration
NSString
NSArray
NSMutableArray
NSDictionary
NSMutableDictionary
NSNumber
NSMutableSet
NSMutableOrderedSet
NSValue
stringWithString
stringWithUTF8String
encoding
initWithString
arrayWithArray
arrayWithObject
arrayWithObjects
count
initWithArray
initWithObjects
objectAtIndex
replaceObjectAtIndex
withObject
addObject
insertObject
atIndex
setObject
atIndexedSubscript
dictionary
dictionaryWithDictionary
dictionaryWithObject
forKey
dictionaryWithObjects
forKeys
dictionaryWithObjectsAndKeys
initWithDictionary
initWithObjectsAndKeys
objectForKey
forKeyedSubscript
setValue
numberWithChar
numberWithUnsignedChar
numberWithShort
numberWithUnsignedShort
numberWithInt
numberWithUnsignedInt
numberWithLong
numberWithUnsignedLong
numberWithLongLong
numberWithUnsignedLongLong
numberWithFloat
numberWithDouble
numberWithBool
numberWithInteger
numberWithUnsignedInteger
initWithChar
initWithUnsignedChar
initWithShort
initWithUnsignedShort
initWithInt
initWithUnsignedInt
initWithLong
initWithUnsignedLong
initWithLongLong
initWithUnsignedLongLong
initWithFloat
initWithDouble
initWithBool
initWithInteger
initWithUnsignedInteger
BOOL
NSInteger
NSUInteger
sensitive
^[[:space:]]*(private|public|sensitive|mask\.[^[:space:],}]*)[[:space:]]*(,|})
mask
wint_t
unsigned __int32
const unichar *
unichar
*** Dumping AST Record Layout
Type: 
Layout: 
<ASTRecordLayout
  Size:
  DataSize:
  Alignment:
  FieldOffsets: [
%10lld | 
 (empty)
 vtable pointer)
 vftable pointer)
(primary base)
(base)
 vbtable pointer)
(vtordisp for vbase 
(primary virtual base)
(virtual base)
           | 
[sizeof=
, dsize=
, align=
 nvsize=
, nvalign=
intmax_t
ssize_t
ptrdiff_t
unsigned __int64
uintmax_t
size_t
unsigned ptrdiff_t
wchar_t *
GCCAsmStmt
MSAsmStmt
AttributedStmt
BreakStmt
CXXCatchStmt
CXXForRangeStmt
CXXTryStmt
CapturedStmt
CompoundStmt
ContinueStmt
CoreturnStmt
CoroutineBodyStmt
DeclStmt
DoStmt
BinaryConditionalOperator
ConditionalOperator
AddrLabelExpr
ArrayInitIndexExpr
ArrayInitLoopExpr
ArraySubscriptExpr
ArrayTypeTraitExpr
AsTypeExpr
AtomicExpr
BinaryOperator
CompoundAssignOperator
BlockExpr
CXXBindTemporaryExpr
CXXBoolLiteralExpr
CXXConstructExpr
CXXTemporaryObjectExpr
CXXDefaultArgExpr
CXXDefaultInitExpr
CXXDeleteExpr
CXXDependentScopeMemberExpr
CXXFoldExpr
CXXInheritedCtorInitExpr
CXXNewExpr
CXXNoexceptExpr
CXXNullPtrLiteralExpr
CXXPseudoDestructorExpr
CXXScalarValueInitExpr
CXXStdInitializerListExpr
CXXThisExpr
CXXThrowExpr
CXXTypeidExpr
CXXUnresolvedConstructExpr
CXXUuidofExpr
CallExpr
CUDAKernelCallExpr
CXXMemberCallExpr
CXXOperatorCallExpr
UserDefinedLiteral
CStyleCastExpr
CXXFunctionalCastExpr
CXXConstCastExpr
CXXDynamicCastExpr
CXXReinterpretCastExpr
CXXStaticCastExpr
MetalAsTypeCastExpr
ObjCBridgedCastExpr
ImplicitCastExpr
CharacterLiteral
ChooseExpr
CompoundLiteralExpr
ConvertVectorExpr
CoawaitExpr
CoyieldExpr
DeclRefExpr
DependentCoawaitExpr
DependentScopeDeclRefExpr
DesignatedInitExpr
DesignatedInitUpdateExpr
ExprWithCleanups
ExpressionTraitExpr
ExtVectorElementExpr
FixedPointLiteral
FloatingLiteral
FunctionParmPackExpr
GNUNullExpr
GenericSelectionExpr
ImaginaryLiteral
ImplicitValueInitExpr
InitListExpr
IntegerLiteral
LambdaExpr
MSPropertyRefExpr
MSPropertySubscriptExpr
MaterializeTemporaryExpr
MemberExpr
MetalVectorInitExpr
NoInitExpr
OMPArraySectionExpr
ObjCArrayLiteral
ObjCAvailabilityCheckExpr
ObjCBoolLiteralExpr
ObjCBoxedExpr
ObjCDictionaryLiteral
ObjCEncodeExpr
ObjCIndirectCopyRestoreExpr
ObjCIsaExpr
ObjCIvarRefExpr
ObjCMessageExpr
ObjCPropertyRefExpr
ObjCProtocolExpr
ObjCSelectorExpr
ObjCStringLiteral
ObjCSubscriptRefExpr
OffsetOfExpr
OpaqueValueExpr
UnresolvedLookupExpr
UnresolvedMemberExpr
PackExpansionExpr
ParenExpr
ParenListExpr
PredefinedExpr
PseudoObjectExpr
ShuffleVectorExpr
SizeOfPackExpr
StmtExpr
StringLiteral
SubstNonTypeTemplateParmExpr
SubstNonTypeTemplateParmPackExpr
TypeTraitExpr
TypoExpr
UnaryExprOrTypeTraitExpr
UnaryOperator
VAArgExpr
ForStmt
GotoStmt
IfStmt
IndirectGotoStmt
LabelStmt
MSDependentExistsStmt
NullStmt
OMPAtomicDirective
OMPBarrierDirective
OMPCancelDirective
OMPCancellationPointDirective
OMPCriticalDirective
OMPFlushDirective
OMPDistributeDirective
OMPDistributeParallelForDirective
OMPDistributeParallelForSimdDirective
OMPDistributeSimdDirective
OMPForDirective
OMPForSimdDirective
OMPParallelForDirective
OMPParallelForSimdDirective
OMPSimdDirective
OMPTargetParallelForSimdDirective
OMPTargetSimdDirective
OMPTargetTeamsDistributeDirective
OMPTargetTeamsDistributeParallelForDirective
OMPTargetTeamsDistributeParallelForSimdDirective
OMPTargetTeamsDistributeSimdDirective
OMPTaskLoopDirective
OMPTaskLoopSimdDirective
OMPTeamsDistributeDirective
OMPTeamsDistributeParallelForDirective
OMPTeamsDistributeParallelForSimdDirective
OMPTeamsDistributeSimdDirective
OMPMasterDirective
OMPOrderedDirective
OMPParallelDirective
OMPParallelSectionsDirective
OMPSectionDirective
OMPSectionsDirective
OMPSingleDirective
OMPTargetDataDirective
OMPTargetDirective
OMPTargetEnterDataDirective
OMPTargetExitDataDirective
OMPTargetParallelDirective
OMPTargetParallelForDirective
OMPTargetTeamsDirective
OMPTargetUpdateDirective
OMPTaskDirective
OMPTaskgroupDirective
OMPTaskwaitDirective
OMPTaskyieldDirective
OMPTeamsDirective
ObjCAtCatchStmt
ObjCAtFinallyStmt
ObjCAtSynchronizedStmt
ObjCAtThrowStmt
ObjCAtTryStmt
ObjCAutoreleasePoolStmt
ObjCForCollectionStmt
ReturnStmt
SEHExceptStmt
SEHFinallyStmt
SEHLeaveStmt
SEHTryStmt
CaseStmt
DefaultStmt
SwitchStmt
WhileStmt
*** Stmt/Expr Stats:
 stmts/exprs total.
Total bytes = 
 each (
 bytes)
${:uid}
asm 
volatile 
__asm 
break;
for (
try 
continue;
while (
 ?: 
__builtin_astype(
delete 
<forwarded>
new 
noexcept(
throw 
typeid(
__uuidof(
>>>(
operator""
'\\'
'\''
'\a'
'\b'
'\f'
'\n'
'\r'
'\t'
'\v'
%02x
%04x
%08x
__builtin_choose_expr(
__builtin_convertvector(
co_await 
co_yield 
 ... 
/*base*/
/*updater*/
_Generic(
/*implicit*/
/*implicit*/(
Ui16
*this
 mutable
/*no init*/
@available(...)
@encode(
.isa
->isa
Super
super.
@protocol(
@selector(
__builtin_offsetof(
__builtin_shufflevector(
sizeof...(
__builtin_va_arg(
goto 
goto *
__if_exists (
__if_not_exists (
#pragma omp atomic
#pragma omp barrier
#pragma omp cancel 
#pragma omp cancellation point 
#pragma omp critical
#pragma omp flush
#pragma omp distribute
#pragma omp distribute parallel for
#pragma omp distribute parallel for simd
#pragma omp distribute simd
#pragma omp for
#pragma omp for simd
#pragma omp parallel for
#pragma omp parallel for simd
#pragma omp simd
#pragma omp target parallel for simd
#pragma omp target simd
#pragma omp target teams distribute
#pragma omp target teams distribute parallel for
#pragma omp target teams distribute parallel for simd
#pragma omp target teams distribute simd
#pragma omp taskloop
#pragma omp taskloop simd
#pragma omp teams distribute
#pragma omp teams distribute parallel for
#pragma omp teams distribute parallel for simd
#pragma omp teams distribute simd
#pragma omp master
#pragma omp ordered
#pragma omp parallel
#pragma omp parallel sections
#pragma omp section
#pragma omp sections
#pragma omp single
#pragma omp target data
#pragma omp target
#pragma omp target enter data
#pragma omp target exit data
#pragma omp target parallel
#pragma omp target parallel for
#pragma omp target teams
#pragma omp target update
#pragma omp task
#pragma omp taskgroup
#pragma omp taskwait
#pragma omp taskyield
#pragma omp teams
@catch (...) { /* todo */ } 
@synchronized (
@throw
@try
@catch(
@finally
@autoreleasepool
__leave;
__try 
case 
default:
switch (
__finally 
__except (
<<unknown expr type>>
default(
proc_bind(
defaultmap(
in_reduction(
task_reduction(
dist_schedule(
hint(
num_tasks(
grainsize(
priority(
thread_limit(
num_teams(
map(
device(
depend(
schedule(
reduction(
collapse(
simdlen(
safelen(
num_threads(
final(
if (
-0123456789
__c11_atomic_init(
__c11_atomic_load(
__c11_atomic_store(
__c11_atomic_exchange(
__c11_atomic_compare_exchange_strong(
__c11_atomic_compare_exchange_weak(
__c11_atomic_fetch_add(
__c11_atomic_fetch_sub(
__c11_atomic_fetch_and(
__c11_atomic_fetch_or(
__c11_atomic_fetch_xor(
__atomic_load(
__atomic_load_n(
__atomic_store(
__atomic_store_n(
__atomic_exchange(
__atomic_exchange_n(
__atomic_compare_exchange(
__atomic_compare_exchange_n(
__atomic_fetch_add(
__atomic_fetch_sub(
__atomic_fetch_and(
__atomic_fetch_or(
__atomic_fetch_xor(
__atomic_fetch_nand(
__atomic_add_fetch(
__atomic_sub_fetch(
__atomic_and_fetch(
__atomic_or_fetch(
__atomic_xor_fetch(
__atomic_nand_fetch(
__opencl_atomic_init(
__opencl_atomic_load(
__opencl_atomic_store(
__opencl_atomic_exchange(
__opencl_atomic_compare_exchange_strong(
__opencl_atomic_compare_exchange_weak(
__opencl_atomic_fetch_add(
__opencl_atomic_fetch_sub(
__opencl_atomic_fetch_and(
__opencl_atomic_fetch_or(
__opencl_atomic_fetch_xor(
__opencl_atomic_fetch_min(
__opencl_atomic_fetch_max(
__atomic_fetch_min(
__atomic_fetch_max(
<null expr>
catch (
<<<NULL STATEMENT>>>
(no value)
(anonymous)
(null template argument)
template 
operator 
instance_acceleration_structure
primitive_acceleration_structure
instancing
triangle_data
world_space_data
texture1d
texture1d_array
texture2d
texture2d_array
texture3d
texturecube
texturecube_array
texture2d_ms
texture2d_ms_array
texture_buffer
depth2d
depth2d_array
depthcube
depthcube_array
depth2d_ms
depth2d_ms_array
perspective
_pixel_type
align_val_t
byte
Builtin
Complex
Pointer
BlockPointer
LValueReference
RValueReference
MemberPointer
ConstantArray
IncompleteArray
VariableArray
DependentSizedArray
DependentSizedExtVector
DependentSizedMatrix
DependentAddressSpace
Vector
DependentVector
ExtVector
Matrix
FunctionProto
FunctionNoProto
UnresolvedUsing
Paren
Typedef
Adjusted
Decayed
TypeOfExpr
TypeOf
Decltype
UnaryTransform
Record
Enum
Elaborated
Attributed
TemplateTypeParm
SubstTemplateTypeParm
SubstTemplateTypeParmPack
TemplateSpecialization
Auto
DeducedTemplateSpecialization
InjectedClassName
DependentName
DependentTemplateSpecialization
PackExpansion
ObjCTypeParam
ObjCObject
ObjCInterface
ObjCObjectPointer
Pipe
Atomic
__metal_intersection_function_table_t
__metal_primitive_acceleration_structure_t
__metal_instance_acceleration_structure_t
__metal_visible_function_table_t
__metal_interpolant_t
__metal_compute_pipeline_state_t
__metal_render_pipeline_state_t
__metal_command_buffer_t
__metal_patch_control_point_t
__metal_imageblock_t
__metal_threadgroup_event_t
__metal_sampler_t
__metal_depth_2d_ms_array_t
__metal_depth_2d_ms_t
__metal_depth_cube_array_t
__metal_depth_cube_t
__metal_depth_2d_array_t
__metal_depth_2d_t
__metal_texture_buffer_1d_t
__metal_texture_2d_ms_array_t
__metal_texture_2d_ms_t
__metal_texture_cube_array_t
__metal_texture_cube_t
__metal_texture_3d_t
__metal_texture_2d_array_t
__metal_texture_2d_t
__metal_texture_1d_array_t
__metal_texture_1d_t
<OpenMP array section type>
reserve_id_t
queue_t
clk_event_t
event_t
sampler_t
__read_write image3d_t
__read_write image2d_array_msaa_depth_t
__read_write image2d_msaa_depth_t
__read_write image2d_array_msaa_t
__read_write image2d_msaa_t
__read_write image2d_array_depth_t
__read_write image2d_depth_t
__read_write image2d_array_t
__read_write image2d_t
__read_write image1d_buffer_t
__read_write image1d_array_t
__read_write image1d_t
__write_only image3d_t
__write_only image2d_array_msaa_depth_t
__write_only image2d_msaa_depth_t
__write_only image2d_array_msaa_t
__write_only image2d_msaa_t
__write_only image2d_array_depth_t
__write_only image2d_depth_t
__write_only image2d_array_t
__write_only image2d_t
__write_only image1d_buffer_t
__write_only image1d_array_t
__write_only image1d_t
__read_only image3d_t
__read_only image2d_array_msaa_depth_t
__read_only image2d_msaa_depth_t
__read_only image2d_array_msaa_t
__read_only image2d_msaa_t
__read_only image2d_array_depth_t
__read_only image2d_depth_t
__read_only image2d_array_t
__read_only image2d_t
__read_only image1d_buffer_t
__read_only image1d_array_t
__read_only image1d_t
Class
<builtin fn type>
<ARC unbridged cast type>
<unknown type>
<dependent type>
<pseudo-object type>
<bound member function type>
<overloaded function type>
nullptr_t
_Sat unsigned long _Fract
_Sat unsigned _Fract
_Sat unsigned short _Fract
_Sat long _Fract
_Sat _Fract
_Sat short _Fract
_Sat unsigned long _Accum
_Sat unsigned _Accum
_Sat unsigned short _Accum
_Sat long _Accum
_Sat _Accum
_Sat short _Accum
unsigned long _Fract
unsigned _Fract
unsigned short _Fract
long _Fract
short _Fract
unsigned long _Accum
unsigned _Accum
unsigned short _Accum
long _Accum
short _Accum
long double
unsigned __int128
unsigned long long
unsigned long
long long
spir_function
opencl_kernel
metal_shader
NSCopying
 throw(
 noexcept
__ptrauth(
__device
__shared
__attribute__((address_space(
NULL TYPE
static 
 __attribute__((ext_vector_type(
 __attribute__((packed_vector_type(
 __attribute__((address_space(
__attribute__((ns_consumed)) 
__attribute__((noescape)) 
__attribute__((
 _Nonnull
 _Nullable
 _Null_unspecified
 [[clang::lifetimebound]]
 [[visible]]
 __attribute__((
address_space(
__vector_size__(
 * sizeof(
neon_vector_type(
neon_polyvector_type(
regparm(
pcs(
"aapcs"
"aapcs-vfp"
inteloclbicc
 __attribute__((stdcall))
 __attribute__((fastcall))
 __attribute__((thiscall))
 __attribute__((vectorcall))
 __attribute__((pascal))
 __attribute__((pcs("aapcs")))
 __attribute__((pcs("aapcs-vfp")))
 __attribute__((intel_ocl_bicc))
 __attribute__((ms_abi))
 __attribute__((sysv_abi))
 __attribute__((regcall))
 __attribute__((swiftcall))
 __attribute__((preserve_most))
 __attribute__((preserve_all))
 __attribute__((intersectioncall))
 __attribute__((noreturn))
 __attribute__((ns_returns_retained))
 __attribute__((regparm (
 __attribute__((no_caller_saved_registers))
 __attribute__((nocf_check))
_Complex 
 __attribute__((matrix_type(
))) 
__vector __pixel 
__vector __bool 
__vector 
__attribute__((neon_vector_type(
__attribute__((neon_polyvector_type(
__attribute__((__vector_size__(
)))) 
auto 
typeof 
typeof(
decltype(
__underlying_type(
__kindof 
 __ptr32
 __ptr64
 __sptr
 __uptr
decltype(auto)
read_only 
write_only 
pipe 
_Atomic(
type-parameter-
std::function<
lambda
anonymous
 at 
(anonymous namespace)::
Original map
 -> 
Construction vtable for ('
) in '
Vtable for '
 entries).
%4d | 
vcall_offset (
vbase_offset (
offset_to_top (
 RTTI
 [pure]
 [deleted]
       [return adjustment: 
 non-virtual
 vbase offset offset
       [this adjustment: 
 vcall offset offset
() [complete]
() [deleting]
[unused] 
       -- (
) vtable address --
Virtual base offset offsets for '
 entry
 entries
Thunks for '
return adjustment: 
       
this adjustment: 
 [complete]
 [deleting]
VTable indices for '
%4llu | 
 method: 
VFTable for 
' in 
() [scalar deleting]
Unexpected vftable component type %0 for component number %1
 [scalar deleting]
VFTable indices for 
 -- accessible via 
vbtable index 
vfptr at offset 
[return adjustment (to type '
'): 
vbptr at offset 
vbase #
 non-virtual]
[this adjustment: 
vtordisp at 
vbptr at 
 to the left,
 vboffset at 
 in the vbtable, 
Header Map 
 -> '
*** HeaderSearch Stats:
%d files tracked.
  %d #import/#pragma once files.
  %d included exactly once.
  %d max times a file is included.
  %d #include/#include_next/#import.
    %d #includes skipped due to the multi-include optimization.
%d framework lookups.
%d subframework lookups.
.pcm
module.map
module.modulemap
Modules
.framework/
.system_framework
Headers/
Frameworks/
PrivateHeaders/
<<<<
>>>>>>>
MacroInfo 
 builtin
 disabled
 used
 allow_redefinitions_without_warning
 warn_if_unused
 header_guard
    #define <macro>
DefMacroDirective
UndefMacroDirective
VisibilityMacroDirective
 prev 
 from_pch
 private
 public
Modules:
Headers:
" -> 
Headers
Private
PrivateHeaders
SmallVector capacity overflow during allocation
<global>
.tbd
.api
.spi
exclude
header
link
textual
umbrella
Darwin
module.private.modulemap
module_private.map
size
framework module
excluded
IOKit
override
__autoreleasing
@import 
boost
cmath
cstdlib
regex
array
initializer_list
mutex
stack
complex
string
_Private
 to 
'defined'
MacroState 
 ambiguous
 overrides
 ModuleMacro 
 undef
 active
 hidden
 overridden
__LINE__
__FILE__
__DATE__
__TIME__
__COUNTER__
_Pragma
__has_cpp_attribute
__BASE_FILE__
__INCLUDE_LEVEL__
__TIMESTAMP__
__identifier
__pragma
__has_feature
__has_extension
__has_builtin
__has_attribute
__has_c_attribute
__has_declspec_attribute
__has_include
__has_include_next
__has_warning
__is_identifier
__is_target_arch
__is_target_vendor
__is_target_os
__is_target_environment
__has_target_variant
__is_target_variant_os
__is_target_variant_environment
__building_module
__MODULE__
??? ??? ?? ??:??:?? ????
unknown-unknown-
'__has_warning'
__make_integer_seq
__type_pack_element
cxx_reference_qualified_functions
attribute_availability_with_message
attribute_availability_app_extension
attribute_availability_with_version_underscores
attribute_availability_with_strict
attribute_availability_with_replacement
attribute_availability_in_templates
attribute_cf_returns_not_retained
attribute_cf_returns_on_parameters
attribute_deprecated_with_message
attribute_deprecated_with_replacement
attribute_ns_returns_not_retained
attribute_unavailable_with_message
objc_default_synthesize_properties
cxx_decltype_incomplete_return_types
cxx_default_function_template_args
"%s %2d %4d"
"%02d:%02d:%02d"
PTH file uses an older PTH format that is no longer supported
PTH file contains no cached source data
Could not allocate memory for processing PTH file
DEFAULT
message
dependency
__debug
begin
push
disable
pragma warning
crash
parser_crash
dump
diag_mapping
llvm_fatal_error
#pragma clang __debug llvm_fatal_error
llvm_unreachable
macro
overflow_stack
handle_crash
captured
pragma clang __debug captured
pragma diagnostic
pragma message
pragma error
pragma once
__VA_ARGS__
__VA_OPT__
GetExceptionInformation
GetExceptionCode
AbnormalTermination
*** Preprocessor Stats:
 directives found:
 #define.
 #undef.
  #include/#include_next/#import:
 source files entered.
 max include stack depth
 #if/#ifndef/#ifdef.
 #else/#elif.
 #endif.
 #pragma.
 #if/#ifndef#ifdef regions skipped
 obj/fn/builtin macros expanded, 
 on the fast path.
 token paste (##) operations performed, 
Preprocessor Memory: 
B total
  BumpPtr: 
  Macro Expanded Tokens: 
  Predefines Buffer: 
  Macros: 
  #pragma push_macro Info: 
  Poison Reasons: 
  Comment Handlers: 
AIR-LLD 31001.43 (metalfe-31001.43)
AIR Linker
unknown option: 
: number expected, but got '
argument to 
 is missing (expected 
 value
air32
air64
air32_v16
air64_v16
air32_v18
air64_v18
air32_v111
air64_v111
air32_v20
air64_v20
air32_v21
air64_v21
air32_v22
air64_v22
air32_v23
air64_v23
: architecture '
' is not supported
Library
Frameworks
System
enabling linking options requires --create-static-library
invalid deployment target '
deployment target '
' is too old
macosx11.0.0
macosx10.11.0
: value '
fast-relaxed-math
default.metallib
air-lld
cannot get current directory
 (LLVM option parsing)
unknown argument: 
-apple-
cannot create '
.framework
.metallib
framework not found 
cannot open '
cannot load export file
tvos
_sim
_mac
_air
library not found for -l
cannot load '
input '
' has unknown format
armv4t
armv6
armv5
armv7s
armv7k
armv6m
armv7m
armv7em
arm64_32
applegpu_s3
applegpu_a8
applegpu_a8x
applegpu_a9
applegpu_a10
applegpu_a10x
applegpu_a11
applegpu_a12
applegpu_s4
applegpu_a12x
applegpu_a12z
applegpu_a13
applegpu_a14
amdgpu_gfx600
amdgpu_gfx600_nwh
amdgpu_gfx701
amdgpu_gfx704
amdgpu_gfx803
amdgpu_gfx802
amdgpu_gfx900
amdgpu_gfx904
amdgpu_gfx906
amdgpu_gfx1010_nsgc
amdgpu_gfx1010
amdgpu_gfx1011
amdgpu_gfx1012
intelgpu_skl_gt2r6
intelgpu_skl_gt2r7
intelgpu_skl_gt3r10
intelgpu_kbl_gt2r0
intelgpu_kbl_gt2r2
intelgpu_kbl_gt2r4
intelgpu_kbl_gt3r1
intelgpu_kbl_gt3r6
intelgpu_icl_1x6x8r7
intelgpu_icl_1x8x8r7
nvidiagpu_gk
nvidiagpu_gm
nvidiagpu_gp
nvidiagpu_gv
_v16
_v18
_v111
_v20
_v21
_v22
_v23
_v24
<input>
<unknown>
arch
Which architecture the output file should be
<arch_name>
cl-denorms-are-zero
Flush floating-point denormal numbers to zero
cl-fast-relaxed-math
Equivalent to '--cl-finite-math-only' and '--cl-fast-relaxed-math'
cl-finite-math-only
Allow optimizations for floating-point arithmetic that assume that arguments and results are not NaNs or infinity
cl-no-signed-zeros
Allow optimizations for floating-point arithmetic that ignore the signedness of zero
cl-unsafe-math-optimizations
Enable floating point optimizations that might violate precision requirements
color-diagnostics=
Use color in diagnostics; one of 'always', 'never', 'auto'
color-diagnostics
Use colors in diagnostics
create-ci-library
Build a CI library
create-library
create-lowering-library
Build a lowering library
create-shared-library
Build a shared library
create-static-library
Build a static library
dylib_install_name
embed_sources
Save inputs into the final output file
enable-link-options
Allow modification of library behaviour at link-time
error-limit=
Maximum number of errors to emit before stopping (0 = no limit)
exported_symbols_list
Specifies a list of global symbol names that will remain as global symbols in the output file
<file>
framework-variant
Variant name of frameworks to use
<name
framework
Root name of a framework to use. If <variant> is set, search for variants first (<root>_<variant>)
<root>[,<variant>]
Add a directory to the framework search path
<dir>
help
Print option help
install_name
Set the name of the shared library being created
<name>
ios_simulator_version_min
Set the oldest iOS (Simulator) version that the output is to be used on
<version>
ios_version_min
Set the oldest iOS version that the output is to be used on
iosmac_version_min
iphoneos_version_min
Variant name of libraries to use
Add a directory to the library search path
Root name of a library to use. If <variant> is set, search for variants first (<root>_<variant>)
maccatalyst_version_min
Set the oldest iOS (MacCatalyst) version that the output is to be used on
macos_version_min
Set the oldest macOS version that the output is to be used on
macosx_version_min
mllvm
Options to pass to LLVM
no-color-diagnostics
Do not use colors in diagnostics
no_embed_sources
Do not save inputs into the final output file
no_write
Do not write any output to the filesystem
nostdlib
Only search directories specified on the command line
output_addr_size
Size of addresses in output files: auto | 32 | 64
<value>
Path to file to write primary output
<path>
sysroot=
Set the system root
sysroot
tvos_simulator_version_min
Set the oldest tvOS (Simulator) version that the output is to be used on
tvos_version_min
Set the oldest tvOS version that the output is to be used on
Specifies how undefined symbols are to be treated, it can be 'error', 'warning', or 'suppress'
<treatment>
Display the version number and exit
vfs-overlay
Overlay the virtual filesystem described by file over the real file system
watchos_simulator_version_min
Set the oldest watchOS (Simulator) version that the output is to be used on
watchos_version_min
Set the oldest watchOS version that the output is to be used on
cannot materialize module
 in '
cannot upgrade module
cannot materialize module metadata
llvm.commandline
recompile_info
llvm_utils.workingdir
cannot read '
cannot get library install name in '
air.ci
air.dyld_flat_table
air.dyld_str_table
air.dyld_lib_table
cannot materialize module in '
cannot upgrade module in '
air.max_device_buffers
air.max_constant_buffers
air.max_threadgroup_buffers
air.max_textures
air.max_read_write_textures
air.max_samplers
Not yet implemented!
cannot materialize metadata in '
Undefined symbol(s) for architecture '
', referenced from:
symbol(s) not found for target '
      
 in 
 duplicated symbol
duplicated symbol '
' in:
 for target '
object
ignoring file '
', file type is not compatible with lowering libraries
ignoring metallib, metallib type is not compatible with lowering libraries
invalid module in '
', function constants are not supported for lowering libraries
', visible function references are not supported for lowering libraries
invalid module
, function constants are not supported for lowering libraries
, visible function references are not supported for lowering libraries
__loweringlib.internal.
__loweringlib.
Dwarf Version
Debug Info Version
', file type is not compatible with ci libraries
ignoring metallib, metallib type is not compatible with ci libraries
AIR_ENABLE_VM
air.tls_static_init
', file was built for '
' which is not compatible with the target being archived (
', file AIR version (
) is bigger than the one of the target being archived (
ignoring module
, module was built for '
, module AIR version (
module.air
' which is not compatible with the target being linked (
) is bigger than the one of the target being linked (
ignoring metallib, metallib was built for '
ignoring metallib, metallib AIR version (
archive '
' has no table of contents for the target being linked (
llvm.global_dtors
cannot get symbol name
cannot write output file
amdgpu_flat_work_group_size
amdgpu_num_sgpr
amdgpu_num_vgpr
amdgpu_waves_per_eu
interrupt
signal
abi_tag
acquire_capability
acquire_shared_capability
exclusive_lock_function
shared_lock_function
acquired_after
acquired_before
alias
align_value
alloc_align
alloc_size
always_destroy
always_inline
analyzer_noreturn
annotate
no_caller_saved_registers
nocf_check
objc_arc_weak_reference_unavailable
argument_with_type_tag
pointer_with_type_tag
artificial
assert_capability
assert_shared_capability
assert_exclusive_lock
assert_shared_lock
assume_aligned
availability
cf_audited_transfer
cf_consumed
cf_returns_not_retained
cf_returns_retained
cf_unknown_transfer
cpu_dispatch
cpu_specific
host
launch_bounds
callable_when
capability
shared_capability
carries_dependency
cleanup
cold
common
constructor
consumable
consumable_auto_cast_state
consumable_set_state_on_read
convergent
dllexport
dllimport
deprecated
destructor
diagnose_if
disable_tail_calls
enable_if
enum_extensibility
exclude_from_explicit_instantiation
exclusive_trylock_function
ext_vector_type
external_source_symbol
flag_enum
flatten
format
ms_abi
format_arg
gnu_inline
guarded_by
guarded_var
matrix_type
ibaction
iboutlet
iboutletcollection
ifunc
init_priority
lifetimebound
intel_ocl_bicc
locks_excluded
internal_linkage
intersectioncall
lto_visibility_public
lock_returned
ms_struct
may_alias
micromips
minsize
min_vector_width
mips16
long_call
short_call
near
mode
ns_consumed
ns_consumes_self
ns_error_domain
ns_returns_autoreleased
ns_returns_not_retained
ns_returns_retained
naked
nocommon
nodebug
no_destroy
noduplicate
noescape
noinline
no_instrument_function
nomicromips
nomips16
noreturn
no_sanitize
no_split_stack
no_stack_protector
no_thread_safety_analysis
nothrow
no_tracepoint
not_tail_called
os_consumed
os_consumes_this
os_returns_not_retained
os_returns_retained
objc_boxable
objc_bridge
objc_bridge_mutable
objc_bridge_related
objc_complete_definition
objc_designated_initializer
objc_exception
objc_protocol_requires_explicit_implementation
objc_independent_class
objc_method_family
NSObject
objc_ownership
objc_precise_lifetime
objc_requires_property_definitions
objc_requires_super
objc_returns_inner_pointer
objc_root_class
objc_runtime_name
objc_runtime_visible
objc_subclassing_restricted
intel_reqd_sub_group_size
opencl_unroll_hint
optnone
overloadable
ownership_holds
ownership_returns
ownership_takes
packed
packed_vector_type
param_typestate
pass_object_size
preserve_all
preserve_most
pt_guarded_by
pt_guarded_var
pure
regcall
regparm
reinitializes
release_capability
release_shared_capability
release_generic_capability
unlock_function
reqd_work_group_size
require_constant_initialization
requires_capability
exclusive_locks_required
requires_shared_capability
shared_locks_required
return_typestate
returns_nonnull
returns_twice
scoped_lockable
selectany
sentinel
set_typestate
shared_trylock_function
swift_bridge
swift_bridged_typedef
swiftcall
swift_context
swift_error
swift_error_result
swift_indirect_result
swift_name
swift_newtype
swift_wrapper
swift_objc_members
swift_private
sysv_abi
tls_model
test_typestate
transparent_union
trivial_abi
try_acquire_capability
try_acquire_shared_capability
type_tag_for_datatype
type_visibility
unavailable
uninitialized
unused
used
vecreturn
vec_type_hint
vectorcall
vector_size
visibility
warn_unused
warn_unused_result
weak
weak_import
weakref
work_group_size_hint
force_align_arg_pointer
xray_log_args
align
__constant__
__device__
__global__
__host__
__launch_bounds__
__shared__
code_seg
empty_bases
layout_version
novtable
noalias
allocate
uuid
init_seg
loop
unroll
nounroll
unroll_and_jam
nounroll_and_jam
accept_intersection
amplification_count
amplification_id
array_ref_size
attribute
barycentric_coord
base_instance
base_vertex
buffer
center_no_perspective
center_perspective
centroid_no_perspective
centroid_perspective
clip_distance
color
continue_search
depth
direction
dispatch_quadgroups_per_threadgroup
dispatch_simdgroups_per_threadgroup
dispatch_threads_per_threadgroup
distance
early_fragment_tests
flat
front_facing
function_constant
function_groups
geometry_id
geometry_intersection_function_table_offset
host_name
alias_implicit_imageblock
alias_implicit_imageblock_color
imageblock_data
instance_id
instance_intersection_function_table_offset
intersection
invariant
max_distance
max_total_threads_per_threadgroup
min_distance
opaque
origin
patch
patch_id
payload
pixel_position_in_tile
pixels_per_tile
point_coord
point_size
position
position_in_patch
post_depth_coverage
primitive_id
quadgroup_index_in_threadgroup
quadgroups_per_threadgroup
raster_order_group
render_target_array_index
simdgroup_index_in_threadgroup
simdgroups_per_threadgroup
sample_id
sample_mask
sample_no_perspective
sample_perspective
stage_in
grid_origin
grid_size
stencil
stitchable
thread_execution_width
threadgroup_position_in_grid
threadgroups_per_grid
thread_index_in_threadgroup
thread_index_in_quadgroup
thread_index_in_simdgroup
thread_position_in_grid
thread_position_in_threadgroup
threads_per_grid
threads_per_threadgroup
threads_per_simdgroup
tile_index
user
vertex_id
viewport_array_index
world_space_direction
world_space_origin
maybe_unused
nodiscard
suppress
block
enum_constant
field
function(is_member)
objc_category
objc_interface
objc_method
objc_method(is_instance)
objc_property
objc_protocol
record
record(unless(is_union))
hasType
hasType(functionType)
type_alias
variable
variable(is_thread_local)
variable(is_global)
variable(is_parameter)
variable(unless(is_parameter))
not a builtin function
__builtin_atan2
__builtin_atan2f
__builtin_atan2l
LdLdLd
__builtin_abs
__builtin_copysign
__builtin_copysignf
__builtin_copysignl
__builtin_copysignf128
__builtin_fabs
__builtin_fabsf
__builtin_fabsl
LdLd
__builtin_fabsf128
__builtin_fmod
__builtin_fmodf
__builtin_fmodl
__builtin_frexp
ddi*
__builtin_frexpf
ffi*
__builtin_frexpl
LdLdi*
__builtin_huge_val
__builtin_huge_valf
__builtin_huge_valh
__builtin_huge_vall
__builtin_huge_valf128
__builtin_inf
__builtin_inff
__builtin_infh
__builtin_infl
__builtin_inff128
__builtin_labs
LiLi
__builtin_llabs
__builtin_ldexp
__builtin_ldexpf
__builtin_ldexpl
LdLdi
__builtin_modf
ddd*
__builtin_modff
fff*
__builtin_modfl
LdLdLd*
__builtin_nan
dcC*
__builtin_nanf
fcC*
__builtin_nanh
hcC*
__builtin_nanl
LdcC*
__builtin_nanf128
LLdcC*
__builtin_nans
__builtin_nansf
__builtin_nansh
__builtin_nansl
__builtin_nansf128
__builtin_powi
__builtin_powif
__builtin_powil
__builtin_pow
__builtin_powf
__builtin_powl
__builtin_acos
__builtin_acosf
__builtin_acosl
__builtin_acosh
__builtin_acoshf
__builtin_acoshl
__builtin_asin
__builtin_asinf
__builtin_asinl
__builtin_asinh
__builtin_asinhf
__builtin_asinhl
__builtin_atan
__builtin_atanf
__builtin_atanl
__builtin_atanh
__builtin_atanhf
__builtin_atanhl
__builtin_cbrt
__builtin_cbrtf
__builtin_cbrtl
__builtin_ceil
__builtin_ceilf
__builtin_ceill
__builtin_cos
__builtin_cosf
__builtin_cosh
__builtin_coshf
__builtin_coshl
__builtin_cosl
__builtin_erf
__builtin_erff
__builtin_erfl
__builtin_erfc
__builtin_erfcf
__builtin_erfcl
__builtin_exp
__builtin_expf
__builtin_expl
__builtin_exp2
__builtin_exp2f
__builtin_exp2l
__builtin_expm1
__builtin_expm1f
__builtin_expm1l
__builtin_fdim
__builtin_fdimf
__builtin_fdiml
__builtin_floor
__builtin_floorf
__builtin_floorl
__builtin_fma
__builtin_fmaf
__builtin_fmal
LdLdLdLd
__builtin_fmax
__builtin_fmaxf
__builtin_fmaxl
__builtin_fmin
__builtin_fminf
__builtin_fminl
__builtin_hypot
__builtin_hypotf
__builtin_hypotl
__builtin_ilogb
__builtin_ilogbf
__builtin_ilogbl
__builtin_lgamma
__builtin_lgammaf
__builtin_lgammal
__builtin_llrint
__builtin_llrintf
__builtin_llrintl
LLiLd
__builtin_llround
__builtin_llroundf
__builtin_llroundl
__builtin_log
__builtin_log10
__builtin_log10f
__builtin_log10l
__builtin_log1p
__builtin_log1pf
__builtin_log1pl
__builtin_log2
__builtin_log2f
__builtin_log2l
__builtin_logb
__builtin_logbf
__builtin_logbl
__builtin_logf
__builtin_logl
__builtin_lrint
__builtin_lrintf
__builtin_lrintl
LiLd
__builtin_lround
__builtin_lroundf
__builtin_lroundl
__builtin_nearbyint
__builtin_nearbyintf
__builtin_nearbyintl
__builtin_nextafter
__builtin_nextafterf
__builtin_nextafterl
__builtin_nexttoward
ddLd
__builtin_nexttowardf
ffLd
__builtin_nexttowardl
__builtin_remainder
__builtin_remainderf
__builtin_remainderl
__builtin_remquo
dddi*
__builtin_remquof
fffi*
__builtin_remquol
LdLdLdi*
__builtin_rint
__builtin_rintf
__builtin_rintl
__builtin_round
__builtin_roundf
__builtin_roundl
__builtin_scalbln
ddLi
__builtin_scalblnf
ffLi
__builtin_scalblnl
LdLdLi
__builtin_scalbn
__builtin_scalbnf
__builtin_scalbnl
__builtin_sin
__builtin_sinf
__builtin_sinh
__builtin_sinhf
__builtin_sinhl
__builtin_sinl
__builtin_sqrt
__builtin_sqrtf
__builtin_sqrtl
__builtin_tan
__builtin_tanf
__builtin_tanh
__builtin_tanhf
__builtin_tanhl
__builtin_tanl
__builtin_tgamma
__builtin_tgammaf
__builtin_tgammal
__builtin_trunc
__builtin_truncf
__builtin_truncl
__builtin_cabs
__builtin_cabsf
__builtin_cabsl
LdXLd
__builtin_cacos
XdXd
__builtin_cacosf
XfXf
__builtin_cacosh
__builtin_cacoshf
__builtin_cacoshl
XLdXLd
__builtin_cacosl
__builtin_carg
__builtin_cargf
__builtin_cargl
__builtin_casin
__builtin_casinf
__builtin_casinh
__builtin_casinhf
__builtin_casinhl
__builtin_casinl
__builtin_catan
__builtin_catanf
__builtin_catanh
__builtin_catanhf
__builtin_catanhl
__builtin_catanl
__builtin_ccos
__builtin_ccosf
__builtin_ccosl
__builtin_ccosh
__builtin_ccoshf
__builtin_ccoshl
__builtin_cexp
__builtin_cexpf
__builtin_cexpl
__builtin_cimag
__builtin_cimagf
__builtin_cimagl
__builtin_conj
__builtin_conjf
__builtin_conjl
__builtin_clog
__builtin_clogf
__builtin_clogl
__builtin_cproj
__builtin_cprojf
__builtin_cprojl
__builtin_cpow
XdXdXd
__builtin_cpowf
XfXfXf
__builtin_cpowl
XLdXLdXLd
__builtin_creal
__builtin_crealf
__builtin_creall
__builtin_csin
__builtin_csinf
__builtin_csinl
__builtin_csinh
__builtin_csinhf
__builtin_csinhl
__builtin_csqrt
__builtin_csqrtf
__builtin_csqrtl
__builtin_ctan
__builtin_ctanf
__builtin_ctanl
__builtin_ctanh
__builtin_ctanhf
__builtin_ctanhl
__builtin_isgreater
__builtin_isgreaterequal
__builtin_isless
__builtin_islessequal
__builtin_islessgreater
__builtin_isunordered
__builtin_fpclassify
iiiiii.
__builtin_isfinite
__builtin_isinf
__builtin_isinf_sign
__builtin_isnan
__builtin_isnormal
__builtin_signbit
__builtin_signbitf
__builtin_signbitl
__builtin_canonicalize
__builtin_canonicalizef
__builtin_canonicalizel
__builtin_clzs
__builtin_clz
__builtin_clzl
iULi
__builtin_clzll
iULLi
__builtin_ctzs
__builtin_ctz
__builtin_ctzl
__builtin_ctzll
__builtin_ffs
__builtin_ffsl
__builtin_ffsll
__builtin_parity
__builtin_parityl
__builtin_parityll
__builtin_popcount
__builtin_popcountl
__builtin_popcountll
__builtin_bswap16
__builtin_bswap32
__builtin_bswap64
__builtin_bitreverse8
UcUc
__builtin_bitreverse16
__builtin_bitreverse32
__builtin_bitreverse64
__builtin_constant_p
nctu
__builtin_classify_type
__builtin___CFStringMakeConstantString
FC*cC*
__builtin___NSStringMakeConstantString
__builtin_va_start
__builtin_va_end
__builtin_va_copy
__builtin_stdarg_start
__builtin_assume_aligned
v*vC*z.
__builtin_bcmp
iv*v*z
__builtin_bcopy
vv*v*z
__builtin_bzero
vv*z
__builtin_fprintf
iP*cC*.
Fp:1:
__builtin_memchr
v*vC*iz
__builtin_memcmp
ivC*vC*z
__builtin_memcpy
v*v*vC*z
__builtin_memmove
__builtin_mempcpy
__builtin_memset
v*v*iz
__builtin_printf
icC*.
Fp:0:
__builtin_stpcpy
c*c*cC*
__builtin_stpncpy
c*c*cC*z
__builtin_strcasecmp
icC*cC*
__builtin_strcat
__builtin_strchr
c*cC*i
__builtin_strcmp
__builtin_strcpy
__builtin_strcspn
zcC*cC*
__builtin_strdup
c*cC*
__builtin_strlen
zcC*
__builtin_strncasecmp
icC*cC*z
__builtin_strncat
__builtin_strncmp
__builtin_strncpy
__builtin_strndup
c*cC*z
__builtin_strpbrk
c*cC*cC*
__builtin_strrchr
__builtin_strspn
__builtin_strstr
__builtin_wcschr
w*wC*w
__builtin_wcscmp
iwC*wC*
__builtin_wcslen
zwC*
__builtin_wcsncmp
iwC*wC*z
__builtin_wmemchr
w*wC*wz
__builtin_wmemcmp
__builtin_wmemcpy
w*w*wC*z
__builtin_wmemmove
__builtin_return_address
v*IUi
__builtin_extract_return_addr
v*v*
__builtin_frame_address
__builtin___clear_cache
vc*c*
__builtin_flt_rounds
__builtin_setjmp
iv**
__builtin_longjmp
vv**i
__builtin_unwind_init
__builtin_eh_return_data_regno
__builtin_snprintf
ic*zcC*.
nFp:2:
__builtin_vsprintf
ic*cC*a
nFP:1:
__builtin_vsnprintf
ic*zcC*a
nFP:2:
__builtin_thread_pointer
__builtin_eh_return
vzv*
__builtin_frob_return_addr
__builtin_dwarf_cfa
__builtin_init_dwarf_reg_size_table
__builtin_dwarf_sp_column
__builtin_extend_pointer
ULLiv*
__builtin_object_size
zvC*i
__builtin___memcpy_chk
v*v*vC*zz
__builtin___memccpy_chk
v*v*vC*izz
__builtin___memmove_chk
__builtin___mempcpy_chk
__builtin___memset_chk
v*v*izz
__builtin___stpcpy_chk
__builtin___strcat_chk
__builtin___strcpy_chk
__builtin___strlcat_chk
zc*cC*zz
__builtin___strlcpy_chk
__builtin___strncat_chk
c*c*cC*zz
__builtin___strncpy_chk
__builtin___stpncpy_chk
__builtin___snprintf_chk
ic*zizcC*.
Fp:4:
__builtin___sprintf_chk
ic*izcC*.
Fp:3:
__builtin___vsnprintf_chk
ic*zizcC*a
FP:4:
__builtin___vsprintf_chk
ic*izcC*a
FP:3:
__builtin___fprintf_chk
iP*icC*.
Fp:2:
__builtin___printf_chk
iicC*.
__builtin___vfprintf_chk
iP*icC*a
FP:2:
__builtin___vprintf_chk
iicC*a
FP:1:
__builtin_unpredictable
__builtin_expect
LiLiLi
__builtin_prefetch
vvC*.
__builtin_readcyclecounter
__builtin_trap
__builtin_debugtrap
__builtin_unreachable
__builtin_shufflevector
__builtin_matrix_insert
__builtin_matrix_extract
__builtin_matrix_subtract
__builtin_matrix_add
__builtin_matrix_multiply
__builtin_matrix_transpose
__builtin_matrix_scalar_multiply
__builtin_matrix_column_load
__builtin_matrix_column_store
__builtin_alloca
__builtin_alloca_with_align
v*zIz
__builtin_call_with_static_chain
__sync_fetch_and_add
__sync_fetch_and_add_1
ccD*c.
__sync_fetch_and_add_2
ssD*s.
__sync_fetch_and_add_4
iiD*i.
__sync_fetch_and_add_8
LLiLLiD*LLi.
__sync_fetch_and_add_16
LLLiLLLiD*LLLi.
__sync_fetch_and_sub
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_or
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_and
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_xor
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_add_and_fetch
__sync_add_and_fetch_1
__sync_add_and_fetch_2
__sync_add_and_fetch_4
__sync_add_and_fetch_8
__sync_add_and_fetch_16
__sync_sub_and_fetch
__sync_sub_and_fetch_1
__sync_sub_and_fetch_2
__sync_sub_and_fetch_4
__sync_sub_and_fetch_8
__sync_sub_and_fetch_16
__sync_or_and_fetch
__sync_or_and_fetch_1
__sync_or_and_fetch_2
__sync_or_and_fetch_4
__sync_or_and_fetch_8
__sync_or_and_fetch_16
__sync_and_and_fetch
__sync_and_and_fetch_1
__sync_and_and_fetch_2
__sync_and_and_fetch_4
__sync_and_and_fetch_8
__sync_and_and_fetch_16
__sync_xor_and_fetch
__sync_xor_and_fetch_1
__sync_xor_and_fetch_2
__sync_xor_and_fetch_4
__sync_xor_and_fetch_8
__sync_xor_and_fetch_16
__sync_nand_and_fetch
__sync_nand_and_fetch_1
__sync_nand_and_fetch_2
__sync_nand_and_fetch_4
__sync_nand_and_fetch_8
__sync_nand_and_fetch_16
__sync_bool_compare_and_swap
__sync_bool_compare_and_swap_1
bcD*cc.
__sync_bool_compare_and_swap_2
bsD*ss.
__sync_bool_compare_and_swap_4
biD*ii.
__sync_bool_compare_and_swap_8
bLLiD*LLiLLi.
__sync_bool_compare_and_swap_16
bLLLiD*LLLiLLLi.
__sync_val_compare_and_swap
__sync_val_compare_and_swap_1
ccD*cc.
__sync_val_compare_and_swap_2
ssD*ss.
__sync_val_compare_and_swap_4
iiD*ii.
__sync_val_compare_and_swap_8
LLiLLiD*LLiLLi.
__sync_val_compare_and_swap_16
LLLiLLLiD*LLLiLLLi.
__sync_lock_test_and_set
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_lock_release
__sync_lock_release_1
vcD*.
__sync_lock_release_2
vsD*.
__sync_lock_release_4
viD*.
__sync_lock_release_8
vLLiD*.
__sync_lock_release_16
vLLLiD*.
__sync_swap
__sync_swap_1
__sync_swap_2
__sync_swap_4
__sync_swap_8
__sync_swap_16
__c11_atomic_init
__c11_atomic_load
__c11_atomic_store
__c11_atomic_exchange
__c11_atomic_compare_exchange_strong
__c11_atomic_compare_exchange_weak
__c11_atomic_fetch_add
__c11_atomic_fetch_sub
__c11_atomic_fetch_and
__c11_atomic_fetch_or
__c11_atomic_fetch_xor
__c11_atomic_thread_fence
__c11_atomic_signal_fence
__c11_atomic_is_lock_free
__atomic_load
__atomic_load_n
__atomic_store
__atomic_store_n
__atomic_exchange
__atomic_exchange_n
__atomic_compare_exchange
__atomic_compare_exchange_n
__atomic_fetch_add
__atomic_fetch_sub
__atomic_fetch_and
__atomic_fetch_or
__atomic_fetch_xor
__atomic_fetch_nand
__atomic_add_fetch
__atomic_sub_fetch
__atomic_and_fetch
__atomic_or_fetch
__atomic_xor_fetch
__atomic_nand_fetch
__atomic_test_and_set
bvD*i
__atomic_clear
__atomic_thread_fence
__atomic_signal_fence
__atomic_always_lock_free
izvCD*
__atomic_is_lock_free
__opencl_atomic_init
__opencl_atomic_load
__opencl_atomic_store
__opencl_atomic_exchange
__opencl_atomic_compare_exchange_strong
__opencl_atomic_compare_exchange_weak
__opencl_atomic_fetch_add
__opencl_atomic_fetch_sub
__opencl_atomic_fetch_and
__opencl_atomic_fetch_or
__opencl_atomic_fetch_xor
__opencl_atomic_fetch_min
__opencl_atomic_fetch_max
__atomic_fetch_min
__atomic_fetch_max
__sync_synchronize
__sync_fetch_and_min
__sync_fetch_and_max
__sync_fetch_and_umin
__sync_fetch_and_umax
__builtin_abort
__builtin_index
__builtin_rindex
_alloca
__annotation
wC*.
__assume
_bittest
UcNiC*Ni
_bittestandcomplement
UcNi*Ni
_bittestandreset
_bittestandset
_bittest64
UcWiC*Wi
_bittestandcomplement64
UcWi*Wi
_bittestandreset64
_bittestandset64
_byteswap_ushort
stdlib.h
_byteswap_ulong
_byteswap_uint64
__debugbreak
__exception_code
_exception_code
__exception_info
_exception_info
__abnormal_termination
_abnormal_termination
__GetExceptionInfo
_InterlockedAnd8
ccD*c
_InterlockedAnd16
ssD*s
_InterlockedAnd
NiNiD*Ni
_InterlockedCompareExchange8
ccD*cc
_InterlockedCompareExchange16
ssD*ss
_InterlockedCompareExchange
NiNiD*NiNi
_InterlockedCompareExchange64
_InterlockedCompareExchangePointer
v*v*D*v*v*
_InterlockedDecrement16
ssD*
_InterlockedDecrement
NiNiD*
_InterlockedExchange
_InterlockedExchange8
_InterlockedExchange16
_InterlockedExchangeAdd8
_InterlockedExchangeAdd16
_InterlockedExchangeAdd
_InterlockedExchangePointer
v*v*D*v*
_InterlockedExchangeSub8
_InterlockedExchangeSub16
_InterlockedExchangeSub
_InterlockedIncrement16
_InterlockedIncrement
_InterlockedOr8
_InterlockedOr16
_InterlockedOr
_InterlockedXor8
_InterlockedXor16
_InterlockedXor
_interlockedbittestandreset
UcNiD*Ni
_interlockedbittestandreset64
UcWiD*Wi
_interlockedbittestandreset_acq
_interlockedbittestandreset_nf
_interlockedbittestandreset_rel
_interlockedbittestandset
_interlockedbittestandset64
_interlockedbittestandset_acq
_interlockedbittestandset_nf
_interlockedbittestandset_rel
__noop
__popcnt16
__popcnt
__popcnt64
_ReturnAddress
_rotl8
UcUcUc
_rotl16
UsUsUc
_rotl
UiUii
_lrotl
UNiUNii
_rotl64
ULLiULLii
_rotr8
_rotr16
_rotr
_lrotr
_rotr64
__va_start
vc**.
__fastfail
_setjmpex
setjmpex.h
va_start
stdarg.h
va_end
va_copy
abort
calloc
v*zz
exit
_Exit
malloc
realloc
v*v*z
strtod
dcC*c**
strtof
fcC*c**
strtold
LdcC*c**
strtol
LicC*c**i
strtoll
LLicC*c**i
strtoul
ULicC*c**i
strtoull
ULLicC*c**i
memcpy
string.h
memcmp
memmove
strcpy
strncpy
strcmp
strncmp
strcat
strncat
strxfrm
zc*cC*z
memchr
strchr
strcspn
strpbrk
strrchr
strspn
strstr
strtok
memset
strerror
strlen
printf
fp:0:
stdio.h
fprintf
fp:1:
snprintf
fp:2:
sprintf
ic*cC*.
vprintf
icC*a
fP:0:
vfprintf
iP*cC*a
fP:1:
vsnprintf
fP:2:
vsprintf
scanf
icC*R.
fs:0:
fscanf
iP*RcC*R.
fs:1:
sscanf
icC*RcC*R.
vscanf
icC*Ra
fS:0:
vfscanf
iP*RcC*Ra
fS:1:
vsscanf
icC*RcC*Ra
fopen
P*cC*cC*
fread
zv*zzP*
fwrite
zvC*zzP*
isalnum
ctype.h
isalpha
isblank
iscntrl
isdigit
isgraph
islower
isprint
ispunct
isspace
isupper
isxdigit
tolower
toupper
wcschr
wchar.h
wcscmp
wcslen
wcsncmp
wmemchr
wmemcmp
wmemcpy
wmemmove
setjmp
setjmp.h
longjmp
alloca
stpcpy
stpncpy
strdup
strndup
index
strings.h
rindex
bzero
strcasecmp
strncasecmp
_exit
unistd.h
vfork
_setjmp
__sigsetjmp
iSJi
sigsetjmp
setjmp_syscall
savectx
qsetjmp
getcontext
_longjmp
siglongjmp
vSJi
strlcpy
strlcat
objc_msgSend
GGH.
objc/message.h
objc_msgSend_fpret
LdGH.
objc_msgSend_fp2ret
XLdGH.
objc_msgSend_stret
vGH.
objc_msgSendSuper
GM*H.
objc_msgSendSuper_stret
vM*H.
objc_getClass
GcC*
objc/runtime.h
objc_getMetaClass
objc_enumerationMutation
objc_read_weak
objc/objc-auto.h
objc_assign_weak
GGG*
objc_assign_ivar
GGGY
objc_assign_global
objc_assign_strongCast
objc_exception_extract
objc/objc-exception.h
objc_exception_try_enter
objc_exception_try_exit
objc_exception_match
objc_exception_throw
objc_sync_enter
objc/objc-sync.h
objc_sync_exit
__builtin_objc_memmove_collectable
NSLog
Foundation/NSObjCRuntime.h
NSLogv
atan2
math.h
atan2f
atan2l
labs
llabs
copysign
copysignf
copysignl
fabs
fabsf
fabsl
finite
finitef
finitel
__finite
__finitef
__finitel
fmod
fmodf
fmodl
frexp
frexpf
frexpl
ldexp
ldexpf
ldexpl
modf
modff
modfl
nanf
nanl
powf
powl
acos
acosf
acosl
acosh
acoshf
acoshl
asin
asinf
asinl
asinh
asinhf
asinhl
atan
atanf
atanl
atanh
atanhf
atanhl
cbrt
cbrtf
cbrtl
ceil
ceilf
ceill
cosf
cosl
cosh
coshf
coshl
erff
erfl
erfc
erfcf
erfcl
expf
expl
exp2
exp2f
exp2l
expm1
expm1f
expm1l
fdim
fdimf
fdiml
floor
floorf
floorl
fmaf
fmal
fmax
fmaxf
fmaxl
fmin
fminf
fminl
hypot
hypotf
hypotl
ilogb
ilogbf
ilogbl
lgamma
lgammaf
lgammal
llrint
llrintf
llrintl
llround
llroundf
llroundl
logf
logl
log10
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
lrint
lrintf
lrintl
lround
lroundf
lroundl
nearbyint
nearbyintf
nearbyintl
nextafter
nextafterf
nextafterl
nexttoward
nexttowardf
nexttowardl
remainder
remainderf
remainderl
remquo
remquof
remquol
rint
rintf
rintl
round
roundf
roundl
scalbln
scalblnf
scalblnl
scalbn
scalbnf
scalbnl
sinf
sinl
sinh
sinhf
sinhl
sqrt
sqrtf
sqrtl
tanf
tanl
tanh
tanhf
tanhl
tgamma
tgammaf
tgammal
trunc
truncf
truncl
cabs
complex.h
cabsf
cabsl
cacos
cacosf
cacosl
cacosh
cacoshf
cacoshl
carg
cargf
cargl
casin
casinf
casinl
casinh
casinhf
casinhl
catan
catanf
catanl
catanh
catanhf
catanhl
ccos
ccosf
ccosl
ccosh
ccoshf
ccoshl
cexp
cexpf
cexpl
cimag
cimagf
cimagl
conj
conjf
conjl
clog
clogf
clogl
cproj
cprojf
cprojl
cpow
cpowf
cpowl
creal
crealf
creall
csin
csinf
csinl
csinh
csinhf
csinhl
csqrt
csqrtf
csqrtl
ctan
ctanf
ctanl
ctanh
ctanhf
ctanhl
__sinpi
__sinpif
__cospi
__cospif
__tanpi
__tanpif
__exp10
__exp10f
_Block_object_assign
vv*vC*iC
Blocks.h
_Block_object_dispose
vvC*iC
__builtin_annotation
__builtin_assume
__builtin_addcb
UcUcCUcCUcCUc*
__builtin_addcs
UsUsCUsCUsCUs*
__builtin_addc
UiUiCUiCUiCUi*
__builtin_addcl
ULiULiCULiCULiCULi*
__builtin_addcll
ULLiULLiCULLiCULLiCULLi*
__builtin_subcb
__builtin_subcs
__builtin_subc
__builtin_subcl
__builtin_subcll
__builtin_add_overflow
__builtin_sub_overflow
__builtin_mul_overflow
__builtin_uadd_overflow
bUiCUiCUi*
__builtin_uaddl_overflow
bULiCULiCULi*
__builtin_uaddll_overflow
bULLiCULLiCULLi*
__builtin_usub_overflow
__builtin_usubl_overflow
__builtin_usubll_overflow
__builtin_umul_overflow
__builtin_umull_overflow
__builtin_umulll_overflow
__builtin_sadd_overflow
bSiCSiCSi*
__builtin_saddl_overflow
bSLiCSLiCSLi*
__builtin_saddll_overflow
bSLLiCSLLiCSLLi*
__builtin_ssub_overflow
__builtin_ssubl_overflow
__builtin_ssubll_overflow
__builtin_smul_overflow
__builtin_smull_overflow
__builtin_smulll_overflow
__builtin_addressof
v*v&
__builtin_operator_new
__builtin_operator_delete
__builtin_char_memchr
c*cC*iz
__builtin_dump_struct
ivC*v*
__builtin___get_unsafe_stack_start
__builtin___get_unsafe_stack_bottom
__builtin___get_unsafe_stack_top
__builtin___get_unsafe_stack_ptr
__builtin_nontemporal_store
__builtin_nontemporal_load
__builtin_coro_resume
__builtin_coro_destroy
__builtin_coro_done
__builtin_coro_promise
v*v*IiIb
__builtin_coro_size
__builtin_coro_frame
__builtin_coro_noop
__builtin_coro_free
__builtin_coro_id
v*Iiv*v*v*
__builtin_coro_alloc
__builtin_coro_begin
__builtin_coro_end
bv*Ib
__builtin_coro_suspend
__builtin_coro_param
bv*v*
__builtin_ptrauth_strip
v*v*i
__builtin_ptrauth_blend_discriminator
zv*i
__builtin_ptrauth_sign_constant
v*v*iv*
__builtin_ptrauth_sign_unauthenticated
__builtin_ptrauth_sign_generic_data
zv*v*
__builtin_ptrauth_auth_and_resign
v*v*iv*iv*
__builtin_ptrauth_auth
__builtin_ptrauth_string_discriminator
icC*
read_pipe
write_pipe
reserve_read_pipe
reserve_write_pipe
commit_write_pipe
commit_read_pipe
sub_group_reserve_read_pipe
sub_group_reserve_write_pipe
sub_group_commit_read_pipe
sub_group_commit_write_pipe
work_group_reserve_read_pipe
work_group_reserve_write_pipe
work_group_commit_read_pipe
work_group_commit_write_pipe
get_pipe_num_packets
get_pipe_max_packets
enqueue_kernel
get_kernel_work_group_size
get_kernel_preferred_work_group_size_multiple
get_kernel_max_sub_group_size_for_ndrange
get_kernel_sub_group_count_for_ndrange
to_global
to_local
to_private
__builtin_store_half
vdh*
__builtin_store_halff
vfh*
__builtin_load_half
dhC*
__builtin_load_halff
fhC*
__builtin_os_log_format_buffer_size
zcC*.
p:0:nut
__builtin_os_log_format
v*v*cC*.
p:0:nt
omp_is_initial_device
__xray_customevent
vcC*z
__xray_typedevent
vzcC*z
__builtin_ms_va_start
vc*&.
__builtin_ms_va_end
vc*&
__builtin_ms_va_copy
vc*&c*&
__metal_async_wg_copy
BVuuzBV
__metal_async_wg_strided_copy
BVuuzzBV
__metal_wait_wg_events
viBV*
__metal_atomic_compare_exchange_weak_explicit
buuuiii
__metal_atomic_exchange_explicit
uuuii
__metal_atomic_fence
viii
__metal_atomic_fetch_add_explicit
__metal_atomic_fetch_and_explicit
__metal_atomic_fetch_max_explicit
__metal_atomic_fetch_min_explicit
__metal_atomic_fetch_or_explicit
__metal_atomic_fetch_sub_explicit
__metal_atomic_fetch_xor_explicit
__metal_atomic_load_explicit
uuii
__metal_atomic_store_explicit
vuuii
__metal_calculate_clamped_lod_texture_2d_t
fBbBsE2fi
__metal_calculate_clamped_lod_texture_2d_array_t
fBBBsE2fi
__metal_calculate_clamped_lod_texture_3d_t
fBcBsE3fi
__metal_calculate_clamped_lod_texture_cube_t
fBdBsE3fi
__metal_calculate_clamped_lod_texture_cube_array_t
fBDBsE3fi
__metal_calculate_clamped_lod_depth_2d_t
fBgBsE2fi
__metal_calculate_clamped_lod_depth_2d_array_t
fBGBsE2fi
__metal_calculate_clamped_lod_depth_cube_t
fBhBsE3fi
__metal_calculate_clamped_lod_depth_cube_array_t
fBHBsE3fi
__metal_calculate_unclamped_lod_texture_2d_t
__metal_calculate_unclamped_lod_texture_2d_array_t
__metal_calculate_unclamped_lod_texture_3d_t
__metal_calculate_unclamped_lod_texture_cube_t
__metal_calculate_unclamped_lod_texture_cube_array_t
__metal_calculate_unclamped_lod_depth_2d_t
__metal_calculate_unclamped_lod_depth_2d_array_t
__metal_calculate_unclamped_lod_depth_cube_t
__metal_calculate_unclamped_lod_depth_cube_array_t
__metal_clamp
uuuui
tinc
__metal_mix
uuuu
__metal_saturate
__metal_sign
__metal_simdgroup_barrier
__metal_wg_barrier
__metal_convert
uuiu
__metal_convert_sat
__metal_dot
__metal_fence_texture_1d_t
__metal_fence_texture_1d_array_t
__metal_fence_texture_2d_t
__metal_fence_texture_2d_array_t
__metal_fence_texture_3d_t
__metal_fence_texture_cube_t
__metal_fence_texture_cube_array_t
__metal_fence_texture_buffer_1d_t
__metal_get_control_point
uBwUiu
tinU
__metal_get_num_patch_control_points
__metal_gather_compare_depth_2d_t
E4fBgBsE2ffbE2iib*
__metal_gather_compare_depth_2d_array_t
E4fBGBsE2fUifbE2iib*
__metal_gather_compare_depth_cube_t
E4fBhBsE3ffib*
__metal_gather_compare_depth_cube_array_t
E4fBHBsE3fUifib*
__metal_gather_texture_2d_t
uBbBsE2fbE2iiib*u
__metal_gather_texture_2d_array_t
uBBBsE2fUibE2iiib*u
__metal_gather_texture_cube_t
uBdBsE3fiib*u
__metal_gather_texture_cube_array_t
uBDBsE3fUiiib*u
__metal_gather_depth_2d_t
E4fBgBsE2fbE2iib*
__metal_gather_depth_2d_array_t
E4fBGBsE2fUibE2iib*
__metal_gather_depth_cube_t
E4fBhBsE3fib*
__metal_gather_depth_cube_array_t
E4fBHBsE3fUiib*
__metal_get_channel_data_type_texture_1d_t
__metal_get_channel_data_type_texture_1d_array_t
__metal_get_channel_data_type_texture_2d_t
__metal_get_channel_data_type_texture_2d_array_t
__metal_get_channel_data_type_texture_3d_t
__metal_get_channel_data_type_texture_2d_ms_t
__metal_get_channel_data_type_texture_2d_ms_array_t
__metal_get_channel_data_type_texture_buffer_1d_t
__metal_get_channel_data_type_depth_2d_t
__metal_get_channel_data_type_depth_2d_array_t
__metal_get_channel_data_type_depth_2d_ms_t
__metal_get_channel_data_type_depth_2d_ms_array_t
__metal_get_channel_order_texture_1d_t
__metal_get_channel_order_texture_1d_array_t
__metal_get_channel_order_texture_2d_t
__metal_get_channel_order_texture_2d_array_t
__metal_get_channel_order_texture_3d_t
__metal_get_channel_order_texture_2d_ms_t
__metal_get_channel_order_texture_2d_ms_array_t
__metal_get_channel_order_texture_buffer_1d_t
__metal_get_channel_order_depth_2d_t
__metal_get_channel_order_depth_2d_array_t
__metal_get_channel_order_depth_2d_ms_t
__metal_get_channel_order_depth_2d_ms_array_t
__metal_get_array_size_texture_1d_array_t
UiBA
__metal_get_array_size_texture_2d_array_t
UiBB
__metal_get_array_size_texture_cube_array_t
UiBD
__metal_get_array_size_texture_2d_ms_array_t
UiBE
__metal_get_array_size_depth_2d_array_t
UiBG
__metal_get_array_size_depth_cube_array_t
UiBH
__metal_get_array_size_depth_2d_ms_array_t
UiBI
__metal_get_depth_texture_3d_t
UiBcUi
__metal_get_null_texture_1d_t
__metal_get_null_texture_1d_array_t
__metal_get_null_texture_2d_t
__metal_get_null_texture_2d_array_t
__metal_get_null_texture_3d_t
__metal_get_null_texture_cube_t
__metal_get_null_texture_cube_array_t
__metal_get_null_texture_2d_ms_t
__metal_get_null_texture_2d_ms_array_t
__metal_get_null_texture_buffer_1d_t
__metal_get_null_depth_2d_t
__metal_get_null_depth_2d_array_t
__metal_get_null_depth_cube_t
__metal_get_null_depth_cube_array_t
__metal_get_null_depth_2d_ms_t
__metal_get_null_depth_2d_ms_array_t
__metal_get_height_texture_2d_t
UiBbUi
__metal_get_height_texture_2d_array_t
UiBBUi
__metal_get_height_texture_3d_t
__metal_get_height_texture_cube_t
UiBdUi
__metal_get_height_texture_cube_array_t
UiBDUi
__metal_get_height_texture_2d_ms_t
UiBe
__metal_get_height_texture_2d_ms_array_t
__metal_get_height_depth_2d_t
UiBgUi
__metal_get_height_depth_2d_array_t
UiBGUi
__metal_get_height_depth_cube_t
UiBhUi
__metal_get_height_depth_cube_array_t
UiBHUi
__metal_get_height_depth_2d_ms_t
UiBi
__metal_get_height_depth_2d_ms_array_t
__metal_get_num_mip_levels_texture_1d_t
UiBa
__metal_get_num_mip_levels_texture_1d_array_t
__metal_get_num_mip_levels_texture_2d_t
UiBb
__metal_get_num_mip_levels_texture_2d_array_t
__metal_get_num_mip_levels_texture_3d_t
UiBc
__metal_get_num_mip_levels_texture_cube_t
UiBd
__metal_get_num_mip_levels_texture_cube_array_t
__metal_get_num_mip_levels_depth_2d_t
UiBg
__metal_get_num_mip_levels_depth_2d_array_t
__metal_get_num_mip_levels_depth_cube_t
UiBh
__metal_get_num_mip_levels_depth_cube_array_t
__metal_get_num_samples_texture_2d_ms_t
__metal_get_num_samples_texture_2d_ms_array_t
__metal_get_num_samples_depth_2d_ms_t
__metal_get_num_samples_depth_2d_ms_array_t
__metal_get_width_texture_1d_t
UiBaUi
__metal_get_width_texture_1d_array_t
UiBAUi
__metal_get_width_texture_2d_t
__metal_get_width_texture_2d_array_t
__metal_get_width_texture_3d_t
__metal_get_width_texture_cube_t
__metal_get_width_texture_cube_array_t
__metal_get_width_texture_2d_ms_t
__metal_get_width_texture_2d_ms_array_t
__metal_get_width_texture_buffer_1d_t
UiBf
__metal_get_width_depth_2d_t
__metal_get_width_depth_2d_array_t
__metal_get_width_depth_cube_t
__metal_get_width_depth_cube_array_t
__metal_get_width_depth_2d_ms_t
__metal_get_width_depth_2d_ms_array_t
__metal_dfdx
__metal_dfdy
__metal_fwidth
__metal_get_num_samples
__metal_get_sample_position
E2fUii
__metal_discard_fragment
__metal_get_imageblock_width
UsBj
__metal_get_imageblock_height
__metal_get_imageblock_samples
__metal_get_imageblock_num_colors
UsBjE2Us
__metal_get_imageblock_color_coverage_mask
UsBjE2UsUs
__metal_imageblock_implicit_data
uBjUiu
__metal_imageblock_implicit_read
vBjUiE2UsUsu
__metal_imageblock_implicit_write
__metal_imageblock_implicit_mask_write
vBjE2UsUsu
__metal_imageblock_explicit_data
__metal_imageblock_explicit_mask_write
vuUsu
__metal_get_size_command_buffer
UiBt
__metal_clear_barrier_compute_command
vBtUi
__metal_concurrent_dispatch_threadgroups_compute_command
vBtUiE3UiE3Ui
__metal_concurrent_dispatch_threads_compute_command
__metal_copy_compute_command
vBtUiBtUi
__metal_reset_compute_command
__metal_set_barrier_compute_command
__metal_set_imageblock_size_compute_command
vBtUiE2Us
__metal_set_kernel_buffer_compute_command
vBtUiv*Ui
__metal_set_pipeline_state_compute_command
vBtUiBu
__metal_set_stage_in_region_compute_command
__metal_set_threadgroup_memory_length_compute_command
vBtUiUiUi
__metal_copy_render_command
__metal_draw_indexed_patches_render_command
vBtUiUiUiUiuuUiUiuUif
__metal_draw_indexed_primitives_render_command
vBtUiUiUiuUiUiUi
__metal_draw_patches_render_command
vBtUiUiUiUiuUiUiuUif
__metal_draw_primitives_render_command
vBtUiUiUiUiUiUi
__metal_reset_render_command
__metal_set_fragment_buffer_render_command
__metal_set_pipeline_state_render_command
vBtUiBU
__metal_set_vertex_buffer_render_command
__metal_os_log
vcC*_11cC*_11icC*_11a
inp:3:
__metal_vprintf
icC*_11a
__metal_abs
__metal_absdiff
__metal_addsat
__metal_clz
__metal_ctz
__metal_extract_bits
uuUiUi
__metal_hadd
__metal_insert_bits
uuuUiUi
__metal_mad24
__metal_madhi
__metal_madsat
__metal_max
__metal_max3
__metal_median3
__metal_min
__metal_min3
__metal_mul24
__metal_mulhi
__metal_popcount
__metal_reverse_bits
__metal_rhadd
__metal_rotate
__metal_subsat
__metal_interpolate_center_perspective
uBnu
__metal_interpolate_center_no_perspective
__metal_interpolate_centroid_perspective
__metal_interpolate_centroid_no_perspective
__metal_interpolate_offset_perspective
uBnE2fu
__metal_interpolate_offset_no_perspective
__metal_interpolate_sample_perspective
uBnUiu
__metal_interpolate_sample_no_perspective
__metal_is_function_constant_defined
bv*_11
__metal_is_null_texture_1d_t
__metal_is_null_texture_1d_array_t
__metal_is_null_texture_2d_t
__metal_is_null_texture_2d_array_t
__metal_is_null_texture_3d_t
__metal_is_null_texture_cube_t
__metal_is_null_texture_cube_array_t
__metal_is_null_texture_2d_ms_t
__metal_is_null_texture_2d_ms_array_t
__metal_is_null_texture_buffer_1d_t
__metal_is_null_depth_2d_t
__metal_is_null_depth_2d_array_t
__metal_is_null_depth_cube_t
__metal_is_null_depth_cube_array_t
__metal_is_null_depth_2d_ms_t
__metal_is_null_depth_2d_ms_array_t
__metal_is_uniform
__metal_acos
__metal_acosh
__metal_acospi
__metal_asin
__metal_asinh
__metal_asinpi
__metal_atan
__metal_atan2
uuui
__metal_atan2pi
__metal_atanh
__metal_atanpi
__metal_cbrt
__metal_ceil
__metal_cos
__metal_cosh
__metal_cospi
__metal_divide
__metal_erf
__metal_erfc
__metal_exp
__metal_exp10
__metal_exp2
__metal_expm1
__metal_fabs
__metal_floor
__metal_fma
__metal_fmax
__metal_fmax3
__metal_fmedian3
__metal_fmin
__metal_fmin3
__metal_fmod
__metal_fract
__metal_frexp
__metal_hypot
__metal_ilogb
__metal_ldexp
__metal_lgamma
__metal_lgamma_r
__metal_log
__metal_log10
__metal_log1p
__metal_log2
__metal_logb
__metal_mad
__metal_nextafter
__metal_pow
__metal_pown
__metal_powr
__metal_recip
__metal_remainder
__metal_remquo
__metal_rint
__metal_rootn
__metal_round
__metal_rsqrt
__metal_sin
__metal_sincos
__metal_sinh
__metal_sinpi
__metal_sqrt
__metal_tan
__metal_tanh
__metal_tanpi
__metal_tgamma
__metal_trunc
__metal_pack_unorm1x8
__metal_pack_snorm1x8
__metal_pack_unorm1x16
__metal_pack_snorm1x16
__metal_pack_unorm2x8
__metal_pack_snorm2x8
__metal_pack_unorm2x16
__metal_pack_snorm2x16
__metal_pack_unorm4x8
__metal_pack_snorm4x8
__metal_pack_unorm4x8_srgb
__metal_pack_unorm4x16
ULiE4f
__metal_pack_snorm4x16
__metal_pack_unorm_rgb565
__metal_pack_unorm_rgb10a2
__metal_pack_unorm_rg11b10f
__metal_pack_unorm_rgb9e5
__metal_quad_active_threads_mask
__metal_quad_all
__metal_quad_and
__metal_quad_any
__metal_quad_ballot
__metal_quad_broadcast
uuUs
__metal_quad_broadcast_first
__metal_quad_is_first
__metal_quad_is_helper_thread
__metal_quad_max
__metal_quad_min
__metal_quad_or
__metal_quad_prefix_exclusive_product
__metal_quad_prefix_exclusive_sum
__metal_quad_prefix_inclusive_product
__metal_quad_prefix_inclusive_sum
__metal_quad_product
__metal_quad_shuffle
__metal_quad_shuffle_down
__metal_quad_shuffle_rotate_down
__metal_quad_shuffle_rotate_up
__metal_quad_shuffle_up
__metal_quad_shuffle_xor
__metal_quad_sum
__metal_quad_vote_all
__metal_quad_vote_any
__metal_quad_xor
__metal_read_texture_1d_t
uBauuib*u
__metal_read_texture_1d_array_t
uBAuuuib*u
__metal_read_texture_2d_t
uBbuuib*u
__metal_read_texture_2d_array_t
uBBuuuib*u
__metal_read_texture_3d_t
uBcuuib*u
__metal_read_texture_cube_t
uBduuuib*u
__metal_read_texture_cube_array_t
uBDuuuuib*u
__metal_read_texture_2d_ms_t
uBeuuib*u
__metal_read_texture_2d_ms_array_t
uBEuuuib*u
__metal_read_texture_buffer_1d_t
uBfuib*u
__metal_read_depth_2d_t
fBguuib*
__metal_read_depth_2d_array_t
fBGuuuib*
__metal_read_depth_cube_t
fBhuuuib*
__metal_read_depth_cube_array_t
fBHuuuuib*
__metal_read_depth_2d_ms_t
fBiuuib*
__metal_read_depth_2d_ms_array_t
fBIuuuib*
__metal_all
__metal_any
__metal_select
__metal_sample_compare_depth_2d_t
fBgBsE2ffbE2ibffib*
__metal_sample_compare_depth_2d_array_t
fBGBsE2fUifbE2ibffib*
__metal_sample_compare_depth_cube_t
fBhBsE3ffbffib*
__metal_sample_compare_depth_cube_array_t
fBHBsE3fUifbffib*
__metal_sample_compare_depth_2d_t_grad
fBgBsE2ffE2fE2ffbE2iib*
__metal_sample_compare_depth_2d_array_t_grad
fBGBsE2fUifE2fE2ffbE2iib*
__metal_sample_compare_depth_cube_t_grad
fBhBsE3ffE3fE3ffib*
__metal_sample_compare_depth_cube_array_t_grad
fBHBsE3fUifE3fE3ffib*
__metal_sample_texture_1d_t
uBaBsfbibffib*u
__metal_sample_texture_1d_array_t
uBABsfUibibffib*u
__metal_sample_texture_2d_t
uBbBsE2fbE2ibffib*u
__metal_sample_texture_2d_array_t
uBBBsE2fUibE2ibffib*u
__metal_sample_texture_3d_t
uBcBsE3fbE3ibffib*u
__metal_sample_texture_cube_t
uBdBsE3fbffib*u
__metal_sample_texture_cube_array_t
uBDBsE3fUibffib*u
__metal_sample_depth_2d_t
fBgBsE2fbE2ibffib*
__metal_sample_depth_2d_array_t
fBGBsE2fUibE2ibffib*
__metal_sample_depth_cube_t
fBhBsE3fbffib*
__metal_sample_depth_cube_array_t
fBHBsE3fUibffib*
__metal_sample_texture_2d_t_grad
uBbBsE2fE2fE2ffbE2iib*u
__metal_sample_texture_2d_array_t_grad
uBBBsE2fUiE2fE2ffbE2iib*u
__metal_sample_texture_3d_t_grad
uBcBsE3fE3fE3ffbE3iib*u
__metal_sample_texture_cube_t_grad
uBdBsE3fE3fE3ffib*u
__metal_sample_texture_cube_array_t_grad
uBDBsE3fUiE3fE3ffib*u
__metal_sample_depth_2d_t_grad
fBgBsE2fE2fE2ffbE2iib*
__metal_sample_depth_2d_array_t_grad
fBGBsE2fUiE2fE2ffbE2iib*
__metal_sample_depth_cube_t_grad
fBhBsE3fE3fE3ffib*
__metal_sample_depth_cube_array_t_grad
fBHBsE3fUiE3fE3ffib*
__metal_shuffle
__metal_shuffle2
__metal_dummy_0
__metal_dummy_1
__metal_dummy_2
__metal_dummy_3
__metal_dummy_4
__metal_simdgroup_matrix_8x8_init_diag
__metal_simdgroup_matrix_8x8_init_filled
__metal_simdgroup_matrix_8x8_load
uuLUiE2LUib
__metal_simdgroup_matrix_8x8_multiply_accumulate
uuuuu
__metal_simdgroup_matrix_8x8_store
vuuLUiE2LUib
__metal_simd_active_threads_mask
__metal_simd_all
__metal_simd_and
__metal_simd_any
__metal_simd_ballot
__metal_simd_broadcast
__metal_simd_broadcast_first
__metal_simd_is_first
__metal_simd_is_helper_thread
__metal_simd_max
__metal_simd_min
__metal_simd_or
__metal_simd_prefix_exclusive_product
__metal_simd_prefix_exclusive_sum
__metal_simd_prefix_inclusive_product
__metal_simd_prefix_inclusive_sum
__metal_simd_product
__metal_simd_shuffle
__metal_simd_shuffle_down
__metal_simd_shuffle_rotate_down
__metal_simd_shuffle_rotate_up
__metal_simd_shuffle_up
__metal_simd_shuffle_xor
__metal_simd_sum
__metal_simd_vote_all
__metal_simd_vote_any
__metal_simd_xor
__metal_vload
uzuu
__metal_vloada_half
__metal_vload_half
__metal_vstore
vuzu
__metal_vstorea_half
vuzui
__metal_vstore_half
__metal_get_unique_identifier_texture_1d_t
ULiBa
__metal_get_unique_identifier_texture_1d_array_t
ULiBA
__metal_get_unique_identifier_texture_2d_t
ULiBb
__metal_get_unique_identifier_texture_2d_array_t
ULiBB
__metal_get_unique_identifier_texture_3d_t
ULiBc
__metal_get_unique_identifier_texture_cube_t
ULiBd
__metal_get_unique_identifier_texture_cube_array_t
ULiBD
__metal_get_unique_identifier_texture_2d_ms_t
ULiBe
__metal_get_unique_identifier_texture_2d_ms_array_t
ULiBE
__metal_get_unique_identifier_texture_buffer_1d_t
ULiBf
__metal_get_unique_identifier_depth_2d_t
ULiBg
__metal_get_unique_identifier_depth_2d_array_t
ULiBG
__metal_get_unique_identifier_depth_cube_t
ULiBh
__metal_get_unique_identifier_depth_cube_array_t
ULiBH
__metal_get_unique_identifier_depth_2d_ms_t
ULiBi
__metal_get_unique_identifier_depth_2d_ms_array_t
ULiBI
__metal_get_unique_identifier_sampler_t
ULiBs
__metal_get_unique_identifier_compute_pipeline_state_t
ULiBu
__metal_get_unique_identifier_render_pipeline_state_t
ULiBU
__metal_get_unique_identifier_visible_function_table_t
ULiBx
__metal_get_unique_identifier_intersection_function_table_t
ULiBX
__metal_get_unique_identifier_instance_acceleration_structure_t
ULiBz
__metal_get_unique_identifier_primitive_acceleration_structure_t
ULiBZ
__metal_unpack_unorm1x8
uUcu
__metal_unpack_snorm1x8
__metal_unpack_unorm1x16
fUsf
__metal_unpack_snorm1x16
__metal_unpack_unorm2x8
uUsu
__metal_unpack_snorm2x8
__metal_unpack_unorm2x16
uUiu
__metal_unpack_snorm2x16
__metal_unpack_unorm4x8
__metal_unpack_snorm4x8
__metal_unpack_unorm4x8_srgb
__metal_unpack_unorm4x16
E4fULiE4f
__metal_unpack_snorm4x16
__metal_unpack_unorm_rgb565
__metal_unpack_unorm_rgb10a2
__metal_unpack_unorm_rg11b10f
__metal_unpack_unorm_rgb9e5
__metal_get_local_id
__metal_get_local_size
__metal_get_global_id
__metal_get_global_offset
__metal_get_global_size
__metal_get_group_id
__metal_get_num_groups
__metal_get_work_dim
__metal_write_imageblock_slice_to_texture_1d_t
vBaubE2Usuubii
__metal_write_imageblock_slice_to_texture_1d_array_t
vBAubE2Usuuubii
__metal_write_imageblock_slice_to_texture_2d_t
vBbubE2Usuubii
__metal_write_imageblock_slice_to_texture_2d_array_t
vBBubE2Usuuubii
__metal_write_imageblock_slice_to_texture_3d_t
vBcubE2Usuubii
__metal_write_imageblock_slice_to_texture_cube_t
vBdubE2Usuuubii
__metal_write_imageblock_slice_to_texture_cube_array_t
vBDubE2Usuuuubii
__metal_write_texture_1d_t
vBauuuii
__metal_write_texture_1d_array_t
vBAuuuuii
__metal_write_texture_2d_t
vBbuuuii
__metal_write_texture_2d_array_t
vBBuuuuii
__metal_write_texture_3d_t
vBcuuuii
__metal_write_texture_cube_t
vBduuuuii
__metal_write_texture_cube_array_t
vBDuuuuuii
__metal_write_texture_buffer_1d_t
vBfuuii
__metal_write_depth_2d_t
vBgufui
__metal_write_depth_2d_array_t
vBGuufui
__metal_map_physical_to_screen_coordinates
uuvC*_11Ui
__metal_map_screen_to_physical_coordinates
__metal_struct_has_render_target
bUi.
__metal_intersect
vUIiE3fE3fffuUiBXv*zUiUiUiUiUiUibbUi*f*Ui*Ui*Ui*E2f*b*
__metal_get_null_instance_acceleration_structure
__metal_is_null_instance_acceleration_structure
__metal_get_null_primitive_acceleration_structure
__metal_is_null_primitive_acceleration_structure
__metal_get_size_intersection_function_table
UiBX
__metal_get_null_intersection_function_table
__metal_is_null_intersection_function_table
__metal_get_function_pointer_visible_function_table
v*BxUi
__metal_get_size_visible_function_table
UiBx
__metal_get_null_visible_function_table
__metal_is_null_visible_function_table
sm_20
sm_21
sm_30
sm_32
sm_35
sm_37
sm_50
sm_52
sm_53
sm_60
sm_61
sm_62
sm_70
sm_72
diagnostic state at 
    
<unknown 
ignored
remark
fatal
 default
 pragma
 no-error
 no-fatal
 overruled
: state 
File 
 <FileID 
 parent 
 has_local_transitions
'_Nonnull'
'nonnull'
'_Nullable'
'nullable'
'_Null_unspecified'
'null_unspecified'
<can't format argument>
(null)
NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained
%0 attribute cannot be applied to types
cannot open file '%0': %1
only special member functions may be defaulted
only functions can have deleted definitions
enumeration cannot be a template
expected %0
expected %1 after %0
method name referenced in property setter attribute must end with ':'
expected %0 or %1
expected namespace name
expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute|for %select{language|source container}1 name in 'external_source_symbol' attribute}0
file '%0' modified since it was first processed
compile with '-ffixed-point' to enable fixed point types
integer literal is too large to be represented in any %select{signed |}0integer type
character literal with user-defined suffix cannot be used here
numeric literal with user-defined suffix cannot be used here
invalid storage class specifier in function declarator
string literal with user-defined suffix cannot be used here
'double' is not supported in Metal
'long long' is not supported in Metal
module '%0' is needed but has not been provided, and implicit use of module files is disabled
build a shadowed submodule '%0'
cyclic dependency in module '%0': %1
no handler registered for module format '%0'
%select{|umbrella }0header '%1' not found
could not build module '%0'
module '%0' not found
error in loading module '%0' from prebuilt module path
import of shadowed module '%0'
module '%0' %select{is incompatible with|requires}1 feature '%2'
[rewriter] %0
nullability specifier %0 conflicts with existing specifier %1
directive '#pragma omp %0' cannot contain more than one '%1' clause%select{| with '%3' name modifier| with 'source' dependence}2
'%0' is not supported in OpenCL C++
option '%0' cannot be specified on this target
option '%0' cannot be specified with '%1'
option '%0' cannot be specified without '%1'
redefinition of parameter %0
%0 only allowed in __except block or filter expression
%0 only allowed in __except filter expression
%0 only allowed in __finally block
expected '__except' or '__finally' block
unknown target ABI '%0'
unknown target CPU '%0'
unknown FP unit '%0'
unknown target triple '%0', please use -triple or -arch
ABI '%0' is not supported on CPU '%1'
ABI '%0' is not supported for '%1'
micromips is not supported for target CPU '%0'
execute only is not supported for the %0 sub-architecture
the '%0' unit is not supported with this instruction set
the %0 sub-architecture does not support unaligned accesses
this value is too large for this fixed point type
unable to make temporary file: %0
unable to rename temporary '%0' to output file '%1': '%2'
%0 byte order mark detected in '%1', but encoding is not supported
'long long' is an extension when C99 mode is not enabled
'diagnose_if' is a clang extension
'enable_if' is a clang extension
'long long' is a C++11 extension
integer literal is too large to be represented in a signed integer type, interpreting as unsigned
integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
variadic templates are a C++11 extension
too many errors emitted, stopping now
also found
%1 %0 is hidden by a non-type declaration of %0 here
declared here
previous case defined here
forward declaration of %0
subexpression not valid in a constant expression
to match this %0
one possibility
#pragma entered here
previous declaration is here
previous definition is here
previous implicit declaration is here
previous use is here
definition of %0 is not complete until the closing '}'
valid target CPU values are: %0
could not acquire lock file for module '%0': %1
timed out waiting to acquire lock file for module '%0'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC
conflicting nullability specifier on parameter types, %0 conflicts with existing specifier %1
conflicting nullability specifier on return types, %0 conflicts with existing specifier %1
'long long' is incompatible with C++98
variadic templates are incompatible with C++98
redeclaration of method parameter %0
redefinition of method parameter %0
duplicate nullability specifier %0
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will %select{have type 'long long'|be ill-formed}0 in C99 onwards
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C++98; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
invalid input for analyzer-config option '%0', that expects %1 value
analyzer-config option '%0' should contain only one '='
analyzer-config option '%0' has a key but no value
unknown analyzer-config '%0'
-fobjc-arc is not supported on platforms using the legacy runtime
-fobjc-arc is not supported on versions of OS X prior to 10.6
Architecture '%0' does not support '%1' execution mode
CPU '%0' does not support '%1' execution mode
'%0' not supported, please use -iquote instead
cannot deduce implicit triple value for -Xopenmp-target, specify triple using -Xopenmp-target=<triple>
invalid argument '%0' not allowed with '%1'
invalid argument '%0' only allowed with '%1'
-fembed-bitcode is not supported on versions of iOS prior to 6.0
cannot read configuration file '%0'
unable to open CC_PRINT_OPTIONS file: %0
the clang compiler does not support '%0'
the clang compiler does not support '%0' for C++ on Darwin/i386
the clang compiler does not support '%0', %1
%0 command failed with exit code %1 (use -v to see invocation)
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
compilation database '%0' could not be opened: %1
configuration file '%0' does not exist
configuration file '%0' cannot be found
conflicting deployment targets, both '%0' and '%1' are present in environment
Unsupported CUDA gpu architecture: %0
unsupported architecture '%0' for host compilation.
GPU arch %0 is supported by CUDA versions between %1 and %2 (inclusive), but installation at %3 is %4.  Use --cuda-path to specify a different CUDA install, pass a different GPU arch with --cuda-gpu-arch, or pass --no-cuda-version-check.
defsym must be of the form: sym=value: %0
Value is not an integer: %0
no more than one option '--config' is allowed
-emit-llvm cannot be used when linking
The option -fopenmp-targets must be used in conjunction with a -fopenmp option compatible with offloading, please use -fopenmp=libomp or -fopenmp=libiomp5.
failing because %select{environment variable 'FORCE_CLANG_DIAGNOSTICS_CRASH' is set|'-gen-reproducer' is used}0
GNUstep Objective-C runtime version %0 incompatible with target binary format
invalid Xarch argument: '%0', cannot change driver behavior inside Xarch argument
invalid Xarch argument: '%0', options requiring arguments are unsupported
invalid -Xopenmp-target argument: '%0', options requiring arguments are unsupported
invalid arch name '%0'
invalid argument '%0' to -fdebug-prefix-map
invalid CoreFoundation Runtime ABI '%0'; must be one of 'objc', 'standalone', 'swift', 'swift-5.0', 'swift-4.2', 'swift-4.1'
invalid Darwin version number: %0
invalid output type '%0' for use with gcc tool
-mhvx-length is not supported without a -mhvx/-mhvx= flag
invalid integral value '%1' in '%0'
invalid deployment target for -stdlib=libc++ (requires %0 or later)
invalid linker name in argument '%0'
invalid float ABI '%0'
invalid thread pointer reading mode '%0'
OpenMP target is invalid: '%0'
cannot use '%0' output with multiple -arch options
cannot use '%0' output with native archs
invalid PGO instrumentor in argument '%0'
invalid option '%0' not of the form <from-file>;<to-file>
invalid arch name '%0', %1
invalid arch name '%0', %1 '%2'
invalid runtime library name in argument '%0'
invalid library name in argument '%0'
invalid thread model '%0' in '%1' for this target
invalid value '%1' in '%0'
invalid version number in '%0'
LTO requires -fuse-ld=lld
malformed sanitizer blacklist: '%0'
option '-MG' requires '-M' or '-MM'
missing argument to '%0'
argument to '%0' is missing (expected %1 value%s1)
Mixed Cuda and HIP compilation is not supported.
option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
option '--config' is not allowed inside configuration file
'%0': unable to use AST files with this tool
cannot find CUDA installation.  Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.
cannot find libdevice for %0. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.
no input files
'%0': unable to pass option '%1' to linker
'%0': unable to pass LLVM bit-code files to linker
'%0': unable to use module files with this tool
[no]neon is not accepted as modifier, please use [no]simd instead
no such file or directory: '%0'
The provided host compiler IR file '%0' is required to generate code for OpenMP target regions but cannot be found.
The target '%0' is not a supported OpenMP host target.
%0 in '%1'
cannot specify '%0%1' when compiling multiple source files
cannot specify -o when generating multiple output files
incorrect format for -preamble-bytes=N,END
target '%0' does not support native pointer authentication
ROPI is not compatible with c++
embedded and GOT-based position independence are incompatible
unsupported '-target-variant' value '%0'; use 'ios-macabi' instead
-ftrivial-auto-var-init=zero hasn't been enabled. Enable it at your own peril for benchmarking purpose only with -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
unable to remove file: %0
unknown argument: '%0'
unknown argument '%0', did you mean '%1'?
unknown '-mindirect-jump=' option '%0'
language not recognized: '%0'
unknown or ill-formed Objective-C runtime '%0'
-E or -x required when input is from standard input
use /Tc or /Tp to set input type for standard input
%0 is not supported with -fembed-bitcode
'-mindirect-jump=%0' is unsupported with the '%1' architecture
unsupported value '%0' for -linker option
position-independent code requires 
-mabicalls
unsupported option '%0'
unsupported option '%0' for target '%1'
unsupported option '%0', did you mean '%1'?
unsupported argument '%1' to option '%0'
unsupported runtime library '%0' for platform '%1'
unsupported use of internal gcc -Z option '%0'
there is no external assembler that can be used on this platform
-fobjc-weak is not supported on the current deployment target
-fobjc-weak is not supported in Objective-C garbage collection
the target architecture '%0' is not supported by the target '%1'
-ftest-module-file-extension argument '%0' is not of the required form 'blockname:major:minor:hashed:user info'
AddressSanitizer doesn't support linking with debug runtime libraries yet
diagnostic msg: %0
was searched for in the directory: %0
The last /TC or /TP option takes precedence over earlier instances
use '%0'%select{| or '%3'|, '%3', or '%4'|, '%3', '%4', or '%5'}2 for '%1' standard
-verify prefixes must start with a letter and contain only alphanumeric characters, hyphens, and underscores
Use '--' to treat subsequent arguments as filenames
-O4 is equivalent to -O3
ignoring -fapple-kext which is valid for C++ and Objective-C++ only
cannot compress debug sections (zlib not installed)
unknown platform, assuming -mfloat-abi=%0
SDK settings were ignored as 'SDKSettings.json' could not be parsed
argument '%0' is deprecated, use '%1' instead
libstdc++ is deprecated; move to libc++%select{ with a minimum deployment target of %1|}0
argument '%0' requires profile-guided optimization information
implicitly disabling vptr sanitizer because rtti wasn't enabled
joined argument expects additional value: '%0'
-fexperimental-isel support for the '%0' architecture is incomplete
-fexperimental-isel support is incomplete for this architecture at the current optimization level
option '-ffine-grained-bitfield-accesses' cannot be enabled together with a sanitizer; flag ignored
%0: '%1' input unused%select{ when '%3' is present|}2
%0: '%1' input unused in cpp mode
falling back to %0
The '%0' architecture does not support -moutline; flag ignored
unable to find a Visual Studio installation; try running Clang from a developer command prompt
the object size sanitizer has no effect at -O0, but is explicitly enabled: %0
The OpenMP offloading target '%0' is similar to target '%1' already specified - will be ignored.
No library '%0' found in the default clang lib directory or in LIBRARY_PATH. Expect degraded performance due to no inlining of runtime functions on target devices.
optimization level '%0' is not supported; using '%1%2' instead
overriding '%0' option with '%1'
precompiled header '%0' was ignored because '%1' is not first '-include'
%0: previously preprocessed input%select{ unused when '%2' is present|}1
option '%0' was ignored by the PS4 toolchain, using '-fPIC'
environment variable SCE_ORBIS_SDK_DIR is set, but points to invalid or nonexistent directory '%0'
treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
unable to find %0 directory, expected to be in '%1'
unknown argument ignored in clang-cl: '%0'
unknown argument ignored in clang-cl '%0' (did you mean '%1'?)
debug information option '%0' is not supported for target '%1'
ignoring '-mgpopt' option as it cannot be used with %select{|the implicit usage of }0-mabicalls
ignoring '-mlong-calls' option as it is not currently supported with %select{|the implicit usage of }0-mabicalls
optimization flag '%0' is not supported for target '%1'
ignoring '%0' option as it cannot be used with %select{implicit usage of|}1 -mabicalls and the N64 ABI
argument unused during compilation: '%0'
auto-vectorization requires HVX, use -mhvx to enable it
support for '/Yc' with more than one source file not implemented yet; flag ignored
support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored
support for '%0' without a filename not implemented yet; flag ignored
support for '%0' without a corresponding /FI flag not implemented yet; flag ignored
the flag '%0' has been deprecated and will be ignored
optimization flag '%0' is not supported
ignoring invalid -ftabstop value '%0', using default value %1
using sysroot for '%0' but targeting '%1'
invalid iOS deployment version '%0', iOS 10 is the maximum deployment target for 32-bit targets
no such sysroot directory: '%0'
'/U%0' treated as the '/U' option
ignoring '-mabs=2008' option because the '%0' architecture does not support it
ignoring '-mabs=legacy' option because the '%0' architecture does not support it
ignoring '-mcompact-branches=' option because the '%0' architecture does not support it
ignoring '-mnan=2008' option because the '%0' architecture does not support it
ignoring '-mnan=legacy' option because the '%0' architecture does not support it
action %0 not compiled in
cannot link module '%0': %1
-dependency-file requires at least one -MT or -MQ option
error in backend: %0
error opening '%0': %1
error reading '%0'
error reading stdin: %0
expected a clang compiler command
unable to handle compilation, expected exactly one compiler job in '%0'
invalid value '%1' in '%0'; alignment must be a power of 2
cannot locate code-completion file %0
invalid exception model '%0' for target '%1'
unable to find plugin '%0'
invalid wchar_t type '%0'; must be one of 'char', 'short', 'int'
no suitable precompiled header file found in directory '%0'
PTH file '%0' does not designate an original source header file for -include-pth
%select{function|fragment function|bounding box intersection function|triangle intersection function|kernel function|post-tessellation vertex function|vertex function|visible function|function}0 %1 calls recursive code
could not remap from missing file '%0'
could not remap file '%0' to the contents of file '%1'
unable to change standard output to binary
%select{function|fragment function|bounding box intersection function|triangle intersection function|kernel function|post-tessellation vertex function|vertex function|visible function|function}0 %1 uses too many samplers (%2)
unable to create target: '%0'
unable to interface with target machine
unable to load PCH file
unable to load plugin '%0': '%1'
unable to open output file '%0': '%1'
%select{function|fragment function|bounding box intersection function|triangle intersection function|kernel function|post-tessellation vertex function|vertex function|visible function|function}0 %1 uses unsupported builtin functions
inline asm is used in the module with -fno-gnu-inline-asm
invalid virtual filesystem overlay file '%0'
no valid metal language standard for triple '%0'
no module named '%0' declared in module map file '%1'
no module name provided; specify one with -fmodule-name=
virtual filesystem overlay file '%0' not found
module compilation requires '-fmodules'
cannot create includes file for module %0: %1
module interface compilation requires '-fmodules-ts'
module map file '%0' not found
file '%0' specified by '-fmodules-embed-file=' not found
-fapinotes was provided without -fmodules-cache-path=<directory>
no submodule named %0 in module '%1'
no submodule named %0 in module '%1'; did you mean '%2'?
must specify system root with -isysroot when building a relocatable PCH file
test module file extension '%0' has different version (%1.%2) than expected (%3.%4)
no analyzer checkers are associated with '%0'
'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2
invalid expected %0: %1
%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0
invalid range following '-' in expected %0
cannot find end ('}}') of expected %0
file '%0' could not be located in expected %1
missing or invalid line number following '@' in expected %0
cannot find start of regex ('{{') in %0
cannot find start ('{{') of expected %0
no expected directives found: consider use of 'expected-no-diagnostics'
could not determine the original source location for %0:%1:%2
instantiated into assembly here
recursive function %0 called
function %0 using constant samplers called
function %0 is not allowed within a %select{function|fragment function|bounding box intersection function|triangle intersection function|kernel function|post-tessellation vertex function|vertex function|visible function|function}1
FIX-IT applied suggested code changes
FIX-IT unable to apply suggested code changes
FIX-IT unable to apply suggested code changes in a macro
FIX-IT detected an error it cannot fix
current API version is '%0', but plugin was compiled with version '%1'
macro was %select{defined|#undef'd}0 here
module imported here
module defined here
use -analyzer-disable-all-checks to disable all static analyzer checkers
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop. If the arrays will always be independent specify '#pragma clang loop vectorize(assume_safety)' before the loop or provide the '__restrict__' qualifier with the independent array arguments. Erroneous results will occur if these options are incorrectly applied!
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'.
producing index data for module file '%0'
building module '%0' as '%1'
finished building module '%0'
-fsanitize-address-field-padding applied to %0
-fsanitize-address-field-padding ignored for %0 because it %select{is not C++|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a blacklisted file|is blacklisted}1
unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)
unable to open CC_PRINT_HEADERS file: %0 (using stderr)
stack frame size of %0 bytes in %q1
macro '%0' contains embedded newline; text after the newline is ignored
overriding the module target triple with %0
unable to open file %0 for serializing diagnostics (%1)
unable to merge a subprocess's serialized diagnostics
unable to open statistics output file '%0': '%1'
FIX-IT detected errors it could not fix; no output will be generated
checker plugin '%0' is not compatible with this version of the analyzer
'-std=%0' is equivalent to '-std=macos-metal1.1'
missing submodule '%0'
%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module
module file %0 cannot be loaded due to a configuration mismatch with the current compilation
no submodule named %0 in module '%1'; using top level '%2'
OpenCL version %0 does not support the option '%1'
include path for stdlibc++ headers not found; pass '-stdlib=libc++' on the command line to use the libc++ standard library instead
unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2
unknown %0 warning specifier: '%1'
file '%0' has been modified since the AST file '%1' was built
file '%0' has been modified since the module file '%1' was built
input is not a PCH file: '%0'
file '%0' has been modified since the precompiled header '%1' was built
file '%0' from the precompiled header has been overridden
malformed or corrupted AST file: '%0'
malformed block record in PCH file: '%0'
unable to read PCH file %0: '%1'
module '%0' imported by AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)
module '%0' in AST file '%1' (imported by AST file '%2') is not defined in any loaded module map file; maybe you need to load '%3'?
module '%0' was built in directory '%1' but now resides in directory '%2'
module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built
module '%0' is defined in both '%1' and '%2'
file '%1' is not a valid precompiled %select{PCH|module|AST}0 file
%select{PCH|module|AST}0 file '%1' not found%select{|: %3}2
AST file '%0' was not built as a module
%select{PCH|module|AST}0 file '%1' is out of date and needs to be rebuilt%select{|: %3}2
cannot emit module %0: %select{size|mtime}1 must be explicitly specified for missing header file "%2"
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%4 base %plural{1:class|:classes}4|%4 virtual base %plural{1:class|:classes}4|%ordinal4 base class with type %5|%ordinal4 %select{non-virtual|virtual}5 base class %6|%ordinal4 base class %5 with %select{public|protected|private|no}6 access specifier}3
%q0 has different definitions in different modules; %select{definition in module '%2' is here|defined here}1
instantiation of %q0 is different in different modules
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{enum that is %select{not scoped|scoped}4|enum scoped with keyword %select{struct|class}4|enum %select{without|with}4 specified type|enum with specified type %4|enum with %4 element%s4|%ordinal4 element has name %5|%ordinal4 element %5 %select{has|does not have}6 an initilizer|%ordinal4 element %5 has an initializer|}3
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{return type is %4|%ordinal4 parameter with name %5|%ordinal4 parameter with type %5%select{| decayed from %7}6|%ordinal4 parameter with%select{out|}5 a default argument|%ordinal4 parameter with a default argument|function body}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{static assert with condition|static assert with message|static assert with %select{|no }4message|field %4|field %4 with type %5|%select{non-|}5bitfield %4|bitfield %4 with one width expression|%select{non-|}5mutable field %4|field %4 with %select{no|an}5 initalizer|field %4 with an initializer|%select{method %5|constructor|destructor}4|%select{method %5|constructor|destructor}4 is %select{not deleted|deleted}6|%select{method %5|constructor|destructor}4 is %select{not defaulted|defaulted}6|%select{method %5|constructor|destructor}4 is %select{|pure }6%select{not virtual|virtual}7|%select{method %5|constructor|destructor}4 is %select{not static|static}6|%select{method %5|constructor|destructor}4 is %select{not volatile|volatile}6|%select{method %5|constructor|destructor}4 is %select{not const|const}6|%select{method %5|constructor|destructor}4 is %select{not inline|inline}6|%select{method %5|constructor|destructor}4 that has %6 parameter%s6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter of type %7%select{| decayed from %9}8|%select{method %5|constructor|destructor}4 with %ordinal6 parameter named %7|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with%select{out|}7 a default argument|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with a default argument|%select{method %5|constructor|destructor}4 with %select{no |}6template arguments|%select{method %5|constructor|destructor}4 with %6 template argument%s6|%select{method %5|constructor|destructor}4 with %6 for %ordinal7 template argument|%select{method %5|constructor|destructor}4 with %select{no body|body}6|%select{method %5|constructor|destructor}4 with body|%select{typedef|type alias}4 name %5|%select{typedef|type alias}4 %5 with underlying type %6|data member with name %4|data member %4 with type %5|data member %4 with%select{out|}5 an initializer|data member %4 with an initializer|data member %4 %select{is constexpr|is not constexpr}5|friend %select{class|function}4|friend %4|friend function %4|function template %4 with %5 template parameter%s5|function template %4 with %ordinal5 template parameter being a %select{type|non-type|template}6 template parameter|function template %4 with %ordinal5 template parameter %select{with no name|named %7}6|function template %4 with %ordinal5 template parameter with %select{no |}6default argument|function template %4 with %ordinal5 template parameter with default argument %6|function template %4 with %ordinal5 template parameter with one type|function template %4 with %ordinal5 template parameter %select{not |}6being a template parameter pack|}3
%q0 %select{with definition in module '%2'|defined here}1 has different definitions in different modules; first difference is this %select{||||static assert|field|method|type alias|typedef|data member|friend declaration|unexpected decl}3
%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{unnamed template parameter|template parameter %4|template parameter with %select{no |}4default argument|template parameter with default argument}3
%0 is currently enabled, but was not in the PCH file
PCH file built from a different branch (%0) than the compiler (%1)
%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2
%0 differs in PCH file vs. current file
definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
PCH was compiled with module cache path '%0', but the path is currently '%1'
%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0
%select{AST file was|current translation unit is}0 compiled with the target feature '%1' but the %select{current translation unit is|AST file was}0 not
PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0
PCH file uses a newer PCH format that cannot be read
PCH file uses an older PCH format that is no longer supported
PCH file contains compiler errors
in first definition, possible difference is here
consider adding '%0' to the header search path
after modifying system headers, please delete the module cache at '%0'
imported by %select{|module '%2' in }1'%0'
but in '%0' found %select{%2 base %plural{1:class|:classes}2|%2 virtual base %plural{1:class|:classes}2|%ordinal2 base class with different type %3|%ordinal2 %select{non-virtual|virtual}3 base class %4|%ordinal2 base class %3 with %select{public|protected|private|no}4 access specifier}1
definition in module '%0' is here
but in '%0' found %select{enum that is %select{not scoped|scoped}2|enum scoped with keyword %select{struct|class}2|enum %select{without|with}2 specified type|enum with specified type %2|enum with %2 element%s2|%ordinal2 element has name %3|%ordinal2 element %3 %select{has|does not have}4 an initializer|%ordinal2 element %3 has different initializer|}1
but in '%0' found %select{different return type %2|%ordinal2 parameter with name %3|%ordinal2 parameter with type %3%select{| decayed from %5}4|%ordinal2 parameter with%select{out|}3 a default argument|%ordinal2 parameter with a different default argument|a different body}1
but in '%0' found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template}1
but in '%0' found %select{static assert with different condition|static assert with different message|static assert with %select{|no }2message|field %2|field %2 with type %3|%select{non-|}3bitfield %2|bitfield %2 with different width expression|%select{non-|}3mutable field %2|field %2 with %select{no|an}3 initializer|field %2 with a different initializer|%select{method %3|constructor|destructor}2|%select{method %3|constructor|destructor}2 is %select{not deleted|deleted}4|%select{method %3|constructor|destructor}2 is %select{not defaulted|defaulted}4|%select{method %3|constructor|destructor}2 is %select{|pure }4%select{not virtual|virtual}5|%select{method %3|constructor|destructor}2 is %select{not static|static}4|%select{method %3|constructor|destructor}2 is %select{not volatile|volatile}4|%select{method %3|constructor|destructor}2 is %select{not const|const}4|%select{method %3|constructor|destructor}2 is %select{not inline|inline}4|%select{method %3|constructor|destructor}2 that has %4 parameter%s4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter of type %5%select{| decayed from %7}6|%select{method %3|constructor|destructor}2 with %ordinal4 parameter named %5|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with%select{out|}5 a default argument|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with a different default argument|%select{method %3|constructor|destructor}2 with %select{no |}4template arguments|%select{method %3|constructor|destructor}2 with %4 template argument%s4|%select{method %3|constructor|destructor}2 with %4 for %ordinal5 template argument|%select{method %3|constructor|destructor}2 with %select{no body|body}4|%select{method %3|constructor|destructor}2 with different body|%select{typedef|type alias}2 name %3|%select{typedef|type alias}2 %3 with different underlying type %4|data member with name %2|data member %2 with different type %3|data member %2 with%select{out|}3 an initializer|data member %2 with a different initializer|data member %2 %select{is constexpr|is not constexpr}3|friend %select{class|function}2|friend %2|friend function %2|function template %2 with %3 template parameter%s3|function template %2 with %ordinal3 template paramter being a %select{type|non-type|template}4 template parameter|function template %2 with %ordinal3 template parameter %select{with no name|named %5}4|function template %2 with %ordinal3 template parameter with %select{no |}4default argument|function template %2 with %ordinal3 template parameter with default argument %4|function template %2 with %ordinal3 template parameter with different type|function template %2 with %ordinal3 template parameter %select{not |}4being a template parameter pack|}1
but in '%0' found %select{||||different static assert|different field|different method|different type alias|different typedef|different data member|different friend declaration|another unexpected decl}1
definition has no member %0
declaration of %0 does not match
but in '%0' found %select{unnamed template parameter %2|template parameter %2|template parameter with %select{no |}2default argument|template parameter with different default argument}1
please rebuild precompiled header '%0'
'%0' required by '%1'
in second definition, possible difference is here
duplicate module file extension block name '%0'
module file '%0' was validated as a system module and is now being imported as a non-system module; any difference in diagnostic options will be ignored
%select{precompiled header|module}0 uses __DATE__ or __TIME__
backslash and newline separated by space
_Pragma takes a parenthesized string literal
illegal character encoding in character literal
illegal character encoding in string literal
character too large for enclosing character literal type
version control conflict marker in file
'defined' cannot be used as a macro name
digit separator cannot appear at %select{start|end}0 of digit sequence
embedding a #%0 directive within macro arguments is not supported
%select{hex|octal}0 escape sequence out of range
expected a module name in '__building_module' expression
exponent has no digits
builtin feature check macro requires a parenthesized identifier
hexadecimal floating %select{constant|literal}0 requires %select{an exponent|a significand}1
\%0 used with no following hex digits
invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
invalid argument to convert to character
invalid digit '%0' in %select{decimal|octal|binary}1 constant
invalid or corrupt PTH file '%0'
invalid suffix '%0' on %select{integer|floating}1 constant
source file is not valid UTF-8
failure when lexing a string
configuration macros are only allowed in top-level modules
conflicting re-export of module '%0' as '%1' or '%2'
header attribute '%0' specified multiple times
expected an attribute name
expected configuration macro name after ','
expected ',' after conflicting module name
expected a message describing the conflict with '%0'
only '*' can be exported from an inferred submodule
expected a feature name
expected a header name after '%0'
expected a header attribute name ('size' or 'mtime')
expected %select{module exclusion with 'exclude'|'export *'}0
expected '{' to start module '%0'
expected '{' to start inferred submodule
expected %select{library|framework}0 name as a string
expected umbrella, header, submodule, or module export
expected a module map file name
expected module declaration
expected module name
expected '}'
expected ']' to close attribute
inferred framework modules cannot be 'explicit'
'explicit' is not permitted on top-level modules
inferred submodule cannot be a framework submodule
inferred submodules require a module with an umbrella
redefinition of inferred submodule
expected integer literal as value for header attribute '%0'
expected excluded module name
no module named '%0' in '%1'
no module named '%0' visible from '%1'
expected a module name or '*'
redefinition of module '%0'
qualified module name can only be used to define modules at the top level
only top-level modules can be re-exported as public
only submodules and framework modules may be inferred with wildcard syntax
umbrella for module '%0' already covers this directory
skipping stray token
use declarations are only allowed in top-level modules
Unicode character literals may not contain multiple characters
non-ASCII characters are not allowed outside of literals and identifiers
Pascal string is too long
'##' cannot appear at end of macro expansion
'##' cannot appear at start of macro expansion
editor placeholder in source file
expected 'begin' or 'end'
pasting formed '%0', an invalid preprocessing token
':' without preceding '?'
%0 must be used within a preprocessing directive
division by zero in preprocessor expression
already inside '#pragma clang arc_cf_code_audited'
already inside '#pragma clang assume_nonnull'
duplicate macro parameter name %0
empty filename
#endif without #if
'#pragma clang arc_cf_code_audited' was not ended within this file
'#pragma clang assume_nonnull' was not ended within this file
error opening file '%0': %1
missing %1 after %0
expected comma in macro parameter list
expected end of line in preprocessor expression
expected identifier in macro parameter list
expected %select{identifier after '.' in |}0module name
expected ')' in preprocessor expression
expected value in expression
expected "FILENAME" or <FILENAME>
token is not a valid binary operator in a preprocessor subexpression
function-like macro %0 is not defined
invalid token at start of a preprocessor expression
'%0' file not found
'%0' file not found with <angled> include; use "quotes" instead
cannot convert %0 token to an identifier
floating point literal in preprocessor expression
#import of type library is an unsupported Microsoft feature
cannot #include files inside '#pragma clang arc_cf_code_audited'
cannot #include files inside '#pragma clang assume_nonnull'
#include nested too deeply
invalid preprocessing directive
can only poison identifier tokens
invalid token in macro parameter list
%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression
%select{#line|GNU line marker}0 directive requires a simple digit sequence
invalid filename for #line directive
#line directive requires a positive integer argument
invalid filename for line marker directive
invalid flag line marker directive
invalid line marker flag '2': cannot pop empty include stack
line marker directive requires a positive integer argument
macro name must be an identifier
invalid #ident directive
missing '(' following __VA_OPT__
macro name missing
missing ')' in macro parameter list
no module map available for module %0
submodule %0.%1 not declared in module map
no matching '#pragma clang module end' for this '#pragma clang module begin'
must specify '-fmodule-name=%0' to enter %select{|submodule of }1this module%select{ (current module is %3)|}2
no matching '#pragma clang module endbuild' for this '#pragma clang module build'
'#pragma clang module build' not supported in pretokenized header
no matching '#pragma clang module begin' for this '#pragma clang module end'
nested parentheses not permitted in %0
variadic macros not supported in OpenCL
C++ operator %0 (aka %1) used as a macro name
remainder by zero in preprocessor expression
'%select{#|#@}0' is not followed by a macro parameter
'%0' required for precompiled header not found
#include of '%0' not seen while attempting to %select{create|use}1 precompiled header
not currently inside '#pragma clang arc_cf_code_audited'
not currently inside '#pragma clang assume_nonnull'
unterminated conditional directive
attempt to use a poisoned identifier
__VA_OPT__ cannot be nested within its own replacement tokens
no macro named %0
pragma %select{message|warning|error}0 requires parenthesized string
pragma %0 requires a parenthesized string
raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
differing user-defined suffixes ('%0' and '%1') in string literal concatenation
too few arguments provided to function-like macro invocation
too many arguments provided to function-like macro invocation
universal character name refers to a control character
character '%0' cannot be specified by a universal character name
incomplete universal character name
invalid universal character
module %0 does not depend on a module exporting '%1'
unsupported non-standard concatenation of string literals
unterminated function-like macro invocation
missing terminating ')' character
unterminated /* comment
raw string missing terminating delimiter )%0"
'##' cannot appear at end of __VA_OPT__ argument
'##' cannot appear at start of __VA_OPT__ argument
escaped newline between */ characters at block comment end
binary integer literals are a GNU extension
binary integer literals are a C++14 extension
ISO C99 requires whitespace after the macro name
charizing operator #@ is a Microsoft extension
pasting two '/' tokens into a '//' comment is a Microsoft extension
treating Ctrl-Z as end-of-file is a Microsoft extension
'$' in identifier
embedding a directive within macro arguments has undefined behavior
empty character constant
empty macro arguments are a C99 feature
multi-character character constant
hexadecimal floating constants are a C99 feature
hexadecimal floating literals are a C++17 feature
// comments are not allowed in this language
must specify at least one argument for '...' parameter of variadic macro
whitespace required after macro name
invalid suffix on literal; C++11 requires a space between literal and identifier
multi-line // comment
named variadic macros are a GNU extension
no newline at end of file
use of non-standard escape character '\%0'
expected 'ON' or 'OFF' or 'DEFAULT' in pragma
token pasting of ',' and __VA_ARGS__ is a GNU extension
__VA_ARGS__ can only appear in the expansion of a C99 variadic macro
__VA_OPT__ can only appear in the expansion of a variadic macro
comma operator in operand of #if
extra tokens at end of #%0 directive
#ident is a language extension
#import is a language extension
#include_next is a language extension
#include resolved using non-portable Microsoft search rules as: %0
C requires #line number to be less than %0, allowed as extension
#line directive with zero argument is a GNU extension
%0 macro redefined
redefining builtin macro
undefining builtin macro
#warning is a language extension
expected end of directive in pragma
string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
extension used
treating Unicode character as whitespace
unknown escape sequence '\%0'
missing terminating %select{'|'"'}0 character
variadic macros are a C99 feature
%0 is defined here; did you mean %1?
submodule of top-level module '%0' implicitly imported here
cannot use initializer list at the beginning of a macro argument
macro %0 defined here
use 'framework module' to declare module '%0'
to match this '{'
to match this ']'
previously defined here
rename '%0' to ensure it can be found by name
expanding this definition of %0
other definition of %0
entering module '%0' due to this pragma
parentheses are required around macro argument containing braced initializer list
did you mean to use '\u'?
null character(s) preserved in %select{char|string}0 literal
null character ignored
disabled expansion of recursive macro
#elif after #else
#elif without #if
#else after #else
#else without #if
the #__include_macros directive is only for internal use by -imacros
#include_next with absolute path
#include_next in primary source file
invalid string literal, ignoring final '\'
macro is not used
non-portable path to file '%0'; specified path differs in case from file name on disk
current file is older than dependency %0
poisoning existing macro
#pragma once in main file
#pragma system_header ignored in main file
trigraph converted to '%0' character
trigraph ends block comment
trigraph ignored
ignored trigraph would end block comment
treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'
%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99
unicode literals are incompatible with C99
character constant too long for its type
binary integer literals are incompatible with C++ standards before C++14
digit separators are incompatible with C++ standards before C++14
identifier after literal will be treated as a reserved user-defined literal suffix in C++11
identifier after literal will be treated as a user-defined literal suffix in C++11
'%0' is a keyword in C++11
unicode literals are incompatible with C++ standards before C++17
'<=>' operator is incompatible with C++ standards before C++2a
hexadecimal floating literals are incompatible with C++ standards before C++17
'<=>' is a single token in C++2a; add a space to avoid a change in behavior
'%0' is a keyword in C++2a
empty macro arguments are incompatible with C++98
'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98
universal character name referring to a control character is incompatible with C++98
specifying character '%0' with a universal character name is incompatible with C++98
C++98 requires newline at end of file
#line number greater than 32767 is incompatible with C++98
raw string literals are incompatible with C++98
using this character in an identifier is incompatible with C++98
unicode literals are incompatible with C++98
variadic macros are incompatible with C++98
macro expansion producing 'defined' has undefined behavior
extraneous characters in character constant ignored
public framework header includes private framework header '%0'
__has_warning expected option name (e.g. "-Wundef")
%0 is used as a header guard here, followed by #define of a different macro
whitespace recommended after macro name
skipping '%0' because module declaration of '%1' lacks the 'framework' qualifier
expected canonical name for private module '%0'
private submodule '%0' in private module map, expected top-level module
module '%0' already re-exported as '%1'
umbrella directory '%0' not found
unknown attribute '%0'
module '%0' conflicts with already-imported module '%1': %2
'/*' within block comment
include of non-modular header inside framework module '%0': '%1'
include of non-modular header inside module '%0': '%1'
ambiguous expansion of macro %0
%select{left|right}0 side of operator converted from negative value to unsigned: %1
expansion of date or time macro is not reproducible
integer overflow in preprocessor expression
%select{#line|GNU line marker}0 directive interprets number as decimal, not octal
definition of macro %0 does not match definition in precompiled header
keyword is hidden by macro definition
macro name is a reserved identifier
ignoring redefinition of Objective-C qualifier macro
%0 is not defined, evaluates to 0
missing argument to debug command '%0'
unexpected debug command '%0'
pragma diagnostic pop could not pop, no matching push
pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
pragma diagnostic expected option name (e.g. "-Wundef")
unexpected token in pragma diagnostic
unknown warning group '%0', ignored
unknown pragma ignored
pragma include_alias expected '%0'
pragma include_alias expected include filename
angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
pragma pop_macro could not pop '%0', no matching push_macro
#pragma warning expected '%0'
#pragma warning expected a warning number
#pragma warning(push, level) requires a level between 0 and 4
#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4
double-quoted include "%0" in framework header, expected angle-bracketed instead
incomplete universal character name; treating as '\' followed by identifier
\%0 used with no following hex digits; treating as '\' followed by identifier
universal character name refers to a surrogate character
universal character names are only valid in C99 or C++; treating as '\' followed by identifier
universal character names are only valid in C99 or C++
umbrella header for module '%0' does not include header '%1'
use of private header from outside its module: '%0'
treating Unicode character <U+%0> as identifier character rather than as '%1' symbol
interface types cannot specify '%select{private|protected}0' access
use of address-of-label extension outside of a function body
name defined in alias declaration must be an identifier
alias declaration cannot be a pack expansion
%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted
declaration of anonymous %0 must be a definition
unknown cast annotation __bridge_retain; did you mean __bridge_retained?
argument required after attribute
__asm used with no assembly instructions
'asm goto' constructs are not supported yet
cannot use %select{unicode|wide}0 string literal in 'asm'
@defs is not supported in Objective-C++
unexpected '@' in member specification
use of '@import' when modules are disabled
use of '@import' when C++ modules are disabled, consider using -fmodules and -fcxx-modules
%0 attribute cannot be applied to a module import
%0 attribute cannot be applied to a module
parentheses must be omitted if %0 attribute's argument list is empty
misplaced attributes; expected attributes here
an attribute list cannot appear here
expected a platform name here
unrecognized platform name %0
expected 'introduced', 'deprecated', or 'obsoleted'
expected a platform name, e.g., 'macos'
version for '%0' already specified
'*' query has already been specified
must handle potential future platforms with '*'
redundant %0 availability change; only the last specified change will be used
%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
redeclaration of C++ built-in type 'bool'
bracket nesting level exceeded maximum of %0
brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0
'_Noreturn' keyword must precede function declarator
template template parameter requires 'class' after the parameter list
missing return type for function %0; did you mean the constructor name %1?
missing ',' between base or member initializers
attribute %0 cannot have an argument list
attribute %0 cannot be used as an attribute pack
attribute %0 cannot appear multiple times in an attribute specifier
declaration does not declare a parameter
'%0' qualifier may not appear after the virtual specifier '%1'
unexpected end of default argument expression
'= %select{default|delete}0' is a function definition and must occur in a standalone declaration
default template argument for a template template parameter must be a class template
destructor name %0 does not refer to a template
expected a class name after '~' to name a destructor
'~' in destructor name should be after nested name specifier
duplicate 'virtual' in base specifier
duplicate default generic association
class member already marked '%0'
cannot have both throw() and noexcept() clause on the same function
use of empty enum
missing ',' between enumerators
unnamed enumeration must be a definition
unexpected end of exception specification
expected variable name or 'this' in lambda capture list
expected 'case' keyword before expression
expected catch
expected class name
'typename' is redundant; base classes are implicitly types
expected '::' after '__super'
expected ',' or '>' in template-parameter-list
expected ',' or ']' in lambda capture list
expected '#pragma omp end declare target'
expected '= constant-expression' or end of enumerator definition
expected '=' or another designator
expected expression
expected external declaration
expected a field designator, such as '.field = 4'
expected function body after function declarator
expected a foldable binary operator in fold expression
variable declaration in condition must have an initializer
variable declaration in condition cannot have a parenthesized initializer
expected body of lambda expression
expected '{' after base class list
expected '{' in compound literal
expected '<' after '%0'
expected '(' after '%0'
expected '(' for function-style cast or type construction
expected member name or ';' after declaration specifiers
expected member name or ';' after declaration specifiers; %0 is a keyword in Objective-C++
expected class member or base class name
expected method body
method type specifier must start with '-' or '+'
'@end' must appear in an Objective-C context
expected the name of a parameter pack
expected parentheses around type name in %0 expression
expected property name
expected ')' or ',' after '%0'
expected a qualified name after 'typename'
expected ')' after '%0'
expected selector for Objective-C method
expected ';' after attribute list
expected ';' after expression
expected ';' after method prototype
expected ';' after namespace name
expected ';' after static_assert
expected ';' after %0 statement
expected ';' at end of declaration list
expected ';' at end of declaration
expected ';' in 'for' statement specifier
expected 'this' following '*' in lambda capture list
expected statement
expected template
expected template parameter
expected %0; %1 is a keyword in Objective-C++
expected a type
expected an identifier or template-id after '::'
expected %select{identifier|unqualified-id}0
expected a version of the form 'major[.minor[.subminor]]'
expected 'while' in do/while loop
enumerations cannot be explicitly instantiated
explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
explicit %select{specialization|instantiation}0 of non-template %1 %2
export declaration cannot be empty
duplicate %0 clause in an 'external_source_symbol' attribute
expected 'language', 'defined_in', or 'generated_declaration'
extraneous closing brace ('}')
extraneous ')' after condition, expected a statement
extraneous '%0' before ';'
operators in fold expression must be the same
'co_await' modifier can only be applied to range-based for loop
for range declaration must declare a variable
range-based for loop requires type for loop variable
cannot define a type in a friend declaration
friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
'friend' used outside of class
function definition does not declare parameters
function definition declared 'typedef'
function definition is not allowed here
unexpected %0 in function call; perhaps remove the %0?
GNU-style inline assembly is disabled
expected template name after 'template' keyword in nested name specifier
%0 declared as a reference to a reference
cannot cast 'super' (it isn't an expression)
array bound cannot be deduced from an in-class initializer
initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
namespace alias cannot be inline
nested namespace definition cannot be 'inline'
cannot use %select{dot|arrow}0 operator on a type
'%0' qualifier may not be applied to a reference
invalid %0 at end of declaration; did you mean '='?
expected ';' after top level declarator
C++11 only allows consecutive left square brackets when introducing an attribute
label at end of compound statement: expected statement
%select{'mutable'|'constexpr'}0 cannot appear multiple times in a lambda declarator
lambda requires '()' before %select{'mutable'|return type|attribute specifier|'constexpr'}0
string literal after 'operator' must be '""'
string literal after 'operator' cannot have an encoding prefix
%0 attribute is not allowed on explicit instantiation declarations
Metal does not support top-level asm block
%select{'delete' is|derived classes are|'dynamic_cast' is|'goto' is|labeled statements are|lambda expressions are|'new' is|'noexcept' is|'__thread' is|'thread_local' is|'_Thread_local' is|'throw' is|'try' is|type 'long' is|'typeid' is|unions are|virtual inheritance is|virtual member functions are}0 not supported in Metal
'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0
expected %0 at end of module
@try statement without a @catch and @finally clause
C requires a comma prior to the ellipsis in a variadic function type
use 'template' keyword to treat '%0' as a dependent template name
missing '}' at end of definition of %q0
expected parameter declarator
found '<::' after a %select{template name|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
expected a module name after '%select{module|import}0'
expected ';' after module name
module partition must be declared 'export'
'__declspec' attributes are not enabled; use '-fdeclspec' or '-fms-extensions' to enable support for __declspec attributes
__declspec attributes must be an identifier or string literal
property declaration specifies '%0' accessor twice
expected name of accessor method
expected ',' or ')' at end of property accessor list
expected '=' after '%0'
putter for property must be specified as 'put', not 'set'
property declaration cannot have an in-class initializer
missing 'get=' or 'put='
property does not specify a getter or a putter
expected 'get' or 'put' in property declaration
MS-style inline assembly is not available: %0
Unsupported architecture '%0' for MS-style inline assembly
%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity
namespaces can only be defined in global or namespace scope
parameter named %0 is missing
@%0 must be followed by a number to form an NSNumber object
unexpected token after Objective-C string
directive may only be specified in protocols only
expected '=' for Objective-C getter
expected '=' for Objective-C setter
unknown property attribute %0
expected selector for Objective-C %select{setter|getter}0
expected type parameter name
illegal interface qualifier
illegal visibility specification
missing '@end'
@implementation cannot have type parameters
postfix attributes are not allowed on Objective-C directives
postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
properties are an Objective-C 2 feature
property name cannot be a bit-field
property requires fields to be named
protocol qualifiers must precede type arguments
'@end' appears where closing brace '}' is expected
prefix attribute must be followed by an interface or protocol
expected an Objective-C directive after '@'
expected a related ObjectiveC class name, e.g., 'NSColor'
expected a class method selector with single argument, e.g., 'colorWithCGColor:'
function declaration is expected after 'declare simd' directive
unexpected '%0' clause, '%1' is specified already
unexpected '%0' clause, only 'to' or 'link' clauses expected
expected identifier specifying the name of the 'omp critical' directive
expected ',' or ')' in '%0' %select{clause|directive}1
expected identifier or one of the following operators: '+', '-', '*', '&', '|', '^', '&&', or '||'
'#pragma omp %0' %select{|with '%2' clause }1cannot be an immediate substatement
missing map type
unexpected OpenMP clause '%0' in directive '#pragma omp %1'
unexpected OpenMP directive %select{|'#pragma omp %1'}0
expected an OpenMP directive
incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'
incorrect map type modifier, expected 'always'
^^ is a reserved operator in OpenCL
taking address of function is not allowed
OpenCL only supports 'opencl_unroll_hint' attribute on for, while, and do statements
'%0' is a reserved keyword in OpenCL C++
virtual functions are not supported in OpenCL C++
out-of-line constructor for %0 cannot have template arguments
'%0' keyword not permitted with interface types
missing parentheses around the size of parameter pack %0
duplicate attribute subject matcher '%0'
expected an attribute after '('
expected identifier that represents an attribute name
expected an attribute that is specified using the GNU, C++11 or '__declspec' syntax
expected 'push', 'pop', or '(' after '#pragma clang attribute'
expected an identifier that corresponds to an attribute subject rule
expected an identifier that corresponds to an attribute subject matcher sub-rule; '%0' matcher %select{does not support sub-rules|supports the following sub-rules: %2|}1
extra tokens after attribute in a '#pragma clang attribute push'
unexpected argument '%0' to '#pragma clang attribute'; expected 'push' or 'pop'
expected attribute subject set specifier 'apply_to'
more than one attribute specified in '#pragma clang attribute push'
unknown attribute subject rule '%0'
%select{invalid use of|unknown}2 attribute subject matcher sub-rule '%0'; '%1' matcher %select{does not support sub-rules|supports the following sub-rules: %3}2
attribute %0 is not supported by '#pragma clang attribute'
force_cuda_host_device end pragma without matching force_cuda_host_device begin
expected '=' following '#pragma clang section %select{invalid|bss|data|rodata|text}0'
pragma comment requires parenthesized identifier and optional string
unknown kind of pragma comment
pragma detect_mismatch is malformed; it requires two comma-separated string literals
expected one of [bss|data|rodata|text] section kind in '#pragma %0'
'#pragma fp_contract' can only appear at file scope or at the start of a compound statement
unexpected argument '%0' to '#pragma clang fp %1'; expected 'on', 'fast' or 'off'
%select{invalid|missing}0 option%select{ %1|}0; expected contract
'#pragma clang fp' can only appear at file scope or at the start of a compound statement
invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'
%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, or distribute
missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0
missing argument to '#pragma %0'%select{|; expected %2}1
unexpected extra argument '%0' to '#pragma clang optimize'
unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'
unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
a space is required between a right angle bracket and an equals sign (use '> =')
scoped enumeration requires a name
range-based 'for' statement uses ':', not '='
expected parenthesized parameter pack name in 'sizeof...' expression
statement expression not allowed at file scope
'__super' cannot be used with a using declaration
expected a property name in @synthesize
%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword
identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>}1
a static_assert declaration cannot be a template
cannot template a using %select{directive|declaration}0
'this' cannot be captured by reference
a space is required between consecutive right angle brackets (use '> >')
invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
unparsed tokens following type
typename is allowed for identifiers only
type name does not allow constexpr specifier to be specified
type name does not allow function specifier to be specified
type name does not allow storage class to be specified
typename specifier refers to a non-type template
type name requires a specifier or qualifier
unexpected '@' in program
unexpected ':' in nested name specifier; did you mean '::'?
module declaration can only appear at the top level
attributes cannot be specified on namespace alias
attributes cannot be specified on a nested namespace definition
@implementation declaration cannot be protocol qualified
unexpected namespace scope prior to decltype
unexpected ';' before %0
'template' keyword not permitted here
'%0' cannot be a part of nested name specifier; did you mean ':'?
unexpected type name %0: expected identifier
type-id cannot have a name
unknown template name %0
'static' may not be used without an array size
'static' may not be used with an unspecified variable length array size
attribute with scope specifier cannot follow default scope specifier
'using namespace' is not allowed in classes
version number must have non-zero major, minor, or sub-minor version
ISO C++11 requires a parenthesized pack declaration to have a name
alias declarations are a C++11 extension
%0 applied to an expression is a GNU extension
'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases
'__auto_type' is a GNU extension
default member initializer for bit-field is a C++2a extension
%0 is a C11-specific feature
generic selections are a C11-specific feature
_Noreturn functions are a C11-specific feature
_Static_assert is a C11-specific feature
compound literals are a C99-specific feature
variable declaration in for loop is a C99-specific feature
enumeration types with a fixed underlying type are a Microsoft extension
constexpr if is a C++17 extension
'constexpr' on lambda expressions is a C++17 extension
enumeration types with a fixed underlying type are a C++11 extension
'decltype(auto)' type specifier is a C++14 extension
ISO C++17 does not allow a decomposition group to be empty
%select{defaulted|deleted}0 function definitions are a C++11 extension
exception specification of '...' is a Microsoft extension
ISO C requires a translation unit to contain at least one declaration
commas at the end of enumerator lists are a C99-specific feature
commas at the end of enumerator lists are a C++11 extension
extern templates are a C++11 extension
extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
extra ';' outside of a function is a C++11 extension
pack fold expression is a C++17 extension
range-based for loop is a C++11 extension
generalized initializer lists are a C++11 extension
use of GNU address-of-label extension
use of GNU array range extension
use of GNU case range extension
use of GNU ?: conditional expression extension, omitting middle operand
use of GNU empty initializer extension
use of GNU indirect-goto extension
use of GNU 'missing =' extension in designator
use of GNU old-style field designator extension
use of GNU statement expression extension
type-less parameter names in function declaration
'%select{if|switch}0' initialization statements are a C++17 extension
inline namespaces are a C++11 feature
keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
'sealed' keyword is a Microsoft extension
use of multiple declarators in a single using declaration is a C++17 extension
nested namespace definition is a C++17 extension; define each namespace separately
in-class initialization of non-static data member is a C++11 extension
attributes on %select{a namespace|an enumerator}0 declaration are a C++17 extension
type nullability specifier %0 is a Clang extension
'%0' keyword is a C++11 extension
reference qualifiers on functions are a C++11 extension
rvalue references are a C++11 extension
scoped enumerations are a C++11 extension
unknown pragma in STDC namespace
template template parameter using 'typename' is a C++17 extension
'__thread' before '%0'
default scope specifier for attributes is a C++17 extension
pack expansion of using declaration is a C++17 extension
use -fbracket-depth=N to increase maximum nesting level
comma separating Objective-C messaging arguments
or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
did you mean to use 'typename'?
insert ',' before '...' to silence this warning
place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack
preceding '...' declares a function parameter pack
still within definition of %q0 here
introduce a parameter name to make %0 part of the selector
%select{class|protocol|category|class extension|implementation|category implementation}0 started here
use the GNU '__attribute__' syntax
previous default generic association is here
'%0' casts have no effect when not using ARC
ignored %0 qualifier on asm
use of '@import' in framework header is discouraged, including this header requires -fmodules
attribute %0 ignored, because it is not attached to a declaration
GCC does not allow %0 attribute in this position on a function definition
'unavailable' availability overrides all other availability information
use of C-style parameters in Objective-C method declarations is deprecated
nvcc does not allow '__%0__' to appear after '()' in lambdas
'decltype(auto)' type specifier is incompatible with C++ standards before C++14
use of right-shift operator ('>>') in template argument will require parentheses in C++11
constexpr if is incompatible with C++ standards before C++17
constexpr on lambda expressions is incompatible with C++ standards before C++17
pack fold expression is incompatible with C++ standards before C++17
%select{if|switch}0 initialization statements are incompatible with C++ standards before C++17
nested namespace definition is incompatible with C++ standards before C++17
attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++17
template template parameter using 'typename' is incompatible with C++ standards before C++17
default scope specifier for attributes is incompatible with C++ standards before C++17
default member initializer for bit-field is incompatible with C++ standards before C++2a
use of multiple declarators in a single using declaration is incompatible with C++ standards before C++17
pack expansion using declaration is incompatible with C++ standards before C++17
alias declarations are incompatible with C++98
'alignas' is incompatible with C++98
alignof expressions are incompatible with C++98
C++11 attribute syntax is incompatible with C++98
'decltype' type specifier is incompatible with C++98
%select{defaulted|deleted}0 function definitions are incompatible with C++98
enumeration types with a fixed underlying type are incompatible with C++98
commas at the end of enumerator lists are incompatible with C++98
extern templates are incompatible with C++98
range-based for loop is incompatible with C++98
generalized initializer lists are incompatible with C++98
inline namespaces are incompatible with C++98
lambda expressions are incompatible with C++98
literal operators are incompatible with C++98
noexcept specifications are incompatible with C++98
noexcept expressions are incompatible with C++98
in-class initialization of non-static data members is incompatible with C++98
'nullptr' is incompatible with C++98
'%0' keyword is incompatible with C++98
reference qualifiers on functions are incompatible with C++98
rvalue references are incompatible with C++98
scoped enumerations are incompatible with C++98
static_assert declarations are incompatible with C++98
extra ';' outside of a function is incompatible with C++98
trailing return types are incompatible with C++98
consecutive right angle brackets are incompatible with C++98 (use '> >')
add explicit braces to avoid dangling else
use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'
extra ';' after member function definition
meaningless 'volatile' on asm outside function
GCC does not allow an attribute in this position on a function declaration
GCC does not allow variable declarations in for loop initializers before C99
dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
qualifiers after comma in declarator list are ignored
'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0
%0 used as the name of the previous parameter rather than as part of the selector
protocol has no object type specified; defaults to qualified 'id'
extra tokens at the end of '#pragma omp %0' are ignored
expected '=' following '#pragma %select{align|options align}0' - ignored
invalid alignment option in '#pragma %select{align|options align}0' - ignored
OpenCL extension end directive mismatches begin directive - ignoring
'#pragma comment %0' ignored
expected action or ')' in '#pragma %0' - ignored
missing ':' after %0 - ignoring
missing ':' or ')' after %0 - ignoring
expected ',' in '#pragma %0'
expected identifier in '#pragma %0' - ignored
expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored
expected integer between %0 and %1 inclusive in '#pragma %2' - ignored
missing '(' after '#pragma %0' - ignoring
expected non-wide string literal in '#pragma %0'
expected %select{'enable', 'disable', 'begin' or 'end'|'disable'}0 - ignoring
expected ')' or ',' in '#pragma %0'
missing ')' after '#pragma %0' - ignoring
expected a stack label or a string literal for the section name in '#pragma %0' - ignored
expected a string literal for the section name in '#pragma %0' - ignored
expected push, pop or a string literal for the section name in '#pragma %0' - ignored
expected string literal in '#pragma %0' - ignoring
OpenCL extension %0 is core feature or supported optional core feature - ignoring
extra tokens at end of '#pragma %0' - ignored
incorrect use of #pragma clang force_cuda_host_device begin|end
'#pragma init_seg' is only supported when targeting a Microsoft environment
%0 is not a recognized builtin%select{|; consider including <intrin.h> to access non-builtin intrinsics}1
unknown action for '#pragma %0' - ignored
unexpected argument '%0' to '#pragma %1'%select{|; expected %3}2
unknown action '%1' for '#pragma %0' - ignored
incorrect use of '#pragma ms_struct on|off' - ignored
unexpected '#pragma omp ...' in program
'#pragma optimize' is not supported
expected 'align' following '#pragma options' - ignored
expected integer or identifier in '#pragma pack' - ignored
unknown OpenCL extension %0 - ignoring
argument to '#pragma unroll' should not be in parentheses in CUDA C/C++
known but unsupported action '%1' for '#pragma %0' - ignored
unsupported OpenCL extension %0 - ignoring
expected '#pragma unused' argument to be a variable name
semicolon before method body is ignored
ignoring '%select{static|inline}0' keyword on explicit template instantiation
pragma STDC FENV_ACCESS ON is not supported, ignoring pragma
empty symbolic operand name in inline assembly string
invalid %% escape in inline assembly string
invalid operand number in inline asm string
unknown symbolic operand name in inline assembly string
unterminated symbolic operand name in inline assembly string
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
cannot import unsupported AST node %0
ambiguous vftable component for %0 introduced via covariant thunks; this is an inherent limitation of the ABI
%select{read of|assignment to|increment of|decrement of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 dereferenced null pointer is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 temporary is not allowed in a constant expression outside the expression that created the temporary
%select{read of|assignment to|increment of|decrement of}0 object outside its lifetime is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 pointer to element of array without known bound is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 volatile-qualified type %1 is not allowed in a constant expression
cannot refer to element %0 of %select{array of %2 element%plural{1:|:s}2|non-array object}1 in a constant expression
%select{alignment of|offset of the aligned pointer from}0 the base pointee object (%1 %plural{1:byte|:bytes}1) is %select{less than|not a multiple of}0 the asserted %2 %plural{1:byte|:bytes}2
value of the aligned pointer (%0) is not a multiple of the asserted %1 %plural{1:byte|:bytes}1
in call to '%0'
constexpr evaluation hit maximum call limit
(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
comparison of pointer to virtual member function %0 has unspecified value
both arms of conditional operator are unable to produce a constant expression
constexpr evaluation exceeded maximum depth of %0 calls
floating point arithmetic produces %select{an infinity|a NaN}0
in implicit initialization for inherited constructor of %0
%select{reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from %1}0 is not allowed in a constant expression
cannot cast object of dynamic type %0 to type %1
%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression
constructor inherited from base class %0 cannot be used in a constant expression; derived class cannot be implicitly initialized
shift count %0 >= width of type %1 (%2 bit%s2)
%select{read of|assignment to|increment of|decrement of}0 %select{temporary|variable}1 whose lifetime has ended
signed left shift discards bits
left shift of negative value %0
read of mutable member %0 is not allowed in a constant expression
read of non-const variable %0 is not allowed in a constant expression
read of non-constexpr variable %0 is not allowed in a constant expression
cannot constant evaluate '%select{memcpy|memmove}0' between objects of non-trivially-copyable type %1
'%select{memcpy|wmemcpy}0' between overlapping memory regions
cannot constant evaluate '%select{memcpy|memmove}0' from object of type %1 to object of type %2
'%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' not supported: %select{size to copy (%4) is not a multiple of size of element type %3 (%5)|source is not a contiguous array of at least %4 elements of type %3|destination is not a contiguous array of at least %4 elements of type %3}2
modification of object of const-qualified type %0 is not allowed in a constant expression
a constant expression cannot modify an object that is visible outside that expression
negative shift count %0
control reached end of constexpr function
%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression
non-literal type %0 cannot be used in a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|call member function on|access real component of|access imaginary component of}0 null pointer
value %0 is outside the range of representable values of type %1
dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|call member function on|access real component of|access imaginary component of}0 pointer past the end of object
comparison of addresses of subobjects of different base classes has unspecified value
comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
subtracted pointers are not elements of the same array
subtraction of pointers to type %0 of zero size
constexpr evaluation hit maximum step limit; possible infinite loop?
this use of statement expressions is not supported in a constant expression
temporary created here
%select{|implicit }0use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function
typeid applied to expression of polymorphic type %0 is not allowed in a constant expression
%select{|sub}0object of type %1 is not initialized
indexing of array without known bound is not allowed in a constant expression
array-to-pointer decay of array member without known bound is not supported
use of reference outside its lifetime is not allowed in a constant expression
initializer of %0 is not a constant expression
cannot construct object of type %0 with virtual base class in a constant expression
cannot evaluate virtual function call in a constant expression
comparison between unequal pointers to void has unspecified result
covariant thunk required by %0
division by zero
class has base type %0
bit-field %0 with type %1 and length %2 here
also defined here
enumerator %0 with value %1 here
field %0 has type %1 here
field has name %0 here
friend declared here
no corresponding base class here
no corresponding enumerator here
no corresponding field here
no corresponding friend here
field %0 is not a bit-field
class has %0 base %plural{1:class|:classes}0
%select{class|instance}0 method %1 also declared here
no corresponding superclass here
property %0 is implemented with %select{@synthesize|@dynamic}1 here
inherits from superclass %0 here
property is synthesized to ivar %0 here
%select{parameter|parameter pack}0 declared here
%0 is a %select{struct|interface|union|class|enum}1 here
template parameter declared here
template parameter list also declared here
declared here with type %0
%select{non-virtual|virtual}0 derivation here
unimplemented constexpr lambda feature: %0 (coming soon!)
overflow in expression; result is %0 with type %1
add a deprecation attribute to the declaration to silence this warning
previous command '%select{\|@}0%1' here
previous command '%select{\|@}0%1' (an alias of '\%2') here
end tag
HTML tag started here
did you mean '%0'?
previous documentation
unknown command tag name '%0'; did you mean '%1'?
'%select{\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration
duplicated command '%select{\|@}0%1'
empty paragraph passed to '%select{\|@}0%1' command
'%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration
declaration is marked with '\deprecated' command but does not have a deprecation attribute
'%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration
HTML end tag '%0' is forbidden
HTML end tag does not match any start tag
HTML tag '%0' requires an end tag
HTML start tag '%0' closed by '%1'
HTML start tag prematurely ended, expected attribute name or '>'
expected quoted string after equals sign
parameter '%0' is already documented
unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
'%select{\|@}0param' command used in a comment that is not attached to a function declaration
parameter '%0' not found in the function declaration
whitespace is not allowed in parameter passing direction
'%select{\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2
'%select{\|@}0%1' command used in a comment that is not attached to a function or method declaration
template parameter '%0' is already documented
'%select{\|@}0tparam' command used in a comment that is not attached to a template declaration
template parameter '%0' not found in the template declaration
unknown command tag name
'%select{\|@}0%1' command does not terminate a verbatim text block
error parsing index file: '%0' line: %1 'UniqueID filename' format expected
multiple definitions are found for the same key in index 
this builtin is only available on 32-bit targets
this builtin is only available on 64-bit targets
cannot add 'abi_tag' attribute in a redeclaration
%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class
%1 is a %select{private|protected}0 member of %3
%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor
calling a %select{private|protected}0 constructor of class %2
ISO C++11 does not allow access declarations; use using declarations instead
calling a %select{private|protected}1 destructor of class %0
base class %0 has %select{private|protected}1 destructor
exception object of type %0 has %select{private|protected}1 destructor
field of type %1 has %select{private|protected}2 destructor
instance variable of type %0 has %select{private|protected}1 destructor
temporary of type %0 has %select{private|protected}1 destructor
variable of type %1 has %select{private|protected}2 destructor
inherited virtual base class %1 has %select{private|protected}2 destructor
field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
friend function %1 is a %select{private|protected}0 member of %3
capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
address of overloaded function %0 is ambiguous
cannot form member pointer of type %0 without '&' and class name
address of overloaded function %0 does not match required type %1
address of overloaded function %0 cannot be converted to type %1
cannot take address of function %0 because parameter %1 has pass_object_size attribute
'delete' cannot delete objects of type %0 in address space '%1'
'new' cannot allocate objects of type %0 in address space '%1'
cannot take address of function %0 because it has one or more non-tautological enable_if conditions
alias definition of %0 after tentative definition
definition %0 cannot also be an %select{alias|ifunc}1
aliases are not supported on darwin
CUDA does not support aliases
pack expansion used as argument for non-pack parameter of alias template
extraneous template parameter list in alias template declaration
%select{alias|ifunc}0 must point to a defined %select{variable or |}1function
'align_value' attribute requires integer constant
%0 attribute cannot be applied to a %select{function parameter|variable with 'register' storage class|'catch' variable|bit-field}1
redeclaration has different alignment requirement (%1 vs %0)
%0 must be specified on definition if it is specified on any declaration
requested alignment is less than minimum alignment of %1 for type %0
aligned %select{allocation|deallocation}0 function of type '%1' is only available on %2 %3 or newer
'aligned' attribute requires integer constant
requested alignment is dependent but declaration is not dependent
requested alignment is not a power of 2
requested alignment must be %0 or smaller
requested alignment must be %0 or greater
invalid application of 'alignof' to a field of a class still being defined
allocating an object of abstract class type %0
expected initializer
ambiguous cast from base %0 to derived %1:%2
ambiguous conversion of delete expression of type %0 to a pointer
ambiguous conversion from derived class %0 to base class %1:%2
constructor of %0 inherited from multiple base class subobjects
member %0 found in multiple base classes of different types
non-static member %0 found in multiple base-class subobjects of type %1:%2
ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
reference to %0 is ambiguous
multiple suitable %0 functions in %1
a type named %0 is hidden by a declaration in a different namespace
anonymous bit-field has negative width (%0)
anonymous bit-field cannot have qualifiers
width of anonymous bit-field (%0 bits) exceeds %select{width|size}1 of its type (%2 bit%s2)
anonymous property is not supported
anonymous %select{struct|union}0 can only contain non-static data members
member of anonymous %select{struct|union}0 redeclares %1
anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
functions cannot be declared in an anonymous %select{struct|union}0
static members cannot be declared in an anonymous %select{struct|union}0
types cannot be declared in an anonymous %select{struct|union}0
anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
anonymous unions at namespace or global scope must be declared 'static'
anonymous union at class scope must not have a storage specifier
%select{x86|x86-64}0 'interrupt' attribute only applies to functions that have %select{a 'void' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a %2 type as the second parameter}1
interrupt service routine cannot be called directly
must explicitly describe intended ownership of an object array parameter
existing instance variable %1 for property %0 with %select{unsafe_unretained|assign}2 attribute must be __unsafe_unretained
cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership
cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership
incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast
collection expression type %0 is a forward declaration
%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2
method implementation does not match its declaration
ARC forbids explicit message send of %0
ARC forbids %select{implementation|synthesis}0 of %1
ARC forbids use of %0 in a @selector
%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2
%select{pointer|reference}1 to non-const type %0 with no explicit ownership
init methods must return a type related to the receiver type
method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
no visible @interface for %0 declares the selector %1
no known %select{instance|class}1 method for selector %0
%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC
multiple methods named %0 found with mismatched result, parameter type or attributes
'new' cannot allocate an array of %0 with no explicit ownership
explicit ownership qualifier on cast result has no effect
passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
ARC forbids %select{Objective-C objects|blocks}0 in %select{struct|interface|union|<<ERROR>>|enum}1
ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
performSelector names a selector which retains the object
pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
receiver %0 for class message is a forward declaration
receiver type %0 for instance message is a forward declaration
existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
thread-local variable has non-trivial ownership: type is %0
incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
class is incompatible with __weak references
the result of a delegate init call must be immediately returned or assigned to 'self'
cannot create __weak reference in file using manual reference counting
dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
cannot create __weak reference because the current deployment target does not support weak references
assignment of a weak-unavailable object to a __weak object
synthesizing __weak instance variable of type %0, which does not support weak references
parameter may not be qualified with an address space
argument value %0 is outside the valid range [%1, %2]
argument to %select{attribute|function call}0 must be a function constant
argument to attribute must be a program scope constant variable
argument should be a multiple of %0
arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
invalid special register for builtin
array designator range [%0, %1] is empty
array designator value '%0' is negative
array designator cannot initialize non-array type %0
array designator index (%0) exceeds array bounds (%1)
cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
initializing wide char array with incompatible wide string literal
initializing wide char array with non-wide string literal
cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
array initializer must be an initializer list%select{| or string literal| or wide string literal}0
initializing 'char8_t' array with plain string literal
initialization of char array with UTF-8 string literal is not permitted by '-fchar8_t'
initializing char array with wide string literal
array size must be specified in new expressions
array of abstract class type %0
array section does not specify contiguous storage
ambiguous conversion of array size expression of type %0 to an integral or enumeration type
array size expression of type %0 requires explicit conversion to type %1
array size expression has incomplete class type %0
size of array has non-integer type %0
array size expression must have integral or %select{|unscoped }0enumeration type, not %1
variable length array must be bound in function definition
star modifier used outside of function prototype
%0 used in non-outermost array type derivation
%0 used in array declarator outside of function prototype
array is too large (%0 elements)
automatic variable qualified with an%select{| invalid}0 address space
bad type for named register variable
constraint '%0' expects an integer constant expression
asm operand has incomplete type %0
more than one input constraint matches the same output '%0'
register '%0' unsuitable for global register variables on this target
invalid input constraint '%0' in asm
invalid input size for constraint '%0'
invalid lvalue in asm input for constraint '%0'
invalid lvalue in asm output
invalid output constraint '%0' in asm
invalid output size for constraint '%0'
invalid type %0 in asm input for constraint '%1'
parameter references not allowed in naked functions
'this' pointer references not allowed in naked functions
reference to a %select{bit-field|vector element|global register variable}0 in asm %select{input|output}1 with a memory constraint '%2'
size of register '%0' does not match variable size
unsupported inline asm: input with type %diff{$ matching output with type $|}0,1
asm constraint has an unexpected number of alternatives: %0 vs %1
unknown register name '%0' in asm
type %0 in generic association compatible with previously specified type %1
type %0 in generic association incomplete
type %0 in generic association not an object type
type %0 in generic association is a variably modified type
use of @defs is not supported on this architecture and platform
address argument to atomic builtin cannot be const-qualified (%0 invalid)
address argument to atomic builtin must be a pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
atomic %select{load|store}0 requires runtime support that is not available for this target
address argument to bitwise atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
synchronization scope argument to atomic operation is invalid
address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
address argument to atomic operation must be a pointer to signed or unsigned 32-bit integer
address argument to atomic operation must be a pointer to non-%select{const|constant}0 _Atomic type (%1 invalid)
address argument to atomic operation must be a pointer to non-const type (%0 invalid)
address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
atomic property of reference type %0 cannot have non-trivial assignment operator
_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |}0type %1 %select{||||||which is not trivially copyable}0
%0 attribute expression never produces a constant expression
the type %0 is already explicitly ownership-qualified
%0 attribute can only be applied to a %select{function|method}1 with an error parameter
%0 attribute with '%1' convention can only be applied to a %select{function|method}2 returning %select{an integral type|a pointer}3
tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
function type may not be qualified with an address space
multiple address spaces specified for type
address space is negative
address space is larger than the maximum supported (%0)
requested alignment must be %0 bytes or smaller
%0 attribute argument is invalid: %select{max must be 0 since min is 0|min must not be greater than max}1
%0 attribute must be greater than 0
%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier}2
attribute requires integer constant
%0 attribute parameter %1 is out of bounds
%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2
%0 attribute requires integer constant between %1 and %2 inclusive
%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1
invalid attribute argument %0 - expecting a vector or vectorizable scalar type
Neon vector size must be 64 or 128 bits
'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function
'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2
'cleanup' function %0 must take 1 parameter
'__declspec(dllexport)' cannot be applied to more than one default constructor in %0
attribute %q0 cannot be applied to a deleted function
lambda cannot be declared %0
attribute %q0 cannot be applied to member of %q1 class
%q0 must have external linkage when declared %q1
redeclaration of %q0 cannot add %q1 attribute
%q0 cannot be thread local when declared %q1
definition of dllimport data
dllimport cannot be applied to non-inline function definition
definition of dllimport static field not allowed
%0 attribute argument may only refer to a function parameter of integer type
%0 attribute is invalid for the implicit this argument
invalid matrix element type %0
vector size not an integral multiple of component size
%0 attribute is not allowed here
invalid vector element type %0
multiple garbage collection attributes specified for type
%0 attribute parameter %1 is out of bounds: must be between %2 and %3
%0 attribute cannot be used with pointers to members
%0 attribute is not supported in %select{C|C++|Objective-C}1
%0 attribute is not supported on '%1'
%0 attribute parameter is out of bounds: must be between %1 and %2
%0 attribute can only be applied once per parameter
redeclaration of %0 must %select{not |}1have the 'overloadable' attribute
at most one overload for a given name may lack the 'overloadable' attribute
'overloadable' function %0 must have a prototype
%0 attribute only applies to%select{| constant}1 pointer arguments
'regparm' parameter must be between 0 and %0 inclusive
'regparm' is not valid on this platform
%0 attribute requires OpenCL version %1%select{| or above}2
%0 attribute requires a positive integral compile time constant expression
argument to %select{'code_seg'|'section'}1 attribute is not valid for this target: %0
'selectany' can only be applied to data items with external linkage
'sentinel' parameter 1 less than zero
'sentinel' parameter 2 not 0 or 1
%0 size too large
%0 attribute takes at least %1 argument%s1
%0 attribute takes no more than %1 argument%s1
%0 attribute argument not supported: %1
%0 attribute is not supported for this target
uuid attribute contains a malformed GUID
the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
weak declaration cannot have internal linkage
weakref declaration of %0 must be in a global context
weakref declaration must have internal linkage
weakref declaration of %0 must also have an alias attribute
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|parameters|parameters and fields|fields|global constant variables or shader parameters|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|vertex functions|fragment functions|visible functions|qualified functions|non-K&R-style functions}1
%0 attribute only applies to %1
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1
zero %0 size
%0 and %1 attributes are not compatible
cannot pass bit-field as __auto_type initializer in C
%select{'auto'|'decltype(auto)'|'__auto_type'|template arguments}0 deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4
cannot deduce return type %0 from returned value of type %1
'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement
cannot deduce return type %0 for function with no return statements
cannot deduce return type from initializer list
cannot deduce return type %0 from omitted return expression
function %0 with deduced return type cannot be used before it is defined
function with deduced return type cannot be virtual
deduced conflicting types %diff{($ vs $) |}0,1for initializer list element type
cannot use __auto_type with initializer list in C
'auto' return without trailing return type; deduced return types are a C++14 extension
new expression for type %0 contains multiple constructor arguments
new expression for type %0 has incompatible constructor argument of type %1
new expression for type %0 requires a constructor argument
%select{function with deduced return type|declaration with trailing return type}0 must be the only declaration in its group
%select{'auto'|'decltype(auto)'|'__auto_type'|use of %select{class template|function template|variable template|alias template|template template parameter|template}2 %3 requires template arguments; argument deduction}0 not allowed %select{in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter until C++17|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by 'new'|in K&R-style function parameter|in template parameter|in friend declaration}1
'auto' variable template instantiation is not allowed
variable %0 with type %1 has incompatible initializer of type %2
cannot deduce actual type for variable %0 with type %1 from initializer list
initializer for variable %0 with type %1 contains multiple expressions
initializer for variable %0 with type %1 is empty
cannot deduce type for variable %1 with type %2 from %select{parenthesized|nested}0 initializer list
declaration of variable %0 with deduced type %1 requires an initializer
variable %0 declared with deduced type %1 cannot appear in its own initializer
return type of 'await_suspend' is required to be 'void' or 'bool' (have %0)
property implementation must have its declaration in the category %0
%select{const_cast||||C-style cast|functional-style cast}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member
address of overloaded function %0 cannot be cast to type %1
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from bit-field lvalue to reference type %2
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|as_type cast}0 from %1 to %2 is not allowed
cannot %select{||reinterpret_cast||C-style cast|}0 from member pointer type %1 to member pointer type %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 casts away qualifiers
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from rvalue to reference type %2
%select{||reinterpret_cast||C-style cast||as_type cast}0 from scalar %1 to vector %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2, which are not related by inheritance, is not allowed
%select{||reinterpret_cast||C-style cast||as_type cast}0 from vector %1 to scalar %2 of different size
%select{||reinterpret_cast||C-style cast||as_type cast}0 from vector %1 to vector %2 of different size
%0 is an incomplete type
%0 is not a class
%0 is not polymorphic
%0 is not a pointer
%0 is not a reference or pointer
%0 cannot be used as the type of a kernel parameter
cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
right hand operand to %0 has non-pointer-to-member type %1
function multiversioning doesn't support %select{feature|architecture}0 '%1'
cannot allocate %select{function|reference}1 type %0 with new
%0 cannot be the name of a parameter
property implementation must be in a class or category implementation
property implementation must have its declaration in interface %0 or one of its extensions
bad receiver type %0
reinterpret_cast cannot resolve overloaded function %0 to type %1
reinterpret_cast of a %0 to %1 needs its address, which is not allowed
cast from pointer to smaller type %2 loses information
cannot cast from rvalue of type %1 to rvalue reference type %2; types are not compatible
cannot cast from type %1 to member pointer type %2
address of overloaded function %0 cannot be static_cast to type %1
cannot cast from type %1 to pointer type %2
%0 cannot be the name of a variable or data member
base class %0 has a flexible array member
unions cannot have base classes
base class initializer %0 names both a direct base class and an inherited virtual base class
constructor initializer %0 does not name a class
base specifier must name a class
%0 attribute cannot be applied to a base specifier
binding %0 cannot appear in the initializer of its own decomposition declaration
bit-field %0 has negative width (%1)
named bit-field %0 has zero width
width of bit-field %0 (%1 bits) exceeds %select{width|size}2 of its type (%3 bit%s3)
variable is not assignable (missing __block type specifier)
'extern' variable cannot have an initializer
__block attribute not allowed, only allowed on local variables
__block attribute not allowed on declaration with a variably modified type
non-void block should return a value
block cannot return %select{array|function}0 type %1
blocks support disabled - compile with -fblocks or %select{pick a deployment target that supports them|for OpenCL 2.0}0
reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection
'break' statement not in loop or switch statement
first argument to __builtin_annotation must be an integer
second argument to __builtin_annotation must be a non-wide string constant
definition of builtin function %0
builtin functions must be directly called
function-style cast to a builtin type can only take one argument
argument to __builtin_longjmp must be a constant 1
__builtin_longjmp is not supported for the current target
%0 needs target feature %1
call to '%select{__builtin_operator_new|__builtin_operator_delete}0' selects non-usual %select{allocation|deallocation}0 function
cannot redeclare builtin function %0
'%0' is only available in %1
__builtin_setjmp is not supported for the current target
builtin is not supported on this target
this builtin is only available on x86-64 and aarch64 targets
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++
calling %0 with incomplete return type %1
argument type %0 is incomplete
calling function with incomplete return type %0
cannot find suitable %select{getter|setter}0 for property %1
cannot form a pointer-to-member to member %0 of reference type %1
cannot pass non-trivial C object of type %0 by value to variadic %select{function|block|method|constructor}1
cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
non-local lambda expression cannot have a capture-default
%0 in capture list does not name a variable
%0 can appear only once in a capture list
%0 cannot be captured because it does not have automatic storage duration
by-copy capture of value of abstract type %0
by-copy capture of variable %0 with incomplete type %1
%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration
'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda
'case' statement not in switch statement
operand of type %0 cannot be cast to a pointer type
pointer cannot be cast to type %0
cannot type cast @selector expression
cannot catch incomplete type %0
cannot catch pointer to incomplete type %0
cannot catch reference to incomplete type %0
@catch parameter is not a pointer to an interface type
cannot catch exceptions by rvalue reference
cannot catch variably modified type %0
cannot define %select{category|class extension}0 for undefined class %1
property declared in category %0 cannot be implemented in class implementation
function declared '%0' here was previously declared %select{'%2'|without calling convention}1
function with no prototype cannot use the %0 calling convention
variadic function cannot use %0 calling convention
CFString literal is not a string constant
circular inheritance between %0 and %1
cannot declare class extension for %0 after class implementation
base %0 is marked '%select{final|sealed}1'
property %0 is a class property; did you mean to access it with class '%1'?
%0 redeclared with '%1' access
property follows Cocoa naming convention for returning 'owned' objects
the type %0 is not a pointer to a fast-enumerable object
'color' attachment %0 has different %select{types|raster order groups}3 on input (%1) and output (%2)
type of machine mode does not support base vector types
%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier
%select{variable|function}0 concept cannot be declared '%select{thread_local|inline|friend|constexpr}1'
concept declarations may only appear in namespace scope
%select{function|variable}0 concept cannot be %select{explicitly instantiated|explicitly specialized|partially specialized}1
'concept' cannot be applied on an %select{explicit instantiation|explicit specialization|partial specialization}0
'concept' can only appear on the definition of a function template or variable template
operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
vector condition type %0 and result type %1 do not have elements of the same size
vector condition type %0 and result type %1 do not have the same number of elements
%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0
CUDA special function 'cudaConfigureCall' must have scalar return type
conflicting types for alias %0
conflicting attribute is here
conflicting code segment specifiers
instance variable %0 has conflicting bit-field width
conflicting instance variable names: %0 vs %1
instance variable %0 has conflicting type%diff{: $ vs $|}1,2
virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
conflicting super class name %0
conflicting types for %0
argument to %0 must be a constant integer
statement not allowed in constexpr %select{function|constructor}0
no return statement in constexpr function
constexpr constructor must initialize all members
destructor cannot be marked constexpr
function try block not allowed in constexpr %select{function|constructor}0
variables defined in a constexpr %select{function|constructor}0 must be initialized
variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0
%select{static|thread_local}1 variable not permitted in a constexpr %select{function|constructor}0
'main' is not allowed to be declared constexpr
constexpr can only be used in variable and function declarations
constexpr %select{function|constructor}1's %ordinal0 parameter type %2 is not a literal type
constexpr function's return type %0 is not a literal type
%select{non-constexpr declaration of %0 follows constexpr declaration|constexpr declaration of %0 follows non-constexpr declaration}1
non-void constexpr function %0 should return a value
declaration of constexpr static data member %0 requires an initializer
%select{class|struct|interface|union|enum}0 cannot be marked constexpr
constexpr union constructor does not initialize any member
constexpr variable cannot have non-literal type %0
constexpr variable %0 must be initialized by a constant expression
virtual function cannot be constexpr
constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
copy constructor must pass its first argument by reference
constructor cannot be declared '%0'
constructor cannot be redeclared
constructor cannot have a return type
class extension has no primary class
'continue' statement not in loop statement
conversion function must be a non-static member function
conversion function cannot be redeclared
conversion function cannot have a return type
conversion function cannot convert to an array type
conversion function cannot convert to a function type
conversion function cannot be variadic
cannot specify any part of a return type in the declaration of a conversion function%select{; put the complete type after 'operator'|; use a typedef to declare a conversion to %1|; use an alias template to declare a conversion to %1|}0
conversion function cannot have any parameters
first two arguments to __builtin_convertvector must have the same number of elements
first argument to __builtin_convertvector must be a vector
second argument to __builtin_convertvector must be a vector type
'&' must precede a capture when the capture default is '='
std::experimental::coroutine_handle missing a member named '%0'
'%1' cannot be used in %select{a constructor|a destructor|a copy assignment operator|a move assignment operator|the 'main' function|a constexpr function|a function with a deduced return type|a varargs function}0
Objective-C methods as coroutines are not yet supported
'%0' cannot be used outside a function
%0: 'get_return_object_on_allocation_failure()' must be a static member function
the coroutine promise type %0 declares both 'return_value' and 'return_void'
%0 is required to have a non-throwing noexcept specification when the promise type declares 'get_return_object_on_allocation_failure()'
the coroutine promise type %0 must declare either 'return_value' or 'return_void'
this function cannot be a coroutine: %0 is an incomplete type
%0 is required to declare the member 'unhandled_exception()'
this function cannot be a coroutine: missing definition of specialization %0
'%0' cannot be used in an unevaluated context
return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
'cpu_dispatch' function redeclared with different CPUs
multiple 'cpu_specific' functions cannot specify the same CPU: %0
%select{constructor|destructor}1 %0 must not return void expression
cannot use '%0' in %select{__device__|__global__|__host__|__host__ __device__}1 function
__shared__ variable %0 cannot be 'extern'
__shared__ local variables not allowed in %select{__device__|__global__|__host__|__host__ __device__}0 functions
__constant__ variables must be global
%select{__device__|__global__|__host__|__host__ __device__}0 function %1 cannot overload %select{__device__|__global__|__host__|__host__ __device__}2 function %3
constexpr function %0 without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr.
cannot use variable-length arrays in %select{__device__|__global__|__host__|__host__ __device__}0 functions
module name '%0' specified on command line does not match name of module
%select{alias|ifunc}0 definition is part of a cycle
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime would be shorter than the lifetime of the constructed object
dealloc return type must be correctly specified as 'void' under ARC, instead of %0
GNU decimal type extension not supported
%0 attribute cannot be applied to a statement
'%0' declared as an array with a negative size
declarator requires an identifier
'__declspec(thread)' applied to variable that already has a thread-local storage specifier
'decltype(auto)' cannot be combined with other type specifiers
cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
'decltype(auto)' can only be used as a return type in a function declaration
cannot deduce 'decltype(auto)' from initializer list
'decltype(auto)' not allowed here
'decltype' cannot be used to name a declaration
cannot decompose members of ambiguous base class %1 of %0:%2
cannot decompose class type %0 because it has an anonymous %select{struct|union}1 member
decomposition declaration not permitted in this context
cannot decompose class type %1: %select{its base classes %2 and|both it and its base class}0 %3 have non-static data members
cannot decompose members of non-public base class %1 of %0
cannot decompose non-public member %0 of %1
decomposition declaration must be the only declaration in its group
decomposition declaration cannot be declared with parentheses
decomposition declaration %0 requires an initializer
decomposition declaration cannot be declared %plural{1:'%1'|:with '%1' specifiers}0
cannot decompose this type; 'std::tuple_element<%0>::type' does not name a type
cannot decompose this type; 'std::tuple_size<%0>::value' is not a valid integral constant expression
decomposition declaration template not supported
decomposition declaration cannot be declared with type %0; declared type must be 'auto' or reference to 'auto'
cannot decompose %select{union|non-class, non-array}1 type %2
type %0 decomposes into %2 elements, but %select{only |}3%1 names were provided
cannot decrement expression of type bool
cannot %select{form pointer to|form reference to|form array of|form function returning|use parentheses when declaring variable with}0 deduced class template specialization type
ambiguous deduction for template arguments of %0
no viable constructor or deduction guide for deduction of template arguments of %0
class template argument deduction for %0 selected a deleted constructor
class template argument deduction for %0 selected an explicit %select{constructor|deduction guide}1 for copy-list-initialization
template %0 has no definition and no %select{|viable }1deduction guides for deduction of template arguments
%select{<error>|function template|variable template|alias template|template template parameter|template}0 %1 requires template arguments; argument deduction only allowed for class templates
deduced non-type template argument does not have the same type as the corresponding template parameter%diff{ ($ vs $)|}0,1
deduced return types are a C++14 extension
deduced type %1 of deduction guide is not %select{|written as }2a specialization of template %0
deduction guide cannot have a function definition
deduction guide is %select{not |}0declared 'explicit' but previous declaration was%select{ not|}0
deduction guide cannot be declared '%0'
cannot specify deduction guide for %select{<error>|function template|variable template|alias template|template template parameter|dependent template name}0 %1
deduction guide declaration without trailing return type
deduction guide cannot be %select{explicitly instantiated|explicitly specialized}0
deduction guide template contains %select{a template parameter|template parameters}0 that cannot be deduced
cannot specify any part of a return type in the declaration of a deduction guide
deduction guide has different access from the corresponding member template
deduction guide must be declared in the same scope as template %q0
exception specifications of %select{return|argument}0 types differ
default template argument in a class template partial specialization
addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
default initialization of an object of const type %0%select{| without a user-provided default constructor}1
'default' statement not in switch statement
the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
explicitly-defaulted %select{copy|move}0 assignment operator must return %1
an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
the parameter for an explicitly-defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 may not be volatile
definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0
definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
delegating constructors are permitted only in C++11
an initializer for a delegating constructor must appear alone
converting delete expression from type %0 to type %1 invokes an explicit conversion function
deleting incomplete class type %0; no conversions to pointer type
cannot delete expression of type %0
deleted definition must be first declaration
attempt to use a deleted function
constructor inherited by %0 from base class %1 is implicitly deleted
'main' is not allowed to be deleted
deleted function %0 cannot override a non-deleted function
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0 member in %1; argument deduction not allowed here
no candidate function template was found for dependent friend function template specialization
nested name specifier for a declaration cannot depend on a template parameter
type of specialized non-type template argument depends on a template parameter of the partial specialization
%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope
non-type template argument specializes a template parameter with dependent type %0
dereference of pointer to incomplete type %0
designator in initializer for scalar type %0
designator into flexible array member subobject
%select{no_destroy|always_destroy}0 attribute can only be applied to a variable with static or thread storage duration
destroying operator delete can have only an optional size and optional alignment parameter
destructor cannot be declared '%0'
expected the class name after '~' to name a destructor
destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
expected the class name after '~' to name the enclosing class
destructor must be a non-static member function
destructor cannot be redeclared
destructor cannot have a return type
destructor cannot be declared as a template
destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
destructor cannot be variadic
destructor cannot have any parameters
within a %select{__device__|__global__|__host__|__host__ __device__}0 function, only __shared__ variables or const variables without device memory qualifier may be marked 'static'
invalid diagnostic type for 'diagnose_if'; use "error" or "warning" instead
conflicting asm label
declaration of %0 has a different language linkage
conflicting pass_object_size attributes on parameters
virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
dimension expression does not evaluate to a constant unsigned int
exception specifications are not allowed beyond a single level of indirection
cannot cast %select{private|protected}2 base class %1 to %0
reference to %select{destructor|pseudo-destructor}0 must be called%select{|; did you mean to call it with no arguments?}1
reimplementation of category %1 for class %0
reimplementation of class %0
base class %0 specified more than once as a direct base class
duplicate case value '%0'
duplicate case value: '%0' and '%1' both equal '%2'
duplicate interface definition for class %0
instance variable is already declared
synthesized properties %0 and %1 both claim instance variable %2
definition with same mangled name '%0' as another definition
duplicate member %0
duplicate declaration of method %0
property has a previous declaration
dynamic property cannot have instance variable specification
dynamic initialization is not supported for __device__, __constant__, and __shared__ variables.
catch-all handler must come last
ISO C requires a named parameter before '...'
only function and template parameters can be parameter packs
scalar initializer cannot be empty
reference to %select{|scoped }0enumeration must use 'enum' not 'enum class'
non-integral type %0 is an invalid underlying type
mode %0 is not supported for enumeration types
enumeration previously declared with %select{non|}0fixed underlying type
enumeration previously declared as %select{un|}0scoped
enumeration redeclared with different underlying type %0 (was %1)
enumerator %0 does not exist in instantiation of %1
enumerator value is not representable in the underlying type %0
enumerator value %0 is not representable in the underlying type %1
the event_t type can only be used with __private address space qualifier
exception specification of %0 uses itself
exception specifications are not allowed in %select{typedefs|type aliases}0
exception specification is not available until end of class definition
cannot use '%0' with exceptions disabled
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in char array initializer
%0 is not a class%select{ or namespace|, namespace, or enumeration}1
kernel must have void return type
partial ordering for explicit instantiation of %0 is ambiguous
explicit instantiation cannot be 'constexpr'
explicit instantiation refers to static data member %q0 that is not an instantiation
explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
duplicate explicit instantiation of %0
explicit instantiation of %0 in class scope
explicit instantiation cannot be 'inline'
explicit instantiation refers to member function %q0 that is not an instantiation
explicit instantiation of %0 must occur at global scope
explicit instantiation of non-templated type %0
explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
explicit instantiation of typedef %0
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation declaration requires a name
explicit instantiation cannot have a storage class
explicit instantiation of undefined function template %0
explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
explicit instantiation of undefined variable template %q0
explicit instantiation of %q0 must occur in namespace %1
explicit instantiation of %q0 must specify a template argument list
'explicit' can only be applied to a constructor or conversion function
'explicit' can only appear on non-static member functions
'explicit' can only be specified inside the class definition
explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
export declaration can only be used within a module interface unit after the module declaration
export declaration appears within another export declaration
%select{case value|enumerator value|non-type template argument|array size|constexpr if condition}0 is not a constant expression
expression is not an %select{integer|integral}0 constant expression
expression is not a string literal
vector component access exceeds type %0
illegal vector component name '%0'
declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
extern declaration of %0 follows non-extern declaration
control reaches end of non-void block
fallthrough annotation does not directly precede switch label
fallthrough annotation is outside switch statement
%0 attribute is only allowed on empty statements
field %0 declared as a function
field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
field designator %0 does not refer to a non-static data member
field designator %0 does not refer to any field in type %1
field designator %0 does not refer to any field in type %1; did you mean %2?
field has incomplete type %0
data member instantiated with function type %0
field may not be qualified with an address space
filter expression type should be an integral value not %0
declaration of %0 overrides a '%select{final|sealed}1' function
first argument to __builtin_call_with_static_chain must not be a block call
first argument to __builtin_call_with_static_chain must not be a builtin call
first argument to __builtin_call_with_static_chain must be a non-member call expression
first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call
first argument to 'va_arg' is of type %0 and not 'va_list'
ARC forbids flexible array members with retainable object type
flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
flexible array member %0 of type %1 with non-trivial destruction
initialization of flexible array member is not allowed
flexible array requires brace-enclosed initializer
flexible array member %0 with type %1 is not at the end of %select{struct|interface|union|class|enum}2
flexible array member %0 in a union is not allowed
flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
expression not permitted as operand of fold expression
unary fold expression has empty expansion for operator '%0' with no fallback value
binary fold expression has unexpanded parameter packs in both operands
cannot use type %0 as a range
invalid range expression of type %0; did you mean to dereference it with '*'?
cannot use incomplete type %0 as a range
invalid range expression of type %0; no viable '%select{begin|end}1' function available
cannot use type %0 as an iterator
range type %0 has '%select{begin|end}1' member but no '%select{end|begin}1' member
loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'}1
format attribute cannot specify the implicit this argument as the format string
format argument not %0
format attribute requires variadic function
function does not return %0
strftime format attribute requires 3rd parameter to be 0
ISO C++ forbids forward references to 'enum' types
attempting to use the forward class %0 as superclass of %1
friend declaration of %0 does not match any declaration in %1
'%0' is invalid in friend declarations
friend declaration specifying a default argument must be a definition
friend declaration specifying a default argument must be the only declaration
friend function cannot be defined in a local class
friends cannot be members of the declaring class
'friend' must appear first in a non-function declaration
incomplete result type %0 in function definition
function cannot return %select{array|function}0 type %1
function cannot return qualified void type %0
function declared with %0 attribute was previously declared without the %0 attribute
declared return type of function concept must be 'bool'
function concept cannot have exception specification
function concept declaration must be a definition
function concept cannot have any parameters
%0 marked 'override' but does not override any member functions
always_inline function %1 requires target feature '%2', but would be inlined into function %0 that is compiled without support for '%2'
type %0 of function parameter pack does not contain any unexpanded parameter packs
function template partial specialization is not allowed
function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
no function template matches function template specialization %0
weak attribute declared on a __strong type property in GC mode
controlling expression type %0 compatible with %1 generic association types
controlling expression type %0 not compatible with any generic association type
no getter method for read from property
call to global function %0 not configured
cannot jump from this goto statement to its label
cannot jump from this goto statement to label %0 inside an inline assembly block
half precision constant requires cl_khr_fp16
builtin requires HVX
builtin is not supported on this CPU
builtin is not supported on this version of HVX
type argument of iboutletcollection attribute cannot be a builtin type
invalid type %0 as argument of iboutletcollection attribute
ambiguous conversion from type %0 to an integral or unscoped enumeration type
integral constant expression requires explicit conversion from %0 to %1
integral constant expression has incomplete class type %0
integral constant expression must have integral or unscoped enumeration type, not %0
integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
identifier %0 in object destruction expression does not name a type
a parameter list without types is only allowed in a function definition
ifunc resolver function must have no parameters
ifunc resolver function must return a pointer
illegal operation on Objective-C container subscripting
array has incomplete element type %0
'%0' declared as array of %1
'%0' declared as array of functions of type %1
'%0' declared as array of references of type %1
'%0' does not point into a class
'%0' declared as a member pointer to a reference of type %1
'%0' declared as a member pointer to void
'%0' declared as a pointer to a reference of type %1
illegal initializer (only variables can be initialized)
illegal initializer type %0
Objective-C message has incomplete result type %0
illegal qualifiers on @catch parameter
%select{anonymous struct|union}0 member %1 has a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
imaginary types are not supported
implicit conversion from %0 to %1 is not permitted in C++
std::nothrow was not found; include <new> before defining a coroutine which uses get_return_object_on_allocation_failure()
initializer for aggregate with no elements requires explicit braces
implicit instantiation of undefined member %0
cannot deduce return type of 'operator<=>' because type '%0' was not found; include <compare>
%0 type was not found; include <experimental/coroutine> before defining a coroutine
this function cannot be a coroutine: %0 is not a class
this function cannot be a coroutine: %q0 has no member named 'promise_type'
cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
static data member of type %0 must be initialized out of line
default member initializer for %0 uses itself
in-class initializer for static data member of type %0 requires 'constexpr' specifier
non-const static data member must be initialized out of line
in-class initializer for static data member is not a constant expression
default member initializer for %1 needed within definition of enclosing class %0 outside of member functions
static const volatile data member must be initialized out of line
target exception specification is not superset of source
API notes replacement type %0 has a different size from original type %1
base class has incomplete type
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
member access into incomplete type %0
incomplete type %0 named in nested name specifier
incomplete type in call to object of type %0
incomplete receiver type %0
cannot synthesize property %0 with incomplete type %1
incomplete type %0 where a complete type is required
'@encode' of incomplete type %0
incomplete type %0 used in type trait expression
'typeid' of incomplete type %0
inconsistent number of instance variables specified
defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is not constexpr
exception specification of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 does not match the calculated one
number of elements must be either one or match the size of the vector
cannot increment expression of type bool
cannot %select{decrement|increment}0 expression of enum type %1
cannot jump from this indirect goto statement to one of its possible targets
indirect goto in function with no address-of-label expressions
cannot deduce type for lambda capture %0 from initializer of type %2
cannot deduce type for lambda capture %0 from initializer list
initializer for lambda capture %0 contains multiple expressions
initializer missing for lambda capture %0
cannot deduce type for lambda capture %1 from %select{parenthesized|nested}0 initializer list
cannot initialize %select{a variable|a parameter|return object|statement expression result|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
initializer element is not a compile-time constant
cannot create object of function type %0
initialization of incomplete type %0
%select{|non-aggregate }0type %1 cannot be initialized with an initializer list
init methods must return an object pointer type, not %0
initialization of non-aggregate type %0 with an initializer list
cannot initialize Objective-C class type %0
can only use 'init_priority' attribute on file-scope definitions of objects of class type
reference member of type %0 uninitialized
initializer-string for char array is too long
inline declaration of %0 follows non-inline definition
inline declaration of %0 not allowed in block scope
'main' is not allowed to be declared inline
non-inline namespace cannot be reopened as inline
'inline' can only appear on functions%select{| and non-local variables}0
invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
integer sequences must have integral element type
integer sequences must have non-negative sequence length
'internal_linkage' attribute does not appear on the first declaration of %0
%plural{[0,2]:must use a qualified name when declaring|3:cannot declare}0 a %select{constructor|destructor|conversion operator|deduction guide}0 as a friend
invalid use of a cast in a inline asm context requiring an l-value: remove the cast or build with -fheinous-gnu-extensions
value '%0' out of range for constraint '%1'
invalid reinterpretation: sizes of %0 and %1 must match
%0 attribute cannot be applied to virtual functions
interface type cannot inherit from %select{struct|non-public interface|class}0 %1
collection element of type %0 is not an Objective-C object
'_Complex %0' is invalid
%select{function parameter|typedef|non-static data member}0 cannot be constexpr
non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
constexpr variable declaration must be a definition
invalid conversion between ext-vector type %0 and %1
invalid conversion between vector type %0 and integer type %1 of different size
invalid conversion between vector type %0 and scalar type %1
invalid conversion between vector type%diff{ $ and $|}0,1 of different size
invalid cpu name for builtin
invalid option '%0' for %select{cpu_specific|cpu_dispatch}1
invalid cpu feature string for builtin
cannot combine with previous '%0' declaration specifier
invalid declaration specifier in template non-type parameter
definition or redeclaration of %0 cannot name the global scope
definition or redeclaration of %0 not allowed inside a block
definition or redeclaration of %0 not allowed inside a function
cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
cannot create a non-constant pointer to member function
invalid use of incomplete type %0
mask type size must be between 1-byte and 8-bytes
%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type
invalid use of member %0 in static member function
%0 attribute number of control point must be known at compile-time
incompatible constant for this __builtin_neon function
invalid use of non-static data member %0
%0 is not a valid literal type for NSNumber
invalid PCS type
'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here
%0 is not a valid property name (accessing an object of type %1)
invalid protocol qualifiers on non-ObjC type
'%0' qualifier is not allowed on a constructor
'%0' qualifier is not allowed on a destructor
%select{non-member function|static member function|deduction guide}0 %select{of type %2 |}1cannot have '%3' qualifier
receiver type %0 is not an Objective-C class
'super' is only valid in a method body
'_Sat' specifier is only valid on '_Fract' or '_Accum', not '%0'
'%0' cannot be signed or unsigned
invalid use of '__super', this keyword can only be used inside class or member function scope
invalid use of 'this' outside of a non-static member function
'%0' is only allowed on variable declarations
the %0 type cannot be used to declare a program scope variable
an array type is not allowed here
a function type is not allowed here
type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
cannot use '%0' with '__vector bool'
cannot combine with previous '%0' declaration specifier. '__vector' must be first
use of 'double' with '__vector' requires VSX support to be enabled (available on POWER7 or later)
cannot use 'float' with '__vector'
cannot use 'long' with '__vector'
cannot use 'long double' with '__vector'
use of 'long long' with '__vector bool' requires VSX support (available on POWER7 or later) or extended Altivec support (available on POWER8 or later) to be enabled
'%select{|short|long|long long}0 %1' is invalid
property %0 not found on object of type %1; did you mean to access instance variable %2?
property %0 attempting to use instance variable %1 declared in super class %2
instance variables cannot be of reference type
instance variable %0 accessed in class method
kernel call to non-global function %0
kernel function %0 must be a free function or static member function
kernel function type %0 must have void return type
pointer arguments to kernel functions must reside in '__global', '__constant' or '__local' address space
unnamed variable cannot be implicitly captured in a lambda expression
lambda expression in default argument cannot capture any entity
variable %0 with flexible array member cannot be captured in a lambda expression
cannot assign to a variable captured by copy in a non-mutable lambda
variable %0 cannot be implicitly captured in a lambda with no capture-default specified
a lambda expression may not appear inside of a constant expression
a lambda expression cannot appear in this context
incomplete result type %0 in lambda expression
cannot deduce lambda return type from initializer list
lambda expression in an unevaluated operand
string literal in language linkage specifier cannot have an encoding-prefix
unknown linkage language
cannot apply asm label to %select{variable|function}0 after its first use
'lifetimebound' attribute cannot be applied to a %select{constructor|destructor}0
'lifetimebound' attribute cannot be applied; %select{static |non-}0member function has no implicit object parameter
cannot initialize %select{non-class|reference}0 type %1 with a parenthesized initializer list
non-template literal operator must have one or two parameters
literal operator cannot have a default argument
literal operator must have C++ linkage
non-namespace scope '%0' cannot have a literal operator member
parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char *'
literal operator %0 must be in a namespace or global scope
invalid literal operator parameter type %0, did you mean %1?
template parameter list for literal operator must be either 'char...' or 'typename T, T...'
literal operator template cannot have any parameters
'__local' variable cannot have an initializer
%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2
const lvalue reference to type %0 cannot bind to a temporary due to address space incompatibility
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2
rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
%select{unknown|unsupported}0 machine mode %1
%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1
main cannot be declared as global variable
'main' must return 'int'
too many parameters (%0) for 'main': must be 0, 2, or 3
%0 cannot be a template
std::experimental::coroutine_handle must be a class template
'std::experimental::coroutine_traits' must be a class template
std::initializer_list must be a class template with a single type parameter
std::nothrow must be a valid variable declaration
control may reach end of non-void block
member initializer %0 does not name a non-static data member or base class
initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
call to non-static member function without an object argument
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
return type of out-of-line definition of %q0 differs from that in the declaration
out-of-line definition of %0 from class %1 without definition
extra qualification on member %0
'this' argument to member function %0 has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2
'this' argument to member function %0 is an %select{lvalue|rvalue}1, but function has %select{non-const lvalue|rvalue}2 ref-qualifier
cannot initialize object parameter of type %0 with an expression of type %1
initializer on function does not look like a pure-specifier
member %0 has the same name as its class
no member %0 in %1; it has not yet been instantiated
non-friend class member %0 cannot have a qualified name
class member cannot be redeclared
multiple overloads of %0 instantiate to the same signature %1
base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
member pointer refers into non-class type %0
conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
member pointer has incomplete base type %0
input declaration of type %0 with size unknown at compile time requires attribute '%1'
%0 attribute already specified
cannot reference variable with non-global storage %0 in %select{attribute index expression}1
invalid subexpression in %select{attribute index expression}0
invalid type %0 for %select{attribute index expression|function constant predicate}1
declaration with attribute %0 already specified
%0 attribute must be between 0 to %1
attribute %0 cannot be used on a parameter declaration
attribute %0 cannot be used on a stage_in declaration
type %0 is not valid for attribute %1
%0 attribute requires Metal language standard %1 or higher
attribute %0 requires attribute%s1 %2
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1 when used for %select{input|output}2 declaration in a %select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}3 function
invalid type %0 for buffer declaration
invalid type %0 for buffer declaration in a %select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}1 function
invalid address space qualification for buffer pointee type %0
invalid type %0 for buffer
builtin cannot handle parameter value '%0'
argument no. %0 type must match argument no. %1 unqualified pointee type
argument no. %0 unqualified pointee type must match argument no. %1 unqualified pointee type
number of elements in argument no. %0 and argument no. %1 pointee type must match
argument no. %0 and argument no. %1 must have the same type
argument no. %0 element type must match argument no. %1 type
argument no. %0 element type must match argument no. %1 unqualified pointee type
number of elements in argument no. %0 and argument no. %1 must match
invalid parameter type %0 for %1 builtin
argument no. %0 is not a vector
argument no. %0 is not arithmetic
argument no. %0 is not int
argument no. %0 pointee type is not a vector
argument no. %0 pointee type is not int
argument no. %0 element type and argument no. %1 element type must have equal size
flexible array members are a C99 feature
call to %select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}0 function %1
cannot assign resource locations to '%0'
cannot reserve '%0' resource location%s2 at index %1
dependent arguments for %0 attribute requires Metal language standard %1 or higher
'early_fragment_tests' is required on function %0 by attribute %1
explicit instantiation of %0 requires explicit function qualification %1
explicit instantiation of %0 cannot add function qualification %1
function %0 is %select{not|%2}1 qualified but previous declaration is %select{%2|not}1 qualified
'%0' declared as a pointer to %1
type %0 cannot be used for explicit layout imageblock data
type for explicit layout imageblock data must be a struct or class type
input declaration of type %0 requires attribute '%1'
illegal cast to %1 from integer type %0
invalid type argument %0 for 'intersection' attribute
intersection function qualification mismatch
intersection tag 'world_space_data' cannot be used without the intersection tag 'instancing'
invalid %0 attribute for %select{input|output}1 declaration in a %select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}2 function
invalid string literal value for %0 attribute
'index(%0)' attribute cannot be specified with 'color(%0)' attribute
invalid imageblock data view type %0 for master %1
invalid implicit color input declaration%s0
input declaration%s1 with attribute %0 %plural{1:has|:have}1 incompatible type%s1 for patch '%2'
input declaration%s3 with attribute %0 must have type %1 due to input declaration%s4 with attribute %2
invalid type %0 for input declaration in a %select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}1 function
expecting input declarations %select{with either all scalar types or all vector types with the same number of elements|with matching types}0
invalid return type %0 for %select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}1 function
constant sampler must be declared constexpr
invalid values combination in sampler initialization
constant sampler initializer is not constexpr
invalid type %0 of input declaration with attribute %1 in a %select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}2 function
invalid type %0 for %select{input|output}2 declaration with attribute %1 in a %select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}3 function
number of constant buffers exceeds maximum supported (%0)
size of constant buffer cannot exceed %0
number of patch-data attributes exceeds maximum supported (%0)
number of textures with read_write access exceeds maximum supported (%0)
%select{pointer|reference}0 type must have explicit address space qualifier
no '%0' resource location available for '%1'
%0 attribute cannot be used in a fragment shader with early_fragment_tests
%select{function|fragment function|bounding box intersection function|triangle intersection function|kernel function|post-tessellation vertex function|vertex function|visible function|function}0 cannot be called 'main'
cannot use the %0 attribute on more than one parameter
invalid use of %0 attribute here: %1
parameter %0 of type %1 must be passed by value
cannot use the %0 type on more than one parameter
mismatch between type of declarations with attribute 'payload'
%select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}0 function cannot be declared in anonymous namespace
%select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}0 function cannot be a member function
%select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}0 function cannot have static storage class
type %0 requires 'flat' interpolation qualifier
'stage_in' declaration must have attribute 'attribute'
function signature of %q0 is not compatible with 'stitchable' attribute
invalid access qualifier '%select{sample|read|write|read_write}0' for %select{texture|array of textures}1 declaration in a %select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}2 function
Metal does not support the '%0' %select{type qualifier|storage class specifier}1
invalid prototype, variadic arguments are not allowed in Metal%select{| qualified functions}0
too many arguments to constructor of %0, expected at most %1, have %2
variable length arrays are not supported in Metal
%select{instance|class}1 method %0 not found ; did you mean %2?
derived class must specify the same code segment as its base classes
overriding virtual function must specify the same code segment as its overridden function
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
inheritance model does not match %select{definition|previous declaration}0
declaration of %0 in %select{the global module|module %2}1 follows declaration in %select{the global module|module %4}3
uuid does not match previous declaration
visibility does not match previous declaration
instance variables may not be placed in %select{categories|class extension}0
missing actual type specifier for pipe
string literal must be prefixed by '@' 
%select{constructor for %1 must explicitly initialize the|implicit default constructor for %1 must explicitly initialize the|cannot use constructor inherited from base class %4;}0 %select{base class|member}2 %3 %select{which|which|of %1}0 does not have a default constructor
%0 is missing exception specification '%1'
%0 parameter must have %select{buffer|texture|sampler|threadgroup}1 attribute
missing context for method declaration
missing '[' at start of message send expression
missing context for property implementation declaration
property implementation in a category with no category declaration
synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
C++ requires a type specifier for all declarations
cannot use C++ 'try' in the same function as SEH '__try'
mode attribute only supported for integer and floating-point types
type of machine mode does not match type of base type
'module' declaration found while building module from module map
missing 'export module' declaration in module interface unit
@import of module '%0' in implementation of '%1'; use #import
import of module '%0' appears within %1
missing 'export' specifier in module declaration while building module interface
definition of module '%0' is not available; use -fmodule-file= to specify path to precompiled module interface
%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__
local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
%select{template|partial|member}0 specialization cannot be declared __module_private__
translation unit contains multiple module declarations
import of module '%0' appears within same top-level module '%1'
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
missing '#include %3'; %select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from one of the following modules before it is required:%2
'__leave' statement not in __try block
'__builtin_ms_va_start' used in System V ABI function
arguments to __annotation must be wide string constants
multiple initializations given for base %0
multiple default labels in one switch
virtual function %q0 has more than one final overrider in %1
multiple initializations given for non-static member %0
initializing multiple members of union
function declaration cannot become a multiversioned function after first usage
multiversioned function declaration has a different %select{calling convention|return type|constexpr specification|inline specification|storage class|linkage}0
attribute '%select{target|cpu_specific|cpu_dispatch}0' multiversioned functions do not yet support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions}1
multiversioned function redeclarations require identical target attributes
attribute '%select{target|cpu_specific|cpu_dispatch}0' multiversioning cannot be combined with other attributes
multiversioned function must have a prototype
'main' cannot be a multiversioned function
function multiversioning is not supported on the current target
function declaration is missing %select{'target'|'cpu_specific' or 'cpu_dispatch'}0 attribute in a multiversioned function
multiversioning attributes cannot be combined
'mutable' and 'const' cannot be mixed
'mutable' cannot be applied to functions
'mutable' can only be applied to member variables
'mutable' cannot be applied to references
you need to include <guiddef.h> before using the '__uuidof' operator
you need to include <typeinfo> before using the 'typeid' operator
lookup of %0 in member access expression is ambiguous
%0 cannot appear before '::' because it is not a class%select{ or namespace|, namespace, or enumeration}1; did you mean ':'?
type %0 cannot be used prior to '::' because it has no members
%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3
nested redefinition of %0
'abi_tag' %0 missing in original declaration
array 'new' cannot have initialization arguments
only the first dimension of an allocated array may have dynamic size
cannot allocate array of 'auto'
allocation of incomplete type %0
no %select{getter|setter}0 defined for property %1
invalid use of '__super', %0 has no base classes
use of dynamic_cast requires -frtti
no matching function found in local scope
no matching function %0 found in local scope; did you mean %3?
no member named %0 in %1
no member named %0 in %1; did you mean to use '->' instead of '.'?
no member named %0 in %1; did you mean %select{|simply }2%3?
no template named %0 in %1
no template named %0 in %1; did you mean %select{|simply }2%3?
cannot find interface declaration for %0
expression is not assignable
no suitable member %0 in %1
no @interface declaration found in class messaging of %0
no template named %0
no template named %0; did you mean %1?
use of typeid requires -frtti
argument to noexcept specifier must be a constant expression
a getter method is needed to perform a compound assignment on a property
no getter method %1 for %select{increment|decrement}0 of property
non-ASM statement in naked function is not supported
non-deleted function %0 cannot override a deleted function
non-extern declaration of %0 follows extern declaration
declaration of non-local variable in 'for' loop
non-static declaration of %0 follows static declaration
member %0 of %1 is not a template; did you mean %select{|simply }2%3?
%0 does not name a template but is followed by template arguments
%0 does not name a template but is followed by template arguments; did you mean %1?
non-thread-local declaration of %0 follows thread-local declaration
template argument / label address difference / what did you expect?
non-type template argument refers to subobject '%0'
qualified name refers into a specialization of %select{function|variable}0 template %1
non-type template parameter %0 with type %1 has incompatible initializer of type %2
non-variable declaration in 'for' loop
%0 is not virtual and cannot be declared pure
block pointer to non-function type is invalid
non-static data member defined out-of-line
address argument to nontemporal builtin must be a pointer (%0 invalid)
address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (%0 invalid)
block declared 'noreturn' should not return
lambda declared 'noreturn' should not return
function declared '[[noreturn]]' after its first declaration
'_Noreturn' can only appear on functions
%select{assignment to readonly property|no setter method %1 for assignment to property}0
%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0
cannot specialize a %select{dependent template|template template parameter}0
type %0 is not a direct or virtual base of %1
call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
anonymous bit-field has non-integral type %0
bit-field %0 has non-integral type %1
no %select{struct|interface|union|class|enum}0 named %1 in %2
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters
overriding method has mismatched ns_consumed attribute on its parameter
domain argument %0 does not refer to global constant
ns_error_domain attribute only valid on %select{enums, structs, and unions|enums, structs, unions, and classes}0
domain argument must be an identifier
'NSObject' attribute is for pointer types only
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
nullability keyword %0 cannot be applied to multi-level pointer type %1
nullability specifier %0 cannot be applied to non-pointer type %1
array of interface %0 is invalid (probably should be an array of pointers)
parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
attribute %0 can only be applied to @protocol definitions, not forward declarations
parameter of %0 attribute must be 'id' when used on a typedef
'objc_bridge(id)' is only allowed on structs and typedefs of void pointers
could not find Objective-C class %0 to convert %1 to %2
%0 must be name of an Objective-C class to be able to convert %1 to %2
%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion
CF object of type %0 is bridged to %1, which is not an Objective-C class
Objective-C declarations may only appear in global scope
cannot use '%0' with Objective-C exceptions disabled
illegal type %0 used in a boxed expression
incomplete type %0 used in a boxed expression
Objective-C index expression has incomplete class type %0
method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
'__kindof' specifier cannot be applied to non-object type %0
'__kindof' type specifier must precede the declarator
literal construction method %0 has incompatible signature
%0 %select{parameter|return}1 type is unsupported; support for vector types for this target is introduced in %2
indexing expression is invalid because subscript type %0 has multiple type conversion functions
non-trivially copyable type %0 cannot be used in a boxed expression
ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
cannot assign to class object (%0 invalid)
cannot catch an Objective-C object by value
%select{extension|category}0 of non-parameterized class %1 cannot have type parameters
forward declaration of non-parameterized class %0 cannot have type parameters
class %0 previously declared with type parameters
objc_precise_lifetime only applies to retainable types; type here is %0
property attributes '%0' and '%1' are mutually exclusive
property with '%0' attribute must be of object type
objc_root_class attribute may only be specified on a root class declaration
cannot implement a category for class %0 that is only visible via the Objective-C runtime
cannot implement subclass %0 of a superclass %1 that is only visible via the Objective-C runtime
%select{dictionary|array}1 subscript base type %0 is not an Objective-C object
method object parameter type %0 is not object type
method index parameter type %0 is not integral type
method key parameter type %0 is not object type
expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
indexing expression is invalid because subscript type %0 is not an Objective-C pointer
indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
@synchronized requires an Objective-C object type (%0 invalid)
@throw requires an Objective-C object type (%0 invalid)
type argument %0 does not satisfy the bound (%1) of type parameter %2
type argument %0 cannot explicitly specify nullability
no type or protocol named %0
type argument %0 must be a pointer (requires a '*')
type argument %0 is neither an Objective-C object nor a block type
type argument %0 cannot be qualified with '%1'
angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)
type arguments cannot be applied to non-class type %0
type arguments cannot be applied to non-parameterized class %0
type arguments cannot be applied to already-specialized class type %0
too %select{many|few}0 type arguments for class %1 (have %2, expected %3)
%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)
type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4
type parameter %0 bound %1 cannot explicitly specify nullability
missing type bound %0 for type parameter %1 in %select{@interface|@class}2
missing '*' in type bound %0 for type parameter %1
type bound %0 for type parameter %1 is not an Objective-C pointer type
type bound %1 for type parameter %0 cannot be qualified with '%2'
redeclaration of type parameter %0
%select{in|co|contra}0variant type parameter %1 conflicts with previous %select{in|co|contra}2variant type parameter %3
cannot declare variable inside @interface or @protocol
field %0 with variable sized type %1 is not at the end of class
interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
offsetof requires array type, %0 invalid
cannot compute offset of bit-field %0
invalid application of 'offsetof' to a field of a virtual base
offsetof of incomplete type %0
offsetof requires struct, union, or class type, %0 invalid
argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0
%select{a variable|a parameter|'this'}0 cannot appear in more than one aligned clause
expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'
OpenMP array section is not allowed here
expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'
the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an l-value expression with scalar type
the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both l-value expressions with scalar type
the statement for 'atomic' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an l-value expression with scalar type
the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type
directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update' or 'capture' clause
the statement for 'atomic update' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an l-value expression with scalar type
the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type
bit fields cannot be used to specify storage in a '%0' clause
arguments of OpenMP clause '%0' with bitwise operators cannot be of floating type
arguments of OpenMP clause '%0' for 'min' or 'max' must be of %select{scalar|arithmetic}1 type
const-qualified list item cannot be reduction
const-qualified variable cannot be %0
constructs with the same name must have a 'hint' clause with the same value
redefinition of user-defined reduction for type %0
%0 appears multiple times in clauses on the same declare target directive
%0 must not appear in both clauses 'to' and 'link'
'depend' clauses cannot be mixed with '%0' clause
expected%select{| %1}0 loop iteration variable
expected '+' or '-' operation
'depend(%select{source|sink:vec}0)' clause%select{|s}0 cannot be mixed with 'depend(%select{sink:vec|source}0)' clause%select{s|}0
unexpected expression: number of expressions is larger than the number of associated loops
declare target region may not be enclosed within another declare target region
expected access to data field
expected addressable lvalue expression, array element or array section
expected variable name as a base of the array %select{subscript|section}0
expected a reference to an integer-typed parameter
expected expression containing only member accesses and/or array sections based on named variables
expected a reference to a parameter specified in a 'uniform' clause
%0 is not a global variable, static local variable or static data member
%0 is not a global variable, static local variable or static data member; did you mean %1
expected variable name%select{| or data member of current class}0
expected variable name%select{|, data member of current class}0, array element or array section
expression requires explicit conversion from %0 to %1
a firstprivate variable with incomplete type %0
'#pragma omp declare simd' can only be applied to functions
function name is not allowed in 'link' clause
arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
'%0' and '%1' clause are mutually exclusive and may not appear on the same directive
the name of the construct must be specified in presence of 'hint' clause
in_reduction variable must appear in a task_reduction clause
expression has incomplete class type %0
%select{map type '%1' is not allowed|map type must be specified}0 for '#pragma omp %2'
%0 used in declare target directive is not a variable or a function name
a lastprivate variable with incomplete type %0
only loop iteration variables are allowed in 'linear' clause in distribute directives
argument of a linear clause should be of integral or pointer type, not %0
a linear variable with incomplete type %0
'linear' clause cannot be specified along with 'ordered' clause with a parameter
variable with local storage in initial value of threadprivate variable
'%0' statement cannot be used in OpenMP for loop
could not calculate number of iterations calling 'operator-' with upper and lower loop bounds
increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop
condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', or '>=') of loop variable %0
increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2
variable must be of integer or %select{pointer|random access iterator}0 type
variable already marked as mapped in current construct
multiple array elements associated with the same variable are not allowed in map clauses of the same construct
argument to '%0' clause must be a %select{non-negative|strictly positive}1 integer value
expected at least one %0 clause for '#pragma omp %1'
variable %0 must have explicitly specified data sharing attributes
no more 'if' clause is allowed
%select{statement after '#pragma omp %1' must be a for loop|expected %2 for loops after '#pragma omp %1'%select{|, but found only %4}3}0
expression must have integral or unscoped enumeration type, not %0
unable to resolve declare reduction construct for type %0
variable can appear only once in OpenMP '%0' clause
variable can appear only once in OpenMP 'target update' construct
'ordered' directive %select{without any clauses|with 'threads' clause}0 cannot be closely nested inside ordered region with specified parameter
'ordered' directive with 'depend' clause cannot be closely nested inside ordered region without specified parameter
'ordered' clause with a parameter can not be specified in '#pragma omp %0' directive
original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage
orphaned 'omp %0' directives are prohibited; perhaps you forget to enclose the directive into a %select{|||target |teams }1region?
%select{orphaned 'omp section' directives are prohibited, it|'omp section' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0
argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct
the statement for '#pragma omp parallel sections' must be a compound statement
statement in 'omp parallel sections' directive must be enclosed into a section region
expected reference to one of the parameters of function %0%select{| or 'this'}1
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be nowait
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be ordered
pointer cannot be mapped along with a section derived from itself
a private variable with incomplete type %0
region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?|; perhaps you forget to enclose 'omp %3' directive into a target region?|; perhaps you forget to enclose 'omp %3' directive into a teams region?}2
OpenMP constructs may not be nested inside an atomic region
cannot nest 'critical' regions having the same name %0
OpenMP constructs may not be nested inside a simd region
list item of type %0 is not valid for specified reduction operation: unable to provide default initialization value
in_reduction variable must have the same reduction operation as in a task_reduction clause
reduction variables may not be accessed in an explicit task
a reduction list item with incomplete type %0
expected addressable reduction item for the task-based directives
argument of OpenMP clause '%0' must reference the same object in all threads
cannot generate code for reduction on %select{|array section, which requires a }0variable length array
'reduction' clause cannot be used with 'nogroup' clause
reduction type cannot be %select{qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array}0 type
arguments of '#pragma omp %0' cannot be of reference type %1
directive must be at file or namespace scope
%0 variable must be %1
same pointer dereferenced in multiple different ways in map clause expressions
'schedule' clause with 'nonmonotonic' modifier cannot be specified if an 'ordered' clause is specified
'nonmonotonic' modifier can only be specified with 'dynamic' or 'guided' schedule kind
section of pointer to function type %0
section of pointer to incomplete type %0
section length is evaluated to a negative value %0
section length is unspecified and cannot be inferred because subscripted value is %select{not an array|an array of unknown bound}0
array section must be a subset of the original array
the statement for '#pragma omp sections' must be a compound statement
statement in 'omp sections' directive must be enclosed into a section region
'%0' statement cannot be used in OpenMP simd region
the 'copyprivate' clause must not be used with the 'nowait' clause
single declaration is expected after 'declare simd' directive
target construct with nested teams region contains statements outside of the teams construct
threadprivate variables are not allowed in '%0' clause
threadprivate variables cannot be used in target constructs
threadprivate variable with incomplete type %0
array section %select{lower bound|length}0 is not an integer
subscripted value is not an array or pointer
expected %0 in OpenMP clause '%1'
modifier '%0' cannot be used along with modifier '%1'
mapping of union members is not allowed
incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type %0
expected %select{|one of}0 %1 directive name modifier%select{|s}0
expected pointer or reference to pointer in 'use_device_ptr' clause
'#pragma omp %0' must appear in the scope of the %q1 variable declaration
variable %0 cannot be threadprivate because it is %select{thread-local|a global named register variable}1
'#pragma omp %0' must precede all references to variable %q1
%0 variable cannot be in a %1 clause in '#pragma omp %2' directive
arguments of OpenMP clause '%0' in '#pragma omp %2' directive cannot be of variably-modified type %1
one of 'for', 'parallel', 'sections' or 'taskgroup' is expected
%0 variable cannot be %1
directive name modifier '%0' is not allowed for '#pragma omp %1'
expected %select{'val' modifier|one of 'ref', val' or 'uval' modifiers}0
variable of non-reference type %0 can be used only with 'val' modifier, but used with '%1'
the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause
the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter
only %select{'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out'}0 variables are allowed in %select{initializer|combiner}0 expression
access specifier can only have annotation attributes
only constructors take base initializers
only enumeration types have underlying types
variables in the %0 address space can only be declared in the outermost scope of a kernel function
atomic variable can be %select{assigned|initialized}0 to a variable only in global address space
bit-fields are not supported in OpenCL
cannot refer to a block inside block
the __block storage type is not permitted
illegal call to %0, expected %1 argument type
invalid number of arguments to function: %0
first argument to %0 must be a pipe type
invalid pipe access modifier (expecting %0)
invalid argument type to function %0 (expecting %1 having %2)
invalid argument %0 to function: %1, expecting a generic pointer argument
cannot cast non-zero value '%0' to 'event_t'
casting to type %0 is not allowed
variable in constant address space must be initialized
blocks with parameters are not accepted in this prototype of enqueue_kernel call
blocks used in enqueue_kernel call are expected to have parameters of type 'local void*'
illegal call to enqueue_kernel, incorrect argument types
illegal call to enqueue_kernel, parameter needs to be specified as integer type
mismatch in number of block parameters and local size arguments passed
vector component access has invalid length %0.  Supported: 1,2,3,4,8,16.
invalid block variable declaration - using 'extern' storage class is disallowed
pointers to functions are not allowed
%select{non-kernel function|function scope}0 variable cannot be declared in %1 address space
%select{program scope|static local|extern}0 variable must reside in %1 address space
declaring variable of type %0 is not allowed
%select{loading directly from|assigning directly to}0 pointer to type %1 requires cl_khr_fp16. Use vector data %select{load|store}0 builtin functions instead
declaring function parameter of type %0 is not allowed; did you forget * ?
implicit conversions between vector types (%0 and %1) are not permitted
access qualifier can only be used for pipe and image type
invalid block variable declaration - must be %select{const qualified|initialized}0
access qualifier %0 can not be used for %1 %select{|prior to OpenCL version 2.0}2
declaring function return value of type %0 is not allowed %select{; did you forget * ?|}1
array of %0 type is invalid in OpenCL
attribute %0 can only be applied to an OpenCL kernel function
multiple access qualifiers
%select{function|kernel}0 cannot be called 'main'
global sampler requires a const or constant address space qualifier
pointer to type %0 is invalid in OpenCL
kernel parameter cannot be declared as a pointer to a pointer
use of %select{type|declaration}0 %1 requires %2 extension to be enabled
return value cannot be qualified with address space
scalar operand type has greater rank than the type of the vector element. (%0 and %1)
invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align}0' to a void type
taking address of a capture is not allowed
block type cannot be used as expression in ternary expression in OpenCL
type %0 can only be used as a function parameter in OpenCL
the %0 type cannot be used to declare a structure or union field
OpenCL %select{C|C++}0 version %1 does not support the '%2' %select{type qualifier|storage class specifier}3
invalid prototype, variadic arguments are not allowed in OpenCL
variable length arrays are not supported in OpenCL
invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed
circular pointer delegation detected
use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
%0 cannot take a dependent type as first parameter; use %1 instead
first parameter of %0 must have type %1
parameter of %0 cannot have a default argument
%0 cannot be declared inside a namespace
%0 cannot be declared static in global scope
%0 cannot have a dependent return type; use %1 instead
%0 must return type %1
%0 template must have at least two parameters
%0 must have at least one parameter
%0 cannot take a dependent type as first parameter; use size_t (%1) instead
%0 takes type size_t (%1) as first parameter
parameter of overloaded %0 cannot have a default argument
overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
overloaded %0 must be a non-static member function
overloaded %0 must have at least one parameter of class or enumeration type
parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
overloaded %0 cannot be a static member function
overloaded %0 cannot be variadic
os_log() argument %0 is too big (%1 bytes, max %2)
os_log() format argument is not a string constant
defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration
qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context
operand argument to overflow builtin must be an integer (%0 invalid)
result argument to overflow builtin must be a pointer to a non-const integer (%0 invalid)
exception specification of overriding function is more lax than base version
call to %0 is ambiguous
ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2
call to constructor of %0 is ambiguous
call to member function %0 is ambiguous
call to object of type %0 is ambiguous
use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
use of overloaded operator '%0' is ambiguous (operand type %1)
call to %select{unavailable|deleted}0 function %1%2
%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 uses deleted function
call to %select{unavailable|deleted}0 constructor of %1
call to %select{unavailable|deleted}0 member function %1%2
call to %select{unavailable|deleted}0 function call operator in type %1%2
overload resolution selected %select{unavailable|deleted}0 operator '%1'%2
call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted
functions that differ only in their return type cannot be overloaded
cannot convert %1 to %2 without a conversion operator
type %0 does not provide a %select{subscript|call}1 operator
no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2
no matching function for call to %0
no matching constructor for initialization of %0
no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
no matching member function for call to %0
no matching function for call to object of type %0
no viable overloaded '%0'
no viable overloaded operator[] for type %0
static and non-static member functions with the same parameter types cannot be overloaded
reference to %select{overloaded|multiversioned}1 function could not be resolved; did you mean to call it%select{| with no arguments}0?
'ownership_returns' attribute index does not match; here it is %0
%0 attribute only applies to %select{pointer|integer}1 arguments
pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
pack expansion contains parameter pack %0 that has a different length (at least %1 vs. %2) from outer parameter packs
pack expansion for initialization of member %0
pack expansion does not contain any unexpanded parameter packs
C does not support default arguments
default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
missing default argument on parameter
missing default argument on parameter %0
default arguments can only be specified for parameters in a function declaration
parameter pack cannot have a default argument
redefinition of default argument
default argument references local variable %0 of enclosing function
default argument references parameter %0
default argument references 'this'
default arguments cannot be added to a function template that has already been declared
argument may not have 'void' type
parameter name omitted
%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?
cannot parenthesize the name of a method when forming a member pointer
%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list
partial specialization of %0 does not use any of its template parameters
ambiguous partial specializations of %0
class template partial specialization %0 cannot be redeclared
partial specialization cannot be declared as a friend
'new' expression with placement arguments refers to non-placement 'operator delete'
call to pointer to member function of type %0 drops '%1' qualifier%s2
pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
invalid use of pointer to member type after %select{.*|->*}0
this builtin is only valid on POWER7 or later CPUs
'#pragma clang attribute' attribute with no matching '#pragma clang attribute push'
attribute %0 can't be applied to %1
negated attribute subject matcher sub-rule '%0' contradicts sub-rule '%1'
redundant attribute subject matcher sub-rule '%0'; '%1' already matches those declarations
unterminated '#pragma clang attribute push' at end of file
'#pragma clang attribute pop' with no matching '#pragma clang attribute push'
%select{incompatible|duplicate}0 directives '%1' and '%2'
invalid argument of type %0; expected an integer type
%select{invalid value '%0'; must be positive|value '%0' is too large}1
expected a for, while, or do-while loop to follow '%0'
mac68k alignment pragma is not supported on this target
#pragma visibility pop with no matching #pragma visibility push
#pragma visibility push with no matching #pragma visibility pop
instance variable %0 is private
type of property %0 (%1) does not match type of accessor %2 (%3)
property %0 found on object of type %1; did you mean to access it with the "." operator?
use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
property %0 is already implemented
property %0 has a variably modified type
type of property %0 (%1) does not match type of instance variable %2 (%3)
property access is using %0 method which is unavailable
property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
property %0 not found on object of type %1
property %0 cannot be found in forward class object %1
property %0 not found on object of type %1; did you mean %2?
synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
property cannot have array or function type %0
instance variable %0 is protected
protocol has circular dependency
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
call to pseudo-destructor cannot have any arguments
%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1
the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
discriminator argument to ptrauth_sign_constant must be a constant integer, the address of the global variable where the result will be stored, or a blend of the two
argument to ptrauth_sign_constant must refer to a global variable or function
pointer authentication is disabled for the current target
this target does not support pointer authentication
%0 does not identify a valid pointer authentication key for the current target
address discrimination flag for __ptrauth must be 0 or 1; value is %0
argument to __ptrauth must be an integer constant expression
__ptrauth qualifier must take between 1 and 3 arguments
cast types may not be qualified with __ptrauth; type is %0
extra discriminator for __ptrauth must between 0 and %1; value is %0
__ptrauth qualifier may only be applied to pointer types; type here is %0
parameter types may not be qualified with __ptrauth; type is %0
type %0 is already __ptrauth-qualified
return types may not be qualified with __ptrauth; type is %0
argument must be a string literal%select{| of char type}0
%select{signed value|extra discriminator|blended pointer|blended integer}0 must have %select{pointer|integer|pointer or integer}1 type; type here is %2
friend declaration cannot have a pure-specifier
exception declarator cannot be qualified
friend function definition cannot be qualified with '%0'
no function named %0 with type %1 was found in the specified scope
qualified member access refers to a member in %0
%q0 is not a member of class %1
%select{property|instance variable}0 access cannot be qualified with '%1'
@catch parameter declarator cannot be qualified
parameter declarator cannot be qualified
typedef declarator cannot be qualified
cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
assigning to 'readonly' return result of an Objective-C message not allowed
invalid type %0 to %1 operator
%select{struct|union}0 kernel parameters may not contain pointers
recursive evaluation of default argument
trying to recursively use %0 as superclass of %1
redeclaration of %0 with a different type%diff{: $ vs $|}1,2
redefinition of %0
redefinition of %0 as different kind of symbol
redefinition of %0 as an alias for a different namespace
redefinition of %0 with a different type%diff{: $ vs $|}1,2
%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2
redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
redefinition of enumerator %0
redefinition of label %0
redefinition of %select{typedef|type alias}0 for variably-modified type %1
cannot refer to declaration with an array type inside block
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in %select{__device__|__global__|__host__|__host__ __device__}2 function
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in global initializer
cannot refer to declaration of structure variable with flexible array member inside block
reference initialization of type %0 with initializer of type %1 is ambiguous
%0 does not refer to a value
ref-qualifier '%select{&&|&}0' is not allowed on a constructor
ref-qualifier '%select{&&|&}0' is not allowed on a destructor
cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
cannot refer to declaration with a variably modified type inside block
binding reference %diff{of type $ to value of type $|to value}0,1 %select{drops %3 qualifier%plural{1:|2:|4:|:s}4|changes address space}2
reference %diff{to type $ could not bind to an %select{rvalue|lvalue}1 of type $|could not bind to %select{rvalue|lvalue}1 of incompatible type}0,2
reference to type %0 cannot bind to an initializer list
%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2
%select{non-const|volatile}0 reference cannot bind to vector element
'&' cannot precede a capture when the capture default is '&'
reference cannot be initialized with multiple values
pipes packet types cannot be of reference type
reference to local %select{variable|binding}1 %0 declared in enclosing %select{%3|block literal|lambda expression|context}2
cannot form a reference to 'void'
declaration of reference variable %0 requires an initializer
reference to type %0 requires an initializer
function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
%0 attribute cannot be repeated
variable does not have a constant initializer
%0 has a duplicate index '%1'
cannot subclass a class that was declared with the 'objc_subclassing_restricted' attribute
returning block that lives on the local stack
@throw (rethrow) used outside of a @catch block
void block should not return a value
cannot return from %0
return in the catch of a function try block of a constructor is illegal
return statement not allowed in coroutine; did you mean 'co_return'?
%select{void function|void method|constructor|destructor}1 %0 must not return a value
%0 cannot use 'super' because it is a root class
rvalue reference type %0 is not allowed in exception specification
sampler_t variable required - got %0
sampler_t initialization requires 32-bit integer, not %0
second argument to __builtin_call_with_static_chain must be of pointer type
second argument to 'va_arg' is of abstract type %0
second argument to 'va_arg' is of incomplete type %0
%0 causes a section type conflict with %1
cannot use SEH '__try' in a coroutine when C++ exceptions are enabled
cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls
SEH '__try' is not supported on this target
chosen constructor is explicit in copy-initialization
selector element of type %0 cannot be a constant l-value expression
selector element is not a valid lvalue
selector element type %0 is not a valid object
type of setter must be void
initialization is not supported for __shared__ variables.
requested shift is a vector of type %0 but the first operand is not a vector (%1)
index for __builtin_shufflevector must be less than the total number of vector elements
index for __builtin_shufflevector must be a constant integer
invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align}0' to a function type
invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align}0' to an incomplete type %1
invalid application of '%select{sizeof|alignof|typeof}0' to bit-field
application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
%0 does not refer to the name of a parameter pack
%0 does not refer to the name of a parameter pack; did you mean %1?
argument to 'operator<=>' %select{cannot be narrowed from type %1 to %2|evaluates to %1, which cannot be narrowed to type %2}0
specialization of member %q0 does not specialize an instantiated member
explicit specialization of %0 after instantiation
cannot reference member of primary template because deduced class template specialization %0 is %select{instantiated from a partial|an explicit}1 specialization
cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template
forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
static_assert expression is not an integral constant expression
static_assert failed%select{ %1|}0
static_assert failed due to requirement '%0'%select{ %2|}1
function declared in block scope cannot have 'static' storage class
static data member %0 not allowed in anonymous struct
static data member %0 not allowed in local class %1
static data member %0 already has an initializer
cannot cast %0 to %1 via virtual base %2
variables in function scope cannot be declared static
the 'static' modifier for the array size is not legal in new expressions
kernel functions cannot be declared static
'main' is not allowed to be declared static
static declaration of %0 follows non-static declaration
static member %0 cannot be a bit-field
'static' can only be specified inside the class definition
'static' member function %0 overrides a virtual function in a base class
interface type cannot be statically allocated
standard library implementation of %0 is not supported; %select{member '%2' does not have expected form|member '%2' is missing|the type is not trivially copyable|the type does not have the expected form}1
unsupported standard library implementation: 'std::%0' is not a class template
%0 attribute cannot be applied to a declaration
static data member definition cannot specify a storage class
@catch parameter cannot have storage specifier '%0'
storage class specified for a member declaration
existing instance variable %1 for strong property %0 may not be __weak
subscript of pointer to function type %0
subscript of pointer to incomplete type %0
subscript requires size of interface %0, which is not constant for this architecture and platform
use of '__super' inside a lambda is unsupported
'%0' parameter must have pointer%select{| to unqualified pointer}1 type; type here is %2
'swift_error_result' parameter must follow 'swift_context' parameter
'swift_indirect_result' parameters must be first parameters of function
'%0' parameter can only be used with swiftcall calling convention
switch condition type %0 requires explicit conversion to %1
switch condition has incomplete class type %0
cannot jump from switch statement to this case label
multiple conversions from switch condition type %0 to an integral or enumeration type
@synthesize not allowed in a category's implementation
@synthesize not allowed on a class property %0
synthesized property with variable size type %0 requires an existing instance variable
cannot synthesize weak property in file using manual reference counting
cannot synthesize weak property because the current deployment target does not support weak references
invalid transaction abort code
definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
%select{type tag|argument}0 index %1 is greater than the number of arguments specified
implicit declaration introduced by elaborated type conflicts with a %select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}0 of the same name
%select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}1 %0 cannot be referenced with a %select{struct|interface|union|class|enum}2 specifier
friend type templates must use an elaborated type
ambiguous constructor call when %select{copying variable|copying parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
%select{copying variable|copying parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor
copying a temporary object of incomplete type %0
no viable constructor %select{copying variable|copying parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
address taken in non-type template argument for template parameter of reference type %0
deduced incomplete pack %0 for template parameter %1
non-type template argument refers to non-static data member %0
%select{too few|too many}0 template arguments for %select{class template|function template|variable template|alias template|template template parameter|template}1 %2
sorry, non-type template argument of pointer-to-member type %1 that refers to member %q0 of a different class is not supported yet
non-type template argument refers to non-static member function %0
template argument for non-type template parameter must be an expression
template argument for template template parameter must be a class template%select{| or type alias template}0
template argument for template type parameter must be a type
template argument for template type parameter must be a type; did you forget 'typename'?
non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
template argument for non-type template parameter is treated as function type %0
non-type template argument of type %0 is not a constant expression
non-type template argument for template parameter of pointer type %0 must have its address taken
non-type template argument of type %0 cannot be converted to a value of type %1
non-type template argument does not refer to any declaration
non-type template argument of type %0 is not an integral constant expression
non-type template argument of type %0 must have an integral or enumeration type
non-type template argument does not refer to an object or function
non-type template argument is not a pointer to member constant
template argument does not refer to a class or alias template, or template template parameter
non-type template argument refers to %select{function|object}0 %1 that does not have linkage
template argument is the type of an unresolved overloaded function
reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
non-type template argument of reference type %0 is not an object
template template argument has different template parameters than its corresponding template template parameter
non-type template argument refers to thread-local object
null non-type template argument must be cast to template parameter type %0
null non-type template argument of type %0 does not match template parameter of type %1
associated constraints differ in template redeclaration
template name refers to non-type template %0
templates cannot be declared inside of a local class
%select{implicit|explicit}0 instantiation of undefined template %1
%select{implicit|explicit}0 instantiation of template %1 within its own definition
missing 'template' keyword prior to dependent template name '%0%1'
'%0%1' instantiated to a class template, not a function template
%0 following the 'template' keyword does not refer to a template
templates must have C++ linkage
member %0 declared as a template
extraneous 'template<>' in declaration of member %0
use of %select{class template|function template|variable template|alias template|template template parameter|template}0 %1 requires template arguments
a non-type template parameter cannot have type %0
template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
templates can only be declared in namespace or class scope
template parameter missing a default argument
template parameter redefines default argument
template parameter has a different kind in template %select{|template parameter }0redeclaration
%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration
template parameter list matching the non-templated nested type %0 should be empty ('template<>')
template parameter pack cannot have a default argument
template parameter pack must be the last template parameter
declaration of %0 shadows template parameter
default template argument not permitted on a friend template
cannot add a default template argument to the definition of a member of a class template
%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1
nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
recursive template instantiation exceeded maximum depth of %0
cannot declare an explicit specialization in a friend
explicit specialization of %0 in function scope
default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
extraneous template parameter list in template specialization or out-of-line template definition
template specialization declaration cannot be a friend
template specialization requires 'template<>'
template specialization or definition requires a template parameter list corresponding to the nested type %0
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3
can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
extraneous 'template<>' in declaration of %0 %1
template template parameter must have its own template parameters
a typedef cannot be a template
cannot declare a class template with no name
extraneous 'template<>' in declaration of variable %0
tentative definition has type %0 that is never completed
'this' cannot be %select{implicitly |}0captured in this context
'this' cannot be%select{| implicitly}0 used in a static member function declaration
initializer for thread-local variable must be a constant expression
'%0' variables must have global storage
thread-local declaration of %0 follows non-thread-local declaration
type of thread-local variable has non-trivial destruction
thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
thread-local storage is not supported for the current target
cannot throw an object of abstract type %0
cannot throw object of incomplete type %0
cannot throw pointer to object of incomplete type %0
alignment (%0) of thread-local variable %1 is greater than the maximum supported alignment (%2) for a thread-local variable on this target
only one element declaration is allowed
trailing return type may not be nested within parentheses
function with trailing return type must specify return type 'auto', not %0
%0 cannot be defined in a type alias template
%0 cannot be defined in a condition
%0 cannot be defined in an enumeration
types may not be defined in a for range declaration
%0 cannot be defined in a parameter type
%0 cannot be defined in the result type of a function
%0 cannot be defined in a type specifier
type of property %0 in class extension does not match property type in primary class
a parameter pack may not be accessed at an out of bounds index
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer
%0 is not supported on this target
address of %select{bit-field|vector element|property expression|register variable}0 requested
taking the address of a destructor
taking the address of a temporary object of type %0
conversion %diff{from $ to $|between types}0,1 is ambiguous
cannot assign to 'self' outside of a method in the init family
cannot assign to 'self' in a class method
arithmetic on a pointer to an incomplete type %0
fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this
array type %0 is not assignable
%select{cannot assign to return value because function %1 returns a const value|cannot assign to variable %1 with const-qualified type %2|cannot assign to %select{non-|}1static data member %2 with const-qualified type %3|cannot assign to non-static data member within const member function %1|cannot assign to %select{variable %2|non-static data member %2|lvalue}1 with %select{|nested }3const-qualified data member %4|read-only variable is not assignable}0
value of type %0 is not contextually convertible to 'bool'
ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
floating point classification requires argument of floating point type (passed in %0)
called object type %0 is not a function or function pointer
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
cast to incomplete type %0
cast to union type from type %0 not present in union
'__builtin_choose_expr' requires a constant expression
comparison of distinct block types%diff{ ($ and $)|}0,1
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
used type %0 where integer or floating point type is required
used type %0 where floating point type is not allowed
used type %0 where arithmetic or pointer type is required
incompatible operand types%diff{ ($ and $)|}0,1
non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
__ptrauth qualification mismatch%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
value of type %0 is not implicitly convertible to %1
conversion from %0 to %1 is not allowed in a converted constant expression
conversion from %0 to %1 in converted constant expression would bind reference to a temporary
variable has incomplete type %0
conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
vector is not assignable (contains duplicate components)
used type %0 where integer is required
operand of type %0 where arithmetic or pointer type is required
fields must have a constant size: 'variable length array in structure' extension will never be supported
cannot %select{decrement|increment}1 value of type %0
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes pointer-authentication of pointee type
definition of variable with array type needs an explicit size or an initializer
incomplete definition of type %0
incomplete type %0 is not assignable
indirection requires pointer operand (%0 invalid)
cannot take the address of an rvalue of type %0
extra '&' taking address of overloaded function
invalid operands to binary expression (%0 and %1)
pointer to function type %0 may not be 'restrict' qualified
restrict requires a pointer or reference (%0 is invalid)
restrict requires a pointer or reference
instance variables must have a constant size
logical expression with vector %select{type %1 and non-vector type %2|types %1 and %2}0 is only supported in C++
assignment to cast is illegal, lvalue casts are not supported
member reference type %0 is not a pointer
%0 does not have a member named %1
%0 does not have a member named %1; did you mean %2?
member reference base type %0 is not a structure or union
member reference type %0 is %select{a|not a}1 pointer; did you mean to use '%select{->|.}1'?
cannot refer to type member %0 in %1 with '%select{.|->}2'
cannot refer to member %0 in %1 with '%select{.|->}2'
%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type
array size is negative
non-object type %0 is not assignable
no viable conversion%select{%diff{ from $ to $|}1,2|%diff{ from returned value of type $ to function return type $|}1,2}0
no viable conversion%diff{ from $ to incomplete type $|}0,1
%select{comparison between %diff{ ($ and $)|}0,1|arithmetic operation with operands of type %diff{ ($ and $)|}0,1|conditional operator with the second and third operands of type %diff{ ($ and $)|}0,1}2 which are pointers to non-overlapping address spaces
ordered comparison between pointer and zero (%0 and %1)
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
arithmetic on%select{ a|}0 pointer%select{|s}0 to void
illegal storage class on file-scoped variable
illegal storage class on function
statement requires expression of integer type (%0 invalid)
statement requires expression of scalar type (%0 invalid)
%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1
array subscript is not an integer
subscripted value is not an array, pointer, or vector
invalid argument type %0 to unary expression
vector operands do not have the same number of elements (%0 and %1)
cannot convert between vector values of different size (%0 and %1)
cannot convert between %select{scalar|vector}0 type %1 and vector type %2 as implicit conversion would cause truncation
cannot convert between vector and non-scalar values (%0 and %1)
zero-length arrays are not permitted in C++
unsupported: typedef changes linkage of anonymous type, but linkage was already computed
typedef member %0 cannot be a bit-field
typedef name must be an identifier
missing 'typename' prior to dependent type name '%0%1'
missing 'typename' prior to dependent type template name '%0%1'
no type named %0 in %1
no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
failed requirement '%0'; 'enable_if' cannot be used to disable this declaration
typename specifier refers to non-type member %0 in %1
typename specifier refers to a dependent using declaration for a value %0 in %1
%0 is unavailable
%0 is unavailable in ARC
%0 is unavailable: %1
%0 has unknown return type; cast the call to its declared return type
no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
%0 has unknown type; cast it to its declared type to use it
declaration of %0 is missing in %1 class
use of undeclared label %0
definition of class %0 must be available to use Objective-C %select{array literals|dictionary literals|numeric literals|boxed expressions|string literals}1
cannot find protocol declaration for %0
cannot find protocol declaration for %0; did you mean %1?
use of undeclared %0
use of undeclared %0; did you mean %1?
use of undeclared identifier %0
use of undeclared identifier %0; did you mean %1?
cannot find interface declaration for %0; did you mean %1?
cannot find interface declaration for %0, superclass of %1
cannot find interface declaration for %0, superclass of %1; did you mean %2?
inline variable %q0 is not defined
%select{function|variable}0 %q1 is used but not defined in this translation unit, and cannot be defined in any other translation unit because its type does not have linkage
cannot determine underlying type of incomplete enumeration type %0
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains%plural{0: an|:}1 unexpanded parameter pack%plural{0:|1: %2|2:s %2 and %3|:s %2, %3, ...}1
friends can only be classes or functions
unexpected interface name %0: expected expression
unexpected namespace name %0: expected expression
unexpected type name %0: expected expression
cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 cannot use copy assignment operator
%select{constructor for %1|implicit default constructor for %1|cannot use constructor inherited from %1:}0 must explicitly initialize the %select{reference|const}2 member %3
unions cannot be base classes
union member %0 has reference type %1
the address of a declaration with unknown type can only be cast to a pointer type
address-of operator cannot be applied to a call to a function with unknown return type
function %0 with unknown type must be given a function type
variable %0 with unknown type cannot be given a function type
unknown %0 attribute
no type named %0 in %1; did you mean %select{|simply }2%3?
unknown receiver %0; did you mean %1?
unknown %select{type|class}1 name %0; did you mean %2?
unknown type name %0
unknown type name %0; did you mean %1?
must explicitly qualify name of member function when taking its address
call to unsupported expression with unknown type
%0 has unknown type, which is not supported for this kind of declaration
unsupported expression with unknown type
cannot cast %0 to its %select{private|protected}2 base class %1
illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
use of default argument to function %0 that is declared later in class %1
must use '%1' tag to refer to type %0%select{| in this scope}2
use of %0 with tag type that does not match previous declaration
using declaration cannot refer to class member
using declaration cannot refer to a namespace
using declaration cannot refer to a scoped enumerator
target of using declaration conflicts with declaration already in scope
declaration conflicts with target of using declaration already in scope
using declaration cannot refer to a constructor
%0 is not a direct base of %1, cannot inherit constructors
using declaration cannot refer to a destructor
cannot befriend target of using declaration
using declaration refers to its own class
using declaration refers into '%0', which is not a base class of %1
using declaration in class refers into '%0', which is not a class
redeclaration of using declaration
using declaration pack expansion at block scope produces multiple values
using declaration cannot refer to a template specialization
dependent using declaration resolved to type without 'typename'
no namespace named %0 in %1; did you mean %select{|simply }2%3?
no namespace named %0; did you mean %1?
%select{|member}0 using declaration %1 instantiates to an empty pack
using declaration requires a qualified name
'typename' keyword used on a non-type
cannot call operator __uuidof on a type with multiple GUIDs
cannot call operator __uuidof on a type with no GUID
CUDA device code does not support va_arg
'va_start' cannot be used in a captured statement
'va_start' used in function with fixed args
'va_start' cannot be used outside a function
'va_start' used in %select{System V|Win64}0 ABI function
array types cannot be value-initialized
variable concept declaration must be initialized
variable template partial specialization %0 cannot be redefined
no variable template matches%select{| partial}0 specialization
no variable template matches specialization; did you mean to use %0 as function template instead?
declared type of variable concept must be 'bool'
%select{variable|static data member}0 instantiated with function type %1
variable-sized object may not be initialized
variable with '%0' attribute cannot have an initializer
'new' cannot allocate object of variably modified type %0
non-type template parameter of variably modified type %0
variably modified type %0 cannot be used as a template argument
'typeid' of variably modified type %0
CUDA device code does not support variadic functions
first two arguments to %0 must have the same type
first two arguments to %0 must be vectors
'vec_step' requires built-in scalar or vector type, %0 invalid
%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)
use of vector element type %0 requires cl_APPLE_bool_vec extension to be enabled
%0 index '%1' is used more than once
unions cannot have virtual functions
'virtual' cannot be specified on member function templates
'virtual' can only appear on non-static member functions
'virtual' can only be specified inside the class definition
variable length array declaration cannot have 'extern' linkage
variable length array declaration cannot have 'static' storage duration
variable length array declaration not allowed at file scope
variable length array cannot be formed during template argument deduction
variable length arrays are not supported for the current target
variably modified type declaration cannot have 'extern' linkage
variably modified type declaration not allowed at file scope
function declaration cannot have variably modified type
'void' must be the first and only parameter if specified
'void' as parameter must not have type qualifiers
argument %0 to %1 must be a 2-bit unsigned literal (i.e. 0, 1, 2 or 3)
existing instance variable %1 for __weak property %0 must be __weak
sampler type cannot be used with the __local and __global address space qualifiers
variables defined in the threadgroup address space can only be declared in kernel functions
invalid rounding argument
scale argument must be 1, 2, 4, or 8
asm-specifier for input or output variable conflicts with asm clobber list
initializer for aggregate is not a compile-time constant
anonymous types declared in an anonymous %select{struct|union}0 are an extension
types declared in an anonymous %select{struct|union}0 are a Microsoft extension
anonymous %select{struct|union}0 cannot be '%1'
anonymous unions are a C11 extension
initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
parenthesized initialization of a member array is a GNU extension
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
ISO C++ standards before C++17 do not allow new expression for type %0 to use list-initialization
'auto' type specifier is a C++11 extension
ISO C++ does not allow %select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 because it casts away qualifiers, even though the source and destination types are unrelated
anonymous structs are a C11 extension
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature
'trivial_abi' cannot be applied to %0
cast between pointer-to-function and pointer-to-object is an extension
%select{case value|enumerator value|non-type template argument|array size|constexpr if condition}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1
complex initialization specifying real and imaginary components is an extension
use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension
multiple return statements in constexpr function is a C++14 extension
constexpr %select{function|constructor}0 never produces a constant expression
variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension
type definition in a constexpr %select{function|constructor}0 is a C++14 extension
use of the %0 attribute is a C++14 extension
use of the %0 attribute is a C++17 extension
decomposition declarations are a C++17 extension
ISO C++17 does not permit structured binding declaration in a condition
default initialization of an object of const type %0%select{| without a user-provided default constructor}1 is a Microsoft extension
cannot delete expression with pointer-to-'void' type %0
ISO C++11 does not allow conversion from string literal to %0
designated initializers are a C99 feature
duplicate '%0' declaration specifier
ISO C++17 does not allow dynamic exception specifications
empty %select{struct|union}0 is a GNU extension
befriending enumeration type %0 is a C++11 extension
enumeration values exceed range of largest integer
ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
incremented enumerator value %0 is not representable in the largest integer type
explicit capture of 'this' with a capture default of '=' is a C++2a extension
ambiguous use of internal linkage declaration %0 defined in multiple modules
explicit conversion functions are a C++11 extension
duplicate explicit instantiation of %0 ignored as a Microsoft extension
qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
explicit specialization cannot have a storage class
expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
%0 may not be used as an array element due to flexible array member
%0 may not be nested in a struct due to flexible array member
flexible array initialization is a GNU extension
flexible array member %0 in a union is a GNU extension
flexible array member %0 in a union is a Microsoft extension
'begin' and 'end' returning different types (%0 and %1) is a C++17 extension
ISO C forbids forward references to 'enum' types
redeclaration of already-defined enum %0 is a GNU extension
use of identifier %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
complex numbers are an extension in a freestanding C99 implementation
unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
anonymous structs are a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
subscript of a pointer to void is a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
jump from this goto statement to its label is a Microsoft extension
imaginary constants are a GNU extension
function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
implicit declaration of function %0 is invalid in %select{C99|OpenCL}1
implicitly declaring library function '%0' with type %1
in-class initializer for static data member of type %0 is a GNU extension
in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
ISO C++17 does not allow incrementing expression of type bool
initialized lambda captures are a C++14 extension
constant expression evaluates to %0 which cannot be narrowed to type %1
type %0 cannot be narrowed to %1 in initializer list
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
inline variables are a C++17 extension
ISO C does not support '~' for complex conjugation of %0
complex integer types are a GNU extension
ISO C does not support '++'/'--' on complex integer type %0
static %select{function|variable}0 %1 is used in an inline function with external linkage
return type of 'main' is not 'int'
ISO C++ does not allow 'main' to be used by a program
too many braces around scalar initializer
declaration specifier missing, defaulting to 'int'
type specifier missing, defaults to 'int'
ISO C90 forbids mixing declarations and code
import of C++ module '%0' appears within extern "C" language linkage specification
redundant #include of module '%0' appears within %1
accessing inaccessible direct base %0 of %1 is a Microsoft extension
anonymous %select{structs|unions}0 are a Microsoft extension
static_cast between pointer-to-function and pointer-to-object is a Microsoft extension
using the undeclared type %0 as a default template argument is a Microsoft extension
non-type template argument containing a dereference operation is a Microsoft extension
explicit constructor calls are a Microsoft extension
forward references to 'enum' types are a Microsoft extension
implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3 is a Microsoft extension
template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
'mutable' on a reference type is a Microsoft extension
lookup of %0 in member access expression is ambiguous; using member of %1
use of enumeration in a nested name specifier is a C++11 extension
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
when type is in parentheses, array cannot have dynamic size
declaration does not declare anything
%select{struct|union}0 without named members is a GNU extension
non-class friend type %0 is a C++11 extension
'main' is not allowed to be declared _Noreturn
using extended field designator is an extension
offset of on non-POD type %0
offset of on non-standard-layout type %0
vector component name '%0' is an OpenCL version 2.2 feature
replacement function %0 cannot be declared 'inline'
out-of-line declaration of a member must be a definition
ISO C++ specifies that qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context, despite preceding %select{'typename'|'template'}2 keyword
parameter %0 was not declared, defaulting to type 'int'
%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype
%select{class|variable}0 template partial specialization is not more specialized than the primary template
%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used
plain '_Complex' requires a type specifier; assuming '_Complex double'
invoking a pointer to a 'const &' member function on an rvalue is a C++2a extension
predefined identifier is only valid inside function
pseudo-destructors on type void are a Microsoft extension
function definition with pure-specifier is a Microsoft extension
redefinition of typedef %0 is a C11 feature
ISO C++17 does not allow 'register' storage class specifier
friend function %0 retaining previous language linkage is an extension
%select{void function|void method|constructor|destructor}1 %0 should not return a value
void %select{function|method|block}1 %0 should not return void expression
non-void %select{function|method}1 %0 should return a value
C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
no viable constructor %select{copying variable|copying parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
invalid application of '%select{sizeof|alignof|vec_step}0' to a function type
invalid application of '%select{sizeof|alignof|vec_step}0' to a void type
'%0' is not permitted on a declaration of a type
capture of '*this' by copy is a C++17 extension
static_assert with no message is a C++17 extension
static data member %0 in union is a C++11 extension
redeclaring non-static %0 as static is a Microsoft extension
string literal operator templates are a GNU extension
ISO C90 does not allow subscripting non-lvalue array
address non-type template argument cannot be surrounded by parentheses
template argument uses local type %0
non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
template argument uses unnamed type
'template' keyword outside of a template
default template arguments for a function template are a C++11 extension
ISO C forbids taking the address of an expression of type 'void'
method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
C99 forbids casting nonscalar type %0 to the same type
cast to union type is a GNU extension
incompatible operand types (%0 and %1)
pointer type mismatch%diff{ ($ and $)|}0,1
C99 forbids conditional expressions with only one void side
pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types with different sign
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
tentative definition of variable with internal linkage has incomplete non-array type %0
ISO C++ does not allow indirection on operand of type %0
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1) is an extension
ordered comparison between pointer and integer (%0 and %1)
zero size arrays are an extension
typedef requires a name
'typename' occurs outside of a template
use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension
ISO C++ requires a definition in this translation unit for %select{function|variable}0 %q1 because its type does not have linkage
unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
union member %0 has reference type %1, which is a Microsoft extension
use of out-of-scope declaration of %0%select{| whose type is not compatible with that of an implicit declaration}1
using directive refers to implicitly-defined namespace 'std'
field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
variable templates are a C++14 extension
'main' is not allowed to be declared variadic
variable length arrays are a C99 feature
variable length array folded to constant array as an extension
__final is a GNU extension, consider using C++11 final
constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
%select{|implicitly }1declared %select{private|protected}0 here
protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
must name member using the type of the current context %0
can only access this member on an object of type %0
add stubs for missing protocol requirements
call 'std::move' explicitly to avoid copying
call 'std::move' explicitly to avoid copying on older compilers
add a '@synthesize' directive
add a pair of parentheses to declare a variable
candidate function made ineligible by enable_if
declared with %0 attribute here
allocated with 'new%select{[]|}0' here
lookup in the object type %0 refers here
lookup from the current scope refers here
candidate found by name lookup is %q0
inherited from base class %0 here
member found by ambiguous name lookup
because of ambiguity in conversion %diff{of $ to $|between types}0,1
use __bridge to convert directly (no change in ownership)
use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
use __bridge with C-style cast to convert directly (no change in ownership)
use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
field has non-trivial ownership qualification
declaration uses type that is ill-formed in ARC
declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
init method must return a type related to its receiver type
declaration in interface
block will be retained by %select{the captured object|an object strongly retained by the captured object}0
also accessed here
declaration uses __weak, but ARC is disabled
declaration uses __weak, which the current deployment target does not support
array %0 declared here
add 'u8' prefix to form a 'char8_t' string literal
conversion to %select{integral|enumeration}0 type %1 declared here
constraint '%0' is already present here
use constraint modifier "%0"
type %0 is incomplete
setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic
attribute is here
previous %select{unmarked |}0overload of function is here
attribute %0 requires intersection tag '%select{instancing|triangle_data|world_space_data}1'
supported values are %0, %1
supported values are %0, %1, %2
property should be changed to be readwrite
%0 has been explicitly marked %select{unavailable|deleted|deprecated}1 here
return type of 'await_ready' is required to be contextually convertible to 'bool'
explicitly cast the pointer to silence this warning
base class %0 specified here
bit-field is declared here
did you mean to use __block %0?
called by %0
%0 declared here
callee declares array parameter as static here
declaration missing '[[carries_dependency]]' attribute is here
cast expression to void to silence warning
%select{category|class extension}0 conforms to protocol %1 which defines method %2
consider making the bitfield type %select{unsigned|signed}0
consider defining %0 with the '%1' calling convention
class is declared here
explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object
parameter of the 'collapse' clause
compatible type %0 specified here
place parentheses around the assignment to silence this warning
use '==' to turn this assignment into an equality comparison
use '!=' to turn this compound assignment into an inequality comparison
conflicting %0 here
previous return statement is here
member not initialized by constructor
virtual base class declared here
type conversion function declared here
use 'static' to give inline function %0 internal linkage
call to %0 implicitly required by coroutine function here
call to 'await_transform' implicitly required by 'co_await' here
call to '%select{initial_suspend|final_suspend}0' implicitly required by the %select{initial suspend point|final suspend point}0
conflicting __device__ function declared here
candidate template ignored: target attributes do not match
annotate %select{%1|anonymous %1}0 with an availability attribute to silence this warning
this declaration is not a prototype; add 'void' to make it a prototype for a zero-parameter function
declare the parameter __strong or capture a __block __strong variable to keep values alive across autorelease pools
function is a coroutine due to use of '%0' here
declared %select{'returns_nonnull'|'nonnull'}0 here
required by 'require_constant_initialization' attribute here
during template argument deduction for %select{class|variable}0 template %select{partial specialization |}1%2 %3
deduction guide declared %0 by intervening access specifier
member template declared %0 here
in instantiation of default argument for '%0' required here
default argument declared here
in instantiation of default function argument expression for '%0' required here
%0 defined here
conversion to pointer type %0
qualify call to silence this warning
%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3
copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because all %select{data members|data members of an anonymous union member}2 are const-qualified
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because field %2 of %select{reference|const-qualified}4 type %3 would not be initialized
virtual destructor requires an unambiguous, accessible 'operator delete'
%select{default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by}0 %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|%select{default|corresponding|default|default|default}4 constructor}0|destructor}5%select{||s||}4
candidate ignored: %select{not a function template|not a member of the enclosing namespace; did you mean to explicitly qualify the specialization?}0
template parameter is used in default argument declared here
must qualify identifier to find this declaration in dependent base class
add an explicit capture of 'this' to capture '*this' by reference
type %0 is declared here
due to %0 being dllexported%select{|; try compiling in C++11 mode}1
element %0 also has value %1
put the semicolon on a separate line to silence this warning
remove parentheses to declare a variable
change this ',' to a ';' to call %0
replace parentheses with an initializer to declare a variable
jump enters lifetime of block which captures a destructible C++ object
jump enters lifetime of block which captures a C struct that is non-trivial to destroy
jump enters lifetime of block which strongly captures a variable
jump enters lifetime of block which weakly captures a variable
enum %0 was explicitly specialized here
remove extraneous parentheses around the comparison to silence this warning
use '=' to turn this equality comparison into an assignment
declared here%select{ in module '%1'|}0
place parentheses around comparison expression to evaluate it first
use '%0' instead
jump exits scope of __block variable
jump exits lifetime of block which captures a destructible C++ object
jump exits lifetime of block which captures a C struct that is non-trivial to destroy
jump exits lifetime of block which strongly captures a variable
jump exits lifetime of block which weakly captures a variable
jump exits scope of variable with __attribute__((cleanup))
jump exits catch block
jump exits try block
jump exits scope of variable with non-trivial destructor
jump exits autoreleasepool block
jump exits @catch block
jump exits @finally block
jump exits scope of __strong variable
jump exits @synchronized block
jump exits @try block
jump exits scope of __weak variable
jump exits __except block
jump exits __finally block
jump exits __try block
jump exits scope of lifetime-extended temporary with non-trivial destructor
explicit %select{constructor|deduction guide}0 declared here
explicit instantiation candidate function %q0 template here %1
explicit instantiation definition is here
explicit instantiation refers here
explicit specialization declared here
while substituting explicitly-specified template arguments into function template %0 %1
'template<>' header not required for explicitly-specialized class %0 declared here
extern "C" language linkage specification begins here
declared %select{in global scope|with C language linkage}0 here
did you forget ';'?
field designator refers here
add missing switch cases
final overrider of %q0 in %1
initialized flexible array member %0 is here
selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
did you mean to use '%0'?
treat the string as an argument to avoid this
format string is defined here
forward declaration of class here
forward declaration of template entity is here
found near match '%0'
from 'diagnose_if' attribute on %0:
add enclosing parentheses to perform a function-style cast
did you mean %0?
while substituting deduced template arguments into function template %0 %1
in instantiation of function template specialization %q0 requested here
function template %q0 matches specialization %1
suffix with parentheses to turn this into a function call
prefix with the address-of operator to silence this warning
or because setter is declared here, but no getter method %0 is found
inline assembly label %0 declared here
Guarded_by declared here.
hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%2 vs %3)|: different exception specifications}1
type declaration hidden
declaration hides type
field of illegal %select{type|pointer type}0 %1 declared here
class implementation is declared here
when implemented by class %0
while checking implicit 'delete this' for virtual destructor
implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 inferred target collision: call to both %select{__device__|__global__|__host__|__host__ __device__}1 and %select{__device__|__global__|__host__|__host__ __device__}2 members
%0 is an implicit parameter
explicitly defaulted function was implicitly deleted here
in implicit initialization of binding declaration %0
add 'constexpr'
default member initializer declared here
while declaring the implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %0
when looking up '%select{begin|end}0' function for range expression of type %1
in implicit initialization of %select{array element %1 with omitted initializer|field %1 with omitted initializer|trailing array elements in runtime-sized array new}0
in initialization of temporary of type %0 created to list-initialize this reference
include the header <%0> or explicitly provide a declaration for '%1'
conformance of forward class %0 to protocol %1 can not be confirmed
possible target of indirect goto statement
consider using __builtin_trap() or qualifying pointer with 'volatile'
use '|=' to turn this inequality comparison into an or-assignment
insert an explicit cast to silence this issue
initializing field %0 with default member initializer
insert 'break;' to avoid fall-through
insert '%0;' to silence this warning
add an explicit instantiation declaration to suppress this warning if %q0 is explicitly instantiated in another translation unit
(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
%select{implicit|explicit}0 instantiation first required here
it delegates to
instance variable is declared here
lambda expression begins here
implicit capture of lambda object due to conversion to block pointer here
%select{%select{reference|'std::initializer_list'}0 member|member with %select{reference|'std::initializer_list'}0 subobject}1 declared here
local declaration nearly matches
type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
%select{via initialization of|binding reference}0 variable %select{%2 |}1here
the other acquisition of %0 '%1' is here
%0 acquired here
use '%0' for a bitwise operation
remove constant to silence this warning
add parentheses after the '!' to evaluate the %select{comparison|bitwise operator}0 first
add parentheses around left hand side expression to silence this warning
%select{decremented|incremented}0 here
change return type to 'int'
remove '_Noreturn'
member is declared here
member %0 declared here
member declaration does not match because it %select{is|is not}0 const qualified
member declaration nearly matches
type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
member %0 first declared here
'->' applied to return value of the operator->() declared here
in implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 for %1 first required here
explicitly cast the argument to size_t to silence this warning
did you mean to compare the result of %0 instead?
cannot use underlying type %0 for %select{attribute index expression|function constant predicate}1
declaration with attribute %0 of type %1 here
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1 when used for %select{input|output}2 declaration
invalid non-const buffer pointee type %0
only valid address space qualification is threadgroup
valid address space qualifications are device and constant
valid address space qualifications are device, constant, and threadgroup
inconsistent type %0 for declaration with 'color(%1)' attribute here
'color' attribute must be made explicit
conflicting declaration with %0 attribute here
conflicting implicit color declaration here
declaration with duplicate attribute user(%0) here
duplicated declaration with %0 attribute here
duplicated declaration with 'color(%0)' attribute here
duplicated declaration with 'color(%0)' attribute and 'index(%1)' attribute here
duplicated %select{name|user-defined name}1 '%0' for fragment input declaration
duplicated %select{name|user-defined name}1 '%0' for vertex output declaration
field with illegal attribute %0 declared here
field with missing attribute %0 declared here
derived classes are not allowed in buffer pointee type
type %0 cannot be used in buffer pointee type
cannot use underlying type %0 in buffer pointee type
derived class %0 cannot be used in explicit layout imageblock data
empty struct or class cannot be used in explicit layout imageblock data
union %0 cannot be used in explicit layout imageblock data
type %0 cannot be used in indirect argument types
derived classes are not allowed for payload declaration
type %0 cannot be used in payload struct
derived classes are not allowed in struct of resources/colors
type %0 cannot be used in struct of resources/colors
type %0 cannot be used in type for explicit layout imageblock data
in buffer declaration %0
in struct of resources parameter '%0' declared here
invalid %0 attribute for %select{input|output}1 declaration
field of the view aliases with %0 through the master
field of the view does not correspond to any field of the master
field of the view must have %0 type corresponding to master
invalid type %0 for input declaration
field %select{must not|must}0 have 'raster_order_group' attribute
for bicubic filtering the min_filter and mag_filter values must be 'bicubic', and the mip_filter value must be 'none'
cannot use 'clamp_to_zero' address mode with a border_color different than 'transparent_black'
if 'coord::pixel' is specified the min_filter and mag_filter values must be the same, the mip_filter and compare_func values must be 'none', and address modes must be either 'clamp_to_zero', %select{or 'clamp_to_edge'|'clamp_to_edge', or 'clamp_to_border'}0
invalid type %0 for %select{input|output}2 declaration with attribute %1
attribute %0 set location to %1, but minimum is %2
nested usage of struct of colors %0 declared here
non-constexpr attribute index for %0 attribute requires Metal language standard %1 or higher
non zero blend source indices are allowed only for 'color(0)' attribute
overlap between imageblocks and color attachments
cannot find unambiguous %select{copy constructor from '%2' address space to '%1' address space|copy assignment operator from '%2' address space to '%1' address space|destructor for '%1' address space}3 for %q0
cannot find any viable %select{copy constructor from '%2' address space to '%1' address space|copy assignment operator from '%2' address space to '%1' address space|destructor for '%1' address space}3 for %q0
%select{copy constructor from '%2' address space to '%1' address space|copy assignment operator from '%2' address space to '%1' address space|destructor for '%1' address space}3 of %q0 is deleted
%select{copy constructor from '%2' address space to '%1' address space|copy assignment operator from '%2' address space to '%1' address space|destructor for '%1' address space}3 of %q0 is not public
%select{copy constructor from '%2' address space to '%1' address space|copy assignment operator from '%2' address space to '%1' address space|destructor for '%1' address space}3 of %q0 is not trivial
previous declaration with attribute %0 here
derived classes are not allowed as return type declaration
missing output declaration with attribute '%0'
derived classes are not allowed for stage_in declaration
cannot find unambiguous %select{copy constructor|destructor}1 for %q0
cannot find any viable %select{copy constructor|destructor}1 for %q0
%select{copy constructor|destructor}1 of %q0 is deleted
%select{copy constructor|destructor}1 of %q0 is not public
invalid access qualifier '%select{sample|read|write|read_write}0' for %select{texture|array of textures}1 declaration
too many imageblock declarations, expected at most %0, have %1
consider using vector construction syntax
method %0 declared here
compiler has implicitly changed method %0 return type
method %0 is used for the forward class
%0 begins here
function multiversioning caused by this declaration
namespace %0 defined here
consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant
consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants
next field declaration is here
next %select{instance variable declaration|synthesized instance variable}0 is here
non-deducible template parameter %0
not-yet-instantiated member is declared here
%0 is not literal because it has base class %1 of non-literal type
%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2
incomplete type %0 is not a literal type
lambda closure types are non-literal types before C++17
%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
%0 is not literal because it has a non-trivial destructor
%0 is not literal because it has a user-provided destructor
%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type
non-template declaration found by name lookup
non-usual %0 declared here
non-templated declaration is here
because it has a default argument
field is non-trivial to %select{copy|default-initialize}0
because type %0 has a virtual %select{member function|base class}1
because field %0 has an initializer
because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
because %select{base class of |field of |}0type %1 has no default constructor
because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
because its parameter is %diff{of type $, not $|of the wrong type}2,3
because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
because it is a variadic function
destructor for %0 is not trivial because it is virtual
declaration missing '[[noreturn]]' attribute is here
%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1
insert '%select{_Nonnull|_Nullable|_Null_unspecified}0' if the %select{pointer|block pointer|member pointer|array parameter}1 %select{should never be null|may be null|should not declare nullability}0
%0 specified here
use nullability type specifier %0 to affect the innermost pointer type of %1
method marked as designated initializer of the class here
use 'isEqual:' instead
%select{first|second|third}0 parameter has unexpected type %1 (should be %2)
method returns unexpected type %0 (should be an object type)
add a super class to fix this problem
type parameter %0 declared here
method %0 that returns %1 declared here
%select{expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression}0
'%0' clause used here
%select{expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression}0
%select{expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of '+', '*', '-', '/', '&', '^', '%|', '<<', or '>>' built-in operations|expected in right hand side of expression}0
as specified in %select{'collapse'|'ordered'|'collapse' and 'ordered'}0 clause%select{||s}0
%select{|previous }0'hint' clause with value '%1'
%select{|previous }0directive with no 'hint' clause specified
defined as %0
implicitly determined as %0
loop step is expected to be %select{negative|positive}0 due to this condition
%select{statement|directive}0 outside teams construct here
nested teams construct here
'nowait' clause is here
'ordered' clause with specified parameter
%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose 'omp %2' directive into a parallel or another task region?}1
previous 'critical' region starts here
'%0' clause is specified here
previous clause with directive name modifier specified here
previously marked as task_reduction with different reduction operation
previously referenced here
predetermined as a firstprivate in a task construct here
previously declared '%0' here
use -foperator-arrow-depth=N to increase 'operator->' limit
'operator->' declared here produces an object of type %0
(skipping %0 'operator->'%s0 in backtrace)
parameter of overridden method is annotated with __attribute__((noescape))
overridden method is here
overridden virtual function is here
built-in candidate %0
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %3}1%select{| has different class%diff{ (expected $ but has $)|}5,6| has different number of parameters (expected %5 but has %6)| has type mismatch at %ordinal5 parameter%diff{ (expected $ but has $)|}6,7| has different return type%diff{ ($ expected but has $)|}5,6| has different qualifiers (expected %5 but found %6)| has different exception specification}4
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: requires%select{ at least| at most|}3 %4 argument%s4, but %5 %plural{1:was|:were}5 provided
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: %select{requires at least|allows at most single|requires single}3 argument %4, but %plural{0:no|:%5}5 arguments were provided
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: address space mismatch in %select{%ordinal6|'this'}5 argument (%3), parameter type must be %4
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5 under ARC
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{convert from|convert from|bind}3 %select{base class pointer|superclass|base class object of type}3 %4 to %select{derived class pointer|subclass|derived class reference}3 %5 for %ordinal6 argument
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4 qualifier%select{||s||s|s|s}4
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: 'this' argument has type %3, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}4
candidate template ignored: failed template argument deduction
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__weak|__strong}4 ownership, but parameter has %select{no|__weak|__strong}5 ownership
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: cannot convert initializer list argument to %4
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: expects an l-value for %select{%ordinal4 argument|object argument}3
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: no overload of %4 matching %3 for %ordinal5 argument
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}5 ownership
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: call to %select{__device__|__global__|__host__|__host__ __device__|invalid}3 function from %select{__device__|__global__|__host__|__host__ __device__|invalid}4 function
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose __unaligned qualifier
candidate template ignored: deduced type %diff{$ of %select{|element of }4%ordinal0 parameter does not match adjusted type $ of %select{|element of }4argument|of %select{|element of }4%ordinal0 parameter does not match adjusted type of %select{|element of }4argument}1,2%3
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}3
candidate template ignored: disabled by %0%1
candidate disabled due to OpenCL extension
candidate disabled: %0
candidate template ignored: requirement '%0' was not satisfied%1
candidate template ignored: invalid explicitly-specified argument for template parameter %0
candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter
candidate address cannot be taken because parameter %0 has pass_object_size attribute
candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value
candidate template ignored: couldn't infer template argument %0
candidate template ignored: deduced too few arguments for expanded pack %0; no argument for %ordinal1 expanded parameter in deduced argument pack %2
candidate template ignored: deduced conflicting %select{types|values|templates}0 for parameter %1%diff{ ($ vs. $)|}2,3
candidate template ignored: deduced values %diff{of conflicting types for parameter %0 (%1 of type $ vs. %3 of type $)|%1 and %3 of conflicting types for parameter %0}2,4
constructor from base class %0 inherited here
candidate %select{constructor|template}0 ignored: inherited constructor cannot be used to %select{copy|move}1 object
candidate template ignored: substitution exceeded maximum template instantiation depth
candidate template ignored: could not match %diff{$ against $|types}0,1
candidate template ignored: could not match %q0 against %q1
candidate template ignored: substitution failure%0%1
candidate template ignored: cannot deduce a type for %0 that would make %2 equal %1
conversion candidate of type %0
remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
declared with index %0 here
passing argument to parameter here
passing argument to parameter %0 here
parameter pack %0 declared here
parameter of type %0 is declared here
%0 has been marked as being introduced in %1 %2 here, but the deployment target is %1 %3
partial specialization matches %0
inline function performs a conversion which is forbidden in ARC
possible target for call
when applied to this declaration
'#pragma clang attribute push' regions ends here
previous '#pragma pack' directive that modifies alignment is here
did you intend to use '#pragma pack (pop)' instead of '#pragma pack()'?
place parentheses around the %0 expression to evaluate it first
place parentheses around the '?:' expression to evaluate it first
place parentheses around the '%0' expression to silence this warning
previous module declaration is here
module loaded from '%0'
previous declaration of class template partial specialization %0 is here
previously declared '%1' here
previous attribute is here
%0 is a builtin with type %1
for type %0
previous explicit instantiation is here
previous initialization %select{|with side effects }0is here%select{| (side effects may not occur at run time)}0
previous inheritance model specified here
previously defined as an alias for %0
previous template specialization is here
previous uuid specified here
did you mean to call the %0 method?
while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
use __attribute__((visibility("hidden"))) attribute instead
property %0 is declared %select{deprecated|unavailable|partial}1 here
property declared here
property synthesized here
jump bypasses setup of __block variable
jump bypasses initialization of variable with __attribute__((cleanup))
jump enters controlled statement of constexpr if
jump bypasses initialization of catch block
jump bypasses initialization of try block
jump enters controlled statement of if available
jump bypasses initialization of variable of non-trivial C struct type
jump bypasses auto release push of @autoreleasepool block
jump bypasses initialization of @catch block
jump enters Objective-C fast enumeration loop
jump bypasses initialization of @finally block
jump bypasses initialization of __strong variable
jump bypasses initialization of @synchronized block
jump bypasses initialization of @try block
jump bypasses initialization of __weak variable
jump bypasses initialization of __except block
jump bypasses initialization of __finally block
jump bypasses initialization of __try block
jump bypasses variable initialization
jump bypasses initialization of non-POD variable
jump bypasses variable with a non-trivial destructor
jump bypasses initialization of variable length array
jump bypasses initialization of VLA type alias
jump bypasses initialization of VLA typedef
protocol is declared here
protocol %0 has no definition
protocol method is here
it could also be property %select{of type %1|without attribute '%1'|with attribute '%1'|with getter %1|with setter %1}0 declared here
qualified call to %0::%1 is treated as a virtual call to %1 due to -fapple-kext
unimplemented pure virtual method %0 in %1
add a variable name to declare a %0 initialized with %1
receiver is instance of class declared here
receiver expression is here
receiver is treated with 'id' type for purpose of method lookup
'%0' included multiple times, additional include site here
'%0' included multiple times, additional include site in header from module '%1'
%select{reference|pointer}0 member declared here
%select{const|reference}0 member %1 will never be initialized
%0 returns a reference
class template declared here
use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0
%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0
%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)
overridden method returns an instance of its class type
remove the call to '%0' since unsigned values cannot be negative
remove call to max function and unsigned zero argument
remove std::move call here
remove parentheses to silence this warning
use function '%0' instead
duplicate %0 index '%1' here
repeated RISC-V 'interrupt' attribute is here
%select{function|method|block}0 has been explicitly marked sentinel here
if you supply your own aligned allocation functions, use -faligned-allocation to silence this diagnostic
attempt to specialize declaration here
explicitly specialized declaration is here
use array indexing to silence this warning
change size argument to be the size of the destination
change the argument to be the free space in the destination buffer minus the terminating null byte
did you mean %select{struct|interface|class}0 here?
class with specified objc_requires_property_definitions attribute is declared here
surrounding namespace with visibility attribute ends here
surrounding namespace with visibility attribute starts here
parenthesize the second argument to silence
%select{parenthesize the third argument|cast the second argument to 'int'}0 to silence
conversion to %select{integral|enumeration}0 type %1
non-type template argument refers to %select{function|object}0 here
non-type template argument refers here
template argument refers to function template %0, here
class template %0 was explicitly specialized here
in instantiation of template class %q0 requested here
class template %0 was instantiated here
template is declared here
%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here
while checking a default template argument used here
in instantiation of enumeration %q0 requested here
in instantiation of exception specification for %0 requested here
declared as a non-template here
in instantiation of member class %q0 requested here
in instantiation of member function %q0 requested here
template non-type parameter has a different type %0 in template argument
previous non-type template parameter with type %0 is here
in instantiation of default member initializer %q0 requested here
template parameter has a different kind in template argument
template parameter is declared here
%select{too few|too many}0 template parameters in template template argument
previous default template argument defined here
previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument
previous template %select{declaration|template parameter}0 is here
use -ftemplate-depth=N to increase recursive template instantiation depth
in instantiation of static data member %q0 requested here
in instantiation of template type alias %0 requested here
unnamed type used in template argument was declared here
in instantiation of variable template specialization %q0 requested here
Thread warning in function %0
%select{destructor|deallocator}0 has a %select{non-throwing|implicit non-throwing}1 exception specification
function declared non-throwing here
%select{alignment|size}0 of first field is %1 bits
%0 is incomplete
%select{function %1 which returns const-qualified type %2 declared here|variable %1 declared const here|%select{non-|}1static data member %2 declared const here|member function %q1 is declared const here|%select{|nested }1data member %2 declared const here}0
%select{first|second}0 operand was implicitly converted to type %1
did you mean to use '.' instead?
use a tag name here to establish linkage prior to definition
referenced member %0 is declared here
enclose %0 in %select{an @available|a __builtin_available}1 check to silence this warning
remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
during field initialization in %select{this|the implicit default}0 constructor
uninitialized reference member is here
%select{uninitialized use occurs|variable is captured by block}0 here
silence by adding parentheses to mark code as explicitly dead
unguarded header; consider using #ifdef guards or #pragma once
use non-reference type %0
use reference type %0 to prevent copying
use 'thread_local' to allow this
use non-reference type %0 to keep the copy or type %1 to prevent copying
used here
used in initialization here
implicit default constructor suppressed by user-declared constructor
%select{|previous }0using declaration
use %select{an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable}0 instead
conflicting declaration
target of using declaration
add 'typename' to treat this using declaration as a type
in value-initialization of type %0 here
variable %0 is declared here
variable %0 is%select{| explicitly}1 captured here
initialize the variable %0 to silence this warning
previous declaration of variable template partial specialization is here
%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0
prior use here
which delegates to
detected while default synthesizing properties in class implementation
widen this field to %0 bits to store all values of %1
within field of type %0 declared here
non-virtual member function marked '%0' hides virtual member %select{function|functions}1
only virtual member functions can be marked '%0'
absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value
abstract class is marked '%select{final|sealed}0'
initializer for virtual base class %0 of abstract class %1 will never be used
access declarations are deprecated; use using declarations instead
type of property %0 does not match type of accessor %1
acquiring %0 '%1' requires negative capability '%2'
%0 '%1' must be acquired before '%2'
Cycle in acquired_before/after dependencies, starting with '%0'
operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true
reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%select{alias|ifunc}2 will always resolve to %0 even if weak definition of %1 is overridden
%select{alias|ifunc}1 will not be in section '%0' but in the same section as the %select{aliasee|resolver}2
second argument to __builtin_alloca_with_align is supposed to be in bits
multiple suitable %0 functions for %1; no 'operator delete' function will be invoked if initialization throws an exception
width of anonymous bit-field (%0 bits) exceeds width of its type; value will be truncated to %1 bit%s1
ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2
performSelector may cause a leak because its selector is unknown
weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
capturing %0 strongly in this block is likely to lead to a retain cycle
assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
assigning retained object to unsafe property; object will be released after assignment
method parameter of type %0 with no explicit ownership
call to function without interrupt attribute could clobber interruptee's VFP registers
array index %0 is past the end of the array (which contains %1 element%s2)
array index %0 is before the beginning of the array
ignored asm label '%0' on automatic variable
value size does not match register size specified by the constraint and modifier
the argument to %0 has side effects that will be discarded
%select{@available|__builtin_available}0 does not guard availability here; use if (%select{@available|__builtin_available}0) instead
specifying 'uuid' as an ATL attribute is deprecated; use __declspec instead
implicit use of sequentially-consistent atomic may incur stronger memory barriers than necessary
memory order argument to atomic operation is invalid
misaligned or large atomic operation may incur significant performance penalty
writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
@protocol is using a forward protocol declaration of %0
'abi_tag' attribute on %select{non-inline|anonymous}0 namespace ignored
consumed analysis attribute is attached to member of class '%0' which isn't marked as consumable
%0 attribute has invalid identifier for base name
%0 attribute has invalid identifier for context name
%0 attribute cannot be applied to this declaration
parameter of %0 attribute must be a Swift function name string
%0 attribute can only be applied to function declarations with prototypes
%0 attribute for getter must not take any parameters besides 'self:'
%0 attribute is missing parameter label clause
%0 attribute cannot specify more than one 'self:' parameter
too %select{few|many}0 parameters in %1 attribute (expected %2; got %3)
%0 attribute has invalid identifier for parameter name
%0 attribute for setter must take one parameter for new value
%0 attribute for 'subscript' must take a 'self:' parameter
%0 attribute for 'subscript' getter cannot take a 'newValue:' parameter
%0 attribute for 'subscript' must take at least one parameter
%0 attribute for 'subscript' must be a getter or setter
%0 attribute for 'subscript' setter cannot take multiple 'newValue:' parameters
%0 attribute for 'subscript' setter must take a 'newValue:' parameter
multiple identical address spaces specified for type
attribute %0 after definition is ignored
%0 attribute parameter %1 is negative and will be ignored
propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template without dll attribute is not supported
redeclaration of %q0 should not add %q1 attribute
explicit instantiation declaration should not be 'dllexport'
definition of dllimport static field
%0 attribute can only be applied to instance variables or properties
%0 attribute ignored
%0 attribute ignored for field of type %1
%0 attribute ignored on function declaration
%0 attribute ignored on inline function
'%0' attribute cannot be specified on a definition
'noescape' attribute ignored on parameter of non-pointer type %0
'nonnull' attribute applied to function with no pointer arguments
'nonnull' attribute when used on parameters takes no arguments
%0 attribute ignored when parsing type
'packed' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang
%0 attribute only applies to a pointer or reference (%1 is invalid)
attribute declaration must precede definition
target does not support 'protected' visibility; using 'default'
%0 attribute only applies to return values that are pointers
%0 attribute only applies to return values that are pointers or references
section attribute is specified on redeclared variable
'sentinel' attribute requires named arguments
'sentinel' attribute only supported for variadic %select{functions|blocks}0
unknown visibility %0
attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
__weak attribute cannot be specified on a field declaration
__weak attribute cannot be specified on an automatic variable when ARC is not enabled
property is assumed atomic when auto-synthesizing the property
readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
'auto' storage class specifier is redundant and incompatible with C++11
auto property synthesis will not synthesize property %0 declared in protocol %1
'auto' deduced as 'id' in declaration of %0
auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention
autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
ignoring availability attribute %select{on '+load' method|with constructor attribute|with destructor attribute}0
only 'unavailable' and 'deprecated' are supported for Swift availability
unknown platform %0 in availability macro
feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
cast from function call of type %0 to non-matching type %1
receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
base class %0 is uninitialized when used here to access %q1
binding reference member %0 to stack allocated %select{variable|parameter}2 %1
binding dereferenced null pointer to reference has undefined behavior
bit-field %0 is not wide enough to store all enumerators of %1
width of bit-field %0 (%1 bits) exceeds the width of its type; value will be truncated to %2 bit%s2
'%0' within '%1'
block captures an autoreleasing out-parameter, which may result in use-after-free bugs
attribute %0 ignored, because it cannot be applied to omitted return type
'%0' qualifier on omitted return type %1 has no effect
switch condition has boolean value
braces around scalar initializer
'break' is bound to loop, GCC binds it to switch
use of unknown builtin %0
call to pure virtual member function %0 has undefined behavior; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
too %select{few|many}0 arguments in call to %1
cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
cannot resolve lock expression
empty case range specified
overflow converting case value to switch condition type (%0 to %1)
cast from %0 to %1 increases required alignment from %2 to %3
cast between incompatible calling conventions '%0' and '%1'; calls through this pointer may abort at runtime
nonnull %select{function call|parameter}0 '%1' will evaluate to 'true' on first encounter
cast of type %0 to %1 is deprecated; use sel_getName instead
cast from %0 to %1 drops %select{const and volatile qualifiers|const qualifier|volatile qualifier}2
cast from %0 to %1 must have all intermediate pointers const qualified to be safe
category is implementing a method which will also be implemented by its primary class
calling convention %0 ignored for this target
%0 calling convention ignored on constructor/destructor
%0 calling convention ignored on variadic function
cannot refer to a non-static member from the handler of a %select{constructor|destructor}0 function try block
input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
%select{class|category}0 %1 does not conform to protocol%plural{1: %3|2:s %3 and %4|3:s %3, %4 and %5|:s %3, %4, %5, ...}2
class method %objcclass0 not found (return type defaults to 'id')
class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
collection expression type %0 may not respond to %1
possible misuse of comma operator here
%select{self-|array }0comparison always evaluates to %select{a constant|%2}1
bitwise comparison always evaluates to %select{false|true}0
comparison of two values with different enumeration types%diff{ ($ and $)|}0,1
comparison of two values with different enumeration types in switch statement%diff{ ($ and $)|}0,1
concatenated NSString literal for an NSArray expression - possibly missing a comma
using the result of an assignment as a condition without parentheses
conflicting distributed object modifiers on parameter type in declaration of %0
conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in declaration of %0
conflicting return type in declaration of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conflicting distributed object modifiers on parameter type in implementation of %0
conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in implementation of %0
conflicting return type in implementation of %0%diff{: $ vs $|}1,2
conversion function converting %0 to its base class %1 will never be used
conversion function converting %0 to itself will never be used
conversion function converting %0 to %1 will never be used
%0 is required to declare the member 'unhandled_exception()' when exceptions are enabled
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to record %2 that is not trivial to %select{primitive-default-initialize|primitive-copy}3
constructor parameter %0 shadows the field %1 of %2
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
multiple return statements in constexpr function is incompatible with C++ standards before C++14
constexpr function with no return statements is incompatible with C++ standards before C++14
variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
initialized lambda captures are incompatible with C++ standards before C++14
variable templates are incompatible with C++ standards before C++14
attribute %0 ignored, because it cannot be applied to a type
'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior
decomposition declarations are incompatible with C++ standards before C++17
inline variables are incompatible with C++ standards before C++17
by value capture of '*this' is incompatible with C++ standards before C++17
static_assert with no message is incompatible with C++ standards before C++17
non-type template parameters declared with %0 are incompatible with C++ standards before C++17
explicit capture of 'this' with a capture default of '=' is incompatible with C++ standards before C++2a
mangled name of %0 will change in C++17 due to non-throwing exception specification in function signature
invoking a pointer to a 'const &' member function on an rvalue is incompatible with C++ standards before C++2a
'char8_t' type specifier is incompatible with C++ standards before C++20
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
'auto' type specifier is incompatible with C++98
cast between pointer-to-function and pointer-to-object is incompatible with C++98
'constexpr' specifier is incompatible with C++98
constructor call from initializer list is incompatible with C++98
delegating constructors are incompatible with C++98
scalar initialized from empty initializer list is incompatible with C++98
befriending enumeration type %0 is incompatible with C++98
enumeration type in nested name specifier is incompatible with C++98
explicit conversion functions are incompatible with C++98
friend declaration naming a member of the declaring class is incompatible with C++98
jump from this goto statement to its label is incompatible with C++98
jump from this indirect goto statement to one of its possible targets is incompatible with C++98
initialization of initializer_list object is incompatible with C++98
use of non-static data member %0 in an unevaluated context is incompatible with C++98
non-class friend type %0 is incompatible with C++98
%select{anonymous struct|union}0 member %1 with a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98
passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
reference initialized from initializer list is incompatible with C++98
substitution failure due to access control is incompatible with C++98
static data member %0 in union is incompatible with C++98
jump from switch statement to this case label is incompatible with C++98
%select{copying variable|copying parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98
redundant parentheses surrounding address non-type template argument are incompatible with C++98
local type %0 as template argument is incompatible with C++98
use of null pointer as non-type template argument is incompatible with C++98
non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
unnamed type as template argument is incompatible with C++98
use of 'template' keyword outside of a template is incompatible with C++98
default template arguments for a function template are incompatible with C++98
use of 'typename' outside of a template is incompatible with C++98
befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
'%0' type specifier is incompatible with C++98
inheriting constructors are incompatible with C++98
ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{temporary %select{whose address is used as value of|%select{|implicitly }2bound to}4 %select{%select{|reference }4member of local variable|local %select{variable|reference}4}1|array backing %select{initializer list subobject of local variable|local initializer list}1}0 %select{%3 |}2will be destroyed at the end of the full-expression
-dealloc is being overridden in a category
declaration of %0 will not be visible outside of this function
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2}1
attribute %0 is ignored, place it after "%select{class|struct|interface|union|enum}1" to apply attribute to type declaration
%plural{1:enumeration value %1 not explicitly handled in switch|2:enumeration values %1 and %2 not explicitly handled in switch|3:enumeration values %1, %2, and %3 not explicitly handled in switch|:%0 enumeration values not explicitly handled in switch: %1, %2, %3...}0
atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
constructor for %0 creates a delegation cycle
%select{delete|destructor}0 called on %1 that is abstract but has non-virtual destructor
'delete' applied to a pointer-to-array type %0 treated as 'delete[]'
deleting pointer to incomplete type %0 may cause undefined behavior
%select{delete|destructor}0 called on non-final %1 that has virtual functions but non-virtual destructor
%0 is deprecated
'deprecated' attribute on anonymous namespace ignored
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared %select{copy %select{assignment operator|constructor}1|destructor}2
implementing deprecated %select{method|class|category}0
%0 may be deprecated because the receiver type is unknown
%0 is deprecated: %1
out-of-line definition of constexpr static data member is redundant in C++17 and is deprecated
'register' storage class specifier is deprecated and incompatible with C++17
conversion from string literal to %0 is deprecated
implicit capture of 'this' with a capture default of '=' is deprecated
%0 overrides a destructor but is not marked 'override'
explicit call to +initialize results in duplicate call to +initialize
instance variable %0 is being directly accessed
explicit call to [super initialize] should only be in implementation of +initialize
body of cpu_dispatch function will be ignored
%q0 redeclared inline; %1 attribute ignored
double precision constant requires cl_khr_fp64, casting to single precision
acquiring %0 '%1' that is already held
duplicate definition of category %1 on interface %0
attribute %0 is already applied with different parameters
attribute %0 is already applied
duplicate code segment specifiers
element %0 has been implicitly assigned %1 which another element has been assigned
multiple declarations of method %0 found and ignored
duplicate protocol definition of %0 is ignored
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4
for loop has empty body
format string is empty
if statement has empty body
empty parentheses interpreted as a function declaration
range-based for loop has empty body
switch statement has empty body
while loop has empty body
overflow in enumeration value
equality comparison with extraneous parentheses
exception of type %0 will be caught by earlier handler
dynamic exception specifications are deprecated
declaration requires an exit-time destructor
expecting %0 '%1' to be held at start of each loop
expecting %0 '%1' to be held at the end of function
explicit instantiation of %0 that occurs after an explicit specialization has no effect
'extern' variable has an initializer
control reaches end of coroutine; which is undefined behavior because the promise type %0 does not declare 'return_void()'
control reaches end of non-void fragment function
control reaches end of non-void function
control reaches end of non-void lambda
control reaches end of non-void vertex function
function declared 'noreturn' should not return
fallthrough annotation in unreachable code
field %0 is uninitialized when used here
enumeration value %0 is out of range of flags in enumeration type %1
magnitude of floating-point constant too large for type %0; maximum is %1
magnitude of floating-point constant too small for type %0; minimum is %1
comparing floating point with == or != is unsafe
'begin' and 'end' returning different types (%0 and %1) is incompatible with C++ standards before C++17
loop variable %0 %diff{has type $ but is initialized with type $| is initialized with a value of a different type}1,2 resulting in a copy
loop variable %0 of type %1 creates a copy from type %2
loop variable %0 is always a copy because the range of type %1 does not return a reference
using '%%P' format specifier without precision
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
format specifies type %0 but the argument has %select{type|underlying type}2 %1
using '%0' format specifier annotation outside of os_log()/os_trace()
invalid conversion specifier '%0'
invalid position specified for %select{field width|field precision}0
cannot mix positional and non-positional arguments in format string
'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C
using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
positional arguments are not supported by ISO C
format string is not a string literal
format string is not a string literal (potentially insecure)
length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
format string should not be a wide string
position arguments in format strings start counting at 1 (not 0)
redefinition of forward class %0 of a typedef name of an object type is ignored
cannot call function '%1' while %0 '%2' is held
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of function %q0 required here, but no definition is available
function definition inside an Objective-C container is deprecated
%0 overrides a member function but is not marked 'override'
Objective-C GC does not allow weak variables on the stack
GCC does not allow the %0 attribute to be written on a type
declaration requires a global constructor
declaration requires a global destructor
'gnu_inline' attribute requires function to be marked 'inline', attribute ignored
arithmetic on a null pointer treated as a cast from integer to pointer is a GNU extension
passing variable %1 by reference requires holding %0 %select{'%2'|'%2' exclusively}3
%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)
IBOutletCollection properties should be copy/strong and not assign
assigning %select{field|instance variable}0 to itself
inheritance model ignored on %select{primary template|partial specialization}0
size of static array must be an integer constant expression
implicit truncation from %2 to bit-field changes value from %0 to %1
initialization of pointer of type %0 to null from a constant boolean expression
implicit conversion discards imaginary component: %0 to %1
implicit conversion from enumeration type %0 to different enumeration type %1
implicit conversion increases floating-point precision: %0 to %1
implicit conversion turns floating-point number into integer: %0 to %1
implicit conversion loses floating-point precision: %0 to %1
implicit conversion when assigning computation result loses floating-point precision: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
implicit conversion from %0 to %1 changes non-zero value from %2 to %3
implicit conversion turns floating-point number into bool: %0 to %1
implicit conversion loses integer precision: %0 to %1
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion changes signedness: %0 to %1
operand of ? changes signedness: %0 to %1
implicit conversion of %select{NULL|nullptr}0 constant to %1
implicit boolean conversion of Objective-C object literal always evaluates to true
address of%select{| function| array}0 '%1' will always evaluate to 'true'
implicit conversion turns string literal into bool: %0 to %1
implicit conversion turns vector to scalar: %0 to %1
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this class implementation
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
property is assumed atomic by default
declaration of built-in function '%1' requires inclusion of the header <%0>
implicit declaration of function %0
block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
direct base %0 is inaccessible due to ambiguity:%1
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
encoding of %0 type is incomplete because %1 component has unknown encoding
incrementing expression of type bool is deprecated and incompatible with C++17
'objc_independent_class' attribute may be put on a typedef only; attribute is ignored
indirection of non-volatile null pointer will be deleted, not trap
all paths through this function will call itself
constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
type %0 cannot be narrowed to %1 in initializer list in C++11
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
initializing pointer member %0 with the stack address of %select{variable|parameter}2 %1
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
initializer overrides prior initialization of this subobject
inline namespace reopened as a non-inline namespace
instance method %objcinstance0 not found (return type defaults to 'id')
instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
instance method %0 found instead of class method %1
cast to %1 from smaller integer type %0
'internal_linkage' attribute on a non-static local variable is ignored
invalid use of a cast in an inline asm context requiring an l-value: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future
invalid capability name '%0'; capability name must be 'mutex' or 'role'
invalid constructor form class in system header, should not be explicit
local declaration of %0 hides instance variable
declaration of instance variables in the interface is deprecated
jump out of __finally block has undefined behavior
ignored 'inline' attribute on kernel function %0
kernel function %0 is a member function; this may not be accepted by nvcc
%0 '%1' is acquired exclusively and shared in the same scope
%0 '%1' is not held on every path through here
'&&' within '||'
use of logical '%0' with constant operand
logical not is only applied to the left hand side of this %select{comparison|bitwise operator}0
'%0' is bound to current loop, GCC binds it to the enclosing loop
state of variable '%0' must match at the entry and exit of loop
only one parameter on 'main' declaration
variable named 'main' with external linkage has undefined behavior
bool literal returned from 'main'
taking the max of %select{a value and unsigned zero|unsigned zero and a value}0 is always equal to the other value
control may reach end of coroutine; which is undefined behavior because the promise type %0 does not declare 'return_void()'
control may reach end of non-void fragment function
control may reach end of non-void function
control may reach end of non-void lambda
control may reach end of non-void vertex function
variable %0 may be uninitialized when %select{used here|captured by block}1
%0 may not respond to %1
%0 will always overflow destination buffer
size argument in %0 call is a comparison
messaging unqualified id
%0 keyword is deprecated; use '[[%1]]' attribute instead
missing 'thread' address space qualifier
output declarations with duplicated builtin variable attributes
vector literal ignored
writable resources in non-void %select{|fragment|bounding box intersection|triangle intersection|kernel|post-tessellation vertex|vertex|visible|}0 function
MIPS 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}0
availability does not match previous declaration
%select{|overriding }4method %select{introduced after|deprecated before|obsoleted before}0 %select{the protocol method it implements|overridden method}4 on %1 (%2 vs. %3)
%select{|overriding }1method cannot be unavailable on %0 when %select{the protocol method it implements|its overridden method}1 is available
'delete%select{|[]}0' applied to a pointer that was allocated with 'new%select{[]|}0'; did you mean 'delete%select{[]|}0'?
%select{codeseg|section}0 does not match previous declaration
suggest braces around initialization of subobject
%plural{1:enumeration value %1 not handled in switch|2:enumeration values %1 and %2 not handled in switch|3:enumeration values %1, %2, and %3 not handled in switch|:%0 enumeration values not handled in switch: %1, %2, %3...}0
no case matching constant switch condition '%0'
auto property synthesis is synthesizing property not explicitly synthesized
missing field %0 initializer
format string missing
method has no return type specified; defaults to 'id'
no previous prototype for function %0
missing sentinel in %select{function call|method dispatch|block call}0
no previous extern declaration for non-static variable %0
comparison of integers of different signs: %0 and %1
modifying constructor parameter %0 that shadows a field of %1
multiple methods named %0 found
several methods with selector %0 of mismatched types are found for the @selector expression
CPU list contains duplicate entries; attribute ignored
vector initializers are not compatible with NEON intrinsics in big endian mode
array backing %select{initializer list subobject of the allocated object|the allocated initializer list}0 will be destroyed at the end of the full-expression
temporary bound to reference member of allocated object will be destroyed at the end of the full-expression
auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members
enums in the Microsoft ABI are signed integers by default; consider giving the enum %0 an unsigned underlying type to make this code portable
%0 '%1' is still held at the end of function
'nocf_check' attribute ignored; use -fcf-protection to enable the attribute
conflicting parameter types in declaration of %0: %1 vs %2
conflicting parameter types in implementation of %0: %1 vs %2
conflicting return type in declaration of %0: %1 vs %2
conflicting return type in implementation of %0: %1 vs %2
expression which evaluates to zero treated as a null pointer constant of type %0
cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
%0 has virtual functions but non-virtual destructor
comparison of nonnull %select{function call|parameter}0 '%1' %select{not |}2equal to a null pointer is '%select{true|false}2' on first encounter
function %0 declared 'noreturn' should not return
not a Doxygen trailing comment
use of unary operator that may be intended as compound assignment (%0=)
not enough variable arguments in %0 declaration to fit a sentinel
case value not in enumerated type %0
integer constant not in range of enumerated type %0
ms_struct may not produce Microsoft-compatible layouts with fundamental data types with sizes that aren't a power of two
%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2
'NSObject' attribute may be put on a typedef only; attribute is ignored
null passed to a callee that requires a non-null argument
use of NULL in arithmetic operation
comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2
synthesized setter %0 for null_resettable property %1 does not handle nil
null returned from %select{function|method}0 that requires a non-null return value
nullability specifier %0 cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?
inferring '_Nonnull' for pointer type within %select{array|reference}0 is deprecated
implicit conversion from nullable pointer %0 to non-nullable pointer type %1
%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2
adding %0 to %1 might cause circular dependency in container
object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2
designated initializer missing a 'super' call to a designated initializer of the super class
designated initializer invoked a non-designated initializer
designated initializer should only invoke a designated initializer on 'super'
method override for the designated initializer of the superclass %objcinstance0 not found
%0 bridges to %1, not %2
%0 cannot bridge to %1
assignment to Objective-C's isa is deprecated in favor of object_setClass()
direct access to Objective-C's isa is deprecated in favor of object_getClass()
direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
method possibly missing a [super %0] call
cannot catch an exception thrown with @throw in C++ in the non-unified exception model
bitmasking for introspection of Objective-C object pointers is strongly discouraged
objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
'copy' attribute must be specified for the block property when -fobjc-gc-only is specified
default property attribute 'assign' not appropriate for object
no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
retain'ed block property does not copy the block - use copy attribute instead
setter cannot be specified for a readonly property
using %0 with a literal is redundant
parameterized class %0 already conforms to the protocols listed; did you forget a '*'?
%0 attribute cannot be applied to %select{methods in protocols|dealloc}1
class %0 defined without specifying a base class
convenience initializer missing a 'self' call to another initializer
convenience initializer should not invoke an initializer on 'super'
direct comparison of a string literal has undefined behavior
%0 is incompatible with selectors that return a %select{struct|union|vector}1 type
the meaning of __weak has changed in manual reference-counting
%0 was declared with __weak, but __weak is ignored in files using manual reference counting
ignoring __weak in file using manual reference counting
use of old-style cast
aligned clause will be ignored because the requested alignment is not a power of 2
zero linear step (%0 %select{|and other variables in clause }1should probably be const)
OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed
OpenMP only allows an ordered construct with the simd clause nested in a simd construct
Non-trivial type %0 is mapped, only trivial types are guaranteed to be mapped correctly
declaration is not declared in any declare target region
array section %select{lower bound|length}0 is of type 'char'
class implementation may not have super class
%0 attribute is deprecated and ignored in OpenCL version %1
%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1
os_log() '%%n' format specifier is not allowed
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
overloaded operator %select{>>|<<}0 has higher precedence than comparison operator
%q0 hides overloaded virtual %select{function|functions}1
parameter of overriding method should be annotated with __attribute__((noescape))
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align anonymous bit-field
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align %4
padding size of %0 with %1 %select{byte|bit}2%s1 to alignment boundary
parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'
argument not in expected state; expected '%0', observed '%1'
%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?
parentheses were disambiguated as a function declaration
parentheses were disambiguated as redundant parentheses around declaration of variable named %0
passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2
moving a temporary object prevents copy elision
moving a local object in a return statement prevents copy elision
taking the absolute value of %select{pointer|function|array}0 type %1 is suspicious
performing pointer arithmetic on a null pointer has undefined behavior%select{| if the offset is nonzero}0
dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
unused attribute %0 in '#pragma clang attribute push' region
#pragma options align=reset failed: %0
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
the current #pragma pack aligment value is modified in the included file
unterminated '#pragma pack (push, ...)' at end of file
non-default #pragma pack value changes the alignment of struct or union members in the included file
specifying both a name and alignment to 'pop' is undefined
value of #pragma pack(show) == %0
#pragma %0(pop, ...) failed: %1
only variables can be arguments to '#pragma unused'
undeclared variable %0 used as an argument for '#pragma unused'
%0 has lower precedence than %1; %1 will be evaluated first
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
object format flags cannot be used with '%0' conversion specifier
'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument
field %select{width|precision}0 should have type %1, but argument has type %2
data argument not used by format string
missing object format flag
format string contains '\0' within the string body
format string is not null-terminated
flag '%0' is ignored when flag '%1' is present
incomplete format specifier
more '%%' conversions than data arguments
'%0' is not a valid object format flag
flag '%0' results in undefined behavior with '%1' conversion specifier
%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior
data argument position '%0' exceeds the number of data arguments (%1)
use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
profile data may be incomplete: of %0 function%s0, %1 %plural{1:has|:have}1 no data
profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 mismatched data that will be ignored
no profile data available for file "%0"
property %0 not found on object of type %1; did you mean to access property %2?
property attribute in class extension does not match the primary class
'%1' attribute on property %0 does not match the property inherited from %2
property declared as returning non-retained objects; getter returning retained objects
primary property declaration is implicitly strong while redeclaration in class extension is weak
property access is using %0 method which is deprecated
getter name mismatch between property redeclaration (%1) and its original declaration (%0)
property type %0 is incompatible with type %1 inherited from %2
passing the value that %1 points to by reference requires holding %0 %select{'%2'|'%2' exclusively}3
the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
the pointer decremented by %0 refers before the beginning of the array
'objc_independent_class' attribute may be put on Objective-C object pointer type only; attribute is ignored
authenticating a null pointer will almost certainly trap
signing a null pointer will yield a non-null pointer
'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect
attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
receiver %0 is a forward class and corresponding @interface may not exist
incompatible redeclaration of library function %0
%q0 redeclared without %1 attribute: previous %1 ignored
%q0 redeclared without 'dllimport' attribute: 'dllexport' attribute added
#pragma redefine_extname is applicable to external C declarations only; not applied to %select{function|variable}0 %1
redefinition of %0 will not be visible outside of this function
variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
redundant move in return statement
redundant parentheses surrounding declarator
reference %0 is not yet bound to a value when used here
'register' storage specifier on @catch parameter will be ignored
'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'
method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
protocol method is expected to return an instance of the implementing class, but is declared to return %0
%select{remainder|division}0 by zero is undefined
returning address of label, which is local
returning %select{address of|reference to}0 local temporary object
%select{address of|reference to}0 stack memory associated with %select{local variable|parameter}2 %1 returned
local variable %0 will be copied despite being %select{returned|thrown}1 by name
prior to the resolution of a defect report against ISO C++11, local variable %0 would have been copied despite being returned by name, due to its not matching the function return type%diff{ ($ vs $)|}1,2
return state set for an unconsumable type '%0'
return value not in expected state; expected '%0', observed '%1'
return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C
%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C
RISC-V 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}0
repeated RISC-V 'interrupt' attribute
instance method %0 is being used on 'Class' which is not in the root class
sampler initializer has invalid %0 bits
zero field width in scanf format string is unused
no closing ']' for '%%[' in scanf format string
second argument to 'va_start' is not the last named parameter
second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
second argument to 'va_arg' is of non-POD type %0
second argument to 'va_arg' is of ARC ownership-qualified type %0
explicitly assigning value of variable of type %0 to itself
explicitly moving variable of type %0 to itself
property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
non-static data member %0 of %1 shadows member inherited from type %2
shift count >= width of type
shifting a negative signed value is undefined
shift count is negative
signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
expression with side effects will be evaluated despite being used as an operand to 'typeid'
expression with side effects has no effect in an unevaluated context
signed bit-field %0 needs an extra bit to represent the largest positive enumerators of %1
sizeof on pointer operation will return size of %0 instead of %1
sizeof on array function parameter will return size of %0 instead of %1
'%0' call operates on objects of type %1 while the size is based on a different type %2
did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
'%0' ignored on this declaration
array argument is too small; contains %0 elements, callee requires at least %1
non-constant static local variable in inline function may be different in different files
'main' should not be declared static
static variable %0 is suspiciously used within its own initialization
this %select{function declaration is not|block declaration is not|old-style function definition is not preceded by}0 a prototype
adding %0 to a string pointer does not append to the string
adding %0 to a string does not append to the string
result of comparison against %select{a string literal|@encode}0 is unspecified (use strncmp instead)
size argument in %0 call appears to be size of the source; expected the size of the destination
the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
size argument in 'strncat' call appears to be size of the source
the value of the size argument to 'strncat' is wrong
%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1
%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1
subtraction of pointers to type %0 of zero size has undefined behavior
subobject initialization overrides initialization of other fields within its enclosing subobject
array subscript is of type 'char'
block could be declared with attribute 'noreturn'
%select{function|method}0 %1 could be declared with attribute 'noreturn'
field %0 can overwrite instance variable %1 with variable sized type %2 in superclass %3
'size' argument to bzero is '0'
%select{'size' argument to memset is '0'|setting buffer to a 'sizeof' expression}0; did you mean to transpose the last two arguments?
'swift_newtype' attribute may be put on a typedef only; attribute is ignored
the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here
taking address of packed member %0 of class or structure %q1 may result in an unaligned pointer value
result of comparison %select{%3|%1}0 %2 %select{%1|%3}0 is always %4
overlapping comparisons always evaluate to %select{false|true}0
non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
non-type template argument value '%0' truncated to '%1' for template parameter of type %2
exported templates are unsupported
dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
extraneous template parameter list in template specialization
tentative array definition assumed to have one element
'this' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true
'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%0 attribute requires arguments whose type is annotated with 'capability' attribute; type here is %1
%0 attribute can only be applied in a context annotated with 'capability("mutex")' attribute
%0 only applies to pointer types; type here is %1
ignoring %0 attribute because its argument is invalid
Thread safety beta warning.
Thread safety verbose warning.
%0 has a non-throwing exception specification but can still throw
%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored
first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
transparent_union attribute can only be applied to a union definition; attribute ignored
transparent union definition must contain at least one field; transparent_union attribute ignored
'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2
specified %0 type tag requires a null pointer
argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
this type tag was not designed to be used with this function
'%0' qualifier on function type %1 has no effect
'%0' qualifier on function type %1 has unspecified behavior
'%0' qualifier on reference type %1 has no effect
vector operands do not have the same elements sizes (%0 and %1)
'static' has no effect on zero-length arrays
unannotated fall-through between switch labels
unannotated fall-through between switch labels in partly-annotated function
implementing unavailable method
%0 may be unavailable because the receiver type is unknown
undeclared selector %0
undeclared selector %0; did you mean %1?
method definition for %0 not found
cannot find protocol definition for %0
inline function %q0 is not defined
%select{function|variable}0 %q1 has internal linkage but is not defined
reinterpret_cast from %0 to %1 has undefined behavior
%0 is only available on %1 %2 or newer
__declspec attribute %0 is not supported
method %0 in protocol %1 not implemented
no method with selector %0 is implemented in this translation unit
block pointer variable %0 is uninitialized when captured by block
variable %0 is uninitialized when used within its own initialization
reference %0 is not yet bound to a value when used within its own initialization
variable %0 is uninitialized when %select{used here|captured by block}1
unknown attribute %0 ignored
unknown sanitizer '%0' ignored
releasing %0 '%1' that was not held
releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access
packed attribute is unnecessary for %0
%select{function|variable}0 %1 is not needed and will not be emitted
member function %0 is not needed and will not be emitted
'static' function %0 declared in header file should be declared 'static inline'
code will never be executed
'break' will never be executed
default label in switch which covers all enumeration values
loop will run at most once (loop increment never executed)
'return' will never be executed
multiple unsequenced modifications to %0
unsequenced modification and access to %0
taking the absolute value of unsigned type %0 has no effect
result of comparison of %select{%3|unsigned expression}0 %2 %select{unsigned expression|%3}0 is always %4
assigning value of signed enum type %1 to unsigned bit-field %0; negative enumerators of enum %1 will be converted to positive values
result of comparison of %select{%3|unsigned enum expression}0 %2 %select{unsigned enum expression|%3}0 is always %4
sorry, lifetime extension of %select{temporary|backing array of initializer list}0 created by aggregate initialization using default member initializer is not supported; lifetime of %select{temporary|backing array}0 will end at the end of the full-expression
%select{unsupported|duplicate}0%select{| architecture}1 '%2' in the 'target' attribute string; 'target' attribute ignored
ignoring return value of function declared with %0 attribute
%select{equality|inequality|relational|three-way}0 comparison result unused
unused variable %0
container access result unused - container access should not be used for side effects
unused exception parameter %0
expression result unused
unused function %0
unused label %0
lambda capture %0 is not %select{used|required to be captured for this use}1
unused %select{typedef|type alias}0 %1
unused member function %0
unused parameter %0
private field %0 is not used
ivar %0 which backs the property is not referenced in this property's accessor
property access result unused - getters should not be used for side effects
unused %select{function|variable}0 template %1
expression result unused; should this cast be to 'void'?
expression result unused; assign into a variable to force a volatile load
invalid invocation of method '%0' on object '%1' while it is in the '%2' state
invalid invocation of method '%0' on a temporary object while it is in the '%1' state
%0 was marked unused but was used
user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
using namespace directive in global context in header
passing %select{an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword}0 to 'va_start' has undefined behavior
%select{reading|writing}1 the value pointed to by %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of variable %q0 required here, but no definition is available
%select{reading|writing}1 variable %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
field %0 with variable sized type %1 is not visible to subclasses and can conflict with their instance variables
variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
Use of 'long' with '__vector' is deprecated
specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead
variable length array used
weak identifier %0 never declared
an already-declared variable is made a weak_import declaration %0
explicit template instantiation %0 will emit a vtable in every translation unit
%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type
zero as null pointer constant
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%0 is only available on %1 %2 and %3 %4 or newer
the selected methods are already implemented
method %0 cannot be renamed because it overrides a method declared in a system framework
no %select{implementation file|@implementation declaration}0 for the selected %select{declaration|@interface}0 %1; please add one and run the refactoring action again
the selected code is not a part of a function's / method's body
the selected expression can't be extracted
the selected expression is too simple to extract
refactoring action can't be initiated without a selection
the provided selection does not overlap with the AST nodes of interest
there is no symbol at the given location
%0 is a builtin function that cannot be renamed
%0 is declared in a %1 file; rename can be initiated in a %1 file only
%0 cannot be renamed because it is declared in a system header
Lexical or Preprocessor Issue
Semantic Issue
Lambda Issue
Parse Issue
ARC Semantic Issue
ARC and @properties
ARC Casting Rules
ARC Parse Issue
ARC Weak References
ARC Restrictions
OpenMP Issue
Inline Assembly Issue
Modules Issue
Coroutines Issue
AST Deserialization Issue
Backend Issue
Refactoring Continuation Issue
API Notes Issue
Related Result Type Issue
Rename Issue
AST Serialization Issue
Nullability Issue
Generics Issue
User-Defined Issue
Refactoring Invocation Issue
VTable ABI Issue
Value Conversion Issue
Documentation Issue
ARC Retain Cycle
Deprecations
Format String Issue
Cocoa API Issue
#pragma message Directive
Instrumentation Issue
Unused Entity Issue
*** File Manager Stats:
 real files found, 
 real dirs found.
 virtual files found, 
 virtual dirs found.
 dir lookups, 
 dir cache misses.
 file lookups, 
 file cache misses.
and_eq
bitand
bitor
compl
not_eq
or_eq
xor_eq
__is_literal_type
local
read_only
write_only
read_write
__fp16
__alignof__
__asm
__asm__
__attribute__
__complex
__complex__
__const
__const__
__decltype
__imag__
__inline
__inline__
__nullptr
__real__
__restrict
__restrict__
__signed
__signed__
__typeof
__typeof__
__volatile
__volatile__
__int8
_int8
__int16
_int16
__int32
_int32
_int64
__wchar_t
_asm
_alignof
__builtin_alignof
_cdecl
_fastcall
_stdcall
_thiscall
_vectorcall
_uuidof
_inline
_declspec
_pascal
__char16_t
__char32_t
not_keyword
compatibility_alias
defs
encode
implementation
interface
protocol
selector
finally
synchronized
autoreleasepool
property
package
required
optional
synthesize
available
elif
line
endif
ident
ifdef
undef
assert
define
ifndef
pragma
defined
include
warning
include_next
__public_macro
__private_macro
*** Identifier Table Stats:
# Identifiers:   %d
# Empty Buckets: %d
Hash density (#identifiers per bucket): %f
Ave identifier length: %f
Max identifier length: %d
autorelease
dealloc
finalize
retain
retainCount
self
initialize
performSelector
performSelectorInBackground
performSelectorOnMainThread
copy
init
mutableCopy
stringByAppendingFormat
stringWithFormat
new[]
delete[]
nonnull
nullable
null_unspecified
framework 
explicit 
module 
 [system]
 [extern_c]
 [swift_infer_import_as_member]
requires 
umbrella header "
umbrella "
config_macros 
[exhaustive]
textual 
private 
private textual 
exclude 
header "
" { size 
 mtime 
 size 
export_as
export 
use 
link 
conflict 
module * {
export *
blocks
metal
_Builtin_stddef_max_align_t
watchos
threadprivate
parallel
task
simd
sections
section
single
master
critical
taskyield
barrier
taskwait
taskgroup
flush
ordered
atomic
target
teams
cancel
target data
target enter data
target exit data
target parallel
target parallel for
target update
parallel for
parallel for simd
parallel sections
for simd
cancellation point
declare reduction
declare simd
taskloop
taskloop simd
distribute
declare target
end declare target
distribute parallel for
distribute parallel for simd
distribute simd
target parallel for simd
target simd
teams distribute
teams distribute simd
teams distribute parallel for simd
teams distribute parallel for
target teams
target teams distribute
target teams distribute parallel for
target teams distribute parallel for simd
target teams distribute simd
final
num_threads
safelen
simdlen
collapse
firstprivate
lastprivate
shared
reduction
linear
aligned
copyin
copyprivate
proc_bind
schedule
nowait
untied
mergeable
read
write
update
capture
seq_cst
depend
threads
num_teams
thread_limit
priority
grainsize
nogroup
num_tasks
hint
dist_schedule
defaultmap
from
use_device_ptr
is_device_ptr
task_reduction
in_reduction
uniform
threadprivate or thread local
close
spread
dynamic
guided
runtime
monotonic
nonmonotonic
inout
source
sink
uval
alloc
tofrom
release
scalar
global
address
kernel-address
hwaddress
kernel-hwaddress
fuzzer
fuzzer-no-link
leak
alignment
array-bounds
builtin
integer
float-cast-overflow
implicit-conversion
float-divide-by-zero
integer-divide-by-zero
nonnull-attribute
null
nullability-arg
nullability-assign
nullability-return
nullability
object-size
pointer-overflow
bounds
returns-nonnull-attribute
shift-base
shift-exponent
undefined-trap
shift
signed-integer-overflow
unreachable
vla-bound
vptr
unsigned-integer-overflow
dataflow
cfi-cast-strict
cfi-derived-cast
cfi-icall
cfi-mfcall
cfi-unrelated-cast
cfi-nvcall
cfi-vcall
safe-stack
shadow-call-stack
undefined
efficiency-all
implicit-integer-truncation
local-bounds
efficiency-cache-frag
efficiency-working-set
scudo
 <Spelling=
SLocEntry <FileID 
expansion
 <SourceLocation 
????>
  covers <FileID 
  included from 
  for 
<none>
  contents overridden
  contents from 
  spelling from 
  macro 
body
 range <
<invalid>
<<<MISSING SOURCE FILE>>>
UTF-16 (BE)
UTF-16 (LE)
UTF-32 (BE)
UTF-32 (LE)
UTF-7
UTF-1
UTF-EBCDIC
SDSU
BOCU-1
GB-18030
<<<INVALID BUFFER>>
<<<<<INVALID SOURCE LOCATION>>>>>
<<<<INVALID BUFFER>>>>
<invalid loc>
<built-in>
<scratch space>
*** Source Manager Stats:
 files mapped, 
 mem buffers mapped.
 local SLocEntry's allocated (
 bytes of capacity), 
B of Sloc address space used.
 loaded SLocEntries allocated, 
 bytes of files mapped, 
 files with line #'s computed, 
 files with macro args computed.
FileID scans: 
 linear, 
 binary.
cf-protection=return
cf-protection=branch
signed char
unsigned char
unsigned short
unsigned int
long int
long unsigned int
long long int
long long unsigned int
memory
__tune_
__declspec(a)
__attribute__((a))
cdecl
stdcall
fastcall
thiscall
pascal
__attribute__((__
__))
WIN32
WINNT
WIN64
__MINGW64__
__MSVCRT__
__MINGW32__
E-m:e-p:32:32-i64:64-a:0:32-n32-S64
_mcount
__mcount
.mcount
E-m:o-i64:64-n32:64
e-m:e-p:32:32-i64:64-f128:64-n32-S64
e-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-m:x-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32
e-m:e-p:32:32-i64:64-n32:64-S128
linux
__gnu_linux__
__ANDROID__
android
__ANDROID_API__
.text.startup
e-m:e-p:64:64-i64:64-n32:64-S128
e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
__FreeBSD__
__FreeBSD_cc_version
900001
__KPRINTF_ATTRIBUTE__
__ORBIS__
avx512
no-mmx
~{dirflag},~{fpsr},~{flags}
e-m:e-p:32:32-i64:64-n8:16:32-S128
e-m:e-p:32:32-i64:64-n8:16:32:64-S128
e-p:32:32-i64:64
__native_client__
__HAIKU__
_M_X64
_M_AMD64
__CYGWIN64__
__svr4__
__SVR4
_XOPEN_SOURCE
__C99FEATURES__
_LARGEFILE_SOURCE
_LARGEFILE64_SOURCE
__EXTENSIONS__
__FreeBSD_kernel__
__GLIBC__
__Fuchsia__
__STDC_MB_MIGHT_NEQ_WC__
__OpenBSD__
__NetBSD__
__unix__
__DragonFly__
__DragonFly_cc_version
100001
__CloudABI__
__STDC_ISO_10646__
201206L
__STDC_UTF_16__
__STDC_UTF_32__
__Ananas__
e-m:w-i64:64-f80:128-n8:16:32:64-S128
e-m:e-i64:64-f80:128-n8:16:32:64-S128
e-m:e-p:32:32-i64:64-f80:128-n8:16:32:64-S128
e-m:o-i64:64-f80:128-n8:16:32:64-S128
e-m:e-p:32:32-i64:32-f64:32-f128:32-n8:16:32-a:0:32-S32
__iamcu
__iamcu__
__INTEL__
__rtems__
_M_IX86
_X86_
e-m:e-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32
__minix
_EM_WSIZE
_EM_PSIZE
_EM_SSIZE
_EM_LSIZE
_EM_FSIZE
_EM_DSIZE
e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128
e-m:o-p:32:32-f64:32:64-f80:128-n8:16:32-S128
E-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
+transactional-execution
+vector
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64
E-m:e-i64:64-n32:64-S128
E-m:e-p:32:32-i64:64-f128:64-n32-S64
lp64
e-m:e-p:64:64-i64:64-i128:128-n64-S128
ilp32
e-m:e-p:32:32-i64:64-n32-S128
E-m:e-p:32:32-i64:64-n32:64
__PPU__
__CELLOS_LV2__
__LP32__
e-m:e-i64:64-n32:64
E-m:e-i64:64-n32:64
E-m:e-p:32:32-i64:64-n32
E-m:o-p:32:32-f64:32:64-n32
e-m:e-v128:32-v16:16-v32:32-v96:32-n8:16:32:64-S128
$f10
$f11
$f12
$f13
$f14
$f15
$f16
$f17
$f18
$f19
$f20
$f21
$f22
$f23
$f24
$f25
$f26
$f27
$f28
$f29
$f30
$f31
$fcc0
$fcc1
$fcc2
$fcc3
$fcc4
$fcc5
$fcc6
$fcc7
$ac1hi
$ac1lo
$ac2hi
$ac2lo
$ac3hi
$ac3lo
$w10
$w11
$w12
$w13
$w14
$w15
$w16
$w17
$w18
$w19
$w20
$w21
$w22
$w23
$w24
$w25
$w26
$w27
$w28
$w29
$w30
$w31
$msair
$msacsr
$msaaccess
$msasave
$msamodify
$msarequest
$msamap
$msaunmap
+single-float
+mips16
+micromips
+dspr2
+msa
+nomadd4
+fp64
-fp64
+nan2008
-nan2008
+abs2008
-abs2008
+noabicalls
+use-indirect-jump-hazard
m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64
m:e-p:32:32-i8:8:32-i16:16:32-i64:64-n32:64-S128
m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128
cnmips
~{$1}
status
ctl0
estatus
ctl1
bstatus
ctl2
ienable
ctl3
ipending
ctl4
cpuid
ctl5
exception
ctl7
pteaddr
ctl8
tlbacc
ctl9
tlbmisc
ctl10
badaddr
ctl12
config
ctl13
mpubase
ctl14
mpuacc
ctl15
ctl6
ctl11
eabi
nios2r1
e-p:32:32:32-i8:8:32-i16:16:32-n32
E-p:32:32:32-i8:8:32-i16:16:32-n32
e-m:e-p:16:16-i32:16-i64:16-f32:16-f64:16-a:8-n8:16-S16
E-m:e-p:64:64-i64:64-n32:64-S128
e-P1-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8
e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:32-f64:32-a:0:32-n32
__builtin_arm_rbit64
LLUiLLUi
UiUiLUi
vvC*UiUiUiUi
aarch64
arm64
+sve
+v8.1a
+v8.2a
+v8.3a
darwinpcs
__aarch64__
_LP64
__LP64__
__ARM_64BIT_STATE
__ARM_PCS_AAPCS64
__ARM_ARCH_ISA_A64
__ARM_FEATURE_DIV
__ARM_ALIGN_MAX_STACK_PWR
__ARM_FEATURE_SVE
__ARM_ARCH_8_3__
e-m:o-p:32:32-i64:64-i128:128-n32:64-S128
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
__AARCH64EL__
E-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
__AARCH64EB__
__AARCH_BIG_ENDIAN
e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128
_M_ARM64
__AARCH64_SIMD__
__ARM64_ARCH_8_32__
__ARM64_ARCH_8__
__LITTLE_ENDIAN__
__arm64
__arm64__
__arm64e__
_mcount
mcount
cl_khr_gl_event
cl_khr_depth_images
cl_khr_image2d_from_buffer
cl_khr_gl_depth_images
cl_khr_gl_msaa_sharing
cl_APPLE_bool_vec
air.static_init
__builtin_air_floor_f16
__builtin_air_floor_f32
__builtin_air_floor_f64
__builtin_air_fract_f16
__builtin_air_fast_fract_f32
__builtin_air_fmin_f16
__builtin_air_fmin_f32
__builtin_air_fmin_f64
%u%02u%02u
__AIR32__
__AIR64__
__AIR_VERSION__
__AIR_PB_ABI__
__AIR_MB_ABI__
__AIR_VB_ABI__
__AIR_ABI__
__AIR_
_ABI__
__builtin_amdgcn_dispatch_ptr
Uc*4
__builtin_amdgcn_kernarg_segment_ptr
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workgroup_id_y
__builtin_amdgcn_workgroup_id_z
__builtin_amdgcn_workitem_id_x
__builtin_amdgcn_workitem_id_y
__builtin_amdgcn_workitem_id_z
__builtin_amdgcn_s_getreg
UiIi
__builtin_amdgcn_s_getpc
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_s_sendmsg
vIiUi
__builtin_amdgcn_s_sendmsghalt
__builtin_amdgcn_s_barrier
__builtin_amdgcn_wave_barrier
__builtin_amdgcn_s_dcache_inv
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_div_scale
dddbb*
__builtin_amdgcn_div_scalef
fffbb*
__builtin_amdgcn_div_fmas
ddddb
__builtin_amdgcn_div_fmasf
ffffb
__builtin_amdgcn_div_fixup
__builtin_amdgcn_div_fixupf
__builtin_amdgcn_trig_preop
__builtin_amdgcn_trig_preopf
__builtin_amdgcn_rcp
__builtin_amdgcn_rcpf
__builtin_amdgcn_rsq
__builtin_amdgcn_rsqf
__builtin_amdgcn_rsq_clamp
__builtin_amdgcn_rsq_clampf
__builtin_amdgcn_sinf
__builtin_amdgcn_cosf
__builtin_amdgcn_log_clampf
__builtin_amdgcn_ldexp
__builtin_amdgcn_ldexpf
__builtin_amdgcn_frexp_mant
__builtin_amdgcn_frexp_mantf
__builtin_amdgcn_frexp_exp
__builtin_amdgcn_frexp_expf
__builtin_amdgcn_fract
__builtin_amdgcn_fractf
__builtin_amdgcn_lerp
__builtin_amdgcn_class
__builtin_amdgcn_classf
__builtin_amdgcn_cubeid
__builtin_amdgcn_cubesc
__builtin_amdgcn_cubetc
__builtin_amdgcn_cubema
__builtin_amdgcn_s_memtime
__builtin_amdgcn_s_sleep
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_s_decperflevel
__builtin_amdgcn_uicmp
LUiUiUiIi
__builtin_amdgcn_uicmpl
LUiLUiLUiIi
__builtin_amdgcn_sicmp
LUiiiIi
__builtin_amdgcn_sicmpl
LUiLiLiIi
__builtin_amdgcn_fcmp
LUiddIi
__builtin_amdgcn_fcmpf
LUiffIi
__builtin_amdgcn_ds_swizzle
__builtin_amdgcn_ds_permute
__builtin_amdgcn_ds_bpermute
__builtin_amdgcn_readfirstlane
__builtin_amdgcn_readlane
__builtin_amdgcn_fmed3f
__builtin_amdgcn_ds_faddf
ff*fIiIiIb
__builtin_amdgcn_ds_fminf
__builtin_amdgcn_ds_fmaxf
__builtin_amdgcn_div_fixuph
16-bit-insts
__builtin_amdgcn_rcph
__builtin_amdgcn_rsqh
__builtin_amdgcn_sinh
__builtin_amdgcn_cosh
__builtin_amdgcn_ldexph
__builtin_amdgcn_frexp_manth
__builtin_amdgcn_frexp_exph
__builtin_amdgcn_fracth
__builtin_amdgcn_classh
__builtin_amdgcn_s_memrealtime
s-memrealtime
__builtin_amdgcn_mov_dpp
iiIiIiIiIb
__builtin_amdgcn_fmed3h
gfx9-insts
__builtin_amdgcn_fdot2
fV2hV2hfIb
dl-insts
__builtin_amdgcn_sdot2
SiV2SsV2SsSiIb
__builtin_amdgcn_udot2
UiV2UsV2UsUiIb
__builtin_amdgcn_sdot4
SiSiSiSiIb
__builtin_amdgcn_udot4
UiUiUiUiIb
__builtin_amdgcn_sdot8
__builtin_amdgcn_udot8
__builtin_amdgcn_read_exec
__builtin_amdgcn_read_exec_lo
__builtin_amdgcn_read_exec_hi
__builtin_r600_implicitarg_ptr
Uc*7
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tgid_z
__builtin_r600_read_tidig_x
__builtin_r600_read_tidig_y
__builtin_r600_read_tidig_z
__builtin_r600_recipsqrt_ieee
__builtin_r600_recipsqrt_ieeef
v100
v101
v102
v103
v104
v105
v106
v107
v108
v109
v110
v111
v112
v113
v114
v115
v116
v117
v118
v119
v120
v121
v122
v123
v124
v125
v126
v127
v128
v129
v130
v131
v132
v133
v134
v135
v136
v137
v138
v139
v140
v141
v142
v143
v144
v145
v146
v147
v148
v149
v150
v151
v152
v153
v154
v155
v156
v157
v158
v159
v160
v161
v162
v163
v164
v165
v166
v167
v168
v169
v170
v171
v172
v173
v174
v175
v176
v177
v178
v179
v180
v181
v182
v183
v184
v185
v186
v187
v188
v189
v190
v191
v192
v193
v194
v195
v196
v197
v198
v199
v200
v201
v202
v203
v204
v205
v206
v207
v208
v209
v210
v211
v212
v213
v214
v215
v216
v217
v218
v219
v220
v221
v222
v223
v224
v225
v226
v227
v228
v229
v230
v231
v232
v233
v234
v235
v236
v237
v238
v239
v240
v241
v242
v243
v244
v245
v246
v247
v248
v249
v250
v251
v252
v253
v254
v255
s100
s101
s102
s103
s104
s105
s106
s107
s108
s109
s110
s111
s112
s113
s114
s115
s116
s117
s118
s119
s120
s121
s122
s123
s124
s125
s126
s127
exec
flat_scratch
exec_lo
exec_hi
vcc_lo
vcc_hi
flat_scratch_lo
flat_scratch_hi
r600
rv630
rv635
r630
rs780
rs880
rv610
rv620
rv670
rv710
rv730
rv740
rv770
cedar
palm
cypress
hemlock
juniper
redwood
sumo
sumo2
barts
caicos
aruba
cayman
turks
gfx600
tahiti
gfx601
hainan
oland
pitcairn
verde
gfx700
kaveri
gfx701
hawaii
gfx702
gfx703
kabini
mullins
gfx704
bonaire
gfx801
carrizo
gfx802
iceland
tonga
gfx803
fiji
polaris10
polaris11
gfx810
stoney
gfx900
gfx902
gfx904
gfx906
cl_khr_fp16
cl_khr_int64_base_atomics
cl_khr_int64_extended_atomics
cl_khr_mipmap_image
cl_khr_subgroups
cl_khr_3d_image_writes
cl_amd_media_ops
cl_amd_media_ops2
+fp32-denormals
-fp32-denormals
+fp64-fp16-denormals
-fp64-fp16-denormals
fp32-denormals
tma_lo
tma_hi
tba_lo
tba_hi
__AMD__
__AMDGPU__
__AMDGCN__
__R600__
__HAS_FMAF__
FP_FAST_FMAF
__HAS_LDEXPF__
__HAS_FP64__
FP_FAST_FMA
e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5
neon
+soft-float
+soft-float-abi
+vfp2
+vfp3
+vfp4
+fp-armv8
+neon
+hwdiv
+hwdiv-arm
+crc
+dsp
+fp-only-sp
+strict-align
+fp16
+fullfp16
+dotprod
+neonfp
-neonfp
apcs-gnu
aapcs16
aapcs
aapcs-vfp
aapcs-linux
e-m:o-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
E-m:o-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:w-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S128
e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
E-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-i64:64-a:0:32-n32-S128
E-m:o-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:o-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
E-m:e-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:e-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
8_1A
8_2A
8_3A
8_4A
8M_BASE
8M_MAIN
thumb-mode
+arm
+thumb
-thumb-mode
+thumb-mode
__builtin_neon_vabd_v
V8ScV8ScV8Sci
__builtin_neon_vabdd_f64
__builtin_neon_vabdq_v
V16ScV16ScV16Sci
__builtin_neon_vabds_f32
__builtin_neon_vabs_v
V8ScV8Sci
__builtin_neon_vabsd_s64
WiWi
__builtin_neon_vabsq_v
V16ScV16Sci
__builtin_neon_vaddd_s64
WiWiWi
__builtin_neon_vaddd_u64
UWiUWiUWi
__builtin_neon_vaddhn_v
V8ScV16ScV16Sci
__builtin_neon_vaddlv_s16
iV4s
__builtin_neon_vaddlv_s32
WiV2i
__builtin_neon_vaddlv_s8
sV8Sc
__builtin_neon_vaddlv_u16
UiV4Us
__builtin_neon_vaddlv_u32
UWiV2Ui
__builtin_neon_vaddlv_u8
UsV8Sc
__builtin_neon_vaddlvq_s16
iV8s
__builtin_neon_vaddlvq_s32
WiV4i
__builtin_neon_vaddlvq_s8
sV16Sc
__builtin_neon_vaddlvq_u16
UiV8Us
__builtin_neon_vaddlvq_u32
UWiV4Ui
__builtin_neon_vaddlvq_u8
UsV16Sc
__builtin_neon_vaddv_f32
fV2f
__builtin_neon_vaddv_s16
sV4s
__builtin_neon_vaddv_s32
iV2i
__builtin_neon_vaddv_s8
ScV8Sc
__builtin_neon_vaddv_u16
UsV4Us
__builtin_neon_vaddv_u32
UiV2Ui
__builtin_neon_vaddv_u8
__builtin_neon_vaddvq_f32
fV4f
__builtin_neon_vaddvq_f64
dV2d
__builtin_neon_vaddvq_s16
sV8s
__builtin_neon_vaddvq_s32
iV4i
__builtin_neon_vaddvq_s64
WiV2Wi
__builtin_neon_vaddvq_s8
ScV16Sc
__builtin_neon_vaddvq_u16
UsV8Us
__builtin_neon_vaddvq_u32
UiV4Ui
__builtin_neon_vaddvq_u64
UWiV2UWi
__builtin_neon_vaddvq_u8
__builtin_neon_vaesdq_v
__builtin_neon_vaeseq_v
__builtin_neon_vaesimcq_v
__builtin_neon_vaesmcq_v
__builtin_neon_vbsl_v
V8ScV8ScV8ScV8Sci
__builtin_neon_vbslq_v
V16ScV16ScV16ScV16Sci
__builtin_neon_vcage_v
__builtin_neon_vcaged_f64
UWidd
__builtin_neon_vcageq_v
__builtin_neon_vcages_f32
Uiff
__builtin_neon_vcagt_v
__builtin_neon_vcagtd_f64
__builtin_neon_vcagtq_v
__builtin_neon_vcagts_f32
__builtin_neon_vcale_v
__builtin_neon_vcaled_f64
__builtin_neon_vcaleq_v
__builtin_neon_vcales_f32
__builtin_neon_vcalt_v
__builtin_neon_vcaltd_f64
__builtin_neon_vcaltq_v
__builtin_neon_vcalts_f32
__builtin_neon_vceqd_f64
__builtin_neon_vceqd_s64
__builtin_neon_vceqd_u64
__builtin_neon_vceqs_f32
__builtin_neon_vceqz_v
__builtin_neon_vceqzd_f64
UWid
__builtin_neon_vceqzd_s64
__builtin_neon_vceqzd_u64
UWiUWi
__builtin_neon_vceqzq_v
__builtin_neon_vceqzs_f32
__builtin_neon_vcged_f64
__builtin_neon_vcged_s64
__builtin_neon_vcged_u64
__builtin_neon_vcges_f32
__builtin_neon_vcgez_v
__builtin_neon_vcgezd_f64
__builtin_neon_vcgezd_s64
__builtin_neon_vcgezq_v
__builtin_neon_vcgezs_f32
__builtin_neon_vcgtd_f64
__builtin_neon_vcgtd_s64
__builtin_neon_vcgtd_u64
__builtin_neon_vcgts_f32
__builtin_neon_vcgtz_v
__builtin_neon_vcgtzd_f64
__builtin_neon_vcgtzd_s64
__builtin_neon_vcgtzq_v
__builtin_neon_vcgtzs_f32
__builtin_neon_vcled_f64
__builtin_neon_vcled_s64
__builtin_neon_vcled_u64
__builtin_neon_vcles_f32
__builtin_neon_vclez_v
__builtin_neon_vclezd_f64
__builtin_neon_vclezd_s64
__builtin_neon_vclezq_v
__builtin_neon_vclezs_f32
__builtin_neon_vcls_v
__builtin_neon_vclsq_v
__builtin_neon_vcltd_f64
__builtin_neon_vcltd_s64
__builtin_neon_vcltd_u64
__builtin_neon_vclts_f32
__builtin_neon_vcltz_v
__builtin_neon_vcltzd_f64
__builtin_neon_vcltzd_s64
__builtin_neon_vcltzq_v
__builtin_neon_vcltzs_f32
__builtin_neon_vclz_v
__builtin_neon_vclzq_v
__builtin_neon_vcnt_v
__builtin_neon_vcntq_v
__builtin_neon_vcvt_f16_f32
V8ScV16Sci
__builtin_neon_vcvt_f16_v
V4hV8Sci
__builtin_neon_vcvt_f32_f16
V16ScV8Sci
__builtin_neon_vcvt_f32_f64
__builtin_neon_vcvt_f32_v
V2fV8Sci
__builtin_neon_vcvt_f64_f32
__builtin_neon_vcvt_f64_v
V1dV8Sci
__builtin_neon_vcvt_n_f16_v
V4hV8ScIii
__builtin_neon_vcvt_n_f32_v
V2fV8ScIii
__builtin_neon_vcvt_n_f64_v
V1dV8ScIii
__builtin_neon_vcvt_n_s16_v
V8ScV8ScIii
__builtin_neon_vcvt_n_s32_v
__builtin_neon_vcvt_n_s64_v
__builtin_neon_vcvt_n_u16_v
__builtin_neon_vcvt_n_u32_v
__builtin_neon_vcvt_n_u64_v
__builtin_neon_vcvt_s16_v
__builtin_neon_vcvt_s32_v
__builtin_neon_vcvt_s64_v
__builtin_neon_vcvt_u16_v
__builtin_neon_vcvt_u32_v
__builtin_neon_vcvt_u64_v
__builtin_neon_vcvta_s16_v
__builtin_neon_vcvta_s32_v
__builtin_neon_vcvta_s64_v
__builtin_neon_vcvta_u16_v
__builtin_neon_vcvta_u32_v
__builtin_neon_vcvta_u64_v
__builtin_neon_vcvtad_s64_f64
__builtin_neon_vcvtad_u64_f64
__builtin_neon_vcvtaq_s16_v
__builtin_neon_vcvtaq_s32_v
__builtin_neon_vcvtaq_s64_v
__builtin_neon_vcvtaq_u16_v
__builtin_neon_vcvtaq_u32_v
__builtin_neon_vcvtaq_u64_v
__builtin_neon_vcvtas_s32_f32
__builtin_neon_vcvtas_u32_f32
__builtin_neon_vcvtd_f64_s64
__builtin_neon_vcvtd_f64_u64
dUWi
__builtin_neon_vcvtd_n_f64_s64
dWiIi
__builtin_neon_vcvtd_n_f64_u64
dUWiIi
__builtin_neon_vcvtd_n_s64_f64
WidIi
__builtin_neon_vcvtd_n_u64_f64
UWidIi
__builtin_neon_vcvtd_s64_f64
__builtin_neon_vcvtd_u64_f64
__builtin_neon_vcvtm_s16_v
__builtin_neon_vcvtm_s32_v
__builtin_neon_vcvtm_s64_v
__builtin_neon_vcvtm_u16_v
__builtin_neon_vcvtm_u32_v
__builtin_neon_vcvtm_u64_v
__builtin_neon_vcvtmd_s64_f64
__builtin_neon_vcvtmd_u64_f64
__builtin_neon_vcvtmq_s16_v
__builtin_neon_vcvtmq_s32_v
__builtin_neon_vcvtmq_s64_v
__builtin_neon_vcvtmq_u16_v
__builtin_neon_vcvtmq_u32_v
__builtin_neon_vcvtmq_u64_v
__builtin_neon_vcvtms_s32_f32
__builtin_neon_vcvtms_u32_f32
__builtin_neon_vcvtn_s16_v
__builtin_neon_vcvtn_s32_v
__builtin_neon_vcvtn_s64_v
__builtin_neon_vcvtn_u16_v
__builtin_neon_vcvtn_u32_v
__builtin_neon_vcvtn_u64_v
__builtin_neon_vcvtnd_s64_f64
__builtin_neon_vcvtnd_u64_f64
__builtin_neon_vcvtnq_s16_v
__builtin_neon_vcvtnq_s32_v
__builtin_neon_vcvtnq_s64_v
__builtin_neon_vcvtnq_u16_v
__builtin_neon_vcvtnq_u32_v
__builtin_neon_vcvtnq_u64_v
__builtin_neon_vcvtns_s32_f32
__builtin_neon_vcvtns_u32_f32
__builtin_neon_vcvtp_s16_v
__builtin_neon_vcvtp_s32_v
__builtin_neon_vcvtp_s64_v
__builtin_neon_vcvtp_u16_v
__builtin_neon_vcvtp_u32_v
__builtin_neon_vcvtp_u64_v
__builtin_neon_vcvtpd_s64_f64
__builtin_neon_vcvtpd_u64_f64
__builtin_neon_vcvtpq_s16_v
__builtin_neon_vcvtpq_s32_v
__builtin_neon_vcvtpq_s64_v
__builtin_neon_vcvtpq_u16_v
__builtin_neon_vcvtpq_u32_v
__builtin_neon_vcvtpq_u64_v
__builtin_neon_vcvtps_s32_f32
__builtin_neon_vcvtps_u32_f32
__builtin_neon_vcvtq_f16_v
V8hV16Sci
__builtin_neon_vcvtq_f32_v
V4fV16Sci
__builtin_neon_vcvtq_f64_v
V2dV16Sci
__builtin_neon_vcvtq_n_f16_v
V8hV16ScIii
__builtin_neon_vcvtq_n_f32_v
V4fV16ScIii
__builtin_neon_vcvtq_n_f64_v
V2dV16ScIii
__builtin_neon_vcvtq_n_s16_v
V16ScV16ScIii
__builtin_neon_vcvtq_n_s32_v
__builtin_neon_vcvtq_n_s64_v
__builtin_neon_vcvtq_n_u16_v
__builtin_neon_vcvtq_n_u32_v
__builtin_neon_vcvtq_n_u64_v
__builtin_neon_vcvtq_s16_v
__builtin_neon_vcvtq_s32_v
__builtin_neon_vcvtq_s64_v
__builtin_neon_vcvtq_u16_v
__builtin_neon_vcvtq_u32_v
__builtin_neon_vcvtq_u64_v
__builtin_neon_vcvts_f32_s32
__builtin_neon_vcvts_f32_u32
__builtin_neon_vcvts_n_f32_s32
fiIi
__builtin_neon_vcvts_n_f32_u32
fUiIi
__builtin_neon_vcvts_n_s32_f32
ifIi
__builtin_neon_vcvts_n_u32_f32
UifIi
__builtin_neon_vcvts_s32_f32
__builtin_neon_vcvts_u32_f32
__builtin_neon_vcvtx_f32_v
V2fV16Sci
__builtin_neon_vcvtxd_f32_f64
__builtin_neon_vdot_v
__builtin_neon_vdotq_v
__builtin_neon_vdupb_lane_i8
ScV8ScIi
__builtin_neon_vdupb_laneq_i8
ScV16ScIi
__builtin_neon_vdupd_lane_f64
dV1dIi
__builtin_neon_vdupd_lane_i64
UWiV1WiIi
__builtin_neon_vdupd_laneq_f64
dV2dIi
__builtin_neon_vdupd_laneq_i64
UWiV2WiIi
__builtin_neon_vduph_lane_f16
hV4hIi
__builtin_neon_vduph_lane_i16
UsV4sIi
__builtin_neon_vduph_laneq_f16
hV8hIi
__builtin_neon_vduph_laneq_i16
UsV8sIi
__builtin_neon_vdups_lane_f32
fV2fIi
__builtin_neon_vdups_lane_i32
UiV2iIi
__builtin_neon_vdups_laneq_f32
__builtin_neon_vdups_laneq_i32
UiV4iIi
__builtin_neon_vext_v
V8ScV8ScV8ScIii
__builtin_neon_vextq_v
V16ScV16ScV16ScIii
__builtin_neon_vfma_lane_v
V8ScV8ScV8ScV8ScIii
__builtin_neon_vfma_laneq_v
V8ScV8ScV8ScV16ScIii
__builtin_neon_vfma_v
__builtin_neon_vfmad_lane_f64
dddV1dIi
__builtin_neon_vfmad_laneq_f64
dddV2dIi
__builtin_neon_vfmah_lane_f16
hhhV4hIi
__builtin_neon_vfmah_laneq_f16
hhhV8hIi
__builtin_neon_vfmaq_lane_v
V16ScV16ScV16ScV8ScIii
__builtin_neon_vfmaq_laneq_v
V16ScV16ScV16ScV16ScIii
__builtin_neon_vfmaq_v
__builtin_neon_vfmas_lane_f32
fffV2fIi
__builtin_neon_vfmas_laneq_f32
fffV4fIi
__builtin_neon_vget_lane_f32
__builtin_neon_vget_lane_f64
__builtin_neon_vget_lane_i16
__builtin_neon_vget_lane_i32
__builtin_neon_vget_lane_i64
__builtin_neon_vget_lane_i8
__builtin_neon_vgetq_lane_f32
__builtin_neon_vgetq_lane_f64
__builtin_neon_vgetq_lane_i16
__builtin_neon_vgetq_lane_i32
__builtin_neon_vgetq_lane_i64
__builtin_neon_vgetq_lane_i8
__builtin_neon_vhadd_v
__builtin_neon_vhaddq_v
__builtin_neon_vhsub_v
__builtin_neon_vhsubq_v
__builtin_neon_vld1_dup_v
V8ScvC*i
__builtin_neon_vld1_lane_v
V8ScvC*V8ScIii
__builtin_neon_vld1_v
__builtin_neon_vld1_x2_v
vv*vC*i
__builtin_neon_vld1_x3_v
__builtin_neon_vld1_x4_v
__builtin_neon_vld1q_dup_v
V16ScvC*i
__builtin_neon_vld1q_lane_v
V16ScvC*V16ScIii
__builtin_neon_vld1q_v
__builtin_neon_vld1q_x2_v
__builtin_neon_vld1q_x3_v
__builtin_neon_vld1q_x4_v
__builtin_neon_vld2_dup_v
__builtin_neon_vld2_lane_v
vv*vC*V8ScV8ScIii
__builtin_neon_vld2_v
__builtin_neon_vld2q_dup_v
__builtin_neon_vld2q_lane_v
vv*vC*V16ScV16ScIii
__builtin_neon_vld2q_v
__builtin_neon_vld3_dup_v
__builtin_neon_vld3_lane_v
vv*vC*V8ScV8ScV8ScIii
__builtin_neon_vld3_v
__builtin_neon_vld3q_dup_v
__builtin_neon_vld3q_lane_v
vv*vC*V16ScV16ScV16ScIii
__builtin_neon_vld3q_v
__builtin_neon_vld4_dup_v
__builtin_neon_vld4_lane_v
vv*vC*V8ScV8ScV8ScV8ScIii
__builtin_neon_vld4_v
__builtin_neon_vld4q_dup_v
__builtin_neon_vld4q_lane_v
vv*vC*V16ScV16ScV16ScV16ScIii
__builtin_neon_vld4q_v
__builtin_neon_vldrq_p128
ULLLivC*
__builtin_neon_vmax_v
__builtin_neon_vmaxnm_v
__builtin_neon_vmaxnmq_v
__builtin_neon_vmaxnmv_f16
hV8Sc
__builtin_neon_vmaxnmv_f32
__builtin_neon_vmaxnmvq_f16
hV16Sc
__builtin_neon_vmaxnmvq_f32
__builtin_neon_vmaxnmvq_f64
__builtin_neon_vmaxq_v
__builtin_neon_vmaxv_f16
__builtin_neon_vmaxv_f32
__builtin_neon_vmaxv_s16
__builtin_neon_vmaxv_s32
__builtin_neon_vmaxv_s8
__builtin_neon_vmaxv_u16
__builtin_neon_vmaxv_u32
__builtin_neon_vmaxv_u8
__builtin_neon_vmaxvq_f16
__builtin_neon_vmaxvq_f32
__builtin_neon_vmaxvq_f64
__builtin_neon_vmaxvq_s16
__builtin_neon_vmaxvq_s32
__builtin_neon_vmaxvq_s8
__builtin_neon_vmaxvq_u16
__builtin_neon_vmaxvq_u32
__builtin_neon_vmaxvq_u8
__builtin_neon_vmin_v
__builtin_neon_vminnm_v
__builtin_neon_vminnmq_v
__builtin_neon_vminnmv_f16
__builtin_neon_vminnmv_f32
__builtin_neon_vminnmvq_f16
__builtin_neon_vminnmvq_f32
__builtin_neon_vminnmvq_f64
__builtin_neon_vminq_v
__builtin_neon_vminv_f16
__builtin_neon_vminv_f32
__builtin_neon_vminv_s16
__builtin_neon_vminv_s32
__builtin_neon_vminv_s8
__builtin_neon_vminv_u16
__builtin_neon_vminv_u32
__builtin_neon_vminv_u8
__builtin_neon_vminvq_f16
__builtin_neon_vminvq_f32
__builtin_neon_vminvq_f64
__builtin_neon_vminvq_s16
__builtin_neon_vminvq_s32
__builtin_neon_vminvq_s8
__builtin_neon_vminvq_u16
__builtin_neon_vminvq_u32
__builtin_neon_vminvq_u8
__builtin_neon_vmovl_v
__builtin_neon_vmovn_v
__builtin_neon_vmul_lane_v
__builtin_neon_vmul_laneq_v
V8ScV8ScV16ScIii
__builtin_neon_vmul_n_f64
V1dV1dd
__builtin_neon_vmul_v
__builtin_neon_vmull_p64
ULLLiUWiUWi
__builtin_neon_vmull_v
V16ScV8ScV8Sci
__builtin_neon_vmulq_v
__builtin_neon_vmulx_v
__builtin_neon_vmulxd_f64
__builtin_neon_vmulxh_lane_f16
hhV4hIi
__builtin_neon_vmulxh_laneq_f16
hhV8hIi
__builtin_neon_vmulxq_v
__builtin_neon_vmulxs_f32
__builtin_neon_vnegd_s64
__builtin_neon_vpadal_v
__builtin_neon_vpadalq_v
__builtin_neon_vpadd_v
__builtin_neon_vpaddd_f64
__builtin_neon_vpaddd_s64
__builtin_neon_vpaddd_u64
__builtin_neon_vpaddl_v
__builtin_neon_vpaddlq_v
__builtin_neon_vpaddq_v
__builtin_neon_vpadds_f32
__builtin_neon_vpmax_v
__builtin_neon_vpmaxnm_v
__builtin_neon_vpmaxnmq_v
__builtin_neon_vpmaxnmqd_f64
__builtin_neon_vpmaxnms_f32
__builtin_neon_vpmaxq_v
__builtin_neon_vpmaxqd_f64
__builtin_neon_vpmaxs_f32
__builtin_neon_vpmin_v
__builtin_neon_vpminnm_v
__builtin_neon_vpminnmq_v
__builtin_neon_vpminnmqd_f64
__builtin_neon_vpminnms_f32
__builtin_neon_vpminq_v
__builtin_neon_vpminqd_f64
__builtin_neon_vpmins_f32
__builtin_neon_vqabs_v
__builtin_neon_vqabsb_s8
ScSc
__builtin_neon_vqabsd_s64
__builtin_neon_vqabsh_s16
__builtin_neon_vqabsq_v
__builtin_neon_vqabss_s32
__builtin_neon_vqadd_v
__builtin_neon_vqaddb_s8
ScScSc
__builtin_neon_vqaddb_u8
__builtin_neon_vqaddd_s64
__builtin_neon_vqaddd_u64
__builtin_neon_vqaddh_s16
__builtin_neon_vqaddh_u16
__builtin_neon_vqaddq_v
__builtin_neon_vqadds_s32
__builtin_neon_vqadds_u32
__builtin_neon_vqdmlal_v
V16ScV16ScV8ScV8Sci
__builtin_neon_vqdmlalh_lane_s16
iisV4sIi
__builtin_neon_vqdmlalh_laneq_s16
iisV8sIi
__builtin_neon_vqdmlalh_s16
iiss
__builtin_neon_vqdmlals_lane_s32
WiWiiV2iIi
__builtin_neon_vqdmlals_laneq_s32
WiWiiV4iIi
__builtin_neon_vqdmlals_s32
WiWiii
__builtin_neon_vqdmlsl_v
__builtin_neon_vqdmlslh_lane_s16
__builtin_neon_vqdmlslh_laneq_s16
__builtin_neon_vqdmlslh_s16
__builtin_neon_vqdmlsls_lane_s32
__builtin_neon_vqdmlsls_laneq_s32
__builtin_neon_vqdmlsls_s32
__builtin_neon_vqdmulh_v
__builtin_neon_vqdmulhh_s16
__builtin_neon_vqdmulhq_v
__builtin_neon_vqdmulhs_s32
__builtin_neon_vqdmull_v
__builtin_neon_vqdmullh_s16
__builtin_neon_vqdmulls_s32
Wiii
__builtin_neon_vqmovn_v
__builtin_neon_vqmovnd_s64
__builtin_neon_vqmovnd_u64
UiUWi
__builtin_neon_vqmovnh_s16
__builtin_neon_vqmovnh_u16
ScUs
__builtin_neon_vqmovns_s32
__builtin_neon_vqmovns_u32
UsUi
__builtin_neon_vqmovun_v
__builtin_neon_vqmovund_s64
__builtin_neon_vqmovunh_s16
__builtin_neon_vqmovuns_s32
__builtin_neon_vqneg_v
__builtin_neon_vqnegb_s8
__builtin_neon_vqnegd_s64
__builtin_neon_vqnegh_s16
__builtin_neon_vqnegq_v
__builtin_neon_vqnegs_s32
__builtin_neon_vqrdmulh_v
__builtin_neon_vqrdmulhh_s16
__builtin_neon_vqrdmulhq_v
__builtin_neon_vqrdmulhs_s32
__builtin_neon_vqrshl_v
__builtin_neon_vqrshlb_s8
__builtin_neon_vqrshlb_u8
__builtin_neon_vqrshld_s64
__builtin_neon_vqrshld_u64
__builtin_neon_vqrshlh_s16
__builtin_neon_vqrshlh_u16
__builtin_neon_vqrshlq_v
__builtin_neon_vqrshls_s32
__builtin_neon_vqrshls_u32
__builtin_neon_vqrshrn_n_v
V8ScV16ScIii
__builtin_neon_vqrshrnd_n_s64
iWiIi
__builtin_neon_vqrshrnd_n_u64
UiUWiIi
__builtin_neon_vqrshrnh_n_s16
ScsIi
__builtin_neon_vqrshrnh_n_u16
ScUsIi
__builtin_neon_vqrshrns_n_s32
siIi
__builtin_neon_vqrshrns_n_u32
UsUiIi
__builtin_neon_vqrshrun_n_v
__builtin_neon_vqrshrund_n_s64
__builtin_neon_vqrshrunh_n_s16
__builtin_neon_vqrshruns_n_s32
__builtin_neon_vqshl_n_v
__builtin_neon_vqshl_v
__builtin_neon_vqshlb_n_s8
ScScIi
__builtin_neon_vqshlb_n_u8
__builtin_neon_vqshlb_s8
__builtin_neon_vqshlb_u8
__builtin_neon_vqshld_n_s64
WiWiIi
__builtin_neon_vqshld_n_u64
UWiUWiIi
__builtin_neon_vqshld_s64
__builtin_neon_vqshld_u64
__builtin_neon_vqshlh_n_s16
ssIi
__builtin_neon_vqshlh_n_u16
UsUsIi
__builtin_neon_vqshlh_s16
__builtin_neon_vqshlh_u16
__builtin_neon_vqshlq_n_v
__builtin_neon_vqshlq_v
__builtin_neon_vqshls_n_s32
iiIi
__builtin_neon_vqshls_n_u32
UiUiIi
__builtin_neon_vqshls_s32
__builtin_neon_vqshls_u32
__builtin_neon_vqshlu_n_v
__builtin_neon_vqshlub_n_s8
__builtin_neon_vqshlud_n_s64
__builtin_neon_vqshluh_n_s16
__builtin_neon_vqshluq_n_v
__builtin_neon_vqshlus_n_s32
__builtin_neon_vqshrn_n_v
__builtin_neon_vqshrnd_n_s64
__builtin_neon_vqshrnd_n_u64
__builtin_neon_vqshrnh_n_s16
__builtin_neon_vqshrnh_n_u16
__builtin_neon_vqshrns_n_s32
__builtin_neon_vqshrns_n_u32
__builtin_neon_vqshrun_n_v
__builtin_neon_vqshrund_n_s64
__builtin_neon_vqshrunh_n_s16
__builtin_neon_vqshruns_n_s32
__builtin_neon_vqsub_v
__builtin_neon_vqsubb_s8
__builtin_neon_vqsubb_u8
__builtin_neon_vqsubd_s64
__builtin_neon_vqsubd_u64
__builtin_neon_vqsubh_s16
__builtin_neon_vqsubh_u16
__builtin_neon_vqsubq_v
__builtin_neon_vqsubs_s32
__builtin_neon_vqsubs_u32
__builtin_neon_vqtbl1_v
V8ScV16ScV8Sci
__builtin_neon_vqtbl1q_v
__builtin_neon_vqtbl2_v
V8ScV16ScV16ScV8Sci
__builtin_neon_vqtbl2q_v
__builtin_neon_vqtbl3_v
V8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl3q_v
V16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbl4_v
V8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl4q_v
V16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbx1_v
V8ScV8ScV16ScV8Sci
__builtin_neon_vqtbx1q_v
__builtin_neon_vqtbx2_v
V8ScV8ScV16ScV16ScV8Sci
__builtin_neon_vqtbx2q_v
__builtin_neon_vqtbx3_v
V8ScV8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx3q_v
__builtin_neon_vqtbx4_v
V8ScV8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx4q_v
V16ScV16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vraddhn_v
__builtin_neon_vrbit_v
__builtin_neon_vrbitq_v
__builtin_neon_vrecpe_v
__builtin_neon_vrecped_f64
__builtin_neon_vrecpeq_v
__builtin_neon_vrecpes_f32
__builtin_neon_vrecps_v
__builtin_neon_vrecpsd_f64
__builtin_neon_vrecpsq_v
__builtin_neon_vrecpss_f32
__builtin_neon_vrecpxd_f64
__builtin_neon_vrecpxs_f32
__builtin_neon_vrhadd_v
__builtin_neon_vrhaddq_v
__builtin_neon_vrnd_v
__builtin_neon_vrnda_v
__builtin_neon_vrndaq_v
__builtin_neon_vrndi_v
__builtin_neon_vrndiq_v
__builtin_neon_vrndm_v
__builtin_neon_vrndmq_v
__builtin_neon_vrndn_v
__builtin_neon_vrndnq_v
__builtin_neon_vrndns_f32
__builtin_neon_vrndp_v
__builtin_neon_vrndpq_v
__builtin_neon_vrndq_v
__builtin_neon_vrndx_v
__builtin_neon_vrndxq_v
__builtin_neon_vrshl_v
__builtin_neon_vrshld_s64
__builtin_neon_vrshld_u64
__builtin_neon_vrshlq_v
__builtin_neon_vrshr_n_v
__builtin_neon_vrshrd_n_s64
__builtin_neon_vrshrd_n_u64
__builtin_neon_vrshrn_n_v
__builtin_neon_vrshrq_n_v
__builtin_neon_vrsqrte_v
__builtin_neon_vrsqrted_f64
__builtin_neon_vrsqrteq_v
__builtin_neon_vrsqrtes_f32
__builtin_neon_vrsqrts_v
__builtin_neon_vrsqrtsd_f64
__builtin_neon_vrsqrtsq_v
__builtin_neon_vrsqrtss_f32
__builtin_neon_vrsra_n_v
__builtin_neon_vrsrad_n_s64
WiWiWiIi
__builtin_neon_vrsrad_n_u64
UWiUWiUWiIi
__builtin_neon_vrsraq_n_v
__builtin_neon_vrsubhn_v
__builtin_neon_vset_lane_f32
V2ffV2fIi
__builtin_neon_vset_lane_f64
V1ddV1dIi
__builtin_neon_vset_lane_i16
V4ssV4sIi
__builtin_neon_vset_lane_i32
V2iiV2iIi
__builtin_neon_vset_lane_i64
V1WiWiV1WiIi
__builtin_neon_vset_lane_i8
V8ScScV8ScIi
__builtin_neon_vsetq_lane_f32
V4ffV4fIi
__builtin_neon_vsetq_lane_f64
V2ddV2dIi
__builtin_neon_vsetq_lane_i16
V8ssV8sIi
__builtin_neon_vsetq_lane_i32
V4iiV4iIi
__builtin_neon_vsetq_lane_i64
V2WiWiV2WiIi
__builtin_neon_vsetq_lane_i8
V16ScScV16ScIi
__builtin_neon_vsha1cq_u32
V4iV4UiUiV4Ui
__builtin_neon_vsha1h_u32
__builtin_neon_vsha1mq_u32
__builtin_neon_vsha1pq_u32
__builtin_neon_vsha1su0q_v
__builtin_neon_vsha1su1q_v
__builtin_neon_vsha256h2q_v
__builtin_neon_vsha256hq_v
__builtin_neon_vsha256su0q_v
__builtin_neon_vsha256su1q_v
__builtin_neon_vshl_n_v
__builtin_neon_vshl_v
__builtin_neon_vshld_n_s64
__builtin_neon_vshld_n_u64
__builtin_neon_vshld_s64
__builtin_neon_vshld_u64
__builtin_neon_vshll_n_v
V16ScV8ScIii
__builtin_neon_vshlq_n_v
__builtin_neon_vshlq_v
__builtin_neon_vshr_n_v
__builtin_neon_vshrd_n_s64
__builtin_neon_vshrd_n_u64
__builtin_neon_vshrn_n_v
__builtin_neon_vshrq_n_v
__builtin_neon_vsli_n_v
__builtin_neon_vslid_n_s64
__builtin_neon_vslid_n_u64
__builtin_neon_vsliq_n_v
__builtin_neon_vsqadd_v
__builtin_neon_vsqaddb_u8
__builtin_neon_vsqaddd_u64
__builtin_neon_vsqaddh_u16
__builtin_neon_vsqaddq_v
__builtin_neon_vsqadds_u32
__builtin_neon_vsqrt_v
__builtin_neon_vsqrtq_v
__builtin_neon_vsra_n_v
__builtin_neon_vsrad_n_s64
__builtin_neon_vsrad_n_u64
__builtin_neon_vsraq_n_v
__builtin_neon_vsri_n_v
__builtin_neon_vsrid_n_s64
__builtin_neon_vsrid_n_u64
__builtin_neon_vsriq_n_v
__builtin_neon_vst1_lane_v
vv*V8ScIii
__builtin_neon_vst1_v
vv*V8Sci
__builtin_neon_vst1_x2_v
vv*V8ScV8Sci
__builtin_neon_vst1_x3_v
vv*V8ScV8ScV8Sci
__builtin_neon_vst1_x4_v
vv*V8ScV8ScV8ScV8Sci
__builtin_neon_vst1q_lane_v
vv*V16ScIii
__builtin_neon_vst1q_v
vv*V16Sci
__builtin_neon_vst1q_x2_v
vv*V16ScV16Sci
__builtin_neon_vst1q_x3_v
vv*V16ScV16ScV16Sci
__builtin_neon_vst1q_x4_v
vv*V16ScV16ScV16ScV16Sci
__builtin_neon_vst2_lane_v
vv*V8ScV8ScIii
__builtin_neon_vst2_v
__builtin_neon_vst2q_lane_v
vv*V16ScV16ScIii
__builtin_neon_vst2q_v
__builtin_neon_vst3_lane_v
vv*V8ScV8ScV8ScIii
__builtin_neon_vst3_v
__builtin_neon_vst3q_lane_v
vv*V16ScV16ScV16ScIii
__builtin_neon_vst3q_v
__builtin_neon_vst4_lane_v
vv*V8ScV8ScV8ScV8ScIii
__builtin_neon_vst4_v
__builtin_neon_vst4q_lane_v
vv*V16ScV16ScV16ScV16ScIii
__builtin_neon_vst4q_v
__builtin_neon_vstrq_p128
vv*ULLLi
__builtin_neon_vsubd_s64
__builtin_neon_vsubd_u64
__builtin_neon_vsubhn_v
__builtin_neon_vtbl1_v
__builtin_neon_vtbl2_v
__builtin_neon_vtbl3_v
V8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbl4_v
V8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbx1_v
__builtin_neon_vtbx2_v
__builtin_neon_vtbx3_v
__builtin_neon_vtbx4_v
V8ScV8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtrn_v
__builtin_neon_vtrnq_v
__builtin_neon_vtst_v
__builtin_neon_vtstd_s64
__builtin_neon_vtstd_u64
__builtin_neon_vtstq_v
__builtin_neon_vuqadd_v
__builtin_neon_vuqaddb_s8
__builtin_neon_vuqaddd_s64
__builtin_neon_vuqaddh_s16
__builtin_neon_vuqaddq_v
__builtin_neon_vuqadds_s32
__builtin_neon_vuzp_v
__builtin_neon_vuzpq_v
__builtin_neon_vzip_v
__builtin_neon_vzipq_v
__builtin_neon_vabdh_f16
__builtin_neon_vabsh_f16
__builtin_neon_vaddh_f16
__builtin_neon_vcageh_f16
Ushh
__builtin_neon_vcagth_f16
__builtin_neon_vcaleh_f16
__builtin_neon_vcalth_f16
__builtin_neon_vceqh_f16
__builtin_neon_vceqzh_f16
__builtin_neon_vcgeh_f16
__builtin_neon_vcgezh_f16
__builtin_neon_vcgth_f16
__builtin_neon_vcgtzh_f16
__builtin_neon_vcleh_f16
__builtin_neon_vclezh_f16
__builtin_neon_vclth_f16
__builtin_neon_vcltzh_f16
__builtin_neon_vcvtah_s16_f16
__builtin_neon_vcvtah_s32_f16
__builtin_neon_vcvtah_s64_f16
__builtin_neon_vcvtah_u16_f16
__builtin_neon_vcvtah_u32_f16
__builtin_neon_vcvtah_u64_f16
UWih
__builtin_neon_vcvth_f16_s16
__builtin_neon_vcvth_f16_s32
__builtin_neon_vcvth_f16_s64
__builtin_neon_vcvth_f16_u16
__builtin_neon_vcvth_f16_u32
__builtin_neon_vcvth_f16_u64
hUWi
__builtin_neon_vcvth_n_f16_s16
hsIi
__builtin_neon_vcvth_n_f16_s32
hiIi
__builtin_neon_vcvth_n_f16_s64
hWiIi
__builtin_neon_vcvth_n_f16_u16
hUsIi
__builtin_neon_vcvth_n_f16_u32
hUiIi
__builtin_neon_vcvth_n_f16_u64
hUWiIi
__builtin_neon_vcvth_n_s16_f16
shIi
__builtin_neon_vcvth_n_s32_f16
ihIi
__builtin_neon_vcvth_n_s64_f16
WihIi
__builtin_neon_vcvth_n_u16_f16
UshIi
__builtin_neon_vcvth_n_u32_f16
UihIi
__builtin_neon_vcvth_n_u64_f16
UWihIi
__builtin_neon_vcvth_s16_f16
__builtin_neon_vcvth_s32_f16
__builtin_neon_vcvth_s64_f16
__builtin_neon_vcvth_u16_f16
__builtin_neon_vcvth_u32_f16
__builtin_neon_vcvth_u64_f16
__builtin_neon_vcvtmh_s16_f16
__builtin_neon_vcvtmh_s32_f16
__builtin_neon_vcvtmh_s64_f16
__builtin_neon_vcvtmh_u16_f16
__builtin_neon_vcvtmh_u32_f16
__builtin_neon_vcvtmh_u64_f16
__builtin_neon_vcvtnh_s16_f16
__builtin_neon_vcvtnh_s32_f16
__builtin_neon_vcvtnh_s64_f16
__builtin_neon_vcvtnh_u16_f16
__builtin_neon_vcvtnh_u32_f16
__builtin_neon_vcvtnh_u64_f16
__builtin_neon_vcvtph_s16_f16
__builtin_neon_vcvtph_s32_f16
__builtin_neon_vcvtph_s64_f16
__builtin_neon_vcvtph_u16_f16
__builtin_neon_vcvtph_u32_f16
__builtin_neon_vcvtph_u64_f16
__builtin_neon_vdivh_f16
__builtin_neon_vfmah_f16
hhhh
__builtin_neon_vfmsh_f16
__builtin_neon_vmaxh_f16
__builtin_neon_vmaxnmh_f16
__builtin_neon_vminh_f16
__builtin_neon_vminnmh_f16
__builtin_neon_vmulh_f16
__builtin_neon_vmulxh_f16
__builtin_neon_vnegh_f16
__builtin_neon_vrecpeh_f16
__builtin_neon_vrecpsh_f16
__builtin_neon_vrecpxh_f16
__builtin_neon_vrndah_f16
__builtin_neon_vrndh_f16
__builtin_neon_vrndih_f16
__builtin_neon_vrndmh_f16
__builtin_neon_vrndnh_f16
__builtin_neon_vrndph_f16
__builtin_neon_vrndxh_f16
__builtin_neon_vrsqrteh_f16
__builtin_neon_vrsqrtsh_f16
__builtin_neon_vsqrth_f16
__builtin_neon_vsubh_f16
__builtin_arm_smulbb
__builtin_arm_smulbt
__builtin_arm_smultb
__builtin_arm_smultt
__builtin_arm_smulwb
__builtin_arm_smulwt
__builtin_arm_qadd
__builtin_arm_qsub
__builtin_arm_qdbl
__builtin_arm_ssat
iiUi
__builtin_arm_usat
UiiUi
__builtin_arm_smlabb
__builtin_arm_smlabt
__builtin_arm_smlatb
__builtin_arm_smlatt
__builtin_arm_smlawb
__builtin_arm_smlawt
__builtin_arm_ssat16
__builtin_arm_usat16
__builtin_arm_sxtab16
__builtin_arm_sxtb16
__builtin_arm_uxtab16
__builtin_arm_uxtb16
__builtin_arm_sel
__builtin_arm_qadd8
__builtin_arm_qsub8
__builtin_arm_sadd8
__builtin_arm_shadd8
__builtin_arm_shsub8
__builtin_arm_ssub8
__builtin_arm_uadd8
__builtin_arm_uhadd8
__builtin_arm_uhsub8
__builtin_arm_uqadd8
__builtin_arm_uqsub8
__builtin_arm_usub8
__builtin_arm_usad8
__builtin_arm_usada8
__builtin_arm_qadd16
__builtin_arm_qasx
__builtin_arm_qsax
__builtin_arm_qsub16
__builtin_arm_sadd16
__builtin_arm_sasx
__builtin_arm_shadd16
__builtin_arm_shasx
__builtin_arm_shsax
__builtin_arm_shsub16
__builtin_arm_ssax
__builtin_arm_ssub16
__builtin_arm_uadd16
__builtin_arm_uasx
__builtin_arm_uhadd16
__builtin_arm_uhasx
__builtin_arm_uhsax
__builtin_arm_uhsub16
__builtin_arm_uqadd16
__builtin_arm_uqasx
__builtin_arm_uqsax
__builtin_arm_uqsub16
__builtin_arm_usax
__builtin_arm_usub16
__builtin_arm_smlad
__builtin_arm_smladx
__builtin_arm_smlald
LLiiiLLi
__builtin_arm_smlaldx
__builtin_arm_smlsd
__builtin_arm_smlsdx
__builtin_arm_smlsld
__builtin_arm_smlsldx
__builtin_arm_smuad
__builtin_arm_smuadx
__builtin_arm_smusd
__builtin_arm_smusdx
__builtin_arm_rbit
__builtin_arm_ldrexd
LLUiv*
__builtin_arm_strexd
iLLUiv*
__builtin_arm_ldrex
__builtin_arm_ldaex
__builtin_arm_strex
__builtin_arm_stlex
__builtin_arm_clrex
__builtin_arm_get_fpscr
__builtin_arm_set_fpscr
__builtin_arm_vcvtr_f
__builtin_arm_vcvtr_d
__builtin_arm_ldc
vUIiUIivC*
__builtin_arm_ldcl
__builtin_arm_ldc2
__builtin_arm_ldc2l
__builtin_arm_stc
vUIiUIiv*
__builtin_arm_stcl
__builtin_arm_stc2
__builtin_arm_stc2l
__builtin_arm_cdp
vUIiUIiUIiUIiUIiUIi
__builtin_arm_cdp2
__builtin_arm_mcr
vUIiUIiUiUIiUIiUIi
__builtin_arm_mcr2
__builtin_arm_mrc
UiUIiUIiUIiUIiUIi
__builtin_arm_mrc2
__builtin_arm_mcrr
vUIiUIiLLUiUIi
__builtin_arm_mcrr2
__builtin_arm_mrrc
LLUiUIiUIiUIi
__builtin_arm_mrrc2
__builtin_arm_crc32b
__builtin_arm_crc32cb
__builtin_arm_crc32h
__builtin_arm_crc32ch
__builtin_arm_crc32w
__builtin_arm_crc32cw
__builtin_arm_crc32d
UiUiLLUi
__builtin_arm_crc32cd
__builtin_arm_nop
__builtin_arm_yield
__builtin_arm_wfe
__builtin_arm_wfi
__builtin_arm_sev
__builtin_arm_sevl
__builtin_arm_dbg
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_arm_prefetch
vvC*UiUi
__builtin_arm_rsr
UicC*
__builtin_arm_rsr64
LLUicC*
__builtin_arm_rsrp
v*cC*
__builtin_arm_wsr
vcC*Ui
__builtin_arm_wsr64
vcC*LLUi
__builtin_arm_wsrp
vcC*vC*
__emit
vIUiC
__yield
__wfe
__wfi
__sev
__sevl
__dmb
__dsb
__isb
__iso_volatile_load8
ccCD*
__iso_volatile_load16
ssCD*
__iso_volatile_load32
iiCD*
__iso_volatile_load64
LLiLLiCD*
__iso_volatile_store8
vcD*c
__iso_volatile_store16
vsD*s
__iso_volatile_store32
viD*i
__iso_volatile_store64
vLLiD*LLi
__ldrexd
WiWiCD*
_MoveFromCoprocessor
UiIUiIUiIUiIUiIUi
_MoveFromCoprocessor2
_MoveToCoprocessor
vUiIUiIUiIUiIUiIUi
_MoveToCoprocessor2
__arm
__arm__
__ARM_ARCH_7K__
__ARM_ARCH_7A__
__ARM_ARCH_
__ARM_ARCH
__ARM_FEATURE_CRYPTO
__ARM_FEATURE_CRC32
__ARM_FEATURE_NUMERIC_MAXMIN
__ARM_FEATURE_DIRECTED_ROUNDING
__ARM_ARCH_ISA_ARM
__ARM_ARCH_ISA_THUMB
__ARM_32BIT_STATE
__ARM_ARCH_PROFILE
__ARM_FEATURE_UNALIGNED
__ARM_FEATURE_LDREX
__ARM_FEATURE_CLZ
__ARM_FP
__ARM_ACLE
__ARM_FP16_FORMAT_IEEE
__ARM_FP16_ARGS
__ARM_FEATURE_FMA
__THUMB_INTERWORK__
__ARM_EABI__
__ARM_PCS
__ARM_PCS_VFP
__SOFTFP__
__XSCALE__
__THUMBEL__
__thumb__
__thumb2__
__ARM_FEATURE_SIMD32
__ARM_FEATURE_IDIV
__ARM_ARCH_EXT_IDIV__
__APCS_32__
__VFP_FP__
__ARM_VFPV2__
__ARM_VFPV3__
__ARM_VFPV4__
__ARM_FPV5__
__ARM_NEON
__ARM_NEON__
__ARM_NEON_FP
__ARM_SIZEOF_WCHAR_T
__ARM_SIZEOF_MINIMAL_ENUM
__ARM_FEATURE_DSP
__ARM_FEATURE_SAT
__ARM_FEATURE_QBIT
__ARM_FP_FAST
__ARM_FEATURE_FP16_VECTOR_ARITHMETIC
__ARM_FEATURE_FP16_SCALAR_ARITHMETIC
__ARM_FEATURE_DOTPROD
__ARM_FEATURE_QRDMX
__ARMEL__
__ARMEB__
__ARM_BIG_ENDIAN
_WIN32
_WIN64
_M_ARM_NT
_M_ARMT
_M_ARM
_M_THUMB
_M_ARM_FP
_CPPRTTI
_CPPUNWIND
__BOOL_DEFINED
_CHAR_UNSIGNED
_MSC_VER
_MSC_FULL_VER
_MSC_BUILD
_HAS_CHAR16_T_LANGUAGE_SUPPORT
_MSVC_LANG
201704L
201703L
201402L
_MSC_EXTENSIONS
_RVALUE_REFERENCES_V2_SUPPORTED
_RVALUE_REFERENCES_SUPPORTED
_NATIVE_NULLPTR_SUPPORTED
_INTEGRAL_MAX_BITS
_ARM_
__CYGWIN__
__CYGWIN32__
_GNU_SOURCE
__TEXT,__StaticInit,regular,pure_instructions
__RENDERSCRIPT__
__gnu_mcount_nc
mcount
armv7
at90s1200
__AVR_AT90S1200__
attiny11
__AVR_ATtiny11__
attiny12
__AVR_ATtiny12__
attiny15
__AVR_ATtiny15__
attiny28
__AVR_ATtiny28__
at90s2313
__AVR_AT90S2313__
at90s2323
__AVR_AT90S2323__
at90s2333
__AVR_AT90S2333__
at90s2343
__AVR_AT90S2343__
attiny22
__AVR_ATtiny22__
attiny26
__AVR_ATtiny26__
at86rf401
__AVR_AT86RF401__
at90s4414
__AVR_AT90S4414__
at90s4433
__AVR_AT90S4433__
at90s4434
__AVR_AT90S4434__
at90s8515
__AVR_AT90S8515__
at90c8534
__AVR_AT90c8534__
at90s8535
__AVR_AT90S8535__
ata5272
__AVR_ATA5272__
attiny13
__AVR_ATtiny13__
attiny13a
__AVR_ATtiny13A__
attiny2313
__AVR_ATtiny2313__
attiny2313a
__AVR_ATtiny2313A__
attiny24
__AVR_ATtiny24__
attiny24a
__AVR_ATtiny24A__
attiny4313
__AVR_ATtiny4313__
attiny44
__AVR_ATtiny44__
attiny44a
__AVR_ATtiny44A__
attiny84
__AVR_ATtiny84__
attiny84a
__AVR_ATtiny84A__
attiny25
__AVR_ATtiny25__
attiny45
__AVR_ATtiny45__
attiny85
__AVR_ATtiny85__
attiny261
__AVR_ATtiny261__
attiny261a
__AVR_ATtiny261A__
attiny461
__AVR_ATtiny461__
attiny461a
__AVR_ATtiny461A__
attiny861
__AVR_ATtiny861__
attiny861a
__AVR_ATtiny861A__
attiny87
__AVR_ATtiny87__
attiny43u
__AVR_ATtiny43U__
attiny48
__AVR_ATtiny48__
attiny88
__AVR_ATtiny88__
attiny828
__AVR_ATtiny828__
at43usb355
__AVR_AT43USB355__
at76c711
__AVR_AT76C711__
atmega103
__AVR_ATmega103__
at43usb320
__AVR_AT43USB320__
attiny167
__AVR_ATtiny167__
at90usb82
__AVR_AT90USB82__
at90usb162
__AVR_AT90USB162__
ata5505
__AVR_ATA5505__
atmega8u2
__AVR_ATmega8U2__
atmega16u2
__AVR_ATmega16U2__
atmega32u2
__AVR_ATmega32U2__
attiny1634
__AVR_ATtiny1634__
atmega8
__AVR_ATmega8__
ata6289
__AVR_ATA6289__
atmega8a
__AVR_ATmega8A__
ata6285
__AVR_ATA6285__
ata6286
__AVR_ATA6286__
atmega48
__AVR_ATmega48__
atmega48a
__AVR_ATmega48A__
atmega48pa
__AVR_ATmega48PA__
atmega48p
__AVR_ATmega48P__
atmega88
__AVR_ATmega88__
atmega88a
__AVR_ATmega88A__
atmega88p
__AVR_ATmega88P__
atmega88pa
__AVR_ATmega88PA__
atmega8515
__AVR_ATmega8515__
atmega8535
__AVR_ATmega8535__
atmega8hva
__AVR_ATmega8HVA__
at90pwm1
__AVR_AT90PWM1__
at90pwm2
__AVR_AT90PWM2__
at90pwm2b
__AVR_AT90PWM2B__
at90pwm3
__AVR_AT90PWM3__
at90pwm3b
__AVR_AT90PWM3B__
at90pwm81
__AVR_AT90PWM81__
ata5790
__AVR_ATA5790__
ata5795
__AVR_ATA5795__
atmega16
__AVR_ATmega16__
atmega16a
__AVR_ATmega16A__
atmega161
__AVR_ATmega161__
atmega162
__AVR_ATmega162__
atmega163
__AVR_ATmega163__
atmega164a
__AVR_ATmega164A__
atmega164p
__AVR_ATmega164P__
atmega164pa
__AVR_ATmega164PA__
atmega165
__AVR_ATmega165__
atmega165a
__AVR_ATmega165A__
atmega165p
__AVR_ATmega165P__
atmega165pa
__AVR_ATmega165PA__
atmega168
__AVR_ATmega168__
atmega168a
__AVR_ATmega168A__
atmega168p
__AVR_ATmega168P__
atmega168pa
__AVR_ATmega168PA__
atmega169
__AVR_ATmega169__
atmega169a
__AVR_ATmega169A__
atmega169p
__AVR_ATmega169P__
atmega169pa
__AVR_ATmega169PA__
atmega32
__AVR_ATmega32__
atmega32a
__AVR_ATmega32A__
atmega323
__AVR_ATmega323__
atmega324a
__AVR_ATmega324A__
atmega324p
__AVR_ATmega324P__
atmega324pa
__AVR_ATmega324PA__
atmega325
__AVR_ATmega325__
atmega325a
__AVR_ATmega325A__
atmega325p
__AVR_ATmega325P__
atmega325pa
__AVR_ATmega325PA__
atmega3250
__AVR_ATmega3250__
atmega3250a
__AVR_ATmega3250A__
atmega3250p
__AVR_ATmega3250P__
atmega3250pa
__AVR_ATmega3250PA__
atmega328
__AVR_ATmega328__
atmega328p
__AVR_ATmega328P__
atmega329
__AVR_ATmega329__
atmega329a
__AVR_ATmega329A__
atmega329p
__AVR_ATmega329P__
atmega329pa
__AVR_ATmega329PA__
atmega3290
__AVR_ATmega3290__
atmega3290a
__AVR_ATmega3290A__
atmega3290p
__AVR_ATmega3290P__
atmega3290pa
__AVR_ATmega3290PA__
atmega406
__AVR_ATmega406__
atmega64
__AVR_ATmega64__
atmega64a
__AVR_ATmega64A__
atmega640
__AVR_ATmega640__
atmega644
__AVR_ATmega644__
atmega644a
__AVR_ATmega644A__
atmega644p
__AVR_ATmega644P__
atmega644pa
__AVR_ATmega644PA__
atmega645
__AVR_ATmega645__
atmega645a
__AVR_ATmega645A__
atmega645p
__AVR_ATmega645P__
atmega649
__AVR_ATmega649__
atmega649a
__AVR_ATmega649A__
atmega649p
__AVR_ATmega649P__
atmega6450
__AVR_ATmega6450__
atmega6450a
__AVR_ATmega6450A__
atmega6450p
__AVR_ATmega6450P__
atmega6490
__AVR_ATmega6490__
atmega6490a
__AVR_ATmega6490A__
atmega6490p
__AVR_ATmega6490P__
atmega64rfr2
__AVR_ATmega64RFR2__
atmega644rfr2
__AVR_ATmega644RFR2__
atmega16hva
__AVR_ATmega16HVA__
atmega16hva2
__AVR_ATmega16HVA2__
atmega16hvb
__AVR_ATmega16HVB__
atmega16hvbrevb
__AVR_ATmega16HVBREVB__
atmega32hvb
__AVR_ATmega32HVB__
atmega32hvbrevb
__AVR_ATmega32HVBREVB__
atmega64hve
__AVR_ATmega64HVE__
at90can32
__AVR_AT90CAN32__
at90can64
__AVR_AT90CAN64__
at90pwm161
__AVR_AT90PWM161__
at90pwm216
__AVR_AT90PWM216__
at90pwm316
__AVR_AT90PWM316__
atmega32c1
__AVR_ATmega32C1__
atmega64c1
__AVR_ATmega64C1__
atmega16m1
__AVR_ATmega16M1__
atmega32m1
__AVR_ATmega32M1__
atmega64m1
__AVR_ATmega64M1__
atmega16u4
__AVR_ATmega16U4__
atmega32u4
__AVR_ATmega32U4__
atmega32u6
__AVR_ATmega32U6__
at90usb646
__AVR_AT90USB646__
at90usb647
__AVR_AT90USB647__
at90scr100
__AVR_AT90SCR100__
at94k
__AVR_AT94K__
m3000
__AVR_AT000__
atmega128
__AVR_ATmega128__
atmega128a
__AVR_ATmega128A__
atmega1280
__AVR_ATmega1280__
atmega1281
__AVR_ATmega1281__
atmega1284
__AVR_ATmega1284__
atmega1284p
__AVR_ATmega1284P__
atmega128rfa1
__AVR_ATmega128RFA1__
atmega128rfr2
__AVR_ATmega128RFR2__
atmega1284rfr2
__AVR_ATmega1284RFR2__
at90can128
__AVR_AT90CAN128__
at90usb1286
__AVR_AT90USB1286__
at90usb1287
__AVR_AT90USB1287__
atmega2560
__AVR_ATmega2560__
atmega2561
__AVR_ATmega2561__
atmega256rfr2
__AVR_ATmega256RFR2__
atmega2564rfr2
__AVR_ATmega2564RFR2__
atxmega16a4
__AVR_ATxmega16A4__
atxmega16a4u
__AVR_ATxmega16a4U__
atxmega16c4
__AVR_ATxmega16C4__
atxmega16d4
__AVR_ATxmega16D4__
atxmega32a4
__AVR_ATxmega32A4__
atxmega32a4u
__AVR_ATxmega32A4U__
atxmega32c4
__AVR_ATxmega32C4__
atxmega32d4
__AVR_ATxmega32D4__
atxmega32e5
__AVR_ATxmega32E5__
atxmega16e5
__AVR_ATxmega16E5__
atxmega8e5
__AVR_ATxmega8E5__
atxmega32x1
__AVR_ATxmega32X1__
atxmega64a3
__AVR_ATxmega64A3__
atxmega64a3u
__AVR_ATxmega64A3U__
atxmega64a4u
__AVR_ATxmega64A4U__
atxmega64b1
__AVR_ATxmega64B1__
atxmega64b3
__AVR_ATxmega64B3__
atxmega64c3
__AVR_ATxmega64C3__
atxmega64d3
__AVR_ATxmega64D3__
atxmega64d4
__AVR_ATxmega64D4__
atxmega64a1
__AVR_ATxmega64A1__
atxmega64a1u
__AVR_ATxmega64A1U__
atxmega128a3
__AVR_ATxmega128A3__
atxmega128a3u
__AVR_ATxmega128A3U__
atxmega128b1
__AVR_ATxmega128B1__
atxmega128b3
__AVR_ATxmega128B3__
atxmega128c3
__AVR_ATxmega128C3__
atxmega128d3
__AVR_ATxmega128D3__
atxmega128d4
__AVR_ATxmega128D4__
atxmega192a3
__AVR_ATxmega192A3__
atxmega192a3u
__AVR_ATxmega192A3U__
atxmega192c3
__AVR_ATxmega192C3__
atxmega192d3
__AVR_ATxmega192D3__
atxmega256a3
__AVR_ATxmega256A3__
atxmega256a3u
__AVR_ATxmega256A3U__
atxmega256a3b
__AVR_ATxmega256A3B__
atxmega256a3bu
__AVR_ATxmega256A3BU__
atxmega256c3
__AVR_ATxmega256C3__
atxmega256d3
__AVR_ATxmega256D3__
atxmega384c3
__AVR_ATxmega384C3__
atxmega384d3
__AVR_ATxmega384D3__
atxmega128a1
__AVR_ATxmega128A1__
atxmega128a1u
__AVR_ATxmega128A1U__
atxmega128a4u
__AVR_ATxmega128a4U__
attiny4
__AVR_ATtiny4__
attiny5
__AVR_ATtiny5__
attiny9
__AVR_ATtiny9__
attiny10
__AVR_ATtiny10__
attiny20
__AVR_ATtiny20__
attiny40
__AVR_ATtiny40__
attiny102
__AVR_ATtiny102__
attiny104
__AVR_ATtiny104__
avr1
avr2
avr25
avr3
avr31
avr35
avr4
avr5
avr51
avr6
avrxmega1
avrxmega2
avrxmega3
avrxmega4
avrxmega5
avrxmega6
avrxmega7
avrtiny
__AVR
__AVR__
dwarfris
alu32
probe
__BPF__
__builtin_brev_ldd
v*LLi*CLLi*iC
__builtin_brev_ldw
v*i*Ci*iC
__builtin_brev_ldh
v*s*Cs*iC
__builtin_brev_lduh
v*Us*CUs*iC
__builtin_brev_ldb
v*Sc*CSc*iC
__builtin_brev_ldub
v*Uc*CUc*iC
__builtin_circ_ldd
LLi*LLi*LLi*iIi
__builtin_circ_ldw
i*i*i*iIi
__builtin_circ_ldh
s*s*s*iIi
__builtin_circ_lduh
Us*Us*Us*iIi
__builtin_circ_ldb
c*c*c*iIi
__builtin_circ_ldub
Uc*Uc*Uc*iIi
__builtin_brev_std
LLi*CLLi*LLiiC
__builtin_brev_stw
i*Ci*iiC
__builtin_brev_sth
s*Cs*iiC
__builtin_brev_sthhi
__builtin_brev_stb
c*Cc*iiC
__builtin_circ_std
LLi*LLi*LLiiIi
__builtin_circ_stw
i*i*iiIi
__builtin_circ_sth
s*s*iiIi
__builtin_circ_sthhi
__builtin_circ_stb
c*c*iiIi
__builtin_HEXAGON_L2_loadrub_pci
iv*IiivC*
__builtin_HEXAGON_L2_loadrb_pci
__builtin_HEXAGON_L2_loadruh_pci
__builtin_HEXAGON_L2_loadrh_pci
__builtin_HEXAGON_L2_loadri_pci
__builtin_HEXAGON_L2_loadrd_pci
LLiv*IiivC*
__builtin_HEXAGON_L2_loadrub_pcr
iv*ivC*
__builtin_HEXAGON_L2_loadrb_pcr
__builtin_HEXAGON_L2_loadruh_pcr
__builtin_HEXAGON_L2_loadrh_pcr
__builtin_HEXAGON_L2_loadri_pcr
__builtin_HEXAGON_L2_loadrd_pcr
LLiv*ivC*
__builtin_HEXAGON_S2_storerb_pci
vv*IiiivC*
__builtin_HEXAGON_S2_storerh_pci
__builtin_HEXAGON_S2_storerf_pci
__builtin_HEXAGON_S2_storeri_pci
__builtin_HEXAGON_S2_storerd_pci
vv*IiiLLivC*
__builtin_HEXAGON_S2_storerb_pcr
vv*iivC*
__builtin_HEXAGON_S2_storerh_pcr
__builtin_HEXAGON_S2_storerf_pcr
__builtin_HEXAGON_S2_storeri_pcr
__builtin_HEXAGON_S2_storerd_pcr
vv*iLLivC*
__builtin_HEXAGON_C2_cmpeq
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_cmpgtu
__builtin_HEXAGON_C2_cmpeqp
iLLiLLi
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_rcmpeq
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_cmpgtui
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_C2_cmpltu
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C4_nbitsclri
__builtin_HEXAGON_C4_cmpneqi
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_or_and
__builtin_HEXAGON_C4_or_or
__builtin_HEXAGON_C4_and_andn
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_C2_pxfer_map
__builtin_HEXAGON_C2_any8
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_C2_muxii
__builtin_HEXAGON_C2_muxir
__builtin_HEXAGON_C2_muxri
__builtin_HEXAGON_C2_vmux
LLiiLLiLLi
__builtin_HEXAGON_C2_mask
LLii
__builtin_HEXAGON_A2_vcmpbeq
__builtin_HEXAGON_A4_vcmpbeqi
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A4_vcmpbgtui
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_A4_vcmpbgti
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_cmpbgtui
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vcmphgtu
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgti
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A4_vcmpweqi
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A4_vcmpwgtui
__builtin_HEXAGON_A4_boundscheck
iiLLi
__builtin_HEXAGON_A4_tlbmatch
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_hl_s0
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s0
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_nac_hl_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_nac_ll_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_hl_s0
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_hl_s1
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_ll_s1
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyu_hh_s0
Uiii
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_lh_s0
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_mpyud_hh_s0
ULLiii
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_mpyud_ll_s1
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_macsip
__builtin_HEXAGON_M2_macsin
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpy_up_s1_sat
__builtin_HEXAGON_M2_mpyu_up
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
__builtin_HEXAGON_M4_mac_up_s1_sat
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_accii
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_M2_subacc
__builtin_HEXAGON_M4_mpyrr_addr
__builtin_HEXAGON_M4_mpyri_addr_u2
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_M4_mpyri_addi
__builtin_HEXAGON_M4_mpyrr_addi
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2s_s1
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2es_s1
__builtin_HEXAGON_M2_vmac2es_s0
LLiLLiLLiLLi
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vmacbsu
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpyrsc_s0
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cmacs_s0
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_cnacsc_s0
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_vrcmpys_s1
__builtin_HEXAGON_M2_vrcmpys_acc_s1
LLiLLiLLii
__builtin_HEXAGON_M2_vrcmpys_s1rp
__builtin_HEXAGON_M2_mmacls_s0
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmachs_s0
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mmpyh_s0
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M4_vrmpyeh_s0
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_mmaculs_s0
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmpyul_s0
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_mmpyuh_s0
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_M2_vrcmacr_s0c
__builtin_HEXAGON_M2_cmaci_s0
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_M2_vrcmpyr_s0c
__builtin_HEXAGON_M2_cmpyi_s0
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M4_cmpyi_wh
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_cmpyi_whc
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_S4_vrcrotate_acc
LLiLLiLLiii
__builtin_HEXAGON_S4_vrcrotate
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_vpmpyh
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_subsat
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addh_l16_hl
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_A2_subh_l16_sat_ll
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_A2_addh_h16_hh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_ll
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_subh_h16_sat_ll
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_addsp
LLiiLLi
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_vconj
LLiLLi
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_A2_absp
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A2_maxu
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_maxp
__builtin_HEXAGON_A2_maxup
ULLiLLiLLi
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_minup
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_A2_tfrpi
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A2_sxth
__builtin_HEXAGON_A2_combinew
__builtin_HEXAGON_A4_combineri
__builtin_HEXAGON_A4_combineir
__builtin_HEXAGON_A2_combineii
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_tfrih
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_xor
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_A4_andn
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_S4_addaddi
__builtin_HEXAGON_S4_subaddi
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_or_or
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_S4_or_andix
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_M4_xor_or
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_A2_subri
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_andp
__builtin_HEXAGON_A2_orp
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_A2_sat
iLLi
__builtin_HEXAGON_A2_roundsat
__builtin_HEXAGON_A2_sath
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_A2_satb
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vaddh
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vadduhs
__builtin_HEXAGON_A5_vaddhubs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S4_vxsubaddhr
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_A2_svsubhs
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vraddub_acc
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M2_vradduh
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vabshsat
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vavguh
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vavgw
__builtin_HEXAGON_A2_vnavgw
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A4_round_ri
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_A4_vrminh
__builtin_HEXAGON_A4_vrmaxh
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vminh
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vmaxuh
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_F2_sffma_sc
ffffi
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sfcmpge
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_F2_sfclass
__builtin_HEXAGON_F2_sfimm_p
__builtin_HEXAGON_F2_sfimm_n
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_dfclass
__builtin_HEXAGON_F2_dfimm_p
__builtin_HEXAGON_F2_dfimm_n
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_conv_ud2sf
__builtin_HEXAGON_F2_conv_ud2df
__builtin_HEXAGON_F2_conv_d2sf
__builtin_HEXAGON_F2_conv_d2df
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_F2_conv_sf2ud
__builtin_HEXAGON_F2_conv_sf2d
__builtin_HEXAGON_F2_conv_df2uw
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2d
__builtin_HEXAGON_F2_conv_sf2uw_chop
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_df2d_chop
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asl_r_r
__builtin_HEXAGON_S2_lsr_r_r
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_asr_r_r_acc
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsl_r_p_acc
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_lsl_r_r_nac
__builtin_HEXAGON_S2_asr_r_p_nac
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S2_lsr_r_r_or
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_asl_r_p_and
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_asr_r_p_or
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_lsl_r_p_xor
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asr_i_p
__builtin_HEXAGON_S2_lsr_i_p
__builtin_HEXAGON_S2_asl_i_p
__builtin_HEXAGON_S2_asr_i_r_acc
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_asl_i_p_acc
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_S2_asl_i_r_nac
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_asl_i_p_xacc
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_lsr_i_r_and
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_S2_asr_i_p_or
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_S2_asr_i_r_rnd
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S4_lsli
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S4_andi_lsr_ri
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_subi_lsr_ri
__builtin_HEXAGON_S2_valignib
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_vsplatrb
__builtin_HEXAGON_S2_insert
iiiii
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_A4_bitspliti
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_S4_extract
__builtin_HEXAGON_S2_extractu
__builtin_HEXAGON_S2_insertp
__builtin_HEXAGON_S4_extractp
__builtin_HEXAGON_S2_extractup
__builtin_HEXAGON_S2_insert_rp
iiiLLi
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_tstbit_r
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_lsr_i_vh
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_vsathb
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_S2_vsatwh
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_shuffoh
__builtin_HEXAGON_S2_shuffeh
__builtin_HEXAGON_S5_popcountp
__builtin_HEXAGON_S4_parity
__builtin_HEXAGON_S2_parityp
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_cl1
__builtin_HEXAGON_S2_clbp
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct0p
__builtin_HEXAGON_S2_ct1p
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_prefetch
__builtin_HEXAGON_Y2_dccleana
__builtin_HEXAGON_Y2_dccleaninva
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_Y2_dczeroa
__builtin_HEXAGON_Y4_l2fetch
vv*Ui
__builtin_HEXAGON_Y5_l2fetch
vv*LLUi
__builtin_HEXAGON_S6_rol_i_r
v:60:
__builtin_HEXAGON_S6_rol_i_p
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_S6_rol_i_p_acc
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_r_xacc
__builtin_HEXAGON_S6_rol_i_p_xacc
__builtin_HEXAGON_S6_rol_i_r_and
__builtin_HEXAGON_S6_rol_i_r_or
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_p_or
__builtin_HEXAGON_S2_cabacencbin
__builtin_HEXAGON_V6_valignb
V16iV16iV16ii
__builtin_HEXAGON_V6_valignb_128B
V32iV32iV32ii
__builtin_HEXAGON_V6_vlalignb
__builtin_HEXAGON_V6_vlalignb_128B
__builtin_HEXAGON_V6_valignbi
__builtin_HEXAGON_V6_valignbi_128B
__builtin_HEXAGON_V6_vlalignbi
__builtin_HEXAGON_V6_vlalignbi_128B
__builtin_HEXAGON_V6_vror
__builtin_HEXAGON_V6_vror_128B
V32iV32ii
__builtin_HEXAGON_V6_vunpackub
V32iV16i
__builtin_HEXAGON_V6_vunpackub_128B
V64iV32i
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_vunpackh
__builtin_HEXAGON_V6_vunpackh_128B
__builtin_HEXAGON_V6_vunpackob
V32iV32iV16i
__builtin_HEXAGON_V6_vunpackob_128B
V64iV64iV32i
__builtin_HEXAGON_V6_vunpackoh
__builtin_HEXAGON_V6_vunpackoh_128B
__builtin_HEXAGON_V6_vpackeb
__builtin_HEXAGON_V6_vpackeb_128B
V32iV32iV32i
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackeh_128B
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vpackoh_128B
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vpackhub_sat_128B
__builtin_HEXAGON_V6_vpackhb_sat
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vpackwuh_sat
__builtin_HEXAGON_V6_vpackwuh_sat_128B
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_vsb
__builtin_HEXAGON_V6_vsb_128B
__builtin_HEXAGON_V6_vzh
__builtin_HEXAGON_V6_vzh_128B
__builtin_HEXAGON_V6_vsh
__builtin_HEXAGON_V6_vsh_128B
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_128B
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpybus_dv
__builtin_HEXAGON_V6_vdmpybus_dv_128B
V64iV64ii
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
V64iV64iV64ii
__builtin_HEXAGON_V6_vdmpyhb
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vdmpyhb_acc
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
__builtin_HEXAGON_V6_vdmpyhb_dv
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
V32iV32iV32iV32i
__builtin_HEXAGON_V6_vdmpyhsat
__builtin_HEXAGON_V6_vdmpyhsat_128B
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
__builtin_HEXAGON_V6_vdmpyhisat
V16iV32ii
__builtin_HEXAGON_V6_vdmpyhisat_128B
V32iV64ii
__builtin_HEXAGON_V6_vdmpyhisat_acc
V16iV16iV32ii
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
V32iV32iV64ii
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
__builtin_HEXAGON_V6_vtmpyb
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpyb_acc_128B
__builtin_HEXAGON_V6_vtmpybus
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpybus_acc_128B
__builtin_HEXAGON_V6_vtmpyhb
__builtin_HEXAGON_V6_vtmpyhb_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vrmpyub_acc
__builtin_HEXAGON_V6_vrmpyub_acc_128B
__builtin_HEXAGON_V6_vrmpyubv
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
__builtin_HEXAGON_V6_vrmpybv
__builtin_HEXAGON_V6_vrmpybv_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
__builtin_HEXAGON_V6_vrmpyubi
V32iV32iii
__builtin_HEXAGON_V6_vrmpyubi_128B
V64iV64iii
__builtin_HEXAGON_V6_vrmpyubi_acc
V32iV32iV32iii
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
V64iV64iV64iii
__builtin_HEXAGON_V6_vrmpybus
__builtin_HEXAGON_V6_vrmpybus_128B
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__builtin_HEXAGON_V6_vrmpybusi
__builtin_HEXAGON_V6_vrmpybusi_128B
__builtin_HEXAGON_V6_vrmpybusi_acc
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
__builtin_HEXAGON_V6_vrmpybusv
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
__builtin_HEXAGON_V6_vdsaduh
__builtin_HEXAGON_V6_vdsaduh_128B
__builtin_HEXAGON_V6_vdsaduh_acc
__builtin_HEXAGON_V6_vdsaduh_acc_128B
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vrsadubi_128B
__builtin_HEXAGON_V6_vrsadubi_acc
__builtin_HEXAGON_V6_vrsadubi_acc_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_vaslw_128B
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vasrwv
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vlsrwv_128B
__builtin_HEXAGON_V6_vasrh
__builtin_HEXAGON_V6_vasrh_128B
__builtin_HEXAGON_V6_vaslh
__builtin_HEXAGON_V6_vaslh_128B
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_vasrhv
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vaslhv
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vlsrhv_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vasrwhrndsat
__builtin_HEXAGON_V6_vasrwhrndsat_128B
__builtin_HEXAGON_V6_vasrwuhsat
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vroundwh_128B
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vasrhubrndsat
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrhbrndsat
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundhb_128B
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vroundhub_128B
__builtin_HEXAGON_V6_vaslw_acc
__builtin_HEXAGON_V6_vaslw_acc_128B
__builtin_HEXAGON_V6_vasrw_acc
__builtin_HEXAGON_V6_vasrw_acc_128B
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vaddb_128B
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vsubb_128B
__builtin_HEXAGON_V6_vaddb_dv
__builtin_HEXAGON_V6_vaddb_dv_128B
V64iV64iV64i
__builtin_HEXAGON_V6_vsubb_dv
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubh_128B
__builtin_HEXAGON_V6_vaddh_dv
__builtin_HEXAGON_V6_vaddh_dv_128B
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vsubw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vaddw_dv
__builtin_HEXAGON_V6_vaddw_dv_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubw_dv_128B
__builtin_HEXAGON_V6_vaddubsat
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vaddubsat_dv_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsububsat_128B
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsububsat_dv_128B
__builtin_HEXAGON_V6_vadduhsat
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubuhsat_128B
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vaddhsat
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vaddhsat_dv
__builtin_HEXAGON_V6_vaddhsat_dv_128B
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubhsat_128B
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vaddwsat
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_vaddwsat_dv
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vsubwsat_dv_128B
__builtin_HEXAGON_V6_vavgub
__builtin_HEXAGON_V6_vavgub_128B
__builtin_HEXAGON_V6_vavgubrnd
__builtin_HEXAGON_V6_vavgubrnd_128B
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vavguhrnd_128B
__builtin_HEXAGON_V6_vavgh
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavghrnd_128B
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnavgh_128B
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vavgwrnd_128B
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnavgw_128B
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsdiffub_128B
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsdiffuh_128B
__builtin_HEXAGON_V6_vabsdiffh
__builtin_HEXAGON_V6_vabsdiffh_128B
__builtin_HEXAGON_V6_vabsdiffw
__builtin_HEXAGON_V6_vabsdiffw_128B
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vaddubh
V32iV16iV16i
__builtin_HEXAGON_V6_vaddubh_128B
V64iV32iV32i
__builtin_HEXAGON_V6_vsububh
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_vaddhw
__builtin_HEXAGON_V6_vaddhw_128B
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsubhw_128B
__builtin_HEXAGON_V6_vadduhw
__builtin_HEXAGON_V6_vadduhw_128B
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vsubuhw_128B
__builtin_HEXAGON_V6_vd0
V16i
__builtin_HEXAGON_V6_vd0_128B
V32i
__builtin_HEXAGON_V6_vaddbq
__builtin_HEXAGON_V6_vaddbq_128B
__builtin_HEXAGON_V6_vsubbq
__builtin_HEXAGON_V6_vsubbq_128B
__builtin_HEXAGON_V6_vaddbnq
__builtin_HEXAGON_V6_vaddbnq_128B
__builtin_HEXAGON_V6_vsubbnq
__builtin_HEXAGON_V6_vsubbnq_128B
__builtin_HEXAGON_V6_vaddhq
__builtin_HEXAGON_V6_vaddhq_128B
__builtin_HEXAGON_V6_vsubhq
__builtin_HEXAGON_V6_vsubhq_128B
__builtin_HEXAGON_V6_vaddhnq
__builtin_HEXAGON_V6_vaddhnq_128B
__builtin_HEXAGON_V6_vsubhnq
__builtin_HEXAGON_V6_vsubhnq_128B
__builtin_HEXAGON_V6_vaddwq
__builtin_HEXAGON_V6_vaddwq_128B
__builtin_HEXAGON_V6_vsubwq
__builtin_HEXAGON_V6_vsubwq_128B
__builtin_HEXAGON_V6_vaddwnq
__builtin_HEXAGON_V6_vaddwnq_128B
__builtin_HEXAGON_V6_vsubwnq
__builtin_HEXAGON_V6_vsubwnq_128B
__builtin_HEXAGON_V6_vabsh
__builtin_HEXAGON_V6_vabsh_128B
V32iV32i
__builtin_HEXAGON_V6_vabsh_sat
__builtin_HEXAGON_V6_vabsh_sat_128B
__builtin_HEXAGON_V6_vabsw
__builtin_HEXAGON_V6_vabsw_128B
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpybv_128B
__builtin_HEXAGON_V6_vmpybv_acc
V32iV32iV16iV16i
__builtin_HEXAGON_V6_vmpybv_acc_128B
V64iV64iV32iV32i
__builtin_HEXAGON_V6_vmpyubv
__builtin_HEXAGON_V6_vmpyubv_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__builtin_HEXAGON_V6_vmpybusv
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vmpybusv_acc
__builtin_HEXAGON_V6_vmpybusv_acc_128B
__builtin_HEXAGON_V6_vmpabusv
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_vmpabuuv
__builtin_HEXAGON_V6_vmpabuuv_128B
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyhv_128B
__builtin_HEXAGON_V6_vmpyhv_acc
__builtin_HEXAGON_V6_vmpyhv_acc_128B
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vmpyhus
__builtin_HEXAGON_V6_vmpyhus_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhus_acc_128B
__builtin_HEXAGON_V6_vmpyih
__builtin_HEXAGON_V6_vmpyih_128B
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyewuh_128B
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_128B
__builtin_HEXAGON_V6_vmpyowh_rnd
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
__builtin_HEXAGON_V6_vmpyowh_sacc
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyieoh_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyiewuh_128B
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyiowh_128B
__builtin_HEXAGON_V6_vmpyiewh_acc
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vmpyiewuh_acc
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
__builtin_HEXAGON_V6_vmpyub
V32iV16ii
__builtin_HEXAGON_V6_vmpyub_128B
V64iV32ii
__builtin_HEXAGON_V6_vmpyub_acc
V32iV32iV16ii
__builtin_HEXAGON_V6_vmpyub_acc_128B
V64iV64iV32ii
__builtin_HEXAGON_V6_vmpybus
__builtin_HEXAGON_V6_vmpybus_128B
__builtin_HEXAGON_V6_vmpybus_acc
__builtin_HEXAGON_V6_vmpybus_acc_128B
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vmpabus_acc
__builtin_HEXAGON_V6_vmpabus_acc_128B
__builtin_HEXAGON_V6_vmpahb
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpahb_acc_128B
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vmpyhsat_acc
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhss_128B
__builtin_HEXAGON_V6_vmpyhsrs
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vmpyuh_acc_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vmpyihb_128B
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vmpyiwb
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
__builtin_HEXAGON_V6_vmpyiwh
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
__builtin_HEXAGON_V6_vand
__builtin_HEXAGON_V6_vand_128B
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vor_128B
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vxor_128B
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vandqrt
__builtin_HEXAGON_V6_vandqrt_128B
__builtin_HEXAGON_V6_vandqrt_acc
__builtin_HEXAGON_V6_vandqrt_acc_128B
__builtin_HEXAGON_V6_vandvrt
__builtin_HEXAGON_V6_vandvrt_128B
__builtin_HEXAGON_V6_vandvrt_acc
__builtin_HEXAGON_V6_vandvrt_acc_128B
__builtin_HEXAGON_V6_vgtw
__builtin_HEXAGON_V6_vgtw_128B
__builtin_HEXAGON_V6_vgtw_and
__builtin_HEXAGON_V6_vgtw_and_128B
__builtin_HEXAGON_V6_vgtw_or
__builtin_HEXAGON_V6_vgtw_or_128B
__builtin_HEXAGON_V6_vgtw_xor
__builtin_HEXAGON_V6_vgtw_xor_128B
__builtin_HEXAGON_V6_veqw
__builtin_HEXAGON_V6_veqw_128B
__builtin_HEXAGON_V6_veqw_and
__builtin_HEXAGON_V6_veqw_and_128B
__builtin_HEXAGON_V6_veqw_or
__builtin_HEXAGON_V6_veqw_or_128B
__builtin_HEXAGON_V6_veqw_xor
__builtin_HEXAGON_V6_veqw_xor_128B
__builtin_HEXAGON_V6_vgth
__builtin_HEXAGON_V6_vgth_128B
__builtin_HEXAGON_V6_vgth_and
__builtin_HEXAGON_V6_vgth_and_128B
__builtin_HEXAGON_V6_vgth_or
__builtin_HEXAGON_V6_vgth_or_128B
__builtin_HEXAGON_V6_vgth_xor
__builtin_HEXAGON_V6_vgth_xor_128B
__builtin_HEXAGON_V6_veqh
__builtin_HEXAGON_V6_veqh_128B
__builtin_HEXAGON_V6_veqh_and
__builtin_HEXAGON_V6_veqh_and_128B
__builtin_HEXAGON_V6_veqh_or
__builtin_HEXAGON_V6_veqh_or_128B
__builtin_HEXAGON_V6_veqh_xor
__builtin_HEXAGON_V6_veqh_xor_128B
__builtin_HEXAGON_V6_vgtb
__builtin_HEXAGON_V6_vgtb_128B
__builtin_HEXAGON_V6_vgtb_and
__builtin_HEXAGON_V6_vgtb_and_128B
__builtin_HEXAGON_V6_vgtb_or
__builtin_HEXAGON_V6_vgtb_or_128B
__builtin_HEXAGON_V6_vgtb_xor
__builtin_HEXAGON_V6_vgtb_xor_128B
__builtin_HEXAGON_V6_veqb
__builtin_HEXAGON_V6_veqb_128B
__builtin_HEXAGON_V6_veqb_and
__builtin_HEXAGON_V6_veqb_and_128B
__builtin_HEXAGON_V6_veqb_or
__builtin_HEXAGON_V6_veqb_or_128B
__builtin_HEXAGON_V6_veqb_xor
__builtin_HEXAGON_V6_veqb_xor_128B
__builtin_HEXAGON_V6_vgtuw
__builtin_HEXAGON_V6_vgtuw_128B
__builtin_HEXAGON_V6_vgtuw_and
__builtin_HEXAGON_V6_vgtuw_and_128B
__builtin_HEXAGON_V6_vgtuw_or
__builtin_HEXAGON_V6_vgtuw_or_128B
__builtin_HEXAGON_V6_vgtuw_xor
__builtin_HEXAGON_V6_vgtuw_xor_128B
__builtin_HEXAGON_V6_vgtuh
__builtin_HEXAGON_V6_vgtuh_128B
__builtin_HEXAGON_V6_vgtuh_and
__builtin_HEXAGON_V6_vgtuh_and_128B
__builtin_HEXAGON_V6_vgtuh_or
__builtin_HEXAGON_V6_vgtuh_or_128B
__builtin_HEXAGON_V6_vgtuh_xor
__builtin_HEXAGON_V6_vgtuh_xor_128B
__builtin_HEXAGON_V6_vgtub
__builtin_HEXAGON_V6_vgtub_128B
__builtin_HEXAGON_V6_vgtub_and
__builtin_HEXAGON_V6_vgtub_and_128B
__builtin_HEXAGON_V6_vgtub_or
__builtin_HEXAGON_V6_vgtub_or_128B
__builtin_HEXAGON_V6_vgtub_xor
__builtin_HEXAGON_V6_vgtub_xor_128B
__builtin_HEXAGON_V6_pred_or
__builtin_HEXAGON_V6_pred_or_128B
__builtin_HEXAGON_V6_pred_and
__builtin_HEXAGON_V6_pred_and_128B
__builtin_HEXAGON_V6_pred_not
__builtin_HEXAGON_V6_pred_not_128B
__builtin_HEXAGON_V6_pred_xor
__builtin_HEXAGON_V6_pred_xor_128B
__builtin_HEXAGON_V6_pred_and_n
__builtin_HEXAGON_V6_pred_and_n_128B
__builtin_HEXAGON_V6_pred_or_n
__builtin_HEXAGON_V6_pred_or_n_128B
__builtin_HEXAGON_V6_pred_scalar2
V16ii
__builtin_HEXAGON_V6_pred_scalar2_128B
V32ii
__builtin_HEXAGON_V6_vmux
__builtin_HEXAGON_V6_vmux_128B
__builtin_HEXAGON_V6_vswap
V32iV16iV16iV16i
__builtin_HEXAGON_V6_vswap_128B
V64iV32iV32iV32i
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmaxub_128B
__builtin_HEXAGON_V6_vminub
__builtin_HEXAGON_V6_vminub_128B
__builtin_HEXAGON_V6_vmaxuh
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vminh
__builtin_HEXAGON_V6_vminh_128B
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vmaxw_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vminw_128B
__builtin_HEXAGON_V6_vsathub
__builtin_HEXAGON_V6_vsathub_128B
__builtin_HEXAGON_V6_vsatwh
__builtin_HEXAGON_V6_vsatwh_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vshuffob
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vshuffvdd
V32iV16iV16ii
__builtin_HEXAGON_V6_vshuffvdd_128B
V64iV32iV32ii
__builtin_HEXAGON_V6_vdealvdd
__builtin_HEXAGON_V6_vdealvdd_128B
__builtin_HEXAGON_V6_vshufoeh
__builtin_HEXAGON_V6_vshufoeh_128B
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vshufoeb_128B
__builtin_HEXAGON_V6_vdealh
__builtin_HEXAGON_V6_vdealh_128B
__builtin_HEXAGON_V6_vdealb
__builtin_HEXAGON_V6_vdealb_128B
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vshuffh
__builtin_HEXAGON_V6_vshuffh_128B
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshuffb_128B
__builtin_HEXAGON_V6_extractw
iV16ii
__builtin_HEXAGON_V6_extractw_128B
iV32ii
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vinsertwr_128B
__builtin_HEXAGON_V6_lvsplatw
__builtin_HEXAGON_V6_lvsplatw_128B
__builtin_HEXAGON_V6_vassign
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vcombine
__builtin_HEXAGON_V6_vcombine_128B
__builtin_HEXAGON_V6_vdelta
__builtin_HEXAGON_V6_vdelta_128B
__builtin_HEXAGON_V6_vrdelta
__builtin_HEXAGON_V6_vrdelta_128B
__builtin_HEXAGON_V6_vcl0w
__builtin_HEXAGON_V6_vcl0w_128B
__builtin_HEXAGON_V6_vcl0h
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vnormamtw_128B
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vnormamth_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_vlutvvb
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vlutvvb_oracc
V16iV16iV16iV16ii
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
V32iV32iV32iV32ii
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vlutvwh_128B
__builtin_HEXAGON_V6_vlutvwh_oracc
V32iV32iV16iV16ii
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
V64iV64iV32iV32ii
__builtin_HEXAGON_V6_hi
V16iV32i
__builtin_HEXAGON_V6_lo
__builtin_HEXAGON_V6_hi_128B
V32iV64i
__builtin_HEXAGON_V6_lo_128B
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vassignp_128B
V64iV64i
__builtin_HEXAGON_V6_vS32b_qpred_ai
vV16iv*V16i
__builtin_HEXAGON_V6_vS32b_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai
__builtin_HEXAGON_V6_vS32b_qpred_ai_128B
vV32iv*V32i
__builtin_HEXAGON_V6_vS32b_nqpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai_128B
__builtin_HEXAGON_V6_vmaskedstoreq
__builtin_HEXAGON_V6_vmaskedstorenq
__builtin_HEXAGON_V6_vmaskedstorentq
__builtin_HEXAGON_V6_vmaskedstorentnq
__builtin_HEXAGON_V6_vmaskedstoreq_128B
__builtin_HEXAGON_V6_vmaskedstorenq_128B
__builtin_HEXAGON_V6_vmaskedstorentq_128B
__builtin_HEXAGON_V6_vmaskedstorentnq_128B
__builtin_HEXAGON_M6_vabsdiffb
v:62:
__builtin_HEXAGON_M6_vabsdiffub
__builtin_HEXAGON_A6_vminub_RdP
__builtin_HEXAGON_S6_vsplatrbp
__builtin_HEXAGON_S6_vtrunehb_ppp
__builtin_HEXAGON_S6_vtrunohb_ppp
__builtin_HEXAGON_V6_vlsrb
__builtin_HEXAGON_V6_vlsrb_128B
__builtin_HEXAGON_V6_vasrwuhrndsat
__builtin_HEXAGON_V6_vasrwuhrndsat_128B
__builtin_HEXAGON_V6_vasruwuhrndsat
__builtin_HEXAGON_V6_vasruwuhrndsat_128B
__builtin_HEXAGON_V6_vasrhbsat
__builtin_HEXAGON_V6_vasrhbsat_128B
__builtin_HEXAGON_V6_vrounduwuh
__builtin_HEXAGON_V6_vrounduwuh_128B
__builtin_HEXAGON_V6_vrounduhub
__builtin_HEXAGON_V6_vrounduhub_128B
__builtin_HEXAGON_V6_vadduwsat
__builtin_HEXAGON_V6_vadduwsat_128B
__builtin_HEXAGON_V6_vadduwsat_dv
__builtin_HEXAGON_V6_vadduwsat_dv_128B
__builtin_HEXAGON_V6_vsubuwsat
__builtin_HEXAGON_V6_vsubuwsat_128B
__builtin_HEXAGON_V6_vsubuwsat_dv
__builtin_HEXAGON_V6_vsubuwsat_dv_128B
__builtin_HEXAGON_V6_vaddbsat
__builtin_HEXAGON_V6_vaddbsat_128B
__builtin_HEXAGON_V6_vaddbsat_dv
__builtin_HEXAGON_V6_vaddbsat_dv_128B
__builtin_HEXAGON_V6_vsubbsat
__builtin_HEXAGON_V6_vsubbsat_128B
__builtin_HEXAGON_V6_vsubbsat_dv
__builtin_HEXAGON_V6_vsubbsat_dv_128B
__builtin_HEXAGON_V6_vaddububb_sat
__builtin_HEXAGON_V6_vaddububb_sat_128B
__builtin_HEXAGON_V6_vsubububb_sat
__builtin_HEXAGON_V6_vsubububb_sat_128B
__builtin_HEXAGON_V6_vaddhw_acc
__builtin_HEXAGON_V6_vaddhw_acc_128B
__builtin_HEXAGON_V6_vadduhw_acc
__builtin_HEXAGON_V6_vadduhw_acc_128B
__builtin_HEXAGON_V6_vaddubh_acc
__builtin_HEXAGON_V6_vaddubh_acc_128B
__builtin_HEXAGON_V6_vmpyewuh_64
__builtin_HEXAGON_V6_vmpyewuh_64_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc
__builtin_HEXAGON_V6_vmpyowh_64_acc_128B
__builtin_HEXAGON_V6_vmpauhb
__builtin_HEXAGON_V6_vmpauhb_128B
__builtin_HEXAGON_V6_vmpauhb_acc
__builtin_HEXAGON_V6_vmpauhb_acc_128B
__builtin_HEXAGON_V6_vmpyiwub
__builtin_HEXAGON_V6_vmpyiwub_128B
__builtin_HEXAGON_V6_vmpyiwub_acc
__builtin_HEXAGON_V6_vmpyiwub_acc_128B
__builtin_HEXAGON_V6_vandnqrt
__builtin_HEXAGON_V6_vandnqrt_128B
__builtin_HEXAGON_V6_vandnqrt_acc
__builtin_HEXAGON_V6_vandnqrt_acc_128B
__builtin_HEXAGON_V6_vandvqv
__builtin_HEXAGON_V6_vandvqv_128B
__builtin_HEXAGON_V6_vandvnqv
__builtin_HEXAGON_V6_vandvnqv_128B
__builtin_HEXAGON_V6_pred_scalar2v2
__builtin_HEXAGON_V6_pred_scalar2v2_128B
__builtin_HEXAGON_V6_shuffeqw
__builtin_HEXAGON_V6_shuffeqw_128B
__builtin_HEXAGON_V6_shuffeqh
__builtin_HEXAGON_V6_shuffeqh_128B
__builtin_HEXAGON_V6_vmaxb
__builtin_HEXAGON_V6_vmaxb_128B
__builtin_HEXAGON_V6_vminb
__builtin_HEXAGON_V6_vminb_128B
__builtin_HEXAGON_V6_vsatuwuh
__builtin_HEXAGON_V6_vsatuwuh_128B
__builtin_HEXAGON_V6_lvsplath
__builtin_HEXAGON_V6_lvsplath_128B
__builtin_HEXAGON_V6_lvsplatb
__builtin_HEXAGON_V6_lvsplatb_128B
__builtin_HEXAGON_V6_vaddclbw
__builtin_HEXAGON_V6_vaddclbw_128B
__builtin_HEXAGON_V6_vaddclbh
__builtin_HEXAGON_V6_vaddclbh_128B
__builtin_HEXAGON_V6_vlutvvbi
__builtin_HEXAGON_V6_vlutvvbi_128B
__builtin_HEXAGON_V6_vlutvvb_oracci
__builtin_HEXAGON_V6_vlutvvb_oracci_128B
__builtin_HEXAGON_V6_vlutvwhi
__builtin_HEXAGON_V6_vlutvwhi_128B
__builtin_HEXAGON_V6_vlutvwh_oracci
__builtin_HEXAGON_V6_vlutvwh_oracci_128B
__builtin_HEXAGON_V6_vlutvvb_nm
__builtin_HEXAGON_V6_vlutvvb_nm_128B
__builtin_HEXAGON_V6_vlutvwh_nm
__builtin_HEXAGON_V6_vlutvwh_nm_128B
__builtin_HEXAGON_V6_vaddcarry
V16iV16iV16iv*
__builtin_HEXAGON_V6_vaddcarry_128B
V32iV32iV32iv*
__builtin_HEXAGON_V6_vsubcarry
__builtin_HEXAGON_V6_vsubcarry_128B
__builtin_HEXAGON_A6_vcmpbeq_notany
v:65:
__builtin_HEXAGON_A6_vcmpbeq_notany_128B
__builtin_HEXAGON_V6_vrmpyub_rtt
V32iV16iLLi
__builtin_HEXAGON_V6_vrmpyub_rtt_128B
V64iV32iLLi
__builtin_HEXAGON_V6_vrmpyub_rtt_acc
V32iV32iV16iLLi
__builtin_HEXAGON_V6_vrmpyub_rtt_acc_128B
V64iV64iV32iLLi
__builtin_HEXAGON_V6_vrmpybub_rtt
__builtin_HEXAGON_V6_vrmpybub_rtt_128B
__builtin_HEXAGON_V6_vrmpybub_rtt_acc
__builtin_HEXAGON_V6_vrmpybub_rtt_acc_128B
__builtin_HEXAGON_V6_vasruwuhsat
__builtin_HEXAGON_V6_vasruwuhsat_128B
__builtin_HEXAGON_V6_vasruhubsat
__builtin_HEXAGON_V6_vasruhubsat_128B
__builtin_HEXAGON_V6_vasruhubrndsat
__builtin_HEXAGON_V6_vasruhubrndsat_128B
__builtin_HEXAGON_V6_vaslh_acc
__builtin_HEXAGON_V6_vaslh_acc_128B
__builtin_HEXAGON_V6_vasrh_acc
__builtin_HEXAGON_V6_vasrh_acc_128B
__builtin_HEXAGON_V6_vavguw
__builtin_HEXAGON_V6_vavguw_128B
__builtin_HEXAGON_V6_vavguwrnd
__builtin_HEXAGON_V6_vavguwrnd_128B
__builtin_HEXAGON_V6_vavgb
__builtin_HEXAGON_V6_vavgb_128B
__builtin_HEXAGON_V6_vavgbrnd
__builtin_HEXAGON_V6_vavgbrnd_128B
__builtin_HEXAGON_V6_vnavgb
__builtin_HEXAGON_V6_vnavgb_128B
__builtin_HEXAGON_V6_vabsb
__builtin_HEXAGON_V6_vabsb_128B
__builtin_HEXAGON_V6_vabsb_sat
__builtin_HEXAGON_V6_vabsb_sat_128B
__builtin_HEXAGON_V6_vmpabuu
__builtin_HEXAGON_V6_vmpabuu_128B
__builtin_HEXAGON_V6_vmpabuu_acc
__builtin_HEXAGON_V6_vmpabuu_acc_128B
__builtin_HEXAGON_V6_vmpyh_acc
__builtin_HEXAGON_V6_vmpyh_acc_128B
__builtin_HEXAGON_V6_vmpahhsat
V16iV16iV16iLLi
__builtin_HEXAGON_V6_vmpahhsat_128B
V32iV32iV32iLLi
__builtin_HEXAGON_V6_vmpauhuhsat
__builtin_HEXAGON_V6_vmpauhuhsat_128B
__builtin_HEXAGON_V6_vmpsuhuhsat
__builtin_HEXAGON_V6_vmpsuhuhsat_128B
__builtin_HEXAGON_V6_vlut4
V16iV16iLLi
__builtin_HEXAGON_V6_vlut4_128B
V32iV32iLLi
__builtin_HEXAGON_V6_vmpyuhe
__builtin_HEXAGON_V6_vmpyuhe_128B
__builtin_HEXAGON_V6_vmpyuhe_acc
__builtin_HEXAGON_V6_vmpyuhe_acc_128B
__builtin_HEXAGON_V6_vgathermw
vv*iiV16i
__builtin_HEXAGON_V6_vgathermw_128B
vv*iiV32i
__builtin_HEXAGON_V6_vgathermh
__builtin_HEXAGON_V6_vgathermh_128B
__builtin_HEXAGON_V6_vgathermhw
__builtin_HEXAGON_V6_vgathermhw_128B
vv*iiV64i
__builtin_HEXAGON_V6_vgathermwq
vv*V16iiiV16i
__builtin_HEXAGON_V6_vgathermwq_128B
vv*V32iiiV32i
__builtin_HEXAGON_V6_vgathermhq
__builtin_HEXAGON_V6_vgathermhq_128B
__builtin_HEXAGON_V6_vgathermhwq
vv*V16iiiV32i
__builtin_HEXAGON_V6_vgathermhwq_128B
vv*V32iiiV64i
__builtin_HEXAGON_V6_vscattermw
viiV16iV16i
__builtin_HEXAGON_V6_vscattermw_128B
viiV32iV32i
__builtin_HEXAGON_V6_vscattermh
__builtin_HEXAGON_V6_vscattermh_128B
__builtin_HEXAGON_V6_vscattermw_add
__builtin_HEXAGON_V6_vscattermw_add_128B
__builtin_HEXAGON_V6_vscattermh_add
__builtin_HEXAGON_V6_vscattermh_add_128B
__builtin_HEXAGON_V6_vscattermwq
vV16iiiV16iV16i
__builtin_HEXAGON_V6_vscattermwq_128B
vV32iiiV32iV32i
__builtin_HEXAGON_V6_vscattermhq
__builtin_HEXAGON_V6_vscattermhq_128B
__builtin_HEXAGON_V6_vscattermhw
viiV32iV16i
__builtin_HEXAGON_V6_vscattermhw_128B
viiV64iV32i
__builtin_HEXAGON_V6_vscattermhwq
vV16iiiV32iV16i
__builtin_HEXAGON_V6_vscattermhwq_128B
vV32iiiV64iV32i
__builtin_HEXAGON_V6_vscattermhw_add
__builtin_HEXAGON_V6_vscattermhw_add_128B
__builtin_HEXAGON_V6_vprefixqb
__builtin_HEXAGON_V6_vprefixqb_128B
__builtin_HEXAGON_V6_vprefixqh
__builtin_HEXAGON_V6_vprefixqh_128B
__builtin_HEXAGON_V6_vprefixqw
__builtin_HEXAGON_V6_vprefixqw_128B
__builtin_HEXAGON_V6_vdd0
__builtin_HEXAGON_V6_vdd0_128B
V64i
hvxv
hvx-length64b
hvx-length128b
long-calls
+hvx-length64b
+hvx-length128b
+hvxv
-hvx
+long-calls
-long-calls
hexagonv4
hexagonv5
hexagonv55
hexagonv60
hexagonv62
hexagonv65
__qdsp6__
__hexagon__
__HEXAGON_V4__
__HEXAGON_ARCH__
__QDSP6_V4__
__QDSP6_ARCH__
__HEXAGON_V5__
__QDSP6_V5__
__HEXAGON_V55__
__QDSP6_V55__
__HEXAGON_V60__
__QDSP6_V60__
__HEXAGON_V62__
__HEXAGON_V65__
__HVX__
__HVX_ARCH__
__HVX_LENGTH__
__HVXDBL__
__lanai__
__LANAI_V11__
__clear_cache
vv*v*
unix
le64
MSP430
__MSP430__
__builtin_mips_addu_qb
V4ScV4ScV4Sc
__builtin_mips_addu_s_qb
__builtin_mips_subu_qb
__builtin_mips_subu_s_qb
__builtin_mips_addq_ph
V2sV2sV2s
__builtin_mips_addq_s_ph
__builtin_mips_subq_ph
__builtin_mips_subq_s_ph
__builtin_mips_madd
LLiLLiii
__builtin_mips_maddu
LLiLLiUiUi
__builtin_mips_msub
__builtin_mips_msubu
__builtin_mips_addq_s_w
__builtin_mips_subq_s_w
__builtin_mips_addsc
__builtin_mips_addwc
__builtin_mips_modsub
__builtin_mips_raddu_w_qb
iV4Sc
__builtin_mips_absq_s_ph
V2sV2s
__builtin_mips_absq_s_w
__builtin_mips_precrq_qb_ph
V4ScV2sV2s
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_precrq_ph_w
V2sii
__builtin_mips_precrq_rs_ph_w
__builtin_mips_preceq_w_phl
iV2s
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
V2sV4Sc
__builtin_mips_precequ_ph_qbr
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbr
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbra
__builtin_mips_shll_qb
V4ScV4Sci
__builtin_mips_shrl_qb
__builtin_mips_shll_ph
V2sV2si
__builtin_mips_shll_s_ph
__builtin_mips_shra_ph
__builtin_mips_shra_r_ph
__builtin_mips_shll_s_w
__builtin_mips_shra_r_w
__builtin_mips_shilo
LLiLLii
__builtin_mips_muleu_s_ph_qbl
V2sV4ScV2s
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_mulq_rs_ph
__builtin_mips_muleq_s_w_phl
iV2sV2s
__builtin_mips_muleq_s_w_phr
__builtin_mips_mulsaq_s_w_ph
LLiLLiV2sV2s
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_s_w_phr
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
__builtin_mips_mult
__builtin_mips_multu
LLiUiUi
__builtin_mips_dpau_h_qbl
LLiLLiV4ScV4Sc
__builtin_mips_dpau_h_qbr
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpsq_sa_l_w
__builtin_mips_cmpu_eq_qb
vV4ScV4Sc
__builtin_mips_cmpu_lt_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpgu_eq_qb
iV4ScV4Sc
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_cmp_eq_ph
vV2sV2s
__builtin_mips_cmp_lt_ph
__builtin_mips_cmp_le_ph
__builtin_mips_extr_s_h
iLLii
__builtin_mips_extr_w
__builtin_mips_extr_rs_w
__builtin_mips_extr_r_w
__builtin_mips_extp
__builtin_mips_extpdp
__builtin_mips_wrdsp
viIi
__builtin_mips_rddsp
__builtin_mips_insv
__builtin_mips_bitrev
__builtin_mips_packrl_ph
__builtin_mips_repl_qb
V4Sci
__builtin_mips_repl_ph
V2si
__builtin_mips_pick_qb
__builtin_mips_pick_ph
__builtin_mips_mthlip
__builtin_mips_bposge32
__builtin_mips_lbux
iv*i
__builtin_mips_lhx
__builtin_mips_lwx
__builtin_mips_absq_s_qb
V4ScV4Sc
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_w
__builtin_mips_addqh_r_w
__builtin_mips_addu_ph
__builtin_mips_addu_s_ph
__builtin_mips_adduh_qb
__builtin_mips_adduh_r_qb
__builtin_mips_append
iiiIi
__builtin_mips_balign
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_lt_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_dpa_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpaqx_s_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpax_w_ph
__builtin_mips_dpsx_w_ph
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_mul_ph
__builtin_mips_mul_s_ph
__builtin_mips_mulq_rs_w
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_mips_mulsa_w_ph
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
V2siiIi
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_prepend
__builtin_mips_shra_qb
__builtin_mips_shra_r_qb
__builtin_mips_shrl_ph
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_w
__builtin_mips_subqh_r_w
__builtin_mips_subu_ph
__builtin_mips_subu_s_ph
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
__builtin_msa_add_a_b
__builtin_msa_add_a_h
__builtin_msa_add_a_w
__builtin_msa_add_a_d
__builtin_msa_adds_a_b
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_a_d
__builtin_msa_adds_s_b
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_s_d
__builtin_msa_adds_u_b
__builtin_msa_adds_u_h
__builtin_msa_adds_u_w
__builtin_msa_adds_u_d
__builtin_msa_addv_b
__builtin_msa_addv_h
__builtin_msa_addv_w
__builtin_msa_addv_d
__builtin_msa_addvi_b
V16cV16cIUi
__builtin_msa_addvi_h
V8sV8sIUi
__builtin_msa_addvi_w
V4iV4iIUi
__builtin_msa_addvi_d
V2LLiV2LLiIUi
__builtin_msa_and_v
__builtin_msa_andi_b
V16UcV16UcIUi
__builtin_msa_asub_s_b
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_s_d
__builtin_msa_asub_u_b
__builtin_msa_asub_u_h
__builtin_msa_asub_u_w
__builtin_msa_asub_u_d
__builtin_msa_ave_s_b
__builtin_msa_ave_s_h
__builtin_msa_ave_s_w
__builtin_msa_ave_s_d
__builtin_msa_ave_u_b
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_ave_u_d
__builtin_msa_aver_s_b
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_s_d
__builtin_msa_aver_u_b
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_msa_aver_u_d
__builtin_msa_bclr_b
__builtin_msa_bclr_h
__builtin_msa_bclr_w
__builtin_msa_bclr_d
__builtin_msa_bclri_b
__builtin_msa_bclri_h
V8UsV8UsIUi
__builtin_msa_bclri_w
V4UiV4UiIUi
__builtin_msa_bclri_d
V2ULLiV2ULLiIUi
__builtin_msa_binsl_b
__builtin_msa_binsl_h
__builtin_msa_binsl_w
__builtin_msa_binsl_d
__builtin_msa_binsli_b
V16UcV16UcV16UcIUi
__builtin_msa_binsli_h
V8UsV8UsV8UsIUi
__builtin_msa_binsli_w
V4UiV4UiV4UiIUi
__builtin_msa_binsli_d
V2ULLiV2ULLiV2ULLiIUi
__builtin_msa_binsr_b
__builtin_msa_binsr_h
__builtin_msa_binsr_w
__builtin_msa_binsr_d
__builtin_msa_binsri_b
__builtin_msa_binsri_h
__builtin_msa_binsri_w
__builtin_msa_binsri_d
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_h
__builtin_msa_bneg_w
__builtin_msa_bneg_d
__builtin_msa_bnegi_b
__builtin_msa_bnegi_h
__builtin_msa_bnegi_w
__builtin_msa_bnegi_d
__builtin_msa_bnz_b
iV16Uc
__builtin_msa_bnz_h
iV8Us
__builtin_msa_bnz_w
iV4Ui
__builtin_msa_bnz_d
iV2ULLi
__builtin_msa_bnz_v
__builtin_msa_bsel_v
__builtin_msa_bseli_b
__builtin_msa_bset_b
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bset_d
__builtin_msa_bseti_b
__builtin_msa_bseti_h
__builtin_msa_bseti_w
__builtin_msa_bseti_d
__builtin_msa_bz_b
__builtin_msa_bz_h
__builtin_msa_bz_w
__builtin_msa_bz_d
__builtin_msa_bz_v
__builtin_msa_ceq_b
__builtin_msa_ceq_h
__builtin_msa_ceq_w
__builtin_msa_ceq_d
__builtin_msa_ceqi_b
V16ScV16ScISi
__builtin_msa_ceqi_h
V8SsV8SsISi
__builtin_msa_ceqi_w
V4SiV4SiISi
__builtin_msa_ceqi_d
V2SLLiV2SLLiISi
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_s_d
__builtin_msa_cle_u_b
V16ScV16UcV16Uc
__builtin_msa_cle_u_h
V8SsV8UsV8Us
__builtin_msa_cle_u_w
V4SiV4UiV4Ui
__builtin_msa_cle_u_d
V2SLLiV2ULLiV2ULLi
__builtin_msa_clei_s_b
__builtin_msa_clei_s_h
__builtin_msa_clei_s_w
__builtin_msa_clei_s_d
__builtin_msa_clei_u_b
V16ScV16UcIUi
__builtin_msa_clei_u_h
V8SsV8UsIUi
__builtin_msa_clei_u_w
V4SiV4UiIUi
__builtin_msa_clei_u_d
V2SLLiV2ULLiIUi
__builtin_msa_clt_s_b
__builtin_msa_clt_s_h
__builtin_msa_clt_s_w
__builtin_msa_clt_s_d
__builtin_msa_clt_u_b
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clt_u_d
__builtin_msa_clti_s_b
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_s_d
__builtin_msa_clti_u_b
__builtin_msa_clti_u_h
__builtin_msa_clti_u_w
__builtin_msa_clti_u_d
__builtin_msa_copy_s_b
iV16ScIUi
__builtin_msa_copy_s_h
iV8SsIUi
__builtin_msa_copy_s_w
iV4SiIUi
__builtin_msa_copy_s_d
LLiV2SLLiIUi
__builtin_msa_copy_u_b
iV16UcIUi
__builtin_msa_copy_u_h
iV8UsIUi
__builtin_msa_copy_u_w
iV4UiIUi
__builtin_msa_copy_u_d
LLiV2ULLiIUi
__builtin_msa_ctcmsa
__builtin_msa_div_s_b
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_s_d
__builtin_msa_div_u_b
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_msa_div_u_d
__builtin_msa_dotp_s_h
__builtin_msa_dotp_s_w
__builtin_msa_dotp_s_d
__builtin_msa_dotp_u_h
__builtin_msa_dotp_u_w
__builtin_msa_dotp_u_d
__builtin_msa_dpadd_s_h
V8SsV8SsV16ScV16Sc
__builtin_msa_dpadd_s_w
V4SiV4SiV8SsV8Ss
__builtin_msa_dpadd_s_d
V2SLLiV2SLLiV4SiV4Si
__builtin_msa_dpadd_u_h
V8UsV8UsV16UcV16Uc
__builtin_msa_dpadd_u_w
V4UiV4UiV8UsV8Us
__builtin_msa_dpadd_u_d
V2ULLiV2ULLiV4UiV4Ui
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_u_h
__builtin_msa_dpsub_u_w
__builtin_msa_dpsub_u_d
__builtin_msa_fadd_w
__builtin_msa_fadd_d
__builtin_msa_fcaf_w
__builtin_msa_fcaf_d
V2LLiV2dV2d
__builtin_msa_fceq_w
__builtin_msa_fceq_d
__builtin_msa_fclass_w
__builtin_msa_fclass_d
__builtin_msa_fcle_w
__builtin_msa_fcle_d
__builtin_msa_fclt_w
__builtin_msa_fclt_d
__builtin_msa_fcne_w
__builtin_msa_fcne_d
__builtin_msa_fcor_w
__builtin_msa_fcor_d
__builtin_msa_fcueq_w
__builtin_msa_fcueq_d
__builtin_msa_fcule_w
__builtin_msa_fcule_d
__builtin_msa_fcult_w
__builtin_msa_fcult_d
__builtin_msa_fcun_w
__builtin_msa_fcun_d
__builtin_msa_fcune_w
__builtin_msa_fcune_d
__builtin_msa_fdiv_w
__builtin_msa_fdiv_d
__builtin_msa_fexdo_h
V8hV4fV4f
__builtin_msa_fexdo_w
V4fV2dV2d
__builtin_msa_fexp2_w
__builtin_msa_fexp2_d
__builtin_msa_fexupl_w
V4fV8h
__builtin_msa_fexupl_d
__builtin_msa_fexupr_w
__builtin_msa_fexupr_d
__builtin_msa_ffint_s_w
V4fV4Si
__builtin_msa_ffint_s_d
V2dV2SLLi
__builtin_msa_ffint_u_w
V4fV4Ui
__builtin_msa_ffint_u_d
V2dV2ULLi
__builtin_msa_ffql_w
V4fV8Ss
__builtin_msa_ffql_d
__builtin_msa_ffqr_w
__builtin_msa_ffqr_d
__builtin_msa_fill_b
V16Sci
__builtin_msa_fill_h
V8Ssi
__builtin_msa_fill_w
V4Sii
__builtin_msa_fill_d
V2SLLiLLi
__builtin_msa_flog2_w
__builtin_msa_flog2_d
__builtin_msa_fmadd_w
__builtin_msa_fmadd_d
__builtin_msa_fmax_w
__builtin_msa_fmax_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_a_d
__builtin_msa_fmin_w
__builtin_msa_fmin_d
__builtin_msa_fmin_a_w
__builtin_msa_fmin_a_d
__builtin_msa_fmsub_w
__builtin_msa_fmsub_d
__builtin_msa_fmul_w
__builtin_msa_fmul_d
__builtin_msa_frint_w
__builtin_msa_frint_d
__builtin_msa_frcp_w
__builtin_msa_frcp_d
__builtin_msa_frsqrt_w
__builtin_msa_frsqrt_d
__builtin_msa_fsaf_w
__builtin_msa_fsaf_d
__builtin_msa_fseq_w
__builtin_msa_fseq_d
__builtin_msa_fsle_w
__builtin_msa_fsle_d
__builtin_msa_fslt_w
__builtin_msa_fslt_d
__builtin_msa_fsne_w
__builtin_msa_fsne_d
__builtin_msa_fsor_w
__builtin_msa_fsor_d
__builtin_msa_fsqrt_w
__builtin_msa_fsqrt_d
__builtin_msa_fsub_w
__builtin_msa_fsub_d
__builtin_msa_fsueq_w
__builtin_msa_fsueq_d
__builtin_msa_fsule_w
__builtin_msa_fsule_d
__builtin_msa_fsult_w
__builtin_msa_fsult_d
__builtin_msa_fsun_w
__builtin_msa_fsun_d
__builtin_msa_fsune_w
__builtin_msa_fsune_d
__builtin_msa_ftint_s_w
V4SiV4f
__builtin_msa_ftint_s_d
V2SLLiV2d
__builtin_msa_ftint_u_w
__builtin_msa_ftint_u_d
__builtin_msa_ftq_h
__builtin_msa_ftq_w
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_u_w
__builtin_msa_ftrunc_u_d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_u_h
__builtin_msa_hadd_u_w
__builtin_msa_hadd_u_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
__builtin_msa_hsub_u_d
__builtin_msa_ilvev_b
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvev_d
__builtin_msa_ilvl_b
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvl_d
__builtin_msa_ilvod_b
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvod_d
__builtin_msa_ilvr_b
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_ilvr_d
__builtin_msa_insert_b
V16ScV16ScIUii
__builtin_msa_insert_h
V8SsV8SsIUii
__builtin_msa_insert_w
V4SiV4SiIUii
__builtin_msa_insert_d
V2SLLiV2SLLiIUiLLi
__builtin_msa_insve_b
V16ScV16ScIUiV16Sc
__builtin_msa_insve_h
V8SsV8SsIUiV8Ss
__builtin_msa_insve_w
V4SiV4SiIUiV4Si
__builtin_msa_insve_d
V2SLLiV2SLLiIUiV2SLLi
__builtin_msa_ld_b
V16Scv*Ii
__builtin_msa_ld_h
V8Ssv*Ii
__builtin_msa_ld_w
V4Siv*Ii
__builtin_msa_ld_d
V2SLLiv*Ii
__builtin_msa_ldi_b
V16cIi
__builtin_msa_ldi_h
V8sIi
__builtin_msa_ldi_w
V4iIi
__builtin_msa_ldi_d
V2LLiIi
__builtin_msa_madd_q_h
__builtin_msa_madd_q_w
__builtin_msa_maddr_q_h
__builtin_msa_maddr_q_w
__builtin_msa_maddv_b
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_msa_maddv_d
V2SLLiV2SLLiV2SLLiV2SLLi
__builtin_msa_max_a_b
__builtin_msa_max_a_h
__builtin_msa_max_a_w
__builtin_msa_max_a_d
__builtin_msa_max_s_b
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_s_d
__builtin_msa_max_u_b
__builtin_msa_max_u_h
__builtin_msa_max_u_w
__builtin_msa_max_u_d
__builtin_msa_maxi_s_b
V16ScV16ScIi
__builtin_msa_maxi_s_h
V8SsV8SsIi
__builtin_msa_maxi_s_w
V4SiV4SiIi
__builtin_msa_maxi_s_d
V2SLLiV2SLLiIi
__builtin_msa_maxi_u_b
V16UcV16UcIi
__builtin_msa_maxi_u_h
V8UsV8UsIi
__builtin_msa_maxi_u_w
V4UiV4UiIi
__builtin_msa_maxi_u_d
V2ULLiV2ULLiIi
__builtin_msa_min_a_b
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_a_d
__builtin_msa_min_s_b
__builtin_msa_min_s_h
__builtin_msa_min_s_w
__builtin_msa_min_s_d
__builtin_msa_min_u_b
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_min_u_d
__builtin_msa_mini_s_b
__builtin_msa_mini_s_h
__builtin_msa_mini_s_w
__builtin_msa_mini_s_d
__builtin_msa_mini_u_b
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mini_u_d
__builtin_msa_mod_s_b
__builtin_msa_mod_s_h
__builtin_msa_mod_s_w
__builtin_msa_mod_s_d
__builtin_msa_mod_u_b
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_msa_mod_u_d
__builtin_msa_move_v
V16ScV16Sc
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_msa_msubv_b
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_msa_msubv_d
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_msa_mulr_q_h
__builtin_msa_mulr_q_w
__builtin_msa_mulv_b
__builtin_msa_mulv_h
__builtin_msa_mulv_w
__builtin_msa_mulv_d
__builtin_msa_nloc_b
__builtin_msa_nloc_h
V8SsV8Ss
__builtin_msa_nloc_w
V4SiV4Si
__builtin_msa_nloc_d
V2SLLiV2SLLi
__builtin_msa_nlzc_b
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nlzc_d
__builtin_msa_nor_v
__builtin_msa_nori_b
V16UcV16cIUi
__builtin_msa_or_v
__builtin_msa_ori_b
__builtin_msa_pckev_b
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckev_d
__builtin_msa_pckod_b
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pckod_d
__builtin_msa_pcnt_b
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_msa_pcnt_d
__builtin_msa_sat_s_b
V16ScV16ScIUi
__builtin_msa_sat_s_h
V8SsV8SsIUi
__builtin_msa_sat_s_w
V4SiV4SiIUi
__builtin_msa_sat_s_d
V2SLLiV2SLLiIUi
__builtin_msa_sat_u_b
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_msa_sat_u_d
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
__builtin_msa_sld_b
V16cV16cV16cUi
__builtin_msa_sld_h
V8sV8sV8sUi
__builtin_msa_sld_w
V4iV4iV4iUi
__builtin_msa_sld_d
V2LLiV2LLiV2LLiUi
__builtin_msa_sldi_b
V16cV16cV16cIUi
__builtin_msa_sldi_h
V8sV8sV8sIUi
__builtin_msa_sldi_w
V4iV4iV4iIUi
__builtin_msa_sldi_d
V2LLiV2LLiV2LLiIUi
__builtin_msa_sll_b
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_sll_d
__builtin_msa_slli_b
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_slli_d
__builtin_msa_splat_b
V16cV16cUi
__builtin_msa_splat_h
V8sV8sUi
__builtin_msa_splat_w
V4iV4iUi
__builtin_msa_splat_d
V2LLiV2LLiUi
__builtin_msa_splati_b
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_splati_d
__builtin_msa_sra_b
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_sra_d
__builtin_msa_srai_b
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srai_d
__builtin_msa_srar_b
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srar_d
__builtin_msa_srari_b
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srari_d
__builtin_msa_srl_b
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srl_d
__builtin_msa_srli_b
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srli_d
__builtin_msa_srlr_b
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlr_d
__builtin_msa_srlri_b
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_srlri_d
__builtin_msa_st_b
vV16Scv*Ii
__builtin_msa_st_h
vV8Ssv*Ii
__builtin_msa_st_w
vV4Siv*Ii
__builtin_msa_st_d
vV2SLLiv*Ii
__builtin_msa_subs_s_b
__builtin_msa_subs_s_h
__builtin_msa_subs_s_w
__builtin_msa_subs_s_d
__builtin_msa_subs_u_b
__builtin_msa_subs_u_h
__builtin_msa_subs_u_w
__builtin_msa_subs_u_d
__builtin_msa_subsus_u_b
V16UcV16UcV16Sc
__builtin_msa_subsus_u_h
V8UsV8UsV8Ss
__builtin_msa_subsus_u_w
V4UiV4UiV4Si
__builtin_msa_subsus_u_d
V2ULLiV2ULLiV2SLLi
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_h
__builtin_msa_subsuu_s_w
__builtin_msa_subsuu_s_d
__builtin_msa_subv_b
__builtin_msa_subv_h
__builtin_msa_subv_w
__builtin_msa_subv_d
__builtin_msa_subvi_b
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_subvi_d
__builtin_msa_vshf_b
__builtin_msa_vshf_h
__builtin_msa_vshf_w
__builtin_msa_vshf_d
__builtin_msa_xor_v
__builtin_msa_xori_b
mips3
mips4
mips5
mips64
mips64r2
mips64r3
mips64r5
mips64r6
octeon
mips
mips1
mips2
mips32
mips32r2
mips32r3
mips32r5
mips32r6
p5600
MIPSEB
_MIPSEB
MIPSEL
_MIPSEL
__mips__
_mips
__mips
_MIPS_ISA
_MIPS_ISA_MIPS32
__mips64
__mips64__
_MIPS_ISA_MIPS64
__mips_isa_rev
__mips_o32
_ABIO32
_MIPS_SIM
__mips_n32
_ABIN32
__mips_n64
_ABI64
__mips_abicalls
__ABICALLS__
__mips_hard_float
__mips_soft_float
__mips_single_float
__mips_fpr
_MIPS_FPSET
__mips16
__mips_micromips
__mips_nan2008
__mips_abs2008
__mips_dsp_rev
__mips_dsp
__mips_dspr2
__mips_msa
__mips_no_madd4
_MIPS_SZPTR
_MIPS_SZINT
_MIPS_SZLONG
_MIPS_ARCH
_MIPS_ARCH_
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_tid_w
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_ntid_w
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_ctaid_w
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_nctaid_w
__nvvm_read_ptx_sreg_laneid
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_smid
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_read_ptx_sreg_lanemask_le
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_read_ptx_sreg_lanemask_gt
__nvvm_read_ptx_sreg_clock
__nvvm_read_ptx_sreg_clock64
__nvvm_read_ptx_sreg_pm0
__nvvm_read_ptx_sreg_pm1
__nvvm_read_ptx_sreg_pm2
__nvvm_read_ptx_sreg_pm3
__nvvm_prmt
__nvvm_fmax_ftz_f
__nvvm_fmax_f
__nvvm_fmin_ftz_f
__nvvm_fmin_f
__nvvm_fmax_d
__nvvm_fmin_d
__nvvm_mulhi_i
__nvvm_mulhi_ui
__nvvm_mulhi_ll
__nvvm_mulhi_ull
__nvvm_mul_rn_ftz_f
__nvvm_mul_rn_f
__nvvm_mul_rz_ftz_f
__nvvm_mul_rz_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rm_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rp_f
__nvvm_mul_rn_d
__nvvm_mul_rz_d
__nvvm_mul_rm_d
__nvvm_mul_rp_d
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_div_approx_ftz_f
__nvvm_div_approx_f
__nvvm_div_rn_ftz_f
__nvvm_div_rn_f
__nvvm_div_rz_ftz_f
__nvvm_div_rz_f
__nvvm_div_rm_ftz_f
__nvvm_div_rm_f
__nvvm_div_rp_ftz_f
__nvvm_div_rp_f
__nvvm_div_rn_d
__nvvm_div_rz_d
__nvvm_div_rm_d
__nvvm_div_rp_d
__nvvm_sad_i
iiii
__nvvm_sad_ui
__nvvm_floor_ftz_f
__nvvm_floor_f
__nvvm_floor_d
__nvvm_ceil_ftz_f
__nvvm_ceil_f
__nvvm_ceil_d
__nvvm_fabs_ftz_f
__nvvm_fabs_f
__nvvm_fabs_d
__nvvm_round_ftz_f
__nvvm_round_f
__nvvm_round_d
__nvvm_trunc_ftz_f
__nvvm_trunc_f
__nvvm_trunc_d
__nvvm_saturate_ftz_f
__nvvm_saturate_f
__nvvm_saturate_d
__nvvm_ex2_approx_ftz_f
__nvvm_ex2_approx_f
__nvvm_ex2_approx_d
__nvvm_lg2_approx_ftz_f
__nvvm_lg2_approx_f
__nvvm_lg2_approx_d
__nvvm_sin_approx_ftz_f
__nvvm_sin_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_cos_approx_f
__nvvm_fma_rn_ftz_f
ffff
__nvvm_fma_rn_f
__nvvm_fma_rz_ftz_f
__nvvm_fma_rz_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rm_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rp_f
__nvvm_fma_rn_d
dddd
__nvvm_fma_rz_d
__nvvm_fma_rm_d
__nvvm_fma_rp_d
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rn_f
__nvvm_rcp_rz_ftz_f
__nvvm_rcp_rz_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rm_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rp_f
__nvvm_rcp_rn_d
__nvvm_rcp_rz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rp_d
__nvvm_rcp_approx_ftz_d
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rn_f
__nvvm_sqrt_rz_ftz_f
__nvvm_sqrt_rz_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rm_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rp_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rz_d
__nvvm_sqrt_rm_d
__nvvm_sqrt_rp_d
__nvvm_rsqrt_approx_ftz_f
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_d
__nvvm_add_rn_ftz_f
__nvvm_add_rn_f
__nvvm_add_rz_ftz_f
__nvvm_add_rz_f
__nvvm_add_rm_ftz_f
__nvvm_add_rm_f
__nvvm_add_rp_ftz_f
__nvvm_add_rp_f
__nvvm_add_rn_d
__nvvm_add_rz_d
__nvvm_add_rm_d
__nvvm_add_rp_d
__nvvm_d2f_rn_ftz
__nvvm_d2f_rn
__nvvm_d2f_rz_ftz
__nvvm_d2f_rz
__nvvm_d2f_rm_ftz
__nvvm_d2f_rm
__nvvm_d2f_rp_ftz
__nvvm_d2f_rp
__nvvm_d2i_rn
__nvvm_d2i_rz
__nvvm_d2i_rm
__nvvm_d2i_rp
__nvvm_d2ui_rn
__nvvm_d2ui_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rp
__nvvm_i2d_rn
__nvvm_i2d_rz
__nvvm_i2d_rm
__nvvm_i2d_rp
__nvvm_ui2d_rn
__nvvm_ui2d_rz
__nvvm_ui2d_rm
__nvvm_ui2d_rp
__nvvm_f2i_rn_ftz
__nvvm_f2i_rn
__nvvm_f2i_rz_ftz
__nvvm_f2i_rz
__nvvm_f2i_rm_ftz
__nvvm_f2i_rm
__nvvm_f2i_rp_ftz
__nvvm_f2i_rp
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rz_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rp
__nvvm_i2f_rn
__nvvm_i2f_rz
__nvvm_i2f_rm
__nvvm_i2f_rp
__nvvm_ui2f_rn
__nvvm_ui2f_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rp
__nvvm_lohi_i2d
__nvvm_d2i_lo
__nvvm_d2i_hi
__nvvm_f2ll_rn_ftz
LLif
__nvvm_f2ll_rn
__nvvm_f2ll_rz_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rp
__nvvm_f2ull_rn_ftz
ULLif
__nvvm_f2ull_rn
__nvvm_f2ull_rz_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rp
__nvvm_d2ll_rn
LLid
__nvvm_d2ll_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rp
__nvvm_d2ull_rn
ULLid
__nvvm_d2ull_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rp
__nvvm_ll2f_rn
fLLi
__nvvm_ll2f_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rp
__nvvm_ull2f_rn
fULLi
__nvvm_ull2f_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rp
__nvvm_ll2d_rn
dLLi
__nvvm_ll2d_rz
__nvvm_ll2d_rm
__nvvm_ll2d_rp
__nvvm_ull2d_rn
dULLi
__nvvm_ull2d_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rp
__nvvm_f2h_rn_ftz
__nvvm_f2h_rn
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_bitcast_d2ll
__nvvm_fns
ptx60|ptx61
__syncthreads
__nvvm_bar0_popc
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_bar_sync
__nvvm_bar_warp_sync
__nvvm_barrier_sync
__nvvm_barrier_sync_cnt
__nvvm_shfl_down_i32
__nvvm_shfl_down_f32
ffii
__nvvm_shfl_up_i32
__nvvm_shfl_up_f32
__nvvm_shfl_bfly_i32
__nvvm_shfl_bfly_f32
__nvvm_shfl_idx_i32
__nvvm_shfl_idx_f32
__nvvm_shfl_sync_down_i32
iUiiii
__nvvm_shfl_sync_down_f32
fUifii
__nvvm_shfl_sync_up_i32
__nvvm_shfl_sync_up_f32
__nvvm_shfl_sync_bfly_i32
__nvvm_shfl_sync_bfly_f32
__nvvm_shfl_sync_idx_i32
__nvvm_shfl_sync_idx_f32
__nvvm_vote_all
__nvvm_vote_any
__nvvm_vote_uni
__nvvm_vote_ballot
__nvvm_vote_all_sync
bUib
__nvvm_vote_any_sync
__nvvm_vote_uni_sync
__nvvm_vote_ballot_sync
UiUib
__nvvm_match_any_sync_i32
__nvvm_match_any_sync_i64
WiUiWi
__nvvm_match_all_sync_i32p
UiUiUii*
__nvvm_match_all_sync_i64p
WiUiWii*
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_memcpy
vUc*Uc*zi
__nvvm_memset
vUc*Uczi
__builtin_ptx_read_image2Dfi_
V4fiiii
__builtin_ptx_read_image2Dff_
V4fiiff
__builtin_ptx_read_image2Dii_
V4iiiii
__builtin_ptx_read_image2Dif_
V4iiiff
__builtin_ptx_read_image3Dfi_
V4fiiiiii
__builtin_ptx_read_image3Dff_
V4fiiffff
__builtin_ptx_read_image3Dii_
V4iiiiiii
__builtin_ptx_read_image3Dif_
V4iiiffff
__builtin_ptx_write_image2Df_
viiiffff
__builtin_ptx_write_image2Di_
viiiiiii
__builtin_ptx_write_image2Dui_
viiiUiUiUiUi
__builtin_ptx_get_image_depthi_
__builtin_ptx_get_image_heighti_
__builtin_ptx_get_image_widthi_
__builtin_ptx_get_image_channel_data_typei_
__builtin_ptx_get_image_channel_orderi_
__nvvm_atom_add_gen_i
iiD*i
__nvvm_atom_cta_add_gen_i
sm_60|sm_61|sm_62|sm_70|sm_71
__nvvm_atom_sys_add_gen_i
__nvvm_atom_add_gen_l
LiLiD*Li
__nvvm_atom_cta_add_gen_l
__nvvm_atom_sys_add_gen_l
__nvvm_atom_add_gen_ll
__nvvm_atom_cta_add_gen_ll
__nvvm_atom_sys_add_gen_ll
__nvvm_atom_add_gen_f
ffD*f
__nvvm_atom_cta_add_gen_f
__nvvm_atom_sys_add_gen_f
__nvvm_atom_add_gen_d
ddD*d
__nvvm_atom_cta_add_gen_d
__nvvm_atom_sys_add_gen_d
__nvvm_atom_sub_gen_i
__nvvm_atom_sub_gen_l
__nvvm_atom_sub_gen_ll
__nvvm_atom_xchg_gen_i
__nvvm_atom_cta_xchg_gen_i
__nvvm_atom_sys_xchg_gen_i
__nvvm_atom_xchg_gen_l
__nvvm_atom_cta_xchg_gen_l
__nvvm_atom_sys_xchg_gen_l
__nvvm_atom_xchg_gen_ll
__nvvm_atom_cta_xchg_gen_ll
__nvvm_atom_sys_xchg_gen_ll
__nvvm_atom_max_gen_i
__nvvm_atom_cta_max_gen_i
__nvvm_atom_sys_max_gen_i
__nvvm_atom_max_gen_ui
UiUiD*Ui
__nvvm_atom_cta_max_gen_ui
__nvvm_atom_sys_max_gen_ui
__nvvm_atom_max_gen_l
__nvvm_atom_cta_max_gen_l
__nvvm_atom_sys_max_gen_l
__nvvm_atom_max_gen_ul
ULiULiD*ULi
__nvvm_atom_cta_max_gen_ul
__nvvm_atom_sys_max_gen_ul
__nvvm_atom_max_gen_ll
__nvvm_atom_cta_max_gen_ll
__nvvm_atom_sys_max_gen_ll
__nvvm_atom_max_gen_ull
ULLiULLiD*ULLi
__nvvm_atom_cta_max_gen_ull
__nvvm_atom_sys_max_gen_ull
__nvvm_atom_min_gen_i
__nvvm_atom_cta_min_gen_i
__nvvm_atom_sys_min_gen_i
__nvvm_atom_min_gen_ui
__nvvm_atom_cta_min_gen_ui
__nvvm_atom_sys_min_gen_ui
__nvvm_atom_min_gen_l
__nvvm_atom_cta_min_gen_l
__nvvm_atom_sys_min_gen_l
__nvvm_atom_min_gen_ul
__nvvm_atom_cta_min_gen_ul
__nvvm_atom_sys_min_gen_ul
__nvvm_atom_min_gen_ll
__nvvm_atom_cta_min_gen_ll
__nvvm_atom_sys_min_gen_ll
__nvvm_atom_min_gen_ull
__nvvm_atom_cta_min_gen_ull
__nvvm_atom_sys_min_gen_ull
__nvvm_atom_inc_gen_ui
__nvvm_atom_cta_inc_gen_ui
__nvvm_atom_sys_inc_gen_ui
__nvvm_atom_dec_gen_ui
__nvvm_atom_cta_dec_gen_ui
__nvvm_atom_sys_dec_gen_ui
__nvvm_atom_and_gen_i
__nvvm_atom_cta_and_gen_i
__nvvm_atom_sys_and_gen_i
__nvvm_atom_and_gen_l
__nvvm_atom_cta_and_gen_l
__nvvm_atom_sys_and_gen_l
__nvvm_atom_and_gen_ll
__nvvm_atom_cta_and_gen_ll
__nvvm_atom_sys_and_gen_ll
__nvvm_atom_or_gen_i
__nvvm_atom_cta_or_gen_i
__nvvm_atom_sys_or_gen_i
__nvvm_atom_or_gen_l
__nvvm_atom_cta_or_gen_l
__nvvm_atom_sys_or_gen_l
__nvvm_atom_or_gen_ll
__nvvm_atom_cta_or_gen_ll
__nvvm_atom_sys_or_gen_ll
__nvvm_atom_xor_gen_i
__nvvm_atom_cta_xor_gen_i
__nvvm_atom_sys_xor_gen_i
__nvvm_atom_xor_gen_l
__nvvm_atom_cta_xor_gen_l
__nvvm_atom_sys_xor_gen_l
__nvvm_atom_xor_gen_ll
__nvvm_atom_cta_xor_gen_ll
__nvvm_atom_sys_xor_gen_ll
__nvvm_atom_cas_gen_i
iiD*ii
__nvvm_atom_cta_cas_gen_i
__nvvm_atom_sys_cas_gen_i
__nvvm_atom_cas_gen_l
LiLiD*LiLi
__nvvm_atom_cta_cas_gen_l
__nvvm_atom_sys_cas_gen_l
__nvvm_atom_cas_gen_ll
LLiLLiD*LLiLLi
__nvvm_atom_cta_cas_gen_ll
__nvvm_atom_sys_cas_gen_ll
__nvvm_compiler_error
vcC*4
__nvvm_compiler_warn
__nvvm_ldg_c
ccC*
__nvvm_ldg_s
ssC*
__nvvm_ldg_i
iiC*
__nvvm_ldg_l
LiLiC*
__nvvm_ldg_ll
LLiLLiC*
__nvvm_ldg_uc
UcUcC*
__nvvm_ldg_us
UsUsC*
__nvvm_ldg_ui
UiUiC*
__nvvm_ldg_ul
ULiULiC*
__nvvm_ldg_ull
ULLiULLiC*
__nvvm_ldg_f
ffC*
__nvvm_ldg_d
ddC*
__nvvm_ldg_c2
E2cE2cC*
__nvvm_ldg_c4
E4cE4cC*
__nvvm_ldg_s2
E2sE2sC*
__nvvm_ldg_s4
E4sE4sC*
__nvvm_ldg_i2
E2iE2iC*
__nvvm_ldg_i4
E4iE4iC*
__nvvm_ldg_ll2
E2LLiE2LLiC*
__nvvm_ldg_uc2
E2UcE2UcC*
__nvvm_ldg_uc4
E4UcE4UcC*
__nvvm_ldg_us2
E2UsE2UsC*
__nvvm_ldg_us4
E4UsE4UsC*
__nvvm_ldg_ui2
E2UiE2UiC*
__nvvm_ldg_ui4
E4UiE4UiC*
__nvvm_ldg_ull2
E2ULLiE2ULLiC*
__nvvm_ldg_f2
E2fE2fC*
__nvvm_ldg_f4
E4fE4fC*
__nvvm_ldg_d2
E2dE2dC*
__hmma_m16n16k16_ld_a
vi*iC*UiIi
sm_70|sm_71,ptx60|ptx61
__hmma_m16n16k16_ld_b
__hmma_m16n16k16_ld_c_f16
__hmma_m16n16k16_ld_c_f32
vf*fC*UiIi
__hmma_m16n16k16_st_c_f16
vi*i*UiIi
__hmma_m16n16k16_st_c_f32
vf*f*UiIi
__hmma_m32n8k16_ld_a
sm_70|sm_71,ptx61
__hmma_m32n8k16_ld_b
__hmma_m32n8k16_ld_c_f16
__hmma_m32n8k16_ld_c_f32
__hmma_m32n8k16_st_c_f16
__hmma_m32n8k16_st_c_f32
__hmma_m8n32k16_ld_a
__hmma_m8n32k16_ld_b
__hmma_m8n32k16_ld_c_f16
__hmma_m8n32k16_ld_c_f32
__hmma_m8n32k16_st_c_f16
__hmma_m8n32k16_st_c_f32
__hmma_m16n16k16_mma_f16f16
vi*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f32f16
vf*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f32f32
vf*iC*iC*fC*IiIi
__hmma_m16n16k16_mma_f16f32
vi*iC*iC*fC*IiIi
__hmma_m32n8k16_mma_f16f16
__hmma_m32n8k16_mma_f32f16
__hmma_m32n8k16_mma_f32f32
__hmma_m32n8k16_mma_f16f32
__hmma_m8n32k16_mma_f16f16
__hmma_m8n32k16_mma_f32f16
__hmma_m8n32k16_mma_f32f32
__hmma_m8n32k16_mma_f16f32
cl_clang_storage_class_specifiers
cl_khr_gl_sharing
cl_khr_icd
cl_khr_fp64
cl_khr_byte_addressable_store
cl_khr_global_int32_base_atomics
cl_khr_global_int32_extended_atomics
cl_khr_local_int32_base_atomics
cl_khr_local_int32_extended_atomics
__PTX__
__NVPTX__
__CUDA_ARCH__
e-p:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
e-i64:64-i128:128-v16:16-v32:32-n16:32:64
__builtin_ldbio
ivDC*
__builtin_ldbuio
__builtin_ldhio
__builtin_ldhuio
__builtin_ldwio
__builtin_ldwuio
__builtin_rdctl
__builtin_wrctl
vIii
__builtin_rdprs
__builtin_stbio
vvD*i
__builtin_sthio
__builtin_stwio
__builtin_sync
__builtin_flushd
vvD*
__builtin_flushda
__builtin_wrpie
nios2r2mandatory
__builtin_eni
__builtin_ldex
__builtin_stex
ivD*i
__builtin_ldsex
nios2r2mpx
__builtin_stsex
ivDC*i
nios2
NIOS2
__nios2
__NIOS2
__nios2__
__NIOS2__
nios2r2
nios2r2bmx
nios2r2cdx
__APPLE_CC__
6000
__APPLE__
__STDC_NO_THREADS__
OBJC_NEW_PROPERTIES
_FORTIFY_SOURCE
__PTRAUTH_INTRINSICS__
clang
__apple_build_version__
__weak
__attribute__((objc_gc(weak)))
__strong
__unsafe_unretained
__STATIC__
__DYNAMIC__
_REENTRANT
macos
maccatalyst
__ENVIRONMENT_TV_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_WATCH_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_BRIDGE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
__MACH__
__le32__
__pnacl__
__builtin_ppc_get_timebase
__builtin_altivec_vaddcuw
__builtin_altivec_vaddsbs
__builtin_altivec_vaddubs
__builtin_altivec_vaddshs
__builtin_altivec_vadduhs
__builtin_altivec_vaddsws
__builtin_altivec_vadduws
__builtin_altivec_vaddeuqm
V1ULLLiV1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddcuq
V1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddecuq
__builtin_altivec_vsubsbs
__builtin_altivec_vsububs
__builtin_altivec_vsubshs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubsws
__builtin_altivec_vsubuws
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubcuq
__builtin_altivec_vsubecuq
__builtin_altivec_vavgsb
__builtin_altivec_vavgub
__builtin_altivec_vavgsh
__builtin_altivec_vavguh
__builtin_altivec_vavgsw
__builtin_altivec_vavguw
__builtin_altivec_vrfip
__builtin_altivec_vcfsx
V4fV4iIi
__builtin_altivec_vcfux
__builtin_altivec_vctsxs
V4SiV4fIi
__builtin_altivec_vctuxs
V4UiV4fIi
__builtin_altivec_dss
__builtin_altivec_dssall
__builtin_altivec_dst
vvC*iUi
__builtin_altivec_dstt
__builtin_altivec_dstst
__builtin_altivec_dststt
__builtin_altivec_vexptefp
__builtin_altivec_vrfim
__builtin_altivec_lvx
V4iivC*
__builtin_altivec_lvxl
__builtin_altivec_lvebx
V16civC*
__builtin_altivec_lvehx
V8sivC*
__builtin_altivec_lvewx
__builtin_altivec_vlogefp
__builtin_altivec_lvsl
V16cUcvC*
__builtin_altivec_lvsr
__builtin_altivec_vmaddfp
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
__builtin_altivec_vmsumubm
V4UiV16UcV16UcV4Ui
__builtin_altivec_vmsummbm
V4SiV16ScV16UcV4Si
__builtin_altivec_vmsumuhm
__builtin_altivec_vmsumshm
__builtin_altivec_vmsumuhs
__builtin_altivec_vmsumshs
__builtin_altivec_vmuleub
__builtin_altivec_vmulesb
__builtin_altivec_vmuleuh
__builtin_altivec_vmulesh
__builtin_altivec_vmuleuw
__builtin_altivec_vmulesw
__builtin_altivec_vmuloub
__builtin_altivec_vmulosb
__builtin_altivec_vmulouh
__builtin_altivec_vmulosh
__builtin_altivec_vmulouw
__builtin_altivec_vmulosw
__builtin_altivec_vnmsubfp
__builtin_altivec_vpkpx
V8sV4UiV4Ui
__builtin_altivec_vpkuhus
__builtin_altivec_vpkshss
__builtin_altivec_vpkuwus
__builtin_altivec_vpkswss
__builtin_altivec_vpkshus
V16UcV8SsV8Ss
__builtin_altivec_vpkswus
V8UsV4SiV4Si
__builtin_altivec_vpksdss
__builtin_altivec_vpksdus
V4UiV2SLLiV2SLLi
__builtin_altivec_vpkudus
__builtin_altivec_vpkudum
__builtin_altivec_vperm_4si
V4iV4iV4iV16Uc
__builtin_altivec_stvx
vV4iiv*
__builtin_altivec_stvxl
__builtin_altivec_stvebx
vV16civ*
__builtin_altivec_stvehx
vV8siv*
__builtin_altivec_stvewx
__builtin_altivec_vcmpbfp
V4iV4fV4f
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpequd
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpneb
__builtin_altivec_vcmpneh
__builtin_altivec_vcmpnew
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpnezh
__builtin_altivec_vcmpnezw
__builtin_altivec_vcmpgtsb
V16cV16ScV16Sc
__builtin_altivec_vcmpgtub
V16cV16UcV16Uc
__builtin_altivec_vcmpgtsh
V8sV8SsV8Ss
__builtin_altivec_vcmpgtuh
V8sV8UsV8Us
__builtin_altivec_vcmpgtsw
V4iV4SiV4Si
__builtin_altivec_vcmpgtuw
V4iV4UiV4Ui
__builtin_altivec_vcmpgtsd
__builtin_altivec_vcmpgtud
V2LLiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxub
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxuh
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxuw
__builtin_altivec_vmaxsd
__builtin_altivec_vmaxud
__builtin_altivec_vmaxfp
__builtin_altivec_mfvscr
V8Us
__builtin_altivec_vminsb
__builtin_altivec_vminub
__builtin_altivec_vminsh
__builtin_altivec_vminuh
__builtin_altivec_vminsw
__builtin_altivec_vminuw
__builtin_altivec_vminsd
__builtin_altivec_vminud
__builtin_altivec_vminfp
__builtin_altivec_mtvscr
vV4i
__builtin_altivec_vrefp
__builtin_altivec_vrlb
V16cV16cV16Uc
__builtin_altivec_vrlh
V8sV8sV8Us
__builtin_altivec_vrlw
V4iV4iV4Ui
__builtin_altivec_vrld
V2LLiV2LLiV2ULLi
__builtin_altivec_vsel_4si
V4iV4iV4iV4Ui
__builtin_altivec_vsl
__builtin_altivec_vslo
__builtin_altivec_vsrab
__builtin_altivec_vsrah
__builtin_altivec_vsraw
__builtin_altivec_vsr
__builtin_altivec_vsro
__builtin_altivec_vrfin
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsubcuw
__builtin_altivec_vsum4sbs
V4SiV16ScV4Si
__builtin_altivec_vsum4ubs
V4UiV16UcV4Ui
__builtin_altivec_vsum4shs
V4SiV8SsV4Si
__builtin_altivec_vsum2sws
__builtin_altivec_vsumsws
__builtin_altivec_vrfiz
__builtin_altivec_vupkhsb
__builtin_altivec_vupkhpx
V4UiV8s
__builtin_altivec_vupkhsh
__builtin_altivec_vupkhsw
__builtin_altivec_vupklsb
__builtin_altivec_vupklpx
__builtin_altivec_vupklsh
__builtin_altivec_vupklsw
__builtin_altivec_vcmpbfp_p
iiV4fV4f
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpequb_p
iiV16cV16c
__builtin_altivec_vcmpequh_p
iiV8sV8s
__builtin_altivec_vcmpequw_p
iiV4iV4i
__builtin_altivec_vcmpequd_p
iiV2LLiV2LLi
__builtin_altivec_vcmpeqfp_p
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpnew_p
__builtin_altivec_vcmpned_p
__builtin_altivec_vcmpgtsb_p
iiV16ScV16Sc
__builtin_altivec_vcmpgtub_p
iiV16UcV16Uc
__builtin_altivec_vcmpgtsh_p
iiV8SsV8Ss
__builtin_altivec_vcmpgtuh_p
iiV8UsV8Us
__builtin_altivec_vcmpgtsw_p
iiV4SiV4Si
__builtin_altivec_vcmpgtuw_p
iiV4UiV4Ui
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_vcmpgtud_p
iiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp_p
__builtin_altivec_vgbbd
__builtin_altivec_vbpermq
__builtin_altivec_crypto_vsbox
__builtin_altivec_crypto_vpermxor
__builtin_altivec_crypto_vshasigmaw
V4UiV4UiIiIi
__builtin_altivec_crypto_vshasigmad
V2ULLiV2ULLiIiIi
__builtin_altivec_crypto_vcipher
__builtin_altivec_crypto_vcipherlast
__builtin_altivec_crypto_vncipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_crypto_vpmsumh
__builtin_altivec_crypto_vpmsumw
__builtin_altivec_crypto_vpmsumd
__builtin_altivec_vclzb
__builtin_altivec_vclzh
__builtin_altivec_vclzw
__builtin_altivec_vclzd
__builtin_altivec_vctzb
__builtin_altivec_vctzh
__builtin_altivec_vctzw
__builtin_altivec_vctzd
__builtin_altivec_vclzlsbb
SiV16Uc
__builtin_altivec_vctzlsbb
__builtin_altivec_vprtybw
__builtin_altivec_vprtybd
__builtin_altivec_vprtybq
V1ULLLiV1ULLLi
__builtin_altivec_vpopcntb
__builtin_altivec_vpopcnth
__builtin_altivec_vpopcntw
__builtin_altivec_vpopcntd
__builtin_altivec_vabsdub
__builtin_altivec_vabsduh
__builtin_altivec_vabsduw
__builtin_altivec_vslv
__builtin_altivec_vsrv
__builtin_altivec_vrlwmi
__builtin_altivec_vrldmi
V2ULLiV2ULLiV2ULLiV2ULLi
__builtin_altivec_vrlwnm
__builtin_altivec_vrldnm
__builtin_vsx_lxvd2x
V2divC*
__builtin_vsx_lxvw4x
__builtin_vsx_lxvd2x_be
V2dSLLivC*
__builtin_vsx_lxvw4x_be
V4iSLLivC*
__builtin_vsx_stxvd2x
vV2div*
__builtin_vsx_stxvw4x
__builtin_vsx_stxvd2x_be
vV2dSLLivC*
__builtin_vsx_stxvw4x_be
vV4iSLLivC*
__builtin_vsx_lxvl
V4ivC*ULLi
__builtin_vsx_lxvll
__builtin_vsx_stxvl
vV4iv*ULLi
__builtin_vsx_stxvll
__builtin_vsx_xvmaxdp
__builtin_vsx_xvmaxsp
__builtin_vsx_xsmaxdp
__builtin_vsx_xvmindp
__builtin_vsx_xvminsp
__builtin_vsx_xsmindp
__builtin_vsx_xvdivdp
__builtin_vsx_xvdivsp
__builtin_vsx_xvrdpip
__builtin_vsx_xvrspip
__builtin_vsx_xvcmpeqdp
V2ULLiV2dV2d
__builtin_vsx_xvcmpeqsp
V4UiV4fV4f
__builtin_vsx_xvcmpeqdp_p
iiV2dV2d
__builtin_vsx_xvcmpeqsp_p
__builtin_vsx_xvcmpgedp
__builtin_vsx_xvcmpgesp
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvcmpgesp_p
__builtin_vsx_xvcmpgtdp
__builtin_vsx_xvcmpgtsp
__builtin_vsx_xvcmpgtdp_p
__builtin_vsx_xvcmpgtsp_p
__builtin_vsx_xvrdpim
__builtin_vsx_xvrspim
__builtin_vsx_xvrdpi
__builtin_vsx_xvrspi
__builtin_vsx_xvrdpic
__builtin_vsx_xvrspic
__builtin_vsx_xvrdpiz
__builtin_vsx_xvrspiz
__builtin_vsx_xvmaddadp
__builtin_vsx_xvmaddasp
__builtin_vsx_xvmsubadp
__builtin_vsx_xvmsubasp
__builtin_vsx_xvmuldp
__builtin_vsx_xvmulsp
__builtin_vsx_xvnmaddadp
__builtin_vsx_xvnmaddasp
__builtin_vsx_xvnmsubadp
__builtin_vsx_xvnmsubasp
__builtin_vsx_xvredp
__builtin_vsx_xvresp
__builtin_vsx_xvrsqrtedp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvsqrtdp
__builtin_vsx_xvsqrtsp
__builtin_vsx_xxleqv
__builtin_vsx_xvcpsgndp
__builtin_vsx_xvcpsgnsp
__builtin_vsx_xvabssp
__builtin_vsx_xvabsdp
__builtin_vsx_xviexpdp
V2dV2ULLiV2ULLi
__builtin_vsx_xviexpsp
V4fV4UiV4Ui
__builtin_vsx_xvxexpdp
V2ULLiV2d
__builtin_vsx_xvxexpsp
V4UiV4f
__builtin_vsx_xvxsigdp
__builtin_vsx_xvxsigsp
__builtin_vsx_xvcvdpsxws
V4SiV2d
__builtin_vsx_xvcvdpuxws
V4UiV2d
__builtin_vsx_xvcvsxwdp
V2dV4Si
__builtin_vsx_xvcvuxwdp
V2dV4Ui
__builtin_vsx_xvcvspdp
V2dV4f
__builtin_vsx_xvcvsxdsp
V4fV2SLLi
__builtin_vsx_xvcvuxdsp
V4fV2ULLi
__builtin_vsx_xvcvdpsp
__builtin_vsx_xvcvsphp
__builtin_vsx_xvcvhpsp
V4fV8Us
__builtin_vsx_xvtstdcdp
V2ULLiV2dIi
__builtin_vsx_xvtstdcsp
__builtin_vsx_insertword
V16UcV4UiV16UcIi
__builtin_vsx_extractuword
V2ULLiV16UcIi
__builtin_vsx_xxpermdi
__builtin_vsx_xxsldwi
__builtin_sqrtf128_round_to_odd
LLdLLd
__builtin_addf128_round_to_odd
LLdLLdLLd
__builtin_subf128_round_to_odd
__builtin_mulf128_round_to_odd
__builtin_divf128_round_to_odd
__builtin_fmaf128_round_to_odd
LLdLLdLLdLLd
__builtin_truncf128_round_to_odd
dLLd
UiUIi
__builtin_tabortdc
UiUiUiUi
__builtin_tabortdci
UiUiUii
__builtin_tabortwc
__builtin_tabortwci
__builtin_tcheck
__builtin_treclaim
__builtin_trechkpt
__builtin_tsr
__builtin_tendall
__builtin_tresume
__builtin_tsuspend
__builtin_get_texasr
__builtin_get_texasru
__builtin_get_tfhar
__builtin_get_tfiar
__builtin_set_texasr
vLUi
__builtin_set_texasru
__builtin_set_tfhar
__builtin_set_tfiar
__builtin_ttest
__builtin_divwe
SiSiSi
__builtin_divweu
__builtin_divde
SLLiSLLiSLLi
__builtin_divdeu
__builtin_bpermd
vrsave
vscr
spe_acc
spefscr
fr10
fr11
fr12
fr13
fr14
fr15
fr16
fr17
fr18
fr19
fr20
fr21
fr22
fr23
fr24
fr25
fr26
fr27
fr28
fr29
fr30
fr31
powerpc
altivec
power8-vector
crypto
direct-move
bpermd
extdiv
float128
power9-vector
+altivec
+vsx
+bpermd
+extdiv
+power8-vector
+crypto
+direct-move
+qpx
+htm
+float128
+power9-vector
603e
603ev
604e
7400
7450
e500mc
e5500
power3
pwr3
power4
pwr4
power5
pwr5
power5x
pwr5x
power6
pwr6
power6x
pwr6x
power7
pwr7
power8
pwr8
power9
pwr9
powerpc64
ppc64
powerpc64le
ppc64le
-vsx
-mpower8-vector
-mno-vsx
-mdirect-move
-mfloat128
-mpower9-vector
__ppc__
__PPC__
_ARCH_PPC
__powerpc__
__POWERPC__
_ARCH_PPC64
__powerpc64__
__ppc64__
__PPC64__
_LITTLE_ENDIAN
_BIG_ENDIAN
elfv1
elfv1-qpx
_CALL_ELF
elfv2
_CALL_LINUX
__NATURAL_ALIGNMENT__
__LONGDOUBLE128
__STRUCT_PARM_ALIGN__
_ARCH_
_ARCH_PPCGR
_ARCH_PPCSQ
_ARCH_440
_ARCH_603
_ARCH_604
_ARCH_PWR4
_ARCH_PWR5
_ARCH_PWR5X
_ARCH_PWR6
_ARCH_PWR6X
_ARCH_PWR7
_ARCH_PWR8
_ARCH_PWR9
_ARCH_A2
_ARCH_A2Q
_ARCH_QP
__bg__
__THW_BLUEGENE__
__bgq__
__TOS_BGQ__
10206
__ALTIVEC__
__VSX__
__POWER8_VECTOR__
__CRYPTO__
__FLOAT128__
__POWER9_VECTOR__
__HAVE_BSWAP__
zero
__ELF__
__riscv
__riscv_xlen
__riscv_cmodel_medlow
__riscv_float_abi_soft
__riscv_mul
__riscv_div
__riscv_muldiv
__riscv_atomic
__riscv_flen
__riscv_fdiv
__riscv_fsqrt
__riscv_compressed
SPIR32
SPIR64
sparc
supersparc
sparclite
f934
hypersparc
sparclite86x
sparclet
tsc701
ultrasparc
ultrasparc3
niagara
niagara2
niagara3
niagara4
ma2100
ma2150
ma2155
ma2450
ma2455
ma2x5x
ma2080
ma2085
ma2480
ma2485
ma2x8x
myriad2
myriad2.1
myriad2.2
myriad2.3
leon2
at697e
at697f
leon3
ut699
gr712rc
leon4
gr740
SOFT_FLOAT
__sparcv8
__sparcv8__
__sparcv9
__sparcv9__
__sparc_v9__
__sparc_v8__
__leon__
__ma2100
__ma2150
__ma2155
__ma2450
__ma2455
__ma2080
__ma2085
__ma2480
__ma2485
__ma2x5x
__ma2x5x__
__ma2x8x
__ma2x8x__
__myriad2__
__myriad2
__arch64__
__sparc64__
__builtin_tbegin
transactional-execution
__builtin_tbegin_nofloat
__builtin_tbeginc
__builtin_tabort
__builtin_tend
__builtin_tx_nesting_depth
__builtin_tx_assist
__builtin_non_tx_store
__builtin_s390_lcbb
UivC*Ii
vector
__builtin_s390_vlbb
V16ScvC*Ii
__builtin_s390_vll
V16ScUivC*
__builtin_s390_vstl
vV16ScUiv*
__builtin_s390_vperm
V16UcV16UcV16UcV16Uc
__builtin_s390_vpdi
V2ULLiV2ULLiV2ULLiIi
__builtin_s390_vpksh
V16ScV8SsV8Ss
__builtin_s390_vpkshs
V16ScV8SsV8Ssi*
__builtin_s390_vpksf
V8SsV4SiV4Si
__builtin_s390_vpksfs
V8SsV4SiV4Sii*
__builtin_s390_vpksg
V4SiV2SLLiV2SLLi
__builtin_s390_vpksgs
V4SiV2SLLiV2SLLii*
__builtin_s390_vpklsh
V16UcV8UsV8Us
__builtin_s390_vpklshs
V16UcV8UsV8Usi*
__builtin_s390_vpklsf
V8UsV4UiV4Ui
__builtin_s390_vpklsfs
V8UsV4UiV4Uii*
__builtin_s390_vpklsg
V4UiV2ULLiV2ULLi
__builtin_s390_vpklsgs
V4UiV2ULLiV2ULLii*
__builtin_s390_vuphb
V8SsV16Sc
__builtin_s390_vuphh
V4SiV8Ss
__builtin_s390_vuphf
V2SLLiV4Si
__builtin_s390_vuplb
__builtin_s390_vuplhw
__builtin_s390_vuplf
__builtin_s390_vuplhb
V8UsV16Uc
__builtin_s390_vuplhh
V4UiV8Us
__builtin_s390_vuplhf
V2ULLiV4Ui
__builtin_s390_vupllb
__builtin_s390_vupllh
__builtin_s390_vupllf
__builtin_s390_vaq
V16UcV16UcV16Uc
__builtin_s390_vacq
__builtin_s390_vaccb
__builtin_s390_vacch
V8UsV8UsV8Us
__builtin_s390_vaccf
V4UiV4UiV4Ui
__builtin_s390_vaccg
V2ULLiV2ULLiV2ULLi
__builtin_s390_vaccq
__builtin_s390_vacccq
__builtin_s390_vavgb
V16ScV16ScV16Sc
__builtin_s390_vavgh
V8SsV8SsV8Ss
__builtin_s390_vavgf
V4SiV4SiV4Si
__builtin_s390_vavgg
V2SLLiV2SLLiV2SLLi
__builtin_s390_vavglb
__builtin_s390_vavglh
__builtin_s390_vavglf
__builtin_s390_vavglg
__builtin_s390_vceqbs
V16ScV16ScV16Sci*
__builtin_s390_vceqhs
V8SsV8SsV8Ssi*
__builtin_s390_vceqfs
V4SiV4SiV4Sii*
__builtin_s390_vceqgs
V2SLLiV2SLLiV2SLLii*
__builtin_s390_vchbs
__builtin_s390_vchhs
__builtin_s390_vchfs
__builtin_s390_vchgs
__builtin_s390_vchlbs
V16ScV16UcV16Uci*
__builtin_s390_vchlhs
V8SsV8UsV8Usi*
__builtin_s390_vchlfs
V4SiV4UiV4Uii*
__builtin_s390_vchlgs
V2SLLiV2ULLiV2ULLii*
__builtin_s390_vcksm
__builtin_s390_vclzb
V16UcV16Uc
__builtin_s390_vclzh
V8UsV8Us
__builtin_s390_vclzf
V4UiV4Ui
__builtin_s390_vclzg
V2ULLiV2ULLi
__builtin_s390_vctzb
__builtin_s390_vctzh
__builtin_s390_vctzf
__builtin_s390_vctzg
__builtin_s390_verimb
V16UcV16UcV16UcV16UcIi
__builtin_s390_verimh
V8UsV8UsV8UsV8UsIi
__builtin_s390_verimf
V4UiV4UiV4UiV4UiIi
__builtin_s390_verimg
V2ULLiV2ULLiV2ULLiV2ULLiIi
__builtin_s390_verllb
V16UcV16UcUi
__builtin_s390_verllh
V8UsV8UsUi
__builtin_s390_verllf
V4UiV4UiUi
__builtin_s390_verllg
V2ULLiV2ULLiUi
__builtin_s390_verllvb
__builtin_s390_verllvh
__builtin_s390_verllvf
__builtin_s390_verllvg
__builtin_s390_vgfmb
V8UsV16UcV16Uc
__builtin_s390_vgfmh
V4UiV8UsV8Us
__builtin_s390_vgfmf
V2ULLiV4UiV4Ui
__builtin_s390_vgfmg
V16UcV2ULLiV2ULLi
__builtin_s390_vgfmab
V8UsV16UcV16UcV8Us
__builtin_s390_vgfmah
V4UiV8UsV8UsV4Ui
__builtin_s390_vgfmaf
V2ULLiV4UiV4UiV2ULLi
__builtin_s390_vgfmag
V16UcV2ULLiV2ULLiV16Uc
__builtin_s390_vmahb
V16ScV16ScV16ScV16Sc
__builtin_s390_vmahh
V8SsV8SsV8SsV8Ss
__builtin_s390_vmahf
V4SiV4SiV4SiV4Si
__builtin_s390_vmalhb
__builtin_s390_vmalhh
V8UsV8UsV8UsV8Us
__builtin_s390_vmalhf
V4UiV4UiV4UiV4Ui
__builtin_s390_vmaeb
V8SsV16ScV16ScV8Ss
__builtin_s390_vmaeh
V4SiV8SsV8SsV4Si
__builtin_s390_vmaef
V2SLLiV4SiV4SiV2SLLi
__builtin_s390_vmaleb
__builtin_s390_vmaleh
__builtin_s390_vmalef
__builtin_s390_vmaob
__builtin_s390_vmaoh
__builtin_s390_vmaof
__builtin_s390_vmalob
__builtin_s390_vmaloh
__builtin_s390_vmalof
__builtin_s390_vmhb
__builtin_s390_vmhh
__builtin_s390_vmhf
__builtin_s390_vmlhb
__builtin_s390_vmlhh
__builtin_s390_vmlhf
__builtin_s390_vmeb
V8SsV16ScV16Sc
__builtin_s390_vmeh
V4SiV8SsV8Ss
__builtin_s390_vmef
V2SLLiV4SiV4Si
__builtin_s390_vmleb
__builtin_s390_vmleh
__builtin_s390_vmlef
__builtin_s390_vmob
__builtin_s390_vmoh
__builtin_s390_vmof
__builtin_s390_vmlob
__builtin_s390_vmloh
__builtin_s390_vmlof
__builtin_s390_vpopctb
__builtin_s390_vpopcth
__builtin_s390_vpopctf
__builtin_s390_vpopctg
__builtin_s390_vsq
__builtin_s390_vsbcbiq
__builtin_s390_vsbiq
__builtin_s390_vscbib
__builtin_s390_vscbih
__builtin_s390_vscbif
__builtin_s390_vscbig
__builtin_s390_vscbiq
__builtin_s390_vsl
__builtin_s390_vslb
__builtin_s390_vsldb
V16UcV16UcV16UcIi
__builtin_s390_vsra
__builtin_s390_vsrab
__builtin_s390_vsrl
__builtin_s390_vsrlb
__builtin_s390_vsumb
V4UiV16UcV16Uc
__builtin_s390_vsumh
__builtin_s390_vsumgh
V2ULLiV8UsV8Us
__builtin_s390_vsumgf
__builtin_s390_vsumqf
V16UcV4UiV4Ui
__builtin_s390_vsumqg
__builtin_s390_vtm
iV16UcV16Uc
__builtin_s390_vfaeb
__builtin_s390_vfaebs
V16UcV16UcV16UcIii*
__builtin_s390_vfaeh
V8UsV8UsV8UsIi
__builtin_s390_vfaehs
V8UsV8UsV8UsIii*
__builtin_s390_vfaef
V4UiV4UiV4UiIi
__builtin_s390_vfaefs
V4UiV4UiV4UiIii*
__builtin_s390_vfaezb
__builtin_s390_vfaezbs
__builtin_s390_vfaezh
__builtin_s390_vfaezhs
__builtin_s390_vfaezf
__builtin_s390_vfaezfs
__builtin_s390_vfeeb
__builtin_s390_vfeebs
V16UcV16UcV16Uci*
__builtin_s390_vfeeh
__builtin_s390_vfeehs
V8UsV8UsV8Usi*
__builtin_s390_vfeef
__builtin_s390_vfeefs
V4UiV4UiV4Uii*
__builtin_s390_vfeezb
__builtin_s390_vfeezbs
__builtin_s390_vfeezh
__builtin_s390_vfeezhs
__builtin_s390_vfeezf
__builtin_s390_vfeezfs
__builtin_s390_vfeneb
__builtin_s390_vfenebs
__builtin_s390_vfeneh
__builtin_s390_vfenehs
__builtin_s390_vfenef
__builtin_s390_vfenefs
__builtin_s390_vfenezb
__builtin_s390_vfenezbs
__builtin_s390_vfenezh
__builtin_s390_vfenezhs
__builtin_s390_vfenezf
__builtin_s390_vfenezfs
__builtin_s390_vistrb
__builtin_s390_vistrbs
V16UcV16Uci*
__builtin_s390_vistrh
__builtin_s390_vistrhs
V8UsV8Usi*
__builtin_s390_vistrf
__builtin_s390_vistrfs
V4UiV4Uii*
__builtin_s390_vstrcb
__builtin_s390_vstrcbs
V16UcV16UcV16UcV16UcIii*
__builtin_s390_vstrch
__builtin_s390_vstrchs
V8UsV8UsV8UsV8UsIii*
__builtin_s390_vstrcf
__builtin_s390_vstrcfs
V4UiV4UiV4UiV4UiIii*
__builtin_s390_vstrczb
__builtin_s390_vstrczbs
__builtin_s390_vstrczh
__builtin_s390_vstrczhs
__builtin_s390_vstrczf
__builtin_s390_vstrczfs
__builtin_s390_vfcedbs
V2SLLiV2dV2di*
__builtin_s390_vfchdbs
__builtin_s390_vfchedbs
__builtin_s390_vfidb
V2dV2dIiIi
__builtin_s390_vflndb
__builtin_s390_vflpdb
__builtin_s390_vfmadb
__builtin_s390_vfmsdb
__builtin_s390_vfsqdb
__builtin_s390_vftcidb
V2SLLiV2dIii*
__builtin_s390_vlrl
vector-enhancements-1
__builtin_s390_vstrl
__builtin_s390_vbperm
V2ULLiV16UcV16Uc
__builtin_s390_vmslg
V16UcV2ULLiV2ULLiV16UcIi
__builtin_s390_vfmaxdb
__builtin_s390_vfmindb
__builtin_s390_vfnmadb
__builtin_s390_vfnmsdb
__builtin_s390_vfcesbs
V4SiV4fV4fi*
__builtin_s390_vfchsbs
__builtin_s390_vfchesbs
__builtin_s390_vfisb
V4fV4fIiIi
__builtin_s390_vfmaxsb
__builtin_s390_vfminsb
__builtin_s390_vflnsb
__builtin_s390_vflpsb
__builtin_s390_vfmasb
__builtin_s390_vfmssb
__builtin_s390_vfnmasb
__builtin_s390_vfnmssb
__builtin_s390_vfsqsb
__builtin_s390_vftcisb
V4SiV4fIii*
arch8
arch9
arch10
arch11
arch12
z196
zEC12
__s390__
__s390x__
__zarch__
__LONG_DOUBLE_128__
__ARCH__
__HTM__
__VX__
__VEC__
10302
__TCE__
__TCE_V1__
tcele
__TCELE__
__TCELE_V1__
__builtin_wasm_memory_size
__builtin_wasm_memory_grow
zIiz
__builtin_wasm_mem_size
__builtin_wasm_mem_grow
__builtin_wasm_current_memory
__builtin_wasm_grow_memory
__builtin_wasm_throw
__builtin_wasm_rethrow
simd128
nontrapping-fptoint
sign-ext
exception-handling
+simd128
-simd128
+nontrapping-fptoint
-nontrapping-fptoint
+sign-ext
-sign-ext
+exception-handling
-exception-handling
-target-feature
bleeding-edge
wasm
__wasm_simd128__
wasm32
wasm64
r10d
r10w
r10b
r11d
r11w
r11b
r12d
r12w
r12b
r13d
r13w
r13b
r14d
r14w
r14b
r15d
r15w
r15b
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
argp
flags
fpcr
fpsr
dirflag
frame
xmm0
xmm1
xmm2
xmm3
xmm4
xmm5
xmm6
xmm7
xmm8
xmm9
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
ymm0
ymm1
ymm2
ymm3
ymm4
ymm5
ymm6
ymm7
ymm8
ymm9
ymm10
ymm11
ymm12
ymm13
ymm14
ymm15
xmm16
xmm17
xmm18
xmm19
xmm20
xmm21
xmm22
xmm23
xmm24
xmm25
xmm26
xmm27
xmm28
xmm29
xmm30
xmm31
ymm16
ymm17
ymm18
ymm19
ymm20
ymm21
ymm22
ymm23
ymm24
ymm25
ymm26
ymm27
ymm28
ymm29
ymm30
ymm31
zmm0
zmm1
zmm2
zmm3
zmm4
zmm5
zmm6
zmm7
zmm8
zmm9
zmm10
zmm11
zmm12
zmm13
zmm14
zmm15
zmm16
zmm17
zmm18
zmm19
zmm20
zmm21
zmm22
zmm23
zmm24
zmm25
zmm26
zmm27
zmm28
zmm29
zmm30
zmm31
bnd0
bnd1
bnd2
bnd3
generic
pentium
atom
goldmont
sandybridge
ivybridge
haswell
broadwell
skylake
cannonlake
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd,+avx5124fmaps,+avx5124vnniw,+avx512vpopcntdq
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512ifma,+avx512cd,+avx512bw,+avx512vl,+avx512vbmi
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512cd,+avx512bw,+avx512vl,+clwb
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx,+mpx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+f16c,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+movbe
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3
+cmov,+mmx,+sse,+sse2,+sse3
+cmov,+mmx,+sse,+sse2
+cmov,+sse
+cmov,+mmx,+sse
+cmov,+mmx
+mmx
+cmov
bonnell
core2
corei7
amdfam10
silvermont
btver1
btver2
nehalem
westmere
barcelona
bdver1
bdver2
bdver3
bdver4
znver1
skylake-avx512
popcnt
sse2
sse3
ssse3
sse4.1
sse4.2
avx2
sse4a
fma4
avx512f
bmi2
pclmul
avx512vl
avx512bw
avx512dq
avx512cd
avx512er
avx512pf
avx512vbmi
avx512ifma
avx512vpopcntdq
i386
i486
winchip-c6
winchip2
i586
pentium-mmx
pentiumpro
i686
pentium2
pentium3
pentium3m
pentium-m
c3-2
yonah
pentium4
pentium4m
prescott
nocona
penryn
goldmont-plus
tremont
corei7-avx
core-avx-i
core-avx2
icelake-client
icelake-server
lakemont
k6-2
k6-3
athlon
athlon-tbird
athlon-xp
athlon-mp
athlon-4
athlon64
athlon-fx
opteron
k8-sse3
athlon64-sse3
opteron-sse3
x86-64
geode
avx512vnni
avx512bitalg
avx512vbmi2
cldemote
clflushopt
clwb
clzero
cx16
f16c
fsgsbase
fxsr
gfni
invpcid
lzcnt
movbe
movdiri
movdir64b
mwaitx
pconfig
prefetchwt1
prfchw
ptwrite
rdpid
rdrnd
rdseed
sahf
shstk
vaes
vpclmulqdq
wbnoinvd
waitpkg
x86_64
xsave
xsavec
xsaves
xsaveopt
+aes
+vaes
+pclmul
+vpclmulqdq
+lzcnt
+rdrnd
+fsgsbase
+bmi
+bmi2
+popcnt
+rtm
+prfchw
+rdseed
+adx
+tbm
+lwp
+fma
+f16c
+gfni
+avx512cd
+avx512vpopcntdq
+avx512vnni
+avx512er
+avx512pf
+avx512dq
+avx512bitalg
+avx512bw
+avx512vl
+avx512vbmi
+avx512vbmi2
+avx512ifma
+sha
+mpx
+shstk
+movbe
+sgx
+cx16
+fxsr
+xsave
+xsaveopt
+xsavec
+xsaves
+mwaitx
+pku
+clflushopt
+clwb
+wbnoinvd
+prefetchwt1
+clzero
+cldemote
+rdpid
+retpoline
+retpoline-external-thunk
+sahf
+waitpkg
+movdiri
+movdir64b
+pconfig
+ptwrite
+invpcid
3dnow
3dnowa
-popcnt
-prfchw
-mmx
{ax}
{bx}
{cx}
{dx}
{si}
{di}
{st}
{st(1)}
__amd64__
__amd64
__x86_64
__x86_64__
x86_64h
__x86_64h
__x86_64h__
__tune_i386__
__pentium_mmx__
__tune_pentium_mmx__
__tune_pentium3__
__tune_pentium2__
goldmont_plus
__tune_lakemont__
__k6_2__
__tune_k6_2__
__k6_3__
__tune_k6_3__
__athlon_sse__
__tune_athlon_sse__
__REGISTER_PREFIX__
__NO_MATH_INLINES
__AES__
__VAES__
__PCLMUL__
__VPCLMULQDQ__
__LZCNT__
__RDRND__
__FSGSBASE__
__BMI__
__BMI2__
__POPCNT__
__RTM__
__PRFCHW__
__RDSEED__
__ADX__
__TBM__
__LWP__
__MWAITX__
__XOP__
__FMA4__
__SSE4A__
__FMA__
__F16C__
__GFNI__
__AVX512CD__
__AVX512VPOPCNTDQ__
__AVX512VNNI__
__AVX512ER__
__AVX512PF__
__AVX512DQ__
__AVX512BITALG__
__AVX512BW__
__AVX512VL__
__AVX512VBMI__
__AVX512VBMI2__
__AVX512IFMA__
__SHA__
__FXSR__
__XSAVE__
__XSAVEOPT__
__XSAVEC__
__XSAVES__
__PKU__
__CLFLUSHOPT__
__CLWB__
__WBNOINVD__
__MPX__
__SHSTK__
__SGX__
__PREFETCHWT1__
__CLZERO__
__RDPID__
__CLDEMOTE__
__WAITPKG__
__MOVDIRI__
__MOVDIR64B__
__PCONFIG__
__PTWRITE__
__INVPCID__
__RETPOLINE__
__AVX512F__
__AVX2__
__AVX__
__SSE4_2__
__SSE4_1__
__SSSE3__
__SSE3__
__SSE2__
__SSE2_MATH__
__SSE__
__SSE_MATH__
_M_IX86_FP
__3dNOW_A__
__3dNOW__
__MMX__
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16
__SIZEOF_FLOAT128__
__builtin_cpu_init
__builtin_cpu_supports
bcC*
__builtin_cpu_is
__builtin_ia32_undef128
ncV:128:
__builtin_ia32_undef256
ncV:256:
__builtin_ia32_undef512
ncV:512:
__builtin_ia32_readeflags_u32
__builtin_ia32_writeeflags_u32
__builtin_ia32_femms
__builtin_ia32_pavgusb
V8cV8cV8c
ncV:64:
__builtin_ia32_pf2id
V2iV2f
__builtin_ia32_pfacc
V2fV2fV2f
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
V2iV2fV2f
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
V2fV2f
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqrt
__builtin_ia32_pfrsqit1
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
V2fV2i
__builtin_ia32_pmulhrw
V4sV4sV4s
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_pswapdsf
__builtin_ia32_pswapdsi
V2iV2i
_mm_prefetch
vcC*i
__builtin_ia32_emms
__builtin_ia32_paddb
__builtin_ia32_paddw
__builtin_ia32_paddd
V2iV2iV2i
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_psubb
__builtin_ia32_psubw
__builtin_ia32_psubd
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_pmulhw
__builtin_ia32_pmullw
__builtin_ia32_pmaddwd
V2iV4sV4s
__builtin_ia32_pand
V1LLiV1LLiV1LLi
__builtin_ia32_pandn
__builtin_ia32_por
__builtin_ia32_pxor
__builtin_ia32_psllw
V4sV4sV1LLi
__builtin_ia32_pslld
V2iV2iV1LLi
__builtin_ia32_psllq
__builtin_ia32_psrlw
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psraw
__builtin_ia32_psrad
__builtin_ia32_psllwi
V4sV4si
__builtin_ia32_pslldi
V2iV2ii
__builtin_ia32_psllqi
V1LLiV1LLii
__builtin_ia32_psrlwi
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrawi
__builtin_ia32_psradi
__builtin_ia32_packsswb
V8cV4sV4s
__builtin_ia32_packssdw
V4sV2iV2i
__builtin_ia32_packuswb
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhwd
__builtin_ia32_punpckhdq
__builtin_ia32_punpcklbw
__builtin_ia32_punpcklwd
__builtin_ia32_punpckldq
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtw
__builtin_ia32_pcmpgtd
__builtin_ia32_maskmovq
vV8cV8cc*
nV:64:
__builtin_ia32_movntq
vV1LLi*V1LLi
__builtin_ia32_vec_init_v2si
V2iii
__builtin_ia32_vec_init_v4hi
V4sssss
__builtin_ia32_vec_init_v8qi
V8ccccccccc
__builtin_ia32_vec_ext_v2si
iV2ii
__builtin_ia32_cvtpi2ps
V4fV4fV2i
mmx,sse
__builtin_ia32_cvtps2pi
V2iV4f
__builtin_ia32_cvttps2pi
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
iV8c
__builtin_ia32_pmulhuw
__builtin_ia32_psadbw
V4sV8cV8c
__builtin_ia32_pshufw
V4sV4sIc
__builtin_ia32_vec_ext_v4hi
iV4sIi
__builtin_ia32_vec_set_v4hi
V4sV4siIi
__builtin_ia32_cvtpd2pi
V2iV2d
mmx,sse2
__builtin_ia32_cvtpi2pd
V2dV2i
__builtin_ia32_cvttpd2pi
__builtin_ia32_paddq
__builtin_ia32_pmuludq
V1LLiV2iV2i
__builtin_ia32_psubq
__builtin_ia32_pabsb
V8cV8c
mmx,ssse3
__builtin_ia32_pabsd
__builtin_ia32_pabsw
V4sV4s
__builtin_ia32_palignr
V8cV8cV8cIc
__builtin_ia32_phaddd
__builtin_ia32_phaddsw
__builtin_ia32_phaddw
__builtin_ia32_phsubd
__builtin_ia32_phsubsw
__builtin_ia32_phsubw
__builtin_ia32_pmaddubsw
__builtin_ia32_pmulhrsw
__builtin_ia32_pshufb
__builtin_ia32_psignw
__builtin_ia32_psignb
__builtin_ia32_psignd
__builtin_ia32_comieq
iV4fV4f
__builtin_ia32_comilt
__builtin_ia32_comile
__builtin_ia32_comigt
__builtin_ia32_comige
__builtin_ia32_comineq
__builtin_ia32_ucomieq
__builtin_ia32_ucomilt
__builtin_ia32_ucomile
__builtin_ia32_ucomigt
__builtin_ia32_ucomige
__builtin_ia32_ucomineq
__builtin_ia32_comisdeq
iV2dV2d
__builtin_ia32_comisdlt
__builtin_ia32_comisdle
__builtin_ia32_comisdgt
__builtin_ia32_comisdge
__builtin_ia32_comisdneq
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdneq
__builtin_ia32_cmpeqps
V4fV4fV4f
__builtin_ia32_cmpltps
__builtin_ia32_cmpleps
__builtin_ia32_cmpunordps
__builtin_ia32_cmpneqps
__builtin_ia32_cmpnltps
__builtin_ia32_cmpnleps
__builtin_ia32_cmpordps
__builtin_ia32_cmpeqss
__builtin_ia32_cmpltss
__builtin_ia32_cmpless
__builtin_ia32_cmpunordss
__builtin_ia32_cmpneqss
__builtin_ia32_cmpnltss
__builtin_ia32_cmpnless
__builtin_ia32_cmpordss
__builtin_ia32_minps
__builtin_ia32_maxps
__builtin_ia32_minss
__builtin_ia32_maxss
__builtin_ia32_cmpeqpd
V2dV2dV2d
__builtin_ia32_cmpltpd
__builtin_ia32_cmplepd
__builtin_ia32_cmpunordpd
__builtin_ia32_cmpneqpd
__builtin_ia32_cmpnltpd
__builtin_ia32_cmpnlepd
__builtin_ia32_cmpordpd
__builtin_ia32_cmpeqsd
__builtin_ia32_cmpltsd
__builtin_ia32_cmplesd
__builtin_ia32_cmpunordsd
__builtin_ia32_cmpneqsd
__builtin_ia32_cmpnltsd
__builtin_ia32_cmpnlesd
__builtin_ia32_cmpordsd
__builtin_ia32_minpd
__builtin_ia32_maxpd
__builtin_ia32_minsd
__builtin_ia32_maxsd
__builtin_ia32_paddsb128
V16cV16cV16c
__builtin_ia32_paddsw128
V8sV8sV8s
__builtin_ia32_psubsb128
__builtin_ia32_psubsw128
__builtin_ia32_paddusb128
__builtin_ia32_paddusw128
__builtin_ia32_psubusb128
__builtin_ia32_psubusw128
__builtin_ia32_pmulhw128
__builtin_ia32_pmaxub128
__builtin_ia32_pmaxsw128
__builtin_ia32_pminub128
__builtin_ia32_pminsw128
__builtin_ia32_packsswb128
V16cV8sV8s
__builtin_ia32_packssdw128
V8sV4iV4i
__builtin_ia32_packuswb128
__builtin_ia32_pmulhuw128
__builtin_ia32_vec_ext_v4si
iV4iIi
__builtin_ia32_vec_ext_v4sf
fV4fIi
__builtin_ia32_vec_ext_v8hi
sV8sIi
__builtin_ia32_vec_set_v8hi
V8sV8ssIi
__builtin_ia32_addsubps
__builtin_ia32_addsubpd
__builtin_ia32_haddps
__builtin_ia32_haddpd
__builtin_ia32_hsubps
__builtin_ia32_hsubpd
__builtin_ia32_phaddw128
__builtin_ia32_phaddd128
V4iV4iV4i
__builtin_ia32_phaddsw128
__builtin_ia32_phsubw128
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw128
__builtin_ia32_pmaddubsw128
V8sV16cV16c
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb128
__builtin_ia32_psignb128
__builtin_ia32_psignw128
__builtin_ia32_psignd128
__builtin_ia32_pabsb128
V16cV16c
__builtin_ia32_pabsw128
V8sV8s
__builtin_ia32_pabsd128
V4iV4i
__builtin_ia32_ldmxcsr
_mm_setcsr
xmmintrin.h
__builtin_ia32_stmxcsr
_mm_getcsr
__builtin_ia32_cvtss2si
iV4f
__builtin_ia32_cvttss2si
__builtin_ia32_storehps
vV2i*V4f
nV:128:
__builtin_ia32_storelps
__builtin_ia32_movmskps
__builtin_ia32_sfence
_mm_sfence
__builtin_ia32_rcpps
V4fV4f
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sqrtps
__builtin_ia32_sqrtss
__builtin_ia32_shufps
V4fV4fV4fIi
__builtin_ia32_maskmovdqu
vV16cV16cc*
__builtin_ia32_movmskpd
iV2d
__builtin_ia32_pmovmskb128
iV16c
__builtin_ia32_movnti
vi*i
__builtin_ia32_pshufd
V4iV4iIi
__builtin_ia32_pshuflw
V8sV8sIi
__builtin_ia32_pshufhw
__builtin_ia32_psadbw128
V2LLiV16cV16c
__builtin_ia32_sqrtpd
V2dV2d
__builtin_ia32_sqrtsd
__builtin_ia32_shufpd
V2dV2dV2dIi
__builtin_ia32_cvtpd2dq
V2LLiV2d
__builtin_ia32_cvtpd2ps
V4fV2d
__builtin_ia32_cvttpd2dq
V4iV2d
__builtin_ia32_cvtsd2si
__builtin_ia32_cvttsd2si
__builtin_ia32_cvtsd2ss
V4fV4fV2d
__builtin_ia32_cvtps2dq
V4iV4f
__builtin_ia32_cvttps2dq
__builtin_ia32_clflush
vvC*
_mm_clflush
emmintrin.h
__builtin_ia32_lfence
_mm_lfence
__builtin_ia32_mfence
_mm_mfence
__builtin_ia32_pause
_mm_pause
__builtin_ia32_pmuludq128
V2LLiV4iV4i
__builtin_ia32_psraw128
__builtin_ia32_psrad128
__builtin_ia32_psrlw128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
V2LLiV2LLiV2LLi
__builtin_ia32_psllw128
__builtin_ia32_pslld128
__builtin_ia32_psllq128
__builtin_ia32_psllwi128
V8sV8si
__builtin_ia32_pslldi128
V4iV4ii
__builtin_ia32_psllqi128
V2LLiV2LLii
__builtin_ia32_psrlwi128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrawi128
__builtin_ia32_psradi128
__builtin_ia32_pmaddwd128
V4iV8sV8s
__builtin_ia32_pslldqi128_byteshift
V2LLiV2LLiIi
__builtin_ia32_psrldqi128_byteshift
__builtin_ia32_monitor
vv*UiUi
__builtin_ia32_mwait
__builtin_ia32_lddqu
V16ccC*
__builtin_ia32_palignr128
V16cV16cV16cIi
__builtin_ia32_insertps128
V4fV4fV4fIc
__builtin_ia32_pblendvb128
V16cV16cV16cV16c
__builtin_ia32_pblendw128
V8sV8sV8sIi
__builtin_ia32_blendpd
__builtin_ia32_blendps
__builtin_ia32_blendvpd
V2dV2dV2dV2d
__builtin_ia32_blendvps
V4fV4fV4fV4f
__builtin_ia32_packusdw128
__builtin_ia32_pmaxsb128
__builtin_ia32_pmaxsd128
__builtin_ia32_pmaxud128
__builtin_ia32_pmaxuw128
__builtin_ia32_pminsb128
__builtin_ia32_pminsd128
__builtin_ia32_pminud128
__builtin_ia32_pminuw128
__builtin_ia32_pmuldq128
__builtin_ia32_roundps
V4fV4fIi
__builtin_ia32_roundss
__builtin_ia32_roundsd
__builtin_ia32_roundpd
V2dV2dIi
__builtin_ia32_dpps
__builtin_ia32_dppd
V2dV2dV2dIc
__builtin_ia32_ptestz128
iV2LLiV2LLi
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_mpsadbw128
V16cV16cV16cIc
__builtin_ia32_phminposuw128
__builtin_ia32_vec_ext_v16qi
cV16cIi
__builtin_ia32_vec_set_v16qi
V16cV16ccIi
__builtin_ia32_vec_set_v4si
V4iV4iiIi
__builtin_ia32_pcmpistrm128
__builtin_ia32_pcmpistri128
iV16cV16cIc
__builtin_ia32_pcmpestrm128
V16cV16ciV16ciIc
__builtin_ia32_pcmpestri128
iV16ciV16ciIc
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_crc32qi
UiUiUc
__builtin_ia32_crc32hi
UiUiUs
__builtin_ia32_crc32si
UiUiUi
__builtin_ia32_extrqi
V2LLiV2LLiIcIc
__builtin_ia32_extrq
V2LLiV2LLiV16c
__builtin_ia32_insertqi
V2LLiV2LLiV2LLiIcIc
__builtin_ia32_insertq
__builtin_ia32_movntsd
vd*V2d
__builtin_ia32_movntss
vf*V4f
__builtin_ia32_aesenc128
__builtin_ia32_aesenclast128
__builtin_ia32_aesdec128
__builtin_ia32_aesdeclast128
__builtin_ia32_aesimc128
V2LLiV2LLi
__builtin_ia32_aeskeygenassist128
V2LLiV2LLiIc
__builtin_ia32_aesenc256
V4LLiV4LLiV4LLi
__builtin_ia32_aesenc512
V8LLiV8LLiV8LLi
avx512f,vaes
__builtin_ia32_aesenclast256
__builtin_ia32_aesenclast512
__builtin_ia32_aesdec256
__builtin_ia32_aesdec512
__builtin_ia32_aesdeclast256
__builtin_ia32_aesdeclast512
__builtin_ia32_vgf2p8affineinvqb_v16qi
__builtin_ia32_vgf2p8affineinvqb_v32qi
V32cV32cV32cIc
avx,gfni
__builtin_ia32_vgf2p8affineinvqb_v64qi
V64cV64cV64cIc
avx512bw,gfni
__builtin_ia32_vgf2p8affineqb_v16qi
__builtin_ia32_vgf2p8affineqb_v32qi
__builtin_ia32_vgf2p8affineqb_v64qi
__builtin_ia32_vgf2p8mulb_v16qi
__builtin_ia32_vgf2p8mulb_v32qi
V32cV32cV32c
__builtin_ia32_vgf2p8mulb_v64qi
V64cV64cV64c
__builtin_ia32_pclmulqdq128
V2LLiV2LLiV2LLiIc
__builtin_ia32_pclmulqdq256
V4LLiV4LLiV4LLiIc
__builtin_ia32_pclmulqdq512
V8LLiV8LLiV8LLiIc
avx512f,vpclmulqdq
__builtin_ia32_addsubpd256
V4dV4dV4d
__builtin_ia32_addsubps256
V8fV8fV8f
__builtin_ia32_haddpd256
__builtin_ia32_hsubps256
__builtin_ia32_hsubpd256
__builtin_ia32_haddps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_vpermilvarpd
V2dV2dV2LLi
__builtin_ia32_vpermilvarps
V4fV4fV4i
__builtin_ia32_vpermilvarpd256
V4dV4dV4LLi
__builtin_ia32_vpermilvarps256
V8fV8fV8i
__builtin_ia32_blendpd256
V4dV4dV4dIi
__builtin_ia32_blendps256
V8fV8fV8fIi
__builtin_ia32_blendvpd256
V4dV4dV4dV4d
__builtin_ia32_blendvps256
V8fV8fV8fV8f
__builtin_ia32_shufpd256
__builtin_ia32_shufps256
__builtin_ia32_dpps256
V8fV8fV8fIc
__builtin_ia32_cmppd
__builtin_ia32_cmppd256
V4dV4dV4dIc
__builtin_ia32_cmpps
__builtin_ia32_cmpps256
__builtin_ia32_cmpsd
__builtin_ia32_cmpss
__builtin_ia32_vextractf128_pd256
V2dV4dIi
__builtin_ia32_vextractf128_ps256
V4fV8fIi
__builtin_ia32_vextractf128_si256
V4iV8iIi
__builtin_ia32_cvtpd2ps256
V4fV4d
__builtin_ia32_cvtps2dq256
V8iV8f
__builtin_ia32_cvttpd2dq256
V4iV4d
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_vperm2f128_pd256
__builtin_ia32_vperm2f128_ps256
__builtin_ia32_vperm2f128_si256
V8iV8iV8iIi
__builtin_ia32_vpermilpd
__builtin_ia32_vpermilps
__builtin_ia32_vpermilpd256
V4dV4dIi
__builtin_ia32_vpermilps256
V8fV8fIi
__builtin_ia32_vinsertf128_pd256
V4dV4dV2dIi
__builtin_ia32_vinsertf128_ps256
V8fV8fV4fIi
__builtin_ia32_vinsertf128_si256
V8iV8iV4iIi
__builtin_ia32_sqrtpd256
V4dV4d
__builtin_ia32_sqrtps256
V8fV8f
__builtin_ia32_rsqrtps256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
__builtin_ia32_roundps256
__builtin_ia32_vtestzpd
__builtin_ia32_vtestcpd
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestzps
__builtin_ia32_vtestcps
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestzpd256
iV4dV4d
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestzps256
iV8fV8f
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcps256
__builtin_ia32_ptestz256
iV4LLiV4LLi
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_movmskpd256
iV4d
__builtin_ia32_movmskps256
iV8f
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_lddqu256
V32ccC*
nV:256:
__builtin_ia32_maskloadpd
V2dV2dC*V2LLi
__builtin_ia32_maskloadps
V4fV4fC*V4i
__builtin_ia32_maskloadpd256
V4dV4dC*V4LLi
__builtin_ia32_maskloadps256
V8fV8fC*V8i
__builtin_ia32_maskstorepd
vV2d*V2LLiV2d
__builtin_ia32_maskstoreps
vV4f*V4iV4f
__builtin_ia32_maskstorepd256
vV4d*V4LLiV4d
__builtin_ia32_maskstoreps256
vV8f*V8iV8f
__builtin_ia32_vec_ext_v32qi
cV32cIi
__builtin_ia32_vec_ext_v16hi
sV16sIi
__builtin_ia32_vec_ext_v8si
iV8iIi
__builtin_ia32_vec_set_v32qi
V32cV32ccIi
__builtin_ia32_vec_set_v16hi
V16sV16ssIi
__builtin_ia32_vec_set_v8si
V8iV8iiIi
__builtin_ia32_mpsadbw256
__builtin_ia32_pabsb256
V32cV32c
__builtin_ia32_pabsw256
V16sV16s
__builtin_ia32_pabsd256
V8iV8i
__builtin_ia32_packsswb256
V32cV16sV16s
__builtin_ia32_packssdw256
V16sV8iV8i
__builtin_ia32_packuswb256
__builtin_ia32_packusdw256
__builtin_ia32_paddsb256
__builtin_ia32_paddsw256
V16sV16sV16s
__builtin_ia32_psubsb256
__builtin_ia32_psubsw256
__builtin_ia32_paddusb256
__builtin_ia32_paddusw256
__builtin_ia32_psubusb256
__builtin_ia32_psubusw256
__builtin_ia32_palignr256
V32cV32cV32cIi
__builtin_ia32_pblendvb256
V32cV32cV32cV32c
__builtin_ia32_pblendw256
V16sV16sV16sIi
__builtin_ia32_phaddw256
__builtin_ia32_phaddd256
V8iV8iV8i
__builtin_ia32_phaddsw256
__builtin_ia32_phsubw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_pmaddubsw256
V16sV32cV32c
__builtin_ia32_pmaddwd256
V8iV16sV16s
__builtin_ia32_pmaxub256
__builtin_ia32_pmaxuw256
__builtin_ia32_pmaxud256
__builtin_ia32_pmaxsb256
__builtin_ia32_pmaxsw256
__builtin_ia32_pmaxsd256
__builtin_ia32_pminub256
__builtin_ia32_pminuw256
__builtin_ia32_pminud256
__builtin_ia32_pminsb256
__builtin_ia32_pminsw256
__builtin_ia32_pminsd256
__builtin_ia32_pmovmskb256
iV32c
__builtin_ia32_pmuldq256
V4LLiV8iV8i
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmuludq256
__builtin_ia32_psadbw256
V4LLiV32cV32c
__builtin_ia32_pshufb256
__builtin_ia32_pshufd256
V8iV8iIi
__builtin_ia32_pshuflw256
V16sV16sIi
__builtin_ia32_pshufhw256
__builtin_ia32_psignb256
__builtin_ia32_psignw256
__builtin_ia32_psignd256
__builtin_ia32_psllwi256
V16sV16si
__builtin_ia32_psllw256
V16sV16sV8s
__builtin_ia32_pslldqi256_byteshift
V4LLiV4LLiIi
__builtin_ia32_pslldi256
V8iV8ii
__builtin_ia32_pslld256
V8iV8iV4i
__builtin_ia32_psllqi256
V4LLiV4LLii
__builtin_ia32_psllq256
V4LLiV4LLiV2LLi
__builtin_ia32_psrawi256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrad256
__builtin_ia32_psrldqi256_byteshift
__builtin_ia32_psrlwi256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrld256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlq256
__builtin_ia32_pblendd128
V4iV4iV4iIi
__builtin_ia32_pblendd256
__builtin_ia32_permvarsi256
__builtin_ia32_permdf256
__builtin_ia32_permvarsf256
__builtin_ia32_permti256
V4LLiV4LLiV4LLiIi
__builtin_ia32_permdi256
__builtin_ia32_extract128i256
V2LLiV4LLiIi
__builtin_ia32_insert128i256
V4LLiV4LLiV2LLiIi
__builtin_ia32_maskloadd256
V8iV8iC*V8i
__builtin_ia32_maskloadq256
V4LLiV4LLiC*V4LLi
__builtin_ia32_maskloadd
V4iV4iC*V4i
__builtin_ia32_maskloadq
V2LLiV2LLiC*V2LLi
__builtin_ia32_maskstored256
vV8i*V8iV8i
__builtin_ia32_maskstoreq256
vV4LLi*V4LLiV4LLi
__builtin_ia32_maskstored
vV4i*V4iV4i
__builtin_ia32_maskstoreq
vV2LLi*V2LLiV2LLi
__builtin_ia32_psllv8si
__builtin_ia32_psllv4si
__builtin_ia32_psllv4di
__builtin_ia32_psllv2di
__builtin_ia32_psrav8si
__builtin_ia32_psrav4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv4di
__builtin_ia32_psrlv2di
__builtin_ia32_gatherd_pd
V2dV2ddC*V4iV2dIc
__builtin_ia32_gatherd_pd256
V4dV4ddC*V4iV4dIc
__builtin_ia32_gatherq_pd
V2dV2ddC*V2LLiV2dIc
__builtin_ia32_gatherq_pd256
V4dV4ddC*V4LLiV4dIc
__builtin_ia32_gatherd_ps
V4fV4ffC*V4iV4fIc
__builtin_ia32_gatherd_ps256
V8fV8ffC*V8iV8fIc
__builtin_ia32_gatherq_ps
V4fV4ffC*V2LLiV4fIc
__builtin_ia32_gatherq_ps256
V4fV4ffC*V4LLiV4fIc
__builtin_ia32_gatherd_q
V2LLiV2LLiLLiC*V4iV2LLiIc
__builtin_ia32_gatherd_q256
V4LLiV4LLiLLiC*V4iV4LLiIc
__builtin_ia32_gatherq_q
V2LLiV2LLiLLiC*V2LLiV2LLiIc
__builtin_ia32_gatherq_q256
V4LLiV4LLiLLiC*V4LLiV4LLiIc
__builtin_ia32_gatherd_d
V4iV4iiC*V4iV4iIc
__builtin_ia32_gatherd_d256
V8iV8iiC*V8iV8iIc
__builtin_ia32_gatherq_d
V4iV4iiC*V2LLiV4iIc
__builtin_ia32_gatherq_d256
V4iV4iiC*V4LLiV4iIc
__builtin_ia32_vcvtps2ph
V8sV4fIi
__builtin_ia32_vcvtps2ph256
V8sV8fIi
__builtin_ia32_vcvtph2ps
V4fV8s
__builtin_ia32_vcvtph2ps256
V8fV8s
__builtin_ia32_rdrand16_step
UiUs*
__builtin_ia32_rdrand32_step
UiUi*
__builtin_ia32_fxrstor
__builtin_ia32_fxsave
__builtin_ia32_xsave
vv*ULLi
__builtin_ia32_xrstor
__builtin_ia32_xsaveopt
__builtin_ia32_xrstors
__builtin_ia32_xsavec
__builtin_ia32_xsaves
__builtin_ia32_incsspd
__builtin_ia32_rdsspd
__builtin_ia32_saveprevssp
__builtin_ia32_rstorssp
__builtin_ia32_wrssd
vUiv*
__builtin_ia32_wrussd
__builtin_ia32_setssbsy
__builtin_ia32_clrssbsy
__builtin_ia32_clflushopt
__builtin_ia32_clwb
__builtin_ia32_wbinvd
__builtin_ia32_wbnoinvd
__builtin_ia32_addcarryx_u32
UcUcUiUiUi*
__builtin_ia32_addcarry_u32
__builtin_ia32_subborrow_u32
__builtin_ia32_rdseed16_step
__builtin_ia32_rdseed32_step
__builtin_ia32_bextr_u32
__builtin_ia32_bzhi_si
__builtin_ia32_pdep_si
__builtin_ia32_pext_si
__builtin_ia32_bextri_u32
UiUiIUi
__builtin_ia32_llwpcb
__builtin_ia32_slwpcb
__builtin_ia32_lwpins32
UcUiUiUi
__builtin_ia32_lwpval32
vUiUiUi
__builtin_ia32_sha1rnds4
V4iV4iV4iIc
__builtin_ia32_sha1nexte
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha256rnds2
V4iV4iV4iV4i
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_vfmaddps
fma|fma4
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddss3
__builtin_ia32_vfmaddsd3
__builtin_ia32_vfmaddss
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmaddps256
__builtin_ia32_vfmaddpd256
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmaddpd512_mask
V8dV8dV8dV8dUcIi
__builtin_ia32_vfmaddpd512_maskz
__builtin_ia32_vfmaddpd512_mask3
__builtin_ia32_vfmsubpd512_mask3
__builtin_ia32_vfmaddps512_mask
V16fV16fV16fV16fUsIi
__builtin_ia32_vfmaddps512_maskz
__builtin_ia32_vfmaddps512_mask3
__builtin_ia32_vfmsubps512_mask3
__builtin_ia32_vfmaddsubpd512_mask
__builtin_ia32_vfmaddsubpd512_maskz
__builtin_ia32_vfmaddsubpd512_mask3
__builtin_ia32_vfmsubaddpd512_mask3
__builtin_ia32_vfmaddsubps512_mask
__builtin_ia32_vfmaddsubps512_maskz
__builtin_ia32_vfmaddsubps512_mask3
__builtin_ia32_vfmsubaddps512_mask3
__builtin_ia32_vpmacssww
V8sV8sV8sV8s
__builtin_ia32_vpmacsww
__builtin_ia32_vpmacsswd
V4iV8sV8sV4i
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacssdql
V2LLiV4iV4iV2LLi
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vphaddbw
V8sV16c
__builtin_ia32_vphaddbd
V4iV16c
__builtin_ia32_vphaddbq
V2LLiV16c
__builtin_ia32_vphaddwd
V4iV8s
__builtin_ia32_vphaddwq
V2LLiV8s
__builtin_ia32_vphadddq
V2LLiV4i
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddudq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubwd
__builtin_ia32_vphsubdq
__builtin_ia32_vpperm
__builtin_ia32_vprotb
__builtin_ia32_vprotw
__builtin_ia32_vprotd
__builtin_ia32_vprotq
__builtin_ia32_vprotbi
V16cV16cIc
__builtin_ia32_vprotwi
V8sV8sIc
__builtin_ia32_vprotdi
V4iV4iIc
__builtin_ia32_vprotqi
__builtin_ia32_vpshlb
__builtin_ia32_vpshlw
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshab
__builtin_ia32_vpshaw
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomuw
V8sV8sV8sIc
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomb
__builtin_ia32_vpcomw
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpermil2pd
V2dV2dV2dV2LLiIc
__builtin_ia32_vpermil2pd256
V4dV4dV4dV4LLiIc
__builtin_ia32_vpermil2ps
V4fV4fV4fV4iIc
__builtin_ia32_vpermil2ps256
V8fV8fV8fV8iIc
__builtin_ia32_vfrczss
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczps
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczpd256
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_xabort
__builtin_ia32_xtest
__builtin_ia32_rdpmc
ULLii
__builtin_ia32_rdtsc
ULLi
__rdtsc
__builtin_ia32_rdtscp
ULLiUi*
__builtin_ia32_rdpid
__builtin_ia32_rdpkru
__builtin_ia32_wrpkru
__builtin_ia32_sqrtpd512
V8dV8dIi
__builtin_ia32_sqrtps512
V16fV16fIi
__builtin_ia32_rsqrt14sd_mask
V2dV2dV2dV2dUc
__builtin_ia32_rsqrt14ss_mask
V4fV4fV4fV4fUc
__builtin_ia32_rsqrt14pd512_mask
V8dV8dV8dUc
__builtin_ia32_rsqrt14ps512_mask
V16fV16fV16fUs
__builtin_ia32_rsqrt28sd_round_mask
V2dV2dV2dV2dUcIi
__builtin_ia32_rsqrt28ss_round_mask
V4fV4fV4fV4fUcIi
__builtin_ia32_rsqrt28pd_mask
V8dV8dV8dUcIi
__builtin_ia32_rsqrt28ps_mask
V16fV16fV16fUsIi
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_rcp28sd_round_mask
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_cvttps2dq512_mask
V16iV16fV16iUsIi
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttpd2dq512_mask
V8iV8dV8iUcIi
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cmpps512_mask
UsV16fV16fIiUsIi
__builtin_ia32_cmpps256_mask
UcV8fV8fIiUc
__builtin_ia32_cmpps128_mask
UcV4fV4fIiUc
__builtin_ia32_cmppd512_mask
UcV8dV8dIiUcIi
__builtin_ia32_cmppd256_mask
UcV4dV4dIiUc
__builtin_ia32_cmppd128_mask
UcV2dV2dIiUc
__builtin_ia32_rndscaleps_mask
V16fV16fIiV16fUsIi
__builtin_ia32_rndscalepd_mask
V8dV8dIiV8dUcIi
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_minps512
V16fV16fV16fIi
__builtin_ia32_minpd512
V8dV8dV8dIi
__builtin_ia32_maxps512
__builtin_ia32_maxpd512
__builtin_ia32_cvtdq2ps512_mask
V16fV16iV16fUsIi
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_cvtpd2ps512_mask
V8fV8dV8fUcIi
__builtin_ia32_vcvtps2ph512_mask
V16sV16fIiV16sUs
__builtin_ia32_vcvtph2ps512_mask
V16fV16sV16fUsIi
__builtin_ia32_pabsd512
V16iV16i
__builtin_ia32_pabsq512
V8LLiV8LLi
__builtin_ia32_pmaxsd512
V16iV16iV16i
__builtin_ia32_pmaxsq512
__builtin_ia32_pmaxud512
__builtin_ia32_pmaxuq512
__builtin_ia32_pminsd512
__builtin_ia32_pminsq512
__builtin_ia32_pminud512
__builtin_ia32_pminuq512
__builtin_ia32_pmuldq512
V8LLiV16iV16i
__builtin_ia32_pmuludq512
__builtin_ia32_loaddqusi512_mask
V16iiC*V16iUs
nV:512:
__builtin_ia32_loaddqudi512_mask
V8LLiLLiC*V8LLiUc
__builtin_ia32_loadups512_mask
V16ffC*V16fUs
__builtin_ia32_loadaps512_mask
V16fV16fC*V16fUs
__builtin_ia32_loadupd512_mask
V8ddC*V8dUc
__builtin_ia32_loadapd512_mask
V8dV8dC*V8dUc
__builtin_ia32_storedqudi512_mask
vLLi*V8LLiUc
__builtin_ia32_storedqusi512_mask
vi*V16iUs
__builtin_ia32_storeupd512_mask
vd*V8dUc
__builtin_ia32_storeapd512_mask
vV8d*V8dUc
__builtin_ia32_storeups512_mask
vf*V16fUs
__builtin_ia32_storeaps512_mask
vV16f*V16fUs
__builtin_ia32_alignq512
V8LLiV8LLiV8LLiIi
__builtin_ia32_alignd512
V16iV16iV16iIi
__builtin_ia32_alignd128
__builtin_ia32_alignd256
__builtin_ia32_alignq128
V2LLiV2LLiV2LLiIi
__builtin_ia32_alignq256
__builtin_ia32_extractf64x4_mask
V4dV8dIiV4dUc
__builtin_ia32_extractf32x4_mask
V4fV16fIiV4fUc
__builtin_ia32_vpdpbusd128
avx512vl,avx512vnni
__builtin_ia32_vpdpbusd256
V8iV8iV8iV8i
__builtin_ia32_vpdpbusd512
V16iV16iV16iV16i
__builtin_ia32_vpdpbusds128
__builtin_ia32_vpdpbusds256
__builtin_ia32_vpdpbusds512
__builtin_ia32_vpdpwssd128
__builtin_ia32_vpdpwssd256
__builtin_ia32_vpdpwssd512
__builtin_ia32_vpdpwssds128
__builtin_ia32_vpdpwssds256
__builtin_ia32_vpdpwssds512
__builtin_ia32_gather3div2df
V2dV2ddC*V2LLiUcIi
__builtin_ia32_gather3div2di
V2LLiV2LLiLLiC*V2LLiUcIi
__builtin_ia32_gather3div4df
V4dV4ddC*V4LLiUcIi
__builtin_ia32_gather3div4di
V4LLiV4LLiLLiC*V4LLiUcIi
__builtin_ia32_gather3div4sf
V4fV4ffC*V2LLiUcIi
__builtin_ia32_gather3div4si
V4iV4iiC*V2LLiUcIi
__builtin_ia32_gather3div8sf
V4fV4ffC*V4LLiUcIi
__builtin_ia32_gather3div8si
V4iV4iiC*V4LLiUcIi
__builtin_ia32_gather3siv2df
V2dV2ddC*V4iUcIi
__builtin_ia32_gather3siv2di
V2LLiV2LLiLLiC*V4iUcIi
__builtin_ia32_gather3siv4df
V4dV4ddC*V4iUcIi
__builtin_ia32_gather3siv4di
V4LLiV4LLiLLiC*V4iUcIi
__builtin_ia32_gather3siv4sf
V4fV4ffC*V4iUcIi
__builtin_ia32_gather3siv4si
V4iV4iiC*V4iUcIi
__builtin_ia32_gather3siv8sf
V8fV8ffC*V8iUcIi
__builtin_ia32_gather3siv8si
V8iV8iiC*V8iUcIi
__builtin_ia32_gathersiv8df
V8dV8ddC*V8iUcIi
__builtin_ia32_gathersiv16sf
V16fV16ffC*V16fUsIi
__builtin_ia32_gatherdiv8df
V8dV8ddC*V8LLiUcIi
__builtin_ia32_gatherdiv16sf
V8fV8ffC*V8LLiUcIi
__builtin_ia32_gathersiv8di
V8LLiV8LLiLLiC*V8iUcIi
__builtin_ia32_gathersiv16si
V16iV16iiC*V16iUsIi
__builtin_ia32_gatherdiv8di
V8LLiV8LLiLLiC*V8LLiUcIi
__builtin_ia32_gatherdiv16si
V8iV8iiC*V8LLiUcIi
__builtin_ia32_scattersiv8df
vd*UcV8iV8dIi
__builtin_ia32_scattersiv16sf
vf*UsV16iV16fIi
__builtin_ia32_scatterdiv8df
vd*UcV8LLiV8dIi
__builtin_ia32_scatterdiv16sf
vf*UcV8LLiV8fIi
__builtin_ia32_scattersiv8di
vLLi*UcV8iV8LLiIi
__builtin_ia32_scattersiv16si
vi*UsV16iV16iIi
__builtin_ia32_scatterdiv8di
vLLi*UcV8LLiV8LLiIi
__builtin_ia32_scatterdiv16si
vi*UcV8LLiV8iIi
__builtin_ia32_gatherpfdpd
vUcV8iLLiC*IiIi
__builtin_ia32_gatherpfdps
vUsV16iiC*IiIi
__builtin_ia32_gatherpfqpd
vUcV8LLiLLiC*IiIi
__builtin_ia32_gatherpfqps
vUcV8LLiiC*IiIi
__builtin_ia32_scatterpfdpd
vUcV8iLLi*IiIi
__builtin_ia32_scatterpfdps
vUsV16ii*IiIi
__builtin_ia32_scatterpfqpd
vUcV8LLiLLi*IiIi
__builtin_ia32_scatterpfqps
vUcV8LLii*IiIi
__builtin_ia32_knothi
UsUs
__builtin_ia32_cmpb128_mask
UsV16cV16cIiUs
avx512vl,avx512bw
__builtin_ia32_cmpd128_mask
UcV4iV4iIiUc
__builtin_ia32_cmpq128_mask
UcV2LLiV2LLiIiUc
__builtin_ia32_cmpw128_mask
UcV8sV8sIiUc
__builtin_ia32_cmpb256_mask
UiV32cV32cIiUi
__builtin_ia32_cmpd256_mask
UcV8iV8iIiUc
__builtin_ia32_cmpq256_mask
UcV4LLiV4LLiIiUc
__builtin_ia32_cmpw256_mask
UsV16sV16sIiUs
__builtin_ia32_cmpb512_mask
ULLiV64cV64cIiULLi
__builtin_ia32_cmpd512_mask
UsV16iV16iIiUs
__builtin_ia32_cmpq512_mask
UcV8LLiV8LLiIiUc
__builtin_ia32_cmpw512_mask
UiV32sV32sIiUi
__builtin_ia32_ucmpb128_mask
__builtin_ia32_ucmpd128_mask
__builtin_ia32_ucmpq128_mask
__builtin_ia32_ucmpw128_mask
__builtin_ia32_ucmpb256_mask
__builtin_ia32_ucmpd256_mask
__builtin_ia32_ucmpq256_mask
__builtin_ia32_ucmpw256_mask
__builtin_ia32_ucmpb512_mask
__builtin_ia32_ucmpd512_mask
__builtin_ia32_ucmpq512_mask
__builtin_ia32_ucmpw512_mask
__builtin_ia32_pabsb512
V64cV64c
__builtin_ia32_pabsw512
V32sV32s
__builtin_ia32_packssdw512
V32sV16iV16i
__builtin_ia32_packsswb512
V64cV32sV32s
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
__builtin_ia32_paddsb512_mask
V64cV64cV64cV64cULLi
__builtin_ia32_paddsw512_mask
V32sV32sV32sV32sUi
__builtin_ia32_paddusb512_mask
__builtin_ia32_paddusw512_mask
__builtin_ia32_pmaxsb512
__builtin_ia32_pmaxsw512
V32sV32sV32s
__builtin_ia32_pmaxub512
__builtin_ia32_pmaxuw512
__builtin_ia32_pminsb512
__builtin_ia32_pminsw512
__builtin_ia32_pminub512
__builtin_ia32_pminuw512
__builtin_ia32_pshufb512
__builtin_ia32_psubsb512_mask
__builtin_ia32_psubsw512_mask
__builtin_ia32_psubusb512_mask
__builtin_ia32_psubusw512_mask
__builtin_ia32_vpconflictdi_128_mask
V2LLiV2LLiV2LLiUc
avx512cd,avx512vl
__builtin_ia32_vpconflictdi_256_mask
V4LLiV4LLiV4LLiUc
__builtin_ia32_vpconflictsi_128_mask
V4iV4iV4iUc
__builtin_ia32_vpconflictsi_256_mask
V8iV8iV8iUc
__builtin_ia32_vpconflictdi_512_mask
V8LLiV8LLiV8LLiUc
__builtin_ia32_vpconflictsi_512_mask
V16iV16iV16iUs
__builtin_ia32_vplzcntd_512
__builtin_ia32_vplzcntq_512
__builtin_ia32_vpopcntd_128
avx512vpopcntdq,avx512vl
__builtin_ia32_vpopcntq_128
__builtin_ia32_vpopcntd_256
__builtin_ia32_vpopcntq_256
V4LLiV4LLi
__builtin_ia32_vpopcntd_512
__builtin_ia32_vpopcntq_512
__builtin_ia32_vpopcntb_128
avx512vl,avx512bitalg
__builtin_ia32_vpopcntw_128
__builtin_ia32_vpopcntb_256
__builtin_ia32_vpopcntw_256
__builtin_ia32_vpopcntb_512
__builtin_ia32_vpopcntw_512
__builtin_ia32_vpshufbitqmb128_mask
UsV16cV16cUs
__builtin_ia32_vpshufbitqmb256_mask
UiV32cV32cUi
__builtin_ia32_vpshufbitqmb512_mask
ULLiV64cV64cULLi
__builtin_ia32_pmulhrsw512
__builtin_ia32_pmulhuw512
__builtin_ia32_pmulhw512
__builtin_ia32_addpd512
__builtin_ia32_addps512
__builtin_ia32_divpd512
__builtin_ia32_divps512
__builtin_ia32_mulpd512
__builtin_ia32_mulps512
__builtin_ia32_subpd512
__builtin_ia32_subps512
__builtin_ia32_pmaddubsw512
V32sV64cV64c
__builtin_ia32_pmaddwd512
V16iV32sV32s
__builtin_ia32_addss_round_mask
__builtin_ia32_divss_round_mask
__builtin_ia32_mulss_round_mask
__builtin_ia32_subss_round_mask
__builtin_ia32_maxss_round_mask
__builtin_ia32_minss_round_mask
__builtin_ia32_addsd_round_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_mulsd_round_mask
__builtin_ia32_subsd_round_mask
__builtin_ia32_maxsd_round_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_compressdf128_mask
V2dV2dV2dUc
__builtin_ia32_compressdf256_mask
V4dV4dV4dUc
__builtin_ia32_compressdi128_mask
__builtin_ia32_compressdi256_mask
__builtin_ia32_compresshi128_mask
V8sV8sV8sUc
avx512vl,avx512vbmi2
__builtin_ia32_compresshi256_mask
V16sV16sV16sUs
__builtin_ia32_compressqi128_mask
V16cV16cV16cUs
__builtin_ia32_compressqi256_mask
V32cV32cV32cUi
__builtin_ia32_compresssf128_mask
V4fV4fV4fUc
__builtin_ia32_compresssf256_mask
V8fV8fV8fUc
__builtin_ia32_compresssi128_mask
__builtin_ia32_compresssi256_mask
__builtin_ia32_compressstoredf128_mask
vV2d*V2dUc
__builtin_ia32_compressstoredf256_mask
vV4d*V4dUc
__builtin_ia32_compressstoredi128_mask
vV2LLi*V2LLiUc
__builtin_ia32_compressstoredi256_mask
vV4LLi*V4LLiUc
__builtin_ia32_compressstorehi128_mask
vV8s*V8sUc
__builtin_ia32_compressstorehi256_mask
vV16s*V16sUs
__builtin_ia32_compressstoreqi128_mask
vV16c*V16cUs
__builtin_ia32_compressstoreqi256_mask
vV32c*V32cUi
__builtin_ia32_compressstoresf128_mask
vV4f*V4fUc
__builtin_ia32_compressstoresf256_mask
vV8f*V8fUc
__builtin_ia32_compressstoresi128_mask
vV4i*V4iUc
__builtin_ia32_compressstoresi256_mask
vV8i*V8iUc
__builtin_ia32_cvtpd2dq128_mask
V4iV2dV4iUc
__builtin_ia32_cvtpd2ps_mask
V4fV2dV4fUc
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvtpd2udq256_mask
V4iV4dV4iUc
__builtin_ia32_cvtps2udq128_mask
V4iV4fV4iUc
__builtin_ia32_cvtps2udq256_mask
V8iV8fV8iUc
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttpd2udq256_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_expanddf128_mask
__builtin_ia32_expanddf256_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expandhi128_mask
__builtin_ia32_expandhi256_mask
__builtin_ia32_expandqi128_mask
__builtin_ia32_expandqi256_mask
__builtin_ia32_expandloaddf128_mask
V2dV2dC*V2dUc
__builtin_ia32_expandloaddf256_mask
V4dV4dC*V4dUc
__builtin_ia32_expandloaddi128_mask
V4iV2LLiC*V2LLiUc
__builtin_ia32_expandloaddi256_mask
V4LLiV4LLiC*V4LLiUc
__builtin_ia32_expandloadhi128_mask
V8sV8sC*V8sUc
__builtin_ia32_expandloadhi256_mask
V16sV16sC*V16sUs
__builtin_ia32_expandloadqi128_mask
V16cV16cC*V16cUs
__builtin_ia32_expandloadqi256_mask
V32cV32cC*V32cUi
__builtin_ia32_expandloadsf128_mask
V4fV4fC*V4fUc
__builtin_ia32_expandloadsf256_mask
V8fV8fC*V8fUc
__builtin_ia32_expandloadsi128_mask
V4iV4iC*V4iUc
__builtin_ia32_expandloadsi256_mask
V8iV8iC*V8iUc
__builtin_ia32_expandsf128_mask
__builtin_ia32_expandsf256_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_getexppd128_mask
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_pabsq128
__builtin_ia32_pabsq256
__builtin_ia32_pmaxsq128
__builtin_ia32_pmaxsq256
__builtin_ia32_pmaxuq128
__builtin_ia32_pmaxuq256
__builtin_ia32_pminsq128
__builtin_ia32_pminsq256
__builtin_ia32_pminuq128
__builtin_ia32_pminuq256
__builtin_ia32_rndscalepd_128_mask
V2dV2dIiV2dUc
__builtin_ia32_rndscalepd_256_mask
V4dV4dIiV4dUc
__builtin_ia32_rndscaleps_128_mask
V4fV4fIiV4fUc
__builtin_ia32_rndscaleps_256_mask
V8fV8fIiV8fUc
__builtin_ia32_scalefpd128_mask
__builtin_ia32_scalefpd256_mask
V4dV4dV4dV4dUc
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
V8fV8fV8fV8fUc
__builtin_ia32_scatterdiv2df
vd*UcV2LLiV2dIi
__builtin_ia32_scatterdiv2di
vLLi*UcV2LLiV2LLiIi
__builtin_ia32_scatterdiv4df
vd*UcV4LLiV4dIi
__builtin_ia32_scatterdiv4di
vLLi*UcV4LLiV4LLiIi
__builtin_ia32_scatterdiv4sf
vf*UcV2LLiV4fIi
__builtin_ia32_scatterdiv4si
vi*UcV2LLiV4iIi
__builtin_ia32_scatterdiv8sf
vf*UcV4LLiV4fIi
__builtin_ia32_scatterdiv8si
vi*UcV4LLiV4iIi
__builtin_ia32_scattersiv2df
vd*UcV4iV2dIi
__builtin_ia32_scattersiv2di
vLLi*UcV4iV2LLiIi
__builtin_ia32_scattersiv4df
vd*UcV4iV4dIi
__builtin_ia32_scattersiv4di
vLLi*UcV4iV4LLiIi
__builtin_ia32_scattersiv4sf
vf*UcV4iV4fIi
__builtin_ia32_scattersiv4si
vi*UcV4iV4iIi
__builtin_ia32_scattersiv8sf
vf*UcV8iV8fIi
__builtin_ia32_scattersiv8si
vi*UcV8iV8iIi
__builtin_ia32_vpermi2vard128
__builtin_ia32_vpermi2vard256
__builtin_ia32_vpermi2vard512
__builtin_ia32_vpermi2varpd128
V2dV2dV2LLiV2d
__builtin_ia32_vpermi2varpd256
V4dV4dV4LLiV4d
__builtin_ia32_vpermi2varpd512
V8dV8dV8LLiV8d
__builtin_ia32_vpermi2varps128
V4fV4fV4iV4f
__builtin_ia32_vpermi2varps256
V8fV8fV8iV8f
__builtin_ia32_vpermi2varps512
V16fV16fV16iV16f
__builtin_ia32_vpermi2varq128
V2LLiV2LLiV2LLiV2LLi
__builtin_ia32_vpermi2varq256
V4LLiV4LLiV4LLiV4LLi
__builtin_ia32_vpermi2varq512
V8LLiV8LLiV8LLiV8LLi
__builtin_ia32_vpermi2varqi128
avx512vbmi,avx512vl
__builtin_ia32_vpermi2varqi256
__builtin_ia32_vpermi2varqi512
V64cV64cV64cV64c
__builtin_ia32_vpermi2varhi128
__builtin_ia32_vpermi2varhi256
V16sV16sV16sV16s
__builtin_ia32_vpermi2varhi512
V32sV32sV32sV32s
__builtin_ia32_vpshldd128
__builtin_ia32_vpshldd256
__builtin_ia32_vpshldd512
__builtin_ia32_vpshldq128
__builtin_ia32_vpshldq256
__builtin_ia32_vpshldq512
__builtin_ia32_vpshldw128
__builtin_ia32_vpshldw256
__builtin_ia32_vpshldw512
V32sV32sV32sIi
__builtin_ia32_vpshldvd128_mask
V4iV4iV4iV4iUc
__builtin_ia32_vpshldvd256_mask
V8iV8iV8iV8iUc
__builtin_ia32_vpshldvd512_mask
V16iV16iV16iV16iUs
__builtin_ia32_vpshldvq128_mask
V2LLiV2LLiV2LLiV2LLiUc
__builtin_ia32_vpshldvq256_mask
V4LLiV4LLiV4LLiV4LLiUc
__builtin_ia32_vpshldvq512_mask
V8LLiV8LLiV8LLiV8LLiUc
__builtin_ia32_vpshldvw128_mask
V8sV8sV8sV8sUc
__builtin_ia32_vpshldvw256_mask
V16sV16sV16sV16sUs
__builtin_ia32_vpshldvw512_mask
__builtin_ia32_vpshldvd128_maskz
__builtin_ia32_vpshldvd256_maskz
__builtin_ia32_vpshldvd512_maskz
__builtin_ia32_vpshldvq128_maskz
__builtin_ia32_vpshldvq256_maskz
__builtin_ia32_vpshldvq512_maskz
__builtin_ia32_vpshldvw128_maskz
__builtin_ia32_vpshldvw256_maskz
__builtin_ia32_vpshldvw512_maskz
__builtin_ia32_vpshrdvd128_mask
__builtin_ia32_vpshrdvd256_mask
__builtin_ia32_vpshrdvd512_mask
__builtin_ia32_vpshrdvq128_mask
__builtin_ia32_vpshrdvq256_mask
__builtin_ia32_vpshrdvq512_mask
__builtin_ia32_vpshrdvw128_mask
__builtin_ia32_vpshrdvw256_mask
__builtin_ia32_vpshrdvw512_mask
__builtin_ia32_vpshrdvd128_maskz
__builtin_ia32_vpshrdvd256_maskz
__builtin_ia32_vpshrdvd512_maskz
__builtin_ia32_vpshrdvq128_maskz
__builtin_ia32_vpshrdvq256_maskz
__builtin_ia32_vpshrdvq512_maskz
__builtin_ia32_vpshrdvw128_maskz
__builtin_ia32_vpshrdvw256_maskz
__builtin_ia32_vpshrdvw512_maskz
__builtin_ia32_vpshrdd128
__builtin_ia32_vpshrdd256
__builtin_ia32_vpshrdd512
__builtin_ia32_vpshrdq128
__builtin_ia32_vpshrdq256
__builtin_ia32_vpshrdq512
__builtin_ia32_vpshrdw128
__builtin_ia32_vpshrdw256
__builtin_ia32_vpshrdw512
__builtin_ia32_pmovswb512_mask
V32cV32sV32cUi
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_pmovwb512_mask
__builtin_ia32_cvtpd2qq128_mask
V2LLiV2dV2LLiUc
avx512vl,avx512dq
__builtin_ia32_cvtpd2qq256_mask
V4LLiV4dV4LLiUc
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
__builtin_ia32_cvtps2qq128_mask
V2LLiV4fV2LLiUc
__builtin_ia32_cvtps2qq256_mask
V4LLiV4fV4LLiUc
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtqq2ps128_mask
V4fV2LLiV4fUc
__builtin_ia32_cvtqq2ps256_mask
V4fV4LLiV4fUc
__builtin_ia32_cvttpd2qq128_mask
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_cvtuqq2ps256_mask
__builtin_ia32_rangepd128_mask
V2dV2dV2dIiV2dUc
__builtin_ia32_rangepd256_mask
V4dV4dV4dIiV4dUc
__builtin_ia32_rangeps128_mask
V4fV4fV4fIiV4fUc
__builtin_ia32_rangeps256_mask
V8fV8fV8fIiV8fUc
__builtin_ia32_rangesd128_round_mask
V2dV2dV2dV2dUcIiIi
__builtin_ia32_rangess128_round_mask
V4fV4fV4fV4fUcIiIi
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_pmovswb128_mask
V16cV8sV16cUc
__builtin_ia32_pmovswb256_mask
V16cV16sV16cUs
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovuswb256_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_cvtpd2qq512_mask
V8LLiV8dV8LLiUcIi
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2qq512_mask
V8LLiV8fV8LLiUcIi
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvtqq2pd512_mask
V8dV8LLiV8dUcIi
__builtin_ia32_cvtqq2ps512_mask
V8fV8LLiV8fUcIi
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2uqq512_mask
__builtin_ia32_cvtuqq2pd512_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_rangepd512_mask
V8dV8dV8dIiV8dUcIi
__builtin_ia32_rangeps512_mask
V16fV16fV16fIiV16fUsIi
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_prold512
V16iV16iIi
__builtin_ia32_prolq512
V8LLiV8LLiIi
__builtin_ia32_prold128
__builtin_ia32_prold256
__builtin_ia32_prolq128
__builtin_ia32_prolq256
__builtin_ia32_prolvd512
__builtin_ia32_prolvq512
__builtin_ia32_prord512
__builtin_ia32_prorq512
__builtin_ia32_prolvd128
__builtin_ia32_prolvd256
__builtin_ia32_prolvq128
__builtin_ia32_prolvq256
__builtin_ia32_prord128
__builtin_ia32_prord256
__builtin_ia32_prorq128
__builtin_ia32_prorq256
__builtin_ia32_prorvd512
__builtin_ia32_prorvq512
__builtin_ia32_prorvd128
__builtin_ia32_prorvd256
__builtin_ia32_prorvq128
__builtin_ia32_prorvq256
__builtin_ia32_pshufhw512
V32sV32sIi
__builtin_ia32_pshuflw512
__builtin_ia32_psllv32hi
__builtin_ia32_psllw512
V32sV32sV8s
__builtin_ia32_psllwi512
V32sV32si
__builtin_ia32_psllv16hi
avx512bw,avx512vl
__builtin_ia32_psllv8hi
__builtin_ia32_pslldi512
V16iV16ii
__builtin_ia32_psllqi512
V8LLiV8LLii
__builtin_ia32_psrlv32hi
__builtin_ia32_psrlv16hi
__builtin_ia32_psrlv8hi
__builtin_ia32_psrldi512
__builtin_ia32_psrlqi512
__builtin_ia32_psrav32hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav8hi
__builtin_ia32_psravq128
__builtin_ia32_psravq256
__builtin_ia32_psraw512
__builtin_ia32_psrawi512
__builtin_ia32_psrlw512
__builtin_ia32_psrlwi512
__builtin_ia32_pslldqi512_byteshift
__builtin_ia32_psrldqi512_byteshift
__builtin_ia32_movdqa32load128_mask
V4iV4i*V4iUc
__builtin_ia32_movdqa32load256_mask
V8iV8i*V8iUc
__builtin_ia32_movdqa32load512_mask
V16iV16iC*V16iUs
__builtin_ia32_movdqa32store512_mask
vV16i*V16iUs
__builtin_ia32_movdqa64load512_mask
V8LLiV8LLiC*V8LLiUc
__builtin_ia32_movdqa64store512_mask
vV8LLi*V8LLiUc
__builtin_ia32_movdqa32store128_mask
__builtin_ia32_movdqa32store256_mask
__builtin_ia32_movdqa64load128_mask
V2LLiV2LLiC*V2LLiUc
__builtin_ia32_movdqa64load256_mask
__builtin_ia32_movdqa64store128_mask
__builtin_ia32_movdqa64store256_mask
__builtin_ia32_vpmadd52huq512
__builtin_ia32_vpmadd52luq512
__builtin_ia32_vpmadd52huq128
avx512ifma,avx512vl
__builtin_ia32_vpmadd52huq256
__builtin_ia32_vpmadd52luq128
__builtin_ia32_vpmadd52luq256
__builtin_ia32_vcomisd
iV2dV2dIiIi
__builtin_ia32_vcomiss
iV4fV4fIiIi
__builtin_ia32_kunpckdi
ULLiULLiULLi
__builtin_ia32_kunpcksi
__builtin_ia32_loaddquhi512_mask
V32sV32s*V32sUi
__builtin_ia32_loaddquqi512_mask
V64cV64c*V64cULLi
__builtin_ia32_fixupimmpd512_mask
V8dV8dV8dV8LLiIiUcIi
__builtin_ia32_fixupimmpd512_maskz
__builtin_ia32_fixupimmps512_mask
V16fV16fV16fV16iIiUsIi
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmsd_mask
V2dV2dV2dV2LLiIiUcIi
__builtin_ia32_fixupimmsd_maskz
__builtin_ia32_fixupimmss_mask
V4fV4fV4fV4iIiUcIi
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_getexpsd128_round_mask
__builtin_ia32_getexpss128_round_mask
__builtin_ia32_getmantsd_round_mask
V2dV2dV2dIiV2dUcIi
__builtin_ia32_getmantss_round_mask
V4fV4fV4fIiV4fUcIi
__builtin_ia32_loaddquhi128_mask
V8sV8s*V8sUc
__builtin_ia32_loaddquhi256_mask
V16sV16s*V16sUs
__builtin_ia32_loaddquqi128_mask
V16cV16c*V16cUs
__builtin_ia32_loaddquqi256_mask
V32cV32c*V32cUi
__builtin_ia32_fixupimmpd128_mask
V2dV2dV2dV2LLiIiUc
__builtin_ia32_fixupimmpd128_maskz
__builtin_ia32_fixupimmpd256_mask
V4dV4dV4dV4LLiIiUc
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmps128_mask
V4fV4fV4fV4iIiUc
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_fixupimmps256_mask
V8fV8fV8fV8iIiUc
__builtin_ia32_fixupimmps256_maskz
__builtin_ia32_loadapd128_mask
V2dV2d*V2dUc
__builtin_ia32_loadsd128_mask
__builtin_ia32_loadapd256_mask
V4dV4d*V4dUc
__builtin_ia32_loadaps128_mask
V4fV4f*V4fUc
__builtin_ia32_loadss128_mask
__builtin_ia32_loadaps256_mask
V8fV8f*V8fUc
__builtin_ia32_loaddqudi128_mask
V2LLiV2LLi*V2LLiUc
__builtin_ia32_loaddqudi256_mask
V4LLiV4LLi*V4LLiUc
__builtin_ia32_loaddqusi128_mask
__builtin_ia32_loaddqusi256_mask
__builtin_ia32_loadupd128_mask
__builtin_ia32_loadupd256_mask
__builtin_ia32_loadups128_mask
__builtin_ia32_loadups256_mask
__builtin_ia32_storedquhi512_mask
vV32s*V32sUi
__builtin_ia32_storedquqi512_mask
vV64c*V64cULLi
__builtin_ia32_storedquhi128_mask
__builtin_ia32_storedquhi256_mask
__builtin_ia32_storedquqi128_mask
__builtin_ia32_storedquqi256_mask
__builtin_ia32_storeapd128_mask
__builtin_ia32_storesd128_mask
__builtin_ia32_storeapd256_mask
__builtin_ia32_storeaps128_mask
__builtin_ia32_storess128_mask
__builtin_ia32_storeaps256_mask
__builtin_ia32_storedqudi128_mask
__builtin_ia32_storedqudi256_mask
__builtin_ia32_storedqusi128_mask
__builtin_ia32_storedqusi256_mask
__builtin_ia32_storeupd128_mask
__builtin_ia32_storeupd256_mask
__builtin_ia32_storeups128_mask
__builtin_ia32_storeups256_mask
__builtin_ia32_rcp14pd128_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_rcp14ps128_mask
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_vplzcntd_128
__builtin_ia32_vplzcntd_256
__builtin_ia32_vplzcntq_128
__builtin_ia32_vplzcntq_256
__builtin_ia32_vcvtsd2si32
iV2dIi
__builtin_ia32_vcvtsd2usi32
UiV2dIi
__builtin_ia32_vcvtss2si32
iV4fIi
__builtin_ia32_vcvtss2usi32
UiV4fIi
__builtin_ia32_vcvttsd2si32
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_vcvttss2si32
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vpermilpd512
__builtin_ia32_vpermilps512
__builtin_ia32_vpermilvarpd512
V8dV8dV8LLi
__builtin_ia32_vpermilvarps512
V16fV16fV16i
__builtin_ia32_rndscalesd_round_mask
__builtin_ia32_rndscaless_round_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round_mask
__builtin_ia32_scalefss_round_mask
__builtin_ia32_psradi512
__builtin_ia32_psraqi512
__builtin_ia32_psraq128
__builtin_ia32_psraq256
__builtin_ia32_psraqi128
__builtin_ia32_psraqi256
__builtin_ia32_pslld512
V16iV16iV4i
__builtin_ia32_psllq512
V8LLiV8LLiV2LLi
__builtin_ia32_psllv16si
__builtin_ia32_psllv8di
__builtin_ia32_psrad512
__builtin_ia32_psraq512
__builtin_ia32_psrav16si
__builtin_ia32_psrav8di
__builtin_ia32_psrld512
__builtin_ia32_psrlq512
__builtin_ia32_psrlv16si
__builtin_ia32_psrlv8di
__builtin_ia32_pternlogd512_mask
V16iV16iV16iV16iIiUs
__builtin_ia32_pternlogd512_maskz
__builtin_ia32_pternlogq512_mask
V8LLiV8LLiV8LLiV8LLiIiUc
__builtin_ia32_pternlogq512_maskz
__builtin_ia32_pternlogd128_mask
V4iV4iV4iV4iIiUc
__builtin_ia32_pternlogd128_maskz
__builtin_ia32_pternlogd256_mask
V8iV8iV8iV8iIiUc
__builtin_ia32_pternlogd256_maskz
__builtin_ia32_pternlogq128_mask
V2LLiV2LLiV2LLiV2LLiIiUc
__builtin_ia32_pternlogq128_maskz
__builtin_ia32_pternlogq256_mask
V4LLiV4LLiV4LLiV4LLiIiUc
__builtin_ia32_pternlogq256_maskz
__builtin_ia32_shuf_f32x4
__builtin_ia32_shuf_f64x2
__builtin_ia32_shuf_i32x4
__builtin_ia32_shuf_i64x2
__builtin_ia32_shufpd512
__builtin_ia32_shufps512
__builtin_ia32_shuf_f32x4_256
__builtin_ia32_shuf_f64x2_256
__builtin_ia32_shuf_i32x4_256
__builtin_ia32_shuf_i64x2_256
__builtin_ia32_sqrtsd_round_mask
__builtin_ia32_sqrtss_round_mask
__builtin_ia32_rsqrt14pd128_mask
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14ps128_mask
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_cvtb2mask512
ULLiV64c
__builtin_ia32_cvtmask2b512
V64cULLi
__builtin_ia32_cvtmask2w512
V32sUi
__builtin_ia32_cvtd2mask512
UsV16i
__builtin_ia32_cvtmask2d512
V16iUs
__builtin_ia32_cvtmask2q512
V8LLiUc
__builtin_ia32_cvtq2mask512
UcV8LLi
__builtin_ia32_cvtb2mask128
UsV16c
__builtin_ia32_cvtb2mask256
UiV32c
__builtin_ia32_cvtmask2b128
V16cUs
__builtin_ia32_cvtmask2b256
V32cUi
__builtin_ia32_cvtmask2w128
V8sUc
__builtin_ia32_cvtmask2w256
V16sUs
__builtin_ia32_cvtd2mask128
UcV4i
avx512dq,avx512vl
__builtin_ia32_cvtd2mask256
UcV8i
__builtin_ia32_cvtmask2d128
V4iUc
__builtin_ia32_cvtmask2d256
V8iUc
__builtin_ia32_cvtmask2q128
V2LLiUc
__builtin_ia32_cvtmask2q256
V4LLiUc
__builtin_ia32_cvtq2mask128
UcV2LLi
__builtin_ia32_cvtq2mask256
UcV4LLi
__builtin_ia32_pmovsdb512_mask
V16cV16iV16cUs
__builtin_ia32_pmovsdb512mem_mask
vV16c*V16iUs
__builtin_ia32_pmovswb512mem_mask
vV32c*V32sUi
__builtin_ia32_pmovsdw512_mask
V16sV16iV16sUs
__builtin_ia32_pmovsdw512mem_mask
vV16s*V16iUs
__builtin_ia32_pmovsqb512_mask
V16cV8LLiV16cUc
__builtin_ia32_pmovsqb512mem_mask
vV16c*V8LLiUc
__builtin_ia32_pmovsqd512_mask
V8iV8LLiV8iUc
__builtin_ia32_pmovsqd512mem_mask
vV8i*V8LLiUc
__builtin_ia32_pmovsqw512_mask
V8sV8LLiV8sUc
__builtin_ia32_pmovsqw512mem_mask
vV8s*V8LLiUc
__builtin_ia32_pmovsdb128_mask
V16cV4iV16cUc
__builtin_ia32_pmovsdb128mem_mask
vV16c*V4iUc
__builtin_ia32_pmovswb128mem_mask
vV16c*V8sUc
__builtin_ia32_pmovsdb256_mask
V16cV8iV16cUc
__builtin_ia32_pmovsdb256mem_mask
vV16c*V8iUc
__builtin_ia32_pmovswb256mem_mask
vV16c*V16sUs
__builtin_ia32_pmovsdw128_mask
V8sV4iV8sUc
__builtin_ia32_pmovsdw128mem_mask
vV8s*V4iUc
__builtin_ia32_pmovsdw256_mask
V8sV8iV8sUc
__builtin_ia32_pmovsdw256mem_mask
vV8s*V8iUc
__builtin_ia32_pmovsqb128_mask
V16cV2LLiV16cUc
__builtin_ia32_pmovsqb128mem_mask
vV16c*V2LLiUc
__builtin_ia32_pmovsqb256_mask
V16cV4LLiV16cUc
__builtin_ia32_pmovsqb256mem_mask
vV16c*V4LLiUc
__builtin_ia32_pmovsqd128_mask
V4iV2LLiV4iUc
__builtin_ia32_pmovsqd128mem_mask
vV4i*V2LLiUc
__builtin_ia32_pmovsqd256_mask
V4iV4LLiV4iUc
__builtin_ia32_pmovsqd256mem_mask
vV4i*V4LLiUc
__builtin_ia32_pmovsqw128_mask
V8sV2LLiV8sUc
__builtin_ia32_pmovsqw128mem_mask
vV8s*V2LLiUc
__builtin_ia32_pmovsqw256_mask
V8sV4LLiV8sUc
__builtin_ia32_pmovsqw256mem_mask
vV8s*V4LLiUc
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusdw512mem_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusdw256mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovdb512_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovdw512_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb512mem_mask
__builtin_ia32_pmovqd512_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw512_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqd256mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_extractf32x8_mask
V8fV16fIiV8fUc
__builtin_ia32_extractf64x2_512_mask
V2dV8dIiV2dUc
__builtin_ia32_extracti32x8_mask
V8iV16iIiV8iUc
__builtin_ia32_extracti64x2_512_mask
V2LLiV8LLiIiV2LLiUc
__builtin_ia32_extracti32x4_mask
V4iV16iIiV4iUc
__builtin_ia32_extracti64x4_mask
V4LLiV8LLiIiV4LLiUc
__builtin_ia32_extractf64x2_256_mask
V2dV4dIiV2dUc
__builtin_ia32_extracti64x2_256_mask
V2LLiV4LLiIiV2LLiUc
__builtin_ia32_extractf32x4_256_mask
V4fV8fIiV4fUc
__builtin_ia32_extracti32x4_256_mask
V4iV8iIiV4iUc
__builtin_ia32_insertf32x8
V16fV16fV8fIi
__builtin_ia32_insertf64x2_512
V8dV8dV2dIi
__builtin_ia32_inserti32x8
V16iV16iV8iIi
__builtin_ia32_inserti64x2_512
V8LLiV8LLiV2LLiIi
__builtin_ia32_insertf64x4
V8dV8dV4dIi
__builtin_ia32_inserti64x4
V8LLiV8LLiV4LLiIi
__builtin_ia32_insertf64x2_256
__builtin_ia32_inserti64x2_256
__builtin_ia32_insertf32x4_256
__builtin_ia32_inserti32x4_256
__builtin_ia32_insertf32x4
V16fV16fV4fIi
__builtin_ia32_inserti32x4
V16iV16iV4iIi
__builtin_ia32_getmantpd128_mask
__builtin_ia32_getmantpd256_mask
__builtin_ia32_getmantps128_mask
__builtin_ia32_getmantps256_mask
__builtin_ia32_getmantpd512_mask
__builtin_ia32_getmantps512_mask
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_vfmaddss3_mask
__builtin_ia32_vfmaddss3_maskz
__builtin_ia32_vfmaddss3_mask3
__builtin_ia32_vfmaddsd3_mask
__builtin_ia32_vfmaddsd3_maskz
__builtin_ia32_vfmaddsd3_mask3
__builtin_ia32_vfmsubsd3_mask3
__builtin_ia32_vfmsubss3_mask3
__builtin_ia32_permdf512
__builtin_ia32_permdi512
__builtin_ia32_permvarhi512
__builtin_ia32_permvardf512
__builtin_ia32_permvardi512
__builtin_ia32_permvarsf512
__builtin_ia32_permvarsi512
__builtin_ia32_permvarqi512
__builtin_ia32_permvarqi128
__builtin_ia32_permvarqi256
__builtin_ia32_permvarhi128
__builtin_ia32_permvarhi256
__builtin_ia32_permvardf256
__builtin_ia32_permvardi256
__builtin_ia32_fpclasspd128_mask
UcV2dIiUc
__builtin_ia32_fpclasspd256_mask
UcV4dIiUc
__builtin_ia32_fpclassps128_mask
UcV4fIiUc
__builtin_ia32_fpclassps256_mask
UcV8fIiUc
__builtin_ia32_fpclassps512_mask
UsV16fIiUs
__builtin_ia32_fpclasspd512_mask
UcV8dIiUc
__builtin_ia32_fpclasssd_mask
__builtin_ia32_fpclassss_mask
__builtin_ia32_kandhi
UsUsUs
__builtin_ia32_kandnhi
__builtin_ia32_korhi
__builtin_ia32_kortestchi
iUsUs
__builtin_ia32_kortestzhi
__builtin_ia32_kunpckhi
__builtin_ia32_kxnorhi
__builtin_ia32_kxorhi
__builtin_ia32_palignr512
V64cV64cV64cIi
__builtin_ia32_dbpsadbw128
V8sV16cV16cIi
__builtin_ia32_dbpsadbw256
V16sV32cV32cIi
__builtin_ia32_dbpsadbw512
V32sV64cV64cIi
__builtin_ia32_psadbw512
V8LLiV64cV64c
__builtin_ia32_compressdf512_mask
__builtin_ia32_compressdi512_mask
__builtin_ia32_compresshi512_mask
V32sV32sV32sUi
__builtin_ia32_compressqi512_mask
V64cV64cV64cULLi
__builtin_ia32_compresssf512_mask
__builtin_ia32_compresssi512_mask
__builtin_ia32_cmpsd_mask
UcV2dV2dIiUcIi
__builtin_ia32_cmpss_mask
UcV4fV4fIiUcIi
__builtin_ia32_pshufd512
__builtin_ia32_expanddf512_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_expandhi512_mask
__builtin_ia32_expandqi512_mask
__builtin_ia32_expandloaddf512_mask
__builtin_ia32_expandloaddi512_mask
__builtin_ia32_expandloadhi512_mask
V32sV32sC*V32sUi
__builtin_ia32_expandloadqi512_mask
V64cV64cC*V64cULLi
__builtin_ia32_expandloadsf512_mask
__builtin_ia32_expandloadsi512_mask
__builtin_ia32_expandsf512_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_cvtps2pd512_mask
V8dV8fV8dUcIi
__builtin_ia32_compressstoredf512_mask
__builtin_ia32_compressstoredi512_mask
__builtin_ia32_compressstorehi512_mask
__builtin_ia32_compressstoreqi512_mask
__builtin_ia32_compressstoresf512_mask
__builtin_ia32_compressstoresi512_mask
__builtin_ia32_vcvtph2ps_mask
V4fV8sV4fUc
__builtin_ia32_vcvtph2ps256_mask
V8fV8sV8fUc
__builtin_ia32_vcvtps2ph_mask
V8sV4fIiV8sUc
__builtin_ia32_vcvtps2ph256_mask
V8sV8fIiV8sUc
__builtin_ia32_cvtw2mask512
UiV32s
__builtin_ia32_cvtw2mask128
UcV8s
__builtin_ia32_cvtw2mask256
UsV16s
__builtin_ia32_cvtsd2ss_round_mask
V4fV4fV2dV4fUcIi
__builtin_ia32_cvtsi2ss32
V4fV4fiIi
__builtin_ia32_cvtss2sd_round_mask
V2dV2dV4fV2dUcIi
__builtin_ia32_cvtusi2ss32
V4fV4fUiIi
__builtin_ia32_vpmultishiftqb512_mask
__builtin_ia32_vpmultishiftqb128_mask
V16cV16cV16cV16cUs
__builtin_ia32_vpmultishiftqb256_mask
V32cV32cV32cV32cUi
__builtin_ia32_selectb_128
V16cUsV16cV16c
__builtin_ia32_selectb_256
V32cUiV32cV32c
__builtin_ia32_selectb_512
V64cULLiV64cV64c
__builtin_ia32_selectw_128
V8sUcV8sV8s
__builtin_ia32_selectw_256
V16sUsV16sV16s
__builtin_ia32_selectw_512
V32sUiV32sV32s
__builtin_ia32_selectd_128
V4iUcV4iV4i
__builtin_ia32_selectd_256
V8iUcV8iV8i
__builtin_ia32_selectd_512
V16iUsV16iV16i
__builtin_ia32_selectq_128
V2LLiUcV2LLiV2LLi
__builtin_ia32_selectq_256
V4LLiUcV4LLiV4LLi
__builtin_ia32_selectq_512
V8LLiUcV8LLiV8LLi
__builtin_ia32_selectps_128
V4fUcV4fV4f
__builtin_ia32_selectps_256
V8fUcV8fV8f
__builtin_ia32_selectps_512
V16fUsV16fV16f
__builtin_ia32_selectpd_128
V2dUcV2dV2d
__builtin_ia32_selectpd_256
V4dUcV4dV4d
__builtin_ia32_selectpd_512
V8dUcV8dV8d
__builtin_ia32_selectss_128
__builtin_ia32_selectsd_128
__builtin_ia32_monitorx
__builtin_ia32_mwaitx
__builtin_ia32_umonitor
__builtin_ia32_umwait
__builtin_ia32_tpause
__builtin_ia32_clzero
__builtin_ia32_cldemote
__builtin_ia32_directstore_u32
vUi*Ui
__builtin_ia32_movdir64b
vv*vC*
__builtin_ia32_ptwrite32
__builtin_ia32_invpcid
_BitScanForward
UcUNi*UNi
intrin.h
_BitScanReverse
_ReadWriteBarrier
_ReadBarrier
_WriteBarrier
__emul
LLiii
__emulu
ULLiUiUi
_AddressOfReturnAddress
__stosb
vUc*Ucz
__int2c
__ud2
__readfsbyte
UcUNi
__readfsword
UsUNi
__readfsdword
UNiUNi
__readfsqword
ULLiUNi
__readgsbyte
__readgsword
__readgsdword
__readgsqword
_BitScanForward64
UcUNi*ULLi
_BitScanReverse64
__mulh
LLiLLiLLi
__umulh
_mul128
LLiLLiLLiLLi*
_umul128
ULLiULLiULLiULLi*
__faststorefence
_InterlockedAnd64
LLiLLiD*LLi
_InterlockedDecrement64
LLiLLiD*
_InterlockedExchange64
_InterlockedExchangeAdd64
_InterlockedExchangeSub64
_InterlockedIncrement64
_InterlockedOr64
_InterlockedXor64
_InterlockedCompareExchange128
UcLLiD*LLiLLiLLi*
__builtin_ia32_readeflags_u64
__builtin_ia32_writeeflags_u64
vULLi
__builtin_ia32_cvtss2si64
LLiV4f
__builtin_ia32_cvttss2si64
__builtin_ia32_cvtsd2si64
LLiV2d
__builtin_ia32_cvttsd2si64
__builtin_ia32_movnti64
vLLi*LLi
__builtin_ia32_vec_ext_v2di
LLiV2LLiIi
__builtin_ia32_vec_set_v2di
V2LLiV2LLiLLiIi
__builtin_ia32_crc32di
__builtin_ia32_vec_ext_v4di
LLiV4LLiIi
__builtin_ia32_vec_set_v4di
V4LLiV4LLiLLiIi
__builtin_ia32_rdfsbase32
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase32
__builtin_ia32_rdgsbase64
__builtin_ia32_wrfsbase32
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase32
__builtin_ia32_wrgsbase64
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave64
__builtin_ia32_xsave64
__builtin_ia32_xrstor64
__builtin_ia32_xsaveopt64
__builtin_ia32_xrstors64
__builtin_ia32_xsavec64
__builtin_ia32_xsaves64
__builtin_ia32_incsspq
__builtin_ia32_rdsspq
ULLiULLi
__builtin_ia32_wrssq
vULLiv*
__builtin_ia32_wrussq
__builtin_ia32_addcarryx_u64
UcUcULLiULLiULLi*
__builtin_ia32_addcarry_u64
__builtin_ia32_subborrow_u64
__builtin_ia32_rdrand64_step
UiULLi*
__builtin_ia32_rdseed64_step
__builtin_ia32_bextr_u64
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_di
__builtin_ia32_pext_di
__builtin_ia32_bextri_u64
ULLiULLiIULLi
__builtin_ia32_lwpins64
UcULLiUiUi
__builtin_ia32_lwpval64
vULLiUiUi
__builtin_ia32_vcvtsd2si64
LLiV2dIi
__builtin_ia32_vcvtsd2usi64
ULLiV2dIi
__builtin_ia32_vcvtss2si64
LLiV4fIi
__builtin_ia32_vcvtss2usi64
ULLiV4fIi
__builtin_ia32_vcvttsd2si64
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2si64
__builtin_ia32_vcvttss2usi64
__builtin_ia32_cvtsi2sd64
V2dV2dLLiIi
__builtin_ia32_cvtsi2ss64
V4fV4fLLiIi
__builtin_ia32_cvtusi2sd64
V2dV2dULLiIi
__builtin_ia32_cvtusi2ss64
V4fV4fULLiIi
__builtin_ia32_directstore_u64
vULi*ULi
__builtin_ia32_ptwrite64
__builtin_bitrev
UiUi
__builtin_getid
__builtin_getps
__builtin_setps
vUiUi
__XS1B__
unknown
code_completion
comment
identifier
raw_identifier
numeric_constant
char_constant
wide_char_constant
utf8_char_constant
utf16_char_constant
utf32_char_constant
string_literal
wide_string_literal
angle_string_literal
utf8_string_literal
utf16_string_literal
utf32_string_literal
l_square
r_square
l_paren
r_paren
l_brace
r_brace
period
ellipsis
ampamp
ampequal
star
starequal
plus
plusplus
plusequal
minus
arrow
minusminus
minusequal
tilde
exclaim
exclaimequal
slash
slashequal
percent
percentequal
less
lessless
lessequal
lesslessequal
spaceship
greater
greatergreater
greaterequal
greatergreaterequal
caret
caretequal
pipe
pipepipe
pipeequal
question
colon
semi
equal
equalequal
comma
hash
hashhash
hashat
periodstar
arrowstar
coloncolon
lesslessless
greatergreatergreater
caretcaret
auto
break
case
const
continue
default
double
else
enum
extern
goto
inline
register
restrict
return
signed
sizeof
static
switch
typedef
union
unsigned
void
volatile
while
_Alignas
_Alignof
_Atomic
_Bool
_Complex
_Generic
_Imaginary
_Noreturn
_Static_assert
_Thread_local
__func__
__objc_yes
__objc_no
__ptrauth
catch
class
const_cast
delete
dynamic_cast
export
friend
mutable
namespace
operator
private
protected
public
reinterpret_cast
static_cast
template
this
throw
typename
typeid
using
virtual
wchar_t
alignas
alignof
char16_t
char32_t
constexpr
decltype
noexcept
nullptr
static_assert
thread_local
concept
requires
co_await
co_return
co_yield
module
import
char8_t
_Float16
_Accum
_Fract
_Sat
_Decimal32
_Decimal64
_Decimal128
__null
__alignof
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_types_compatible_p
__builtin_va_arg
__extension__
__float128
__imag
__int128
__label__
__real
__thread
__FUNCTION__
__PRETTY_FUNCTION__
__auto_type
typeof
__FUNCDNAME__
__FUNCSIG__
L__FUNCTION__
L__FUNCSIG__
__is_interface_class
__is_sealed
__is_destructible
__is_trivially_destructible
__is_nothrow_destructible
__is_nothrow_assignable
__is_constructible
__is_nothrow_constructible
__is_assignable
__has_nothrow_assign
__has_nothrow_move_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_move_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_move_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_aggregate
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_final
__is_literal
__is_pod
__is_polymorphic
__is_trivial
__is_union
__has_unique_object_representations
__is_trivially_constructible
__is_trivially_copyable
__is_trivially_assignable
__reference_binds_to_temporary
__underlying_type
__is_lvalue_expr
__is_rvalue_expr
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_standard_layout
__is_signed
__is_unsigned
__is_same
__is_convertible
__array_rank
__array_extent
__is_metal_buffer_pointee
__is_metal_color_texture_channel
__is_metal_depth_texture_channel
__is_metal_explicit_layout_imageblock_slice_storage
__is_metal_explicit_layout_imageblock_struct
__is_metal_implicit_layout_imageblock_slice_storage
__is_metal_implicit_layout_imageblock_struct
__is_metal_intersection_tag
__is_metal_patch_control_point_struct
__is_metal_simdgroup_async_copy_pointee
__is_metal_simdgroup_matrix_element
__is_metal_color_texture_imageblock_slice_storage_valid
__private_extern__
__module_private__
__declspec
__cdecl
__stdcall
__fastcall
__thiscall
__regcall
__vectorcall
__forceinline
__unaligned
__super
__global
__local
__constant
__private
__generic
__kernel
device
threadgroup
constant
threadgroup_imageblock
ray_data
thread
ocl_global
ocl_local
ocl_constant
ocl_private
__read_only
__write_only
__read_write
__builtin_astype
vec_step
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
kernel
vertex
fragment
visible
as_type
__builtin_omp_required_simd_align
__pascal
__vector
__pixel
__bool
__bridge
__bridge_transfer
__bridge_retained
__bridge_retain
__covariant
__contravariant
__kindof
_Nonnull
_Nullable
_Null_unspecified
__ptr64
__ptr32
__sptr
__uptr
__w64
__uuidof
__try
__finally
__leave
__int64
__if_exists
__if_not_exists
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__interface
__builtin_convertvector
__builtin_available
__unknown_anytype
annot_cxxscope
annot_typename
annot_template_id
annot_primary_expr
annot_decltype
annot_pragma_unused
annot_pragma_vis
annot_pragma_pack
annot_pragma_parser_crash
annot_pragma_captured
annot_pragma_dump
annot_pragma_msstruct
annot_pragma_align
annot_pragma_weak
annot_pragma_weakalias
annot_pragma_redefine_extname
annot_pragma_fp_contract
annot_pragma_ms_pointers_to_members
annot_pragma_ms_vtordisp
annot_pragma_ms_pragma
annot_pragma_opencl_extension
annot_pragma_openmp
annot_pragma_openmp_end
annot_pragma_loop_hint
annot_pragma_fp
annot_pragma_attribute
annot_pragma_metal_internals
annot_module_include
annot_module_begin
annot_module_end
metalfe-31001.43
llvm/
LLVM
Apple 
 version 31001.43 
LLVM 31001.43 
expected root node
expected mapping node
version
case-sensitive
use-external-names
overlay-relative
ignore-non-existent-contents
fallthrough
roots
expected array
expected integer
invalid version number
version mismatch, expected 0
missing key '
true
false
expected boolean value
expected mapping node for file or directory entry
name
type
contents
external-contents
use-external-name
file
unknown value for 'type'
entry already has 'contents' or 'external-contents'
missing key 'contents' or 'external-contents'
'use-external-name' is not supported for directories
entry with relative path at the root level is not discoverable
unknown key
duplicate key '
expected string
  'version': 0,
  'case-sensitive': '
  'use-external-names': '
  'overlay-relative': '
  'ignore-non-existent-contents': '
  'roots': [
'type': 'file',
'name': "
'external-contents': "
'type': 'directory',
'contents': [
no-format
error
-Werror
-Werror=
-Wfatal-errors
-Wfatal-errors=
-Wno-
-Rno-
function
none
arg1
xray_always_instrument
always
xray_never_instrument
never
!<arch>
__.CMDLINE
__.WDIR
__.SYMDEF
__.SYMDEF SORTED
__.SYMDEF_64
__.SYMDEF_64 SORTED
air.render_target_array_index
triangle
quad
multiple symbols ('
') with 
incompatible linkages!
llvm.global_ctors
llvm.compiler.used
llvm.used
air.render_target
air.imageblock_data
tracepoint
air.texture
air.sampler
air.command_buffer
air.patch_control_point_input
air.indirect_constant
air.imageblock
air.alias_implicit_imageblock_render_target
explicit
air.compute_pipeline_state
air.render_pipeline_state
air.buffer
air.indirect_buffer
air.instance_acceleration_structure
air.primitive_acceleration_structure
air.intersection_function_table
air.visible_function_table
llvm.module.flags
llvm.ident
air.compile_options
llvm.dbg.cu
air.visible_function_references
air.sampler_states
air.function_groups
air.vertex
air.fragment
air.kernel
air.visible
air.intersection
air.
air.externally_defined
Undefined symbol: 
Used in deployment target 
 but defined in deployment target 
Used from Metal 
 but defined in Metal 
Library contains modules for incompatible targets
air.function_constants
Allocation failed
ushort8
ushort4
ushort3
ushort2
ushort16
ushort
ulong8
ulong4
ulong3
ulong2
ulong16
ulong
uint8
uint4
uint3
uint2
uint16
uint
uchar8
uchar4
uchar3
uchar2
uchar16
uchar
texture
struct
short8
short4
short3
short2
short16
short
sampler
pointer
long8
long4
long3
long2
long16
long
int8
int4
int3
int2
int16
half8
half4x4
half4x3
half4x2
half4
half3x4
half3x3
half3x2
half3
half2x4
half2x3
half2x2
half2
half16
half
float8
float4x4
float4x3
float4x2
float4
float3x4
float3x3
float3x2
float3
float2x4
float2x3
float2x2
float2
float16
float
char8
char4
char3
char2
char16
char
bool8
bool4
bool3
bool2
bool16
bool
LLVM ERROR: 
air.version
Module is missing AIR version number
Module missing AIR version number metadata node
AIR version metadata node is malformed
air.language_version
Metal
METAL
 ,6
!,6
"-6
#,6
$,6
%,6
&,6
',6
(,6
),6
*,6
+,6
,,6
-,6
