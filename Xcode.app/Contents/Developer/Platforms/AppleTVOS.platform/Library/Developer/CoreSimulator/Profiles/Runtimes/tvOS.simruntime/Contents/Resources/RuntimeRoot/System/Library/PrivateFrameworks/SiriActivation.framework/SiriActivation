@(#)PROGRAM:SiriActivation  PROJECT:AssistantUI-1
?333333
333333
?ffffff
%s #activation invalidating BSServiceConnection %@
%s #activation old availability: %@, new availability: %@
%s Button Down Event absent. Artificially update timestamp.
%s #activation cancelPreparation
%s #myriad setCanceledByMyriad: %d
%s #myriad BTLE connected to carplay, adjusting by %d
%s #myriad BTLE Myriad voice trigger advertising while isVisible
%s #myriad BTLE Myriad voice trigger advertising needed adjusted by lt=%d + cp=%d + rtw=%d = %d
%s #myriad BTLE Myriad direct trigger advertising needed
%s #myriad BTLE CarPlay delayed for Myriad decision, evt = %ld
%s #myriad BTLE timed out waiting for Myriad decision, sem=%ld
%s #myriad BTLE CarPlay Myriad decision. Not activating Siri.
%s #myriad BTLE CarPlay Myriad decision. Activating Siri.
%s #myriad BTLE Myriad ignoring advertisement [isVoiceTrigger %d, isVisible %d]
%s #myriad BTLE Myriad voice trigger advertising while is visible [isVoiceTrigger %d]
%s #myriad BTLE observerCalled transition=%@
%s #myriad BTLE wake gesture noted
%s #myriad
%s #activation invalidated presentationServer: %@
%s #activation interrupted presentationServer: %@
%s %p
%s %p #activation Unable to establish connection to un-entitled remote process: %@
%s Unexpectedly attempted to assign a new connection to the activation server with an existing connection: %{public}@
%s %p #activation registerPresentationIdentifier:%@
%s %p #activation unregisterPresentationIdentifier:%@
%s %p #activation willDismiss
%s %p #activation didDismiss
%s %p #activation Shell indicates Siri is presented
%s %p #activation resetSiriToActive
%s %p #activation Shell indicates Siri presentation failed : %@
%s #activation Shell indicates that speech request was started via Siri orb
%s #activation Shell indicates that speech request was cancelled via Siri orb
%s #activation allBulletins
%s #activation bulletinsOnLockScreen
%s #activation bulletinForIdentifier: %@
%s #activation markBulletinWithIdentifier:%@read:%@
%s #activation #locks #noisy sourcesLock about to lock with qos: %ld
%s #activation #locks #noisy sourcesLock successfully locked
%s #activation #locks #noisy sourcesLock unlocked
%s #activation _updateCanActivateFromDirectActionSource
%s #activation setCanActivateFromDirectActionSource: %@
%s #activation Registration of '%@' when it is already registered. Removing
%s #activation Registering '%@'
%s #activation Unregister request of '%@' when it is not registered.
%s #activation Unregistering '%@'
%s #activation B188ActivationEvent with Siri state %@. Activating.
%s #activation B188ActivationEvent with Siri state %@. Deactivating.
%s #activation SiriButtonIdentifierLongPressBTHeadset, context %@, but Siri state is %@. Treating as button long press.
%s activationRequestFromButtonIdentifier:%@, with Siri state %@. Activating.
%s activationRequestFromButtonIdentifier:%@, with Siri state %@. Ignoring.
%s deactivationRequestFromButtonIdentifier:%@, with Siri state %@. Deactivating.
%s #activation %@ button prewarm request, current request state: %@
%s #activation buttonDownFromButtonIdentifier:%@
%s #activation button down used while stopping. Ignoring.
%s #activation buttonUpFromButtonIdentifier:%@
%s #activation buttonTapFromButtonIdentifier:%@
%s #activation activating due to TV remote microphone button short tap with Siri state %@
%s buttonTapFromButtonIdentifier:%@, with Siri state %@. Ignoring.
%s #activation buttonLongPressFromButtonIdentifier:%@, with Siri state %@, context %@. Activating.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@. Ignoring.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@ and we are in CarPlay. Ignoring because we should also be getting a button down/up.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@. Passing to the Presentation Shell.
%s #activation buttonLongPressFromButtonIdentifier:%@, with Siri state %@, context: %@. Ignoring
%s buttonUpTimestamp: %f, buttonDownTimestamp: %f
%s #activation synthesizing button tap
%s #activation button tap occurred, but Siri is not yet up. Not synthesizing tap event.
%s #activation activationRequestFromDirectActionEvent:%@
%s #activation activationRequestFromContinuityWithContext
%s #activation activationRequestFromVoiceTriggerWithContext
%s #activation activationRequestFromBreadcrumb
%s #activation activationRequestFromSimpleActivation:%@
%s #activation activationRequestFromSpotlightWithContext
%s #activation activationRequestFromVoiceTrigger
%s #activation activationRequestFromTestingWithContext
%s #activation speech request state did change (state = %ld)
%s #activation #locks #noisy handleActivationLock about to lock with qos: %ld
%s #activation #locks #noisy handleActivationLock successfully locked
%s #activation activationRequest = %@
%s #activation #locks #noisy handleActivationLock unlocked
%s #activation _activatePresentation %@
%s #activation Setting rotation style for presentation { rotationStyle: %@, presentation: %@ }
%s #activation
%s #activation _attachToTether
%s #activation _cancelActivationPreparationForSetup
%s #activation _cancelPendingActivationEventWithReason:%@
%s #activation activating in design mode
%s #activation preheat; request state = %@
%s #myriad BTLE Device should abort session
%s #myriad BTLE Device continues to interact, device won election
%s #activation lockState: %@
%s #activation callStateChangedToIsActive: %@ isOutgoing: %@
%s #activation error: %@
%s #activation BSServiceConnection Invalidated %@
%s #activation BSServiceConnection Interrupted %@
%s #activation BSServiceConnection Activated %@
%s #activation #locks #noisy presentationsLock about to lock with qos: %ld
%s #activation #locks #noisy presentationsLock successfully locked
%s #activation active: %@ | starting: %@ | stopping: %@ | off: %@ | computed state: %@
%s #activation #locks #noisy presentationsLock unlocked
%s #activation presentationIdentifierKey: %@
%s #activation Registration of '%@' when it is already connected. Removing.
%s #activation Unregister request of '%@' when it is not connected.
%s #activation #preheat
%s #activation #preheat tried to preheat %@ but it's not a registered presentation
%s #activation #preheat tried to preheat %@ but it's request state is %@
%s #activation cancelling preheat for presentation: %@
%s #activation #noisy not cancelling preheat for presentation: %@ because it appears to be %@
%s #activation _lastReportedShouldRejectNewActivations: %@ | newShouldRejectNewActivations: %@
%s #activation presentation with identifier %@ isn't registered
%s #activation presentation with identifier %@ can't transition to state: %@ from state: %@
%s #activation identifier: %@
%s #pingpong sending ping and waiting for pong
%s #noisy model: %@ | server: %@ | connection: %@ | remoteTarget: %@
%s #pingpong not returning ping because presentation with identifier %@ is in request state %@
%s #pingpong timed out waiting for pong
%s #pingpong
%s #pingpong received pong with presentation identifier: %@
%s #activation SASPresentationDecision deciding between: %@
%s ERROR: Multiple connected presentations, but none of them have precedence. Taking the first object, %@
%s #activation BSServiceConnection Interrupted, re-activating %@
%s #activation BSServiceConnection Activated strongSelf=%p connection=%@
%s #activation %@ didRecognizeLongPress
%s #activation #zll carplay steering wheel button with previous prepare assertion, replaced timestamp with %@
%s #activation #zll carplay steering wheel button with no previous prepare assertion
%s #activation #zll not a carplay steering wheel button, converted passed in timestamp: %@
%s Deallocated SiriActivityAssertion (identifier=%@, reason=%@) before it was properly invalidated.
%s Failed getting waketime mib %{public}s
%s Device wants Home Button ZLL, checking wake time
%s Failed looking up waketime %{public}s
%s Wake time was %lf seconds ago
%s Button down time was %lf seconds ago
%s Wake -> Button down delta is %lf
%s Using Wake Time
%s Using Button Down Time
%s button down timestamp sent in format where absolute time conversion is invalid
%s Bulletin with identifier: %@ not found in cache with bulletinIDs: %@
%s %@ added to lock screen feed
%s ACAssistantBBObserver: Trying to modify a bulletin %@ that I don't already have.
%s %@ removed from lock screen feed
%s ACAssistantBBObserver: Asked to remove a bulletin from lock screen %@ that I don't already have.
%s ACAssistantBBObserver: Asked to remove a bulletin %@ that I don't already have.
%s ERROR: attempted to create SiriButtonIdentifier from '%@'.
%s info=%@
%s TestAutomation activationEvent does not contain recognition text or speech file paths.
%s Received VoiceTrigger activation request, already pending for possible future activation
%s Received VoiceTrigger activation request, but currently blocking VoiceTrigger activations
%s Received VoiceTrigger activation request, no restrictions, activating
%s pending voice trigger activation timer fired, %@
%s Handling remote request dismissal, reason=%@, options=%@, analyticsContext=%@
%s PendingCount:%tu, hasPendingTrigger:%i
%s replacing prewarm AFRequestInfo %@ with newer pending activation AFRequestInfo %@
%s count is zero after being decremented, activating from pending
%s #activation Cannot set requestSource to SASRequestSourceKeyboard when keyboard input is disabled
%s #activation Updated properties from system state: %@
%s Unhandled presentation identifier: %@
%s Unsupported SASRequestSource value: %lu, returning back AFDirectActionSourceUnknown.
%s %i
%s Enabled:%@
%s #activation NO: Siri is not supported. Language code: %@
%s #activation NO: Siri is restricted by profile
%s #activation NO: Siri voice activation is disabled until first unlock.
%s #activation: Pocket state would normally prevent voice trigger, but the user default to always allow voice activation is set, so ignoring pocket state
%s #activation NO: Pocket state prevents voice trigger activation
%s #activation NO: There is an existing HoldToTalk trigger.
%s #activation NO: Siri is disabled because an iPad Smart Cover is closed which blocks home button or Hey Siri
%s #activation: Smart Cover is closed, which would normally prevent voice trigger, but the user default to always allow voice activation is set, so ignoring Smart Cover state
%s #activation NO: Siri is disabled because an iPhone Smart Cover is closed which blocks home button or Hey Siri
%s #activation NO: "Press Home/Side For Siri" is disabled in Settings
%s #activation NO: Siri state is %@. Ignoring activationRequest %@.
%s #activation NO: Siri is disabled while passcode locked
%s requestSource:SASRequestSourceBluetoothHeadset isTemporaryDevice:%i
%s #activation NO: Blocking wireless splitter guest that's using B188 / bluetooth device
%s event:%@ isTemporaryDevice:%i
%s #activation NO: Blocking wireless splitter guest that's using B288 %@
%s #activation NO: Siri is disabled because the device is blocked
%s #activation NO: user is in an active call
%s #activation YES: source:%@
%s #activation NO: Siri is restricted by profile.
%s #activation NO: Siri Setup is disabled while passcode locked
%s Bulletin cache is being asked to insert a bulletin with no ID; ignoring the request because bulletin lookup is ID-based and so there's no reason to store a bulletin with no ID (bulletin: %@; bbBulletin: %@)
%s Bulletin cache contains a bulletin with a nil identifier; not including the bulletin as part of the return value of -allBulletins (bulletin: %@; bbBulletin: %@)
%s #activation canActivateChangedTo: %@
%s SASSignalConnectionListener: Unable to assign new incoming connection to a process because the remote was unknown : connection=%@
%s #activation Button identifier %@ with uuid '%@' registered by %@
%s #activation Button identifier %@ with uuid '%@' unregistered by %@
%s #activation Non-button source of type %@ with uuid '%@' registered by %@
%s #activation Non-button source of type %@ with uuid '%@' unregistered by %@
%s #activation activationRequestFromButtonIdentifier:%@ context:%@
%s #activation deactivationRequestFromButtonIdentifier:%@ context:%@
%s #activation _activationRequestFromDirectActionEvent:%@ context:%@
%s #activation activationRequestFromDirectActionEvent payload missing bundleId, using connection bundle id:%@
%s #activation activationRequestFromContinuityWithContext:%@
%s #activation activationRequestFromSimpleActivation
%s #activation activationRequestFromSpotlightWithContext:%@
%s #activation activationRequestFromTestingWithContext:%@
%s prewarmFromButtonIdentifier:%@
%s cancelPrewarmFromButtonIdentifier:%@
%s buttonDownFromButtonIdentifier:%@ timestamp:%@
%s buttonUpFromButtonIdentifier:%@ timestamp:%@
%s buttonTapFromButtonIdentifier:%@
%s buttonLongPressFromButtonIdentifier:%@ context:%@
%s SASPresentationConnectionListener: Unable to assign new incoming connection to a process because the remote was unknown : connection=%@
-[SiriActivationSource invalidate]
-[SiriActivationSource activeChangedTo:]
identifier
T@"NSString",&,N,V_identifier
com.apple.siri.activation.service
SASRequestStateOff
SASRequestStateHeated
SASRequestStateStarting
SASRequestStateActive
SASRequestStateStopping
SASPresentationManagerErrorInvalidStateTransition
SASPresentationManagerErrorStateTransitionFromUnregisteredPresentation
SASPresentationManagerSendBlockToUnregisteredPresentation
SASPresentationManagerSetupPingTimerForUnregisteredPresentation
SASPresentationManagerTeardownPingTimerForUnregisteredPresentation
SASPresentationManagerErrorPongTimeout
-[SASRequestOptionsBuilder _createRequestOptionsForRequest:withDataSource:]
__supportsCarFullScreen
__bundleId
AssistantDirectActionEventKey
systemState
T@"SASSystemState",&,N,V_systemState
presentationIdentifier
Tq,N,V_presentationIdentifier
SASDismissalReason
Unknown
SystemInterrupt
IncomingPhoneCallInterrupt
OutgoingPhoneCall
Timeout
HardwareButton
UISwipe
CarplayDismissed
LostMyriadElection
Punchout
CloseAssistantCommand
EmergencyBulletinSynthesized
ConnectionErrorTimeout
SiriUnavailable
HandoffDeviceUnlockFailure
InitialDeviceUnlockSinceBootFailure
UserEnteredScreenshotFullMode
TTSDidFinishInBackground
BluetoothDeviceDeactivation
PresentationUnregistered
CarPlayHardwareButton
UnexpectedError
CarPlayUnpaired
TapOutsideOfContent
PanSwipeDismissed
ScrollingWithoutListening
PresentationFailedToPresent
ActivationTimedOut
PresentationManagerError
AppLaunch
SiriSetupCancelled
contextOverride
T@"SiriContextOverride",&,N,V_contextOverride
SiriButtonIdentifierLongPressUndefined
SiriButtonIdentifierLongPressHomeButton
SiriButtonIdentifierLongPressLockButton
SiriButtonIdentifierLongPressBTHeadset
SiriButtonIdentifierLongPressWiredMic
SiriButtonIdentifierLongPressCarPlayAppDockButton
SiriButtonIdentifierLongPressCarPlaySteeringWheelButton
SiriButtonIdentifierLongPressCarPlaySiriButton
SiriButtonIdentifierMockShellButton
SiriButtonIdentifierMockSteeringWheelButton
SiriButtonIdentifierTestingShellButton
SiriButtonIdentifierTVRemoteMicrophoneButton
<unknown siri button identifier : %li>
SpeechRecognition
v8@?0
-[SASHeater cancelPreparation]
com.apple.siri.false_positive.0ms_to_150ms
com.apple.siri.false_positive.150ms_to_250ms
com.apple.siri.false_positive.250ms_to_350ms
com.apple.siri.false_positive.350ms_and_up
com.apple.siri.false_positive.activation_duration
preparationStartTime
Td,N,G_preparationStartTime,S_setPreparationStartTime:,V_preparationStartTime
predictedRecordRouteIsZLL
TB,N,V_predictedRecordRouteIsZLL
preheatTimer
T@"NSTimer",&,N,V_preheatTimer
delegate
T@"<SASHeaterDelegate>",W,N,V_delegate
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
T@"NSURL",C,N,V_url
punchoutStyle
Tq,N,V_punchoutStyle
com.apple.siri.SASAnalyticsEventQueue
shouldLogAnalyticsEvents
TB,N,V_shouldLogAnalyticsEvents
pendingAnalyticsEventQueue
T@"NSMutableArray",&,N,V_pendingAnalyticsEventQueue
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
-[SASMyriadController setCanceledByMyriad:]
-[SASMyriadController activateForRequest:visible:]
-[SASMyriadController activateForInTaskRequest:isVisible:]
-[SASMyriadController _updateRaiseToWakeTimeForTransition:]
-[SASMyriadController shouldContinue:]
-[SASMyriadController shouldAbortAnotherDeviceBetter:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
canceledByMyriad
TB,N,V_canceledByMyriad
SiriContextOverrideKey
currentSpokenLanguageCode
unlockedSinceBoot
deviceIsBlocked
deviceIsPasscodeLocked
pocketStateShouldPreventVoiceTrigger
smartCoverClosed
accessibilityShortcutEnabled
carDNDActive
connectedToCarPlay
connectedToTrustedCarPlay
siriIsEnabled
siriIsRestricted
siriIsSupported
supportsSecureCoding
TB,R
T@"NSString",&,N,V_currentSpokenLanguageCode
T@"NSNumber",&,N,V_unlockedSinceBoot
T@"NSNumber",&,N,V_deviceIsBlocked
T@"NSNumber",&,N,V_deviceIsPasscodeLocked
T@"NSNumber",&,N,V_pocketStateShouldPreventVoiceTrigger
T@"NSNumber",&,N,V_pad
T@"NSNumber",&,N,V_smartCoverClosed
T@"NSNumber",&,N,V_accessibilityShortcutEnabled
T@"NSNumber",&,N,V_carDNDActive
T@"NSNumber",&,N,V_connectedToCarPlay
T@"NSNumber",&,N,V_connectedToTrustedCarPlay
T@"NSNumber",&,N,V_siriIsEnabled
T@"NSNumber",&,N,V_siriIsRestricted
T@"NSNumber",&,N,V_siriIsSupported
+[SASPresentationServer serverForConnection:]_block_invoke_2
v16@?0@"BSServiceConnection"8
+[SASPresentationServer serverForConnection:]_block_invoke
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
-[SASPresentationServer init]
-[SASPresentationServer dealloc]
<SASPresentationServer connection:%@, presentationIdentifier:%@>
-[SASPresentationServer _setConnection:]
-[SASPresentationServer registerPresentationIdentifier:]
-[SASPresentationServer unregisterPresentationIdentifier:]
-[SASPresentationServer willDismiss]
-[SASPresentationServer didDismiss]
-[SASPresentationServer didPresentSiri]
-[SASPresentationServer resetSiriToActive]
-[SASPresentationServer failedToPresentSiriWithError:]
-[SASPresentationServer speechRequestStartedFromSiriOrb]_block_invoke
-[SASPresentationServer speechRequestCancelledFromSiriOrb]_block_invoke
-[SASPresentationServer allBulletins]
-[SASPresentationServer bulletinsOnLockScreen]
-[SASPresentationServer bulletinForIdentifier:]
-[SASPresentationServer handleMarkBulletinWithIdentifier:asRead:]
workspaceServiceInjector
T@"BSServiceConnectionEndpointInjector",&,N,V_workspaceServiceInjector
connection
T@"BSServiceConnection<BSServiceConnectionHost>",&,N,V_connection
invalidated
TB,N,V_invalidated
waitForConnectBlocks
T@"NSMutableArray",&,N,V_waitForConnectBlocks
weak_delegate
T@"<SASPresentationServerDelegate>",W,N,V_weak_delegate
longPressInterval
Td,N,V_longPressInterval
context
T@"SiriLongPressButtonContext",&,N,V_context
deviceIdentifier
T@"NSString",C,N,V_deviceIdentifier
BT_KEY_SIRI_EYESFREE_MODE
com.apple.siri.activation
com.apple.siri.activation.presentation
com.apple.siri.activation.signal
machServiceIdentifier
T@"NSString",&,N,V_machServiceIdentifier
presentationDomain
T@"NSString",&,N,V_presentationDomain
T@"NSString",&,N,V_presentationIdentifier
signalDomain
T@"NSString",&,N,V_signalDomain
signalIdentifier
T@"NSString",&,N,V_signalIdentifier
<SiriVoiceTriggerContext contextOverride:%@, speechRequestOptions:%@, requestInfo:%@, userActivity:%@>
com.apple.siri.EyesFree
com.apple.siri.Compact
com.apple.siri.Siriland
com.apple.siri.CarDisplay
com.apple.siri.UIFree
com.apple.siri.SiriTVPresentation
v12@?0B8
-[SiriActivationService _notifySourcesOfActiveChange:]
-[SiriActivationService _updateCanActivateFromDirectActionSource]
-[SiriActivationService setCanActivateFromDirectActionSource:]
-[SiriActivationService _notifySourcesOfCanActivateFromDirectActionSourceChange:]
-[SiriActivationService registerActivationSource:withIdentifier:]
-[SiriActivationService unregisterActivationSourceIdentifier:]
-[SiriActivationService _B188ActivationEvent:context:options:]_block_invoke_2
-[SiriActivationService _B188ActivationEvent:context:options:]_block_invoke
v16@?0@"NSTimer"8
-[SiriActivationService activationRequestFromButtonIdentifier:context:]
-[SiriActivationService deactivationRequestFromButtonIdentifier:context:options:]
-[SiriActivationService prewarmFromButtonIdentifier:longPressInterval:]
activationEvent
eventSource
interval
-[SiriActivationService buttonDownFromButtonIdentifier:timestamp:]
v16@?0@"SASPresentationServer"8
-[SiriActivationService buttonUpFromButtonIdentifier:deviceIdentifier:timestamp:]
-[SiriActivationService buttonTapFromButtonIdentifier:]
-[SiriActivationService buttonLongPressFromButtonIdentifier:context:]
-[SiriActivationService _handleTapSynthesisIfNeededForButtonIdentifier:buttonUpTimestamp:]
-[SiriActivationService activationRequestFromDirectActionEvent:context:completion:]
-[SiriActivationService activationRequestFromContinuityWithContext:]
-[SiriActivationService activationRequestFromVoiceTriggerWithContext:]
-[SiriActivationService activationRequestFromBreadcrumb]
-[SiriActivationService activationRequestFromSimpleActivation:]
-[SiriActivationService activationRequestFromSpotlightWithContext:]
-[SiriActivationService activationRequestFromVoiceTrigger]
-[SiriActivationService activationRequestFromTestingWithContext:]
-[SiriActivationService speechRequestStateDidChange:]
-[SiriActivationService handleActivationRequest:systemState:]
isDeviceUnlocked
clockTime
-[SiriActivationService _activatePresentationWithIdentifier:requestOptions:analyticsContext:]
-[SiriActivationService _activatePresentationWithIdentifier:requestOptions:analyticsContext:]_block_invoke
-[SiriActivationService _dismissSiri:]
-[SiriActivationService _cancelTTS]
-[SiriActivationService _preheatPresentation]
-[SiriActivationService _attachToTether]
-[SiriActivationService _cancelActivationPreparationForSetup]
-[SiriActivationService _cancelPendingActivationEventWithReason:]
-[SiriActivationService _handleDesignModeRequest]
com.apple.siri.internal.activation
-[SiriActivationService heaterSuggestsPreheating:]
-[SiriActivationService shouldAbort:]
-[SiriActivationService shouldContinue:]
-[SiriActivationService didChangeLockState:]
-[SiriActivationService callStateChangedToIsActive:isOutgoing:]
-[SiriActivationService presentationManager:didEncounterError:]
Speech file not found
afPreferences
T@"AFPreferences",&,N,V_afPreferences
lockStateMonitor
T@"SASLockStateMonitor",&,N,V_lockStateMonitor
xcTestingActive
TB,N,V_xcTestingActive
sources
T@"NSMutableDictionary",&,N,V_sources
heater
T@"SASHeater",&,N,V_heater
siriTether
T@"AFSiriTether",&,N,V_siriTether
siriTetherIsAttached
TB,N,V_siriTetherIsAttached
activationTimestamp
Td,N,V_activationTimestamp
voiceTriggerNotifyTokenIsValid
TB,N,V_voiceTriggerNotifyTokenIsValid
bulletinManager
T@"SASBulletinManager",&,N,V_bulletinManager
remoteRequestManager
T@"SASRemoteRequestManager",&,N,V_remoteRequestManager
testingInputController
T@"SASTestingInputController",&,N,V_testingInputController
avExternalButtonEvents
T@"NSMutableDictionary",&,N,V_avExternalButtonEvents
buttonDownHasOccurredSinceActivation
TB,N,V_buttonDownHasOccurredSinceActivation
canActivateFromDirectActionSource
TB,N,V_canActivateFromDirectActionSource
pocketStateFetchingInProgressForHeadsetActivation
TB,N,G_pocketStateFetchingInProgressForHeadsetActivation,S_setPocketStateFetchingInProgressForHeadsetActivation:,V_pocketStateFetchingInProgressForHeadsetActivation
presentationManager
T@"SASPresentationManager",&,N,V_presentationManager
-[SiriSpotlightSource configureConnection]_block_invoke_2
-[SiriSpotlightSource configureConnection]_block_invoke
SBSAssistantActivationContextBundleID
com.apple.MobileSMS
com.apple.Home
com.apple.shortcuts
<SiriDirectActionContext contextOverride:%@, payload:%@, bulletin:%@, notification:%@, directActionEvent:%@, bundleId:%@>
payload
bulletin
notification
T@"NSDictionary",R,N,V_payload
T@"BBBulletin",R,N,V_bulletin
T@"UNNotification",R,N,V_notification
-[SASPresentationManager requestState]
-[SASPresentationManager registerSiriPresentation:withIdentifier:]
-[SASPresentationManager unregisterSiriPresentationWithIdentifier:]
-[SASPresentationManager preheatNextPresentationToActivate]
-[SASPresentationManager cancelAllPreheatedPresentations]
-[SASPresentationManager _presentationsLock_cancelAllPreheatedPresentations]
-[SASPresentationManager _notifyDelegateOfShouldRejectNewActivationsChangeIfNecessary]
-[SASPresentationManager _sendBlock:toPresentationWithPresentationIdentifier:]
-[SASPresentationManager _sendBlockToActivePresentations:]
-[SASPresentationManager _sendBlockToStartingPresentations:]
-[SASPresentationManager _sendBlockToStoppingPresentations:]
-[SASPresentationManager sendButtonEventCompletionToPresentations:]
-[SASPresentationManager activeSpringBoardPresentation_updateActiveInterfaceOrientation:willAnimateWithDuration:]
-[SASPresentationManager activePresentationsAreIdleAndQuiet]
-[SASPresentationManager _transitionPresentationWithPresentationIdentifier:toState:]
-[SASPresentationManager nextPresentationToActivate]
-[SASPresentationManager _presentationsLock_nextPresentationToActivate]
-[SASPresentationManager _setupPingTimerForPresentationIdentifier:]
-[SASPresentationManager _setupPingTimerForPresentationIdentifier:]_block_invoke
-[SASPresentationManager _waitForPongFromPresentationWithPresentationIdentifier:]
-[SASPresentationManager _waitForPongFromPresentationWithPresentationIdentifier:]_block_invoke
-[SASPresentationManager _teardownPingTimerForPresentationIdentifier:]
-[SASPresentationManager pongWithPresentationIdentifier:]
-[SASPresentationManager _forceAllPresentationsOff]
presentations
T@"NSMutableDictionary",&,N,V_presentations
deactivationOptions:%lu, animated:%@, request cancellation reason %ld, dismissal reason %@, shouldTurnScreenOff %@
deactivationOptions
animated
requestCancellationReason
dismissalReason
shouldTurnScreenOff
TQ,R,N,V_deactivationOptions
TB,R,N,V_animated
reason
Tq,R,N,V_reason
TQ,R,N,V_dismissalReason
TB,R,N,V_shouldTurnScreenOff
+[SASPresentationDecision activationPresentationForPresentationIdentifiers:]
-[SiriSimpleActivationSource configureConnection]_block_invoke_2
-[SiriSimpleActivationSource configureConnection]_block_invoke
-[SiriTestingSource configureConnection]_block_invoke_2
-[SiriTestingSource configureConnection]_block_invoke
SiriTestingContextRecognitionStringKey
SiriTestingContextAudioInputKey
<SiriTestingContext contextOverride:%@, testingContext:%@>
testingContext
T@"NSDictionary",R,N,V_testingContext
prepare
speechInteraction
d8@?0
-[SiriLongPressButtonSource configureConnection]_block_invoke_2
-[SiriLongPressButtonSource configureConnection]_block_invoke
v24@?0@"<SiriAssertion>"8d16
-[SiriLongPressButtonSource didRecognizeLongPress]
-[SiriLongPressButtonSource _timestampForSpeechInteractionActivityWithTimestamp:]
buttonIdentifier
Tq,N,V_buttonIdentifier
lock_activityAssertions
T@"NSMutableArray",&,N,V_lock_activityAssertions
currentTimeGenerator
T@?,C,N,V_currentTimeGenerator
SiriPresentationInvalidIdentifier
SiriPresentationSpringBoardMainScreenIdentifier
SiriPresentationCarPlayHeadUnitIdentifier
SiriPresentationMockIdentifier
SiriPresentationPineBoardMainScreenIdentifier
<unknown siri presentation identifier : %li>
SiriPresentationActivationCancelReasonShellEvent
SiriPresentationActivationCancelReasonSiriNotEnabled
SiriPresentationActivationCancelReasonLongPressDisabledInAccessibility
SiriPresentationActivationCancelReasonPreheatedWithoutActivation
SiriPresentationActivationCancelReasonPreviousPendingActivation
SiriPresentationActivationCancelReasonIncomingPhoneCall
SiriHomeAffordanceSuppressionNone
SiriHomeAffordanceSuppressionSuppress
SiriHomeAffordanceSuppressionInherit
-[SiriActivityAssertion dealloc]
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_reason
reference
T@"NSString",R,C,N,V_reference
timestamp
Td,R,N,V_timestamp
valid
TB,R,D,N,GisValid
SiriActivationEventTypeButton
SiriActivationEventTypeVoiceTrigger
SiriActivationEventTypeDirectAction
SiriActivationEventTypeContinuity
SiriActivationEventTypeBreadcrumb
SiriActivationEventTypeSimpleActivation
SiriActivationEventTypeSpotlight
SiriActivationEventTypeTesting
event = AFActivationEvent%@; source = %@; context: %@
kern.waketime
-[SASActivationRequest computedActivationTime]
-[SASActivationRequest buttonDownTimestamp]
requestSource
Tq,N,V_requestSource
activationType
Tq,N,V_activationType
Tq,N,V_activationEvent
T@"SiriContext",&,N,V_context
activationTime
Td,N,V_activationTime
buttonDownTime
Td,N,V_buttonDownTime
com.apple.cmas
-[SASBulletinManager bulletinForIdentifier:]
-[SASBulletinManager addBulletinCompletionWithBulletin:forFeed:]
-[SASBulletinManager observer:modifyBulletin:]
-[SASBulletinManager observer:removeBulletin:forFeed:]
-[SASBulletinManager observer:purgeReferencesToBulletinID:]
T@"<SASBulletinManagerDelegate>",W,N,V_delegate
SASButtonIdentifierTransport:%@
-[SASButtonIdentifierTransport siriButtonIdentifier]
SASDirectActionEventTransport:%@
event
T@"NSNumber",&,N,V_event
SASTimeIntervalTransport:%@
transport
T@"NSNumber",&,N,V_transport
SiriPresentationIdentifierTransport:%@
T@"NSNumber",&,N,V_identifier
SiriPresentationActivationCancelReason:%@
SiriUILockStateTransport:%@
v16@?0@"AFRequestInfo"8
v32@?0q8Q16@"NSDictionary"24
v16@?0@"AFSpeechRequestOptions"8
v24@?0@"INIntentResponse"8@"NSError"16
v32@?0@"INIntent"8@"NSString"16@?<v@?@"INIntentResponse"@"NSError">24
v16@?0@"INIntentForwardingActionResponse"8
v32@?0@"INIntentForwardingAction"8@"NSString"16@?<v@?@"INIntentForwardingActionResponse">24
-[SASRemoteRequestManager _handleRemotePrewarmWithInfo:]
-[SASRemoteRequestManager _handleNewRemoteRequestWithInfo:]
-[SASRemoteRequestManager _handleRequestWatcherVoiceTriggerRequestWithInfo:]
-[SASRemoteRequestManager _processPendingVoiceTriggerActivationsWithInfo:delay:]_block_invoke
with %@ pending activations
no pending activations
-[SASRemoteRequestManager _handleRemoteRequestDismissalWithReason:options:analyticsContext:]
inSpokenNotification
-[SASRemoteRequestManager _handlePendingVoiceTriggerActivationsWithInfo:]
-[SASRemoteRequestManager _handlePendingVoiceTriggerActivationsWithInfo:]_block_invoke
remoteRequestWatcher
T@"AFRemoteRequestWatcher",&,N,V_remoteRequestWatcher
currentAppIntentDeliverer
T@"INUIAppIntentDeliverer",&,N,V_currentAppIntentDeliverer
currentVoiceTriggerRestriction
TQ,N,V_currentVoiceTriggerRestriction
pendingVoiceTriggerRestrictionCount
TQ,N,V_pendingVoiceTriggerRestrictionCount
hasPendingVoiceTriggerActivation
TB,N,V_hasPendingVoiceTriggerActivation
pendingVoiceTriggerActivationInfo
T@"AFRequestInfo",&,N,V_pendingVoiceTriggerActivationInfo
SASRequestOptionsSourceCodingKey
SASRequestOptionsActivationDeviceIdentifierCodingKey
SASRequestOptionsBulletinCodingKey
SASRequestOptionsAppBundleIdentifierCodingKey
SASRequestOptionsDirectActionEventCodingKey
SASRequestOptionsMessagesDirectActionDictionaryCodingKey
SASRequestOptionsCheckForGuideUpdateContextCodingKey
SASRequestOptionsServerCommandAceIdentifierCodingKey
SASRequestOptionsPronunciationRequestCodingKey
SASRequestOptionsPronunciationContextCodingKey
SASRequestOptionsTextCodingKey
SASRequestOptionsSpeechFileURLCodingKey
SASRequestOptionsTimestampCodingKey
SASRequestOptionsExpectedTimestampCodingKey
SASRequestOptionsButtonDownTimestampCodingKey
SASRequestOptionsIsInitialBringUpKey
SASRequestOptionsUseAutomaticEndpointingKey
SASRequestOptionsUseStreamingDictationKey
SASRequestOptionsAcousticIdEnabledKey
SASRequestOptionsReleaseAudioSessionOnRecordingCompletionKey
SASRequestHomeButtonUpFromBeepKey
SASRequestContinuityDataKey
SASRequestRequestInfoKey
SASRequestSpeechRequestOptionsKey
SASRequestPredictedRecordRouteIsZLL
SASRequestOptionsUIPresentationIdentifierCodingKey
SASRequestOptionsContextAppInfosForSiriViewControllerKey
SASRequestOptionsTestingContextKey
SASRequestOptionsIsConnectedToCarPlayCodingKey
SASRequestOptionsIsForCarDNDCodingKey
SASRequestOptionsCarDNDStatusCodingKey
SASRequestOptionsCurrentLockStateCodingKey
SASRequestOptionsInstrumentationEventsCodingKey
SASRequestOptionsCurrentCarPlaySupportedOEMAppIdListKey
SASRequestOptionsIsTVShortButtonPressAction
SASRequestOptionsStartRecordingSoundIDCodingKey
SASRequestOptionsOriginalOptionsCodingKey
SASRequestOptionsPresentationModeCodingKey
SASRequestOptionsPreviousTurnIdentifierCodingKey
SASRequestOptionsIsRightHandDriveKey
-[SASRequestOptions setRequestSource:]
<%@ %p; requestSource=%@
;activationDeviceIdentifier=%@
;bulletin=%@
;appBundleIdentifier=%@
;checkForGuideUpdateContext=%@
;directActionEvent=%@
;serverCommandId=%@
;isPronunciationRequest=%i
;pronunciationContext=%@
;text=%@
;speechFileURL=%@
;expectedTimestamp=%0.1f;timestamp=%0.1f;buttonDownTimestamp=%0.1f;isInitialBringUp=%i;useAutomaticEndpointing=%i;useStreamingDictation=%i;acousticId=%i;releaseAudioSessionORC=%i;predictedZLL=%i
;uiPresentationIdentifier=%@
;contextAppInfosForSVC.count=%tu
;testingContext=%@
;is(speech=%i;stark=%i;CPconnected=%i;dnd=%i;rightHandDrive=%i);carDNDStatus=%@
;homeButtonUpFromBeep=%@
;continuityInfo=%@
;requestInfo=%@
;currentLockState=%@
;directActionContextPayload=%@
;carPlayOEMList=%@
;isShortButtonPressAction=%i
;startRecordingSoundId=%@
;originalRequestOptions.requestSource=%@
;presentationMode=%zd
isConnectedToCarPlay
rightHandDrive
isForCarDND
contextAppInfosForSiriViewController
-[SASRequestOptions _updateWithSystemState:forcefully:]
-[SASRequestOptions _presentationIdentifierFromUIPresentationIdentifier:]
Tq,N
activationDeviceIdentifier
T@"NSString",C,N,V_activationDeviceIdentifier
T@"AFBulletin",&,N,V_bulletin
appBundleIdentifier
T@"NSString",C,N,V_appBundleIdentifier
directActionContextPayload
T@"NSDictionary",C,N,V_directActionContextPayload
checkForGuideUpdateContext
T@"SAGuidanceCheckForGuideUpdateContext",C,N,V_checkForGuideUpdateContext
directActionEvent
Tq,N,V_directActionEvent
serverCommandId
T@"NSString",C,N,V_serverCommandId
pronunciationRequest
TB,N,GisPronunciationRequest,V_pronunciationRequest
pronunciationContext
T@"SASPronunciationContext",&,N,V_pronunciationContext
text
T@"NSString",C,N,V_text
speechFileURL
T@"NSURL",C,N,V_speechFileURL
expectedTimestamp
Td,N,V_expectedTimestamp
Td,N,V_timestamp
buttonDownTimestamp
Td,N,V_buttonDownTimestamp
forStark
TB,R,N,GisForStark
currentCarPlaySupportedOEMAppIdList
T@"NSArray",&,N,V_currentCarPlaySupportedOEMAppIdList
TB,N,V_isForCarDND
TB,N,V_isConnectedToCarPlay
carDNDStatus
TQ,N,V_carDNDStatus
TB,N,GisRightHandDrive,V_rightHandDrive
isForAppleTV
TB,R,N
isForEyesFree
forSpeechRequest
TB,R,N,GisForSpeechRequest
initialBringUp
TB,N,GisInitialBringUp,V_initialBringUp
useAutomaticEndpointing
TB,N,V_useAutomaticEndpointing
useStreamingDictation
TB,N,V_useStreamingDictation
homeButtonUpFromBeep
T@"NSNumber",&,N,V_homeButtonUpFromBeep
continuityInfo
T@"NSDictionary",C,N,V_continuityInfo
requestInfo
T@"AFRequestInfo",&,N,V_requestInfo
speechRequestOptions
T@"AFSpeechRequestOptions",&,N,V_speechRequestOptions
acousticIdEnabled
TB,N,V_acousticIdEnabled
releaseAudioSessionOnRecordingCompletion
TB,N,V_releaseAudioSessionOnRecordingCompletion
uiPresentationIdentifier
T@"NSString",&,N,V_uiPresentationIdentifier
instrumentationEvents
T@"NSMutableArray",&,N,V_instrumentationEvents
previousTurnIdentifier
T@"NSUUID",&,N,V_previousTurnIdentifier
T@"NSArray",&,N,V_contextAppInfosForSiriViewController
T@"NSDictionary",&,N,V_testingContext
currentLockState
TQ,N,V_currentLockState
startRecordingSoundId
T@"NSString",C,N,V_startRecordingSoundId
shortButtonPressAction
TB,N,GisShortButtonPressAction,V_shortButtonPressAction
originalRequestOptions
T@"SASRequestOptions",C,N,V_originalRequestOptions
presentationMode
Tq,N,V_presentationMode
SASRequestSourceNotSpecified
SASRequestSourceHomeButton
SASRequestSourceLockButton
SASRequestSourceVirtualButton
SASRequestSourceWiredMicrophone
SASRequestSourceBluetoothHeadset
SASRequestSourceMotionUpGesture
SASRequestSourceMotionDownGesture
SASRequestSourceVoice
SASRequestSourceServerCommand
SASRequestSourceStark
SASRequestSourceStarkPhoneHome
SASRequestSourceStarkVoiceTrigger
SASRequestSourceStarkNotification
SASRequestSourceStarkAppProxy
SASRequestSourceTVRemote
SASRequestSourceTesting
SASRequestSourceStarkSiriButton
SASRequestSourceAccessory
SASRequestSourceContinuity
SASRequestSourceSiriSetup
SASRequestSourceBreadcrumb
SASRequestSourceGuideUpdate
SASRequestSourceKeyboard
SASRequestSourceSpotlightQuerySuggestion
SASRequestSourceSpotlightAskSiriButton
SASRequestSourceTriggerless
SASRequestSourceAssistiveTouch
SASRequestSourceVoiceCommandButton
SASRequestSourceControlCenterRemoteUI
SASRequestSourceRemoteApp
SASRequestSourceNonAppleRemote
SASRequestSourceTapToEdit
SASRequestSourceBackTap
SASRequestSourceKeyboardShortcut
AFDirectActionSourceFromSASRequestSource
SiriUILockStateUnlocked
SiriUILockStateScreenLocked
SiriUILockStatePasscodeLocked
-[SiriBreadcrumbSource configureConnection]_block_invoke_2
-[SiriBreadcrumbSource configureConnection]_block_invoke
-[SiriContinuitySource configureConnection]_block_invoke_2
-[SiriContinuitySource configureConnection]_block_invoke
lockState
TQ,N,V_lockState
unlockedByTouchID
TB,N,V_unlockedByTouchID
assistantIsEnabled
T@"NSNumber",&,N,V_assistantIsEnabled
T@"<SASLockStateMonitorDelegate>",W,N,V_delegate
com.apple.siri.ActivationService.SystemState
com.apple.bluetooth.WirelessSplitterOn
com.apple.bluetooth.GuestConnected
-[SASSystemState isWirelessSplitterOn]
-[SASSystemState isGuestConnected]
-[SASSystemState _updateAccessibilityState]
carPlayConnectionState
Ti,N,V_carPlayConnectionState
TB,N,V_accessibilityShortcutEnabled
applicationStateHelper
T@"SUICApplicationStateHelper",&,N,V_applicationStateHelper
enabled
TB,N,V_enabled
listeners
T@"NSHashTable",&,N,V_listeners
observerWirelessSplitter
T@"AFNotifyObserver",&,N,V_observerWirelessSplitter
observerBluetoothGuestConnected
T@"AFNotifyObserver",&,N,V_observerBluetoothGuestConnected
request
T@"SASActivationRequest",&,N,V_request
buttonTriggerStateActive
TB,N,V_buttonTriggerStateActive
pocketStateManager
T@"SASSiriPocketStateManager",&,N,V_pocketStateManager
preferences
T@"AFPreferences",&,N,V_preferences
analyticsContext
T@"NSDictionary",&,N,V_analyticsContext
requestState
Tq,N,V_requestState
+[SASActivationDecision canActivateForCondition:]
Hey Siri
Double-Tap
+[SASActivationDecision _shouldSiriActivateForSiriSetupWithSystemState:]
<SiriContext contextOverride:%@ speechRequestOptions:%@>
T@"AFSpeechRequestOptions",R,N,V_speechRequestOptions
<SiriLongPressButtonContext contextOverride:%@, utteranceText:%@, source:%@>
utteranceText
source
T@"NSString",C,N,V_utteranceText
Tq,N,V_source
UnknownSiriSpotlightContextSource
SiriSpotlightContextSourceQuerySuggestion
SiriSpotlightContextSourceAskSiriButton
activeDeviceBluetoothIdentifier
<SiriTVLongPressButtonContext contextOverride:%@ buttonDownTimestamp:%@,activeDeviceBluetoothIdentifier:%@>
T@"NSString",C,N,V_activeDeviceBluetoothIdentifier
SBTestingConfigureNextAssistantRecognitionStrings
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
preloadedTestingInput
T@"SiriTestingContext",R,N,V_preloadedTestingInput
previousNode
T@"SASBulletinCacheNode",&,N,V_previousNode
nextNode
T@"SASBulletinCacheNode",&,N,V_nextNode
-[SASBulletinCache insertBulletin:fromFeed:]
-[SASBulletinCache allBulletins]
v24@?0@"NSNumber"8@"NSError"16
-[SiriDirectActionSource configureConnection]_block_invoke_2
-[SiriDirectActionSource configureConnection]_block_invoke
-[SiriDirectActionSource canActivateChangedTo:]
T@"<SiriDirectActionSourceDelegate>",W,N,V_delegate
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
-[SASSignalConnectionListener listener:didReceiveConnection:withContext:]
listener
T@"BSServiceConnectionListener",&,N,V_listener
<SiriLongPressButtonContext contextOverride:%@ buttonDownTimestamp:%@>
wakeScreen
hideOtherWindowsDuringAppearance
rotationStyle
wakeScreen:%@, hideOtherWindowsDuringAppearance:%@, rotationStyle:%@
TB,N,V_wakeScreen
TB,N,V_hideOtherWindowsDuringAppearance
Tq,N,V_rotationStyle
MatchDeviceOrientation
MatchContextOrientation
T@"SiriBluetoothContext",&,N,V_context
type
recordedSpeechURL
Text
RecordedSpeechURL
Unspecified
<%@ %p; %@ - '%@'>
Tq,N,V_type
T@"NSURL",C,N,V_recordedSpeechURL
-[SASSignalServer _setConnection:]
-[SASSignalServer registerButtonIdentifier:withUUID:]
-[SASSignalServer unregisterButtonIdentifier:withUUID:]
-[SASSignalServer registerNonButtonSourceWithType:withUUID:]
-[SASSignalServer unregisterNonButtonSourceWithType:withUUID:]
-[SASSignalServer activationRequestFromButtonIdentifier:context:]
-[SASSignalServer deactivationRequestFromButtonIdentifier:context:options:]
-[SASSignalServer _activationRequestFromDirectActionEvent:context:completion:]
-[SASSignalServer activationRequestFromContinuityWithContext:]
-[SASSignalServer activationRequestFromBreadcrumb]
-[SASSignalServer activationRequestFromSimpleActivation:]
-[SASSignalServer activationRequestFromSpotlightWithContext:]
-[SASSignalServer activationRequestFromTestingWithContext:]
-[SASSignalServer prewarmFromButtonIdentifier:]
-[SASSignalServer prewarmFromButtonIdentifier:longPressInterval:]
-[SASSignalServer cancelPrewarmFromButtonIdentifier:]
-[SASSignalServer buttonDownFromButtonIdentifier:timestamp:]
-[SASSignalServer buttonUpFromButtonIdentifier:deviceIdentifier:timestamp:]
-[SASSignalServer buttonTapFromButtonIdentifier:]
-[SASSignalServer buttonLongPressFromButtonIdentifier:context:]
T@"<SASSignalServerDelegate>",W,N,V_weak_delegate
-[SASPresentationConnectionListener listener:didReceiveConnection:withContext:]
presentationServer
T@"SASPresentationServer",R,N,V_presentationServer
enqueuedButtonEventCompletions
T@"NSMutableArray",&,N,V_enqueuedButtonEventCompletions
pingTimer
T@"NSTimer",&,N,V_pingTimer
<SiriContinuityContext contextOverride:%@ isTemporaryDevice:%@ speechRequestOptions:%@ requestInfo:%@ userActivity:%@>
isTemporaryDevice
userActivity
T@"AFRequestInfo",R,N,V_requestInfo
T@"NSDictionary",R,N,V_userActivity
<SiriBluetoothContext contextOverride:%@ isTemporaryDevice:%@ isEyesFree:%@ address:%@>
isEyesFree
address
T@"NSString",R,N,V_address
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
SiriActivationSource
SASRequestOptionsBuilder
SASOverriddenSystemState
SiriButtonIdentifier
SASHeater
SASSiriPocketStateManager
SiriPunchoutRequest
NSCopying
SASAnalytics
SASMyriadController
SASLockStateMonitorDelegate
NSObject
AFMyriadDelegate
SiriContextOverride
NSSecureCoding
NSCoding
SASPresentationClientInterface
SASPresentationServerInterface
SASPresentationServer
SiriTVActivationSource
SiriClientAdditions
SASBoardServicesConfiguration
SiriVoiceTriggerContext
SiriActivationService
SASRequestOptionsBuilderDataSource
SASRequestOptionsBuilderDataSourceForTesting
SASHeaterDelegate
SASMyriadControllerDelegate
SASBulletinManagerDelegate
SASStateChangeListener
SASPresentationManagerDelegate
SiriSpotlightSource
SiriDirectActionContext
SASPresentationManager
SiriDismissalOptions
SASPresentationDecision
SiriSimpleActivationSource
SiriTestingSource
SiriTestingContext
SiriLongPressButtonSource
SiriButtonSource
SiriActivationSourceContext
SiriPresentationIdentifier
SiriPresentationActivationCancelReason
SiriHomeAffordanceSuppression
SiriActivityAssertion
SiriAssertion
SiriActivationEventType
SASActivationRequest
SASButtonActvationRequest
SASBulletinManager
BBObserverDelegate
SASButtonIdentifierTransport
SASDirectActionEventTransport
SASTimeIntervalTransport
SiriPresentationIdentifierTransport
SiriPresentationActivationCancelReasonTransport
SiriUILockStateTransport
SASRemoteRequestManager
SASRequestOptions
SiriBreadcrumbSource
SiriContinuitySource
SASLockStateMonitor
SASSystemState
SASActivationCondition
SASActivationDecision
SiriContext
SiriSpotlightContext
SiriTVLongPressButtonContext
SiriShortPressButtonContext
SASTestingInputController
SASBulletinCacheNode
SASBulletinCache
SiriDirectActionSource
SASSignalConnectionListener
BSServiceConnectionListenerDelegate
SiriLongPressButtonContext
SiriPresentationOptions
SiriBluetoothDeviceSource
SASTestingInput
SASSignalClientInterface
SASSignalServerInterface
SASSignalServer
SASPresentationConnectionListener
SASPresentationModel
SiriContinuityContext
SiriBluetoothContext
init
UUID
UUIDString
invalidate
dealloc
sharedSystemState
siriIsSupported
siriIsEnabled
numberWithBool:
boolValue
isEnabled
isActive
activeChangedTo:
identifier
setIdentifier:
.cxx_destruct
_connection
_lock
_active
_knowsIfActive
_identifier
isMainThread
processInfo
systemUptime
_siriIsEnabled
setPresentationIdentifier:
_createRequestOptionsForRequest:withDataSource:
presentationIdentifier
requestOptionsBuilder:uiPresentationIdentifierWithActivation:activationPresentation:
requestSource
systemState
initWithRequestSource:uiPresentationIdentifier:systemState:
requestOptionsBuilder:isPredictedRecordRouteIsZLLWithActiviation:
setPredictedRecordRouteIsZLL:
isButtonRequest
buttonDownTimestamp
accessibilityShortcutEnabled
isForStark
setButtonDownTimestamp:
context
setShortButtonPressAction:
buttonIdentifier
setTimestamp:
computedActivationTime
requestOptionsBuilder:isRequestInitialWithActiviation:
setInitialBringUp:
requestOptionsBuilder:shouldRequestUseAutomaticEndpointingWithActiviation:
setUseAutomaticEndpointing:
requestOptionsBuilder:isAcousticIdAllowedWithActiviation:
setAcousticIdEnabled:
isDirectActionRequest
directActionEvent
setDirectActionEvent:
payload
mutableCopy
allKeys
containsObject:
removeObjectForKey:
objectForKey:
setAppBundleIdentifier:
setDirectActionContextPayload:
bulletin
setBulletin:
bundleId
notification
setNotification:fromSourceApp:
appBundleIdentifier
isBluetoothRequest
address
setActivationDeviceIdentifier:
activeDeviceBluetoothIdentifier
length
isContinuityRequest
requestInfo
setRequestInfo:
userActivity
setContinuityInfo:
isSpotlightRequest
utteranceText
setText:
isTestingRequest
requestOptionsBuilder:optionsForOverriding:withActiviation:
requestOptionsBuilder:currentLockStateForActivation:
setCurrentLockState:
speechRequestOptions
setSpeechRequestOptions:
siriIsRestricted
buildOptionsWithRequest:presentationIdentifier:dataSource:
setSystemState:
_systemState
_presentationIdentifier
stringByAppendingString:
setContextOverride:
lockStateMonitor
setLockStateMonitor:
contextOverride
currentSpokenLanguageCodeForSystemState:
hasUnlockedSinceBootForSystemState:
deviceIsBlockedForSystemState:
deviceIsPasscodeLockedForSystemState:
pocketStateShouldPreventVoiceTriggerForSystemState:
isPadForSystemState:
smartCoverClosedForSystemState:
accessibilityShortcutEnabledForSystemState:
carDNDActiveForSystemState:
isConnectedToCarPlayForSystemState:
isConnectedToTrustedCarPlayForSystemState:
siriIsEnabledForSystemState:
siriIsRestrictedForSystemState:
siriIsSupportedForSystemState:
initWithSystemState:contextOverride:
currentSpokenLanguageCode
hasUnlockedSinceBoot
deviceIsBlocked
deviceIsPasscodeLocked
pocketStateShouldPreventVoiceTrigger
isPad
smartCoverClosed
carDNDActive
isConnectedToCarPlay
isConnectedToTrustedCarPlay
_contextOverride
stringWithFormat:
stringWithSiriButtonIdentifier:
_setPreparationStartTime:
_cancelPreparation
_suggestPreheat
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setPreheatTimer:
_preparationStartTime
preheatTimer
delegate
heaterSuggestsPreheating:
_updatePredictedRouteIsZLL
sharedAVSystemController
pickableRoutesForCategory:andMode:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
isEqualToString:
prepareForUseAfterTimeInterval:
cancelPreparation
setDelegate:
predictedRecordRouteIsZLL
_predictedRecordRouteIsZLL
_delegate
_preheatTimer
_init
sharedManager
bundleIdentifier
setBundleIdentifier:
setUrl:
punchoutStyle
setPunchoutStyle:
copyWithZone:
_bundleIdentifier
_url
_punchoutStyle
service
xcTestingActive
_enqueueAnalyticsEvent:
shouldLogAnalyticsEvents
flushPendingAnalyticsEventQueue
sharedAnalytics
logEvent:
pendingAnalyticsEventQueue
initWithCapacity:
setPendingAnalyticsEventQueue:
count
removeObjectsInRange:
addObject:
copy
logEvents:
analytics
enqueueCurrentAnalyticsEventWithType:context:
setShouldLogAnalyticsEvents:
_analyticsEventQueue
_shouldLogAnalyticsEvents
_pendingAnalyticsEventQueue
configurationForDefaultMainDisplayMonitor
_updateRaiseToWakeTimeForTransition:
setTransitionHandler:
monitorWithConfiguration:
initWithDelegate:
isVoiceRequest
isVoiceTrigger
myriadContext
setCanceledByMyriad:
startAdvertisingFromInTaskTriggerWithContext:
startAdvertisingFromInTaskVoiceTrigger
startAdvertisingFromVoiceTriggerAdjusted:withContext:
startAdvertisingFromVoiceTriggerAdjusted:
startAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromDirectTrigger
activationEvent
currentCoordinator
transitionReasons
shouldContinue:
shouldAbort:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
didChangeLockState:
didChangeLockState:toState:
willStartWithSession:
willEndSession:
shouldAbortAnotherDeviceBetter:
shouldUnduck:
shouldHandleEmergency:
advertisingWillBeginWithDelay:advertisingInterval:
advertisingDidBegin:
advertisingDidEnd:
listeningDidBegin:
listeningDidEnd:
activateForRequest:visible:
activateForInTaskRequest:isVisible:
canceledByMyriad
_myriadCoordinator
_isLocked
_myriadFinishedSemaphore
_displayMonitor
_raiseToWakeTime
_lockStateMonitor
_canceledByMyriad
setCurrentSpokenLanguageCode:
setUnlockedSinceBoot:
setDeviceIsBlocked:
setDeviceIsPasscodeLocked:
setPocketStateShouldPreventVoiceTrigger:
setPad:
setSmartCoverClosed:
setAccessibilityShortcutEnabled:
setCarDNDActive:
setConnectedToTrustedCarPlay:
setConnectedToCarPlay:
setSiriIsEnabled:
setSiriIsRestricted:
setSiriIsSupported:
unlockedSinceBoot
connectedToCarPlay
connectedToTrustedCarPlay
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
overrideCurrentSpokenLanguageCode:
overrideHasUnlockedSinceBoot:
overrideDeviceIsBlocked:
overrideDeviceIsPasscodeLocked:
overridePocketStateShouldPreventVoiceTrigger:
overrideIsPad:
overrideSmartCoverClosed:
overrideAccessibilityShortcutEnabled:
overrideCarDNDActive:
overrideConnectedToTrustedCarPlay:
overrideConnectedToCarPlay:
overrideSiriIsEnabled:
overrideSiriIsRestricted:
overrideSiriIsSupported:
_currentSpokenLanguageCode
_unlockedSinceBoot
_deviceIsBlocked
_deviceIsPasscodeLocked
_pocketStateShouldPreventVoiceTrigger
_pad
_smartCoverClosed
_accessibilityShortcutEnabled
_carDNDActive
_connectedToCarPlay
_connectedToTrustedCarPlay
_siriIsRestricted
_siriIsSupported
initWithKeyOptions:valueOptions:capacity:
setObject:forKey:
_unregisterConnection:
setInvalidationHandler:
setInterruptionHandler:
configureConnection:
_setConnection:
unregisterSiriPresentationIdentifier:
connection
stringWithSiriPresentationIdentifier:
remoteProcess
hasEntitlement:
invalidated
setConnection:
serviceQuality
setServiceQuality:
interface
setInterface:
setInterfaceTarget:
serverDidInvalidateConnection:
activate
waitForConnectBlocks
setWaitForConnectBlocks:
remoteTarget
registerPresentationIdentifier:
unregisterPresentationIdentifier:
willDismiss
didDismiss
didPresentSiri
resetSiriToActive
failedToPresentSiriWithError:
allBulletins
bulletinsOnLockScreen
bulletinForIdentifier:
handleMarkBulletinWithIdentifier:asRead:
speechRequestStartedFromSiriOrb
speechRequestCancelledFromSiriOrb
pong
protocolForProtocol:
presentationRequestedWithPresentationOptions:requestOptions:
presentationDismissalRequestedWithOptions:
handleRequestWithOptions:
presentationisIdleAndQuiet
cancelTTS
preheat
cancelPreheat
cancelPendingActivationEventWithReason:
wakeScreenAfterActivation
handleTestingActivation:
handleButtonDownFromButtonIdentifier:timestamp:
handleButtonUpFromButtonIdentifier:deviceIdentifier:timestamp:
handleButtonTapFromButtonIdentifier:
handleButtonLongPressFromButtonIdentifier:deviceIdentifier:timestamp:
updateCurrentLockState:
updateActiveInterfaceOrientation:willAnimationWithDuration:
bulletinManagerDidChangeBulletins
deviceWonMyriadElection
pocketStateFetchDeterminedShouldCancelWake:
ping
interfaceWithServer:client:
userInteractive
pongWithPresentationIdentifier:
siriPresentationIdentifier
registerSiriPresentation:withIdentifier:
siriPresentationWillDismissWithIdentifier:
siriPresentationDismissedWithIdentifier:
siriPresentationDisplayedWithIdentifier:
siriPresentationFailureWithIdentifier:error:
speechRequestStateDidChange:
markBulletinWithIdentifier:asRead:
serverForConnection:
workspaceServiceInjector
setWorkspaceServiceInjector:
setInvalidated:
weak_delegate
setWeak_delegate:
_invalidated
_workspaceServiceInjector
_waitForConnectBlocks
_weak_delegate
_initWithButtonIdentifier:
setLongPressInterval:
setContext:
setActiveDeviceBluetoothIdentifier:
activationSourceForIdentifier:
setDeviceIdentifier:
_deviceIdentifier
deviceIdentifier
longPressInterval
_longPressInterval
_context
getServiceSetting:key:
isServiceSupported:
device
ac_isEyesFree
setMachServiceIdentifier:
setPresentationDomain:
setSignalDomain:
setSignalIdentifier:
presentationDomain
signalDomain
signalIdentifier
configuration
domainForService:
identifierForService:
machServiceIdentifier
_machServiceIdentifier
_presentationDomain
_signalDomain
_signalIdentifier
setSources:
setXcTestingActive:
setHeater:
heater
setSiriTetherIsAttached:
setSiriTether:
siriTether
setAttachmentStatusChangedHandler:
manager
setRemoteRequestManager:
addStateChangeListener:
setBulletinManager:
bulletinManager
_registerForVoiceTrigger
setAvExternalButtonEvents:
setButtonDownHasOccurredSinceActivation:
setPresentationManagerDelegate:
removeStateChangeListener:
requestState
currentThread
qualityOfService
sources
allValues
initWithPayload:
initWithDirectActionEvent:context:
setRequest:
setButtonTriggerStateActive:
setPocketStateManager:
afPreferences
setPreferences:
_requestState
setRequestState:
canActivateForCondition:
setCanActivateFromDirectActionSource:
_notifySourcesOfCanActivateFromDirectActionSourceChange:
canActivateChangedTo:
unregisterSiriPresentationWithIdentifier:
presentationWithPresentationIdentifierBecameActive:
presentationWithPresentationIdentifierBeganStopping:
presentationWithPresentationIdentifierBecameOff:
_shouldRejectNewActivations:
_updateCanActivateFromDirectActionSource
activePresentationsAreIdleAndQuiet
isValid
presentationsAreIdleAndQuiet
initWithButtonIdentifier:context:
handleActivationRequest:
initWithDeactivationOptions:
dismissSiriWithOptions:
scheduledTimerWithTimeInterval:repeats:block:
isConnectedTo188
_B188ActivationEvent:context:options:
initWithContextOverride:
buttonLongPressFromButtonIdentifier:context:
sharedPreferences
assistantIsEnabled
stringWithSiriActivationEventType:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
_cancelTTS
_defrost
_attachToTether
cancelAllPreheatedPresentations
initWithSiriButtonIdentifier:
initWithTimeInterval:
sendButtonEventCompletionToPresentations:
_recordTimeIfNeededForButtonIdentifier:buttonDownTimestamp:
_handleTapSynthesisIfNeededForButtonIdentifier:buttonUpTimestamp:
_buttonIsTVMicrophoneButton:
activationRequestFromButtonIdentifier:context:
_cancelPendingActivationEventWithReason:
_buttonIsAVExternalButton:
isATV
buttonDownHasOccurredSinceActivation
avExternalButtonEvents
doubleValue
activationTimestamp
buttonTapFromButtonIdentifier:
designModeIsEnabled
_handleDesignModeRequest
initWithContinuityContext:
initWithVoiceTriggerContext:
initWithBreadcrumbRequest
initWithSimpleActivation:
initWithSpotlightContext:
initWithVoiceTriggerRequest
initWithTestingContext:
handleActivationRequest:systemState:
activationType
eventSource
date
timeIntervalSince1970
_cancelActivationPreparationForSetup
isUIFreeRequestSource
nextPresentationToActivate
testingInputController
dequeuePreloadedTestingContext
testingContext
setTestingContext:
_updateRequestOptionsWithTestingContextFromActivationRequest:requestOptions:
activePresentations_handleRequestWithOptions:
_activatePresentationWithIdentifier:requestOptions:analyticsContext:
_dismissSiri:
_handlePocketStateFetchForScreenWakeForPresentationIdentifier:requestOptions:presentationOptions:
isHTTRequestSource
setActivationTimestamp:
presentationWithPresentationIdentifierBeganStarting:
uiPresentationIdentifier
setWakeScreen:
_isVoiceActivationMaskNecessaryWithRequestOptions:
setRotationStyle:
presentationRequestedWithPresentationIdentifier:presentationOptions:requestOptions:
activeAndStoppingPresentations_presentationDismissalRequestedWithOptions:
activePresentations_cancelTTS
preheatNextPresentationToActivate
attach:
stringWithSiriPresentationActivationCancelReason:
startingPresentations_cancelPendingActivationWithReason:
_isInitialRequest
isConnectedToEyesFreeDevice
lockState
_preheatPresentation
initWithDeactivationOptions:animated:requestCancellationReason:dismissalReason:shouldTurnScreenOff:
activePresentations_deviceWonMyriadElection
numberWithUnsignedInteger:
activeAndStartingPresentations_updateCurrentLockState:
activePresentations_bulletinManagerDidChangeBulletins
_notifySourcesOfActiveChange:
initWithDeactivationOptions:animated:dismissalReason:
containsRecognitionStrings
containsAudioInput
firstObject
fileURLWithPath:isDirectory:
checkResourceIsReachableAndReturnError:
setSpeechFileURL:
failedTest:withFailure:
bulletinManagerDidChangeBulletins:
callStateChangedToIsActive:isOutgoing:
presentationManager:didChangeShouldRejectNewActivationsTo:
presentationManager:didEncounterError:
registerActivationSource:withIdentifier:
unregisterActivationSourceIdentifier:
deactivationRequestFromButtonIdentifier:context:options:
prewarmFromButtonIdentifier:longPressInterval:
cancelPrewarmFromButtonIdentifier:
buttonDownFromButtonIdentifier:timestamp:
buttonUpFromButtonIdentifier:deviceIdentifier:timestamp:
activationRequestFromDirectActionEvent:context:completion:
activationRequestFromContinuityWithContext:
activationRequestFromVoiceTriggerWithContext:
activationRequestFromBreadcrumb
activationRequestFromSimpleActivation:
activationRequestFromSpotlightWithContext:
activationRequestFromVoiceTrigger
activationRequestFromTestingWithContext:
activationRequestFromTestRunnerWithContext:
_unregisterForVoiceTrigger
setAfPreferences:
siriTetherIsAttached
voiceTriggerNotifyTokenIsValid
setVoiceTriggerNotifyTokenIsValid:
remoteRequestManager
setTestingInputController:
canActivateFromDirectActionSource
_pocketStateFetchingInProgressForHeadsetActivation
_setPocketStateFetchingInProgressForHeadsetActivation:
presentationManager
setPresentationManager:
_buttonTrigger
_preheatedPresentation
_voiceTriggerNotifyToken
_voiceTriggerDispatchQueue
_B188ActivationTimer
_myriadController
_xcTestingActive
_siriTetherIsAttached
_voiceTriggerNotifyTokenIsValid
_buttonDownHasOccurredSinceActivation
_canActivateFromDirectActionSource
_afPreferences
_sources
_heater
_siriTether
_activationTimestamp
_bulletinManager
_remoteRequestManager
_testingInputController
_avExternalButtonEvents
_presentationManager
configureConnection
endpointForMachName:service:instance:
connectionWithEndpoint:
unregisterNonButtonSourceWithType:withUUID:
registerNonButtonSourceWithType:withUUID:
setActivationHandler:
activateWithContext:
integerValue
caseInsensitiveCompare:
_intentIdentifiersFromBulletin:notification:
containsString:
valueForKey:
sectionID
sourceIdentifier
setWithObjects:
decodeObjectOfClasses:forKey:
intentIDs
intentIdentifiers
_initWithDirectActionEvent:appBundleId:conversationGUID:fullName:phoneOrEmailAddress:
numberWithInteger:
dictionaryWithDictionary:
setObject:forKeyedSubscript:
messageAmbiguousDirectActionWithAppBundleId:
messageComposeDirectActionWithAppBundleId:
messageComposeNewThreadDirectActionWithAppBundleId:fullName:phoneOrEmailAddress:
messageReadDirectActionWithAppBundleId:conversationGUID:
messageReplyDirectActionWithAppBundleId:conversationGUID:
mapSearchDirectActionWithAppBundleId:
musicSearchDirectActionWithAppBundleId:
phoneAmbiguousDirectActionWithAppBundleId:
phoneCallDirectActionWithAppBundleId:
initWithBBBulletin:
initWithUNNotification:
isMessagingDirectAction
_payload
_bulletin
_notification
_presentationsLock_cancelAllPreheatedPresentations
initWithPresentationServer:
_notifyDelegateOfShouldRejectNewActivationsChangeIfNecessary
_presentationsLock_nextPresentationToActivate
presentationServer
_shouldRejectNewActivations
enqueuedButtonEventCompletions
_sendBlockToActivePresentations:
initWithSiriPresentationActivationCancelReason:
_sendBlockToStartingPresentations:
initWithSiriUILockState:
_sendBlockToStoppingPresentations:
_canTransitionFromState:toState:presentationIdentifier:
_canTransitionToOffFromState:
_canTransitionToHeatedFromState:
_canTransitionToStoppingFromState:
_canTransitionToStartingFromState:
_canTransitionToActiveFromState:presentationIdentifier:
_transitionPresentationWithPresentationIdentifier:toState:
flushEnqueuedButtonEventCompletions
_setupPingTimerForPresentationIdentifier:
_teardownPingTimerForPresentationIdentifier:
activationPresentationForPresentationIdentifiers:
_sendBlock:toPresentationWithPresentationIdentifier:
_shouldKeepPingingForRequestState:
_waitForPongFromPresentationWithPresentationIdentifier:
timerWithTimeInterval:repeats:block:
pingTimer
setPingTimer:
currentRunLoop
addTimer:forMode:
_forceAllPresentationsOff
_canTransitionFromState:toState:
activeSpringBoardPresentation_updateActiveInterfaceOrientation:willAnimateWithDuration:
presentationWithPresentationIdentifier:pocketStateFetchDeterminedShouldCancelWake:
presentationWithPresentationIdentifierWakeScreenAfterActivation:
presentations
setPresentations:
_lastReportedShouldRejectNewActivations
_presentationManagerDelegate
_presentations
initWithDeactivationOptions:animated:requestCancellationReason:
deactivationOptions
animated
reason
dismissalReason
shouldTurnScreenOff
initWithDeactivationOptions:animated:
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
_animated
_shouldTurnScreenOff
_deactivationOptions
_reason
_dismissalReason
activateFromSource:
initWithPPTContext:siriContextOverride:
initWithRecognitionStrings:siriContextOverride:
initWithAudioInput:siriContextOverride:
initWithPPTContext:
initWithRecognitionStrings:
initWithAudioInput:
_testingContext
setButtonIdentifier:
setLock_activityAssertions:
setCurrentTimeGenerator:
unregisterButtonIdentifier:withUUID:
registerButtonIdentifier:withUUID:
lock_activityAssertions
reference
initWithString:
timestamp
removeObject:
initWithIdentifier:reference:reason:timestamp:invalidationBlock:
currentTimeGenerator
prepareForActivationWithTimestamp:
_timestampForSpeechInteractionActivityWithTimestamp:
_shouldReplaceSpeechInteractionActivityTimestampWithPrewarmTimestamp
lastObject
longPressButtonForIdentifier:
prepareForActivation
speechInteractionActivityWithTimestamp:
didRecognizeButtonSinglePressUp
didRecognizeLongPress
_buttonIdentifier
_lock_activityAssertions
_currentTimeGenerator
cancelReason
stringWithSiriHomeAffordanceSuppression:
invalidatedAtTimestamp:
_reference
_timestamp
_invalidationBlock
setActivationTime:
setButtonDownTime:
setActivationType:
requestSourceForButtonIdentifier:
setRequestSource:
setActivationEvent:
activationEventTime
source
isDeviceButtonRequest
activationTime
isEyesFree
isHoldToTalkSource
isEyesFreeRequestSource
buttonDownTime
_waketimeMIB
_waketimeMIBSize
_activationType
_activationEvent
_activationTime
_buttonDownTime
_requestSource
_setupObserver
setObserverFeed:
title
cachedBulletinForID:
setRead:
_bulletinsDidChange
_displayNameForBulletin:
setDisplayName:
addBulletinCompletionWithBulletin:forFeed:
bulletinID
availableOnLockScreen
setAvailableOnLockScreen:
bbBulletin
insertBulletin:fromFeed:
removeBulletinForID:
modifyBulletinCompletionWithBulletin:
observer:purgeReferencesToBulletinID:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:updateGlobalSettings:
observer:noteSectionParametersChanged:forSectionID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:noteBulletinsLoadedForSectionID:
_observer
_bulletinCache
_bulletinsOnLockScreen
_identifierMatchesSiriButtonIdentifier:
siriButtonIdentifier
decodeObjectForKey:
setEvent:
event
intValue
initWithAFDirectActionEvent:
_event
setTransport:
transport
timeInterval
_transport
longValue
initWithSiriPresentationIdentifier:
unsignedIntegerValue
SiriUILockState
setRemoteRequestWatcher:
remoteRequestWatcher
_handleRemotePrewarmWithInfo:
setPrewarmHandler:
_handleNewRemoteRequestWithInfo:
setNewRequestHandler:
_handleRemoteRequestDismissalWithReason:options:analyticsContext:
setDismissalHandler:
initWithSpeechRequestOptions:
setNewSpeechRequestHandler:
invalidateIntentDelivery
initWithBundleIdentifier:
deliverIntent:reply:
setIntentHandler:
initWithBundleIdentifier:intentForwardingAction:
deliverIntentForwardingActionWithResponseHandler:
setIntentForwardingActionHandler:
_requestWatcherVoiceActivationEnabled
_handleRequestWatcherVoiceTriggerRequestWithInfo:
text
arrayWithObjects:count:
initWithRequestInfo:
setHasPendingVoiceTriggerActivation:
setPendingVoiceTriggerActivationInfo:
currentVoiceTriggerRestriction
setCurrentVoiceTriggerRestriction:
pendingVoiceTriggerRestrictionCount
_handlePendingVoiceTriggerActivationsWithInfo:
logEventWithType:context:
setPendingVoiceTriggerRestrictionCount:
hasPendingVoiceTriggerActivation
pendingVoiceTriggerActivationInfo
_processPendingVoiceTriggerActivationsWithInfo:delay:
currentAppIntentDeliverer
setCurrentAppIntentDeliverer:
_hasPendingVoiceTriggerActivation
_remoteRequestWatcher
_currentAppIntentDeliverer
_currentVoiceTriggerRestriction
_pendingVoiceTriggerRestrictionCount
_pendingVoiceTriggerActivationInfo
initWithRequestSource:uiPresentationIdentifier:
_configureStreamingDictationForSource:
_updateWithSystemState:forcefully:
setUseStreamingDictation:
activationDeviceIdentifier
directActionContextPayload
checkForGuideUpdateContext
setCheckForGuideUpdateContext:
serverCommandId
setServerCommandId:
isPronunciationRequest
setPronunciationRequest:
pronunciationContext
setPronunciationContext:
speechFileURL
expectedTimestamp
setExpectedTimestamp:
isInitialBringUp
useAutomaticEndpointing
useStreamingDictation
homeButtonUpFromBeep
setHomeButtonUpFromBeep:
continuityInfo
acousticIdEnabled
releaseAudioSessionOnRecordingCompletion
setReleaseAudioSessionOnRecordingCompletion:
contextAppInfosForSiriViewController
setContextAppInfosForSiriViewController:
setIsConnectedToCarPlay:
isForCarDND
setIsForCarDND:
carDNDStatus
setCarDNDStatus:
currentLockState
currentCarPlaySupportedOEMAppIdList
setCurrentCarPlaySupportedOEMAppIdList:
isShortButtonPressAction
instrumentationEvents
setInstrumentationEvents:
startRecordingSoundId
setStartRecordingSoundId:
originalRequestOptions
setOriginalRequestOptions:
presentationMode
setPresentationMode:
isRightHandDrive
setRightHandDrive:
decodePropertyListForKey:
decodeDoubleForKey:
encodeDouble:forKey:
previousTurnIdentifier
appendFormat:
isForSpeechRequest
isB288Activation
absoluteString
_isTypeToSiriPermittedAndEnabledForRequestOptions
_presentationIdentifierFromUIPresentationIdentifier:
foregroundAppInfosForPresentationIdentifier:
isEqualToArray:
isForEyesFree
initWithRequestSource:
isForAppleTV
updateIfNeededWithSystemState:
setUiPresentationIdentifier:
setPreviousTurnIdentifier:
_pronunciationRequest
_isForCarDND
_isConnectedToCarPlay
_rightHandDrive
_initialBringUp
_useAutomaticEndpointing
_useStreamingDictation
_acousticIdEnabled
_releaseAudioSessionOnRecordingCompletion
_shortButtonPressAction
_activationDeviceIdentifier
_appBundleIdentifier
_directActionContextPayload
_checkForGuideUpdateContext
_directActionEvent
_serverCommandId
_pronunciationContext
_text
_speechFileURL
_expectedTimestamp
_buttonDownTimestamp
_currentCarPlaySupportedOEMAppIdList
_carDNDStatus
_homeButtonUpFromBeep
_continuityInfo
_requestInfo
_speechRequestOptions
_uiPresentationIdentifier
_instrumentationEvents
_previousTurnIdentifier
_contextAppInfosForSiriViewController
_currentLockState
_startRecordingSoundId
_originalRequestOptions
_presentationMode
array
componentsJoinedByString:
setLockState:
isBlocked
isScreenOn
unlockedByTouchID
setUnlockedByTouchID:
setAssistantIsEnabled:
_unlockedByTouchID
_lockState
_assistantIsEnabled
_updateAccessibilityState
monitorCarSessions
setApplicationStateHelper:
weakObjectsHashTable
setListeners:
initWithName:options:queue:delegate:
listeners
languageCode
bestSupportedLanguageCodeForLanguageCode:
applicationStateHelper
foregroundAppInfosForCarPlay
foregroundAppInfos
state
_internalAlwaysEyesFreeEnabled
_deviceIsUnlocked
_mapsAppIsVisibleOnLockscreen
setEnabled:
enabled
isCurrentLocaleNativelySupported
_initForTesting
deviceScreenIsOn
isInActiveCall
isWirelessSplitterOn
isGuestConnected
carDNDActiveOrEyesFreeAndShouldHaveFullScreenPresentation
carPlayConnectionState
setCarPlayConnectionState:
observerWirelessSplitter
setObserverWirelessSplitter:
observerBluetoothGuestConnected
setObserverBluetoothGuestConnected:
_enabled
_carPlayConnectionState
_applicationStateHelper
_listeners
_observerWirelessSplitter
_observerBluetoothGuestConnected
request
buttonTriggerStateActive
pocketStateManager
preferences
analyticsContext
setAnalyticsContext:
_buttonTriggerStateActive
_request
_pocketStateManager
_preferences
_analyticsContext
alwaysAllowVoiceActivation
_shouldSiriActivateForSiriSetupWithSystemState:
requiresUserInteraction
disableAssistantWhilePasscodeLocked
isTemporaryDevice
stringWithSiriSpotlightContextSource:
setUtteranceText:
setSource:
_utteranceText
_source
_activeDeviceBluetoothIdentifier
_registerForTestingNotifications
defaultCenter
_testingStringsDidChange:
addObserver:selector:name:object:
_testingAudioInputPathsDidChange:
removeObserver:
object
preloadedTestingInput
_preloadedTestingInput
previousNode
setPreviousNode:
nextNode
setNextNode:
_previousNode
_nextNode
_isFeedRelevant:
_findNodeForBulletinID:
_deleteNode:
_purgeOldestNodes
dictionary
_count
_oldestNode
_newestNode
activationRequestFromDirectActionEvent:context:
activateWithContext:completion:
setDomain:
setService:
listenerWithConfigurator:
setListener:
listener
listener:didReceiveConnection:withContext:
_listener
wakeScreen
hideOtherWindowsDuringAppearance
rotationStyle
setHideOtherWindowsDuringAppearance:
_wakeScreen
_hideOtherWindowsDuringAppearance
_rotationStyle
initWithBluetoothDevice:
bluetoothDeviceForIdentifier:bluetoothDevice:
deactivate
setType:
setRecordedSpeechURL:
type
recordedSpeechURL
_type
_recordedSpeechURL
prewarmFromButtonIdentifier:
_registerSourceForIdentifier:
_unregisterSourceForIdentifier:
_activationRequestFromDirectActionEvent:context:completion:
setValue:forKey:
removeAllObjects
setEnqueuedButtonEventCompletions:
_presentationServer
_enqueuedButtonEventCompletions
_pingTimer
sharedInstance
initWithUUIDString:
deviceFromIdentifier:
numberWithInt:
initWithUserActivity:
_isTemporaryDevice
_userActivity
_isEyesFree
_address
@16@0:8
v16@0:8
B16@0:8
Vv24@0:8@16
v24@0:8@16
@"BSServiceConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@40@0:8@16q24@32
@32@0:8@16@24
q16@0:8
v24@0:8q16
@"SASSystemState"
@"SiriContextOverride"
@24@0:8q16
v24@0:8d16
d16@0:8
v20@0:8B16
@"<SASHeaterDelegate>"
@"NSTimer"
@24@0:8^{_NSZone=}16
@"NSURL"
v32@0:8q16@24
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8Q16
v32@0:8Q16Q24
v24@0:8f16f20
v24@0:8@"AFMyriadSession"16
v24@0:8@"AFMyriadCoordinator"16
@24@0:8@16
B28@0:8@16B24
v24@0:8B16B20
@"<SASMyriadControllerDelegate>"
@"AFMyriadCoordinator"
@"NSObject<OS_dispatch_semaphore>"
@"FBSDisplayLayoutMonitor"
@"SASLockStateMonitor"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSNumber"
Vv32@0:8@16@24
Vv24@0:8@"SiriPresentationIdentifierTransport"16
Vv24@0:8@"NSError"16
@"NSArray<__AFBulletin__>"16@0:8
@"AFBulletin"24@0:8@"NSString"16
Vv32@0:8@"NSString"16@"NSNumber"24
Vv40@0:8@16@24@32
Vv32@0:8@"SiriPresentationOptions"16@"SASRequestOptions"24
Vv24@0:8@"SiriDismissalOptions"16
Vv24@0:8@"SASRequestOptions"16
Vv24@0:8@"SiriPresentationActivationCancelReasonTransport"16
B24@0:8@"SASActivationRequest"16
Vv32@0:8@"SASButtonIdentifierTransport"16@"SASTimeIntervalTransport"24
Vv40@0:8@"SASButtonIdentifierTransport"16@"NSString"24@"SASTimeIntervalTransport"32
Vv24@0:8@"SASButtonIdentifierTransport"16
Vv24@0:8@"SiriUILockStateTransport"16
Vv32@0:8@"NSNumber"16@"SASTimeIntervalTransport"24
Vv24@0:8@"NSNumber"16
@"BSServiceConnectionEndpointInjector"
@"BSServiceConnection<BSServiceConnectionHost>"
@"<SASPresentationServerDelegate>"
@"SiriLongPressButtonContext"
@40@0:8@16@24@32
@"SASRequestOptions"40@0:8@"SASRequestOptionsBuilder"16@"SASRequestOptions"24@"SASActivationRequest"32
B32@0:8@16@24
@40@0:8@16@24q32
Q32@0:8@16@24
B32@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24
@"NSString"40@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24q32
Q32@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24
v24@0:8@"SASHeater"16
v24@0:8@"SASMyriadController"16
v24@0:8@"SASBulletinManager"16
v28@0:8@16B24
v32@0:8@16q24
v28@0:8@"SASPresentationManager"16B24
v32@0:8@"SASPresentationManager"16q24
B24@0:8q16
v32@0:8@16@24
v40@0:8q16@24@32
v32@0:8q16d24
v40@0:8q16@24d32
v40@0:8q16@24@?32
@"SASMyriadController"
@"AFPreferences"
@"NSMutableDictionary"
@"SASHeater"
@"AFSiriTether"
@"SASBulletinManager"
@"SASRemoteRequestManager"
@"SASTestingInputController"
@"SASPresentationManager"
@56@0:8q16@24@32@40@48
@"NSDictionary"
@"BBBulletin"
@"UNNotification"
B32@0:8q16q24
B40@0:8q16q24q32
v32@0:8@?16q24
v24@0:8@?16
v32@0:8q16q24
v28@0:8q16B24
@"<SASPresentationManagerDelegate>"
@24@0:8Q16
@28@0:8Q16B24
@36@0:8Q16B24Q28
@36@0:8Q16B24q28
@48@0:8Q16B24q28Q36B44
q24@0:8@16
@"SiriContext"16@0:8
@24@0:8d16
@"<SiriAssertion>"16@0:8
@"<SiriAssertion>"24@0:8d16
d24@0:8d16
@?16@0:8
@56@0:8@16@24@32d40@?48
q24@0:8q16
@32@0:8q16@24
[12i]
@"SiriContext"
v52@0:8@16@24Q32B40@?44
v40@0:8@16@24Q32
v40@0:8@16@24@32
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v32@0:8@"BBObserver"16@"BBGlobalSettings"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v32@0:8@16Q24
@"BBObserver"
@"SASBulletinCache"
@"<SASBulletinManagerDelegate>"
v32@0:8@16d24
v40@0:8q16Q24@32
@"AFRemoteRequestWatcher"
@"INUIAppIntentDeliverer"
@"AFRequestInfo"
@40@0:8q16@24@32
@"AFBulletin"
@"SAGuidanceCheckForGuideUpdateContext"
@"SASPronunciationContext"
@"NSArray"
@"AFSpeechRequestOptions"
@"NSUUID"
@"SASRequestOptions"
@"<SASLockStateMonitorDelegate>"
i16@0:8
v20@0:8i16
@"SUICApplicationStateHelper"
@"NSHashTable"
@"AFNotifyObserver"
@"SASActivationRequest"
@"SASSiriPocketStateManager"
@"SiriTestingContext"
@"SASBulletinCacheNode"
B24@0:8Q16
v32@0:8@16@?24
@"<SiriDirectActionSourceDelegate>"
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
@"BSServiceConnectionListener"
@"SiriBluetoothContext"
Vv40@0:8@16@24@?32
Vv32@0:8@"SASButtonIdentifierTransport"16@"NSString"24
Vv32@0:8@"NSNumber"16@"NSString"24
Vv32@0:8@"SASButtonIdentifierTransport"16@"SiriContext"24
Vv32@0:8@"SASDirectActionEventTransport"16@"SiriDirectActionContext"24
Vv40@0:8@"SASDirectActionEventTransport"16@"SiriDirectActionContext"24@?<v@?@"NSNumber"@"NSError">32
Vv24@0:8@"SiriContinuityContext"16
Vv24@0:8@"SiriSpotlightContext"16
Vv24@0:8@"SiriTestingContext"16
Vv32@0:8@"SASButtonIdentifierTransport"16@"SiriLongPressButtonContext"24
Vv40@0:8@"SASButtonIdentifierTransport"16@"SiriContext"24@"SiriDismissalOptions"32
v40@0:8@16@24@?32
@"<SASSignalServerDelegate>"
@"SASPresentationServer"
