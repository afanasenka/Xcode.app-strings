r@333333
P@333333
T@333333
initWithFrame:
preferredFontForTextStyle:
configurationWithFont:scale:
setPreferredSymbolConfiguration:
addSubview:
bounds
setFrame:
setProgress:animated:
_focusedProgressColor
setTintColor:
whiteColor
setBackgroundColor:
layer
setCornerRadius:
setShadowPath:
blackColor
CGColor
setShadowColor:
setShadowOffset:
setShadowOpacity:
setShadowRadius:
_panUpdated:
initWithTarget:action:
_setHysteresis:
addGestureRecognizer:
_leftPressed:
setAllowedPressTypes:
_rightPressed:
layoutSubviews
minValueIconView
sizeToFit
maxValueIconView
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
frame
_progressCenter
convertPoint:fromView:
setCenter:
setValue:animated:
minimumValue
maximumValue
setProgress:
setNeedsLayout
layoutIfNeeded
animateWithDuration:animations:
setImage:
state
locationInView:
effectiveUserInterfaceLayoutDirection
value
setValue:
isContinuous
sendActionsForControlEvents:
initWithWhite:alpha:
canBecomeFocused
intrinsicContentSize
sizeThatFits:
setMinimumValueImage:
setMaximumValueImage:
setMaxBarWidth:
maxBarWidth
shouldTrack
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
_menuPressed
_unfocusedProgressColor
setMinimumValue:
setMaximumValue:
minimumValueImage
maximumValueImage
progressBarView
setContinuous:
thumbView
lastThumbLocation
.cxx_destruct
_maxBarWidth
_continuous
_value
_minimumValue
_maximumValue
_minimumValueImage
_maximumValueImage
_progressBarView
_minValueIconView
_maxValueIconView
_thumbView
_lastThumbLocation
initWithEndpointRoute:
initWithRoute:
routeConnection
_metadataDidChange:forKeys:
registerMetadataUpdateHandler:
connectionState
addObserver:forKeyPath:options:context:
isDeviceRoute
routeUID
tvnp_deviceType
initWithGroupRoute:outputDeviceRoute:
initWithDataSource:
setDelegate:
isConnected
isVolumeControlAvailable
isDeviceSpeakerRoute
volumeValue
numberWithFloat:
refreshPropertiesWithRoute:
removeObserver:forKeyPath:context:
deregisterMetadataUpdateHandler:
dealloc
description
stringWithFormat:
isPaired
_iconImageForRoute:
setWithObject:
copy
floatValue
setVolumeValue:
routeName
currentDevice
name
setRoute:
isEqual:
willChangeValueForKey:
didChangeValueForKey:
routeNames
_updateVolume
playPause
connectAndPair
setConnectionState:
observeValueForKeyPath:ofObject:change:context:
title
album
artist
length
setTitle:
setSingleLineTitle:
setSubtitle:
containsObject:
artworkImage
setArtworkImage:
playbackState
_playbackStateForMPCPlaybackState:
setPlaybackState:
bundleID
isEqualToString:
setNowPlayingBundleIdentifier:
keyPathsForValuesAffectingConnected
keyPathsForValuesAffectingDisconnected
keyPathsForValuesAffectingPaired
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
volumeController:volumeControlAvailableDidChange:
volumeController:volumeControlCapabilitiesDidChange:
volumeController:volumeControlLabelDidChange:
volumeController:volumeValueDidChange:
volumeController:mutedStateDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
setIsCurrentDestination:
isConnecting
isDisconnected
deviceImage
setVolumeLevel:
togglePlayPause
endpointRoute
volumeController
routeConnectionObserverToken
_endpointRoute
_routeConnection
_volumeController
_routeConnectionObserverToken
_connectionState
initWithNibName:bundle:
initialFetchGroup
initWithOutputContextUID:allowsRetargeting:initalFetchCompletion:
view
window
makeKeyWindow
objectForKeyedSubscript:
boolValue
setAllowsRetargeting:
presentationEnded
routingController
initWithRoutingController:options:
presentViewController:animated:completion:
dismissViewControllerAnimated:completion:
viewServiceBeginPresentationWithOptions:
viewServiceEndPresentationWithOptions:completion:
_exportedInterface
viewServiceBeginPresentationWithOptions:completion:
viewServiceUpdatePresentationWithOptions:
viewServiceHandleMessage:reply:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
dismissWithResult:
_remoteViewControllerProxy
_remoteViewControllerInterface
viewControllerDidRequestDismissal:cancelled:
setInitialFetchGroup:
setPresentationEnded:
_presentationEnded
_initialFetchGroup
_routingController
viewDidLoad
setModalPresentationStyle:
shareAudioViewController
setShareAudioViewController:
_shareAudioViewController
initWithCollectionViewLayout:
initWithIdentifier:
relinquish
setObservingChanges:
setConnectingRoutingDestination:
collectionView
setContentInsetAdjustmentBehavior:
setIndexDisplayMode:
registerClass:forCellWithReuseIdentifier:
setClipsToBounds:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
destinationsByIdentifier
objectForKey:
setDestination:
item
initialFocusIndex
shouldFocusInitialIndex
useFocusedAppearance
initWithCollectionView:cellProvider:
availableDestinations
updateCollectionViewWithDestinations:
viewWillAppear:
sharedConnection
bulletinServiceProxy
allowsDestinationSelection
uniqueIdentifier
indexOfObjectPassingTest:
objectAtIndexedSubscript:
setCurrentDestination:
viewDidDisappear:
viewDidLayoutSubviews
indexPathForItem:inSection:
collectionViewLayout
targetContentOffsetForIndexPath:
setContentOffset:animated:
count
addObject:
setEnabled:
invalidateItemsAtIndexPaths:
invalidateLayoutWithContext:
_animateUsingDefaultTimingWithOptions:animations:completion:
appendSectionsWithIdentifiers:
initWithCapacity:
countByEnumeratingWithState:objects:count:
setObject:forKey:
arrayWithObjects:count:
appendItemsWithIdentifiers:intoSectionWithIdentifier:
setDestinationsByIdentifier:
destinationsDataSource
applySnapshot:animatingDifferences:completion:
bundleForClass:
localizedStringForKey:value:table:
destinationName
localizedStringWithFormat:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
availableRoutes
selectionState
volumeLevel
acquire
valueForKey:
null
currentRoutes
_ignoreVolumeChangesWhilePendingSelection
isLocal
_presentVolumeBulletinForDestination:
_showConnectionFailedAlertControllerForRoutingDestination:
didUpdateFocusInContext:withAnimationCoordinator:
nextFocusedIndexPath
animateWithDuration:delay:options:animations:completion:
itemIdentifierForIndexPath:
_indexPathForCurrentDestination
targetDestination:
isMainThread
viewControllerDelegate
sharedApplication
URLWithString:
openURL:options:completionHandler:
systemServiceProxy
presentNowPlayingWithOptions:completion:
initWithObjectsAndKeys:
nowPlayingBundleIdentifier
setVolumeBulletin:
showVolumeHUDForRouteType:withLevel:
numberWithUnsignedInteger:
numberWithInteger:
dictionaryWithObjects:forKeys:count:
volumeBulletin
message
setMessage:
setViewControllerClassName:
setServiceIdentifier:
presentBulletin:withCompletion:
xpcUpdateBulletin:withMessage:withCompletion:
currentDestination
indexPathForItemIdentifier:
bulletinService:didDismissBulletin:withReason:
initWithCollectionViewLayout:routingController:options:initialUIDProvider:
setVolumeEditingInProgress:
collectionView:didUpdateFocusInContext:withAnimationCoordinator:
collectionView:targetContentOffsetForProposedContentOffset:
collectionView:didSelectItemAtIndexPath:
indexPathForPreferredFocusedViewInCollectionView:
setViewControllerDelegate:
volumeEditingInProgress
volumeAssertion
observingChanges
initiatedByPicker
destinationForVolume
setDestinationForVolume:
volumeUpdateQueue
setVolumeUpdateQueue:
connectingRoutingDestination
initialUIDProvider
setInitialUIDProvider:
setDestinationsDataSource:
_volumeEditingInProgress
_shouldFocusInitialIndex
_observingChanges
_initiatedByPicker
_viewControllerDelegate
_volumeAssertion
_initialFocusIndex
_destinationForVolume
_volumeBulletin
_volumeUpdateQueue
_connectingRoutingDestination
_initialUIDProvider
_destinationsDataSource
_destinationsByIdentifier
prepareForReuse
setTitleText:
setDeviceImage:
deviceType
setDeviceType:
setDisplayAsSelected:
setPendingSelection:
_updateMusicBarState
_updateVolumeState
_updateMultiSelectionState
destination
isCurrentDestination
canBeGrouped
setMusicBarState:
singleLineTitle
setSubtitleText:
setAllowsGrouping:
volumeSliderValueChanged:
route
_route
automaticallyNotifiesObserversForKey:
initWithOutputContextUID:allowsRetargeting:
init
sharedInstance
reloadHomeConfiguration
UUID
UUIDString
initWithDataSource:name:
setRoutingContextUID:
setDiscoveryMode:
fetchAvailableRoutesWithCompletionHandler:
_updateAvailableRoutes
setEndpointRoute:
_updateWithAvailableEndpoints:outputDevices:
_updateAllowsDestinationSelection
pickedRoutes
pendingPickedRoutes
supportsMultipleSelection
firstObject
supportsGrouping
anyObject
outputDeviceRoute
isClusterRoute
clusterComposition
homeManager
localAccessory
room
hmRoom
accessories
mediaProfile
isPicked
selectRoute:operation:completion:
audioDestinationIdentifier
localRouteIdentifier
setPendingSelectedMediaDestination:
homeDestinationController
_updateWithAvailableMediaDestinations:
updateLocalAccessoryAudioDestination:forceUpdateWithUnavailableDestination:completionHandler:
setActiveRoute:completion:
_setNeedsDisplayedRoutesUpdate
_endpointRoutesWithForcedLocalRoute:
containsString:
mutableCopy
removeObject:
systemRoute
insertObject:atIndex:
endpoint
removeAllObjects
securityType
logicalLeaderOutputDevice
updateWithOutputDevice:selectionState:destination:
compare:
sortDescriptorWithKey:ascending:selector:
isHomePodRoute
sortDescriptorWithKey:ascending:comparator:
localizedCompare:
sortUsingDescriptors:
canModifyGroupMembership
systemRouteWithContextUID:
componentsJoinedByString:
_init
setRouteUID:
systemImageNamed:
setLocal:
setAvailable:
setSelectionState:
sharedPineBoardServicesPreferences
pbs_buddySelectedHomeTheaterSpeakerIdentifier
pbs_buddySelectedHomeTheaterSpeakerType
_iconImageForIdentifier:
pbs_buddySelectedRoomName
pendingSelectedMediaDestination
updateWithMediaDestination:selectionState:
hmAccessory
audioDestinationController
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
mediaDestinationController:didUpdateDestination:
mediaDestinationControllerDidUpdateAvailableDestinations:
pickRoute:forDestination:
unpickRoute:forDestination:
selectOdeonDestination:
discoveryMode
eligibleOdeonRoutes
numberOfExternalRoutesInLocalDestination
setOutputContextUID:
outputContextUID
allowsRetargeting
systemOutputRouteName
endpointRoutingDataSource
outputDeviceRoutingDataSource
endpointRoutingController
outputDeviceRoutingController
mediaDestinationIdentifiersToRoutes
placeholderRouteIdentifier
selectedMediaDestinationIdentifier
setSelectedMediaDestinationIdentifier:
outputDeviceIdentifiersToRoutes
endpointIdentifiersToDestinations
allOutputDevices
allEndpoints
currentEndpointRouteUID
updateQueue
numberOfUpdates
needsAvailableRoutesUpdate
multipleSelectionEnabled
_allowsDestinationSelection
_allowsRetargeting
_needsAvailableRoutesUpdate
_multipleSelectionEnabled
_availableDestinations
_availableRoutes
_currentDestination
_currentRoutes
_discoveryMode
_numberOfExternalRoutesInLocalDestination
_homeDestinationController
_eligibleOdeonRoutes
_outputContextUID
_systemOutputRouteName
_endpointRoutingDataSource
_outputDeviceRoutingDataSource
_endpointRoutingController
_outputDeviceRoutingController
_homeManager
_mediaDestinationIdentifiersToRoutes
_localRouteIdentifier
_placeholderRouteIdentifier
_pendingSelectedMediaDestination
_selectedMediaDestinationIdentifier
_outputDeviceIdentifiersToRoutes
_endpointIdentifiersToDestinations
_allOutputDevices
_allEndpoints
_currentEndpointRouteUID
_updateQueue
_numberOfUpdates
setTranslatesAutoresizingMaskIntoConstraints:
setTextColor:
setNumberOfLines:
_preferredFontForTextStyle:variant:
setFont:
leadingAnchor
constraintEqualToAnchor:
trailingAnchor
topAnchor
constraintEqualToAnchor:constant:
bottomAnchor
activateConstraints:
setText:
headerLabel
setHeaderLabel:
_title
_headerLabel
imageKeyForObject:
imageWithData:
errorWithDomain:code:userInfo:
cancelLoad:
URLForObject:
hasImageCache
loadImageForObject:scaleToSize:cropToFit:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:completionHandler:
loadImageForObject:scaleToSize:cropToFit:imageDirection:requestLoader:completionHandler:
setImageData:
imageIdentifier
imageData
_decodedImage
_imageIdentifier
_imageData
subtitle
setDestinationName:
setUniqueIdentifier:
setRouteNames:
effectiveDeviceType
_subtitle
_singleLineTitle
_artworkImage
_deviceImage
_destinationName
_isCurrentDestination
_local
_playbackState
_effectiveDeviceType
_uniqueIdentifier
_volumeLevel
_nowPlayingBundleIdentifier
_routeNames
_paired
_connected
_connecting
_disconnected
initWithName:
stopped
dictionary
invalidate
_callElapsedTimeObserversDueToTimeJump:
changeMediaInDirection:reason:
commandDelegate
metadataPlayerSentCommand:withOptions:
scanning
playing
play
pause
paused
defaultCenter
postNotificationName:object:
stop
numberWithDouble:
setElapsedTime:
elapsedTimeObserverBlocks
removeObjectForKey:
initWithMediaItems:index:isCollection:
setPlaylist:
currentMediaItem
postNotificationName:object:userInfo:
_rateForState:
rateUsedForPlayback
date
timeIntervalSinceDate:
rate
elapsedTime
setObject:forKeyedSubscript:
_updateElapsedTimeTimer
setLastElapsedTime:atTimestamp:
_fireElapsedTimeUpdate:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
changeMediaInDirection:
continueLoadingCurrentItem
playIgnoringDelegate:
pauseIgnoringDelegate:
pauseWithVolumeRampDuration:
scanWithRate:
stopWithVolumeRampDuration:
setElapsedTime:precise:
setElapsedTime:seekPrecision:
setElapsedTime:seekPrecision:ignoreDelegate:
addElapsedTimeObserver:
removeElapsedTimeObserverWithToken:
addBoundaryTimeObserverForTimes:withHandler:
addBoundaryTimeObserverForDates:withHandler:
removeBoundaryTimeObserverWithToken:
skipToNextChapterInDirection:
setSelectedSubtitleOption:setGlobalPreference:
updateSubtitleOptions
currentMediaItemSupportsScrubbingUsingPlayer
delegate
asyncDelegate
setAsyncDelegate:
playlist
setCurrentMediaItem:
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
errorBehavior
setErrorBehavior:
interactive
setInteractive:
setRateUsedForPlayback:
waitsAfterPreparingMediaItems
setWaitsAfterPreparingMediaItems:
playbackDate
setPlaybackDate:
duration
isLive
muted
setMuted:
volume
setVolume:
chapterCollections
currentChapterCollection
setCurrentChapterCollection:
currentChapter
currentInterstitial
bufferedTimeRange
seekableTimeRange
seekableDateRange
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
setMediaItemEndAction:
audioOptions
selectedAudioOption
setSelectedAudioOption:
subtitleOptions
selectedSubtitleOption
setSelectedSubtitleOption:
maximumBitRate
setMaximumBitRate:
preventsSleepDuringVideoPlayback
setPreventsSleepDuringVideoPlayback:
updatesMediaRemoteInfoAutomatically
setUpdatesMediaRemoteInfoAutomatically:
limitReadAhead
setLimitReadAhead:
changeToMediaAtIndex:reason:
setState:
setDuration:
setCommandDelegate:
lastChangeDirection
setLastChangeDirection:
initiatedSkip
setInitiatedSkip:
setElapsedTimeObserverBlocks:
isScanningForward
setIsScanningForward:
_lastUpdateTimestamp
_lastElapsedTime
_elapsedTimeTimer
_muted
_interactive
_waitsAfterPreparingMediaItems
_currentMediaItemHasDates
_currentMediaItemInitialLoadingComplete
_currentMediaItemPreparedForLoading
_preventsSleepDuringVideoPlayback
_updatesMediaRemoteInfoAutomatically
_isLive
_limitReadAhead
_initiatedSkip
_isScanningForward
_volume
_name
_rate
_rateUsedForPlayback
_playlist
_state
_duration
_errorBehavior
_playbackDate
_chapterCollections
_currentChapter
_bufferedTimeRange
_seekableDateRange
_currentChapterCollection
_mediaItemEndAction
_audioOptions
_selectedAudioOption
_subtitleOptions
_selectedSubtitleOption
_maximumBitRate
_delegate
_asyncDelegate
_seekableTimeRange
_currentInterstitial
_forwardPlaybackEndTime
_reversePlaybackEndTime
_commandDelegate
_lastChangeDirection
_elapsedTimeObserverBlocks
_currentMediaItemPresentationSize
setContentMode:
setOpaque:
_fillSize
tintColor
tintColorDidChange
setNeedsDisplay
progress
drawRect:
_progress
setCanBeGrouped:
isAvailable
isSilentPrimary
setSilentPrimary:
_routeUID
_deviceType
_canBeGrouped
_selectionState
_destination
_silentPrimary
_available
_configureFloatingContentViewAppearance
setContentMotionRotation:translation:
contentView
colorWithWhite:alpha:
setColor:
setContentHuggingPriority:forAxis:
setHidden:
_volumeImage:
addTarget:action:forControlEvents:
addLayoutGuide:
_addInitialConstraints
_configureAppearanceForControlState:withAnimationCoordinator:
setNeedsUpdateConstraints
updateFocusIfNeeded
alpha
setCellState:
nextFocusedView
isDescendantOfView:
_controlStateForCell
setHighlighted:
updateConstraints
subtitleText
musicBarState
firstBaselineAnchor
cellState
centerXAnchor
constraintLessThanOrEqualToAnchor:constant:
addObjectsFromArray:
constraintGreaterThanOrEqualToAnchor:constant:
widthAnchor
constraintEqualToConstant:
heightAnchor
centerYAnchor
isEqualToArray:
deactivateConstraints:
traitCollectionDidChange:
displayScale
traitCollection
controlState
size
setSize:
applyLayoutAttributes:
setNeedsFocusUpdate
isSymbolImage
setAlpha:
stopAnimating
_checkmarkImage:
startAnimating
appearanceWhenContainedInInstancesOfClasses:
configurationWithStyle:
setFocusAnimationConfiguration:
setContinuousCornerEnabled:
constraintLessThanOrEqualToAnchor:
lastBaselineAnchor
isSelected
isHighlighted
displayAsSelected
pendingSelection
shareAudio
setControlState:withAnimationCoordinator:
addCoordinatedAnimations:completion:
setControlState:animated:
text
setMarqueeEnabled:
setMarqueeRunning:
systemImageNamed:withConfiguration:
preferredFocusEnvironments
setSelected:
preferredLayoutAttributesFittingAttributes:
titleText
allowsGrouping
setShareAudio:
floatingContentView
backgroundColorView
iconView
symbolImageView
checkmarkView
pendingSelectView
musicBarsView
titleLabel
subtitleLabel
volumeProgressView
volumeSliderView
layoutGuide
volatileContraints
_isFocused
_allowsGrouping
_shareAudio
_displayAsSelected
_pendingSelection
_titleText
_subtitleText
_musicBarState
_floatingContentView
_backgroundColorView
_iconView
_symbolImageView
_checkmarkView
_pendingSelectView
_musicBarsView
_titleLabel
_subtitleLabel
_volumeProgressView
_volumeSliderView
_layoutGuide
_cellState
_volatileContraints
setAnchorPoint:
willMoveToWindow:
_updateInternalState
_removeAnimations
_setSubviewsHidden:
_setBarHeights:
_addAnimationsWithRepeatCount:
setInternalState:
valueWithCGRect:
setKeyPath:
setValues:
setKeyTimes:
setSpeed:
setRepeatCount:
addAnimation:forKey:
enumerateObjectsUsingBlock:
removeAllAnimations
canAnimate
setCanAnimate:
internalState
barViews
_canAnimate
_internalState
_barViews
setMediaItemMetadata:forProperty:
removeMediaItemMetadataForProperty:
mediaItemMetadataForProperty:
imageLoader
initWithObject:imageLoader:groupType:
setCacheOnLoad:
setWriteToAssetLibrary:
replaceMediaItemMetadata:forProperty:
setImageLoader:
_imageLoader
_destinationLayout
_routesLayout
initWithCollectionViewLayout:routingController:
handleVolumeUp
addObserver:selector:name:object:
handleVolumeDown
removeObserver:name:object:
setTextAlignment:
_updateTitleView
_updateHintText
addChildViewController:
didMoveToParentViewController:
_baselineOffsetFromBottom
didPressMenu:
setNumberOfTapsRequired:
didPressPlayPause:
viewDidAppear:
viewWillDisappear:
isViewLoaded
focusedRoute
isShareAudioFocused
imageNamed:inBundle:compatibleWithTraitCollection:
initWithData:ofType:
stringWithCharacters:length:
initWithString:attributes:
rangeOfString:
replaceCharactersInRange:withAttributedString:
string
localizedStringByJoiningStrings:
_localizedAttributedStringWithFormat:
setAttributedText:
setScrollDirection:
setItemSize:
setMinimumInteritemSpacing:
setMinimumLineSpacing:
mainScreen
itemSize
setSectionInset:
initWithAppearanceStyle:layoutEnvironment:
setEstimatedRowHeight:
initWithConfiguration:layoutEnvironment:
container
effectiveContentSize
setContentInsets:
setInterGroupSpacing:
routesCollectionViewController
currentSnapshot
numberOfSections
fractionalWidthDimension:
estimatedDimension:
sizeWithWidthDimension:heightDimension:
boundarySupplementaryItemWithLayoutSize:elementKind:alignment:
setBoundarySupplementaryItems:
setSupplementariesFollowContentInsets:
initWithSectionProvider:
setTopGradientHeight:
setBottomGradientHeight:
routingViewControllerWillBeginEditingVolume:
routingViewControllerWillEndEditingVolume:
routingViewController:shareAudioPresentationRequested:
editingVolume
playPauseAssertion
titleView
hintView
destinationsCollectionViewController
_editingVolume
_playPauseAssertion
_titleView
_hintView
_destinationsCollectionViewController
_routesCollectionViewController
initWithRouteUID:
numberWithBool:
viewControllerDidRequestDismissal:odeonEnabled:
odeonViewController
setOdeonViewController:
_odeonViewController
userInterfaceStyle
filterWithType:
setAllowsGroupBlending:
_tvLabelOpacityBColor
setCompositingFilter:
_tvLabelOpacityCColor
buttonWithType:
_setBlurEnabled:
_setVisualEffectViewEnabled:backgroundColor:
setTitle:forState:
_handleAcceptButton
_setSpeedBumpEdges:
_handleSkipButton
imageNamed:
_tvLabelOpacityAColor
constraintLessThanOrEqualToConstant:
constraintGreaterThanOrEqualToConstant:
isBeingDismissed
dismissOdeonPrompt
isHidden
home
hmHome
mediaSystems
spinnerView
primaryButton
secondaryButton
settingUpLabel
mainBundle
bundleIdentifier
updatesHomeKit
setUpdatesHomeKit:
lockupView
descriptionLabel
footerLabel
imageView
settingUpGuide
_updatesHomeKit
_lockupView
_descriptionLabel
_primaryButton
_secondaryButton
_footerLabel
_imageView
_settingUpLabel
_spinnerView
_settingUpGuide
routeType
avRouteDescription
isAppleTVRoute
routeSubtype
isStereoPair
isB298Route
isAirpodsRoute
isPowerbeatsRoute
isBeatsSoloRoute
isBeatsXRoute
tvnp_shouldShowRoute
isEnabled
minimumLineSpacing
section
numberOfItemsInSection:
layoutAttributesForElementsInRect:
layoutAttributesForItemAtIndexPath:
layoutAttributesClass
invalidationContextClass
_enabled
copyWithZone:
audioDestinationName
audioDestinationType
_availableStatusForMediaDestination:
components
accessory
settings
isControllable
mediaDestination
setMediaDestination:
_mediaDestination
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
collectionView:shouldHighlightItemAtIndexPath:
collectionView:didHighlightItemAtIndexPath:
collectionView:didUnhighlightItemAtIndexPath:
collectionView:shouldSelectItemAtIndexPath:
collectionView:shouldDeselectItemAtIndexPath:
collectionView:didDeselectItemAtIndexPath:
collectionView:willDisplayCell:forItemAtIndexPath:
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
collectionView:didEndDisplayingCell:forItemAtIndexPath:
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
collectionView:shouldShowMenuForItemAtIndexPath:
collectionView:canPerformAction:forItemAtIndexPath:withSender:
collectionView:performAction:forItemAtIndexPath:withSender:
collectionView:transitionLayoutForOldLayout:newLayout:
collectionView:canFocusItemAtIndexPath:
collectionView:shouldUpdateFocusInContext:
collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:
collectionView:canEditItemAtIndexPath:
collectionView:shouldSpringLoadItemAtIndexPath:withContext:
collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:
collectionView:didBeginMultipleSelectionInteractionAtIndexPath:
collectionViewDidEndMultipleSelectionInteraction:
collectionView:contextMenuConfigurationForItemAtIndexPath:point:
collectionView:previewForHighlightingContextMenuWithConfiguration:
collectionView:previewForDismissingContextMenuWithConfiguration:
collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:
collectionView:willDisplayContextMenuWithConfiguration:animator:
collectionView:willEndContextMenuInteractionWithConfiguration:animator:
indexPathForVolumeSliderInCollectionView:layout:
prepareLayout
indexPath
topGradientHeight
bottomGradientHeight
volumeSliderIndexPath
setVolumeSliderIndexPath:
_topGradientHeight
_bottomGradientHeight
_volumeSliderIndexPath
setInstallsStandardGestureForInteractiveMovement:
setRemembersLastFocusedIndexPath:
registerClass:forSupplementaryViewOfKind:withReuseIdentifier:
routesByUID
setRoutesDataSource:
dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:
routesDataSource
snapshot
sectionIdentifiers
objectAtIndex:
setSupplementaryViewProvider:
longPressSelect:
handleEndVolumeControl:
updateCollectionViewWithRoutes:
mask
_gradientMask
setMask:
isAirPlayRoute
isW1Route
isH1Route
isHeadphonesRoute
deleteSectionsWithIdentifiers:
_cleanupRouteForVolumeIfNeeded
_calculateVisibleVolumeCells
shareAudioSelected
estimatedItemSize
setShareAudioFocused:
setFocusedRoute:
routeForVolume
_acquireVolumeHUDAssertionForRouteWithUID:
_relinquishVolumeHUDAssertionForRouteWithUID:
setRouteForVolume:
invalidateLayout
setColors:
setLocations:
volumeHUDAssertionsByUID
allKeys
indexPathsForVisibleItems
collectionView:layout:sizeForItemAtIndexPath:
setCurrentSnapshot:
setRoutesByUID:
setVolumeHUDAssertionsByUID:
longPressRecognizer
setLongPressRecognizer:
menuRecognizer
setMenuRecognizer:
selectRecognizer
setSelectRecognizer:
_shareAudioFocused
_focusedRoute
_currentSnapshot
_routeForVolume
_routesByUID
_volumeHUDAssertionsByUID
_routesDataSource
_longPressRecognizer
_menuRecognizer
_selectRecognizer
_nameForAVRoute:destination:
isSplitterCapable
isProxyGroupPlayer
_imageForAVRoute:destination:
setVolume:withNoticationDelay:
_currentDeviceRoutingIconImage
isGroupLeader
setOutputDeviceRoute:
setVolumeController:
_outputDeviceRoute
_setContinuousCornerRadius:
setMinificationFilter:
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
CGPath
constraintEqualToAnchor:multiplier:
setShowDeviceImage:
showDeviceImage
artworkImageView
deviceImageView
shadowView
boundsUsedForArtworkShadow
setBoundsUsedForArtworkShadow:
_showDeviceImage
_artworkImageView
_deviceImageView
_shadowView
_boundsUsedForArtworkShadow
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
setWindow:
_window
prepareForPlaybackWithEndpoint:
setPlayer:
_registerAsObserver
_nowPlayingInfoDidChange:
_deregisterAsObserver
sendCommand:options:
contentItemIdentifier
_updateMediaItemMetadata:routeConnection:
player
lastUpdate
dateWithTimeIntervalSinceReferenceDate:
tvs_numberForKey:
doubleValue
tvs_dateForKey:
defaultPlaybackRate
loading
_updateTimeStampFromAirtunesd:
isArtworkVisuallyIdenticalToCatalog:
trackNumber
totalNumberOfTracks
artworkCatalog
performMediaItemMetadataTransactionWithBlock:
userInfo
prepareForPlayback
reset
_isObserving
_airtunesIsPlaying
_airtunesTimeData
_lastTrackIdentifier
_player
_menuPressed:
setViewServiceActive:
mediaRemoteObserver
initWithPlayer:
setSingleCoverOnly:
setMusicViewController:
wallpaperViewForVariant:
setNowPlayingWallPaper:
animateWithDuration:animations:completion:
getActiveRouteWithCompletion:
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
musicViewController
setMediaRemoteObserver:
menuGestureRecognizer
setMenuGestureRecognizer:
nowPlayingWallPaper
_musicViewController
_mediaRemoteObserver
_menuGestureRecognizer
_nowPlayingWallPaper
_updateNowPlayingInfo
isBeingPresented
requiresOverlayAssertion
overlayAssertion
_overlayAssertion
setCacheLimit:forCacheIdentifier:requestingContext:
_createRequestController
_reloadPlayerPathWithRoute:
_connectPairingIfNeeded:
playerPath
response
request
_setWantsPlaybackMetadata:
connection
externalDevice
_updateMetadata
_updateAutomaticResponseLoading
beginAutomaticResponseLoading
endAutomaticResponseLoading
pathWithRoute:bundleID:playerID:
setPlayerPath:
setNeedsReload
_connectionDidInvalidate:
_updateState
propertySetWithProperties:
initWithProperties:relationships:
setTracklistRange:
setPlayingItemProperties:
setRequest:
tracklist
playingItemIndexPath
items
itemAtIndexPath:
metadataObject
song
timeIntervalSinceReferenceDate
trackCount
setFittingSize:
scale
setDestinationScale:
setCacheIdentifier:forRequestingContext:
_preloadArtwork
allValues
requestImageWithCompletionHandler:
_placeholderArtwork
isInvalidated
setAttemptingConnection:
connectWithOptions:completion:
_setAutomaticResponseLoading:
isAttemptingConnection
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
_automaticResponseLoading
_wantsPlaybackMetadata
artworkSize
setArtworkSize:
requestController
observerTokensToHandlers
_attemptingConnection
_defaultPlaybackRate
_artist
_album
_artworkCatalog
_trackNumber
_totalNumberOfTracks
_contentItemIdentifier
_elapsedTime
_lastUpdate
_requestController
_observerTokensToHandlers
_artworkSize
v8@?0
minValueIconView
T@"UIImageView",R,N,V_minValueIconView
maxValueIconView
T@"UIImageView",R,N,V_maxValueIconView
thumbView
T@"UIView",R,N,V_thumbView
lastThumbLocation
T{CGPoint=dd},R,N,V_lastThumbLocation
value
Tf,N,V_value
minimumValue
Tf,N,V_minimumValue
maximumValue
Tf,N,V_maximumValue
minimumValueImage
T@"UIImage",&,N,V_minimumValueImage
maximumValueImage
T@"UIImage",&,N,V_maximumValueImage
progressBarView
T@"TVNPNowPlayingProgressView",R,N,V_progressBarView
continuous
TB,N,GisContinuous,V_continuous
v16@?0@"NSSet"8
connectionState
%@: Endpoint:%@
destinationName
local
routeNames
volumeLevel
artworkImage
playbackState
com.apple.Music
com.apple.TVMusic
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
routeConnection
T@"TVNPEndpointRouteConnection",R,N,V_routeConnection
volumeController
T@"MPVolumeController",R,N,V_volumeController
routeConnectionObserverToken
T@"<NSCopying>",R,N,V_routeConnectionObserverToken
TQ,N,V_connectionState
isCurrentDestination
TB,D,N
endpointRoute
T@"MPAVEndpointRoute",R,N,V_endpointRoute
initialFetchGroup
T@"NSObject<OS_dispatch_group>",&,N,V_initialFetchGroup
routingController
T@"TVNPGroupableRoutingController",R,N,V_routingController
presentationEnded
TB,N,V_presentationEnded
shareAudioViewController
T@"TVNPShareAudioMainViewController",&,N,V_shareAudioViewController
com.apple.TVNowPlayingService.VolumeUpdateQueue
@"UICollectionViewCell"32@?0@"UICollectionView"8@"NSIndexPath"16@"NSString"24
B32@?0@"TVNPRoutingDestination"8Q16^B24
availableDestinations
connected
disconnected
TVNPDestinationsSectionIdentifier
ConnectionFailedAlertTitle
ConnectionFailedAlertButton
com.apple.TVMusic://
v12@?0B8
PineBoard
Volume_Slider
v28@?0@"PBSBulletin"8B16@"NSError"20
volumeAssertion
T@"PBSAssertion",R,N,V_volumeAssertion
shouldFocusInitialIndex
TB,R,N,V_shouldFocusInitialIndex
initialFocusIndex
TQ,R,N,V_initialFocusIndex
observingChanges
TB,N,V_observingChanges
initiatedByPicker
TB,R,N,V_initiatedByPicker
destinationForVolume
T@"TVNPRoutingDestination",&,N,V_destinationForVolume
volumeBulletin
T@"PBSBulletin",&,N,V_volumeBulletin
volumeUpdateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_volumeUpdateQueue
connectingRoutingDestination
T@"TVNPRoutingDestination",&,N,V_connectingRoutingDestination
initialUIDProvider
T@?,C,N,V_initialUIDProvider
destinationsDataSource
T@"UICollectionViewDiffableDataSource",&,N,V_destinationsDataSource
destinationsByIdentifier
T@"NSDictionary",&,N,V_destinationsByIdentifier
T@"NSObject<TVNPRoutingController>",R,N,V_routingController
viewControllerDelegate
T@"<TVNPRoutingDestinationsCollectionViewControllerDelegate>",W,N,V_viewControllerDelegate
volumeEditingInProgress
TB,N,V_volumeEditingInProgress
title
deviceImage
deviceType
selectionState
canBeGrouped
destination.isCurrentDestination
destination.playbackState
destination.singleLineTitle
route
T@"TVNPRoute",&,N,V_route
currentDestination
com.apple.TVNowPlayingService.TVNPGroupableRoutingController
localAccessory
TVNP-Endpoint
TVNP-OutputDevice
v16@?0@"NSArray"8
B32@?0@"HMAccessory"8Q16^B24
v16@?0@"NSError"8
Home
cce7c4ecef404121ae8971
v20@?0B8@"NSError"12
%@ (%@)
Dock Connector
B32@?0@8Q16^B24
q24@?0@"TVNPOutputDeviceRoute"8@"TVNPOutputDeviceRoute"16
routeUID
uniqueIdentifier
availableRoutes
currentRoutes
systemOutputRouteName
numberOfExternalRoutesInLocalDestination
tv.and.hifispeaker.fill
TVSpeakersTitle
Localizable
homePod-pair
homePod
eligibleOdeonRoutes
discoveryMode
TQ,N
T@"TVNPRoutingDestination",&,N
T@"NSArray",R,C,N
homeDestinationController
T@"HMMediaDestinationController",R,N
allowsDestinationSelection
TB,R,N
Tq,R,N
endpointRoutingDataSource
T@"MPAVEndpointRoutingDataSource",R,N,V_endpointRoutingDataSource
outputDeviceRoutingDataSource
T@"MPAVOutputDeviceRoutingDataSource",R,N,V_outputDeviceRoutingDataSource
endpointRoutingController
T@"MPAVRoutingController",R,N,V_endpointRoutingController
outputDeviceRoutingController
T@"MPAVRoutingController",R,N,V_outputDeviceRoutingController
homeManager
T@"TVCSHomeManager",R,N,V_homeManager
mediaDestinationIdentifiersToRoutes
T@"NSMutableDictionary",R,C,N,V_mediaDestinationIdentifiersToRoutes
localRouteIdentifier
T@"NSString",R,N,V_localRouteIdentifier
placeholderRouteIdentifier
T@"NSString",R,N,V_placeholderRouteIdentifier
pendingSelectedMediaDestination
T@"NSString",&,N,V_pendingSelectedMediaDestination
selectedMediaDestinationIdentifier
T@"NSString",&,N,V_selectedMediaDestinationIdentifier
outputDeviceIdentifiersToRoutes
T@"NSMutableDictionary",R,C,N,V_outputDeviceIdentifiersToRoutes
endpointIdentifiersToDestinations
T@"NSMutableDictionary",R,C,N,V_endpointIdentifiersToDestinations
allOutputDevices
T@"NSArray",R,C,N,V_allOutputDevices
allEndpoints
T@"NSArray",R,C,N,V_allEndpoints
currentEndpointRouteUID
T@"NSString",R,C,N,V_currentEndpointRouteUID
updateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_updateQueue
numberOfUpdates
TQ,R,N,V_numberOfUpdates
needsAvailableRoutesUpdate
TB,R,N,V_needsAvailableRoutesUpdate
multipleSelectionEnabled
TB,R,N,V_multipleSelectionEnabled
outputContextUID
T@"NSString",C,N,V_outputContextUID
allowsRetargeting
TB,N,V_allowsRetargeting
T@"NSString",R,C,N,V_systemOutputRouteName
TQ,N,V_discoveryMode
T@"TVNPRoutingDestination",&,N,V_currentDestination
T@"NSArray",R,C,N,V_currentRoutes
T@"NSArray",R,C,N,V_availableDestinations
T@"NSArray",R,C,N,V_availableRoutes
T@"HMMediaDestinationController",R,N,V_homeDestinationController
T@"NSArray",R,C,N,V_eligibleOdeonRoutes
TB,R,N,V_allowsDestinationSelection
Tq,R,N,V_numberOfExternalRoutesInLocalDestination
headerLabel
T@"UILabel",&,N,V_headerLabel
T@"NSString",&,N,V_title
TVServicesErrorDomain
imageIdentifier
T@"NSString",R,N,V_imageIdentifier
imageData
T@"NSData",&,N,V_imageData
T@"NSString",C,N,V_title
subtitle
T@"NSString",C,N,V_subtitle
singleLineTitle
T@"NSString",C,N,V_singleLineTitle
T@"UIImage",&,N,V_artworkImage
T@"UIImage",&,N,V_deviceImage
T@"NSString",C,N,V_destinationName
T@"NSString",C,N,V_uniqueIdentifier
TB,N,V_isCurrentDestination
TQ,N,V_playbackState
nowPlayingBundleIdentifier
T@"NSString",C,N,V_nowPlayingBundleIdentifier
T@"NSArray",C,N,V_routeNames
TB,R,N,GisLocal,V_local
effectiveDeviceType
TQ,R,N,V_effectiveDeviceType
T@"NSNumber",C,N,V_volumeLevel
paired
TB,R,N,GisPaired,V_paired
TB,R,N,GisConnected,V_connected
connecting
TB,R,N,GisConnecting,V_connecting
TB,R,N,GisDisconnected,V_disconnected
rate
name
T@"NSString",R,N
delegate
T@"<TVPPlaybackDelegate>",W,N
asyncDelegate
T@"<TVPASyncPlaybackDelegate>",W,N
playlist
T@"TVPPlaylist",&,N
currentMediaItem
T@"NSObject<TVPMediaItem>",&,N
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
T{CGSize=dd},R,N
currentMediaItemHasDates
state
T@"TVPPlaybackState",R,N
errorBehavior
Tq,N
interactive
TB,N
Td,R,N
rateUsedForPlayback
Td,N
waitsAfterPreparingMediaItems
elapsedTime
playbackDate
T@"NSDate",C,N
duration
isLive
muted
volume
Tf,N
chapterCollections
T@"NSArray",R,N
currentChapterCollection
T@"TVPChapterCollection",&,N
currentChapter
T@"TVPChapter",R,N
currentInterstitial
T@"TVPInterstitial",R,N
bufferedTimeRange
T@"TVPTimeRange",R,N
seekableTimeRange
seekableDateRange
T@"TVPDateRange",R,N
forwardPlaybackEndTime
reversePlaybackEndTime
mediaItemEndAction
audioOptions
selectedAudioOption
T@"TVPAudioOption",&,N
subtitleOptions
selectedSubtitleOption
T@"TVPSubtitleOption",&,N
maximumBitRate
preventsSleepDuringVideoPlayback
updatesMediaRemoteInfoAutomatically
limitReadAhead
lastChangeDirection
Tq,N,V_lastChangeDirection
initiatedSkip
TB,N,V_initiatedSkip
elapsedTimeObserverBlocks
T@"NSMutableDictionary",&,N,V_elapsedTimeObserverBlocks
isScanningForward
TB,N,V_isScanningForward
commandDelegate
T@"<TVNPMetadataPlayerCommandDelegate>",W,N,V_commandDelegate
Td,N,V_duration
T@"TVPPlaybackState",&,N,V_state
T@"NSString",R,N,V_name
T@"<TVPPlaybackDelegate>",W,N,V_delegate
T@"<TVPASyncPlaybackDelegate>",W,N,V_asyncDelegate
T@"TVPPlaylist",&,N,V_playlist
TB,R,N,V_currentMediaItemPreparedForLoading
TB,R,N,V_currentMediaItemInitialLoadingComplete
T{CGSize=dd},R,N,V_currentMediaItemPresentationSize
TB,R,N,V_currentMediaItemHasDates
Tq,N,V_errorBehavior
TB,N,V_interactive
Td,R,N,V_rate
Td,N,V_rateUsedForPlayback
TB,N,V_waitsAfterPreparingMediaItems
T@"NSDate",C,N,V_playbackDate
TB,R,N,V_isLive
TB,N,V_muted
Tf,N,V_volume
T@"NSArray",R,N,V_chapterCollections
T@"TVPChapterCollection",&,N,V_currentChapterCollection
T@"TVPChapter",R,N,V_currentChapter
T@"TVPInterstitial",R,N,V_currentInterstitial
T@"TVPTimeRange",R,N,V_bufferedTimeRange
T@"TVPTimeRange",R,N,V_seekableTimeRange
T@"TVPDateRange",R,N,V_seekableDateRange
Td,R,N,V_forwardPlaybackEndTime
Td,R,N,V_reversePlaybackEndTime
Tq,N,V_mediaItemEndAction
T@"NSArray",R,N,V_audioOptions
T@"TVPAudioOption",&,N,V_selectedAudioOption
T@"NSArray",R,N,V_subtitleOptions
T@"TVPSubtitleOption",&,N,V_selectedSubtitleOption
Td,N,V_maximumBitRate
TB,N,V_preventsSleepDuringVideoPlayback
TB,N,V_updatesMediaRemoteInfoAutomatically
TB,N,V_limitReadAhead
progressCenter
T{CGPoint=dd},R,N,G_progressCenter
progress
Tf,N,V_progress
T@"NSString",C,N,V_routeUID
T@"UIImage",C,N,V_deviceImage
TQ,N,V_deviceType
TB,N,GisLocal,V_local
TB,N,V_canBeGrouped
destination
T@"TVNPRoutingDestination",&,N,V_destination
silentPrimary
TB,N,GisSilentPrimary,V_silentPrimary
available
TB,N,GisAvailable,V_available
TQ,N,V_selectionState
checkmark.circle.fill
circle
checkmark
speaker.fill
speaker.wave.3.fill
floatingContentView
T@"_UIFloatingContentView",R,N,V_floatingContentView
backgroundColorView
T@"UIView",R,N,V_backgroundColorView
iconView
T@"UIImageView",R,N,V_iconView
symbolImageView
T@"UIImageView",R,N,V_symbolImageView
checkmarkView
T@"UIImageView",R,N,V_checkmarkView
pendingSelectView
T@"UIActivityIndicatorView",R,N,V_pendingSelectView
musicBarsView
T@"TVNPRoutingMusicBarsView",R,N,V_musicBarsView
titleLabel
T@"UILabel",R,N,V_titleLabel
subtitleLabel
T@"UILabel",R,N,V_subtitleLabel
volumeProgressView
T@"TVNPNowPlayingProgressView",R,N,V_volumeProgressView
volumeSliderView
T@"TVNPNowPlayingSliderView",R,N,V_volumeSliderView
layoutGuide
T@"UILayoutGuide",R,N,V_layoutGuide
cellState
TQ,N,V_cellState
volatileContraints
T@"NSMutableArray",R,N,V_volatileContraints
titleText
T@"NSString",C,N,V_titleText
subtitleText
T@"NSString",C,N,V_subtitleText
allowsGrouping
TB,N,V_allowsGrouping
shareAudio
TB,N,V_shareAudio
displayAsSelected
TB,N,V_displayAsSelected
pendingSelection
TB,N,V_pendingSelection
musicBarState
TQ,N,V_musicBarState
bounds
BarAnimation
v32@?0@"UIView"8Q16^B24
canAnimate
TB,N,V_canAnimate
internalState
TQ,N,V_internalState
barViews
T@"NSArray",R,C,N,V_barViews
TQ,N,V_state
imageLoader
T@"TVNPDataImageLoader",&,N,V_imageLoader
v16@?0^v8
@"NSString"8@?0
currentDestination.destinationName
focusedRoute
ShareAudioHintText
@@PLUS@@
nowplaying_volumebtn-up
@@MINUS@@
nowplaying_volumebtn-dwn
MasterVolumeText
PressAndHoldForVolumeText
@"NSCollectionLayoutSection"24@?0q8@"<NSCollectionLayoutEnvironment>"16
editingVolume
TB,R,N,V_editingVolume
playPauseAssertion
T@"PBSAssertion",R,N,V_playPauseAssertion
titleView
T@"MPRouteLabel",R,N,V_titleView
hintView
T@"UILabel",R,N,V_hintView
destinationsCollectionViewController
T@"TVNPRoutingDestinationsCollectionViewController",R,N,V_destinationsCollectionViewController
routesCollectionViewController
T@"TVNPRoutingRoutesCollectionViewController",R,N,V_routesCollectionViewController
T@"<TVNPRoutingMainViewControllerDelegate>",W,N,V_delegate
odeonViewController
T@"TVNPOdeonMainViewController",&,N,V_odeonViewController
OdeonPromptTitle
Odeon
OdeonPromptDescription
OdeonPromptAcceptButtonTitle
OdeonPromptDeclineButtonTitle
OdeonPromptFooter
atv_homepod
OdeonPromptSettingUpTitle
setupskipped
@"NSDictionary"8@?0
bundleID
T@"NSString",R,N,V_routeUID
lockupView
T@"UIView",R,N,V_lockupView
descriptionLabel
T@"UILabel",R,N,V_descriptionLabel
primaryButton
T@"UIButton",R,N,V_primaryButton
secondaryButton
T@"UIButton",R,N,V_secondaryButton
footerLabel
T@"UILabel",R,N,V_footerLabel
imageView
T@"UIImageView",R,N,V_imageView
settingUpLabel
T@"UILabel",R,N,V_settingUpLabel
spinnerView
T@"UIActivityIndicatorView",R,N,V_spinnerView
settingUpGuide
T@"UILayoutGuide",R,N,V_settingUpGuide
T@"<TVNPOdeonMainViewControllerDelegate>",W,N,V_delegate
updatesHomeKit
TB,N,V_updatesHomeKit
tvnp_shouldShowRoute
tvnp_deviceType
TQ,R,N
enabled
TB,N,GisEnabled,V_enabled
%@: HMMediaDestination: %@ available: %@
mediaDestination
T@"<HMMediaDestination>",&,N,V_mediaDestination
volumeSliderIndexPath
T@"NSIndexPath",&,N,V_volumeSliderIndexPath
topGradientHeight
Td,N,V_topGradientHeight
bottomGradientHeight
Td,N,V_bottomGradientHeight
TVNPShareAudioItemIdentifier
header
ShareAudioTitle
TVNPHeadphonesSectionIdentifier
RoutingHeadphonesSectionTitle
TVNPSpeakersSectionIdentifier
RoutingSpeakersSectionTitle
@"UICollectionReusableView"32@?0@"UICollectionView"8@"NSString"16@"NSIndexPath"24
Share_Audio
2zyzecwSf2ZYRpB3tuQhOQ
RoutingHijackNagTitle
RoutingHijackNagMessage
RoutingHijackNagCancel
RoutingHijackNagConfirm
v16@?0@"UIAlertAction"8
shareAudioFocused
TB,N,GisShareAudioFocused,V_shareAudioFocused
T@"TVNPRoute",&,N,V_focusedRoute
routeForVolume
T@"TVNPRoute",&,N,V_routeForVolume
routesByUID
T@"NSDictionary",&,N,V_routesByUID
volumeHUDAssertionsByUID
T@"NSMutableDictionary",&,N,V_volumeHUDAssertionsByUID
routesDataSource
T@"UICollectionViewDiffableDataSource",&,N,V_routesDataSource
currentSnapshot
T@"NSDiffableDataSourceSnapshot",&,N,V_currentSnapshot
longPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_longPressRecognizer
menuRecognizer
T@"UITapGestureRecognizer",&,N,V_menuRecognizer
selectRecognizer
T@"UITapGestureRecognizer",&,N,V_selectRecognizer
T@"<TVNPRoutingRoutesCollectionViewControllerDelegate>",W,N,V_delegate
%@: MPAVRoute:%@
outputDeviceRoute
-[TVNPOutputDeviceRoute _updateVolume]
T@"MPVolumeController",&,N,V_volumeController
T@"MPAVOutputDeviceRoute",&,N,V_outputDeviceRoute
artworkImageView
T@"UIImageView",R,N,V_artworkImageView
deviceImageView
T@"UIImageView",R,N,V_deviceImageView
shadowView
T@"UIView",R,N,V_shadowView
TB,R,N,GisEnabled,V_enabled
boundsUsedForArtworkShadow
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_boundsUsedForArtworkShadow
showDeviceImage
TB,N,V_showDeviceImage
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
airtunesd
TVAirPlayTimeNotificationName
TVNPMetadataPlayer
v24@?0@"NSString"8@16
player
T@"TVNPMetadataPlayer",&,N,V_player
v16@?0@"MPAVEndpointRoute"8
v16@?0@"MPAVRoute"8
musicViewController
T@"TVPMusicNowPlayingViewController",&,N,V_musicViewController
mediaRemoteObserver
T@"TVNPMediaRemoteObserver",&,N,V_mediaRemoteObserver
menuGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_menuGestureRecognizer
nowPlayingWallPaper
T@"UIView",&,N,V_nowPlayingWallPaper
ConnectingTitle
ChooseMusicTitle
SelectToConnectTitle
com.apple.TVSystemMenuService
overlayAssertion
T@"PBSControlCenterOverlayAssertion",R,N,V_overlayAssertion
T@"<TVNPShareAudioMainViewControllerDelegate>",W,N,V_delegate
TVNPEndpointRouteConnectionArtworkCacheIdentifier
com.apple.TVNowPlayingService.TVNPEndpointRouteConnection
v16@?0^{__CFArray=}8
artworkCatalog
v16@?0@"UIImage"8
artist
album
defaultPlaybackRate
lastUpdate
contentItemIdentifier
trackNumber
totalNumberOfTracks
Placeholder-Album
com.apple.podcasts
PreloadAsset-Podcast
PreloadAsset-Music
attemptingConnection
TB,N,GisAttemptingConnection,V_attemptingConnection
_wantsPlaybackMetadata
TB,N,S_setWantsPlaybackMetadata:,V_wantsPlaybackMetadata
_automaticResponseLoading
TB,N,S_setAutomaticResponseLoading:,V_automaticResponseLoading
requestController
T@"MPRequestResponseController",R,N,V_requestController
observerTokensToHandlers
T@"NSMutableDictionary",R,N,V_observerTokensToHandlers
T@"MPAVEndpointRoute",&,N
T@"NSString",R,C,N
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_artist
T@"NSString",R,C,N,V_album
T@"UIImage",R,N,V_artworkImage
T@"MPArtworkCatalog",R,N,V_artworkCatalog
artworkSize
T{CGSize=dd},N,V_artworkSize
T@"NSNumber",R,C,N,V_trackNumber
T@"NSNumber",R,C,N,V_totalNumberOfTracks
T@"NSString",R,C,N,V_contentItemIdentifier
Tq,R,N,V_playbackState
Td,R,N,V_duration
Td,R,N,V_elapsedTime
Tf,R,N,V_rate
Tf,R,N,V_defaultPlaybackRate
Td,R,N,V_lastUpdate
TQ,R,N,V_connectionState
TB,R,N,GisPaired
TVNPNowPlayingSliderView
TVNPEndpointRoutingDestination
MPVolumeControllerDelegate
NSObject
PBSViewServicePresenter
PBSViewServiceInterface
TVNPRoutingHostViewController
TVNPRoutingMainViewControllerDelegate
TVNPShareAudioHostViewController
TVNPShareAudioMainViewControllerDelegate
TVNPRoutingDestinationsCollectionViewController
PBSBulletinServiceDelegate
TVNPRouteCollectionViewCell
TVNPGroupableRoutingController
MPAVRoutingControllerDelegate
HMMediaDestinationControllerDelegate
TVNPRoutingController
TVNPRoutesHeaderView
TVNPDataImageLoader
TVImageLoader
TVNPRoutingDestination
TVNPMetadataPlayer
TVPPlayback
TVNPNowPlayingProgressView
TVNPRoute
TVNPBaseRouteCollectionViewCell
TVNPRoutingMusicBarsView
TVNPMediaItem
TVNPRoutingMainViewController
TVNPRoutingDestinationsCollectionViewControllerDelegate
TVNPRoutingRoutesCollectionViewControllerDelegate
TVNPOdeonHostViewController
TVNPOdeonMainViewControllerDelegate
TVNPOdeonMainViewController
TVNowPlayingService
TVNPRoutingDestinationsCollectionViewLayout
TVNPRoutingDestinationsCollectionViewLayoutAttributes
TVNPRoutingDestinationsCollectionViewLayoutInvalidationContext
TVNPMediaDestinationRoute
TVNPRoutingRoutesCollectionViewLayoutDelegate
UICollectionViewDelegate
UIScrollViewDelegate
TVNPRoutingRoutesCollectionViewLayout
TVNPRoutingRoutesCollectionViewLayoutAttributes
TVNPRoutingRoutesCollectionViewController
TVNPOutputDeviceRoute
TVNPBaseRoutingDestinationCollectionViewCell
TVNowPlayingServiceAppDelegate
UIApplicationDelegate
TVNPMediaRemoteObserver
TVNPMetadataPlayerCommandDelegate
TVNPViewController
TVNPRoutingDestinationCollectionViewCell
TVNPShareAudioMainViewController
TVNPEndpointRouteConnection
MPRequestResponseControllerDelegate
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
v16@0:8
{CGSize=dd}16@0:8
{CGSize=dd}32@0:8{CGSize=dd}16
v20@0:8f16
v24@0:8f16B20
v24@0:8@16
v24@0:8d16
d16@0:8
B32@0:8@16@24
v32@0:8@16@24
@16@0:8
f16@0:8
v20@0:8B16
{CGPoint=dd}16@0:8
@"UIImage"
@"TVNPNowPlayingProgressView"
@"UIImageView"
@"UIView"
{CGPoint="x"d"y"d}
Q24@0:8q16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v28@0:8@16I24
v28@0:8@16f24
v32@0:8@16q24
v28@0:8@"MPVolumeController"16B24
v28@0:8@"MPVolumeController"16I24
v32@0:8@"MPVolumeController"16@"NSString"24
v28@0:8@"MPVolumeController"16f24
v32@0:8@"MPVolumeController"16q24
@24@0:8@16
v48@0:8@16@24@32^v40
v24@0:8Q16
@"MPAVEndpointRoute"
@"TVNPEndpointRouteConnection"
@"MPVolumeController"
@"<NSCopying>"
v32@0:8@16@?24
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSXPCInterface"16@0:8
v32@0:8@"NSDictionary"16@?<v@?@"<NSSecureCoding>"@"NSError">24
v24@0:8@"<NSSecureCoding>"16
v28@0:8@"TVNPRoutingMainViewController"16B24
@32@0:8@16@24
@"NSObject<OS_dispatch_group>"
@"TVNPGroupableRoutingController"
v28@0:8@"TVNPShareAudioMainViewController"16B24
@"TVNPShareAudioMainViewController"
v40@0:8@16@24Q32
v40@0:8@"<PBSBulletinServiceInterface>"16@"PBSBulletin"24Q32
@48@0:8@16@24@32@?40
v40@0:8@16@24@32
{CGPoint=dd}40@0:8@16{CGPoint=dd}24
@?16@0:8
v24@0:8@?16
@"NSObject<TVNPRoutingController>"
@"<TVNPRoutingDestinationsCollectionViewControllerDelegate>"
@"PBSAssertion"
@"TVNPRoutingDestination"
@"PBSBulletin"
@"NSObject<OS_dispatch_queue>"
@"UICollectionViewDiffableDataSource"
@"NSDictionary"
@"TVNPRoute"
v64@0:8@16@24q32@40@48@?56
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v32@0:8@"HMMediaDestinationController"16@"<HMMediaDestination>"24
v24@0:8@"HMMediaDestinationController"16
q16@0:8
v32@0:8@"TVNPRoute"16@"TVNPRoutingDestination"24
v24@0:8@"<HMMediaDestination>"16
v24@0:8@"TVNPRoutingDestination"16
@"TVNPRoutingDestination"16@0:8
@"NSArray"16@0:8
@"HMMediaDestinationController"16@0:8
@28@0:8@16B24
@36@0:8@16B24@?28
@"NSArray"
@"HMMediaDestinationController"
@"NSString"
@"MPAVEndpointRoutingDataSource"
@"MPAVOutputDeviceRoutingDataSource"
@"MPAVRoutingController"
@"TVCSHomeManager"
@"NSMutableDictionary"
@"UILabel"
@52@0:8@16{CGSize=dd}24B40@?44
@60@0:8@16{CGSize=dd}24B40q44@?52
@68@0:8@16{CGSize=dd}24B40q44@52@?60
@"NSString"24@0:8@16
@"NSURL"24@0:8@16
@52@0:8@16{CGSize=dd}24B40@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">44
@60@0:8@16{CGSize=dd}24B40q44@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">52
@68@0:8@16{CGSize=dd}24B40q44@"<IKNetworkRequestLoader>"52@?<v@?@"TVImage"@"NSString"@"NSDate"Q@"NSError">60
@"TVImage"
@"NSData"
@"NSNumber"
v24@0:8q16
v32@0:8q16@24
v28@0:8d16B24
v48@0:8d16{?=qiIq}24
v52@0:8d16{?=qiIq}24B48
@24@0:8@?16
@32@0:8@16@?24
v32@0:8Q16@24
@24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@24@0:8@?<v@?d@"NSDate"dB>16
@32@0:8@"NSArray"16@?<v@?B>24
v28@0:8@"TVPSubtitleOption"16B24
@"<TVPPlaybackDelegate>"16@0:8
v24@0:8@"<TVPPlaybackDelegate>"16
@"<TVPASyncPlaybackDelegate>"16@0:8
v24@0:8@"<TVPASyncPlaybackDelegate>"16
@"TVPPlaylist"16@0:8
v24@0:8@"TVPPlaylist"16
@"NSObject<TVPMediaItem>"16@0:8
v24@0:8@"NSObject<TVPMediaItem>"16
@"TVPPlaybackState"16@0:8
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"TVPChapterCollection"16@0:8
v24@0:8@"TVPChapterCollection"16
@"TVPChapter"16@0:8
@"TVPInterstitial"16@0:8
@"TVPTimeRange"16@0:8
@"TVPDateRange"16@0:8
@"TVPAudioOption"16@0:8
v24@0:8@"TVPAudioOption"16
@"TVPSubtitleOption"16@0:8
v24@0:8@"TVPSubtitleOption"16
v32@0:8Q16@"NSString"24
v32@0:8d16@24
f24@0:8@16
@"NSDate"
@"NSTimer"
@"TVPPlaylist"
@"TVPPlaybackState"
@"TVPChapter"
@"TVPTimeRange"
@"TVPDateRange"
@"TVPChapterCollection"
@"TVPAudioOption"
@"TVPSubtitleOption"
@"<TVPPlaybackDelegate>"
@"<TVPASyncPlaybackDelegate>"
@"TVPInterstitial"
@"<TVNPMetadataPlayerCommandDelegate>"
{CGSize="width"d"height"d}
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@20@0:8B16
@"_UIFloatingContentView"
@"UIActivityIndicatorView"
@"TVNPRoutingMusicBarsView"
@"TVNPNowPlayingSliderView"
@"UILayoutGuide"
@"NSMutableArray"
@"TVNPDataImageLoader"
v28@0:8@"TVNPRoutingDestinationsCollectionViewController"16B24
v24@0:8@"TVNPRoutingRoutesCollectionViewController"16
v32@0:8@"TVNPRoutingRoutesCollectionViewController"16@"TVNPShareAudioMainViewController"24
@"<TVNPRoutingMainViewControllerDelegate>"
@"MPRouteLabel"
@"TVNPRoutingDestinationsCollectionViewController"
@"TVNPRoutingRoutesCollectionViewController"
v28@0:8@"TVNPOdeonMainViewController"16B24
@"TVNPOdeonMainViewController"
@"<TVNPOdeonMainViewControllerDelegate>"
@"UIButton"
{CGPoint=dd}24@0:8@16
@24@0:8^{_NSZone=}16
v32@0:8@16Q24
@"<HMMediaDestination>"
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16@24@32@40
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
@40@0:8@16@24@32
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
B32@0:8@"UICollectionView"16@"NSIndexPath"24
v32@0:8@"UICollectionView"16@"NSIndexPath"24
v40@0:8@"UICollectionView"16@"UICollectionViewCell"24@"NSIndexPath"32
v48@0:8@"UICollectionView"16@"UICollectionReusableView"24@"NSString"32@"NSIndexPath"40
B48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
v48@0:8@"UICollectionView"16:24@"NSIndexPath"32@40
@"UICollectionViewTransitionLayout"40@0:8@"UICollectionView"16@"UICollectionViewLayout"24@"UICollectionViewLayout"32
B32@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24
v40@0:8@"UICollectionView"16@"UICollectionViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UICollectionView"16
@"NSIndexPath"40@0:8@"UICollectionView"16@"NSIndexPath"24@"NSIndexPath"32
{CGPoint=dd}40@0:8@"UICollectionView"16{CGPoint=dd}24
B40@0:8@"UICollectionView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UICollectionView"16
@"UIContextMenuConfiguration"48@0:8@"UICollectionView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24
v40@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UICollectionView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
@"NSIndexPath"32@0:8@"UICollectionView"16@"UICollectionViewLayout"24
@"NSIndexPath"
{CGSize=dd}40@0:8@16@24@32
@"NSDiffableDataSourceSnapshot"
@"<TVNPRoutingRoutesCollectionViewControllerDelegate>"
@"UILongPressGestureRecognizer"
@"UITapGestureRecognizer"
v40@0:8@16Q24@32
@"MPAVOutputDeviceRoute"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
B48@0:8@16@24@32@40
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
v28@0:8I16@20
v28@0:8I16@"NSDictionary"20
@"TVNPMetadataPlayer"
@"TVPMusicNowPlayingViewController"
@"TVNPMediaRemoteObserver"
@"<TVNPShareAudioMainViewControllerDelegate>"
@"PBSControlCenterOverlayAssertion"
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v32@0:8{CGSize=dd}16
@"MPArtworkCatalog"
@"MPRequestResponseController"
ROUTING: Fetching initial endpoints (begin)
ROUTING: Fetching initial endpoints (complete)
ROUTING: Active Endpoint UID %{public}@
ROUTING: Found Active Endpoint
ROUTING: No Matching Active Endpoint
ROUTING: Initial Focus Index: %ld
Destination %@ has no unique identifier
ShouldUseGrouping: %d CanUseGrouping: %d RouteIsInRoom: %d AlwaysPickRatherThanAdd: %d
Add Picked Route: %{public}@ to Endpoint: %{public}@
Add Picked Route result: %{public}@
Set Picked Route: %{public}@ for Endpoint: %{public}@
Set Picked Route result: %@
Remove Picked Route: %{public}@ from Endpoint: %{public}@
Remove Picked Route result: %{public}@
Successfully updated media destination to %@
Error updating media destination %@
Retarget to Endpoint: %{public}@
Can't create destination, no MRAVEndpointRef. {endpointRoute_ptr=%p, endpointRoute=%{public}@}
No destination for endpoint route. {endpointRoute_ptr=%p, endpointRoute=%{public}@}
No route for output device. {routeUID=%{public}@, outputDevice_ptr=%p, outputDevice=%{public}@}
Should show routes. {shouldShowRoutes=%{bool}d, multipleSelectionEnabled=%{bool}d, controllerCanGroup=%{bool}d, canModifyGroupMembership=%{bool}d, currentDestinationIsLocalDestination=%{bool}d, endpointRoute_ptr=%p, endpointRoute=%{public}@}
System output route: %@
Available Routes (Input) [%{public}@]
Available Routes (Output) [%{public}@]
Update Routing DataSource. {availableDestinations_input=%ld, availableDestinations_output=%ld, availableRoutes_input=%ld, availableRoutes_output=%ld, shouldShowRoutes=%{bool}d, allowsDestinationSelection=%{bool}d, endpointRoute_ptr=%p, endpointRoute=%{public}@}
HMMediaDestinationController did update destination %@
Firing elapsed time observer after setting last elapsed time / timestamp
Firing elapsed time observer after changing state / rate: %{public}@.
ROUTING: Fetch Active Endpoint
ROUTING: Fetch Active Endpoint Complete: %{public}@
Updating audio destination to %@ with routeUID %@
Successfully updated the audio destination to %@
Failed to update the audio destination with error %@
Route %@ has no routeUID
TVNPRoutingRoutesCollectionViewController: Applying snapshot %{public}@
Focused route %@ volume up from %f to %f
Focused destination %@ volume up from %f to %f
Volume up not available
Focused route %@ volume down from %f to %f
Focused destination %@ volume down from %f to %f
Volume down not available
%s: Update output device route volume. title: %{public}@, isConnected: %d, isVolumeControlAvailable: %d, isGroupLeaderAppleTV: %d, isLocalHDMI: %d
(%{public}@) Send %{public}@ to route %@, status: %{public}@
METADATA: (%{public}@) update with song: %{public}@
METADATA: (%{public}@) apply update artwork with image: %{public}@
METADATA: (%{public}@) artwork catalog changed to nil
METADATA: (%{public}@) using placeholder image for app: %{public}@
METADATA: (%{public}@) no song, clearing out data
METADATA: (%{public}@) apply updates with changed keys: %{public}@
Connection did invalidate: %{public}@
(%{public}@) Connect to %{public}@ and Pair: %d
connectWithOptions->MPAVRouteConnectionConnectOptionsNone (completion): %{public}@ error: %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.BluetoothServices</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.appletv.pbs.allow-custom-playpause</key>
<true/>
<key>com.apple.appletv.pbs.allow-custom-volume</key>
<true/>
<key>com.apple.appletv.pbs.allow-now-playing-presentation</key>
<true/>
<key>com.apple.appletv.pbs.allow-volume-hud</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.now-playing-view-service</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.itunescloud.delegate-account-store</key>
<true/>
<key>com.apple.itunescloud.delegation-provider</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.homekit</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceBluetoothAlways</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.BluetoothServices</string>
<string>com.apple.itunescloud.delegation-provider</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.PairingManager</string>
<string>com.apple.SharingServices</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.Music</string>
<string>com.apple.airplay</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>appleaccount</string>
</array>
</dict>
</plist>
