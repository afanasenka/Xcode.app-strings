sharedAnalytics
configureForDaemon
logEventWithType:context:
sharedDaemon
init
_descriptionWithIndent:
description
numberWithInteger:
initWithFormat:
arrayWithObjects:count:
componentsJoinedByString:
hash
allowsAWDL
allowsBLE
allowsInfraWiFi
decodeObjectOfClass:forKey:
integerValue
initWithAllowsAWDL:allowsBLE:allowsInfraWiFi:
encodeObject:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
isEqual:
_allowsAWDL
_allowsBLE
_allowsInfraWiFi
initWithBaseModel:
copy
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
setAllowsAWDL:
setAllowsBLE:
setAllowsInfraWiFi:
generate
.cxx_destruct
_baseModel
_mutationFlags
mutatedCopyWithMutator:
newWithBuilder:
_allAnchorsFromRequest:andResponse:
syncReason
_resetSyncVerification
setDeveloperMode:
clientIdentifier
_appMetaDataForAppProxy:clientIdentifier:syncSlots:
_intents_findAppsWithAnIntentsServiceExtension:
_appMetaDataListFromVocabSources:appIdentifyingInfoList:
setSources:
setSyncReason:
setIncludeAllKnownAnchors:
setAppMetaDataList:
setWatchAppMetaDataList:
_addOutstandingAnchorsRequestId:
forceEagerDeserialization
_sync_isRequestBlockingSyncVerification
sources
setAnchors:
_removeOutstandingAnchorsRequestId:
_handleValidatedSyncGetAnchorsResponse:forGetAnchors:
current
_removeOutstandingSyncChunkId:
setClientIdentifier:
setPerformInternalVerification:
setFetchSyncDebugInfo:
_emptyVerificationSyncAnchorForKey:appBundleID:syncSlotName:
setChecksums:
_sync_continueVerificationIfConditionsMet
setPreGen:
databaseSyncEnabled
currentSyncDatabase
inTransaction
_syncRecordForKey:fromDomainObject:appMeta:
donate:error:
remove:error:
_addOutstandingSyncChunkId:
syncRecordWithKey:identifier:priority:debugValue:dataValue:addedValue:appMeta:
initRequiringSecureCoding:
encodeObject:
finishEncoding
encodedData
setDataValue:
setMetaValue:
fullDescription
setDebugValue:
_finishVerificationWithKeys:
isSubsetOfSet:
_sendSyncFinishedAndReferenceCurrentSyncPromise:
_prepareAndStartSyncVerification
_sync_isRequestBlockingSync
_syncChunkWindowFull
_cleanUpForFailureCommandWithRefId:
_hasOutstandingSyncChunkId:
_hasOutstandingAnchorsRequestId:
_requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:
_fetchAllAppSourcesForSyncingWithCustomVocabInfo:completion:
itemID
_sendContextPromiseForTypes:withAceId:
setPromiseTypes:
_setBackgroundContext
_setAlertContext
_setSyncContext
setKeys:
setPreviewRestrictedApps:
_aceValue
setOrderedContext:
_ensureBackgroundContextSentToServer
_sendContextPromiseForTypes:
_getOrderedContextForAFApplicationContext:completion:
_fetchAndSendApplicationContextForApplicationInfos:fetchedOrderedContext:refID:
_context_deviceState
associatedBundleIdentifier
bulletin
aceContext
contextDictionary
dictionaryArrayWithAceObjectArray:
_context_bundleIdHasSupportForCarPlayRequiredMessageIntents:
setIsNew:
setStart:
endDate
setEnd:
sectionSubtype
setVoiceMail:
withContextManager:
_setRestrictedAppContext
_ad_timerRequestRepresentation
ad_aceResponseCommandGenericErrorRepresentation
_ad_timerResponseForResponse:
getSiriRequestForClientBoundAceCommand:completionHandler:
aceCommandForSiriResponse:responseError:forRequestCommand:
timer
_ad_setTimer:
setTimer:
_ad_timerWithState:
setState:
timerValue
setValue:
state
isEqualToString:
value
setTimerValue:
_ad_timer
setLanguageString:
setQuality:
setVoiceType:
setVoiceContentVersion:
route
remoteDeviceUID
UUIDString
objectForKey:
boolValue
sharedInstance
getAudioSessionID
retrieveSessionWithID:
currentRoute
inputs
firstObject
portName
isEarpieceActiveNoiseCancelationEnabled
_fetchBTInfo
currentCarPlayExternalDevice
screenIDs
modelName
deviceWithAddress:
deviceWithUID:
deviceInfo
_bluetoothDeviceInfo
address
vendorID
numberWithUnsignedInt:
stringValue
productID
initWithDictation:fingerprintOnly:secureOfflineOnly:audioAlertStyle:recordSettings:endpointerModelVersion:recordRoute:recordDeviceInfo:playbackRoute:audioDeviceID:audioSessionID:voiceTriggerEventInfo:activationAlertStartTimestamp:startRecordingTimestamp:firstBufferTimestamp:firstBufferHostTime:estimatedSpeechEndHostTime:deviceIdentifier:includeBTInfo:speechEvent:
initWithDictation:codec:
isBluetooth
headsetAddress
vendorId
productId
codecIsNarrowband
isDictation
isFingerprintOnly
isSecureOfflineOnly
audioAlertStyle
codec
source
destination
deviceIdentifier
dspStatus
headsetName
voiceTriggerEventInfo
activationAlertStartTimestamp
startRecordingTimestamp
audioSessionID
firstBufferTimestamp
firstBufferHostTime
estimatedSpeechEndHostTime
isDucking
isEndAlertInfo
setIsEndAlertInfo:
triggeredTwoShotBorealis
setTriggeredTwoShotBorealis:
audioSessionSetActiveEndHostTime
setAudioSessionSetActiveEndHostTime:
endpointerModelVersion
bluetoothDevice
speechEvent
_headsetAddress
_isDictation
_isFingerprintOnly
_isSecureOfflineOnly
_isDucking
_isEndAlertInfo
_triggeredTwoShotBorealis
_audioSessionID
_audioAlertStyle
_codec
_source
_destination
_route
_deviceInfo
_deviceIdentifier
_modelName
_dspStatus
_headsetName
_voiceTriggerEventInfo
_activationAlertStartTimestamp
_startRecordingTimestamp
_firstBufferTimestamp
_firstBufferHostTime
_estimatedSpeechEndHostTime
_audioSessionSetActiveEndHostTime
_endpointerModelVersion
_bluetoothDevice
_speechEvent
intValue
defaultManager
stringByAppendingPathComponent:
fileExistsAtPath:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
initWithServiceIdentifier:forRequests:requireConnectedPeer:
_account
_pairedDevice
modelIdentifier
productName
productVersion
productBuildVersion
uniqueIDOverride
isNearby
_service
devices
countByEnumeratingWithState:objects:count:
isDefaultPairedDevice
isConnected
initWithService:
addDelegate:queue:
accounts
anyObject
setWithObject:
_sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:
_hasConnectedPeer
initWithDomain:code:userInfo:
data
initWithProtobufData:type:isResponse:
setObject:forKey:
numberWithDouble:
sendProtobuf:toDestinations:priority:options:identifier:error:
_wrappedSendFailureError:
dictionaryWithObjects:forKeys:count:
isResponse
initWithData:
removeObjectForKey:
incomingResponseIdentifier
outgoingResponseIdentifier
expectsPeerResponse
type
numberWithBool:
_invokeCompletionForIdentifier:response:error:
_sendResponse:forRequestId:
peerConnection:handlePBSubclass:completion:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithServiceIdentifier:forRequests:
hasPeer
peerType
peerName
peerVersion
peerBuildVersion
deviceIsNearby:
serviceIdentifier
sendRequest:
sendRequest:fireAndForget:
sendRequest:responseClass:completion:
sendRequest:responseClass:timeout:completion:
sendRequest:responseClass:overrideRequireConnectedPeer:allowCloud:completion:
setDelegate:forRequestTypes:
_identifier
_requireConnectedPeer
_queue
_idsService
_completions
_responseClasses
_delegate
_requestMapFunc
_classMapFunc
numberWithUnsignedLongLong:
sequence
commandPushGenerationsRequest
commandPushGenerationsResponse
commandPullGenerationsRequest
commandPullGenerationsResponse
commandPullDeltaRequest
commandPullDeltaResponse
commandPullSnapshotRequest
commandPullSnapshotResponse
unsignedLongLongValue
initWithSequence:type:commandPushGenerationsRequest:commandPushGenerationsResponse:commandPullGenerationsRequest:commandPullGenerationsResponse:commandPullDeltaRequest:commandPullDeltaResponse:commandPullSnapshotRequest:commandPullSnapshotResponse:
_sequence
_type
_commandPushGenerationsRequest
_commandPushGenerationsResponse
_commandPullGenerationsRequest
_commandPullGenerationsResponse
_commandPullDeltaRequest
_commandPullDeltaResponse
_commandPullSnapshotRequest
_commandPullSnapshotResponse
setSequence:
setType:
setCommandPushGenerationsRequest:
setCommandPushGenerationsResponse:
setCommandPullGenerationsRequest:
setCommandPullGenerationsResponse:
setCommandPullDeltaRequest:
setCommandPullDeltaResponse:
setCommandPullSnapshotRequest:
setCommandPullSnapshotResponse:
initWithNotification:appID:completion:
completeNotificationWithSuccess:
setNotification:
appID
setAppID:
announcementType
setAnnouncementType:
requestInfo
setRequestInfo:
requestWasInterrupted
setRequestWasInterrupted:
_requestWasInterrupted
_appID
_announcementType
initWithAudioDeviceID:
sharedSession
currentInputRoute
currentOutputRoute
_inputRoute
_outputRoute
mutableCopy
deviceName
_isBluetooth
_deviceName
_uid
hasLastKnownStreamId
_lastKnownStreamId
_savedAudioFilesDirectory
_initWithType:pathGenerator:xorFileHandle:priority:
fileDescriptor
defaultCStringEncoding
stringWithCString:encoding:
fileURLWithPath:isDirectory:
_generateTemporaryFileURL
_delete
initWithFileDescriptor:closeOnDealloc:
_audioFile
_asbd
_fileHandle
_underlyingError
dataType
initWithDataType:
_dataType
setDataType:
dictionaryRepresentation
stringWithFormat:
dictionary
setInterfaceName:
allocWithZone:
hasInterfaceName
setRttCurrent:
setHasRttCurrent:
hasRttCurrent
setRttSmoothed:
setHasRttSmoothed:
hasRttSmoothed
setRttVariance:
setHasRttVariance:
hasRttVariance
setRttBest:
setHasRttBest:
hasRttBest
setTxPackets:
setHasTxPackets:
hasTxPackets
setTxBytes:
setHasTxBytes:
hasTxBytes
setTxRetransmitBytes:
setHasTxRetransmitBytes:
hasTxRetransmitBytes
setTxUnacked:
setHasTxUnacked:
hasTxUnacked
setRxPackets:
setHasRxPackets:
hasRxPackets
setRxBytes:
setHasRxBytes:
hasRxBytes
setRxDuplicateBytes:
setHasRxDuplicateBytes:
hasRxDuplicateBytes
setRxOooBytes:
setHasRxOooBytes:
hasRxOooBytes
setSndBandwidth:
setHasSndBandwidth:
hasSndBandwidth
setSynRetransmits:
setHasSynRetransmits:
hasSynRetransmits
setTfoSynDataAcked:
setHasTfoSynDataAcked:
hasTfoSynDataAcked
readFrom:
writeTo:
copyTo:
mergeFrom:
interfaceName
rttCurrent
rttSmoothed
rttVariance
rttBest
txPackets
txBytes
txRetransmitBytes
txUnacked
rxPackets
rxBytes
rxDuplicateBytes
rxOooBytes
sndBandwidth
synRetransmits
tfoSynDataAcked
_rxBytes
_rxDuplicateBytes
_rxOooBytes
_rxPackets
_sndBandwidth
_txBytes
_txPackets
_txRetransmitBytes
_txUnacked
_interfaceName
_rttBest
_rttCurrent
_rttSmoothed
_rttVariance
_synRetransmits
_tfoSynDataAcked
_has
errorWithDomain:code:userInfo:
_errorWithCode:underylingError:
processInfo
systemUptime
_updatePairedDeviceInfo
_requestStreamEstablishment
_initWithServiceIdentifier:listener:
weakObjectsHashTable
addObject:
removeObject:
setStreamId:
_wakeUpMessageFailedWithError:
_close
_invokeSocketCompletionWithCurrentSocketOrError:
peerStreamConnection:failedWithError:
_initiateOptimisticEagerStreamFetchRetry
_getSocketFromDevice
_streamPairInterruptedError
_wakeUpRemoteForStreamIdentifier:
_getSocketFromDeviceForStreamIdentifier:
_noDeviceError
_noNearbyPeerError
code
_deviceConnectionClosedErrorWithUnderlyingError:
close
sharedPreferences
setLastKnownProxyStreamId:
synchronize
initSocketWithDevice:options:completionHandler:queue:
_setPreferBTClassic:
_invokeMetricsCompletionWithMetrics:forIdentifier:
setConnectionMetricsForIDS:messageDelay:openErrorCode:
lastKnownProxyStreamId
setLastKnownStreamId:
setLinkPreferences:
isCloudConnected
numberWithUnsignedInteger:
initWithDictionary:
initWithCapacity:
addEntriesFromDictionary:
_failureMetricsContextDictionary
updateSharedInfoWithIdentifier:productType:buildVersion:
_handleResponseProtobuf:forIdentifier:
_ad_performWithPeerStreamConnection:context:
streamId
peerStreamConnectionHasIncomingPeer:
peerStreamConnection:requestMetrics:
_ad_setMetrics:
lastKnownStreamId
_ad_metrics
averageLocalRTT
localMessageState
deviceBlackedOut
count
_establishEagerStreamPair
containsObject:
intersectSet:
sharedCommandCenter
updateSharedDataFromPeerUseCache:allowCloudMessaging:completion:
_preheat
sharedPeerStreamConnectionWithServiceIdentifier:listener:
addDelegate:
removeDelegate:
getSocketForConnection:completion:
closeForConnection:
getRemoteMetrics:
getAWDMetrics:completion:
hasNearbyPeer
setPreferBTClassic:
getMetricsContext:
_handleWakeUpMessage:context:
_handleGetMetricsMessage:context:
_handleReestablishMessage:context:
peerSupportsExtendedHeader
preheat
deviceIsNearby
_listener
_delegates
_currentPeerStreamConnection
_metricsResponses
_wakeupMessageIdentifier
_currentStreamIdentifier
_gettingDeviceSocket
_socketForConnectionHasBeenVended
_deviceConnection
_sockfd
_socketCompletion
_prefersBTClassic
_productType
_buildVersion
_peerSupportsNamedStreams
_nearbyDeviceIdentifiers
_lastSharedDataUpdateTimestamp
_optimisticRetriesAreBlocked
_peerSupportsExtendedHeader
_lastNearbyDevicesChangedTimestamp
_lastIDSMessageSentTimestamp
_lastIDSMessageStartSendTimestamp
_lastWakeUpMessageDuration
_lastStreamEstablishmentDuration
_lastOpenErrorCode
_lastIDSMetricsContext
_lastIDSMessageSuccess
metrics
initWithServiceIdentifier:delegate:listener:
getSocket:
getLocalMetrics:
_sharedConnection
_vendedDeviceConnection
destinationURIs
initWithServicePort:
inMemoryKnowledgeStore
_inMemoryKnowledgeStore
defaultKnowledgeStore
knowledgeStoreWithName:
handleGetValuesForKeys:completion:
handleSetValuesForKeys:completion:
handleDeleteValueForKey:completion:
handleSetLinkedData:completion:
keys
storeName
storeType
knowledgeStoreWithName:type:error:
setStoreType:
setStoreName:
setEntries:
valuesForKeys:completionHandler:
entries
setValue:forKey:completionHandler:
removeValueForKey:completionHandler:
sparqlQuery
setResult:
sparqlResultsForQuery:completionHandler:
linkedData
predicate
entityWithIdentifier:
linkTo:withPredicate:completionHandler:
handleGetLinkedData:completion:
idsDeviceUniqueIdentifier
objectForKeyedSubscript:
alarmSnapshot
hasFiringAlarms
timerSnapshot
hasFiringTimers
indexesOfObjectsPassingTest:
objectsAtIndexes:
compare:
sortedArrayUsingComparator:
playbackStateSnapshot
playbackState
fromLocalDevice
ad_requiresProximityInformation
ad_executionDeviceForDeviceContexts:proximityMap:localDeviceIsFollower:logNearbyDeviceMetrics:
allValues
roomName
initWithPeerInfo:proximity:commandRelayProxyIdentifier:
proximity
alarmIds
timerIds
enumerateKeysAndObjectsUsingBlock:
sharedManager
getDeviceProximityRelativeToLocalDeviceWithDeviceContexts:completion:
initWithQueue:
updateContext:
getPreferredDeviceToHandleCommand:logNearbyDeviceMetrics:completion:
_currentContext
_isLocalDeviceFollowerInStereoPair
mostRecentFiringAlarm
firedDate
mostRecentFiringTimer
fireDate
contextCollectorSource
peerInfoForIDSDeviceUniqueIdentifier:allowNonPeers:
setIdsDeviceUniqueIdentifier:
setRoomName:
initWithArray:
alarmsByID
alarmURL
isFiring
indexOfObjectPassingTest:
objectAtIndexedSubscript:
timersByID
timerURL
numOfWords
trailingSilenceDuration
eosLikelihood
pauseCounts
silenceProbability
taskName
processedAudioDurationMs
initWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:
_storageForDeviceWithIdentifier:
itemsByID
setTimersByID:
_invalidateStorageForDeviceWithIdentifier:
beginGrouping
endGroupingWithOptions:
_sendStereoPartnerAction:timerID:changes:completion:
setAlertContextDirty
initWithIdentifier:delegate:
clockItemStorageDidUpdate:insertedItemIDs:updatedItemIDs:deletedItemIDs:
getSnapshotForDeviceWithIdentifier:completion:
getSnapshotsByDeviceIdentifierWithCompletion:
prepareStorageForDeviceWithIdentifier:
finalizeStorageForDeviceWithIdentifier:
accessStorageForDeviceWithIdentifier:usingBlock:
updateTimerWithID:changes:completion:
removeTimerWithID:completion:
_storagesByDeviceIdentifier
startMockServerWithReplayFile:withReply:
disconnect
checkResourceIsReachableAndReturnError:
_establishConnectionIfNeeded
_remoteProxy
setContent:
hasContent
content
_content
generation
date
items
setWithObjects:
decodeObjectOfClasses:forKey:
initWithGeneration:date:items:
_generation
_date
_items
setGeneration:
setDate:
setItems:
initWithSize:
add:
movingAverage
_ring
_movingAverage
_size
_cursor
_ringFull
_offlineDictationStatusStringToDictionary:
setOfflineDictationStatus:
isEqualToNumber:
initWithDelegate:instanceUUID:
_updateOfflineDictationStatus:error:
getOfflineDictationStatusIgnoringCache:withCompletion:
offlineDictationStatusIgnoringCache:error:
_offlineDictationStatus
_callStateDidChange:
_handleCommand:forDomain:executionContext:reply:
_hasIncomingCall
initWithErrorCode:
targetDevice
_processPendingCallResultBlocks
_remoteExecute_remoteDeviceExecuteCommand:onDeviceForAssistantId:executionContext:completion:
setDomain:
_remoteExecute_remoteDeviceExecuteCommand:executionContext:completion:
_isInCall
_serialQueue
_pendingCallResultBlocks
initWithClientBoundCommand:
setIdentifier:
dealloc
initWithObjects:
_systemDomains
allObjects
arrayWithObject:
_saCommandFailed:completion:
_saCommandIgnored:completion:
_saSendCommands:completion:
_saAssistantDestroyed:completion:
_saCancelSucceeded:completion:
_saRollbackSucceeded:completion:
_saSetClientData:completion:
_saSetHandoffPayload:completion:
_saStartLocalRequest:completion:
_saAddResultObjects:completion:
_saExecuteCallbacks:completion:
_saInitiateHandoffOnCompanion:completion:
_saSetDeviceTTSMuteState:completion:
_saPing:completion:
_saWaitForCommands:completion:
_saSyncGetAnchorsResponse:completion:
_saSyncChunkDenied:completion:
_saSyncChunkAccepted:completion:
_saSASyncGetCachedSyncAnchors:completion:
_saSyncGetAnchors:completion:
_saSyncClientVerify:completion:
_saSyncServerVerifyResponse:completion:
_saSyncFinished:completion:
_saDomainObjectCreate:completion:
_saDomainObjectRetrieve:completion:
_saDomainObjectUpdate:completion:
_saDomainObjectCancel:completion:
_saDomainObjectDelete:completion:
_saDomainObjectCommit:completion:
_saDomainObjectPunchOut:completion:
_sasSpeechRecognized:completion:
_sasSpeechMultilingualSpeechRecognized:completion:
_sasSpeechPartialResult:completion:
_sasSpeechFailure:completion:
_sasAbortSpeechRequest:completion:
_saStructuredDictationResult:completion:
_saStructuredDictationFailure:completion:
_sasVoiceSearchPartialResult:completion:
_sasVoiceSearchFinalResult:completion:
_sasSuspendClientEndpointer:completion:
_sasConfirmEndpoint:completion:
_sasPronunciationRecognized:completion:
_sasServerEndpointFeatures:completion:
_sasClientBoundConfusionNetwork:completion:
_saClientSetupInfo:completion:
_sasResultCandidate:completion:
_sasSpeechServerEndpointIdentified:completion:
_sasVoiceIdentificationSignal:completion:
_saAcknowledgeAlert:completion:
_saDeviceConfiguration:completion:
_saDeviceMyriadConfiguration:completion:
_saSetLatencyDiagnosticConfiguration:completion:
_saAIRequestSearch:completion:
_saAISearchCompleted:completion:
_saAIRetrySearch:completion:
_saLogSignatureWithABC:completion:
_saLogNumericEvent:completion:
_saLogStringEvent:completion:
_saPerformDataDetection:completion:
_saStartUIRequest:completion:
_saTTSGetSpeechSynthesisVolume:completion:
_saTTSSetSpeechSynthesisVolume:completion:
_saNotificationSearch:completion:
_sasExtractSpeechData:completion:
_saRequestCompleted:executionContext:completion:
_saExecuteOnRemoteRequest:executionContext:completion:
_saQuickStop:executionContext:completion:
_saGetRequestOrigin:executionContext:completion:
_saUnhandledObject:completion:
_handleQuickStopCompleted:inResponseTo:completion:
isSystemService
handle
domains
commandsForDomain:
implementsCommand:forDomain:
controlCenterLockRestrictedCommands
handleCommand:forDomain:executionContext:reply:
handleResponse:toCommand:completion:
_commandMap
_commandMapV2
UUID
invalidateTimer
initWithTimeoutInterval:onQueue:timeoutHandler:
start
cancel
startTimerOnQueue:withTimeoutHandler:
uuid
timedout
syncChunkHandler
setSyncChunkHandler:
_timer
_timedout
_uuid
_syncChunkHandler
_ad_transformedShowActivityRequest
_ad_transformedHealthSuccessResponse
activityDataType
activityView
_initWithDataType:view:
domain
aceId
setRefId:
setErrorCode:
setReason:
_shouldMonitorScaleChanges
_updateDisplayScaleIfNeededAndNotify:
initWithInitializationCompletion:
connectedIdentities
configurationForIdentity:
scale
supportsUHDAndHDR
displayMonitor:didConnectIdentity:withConfiguration:
displayMonitor:didUpdateIdentity:withConfiguration:
displayMonitor:willDisconnectIdentity:
_displayMonitor
_hasSetUpDisplayMonitor
_displayScale
dictionaryWithContentsOfFile:
_timeouts:expiringAfter:
_timeoutsExpiringAfter:
_saveTimeouts:
supportedVocabularyStringTypes
_af_normalizedKeyForKey:appBundleID:syncSlotName:
anchors
suspendDurationInSeconds
_af_isValid
_af_normalizedKey
timeoutsExpiringAfter:
saveTimeouts:
setDictionary:
appIdentifyingInfo
bundleId
filterBlacklistedKeys:vocabSources:
dictionaryWithValuesForKeys:
checkIfAnyUserVocabularyIsBlacklistedForApp:completion:
checkPermissionToSyncSlot:forApp:completion:
filterBlacklistedAnchorsFrom:includingNewRestrictionsFromResponse:
filterBlacklistedKeys:appSources:
_cachedTimeoutTable
_handleMessage:messageType:fromDeviceWithIdentifier:completion:
processRemoteCommandWithPayload:fromPeer:withReply:
handleMessage:messageType:fromDeviceWithIdentifier:completion:
sendMessageWithPayload:toPeer:withReply:
setLocaleIdentifier:
setPeerHostname:
_keychainValueForKey:
_setKeychainValue:forKey:
setPeerLoggingAssistantIdentifier:
setPeerLanguageCode:
unarchivedObjectOfClasses:fromData:error:
setPeerSiriEnabled:
setPairedWatches:
_markKeychainValuesAsDirty
_serverOverrideFromPreferences
rangeOfString:
_hostnameQAOverride
autoupdatingCurrentLocale
_setKeychainValueSync:forKey:
resetCachedHostname
_onQueueSetKeychainValue:forKey:
pairedWatches
_infoDictionaryForPreferences
_removeKeychainValueForKey:
_hostnameOverride
clearAssistantDataDuringForcedRedirect
group
_sharedDataChanged
_peerAssistantIdentifier
_peerLoggingAssistantIdentifier
_peerSpeechIdentifier
_peerUserAgentString
_peerHostname
_peerLanguageCode
_peerSiriEnabled
_keychainDataMutationFlags
_cachedHostname
_cachedServerCertificateData
_cachedValidataionData
_cachedLocalCryptoKeyData
_hasCachedHostnameQAOverride
_cachedHostnameQAOverride
_pairedWatches
_needsDestruction
_label
_assistantIdentifier
_loggingAssistantIdentifier
_speechIdentifier
_predefinedServer
_connectionPolicy
_connectionPolicyDate
_connectionPolicyHostname
_localeIdentifier
_lastAssistantDataAnchor
_validationExpiration
_validationVersion
_connectionPolicyFailureCount
_connectionPolicyFirstFailureDate
peerLoggingAssistantIdentifier
updateGizmoData:forUniqueId:
watchExistsForAssistantId:
connectionPolicyExpirationDate
responseCode
ad_aceResponseCommandRepresentationWithErrorCode:reason:
stop
reset
handleCommand:withExecutionContextMatchingInfo:completion:
openURL:completion:
isDeviceLocked
isInStarkMode
isTimeoutSuspended
originPeerInfo
ad_shouldUseExtendedFlowTimeout
errorWithCode:description:underlyingError:
initWithReason:
info
initToHandleCommandWithAceId:executionInfo:watchdogTimer:timerQueue:
initWithServiceHelper:withConnectionName:
peerInfoForCurrentCommand
cancelIfNotAlreadyCanceled
aceObjectWithDictionary:
executeCommand:peerInfo:completion:
performWithTargetQueue:withClientCommand:executionContext:replyHandler:
openSensitiveURL:
dismissAssistant
assistantLocalizedStringForKey:table:bundle:
isDeviceLockedWithPasscode
isDeviceInStarkMode
isDeviceInCarDND
handleCommand:completion:
prepareForAudioHandoffWithCompletion:
prepareForAudioHandoffFailedWithCompletion:
fetchContextsForKeys:includesNearbyDevices:completion:
_clientFlowServiceHelperQueue
_aceId
_executionInfo
_timerQueue
_timerPauseCount
encodedClassName
errorWithCode:
_ad_performWithTargetQueue:executionContext:replyHandler:
warmUpWithSignal:completion:
dataWithJSONObject:options:error:
initWithData:encoding:
setJsParameters:
_decorateFlowCommandWithError:
_failedWithErrorDescription:error:completion:
status
initWithBlock:
invokeWithValue:andValue:
initWithClientLiteWithConnectionName:
cancelOperationsForRequestID:
preheatDomain:
resetExternalResources
_clientFlowServiceQueue
requestTypeCode
responseClass
_ADPBDeviceRequestType
dataTypes
initWithDataTypes:
_dataTypes
setDataTypes:
hasStreamId
_streamId
_ad_transformedSendEmailRequest
_ad_transformedMailSuccessResponse
email
recipientsTo
_personsForRecipients:
setToRecipients:
recipientsCc
setCcRecipients:
recipientsBcc
setBccRecipients:
receivingAddresses
setReceivingAddresses:
fromEmail
setSender:
subject
setSubject:
message
setMessageBody:
identifier
setMessageIdentifier:
_initWithMessage:
arrayWithCapacity:
setHandle:
setContactHandles:
displayText
setFullName:
logLocationSend
service
initWithObject:
object
hasEqualOrHigherPrecedenceThanServiceRecord:
insertBeforeItem:
insertAfterItem:
previousItem
nextItem
syncKeys
initWithService:precedence:
_addServiceWithRecord:
removeFromList
precedence
requiredInfoDictionaryKeys
pathExtension
initWithURL:
bundlePath
infoDictionary
setValue:forKey:
array
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
_buildFliteredInfoDictionaryFromBundleURL:
path
dataWithPropertyList:format:options:error:
writeToFile:options:error:
initWithContentsOfFile:
_generatedBundleServicesCache
_writeBundleServicesCache:toPath:
_bundleServicesCache:
initWithBundlePath:infoDictionary:
_addService:precedence:
_bundleServicesCache
_loadServiceFromBundlePath:infoDictionary:
_loadServicesIfNeeded
_serviceMap
_syncKeyMap
serviceForIdentifier:
assistantIsEnabled
_removeService:
_reprioritizeService:
allKeys
customVocabSyncInfo
pruneCacheWithCurrentSynapseInfo:
allServices
firstUnlockRestrictedCommands
addObjectsFromArray:
lockRestrictedCommands
setCommandCenterClient:
hasSuffix:
isReloadServiceNotification:
length
substringToIndex:
_serviceBundleIDFromServiceReloadNotification:
_pendingServiceReloadNotifications
_reloadServices:
enumerateObjectsUsingBlock:
fileURLWithPath:
removeService:
reload
serviceForDomain:command:
serviceForSyncAnchorKey:
addService:
addServiceWithLowPrecedence:
reprioritizeService:
allSyncAnchorKeys
allVocabSyncInfo
preheatServicesForDomain:
preheatBundleServices
cancelOperationForRequest:
pendServiceReloadNotification:
reloadServiceForNotification:
reloadServicesForAllPendingServiceNotifications
_bundleServicesLoaded
_precedence
setPostGen:
setValidity:
setKey:
setSyncSlots:
setBundleId:
setAppIdentifyingInfo:
setAppMetaData:
isValid
anchorWithKey:appID:syncType:
postGen
validity
_postGen
_validity
UTF8String
_readFromDisk
_fetchSentAnchorsOnQueue:completion:
_save
_af_preferredBundleID
syncSlots
_scheduleSave
shouldIgnoreSyncKey:
appMetaData
_noteSendingPostGen:validity:key:appMetaData:
removeAllObjects
_storePath
propertyListWithData:options:format:error:
_pruneAppsCacheWithTruth:
removeItemAtPath:error:
writeToFile:atomically:
_cancelSaveTimer
fetchSentAnchorsOnQueue:completion:
noteSendingChunk:
deleteSavedSnapshots
_pluginCache
_appsCache
_saveTimer
setHasSuccess:
hasSuccess
_success
genderString
loggingSharedUserId
setLoggingSharedUserId:
previousLanguageCode
utsRequiredRequestKeyValuePairs
setUtsRequiredRequestKeyValuePairs:
_sharedUserId
_loggingSharedUserId
_previousLanguageCode
_utsRequiredRequestKeyValuePairs
setTimerURL:
setFireTimeInterval:
setFireDate:
setFiredDate:
setDismissedDate:
setLastModifiedDate:
setTimerID:
timerID
duration
dismissedDate
lastModifiedDate
_incrementalChanges
setIncrementalChanges:
setTimings:
providerStyle
packetsSent
bytesSent
bytesRetransmitted
bytesUnacked
packetsReceived
bytesReceived
duplicateBytesReceived
outOfOrderBytesReceived
sendBandwidth
connectionMethodHistory
firstTxByteDelay
carrierName
signalStrengthBars
rssi
wifiPhyMode
wifiChannelInfo
isCaptive
dnsResolutionTime
connectionStartTimeToDNSResolutionTimeMsec
connectionEstablishmentTimeMsec
connectionStartTimeToConnectionEstablishmentTimeMsec
tlsHandshakeTimeMsec
connectionStartTimeToTLSHandshakeTimeMsec
tlsVersion
simSubscriptions
flowNetworkInterfaceType
symptomsBasedNetworkQuality
lengthOfBytesUsingEncoding:
speechCapturingDidStopRecordingWithError:endpointMode:totalPacketCount:endpointerMetrics:
speechCapturingDidStartRecordingSuccessfully:error:withInfo:
appendData:
speechCapturingDidRecordPCMAudioData:
mutableBytes
dataWithBytes:length:
replaceBytesInRange:withBytes:length:
speechCapturingDidRecordSpeechPackets:atTimestamp:totalPacketCount:
setDelegate:
releaseAudioSession
suspendAutomaticEndpointingInRange:
setSpeechRequestOptions:
setSpeechWasRecognizedForElapsedTime:isFinal:
setFingerprintWasRecognized
stopSpeechCaptureForEvent:suppressAlert:hostTime:
cancelSpeechCaptureSuppressingAlert:
setFingerprintingEnabled:
forceSuccessAudioAlertOnStop
setIsDriving:
getLastStartpointTimestampAndCurrentTime:
playRecordingStartAlert
updateServerEndpointFeatures:
updateEndpointHintForDuration:completion:
enforcePreviousEndpointHint
stopFingerprinting
setSpeechWasRecognizedForElapsedTime:
startCompressionNarrowband:
addAudioSampleData:
_audioConverter
_bufferedAudio
_packetIndex
_bytesConsumed
isAnnounceEnabled
handleHomeAnnouncementSnapshotUpdate:
registerSnapshotUpdater:
registerContextTransformer:forType:
dateByAddingTimeInterval:
initWithType:deliveryDate:expirationDate:redactedKeyPaths:
donateContext:withMetadata:pushToRemote:
getRedactedContextForContextSnapshot:metadata:privacyPolicy:completion:
getAceObjectsForContextSnapshot:completion:
_homeAnnouncementContextAdaptor
initWithGeneration:date:timersByID:notifiedFiringTimerIDs:
_resetStateWithCompletion:
_didStopListening
_restartAndExtendListening
_stopListeningWithCompletion:
setDeviceId:
_scheduleTimerForMaxDelay:
localizedDescription
_didStartListening
startListenWithOption:completion:
_thresholdDetected
stopListenWithStateReset:completion:
_handleFrame:
opportuneSpeakListener:hasRemoteVADAvailable:
opportuneSpeakListener:hasVADAvailable:
opportuneSpeakListener:didStopUnexpectly:
waitOnDeviceID:forVoice:maxDelay:stopOnDetection:executeOnSuccess:onFail:
stopListeningWithCompletion:
modeDescriptionFor:
isListening
_currentHasAccel
_currentHasVAD
_avbuffer
_inVoice
_currentFrameCount
_currentPausedFrameCount
_currentVoiceFrameCount
_thresholdFrameCount
_successCompletionBlock
_failCompletionBlock
_dispatchQueue
_mode
_isStopping
_maxDelay
_shouldStopListeningOnDetection
_isListening
_daemonDidLaunch
mainRunLoop
_daemonWillShutdown
_proxyService
_peerLocationService
_sharedDataService
listenForSharedDataFromCloud
startListeningForRemote
initWithMachServiceName:
_setQueue:
resume
processIdentifier
sharedService
beginEventsGrouping
preheatWithStyle:forOptions:completion:
acquireLocationInUseAssertionForReason:completion:
setRemoteObjectInterface:
setExportedInterface:
initWithXPCConnection:
setExportedObject:
connectionDisconnected
clientDisconnected:
releaseLocationInUseAssertionForReason:
endEventsGrouping
setInvalidationHandler:
clientConnected:
numberWithInt:
countForObject:
startRequestActivityWithCompletion:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:
startDictationWithLanguageCode:options:speechOptions:
cancelSpeech
stopSpeechWithOptions:
startRecordedAudioDictationWithOptions:language:narrowband:forceSampling:
addRecordedSpeechSampleData:
updateSpeechOptions:
sendSpeechCorrectionInfo:forCorrectionContext:
sendSpeechCorrectionInfo:interactionIdentifier:
preheatTestWithLanguage:options:
preheatWithRecordDeviceIdentifier:
endSession
recordFailureMetricsForError:
recordAWDSuccessMetrics
_startDictationWithURL:isNarrowBand:language:options:
_sendEngagementFeedback:voiceQueryIdentifier:
getInstalledOfflineLanguagesWithCompletion:
requestOfflineDictationSupportForLanguage:completion:
reportIssueForError:eventType:context:
reportIssueForError:eventType:subtype:context:
sendUserSelectedAlternativeDictationLanguageCode:
interfaceWithProtocol:
remoteObjectProxy
initWithServiceDelegate:
queue
sanityCheckAutodownloadedAssetsForced:
fetchSupportedLanguagesWithReply:
retrieveAccountMessageDictionariesWithReply:
saveAccountWithMessageDictionary:setActive:
deleteAccountWithIdentifier:
setActiveAccountIdentifier:
setAssistantEnabled:
setDictationEnabled:
_shutdownSessionIfIdle
_killDaemon
barrierWithReply:
_setSyncNeededForReason:
_clearSyncNeededForKey:
_syncDataWithAnchorKeys:forceReset:reason:reply:
_fetchPeerData:
_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:
_runServiceMaintenance
getAvailableVoicesIncludingAssetInfo:completion:
setOutputVoice:withCompletion:
setLanguage:withCompletion:
setLanguage:outputVoice:withCompletion:
getOfflineDictationStatusWithCompletion:
updateOfflineSpeechProfileWithLanguage:modelOverridePath:completion:
createOfflineSpeechProfileWithLanguage:modelOverridePath:JSONData:completion:
setOfflineDictationProfileOverridePath:completion:
startUIRequestWithText:completion:
startUIRequestWithInfo:completion:
startUIRequestWithSpeechAudioFileURL:
startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:
dismissUI
startUIMockServerRequestWithReplayFileURL:completion:
startRemoteRequest:onPeer:completion:
getPeerIdentifiers:
startAudioPlaybackRequest:completion:
stopAudioPlaybackRequest:immediately:
stopAllAudioPlaybackRequests:
setEnableAssistantLogging:
setSupplementalLanguageDictionary:forProduct:completion:
setSupplementalLanguages:forProduct:forBuildVersion:completion:
getSupplementalLanguagesDictionary:
getSupplementalLanguagesModificationDate:
getSupplementalLanguageDictionaryForProduct:completion:
getSupplementalLanguagesForProduct:forBuildVersion:completion:
fetchEventRecordsFromAnalyticsStoreAtPath:completion:
purgeAnalyticsStoreWithCompletion:
resetAnalyticsStoreWithCompletion:
sendMetricsToServerWithCompletion:
fetchExperimentConfigurationsWithCompletion:
fetchExperimentContextWithCompletion:
disableAndDeleteCloudSyncWithCompletion:
getDevicesWithAvailablePHSAssetsForLanguage:completion:
getDevicesWithAvailablePHSAssetsOnDeviceCheck:
getMeCard:
getStereoPartnerLastMyriadWinDate:
getStereoPairState:
setConfigOverrides:completion:
configOverrides:
getSharedCompanionInfo:
getCrossDeviceContextWithCompletion:
getCurrentContextSnapshotWithCompletion:
getOriginDeviceInfoForContextIdentifier:completion:
getContextCollectorsInfoWithCompletion:
setHardcodedBluetoothProximity:
getSiriOutputVolumeForAudioRoute:completion:
setSiriOutputVolume:forAudioRoute:completion:
getBluetoothDeviceInfoWithAddress:completion:
getBluetoothDeviceInfoWithUID:completion:
getConnectedBluetoothDeviceInfoArrayWithCompletion:
getPairedBluetoothDeviceInfoArrayWithCompletion:
getBluetoothWirelessSplitterSessionInfoWithCompletion:
startObservingBluetoothWirelessSplitterSession
stopObservingBluetoothWirelessSplitterSession
addMultiUserUser:sharedId:loggableSharedId:enrollmentName:isPrimary:completion:
removeMultiUserUser:completion:
removeMultiUserUserWithSharedUserId:completion:
showMultiUsers:
showPrimaryUserSharedUserIDWithCompletion:
updateVoiceIdScoreToUser:score:reset:completion:
forceMultiUserSync:download:completion:
getHomeUserIdForSharedUserId:completion:
getSharedUserIdForHomeUserId:completion:
updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:
getSharedUserID:
fetchMultiUserVoiceIdentificationSetting:
homeOnboardingFlowInvoked:completion:
setNanoAssistantEnabled:withCompletion:
setNanoDictationEnabled:withCompletion:
setNanoPhraseSpotterEnabled:withCompletion:
setNanoRaiseToSpeakEnabled:withCompletion:
setNanoUseDeviceSpeakerForTTS:withCompletion:
setNanoTTSSpeakerVolume:withCompletion:
setNanoOutputVoice:withCompletion:
setNanoLanguage:withCompletion:
setNanoCrownActivationEnabled:withCompletion:
setNanoSiriDataSharingOptInStatus:withCompletion:
getSpokenNotificationTemporarilyDisabledEndDateWithCompletion:
setSpokenNotificationTemporarilyDisabledUntil:
clearSpokenNotificationTemporarilyDisabledStatus
getSpokenNotificationTemporarilyDisabledEndDateForApp:completion:
setSpokenNotificationTemporarilyDisabledForApp:until:
getSpokenNotificationShouldAlwaysSpeakNotificationsWithCompletion:
setSpokenNotificationShouldAlwaysSpeakNotifications:
getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:
setSpokenNotificationShouldSkipTriggerlessReplies:
setSpokenNotificationProxCardSeen:
setOpportuneSpeakingEdgeDetectorSignalOverride:
clearOpportuneSpeakingEdgeDetectorSignalOverride
getCurrentNWActivityIDWithCompletion:
setSiriDataSharingOptInStatus:completion:
getSiriDataSharingOptInStatusWithCompletion:
setSiriDataSharingOptInAlertPresented:completion:
shouldSuppressSiriDataSharingOptInAlertWithCompletion:
deleteSiriHistoryWithContext:withCompletion:
setOnDeviceDictationAvailableAlertPresented:
setSiriDesignModeEnabled:completion:
siriDesignModeIsEnabled:
accessRecordedAudioWithIdentifier:completion:
trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:
getRecordedAudioDirectoryPathsWithCompletion:
pushMyriadAdvertisementContext:completionHandler:
initWithBytes:length:encoding:
initFileURLWithPath:isDirectory:
bundleIdentifier
_bundleID:andPath:forPID:
deleteEverything
recordVocabulary:forIntentSlot:withValidationCompletion:
askToSyncSlot:
fetchSiriAuthorization:
requestSiriAuthorization:
fetchCurrentSiriLanguageCode:
verifyProcessCanDonateIntentWithName:completion:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
initWithBundleID:path:
setManagedStoreObject:forKey:
fetchManagedStoreObjectForKey:reply:
setKnowledgeStoreData:forKey:inStoreWithName:completion:
getKnowledgeStoreDataForKey:inStoreWithName:completion:
resetKnowledgeStoreWithName:completion:
connectionDisconnected:
connectionInterrupted:
setInterruptionHandler:
connectionConnected:
setObserverConnection:
sharedProviderInDaemon
postNotificationRequest:completion:
withdrawNotificationRequestWithIdentifier:
initWithConnection:
receivedNotificationResponse:
_clientListenerShouldAcceptNewConnection:
_settingsListenerShouldAcceptNewConnection:
_dictationListenerShouldAcceptNewConnection:
_managedStorageListenerShouldAcceptNewConnection:
_synapseSyncListenerShouldAcceptNewConnection:
_analyticsListenerShouldAcceptNewConnection:
_securityListenerShouldAcceptNewConnection:
_analyticsObservationListenerShouldAcceptNewConnection:
_notificationServiceListenerShouldAcceptNewConnection:
initWithUTF8String:
defaultCenter
postNotificationName:object:
initWithActivationEvent:
updateSharedDataFromPeerUseCache:completion:
stringWithUTF8String:
_syncForReason:withCoalescing:
effectiveSettingsChanged
managedConfigurationEffectiveSettingsChanged
sharedDictationOfflineStatusObserver
fetchOfflineDictationStatusIgnoringCache:asynchronously:
resetCacheAndCompileAllAssets
syncForReason:withCoalescing:
_enabledBitsChanged:
addObserver:selector:name:object:
sharedListener
startListening
listen
sharedInfoManager
installedAssetSizeWithError:
offlineDictationStatus
keysOfEntriesPassingTest:
purgeInstalledAssetsExceptLanguages:error:
_setupCacheDelete
_setupSessionLanguage
_setupInternal
_setupClientListener
_setupOfflineDictationStatusObserver
_setupDictationListener
_setupExternalRequestListener
_setupClientLiteListener
_setupSettingsListener
_setupRapportServices
_setupIDSServices
_setupManagedStorageListener
_setupSynapseSyncListener
_setupAnalyticsListener
_setupContextListener
_setupSecurityListener
_setupAnalyticsObservationListener
_setupSyncListener
_registerForSyncNotifications
_setupTetherListener
_setupNotifyHandlers
_setupDistributedNotificationHandlers
_setupPairedSync
_setupHomeKit
_setupCloudKit
_setupMultiUserCloudSyncer
startAcceptingCloudSharesForMultiUserService
_setupMemoryPressureObservation
_setupWirelessCoexManagerSubscription
_setupNanoPreferences
_setupNotificationServiceListener
_setupMobileGestaltNotificationHandlers
prepareForShutdown
sharedDiagnostics
flush
setLanguageCodeIfNeeded
syncAnchorKeys:forceReset:reasons:
dictationIsEnabled
keepAlive
_syncCoalesced
processLaunchTime
processLaunchMachTime
listener:shouldAcceptNewConnection:
shutdown
startUIRequestWithInfo:
startUISpeechRequest
scheduleDestroyJob
unscheduleDestroyJob
scheduleValidationRefreshForInterval:
scheduleUnlockedWork:
_analyticsListener
_analyticsObservationListener
_clientListener
_dictationListener
_settingsListener
_synapseSyncListener
_managedStorageListener
_securityListener
_notificationServiceListener
_syncListener
_externalRequestListener
_clientLiteListener
_siriTetherListener
_lastSyncRequested
_syncReasonsQueued
_syncActivityRegistered
_proxyRemote
_peerLocationManagerRemote
_unlockedWorkQueueIsSuspended
_unlockedWorkQueue
_dictationListenerQueue
_dictationPidSet
_mg_notification_token
defrost
_prepareWithOptions:audioSession:error:
_startWithOptions:audioSession:preparationHandler:executionHandler:finalizationHandler:
_stop:
_beginInterruption
_endInterruption:
itemData
initWithData:error:
itemURL
initWithContentsOfURL:error:
setAudioSession:
numberOfLoops
setNumberOfLoops:
fadeInDuration
setVolume:
volume
prepareToPlay
isPlaying
_didNotStartWithError:
play
setVolume:fadeDuration:
fadeOutDuration
_didStopWithError:
pause
_finalizeWithError:
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
initWithQueue:request:options:
prepareWithOptions:audioSession:completion:
startWithOptions:audioSession:preparationHandler:executionHandler:finalizationHandler:
stop:completion:
beginInterruption
endInterruption:
request
options
_player
_audioSession
_request
_isActive
_isPrepared
_completion
_options
_sharedDataDidChange:
removeObserver:
_pushSharedDataToPeerFromNotification:completion:
userInfo
null
setPreviousLanguageCode:
setPreviousOutputVoice:
_sendData:
sendSharedData:toPeers:
_getDataWithCompletion:
_setDataFromSharedData:
getSharedDataForPeer:
_ad_setData:
languageCode
setSiriEnabled:
_ad_requestInfo
setSuccess:
handleExternalActivationRequest:completion:
_ad_performWithSharedDataRemote:completion:
peerExportsSharedData
getSharedDataFromPeerUseCache:allowCloudMessaging:completion:
_requestDataRemotelyAllowingCloudMessaging:completion:
_ad_data
sharedDataConnection:didUpdateSharedData:
_ad_setRequestInfo:
success
assistantId
dictionaryWithPlistData:
plistData
executeCommand:fromPeer:remoteExecutionInfo:reply:
peerConnection:peerAvailabilityDidChange:
initWithDelegate:
pushSharedDataToPeer:
_getDataWithPBCompletion:
_startRemoteRequest:completion:
getSharedDataFromPeerUseCache:completion:
_dataDidUpdate:
startRemoteRequest:completion:
watchIsNearbyForAssistantId:
executeRemoteCommand:completion:
_handleExecuteRequestOnRemoteWatch:completion:
_peerConnection
_localData
_remoteData
_languageCodeDidChange:
_sharedAssistantdIdentifierDidChange:
removeObserver:name:object:
_unregisterForPossibleSessionDestroyingNotifications
_unregisterForSleepNotification
_registerForPossibleSessionDestroyingNotifications
_resetWinningStateAndPurgeRequestMaps
_startSession:makeQuiet:
_canStartLocalSession
sessionIsActive
sessionIsAttemptingTryOrRetry
_adSessionTypeString
sessionId
resetConnection
_updateSharedUserIdentifiers
_languageCode
_saConnectionMode
initOnQueue:withAccount:languageCode:connectionMode:sharedUserIdentifier:loggingSharedUserIdentifier:
eagerlyFetchAssistantData
preheatAndMakeQuiet:
setAWDRequestRecordMetrics:
_startSessions:
beginUpdatingAssistantData
cancelSynchronously
_cancelSynchronously:
sessionType
setLanguageCode:
setConnectionMode:
_resetSessionsAndMakeQuiet:
resetSessionsAtNextRequestBoundaryWithCompletion:
prepareForRetry
startRetry
resetRetryManager
refId
_mapADRequestIdToSessionRequestId:forSession:
endRetryableRequestForCommandAceId:refId:
sharedUserIdentifier
loggingSharedUserIdentifier
_ad_connectionModeFromEnabledState
assistantSessionManager:receivedError:isRetryableError:
setDormant:
hasUsefulnessScore
usefulnessScore
hasResultObjects
assistantSessionManager:receivedCommand:
dequeueResultObjects
_cancelOtherSessionRequests:forRefId:
_logContextForWinningSession:forReason:forRemoteSessionScore:forLocalSessionScore:
_resetResultObjectsTimer
_resultObjectsHoldTime
_resultObjectsTimerFired:
_evaluateResultObjects
_startResultObjectsTimer
queueResultObjects:
mutatingCommand
groupIdentifier
sharedNetworkActivityTracing
networkActivityStart:activate:
_keyForRequestId:forSession:
valueForKey:
cancelSessionRequest:
canHandleRequest
sessionIsWaitingForAssistantData
_resetWinningState
resetWinningState
_purgeRequestMaps
sendRemoteGizmoDeviceToServer:
isInterceptingCommands
assistantSessionManagerRequestsObservingCallState:
_registerForSleepNotification
_reverseMapSessionRequestIdToADRequestId:forSession:
_isDestructive:
_logCommandToMetrics:forSession:outbound:
_allowWhitelistedCommands:
_haveUsefulness:usefulnessScore:
ad_requiresResponse
sendCommand:opportunistically:logEvent:
setOrUpdateUsefulnessScore:
_queueResultObject:forSession:
setHasActiveRequest:
_hasAtleastOneActiveSessionBesides:
_logMetricsForSessionFailure:withError:completion:
_pickDefaultWinnerWithDroppingSession:
setCanHandleRequest:
assistantSessionManager:didObserverIntermediateError:
assistantSessionManager:shouldLogVisibleRequestFailureForError:
assistantSessionManagerSessionRemoteConnectionDidReset:
assistantSessionManagerSessionConnectionDidReset:
assistantSessionManagerShouldAttemptRetry:
assistantSessionManagerCommandsToRestoreStateOnNewConnection:
assistantSessionManagerDidCreateAssistant:
assistantSessionManagerDidDestroyAssistant:
assistantSessionManager:didLoadAssistantSyncRequested:
assistantSessionManager:willRetryOnError:
aggregator
beginSessionRetryPreferringWWAN:
resetSessionsAtNextRequestBoundary
assistantSessionManagerRetryingRequestOnRemoteSession:
assistantSessionManagerRetryingRequestOnLocalSession:
supportsSync
siriCore_supportedByLocalSession
siriCore_requestId
siriCore_setSessionRequestId:
delegateDidHandleCommand:didRecognizeSpeech:
setAceId:
setRequestId:
_filterUnsupportedCommands:inGroup:onSession:
_convertEmbeddedRequestIds:originalCommand:session:
retryNakedCommandsIfNeeded
doSendPreProcessing:
sendCommand:opportunistically:
beginRetryableRequest:
doSendPostProcessing:
interceptCommand:completion:
_sendCommand:opportunistically:logEvent:doSendPreProcessing:doSendPostProcessing:
_resetSessionOnRequestBoundaryIfNeeded
initWithTimestamp:reason:
_setRequestId:
connectionDidDrop
connectionDidFail
setConnectionType:
currentConnectionPreCachedMetrics
getConnectionMetrics:
ad_shouldLogToMetrics
ad_deferredMetricsContext
logEventWithType:machAbsoluteTime:contextProvider:contextProvidingQueue:
logEventWithType:contextProvider:contextProvidingQueue:
logEventWithType:contextProvider:
remoteMetrics
setAWDRequestRecord:
barrier:
refreshValidationData
speechError:
handleCommandInLocalSession:
sendCommand:
_mapAndSendSpeechFailure:toLocalSession:
_propagateCachedSpeechErrorToLocalSessions
assistantSessionShouldPrewarmConnetion:
assistantSessionWillStartConnection:
assistantSession:receivedCommand:
assistantSession:cannotHandleRequest:error:
assistantSession:receivedError:isRetryableError:
assistantSessionShouldLogVisibleRequestFailure:forError:
assistantSessionShouldRestartConnectionOnWiFi:
assistantSessionConnectionDidReset:
assistantSessionShouldAttemptRetry:
assistantSessionCommandsToRestoreStateOnNewConnection:
assistantSession:didChangeRequestIdFrom:toId:
assistantSessionDidCreateAssistant:
assistantSessionDidDestroyAssistant:
assistantSession:didLoadAssistantSyncRequested:
assistantSession:didOpenConnectionWithPolicyId:routeId:connectionDelay:
assistantSession:willRetryOnError:
assistantSession:beginSessionRetryPreferringWWAN:
assistantSessionConnectionDidClose:
assistantSessionSiriServerLoggingSettingDidChange
assistantSessionRetryingRequest:
updateConnectionDidDropAggdMetrics
updateConnectionDidFailAggdMetrics
updateConnectionSetConnectionType:
initOnQueue:withAccount:
preheatSessions
cancelSessions
resetSessionsAndMakeQuiet:
endRetryableRequestForCommand:
_powerChangedMessageType:notificationID:
updateForCallState:
updateForCallIsLikelyDueToRequest:
_preferredSessionType
adviseSessionArbiterToContinueWithPreviousWinner:
hasActiveSessionForSendingMetrics
handleCommand:
delegateDidHandleCommand:
sendRawCommand:opportunistically:logEvent:
acquireAssertionForReason:
relinquishAssertion:
sessionRequestIdForRefId:
hasClient
setHasClient:
sendCommandToLocalSession:
delegate
interceptor
setInterceptor:
_sharedUserIdentifier
_loggingSharedUserIdentifier
_sharedUserIdentifierState
_state
_isRegisteredForSessionDestroyingNotifications
_connectionMode
_sessions
_callInProcess
_hasClient
_ioConnect
_ioNotificationPortRef
_ioNotifier
_aggregator
_requestId
_proxiedIdMap
_reverseProxiedIdMap
_sessionOriginatedCommandTable
_winningSessionId
_resultObjectsEvaluationTimer
_isQueuingResultsForDelayedEvaluation
_timerFiredOnce
_continueWithPreviousWinner
_lastSessionError
_savedSasSpeechRecognized
_savedSasSpeechRecognizedSubmitted
_savedSasSpeechFailure
_serverDrivenResultsHoldTime
_serverSpeechRecognitionArrived
_hasActiveRequest
_needsResetOnRequestBoundary
_assertions
_awdRequestRecord
_interceptor
_sessionResetOnRequestBoundaryCompletion
timestamp
reason
_timestamp
_reason
_attachToSession
_cleanUpWirelessSplitterProxy
_cleanUpDeviceProxies
_detachFromSession
_tearDownAccessoryManager
_tearDownLocalDevice
_setUpLocalDevice
_setUpAccessoryManager
_deviceProxies
_resetConnectedDeviceAddresses
_resetPairedDeviceAddresses
_reloadForDevice:
_handleListeningModeChangedForBTDevice:fromAccessoryManager:
_handleInEarStatusChangedForBTDevice:fromAccessoryManager:
updateHeadphoneInEarDetectionState:
updateHeadphoneListeningMode:
getUUIDBytes:
_deviceProxyWithAddress:createsIfAbsent:
_deviceProxyWithUID:createsIfAbsent:
_connectedDeviceProxies
_pairedDeviceProxies
initWithDataSource:queue:
initWithAddress:dataSource:queue:
initWithDeviceUID:dataSource:queue:
_fetchConnectedDeviceAddresses
_fetchPairedDeviceAddresses
_sessionAttached:result:
_sessionDetached:
_sessionTerminated:
device:serviceMask:serviceEventType:serviceSpecificEvent:result:
localDevice:event:result:
accessoryManager:event:device:state:
getBTDeviceWithAddress:completion:
getBTDeviceWithDeviceUID:completion:
getBTLocalDeviceWithCompletion:
getConnectedDevicesWithCompletion:
wirelessSplitterSession
_session
_localDevice
_accessoryManager
_attachingToSession
_sessionSetupGroup
_deviceProxiesLock
_deviceProxiesByAddress
_deviceProxiesByDeviceUID
_wirelessSplitterSessionProxyLock
_wirelessSplitterSessionProxy
_connectedDeviceAddresses
_pairedDeviceAddresses
_updateDeviceInfo:
_fetchDeviceInfoWithCompletion:
_updateHeadphoneInEarDetectionState:
_updateHeadphoneListeningMode:
_reload:
_getDeviceInfo:
_getHeadphoneInEarDetectionState:
_getHeadphoneListeningMode:
_setHeadphoneListeningMode:completion:
_accessBTDeviceAndAccessoryManagerUsingBlock:
_invalidate
_fetchHeadphoneInEarDetectionStateWithCompletion:
_fetchHeadphoneListeningModeWithCompletion:
supportsInEarDetection
supportsListeningModeANC
supportsListeningModeTransparency
_changeHeadphoneListeningMode:completion:
bluetoothDevice:deviceInfoDidChangeFrom:to:
_enumerateObserversUsingBlock:
bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:
bluetoothDevice:headphoneListeningModeDidChangeFrom:to:
setDeviceUID:
bluetoothDeviceDidInvalidate:
setRepresentation
prewarm
getHeadphoneInEarDetectionState:
getHeadphoneListeningMode:
setHeadphoneListeningMode:completion:
connect:
disconnect:
addObserver:
updateDeviceInfo:
deviceUID
_dataSource
_headphoneInEarDetectionState
_headphoneListeningMode
_address
_deviceUID
initWithQueue:delegate:
_updateWirelessSplitterSessionInfo:
_fetchWirelessSplitterSessionInfoWithCompletion:
_getWirelessSplitterSessionInfo:
bluetoothWirelessSplitterSession:sessionInfoDidChangeFrom:to:
_accessBTLocalDeviceUsingBlock:
bluetoothWirelessSplitterSessionDidInvalidate:
getSessionInfo:
bluetoothWirelessSplitterSessionStateObserver:didChangeStateFrom:to:
updateWirelessSplitterSessionInfo:
_wirelessSplitterSessionInfo
_observer
setAddress:
setVendorID:
setProductID:
setIsAdvancedAppleAudioDevice:
setSupportsInEarDetection:
setSupportsVoiceTrigger:
setSupportsSpokenNotification:
setSupportsListeningModeANC:
setSupportsListeningModeTransparency:
setIsEnabled:
setPrimaryInEarStatus:
setSecondaryInEarStatus:
setDeviceAddresses:
statisticsRecordingEnabled
_saveStats
_statsDirectory
_serviceStatsPath
_statsDict
_commandTimes
_statsForCommand:
initWithServiceIdentifier:
markIncomingCommand:
markResponseForCommand:
_serviceIdentifier
_transactionObjects
_speechRecognitionTransactionState
_audioFileIOTransactionState
initOnQueue:
sendCommand:errorHandler:
cancelWithCompletion:
_isObserving
_ad_contextLoggerWithEventType:context:completion:
_initialize
keepReportingNowPlayingTimingEventsHeuristically
_loadContextHistory
_setCollectingContext:
_startPeriodicContextFetchFromNearbyDevices
_unregisterForBGUpdates
_registerForBGUpdates
_cancelNowPlayingCoalescingTimer
_filteredApplicationInfosForLockedStark:
pidRestrictedCenterNamed:
setTargetPID:
doesServerExist
sendMessageAndReceiveReplyName:userInfo:
_appInfoWithBundleID:
_getCurrentUserActivityOnQueue:completion:
setInternalGUID:
_isEligibleForUserActivityReminders
setIsEligibleForReminders:
isEligibleForReminders
externalMediaContentIdentifier
setEligibileFunctions:
hasLocationData
setIsEligibleForDirections:
hasPhoneNumber
setIsEligibleForAppPunchout:
_fetchUserActivityWithUUID:intervalToWaitForDocumentSynchronizationToComplete:completionHandler:
_currentUserActivityUUIDWithOptions:completionHandler:
_alarmAceObjectFromAlarm:withProximity:inDeviceContext:
_timerAceObjectFromTimer:withProximity:inDeviceContext:
_getNowPlayingMediaIsResumable:
af_serviceDeviceContextForKeys:excludeContextExpiredBefore:
af_lenientMappedArray:
voiceTriggerEnabled
_getDevicesWithContexts:passingTest:capabilitesPassingTest:completion:
_fetchContextSnapshotForCurrentRequest
_saveContextHistory
dataWithContentsOfFile:
_inlineUpdatePhoneState
_inlineUpdateCurrentHomeKitHome
_updateNavStatusWithContext:completion:
_updateNowPlayingInfoWithContext:completion:
_updateSimpleThingsWithContext:completion:
_updateMusicPersonalizationTokenWithContext:completion:
_updateHomeAnnouncementWithContext:supplementalSnapshot:completion:
getBackgroundContext:
_getBackgroundContext:
navStatusDidChange:
updateBackgroundContextIfHomeKitInfoChanged
_notePossiblePlayPausedStateChange:
_updateBackgroundContextIfNowPlayingInfoChanged:
_updateBackgroundContextIfMusicPersonalizationTokenChanged
_handleHomeAnnouncementSnapshotUpdate:
fireTimeInterval
_dataSourceInfoWithProximity:deviceContext:
setDataSourceInfo:
repeatOptions
setFiring:
setProximityHint:
setContextIdentifier:
isCommunalDevice
setSourceDeviceOwnership:
_stopPeriodicContextFetchFromNearbyDevices
remoteContextStore
localContextStore
getAllTokensForAssistantForcingRefresh:completion:
getTokenForcingRefresh:completion:
contextManagerDidUpdateBackgroundContext:
setCurrentHomeIdentifier:
currentNavigationState
setStatusValue:
_reallyUpdateBackgroundContextIfNowPlayingInfoChangedForReason:
_scheduleNowPlayingRefreshForReason:
setActive:
setIncoming:
contextFetchDelay
_isCollectingContext
setDatePlaybackStarted:
setDatePlaybackFinished:
alertContextIsDirty
clearAlertContextDirtyState
backgroundContextIsDirty
clearBackgroundContextDirtyState
getAppContextForDeviceState:applicationInfos:completion:
getAlertContextWithBulletins:externalAlarmSnapshot:timerSnapshot:nlAlertContextCompletion:fullAlertContextCompletion:
markBulletinAsAcknolwedgedForDomainObject:
getDomainObjectFromMessageContext:completion:
getNowPlayingMediaIsResumable:
pushContextSnapshotForCurrentRequestWithID:toDevice:
_handlePushContextMessage:fromDeviceWithIdentifier:completion:
_handleContextSnapshotPush:completion:
_updateSingleUserMusicPersonalizationTokenFromKeychainWithCompletion:
_alertContextIsDirty
_bgContextIsDirty
_bgContextQueue
_registeredForContextUpdates
_bgContext
_analytics
_ignoreNowPlayingUpdatesAfterTimestamp
_nowPlayingCoalescingTimer
_coalescedNowPlayingUpdateSources
_deviceProblemsRegistrationToken
_musicPersonalizationTokenRegistrationToken
_queuedContextSnapshotCompletions
_contextSnapshotFetchTimedOut
_currentContextSnapshot
_contextSnapshotTimer
_contextHistory
_contextRefreshTimer
_contextSnapshotByForeignRequestID
_collectingContext
_localContextStore
_remoteContextStore
siriHomeIdentifier
aceDictionary
setAceDictionary:
oldId
setOldId:
_aceDictionary
_oldId
setObject:forKeyedSubscript:
setDomainObject:withOldId:forKey:
domainObjectForKey:
setDomainObject:forKey:
oldIdForKey:
_cacheEntriesByAceKey
_ad_transformedMapsRequest
_ad_transformedMapsSuccessResponse
showDirections
itemSource
placeData2
extSessionGuid
extSessionGuidCreatedTimestamp
_initWithPlaceData:extSessionGuid:extSessionGuidCreatedTimestamp:
detailType
setIsCurrentLocation:
setGeoResult:
itemDestination
setResultType:
directionsType
arrivalDate
departureDate
_initWithStartLocation:destinationLocation:directionsType:arrivalDate:departureDate:extSessionGuid:extSessionGuidCreatedTimestamp:
rawData
_initWithLocation:extSessionGuid:extSessionGuidCreatedTimestamp:
timerManagerProxyForIntentSupport
errorWithCode:description:underlyingErrors:
_handleWatchdogTimeout
_beginSendingWithMessageSender:
_endSendingWithMessageSender:replyMessage:error:
_addError:
_finalizeWithResponseMessage:
_cancelWatchdogTimer
initWithQueue:deviceIdentifier:timeoutDuration:completion:
beginSendingWithMessageSender:
endSendingWithMessageSender:replyMessage:error:
_watchdogTimer
_numberOfActiveMessageSenders
_errors
_ad_handleSettingsRequestWithCompletionHandler:
initWithSettingType:valueBeforeUpdate:valueAfterUpdate:
applyChanges
setAirplaneMode:
createResponseWithSettingChanges:
airplaneMode
numberWithUnsignedChar:
setIsDelaying:
_delayForBoronWithSuccess:
requestDelayManager:interruptedWithType:
_resetDetectorWithCompletion:
dequeueDelayedCommandsAndSend:completion:
_delayedCommandHandlers
_delayedcontextCommandHandlers
requestDelayManager:didStopUnexpectly:
sendMockInterruptedWithTypeSignal
stopDelayingAndSendCommands:completion:
beginTimerForContextCommands
_delayType
_stopListeningCompletion
_currentContextCommandsTimer
_isDelaying
_clearOutstandingSearchIds
setAcousticIdSessionId:
acousticIDHelperDidStartSession:
setFingerprint:
_addOutstandingSearchId:
_removeOutstandingSearchForRefId:
acousticIDHelper:didCompleteSessionSuccessfully:
minimumDurationForRetry
hasRelatedCommandForRefId:
currentSession
sessionIsComplete
startNewAcousticIDSessionWithRequestId:refId:
searchCommandForFingerprintData:withDuration:
cancelSessionCommand
handleSearchCompleted:
handleRetrySearch:
handleCommandFailed:
shouldSendFingerprintForDuration:
failCurrentSession
_currentSession
_outstandingSearches
_completed
_sessionIsComplete
_minumumFingerprintDuration
_cancelBestLocationTimer
initWithEffectiveBundle:delegate:onQueue:
registerAsLocationClient
setDesiredAccuracy:
_locationManager
location
_executeBestLocationCompletionWithLocation:
_executeBestLocationCompletionWithLocationErrorWithCode:
startUpdatingLocation
ad_setLocation:
_startBestLocationTimer
_hasActiveBestLocationRequest
_startUpdatingLocation
stopUpdatingLocation
_executeBestLocationCompletionWithLocation:error:
_ad_performWithPeerLocationManagerRemote:completion:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_getBestLocationWithCompletion:
_bestLocationTimer
_bestLocationCompletion
timerProxyForIntentSupport
objectAtIndex:
addNotificationPreviewRestrictedApps:
setSpeechId:
setAssistantId:
setHostname:
setSharedId:
setPreviousLangaugeCode:
setOutputVoice:
setUserAgent:
notificationPreviewRestrictedAppsCount
clearNotificationPreviewRestrictedApps
notificationPreviewRestrictedAppsAtIndex:
setTemperatureUnit:
setLoggingAssistantId:
setLoggingSharedId:
setStoreFrontId:
setAirplayRouteId:
setEkToken:
setUserToken:
setUserAssignedName:
setUtsRequiredRequestData:
setDataSharingOptInStatus:
notificationPreviewRestrictedAppsType
setHasSiriEnabled:
hasSiriEnabled
hasSpeechId
hasLanguageCode
hasAssistantId
hasHostname
setActivityContinuationAllowed:
setHasActivityContinuationAllowed:
hasActivityContinuationAllowed
setHasDictationEnabled:
hasDictationEnabled
hasSharedId
hasPreviousLangaugeCode
hasPreviousOutputVoice
hasOutputVoice
setCloudSyncEnabled:
setHasCloudSyncEnabled:
hasCloudSyncEnabled
setShouldCensorSpeech:
setHasShouldCensorSpeech:
hasShouldCensorSpeech
hasUserAgent
setIsLocationSharingDevice:
setHasIsLocationSharingDevice:
hasIsLocationSharingDevice
hasTemperatureUnit
hasLoggingAssistantId
hasLoggingSharedId
hasStoreFrontId
hasAirplayRouteId
hasEkToken
hasUserToken
setIsRemotePlaybackDevice:
setHasIsRemotePlaybackDevice:
hasIsRemotePlaybackDevice
hasUserAssignedName
hasUtsRequiredRequestData
hasDataSharingOptInStatus
siriEnabled
speechId
hostname
activityContinuationAllowed
dictationEnabled
sharedId
previousLangaugeCode
previousOutputVoice
outputVoice
cloudSyncEnabled
shouldCensorSpeech
userAgent
isLocationSharingDevice
notificationPreviewRestrictedApps
setNotificationPreviewRestrictedApps:
temperatureUnit
loggingAssistantId
loggingSharedId
storeFrontId
airplayRouteId
ekToken
userToken
isRemotePlaybackDevice
userAssignedName
utsRequiredRequestData
dataSharingOptInStatus
_airplayRouteId
_assistantId
_dataSharingOptInStatus
_ekToken
_hostname
_loggingAssistantId
_loggingSharedId
_notificationPreviewRestrictedApps
_outputVoice
_previousLangaugeCode
_previousOutputVoice
_sharedId
_speechId
_storeFrontId
_temperatureUnit
_userAgent
_userAssignedName
_userToken
_utsRequiredRequestData
_activityContinuationAllowed
_cloudSyncEnabled
_dictationEnabled
_isLocationSharingDevice
_isRemotePlaybackDevice
_shouldCensorSpeech
_siriEnabled
includesFamily
includesHome
initWithIncludesFamily:includesHome:
_includesFamily
_includesHome
setIncludesFamily:
setIncludesHome:
locationDataWasRecievedFromPeer
_ad_performForPeerLocationWithCompletion:
peerLocationConnectionSuggestsClearingCachedLocation:
peerLocationConnection:didReceiveUnsolicitedLocation:
locationPeerDidChange
peerLocationPolicySuggestsClearingCachedLocation:
getBestLocationWithCompletion:
_locationPolicy
ad_location
initWithRequest:replyCommand:
clientBoundCommand
createResponseWithReplyCommand:
_clientBoundCommand
_url
ad_isPeerConnectionError
ad_isPeerNotNearbyError
isCanceled
initWithTechnology:
setConnectionEdgeID:
setRemoteMetrics:
updateConnectionMetrics:completion:
connectionProvider:receivedError:
initListenerWithQueue:
setPeerStreamConnection:
setPolicyRoute:
setProviderConnectionPolicy:
headerDataWithForceReconnect:
shouldFallbackQuickly
supportsInitialPayload
isPeerConnectionError:
isPeerNotNearbyError:
isMultipath
shouldFallbackFromError:
setScopeIsWiFiOnly
setKeepAlive:withInterval:withCount:
setRetransmitConnectionDropTime:
_setupStaleConnectionTimer
_getNWConnectionWithInitialData:completion:
analysisInfo
_isListener
_checkBuddyState
_updateBuddyState
isPastBuddy
_isPastBuddy
hasSourceIDSFirstRoutableDestination
hasSourceAirplayId
sourceAirplayId
_sourceAirplayId
_sourceIDSFirstRoutableDestination
initWithContainer:queue:
createMirroredZonesWithCompletion:
gender
setGender:
setHasGender:
hasGender
genderAsString:
StringAsGender:
_gender
setLegacyDirectActionIdentifier:
setActivationEvent:
initForReadingFromData:error:
finishDecoding
sharedNotificationRequestHandler
handleNotificationRequestForNotification:fromApp:completion:
sharedProvider
setStartLocalRequest:
getLocalRequestWithType:completion:
initWithBytesNoCopy:length:freeWhenDone:
unarchivedObjectOfClass:fromData:error:
setStartRequest:
setOptions:
_ad_timerStoreErrorWithCode:
handleFailureInFunction:file:lineNumber:description:
getTimerWithCompletionHandler:
setTimer:completionHandler:
dismissTimersWithURLs:completionHandler:
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
diagnosticActions
requestWithURL:
verb
setHTTPMethod:
setUri:
setVerb:
setLatency:
dataTaskWithRequest:completionHandler:
setDiagnosticReports:
invalidateAndCancel
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithMode:delegate:
channel
prepareForDeviceWithIdentifier:
_sessionWithDeviceIdentifier:
_getGenerationsForDataTypes:andPushToDeviceWithIdentifier:
finalizeForDeviceWithIdentifier:
messageReceiver
receiveMessage:completion:
initWithDeviceIdentifier:messagingService:
initWithQueue:deviceIdentifier:dataConsumersByType:dataProvidersByType:messageSenders:
getGenerationWithCompletion:
pushGenerationsByDataTypes:
deviceSyncMessageService:didFoundDeviceWithIdentifier:
deviceSyncMessageService:didLostDeviceWithIdentifier:
deviceSyncMessageService:didReceiveMessage:fromDeviceWithIdentifier:completion:
deviceSyncDataProviderDidUpdate:
_messagingServicesByChannel
_dataConsumersByType
_dataProvidersByType
_sessionsByDeviceIdentifier
_refId
appLaunchHandler:didLaunchAppForRequestId:
_ad_handleAppLaunchCommandWithRequest:completion:
serviceWithDefaultShellEndpoint
launchId
optionsWithDictionary:
openApplication:withOptions:completion:
canOpenApplication:reason:
appIds
setAppToItsRestrictionsMap:
applicationName
localizedName
appState
applicationType
isLaunchProhibited
appTags
arrayByAddingObject:
setLocalizedBundleDisplayName:
shortVersionString
setVersion:
bundleVersion
setBuildNumber:
setFoundApps:
stringByReplacingOccurrencesOfString:withString:
localizedStandardContainsString:
enumerateSubstringsInRange:options:usingBlock:
bundleURL
_ad_getMessagesRequestValueWithCompletionHandler:
_ad_replyCommandValue
smsIdentifier
_initWithDraftMessageIdentifier:
af_messageValue
_pushGenerationsByDataType:completion:
_receiveMessage:completion:
_sendMessage:completion:
_handlePulledDeltaWithIncrementalChanges:forDataType:
_pullDeltaForDataType:generation:limit:completion:
_handlePulledSnapshot:forDataType:
_pullSnapshotForDataType:completion:
_handlePingWithCompletion:
_handlePushGenerationsByDataType:completion:
_handlePullGenerationsForDataTypes:completion:
limit
initWithIncrementalChanges:
_handlePullDeltaForDataType:generation:limit:completion:
_handlePullSnapshotForDataType:completion:
_handlePushedOrPulledGeneration:forDataType:
getIncrementalChangesAfterGeneration:limit:completion:
initWithDataType:generation:limit:
incrementalChanges
_pingWithCompletion:
_pullGenerationsForDataTypes:completion:
_incomingSequence
_outgoingSequence
_messageSenders
_initWithRequest:
replyCommand
_replyCommand
initWithDomainName:className:
_serviceCommandTypeWithDomainName:className:
qualifiedCommandName
isEqualToServiceCommandType:
domainName
className
domainObjectCreateTypeForDomainNamed:
domainObjectRetrieveTypeForDomainNamed:
domainObjectUpdateTypeForDomainNamed:
domainObjectDeleteTypeForDomainNamed:
domainObjectCancelTypeForDomainNamed:
domainObjectCommitTypeForDomainNamed:
_domainName
_className
_getVoiceOver:completion:
_setVoiceOver:completion:
_getPlaybackAudioRoute:completion:
_getNoiseManagement:completion:
_setNoiseManagement:completion:
_wrapBoolSettingValue:
_setBoolSetting:currentValueBlock:setValueBlock:completion:
audioCategory
toggle
_recordingInfoProvider
sharedCollector
initWithQueue:stateManager:
opportuneSpeakingPauseInterval
opportuneSpeakingTimeoutInterval
supportsVoiceTrigger
_detector
logSpeakable:forContact:withModelId:withFeatures:withScore:
modelWithIdentifier:didUpdateScore:forSpeakable:
waitOnDeviceID:forPause:maxDelay:stopOnDetection:executeOnSuccess:onFail:
retrieveConnectedDevicesInfoWithCompletion:
speakableIdentifier
logFeedbackOfType:forSpeakableId:withModelId:
startWithDelegate:
setSpeakable:
recordFeedbackOfType:forSpeakable:
_stateManager
_deviceID
_modelIdentifier
_boronDeviceFound
setCodedLocation:
hasCodedLocation
codedLocation
_codedLocation
_samplesPerInterval
_cleanUpConnection
initWithServiceName:
setSampleRate:
appendAcousticData:sampleCount:sampleRate:
getSignature:
_connectionInterrupted
_connectionInvalidated
_configureWithCurrentASBD
_needsConversion
initWithLength:
bytes
setLength:
_convertPCMDataForFingerprinting:
acousticFingerprinter:hasFingerprint:duration:
_serviceWithErrorHandler:
setFingerprintInterval:
setASBD:
appendPCMData:
_asxConnection
_totalSampleCount
_nextFingerprintSampleNumber
_sourceASBD
_interval
_fingerprinterConverter
closeWithError:
stringByStandardizingPath
_insertEventRecords:error:
_fetchEventStreamUIDsWithError:
_fetchEventRecords:afterTimestamp:eventStreamUID:deliveryStream:error:
_deleteEventRecordsBeforeOrEqualToTimestamp:deliveryStream:eventStreamUID:error:
_purgeDeletedEventRecordsBeforeOrEqualToDate:error:
_fetchEventRecordsCreatedAfterDate:error:
_resetForReason:error:
logAnalyticsLocalStoragePurgedWithSize:
logAnalyticsLocalStorageSnapshotWithSize:
checkpointWriteAheadLogWithError:
logEventWithType:machAbsoluteTime:context:
lastKnownAnalyticsStoreState
setLastKnownAnalyticsStoreState:
initWithPath:dataProtectionClass:options:
openWithError:
performIntegrityCheckWithError:
initWithName:type:constraints:
defaultColumnConstraintWithName:value:
initWithName:columns:constraints:
fetchTableWithName:error:
columns
setWithCapacity:
alterTableWithName:addColumn:error:
createTable:error:
dropIndexWithName:error:
initWithName:tableName:columnNames:options:
createIndex:error:
_preparedDatabaseWithError:
beginTransactionWithError:
subarrayWithRange:
removeObjectsInRange:
insertIntoTableWithName:record:error:
commitTransactionWithError:
rollbackTransactionWithError:
isQueryCriterionWithColumnName:value:negation:
lessThanOrEqualToQueryCriterionWithColumnName:value:
andQueryCriterionWithSubcriteria:
updateTableWithName:valueMap:criterion:error:
timeIntervalSince1970
deleteFromTableWithName:indexedBy:criterion:error:
selectValuesFromTableWithName:columnName:behavior:indexedBy:criterion:order:range:error:
siriCoreSQLiteValue_toString
greaterThanQueryCriterionWithColumnName:value:
initWithColumnNames:mode:
initWithLimit:
selectRecordsFromTableWithName:columnNames:behavior:indexedBy:criterion:order:range:recordBuilder:error:
greaterThanOrEqualToQueryCriterionWithColumnName:value:
_countQueuedEventRecordsWithCriteria:withCompletion:
countValuesInTableWithName:columnName:behavior:indexedBy:criterion:range:error:
initWithPath:
insertEventRecords:completion:
fetchEventStreamUIDsWithCompletion:
fetchEventRecords:afterTimestamp:eventStreamUID:deliveryStream:completion:
deleteEventRecordsBeforeOrEqualToTimestamp:deliveryStream:eventStreamUID:completion:
purgeDeletedEventRecordsBeforeOrEqualToDate:completion:
fetchEventRecordsCreatedAfterDate:completion:
purgeWithCompletion:
resetWithCompletion:
checkpointWithCompletion:
countQueuedEventRecordsWithCompletion:
countQueuedEventRecordsForDeliveryStream:withCompletion:
_database
_eventRecordBuilder
_path
siriCoreSQLiteValue_toNumber
siriCoreSQLiteValue_toData
initWithDeliveryStream:type:timestamp:contextDataType:contextData:
dateWithTimeIntervalSince1970:
initWithEvent:streamUID:dateCreated:
setStorageValue:forKey:
build
_streamUIDValue
_deliveryStreamValue
_typeValue
_timestampValue
_contextDataValue
_contextDataTypeValue
_dateCreatedValue
fetchSiriKitApplicationsWithNotificationPreviewRestrictionsWithCompletion:
getPersonalSettingsForSharedUserID:completion:
fetchSiriRelatedNotificationPreviewRestrictedAppsWithCompletion:
getMultiUserSettingsForSharedUserID:completion:
sharedDataManager
_cachedAssistantData
twentyFourHourTimeDisplay
region
countryCode
preferredLanguage
setTwentyFourHourTimeDisplay:
setRegion:
setCountryCode:
setPreferredLanguage:
setupListener
bundleProxyForIdentifier:
_tccAccessInfoForAppID:
privacyPolicy
privacyCategory
authorizationStatusForBundleIdentifier:
redactionTarget
ad_filteredDictionaryWithAppID:
parameters
useCaseId
utterance
initWithAppIdentifier:intentString:utterance:info:
backgroundLaunch
_setLaunchToForeground:
_setOriginatingAceID:
taskmaster:didReceivePunchoutOutcome:
taskmaster:didLaunchApplicationForRequestWithId:
_fetchPairedBluetoothDevicesFromSourceWithCompletion:
_fetchWirelessSplitterSessionInfoAndStartObservingFromSourceWithCompletion:
_ad_transformedWorkoutRequest
_ad_transformedWorkoutSuccessResponse
targetWorkoutState
workoutStateValue
_initWithState:
getAVSystemControllerWithTimeout:completion:
passthroughEndpointer:wasConfiguredWithASBD:frameRate:
configureWithASBD:andFrameRate:
passthroughEndpointer:didReceivePCMData:
getStatus:
endpointMode
setEndpointMode:
startWaitTime
setStartWaitTime:
interspeechWaitTime
setInterspeechWaitTime:
endWaitTime
setEndWaitTime:
configureWithSampleRate:andFrameRate:
forwardingTargetForSelector:
functionalEndpointer
setFunctionalEndpointer:
_functionalEndpointer
_bundle
_getLocalRequestWithType:bundle:languageCode:outputVoiceInfo:completion:
localizedStringForKey:table:bundle:languageCode:
setCommands:
setMessage:
setClientBoundCommands:
defaultObserver
addListener:
_handlePlaybackStateDidChangeToState:fromState:completion:
getPlaybackStateWithCompletion:
lastActivationStoppedNowPlayingApp
getStateWithCompletion:
currentDevice
mediaType
nowPlayingTimestamp
isEqualToDate:
initWithPlaybackState:nowPlayingTimestamp:mediaType:groupIdentifier:
getGroupIdentifierWithCompletion:
getNowPlayingInfoWithCompletion:
_updateProximityObservationsForPlayState:
performProximityScan
nowPlayingObserver:playbackStateDidChangeFrom:to:
nowPlayingObserverNowPlayingInfoDidChange:
_previousState
_proximityRescanTimer
_clientStateObserver
handlerForIntent:
transactionWillBeginForIntentIdentifier:
transactionDidCompleteForIntentIdentifier:
localExtensionIdentifier
ad_timerIntentHandlerClassName
initWithListener:connection:
initWithWork:timeout:
enqueueObject:
_incrementAndTestExecutionCount
_doDelayedClientWorkIfAny:
_decrementAndTestExecutionCount
frontObject
dequeueObject
timeout
workItem
doClientWork:withTimeoutBlock:
doDelayedClientWorkIfAny
_workItemQueue
_executionCount
acquireShutdownAssertion
addBarrierBlock:
releaseShutdownAssertion:
invokeWithValue:andValue:andValue:
handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:
handleRemoteCommand:afterCurrentRequest:isOneWay:completion:
adRequestWillReceiveCommand:
adRequestDidReceiveCommand:reply:
adRequestDidCompleteWithSuccess:error:
adRequestEncounteredIntermediateError:
_outstandingCommandGroup
_handler
_workItem
_timeout
setSpeechRequestOptions:withCompletion:
currentToken
speechRequestOptions
completion
_currentToken
_speechRequestOptions
classExtensionIdentifier
localExtensionForIdentifier:
registerLocalExtension:
_registerLocalExtensions
commandIdentifiers
handleCommand:completionHandler:
extensionContext
airPlayRouteIdentifiers
_setAirPlayRouteIdentifiers:
_speechCapturingContext
_setRecordRoute:
_setRecordDeviceIdentifier:
_setRecordDeviceUID:
getAudioRecordRouteAndDeviceIdentificationWithCompletion:
_intentNeedsPreparation:
_preparePerson:meCardCache:
_intents_enumerateObjectsOfClass:withBlock:
_setIsTimeoutSuspended:
commandCenterClient
adWantsToCacheImage:
adExtensionRequestWillStartForApplication:
adExtensionRequestFinishedForApplication:error:
handleIntent:inBackgroundAppWithBundleId:reply:
handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:
_meCard
_meCardWithCache:
firstName
middleName
lastName
fullName
nickName
internalGUID
contactIdentifier
_replacement:forString:meCardCache:
setContactIdentifier:
displayName
setDisplayName:
nameComponents
_prepareNameComponents:meCardCache:
siriMatches
namePrefix
setNamePrefix:
givenName
setGivenName:
setMiddleName:
nameSuffix
setNameSuffix:
nickname
setNickname:
phoneticRepresentation
extensionService:suspendTimeout:
extensionService:processData:usingSecurityProcedure:completionHandler:
extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
extensionService:wantsToCacheImage:
extensionService:extensionRequestWillStartForApplication:
extensionService:extensionRequestDidFinishForApplication:error:
extensionService:handleIntent:inBackgroundAppWithBundleIdentifier:completionHandler:
extensionService:logEventWithType:context:contextNoCopy:
siriLanguageCodeForExtensionService:
extensionService:requiresHandlingCommand:completion:
extensionService:contextDictionaryForCommand:
extensionService:contextDictionaryForError:
extensionService:prepareForStartPlaybackWithDestination:intent:completion:
extensionService:handleFailedStartPlaybackWithDestination:completion:
extensionService:prepareIntent:
extensionService:handleIntentForwardingAction:inBackgroundAppWithBundleIdentifier:completionHandler:
_extensionService
_commandCenterClient
_ADPBProxyRequestType
_setContextCollectionAllowed:
deviceContextForDeviceContextKeys:excludingMandatoryKeys:
_fetchContextFromCollectorAndForceFetchingFromDevices:completion:
partiallyUpdatedContextForDeviceContextKeys:excludingMandatoryKeys:fromDeviceContext:
_dumpStateForReason:
startCollectingContext
stopCollectingContext
getContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:
getContextSnapshotFromDevicesWithIDSIdentifiers:completion:
getContextSnapshotFromAllDevicesWithCompletion:
_fetchContextFromDeviceWithIDSIdentifier:completion:
setDeviceContext:withIncludedKeys:excludedKeys:forDeviceWithIDSDeviceUniqueIdentifier:withCompletion:
getSerializedDeviceContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:
_remoteContext
_contextCollectionAllowed
deviceCount
setDeviceCount:
setTimestamp:
_deviceCount
_initWithQueue:
_updateCollectorElectionVersionWithNotification:
getContextCollectorDeviceIdentifiersWithCompletion:
removeListener:
reelectContextCollectorWithBestScore
getCapabilitiesForDeviceWithIdsDeviceUniqueIdentifier:completion:
wakeUpNearbyDevices
_rapportLinkInstabilityPenalty
_listeners
_currentCollectorIDs
_isCollector
_currentStationaryScore
_stationaryScoreTimer
_rollingRSSI
_rollingRSSICount
_rapportInstabilityPenalty
_deviceCountTrend
_lastReelectionBasedOnScore
setMeanPing:
setPrimarySubflowInterfaceName:
setSubflowSwitchCounts:
setConnectionMethod:
setConnectionDelay:
setTCPInfoMetricsByInterfaceName:
timeUntilOpen
timeUntilFirstByteRead
meanPing
primarySubflowInterfaceName
subflowSwitchCounts
tcpInfoMetricsByInterfaceName
connectionMethod
connectionEdgeID
connectionDelay
_ad_handleTimerRequestWithCompletionHandler:
createResponseWithTimer:
timerURLs
outstandingResponses
setOutstandingResponses:
responseType
setResponseType:
responses
setResponses:
setCompletion:
timeoutTimer
setTimeoutTimer:
_responseType
_outstandingResponses
_responses
_timeoutTimer
peer
setPeer:
proto
setProto:
error
setError:
_peer
_proto
_error
initWithKeyOptions:valueOptions:capacity:
uniqueID
_companionIdentifierDidChangeNotification:
_airplayRouteDidChange:
_updateActiveAccountState
idsIdentifier
hasPrefix:
_sendProto:ofType:originalRequestId:toPeers:responseType:completion:
isLostModeActive
_destinationsForPeers:
_timedOutError
_handleMessageResponse:ofType:orError:fromID:handler:
initWithIDSIdentifer:productType:buildVersion:name:
_peers
_uniqueIdentifierForPeer:
deviceForFromID:
_stripFZIDPrefix
_peerInfoForIDSDeviceUniqueIdentifier:allowNonPeers:
initWithUniqueIdentifer:
_companionPeer
peers
_uniqueIdForAssistantId:
isEqualToIgnoringCase:
_assistantIdForUniqueId:
_peerInfoForAssistantId:allowNonPeers:
_setAssistantId:forUniqueId:
_cachedSharedDataForUniqueId:
isActive
_updateAirPlayRouteIdentifierWithCompletion:
getRouteIdentifierWithCompletion:
_sendProto:ofType:toPeers:
_pointerToBlockMap
_setCachedSharedData:forUniqueId:
objectEnumerator
_sendProto:ofType:toPeers:responseType:completion:
_unexpectedMessageError
_startRemoteRequest:onPeers:completion:
startRemoteSerialzedCommandExecution:onPeer:executionContext:completion:
firstRoutableInternetDestinationForSelf
setSourceIDSFirstRoutableDestination:
setSourceAirplayId:
setRemoteRequestObserver:withHandle:
sourceIDSFirstRoutableDestination
setIdsFirstRoutableDestination:
_ad_performWithCloudService:fromPeer:completion:
initWithIDSIdentifer:
removeObjectsForKeys:
startRemoteExecution:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:
hasActiveAccount
uniqueIdentifierForPeer:
localPeerIDSDeviceUniqueIdentifier
companionPeer
companionPeerUniqueIdentifier
uniqueIdForAssistantId:
assistantIdForUniqueId:
peerInfoForAssistantId:allowNonPeers:
setAssistantId:forUniqueId:
cachedSharedDataForUniqueId:
setSharedDataObserver:withHandle:
_notifyObserversOfSharedData:fromPeer:
getSharedDataFromPeers:completion:
setSharedDataRequestObserver:withHandler:
_notifyObserversOfSharedDataRequestFromPeer:completion:
_notifyObserversOfRequestInfo:fromPeer:completion:
_handleRemoteExecution:peer:completion:
_sharedDataObservers
_sharedDataRequestObservers
_remoteRequestObservers
_companionIdentifier
_airPlayRouteIdentifier
_airPlayRouteIdentifierNeedsUpdate
_peerAssistantIdentifiers
_deviceIdentifiers
_peerSharedData
_hasActiveAccount
ad_isUnreachableError
ad_isUnrecoverablePeerError
ad_isStricterUnreachableError
ad_isPeerRemoteError
_ad_alarmStoreErrorWithCode:
initWithCriteria:searchOptions:
criteria
searchOptions
_criteria
_searchOptions
isSleepAlarm
label
daysOfWeek
hourOfDay
minuteOfHour
matchesAlarm:
_createUnavailableError
addAlarm:completionHandler:
deleteAlarmsWithIdentifiers:completionHandler:
updateAlarms:completionHandler:
fetchAlarmsMatchingAnyOfQueries:completionHandler:
fetchAlarmsMeetingCriteria:searchOptions:completionHandler:
fetchAlarmsWithIdentifiers:completionHandler:
dismissAlarmsWithURLs:completionHandler:
updateMeters
averagePowerForChannel:
peakPowerForChannel:
willBeginAccessPower
getAveragePower:andPeakPower:
didEndAccessPower
_channel
initWithDomainName:
fileLoggingIsEnabled
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
_dateFormatter
stringFromDate:
limitedAudioLoggingEnabled
_nowString
fileSystemRepresentation
appendSpeechPacket:
lastPathComponent
containsString:
buffersFromSpeechLogAtURL:isNarrowBand:
beginNewSpeechLogWithFormat:
appendSpeechPackets:
cancelCurrentSpeechLog
endSpeechLog
_logQueue
_filePath
handshakeRequestWithCertificateData:error:
completeWithHandshakeResponse:error:
signData:error:
sessionState
strategyVersion
_nacContext
_sessionState
_peerLocationConnection
navStatusChanged:
_cancelLocationTimer
authorizationStatusForBundle:
locationServicesEnabled
accuracyAuthorization
setPreciseLocationEnabled:
setPropertiesWithCLLocation:
desiredAccuracy
coordinate
isLocationShiftRequiredForCoordinate:
_locationShifter
horizontalAccuracy
altitude
verticalAccuracy
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:
setStatus:
_generateResponseForGetRequestOriginCommand:withStatus:completion:
stopMonitoringSignificantLocationChanges
_triggerLocationABCForSubtype:
_cancelLocationSLATimer
_bestCachedLocation
_generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:
_generateLocationTimedOutResponseForGetRequestOriginCommand:completion:
_clearCompletionState
_stopMonitoringLocation
_scheduleLocationSLATimer
desiredCLAccuracy
_startMonitoringLocationWithDesiredAccuracy:
searchTimeout
_scheduleLocationTimerWithTimeout:
_shouldUseOneshotLocationRequest
maxAge
_af_isOlderThanAge:
_af_isWithinAccuracy:
requestLocation
_processUpdatedLocation:
_requestLocationWithBestAccuracy
_shouldSendLocationUpdate:fromLocation:forCommand:
locationManager:wantsToSetRequestOrigin:
_generateLocationDeniedResponseForGetRequestOriginCommand:completion:
_generateLocationUnknownResponseForGetRequestOriginCommand:completion:
authorizationStatus
_locationServicesIsEnabled
_generateLocationDisabledResponseForGetRequestOriginCommand:completion:
_setAuthorizationStatusToAuthorizedAndEnabled
initWithSetRequestOrigin:
_locationUpdateIsCapableOfSucceeding
ignoreLocationWiFiStatus
_generateLocationWiFiOffResponseForGetRequestOriginCommand:completion:
_preferredPlatformLocationAccuracy
_requestLocationForGetRequestOrigin:completion:
_startMonitoringLocationForGetRequestOrigin:completion:
newAssertionForBundle:withReason:
raise:format:
getLocationIsRestricted:
initWithSerialQueue:
lastLocation
updateWithLocation:locationStatus:
updateLocationSnapshotWithCompletion:
updateLocationForCommand:completion:
stopLocationUpdates
needsToSendLocation
setNeedsToSendLocation:
_externalQueue
_needsToSendLocation
_isNavigating
_internalQueue
_lastLocationAuthorizationStatus
_lastLocationServicesIsEnabled
_lastPreciseLocationIsEnabled
_haveLastAuthorizationAndEnabledValues
_requestOriginCommand
_locationTimerSource
_locationSLATimerSource
_lastLocation
_locationInUseAssertion
_locationInUseAssertionRefCount
_lastPeerLocation
_updateCompletion
_greenTeaLogger
_af_age
setHorizontalAccuracy:
setVerticalAccuracy:
setLatitude:
setLongitude:
setAltitude:
course
setDirection:
speed
setSpeed:
setAge:
serializedBackingStore
setSerializedContextSnapshot:withMetadata:
backingStore
initWithSerializedBackingStore:fromLocalDevice:contextCollectorSource:
setFromLocalDevice:
setDeviceInfo:
setPrivacyClass:
setContextSnapshot:withMetadata:
removeContextSnapshotForType:
_updateDeviceInfoWithMediaRouteIdentifier:deviceName:roomName:isCommunalDevice:
strongToWeakObjectsMapTable
_initializeBuiltInContextProviders
_setupListener
_deviceContextToVendForPrivacyClass:
partialSerializedBackingStoreIncludingKeys:excludingMandatoryKeys:
_pushContextToCollector:forReason:includingKeys:excludingMandatoryKeys:includingKeysInResponse:excludingMandatoryKeysInResponse:completion:
setProductType:
setMediaRouteIdentifier:
setIsCommunalDevice:
setName:
_pushContextToCollectorsForReason:completion:
allContextKeys
contextMetadataForKey:
expirationDate
donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:
contextCollectorChangedToDevicesWithIdentifiers:localDeviceIsCollector:
initWithRapportLink:queue:
getLocalContextWithPrivacyClass:completion:
pushContextToContextCollectorIncludingKeys:excludingMandatoryKeys:expectingResponseIncludingKeys:excludingMandatoryKeys:completion:
_builtInProviders
_localContext
_redactedContextByPrivacyClass
_contextTransformersByType
setMyriadAdvertisementContext:completion:
_ad_mediaRemoteOptions
setSuppressAudioInterruptionEndedNotifications:
targetQueue
logSiriPausedMedia
_ad_performAudioPausingCommand:mediaRemoteService:replyHandler:
positionInMilliseconds
_ad_performWithMediaRemoteService:replyHandler:
repeatMode
shuffleMode
adjustmentInMilliseconds
hashedRouteUIDs
handleFailedStartPlaybackWithDestination:completion:
appId
targetAppId
scheme
prepareForStartPlaybackWithDestination:intent:completion:
scalingFactor
logSiriMediaVolumeAction:
actionType
volumeValue
acknowledgedExceedingVolumeLimit
_ad_volumeAction
volumeTracker
setDirtySiriOutputVolumeHostTime:
listeningToItem
setListeningToItem:
setSource:
applicationIdentifier
setListeningToMusicApplication:
setHashedGroupID:
position
_ad_performNextItemWithTargetQueue:completion:
_ad_performPreviousItemWithTargetQueue:completion:
_ad_performSeekToBeginningWithTargetQueue:completion:
_buildCacheOfWhaServiceSupportedCommands
_commandsForDomain:
removeObjectsInArray:
initWithQueue:volumeTracker:whaService:
_commandsToIgnore
_whaService
_whaServiceSupportedCommands
_volumeTracker
timeIntervalSinceReferenceDate
metricsContext
dataUsingEncoding:
JSONObjectWithData:options:error:
setMetricsContext:
initWithUUID:timestamp:languageCode:options:speechRequestOptions:
_beginSpeechRecognitionTransactionForReason:session:
_beginAudioFileIOTransactionForReason:session:
_addSession:
_startedOrStartingSession
speechRecognitionTransactionState
_setSpeechRecognitionTransactionState:
audioFileIOTransactionState
_setAudioFileIOTransactionState:
_sessionWithUUID:
_endSpeechRecognitionTransactionForReason:session:
_endAudioFileIOTransactionForReason:session:
_removeSession:
_endSessionTransactionForReason:session:isSpeechTransaction:
startSessionForReason:languageCode:options:speechRequestOptions:
stopSessionForReason:
notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:
notifyAudioFileIOTransactionStoppedForReason:sessionUUID:
_activeSessions
_activeSessionsByUUID
_accountDidChange:
_dispatchCallbackForProcessedData:error:completion:
_retrieveKeyAndSaltWithCompletion:
_dispatchCallbackForProcessedDataMap:errorMap:completion:
localCryptoKeyData
setLocalCryptoKeyData:
processData:usingProcedure:completion:
processDataMap:usingProcedure:completion:
setKeychainValue:forKey:accountIdentifier:completion:
_procedureQueue
_keychainQueue
_callbackQueue
_inMemorySalt
initWithSerializedBackingStore:
objectsPassingTest:
af_mappedDictionary:
_getAggregatedProximityObservationsWithCompletion:
dateWithTimeIntervalSinceNow:
requestLifecycleObserver:requestWillBeginWithInfo:origin:client:
requestLifecycleObserver:requestWasCancelledWithInfo:origin:client:
requestLifecycleObserver:requestDidEndWithInfo:origin:client:
_stopScanning
getDeviceProximityRelativeToLocalDeviceWithCompletion:
_proximityObservations
_timersByDeviceIDPair
_cachedAFProximityRelativeToLocalDevice
_localIsCollector
_localDeviceIDSIdentifier
_proximityScanningTimer
_lastProximityScan
_heardVoiceTriggerObserver
_voiceTriggerFirstPassObserver
_currentVoiceTriggerExpirationDate
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
adpm_sortedKeyString
af_didHearVoiceTrigger
af_mappedArray:
enablesProximityTracking
discoveryOptions
transportOptions
initWithDiscoveryOptions:transportOptions:enablesProximityTracking:
_discoveryOptions
_transportOptions
_enablesProximityTracking
setDiscoveryOptions:
setTransportOptions:
setEnablesProximityTracking:
encodeBool:forKey:
decodeBoolForKey:
_twentyFourHourTimeDisplay
_region
_countryCode
_preferredLanguage
_buildConfigurationsByIdentifier
_buildContext
_getConfigurationsByIdentifier
_getContext
configurationForInvocationFeedback
controlGroup
experimentIdentifier
setExperimentIdentifier:
initWithExperimentsByConfigurationIdentifier:
configurations
_configurationsByIdentifier
experimentGroups
initWithConfigurationIdentifier:configurationVersion:deploymentGroupIdentifier:deploymentGroupProperties:deploymentReason:
salt
allGroups
allocation
setDeviceWasRedirectedToProduction:
_speechManager
preheatWithOptions:
_sessionManager
_preheatAllServices
sharedController
_deviceSyncCoordinator
_contextManager
preheatBackgroundContext
_flowServiceListener
_context_reset
_createRootExecutionContextForRequestID:
_removeHandledCommandIdsForRequestId:
_removePostCommandHandlingBlocksForRequestId:
_destroyRootExecutionContextForRequestID:
requestID
_rootExecutionContextForRequestID:
executionID
_remoteExecutionContextForExecutionID:
initWithExecutionID:requestID:originPeerInfo:userInfo:
initWithInfo:
afPeerInfo
_hasOutstandingRequestId:
_handledCommandIdsForRequestId:
initWithCommandType:requestTransformer:responseTransformer:requestHandler:
taskmasterForUIApplicationWithBundleIdentifier:
_registerDomainSignalServiceWithServiceManager:
_registerOTTServicesWithServiceManager:
_registerNanoServicesWithServiceManager:
recordingInfoProvider
initWithRecordingInfoProvider:
_requestDelayManager
_awdSessionStart
_motionManager
startUpdatingMotionActivityForReason:completion:
stopUpdatingMotionActivityForReason:completion:
_awdSessionEnd
_cancelSessionManager
_sync_reset
_setCallIsLikely:
_awdRequestStart
requestWillBeginWithInfo:fromOrigin:client:
isVoiceTrigger
sharedMonitor
ignoreMyriadEvents:
_deviceRouter
getContextSnapshotForCurrentRequestWithCompletion:
requestDidEndWithInfo:fromOrigin:client:
_metrics_recordNetworkSnapshotForEvent:completion:
_setSpeechCapturingContext:
dequeueBlocksWaitingForMyriadDecision
_setCurrentRequest:
_setLastRequest:
_stopLanguageDetectionWaitTimerIfNeeded
_acousticId_clearPartialResultTimer
_replaceRequestDelegate:withInfo:andCompletion:
_cancelCurrentRequest
_clearRequestDelegateState
_serviceManager
serviceIdentifierForRequestDelegate:
_requestWillStartWithInfo:
_replaceSpeechDelegateWhenReady:waitForRecordingToFinish:suppressAlert:withCompletion:
isStopped
adSpeechRecordingDidFail:sessionUUID:
_clearSpeechDelegateState
adSpeechRecognitionDidFail:sessionUUID:
adSpeechSessionEnded
_acousticId_speechCaptureCompleted
logRequestLaunchedApp
ad_languageModel
makeObjectsPerformSelector:
makeObjectsPerformSelector:withObject:
_sendCommandToServer:opportunistically:
_sendCommandToServer:opportunistically:completion:
_addCompletion:forCommandId:
_addOutstandingRequestId:forReason:
_sendRequestToServer:
_sendCommandToServer:
adInvalidateCurrentUserActivity
setIsCarryDevice:
adTextToSpeechIsMuted
setTextToSpeechIsMuted:
_sendRetryableRequestToServer:
clientBoundCommands
_handleGenericConcreteAceCommand:withDelegate:interruptOutstandingRequest:reply:
_ad_speechRequestOptions
_reallyHandleNewStartLocalRequest:
_replaceSpeechDelegateWhenReady:suppressAlert:withCompletion:
_resultObjectCache
commandsForReply:toCommand:missingReferences:
_handleCommandAndClientReply:executionContext:
initWithMissingReferences:forRequestId:
_handleNextCallbacksForReply:forCommand:forRequestId:withExecutionContext:
setFulfillmentBlock:
addMissingReferencesContext:
setObjectIdentifiers:
hasBeenFulfilled
_handleCommand:executionContext:completion:
_currentRequest
logRequestCancelAfterSeconds:
requestWasCancelledWithInfo:origin:client:
clearResultObjectsForRequestId:
_requestDidEnd
_removeOutstandingRequestId:forReason:
ad_parentRequest
_addNetworkActivityTracingForLabel:start:withCompletionReason:
_sync_isSyncing
_shutdownAfterDelay:
_hasActiveClientOrSyncingOrInCall
sendMetricsToServerWithTimeout:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:ignoresMetricsSenderDisabledSetting:scheduledActivity:completion:
_removeAllSpeechCapturingContexts
_removeAllHandledCommandIds
_removeAllPostCommandHandlingBlocks
_invokeAllCompletionsWithError:
networkActivityTracingCancel
_sync_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:
updateSpeechProfilesForReasons:
setRestrictionsToAdd:
fetchRequestCanBeHandledStateWithCompletion:
setRestrictions:
_sync_hasCommandForRefId:
_acousticId_hasCommandForRefId:
_hasCompletionForCommandId:
requiresResponse
setAppId:
callbacks
setCallbacks:
_invokeCompletionForCommand:
_preheatCallbacksForCommand:
isFromRemote
_handleCommandResponse:error:forCommand:executionContext:completion:
ad_getNetworkActivityTracingLabel
_handleServiceCommand:afterMyriadDecision:executionContext:completion:
ad_willHaveReply
_addHandledCommandId:forRequestId:
_dispatchAndRemovePostCommandHandlingBlocksForCommandId:requestId:
ad_shouldBeHandledByClientAsResponseToCommand:fromPeer:
_performCallbacksForCommand:reply:executionContext:error:
ad_hasCallbacks
_callIsLikely
callIsPossibleForRequestId:
ad_shouldIgnoreCallbacksOnReply
_firstChanceServiceForCommand:
resultCallbackCode
waitForMyriadDecisionForReason:withCompletion:
aceObjectWithGenericCommand:
_receivedLocation:locationStatus:
setBackgroundContextDirty
_cancelCallKeepAlive
_scheduleCallKeepAlive
startObservingCallStateWithDelegate:
stopObservingCallStateWithCompletion:
_setIsInCall:
_setHasIncomingCall:
_shutdownSessionWhenIdle
_sync_continueIfConditionsMet
isDelaying
_refIdIsSpeechStart:
_endSpeechRequestForCommand:withError:suppressAlert:secureOfflineOnlyDictation:
_removeFirstChanceServiceForAceId:
_completeRequestForCurrentDelegate:error:
turnId
initWithUUIDString:
setCompletionStatus:
setObjects:
addResultObjects:sessionRequestId:
_handleBareRequestCompleted:
_acousticId_commandFailed:
_sync_commandFailed:
_sync_commandIgnored:
_handleSendCommands:forRequestDelegate:completion:
commands
_startNonSpeechRequest:forDelegate:withInfo:options:suppressAlert:completion:
holdToTalkThresholdInMilliseconds
ignoreServerManualEndpointingThreshold
setManualEndpointingThreshold:
getInfoForHandoffPayload:userInfo:wepageURL:
adSetUserActivityInfo:webpageURL:
_startLocalRequest:withRequestInfo:forDelegate:suppressCancelationAlertIfCapturingSpeech:completion:
commandReferences
notificationText
setHandoffNotification:
setHandoffRequiresUserInteraction:
handoffPayload
_ad_setHandoffPayload:
startRemoteRequest:onTargetDevice:completion:
textToSpeechIsMuted
adServerRequestsTTSStateUnmuted:
commandAceIds
initWithBlock:defaultValue1:defaultValue2:
invokeWithSignal:
_addPostCommandHandlingBlock:forCommandId:requestId:
startRequest
startLocalRequest
initialInterstitialDelay
initialInterstitialDelayForCarPlay
initialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking
hasAudioSessionActivationDelay
audioSessionActivationDelay
setServerAudioSessionActivationDelay:
mediaPlaybackVolumeThresholdForAudioSessionActivationDelay
setServerMediaPlaybackVolumeThresholdForAudioSessionActivationDelay:
audioSessionActivationDelayAboveMediaPlaybackVolumeThreshold
setServerAudioSessionActivationDelayAboveMediaPlaybackVolumeThreshold:
myriadServerProvisioning
deviceClass
setMyriadDeviceClass:
deviceAdjustment
setMyriadDeviceAdjust:
deviceDelay
setMyriadDeviceDelay:
deviceTrumpDelay
setMyriadDeviceTrumpDelay:
setMyriadServerHasProvisioned:
deviceVTEndtimeDistanceThreshold
setMyriadDeviceVTEndTimeDistanceThreshold:
didChangeDefaults
processedAudioDuration
resultId
_acceptResultCandidate:featuresToLog:completion:
setProcessedAudioDuration:
setResultId:
updateSelectedResultCandidateId:
recordUserAudio
resultCandidateId
selectedSharedUserId
updateAccessToRecordedAudioForVoiceIdentificationTraining:forResultCandidateId:sharedUserId:
eager
_languageModelForSpeechRequest:
noteSuccessOfRequest:inCar:
_cancelLocalRecognitionIfRequired
adSpeechRecognized:usingSpeechModel:sessionUUID:
_handleSpeechRecognizedWithDelegateBlock:
adSpeechMultilingualSpeechRecognized:sessionUUID:
_startLanguageDetectionWaitTimer
speechRecognizedByLanguage
adPronunciationRecognized:usingSpeechModel:sessionUUID:
updateOptionsAfterRecognitionForElapsedTime:isFinal:
activationDeviceIdentifier
setActivationDeviceIdentifier:
stopSpeechCaptureWithOptions:
_dictationSessionDidComplete
logSpeechRecognized
af_bestTextInterpretation
tokens
endTime
longLongValue
adSpeechRecognizedPartialResult:
_awdRecordTimeToFirstWord
_handlePartialSpeechRecognitionForElapsedTime:WithDelegateBlock:
adSpeechRecognizedStructuredResult:usingSpeechModel:sessionUUID:
recognition
reasonDescription
adSpeechDidFindVoiceSearchPartialResult:
adSpeechDidFindVoiceSearchFinalResult:
_handleSuspendClientEndpointer:
audioProcessedMs
suspendDurationMs
endpointConfirmationTimestamp
setConfirmed:
setEndpointConfirmationTimestamp:
ad_csEndpointFeatures
threshold
setEndpointerThreshold:
delay
setEndpointerDelayedTrigger:
adWaitingForAudioFile
setContext:
adSpeechRecordingDidEndWithSessionUUID:
_context_acknowledgeBulletinForObject:
locationSnapshot
ace_setRequestOrigin
locationMetadata
deliveryDate
getContextSnapshotForForeignRequestID:completion:
_diagnosticsManager
updateLatencyDiagnosticConfiguration:completion:
subType
subTypeContext
eventName
eventOperation
eventValue
setVolumeLevel:
_getSiriOutputVolumeForAudioRoute:completion:
_setSiriOutputVolume:forAudioRoute:operationType:completion:
afterNotificationId
sourceAppId
supportsSpokenNotifications
sectionID
supportsSpokenNotification
saNotificationObject
setNotifications:
fetchBulletinsAfterBulletinWithID:completion:
speechRequestId
audioOutputType
startTime
longValue
setSpeechDataUrl:
speechDataUrl
_trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:
multilingualTimeoutInMillis
multilingualDisabled
isLanguageDetectorEnabledByServer
adSpeechLanguageDetectorFailedWithError:
dictationSessionDidComplete
cancelLocalRecognitionIfActive
dataDetectorWithTypes:error:
detectionTargets
setDetectionTarget:
range
setLocation:
resultType
setDataDetectionType:
enumerateMatchesInString:options:range:usingBlock:
setMatches:
setResults:
_handleClientReply:error:forSessionCommand:
peerInfo
commandRelayProxyIdentifier
_logCrossDeviceCommandEndedMetricsForCommand:targetProductType:targetProximity:response:error:
_remoteExecute_remoteDeviceExecuteCommand:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:
categoryStopped
confirmationRequired
ad_sendReplyEvenIfCallbacksExist
_sendCommandFailedForCommand:error:
_sendCommandFailedForCommand:reason:
hasResultObjectsForRequestId:
hasMissingRefContextsForId:
ad_isInAssistantErrorDomain
isLocallyRecognizingInDictationMode
_acousticId_sessionFailed
_shouldRetryForError:
_sessionDidFailWithError:
isLocallyRecognizing
_metrics_destroyAllMetricsIfNeeded
_sync_assistantLoadedSyncRequest:
_startObservingCallState
adSpeechRecognitionWillBeginRecognitionUpdateForTask:
_sendStartSpeechCommandWithSpeechManager:info:context:
_sendContextAndRestrictionsForSpeechRequestWithInfo:
dictationOptions
transcriptionMode
dictationLanguages
ad_startSpeechDictationWithAFDictationOptions:
setLanguages:
mainBundle
setApplicationName:
samplingInfo
setSelectedText:
applicationVersion
objectForInfoDictionaryKey:
setApplicationVersion:
interactionId
setInteractionId:
setTokenOffset:
setDomainObjectPropertyIdentifier:
orthography
setOrthography:
ad_setParentRequest:
serverCommandId
setStructuredDictationType:
setDictationOptions:
bargeInOptions
setBargeInModes:
speechSynthesisRecord
beginTimestamp
endTimestamp
activationEventMachAbsoluteTime
activationEventTime
numberWithLongLong:
setDurationSincePreviousTTSStart:
setDurationSincePreviousTTSFinish:
ad_setAFSpeechRequestOptions:
ad_setADRecordingInfo:
sessionUUID
motionActivity
setMotionActivity:
motionConfidence
setMotionConfidence:
origin
audioSource
updateStartSpeechId:
isDriving
_sendEnableServerEndpointerCommandWithRefID:
_sendLocationIfNeededForRequest
_sendGizmoSharedDataIfNeeded
sendGizmoData
releaseStoredContextCommandsAndSendCommands:
_context_updateContext
_sendRestrictionsInPreparationForRequest
adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:sessionUUID:
_awdRecordRecordingWillStart:
adSpeechRecordingDidBeginOnAVRecordRoute:audioSessionID:bluetoothDevice:sessionUUID:sessionRequestUUID:dictationOptions:
ad_updateWithRecordingInfo:speechRequestOptions:clientConfiguration:
ad_isDifferentFromStartSpeech:
context
setPreTriggerToDuckingEndDuration:
setDuckingEventSyncDelay:
adSpeechRecordingDidChangeAVRecordRoute:bluetoothDevice:isDucking:isTwoShot:speechEndHostTime:sessionUUID:
wantsRecordedAudioBufferLogs
usePrelisteningMode
setPackets:
setPacketNumber:
_sendSessionObject:opportunistically:
_acousticId_handleFingerprint:duration:
_acousticId_musicWasDetected
setPacketCount:
ad_setAFEndpointMode:
ad_setCSEndpointerMetrics:
_speechCaptureCompleted
adSpeechRecordingDidCancelWithSessionUUID:
_sendCancelSpeechForCommand:
adAudioFileFinishedWriting:error:sessionUUID:
adSpeechDidBeginLocalRecognitionWithModelInfo:sessionUUID:
_metrics_markLocalSpeechStartedWithContext:
secureOfflineOnly
forceOfflineRecognition
siriDataSharingOptInStatus
_metrics_markLocalPartialSpeechRecognition
adSpeechRecordingDidRecognizeTokens:sessionUUID:
_metrics_markLocalEagerRecognitionCandidate:
aceRecognition
setRawRecognition:
phrases
utterances
isFinal
interactionIdentifier
_metrics_markLocalSpeechPackage:interactionId:optedIn:
logLocalRecognitionWonForLanguage:
_handleLocalSpeechRecognitionForOfflineSupport:
adSpeechRecordingDidRecognizePhrases:sessionUUID:refId:
setRecognition:
setSessionId:
_metrics_logSpeechRecognized:resultId:
dictionaryWithDictionary:
_metrics_markLocalSpeechCompletedWithStatistics:
adSpeechRecordingDidDetectStartPointWithSessionUUID:
numberWithLong:
setEndpointTimestamp:
setLanguageDetected:
setConfidenceScoresByLanguage:
adSpeechRecordingDidDetectLanguage:confidenceScores:isConfident:
adSpeechRecordingPerformTwoShotPromptWithType:sessionUUID:completion:
logSiriQuickStopAction:
homeAnnouncementSnapshot
stopPlayback
_quickStopMediaForRequestID:executionContext:completion:
_presentDialogIdentifier:withCATParameters:listenAfterSpeaking:completion:
_sendNLContextForConfirmationWithTargetDomain:confirmationNode:responseOptions:nlInput:
getFiringStatesWithCompletion:
_directInvocationContextForSpeechRequestOptions:textToSpeechEnabled:
stopMediaDirectInvocationPayload
runSiriKitExecutorCommandWithContext:payload:
setTextToSpeechEnabled:
isEyesFree
setEyesFree:
activationEvent
setInputOrigin:
setInteractionType:
componentsSeparatedByString:
setContextVersion:
setWeightedPromptTargetDomain:
setWeightedPromptStrict:
setWeightedPromptResponseTargets:
setWeightedPromptResponseOptions:
setNlInput:
_sendCommandToServer:completion:
setCategoryStopped:
setConfirmationRequired:
_reallyDoQuickStopWithDeviceContexts:executionContext:optionalRequestID:mediaRemoteOptions:completion:
bundleForClass:
initWithInputLocale:outputVoiceLocale:
speak
dialogId
setText:
setSpeakableText:
setDialogIdentifier:
setCanUseServerTTS:
setListenAfterSpeaking:
setDialogPhase:
setDisplayTarget:
setViews:
execute:catId:parameters:globals:completion:
adQuickStopWasHandledWithActions:
adAudioSessionWillBecomeActive:
adAudioSessionDidBecomeActive:
audioSessionDidEnd
setProcessedAudioDurationMilliseconds:
setThresholdType:
setAssetVersion:
setUserIdentityClassification:
setClassifiedUser:
setRawScores:
validateAndReturnScores:donatedScores:unknownUserSharedId:totalUsers:
setConfidenceScore:
voiceProfilesOutOfSync
setScores:
setScoringSchemeVersion:
languageCodeOverride
prewarmDeviceWithIdentifier:
prepareAudioSystemWithOptions:setAudioSessionActiveOptions:setAudioSessionActiveReason:completion:
endSession:completion:
isValidForSiriSessionLanguage:
initWithLanguageCode:
_outputVoice_setOutputVoice:
postNotificationName:object:userInfo:
_setStarkRestriction:
isDeviceInCarDNDMode
_setCarDNDRestriction:
_reallyEndSessionForDelegate:
setAdSpeechSessionEnded:
_replaceRequestDelegate:
locationStatus
remoteRequestInfo
_ad_requestCommandWithRequestHelper:
text
adStartUIRequestWithText:completion:
_ad_localRequestCommandWithRequestHelper:
handoffURLString
_openURL:completion:
setRemoteRequestInfo:
_reallyHandleNewStartRequest:
updateBackgroundContextIfNowPlayingInfoChanged
setIsOnPhoneCall:
notifyState
audioFileURL
_forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:
_startSpeechRequestWithURL:isNarrowBand:withDelegate:completion:
_acousticId_reset
cancelSpeechProfileUpdate
startSpeechCaptureForRequestWithOptions:sessionUUID:language:
audioFileType
_startSpeechRequestWithDelegate:withOptions:sessionUUID:completion:
_acousticId_startSessionWithContext:
startAcousticIDCaptureWithOptions:sessionUUID:
startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:
_getDictationLanguages:options:speechOptions:delegate:completion:
_clearContext
dictationInputOrigin
setDictationInputOrigin:
applicationDisplayName
setApplicationDisplayName:
setApplicationBundleIdentifier:
_context_setSTApplicationContext:
setInitialDictationLanguage:
setPrimaryDictationLanguage:
setDictationLanguages:
startSpeechCaptureForDictationWithOptions:sessionUUID:secureOfflineOnly:
_startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
startRecordedDictationCaptureWithSessionUUID:narrowband:secureOfflineOnly:
addRecordedDictationAudioSampleData:
_lastRequest
_sendRollbackCommandForCommand:
_updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:
endpointerOperationMode
setEndpointerOperationMode:
_sendWillStopRecordingForCommand:
ad_setAFSpeechCorrectionInfo:
ad_setAFCorrectionContext:
_startNonSpeechRequest:forDelegate:
_handleServiceCommand:executionContext:completion:
initWithRequestDelegate:
_setFirstChanceService:forAceId:
_context_clearContext
clearDomainObjects
locales
objectsForIds:missingReferences:
objects
accountIdentifiers
accountForIdentifier:
removeAndSave
_clearAccount
updateSharedDataFromCompanion
setNeedsDestruction:
deleteAllUserVocabularyFromAllAppsAsync
disableDESWithCompletion:
_metrics_destroyAllMetrics
_remoteRequestHelper
activateWithRequestInfo:context:completion:
handoffRequiresUserInteraction
userNotificationRequestForRemoteRequest
actionIdentifier
adRequestRequestedOpenURL:completion:
_remoteSpeechRequestHelper
_domainObjectCache
_sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:
_sync_setSyncDelegate:
_preheatWithStyle:forOptions:completion:
_forceAudioSessionInactiveWithOptions:completion:
_setAssistantIsEnabledLocal:
setAuthorizationStatusByType:forBundle:
_setDictationIsEnabledLocal:
_setLanguageCode:outputVoice:withCompletion:
_setLanguageCode:withCompletion:
bestSupportedLanguageCodeForLanguageCode:
_setLanguageCode:outputVoice:
_clearQueuedLanguageCode
_clearQueuedOutputVoice
_setLanguageCodeIfNeeded
_processQueuedLanguageCode
_processQueuedLanguageCodeAndOutputVoice
_processQueuedOutputVoice
_setLockState:showingLockScreen:
_setConfiguration:forClient:
_endSessionForDelegate:
_startRequest:withDelegate:
_handleExternalActivationRequest:completion:
_handleRemoteSpeechRequest:completion:
_startSpeechRequestWithDelegate:withOptions:sessionUUID:
_startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:
rawScores
getContextIncludingKeys:excludingMandatoryKeys:timeOut:completion:
_startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:
_startAcousticIDRequestWithDelegate:withOptions:context:
_cancelRequestForDelegate:reason:
_rollbackRequestForDelegate:
_startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
_startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:
_startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:
_addRecordedSpeechSampleData:delegate:
_startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:
_metrics_sendEngagementFeedback:voiceQueryIdentifier:
_removeDelegate:
_stopSpeechWithOptions:forDelegate:
_cancelSpeechForDelegate:
_updateSpeechOptions:forDelegate:
adRequestDidHandleFailedStartPlayback:
suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:
adRequestWillProcessStartPlayback:intent:completion:
_sendSpeechCorrectionInfo:forCorrectionContext:
_sendSpeechCorrectionInfo:interactionIdentifier:
_handleGenericAceCommand:withDelegate:interruptOutstandingRequest:reply:
_context_rollbackClearContext
_context_willSetApplicationContextWithRefId:
_context_setApplicationContext:
_context_fetchAppicationContextForApplicationInfo:supplementalContext:refID:
_context_setOverriddenApplicationContext:withContext:
_context_setApplicationContextForApplicationInfos:withRefId:
_context_setAlertContextDirty
getDeviceContextsForKeys:forForeignRequestID:includesNearbyDevices:completion:
getContextHistoryWithCompletion:
_prepareForPhoneCall
_telephonyRequestCompleted
_requestBarrier:
_metrics_sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:raiseToSpeakAssetVersion:activeAppleAudioDevices:spokenNotificationsEnabled:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:preciseLocationEnabled:
checkForMetricsUploadProblem
metricsSenderDisabled
_metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:scheduledActivity:completion:
_fetchSupportedLanguagesWithCompletion:
fetchSupportedLanguagesWithCompletion:
_accounts
_deleteAccountWithIdentifier:
_activeAccountIdentifier
_setActiveAccountIdentifier:
_destroyActiveAccount
_refreshAssistantValidation
_rescheduleValidationRefresh
_managedStoreObjectForKey:
_setManagedStoreObject:forKey:
_context_fetchApplicationContextForApplicationInfos:completion:
_setUIService:
_startUpdatingMotionActivity
myriadMonitorTimeOutInterval
startMonitoringWithTimeoutInterval:
_stopUpdatingMotionActivity
_resetServices
clearResultObjectsForAllRequestIdsExcept:
_sync_syncIfNeeded
stopMonitoring
adRequestRequestedOpenApplicationWithBundleID:URL:completion:
adRequestRequestedDismissAssistant
adWillProcessAppLaunchWithBundleIdentifier:
adFailedToLaunchAppWithBundleIdentifier:
_executionContextMatchingExecutionInfo:fallbackRequestID:
getOfflineDictationStatusIgnoringCache:completion:
_stopObservingCallStateWithCompletion:
_getDeferredObjectsWithIdentifiers:completion:
outputAudioPowerUpdater
beginUpdate
createNewXPCWrapperWithCompletion:
endUpdate
_handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:
updateSpeechSynthesisRecord:
startDelayingWithType:success:
pushMyriadAdvertismentContextToContextCollector:completion:
volumeServiceProvider
getVolumeServiceUsingBlock:
_accessRecordedAudioWithIdentifier:completion:
_speechCapturingContextForSessionUUID:
acquireRecordedAudioWithHandler:
resignCurrent
becomeCurrent
_adviseSessionArbiterToContinueWithPreviousWinner:
getInfoWithCompletion:
sharedQueue
assistantSessionManager:didChangeRequestIdFrom:toId:
speechManager:preheatWithRecordingInfo:context:
speechManager:willStartRecordingAtTimestamp:isFromFile:inputAudioPowerWrapper:sessionUUID:
speechManager:didStartRecordingWithInfo:context:
speechManager:didUpdateRecordingWithInfo:context:
speechManager:capturedPackets:atTimestamp:totalCount:context:
speechManager:capturedFingerprint:duration:
speechManagerDidDetectMusic:
speechManagerDidDelayEndpointForMusic:
speechManager:didUpdateInputAveragePower:peakPower:
speechManager:didUpdateOutputAveragePower:peakPower:
speechManager:didReceiveLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:sessionUUID:
speechManager:didFinishWithCapturingMode:sessionUUID:
speechManager:didCancelWithSessionUUID:
speechManager:didFailWithError:sessionUUID:
speechManager:didFinishWritingAudioFile:error:sessionUUID:
speechManager:didBeginLocalRecognitionWithContext:sessionUUID:
speechManager:didRecognizeTokens:sessionUUID:
speechManager:didRecognizeRawEagerRecognitionCandidate:sessionUUID:
speechManager:didRecognizePackage:sessionUUID:
speechManager:recognitionUpdateWillBeginForTask:
speechManager:recognitionDidCompleteWithError:secureOfflineOnlyDictation:sessionUUID:statistics:
speechManager:didDetectStartpointAtTime:sessionUUID:
speechManager:didDetectEndpointAtTime:sessionUUID:
speechManager:didDetectLanguage:confidenceScores:isConfident:
speechManager:languageDetectorDidFail:
speechManager:performTwoShotPromptWithType:sessionUUID:completion:
speechManager:didRequestQuickStopWithSessionUUID:
speechManager:didRequestShutdownUIWithSessionUUID:
speechManager:didChangeRecordingState:
speechManager:audioSessionWillBecomeActive:
speechManager:audioSessionDidBecomeActive:
speechManager:didReceiveConfidenceScores:classification:classifiedUser:unknownUserScore:duration:version:thresholdingType:assetVersion:
UIService:executeHandler:forCommand:
adCallStateChangedCallInProcess:
adCallStateChangedCallIncoming:
_hasOutstandingRequests
_beginRemoteExecutionContextForCommand:fromPeer:withRemoteExecutionInfo:
_endRemoteExecutionContext:
_didLaunchAppForRequestWithIdentifier:
_fetchStarkDeviceLockedStateWithCompletion:
setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:
_sendServiceCommand:completion:
recievedLocation:locationStatus:
_isRequestDelaying
_saSetMultilingualDictationConfig:completion:
resumeInterruptedAudioPlaybackIfNeeded
_prepareForAppLaunchForRequest:
_firstChanceServiceChangeIdFrom:to:
_handleIntent:inBackgroundAppWithBundleId:reply:
setSyncDelegate:
startCloudKitSyncWeeklyForActivity:
forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:
forceAudioSessionInactiveWithOptions:completion:
setLanguageCode:withCompletion:
setLanguageCode:outputVoice:withCompletion:
setQueuedLanguageCode:
setQueuedLanguageCode:andQueuedOutputVoice:
setQueuedOutputVoice:
setLockState:showingLockScreen:
setCarDNDActive:
setConfiguration:forClient:
endSessionForDelegate:
startRequest:withDelegate:
handleRemoteSpeechRequest:completion:
startSpeechRequestWithDelegate:withOptions:
startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:
startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:
startAcousticIDRequestWithDelegate:withOptions:context:
startSpeechRequestWithURL:isNarrowBand:withDelegate:
cancelRequestForDelegate:reason:
rollbackRequestForDelegate:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:
startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:
addRecordedSpeechSampleData:delegate:
startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:
sendEngagementFeedback:voiceQueryIdentifier:
stopSpeechWithOptions:forDelegate:
cancelSpeechForDelegate:
updateSpeechOptions:forDelegate:
handleGenericAceCommand:withDelegate:interruptOutstandingRequest:targetReplyQueue:reply:
clearContext
rollbackClearContext
willSetApplicationContextWithRefId:
setApplicationContext:
fetchAppicationContextForApplicationInfo:supplementalContext:refID:
setOverriddenApplicationContext:withContext:
setApplicationContextForApplicationInfos:withRefId:
getDeviceContextsForKeys:forRequestID:includesNearbyDevices:completion:
prepareForPhoneCall
telephonyRequestCompleted
requestBarrier:
sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:raiseToSpeakAssetVersion:activeAppleAudioDevices:spokenNotificationsEnabled:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:preciseLocationEnabled:
recordDefrostXPCMessageToProcessLaunchDuration:
fetchSupportedLanguages
fetchAccounts:
fetchActiveAccount:
fetchActiveAccountIdentifier:
destroyActiveAccount
refreshAssistantValidation
rescheduleValidationRefresh
fetchManagedStoreObjectForKey:completion:
fetchContextForApplicationInfo:completion:
openApplicationWithBundleID:URL:completion:
willProcessAppLaunchWithBundleIdentifier:
failedToLaunchAppWithBundleIdentifier:
isInCarDNDModeWithCompletion:
getDeferredObjectsWithIdentifiers:completion:
beginUpdateOutputAudioPowerForClient:completion:
endUpdateOutputAudioPowerForClient:
startDelayingWithType:completion:
cancelCurrentRequest
shutdownSessionIfIdle
_broadcastCommand:
_listInstalledServicesWithCompletion:
_awdRequestEnd:
_currentClient
_requestDelegate
_speechDelegate
_speechFileDelegate
_speechDelegateHasReceivedPartialResult
_deviceIsLocked
_isInStarkMode
_isInCarDNDMode
_isTimeoutSuspended
_selectedSharedUserID
_requestCompletion
_requestGroup
_requestAssertion
_uiService
_fauxUIService
_speechManagerState
_speechCapturingContextSessionUUID
_speechCapturingContextsBySessionUUID
_speechCompletion
_requestBarrier
_currentSpeechRequestOptions
_startSpeechCommand
_finishSpeechCommand
_currentRequestInfo
_startingPronunciationRequest
_pronunciationContext
_speechDelegateHasReceivedSpeechRecognized
_sessionExperiencedError
_hasReceivedServerSpeechRecognitions
_speechHasAcceptedResultCandidate
_hasReceivedAtleastOneResultCandidate
_speechAcceptedResultCandidateDuration
_selectedResultCandidate
_speechRequestGroup
_continuePendedRequestTimestamp
_droppedPackets
_outstandingRequestIds
_aceCompletionMap
_handledCommandIdsByRequestId
_postCommandHandlingBlockMap
_rootExecutionContextsByRequestID
_remoteExecutionContextsByExecutionID
_shutdownAssertions
_deviceIsShowingLockScreen
_requestEffectiveStartTime
_restrictionsWereSetForRequest
_requestEndCompletion
_deferredRequestEndIdentifier
_firstChanceServices
_callObserver
_callTransactionUUID
_callTransaction
_hasQueuedLanguageCode
_queuedLanguageCode
_hasQueuedOutputVoice
_queuedOutputVoice
_awdSiriSession
_isSmartLanguageSelectionActive
_hasReceivedDetectedLanguage
_langaugeDetectionWaitTimer
_multilingualSpeechRecognizedCommandHandler
_cachedConfidenceScoresFromRemote
_requestStatistics
_offlineMetricsManager
_isSendingAnalyticsEventStreamsAndOfflineMetrics
_vtStateManagerAccessQueue
_accountStoreQueue
_serviceMaintenanceGroup
_lastClearContext
_syncManager
_syncDelegate
_outstandingAnchorsRequests
_outstandingSyncChunks
_outstandingSyncPromiseKeys
_outstandingSyncPromiseID
_needsToSendSyncFinished
_syncAnchorsRequestQueue
_outstandingSyncVerificationRequestID
_shouldPostSyncVerifyFinishedNotification
_needVerificationFullReport
_verificationHelper
_acousticIDHelper
_partialResultAcousticIDTimer
_hasSanityCheckedAutodownloadedAssets
resultObjects
ad_leadingSilence
ad_trailingSilence
ad_endTime
setRecordDeviceIdentifier:
expectedActivationEventTime
publisherForSnapshotType:
addSubscriber:
firingAlarmIDs
dismissedAlarmIDs
notifiedFiringAlarmIDs
initWithGeneration:date:alarmsByID:notifiedFiringAlarmIDs:
snapshotAvailable:forEvent:
alarmID
setAlarmID:
setAlarmURL:
repeatSchedule
setRepeatOptions:
setIsFiring:
setAlarmsByID:
setNotifiedFiringAlarmIDs:
initWithString:
absoluteString
stringByAppendingString:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:
_listenForAudioRouteChanges
_updateAudioRouteOnMainThread
outputs
lastObject
portType
_notifyObservers:
registerObserver:
unregisterObserver:
_muteStateChanged:
useDeviceSpeakerForTTS
_listenForMuteStateChanges
_stopListeningForMuteStateChanges
_cleanupAudioRouteOnMainThread
audioSessionController:didReceiveAudioSessionInterruptionNotificationWithUserInfo:
audioSessionController:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:
audioSessionController:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:
audioSessionController:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:
audioSessionController:didReceiveAudioSessionOwnerLostNotification:
audioSessionController:didReceiveAudioSessionOwnerResetNotification:
_currentRouteIsHandsFree
_stopListeningForAudioRouteChanges
_useDeviceSpeakerForTTSPreferenceChanged
addHandsFreeStateObserver:
removeHandsFreeStateObserver:
_observers
_useDeviceSpeakerForTTSPreference
_handsFreeLock
muteMode
applicationStateForApplication:
invalidate
sharedConnection
effectiveRestrictedBoolValueForSetting:
effectiveBoolValueForSetting:
arrayWithObjects:
internalUserClassification
standardUserDefaults
persistentDomainForName:
defaultWorkspace
openSensitiveURL:withOptions:
initWithBytes:length:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
mutableCopyWithZone:
initWithDictionary:context:
properties
domainFromSADObject
expectedResponseClassName
siriServiceStream
name
keyPathForSiriServiceDataDictionary
domainKey
commandKey
fileExistsAtPath:isDirectory:
errorWithCode:description:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initFileURLWithPath:
dataWithLength:
getDeviceInfo:
getPairedDevicesWithCompletion:
_ad_SADHash
hexStringFromBytes:length:
attributesOfItemAtPath:error:
fileModificationDate
setAttributes:ofItemAtPath:error:
createFileAtPath:contents:attributes:
initWithName:options:queue:delegate:
sharedObserver
notifyObserver:didReceiveNotificationWithToken:
notifyObserver:didChangeStateFrom:to:
systemLanguagePreferenceHasChanged
_notifyObserver
_changed
adShouldSpeakStateDidChange:
_init
_homeManager
_siriDataSharingOptInStatusDidChange:
initWithOptions:
_currentHome
isDataSyncInProgress
currentAccessory
home
owner
primaryHome
homes
currentUser
userSettingsForHome:
settings
assistantAccessControlForHome:
_updateHomeUserSettings
localizedStringFromDate:dateStyle:timeStyle:
uniqueIdentifier
accessories
_propagateSiriDataSharingOptInStatus:toAccessory:
rootGroup
isMultiUserEnabled
personalDomainsIsEnabled
securePersonalDomainsRequireAuth
initWithObjectsAndKeys:
_settingsForHomeUser:forHome:
isEqualToDictionary:
_logRelevantAnalyticsOnHomeUserSettingsUpdateForCurrentSettings:allowVoiceIdSettingValue:isPrimaryUser:
users
setMultiUserVoiceIdentification:
restartSharing
_currentHomeInfo
settingsForMultiUserWithRefresh:completion:
_startCloudKitActivityForHomes:homesToDelete:
disableVoiceID
_homeManagerUpdatedHomes:homesToDelete:
_checkAndDisableVoiceIDIfRequired
_homeManagerUpdatedHomes:
_resolveSiriDataSharingStatusMismatch:
hmf_isEqualToUUID:
category
categoryType
updateValue:completionHandler:
homeManager:didUpdateAuthorizationStatus:
homeManagerDidUpdateHomes:
homeManagerDidUpdatePrimaryHome:
homeManager:didAddHome:
homeManager:didRemoveHome:
homeManager:didReceiveAddAccessoryRequest:
homeManager:didUpdateStateForIncomingInvitations:
homeManagerDidUpdateApplicationData:
homeManagerDidUpdateCurrentHome:
homeManagerDidUpdateDataSyncInProgress:
homeManagerDidUpdateDataSyncState:
homeManager:didUpdateStatus:
homeManager:didUpdateResidentEnabledForThisDevice:
homeManager:didUpdateAccessAllowedWhenLocked:
homeManager:didUpdateThisDeviceIsResidentCapable:
homeManager:residentProvisioningStatusChanged:
homeManagerWillStartBatchNotifications:
homeManagerDidEndBatchNotifications:
homeManager:didUpdateMultiUserStatus:reason:
user:didUpdateAssistantAccessControl:forHome:
user:didUpdateMediaContentProfileAccessControl:forHome:
user:didUpdatePhotosPersonManagerSettings:
user:didUpdatePersonManagerSettings:
user:didUpdatePairingIdentity:
user:didUpdateNeedsiTunesMultiUserRepair:
shareManager:didReceiveShareInvitation:completion:
shareManager:didReceiveShareInvitation:completionHandler:
shareManager:didReceiveRepairInfo:home:
homeDidUpdateName:
homeDidUpdateAccessControlForCurrentUser:
home:didAddAccessory:
home:didRemoveAccessory:
home:didAddUser:
home:didRemoveUser:
home:didUpdateRoom:forAccessory:
home:didAddRoom:
home:didRemoveRoom:
home:didUpdateNameForRoom:
home:didAddZone:
home:didRemoveZone:
home:didUpdateNameForZone:
home:didAddRoom:toZone:
home:didRemoveRoom:fromZone:
home:didAddServiceGroup:
home:didRemoveServiceGroup:
home:didUpdateNameForServiceGroup:
home:didAddService:toServiceGroup:
home:didRemoveService:fromServiceGroup:
home:didAddActionSet:
home:didRemoveActionSet:
home:didUpdateNameForActionSet:
home:didUpdateActionsForActionSet:
home:didAddTrigger:
home:didRemoveTrigger:
home:didUpdateNameForTrigger:
home:didUpdateTrigger:
home:didUnblockAccessory:
home:didEncounterError:forAccessory:
home:didUpdateHomeHubState:
homeDidUpdateSupportedFeatures:
settingsDidUpdate:
settingsWillUpdate:
home:didAddResidentDevice:
home:didRemoveResidentDevice:
home:didUpdateLocation:
home:didUpdateStateForOutgoingInvitations:
home:didUpdateAccesoryInvitationsForUser:
homeDidUpdateApplicationData:
home:didUpdateApplicationDataForRoom:
home:didUpdateApplicationDataForServiceGroup:
home:didUpdateApplicationDataForActionSet:
home:didUpdateLastExecutionDateForActionSet:
home:didUpdateAccessControlForUser:
home:didEnableNotifications:
home:didUpdateAutomaticSoftwareUpdateEnabled:
home:didUpdateMinimumMediaUserPrivilege:
home:didUpdateMediaPeerToPeerEnabled:
home:didUpdateMediaPassword:
home:didAddMediaSystem:
home:didRemoveMediaSystem:
home:didUpdateReprovisionStateForAccessory:
homeDidUpdateProtectionMode:
homeDidUpdateNetworkRouterSupport:
homeDidUpdateHomeLocationStatus:
homeDidEnableMultiUser:
homeDidSetHasAnyUserAcknowledgedCameraRecordingOnboarding:
home:didAddAccessoryNetworkProtectionGroup:
home:didRemoveAccessoryNetworkProtectionGroup:
home:didUpdateAccessoryNetworkProtectionGroup:
homeDidSetEnableDoorbellChime:
home:didUpdatePersonManagerSettings:
initWithHomeManager:queue:
currentHomeWithCompletion:
_homesWithMultiUserEnabled
infoForThisDevice
getCurrentHomeMemberIds:
getVoiceSettingsForHomeMembers:
getHomeIdForAccessoryId:completion:
restartShareDeletion
_homeUserSettings
_assistantRequestedToTurnOffVoiceID
_homeSharingStates
setPersonalDomainsIsEnabled:
setSecurePersonalDomainsRequireAuth:
_personalDomainsIsEnabled
_securePersonalDomainsRequireAuth
isCurrentAccessory
isEnabled
allowUnauthenticatedRequests
keyPath
groups
_activationMode
suppressStartAlert
recordingAlertPolicy
isOnPhoneCall
languageDetectionUserContext
applicationBundleIdentifier
presentationMode
isMediaPlaying
mediaPlaybackVolume
_appendDictationApplicationInfoSettings:
_audioSessionActiveDelay
initWithRecordType:deviceId:
_canUseZLL
hostTimeForSeconds:
_alertBehaviorForRecordRoute:playbackRoute:attemptsToUsePastDataBufferFrames:
audioAlertStyleForRecordRoute:playbackRoute:
_eventIsVoiceTrigger
shouldOverrideRecordingStartingAlertBehaviorForAlertStyle:
_isVoiceOverTouchEnabledInAccessibility
_isVibrationDisabledInAccessibility
deviceRingerSwitchState
_audioAlertStyleForListenAfterSpeakingWithRecordRoute:playbackRoute:echoCancellation:useDeviceSpeakerForTTS:
accessibilityState
isVoiceOverTouchEnabled
isVibrationDisabled
_serverAudioSessionActiveDelay
requiresBorealisConsumerCheck
_eventIsRaiseToSpeak
canEnterTwoShot
useBorealisBuffer
usePrelistening
machAbsoluteTime
canDelayAudioSessionActive
speechEndpointerOperationMode
_suppressStartAlert
_isActivated
_activeMediaPlaybackVolume
_useBorealisBuffer
_usePrelistening
_canDelayAudioSessionActive
_hasPlayedStartAlert
_machAbsoluteTime
_speechEndpointerOperationMode
_speechRecordingAlertPolicy
_presentationMode
_languageDetectionUserContext
_dictationInputOrigin
_applicationDisplayName
_applicationBundleIdentifier
silenceStartTime
ad_speechEndTime
_listeningEdgeDetectorIDsChanged
publishStateWithBlock:
beginListeningForEdgeDetectorWithID:
endListeningForEdgeDetectorWithID:
_listeningEdgeDetectorIDs
_statePublisher
initWithStartTime:
streamUID
offset
setEndTime:
_startTime
_streamUID
_offset
_endTime
_acousticId_startSessionForSpeechRequest:
acousticIdSearchSessionId
setSuppressStopAlert:
_addListener:
_removeListener:
_listenersLock
generationsByDataType
initWithGenerationsByDataType:
_generationsByDataType
setGenerationsByDataType:
deleteAttribute:
initWithSpeechCapturingMode:clientConfiguration:experimentContext:
setSpeechCapturingMode:
_setEndpointStyle:
_stopRecordingForEndpointReason:
_disableEndpointer
URLForSoundID:
setAlertSoundFromURL:forType:
invocationFeedbackExperiment
isFeatureGroupOneEnabled
URLForResource:withExtension:
overrideStartingAlertBeepSoundID
setRecordBufferDuration:
getRecordBufferDuration
_speechControllerWithError:
avvcContext
initializeRecordSessionWithContext:
endpointAnalyzer
setEndpointStyle:
setSynchronousCallbackEnabled:
setMeteringEnabled:
setEndpointAnalyzerDelegate:
setSpeakerIdDelegate:
setDuckOthersOption:
_updateRecordBufferDuration
setLanguageDetectorDelegate:
resetAudioSession
getLPCMAudioStreamBasicDescription
recordSettingsWithOptions:
prepareRecordWithSettings:error:
audioSessionActivated
_resetSpeechController
_setLanguageDetectorDelegateIfRequired
_cancelExtendedEndpointTimer
setStopRecordingReason:
setExpectedStopHostTime:
stopRecordingWithOptions:
_logFanState
_mapInstrumentationEndpointTypeFromStopRecordingReason:
_shouldEmitInstrumentation
_speechControllerDidStartRecording:successfully:error:
stopEndpointer
turnIdentifier
_updateAudioContextToPostVoiceForReason:
playAlertSoundForType:
enumeratorAtPath:
nextObject
initWithType:fileHandle:priority:
canGetPCMStream
_checkAudioLoggingLimits:
recordSettings
_stopRecordingWithReason:hostTime:
speechCapturingWillStopRecording
canPrewarm
prewarmAudioSession
tapToSiriAudioPlaybackRequest
prewarmRequest:completion:
canPrepareWithoutInterruption
_setAudioContextWithInfo:forReason:
_prepareSpeechControllerWithOptions:error:
_updateRecordDeviceInfoAndPlaybackRouteForReason:forcesUpdate:
_recordingInfoForEvent:audioAlertStyle:includeBTInfo:includeRecordDeviceInfo:
_currentRecordingInfo
setAutomaticEndpointingSuspensionEndTime:
_setSpeechCapturingMode:
_setEndpointerOperationMode:forceUpdate:
_setAlertsIfNeeded
_currentRecordRoute
_currentPlaybackRoute
shouldUseVoiceTriggerAnalyzerStyle
setMinimumDurationForEndpointer:
_clearEndpointHint
speechCapturingMode
setDelay:
_startAudioPlaybackRequest:options:completion:
speechRecordingAlertPolicy
startingAlertBehavior
beepSoundID
initWithItemURL:itemData:numberOfLoops:volume:fadeInDuration:fadeOutDuration:userInfo:
hasPlayedStartAlert
startRecordingSettingsWithRecordRoute:playbackRoute:
recordContext
startRecordingWithSettings:error:
shouldExplicitlyPlayAlertOnStart
_playAudioAlert:
_scheduleExtendedEndpointTimer
shouldSuppressRecordingErrorAlert
updateAudioSessionID:
useAutomaticEndpointing
setSpeechRequestOptions:currentActivationInfo:
_updateAudioContextWithInfo:reason:
recordDeviceIdentifier
_updateAudioContextWithPendingInfoForReason:
setCurrentContext:error:
needsUpdateToPostVoiceMode
beginUpdateToPostVoice
endUpdateToPostVoiceWithContext:success:
isRecording
suppressInterruptionEndedNotifications
releaseAudioSession:
setSuppressInterruptionEndedNotifications:
_logAudioMetrics:
initWithListenerEndpoint:
lastStartOfVoiceActivityTime
shouldPlayAlertIfNotPrelistening
processServerEndpointFeatures:
recordDeviceInfo
playbackRoute
_currentRecordDeviceInfo
alertStartTime
secondsForHostTime:
_audioDeviceID
voiceTriggerInfo
_speechControllerDidStopRecording:forReason:estimatedSpeechEndHostTime:errorCodeOverride:underlyingError:
_logBluetoothState
_logVoiceTriggerInfo:
speechCapturingDidUpdateRecordingInfo:
_setupAudioFileWritingForSpeechController:info:context:
_speechControllerDidReceiveLastAudioRecordBuffer:forReason:estimatedSpeechEndHostTime:isRecordingStopped:
_playStopAlertIfNecessaryForReason:endpointMode:error:
startRecording:
_speechRecordingEventListener
handleSpeechRecordingEvent:
speechCapturing:didFinishWritingAudioFile:error:
_opusDecoder
_speexDecoder
_speechControllerDidReceiveFirstAudioRecordBufferWithHostTime:atHostTime:
_decodeRecordBufferForSecureOfflineOnly:isOpus:
getAudioRouteInstrumentationWithRecordingInfo:
setInterfaceVendorID:
setInterfaceProductID:
setHardwareInterfaceVendorID:
setAudioInputRoute:
_fingerprinter
speechCapturingDidReceiveLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:
speechCapturing:willSetAudioSessionActive:
speechCapturing:didSetAudioSessionActive:
shouldSuppressRecordingStopAlert
didWin
isMonitoring
speechCapturing:didDetectLanguage:confidenceScores:isConfident:
twoShotPromptTypeForRecordRoute:playbackRoute:
_performTwoShotPromptForType:atTime:
beginWaitingForMyriad
endWaitingForMyriadWithDecision:
_speechControllerRequestsOperation:forReason:completion:
speechCapturingDidRequestQuickStop:
speechCapturingDidRequestShutdownUI:
_playPhaticWithCompletion:
performBlockAfterAlerts:timeout:
speechCapturingDidRequestUpdateSiriOutputVolume:
speechCapturing:didDetectStartpointAtTime:
additionalMetrics
_hardEndpointWasDetectedWithMetrics:atTime:
shouldTreatTimeoutAsHardEndpoint
_checkIfLastEndpointHintShouldBeAccepted
speechCapturing:didDetectEndpointAtTime:
setSaveSamplesSeenInReset:
twoShotAudioPlaybackRequest
playRecordStartingAlertAndResetEndpointer
_handleFakeTwoShotPromptTimeoutWithUUID:
_handleFakeTwoShotPromptCallbackWithUUID:timestamp:duration:error:
speechCapturing:performTwoShotPromptWithType:completion:
_enforceEndpointHint
shouldAcceptEagerResultForDuration:resultsCompletionHandler:
updateEndpointerThreshold:
updateEndpointerDelayedTrigger:
setLanguageDetectorInteractionID:
speechCapturing:didReceiveFingerprint:duration:
speechCapturingDidProvideConfidenceScores:classification:classifiedUser:unknownUserScore:duration:version:thresholdingType:assetVersion:
speechCapturing:didInterruptAudioSession:
speechCapturing:didLoseAudioSessionOwnerOrMediaServices:
speechControllerLPCMRecordBufferAvailable:buffer:
speechControllerLPCMRecordBufferAvailable:buffer:recordedAt:
speechControllerRecordBufferAvailable:buffers:recordedAt:
speechControllerRecordBufferAvailable:buffers:durationInSec:recordedAt:
speechControllerDidDetectVoiceTriggerTwoShot:atTime:
speechControllerDidDetectVoiceTriggerTwoShot:atTime:wantsAudibleFeedback:
speechControllerDidStartRecording:successfully:error:
speechControllerDidDeliverLastBuffer:forReason:estimatedSpeechEndHostTime:
speechControllerDidStopRecording:forReason:
speechControllerDidStopRecording:forReason:estimatedSpeechEndHostTime:
speechControllerDidDetectStartpoint:
speechControllerDidDetectEndpoint:ofType:atTime:
speechControllerRecordHardwareConfigurationDidChange:toConfiguration:
speechControllerDidUpdateSmartSiriVolume:forReason:
speechControllerDidFinishAlertPlayback:ofType:error:
speechControllerBeginRecordInterruption:
speechControllerBeginRecordInterruption:withContext:
speechControllerEndRecordInterruption:
speechController:willSetAudioSessionActive:
speechController:didSetAudioSessionActive:
speechControllerRequestsOperation:forReason:
speechControllerRequestsOperation:forReason:completion:
endpointer:didDetectStartpointAtTime:
endpointer:didDetectHardEndpointAtTime:withMetrics:
languageDetectorDidDetectLanguageWithConfidence:confidence:isConfident:
speakerIdentificationDidDetectSpeakerWithScores:
eagerlyInitializeAudioRecording
prepareSpeechCaptureWithOptions:error:
recordingInfoForPreheatWithEvent:
currentVTSatScore
prepareForMode:
startSpeechCaptureWithContext:willStartHandler:error:
fetchAudioSessionID
fetchRecordingInfo
setAudioFileType:
setAudioFileHandle:
setSpeechRecordingEventListeningEndpoint:
suppressUtteranceGradingIfRequired
setEARLanguageDetectorSpeechRequestId:
_setDictationAudioModeEnabled:
_setAudioDuckingEnabled:
_packetCount
_speechCapturingMode
_recordingAlertsConfiguration
_extendedEndpointTimer
_endpointAnalyzer
_context
_currentActivationInfo
_pendingActivationInfo
_fingerprintingEnabled
_audioFileType
_needsAVVCLPCMCallbacks
_hasReceivedEmptyLPCMRecordBuffer
_audioFileHandle
_audioLogggingFileWriter
_startEvent
_recordingState
_endpointerOperationMode
_didReceiveFirstBuffer
_didReceiveLastBuffer
_didDetectStartpoint
_didDetectEndpoint
_didEnterTwoShotMode
_didFakeTwoShotWithAlert
_fakeTwoShotTTSPromptUUID
_serverDidRecognizeSpeech
_fingerprintWasRecognized
_serverDidEndpoint
_didTimeout
_wasCanceled
_suppressRecordingStoppedAlert
_isRecordingUsingBTRoute
_twoShotStartTime
_didPerformTwoShotPrompt
_forceSuccessAlertOnStop
_isDriving
_lastPrepareTimestamp
_accumulatedBufferDuration
_recordingWillStartGroup
_decoder
_expectedFirstBufferTimestamp
_isOpus
_recordDevice
_audioDuckingEnabled
_speechRecordingEventListenerConnection
_fakeTwoShotTTSPromptWatchdogTimer
_lastAudioRecordBufferStartTime
_lastAudioRecordBufferReceiptTime
_lastEndpointerMetrics
_lastEndpointHintDuration
_lastEndpointHintFeatures
_lastEndpointHintCompletion
_mostRecentSpeechSynthesisRecord
_currentClientConfiguration
_alertPlaybackGroup
_numberOfAVVCAlertPlaybacksByType
_bluetoothWirelessSplitterSessionStateObserver
_experimentContext
_suppressInterruptionEndedNotifications
endpointerType
_registerForRingerMuteStateNotifications
_ringerStateToken
_updateRingerMuteState:
_unregisterForRingerMuteStateNotifications
notificationWithName:object:
postNotification:
_muteMode
buildDeviceFixedContext
buildDeviceDynamicContextRelativeToTimestamp:
_triggerABCForNullAssistantIdentifier
setDeviceType:
setSystemBuild:
setSiriInputLanguage:
setSiriVoiceLanguage:
setSiriDeviceID:
setSpeechID:
siriResponseShouldAlwaysPrint
setAlwaysShowSiriDialog:
alwaysObscureBackgroundContentWhenActive
setAlwaysBlurBackground:
alwaysShowRecognizedSpeech
setAlwaysShowUserSpeechTranscript:
setSiriUISettings:
setSystemLocale:
setIsSatellitePaired:
wallClockTimeForTimestamp:
setTimeIntervalSince1970:
setHorizontalAccuracyInMeters:
dateWithTimeInterval:sinceDate:
_peerInfo
_commandRelayProxyIdentifier
setPeerInfo:
setCommandRelayProxyIdentifier:
removeItemAtURL:error:
_finalizeAudioFileWriterWithCompletion:
_removeRecordedAudio
_didBecomeCurrent
_didResignCurrent
_initializeAudioFileWriterWithAudioStreamBasicDescription:
appendAudioData:
initWithType:pathGenerator:priority:
configureWithAudioStreamBasicDescription:
flushWithCompletion:
_instrumentSiriCue:
setSiriCueType:
setEndpointType:
_donateRecordedAudioForVoiceIdentificationTrainingWithCompletion:
notifyImplicitTrainingUtteranceAvailable:forVoiceProfileId:withRecordDeviceInfo:withRecordCtxt:withVoiceTriggerCtxt:withOtherCtxt:withCompletion:
initWithSessionUUID:turnIdentifier:
updateAudioRecordContext:
updateAudioRecordDeviceInfo:
updateVoiceTriggerInfo:
updateRecordingInfo:
beginRecordingAudioWithAudioStreamBasicDescription:
appendRecordedAudioBuffer:
endRecordingAudio
setSpeechRecordingSettings:
speechRecordingSettingsWithAccessBlock:
instrumentSiriCue:
instrumentSiriCueForAlertType:
instrumentStopRecordingForEndpointType:
_isCurrent
_startSpeechId
_selectedResultCandidateId
_audioRecordContext
_audioRecordDeviceInfo
_voiceTriggerInfo
_recordingSettings
_recordingInfo
_audioFileWriter
_recordedAudioFileURL
_recordingAudioGroup
_voiceIdentificationTraining_allowsWithoutResultCandidate
_voiceIdentificationTraining_allowedResultCandidateIds
_voiceIdentificationTraining_resultCandidateToSharedUserIdMap
_turnIdentifier
_voiceIdentificationTraining_withoutResultCandidateSharedUserId
_stopRecordingInstrumented
_wantsRecordedAudioBufferLogs
_sessionUUID
getCurrentFanInfo:
fanId
setFanId:
currentSpeed
setCurrentSpeed:
targetSpeed
setTargetSpeed:
_fanId
_currentSpeed
_targetSpeed
initWithName:reason:userInfo:
_ad_settingsRequestRepresentation
_ad_aceSettingsResponseCommandRepresentationForSiriResponse:
_ad_settingType
_ad_aceSettingsGetBooleanResponseRepresentation
_ad_aceSettingsResponseRepresentationForSetValueCommand:
_ad_getSettingsRequestForHandler:completion:
_ad_setting
_setSettings:
dryRun
_setApplyChanges:
_initWithSettingType:
settingsAction
_ad_aceSettingBooleanEntityRepresentation
valueBeforeUpdate
setPreviousValue:
valueAfterUpdate
failOnSiriDisconnectWarnings
settingType
setSetting:
settingChanges
_deleteLegacyOfflineMetricsFiles
_buildOfflineMetricsMap
offlineIdentifier
setOfflineIdentifier:
insertMetrics:
_map
_missingReferenceFulfillmentContexts
missingReferences
_missingReferenceFulfillmentContextsByRequestId
_requestMap
_mutableResolvedIds
resolvedReferences
setHasBeenFulfilled:
fulfillmentBlock
_removeMissingReferenceContext:
_addObjects:forRequestId:sessionRequestId:
ad_callbacks
_removeMissingRefContextsForRequestId:
allKeysForObject:
commandsForSuccessReplyToCommand:
_requestsWithPhoneCall
phoneSearchResults
commandOutcome
activeCallRemaining
phoneHangUpCallType
routeResponse
result
hasArrayForPropertyForKey:
confirmed
set_mutableResolvedIds:
_hasBeenFulfilled
_missingReferences
_fulfillmentBlock
ad_calendarErrorWithCode:
initWithComponentId:andBlockOnConfiguration:
_AWDTimestampTruncatedToHourPrecision
_currentTime
_setConnectionStartTime:
_submitMetricWithIdentifier:hotShipIdentifier:hotShipTimestamp:generation:
_connectionStartTime
_durationInMillisecondsFromTime:toTime:
setDuration:
setErrorDomain:
_setVoiceRecordingStartTime:
_setVoiceRecordingEndTime:
_voiceRecordingStartTime
_setVoiceSendStartTime:
_setVoiceSendEndTime:
_voiceSendStartTime
metricValue
_voiceRecordingEndTime
setDurationFromVoiceRecordingEnd:
_voiceSendEndTime
setDurationFromVoiceSendEnd:
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
_submitMetricWithIdentifier:generation:
getAWDTimestamp
logConnectionFailedWithError:connectionType:
logVoiceRecordingStart
logVoiceRecordingEnd
logVoiceSendStart
logVoiceSendEnd
logNetworkAnalyzeRunWithResults:
isForUserRequest
setForUserRequest:
analyzedSuccessfulRetry
setAnalyzedSuccessfulRetry:
setWwanPreferred:
connectionInterface
setConnectionInterface:
sendBufferBytesRemaining
setSendBufferBytesRemaining:
knownURLLoadDuration
setKnownURLLoadDuration:
siriURLLoadDuration
setSiriURLLoadDuration:
siriSaltURLLoadDuration
setSiriSaltURLLoadDuration:
gatewayStatus
setGatewayStatus:
gatewayPingDuration
setGatewayPingDuration:
gatewayPingsSent
setGatewayPingsSent:
gatewayPingsDropped
setGatewayPingsDropped:
_forUserRequest
_analyzedSuccessfulRetry
_wwanPreferred
_connectionInterface
_sendBufferBytesRemaining
_knownURLLoadDuration
_siriURLLoadDuration
_siriSaltURLLoadDuration
_gatewayStatus
_gatewayPingDuration
_gatewayPingsSent
_gatewayPingsDropped
setInterface:
setIsUserRequest:
setAnalyzingSuccessfulRetry:
_durationInMillisecondsForDuration:
unsignedIntValue
af_logDiagnostics
setHandoffData:
setHandoffUrlString:
setHandoffOriginDeviceName:
hasText
hasHandoffData
hasHandoffUrlString
setRequiresUserInteraction:
setHasRequiresUserInteraction:
hasRequiresUserInteraction
hasHandoffNotification
hasHandoffOriginDeviceName
handoffData
handoffUrlString
requiresUserInteraction
handoffNotification
handoffOriginDeviceName
_handoffData
_handoffNotification
_handoffOriginDeviceName
_handoffUrlString
_text
_requiresUserInteraction
setSalt:
setAllocation:
setControlGroup:
setExperimentGroups:
isAllDay
recencyDate
timeZone
previewRestricted
setApplicationId:
setDateIsAllDay:
setEndDate:
setRecencyDate:
setNotificationId:
setPreviewRestricted:
threadID
setThreadIdentifier:
feed
logEventWithType:machAbsoluteTime:context:contextNoCopy:
logEventWithType:machAbsoluteTime:contextResolver:
logInstrumentation:machAbsoluteTime:turnContext:
setTurnID:
setTurnContext:
setEventType:
setEventData:
setEvent:
_stageEvent:
_service:
logInstrumentationOfType:machAbsoluteTime:turnIdentifier:
_stageEvents:
stageEvents:completion:
logEventWithType:contextResolver:
logInstrumentation:turnContext:
logInstrumentation:machAbsoluteTime:turnIdentifier:
logInstrumentationOfType:turnIdentifier:
boostQueuedEvents:
setService:
logEvent:
logEvents:
_group
requestCanBeHandled
hasEligibleSetup
supportedByApplicationWithBundleID:
canBeHandled
archivedDataWithRootObject:requiringSecureCoding:error:
supportedOnPlatform
supportedForApplicationWithBundleId:
performRequestWithCompletion:
initWithUserNotification:sourceAppId:
_notification
_sourceAppId
fetchElligibleSetupStateAndNotifyObservers:
fetchInitialState
announcementTypeForBundleID:
_requiredIntentIdentifiersForAnnouncementType:
_announceableIntentIdentifiersForAnnouncementType:
fetchLocalVoiceAssetAvailabilityWithCompletion:
notifyObserversOfCurrentEligibleSetupState:
fetchEligibleSetupStateWithCompletion:
updateWirelessSplitterSessionInfoAndObserve
fetchWirelessSplitterSessionInfoAndStartObservingSync
_updateAudioRouteAvailabilityForSpokenMessagesAndBroadcast:
hasEligibleSetupChanged:
requestCanBeHandledChanged:
_settingsConnection
startObservingWirelessSplitterSession
notifyObserversOfCurrentRequestCanBeHandledState
_setDelegate:
_isRouteAvailableForAnnouncement:
_settingsConnectionDidDisconnect
_settingsConnectionPartialVerificationResult:
_settingsConnectionServerVerificationReport:
_inWirelessSplitterSession
_inWirelessSplitterSessionStateValid
_routeAvailableForSpokenMessages
_lastKnownEligibilityState
_localVoiceAssetAvailable
_pairedInfoChangeObserver
_wirelessSplitterSessionObserver
_wirelessGuestConnectionObserver
_forcedUpdateObserver
initWithNotifications:sourceAppId:
userActivityForID:
setUserActivity:forID:
_userActivitiesStore
latitude
longitude
contentAttributeSet
phoneNumbers
_resetTimer
_cancelTimer
allowedTimelimit
setAllowedTimelimit:
_timerSource
_allowedTimelimit
isCustom
VSSpeechFootprint
setFootprint:
setIsBuiltInVoice:
setContentVersion:
setMasteredVersion:
isBuiltInVoice
VSSpeechType
VSVoiceAsset
isMatchForVoiceAsset:
setDefaultUserState:
setSyncSharedUserId:
setInContextUsersStates:
_backgroundContextWithObjects:
backgroundContextWithCachedObjects
navStatus
setNavStatus:
localSearchGetNavigationStatusCompleted
setLocalSearchGetNavigationStatusCompleted:
queueState
setQueueState:
errorIndicatorStatus
setErrorIndicatorStatus:
currentHome
setCurrentHome:
phoneCallState
setPhoneCallState:
musicPersonalizationToken
setMusicPersonalizationToken:
allMusicPersonalizationTokens
setAllMusicPersonalizationTokens:
playbackDeviceList
setPlaybackDeviceList:
homeAnnouncement
setHomeAnnouncement:
_navStatus
_localSearchGetNavigationStatusCompleted
_queueState
_errorIndicatorStatus
_phoneCallState
_musicPersonalizationToken
_allMusicPersonalizationTokens
_playbackDeviceList
_homeAnnouncement
_createDeviceAuthenticationSessionForVersion:
deviceAuthSession
_setRequestData:
_requestData
_duration
_authStrategyVersion
_deviceAuthSession
_deviceAuthSessionState
setHandoffURLString:
handoffRequestData
_ad_setPayloadOnRequestInfo:
setHandoffRequestData:
expectedSpeakerSharedUserID
setUtterance:
setOrigin:
setExpectedSelectedSharedUserId:
expectedSpeakerConfidenceScore
nonspeakerConfidenceScores
setVoiceIDConfidenceScores:
scores
legacyDirectActionIdentifier
setDirectAction:
correctedSpeech
correctedSpeechContext
combinedRank
setCombinedRank:
combinedScore
setCombinedScore:
onDeviceUtterancesPresent
setOnDeviceUtterancesPresent:
originalRank
setOriginalRank:
originalScore
setOriginalScore:
previousUtterance
setPreviousUtterance:
utteranceSource
setUtteranceSource:
setTurnId:
setPre:
post
setPost:
toAdd
setToAdd:
toRemove
setToRemove:
_pre
_post
_toAdd
_toRemove
_answerHandler:completion:
_hangUpHandler:completion:
_incomingCallSearchHandler:completion:
_unhandledCommand:completion:
_hangUpCurrentCall
_addTimer:
_removeTimer:
_watchdogTimers
syncManager:finishedSyncForKeys:postNotification:
_postSyncFinishedNotification
_setCurrentAnchor:
_setContinueBlock:
syncManager:chunkForSyncInfo:chunkInfo:
syncManagerIsPausingSync:
_currentAnchor
_waitUntilSafeToContinue
_setCurrentAnchorToNext
initWithAnchor:forcingReset:
setReasons:
setForVerification:
_syncFinishedForService:error:
_syncingService:withSyncInfo:receivedChunk:continueBlock:
_finishSync
_preferredSyncKeyOrder
_sortedAnchorsFromAnchors:
_setAnchorsToSync:
_continueSync
_invokeContinueBlockWithKeepGoingArgument:
isSyncing
cancelSyncForAnchor:
syncManagerDidResetInProgressSync:
serviceTimedoutForSync:
initWithServiceManager:queue:
prepareSyncWithAnchors:forReasons:delegate:
addQueuedAnchors:forReasons:
clearQueuedAnchorsAndReasons
queuedAnchors
queuedReasons
continueSync
_forceResetOnNextSync
_setForceResetOnNextSync:
_continueBlock
getAnchorsRequest
setGetAnchorsRequest:
isVerifying
setIsVerifying:
_anchorsToSync
_currentSyncReasons
_queuedAnchorsByNormalizedKey
_queuedReasons
_syncedAnchors
_currentSyncService
_currentSyncID
_currentSyncShouldCancel
_timedoutServices
_isVerifying
_getAnchorsRequest
syncKeysForReason:
shouldSyncEverythingForReason:
shouldIncludeAllKnownSiriKitAnchorsForReason:
shouldSyncThirdPartyUserVocabularyForSyncKeys:
shouldSyncIntentPolicyForSyncKeys:
_addLimboId:
_shouldSendAssistantData
_sendAssistantDataChangedSinceAnchor:refId:
_sendPendingCommands
_addPendingCommand:
anchor
setLastAssistantDataAnchor:
_waitingForAssistantData
dataAnchor
requestSync
_sendPendingDormantCommands
_setDormantWithStyle:
_pendDormantCommand:
siriCore_bufferingAllowedDuringActiveSession
_sendLimboCommand:
_removeRequestForAssistantData
_adSessionTypeFromString:
awdRequestRecord
_sendCommandFailedWithRefId:
_setPendingAssistantDataAnchor:
hasLoadedAssistant
_pendingAssistantDataAnchor
_limboIds
_assistantDataRequested
_assistantDataRefId
_dormant
_dormantQueue
_sessionType
_sessionId
_resultObjectsQueue
_resultUsefulnessScore
_hasUsefulnessScore
_canHandleRequest
_readDictationSampledPlist
updateDateToCurrent
resetRequestCount
setRequestCount:
incrementRequestCount
_createDictationSampledPlistIfItDoesNotExist
date:matchesComponents:
dictionaryWithContentsOfURL:error:
_writeDictationSamplingVariblesToFile:
updateRequestCountWithFlag:
decrementRequestCount
isSamplingDateCurrent
isRequestSelectedForSampling
numberOfRequestsTillNow
setNumberOfRequestsTillNow:
currentSamplingDate
setCurrentSamplingDate:
dictationSamplingVaribles
setDictationSamplingVaribles:
isRequestConsideredForSampling
setIsRequestConsideredForSampling:
_isRequestConsideredForSampling
_numberOfRequestsTillNow
_currentSamplingDate
_dictationSamplingVaribles
_ad_getAlarmRequestRepresentationWithCompletionHandler:
_ad_alarmResponseForResponse:
enabled
setEnabled:
frequency
setDaysOfWeek:
setHourOfDay:
minute
setMinuteOfHour:
setLabel:
setFrequency:
setHour:
setMinute:
_ad_alarm
_ad_setAlarm:
isOverrideAlarm
setIsOverride:
bedtimeHour
setBedtimeHour:
bedtimeMinute
setBedtimeMinute:
setIsFiringNext:
_ad_internalAlarmIdentifiers
setAlarms:
alarmToCreate
setAlarm:
alarmIdentifier
setAlarmId:
modifications
alarmId
_ad_updateWithModification:
alarmIdentifiers
setAlarmIds:
includesSleepAlarms
setSleepAlarm:
setCriteria:
results
setAlarmIdentifiers:
setAlarmURLs:
addedFrequency
removedFrequency
substringFromIndex:
stringByRemovingPercentEncoding
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
defaultSynchedKnowledgeStore
_defaultStoreSpecificKeyPrefixForName:
_defaultStoreSpecificKeyForName:key:
_storeWithName:
removeValueForKey:error:
initWithMatchType:value:negated:
removeValuesMatching:completionHandler:
_storeMap
beginSyncWithAnchor:validity:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithInfo:configuration:
getChangeAfterAnchor:changeInfo:
syncDidEnd
syncSnapshotForKey:
currentSyncSnapshot
syncVerificationKeyForKey:
beginSyncForInfo:chunkHandler:
_offlineIdentifiers
setResourceValue:forKey:error:
fetchNextMetricsUsingBlock:
insertMetrics:withOfflineIdentifier:
deleteMetricsWithOfflineIdentifier:
deleteAllMetrics
contentsOfDirectoryAtPath:error:
stringByDeletingPathExtension
_updateSharedDataWithPairedPeerData:
updateSharedDataWithCloudData:fromPeer:
_resetPeerAccountSettingsWithSharedData:
_updateSharedDataFromPeers:completion:
isEqualToSet:
af_setAceTemperatureUnit:
_cloudSyncPreferenceDidChange
updateSharedDataFromCloudPeers:completion:
setSamplingInfo:
fileHandleForReadingAtPath:
addAudioSamplesOnQueue:
readDataUpToLength:error:
closeFile
setShouldStopAddingSamples:
initWithAudioDataFolders:
sendAudioDataToServer
audioDataFolders
setAudioDataFolders:
folderPath
setFolderPath:
audioFilePath
setAudioFilePath:
audioMetadataDict
setAudioMetadataDict:
sessionTracker
setSessionTracker:
setQueue:
shouldStopAddingSamples
maxChunkSize
setMaxChunkSize:
_shouldStopAddingSamples
_audioDataFolders
_folderPath
_audioFilePath
_audioMetadataDict
_sessionTracker
_dictationOptions
_maxChunkSize
timeZoneWithAbbreviation:
setTimeZone:
dateFromString:
components:fromDate:toDate:options:
initWithMachServiceName:options:
initWithServiceConnection:syncQueue:
exportedObject
_bundleClassForDomain:commandName:
_timeoutForCommand:
_removeTimerForUUID:
_providerServiceWithErrorHandler:
doCommandForServicePath:className:infoDictionary:executionInfo:reply:
_addWatchdogTimer:forUUID:
_providerServiceDelegate
clearSyncRequestWithUUID:
serviceConnectionTimedoutForSync
setSyncRequest:forUUID:
syncRequestForUUID:
_syncClassForAnchorKey:
beginSyncForServicePath:className:requestUUID:info:reply:
fetchCurrentSyncSnapshotForServicePath:className:key:completion:
_providerService
clearDomainObjectsForServicePath:className:
preheatBundleForServicePath:
runMaintenanceWorkForServicePath:className:completion:
reloadServiceBundleAtPath:
_stopTimersWithContinuation
initWithIdentifier:path:commandMap:anchorMap:clearingClass:maintenanceClass:queue:
sendClientBoundCommand:domain:executionContext:reply:
sendBeginSyncWithInfo:chunkHandler:completion:
sendFetchSyncSnapshotForInfo:completion:
sendClearDomainObjects
preheatServiceBundle
runMaintenanceWorkWithCompletion:
_getLockStateWithReply:
_getCarDNDModeWithReply:
_getStarkModeWithReply:
_handleCommand:executionInfo:completion:
_getTimeoutSuspendedWithReply:
_targetQueue
_syncQueue
_serviceLoaded
_stats
_anchorKeyClassMap
_domainObjectClearingClassName
_maintenanceClassName
_preheated
_watchdogTimersByUUID
_suspendedWatchdogTimerUUIDs
syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:
openURL:reply:
getLockStateWithReply:
getCarDNDModeWithReply:
getStarkModeWithReply:
handleCommand:executionInfo:completion:
getTimeoutSuspendedWithReply:
assistantServiceWillCrashForStuckSyncPluginAtPath:
fetchContextsForKeys:forRequestID:includesNearbyDevices:completion:
_serviceConnection
_syncRequestsByUUID
hashedRouteUID
_cachedKeychainStringForKey:
_keychainCache
_setKeychainValue:forKey:completion:
_keychainStringForKey:
accountInfoForIdentifier:
setAccountInfo:forIdentifier:
activeAccountIdentifier
serverTimeoutInterval
serverOverride
lastSyncVerificationDate
setLastSyncVerificationDate:
setLastMetricsUploadDate:
multiUserVoiceIdentification
deviceWasRedirectedToProduction
multiUserSharedDataServerChangeToken
setMultiUserSharedDataServerChangeToken:
hasSetUpMultiUserSharedRecordZoneSubscription
setHasSetupMultiUserSharedRecordZoneSubscription:
multiUserIsOnboardingDevice
multiUserSyncerSADAnchor
setMultiUserSyncerSADAnchor:
multiUserSyncerIdentifiersAnchor
setMultiUserSyncerIdentifiersAnchor:
multiUserSyncerBackupIdentifiersAnchor
setMultiUserSyncerBackupIdentifiersAnchor:
isMultiUserSyncerMeDevice
setIsMultiUserSyncerMeDevice:
setMultiUserHomeUUIDsForDeletion:
removeMultiUserHomeUUID:
multiUserHomeUUIDsForDeletion
setSharedUserIdentifier:loggingSharedUserIdentifier:
setCompanionIdentifier:
lastCompanionRemoteDataFetchDate
setLastCompanionRemoteDataFetchDate:
proxyConnectionDisabled
overrideAudioSessionActiveDelay
serverAudioSessionActivationDelay
serverMediaPlaybackVolumeThresholdForAudioSessionActivationDelay
serverAudioSessionActivationDelayAboveMediaPlaybackVolumeThreshold
dictationLanguageDetectorEnabled
setSingleUserCompanionACEHost:
multiUserSetupStartTimes
setMultiUserSetUpStartTimes:
multiUserSetupCompleteTimes
setMultiUserSetUpCompleteTimes:
myriadDeviceVTEndTimeDistanceThreshold
_needToPostLanguageNotification
_needToPostOutputLanguageNotification
_redirects
insertedOrUpdatedItems
deletedItemUUIDs
initWithGeneration:date:insertedOrUpdatedItems:deletedItemUUIDs:
_insertedOrUpdatedItems
_deletedItemUUIDs
setInsertedOrUpdatedItems:
setDeletedItemUUIDs:
hasFailureType
initWithDeliveryStream:
setPayloadSize:
markStartTime
markEndTime
markSucceeded
markFailedWithType:
batchIdentifier
deliveryStream
serverEnvironment
setServerEnvironment:
processedCount
setProcessedCount:
outstandingCount
setOutstandingCount:
scheduledActivity
setScheduledActivity:
payloadSize
_succeeded
_failureType
_hasPayloadSize
_scheduledActivity
_batchIdentifier
_deliveryStream
_serverEnvironment
_processedCount
_outstandingCount
_payloadSize
serializedCommand
ad_preferredMessagingOption
ad_recipientDevicesType
singleUserMeCard
aceObjectWithPlistData:
setSingleUserMeCard:
storeMeCard:
removeMeCardObserver:
_ownerMeCard
ad_siriTaskHandlerAceTranslationFailureError
_setRefId:
requestCommandAceType
_commandType
_requestTransformer
_responseTransformer
_requestHandler
ad_siriTaskHandlerErrorWithCode:
shouldBeHandledByAssistantd
handleWithCompletion:
notificationType
_soundID
disableAssistantWhilePasscodeLocked
logEnabledState:
currentNotificationSettingsCenter
notificationSystemSettings
announcementSetting
initWithEffectiveBundle:
logPeriodicUsageIfNeeded
runMaintenanceWithCompletion:
_metrics_isSystemIdle
_metrics_isAssistantOrDictationEnabled
rawRecognition
aceMetrics
_reallyCommitOrSaveMetrics:
_metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:deliveryStreamContinuations:scheduledActivity:completion:
_metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:
_sendMetrics:requiresActiveSession:batch:completion:
_metrics_processEventRecordsFromStore:batch:deliveryStream:eventStreamUID:afterTimestamp:untilLimit:uploadRecords:completion:
setEventTransmittedRelativeToBootTimeTimestampNs:
setEventTransmittedTimestampRefId:
_metrics_publishDailyDeviceStatus:completion:
buildDailyDeviceStatusHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:activeAppleAudioDevices:spokenNotificationsEnabled:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:preciseLocationEnabled:withCompletion:
setCategory:
initWithUnsignedLong:
aa_primaryAppleAccount
aa_personID
setEventInformation:
setPayloadVersion:
setInstrumentationBatch:
setOriginalCommandId:
setEnrolledUsers:
setMultiUserState:
fetchEnrolledUsersWithCompletion:
setPersonalDomainsSetup:
sharedStatusController
statusType
setAppleMusicSubscriber:
setPersonalization:
getSubscriptionStatusWithCompletionHandler:
setProductIdentifier:
setVendorIdentifier:
setCarPlayActiveWithin24Hours:
setAudioDevicesActiveWithin24Hours:
setHardwareButtonEnabled:
setHeySiriEnabled:
setAssistantOnLockscreen:
setRaiseToSpeakEnabled:
setSpokenNotificationsEnabled:
setHasHomekitHome:
getSiriDataSharingOptInStatus
setTypeToSiriEnabled:
setIsPreciseLocationEnabled:
setVoiceFeedback:
fetchVoiceTriggerHeartBeatMetrics
setImplicitUtterances:
setExplicitUtterances:
setFirstPassTriggers:
setVoiceTrigger:
setSiriSpeechID:
setClientDeviceSamplingTimestampMs:
setDeviceOs:
setDeviceBuild:
setEnabledStatus:
setActiveStatus:
setSpokenNotificationsproxCardSeen:
setSpokenNotificationsControlCenterModuleEnabled:
setSpokenNotificationsWhitelistSettings:
setAggregatedMetrics:
setSiriLinkedSpeechID:
fetchAppleMusicSubscriptionForSharedUser:completion:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
fetchICUserIdentityForSharedUser:completion:
ic_sharedAccountStore
ic_DSID
specificAccountWithDSID:
ic_storeAccountForHomeUserIdentifier:completion:
_metrics_recordUIMetrics:
interpretationIndices
removeSpaceBefore
removeSpaceAfter
wasInitalizedFromDictionaryRepresentation
_updateAutoDownloadedVoiceAssetsForOutputVoice
setAutoDownloadedVoiceAssets:
sendMessage:toDeviceWithIdentifier:completion:
sendMessage:completion:
_messagingService
_af_analyticsContextDescription
_ad_finalMetricsContextWithResponse:error:
appIdentifier
_handleGenericIntentRequest:deliveryHandler:completionHandler:
_recordImmediateNotificationInteractionAfterRecommendation:forSpeakable:
_processEnqueuedSpeakables
speakableDate
_remoteOSMService
recordNotificationUsageForSpeakableId:withStartDate:withEndDate:withCompletion:
removeObjectAtIndex:
_finishRunningCurrentSpeakableWithResult:error:
_withAllModelsExecute:
speakableDescription
recordFeedbackOfType:forSpeakableId:
_loadModelWithType:completion:
createModelWithType:completion:
_resetConnectionToOSMService
_connectionToOSMService
recordRecommendedAction:forSpeakableId:withModelIdentifier:
sharedModule
requestsToSpeak:withHandler:
recordSpokenRequestCancelledForSpeakable:
recordSpokenRequestCompletedForSpeakable:
_cleanUpAllModels
stateManager
_modelLoadingGroup
_currentSpeakable
_queuedSpeakables
_handlersBySpeakableID
_executionModelIdentifier
_executionModelType
_modelMap
_typeMap
_modelLoading
snapshot
initWithSnapshot:
setSnapshot:
_handleCommandInAMOS:completion:
_sendAMOSCommand:domain:toBundleWithIdentifier:completion:
_amosSADomainObjectCreate:completion:
_handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:
identifiers
setIdentifiers:
_sendAMOSCommandToService:responseHandler:
_amosSADomainObjectRetrieve:completion:
setFields
addFields
removeFields
updateUsingSet:add:remove:
_updateObjectFromService:sadIdentifier:completion:
_amosSADomainObjectUpdate:completion:
_amosSADomainObjectCancel:completion:
isAMOSIdentifier
_amosSADomainObjectDelete:completion:
_amosSADomainObjectCommit:completion:
_amosSADomainObjectPunchOut:completion:
saHomeMemberInfo:
_loadCloudSyncedUsersFromCache
_isLanguageMultiUserCompatible
_refreshUsersAndVoiceProfiles:
resetAllUsers
_primaryUserSharedUserIdentifierDidChangeNotification:
_languageCodeDidChange
_setupMultiUserListener
refreshHomeKitOnboardedUsers
getConformingSharedUserIdForHomeUserId:completion:
getFirstNameForSharedUserId:completion:
getConformingSharedUserIds:
_multiUserListenerShouldAcceptNewConnection:
sharedUserID
loggableSharedUserID
_resetPrimaryUser
_forceCloudSyncedUserDownload:
_updateHomeKitSettings:personalDomainSettingsChanged:
nonCloudSyncedUser
removeUserWithHomeUUID:completion:
isSATEnrolledForSiriProfileId:forLanguageCode:
_trackHomeUserUUIDForInFlightVoiceProfile:
_untrackAllHomeUserUUIDsForInFlightVoiceProfile
_updateSAMultiUserInfo
_saveSharedUsers
provisionedVoiceProfilesForLocale:
appDomain
sharedSiriId
pitch
homeUserUUID
_untrackHomeUserUUIDForInFlightVoiceProfile:
arrayWithArray:
minusSet:
removeUserWithSharedUserID:completion:
homeId
userName
addUser:sharedUserId:loggableSharedUserId:enrollmentName:isPrimary:nonCloudSyncedUser:completion:
multiUserPrimaryUser
initWithDictionary:attribute:
multiUserSharedUsers
discardSiriEnrollmentForProfileId:forLanguageCode:
setMultiUserPrimaryUser:
setMultiUserSharedUsers:
_inFlightVoiceProfilesByUUID
companionAssistantID
voiceIDAllowedByUser
lastVisitedAceHost
setMultiUserPitchComposition:
homeMemberSettings
setHomeMembers:
setVoiceProfilesAreInFlight:
unauthenticatedRequestsAllowed
setUnauthenticatedRequestsAllowed:
setVoiceIDAllowedByUser:
_addUser:sharedUserId:loggableSharedUserId:enrollmentName:isPrimary:nonCloudSyncedUser:completion:
_allowVoiceIdentificationForThisUser:completion:
_profileLimitReached
reportIssueForError:type:context:processIdentifier:walkboutStatus:triggerForIDSIdentifiers:
setEnrollmentName:
setSharedUserID:
init:sharedUserId:loggableSharedUserId:attribute:
setNonCloudSyncedUserAttribute:
_logRelevantAnalyticsOnUserAddedWithSharedUserID:isPrimary:
shareOwnerName
_removeUser:homeUserID:sharedUserID:error:
_postRemovalStateCleanup
_updateVoiceProfileInfo
userProperties
saRemoteDeviceForHomeMember:
companionIDSIdentifier
sharedUserId
_resetAllUsers
setCompanionAssistantID:
setCompanionSpeechID:
setCompanionIDSIdentifier:
setProductPrefix:
setShareOwnerName:
testAndSetLoggingIsAllowed:
setSettings:
loggableMusicSyncSharedUserID
meCard
_confidenceScoreForSharedUserID:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:confidenceScores:
uppercaseString
caseInsensitiveCompare:
_deleteShareForUser:
addUser:sharedUserId:loggableSharedUserId:enrollmentName:isPrimary:completion:
removeUserWithShareOwnerNames:completion:
showMultiUsersWithCompletion:
updateVoiceProfiles
triggerMultiUserMetricsWithCompletion:
setEnrollmentName:forHomeUser:
setShareOwnerName:homeMemberSettings:loggingAllowed:forSharedUserId:
getSharedUserIdForShareOwnerName:
getSyncableSharedUserIdForSharedUserId:
getIDSIdentifierForAssistantId:completion:
currentOwnerSharedUserID
confidenceScoresForMultiUserTestingExpectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:
sharedUsersBySharedUserID
setSharedUsersBySharedUserID:
primaryUser
setPrimaryUser:
_saUnknownUser
_sharedUsersByHomeUserUUID
_pitchesForHomeMembers
_multiUserInfo
_multiUserListener
_liveOnToken
_primaryUserIsFromLiveOnApp
_usersWithAvailableVoiceProfiles
_currentLanguage
_lastProfilesDownloadAttemptTime
_outOfSyncDownloadAttemptCount
_sharedUsersBySharedUserID
_primaryUser
_rawScores
multiUserStateSnapshot
confidenceScores
vtSatScore
confidenceScore
numberWithUnsignedLong:
contactHandlesForPerson:
unregisterChangeHistory
initWithIdentifier:name:RSSI:state:
RSSI
index
setIndex:
_RSSI
_index
_retrieveConnectedDevicesInfoWithCompletion:
_adCoreBluetoothDeviceForPeripheral:RSSI:
cancelPeripheralConnection:
initWithDelegate:queue:options:
_getPeripheralStateDescriptionFromState:
connectPeripheral:options:
retrieveConnectedPeripheralsWithServices:allowAll:
_connectToPeripherals:
readRSSI
_didReadRSSI:forPeripheral:
centralManagerDidUpdateState:
centralManager:willRestoreState:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
centralManager:didConnectPeripheral:
centralManager:didFailToConnectPeripheral:error:
centralManager:didDisconnectPeripheral:error:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didUpdateANCSAuthorizationForPeripheral:
peripheralDidUpdateName:
peripheral:didModifyServices:
peripheralDidUpdateRSSI:error:
peripheral:didReadRSSI:error:
peripheral:didDiscoverServices:
peripheral:didDiscoverIncludedServicesForService:error:
peripheral:didDiscoverCharacteristicsForService:error:
peripheral:didUpdateValueForCharacteristic:error:
peripheral:didWriteValueForCharacteristic:error:
peripheral:didUpdateNotificationStateForCharacteristic:error:
peripheral:didDiscoverDescriptorsForCharacteristic:error:
peripheral:didUpdateValueForDescriptor:error:
peripheral:didWriteValueForDescriptor:error:
peripheralIsReadyToSendWriteWithoutResponse:
peripheral:didOpenL2CAPChannel:error:
_cbManager
_invalidated
_peripheralsPendingRSSI
_peripheralsWithRSSIRead
_completionWrapper
_counter
_registerCommandHandlersWithRegistry:
valueWithPointer:
pointerValue
_selectorForCommandClass:andDomain:
_unhandledCommand:forDomain:completion:
_registerCommandClass:forDomain:withSelector:forRegistry:
_commandRegistry
sessionHandoffData
link
setShouldBackgroundDefaultAction:
localizations
preferredLocalizationsFromArray:forPreferences:
localizedStringForKey:value:table:
setTitle:
setBody:
requestWithActivityInfo:
_handoffNotificationID
_remoteRequestInfo
_ad_handleStopwatchRequestWithCompletionHandler:
getDebugVoiceIdScores
getClassifiedUser
getUserIdentityClassification
_scoresBySharedID
keysSortedByValueUsingComparator:
_ad_handleAlarmRequestWithCompletionHandler:
alarm
createResponse
setAlarmIdentifier:
alarms
alarmURLs
initWithInterfaceName:rttCurrent:rttSmoothed:rttVariance:rttBest:packetsSent:bytesSent:bytesRetransmitted:bytesUnacked:packetsReceived:bytesReceived:duplicateBytesReceived:outOfOrderBytesReceived:sendBandwidth:synRetransmits:tfoSynDataAcked:
_startRequest:options:preparationHandler:executionHandler:finalizationHandler:
_prewarmRequest:completion:
startRequest:options:preparationHandler:executionHandler:finalizationHandler:
_stopRequest:immediately:
_stopAllRequests:completion:
_stopAllRequestsSynchronously
_handlePreparationForSession:
_handleExecutionForSession:
_handleFinalizationForSession:error:
audioPlaybackService:willStartRequest:
_enumerateListenersUsingBlock:
audioPlaybackService:didStartRequest:
audioPlaybackService:didStopRequest:error:
_setAudioSessionID:
_evictAllReusableSessionsForReason:
memoryPressureObserver:didChangeFromCondition:toCondition:
stopAllRequestsSynchronously
removeAllListeners
requestLifecycleObserverRequestWillBegin:origin:client:
requestLifecycleObserverRequestDidEnd:origin:client:
_activeSessionsByRequest
_reusableSessionsByRequest
_ADPBLocationRequestType
_appPunchOutHandler:forDomain:completion:
wakeSystemForReason:
punchOutUri
insertObject:atIndex:
savedCustomVocabularyOverviewDictionary
_processAndEvaluateSnapshot:
getSnapshotWithCompletion:
lastPlayedAnnouncement
_setSnapshot:
setLastPlayedAnnouncement:
homeAnnouncementObserver:stateDidUpdateFrom:to:
homeAnnouncementObserver:snapshotDidUpdateFrom:to:
unregisterSnapshotUpdater
_snapshot
_snapshotUpdater
_expirationDuration
finishedDate
startedDate
_setLastMyriadWin:
_syncLastWinWithStereoPartner
_setLastTimeStereoPartnerWon:
_handleRequest:fromDeviceWithIdentifier:completion:
_handleLastWinRequest:completion:
setMyriadDecisionResult:
lastMyriadWinForStereoPartner:
_setStereoPartnerIdentifier:
_lastTimeWon
_lastTimeStereoPartnerWon
_stereoPartnerIdentifier
setSharedUserIdentifier:
setLoggingSharedUserIdentifier:
locallyPairedPeerInfo
productType
buildVersion
productTypePrefix
setSessionType:
_setSessionId:
_homeInfoDidChange:
_multiUsersDidChange:
releaseDormancySuspendAssertion:
_networkManager
releaseWiFiAssertion
cancelSynchronously:onQueue:completion:
_retryManager
nakedObjectsToRetry
sendCommands:opportunistically:
peerHostname
redirectForServerURLString:
URLWithString:
_startConnectionPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:forceReconnect:
logConnectionStart
acquireDormancySuspendAssertion:
_connectionURL
setPeerType:
setPeerVersion:
setPeerProviderClass:
setProductTypePrefix:
setDeviceIsInWalkaboutExperimentGroup:
setSiriConnectionUsesPeerManagedSync:
setUsesProxyConnection:
setUrl:
assistantIdentifier
setAssistantIdentifier:
peerAssistantIdentifier
setPeerAssistantIdentifier:
setSendPings:
_resetServerConnectionSynchronously:completion:
getConnectionMetricsSynchronously:completion:
_setCurrentConnectionType:
_currentConnectionType
isWWAN
_serverConnection
_recheckForWiFiTransition
networkActivityStop:withReason:
_clearSendBuffer
clearNakedObjects
_informDelegateOfError:
_requestForAssistantData
host
startMonitoringNetworkForHost:
aceHost
setAceHost:
connectionPolicy
connectionPolicyDate
connectionPolicyHostname
needsDestruction
_resetConnectionPolicyBlacklisting
timeToLive
doubleValue
timeIntervalSinceNow
connectionPolicyFirstFailureDate
timeIntervalSinceDate:
hasConnectionPolicyFailed
setConnectionPolicy:
setImposePolicyBan:
setTimeout:
setPrefersWWAN:
setSkipPeer:
setSkipPeerError:
setUseWiFiHint:
setForceReconnect:
_authenticationDisabled
_cachedValidationData
_cachedServerCertificate
_authenticator
_setCachedServerCertificate:
_eagerAuthDidComplete
prepareWithCertificateData:completion:
canUseWiFiDirectly
acquireWiFiAssertion:
_generateAWDMetricsForWillStartConnection:
diagnosticConnectionType
logConnectionOpenWithConnectionType:
policyId
isEdge
_adjustAceHeaderTimeout:
_connectionOpened
_generateAWDMetricsForOpenedConnection:type:
technology
_handleAceObject:
_siriConnection:didEncounterError:analysisInfo:
_clearLimbo
_resetServerConnection
predefinedServer
_connectionErrorIsTimeout:
_generateAnalyticsContextWithError:
connectionType
connectionURL
interfaceIndex
sendBufferSize
wwanPreferred
aggregatorConnectionType
_generateAWDMetricsForConnectionError:
_connectionErrorSuggestsConnectionPolicyReset:
setConnectionPolicyDate:
setConnectionPolicyHostname:
save
_updateConnectionPolicyFailureCount:
_connectionErrorIsRedirect:
setRedirect:forServerURLString:
ad_isRetryableConnectionError
ad_isStricterRetryableConnectionError
_shouldRetry
_retryForFailedConnection:withType:onError:
connectionPolicyFailureCount
setConnectionPolicyFirstFailureDate:
ad_isNetworkDownError
setConnectionPolicyFailureCount:
retryRequestId
latestMappedRequestId
setLatestMappedRequestId:
objectsToRetry
setNeedsToRetryNakedObjects
shouldRetryOnConnectionFailure
ad_isRetryableSessionError
ad_isAssistantNotReadyError
_informDelegateCannotHandleRequest:error:
authenticationAvailable
useDeviceAuthenticationVersion
initWithTargetQueue:authenticationStrategyVersion:
validationVersion
unsignedIntegerValue
authenticationStrategyVersion
serverCertificateData
_versionForCachedValidationDataMatchesCurrentVersion
setServerCertificateData:
setValidationVersion:
validationExpiration
validationData
setValidationData:
setValidationExpiration:
_persistValidationData:withExpiration:
initWithTimeIntervalSinceNow:
setValidationDataSync:
_reallyRetryPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:causedByError:forceReconnect:useSecondary:
_informDelegateWillRetryOnError:
_sendBuffer
_setSessionOpened
siriCore_isProvisional
prefersWWAN
ad_requiresDampedRetry:
_retryWithParameters:skipPeer:skipPeerError:causedByError:useSecondary:
logEventWithType:context:contextNoCopy:
_createAssistant
_sendLoadAssistantWithAccount:validationData:
lastAssistantDataAnchor
_sendSetRemoteDevicesWithAccount:
_sendMultiUserInfo
_sendDestroyAssistant
_sendAssistantDataAndPendingCommandsIfNeeded:
_continueAuthentication
_authenticationFailed
_sendGetSessionCertificateData
_continueAuthWithCertificateData:
requestData
_sendCreateSessionInfoRequestWithData:
_authDataToSign
signedDataForData:
sessionInfoDuration
_setCachedValidationData:withDuration:
_pendingCommands
_continueSessionInitWithValidationData:
_startConnection
dormant
_startSession
setLastReceivedCommand:
_saGetSessionCertificateResponse:
_saCreateSessionInfoResponse:
_saSessionValidationFailed:
_saAssistantCreated:
_saAssistantLoaded:
_saAssistantDestroyed:
_saAssistantNotFound:
_saAssistantNotReady:
_saSetConnectionHeader:
_saGetAssistantData:
_saCommandFailed:
_passObjectToDelegate:
errorCode
ad_shouldRetry
certificate
sessionInfo
validityDuration
setSessionInfo:duration:
version
_setAssistantDataAnchorIfNeeded:
activeAccount
clearAssistantData
aceHostHeader
reconnectNow
ad_error
_assistantFailedForReason:error:
_refIdIsLimboId:
_removeLimboId:
appendSessionObjectToRequest:
siriCore_invokeThunk
_sendServerCommandLogErrorForCommand:withContext:
siriCore_logDiagnostics
sendCommands:errorHandler:
setDeviceAuthVersion:
_sendServerCommand:
setSessionInfoRequest:
reportIssueForType:subType:context:processIdentifier:walkboutStatus:
connectionMode
loggingAssistantIdentifier
speechIdentifier
_triggerABCForEmptyLocale
setSessionValidationData:
setLoggableAssistantId:
setSharedUserId:
setLoggableSharedUserId:
setLanguage:
_saConnectionType
singleUserCompanionACEHost
setLastKnownAceHostOfCompanion:
setLinkedAssistantId:
peerSpeechIdentifier
setLinkedSpeechId:
shouldLogForQA
logLoadAssistant
homeMembers
attributes
companionAssistantId
peerUserAgentString
peerLanguageCode
peerSiriEnabled
setPersonalDomainsEnabled:
setPersonalDomainsAuthenticationMode:
language
companionIdentifier
setRemoteDeviceHasNoAssistantId:
setRemoteDeviceUnreachable:
saRemoteDevice:
setBrandName:
sharedRemoteDevices
setRemoteDevices:
_sendSetRemoteDevicesWithAccount:multiUserInfo:
multiUserSAObject
barrierResultReturnedWithSuccess:
initWithThunk:barrier:
_connectionIsWWAN
forceFastDormancy
setLoggingAssistantIdentifier:
setSpeechIdentifier:
setTLSSessionTicketsFlushPending:
logCreateAssistant
probeConnection
cellularInstant
cellularHistorical
wifiInstant
wifiHistorical
getQualityReport:
setSymptomsBasedNetworkQuality:
_getReportSymptomsBasedNetworkQualityMetrics:
networkManagerNonWWANDidBecomeAvailable:
networkManagerLostNonWWANConnectivity:
networkManagerNetworkUnreachable:
siriConnection:willStartWithConnectionType:
siriConnection:didOpenWithConnectionType:routeId:delay:method:
siriConnection:didReceiveAceObject:
siriConnectionDidClose:
siriConnection:didEncounterError:analysisInfo:
siriConnection:didEncounterIntermediateError:
siriConnection:willStartConnectionWithHTTPHeaderFields:
setCoreSiriConnection:
_sendServerCommands:
_forceFastDormancy
_releaseDormancySuspension
_probeSessionIfIdle
_generateAWDTransportMetrics:moreComing:transportRecord:
assistantDataManagerSiriServerLoggingSettingDidChange
_currentConnectionURL
_cachedValidationDataExpiration
_usingCachedCertificateData
_usingCachedValidationData
_forceValidationRefresh
_checkForWiFiTransitionOnRequestEnd
_prefersWWAN
_skipPeer
_skipPeerError
_forceReconnect
_hasCachedAuthDisabled
_cachedAuthDisabled
_peerType
_peerVersion
_productTypePrefix
_siriConnectionUsesPeerManagedSync
_useWiFiHint
_aceHeaderTimeout
_dormancySuspendAssertion
_isAttemptingRetry
_waitingForDelayedRetry
_requestStartTime
_requestEndTime
_lastRetryTimeOnQueue
_loadRetryStartTime
_sessionInitCommandId
_createSessionInfoRequestId
_badCachedCertRetryCounter
_certificateFailureCounter
_metricsCache
_pairedWatchUniqueId
_metricsGroup
_isRequestRetry
initWithAttribute:
enrollmentName
setCompanionAssistantId:
companionSpeechID
setCompanionSpeechId:
saCopy:
setAttributes:
speechID
loggableCompanionAssistantID
setLoggableCompanionAssistantId:
loggableMultiUserSharedUserID
setLoggableMultiUserSharedUserId:
setLastVisitedAceHost:
homeMemberSettingsWithDictionary:context:
setHomeMemberSettings:
productPrefix
addAttribute:
setLoggableMultiUserSharedUserID:
setLoggableMusicSyncSharedUserID:
setLoggableCompanionAssistantID:
loggingIsAllowed
_unauthenticatedRequestsAllowed
_voiceIDAllowedByUser
_nonCloudSyncedUser
_loggingIsAllowed
_homeUserUUID
_sharedUserID
_loggableSharedUserID
_loggableMultiUserSharedUserID
_loggableMusicSyncSharedUserID
_loggableCompanionAssistantID
_companionAssistantID
_companionSpeechID
_enrollmentName
_attributes
_companionIDSIdentifier
_speechID
_productPrefix
_aceHost
_shareOwnerName
_settings
getTimerSnapshotWithCompletion:
clockTimerObserver:timerDidFire:
clockTimerObserver:timerDidDismiss:
clockTimerObserver:snapshotDidUpdateFrom:to:
_handleNewConnection:
_xpcListener
_speechLogDecodingError
reverseObjectEnumerator
removeLastObject
setSpeechWasRecognized
startPlaybackWithURL:narrowBand:dictation:completion:
_playbackSource
addTcpInfoMetrics:
setPrimarySubflowIface:
setConnectionMethodName:
setConnectionEdgeIDName:
setConnectionEdgeType:
tcpInfoMetricsCount
clearTcpInfoMetrics
tcpInfoMetricsAtIndex:
tcpInfoMetricsType
setOpenInterval:
setHasOpenInterval:
hasOpenInterval
setFirstByteReadInterval:
setHasFirstByteReadInterval:
hasFirstByteReadInterval
setAttemptCount:
setHasAttemptCount:
hasAttemptCount
setMetricsCount:
setHasMetricsCount:
hasMetricsCount
setPingMean:
setHasPingMean:
hasPingMean
setPingCount:
setHasPingCount:
hasPingCount
setUnacknowledgedPingCount:
setHasUnacknowledgedPingCount:
hasUnacknowledgedPingCount
setSubflowCount:
setHasSubflowCount:
hasSubflowCount
setConnectedSubflowCount:
setHasConnectedSubflowCount:
hasConnectedSubflowCount
hasPrimarySubflowIface
setPrimarySubflowSwitchCount:
setHasPrimarySubflowSwitchCount:
hasPrimarySubflowSwitchCount
hasConnectionMethodName
hasConnectionEdgeIDName
hasConnectionEdgeType
setConnectionFallbackReason:
setHasConnectionFallbackReason:
hasConnectionFallbackReason
setTuscanyConnectionDelay:
setHasTuscanyConnectionDelay:
hasTuscanyConnectionDelay
openInterval
firstByteReadInterval
attemptCount
metricsCount
pingMean
pingCount
unacknowledgedPingCount
subflowCount
connectedSubflowCount
primarySubflowIface
primarySubflowSwitchCount
connectionMethodName
connectionEdgeIDName
connectionEdgeType
connectionFallbackReason
tuscanyConnectionDelay
tcpInfoMetrics
setTcpInfoMetrics:
_firstByteReadInterval
_openInterval
_pingMean
_tuscanyConnectionDelay
_attemptCount
_connectedSubflowCount
_connectionEdgeIDName
_connectionEdgeType
_connectionFallbackReason
_connectionMethodName
_metricsCount
_pingCount
_primarySubflowIface
_primarySubflowSwitchCount
_subflowCount
_tcpInfoMetrics
_unacknowledgedPingCount
_isValidRestrictionsDomainInfo:
_parseInfoDictionary:
_informCommandCenter:willPerformLaunchApp:
_domains
_syncKeys
_clearsDomainObjectsClassName
_lockRestrictedCommands
_connectionNeedsContextCleared
_fetchSyncFlagsOnDisk
_setSyncNeededFlagsForKeys:
_clearSyncNeededFlagsForKeys:
fetchKeysThatNeedToSync:
setSyncNeededFlagForKeys:
clearFlagsForKeys:
clearAllFlags
_cachedFlags
setItemsByID:
preferredPullingModeForDeviceWithIdentifier:fromGeneration:toGeneration:
getGenerationForDeviceWithIdentifier:completion:
applyIncrementalChanges:fromDeviceWithIdentifier:
applySnapshot:fromDeviceWithIdentifier:
_ad_handleShowNextEventRequestWithCompletionHandler:
handleSiriRequest:deliveryHandler:completionHandler:
isMessagesOnSiriKitNative
_createSiriKitNativeAnnounceMessageRequestFromNotification:appId:
_createClientFlowAnnounceMessageRequestFromNotification:appID:
_createAnnounceInHomeRequestFromBundleID:announcementIdentifier:notificationType:
_initWithShowUIDuringListening:playAlertBeforeListening:
setRequestCompletionOptions:
setNotificationID:
setOutputVoiceLanguageCode:
setCode:
announceMessagesRequestFromNotificationIdentifier:fromApp:
announceHomeAnnouncementRequestFromApp:withAnnouncementIdentifier:withUserNotificationType:
initWithEnvironmentName:namedDelegatePort:queue:
_setEnabledTopics:
topic
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
_hmConnection
sendSiriCommand:completionHandler:
_remoteExecute_shouldSendCommandToPrimaryUser:
_remoteExecute_primaryUserDevicesWithTypes:
_remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:executionContext:completion:
_remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:executionContext:completion:
remoteDevice
setRemoteDevice:
requiresResponseFromRemote
setResponseFromRemote:
_remoteExecute_remoteDeviceExecuteSerializedCommand:onSpecifiedDeviceTypes:preferredMessagingOption:executionContext:completion:
filterUsingPredicate:
_startRemoteRequest:onPeer:completion:
siriCore_serializedAceDataError:
_thunkBlock
_barrierBlock
_barrierQueue
stringByAppendingFormat:
usesManagedStorageForDomain:
fetchSyncSnapshotForInfo:handler:
managedStorageDomains
setManagedStorageDomains:
setFirstUnlockRestrictedCommands:
setControlCenterLockRestrictedCommands:
_managedStorageDomains
_firstUnlockRestrictedCommands
_controlCenterLockRestrictedCommands
_linkStoreForSysdiagnose
_unlinkStoreForSysdiagnose
_stopHouseKeepingTimer
_addConnection:
_signalConnectionDisruption:
_removeConnection:
_store
_suspendEventsStaging
_resumeEventsStaging
lastMetricsUploadDate
lastMetricsUploadFailureReportedOnDate
setLastMetricsUploadFailureReportedOnDate:
predicateWithBlock:
filteredArrayUsingPredicate:
didObserveEvents:completion:
_beginEventsGrouping
_endEventsGrouping
_beginEventsFuzzingWithStartTime:
_endEventsFuzzingWithEndTime:
_executeDelegateBlockOnAllConnections:completion:
shouldHandleDeliveryStream:
deliverWrappedEvents:
flushStagedEventsWithReply:
_stopObservingConnectionDisrupted:referenceId:
_observeConnectionDisrupted:observer:referenceId:
_enumerateConnectionsAsServiceDelegates:completion:
_startHouseKeepingTimer
unionSet:
_unstageEvents
contextDataType
contextData
shouldDeliverEvent:
deliverEvent:eventStreamId:
_houseKeeperArrived
_processStagedEvents
createSymbolicLinkAtPath:withDestinationPath:error:
observeWithCompletion:
stageEvent:
stageEvents:
currentEventStreamUID
suspendEventsStaging
resumeEventsStaging
beginEventsFuzzingWithStartTime:
endEventsFuzzingWithEndTime:
boostAllConnections:
storeGenericInstrumentation:completion:
_houseKeepingTimer
_stagedEvents
_connections
_depthOfEventsGrouping
_instrumentationResolver
_observationCompletion
_observerConnection
_isSuspended
_isFuzzing
_isBoostingEventProducers
_currentFuzzingInterval
_fuzzingIntervals
_connectionDisruptedObservers
initWithBundleIdentifier:
setWantsNotificationResponsesDelivered
_isMonitoringUnlockActivity
_startMonitoringUnlockActivity
trigger
requestWithIdentifier:content:trigger:
addNotificationRequest:withCompletionHandler:
removeDeliveredNotificationsWithIdentifiers:
_clearNotificationWithIdentifier:
configurationForDefaultMainDisplayMonitor
setNeedsUserInteractivePriority:
elements
_snoozeNotifications
setTransitionHandler:
monitorWithConfiguration:
_stopMonitoringUnlockActivity
remoteObjectProxyWithErrorHandler:
notification
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
postNotificationRequest:options:responseHandler:
_notificationCenter
_responseHandlersByNotificationID
_connection
_notificationsToBeSnoozed
_layoutMonitor
rangeOfString:options:
_setContext:forPID:
initWithCollector:pid:connection:
sendContext:
_pid
_collector
_getContextForAppInfo:completion:
_invokeAllCompletionsWithError
_invokeCompletionWithContext:forPID:
_addCompletion:forPID:
getContextForAppInfos:completion:
_hasCompletionForPID:
_completionsByPID
_ad_handleAceDomainSignalRequestWithCompletionHandler:
_ad_preheatableServiceDomainForDomainSignalRequest
_ad_handleAceDomainSignalRequest:completionHandler:
_ad_preheatableDomain
appIdHints
_ad_likelyApplicationBundleIdentifiers
_ad_recordPreheatLaunchOf:
movieRestriction
tvRestriction
appRestriction
initWithOptions:capacity:
sharedStore
meCard:
addMeCardObserver:
_updateVoice:
_updateRestrictions:
_updateVoiceOverStatus:
_updateItunesStoreIdentifier:
sharedConfiguration
_onMainThreadUpdateCountryCodeWithCountryConfiguration:completion:
_generateAssistantData
_fetchSiriServerLoggingSetting:
_locationRestrictionDidChange:
_currentLocaleDidChange:
_systemTimeZoneDidChange:
_outputVoiceDidChange:
_voiceAssetsUpdated:
_censorSpeechDidChange:
_storeFrontDidChange:
_countryCodeDidChange:
addiTunesObserver
removeiTunesObserver
_notifyObserversOfSAD:
_notifyObserversOfSiriServerLoggingStatus
ams_sharedAccountStore
resetSystemTimeZone
currentLocale
systemTimeZone
setTimeZoneId:
localeIdentifier
_cachedRestrictions
setParentalRestrictions:
setCensorSpeech:
setAllowUserGeneratedContent:
setMediaPlayerExplicitContentDisallowed:
setMediaContentRatingRestrictions:
displayScale
setUiScale:
setTtsVoice:
setMeCards:
setDeviceColor:
setDeviceEnclosure:
setInRetailStoreDemoMode:
preferredLanguages
setFullStorefrontId:
setDebugFlags:
setDeviceCapabilities:
af_aceTemperatureUnit
setVoiceOver:
manualEndpointingThreshold
setHoldToTalkThresholdInMilliseconds:
setUserInterfaceIdiom:
objectsForKeys:notFoundMarker:
_redactedCopyMeCards:
setAnchor:
assistantDataManager:didUpdateAssistantData:meCards:unredactedAnchor:
assistantDataManager:didUpdateAssistantData:
isMainThread
updateProvidersForCurrentCountry
_mcQueue
effectiveValueForSetting:
setMovieRestriction:
setTvRestriction:
setAppRestriction:
VSSpeechGender
getVoiceInfoForLanguageCode:footprint:gender:type:reply:
inProgressOutputVoice
languages
setInProgressOutputVoice:
ams_activeiTunesAccount
ams_storefront
ams_localiTunesAccount
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
addressBookManagerDidUpdateData:meCard:
contextCollector:didChangeDisplayScale:
localMeCardDidUpdate:
requestAssistantDataUpdate
getiTunesStoreFrontIdentifierWithCompletion:
getMeCardsWithCompletion:
unredactedAnchor
_safeUpdateVoiceOverStatus
voiceOverIsActive
setVoiceOverIsActive:
_addressBookManager
_cachedMeCards
_fetchingMeCardGroup
_cachedCensorSpeech
_cachedAllowUserGeneratedContent
_cachedInRetailStoreDemoMode
_cachedCountryCode
_receivedGeoCountryConfigurationResponse
_voiceTriggerEnabled
_cachedVoice
_initialFetchComplete
_cachedAllowsExplicitContent
_cachedContentRatingRestrictions
_cachedSupportsTelephonyCalls
_cachedIsSiriServerLoggingEnabled
_displayScaleMonitor
_cachedServerFlagsEnabled
_watchIsInverted
_watchIsOnLeftWrist
_cachedStoreFrontId
_observingiTunesChanges
_cachedSAD
_unredactedAnchor
_voiceOverIsActive
isEqualToArray:
userDefaultsKnowledgeStore
enabledForInstrumentation
enabledForLegacyMetrics
_mapEventFromDiskRepresentation:eventStreamId:
_deliverSerializedWrapper:
anyEventType
deliverWrappedEvent:
sharedLogger
report:application:
event
eventType
eventData
setEventMetadata:
eventMetadata
setEventGeneratedTimestampRefId:
setEventGeneratedRelativeToBootTimeTimestampNs:
turnContext
turnID
wrapAsAnyEvent
setApplicationIdentifier:
_knowledgeStore
_enabledForInstrumentationFetched
_enabledForInstrumentation
_applicationIdentifier
saConnectionPolicy
routes
connectionPolicyStatus
cname
componentsWithURL:resolvingAgainstBaseURL:
setHost:
connectionId
_closePeerConnection
_closeNetworkConnection
_establishPeerConnection
_establishNetworkConnectionToURL:connectionId:withPOP:
hasActiveConnection
isEstablishing
_doMetricsBookkeepingForPeerStreamsStart
_waitForPeerData
openConnectionForURL:withConnectionId:initialPayload:completion:
_peerConnectionFailure
_restartConnectionProviders
_peerReadStreamErrorOccurred:
_hasPeerConnection
_hasOrIsEstablishingNetworkConnection
_connectionMetricsWithCompletion:
isReady
_establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:
_networkConnectionProvider
setConnectByPOPMethod:
setStaleInterval:
_doMetricsBookkeepingForNetworkStreamStart
_didEstablishNetworkConnectionForProvider:initialPayload:ofLength:error:
_networkConnectionFailure
_setupStaleNetworkTimerForProvider:
_networkConnectionDidOpen
_waitForNetworkData
_tryToWriteToNetworkConnection
_cancelStaleNetworkTimer
_fallbackWithSafetyNet
_peerConnectionReceivedData:
readData:
_tryToReadPeerStreamHeaderFromData:needsReconnect:
_tryToReadHTTPHeaderIntoMessage:fromData:isComplete:
_insertCompanionSpecificDataIntoHeader:
_prependHeader:toOutputBuffer:
writeData:completion:
_networkConnectionErrorOccurred:
_networkConnectionReceivedData:
_writeDataToPeer:
_writeDataToNetwork:
_prepareForSleep
setTimeUntilOpen:
setTimeUntilFirstByteRead:
connectionProvider:receivedViabilityChangeNotification:
connectionProviderReceivedBetterRouteNotification:
_peerConnectionDidEnd
_networkConnectionDidEnd
_peerProvider
_networkOutputBuffer
_dataHasBeenWrittenToNetwork
_staleNetworkTimerSource
_buffer
_networkURL
_outgoingHTTPHeader
_networkConnectionSequenceNumber
_safetyNetBuffer
_currentStartTime
_firstStartTime
_currentOpenTime
_firstByteReadTime
_startCount
_networkURLFromPeer
_connectionId
_connectByPOP
initWithUUID:properties:
_UUID
_properties
setUUID:
setProperties:
ad_OTTModelRepresentation
ad_OTTRequestRepresentation
_ad_getOTTRepresentationWithCompletionHandler:
_initWithChannel:
_ad_OTTRequestRepresentation
_fetchAudioSessionID
_updateAudioSessionID:
_currentAudioState
initWithListener:
_removeListenerProxiesWithListener:
listener
setAudioSessionID:
_didChangeAudioStateFrom:to:
_listenerProxies
appMetadata
aceObjectArrayWithDictionaryArray:baseClass:
_groupKeyForSyncInfo:domainObject:
setDomainObjectClass:
setSyncAnchor:
setCount:
syncAnchor
setIdentifierChecksum:
handleSyncChunkInfo:withSyncInfo:completion:
checksums
_checksums
_idCRCChecksums
managerForBundleID:bundlePath:
_datastoreManager
_siriAuthorizationStatusForAppID:
writeLatestVocabularyItems:forIntentSlot:completion:
appBundleID
checkIfSyncSlot:isAllowedWithCompletion:
_triggerUserVocabularySyncAttributingApp:vocabType:
currentConnection
auditToken
_requestSiriAuthorization:auditToken:
_appBundleID
_appPath
_silentVibrationValue
_ringVibrationValue
_fetchRingVibrationValue
_fetchSilentVibrationValue
vibratesForDeviceRingerSwitchState:
handleRingVibrationValueChange
handleSilentVibrationValueChange
_ringVibrationState
_silentVibrationState
requestId
_clearRequestCommands
siriCore_isRetryable
_commandRefsOrIsCurrentRequest:
commandRefsRestartCommand:
setLastResponseId:
lastResponseId
siriCore_isRestartable
_canRestartRequest
_objectsToRemapFromRefId:toRefId:retryFullRequest:commandsToRetry:
originalRequestId
_retryCount
_restartRequest
_requestObjects
_needsToRetryNakedObjects
_nakedObjects
_originalRequest
_latestMappedRequestId
setUnderlyingQueue:
setMaxConcurrentOperationCount:
isActivityAvailable
_setMotionActivity:
startActivityUpdatesToQueue:withHandler:
stopActivityUpdates
stationary
automotive
walking
running
cycling
unknown
confidence
_motionActivity
_motionActivityManager
_opQueue
_registerForAudioSessionInterruptionNotification
_shouldSpeak
_logShouldSpeakState:
_unregisterForAudioSessionInterruptionNotification
_unregisterForRingerStateNotification
_continuePendingSpeechRequestFromTimestamp:
_setBluetoothDevice:
_setRequestOptionsRequireTTS:
releaseAudioSessionOnRecordingCompletion
adClientConnection_enterRequestGroup:
adClientConnection_leaveRequestGroup
requestHandleCommand:reply:
_handleRequestCompletedWithUUID:error:
aceConnectionWillRetryOnError:
requestRequestedOpenApplicationWithBundleID:URL:reply:
requestRequestedOpenURL:reply:
getBulletinContext:
getClockContext:
cacheImage:
extensionRequestWillStartForApplication:
extensionRequestFinishedForApplication:error:
requestRequestedDismissAssistant
quickStopWasHandledWithActions:
acousticIDRequestWillStart
musicWasDetected
acousticIDRequestDidFinishWithSuccess:
setUserActivityInfo:webpageURL:
invalidateCurrentUserActivity
_setServerForcedTTS:
startPlaybackDidFail:
willProcessStartPlayback:intent:completion:
audioSessionWillBecomeActive:
audioSessionDidBecomeActive:
appLaunchFailedWithBundleIdentifier:
_updateShouldSpeak
_registerForRingerStateNotification
_handleAudioSessionInterruption:
audioSessionDidBeginInterruption
audioSessionDidEndInterruption:
_computeShouldSpeak
shouldSpeakChanged:
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:reply:
speechRecordingDidBeginOnAVRecordRoute:audioSessionID:reply:
speechRecordingDidChangeAVRecordRoute:isDucking:isTwoShot:speechEndHostTime:reply:
_speechRecordingDidFinish
speechRecordingDidEndWithReply:
speechRecordingDidCancelWithReply:
speechRecordingDidFail:reply:
speechRecognized:
speechRecognizedPartialResult:
speechRecordingWillBeginRecognitionUpdateForTask:
speechRecognitionDidFail:
speechRecordingStartpointDetectedWithReply:
speechRecordingPerformTwoShotPromptWithType:reply:
_setADShouldSpeak:
audioSessionIDChanged:
audioPlaybackRequestWillStart:
audioPlaybackRequestDidStart:
audioPlaybackRequestDidStop:error:
primaryInEarStatus
secondaryInEarStatus
setDeviceID:
setUserInfo:
deactivateForReason:options:context:completion:
_setRequestCompletion:
_updateSpeechRequestOptions:
getAudioStateWithOptions:completion:
_metrics_recordFailureMetricsForError:
_metrics_recordCancellationMetrics
_metrics_awdRequestEnd
sharedCache
cacheableObjectForIdentifier:
serializeCacheableObjects:completion:
remoteTimerManager
reportIssueForError:type:subtype:context:processIdentifier:walkboutStatus:triggerForIDSIdentifiers:
audioStateAnnouncer:didChangeAudioStateFrom:to:
adGetBulletinContext:
adGetClockContext:
adAcousticIDRequestWillStart
adMusicWasDetected
adAcousticIDRequestDidFinishSuccessfully:
preheatWithStyle:forOptions:
boostedPreheatWithStyle:completion:
setConfiguration:
willPresentUIWithReply:
didDismissUI
startRequestWithInfo:completion:
startRecordingForPendingSpeechRequestWithOptions:requestId:completion:
startSpeechPronunciationRequestWithOptions:context:completion:
startAcousticIDRequestWithOptions:context:completion:
continuePendingSpeechRequestWithId:fromTimestamp:
cancelRequestForReason:
rollbackRequest
requestStateUpdateWithReply:
performGenericAceCommand:interruptOutstandingRequest:reply:
recordUIMetrics:
recordCancellationMetrics
getSerializedCachedObjectsWithIdentifiers:completion:
getRemoteClockTimerSnapshotWithCompletion:
startAudioPlaybackRequest:options:reply:
beginUpdateOutputAudioPowerWithReply:
endUpdateOutputAudioPower
reportIssueForError:type:context:
reportIssueForError:type:subtype:context:
reportIssueForType:subtype:context:
_listInstalledServicesWithReply:
_pingServiceForIdentifier:reply:
_sendLargeData:reply:
_performCommandDictionary:forBundleIdentifier:reply:
_performTaskCommandDictionary:forBundleIdentifier:reply:
_broadcastCommandDictionary:
_fetchAppContextForApplicationInfo:reply:
_clearAssistantInfoForAccountIdentifier:
_barrierWithReply:
_requestBarrierWithReply:
_startSpeechWithURL:isNarrowBand:
adAceConnectionWillRetryOnError:
_requestInfo
_requestOptions
_requestUUID
_pendingRequestId
_pendingRequestTimestamp
_pendingSpeechRequestContinue
_numberOfPresentedUIs
_presentedUIReply
_presentedUITransaction
_hasCachedADShouldSpeak
_cachedADShouldSpeak
_requestOptionsRequireTTS
_serverIsForcingTTS
_combinedShouldSpeakState
_isConnected
_longLivedConnectionABCTimer
resultOptions
ad_transcriptionResultRequiresAddressBook
ad_transcriptionResultWithAddressBookManager:
_ad_personContactHandlesWithAddressBookManager:
emails
emailAddress
phones
number
resultData
placeResultType
forwardGeoProtobuf
contactId
setAddressBookID:
addressLabel
setAddressLabel:
contactName
setContactName:
_invokeRequestCompletion
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
speechRecordingDidBeginWithOptions:sessionUUID:sessionRequestUUID:
speechRecordingDidEnd
speechRecordingDidCancel
speechRecordingDidFail:
af_speechPhrases
af_speechUtterances
af_correctionContext
audioAnalytics
af_audioAnalytics
speechDidRecognizePhrases:utterances:usingSpeechModel:correctionContext:audioAnalytics:
speechRecognitionDidFinishWithError:
speechDidRecognizePartialResult:
voiceSearchResults
recognitionText
stable
speechDidReceiveSearchResults:recognitionText:stable:final:
speechDidRecognizeTokens:usingSpeechModel:
detectUtterances
interpretations
appendString:
ad_transcriptionResults
speechDidRecognizeTranscriptionObjects:usingSpeechModel:
pronunciationData
ttsPronunciations
setPhonemeSuggestions:
speechDidFinishWritingAudioFile:error:
speechDidDetectLanguage:confidenceScores:isConfident:
languageDetectorFailedWithError:
speechDidRecognizeMultilingualSpeech:
speechDidBeginLocalRecognitionWithModelInfo:
utteranceDetectionEnabled
setDetectUtterances:
_updateDictationOptions:
voiceSearchTypeOptions
_dictationWillStartWithLanguageCode:options:speechOptions:xpcconnection:
audioFileHandle
anonymousListener
endpoint
_updateDictationOptionsForOnDeviceDictation:language:
_startDictationWithLanguageCode:options:speechOptions:xpcconnection:
finishAudio
languageDetectorSetMostRecentRecognitionLanguage:
setPreheatTestLanguage:
modelOverrideURL
setPreheatTestModelPath:
taskHint
offlineLanguage
recognitionOverrides
fieldLabel
_localSpeechRecognizerSupportingBackground:
maximumRecognitionDuration
farField
originalAudioFileURL
startSpeechRecognitionWithLanguage:interactionIdentifier:task:context:narrowband:detectUtterances:maximumRecognitionDuration:farField:secureOfflineOnly:censorSpeech:originalAudioFileURL:overrides:modelOverrideURL:applicationName:shouldStoreAudioOnDevice:didStartHandler:
addAudioPacket:
preferOnlineRecognitionEnabled
forceOfflineRecognitionEnabled
setForceOfflineRecognition:
setSecureOfflineOnly:
instanceUUID
speechDidProcessAudioDuration:
speechDidRecognizePackage:
localSpeechRecognizer:didRecognizeTokens:
localSpeechRecognizer:didProcessAudioDuration:
localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:
localSpeechRecognizer:didRecognizePackage:
localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:
localSpeechRecognizer:didRecognizePhrases:utterances:
continuePendingSpeechRequestFromTimestamp:
_usingLocalSpeechRecognizer
_waitingForSpeechRecognition
_waitingForStructuredResultsOrVoiceSearch
_waitingForAudioFile
_pendingSpeechRequestListener
_pendingSpeechRequestConnection
_disconnected
_haveSeenSpeechRecordingDidRecognizePhrases
_currentSpeechCaptureSource
initWithChannel:
initWithProvider:queue:frequency:delegate:
outputReferenceChannel
_fetchAssetsForLanaugeOrEnablementNotification:
_speechRecorder
_updateRecordRoute:andDeviceIdentifier:
_supportsVolumeService
_interactiveLocalSpeechRecognizer
resetDESWithCompletion:
writeDESRecord
_dispatchUpdateSpeechProfileForNextLanguage
_cleanUpDelegateInfo
_createNewXPCWrapper
_updateSpeechState:
_tellDelegateSpeechReceivedLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:
_tellDelegateSpeechFailedWithError:
_tellDelegateSpeechCanceled
_lastAudioBufferReceivedWithEndpointMode:totalPacketCount:endpointerMetrics:
_tellDelegateSpeechFinished
_releaseSession
preferOnlineRecognition
_detectOnDeviceDictationOrchestrationMismatchForLanguage:initialLanguage:eligibleForOnDeviceDictation:modelType:onDeviceRequest:context:
_tellDelegateSpeechStartedWithRecordingInfo:
_speechCodecError
_cancelRecordingWithError:suppressAlert:
_tellDelegateUpdateAudioInfo:
_recordingStoppedWithError:totalPacketCount:endpointMode:endpointerMetrics:
_tellDelegateAboutSpeechPackets:atTimestamp:count:
_tellDelegateAboutFingerprint:duration:
_tellDelegateMusicWasDetected
_tellDelegateEndpointWasDelayedForMusic
_tellDelegateAudioFileDidFinish:error:
_tellDelegateSpeechStartpointWasDetectedAtTime:
_tellDelegateSpeechEndpointWasDetectedAtTime:
_tellDelegateToPerformTwoShotPromptWithType:completion:
_tellDelegateQuickStopWasRequested
_tellDelegateShutdownUIWasRequested
_fetchSmartSiriVolume:
_updateSiriOutputVolume:completion:
_tellDelegateWillSetAudioSessionActive:
_tellDelegateDidSetAudioSessionActive:
_tellDelegateDidDetectLanguage:confidenceScores:isConfident:
_volumeService
_tellDelegateAboutInputAveragePower:peak:
resetLocalRecognizer
skipPersonalizedASR
preheatTestModelPath
preheatTestLanguage
preheatSpeechRecognitionWithLanguage:modelOverrideURL:
_addRecordStoppedCompletion:
_startFixedPriorityCaptureForMode:options:sessionUUID:
startContext
_startCaptureForMode:options:context:
_badStateError
_updateCapturingStateWithOptions:
_tellDelegateSpeechShouldPreheatWithRecordingInfo:
acousticIdEnabled
speechRecordingEventListeningEndpoint
_tellDelegateSpeechWillBeginWithTimestamp:isFromFile:
isInitialBringUp
logTimeToBeepWithDuration:
reloadSmartSiriVolume
_speechCompressor
stopContext
_stopSpeechCaptureWithOptions:
suppressStopAlert
stopRecordingHostTime
_endSessionIfIdle
_cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:
speechProfileDataLastModifiedDataForLanguage:
_requestSpeechProfileUpdateForLanguages:
_updateSpeechProfileForLanguages:
_addLanguageUpdateToQueue:
speechCapturingDidDetectMusic:
speechCapturingDidDelayEndpointForMusic:
speechCapturing:languageDetectorDidFail:
getRecordingInfoUsingBlock:
getRecordingInfo
audioPowerUpdaterDidUpdate:averagePower:peakPower:
getSpeechRecorderVTSatScore:
isLocallyRecognizingInSiriMiniMode
_tellDelegateSpeechRecognitionUpdateWillBegin
isCapturing
stopSpeechCaptureIfFingerprintingOnlyWithOptions:
stopFingerprintingForSuccess:
initialDictationLanguage
primaryDictationLanguage
inputAudioPowerUpdater
_localSpeechRecognizerTask
_profileUpdateDelayTimer
_profileUpdateCoalescingTimer
_profileUpdateIsActive
_profileUpdateLanguageQueue
_profileUpdateLanguageSet
_speechState
_shouldTalkToDelegate
_capturingMode
_capturingContext
_recordingError
_recordStartedCompletion
_recordStoppedCompletion
_releasesAudioSessionWhenRecordingStopped
_prepareAudioSystemTransactionCount
_releasesAudioSessionWhenPrepareAudioSystemDone
_speechLog
_currentCapturing
_playbackSimulator
_canSkipAudioSessionActivationInAudioSystemPreparation
_recordRoute
_hasFetchedSmartSiriVolume
_hasUpdatedSiriOutputVolume
_dirtySiriOutputVolumeHostTime
_hasReceivedLastAudioBuffer
_initialDictationLanguage
_primaryDictationLanguage
_dictationLanguages
_inputAudioPowerUpdater
_outputAudioPowerUpdater
_queuedNotificationRequests
_clearTriggerlessUserReplyTimer
_sharedCommandCenter
_clearRequestState
intentIdentifiers
laterDate:
_changeCurrentStateToState:
_startReadingNotification:
_completeNotificationsWithSuccess:
_handleNotification:completion:
_clearCurrentNotificationTimer
announceNotificationRequestInfoFromNotification:appId:
_startTimerToResetStateFrom:
_startTriggerlessFollowupRequestWithRequestDelayManager:delayType:
_currentState
_pendingRequest
_currentNotificationTimer
_stateTimer
_triggerlessUserReplyTimer
_triggerlessUserReplyTimerTimedOut
_currentRequestDelayManager
_triggerlessRequestEnteredListeningState
bundleInfoValueForKey:PID:
messageDictionary
setPredefinedServer:
setGroup:
setPeerSpeechIdentifier:
setPeerUserAgentString:
_saveAccount:setActive:
_localSpeechRecognizer
fetchAssetsForLanguage:completion:
deleteAllDESRecordsForDictationPersonalization
setFileLoggingIsEnabled:
setCardLoggingEnabled:
setCommandLoggingEnabled:
setAVVCLoggingEnabled:
synchronizeLogPreferencesDomain
synchronizeAVVCPreferencesDomain
setConfigOverrides:
configOverrides
addObserverForName:object:queue:usingBlock:
runServiceMaintenanceWithCompletion:
currentNetworkActivityTokenWithCompletion:
initWithLanguageCode:gender:isCustom:
genderForVSSpeechGender:
footprint
contentVersion
masteredVersion
initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:
getLocalVoiceAssets:
updateSpeechProfileWithLanguage:modelOverridePath:completion:
createSpeechProfileWithLanguage:modelOverridePath:JSONData:completion:
setOfflineDictationProfileOverridePath:
setExpectedSpeakerSharedUserID:
setExpectedSpeakerConfidenceScore:
setNonspeakerConfidenceScores:
setAudioFileURL:
sharedServer
replayWithFileURL:completion:
_createMockServerIfNeededAndSetActiveWithCompletion:
startRequest:options:completion:
stopRequest:immediately:
stopAllRequests:completion:
setMultiUserIsOnboardingDevice:
accessStoreUsingBlock:
getConfigurationsWithCompletion:
getContextWithCompletion:
setSiriDataSharingOptInStatus:
_postWatchNotificationWithContext:withError:
initWithBlock:defaultValue:
invokeWithValue:
_setOnDeviceDictationAvailableAlertPresentedLocal:
successTitle
successBody
successButtonText
errorTitle
errorBody
errorButtonText
_serviceDelegate
syncVerificationPartialResult:
syncVerificationServerReport:
adSyncVerificationPartialResult:
adSyncVerificationServerReport:
_appIdentifierfromConnection:
_serviceDelegateWithErrorHandler:
_xpcConnection
deviceIDPair
observationDate
initWithDeviceIDPair:proximity:observationDate:
initWithDictionaryRepresentation:
buildDictionaryRepresentation
_proximity
_deviceIDPair
_observationDate
setDeviceIDPair:
setProximity:
setObservationDate:
addPairs:
pairsCount
clearPairs
pairsAtIndex:
pairsType
pairs
setPairs:
_pairs
hasKey
hasValue
_key
_value
isSmartSiriVolumeAvailable
_startObservingSystemVolumes
_fetchSystemVolumes
_startObservingSystemControllerLifecycle
getSmartSiriVolume
_updateSiriVolume:completion:
invoke
_stopObservingSystemControllerLifecycle
_stopObservingSystemVolumes
numberWithFloat:
_updateSiriVolumeIfNeeded
isDeviceInSetupFlow
outputVolume
getMinimumOutputVolume:
getMaximumOutputVolume:
floatValue
adAVSystemControllerDidChange:
initWithQueue:speechController:
fetchSmartSiriVolume
updateSiriOutputVolume:completion:
waitUntilSiriOutputVolumeUpdatesAfterTimestamp:withTimeout:block:
setClientConfiguration:
setSiriOutputVolume:forAudioRoute:operationType:completion:
systemVolumeChanged:
_handleSystemVolumeChangeForCategory:volume:audioCategory:reason:
_fetchSmartSiriVolume
_setNeedsUpdateSiriVolume
_speechController
_clientConfiguration
_isSmartSiriVolumeAvailable
_volumesByCategory
_smartSiriVolume
_needsUpdateSiriVolume
_lastSiriVolumeUpdateTimestamp
_pendingBlocks
_deviceSetupFlowSiriVolume
_ad_voiceInfo
_ad_setVoiceInfo:
_ad_dictionaryRepresentation
_ad_keyValueDictionaryWithDictionary:
domainItem
_saCommandIgnored:
_sendLoadAssistant
siriConnection:didOpenWithConnectionType:delay:
siriConnection:didEncounterError:
_fetchLostModeState
_isLostModeActive
initWithName:queue:
publishState:
sharedWirelessSplitterSessionObserver
startObserving
stopObserving
_wirelessSplitterSession
_observerCount
_publisher
setSearchTypes:
voiceSearchHeaderFields
setHeaders:
voiceSearchQueryParameters
setQueryParameters:
setFieldLabel:
fieldIdentifier
setFieldId:
requestIdentifier
keyboardType
setKeyboardType:
setPostfixText:
setPrefixText:
keyboardIdentifier
setKeyboardIdentifier:
returnKeyType
setKeyboardReturnKey:
setEnablePartialResults:
inlineItemList
setInlineItemList:
setVoiceTriggerEventInfo:
alternativeSelectionCount
setAlternativeSelectCount:
characterModificationCount
setCharacterChangeCount:
correctedText
setCorrectionText:
setCorrectionSource:
ad_setAFSpeechEvent:
setAudioSource:
setAudioDestination:
setCodec:
setDeviceIdentifier:
setDeviceModel:
setDspStatus:
setHeadsetAddress:
setHeadsetName:
headsetId
deviceModel
setProductId:
setVendorId:
recordingInfo
setRingerSwitchOff:
setAlertType:
homeButtonDownEventTime
setButtonDowntime:
setActivationTime:
setZeroLatencyLaunch:
setActivationAudioAlertStartTime:
setActivationHapticAlertStartTime:
setRecordingInfo:
useStreamingDictation
setWasLaunchedForRequest:
setClientModelVersion:
packets
packetNumber
setEndpoint:
featuresAtEndpoint
setFeaturesAtEndpoint:
serverFeatureLatencyDistribution
setServerFeatureLatencyDistribution:
totalAudioRecorded
setTotalAudioRecorded:
userFacingReasonTitle
userFacingReasonDescription
ad_shouldClassLogToMetrics
views
speakableText
isDeviceOwnedByCurrentUser
mediaSystemIdentifier
rapportEffectiveIdentifier
userInterfaceIdiom
aceVersion
mediaRouteIdentifier
setIsDeviceOwnedByCurrentUser:
setIdsIdentifier:
setMediaSystemIdentifier:
setRapportEffectiveIdentifier:
setAceVersion:
setBuildVersion:
initWithAFPeerInfo:
setDeviceOwnedByCurrentUser:
idsFirstRoutableDestination
setAirPlayRouteIdentifiers:
preferredMessagingOptionsForCommands
setPreferredMessagingOptionsForCommands:
_deviceOwnedByCurrentUser
_idsIdentifier
_name
_idsDeviceUniqueIdentifier
_idsFirstRoutableDestination
_airPlayRouteIdentifiers
_rapportEffectiveIdentifier
_mediaSystemIdentifier
_roomName
_preferredMessagingOptionsForCommands
_userInterfaceIdiom
_aceVersion
handleMultiUserDidReceiveScoresNotification:
initWithSharedUserId:confidenceScore:
initWithConfidenceScores:
notifiedFiringTimerIDs
performBlock:
_mergedClockAlarmSnapshot
_mergedClockTimerSnapshot
_dismissFiringItemsWithOptions:
_performBlock:
_enumerateAlarmSnapshotsUsingBlock:
_enumerateTimerSnapshotsUsingBlock:
initialize
getSnapshotsWithCompletion:
_mutateMergedClockTimerSnapshotUsingBlock:
_enumerateAlarmsUsingBlock:
_enumerateTimersUsingBlock:
_localClockAlarmSnapshot
_localClockTimerSnapshot
_remoteClockAlarmSnapshotsByDeviceIdentifier
_remoteClockTimerSnapshotsByDeviceIdentifier
_remoteTimerManager
_limit
setLimit:
_currentHour
analyticsDictionary
currentCalendar
components:fromDate:
hour
logAnalyticsBatchUploadedWithBatch:
bulletinForInternalID:
removeBulletinWithInternalID:
appendItemWithBulletin:
removeBulletinItem:
publisherBulletinID
allBulletins
setBulletin:forInternalID:
enumerateBulletinsAfterBulletinWithNotificationID:usingBlock:
_allBulletins
_orderedBulletinsHead
_orderedBulletinsTail
_setUpBBObserver
_fetchInitialState
initWithQueue:calloutQueue:
_createBBObserverWithQueue:
setObserverFeed:
_getNotificationsFromBulletinBoard
_getRestrictedAppsFromBulletinBoard
_fetchFromDataSourceIfNecessary
applicationProxyForIdentifier:
appInfoWithAppProxy:
supportedIntents
_afbulletinForBBBulletin:forFeed:
internalID
setAvailableOnLockScreen:
intentIDs
applicationWithBundleID:canAnnounceNotificationWithIntentIdentifiers:
_bulletinsDidChange
bulletinID
observer:purgeReferencesToBulletinID:
internalIDForBBBulletinID:
wasRemovedFromFeed:
availableOnLockScreen
fetchBulletinsOnLockScreenForNotificationManager:completion:
setRead:
setBulletin:forFeed:
requestNoticesBulletinsForAllSections
notificationManagerDidChangeBulletins:
title
sectionDisplayName
localizedNameForContext:
_isAppRestrictedAndSiriRelated:
spokenNotificationSetting
getSectionInfoWithCompletion:
allowsNotifications
lockScreenSetting
contentPreviewSetting
_siriRelatedRestrictedAppsForApps:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:updateGlobalSettings:
observer:noteSectionParametersChanged:forSectionID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:noteBulletinsLoadedForSectionID:
setDataSource:
fetchAllBulletinsWithCompletion:
fetchBulletinsOnLockScreenWithCompletion:
fetchSpokenNotificationEnabledAppsWithCompletion:
_displayNameForBulletin:
dataSource
_notificationsGroup
_bulletinsOnLockScreen
_initialFetchSuccess
_settingsGroup
_batchedUpdatePending
_siriRelatedPreviewRestrictedApps
_spokenNotificationEnabledApps
_info
IODeviceTree:/
IOPlatformSerialNumber
IOPlatformUUID
IOPower:/
Gq3489ugfi
Fyp98tpgj
kbjfrfpoJU
board-id
product-name
kern.osversion
kern.osrevision
IODeviceTree:/options
4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ROM
4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:MLB
oycqAZloTNDm
abKPld1EcMni
IOEthernetInterface
IOPrimaryInterface
IOPropertyMatch
IOService
IOMACAddress
allowsAWDL
allowsBLE
allowsInfraWiFi
%@ {%@}
allowsAWDL = %@
allowsBLE = %@
allowsInfraWiFi = %@
ADRapportLinkTransportOptions::allowsAWDL
ADRapportLinkTransportOptions::allowsBLE
ADRapportLinkTransportOptions::allowsInfraWiFi
supportsSecureCoding
TB,R
Tq,R,N,V_allowsAWDL
Tq,R,N,V_allowsBLE
Tq,R,N,V_allowsInfraWiFi
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
ADSyncFinishedNotification
ADSyncVerificationFinishedNotification
ClientSideInitiatedSyncVerification
-[ADCommandCenter(Sync) _allAnchorsFromRequest:andResponse:]
-[ADCommandCenter(Sync) _handleValidatedSyncGetAnchorsResponse:forGetAnchors:]
-[ADCommandCenter(Sync) _appMetaDataListFromVocabSources:appIdentifyingInfoList:]
ADCommandCenterSyncAppSourcesFetching-%@
-[ADCommandCenter(Sync) _fetchAllAppSourcesForSyncingWithCustomVocabInfo:completion:]_block_invoke_2
-[ADCommandCenter(Sync) _requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:]
SyncAnchorsQueue
-[ADCommandCenter(Sync) _requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:]_block_invoke
-[ADCommandCenter(Sync) _sendSyncFinishedAndReferenceCurrentSyncPromise:]
-[ADCommandCenter(Sync) _saSyncGetAnchors:completion:]
-[ADCommandCenter(Sync) _saSyncGetAnchors:completion:]_block_invoke_4
-[ADCommandCenter(Sync) _saSyncGetAnchorsResponse:completion:]
-[ADCommandCenter(Sync) _saSASyncGetCachedSyncAnchors:completion:]
-[ADCommandCenter(Sync) _saSyncChunkDenied:completion:]
-[ADCommandCenter(Sync) _saSyncChunkAccepted:completion:]
-[ADCommandCenter(Sync) _saSyncFinished:completion:]
-[ADCommandCenter(Sync) _saSyncClientVerify:completion:]
-[ADCommandCenter(Sync) _saSyncServerVerifyResponse:completion:]
-[ADCommandCenter(Sync) _prepareAndStartSyncVerification]
syncVerification
-[ADCommandCenter(Sync) _finishVerificationWithKeys:]
-[ADCommandCenter(Sync) syncManager:chunkForSyncInfo:chunkInfo:]
META:%@
DATA:%@
-[ADCommandCenter(Sync) syncManager:finishedSyncForKeys:postNotification:]
-[ADCommandCenter(Sync) syncManagerDidResetInProgressSync:]
-[ADCommandCenter(Sync) _sync_syncIfNeeded]
-[ADCommandCenter(Sync) _sync_assistantLoadedSyncRequest:]
-[ADCommandCenter(Sync) _sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:]_block_invoke
v24@?0@"NSMutableArray"8@"NSMutableArray"16
-[ADCommandCenter(Sync) _sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:]
-[ADCommandCenter(Context) _context_rollbackClearContext]
-[ADCommandCenter(Context) _context_clearContext]
client_clear_context
-[ADCommandCenter(Context) _context_setAlertContextDirty]
-[ADCommandCenter(Context) _context_updateContext]
-[ADCommandCenter(Context) _setAlertContext]
v16@?0@"SASetNLAlertContext"8
v16@?0@"SASetAlertContext"8
-[ADCommandCenter(Context) _setBackgroundContext]
-[ADCommandCenter(Context) _setBackgroundContext]_block_invoke_2
v16@?0@"SASetBackgroundContext"8
-[ADCommandCenter(Context) _setSyncContext]
-[ADCommandCenter(Context) _setRestrictedAppContext]
-[ADCommandCenter(Context) _setRestrictedAppContext]_block_invoke
-[ADCommandCenter(Context) _context_willSetApplicationContextWithRefId:]
-[ADCommandCenter(Context) _context_setSTApplicationContext:]
-[ADCommandCenter(Context) _context_setApplicationContext:]
-[ADCommandCenter(Context) _context_fetchAppicationContextForApplicationInfo:supplementalContext:refID:]
-[ADCommandCenter(Context) _context_fetchAppicationContextForApplicationInfo:supplementalContext:refID:]_block_invoke
-[ADCommandCenter(Context) _fetchAndSendApplicationContextForApplicationInfos:fetchedOrderedContext:refID:]
-[ADCommandCenter(Context) _fetchAndSendApplicationContextForApplicationInfos:fetchedOrderedContext:refID:]_block_invoke
-[ADCommandCenter(Context) _context_setOverriddenApplicationContext:withContext:]
com.apple.mobilePhone
com.apple.ace.phone
-[ADCommandCenter(Context) _context_setOverriddenApplicationContext:withContext:]_block_invoke
v24@?0@"SAGenericCommand"8@"NSError"16
com.apple.siri
-[ADCommandCenter(Context) _context_setApplicationContextForApplicationInfos:withRefId:]
-[ADCommandCenter(Context) _context_reset]
/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-2152.26/ADCommandCenter_Context.m
/System/Library/Intents/Intents.framework/Intents
-[ADRecordingInfo initWithDictation:fingerprintOnly:secureOfflineOnly:audioAlertStyle:recordSettings:endpointerModelVersion:recordRoute:recordDeviceInfo:playbackRoute:audioDeviceID:audioSessionID:voiceTriggerEventInfo:activationAlertStartTimestamp:startRecordingTimestamp:firstBufferTimestamp:firstBufferHostTime:estimatedSpeechEndHostTime:deviceIdentifier:includeBTInfo:speechEvent:]
isDictation
TB,R,N,V_isDictation
isFingerprintOnly
TB,R,N,V_isFingerprintOnly
isSecureOfflineOnly
TB,R,N,V_isSecureOfflineOnly
audioAlertStyle
Tq,R,N,V_audioAlertStyle
codec
T@"NSString",R,N,V_codec
codecIsNarrowband
TB,R,N
source
T@"NSString",R,N,V_source
destination
T@"NSString",R,N,V_destination
route
T@"NSString",R,N,V_route
deviceInfo
T@"CSAudioRecordDeviceInfo",R,N,V_deviceInfo
deviceIdentifier
T@"NSString",R,N,V_deviceIdentifier
modelName
T@"NSString",R,N,V_modelName
dspStatus
T@"NSString",R,N,V_dspStatus
headsetAddress
T@"NSString",R,N
headsetName
T@"NSString",R,N,V_headsetName
voiceTriggerEventInfo
T@"NSDictionary",R,N,V_voiceTriggerEventInfo
isBluetooth
vendorId
productId
activationAlertStartTimestamp
Td,R,N,V_activationAlertStartTimestamp
startRecordingTimestamp
Td,R,N,V_startRecordingTimestamp
audioSessionID
TI,R,N,V_audioSessionID
firstBufferTimestamp
Td,R,N,V_firstBufferTimestamp
firstBufferHostTime
TQ,R,N,V_firstBufferHostTime
estimatedSpeechEndHostTime
TQ,R,N,V_estimatedSpeechEndHostTime
isDucking
TB,R,N,V_isDucking
isEndAlertInfo
TB,N,V_isEndAlertInfo
triggeredTwoShotBorealis
TB,N,V_triggeredTwoShotBorealis
audioSessionSetActiveEndHostTime
TQ,N,V_audioSessionSetActiveEndHostTime
endpointerModelVersion
T@"NSString",R,N,V_endpointerModelVersion
bluetoothDevice
T@"<ADBluetoothDevice>",R,N,V_bluetoothDevice
speechEvent
Tq,R,N,V_speechEvent
mobile
forceSiriPCMAudio
ADRemoteConnectionErrorDomain
ADPeerConnection.m
Invalid parameter not satisfying: %@
identifier
func
ADRemotePeerConnection
-[ADPeerConnection _sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:]
-[ADPeerConnection _sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:]_block_invoke
v8@?0
-[ADPeerConnection _sendResponse:forRequestId:]
-[ADPeerConnection _sendResponse:forRequestId:]_block_invoke
-[ADPeerConnection service:account:incomingUnhandledProtobuf:fromID:context:]
-[ADPeerConnection service:account:incomingUnhandledProtobuf:fromID:context:]_block_invoke
v24@?0@"PBCodable"8@"NSError"16
-[ADPeerConnection service:account:identifier:didSendWithSuccess:error:]
sequence
type
commandPushGenerationsRequest
commandPushGenerationsResponse
commandPullGenerationsRequest
commandPullGenerationsResponse
commandPullDeltaRequest
commandPullDeltaResponse
commandPullSnapshotRequest
commandPullSnapshotResponse
sequence = %@
type = %ld (%@)
commandPushGenerationsRequest = %@
commandPushGenerationsResponse = %@
commandPullGenerationsRequest = %@
commandPullGenerationsResponse = %@
commandPullDeltaRequest = %@
commandPullDeltaResponse = %@
commandPullSnapshotRequest = %@
commandPullSnapshotResponse = %@
ADDeviceSyncMessage::sequence
ADDeviceSyncMessage::type
ADDeviceSyncMessage::commandPushGenerationsRequest
ADDeviceSyncMessage::commandPushGenerationsResponse
ADDeviceSyncMessage::commandPullGenerationsRequest
ADDeviceSyncMessage::commandPullGenerationsResponse
ADDeviceSyncMessage::commandPullDeltaRequest
ADDeviceSyncMessage::commandPullDeltaResponse
ADDeviceSyncMessage::commandPullSnapshotRequest
ADDeviceSyncMessage::commandPullSnapshotResponse
TQ,R,N,V_sequence
Tq,R,N,V_type
T@"ADDeviceSyncCommandPushGenerationsRequest",R,C,N,V_commandPushGenerationsRequest
T@"ADDeviceSyncCommandPushGenerationsResponse",R,C,N,V_commandPushGenerationsResponse
T@"ADDeviceSyncCommandPullGenerationsRequest",R,C,N,V_commandPullGenerationsRequest
T@"ADDeviceSyncCommandPullGenerationsResponse",R,C,N,V_commandPullGenerationsResponse
T@"ADDeviceSyncCommandPullDeltaRequest",R,C,N,V_commandPullDeltaRequest
T@"ADDeviceSyncCommandPullDeltaResponse",R,C,N,V_commandPullDeltaResponse
T@"ADDeviceSyncCommandPullSnapshotRequest",R,C,N,V_commandPullSnapshotRequest
T@"ADDeviceSyncCommandPullSnapshotResponse",R,C,N,V_commandPullSnapshotResponse
-[ADExternalNotificationRequest dealloc]
notification
T@"UNNotification",&,N,V_notification
appID
T@"NSString",&,N,V_appID
announcementType
Tq,N,V_announcementType
requestInfo
T@"AFRequestInfo",&,N,V_requestInfo
requestWasInterrupted
TB,N,V_requestWasInterrupted
BluetoothA2DPOutput
BluetoothHFP
BluetoothLE
MicrophoneBuiltIn
Speaker
Headphones
MicrophoneWired
HDMIOutput
LineIn
USBAudio
ADAudioSessionPortOther
-[ADAudioSession currentInputRoute]_block_invoke
v24@?0^v8Q16
-[ADAudioSession currentOutputRoute]_block_invoke_3
deviceName
T@"NSString",R,C,N,V_deviceName
T@"NSString",R,C,N,V_uid
TB,R,N,V_isBluetooth
T@"NSString",R,C,N,V_source
T@"NSString",R,C,N,V_destination
_AudioObjectGetScalarArray
v20@?0I8r^{AudioObjectPropertyAddress=III}12
_AudioDeviceRegisterForChangedNotification
v16@?0^v8
_AudioObjectGetCFTypeRef
v12@?0I8
_AudioObjectGetIntValue
last_known_stream_id
hasLastKnownStreamId
lastKnownStreamId
T@"NSString",&,N,V_lastKnownStreamId
ADAudioFileWriterErrorDomain
ADAudioFileWriterExtAudioFileErrorDomain
SavedAudioFile
ADAudioFileWriter.m
type != AFAudioFileTypeNone
AudioFileWriterQueue
-[ADAudioFileWriter _initWithType:pathGenerator:xorFileHandle:priority:]_block_invoke
-[ADAudioFileWriter _close]
-[ADAudioFileWriter _delete]
-[ADAudioFileWriter configureWithAudioStreamBasicDescription:]
AudioFile Already configured
-[ADAudioFileWriter configureWithAudioStreamBasicDescription:]_block_invoke
-[ADAudioFileWriter appendAudioData:]_block_invoke
-[ADAudioFileWriter flushWithCompletion:]_block_invoke
_AudioStreamBasicDescriptionForAFAudioFileType
dataType
dataType = %@
ADDeviceSyncCommandPullSnapshotRequest::dataType
T@"NSString",R,C,N,V_dataType
%@ %@
interface_name
rtt_current
rtt_smoothed
rtt_variance
rtt_best
tx_packets
tx_bytes
tx_retransmit_bytes
tx_unacked
rx_packets
rx_bytes
rx_duplicate_bytes
rx_ooo_bytes
snd_bandwidth
syn_retransmits
tfo_syn_data_acked
hasInterfaceName
interfaceName
T@"NSString",&,N,V_interfaceName
hasRttCurrent
TB,N
rttCurrent
TI,N,V_rttCurrent
hasRttSmoothed
rttSmoothed
TI,N,V_rttSmoothed
hasRttVariance
rttVariance
TI,N,V_rttVariance
hasRttBest
rttBest
TI,N,V_rttBest
hasTxPackets
txPackets
TQ,N,V_txPackets
hasTxBytes
txBytes
TQ,N,V_txBytes
hasTxRetransmitBytes
txRetransmitBytes
TQ,N,V_txRetransmitBytes
hasTxUnacked
txUnacked
TQ,N,V_txUnacked
hasRxPackets
rxPackets
TQ,N,V_rxPackets
hasRxBytes
rxBytes
TQ,N,V_rxBytes
hasRxDuplicateBytes
rxDuplicateBytes
TQ,N,V_rxDuplicateBytes
hasRxOooBytes
rxOooBytes
TQ,N,V_rxOooBytes
hasSndBandwidth
sndBandwidth
TQ,N,V_sndBandwidth
hasSynRetransmits
synRetransmits
TI,N,V_synRetransmits
hasTfoSynDataAcked
tfoSynDataAcked
TI,N,V_tfoSynDataAcked
com.apple.assistant.deviceAuth.session.badCertificateError
com.apple.assistant.deviceAuth.session.StateError
com.apple.assistant.deviceAuth.session.GenericError
ADPeerStreamConnectionErrorDomain
ADPeerStreamConnection.m
ADPeerStreamConnection
ADPeerStreamConnectionFactory
-[ADSharedPeerStreamConnection _wakeUpRemoteForStreamIdentifier:]
-[ADSharedPeerStreamConnection _wakeUpMessageFailedWithError:]
-[ADSharedPeerStreamConnection _initiateOptimisticEagerStreamFetchRetry]
-[ADSharedPeerStreamConnection _initiateOptimisticEagerStreamFetchRetry]_block_invoke
-[ADSharedPeerStreamConnection getSocketForConnection:completion:]_block_invoke
-[ADSharedPeerStreamConnection _getSocketFromDeviceForStreamIdentifier:]
-[ADSharedPeerStreamConnection _getSocketFromDeviceForStreamIdentifier:]_block_invoke
v20@?0i8@"NSError"12
-[ADSharedPeerStreamConnection _invokeSocketCompletionWithCurrentSocketOrError:]
-[ADSharedPeerStreamConnection closeForConnection:]_block_invoke
-[ADSharedPeerStreamConnection _close]
-[ADSharedPeerStreamConnection getRemoteMetrics:]_block_invoke
-[ADSharedPeerStreamConnection _requestStreamEstablishment]
-[ADSharedPeerStreamConnection _setPreferBTClassic:]
has_device
nearby
connected
cloud_connected
last_nearby_status_change
preferring_bt_classic
last_wakeup_duration
last_stream_open_duration
last_stream_open_error
time_since
success
last_ids_message_info
-[ADSharedPeerStreamConnection _updatePairedDeviceInfo]
-[ADSharedPeerStreamConnection service:account:incomingUnhandledProtobuf:fromID:context:]
-[ADSharedPeerStreamConnection _handleGetMetricsMessage:context:]_block_invoke
v16@?0@"SiriCoreConnectionMetrics"8
-[ADSharedPeerStreamConnection _handleReestablishMessage:context:]
-[ADSharedPeerStreamConnection _handleResponseProtobuf:forIdentifier:]
-[ADSharedPeerStreamConnection service:account:identifier:didSendWithSuccess:error:context:]
average_local_RTT
local_message_state
device_blacked_out
-[ADSharedPeerStreamConnection _establishEagerStreamPair]
-[ADSharedPeerStreamConnection service:nearbyDevicesChanged:]
-[ADSharedPeerStreamConnection service:devicesChanged:]
-[ADPeerStreamConnection getSocket:]_block_invoke
v28@?0@"IDSDeviceConnection"8i16@"NSError"20
-[ADPeerStreamConnection getLocalMetrics:]
-[PBCodable(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyWakeUpRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyGetMetricsRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyReestablishRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
IDSLocalMessageStateOthers
IDSLocalMessageStateWaitDequeue
IDSLocalMessageStateWaitAck
IDSLocalMessageStateAcked
Invalid store type
Storage could not be initialized
Unhandled %@
-[ADKnowledgeService handleCommand:forDomain:executionContext:reply:]
-[ADKnowledgeService handleGetValuesForKeys:completion:]
-[ADKnowledgeService handleGetValuesForKeys:completion:]_block_invoke
v24@?0@"NSError"8@"NSArray"16
-[ADKnowledgeService handleSetValuesForKeys:completion:]
entry with no key %@
-[ADKnowledgeService handleDeleteValueForKey:completion:]
-[ADKnowledgeService handleDeleteValueForKey:completion:]_block_invoke
-[ADKnowledgeService handleGetLinkedData:completion:]
-[ADKnowledgeService handleGetLinkedData:completion:]_block_invoke
-[ADKnowledgeService handleSetLinkedData:completion:]
-[ADKnowledgeService handleSetLinkedData:completion:]_block_invoke_2
B32@?0@"AFDeviceContext"8Q16^B24
q24@?0@"AFDeviceContext"8@"AFDeviceContext"16
dismiss
@"ADDeviceRouterResult"28@?0q8q16B24
-[SAQuickStop(DeviceRouting) ad_executionDeviceForDeviceContexts:proximityMap:localDeviceIsFollower:logNearbyDeviceMetrics:]_block_invoke
@"ADDeviceRouterResult"24@?0q8q16
snooze
-[ADDeviceRouter updateContext:]_block_invoke
v32@?0@"NSString"8@"AFDeviceContext"16^B24
-[ADDeviceRouter updateContext:]_block_invoke_2
v12@?0B8
v16@?0@"NSDictionary"8
ADDeviceRouterResultForDeviceContextWithFiringAlarm
ADDeviceRouterResultForDeviceContextWithFiringTimer
B20@?0@"AFDeviceContext"8B16
update-timer
remove-timer
com.apple.assistant.remote-timer-manager
v16@?0@"<AFClockTimerSnapshotMutating>"8
v32@?0@"NSString"8@"AFClockItemStorage"16^B24
v24@?0@"MTTimer"8@"NSError"16
-[ADRemoteTimerManager _sendStereoPartnerAction:timerID:changes:completion:]
com.apple.siri.MockServer
-[ADMockServer _establishConnectionIfNeeded]_block_invoke
mock server connection not available
mock server requires mobile default com.apple.assistant 'Authentication Disabled' set to YES
-[ADMockServer replayWithFileURL:completion:]
content
hasContent
T@"NSData",&,N,V_content
generation
date
items
generation = %@
date = %@
items = %@
ADDeviceSyncSnapshot::generation
ADDeviceSyncSnapshot::date
ADDeviceSyncSnapshot::items
TQ,R,N,V_generation
T@"NSDate",R,C,N,V_date
T@"NSArray",R,C,N,V_items
movingAverage
Tf,R,N,V_movingAverage
-[ADDictationOfflineStatusObserver _updateOfflineDictationStatus:error:]
-[ADDictationOfflineStatusObserver setOfflineDictationStatus:]
offlineDictationStatus
T@"NSDictionary",&,N,V_offlineDictationStatus
Companion Routing Service Queue
-[ADCompanionRoutingService _handleCommand:forDomain:executionContext:reply:]
-[ADCompanionRoutingService _handleCommand:forDomain:executionContext:reply:]_block_invoke_2
-[ADCompanionRoutingService _handleCommand:forDomain:executionContext:reply:]_block_invoke
-[ADCompanionRoutingService preheatDomain:]
-[ADCompanionRoutingService preheatDomain:]_block_invoke
-[ADCompanionRoutingService _processPendingCallResultBlocks]
SystemService
uuid
T@"NSUUID",R,N,V_uuid
timedout
TB,R,N,V_timedout
syncChunkHandler
T@?,C,N,V_syncChunkHandler
No matching event was found
v24@?0@"FBSDisplayMonitor"8@"NSSet"16
T@"<ADDisplayScaleContextCollectorDelegate>",W,N,V_delegate
SyncTimeouts.plist
-[ADSyncBlacklist checkPermissionToSyncSlot:forApp:completion:]_block_invoke
-[ADSyncBlacklist filterBlacklistedAnchorsFrom:includingNewRestrictionsFromResponse:]
v32@?0@"NSString"8@"NSArray"16^B24
B32@?0@"NSString"8@"NSDate"16^B24
Core Speech Service Queue
-[ADCoreSpeechService _handleMessage:messageType:fromDeviceWithIdentifier:completion:]
-[ADCoreSpeechService sendMessageWithPayload:toPeer:withReply:]
https://guzzoni.apple.com
https://seed.siri.apple.com
Logging Assistant Identifier
Speech Identifier
Label
Hostname
Group
Predefined Server
Ace Host
Connection Policy
Connection Policy Date
Connection Policy First Failure Date
Connection Policy Hostname
Locale Identifier
Last Assistant Data Anchor
Server Certificate Data
Validation Data
Validation Expiration
Validation Version
Local Crypto Key Data
Peer Assistant Identifier
Peer Logging Assistant Identifier
Peer Speech Identifier
Peer User Agent String
Peer Hostname
Peer Language Code
Peer Siri Enabled
Watch Data Exists
Watch Assistant Identifier
Watch User Agent String
Watch Language
Watch Override Id
Needs Destruction
Build Version
+[ADAccount accountForIdentifier:]
Predefined Servers
Default Server Override
B32@?0@8@16^B24
Deprecated Servers
-[ADAccount _hostnameOverride]
apple.com
apple.com:
-[ADAccount _hostnameQAOverride]
-[ADAccount save]
label
T@"NSString",C,N,V_label
assistantIdentifier
T@"NSString",C,N,V_assistantIdentifier
loggingAssistantIdentifier
T@"NSString",C,N,V_loggingAssistantIdentifier
T@"NSString",C,N,V_speechIdentifier
group
T@"NSString",C,N,V_group
predefinedServer
T@"NSString",C,N,V_predefinedServer
connectionPolicy
T@"NSDictionary",C,N,V_connectionPolicy
connectionPolicyDate
T@"NSDate",C,N,V_connectionPolicyDate
connectionPolicyHostname
T@"NSString",C,N,V_connectionPolicyHostname
localeIdentifier
T@"NSString",C,N,V_localeIdentifier
lastAssistantDataAnchor
T@"NSString",C,N,V_lastAssistantDataAnchor
validationExpiration
T@"NSDate",C,N,V_validationExpiration
validationVersion
T@"NSNumber",C,N,V_validationVersion
needsDestruction
TB,N,V_needsDestruction
connectionPolicyFailureCount
TQ,N,V_connectionPolicyFailureCount
connectionPolicyFirstFailureDate
T@"NSDate",C,N,V_connectionPolicyFirstFailureDate
-[ADAccount(SharedData) setPairedWatches:]
-[ADAccount(SharedData) updateGizmoData:forUniqueId:]
-[ADAccount(SharedData) watchExistsForAssistantId:]
peerAssistantIdentifier
peerLoggingAssistantIdentifier
peerSpeechIdentifier
peerUserAgentString
peerHostname
peerLanguageCode
peerSiriEnabled
-[ADAccount(RemoteDevice) saRemoteDevice:]
assistantd
ADClientFlowServiceHelper
v24@?0@"<SAAceCommand>"8@"NSError"16
-[ADClientFlowServiceHelper openSensitiveURL:]
+[ADClientFlowServiceHelper performWithTargetQueue:withClientCommand:executionContext:replyHandler:]
Watch dog timed out for command %@
+[ADClientFlowServiceHelper performWithTargetQueue:withClientCommand:executionContext:replyHandler:]_block_invoke
+[ADClientFlowServiceHelper performWithTargetQueue:withClientCommand:executionContext:replyHandler:]_block_invoke_2
-[SABaseCommand(ADClientFlowService) _ad_performWithTargetQueue:executionContext:replyHandler:]
-[SACFSignal(ADClientFlowService) _ad_performWithTargetQueue:executionContext:replyHandler:]_block_invoke
-[SACFSpokenNotificationFlowCommand(ADClientFLowService) _failedWithErrorDescription:error:completion:]
Flow command could not be created for Spoken messages %@
Spoken Notification Command failed with error %@
Spoken Notification Client Flow Failed with %@
Spoken Notification Client Flow unknown response %@
Client flow service
-[ADClientFlowService cancelOperationsForRequestID:]
-[ADClientFlowService handleCommand:forDomain:executionContext:reply:]
com.apple.private.alloy.siri.device
com.apple.assistant.device-sync.messaging-service.rapport
-[ADDeviceSyncMessagingServiceRapport sendMessage:toDeviceWithIdentifier:completion:]
Rapport messaging channel is not supported.
channel
dataTypes
dataTypes = %@
ADDeviceSyncCommandPullGenerationsRequest::dataTypes
T@"NSArray",R,C,N,V_dataTypes
stream_id
hasStreamId
streamId
T@"NSString",&,N,V_streamId
assistantBundle
Build
ADServiceManager.m
Shouldn't already have a service with identifier %@
-[ADServiceManager _removeService:]
-[ADServiceManager _reprioritizeService:]
-[ADServiceManager _buildFliteredInfoDictionaryFromBundleURL:]
-[ADServiceManager _writeBundleServicesCache:toPath:]
-[ADServiceManager _bundleServicesCache:]
-[ADServiceManager _loadServiceFromBundlePath:infoDictionary:]
v32@?0@"NSString"8@"NSDictionary"16^B24
com.apple.siri.vocabularyupdates
-[ADServiceManager serviceForSyncAnchorKey:]
-[ADServiceManager pendServiceReloadNotification:]
-[ADServiceManager reloadServiceForNotification:]
v24@?0@"NSString"8^B16
-[ADServiceManager _reloadServices:]
<%@: Identifier: %@>
Plugins
-[_ADChunkInfo initWithDictionary:]
postGen
T@"NSString",C,N,V_postGen
validity
T@"NSString",C,N,V_validity
SyncSnapshot.plist
v32@?0@"NSString"8@"_ADChunkInfo"16^B24
-[ADSyncSnapshot fetchSentAnchorsOnQueue:completion:]
-[ADSyncSnapshot _scheduleSave]
-[ADSyncSnapshot _noteSendingPostGen:validity:key:appMetaData:]
-[ADSyncSnapshot noteSendingChunk:]
-[ADSyncSnapshot deleteSavedSnapshots]_block_invoke
-[ADSyncSnapshot _readFromDisk]
-[ADSyncSnapshot _readFromDisk]_block_invoke
-[ADSyncSnapshot _pruneAppsCacheWithTruth:]
-[ADSyncSnapshot _save]
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
hasSuccess
TB,N,V_success
%@ name: %@ enabled: %@ dictation: %@ assistant id: %@ logging assistant id: %@ speech id: %@ sharedUserId: %@ logging sharedUserId: %@ language: %@ prev language: %@ outputVoice: %@ %@ prev: outputVoice: %@ %@ hostname: %@ cloud sync enabled: %@ should censor speech: %@ user agent: %@ is location sharing device: %@ notification restricted apps: %@ temperature unit: %@ remote playback device: %@
T@"NSString",C,N,V_assistantId
T@"NSString",C,N,V_loggingAssistantId
T@"NSString",C,N,V_speechId
T@"NSString",C,N,V_sharedUserId
loggingSharedUserId
T@"NSString",C,N,V_loggingSharedUserId
previousLanguageCode
T@"NSString",C,N,V_previousLanguageCode
T@"AFVoiceInfo",C,N,V_previousOutputVoice
T@"AFVoiceInfo",C,N,V_outputVoice
T@"NSString",C,N,V_hostname
T@"NSString",C,N,V_userAgent
T@"NSArray",C,N,V_notificationPreviewRestrictedApps
T@"NSString",C,N,V_temperatureUnit
T@"NSString",C,N,V_airplayRouteId
T@"NSString",C,N,V_storeFrontId
T@"NSString",C,N,V_ekToken
T@"NSString",C,N,V_userToken
T@"NSString",C,N,V_userAssignedName
utsRequiredRequestKeyValuePairs
T@"NSDictionary",C,N,V_utsRequiredRequestKeyValuePairs
T@"NSString",C,N,V_dataSharingOptInStatus
timerURL
isFiring
title
duration
fireTimeInterval
fireDate
firedDate
dismissedDate
lastModifiedDate
v16@?0@"<AFClockTimerMutating>"8
v16@?0@"<ADDeviceSyncItemMutating>"8
incrementalChanges
incrementalChanges = %@
ADDeviceSyncCommandPullDeltaResponse::incrementalChanges
T@"NSArray",R,C,N,V_incrementalChanges
Events
v32@?0@"AFAnalyticsEventRecord"8Q16^B24
ADAnalyticsSendInstrumentationForUEICreate_block_invoke
openTime
firstByteTime
meanPing
provider
packetsSent
bytesSent
bytesRetransmitted
bytesUnacked
packetsReceived
bytesReceived
duplicateBytesReceived
outOfOrderBytesReceived
sendBandwidth
primarySubflowInterfaceName
subflowSwitchCount
ConnectionMethod
ConnectionFallbackFrom
ConnectionEdgeId
ConnectionEdgeType
NSPConnectionFallbackReason
TuscanyConnectionDelay
TuscanyFirstTxByteDelay
CarrierName
SignalStrengthBars
WiFiPhyMode
WiFiChannelInfo
Captive
dnsResolutionTime
startToDNSResolution
connectionEstablishmentTime
connectionStartToEstablishmentTime
tlsHandshakeTime
connectionStartToTLSHandshake
tlsVersion
simSubscriptions
%@.%@.%@
InterfaceNetworkType
Symptoms
voiceTriggerInfo
_ADAnalyticsMetricsCreateTimingsAndEventInformationDictionaries
%@.%u
%@.%tu
SystemBootTime
StreamIdentifier
_ADAnalyticsMetricsGetEventInformationValue
ADSpeechCompressor.m
Already started compressor
AudioConverterNew failed: %x
AudioConverterSetProperty/kAudioConverterEncodeBitRate failed: %x
-[ADSpeechCompressor addAudioSampleData:]_block_invoke_2
Too many buffers
Cannot produce ASPD for PCM
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[ADSpeechCompressor addAudioSampleData:]
v16@?0@"AFHomeAnnouncementSnapshot"8
-[ADHomeAnnouncementContextProvider handleHomeAnnouncementSnapshotUpdate:]
v16@?0@"<AFContextDonation>"8
-[ADTimerContextProvider clockTimerObserver:timerDidFire:]
-[ADTimerContextProvider clockTimerObserver:timerDidDismiss:]
-[ADTimerContextProvider clockTimerObserver:snapshotDidUpdateFrom:to:]
-[ADOpportuneSpeakingModuleEdgeDetector _scheduleTimerForMaxDelay:]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector waitOnDeviceID:forPause:maxDelay:stopOnDetection:executeOnSuccess:onFail:]
-[ADOpportuneSpeakingModuleEdgeDetector waitOnDeviceID:forPause:maxDelay:stopOnDetection:executeOnSuccess:onFail:]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector waitOnDeviceID:forVoice:maxDelay:stopOnDetection:executeOnSuccess:onFail:]
-[ADOpportuneSpeakingModuleEdgeDetector waitOnDeviceID:forVoice:maxDelay:stopOnDetection:executeOnSuccess:onFail:]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector _handleFrame:]
-[ADOpportuneSpeakingModuleEdgeDetector _thresholdDetected]
-[ADOpportuneSpeakingModuleEdgeDetector _stopListeningWithCompletion:]_block_invoke_2
-[ADOpportuneSpeakingModuleEdgeDetector _restartAndExtendListening]
-[ADOpportuneSpeakingModuleEdgeDetector _restartAndExtendListening]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector _restartAndExtendListening]_block_invoke_2
ADOSMED_SPEECH
ADOSMED_PAUSE
-[ADOpportuneSpeakingModuleEdgeDetector opportuneSpeakListener:hasRemoteVADAvailable:]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector opportuneSpeakListener:hasVADAvailable:]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector opportuneSpeakListener:didStopUnexpectly:]_block_invoke
isListening
TB,R,N,V_isListening
ADVoiceAssetsUpdatedNotification
ADFirstUnlockNotification
ADDaemon
keepAlive
-[ADDaemon _setupInternal]
CFNETWORK_DIAGNOSTICS
CFNETWORK_DIAGNOSTICS_NO_SYSLOG
-[ADDaemon _proxyService]
-[ADDaemon _peerLocationService]
-[ADDaemon _clientListenerShouldAcceptNewConnection:]
_setupClientListener
client connection connected
-[ADDaemon _clientListenerShouldAcceptNewConnection:]_block_invoke
client connection was invalidated
-[ADDaemon _dictationListenerShouldAcceptNewConnection:]
-[ADDaemon _dictationListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _settingsListenerShouldAcceptNewConnection:]
-[ADDaemon _settingsListenerShouldAcceptNewConnection:]_block_invoke
com.apple.imagent
com.apple.MobileSMS
-[ADDaemon _synapseSyncListenerShouldAcceptNewConnection:]
-[ADDaemon _synapseSyncListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _managedStorageListenerShouldAcceptNewConnection:]
-[ADDaemon _managedStorageListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _analyticsListenerShouldAcceptNewConnection:]
-[ADDaemon _analyticsListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _analyticsObservationListenerShouldAcceptNewConnection:]
-[ADDaemon _analyticsObservationListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _securityListenerShouldAcceptNewConnection:]
-[ADDaemon _securityListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _notificationServiceListenerShouldAcceptNewConnection:]
-[ADDaemon _notificationServiceListenerShouldAcceptNewConnection:]_block_invoke
com.apple.notifyd.matching
-[ADDaemon _setupNotifyHandlers]_block_invoke
com.apple.MobileAsset.VoiceServices.VoiceResources.new-asset-installed
com.apple.voiceservices.notification.voice-update
com.apple.voicetrigger.EarlyDetect
com.apple.siri.preheat.quiet
com.apple.nanoregistry.devicedidpair
Safety net
com.apple.managedconfiguration.effectivesettingschanged
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.distnoted.matching
-[ADDaemon _setupDistributedNotificationHandlers]_block_invoke
UserInfo
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
com.apple.assistant.sync
-[ADDaemon _setupSyncListener]_block_invoke
com.apple.siri.CacheDelete
r^{__CFDictionary=}20@?0i8r^{__CFDictionary=}12
-[ADDaemon _setupCacheDelete]_block_invoke
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
B32@?0@"NSString"8@"NSDictionary"16^B24
-[ADDaemon _setupCacheDelete]_block_invoke_2
-[ADDaemon _setupCacheDelete]_block_invoke_3
MobileAssistantDaemons_Sim-2152.31.2
-[ADDaemon _daemonDidLaunch]
systemBuild
-[ADDaemon _daemonWillShutdown]
-[ADDaemon _syncCoalesced]
-[ADDaemon _syncForReason:withCoalescing:]
UnlockedWorkQueue
name
sync_now
_ADHandleNewSyncPeer_block_invoke
sync_reason
defrost
mach_time
%@ {request = %@, options = %@, player = %@}
-[ADAudioPlaybackSession _prepareWithOptions:audioSession:error:]
Failed to initialize AVAudioPlayer.
Failed to prepare to play AVAudioPlayer.
-[ADAudioPlaybackSession _startWithOptions:audioSession:preparationHandler:executionHandler:finalizationHandler:]
Attempted to start audio playback session when it is already active.
Attempted to start audio playback session when AVAudioPlayer is already playing.
Failed to play AVAudioPlayer.
-[ADAudioPlaybackSession _stop:]
Stopped playback of AVAudioPlayer.
-[ADAudioPlaybackSession _stop:]_block_invoke
-[ADAudioPlaybackSession _beginInterruption]
-[ADAudioPlaybackSession _endInterruption:]
-[ADAudioPlaybackSession _didNotStartWithError:]
-[ADAudioPlaybackSession _didStopWithError:]
-[ADAudioPlaybackSession _finalizeWithError:]
-[ADAudioPlaybackSession audioPlayerDidFinishPlaying:successfully:]
-[ADAudioPlaybackSession audioPlayerDecodeErrorDidOccur:error:]
request
T@"AFAudioPlaybackRequest",R,C,N,V_request
options
TQ,R,N,V_options
ADSharedDataService
-[ADSharedDataService effectiveSettingsChanged]_block_invoke
-[ADSharedDataService _pushSharedDataToPeerFromNotification:completion:]
v16@?0@"ADSharedData"8
-[ADSharedDataService _sharedDataDidChange:]
-[ADSharedDataService _getDataWithPBCompletion:]_block_invoke
-[ADSharedDataService _setDataFromSharedData:]
v20@?0B8@"NSError"12
-[ADSharedDataService getSharedDataFromPeerUseCache:allowCloudMessaging:completion:]
-[ADSharedDataService watchIsNearbyForAssistantId:]
-[ADSharedDataService _handleExecuteRequestOnRemoteWatch:completion:]
-[ADSharedDataService _handleExecuteRequestOnRemoteWatch:completion:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
-[_ADPBDeviceGetDataRequest(ADSharedDataService) _ad_performWithSharedDataRemote:completion:]
-[_ADPBDeviceStartRemoteRequest(ADSharedDataService) _ad_performWithSharedDataRemote:completion:]
-[_ADPBDeviceExecuteOnRemoteRequest(ADSharedDataService) _ad_performWithSharedDataRemote:completion:]
sessionType
defaultSessionHasResults
timerFiredAndSomeSessionHadResults
sessionHasHigherUsefulnessScore
onlySessionHasResults
sessionCannotHandleRequest
arbiterReusedPreviousWinner
-[ADSessionManager _startSessions:]
-[ADSessionManager _startSession:makeQuiet:]
-[ADSessionManager _resetSessionsAndMakeQuiet:]
-[ADSessionManager resetSessionsAtNextRequestBoundaryWithCompletion:]
-[ADSessionManager endRetryableRequestForCommand:]
-[ADSessionManager _purgeRequestMaps]
-[ADSessionManager _sharedAssistantdIdentifierDidChange:]
-[ADSessionManager _enabledBitsChanged:]
-[ADSessionManager _languageCodeDidChange:]
-[ADSessionManager _languageCodeDidChange:]_block_invoke
-[ADSessionManager _powerChangedMessageType:notificationID:]
will sleep
can sleep
-[ADSessionManager _registerForSleepNotification]
-[ADSessionManager _unregisterForSleepNotification]
-[ADSessionManager _evaluateResultObjects]
-[ADSessionManager _resultObjectsHoldTime]
-[ADSessionManager _resultObjectsTimerFired:]
-[ADSessionManager _queueResultObject:forSession:]
-[ADSessionManager _isDestructive:]
-[ADSessionManager _cancelOtherSessionRequests:forRefId:]
-[ADSessionManager _pickDefaultWinnerWithDroppingSession:]
-[ADSessionManager adviseSessionArbiterToContinueWithPreviousWinner:]
-[ADSessionManager assistantSessionWillStartConnection:]
-[ADSessionManager assistantSession:didOpenConnectionWithPolicyId:routeId:connectionDelay:]
-[ADSessionManager assistantSession:receivedCommand:]
Session Lost
-[ADSessionManager assistantSession:cannotHandleRequest:error:]
-[ADSessionManager assistantSession:receivedError:isRetryableError:]
-[ADSessionManager assistantSessionShouldLogVisibleRequestFailure:forError:]
-[ADSessionManager assistantSessionConnectionDidReset:]
-[ADSessionManager assistantSessionShouldAttemptRetry:]
-[ADSessionManager assistantSession:didChangeRequestIdFrom:toId:]
-[ADSessionManager assistantSessionDidCreateAssistant:]
-[ADSessionManager assistantSession:willRetryOnError:]
-[ADSessionManager assistantSession:beginSessionRetryPreferringWWAN:]
-[ADSessionManager _convertEmbeddedRequestIds:originalCommand:session:]
-[ADSessionManager handleCommand:]
-[ADSessionManager delegateDidHandleCommand:]
-[ADSessionManager _sendCommand:opportunistically:logEvent:doSendPreProcessing:doSendPostProcessing:]_block_invoke
-[ADSessionManager setHasActiveRequest:]
-[ADSessionManager acquireAssertionForReason:]
-[ADSessionManager relinquishAssertion:]
-[ADSessionManager _resetSessionOnRequestBoundaryIfNeeded]
originalRequestId
%@SessionProxyId
-[ADSessionManager setRequestId:]
v16@?0@"NSArray"8
timestamp
aceId
refId
@"NSDictionary"8@?0
local
-[ADSessionManager _logMetricsForSessionFailure:withError:completion:]_block_invoke
-[ADSessionManager _hasAtleastOneActiveSessionBesides:]
%@.%@
-[ADSessionManager _resetWinningState]
-[ADSessionManager _logContextForWinningSession:forReason:forRemoteSessionScore:forLocalSessionScore:]
reason
remoteSessionScore
localSessionScore
-[ADSessionManager sendCommandToLocalSession:]
-[ADSessionManager handleCommandInLocalSession:]
delegate
T@"<ADSessionManagerDelegate>",W,N,V_delegate
interceptor
T@"<ADSessionManagerIntercepting>",W,N,V_interceptor
%@ {timestamp = %llu, reason = %@, duration = %f seconds}
TQ,R,N
T@"NSString",R,C,N
TQ,R,N,V_timestamp
T@"NSString",R,C,N,V_reason
ADMobileBluetoothDeviceDataSource
-[ADMobileBluetoothDeviceDataSource _cleanUpDeviceProxies]
-[ADMobileBluetoothDeviceDataSource _cleanUpWirelessSplitterProxy]
-[ADMobileBluetoothDeviceDataSource _detachFromSession]
-[ADMobileBluetoothDeviceDataSource _attachToSession]
-[ADMobileBluetoothDeviceDataSource _sessionAttached:result:]
-[ADMobileBluetoothDeviceDataSource _sessionDetached:]
-[ADMobileBluetoothDeviceDataSource _sessionTerminated:]
-[ADMobileBluetoothDeviceDataSource _setUpLocalDevice]
-[ADMobileBluetoothDeviceDataSource localDevice:event:result:]
-[ADMobileBluetoothDeviceDataSource _setUpAccessoryManager]
-[ADMobileBluetoothDeviceDataSource accessoryManager:event:device:state:]
-[ADMobileBluetoothDeviceDataSource _handleInEarStatusChangedForBTDevice:fromAccessoryManager:]
-[ADMobileBluetoothDeviceDataSource _handleListeningModeChangedForBTDevice:fromAccessoryManager:]
-[ADMobileBluetoothDeviceDataSource getBTDeviceWithAddress:completion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getBTDeviceWithDeviceUID:completion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getBTLocalDeviceWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getConnectedDevicesWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getPairedDevicesWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource wirelessSplitterSession]
-[ADMobileBluetoothDeviceDataSource _resetConnectedDeviceAddresses]
-[ADMobileBluetoothDeviceDataSource _fetchConnectedDeviceAddresses]
v32@?0@"NSString"8Q16^B24
-[ADMobileBluetoothDeviceDataSource _fetchConnectedDeviceAddresses]_block_invoke
-[ADMobileBluetoothDeviceDataSource _resetPairedDeviceAddresses]
-[ADMobileBluetoothDeviceDataSource _fetchPairedDeviceAddresses]
-[ADMobileBluetoothDeviceDataSource _fetchPairedDeviceAddresses]_block_invoke
%@ {deviceUID = %@}
%@ {address = %@}
-[ADMobileBluetoothDeviceProxy dealloc]
-[ADMobileBluetoothDeviceProxy initWithAddress:dataSource:queue:]
-[ADMobileBluetoothDeviceProxy initWithAddress:dataSource:queue:]_block_invoke
-[ADMobileBluetoothDeviceProxy initWithDeviceUID:dataSource:queue:]
-[ADMobileBluetoothDeviceProxy initWithDeviceUID:dataSource:queue:]_block_invoke
-[ADMobileBluetoothDeviceProxy deviceInfo]_block_invoke
-[ADMobileBluetoothDeviceProxy deviceInfo]
v24@?0^{BTDeviceImpl=}8^{BTAccessoryManagerImpl=}16
-[ADMobileBluetoothDeviceProxy _reload:]
-[ADMobileBluetoothDeviceProxy _reload:]_block_invoke
v16@?0@"AFBluetoothHeadphoneInEarDetectionState"8
v16@?0q8
-[ADMobileBluetoothDeviceProxy _setHeadphoneListeningMode:completion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _updateDeviceInfo:]
v16@?0@"<ADBluetoothDeviceObserver>"8
-[ADMobileBluetoothDeviceProxy _updateHeadphoneInEarDetectionState:]
-[ADMobileBluetoothDeviceProxy _updateHeadphoneListeningMode:]
-[ADMobileBluetoothDeviceProxy _fetchDeviceInfoWithCompletion:]
v16@?0@"<AFBluetoothDeviceInfoMutating>"8
-[ADMobileBluetoothDeviceProxy _fetchDeviceInfoWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _fetchHeadphoneInEarDetectionStateWithCompletion:]
-[ADMobileBluetoothDeviceProxy _fetchHeadphoneInEarDetectionStateWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _fetchHeadphoneListeningModeWithCompletion:]
-[ADMobileBluetoothDeviceProxy _fetchHeadphoneListeningModeWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _changeHeadphoneListeningMode:completion:]
-[ADMobileBluetoothDeviceProxy _changeHeadphoneListeningMode:completion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _accessBTDeviceAndAccessoryManagerUsingBlock:]
-[ADMobileBluetoothDeviceProxy _accessBTDeviceAndAccessoryManagerUsingBlock:]_block_invoke
-[ADMobileBluetoothDeviceProxy _invalidate]
v24@?0@"<ADBluetoothDeviceObserver>"8^B16
address
T@"NSString",R,C,N,V_address
deviceUID
T@"NSUUID",R,C,N,V_deviceUID
-[ADMobileBluetoothWirelessSplitterSessionProxy dealloc]
-[ADMobileBluetoothWirelessSplitterSessionProxy initWithDataSource:queue:]
-[ADMobileBluetoothWirelessSplitterSessionProxy initWithDataSource:queue:]_block_invoke
v16@?0@"AFBluetoothWirelessSplitterSessionInfo"8
-[ADMobileBluetoothWirelessSplitterSessionProxy bluetoothWirelessSplitterSessionStateObserver:didChangeStateFrom:to:]
-[ADMobileBluetoothWirelessSplitterSessionProxy _reload:]
-[ADMobileBluetoothWirelessSplitterSessionProxy _reload:]_block_invoke
-[ADMobileBluetoothWirelessSplitterSessionProxy _updateWirelessSplitterSessionInfo:]
v16@?0@"<ADBluetoothWirelessSplitterSessionObserving>"8
-[ADMobileBluetoothWirelessSplitterSessionProxy _fetchWirelessSplitterSessionInfoWithCompletion:]
-[ADMobileBluetoothWirelessSplitterSessionProxy _fetchWirelessSplitterSessionInfoWithCompletion:]_block_invoke
v16@?0^{BTLocalDeviceImpl=}8
-[ADMobileBluetoothWirelessSplitterSessionProxy _accessBTLocalDeviceUsingBlock:]
-[ADMobileBluetoothWirelessSplitterSessionProxy _accessBTLocalDeviceUsingBlock:]_block_invoke
-[ADMobileBluetoothWirelessSplitterSessionProxy _invalidate]
v24@?0@"<ADBluetoothWirelessSplitterSessionObserving>"8^B16
ADBTResult
_ADBTDeviceGetAddress
_ADBTDeviceGetDeviceInfo
_ADBTDeviceGetHeadphoneInEarDetectionState
v16@?0@"<AFBluetoothHeadphoneInEarDetectionStateMutating>"8
_ADBTDeviceGetHeadphoneListeningMode
_ADBTDeviceSetHeadphoneListeningMode
_ADBTLocalDeviceGetWirelessSplitterSessionInfo
v16@?0@"<AFBluetoothWirelessSplitterSessionInfoMutating>"8
Response Time
Total Count
Library/Assistant/ServiceStatistics
-[ADServiceStatistics _statsDirectory]_block_invoke
%@.plist
-[ADServiceStatistics _statsDict]
-[ADServiceStatistics _saveStats]
-[ADServiceStatistics markIncomingCommand:]
-[ADServiceStatistics markResponseForCommand:]
serviceIdentifier
T@"NSString",R,N,V_serviceIdentifier
-[ADDictationSession dealloc]
-[ADDictationSession _setSpeechRecognitionTransactionState:]
_setSpeechRecognitionTransactionState:
-[ADDictationSession _setAudioFileIOTransactionState:]
_setAudioFileIOTransactionState:
T@"NSString",R,C,N,V_uuid
T@"NSString",R,C,N,V_languageCode
T@"AFDictationOptions",R,N,V_options
T@"AFSpeechRequestOptions",R,N,V_speechRequestOptions
speechRecognitionTransactionState
Tq,R,N,V_speechRecognitionTransactionState
audioFileIOTransactionState
Tq,R,N,V_audioFileIOTransactionState
T@"<ADSessionLocalConnectionDelegate>",W,N,V_delegate
Call Observer Queue
-[ADCallObserver startObservingCallStateWithDelegate:]
-[ADCallObserver stopObservingCallStateWithCompletion:]
ADCurrentHomeKitHomeChanged
ContextHistory
-[ADContextManager init]
/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-2152.26/ADContextManager.m
0 && "Please use the designated initializer."
-[ADContextManager initWithDelegate:]
BackgroundContextQueue
ContextQueue
-[ADContextManager reset]
-[ADContextManager dealloc]
-[ADContextManager keepReportingNowPlayingTimingEventsHeuristically]
com.apple.Maps
ContextCollation
-[ADContextManager getAppContextForDeviceState:applicationInfos:completion:]_block_invoke
-[ADContextManager getAppContextForDeviceState:applicationInfos:completion:]_block_invoke_2
v24@?0@"SAUserActivity"8@"NSString"16
-[ADContextManager _getCurrentUserActivityOnQueue:completion:]_block_invoke
v24@?0@"NSUserActivity"8@"NSError"16
v32@?0@"NSUUID"8@"NSString"16@"NSError"24
com.apple.reminders
-[ADContextManager getAlertContextWithBulletins:externalAlarmSnapshot:timerSnapshot:nlAlertContextCompletion:fullAlertContextCompletion:]_block_invoke
-[ADContextManager getAlertContextWithBulletins:externalAlarmSnapshot:timerSnapshot:nlAlertContextCompletion:fullAlertContextCompletion:]_block_invoke_2
-[ADContextManager getAlertContextWithBulletins:externalAlarmSnapshot:timerSnapshot:nlAlertContextCompletion:fullAlertContextCompletion:]_block_invoke_4
ADContextManager.m
-[ADContextManager _getNowPlayingMediaIsResumable:]
-[ADContextManager getContextIncludingKeys:excludingMandatoryKeys:timeOut:completion:]
-[ADContextManager getContextIncludingKeys:excludingMandatoryKeys:timeOut:completion:]_block_invoke
-[ADContextManager getContextIncludingKeys:excludingMandatoryKeys:timeOut:completion:]_block_invoke_2
-[ADContextManager getContextIncludingKeys:excludingMandatoryKeys:timeOut:completion:]_block_invoke_3
-[ADContextManager getDeviceContextsForKeys:forForeignRequestID:includesNearbyDevices:completion:]
v16@?0@"<AFServiceDeviceContextMutating>"8
-[ADContextManager getDeviceContextsForKeys:forForeignRequestID:includesNearbyDevices:completion:]_block_invoke_3
@16@?0@"AFDeviceContext"8
v16@?0@"AFDeviceCapabilities"8
-[ADContextManager _fetchContextSnapshotForCurrentRequest]
-[ADContextManager _fetchContextSnapshotForCurrentRequest]_block_invoke
context_collector_available
local_is_collector
B16@?0@"AFDeviceContext"8
B16@?0@"AFDeviceCapabilities"8
duration_in_ms
devices_count
-[ADContextManager getContextSnapshotForCurrentRequestWithCompletion:]_block_invoke
-[ADContextManager pushContextSnapshotForCurrentRequestWithID:toDevice:]
-[ADContextManager requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke
-[ADContextManager _loadContextHistory]
-[ADContextManager _saveContextHistory]
-[ADContextManager _startPeriodicContextFetchFromNearbyDevices]
-[ADContextManager _startPeriodicContextFetchFromNearbyDevices]_block_invoke_2
-[ADContextManager _startPeriodicContextFetchFromNearbyDevices]_block_invoke
-[ADContextManager _stopPeriodicContextFetchFromNearbyDevices]
-[ADContextManager _getBackgroundContext:]
(cache read)
(regenerating all values)
-[ADContextManager _getBackgroundContext:]_block_invoke
-[ADContextManager preheatBackgroundContext]
-[ADContextManager getBackgroundContext:]
-[ADContextManager _registerForBGUpdates]
-[ADContextManager _unregisterForBGUpdates]
-[ADContextManager _setCollectingContext:]
-[ADContextManager contextCollectorChangedToDevicesWithIdentifiers:localDeviceIsCollector:]_block_invoke
-[ADContextManager _handleContextSnapshotPush:completion:]
-[ADContextManager _handleContextSnapshotPush:completion:]_block_invoke
com.apple.assistant.music.fusetoken
-[ADContextManager _updateMusicPersonalizationTokenWithContext:completion:]_block_invoke_2
-[ADContextManager _updateMusicPersonalizationTokenWithContext:completion:]_block_invoke
v24@?0@"NSMutableDictionary"8@"NSError"16
assistantd_current_home
com.apple.homed.current-home.changed
ADObserveCurrentHomeKitHomeChanges_block_invoke_2
current-home-notification
isNavigating
v16@?0@"SALocalSearchGetNavigationStatusCompleted"8
-[ADContextManager _updateNavStatusWithContext:completion:]_block_invoke_2
v24@?0@"AceObject"8@"NSError"16
-[ADContextManager _scheduleNowPlayingRefreshForReason:]_block_invoke
-[ADContextManager _scheduleNowPlayingRefreshForReason:]
-[ADContextManager _updateNowPlayingInfoWithContext:completion:]
-[ADContextManager _updateNowPlayingInfoWithContext:completion:]_block_invoke
-[ADContextManager _notePossiblePlayPausedStateChange:]
poll
-[ADContextManager _reallyUpdateBackgroundContextIfNowPlayingInfoChangedForReason:]
-[ADContextManager _updateBackgroundContextIfNowPlayingInfoChanged:]
PhoneCallState-notification
Invalid context data type
Nil Myriad advertisement context
-[ADContextManager pushMyriadAdvertismentContextToContextCollector:completion:]_block_invoke_2
-[ADContextManager _updateHomeAnnouncementWithContext:supplementalSnapshot:completion:]
-[ADContextManager _updateHomeAnnouncementWithContext:supplementalSnapshot:completion:]_block_invoke
-[ADContextManager _updateHomeAnnouncementWithContext:supplementalSnapshot:completion:]_block_invoke_2
-[ADContextManager _handleHomeAnnouncementSnapshotUpdate:]
localContextStore
T@"ADLocalContextStore",R,N,V_localContextStore
remoteContextStore
T@"ADRemoteContextStore",R,N,V_remoteContextStore
collectingContext
TB,N,G_isCollectingContext,S_setCollectingContext:,V_collectingContext
T@"<ADContextManagerDelegate>",W,N,V_delegate
didChange
NSUserActivity
initNSUserActivity_block_invoke
classNSUserActivity
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
MediaPlayerLibrary
ADAlertContextQueue
ICLibraryAuthServiceClientTokenProvider
initICLibraryAuthServiceClientTokenProvider_block_invoke
classICLibraryAuthServiceClientTokenProvider
/System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud
iTunesCloudLibrary
aceDictionary
T@"NSDictionary",C,N,V_aceDictionary
T@"NSString",C,N,V_oldId
timerManagerProxyForIntentSupport
T@"<MTTimerManagerIntentSupport>",R,N
Message sending failed.
Message sending timed out.
ADSettingsRequestHandler.m
-[AFSiriRequest(ADSettingsRequestHandler) _ad_handleSettingsRequestWithCompletionHandler:]
Unable to set setting with type "Unknown"
Unable to get setting with type "Unknown"
-[ADRequestDelayManager startDelayingWithType:success:]_block_invoke
-[ADRequestDelayManager stopDelayingAndSendCommands:completion:]_block_invoke
-[ADRequestDelayManager _resetDetectorWithCompletion:]
-[ADRequestDelayManager releaseStoredContextCommandsAndSendCommands:]
-[ADRequestDelayManager beginTimerForContextCommands]
-[ADRequestDelayManager beginTimerForContextCommands]_block_invoke
-[ADRequestDelayManager _delayForBoronWithSuccess:]_block_invoke_2
-[ADRequestDelayManager _delayForBoronWithSuccess:]_block_invoke
-[ADRequestDelayManager interceptCommand:completion:]
-[ADRequestDelayManager interceptCommand:completion:]_block_invoke
T@"<ADRequestDelayManagerDelegate>",W,N,V_delegate
isDelaying
TB,V_isDelaying
T@"<ADAcousticIDHelperDelegate>",W,N,V_delegate
com.apple.siri.location.Error
ADPeerLocationRemote
-[ADPeerLocationRemote _startBestLocationTimer]
-[ADPeerLocationRemote _startBestLocationTimer]_block_invoke
-[ADPeerLocationRemote _cancelBestLocationTimer]
-[ADPeerLocationRemote _startUpdatingLocation]
-[ADPeerLocationRemote _getBestLocationWithCompletion:]_block_invoke
v24@?0@"_ADPBLocationSetPeerLocationRequest"8@"NSError"16
-[ADPeerLocationRemote _getBestLocationWithCompletion:]_block_invoke_2
looking up best location on behalf of peer
-[ADPeerLocationRemote _executeBestLocationCompletionWithLocation:error:]
found best location on behalf of peer
-[ADPeerLocationRemote peerConnection:handlePBSubclass:completion:]
-[ADPeerLocationRemote locationManager:didUpdateLocations:]
-[ADPeerLocationRemote locationManager:didFailWithError:]
-[ADPeerLocationRemote locationManager:didChangeAuthorizationStatus:]
-[ADPeerLocationRemote locationManagerDidPauseLocationUpdates:]
-[ADPeerLocationRemote locationManagerDidResumeLocationUpdates:]
-[_ADPBLocationGetPeerLocationRequest(ADPeerLocationRemote) _ad_performWithPeerLocationManagerRemote:completion:]
siri_enabled
speech_id
language_code
assistant_id
hostname
activity_continuation_allowed
dictation_enabled
shared_id
previous_langauge_code
previous_output_voice
output_voice
cloud_sync_enabled
should_censor_speech
user_agent
is_location_sharing_device
notification_preview_restricted_apps
temperature_unit
logging_assistant_id
logging_shared_id
store_front_id
airplay_route_id
ek_token
user_token
is_remote_playback_device
user_assigned_name
uts_required_request_data
data_sharing_opt_in_status
hasSiriEnabled
siriEnabled
TB,N,V_siriEnabled
hasSpeechId
speechId
T@"NSString",&,N,V_speechId
hasLanguageCode
languageCode
T@"NSString",&,N,V_languageCode
hasAssistantId
assistantId
T@"NSString",&,N,V_assistantId
hasHostname
T@"NSString",&,N,V_hostname
hasActivityContinuationAllowed
activityContinuationAllowed
TB,N,V_activityContinuationAllowed
hasDictationEnabled
dictationEnabled
TB,N,V_dictationEnabled
hasSharedId
sharedId
T@"NSString",&,N,V_sharedId
hasPreviousLangaugeCode
previousLangaugeCode
T@"NSString",&,N,V_previousLangaugeCode
hasPreviousOutputVoice
previousOutputVoice
T@"_ADPBDeviceOutputVoiceInfo",&,N,V_previousOutputVoice
hasOutputVoice
outputVoice
T@"_ADPBDeviceOutputVoiceInfo",&,N,V_outputVoice
hasCloudSyncEnabled
cloudSyncEnabled
TB,N,V_cloudSyncEnabled
hasShouldCensorSpeech
shouldCensorSpeech
TB,N,V_shouldCensorSpeech
hasUserAgent
userAgent
T@"NSString",&,N,V_userAgent
hasIsLocationSharingDevice
isLocationSharingDevice
TB,N,V_isLocationSharingDevice
notificationPreviewRestrictedApps
T@"NSMutableArray",&,N,V_notificationPreviewRestrictedApps
hasTemperatureUnit
temperatureUnit
T@"NSString",&,N,V_temperatureUnit
hasLoggingAssistantId
loggingAssistantId
T@"NSString",&,N,V_loggingAssistantId
hasLoggingSharedId
loggingSharedId
T@"NSString",&,N,V_loggingSharedId
hasStoreFrontId
storeFrontId
T@"NSString",&,N,V_storeFrontId
hasAirplayRouteId
airplayRouteId
T@"NSString",&,N,V_airplayRouteId
hasEkToken
ekToken
T@"NSString",&,N,V_ekToken
hasUserToken
userToken
T@"NSString",&,N,V_userToken
hasIsRemotePlaybackDevice
isRemotePlaybackDevice
TB,N,V_isRemotePlaybackDevice
hasUserAssignedName
userAssignedName
T@"NSString",&,N,V_userAssignedName
hasUtsRequiredRequestData
utsRequiredRequestData
T@"_ADPBDeviceStringKeyValueDictionary",&,N,V_utsRequiredRequestData
hasDataSharingOptInStatus
dataSharingOptInStatus
T@"NSString",&,N,V_dataSharingOptInStatus
includesFamily
includesHome
includesFamily = %@
includesHome = %@
ADRapportLinkDiscoveryOptions::includesFamily
ADRapportLinkDiscoveryOptions::includesHome
Tq,R,N,V_includesFamily
Tq,R,N,V_includesHome
ADPeerLocationConnection
v16@?0@"CLLocation"8
-[ADPeerLocationConnection getBestLocationWithCompletion:]_block_invoke
AcePassthroughSiriRequestClientBoundCommand
ADAcePassthroughSiriRequest.m
replyCommand
-[ADPeerConnectionProvider headerDataWithForceReconnect:]
-[ADPeerConnectionProvider _getNWConnectionWithInitialData:completion:]_block_invoke_2
-[ADPeerConnectionProvider _getNWConnectionWithInitialData:completion:]_block_invoke
Peer
ADBuddyStateDidChangeNotification
Buddy Monitor Queue
-[ADBuddyMonitor init]
complete
running
-[ADBuddyMonitor _updateBuddyState]_block_invoke
sourceIDSFirstRoutableDestination
source_airplay_id
hasSourceIDSFirstRoutableDestination
T@"NSString",&,N,V_sourceIDSFirstRoutableDestination
hasSourceAirplayId
sourceAirplayId
T@"NSString",&,N,V_sourceAirplayId
RecordedAudio
TrimmedAudio
gender
hasGender
Ti,N,V_gender
UNKNOWN
MALE
FEMALE
(unknown: %i)
-[ADExternalRequestListener listen]_block_invoke
_ADHandleNewExternalRequestPeer_block_invoke
_ADHandleExternalRequestLocalRequest_block_invoke
v16@?0@"SAStartLocalRequest"8
_ADHandleExternalRequestStartRequest
v16@?0@"AFSiriActivationResult"8
context_types_in_request
context_types_in_response
included_context_types_in_request
excluded_context_keys_in_request
included_context_types_in_response
excluded_context_keys_in_response
request_id
context_snapshot
com.apple.siri.TimerStore
-[ADDiagnosticsManager updateLatencyDiagnosticConfiguration:completion:]
-[ADDiagnosticsManager updateLatencyDiagnosticConfiguration:completion:]_block_invoke
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
com.apple.assistant.device-sync.coordinator
-[ADDeviceSyncCoordinator deviceSyncMessageService:didFoundDeviceWithIdentifier:]
v32@?0@"NSString"8@"<ADDeviceSyncDataConsuming>"16^B24
-[ADDeviceSyncCoordinator deviceSyncMessageService:didLostDeviceWithIdentifier:]
-[ADDeviceSyncCoordinator deviceSyncMessageService:didReceiveMessage:fromDeviceWithIdentifier:completion:]
-[ADDeviceSyncCoordinator deviceSyncDataProviderDidUpdate:]
-[ADDeviceSyncCoordinator _sessionWithDeviceIdentifier:]
v32@?0@"NSString"8@"<ADDeviceSyncMessagingService>"16^B24
com.apple.assistant.device-sync.session.%@
v16@?0Q8
v32@?0@"NSString"8@"ADDeviceSyncSession"16^B24
com.apple.siri.bksopenapplication.ErrorDomain
ADSiriAppLaunchRequestHandler.m
[request isKindOfClass:[ADAcePassthroughSiriRequest class]]
v28@?0@"AFSiriResponse"8B16@"NSError"20
T@"<ADSiriAppLaunchRequestHandlerDelegate>",W,N,V_delegate
v24@?0@"BSProcessHandle"8@"NSError"16
-[SAAppsGetRestrictedApps(ADSiriAppLaunchRequestHandler) _ad_handleAppLaunchCommandWithRequest:completion:]
System
hidden
v24@?0@"LSApplicationProxy"8^B16
-[SAAppsAppSearch(ADSiriAppLaunchRequestHandler) _ad_handleAppLaunchCommandWithRequest:completion:]
FBSOpenApplicationService
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptions
FBSOpenApplicationServiceErrorDomain
initFBSOpenApplicationServiceErrorDomain_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-2152.26/ADSiriAppLaunchRequestHandler.m
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
INAlternativeAppNames
INAlternativeAppName
B24@?0@"<ADDeviceSyncMessageSending>"8^B16
v24@?0@"ADDeviceSyncSnapshot"8@"NSError"16
-[ADDeviceSyncSession _receiveMessage:completion:]
v16@?0@"<ADDeviceSyncMessageMutating>"8
v16@?0@"ADDeviceSyncCommandPushGenerationsRequest"8
v16@?0@"ADDeviceSyncCommandPullGenerationsRequest"8
v16@?0@"ADDeviceSyncCommandPullDeltaRequest"8
v16@?0@"ADDeviceSyncCommandPullSnapshotRequest"8
There's no supported request in incoming message.
-[ADDeviceSyncSession _handlePingWithCompletion:]
-[ADDeviceSyncSession _handlePushGenerationsByDataType:completion:]
No data consumer for data types %@.
-[ADDeviceSyncSession _handlePullGenerationsForDataTypes:completion:]
No data provider for data types %@.
-[ADDeviceSyncSession _handlePullGenerationsForDataTypes:completion:]_block_invoke
-[ADDeviceSyncSession _handlePullDeltaForDataType:generation:limit:completion:]
-[ADDeviceSyncSession _handlePullDeltaForDataType:generation:limit:completion:]_block_invoke_2
-[ADDeviceSyncSession _handlePullDeltaForDataType:generation:limit:completion:]_block_invoke
No data provider for data type %@.
-[ADDeviceSyncSession _handlePullSnapshotForDataType:completion:]
-[ADDeviceSyncSession _handlePullSnapshotForDataType:completion:]_block_invoke_2
-[ADDeviceSyncSession _handlePullSnapshotForDataType:completion:]_block_invoke
-[ADDeviceSyncSession _sendMessage:completion:]
v24@?0@"ADDeviceSyncMessage"8@"NSError"16
-[ADDeviceSyncSession _pingWithCompletion:]
-[ADDeviceSyncSession _pingWithCompletion:]_block_invoke_3
There's no reply message.
-[ADDeviceSyncSession _pingWithCompletion:]_block_invoke
The sequence of the reply message is invalid.
There's no supported response in reply message.
-[ADDeviceSyncSession _pushGenerationsByDataType:completion:]
-[ADDeviceSyncSession _pushGenerationsByDataType:completion:]_block_invoke_2
-[ADDeviceSyncSession _pushGenerationsByDataType:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPushGenerationsResponse"8
-[ADDeviceSyncSession _pullGenerationsForDataTypes:completion:]
-[ADDeviceSyncSession _pullGenerationsForDataTypes:completion:]_block_invoke_3
-[ADDeviceSyncSession _pullGenerationsForDataTypes:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPullGenerationsResponse"8
-[ADDeviceSyncSession _pullDeltaForDataType:generation:limit:completion:]
-[ADDeviceSyncSession _pullDeltaForDataType:generation:limit:completion:]_block_invoke_2
-[ADDeviceSyncSession _pullDeltaForDataType:generation:limit:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPullDeltaResponse"8
-[ADDeviceSyncSession _pullSnapshotForDataType:completion:]
-[ADDeviceSyncSession _pullSnapshotForDataType:completion:]_block_invoke_3
-[ADDeviceSyncSession _pullSnapshotForDataType:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPullSnapshotResponse"8
messageReceiver
T@"<ADDeviceSyncMessageReceiving>",R,N
AcePassthroughSiriResponseReplyCommand
<%@: %p %@>
-[ADSettingsService _getVoiceOver:completion:]
-[ADSettingsService _setVoiceOver:completion:]
B8@?0
-[ADSettingsService _getPlaybackAudioRoute:completion:]
-[ADSettingsService _setBoolSetting:currentValueBlock:setValueBlock:completion:]
Dry Run
T@"<ADRecordingInfoProviding>",R,N,V_recordingInfoProvider
BoronDeviceFound
VoicePauseDetected
Voice Activity
-[ADOpportuneSpeakingVoiceActivityModel setSpeakable:]_block_invoke
-[ADOpportuneSpeakingVoiceActivityModel setSpeakable:]_block_invoke_2
coded_location
hasCodedLocation
codedLocation
T@"NSData",&,N,V_codedLocation
com.apple.siri.acousticsignature
ADAcousticFingerprinter
-[ADAcousticFingerprinter _connectionInterrupted]
-[ADAcousticFingerprinter _connectionInvalidated]
-[ADAcousticFingerprinter _configureWithCurrentASBD]
-[ADAcousticFingerprinter _convertPCMDataForFingerprinting:]
-[ADAcousticFingerprinter appendPCMData:]_block_invoke
v16@?0@"NSData"8
-[ADAcousticFingerprinter flush]_block_invoke_2
T@"<ADAcousticFingerprinterDelegate>",W,N,V_delegate
ASXSampleRateFromInt
events
stream_uid
delivery_stream
context_data
context_data_type
date_created
status
TEXT
INTEGER
BLOB
REAL
events_index_stream_uid
events_index_timestamp
events_index_date_created_status
events_index_covering_status_stream_uid
events_index_event_batch
com.apple.assistant.analytics-store
-[ADAnalyticsStore purgeDeletedEventRecordsBeforeOrEqualToDate:completion:]
-[ADAnalyticsStore purgeWithCompletion:]
Large File Size (%@)
-[ADAnalyticsStore purgeWithCompletion:]_block_invoke
-[ADAnalyticsStore resetWithCompletion:]
Settings Client
-[ADAnalyticsStore resetWithCompletion:]_block_invoke
-[ADAnalyticsStore checkpointWithCompletion:]
-[ADAnalyticsStore checkpointWithCompletion:]_block_invoke_2
-[ADAnalyticsStore _resetForReason:error:]
unknown
-[ADAnalyticsStore _preparedDatabaseWithError:]
retryCount
events_index_date_inserted
events_index_date_created
v24@?0@"NSString"8@"NSArray"16
-[ADAnalyticsStore _insertEventRecords:error:]
-[ADAnalyticsStore _deleteEventRecordsBeforeOrEqualToTimestamp:deliveryStream:eventStreamUID:error:]
-[ADAnalyticsStore _purgeDeletedEventRecordsBeforeOrEqualToDate:error:]
-[ADAnalyticsStore _fetchEventStreamUIDsWithError:]
-[ADAnalyticsStore _fetchEventRecords:afterTimestamp:eventStreamUID:deliveryStream:error:]
-[ADAnalyticsStore _fetchEventRecordsCreatedAfterDate:error:]
path
T@"NSString",R,C,N,V_path
ADFlowServiceListener
-[ADFlowServiceListener setupListener]_block_invoke
-[ADFlowServiceListener listener:shouldAcceptNewConnection:]
-[ADFlowServiceListener listener:shouldAcceptNewConnection:]_block_invoke
-[ADFlowServiceListener getPersonalSettingsForSharedUserID:completion:]
User Settings unavailable
com.apple.mobileslideshow
-[SANodeIntent(ADGenericIntentRequestTransformer) ad_filteredDictionaryWithAppID:]
ADGenericIntentRequestTransformer.m
[aceCommand isKindOfClass:[SAIntentGroupSupportedIntentResponse class]]
com.apple.ActivityMonitorApp
com.apple.NanoMail
-[ADCommandCenter(NanoServices) taskmaster:didReceivePunchoutOutcome:]_block_invoke
-[ADCommandCenter(NanoServices) taskmaster:didLaunchApplicationForRequestWithId:]
-[ADCommandCenter(NanoServices) appLaunchHandler:didLaunchAppForRequestId:]
ADSiriUserNotificationRequestUUID
endpointMode
startWaitTime
interspeechWaitTime
endWaitTime
T@"<ADPassthroughEndpointerDelegate>",W,N,V_delegate
functionalEndpointer
T@"<Endpointer>",&,N,V_functionalEndpointer
com.apple.assistant.local-request-provider
ASSISTANT_SERVICES_LOCAL_MUSIC_SUBSCRIPTION_LEASE_%@
com.apple.siri.client-state-changed
-[ADMediaPlaybackContextProvider nowPlayingObserver:playbackStateDidChangeFrom:to:]
-[ADMediaPlaybackContextProvider nowPlayingObserverNowPlayingInfoDidChange:]
-[ADMediaPlaybackContextProvider _handlePlaybackStateDidChangeToState:fromState:completion:]_block_invoke
-[ADMediaPlaybackContextProvider _handlePlaybackStateDidChangeToState:fromState:completion:]_block_invoke_2
v16@?0@"NSString"8
-[ADMediaPlaybackContextProvider _updateProximityObservationsForPlayState:]
ADSiriRequestSucceededResponseTransformer.m
Request succeeded response transformer expected response of type %@, but got %@ instead; request command: %@
com.apple.mobiletimer.IntentsExtension
localExtensionIdentifier
-[ADClientLiteListener listener:shouldAcceptNewConnection:]
-[ADClientLiteListener doClientWork:withTimeoutBlock:]
-[ADClientLiteListener doClientWork:withTimeoutBlock:]_block_invoke
-[ADClientLiteListener doDelayedClientWorkIfAny]
-[ADClientLiteListener _doDelayedClientWorkIfAny:]_block_invoke
-[ADClientLiteListener _incrementAndTestExecutionCount]
-[ADClientLiteListener _decrementAndTestExecutionCount]
-[ADClientLite handleRemoteCommand:afterCurrentRequest:isOneWay:completion:]
v24@?0B8@"NSError"12B20
v32@?0@"NSNumber"8@"NSError"16@"NSNumber"24
-[ADClientLite handleRemoteCommand:afterCurrentRequest:isOneWay:completion:]_block_invoke_2
v16@?0@"SABaseCommand"8
v24@?0@"SABaseCommand"8@"NSError"16
-[ADClientLite adRequestDidReceiveCommand:reply:]_block_invoke
currentToken
T@"NSUUID",R,C,N,V_currentToken
speechRequestOptions
T@"AFSpeechRequestOptions",R,C,N,V_speechRequestOptions
completion
T@?,R,C,N,V_completion
ADExtensionServiceIdentifier
-[ADExtensionService handleCommand:forDomain:executionContext:reply:]
-[ADExtensionService handleCommand:forDomain:executionContext:reply:]_block_invoke_2
-[ADExtensionService handleCommand:forDomain:executionContext:reply:]_block_invoke
v32@?0@"NSString"8@"NSString"16@"NSUUID"24
-[ADExtensionService resetExternalResources]
-[ADExtensionService cancelOperationsForRequestID:]
-[ADExtensionService extensionService:prepareIntent:]
B16@?0@"INPerson"8
-[ADExtensionService extensionService:prepareForStartPlaybackWithDestination:intent:completion:]
-[ADExtensionService extensionService:handleFailedStartPlaybackWithDestination:completion:]
-[ADExtensionService _meCard]
a meCard
(null)
-[ADExtensionService _replacement:forString:meCardCache:]
-[ADExtensionService _preparePerson:meCardCache:]
-[ADExtensionService _prepareNameComponents:meCardCache:]
commandCenterClient
T@"<ADCommandCenterClient>",W,N,V_commandCenterClient
com.apple.private.alloy.siri.proxy
ADRemoteContextStore
-[ADRemoteContextStore startCollectingContext]_block_invoke
-[ADRemoteContextStore stopCollectingContext]_block_invoke
-[ADRemoteContextStore getContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:]
-[ADRemoteContextStore getContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:]_block_invoke
-[ADRemoteContextStore _fetchContextFromCollectorAndForceFetchingFromDevices:completion:]
-[ADRemoteContextStore setDeviceContext:withIncludedKeys:excludedKeys:forDeviceWithIDSDeviceUniqueIdentifier:withCompletion:]_block_invoke
deviceContextUpdate
-[ADRemoteContextStore getSerializedDeviceContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:]_block_invoke
-[ADRemoteContextStore _dumpStateForReason:]
deviceCount
TQ,N,V_deviceCount
T@"NSDate",&,N,V_timestamp
ADDeviceCircleManager
-[ADDeviceCircleManager getContextCollectorDeviceIdentifiersWithCompletion:]_block_invoke
primary
v32@?0@"NSString"8@"SiriCoreConnectionTCPInfoMetrics"16^B24
_ad_metrics
T@"SiriCoreConnectionMetrics",C,N,S_ad_setMetrics:
-[AFSiriRequest(ADTimerRequestHandler) _ad_handleTimerRequestWithCompletionHandler:]
v24@?0@"STTimer"8@"NSError"16
v16@?0@"<ADTimerStoring>"8
ADPeerCloudServiceActiveAccountStatusDidChangeNotification
T@"NSString",C,N,V_identifier
outstandingResponses
Tq,N,V_outstandingResponses
responseType
TS,N,V_responseType
responses
T@"NSMutableDictionary",&,N,V_responses
T@?,C,N,V_completion
timeoutTimer
T@"AFWatchdogTimer",&,N,V_timeoutTimer
peer
T@"ADPeerInfo",&,N,V_peer
proto
T@"PBCodable",&,N,V_proto
error
T@"NSError",&,N,V_error
ADPeerCloudService
com.apple.private.alloy.siri.icloud
-[ADPeerCloudService _init]_block_invoke
-[ADPeerCloudService _sendProto:ofType:originalRequestId:toPeers:responseType:completion:]
-[ADPeerCloudService _uniqueIdentifierForPeer:]
-[ADPeerCloudService _peerInfoForIDSDeviceUniqueIdentifier:allowNonPeers:]
v32@?0@"NSString"8@"NSString"16^B24
-[ADPeerCloudService _updateActiveAccountState]
-[ADPeerCloudService _companionIdentifierDidChangeNotification:]
-[ADPeerCloudService _airplayRouteDidChange:]
-[ADPeerCloudService _updateAirPlayRouteIdentifierWithCompletion:]
-[ADPeerCloudService _updateAirPlayRouteIdentifierWithCompletion:]_block_invoke_2
-[ADPeerCloudService sendSharedData:toPeers:]
-[ADPeerCloudService setSharedDataObserver:withHandle:]
-[ADPeerCloudService _notifyObserversOfSharedData:fromPeer:]
-[ADPeerCloudService getSharedDataFromPeers:completion:]
-[ADPeerCloudService getSharedDataFromPeers:completion:]_block_invoke_2
v24@?0@"NSSet"8@"NSError"16
-[ADPeerCloudService _notifyObserversOfSharedDataRequestFromPeer:completion:]
-[ADPeerCloudService _startRemoteRequest:onPeers:completion:]
-[ADPeerCloudService _startRemoteRequest:onPeers:completion:]_block_invoke_2
-[ADPeerCloudService startRemoteExecution:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:]
-[ADPeerCloudService startRemoteSerialzedCommandExecution:onPeer:executionContext:completion:]
-[ADPeerCloudService startRemoteSerialzedCommandExecution:onPeer:executionContext:completion:]_block_invoke_3
-[ADPeerCloudService startListeningForRemote]
v32@?0@"AFRequestInfo"8@"ADPeerInfo"16@?<v@?B>24
-[ADPeerCloudService startListeningForRemote]_block_invoke
-[ADPeerCloudService _notifyObserversOfRequestInfo:fromPeer:completion:]
-[ADPeerCloudService _handleRemoteExecution:peer:completion:]
-[ADPeerCloudService _handleRemoteExecution:peer:completion:]_block_invoke
-[ADPeerCloudService service:account:incomingUnhandledProtobuf:fromID:context:]
v28@?0@"PBCodable"8S16@"NSError"20
-[ADPeerCloudService service:account:identifier:didSendWithSuccess:error:context:]
-[ADPeerCloudService _handleMessageResponse:ofType:orError:fromID:handler:]
-[ADPeerCloudService service:activeAccountsChanged:]
-[ADPeerCloudService service:devicesChanged:]
-[ADPeerCloudService service:devicesChanged:]_block_invoke
-[PBCodable(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceSetDataRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceGetDataRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceStartRemoteRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceExecuteOnRemoteRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
com.apple.siri.AlarmStore
com.apple.siri.ManagedObjectService.
ADSpeechLogQueue
en-US
yyyy_MM_dd-HHmmss
-[ADSpeechLog beginNewSpeechLogWithFormat:]_block_invoke
OPUS
%@/%@-%@.%@
format
-[ADSpeechLog cancelCurrentSpeechLog]_block_invoke
-[ADSpeechLog endSpeechLog]_block_invoke
Speex_NB
8000Hz
+[ADSpeechLog buffersFromSpeechLogAtURL:isNarrowBand:]
-[ADDeviceAuthenticationSessionV0 invalidate]
-[ADDeviceAuthenticationSessionV0 handshakeRequestWithCertificateData:error:]
method
NACInit
-[ADDeviceAuthenticationSessionV0 completeWithHandshakeResponse:error:]
NACKeyEstablishment
-[ADDeviceAuthenticationSessionV0 signData:error:]
NACSign
strategyVersion
TQ,R,N,V_sessionState
offlineIdentifier
ADLocationRestrictionDidChangeNotification
v12@?0i8
ADLocationManager
-[ADLocationManager _locationManager]
-[ADLocationManager _generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:]
v32@?0{?=dd}8d24
-[ADLocationManager _generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:]_block_invoke
-[ADLocationManager _stopMonitoringLocation]
-[ADLocationManager _cancelLocationSLATimer]
location_metrics
-[ADLocationManager _scheduleLocationSLATimer]
-[ADLocationManager _scheduleLocationSLATimer]_block_invoke
slow_location_update
-[ADLocationManager _cancelLocationTimer]
-[ADLocationManager _scheduleLocationTimerWithTimeout:]
-[ADLocationManager _scheduleLocationTimerWithTimeout:]_block_invoke
timeout
NULL
location_timeout
desiredAccuracy
-[ADLocationManager _startMonitoringLocationForGetRequestOrigin:completion:]
-[ADLocationManager _shouldSendLocationUpdate:fromLocation:forCommand:]
-[ADLocationManager _requestLocationWithBestAccuracy]
-[ADLocationManager _requestLocationWithBestAccuracy]_block_invoke
-[ADLocationManager _requestLocationForGetRequestOrigin:completion:]
v16@?0@"SASetRequestOrigin"8
-[ADLocationManager peerLocationConnection:didReceiveUnsolicitedLocation:]
-[ADLocationManager peerLocationConnection:didReceiveUnsolicitedLocation:]_block_invoke
-[ADLocationManager peerLocationConnectionSuggestsClearingCachedLocation:]
-[ADLocationManager locationManager:didUpdateLocations:]
locationTimestamp
horizontalAccuracy
-[ADLocationManager locationManager:didFailWithError:]
newAuthorization
lastAuthorization
lastEnabled
-[ADLocationManager locationManagerDidChangeAuthorization:]
-[ADLocationManager updateWithLocation:locationStatus:]
-[ADLocationManager updateWithLocation:locationStatus:]_block_invoke
-[ADLocationManager updateLocationSnapshotWithCompletion:]_block_invoke
-[ADLocationManager updateLocationForCommand:completion:]_block_invoke
-[ADLocationManager acquireLocationInUseAssertionForReason:completion:]
-[ADLocationManager acquireLocationInUseAssertionForReason:completion:]_block_invoke
Assistant Daemon requires location to handle Siri & Dictation requests
-[ADLocationManager releaseLocationInUseAssertionForReason:]
%s: over-releasing location assertion due to %@
-[ADLocationManager releaseLocationInUseAssertionForReason:]_block_invoke
T@"<ADLocationManagerDelegate>",W,N,V_delegate
needsToSendLocation
TB,N,V_needsToSendLocation
lastLocation
T@"CLLocation",R,N
local_context_type
fromLocalDevice
TB,D,N
T@"NSUUID",C,D,N
T@"AFPeerInfo",C,D,N
privacyClass
Tq,D,N
-[ADLocalContextStore getLocalContextWithPrivacyClass:completion:]_block_invoke
-[ADLocalContextStore pushContextToContextCollectorIncludingKeys:excludingMandatoryKeys:expectingResponseIncludingKeys:excludingMandatoryKeys:completion:]_block_invoke
external_request
-[ADLocalContextStore _setupListener]
v16@?0@"<AFPeerInfoMutating>"8
-[ADLocalContextStore donateContext:withMetadata:pushToRemote:]
-[ADLocalContextStore donateContext:withMetadata:pushToRemote:]_block_invoke_3
v24@?0@"<AFContextSnapshot>"8@"AFDeviceContextMetadata"16
-[ADLocalContextStore donateContext:withMetadata:pushToRemote:]_block_invoke
-[ADLocalContextStore donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:]
-[ADLocalContextStore listener:shouldAcceptNewConnection:]
-[ADLocalContextStore listener:shouldAcceptNewConnection:]_block_invoke
ContextCollectorChanged
-[ADLocalContextStore contextCollectorChangedToDevicesWithIdentifiers:localDeviceIsCollector:]_block_invoke
-[SADomainCommand(ADMediaRemote) _ad_performAudioPausingCommand:mediaRemoteService:replyHandler:]_block_invoke
-[SANPStartPlayback(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
-[SANPStartPlayback(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]_block_invoke
Client failed to prepare for StartPlayback
x-apple-siri-app
v20@?0I8^{__CFArray=}12
-[SANPGetVolumeLevel(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
-[SANPSetVolumeLevel(ADMediaRemote) _ad_volumeAction]
-[SANPSetVolumeLevel(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
-[SAMPGetState(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
com.apple.music
v16@?0@"SAMPQueueState"8
Unsupported playback position request
-[ADMediaRemoteService _buildCacheOfWhaServiceSupportedCommands]
-[ADMediaRemoteService handleCommand:forDomain:executionContext:reply:]
com.apple.ace.media.SetQueue
metricsContext
volumeTracker
T@"<ADVolumeTracking>",R,N,V_volumeTracker
_ADAddWHAIdentifiersToSAMPSetQueue
clientID
beginTime
WHAMetrics
metricsContextValue
com.apple.assistantd.dictation.session-controller
startSessionForReason:languageCode:options:speechRequestOptions:
-[ADDictationSessionTracker startSessionForReason:languageCode:options:speechRequestOptions:]_block_invoke
stopSessionForReason:
-[ADDictationSessionTracker stopSessionForReason:]_block_invoke
notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:
-[ADDictationSessionTracker notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:]_block_invoke
notifyAudioFileIOTransactionStoppedForReason:sessionUUID:
-[ADDictationSessionTracker notifyAudioFileIOTransactionStoppedForReason:sessionUUID:]_block_invoke
-[ADDictationSessionTracker _addSession:]
-[ADDictationSessionTracker _removeSession:]
Trying to retrieve the active session, but found %tu active sessions.
-[ADDictationSessionTracker _beginSpeechRecognitionTransactionForReason:session:]
Trying to begin a dictation transcription transaction (reason: %@), but found %tu active session(s).
Trying to begin a dictation transcription transaction (reason: %@), but the transaction state is %zd.
-[ADDictationSessionTracker _beginAudioFileIOTransactionForReason:session:]
Trying to begin a dictation audio file transaction (reason: %@), but found %tu active session(s).
Trying to begin a dictation audio file transaction (reason: %@), but the transaction state is %ld.
-[ADDictationSessionTracker _endSessionTransactionForReason:session:isSpeechTransaction:]
-[ADDictationSessionTracker _endSpeechRecognitionTransactionForReason:session:]
Trying to end a dictation transcription transaction (reason: %@), but the transaction state is stopped
-[ADDictationSessionTracker _endAudioFileIOTransactionForReason:session:]
Trying to end a dictation audio file transaction (reason: %@), but the transaction state is stopped
ADSecurityServiceEncryptionKeyDidChangeNotification
com.apple.assistant.security.service.procedure
com.apple.assistant.security.service.keychain
com.apple.assistant.security.service.callback
v32@?0@"NSData"8@"NSData"16@"NSError"24
v32@?0@"NSString"8@"NSData"16^B24
-[ADSecurityService _accountDidChange:]
B24@?0@"NSString"8^B16
@"NSDictionary"16@?0@"ADRapportProximityObservation"8
ADProximityMapForProximitySignals_block_invoke
v32@?0@"NSString"8@"ADRapportProximityObservation"16^B24
ADProximityMapForProximitySignals
ADDeviceProximityManager
v20@?0@"NSArray"8B16
com.apple.voicetrigger.KeywordSpoken
-[ADDeviceProximityManager performProximityScan]
-[ADDeviceProximityManager _stopScanning]
-[ADDeviceProximityManager getDeviceProximityRelativeToLocalDeviceWithDeviceContexts:completion:]_block_invoke
-[ADDeviceProximityManager getDeviceProximityRelativeToLocalDeviceWithDeviceContexts:completion:]_block_invoke_2
-[ADDeviceProximityManager requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke
-[ADDeviceProximityManager notifyObserver:didReceiveNotificationWithToken:]_block_invoke_2
-[ADDeviceProximityManager notifyObserver:didReceiveNotificationWithToken:]_block_invoke
_ADProximityMapForDeviceContexts
v16@?0@"<ADRapportProximityObservationMutating>"8
@16@?0@"ADRapportProximityObservation"8
discoveryOptions
transportOptions
enablesProximityTracking
discoveryOptions = %@
transportOptions = %@
enablesProximityTracking = %@
ADRapportLinkConfiguration::discoveryOptions
ADRapportLinkConfiguration::transportOptions
ADRapportLinkConfiguration::enablesProximityTracking
T@"ADRapportLinkDiscoveryOptions",R,C,N,V_discoveryOptions
T@"ADRapportLinkTransportOptions",R,C,N,V_transportOptions
Tq,R,N,V_enablesProximityTracking
_temperatureUnit
_twentyFourHourTimeDisplay
_region
_countryCode
_preferredLanguage
twentyFourHourTimeDisplay
TB,N,V_twentyFourHourTimeDisplay
region
T@"NSString",C,N,V_region
countryCode
T@"NSString",C,N,V_countryCode
preferredLanguage
T@"NSString",C,N,V_preferredLanguage
com.apple.assistant.experiment-manager
-[ADExperimentManager _buildConfigurationsByIdentifier]
v32@?0@"NSString"8@"AFExperimentConfiguration"16^B24
_ADExperimentManagerCreateExperiment
ADLanguageCodeKeepSame
ADCallStateDidChangeNotification
ADActiveAccountIdentifierDidChangeNotification
ADCommandCenterQueue
-[ADCommandCenter init]
-[ADCommandCenter _addOutstandingRequestId:forReason:]
-[ADCommandCenter _removeOutstandingRequestId:forReason:]
-[ADCommandCenter _createRootExecutionContextForRequestID:]
-[ADCommandCenter _destroyRootExecutionContextForRequestID:]
-[ADCommandCenter _beginRemoteExecutionContextForCommand:fromPeer:withRemoteExecutionInfo:]
-[ADCommandCenter _endRemoteExecutionContext:]
-[ADCommandCenter _addCompletion:forCommandId:]
-[ADCommandCenter _addHandledCommandId:forRequestId:]
-[ADCommandCenter _handledCommandIdsForRequestId:]
-[ADCommandCenter _addPostCommandHandlingBlock:forCommandId:requestId:]
com.apple.TVLive
com.apple.mobileipod.assistant
-[ADCommandCenter _serviceManager]
-[ADCommandCenter _startUpdatingMotionActivity]_block_invoke
-[ADCommandCenter _stopUpdatingMotionActivity]_block_invoke
-[ADCommandCenter _requestWillStartWithInfo:]
v16@?0@"AFLocationSnapshot"8
-[ADCommandCenter _requestDidEnd]
-[ADCommandCenter _clearRequestDelegateState]
-[ADCommandCenter _clearSpeechDelegateState]
-[ADCommandCenter _replaceRequestDelegate:withInfo:andCompletion:]
-[ADCommandCenter _completeRequestForCurrentDelegate:error:]
-[ADCommandCenter _replaceSpeechDelegateWhenReady:waitForRecordingToFinish:suppressAlert:withCompletion:]
-[ADCommandCenter _speechCaptureCompleted]
-[ADCommandCenter _didLaunchAppForRequestWithIdentifier:]
-[ADCommandCenter _refIdIsSpeechStart:]
-[ADCommandCenter _sendRequestToServer:]
-[ADCommandCenter _sendRollbackCommandForCommand:]
-[ADCommandCenter _reallyHandleNewStartRequest:]
-[ADCommandCenter _reallyHandleNewStartLocalRequest:]
-[ADCommandCenter _handleNextCallbacksForReply:forCommand:forRequestId:withExecutionContext:]
-[ADCommandCenter _handleNextCallbacksForReply:forCommand:forRequestId:withExecutionContext:]_block_invoke
-[ADCommandCenter _cancelCurrentRequest]
-[ADCommandCenter _shutdownAfterDelay:]_block_invoke
-[ADCommandCenter _shutdownAfterDelay:]
-[ADCommandCenter _sendRestrictionsInPreparationForRequest]
-[ADCommandCenter _handleCommand:executionContext:completion:]
T@"NSString",C,N
appId
callbacks
T@"NSArray",C,N
-[ADCommandCenter _handleCommandResponse:error:forCommand:executionContext:completion:]
-[ADCommandCenter _preheatCallbacksForCommand:]
-[ADCommandCenter _performCallbacksForCommand:reply:executionContext:error:]
-[ADCommandCenter _handleServiceCommand:afterMyriadDecision:executionContext:completion:]
-[ADCommandCenter _handleServiceCommand:afterMyriadDecision:executionContext:completion:]_block_invoke_2
resultCallbackCode
-[ADCommandCenter _sendServiceCommand:completion:]_block_invoke
-[ADCommandCenter _receivedLocation:locationStatus:]
com.apple.assistant.command-center.call
-[ADCommandCenter adCallStateChangedCallInProcess:]_block_invoke
-[ADCommandCenter adCallStateChangedCallIncoming:]_block_invoke
-[ADCommandCenter _handleBareRequestCompleted:]
-[ADCommandCenter _saRequestCompleted:executionContext:completion:]
-[ADCommandCenter _saCommandFailed:completion:]
Speech not ready
-[ADCommandCenter _saCommandIgnored:completion:]
-[ADCommandCenter _saSetClientData:completion:]
-[ADCommandCenter _saSetHandoffPayload:completion:]
-[ADCommandCenter _saStartLocalRequest:completion:]
-[ADCommandCenter _saExecuteCallbacks:completion:]
-[ADCommandCenter _saInitiateHandoffOnCompanion:completion:]
-[ADCommandCenter _saSetDeviceTTSMuteState:completion:]
-[ADCommandCenter _saWaitForCommands:completion:]
-[ADCommandCenter _saWaitForCommands:completion:]_block_invoke_2
-[ADCommandCenter _saWaitForCommands:completion:]_block_invoke
-[ADCommandCenter _saDeviceConfiguration:completion:]
-[ADCommandCenter _saDeviceMyriadConfiguration:completion:]
-[ADCommandCenter _sasResultCandidate:completion:]
-[ADCommandCenter _sasResultCandidate:completion:]_block_invoke_2
-[ADCommandCenter _sasResultCandidate:completion:]_block_invoke
v20@?0B8@"NSArray"12
-[ADCommandCenter _acceptResultCandidate:featuresToLog:completion:]
features
-[ADCommandCenter _sasSpeechServerEndpointIdentified:completion:]
-[ADCommandCenter _sasVoiceIdentificationSignal:completion:]
-[ADCommandCenter _sasSpeechRecognized:completion:]
-[ADCommandCenter _sasSpeechMultilingualSpeechRecognized:completion:]
-[ADCommandCenter _sasSpeechMultilingualSpeechRecognized:completion:]_block_invoke
-[ADCommandCenter _sasPronunciationRecognized:completion:]
-[ADCommandCenter _handlePartialSpeechRecognitionForElapsedTime:WithDelegateBlock:]
-[ADCommandCenter _handleSpeechRecognizedWithDelegateBlock:]
-[ADCommandCenter _sasSpeechPartialResult:completion:]
bestTextInterpretation
-[ADCommandCenter _saStructuredDictationResult:completion:]
-[ADCommandCenter _saStructuredDictationFailure:completion:]
-[ADCommandCenter _sasSpeechFailure:completion:]
-[ADCommandCenter _sasAbortSpeechRequest:completion:]
-[ADCommandCenter _sasVoiceSearchPartialResult:completion:]
-[ADCommandCenter _sasVoiceSearchFinalResult:completion:]
-[ADCommandCenter _sasSuspendClientEndpointer:completion:]
v24@?0d8d16
-[ADCommandCenter _sasConfirmEndpoint:completion:]
-[ADCommandCenter _sasServerEndpointFeatures:completion:]
-[ADCommandCenter _sasClientBoundConfusionNetwork:completion:]
-[ADCommandCenter _saClientSetupInfo:completion:]
-[ADCommandCenter _endSpeechRequestForCommand:withError:suppressAlert:secureOfflineOnlyDictation:]
-[ADCommandCenter _endSpeechRequestForCommand:withError:suppressAlert:secureOfflineOnlyDictation:]_block_invoke
-[ADCommandCenter _saAcknowledgeAlert:completion:]
-[ADCommandCenter _saGetRequestOrigin:executionContext:completion:]
-[ADCommandCenter _saGetRequestOrigin:executionContext:completion:]_block_invoke
Failed getting request origin
Failed getting diagnostic report
v16@?0@"SADIAGLatencyDiagnosticReport"8
-[ADCommandCenter _saLogSignatureWithABC:completion:]
server_request
-[ADCommandCenter _saLogNumericEvent:completion:]
-[ADCommandCenter _saLogStringEvent:completion:]
-[ADCommandCenter _saTTSGetSpeechSynthesisVolume:completion:]
v20@?0f8@"NSError"12
-[ADCommandCenter _saTTSSetSpeechSynthesisVolume:completion:]
Unhandled Object
-[ADCommandCenter _sasExtractSpeechData:completion:]
-[ADCommandCenter _sasExtractSpeechData:completion:]_block_invoke
v24@?0@"NSURL"8@"NSError"16
-[ADCommandCenter _saSetMultilingualDictationConfig:completion:]
Server has disabled smart language selection
-[ADCommandCenter _startLanguageDetectionWaitTimer]
-[ADCommandCenter _startLanguageDetectionWaitTimer]_block_invoke
-[ADCommandCenter _stopLanguageDetectionWaitTimerIfNeeded]
v32@?0@"NSTextCheckingResult"8Q16^B24
-[ADCommandCenter _handleCommandAndClientReply:executionContext:]_block_invoke_2
local device
v16@?0@"ADDeviceRouterResult"8
%@.%@-%@
confirmation
%@.error
%@%@.%@
-[ADCommandCenter _handleClientReply:error:forSessionCommand:]
bad response
-[ADCommandCenter _sessionDidFailWithError:]
-[ADCommandCenter assistantSessionManager:receivedError:isRetryableError:]
-[ADCommandCenter assistantSessionManagerShouldAttemptRetry:]
-[ADCommandCenter assistantSessionManagerSessionConnectionDidReset:]
-[ADCommandCenter assistantSessionManagerSessionRemoteConnectionDidReset:]
-[ADCommandCenter assistantSessionManager:didChangeRequestIdFrom:toId:]
-[ADCommandCenter speechManager:recognitionUpdateWillBeginForTask:]
-[ADCommandCenter _sendStartSpeechCommandWithSpeechManager:info:context:]
PhonemeTranscription
start_speech_request_without_speech_request_options
-[ADCommandCenter _sendEnableServerEndpointerCommandWithRefID:]
-[ADCommandCenter _sendLocationIfNeededForRequest]
-[ADCommandCenter _sendLocationIfNeededForRequest]_block_invoke
-[ADCommandCenter _sendContextAndRestrictionsForSpeechRequestWithInfo:]
-[ADCommandCenter speechManager:willStartRecordingAtTimestamp:isFromFile:inputAudioPowerWrapper:sessionUUID:]
-[ADCommandCenter speechManager:didStartRecordingWithInfo:context:]_block_invoke_2
-[ADCommandCenter speechManager:didStartRecordingWithInfo:context:]_block_invoke
-[ADCommandCenter speechManager:didUpdateRecordingWithInfo:context:]_block_invoke
-[ADCommandCenter speechManager:capturedPackets:atTimestamp:totalCount:context:]
-[ADCommandCenter speechManager:capturedPackets:atTimestamp:totalCount:context:]_block_invoke
-[ADCommandCenter speechManagerDidDetectMusic:]
-[ADCommandCenter speechManagerDidDelayEndpointForMusic:]
-[ADCommandCenter speechManager:didReceiveLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:sessionUUID:]
-[ADCommandCenter speechManager:didFinishWithCapturingMode:sessionUUID:]
-[ADCommandCenter speechManager:didCancelWithSessionUUID:]
-[ADCommandCenter speechManager:didFailWithError:sessionUUID:]
-[ADCommandCenter speechManager:didFailWithError:sessionUUID:]_block_invoke_2
-[ADCommandCenter speechManager:didFinishWritingAudioFile:error:sessionUUID:]
-[ADCommandCenter speechManager:didRecognizeTokens:sessionUUID:]_block_invoke
<REDACTED>
-[ADCommandCenter speechManager:didRecognizeRawEagerRecognitionCandidate:sessionUUID:]_block_invoke
-[ADCommandCenter speechManager:didRecognizePackage:sessionUUID:]_block_invoke
v32@?0@"AFSpeechPhrase"8Q16^B24
v32@?0@"AFSpeechUtterance"8Q16^B24
-[ADCommandCenter speechManager:recognitionDidCompleteWithError:secureOfflineOnlyDictation:sessionUUID:statistics:]_block_invoke
dictationUIInteractionIdentifier
v32@?0@"NSString"8@"NSNumber"16^B24
Perform two shot prompt.
-[ADCommandCenter speechManager:performTwoShotPromptWithType:sessionUUID:completion:]_block_invoke_3
%@ two shot prompt was rejected.
%@ is incapable of performing fake two shot prompt.
-[ADCommandCenter _reallyDoQuickStopWithDeviceContexts:executionContext:optionalRequestID:mediaRemoteOptions:completion:]
-[ADCommandCenter _reallyDoQuickStopWithDeviceContexts:executionContext:optionalRequestID:mediaRemoteOptions:completion:]_block_invoke
roomName
quickStop#AlarmConfirmation
com.apple.siri.nl.Alarm
com.apple.siri.nl.AlarmConfirmation
com.apple.siri.nl.AlarmConfirmation.Value.YES
com.apple.siri.nl.AlarmConfirmation.Value.NO
com.apple.siri.nl.AlarmConfirmation.Value.CANCEL
^alarmVerb^=^disable^ ^alarmNoun^=^alarm^
quickStop#TimerConfirmation
com.apple.siri.nl.Timer
com.apple.siri.nl.TimerConfirmation
com.apple.siri.nl.TimerConfirmation.Value.YES
com.apple.siri.nl.TimerConfirmation.Value.NO
com.apple.siri.nl.TimerConfirmation.Value.CANCEL
^timerVerb^=^stop^ ^timerNoun^=^timer^
-[ADCommandCenter _reallyDoQuickStopWithDeviceContexts:executionContext:optionalRequestID:mediaRemoteOptions:completion:]_block_invoke_3
-[ADCommandCenter _quickStopMediaForRequestID:executionContext:completion:]
-[ADCommandCenter _quickStopMediaForRequestID:executionContext:completion:]_block_invoke
JSON:%@
-[ADCommandCenter _saQuickStop:executionContext:completion:]
Not supported on this platform
-[ADCommandCenter _saQuickStop:executionContext:completion:]_block_invoke_2
v16@?0@"AFDeviceContext"8
-[ADCommandCenter _presentDialogIdentifier:withCATParameters:listenAfterSpeaking:completion:]
-[ADCommandCenter _presentDialogIdentifier:withCATParameters:listenAfterSpeaking:completion:]_block_invoke
v24@?0@"CATResult"8@"NSError"16
CheckWiFiHint
v24@?0@"NSString"8@"NSString"16
quickStop#NothingToStop
quickStop#RunningTimerCancelled
quickStop#LocalStopped
quickStop#AlarmStopped
quickStop#TimerStopped
-[ADCommandCenter speechManager:didRequestQuickStopWithSessionUUID:]
SiriQuickStop-OnDeviceDetected
-[ADCommandCenter speechManager:didRequestQuickStopWithSessionUUID:]_block_invoke
-[ADCommandCenter speechManager:didChangeRecordingState:]_block_invoke
-[ADCommandCenter speechManager:audioSessionWillBecomeActive:]_block_invoke
-[ADCommandCenter speechManager:audioSessionDidBecomeActive:]_block_invoke
-[ADCommandCenter speechManager:didReceiveConfidenceScores:classification:classifiedUser:unknownUserScore:duration:version:thresholdingType:assetVersion:]_block_invoke
-[ADCommandCenter UIService:executeHandler:forCommand:]
-[ADCommandCenter _getDictationLanguages:options:speechOptions:delegate:completion:]
-[ADCommandCenter _preheatWithStyle:forOptions:completion:]
-[ADCommandCenter _forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:]
-[ADCommandCenter _forceAudioSessionInactiveWithOptions:completion:]
-[ADCommandCenter resumeInterruptedAudioPlaybackIfNeeded]
-[ADCommandCenter _setLanguageCode:outputVoice:]
-[ADCommandCenter _setLockState:showingLockScreen:]
Locked
Unlocked
On Lock Screen
Not on lock screen
-[ADCommandCenter _setStarkRestriction:]
#CarPlay Add Stark Restriction
#CarPlay Remove Stark Restriction
-[ADCommandCenter _setCarDNDRestriction:]
#rhodes Add Car DND Restriction
#rhodes Remove Car DND Restriction
-[ADCommandCenter _prepareForAppLaunchForRequest:]_block_invoke
-[ADCommandCenter _setConfiguration:forClient:]
-[ADCommandCenter _endSessionForDelegate:]
-[ADCommandCenter _reallyEndSessionForDelegate:]
adSpeechSessionEnded
-[ADCommandCenter _reallyEndSessionForDelegate:]_block_invoke
-[ADCommandCenter _prepareForPhoneCall]
-[ADCommandCenter _telephonyRequestCompleted]
-[ADCommandCenter _startRequest:withDelegate:]
Unable to start UI with text.
-[ADCommandCenter _startNonSpeechRequest:forDelegate:withInfo:options:suppressAlert:completion:]
-[ADCommandCenter _startNonSpeechRequest:forDelegate:withInfo:options:suppressAlert:completion:]_block_invoke_2
-[ADCommandCenter _startSpeechRequestWithDelegate:withOptions:sessionUUID:completion:]
-[ADCommandCenter _startSpeechRequestWithDelegate:withOptions:sessionUUID:]
-[ADCommandCenter _startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:]
prelistening
-[ADCommandCenter _startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:]_block_invoke_2
v16@?0d8
-[ADCommandCenter _startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:]
-[ADCommandCenter _startSpeechRequestWithURL:isNarrowBand:withDelegate:completion:]
-[ADCommandCenter _startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]_block_invoke
-[ADCommandCenter _startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]
-[ADCommandCenter _startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]_block_invoke_2
-[ADCommandCenter _startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:]
-[ADCommandCenter _startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:]
-[ADCommandCenter _addRecordedSpeechSampleData:delegate:]
-[ADCommandCenter _startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:]
-[ADCommandCenter _cancelRequestForDelegate:reason:]
-[ADCommandCenter _rollbackRequestForDelegate:]
-[ADCommandCenter _updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:]
-[ADCommandCenter _updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:]_block_invoke
-[ADCommandCenter _stopSpeechWithOptions:forDelegate:]
-[ADCommandCenter _cancelSpeechForDelegate:]
-[ADCommandCenter _sendSpeechCorrectionInfo:forCorrectionContext:]
-[ADCommandCenter _sendSpeechCorrectionInfo:interactionIdentifier:]
-[ADCommandCenter _handleGenericConcreteAceCommand:withDelegate:interruptOutstandingRequest:reply:]
-[ADCommandCenter _handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:]
-[ADCommandCenter _handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:]_block_invoke
Executing one-off server-bound command %@ from client %@.
-[ADCommandCenter _clearContext]
-[ADCommandCenter _fetchSupportedLanguagesWithCompletion:]
-[ADCommandCenter _fetchSupportedLanguagesWithCompletion:]_block_invoke
-[ADCommandCenter _getDeferredObjectsWithIdentifiers:completion:]_block_invoke
encryption_key_did_change
-[ADCommandCenter _destroyActiveAccount]
-[ADCommandCenter _destroyActiveAccount]_block_invoke
-[ADCommandCenter _refreshAssistantValidation]
-[ADCommandCenter _rescheduleValidationRefresh]
-[ADCommandCenter _handleExternalActivationRequest:completion:]
v16@?0@"<AFSiriActivationContextMutating>"8
-[ADCommandCenter _handleExternalActivationRequest:completion:]_block_invoke
v16@?0@"UNNotificationResponse"8
-[ADCommandCenter _handleIntent:inBackgroundAppWithBundleId:reply:]
-[ADCommandCenter _handleRemoteSpeechRequest:completion:]
-[ADCommandCenter _handleRemoteSpeechRequest:completion:]_block_invoke_2
-[ADCommandCenter _removeDelegate:]
v16@?0@"AFPreferences"8
-[ADCommandCenter setAssistantEnabled:]
-[ADCommandCenter _setLanguageCode:outputVoice:withCompletion:]
-[ADCommandCenter _setLanguageCodeIfNeeded]
-[ADCommandCenter setQueuedLanguageCode:]
-[ADCommandCenter _processQueuedLanguageCode]
-[ADCommandCenter _clearQueuedLanguageCode]
-[ADCommandCenter setQueuedLanguageCode:andQueuedOutputVoice:]
-[ADCommandCenter _processQueuedLanguageCodeAndOutputVoice]
-[ADCommandCenter setQueuedOutputVoice:]
-[ADCommandCenter _processQueuedOutputVoice]
-[ADCommandCenter _clearQueuedOutputVoice]
-[ADCommandCenter startSpeechRequestWithDelegate:withOptions:]
-[ADCommandCenter startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:]
-[ADCommandCenter startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:]_block_invoke_3
-[ADCommandCenter startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:]_block_invoke_2
-[ADCommandCenter setSuppressAudioInterruptionEndedNotifications:]_block_invoke
-[ADCommandCenter handleFailedStartPlaybackWithDestination:completion:]_block_invoke
-[ADCommandCenter prepareForStartPlaybackWithDestination:intent:completion:]_block_invoke
non-local playback destination
ADCommandCenterClient failure
-[ADCommandCenter getOriginDeviceInfoForContextIdentifier:completion:]_block_invoke_2
-[ADCommandCenter getOriginDeviceInfoForContextIdentifier:completion:]_block_invoke
-[ADCommandCenter sendMetricsToServerWithTimeout:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:ignoresMetricsSenderDisabledSetting:scheduledActivity:completion:]
-[ADCommandCenter clientConnected:]_block_invoke
-[ADCommandCenter clientDisconnected:]_block_invoke
-[ADCommandCenter handleCommand:withExecutionContextMatchingInfo:completion:]
-[ADCommandCenter handleCommand:withExecutionContextMatchingInfo:completion:]_block_invoke
-[ADCommandCenter prepareForShutdown]_block_invoke
-[ADCommandCenter beginUpdateOutputAudioPowerForClient:completion:]
v16@?0@"AFXPCWrapper"8
-[ADCommandCenter endUpdateOutputAudioPowerForClient:]
-[ADCommandCenter acquireShutdownAssertion]
-[ADCommandCenter releaseShutdownAssertion:]
-[ADCommandCenter shutdownSessionIfIdle]
-[ADCommandCenter _getSiriOutputVolumeForAudioRoute:completion:]
-[ADCommandCenter _getSiriOutputVolumeForAudioRoute:completion:]_block_invoke
v16@?0@"ADVolumeService"8
-[ADCommandCenter _setSiriOutputVolume:forAudioRoute:operationType:completion:]
-[ADCommandCenter _setSiriOutputVolume:forAudioRoute:operationType:completion:]_block_invoke
-[ADCommandCenter _accessRecordedAudioWithIdentifier:completion:]
-[ADCommandCenter _accessRecordedAudioWithIdentifier:completion:]_block_invoke_2
v24@?0@"NSURL"8@?<v@?>16
Unable to locate recorded audio because there's no active speech request and speech request id is not specified.
-[ADCommandCenter _trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:]
-[ADCommandCenter _trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:]_block_invoke
-[ADCommandCenter _setSpeechCapturingContext:]
-[ADCommandCenter _removeAllSpeechCapturingContexts]
-[ADCommandCenter _listInstalledServicesWithCompletion:]_block_invoke
_lastRequest
T@"SABaseCommand",&,N,S_setLastRequest:,V_lastRequest
_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
_currentClient
T@"<ADCommandCenterClient>",R,N,V_currentClient
_requestDelegate
T@"<ADCommandCenterRequestDelegate>",R,N,V_requestDelegate
_speechDelegate
T@"<ADCommandCenterSpeechDelegate>",R,N,V_speechDelegate
_speechFileDelegate
T@"<ADCommandCenterSpeechDelegate>",R,N,V_speechFileDelegate
_speechDelegateHasReceivedPartialResult
TB,R,N,V_speechDelegateHasReceivedPartialResult
_currentRequest
T@"SABaseCommand",R,N,V_currentRequest
_deviceIsLocked
TB,R,N,V_deviceIsLocked
_isInStarkMode
TB,R,N,V_isInStarkMode
_isInCarDNDMode
TB,R,N,V_isInCarDNDMode
_speechManager
T@"ADSpeechManager",R,N
_isTimeoutSuspended
TB,N,S_setIsTimeoutSuspended:,V_isTimeoutSuspended
_selectedSharedUserID
T@"NSString",R,N,V_selectedSharedUserID
_LogARO
leadingSilence
trailingSilence
endTime
resultId
eager
v32@?0@"NSString"8@"SASSpeechRecognized"16^B24
secondaryLanguages
SKIMediaControlsInvocation
/System/Library/PrivateFrameworks/SiriKitInvocation.framework/SiriKitInvocation
SKIDirectInvocation
SKIDirectInvocationContext
_ADPreheatSpeechWithStyle
_ADPreheatSpeechManagerInBackgroundWithRecordDeviceIdentifier_block_invoke
_LogActivationDeltasForOptions
-[ADAlarmContextProvider snapshotAvailable:forEvent:]
v32@?0@"NSUUID"8@"AFClockAlarm"16^B24
v16@?0@"<AFClockAlarmMutating>"8
v16@?0@"<AFClockAlarmSnapshotMutating>"8
ADShouldCensorSpeechDidChangeNotification
assistantdDidLaunch
Companion
MobileDevices
HomeDevices
amos://%@
?committed=yes
-[ADTTSMutingObserver _updateAudioRouteOnMainThread]
-[ADTTSMutingObserver _muteStateChanged:]
-[ADTTSMutingObserver _listenForAudioRouteChanges]
-[ADTTSMutingObserver _stopListeningForAudioRouteChanges]
-[ADTTSMutingObserver _listenForMuteStateChanges]
-[ADTTSMutingObserver _stopListeningForMuteStateChanges]
-[ADTTSMutingObserver _useDeviceSpeakerForTTSPreferenceChanged]
-[ADTTSMutingObserver audioSessionController:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:]
-[ADTTSMutingObserver audioSessionController:didReceiveAudioSessionOwnerLostNotification:]
-[ADTTSMutingObserver audioSessionController:didReceiveAudioSessionOwnerResetNotification:]
com.apple.assistant.sync_needed
AppleICUForce24HourTime
AppleICUForce12HourTime
%@#%@
AudioAccessory
AppleTV
ADShouldAllowSync
com.apple.da
ExperimentGroup
walkabout
carry
Siri Event
StoreDemoMode
com.apple.demo-settings
v24@?0@"NSArray"8@"NSError"16
kern.bootsessionuuid
ADSystemGetBootSessionUUID_block_invoke
ADRecordCoreDuetEventForServiceCommandIfNeeded
com.apple.siri.duet
Directory exists at path %@, but it is expected to be a file.
File does not exist at path %@.
ADAudioFileTrim
File exists at path %@, but it is expected to be directory.
Unable to create directory at path %@.
ExtAudioFileOpenURL() failed to open input audio file at %@. (status = %d)
ExtAudioFileSetProperty() failed to set client data format of input audio file. (status = %d)
.wav
.caf
%@%@
Output file type %ld is not supported.
ExtAudioFileCreateWithURL() failed to create output audio file at %@. (status = %d)
ExtAudioFileSetProperty() failed to set client data format of output audio file. (status = %d)
ExtAudioFileSeek() failed to seek to frame offset %lld in input audio file. (status = %d)
ExtAudioFileRead() failed to read %u frames from input audio file. (status = %d)
ExtAudioFileWrite() failed to write %u frames to output audio file. (status = %d)
ExtAudioFileDispose() failed to close input audio file. (status = %d)
ExtAudioFileDispose() failed to close output audio file. (status = %d)
com.apple.assistant.settings-client.paired-bluetooth-devices
v16@?0@"AFBluetoothDeviceInfo"8
ADSHAAnchorForData
ADSystemLanguagePreferencesObserver
AppleLanguagePreferencesChangedNotification
_DKSystemEventStreams
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
_DKSiriServiceMetadataKey
_CDContextQueries
/System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext
Library/Assistant
personalDomainsIsEnabled
allowUnauthenticatedRequests
allowVoiceID
root.siri.identifyVoice
root.general.analytics.shareSiriAnalytics
ADHomeInfoManager
-[ADHomeInfoManager _homeManager]
-[ADHomeInfoManager dealloc]
-[ADHomeInfoManager _currentHome]
-[ADHomeInfoManager _currentHomeInfo]
user
owner
participant
-[ADHomeInfoManager _siriDataSharingOptInStatusDidChange:]
-[ADHomeInfoManager _siriDataSharingOptInStatusDidChange:]_block_invoke
-[ADHomeInfoManager _resolveSiriDataSharingStatusMismatch:]
-[ADHomeInfoManager _updateHomeUserSettings]
-[ADHomeInfoManager _homesWithMultiUserEnabled]
-[ADHomeInfoManager getCurrentHomeMemberIds:]_block_invoke
-[ADHomeInfoManager homeManagerDidUpdateHomes:]_block_invoke
-[ADHomeInfoManager homeManager:didAddHome:]
-[ADHomeInfoManager homeManager:didRemoveHome:]
-[ADHomeInfoManager homeManager:didUpdateStatus:]_block_invoke
-[ADHomeInfoManager homeManagerDidUpdateDataSyncState:]_block_invoke
-[ADHomeInfoManager settingsDidUpdate:]
-[ADHomeInfoManager settingsDidUpdate:]_block_invoke
-[ADHomeInfoManager settingsWillUpdate:]
-[ADHomeInfoManager user:didUpdateAssistantAccessControl:forHome:]_block_invoke
-[ADHomeInfoManager _propagateSiriDataSharingOptInStatus:toAccessory:]
-[ADHomeInfoManager _propagateSiriDataSharingOptInStatus:toAccessory:]_block_invoke
v16@?0@"NSError"8
Opted-In
Opted-Out
-[ADHomeInfoManager shareManager:didReceiveShareInvitation:completion:]
-[ADHomeInfoManager home:didAddUser:]
ADHomeInfoForThisDeviceDidChangeNotification
%@ Personal Domains Enabled: %d Auth Required: %d
TB,N,V_personalDomainsIsEnabled
securePersonalDomainsRequireAuth
TB,N,V_securePersonalDomainsRequireAuth
HMHomeManager
/System/Library/Frameworks/HomeKit.framework/HomeKit
_atLeastOneUserEnabledVoiceID
_ADHomeInfoFromAccessControl
HMAccessoryCategoryTypeHomePod
initHMAccessoryCategoryTypeHomePod_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-2152.26/ADHomeInfoManager.m
constant
%@ {activationMode = %.4s, deviceIdentifier = %@, activated = %d}
-[ADAudioActivationInfo initWithSpeechCapturingMode:clientConfiguration:experimentContext:]
-[ADAudioActivationInfo setSpeechRequestOptions:currentActivationInfo:]
-[ADAudioActivationInfo setClientConfiguration:]
-[ADAudioActivationInfo startRecordingSettingsWithRecordRoute:playbackRoute:]
-[ADAudioActivationInfo _alertBehaviorForRecordRoute:playbackRoute:attemptsToUsePastDataBufferFrames:]
-[ADAudioActivationInfo audioAlertStyleForRecordRoute:playbackRoute:]
-[ADAudioActivationInfo twoShotPromptTypeForRecordRoute:playbackRoute:]
-[ADAudioActivationInfo _audioAlertStyleForListenAfterSpeakingWithRecordRoute:playbackRoute:echoCancellation:useDeviceSpeakerForTTS:]
@"NSNumber"16@?0@"NSNumber"8
-[ADAudioActivationInfo _audioSessionActiveDelay]
-[ADAudioActivationInfo _serverAudioSessionActiveDelay]
useBorealisBuffer
TB,R,N,V_useBorealisBuffer
usePrelistening
TB,R,N,V_usePrelistening
Td,R,N,V_timestamp
machAbsoluteTime
TQ,R,N,V_machAbsoluteTime
speechCapturingMode
Tq,N,V_speechCapturingMode
canDelayAudioSessionActive
TB,R,N,V_canDelayAudioSessionActive
hasPlayedStartAlert
TB,R,N,V_hasPlayedStartAlert
speechEndpointerOperationMode
Tq,R,N,V_speechEndpointerOperationMode
speechRecordingAlertPolicy
T@"AFSpeechRecordingAlertPolicy",R,N,V_speechRecordingAlertPolicy
presentationMode
Tq,R,N,V_presentationMode
languageDetectionUserContext
T@"AFLanguageDetectionUserContext",R,C,N,V_languageDetectionUserContext
dictationInputOrigin
Tq,R,N,V_dictationInputOrigin
turnIdentifier
T@"NSUUID",R,C,N,V_turnIdentifier
applicationDisplayName
T@"NSString",R,C,N,V_applicationDisplayName
applicationBundleIdentifier
T@"NSString",R,C,N,V_applicationBundleIdentifier
_ActivationModeForSpeechEvent
com.apple.siri.opportune-speaking-module-state-changed
-[ADOpportuneSpeakingStateManager beginListeningForEdgeDetectorWithID:]
-[ADOpportuneSpeakingStateManager endListeningForEdgeDetectorWithID:]
-[ADOpportuneSpeakingStateManager _listeningEdgeDetectorIDsChanged]_block_invoke
Q16@?0Q8
startTime
TQ,R,N,V_startTime
streamUID
T@"NSString",R,C,N,V_streamUID
offset
Tq,R,N,V_offset
TQ,N,V_endTime
-[ADCommandCenter(AcousticId) _acousticId_handleFingerprint:duration:]
-[ADCommandCenter(AcousticId) _saAIRequestSearch:completion:]
-[ADCommandCenter(AcousticId) _saAISearchCompleted:completion:]
-[ADCommandCenter(AcousticId) _saAISearchCompleted:completion:]_block_invoke
-[ADCommandCenter(AcousticId) _saAIRetrySearch:completion:]
-[ADCommandCenter(AcousticId) acousticIDHelperDidStartSession:]
-[ADCommandCenter(AcousticId) acousticIDHelper:didCompleteSessionSuccessfully:]
event
requestWillBegin
requestWasCancelled
requestDidEnd
com.apple.assistant.request-lifecycle-observer
-[ADRequestLifecycleObserver requestWillBeginWithInfo:fromOrigin:client:]
v16@?0@"<ADRequestLifecycleListening>"8
-[ADRequestLifecycleObserver requestWasCancelledWithInfo:origin:client:]
-[ADRequestLifecycleObserver requestDidEndWithInfo:fromOrigin:client:]
-[ADRequestLifecycleObserver _handleMessage:messageType:fromDeviceWithIdentifier:completion:]
v24@?0@"<ADRequestLifecycleListening>"8^B16
generationsByDataType
generationsByDataType = %@
ADDeviceSyncCommandPushGenerationsRequest::generationsByDataType
T@"NSDictionary",R,C,N,V_generationsByDataType
idle
processing
reading
triggerlessListening
userReplying
-[ADSpeechRecorder initWithQueue:]
-[ADSpeechRecorder _setSpeechCapturingMode:]
-[ADSpeechRecorder _setEndpointerOperationMode:forceUpdate:]
-[ADSpeechRecorder _setAlertsIfNeeded]
siri-begin-improved
v32@?0@"NSNumber"8@"NSNumber"16^B24
-[ADSpeechRecorder _updateRecordBufferDuration]
-[ADSpeechRecorder _speechControllerWithError:]
-[ADSpeechRecorder _prepareSpeechControllerWithOptions:error:]
since we have no Voice Controller!
-[ADSpeechRecorder _stopRecordingWithReason:hostTime:]
%d.%d
 Forcing two shot mode to NO
-[ADSpeechRecorder _disableEndpointer]
-[ADSpeechRecorder _playAudioAlert:]
-[ADSpeechRecorder _checkAudioLoggingLimits:]
-[ADSpeechRecorder _setupAudioFileWritingForSpeechController:info:context:]
yyyy_MM_dd-HHmmss.SSS
%@/PCM-%@-%@.wav
-[ADSpeechRecorder _setEndpointStyle:]
-[ADSpeechRecorder _stopRecordingForEndpointReason:]
-[ADSpeechRecorder eagerlyInitializeAudioRecording]
-[ADSpeechRecorder preheat]
-[ADSpeechRecorder preheat]_block_invoke
-[ADSpeechRecorder recordingInfoForPreheatWithEvent:]
-[ADSpeechRecorder currentVTSatScore]
satScore
-[ADSpeechRecorder prepareForMode:]
-[ADSpeechRecorder startSpeechCaptureWithContext:willStartHandler:error:]
, playing error alert
-[ADSpeechRecorder updateSpeechSynthesisRecord:]
-[ADSpeechRecorder _audioSessionID]
v16@?0@?<v@?@"NSDictionary">8
-[ADSpeechRecorder setSpeechRequestOptions:]
-[ADSpeechRecorder _updateAudioContextWithInfo:reason:]
-[ADSpeechRecorder _setAudioContextWithInfo:forReason:]
-[ADSpeechRecorder _updateAudioContextToPostVoiceForReason:]
-[ADSpeechRecorder _updateAudioContextWithPendingInfoForReason:]
-[ADSpeechRecorder releaseAudioSession]
notify
suppress (keep others interrupted forever)
-[ADSpeechRecorder setSpeechWasRecognizedForElapsedTime:isFinal:]
-[ADSpeechRecorder setFingerprintWasRecognized]
-[ADSpeechRecorder stopSpeechCaptureForEvent:suppressAlert:hostTime:]
-[ADSpeechRecorder cancelSpeechCaptureSuppressingAlert:]
-[ADSpeechRecorder forceSuccessAudioAlertOnStop]
-[ADSpeechRecorder _speechRecordingEventListener]_block_invoke
-[ADSpeechRecorder setClientConfiguration:]
-[ADSpeechRecorder playRecordingStartAlert]_block_invoke
-[ADSpeechRecorder _updateRecordDeviceInfoAndPlaybackRouteForReason:forcesUpdate:]
recordRoute
playbackRoute
-[ADSpeechRecorder _recordingInfoForEvent:audioAlertStyle:includeBTInfo:includeRecordDeviceInfo:]
-[ADSpeechRecorder speechControllerDidStartRecording:successfully:error:]
-[ADSpeechRecorder speechControllerDidStartRecording:successfully:error:]_block_invoke
-[ADSpeechRecorder _speechControllerDidStartRecording:successfully:error:]
Opus
Speex
-[ADSpeechRecorder speechControllerDidDeliverLastBuffer:forReason:estimatedSpeechEndHostTime:]
-[ADSpeechRecorder speechControllerDidStopRecording:forReason:estimatedSpeechEndHostTime:]
-[ADSpeechRecorder speechControllerDidStopRecording:forReason:estimatedSpeechEndHostTime:]_block_invoke
-[ADSpeechRecorder _speechControllerDidStopRecording:forReason:estimatedSpeechEndHostTime:errorCodeOverride:underlyingError:]
-[ADSpeechRecorder _speexDecoder]
-[ADSpeechRecorder _opusDecoder]
-[ADSpeechRecorder _decodeRecordBufferForSecureOfflineOnly:isOpus:]_block_invoke
-[ADSpeechRecorder _decodeRecordBufferForSecureOfflineOnly:isOpus:]
-[ADSpeechRecorder speechControllerRecordBufferAvailable:buffers:durationInSec:recordedAt:]
-[ADSpeechRecorder speechControllerRecordBufferAvailable:buffers:durationInSec:recordedAt:]_block_invoke
-[ADSpeechRecorder _speechControllerDidReceiveFirstAudioRecordBufferWithHostTime:atHostTime:]
-[ADSpeechRecorder getAudioRouteInstrumentationWithRecordingInfo:]
-[ADSpeechRecorder speechControllerLPCMRecordBufferAvailable:buffer:]
audio_recording
empty_lpcm_record_buffer
-[ADSpeechRecorder _speechControllerDidReceiveLastAudioRecordBuffer:forReason:estimatedSpeechEndHostTime:isRecordingStopped:]
-[ADSpeechRecorder speechControllerBeginRecordInterruption:withContext:]
-[ADSpeechRecorder speechControllerEndRecordInterruption:]
-[ADSpeechRecorder speechControllerRecordHardwareConfigurationDidChange:toConfiguration:]
-[ADSpeechRecorder speechController:willSetAudioSessionActive:]
-[ADSpeechRecorder speechController:didSetAudioSessionActive:]
-[ADSpeechRecorder speechControllerDidFinishAlertPlayback:ofType:error:]
-[ADSpeechRecorder speechControllerDidFinishAlertPlayback:ofType:error:]_block_invoke
-[ADSpeechRecorder _playStopAlertIfNecessaryForReason:endpointMode:error:]
AVVoice_RecordStoppedWithError
AVVoice_RecordStopped
-[ADSpeechRecorder languageDetectorDidDetectLanguageWithConfidence:confidence:isConfident:]
-[ADSpeechRecorder speechControllerDidDetectVoiceTriggerTwoShot:atTime:]
-[ADSpeechRecorder speechControllerDidDetectVoiceTriggerTwoShot:atTime:]_block_invoke
Two shot feedback
-[ADSpeechRecorder suppressUtteranceGradingIfRequired]
Utterance Grading
-[ADSpeechRecorder suppressUtteranceGradingIfRequired]_block_invoke
-[ADSpeechRecorder speechControllerRequestsOperation:forReason:]
-[ADSpeechRecorder speechControllerRequestsOperation:forReason:completion:]
-[ADSpeechRecorder _speechControllerRequestsOperation:forReason:completion:]
v32@?0d8d16@"NSError"24
-[ADSpeechRecorder speechControllerDidUpdateSmartSiriVolume:forReason:]
-[ADSpeechRecorder endpointer:didDetectStartpointAtTime:]
-[ADSpeechRecorder endpointer:didDetectStartpointAtTime:]_block_invoke
-[ADSpeechRecorder endpointer:didDetectHardEndpointAtTime:withMetrics:]
time
additionalMetrics
@"NSMutableDictionary"8@?0
-[ADSpeechRecorder endpointer:didDetectHardEndpointAtTime:withMetrics:]_block_invoke
-[ADSpeechRecorder _hardEndpointWasDetectedWithMetrics:atTime:]
-[ADSpeechRecorder _performTwoShotPromptForType:atTime:]
suppressedAlert
timedOut
-[ADSpeechRecorder _playPhaticWithCompletion:]
-[ADSpeechRecorder _playPhaticWithCompletion:]_block_invoke
delegate is nil
-[ADSpeechRecorder _handleFakeTwoShotPromptTimeoutWithUUID:]
-[ADSpeechRecorder _handleFakeTwoShotPromptCallbackWithUUID:timestamp:duration:error:]
-[ADSpeechRecorder updateEndpointHintForDuration:completion:]
-[ADSpeechRecorder _checkIfLastEndpointHintShouldBeAccepted]
-[ADSpeechRecorder _checkIfLastEndpointHintShouldBeAccepted]_block_invoke_2
-[ADSpeechRecorder _enforceEndpointHint]
-[ADSpeechRecorder performBlockAfterAlerts:timeout:]
-[ADSpeechRecorder performBlockAfterAlerts:timeout:]_block_invoke
-[ADSpeechRecorder acousticFingerprinter:hasFingerprint:duration:]
-[ADSpeechRecorder _startAudioPlaybackRequest:options:completion:]
-[ADSpeechRecorder _startAudioPlaybackRequest:options:completion:]_block_invoke
-[ADSpeechRecorder speakerIdentificationDidDetectSpeakerWithScores:]
-[ADSpeechRecorder audioSessionController:didReceiveAudioSessionInterruptionNotificationWithUserInfo:]
-[ADSpeechRecorder audioSessionController:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:]
-[ADSpeechRecorder audioSessionController:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:]
-[ADSpeechRecorder audioSessionController:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:]
-[ADSpeechRecorder audioSessionController:didReceiveAudioSessionOwnerLostNotification:]
-[ADSpeechRecorder audioSessionController:didReceiveAudioSessionOwnerResetNotification:]
suppressInterruptionEndedNotifications
TB,N,V_suppressInterruptionEndedNotifications
Siri
Dictation
DictationSecureOfflineOnly
FingerprintOnly
ADMuteModeDidChangeNotification
ADSystemMuteModeObserver
-[ADSystemMuteModeObserver _registerForRingerMuteStateNotifications]
com.apple.springboard.ringerstate
-[ADInstrumentationResolver logInstrumentationOfType:machAbsoluteTime:turnIdentifier:]
-[ADInstrumentationResolver _triggerABCForNullAssistantIdentifier]
SISchemaDeviceFixedContext
null_siriDeviceID
-[ADInstrumentationResolver buildDeviceFixedContext]
%@_%@
peerInfo
commandRelayProxyIdentifier
peerInfo = %@
commandRelayProxyIdentifier = %@
ADDeviceRouterResult::peerInfo
ADDeviceRouterResult::proximity
ADDeviceRouterResult::commandRelayProxyIdentifier
T@"ADPeerInfo",R,C,N,V_peerInfo
Tq,R,N,V_proximity
T@"NSString",R,C,N,V_commandRelayProxyIdentifier
-[ADSpeechCapturingContext dealloc]
%@ (sessionUUID = %@)
-[ADSpeechCapturingContext initWithSessionUUID:turnIdentifier:]
com.apple.assistant.request.speech-context
-[ADSpeechCapturingContext becomeCurrent]
-[ADSpeechCapturingContext resignCurrent]
-[ADSpeechCapturingContext updateStartSpeechId:]
-[ADSpeechCapturingContext updateSelectedResultCandidateId:]
-[ADSpeechCapturingContext updateAccessToRecordedAudioForVoiceIdentificationTraining:forResultCandidateId:sharedUserId:]
-[ADSpeechCapturingContext getAudioRecordRouteAndDeviceIdentificationWithCompletion:]_block_invoke
-[ADSpeechCapturingContext acquireRecordedAudioWithHandler:]
-[ADSpeechCapturingContext acquireRecordedAudioWithHandler:]_block_invoke
-[ADSpeechCapturingContext updateAudioRecordContext:]
-[ADSpeechCapturingContext updateAudioRecordDeviceInfo:]
-[ADSpeechCapturingContext updateVoiceTriggerInfo:]
-[ADSpeechCapturingContext updateRecordingInfo:]
-[ADSpeechCapturingContext beginRecordingAudioWithAudioStreamBasicDescription:]
-[ADSpeechCapturingContext endRecordingAudio]
-[ADSpeechCapturingContext endRecordingAudio]_block_invoke_2
-[ADSpeechCapturingContext endRecordingAudio]_block_invoke
%@.wav
@"NSString"8@?0
-[ADSpeechCapturingContext _finalizeAudioFileWriterWithCompletion:]
v32@?0@"NSFileHandle"8@"NSURL"16@"NSError"24
-[ADSpeechCapturingContext setSpeechRecordingSettings:]
-[ADSpeechCapturingContext instrumentSiriCueForAlertType:]_block_invoke
-[ADSpeechCapturingContext _didBecomeCurrent]
-[ADSpeechCapturingContext _didResignCurrent]
-[ADSpeechCapturingContext _donateRecordedAudioForVoiceIdentificationTrainingWithCompletion:]_block_invoke
ALLOWED
DENIED
-[ADSpeechCapturingContext _donateRecordedAudioForVoiceIdentificationTrainingWithCompletion:]_block_invoke_2
-[ADSpeechCapturingContext _removeRecordedAudio]
sessionUUID
T@"NSString",R,C,N,V_sessionUUID
wantsRecordedAudioBufferLogs
TB,R,N,V_wantsRecordedAudioBufferLogs
fanId
TQ,N,V_fanId
currentSpeed
Tq,N,V_currentSpeed
targetSpeed
Tq,N,V_targetSpeed
Unable to generate settings request representation for %@
-[AFGetSettingsResponse(ADSettingsTransformer) _ad_aceSettingsGetBooleanResponseRepresentation]
-[AFSetSettingsResponse(ADSettingsTransformer) _ad_aceSettingsResponseRepresentationForSetValueCommand:]
com.apple.assistant.offline-metrics
SiriOfflineMetrics.plist
offlineSAMetrics.plist
SiriMetrics
-[ADOfflineMetricsManager insertMetrics:]
-[ADOfflineMetricsManager deleteMetricsWithOfflineIdentifier:]
-[ADOfflineMetricsManager fetchNextMetricsUsingBlock:]
v24@?0@"SAMetrics"8@"NSString"16
-[ADOfflineMetricsManager deleteAllMetrics]
com.apple.siri.nilRequestId
-[ADResultObjectCache _addObjects:forRequestId:sessionRequestId:]
-[ADResultObjectCache commandsForReply:toCommand:missingReferences:]
_mutableResolvedIds
T@"NSMutableSet",&,N,V_mutableResolvedIds
hasBeenFulfilled
TB,N,V_hasBeenFulfilled
requestId
T@"NSString",R,C,N,V_requestId
missingReferences
T@"NSArray",R,N,V_missingReferences
fulfillmentBlock
T@?,C,N,V_fulfillmentBlock
resolvedReferences
T@"NSSet",R,N
com.apple.siri.calendar.Error
Siri diagnostics queue
-[AFDiagnostics logConnectionStart]
@"AWDSiriServerConnectionStart"8@?0
-[AFDiagnostics logConnectionOpenWithConnectionType:]
-[AFDiagnostics logConnectionOpenWithConnectionType:]_block_invoke_2
@"AWDSiriServerConnectionOpen"8@?0
-[AFDiagnostics logConnectionFailedWithError:connectionType:]
@"AWDSiriServerConnectionFailed"8@?0
-[AFDiagnostics logVoiceRecordingStart]
@"AWDSiriVoiceRecordingStart"8@?0
-[AFDiagnostics logVoiceRecordingEnd]
-[AFDiagnostics logVoiceRecordingEnd]_block_invoke_2
@"AWDSiriVoiceRecordingEnd"8@?0
-[AFDiagnostics logVoiceSendStart]
@"AWDSiriVoiceSendStart"8@?0
-[AFDiagnostics logVoiceSendEnd]
-[AFDiagnostics logVoiceSendEnd]_block_invoke_2
@"AWDSiriVoiceSendEnd"8@?0
-[AFDiagnostics logNetworkAnalyzeRunWithResults:]
@"AWDSiriNetworkAnalyzerRun"8@?0
-[AFDiagnostics logSpeechRecognized]
-[AFDiagnostics logSpeechRecognized]_block_invoke_2
-[AFDiagnostics logSpeechRecognized]_block_invoke
@"AWDSiriSpeechRecognized"8@?0
-[AFDiagnostics _submitMetricWithIdentifier:generation:]
-[AFDiagnostics _submitMetricWithIdentifier:hotShipIdentifier:hotShipTimestamp:generation:]_block_invoke
@8@?0
queue
T@"NSObject<OS_dispatch_queue>",R,N,G_queue,V_queue
serverConnection
T@"AWDServerConnection",R,N,G_serverConnection,V_serverConnection
connectionStartTime
T@"NSNumber",&,N,G_connectionStartTime,S_setConnectionStartTime:,V_connectionStartTime
voiceRecordingStartTime
T@"NSNumber",&,N,G_voiceRecordingStartTime,S_setVoiceRecordingStartTime:,V_voiceRecordingStartTime
voiceRecordingEndTime
T@"NSNumber",&,N,G_voiceRecordingEndTime,S_setVoiceRecordingEndTime:,V_voiceRecordingEndTime
voiceSendStartTime
T@"NSNumber",&,N,G_voiceSendStartTime,S_setVoiceSendStartTime:,V_voiceSendStartTime
voiceSendEndTime
T@"NSNumber",&,N,G_voiceSendEndTime,S_setVoiceSendEndTime:,V_voiceSendEndTime
forUserRequest
TB,N,GisForUserRequest,V_forUserRequest
analyzedSuccessfulRetry
TB,N,V_analyzedSuccessfulRetry
TB,N,V_wwanPreferred
connectionInterface
T@"NSNumber",C,N,V_connectionInterface
sendBufferBytesRemaining
T@"NSNumber",C,N,V_sendBufferBytesRemaining
knownURLLoadDuration
T@"NSNumber",C,N,V_knownURLLoadDuration
siriURLLoadDuration
T@"NSNumber",C,N,V_siriURLLoadDuration
siriSaltURLLoadDuration
T@"NSNumber",C,N,V_siriSaltURLLoadDuration
gatewayStatus
Tq,N,V_gatewayStatus
gatewayPingDuration
T@"NSNumber",C,N,V_gatewayPingDuration
gatewayPingsSent
T@"NSNumber",C,N,V_gatewayPingsSent
gatewayPingsDropped
T@"NSNumber",C,N,V_gatewayPingsDropped
text
handoff_data
handoff_url_string
requiresUserInteraction
handoff_notification
handoff_origin_device_name
hasText
T@"NSString",&,N,V_text
hasHandoffData
handoffData
T@"NSData",&,N,V_handoffData
hasHandoffUrlString
handoffUrlString
T@"NSString",&,N,V_handoffUrlString
hasRequiresUserInteraction
TB,N,V_requiresUserInteraction
hasHandoffNotification
handoffNotification
T@"NSString",&,N,V_handoffNotification
hasHandoffOriginDeviceName
handoffOriginDeviceName
T@"NSString",&,N,V_handoffOriginDeviceName
v16@?0@"<AFExperimentConfigurationMutating>"8
1.0.0
DE3507E9-7F1D-4BC9-A2B1-E32FB56890D1
v16@?0@"<AFExperimentGroupMutating>"8
control
phase_one
phase_two
phase_three
phase_four
boron
testing
x-apple-siri-notification://%@
-[AFBulletin(SANotificationObject) saNotificationObject]
AFAnalytics.m
%s is marked as NS_UNAVAILABLE. Use the designated initializer instead.
-[AFAnalytics init]
com.apple.assistant.analytics.client
-[AFAnalytics logEventWithType:machAbsoluteTime:context:]
-[AFAnalytics logInstrumentation:machAbsoluteTime:turnContext:]
-[AFAnalytics logInstrumentation:machAbsoluteTime:turnContext:]_block_invoke
-[AFAnalytics boostQueuedEvents:]
-[AFAnalytics boostQueuedEvents:]_block_invoke
_AFAnalyticsEventCreate
_AFAnalyticsEventGetContextGuarded
AFSiriUserNotificationRequestCapabilityForceUpdate
-[AFSiriUserNotificationRequest performRequestWithCompletion:]
AFSiriUserNotificationRequestCapabilityManager
com.apple.bluetooth.GuestConnected
+[AFSiriUserNotificationRequestCapabilityManager supportedByApplicationWithBundleID:]
+[AFSiriUserNotificationRequestCapabilityManager applicationWithBundleID:canAnnounceNotificationWithIntentIdentifiers:]
com.apple.Home
com.apple.NanoHome
-[AFSiriUserNotificationRequestCapabilityManager fetchEligibleSetupStateWithCompletion:]
-[AFSiriUserNotificationRequestCapabilityManager fetchEligibleSetupStateWithCompletion:]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]
-[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager fetchRequestCanBeHandledStateWithCompletion:]
-[AFSiriUserNotificationRequestCapabilityManager fetchRequestCanBeHandledStateWithCompletion:]_block_invoke_2
-[AFSiriUserNotificationRequestCapabilityManager fetchRequestCanBeHandledStateWithCompletion:]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager requestCanBeHandled]
-[AFSiriUserNotificationRequestCapabilityManager updateWirelessSplitterSessionInfoAndObserve]_block_invoke_3
v24@?0@"AFBluetoothWirelessSplitterSessionInfo"8@"NSError"16
-[AFSiriUserNotificationRequestCapabilityManager notifyObserversOfCurrentRequestCanBeHandledState]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager notifyObserver:didChangeStateFrom:to:]
-[AFSiriUserNotificationRequestCapabilityManager notifyObserver:didReceiveNotificationWithToken:]
-[AFSiriUserNotificationRequestCapabilityManager notifyObserver:didReceiveNotificationWithToken:]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager _settingsConnectionDidDisconnect]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager fetchElligibleSetupStateAndNotifyObservers:]_block_invoke
BluetoothPairedStatusChangedNotification
initBluetoothPairedStatusChangedNotification_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-2152.26/AFSiriUserNotificationRequest.m
/System/Library/PrivateFrameworks/BluetoothManager.framework/BluetoothManager
BluetoothManagerLibrary
BluetoothFirstDeviceUnlockCompleted
initBluetoothFirstDeviceUnlockCompleted_block_invoke
INAppInfo
initINAppInfo_block_invoke
classINAppInfo
/System/Library/Frameworks/Intents.framework/Intents
IntentsLibrary
LSApplicationProxy
initLSApplicationProxy_block_invoke
classLSApplicationProxy
/System/Library/Frameworks/CoreServices.framework/CoreServices
INSearchForMessagesIntentIdentifier
initINSearchForMessagesIntentIdentifier_block_invoke
INReadAnnouncementIntentIdentifier
initINReadAnnouncementIntentIdentifier_block_invoke
INSendMessageIntentIdentifier
initINSendMessageIntentIdentifier_block_invoke
ADPeerLocationPolicy
T@"<ADPeerLocationPolicyDelegate>",W,N,V_delegate
allowedTimelimit
Td,N,V_allowedTimelimit
navStatus
T@"SANavStatus",&,N,V_navStatus
localSearchGetNavigationStatusCompleted
T@"SALocalSearchGetNavigationStatusCompleted",&,N,V_localSearchGetNavigationStatusCompleted
queueState
T@"SAMPQueueState",&,N,V_queueState
errorIndicatorStatus
T@"SAErrorIndicatorStatus",&,N,V_errorIndicatorStatus
currentHome
T@"SAHACurrentHome",&,N,V_currentHome
phoneCallState
T@"SAPhoneCallState",&,N,V_phoneCallState
musicPersonalizationToken
T@"NSString",C,N,V_musicPersonalizationToken
allMusicPersonalizationTokens
T@"NSDictionary",C,N,V_allMusicPersonalizationTokens
playbackDeviceList
T@"SARemotePlaybackDeviceList",&,N,V_playbackDeviceList
homeAnnouncement
T@"SAHomeCommunicationAnnouncement",&,N,V_homeAnnouncement
-[ADAuthenticator deviceAuthSession]
-[ADAuthenticator prepareWithCertificateData:completion:]
-[ADAuthenticator setSessionInfo:duration:]
-[ADAuthenticator signedDataForData:]
-[ADAuthenticator reset]
_requestData
T@"NSData",&,N,S_setRequestData:,V_requestData
-[AFRequestInfo(SiriAce) _ad_requestCommandWithRequestHelper:]
-[AFRequestInfo(SiriAce) _ad_localRequestCommandWithRequestHelper:]
-[AceObject(AFRequestInfo) _ad_setPayloadOnRequestInfo:]
12.216.PremiumTests
_RequestForInfo
T@"NSString",C,N,V_pre
post
T@"NSString",C,N,V_post
toAdd
T@"NSArray",&,N,V_toAdd
toRemove
T@"NSArray",&,N,V_toRemove
Local Phone Service Queue
-[ADLocalPhoneService handleCommand:forDomain:executionContext:reply:]
-[ADLocalPhoneService _hangUpCurrentCall]
Command not supported
-[ADSyncManager _finishSync]
-[ADSyncManager _syncingService:withSyncInfo:receivedChunk:continueBlock:]
ADSyncManager.m
Not expecting a sync chunk; already have a continue block
-[ADSyncManager _syncFinishedForService:error:]
-[ADSyncManager _continueSync]
-[ADSyncManager _continueSync]_block_invoke_2
-[ADSyncManager _continueSync]_block_invoke
v32@?0@"ADSyncChunkInfo"8@"NSError"16@?<v@?B>24
Already have a sync delegate, is sync still in progress?
-[ADSyncManager prepareSyncWithAnchors:forReasons:delegate:]
-[ADSyncManager addQueuedAnchors:forReasons:]
-[ADSyncManager continueSync]
-[ADSyncManager cancelSyncForAnchor:]
-[ADSyncManager reset]
-[ADSyncManager serviceTimedoutForSync:]
_currentAnchor
T@"SASyncAnchor",&,N,S_setCurrentAnchor:,V_currentAnchor
_continueBlock
T@?,C,N,S_setContinueBlock:,V_continueBlock
getAnchorsRequest
T@"SASyncGetAnchors",&,N,V_getAnchorsRequest
isVerifying
TB,N,V_isVerifying
_forceResetOnNextSync
TB,N,S_setForceResetOnNextSync:,V_forceResetOnNextSync
-[ADSession _sendPendingCommands]
-[ADSession _sendLimboCommand:]
-[ADSession _sendServerCommand:]
-[ADSession _sendServerCommands:]
-[ADSession _sendAssistantDataChangedSinceAnchor:refId:]
-[ADSession assistantDataManager:didUpdateAssistantData:]_block_invoke
-[ADSession _setAssistantDataAnchorIfNeeded:]
-[ADSession _sendPendingDormantCommands]
-[ADSession _setDormantWithStyle:]
active
-[ADSession preheatAndMakeQuiet:]
-[ADSession eagerlyFetchAssistantData]
-[ADSession refreshValidationData]
-[ADSession sendCommand:opportunistically:]
-[ADSession prepareForRetry]
-[ADSession cancelSessionRequest:]
state
Tq,N,V_state
TB,N,V_dormant
T@"<ADSessionDelegate>",W,N,V_delegate
Ti,N,V_sessionType
T@"NSString",C,N,V_languageCode
T@"NSString",C,N,V_connectionMode
sharedUserIdentifier
T@"NSString",C,N,V_sharedUserIdentifier
loggingSharedUserIdentifier
T@"NSString",C,N,V_loggingSharedUserIdentifier
initial
waiting
retryWaiting
connectionStarted
connectionOpened
openedDormant
authenticating
holding
createAssistant
loadAssistant
destroyAssistant
numberOfRequestsTillNow
-[ADDictationOnDeviceSampling decrementRequestCount]
%@/%@
+[ADDictationOnDeviceSampling _readDictationSampledPlist]
-[ADDictationOnDeviceSampling _createDictationSampledPlistIfItDoesNotExist]
-[ADDictationOnDeviceSampling _writeDictationSamplingVariblesToFile:]
Tq,N,V_numberOfRequestsTillNow
currentSamplingDate
T@"NSDate",&,N,V_currentSamplingDate
dictationSamplingVaribles
T@"NSMutableDictionary",&,N,V_dictationSamplingVaribles
isRequestConsideredForSampling
TB,N,V_isRequestConsideredForSampling
-[ADAlarmTransformer aceCommandForSiriResponse:responseError:forRequestCommand:]
siri-alarm-internal:
-[SAAlarmAlarmShow(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]_block_invoke_2
v16@?0@"<ADAlarmStoring>"8
-[SAAlarmUpdate(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]
-[SAAlarmUpdate(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]_block_invoke_2
-[SAAlarmDelete(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]
-[SAAlarmDismiss(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]
AFAlarmURLForAlarmIdentifier
v16@?0@"ADContextManager"8
_NULL_STORE
-[ADManagedStorageConnection setKnowledgeStoreData:forKey:inStoreWithName:completion:]_block_invoke
-[ADManagedStorageConnection getKnowledgeStoreDataForKey:inStoreWithName:completion:]_block_invoke
-[ADManagedStorageConnection resetKnowledgeStoreWithName:completion:]_block_invoke
_ADGlobalKnowledgeStoreQueue_block_invoke
CKGenericCondition
DisabledForDictationOnly
com.apple.siri.sync.DisabledForDictationOnly
-[ADDeleteSyncDataService beginSyncForInfo:chunkHandler:]
-[ADOfflineMetricsMap fetchNextMetricsUsingBlock:]
-[ADOfflineMetricsMap insertMetrics:withOfflineIdentifier:]
-[ADOfflineMetricsMap deleteMetricsWithOfflineIdentifier:]
-[ADOfflineMetricsMap deleteAllMetrics]
-[ADOfflineMetricsMap _offlineIdentifiers]
_ADOfflineMetricsMapGetOfflineIdentifiers
plist
ADSharedDataDidChangeNotification
ADSharedDataDidChangePreviousLanguageCodeKey
ADSharedDataDidChangePreviousOutputVoiceKey
ADSharedDataDidChangePeerSetKey
-[ADCommandCenter(SharedDataClient) _updateSharedDataWithPairedPeerData:]
v20@?0B8@"NSString"12
-[ADCommandCenter(SharedDataClient) updateSharedDataFromPeerUseCache:allowCloudMessaging:completion:]
-[ADCommandCenter(SharedDataClient) sharedDataConnection:didUpdateSharedData:]
-[ADCommandCenter(SharedDataClient) listenForSharedDataFromCloud]
v24@?0@"ADPeerInfo"8@?<v@?@"ADSharedData">16
-[ADCommandCenter(SharedDataClient) listenForSharedDataFromCloud]_block_invoke
v24@?0@"ADSharedData"8@"ADPeerInfo"16
-[ADCommandCenter(SharedDataClient) updateSharedDataFromCompanion]
-[ADCommandCenter(SharedDataClient) updateSharedDataFromCompanion]_block_invoke
-[ADCommandCenter(SharedDataClient) _resetPeerAccountSettingsWithSharedData:]
-[ADCommandCenter(SharedDataClient) updateSharedDataFromCloudPeers:completion:]
-[ADCommandCenter(SharedDataClient) _updateSharedDataFromPeers:completion:]
-[ADCommandCenter(SharedDataClient) _updateSharedDataFromPeers:completion:]_block_invoke
-[ADCommandCenter(SharedDataClient) updateSharedDataWithCloudData:fromPeer:]
-[ADCommandCenter(SharedDataClient) updateSharedDataWithCloudData:fromPeer:]_block_invoke
-[ADCommandCenter(SharedDataClient) sendGizmoData]
-[ADCommandCenter(SharedDataRemote) getSharedDataForPeer:]_block_invoke
OnDeviceDictationAudioData
samplingRate
applicationName
-[ADSpeechSamplingDictationAudioDataHandler initWithAudioDataFolders:]
com.apple.siri.speech.sampling.upload
-[ADSpeechSamplingDictationAudioDataHandler dealloc]
send on device dictation audio data
send on device dictation audio data to server is starting
-[ADSpeechSamplingDictationAudioDataHandler addAudioSamplesOnQueue:]
-[ADSpeechSamplingDictationAudioDataHandler adSpeechRecognitionDidFail:sessionUUID:]_block_invoke
-[ADSpeechSamplingDictationAudioDataHandler adSpeechRecognized:usingSpeechModel:sessionUUID:]_block_invoke
-[ADSpeechSamplingDictationAudioDataHandler adSpeechRecordingDidFail:sessionUUID:]_block_invoke
audioDataFolders
T@"NSMutableArray",&,N,V_audioDataFolders
folderPath
T@"NSString",C,N,V_folderPath
audioFilePath
T@"NSString",C,N,V_audioFilePath
audioMetadataDict
T@"NSDictionary",C,N,V_audioMetadataDict
sessionTracker
T@"ADDictationSessionTracker",&,N,V_sessionTracker
dictationOptions
T@"AFDictationOptions",&,N,V_dictationOptions
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
shouldStopAddingSamples
TB,V_shouldStopAddingSamples
maxChunkSize
Tq,N,V_maxChunkSize
TB,N,VadSpeechSessionEnded
_ADReadAudioMetadataPlist
deleted
Data older than maximum retention period.
failed
UNDEFINED
unixTime
_ADStartSendingAudioDataToServer
ADServiceConnectionSyncQueue
-[ADServiceConnection _connection]_block_invoke
ADServiceConnection.m
Must have a path
Must have a command
class
commandName
-[ADServiceConnection sendClientBoundCommand:domain:executionContext:reply:]
-[ADServiceConnection sendClientBoundCommand:domain:executionContext:reply:]_block_invoke
-[ADServiceConnection sendClientBoundCommand:domain:executionContext:reply:]_block_invoke_2
v32@?0@"NSDictionary"8@"NSArray"16@"NSError"24
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]_block_invoke
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]_block_invoke_3
-[ADServiceConnection sendFetchSyncSnapshotForInfo:completion:]
-[ADServiceConnection sendFetchSyncSnapshotForInfo:completion:]_block_invoke
v16@?0@"AFSyncSnapshot"8
-[ADServiceConnection _stopTimersWithContinuation]_block_invoke
-[ADServiceConnection _stopTimersWithContinuation]_block_invoke_2
T@"NSString",R,N,V_identifier
T@"<ADServiceConnectionDelegate>",W,N,V_delegate
-[ADServiceConnectionProviderServiceDelegate syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:]_block_invoke
stuck_sync_plugin
plugin_path
ADPreferencesLanguageCodeDidChangeNotification
ADPreferencesOutputVoiceDidChangeNotification
ADPreferencesSharedUserIdentifierDidChangeNotification
ADPreferencesCompanionIdentifierDidChangeNotification
ADMultiUserVoiceIdentificationDidChangeNotification
ADPreferencesSiriDataSharingOptInStatusDidChangeNotification
ADPreferencesEnabledBitsDidChangeNotification
ADDeviceUsedForHomePodSetupNotification
User Identifier
Logging User Identifier
MultiUser VoiceIdentification Enabled
Accounts
Active Account
StatisticsEnabled
Idle Timeout
Ignore Location WiFi Status
Server Override
Product Type Prefix
Server Redirect
Last Known Proxy Stream Id
Last Sync Verification Date
Last Metrics Upload Date
Last Metrics Failure Reported On Date
-[ADPreferences setMultiUserVoiceIdentification:]
Device Redirected
MultiUser Shared Data Server Change Token
Has Set Up MultiUser Shared Record Subscription
Multi User Primary User
Multi User Shared Users
MultiUser Device Used for Onboarding
Multi User Syncer SAD Anchor
Multi User Syncer Identifiers Anchor
Multi User Syncer Backup Identifiers Anchor
Multi User Syncer Me Device
Multi User UUID For Deletion
Companion Identifier
Last Companion Remote Data Fetch Date
Experiment Identifier
Metrics Sender Disabled
Proxy Connection Disabled
Last Known Analytics Store State
Maximum Siri Output Volume
Minimum Siri Output Volume
Audio Session Active Delay
Server Audio Session Activation Delay
Server Media Playback Volume Threshold for Audio Session Activation Delay
Server Audio Session Activation Delay Above Media Playback Volume Threshold
Local MeCard
Companion ACE Host
MultiUser Setup Start Times
MultiUser Setup Complete Times
Use Device Authentication Version
insertedOrUpdatedItems
deletedItemUUIDs
insertedOrUpdatedItems = %@
deletedItemUUIDs = %@
ADDeviceSyncIncrementalChange::generation
ADDeviceSyncIncrementalChange::date
ADDeviceSyncIncrementalChange::insertedOrUpdatedItems
ADDeviceSyncIncrementalChange::deletedItemUUIDs
T@"NSArray",R,C,N,V_insertedOrUpdatedItems
T@"NSArray",R,C,N,V_deletedItemUUIDs
serverEnvironment
deliveryStream
processed
outstanding
scheduled
opportunistic
elapsed
succeeded
payloadSize
batchIdentifier
T@"NSUUID",R,C,N,V_batchIdentifier
TQ,R,N,V_deliveryStream
T@"NSString",C,N,V_serverEnvironment
processedCount
TQ,N,V_processedCount
outstandingCount
TQ,N,V_outstandingCount
scheduledActivity
TB,N,V_scheduledActivity
TQ,N,V_payloadSize
LocalMeCardStoreQueue
-[ADLocalMeCardStore _init]_block_invoke
-[ADLocalMeCardStore storeMeCard:]_block_invoke
-[ADLocalMeCardStore meCard:]_block_invoke
com.apple.siri.TaskServiceErrorDomain
SiriTaskService-%@
SiriTaskService-
-[ADSiriTaskService handleCommand:forDomain:executionContext:reply:]
-[ADSiriTaskService handleCommand:forDomain:executionContext:reply:]_block_invoke_2
-[ADSiriTaskService handleCommand:forDomain:executionContext:reply:]_block_invoke
v16@?0@"AFSiriRequest"8
com.apple.siri.uiservice.%p
v16@?0@"AceObject<SAAceCommand>"8
-[ADUIService handleCommand:forDomain:executionContext:reply:]_block_invoke
-[SABaseCommand(ADUIService) handleWithCompletion:]
-[SAUIPlayNotificationSound(ADUIService) handleWithCompletion:]
-[SAUIPlayNotificationSound(ADUIService) handleWithCompletion:]_block_invoke
ADRegisterSyncNowActivity_block_invoke
v24@?0@"NSObject<OS_xpc_object>"8@?<v@?>16
com.apple.siri.xpc_activity.sync.now
ADRegisterSyncNowActivity
_RegisterXPCActivity_block_invoke
_RegisterMultiUserMetricsActivity_block_invoke_2
com.apple.siri.apc_activity.multi-user.metrics
_RegisterMultiUserMetricsActivity_block_invoke
_RegisterMultiUserMetricsActivity
_RegisterDailySyncActivity_block_invoke
com.apple.siri.xpc_activity.sync.daily
_RegisterPeerFetchActivity_block_invoke
com.apple.siri.xpc_activity.peer_fetch
_BackoffFromShortInterval
_RegisterCompanionFetchActivity_block_invoke
com.apple.siri.xpc_activity.companion_fetch
com.apple.siri.xpc_activity.refresh_validation
_RefreshValidationWithCompletion
_RegisterDestroyActivity_block_invoke_2
com.apple.siri.xpc_activity.destroy
com.apple.siri.xpc_activity.service_maintenance
_RegisterHeartbeatActivity_block_invoke_2
kSpokenMessageWhitelistLevel
com.apple.siri.xpc_activity.heartbeat
UNNotificationSettingsCenter
/System/Library/PrivateFrameworks/UserNotificationsSettings.framework/UserNotificationsSettings
_RegisterMetricsActivity_block_invoke_2
com.apple.siri.xpc_activity.metrics-sender
com.apple.siri.xpc_activity.internal-cleanup
_RegisterClientScripterBootMaintenanceActivity_block_invoke_4
_RegisterClientScripterBootMaintenanceActivity_block_invoke
com.apple.siri.xpc_activity.scripter_boot_maintenance
com.apple.siri.xpc_activity.announce-messages-eligibility
com.apple.siri.xpc_activity.context-collector-reelection
_ADValidationRefreshCriteriaForInterval
-[ADCommandCenter(ServiceMaintenance) runServiceMaintenanceWithCompletion:]
-[ADCommandCenter(ServiceMaintenance) runServiceMaintenanceWithCompletion:]_block_invoke
Paired Simulator Device
Paired Simulator
Paired Simulator Product Version
-[ADCommandCenter(Metrics) _reallyCommitOrSaveMetrics:]
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:batch:completion:]
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:batch:completion:]_block_invoke_2
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:batch:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_isAssistantOrDictationEnabled]
-[ADCommandCenter(Metrics) _metrics_isSystemIdle]
-[ADCommandCenter(Metrics) _metrics_markLocalEagerRecognitionCandidate:]
rawRecognitionTokenConfidenceScores
rawRecognitionFirstTokenSilenceStartTime
recognitionFirstTokenSilenceStartTime
rawRecognitionLeadingSilence
rawRecognitionTrailingSilence
-[ADCommandCenter(Metrics) _metrics_recordUIMetrics:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_recordFailureMetricsForError:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_recordCancellationMetrics]_block_invoke
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:scheduledActivity:completion:]
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:scheduledActivity:completion:]_block_invoke_4
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:scheduledActivity:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:]
-[ADCommandCenter(Metrics) _metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:]_block_invoke
v16@?0@"SAMetrics"8
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:deliveryStreamContinuations:scheduledActivity:completion:]
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:deliveryStreamContinuations:scheduledActivity:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:deliveryStreamContinuations:scheduledActivity:completion:]_block_invoke_2
v24@?0@"NSArray"8@?<v@?B>16
v20@?0B8Q12
-[ADCommandCenter(Metrics) _metrics_processEventRecordsFromStore:batch:deliveryStream:eventStreamUID:afterTimestamp:untilLimit:uploadRecords:completion:]
-[ADCommandCenter(Metrics) _metrics_processEventRecordsFromStore:batch:deliveryStream:eventStreamUID:afterTimestamp:untilLimit:uploadRecords:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_processEventRecordsFromStore:batch:deliveryStream:eventStreamUID:afterTimestamp:untilLimit:uploadRecords:completion:]_block_invoke_3
-[ADCommandCenter(Metrics) _metrics_sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:raiseToSpeakAssetVersion:activeAppleAudioDevices:spokenNotificationsEnabled:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:preciseLocationEnabled:]
-[ADCommandCenter(Metrics) _metrics_sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:raiseToSpeakAssetVersion:activeAppleAudioDevices:spokenNotificationsEnabled:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:preciseLocationEnabled:]_block_invoke_2
v16@?0@"SISchemaDailyDeviceStatus"8
EnabledAndActiveStatus
NONE
assistantIsEnabled
TRUE
FALSE
assistantOnLockscreen
dictationIsEnabled
voiceTriggerEnabled
carPlayHasBeenActiveWithin24Hours
raiseToSpeakEnabled
raiseToSpeakAssetVersion
appleAudioDevicesActiveWithin24Hours
spokenNotificationsEnabled
spokenNotificationsProxCardSeen
spokenNotificationsControlCenterModuleEnabled
spokenNotificationsWhitelistSettings
preciseLocationIsEnabled
recordedDate
accountID
-[ADCommandCenter(Metrics) _metrics_publishDailyDeviceStatus:completion:]
-[ADCommandCenter(Metrics) _metrics_publishDailyDeviceStatus:completion:]_block_invoke
SpotlightEngagementFeedback
Selected
LostFocus
Closed
Cleared
engagementInfo
-[ADCommandCenter(Metrics) _metrics_sendEngagementFeedback:voiceQueryIdentifier:]
-[ADCommandCenter(Metrics) _metrics_destroyAllMetricsIfNeeded]
-[ADCommandCenter(Metrics) _metrics_destroyAllMetrics]
-[ADCommandCenter(Metrics) _metrics_recordNetworkSnapshotForEvent:completion:]_block_invoke
snapshotEvent
-[ADCommandCenter(Metrics) buildDailyDeviceStatusHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:activeAppleAudioDevices:spokenNotificationsEnabled:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:preciseLocationEnabled:withCompletion:]
v16@?0@"NSMutableArray"8
-[ADCommandCenter(Metrics) buildDailyDeviceStatusHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:activeAppleAudioDevices:spokenNotificationsEnabled:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:preciseLocationEnabled:withCompletion:]_block_invoke
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
-[ADCommandCenter(Metrics) _triggerABCForNullAssistantIdentifier]
SISchemaDailyDeviceStatus
-[ADCommandCenter(Metrics) fetchEnrolledUsersWithCompletion:]
-[ADCommandCenter(Metrics) fetchAppleMusicSubscriptionForSharedUser:completion:]
-[ADCommandCenter(Metrics) fetchAppleMusicSubscriptionForSharedUser:completion:]_block_invoke
v16@?0@"ICUserIdentity"8
-[ADCommandCenter(Metrics) fetchICUserIdentityForSharedUser:completion:]
-[ADCommandCenter(Metrics) fetchICUserIdentityForSharedUser:completion:]_block_invoke_2
-[ADCommandCenter(Metrics) fetchICUserIdentityForSharedUser:completion:]_block_invoke
v24@?0@"ACAccount"8@"NSError"16
ConfidenceMean
ConfidenceMax
ConfidenceMin
BestTranscription
recognition
rawRecognition
speechPackage
ICMusicSubscriptionStatusController
initICMusicSubscriptionStatusController_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-2152.26/ADCommandCenter_Metrics.m
classICMusicSubscriptionStatusController
ICUserIdentity
initICUserIdentity_block_invoke
classICUserIdentity
-[ADCommandCenter(OutputVoice) _outputVoice_setOutputVoice:]
-[ADCommandCenter(OutputVoice) _updateAutoDownloadedVoiceAssetsForOutputVoice]
Messaging service is nil.
T@"NSString",R,C,N,V_deviceIdentifier
-[STGenericIntentRequest(Metrics) _ad_finalMetricsContextWithResponse:error:]
ADGenericIntentService.m
[request isKindOfClass:[STGenericIntentRequest class]]
Minimal Alert
Speak Verbosely
ADOpportuneSpeakingModule
-[ADOpportuneSpeakingModule _finishRunningCurrentSpeakableWithResult:error:]
-[ADOpportuneSpeakingModule _processEnqueuedSpeakables]
-[ADOpportuneSpeakingModule _processEnqueuedSpeakables]_block_invoke
v16@?0@"<AFOpportuneSpeakingModel>"8
-[ADOpportuneSpeakingModule requestsToSpeak:withHandler:]
-[ADOpportuneSpeakingModule _withAllModelsExecute:]
-[ADOpportuneSpeakingModule _loadModelWithType:completion:]
-[ADOpportuneSpeakingModule _loadModelWithType:completion:]_block_invoke_2
v24@?0@"<AFOpportuneSpeakingModel>"8@"NSString"16
-[ADOpportuneSpeakingModule _loadModelWithType:completion:]_block_invoke
com.apple.siri.OpportuneSpeakingModelService
-[ADOpportuneSpeakingModule _connectionToOSMService]_block_invoke
-[ADOpportuneSpeakingModule _remoteOSMService]_block_invoke
-[ADOpportuneSpeakingModule modelWithIdentifier:didUpdateScore:forSpeakable:]
stateManager
T@"ADOpportuneSpeakingStateManager",R,N,V_stateManager
snapshot
snapshot = %@
ADDeviceSyncCommandPullSnapshotResponse::snapshot
T@"ADDeviceSyncSnapshot",R,C,N,V_snapshot
-[ADCommandCenter(AMOS) _sendAMOSCommand:domain:toBundleWithIdentifier:completion:]
-[ADCommandCenter(AMOS) _handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:]
-[ADCommandCenter(AMOS) _handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:]_block_invoke
v28@?0B8@"<SAAceCommand>"12@"NSError"20
-[ADCommandCenter(AMOS) _sendAMOSCommandToService:responseHandler:]_block_invoke
Unexpected response from service
-[ADCommandCenter(AMOS) _amosSADomainObjectRetrieve:completion:]
v20@?0@"<SAServerBoundCommand>"8i16
-[ADCommandCenter(AMOS) _updateObjectFromService:sadIdentifier:completion:]_block_invoke
Error retrieving object from service
Failed to retrieve object from service
-[ADCommandCenter(AMOS) _amosSADomainObjectUpdate:completion:]
-[ADCommandCenter(AMOS) _amosSADomainObjectDelete:completion:]
Failed to receive object from service
-[ADCommandCenter(AMOS) _amosSADomainObjectCommit:completion:]
Object not found in amos
-[ADCommandCenter(AMOS) _amosSADomainObjectCommit:completion:]_block_invoke
-[ADCommandCenter(AMOS) _amosSADomainObjectPunchOut:completion:]
No plugin for command
-[ADCommandCenter(AMOS) _handleCommandInAMOS:completion:]
Tried to handle non AMOS command as AMOS
ADMultiUsersDidChangeNotification
ADMultiUserDidReceiveScoresNotification
confidenceScores
companion_device_score
nearby_devices_scores
MultiUserServiceQueue
com.apple.siri.corespeech.voiceprofilelist.change
-[ADMultiUserService _init]_block_invoke
-[ADMultiUserService _init]
-[ADMultiUserService _languageCodeDidChange]_block_invoke
-[ADMultiUserService _setupMultiUserListener]
-[ADMultiUserService _multiUserListenerShouldAcceptNewConnection:]
-[ADMultiUserService _multiUserListenerShouldAcceptNewConnection:]_block_invoke
-[ADMultiUserService _primaryUserSharedUserIdentifierDidChangeNotification:]_block_invoke
-[ADMultiUserService refreshHomeKitOnboardedUsers]_block_invoke
-[ADMultiUserService refreshHomeKitOnboardedUsers]_block_invoke_2
-[ADMultiUserService _refreshUsersAndVoiceProfiles:]
-[ADMultiUserService _refreshUsersAndVoiceProfiles:]_block_invoke
whatsinaname
-[ADMultiUserService _loadCloudSyncedUsersFromCache]
-[ADMultiUserService _resetAllUsers]
-[ADMultiUserService _forceCloudSyncedUserDownload:]
-[ADMultiUserService _isLanguageMultiUserCompatible]
-[ADMultiUserService _trackHomeUserUUIDForInFlightVoiceProfile:]
-[ADMultiUserService _untrackHomeUserUUIDForInFlightVoiceProfile:]
-[ADMultiUserService _untrackAllHomeUserUUIDsForInFlightVoiceProfile]
-[ADMultiUserService _updateVoiceProfileInfo]
-[ADMultiUserService _updateSAMultiUserInfo]
v32@?0@"SAHomeMemberInfo"8Q16^B24
missing_count
total
-[ADMultiUserService _updateHomeKitSettings:personalDomainSettingsChanged:]
-[ADMultiUserService _allowVoiceIdentificationForThisUser:completion:]
-[ADMultiUserService _allowVoiceIdentificationForThisUser:completion:]_block_invoke_2
-[ADMultiUserService _allowVoiceIdentificationForThisUser:completion:]_block_invoke
-[ADMultiUserService addUser:sharedUserId:loggableSharedUserId:enrollmentName:isPrimary:nonCloudSyncedUser:completion:]
-[ADMultiUserService _addUser:sharedUserId:loggableSharedUserId:enrollmentName:isPrimary:nonCloudSyncedUser:completion:]
-[ADMultiUserService removeUserWithShareOwnerNames:completion:]
-[ADMultiUserService removeUserWithShareOwnerNames:completion:]_block_invoke
-[ADMultiUserService _logRelevantAnalyticsOnUserAddedWithSharedUserID:isPrimary:]
-[ADMultiUserService _removeUser:homeUserID:sharedUserID:error:]
-[ADMultiUserService removeUserWithHomeUUID:completion:]
-[ADMultiUserService removeUserWithSharedUserID:completion:]
-[ADMultiUserService validateAndReturnScores:donatedScores:unknownUserSharedId:totalUsers:]
-[ADMultiUserService validateAndReturnScores:donatedScores:unknownUserSharedId:totalUsers:]_block_invoke
local_scores
donated_scores
-[ADMultiUserService resetAllUsers]_block_invoke
-[ADMultiUserService voiceProfilesOutOfSync]_block_invoke_2
-[ADMultiUserService voiceProfilesOutOfSync]_block_invoke
-[ADMultiUserService updateVoiceProfiles]
-[ADMultiUserService triggerMultiUserMetricsWithCompletion:]_block_invoke_2
voice recognition enabled users count
multi users count
-[ADMultiUserService triggerMultiUserMetricsWithCompletion:]_block_invoke
-[ADMultiUserService updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:]
-[ADMultiUserService updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:]_block_invoke
-[ADMultiUserService updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:]_block_invoke_2
-[ADMultiUserService getHomeUserIdForSharedUserId:completion:]
-[ADMultiUserService getHomeUserIdForSharedUserId:completion:]_block_invoke
-[ADMultiUserService getSharedUserIdForHomeUserId:completion:]
-[ADMultiUserService getSharedUserIdForHomeUserId:completion:]_block_invoke
-[ADMultiUserService getConformingSharedUserIdForHomeUserId:completion:]_block_invoke
-[ADMultiUserService getConformingSharedUserIds:]_block_invoke
-[ADMultiUserService getMultiUserSettingsForSharedUserID:completion:]_block_invoke
-[ADMultiUserService getIDSIdentifierForAssistantId:completion:]
-[ADMultiUserService getIDSIdentifierForAssistantId:completion:]_block_invoke
rawScores
T@"NSDictionary",C,N,V_rawScores
sharedUsersBySharedUserID
T@"NSMutableDictionary",&,N,V_sharedUsersBySharedUserID
primaryUser
T@"ADCommunalDeviceUser",&,N,V_primaryUser
v32@?0@"AFSharedConfidenceScore"8Q16^B24
index
RSSI
T@"NSUUID",R,N,V_identifier
T@"NSString",R,N,V_name
T@"NSNumber",R,N,V_RSSI
T@"NSString",R,N,V_state
T@"NSString",&,N,V_index
ADCoreBluetoothManagerQueue
-[ADCoreBluetoothManager _retrieveConnectedDevicesInfoWithCompletion:]_block_invoke
disconnected
connecting
disconnecting
-[ADCoreBluetoothManager centralManagerDidUpdateState:]
-[ADCoreBluetoothManager centralManager:didConnectPeripheral:]
-[ADCoreBluetoothManager centralManager:didFailToConnectPeripheral:error:]
-[ADCoreBluetoothManager peripheral:didReadRSSI:error:]_block_invoke
Data
ASSISTANT_SERVICES_HOMEPOD_REQUEST_HANDOFF_NOTIFICATION_TITLE
AppleLanguages
remoteRequestInfo
T@"AFRequestInfo",&,N,V_remoteRequestInfo
-[AFSiriRequest(ADTimerRequestHandler) _ad_handleStopwatchRequestWithCompletionHandler:]
ADMultiUserTestSupport
-[ADMultiUserTestSupport getClassifiedUser]
-[ADMultiUserTestSupport getUserIdentityClassification]
q24@?0@"NSNumber"8@"NSNumber"16
_ADMultiUserTestSupportSortSharedIDsByScoresDescending
-[AFSiriRequest(ADAlarmRequestHandler) _ad_handleAlarmRequestWithCompletionHandler:]
v24@?0@"STAlarm"8@"NSError"16
SiriCoreConnectionTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateWithProtocolBufferProxy(_ADPBProxyTCPInfoMetrics *__strong)
ADConnectionTCPInfoMetricsUtilities.m
protocolBufferProxy != nil
SiriCoreConnectionTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateWithLegacyProtocolBufferProxy(_ADPBProxyGetMetricsResponse *__strong)
legacyProtocolBufferProxy != nil
default
_ADPBProxyTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateProtocolBufferProxy(SiriCoreConnectionTCPInfoMetrics *__strong)
tcpInfoMetrics != nil
void ADConnectionTCPInfoMetricsConfigureLegacyProtocolBufferProxy(SiriCoreConnectionTCPInfoMetrics *__strong, _ADPBProxyGetMetricsResponse *__strong)
com.apple.assistant.audio-playback-service
-[ADAudioPlaybackService requestLifecycleObserverRequestWillBegin:origin:client:]
-[ADAudioPlaybackService _prewarmRequest:completion:]
-[ADAudioPlaybackService _startRequest:options:preparationHandler:executionHandler:finalizationHandler:]
-[ADAudioPlaybackService _handlePreparationForSession:]
v16@?0@"<ADAudioPlaybackServiceListening>"8
-[ADAudioPlaybackService _handleExecutionForSession:]
-[ADAudioPlaybackService _handleFinalizationForSession:error:]
v32@?0@"AFAudioPlaybackRequest"8@"ADAudioPlaybackSession"16^B24
v24@?0@"<ADAudioPlaybackServiceListening>"8^B16
-[ADAudioPlaybackService _evictAllReusableSessionsForReason:]
-[ADAudioPlaybackService audioSessionController:didReceiveAudioSessionInterruptionNotificationWithUserInfo:]
-[ADAudioPlaybackService audioSessionController:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:]
-[ADAudioPlaybackService audioSessionController:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:]
-[ADAudioPlaybackService audioSessionController:didReceiveAudioSessionOwnerLostNotification:]
-[ADAudioPlaybackService audioSessionController:didReceiveAudioSessionOwnerResetNotification:]
com.apple.private.alloy.siri.location
Faux UI Service Queue
-[ADFauxUIService handleCommand:forDomain:executionContext:reply:]
-[ADFauxUIService _appPunchOutHandler:forDomain:completion:]
Command not supported 
PBSSystemService
initPBSSystemService_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-2152.31.2/ADFauxUIService.m
classPBSSystemService
/System/Library/PrivateFrameworks/PineBoardServices.framework/PineBoardServices
PineBoardServicesLibrary
frameworkLibrary
PBSWakeReasonSiriCommand
initPBSWakeReasonSiriCommand_block_invoke
allGroups
T@"NSArray",R,N
com.apple.siri.SynapseSyncPlugin
-[ADHomeAnnouncementContextAdaptor init]
com.apple.assistant.home-announcement-adaptor
-[ADHomeAnnouncementContextAdaptor registerSnapshotUpdater:]
-[ADHomeAnnouncementContextAdaptor unregisterSnapshotUpdater]
-[ADHomeAnnouncementContextAdaptor getSnapshotWithCompletion:]_block_invoke
-[ADHomeAnnouncementContextAdaptor _invalidate]
-[ADHomeAnnouncementContextAdaptor _processAndEvaluateSnapshot:]
-[ADHomeAnnouncementContextAdaptor _processAndEvaluateSnapshot:]_block_invoke
v16@?0@"<AFHomeAnnouncementSnapshotMutating>"8
-[ADHomeAnnouncementContextAdaptor _setSnapshot:]
ADHomeAnnouncementGetIsValid
Myriad Service Queue
-[ADMyriadService setMyriadDecisionResult:]
-[ADMyriadService _setStereoPartnerIdentifier:]
-[ADMyriadService _setLastTimeStereoPartnerWon:]
-[ADMyriadService _handleMessage:messageType:fromDeviceWithIdentifier:completion:]
-[ADMyriadService _handleRequest:fromDeviceWithIdentifier:completion:]
-[ADMyriadService _handleLastWinRequest:completion:]
-[ADAcePassthroughResponseTransformer aceCommandForSiriResponse:responseError:forRequestCommand:]
-[ADSessionRemoteServer dealloc]
-[ADSessionRemoteServer retryNakedCommandsIfNeeded]
/ace
-[ADSessionRemoteServer _connectionURL]
v16@?0B8B12
-[ADSessionRemoteServer _serverConnection]
SiriCoreSiriConnection
-[ADSessionRemoteServer _resetServerConnectionSynchronously:completion:]_block_invoke
v20@?0@"SiriCoreSiriConnection"8B16
-[ADSessionRemoteServer _resetServerConnectionSynchronously:completion:]_block_invoke_2
-[ADSessionRemoteServer _startConnectionPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:forceReconnect:]
-[ADSessionRemoteServer siriConnection:willStartWithConnectionType:]
policyId
routeId
delay
connectionType
-[ADSessionRemoteServer siriConnection:didReceiveAceObject:]_block_invoke
-[ADSessionRemoteServer siriConnectionDidClose:]_block_invoke
-[ADSessionRemoteServer _siriConnection:didEncounterError:analysisInfo:]
connectionURL
interfaceIndex
sendBufferSize
wwanPreferred
-[ADSessionRemoteServer _updateConnectionPolicyFailureCount:]
-[ADSessionRemoteServer startRetry]
-[ADSessionRemoteServer resetRetryManager]
-[ADSessionRemoteServer _informDelegateOfError:]
-[ADSessionRemoteServer _cachedServerCertificate]
-[ADSessionRemoteServer _cachedValidationData]
-[ADSessionRemoteServer _setCachedValidationData:withDuration:]
-[ADSessionRemoteServer _persistValidationData:withExpiration:]
Assistant Identifier
9E5BD479-1D3E-400D-ADF7-ECB0A7DBFE06
-[ADSessionRemoteServer _reallyRetryPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:causedByError:forceReconnect:useSecondary:]
oldId
newId
-[ADSessionRemoteServer _retryForFailedConnection:withType:onError:]
-[ADSessionRemoteServer _retryForFailedConnection:withType:onError:]_block_invoke
-[ADSessionRemoteServer _continueSessionInitWithValidationData:]
-[ADSessionRemoteServer _continueAuthWithCertificateData:]_block_invoke
-[ADSessionRemoteServer _continueAuthentication]
-[ADSessionRemoteServer refreshValidationData]
-[ADSessionRemoteServer _startSession]
-[ADSessionRemoteServer _connectionOpened]
-[ADSessionRemoteServer _eagerAuthDidComplete]
-[ADSessionRemoteServer _saSessionValidationFailed:]
-[ADSessionRemoteServer _saGetSessionCertificateResponse:]
-[ADSessionRemoteServer _saCreateSessionInfoResponse:]
-[ADSessionRemoteServer _saAssistantCreated:]
-[ADSessionRemoteServer _saAssistantLoaded:]
remote
version
localACEHost
-[ADSessionRemoteServer _saAssistantDestroyed:]
-[ADSessionRemoteServer _saAssistantNotFound:]
-[ADSessionRemoteServer _saAssistantNotReady:]
Assistant not ready
-[ADSessionRemoteServer _saSetConnectionHeader:]
ACEHost
Local
SAConnectionHeader
-[ADSessionRemoteServer _assistantFailedForReason:error:]
-[ADSessionRemoteServer _assistantFailedForReason:error:]_block_invoke
-[ADSessionRemoteServer _saCommandFailed:]
groupIdentifier
classIdentifier
-[ADSessionRemoteServer _sendServerCommand:]
-[ADSessionRemoteServer _sendServerCommand:]_block_invoke
-[ADSessionRemoteServer _sendServerCommands:]
-[ADSessionRemoteServer _sendServerCommands:]_block_invoke
v24@?0@"<SiriCoreSessionObject>"8@"NSError"16
-[ADSessionRemoteServer _sendGetSessionCertificateData]
-[ADSessionRemoteServer _sendCreateSessionInfoRequestWithData:]
-[ADSessionRemoteServer _triggerABCForEmptyLocale]
refID
LoadAssistant
null_locale
-[ADSessionRemoteServer _sendLoadAssistantWithAccount:validationData:]
-[ADSessionRemoteServer _sendSetRemoteDevicesWithAccount:multiUserInfo:]
v16@?0@"ADSessionBarrier"8
-[ADSessionRemoteServer _homeInfoDidChange:]_block_invoke
-[ADSessionRemoteServer _multiUsersDidChange:]_block_invoke
-[ADSessionRemoteServer networkManagerNonWWANDidBecomeAvailable:]_block_invoke
-[ADSessionRemoteServer networkManagerLostNonWWANConnectivity:]_block_invoke
-[ADSessionRemoteServer _recheckForWiFiTransition]
-[ADSessionRemoteServer _createAssistant]
-[ADSessionRemoteServer _probeSessionIfIdle]
sessionState
connectionMode
dormant
errorDomain
errorCode
underlyingErrorDomain
underlyingErrorCode
userInfo
Unavailable
Good
Unknown
CellularInstant
CellularHistorical
WiFiInstant
WiFiHistorical
v16@?0@"SiriCoreNetworkQualityReport"8
-[ADSessionRemoteServer currentConnectionPreCachedMetrics]
sharedUserId
homeUserId
enrollmentName
loggableSharedUserId
companionAssistantId
companionSpeechId
companionIDSIdentifier
speechIdentifier
aceHost
personalDomainEnabled
personalDomainUnauthenticatedRequestsAllowed
cloudShareOwnerName
voiceIDAllowedByUser
loggableMultiUserSharedUserId
loggableMusicSyncSharedUserId
loggableCompanionAssistantId
empty
homeMemberSettings
loggableUnknown
homeUserUUID
T@"NSString",R,C,N,V_homeUserUUID
sharedUserID
T@"NSString",C,N,V_sharedUserID
loggableSharedUserID
T@"NSString",R,C,N,V_loggableSharedUserID
loggableMultiUserSharedUserID
T@"NSString",C,N,V_loggableMultiUserSharedUserID
loggableMusicSyncSharedUserID
T@"NSString",C,N,V_loggableMusicSyncSharedUserID
loggableCompanionAssistantID
T@"NSString",C,N,V_loggableCompanionAssistantID
companionAssistantID
T@"NSString",C,N,V_companionAssistantID
companionSpeechID
T@"NSString",C,N,V_companionSpeechID
T@"NSString",C,N,V_enrollmentName
attributes
T@"ADCommunalDeviceUserAttributes",C,N,V_attributes
T@"NSString",C,N,V_companionIDSIdentifier
speechID
T@"NSString",C,N,V_speechID
productPrefix
T@"NSString",C,N,V_productPrefix
T@"NSString",C,N,V_aceHost
unauthenticatedRequestsAllowed
TB,N,V_unauthenticatedRequestsAllowed
TB,N,V_voiceIDAllowedByUser
shareOwnerName
T@"NSString",C,N,V_shareOwnerName
nonCloudSyncedUser
TB,N,SsetNonCloudSyncedUserAttribute:,V_nonCloudSyncedUser
settings
T@"NSDictionary",C,N,V_settings
loggingIsAllowed
TB,N,StestAndSetLoggingIsAllowed:,V_loggingIsAllowed
-[ADDeviceSyncTimerProvider clockTimerObserver:timerDidFire:]
-[ADDeviceSyncTimerProvider clockTimerObserver:timerDidDismiss:]
-[ADDeviceSyncTimerProvider clockTimerObserver:snapshotDidUpdateFrom:to:]
-[ADDeviceSyncTimerProvider getGenerationWithCompletion:]
-[ADDeviceSyncTimerProvider getGenerationWithCompletion:]_block_invoke
v16@?0@"AFClockTimerSnapshot"8
-[ADDeviceSyncTimerProvider getIncrementalChangesAfterGeneration:limit:completion:]
Delta pulling mode is not supported for type %@.
-[ADDeviceSyncTimerProvider getSnapshotWithCompletion:]
-[ADDeviceSyncTimerProvider getSnapshotWithCompletion:]_block_invoke
v16@?0@"<ADDeviceSyncSnapshotMutating>"8
com.apple.assistant.device-sync.messaging-channel.rapport
-[ADSiriTetherListener listen]_block_invoke
-[ADSiriTetherListener _handleNewConnection:]
-[ADSiriTetherListener _handleNewConnection:]_block_invoke
-[ADSpeechPlaybackSimulator startPlaybackWithURL:narrowBand:dictation:completion:]
open_interval
first_byte_read_interval
attempt_count
metrics_count
ping_mean
ping_count
unacknowledged_ping_count
subflow_count
connected_subflow_count
primary_subflow_iface
primary_subflow_switch_count
connectionMethodName
connectionEdgeIDName
connectionEdgeType
connectionFallbackReason
tuscanyConnectionDelay
tcp_info_metrics
hasOpenInterval
openInterval
Td,N,V_openInterval
hasFirstByteReadInterval
firstByteReadInterval
Td,N,V_firstByteReadInterval
hasAttemptCount
attemptCount
TI,N,V_attemptCount
hasMetricsCount
metricsCount
TI,N,V_metricsCount
hasPingMean
pingMean
Td,N,V_pingMean
hasPingCount
pingCount
TI,N,V_pingCount
hasUnacknowledgedPingCount
unacknowledgedPingCount
TI,N,V_unacknowledgedPingCount
hasSubflowCount
subflowCount
TI,N,V_subflowCount
hasConnectedSubflowCount
connectedSubflowCount
TI,N,V_connectedSubflowCount
hasPrimarySubflowIface
primarySubflowIface
T@"NSString",&,N,V_primarySubflowIface
hasPrimarySubflowSwitchCount
primarySubflowSwitchCount
TI,N,V_primarySubflowSwitchCount
hasConnectionMethodName
T@"NSString",&,N,V_connectionMethodName
hasConnectionEdgeIDName
T@"NSString",&,N,V_connectionEdgeIDName
hasConnectionEdgeType
T@"NSString",&,N,V_connectionEdgeType
hasConnectionFallbackReason
TI,N,V_connectionFallbackReason
hasTuscanyConnectionDelay
Td,N,V_tuscanyConnectionDelay
tcpInfoMetrics
T@"NSMutableArray",&,N,V_tcpInfoMetrics
AssistantDomains
AssistantFirstUnlockRestrictedDomains
AssistantLockRestrictedDomains
AssistantControlCenterLockRestrictedDomains
AssistantSyncAnchorKeys
AssistantManagedStorageDomains
AssistantClearsDomainObjects
AssistantMaintenance
-[ADBundleService _parseInfoDictionary:]
v32@?0@"SAGenericCommand"8@"NSArray"16@"NSError"24
-[ADBundleService clearDomainObjects]
v24@?0@"ADSyncChunkInfo"8@?<v@?B>16
-[ADBundleService resetExternalResources]
-[ADBundleService resetExternalResources]_block_invoke
Path
Clears Domain Objects
unspecified
ping
pong
(unknown)
ADSyncFlagManagerQueue
sync_flag
-[ADSyncFlagManager _setSyncNeededFlagsForKeys:]
-[ADDeviceSyncTimerConsumer prepareForDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer finalizeForDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer preferredPullingModeForDeviceWithIdentifier:fromGeneration:toGeneration:]
-[ADDeviceSyncTimerConsumer getGenerationForDeviceWithIdentifier:completion:]
-[ADDeviceSyncTimerConsumer getGenerationForDeviceWithIdentifier:completion:]_block_invoke
v16@?0@"AFClockItemStorage"8
-[ADDeviceSyncTimerConsumer applyIncrementalChanges:fromDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer applySnapshot:fromDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer applySnapshot:fromDeviceWithIdentifier:]_block_invoke
-[AFSiriRequest(ADShowNextEventRequestHandler) _ad_handleShowNextEventRequestWithCompletionHandler:]
v24@?0@"AFSiriResponse"8@"NSError"16
+[ADAnnounceNotificationRequestBuilder announceNotificationRequestInfoFromNotification:appId:]
SKIMessagesInvocation
SKIPhoneInvocation
com.apple.alarm.label
com.apple.siri.corrections
com.apple.homekit.name
com.apple.siri.applications
com.apple.siri.appIntentSupportPolicyAndVocab
com.apple.siri.calendar.systemsetting
com.apple.contact.people
com.apple.siri.client.state.DynamiteClientState
com.apple.media.entities
com.apple.siri.appIntentSupportPolicyAndVocab.nano
com.apple.siri.surfstatus
com.apple.siri.parsecContext
com.apple.reminder.list.name
com.apple.siri.voice
com.apple.siri.voice.resource
com.apple.icloud.fmip
com.apple.maps
com.apple.siri.ParsecSubscriptionServiceSupport
com.apple.geoservices.siri_data_changed
com.apple.aps.assistantd.fmip
com.apple.icloud.fmip.voiceassistantsync
ADSetSyncNeededFlagForReason
registered_applications_changed
address_book
locale_change
com.apple.assistant.sync_homekit_now
siri_kit_app_vocabulary
dynamite_token_change
correction_profiles_change
surf_status_change
parsec_context_change
voice_assets
subcscirption_status
isPlaceholder
ADSyncNotificationShouldBeFilteredForReason
isForcedUpdate
updated
removed
Correction:
B24@?0r*8@"NSObject<OS_xpc_object>"16
B24@?0Q8@"NSObject<OS_xpc_object>"16
session_did_finish_timestamp
ADFMIPListener
-[ADFMIPListener connection:didReceivePublicToken:]
-[ADFMIPListener connection:didReceiveIncomingMessage:]
%@%s
.siri_data_changed
com.apple.chatkit.groups
com.apple.media.podcasts
CKPersistentStorageKeysAndValuesUpdated.
synched
CKPersistentStorageKeysRemoved.
AppleDatePreferencesChangedNotification
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
assistant_enabled
requested_by_assistantd
MPStoreClientTokenDidChangeNotification
com.apple.assistant.app_vocabulary
siri_settings_did_change
com.apple.assistant.sync_data_changed
__ABDataBaseChangedByOtherProcessNotification
ABDatabaseChangedExternallyNotificationPriv
ABDistributedDatabaseChangedNotificationPriv
PKPeerPaymentRegistrationStatusChangedNotification
com.apple.parsecd.bag
com.apple.VideoSubscriberAccount.DidRegisterSubscription
daily_sync
Safety-net end-of-session sync
requested_by_server
sync_promise
sync_timestamp
ADHomeKitServiceTargetQueue
v24@?0@"NSError"8@"NSDictionary"16
HMClientConnection
B24@?0@"ADDictationSession"8^B16
v32@?0@"ADDictationSession"8Q16^B24
transport type
Rapport
Bluetooth
Wifi
Cloud
-[ADCommandCenter(RemoteExecute) executeCommand:fromPeer:remoteExecutionInfo:reply:]
-[ADCommandCenter(RemoteExecute) executeCommand:fromPeer:remoteExecutionInfo:reply:]_block_invoke_2
-[ADCommandCenter(RemoteExecute) executeCommand:fromPeer:remoteExecutionInfo:reply:]_block_invoke
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onDeviceForAssistantId:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:]_block_invoke
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onSpecifiedDeviceTypes:preferredMessagingOption:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onSpecifiedDeviceTypes:preferredMessagingOption:executionContext:completion:]_block_invoke
v32@?0@"ADPeerInfo"8Q16^B24
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:executionContext:completion:]_block_invoke
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:executionContext:completion:]_block_invoke
-[ADCommandCenter(RemoteExecute) _saExecuteOnRemoteRequest:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_shouldSendCommandToPrimaryUser:]
B24@?0@"ADPeerInfo"8@"NSDictionary"16
-[ADCommandCenter(RemoteExecute) _startRemoteRequest:onPeer:completion:]
-[ADCommandCenter(RemoteExecute) startRemoteRequest:onTargetDevice:completion:]_block_invoke
iPhone
iPad
Watch
requestBegin
requestEnd
postSpeechCapture
T@"NSString",C,N,VaceId
ADServiceError
Domains
First Unlock Restricted Commands
Control Center Lock Restricted Commands
Managed Storage Domains
Sync Keys
Lock Restricted Commands
managedStorageDomains
T@"NSSet",C,N,V_managedStorageDomains
firstUnlockRestrictedCommands
T@"NSArray",C,N,V_firstUnlockRestrictedCommands
controlCenterLockRestrictedCommands
T@"NSArray",C,N,V_controlCenterLockRestrictedCommands
T@"<ADServiceDelegate>",W,N,V_delegate
com.apple.assistant.analytics.service
-[ADAnalyticsService init]
-[ADAnalyticsService managedConfigurationEffectiveSettingsChanged]
-[ADAnalyticsService checkForMetricsUploadProblem]
-[ADAnalyticsService checkForMetricsUploadProblem]_block_invoke_2
-[ADAnalyticsService checkForMetricsUploadProblem]_block_invoke
analytics_deliverability
upload_stuck
v24@?0Q8@"NSError"16
B24@?0@"AFAnalyticsEvent"8@"NSDictionary"16
-[ADAnalyticsService stageEvents:completion:]_block_invoke_3
-[ADAnalyticsService boostAllConnections:]
v28@?0@"<AFAnalyticsServiceDelegate>"8i16@?<v@?>20
-[ADAnalyticsService boostAllConnections:]_block_invoke_3
-[ADAnalyticsService storeGenericInstrumentation:completion:]
-[ADAnalyticsService storeGenericInstrumentation:completion:]_block_invoke_3
SiriAnalytics.db
-[ADAnalyticsService _executeDelegateBlockOnAllConnections:completion:]_block_invoke
v20@?0@"<AFAnalyticsServiceDelegate>"8i16
-[ADAnalyticsService _processStagedEvents]_block_invoke
-[ADAnalyticsService _suspendEventsStaging]
-[ADAnalyticsService _resumeEventsStaging]
-[ADAnalyticsService _beginEventsFuzzingWithStartTime:]
-[ADAnalyticsService _endEventsFuzzingWithEndTime:]
-[ADAnalyticsService _endEventsFuzzingWithEndTime:]_block_invoke
-[ADAnalyticsService _linkStoreForSysdiagnose]
-[ADAnalyticsService _linkStoreForSysdiagnose]_block_invoke
-[ADAnalyticsService _unlinkStoreForSysdiagnose]
currentEventStreamUID
-snoozed
-[ADUserNotificationServiceProvider postNotificationRequest:options:responseHandler:]_block_invoke
-[ADUserNotificationServiceProvider _startMonitoringUnlockActivity]_block_invoke
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
-[ADUserNotificationServiceProvider _snoozeNotifications]_block_invoke
-[ADUserNotificationServiceProvider userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
-[ADUserNotificationServiceProvider userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]_block_invoke_2
-[ADUserNotificationServiceProvider userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]_block_invoke
-[ADPushContextReceiver sendContext:]
-[ADNotifyAndPushContextCollector _getContextForAppInfo:completion:]
Getting
-[ADNotifyAndPushContextCollector _invokeAllCompletionsWithError]
-[AFSiriRequest(ADAceDomainSignalRequestHandler) _ad_handleAceDomainSignalRequestWithCompletionHandler:]
-[SABaseClientBoundCommand(ADAceDomainSignalRequestHandler) _ad_handleAceDomainSignalRequest:completionHandler:]
com.apple.NanoAlarm
com.apple.NanoCalendar
com.apple.SessionTrackerApp
com.apple.NanoMaps
com.apple.NanoSettings
com.apple.private.NanoTimer
-[ADAceDomainSignalRequestHandler handleSiriRequest:deliveryHandler:completionHandler:]
ADAssistantDataManageriTunesStoreFrontIdentifierDidChangeNotification
%@-%ld-%ld-%ld
ADAssistantDataManager
v16@?0@"SAPerson"8
-[ADAssistantDataManager init]_block_invoke_8
-[ADAssistantDataManager requestAssistantDataUpdate]
-[ADAssistantDataManager getMeCardsWithCompletion:]_block_invoke
-[ADAssistantDataManager profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
-[ADAssistantDataManager addressBookManagerDidUpdateData:meCard:]_block_invoke
-[ADAssistantDataManager contextCollector:didChangeDisplayScale:]
-[ADAssistantDataManager _voiceAssetsUpdated:]
-[ADAssistantDataManager _currentLocaleDidChange:]
-[ADAssistantDataManager _locationRestrictionDidChange:]
-[ADAssistantDataManager _storeFrontDidChange:]
-[ADAssistantDataManager _storeFrontDidChange:]_block_invoke_2
-[ADAssistantDataManager _systemTimeZoneDidChange:]
-[ADAssistantDataManager _outputVoiceDidChange:]
-[ADAssistantDataManager _countryCodeDidChange:]
-[ADAssistantDataManager _censorSpeechDidChange:]
-[ADAssistantDataManager _generateAssistantData]
-[ADAssistantDataManager _notifyObserversOfSiriServerLoggingStatus]_block_invoke_2
-[ADAssistantDataManager _notifyObserversOfSiriServerLoggingStatus]_block_invoke
ADAssistantDataManager.m
called from non-main thread
-[ADAssistantDataManager _onMainThreadUpdateCountryCodeWithCountryConfiguration:completion:]
-[ADAssistantDataManager _updateVoice:]_block_invoke_2
-[ADAssistantDataManager _updateVoice:]_block_invoke
v24@?0@"VSVoiceAsset"8@?<v@?B>16
v16@?0@"VSVoiceAsset"8
-[ADAssistantDataManager _updateItunesStoreIdentifier:]
-[ADAssistantDataManager _updateVoiceOverStatus:]
-[ADAssistantDataManager localMeCardDidUpdate:]_block_invoke
addressBookManager
T@"ADAddressBookManager",R,N,G_addressBookManager,V_addressBookManager
voiceOverIsActive
TB,N,V_voiceOverIsActive
com.apple.assistantd
DisableFBFForUEI
-[ADAnalyticsFBFDeliveryInfrastructure deliverEvent:eventStreamId:]
-[ADAnalyticsFBFDeliveryInfrastructure deliverWrappedEvent:]
-[ADAnalyticsFBFDeliveryInfrastructure _mapEventFromDiskRepresentation:eventStreamId:]
enabledForLegacyMetrics
enabledForInstrumentation
TB,R,N,V_enabledForInstrumentation
applicationIdentifier
T@"NSString",C,N,V_applicationIdentifier
CKKnowledgeStore
/System/Library/PrivateFrameworks/CoreKnowledge.framework/CoreKnowledge
ADSiriConnectionRemoteErrorDomain
ADSiriConnectionRemote
-[ADSiriConnectionRemote init]
-[ADSiriConnectionRemote _establishPeerConnection]
-[ADSiriConnectionRemote _establishPeerConnection]_block_invoke
-[ADSiriConnectionRemote _tryToReadPeerStreamHeaderFromData:needsReconnect:]
B40@?0@"NSObject<OS_dispatch_data>"8Q16r^v24Q32
X-Companion-Type
X-Companion-Build
-[ADSiriConnectionRemote _fallbackWithSafetyNet]
-[ADSiriConnectionRemote _restartConnectionProviders]
-[ADSiriConnectionRemote _peerConnectionFailure]
-[ADSiriConnectionRemote _peerConnectionDidEnd]
-[ADSiriConnectionRemote peerStreamConnection:failedWithError:]
-[ADSiriConnectionRemote peerStreamConnectionHasIncomingPeer:]
-[ADSiriConnectionRemote peerStreamConnectionHasIncomingPeer:]_block_invoke
establishing
have active
-[ADSiriConnectionRemote peerStreamConnection:requestMetrics:]_block_invoke
-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]
ADSiriConnectionRemote.m
Programming error: network stream provider should support initial payload.
-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]_block_invoke
-[ADSiriConnectionRemote _didEstablishNetworkConnectionForProvider:initialPayload:ofLength:error:]
-[ADSiriConnectionRemote _closeNetworkConnection]
-[ADSiriConnectionRemote _networkConnectionFailure]
-[ADSiriConnectionRemote _networkConnectionDidEnd]
-[ADSiriConnectionRemote _setupStaleNetworkTimerForProvider:]_block_invoke
-[ADSiriConnectionRemote connectionProvider:receivedError:]
-[ADSiriConnectionRemote connectionProvider:receivedError:]_block_invoke
-[ADSiriConnectionRemote _waitForPeerData]_block_invoke
v24@?0@"NSObject<OS_dispatch_data>"8@"NSError"16
-[ADSiriConnectionRemote _peerConnectionReceivedData:]
-[ADSiriConnectionRemote _peerReadStreamErrorOccurred:]
-[ADSiriConnectionRemote _writeDataToPeer:]_block_invoke
-[ADSiriConnectionRemote _waitForNetworkData]_block_invoke
-[ADSiriConnectionRemote _networkConnectionReceivedData:]
-[ADSiriConnectionRemote _networkConnectionDidOpen]
-[ADSiriConnectionRemote _networkConnectionErrorOccurred:]
-[ADSiriConnectionRemote _writeDataToNetwork:]_block_invoke
-[ADSiriConnectionRemote _unregisterForSleepNotification]
UUID
properties
UUID = %@
properties = %@
ADDeviceSyncItem::UUID
ADDeviceSyncItem::properties
T@"NSUUID",R,C,N,V_UUID
T@"NSDictionary",R,C,N,V_properties
-[SADomainObject(ADMessageTransformer) ad_OTTModelRepresentation]
-[SABaseClientBoundCommand(ADMessageTransformer) ad_OTTRequestRepresentation]
com.apple.assistant.audio-state-manager
-[ADAudioStateManager getAudioStateWithOptions:completion:]_block_invoke
-[ADAudioStateManager audioSessionController:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:]
-[ADAudioStateManager audioSessionController:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:]
-[ADAudioStateManager audioSessionController:didReceiveAudioSessionOwnerLostNotification:]
-[ADAudioStateManager audioSessionController:didReceiveAudioSessionOwnerResetNotification:]
-[ADAudioStateManager _fetchAudioSessionID]
-[ADAudioStateManager _updateAudioSessionID:]
-[ADAudioStateManager _didChangeAudioStateFrom:to:]
listener
T@"<ADAudioStateListening>",R,W,N,V_listener
%@-%@
-[ADSyncVerificationHelper handleSyncChunkInfo:withSyncInfo:completion:]
%lld
-[ADIntentVocabularyUpdateConnection initWithBundleID:path:]
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]_block_invoke_2
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]_block_invoke
Synapse.%@#%@
-[ADIntentVocabularyUpdateConnection _triggerUserVocabularySyncAttributingApp:vocabType:]
-[ADIntentVocabularyUpdateConnection askToSyncSlot:]_block_invoke
-[ADIntentVocabularyUpdateConnection deleteEverything]
-[ADIntentVocabularyUpdateConnection deleteEverything]_block_invoke
RESET
-[ADIntentVocabularyUpdateConnection requestSiriAuthorization:]
com.apple.assistant.home-announcement-service
com.apple.assistant.vibration-manager
com.apple.springboard.ring-vibrate.changed
com.apple.springboard.silent-vibrate.changed
-[ADVibrationManager _fetchRingVibrationValue]
ring-vibrate
-[ADVibrationManager _fetchSilentVibrationValue]
silent-vibrate
-[ADVibrationManager handleRingVibrationValueChange]
-[ADVibrationManager handleSilentVibrationValueChange]
com.apple.springboard
_fetchVibrationState
-[ADRetryManager beginRetryableRequest:]
-[ADRetryManager endRetryableRequestForCommand:]
-[ADRetryManager endRetryableRequestForCommandAceId:refId:]
-[ADRetryManager setLastReceivedCommand:]
-[ADRetryManager _objectsToRemapFromRefId:toRefId:retryFullRequest:commandsToRetry:]
for full request
restart request
-[ADRetryManager objectsToRetry]
latestMappedRequestId
T@"NSString",C,N,V_latestMappedRequestId
ADMotionManagerInternalQueue
ADMotionManagerExternalQueue
-[ADMotionManager startUpdatingMotionActivityForReason:completion:]
-[ADMotionManager startUpdatingMotionActivityForReason:completion:]_block_invoke
-[ADMotionManager startUpdatingMotionActivityForReason:completion:]_block_invoke_2
v16@?0@"CMMotionActivity"8
-[ADMotionManager stopUpdatingMotionActivityForReason:completion:]
-[ADMotionManager stopUpdatingMotionActivityForReason:completion:]_block_invoke
-[ADMotionManager motionActivity]
-[ADMotionManager motionConfidence]
-[ADMotionManager isDriving]
_motionActivity
T@"CMMotionActivity",C,N,S_setMotionActivity:,V_motionActivity
ClientConnection
-[ADClientConnection initWithXPCConnection:]
-[ADClientConnection initWithXPCConnection:]_block_invoke
client_connection
long_lived_connection
long_lived_duration
-[ADClientConnection dealloc]
-[ADClientConnection connectionDisconnected]
-[ADClientConnection _updateSpeechRequestOptions:]
-[ADClientConnection _setBluetoothDevice:]
-[ADClientConnection adRequestDidReceiveCommand:reply:]_block_invoke
v24@?0@"AceObject<SAAceCommand>"8@"NSError"16
-[ADClientConnection _handleRequestCompletedWithUUID:error:]
-[ADClientConnection adRequestDidCompleteWithSuccess:error:]
-[ADClientConnection adRequestDidCompleteWithSuccess:error:]_block_invoke
-[ADClientConnection adRequestEncounteredIntermediateError:]
-[ADClientConnection adStartUIRequestWithText:completion:]_block_invoke_2
-[ADClientConnection adRequestRequestedOpenApplicationWithBundleID:URL:completion:]_block_invoke_2
-[ADClientConnection adRequestRequestedOpenURL:completion:]_block_invoke_2
-[ADClientConnection adGetBulletinContext:]_block_invoke_2
-[ADClientConnection adGetClockContext:]_block_invoke_2
-[ADClientConnection adTextToSpeechIsMuted]
-[ADClientConnection adWantsToCacheImage:]_block_invoke_2
-[ADClientConnection _registerForRingerStateNotification]
-[ADClientConnection _computeShouldSpeak]
-[ADClientConnection _updateShouldSpeak]
-[ADClientConnection adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:sessionUUID:]_block_invoke
ClientConnection speechRecordingDidBegin
-[ADClientConnection adSpeechRecordingDidBeginOnAVRecordRoute:audioSessionID:bluetoothDevice:sessionUUID:sessionRequestUUID:dictationOptions:]_block_invoke
-[ADClientConnection adSpeechRecordingDidChangeAVRecordRoute:bluetoothDevice:isDucking:isTwoShot:speechEndHostTime:sessionUUID:]_block_invoke
speechRecordingDidEnd
-[ADClientConnection adSpeechRecordingDidEndWithSessionUUID:]_block_invoke
ClientConnection speechRecordingDidCancel
-[ADClientConnection adSpeechRecordingDidCancelWithSessionUUID:]_block_invoke
ClientConnection speechRecordingDidFail
-[ADClientConnection adSpeechRecordingDidFail:sessionUUID:]_block_invoke
-[ADClientConnection adSpeechRecognized:usingSpeechModel:sessionUUID:]_block_invoke
-[ADClientConnection adSpeechRecognizedPartialResult:]_block_invoke
-[ADClientConnection adSpeechRecognitionDidFail:sessionUUID:]_block_invoke
-[ADClientConnection adSpeechRecordingDidDetectStartPointWithSessionUUID:]_block_invoke
-[ADClientConnection adSpeechRecordingPerformTwoShotPromptWithType:sessionUUID:completion:]_block_invoke
-[ADClientConnection bluetoothDevice:deviceInfoDidChangeFrom:to:]
-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]
-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]_block_invoke
inSpokenNotification
-[ADClientConnection bluetoothDevice:headphoneListeningModeDidChangeFrom:to:]
-[ADClientConnection bluetoothDeviceDidInvalidate:]
v28@?0I8@"<ADBluetoothDevice>"12@"NSError"20
-[ADClientConnection willPresentUIWithReply:]
com.apple.assistant.client-connection.ui-presentation
-[ADClientConnection didDismissUI]
-[ADClientConnection setConfiguration:]
-[ADClientConnection endSession]
ClientConnection endSession
-[ADClientConnection _setRequestCompletion:]
-[ADClientConnection startRequestWithInfo:completion:]
-[ADClientConnection startRecordingForPendingSpeechRequestWithOptions:requestId:completion:]
ClientConnection startRecordingForPendingSpeechRequest
-[ADClientConnection startRecordingForPendingSpeechRequestWithOptions:requestId:completion:]_block_invoke_2
v16@?0@?<v@?d>8
-[ADClientConnection continuePendingSpeechRequestWithId:fromTimestamp:]
-[ADClientConnection updateSpeechOptions:]
-[ADClientConnection cancelRequestForReason:]
ClientConnection cancelRequest
-[ADClientConnection rollbackRequest]
-[ADClientConnection cancelSpeech]
-[ADClientConnection stopSpeechWithOptions:]
v16@?0@"AFAudioState"8
-[ADClientConnection clearContext]
-[ADClientConnection rollbackClearContext]
v16@?0@"NSSet"8
v32@?0@"NSString"8@"AFClockTimerSnapshot"16^B24
-[ADClientConnection reportIssueForType:subtype:context:]
Large Data Returned to sender
-[ADClientConnection _performCommandDictionary:forBundleIdentifier:reply:]_block_invoke_2
SA%@
-[ADClientConnection _performTaskCommandDictionary:forBundleIdentifier:reply:]_block_invoke_2
-[ADClientConnection _fetchAppContextForApplicationInfo:reply:]_block_invoke
-[ADClientConnection listener:shouldAcceptNewConnection:]
-[ADClientConnection _continuePendingSpeechRequestFromTimestamp:]
-[AceObject(ADClientConnectionSupport) adClientConnection_enterRequestGroup:]
-[AceObject(ADClientConnectionSupport) adClientConnection_enterRequestGroup:]_block_invoke
-[SAStructuredDictationItem(StructuredDictation) ad_transcriptionResults]
DictationConnection
-[ADDictationConnection initWithServiceDelegate:]
ADDictationConnection
-[ADDictationConnection dealloc]
Dictation speechRecordingDidBegin
Dictation speechRecordingDidEnd
Dictation speechRecordingDidCancel
dictation audio recording was cancelled
-[ADDictationConnection adSpeechRecordingDidCancelWithSessionUUID:]_block_invoke
Dictation speechRecordingDidFail
-[ADDictationConnection adSpeechRecordingDidFail:sessionUUID:]_block_invoke
dictation audio recording failed
dictation audio recording failed and an audio file is not being written
-[ADDictationConnection adSpeechRecognized:usingSpeechModel:sessionUUID:]_block_invoke
dictation speech was recognized remotely
dictation speech was recognized remotely and we're not waiting for structured results
-[ADDictationConnection adSpeechRecognizedPartialResult:]_block_invoke
voice search final result was returned
voice search final result result was returned and we're not recording an audio file
-[ADDictationConnection adSpeechRecordingDidRecognizePhrases:sessionUUID:refId:]_block_invoke
dictation speech was recognized locally
dictation speech was recognized locally and we're not waiting for search results or structured results
dictation structured result was returned
dictation structured result was returned and we're not recording an audio file
-[ADDictationConnection adSpeechRecognitionDidFail:sessionUUID:]
dictation speech recognition failed
audio file finished writing; file handle: %@; error: %@
dictation is starting
Location
Person
Text
Dictation start
mode
-[ADDictationConnection _dictationWillStartWithLanguageCode:options:speechOptions:xpcconnection:]
-[ADDictationConnection startRequestActivityWithCompletion:]_block_invoke
-[ADDictationConnection _invokeRequestCompletion]
-[ADDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:]
-[ADDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:]_block_invoke
-[ADDictationConnection startDictationWithLanguageCode:options:speechOptions:]
dictation is canceling
dictation is stopping
-[ADDictationConnection stopSpeechWithOptions:]_block_invoke
-[ADDictationConnection sendUserSelectedAlternativeDictationLanguageCode:]
Dictation preheat
Dictation Preheat Test
Dictation preheatWithRecordDeviceIdentifier
Dictation endSession
-[ADDictationConnection startRecordedAudioDictationWithOptions:language:narrowband:forceSampling:]
v32@?0@"NSString"8@"NSString"16@"NSError"24
recorded audio dictation is starting
-[ADDictationConnection _startDictationWithURL:isNarrowBand:language:options:]
Dictation startWithURL
file-based dictation is starting
-[ADDictationConnection reportIssueForError:eventType:context:]
-[ADDictationConnection reportIssueForError:eventType:subtype:context:]
+[ADDictationConnection _updateDictationOptionsForOnDeviceDictation:language:]
-[ADDictationConnection _localSpeechRecognizerSupportingBackground:]
-[ADDictationConnection localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:]
-[ADDictationConnection localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke
-[ADDictationConnection listener:shouldAcceptNewConnection:]
-[ADDictationConnection _continuePendingSpeechRequestFromTimestamp:]
CheckPrerecordedConnectionAccess
ModelInfo
ModelType
ADSpeechManagerRootQueue
ADSpeechManagerQueue
-[ADSpeechManager _speechRecorder]
-[ADSpeechManager _speechCompressor]
-[ADSpeechManager _currentSpeechCaptureSource]
-[ADSpeechManager _updateSpeechState:]
-[ADSpeechManager _updateRecordRoute:andDeviceIdentifier:]
-[ADSpeechManager _releaseSession]
-[ADSpeechManager dictationSessionDidComplete]_block_invoke
-[ADSpeechManager _fetchAssetsForLanaugeOrEnablementNotification:]_block_invoke_2
-[ADSpeechManager _interactiveLocalSpeechRecognizer]
-[ADSpeechManager cancelLocalRecognitionIfActive]_block_invoke
-[ADSpeechManager _cleanUpDelegateInfo]
-[ADSpeechManager _tellDelegateSpeechCanceled]
-[ADSpeechManager _tellDelegateSpeechFailedWithError:]
-[ADSpeechManager _tellDelegateSpeechReceivedLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:]
-[ADSpeechManager _tellDelegateSpeechFinished]
-[ADSpeechManager _tellDelegateSpeechShouldPreheatWithRecordingInfo:]
-[ADSpeechManager _tellDelegateSpeechRecognitionUpdateWillBegin]
-[ADSpeechManager _tellDelegateSpeechWillBeginWithTimestamp:isFromFile:]
-[ADSpeechManager _tellDelegateSpeechStartedWithRecordingInfo:]
-[ADSpeechManager _tellDelegateUpdateAudioInfo:]
-[ADSpeechManager _tellDelegateAboutSpeechPackets:atTimestamp:count:]
-[ADSpeechManager _tellDelegateAboutFingerprint:duration:]
-[ADSpeechManager _tellDelegateMusicWasDetected]
-[ADSpeechManager _tellDelegateEndpointWasDelayedForMusic]
-[ADSpeechManager _tellDelegateAboutInputAveragePower:peak:]
-[ADSpeechManager _cancelRecordingWithError:suppressAlert:]
-[ADSpeechManager _lastAudioBufferReceivedWithEndpointMode:totalPacketCount:endpointerMetrics:]
-[ADSpeechManager _recordingStoppedWithError:totalPacketCount:endpointMode:endpointerMetrics:]
-[ADSpeechManager _updateCapturingStateWithOptions:]
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]
task
narrowband
farField
detectUtterances
recognitionOverrides
undefined
preferOnlineRecognition
forceOfflineRecognition
secureOfflineOnly
audioSource
fieldLabel
inputOrigin
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]_block_invoke_2
unavailable
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]_block_invoke
-[ADSpeechManager speechCapturingDidReceiveLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:]
-[ADSpeechManager speechCapturingDidRecordSpeechPackets:atTimestamp:totalPacketCount:]
-[ADSpeechManager speechCapturingDidRequestQuickStop:]
-[ADSpeechManager speechCapturingDidRequestShutdownUI:]
-[ADSpeechManager speechCapturingDidRequestUpdateSiriOutputVolume:]
-[ADSpeechManager speechCapturing:willSetAudioSessionActive:]
-[ADSpeechManager speechCapturing:didSetAudioSessionActive:]
-[ADSpeechManager speechCapturing:didInterruptAudioSession:]
-[ADSpeechManager speechCapturing:didLoseAudioSessionOwnerOrMediaServices:]
-[ADSpeechManager setDirtySiriOutputVolumeHostTime:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didRecognizeTokens:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didProcessAudioDuration:]
-[ADSpeechManager localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didRecognizePackage:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke
+[ADSpeechManager _detectOnDeviceDictationOrchestrationMismatchForLanguage:initialLanguage:eligibleForOnDeviceDictation:modelType:onDeviceRequest:context:]
eventType
offlineDictationStatusMismatch
cachedOfflineDictationStatus
prefsOfflineDictationStatus
installed
highQuality
localRecognitionStartedContext
+[ADSpeechManager _detectOnDeviceDictationOrchestrationMismatchForLanguage:initialLanguage:eligibleForOnDeviceDictation:modelType:onDeviceRequest:context:]_block_invoke
-[ADSpeechManager preheatWithOptions:]_block_invoke
-[ADSpeechManager prepareAudioSystemWithOptions:setAudioSessionActiveOptions:setAudioSessionActiveReason:completion:]_block_invoke
v16@?0@?<v@?>8
Safety continuation is dropped unexpectedly.
@"NSError"8@?0
-[ADSpeechManager startSpeechCaptureForDictationWithOptions:sessionUUID:secureOfflineOnly:]
-[ADSpeechManager _startCaptureForMode:options:context:]
-[ADSpeechManager _startCaptureForMode:options:context:]_block_invoke
-[ADSpeechManager startRecordedDictationCaptureWithSessionUUID:narrowband:secureOfflineOnly:]_block_invoke
-[ADSpeechManager startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:]_block_invoke
-[ADSpeechManager startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:]_block_invoke_2
-[ADSpeechManager cancelSpeechCaptureSuppressingAlert:]_block_invoke
-[ADSpeechManager _stopSpeechCaptureWithOptions:]
-[ADSpeechManager _stopSpeechCaptureWithOptions:]_block_invoke
-[ADSpeechManager endSession]
-[ADSpeechManager endSession]_block_invoke
-[ADSpeechManager endSession]_block_invoke_2
-[ADSpeechManager endSession:completion:]
-[ADSpeechManager _cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:]
-[ADSpeechManager _cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:]_block_invoke
-[ADSpeechManager _endSessionIfIdle]
-[ADSpeechManager suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:]_block_invoke
-[ADSpeechManager updateSpeechProfilesForReasons:]
portrait_invalidated
assistant_tool
-[ADSpeechManager updateSpeechProfilesForReasons:]_block_invoke
-[ADSpeechManager _requestSpeechProfileUpdateForLanguages:]_block_invoke
-[ADSpeechManager _dispatchUpdateSpeechProfileForNextLanguage]_block_invoke
-[ADSpeechManager _volumeService]
-[ADSpeechManager _fetchSmartSiriVolume:]
-[ADSpeechManager _updateSiriOutputVolume:completion:]
-[ADSpeechManager _updateSiriOutputVolume:completion:]_block_invoke
initialDictationLanguage
T@"NSString",C,N,V_initialDictationLanguage
primaryDictationLanguage
T@"NSString",C,N,V_primaryDictationLanguage
dictationLanguages
T@"NSArray",C,N,V_dictationLanguages
T@"AFDictationOptions",C,N,V_dictationOptions
context
T@,&,N,V_context
isDriving
TB,N,V_isDriving
inputAudioPowerUpdater
T@"AFAudioPowerUpdater",R,N,V_inputAudioPowerUpdater
outputAudioPowerUpdater
T@"AFAudioPowerUpdater",R,N,V_outputAudioPowerUpdater
T@"<ADVolumeTracking>",R,N
volumeServiceProvider
T@"<ADVolumeServiceProviding>",R,N
recordingInfoProvider
T@"<ADRecordingInfoProviding>",R,N
ADSpeechStateInitial
ADSpeechStateStarting
ADSpeechStateRecording
ADSpeechStateStopping
ADSpeechStateCanceling
ADExternalRequestDelayedActionHandler
-[ADExternalNotificationRequestHandler _completeNotificationsWithSuccess:]
-[ADExternalNotificationRequestHandler _clearTriggerlessUserReplyTimer]
-[ADExternalNotificationRequestHandler _changeCurrentStateToState:]
-[ADExternalNotificationRequestHandler handleNotificationRequestForNotification:fromApp:completion:]
-[ADExternalNotificationRequestHandler handleNotificationRequestForNotification:fromApp:completion:]_block_invoke
Current State
-[ADExternalNotificationRequestHandler handleNotificationRequestForNotification:fromApp:completion:]_block_invoke_2
-[ADExternalNotificationRequestHandler _handleNotification:completion:]_block_invoke
-[ADExternalNotificationRequestHandler _handleNotification:completion:]_block_invoke_2
v24@?0q8@"NSError"16
-[ADExternalNotificationRequestHandler _startReadingNotification:]
-[ADExternalNotificationRequestHandler _startReadingNotification:]_block_invoke_3
-[ADExternalNotificationRequestHandler _startReadingNotification:]_block_invoke
-[ADExternalNotificationRequestHandler _startReadingNotification:]_block_invoke_2
v20@?0B8@"ADRequestDelayManager"12
-[ADExternalNotificationRequestHandler _startTimerToResetStateFrom:]_block_invoke
-[ADExternalNotificationRequestHandler audioSessionDidEnd]_block_invoke
-[ADExternalNotificationRequestHandler _startTriggerlessFollowupRequestWithRequestDelayManager:delayType:]_block_invoke
-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke
-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWasCancelledWithInfo:origin:client:]_block_invoke
-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke
-[ADExternalNotificationRequestHandler requestDelayManager:interruptedWithType:]_block_invoke
-[ADExternalNotificationRequestHandler requestDelayManager:didStopUnexpectly:]
-[ADExternalNotificationRequestHandler audioPlaybackService:didStartRequest:]_block_invoke
-[ADSettingsClient fetchSupportedLanguagesWithReply:]
com.apple.assistant.siri_settings_did_change
v24@?0@"NSString"8@"NSError"16
-[ADSettingsClient setDictationEnabled:]_block_invoke
-[ADSettingsClient setDictationEnabled:]
-[ADSettingsClient setEnableAssistantLogging:]
Enabling
Disabling
-[ADSettingsClient _killDaemon]
-[ADSettingsClient _shutdownSessionIfIdle]
-[ADSettingsClient _syncDataWithAnchorKeys:forceReset:reason:reply:]
-[ADSettingsClient _syncDataWithAnchorKeys:forceReset:reason:reply:]_block_invoke
v16@?0@"NSNotification"8
-[ADSettingsClient _setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:]_block_invoke
-[ADSettingsClient disableAndDeleteCloudSyncWithCompletion:]
v16@?0@"NSUUID"8
language
-[ADSettingsClient startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:]
B32@?0@"ADAccount"8Q16^B24
v16@?0@"ADAnalyticsStore"8
v16@?0@"AFExperimentContext"8
com.apple.assistant.settings-client.connected-bluetooth-devices
-[ADSettingsClient setSiriDataSharingOptInStatus:completion:]
-[ADSettingsClient getSiriDataSharingOptInStatusWithCompletion:]
-[ADSettingsClient deleteSiriHistoryWithContext:withCompletion:]
-[ADSettingsClient deleteSiriHistoryWithContext:withCompletion:]_block_invoke_2
-[ADSettingsClient deleteSiriHistoryWithContext:withCompletion:]_block_invoke
Completion block was dropped unexpectedly.
Client timed out because no server response was received in 20 seconds.
Server response is unexpected.
Server response is nil.
deviceIDPair
proximity
observationDate
deviceIDPair = %@
proximity = %@
observationDate = %@
ADRapportProximityObservation::deviceIDPair
ADRapportProximityObservation::proximity
ADRapportProximityObservation::observationDate
T@"NSSet",R,C,N,V_deviceIDPair
Ti,R,N,V_proximity
T@"NSDate",R,C,N,V_observationDate
pairs
T@"NSMutableArray",&,N,V_pairs
value
hasKey
T@"NSString",&,N,V_key
hasValue
T@"NSString",&,N,V_value
VoiceCommand
Audio/Video
-[ADVolumeService fetchSmartSiriVolume]
-[ADVolumeService updateSiriOutputVolume:completion:]
-[ADVolumeService waitUntilSiriOutputVolumeUpdatesAfterTimestamp:withTimeout:block:]
-[ADVolumeService setClientConfiguration:]_block_invoke
-[ADVolumeService getSiriOutputVolumeForAudioRoute:completion:]
-[ADVolumeService setSiriOutputVolume:forAudioRoute:operationType:completion:]
-[ADVolumeService _fetchSystemVolumes]
-[ADVolumeService systemVolumeChanged:]
-[ADVolumeService _handleSystemVolumeChangeForCategory:volume:audioCategory:reason:]
-[ADVolumeService _fetchSmartSiriVolume]
-[ADVolumeService _setNeedsUpdateSiriVolume]
-[ADVolumeService _updateSiriVolumeIfNeeded]
-[ADVolumeService _updateSiriVolume:completion:]
_ADVolumeServiceSmartSiriVolumeIsValid
_ad_voiceInfo
T@"AFVoiceInfo",&,N,S_ad_setVoiceInfo:
_ad_data
T@"ADSharedData",C,N,S_ad_setData:
_ad_requestInfo
T@"AFRequestInfo",C,N,S_ad_setRequestInfo:
-[ADSessionLocalServer _startSession]
-[ADSessionLocalServer setHasActiveRequest:]
-[ADSessionLocalServer _saAssistantNotReady:]
Mini not ready
-[ADSessionLocalServer _assistantFailedForReason:error:]
-[ADSessionLocalServer _saCommandFailed:]
-[ADSessionLocalServer _saAssistantLoaded:]
-[ADSessionLocalServer _handleAceObject:]
-[ADSessionLocalServer sendCommand:]
-[ADSessionLocalServer _sendServerCommand:]
-[ADSessionLocalServer _sendServerCommand:]_block_invoke
-[ADSessionLocalServer _sendLoadAssistant]
-[ADSessionLocalServer siriConnection:didOpenWithConnectionType:delay:]
-[ADSessionLocalServer siriConnection:didReceiveAceObject:]
-[ADSessionLocalServer siriConnectionDidClose:]
-[ADSessionLocalServer siriConnection:didEncounterError:]
-[ADSessionLocalServer _sendAssistantDataChangedSinceAnchor:refId:]
Find My Device Monitor Queue
-[ADFMDMonitor init]
lost
not lost
ADBluetoothWirelessSplitterSessionObserver
-[ADBluetoothWirelessSplitterSessionObserver bluetoothWirelessSplitterSession:sessionInfoDidChangeFrom:to:]
-[ADBluetoothWirelessSplitterSessionObserver bluetoothWirelessSplitterSessionDidInvalidate:]
%@ Recognition Text: "%@"
%@ Partial Recognition Text: "%@"
%@ key: %@
-[SASStartSpeech(ADSAExtensions) ad_setADRecordingInfo:]
-[SASUpdateAudioInfo(ADSAExtensions) ad_updateWithRecordingInfo:speechRequestOptions:clientConfiguration:]
[%@ count:%tu total:%ld
  aceId: %@
  refId: %@]
%@ errorCode: %ld reason: %@
ad_parentRequest
T@"SABaseCommand",&,N,Sad_setParentRequest:
device:
ADPeerInfo
%@ idsIdentifier: %@ productType: %@ buildVersion: %@ name: %@
idsIdentifier
productType
buildVersion
T@"NSString",R,C,N,V_idsIdentifier
T@"NSString",R,C,N,V_productType
T@"NSString",R,C,N,V_buildVersion
T@"NSString",R,C,N,V_name
dictionaryRepresentation
T@"NSDictionary",R,C,N
idsDeviceUniqueIdentifier
T@"NSString",C,N,V_idsDeviceUniqueIdentifier
deviceOwnedByCurrentUser
TB,N,GisDeviceOwnedByCurrentUser,V_deviceOwnedByCurrentUser
idsFirstRoutableDestination
T@"NSString",C,N,V_idsFirstRoutableDestination
airPlayRouteIdentifiers
T@"NSArray",C,N,V_airPlayRouteIdentifiers
rapportEffectiveIdentifier
T@"NSString",C,N,V_rapportEffectiveIdentifier
mediaSystemIdentifier
T@"NSString",C,N,V_mediaSystemIdentifier
T@"NSString",C,N,V_roomName
preferredMessagingOptionsForCommands
TQ,N,V_preferredMessagingOptionsForCommands
userInterfaceIdiom
T@"NSString",C,N,V_userInterfaceIdiom
aceVersion
T@"NSString",C,N,V_aceVersion
-[ADMultiUserStateContextProvider handleMultiUserDidReceiveScoresNotification:]
v32@?0@8@16^B24
com.apple.assistant.clock-service
-[ADClockService getFiringStatesWithCompletion:]
-[ADClockService getFiringStatesWithCompletion:]_block_invoke_2
-[ADClockService getFiringStatesWithCompletion:]_block_invoke
v32@?0@"NSString"8@"AFClockAlarmSnapshot"16^B24
v32@?0@"NSUUID"8@"AFClockTimer"16^B24
-[ADClockService getSnapshotsWithCompletion:]
-[ADClockService getSnapshotsWithCompletion:]_block_invoke
-[ADClockService requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke
v24@?0@"AFClockAlarmSnapshot"8@"AFClockTimerSnapshot"16
-[ADClockService requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke
-[ADClockService _mutateMergedClockTimerSnapshotUsingBlock:]
v24@?0@"NSString"8@"AFClockAlarmSnapshot"16
v24@?0@"NSString"8@"AFClockTimerSnapshot"16
-[ADClockService _mergedClockAlarmSnapshot]
-[ADClockService _mergedClockAlarmSnapshot]_block_invoke
-[ADClockService _mergedClockTimerSnapshot]
-[ADClockService _mergedClockTimerSnapshot]_block_invoke
-[ADClockService _dismissFiringItemsWithOptions:]
remoteTimerManager
T@"ADRemoteTimerManager",R,N,V_remoteTimerManager
limit
limit = %@
ADDeviceSyncCommandPullDeltaRequest::dataType
ADDeviceSyncCommandPullDeltaRequest::generation
ADDeviceSyncCommandPullDeltaRequest::limit
TQ,R,N,V_limit
com.apple.siri.analytics.storage.purged
com.apple.siri.analytics.storage.snapshot
com.apple.siri.analytics.batchupload
hour
storageSize
ADNotificationManager
-[ADNotificationManager fetchAllBulletinsWithCompletion:]_block_invoke
-[ADNotificationManager fetchBulletinsOnLockScreenWithCompletion:]_block_invoke_2
v16@?0@"AFBulletin"8
-[ADNotificationManager observer:addBulletin:forFeed:]_block_invoke
-[ADNotificationManager observer:modifyBulletin:forFeed:]_block_invoke
-[ADNotificationManager observer:removeBulletin:forFeed:]_block_invoke
-[ADNotificationManager observer:purgeReferencesToBulletinID:]_block_invoke
-[ADNotificationManager observer:updateSectionInfo:]
-[ADNotificationManager observer:updateSectionInfo:]_block_invoke
-[ADNotificationManager observer:noteServerConnectionStateChanged:]
-[ADNotificationManager _getNotificationsFromBulletinBoard]
com.apple.cmas
-[ADNotificationManager _getRestrictedAppsFromBulletinBoard]
-[ADNotificationManager _getRestrictedAppsFromBulletinBoard]_block_invoke
-[ADNotificationManager _getRestrictedAppsFromBulletinBoard]_block_invoke_2
T@"<ADNotificationManagerDelegate>",W,N,V_delegate
dataSource
T@"<ADNotificationManagerDataSource>",W,N,V_dataSource
BBObserver
/System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
corespeech
myriad
requestlifecycle
methodType
methodName
lastWin
ADDeviceSyncCommandPullGenerationsResponse::generationsByDataType
com.apple.assistant.device-sync.data-type.alarm
com.apple.assistant.device-sync.data-type.timer
%@ (info = %@)
info
T@"AFCommandExecutionInfo",R,C,N,V_info
isFromRemote
originPeerInfo
T@"ADPeerInfo",R,N
Daemon
ADRapportLinkTransportOptions
NSCopying
NSSecureCoding
NSCoding
_ADRapportLinkTransportOptionsMutation
ADRapportLinkTransportOptionsMutating
NSObject
ADRapportLinkTransportOptionsMutability
Sync
Context
ADDeviceAuthenticationSessionV1
ADTimerTransformer
ADAceRequestTransformer
ADAceResponseTransformer
ADRecordingInfo
ADPeerConnection
IDSServiceDelegate
ADDeviceSyncMessage
_ADDeviceSyncMessageMutation
ADDeviceSyncMessageMutating
ADDeviceSyncMessageMutability
ADExternalNotificationRequest
ADAudioSession
ADAudioRoute
_ADPBProxyReestablishRequest
ADAudioFileWriter
ADDeviceSyncCommandPullSnapshotRequest
_ADDeviceSyncCommandPullSnapshotRequestMutation
ADDeviceSyncCommandPullSnapshotRequestMutating
ADDeviceSyncCommandPullSnapshotRequestMutability
_ADPBProxyTCPInfoMetrics
ADSharedPeerStreamConnection
ADPeerStreamConnection
ADKnowledgeService
DeviceRouting
ADDeviceRouter
CoreSpeechExtensions
ADRemoteTimerManager
AFClockItemStorageDelegate
AMSMockServerProtocol
ADMockServer
_ADPBDeviceExecuteOnRemoteResponse
ADDeviceSyncSnapshot
_ADDeviceSyncSnapshotMutation
ADDeviceSyncSnapshotMutating
ADDeviceSyncSnapshotMutability
ADOpportuneSpeakingMovingAverageBuffer
ADDictationOfflineStatusObserver
ADCompanionRoutingService
ADAcePassthroughRequestTransformer
ADSystemService
ADSyncRequest
ADHealthTransformer
ADCalendarTransformer
ADDisplayScaleContextCollector
FBSDisplayObserving
ADSyncBlacklist
ADCoreSpeechService
ADAccount
SharedData
ConnectionPolicy
RemoteDevice
ADGenericIntentResponseTransformer
ADClientFlowServiceHelper
AFServiceHelper
ADClientFlowService
ADClientFlowServiceCommand
ADClientFLowService
_ADPBProxyGetMetricsRequest
_ADPBDevice
ADDeviceSyncMessagingServiceRapport
ADDeviceSyncMessagingService
ADDeviceSyncCommandPullGenerationsRequest
_ADDeviceSyncCommandPullGenerationsRequestMutation
ADDeviceSyncCommandPullGenerationsRequestMutating
ADDeviceSyncCommandPullGenerationsRequestMutability
_ADPBProxyWakeUpRequest
ADMailTransformer
ADGreenTeaLogger
ADServiceManager
ADServiceRecord
_ADChunkInfo
ADSyncSnapshot
_ADPBDeviceStartRemoteResponse
ADSharedData
ADDeviceSyncCommandPullDeltaResponse
_ADDeviceSyncCommandPullDeltaResponseMutation
ADDeviceSyncCommandPullDeltaResponseMutating
ADDeviceSyncCommandPullDeltaResponseMutability
ADSpeechCompressor
ADSpeechCapturing
ADHomeAnnouncementContextProvider
AFContextSnapshotTransforming
ADTimerContextProvider
ADOpportuneSpeakingModuleEdgeDetector
CSOpportuneSpeakListenerDelegate
AFDictationService
AFSettingsService
ADIntentPreferencesAndVocabularyUpdateService
INVocabularyUpdateService
AFManagedStorageService
AFUserNotificationService
AFUserNotificationServiceDelegate
ADDaemon
NSXPCListenerDelegate
ADAudioPlaybackSession
AVAudioPlayerDelegate
ADSharedDataService
ADPeerConnectionDelegate
ADSessionManager
ADSessionDelegate
ADSessionAssertion
ADSessionAsserting
ADMobileBluetoothDeviceDataSource
AFInvalidating
ADMobileBluetoothDeviceProxy
ADBluetoothDevice
ADMobileBluetoothWirelessSplitterSessionProxy
ADBluetoothWirelessSplitterSession
AFBluetoothWirelessSplitterSessionStateObserverDelegate
ADServiceStatistics
AFAWDSiriRequestRecord
ADDictationSession
ADSessionLocalConnection
ADCallObserver
ADContextExtras
ADContextManager
_ADDomainObjectCacheEntry
ADDomainObjectCache
ADMapsTransformer
IntentSupport
ADDeviceSyncMessageSendingContext
ADSettingsRequestHandler
ADRequestDelayManager
ADSessionManagerIntercepting
ADAcousticIDHelper
ADPeerLocationRemote
CLLocationManagerDelegate
MTTimerIntentSupport
_ADPBDeviceSetDataRequest
ADRapportLinkDiscoveryOptions
_ADRapportLinkDiscoveryOptionsMutation
ADRapportLinkDiscoveryOptionsMutating
ADRapportLinkDiscoveryOptionsMutability
ADPeerLocationConnection
ADPeerLocationPolicyDelegate
ADAcePassthroughSiriRequest
ADPeerConnectionProvider
ADPeerStreamConnectionDelegate
ADBuddyMonitor
_ADPBDeviceExecuteOnRemoteRequest
ADCloudKitMirroredContainer
_ADPBDeviceOutputVoiceInfo
ADExternalRequestListener
ADTimerStore
ADUnavailableTimerStore
ADTimerStoring
ADDiagnosticsManager
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
ADDeviceSyncCoordinator
ADDeviceSyncMessagingServiceDelegate
ADDeviceSyncDataProviderDelegate
ADSiriAppLaunchRequestHandler
ADMessagesTransformer
ADDeviceSyncSession
ADDeviceSyncMessageReceiving
ADAcePassthroughSiriResponse
ADServiceCommandType
ADSettingsService
ADOpportuneSpeakingVoiceActivityModel
AFOpportuneSpeakingModel
_ADPBLocationSetPeerLocationRequest
ASXSignatureExtracting
ADAcousticFingerprinter
ADAnalyticsStore
ADAnalyticsEventRecordBuilder
SiriCoreSQLiteRecordBuilder
AFFlowService
AFDeviceStateService
ADFlowServiceListener
ADGenericIntentRequestTransformer
NanoServices
ADSiriUserNotificationRequestCapabilityManager
ADWorkoutTransformer
ADDeviceSyncCommandPushGenerationsResponse
_ADDeviceSyncCommandPushGenerationsResponseMutation
ADDeviceSyncCommandPushGenerationsResponseMutating
ADDeviceSyncCommandPushGenerationsResponseMutability
ADAVSystemControllerLifecycleManager
ADPassthroughEndpointer
Endpointer
ADLocalRequestProvider
ADMediaPlaybackContextProvider
AFNowPlayingListening
ADSiriRequestSucceededResponseTransformer
ADTimerIntentExtension
INCLocalExtending
INIntentHandlerProvidingPrivate
INIntentHandlerProviding
ADTimerIntentHandler
ADClientLiteListener
ADClientLite
AFClientLiteRemoteCommandHandling
ADCommandCenterRequestDelegate
ADClientLiteWorkItem
ADRemoteSpeechRequestHelper
ADExtensionService
INSExtensionServiceDelegate
_ADPBProxy
ADRemoteContextStore
ADDeviceCountAndTimestamp
ADDeviceCircleManager
SiriHelper
ADCloudResponseHandler
ADPeerResponse
ADPeerCloudService
ADRemoteExecution
ADSiriUtilities
ADAlarmStore
ADAlarmQuery
AFAlarmMatching
ADUnavailableAlarmStore
ADAlarmStoring
ADAudioPowerCoreSpeechProvider
AFAudioPowerProviding
ADManagedObjectService
ADSpeechLog
ADDeviceAuthenticationSessionV0
ADDeviceAuthenticationSession
ADOfflineMetrics
ADLocationManager
ADPeerLocationConnectionDelegate
AssistantExtensions
ADLocationExtensions
AFMutableDeviceContext
MutableCopy
ADLocalContextStore
AFContextDonationXPCInterface
ADDeviceCircleManagerListening
AFContextDonation
Myriad
ADMediaRemote
ADMediaRemoteServiceCommand
ADMediaRemoteService
ADDictationSessionTracker
ADSecurityService
AFSecurityService
ContextSnapshot
AFContextSnapshot
ADDeviceProximityManager
ADRequestLifecycleListening
ADRapportLinkConfiguration
_ADRapportLinkConfigurationMutation
ADRapportLinkConfigurationMutating
ADRapportLinkConfigurationMutability
AFPersonalUserSettings
ADExperimentManager
SAClientBoundCommand
SAAceCommand
SAAceReferable
SAServerBoundCommand
ADCommandCenterSpeechDelegate
ADCommandCenter
ADSessionManagerDelegate
ADSpeechManagerDelegate
ADLocationManagerDelegate
ADUIServiceDelegate
ADCallObserverDelegate
ADAlarmContextProvider
SOAlarmsSubscriber
ADTTSMutingObserver
CSAudioSessionControllerDelegate
ADSADOCommand
SADomainObjectCommand
SAAceSerializable
AceObject
NSMutableCopying
SADExtras
ADSystemLanguagePreferencesObserver
AFNotifyObserverDelegate
ADHomeInfoManager
HMHomeManagerDelegate
HMHomeManagerDelegatePrivate
HMUserDelegatePrivate
HMUserCloudShareManagerDelegate
HMHomeDelegate
HMSettingsDelegate
HMHomeDelegatePrivate
HMAccessorySettingsDelegate
ADHomeInfo
_ADPBLocationGetPeerLocationRequest
ADAudioActivationInfo
Analytics
ADOpportuneSpeakingStateManager
ADAnalyticsFuzzingInterval
AcousticId
ADRequestLifecycleObserver
ADDeviceSyncCommandPushGenerationsRequest
_ADDeviceSyncCommandPushGenerationsRequestMutation
ADDeviceSyncCommandPushGenerationsRequestMutating
ADDeviceSyncCommandPushGenerationsRequestMutability
ADCommunalDeviceUserAttributes
ADSpeechRecorder
ADAcousticFingerprinterDelegate
CSSpeechControllerDelegate
CSEndpointAnalyzerDelegate
CSLanguageDetectorDelegate
CSSpeakerIdentificationDelegate
ADSystemMuteModeObserver
ADInstrumentationResolver
ADDeviceRouterResult
_ADDeviceRouterResultMutation
ADDeviceRouterResultMutating
ADDeviceRouterResultMutability
ADSpeechCapturingContext
ADFanInfoManager
ADFanInfo
ADSettingsTransformer
ADOfflineMetricsManager
ADResultObjectCache
ResultCallbacks
ADResultObjectCacheInternal
ADMissingReferencesContext
ADCalendarError
AFDiagnostics
AFDiagnosticsNetworkAnalyzerResults
AFDiagnosticsAdditions
AFAdditions
_ADPBDeviceStartRemoteRequest
SiriDaemonAdditions
InvocationFeedback
SANotificationObject
AFAnalytics
AFSiriUserNotificationRequest
AFSiriExternalRequest
AFSiriUserNotificationRequestCapabilityManager
AFSettingsDelegate
AFSiriNotificationRequest
ADIntentsUserActivityManager
Punchouts
ADPeerLocationPolicy
VSAdditions
ADBackgroundContextCache
ADAuthenticator
SiriAce
AFRequestInfo
ADSyncChunkInfo
ADLocalPhoneService
ADSyncManager
ADServiceDelegate
SyncKeys
SyncKeysPrivate
ADSession
ADAssistantDataManagerObserver
ADDictationOnDeviceSampling
ADAlarmTransformer
ADManagedStorageConnection
ADDeleteSyncDataService
AFSyncHandler
ADOfflineMetricsMap
SharedDataClient
SharedDataRemote
ADSpeechSamplingDictationAudioDataHandler
ADServiceConnection
ADServiceConnectionProviderServiceDelegate
AFProviderServiceDelegate
ADPreferences
ADDeviceSyncIncrementalChange
_ADDeviceSyncIncrementalChangeMutation
ADDeviceSyncIncrementalChangeMutating
ADDeviceSyncIncrementalChangeMutability
ADAnalyticsDeliveryBatch
RecipientDevicesSelection
ADLocalMeCardStore
ADSiriTaskService
ADUIService
ServiceMaintenance
SimulatorIDSDevice
ADIDSSimulatorService
OutputVoice
ADDeviceSyncMessageSender
ADDeviceSyncMessageSending
ADGenericIntentService
Metrics
ADGenericIntentRequestHandler
ADOpportuneSpeakingModule
AFOpportuneSpeakingModelDelegate
ADDeviceSyncCommandPullSnapshotResponse
_ADDeviceSyncCommandPullSnapshotResponseMutation
ADDeviceSyncCommandPullSnapshotResponseMutating
ADDeviceSyncCommandPullSnapshotResponseMutability
AMOS
AFMultiUserService
ADMultiUserService
ADAddressBookManager
ADCoreBluetoothDevice
ADCoreBluetoothManager
CBCentralManagerDelegate
CBPeripheralDelegate
ADBaseService
_ADPBDeviceGetDataRequest
ADRemoteRequestHelper
ADTimerRequestHandler
ADStopwatchRequestHandler
ADMultiUserTestSupport
ADAlarmRequestHandler
ADAudioPlaybackService
AFMemoryPressureListening
AFAudioPlaybackService
_ADPBLocation
ADFauxUIService
ADExtension
ADSynapseService
ADAceResponseAdditions
ADHomeAnnouncementContextAdaptor
AFHomeAnnouncementListening
ADMyriadService
ADAcePassthroughResponseTransformer
ADSessionRemoteServer
SiriCoreNetworkManagerObserver
SiriCoreSiriConnectionDelegate
ADCommunalDeviceUser
ADDeviceSyncTimerProvider
AFClockTimerListening
ADDeviceSyncDataProviding
ADSiriTetherListener
ADSpeechPlaybackSimulator
_ADPBProxyGetMetricsResponse
ADBundleService
ADServiceConnectionDelegate
ADSyncFlagManager
ADDeviceSyncTimerConsumer
ADDeviceSyncDataConsuming
ADShowNextEventRequestHandler
AFSiriRequestHandling
ADAnnounceNotificationRequestBuilder
ADFMIPListener
APSConnectionDelegate
ADHomeKitService
RemoteExecute
ADSessionBarrier
SiriCoreSessionObject
SiriCoreThunking
ADService
ADAnalyticsService
AFAnalyticsObservationService
AFAnalyticsService
ADUserNotificationServiceProvider
UNUserNotificationCenterDelegate
ADPushContextListener
ADPushContextReceiver
ADNotifyAndPushContextCollector
ADAceDomainSignalRequestHandler
_ADSADAdditions
ADAssistantDataManager
MCProfileConnectionObserver
ADAddressBookManagerDelegate
ADDisplayScaleContextCollectorDelegate
ADLocalMeCardStoreObserving
ADAnalyticsFBFDeliveryInfrastructure
ADSiriConnectionRemote
SiriCoreConnectionProviderDelegate
ADDeviceSyncItem
_ADDeviceSyncItemMutation
ADDeviceSyncItemMutating
ADDeviceSyncItemMutability
ADMessageTransformer
ADOTTRequestTransformer
ADAudioStateManager
ADAudioStateAnnouncing
_ADAudioStateListenerProxy
ADSyncVerificationHelper
ADIntentVocabularyUpdateConnection
ADHomeAnnouncementService
ADVibrationManager
ADRetryManager
ADMotionManager
ADClientConnection
ADHandsFreeStateChangedObserver
ADAudioStateListening
ADAudioPlaybackServiceListening
ADBluetoothDeviceObserver
ADCommandCenterClient
AFClientService
ADClientConnectionSupport
StructuredDictation
ADDictationConnection
SiriCoreLocalSpeechRecognizerDelegate
AFAWDSiriSession
ADSpeechManager
ADSpeechCapturingDelegate
ADVolumeServiceProviding
ADVolumeTracking
ADRecordingInfoProviding
AFAudioPowerUpdaterDelegate
ADExternalNotificationRequestHandler
ADRequestDelayManagerDelegate
ADSettingsClient
ADCommandCenterSyncDelegate
ADRapportProximityObservation
AFDictionaryConvertible
_ADRapportProximityObservationMutation
ADRapportProximityObservationMutating
ADRapportProximityObservationMutability
_ADPBDeviceStringKeyValueDictionary
_ADPBDeviceStringKeyValuePair
ADVolumeService
ADAVSystemControllerLifecycleObserver
ADSessionLocalServer
ADSessionLocalConnectionDelegate
ADBluetoothManager
ADSiriContextServiceClient
ADFMDMonitor
ADBluetoothWirelessSplitterSessionObserver
ADBluetoothWirelessSplitterSessionObserving
ADSAExtensions
ADPeerInfo
ADMultiUserStateContextProvider
ADClockService
ADDeviceSyncCommandPullDeltaRequest
_ADDeviceSyncCommandPullDeltaRequestMutation
ADDeviceSyncCommandPullDeltaRequestMutating
ADDeviceSyncCommandPullDeltaRequestMutability
ADCoreAnalyticsSideChannel
ADNotificationOrderedDictionary
ADNotificationManager
BBObserverDelegate
ADDeviceSyncCommandPullGenerationsResponse
_ADDeviceSyncCommandPullGenerationsResponseMutation
ADDeviceSyncCommandPullGenerationsResponseMutating
ADDeviceSyncCommandPullGenerationsResponseMutability
ADCommandExecutionContext
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8q16q24q32
@16@0:8
@24@0:8Q16
Q16@0:8
B24@0:8@16
q16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
v16@0:8
@"ADRapportLinkTransportOptions"
{_mutationFlags="isDirty"b1"hasAllowsAWDL"b1"hasAllowsBLE"b1"hasAllowsInfraWiFi"b1}
@24@0:8@?16
v56@0:8@16@24@32B40B44@48
v44@0:8@16B24@28@36
v32@0:8@16@?24
v32@0:8@"SABaseClientBoundCommand"16@?<v@?@"AFSiriRequest">24
@40@0:8@16@24@32
@"<SAAceCommand>"40@0:8@"AFSiriResponse"16@"NSError"24@"SABaseClientBoundCommand"32
@24@0:8q16
@152@0:8B16B20B24q28@36@44@52@60@68I76I80@84d92d100d108Q116Q124@132B140q144
@28@0:8B16@20
d16@0:8
I16@0:8
v20@0:8B16
v24@0:8Q16
@"NSString"
@"CSAudioRecordDeviceInfo"
@"NSDictionary"
@"<ADBluetoothDevice>"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@36@0:8@16^?24B32
@32@0:8@16^?24
B24@0:8^@16
v28@0:8@16B24
v40@0:8@16#24@?32
v48@0:8@16#24d32@?40
v48@0:8@16#24B32B36@?40
v64@0:8@16#24B32d36B44B48B52@?56
v32@0:8@16^?24
@"NSObject<OS_dispatch_queue>"
@"IDSService"
@"NSMutableDictionary"
@"<ADPeerConnectionDelegate>"
@96@0:8Q16q24@32@40@48@56@64@72@80@88
@"ADDeviceSyncCommandPushGenerationsRequest"
@"ADDeviceSyncCommandPushGenerationsResponse"
@"ADDeviceSyncCommandPullGenerationsRequest"
@"ADDeviceSyncCommandPullGenerationsResponse"
@"ADDeviceSyncCommandPullDeltaRequest"
@"ADDeviceSyncCommandPullDeltaResponse"
@"ADDeviceSyncCommandPullSnapshotRequest"
@"ADDeviceSyncCommandPullSnapshotResponse"
v24@0:8@"ADDeviceSyncCommandPushGenerationsRequest"16
v24@0:8@"ADDeviceSyncCommandPushGenerationsResponse"16
v24@0:8@"ADDeviceSyncCommandPullGenerationsRequest"16
v24@0:8@"ADDeviceSyncCommandPullGenerationsResponse"16
v24@0:8@"ADDeviceSyncCommandPullDeltaRequest"16
v24@0:8@"ADDeviceSyncCommandPullDeltaResponse"16
v24@0:8@"ADDeviceSyncCommandPullSnapshotRequest"16
v24@0:8@"ADDeviceSyncCommandPullSnapshotResponse"16
@"ADDeviceSyncMessage"
{_mutationFlags="isDirty"b1"hasSequence"b1"hasType"b1"hasCommandPushGenerationsRequest"b1"hasCommandPushGenerationsResponse"b1"hasCommandPullGenerationsRequest"b1"hasCommandPullGenerationsResponse"b1"hasCommandPullDeltaRequest"b1"hasCommandPullDeltaResponse"b1"hasCommandPullSnapshotRequest"b1"hasCommandPullSnapshotResponse"b1}
@40@0:8@16@24@?32
@"ADAudioRoute"
@20@0:8I16
@36@0:8q16@?24I32
@36@0:8q16@24I32
@44@0:8q16@?24@32I40
^{OpaqueExtAudioFile=}
v24@0:8@"NSString"16
{_mutationFlags="isDirty"b1"hasDataType"b1}
v20@0:8I16
{?="rxBytes"b1"rxDuplicateBytes"b1"rxOooBytes"b1"rxPackets"b1"sndBandwidth"b1"txBytes"b1"txPackets"b1"txRetransmitBytes"b1"txUnacked"b1"rttBest"b1"rttCurrent"b1"rttSmoothed"b1"rttVariance"b1"synRetransmits"b1"tfoSynDataAcked"b1}
@32@0:8q16@24
@28@0:8@16B24
v24@0:8@?16
@"NSHashTable"
@"ADPeerStreamConnection"
@"IDSDeviceConnection"
@"NSMutableSet"
@36@0:8@16@24B32
@"ADSharedPeerStreamConnection"
@"<ADPeerStreamConnectionDelegate>"
@40@0:8@16@24B32B36
v36@0:8@16B24@?28
v48@0:8@"AFClockItemStorage"16@"NSSet"24@"NSSet"32@"NSSet"40
v32@0:8@"NSURL"16@?<v@?@"NSError">24
@"<AMSMockServerProtocol>"
@"NSData"
@40@0:8Q16@24@32
@"NSDate"
@"NSArray"
v24@0:8@"NSDate"16
v24@0:8@"NSArray"16
@"ADDeviceSyncSnapshot"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasItems"b1}
v20@0:8C16
f16@0:8
B32@0:8@16@24
v48@0:8@16@24@32@?40
^{__CFDictionary=}
@?16@0:8
@"AFWatchdogTimer"
@"NSUUID"
v40@0:8@"FBSDisplayMonitor"16@"FBSDisplayIdentity"24@"FBSDisplayConfiguration"32
v32@0:8@"FBSDisplayMonitor"16@"FBSDisplayIdentity"24
@"FBSDisplayMonitor"
@"<ADDisplayScaleContextCollectorDelegate>"
{_keychainDataMutationFlags="assistantIdentifierIsDirty"b1"loggingAssistantIdentifierIsDirty"b1"speechIdentifierIsDirty"b1"peerAssistantIdentifierIsDirty"b1"peerLoggingAssistantIdentifierIsDirty"b1"peerSpeechIdentifierIsDirty"b1"peerUserAgentStringIsDirty"b1"peerLanguageCodeIsDirty"b1"peerSiriEnabledIsDirty"b1"gizmoDataIsDirty"b1}
B24@0:8@"NSURL"16
@"NSString"40@0:8@"NSString"16@"NSString"24@"NSBundle"32
v32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand"@"NSError">24
@"AFPeerInfo"16@0:8
v24@0:8@?<v@?B>16
v24@0:8@?<v@?>16
v36@0:8@"NSSet"16B24@?<v@?@"NSArray">28
@48@0:8@16@24@32@40
@"AFCommandExecutionInfo"
v40@0:8@"NSObject<OS_dispatch_queue>"16@"ADCommandExecutionContext"24@?<v@?@"<SAAceCommand>"@"NSError">32
v40@0:8@"ADDeviceSyncMessage"16@"NSString"24@?<v@?@"ADDeviceSyncMessage"@"NSError">32
@"<ADDeviceSyncMessagingServiceDelegate>"
{_mutationFlags="isDirty"b1"hasDataTypes"b1}
v32@0:8@16q24
@24@0:8^B16
@32@0:8@16@24
@32@0:8@16q24
@"<ADService>"
@"NSObject<OS_dispatch_source>"
{?="success"b1}
{_mutationFlags="isDirty"b1"hasIncrementalChanges"b1}
v32@0:8{AFTimeRange=dd}16
v28@0:8d16B24
v36@0:8q16B24Q28
v32@0:8d16@?24
@24@0:8@"NSObject<OS_dispatch_queue>"16
v24@0:8@"<ADSpeechCapturingDelegate>"16
v24@0:8@"AFSpeechRequestOptions"16
v24@0:8@?<v@?dd>16
v24@0:8@"CSServerEndpointFeatures"16
v32@0:8d16@?<v@?B@"NSArray">24
v24@0:8d16
@"<ADSpeechCapturingDelegate>"
^{OpaqueAudioConverter=}
@"NSMutableData"
v48@0:8@16@24q32@?40
v48@0:8@"<AFContextSnapshot>"16@"AFDeviceContextMetadata"24q32@?<v@?@"<AFContextSnapshot>"@"AFDeviceContextMetadata">40
v32@0:8@"<AFContextSnapshot>"16@?<v@?@"NSArray">24
@"ADHomeAnnouncementContextAdaptor"
v28@0:8@"CSOpportuneSpeakListener"16B24
v20@0:8f16
v52@0:8@16f24f28B32@?36@?44
@"ADOpportuneSpeakingMovingAverageBuffer"
@"CSOpportuneSpeakListener"
Vv24@0:8@?16
Vv48@0:8@16@24@32@?40
Vv40@0:8@16@24@32
Vv24@0:8@16
Vv40@0:8@16@24B32B36
Vv32@0:8@16@24
Vv44@0:8@16B24@28@36
Vv32@0:8q16@24
Vv32@0:8@16@?24
Vv40@0:8@16q24@32
Vv48@0:8@16q24@32@40
Vv24@0:8@?<v@?>16
Vv48@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32@?<v@?@"NSXPCListenerEndpoint">40
Vv40@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32
Vv24@0:8@"AFSpeechRequestOptions"16
Vv40@0:8@"AFDictationOptions"16@"NSString"24B32B36
Vv24@0:8@"NSData"16
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSDictionary"24
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSString"24
Vv32@0:8@"NSString"16@"AFDictationOptions"24
Vv24@0:8@"NSString"16
Vv24@0:8@"NSError"16
Vv44@0:8@"NSURL"16B24@"NSString"28@"AFDictationOptions"36
Vv32@0:8q16@"NSString"24
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv40@0:8@"NSError"16q24@"NSDictionary"32
Vv48@0:8@"NSError"16q24@"NSString"32@"NSDictionary"40
Vv28@0:8@16B24
Vv20@0:8B16
Vv44@0:8@16B24@28@?36
v32@0:8B16B20@?24
Vv28@0:8B16@?20
Vv40@0:8@16@24@?32
Vv56@0:8@16@24Q32@40@?48
Vv36@0:8f16@20@?28
Vv60@0:8@16@24@32@40B48@?52
Vv44@0:8@16@24B32@?36
Vv32@0:8B16B20@?24
Vv72@0:8@16@24@32@40@48@56@?64
Vv32@0:8q16@?24
Vv24@0:8q16
Vv56@0:8@16d24d32q40@?48
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv28@0:8@"NSDictionary"16B24
Vv44@0:8@"NSArray"16B24@"NSString"28@?<v@?@"NSArray">36
v32@0:8B16B20@?<v@?@"NSArray">24
Vv28@0:8B16@?<v@?@"NSArray">20
Vv32@0:8@"AFVoiceInfo"16@?<v@?>24
Vv32@0:8@"NSString"16@?<v@?>24
Vv40@0:8@"NSString"16@"AFVoiceInfo"24@?<v@?@"NSDictionary"@"NSError">32
Vv24@0:8@?<v@?@"NSDictionary"@"NSError">16
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSData"@"NSError">40
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8@"AFRequestInfo"16@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
Vv56@0:8@"NSString"16@"NSString"24Q32@"NSDictionary"40@?<v@?@"NSError">48
Vv32@0:8@"NSURL"16@?<v@?@"NSError">24
Vv40@0:8@"AFRequestInfo"16@"NSString"24@?<v@?@"NSError">32
Vv32@0:8@"AFAudioPlaybackRequest"16@?<v@?@"NSError">24
Vv28@0:8@"AFAudioPlaybackRequest"16B24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSArray"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"NSDate"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
Vv32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv24@0:8@?<v@?@"AFExperimentContext"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSArray">24
Vv24@0:8@?<v@?@"SAPerson"@"NSError">16
Vv24@0:8@?<v@?B@"NSError">16
Vv32@0:8@"NSDictionary"16@?<v@?>24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv32@0:8@"NSUUID"16@?<v@?@"AFPeerInfo">24
Vv24@0:8@?<v@?@"NSArray"B>16
Vv24@0:8@"NSNumber"16
Vv32@0:8@"NSString"16@?<v@?f@"NSError">24
Vv36@0:8f16@"NSString"20@?<v@?@"NSError">28
Vv32@0:8@"NSString"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv32@0:8@"NSUUID"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv24@0:8@?<v@?@"AFBluetoothWirelessSplitterSessionInfo">16
Vv60@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
Vv24@0:8@?<v@?@"NSString">16
Vv44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSError">36
Vv32@0:8B16B20@?<v@?B>24
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
Vv72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?@"NSError">64
Vv24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
Vv24@0:8@?<v@?B>16
Vv28@0:8B16@?<v@?@"NSError">20
Vv28@0:8B16@?<v@?>20
Vv32@0:8@"NSNumber"16@?<v@?>24
Vv32@0:8q16@?<v@?>24
Vv24@0:8@?<v@?@"NSDate">16
Vv24@0:8@"NSDate"16
Vv32@0:8@"NSString"16@?<v@?@"NSDate">24
Vv32@0:8@"NSString"16@"NSDate"24
Vv24@0:8@?<v@?@"NSUUID">16
Vv24@0:8@?<v@?q>16
Vv32@0:8@"AFDeleteSiriHistoryContext"16@?<v@?@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
Vv56@0:8@"NSString"16d24d32q40@?<v@?@"NSURL"@"NSError">48
Vv32@0:8@"AFMyriadAdvertisementContext"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSArray"16@"NSString"24@?<v@?B>32
v24@0:8@?<v@?q>16
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?B>24
Vv32@0:8@"NSDictionary"16@"NSString"24
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary">24
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?>40
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData">32
v32@0:8@"UNNotificationRequest"16@?<v@?@"NSError">24
v24@0:8@"UNNotificationResponse"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v36@0:8^@16^@24i32
@"NSXPCListener"
@"NSObject<OS_xpc_object>"
@"ADExternalRequestListener"
@"ADClientLiteListener"
@"ADSiriTetherListener"
@"ADSiriConnectionRemote"
@"ADPeerLocationRemote"
@"NSCountedSet"
^{MGNotificationTokenStruct=}
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@40@0:8@16@24Q32
v40@0:8Q16@24@?32
v56@0:8Q16@24@?32@?40@?48
v28@0:8B16@?20
B40@0:8Q16@24^@32
@"AVAudioPlayer"
@"AVAudioSession"
@"AFAudioPlaybackRequest"
v40@0:8@"ADPeerConnection"16@"PBCodable"24@?<v@?@"PBCodable"@"NSError">32
v28@0:8@"ADPeerConnection"16B24
@"ADPeerConnection"
@"ADSharedData"
@"<ADSharedDataNotificationDelegate>"
v36@0:8@16@24B32
v48@0:8@16@24@32d40
B24@0:8@"ADSession"16
v24@0:8@"ADSession"16
v32@0:8@"ADSession"16@"AceObject<SAAceCommand>"24
v40@0:8@"ADSession"16@"AceObject<SAAceCommand>"24@"NSError"32
v36@0:8@"ADSession"16@"NSError"24B32
B32@0:8@"ADSession"16@"NSError"24
@"NSArray"24@0:8@"ADSession"16
v40@0:8@"ADSession"16@"NSString"24@"NSString"32
v28@0:8@"ADSession"16B24
v48@0:8@"ADSession"16@"NSString"24@"NSString"32d40
v32@0:8@"ADSession"16@"NSError"24
v24@0:8i16B20
v28@0:8I16q20
i16@0:8
B32@0:8@16^@24
B40@0:8@16@24@32
v40@0:8@16B24B28B32B36
v32@0:8@16B24B28
v48@0:8@16@24q32q40
@"ADAccount"
@"NSMutableArray"
@"<ADSessionManagerDelegate>"
^{IONotificationPort=}
@"AFAggregator"
@"NSError"
@"SASSpeechRecognized"
@"SASSpeechFailure"
@"AFAWDSiriRequestRecord"
@"<ADSessionManagerIntercepting>"
@32@0:8Q16@24
v28@0:8^{BTSessionImpl=}16i24
v24@0:8^{BTSessionImpl=}16
v40@0:8^{BTDeviceImpl=}16I24i28I32i36
v32@0:8^{BTLocalDeviceImpl=}16i24i28
v40@0:8^{BTAccessoryManagerImpl=}16i24^{BTDeviceImpl=}28i36
v24@0:8^{BTDeviceImpl=}16
v32@0:8^{BTDeviceImpl=}16^{BTAccessoryManagerImpl=}24
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
^{BTAccessoryManagerImpl=}
@"NSObject<OS_dispatch_group>"
@"ADMobileBluetoothWirelessSplitterSessionProxy"
v32@0:8q16@?24
@"AFBluetoothDeviceInfo"16@0:8
v24@0:8@?<v@?@"AFBluetoothDeviceInfo">16
v24@0:8@?<v@?@"AFBluetoothHeadphoneInEarDetectionState">16
v32@0:8q16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"<ADBluetoothDeviceObserver>"16
@"ADMobileBluetoothDeviceDataSource"
@"AFBluetoothDeviceInfo"
@"AFBluetoothHeadphoneInEarDetectionState"
v24@0:8@?<v@?@"AFBluetoothWirelessSplitterSessionInfo">16
v24@0:8@"<ADBluetoothWirelessSplitterSessionObserving>"16
v40@0:8@16q24q32
v40@0:8@"AFBluetoothWirelessSplitterSessionStateObserver"16q24q32
@"AFBluetoothWirelessSplitterSessionInfo"
@"AFBluetoothWirelessSplitterSessionStateObserver"
@56@0:8@16Q24@32@40@48
@"AFDictationOptions"
@"<ADSessionLocalConnectionDelegate>"
@"<ADCallObserverDelegate>"
@?40@0:8q16@24@?32
v56@0:8@16@24@32@?40@?48
v48@0:8@16@24d32@?40
v48@0:8@16@?24@?32@?40
@"<ADContextManagerDelegate>"
@"ADBackgroundContextCache"
@"AFAnalytics"
@"ADLocalContextStore"
@"ADRemoteContextStore"
@48@0:8@16@24d32@?40
v32@0:8@"SABaseCommand<SiriCoreSessionObject><SiriCoreThunking>"16@?<v@?B>24
@"<ADRequestDelayManagerDelegate>"
@32@0:8@16d24
@"<ADAcousticIDHelperDelegate>"
@"SAAIStartSession"
@"SAAISearchCompleted"
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"_ADPBDeviceOutputVoiceInfo"
@"_ADPBDeviceStringKeyValueDictionary"
{?="activityContinuationAllowed"b1"cloudSyncEnabled"b1"dictationEnabled"b1"isLocationSharingDevice"b1"isRemotePlaybackDevice"b1"shouldCensorSpeech"b1"siriEnabled"b1}
@32@0:8q16q24
@"ADRapportLinkDiscoveryOptions"
{_mutationFlags="isDirty"b1"hasIncludesFamily"b1"hasIncludesHome"b1}
v24@0:8@"ADPeerLocationPolicy"16
@"<ADPeerLocationConnectionDelegate>"
@"ADPeerLocationPolicy"
@"SABaseClientBoundCommand"
v32@0:8@"ADPeerStreamConnection"16@"NSError"24
v24@0:8@"ADPeerStreamConnection"16
v32@0:8@"ADPeerStreamConnection"16@?<v@?@"SiriCoreConnectionMetrics">24
v40@0:8d16d24Q32
@"<SiriCoreConnectionProviderDelegate>"
@20@0:8i16
i24@0:8@16
{?="gender"b1}
v24@0:8@?<v@?@"STTimer"@"NSError">16
v32@0:8@"STTimer"16@?<v@?@"NSError">24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v32@0:8@"<ADDeviceSyncMessagingService>"16@"NSString"24
v48@0:8@"<ADDeviceSyncMessagingService>"16@"ADDeviceSyncMessage"24@"NSString"32@?<v@?@"ADDeviceSyncMessage"@"NSError">40
v24@0:8@"<ADDeviceSyncDataProviding>"16
@"<ADSiriAppLaunchRequestHandlerDelegate>"
@56@0:8@16@24@32@40@48
B32@0:8Q16@24
v48@0:8@16Q24Q32@?40
@"<SAAceCommand>"
@"<ADRecordingInfoProviding>"
v24@0:8@"<AFOpportuneSpeakingModelDelegate>"16
v24@0:8@"<AFOpportuneSpeakable>"16
v32@0:8q16@"<AFOpportuneSpeakable>"24
@"<AFOpportuneSpeakingModelDelegate>"
@"ADOpportuneSpeakingModuleEdgeDetector"
@"ADOpportuneSpeakingStateManager"
Vv20@0:8i16
Vv32@0:8@16i24i28
Vv32@0:8@"NSData"16i24i28
Vv24@0:8@?<v@?@"NSData">16
v24@0:8^{AudioStreamBasicDescription=dIIIIIIII}16
@"<ADAcousticFingerprinterDelegate>"
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
v56@0:8Q16Q24@32Q40@?48
v48@0:8Q16Q24@32@?40
@24@0:8^@16
B48@0:8Q16Q24@32^@40
@56@0:8Q16Q24@32Q40^@48
@32@0:8@16^@24
v32@0:8Q16@?24
@"SiriCoreSQLiteDatabase"
@"ADAnalyticsEventRecordBuilder"
v32@0:8@"<SiriCoreSQLiteValue>"16@"NSString"24
@"<SiriCoreSQLiteRecord>"16@0:8
@"<SiriCoreSQLiteValue>"
Vv32@0:8@"NSString"16@?<v@?@"AFPersonalUserSettings"@"NSError">24
i24@0:8^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}16
B28@0:8d16I24
B28@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24
@"<ADPassthroughEndpointerDelegate>"
@"<Endpointer>"
v56@0:8q16@24@32@40@?48
@"NSBundle"
v40@0:8@"AFNowPlayingObserver"16q24q32
v24@0:8@"AFNowPlayingObserver"16
v40@0:8q16q24@?32
@"AFMediaPlaybackStateSnapshot"
@24@0:8@"INIntent"16
v32@0:8@?16@?24
@"AFQueue"
Vv40@0:8@16B24B28@?32
Vv40@0:8@"SABaseCommand"16B24B28@?<v@?B@"NSError">32
v28@0:8B16@20
v24@0:8@"AceObject<SAAceCommand>"16
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?@"AceObject<SAAceCommand>"@"NSError">24
v28@0:8B16@"NSError"20
v24@0:8@"NSError"16
@"<AFClientLiteClientCommandHandling>"
@32@0:8@?16@?24
@32@0:8@16@?24
@"AFSpeechRequestOptions"
v44@0:8@16q24@32B40
v48@0:8@16q24@32@?40
v28@0:8@"INSExtensionService"16B24
v48@0:8@"INSExtensionService"16@"NSData"24q32@?<v@?@"NSData"@"NSError">40
v40@0:8@"INSExtensionService"16@"NSData"24@?<v@?@"NSData"@"NSError">32
v32@0:8@"INSExtensionService"16@"INImage"24
v32@0:8@"INSExtensionService"16@"NSString"24
v40@0:8@"INSExtensionService"16@"NSString"24@"NSError"32
v48@0:8@"INSExtensionService"16@"INIntent"24@"NSString"32@?<v@?@"INIntentResponse"@"NSError">40
v44@0:8@"INSExtensionService"16q24@"NSDictionary"32B40
@"NSString"24@0:8@"INSExtensionService"16
v40@0:8@"INSExtensionService"16@"SABaseCommand"24@?<v@?@"NSError">32
@"NSDictionary"32@0:8@"INSExtensionService"16@"SABaseCommand"24
@"NSDictionary"32@0:8@"INSExtensionService"16@"NSError"24
v48@0:8@"INSExtensionService"16q24@"INIntent"32@?<v@?B>40
v40@0:8@"INSExtensionService"16q24@?<v@?>32
v32@0:8@"INSExtensionService"16@"INIntent"24
v48@0:8@"INSExtensionService"16@"INIntentForwardingAction"24@"NSString"32@?<v@?@"INIntentForwardingActionResponse">40
B40@0:8^@16@24^@32
@"INSExtensionService"
@"<ADCommandCenterClient>"
S16@0:8
v20@0:8S16
@"ADPeerInfo"
@"PBCodable"
v60@0:8@16@24B32@36@44@?52
v60@0:8@"<SAAceCommand>"16@"ADPeerInfo"24B32@"NSString"36@"ADCommandExecutionContext"44@?<v@?@"NSDictionary"@"NSError">52
v48@0:8@"NSData"16@"ADPeerInfo"24@"ADCommandExecutionContext"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"AFRequestInfo"16@"ADPeerInfo"24@?<v@?B>32
v36@0:8@16S24@28
v48@0:8@16S24@28S36@?40
v56@0:8@16S24@28@36S44@?48
v32@0:8@?16^v24
B40@0:8@16@24@?32
v52@0:8@16S24@28@36@44
@"NSMapTable"
B24@0:8^q16
@"STAlarm"
v40@0:8@16q24@?32
v32@0:8@"STAlarm"16@?<v@?@"STAlarm"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"STAlarm"16q24@?<v@?@"NSArray"@"NSError">32
B32@0:8^f16^f24
@32@0:8@16^B24
@"NSDateFormatter"
@"NSData"32@0:8@"NSData"16^@24
B32@0:8@"NSData"16^@24
^{NACContextOpaque_=}
v32@0:8@"ADPeerLocationConnection"16@"CLLocation"24
v24@0:8@"ADPeerLocationConnection"16
@"<ADLocationManagerDelegate>"
@"ADPeerLocationConnection"
@"SAGetRequestOrigin"
@"CLLocation"
@"CLInUseAssertion"
@"GEOLocationShifter"
@"ADGreenTeaLogger"
B24@0:8d16
v44@0:8@16@24@32B40
v44@0:8@"NSDictionary"16@"NSDictionary"24@"NSString"32B40
v28@0:8@"NSArray"16B24
v32@0:8@"<AFContextSnapshotTransforming>"16@"NSString"24
v36@0:8@"<AFContextSnapshot>"16@"AFDeviceContextMetadata"24B32
v56@0:8@16@24@32@40@?48
v72@0:8@16@24@32@40@48@56@?64
@"AFMutableDeviceContext"
v36@0:8I16@20@?28
v32@0:8@"ADMediaRemoteService"16@?<v@?@"<SAAceCommand>"@"NSError">24
@"<ADVolumeTracking>"
Vv40@0:8@16q24@?32
Vv40@0:8@"NSData"16q24@?<v@?@"NSData"@"NSError">32
Vv40@0:8@"NSDictionary"16q24@?<v@?@"NSDictionary"@"NSDictionary">32
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v48@0:8@16@24q32@40
v48@0:8@"ADRequestLifecycleObserver"16@"AFRequestInfo"24q32@"<ADCommandCenterClient>"40
@40@0:8@16@24q32
v24@0:8@"ADRapportLinkDiscoveryOptions"16
v24@0:8@"ADRapportLinkTransportOptions"16
@"ADRapportLinkConfiguration"
{_mutationFlags="isDirty"b1"hasDiscoveryOptions"b1"hasTransportOptions"b1"hasEnablesProximityTracking"b1}
@"NSArray"16@0:8
v60@0:8@16I24@28@36@44@52
v56@0:8@16@24B32B36Q40@48
v40@0:8q16@24@?32
v32@0:8@"AFXPCWrapper"16@"NSString"24
v60@0:8@"NSString"16I24@"<ADBluetoothDevice>"28@"NSString"36@"NSString"44@"AFDictationOptions"52
v56@0:8@"NSString"16@"<ADBluetoothDevice>"24B32B36Q40@"NSString"48
v32@0:8@"NSError"16@"NSString"24
v40@0:8@"SASSpeechRecognized"16@"NSString"24@"NSString"32
v24@0:8@"SASSpeechPartialResult"16
v32@0:8@"NSArray"16@"NSString"24
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v32@0:8@"NSString"16@"NSString"24
v40@0:8@"SAStructuredDictationResult"16@"NSString"24@"NSString"32
v40@0:8@"NSFileHandle"16@"NSError"24@"NSString"32
v40@0:8@"SASPronunciationRecognized"16@"NSString"24@"NSString"32
v24@0:8@"SASVoiceSearchPartialResult"16
v24@0:8@"SASVoiceSearchFinalResult"16
v36@0:8@"NSString"16@"NSDictionary"24B32
v32@0:8@"SASMultilingualSpeechRecognized"16@"NSString"24
v40@0:8q16@"NSString"24@?<v@?dd@"NSError">32
v32@0:8@"ADSessionManager"16@"AceObject<SAAceCommand>"24
v36@0:8@"ADSessionManager"16@"NSError"24B32
B32@0:8@"ADSessionManager"16@"NSError"24
v24@0:8@"ADSessionManager"16
B24@0:8@"ADSessionManager"16
@"NSArray"24@0:8@"ADSessionManager"16
v40@0:8@"ADSessionManager"16@"NSString"24@"NSString"32
v28@0:8@"ADSessionManager"16B24
v32@0:8@"ADSessionManager"16@"NSError"24
v52@0:8@16d24B32@36@44
v56@0:8@16@24d32q40@48
v40@0:8@16@24d32
v32@0:8@16f24f28
v56@0:8@16q24q32@40@48
v52@0:8@16@24B32@36@44
v40@0:8@16d24@32
v88@0:8@16@24Q32@40q48q56q64@72@80
v40@0:8@"ADSpeechManager"16@"ADRecordingInfo"24@"ADSpeechCapturingContext"32
v52@0:8@"ADSpeechManager"16d24B32@"AFXPCWrapper"36@"NSString"44
v56@0:8@"ADSpeechManager"16@"NSArray"24d32q40@"ADSpeechCapturingContext"48
v40@0:8@"ADSpeechManager"16@"NSData"24d32
v24@0:8@"ADSpeechManager"16
v32@0:8@"ADSpeechManager"16f24f28
v56@0:8@"ADSpeechManager"16q24q32@"CSEndpointerMetrics"40@"NSString"48
v40@0:8@"ADSpeechManager"16q24@"NSString"32
v32@0:8@"ADSpeechManager"16@"NSString"24
v40@0:8@"ADSpeechManager"16@"NSError"24@"NSString"32
v48@0:8@"ADSpeechManager"16@"NSFileHandle"24@"NSError"32@"NSString"40
v40@0:8@"ADSpeechManager"16@"NSDictionary"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"NSArray"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"AFSpeechRecognition"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"AFSpeechPackage"24@"NSString"32
v52@0:8@"ADSpeechManager"16@"NSError"24B32@"NSString"36@"NSDictionary"44
v40@0:8@"ADSpeechManager"16d24@"NSString"32
v44@0:8@"ADSpeechManager"16@"NSString"24@"NSDictionary"32B40
v32@0:8@"ADSpeechManager"16@"NSError"24
v48@0:8@"ADSpeechManager"16q24@"NSString"32@?<v@?dd@"NSError">40
v28@0:8@"ADSpeechManager"16B24
v88@0:8@"ADSpeechManager"16@"NSDictionary"24Q32@"NSString"40q48q56q64@"NSString"72@"NSString"80
v32@0:8@"ADLocationManager"16@"SASetRequestOrigin"24
v40@0:8@16@?24@32
v40@0:8@"ADUIService"16@?<v@?>24@"<SAClientBoundCommand>"32
v32@0:8@?16@24
v40@0:8@?16@24@32
v40@0:8@16B24B28@?32
v52@0:8@16@24@32B40@?44
v24@0:8B16B20
v36@0:8q16B24q28
v44@0:8@16B24@28@?36
v40@0:8@16@24B32B36
v48@0:8Q16q24@32@?40
v60@0:8@16@24@32@40B48@?52
v64@0:8@16@24@32@40@48@?56
v60@0:8@16B24@28@36@44@52
v48@0:8@16B24B28@32@?40
v52@0:8@16@24B32@36@?44
v80@0:8B16B20B24B28B32B36@40@48B56B60B64Q68B76
v52@0:8d16B24B28B32B36B40@?44
v56@0:8@16d24d32q40@?48
@"<ADCommandCenterRequestDelegate>"
@"<ADCommandCenterSpeechDelegate>"
@"AFSafetyBlock"
@"ADUIService"
@"ADFauxUIService"
@"ADSessionManager"
@"ADDiagnosticsManager"
@"ADSpeechManager"
@"ADServiceManager"
@"ADDomainObjectCache"
@"ADResultObjectCache"
@"ADLocationManager"
@"ADMotionManager"
@"ADRemoteRequestHelper"
@"ADRemoteSpeechRequestHelper"
@"ADDeviceSyncCoordinator"
@"ADRequestDelayManager"
@"ADDeviceRouter"
@"ADFlowServiceListener"
@"SASStartSpeech"
@"SASFinishSpeech"
@"SABaseCommand"
@"AFRequestInfo"
@"SASPronunciationContext"
@"SASResultCandidate"
@"ADCallObserver"
@"NSObject<OS_os_transaction>"
@"AFVoiceInfo"
@"AFAWDSiriSession"
@"ADRequestStatistics"
@"ADOfflineMetricsManager"
@"ADContextManager"
@"SAClearContext"
@"ADSyncManager"
@"<ADCommandCenterSyncDelegate>"
@"ADSyncVerificationHelper"
@"ADAcousticIDHelper"
@"ADSharedDataService"
v32@0:8@"SOAlarmsSnapshot"16q24
v32@0:8@"CSAudioSessionController"16@"NSDictionary"24
^{__CFBag=}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8@"NSDictionary"16
@32@0:8@"NSDictionary"16@"<AceContext>"24
@"NSMutableDictionary"16@0:8
v28@0:8@16i24
v40@0:8@16Q24Q32
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
@"AFNotifyObserver"
v32@0:8@"HMHomeManager"16Q24
v24@0:8@"HMHomeManager"16
v32@0:8@"HMHomeManager"16@"HMHome"24
v32@0:8@"HMHomeManager"16@"HMAddAccessoryRequest"24
v40@0:8@16q24@32
v32@0:8@"HMHomeManager"16@"NSArray"24
v28@0:8@"HMHomeManager"16B24
v40@0:8@"HMHomeManager"16q24@"NSString"32
v40@0:8@"HMUser"16@"HMAssistantAccessControl"24@"HMHome"32
v40@0:8@"HMUser"16@"HMMediaContentProfileAccessControl"24@"HMHome"32
v32@0:8@"HMUser"16@"HMPhotosPersonManagerSettings"24
v32@0:8@"HMUser"16@"HMFPairingIdentity"24
v28@0:8@"HMUser"16B24
v40@0:8@"HMUserCloudShareManager"16@"HMUserCloudShareInvitation"24@?<v@?B@"NSError">32
v40@0:8@"HMUserCloudShareManager"16@"HMUserCloudShareInvitation"24@?<v@?B@"HMUserCloudShareClientInfo"@"NSError">32
v40@0:8@"HMUserCloudShareManager"16@"HMUserCloudShareRepairInfo"24@"HMHome"32
v24@0:8@"HMHome"16
v32@0:8@"HMHome"16@"HMAccessory"24
v32@0:8@"HMHome"16@"HMUser"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMAccessory"32
v32@0:8@"HMHome"16@"HMRoom"24
v32@0:8@"HMHome"16@"HMZone"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMZone"32
v32@0:8@"HMHome"16@"HMServiceGroup"24
v40@0:8@"HMHome"16@"HMService"24@"HMServiceGroup"32
v32@0:8@"HMHome"16@"HMActionSet"24
v32@0:8@"HMHome"16@"HMTrigger"24
v40@0:8@"HMHome"16@"NSError"24@"HMAccessory"32
v32@0:8@"HMHome"16Q24
v24@0:8@"HMSettings"16
v32@0:8@"HMHome"16@"HMResidentDevice"24
v32@0:8@"HMHome"16@"CLLocation"24
v32@0:8@"HMHome"16@"NSArray"24
v28@0:8@"HMHome"16B24
v32@0:8@"HMHome"16q24
v32@0:8@"HMHome"16@"NSString"24
v32@0:8@"HMHome"16@"HMMediaSystem"24
v32@0:8@"HMHome"16@"HMAccessoryNetworkProtectionGroup"24
v32@0:8@"HMHome"16@"HMHomePersonManagerSettings"24
v24@0:8@"HMAccessorySettings"16
v36@0:8@16q24B32
v32@0:8q16@24
@"HMHomeManager"
@"HMHome"
@"ADHomeInfo"
@40@0:8q16@24@32
q32@0:8@16@24
v28@0:8Q16B24
q44@0:8@16@24B32q36
@"AFSpeechRecordingAlertPolicy"
@"AFLanguageDetectionUserContext"
v24@0:8@"NSDictionary"16
{_mutationFlags="isDirty"b1"hasGenerationsByDataType"b1}
v40@0:8@"ADAcousticFingerprinter"16@"NSData"24d32
v40@0:8@16@24Q32
v44@0:8@16@24f32Q36
v36@0:8@16d24B32
v40@0:8@16q24Q32
v40@0:8@16q24d32
v32@0:8Q16Q24
v40@0:8Q16Q24@?32
v32@0:8@"CSSpeechController"16@"NSData"24
v40@0:8@"CSSpeechController"16@"NSData"24Q32
v40@0:8@"CSSpeechController"16@"NSArray"24Q32
v44@0:8@"CSSpeechController"16@"NSArray"24f32Q36
v32@0:8@"CSSpeechController"16d24
v36@0:8@"CSSpeechController"16d24B32
v36@0:8@"CSSpeechController"16B24@"NSError"28
v40@0:8@"CSSpeechController"16q24Q32
v32@0:8@"CSSpeechController"16q24
v24@0:8@"CSSpeechController"16
v40@0:8@"CSSpeechController"16q24d32
v32@0:8@"CSSpeechController"16Q24
v40@0:8@"CSSpeechController"16q24@"NSError"32
v32@0:8@"CSSpeechController"16@"NSDictionary"24
v28@0:8@"CSSpeechController"16B24
v40@0:8Q16Q24@?<v@?@"NSError">32
v32@0:8@"<CSEndpointAnalyzer>"16d24
v40@0:8@"<CSEndpointAnalyzer>"16d24@"CSEndpointerMetrics"32
v28@0:8q16B24
B32@0:8Q16^@24
v28@0:8(?={?=SS}I)16Q20
i20@0:8(?={?=SS}I)16
v20@0:8(?={?=SS}I)16
B40@0:8@16@?24^@32
@40@0:8q16q24B32B36
v56@0:8@16q24Q32q40@48
^{OpaqueAudioConverter=}16@0:8
v44@0:8@16q24Q32B40
v40@0:8q16q24@32
v32@0:8q16d24
v48@0:8@16d24d32@40
v32@0:8@?16d24
B40@0:8@16Q24@?32
@"<CSEndpointAnalyzer>"
@"ADSpeechCapturingContext"
@"ADAudioActivationInfo"
@"ADAcousticFingerprinter"
@"NSFileHandle"
@"CSEndpointerMetrics"
@"AFSpeechSynthesisRecord"
@"AFExperimentContext"
v24@0:8@"ADPeerInfo"16
@"ADDeviceRouterResult"
{_mutationFlags="isDirty"b1"hasPeerInfo"b1"hasProximity"b1"hasCommandRelayProxyIdentifier"b1}
v36@0:8B16@20@28
v24@0:8r^{AudioStreamBasicDescription=dIIIIIIII}16
@"CSAudioRecordContext"
@"ADRecordingInfo"
@"ADAudioFileWriter"
@"ADOfflineMetricsMap"
@40@0:8@16@24^@32
Q32@0:8d16d24
v28@0:8I16@?20
v40@0:8I16I20Q24@?32
@"AWDServerConnection"
@"NSNumber"
Q24@0:8@16
{?="requiresUserInteraction"b1}
v40@0:8q16Q24@32
v36@0:8q16@24B32
v40@0:8q16@?24@32
v40@0:8@16Q24@32
v32@0:8#16@24
v40@0:8#16Q24@32
v44@0:8q16Q24@32B40
v48@0:8q16Q24@?32@40
v40@0:8q16Q24@?32
@20@0:8B16
@"<AFAnalyticsService>"
@"UNNotification"
q24@0:8@16
B20@0:8B16
@"AFSettingsConnection"
@"<ADPeerLocationPolicyDelegate>"
q24@0:8q16
@"SANavStatus"
@"SALocalSearchGetNavigationStatusCompleted"
@"SAMPQueueState"
@"SAErrorIndicatorStatus"
@"SAHACurrentHome"
@"SAPhoneCallState"
@"SARemotePlaybackDeviceList"
@"SAHomeCommunicationAnnouncement"
@"<ADDeviceAuthenticationSession>"
v24@0:8@"ADService"16
@"SASyncAnchor"
@"ADService"
@"<ADSyncManagerDelegate>"
@"SASyncGetAnchors"
v32@0:8@"ADAssistantDataManager"16@"SASetAssistantData"24
v48@0:8@"ADAssistantDataManager"16@"SASetAssistantData"24@"NSArray"32@"NSString"40
@"SiriCoreConnectionType"
@"<ADSessionDelegate>"
v64@0:8@16@24q32@40@48@56
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
@"NSOrderedSet"
@"ADDictationSessionTracker"
@72@0:8@16@24@32@40@48@56@64
d24@0:8@16
@"ADServiceStatistics"
@"<ADServiceConnectionDelegate>"
Vv72@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSString"48@"NSUUID"56@?<v@?B>64
Vv32@0:8@"NSURL"16@?<v@?B>24
Vv40@0:8@"SABaseCommand"16@"AFCommandExecutionInfo"24@?<v@?@"SABaseCommand"@"NSError">32
Vv44@0:8@"NSSet"16@"NSString"24B32@?<v@?@"NSArray">36
@"ADServiceConnection"
B24@0:8^f16
@48@0:8Q16@24@32@40
@"ADDeviceSyncIncrementalChange"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasInsertedOrUpdatedItems"b1"hasDeletedItemUUIDs"b1}
@"SAPerson"
@"ADServiceCommandType"
@"<ADAceRequestTransformer>"
@"<ADAceResponseTransformer>"
@"<AFSiriRequestHandling>"
@"<ADUIServiceDelegate>"
v48@0:8d16B24B28B32B36@?40
v40@0:8d16B24B28@?32
v108@0:8d16B24B28@32{?={?=Bq}{?=Bq}{?=Bq}Q}40B96@?100
v80@0:8@16@24Q32@40Q48d56@?64@?72
v80@0:8B16B20B24B28B32B36@40B48B52B56Q60B68@?72
v32@0:8@"ADDeviceSyncMessage"16@?<v@?@"ADDeviceSyncMessage"@"NSError">24
@"<ADDeviceSyncMessagingService>"
v36@0:8@16f24@28
v36@0:8@"NSString"16f24@"<AFOpportuneSpeakable>"28
@"<AFOpportuneSpeakable>"
v24@0:8@"ADDeviceSyncSnapshot"16
{_mutationFlags="isDirty"b1"hasSnapshot"b1}
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
B32@0:8@16^B24
v64@0:8@16@24@32@40B48B52@?56
B48@0:8@16@24@32^@40
@48@0:8@16@24^@32^Q40
@40@0:8@16q24@32
@48@0:8@16@24q32@40
@"SAHomeMemberInfo"
@"SAMultiUserInfo"
@"ADCommunalDeviceUser"
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
v24@0:8@"CBPeripheral"16
v32@0:8@"CBPeripheral"16@"NSArray"24
v32@0:8@"CBPeripheral"16@"NSError"24
v40@0:8@"CBPeripheral"16@"NSNumber"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBDescriptor"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBL2CAPChannel"24@"NSError"32
@"CBCentralManager"
v48@0:8@16@24:32@40
:32@0:8@16@24
v40@0:8@16^@24^@32
v44@0:8@16@24B32@?36
v40@0:8@"AFMemoryPressureObserver"16q24q32
v32@0:8@"AFAudioPlaybackRequest"16@?<v@?@"NSError">24
v40@0:8@"AFAudioPlaybackRequest"16Q24@?<v@?@"NSError">32
v28@0:8@"AFAudioPlaybackRequest"16B24
v28@0:8B16@?<v@?>20
v56@0:8@16Q24@?32@?40@?48
v40@0:8@"AFHomeAnnouncementObserver"16Q24Q32
v40@0:8@"AFHomeAnnouncementObserver"16@"AFHomeAnnouncementSnapshot"24@"AFHomeAnnouncementSnapshot"32
@"AFHomeAnnouncementSnapshot"
v24@0:8@"SiriCoreNetworkManager"16
v56@0:8@16@24@32d40@48
v32@0:8@"<SiriCoreSiriConnection>"16@"SiriCoreConnectionType"24
v56@0:8@"<SiriCoreSiriConnection>"16@"SiriCoreConnectionType"24@"NSString"32d40@"NSString"48
v32@0:8@"<SiriCoreSiriConnection>"16@"AceObject"24
v24@0:8@"<SiriCoreSiriConnection>"16
v40@0:8@"<SiriCoreSiriConnection>"16@"NSError"24@"SiriCoreAceConnectionAnalysisInfo"32
v32@0:8@"<SiriCoreSiriConnection>"16@"NSError"24
v32@0:8@"<SiriCoreSiriConnection>"16@"NSDictionary"24
@64@0:8@16@24@32@40@48@56
v40@0:8B16B20@24B32B36
v32@0:8@16d24
v44@0:8B16B20@24@32B40
v52@0:8B16B20@24B32@36B44B48
v36@0:8@16B24@28
@"<SiriCoreSiriConnection>"
@"NSURL"
@"ADAuthenticator"
@"ADRetryManager"
@48@0:8@16@24@32Q40
@"ADCommunalDeviceUserAttributes"
v32@0:8@"AFClockTimerObserver"16@"NSUUID"24
v40@0:8@"AFClockTimerObserver"16@"AFClockTimerSnapshot"24@"AFClockTimerSnapshot"32
v24@0:8@?<v@?Q>16
v40@0:8Q16Q24@?<v@?@"NSArray"@"NSError">32
v24@0:8@?<v@?@"ADDeviceSyncSnapshot"@"NSError">16
@"<ADDeviceSyncDataProviderDelegate>"
{?="firstByteReadInterval"b1"openInterval"b1"pingMean"b1"rxBytes"b1"rxDuplicateBytes"b1"rxOooBytes"b1"rxPackets"b1"sndBandwidth"b1"tuscanyConnectionDelay"b1"txBytes"b1"txPackets"b1"txRetransmitBytes"b1"txUnacked"b1"attemptCount"b1"connectedSubflowCount"b1"connectionFallbackReason"b1"metricsCount"b1"pingCount"b1"primarySubflowSwitchCount"b1"rttBest"b1"rttCurrent"b1"rttSmoothed"b1"rttVariance"b1"subflowCount"b1"synRetransmits"b1"unacknowledgedPingCount"b1}
@?32@0:8@16@24
q40@0:8@16Q24Q32
q40@0:8@"NSString"16Q24Q32
v32@0:8@"NSString"16@?<v@?Q>24
v32@0:8@"ADDeviceSyncSnapshot"16@"NSString"24
v40@0:8@16@?24@?32
v40@0:8@"AFSiriRequest"16@?<v@?>24@?<v@?@"AFSiriResponse"@"NSError">32
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@"APSConnection"
@"HMClientConnection"
v56@0:8@16Q24Q32@40@?48
@"NSObject<OS_dispatch_data>"24@0:8^@16
@"NSArray"24@0:8@"NSString"16
B32@0:8@"NSString"16@"NSString"24
B24@0:8@"NSString"16
v48@0:8@"SABaseClientBoundCommand"16@"NSString"24@"ADCommandExecutionContext"32@?<v@?@"<SAAceCommand>"@"NSError">40
v40@0:8@"SABaseCommand"16@"SABaseClientBoundCommand"24@?<v@?>32
v32@0:8@"AFSyncInfo"16@?<v@?@"ADSyncChunkInfo"@"NSError"@?<v@?B>>24
v32@0:8@"AFSyncInfo"16@?<v@?@"AFSyncSnapshot">24
@"<ADServiceDelegate>"
Vv40@0:8@16Q24@32
Vv32@0:8@"NSArray"16@?<v@?>24
Vv40@0:8@"NSString"16Q24@"NSUUID"32
Vv24@0:8@"AFAnalyticsEvent"16
Vv24@0:8@"NSArray"16
v36@0:8i16@?20@28
v28@0:8i16@20
@"ADAnalyticsStore"
@"ADInstrumentationResolver"
@"ADAnalyticsFuzzingInterval"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v40@0:8@16Q24@?32
@"UNUserNotificationCenter"
@"NSXPCConnection"
@"FBSDisplayLayoutMonitor"
@"<NSXPCListenerDelegate>"
@"ADNotifyAndPushContextCollector"
B20@0:8i16
v28@0:8@?16i24
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v32@0:8@"ADAddressBookManager"16@"SAPerson"24
v32@0:8@"ADDisplayScaleContextCollector"16d24
v24@0:8@"SAPerson"16
@"SAVoice"
@"SAMediaContentRatingRestrictions"
@"ADDisplayScaleContextCollector"
@"SASetAssistantData"
@"ADAddressBookManager"
B24@0:8Q16
@"CKKnowledgeStore"
v32@0:8@"<SiriCoreConnectionProvider>"16@"NSError"24
v28@0:8@"<SiriCoreConnectionProvider>"16B24
v24@0:8@"<SiriCoreConnectionProvider>"16
@40@0:8^{__CFHTTPMessage=}16@24^B32
v24@0:8^{__CFHTTPMessage=}16
@32@0:8^{__CFHTTPMessage=}16@24
v48@0:8@16@24Q32@40
@"ADPeerConnectionProvider"
@"NSObject<OS_dispatch_data>"
@"<SiriCoreConnectionProvider>"
[4096C]
^{__CFHTTPMessage=}
v24@0:8@"NSUUID"16
@"ADDeviceSyncItem"
{_mutationFlags="isDirty"b1"hasUUID"b1"hasProperties"b1}
v24@0:8@"<ADAudioStateListening>"16
@"AFAudioState"
@"<ADAudioStateListening>"
@"_INVocabularyStoreManager"
B24@0:8q16
v44@0:8@16@24B32@36
@"SARestartRequest"
@"SABaseCommand<SAServerBoundCommand>"
@"CMMotionActivityManager"
@"CMMotionActivity"
@"NSOperationQueue"
v40@0:8@"<ADAudioStateAnnouncing>"16@"AFAudioState"24@"AFAudioState"32
v32@0:8@"ADAudioPlaybackService"16@"AFAudioPlaybackRequest"24
v40@0:8@"ADAudioPlaybackService"16@"AFAudioPlaybackRequest"24@"NSError"32
v40@0:8@"<ADBluetoothDevice>"16@"AFBluetoothDeviceInfo"24@"AFBluetoothDeviceInfo"32
v40@0:8@"<ADBluetoothDevice>"16@"AFBluetoothHeadphoneInEarDetectionState"24@"AFBluetoothHeadphoneInEarDetectionState"32
v40@0:8@"<ADBluetoothDevice>"16q24q32
v24@0:8@"<ADBluetoothDevice>"16
v40@0:8@"NSString"16@"NSURL"24@?<v@?B>32
v32@0:8@"NSURL"16@?<v@?B>24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?@"AFClockAlarmSnapshot"@"AFClockTimerSnapshot">16
v32@0:8@"NSDictionary"16@"NSURL"24
v24@0:8@"INImage"16
v32@0:8@"NSString"16@"NSError"24
v40@0:8q16@"INIntent"24@?<v@?BB>32
Vv48@0:8Q16q24@32@?40
Vv32@0:8Q16@?24
Vv24@0:8B16B20
Vv40@0:8@16Q24@?32
Vv32@0:8Q16d24
Vv36@0:8@16B24@?28
Vv32@0:8q16@"AFSpeechRequestOptions"24
Vv48@0:8Q16q24@"AFSpeechRequestOptions"32@?<v@?I@"NSError">40
Vv32@0:8Q16@?<v@?>24
Vv24@0:8@"AFClientConfiguration"16
Vv40@0:8@"AFSpeechRequestOptions"16Q24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"SASPronunciationContext"24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"NSString"24@?<v@?@"NSError">32
Vv24@0:8@?<v@?BI>16
Vv36@0:8@"NSDictionary"16B24@?<v@?B>28
Vv24@0:8@"SASetApplicationContext"16
Vv40@0:8@"NSArray"16@"NSArray"24@"NSString"32
Vv32@0:8@"NSArray"16@"NSString"24
Vv32@0:8@"NSString"16@24
Vv24@0:8@"AFMetrics"16
Vv32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
Vv24@0:8@?<v@?@"AFClockTimerSnapshot"@"NSError">16
Vv40@0:8@"AFAudioPlaybackRequest"16Q24@?<v@?@"NSError">32
Vv24@0:8@?<v@?@"AFXPCWrapper">16
Vv24@0:8@"AFSpeechSynthesisRecord"16
Vv40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
Vv32@0:8@"NSData"16@?<v@?@"NSString"@"NSData">24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
Vv24@0:8@"NSDictionary"16
Vv32@0:8@"AFApplicationInfo"16@?<v@?@"NSArray">24
Vv28@0:8@"NSURL"16B24
v32@0:8@"SiriCoreLocalSpeechRecognizer"16@"NSArray"24
v32@0:8@"SiriCoreLocalSpeechRecognizer"16d24
v32@0:8@"SiriCoreLocalSpeechRecognizer"16@"AFSpeechRecognition"24
v32@0:8@"SiriCoreLocalSpeechRecognizer"16@"AFSpeechPackage"24
v40@0:8@"SiriCoreLocalSpeechRecognizer"16@"NSDictionary"24@"NSError"32
Vv24@0:8d16
@"<AFDictationServiceDelegate>"
v56@0:8@16@24B32@36B44@48
v40@0:8@16d24q32
v48@0:8@16q24q32@40
v80@0:8@16Q24@32q40q48q56@64@72
v36@0:8B16@"NSError"20@"ADRecordingInfo"28
v24@0:8@"ADRecordingInfo"16
v40@0:8@"NSArray"16d24q32
v24@0:8@"NSData"16
v40@0:8q16q24@"CSEndpointerMetrics"32
v48@0:8@"NSError"16q24q32@"CSEndpointerMetrics"40
v40@0:8@"<ADSpeechCapturing>"16@"NSData"24d32
v24@0:8@"<ADSpeechCapturing>"16
v40@0:8@"<ADSpeechCapturing>"16@"NSFileHandle"24@"NSError"32
v32@0:8@"<ADSpeechCapturing>"16d24
v40@0:8@"<ADSpeechCapturing>"16q24@?<v@?dd@"NSError">32
v28@0:8@"<ADSpeechCapturing>"16B24
v32@0:8@"<ADSpeechCapturing>"16@"NSDictionary"24
v44@0:8@"<ADSpeechCapturing>"16@"NSString"24@"NSDictionary"32B40
v32@0:8@"<ADSpeechCapturing>"16@"NSError"24
v80@0:8@"NSDictionary"16Q24@"NSString"32q40q48q56@"NSString"64@"NSString"72
v24@0:8@?<v@?@"ADVolumeService">16
v24@0:8@?<v@?@"ADRecordingInfo">16
@"ADRecordingInfo"16@0:8
v32@0:8@"AFAudioPowerUpdater"16f24f28
v24@0:8f16f20
v48@0:8@16Q24q32@?40
v40@0:8q16@24@32
v40@0:8@16B24B28@32
@"<ADSpeechManagerDelegate>"
@"ADSpeechLog"
@"<ADSpeechCapturing>"
@"ADSpeechRecorder"
@"ADSpeechPlaybackSimulator"
@"ADSpeechCompressor"
@"ADVolumeService"
@"AFAudioPowerUpdater"
v32@0:8@"ADRequestDelayManager"16q24
v28@0:8@"ADRequestDelayManager"16B24
@"ADExternalNotificationRequest"
@"SiriCoreLocalSpeechRecognizer"
@"NSDictionary"16@0:8
@36@0:8@16i24@28
@"NSSet"
v20@0:8i16
v24@0:8@"NSSet"16
@"ADRapportProximityObservation"
{_mutationFlags="isDirty"b1"hasDeviceIDPair"b1"hasProximity"b1"hasObservationDate"b1}
v24@0:8@"ADAVSystemControllerLifecycleManager"16
v40@0:8Q16d24@?32
v44@0:8f16@20q28@?36
v44@0:8@16f24@28@36
@"CSSpeechController"
@"AFClientConfiguration"
v32@0:8@"ADSessionLocalConnection"16@"SiriCoreConnectionType"24
v40@0:8@"ADSessionLocalConnection"16@"SiriCoreConnectionType"24d32
v32@0:8@"ADSessionLocalConnection"16@"AceObject"24
v24@0:8@"ADSessionLocalConnection"16
v32@0:8@"ADSessionLocalConnection"16@"NSError"24
@"ADSessionLocalConnection"
v40@0:8@"<ADBluetoothWirelessSplitterSession>"16@"AFBluetoothWirelessSplitterSessionInfo"24@"AFBluetoothWirelessSplitterSessionInfo"32
v24@0:8@"<ADBluetoothWirelessSplitterSession>"16
@"<ADBluetoothWirelessSplitterSession>"
@"AFNotifyStatePublisher"
@"AFClockAlarmSnapshot"
@"AFClockTimerSnapshot"
@"ADRemoteTimerManager"
@40@0:8@16Q24Q32
{_mutationFlags="isDirty"b1"hasDataType"b1"hasGeneration"b1"hasLimit"b1}
@"AFLinkedListItem"
v52@0:8@16@24Q32B40@?44
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v32@0:8@"BBObserver"16@"BBGlobalSettings"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
@32@0:8@16Q24
@"ADNotificationOrderedDictionary"
@"BBObserver"
@"<ADNotificationManagerDelegate>"
@"<ADNotificationManagerDataSource>"
%s Ignoring invalid anchor from server: %@
%s Queuing anchors from %@ because we are already syncing; active request: %@
%s Malformed app source - no clientIdentifier: %@
%s Error finding all Siri Extensions %{public}@
%s Asking for anchor keys %@
%s Not forcing a reset since we're already in the middle of a sync. Wait and try again
%s Forcing a reset sync
%s Waiting for sync queue to start sync
%s Starting sync %@ for reasons %@
%s Resuming SyncAnchorsQueue
%s will reference promise %@: %d
%s Got snapshot for %@: %@
%s %@ isn't the get anchors response we were expecting. getAnchorsRequest:%@
%s Server is done sending sync data
%s Sync Verification request %@ is enqueued; ignoring %@
%s Already verified sync data over the last 24 hours, ignoring
%s Sending checksums for keys: %@
%s Could not open sync database for sync chunk processing err: %@
%s Could not begin sync database transaction for sync chunk processing err: %@
%s Could not add to sync database for sync chunk add %@ err: %@
%s Could not add to sync database for sync chunk remove %@ err: %@
%s Could not commit to sync database for sync chunk  err: %@
%s Could not rollback database after sync manager reset err: %@
%s Nothing to sync
%s Not syncing %@ because there's no sync plugin for it
%s SetBackgroundContext: %@
%s Got restricted apps: %@
%s fetching context from %@, additional context provided: %@
%s #context Starting ordered fetch for context - %p
%s #context Finished ordered fetch - %@ - %p
%s #context Starting app context fetch for - %@ with refId - %@, aceId - %@
%s #context Finished fetching app context - %@
%s Dispatching phone search for overridden application context %@
%s Phone search reply for %@ %@ %@
%s Resetting ContextManager %p
%s No SACodec for settings %{public}@
%s Sending Request %d
%s Error sending request %{public}@
%s Ignoring response with no requestId %@
%s Error sending response %{public}@
%s Received %@ type %d fromId %@ incoming %@ outgoing %@ expects response %@
%s Handing protobuf to delegate
%s Error for request id %@ %{public}@
%s Tried to handle protobuf but couldn't find class or had no delegate %@ %@
%s Don't know how to handle protobuf %@ %@
%s Message send with identifier %@ failed %{public}@
%s Dealloc before completion called for notification: %@
%s Input route changed
%s Output route changed
%s Failed getting audio property %{public}.4s %{public}d
%s Failed getting audio property size %{public}.4s %d{public}
%s Failed registering for property listener %{public}.4s %{public}d
%s Error getting file path from provided file handle; will create our own path and handle
%s Failure disposing audio file %{public}d
%s Error removing item at URL %{public}@
%s Configuring with asbd %.4s
%s Creating audio file at URL %@
%s Failed creating audio file at url %{public}@ %{public}d
%s Error setting input format %{public}d
%s No audio file to append data
%s Failed writing audio file %{public}d
%s No file url on flush
%s Failed opening fd for flushed audio file %{public}s
%s inASBD->mChannelsPerFrame = %lu
%s Error getting format info for type %{public}.4s %{public}.4s
%s %@
%s Optimistically trying eager fetch again on wake up timeout after socket success
%s Denying optimistic retry as we haven't vended socket since the last time.
%s Canceling optimistic socket fetch since we already have a _deviceConnection
%s Already have valid socket, returning immediately
%s Already getting device socket, waiting for completion
%s Asking for socket now
%s No Paired device returning immediately
%s no nearby device; returning immediately
%s got device connection completion for identifier %@ with error=%{public}@
%s got device connection completion for %@
%s device connection was closed while we were getting socket (expected %@; found %@); returning an error
%s Optimistically trying eager fetch again on socket success after wake up timeout
%s Not completing socket fetch since we have a new one outstanding
%s Ignoring close request since current streams have not been vended
%s Ignoring close request because connection %p did not open current stream %p
%s Wake up message failed %{public}@
%s Sending getRemoteMetrics request for id %@
%s Metrics response timed out
%s Reestablish message failed %{public}@
%s %@ %@ %@ %@
%s type = %d
%s Don't know how to make request for %d
%s Error sending metrics response %{public}@
%s Current Stream Identifier %@ Remote Stream Identifier %@
%s Eagerly getting device socket
%s %lu
%s Nearby device disappeared, closing cached streams
%s No completion, closing down.
%s No current IDS device connection
%s Error handling %@. %@
%s Key-value count mismatch %lu!=%lu
%s SKIP: unexpected value to set. Class=%@
%s %@:%@ %@ => %@
%s SKIP: invalid store for entry %@. %@
%s #hal Media playback occurring locally
%s #hal Media playback occurring on %@, proximity: %@
%s #hal updating...
%s #hal updated
%s #hal %@
%s #hal local device is a follower in a stereo pair
%s #hal %@ local alarms: %@
%s #hal %@ alarms: %@ on %@, proximity: %@
%s #hal %@ local timers: %@
%s #hal %@ timers: %@ on %@, proximity: %@
%s Companion service is not supported on this platform.
%s MockServer XPC proxy error: %@
%s Cannot play MockServer replay file at: %@
%s Received offline dictation status %@
%s Error getting offline dictation status. Error: %@
%s Resetting offline dictation status prefs
%s Prefs updated with new offline dictation status
%s Dispatching command (%@) for domain (%@)
%s Constructing failure response due to remote execution error %@
%s Waiting for Call to route to complete the request...
%s Timed out waiting for Call to route
%s preheating companion service domain: %@
%s received response: %@ error: %@
%s unsupported preheat domain: %@
%s Processing %ld pending Call result(s)
%s No normalized key could be computed for %@ %@
%s Unable to stop synching anchors of type %{public}@, because the example anchor is malformed aceID=%@
%s Invalid sync anchor was rejected by server %@
%s Anchor was throttled until %@ %@
%s %@ %@
%s Received message from unknown message type: %@
%s Migrating assistantIdentifier
%s Creating coupled assistantIdentifier
%s Migrating speechIdentifier
%s Found Predefined Server '%@' = %@
%s Bad server override %@
%s Using Server Override %@
%s Saving account info %@
%s oldAssistantID:%{private}@
newAssistantID:%{private}@
%s updated assistant data
%s updated assistant for same device
%s inserted
%s Found paired watch
%s Trying to open URL %@
%s Success opening URL? %@
%s #CFLOW Plugin timeout is disabled
%s Response received after watchdog timeout Response=%@
%s %@ %@ was not handled
%s ClientScripter warmup succeeded.
%s ClientScripter warmup failed.
%s deviceIdentifier = %@, outgoingMessage = %@
%s Couldn't create bundle at URL %{public}@
%s Can't serialize %@: %{public}@
%s Can't write to %{public}@: %{public}@
%s regenerating bundle service cache due to version mismatch %@ %@
%s Service loaded: %{public}@
%s Substituting %@ service for %@
%s Bad notification name for reload service. Expecting format to look like "<serviceBundleID>%{public}@". Instead, received "%{public}@"
%s Service reload notification %{public}@ is already pending for %{public}@, so this one will be ignored
%s Unable to find the service to reload for notification %{public}@
%s Unable to reload service (%{public}@), because the service's bundle path wasn't found
%s Unable to create bundle dictionary at from bundle path %{public}@
%s Done reload the following services: %{public}@
Bundle services cache written to: %{public}@
%s Non-string object under key %@
%s Invalid parameter is not a dictionary!
%s Can not get anchors without a completion block
%s Waiting %.4g seconds to save
%s Missing key, ignoring this sync chunk
%s Not caching %@
%s Nothing saved
%s Could not deserialize file %@
%s Saved data is invalid!
%s Dropping ignored sync data of type %@
%s Saved %@ data is invalid, continuing...
%s Loaded sent sync anchors (%@ plugin anchors, %@ SiriKit anchors)
%s App %@ no longer has synapse data, removing from cache.
%s %@/%@ info is no longer on disk, removing from cache.
%s No anchors to save, so removing any existing files.
%s Could not convert in-memory representation to plist %@
%s Failed to write plist to disk
%s Unable to build metrics out of no event records.
%s Dropped %tu events because no timings can be extracted from the events.
%s Got asked for %u packets, have %u
%s [%02u of %02u] Opus packet with %u bytes
%s AudioConverter is sad: 0x%{public}xd
%s Sending %tu packets
%s #hal snapshot = %@
%s OPPSPK - TIMEOUT frame = %d
%s shouldStopListeningOnDetection:%@
%s startListenWithOption : %{public}d, %{public}@
%s OPPSPK - startListenWithOption : %{public}d, %{public}@
%s OPPSPK - VOICE STARTS frame = %d
%s OPPSPK - VOICE ENDS frame = %d
%s OPPSPK - frame %d/%d/%d wearer=%d ambient=%d moving=%f
%s OPPSPK - PAUSE SEEN frame = %d
%s OPPSPK - SPEECH SEEN frame = %d
%s OPPSPK - stop listening event detected, stopping listener
%s OPPSPK - stop listening event detected, not stopping listener
%s OPPSPK - will call completion but not stop listener
%s OPPSPK - stopListenWithCompletion : %{public}d, %{public}@
%s OPPSPK - Restarting listener to bypass 90 second recording limit
%s Has stopped listening
%s OPPSPK - Listening for speech stopped unexpectedly
%s OPPSPK - Listening for speech stopped normally
%s Enabling CFNetwork diagnostics
%s Starting Siri Connection Proxy
%s Starting Peer Location Service
%s Rejecting connection attempt by PID %d because it is missing the entitlement %@
%s Preheating session on client connection
%s %@ Client Connection Connected (pid=%d])
%s %@ Client Connection Disconnected (pid=%d)
%s %@ Dictation Connection Connected (pid=%d])
%s Too many connections from pid %d, refusing connection
%s %@ Dictation Connection Disconnected (pid=%d])  %@
%s Rejecting attempt to connect by pid=%d because it is missing one of the entitlements %@ or %@ (either will do)
%s %@ Settings Connection Connected (pid=%d)
%s %@ Settings Connection Disconnected (pid=%d)
%s no '%@' entitlement for connection %{public}@
%s %@ Rejecting connection, because no kCFBundleIdentifierKey could be found for pid=%d but we expected it to be a .app bundle
%s assistantd accepted connection from app (pid=%d bundleID=%@) %@
%s Synapse Sync Connection Disconnected (pid=%d)
%s %@ Managed Storage Connection Connected (pid=%d)
%s %@ Managed Storage Connection Disconnected (pid=%d)
%s %@ Analytics Connection Connected (pid=%d])
%s Analytics Connection Invalidated (pid=%d)
%s Analytics Connection Interrupted (pid=%d)
%s %@ Analytics Observation Connection does not have required entitlements.
%s %@ Analytics Observation Connection Connected (pid=%d])
%s Analytics Observation Connection Invalidated (pid=%d)
%s Analytics Observation Connection Interrupted (pid=%d)
%s %@ Security Connection does not have required entitlements.
%s %@ Security Connection Connected (pid=%d])
%s Security Connection Invalidated (pid=%d)
%s Security Connection Interrupted (pid=%d)
%s %@ Notification Service Connection does not have required entitlements.
%s %@ Notification Service Connection Connected (pid=%d])
%s Notification Service Connection Invalidated (pid=%d)
%s Notification Service Connection Interrupted (pid=%d)
%s Got xpc event for notification %s
%s Got xpc event for distributed notification %s
%s Notification payload: %s
%s Sync listener error %{public}s
%s Ignoring unexpected event type on sync listener
%s Returning no space to CacheDelete because it's not a special case
%s Could not get asset sizes: %{public}@
%s Deleting nothing for CacheDelete because it's not a special case
%s Could not purge assets: %{public}@
%s Purged assets to recover %{public}@ bytes
%s Could not register with CacheDelete: %d
%s Registered with CacheDelete
%s assistantd launched build %s~%s
%s assistantd finished post launch setup
%s assistantd shutting down
%s Sync now activity already registered
%s Assistant is not enabled, ignoring sync notification
%s Sync requested recently; sync reasons enqueued: %@
%s Received sync now notification from UEA.
%s Received defrost XPC message
%s Process launched %fs after sending defrost XPC message.
%s Process launched before sending defrost XPC message.
%s Unexpected message on sync connection %s
%s Unexpected nameless message on sync connection
%s Sync peer shutting down due to %s
%s Ignoring unexpected type on sync connection
%s Creating audio player...
%s Failed to create audio player due to error %@.
%s Created audio player %@ with audio session %@.
%s Reused audio player %@ with audio session %@.
%s Audio player %@ is already prepared to play.
%s Preparing audio player %@ to play...
%s Failed to prepare audio player %@ to play.
%s Prepared audio player %@ to play.
%s request = %@
%s Ignored because the session is already active.
%s Ignored because the audio player is already playing.
%s Asking audio player %@ to play...
%s Failed to play audio player %@.
%s Started playing audio player %@.
%s request = %@, immediately = %d
%s Stopping audio player...
%s Ignored because there's no audio player to stop.
%s _request = %@
%s Ignored because there's no audio player to pause.
%s _request = %@, shouldResume = %d
%s Ignored because there's no audio player to resume playing.
%s request = %@, error = %@
%s Ignored because there's no audio player to destroy.
%s request = %@, player = %@, success = %d
%s request = %@, player = %@, error = %@
%s Censor setting changed, pushing to peer.
%s Not pushing shared data because we have no peer
%s Already have Peer Data returning now!
%s Getting Peer Data from ADCommandCenter
%s Sending ADCC Peer Data now!
%s Forcing Siri to off because peer does not support language
%s Peer does not export shared data.
%s got remote execution command: %@ -> %@
%s error executing remote command: %@
%s got command response: %@
%s Resetting %@ session with Id %@
%s Started a session with id %@, count = %tu
%s Starting sessions and make quiet: %d
%s Pending until request is over
%s Resetting immediately
%s language code changed to %@
%s Canceling connection due to power change notification %@
%s Error deregistering for power notifications %{public}d
%s Command %@
%s Session %@ (type %d) wins with reason %@ preferred %d remoteSessionScore %ld localSessionScore %ld
%s holdTime is %d
%s Restarting timer as there is no winning session yet
%s We have results from preferred session. Evaluate.
%s Started queueing result objects
%s Command is %@ and %d
%s Destructive command with no RefId. File bug.
%s Cannot remap to other sessions with refId %@
%s Out of band destructive commands with %@ refId
%s (refId %@) causing us to cancel other session request (refId %@)
%s Session %@ wins by default.
%s shouldContinue is %d
%s Session will start connection
%s Session did open connection with type %d
%s All sessions active now.
%s Dropping command not from winning session.
%s Sending CommandFailed as command required response.
%s Session %@ wins with command %@
%s Ignoring as the winner has been chosen already.
%s Session received error but other active sessions present. Ignoring error %@ %d
%s Session log visible request failure
%s Session %@ connection did reset
%s Session should attempt retry
%s Request Id is %@ and oldSessionRequestId is %@ newSessionRequestId is %@
%s Proxied map is %@ reverse Proxied map is %@
%s Session did create assistant
%s Session will retry on error
%s Session begin retry preferring WWAN
%s Setting RequestId to %@
%s Bounce back command is %@
%s Final speech recognition arrived
%s session %@ cannot handle request or has non null refId
%s command %@ filtered for session %@
%s not sending command %@ to session %@
%s command %@ does not belong to session %@
%s Dropped command: %@
%s assertion = %@
%s Ignored because of active request (requestId = %@).
%s Ignored because %tu assertions.
%s     %@
%s Ignored because there's no need.
%s Resetting Sessions at Request Boundary
%s Request Id %@ for %@ session with Id %@ has proxied request Id %@
%s Previous winner session %@ reused for current request %@
%s metrics count %d
%s Session %@ is active or is in active retry
%s Reset winning session Id %@
%s sessionType is not defined
%s winningReason is not defined
%s Siri Mini result candidate called before sessions were set up
%s Tried to send unhandled command to Siri Mini
%s Filtering command %@ from Siri Mini as %@ is the winner
%s Detaching from session %p
%s Already attaching to session!
%s Attaching to session
%s Failed attaching to bt session %d
%s session = %p, result = %d
%s session = %p
%s Session is NULL.
%s Failed getting default local device from session %p (result = %d).
%s Failed adding callbacks to local device %p from session %p (result = %d).
%s localDevice = %p, event = %d, result = %d
%s Failed getting default accessory manager from session %p (result = %d).
%s Failed adding callbacks to accessory manager %p from session %p (result = %d).
%s accessoryManager = %p, accessoryEvent = %d, device = %p, state = %d
%s address = %@, headphoneInEarDetectionState = %@
%s address = %@, headphoneListeningMode = %ld
%s Failed getting device address from string %d
%s Failed getting device from address %d
%s BTDevice %p for address %@
%s BTAccessoryManager %p
%s Failed getting device from deviceUID %d
%s BTDevice %p for deviceUID %@
%s BTLocalDevice %p
%s connectedDevices = %@
%s pairedDevices = %@
%s Wireless Splitter is not supported on this platform.
%s Getting connected devices from local device %p...
%s Got %tu connected devices from local device %p.
%s     [%02tu] %@
%s Failed getting connected devices from local device %p (result = %d).
%s Local device is NULL.
%s Getting paired devices from local device %p...
%s Got %tu paired devices from local device %p.
%s Failed getting paired devices from local device %p (result = %d).
%s Loading device info for %@...
%s Loaded device info %@ for %@.
%s Using slow path...
%s Slow path took %f seconds.
%s Slow path timed out after 4 seconds.
%s Reloading device info for %@...
%s Reloaded device info %@ for %@.
%s Reloading headphone in-ear detection state for %@...
%s Reloaded headphone in-ear detection state %@ for %@.
%s Reloading headphone listening mode for %@...
%s Reloaded headphone listening mode %ld for %@.
%s Unable to set headphoneListeningMode to %ld, device does not support this mode
%s deviceInfo = %@
%s deviceInfo changed from %@ to %@
%s headphoneInEarDetectionState = %@
%s headphoneInEarDetectionState changed from %@ to %@
%s headphoneListeningMode = %ld
%s headphoneListeningMode changed from %ld to %ld
%s Fetching device info for %@...
%s Fetched device info %@ for %@.
%s Fetching headphone in-ear detection state for %@...
%s Fetched headphone in-ear detection state %@ for %@.
%s Fetching headphone listening mode for %@...
%s Fetched headphone listening mode %ld for %@.
%s Changing headphone listening mode to %ld for %@
%s Unable to set listening mode for BTDevice %p via BTAccessoryManager %p
%s Changed headphone listening mode to %ld for %@.
%s Getting BTDevice and BTAccessoryManager for %@...
%s Got BTDevice %p and BTAccessoryManager %p for %@.
%s Device UID and address of %@ are nil.
%s Data source of %@ is nil.
%s Failed getting BTDevice and BTAccessoryManager for %@.
%s Loading Wireless Splitter session info for %@...
%s Loaded Wireless Splitter session info %@ for %@.
%s observer = %@, fromState = %@, toState = %@
%s Reloading Wireless Splitter session info for %@...
%s Reloaded Wireless Splitter session info %@ for %@.
%s wirelessSplitterSessionInfo = %@
%s wirelessSplitterSessionInfo changed from %@ to %@
%s Fetching Wireless Splitter session info for %@...
%s Fetched Wireless Splitter session info %@ for %@.
%s Getting BTLocalDevice for %@...
%s Got BTLocalDevice %p for %@.
%s Failed getting BTLocalDevice for %@.
%s Failed getting address from BTDevice %p (result = %d).
%s Failed getting vendor id and product id from BTDevice %p (result = %d).
%s Failed getting InEar capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting DoAP capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting ANC capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting Transparency capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting Software Volume capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting Announce Messages capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting in-ear detection enable flag %d
%s Failed getting primary and secondary in-ear status %d
%s Unable to get bluetooth device listening mode, found NULL handles
%s Unable to determine listening mode for BTDevice %p via BTAccessoryManager %p (result = %d)
%s Listening mode for BTDevice %p is %ld
%s Unable to set bluetooth device listening mode, found NULL handles
%s Unable to set bluetooth device listening mode to undefined mode
%s Unable to set listening mode for BTDevice %p via BTAccessoryManager %p (result = %d)
%s Changed headphone listening mode to %ld.
%s Failed getting sharing enable flag %d
%s Failed getting sharing device addresses %d
%s Failed converting address from BTDeviceAddress (result = %d).
%s Couldn't create stats dir %{public}@
%s Error reading stats plist for %{public}@ %{public}@
%s Error serializing plist data for service %{public}@ %{public}@
%s Trying to mark command start for nil command
%s No start time for command %@ for service %{public}@
%s Can't mark response for nil command for service %{public}@
%s Will destroy os_transaction_t object
%s Transaction object nil
%s Did destroy os_transaction_t object with new XPC transaction count %ld
%s (oldState = %ld, newState = %ld)
%s Will call os_transaction_create()
%s Did call os_transaction_create() with new XPC transaction count %ld
%s will call os_transaction_create()
%s Not observing call state
%s Recording performance numbers on NowPlaying updates for %g seconds
%s ApplicationInfo identifier: %@
%s Reply context from remote center: %@
%s Got activity for app context %@ %@
%s Error getting current user activity uuid %{public}@
%s Fetching NSUserActivity for %@ with %0.1g second timeout
%s Got NSUserActivity for %@
%s Error getting current user activity from uuid %{public}@
%s User activity (%@) isEligibleForReminders: %@
%s Sending notification %@
%s Skipped sending invalid notification. display name %@, date %{public}@
%s NLAlertContext [+] %@
%s AlertContext [+] %@
%s #hal timed out
%s #hal Local deviceIDSIdentifier = %@, context = %@
%s #hal Missing deviceIDSIdentifier for local context
%s #hal Remote context: %@
%s #hal Error fetching remote context: %@
%s #hal Add device context with proximity: %@, %@
%s #hal context snapshot set with %@
%s #hal context snapshot cleared on timeout
%s #hal Timed out force fetching from %@
%s #hal force fetched: %@, error: %@
%s Timed out fetching aggregated context
%s #hal No request ID specified, skipping
%s #hal context snapshot cleared
%s Error unarchiving context history: %@
%s No saved context history
%s Error archiving context history: %@
%s Failed to write context history: %@
%s Context refreshing error: %@
%s Context refreshing done
%s Start ctxg=%p %s
%s Got NavStatus ctxg=%p
%s Got NowPlaying ctxg=%p
%s Got Simple Context ctxg=%p
%s Got Music Personalization Token ctxg=%p
%s Got HomeAnnouncement ctxg=%p
%s Done ctxg=%p aceID=%@
%s Could not register for %s notification
%s observing notifications
%s No longer observing notifications
%s #hal %d
%s #hal collectorID(s): %@, isLocal: %d
%s #hal No collector device found
%s #hal malformed message: missing request ID
%s #hal received context_snapshot_push for request %@:
%s Found tokens (%lu) with error %@
%s No tokens found and error is %@
%s No tokens found, but no error either.
%s Got %s notification
%s Could not fetch route! %@ %@
%s Updating NowPlaying info now for %@
%s Updating NowPlaying info in %.4g seconds
%s group=%p canceling _nowPlayingCoalescingTimer because we are starting an update now
%s group=%p didChange=%d queueState ID=%@
%s #hal Fetching context after %f seconds
%s supplementalSnapshot = %@
%s cachedHomeAnnouncement = %@, proposedHomeAnnouncement = %@
%s didChange = %d
%s fetchedSnapshot = %@
%s Settings handler asked to handle request %@, but didn't know how
%s Starting delay with type %@
%s Can't start delaying because we are already delaying
%s Reseting the OSMED
%s Delaying already stopped, not sending commands
%s Stopping request delaying and sending commands: %s
%s Releasing %lu delayed context commands sendCommands: %d
%s Context command queue empty, not starting timer
%s Timeout reached for context commands, dropping commands
%s Starting/Resetting context commands timer
%s Can't start delaying for boron because there are no devices connected
%s Can't start delaying for boron because there was no boron device found
%s Whitelisted command received, bypassing delay: %@
%s Delaying sending command: %@
%s ADPeerLocationRemote best location timer firing
%s starting location updates
%s Sending unsolicited location: %{private}@
%s acquiring location-in-use assertion
%s %{private}@ %@
%s stopping location updates
%s has active request; calling completion
%s releasing location-in-use assertion
%s no active request
%s updated location %{private}@
%s %{public}@
%s authorized with active request; starting location updates
%s not authorized with active request; failing with error
%s Unable to get best location from peer: %{public}@
%s forceReconnect %d
%s %d %@
%s Connection closed before opening
%s Got an invalid socket
%s Closing valid socket due to other error before setup complete
%s Buddy is %@
%s Buddy is now %@
%s External Request connection missing entitlement
%s External Request Listener Error: %{public}s
%s Ignoring unexpected event type on External Request Listener
%s Unexpected external request message type %{public}lld
%s External Request peer error: %s
%s startLocalRequest = %@
%s Archiving error %@
%s Dispatching diagnostic request: %@
%s Could not complete %@: %@/%@
%s Completed %@: %@
%s deviceSyncMessageService = %@, deviceIdentifier = %@
%s deviceSyncMessageService = %@, deviceIdentifier = %@, incomingMessage = %@
%s deviceSyncDataProvider = %@
%s Creating session for device with identifier %@...
%s Created session %@ for device with identifier %@.
%s app (%@) can be launched - filtering
%s app (%@) can not be launched due to '%@' - bailing
%s Found %tu apps matching name %@: %@
%s deviceIdentifier = %@, incomingMessage = %@
%s generationsByDataType = %@
%s dataTypes = %@
%s dataType = %@, generation = %llu, limit = %llu
%s incrementalChanges = %@
%s dataType = %@
%s snapshot = %@
%s error = %@
%s audioCategory = %@
%s %@ (%@ / prev: %@ / value: %@ / %@)
%s OPPSPK - Listening for voice pause
%s OPPSPK - %lu connected devices to scan
%s OPPSPK - Scanned device %@, uid=%@
%s OPPSPK - Chose device %@
%s OPPSPK - Voice pause detected
%s OPPSPK - Voice pause not detected
%s OPPSPK - more than one boron device connected, setting not opportune
%s OPPSPK - No connected devices to listen on, setting not opportune
%s Setting sample rate to %d
%s Could not make Fingerprinter decoder: %{public}.4s
%s Error during conversion for fingerprinter %{public}.4s
%s Getting signature for duration %lf
%s Fingerprinter doesn't support rate %{public}ld
%s Purging deleted records before date %@
%s Purging data from analytics store (%@)...
%s Unable to get file size of analytics store (%@).
%s Unable to get file attributes of analytics store (%@).
%s Purged data from analytics store (%@)...
%s Failed to purge data from analytics store (%@) due to error %@.
%s Resetting analytics store (%@)...
%s Reset analytics store (%@).
%s Checkpointing write-ahead log (%@)...
%s Checkpointed write-ahead log (%@)...
%s Failed to close database (%@) due to %@.
%s Failed to remove database (%@) due to %@.
%s Failed to remove database at path %@ due to %@.
%s Failed to open analytics database (retry %tu/%tu) at path %@ with error %@.
%s Failed to perform integrity check on analytics database (retry %tu/%tu) at path %@ with error %@.
%s Failed to remove database (retry %tu out of %tu) at path %@ due to %@.
%s Failed to prepare analytics database after %tu retries due to %@.
%s Failed to add column '%@' to '%@' table with error %@
%s Failed to create '%@' table with error %@
%s Failed to begin database transaction due to error %@
%s Failed to insert event record %@ into %@ table due to error %@
%s Failed to commit database transaction due to error %@
%s Failed to rollback database transaction due to error %@
%s Failed to update database records with deleted state due to error %@
%s Failed to purge database records with deleted state due to error %@
%s Failed to select database records due to error %@
%s %@ Flow Service Connection does not have required entitlements.
%s %@ Flow Service Connection Connected (pid=%d])
%s Flow Service Connection Invalidated (pid=%d)
%s Flow Service Connection Interrupted (pid=%d)
%s Settings found
%s Settings not found
%s Application %@ does not have access to %@, removing %@ from the intent node
%s called with nil punchoutOutcome.
%s #hal
%s #hal suppressing play state change caused by siri activation interruption
%s #hal Failed fetching Now Playing Info with error: %@
%s #hal Previous playbackState: %@, nowPlayingTimestamp: %@
%s      #hal New playbackState: %@, nowPlayingTimestamp: %@
%s Client with pid %{public}d does not have entitlement %@
%s Current execution count: %ld, enqueuing work
%s Unexpected execution count. File radar.
%s Now executing %@
%s Rejecting ClientLite command because Siri is disabled
%s command = %@, afterCurrent = %d, isOneWay = %d
%s Timing out ClientLite command %@
%s No client handler for command %@
%s airPlayRouteIdentifiers = %@
%s recordRoute = %@
%s recordDeviceIdentifier = %@
%s recordDeviceUID = %@
%s requestID = %@
%s Preparing INPerson in %@
%s Finished
%s Unexpected value for startPlaybackType: %ld, ignoring.
%s Timed out fetching meCard  after waiting %0.1g seconds
%s Got %@
%s No replacement for %@, but there should be one
%s setting contactIdentifier to %@
%s setting displayName to %@
%s setting nameComponents.namePrefix to %@
%s setting nameComponents.givenName to %@
%s setting nameComponents.middleName to %@
%s setting nameComponents.nameSuffix to %@
%s setting nameComponents.nickname to %@
%s #hal no key included. Skipping
%s #hal ContextSnapshot with included keys = %@, excluded keys = %@, updating with partial context
%s #hal Force fetching from devices through collector: %@
%s #hal no included keys. Skipping
%s #hal included keys = %@, excluded keys = %@, updating with partial context
%s #hal No included keys specified
%s #hal [%@] remote context %@: %{private}@
%s #hal Current collector(s): %@
%s Timer handler asked to handle request %@, but didn't know how
%s Lost mode is active, not sending any outbound requests
%s No place to send this
%s Failed sending message type %d %{public}@
%s retrieved ID from URI: %@
%s Unable to find peer, creating faux element for identifier: %@
%s Has active account: %d
%s AirPlay route did not change
%s %@ %{public}@
%s Request success %d
%s Dropping incoming message because Lost Mode is active
%s Dropping incoming message with unknown sender
%s Type %d from %@. Incoming %@ Outgoing %@ Expects Response %d
%s Response class is %d doesn't match %d
%s Handling response of type %d
%s Completing request
%s %ld responses remaining
%s %lu accounts
%s %lu devices
%s device: %@
%s Already have a log open, ignoring
%s Couldn't open file %{public}@
%s error removing file at path %{public}@ %{public}@
%s Logged speech file at path %@
%s Error opening speech log at URL %{public}@ %{public}s
%s buffer not big enough
%s Read incorrect number of bytes
%s Error destroying NACContext %{public}d
%s Error during NACInit %{public}d
%s Got context %p from NACInit
%s Disposing request data failed %{public}d
%s NACKeyEstablishment error %d
%s NACSign error %{public}d
%s Error disposing validation data %{public}d
%s Using cached authorization status = %d enabled = %d preciseLocationEnabled = %d
%s Fetching authorization status
%s Got authorization status = %d enabled = %d preciseLocationEnabled = %d
%s Performing shift from location: %{private}@
%s Using unshifted location because location shift failed due to error: %@
%s Stopping location monitoring
%s Canceling Location-SLA timer
%s Already waiting for a response
%s Scheduling location-SLA timer for %lf
%s Location-SLA timer firing
%s Canceling location timer
%s Scheduling location timer for %lf
%s Location timer firing
%s Starting location monitoring
%s Should send location for desired accuracy %lf %@
%s Asking for location from peer
%s Received location from peer: %{private}@
%s Received empty location response from peer
%s Requesting best location
%s %{private}@
%s Ignoring location older than _lastPeerLocation
%s CLAuthorizationStatus changed %d isEnabled %@, preciseLocationEnabled %@
%s %@ %{private}@
%s Unknown status %{public}@
%s Given a location, but no explicit location status -- assuming we are authorized to use locations
%s No cached location available
%s No access to location info
%s Location Services Disabled
%s Location Services Denied for assistant
%s Using cached location
%s No cached location, waiting for first update
%s Acquiring location-in-use assertion for reason: %@
%s creating location-in-use assertion
%s Releasing location-in-use assertion for reason: %@
%s nilling out reference to location-in-use assertion
%s #hal Invalid local device context %@
%s #hal nothing specified in includedKeysInPush
%s #hal serialized context is nil
%s #hal %@ %@
%s #hal Redacted version: %@ %@
%s #hal No transformer for %@, not pushing to remote
%s %@ Context Service Connection does not have required entitlements.
%s %@ Context Service Connection Connected (pid=%d])
%s Context Service Connection Invalidated (pid=%d)
%s Context Service Connection Interrupted (pid=%d)
%s %@ context is active with expiration date: %@
%s Sent MRMediaRemoteCommand %d, got %@ %@
%s reporting success
%s %s MRMediaRemoteCommandPlay did not return success %@
%s %s MRMediaRemoteCommandPlay returned success
%s Failed to prepare for StartPlayback, failing without sending MRMediaRemoteCommandPlay
%s Sending MRMediaRemoteCommandPlay to %@
%s Sent = %d mrError=%d statuses = %@
%s Sending MRMediaRemoteCommandPlay now
%s Unknown actionType %@
%s %@ %f
%s Ignoring %@ with aceId %@ because there is no completion handler. This command should only read state, and have no effect.
%s %@ overlapping commands %@
%s WARNING: No other media service found, handling everything in assistantd.
%s %@ command has explicit routes, passing to %@
%s %@ is NOT supported by %@, attempting to handle in assistantd after all
%s Handing SetQueue to %@
%s Adding metrics info to SetQueue %@
%s Caught an exception %@ while converting metricsContext %@ to Foundation object. 
%s merging existing metricsContext dictionary
%s Value already exists for key %@, keeping it
%s merging existing non-dictionary metricsContext value of %@ under key %@
%s Successfully updated metricsContext on %@
%s Failed to update metricsContext error=%@ newContextDictionary=%@
%s sessionUUID = %@
%s Can not find an active session
%s Can not find an active session with UUID %@
%s Activating dictation session with sessionUUID = %@
%s Deactivating dictation session with sessionUUID = %@
%s Beginning dictation transcription XPC transaction because %@
%s Beginning dictation audio file XPC transaction because %@
%s Ending dictation transcription XPC transaction because %@
%s #hal Upgrading %@ to proximity: %@
%s #hal Incorporated %lu from RP proximity: %@
%s #hal Not supported on this platform
%s #hal Using cached proximity
%s #hal cached proximity for request cleared due to timeout
%s #hal cached proximity cleared
%s #hal Heard Voice Trigger
%s #hal Heard Voice Trigger expired
%s #hal Voice Trigger first pass
%s #hal Voice Trigger first pass expired
%s #hal Did not find any devices with `fromLocalDevice` set to true
%s #hal Unable to assign proximity to %@: missing idsDeviceUniqueIdentifier
%s %@ has no identifier.
%s %@ has no control group.
%s Unable to select  depolyment group based on allocation.
%s assistantIsEnabled = %d
%s dictationIsEnabled = %d
%s requestId = %@, reason = %@
%s context = %@
%s command = %@, peer = %@, remoteExecutionInfo = %@
%s Adding completion for %@
%s Ignored command id %@ because request id %@ is unknown.
%s Ignored because request id %@ is unknown.
%s Ignored because commandId, requestId and block are all required.
%s Ignored post command handling block for command id %@ because request id %@ is unknown.
%s No Media plugin could be found, but one was expected. Please file a radar on Siri Frameworks.
%s Motion activity manager started: %@
%s Motion activity manager stopped
%s Clearing request delegate state
%s Clearing speech delegate state
%s Interrupting current request delegate
%s Informing session it's ok to send assistant data
%s requestCompletion is set to %@.
%s requestDelegate is set to %@.
%s success = %d, error = %@
%s requestDelegate is set to nil.
%s requestCompletion invoked.
%s Interrupting current recording speech delegate
%s Waiting for recording to finish
%s Asking speech manager to release audio session...
%s Ignored releasing audio session because current client is %p and speech delegate is %p.
%s Invoking Speech Completion
%s Marking request did finish on app launch callback
%s StartSpeech msg id is %@
%s command = %@
%s startRequest = %@
%s Ignoring command whose request %@ is not the current request
%s Handling command from result object cache %@
%s Missing command identifiers, asking for objects from the server
%s missing refs resolved
%s missing refs for %@ have already been fulfilled
%s GetResultObjects Response, trying to handle callbacks again.
%s Missing references still not fulfilled, failing
%s Ignore ARO for past requests
%s Failed getting result objects, error %@ request Id %@
%s Canceling current request
%s Logging Cancel for %d seconds
%s Invoking request completion on request cancelation
%s Start sending metrics for %f seconds before shutting down...
%s Done sending metrics before shutting down.
%s Delaying shutdown block for %f seconds...
%s Shutting down session now...
%s Still active. Ignoring session shutdown request
%s _deviceIsLocked=%d AFHasUnlockedSinceBoot=%d ADVoiceDialingDisabledWhileLocked=%d _deviceIsShowingLockScreen=%d ADControlCenterDisabledWhileLocked=%d _isInStarkMode=%d _isInCarDNDMode=%d
%s Stripping %@ Restriction for CarPlay
%s %@ (executionContext = %@)
type=%@
HandleCommand
%s Ignoring command with unknown refId %@ aceId %@
%s Dispatching response to service %@
%s Searching callbacks for phone call command
%s Found phone call command
%s Call is already likely not checking again
%s No phone call command found
%s Ignoring callbacks in reply
%s We're in a callback context, asking callback manager for next commands
%s Using first chance service %@ instead of originally found service %@
%s Dispatching command %@ to service %@
%s Service reply for %@ %@ %@
%s Waiting for Myriad decision: %d (Service: %@, Domain %@, Command: %@(%@)
%s Couldn't find service for %@ %@
%s Dispatching out of band service command %@ to service %@
%s Reply for out of band command %@
%s Updating with location %@
%s Got call state changed; call is in process: %d
%s Got call state changed; call is incoming: %d
%s requestCompleted = %@
%s Failing speech request on request completed since we never got a speech recognized
%s Request completed for id %@: %@ %@
%s CommandFailed for refId: %@ reason: %{public}@
%s SpeechCommand failed
%s CommandIgnored for refId %@
%s holdToTalkThresholdInMilliseconds: %@
%s ignoring server configured HTT threshold
%s first callback ACE IDs: %@
%s %@ (commands = %@)
%s Ignored %@ because request id %@ is unknown.
%s %@ timed out.
%s Start waiting for command %@ ...
%s Stop waiting for command %@.
%s Command %@ is already handled. No need to wait.
%s Done %@
%s deviceConfiguration = %@
%s initialInterstitialDelay = %f
%s initialInterstitialDelayForCarPlay = %f
%s initialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking = %f
%s hasAudioSessionActivationDelay = %d
%s audioSessionActivationDelay = %f
%s mediaPlaybackVolumeThresholdForAudioSessionActivationDelay = %f
%s audioSessionActivationDelayAboveMediaPlaybackVolumeThreshold = %f
%s Server sent Myriad device configuration
%s Server sent Myriad device configuration, but it was ignored
%s ResultCandidate for a different request. Ignoring.
%s %@ (processedAudioDuration = %f, resultId = %@)
%s selectedResultCandidate = %@ (processedAudioDuration = %f, resultId = %@)
%s speechAcceptedResultCandidateDuration = %f
%s This is a race between a network layer RollbackRequest retry and Speech Endpointing. Ignore the RC.
%s Already accepted result candidate for request
%s ResultCandidate is out of scope in accept. Ignoring.
%s Accepted this ResultCandidate aceId: %@ refId: %@ with resultId %@
%s ServerEndpoint for a different request. Ignoring.
%s VoiceIdentificationSignal for a different request. Ignoring.
%s Updated _selectedSharedUserID from SASVoiceIdentificationSignal to: %@
%s Not updating _selectedSharedUserID with nil selectedSharedUserID from SASVoiceIdentificationSignal
%s %@ (recordUserAudio = %d, resultCandidateId = %@)
%s SpeechRecognized for a different request. Ignoring.
%s isEager %d
%s Multilingual SpeechRecognized for a different request. Ignoring.
%s Dispatching SASMultilingualSpeechRecognized command
%s SASMultilingualSpeechRecognized failed to return speech recognized command for primary language
 %@ %@
%s PronunciationRecognized for a different request. Ignoring
%s Ignoring Partial, SpeechRecognized has already been received
%s Ignoring Recognition, SpeechRecognized has already been received
%s Partial for a different request. Ignoring.
%s Failure for a different request. Ignoring.
%s Abort for a different request. Ignoring.
%s Got VoiceSearchPartialResult for something other than our current speech command. Ignoring.
%s Got voiceSearchFinalResult for something other than our current speech command. Ignoring.
%s Got suspendClientEndpointer for something other than our current speech command. Ignoring.
%s Got confirmEndpointRequest for something other than our current speech command. Ignoring.
%s Got serverEndpointFeatures for something other than our current speech command. Ignoring.
%s Got confusionNetwork for something other than our current speech command. Ignoring.
%s Got clientSetupInfo for refId %@. Ignoring. 
%s %@ %@ %d
%s Recognition failed, but we're waiting to write an audio file. Don't cancel recording
%s Clearing speech delegate in recording completion
%s Fetching location for request on a different device
%s Unable to get location from context cache
%s ttsGetSpeechSynthesisVolume = %@
%s ttsSetSpeechSynthesisVolume = %@ (actionType = %@, volumeLevel = %@)
%s extractSpeechData = %@ (speechRequestId = %@, audioOutputType = %@, startTime = %@, endTime = %@)
%s extractSpeechDataCompleted = %@ (speechDataUrl = %@)
%s Client timeout: %f server timeout: %f, client enabled %d, server enabled %d
%s _langaugeDetectionWaitTimer fired. Executing _multilingualSpeechRecognizedCommandHandlerBlock %@
%s #hal Preferred handling device is %@ for command: %@
%s %@ %@ %@
%s Suppressing reply since it was handled in callbacks
%s CommandFailed errorCode = %ld, reason %@
%s Command requires a response but it has no aceId to set as ref. Suppressing.
%s Command does not require a response, but we have a reply, so sending it along anyway.
%s Command has an unnecessary response. Suppressing
%s Ignoring session error since we're in a callback context
%s Ignoring session error (%@) because the speech manager is doing local speech recognition in dictation mode
%s Propagating session error because the speech manager is not doing local speech recognition or is not in dictation mode
%s Telling session not to retry because local dictation is active
%s Session is changing our request identifier from %@ to %@. Should not be called.
%s info = %@, context = %@
%s starting person dictation request
%s starting location dictation request
%s Sending %@ with origin: %@ source: %@
%s Skipped enable server endpointer command because ADSpeechCapturingGetUsesServerEndpointingFromRequestOptions == NO
%s Sent enable server endpointer command.
%s Location manager says we need to send location for this request
%s Location manager updated location
%s Fingerprint only request not sending start speech
%s Secure offline request not sending start speech
%s Recording Info didn't change, not sending update audio
%s firstBufferHostTime = %llu, audioSessionSetActiveEndHostTime = %llu
%s recordRoute = %@, bluetoothDevice = %@, isDucking = %d, isTwoShot = %d, speechEndHostTime = %llu
%s packets.count = %llu, timestamp = %f, count = %lld
%s Not sending audio packet to session because it has already failed and local recognition has taken over
%s Ignoring prelistening speech data from %lf. Threshold is %lf
%s endpointMode = %zd, totalPacketCount = %zd, endpointerMetrics = %@, sessionUUID = %@
%s capturingMode = %zd, sessionUUID = %@
%s Post XPC event to notifyd: %s
%s Ignoring partial local recognitions because server results have arrived
%s Sending raw recognition to server %@
%s Phrases=<REDACTED>
%s Phrase[%lu]=%@
%s Utterance[%lu]=%@
%s Not handling phraseRecognition because this is a phoneme transcription request
%s Ignoring and canceling final local recognition because server results have arrived
%s Deferring final local recognition results for %f seconds while waiting for the server
%s Ignoring final local recognition because the previous request has already finished
%s Ignoring final local recognition because the server won the race
%s Giving up on final server recognition because local won the race
%s Local speech recognition failed, and so did the session: %{public}@
%s Ignoring local speech recognition failure because the session is still active: %{public}@
%s Myriad lost, twoshot prompt dropped.
%s deviceContexts = %@
%s executionContext = %@
%s expectedCurrentRequestID = %@, currentRequestAceId = %@
%s QuickStop [higher priority first]: hasFiringAlarms = %d, bargedInOverFiringAlarm = %d, hasFiringTimers = %d, bargedInOverFiringTimer = %d, bargedInOverSiriRequest = %d, bargedInOverSiriVoiceOutput = %d, bargedInOverMediaPlayback(advisory only) = %d, bargedInOverHomeAnnouncementPlayback = %d
%s QuickStop: Dismissed firing alarms.
%s QuickStop: Dismissed firing timers.
%s QuickStop: Dismissed Siri talking.
%s QuickStop: Dismissed home announcement playback.
%s QuickStop: Nothing to stop
%s expectedCurrentRequestID %@ does not match currentRequestAceId %@, doing nothing
%s Stopping media playback
%s Stop media invocation completed with response: %@
%s Stop media invocation failed attempting to stop media with error: %@
%s %@ is not supported on this platform
%s Took action %@
%s Handle QuickStop for current request
%s Handle QuickStop with NO current request
%s dialog ID: %@, params: %@
%s Error presenting the AddViews: %@
%s This code path should not be used. Please file a radar.
%s QuickStop is not supported on this platform
%s confidenceScores = %{private}@
%s classification = %ld, classifiedUser = %{private}@, unknownScore = %ld, duration = %ld, version = %ld, thresholdingType = %@, assetVersion = %@
%s Invalid classification: %ld
%s Using debug scores: %@
%s Using debug classifiedUser: %@
%s Using debug userIdentityClassification: %@
%s No scores found for tracked profiles.
%s Assistantd and CoreSpeech are out of sync. Attempt recovery.
%s Using cached scores: %@
%s called with nil command handler; returning
%s Language detector is unavailable/disabled. Falling back to non LID dictation flow
%s %ld %@
%s options = %lu, reason = %ld, speechRequestOptions = %@
%s options = %lu
%s %s is not yet supported on this platform
%s language code changed from %@ to %@
%s language code %@ is not supported for this device
%s no need to language code to %@ because it is already set to %@
%s Keeping language code the same
%s output voice %@ is not supported for language code %@ for this device
%s %@, %@
%s configuration = %@, client = %@
%s delaying session end because there is an active request
%s ending session immediately
%s delegate %p, _speechDelegate %p, _requestDelegate %p
%s Asking command center to replace speech delegate with nil...
%s Ignored replacing speech delegate with nil because speech delegate is %p.
%s Asking command center to replace request delegate with nil...
%s Asking command center to reset request context...
%s Ignored resetting request context because current client is %p.
%s Ignored replacing request delegate with nil and resetting request context because request delegate is %p.
%s Looking up and sending the SARequestCompleted callback for %@
%s Updating with status=%@ location %@
%s No location in speechRequestOptions %@
%s options = %@
%s [[ADMultiUserService sharedService] selectedSharedUserID] cleared on new user initiated activation
%s %@ Event %ld
%s Asking to play recording start alert on prelistening continue
%s Pronunciation Context: %@ refId %@
%s Dictation with session id %@ will start with primary language code %@ and dictation languages %@.
%s Ignored Dictation with session id %@ because the expected request delegate is nil and speech delegate is %@, but the actual request delegate is %@ and speech delegate is %@, delegate session ended %@.
%s Reason for cancelling the request - %@
%s Cancelling speech capture (suppressing alert: %d)
%s Trying to rollback a request, but don't have one
%s We're not the current delegate, but we have a speech completion. Will try to update in completion
%s Ignoring update speech options from invalid delegate
%s Skipped enable server endpointer command because (_currentRequest.aceId = %@) and (_speechManager.context.aceId = %@) mismatched.
%s Ignoring stop speech from invalid delegate
%s Ignoring cancel speech from invalid delegate
%s Requested command conflicts with existing: %@
%s Ignoring invalid ace command %@
%s Handling generic send commands
%s Handling generic server bound command
%s Handling generic client bound command
%s Don't know how to handle generic ace command %@
%s command = %@, delegate = %@
%s Performing commands %@ after request %d
%s Ignoring early return flag for non interrupting request
%s _selectedSharedUserID cleared in _clearContext.
%s Sending fetch supported languages completion
%s Failed getting deferred objects
%s Error disabling fides: %{public}@
%s Successfully disabled DES
%s Ignoring reschedule refresh request because assistant isn't enabled
%s result = %@
%s Failed to handle remote request in %lfs
%s Failed to handle remote speech request in %lfs
%s Location authorization status is not determined. Enabling when in use.
%s Ignoring attempt to set the language based on current system config, because we already have a language code saved.
%s No language code saved, but Assistant is enabled - saving language: %@
%s Ignoring queued language code: %@
%s Ignoring queued output voice: %@
%s Timed out fetching multi user state context
%s Score donation received: %@
%s No client, assuming success and returning immediately
%s success = %d
%s Not ending session because of %s %s
%s Found %@ given context ID %@
%s Found historical context %@ given context ID %@
%s Skipped sending metrics to server because metrics sender is disabled.
%s Skipped sending metrics to server because the device has not been unlocked since boot.
%s Client disconnected, sanity checking
%s Client disconnected and no phone call underway, syncing if needed
%s command = %@, executionInfoToMatch = %@
%s matchedExecutionContext = %@
%s Canceling session for shutdown
%s client = %@
%s volumeService = %@
%s volume = %f
%s Volume service is unavailable.
%s success
%s identifier = %@
%s recordedAudioFileURL = %@
%s identifier = %@, offset = %f, duration = %f, outputFileType = %ld
%s offset = %f, duration = %f (effective)
%s speechCapturingContext = %@
%s Services %@
%s Got AddResultObjects with %lu objects aceID=%@, refId=%@ 
%s  - %@ %@
%s And %lu resultObjects %@
%s Preheating speech manager
%s Current delta from expected activation: %lf activation: %lf
%s New Alarms subscription active
%s #hal Alarm fired: %@
%s #hal Alarm dismissed: %@
%s #hal updated snapshot: %@
%s Checking if route is hands free %@
%s Mute state changed %@
%s Listening for audio route changes
%s Stopping listening for audio route changes
%s Listening for mute state changes
%s Stopping listening for mute state changes
%s Use device speaker for TTS preference changed!
%s Audio route changed %@
%s Audio owner lost %@
%s Audio owner reset %@
%s Sync disallowed because device has not unlocked.
%s Sync disallowd because both Siri and Dictation are disabled.
%s Failed getting kern.bootsessionuuid with sysctlbyname() %s
%s kern.bootsessionuuid is %@
%s Duet domain and command must be non-nil: %@, %@
%s totalFrameLength = %lld
%s frameOffset = %lld
%s dataByteSize = %u
%s numberOfFrames = %u (read)
%s numberOfFrames = %u (write)
%s trimmedAudioFileURL = %@
%s Generating anchor for values %{private}@
%s Home manager is still syncing
%s Home owner %{private}@ home %{private}@
%s home (%{private}@) owner (%{private}@) %{private}@
%s Opt-in status: %@
%s Siri Data Sharing status is unspecified on this device, check if there's a mismatch between this and HomeKit accessory's setting and recover
%s Accessory setting thinks this HomePod is Opted-In, but HomePod is in unspecified state, resolving mismatch
%s Accessory setting thinks this HomePod is Opted-Out, but HomePod is in unspecified state, resolving mismatch
%s %@ value is null, no recovery needed
%s %@ setting does not exist on this HomePod, no recovery needed
%s Home is not present
%s primaryUser previous settings %{private}@ for home (%@)
%s primaryUser new settings %{private}@ for home (%@)
%s #multi-user _updateHomeUserSettings- MultiUserSetupHomepodUserAddedToHome primary user
%s Secondary user previous settings %{private}@ for home (%@)
%s Secondary user new settings %{private}@ for home (%@)
%s Voice ID setting is ON for %{private}@
%s #multi-user _updateHomeUserSettings- MultiUserSetupHomepodUserAddedToHome secondary user
%s User toggled on voice recognition, scheduling to gather this enablement metric
%s currentUserSettings %{private}@ for home (%@)
%s Voice ID setting is ON for current user %{private}@
%s Start sharing
%s Settings (%@)
%s currentHome:%@
%s status is %d
%s homeManager is %@
%s home is %{private}@
%s Siri data sharing status: %@
%s %@ setting not found for this HomePod, ignoring
%s _currentHome (%@) home (%@)
%s First time setting HomePod accessory (%{private}@) because the setting has not been set before
%s Unable to set opt-in status for accessory (%{private}@), with error %@
%s Success setting Siri data sharing status (%ld) for accessory (%{private}@)
%s Not setting HomePod accessory (%{private}@) setting (%@) because it's already a known value of (%@)
%s Not setting (%{private}@) because the setting does not exist for accessory (%{private}@), so we won't touch it
%s Received a share URL
%s previousVoiceIDSettings: %@ currentVoiceIDSettings: %@
%s atLeastOneUserEnabledVoiceID (%@)
%s current accessory not found in the access control list
%s %p speechCapturingMode = %zd, clientConfiguration = %@
%s %p speechRequestOptions = %@, currentActivationInfo = %@
%s activeMediaPlaybackVolume = %f
%s recordRoute = %@, playbackRoute = %@
%s Requesting historical buffer of duration %lf seconds
%s recordRoute = %@, playbackRoute = %@, attemptsToUsePastDataBufferFrames = %d
%s alertBehavior = %@
%s AppleTV (isVoiceOverTouchEnabledInAccessibility = %d)
%s HomePod
%s Built-in Voice
%s Triggerless
%s CarPlay Button Press (recordRoute = %@)
%s Bluetooth Voice Trigger
%s Bluetooth Direct Trigger
%s Car DoNotDisturb
%s VoiceOver Enabled (activationMode = %.4s, speechEvent = %ld (%@), recordRoute = %@)
%s Accessibility Vibration Disabled (activationMode = %.4s, speechEvent = %ld (%@), recordRoute = %@)
%s Playback Route is Hands-Free (activationMode = %.4s, speechEvent = %ld (%@), recordRoute = %@)
%s No Vibration Support (deviceRingerSwitchState = %ld (%@))
%s Others (activationMode = %.4s, speechEvent = %ld (%@), recordRoute = %@)
%s Others (deviceRingerSwitchState = %ld (%@))
%s alertStyle = %ld
%s Voice Feedback -> PresentationModeVoice
%s Voice Feedback -> PresentationModeSilent
%s Voice Feedback -> Control with Ring Switch (deviceRingerSwitchState = %ld (%@))
%s Voice Feedback -> Always On
%s Voice Feedback -> Hands-Free Only
%s Voice Feedback -> Unknown
%s audioSessionActiveDelay = %@
%s serverMediaPlaybackVolumeThreshold = %@
%s serverAudioSessionActiveDelay = %@ (Above Media Playback Volume Threshold)
%s serverAudioSessionActiveDelay = %@ (Default)
%s Overriding mode to %ld. This should only be used for testing.
%s edgeDetectorID = %@
%s state: %llu -> %llu
%s Not sending SAAISearch because aidHelper said not to
%s Scheduling partial result acoustic ID timer
%s Canceling speech request because we have an acoustic identification but no partial results
%s origin = %ld client = %@ requestInfo = %@
%s deviceIdentifier = %@, messageType = %@
%s Set initial info as current %@.
%s mode = %ld
%s endpointerOperationMode = %@, forceUpdate = %d
%s Ignored because endpointer operation mode is unspecified.
%s Ignored because endpointer operation mode can not be changed from %@ to %@.
%s Set Use Automatic Endpointing %d
%s Setting up recording alerts for Dictation.
%s Done setting recording alerts for Dictation.
%s Setting up recording alerts for Siri and other non-Dictation modes.
%s Done setting recording alerts for Siri and other non-Dictation modes.
%s Overriding record starting alert for IFD feature group one.
%s Done overriding record starting alert for IFD feature group one (soundURL = %@).
%s Failed overriding record starting alert for IFD feature group one.
%s Overriding record starting alert from override policy (soundID = %@).
%s Done overriding record starting alert from override policy (soundURL = %@).
%s Failed overriding record starting alert from override policy.
%s Trying to set record buffer duration to %lf
%s Failed setting record buffer duration. Duration is %{public}lf
%s Initalizing speech controller with context %@
%s Set pending info as current %@.
%s Error initializing voice controller with context %@ %{public}@
%s Done initializing voice controller
%s Preparing CSSpeechController with settings %@
%s Error setting up CSSpeechController %{public}@
%s Done preparing CSSpeechController
%s reason = %d, speechEvent = %zd (%@), hostTime = %llu
%s reason = %d, hostTime = %llu
StopRecording
%s Really stopping recording
%s Someone else has already asked to stop recording.%@
%s Sending stop recording immediately because CSSpeechController isn't recording
%s recordingState = %zd, context = %@
%s Playing alert %ld
%s Checked audio logging limits, count = %d -> %d
%s Created _audioFileWriter %@.
%s Did not create _audioFileWriter because audioFileType = %ld.
%s supportsVoiceIdentificationTraining = %d
%s supportsSpeechExtraction = %d
%s canGetPCMStream = %d
%s fileLoggingIsEnabled = %d
%s Created _audioLogggingFileWriter %@.
%s Did not create _audioLogggingFileWriter because fileLoggingIsEnabled = %d, canGetPCMStream = %d.
%s Configure _audioFileWriter, _audioLogggingFileWriter with recordSettings = %@.
%s Ask context %@ to configure and record with recordSettings = %@.
%s %ld
%s Prewarming audio session in speech controller
%s Done prewarm audio session in speech controller
%s Prewarming start alert
%s Failed to prewarm start alert due to %@
%s Done prewarming start alert
%s Preparing instead of preheating since we're not in the default mode
%s Preparing speech capture for %@
%s Using Bluetooth audio analyzer style
%s Using driving audio analyzer style
%s Using voice trigger audio analyzer style
%s Using default audio analyzer style
%s Suppressing start alert
%s No SoundID URL
%s No start recording alert
%s Setting delayed start delay %lf
%s Asking CSSpeechController to startRecording with settings %@
StartRecording
%s Done asking CSSpeechController to startRecording
%s Could not set up recording (prepared = %d, started = %d), returning error %{public}@%{public}@ and resetting voice controller.
%s Updated speech synthesis record from %@ to %@.
%s Fetching audio session ID...
%s Done fetching audio session ID %lu.
%s endpointerOperationMode = %@
%s Fingerprinting mode, force (endpointerOperationMode = %@).
%s Legacy property set (useAutomaticEndpointing = %d), override (endpointerOperationMode = %@)
%s info = %@, reason = %@
%s Dropping previous pending activation info %@ for reason %@.
%s Setting audio context %@ for reason %@.
%s Error setting audio context %@ for reason %@ error %{public}@. (%f seconds)
%s Done setting audio context %@ for reason %@. (%f seconds)
%s Ignored setting audio context because there's no speech controller.
%s Updating to post voice for reason %@.
%s Updating using pending info %@ for reason %@.
%s Attempting to release audio session while CSSpeechController is still recording.
%s releaseAudioSessionBehavior = %s
%s Resetting to default audio context on session end
%s %lf %lf
%s Endpointer setStartWaitTime is set to %{public}f
%s (event = %ld, suppressAlert = %d, hostTime = %llu)
%s (suppressAlert = %d)
%s clientConfiguration = %@
%s Begin updating audio route info. (reason = %@, forcesUpdate = %d)
%s Fetching record device info...
%s Done fetching record device info %@.
%s Fetching playback route...
%s Done fetching playback route %@.
%s End updating audio route info. (reason = %@, forcesUpdate = %d, duration = %f)
%s Creating recording info (speechEvent = %ld (%@), audioAlertStyle = %ld, includeBTInfo = %d, includeRecordDeviceInfo = %d)
%s alertStartTime = %llu
%s Done creating recording info %@.
%s Got a speech start failure after we already got audio buffers?!
AudioStart
%s isTwoShot = %d
%s SPELLING recordSettings codec=%@
%s Sending speech did start to delegate %@
%s Resetting VoiceController on startRecording failure
%s reason = %ld, estimatedSpeechEndHostTime = %llu
%s Synthesizing a didStart callback, on missing didStart
AudioStop
%s reason = %ld, estimatedSpeechEndHostTime = %llu, errorCodeOverride = %ld, underlyingError = %@
%s Ignoring unexpected didStop callback while in state %ld
%s Starting new recording for two shot mode
%s Failed starting recording for two shot mode
%s audioMetrics = %@
%s Could not make Speex decoder: %{public}d
%s SPELLING Could not make Opus decoder: %{public}d
%s SPELLING Only expecting to get 1 Speex packet at a time, not %lu (isOpus %@)
%s SPELLING (isOpus %@) decoder gave us %d bytes bytes but we really only expected %d
%s SPELLING: Could not finish decoding for offline only mode: %d (isOpus %@)
RecordBufferAvailable
%s buffers.count = %llu, durationInSec = %f, bufferStartHostTime = %llu
RecordBufferHandleBegin
%s Dropped %f seconds of audio buffers recorded at %llu (%f seconds) due to audio recording restriction (accumulatedBufferDuration = %f seconds).
RecordBufferHandleEnd
%s firstBufferStartHostTime = %llu, firstBufferReceiptHostTime = %llu
%s Getting audio route instrumentation with recording info %@...
%s Done getting audio route instrumentation %@.
%s LPCM record buffer is empty.
%s reason = %zd, estimatedSpeechEndHostTime = %llu, isRecordingStopped = %d
%s Ignoring unexpected last buffer callback while in state %ld
%s Ignoring unexpected last buffer callback without first buffer.
%s type = %ld, error = %@
%s type = %ld
%s alertPlaybackGroup is nil.
%s numberOfAVVCAlertPlaybacksByType does not have AVVC alert playbacks of type %ld.
%s numberOfAVVCAlertPlaybacksByType is nil.
%s isSiriMode=%d, speechEvent=%ld, wasRequestCancelled=%d, shouldSuppressAlert=%d, isMonitoringMyriadEvents=%d, didMyriadWin=%d
%s Explicitly playing %@ alert
%s BTLE Myriad Not explicitly playing speech stop alert
%s Not explicitly playing alert
%s Language detector is confident:%{private}d of the detected language:'%{private}@' with language code likelihood: %{private}@
%s time = %lf
%s BTLE waiting for Myriad to finish
%s BTLE Myriad loss cancelled two shot feedback
%s BTLE speech controller began waiting for Myriad decision
%s BTLE speech controller end waiting for Myriad decision %lu
%s opType = %tu, reason = %tu
%s Unknown CSRequestOperationType (opType = %tu).
%s reason = %tu
%s Ignoring startpoint from stale CSEndpointAnalyzer
%s time = %lf, endpointerMetrics = %@
Endpoint
%s Ignoring hard endpoint from stale CSEndpointAnalyzer
%s Ignoring hard endpoint because (endpointTime = %f, firstBufferTimestamp = %f, mostRecentTTSEndTimestamp = %f, extendedSuppressDuration = %f).
EndpointHandled
SpeechRecorder
%s Overriding timeout and start point on timeout
%s promptType = %ld, time = %f
%s suppressesTwoShotAlert = %d
%s done
%s Fake two shot TTS prompt timed out (%@).
%s Fake two shot TTS prompt timeout is not handled due to context mismatch (fakeTwoShotPromptUUID = %@, _fakeTwoShotPromptUUID = %@).
%s Fake two shot TTS prompt called back (timestamp = %f, duration = %f, error = %@)
%s Fake two shot TTS prompt callback is not handled due to context mismatch (fakeTwoShotPromptUUID = %@, _fakeTwoShotPromptUUID = %@).
%s No endpoint yet, waiting
%s %lf
%s Eager results accepted: %d. Duration: %lf last duration: %lf
%s Got an enforce message without a current completion. Ignoring
%s timeout = %f
%s Done
%s Watchdog timer timed out.
%s duration %lf
%s Starting audio playback request %@...
%s Failed audio playback request %@ due to error %@.
%s Stopped audio playback request %@.
%s scores = %{private}@
%s userInfo = %@
%s Failed to register for ringer switch state change
%s Nil instrumentation class provided
%s Unsupported instrumentation class provided %@
%s Reporting missing DeviceFixedContext > siriDeviceID to ABC
%s assistantIdentifier: %{private}@
%s %p (sessionUUID = %@)
%s %p (startSpeechId = %@)
%s %p (selectedResultCandidateId = %@)
%s %p (allows = %d, resultCandidateId = %@)
%s route = %@, deviceIdentifier = %@, deviceUID = %@
%s %p (recordedAudioFileURL = %@)
%s %p (audioRecordContext = %@)
%s %p (audioRecordDeviceInfo = %@)
%s %p (voiceTriggerInfo = %@)
%s %p (recordingInfo = %@)
%s %p (error = %@)
%s %p (_recordedAudioFileURL = %@)
%s %p (_audioFileWriter = %@)
%s %p (recordingSettings = %@)
%s recordingSettings was nil
%s No alert behavior in recordingSettings
%s No alert style specified for record starting
%s %p No recorded audio.
%s %p Access to payload audio at %@ is %@, setting payload recording flag for CoreSpeech.
%s %p Donating recorded audio at %@...
%s %p Failed to donate recorded audio at %@ for  VoiceID training (error = %@).
%s %p Donated recorded audio at %@ for  Voice VoiceID training.
%s %p Removing recorded audio at %@...
%s %p Removed recorded audio at %@.
%s %p Failed to remove recorded audio at %@ (error = %@).
%s has %ld settings, but can only handle one. Dropping all but the first on the floor.
%s has %ld setting changes, but can only handle one. Dropping all but the first on the floor.
%s metrics = %@
%s offlineIdentifier = %@
%s Setting refId to %@ from session request %@
%s reply = %@, command = %@
%s replyCode = %ld
%s callbackForReply = %@
%s Adding flowCommand %@
%s missingReferences %@
%s callbackCommands = %@
%s Received -logConnectionOpenWithConnectionType: with no corresponding -logConnectionStart. Unable to determine how long it took to open the connection.
%s Received -logVoiceRecordingEnd with no corresponding -logVoiceRecordingStart. Unable to determine how long voice recording lasted.
%s Received -logVoiceSendEnd with no corresponding -logVoiceSendStart. Unable to determine how long voice transfer lasted.
%s Received -logSpeechRecognized with no corresponding -logVoiceRecordingEnd. Unable to determine duration since voice recording completed.
%s Received -logSpeechRecognized with no corresponding -logVoiceSendEnd. Unable to determine duration since voice send completed.
%s Unable to submit AWD metric 0x%lx
%s Hot-ship metric 0x%lx does not respond to -setTimestamp:. Will not set timestamp.
%s Invalid notification. applicationID %@, bulletinID %@
%s Not logging event %@ because it has no associated time. Context: %@
%s Attempted to log nil instrumentation event.
%s Not logging instrumentation event %@ because it has no associated time. Turn context: %@
%s Not logging instrumentation type %@ because it is of an unknown type. Context: %@
%s Failed to serialize proto %@ to binary.
%s Failed to serialize proto wrapper %@ to binary.
%s Completed boosting event producer queue %@
%s Failed to serialize context %@ to JSON due to exception %@.
%s Failed to serialize context %@ to JSON due to error %@.
%s An exception has been raised during the execution of the context provider block for logging event (name = %@, timestamp = %f): %@
%s Unable to fulfill reading request for %@
%s Failed to serialize notification %@: %@
%s Sending xpc message for %@
%s Unable to send xpc message for %@
%s All applications supported. This should only be used for testing.
%s Application does not support required Intents: %@
%s No announceable intents for bundle id: %@
%s Always eligible. This should only be used for testing.
%s Not supported on device
%s Eligble Bluetooth Device Paired: %d, Local Voice Asset Avaiable: %d
%s Always has eligible. This should only be used for testing.
%s Eligible setup state changed, notifying observers
%s Timed out fetching eligible setup status
%s Request can always be handled. This should only be used for testing.
%s audio route: %d
%s In wireless splitter session: %ld, guest connection state: %llu
%s Forcing all user notification request to be handled. This should only be used for testing.
%s Timed out waiting for updates
%s In wireless splitter session: %ld
%s wireless connection state: %llu
%s wireless splitter session state: %ld, error: %@
%s Notifying observers, request can be handled? %d
%s wireless splitter session state changed from %llu to %llu
%s wireless guest connection state changed from %llu to %llu
%s re-fetching eligibility
%s Force updating client, the device is eligible
%s re-fetching eligibility after assistantd is ready
%s previous eligibility: %d, now updating to %d
%s Failed to init device authentication session.
%s Ignoring request to prepare
%s Error during handshakeRequestWithCertificateData: %{public}d
%s Attempted to init with nil sessionInfo
%s completeWithHandshakeResponse failed with %@
%s Error signing data: %@
%s Don't know how to make a request for this info %@ %@
%s Don't know how to make a local request for this info %@ %@
%s Don't know how to set push off request payload
%s Using debug voiceID scores
%s Constructing voiceID scores
%s All provided scores are 0, defaulting to unknown user
%s Handling command (%@) for domain (%@)
%s %@, error: %@
%s anchorsToSync: %@
%s Forcing a reset on key %@
%s Ignoring sync chunk for service %@ that's not our current service %@
%s Ignoring sync chunk for ID %@ that's not our current ID %@
%s Sync manager couldn't find connection for anchor key %{public}@. Moving on.
%s Preparing sync with ID %@ for reasons: %@
%s Anchors in queue: %@ for reasons: %@
%s Sync Manager isn't waiting on a continue, ignoring request
%s Continuing sync
%s Canceling sync for anchor %@
%s Ignoring sync cancel for anchor %@. Current anchor is %@
%s In progress verification has been reset
%s In progress sync has been reset
%s Too many plugins have timed out for sync, reset and try later
%s Shouldn't reach this method
%s Unsupported language code %@, but sending SAD anyway
%s generated setAssistantData anchor %@ (previous anchor %@)
%s Assistant Data matches, not sending %@
%s Got updated assistant data for session %d!
%s Sending pending commands after SAD update
%s Session is active, clearing limbo now.
%s Still waiting on SAD, postponing clearing limbo.
%s Not waiting on SAD, clearing limbo now.
%s Sending pending dormant commands now that the session is no longer dormant for session %d
%s Setting dormant state for session %d to %@
%s Pending command because session is dormant for %d
%s Waking up dormant session because inopportunistic command needs to be sent.
%s Dictation Sampling: Done decrementing total number of dictation requests by 1, for the current sampling date.
%s Dictation Sampling: Error while reading plist at location %@ - %@
%s Dictation Sampling: Error while creating directory - %@
%s Dictation Sampling: Error while creating plist file. The dictationSampledPlistPath - %@ - is returned as Directory. Should not happen.
%s Dictation Sampling: Error while writing _dictationSamplingVaribles to plist - %@
%s Got alarm response %@ for request %@
%s Unable to fetch alarms with identifiers %@: %{public}@
%s Searching for alarm %@ in order to do an update
%s Asking to delete alarms with identifiers %@
%s Asking to dismiss alarms with identifiers %@
%s Failed constructing URL identifier for %@
%s Clearing sync data of type %@ because assistant is disabled
%s Unable to find offline metrics plist path at path %@.
%s Unable to read offline metrics plist file at path %@.
%s Unable to initialize offline metrics plist from file at path %@ due to error %@
%s Unexpected type of initialized offline metrics plist %@.
%s Unable to create SAMetrics object from offline metrics plist %@.
%s Unable to create directory at path %@ due to error %@.
%s Unable to remove file at path %@ due to error %@.
%s Offline metrics plist file already exists at path %@.
%s Unable to serialize offline metrics plist %@ due to error %@.
%s Unable to write to offline metrics plist %@ to path %@ due to error %@.
%s Unable to exclude offline metrics plist file at path %@ from backup due to error %@.
%s offlineIdentifiers += %@
%s Unable to remove metrics plist file at path %@ due to error %@.
%s offlineIdentifiers -= %@
%s Unable to remove directory at path %@ due to error %@.
%s offlineIdentifiers = %@
%s Updating sharing opt-in status: %{private}ld
%s Resetting sessions due to hostname change
%s %@ is requesting shared data
%s companion identifier is already set in account
%s resetting peer account...
%s using cached data for companion identifier
%s unable to sync because we cannot find the companion device among our peers
%s unable to sync because there is no configured companion device
%s Updating peer assistant id: %@
%s Updating peer speech id: %@
%s Updating peer user agent string: "%@"
%s Updating peer language code: %@
%s Setting new language code from cloud data
%s Not setting language code due to previous mismatch
%s current restricted: %@ new restricted: %@
%s Updating temperature unit to: %@
%s Resetting sessions due to account settings change
%s peers: %@
%s unable to sync data from empty peer set
%s unique device id for peer: %@
%s requesting preheat because assistantId is not configured
%s Dictation Sampling: Audio metadata dict is nil for %@ - %@
%s Dictation Sampling: dealloc - done with %p
%s Dictation Sampling: Stopping adding audio samples after adding %ld bytes since _shouldStopAddingSamples was set
%s Dictation Sampling: Sending audio data of size: %ld, chunkSize: %ld, maxChunkSize: %ld
%s Dictation Sampling: Error while reading file - %@
%s Dictation Sampling: Done reading audio file and adding audio samples.
%s Dictation Sampling: Failed reading audio file and adding audio samples.
%s Dictation Sampling: Error while sending audio to server %@ - %@ - %@
%s Dictation Sampling: Done with sending audio to server. Deleting %@
%s Dictation Sampling: adSpeechRecordingDidFail for folder - %@ - %@
%s Dictation Sampling: Error while reading metadata plist at location %@ - %@
%s Dictation Sampling: Number of audioDataFoldersToBeSentToServer: %ld
%s Dictation Sampling: Done with sending audio data to server.
%s Assistant Service Connection Interrupted
%s Assistant Service Connection Invalidated
%s Time out disabled for plugin %@
%s Using timeout of %{public}@ seconds for %{public}@
%s Plugin timed out for message %{public}@
%s message timed out, ignoring provider service error %{public}@
%s Plugin failed for message %{public}@: %{public}@
%s message timed out, ignoring plugin reply %@
%s Bad plugin response %@
%s Plugin timed out for sync with info %@
%s Plugin already timed out for sync
%s %@ Sync failed for info %@: %@
%s %@ failed to fetch sync snapshot for info %@: %@
%s Stopping timer %@ now...
%s Timer %@ was already stopped %lu times, add one more time.
%s Resetting timer %@ now...
%s Timer %@ was still stopped %lu times.
%s Ignoring sync chunks as we have no chunk handler. (pre=%@, post=%@, validity=%@, updates=%@, deletes=%@)
%s voiceIdentification is %d
%s Reading stored MeCard: (%@)
%s No stored MeCard found
%s Saved MeCard:%@
%s Returning MeCard:%@
%s %@ handling %@
%s No transformed requests returned from request transformer %@ for command %@
%s Got response %@ (error=%@) for command: %@, handled by service: %@
%s Request delegate unable to handle command. Allowing fallback handler a chance
%s No request delegate to handle command
%s This command is not supposed to be handled by assistantd
%s Handled command %@ with response %@ and error %@.
%s Error activating audio session: %@
%s Unsupported notificationType: %@
%s Enqueued playback %@
%s Starting playback %@
%s Started playback %@
%s Calling completion 1.3 second after playback started: %@
%s Failed playback %@: %@
%s Finished playback %@
%s sync now xpc activity handled
%s sync now xpc activity registered
%s Failed setting activity state to continue
%s Failed setting activity state to done
%s Deferring activity:%@ deferred:%@
%s Running '%s' activity
%s %s activity error: %@
%s Registering %s activity
%s setting new daily criteria due to difference from checkin criteria
%s setting new peer fetch interval on initial checkin
%s Backing off to new interval %lld from %lld
%s setting new companion fetch interval on initial checkin
%s Assistant is now enabled, clearing destroy job
%s Running 'com.apple.siri.xpc_activity.metrics-sender' activity
%s ClientScripter boot maintenance succeeded.
%s ClientScripter boot maintenance failed.
%s ClientScripter boot maintenance skipping due to assistant not enabled.
%s service %@ at index %d of count %d
%s service %@ at index %d of count %d complete
%s Service %@ still has safety block, timing out
%s No metrics to send.
%s Attempted to send metrics when system is busy.
%s Attempted to send metrics when Assistant and Dictation are disabled.
%s Attempted to send metrics when session is inactive and active session is a requirement.
%s Sending metrics (%@:%@)...
%s Sending metrics (%@)...
%s Sent metrics (%@:%@).
%s Sent metrics (%@).
%s Failed to send metrics (%@:%@).
%s Failed to send metrics (%@).
%s NO (!assistantIsEnabled && !dictationIsEnabled)
%s NO (callIsLikely == YES)
%s NO (isInCall == YES)
%s NO (hasCurrentRequest == YES)
%s NO (hasActiveClients == YES)
%s NO (isRequestDelaying == YES)
%s YES
%s Local eager candidate log context: %@
%s Trying to commit nil interaction metrics!
%s limit = %f, requiresUnlimitedPower = %d, requiresActiveSession = %d
%s Skipped sending metrics to server because it is already sending.
%s Skipped sending metrics to server because the session is not active.
%s Failed to purge deleted analytics events with timestamp before [%@] due to error %@.
%s Failed to checkpoint analytics store due to error %@.
%s Done sending metrics to server.
%s Begin sending offline metrics...
%s End sending offline metrics.
%s Begin sending analytics event streams...
%s End sending analytics event streams.
%s Skipped sending analytics event streams to server because time limit is reached.
%s Skipped sending offline metrics to server because time limit is reached.
%s Attempted to send offline metrics when time limit is reached.
%s Attempted to send offline metrics when system is busy.
%s Attempted to send offline metrics when Assistant and Dictation are disabled.
%s Attempted to send offline metrics when the device is on battery.
%s Fetching next offline metrics...
%s Fetched next offline metrics. (offlineIdentifier = %@, metrics = %@)
%s No next offline metrics was fetched.
%s Remaining batch runs: %lu
%s Attempted to send analytics event stream when time limit is reached.
%s Attempted to send analytics event stream when system is busy.
%s Attempted to send analytics event stream when Assistant and Dictation are disabled.
%s Attempted to send analytics event stream when the device is on battery.
%s Fetching analytics event stream UIDs...
%s Failed to fetch analytics event stream UIDs due to error %@
%s No analytics event stream UIDs was fetched.
%s Fetched %tu analytics event stream UIDs %@
%s Using prioritized event stream UID %@
%s Using current event stream UID %@
%s Converting %tu analytics events to Events metrics...
%s Converted %tu analytics events to Events metrics %@
%s Ceasing to process events from delivery stream %tu.
%s Converting %tu analytics events to SendInstrumentation...
%s Converted %tu analytics events to SendInstrumentation metrics %@
%s SendInstrumentation command %@ failed due to error: %@
%s SendInstrumentation command %@ failed due to response: %@
%s Converting %tu analytics events to SendInstrumentation(Generic)...
%s Converted %tu analytics events to SendInstrumentation(Generic) %@
%s SendInstrumentation(Generic) command %@ failed due to error: %@
%s SendInstrumentation(Generic) command %@ failed due to response: %@
%s Ceasing to process events from all delivery streams.
%s Fetching 128 events from event stream with UID %@ after timestamp %llu in delivery stream %tu
%s Failed to fetch analytics events in delivery stream %tu due to error %@
%s No analytics events was fetched from event stream with UID %@ in delivery stream %tu.
%s Fetched %tu analytics events from event stream with UID %@ in delivery stream %tu and timestamp in range [%llu, %llu].
%s Failed to delete %tu sent analytics events from event stream with UID %@ in delivery stream %tu and timestamp in range [%llu, %llu] due to error %@.
%s DailyDeviceStatus published
%s eventInfo %@ 
%s Assistant and Dictation are disabled. Dropping DailyDeviceStatus.
%s Sending engagement feedback "%@" for aceId %@
%s Fetching Apple Music subscription status for the active account
%s Apple Music subscription status for the active account is %@
%s Error fetching AppleMusic subscription status for the active account: %{public}@
%s heartbeat wrapper: %{private}@
%s Reporting missing DailyDeviceStatus > siriDeviceID to ABC
%s Fetching enrolledUsers info: %{private}@
%s No enrolledUsers in sharedService
%s Fetching ICUserIdentity for sharedUser: %{private}@
%s Fetching Apple Music subscription status for ICUserIdentity: %{private}@
%s Error fetching AppleMusic subscription status: %{public}@
%s No userIdentity for sharedUser: %{private}@
%s no DSID for home ID : %{private}@
%s Error ic_storeAccountForHomeUserIdentifier %{public}@
%s output voice changed from %@ to %@
%s no need to change output voice to %@ because it is already set to %@
%s Not updating auto-downloaded voice assets because the platform doesn't support TTS
%s unknown response %@
%s _currentSpeakable: %@
%s Forcing all speakables to be spoken
%s Timeout: could not execute opportune speaking models in time (%f sec)
%s _currentSpeakable is nil while executing opportune speaking models, this is likely cause by timeout (length: %f sec)
%s Already loading models
%s loading model with type: %@
%s Loaded model on remote: %@
%s Loaded model into assistantd: %@
%s Unsupported model type: %@
%s Connection to Opportune Speaking Model Service interrupted
%s Connection to Opportune Speaking Model Service invalidated
%s Failed to communicate with Opportune Speaking Model Service: %@
%s model with identifier %@ returned score: %f speakable: %@
%s No service connection for command %@ identifier %@
%s Can't route to system service for command %@ identifier %@
%s Found service %@ for command %@ in domain %@
%s Service does NOT use AMOS for command
%s Services uses AMOS, but wants to intercept command
%s Service uses AMOS for command
%s Couldn't send SADOCommand %@ to service %{public}@
%s Unexpected response from service. Expecting %{public}@, got %{public}@ error: %{public}@
%s Retrieve looking in amos for key %@
%s Retrieve going to bundle for remaining identifiers %@
%s Unexpected count of retrieved objects: %@
%s Successfully retrieved object from service %@
%s Updated retrieved object to %@
%s Failed to retrieve object from service. status: %{public}d
%s Updating store object %@
%s Going to bundle for object update
%s Removing object with identifier %@ old identifier %@ from amos
%s Object not found in AMOS %@
%s Committing %@ with oldId %@
%s Keeping committed object around %@
%s We don't know how to generically punch out to domain objects. A non-ui plugin needs to handle this.
%s Unsuccessfully tried to handle non AMOS command as AMOS %@
%s Handling "%s" notification
%s Failed to listen to ProfileListModification change
%s Language changed to %@
%s Setting up MultiUser listener
%s %@ MultiUser Connection does not have required entitlements.
%s %@ MultiUser Connection Connected (pid=%d])
%s MultiUser Connection Invalidated (pid=%d)
%s MultiUser Connection Interrupted (pid=%d)
%s SharedUserId of primary user changed. Resetting primary user.
%s Error when removing user (%@)
%s New user participating in multi-user
%s Triggering download
%s Download completed, success: %@
%s Removed (%@) with error (%@)
%s Counts are same, but users are different. Falling down to best effort
%s Added %@
%s There was an error %@ adding %@
%s Configured LiveOn Users.
%s primaryUser key (%@), value (%{private}@)
%s NO shared users
%s Configured Cloud Synced Users.
%s Skipping _forceCloudSyncedUserDownload
%s Current language %@ not supported for multi-user
%s Tracking voice profile in-flight for %{private}@. Total profiles in-flight: %lu
%s Untracking voice profile in-flight for %{private}@. Total profiles in-flight: %lu
%s Untracking all UUIDs for in-flight voice profiles. Total profiles in-flight was: %lu
%s Voice Profiles Did Update: %d
%s PrimaryUser %{private}@ has nil aceHost
%s HomeUserID (%{private}@) voice profile is available but it's still being tracked as in-flight. Stop tracking it
%s %{private}@/%{private}@
%s SharedUser %{private}@ has nil aceHost
%s removed HomeUserID (%{private}@) voice profile is available but it's still being tracked as in-flight. Stop tracking it
%s No pitches available for HomeMembers
%s Send empty MultiUserInfo
%s MultiUserInfo profiles are in-flight: %@
%s voiceIDAllowed: (%@) personalDomainsIsEnabled: (%@) unauthenticatedRequestsAllowed: (%@) for (%{private}@)
%s Missing setting for (%@) checking with HomeKit as they sometimes miss notifying us.
%s VoiceID disallowed for (%@) checking with HomeKit as they sometimes miss notifying us.
%s Missing all settings for (%@)
%s Missing setting even on fresh retrieval (%@)
%s VoiceID disallowed on fresh retrieval for (%@)
%s Active voice profile limit reached
%s Resetting sharedUserID on existing primary user since home User ID matches
%s #multi-user Logging userAddedWithSharedUserID:(%@) for primary User 
%s Secondary user exists for (%@), rewriting (%@)
%s Secondary user not added for (%@) due to conflicts
%s Secondary user added for (%@)
%s #multi-user Logging userAddedWithSharedUserID:(%@) for secondary User 
%s no shareOwnerNames
%s Adding (%@) for removal
%s Deleting shared user with home User ID (%{private}@) shared User ID (%{private}@)
%s Trying to delete the primary user with home User ID (%{private}@) shared User ID (%{private}@)
%s Multi user not found for home User ID (%{private}@) shared User ID (%{private}@)
%s Remove user with home user id %{private}@
%s Remove user with shared user id %{private}@
%s Empty Score array from idsIdentifier %{private}@
%s (%@)
%s (%{private}@)
%s Starting a download.
%s download status is (%d)
%s Voice Recognition enabled users count: %ld, multi-user members count: %ld
%s Unable to gather multi-user metrics. Unable to determine home users and their voice settings
%s VoiceID disabled for existing user and we did not get a homeinfo change notification
%s We should have a user setting. File a bug.
%s Primary user present
%s Primary user not present or home userId not found
%s Primary user not present or sharedUserId not found
%s User found
%s User not found
%s Second user match found
%s Primary user not present or home user not found
%s Fatal error: ADCoreBluetoothManager is designed for one-time use!
%s Unable to read RSSI for peripheral %@ before timeout
%s Invalid CBCentral manager state: %ld
%s Ignoring update from irrelevant CB manager: %@, current manager is %@
%s %@ already invalidated
%s %@ connected, now reading RSSI
%s %@: %@
%s Error reading RSSI for %@: %@
%s Read RSSI for peripheral that we didn't sign up for: %@
%s Stopwatch handler asked to handle request %@, but didn't know how
%s classifiedUser = %@
%s userIdentityClassification = %@
%s Sorted IDs: %@
%s sharedIDs dict: %@
%s Alarm handler asked to handle request %@, but didn't know how
%s Stopping all outstanding playback requests
%s Reuse existing session %@ from reusable session pool.
%s Create new session %@.
%s session = %@
%s session = %@, error = %@
%s Add successfully finalized session %@ to reusable session pool.
%s Evict %tu sessions from reusable session pool because %@.
%s Reusable session pool is already empty.
%s Waking system for app punchout
%s %p
%s Unable to get home announcement snapshot until a snapshot updater is registered.
%s %p snapshot = %@
%s lastPlayedAnnouncement %@ is valid with %f seconds until expiration.
%s Ignored expiration timer based reevaluation because snapshot was changed. (current = %@, expected = %@)
%s lastPlayedAnnouncement %@ is invalid.
%s %p %@ -> %@
%s announcement = %@, expirationDuration = %f
%s announcement is nil
%s announcement identifier is nil
%s timeIntervalSinceAnnouncementFinishedDate = %f
%s announcement finishedDate is nil
%s timeIntervalSinceAnnouncementStartedDate = %f
%s timeIntervalUntilExpiration = %f
%s announcement startedDate is nil
%s %d
%s stereo partner changed to: %@
%s lastWin changed to: %@
%s Received message with unhandled method type: %ld
%s Received message from device not in stereo pair: %@
%s Received message with unknown method name: %@
%s Received malformed lastWin data
%s Unexpected response %@
%s Retrying %lu naked commands %@
%s Redirecting %@ to %@
%s peer type %@ peer version %@
%s Adding metrics
%s Starting connection.
%s Hostname invalid in configuration
%s Account is being destroyed use default connection policy and clear our dns settings.
%s Connection policy expired at %@; ignoring it
%s Connection policy hostname %@ does not match account hostname %@; ignoring policy
%s Connection policy blacklisting timed out
%s Not using connection policy
%s Connection policy in use
%s Connection policy not in use
%s No custom connection policy; using default
%s Connection policy has no expiration date; ignoring it
%s Connection policy has no hostname; ignoring it
%s No cached validation data beginning eager auth
%s connectionType=%@
%s Received object %@
%s Ignoring connection close since we have an incoming retry
%s Connection closed %@
%s Connection closed with active request, treating as error
%s %{public}@ %{public}@
%s Not using a predefined server.
%s Server Unreachable
%s Error suggests bad connection policy; reverting to factory policy.
%s Got redirect %@ for %@
%s Ignoring redirect %{public}@ for %{public}@
%s Setting failure count of %d
%s Changing requestId from %@ to %@ 
%s Retrying %lu objects on session failure
%s Resetting retry manager
%s Not retrying shouldRetry %d retryableError %d
%s Resetting cached certificate data due to cached version not matching current version.
%s Resetting cached validation data due to cached version not matching current version.
%s Session data has expired %@
%s Validity is valid for %d seconds %@
%s Failed to persist validation data
%s %@ can't be remapped. Skipping
%s Remapping retry manager from %@ to %@
%s creating rollback request
%s Retrying after %lf seconds, now %lf error %@
%s Backing off for %lf seconds
%s Server connection is no longer current. ignoring backoff
%s Retrying after backoff
%s State has changed, not proceeding with retry.
%s Assistant needs destruction, sending destroy
%s Exceeded bad cached cert retry attempts, failing authentication
%s Exceeded NAC cert retry attempts, failing authentication
%s Authenticator is unable to prepare.
%s Sending request for certificate data
%s Have cached certificate data, preparing
%s Authenticator is still preparing, let's wait
%s Authenticator is prepared, but we still need session info
%s Authenticator is ready
%s Setting cached authentication data with duration %lf
%s We have no pending commands holding
%s Not continuing with authentication as session is already active
%s Session has already authenticated. Resetting authenticator to do it again.
%s Holding off on session start because we're dormant
%s Starting Session
%s Skipping authentication. Disabled or on simulator
%s Using cached validation data
%s Connection opened
%s Connection not opened yet, waiting
%s We've already authenticated, reset the authenticator since it's not needed anymore.
%s Unexpected refid in validation failed, ignoring
%s SASessionValidationFailed %{public}@
%s No certificate data in response trying anyway %@
%s Old session info response ignored
%s No valid sessionInfo returned
%s Saving new validity info since we're not currently authenticating
%s Assistant created response ignored
%s Assistant Loaded Version: %@
%s Assistant Loaded refId does not match our saved assistant command
%s Waiting on a pending destruction, doing nothing
%s Assistant Destroyed
%s Restarting connection because destroy came in during active request
%s Couldn't find the requested assistant %@; creating a new one
%s Assistant not ready.
%s local ACEHost:%@ setConnectionHeader ACEHost:%@
%s Failed loading/creating assistant %@ elapsed time %lf
%s Retrying after assistant failure
%s Assistant failure (%{public}@). Limit reached, returning error
%s Ignoring command failed for limbo id %@
%s Error sending command %@ %{public}@
%s Reporting missing LoadAssistant locale to ABC
%s assistantId: %@ speechId: %@ with language %@
%s assistant id mismatch
peerAssistantID:%@
primary multiuser assistantID:%@
%s assistantd id: %@ user agent: %@ language: %@ siri enabled: %d
%s personal requests are disabled, but the companion's assistantId is unknown
%s companion identifier: %@
%s companion has siri enabled: %d
%s companion is unreachable
%s Adding shared device for (%@)
%s WiFi became available and we're not on a request restarting connection
%s We're in a request, we'll check for a wifi transition afterward
%s Clearing flag to switch to WiFi on request end
%s Asking delegate if we should restart on wifi
%s Switching to WiFi on request end
%s assistantId: %@ loggingAssistantId: %@ speechId: %@
%s Probing the connection
%s Using precached metrics
%s firedTimerID = %@
%s dismissedTimerID = %@
%s fromSnapshot = %@
%s toSnapshot = %@
%s Loading local timer generation...
%s Loaded local timer generation %llu.
%s generation = %llu, limit = %llu
%s Delta pulling mode is not supported for type %@.
%s Fetching local timer snapshot...
%s Converted to device sync snapshot %@.
%s %{public}s
%s Ignoring unexpected event
%s Client missing entitlement %@
%s Tether attached %p
%s Message!
%s Clearing tether %p
%s Couldn't decode Speex / Opus buffers for speech log at URL %{public}@
%s Simulating immediate speech capture
%s Simulating buffered speech capture, speech packets sent every %f seconds
%s Malformed info plist value for key %{public}@ in bundle %{public}@
%s Deferring context clearing until we have a valid connection for %@
%s connection reset requested...
%s connection reset
%s Failed to create the sync flag for %@ at %@
%s deviceIdentifier = %@
%s deviceIdentifier = %@, fromGeneration = %llu, toGeneration = %llu
%s Loading synced timer generation for device %@...
%s Loaded synced timer generation %llu for device %@.
%s deviceIdentifier = %@, incrementalChanges = %@
%s Applying incremental changes is not supported for type %@.
%s deviceIdentifier = %@, snapshot = %@
%s Loading synced timer storage for device %@...
%s Loaded synced timer storage %@ for device %@.
%s Dumped device sync snapshot %@ from device %@ to synced timer storage %@.
%s Show next event handler asked to handle request %@, but didn't know how
%s Creating SiriKit Native announce message request
%s Creating client flow announce message request
%s Creating Announce in Home request
%s Unspecified announcement type unable to start a request.
%s Skipping triggerless reply, so don't show UI. This should only be used for testing
%s Ignoring App notification for placeholders
%s Ignoring App notification for forced update
%s Ignoring CK notification because there's no correction profile change
%s User hasn't used Siri or dictation in the past %tu days, not syncing for %@
%s Rejecting remote command because Siri is disabled
%s peer = %@, command = %@, remoteExecutionInfo = %@
%s response = %@
%s Executing command on device for assistant id: %@
%s preferred routing options: %@, allows relay: %d
%s Malformed command dictionary: %@
%s Response came back from the companion: %@
%s No eligible devices from primary user found for specified device types. Skipping.
%s Executing command on primary user device with identifier: %@
%s Executing command on shared user companion device with sharedUserID: %@
%s No reachable multiuser device
%s Unable to find remote device for execution
%s Error: %@
%s Unable to find command for remote execution
%s shouldSendToPrimaryUser: %@ (isSharedUserNil=%@, isServerSelectedUserEqualToPrimaryUser=%@, isServerSelectedSharedUserInvalid=%@)
%s Routing to multiuser device (%{private}@)
%s Unable to use boot session UUID as stream UID, falling back to in memory UUID instead.
%s streamUID = %@
%s Skipping check due to storage lock.
%s Error counting queued event records in analytics db: %@
%s Triggering ABC for upload failure since %@, recordCount: %lu, senderDisabled: %d
%s Boosting events on connection: %@ pid: %d
%s Finished boosting all analytics connections
%s Failed to save %tu events to the analytics store due to error %@.
%s Connection disrupted for pid: %d, aborting boost request.
%s Timed out after %f seconds waiting for pid: %d
%s Attempted to suspend events staging while already suspended.
%s Attempted to resume events staging while not suspended.
%s Haven't ended previous fuzzing interval, unable to begin new one
%s Fuzzing time interval created with start time: %lld streamUID: %@
%s Haven't start a fuzzing interval, unable to end
%s Fuzzing time interval ended with end time: %lld streamUID: %@
%s Finished flushing, removing time interval
%s Created link at %@.
%s Failed to create link at %@ due to error %@.
%s Failed to create directory at %@ due to error %@.
%s Deleted link at %@.
%s Failed to delete link at %@ due to error %@.
%s No identifier specified for %@
%s Failed to post notification %@ with error %@
%s No layout elements
%s Failed to snooze notification %@ with error %@
%s Failed to connect to notification service client: %@
%s No response handler for %@
%s Got context for pid %d
%s %s push context for %s %d
%s Push context time out for pid %@
%s ACE domain signal request handler asked to handle request %@, but didn't know how
%s Initial fetch took too long, timing out.
%s Manually requesting assistant data update
%s Using local store
%s Found %@ meCard locally
%s Returning %lu meCards
%s Waiting for initial meCard fetch to complete
%s meCard fetch complete, got %lu meCards
%s No actual change, ignoring me card change notification
%s Updating assistant data for me card change notification
%s Unable to get the shared instance of ACAccountStore.
%s Current store front has changed to %{private}@; updating assistant data
%s Not generating assistant data because we don't have some necessary cached data
%s SADanchor:%@
unredacted:%@
%s Siri server logging setting changed from %d -> %d
%s Siri server logging enabled: %d
%s Updating country configuration for assistant data
%s Cached voice for assistant data updated from %@ to %@.
%s Cached voice for assistant data is still %@.
%s Retrieving best available voice asset for voice info %@...
%s Retrieved best available voice asset %@ for voice info %@.
%s InProgress Output Voice download complete
%s InProgress Output Voice changed during downloaded
%s InProgress Output Voice download already completed
%s Using local identifier
%s Unable to get the local iTunes Account.
%s No store front identifier available
%s VoiceOver status changed, updating assistant data
%s Attempted to deliver event for unsupported delivery stream: %lu
%s Delivering event from delivery stream: %lu
%s Delivering event of type: %d
%s Unable to map event type %d to known instrumentation event class.
%s _networkURL is set to nil
%s Already establishing peer streams!
%s Ignoring completion from stale provider
%s Error: %{public}@
%s Peer Provider open complete
%s Bad Peer Header
%s Read Peer Header %@ %d
%s Already %@ peer streams
%s Already %@ network connection
%s %@ %@ %d %d
%s Falling back
%s Using fallback path, but creating new safety net
%s Will open stream with initial payload length %lu
%s opening %lu
%s open complete %ld
%s sequence number %ld doesn't match current %ld. Ignoring
%s Provider doesn't match our current provider. Ignoring
%s We no longer care about the streams we opened here
%s Stream opened with initial payload length %lu, networkOutputBuffer length %lu
%s NetworkOutputBuffer has been reset; initial payload set on this pair of streams is no longer valid
%s Waiting for peer header before restarting peer streams
%s Stale network timer firing
%s Closing potentially stale network streams
%s Network Provider
%s Peer Provider
%s Unexpected %@
%s read %lu bytes
%s error: %@
%s read peer header %@ pop %d reconnect %d
%s HTTP Header is complete
%s HTTP Header is not complete
%s Establishing network connection
%s Waiting for network connection
%s Wrote: %lu
%s no data or error, possibly an already canceled connection
%s zero length data
%s read: %lu
%s No OTT-model representation for %@
%s No OTT-request representation for %@
%s fetchedAudioState = %@
%s audioSessionID = %lu
%s fromAudioState = %@, toAudioState = %@
%s Sync Verification: domain objects in toRemove list for sync verification
%s with chunk info %@
%s Sync verification got domain object with no identifier %@
%s no bundleID!
%s got %@ items for %@ from %@
%s Vocabulary updates are disabled for %@, acting as-if there are no changes.
%s %{public}@ is not allowed to sync user vocabulary of type %{public}@
%s Posting sync notification for reason: %@
%s Ignoring attempt by %{public}@ to update %{public}@
%s Removed all local user-vocabulary for %{public}@
%s User-vocabulary updates are throttled for %{public}@ not pushing delete
%s Ignoring attempt by %{public}@ to request Siri authorization while not in the foreground
%s vibration state fetched from CFPreferences is NULL, using On as default value
%s Interrupting outstanding request for new request
%s AceId of RestartRequest is %@ requestId is %@
%s object is %@ %@
%s Can restart request if %@
%s Retrying full request
%s latestMappedRequestId is not set for %@
%s reason = %@
%s Starting activity updates
%s motionActivity updated = %@
%s Stopping activity updates
%s motionActivity = %@
%s motionConfidence = %@
%s isDriving = %@
%s Long lived client connection (%lf seconds) triggered
%s %p options = %@
%s No location information in request options %@
%s %p bluetoothDevice = %@
%s %p Received reply %@ for command %@.
%s %p Sending command %@...
%s %p Failure sending ace command to client %{public}@
%s %p Invoking request completion with UUID %@...
%s %p Invoked request completion with UUID %@.
%s %p Ignored invoking request completion because UUID mismatched. (_requestUUID = %@, requestUUID = %@)
%s %p success = %d, error = %@
%s %p commandGroup exists, waiting until commandGroup is done...
%s %p commandGroup is done, handling request completed with UUID %@...
%s %p commandGroup does not exist, handling request completed with UUID %@...
%s Sending intermediate error %{public}@
%s failed with Error %{public}@
%s failed registering for ringer state token %{public}u
%s ADShouldSpeak: %d Request Wants TTS: %d Server Wants TTS: %d Stark Mode: %d Car DND: %d Request Info Options: %lu Combined: %d
%s Sending should speak update: %@ to current client %@
%s Entered request group %@.
%s Left request group %@ (signal = %ld).
%s Sending recording failed %{public}@
%s %p Sending speech recognized %@...
%s %p Sending speech partial result %@...
%s Sending speech recognition failed %{public}@
%s %p bluetoothDevice = %@, from = %@, to = %@
%s %@ primary earbud becomes out of ear.
%s %@ secondary earbud becomes out of ear.
%s Asking activation service to deactivate...
%s %@ is not the current client.
%s %p bluetoothDevice = %@, from = %ld, to = %ld
%s %p numberOfPresentedUIs (%ld -> %ld)
%s %p configuration = %@
%s %p Invoking overlapping request completion with UUID %@...
%s %p Invoked overlapping request completion with UUID %@.
%s %p Set new request UUID as %@.
%s %p %@
%s %p %@ %lu
%s Shouldn't have a pending request, continuing and canceling it now.
%s Ignoring due to id mismatch %lu != %lu
%s Telling ABC about %@
%s returning bundle reply %@ %@
%s Sending context to tool %@
%s Entered request group %@ for command %@.
%s Left request group %@ for command %@ (signal = %ld).
%s Don't know how to create a transcription result for %@
%s Dictation transaction ended in cancel
%s Dictation transaction ended in remote recognition
%s Partial result %@, Speech model %@
%s Dictation transaction ended in local recognition
%s Sending recognition failed %{public}@
%s Utterance detection for live recognition not yet supported; disabling. <rdar://problem/23691545>
%s %p request completion invoked
%s Dictation requested even though it is disabled
%s Called from outside of an XPC connection
%s Could not make recognizer
%s Connection (%{public}@) requires entitlement for pre-recorded dictation
%s Reporting issue for error %@, event %@ with context %@
%s Dictation: force offline speech recognition. Language code: %@, asset language code: %@, status: High Quality model: %@
%s Dictation: offline speech recognition not available. Language code: %@, asset language code: %@
%s Background recognizer not supported on this platform
%s %@ created speech recognizer (instanceUUID = %{uuid_t}.16P, for background = %{BOOL}d) %@
%s %@ raw eager candidate: %@
%s Speech recognition encountered error: %{public}@
%s Connection (%{public}@) cannot use pre-recorded dictation; needs dictation prerecorded entitlement or speech recognition entitlement
%s %@ created local speech recorder %@
%s %@ created speech compressor %@
%s Speech capturing set to %@.
%s speechState: %@ -> %@
%s recordRoute: %@ -> %@
%s deviceIdentifier: %@ -> %@
%s Defer releasing audio session during audio system preparation.
%s Stopping audio playback, if any
%s Stopped audio playback, if any
%s hasFetchedSmartSiriVolume = %d, hasUpdatedSiriOutputVolume = %d
%s Dictation session did complete, enabling asset fetch in subsequent requests if needed
%s Assets for %@ already exist at %@
%s Error fetching assets for %{public}@: %{public}@
%s Started fetching assets for %@
%s On assistant enabling tried to fetch offline models, got %@ into %@
%s %@ created speech recognizer %@
%s Canceling local recognition because servers results have arrived.
%s ADSpeechManager no longer talking to delegate
%s Speech finished dropping callback
%s %@ %d %@
%s %zd %zd %@ %@
%s %@ %zd %zd %@ %@
%s Asking AVVoiceController to release its audio session now because 'releasesAudioSessionWhenRecordingStopped' is set.
%s Invoking recording stopped completion (state = %@)
%s success = %d, error = %@, info = %@
%s Could not start local speech recognition for %{public}@: %{public}@
%s Local speech recognition started for %{public}@
%s Not starting local recognizer: language %@, task %@, dictation capable %@
%s Invoking recording started completion (state = %@)
%s Ignored because speech state is %@.
%s packets.count = %llu, timestamp = %f, totalPacketCount = %lld
%s flag = %d
%s dirtySiriOutputVolumeHostTime = %llu
%s Ignoring tokens from previous recognizer
%s Processed %.2f
%s Speech skipping sending raw eager recognition candidate callback
%s Ignoring phrases from previous recognizer
%s Ignoring completion from previous recognizer
%s Invalidating local speech recognizer connection for finish
%s Expected on-device request for language %{public}@
%s Expected installed HQ prefs asset for %{public}@, installed=%u, highQuality=%u
%s No offline dictation status for language %{public}@
%s Preheating speech recognizer with state = %d
%s Begin preparing audio system with options %@. (setAudioSessionActiveOptions = %lu, setAudioSessionActiveReason = %ld, speechState = %@)
%s End preparing audio system with error %@. (speechState = %@)
%s End preparing audio system. (speechState = %@)
%s bluetoothDevice = %@
%s Release audio session now because releasing audio session was requested during audio system preparation.
%s Begin waiting for speech recording to stop. (speechState = %@)
%s End waiting for speech recording to stop. (signal = %ld, duration = %f)
%s Begin waiting for alerts to stop. (speechState = %@)
%s End waiting for alerts to stop with error %@. (duration = %f)
%s End waiting for alerts to stop. (duration = %f)
%s Skip speech recorder preparation because releasing audio session was requested. (speechState = %@)
%s Skipped speech recorder preparation because audio session is already active.
%s Begin speech recorder preparation. (speechState = %@)
%s End speech recorder preparation with error %@. (duration = %f)
%s End speech recorder preparation. (duration = %f)
%s Begin waiting for Siri output volume to update after host time %llu...
%s End waiting for Siri output volume to update after host time %llu. (duration = %f)
%s End waiting for Siri output volume to update after host time %llu due to timed out. (duration = %f)
%s secureOfflineOnly is %d
%s Asked to start recording when we're already in state %{public}@
%s Mapped %@ to %@
%s Not using local speech recognition for mode %ld, dictation language %@, dictationCapable %@
%s Inserting will start on speech failure
%s Not using local speech recognition for recorded %@
%s Canceling speech capture
%s Recording started canceling in record start completion
%s Canceling speech capture in completion
%s Recording failed to start, ignoring cancel in completion
%s Asked to cancel when we're in state %@
%s Stopping speech capture
%s Recording started stopping in record start completion
%s Stopping speech capture in completion
%s Recording failed to start, ignoring stop in completion
%s Error: asked to stop when we're in state %{public}@
%s Started, waiting for did start to stop recording then release session
%s Recording failed to start releasing session in completion
%s Recording, stopping record to release session
%s Stopping, waiting for did stop to release session
%s Asking AVVoiceController to release its audio session now
%s onlyIfIdle = %d
%s state = %@
%s Completion is invoked by the deallocation of the safety block. Something went wrong.
%s and we're idle
%s but we're NOT idle
%s Notifications suppressed
%s Skipping local speech profile(s) update because device doesn't support it
%s Skipping offline profile update(s) because speech recognition is active for task %@
%s Could not read installed languages: %@
%s No offline dictation language enabled for syncing
%s Skipping user profile update for %@ because it was last updated too recently (%@) and the update reasons (%@) are not immediate
%s Continuing user profile update for %@ because it was not updated recently (%@)
%s Continuing user profile update for %@ because update reasons were immediate (%@)
%s No viable offline dictation language for profile update
%s Perform speech profile(s) update because delay timer fired
%s Perform speech profile(s) update because coalescing timer fired
%s Skipping offline profile(s) update because speech recognition has started for task %{public}@
%s Failed to create user %{public}@ speech profile : %{public}@
%s User profile updated for %@
%s hasFetchedSmartSiriVolume = %d, forceFetch = %d
%s hasUpdatedSiriOutputVolume = %d, forceUpdate = %d
%s success: %d
%s Changing state from %@ to %@
%s Notification is not announceable by app: %@
%s %@ from app: %@, Current state: %@
%s Spoken Notification temporarily disabled until %@ for app
%s Ongoing session, not reading notification
%s Already processing a notification of a different type, rejecting notification
%s Already processing a notification, queuing completion for notification
%s Already reading a notification of a different type, rejecting notification
%s Already reading a notification, marking as successful
%s Currently listening but new notification came in, starting new reading request
%s User is currently replying, pending notification
%s User is currently replying and pending notification already held, pending completion
%s User is currently replying and pending notification already held with different notification type, rejecting notification
%s Not reading the notification: %@
%s Timed out waiting for a decision from Opportune Speaking Module
%s recommended action: %@ current state: %@ error: %@
%s Starting notification request: %@
%s request failed with error: %@
%s request was interrupted: %d
%s Command delaying already started, proceeding with reading message
%s Force delayType to be %ld. This should only used for Testing
%s Error starting delay for notification reading
%s We are stuck in %@ state, resetting
%s audio session ended, current state: %@
%s There is a pending notification, kicking off new request
%s Audio session taken over because user began speaking, audioSessionID = %lu, bluetoothDevice = %@, error = %@
%s Time window for triggerless user reply has passed, not starting new request for user reply
%s Triggerless reply activation error: %@, result: %@
%s Triggerless reply activation complete
%s Activating with non-BT triggerless path
%s Notification reading request began for request: %@
%s Timed out reading out the message for %@
%s Request started for unrelated request: %@
%s Record negative feedback signal for request %@
%s Triggerless listening request cancelled: %@ during %@ phase
%s Notification Reading request finished for request %@
%s Record positive feedback signal for request %@
%s Skipping triggerless reply by going from reading state to idle state. This should only be used for testing
%s Testing mode set to always read out and reply. Transitioning to triggerless listening
%s Starting timer for triggerless reply with time window of %f seconds
%s triggerless reply, time window of %f seconds timed out
%s type = %@
%s CSOSL stopped listening unexpectedly
%s playback request: %@, current request: %@
%s Settings is fetching supported languages
%s On dictation enabling tried to fetch offline models, got %@ into %@
%s %@ extra assistant logging
%s Shutting down at the request of settings
%s Got sync command on connection %@
%s Got sync finished notification %@
%s Got sync verification finished notification %@
%s %@ %@ %lu %@
%s Failed with error %@.
%s response = %@, error = %@
%s Smart Siri Volume is not supported on this platform.
%s audioRoute = %@
%s volume = %f, audioRoute = %@, operationType = %ld
%s notification = %@
%s Ignored because no audio category is specified in the notification %@.
%s category = %@, volume = %f, audioCategory = %@, reason = %@
%s Resetting device setup volume due to %@ audio category volume change for %@.
%s Smart Siri volume is %f.
%s needsUpdateSiriVolume = %d
%s forceUpdate = %d
%s Cached Smart Siri volume is %f.
%s Setting device setup volume to %f
%s Setting resolved volume to device setup volume %f
%s Resetting device setup volume
%s Setting resolved volume to client configured output volume %f
%s Minimum Siri volume is set to %f.
%s Maximum Siri volume is set to %f.
%s Resolved Siri volume is %f.
%s Cached Siri volume is %f.
%s Cached Siri volume is missing.
%s Ignored because current Siri volume is %f and resolved Siri volume is %f. They are close enough.
%s Invalid Smart Siri Volume: %f
%s has active request %d
%s Mini not ready.
%s Mini failure (%{public}@).
%s Mini Loaded Version: %@
%s Mini Loaded refId does not match our saved assistant command
%s Handling ACE Object
%s Sending command to Siri Mini: %@
%s Sending server command to Local Server: %@
%s Logging Assistant Id %@, SharedUserId %@
%s Local session did open connection
%s Local session received Ace Object %@
%s Local session connection did close
%s Local session did encounter error %@
%s Device is %@
%s Wireless Splitter session info changed from %@ to %@
%s Wireless Splitter session invalidated
%s audioSource = %@
%s audioDestination = %@
%s deviceRingerSwitchState = %@
%s SASRecordingInfo.ringerSwitchOff = %d
%s audioAlertStyle = %ld
%s SASRecordingInfo.alertType = %@
%s firstBufferTimestamp (baseline) = %f
%s homeButtonDownTimestamp = %f
%s SASRecordingInfo.buttonDowntime = %llu
%s startRecordingTimestamp = %f
%s SASRecordingInfo.activationTime = %llu
%s SASRecordingInfo.zeroLatencyLaunch = %d
%s activationAlertStartTimestamp = %f
%s SASRecordingInfo.activationAudioAlertStartTime = %llu
%s SASRecordingInfo.activationHapticAlertStartTime = %llu
%s #hal Invalid score
%s Alarm %@ is not in notifiedFiringAlarmIDs, but isFiring is YES.
%s hasFiringAlarms = %d (local)
%s Found firing alarm %@ from device %@.
%s hasFiringAlarms = %d (remote)
%s Timer %@ is not in notifiedFiringTimerIDs, but isFiring is YES.
%s hasFiringTimers = %d (local)
%s Found firing timer %@ from device %@.
%s hasFiringTimers = %d (remote)
%s mergedClockAlarmSnapshot = %@.
%s mergedClockTimerSnapshot = %@.
%s origin = %ld, client = %@
%s Fetching local alarm and timer snapshots...
%s Fetched local alarm snapshot %@.
%s Fetched local timer snapshot %@.
%s Done fetching local alarm and timer snapshots.
%s Fetching remote timer snapshots...
%s Fetched remote timer snapshots %@.
%s Done fetching remote timer snapshots.
%s Dismissing firing alarms and timers...
%s Begin mutating timer snapshot.
%s End mutating timer snapshot.
%s Merging local and remote alarms...
%s Adding %tu alarms (local)...
%s Adding %tu alarms (remote %@)...
%s Merged %tu local and remote alarms.
%s Merging local and remote timers...
%s Adding %tu timers (local)...
%s Adding %tu timers (remote %@)...
%s Merged %tu local and remote timers.
%s includingAlarms = %d, includingTimers = %d
%s Alarm is not supported on this platform.
%s Timer is not supported on this platform.
%s %@ added
%s %@ added to lock screen feed
%s %@ eligible for spoken
%s Trying to modify a bulletin %@ that I don't already have.
%s %@ removed from lock screen feed
%s Asked to remove a bulletin from lock screen %@ that I don't already have.
%s removed %@
%s Asked to remove a bulletin %@ that I don't already have.
%s Batched update pending
%s timed out
%s observer callback is dropped before invocation
%s completion called
ZZZZZZZZZZZZZZZZ
qqqqqqqqqqqqqqqq
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNO
KKKKKKKKKKKKKKKK
=[,$
du@: 
ZvRHq
9.8fLH
[@iG1
/{LY(
c8BL
@o~z
iPad3,5
N^NrxvT
s|{{~zn
<u83e
Bqi$
iPad2,8
d`Rx
YfR2E$xe
[Usj
+)~s
~>c]
qwES
:4fX
!CU^
m{IO
~p-;
n+=_
>0b\
DIx)
q8"7
jTs.
X!D_
sOFc
6/gT<
my@a
#-\H=7 NP
JR#-
iPhone4,2
u{t[f
XQ=@!
wmm<
g>rnd
q*iW
0bdFBL
MxT(
 :nl
[uAAAA000BBBB1
Z:X/
7!.z
/C o/
)2hj=
1rQXg
pWok_
A7y'
h\GG
P+Du(
_qKK
X3"?
>N?
jB6'
8!RO;
[-~54
iPad4,1
)HQ=
y;-C
_tTx
j<tj.
*)*)
#&%Ec
*=^
|-*a
:p*9m
^97[,?
JHpy
LcR'
5-xa
=MzY
@kXM
>d;S~
-'_
z!bWV
UG<$S
dHrl
--@B
Gy <
Ew:g
VqIHC=
,G1a-
oQhq
8upJX
J&A6
*eH(+
xqsR3
X@6X
Dw._E
F5)8
=49vl
 BG*
[{Z+
ZM"#
-#0E
iRQ.
C3zi
1BmE
d$zt
N>^Ks_
fHhi
{"?\cL{
<"f`r
} 0--
k=R$
iPhone2,1
h1~;
lf(6-
_Zw9O.
c@i3]
&)@,
=4gk
E1(U 
@EHW_MACHINE
j#xSnDG1pB
Z_A;3
NwnK
hszo
v_G5`
ViPad3,4
iPhone3,2
og50
aL`F
sIpO
~^J[~
AppleTV3,2
\`qp
zTcU
_\L?4l+
bg(K
\#J5
H7^!
+T=B
?@)V
5z4Q
]GcS
|U:w
Vc0Nbb(
1] V
&F9|
Modh
=dbN
ecaz
!JZV
u*z{
O^7y
EMQJ
NB/[
Gp(z
E]bP[
:RI]
s}Ynb
1j-h
v.g1
?Y&vH
"wOe
hYPV
7xoc
@:Sc
k.?A
'Chq
S<|mhHa
h@ih
"@2a
xFpA4
rhdfn
\<yr
fs5 
n{=(
cv0%_J
k~8-
dq7"PE
ly?*XM
at2'U@
i|:/]H
gr4!
oz<)
bw1$^K
ep6#QD
mx>+YL
`u3&TA
h};.\I
]t2v
/N-,I?M
Q&y@>
8E%R0
iPad2,4
XT\,
E>*Y
5!K;
Qn"W
#$s_
vN^gH
55ir
`WTm
>\PW
Z}\?
]#R~
jU"H@
knfs
FU8v
1p4&\>
z|tu
NgU, 
a\A6
y@zF
\i"lN
V4Xe
Fy)w
v|`7X
#kMHn&
*bD
^x}[
"Vp8
Ce`F
?Km%
>vPUs;
1C@F
?h'L
_n%
!s'G
q#"t
p#AYx
\7c3
[[ZO*9!
Jy7<
Q}0a~
mySe
#-\5nKx
Yh1P
UG#@ 
]7d+
%X/*
u|wM
6FO
WQeE
gIsuS
V30MWVgu
iPod4,1
ETm4'[7
\]C68
B)"@9
'<-
f&e2
unOtk
M7ZI'h
B-Sy
*o0V
@5O:'R(]
M8B7
*_%P
<I3F[.T!
1D>K
V#Y,
=H2GZ/U 
0E?J
W"X-
A4N;&S)\
L9C6
+^$Q
e7EK
cyyT
F.mr+
mp8R
#iPad2,6
AppleTV3,1
LtOp
Hp=]
DN]h
BIVlK^
C+7h6
qM$W
A$Wv
9Eev
&;=d
_{=s
PVZV
Gh@/,J]pF84cy
Rjcf9
UamB;
yQfw
OR{%
`gA~
iCL%F
[?KSDB
!Qy[G
K23L
.` Y
h(@h
43YxS!
hTn1
+Zu^
?FVR
}qO6
T=Wl
fvr'
[z@R
<M5AE
39n| 
wbzF
8`$$
i>v&
Q{MRQ
%ge?BQiDgj
wkH*
AHTw
23&1>
.QE:
K*)K6'
7M2H
iPad2,5
B^lm
VBTS
+Ii)
%xNqaE0
=D6b
rP9e
m:,E
<$|T
.n2"y}N
MJS9xZ
w$4g
[l1@IXW
9SiPad2,2
IrRv5D`
B=|9
M_T)
Rf\iPad2,10
iPhone5,1
orvE
scXB
D>Rt@]
?:Zk%
n)~f
y97F
/;9XT
D_@
G46'
$p|"
F5\'k
.Or]b
|w5R
&OK+
c;6I
`Yi1
]akL
;Aj 
c9+R
z:4
c$mvAN
66}:
1n5hjS
#\,>`M
-[-"Tf
E_tf`_
`Tr-K
P,u~
H:s/
cs~G
f5lh
 O0
Uz !%\@kT
Xo7s"P$
5TO8
-^v;
DZ/j
iPad3,3
q~u<
oH8k$
fyK`+
@<Hi 
Ko$8
+a'N
iPad3,6
iPad4,3
eM?X
>X5Eg:J
$?)1!
WGr%
H>h*
9,:T
K;r>
ip]i
Vq+[
\N_Nwx{Up}|d{~zj
CVl:
53TpwnY
+"G?
qCu'
QK=$
i*~v
9c.1\
;(7/#
cowh{
&0H]
qn#y
BaXO%
@_GKW
VD6J
"LF*
0]$R_
X`S^(Q
u]p#
ghr%
k]\>
XB7.N
<.\rG
o&,@
eiHJu0a
j7N85
f-e_
z"E[
K:>s
7WN;!v
rG%$
b;|d
i^f:
.WUX
*l]F
,b@9
2z);
gWk$1I2Jh'dT\
6"$W
.7A[
Y3v'@x
aWV4
RH=$D
Cz>T
%Xdj
D[P\
 +tk
GR*<
ASj}
KqCM
>%ie
armuy
YGf>
98n[
(Z4j
'=KR
i.!F
(2G^>
-,N{
Vl$o
#vI]
ig(Uo
]QIVE
$b)}
&n=u
3YNwe
sEDt
laRj
GU'[
!L5CN
3]W;
v~N!>
2tE#o
'83?
EZQ]
<=H|
B{?UF
xB9j
]7sJ
UYRMX
t@54
Dk'Ap6
;7<#
:%-w
OC[DW
!K\e+
4|/g
A~|]Q
5: w
w.O!S
)0F\
(VXd
CWQ=
`lgx
/MC=
mryu
v+ E
9ckt
]7sJ
UYRMX
t@54
$\~1
{0g
K5;d
|ck1
M(#~
}qze
5KE'
!0sk
3|K
GALN7
@c-;
9.DQ
TGq3F
\mv:
!>&*6
K&9yI
48 ?,
($hsB
j"q9
TB:/`
h.e1
AJ|o
 j`[
58:C
+!dE
=lGx
{d)s
,:BW
<4`#
Gy5.
ie}bq
}VkY'
NB]/
1Qjd{>
I,w|MtG
O`Ni
4%8#
gf~9)
_dNQ
|IBAx
XVp= 
M?]4
qJApIz
^P5x
wK!1
lWYF
DOLu
U[}0-
RiC\
jks4$
%TX:
=;S{
<Zj[c
k3L$
oP]m
59&T"\
|`Vd
,{e`Ct
MAWO
#h>G;4
yjJY
.jyYR
|dr~
i=GpS
!H*X
o\eT_d
m EK
SLBy
]`:*
\gtx
5[Us>
JAB{F
)<}P
9QxB
MTjo
RqF<h
JXxk/
K]?M
1!nv
FYWl
x5P^
zIpAJX
%(eCM#
mTW\
<,vK
PGA)
ERC9
0aBu
g>7kKX
eQ<M
sB%C
Jb$"
3A#fT
Whe|
E`,m
)'8}
g .K
d0J}^
M%6x
#gtT_
*&0(
Y \S
BGy`
!oU|
G9[)
8>xP
Y?Xi
b,ye
FtB^
D]cf
$*.S
tKF_
+3|l
."=O
UFf:3j
xOl=
&IN_H
^BY)b
ZBTX
!.R+}6
aVu7
tDu7
-S)[:6%
qAoH
wrPI6
]L5Z
P#hR
) Uu
_ob]
r<iu
W)K9
(.h@
I/Hy
VdRN
A$*
o*5;
Y<2u
-&1S!
06pX
Q7Pa
nwzE
-oL{
BNX@
,g1H4;
neEV
i09D
 &"_
?aoj
%yp)
A;/~
>8<A
;gn7
L|Ru
JOmt
e*pc
0'6Lb
>-ijs
F4V?
g\RM
zAJ{Bq
U[>s
hWZj
l4K#
{gQc
2>!S%[
nYz+
CPp,%|
G;h>
]r+[
!:'6
H[{p
eRq3
^FP\
%*V/y2
+1K%
T$}R
1g4H
{way
NVuB8l
L\|o+
.=u*E
^$Ji
&s7@`
-qx!
=jK
(.*W
0AM/
(.Fn
VjXE
!;A/
TQov
7yCj
<0&>
O6JE
sji->
cp*e
bL6'0
odL$"
DuE#
k+)C
ey~0
#EuD|
"$LdT
129i
!0-6
c<P
O|Et
'UJF
6slbY9
2?rTZ4
zC@K
+;a\
GPV>
J]L6
?nMz
h18dDW
pj^@1{
nU[D
tl#3
HCrKx
\R7z
?/~ma
GXrI
6+f@N
nWT_
%OM(
JYyi>
\DR^
'(T-{0
gPsk
4\#{
L2D6)%
tFpl
BIJs-
=S]{6EZ
To|p
Uh2"
7_YN
[a*Y
|\) 
s`d;
Q&7 
6*1w
xN!|
Gr<;'
$hO0
Jsp{=
^ Z(IEVm
'{r+
<ZIM
"$ ]
~N`G
x}_F9
M@e
tFC_
\EHw
|NxO*p
yL>!-
JF'U9
bYsl
Nt?L
iI<5
|(ReF
iqgk
iz o
hF<-:
y`c'4
qb8w
p^$5"
ax{?,PY
BYE
fTb~
^ V$;7
;[`nq4
DHW%
F}vG~M
)e$
~marI
?/uH
+f@N 
&nWT_
T.@c
Fy=Jj
ajiP
ONV,
wLfy
_S2@
czX]
bEk[
IBbq5
Hk\&r
poE~
%I;ZV
Y`ch
a9CtW
*n}]
eyb$
F 37h
X^Z'
HxVq
NKip
^s2#
Hi>.
adZC
%chkR
uN]Q0B8F
?#$j_
[+2M
fF1u 
oL"X
C,s;(
r=by
-PTR
,c9*L
Wwd #:
CYmr
]~I3
bB7>
jZk)
3M7E$(;
|A0N
UY8J&
}Fls
;^k`cZ
9"?.
J "b
o#gj
9wpl
+-Emf
*L|M
8;0v
:\l]e
;=U}M
D]Po
l^[G
dV`W2h
wgT&95
zY7M
sS$`
{jwl
g(L
O\| )p
bUv'
.TER
`YZQ
(%hN@.
1!{F
]JL$
&;vP^
~GDO
WHbY
3?)(
!~Fh
:-<+0,
m;Tb
{=65
@qA'
k`H &1
o/-G
a}z4
`/uf
5"3Ig
;(lov
iJ$^
`@7s
2;Nn
K8sI
X>-)v
F@D9
{g|:
4pcC
']jI
0~ye
C)+k
"$Ldo
#EuD
*n}]
a9CtW
F 37h
X^Z'
eyb$
~LzM(r
m}N<#/
^GJu
vDA]
\lD,*
tL}M+
6L{X
?&%arR
WQU(
I/<f)
3="g
_z6w
Px>8
iX?Y
yNWE
`kC+-:
KzJ,
jvq?
d$&L
p6=>
_xVf
!^Ge`
IWRqF<h
KXxk/
%Z}1
2.)gR
xCP\=O5K
(nef_
a%Rr
4L6X{
mvkz
q}nU
#3iT
7z\R<
:rKHC
czDA
P_#ZG
+3%)
txnv
YzM7c
ASs`$
=rtg
!0u[|
~:d}
^s2'
adZC
Lv_7
:*mut
B]wL
3.cEK
kRQZ$F
g?ErQ
,h{[
@&51n
^X\!
>"%k^
$bijS
tO\P1C9G
Ta/(4
Y`ch.
M3I;ZVE~
MTjo
9Q<}P
RMCx
%5_c
l!DJ
n]dU^e
 I+Y
A^tO
9)nvw
0-`FH
hQRYl
.jyY
e=GpS
B$73l
\Z^#
vq`w
h<FqR
/kxXS
$jmq
7QaP
60Xp{
%&-k
8#>/
cfXA
tDIv
=U*r
}Oye
E;M? ,
dt;#
G5*&
wEs$
WNC|
upNW
DWw+"{
i^},
%_NY
Sr%5
Eh)8
_|K1i
Uuf"
{l}z
/RVP
`?;(N
f)s`
3$5Oa
=.jip
=O-Dl*,
}L+M
Yfkr
qmhZ
Kn"c
')6s
aV`R
`/uf
5"3Ig
;(lov
nwzE
Ftqm
06pX1S!
Q7PaV
N|J}
]M~
o*5;
E#Du
$"dL
k*fC
zcnQ
{>!/
92iV
 .1t
fQgU
MzK,J
:H*Ck-+
Li%d
vjo]
^alu
'48Y+Q/
5wFv
%[!S2>-
|L}?
%k>"
wjSbi
9G1C\P
ocum
BaV,x
CHh{?
o9V`
8/>)2.
\2HR
vV!e;"]
S<cI
b-+8
R(Fe
"1y&I
:92t
;urn
H" `
)/God
(N~O
yIxS
`\nEY
9Br
$V7;
H2*+
bT0U
4(/aT
2?{7
.hc`Y
~EVZ;I3M
odUlq
VZE7A?
)Irj
$8m#
 ,M?E;
!cRb
&:o!
mfWns
TXG5C=
%&-k
^LUb
\7QaP
!60Xp{
$jmq
NHL1
&?<xkK
j[-
/UbA
/@GVA
\Oo3:c
qFe4
PH^R
+$X!w<
FUue2
Qlq)
^)<'
Xt2@
h3G4
L@j%d
Uv#E}
xDC 3
(Kou
eRjc
KVy\C.
`0<Z
aI-p
]|'%
k5l>
6nW:
>>;h
&w^"^
;n_c
Y8ff
JAAp
p>@"
awaC
I;"t
@HWb
7caB
<Qz#
\HL&
l5q,
,Go
:tN
Evls
%oZ:
sV_X
#2T]
#)^kS
C+A]
K>re
)hK`
eX6]
%&8/k
' Dn
]80qu@
d=R'LE
6Ww(N
935!
j!r4
Z\Ox
:Ey1
l||S
%&W
E?aEN
#{Yk
Cbo"
376V
Vj81
|)%'
^.B#
cbr^
,M."
zt+@
Uo#g
ljA1
KR]$
aDa9/
1d&7
(RoW
K|RHc
kOy~C7
r5N>
D|.'<
} '#
4@>]
MI+2
1{d:
uCJ\
VyB)g
r):e
AlO#9
w%/:
H\zf`
hoQP@
5a6V
?vk G
(]]
:[]z
l4s;DL
N$'b
)"zl
`BcZ
K"#A
KtCi
_jf@
?sP+4Y
.bT@
Y7h-
9.^n
FTFY
ptur
kch`
]C[K
$dMX
r]H:yw
33OW
B uv
"9C?
84w?0
V_)I
x9mq
;YtG
\?rZ
"dp7Z
(@Jg
{)a SQ
~E]BV=
^vvtv
O#K:D
:}s$
`V,m
YSN;
=XKk
j>,%
])=5
Fa!d
Zmxk
l"<r
R}oqz6
rNDGZ
/@#A
6vj!
XW>} 
]5hD%
V08 .
`yX9
2l8M
OQt}
uM*}
!W$4
h7=J
j.7k
:J<n
ls9
?HB,
jTv([
sb5+
JgW}
)I)a
LK784
tGNg\?
MB,1e:
TteQ|
J(>a
 u=^a
nt>x
ck#4
5R&V
e6-Y
VZX<
d:'t
aXqM
zg)z
5`B
S$4l
%C$x
FF.4>
xMC~P5
AH!(i0
X~hHp
;PUT
qQN&
f^21W
_[Pgn
k5kI
=n+
mhe.
;Q`L
G+x8
D2Nq
"Os=
wVEt
u?f|
W2<_
<[Y"D
l%X\
p$/&xo
I!Mp
-*H 
_gQ^
=1h[
tQq%
:Bk\
bXw
l{n>
j&`Y
uEx-
#|}O
7KX1O
cfB%
5_GG
UF9,^lA
e>uw
$:w/
>!X!
Z*]qrd
c/?'Ka
47XI
p1w4
VaaL
1g<B
x_l
n.fi
W''N
)@H"Q
U+m#
52[j
SvcD
eVPo
,{y
|hpv
=6!{
8TwB
,Q4=
Eo1-
<vDd
iWi3
ax#C 
;S|(
"e5H
_Xyxw 
kRNW
S^/1
|@<@
*y9"
GIAJ
,$7E
%T:
uME
vm?n
i."x
o87=
9J)}
Rh|rZ#
r[WD
/U0B
6cy"
UMD=}5
lH&kD0
C#; ;
uj[9
1FAm
I$ap
)=W9
yY\<
/`Y^
?$Ji
]rsl
e4Dh
\1&>
6^OM
`gJ/
.KNs
=g+WE
 }uE
vDp'
F9Mk
6b{3N
=2iS
X+tRp
_dPV
%7gn
LX-|
A<b>iD
+^pr
;$UB
=w3o
qGNR
f*8'Wd
_/Zqna
lg]z
~k[
ZGnsQm
CyNH
uY}c
E$@/
%=vf
9FK+A
h-oy
^7!MvO
~d5R
$/U1
@$PTHo
q4QY
)XeQ
y<nT
f_@i
V"}%
6;Kl
_~# 
VNg)
Y#-G
%Y53
s`0Q
@=>6
zUk4
<I~]
At2mi
xqP;P
I!n)
_gCB
+wW,
ThtN
h,o #
1mN9
UfKi}
uU`_]
lc)?D
{]@>
Cs&z;
u:Fc
-PO23
hy{S
,AU5
"M'J
tt"(
bI~!
+)g*
r),O
C$eS
Eyk4
%`]}
l:vk
#@(
<^}d
5F7t
0$aM
D!WA
&wnD
F<et
Aq3J
|nPd
X/WXpW
y>4o
!0^-Y
v@vM
^55 o{
g0WvV~
3F+C
X&2u
@&Doh^
y#&9Q[
oYHm
(#i5P
$-A?U
t<l@
DAQ
$XgE
rab'
;;Ix
k_B}
y\2X
6{$K
`B!)
Z ^H
li>,
gln5
0&*,
>k-{
EN6 
ceJ}k.
CVaK
Z`(+
 x\T
Kwb(3
d@r2L8
}v;RU
wJ4/<
>r(b
COdRk
Zy-2r
c|OdK
Rr{(*
9aYM
DYw+L!
o>KU
v_PTh
#^3n
yB8,
/{=N
fDH;
Mrh5
)&3)
E~^?
%gh|
%<xt
 ^.M
C#PR
#:fs
<YHe
\@~,
l=C`
$u)
<4(G
a:OAIB
dwiq
;>3Z
"r^*l
>nWQ
\8nT
\0;5
Zm5R
T00
SMN$
s.(D
us&#
#J#A
kc(`
kg"=
(^Z)
rQkhz
Rb@k
6iEX
/_[
Lq1Gd
UGx'}?
1L}w
#dH4
v}~}
lC^'
Zhn
:z[E
Zcm
%.RI
!a6(
<'U"
\>ck
KB7_
B)oG
e$sg
&'ST
4yn)L
e?|>MG
5^Tq
.+_@
L}fE
vLu-
 upO
&(~(
F1Ha
+{;f\
9Kc>
st&g
I,dz
/h\T
yQY6
v$Bl
j"?D[Z
:K;!
0?)m
T4,=|
m1NkE
GV3x
{ZL|
Ct*8
>q%(
hH J
8,+O
4jNs
YeE<!
o,%%
id)uA
PaK#x
3O5?
nAXZ_
WD:f
}y.}
1IS@
{8r)Jv
OV0n
8%d`
\.a0tV
(Pm`
{Do`
Md\K
K9R,
+ de
4CJX
bzO:
d'A]
:TY-
vNs)^6
ox:IG
2v]O
Evy:=
qkKf
#Sy 
QX`P`
Hn)0
,e,`$.
`N6?
+4$-
-i*J
{P/(
bh%C
+&*7\
WN<Y
*oo 
H9V%
Re#`
@}Q#
yx3u
kX<P
=a92
]xGYVR?
tr`r
_-)(
idI1
dT(yL
]QJ/u
]O/yl
Dylz
dJM/U
9D J
Zj^Vr
zYu`R!
Rp06*
d9P/
M& Z
K{.=
b83b
Ha_2
u-oO
pO9v
2\8m
9/F
"_k~
a?rH
Z0(<
c5Jj
wv(c
 (\@
r&Lh
}&;FU^
[\bX
m|Qs
tBq)
"{tK
<i)Q
$&z,
D?Le
2r&e
nG:X
k%la
{1;s
HU0v
TG>`|?
mB\6E:
IYf!1
)zrP
0L;0
Lb,
JTOOB
jgdy
la)?"
hikM
'n}^
qWx<
]z}H
?,DM
!3s9
A*Ep
+28j
7Z<:
v<_l^w
O9=:g
N7ik
bs=j
g#Ya
q/.C@W
~JT'
(sQE
1BF.I
l jq
[?%@sG
3i0Z
TomT
69TQ
DD[_
rdh~
+S)*
kZHm
]z{F
['u!
;>Ch
@X'f
8>PC
^zhm
>c^$
hZ[F
w9u{
']~~
GDH7Ln
6\,w
3>zN
eT:TB
utq
6lmG
[j0I
%uSg
G#jb
 %7l
"iE.Z
eD\b
m,,$ET
T)Nr|Q
0"K"
')t!_
Sv=
|^bB
J:?]`
R8&z
F6p;
&/Fr
@k~\
vKMw
j(cJ
\um-
l[d
+4(t
e4v'
n1&C
XxFZ 
rkSpz
1Eno
vEY9
@9 
Lx"_d6
UNk?}
Bm<A
 IG
ly:1
D02&
QT9S
[S*R
,iuc
.NuC
xwp!
=a%d
1-[=
Q4mt
aIP8
7pUZ
H'pJ`_
9*yi
[|@l
^,$g
V4Bf
c3GI
o1 0
fc#B
2?MU
1/h}
Q6^4
WkPS
aKcx
~(ME
H'#;
6LC"
xuC"
.LF@
)S\L
t4je|
0DU
ec!q
0Jbl
S"y*{Z
7)|z
WL?b
K  >cX
i^zn
r%BhZ]
.G8>V
/+%n
pDDN
l63G]x
9$ E
<t9s
18TA
ZMrP
lmA{
tw2
;2~
s.\m
&7j$
CjdC
\am\
.NuK
E_{O
#1K^
~?,XVq
'X',_
JBWT
|b,]wHT
y)?!qQ
vAhg
KH_|c0
k{tJC
rM=*Z5
F8z>>
/CZ,
Lm$0
.S}#
uhFf
cIU -
ae%G
xT,%
.m)G
aj<
v@Ck^8
OE!=g=
Vsh]~
+N$m
KF;:3
SD@+
hS2G
5]U"
X7t=
g]4'
oi$z
_sRc
F*9l
0:G)
T1Bye
c,EL
m4 /\z
,TP?T
J"3VbZ
z6{l
~KU{
}Rc2
+kfP
N6h7
2LpC
duu!
b({F
1@1F
(vx&
lNV@D
L}}vd
V"?>.
`k_'
RP&.
dp]'oZ%
kXE9c 
nYz
qbML
5Zc*
"7!j
TVg:
=T<|
m07y
7BzK
SIuxb
^NB4
szT-
T*18,
bcQ!
)QHg
MZM7e"
t_/a\'
Ju(g
3R>7
ek;U
swnA
N;^<
c658
XkDxp
xXoNP 
an&.I
e#~-
<`A(
?7w6
_N|Wn
Fx5T
]aN3
z1*8
;Eyd
L:21
I8q0
ttAM
Jg<V
c$!@
3@*E
ey/'
gQJj
B@/s
8g9`
_KJFw3
xapW
sd 3
E-@*=
xji 
AX;iI
x]Y?R
<ewY
%S>9
*fZH
Uq~;-
%u^t._&
h=NF
-u+g
pI1<
p{LaX
PHgWx
I~.7a
eA[<
,!BB
*h:M
|Q?/
,54*
z1H
Md|[
0Y0k
c2"9
"n7f
b#n^J[
'>Sm
Ehjh
;SA)u
|0\r
}'mM
E5>$
4Gt{
:dq]
DB|
l]t?
\ Is
ucT&
#ZQD
s>ZA
iE3V
"+H 
G#wn
F M@
%uNk
=[j-E
<89<
ui}
X3<lpK
a6^:IN
'@r=
GYDt
qyw_
w$y8
,UM
^gd.
>~Rg
X:jI
$|t[
F*M^
8(b/
_0s~
=fJ{
86.p
>qV7F
K'L[
xCG^
{ctu
.zB<
$#:3
d ic
4Dbf
T]T/
#O!
uv$n
$H|'
CN!a
<,9x
KR!%3
s|Ga
IE5'x=
p@WqA8
LK;^
njn" 
*]AX
neo>F
wS&^_
u\j$;
,p><
5F}?
;ly5
q~SY
Y:@0
fd%#
P-E:(
O^JCg&
omauG
>w,`
'Is
GP:0
J<*>
,9>L
sq*
EE!N
N@AW
|]5I
*d0+
SC&8
BQpxj)
bb[NJ
?l<H
&Zu(
EtHWt:
%Q)4
$*"e
tN)`
aB|d
d *]
c)41
[IX
8hH;&@0
q~rFY
QMYpy5
5F\ 
C>v$;
k\g&
O^(_~
Vha?
2cdo:(
8h%W
Z~.`
fBQT
|Uigt-
?{Tx
~6..
bu3~J
[pQ(s
S>PL
5z42
cC1P
3':U
"WOt
| ,F
zB.7
BlHs
uy9o
\:$0
^/5
Zg*W
_X}'w 
Fn4Gn
`SA3
;Sxw
X}n^P6
xN-]
E"n-
%@@8
i %,
4Qju
-g#%
,&x"
PZoFa
Il&E
NpA'
q0o"
3tR9
wL|__4
nz5?F
"O>V
tv;4
r+5S
`gPB
[h(E
]5&"
]+`?
=c =
kZ%_
^VUP
;>.Z
rD6.
4!Jc?
8|*_
erMYM
EAfom9
&o[p
3E.$
\pF7
{a<vs*
Bd^ ga
=[Q(
kbTJ
h`Hd
Y/CVhW
m0,o
!$P5Y
g9P/Or
^<2yv
:77)
b"v6
|_(u
R9lM
0oUH
2F}3
R_Kz
>-eE
+xnB
B Q3
[Psn
pfS]
{%3e
u67V
.<V.`
H)Tx
My0s
88fO
d9O.
4]D+
TDrb
bdAI
+>jw 
)rpp
{ZaP
MzRq
-cd2
UBW-
j'.K
:C%N
lz ,
ml1i
E9=:
Cd3]
\Aw>t9
Ew>^m
yYX0
8Jrn
[dOr
'GS/
{Wd'J
ba-$
Q-a!yU
(A`c
5&dq
OG=m
v;rX
x;Gu
;8gF
u*B]
73M}
swL:
%NIX
Y4Q,
Z-ge
oi_K
<PZ)
iIl`
BS{%
N)`}
=`O$E
)/=s
r.Fi
O vfg
++s6
}3jr
q  _
8@9T
_Fdg
MNW>
-Waw
r?F\
c3Bg
fS8#
0j=A
673&
AK'9
wE+>
/r'}
ROkMz7
Ky"-c
r|@{Z
}d9*
(W\1
x4]!
uY1TD
lorW
.K`=
HEm+y
Qs$(
hvF~
X{b# 
+kPT
oS~2G+
ve7R^
OW!T
`I2%
6p7G
0-9 
&/~l
UZ7R
ZiSY
8?j\
B${<
$u0w
!%T|
e2hEMJ
Csmy
mdE 
;]@B
AzVQ
wZez
(:)4
#?y-
G'X6
`HCb>
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
060425214036Z
350209214036Z0b1
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
, op
https://www.apple.com/appleca/0
Reliance on this certificate by any party assumes acceptance of the then applicable standard terms and conditions of use, certificate policy and certification practice statements.0
=&g 
Sj[d
J_\_
51HV
P9z7
mN+"
Q c}
%E*7
=KM@QW
'YAIjS
r'8
AX~v
Miws
`Bx#
$9w(
,C;2[z
N\;B
R$M4c]U
gzQ{j[H\%
P$26
TrF=
%pc,7U
.aHg
liWS
\Q[7
|B!sf
lqcq
L_ K
-9zpp
(ZR@
8T)<
iPhone3,1
_T&8?
]9ar
B[*M
[-Rn
K>'M
 H/3E2O^
_mXM
x"J\
\UNC
-8th
XhBL}
ajY3
R\#A
gpL[
GPl{
:-NY
erny
ER1&
yPHU
/yTk
|rw<+
`?aoJ
Q.2 
<$?v
x$fAruu2.[0
 fHg
Cc1
|SUV
b5;z
]pGLz
{t<LA<
j:9y
ua~5
z B[L
Gn^ 
@hnw
iPad2,7
]\OT
@FPE+`
Mp*e
+rAU[
%(WY
wRjILRIC
R;rYR
GRZP
!R[d
a-RT
R4R^
Rh!FR
Ra&PR
Ri5IRb_
R1;ZR
R{{ARU
8 RSz
R2O]R'
RrXER
@RBH
)RqDBR
"R"V
C;Rv
R:^VR
zR!B
TR3c`R
EuRC
L#Rd
R),aRO
KRzB
RslHR
Cw[(R*
0t*\
T1lq
*EY,j
(Y)V4
P(5a
AHDt)
|p5G
fv34WYQ7
jo\.
I0~!:
.=gx9
6rc1
 O[@>-
p+Z@H
8!LQ
K;k:2*
t@l7
HRA1
iPhone6,2
o-ce*
i/vC_
5y@e
"@&H
z^9u0
w=4R
gGKk
/wv9p'
8^0D
7k#1
HiPad3,1
h$Kq*
<56'
&]P$
_c 4W
cR'PP!4
2R G
<ju9
T#qV
XNJY
{^sZ
*GpO&
-#w-
8:@Q
knb!|yL
Uo,p
FOqh
-&k<7
igid
]Khi)
E<#_
@,on
%i9I
zY?+
,SiL
O." A
~%G<6;
j+@o
#32H
]gq
sO$*I
'LB1@
E.(K
-FP#2!
8)JD/
=3 Q",G
:+HN%
C0&M
EBN\
|)<l
yp*w
}h&t
_n6Y
q$"wm8>k
j?9lv#%p3f`5/z|)
(}{.4ag2
'rt!;nh=<io: us&
OY_
e06cy,*
~+-xb71d
iPad4,2
~\b 
4m?q
UIq$4U
-]pXLA
vRbc
c6TG.
PWnm
*2ohq
P@$w{+A[5Q
)c-)^YqYsZ.
1 pXf
O%,a
R~~o
=yv2
Qf"-i^
 dk/
L{?0tC
ZwUM
^M3yrLEu
iiPhone6,1
iPad2,9
m4;F)
1k"1vJt
l2^b
vd+c
|W+?
>o<,N
r`Nz
bVgY
()((c
{Lm9
gKYu
UykG
eI[w
=Ye?b
2{#EB
q_UF
TxjF
4"(;
8\`:g
7~&@G
Ueo|
5Qm7j
:s+MJ
!Ey#~
.g?Y^
zVDh
YEO\
IPZI
f'->
HdvZ
Ew}n
(a9_X
~OEV
8\`:g
7~&@G
KguY
fJXt
-Iu/r
"k3UR
3Wk1l
<u-KL
b* 3
YugK
L`r^
+Os)t
$m5ST
vZHd
GkyU
Ocq]
G6</
@l~R
UykG
{WEi
/Kw-p
 i1WP
r^L`
jFTx
xTFj
8\`:g
7~&@G
[weI
;* 3
F=7$
@l~R
  *9
yUGk
8\`:g
7~&@G
p[QB
N[QB
~R@l
Iew[
!28+
UykG
s_Ma
xTFj
!hT
^r`L
s_Ma
GkyU
1Ui3n
>w/IN
UykG
r^L`
M}wd
-Iu/r
"k3UR
yUGk
XtfJ
Bn|P
AW]N
aM_s
:^b8e
5|$BE
Bn|P
uYKg
gKYu
nBP|
;_c9d
4}%CD
Pc|
U"3C
w_]A
1yIH
/(s
iPad2,3
qu4%c
7C'c
:QVcuD5
f'.X
,%Y1
3:F$W%:
vM^z
T-oA
@NU-
z1be~e
jhgN`
(C8~
;z*7'y
iPad3,2
?`/`Ug^
vLvD
bmzJ
g]go
hFa.
[,f#
}/%@
laMY
pczw
wCT43
ns?@
UH[q
lWwP
DQw&
~VG?
C{q^@
+^XMai
,~ie
;<\r|
A-%^
eg5;
OVYx=
q,9V6
B$5W
1-nnB
d/D_.#E
]?j/
yuzJ
PkDK
!HJ$R
J#0,'
<h:*i
fFri
|e;s
85V|s
rDBt
M-J*
2=Ki
`Bgo
w2I?
xdl#
c-Ta
c@BrG-
%gMK|E
t23O'
d%yz
';xU
G^:3
L4#PlS
?]Vz
,XkF
.z*Y
>;cC
P}:W
gL2ub
m;Nz
M=F=
/}Dw
X/]QF
$#!hi
e5W
e2R6
fY%STu:
G%_k
hehy
}Wk6
:#,UD
oscG
7TQS
qY'R
)s^F
iPod5,1
qF=p
uGHR.
9::4
6HZl
af^_(
izkf
nGV\
tQ;CX
<^r@-
nK[f
m=kv
S#M)
R%B^C7
a:/`
FJJJ
d&z8
x:f$
?}!cO
PNb |>
R~<`"
%g;y
9{'e
?}!c
Hd&z8
Tx:f$
%g;yU
9{'eI
b |>
~<`"
R*(.$:
)-!5
 6B
*(.$:
)-!5
 6B
.lo(
K&Af
XRqx
BIqC
eHupA
xof7
~&yp
iPhone3,3
L"/+
qS5dJB
\IC#
1d$)7
8-hr
lKt]E|
;2WW
{!#;
Z+Zc
Nxh8
%?{Te
E<>s
M}(:
KNMF
OB(c)
O8^VM2\
AQCA
YTib
V@ctw
[2D[
PEFV
'Vq\
ELUW
fxuK
$1_c<L
}KeQU
),T*
AppleTV2,1
iPhone5,3
Vzes
?`C&
4r~Q
RgG"
PTS`
u1~'
T91x
Um>M
s}hF
2j4~
\"$0
 Pm,JK
ZC.V
s o8
jgt"
#P\g
~b]eu:
;_]I
) ;~"
n1b
O}vK
=fbE
hzT)
F9?[
iPad2,1
Qz^L
A }%
d$2k
U&2`
02w2
-'zhWU
`,:r=dD
%{Xpy
QKiL
(3ge'H#u
WE-5
:tUvz
f]:Rn
t~ bxj
drMf
pfT{H
P#8FZ
)m&mM-
;GWM
d2uO
<Wh+=u
ILVJ+
Up(8$
yBU]
il1H
[,PA
@S{d^
4vA{q
}K+
cND0
i8R;l)
Q9 :S
}K+
cND0
i8R;l)
Jb8A
Py0F
RC`@H
[U#'
d?oRt
r0*ORt
\3Y
.fNH
'I,xtih
/f%b[
5#2~
=xW$nX
zR-9>
yL|5
T:?S 
lsdTX
)Up 
CKvUc
k6|B
!?6,
]x*0l:
bx(&J2
Mp<^
21(l
xR4.
SB?K
 M-ip
O6BA
)I.a/
^]30
x{# NM
&%KHmn
[X65wt
AB,/
<?QR
ba9:TW
DG)*
YZ47
$'IJ
!"LO
\_12ji
FE+(ps
;8VU
>=SP
efC@.-
niPhone5,2
ibq+
^-m?
}l#$
g7Q$;:
5]DN
[IQ{Z
$`Rj
\iuh
:\Fb{
AXVVik%4
P0c=eWX
DX`N/
cnWD}m
]~-;
frmaEVAWffac
333333
@ffffff
mcpl
mcpl
?ffffff
@mcpl
@xeps
@mcpl
@supo
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1821501079</string>
<key>application-identifier</key>
<string>com.apple.assistant.assistantd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.BTServer.allowQuickRSSIRead</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.CoreRoutine.LocationOfInterest</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.TimeAppServices.timerclient</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.airplay.carplayavvc</key>
<true/>
<key>com.apple.announced.client</key>
<true/>
<key>com.apple.announced.clientid</key>
<string>com.apple.assistant.assistantd</string>
<key>com.apple.assistant.analytics-observation</key>
<true/>
<key>com.apple.assistant.cdm.client</key>
<true/>
<key>com.apple.assistant.contextprovider</key>
<true/>
<key>com.apple.assistant.multiuser.service</key>
<true/>
<key>com.apple.assistant_service</key>
<true/>
<key>com.apple.atvcached.client</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-opus-codec</key>
<true/>
<key>com.apple.coreaudio.allow-speex-codec</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.coreduetd.people</key>
<true/>
<key>com.apple.corespeech.corespeechd.voiceid.xpc</key>
<true/>
<key>com.apple.corespeech.corespeechd.xpc</key>
<true/>
<key>com.apple.corespeech.xpc</key>
<true/>
<key>com.apple.corespeechd.activation</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.siri.profile</string>
<string>com.apple.siri.data</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.developer.networking.multipath_extended</key>
<true/>
<key>com.apple.duet.appPreference.prediction</key>
<true/>
<key>com.apple.fileprovider.fetch-url</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.intents.extension.discovery</key>
<true/>
<key>com.apple.intents.intents-image-service</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.usage_oracle</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>ITEMIZED_PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>SERVICE_ENTITLEMENT</string>
</array>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.asr</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.borealis</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.LanguageDetectorAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsIPad</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.SpeechEndpointAssets</string>
<string>com.apple.MobileAsset.SpeechEndpointAssetsWatch</string>
<string>com.apple.MobileAsset.RaiseToSpeakAssets</string>
<string>com.apple.MobileAsset.SpeakerRecognitionAssets</string>
<string>com.apple.MobileAsset.TempMorphunData</string>
</array>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.siri.data</key>
<string>com.apple.siri.data</string>
<key>com.apple.siri.profile</key>
<string>com.apple.siri.profile2</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.siri.SpokenNotificationsModule</string>
</array>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.coreservices.cangetcurrentactivityinfo</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.domain-extension</key>
<true/>
<key>com.apple.private.feedbacklogger</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.homekit</key>
<true/>
<key>com.apple.private.homekit.multi-user.setup</key>
<true/>
<key>com.apple.private.homekit.siri-audio-connection</key>
<true/>
<key>com.apple.private.ids.link-preferences</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
<string>com.apple.private.alloy.siri.device</string>
<string>com.apple.private.alloy.siri.location</string>
<string>com.apple.private.alloy.siri.icloud</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
<string>com.apple.private.alloy.siri.device</string>
<string>com.apple.private.alloy.siri.location</string>
<string>com.apple.private.alloy.siri.icloud</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.ess</string>
<string>com.apple.private.ac</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
</array>
<key>com.apple.private.intents.extension</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.memorystatus</key>
<true/>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.networkserviceproxy</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.security.storage.CallHistory</key>
<true/>
<key>com.apple.private.security.storage.HomeKit</key>
<true/>
<key>com.apple.private.security.storage.triald</key>
<true/>
<key>com.apple.private.siri-morphunassetsupdaterd</key>
<true/>
<key>com.apple.private.speech-model-training</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceWillow</string>
<string>kTCCServiceReminders</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMotion</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.siri.NotificationSource</string>
</array>
<key>com.apple.private.usernotifications.settings</key>
<array>
<string>read</string>
</array>
<key>com.apple.proactive.eventtracker</key>
<true/>
<key>com.apple.rapport.siri</key>
<true/>
<key>com.apple.runningboard.launchprocess</key>
<true/>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.security.app-sandbox</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.weather</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/mobile/Library/Trial/NamespaceDescriptors</string>
<string>/private/var/mobile/Library/Trial/Treatments/322</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Voicemail/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Voicemail/</string>
<string>/Library/Logs/CallHistory</string>
<string>/Library/CallHistoryDB/</string>
<string>/Media/Recordings/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.CompanionLink</string>
<string>com.apple.siri.activation</string>
<string>com.apple.siri.activation.horseman</string>
<string>com.apple.siri.activation.application</string>
<string>com.apple.FileCoordination</string>
<string>com.apple.MobileTimer.alarmserver</string>
<string>com.apple.MobileTimer.timerserver</string>
<string>com.apple.rapport.siri</string>
<string>com.apple.siri.VoiceShortcuts.xpc</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.voicemail.vmd</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.watchlistd.xpc</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.itunescloud.music-subscription-status-service</string>
<string>com.apple.siri.siriaudio-helper</string>
<string>com.apple.controlcenter.remoteservice</string>
<string>com.apple.announced.server</string>
<string>com.apple.announced.localplaybacksession</string>
<string>com.apple.siri.morphunassetsupdaterd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.raisetospeak</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>H11ANEInDirectPathClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOSurfaceRootUserClient</string>
<string>IOTimeSyncClockManagerUserClient</string>
<string>IOTimeSyncDomainUserClient</string>
<string>IOTimeSyncgPTPManagerUserClient</string>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.system-group-containers</key>
<array>
<string>systemgroup.com.apple.osanalytics</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.desktop.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.commcenter.xpc</string>
</array>
<key>com.apple.siri.VoiceShortcuts.xpc</key>
<true/>
<key>com.apple.siri.acousticsignature</key>
<true/>
<key>com.apple.siri.activation</key>
<true/>
<key>com.apple.siri.analyzer</key>
<true/>
<key>com.apple.siri.clientScripter</key>
<true/>
<key>com.apple.siri.client_lite</key>
<true/>
<key>com.apple.siri.embeddedspeech</key>
<true/>
<key>com.apple.siri.opportune_speaking_model_service</key>
<true/>
<key>com.apple.siri.siriaudio-helper</key>
<true/>
<key>com.apple.siri.sync_deep_verification</key>
<true/>
<key>com.apple.siri.task.client</key>
<true/>
<key>com.apple.siriknowledged</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
<string>modify-calls</string>
<string>access-call-capabilities</string>
<string>modify-call-capabilities</string>
</array>
<key>com.apple.visualvoicemail.client</key>
<true/>
<key>com.apple.voicetrigger.voicetriggerservice</key>
<true/>
<key>com.apple.watchlist.private</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>511712240</string>
<key>keychain-access-groups</key>
<array>
<string>com.apple.assistant</string>
<string>apple</string>
</array>
</dict>
</plist>
mcpl
333333
