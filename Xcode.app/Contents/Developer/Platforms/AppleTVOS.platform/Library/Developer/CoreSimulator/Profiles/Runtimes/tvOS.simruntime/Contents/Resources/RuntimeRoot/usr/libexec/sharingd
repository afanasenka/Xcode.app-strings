sd_connectionBundleID
processIdentifier
stringWithFormat:
_xpcConnection
valueForEntitlement:
initWithUTF8String:
boolValue
sd_description
sd_connectionProcessName
sd_connectionHasEntitlement:
countByEnumeratingWithState:objects:count:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
addObserver:forKeyPaths:options:context:
removeObserver:forKeyPaths:context:
UTF8String
standardUserDefaults
objectForKey:
removeObjectForKey:
setObject:forKey:
defaultCenter
postNotificationName:object:
sharedDaemon
start
mainRunLoop
setTransfer:
isActivated
removeStatusMonitorObservers
setTransferTypes:
addStatusMonitorObservers
setIsActivated:
selectedAction
triggerSelectedActionIfAppropriate
prepareOrPerformOpenAction
setLocalizedTitle:
setContentsTitle:
setContentsDescription:
setUserResponse:
shouldUpdateUserResponse
prepareForAccept
minRequiredTransferState
maxTransferState
requiresUnlockedUI
actionHandler
setMaxTransferState:
stringWithString:
handlingAppInstalled
senderCompositeName
openURL:withOptions:
openURLs:bundleIdentifier:
applicationProxyForBundleProxy:
removeItemAtURLToFreeUpSpace:
hasFiles
hasLinks
setHandlingAppInstalled:
setHandlingAppBundleID:
_hasFiles
_hasLinks
_isActivated
_handlingAppInstalled
_transfer
_bundleProxy
_handlingAppBundleID
discreteProgressWithTotalUnitCount:
consumeSandboxExtensions
addClientForNode:shouldPublishProgress:
serversChanged:
initWithPerson:items:forDiscovery:
setShouldPublishProgress:
removeObserver:name:object:
removeObserver:forKeyPath:
releaseSandboxExtensions
postNotificationForTransferStatus:progress:
removeClientAlerts
fractionCompleted
completedUnitCount
sf_personRealName
sf_initWithAppBundle:sessionID:andPersonRealName:
addChild:withPendingUnitCount:
mainThread
observeValueForKeyPath:ofObject:change:context:
isCancelled
airDropClient:event:withResults:
startProgress
handleConversionProgress:
auditToken
_airDropClients
_allowedWaiting
_conversionActive
_conversionNotified
_conversionObserver
_conversionProgress
_currentNames
_hadConversion
_items
_progressObserver
_responseClient
_results
_rootNodeName
_sandboxExtensions
_sandboxExtensionHandles
_siblingNodes
_transferProgress
_auditToken
_requestCreatedDate
_requestIdentifier
_deviceIdentifier
_completionHandler
_timeoutTimer
_timeoutTimeInterval
_error
_previousKeyIdentifier
_linkClient
command
_advertisementPayload
_command
_messageIdentifier
_activityIdentifier
responseTimer
setResponseTimer:
pairingAKSSession
setPairingAKSSession:
setSessionQueue:
_pairingAKSSession
_sessionQueue
_aksSession
_responseTimer
setHasSupportsACK:
_supportsACK
bundleProxyForIdentifier:
isVerifiableIdentity
setSingleItemLocalizedTitle:
setShouldUpdateUserResponse:
setMinRequiredTransferState:
triggerAppStoreSearch
cancelAction
action
anyObject
isFile
logReceiverBundleID:forAppProxy:andURL:
openURL:configuration:completionHandler:
setKeyFailed:
setHasKeyFailed:
_keyFailed
_webLinksHandler
setDeviceID:
wifiRequest
setWifiRequest:
promptingForApproval
removeAuthorizationRequestNotification
sessionQueue
invalidateAssertionTimer
logAutoUnlockEnd
sessionCompleted
setSessionCompleted:
shouldAlertOnNotify
alertOfUnlock
deviceDisconnected:
notifyDelegateWithError:
userRequestRequired
alerted
setAlerted:
showUnlockedByDeviceNotificationWithDeviceID:
setAwdlStart:
setRangingIntiator:
handleWiFiRequestStartedWithStartAWDLHandler:
setQueueAvailableHandler:
awdlNetworkStarted
invalidateResponseTimer
setAwdlStartedHandler:
handleWiFiRequestInvalidated
awdlStart
setWifiRequestStartedHandler:
createAuthTokenIfReady
messageType
hasSenderID
senderID
payload
handleAWDLInfo:
beginAKSSession
handleAuthPromptRequest:
handleAuthPromptImageData:
handleSessionKeyExchangeResponse:
handleUnlockConfirmation:
logAutoUnlockStart
declareSystemActivityAssertion
useAKSToken
useToken
setRemoteAWDLInfo:
authPrompt
setOldApproveProtocol:
setUserRequestRequired:
appName
setAppName:
setLegacyProtocol:
hasIconHash
setIconCache:
iconCache
iconHash
iconImageDataForHash:
setUsingImageCache:
setAuthPromptIconData:
promptForApproval
setNeedsImageData:
setAuthPromptIconHash:
sendAuthPromptResponseWithData:error:
hasImageData
usingImageCache
authPromptIconData
imageData
appendData:
finalMessage
hasKey
setExchangeResponse:
createWiFiRequest
hasKeyFailed
keyFailed
sendSessionAuthToken:error:
exchangeResponse
unlockAllowed
wifiRequestStartedHandler
aksSession
stepSessionWithData:outputData:
generateSessionToken
setSessionRangingKey:
sessionRangingKey
remoteAWDLInfo
peerListFromAWDLInfo:
setPeerList:
peerList
setClRangingPeer:
setRangingPeer:
errorRequestingUnlock
success
hasSupportsACK
supportsACK
sendConfirmationACK
confirmSession
setAksSuccess:
aksSuccess
authPromptIconHash
cacheIconImageData:hash:appName:
wifiEnabled
awdlInfoData
setUseToken:
setSupportsConfirmationACK:
wrapPayload:withType:
sendData:bleDevice:direct:completionHandler:
restartResponseTimer:
needsImageData
sendData:type:errorHandler:
setUsingRecord:
setKey:
setAuthToken:
setSuccess:
setShouldAlertOnNotify:
restartAssertionTimer
assertionTimer
setAssertionTimer:
keyCanUnlock
sendAWDLInfoWithKeyData:error:
sendKeyExchangeRequestWithData:error:
sentAWDLInfo
setSentAWDLInfo:
promptedForApproval
setPromptedForApproval:
setPromptingForApproval:
oldApproveProtocol
setUnlockAllowed:
setErrorRequestingUnlock:
transaction
setTransaction:
powerAssertionID
setPowerAssertionID:
powerAssertionState
setPowerAssertionState:
remoteCacheID
setRemoteCacheID:
proxyRequestData
setProxyRequestData:
_wifiEnabled
_sentAWDLInfo
_userRequestRequired
_sessionCompleted
_alerted
_shouldAlertOnNotify
_promptedForApproval
_promptingForApproval
_oldApproveProtocol
_needsImageData
_usingImageCache
_errorRequestingUnlock
_powerAssertionState
_unlockAllowed
_wifiRequestStartedHandler
_remoteCacheID
_peerList
_proxyRequestData
_assertionTimer
_exchangeResponse
_authPromptIconData
_iconCache
_authPromptIconHash
requestData
setRequest:
handleSetupRequest
onqueue_cancel
request
hasLtkHash
ltkHash
waitingForLTK
sendSetupSessionCreatedWithLocalKey:stepData:error:failureReason:ltkSyncing:
watchLTKsChanged:
setWaitingForLTK:
setCompanionViewNotSyncing:
setCompanionNeedsUnlock:
setCompanionCurrentlySyncing:
ltkHashMatches
companionViewNotSyncing
companionNeedsUnlock
companionCurrentlySyncing
hasToken
token
generateEscrowSecret
sendSetupCreateEscrowRecordStepData:error:
setLongTermKey:
setToken:
setFailureReasons:
setLtkSyncing:
setLtkHash:
setWatchOldLTKSyncStatus:
setWatchNewLTKSyncStatus:
handleCreateEscrowSecret:
canCreatePairing
sendKeyDeviceLocked
requestedLTKForRemote
setRequestedLTKForRemote:
longTermKey
_waitingForLTK
_requestedLTKForRemote
_companionViewNotSyncing
_companionNeedsUnlock
_companionCurrentlySyncing
_request
_longTermKey
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:escrowSecret:usingEscrow:externalACMContext:
setupSession
sessionType
remoteLTK
originator
fixRemoteLTKWithStatus:retryBlock:
usingEscrow
escrowSecret
setupAuthorizationSession
setRemoteLTK:
fixRemoteLTK
ltkNeedsFixing
setLtkNeedsFixing:
setSessionType:
setOriginator:
setEscrowSecret:
setUsingEscrow:
_ltkNeedsFixing
_originator
_usingEscrow
_remoteLTK
_sessionType
_escrowSecret
_deviceID
decryptionKey
updateWithRawAdvertisementData:receivedViaScanning:isReplay:newAdvertisementHandler:
lastCounter
lastActivityAdvertisement
lastAdvertisementPayload
lastAdvertisementOptions
initWithAdvertisementVersion:advertisementPayload:options:device:
disableDuplicateFilterOnce
lastRawAdvertisementData
lastUsedKeyIdentifier
setLastUsedKeyIdentifier:
lastAdvertisementData
_lastReceivedAdvertisementDate
_deviceTracked
_disableDuplicateFilterOnce
_idsDevice
_lastRawAdvertisementData
_lastUsedKeyIdentifier
_lastAdvertisementData
potentiallyInvalidate
_nodes
dataFromTXTRecordDictionary:
updateTXTRecordAndNotify
publishCallBack:
_port
_retryCount
_txtRecord
_bonjourNameConflictDetected
generatedError
passcode
validatePasscode:
sendSetupRequest
userInfoForKeychainMismatch
userInfoForInternetSharing
localDeviceIDSRegistered
userInfoForWatchNotSignedIn
userInfoForMacNotSignedIn
onqueue_updateForCloudPairing
unlockEnabled
waitingForCloudPairing
handleSuccessfulPairing
userInfoForNoWristDetectionNoPasscode
userInfoForNoWristDetection
userInfoForNoPasscode
userInfoForNoCommunincation
sendState
userInfoForNotCloudPaired
setupError
watchExistedInUnlockList
remoteLTKHash
keyDeviceModel
companionDeviceModel
keyExchangeInterval
tokenExchangeInterval
keyDeviceLocked
upsellDevice
responseTimeout
responseTimeoutFromServer
messageTimeout
messageTimeoutFromServer
setupRetryDevice
watchOldLTKSyncStatus
watchNewLTKSyncStatus
receivedSetupACK
receivedTokenACK
ltkTimer
handleLTKTimerFired
setLtkTimer:
handleEscrowSessionRequest
ltkTimerRetryCount
setLtkTimerRetryCount:
restartLTKTimer
userInfoForMissingLTK
userInfoForWatchLocked
setSessionCreatedMessage:
sessionCreatedMessage
hasWatchOldLTKSyncStatus
hasWatchNewLTKSyncStatus
setRemoteLTKHash:
hasFailureReasons
failureReasons
userInfoCompanionViewNotSyncing
userInfoForiPhoneNeedsUnlock
userInfoForOldProtocol
userInfoForNewProtocol
sendCreateEscrowSecretWithStepData:sessionID:
ltkSyncing
finalizeEscrowPairing:
hasPairedDeviceID
pairedDeviceID
setCompanionDeviceModel:
setUnlockEnabled:
setWaitingForCloudPairing:
setSendState:
setRemoteNeedsLTK:
setKeyExchangeDate:
setSetupError:
sendPayload:toDevice:type:sessionID:queueOneID:wantsACK:timeout:completion:
setSetupMessageIdentifier:
setTokenExchangeDate:
setTokenMessageIdentifier:
setKeyDeviceLocked:
handleKeyDeviceLocked
keyExchangeDate
setKeyExchangeInterval:
handleSetupSessionCreated:
tokenExchangeDate
setTokenExchangeInterval:
handleSetupCreateRecord:
setupMessageIdentifier
tokenMessageIdentifier
setReceivedSetupACK:
setReceivedTokenACK:
updateForCloudPairing
notifyDelegateKeyDeviceIsLocked
invalidateLTKTimer
setKeyDeviceModel:
setResponseTimeout:
setResponseTimeoutFromServer:
setMessageTimeout:
setMessageTimeoutFromServer:
_upsellDevice
_setupRetryDevice
_placeholder
_waitingForCloudPairing
_keyDeviceLocked
_unlockEnabled
_receivedSetupACK
_receivedTokenACK
_errorType
_watchOldLTKSyncStatus
_watchNewLTKSyncStatus
_passcode
_sendState
_keyDeviceModel
_companionDeviceModel
_setupError
_ltkTimer
_sessionCreatedMessage
_responseTimeout
_responseTimeoutFromServer
_messageTimeout
_messageTimeoutFromServer
_ltkTimerRetryCount
_keyExchangeDate
_tokenExchangeDate
_keyExchangeInterval
_tokenExchangeInterval
_remoteLTKHash
_setupMessageIdentifier
_tokenMessageIdentifier
sortedArrayUsingSelector:
initWithContacts:iconData:atIndex:cacheLookupKey:
_contacts
setHasNeedsImageData:
hasNeedsImageData
setHasUsingRecord:
_key
_usingRecord
setSender:
setBytesPerSec:
setLegacy:
setBrowserID:
setAwdlVersion:
setPlatform:
setRssi:
setStartTimestamp:
setSessionDuration:
setFirstDiscovery:
setTotalPeersDiscovered:
setMaxPeersDiscovered:
setLegacyMode:
setActivityType:
initWithNode:protocol:flags:kind:
helperConnection
setHelperConnection:
setBundleID:
nodes
sidebarNodes
nodeBrowser:nodesChangedForParent:protocol:error:
copyRootNode
mode
bundleID
boostMessage
delegate
_rootNode
_mode
_nodeBrowsers
_options
_transaction
_bundleID
_kind
_objectKey
_boostMessage
_delegate
_connection
_isEntitled
setContactIDs:
_imageTitle
_image
_cacheLookupKey
_contactIDs
dictionaryRepresentation
numberWithUnsignedInt:
allocWithZone:
setHasVersion:
hasVersion
setHasErrorCode:
hasErrorCode
readFrom:
writeTo:
copyTo:
mergeFrom:
errorCode
_errorCode
_version
_has
weakObjectsHashTable
observers
methodForSelector:
promptInfo
deviceNameForDeviceID:
notificationTimer
dismissNotification
suggestionNotificationTimedOut
notifyObservers:
setNotificationTimer:
showAuthorizationRequestNotificationWithDeviceID:appName:appIcon:completion:
showSuggestionNotificationWithDevice:
showMacUnlockedNotificationWithDuration:
showSetupRetryNotificationWithDevice:
showFileRadarNotificationWithCompletion:
restartNotificationTimer:
invalidateNotificationTimer
setObservers:
setPromptInfo:
radarNotificationCompletion
setRadarNotificationCompletion:
_doubleClickListener
_cancelListener
_observers
_promptInfo
_notificationTimer
_radarNotificationCompletion
accountID
setAccountID:
bluetoothDiscovery
setBluetoothDiscovery:
bonjourDiscovery
setBonjourDiscovery:
bonjourTXTRecordDiscovery
setBonjourTXTRecordDiscovery:
bonjourResolveComplete
setBonjourResolveComplete:
tcpConnectionComplete
setTcpConnectionComplete:
tlsHandshakeComplete
setTlsHandshakeComplete:
identityQueryComplete
setIdentityQueryComplete:
totalDiscovery
setTotalDiscovery:
verifiableIdentity
setVerifiableIdentity:
_accountID
_sessionID
_modelName
_bluetoothDiscovery
_bonjourDiscovery
_bonjourTXTRecordDiscovery
_bonjourResolveComplete
_tcpConnectionComplete
_tlsHandshakeComplete
_identityQueryComplete
_totalDiscovery
_verifiableIdentity
substringToIndex:
valueWithNonretainedObject:
makeActivatedConnection
monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:
monogramImagesForMultipleContacts:style:diameter:monogramsAsFlatImages:
groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:
nickname
setMiddleName:
stringFromContact:
longValue
appendBytes:length:
bundleForClass:
resourceURL
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
initWithServiceType:
debugInfoRequested:
activityContinuationPayloadSent:
servicesContainIdentifier:
publish
_setIncludesAWDL:
getInputStream:outputStream:
initWithInputStream:outputStream:isClient:
initWithAuthorData:streamHandler:
getStreamsWithCompletionHandler:
unpublish
publishTimerFired:
initWithDomain:type:name:port:
scheduleInRunLoop:forMode:
publishWithOptions:
restartPublishTimer
removeFromRunLoop:forMode:
managerID
initWithStreamHandler:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
registerConnectedStreams
unregisterConnectedStreams
addService:
removeService:
registerManager:
unregisterManager:
service
setService:
managers
setManagers:
companionServices
setCompanionServices:
incomingStreams
setIncomingStreams:
continuationStreams
setContinuationStreams:
connectedStreams
setConnectedStreams:
publishTimer
setPublishTimer:
_serviceType
_managers
_companionServices
_incomingStreams
_continuationStreams
_connectedStreams
_publishTimer
descriptionWithLevel:
_ensureClientStopped
_ensureServerStopped
_uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:
_uiStartRepair:flags:
_uiStartSetupiOS:autoStart:
_uiStartSetupB238:extraInfo:
_uiStartWithDevice:viewControllerName:label:unlessApps:extraInfo:
_uiStartHomeKitDeviceDetectedWithURL:
_ensureClientStarted
_ensureServerStarted
_repairEnsuredStarted
_repairEnsuredStopped
_iTunesAccountsChanged
_appleAccountSignIn:
_hsa2Changed
_uiLockStatusChanged
_screenStateChanged
_wifiStateChanged
_scanTimerFired
_watchFound:
_resetTriggers
_postDeviceSetupNotificationForDevice:present:
_uiStopIfNeededWithDevice:
_screenLocked
fastScanCancel:
isProximitySetupToNewDeviceAllowed
_uiStartPair:extraInfo:
_uiStartAppleTVSetup:extraInfo:
_launchAppWithMachServiceName:
_repairSilentStart:
_uiStartSetupWHA:
_uiStartAuthenticateAccounts:
isWiFiPasswordSharingAllowed
_shouldOfferPassword:
_uiStartWiFiPasswordSharing:
_uiStartWithDevice:viewControllerName:xpcEndpoint:label:extraInfo:
_uiStartForMacWithDevice:label:extraInfo:
_watchFastScanStop
_watchFastScanStartIfAllowed:
_uiStartSetupWatch:
estimatedRSSI
_pinPairHandleRequest:
dismissPinDialogWithToken:
setSfService:
_pinPairHandleShowPIN:
setShowPINHandler:
_pinPairHandleHidePIN
handleServerRequest:
mediaRemoteServiceProxy
showPinDialogWithOptions:completion:
_repairProblemFlagsChanged
_repairHandleManateeChanged
createConnectionForEnabledEnterpriseConfiguration
lastDisconnectError
_repairVPNError:
setStatusHandler:
setProblemFlags:
_repairHandleCompletion
setProgressHandler:
_repairProblemCheck
invalidateWithFlags:
_repairSilentProgress:info:
foundTicks
setTriggerMs:
_repairUpdateIDSCache
setOsVersion:
_uiStartProxCardKitTest:extraInfo:
_openSetupURL:
_pwsHandleUserResponse:device:info:
_pwsHandleProgressEvent:info:
testSetupUIiOS:
preventRepair
_bleAuthTagFilter
_pbsMediaService
_pinPairDialogToken
_pinPairService
_pinPairSession
_pinPairUUID
_profilesNotifyToken
_pwsAutoGrantingEnabled
_pwsGrantingEnabled
_scanEligible
_scanSeconds
_setupURL
_shouldScan
_triggeredUIAppleTVPair
_triggeredUIAppleTVSetup
_renableB238SetupAfterWiFi
_triggeredUIB238Setup
_triggeredUIiOSSetup
_triggeredUIRepair
_triggeredUIWatchSetup
_triggeredUIWHASetup
_triggeredUIAuthenticateAccounts
_vpnCnx
_watchFastScanLastEndTicks
_watchFastScanTimer
_watchSetupDevices
_watchMigrationEnabled
_watchMigrationLastTicks
_watchSetupEnabled
_watchSetupScanner
_airplayActive
_airplayNotifyToken
_cdpEnabled
_iTunesNotifyToken
_manateeMonitor
_manateeProblem
_problemFlags
_problemNotifyToken
_repairEnabled
_repairService
_repairSession
_repairSilent
_repairTimer
_wifiHealthMonitor
_wifiBad
_wifiBad8021x
_prefRepairAccounts
_prefRepairHomeKit
_prefRepairVPN
_prefRepairWiFi
_preventRepair
notifyClientForEvent:withProperty:
requireAWDL
set_socketStreamProperties:
setTimeoutIntervalForRequest:
setRequestCachePolicy:
set_connectionCachePurgeTimeout:
setConnectionProxyDictionary:
setHTTPMaximumConnectionsPerHost:
setHTTPShouldUsePipelining:
set_allowsTCPFastOpen:
setTLSMaximumSupportedProtocol:
setHTTPAdditionalHeaders:
mainQueue
sessionWithConfiguration:delegate:delegateQueue:
storePropertyValue:forKey:
donateTransferInteractionToDuet
cancelSendingClassroom
startZipping
logInterfaceUsedForSending:
parseAskResponse:
retryRequestForError:
parseDiscoverResponse:
didStartSendingAskBodyData
didFinishSendingAskBodyData
didFail:
didFinishLoading
shouldCancelTransferForError:
_CFURLResponse
connectionOverP2P:
transactionMetrics
_remoteAddressAndPort
_localAddressAndPort
secureConnectionStartDate
fetchStartDate
secureConnectionEndDate
responseEndDate
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
evaluateReceiverTrust:completion:
credentialWithIdentity:certificates:persistence:
copyReadStream
sendRequest:
host
port
addHashesAndValidationRecordToRequest:
requestWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
discoverBodyDataInFormat:
askBodyDataInFormat:
_CFURLRequest
uploadTaskWithRequest:fromData:
uploadTaskWithStreamedRequest:
setSkipReadableCheckFiles:
setSourceFiles:
temporaryWeblocURL:
dataWithContentsOfURL:
webURLFromInternetLocationFile:
internetLocationFile:
realPathURL:
replaceFileURLsWithRealPaths
generatePreviewForFileURL:
appendFileURL:withBase:toItems:
convertMediaItemsWithCompletionHandler:
startSendingItems:withProperties:toPersonWithID:clientBundleID:airDropClientDelegate:
cancelSendingItemsToPersonWithID:sessionID:clientBundleID:
fileURLWithPath:isDirectory:
startPublishingProgress
startSendingClassroom
removeFileIconsFromProperties
validateAirDropItemsWithCompletionHandler:
createSession
splitOutFileURLs
readingIntentWithURL:options:
initWithFilePresenter:
startSending
coordinateAccessWithIntents:queue:byAccessor:
finishTasksAndInvalidate
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
copyReceiverPublicKey
releasePeerToPeerIfPossible:
tmpDirectory
shouldPublishProgress
_askResponse
_askTask
_cancelled
_compressionType
_connectionKey
_discoverResponse
_discoverTask
_failCount
_fileIcon
_fileURLs
_fileURLToConversionNeeded
_generatedFiles
_mediaFormatConversionDestinations
_metric
_otherStuff
_p2pRetained
_providedStream
_receiverData
_sendingLivePhotoJPEGs
_serverTrust
_serverURL
_shouldPublishProgress
_smallFileIcon
_tmpDirectoryToCleanUp
_uploadFinished
_uploadResponse
_uploadTask
_weblocURLs
_xpcHelperConnection
_zipperFinished
userResponse
needsAction
loadAllPersistedTransfers
updatedTransfer:
removedTransfer:
transferIdentifierToHandler
transferIdentifierToTransfer
kvoObservingKeys
notifyObserversOfRemovedTransfer:
cleanUpTransfer:
transferURLForTransfer:
cleanUpURL:
initWithIdentifier:initialInformation:
updateWithInformation:
itemTypesForTransfer:
metaData
setItems:
items
determineHandlerForTransfer:
setHandler:forTransfer:
canAutoAccept
setDidAutoAccept:
setTransferState:forTransfer:shouldNotify:
possibleActions
transfer:actionTriggeredForAction:
transferState
failTransfer:withState:failureReason:
transferUserResponseUpdated:
notifyObserversOfUpdatedTransfer:
customDestinationURL
classroomDelegate
failureReason
removeTransfer:shouldCleanup:
transferTypes
actionSelected:
arrayByAddingObjectsFromArray:
initWithTransfer:
canHandleTransfer
setTransferState:forTransfer:shouldNotify:shouldCleanup:
handlerFailedForTransfer:
transferUpdated
setFailureReason:
setTransferState:
persistedTransfersBaseURL
path
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
initWithType:subtype:isFile:
incrementCount
rawFiles
completedURLs
isFileURL
URLOverrideForURL:
applicationsAvailableForOpeningURL:
applicationIdentifier
setTransferIdentifierToTransfer:
setTransferIdentifierToHandler:
setKvoObservingKeys:
_classroomDelegate
_transferIdentifierToTransfer
_transferIdentifierToHandler
_kvoObservingKeys
initWithDelegate:queue:
addObservers
_activate
state
shouldStart
encryptedAdvertisingInformation
startGoodbyeTimer
preventIdleSleepAssertion
startAdvertisingOfType:withData:withOptions:
invalidateGoodbyeTimer
stopAdvertisingOfType:
releaseIdleSleepAssertion
restart
uniqueID
cachedDecryptionKeyForDeviceIdentifier:
isValidKey
setValidKey:
lastUsedCounter
setKeyCounter:
pairedDevicesChanged:
_enumerateRemoteObjectProxiesUsingBlock:
remoteObjectProxyForConnection:usingBlock:
enumerateRemoteObjectProxiesUsingBlock:
establishConnectionWithCompletionHandler:
loginIDWithOptions:completionHandler:
peerForUUID:completionHandler:
pairedSFPeerDevicesWithOptions:completionHandler:
advertiseAdvertisementPayload:options:withErrorHandler:
interfaceWithProtocol:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
activityPayloadForAdvertisementPayload:command:requestedByDevice:withCompletionHandler:
didSendPayloadForActivityIdentifier:toDevice:error:
setClass:forSelector:argumentIndex:ofReply:
activeConnections
resetStateRequested:
systemWillSleep:
removeObserver:
goodbyeTimeoutFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
createAdvertisingInformation
dataWithCapacity:
setLength:
mutableBytes
getTagAndCounterWhileEncryptingBytesInPlace:forAdvertisementWithVersion:handler:
continuity:didStopAdvertisingOfType:withError:
localizedDescription
updateAdvertiser
sendActivityPayloadWithAdvertisementData:forAdvertisementPayload:activityIdentifier:activityPayload:
appleID
idsDeviceFromBTIdentifier:
allPeerBTIdentifiers
continuityDidUpdateState:
continuity:didStartAdvertisingOfType:
continuity:didStopAdvertisingOfType:
continuity:didFailToStartAdvertisingOfType:withError:
continuity:didStartScanningForType:
continuity:didStopScanningForType:
continuity:didFailToStartScanningForType:withError:
continuity:didDiscoverType:withData:fromPeer:
continuity:didLosePeer:type:
continuity:didStartTrackingPeer:type:error:
continuity:didStopTrackingPeer:type:
stopForReason:
resumeForReason:
activityServiceDevicesChanged:
_remoteObjectProxyForConnection:usingBlock:
machServiceName
exportedInterface
remoteObjectInterface
shouldAcceptNewConnection:
connectionEstablished:
connectionInvalidated:
removeObservers
consoleUserChanged:
continuity:continuityDidStopAdvertisingOfType:withError:
_versionByte
_monitor
_continuity
_goodbyeTimerInterval
_goodbyeTimer
_shouldNotAdvertiseRequesters
_advertisingEnabled
_isAdvertising
_advertisingTransaction
_rawAdvertisementData
_advertisementData
_powerAssertionID
_currentAdvertisementPayload
_currentAdvertisementOptions
_currentErrorHandler
checkResourceIsReachableAndReturnError:
openCompletedItemsWithFilesApp
saveCompletedItemsToiCloudDrive
useOpenWithText
setUseOpenWithText:
_iCloudDriveURL
_action
_useOpenWithText
activityService
accounts
loginID
isActivityContinuationAllowed
supportsHandoff
setActivityService:
setShouldStart:
setAllPeerBTIdentifiers:
setAppleID:
_shouldStart
_allPeerBTIdentifiers
hasBundleID
setHasLegacyMode:
hasLegacyMode
setHasStartTimestamp:
hasStartTimestamp
setHasFirstDiscovery:
hasFirstDiscovery
setHasSessionDuration:
hasSessionDuration
setHasTotalPeersDiscovered:
hasTotalPeersDiscovered
setHasMaxPeersDiscovered:
hasMaxPeersDiscovered
setHasTransfersInitiated:
hasTransfersInitiated
setHasTransfersCompleted:
hasTransfersCompleted
legacyMode
startTimestamp
firstDiscovery
sessionDuration
totalPeersDiscovered
maxPeersDiscovered
_startTimestamp
_firstDiscovery
_maxPeersDiscovered
_sessionDuration
_totalPeersDiscovered
_legacyMode
hashTableWithOptions:
sessionManagerQueue
onqueue_start
addNotificationsObservers
sharedTransport
setPrimaryClient:
deviceNearby
initializeAttemptState
initializeCaptureBlock
updateAdvertising
loadPresentedBluetoothError
loadPresentedWiFiError
setCachedMacWiFiState:
setCachedWatchWiFiState:
autoUnlockEligibleDevicesWithCloudPairing:
updateApproveBluetoothIDs
handleBLEDataReceivedNotification:
keyBagLockStateChange:
handleWiFiPowerChanged:
observerTable
allObjects
session:didReceiveKeyDeviceLocked:
session:didEnableWithDevice:
session:didFailToEnableDevice:error:
session:didBeginAttemptWithDevice:
session:didCompleteUnlockWithDevice:
session:didFailUnlockWithResults:error:incrementedAttempt:
incrementedCountID
triggerCloudPairRetryWithShortRetryDeviceIDs:
appleWatchExisted
watchSeenRecently
placeholderDevice
lastSeenWatchDate
setEligibleDevices:
modelDescription
setName:
createPairingLockSessionWithDevice:passcode:
notifyObserverOfFailedToEnableDevice:error:
lockPairingSessions
cancelEnablingAutoUnlockForDeviceID:
canceled
cancel
sessionID
disablePairingForDeviceID:pairingID:
pairingIDForWatchID:
attemptAutoUnlockForType:preventRadarNotification:
attemptAutoUnlockForType:externalACMContext:preventRadarNotification:bundlePath:appName:reply:
setAttemptActivatedHandler:
setAttemptType:
setAttemptBundlePath:
setAttemptAppName:
setAttemptExternalACMContext:
setPreventRadarNotification:
generateAttemptForType:
attemptAutoUnlock
setModelName:
setUniqueID:
notifyObserverOfAttemptBeganWithDevice:
notifyObserversOfUnlockFailureWithResults:error:
attemptExternalACMContext
setHintToken:
setResults:
notifyObserversOfUnlockCompletionWithDevice:
setConnectedBluetoothDevices:
setTimeSinceLastMachineWake:
setLastSleepType:
attemptCount
connectedBluetoothDevices
timeSinceLastMachineWake
lastSleepType
setAttemptStart:
enabledAutoUnlockDevicesUsingCache:
macBeenUnlocked
setAttemptInProgress:
cachedMacWiFiState
attemptType
presentedWiFiError
setAttemptID:
supportsApproveWithWatch
bluetoothID
supportsAlwaysDirect
proxyBluetoothID
idsDeviceForBluetoothID:
majorOSVersion
setScanAutoUnlockDevices:
sharedNearbyAgent
setAutoUnlockActive:
startScannerWithWatchBluetoothIDs:phoneBluetoothIDs:
supportsHEIC
createLockSessionWithWatchDevice:
createProxySessionWithDeviceID:
generateAppIconImageWithOptions:
restartScanTimer:
errorCodeForBluetoothEnabled:wifiEnabled:
errorStringForBluetoothEnabled:wifiEnabled:
shouldShowErrorForBluetoothEnabled:
attemptActivatedHandler
setAttemptDevice:
setAuthSessionError:
setIncrementedCountID:
setProxyNotAvailableForUnlock:
setScanWatchIDs:
setScanPhoneIDs:
invalidateScanner
cleanUpProxySessions
wifiStateNeedsUpdating
cancelAutoUnlockWithCancelReason:usingTool:
attemptID
setAttemptCount:
attemptDevice
stringForState:
authPromptInfo
disablePairingWithKeyDevice:
sendDisableMessageToDeviceID:pairingID:
setVersion:
setPairingID:
sendPayload:toDevice:type:sessionID:timeout:errorHandler:
initWithData:
pairingID
updateDynamicStoreEnabled
keyPairingIDForDeviceID:
keyPairingSessions
canceledPairingKeySessions
disableKeyPairingForDeviceID:
hasPairingID
deleteEscrowSecretForDeviceID:
deleteRangingKeyForDeviceID:
initWithDevice:sessionID:
setPasscode:
placeholder
setPlaceholder:
suggestionManager
suggestedDeviceID
setSuggestedDeviceID:
setupRetryDeviceID
setSetupRetryDeviceID:
setSetupRetryDevice:
setUpsellDevice:
setRequestData:
logDevices
setIdentifier:
lockAuthSessions
initWithAutoUnlockDevice:sessionID:bleDevice:
setUseProxy:
attemptStart
setStartDate:
supportsEncryption
setUseEncryption:
setExternalACMContext:
locksWithAKSTokens
setUseAKSToken:
keyAuthSessions
initWithBLEDevice:sessionID:
keysWithAKSTokens
cachedWatchWiFiState
setWifiEnabled:
handleMessageWithWrapper:
bluetoothIDForIDSID:
proxySessions
initWithDevice:sessionID:bleDevice:
modelIdentifierForDeviceID:
setModel:
proxyErrorCode
lastProxyState
setLastProxyState:
setScanErrorString:
setProxyErrorCode:
updateStringForProxySession
setNotifiedForProxy:
setProxyDiscoverTime:
setProxyDeviceModel:
setProxyConnectionTime:
setProxyRSSI:
setAttemptTimedOut:
deviceID
autoUnlockDeviceForDeviceID:
notifyObserverOfEnabledDevice:
setFeatureSuggestedForDeviceID:
setRetriedSetup
idsDeviceForUniqueID:
autoUnlockDeviceForIDSDevice:cloudPaired:cached:
handleLockSessionCompleted:error:
bleDevice
handleProxySessionCompleted:error:
autoUnlockDevice
canceledAuthLockSessions
setLastSuccessfulDevice:
handleCanceledAfterSuccess
otherSessionCancel
logResults
wifiRangingResults
createRadarForError:devices:rangingResults:
attemptResults
decrementAttemptCount
invalidateAttempt
hintToken
results
connectionTime
baseResultsDictionaryForError:
handleLockConnectionStartedForSession:
handleProxyConnectionStartedForSession:
setChosenDevice:
notifiedForProxy
incrementAttemptCount
setOtherSessionCancel:
shouldShowErrorForWiFiEnabled:
scanTimer
scanner
setTimeout:
setTimeoutHandler:
model
proxyRSSI
proxyDiscoveryTime
notifyObserverOfKeyDeviceLockWithDevice:
updateLocalLTK
setIdsMacCountCache:
setNearbyDeviceChangedDate:
createPairingKeySessionWithIdentifier:deviceID:requestData:
setScanner:
setDiscoveryFlags:
setScanRate:
handleFoundPeer:
setDeviceFoundHandler:
setChangeFlags:
setDeviceChangedHandler:
setByAddingObjectsFromSet:
setDeviceFilter:
handleBLEScanTimerFired
setExtendedTimer:
invalidateScanTimer
scanWatchIDs
handleFoundBLEDevice:
scanPhoneIDs
cancelAllLockSessionsForScanTimeout
handleScanTimerFired
setScanTimer:
scanErrorString
proxyDeviceModel
proxyDiscoverTime
authSessionError
proxyNotAvailableForUnlock
scanAutoUnlockDevices
advertisementFields
advertisingEnabled
watchLockedAndOnWrist
serviceClients
unlockUpdateAdvertising:mask:
currentlyAdvertising
setAdvertisingChangedDate:
setCurrentlyAdvertising:
idsMacCountCache
idsMacDeviceIDs
hasSessionID
initWithUUIDBytes:
hasEncryptedPayload
encryptedPayload
authTag
nonce
decryptMessage:authTag:nonce:bluetoothID:cachedDevices:errorCode:
setErrorCode:
setMessageType:
setPayload:
sendUnlockData:toBLEDevice:completion:
setLockStateChangedDate:
handleKeyBagLockStateChanged
setMacBeenUnlocked:
setPipeConnectionChangedDate:
setBluetoothErrorCount:
setPresentedBluetoothError:
savePresentedBluetoothError
presentedBluetoothError
bluetoothErrorCount
wifiErrorCount
setPresentedWiFiError:
savePresentedWiFiError
setWifiErrorCount:
boolForKey:
setBool:forKey:
synchronize
setStateHandle:
lockStateChangedDate
loadPreviousSessionIDs
previousSessionIDs
setPreviousSessionIDs:
transportDidChangeDevices:
transportDidChangeNearbyState:
transport:didReceivePayload:type:deviceID:
transport:didReceivePairingRequestWithSessionID:deviceID:requestData:
transport:didReceiveMessageACKForIdentifier:
transport:didReceiveDisableMessage:fromDeviceID:
sessionDidReceiveKeyDeviceLocked:
session:didCompleteWithError:
sessionDidStartConnection:
sessionDidSendInitialData:
repairCloudPairing
eligibleDevicesRequestFromBundleID:withCompletionHandler:
enableAutoUnlockWithDevice:passcode:
cancelEnablingAllDevices
cancelEnablingAutoUnlockForDevice:
disableAutoUnlockForDevice:completionHandler:
attemptAutoUnlockForType:
cancelAutoUnlock
autoUnlockStateWithCompletionHandler:
authPromptInfoWithCompletionHandler:
handleDisableMessageForKey:fromDeviceID:
handleDisableMessageForLock:fromDeviceID:
createKeySessionWithBLEDevice:sessionID:wrapper:useEncryption:
clearAllKeysWithTokens
unlockEnabledForPeer:
proxyAdvertisementForPeer:
watchLockedOnWristForPeer:
idsMacCount
addServiceClientForIdentifier:
removeServiceClientForIdentifier:
screenLockUnlocked:
handleLockStateChanged
wristStateChanged:
pipeConnectionChanged:
handleNearbyStateChanged
handleBluetoothPowerChanged:
generateStateDump
storePreviousSessionID:
previousSessionExists:
setState:
stateHandle
setAwdlInfo:
setSessionManagerQueue:
setObserverTable:
setSuggestionManager:
setLockAuthSessions:
setCanceledPairingKeySessions:
setCanceledAuthLockSessions:
setKeyAuthSessions:
setLockPairingSessions:
setKeyPairingSessions:
setProxySessions:
setLocksWithAKSTokens:
setKeysWithAKSTokens:
setServiceClients:
watchUnlockEnabled
setWatchUnlockEnabled:
previousMacAddressData
setPreviousMacAddressData:
previousNearbyState
setPreviousNearbyState:
nearbyPushTimer
setNearbyPushTimer:
extendedTimer
attemptBundlePath
attemptAppName
proxyConnectionTime
eligibleDevices
advertisingChangedDate
wristStateChangedDate
setWristStateChangedDate:
nearbyDeviceChangedDate
pipeConnectionChangedDate
previousConnectedState
setPreviousConnectedState:
setWifiStateNeedsUpdating:
preventRadarNotification
iconTransferStore
setIconTransferStore:
_attemptInProgress
_watchUnlockEnabled
_previousNearbyState
_extendedTimer
_notifiedForProxy
_proxyNotAvailableForUnlock
_macBeenUnlocked
_presentedBluetoothError
_presentedWiFiError
_currentlyAdvertising
_previousConnectedState
_cachedMacWiFiState
_cachedWatchWiFiState
_wifiStateNeedsUpdating
_preventRadarNotification
_proxyRSSI
_state
_attemptExternalACMContext
_awdlInfo
_sessionManagerQueue
_observerTable
_suggestionManager
_lockAuthSessions
_canceledPairingKeySessions
_canceledAuthLockSessions
_keyAuthSessions
_lockPairingSessions
_keyPairingSessions
_proxySessions
_locksWithAKSTokens
_keysWithAKSTokens
_serviceClients
_previousMacAddressData
_nearbyPushTimer
_attemptStart
_attemptDevice
_attemptType
_attemptBundlePath
_attemptAppName
_attemptActivatedHandler
_scanTimer
_proxyDiscoverTime
_scanErrorString
_authSessionError
_proxyErrorCode
_proxyDeviceModel
_lastProxyState
_proxyConnectionTime
_scanAutoUnlockDevices
_scanWatchIDs
_scanPhoneIDs
_attemptCount
_attemptID
_incrementedCountID
_connectedBluetoothDevices
_timeSinceLastMachineWake
_lastSleepType
_eligibleDevices
_wifiErrorCount
_bluetoothErrorCount
_idsMacCountCache
_advertisingChangedDate
_wristStateChangedDate
_lockStateChangedDate
_nearbyDeviceChangedDate
_pipeConnectionChangedDate
_previousSessionIDs
_iconTransferStore
_commonEnsureStopped
_discoveryEnsureStopped
_proximityEnsureStopped
_rtiEnsureStopped
_serviceEnsureStopped
_siriRemoteMonitorEnsureStopped
_deactivateUIDelayTimer
_commonEnsureStarted
_discoveryEnsureStarted
_rtiEnsureStarted
_bulletinsEnsureStarted
_bulletinsEnsureStopped
_proximityEnsureStarted
_siriRemoteMonitorEnsureStarted
_serviceShouldRequestAutoFill
_serviceEnsureStarted
_screenStateChanged:
_uiLockStatusChanged:
needsSetup
postNotificationName:object:userInfo:deliverImmediately:
initWithURL:resolvingAgainstBaseURL:
queryItems
_uiStart:extraInfo:
tvAutoFillRemoveAll
_activateUIDelayTimer
_sessionStop:
setPurpose:
_deviceFound:
_deviceLost:
_deviceChanged:
deviceActionType
idsBluetoothDeviceIDsForAppleTVs
_deviceStoppedRequesting:
_uiShowing
_uiStartIfEnabled:extraInfo:
symbolCharacterSet
_uiStop:
setAgent:
tryPIN:
_sessionStart:
notificiationDidDismiss:
clientPairingSucceeded:completion:
clientPromptForPIN:throttleSeconds:
initWithType:
_proximityFound:
_proximityLost:
_proximityChanged:
updateWithBLEDevice:
proxPairProximityEstimator
bleProximityInfoForType:device:
proximityEstimatorWithProximityInfo:
setProxPairProximityEstimator:
updateWithSFBLEDevice:
triggered
rssiEstimate
addDelegate:
removeDelegate:
_serviceStartRequestingAutoFillIfReady
activate:
setAssociatedDomains:
setLocalizedAppName:
setUnlocalizedAppName:
_serviceHandleError:
setHidePINHandler:
_serviceHandleUsername:password:error:
setReceivedCredentialsHandler:
_serviceStopRequestingAutoFill
handleUsername:password:
startRequestingAutoFill
advertiseNonConnectable:
_serviceTimeoutStart
_serviceTimeoutStop
stopRequestingAutoFill
setPeerDevice:
setCompletedHandler:
_sessionHandlePairingSucceededResponse:
_helpersClientPairingSucceeded:completion:
setPairingFinishedHandler:
passwordPickerStart:bundleID:localizedAppName:unlocalizedAppName:associatedDomains:completion:
setPromptForPickerHandler:
_helpersClientPromptForPIN:throttleSeconds:
clientDismissUserNotification
_ensureKeychainCleaned:
isEqualToIgnoringCase:
advertiseNonConnectableDebug:
initWithServiceName:viewControllerClassName:
setUserInfo:
newHandleWithDefinition:configurationContext:
activateWithContext:
deviceClassCode
activeTVAutoFillPrompts
tvAutoFillPostIfNeeded:
tvAutoFillRemove:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
handleEventWithData:
_postSetupNotificationForDevice:
helperStop:
_uiStartIfNeeded:extraInfo:
preventNotifications
_alertHandle
_autoFillContext
_bulletinsDisabled
_cleanKeysState
_credentialsHandler
_deviceDiscovery
_devices
_btDevices
_grantingSession
_grantedDevices
_helpers
_ignoredTVs
_notificationManager
_proximityDevices
_proximityDiscovery
_proximityEnabled
_requestingAppLocalizedName
_requestingAppUnlocalizedName
_requestingAssociatedDomains
_requestingBundleID
_requestingService
_requestingServiceTimedOut
_requestingServiceTimer
_requestingServiceState
_remoteMonitoringEnabled
_rtiActivated
_scanningEnabled
_siriRemoteMonitor
_siriRemoteMonitorState
_statusMonitor
_triggeredDevices
_uiDelayActive
_uiDelayDevice
_uiDelayTimer
_prefGrantingEnabled
_prefPairedTVAllowed
_prefRateLimitDisabled
_prefRequestingEnabled
_prefRequiresProx
_testingService
_preventNotifications
effectiveIdentifier
mediaRouteIdentifier
isReady
_canTransition:
setNotificationDurationSecs:
setNotificationTicks:
setPendingContentDurationSecs:
setPendingContentTicks:
setTransferDoneDurationSecs:
setTransferDoneTicks:
setTransferPendingDurationSecs:
setTransferPendingStartTicks:
notificationBubble
reset
transferBubble
stateIsClose
stateIsMedium
canTransition:
effectiveID
resetTicks
stateIsNearby
setNextState:
clinkDevice
setClinkDevice:
dismissReason
setDismissReason:
forced
setForced:
forcedID
setForcedID:
nextState
setNotificationBubble:
notificationInfo
setNotificationInfo:
medBubbleDelayed
setMedBubbleDelayed:
route
setRoute:
setTransferBubble:
notificationTicks
notificationDurationSecs
pendingContentTicks
pendingContentDurationSecs
transferDoneTicks
transferDoneDurationSecs
transferPendingStartTicks
transferPendingDurationSecs
_forced
_medBubbleDelayed
_nextState
_notificationType
_attachmentURL
_clinkDevice
_dismissReason
_forcedID
_notificationBubble
_notificationInfo
_route
_transferBubble
_notificationTicks
_notificationDurationSecs
_pendingContentTicks
_pendingContentDurationSecs
_transferDoneTicks
_transferDoneDurationSecs
_transferPendingStartTicks
_transferPendingDurationSecs
externalID
_requestPostOrUpdate:info:mediumVariant:canPost:
requestPostOrUpdate:info:mediumVariant:
requestRemove:withReason:
requestRemoveAll
requestUpdate:info:mediumVariant:
handleNotificationWasTapped:
handleNotificationWasDismissed:reason:
dismissedHandler
setDismissedHandler:
tappedHandler
setTappedHandler:
_externalID
_internalIDs
_showingMedium
_triggeredID
_dismissedHandler
_tappedHandler
_systemCanTrigger
_bleActionDiscoveryEnsureStopped
_bleInfoDiscoveryEnsureStopped
_clinkEnsureStopped
_commonShouldAdvertiseChanged
_commonCallCountChanged
_motionEnsureStopped
_clinkShouldStart
_clinkEnsureStarted
_bleActionDiscoveryShouldStart
_bleActionDiscoveryEnsureStarted
_bleInfoDiscoveryShouldStart
_bleInfoDiscoveryEnsureStarted
_motionShouldStart
_motionEnsureStarted
_serviceShouldStart
_run
_commonScreenStateChanged
setScreenLockedChangedHandler:
_bleUpdateMappingAndNearbyCoalesced
commonSystemUIChanged
_proxiedNotificationDidDismiss:reason:
_proxiedNotificationWasTapped:
_hapticsEnsureStopped
connectedCallCount
_uiStopIfNeeded:reason:
_resetAllStates
screenLocked
_bleUpdateMappingReset
_combinedDevicePending
_runNotificationPending
_runNotificationPendingContent
_runNotificationReady
_runNotificationPresented
_runNotificationDismissed
_runTransferInProgress
_runTransferPending
_runTransferReady
_runTransferPendingDismiss
_runTransferDone
_runStateVerify:device:
_combinedDevicePrepareForCallTransferTrigger:
_proximityClientDeviceWillTrigger:
_shouldMediumPromptWithInfo:
mediumBubbleVersion
insideSmallBubble
_scheduleRunAfter:
_throttleMediumSetTicks:
interactionBehavior
_hapticsFireNotificationSuccess
_throttleEventDidOccur
_runCallHandoffStart:
_proximityClientDeviceEnteredImmediate:
_proximityClientDeviceExitedImmediate:
_runCallHandoffHandleResponse:error:
_runCallHandoffStartDelayTimer
_runCallHandoffHandleDelayTimerFired
_uiDismissWhenReady:reason:
_bleActionDeviceFound:
_bleActionDeviceLost:
_bleActionDeviceChanged:
_bleActionScanTimerActivate
_bleActionScanTimerInvalidate
_bleActionDeviceFoundCandidate:
_bleUpdateMappingWithDevice:
insideMediumBubble
_proximityClientDeviceDidUnTrigger:
_proximityClientDeviceUpdated:
_bleDeviceNearbyEnter:
_bleDeviceNearbyExit:
_bleActionScanTimerFired
_bleInfoDeviceFound:
_bleInfoDeviceLost:
_bleInfoDeviceChanged:
_updateCandidateIsNearby
_proximityClientDeviceEnteredNearby:
_proximityClientDeviceExitedNearby:
_bleUpdateMappingAndNearby
_clinkHandleRequest:options:responseHandler:
deregisterRequestID:
_clinkHomePodHandleRequest:responseHandler:
_proximityClientSeedInitialDevices:
_proximityClientSeedWillTriggerDeviceIfNeeded:
_combinedDeviceForUIID:
mediaTransferInfoFromInfo:
notificationHomePodTypeForDevice:
setHomePodType:
deviceEnteredImmediateHandler
deviceExitedImmediateHandler
deviceEnteredNearbyHandler
deviceExitedNearbyHandler
deviceWasDismissedHandler
deviceWasDismissedHandlerEx
deviceWasSelectedHandler
deviceWillTriggerHandler
deviceDidUntriggerHandler
deviceUpdateHandler
_serviceTimeoutInvalidate
_serviceTimeoutFired
_throttleEventSet:
_proximityClientDeviceWasDismissed:reason:
_proximityClientDeviceWasSelected:
_routeForDevice:
callTransferInfoForDevice:
_routes
_throttleEventsReachedMax
_throttleMediumAllowsTrigger
displayNameForContact:
setInteractionBehavior:
setInteractionDirection:
interactionDirection
_proximityClientDeviceWasDismissed:
_serviceTimeoutActivate
_throttleEventsReset
_throttleMediumReset
_hapticsEnsurePrepared
_expectingContentForDeviceID:
callTransferShouldPush:
_bleActionDiscovery
_bleActionDevices
_bleActionScanTimer
_bleActionScanTimedOut
_bleActionService
_bleActionServiceTimer
_bleInfoDiscovery
_bleInfoDevices
_bleMapCoalescer
_bleUnmapped
_candidateNearby
_clientShouldAdvertise
_clinkClient
_delayTimer
_mappedDevices
_motionMonitorStarted
_notificationProxy
_proxClients
_stationary
_transferTimer
_uiDevice
_unansweredCall
_userOnCall
_prefBLEActionScanSecs
_prefEnabled
_prefForceShouldAdvertise
_prefForceStationary
_prefForceOnCall
_prefHighNormal
_prefIgnoreMediumThrottle
_prefMediumBubbleEnabled
_prefMediumBubbleLastTicks
_prefRetriggerSecs
_prefTransferSecs
_prefThrottleEventCount
_prefThrottleEventMax
_stop
stopHandoffAdvertisingIfAppropriate
setDiscoveryMode:
addOrUpdateNodesForPerson:withChanges:
setPersonFoundHandler:
setPersonChangedHandler:
removeNodesForPerson:
setPersonLostHandler:
discoveredPeople
statusChangedHandler
resumeHandoffAdvertisingIfAppropriate
deviceIsEligibleForAirDrop:
updateRangingMeasurementForDevice:inNode:
createSFNodeFromMyRPDevice:
personHasAirDropEligibleDevice:
updateRangingMeasurementForPerson:inNode:
createSFNodeFromRPPerson:
identifiersForPerson:
removeObjectsForKeys:
shouldStopHandoffAdvertising
assertionIdentifier
relativeLocation
idsIdentifierConflictDetected
deviceTypeFromModelIdentifier:
defaultSFNodeFlags
createSFNodeFromCNContact:identifier:device:
valueForKey:
deviceImageNameFromModelIdentifier:
_startCount
_cachedNodes
_peopleDiscovery
setHasFinalMessage:
hasFinalMessage
_finalMessage
updateServerState
awdlTimeoutFired:
bluetoothTimeoutFired:
invalidateTimers
startTimers
startHTTPServer:
publishedInfoChanged:
thisIsTheFinder
trigger
stopProximityScanner
startServer
discoverableByContactsOnly
discoverableByEveryone
startProximityScanner
object
keyBagFirstUnlock:
wirelessChanged:
appleIDChanged:
airDropUnpublished:
airDropStatusChanged:
screenStateChange:
bluetoothChanged:
discoverableModeChanged:
sslSettings
initWithPort:identity:
setMaxDelay:
setMinDelay:
setActionHandler:
bonjourPublisher:propertiesDidChange:
didOpenConnection:
didCloseConnection:
finderAirDropEnabled:
stopScanningAndStartServer
clientPid
_portNumber
_awdlTimer
_bluetoothTimer
_coalescer
_identity
_discoverableMode
_publisher
_discoveredHashes
_information
_clientPid
_clientBundleID
setHasSuccess:
hasSuccess
_success
itemsDescriptionAdvanced
extractNotesURLs:
createDestination
setAppLink:
getAppLinkWithURL:completionHandler:
appLink
setBundleProxy:
targetApplicationProxy
localizedName
openURLs:
_appLink
device
getBytes:length:
_connectionHasEntitlement:
cancelAutoUnlock:
notifyDelegate
checkEntitlementWithHandler:
failedToEnableDevice:error:
setEnableDevice:
failedUnlockWithError:
keyDeviceLocked:
enableDevice
enabledDevice:
beganAttemptWithDevice:
completedUnlockWithDevice:
currentConnection
eligibleAutoUnlockDevicesWithCompletionHandler:
enableAutoUnlockWithDevice:passcode:clientProxy:
attemptAutoUnlockWithClientProxy:
enableUnlockWithDevice:fromKey:withPasscode:completionHandler:
disableUnlockWithDevice:completionHandler:
unlockEnabledWithDevice:completionHandler:
establishStashBagWithCompletionHandler:
establishStashBagWithManifest:completionHandler:
unlockStateForDevice:completionHandler:
_enableDevice
setTransferManager:
askEventForRecordID:withResults:
doubleValue
progressEventForRecordID:withResults:
finishedEventForRecordID:withResults:
cancelEventForRecordID:withResults:
errorEventForRecordID:withResults:
absoluteString
listener:didReceiveError:
listener:didReceiveNewRequest:
listener:informationDidChange:
alertManager:acceptingTransferWithRecordID:withDestinationURL:shouldExtractMediaFromPhotosBundlesForRecordID:
alertManager:cancelingTransferWithRecordID:withFailureReason:
_transferIdentifierToNetworkOperation
_transferManager
_classroomTransferManager
_pairingID
setKeyRequestExchangeTime:
setTokenExchangeTime:
setSetupSucceeded:
setErrorDomain:
setTimeIntervalSinceLastWatch:
setUpsell:
setSetupRetry:
setMacOldLTKSyncStatus:
setMacNewLTKSyncStatus:
calendarWithIdentifier:
autoupdatingCurrentLocale
setLocale:
components:fromDate:
year
month
hour
minute
second
timeZone
abbreviation
stringByRemovingCharactersFromSet:
setModelDescription:
setUsingProxy:
setBleKeyDiscoveryTime:
setBleProxyDiscoveryTime:
setBleProxyConnectionTime:
setBleKeyConnectionTime:
setBleAWDLInfoExchangeTime:
setBleKeyRequestExchangeTime:
setBleAuthTokenExchangeTime:
setAwdlBringUpTime:
setAwdlPeerDiscoveryTime:
setAwdlRangingTime:
setBleConfirmationTime:
setTotalUnlockTime:
setKeyBluetoothRSSI:
setProxyBluetoothRSSI:
setWithinRange:
setUsingTool:
setCancelTime:
setClamshellClosed:
unsignedIntegerValue
setBluetoothConnectedDevices:
setTimeIntervalSinceLastWake:
setExternalDisplay:
setDisplayWaitTime:
setClamshellWaitTime:
setTimeIntervalSinceLastDarkWake:
setCancelReason:
isJustFiles
totalSharedItemsCount
updatePossibleActions
defaultActionForBundleProxy:
setPossibleActions:
_start
setActiveConnection:
sendProxyTrigger
activeConnection
notified
setNotified:
setBleDevice:
_activeConnection
_notified
_model
_bleDevice
hasAwdlInfo
setHasUseToken:
hasUseToken
setAuthPrompt:
setHasAuthPrompt:
hasAuthPrompt
setHasSupportsConfirmationACK:
hasAppName
_authPrompt
_useToken
initWithImageTitle:imageData:cacheLookupKey:
encodeInteger:forKey:
iconData
initWithContact:iconData:atIndex:cacheLookupKey:
icon
_contact
_iconIndex
containsValueForKey:
decodeIntegerForKey:
hostName
portNumber
notifyClientAboutResolve:
mount
initWithName:type:domain:path:timeout:
resolve
bonjourResolverDidChange:
mountDiskImageAsync
_resolver
setPairedDeviceID:
_pairedDeviceID
_token
setAvailableApplications:
initWithPerson:items:sandboxExtensions:
setClientBundleID:
setAuditToken:
setClientPid:
clientBundleID
notifyClientWithPosixError:
send
initWithConnection:
setContactsOnly:
setSessionID:
schedule
accept
logActivityType:sessionID:
initWithNode:
setProtocol:
setFlags:
airDropServer:event:withResults:
airDropConnection:event:withResults:
airDropSession:event:withResults:
airDropController:didChange:
airDropStatus:didChange:
airDropInformation:didChange:
networkResolver:event:withResults:
networkEjecter:event:withResults:
copyPropertyForKey:
activities
setActivities:
_operation
_connectionScheduled
_properties
_sandboxExtensionHandle
_activities
_loadTransferStore
storeCachedImageForHash:device:appName:
imageCachedForHash:device:
_transferStore
setWithCapacity:
_readPrefs
unarchivedObjectOfClass:fromData:error:
_setAccount:
account
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
setPersonInfoCache:
personInfoCache
_identityForAppleID:
archivedDataWithRootObject:requiringSecureCoding:error:
removeFromKeychain
setAccount:
_updateAccountInfoPrefs
_postNotificationWithName:
_addAppleID:
_removeAppleID:
matchedValue
_updatePersonInfoCachePrefs
_addPersonInfoToCache:
isStale
_cachedPersonInfoWithEmailOrPhone:
_clearPersonInfoCache
_setLastConnectionDate:
_setLastSuccessfulConnectionDate:
setIdentity:
_setIdentity:forAppleID:
linkedToCurrentUser
setLinkedToCurrentUser:
_setIdentityLinkedToCurrentUser:forAppleID:
setCertificateTokenCreationDate:
_setCertificateToken:privateKeyPersistentReference:forAppleID:
setContactInfo:
setValidationRecord:
_setContactInfo:validationRecord:forAppleID:
_updateMetaInfoPrefs
_setMetaInfo:
setIdentityLinkedToCurrentUser:forAppleID:
lastConnectionDate
lastSuccessfulConnectionDate
_metaInfo
_lastConnectionDate
_lastSuccessfulConnectionDate
_account
_personInfoCache
initWithXPCConnection:
connectionManagerDidInvalidate:
xpcManagerListener
setXpcManagerListener:
connections
setConnections:
_xpcManagerListener
_connections
_clientDeviceLockStatusChanged
_clientEnsureStopped
_serverEnsureStopped
_serverEnsureStarted
_clientShouldStart
_clientEnsureStarted
_commonIDSChanged:
handleTextInputData:
setReceivedObjectHandler:
setReceivedRequestHandler:
_legacy_serverHandleEvent:
_legacy_serverHandleRequest:
systemPairState
_serverSendTextSessionDidBegin:
_legacy_serverRespondInfo:
sendResponse:
currentPayload
initWithRTIPayload:
setText:
setDeviceIDs:
sendEvent:
_sendRTIPayload:
setNeedsKeyboard:
advertisingTimerStart
_serverSendTextSessionDidEnd:
advertisingTimerFired
remoteTextEventHandler
clientNotificationUpdateForDevice:rtiData:
_clientDeviceFound:
_clientDeviceLost:
_clientClinkDeviceFound:
_clientClinkDeviceLost:
_clientClinkDeviceChanged:
_clientUpdateCoalesceTimerForDevice:identifier:
smoothedRSSI
clientNotificationPostIfNeededForDevice:
clientNotificationRemoveForDevice:
clientNotificationUpdateForDevice:info:
testKeyboardPost:
performSelector:withObject:afterDelay:
clientTextSessionDidBegin:device:
testKeyboardPostThenUpdate
testKeyboardPostWithDelay
testKeyboardRemoveWithDelay
testKeyboardUpdateWithDelay
_aggressiveTimer
_clientEnabled
_cloudPairedOnly
_controlService
_currentSessionID
_currentText
_idsMonitorInstalled
_legacy_sessionDeviceIDs
_rssiThreshold
_rtiTimer
_serverEnabled
_sessionDeviceIDs
_rtiHandleEventWithData:
setEventHandler:
_rtiHandleInputDidBeginWithFlags:sessionInfo:
setTextInputDidBegin:
_rtiHandleInputDidEndWithFlags:sessionInfo:
setTextInputDidEnd:
_ensureStarted
removeAllDelegates
_stopClock:
enumerateObjectsUsingBlock:
_startClockWithResetIfNeeded
_logEvent:stopClock:
_activateCalled
_delegates
_overrunTimer
_sessionClock
boolValue:
setInformationAndNotify
types
postNotification:forNeighborhood:
initWithDomain:types:
setXpcConnection:
setIconData:iconHash:forPerson:
transfersInitiated
setTransfersInitiated:
transfersCompleted
setTransfersCompleted:
initWithWorkgroup:
stringForBrowserMode:
bonjourNodesDidChange:
windowsNodesDidChange:
startBrowsingDomain:
setBonjourBrowserMode:
bonjourNodesForDomain:
stopBrowsingDomain:
startODiskBrowsing:
odiskNodesForDomain:
stopODiskBrowsing:
startAirDropBrowsing:bundleID:sessionID:helperConnection:
startAirDropBrowsing:connection:sessionID:
incrementTransfersInitiated
incrementTransfersCompleted
airDropNodesForDomain:
isAirDropEnabled
stopAirDropBrowsing:
startBrowsingWorkgroup:
windowsNodesForWorkgroup:
stopBrowsingWorkgroup:
_odiskBrowsers
_bonjourBrowsers
_windowsBrowsers
_airDropBrowsers
setMaxConcurrentOperationCount:
documentProxyForName:type:MIMEType:
applicationsAvailableForOpeningFromAirDropWithError:
applicationsAvailableForOpeningWithError:
intersectOrderedSet:
handlingAppBundleID
cancelActionTitleToAccompanyActions:
availableApplications
selectedApplication
setSelectedApplication:
_workOperationsQueue
_icloudDriveHandler
_selectedHandler
_selectedProxy
_availableApplications
_selectedApplication
ephemeralSessionConfiguration
setTimeoutIntervalForResource:
set_tlsTrustPinningPolicyName:
initWithIdentifier:
setWaitsForConnectivity:
set_appleIDContext:
sessionWithConfiguration:
_callResponseHandlerWithInfo:errorInfo:error:
taskInfo
urlAtKey:
gsToken
initWithURL:gsToken:
dataWithJSONObject:options:error:
setHTTPBody:
_handleURLIsAvailable:error:completion:
_urlWithCompletion:
_isTaskInfoValid
_sendRequest
_callResponseHandlerWithInfo:error:
urlRequest
_handleTaskResponse:withData:error:
dataTaskWithRequest:completionHandler:
allHTTPHeaderFields
setUrlRequest:
_handleURLRequestIsAvailable
_urlRequestWithCompletion:
statusCode
initWithHTTPUTLResponse:data:
responseInfo
_handleServerError:withStatusCode:nextSuggestedAttemptDelay:
_parseServerResponse:error:
setHttpStatusCode:
setType:
setIdmsEnv:
dateWithTimeIntervalSince1970:
_parseCreateCertificateResponse:error:
_parseFetchCertificateResponse:error:
_parseGetMyInfoResponse:error:
_parseFindPersonResponse:error:
setGsToken:
_handleGSTokenIsAvailable
activated
setActivated:
invalidated
setInvalidated:
session
_gsToken
_taskInfo
_type
_urlRequest
initialize
xpcManagerInterface
setInterruptionHandler:
cleanUpConnections
closeStreamsForIdentifier:
unlockSessions
initWithClientProxy:withIdentifier:
myIPAddress
closeFile
getContinuationStreamsForMessage:bundleID:usingID:completionHandler:
createCompanionServiceManagerWithIdentifier:clientProxy:reply:
createStreamsForMessage:reply:
createUnlockManagerWithReply:
appleAccountSignedIn
appleAccountSignedOut
continuationStream:connectedToService:withFileHandle:acceptHandler:
companionStreamClosedStreams:
unlockSessionDidFinish:
publisher:didConnectToService:withStreamHandler:
publisher:companionStreamForService:streamHandler:
manager:connectedToService:withFileHandle:acceptHandler:
companionStreams
setCompanionStreams:
serviceManager
setServiceManager:
deviceStreamMap
setDeviceStreamMap:
setUnlockSessions:
streamIdentifiers
setStreamIdentifiers:
_identifier
_companionStreams
_serviceManager
_deviceStreamMap
_unlockSessions
_streamIdentifiers
hasLongTermKey
setHasRemoteNeedsLTK:
hasRemoteNeedsLTK
_ltkHash
_remoteNeedsLTK
readData:length:fromStream:
writeData:length:toStream:
openStreams
readIncomingChunk
sendOutgoingChunk:length:compressed:
processNetworkStatistics:
processCompressibilityStatistics
_compressible
_totalBytesSent
_totalNetworkDelay
_keepingUpWithNetwork
_numBlocksProcessed
_totalBytesProcessed
_numBlocksCompressed
_lastCompressionRatio
_totalCompressionTime
_totalCompressedOutput
_adjustmentQueue
setSenderID:
setEncryptedPayload:
setAuthTag:
setNonce:
hasPayload
setHasMessageType:
hasMessageType
setHasUseProxy:
hasUseProxy
setAwdlCacheID:
setHasAwdlCacheID:
hasAwdlCacheID
setAksSessionID:
setHasAksSessionID:
hasAksSessionID
hasAuthTag
hasNonce
awdlCacheID
aksSessionID
_aksSessionID
_authTag
_awdlCacheID
_encryptedPayload
_messageType
_nonce
_payload
_senderID
_secret
senderBundleID
componentsWithURL:resolvingAgainstBaseURL:
initWithTransferIdentifier:actionIdentifier:title:singleItemTitle:
handleAction
_credential
addClient:forIdentifer:
loadWatchIDsToPairingRecords
updateLTKs
setAutoUnlockDisabledDueToManagement:
handleRequiredStateDisabled
updateRangingKeysIfNeccesary
loadLocalLTK
updateRemoteLTKs
checkLocalLTK
localDeviceID
ltkInfoForDeviceID:
hasLtkID
ltkID
localLTK
viewSyncing
allKeychainDevices
remoteLTKStorageFilePath
remoteLTKList
setLocalDeviceID:
appleAccountSignedIn:
appleAccountSignedOut:
deviceFirstUnlocked:
autoUnlockDisabledDueToManagement
removeAllRemoteLTKsOnSignOut
resetAppleWatchExisted
loadLocalUniqueIDIfNeeded
checkRemoteLTKs
updateSessionKeys
checkRemoteLTKForDeviceID:
remoteLTKForDeviceID:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:
aksAuthSessionForDeviceID:originator:usingEscrow:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:usingEscrow:
escrowSecretForDevice:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:escrowSecret:
aksAuthorizationSessionForDeviceID:originator:externalACMContext:
initWithLocalLTK:remoteLTK:sessionType:originator:deviceID:externalACMContext:
sessionKeyForDeviceID:
cachedIDSDeviceIDsForBluetoothID:
idsDeviceIDsForBluetoothID:
cachedSessionKeys
sortedArrayUsingComparator:
initWithLength:
logBluetoothIDCache
watchIDsMissingSessionKey
refreshAutoUnlockDeviceCache
arrayForKey:
setWatchIDsMissingSessionKey:
ltkInfoForDeviceID:modern:
setLocalLTK:
storeLongTermKey:forDeviceID:name:
version
generateLocalLTK
ltkKeyClass
setLtk:
setLtkID:
disablePairingForAllKeyDevices
clearRemoteLTKs
t208Machine
isEqualToData:
setSignout:
deviceTypeForDevice:
remoteLTKEntryForDeviceID:
loadRemoteLTKsIfNeeded
keychainDevices:
modernSignedDevices
signedDevices
isSubsetOfSet:
removeRemoteLTKForDeviceID:
minusSet:
unionSet:
signLTKsForDeviceID:
remoteLTKs
updateLTKsForDeviceID:staleRemoteLTK:
longTermKeyForDevice:modern:
remoteLTKHashForDeviceID:modern:
signLTK:modernLTK:forDeviceID:
signLTK:ltkModDate:modernLTK:modernLTKModDate:deviceID:
keyClassForDeviceID:
modificationDataForDeviceID:modern:
addRemoteLTK:ltkHash:ltkModDate:modernLTK:modernLTKHash:modernLTKModeDate:deviceID:
baseModernSyncedDictionary
baseSyncedDictionary
deviceIsLocalDevice:
modernSyncedDictionaryForDevice:
syncedDictionaryForDevice:
enumerateKeysAndObjectsUsingBlock:
preferredRemoteLTKForDeviceID
updatePreferredRemoteLTKForDeviceID:
fetchLTKsFromCompanionForDeviceID:needsLTK:remoteNeedsLTK:checkViewState:
remoteDeviceID
localID
needsLTK
remoteNeedsLTK
pendingReceiveForPeer:
pendingSendForPeer:
keybagAssertionTimer
releaseKeybagAssertion
setKeybagAssertionTimer:
waitingForUnlockTimer
setWaitingForUnlock:
setWaitingForUnlockTimer:
handleLTKRequest:
handleLTKResponse:
deviceEnabledAsKeyForAnyDevice
deviceEnabledAsKeyForAnyIDSDevice
idsDevicesIDs
escrowSecretExistsForDevice:
devicesWithLTKs
rangingKeyForDeviceID:
companionIDForWatchID:
deleteAllEscrowSecrets
deleteAllRangingKeys
allPairedWatchDeviceIDs
deleteRemoteLongTermKeyForDeviceID:modern:tombstone:
ltkExistsForKeyDevice:updateLTKs:
anyLongTermKeyForDeviceID:
removePairingRecordForWatchID:
saveRemoteLTKs
setRemoteLTKs:
writeToFile:options:error:
loadRemoteLTKs
fileExistsAtPath:isDirectory:
initWithContentsOfFile:options:error:
autoUnlockFolderPath
watchIDsToPairingRecords
saveWatchIDsToPairingRecords
watchIDsToPairingRecordsStorageFilePath
loadLegacyWatchIDToCompanionIDMapping
deleteLegacyWatchToCompanionIDs
watchIDToCompanionIDStorageFilePath
removeItemAtPath:error:
migrateLegacyCompanionIDs:
loadCompanionIDs
deleteLegacyCompanionIDs
companionIDStorageFilePath
baseLocalKeysDictionaryForDevice:type:
keychainDataForQuery:
hasSecret
secret
setSecret:
storeKeychainItemWithAttributeDictionary:updateDictionary:addDictionary:
baseLocalKeysDictionary
storeLongTermKey:forDeviceID:name:modern:
baseRangingDictionary
storeRangingKey:forDeviceID:
setCachedSessionKeys:
deriveKeyFromSharedSecret:
baseRangingDictionaryForDevice:
removeDeviceIDMissingSessionKey:
baseDictionary
clearAllDeviceIDsMissingSessionKeys
handleManagementChanged:
aksPairingSessionForDeviceID:originator:errorCode:
aksAuthSessionForDeviceID:originator:
aksAuthorizationSessionForDeviceID:originator:
canCreateTokenSessionForDeviceID:
encryptMessageData:deviceID:encryptedMessage:authTag:nonce:
addDeviceIDMissingSessionKey:
deviceIDsMissingSessionKey
ltkHashForLocalLTK
updateLocalLTKForSignout
ltkSyncStatusForDeviceID:hash:modern:
resignRemoteLTKForDeviceID:
allRemoteLTKData
hashMatchesAnyRemoteLTKForDeviceID:ltkHash:isPreferred:
fetchLTKsFromCompanion:
sendLTKResponseWithPayload:viewState:needsUnlock:currentlySyncing:
ltksForRequest:
keychainNeedsSyncingForRequest:
takeMobileKeybagAssertion
restartKeybagAssertionTimer
restartWaitingForUnlockTimer
invalidateWaitingForUnlockTimer
localDeviceEnabledAsKey
deviceEnabledAsKey:
deleteEscrowSecretForAllDevices
ltkExistsForKeyDevice:
reloadPairingRecordsIfNeeded
setCompanionID:forWatchID:
removeCompanionIDForWatchID:
setPairingID:forWatchID:
removePairingIDForWatchID:
migrateLegacyWatchIDToCompanionIDs
storeEscrowSecret:pairingID:deviceID:
escrowSecretCreationDateForDeviceID:
longTermKeyIDForDeviceID:
sessionKeyExistsForDeviceID:
wristDetectDisabled
setWristDetectDisabled:
waitingForUnlock
setT208Machine:
cachedSessions
setCachedSessions:
setWatchIDsToPairingRecords:
setPreferredRemoteLTKForDeviceID:
setRemoteLTKStorageFilePath:
setWatchIDsToPairingRecordsStorageFilePath:
setCompanionIDStorageFilePath:
setWatchIDToCompanionIDStorageFilePath:
_wristDetectDisabled
_autoUnlockDisabledDueToManagement
_waitingForUnlock
_t208Machine
_localDeviceID
_localLTK
_keybagAssertionTimer
_waitingForUnlockTimer
_remoteLTKs
_cachedSessions
_cachedSessionKeys
_watchIDsToPairingRecords
_preferredRemoteLTKForDeviceID
_watchIDsMissingSessionKey
_remoteLTKStorageFilePath
_watchIDsToPairingRecordsStorageFilePath
_companionIDStorageFilePath
_watchIDToCompanionIDStorageFilePath
setTimestamp:
setHasTimestamp:
hasTimestamp
hasKeyDeviceModel
hasProxyDeviceModel
setHasUsingProxy:
hasUsingProxy
setHasBleKeyDiscoveryTime:
hasBleKeyDiscoveryTime
setHasBleProxyDiscoveryTime:
hasBleProxyDiscoveryTime
setHasBleAWDLInfoExchangeTime:
hasBleAWDLInfoExchangeTime
setHasBleKeyRequestExchangeTime:
hasBleKeyRequestExchangeTime
setHasBleAuthTokenExchangeTime:
hasBleAuthTokenExchangeTime
setHasAwdlBringUpTime:
hasAwdlBringUpTime
setHasAwdlPeerDiscoveryTime:
hasAwdlPeerDiscoveryTime
setHasAwdlRangingTime:
hasAwdlRangingTime
setHasBleConfirmationTime:
hasBleConfirmationTime
setHasTotalUnlockTime:
hasTotalUnlockTime
setHasUnlockSucceeded:
hasUnlockSucceeded
setHasErrorType:
hasErrorType
hasErrorDomain
setHasFlags:
hasFlags
setHasDistance:
hasDistance
setHasKeyBluetoothRSSI:
hasKeyBluetoothRSSI
setHasProxyBluetoothRSSI:
hasProxyBluetoothRSSI
setHasWithinRange:
hasWithinRange
setHasBleProxyConnectionTime:
hasBleProxyConnectionTime
setHasBleKeyConnectionTime:
hasBleKeyConnectionTime
setHasUsingTool:
hasUsingTool
setHasCancelTime:
hasCancelTime
setHasClamshellClosed:
hasClamshellClosed
setHasBluetoothConnectedDevices:
hasBluetoothConnectedDevices
setHasTimeIntervalSinceLastWake:
hasTimeIntervalSinceLastWake
setHasLastSleepType:
hasLastSleepType
setHasExternalDisplay:
hasExternalDisplay
setHasDisplayWaitTime:
hasDisplayWaitTime
setHasClamshellWaitTime:
hasClamshellWaitTime
setHasTimeIntervalSinceLastDarkWake:
hasTimeIntervalSinceLastDarkWake
setHasCancelReason:
hasCancelReason
setHasAttemptType:
hasAttemptType
hasWatchBuildVersion
hasWatchOSVersion
timestamp
bleKeyDiscoveryTime
bleProxyDiscoveryTime
bleAWDLInfoExchangeTime
bleKeyRequestExchangeTime
bleAuthTokenExchangeTime
awdlBringUpTime
awdlPeerDiscoveryTime
awdlRangingTime
bleConfirmationTime
totalUnlockTime
errorDomain
keyBluetoothRSSI
proxyBluetoothRSSI
withinRange
bleProxyConnectionTime
bleKeyConnectionTime
usingTool
cancelTime
clamshellClosed
bluetoothConnectedDevices
timeIntervalSinceLastWake
externalDisplay
displayWaitTime
clamshellWaitTime
timeIntervalSinceLastDarkWake
cancelReason
_timeIntervalSinceLastDarkWake
_timestamp
_awdlBringUpTime
_awdlPeerDiscoveryTime
_awdlRangingTime
_bleAWDLInfoExchangeTime
_bleAuthTokenExchangeTime
_bleConfirmationTime
_bleKeyConnectionTime
_bleKeyDiscoveryTime
_bleKeyRequestExchangeTime
_bleProxyConnectionTime
_bleProxyDiscoveryTime
_bluetoothConnectedDevices
_cancelReason
_cancelTime
_clamshellWaitTime
_displayWaitTime
_distance
_errorDomain
_keyBluetoothRSSI
_proxyBluetoothRSSI
_timeIntervalSinceLastWake
_totalUnlockTime
_clamshellClosed
_externalDisplay
_usingProxy
_usingTool
_withinRange
MIMEType
JSONObjectWithData:options:error:
_responseInfo
_statusCode
clearPersistedKeyRequests
setUpHSA2Monitor
setUpRapport
setUpIDSServices
setUpHandoffPreferenceMonitor
primaryAppleIDIsHSA2
setPrimaryAppleIDChangedHandler:
createRapportClientWithDestinationDevice:
handleEncryptionKeyRequestRapport:options:responseHandler:
registerRequestID:options:handler:
handlePayloadRequestRapport:options:responseHandler:
setInvalidationHandler:
initWithService:
handleEncryptionKeyRequestProtobuf:service:account:fromID:context:
setProtobufAction:forIncomingRequestsOfType:
handleEncryptionKeyReplyRequestProtobuf:service:account:fromID:context:
setProtobufAction:forIncomingResponsesOfType:
addDelegate:queue:
handlePayloadRequestProtobuf:service:account:fromID:context:
handlePayloadReplyProtobuf:service:account:fromID:context:
handleNewAdvertisementWithpayloadRequestProtobuf:service:account:fromID:context:
devices
uniqueIDOverride
userInfo
completionHandler
requestCreatedDate
timeIntervalSinceNow
logDashboardHandoffRequestViaTransportLinkType:type:success:rtt:
error
setError:
allValues
deviceIdentifier
setCompletionHandler:
attemptInProgress
setRequestIdentifier:
setDeviceIdentifier:
setPreviousKeyIdentifier:
requestTimedOut:
requestIdentifier
timerWithTimeInterval:target:selector:userInfo:repeats:
setTimeoutTimer:
setTimeoutTimeInterval:
timeoutTimer
addTimer:forMode:
previousKeyIdentifier
timeoutTimeInterval
setRequestCreatedDate:
sendIDSEncryptionKeyRequest:withRequestRecord:desiredTimeout:
sendRapportEncryptionKeyRequest:withRequestRecord:completionHandler:
activeDevices
predicateWithFormat:
filteredArrayUsingPredicate:
name
setLinkClient:
linkClient
handleEncryptionKeyReplyRapport:options:forRequestRecord:fromDevice:
sendRequestID:request:destinationID:options:responseHandler:
messageWithIdentifier:didSendWithSuccess:error:
protobufDataFromRequest:
idsDeviceWithUniqueID:onService:
nsuuid
devicesForBTUUID:
dataFromUUID:
numberWithDouble:
initWithProtobufData:type:isResponse:
sendProtobuf:toDestinations:priority:options:identifier:error:
setWithObject:
service:account:identifier:didSendWithSuccess:error:
setAdvertisementPayload:
setCommand:
sendIDSActivityPayloadRequest:withRequestRecord:desiredTimeout:
sendRapportActivityPayloadRequest:withRequestRecord:completionHandler:
advertisementPayload
handlePayloadReplyRapport:options:forRequestRecord:fromDevice:
setDecryptionKeyDataRepresentation:forDeviceIdentifier:
handleEncyptionKeyRequest:fromIDSDevice:withRequestIdentifier:transportType:completionHandler:
deviceForFromID:
data
requestFromProtobufData:
outgoingResponseIdentifier
sendEncryptionKeyReplyRequestToDevice:reply:requestIdentifier:
idsDeviceIdentifier
handleEncryptionKeyReply:forRequestRecord:fromDevice:transportLinkType:
incomingResponseIdentifier
activityPayloadReplySuccess:
messageIdentifier
handlePayloadRequest:fromIDSDevice:withRequestIdentifier:transportType:completionHandler:
sendIDSActivityPayloadReply:withReplyRecord:
setMessageIdentifier:
setActivityIdentifier:
activityIdentifier
handlePayloadReply:forRequestRecord:fromDevice:transportLinkType:
fire
getUUIDBytes:
controlFlags
setControlFlags:
setDestinationDevice:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
removeLastObject
insertObject:atIndex:
handleNewAdvertisementDevice:data:receivedViaScanning:withSuccessHandler:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
sendEncryptionKeyRequestToDeviceIdentifier:previousKeyIdentifier:completionHandler:
sendActivityPayloadRequestToDeviceIdentifier:withAdvertisementPayload:command:timeout:completionHandler:
service:account:incomingMessage:fromID:
_activityService
_encryptionService
_rapportDiscoveryClient
_restrictionsDisabled
_advertiser
_scanner
_hsa2Enabled
_uniqueIDToKeyReplyDate
_messageIdentifierToKeyRequestRecords
_messageIdentifierToReplyRecords
_messageIdentifierToRequestRecords
_systemPreferenceChangedToken
_cachedActivityPayloadsForDemo
isiWorkURL
iWorkApplicationName
capitalizedString
applicationProxyForIdentifier:
appState
isInstalled
iWorkDocumentName
documentName
bundleProxyForiWorkURL:
_appName
_sendCreateCertificateRequest
_sendFetchCertificateRequest
_responseHandlerWithIdentity:error:
_scheduleFetchCertificateTaskWithDelay:
_handleCertificateCreateResponseError:
_scheduleFetchRetryWithDelay:
_scheduleCreateRetryWithDelay:
_handleReceivedCertificate
_handleCertificateFetchResponseError:
initWithAppleID:altDSID:
setAccountIdentifier:
setCertificateExpirationDate:
setCertificatePersistentReference:
setIntermediateCertificateExpirationDate:
setIntermediateCertificatePersistentReference:
setLastValidationAttemptDate:
setLastValidationDate:
setModificationDate:
setSerialNumber:
_handleCertificate:intermediateCertificate:withTrustResult:error:
_handleCertificateCreateResponseWithInfo:error:
responseHandler
_handleCreateTimerFired
_handleFetchTimerFired
_scheduleCreateCertificateTaskWithDelay:
_handleKeyPairAvailable
_handleCertificateFetchResponseWithInfo:error:
certificateTokenHandler
_activated
_altDSID
_certificateCreateTask
_certificateExpirationDate
_certificateFetchTask
_certificatePEM
_certificateSerialNumber
_certificateStatus
_certificateToken
_createRetryCount
_createDelayTimer
_csrPEM
_fetchDelayTimer
_fetchRetryCount
_intermediateCertificatePEM
_invalidated
_privateKey
_privateKeyPersistentReference
_publicKey
_responseHandler
_certificateTokenHandler
initWithTransfer:bundleIdentifier:
bundleProxy
bundleIdentifier
isJustLinks
candidateIdentifiers
transfer
bundleProxyFromCandidateIdentifiers:handlesURL:
itemsDescription
alertMessageLocalizedKeyForTypeDicts:
localizedStringWithFormat:
singleItemActionTitle
suitableContentsDescription
ejectMountPoints:useAssistant:
notifyClientAboutEject:
eject
flags
protocol
_node
_mountedCount
_ejectedCount
_flags
_protocol
init
stop
dealloc
allKeys
objectForKeyedSubscript:
isEqual:
kind
isEntitled
connection
numberWithInt:
setIsEntitled:
childrenForNode:
xpcArrayForSFNodeArray:
sidebarChildren
xpcObjectForSFOperationResults:
UUID
UUIDString
initWithKind:
setProperty:forKey:
setObject:forKeyedSubscript:
addObject:
setObjectKey:
setDelegate:
resume
isEqualToString:
canAccessAirDropSettings:
stringFromXPCObject:
initWithKind:rootNode:
setConnection:
setBoostMessage:
openNode:forProtocol:flags:
closeNode:
addNode:
removeNode:
setMode:
setOptions:
stringWithUTF8String:
invalidate
objectKey
removeObject:
handleBrowserMessage:forConnection:
handleOperationMessage:forConnection:
sharedMonitor
deviceInformation
sharedBrowser
description
dataWithPropertyList:format:options:error:
length
bytes
_disableAppSSO
sharedSession
handleNewConnection:
sharedAgent
sharedAdvertiser
sharedScanner
sharedEncryptionManager
sharedPayloadManager
isAirDropAvailable
sharedManager
setDispatchQueue:
activate
stateCapture
_performMigrations
removeAllObjects
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
networkBrowser:nodesChangedForParent:protocol:error:
networkOperation:event:withResults:
arrayFromXPCObject:
numberFromXPCObject:
.cxx_destruct
_activeObjects
_activityAdvertiser
_activityScanner
_airdropManager
_autoUnlockSessionManager
_encryptionManager
_nearbyIDSAgent
_exportedOperations
_pairedDeviceAgent
_listener
_payloadManager
_unlockKeyManager
_unlockLockManager
_stateHandle
_xpcServer
_helperConnection
restartBrowser:
notifyClient
updateBrowserState
airDropPublished:
lockStatusChanged:
screenStatusChanged:
contactsChanged:
linkStateChanged:
getInterface:
clearCache
cancelIdentityQueries
cancelAirDropRequests
logAirDropSessionInfo
removeInvalidNodes:
updateSecondaryNameForNodes:
updateServerCacheIfNeeded
startRecordQuery:type:domain:recordType:interface:
queryKey:type:domain:recordType:
queryRecordTimerCallBack:
addQueryToDictionary:name:type:domain:recordType:
cleanupRecordQueryForKey:
cleanupRecordQuery:type:domain:recordType:
ejectDisksIfNeeded:diskNames:
cleanupAirDropRequest:
copyNodeForService:
colorArrayFromEcolor:icolor:
cleanupRecordQueryForNetService:recordType:
personID
setDeviceIRKData:
setEdPKData:
setIdsDeviceID:
addOrUpdateIdentity:completion:
secTrustRef
logAirDropDiscoveryInfoForNode:
updateRPIdentityForAccountID:withAirDropClientInfo:
startIdentityQueryForNode:
preferVibrantIcons
startAirDropRequestForNode:
clearCacheAndNotify
handleIdentity:withQueryID:emailOrPhone:error:
restartAfterDelay:
validAirDropInterface:
addService:type:domain:interface:
removeService:type:domain:
notifyClientIfDone:
initWithDomain:type:name:
initWithBytes:length:encoding:
serviceFromServiceName:
valueForKey:inTXTRecord:withLength:
deviceInfoChanged:model:ecolor:icolor:osxvers:
commentChanged:comment:
personInfoChanged:flags:atag:cname:phash:ehash:nhash:
systemInfoChanged:diskInfo:
processTXTRecordUpdate:rdlen:rdata:
dateWithTimeIntervalSinceNow:
setFireDate:
checkDiscoveryEntitlement
startConnectionlessAdvertisingWithData:
stopConnectionlessAdvertising
advertiseHashes
copyNodeForName:
startPictureQuery:
handleBrowseCallBack:interface:error:name:type:domain:
odiskMountPoints:
handleQueryCallBack:error:fullname:rrtype:rdlen:rdata:
xpcConnection
_isAirDrop
_isNetBIOS
_isWorkgroups
_maxServices
_domain
_isFinder
_awdlIndex
_browserID
_restartTimer
_transfersInitiated
_transfersCompleted
_firstTime
_discoveredPeers
_servers
_dnsQueries
_serverCache
_airDropRequests
_identityQueries
_types
isCompressor
filePathURL
URLByResolvingSymlinksInPath
timeRemaining:timeNow:
lastPathComponent
absoluteURLIfTopLevelFile:isDirectory:base:
notifyProgress:force:
fileComplete
fixedRelativePath:
quarantineFile:
pathExistsInPlaceholderInfo:
validFileName:
relativePath
removeFileFromPlaceholderList:
copyReverseParentChain:base:
addFile:withBase:toBom:
addParentChain:file:base:
addFileURLToBom:file:base:propertyKeys:topLevel:
totalFileSize:
URLFromFileInfo:
URLByAppendingPathComponent:
conflictResolvedURL:
moveFile:toDestination:
executeReadWithAdaptiveCompression
executeWriteWithAdaptiveCompression
isDecompressor
createPlaceholderFiles
bomCopierCopy:destination:options:
moveFilesToDestination
removeUnusedPlaceholderFiles
allowProgressCircleToComplete
temporaryBomPath
initBomWithFiles
initWithReadStream:writeStream:
startBomCopy:destination:options:
bomCopierCopyFileFinished:type:size:operation:
bomCopierFatalFileError:
bomCopierFatalError:
prettyNameBasedOnUUID:
sourceFiles
senderName
skipReadableCheckFiles
_usePKZip
_fileCount
_totalBytes
_bomArchive
_tempFolder
_bomPath
_bomCopier
_lastBytesCopied
_totalBytesCopied
_writeStream
_timeStarted
_lastProgress
_topLevelFiles
_placeholderFiles
_orderedRelativePaths
_relativePathToFile
_progressTimer
_alternateNames
_compressionEngine
_creationCompletionHandler
_sourceFiles
_senderName
_skipReadableCheckFiles
initWithMachServiceName:
_setQueue:
sharedClient
sharedSetupAgent
_stateDump
initWithServer:xpcConnection:
autoFillDismissUserNotification
autoFillPairingSucceeded:completion:
autoFillPromptForPIN:throttleSeconds:
deviceDiscoveryFoundDevice:
deviceDiscoveryLostDevice:
deviceDiscoveryDeviceChanged:changes:
deviceDiscoveryScanStateChanged:
proximityClientDeviceEnteredImmediate:
proximityClientDeviceExitedImmediate:
proximityClientDeviceEnteredNearby:
proximityClientDeviceExitedNearby:
proximityClientDeviceWasDismissedHandler:reason:
proximityClientDeviceWasSelectedHandler:
proximityClientDeviceWillTriggerHandler:
proximityClientDeviceDidUntriggerHandler:
proximityClientDeviceUpdated:rssi:state:
remoteInteractionSessionRemoteTextEvent:
remoteInteractionSessionTextSessionDidBegin:
remoteInteractionSessionTextSessionDidEnd:
remoteInteractionSessionTextSessionDidChange:
serviceError:
servicePeerDisconnected:error:
serviceReceivedEvent:
serviceReceivedFrameType:data:peer:
serviceReceivedRequest:
serviceReceivedResponse:
sessionBluetoothStateChanged:
sessionError:
sessionReceivedEvent:
sessionReceivedFrameType:data:
sessionReceivedRequest:
sessionReceivedResponse:
userNotificationError:
userNotificationResponse:
userNotificationTextResponse:
userNotificationDictionaryResponse:
accountForAppleID:withCompletion:
myAccountWithCompletion:
statusInfoWithCompletion:
activateAssertionWithIdentifier:
activityStateWithCompletion:
appleIDInfoWithCompletion:
contactIDForEmailHash:phoneHash:completion:
displayNameForEmailHash:phoneHash:completion:
displayStringForContactIdentifier:deviceIdentifier:completion:
findContact:completion:
getDeviceAssets:completion:
getPeopleSuggestions:completion:
openSetupURL:completion:
preheatXPCConnection
preventExitForLocaleReason:
reenableProxCardType:completion:
repairDevice:flags:completion:
retriggerProximityPairing:
retriggerProximitySetup:
setAudioRoutingScore:completion:
setupDevice:homeIdentifier:completion:
showDevicePickerWithInfo:completion:
testContinuityKeyboardBegin:
triggerHomeKitDeviceDetectedWithURL:completion:
triggerProximityAutoFillDetectedWithURL:completion:
wifiPasswordSharingAvailabilityWithCompletion:
startProxCardTransactionWithOptions:completion:
coordinatedAlertsRequestStart:completion:
coordinatedAlertsRequestFinish
deviceDiscoveryActivate:completion:
deviceDiscoveryUpdate:
deviceDiscoveryFastScanTrigger:
deviceDiscoveryFastScanCancel:
bluetoothUserInteraction
diagnosticBLEModeWithCompletion:
diagnosticControl:completion:
diagnosticLogControl:completion:
diagnosticMock:device:completion:
diagnosticMockStart:
diagnosticMockStop:
diagnosticShow:completion:
diagnosticUnlockTestClientWithDevice:
diagnosticUnlockTestServer
nfcTagReaderUIActivateWithEndpoint:params:completion:
proximityClientActivate:completion:
proximityClientUpdate:
proximityClientDismissContentForDevice:completion:
proximityClientProvideContent:forDevice:force:completion:
proximityClientUpdateContent:forDevice:completion:
proximityClientRequestScannerTimerReset
autoFillHelperActivate:completion:
autoFillHelperDidPickUsername:password:error:
autoFillHelperTryPIN:
autoFillHelperUserNotificationDidActivate:
autoFillHelperUserNotificationDidDismiss:
remoteInteractionSessionActivate:completion:
remoteInteractionSessionSendPayload:
serviceActivate:completion:
serviceUpdate:
serviceSendEvent:
serviceSendFrameType:data:peer:
serviceSendRequest:
serviceSendResponse:
sessionActivate:completion:
sessionSendEvent:
sessionSendFrameType:data:
sessionSendRequest:
sessionSendResponse:
userNotificationPresent:
initWithObjects:
setExportedInterface:
setExportedObject:
_connectionInvalidated:
setRemoteObjectInterface:
connectionInvalidated
countForObject:
stateAppendXPCConnections:
listener:shouldAcceptNewConnection:
_appleIDAgent
_autoFillAgent
_assertions
_contactsQueue
_nearbyAgent
_prefNotifyToken
_riAgent
_rtiClient
_proxHandoffAgent
_setupAgent
_xpcConnections
_xpcInterfaceClient
_xpcInterfaceServer
_xpcListener
_invalidateAssertions
coordinatedAlertRequestCancel:
diagnosticBLEModeStop:
deviceDiscoveryRequestStop:
proximityClientStop:
sessionStop:
serviceStop:
unlockStopTestClient
cuValueForEntitlementNoCache:
_entitled:state:label:
remoteObjectProxy
setDismissUserNotificationHandler:
setPairingResponseHandler:
setPromptForPINHandler:
helperStart:
helper:didPickUsername:password:error:
helper:tryPIN:
helper:userNotificationDidActivate:
helper:userNotificationDidDismiss:
update
setPreventNotifications:
setPreventRepair:
contactIdentifier
unifiedContactWithIdentifier:keysToFetch:error:
emailAddress
unifiedContactsMatchingPredicate:keysToFetch:error:
setContactIdentifier:
stringByReplacingOccurrencesOfString:withString:
setEmailAddress:
phoneNumber
initWithStringValue:
contactIDs
_getPeopleInfo:completion:
maxPeople
_getPeopleSuggestions:completion:
setContactID:
setMaximumNumberOfSuggestions:
initWithConfiguration:
rankedGlobalSuggestionsFromContext:contactsOnly:
recipients
senderHandle
setSendersKnownAlias:
setHandles:
openSetupURL:
reenableProxCardType:
setAudioRoutingScore:
handleInputDidBeginWithFlags:sessionInfo:
handleInputDidEndWithFlags:sessionInfo:
uiShowing
coordinatedAlertRequestStart:
coordinatedAlertRequestFinish:
setDeviceLostHandler:
setScanStateChangedHandler:
deviceDiscoveryRequestStart:
changeFlags
discoveryFlags
deviceFilter
fastScanMode
setFastScanMode:
overrideScreenOff
setOverrideScreenOff:
rssiThreshold
setRssiThreshold:
scanRate
trackPeers
setTrackPeers:
deviceDiscoveryRequestUpdate:
deviceDiscoveryFastScanTrigger:reason:
deviceDiscoveryFastScanCancel:reason:
diagnosticBLEModeStart:
testUI:
testRemote:
testService:
testKeychain:
caseInsensitiveCompare:
sharedNearbyPipe
testPipePing
setHotspotInfo:
testUIAppleTVSetup:
testSetupUIB238:
testHomeKitDeviceDetected:
testNFCUI:
testPairUI:
testPINShow:
testPINHide
testSetupUIPasswordSharing:
testRepairUI:
testSetupUIWHA:
testSetupUIWatch:
testProxCardKit:
testPost:
diagnosticMockChanged:
diagnosticMockFound:
diagnosticMockLost:
idsDevicesAppendDescription:
bleProximityInfo
unlockStartTestClientWithDevice:
unlockStartTestServer
setDeviceEnteredImmediateHandler:
setDeviceExitedImmediateHandler:
setDeviceEnteredNearbyHandler:
setDeviceExitedNearbyHandler:
setDeviceWasDismissedHandler:
setDeviceWasDismissedHandlerEx:
setDeviceWasSelectedHandler:
setDeviceWillTriggerHandler:
setDeviceDidUntriggerHandler:
wantsUpdates
setDeviceUpdateHandler:
proximityClientStart:
shouldAdvertise
setShouldAdvertise:
proximityClient:dismissContentForDevice:
proximityClient:provideContent:forDevice:force:
proximityClient:updateContent:forDevice:
proximityClientRequestScannerTimerReset:
setRemoteTextEventHandler:
setTextSessionDidBegin:
setTextSessionDidEnd:
setTextSessionDidChange:
sessionStart:
sendPayload:
_entitledService:state:
setErrorHandler:
setEventMessageHandler:
setPeerDisconnectedHandler:
setReceivedFramePeerHandler:
setRequestMessageHandler:
setResponseMessageInternalHandler:
setSendFramePeerHandler:
serviceStart:
updateWithService:
serviceSendEvent:service:
serviceType
bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:
serviceSendRequest:service:
serviceSendResponse:service:
serviceUUID
setBluetoothStateChangedHandler:
setReceivedFrameHandler:
setSendFrameHandler:
setSession:
sessionSendEvent:session:
peerDevice
sessionSendRequest:session:
sessionSendResponse:session:
_afsHelper
_caRequest
_ddRequest
_diagnosticBLEModeStarted
_entitledBluetoothUserInteraction
_entitledClient
_entitledCoordinatedAlerts
_entitledDeviceDiscovery
_entitledDiagnostics
_entitledProximityClient
_entitledRemoteInteractionSession
_entitledService
_entitledSession
_notification
_preventExitForLocaleReason
_proxClient
_riSession
_service
_session
_server
_unlockTestClientStarted
_xpcCnx
rangeOfString:options:
initWithUUIDString:
keyData
keyIdentifier
dateCreated
numberWithUnsignedShort:
initWithDictRepresentation:
dictRepresentation
setKeyIdentifier:
setDateCreated:
setLastUsedCounter:
setKeyData:
_validKey
_lastUsedCounter
_keyIdentifier
_dateCreated
_keyData
newEncryptionKey
prepareForNewEncryptionRequest
getTagWhileEncryptingBytesInPlace:counterValue:forAdvertisementWithVersion:
getResultWhileDecryptingBytesInPlace:andCounter:withTag:version:
valueForKeyPath:
encryptionKey
deleteAllEncryptionAndDecryptionKeys
unwrappedDataRepresentationForKey:
saveEncryptionKeyDataRepresentation:
loadEncryptionKeyDataRepresentation
propertyListWithData:options:format:error:
numberWithInteger:
generateNewEncryptionKey
timeIntervalSinceDate:
saveDecryptionKeyDataRepresentation:forDeviceIdentifier:
loadDecryptionKeyDataRepresentationForDeviceIdentifier:
newDecryptionKeyFromDataRepresentation:
loadWrappingKeyData
baseDictEncryptionKey
baseDictDecryptionKeyForDeviceIdentifier:
baseDict
baseDictWrappingKey
addEntriesFromDictionary:
addObjectsFromArray:
hasPrefix:
testWrappingKeychainItem
loadKeyDataRepresentationWithBaseDict:
saveKeyDataRepresentation:withBaseDict:
bumpEncryptionKeyCounterValue
setDecryptionKey:forDeviceIdentifier:
decryptionKeyForDeviceIdentifier:
dataRepresentationForCurrentEncryptionKey
_deviceIdentifierToDecryptionKey
_encryptionKey
_wrappingKey
_shouldRefreshWrappingKey
applySSLSettings:
currentRunLoop
startOpenTimer
usingMessages
logTransfer
handleBytesForStream
openTimerFired:
propertyForKey:
handleOpenedStream:
handleBytesAvailable
handleSpaceAvailable
invalidateOpenTimer
setTCPProperties:
checkedCert
setCheckedCert:
evaluateCert
handleBytesForMessage
handleSpaceForMessage
handleSpaceForStream
shouldReadNetwork
messageWithData:
headerWithLength:
handleHeaderRead
handleMessageRead
parseHeader:
trimHeader:
resetReadState
handleMessageWritten:
sendMessage:withErrorHandler:
inputStream
setInputStream:
outputStream
setOutputStream:
registeredStreams
setRegisteredStreams:
bufferSpaceAvailable
setBufferSpaceAvailable:
openTimer
setOpenTimer:
isClient
setClient:
setStreamError:
outputStreamData
setOutputStreamData:
byteIndex
setByteIndex:
outMessage
setOutMessage:
messageQueue
setMessageQueue:
handlers
setHandlers:
bytesRead
setBytesRead:
inMessageLength
setInMessageLength:
inMessage
setInMessage:
inData
setInData:
inputState
setInputState:
loggedTransfer
setLoggedTransfer:
wroteToNetwork
setWroteToNetwork:
readFromNetwork
setReadFromNetwork:
timeOpened
setTimeOpened:
timeToOpen
setTimeToOpen:
_shouldReadNetwork
_usingMessages
_checkedCert
_registeredStreams
_bufferSpaceAvailable
_client
_loggedTransfer
_inMessageLength
_inputStream
_outputStream
_openTimer
_streamError
_outputStreamData
_byteIndex
_outMessage
_messageQueue
_handlers
_bytesRead
_inMessage
_inData
_inputState
_wroteToNetwork
_readFromNetwork
_timeOpened
_timeToOpen
hasLtk
setHasSignout:
hasSignout
signout
_ltk
_ltkID
_signout
initWithURL:
setHTTPShouldHandleCookies:
currentDevice
serverFriendlyDescription
hasActivityType
activityType
_activityType
_homePodEnsureStarted:completion:
_tvEnsureStarted:completion:
_watchEnsureStarted:completion:
initWithBundleIdentifier:
setWantsNotificationResponsesDelivered
requestAuthorizationWithOptions:completionHandler:
getNotificationSettingsWithCompletionHandler:
_addRequestWithID:content:type:isHomePodMini:
requestWithIdentifier:content:trigger:
setAttachments:
addNotificationRequest:withCompletionHandler:
attachmentWithIdentifier:URL:options:error:
notification
actionIdentifier
tvKeyboardRemove:
clientUserDidTapNotification:
setBody:
setCategoryIdentifier:
setShouldHideTime:
setShouldHideDate:
soundWithAlertType:
setSound:
setSubtitle:
setShouldBackgroundDefaultAction:
setShouldSuppressDefaultAction:
_tvKeyboardPostIfNeeded:backgroundAction:
tvKeyboardContentForDevice:backgroundAction:
_addRequestWithID:content:type:
_tvKeyboardRemove:
removeDeliveredNotificationsWithIdentifiers:
_tvKeyboardRemoveAll
removeAllDeliveredNotifications
_tvKeyboardUpdate:info:
prompt
title
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
_tvKeyboardUpdate:rtiData:
payloadWithData:version:
documentTraits
_tvAutoFillPostIfNeeded:
_tvAutoFillRemove:
_tvAutoFillRemoveAll
_watchKeyboardPostIfNeeded:
watchKeyboardContentForDevice:
_watchKeyboardRemove:
_watchKeyboardRemoveAll
_watchKeyboardUpdate:rtiData:
notificationType
body
header
homePodType
setHeader:
setShouldIgnoreDoNotDisturb:
attachmentURL
attachmentFromURL:
_homePodHandoffPostIfNeeded:info:
homePodHandoffContentForDevice:info:
_homePodHandoffRemove:reason:
removePendingNotificationRequestsWithIdentifiers:
notificationDidDismiss:reason:
_homePodHandoffRemoveAll
_homePodHandoffUpdateIfNeeded:info:
setAttachmentURL:
homePodHandoffUpdateIfNeeded:info:
userDidTapNotification:
homePodHandoffRemove:reason:
_homePodHandleResponse:completion:
_tvHandleResponse:completion:
_watchHandleResponse:completion:
testAutofillPost
testAutoFillRemove
testHandoffPost
testKeyboardPost
testKeyboardPostAutoFill
testKeyboardRemove
testKeyboardUpdate
testWatchKeyboard
testWatchKeyboardAutoFill
testPostBasic
setTitle:
setNotificationType:
homePodHandoffPostIfNeeded:info:
tvKeyboardPostIfNeeded:backgroundAction:
setDeviceActionType:
setPrompt:
tvKeyboardUpdate:info:
watchKeyboardPostIfNeeded:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
tvKeyboardRemoveAll
tvKeyboardUpdate:rtiData:
watchKeyboardRemove:
watchKeyboardRemoveAll
watchKeyboardUpdate:info:
_watchKeyboardUpdate:info:
watchKeyboardUpdate:rtiData:
homePodHandoffRemoveAll
_autoFillRequests
_homePodNotifCenter
_homePodMiniNotificationCenter
_homePodNotifGranted
_homePodRequests
_tvKeyboardRequests
_tvNotifCenter
_tvNotifGranted
_watchKeyboardRequests
_watchNotifCenter
_watchNotifGranted
authorizationStatus
_browser
canHandleTransferRegardlessOfBundleID
initWithKeyOptions:valueOptions:capacity:
transportQueue
loadCloudPairRetries
updateBluetoothIDCache
clientQueue
clientMap
sendIdentifierToSessionID
clearAutoUnlockDeviceCache
autoUnlockDeviceCache
onqueue_bluetoothIDForIDSID:
onqueue_bluetoothDeviceIdentifiers
activeDevice
isActive
autoUnlockDeviceForIDSDevice:
autoUnlockDeviceForBluetoothID:cached:
onqueue_devicesWithLTKs
onqueue_autoUnlockEligibleDevices:
showOtherDevices
watchVersionEligibleForDevice:
setKeyExists:
setLastSeenWatchDate:
watchCurrentlyInList
setWatchCurrentlyInList:
setWatchExistedInUnlockList:
activityServiceHasWatch
onqueue_enabledAutoUnlockDevicesUsingCache:
setModelIdentifier:
productName
setProductName:
productVersion
setProductVersion:
setProductBuildVersion:
nameForDevice:
enclosureColor
setEnclosureColor:
setDefaultPairedDevice:
modelNameForDevice:
setMajorOSVersion:
setSupportsAlwaysDirect:
setSupportsApproveWithWatch:
setSupportsApproveIcon:
disableEncryption
setSupportsEncryption:
setSupportsAdvertisingUnlocked:
setSupportsConnectionCache:
setSupportsHEIC:
cachedApproveBluetoothIDs
enabledAutoUnlockDevices
setCachedApproveBluetoothIDs:
isEqualToSet:
showIDInName
cachedBluetoothIDToUniqueIDs
setCachedBluetoothIDToUniqueIDs:
setProxyBluetoothID:
setBluetoothCloudPaired:
accountType
registrationStatus
supportsConnectionCache
cloudPairRetryRecords
setCloudPairRetryRecords:
sendPayload:toDevice:type:sessionID:queueOneID:timeout:errorHandler:
sendPayload:toDevice:type:sessionID:queueOneID:timeout:completion:
transferDataFromPayload:sessionID:
initWithArray:
initWithFormat:
completionHandlers
primaryClient
serverReceivedTime
fromServerStorage
pairingRequestIsValidForDeviceID:messageContext:
removeClientForIdentifier:
bluetoothDeviceIdentifiers
isDeviceSatellitePaired
deviceTypeForDeviceID:
approveBluetoothIDs
macVersionEligibleForDeviceID:
proxyBluetoothDeviceIDForDeviceID:
connectionCacheDevices
updateRetryDatesForDeviceIDs:
canRetryCloudPairingForDeviceID:useShortDate:
setIdsService:
setTransportQueue:
setClientQueue:
setClientMap:
setCompletionHandlers:
setSendIdentifierToSessionID:
sendDates
setSendDates:
lastSendDate
setLastSendDate:
setAutoUnlockDeviceCache:
_lastSeenWatchDate
_watchExistedInUnlockList
_watchCurrentlyInList
_primaryClient
_transportQueue
_clientQueue
_clientMap
_completionHandlers
_sendIdentifierToSessionID
_sendDates
_lastSendDate
_autoUnlockDeviceCache
_cloudPairRetryRecords
_cachedBluetoothIDToUniqueIDs
_cachedApproveBluetoothIDs
rangingMeasurementFromNode:
mostRelevantMeasurementFromA:andMeasurementB:
arrayWithObject:
workgroups
loadWindows
takeActionOnServerChanged:neighborhood:
notifyClientAboutWorkgroups
userName
setUserName:
setConnectionState:
domainsChanged:
workgroupsChanged:
connectedChanged:
odiskNodes
managedChanged:
classroomChanged:
sidebarPrefsChanged:
sharedRapportBrowser
airDropNodes
localizedCaseInsensitiveCompare:
subarrayWithRange:
domainChildren
workgroupChildren
printerNodes
fileNodes
addBonjourChildrenFromCache:
addConnectedChildrenFromCache:
addClassroomChildrenFromCache:
addRapportChildrenFromCache:
addFakeRangingMeasurementIfAppropriateToNodesInCache:
coalescedNodesForNodesCache:
updateSelectionReasonInNodes:
loadBonjour
loadDomains
loadSharePoints
loadWorkgroups
loadConnected
loadManaged
loadClassroom
loadODisk
loadRapport
loadAirDrop
loadSidebarPrefsMonitor
unloadBonjour
unloadWindows
unloadDomains
unloadSharePoints
unloadWorkgroups
unloadConnected
unloadManaged
unloadClassroom
unloadODisk
unloadAirDrop
unloadRapport
unloadSidebarPrefsMonitor
neighborhoodNodes
addWindowsChildrenFromCache:
addManagedChildrenFromCache:
sidebarNodesFromServerNodes:nonServerCount:addAllNode:
sharePointNodes
appendAllNode:
nodesInternal:
horizontalAngle
ptsScore
sharePointBrowser:nodesDidChangeWithError:
onlySupportsADisk:
copyOverBonjourInfo:source:
_parent
_protocols
_combineWorkgroups
_odiskDomains
_airDropDomains
_bonjourDomains
_windowsWorkgroups
_domainBrowser
_managedBrowser
_classroomBrowser
_connectedBrowser
_workgroupBrowser
_sharePointBrowser
_rapportBrowser
_managedURLTable
_commentHashTable
_originalNodes
initWithAccountIdentifier:emailOrPhone:
accountIdentifier
_accountIdentifier
_emailOrPhone
date
array
_accountForAppleID:
altDSID
copyPrivateKey
certificateExpired
isInvalid
validationRecord
_prefsChanged
_addObservers
_ensurePushStarted
_ensurePeriodicVerifyTimerStarted
_ensureEduModeDevicesAreCleanedUp
handleAppleIDSignedInNotification
handleAppleIDSignedOutNotification
handleAppleIDChangedNotification
handleUILockStatusChangedNotification
handleKeyBagFirstUnlockNotification
_removeObservers
_ensurePushStopped
_ensurePeriodicVerifyTimerStopped
_ensureThrottledRetryTimerStopped
certificateToken
certificateTokenCreationDate
dateByAddingTimeInterval:
compare:
setCertificateToken:
setPrivateKeyPersistentReference:
setCertificateToken:privateKeyPersistentReference:forAppleID:
removeAppleID:
clearPersonInfoCache
identityForAppleID:
copyIdentity
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:
requestTokenForTopic:identifier:
validStartDate
suggestedValidDuration
nextCheckDate
needsUpdate
validatedEmailHashes
validatedPhoneHashes
privateKeyPersistentReference
certificatePersistentReference
certificateExpirationDate
serialNumber
intermediateCertificatePersistentReference
intermediateCertificateExpirationDate
intermediateCertificateSerialNumber
needsRenewal
_wasOldAgentIdentityQueried
_metaInfoValueForKey:
_accountState
_keychainCleanupTag
_setMetaInfoValue:forKey:
shutdown
_handlePeriodicVerifyTimerFired
_handleThrottledRetryTimerFired
_setCurrentAppleIDIdentity:
_setCurrentAppleIDContactInfo:validationRecord:
_verifyStateWithDelay:
_updateAppleID
_clearAccount
_verifyState
sharedBag
IDMSEnvironment
dictionaryWithDictionary:
initWithDictionary:
addPersonInfoToCache:
_handleCertificateStatusUpdate:forAppleID:
setSuggestedValidDuration:
setValidatedEmailHashes:
setValidatedPhoneHashes:
setValidStartDate:
_handleUILockStatusChange
setLastConnectionDate:
setLastSuccessfulConnectionDate:
_ensureThrottledRetryTimerStartedWithSuggestedDelay:
verifyKeys
numberWithUnsignedLongLong:
numberWithUnsignedInteger:
initWithAppleID:
setResponseHandler:
connection:didReceiveIncomingMessage:
dictionary
initWithType:appleID:info:
cachedPersonInfoWithEmailOrPhone:
containsString:
_handleFindPersonResponse:forRequest:emailOrPhone:withError:queue:completion:
_update
_handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:
_handleReceivedCertificateToken:privateKeyPersistentReference:forAppleID:
setCertificateTokenHandler:
initWithAppleID:certificateToken:privateKeyPersistentReference:
_handleReceivedIdentity:forAppleID:identityRequest:withError:completion:
setIdentity:forAppleID:
setContactInfo:validationRecord:forAppleID:
setMetaInfo:
statusInfo
_detailedDescription
metaInfo
addAppleID:
_cleanUpAccount:
_handleServerTaskCompletionWithError:
_requestIdentityForAppleID:certificateToken:privateKeyPersistentReference:withCompletion:
_performKeyVerificationForIdentity:
_handleKeyVerificationFailure
_performKeychainCount
_requestInfoForAppleID:completion:
_handleAccountIdentifierValidationRecordMismatch
_handleUntrustedAppleIDCertificateChainForIdentity:
_checkIfAppleIDCertificateChainIsValidForIdentity:completion:
queryVerifiedIdentityForEmailOrPhone:queue:completion:
verifiedIdentityForEmailOrPhone:queue:completion:
_copyIdentityForAppleID:
personInfoWithEmailOrPhone:queue:completion:
_invalidate
_personInfoWithEmailOrPhone:queue:completion:
_performServerTaskWithInfo:completion:
_performOtherTaskWithInfo:completion:
_statusInfo
_handleAppleIDChangedNotification
_handleAppleIDSignedInNotification
_handleAppleIDSignedOutNotification
_handleKeyBagFirstUnlockNotification
_handleUILockStatusChangedNotification
topic
_updateMyInfo
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
_wasIdentityLinkedOnce
verifiedIdentityForEmailOrPhone:completion:
verifiedIdentityForEmailOrPhone:
verifiedIdentityForCertificateChain:emailOrPhone:error:
detailedDescription
personInfoWithEmailOrPhone:completion:
prefsChanged
requestWithInfo:completion:
_agentEnabled
_agentMetaInfo
_appleID
_creationDate
_dbManager
_dispatchQueue
_findPersonRequests
_identityRequest
_infoRequest
_linkIdentityEnabled
_periodicVerifyTimer
_pushConnection
_pushEnvironment
_task
_testIdentityRequest
_throttledRetryTimer
_updatePush
_updatePeriodicVerifyTimer
string
substringFromIndex:
appendFormat:
_createLocationManager
_createWiFiObserver
wifiRequestQueue
_processRequestQueue
currentRequest
_disableRangeable
setCurrentRequest:
_stopAWDL
removeObjectAtIndex:
queueAvailableHandler
setAwdlStarting:
_startAWDLWithInfo:
_invalidateCurrentRequest
setAwdlStartFailed:
setAwdlTimerFired:
rangingPeer
clRangingPeer
locationManager
requestRangingToPeers:timeoutSeconds:
rangingIntiator
startRangingFromPeers:
setRangeable:
rangeable
stopRangingFromPeers:
rangingCompletedHandler
invalidateAWDLTimer
calledAWDLStarted
awdlTimer
handleAWDLTimerFired
setAwdlTimer:
waitingForNetworkToDisable
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
addWiFiRequest:
cancelWiFiRequest:
_startRanging
_enableRangeableIfNeeded
locationManager:didRangePeers:
locationManager:rangingDidFailForPeer:withError:
_handleAWDLDisabledIfNeeded
restartAWDLTimer
setAwdlNetwork:
awdlStartFailed
awdlStarting
awdlTimerFired
setLocationManager:
setWifiRequestQueue:
_awdlStartFailed
_awdlStarting
_awdlTimerFired
_awdlNetwork
_currentRequest
_locationManager
_wifiRequestQueue
dispatchQueue
_sendLogRequestToDeviceID:honeybeeID:
idsService
_sendLogRequestToDevices:honeybeeID:
_sendMessage:devices:type:
receivedHoneybeeIDs
collectingSysdiagnose
_uploadSysdiagnose:
_collectSysdiagnoseWithCompletion:
_uploadSysdiagnoseToHoneybee:honeybeeID:
type
_handleLogRequest:
sendLogRequestToDeviceIDs:honeybeeID:
sendLogRequestToDevices:honeybeeID:
setCollectingSysdiagnose:
sysdiagnoseQueue
setSysdiagnoseQueue:
setReceivedHoneybeeIDs:
honeybeeConnection
setHoneybeeConnection:
_collectingSysdiagnose
_sysdiagnoseQueue
_receivedHoneybeeIDs
_idsService
_honeybeeConnection
aa_primaryAppleAccount
dataWithBytes:length:
dataUsingEncoding:
base64EncodedStringWithOptions:
fileSystemRepresentation
firstObject
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
dictionaryWithObjects:forKeys:count:
absoluteURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
errorWithDomain:code:userInfo:
stringByAppendingPathComponent:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
URLByDeletingLastPathComponent
copy
pathExtension
stringByDeletingPathExtension
mutableCopy
whitespaceCharacterSet
rangeOfCharacterFromSet:options:
substringWithRange:
intValue
floatValue
deleteCharactersInRange:
appendString:
count
reverseObjectEnumerator
domain
code
getResourceValue:forKey:error:
lowercaseString
hasSuffix:
componentsSeparatedByString:
objectAtIndexedSubscript:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
valueWithPointer:
integerValue
numberWithLong:
postNotificationName:object:userInfo:
characterAtIndex:
streamToService:withFileHandle:acceptReply:
enableService:
disableService:
streamHandlerForService:
clientProxy
setClientProxy:
streamHandlers
setStreamHandlers:
enabledServices
setEnabledServices:
_managerID
_clientProxy
_streamHandlers
_enabledServices
searchForBrowsableDomains
scheduleBrowser
displayNameForDomain:
parseDomain:
buildNodes
statusChanged:
_domains
_domainTree
buildNodesAndNotify
setHasEventType:
hasEventType
setHasActivityLevel:
hasActivityLevel
setHasOtherDevices:
hasOtherDevices
setHasBestIsMe:
hasBestIsMe
setHasSkipScanPhoneCall:
hasSkipScanPhoneCall
setHasSkipScanVeryActive:
hasSkipScanVeryActive
eventType
activityLevel
otherDevices
bestIsMe
skipScanPhoneCall
skipScanVeryActive
_eventType
_otherDevices
_bestIsMe
_skipScanPhoneCall
_skipScanVeryActive
sendAWDLInfo:
setLocalAWDLInfo:
useRealRangingKey
legacyProtocol
rangingKey
setAwdlInfoData:
setRangingKey:
localAWDLInfo
setCoreLocationError:
setStartAWDLError:
appIcon
setAppIcon:
_useAKSToken
_inRange
_shouldUnlock
_acceptor
_rangingTimedOut
_aksSuccess
_legacyProtocol
_useEncryption
_awdlInfoData
_awdlStart
_awdlInterval
_rangingKey
_rangingErrorString
_rangingStart
_rangingInterval
_attemptError
_remoteAWDLInfo
_localAWDLInfo
_sessionRangingKey
_wifiErrorDomain
_wifiRangingErrorCode
_wifiRangingResults
_coreLocationError
_startAWDLError
_wifiRequest
_appIcon
setHasFailureReasons:
setHasLtkSyncing:
hasLtkSyncing
_failureReasons
_ltkSyncing
handleClosedConnection
notifyClientForEvent:
wirelessPowerChanged:
notifyClient:withResults:
performBlockForAllProgresses:
totalUnitCount
getTransferRate
handleTerminalCallBack
senderInfoAvailable
silentlyCancelRequest
fileInfoExpectedClassForKeyMap
validatedFileInfo:
validatedFilesArray:
validatedItemsArray:
idSelfIdentity
deviceIRKData
edPKData
idsDeviceID
enqueueResponse:code:body:
senderIsMe
URLWithString:relativeToURL:
scheme
cuFilteredArrayUsingBlock:
storeDataValue:forKey:
senderIsTrusted:
senderIsBlocked
sendDiscoverResponse:forKnownAlias:
storeArrayValue:forKey:
storeStringValue:forKey:
storeIconValue:forKey:
convertURLStringsToURLs
createPersonForAskRequest
allowAskRequestFromPerson:
addAirDropPerson:
adjustPropertiesForPhotosBundles
silentlyCancelRequestOnMainThread
sendAskResponse:
parseDiscoverRequest
handleDiscoverRequest
parseAskRequest
handleAskRequest
cancelAndDecline
processRequest
whereFromInfo
setSenderName:
shouldExtractMediaFromPhotosBundles
setShouldExtractMediaFromPhotosBundles:
startPublishingProgressForPlaceholderFiles:
setPlaceholderFiles:withCreationCompletionHandler:
setTotalBytes:
compressionType
setCompressionType:
setDestination:
setReadStream:
unzip
startReceivingBody:error:
enqueueBadResponseForRequest:
makeDestinationDirectory
storeRequestValue:forKey:convertToNumber:
thereIsEnoughFreeSpace
oneHundredContinue:
startReceivingFile:error:
sendUploadResponse:
numberWithLongLong:
notifyClientOfBytesCopied:timeRemaining:
getStatusCode:
finishOperation
storeNumberValue:forKey:
transferIsOverPrebufferLimit
setSpotlightMetadata:
setCombinedFileURLsAndItems:
removeAirDropPerson:
fileZipper:event:withProperty:
didCloseConnection
didReceiveError:
storeBooleanValue:forKey:
logSenderIsBlocked
handleReadStreamEvent:event:
didReceiveRequest:
didSendResponse:forRequest:
didFailToSendResponse:
contactsOnly
destination
_discover
_personAdded
_stopDeferred
_userAccepted
_senderTrusted
_delayedFinish
_queueSuspended
_endEncountered
_connectionClosed
_transactionStarted
_person
_destination
_requestBuffer
_progress
_queue
_clientTrust
_startTime
_lastEvent
_requestData
_readStream
_zipper
_askSemaphore
_askRequest
_uploadRequest
_discoverRequest
_mediaCapabilities
_contactsOnly
_shouldExtractMediaFromPhotosBundles
initializeStateCaptureBlock
shouldScanForCopyPaste
shouldScanForHandoff
shouldBoostScan
deviceTracked
componentsJoinedByString:
startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:
stopScanningForType:
lostAllDevices
setIdsDevice:
clientAdvertisement
receivedAdvertisement:
isLocallyPaired
isNearby
didLosePeer:
didLosePeerTimer:
initWithDevice:
setDeviceTracked:
idsDevice
foundDeviceWithDevice:
options
isDefaultPairedDevice
updateWithRawAdvertisementData:receivedViaScanning:newAdvertisementHandler:
scanForTypes:
activityPayloadFromDeviceUniqueID:forAdvertisementPayload:command:timeout:withCompletionHandler:
lostDeviceWithDevice:
dumpState
systemHasPoweredOn:
setDisableDuplicateFilterOnce:
nearbyServiceDevicesChanged:
_scanTypes
_scannerEnabled
_isScanning
_scanningTransaction
_stopScanLostDeviceTimer
_deviceIdentifierToDeviceRecord
_deviceIdentifierToLostDeviceTimers
setModelCode:
hasModelName
hasModelCode
setHasBluetoothDiscovery:
hasBluetoothDiscovery
setHasBonjourDiscovery:
hasBonjourDiscovery
setHasBonjourTXTRecordDiscovery:
hasBonjourTXTRecordDiscovery
setHasBonjourResolveComplete:
hasBonjourResolveComplete
setHasTcpConnectionComplete:
hasTcpConnectionComplete
setHasTlsHandshakeComplete:
hasTlsHandshakeComplete
setHasIdentityQueryComplete:
hasIdentityQueryComplete
setHasTotalDiscovery:
hasTotalDiscovery
setHasVerifiableIdentity:
hasVerifiableIdentity
setHasRssi:
hasRssi
setHasAwdlVersion:
hasAwdlVersion
setHasPlatform:
hasPlatform
hasBrowserID
awdlVersion
platform
browserID
_awdlVersion
_modelCode
_platform
_rssi
macAddressData
_clRangingPeer
_macAddressData
activateCalled
setActivateCalled:
invalidateCalled
setInvalidateCalled:
setWifiRangingError:
awdlStartedHandler
peerFoundHandler
rangingStartedHandler
setCalledAWDLStarted:
rangingStarted
setRangingStarted:
setWaitingForNetworkToDisable:
_rangingIntiator
_rangeable
_calledAWDLStarted
_rangingStarted
_waitingForNetworkToDisable
_rangingPeer
_wifiRangingError
_queueAvailableHandler
_awdlStartedHandler
_peerFoundHandler
_rangingStartedHandler
_rangingCompletedHandler
mountedVolumeURLsIncludingResourceValuesForKeys:options:
opticalDisk:
URLForRemounting:
setNodeModel:protocol:url:
setODiskServers:
recentNodes
connectedNodes
addToRecents:
setServers:
combineRecentAndConnectedNodes:
postNotification
removeAirDropPersonInternal:
browseAfterDelay:
buildNodesAndNotify:
volumesChanged:
_clientCount
_recentsCount
_connectedCount
_sendNotification
_odiskServers
_airDropPeople
setHasHttpStatusCode:
hasHttpStatusCode
setHasType:
hasType
setHasIdmsEnv:
hasIdmsEnv
httpStatusCode
idmsEnv
_httpStatusCode
_idmsEnv
initWithServiceName:
securityScopedURLForDownloadsFolderWithReplyHandler:
monogramImageDataForContactSync:style:diameter:monogramsAsFlatImages:replyHandler:
groupMonogramImageDataForContactsSync:style:diameter:monogramsAsFlatImages:replyHandler:
urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:replyHandler:
monogramImagesForMultipleContactsSync:style:diameter:monogramAsFlatImages:replyHandler:
CGImgDataForUIActivityTitles:foregroundColor:replyHandler:
CGImgDataForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:replyHandler:
CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:replyHandler:
CGImgDataForActionPlatterWithTitle:tintColor:replyHandler:
CGImgDataForNearbyBadgeWithCount:replyHandler:
updateShareSheetHostConfiguration:
setSessionKeepAliveTransactionIdentifier:
initWithQueue:
CGImageWithCacheKey:contactIDs:type:
_updateShareSheetHostConfiguration
synchronousRemoteObjectProxyWithErrorHandler:
updateCacheFromSFCGImageData:cacheKey:contactIDs:
contacts
iconIndex
cacheLookupKey
initWithContacts:icon:atIndex:cacheLookupKey:
loadBatchImageCacheData:cacheKey:mapCacheHitImage:runProxy:type:
initWithContact:icon:atIndex:cacheLookupKey:
blackColor
whiteColor
CGColor
colorWithRed:green:blue:alpha:
initWithImageTitle:
keyDerivedFromRelevantTraitCollectionProperties
keyDerivedFromRelevantTraitCollectionPropertiesWithOppositeUserInterfaceStyle
imageTitle
identifierForColor:
initWithImageTitle:image:cacheLookupKey:
getOppositeColor:
CGImgForUIActivityTitles:foregroundColor:processOppositeColor:
image
initWithCapacity:
MD5HashOfStrings:
CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:
CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:
setCacheLookupKey:
getRed:green:blue:alpha:
hostTraitCollection
userInterfaceStyle
preferredContentSizeCategory
layoutDirection
remoteObjectProxyWithErrorHandler:
whitelistedDownloadsFolderURL
copyConversationIdentityImageIconDataForImage:forConversationIdentifier:style:diameter:monogramsAsFlatImages:isContactImage:
_loadGroupContactIdentityImage:
urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:
sendShareSheetInvocationMetricsWithAppBundleID:numSuggestions:suggestionDisplayNames:extensionsCacheResult:isDarkMode:duration:
CGImgForActionPlatterWithTitle:tintColor:
CGImgForNearbyBadgeWithCount:
interruptionHandler
invalidationHandler
_needsTransactionRelease
_invalidateCalled
_connectionToService
_intervalID
_signpostName
_cacheAccessCount
_cacheAccessDict
_cacheAccessLock
_queuedBlocks
_latestHostConfig
_interruptionHandler
_invalidationHandler
sendInitialRequest
startBrowser
searchForServicesOfType:inDomain:
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
notifyStreamRequestWithError:
sendMessage:withCompletionHandler:
switchToStreaming
setUsingMessages:
writeNetworkStream
fileHandle
setBufferSize:socket:
initWithFileDescriptor:
open
initForReadingFromData:error:
decodeObjectOfClass:forKey:
handleStreamRequest:
handleStreamResponse:
serviceFromAuthorData:
sendInitialResponse:
networkBufferSpaceAvailable
setNetworkBufferSpaceAvailable:
hasBytesAvailable
readClientStream
setShouldReadNetwork:
writeClientStream
stopIfReady
handleOpenedStream
streamError
streamStatus
hasSpaceAvailable
write:maxLength:
logClientReceived
read:maxLength:
logClientSent
writeToStreamWithData:
stream:handleEvent:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
streamHandler:didReceiveMessage:
streamHandlerDidClose:
streamHandlerDidClose:withError:
streamHandler:bufferSpaceChanged:
streamHandler:didReceiveStreamData:
streamHandler
setStreamHandler:
authorData
setAuthorData:
initiator
setInitiator:
shouldStop
setShouldStop:
clientSent
setClientSent:
clientReceived
setClientReceived:
netServiceBrowser
setNetServiceBrowser:
clientInputStream
setClientInputStream:
clientOutputStream
setClientOutputStream:
writeQueue
setWriteQueue:
networkStreamData
setNetworkStreamData:
readQueue
setReadQueue:
clientStreamData
setClientStreamData:
readFromClient
setReadFromClient:
wroteToClient
setWroteToClient:
streamsRequestHandler
setStreamsRequestHandler:
_initiator
_shouldStop
_clientSent
_clientReceived
_networkBufferSpaceAvailable
_fileHandle
_streamHandler
_authorData
_netServiceBrowser
_clientInputStream
_clientOutputStream
_writeQueue
_networkStreamData
_readQueue
_clientStreamData
_readFromClient
_wroteToClient
_streamsRequestHandler
setCancelAction:
setSelectedAction:
errorString
errorDetailedString
suitableContentsTitle
loadSuggestedPeers
_systemWillSleep
_systemHasPoweredOn
testDeviceID
foundPeers
setObject:atIndexedSubscript:
postSuggestionNotification
triggerDevicesIfNeeded
setupRetryIfNeeded
retriedSetup
alwaysShowSetupRetry
lastSuccessfulDevice
invalidateSuggestedDeviceTimer
setupRetryDeviceTimer
suggestionManagerQueue
setSetupRetryDeviceTimer:
sortUsingComparator:
setSuggestedPeer:
suggestedPeer
deviceTimer
setDeviceTimer:
restartServiceTimer:
invalidateServiceTimer
serviceTimer
invalidateSuggestionService
setServiceTimer:
autoUnlockEligibleDevices
setCurrentBluetoothIDs:
currentBluetoothIDs
autoUnlockDeviceForBluetoothID:
supportsAdvertisingUnlocked
foundFirstPeer
setFoundFirstPeer:
postNotificationIfNeeded
suggestionManagerSessionID
updateSuggestionService
watchAvailableForUnlockWithCompletionHandler:
canSuggestForDeviceID:
suggestedPeers
setSuggestedPeers:
integerForKey:
setInteger:forKey:
suggestionNotificationSetUpSelected
suggestionNotificationDismissed
setupRetryNotificationSetUpSelected
setupRetryNotificationDismissed
setupRetryNotificationTimedOut
handleTestSuggestion
restartSetupRetryDeviceTimer:
invalidateSetupRetryDeviceTimer
restartSuggestedDeviceTimer:
startScanningForIDSDeviceIDs:
sendStartAdvertisingToDeviceID:
shouldSendRequestsForDeviceID:
updateDefaultsForDeviceID:
featureSuggestedForDeviceID:
suggestionsEnabled
ignoreBackOff
setFoundPeers:
setSuggestionManagerSessionID:
setSuggestionManagerQueue:
_foundFirstPeer
_suggestedDeviceID
_setupRetryDeviceID
_lastSuccessfulDevice
_foundPeers
_currentBluetoothIDs
_serviceTimer
_deviceTimer
_setupRetryDeviceTimer
_suggestedPeers
_suggestedPeer
_suggestionManagerSessionID
_suggestionManagerQueue
hasCompanionDeviceModel
setHasKeyRequestExchangeTime:
hasKeyRequestExchangeTime
setHasTokenExchangeTime:
hasTokenExchangeTime
setHasKeyDeviceLocked:
hasKeyDeviceLocked
setHasSetupSucceeded:
hasSetupSucceeded
setHasWatchExistedInUnlockList:
hasWatchExistedInUnlockList
setHasTimeIntervalSinceLastWatch:
hasTimeIntervalSinceLastWatch
setHasUpsell:
hasUpsell
setHasResponseTimeout:
hasResponseTimeout
setHasResponseTimeoutFromServer:
hasResponseTimeoutFromServer
setHasMessageTimeout:
hasMessageTimeout
setHasMessageTimeoutFromServer:
hasMessageTimeoutFromServer
setHasSetupRetry:
hasSetupRetry
setHasMacOldLTKSyncStatus:
hasMacOldLTKSyncStatus
setHasMacNewLTKSyncStatus:
hasMacNewLTKSyncStatus
setHasWatchOldLTKSyncStatus:
setHasWatchNewLTKSyncStatus:
setHasReceivedSetupACK:
hasReceivedSetupACK
setHasReceivedTokenACK:
hasReceivedTokenACK
keyRequestExchangeTime
tokenExchangeTime
setupSucceeded
timeIntervalSinceLastWatch
upsell
setupRetry
macOldLTKSyncStatus
macNewLTKSyncStatus
_timeIntervalSinceLastWatch
_keyRequestExchangeTime
_macNewLTKSyncStatus
_macOldLTKSyncStatus
_tokenExchangeTime
_setupRetry
_setupSucceeded
_upsell
_userDefaultsKeyForHash:
installSleepStateMonitor
installManagedConfigurationMonitor
installFinderSidebarPrefsMonitor
installWirelessCarPlayMonitor
installSMBPreferencesMonitor
installCarPlayStatusMonitor
installDynamicStoreCallBack
installLocaleChangeMonitor
installSpringBoardStateMonitor
installSystemUIMonitor
installDisplaySleepMonitor
installDisplayConfigurationMonitor
installClamshellStateChangeMonitor
installBonjourNameMonitor
installContactsMonitor
installUserPictureMonitor
installUILockStatusMonitor
installSleepWakeCallBack
installBluetoothMonitor
installWirelessMonitor
installAppleIDAccountInfoMonitor
installAppleIDUsernameMonitor
installVolumesMonitor
installBacklightMonitor
installSleepNotification
installWiFiPasswordSharingMonitor
installSSIDCacheMonitor
installWristStateMonitor
installMISMonitor
installCoreTelephonyMonitor
installAirplaneModeMonitor
_multipleUsersLoggedIn
resetMeCardWithReason:
createHostNameKey:
setValue:forKey:
logAirDropTransactionForClientServer:beginEnd:count:
discoverableMode
updateDiscoverableMode
wirelessEnabled
wirelessCarPlay
wirelessAccessPoint
bluetoothEnabled
enableAirDropReceiving
isAirDropAllowed
isAirDropReady
reconciledDiscoverableMode
appleIDAccountState
eduModeEnabled
defaultDiscoverableMode
postNotification:
newDiscoverableMode
myAppleID
accountStatusForAppleID:
emailOrPhone
_copyMyAppleIDCertificate
myAccount
identity
copyCertificate
_copyMyAppleIDIntermediateCertificate
copyIntermediateCertificate
_copyMyAppleIDSecIdentity
_myAppleID
copyIdentityForAppleID:
accountForAppleID:
contactInfo
validatedEmailAddresses
altDSIDNeedsFixing
saveVerifiedAccount:withCompletionHandler:
aa_updatePropertiesForAppleAccount:completion:
clearMyAppleIDInfo
accountPropertyForKey:
setAuthenticationType:
setServiceType:
setAltDSID:
setIsUsernameEditable:
username
setUsername:
authenticateWithContext:completion:
validatedPhoneNumbers
copyMyAppleIDSecIdentity
myAppleIDEmailAddresses
myAppleIDPhoneNumbers
containsObject:
raise:format:
givenName
firstName
setGivenName:
familyName
lastName
setFamilyName:
phoneNumbers
arrayWithArray:
phoneNumberWithStringValue:
initWithLabel:value:
setPhoneNumbers:
emailAddresses
setEmailAddresses:
enableNewHashing
shared
contactForCombinedHash:
generateContactHashes
contactWithContactIdentifier:
contactIdentifierForMediumHashes:
subdataWithRange:
contactsContainsShortHashes:
acquireTokenForIdentifier:
meCard
identifier
GeneralContactKeysToFetch
initWithKeysToFetch:
arrayWithObjects:count:
predicateForContactsWithIdentifiers:
setPredicate:
enumerateContactsWithFetchRequest:error:usingBlock:
predicateForContactsMatchingPhoneNumber:
predicateForContactsMatchingEmailAddress:
value
emailsForContact:
addEmails:toLongHashes:andMediumHashes:andShortHashes:forContactIdentifier:
instantMessageEmailsForContact:
phoneNumbersForContact:
addPhoneNumbers:toLongHashes:andMediumHashes:andShortHashes:forContactIdentifier:
addressOrNumForHash:
instantMessageAddresses
rangeOfString:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
null
addAdditionalInformationToMeCard:
updateMeCard:
stringValue
updateFamilyHotspotState
sharedConnection
isPersonalHotspotModificationAllowed
numberWithBool:
postNotification:userInfo:
isPasswordProximityAutoFillRequestingAllowed
myAppleIDValidationRecord
bluetoothAddressData
stringByAppendingString:
aa_altDSID
commonNameForCertificate:
emailAddressesForAppleID:
phoneNumbersForAppleID:
validationRecordInfoForAppleID:
stringFromContact:style:
aa_primaryEmail
unifiedAppleIDInfo
myMediumHashes:
generateShortHashDataFromEmails:
smbConfiguration:netBiosName:workgroup:
computerName
modelName
isClassroomEnabled
deviceSupportsContinuity
finderServer
aa_isManagedAppleID
appleIDAccountInfoChanged:
addObserver:selector:name:object:
handleAWDLState:
bluetoothAddressChanged
setBluetoothAddressChangedHandler:
activateWithCompletion:
uninstallBonjourNameMonitor
clearHashesToContacts
hashesNeedUpdating
clearMyIconAndHash
contactStoreDidChange:
contactsStoreMeCardChanged:
clearComputerName
clearLocalHostName
restartBonjourNameMonitor
addObserver:
managedConfigurationSettingsChanged:
updateAirDropAllowed
updatePersonalHotspotAllowed
updateBlacklistedAppBundleIDs
effectiveBlacklistedAppBundleIDs
stringForWatchWristState:
handleWiFiPasswordSharingChanged
b332BTAddressRotationDelay
shareSheetMaxSuggestions
b332PairingEnabled
isBuddyCompleted
enableOOBPCredentialLogging
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
clearMonitorCache
addServerName:forHostName:
airDropTransactionBegin:
airDropTransactionEnd:
discoverableLevel
mountPointsForServer:
odiskMountPointsForServer:
removeServerName:
serverNameForHost:
setODiskMountPoints:
setDiscoverableMode:
setServerMountPoints:
verifyAndParseValidationRecordData:intoDictionary:
cacheCertificate:forRealName:
cacheIdentity:
copyCertificateForRealName:
copyMyAppleIDCertificate
copyMyAppleIDIntermediateCertificate
fixAltDSIDIfNeeded
handleAppleAccountSignIn
handleAppleAccountSignOut
hsa2EnabledWithCompletionHandler:
verifiedIdentityForAppleID:
awdlDevice
awdlInfoForPeerWithServiceName:
awdlNetwork
contactForEmailHash:phoneHash:
contactIdentifierIsBlocked:
contactIsBlocked:
contactWithPhoneNumberOrEmail:
emailOrPhoneForEmailHash:phoneHash:
autoHotspotState
updateAutoHotspotState
cellularDataEnabled:airplaneMode:
lteConnectionShows4G
familyHotspotStateForAltDSID:
familyHotspotEnabled
networkType
personalHotspotAllowed
signalStrength
simStateReady
addPreventExitForLocaleReason:
removePreventExitForLocaleReason:
defaultWiFiDevice
wifiPasswordSharingAvailability
wifiSSIDForSSIDHash:
airDropPublished
setAirDropPublished:
setBluetoothEnabled:
setFinderServer:
setWirelessEnabled:
airplaneModeEnabled
setAirplaneModeEnabled:
awdlInfo
awdlPeerList
awdlStateInfo
bluetoothAddress
bonjourName
consoleUser
clearConsoleUser
deviceKeyBagState
localHostName
minPersonImageSize
modelCode
myAccountAppleID
myAltDSID
myAppleIDCommonName
myAppleIDEmailHash
myAppleIDPhoneHash
myEmail
myName
myGivenName
myPrimaryEmail
myMediumHashes
myShortHashesForAirDrop
netbiosName
sidebarMaxCount
someComputerName
systemUIFlags
workgroup
workgroupThreshold
allEnabled
alwaysAutoAccept
alwaysSendPayload
backlightOn
bonjourEnabled
browseAllInterfaces
bypassLTKeyAbort
carplayConnected
coalesceMe
computerToComputer
connectedEnabled
currentConsoleUser
deviceKeyBagDisabled
deviceKeyBagLocked
deviceKeyBagLocking
deviceKeyBagUnlocked
deviceRequiresNewRanging
deviceSupportsRanging
deviceSupportsWAPI
deviceUIUnlocked
deviceWasUnlockedOnce
disableAutoAccept
disableCompression
disableContinuityTLS
disablePeopleSuggestions
disablePictureQuery
disablePipelining
disableQuarantine
disableExtractMediaFromBundles
disableRotation
disableTLS
dockHasDownloadsFolder
enableAirDropAdvertising
enableAllRecents
enableBugs
enableContinuity
enableDebugMode
enableDemoMode
enableDVZip
enableHotspotFallback
enablePKZip
enableStrangers
enableStreamDebugging
enableWebloc
enableXML
finderAirDropEnabled
forceAWDL
forceP2P
handoffVisible
ignoreIconDiskCache
internetSharingEnabled
myAppleIDIsManaged
registerAllInterfaces
runningAsSetupUser
screenOn
showMeInWormhole
showThisComputer
signedIntoPrimaryiCloudAccount
sleepModeOn
testDiskFull
wifiUserPowerPreference
updateAWDLStateInfo
airplaneModeChanged
logBluetoothAvailabilityState:
logBluetoothPowerState
uninstallCarPlayStatusMonitor
handleDynamicStoreCallback:changedKeys:
installKeyBagUnlockMonitor
handleNameMonitorCallBack:flags:error:
pairedWatchWristState
updatePairedWatchWristState:
pairedWatchLockState
updatePairedWatchLockState:
handleMISStateChanged:
updateLocalPowerSource:
localPowerSource
handleSleepWakeCallBack:messageArguement:
reloadSMBConfInfo
updateWatchWristState:
watchWristState
clearOperationModeInfo
clearWirelessState
logWiFiPowerState
awdlState
lastDarkWakeDate
controlCenterVisible
multipleUsersLoggedIn
_activateStarted
_airDropAllowed
_airDropCount
_airDropModeNotifyToken
_airDropPublished
_backlightOn
_backlightLevelToken
_bonjourName
_carplayConnected
_certificates
_computerName
_computerToComputer
_consoleUser
_consoleUserID
_contactStore
_currentDiscoverableMode
_deviceInformation
_deviceIsHighPriority
_deviceKeyBagState
_deviceKeyBagUnlocked
_deviceSupportsWAPI
_deviceUIUnlocked
_deviceWasUnlockedOnce
_dynamicStoreSource
_finderAirDropEnabled
_finderServer
_handoffVisible
_identities
_keyBagUnlockToken
_localHostName
_mountPoints
_myAppleIDCommonName
_myAppleIDIntermediateCertificate
_myAppleIDCertificate
_myAppleIDSecIdentity
_myEmailHashes
_myPhoneHashes
_nameMonitor
_needsExitForLocaleChange
_netbiosName
_notifierObject
_notifyPortRef
_odisksMountPoints
_pairedWatchWristState
_personalHotspotAutoState
_personalHotspotFamilyEnabled
_personalHotspotFamilyStates
_personalHotspotAllowed
_pmConnection
_preventExitForLocaleReasons
_rootPort
_screenOn
_serverNames
_sleepModeOn
_smbPreferences
_ssidHashes
_systemMonitor
_systemUIFlags
_uiLockStatusToken
_wirelessAccessPoint
_workgroup
_watchWristState
_requestedDiscoverableMode
_screenBlankedToken
_longHashesToContactIdentifier
_mediumHashesToContactIdentifier
_shortHashes
_controlCenterVisible
___meCard
_awdlState
_lastDarkWakeDate
_effectiveBlacklistedAppBundleIDs
clearCacheWithSync:
openLinks
setHasSessionID:
_authToken
_btPipeEnsureStarted
_activityMonitorLastUserEventDelta
copyMyAppleIDAndReturnError:
securityLevel
defaultStore
activeAccount
sharedInstance
authKitAccountWithAltDSID:
securityLevelForAccount:
accountName
meDeviceFMFDeviceID
meDeviceIDSDeviceID
meDeviceName
idsIsSignedIn
idsDeviceArray
_idsAppleTVCount
_idsContinuityDeviceCount
_idsHomePodCount
_idsShouldEncryptActivityLevel
setLabel:
_handleAirDropDiscoverableModeChanged:
_handleAppleIDChanged:
_activityMonitorWatchWristStateChanged:
_activityMonitorScreenStateChanged:
_activityMonitorUILockStatusChanged:
_unlockApproveBluetoothIDsChanged:
_bleAdvertisingAddressChanged
setCallChangedHandler:
_idsMeDeviceChanged
setMeDeviceChangedHandler:
setScreenOnChangedHandler:
setScreenSaverChangedHandler:
setWifiStateChangedHandler:
setManateeChangedHandler:
_idsEnsureStarted
_activityMonitorEnsureStopped
_identificationEnsureStopped
_bleNearbyActionAdvertiserEnsureStopped
_bleNearbyActionScannerEnsureStopped
_bleNearbyInfoAdvertiserEnsureStopped
_bleNearbyInfoScannerEnsureStopped
_bleProximityPairingScannerEnsureStopped
_btPipeEnsureStopped
_idsEnsureStopped
initWithBytes:length:
bleProximityRSSIEstimatorInfo
setRSSIEstimatorInfo:
_activityMonitorEnsureStarted
_identificationEnsureStarted
_bleNearbyActionAdvertiserShouldAdvertise
_bleNearbyActionAdvertiserEnsureStarted
_bleNearbyActionScannerShouldScan
_bleNearbyActionScannerEnsureStarted
_bleNearbyInfoAdvertiserShouldAdvertise
_bleNearbyInfoAdvertiserLingerIfNeeded
_bleNearbyInfoAdvertiserEnsureStarted
_bleNearbyInfoScannerShouldScan
_bleNearbyInfoScannerEnsureStarted
_bleProximityPairingScannerShouldScan
_bleProximityPairingScannerEnsureStarted
_activityMonitorUpdate
_bleNearbyInfoAdvertiserUpdate
_activityMonitorCarPlayStatusChanged:
_activityMonitorMultipleUsersLoggedInChanged:
_activityMonitorCurrentLevelAndNeedsPoll:recentUserActivity:
activeCallCount
_activityMonitorUpdateUserActive:
_bleNearbyInfoAdvertiserLingerStart:
screenSaverActive
advertiseRate
authTagOverride
deviceColorCode
deviceModelCode
needsKeyboard
sessionFlags
problemFlags
requestSSID
numberWithUnsignedChar:
_bleUpdateAuthTagIfNeeded
setAdvertiseRate:
_idsBluetoothDeviceIDsForLEPipe
setLePipeDevices:
setPayloadFields:
_bleUpdateScanner:typeFlag:
_deviceDiscoveryBLEDeviceFound:type:
_deviceDiscoveryBLEDeviceLost:type:
_deviceDiscoveryBLEDeviceChanged:type:changes:
_deviceDiscoveryBLEScanStateChanged:type:
setRssiLog:
statusFlags
_idsShouldAdvertiseNearbyInfo
_bleEncryptActivityLevel:
_bleNearbyInfoAdvertiserUpdateAddAudioRoutingScore:
_bleNearbyInfoAdvertiserUpdateAddHotspotInfo:
lePipeDevices
needsAWDL
autoUnlockEnabled
autoUnlockWatch
duetSync
watchLocked
meDeviceIsMe
wifiFlags
_newZeroingDataWithBytes:length:
dataWithData:
sendData:completion:
_unlockReceivedFrameData:peer:device:
_bleNearbyInfoReceivedFrameType:src:end:cnx:
_setupHandleCreateSession:data:
_setupHandleSessionCreated:data:
_setupHandleSessionEncryptedFrame:type:cnx:
eventMessageHandler
setBodyData:
serviceReceivedFrameType:serviceType:data:peer:
sessionReceivedFrameType:serviceType:data:peer:
setHeaderFields:
requestMessageHandler
responseMessageInternalHandler
addClient:
setAcceptor:
connectionState
initWithDevice:acceptor:
activateDirect
removeClient:
_idsBluetoothDeviceIDsForSharing
_btPipeHandleFrameType:data:
setFrameHandler:
sendFrameType:payload:completion:
authTagForData:type:error:
scanCache
scanRateOverride
payloadFilterData
setPayloadFilterData:mask:
setScanCache:
trackedPeers
setTrackedPeers:
performUpdate:
bleProximityInfoForActionType:device:
setInsideMediumBubble:
setInsideSmallBubble:
setCloseProximityEstimatorMedium:
setCloseProximityEstimatorSmall:
bleProximityInfoForType:device:allInfo:
decimalDigitCharacterSet
rangeOfCharacterFromSet:
bleProximityRSSIThreshold:
closeProximityEstimatorSmall
closeProximityEstimatorMedium
setupProximityEstimator
bleProximityEstimatorForActionType:device:
setSetupProximityEstimator:
deviceFlags
_bleProximityUpdateDeviceCloseNearbyActionDevice:
infoProximityEstimator
setInfoProximityEstimator:
setEventType:
setActivityLevel:
setOtherDevices:
setBestIsMe:
setSkipScanPhoneCall:
setSkipScanVeryActive:
_idsBluetoothDeviceIDsForiMessage
_idsBluetoothDeviceIDsForSMSRelay
_idsBluetoothDeviceIDsForAnnouncements
_deviceDiscoveryRequestStart:
idsBluetoothDeviceIDsForSharing
_idsBluetoothDeviceIDsForMe
_idsBluetoothDeviceIDsForHomePods
scanState
deviceFoundHandler
scanStateChangedHandler
_deviceDiscoveryFastScanStart:device:reason:
_identificationHandleDiscoveryStop
_unlockDeviceFilterChangedForRequest:
deviceLostHandler
_deviceDiscoveryFastScanStop:reset:reason:
needsKeyboardOnly
setScanRateOverride:
setDeviceFlags:
idsIdentifier
idsAddCachedIDSIdentifierToDevice:
_bleProximityUpdateNearbyActionDevice:
_identificationHandleDeviceFound:flags:
_bleProximityUpdateNearbyInfoDevice:
rapportIdentifier
paired
_deviceDiscoveryFastScanEvaluate:device:
_identificationHandleDeviceLost:flags:
setTriggered:
deviceChangedHandler
_identificationGetIdentities
compareWithRPIdentity:
_identificationReIdentify
getIdentitiesWithFlags:completion:
rpIdentity
setRpIdentity:
setBtAddr:
updateWithRPIdentity:
_identificationIdentifyDevice:sfDevice:
_identificationDecryptAudioRoutingScoreData:device:authTag:identity:
_identificationDecryptHotspotData:device:authTag:identity:
_identificationDecryptActivityLevel:device:authTag:identity:
setAdvertisementFields:
setRequestSSID:
_identificationMaintenanceTimer
setLastUpdateTicks:
lastUpdateTicks
_identificationReIdentifySameAccountDevices:type:
btAddr
verifyAuthTag:data:type:error:
contactID
setIdsIdentifier:
_idsBluetoothDeviceIDsForSharingLocked
supportsSMSRelay
supportsMMSRelay
getScanningDeviceCandidates:
_idsDeviceArrayLocked
isConnected
compare:options:
manateeAvailable
setDeviceClassCode:
setDeviceColorCode:
setDeviceModelCode:
receivedFramePeerHandler
_sendMessage:frameType:service:session:
initWithRequestMessage:
setSessionFlags:
_setupSendCreateSession:cnx:
receivedFrameHandler
headerFields
bodyData
_setupSendData:sessionIdentifier:cnx:clientSession:
deviceIDs
setPeerIdentifier:
setSessionCreated:
setReadKey:
setReadNonce:
setWriteKey:
setWriteNonce:
dhSecretKey
sendDataQueue
readKey
readNonce
_setupHandleSessionMessageType:src:end:cnx:session:
clientSession
setClientSession:
setDhSecretKey:
sessionCreated
setSendDataQueue:
writeKey
writeNonce
_startUnlockBLEConnectionWithDevice:encrypted:
setBleEncrypted:
setLatencyCritical:
idsBluetoothDeviceIDsForLEPipe
setLePipeCapable:
_stopUnlockBLEConnectionWithDevice:
_sendUnlockData:toBLEDevice:direct:completion:
sendDataDirect:completion:
setWithSet:
_testPipePing
setBoostNearbyInfo:
_bleNearbyInfoReceivedData:cnx:peer:
bleNearbyInfoStartConnectionToDevice:owner:connected:
bleNearbyInfoStopConnectionToDevice:owner:
bleProximityEstimatorsResetDeviceClose
bleProximityRSSIThresholdForType:device:
idsAddCachedIDSIdentifier:device:
idsBluetoothDeviceIDsForWatches
idsDeviceForBluetoothDeviceID:conflictDetected:
_idsHasActiveWatch
_idsMacCount
sendUnlockDataDirect:toBLEDevice:completion:
unlockStopTestServer
autoUnlockActive
audioRoutingScore
bleAuthTag
boostNearbyInfo
btConnectedDeviceMonitor
hotspotInfo
_activityCarPlayRegistered
_activityLevelNotifyToken
_activityLevel
_activityMonitorStarted
_activityMultipleUsersRegistered
_activityPollSeconds
_activityRecentSeconds
_activityScreenOn
_activityTimer
_activityUIUnlocked
_activityUserActive
_bleAdvertisingAddress
_bleAudioRoutingScoreEncryptedData
_bleAuthTagOverride
_bleConnections
_bleDiagnosticAdvSuppressLogged
_bleDiagnosticModeClients
_bleHotspotEncryptedData
_bleNearbyActionAdvertiser
_bleNearbyActionAdvertiseActive
_bleNearbyActionAdvertiseDisabled
_bleNearbyActionAdvertiseLingerTimer
_bleNearbyActionDevices
_bleNearbyActionRSSILog
_bleNearbyActionScanAlways
_bleNearbyActionScanNever
_bleNearbyActionScanner
_bleNearbyInfoAdvertiseAlways
_bleNearbyInfoAdvertiseDisabled
_bleNearbyInfoAdvertiseLingerSecs
_bleNearbyInfoAdvertiser
_bleNearbyInfoAdvertised
_bleNearbyInfoAdvertiseLingerTimer
_bleNearbyInfoAirDropUsable
_bleNearbyInfoDevices
_bleNearbyInfoRSSILog
_bleNearbyInfoWiFiP2P
_bleNearbyInfoScanner
_bleProximityEnabled
_bleProximityInfo
_bleProximityInfoOverride
_bleProximityPairingScanner
_bleProximityRSSILog
_btPipeEnabled
_btPipeForced
_btPipe
_caEnabled
_caForce
_caMessageNoScans
_caMessageScans
_caPhoneCalls
_caRequests
_caScanIfVeryActive
_caSingleDevice
_contactHashesCached
_contactHashesEnabled
_ddFastScanLastEndTicks
_ddFastScanTimer
_ddNearbyActionDevices
_ddNearbyActionEnabled
_ddNearbyActionScreenOff
_ddNearbyInfoDevices
_ddNearbyInfoEnabled
_ddNearbyInfoScreenOff
_ddProximityPairingDevices
_ddProximityPairingEnabled
_ddProximityPairingScreenOff
_ddRequests
_familyFlags
_familyNotifyToken
_homePodIdentifiesAsB520
_idsAppleTVCountCache
_idsBluetoothDevicesArray
_idsBluetoothDevicesSet
_idsBTtoIDSInfoMap
_idsContinuityDeviceCountCache
_idsDeviceArray
_idsDeviceBTDictionary
_idsDeviceCountBTDictionary
_idsHasActiveWatchCache
_idsHomePodCountCache
_idsIsSignedInCache
_logProxAdvFields
_remoteAppServiceUUID
_services
_sessions
_setupSessions
_systemService
_unlockAdvertiseAlways
_unlockAdvertiseAggressive
_unlockAdvertiseEnabled
_unlockAdvertiseBackground
_unlockAdvertiseWatch
_unlockAdvertiseWatchLocked
_unlockTestClientTimer
_idDevices
_idEnabled
_idIdentitiesChangedNotifyToken
_idIdentityArray
_idMaintenanceTimer
_systemWillPowerDown
_autoUnlockActive
_boostNearbyInfo
_audioRoutingScore
_hotspotInfo
_bleAuthTag
_btConnectedDeviceMonitor
_idSelfIdentity
_btAddr
_discoveryFlags
_lastUpdateTicks
peerIdentifier
_sessionCreated
_clientSession
_dhSecretKey
_readKey
_readNonce
_writeKey
_writeNonce
_peerIdentifier
_sendDataQueue
accountStore
setCredential:forAccount:serviceID:error:
saveAccount:withCompletionHandler:
aida_tokenForService:
setServiceIdentifier:
_setPassword:
setShouldUpdatePersistentServiceTokens:
appleIDAccountWithAppleID:
store
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
aliasesForAccount:
altDSIDForAccount:
appleIDAccountWithAltDSID:
dataWithLength:
URLByAppendingPathComponent:isDirectory:
replaceIconValue:forKey:
makeDestinationDirectoryWithIdentifier:error:
sf_initWithFileURL:
setCancellationHandler:
_publish
setSf_transferState:
longLongValue
setTotalUnitCount:
setCompletedUnitCount:
transferManager
setUserInfoObject:forKey:
sf_failedWithError:
_unpublish
transferWithIdentifierWasAccepted:
transferWithIdentifierWasDeclined:withFailureReason:
updateTransferWithIdentifier:withState:information:completionHandler:
transferWithIdentifierWasDeclined:
setClassroomDelegate:
_transferIDToProgress
subtype
_hasPhotos
_hasVideos
presentEnableRadiosAlertForBluetooth:andWLAN:
configureSettingsForAirDrop
setStatusAndNotify
somethingChanged:
presentDisablePersonalHotspotAlert
_started
_phUserNotification
_radiosUserNotification
_iconHash
notifyClient:
parseResults:port:txtLen:txtRecord:interface:
setPath:
setHostName:
setPortNumber:
_timeout
_resolve
_timer
_url
_name
_path
_hostName
modelIdentifier
productBuildVersion
operatingSystemVersion
rssi
setDeviceWasLocked:
stopUnlockBLEConnectionWithDevice:
setWaitingForDisplayOrClamshell:
_cancel
setCanceled:
unlockSucceeded
lockKeyBagIfNeeded
sendUnlockConfirmation:withError:
lockedKeyBag
otherProviderCancel
deviceWasLocked
setLockedKeyBag:
_handleCanceledAfterSuccess
setErrorType:
deviceConnected:
displayConfigChanged:
clamshellStateChanged:
waitingForDisplayOrClamshell
setConfigChangeType:
consumeAuthTokenIfReady
attemptTimedOut
usingProxy
watchModelID
discoveryTime
connectionWaitTime
awdlInfoExchange
keyRequestExchange
tokenExchange
confirmation
awdlInterval
peerFoundInterval
rangingInterval
configChangeType
displayClamshellWaitTime
awdlTotal
btBootstrap
btOverall
completeExchange
watchRSSI
shouldUnlock
watchBuildVersion
watchOSVersion
attemptError
errorType
distance
sessionIsValid
generateACMContextData
supportsApproveIcon
setImageData:
setImageHash:
sendAuthPromptRequestWithImageHash:appName:
imageHash
setImageDataAlreadyCached:
imageDataAlreadyCached
sendAuthPromptImageDataIfReady:
chosenDevice
setFirstSend:
useEncryption
startUnlockBLEConnectionWithDevice:encrypted:
sendAWDLInfo
handleFoundBLEDevice:available:lockedOnWrist:
discoveryDate
setDiscoveryDate:
aksPeerAvailable
setFoundPeer:
setConnectionDate:
dateWithTimeIntervalSinceReferenceDate:
setDiscoveryTime:
setConnectionTime:
startDate
setConnectionWaitTime:
setConnected:
receivedAWDLInfo
receivedExchangeRequest
onlyRanging
startAWDLError
rangingStart
displayOrClamshellWaitingDate
setDisplayClamshellWaitTime:
foundPeer
connected
handleTimerFired
confirmationTimer
setConfirmationTimer:
rangingDisabled
setWifiRangingResults:
wifiRangingError
setWifiErrorDomain:
setWifiRangingErrorCode:
setRangingInterval:
peerInRange:
setInRange:
handlePeerInRange
setRangingTimedOut:
setRangingErrorString:
wifiRangingErrorCode
rangingErrorString
stringByAppendingFormat:
handlePeerOutOfRange
setDistance:
useCoreLocation
distanceMeters
setShouldUnlock:
setAwdlTotal:
setOnlyRanging:
coreLocationError
rangingTimedOut
wifiErrorDomain
awdlUp
setAwdlUp:
setAwdlInterval:
setPeerFoundInterval:
setRangingStart:
setAttemptError:
connectionDate
firstSend
setAwdlInfoExchange:
handleAuthPromptResponse:
setKeyRequestExchange:
handleSessionKeyExchangeRequest:
exchageResponseDate
setTokenExchange:
setBtBootstrap:
handleSessionAuthToken:
invalidateConfirmationTimer
handleConfirmationACK
setReceivedAWDLInfo:
sentExchangeResponse
invalidateTimerIfReady
setOldWatch:
hasSupportsConfirmationACK
supportsConfirmationACK
hasKeyData
receivedAuthPromptResponse
setReceivedAuthPromptResponse:
setNeedsNewImage:
setReceivedExchangeRequest:
hasUsingRecord
resetSession
setAksSession:
usingRecord
sendKeyExchangeResponseWithData:
sessionAuthToken
hasAuthToken
setSessionAuthToken:
setBtOverall:
startAWDL
confirmationSendDate
setConfirmation:
setCompleteExchange:
setUnlockSucceeded:
sentImageData
peerMacAddress
setMacAddressData:
handleAWDLUp
handlePeerFound:
setPeerFoundHandler:
handleRangingStarted
setRangingStartedHandler:
handleRangingResults:errorCode:
setRangingCompletedHandler:
inRange
authToken
setDisplayOrClamshellWaitingDate:
useProxy
wrapPayload:withType:useProxy:senderID:
sendData:bleDevice:completionHandler:
setIconHash:
needsNewImage
setFinalMessage:
setSentImageData:
setExchageResponseDate:
setSentExchangeResponse:
sendingConfirmation
setSendingConfirmation:
setSupportsACK:
setConfirmationSendDate:
sendData:type:completionHandler:
restartConfirmationTimer:error:
invalidateNoDisconnect
handleDecryptionFailure:
isAcceptor
getAppName
updateImageData:imageHash:
connectionActivated
sendAWDLInfoData:type:completionHandler:
setBluetoothID:
wifiState
setWifiState:
setOtherProviderCancel:
setProxyDiscoveryTime:
setAutoUnlockDevice:
externalACMContext
oldWatch
setPeerMacAddress:
setWatchRSSI:
displayCount
setDisplayCount:
displayTimer
setDisplayTimer:
setWatchModelID:
setWatchBuildVersion:
setWatchOSVersion:
_useProxy
_wifiState
_otherSessionCancel
_otherProviderCancel
_attemptTimedOut
_chosenDevice
_canceled
_oldWatch
_onlyRanging
_foundPeer
_connected
_lockedKeyBag
_unlockSucceeded
_deviceWasLocked
_receivedAWDLInfo
_receivedAuthPromptResponse
_sendingConfirmation
_sentExchangeResponse
_receivedExchangeRequest
_supportsConfirmationACK
_waitingForDisplayOrClamshell
_sentImageData
_imageDataAlreadyCached
_needsNewImage
_awdlUp
_watchRSSI
_bluetoothID
_startDate
_discoveryTime
_proxyDiscoveryTime
_autoUnlockDevice
_externalACMContext
_imageData
_imageHash
_peerMacAddress
_sessionAuthToken
_displayCount
_configChangeType
_displayTimer
_confirmationTimer
_watchModelID
_watchBuildVersion
_watchOSVersion
_discoveryDate
_connectionDate
_firstSend
_exchageResponseDate
_displayOrClamshellWaitingDate
_confirmationSendDate
_btOverall
_btBootstrap
_awdlInfoExchange
_keyRequestExchange
_tokenExchange
_confirmation
_peerFoundInterval
_awdlTotal
_completeExchange
_connectionTime
_connectionWaitTime
_displayClamshellWaitTime
onqueue_enumerateRemoteObjectProxiesUsingBlock:
onqueue_remoteObjectProxyForConnection:usingBlock:
onqueue_activate
onqueue_invalidate
onqueue_connectionInvalidated:
setActiveConnections:
retainArguments
invoke
exceptionWithName:reason:userInfo:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
_invalidateDone
_activeConnections
setHasSender:
hasSender
setHasBytesPerSec:
hasBytesPerSec
hasModel
setHasLegacy:
hasLegacy
sender
bytesPerSec
legacy
_bytesPerSec
_legacy
_sender
setToChangeAnchor:
executeChangeHistoryClearRequest:error:
installApplication:withOptions:error:
initWithUnsignedInteger:
isRunningInStoreDemoMode
isAirDropAppInstallationAllowed
forcePersistNow
contactOrFakeMeCardWithIdentifier:
_contactIDForEmailOrPhone:
ContactHashableKeysToFetch
iOSDisplayContactKeysToFetch
macOSDisplayContactKeysToFetch
descriptorForRequiredKeysForStyle:
initWithBase64EncodedString:options:
initWithClientIdentifier:
setShouldUnifyResults:
changeHistoryWithFetchRequest:error:
changesTruncated
latestChangeAnchor
enumerateContactChangesWithKeysToFetch:fromContactStore:error:usingBlock:
changeType
contact
firstUnlocked
registerChangeHistoryClientIdentifier:error:
initWithBucketSize:tokenDurationSec:
initWithBucket:dupHistoryLength:
setFirstUnlockHandler:
setPowerUnlimitedChangedHandler:
powerUnlimited
initWithKeyType:valueType:
openAtPath:error:
enumerateKeyType:valueType:error:handler:
startAtPath:error:
addKey:value:error:
finishAndReturnError:
close
valueForKey:valueType:error:
valueExistsForKey:
enumerateValuesForKey:error:handler:
clearWithChangeAnchor:error:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
fileExistsAtPath:
purgeAvatars
evictWithContactIdentifier:
setImage:forKey:contactIDs:
cacheIsEmpty
imageForKey:contactIDs:
cacheCount
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
initWithBytesNoCopy:length:freeWhenDone:
stringForKey:
initWithSuiteName:
removeItemAtURL:error:
%@(%d)
application-identifier
sd_description
T@"NSString",R,C
sd_connectionBundleID
sd_connectionProcessName
com.apple.sharingd
OneTimeAirDropReset2
SDCancelActionIdentifier
SDOpenActionIdentifier
%@ is not a valid initializer for %@
<%@ %{ptr}
, transferIdentifier: %@
, bundleProxy: %@
SDAirDropHandler.m
Failed to find localAction for %@
DECLINE_BUTTON_TITLE
DISMISS_BUTTON_TITLE
OK_BUTTON_TITLE
OPEN_BUTTON_TITLE
Cannot generate default action for nil bundleProxy
TRANSFER_FROM
_PERSON
_DEVICE
_PLURAL
_IN_PROGRESS
_COMPLETED
_CANCELED
_FAILED
_TEXT
@"LSBundleProxy"16@?0@"LSBundleProxy"8
%@...
voicememos
photos
x-apple-calevent
shoebox
stocks
mobilephone
transfer
T@"SFAirDropTransfer",&,N,V_transfer
hasFiles
TB,R,N,V_hasFiles
hasLinks
TB,R,N,V_hasLinks
isActivated
TB,N,V_isActivated
bundleProxy
T@"LSBundleProxy",&,N,V_bundleProxy
isJustFiles
isJustLinks
totalSharedItemsCount
TQ,R,N
handlingAppInstalled
TB,N,V_handlingAppInstalled
handlingAppBundleID
T@"NSString",&,N,V_handlingAppBundleID
suitableContentsTitle
ADClientAddValueForScalarKey
/System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary
SDAirDropSession
fractionCompleted
conversionTotal
auditToken
T{?=[8I]},V_auditToken
T@"<SDAirDropSessionDelegate>",W,V_delegate
message/requestIdentifier:%@, deviceIdentifier:%@, requestCreated:%@, hasCompletionHandler:%@, _timeoutTimer:%@, error:%@
requestCreatedDate
T@"NSDate",C,N,V_requestCreatedDate
requestIdentifier
T@"NSUUID",C,N,V_requestIdentifier
T@"NSString",C,N,V_deviceIdentifier
completionHandler
T@?,C,N,V_completionHandler
timeoutTimer
T@"NSTimer",&,N,V_timeoutTimer
timeoutTimeInterval
Tq,N,V_timeoutTimeInterval
error
T@"NSError",&,N,V_error
linkClient: <%@>, 
<%@: %p, previousKeyIdentifier:%@, %@%@>
previousKeyIdentifier
T@"NSUUID",&,N,V_previousKeyIdentifier
linkClient
T@"RPCompanionLinkClient",&,N,V_linkClient
<%@: %p, advertisementPayload:%@, command:%@, %@%@>
T@"NSData",C,N,V_advertisementPayload
command
T@"NSString",C,N,V_command
<%@: %p, messageIdentifier:%@, requestIdentifier:%@, activityIdentifier:%@, deviceIdentifier:%@>
messageIdentifier
T@"NSUUID",C,N,V_messageIdentifier
activityIdentifier
T@"NSUUID",C,N,V_activityIdentifier
AUUseNewWatchVersion
AURestrictOldWatch
AUUseOldProtocolVersion
com.apple.sharingd.auto-unlock.pairing-session-queue
responseTimer
T@"NSObject<OS_dispatch_source>",&,V_responseTimer
T@"<SDAutoUnlockSessionDelegate>",W,N,V_delegate
T@"NSUUID",&,N,V_sessionID
T@"NSString",C,N,V_deviceID
pairingAKSSession
Tq,V_pairingAKSSession
sessionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionQueue
aksSession
T@"SDAutoUnlockAKSSession",&,N,V_aksSession
SDAKSPeerStateNotSetUp
SDAKSPeerStateNotAvailable
SDAKSPeerStateOnlyEscrowAvailable
SDAKSPeerStateTokenAvailable
SDAKSPeerStateNoPasscodeUnlockWithinWindow
SDAKSPeerStateNoRemoteUnlockWithinWindow
SDAKSPeerStateTooManyFailedPasscodeEntries
SDAKSPeerStatePasscodeDisabled
SDAKSPeerStateUnknown
Unexpeted type
supportsACK
hasSupportsACK
TB,N,V_supportsACK
itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/docTypeLookup?uti=%@
itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/docTypeLookup?scheme=%@
FILE_PERSON_SENDING_REQUIRES_APP_TEXT
FILE_DEVICE_SENDING_REQUIRES_APP_TEXT
LINK_PERSON_SENDING_REQUIRES_APP_TEXT
LINK_DEVICE_SENDING_REQUIRES_APP_TEXT
GET_APP_BUTTON_TITLE
com.apple.news
NEWS_LINK
keyFailed
hasKeyFailed
TB,N,V_keyFailed
KEYNOTE_LIVE_DOCUMENT_LINK
BLE Peer disconnected
v16@?0@?<v@?B>8
Starting AWDL failed
v24@?0@"NSDictionary"8q16
AWDL Info Failure
AUDisableIconCache
Auth prompt request missing info
Key failed
Exchange response missing key
Exchange response failed
Failed to generate ranging session token
Creating auth token failed
User denied authorization request
Error posting authorization request
Confirmation failed
WiFi interface disabled on Watch
Failed to serialize AWDL Info
AWDL info exchange failed
Exchange request failed
SDAutoUnlockKeySession
AutoUnlock-Key
sentAWDLInfo
TB,N,V_sentAWDLInfo
userRequestRequired
TB,N,V_userRequestRequired
sessionCompleted
TB,N,V_sessionCompleted
alerted
TB,N,V_alerted
shouldAlertOnNotify
TB,N,V_shouldAlertOnNotify
promptedForApproval
TB,N,V_promptedForApproval
promptingForApproval
TB,N,V_promptingForApproval
oldApproveProtocol
TB,N,V_oldApproveProtocol
unlockAllowed
T@"NSNumber",&,N,V_unlockAllowed
errorRequestingUnlock
Ti,N,V_errorRequestingUnlock
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
powerAssertionID
TI,N,V_powerAssertionID
powerAssertionState
Ti,N,V_powerAssertionState
wifiRequestStartedHandler
T@?,C,N,V_wifiRequestStartedHandler
remoteCacheID
Tq,N,V_remoteCacheID
peerList
T@"NSArray",C,N,V_peerList
proxyRequestData
T@"NSData",C,N,V_proxyRequestData
assertionTimer
T@"NSObject<OS_dispatch_source>",&,N,V_assertionTimer
exchangeResponse
T@"SDUnlockSessionKeyExchangeResponse",&,N,V_exchangeResponse
authPromptIconData
T@"NSMutableData",&,N,V_authPromptIconData
iconCache
T@"SDAutoUnlockMacIconCache",&,N,V_iconCache
authPromptIconHash
T@"NSData",&,N,V_authPromptIconHash
needsImageData
TB,N,V_needsImageData
usingImageCache
TB,N,V_usingImageCache
wifiEnabled
TB,N,V_wifiEnabled
Pairing key session canceled
Timeout waiting for response from Mac
Timeout waiting for LTKs
Incorrect LTK
Failed to store escrow secret
Failed to create escrow secret
Failed to store session token
Failed to create session token
Could not complete step
No remote step data in message
Device locked
Request failure
Setup created response failed
TB,V_waitingForUnlock
waitingForLTK
TB,V_waitingForLTK
requestedLTKForRemote
TB,V_requestedLTKForRemote
companionViewNotSyncing
TB,V_companionViewNotSyncing
companionNeedsUnlock
TB,V_companionNeedsUnlock
companionCurrentlySyncing
TB,V_companionCurrentlySyncing
TB,V_canceled
request
T@"SDUnlockSetupRequest",&,V_request
longTermKey
T@"NSData",&,N,V_longTermKey
requestData
T@"NSData",&,N,V_requestData
remoteLTK
T@"NSData",C,N,V_remoteLTK
sessionType
Tq,N,V_sessionType
originator
TB,N,V_originator
escrowSecret
T@"NSData",C,N,V_escrowSecret
usingEscrow
TB,N,V_usingEscrow
T@"NSString",&,N,V_deviceID
T@"NSData",C,N,V_externalACMContext
Tq,N,V_aksSessionID
ltkNeedsFixing
TB,N,V_ltkNeedsFixing
<%@: %p, deviceUniqueID:%@, hasKey:%@, lastReceivedAdvertisementDate:%@>
Failed to decrypt advertisement
v24@?0@"NSData"8@"NSError"16
lastUsedKeyIdentifier
T@"NSUUID",&,N,V_lastUsedKeyIdentifier
decryptionKey
T@"SDActivityDecryptionKey",R,N
lastAdvertisementData
T@"NSData",R,C,N,V_lastAdvertisementData
lastActivityAdvertisement
T{?=CCCCCCCCCCCCCC},R,N
lastCounter
TS,R,N
lastAdvertisementPayload
T@"NSData",R,C,N
lastAdvertisementOptions
T@"NSDictionary",R,C,N
idsDevice
T@"IDSDevice",&,N,V_idsDevice
deviceTracked
TB,N,V_deviceTracked
disableDuplicateFilterOnce
TB,N,V_disableDuplicateFilterOnce
lastRawAdvertisementData
T@"NSData",R,C,N,V_lastRawAdvertisementData
clientAdvertisement
T@"SFActivityAdvertisement",R,N
com.apple.sharingd.ClassroomChanged
T@"NSArray",R,C,V_nodes
jMiqevikb6QWeHOhvLsw6A
T@"<SDAirDropPublisherDelegate>",W,V_delegate
No password
View not syncing
Pairing lock session canceled
AUGenerateNoPasscode
AUGenerateNoWristDetection
AUGenerateNoCommunication
Request timeout
Timeout waiting for response to initial request
Timeout waiting for response to token exchange request
Could not setup escrow session
Invalid AKS session
Auto Unlock: Missing information for escrow session (has token = %@, token = %@)
Pairing response missing companion device ID
Finalizing pairing failed
Final step failed
Auto Unlock: Creating escrow record failed (error code: %d)
Record failure
Unlock not enabled after pairing
Setup request failed
UNLOCK_IPHONE_UNLOCK_TITLE
UNLOCK_IPHONE_UNLOCK_BODY
UNLOCK_KEYCHAIN_MISMATCH_TITLE
UNLOCK_KEYCHAIN_MISMATCH_BODY
UNLOCK_INTERNET_SHARING_SETUP_TITLE
UNLOCK_INTERNET_SHARING_SETUP_BODY
UNLOCK_FAILED_COMMUNICATION_TITLE
UNLOCK_FAILED_COMMUNICATION_KEY_SYNC_BODY
UNLOCK_WATCH_NOT_SIGNED_IN_TITLE
UNLOCK_WATCH_NOT_SIGNED_IN_BODY
UNLOCK_MAC_NOT_SIGNED_IN_TITLE
UNLOCK_MAC_NOT_SIGNED_IN_BODY
[Internal] Bluetooth cloud pairing in progress.
Auto Unlock can't be set up when your Mac is bluetooth cloud pairing to your Apple Watch. Please try again later.
UNLOCK_WATCH_LOCKED_TITLE
UNLOCK_WATCH_LOCKED_BODY
UNLOCK_IPHONE_SIGN_IN_TITLE
UNLOCK_IPHONE_SIGN_IN_BODY
UNLOCK_PASSCODE_AND_WRIST_DETECTION_REQUIRED_TITLE
UNLOCK_PASSCODE_AND_WRIST_DETECTION_REQUIRED_BODY
UNLOCK_WRIST_DETECTION_REQUIRED_TITLE
UNLOCK_WRIST_DETECTION_REQUIRED_BODY
UNLOCK_PASSCODE_REQUIRED_TITLE
UNLOCK_PASSCODE_REQUIRED_BODY
UNLOCK_FAILED_COMMUNICATION_BODY
UNLOCK_OLD_PROTOCOL_TITLE
UNLOCK_OLD_PROTOCOL_BODY
UNLOCK_NEW_PROTOCOL_TITLE
UNLOCK_NEW_PROTOCOL_BODY
sendState
Tq,N,V_sendState
keyDeviceModel
T@"NSString",&,N,V_keyDeviceModel
companionDeviceModel
T@"NSString",&,N,V_companionDeviceModel
setupError
T@"NSError",&,N,V_setupError
keyDeviceLocked
TB,N,V_keyDeviceLocked
unlockEnabled
TB,N,V_unlockEnabled
ltkTimer
T@"NSObject<OS_dispatch_source>",&,N,V_ltkTimer
waitingForCloudPairing
TB,N,V_waitingForCloudPairing
errorType
TI,N,V_errorType
sessionCreatedMessage
T@"SDUnlockSetupSessionCreated",&,N,V_sessionCreatedMessage
responseTimeout
Tq,N,V_responseTimeout
responseTimeoutFromServer
Tq,N,V_responseTimeoutFromServer
messageTimeout
Tq,N,V_messageTimeout
messageTimeoutFromServer
Tq,N,V_messageTimeoutFromServer
ltkTimerRetryCount
Tq,N,V_ltkTimerRetryCount
keyExchangeDate
T@"NSDate",&,N,V_keyExchangeDate
tokenExchangeDate
T@"NSDate",&,N,V_tokenExchangeDate
keyExchangeInterval
Td,N,V_keyExchangeInterval
tokenExchangeInterval
Td,N,V_tokenExchangeInterval
remoteLTKHash
T@"NSData",&,N,V_remoteLTKHash
watchOldLTKSyncStatus
Ti,N,V_watchOldLTKSyncStatus
watchNewLTKSyncStatus
Ti,N,V_watchNewLTKSyncStatus
receivedSetupACK
TB,N,V_receivedSetupACK
receivedTokenACK
TB,N,V_receivedTokenACK
setupMessageIdentifier
T@"NSString",&,N,V_setupMessageIdentifier
tokenMessageIdentifier
T@"NSString",&,N,V_tokenMessageIdentifier
passcode
T@"NSString",C,N,V_passcode
upsellDevice
TB,N,V_upsellDevice
setupRetryDevice
TB,N,V_setupRetryDevice
placeholder
TB,N,V_placeholder
SharingXPCHelperGroupContactIcon-Contacts
SharingXPCHelperGroupContactIcon for contacts %{private}@ %@ iconData at index %llu
contacts
T@"NSArray",R,&,N,V_contacts
hasNeedsImageData
usingRecord
hasUsingRecord
TB,N,V_usingRecord
hasKey
T@"NSData",&,N,V_key
BonjourBrowse
BonjourAdvertise
Stop
com.apple.airdrop.transfer.sender.succeeded
com.apple.airdrop.transfer.sender.failed
com.apple.airdrop.transfer.sender.error.
com.apple.airdrop.transfer.sender.id.
com.apple.airdrop.transfer.receiver.succeeded
com.apple.airdrop.transfer.receiver.failed
com.apple.airdrop.transfer.receiver.error.
com.apple.airdrop.transfer.receiver.id.
com.apple.airdrop.transfer.throughput
com.apple.airdrop.transfer.numberoffiles
com.apple.airdrop.transfer.uti.
com.apple.airdrop.discovery.timetofirst
com.apple.airdrop.discovery.maxservices
com.apple.airdrop.discovery.level
3rd-party
TransferResult
sender
bytesPerSec
legacy
@"AWDSharingAirDropTransferResult"8@?0
%@%@.%ld
TimeSpent
time
TransferredCount
count
PeerDiscoveryInfo
browserID
btDiscoveryMs
bonjourDiscoveryMs
bonjourTXTDiscoveryMs
bonjourResolveMs
tcpConnMs
tlsHandMs
idQueryMs
totalDiscoveryMs
verifiableID
awdlVersion
platform
@"AWDSharingAirDropPeerDiscoveredInfo"8@?0
SessionInfo
start
duration
firstDiscovery
totalPeers
maxPeers
transfersCount
transfersCompletedCount
discoveryLevel
@"AWDSharingAirDropSessionInfo"8@?0
ActivityType
activityType
No user action
@"AWDSharingSheetActivityType"8@?0
### BEGIN: %@ #########################
##### END: %@ #########################
ConnectBack
bytesTransferred
ILIFE_ITEM
com.apple.sharing.SDNetworkBrowser
mode
bundleID
T@"NSString",C,N,V_bundleID
helperConnection
T@"SDXPCHelperConnection",W,N,V_helperConnection
kind
T@"NSString",R,C,V_kind
objectKey
T@"NSString",C,V_objectKey
options
T@"NSDictionary",C
boostMessage
T@"NSObject<OS_xpc_object>",&,V_boostMessage
delegate
T@"<SDNetworkBrowserDelegate>",W,V_delegate
connection
T@"NSObject<OS_xpc_object>",&,V_connection
isEntitled
T@"NSNumber",&,V_isEntitled
SharingXPCHelperImageItem-ImageTitle
SharingXPCHelperImageItem-ImageData
SharingXPCHelperImageItem-CacheLookupKey
SharingXPCHelperImageItem-ContactIDsKey
SharingXPCHelperImageItem for %{private}@ %@ imageData
imageTitle
T@"NSString",R,&,N,V_imageTitle
T@"NSData",R,&,N,V_imageData
image
T^{CGImage=},R,N,V_image
cacheLookupKey
T@"NSString",&,N,V_cacheLookupKey
contactIDs
T@"NSArray",&,N,V_contactIDs
com.apple.CloudKit.ShareBear
keynote
SHARED_KEYNOTE_DOCUMENT_LINK
numbers
SHARED_NUMBERS_DOCUMENT_LINK
pages
SHARED_PAGES_DOCUMENT_LINK
SHARED_ICLOUD_DOCUMENT_LINK
%@ %@
hasVersion
TB,N
TI,N,V_version
hasErrorCode
TI,N,V_errorCode
com.apple.mobilesafari
WEBSITE
AUUseTestAuthPromptInfo
observers
T@"NSHashTable",&,V_observers
promptInfo
T@"NSDictionary",&,V_promptInfo
notificationTimer
T@"NSObject<OS_dispatch_source>",&,V_notificationTimer
radarNotificationCompletion
T@?,C,V_radarNotificationCompletion
AirDropID
Upload
Discover
No Files
System Sleep
Invalid File
Not Enough Space
Transfer Failed 1
File Not Readable
WiFi Disabled
WLAN Disabled
Authentication Failed
com.apple.AirDrop.PeerChanged
accountID
T@"NSString",&,V_accountID
sessionID
T@"NSString",&,V_sessionID
T@"NSString",&,V_modelName
bluetoothDiscovery
T@"NSNumber",&,V_bluetoothDiscovery
bonjourDiscovery
T@"NSNumber",&,V_bonjourDiscovery
bonjourTXTRecordDiscovery
T@"NSNumber",&,V_bonjourTXTRecordDiscovery
bonjourResolveComplete
T@"NSNumber",&,V_bonjourResolveComplete
tcpConnectionComplete
T@"NSNumber",&,V_tcpConnectionComplete
tlsHandshakeComplete
T@"NSNumber",&,V_tlsHandshakeComplete
identityQueryComplete
T@"NSNumber",&,V_identityQueryComplete
totalDiscovery
T@"NSNumber",&,V_totalDiscovery
verifiableIdentity
T@"NSNumber",&,V_verifiableIdentity
com.apple.airdrop.queue
encDsID
AirDrop
NO_APPLE_ID_ACCOUNT_ALERT_TEXT
OPEN_SETTINGS_BUTTON_TITLE
CANCEL_BUTTON_TITLE
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE
SDStreamActivityIdentifier
Publishing:%@
Registered Activities:%d
Connected Streams:%ld
Could not set up internal streams
Wi-Fi not enabled
service
T@"NSNetService",&,V_service
managers
T@"NSMutableDictionary",&,V_managers
companionServices
T@"NSMutableArray",&,V_companionServices
incomingStreams
T@"NSMutableArray",&,V_incomingStreams
continuationStreams
T@"NSMutableDictionary",&,V_continuationStreams
connectedStreams
Tq,V_connectedStreams
publishTimer
T@"NSTimer",&,V_publishTimer
serviceType
T@"NSString",&,V_serviceType
SDSetupAgent
Discovery still active during dealloc
Scan timer still active during dealloc
PINPair still active during dealloc
-[SDSetupAgent setPreventRepair:]
Prevent repair changed: %s -> %s
-- SDSetupAgent --
Discovery: %@, %ld needSetup, %ld triggered
ScanTimer: %s, %d seconds
    %s %@
TRIG
----
PINPair service: %@
PINPair session: %@, UUID %@
PINPair dialog: %s
Problems: %#ll{flags}
, RepairService On
, AirPlay %s
RepairSession: Yes, %@
WatchScanner: %@
Wi-Fi Password Sharing: granting %s, requesting availability: %#{flags}
Status Monitor Phone Hashes:
Validation Record Phone Hashes:
Status Monitor Email Hashes:
Validation Record Email Hashes:
-[SDSetupAgent _activate]
com.apple.ManagedConfiguration.profileListChanged
-[SDSetupAgent _activate]_block_invoke
Profiles changed
-[SDSetupAgent _invalidate]
-[SDSetupAgent nfcTagReaderUIActivateWithEndpoint:params:completion:]_block_invoke
### Ignoring NFC Tag Reader UI when already showing UI
Prox UI Already Active
Start NFC Tag Reader UI
NFCTagReaderMainController
NFCUI
-[SDSetupAgent openSetupURL:]
openSetupURL not supported on current platform
-[SDSetupAgent _openSetupURL:]
_openSetupURL not supported on current platform
nearbyAuthTagFilter
-[SDSetupAgent prefsChanged]
AuthTag filter: %@ -> %@
saCDP
Repair CDP enabled: %s -> %s
pwsAutoGrant
Wi-Fi password sharing autoGranting enabled: %s -> %s
pwsGrantingEnabled
Wi-Fi password sharing granting enabled: %s -> %s
saRepairEnabled
Repair enabled: %s -> %s
saRepairSilent
Repair silent: %s -> %s
saScanSeconds
Scan seconds: %d -> %lld
saServerEnabled
saWatchMigration
WatchMigration enabled: %s -> %s
saWatch
WatchSetup enabled: %s -> %s
-[SDSetupAgent reenableProxCardType:]
Re-enabled prox card type %s
Re-enable B238Setup after WiFi Connects
-[SDSetupAgent retriggerProximitySetup:]_block_invoke
Re-triggering setup UI for %@
### Re-trigger failed: no triggered devices
-[SDSetupAgent showDevicePickerWithInfo:completion:]_block_invoke
### Ignoring Device Picker UI when already showing UI
Start Device Picker UI
ProfileDevicePickerMainController
DevicePicker
-[SDSetupAgent triggerHomeKitDeviceDetectedWithURL:completion:]_block_invoke
### Ignoring HomeKit Device Detected UI when already showing UI
Triggering HomeKit Device Detected UI: '%@'
com.apple.itunesstored.accountschanged
-[SDSetupAgent _ensureClientStarted]_block_invoke
iTunes accounts changed
-[SDSetupAgent _ensureClientStarted]
ScanEligible: %s -> %s
Start scan timer for %{dur}
SetupAgent
WatchScan start
-[SDSetupAgent _ensureClientStarted]_block_invoke_2
BLE WatchSetup found %@
BLE WatchSetup lost %@
BLE WatchSetup changed %@
### WatchScan start failed: %@
Discovery stop (shouldn't scan)
WatchScan stop (shouldn't scan)
-[SDSetupAgent _ensureClientStopped]
Discovery stop (stopped)
WatchScan stop (stopped)
Triggered
-[SDSetupAgent _deviceFound:]
Triggering proximity ApplePay with %@
com.apple.applepay.proximity
Ignoring proximity AppleTVPair with another %@
Ignoring proximity AppleTVPair when not allowed for %@
Triggering proximity AppleTVPair with %@
Ignoring proximity AppleTVSetup with another %@
Ignoring proximity AppleTVSetup when not allowed for %@
Triggering proximity AppleTVSetup with %@
Ignoring proximity HomePodSetup with another %@
Ignoring proximity HomePodSetup when not allowed for %@
Triggering proximity HomePodSetup with %@
HomePodSetup action type is %s
Triggering proximity DeviceDiagnostics with %@
com.apple.diagnosticextensionsd.sharing-wakeup
Ignoring proximity iOSSetup with another %@
Ignoring proximity iOSSetup when not allowed for %@
Ignoring proximity iOSSetup during resume: %@
Triggering proximity iOSSetup with %@
Ignoring proximity iOSSetup in EDU mode
Ignoring proximity Repair with another %@
Ignoring proximity Repair when not allowed for %@
Ignoring unpaired proximity Repair with %@
Triggering proximity Repair silent with %@
Ignoring proximity WHASetup with another %@
Ignoring proximity WHASetup when not allowed for %@
Triggering proximity WHASetup with %@
Ignoring proximity AuthenticateAccounts with another %@
Triggering proximity AuthenticateAccounts with %@
Ignoring PasswordSharing request when not allowed for %@
Triggering Wi-Fi Password Sharing with %@
Shouldn't offer password, ignoring triggered device: %@
Setup
action
com.apple.sharing.SetupTriggered
-[SDSetupAgent _launchAppWithMachServiceName:]
Launch XPC '%@' start
-[SDSetupAgent _launchAppWithMachServiceName:]_block_invoke
Launch XPC event: %{xpc}
SharingXPCLaunch
-[SDSetupAgent _launchAppWithMachServiceName:]_block_invoke_2
Launch XPC '%@' finish
com.apple.sharing.DeviceSetup
-[SDSetupAgent _postDeviceSetupNotificationForDevice:present:]
-[SDSetupAgent _appleAccountSignIn:]_block_invoke
Apple Account signed in
-[SDSetupAgent _hsa2Changed]
Primary HSA2 changed
-[SDSetupAgent _iTunesAccountsChanged]
Resetting prox card triggers on iTunes
-[SDSetupAgent _scanTimerFired]
Scan stop timer fired
-[SDSetupAgent _screenStateChanged]_block_invoke
-[SDSetupAgent _shouldOfferPassword:]
Ignoring pw request from non-contact peer
Ignoring pw request from blocked-contact peer
Ignoring pw request without requestSSID
ssid
shareMode
### Get network share mode failed: %#m
### Unexpected error checking pws sharable: %@
Should share network "%@": %s
-[SDSetupAgent _uiLockStatusChanged]_block_invoke
AppleTVSetupMainController
AppleTVSetupUI
HomeKitDeviceDetectedMainController
HomeKitDeviceDetected
PINPairMainController
PairUI
com.apple.Remote
com.apple.TVRemote
RepairMainController
RepairUI
repairFlags
deviceModelCode
B238SetupMainController
B238SetupUI
iOSSetupMainController
iOSSetupUI
autoStart
deviceClassCode
05938CDC
WatchSetupViewControllerProxy
WatchSetupUI
com.apple.Bridge
advertisingName
WHASetupMainController
WHASetupUI
ProxCardKitTestRemoteViewController
Test
AuthenticateAccountsMainController
AuthenticateAccountsUI
-[SDSetupAgent _uiStartWiFiPasswordSharing:]
Not showing WPS UI for non-contact peer
### Not showing WPS UI, no request SSID
### Neither email nor phone hashes found
PasswordSharingViewControllerProxy
WiFiPasswordSharing
-[SDSetupAgent _uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:]
%@ not supported
-[SDSetupAgent _uiStartForMacWithDevice:label:extraInfo:]
-[SDSetupAgent _uiStopIfNeededWithDevice:]
Stop UI not supported
-[SDSetupAgent _watchFastScanStartIfAllowed:]
Fast scan rate start for %@
-[SDSetupAgent _watchFastScanStop]
Fast scan rate stop
-[SDSetupAgent _watchFound:]
Ignoring proximity WatchSetup with another %@
Triggering proximity WatchSetup with %@
-[SDSetupAgent _wifiStateChanged]
Resetting prox card triggers now that WiFi is connected
-[SDSetupAgent _ensureServerStarted]
PINPair start
-[SDSetupAgent _ensureServerStarted]_block_invoke
PINPair ending session on error: %{error}
PINPair invalidated
-[SDSetupAgent _ensureServerStarted]_block_invoke_2
PINPair activated
### PINPair activate failed: %@
-[SDSetupAgent _ensureServerStopped]
PINPair hide PIN on stop
PINPair service stop
PINPair session stop
-[SDSetupAgent _pinPairHandleRequest:]
### PINPair request no UUID: %#m
### PINPair request UUID failed
PINPair session %@ ending for %@
PINPair session create %@
-[SDSetupAgent _pinPairHandleRequest:]_block_invoke
PINPair session %@ completed %{error}
v20@?0I8@"NSString"12
-[SDSetupAgent _pinPairHandleShowPIN:]
PINPair show PIN '%@'
### PINPair PBS proxy failed
PINPair hide old PIN
PIN_PAIR_DIALOG_MESSAGE
PIN_PAIR_DIALOG_TITLE
-[SDSetupAgent _pinPairHandleShowPIN:]_block_invoke
PINPair dialog error: %@
PINPair dialog ended %s
(user canceled)
### PINPair dialog failed
-[SDSetupAgent _pinPairHandleHidePIN]
PINPair hide PIN
-[SDSetupAgent _pwsHandleUserResponse:device:info:]
### pwsHandleUserResponse not supported on current platform
-[SDSetupAgent _pwsHandleProgressEvent:info:]
PWS progress: %s, %@
-[SDSetupAgent _repairEnsuredStarted]
TTF: Problem monitoring start
com.apple.sharing.problems
com.apple.airplay.active
-[SDSetupAgent _repairEnsuredStarted]_block_invoke
TTF: AirPlay active changed: %s -> %s
lastDisconnectError
TTF: VPN initial: %{error}
-[SDSetupAgent _repairEnsuredStarted]_block_invoke_5
TTF: WiFi health status changed: %s
TTF: RepairService start
TTF: Problem reporting repair progress: %s %@
v20@?0I8@"NSDictionary"12
-[SDSetupAgent _repairEnsuredStopped]
TTF: RepairService stop
TTF: Problem monitoring stop
-[SDSetupAgent _repairHandleCompletion]
TTF: Repair complete
-[SDSetupAgent _repairProblemCheck]
Repair periodic check: CDP %s
-[SDSetupAgent _repairProblemFlagsChanged]
TTF: Problem flags changed: %#ll{flags}, AirPlay %s
-[SDSetupAgent _repairSilentStart:]
Ignoring proximity repair for WiFi 802.1x (needs user)
-[SDSetupAgent _repairSilentProgress:info:]
Repair silent progress: %s %##@
Repair silent done: %{error}
Repair completed: %@
Repair Finalized
NEVPNConnectionErrorDomainIPSec
-[SDSetupAgent observeValueForKeyPath:ofObject:change:context:]_block_invoke
TTF: VPN changed: %{error}
-[SDSetupAgent testHomeKitDeviceDetected:]
Testing HomeKit Device Detected (%@)
com.apple.Home://a/s?n=Test
-[SDSetupAgent testNFCUI:]
Testing NFC UI (%@)
-[SDSetupAgent testPairUI:]
Testing pair UI (%@)
testParams
-[SDSetupAgent testRepairUI:]
-nowifi
00000000-0000-0000-0000-000000000003
-badwifi
00000000-0000-0000-0000-000000000004
Living Room
-[SDSetupAgent testSetupUIB238:]
Testing Setup UI B238 (%@)
-code
00000000-0000-0000-0000-000000000005
-noicloud
00000000-0000-0000-0000-000000000006
-nohsa2
00000000-0000-0000-0000-000000000007
-noitunes
00000000-0000-0000-0000-000000000008
-nohome
00000000-0000-0000-0000-000000000009
-nokeychain
00000000-0000-0000-0000-00000000000A
-sharesplit
00000000-0000-0000-0000-00000000000B
-audio
00000000-0000-0000-0000-00000000000C
-siri
00000000-0000-0000-0000-00000000000D
-AppleMusic
00000000-0000-0000-0000-00000000000E
-WiFiBadEnterprise
00000000-0000-0000-0000-00000000000F
-[SDSetupAgent testSetupUIiOS:]
Testing Setup UI iOS (%@)
-[SDSetupAgent testSetupUIPasswordSharing:]
Testing Setup UI Password Sharing (%@)
WiFiNetwork
-rich
-hsfail
-device
-long
-[SDSetupAgent testSetupUIWatch:]
Testing Setup UI Watch (%@)
-[SDSetupAgent testSetupUIWHA:]
Testing Setup UI WHA (%@)
-mismatch
-keychain
-[SDSetupAgent testUIAppleTVSetup:]
Testing AppleTVSetup UI (%@)
sharedSetupAgent
T@"SDSetupAgent",R,N
preventRepair
TB,N,V_preventRepair
uiShowing
PBSSystemServiceConnection
/System/Library/PrivateFrameworks/PineBoardServices.framework/PineBoardServices
PBSMediaRemoteServiceDialogOptionMessageKey
PBSMediaRemoteServiceDialogOptionPINKey
PBSMediaRemoteServiceDialogOptionTimeoutKey
PBSMediaRemoteServiceDialogOptionTitleKey
Final
SessionStarted
SessionEnded
SessionSecured
PreAuthStart
PreAuthFinish
SecurityStart
SecurityFinished
PasswordSending
PasswordSent
PasswordReceived
PasswordAccepted
PasswordDeclined
NEVPNConnection
/System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
Good
Bad802.1x
ConnectStart
SecurityAPCLoopStart
SecurityFinish
BasicConfigStart
BasicConfigFinish
StepStart
StepFinish
PreFinish
SetupFinished
SetupResumed
SetupSuspend
SetupPeerSWUpdate
CheckingiCloud
CheckingAppleMusic
CheckingAccount
WiFiPoweredOff
RecognizeVoice
SiriForEveryone
WiFiStart
ActivationStart
iCloudStart
HomeKitStart
CDPSetupStart
HomeKitSetupStart
BuddyStarting
BuddyProgress
BuddyFinished
ReportSuccess
TVLSStart
TVLSFinish
TVLSEstimateStart
TVLSEstimateFinal
TVLSEstimateFailed
TVLSTryAgain
TVLSToneBegan
BackupProgress
SyncProgress
StopSetup
PINPair
MigrateStart
MigrateStop
FileTransferReady
SiriWelcome
SiriDialogA
SiriDialogBStart
SiriDialogBHome
SiriDialogBNews
SiriDialogBWeather
SiriDialogBClock
SiriDialogBMusic
SiriDialogCMusic
SiriDialogCNews
SiriDialogCWeather
SiriSkipDemo
StopSetupLEDs
AudioPasscodeEnded
AuthAccountsStart
AuthAccountsiCloudProgress
AuthAccountsStoreProgress
AuthAccountsGameCenterProgress
AirDrop/1.0
discovery
[%@:%@]
Connecting to
Sending to
%@.webloc
webloc
public.heic
SDAirDropClient
personID
shouldPublishProgress
TB,N,V_shouldPublishProgress
secTrustRef
T^{__SecTrust=},R
T@"<SDAirDropClientDelegate>",W,V_delegate
com.apple.InCallService
CALL_BUTTON_TITLE
PHONE_LINK
v24@?0@"NSObject<SFAirDropTransferObserverProtocol>"8^B16
SDAirDropTransferManager.m
Failed to find valid handler for transfer id %@
response
com.apple.sharing.AirDropCredentialResponse
com.apple.sharing.transfer-observer
v16@?0@"NSObject<SFAirDropTransferObserverProtocol>"8
v20@?0B8B12B16
Failing transfer with invalid state: %@
%@/%@
v28@?0@"NSString"8@"NSString"16B24
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N
transferIdentifierToTransfer
T@"NSMutableDictionary",&,V_transferIdentifierToTransfer
transferIdentifierToHandler
T@"NSMutableDictionary",&,V_transferIdentifierToHandler
kvoObservingKeys
T@"NSArray",&,V_kvoObservingKeys
classroomDelegate
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N,V_classroomDelegate
T@"NSObject<SDAirDropAlertManagerDelegate>",W,N,Vdelegate
BluetoothAdvertiseScanVersionByte
BluetoothAdvertiseGoodByeDuration
SDActivityAdvertiser
Stopped
Skipping request for
UnexpectedState
-[SDActivityAdvertiser stopForReason:]
-[SDActivityAdvertiser resumeForReason:]
v24@?0@"NSObject<SFActivityAdvertiserClient>"8^B16
com.apple.sharing.handoff.advertising
-------------
Version Byte: %u
Goodbye Timer Interval: %.2f
Advertising Enabled: %@
Should Start: %@
Should Not Advertise Requesters: %@
Is Advertising: %@
Has Power Assertion:%@
Current Advertisement Payload: %@
Current Advertisement Options: %@
FrameworkBundleID
AssertType
PreventUserIdleSystemSleep
AssertName
Handoff
v24@?0C8[2C]12S20
UnexpectedType
v32@?0@"NSUUID"8@"NSData"16@"NSError"24
sharedAdvertiser
T@"SDActivityAdvertiser",R,N
state
Resetting
PoweredOff
PoweredOn
UAUserActivityIsForPairedDeviceOptionKey
/System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
Activity
TetheringTargetPresence
TetheringSourcePresence
Invalid
TRANSFER_FROM_IMPORT_FAILED_TEXT
OPEN_WITH_FILES_APP_BUTTON_TITLE
FILES_APP_BUTTON_TITLE
SAVE_TO_ICLOUD_DRIVE_BUTTON_TITLE
T@"SFAirDropAction",R,N
useOpenWithText
TB,N,V_useOpenWithText
com.apple.podcasts
ITUNES_STORE_LINK_PODCAST
activityService
T@"IDSService",&,N,V_activityService
shouldStart
TB,N,V_shouldStart
allPeerBTIdentifiers
T@"NSArray",&,N,V_allPeerBTIdentifiers
T@"NSString",C,N,V_appleID
legacyMode
startTimestamp
sessionDuration
totalPeersDiscovered
maxPeersDiscovered
hasBundleID
T@"NSString",&,N,V_bundleID
hasLegacyMode
TB,N,V_legacyMode
hasStartTimestamp
TQ,N,V_startTimestamp
hasFirstDiscovery
TI,N,V_firstDiscovery
hasSessionDuration
TI,N,V_sessionDuration
hasTotalPeersDiscovered
TI,N,V_totalPeersDiscovered
hasMaxPeersDiscovered
TI,N,V_maxPeersDiscovered
hasTransfersInitiated
TI,N,V_transfersInitiated
hasTransfersCompleted
TI,N,V_transfersCompleted
T@"<SDAirDropStatusDelegate>",W,V_delegate
autool
com.apple.preference.security.remoteservice
AutoUnlockPresentedBluetoothError
AutoUnlockPresentedWiFiError
ApproveSessionIDs
com.apple.sharingd.auto-unlock.session-manager-queue
Disabled due to profile
Approve with Apple Watch
Auto Unlock
Apple Watch
Test Mode
Test mode failure
Missing passcode
AUScanTimeout
UNLOCK_INTERNET_SHARING
UNLOCK_EXPIRED_TEXT
Reached attempt limit
No enabled devices
SFAutoUnlockStateUnknown
SFAutoUnlockStateNotInProgress
SFAutoUnlockStateInProgress
SFAutoUnlockStateInProgressNoScan
Trigger Send Failed With Timeout
Unable to Find Proxy Watch
Pairing canceled
Missing authorization token
Proxied Apple Watch
v16@?0@"SFDevice"8
v20@?0@"SFDevice"8I16
AUBLEScanTimeout
Apple Watch Not Found
Watch Not On Wrist
v20@?0@"SDAutoUnlockSessionWrapper"8B16
UNLOCK_WLAN_BLUETOOTH_DISABLED
UNLOCK_WIFI_BLUETOOTH_DISABLED
UNLOCK_BLUETOOTH_DISABLED
UNLOCK_WLAN_DISABLED
UNLOCK_WIFI_DISABLED
Auto Unlock State End
Auto Unlock State
Current Date: %@
Ranging Supported: %@
Model Identifier: %@
Device Has Passcode: %@
Unlocked: %@
Lock State Changed: %@
stateHandle
TQ,N,V_stateHandle
T@"NSDictionary",C,N,V_awdlInfo
sessionManagerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionManagerQueue
observerTable
T@"NSHashTable",&,N,V_observerTable
suggestionManager
T@"SDAutoUnlockSuggestionManager",&,N,V_suggestionManager
lockAuthSessions
T@"NSMutableDictionary",&,N,V_lockAuthSessions
canceledPairingKeySessions
T@"NSMutableArray",&,N,V_canceledPairingKeySessions
canceledAuthLockSessions
T@"NSMutableArray",&,N,V_canceledAuthLockSessions
keyAuthSessions
T@"NSMutableDictionary",&,N,V_keyAuthSessions
lockPairingSessions
T@"NSMutableDictionary",&,N,V_lockPairingSessions
keyPairingSessions
T@"NSMutableDictionary",&,N,V_keyPairingSessions
proxySessions
T@"NSMutableDictionary",&,N,V_proxySessions
locksWithAKSTokens
T@"NSMutableArray",&,N,V_locksWithAKSTokens
keysWithAKSTokens
T@"NSMutableArray",&,N,V_keysWithAKSTokens
serviceClients
T@"NSMutableSet",&,N,V_serviceClients
watchUnlockEnabled
TB,N,V_watchUnlockEnabled
previousMacAddressData
T@"NSData",&,N,V_previousMacAddressData
previousNearbyState
TB,N,V_previousNearbyState
nearbyPushTimer
T@"NSObject<OS_dispatch_source>",&,N,V_nearbyPushTimer
attemptStart
T@"NSDate",&,N,V_attemptStart
extendedTimer
TB,N,V_extendedTimer
scanner
T@"SFDeviceDiscovery",&,N,V_scanner
attemptDevice
T@"SFAutoUnlockDevice",&,N,V_attemptDevice
attemptType
Tq,N,V_attemptType
attemptBundlePath
T@"NSString",&,N,V_attemptBundlePath
attemptAppName
T@"NSString",&,N,V_attemptAppName
attemptActivatedHandler
T@?,C,N,V_attemptActivatedHandler
scanTimer
T@"NSObject<OS_dispatch_source>",&,N,V_scanTimer
proxyDiscoverTime
Td,N,V_proxyDiscoverTime
notifiedForProxy
TB,N,V_notifiedForProxy
scanErrorString
T@"NSString",&,N,V_scanErrorString
authSessionError
T@"NSError",&,N,V_authSessionError
proxyErrorCode
Tq,N,V_proxyErrorCode
proxyDeviceModel
T@"NSString",&,N,V_proxyDeviceModel
proxyRSSI
Ti,N,V_proxyRSSI
lastProxyState
Tq,N,V_lastProxyState
proxyConnectionTime
Td,N,V_proxyConnectionTime
proxyNotAvailableForUnlock
TB,N,V_proxyNotAvailableForUnlock
scanAutoUnlockDevices
T@"NSSet",&,N,V_scanAutoUnlockDevices
scanWatchIDs
T@"NSSet",&,N,V_scanWatchIDs
scanPhoneIDs
T@"NSSet",&,N,V_scanPhoneIDs
macBeenUnlocked
TB,N,V_macBeenUnlocked
attemptCount
Tq,N,V_attemptCount
attemptID
T@"NSString",&,N,V_attemptID
incrementedCountID
T@"NSString",&,N,V_incrementedCountID
connectedBluetoothDevices
Tq,N,V_connectedBluetoothDevices
timeSinceLastMachineWake
Tq,N,V_timeSinceLastMachineWake
lastSleepType
Tq,N,V_lastSleepType
eligibleDevices
T@"NSSet",&,N,V_eligibleDevices
wifiErrorCount
Tq,N,V_wifiErrorCount
bluetoothErrorCount
Tq,N,V_bluetoothErrorCount
presentedBluetoothError
TB,N,V_presentedBluetoothError
presentedWiFiError
TB,N,V_presentedWiFiError
currentlyAdvertising
TB,N,V_currentlyAdvertising
idsMacCountCache
Tq,N,V_idsMacCountCache
advertisingChangedDate
T@"NSDate",&,N,V_advertisingChangedDate
wristStateChangedDate
T@"NSDate",&,N,V_wristStateChangedDate
lockStateChangedDate
T@"NSDate",&,N,V_lockStateChangedDate
nearbyDeviceChangedDate
T@"NSDate",&,N,V_nearbyDeviceChangedDate
pipeConnectionChangedDate
T@"NSDate",&,N,V_pipeConnectionChangedDate
previousConnectedState
TB,N,V_previousConnectedState
cachedMacWiFiState
TB,N,V_cachedMacWiFiState
cachedWatchWiFiState
TB,N,V_cachedWatchWiFiState
wifiStateNeedsUpdating
TB,N,V_wifiStateNeedsUpdating
preventRadarNotification
TB,N,V_preventRadarNotification
previousSessionIDs
T@"NSMutableArray",&,N,V_previousSessionIDs
iconTransferStore
T@"SDAutoUnlockIconTransferStore",&,N,V_iconTransferStore
T@"NSString",C,N,V_state
attemptInProgress
TB,N,V_attemptInProgress
attemptExternalACMContext
T@"NSData",&,N,V_attemptExternalACMContext
SDAutoFillAgent
-- SDAutoFillAgent --
Granting: %s, Requesting: %s, Scanning: %s
enabled
disabled
Device Discovery: %@, %ld devices
    %@
, TRIG
    Orphaned triggered device: %@
Proximity discovery: %@, %ld devices
    %@
Requesting service: %@
SiriRemoteMonitor: %@
-[SDAutoFillAgent _activate]
-[SDAutoFillAgent _invalidate]
rafGrantingEnabled
-[SDAutoFillAgent prefsChanged]
Enabled: %s -> %s
### Granting disabled via default
rafRateLimitDisabled
Rate limiting disabled: %s -> %s
rafRequestingEnabled
Requesting enabled: %s -> %s
rafRequiresProx
Requires prox: %s -> %s
rafAllowPairedTV
Paired TVs allowed: %s -> %s
saClientEnabled
Proximity monitoring enabled: %s -> %s
Siri remote monitoring enabled: %s -> %s
Scanning enabled: %s -> %s
-[SDAutoFillAgent setPreventNotifications:]_block_invoke
Prevent notifications: %s -> %s
-[SDAutoFillAgent _ensureKeychainCleaned:]
Cleaning up old keys
com.apple.sharing.safaripasswordsharing
### Error fetching keys: %@
Should delete item with end date: %@ and persistent ref: %@
### Deleting %@ error: %@
deviceID
needsSetup
com.apple.sharing.ProxAutoFill
-[SDAutoFillAgent _postSetupNotificationForDevice:]
Posted %@: %##@
-[SDAutoFillAgent triggerProximityAutoFillDetectedWithURL:completion:]
### Failed to get components from url: %@
deviceAddress
Already found device, adding identifier to extra info: %@
Triggering AutoFill from URL: %@
-[SDAutoFillAgent _screenStateChanged:]_block_invoke
Screen state changed to %s
-[SDAutoFillAgent _uiLockStatusChanged:]_block_invoke
UI lock status changed to %s
unlocked
locked
-[SDAutoFillAgent _discoveryEnsureStarted]
Discovery start
AutoFill
-[SDAutoFillAgent _discoveryEnsureStarted]_block_invoke
Discovery activated
### Discovery activate failed: %@
-[SDAutoFillAgent _discoveryEnsureStopped]
Discovery stop
-[SDAutoFillAgent _deviceChanged:]
Ignoring paired TV
-[SDAutoFillAgent _deviceFound:]
Found device: %@
bdAddr
-[SDAutoFillAgent _deviceLost:]
Lost device: %@
-[SDAutoFillAgent _deviceStoppedRequesting:]
Device stopped requesting %@
Untriggering %@
-[SDAutoFillAgent helperStart:]
Helper start
-[SDAutoFillAgent helperStop:]
Helper stop
-[SDAutoFillAgent helper:didPickUsername:password:error:]
Helper: DidPickUsernamePassword
### Message from unrecognized helper
### Helper passing credential, but no handler?
Adding %@ to granted devices
-[SDAutoFillAgent helper:tryPIN:]
Helper: TryPIN %@
-[SDAutoFillAgent helper:userNotificationDidActivate:]
Helper: NotificationDidActivate
-[SDAutoFillAgent helper:userNotificationDidDismiss:]
Helper: NotificationDidDismiss
-[SDAutoFillAgent _proximityEnsureStarted]
Proximity discovery start
v16@?0@"SFBLEDevice"8
v20@?0@"SFBLEDevice"8I16
-[SDAutoFillAgent _proximityEnsureStarted]_block_invoke
Proximity discovery started
### Proximity discovery start failed: %@
-[SDAutoFillAgent _proximityEnsureStopped]
Proximity discovery stop
ATVRemote1,1
ATVRemote1,2
rafp
-[SDAutoFillAgent _proximityChanged:]
Proximity remote %@ exited at %d
Proximity remote %@ entered at %d
-[SDAutoFillAgent _proximityFound:]
Found proximity device: %@
-[SDAutoFillAgent _proximityLost:]
Lost proximity device: %@
-[SDAutoFillAgent handleInputDidBeginWithFlags:sessionInfo:]
RTI: input did begin with flags: %d
In AutoFill context: %s -> %s
remoteLocalizedAppName
remoteUnlocalizedAppName
remoteAssociatedDomains
remoteBundleID
-[SDAutoFillAgent handleInputDidEndWithFlags:sessionInfo:]
RTI: input did end with flags: %d
-[SDAutoFillAgent _siriRemoteMonitorEnsureStarted]
SiriRemoteMonitor start
-[SDAutoFillAgent _siriRemoteMonitorEnsureStarted]_block_invoke
SiriRemoteMonitor activated
### Error activating SiriRemoteMonitor: %@
-[SDAutoFillAgent _siriRemoteMonitorEnsureStopped]
SiriRemoteMonitor stop
-[SDAutoFillAgent _serviceEnsureStarted]
Requesting service start
-[SDAutoFillAgent _serviceEnsureStarted]_block_invoke_2
Requesting service hide PIN
v32@?0@"NSString"8@"NSString"16@"NSError"24
-[SDAutoFillAgent _serviceEnsureStarted]_block_invoke
Requesting service activated
### Error activating requesting service: %@
-[SDAutoFillAgent _serviceEnsureStopped]
Requesting service stop
-[SDAutoFillAgent _serviceHandleError:]
### Requesting service error: %@
-[SDAutoFillAgent _serviceHandleUsername:password:error:]
### Received credentials error: %@
Received no credentials to handle
Received username: %s, password: %s
-[SDAutoFillAgent _serviceStartRequestingAutoFillIfReady]
Siri remote not yet ready for advertising commands
Requesting service not yet ready for advertising commands
Start requesting AutoFill
-[SDAutoFillAgent _serviceStopRequestingAutoFill]
Stop requesting AutoFill
-[SDAutoFillAgent _serviceTimeoutStart]
Requesting service timeout start
-[SDAutoFillAgent _serviceTimeoutStart]_block_invoke
Requesting service timeout firing
-[SDAutoFillAgent _serviceTimeoutStop]
Requesting service timeout stop
-[SDAutoFillAgent _sessionStart:]
Granting session start
-[SDAutoFillAgent _sessionStart:]_block_invoke_3
### Client error handling pairing succeeded: %@
-[SDAutoFillAgent _sessionStart:]_block_invoke
Granting session: PromptForPasswordPicker
v56@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@?<v@?@"NSString"@"NSString"@"NSError">48
### Granting session start: %@
-[SDAutoFillAgent _sessionStop:]
### Session completed with error: %{error}
Granting session stop
-[SDAutoFillAgent _sessionHandlePairingSucceededResponse:]
Client handled pairing succeeded response: %@
-[SDAutoFillAgent testKeychain:]
Testing AutoFill keychain (%@)
-[SDAutoFillAgent testRemote:]
Testing AutoFill Siri Remote (%@)
-advStart
-advStop
-advStartDebug
-advStopDebug
-[SDAutoFillAgent testService:]
Testing AutoFill Service (%@)
-start
-stop
-[SDAutoFillAgent testUI:]
Testing AutoFill UI (%@)
-fail
00000000-0000-0000-0000-000000000002
00000000-0000-0000-0000-000000000001
-[SDAutoFillAgent testUI:]_block_invoke_2
Picker username: %@, pw: %@, error: %@
-[SDAutoFillAgent _activateUIDelayTimer]
Activate UI delay timer
-[SDAutoFillAgent _activateUIDelayTimer]_block_invoke
UI delay timer firing
-[SDAutoFillAgent _deactivateUIDelayTimer]
Deactivate UI delay timer
sessionUUID
urlStr
localizedAppName
unlocalizedAppName
associatedDomains
com.apple.SharingViewService
PasswordPickerMainController
-[SDAutoFillAgent passwordPickerStart:bundleID:localizedAppName:unlocalizedAppName:associatedDomains:completion:]
### Create remote alert handle failed
Starting AutoFill UI with sessionID %@
### Start UI failed: %#m
-[SDAutoFillAgent remoteAlertHandleDidActivate:]_block_invoke
Alert handle DidActivate
### Unknown alert DidActivate: %@
-[SDAutoFillAgent remoteAlertHandleDidDeactivate:]_block_invoke
Alert handle DidDeactivate
### Unknown alert DidDeactivate: %@
-[SDAutoFillAgent remoteAlertHandle:didInvalidateWithError:]_block_invoke
Alert handle DidInvalidate: %{error}
Unknown Alert DidInvalidate: %{error}
-[SDAutoFillAgent _uiStartIfNeeded:extraInfo:]
No proximity devices, un-triggering TV device %@
UI delay timer active, deferring notification for %@
Triggering ProximityAutoFill with %@
preventNotifications
TB,N,V_preventNotifications
SDProxHandoffAgent
SFCombinedDevice "%@": 
, BLE %@
, CL %@
, CL.MR %@
, notif
, route
, ready
-[SFCombinedDevice canTransition:]
%@ transition not allowed: %@ -> %@
-[SFCombinedDevice resetTicks]
%@ state reset
-[SFCombinedDevice setNextState:]
%@ next state: %@
-[SFCombinedDevice setState:]
%@ state change: %@ -> %@
attachmentURL
T@"NSURL",&,N,V_attachmentURL
T@"SFDevice",&,N,V_bleDevice
clinkDevice
T@"RPCompanionLinkDevice",&,N,V_clinkDevice
dismissReason
Tq,N,V_dismissReason
forced
TB,N,V_forced
forcedID
T@"NSString",&,N,V_forcedID
nextState
Ti,N,V_nextState
notificationBubble
T@"SFBubbleEstimator",&,N,V_notificationBubble
notificationInfo
T@"SFNotificationInfo",&,N,V_notificationInfo
notificationType
TI,N,V_notificationType
medBubbleDelayed
TB,N,V_medBubbleDelayed
route
T@"TURoute",&,N,V_route
Ti,N,V_state
transferBubble
T@"SFBubbleEstimator",&,N,V_transferBubble
notificationTicks
TQ,N,V_notificationTicks
notificationDurationSecs
Td,N,V_notificationDurationSecs
pendingContentTicks
TQ,N,V_pendingContentTicks
pendingContentDurationSecs
Td,N,V_pendingContentDurationSecs
transferDoneTicks
TQ,N,V_transferDoneTicks
transferDoneDurationSecs
Td,N,V_transferDoneDurationSecs
transferPendingStartTicks
TQ,N,V_transferPendingStartTicks
transferPendingDurationSecs
Td,N,V_transferPendingDurationSecs
isReady
effectiveID
T@"NSString",R,C,N
name
-[SFNotificationProxy _requestPostOrUpdate:info:mediumVariant:canPost:]
NotifProxy: Ignoring medium, already posted
NotifProxy: Updating notification (already posted) %@
NotifProxy: Posting notification %@
NotifProx: Not handling %@: %@
-[SFNotificationProxy requestRemove:withReason:]
### NotifProxy: RequestRemove failed, unrecognized ID: %@
### NotifProxy: RequestRemove failed, no existing notification
NotifProxy: Remove tracking of %@ per request
NotifProxy: Remove actual notification per request
-[SFNotificationProxy requestRemoveAll]
NotifProxy: Request remove all
-[SFNotificationProxy handleNotificationWasTapped:]
### NotifProxy: Unrecognized notification ID tapped: %@
NotifProxy: Tapped %@
-[SFNotificationProxy handleNotificationWasDismissed:reason:]
NotifProxy: Did dismiss %@ (%@)
-[SFNotificationProxy reset]
NotifProxy: Reset
dismissedHandler
T@?,C,N,V_dismissedHandler
tappedHandler
T@?,C,N,V_tappedHandler
-- SDProxHandoffAgent --
Enabled: %s, On call: %s, client should advertise: %s, Candidate nearby: %s
CLinkClient (%ld devices): %@
BLE Action Service: %@
ProxClients: (%ld)
BLE NearbyAction Discovery: %@, %ld devices%@
, TIMED OUT
BLE NearbyInfo Discovery: %@
Mapped Devices (%ld), unmapped (%ld):
 - %@
UI Device: (next state = %@)
 - %@
System UI flags: %#{flags} %@, stationary: %s
canTrigger
Throttle events: %d / %d
-[SDProxHandoffAgent activate]_block_invoke
-[SDProxHandoffAgent _invalidate]
chEnabled
-[SDProxHandoffAgent prefsChanged]
Pref enabled: %s -> %s
chBLEScanSecs
Pref BLE scan secs: %f -> %f
chForceShouldAdvertise
Pref force should advertise: %s -> %s
chForceStationary
Pref force stationary: %s -> %s
chHighNormal
Pref HighNormal: %s -> %s
chForceOnCall
Pref force on call: %s -> %s
chIgnoreMediumThrottle
Pref ignore medium throttle: %s -> %s
chMediumBubbleEnabled
Pref medium bubble enabled: %s -> %s
chThrottleMediumTicks
Pref medium bubble last ticks: %d -> %d
chRetriggerSecs
Pref retrigger secs: %f -> %f
chTransferSecs
Pref transfer secs: %f -> %f
chThrottleEventCount
Pref throttle event count: %d -> %d
chThrottleEventMax
Pref throttle event max: %d -> %d
-[SDProxHandoffAgent setPreventNotifications:]_block_invoke
-[SDProxHandoffAgent _updateCandidateIsNearby]
Candidate is nearby: %s -> %s
-[SDProxHandoffAgent _commonEnsureStarted]
System monitor start
-[SDProxHandoffAgent _commonEnsureStarted]_block_invoke_4
System monitor activated
v16@?0@"NSMutableArray"8
-[SDProxHandoffAgent _commonEnsureStopped]
System monitor stop
-[SDProxHandoffAgent _commonCallCountChanged]
Active call count = %d (%d connected), userOnCall %s -> %s, prefForceOnCall = %s
Unanswered call %s -> %s
User no longer on call, cleaning up notifications
Trigger notification for call
-[SDProxHandoffAgent _commonShouldAdvertiseChanged]
Client should advertise changed: %s -> %s, prefForceShouldAdvertise = %s
-[SDProxHandoffAgent _commonScreenStateChanged]
Screen state changed to %s, %@
Locked
Unlocked
-[SDProxHandoffAgent commonSystemUIChanged]_block_invoke
System UI Changed %#{flags}, CanTrigger %s
-[SDProxHandoffAgent _runStateVerify:device:]
### Run state mismatch: %@, expected %@
-[SDProxHandoffAgent _runNotificationPending]
Run notification pending: %@
### No UI ID for request %@
### Notification type not supported: %d
-[SDProxHandoffAgent _runNotificationPendingContent]
### UI Start without notification info?
Run notification pending content: %@, waited: %f
-[SDProxHandoffAgent _runNotificationReady]
### System cannot present UI
### UI Start without UI ID?
### Device is stationary, so we shouldn't trigger notification
### Failed to generate info to present: %@
Delay threshold %f, deferring medium bubble notification for %f seconds
Run notification ready %@
UI Start: %@, medium version: %s
com.apple.sharing.HomePodHandoff.UIStart
uiID
-[SDProxHandoffAgent _runNotificationPresented]
Run notification presented %@
-[SDProxHandoffAgent _runNotificationDismissed]
Run notification dismissed %@
-[SDProxHandoffAgent _runTransferInProgress]
Run transfer in progress %@
-[SDProxHandoffAgent _runTransferPending]
Run transfer pending start %@
Run transfer pending threshold %f
### No uiID? %@
-[SDProxHandoffAgent _runTransferReady]
### No UI ID? %@
Run transfer ready %@
### Type not supported: %d
-[SDProxHandoffAgent _runTransferPendingDismiss]
Run transfer pending dismiss %f %@
-[SDProxHandoffAgent _runTransferDone]
Run transfer done
-[SDProxHandoffAgent _runCallHandoffStart:]
### CallHandoff start without CompanionLink device? %@
CallHandoff start
com.apple.sharing.calltransfer
-[SDProxHandoffAgent _runCallHandoffHandleResponse:error:]
### Execute handoff response with error: %@
CallHandoff handle response
-[SDProxHandoffAgent _runCallHandoffHandleDelayTimerFired]
### No staged route after delay
### Call handoff not supported on current platform
-[SDProxHandoffAgent _bleActionDiscoveryEnsureStarted]
BLE action discovery start
HandoffAction
-[SDProxHandoffAgent _bleActionDiscoveryEnsureStarted]_block_invoke
BLE action discovery activated
### BLE action discovery activate failed: %@
BLE action scan rate -> Background with FastScanMatch
BLE action scan rate -> HighNormal
-[SDProxHandoffAgent _bleActionDiscoveryEnsureStopped]
BLE action discovery stop
-[SDProxHandoffAgent _bleActionDeviceChanged:]
%@ Retrigger after dismiss (%d)
%@: Start transfer countdown (%d)
### %@: System state prevents transfer (%d): stationary %s, flags %#{flags}
%@: Cancel pending content (%d, wait: %f)
%@: Make eligible for retrigger after %f (%d)
%@: Not yet eligible for retrigger after %f (%d)
%@ exited medium bubble (%d)
%@: Trigger (%d)
-[SDProxHandoffAgent _bleActionDeviceFoundCandidate:]
### Found candidate has wrong action type %@
BLE action device found: %@
-[SDProxHandoffAgent _bleActionDeviceLost:]
BLE action device lost: %@
-[SDProxHandoffAgent _bleActionScanTimerActivate]
BLE action scan timer activate
-[SDProxHandoffAgent _bleActionScanTimerInvalidate]
BLE action scan timer invalidate
-[SDProxHandoffAgent _bleActionScanTimerFired]
BLE action scan timer fired
-[SDProxHandoffAgent _bleInfoDiscoveryEnsureStarted]
BLE info discovery start
HandoffInfo
-[SDProxHandoffAgent _bleInfoDiscoveryEnsureStarted]_block_invoke_4
BLE info discovery activated
### BLE info discovery activate failed: %@
-[SDProxHandoffAgent _bleInfoDiscoveryEnsureStopped]
BLE info discovery stop
-[SDProxHandoffAgent _bleInfoDeviceChanged:]
BLE info device changed: %@
### Unknown BLE info device changed?
BLE info device has bad rssi: %d, %@
-[SDProxHandoffAgent _bleInfoDeviceFound:]
BLE info device found: %@
-[SDProxHandoffAgent _bleInfoDeviceLost:]
BLE info device lost: %@
-[SDProxHandoffAgent _bleDeviceNearbyEnter:]
Nearby enter (CL.MR): %@
-[SDProxHandoffAgent _bleDeviceNearbyExit:]
Nearby exit (CL.MR): %@
-[SDProxHandoffAgent _bleUpdateMappingAndNearbyCoalesced]
Processing unmapped BLE info devices
-[SDProxHandoffAgent _bleUpdateMappingWithDevice:]
Unable to map BLE info %@
Invalid candidate model? %@, %@
%@ activity level: %s
Mapped %@, CL
Restarting BLE action scan timer
-[SDProxHandoffAgent _clinkEnsureStarted]
CLink start
-[SDProxHandoffAgent _clinkEnsureStarted]_block_invoke_2
Clink device changed %#{flags} %@
v20@?0@"RPCompanionLinkDevice"8I16
-[SDProxHandoffAgent _clinkEnsureStarted]_block_invoke
Clink device found %@
v16@?0@"RPCompanionLinkDevice"8
Clink device lost %@
CLink activated
### CLink activate failed: %@
Registering for call transfer messages
-[SDProxHandoffAgent _clinkEnsureStopped]
CLink stop
-[SDProxHandoffAgent proximityClientStart:]
Proximity client start
-[SDProxHandoffAgent proximityClientStop:]
Proximity client stop
-[SDProxHandoffAgent proximityClientUpdate:]_block_invoke
### Unrecognized client: %@
Proximity client update: %s, cur=%s
-[SDProxHandoffAgent proximityClient:dismissContentForDevice:]
### Proximity client dismiss without UI Device?
Proximity client dismiss %@
-[SDProxHandoffAgent proximityClient:provideContent:forDevice:force:]
### Unexpected content for %@: %@
Proximity client content provided error: %@
Proximity client content for: %@, force: %s: %@
-[SDProxHandoffAgent proximityClient:updateContent:forDevice:]
Proximity client update %@
Proximity client content updated with error: %@
Updating with medium bubble variant
-[SDProxHandoffAgent proximityClientRequestScannerTimerReset:]
Proximity client request scanner timer reset
Timer not valid, not activating
-[SDProxHandoffAgent _proximityClientDeviceEnteredImmediate:]
ProxClient deviceEnteredImmediate %@
-[SDProxHandoffAgent _proximityClientDeviceExitedImmediate:]
ProxClient deviceExitedImmediate %@
-[SDProxHandoffAgent _proximityClientDeviceEnteredNearby:]
ProxClient deviceEnteredNearby %@
-[SDProxHandoffAgent _proximityClientDeviceExitedNearby:]
ProxClient deviceExitedNearby %@
-[SDProxHandoffAgent _proximityClientDeviceWasDismissed:]
ProxClient deviceWasDismissed %@
-[SDProxHandoffAgent _proximityClientDeviceWasDismissed:reason:]
ProxClient deviceWasDismissed %@, %@
-[SDProxHandoffAgent _proximityClientDeviceWasSelected:]
ProxClient deviceWasSelected %@
-[SDProxHandoffAgent _proximityClientDeviceWillTrigger:]
ProxClient deviceWillTrigger %@
-[SDProxHandoffAgent _proximityClientDeviceDidUnTrigger:]
ProxClient deviceDidUntrigger %@
-[SDProxHandoffAgent _proximityClientDeviceUpdated:]
Updating client with %@
-[SDProxHandoffAgent _proximityClientSeedInitialDevices:]_block_invoke
Nearby enter seed value (MediaRemote ID): %@
-[SDProxHandoffAgent _proximityClientSeedWillTriggerDeviceIfNeeded:]_block_invoke_2
Triggered device seed value (MediaRemote ID): %@
v32@?0@"NSUUID"8@"SFCombinedDevice"16^B24
-[SDProxHandoffAgent _serviceEnsureStarted]
BLE action service start
-[SDProxHandoffAgent _serviceEnsureStarted]_block_invoke
### BLE action service activate error: %@
BLE action service started
-[SDProxHandoffAgent _serviceEnsureStopped]
BLE action service stop
-[SDProxHandoffAgent _serviceTimeoutActivate]
BLE action service timeout activate
-[SDProxHandoffAgent _serviceTimeoutInvalidate]
BLE action service timeout invalidate
-[SDProxHandoffAgent _serviceTimeoutFired]
BLE action service timeout fired
-[SDProxHandoffAgent _throttleEventDidOccur]
Throttle event did occur
-[SDProxHandoffAgent _throttleEventSet:]
Throttle event set: %d
-[SDProxHandoffAgent _throttleEventsReset]
Throttle event reset
-[SDProxHandoffAgent _throttleMediumReset]
Throttle medium reset
-[SDProxHandoffAgent _throttleMediumSetTicks:]
Throttle medium set ticks: %d
-[SDProxHandoffAgent _proxiedNotificationDidDismiss:reason:]
Notification did dismiss %@, %@
### Unrecognized UI ID: %@
com.apple.sharing.HomePodHandoff.NotificationDidDismiss
pendingContentSecs
reason
reasonStr
-[SDProxHandoffAgent _proxiedNotificationWasTapped:]
Notification was tapped %@
### Unable to determine closest device
Closest device: %@
com.apple.sharing.HomePodHandoff.NotificationWasTapped
onCall
-[SDProxHandoffAgent _uiDismissWhenReady:reason:]
Dismiss notification after %f
Notification only displayed for %f, delaying dismiss
-[SDProxHandoffAgent _uiStopIfNeeded:reason:]
Presented UI Stop: %@, %@
Deleted %@: %s %@
com.apple.sharing.HomePodHandoff.UIStop
deletedAttachment
-[SDProxHandoffAgent _routeForDevice:]
### Cannot find route without a BLE device.
-[SDProxHandoffAgent _shouldMediumPromptWithInfo:]
Shouldn't prompt medium, disabled via pref
Shouldn't prompt medium, maximum trigger events reached
Shouldn't prompt medium, recently triggered
-[SDProxHandoffAgent callTransferInfoForDevice:]
Generating call transfer notification info
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING
-[SDProxHandoffAgent mediaTransferInfoFromInfo:]
No interaction behavior provided, using default (prompt)
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING_IPOD
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING_IPHONE
HOMEPOD_HANDOFF_SUBTITLE_TRANSFERRING_GENERIC
-[SDProxHandoffAgent testUI:]
### Test UI not supported on current platform.
NotifPending
NotifPendingContent
NotifReady
NotifPresented
NotifDismissed
TransferPending
TransferReady
TransferInProgress
PendingDismiss
TransferDone
InProgress
Skip
Succeeded
Canceled
audioaccessory
ipod
com.apple.sharingd.RapportChanged
v16@?0@"RPPerson"8
%#{flags}
v20@?0@"RPPerson"8I16
v32@?0@"RPDevice"8Q16^B24
%@: %{ptr}
iPhone8,4
iPhoneSE
iPhone10,3
iPhone10,6
iPhoneX
iPhone8
iPadPro
iPad2,5
iPad2,6
iPad2,7
iPad4,4
iPad4,5
iPad4,6
iPad4,7
iPad4,8
iPad4,9
iPad5,1
iPad5,2
iPad11,1
iPad11,2
iPadmini
MacPro
MacPro6,1
MacPro2
MacPro1
MacPro3
MacBookPro
MacBookAir
MacBook
iMacPro
Macmini
MacBook Pro
MacBook Air
Mac Pro
sharedRapportBrowser
T@"SDRapportBrowser",R
finalMessage
hasImageData
hasFinalMessage
TB,N,V_finalMessage
com.apple.finder
com.apple.sharingd.AirDropUnpublished
entered
exited
Contacts Only
Everyone
SDAirDropServer
AirDropServer
Discoverable mode:                   %@
Screen On:                           %s
Discoverable by contacts only:       %s
Discoverable by everyone:            %s
Unlocked once:                       %s
Port Number:                         %@
HTTP Server:                         %s
HTTP Server up time:                 %ll{dur}
HTTP Server connections:             %d
clientPid
Ti,V_clientPid
clientBundleID
T@"NSString",C,V_clientBundleID
T@"<SDAirDropServerDelegate>",W,V_delegate
com.apple.iBooks
hasSuccess
TB,N,V_success
T@"<SDAirDropListenerDelegate>",W,V_delegate
StreamMessageVersion
StreamMessageType
com.apple.Maps
SFAirDropActivitySubjectMapsLinkType
MAPS_LINK_CURRENT_LOCATION
MAPS_LINK_DIRECTIONS
MAPS_LINK_DROPPED_PIN
MAPS_LINK_POI
MAPS_LINK
NOTE
+[SDAirDropHandlerNotes extractNotesURLs:]
GENERIC_LINK
appLink
T@"LSAppLink",&,N,V_appLink
<%@: %p, deviceUniqueID:%@, advertisementPayload:%@, options:%@, deviceName:%@, deviceModelIdentifier:%@>
com.apple.continuity.activity.encryption.keyrequest.error.%@.%@
com.apple.continuity.activity.encryption.keyrequest.request_type.%@
com.apple.continuity.activity.encryption.keyrequest.success.%@
com.apple.continuity.activity.encryption.keyrequest.time_since_last_request
timeSinceLast
errorDomain
com.apple.continuity.activity.encryption.keyrequest
com.apple.continuity.activity.encryption.replacementkey.old_key_present.%@
com.apple.continuity.activity.encryption.replacementkey.new_key_counter_value
com.apple.continuity.activity.encryption.replacementkey.old_key_counter_value
com.apple.continuity.activity.encryption.keyrequest.number_of_hours_between_key_creations
ReplacementKey
oldKeyPresent
oldKeyCounter
newKeyCounter
timeBetween
com.apple.continuity.activity.encryption.replacementkey
UAUserActivityIsHighPriorityOptionKey
FIND_MY_FRIENDS_TITLE
com.apple.private.sharing.unlock-manager
This process does not have permission to perform this action
v24@?0@"NSSet"8@"NSError"16
SFUnlockErrorDomian
T@"<SFUnlockClientProtocol>",&,N,V_clientProxy
enableDevice
T@"SFAutoUnlockDevice",&,N,V_enableDevice
T@"<SDUnlockXPCSesssionDelegate>",&,V_delegate
-[SDAirDropReceiveManager listener:didReceiveNewRequest:]
pairingID
hasPairingID
T@"NSString",&,N,V_pairingID
SDAutoUnlockBypassMetricLog
SDAutoUnlockShowScreenLockError
au-setup-response-timeout
au-setup-response-timeout-percentage
au-setup-message-timeout
au-setup-message-timeout-percentage
@"AWDSharingAutoUnlockSetup"8@?0
SetupResult
deviceModel
companionModel
deviceLocked
keyRequestXTimeMs
tokenXTimeMs
timeIntervalSinceLastWatch
upsell
responseServer
messageServer
setupRetry
macOldLTKSyncStatus
macNewLTKSyncStatus
%02ld-%02ld-%02ld %02ld:%02ld:%02ld %@
AUConnectionCacheEnabled
allowAutoUnlock
UnknownSleepType
UNLOCK_WATCH_STAINLESS_STEEL
UNLOCK_WATCH_YELLOW_GOLD
UNLOCK_WATCH_ROSE_GOLD
UNLOCK_WATCH_CERAMIC
UNLOCK_WATCH_ALUMINUM
AUAlwaysShowModelDescription
(%@%@%@)
withinRange
usingTool
cancelTime
clamshellClosed
externalDisplay
cancelReason
com.apple.mobilecal
CALENDAR
/private/var/Managed Preferences/mobile/com.apple.Sharing
AlternateService
BrowseAllInterfaces
EnableDemoMode
EnableDirectIP
EnableSimulator
PreferSMBFileSharing
_afpovertcp._tcp.
_smb._tcp.
_rfb._tcp.
_http._tcp.
_adisk._tcp.
_odisk._tcp.
_airdrop._tcp.
_airdrop-alt._tcp.
_airdrop-%@._tcp.
_continuity._tcp.
_device-info._tcp.
_file._tcp.
_netbios._udp.
_workgroups._udp.
_nwnode._tcp.
local
/System/Library/PrivateFrameworks/Sharing.framework
Localizable
;:@?/
%@://
:%ld
%@=%@
true
%02d:%02d:%02d.%03d
demo
Proxy trigger failed
activeConnection
TB,V_activeConnection
notified
TB,V_notified
TB,V_invalidated
T@"NSString",C,N,V_model
bleDevice
T@"SFBLEDevice",&,N,V_bleDevice
Tq,N,V_state
useToken
authPrompt
appName
hasAwdlInfo
T@"NSData",&,N,V_awdlInfo
hasUseToken
TB,N,V_useToken
hasKeyData
T@"NSData",&,N,V_keyData
hasAuthPrompt
TB,N,V_authPrompt
hasSupportsConfirmationACK
hasAppName
T@"NSString",&,N,V_appName
SharingXPCHelperContactIcon for contact %{private}@ %@ iconData at index %llu
does not have
T@"CNContact",R,&,N,V_contact
iconData
T@"NSData",R,&,N
icon
T^{CGImage=},R,N
iconIndex
Tq,R,N,V_iconIndex
com.apple.VoiceMemos
VOICE_MEMO
canHandleTransferRegardlessOfBundleID
PLAYGROUND
T@"<SDNetworkResolverDelegate>",W,V_delegate
com.apple.Passbook
PASS
token
pairedDeviceID
hasToken
T@"NSData",&,N,V_token
hasPairedDeviceID
T@"NSString",&,N,V_pairedDeviceID
com.apple.MobileAddressBook
CONTACT
activities
T@"NSMutableArray",&,V_activities
T@"<SDNetworkOperationDelegate>",W,V_delegate
AutoUnlockTransferStore
-[SDAutoUnlockIconTransferStore storeCachedImageForHash:device:appName:]
Storing cached image state: %@, device: %@, hash: %@
AUIconTransferStore
-[SDAutoUnlockIconTransferStore imageCachedForHash:device:]
Nothing stored in device store yet
### Device store isn't a dictionary
Looking for transfer state for device %@ hash: %@ app: %@, store %@
com.apple.sharingd.WorkgroupsChanged
workgroups
T@"NSSet",R,C
SDAppleIDDatabaseManager
-[SDAppleIDDatabaseManager _readPrefs]
Reading Apple ID account information from %@
AppleIDAccount
Apple ID account retrieved from defaults: %@
### Failed to unarchive %@ pref value with error %@
AppleIDAgentMetaInfo
Apple ID agent meta info retrieved from defaults: %@
PersonInfoCache
%d cached person info values retrieved from defaults
LastConnectAttempt
LastSuccessfulConnect
AccountRequiresUserAction
-[SDAppleIDDatabaseManager _updateAccountInfoPrefs]
Updated Apple ID account in the local database
-[SDAppleIDDatabaseManager _updateMetaInfoPrefs]
Updated meta info in the local database
-[SDAppleIDDatabaseManager _updatePersonInfoCachePrefs]
Updated person info cache in the local database
-[SDAppleIDDatabaseManager _addAppleID:]
Added account for Apple ID %@ (%@)
updated existing
-[SDAppleIDDatabaseManager _removeAppleID:]
Removed account for Apple ID %@ 
-[SDAppleIDDatabaseManager _addPersonInfoToCache:]
Added person info for %@ to cache
-[SDAppleIDDatabaseManager cachedPersonInfoWithEmailOrPhone:]
Cached person info object for %@ is available
-[SDAppleIDDatabaseManager _setIdentity:forAppleID:]
### No account for %@
%s identity object for %@. New identity object is %@
Replaced
Added
Updated AltDSDID for %@ to %@
-[SDAppleIDDatabaseManager _setIdentityLinkedToCurrentUser:forAppleID:]
### No identity for %@
-[SDAppleIDDatabaseManager _setCertificateToken:privateKeyPersistentReference:forAppleID:]
Set Certificate Token %@ for %@
Set Certificate Token Creation Date %@
Set Private Key Persistent Reference %p for %@
-[SDAppleIDDatabaseManager _setContactInfo:validationRecord:forAppleID:]
Set Contact Info %@ for %@
Set Validation Record %@ for %@
account
T@"SFAppleIDAccount",&,N,V_account
personInfoCache
T@"NSMutableDictionary",&,N,V_personInfoCache
lastConnectionDate
T@"NSDate",&,N,V_lastConnectionDate
lastSuccessfulConnectionDate
T@"NSDate",&,N,V_lastSuccessfulConnectionDate
metaInfo
T@"NSDictionary",C,N
com.apple.sharingd.nsxpc
xpcManagerListener
T@"NSXPCListener",&,V_xpcManagerListener
connections
T@"NSMutableArray",&,V_connections
SDRemoteInteractionAgent
-- SDRemoteInteractionAgent --
Server: %@
Client: %@, %ld NeedsKeyboard, %ld RSSI threshold
Sessions: %ld
    Found device: %@
-[SDRemoteInteractionAgent activate]_block_invoke
-[SDRemoteInteractionAgent invalidate]_block_invoke
riClientEnabled
-[SDRemoteInteractionAgent prefsChanged]
Client enabled: %s -> %s
riCloudPairedOnly
Cloud paired only: %s -> %s
riServerEnabled
Server enabled: %s -> %s
RSSI threshold: %ld -> %ld
-[SDRemoteInteractionAgent setPreventNotifications:]_block_invoke
-[SDRemoteInteractionAgent _commonEnsureStarted]
Subscribing to IDS notifications
-[SDRemoteInteractionAgent _commonEnsureStopped]
Unsubscribing to IDS notifications
-[SDRemoteInteractionAgent _commonIDSChanged:]
IDS changed
-[SDRemoteInteractionAgent _serverEnsureStarted]
Control service activate
v28@?0@"SFSession"8I16@"NSDictionary"20
v36@?0@"SFSession"8I16@"NSDictionary"20@?<v@?I@"NSError"@"NSDictionary">28
-[SDRemoteInteractionAgent _serverEnsureStarted]_block_invoke
Control service activated
### Control service activate failed: %@
-[SDRemoteInteractionAgent _legacy_serverHandleEvent:]
### Ignoring event from peer with no identifier
### Ignoring event from unpaired peer %@
Received event has RTI payload
### Bad event opcode: %#m
Received start session %@ from %@
### Unknown event opcode: %d
-[SDRemoteInteractionAgent _legacy_serverHandleRequest:]
### Ignoring request from unpaired peer %@
### Bad request opcode: %#m
### Unknown request opcode: %d
UserAssignedDeviceName
-[SDRemoteInteractionAgent _sendRTIPayload:]
### Send payload without data?
### Failed to deserialize payload?
Sending RTI payloads to peers (%u)
-[SDRemoteInteractionAgent handleEventWithData:]
RTI Client event fired (%@)
-[SDRemoteInteractionAgent handleInputDidBeginWithFlags:sessionInfo:]
RTI did BEGIN
-[SDRemoteInteractionAgent handleInputDidEndWithFlags:sessionInfo:]
RTI did END
Stopping advertising timer
-[SDRemoteInteractionAgent advertisingTimerFired]
Advertising timer fired, simulating end event
com.apple.sharing.ContinuityKeyboardRTI
eventType
timeout
-[SDRemoteInteractionAgent advertisingTimerStart]
Starting advertising timer
-[SDRemoteInteractionAgent sessionStart:]
Session start
-[SDRemoteInteractionAgent sessionStart:]_block_invoke
### No peer device?
-[SDRemoteInteractionAgent sessionStop:]
Session stop
-[SDRemoteInteractionAgent _clientEnsureStarted]
-[SDRemoteInteractionAgent _clientEnsureStarted]_block_invoke
BLE RIA Found: %@
BLE RIA Lost: %@
-[SDRemoteInteractionAgent _clientEnsureStarted]_block_invoke_2
BLE RIA Changed: %@, %#{flags}
Discovery started
### Discovery start failed: %@
CompanionLink start
### ClinkClient interrupted
-[SDRemoteInteractionAgent _clientEnsureStarted]_block_invoke_3
ClinkClient invalidated
### CompanionLink start failed: %@
CompanionLink started
-[SDRemoteInteractionAgent _clientEnsureStopped]
-[SDRemoteInteractionAgent _clientClinkDeviceFound:]
Clink Found: %@
-[SDRemoteInteractionAgent _clientClinkDeviceLost:]
Clink Lost: %@
-[SDRemoteInteractionAgent _clientClinkDeviceChanged:]
Clink Changed: %@
-[SDRemoteInteractionAgent _clientDeviceFound:]
### Ignoring unpaired device %@
Ignoring far away NeedsKeyboard: %@
Device NeedsKeyboard new: %@
-[SDRemoteInteractionAgent _clientDeviceLost:]
Device NeedsKeyboard lost: %@
-[SDRemoteInteractionAgent _clientDeviceLockStatusChanged]_block_invoke
-[SDRemoteInteractionAgent _clientShouldStart]
Client should start %s: tvs: %s, watches: %s, enabled: %s
-[SDRemoteInteractionAgent clientNotificationPostIfNeededForDevice:]
### Cannot post notification without device model
### Unrecognized device model: %@
-[SDRemoteInteractionAgent clientNotificationRemoveForDevice:]
### Cannot remove notification without device model
-[SDRemoteInteractionAgent clientNotificationUpdateForDevice:rtiData:]
### Cannot update notification without device model
-[SDRemoteInteractionAgent clientNotificationUpdateForDevice:info:]
-[SDRemoteInteractionAgent clientUserDidTapNotification:]
### Launching TV Remote not supported on current platform
-[SDRemoteInteractionAgent testKeyboardPost:]
Testing keyboard post
-autofill
-[SDRemoteInteractionAgent testKeyboardPostThenUpdate]
Testing keyboard post then update
postAndUpdate
-[SDRemoteInteractionAgent testKeyboardRemove]
Testing keyboard remove
-[SDRemoteInteractionAgent testKeyboardUpdate]
Testing keyboard update
Continuity Keyboard
SDSharedRemoteTextInputClient
-[SDSharedRemoteTextInputClient _ensureStarted]
RTI client start
v24@?0Q8@"NSDictionary"16
-[SDSharedRemoteTextInputClient invalidate]
RTI client stop
-[SDSharedRemoteTextInputClient addDelegate:]
Adding delegate: %{ptr}
-[SDSharedRemoteTextInputClient removeDelegate:]
Removing delegate: %{ptr}
-[SDSharedRemoteTextInputClient _rtiHandleEventWithData:]
RTI: event with data (%@)
v24@?0@"NSObject<SDSharedRemoteTextInputDelegate>"8^B16
-[SDSharedRemoteTextInputClient _rtiHandleInputDidBeginWithFlags:sessionInfo:]
-[SDSharedRemoteTextInputClient _rtiHandleInputDidEndWithFlags:sessionInfo:]
-[SDSharedRemoteTextInputClient _logEvent:stopClock:]
Stopping session clock: %ld ms, event: %@
com.apple.sharing.RTI
durationMS
event
-[SDSharedRemoteTextInputClient _startClockWithResetIfNeeded]
Starting session clock
-[SDSharedRemoteTextInputClient _startClockWithResetIfNeeded]_block_invoke
Overrun timer fired, running longer than 1 hr? Start time: %@
currentPayload
Begin
Invalidate
UnexpectedBegin
Overrun
T@"<SDAirDropInformationDelegate>",W,V_delegate
com.apple.sharingd.ODisksChanged
com.apple.sharingd.BonjourChanged
com.apple.sharingd.WindowsChanged
com.apple.sharingd.AirDropChanged
com.apple.sharingd.AirDropStatusChanged
NeighborhoodName
Count
Low Power
One Or None
ServerBrowser
--------------
Mode:                                %@
Bonjour Browsers:
Domain:                              %@
AirDrop Browsers:
Windows Browsers:
ODisk Browsers:
GENERIC_ITEM
ACCEPT_BUTTON_TITLE
availableApplications
T@"NSArray",C,N,V_availableApplications
selectedApplication
T@"LSBundleProxy",&,N,V_selectedApplication
com.apple.coreservices.appleidauthagent
createCertificate
fetchCertificate
SDAppleIDServerTask
-- SDAppleIDServerTask --
-[SDAppleIDServerTask _isTaskInfoValid]
### Unhandled type %d
-[SDAppleIDServerTask _urlWithCompletion:]
Getting a url from AuthKit url bag...
-[SDAppleIDServerTask _urlWithCompletion:]_block_invoke
URL for task type %@: %@
Failed to get url with error %#m
-[SDAppleIDServerTask _handleURLIsAvailable:error:completion:]
JSON Serialization of the URL Request body failed with error %@
v20@?0@"NSURL"8i16
-[SDAppleIDServerTask _urlRequestWithCompletion:]
Failed to create NSURLRequest with error %#m
-[SDAppleIDServerTask _activate]
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
-[SDAppleIDServerTask _handleURLRequestIsAvailable]
Sending %@ server task
HTTP Headers: %@
Body: %@
v20@?0@"NSURLRequest"8i16
-[SDAppleIDServerTask _handleServerError:withStatusCode:nextSuggestedAttemptDelay:]
### Server error %d: status code %d expected, but %d received
### Server error %d means server bug. Report to server folks
### Unhandled server error: %d
### Status code %d, server error code %d. User authentication required to proceed
### Unhandled server response status code: %d. Server error code: %d
-[SDAppleIDServerTask _invalidate]
Invalidate %@ server task
-[SDAppleIDServerTask _handleTaskResponse:withData:error:]
### %@ server task failed with error %#m
### No response object
Received %@ server task response with status %ld
### No data object
### No response JSON. Response status code %d, response %@
Response info: %@
responseCode
responseMessage
nextSuggestedAttemptDelay
### Response status code: %d, error %d (%@), suggested retry delay: %d
@"AWDSharingCMS2ServerTaskResponse"8@?0
com.apple.sharing.AIAServerTaskResponse
httpStatusCode
errorCode
type
idmsEnv
altDsId
-[SDAppleIDServerTask _parseCreateCertificateResponse:error:]
### No altDSID
certificate
### No certificate info
### No certificate token 
delay
Received Create Certificate response: altDSID=%@, certToken=%@, suggestedDelay=%@
-[SDAppleIDServerTask _parseFetchCertificateResponse:error:]
### No certificate token
status
expiryDate
### No certificate expiration date. Will set to 6 months from now.
### Failed to create expiration date
### No certificate PEM
### No certificate serial number
### Certificate status is pending, but delay not provided.
intermediateCaCertificate
### No intermediate certificate PEM
matches
-[SDAppleIDServerTask _parseFindPersonResponse:error:]
### No matches array
### No matches found
### Matches array has more than 1 object
certCn
AccountIdentifier
Account identifier not in match info dictionary returned by server
AltDSID not in match info dictionary returned by server
certStatus
Certificate status not in match info dictionary returned by server
matched
Matched
Matched criterion not in match info dictionary returned by server
Matched value not in match info dictionary returned by server
ValidUntil
-[SDAppleIDServerTask _parseGetMyInfoResponse:error:]
Received Get My Info Certificate Info: token=%@, expirationDate=%@, serial number=%@, status=%@
firstName
lastName
msUntilNextCheck
validatedEmails
validatedPhones
aidvr
serverAidvrId
Received Get My Info response: AltDSID=%@, Firstname=%@, LastName=%@, Emails=%@, Phones=%@, Validation Record: identifier=%@,version=%@, msUntilNextCheck=%d
Validation Record Data (base64)=%@
FirstName
LastName
ValidatedEmails
ValidatedPhones
ValidationRecordData
ValidationRecordDataID
ValidationRecordNextCheckDate
Version
-[SDAppleIDServerTask _parseServerResponse:error:]
-[SDAppleIDServerTask _sendRequest]_block_invoke
### Get GS token failed with error %#m
v28@?0@"NSString"8@"NSString"16i24
TB,N,V_activated
gsToken
T@"NSString",&,N,V_gsToken
invalidated
TB,N,V_invalidated
session
T@"NSURLSession",&,N,V_session
taskInfo
T@"NSDictionary",R,N,V_taskInfo
Tq,R,N,V_type
urlRequest
T@"NSURLRequest",&,N,V_urlRequest
Create Certificate
Fetch Certificate
Get My Info
Find Person
issued
pending
failed
revoked
expired
SDConnectionManagerIdentifier
Missing client proxy
Missing identifier
v24@?0@"NSFileHandle"8@"NSError"16
T@"NSString",&,V_bundleID
T@"NSUUID",&,V_identifier
T@"NSXPCConnection",&,V_xpcConnection
companionStreams
T@"NSMutableArray",&,V_companionStreams
serviceManager
T@"SDServiceManager",&,V_serviceManager
deviceStreamMap
T@"NSMutableDictionary",&,V_deviceStreamMap
unlockSessions
T@"NSMutableArray",&,V_unlockSessions
streamIdentifiers
T@"NSMutableArray",&,V_streamIdentifiers
T@"<SDConnectionManagerDelegate>",W,V_delegate
ltkHash
remoteNeedsLTK
hasLongTermKey
hasLtkHash
T@"NSData",&,N,V_ltkHash
hasRemoteNeedsLTK
TB,N,V_remoteNeedsLTK
com.apple.sharingd.adjustment-queue
com.apple.sharingd.compression-queue
payload
messageType
senderID
awdlCacheID
aksSessionID
encryptedPayload
authTag
nonce
hasSessionID
T@"NSData",&,N,V_sessionID
hasPayload
T@"NSData",&,N,V_payload
hasMessageType
TI,N,V_messageType
hasSenderID
T@"NSData",&,N,V_senderID
hasUseProxy
hasAwdlCacheID
TI,N,V_awdlCacheID
hasAksSessionID
TI,N,V_aksSessionID
hasEncryptedPayload
T@"NSData",&,N,V_encryptedPayload
hasAuthTag
T@"NSData",&,N,V_authTag
hasNonce
T@"NSData",&,N,V_nonce
secret
hasSecret
T@"NSData",&,N,V_secret
com.apple.Safari
com.apple.Preferences
com.apple.SafariTechnologyPreview
com.apple.Sharing.AirDrop
CREDENTIAL
SDAutoUnlockAKSManagerWatchLTKsUpdatedNotification
SDAutoUnlockAKSManagerCompanionViewSyncing
SDAutoUnlockAKSManagerCompanionNeedsUnlock
SDAutoUnlockAKSManagerCompanionCurrentlySyncing
A70C5EAF-F24F-48A7-B834-F5297000C7A2
com.apple.continuity.auto-unlock.sync
com.apple.continuity.auto-unlock.localkeys
com.apple.continuity.auto-unlock.rangingkeys
com.apple.continuity.unlock
ltk.plist
pairing-records.plist
Companion ID
Pairing ID
Remote LTKs
LTK Data
LTK ID
LTK Hash
LTK Mod Date
Modern LTK Data
Modern LTK Hash
Modern LTK Mod Date
AutoUnlockDevicesMissingSessionKey
companion-paired-devices.plist
watch-companion-mapping.plist
Local Unique ID: %@
Local LTK: %@
Local LTK UUID: %@
Keychain UUID: %@
Local LTK Info: %@
View Syncing: %@
Device First Unlocked: %@
Keychain Devices: %@
Remote LTK File Path: %@
Remote LTKs
Device ID: %@, Remote LTK ID: %@, ASK Peer State: %@, Remote LTK: %@
com.apple.MCX.changedDomains
com.apple.applicationaccess
q24@?0@"NSString"8@"NSString"16
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"NSString"16^B24
%@: %@
AutoUnlockSalt
AutoUnlockInfo
autoUnlockDisabledDueToManagement
TB,N,V_autoUnlockDisabledDueToManagement
waitingForUnlock
TB,N,V_waitingForUnlock
t208Machine
TB,N,V_t208Machine
localLTK
T@"NSData",C,N,V_localLTK
T@"NSString",C,N,V_altDSID
keybagAssertionTimer
T@"NSObject<OS_dispatch_source>",&,V_keybagAssertionTimer
waitingForUnlockTimer
T@"NSObject<OS_dispatch_source>",&,V_waitingForUnlockTimer
remoteLTKs
T@"NSMutableDictionary",&,N,V_remoteLTKs
cachedSessions
T@"NSMutableDictionary",&,N,V_cachedSessions
cachedSessionKeys
T@"NSMutableDictionary",&,N,V_cachedSessionKeys
watchIDsToPairingRecords
T@"NSMutableDictionary",&,N,V_watchIDsToPairingRecords
preferredRemoteLTKForDeviceID
T@"NSMutableDictionary",&,N,V_preferredRemoteLTKForDeviceID
watchIDsMissingSessionKey
T@"NSMutableArray",&,N,V_watchIDsMissingSessionKey
wristDetectDisabled
TB,N,V_wristDetectDisabled
remoteLTKStorageFilePath
T@"NSString",C,N,V_remoteLTKStorageFilePath
watchIDsToPairingRecordsStorageFilePath
T@"NSString",C,N,V_watchIDsToPairingRecordsStorageFilePath
companionIDStorageFilePath
T@"NSString",C,N,V_companionIDStorageFilePath
watchIDToCompanionIDStorageFilePath
T@"NSString",C,N,V_watchIDToCompanionIDStorageFilePath
localDeviceID
T@"NSString",C,N,V_localDeviceID
viewSyncing
TB,R,N
timestamp
bleKeyDiscoveryTime
bleProxyDiscoveryTime
bleAWDLInfoExchangeTime
bleKeyRequestExchangeTime
bleAuthTokenExchangeTime
awdlBringUpTime
awdlPeerDiscoveryTime
awdlRangingTime
bleConfirmationTime
totalUnlockTime
distance
keyBluetoothRSSI
proxyBluetoothRSSI
bleProxyConnectionTime
bleKeyConnectionTime
bluetoothConnectedDevices
timeIntervalSinceLastWake
displayWaitTime
clamshellWaitTime
timeIntervalSinceLastDarkWake
hasTimestamp
TQ,N,V_timestamp
hasKeyDeviceModel
hasProxyDeviceModel
hasUsingProxy
TB,N,V_usingProxy
hasBleKeyDiscoveryTime
TI,N,V_bleKeyDiscoveryTime
hasBleProxyDiscoveryTime
TI,N,V_bleProxyDiscoveryTime
hasBleAWDLInfoExchangeTime
TI,N,V_bleAWDLInfoExchangeTime
hasBleKeyRequestExchangeTime
TI,N,V_bleKeyRequestExchangeTime
hasBleAuthTokenExchangeTime
TI,N,V_bleAuthTokenExchangeTime
hasAwdlBringUpTime
TI,N,V_awdlBringUpTime
hasAwdlPeerDiscoveryTime
TI,N,V_awdlPeerDiscoveryTime
hasAwdlRangingTime
TI,N,V_awdlRangingTime
hasBleConfirmationTime
TI,N,V_bleConfirmationTime
hasTotalUnlockTime
TI,N,V_totalUnlockTime
hasUnlockSucceeded
hasErrorType
hasErrorDomain
T@"NSString",&,N,V_errorDomain
hasFlags
TI,N,V_flags
hasDistance
TI,N,V_distance
hasKeyBluetoothRSSI
Ti,N,V_keyBluetoothRSSI
hasProxyBluetoothRSSI
Ti,N,V_proxyBluetoothRSSI
hasWithinRange
TB,N,V_withinRange
hasBleProxyConnectionTime
TI,N,V_bleProxyConnectionTime
hasBleKeyConnectionTime
TI,N,V_bleKeyConnectionTime
hasUsingTool
TB,N,V_usingTool
hasCancelTime
TI,N,V_cancelTime
hasClamshellClosed
TB,N,V_clamshellClosed
hasBluetoothConnectedDevices
TI,N,V_bluetoothConnectedDevices
hasTimeIntervalSinceLastWake
Ti,N,V_timeIntervalSinceLastWake
hasLastSleepType
Ti,N,V_lastSleepType
hasExternalDisplay
TB,N,V_externalDisplay
hasDisplayWaitTime
TI,N,V_displayWaitTime
hasClamshellWaitTime
TI,N,V_clamshellWaitTime
hasTimeIntervalSinceLastDarkWake
Tq,N,V_timeIntervalSinceLastDarkWake
hasCancelReason
Ti,N,V_cancelReason
hasAttemptType
TI,N,V_attemptType
hasWatchBuildVersion
hasWatchOSVersion
com.apple.itunesu
ITUNES_STORE_LINK_ITUNES_U
SDAppleIDURLResponse
-[SDAppleIDURLResponse initWithHTTPUTLResponse:data:]
### JSON -> Data failed with error %@
### JSON object not a dictionary
responseInfo
T@"NSDictionary",R,N,V_responseInfo
statusCode
Tq,R,N,V_statusCode
PROFILE
DisabledKeyRequestBudget
DisableContinuityRapportPayloads
com.apple.handoff.encryption-key-request
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
com.apple.handoff.payload-request
v16@?0@"NSError"8
com.apple.private.alloy.continuity.encryption
com.apple.private.alloy.continuity.activity
Request
EncryptionKey
v16@?0@"SDActivityRequestRecord"8
Request timed out
Budget Restrictions Disabled: %@
Activity Service: %@, devices: 
@unionOfObjects.uniqueIDOverride
Encryption Service: %@, devices: %@
Unique ID To Key Reply Date: %@
Message Identifier To KeyRequest Records: %@
Message Identifier To Request Records: %@
Message Identifier To Reply Records: %@
EncryptionKeyRequests
rKeyPreviousIdentifier
rKeyDataRepresentation
rLocalOnly
v12@?0B8
idsDeviceIdentifier == %@
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
Failed to find device to request encryption key from
deviceIdentifier
advertisementPayload
activityCommand
activityPayload
rAdvPayload
rClientCommand
rIdentifier
Failed to find device to request activity payload from
senderIDS
uniqueIDOverride == %@
Rapport
v16@?0@"NSDictionary"8
IDS device not found
v24@?0@"NSDictionary"8@"SDActivityPayloadReplyRecord"16
rActPayload
rActPayloadErrorDomain
rActPayloadErrorCode
Rapport (%s)
Unknown Error
version
_cat
rapportTransport
success
wasRapport
isHSA2Enabled
ContinuityRapportDisableBLEDiscovery
ContinuityRapportForceL2CAP
-[SDActivityPayloadManager createRapportClientWithDestinationDevice:]
rAdvData
SDActivityPayloadManager.m
Demo mode enabled, yet cannot find any destinations on service
final 
v16@?0@"SFActivityAdvertisement"8
BTPipe
AWDL
WiFi
Enet
Direct
Cloud
Pages
com.apple.Pages
Numbers
com.apple.Numbers
Keynote
com.apple.Keynote
IWORK_LINK_WITH_TITLE
IWORK_LINK
SDAppleIDIdentityRequest
-[SDAppleIDIdentityRequest _activate]
### Already activated
### Object invalidated
Certificate token and private key reference are available, skip create request
-[SDAppleIDIdentityRequest _invalidate]
Invalidate
-[SDAppleIDIdentityRequest _handleCertificateCreateResponseError:]
### Create Certificate request failed with error %@
-[SDAppleIDIdentityRequest _handleCertificateCreateResponseWithInfo:error:]
Certificate Create Response: %@
AltDSID
CertificateToken
Delay
-[SDAppleIDIdentityRequest _handleCertificateFetchResponseError:]
### Fetch Certificate request failed with error %{error}
-[SDAppleIDIdentityRequest _handleCertificateFetchResponseWithInfo:error:]
### Certificate status %d/%@
CertificateExpirationDate
CertificatePEM
IntermediateCertificate
### Certificate status %d/%@ isn't handled yet
-[SDAppleIDIdentityRequest _handleCertificate:intermediateCertificate:withTrustResult:error:]
Received certificates are trusted.
### Failed to get expiration date from certificate
### Large certificate expiration date discrepancy. Certificate=%@; Response=%@
### Failed to get expiration date from intermediate certificate
### Intermediate certificate expiration date warning: expiration date: %@, time interval since now: %lf
com.apple.idms.appleid.
### Common name %@ has unexpected prefix
Apple ID authorization certificate for %@
Added certificate for %@ to keychain
Apple ID authorization intermediate certificate
Added intermediate certificate for %@ to keychain
-[SDAppleIDIdentityRequest _handleCreateTimerFired]
Create timer fired
-[SDAppleIDIdentityRequest _handleFetchTimerFired]
Fetch timer fired
-[SDAppleIDIdentityRequest _scheduleCreateCertificateTaskWithDelay:]
### Create certificate task already scheduled
Start create certificate delay timer for %ld seconds
-[SDAppleIDIdentityRequest _scheduleFetchCertificateTaskWithDelay:]
### Fetch certificate task already scheduled
Start fetch certificate delay timer for %ld seconds
-[SDAppleIDIdentityRequest _scheduleCreateRetryWithDelay:]
Scheduling create retry %d with delay %u seconds.
-[SDAppleIDIdentityRequest _scheduleFetchRetryWithDelay:]
Scheduling fetch retry %d with delay %u seconds.
T@"NSString",R,N,V_appleID
responseHandler
T@?,C,N,V_responseHandler
certificateTokenHandler
T@?,C,N,V_certificateTokenHandler
com.apple.AppStore
com.apple.TVAppStore
VIEW_BUTTON_TITLE
APP_LINK_WITH_TITLE
APP_LINK
com.apple.family
FAMILY_INVITATION_TITLE
ICLOUD_FAMILY
SHOW_INVITATION_BUTTON_TITLE
SFNodeError
T@"NSNumber",C,V_flags
protocol
T@"NSString",C,V_protocol
T@"<SDNetworkEjecterDelegate>",W,V_delegate
Code
Domain
UserInfo
com.apple.private.airdrop.discovery
%#{pid}
Children
Sidebar
Node
Protocol
Error
Events
Operation
Results
Function
Create
Kind
OpenNode
Flags
CloseNode
AddNode
RemoveNode
SetMode
Mode
SetOptions
Options
Resume
SetProperty
Name
Value
Object
Browser
v16@?0@"NSObject<OS_xpc_object>"8
Device Information: %@
SharingDaemon State End
SharingDaemon State
highPriorityQueue
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.sharingd.daemon.started
com.apple.private.airdrop.settings
TQ,R
T#,R
NewOperation
AskUser
WaitForAnswer
Cancelled
Started
Preprocess
Progress
Postprocess
Finished
ErrorOccured
Connecting
Information
Conflict
Blocked
Converting
ServiceRef
QueryTimer
GateAirDropDiscovery
SDAirDropPeerMetric
%@.%@%@.%d
verifiable
unverifiable
BonjourBrowser
types
T@"NSArray",R,C,V_types
nodes
T@"NSArray",R,C
domain
T@"NSString",R,C,V_domain
T@"<SDBonjourBrowserDelegate>",W,V_delegate
xpcConnection
T@"NSObject<OS_xpc_object>",&,V_xpcConnection
transfersInitiated
Ti,V_transfersInitiated
transfersCompleted
Ti,V_transfersCompleted
One or None
%@%@
IMG_%04u
createPKZip
file count zero
destination not writable
%@.bom
indexbom
copyResources
sourceIsAppSandboxed
copyExtendedAttributes
createCPIO
sequesterResources
compressCPIO
outputStream
extractPKZip
extractCPIO
auto
inputStream
T@"NSURL",C
sourceFiles
T@"NSArray",C,V_sourceFiles
senderName
T@"NSString",C,V_senderName
compressionType
T@"NSString",C,V_compressionType
skipReadableCheckFiles
T@"NSSet",C,V_skipReadableCheckFiles
T@"<SDAirDropFileZipperDelegate>",W,V_delegate
SDXPCServer
?.*:level=chatty,.*:flags=public
-[SDXPCServer _activate]
com.apple.SharingServices
com.apple.Sharing.prefsChanged
-[SDXPCServer _activate]_block_invoke
Prefs changed
-[SDXPCServer _invalidate]
Stopped
-[SDXPCServer listener:shouldAcceptNewConnection:]
XPC connection started from %#{pid}
### Unknown XPC listener
-- XPC connections --
, Assertions: 
%s%@ (%ld total)
, %@
, Note: %@
, PreventExit: '%@'
-[SDXPCServer _stateDump]
State dump: SharingServices
SharingServices State End
SharingServices State
-[SDXPCConnection connectionInvalidated]
XPC connection invalidated from %#{pid}
-[SDXPCConnection _entitled:state:label:]
### %#{pid} lacks %''@ entitlement to use %@
com.apple.sharing.Services
-[SDXPCConnection _entitledService:state:]
### %#{pid} lacks %''@ entitlement for service %''@
AutoFillHelperActivate
-[SDXPCConnection autoFillHelperActivate:completion:]
com.apple.sharing.RemoteInteractionSession
v20@?0B8@?<v@?@"NSError">12
v16@?0I8i12
AutoFillHelperTryPIN
-[SDXPCConnection autoFillHelperDidPickUsername:password:error:]
### %@ failed: %#m
-[SDXPCConnection autoFillHelperTryPIN:]
%@, PIN: %@
AutoFillHelperNotificationDidActivate
-[SDXPCConnection autoFillHelperUserNotificationDidActivate:]
%@, %@
AutoFillHelperNotificationDidDismiss
-[SDXPCConnection autoFillHelperUserNotificationDidDismiss:]
com.apple.sharing.Client
ActivateAssertion
-[SDXPCConnection activateAssertionWithIdentifier:]
Ignoring duplicate assertion '%@'
Activate assertion '%@': %ld -> %ld
com.apple.sharing.PreventAppleCardActivation
com.apple.sharing.DuetSync
com.apple.sharing.PreventContinuityKeyboard
com.apple.sharing.PreventProxCards
com.apple.sharing.PreventRepair
Ignoring add unknown assertion '%@'
-[SDXPCConnection _invalidateAssertions]
Invalidate assertion '%@': %ld -> %ld
Ignoring remove unknown assertion '%@'
ActivityState
AppleIDInfo
-[SDXPCConnection appleIDInfoWithCompletion:]
### No appleID?
### No record data?
FindContact
Missing entitlement
SharingFindContact
Contact is blocked
@icloud.com
@gmail.com
@googlemail.com
Contact not found
Not supported on this platform
-[SDXPCConnection getDeviceAssets:completion:]
### GetDeviceAssets failed: %{error}
SharingGetPeopleSuggestions
-[SDXPCConnection getPeopleSuggestions:completion:]
GetPeopleSuggestions start: max %d
-[SDXPCConnection _getPeopleInfo:completion:]
GetPeopleInfo start: contacts %d
### GetPeopleInfo failed: contacts, %{error}
GetPeopleInfo progress: %d of %d, handles %d, blocked %d, notFound %d
GetPeopleInfo: requested %d, blocked %d, not found %d
-[SDXPCConnection _getPeopleSuggestions:completion:]
GetPeopleSuggestions finish: no suggestions
### GetPeopleSuggestions failed: contacts, %{error}
GetPeopleSuggestions skipping blocked contact: %@
GetPeopleSuggestions finish: max %d, suggestions %d, contactIDs %d, contacts %d, results %d
OpenSetupURL
-[SDXPCConnection preheatXPCConnection]
preheatXPCConnection
PreventExitForLocale
ReenableProxCardType
-[SDXPCConnection reenableProxCardType:completion:]
Ignored re-enable of unsupported prox card type %s
RepairDevice
Missing entitlement '%@' for RepairDevice
RetriggerProximityPairing
RetriggerProximitySetup
SetAudioRoutingScore
Missing entitlement '%@' for SetAudioRoutingScore
Out-of-range score: %d, min %d, max %d
SetupDevice
Missing entitlement '%@' for SetupDevice
ShowDevicePicker
Missing entitlement '%@' for ShowDevicePicker
TriggerHomeKitDeviceDetected
-[SDXPCConnection triggerProximityAutoFillDetectedWithURL:completion:]
Triggering AutoFill detected with URL
WiFiPasswordSharingAvailability
-[SDXPCConnection wifiPasswordSharingAvailabilityWithCompletion:]
PWS availability: %#{flags}
CoordinatedAlertStart
-[SDXPCConnection coordinatedAlertsRequestStart:completion:]
%@ (%s)
caEntitlements
com.apple.sharing.CoordinatedAlerts
### %@ rejected for %#{pid}: already in use
-[SDXPCConnection coordinatedAlertsRequestFinish]
CoordinatedAlertFinish
DeviceDiscoveryActivate
-[SDXPCConnection deviceDiscoveryActivate:completion:]
%@: %@, from %#{pid}
com.apple.sharing.DeviceDiscovery
v16@?0q8
DeviceDiscoveryUpdate
-[SDXPCConnection deviceDiscoveryUpdate:]
%@: %@
BluetoothUserInteraction
-[SDXPCConnection bluetoothUserInteraction]
com.apple.sharing.BluetoothUserInteraction
DiagnosticBLEMode
-[SDXPCConnection diagnosticBLEModeWithCompletion:]
com.apple.sharing.Diagnostics
DiagnosticControl
-[SDXPCConnection diagnosticControl:completion:]
%@( '%@' )
afui
afremote
afservice
afkc
auua-%X-%X
choui
btpipe
metrics
com.apple.sharing.test
key1
value1
pping
hotspot=%X
atvui
b238ui
hkui
nfcui
ppui
pinshow
pinhide
dpick
debugParams
pwui
rpui
whaui
wsui
testProxCardKit
unpost
### Unsupported diagnostic control command: '%@'
DiagnosticLogControl
### Error: %#m
change
found
lost
-[SDXPCConnection diagnosticMock:device:completion:]
### Unsupported mock event: '%@'
-[SDXPCConnection diagnosticMockStart:]
Starting mock mode
-[SDXPCConnection diagnosticMockStop:]
Stopping debug mode
DiagnosticShow
prox
autofill
handoff
-- ProximityInfo --
DiagnosticUnlockTestClientWithDevice
-[SDXPCConnection diagnosticUnlockTestClientWithDevice:]
DiagnosticUnlockTestServer
-[SDXPCConnection diagnosticUnlockTestServer]
NFCTagReaderUIActivate
-[SDXPCConnection nfcTagReaderUIActivateWithEndpoint:params:completion:]
ProximityClientActivate
-[SDXPCConnection proximityClientActivate:completion:]
com.apple.sharing.ProximityClient
v16@?0@"NSString"8
v24@?0@"NSString"8q16
v32@?0@"NSString"8q16q24
ProximityClientUpdate
-[SDXPCConnection proximityClientUpdate:]
ProximityClientDismissContent
ProximityClientProvideContent
ProximityClientUpdateContent
-[SDXPCConnection proximityClientRequestScannerTimerReset]
### Request scanner timer reset failed: %@
RemoteInteractionSessionActivate
-[SDXPCConnection remoteInteractionSessionActivate:completion:]
v16@?0@"SFRemoteTextSessionInfo"8
RemoteInteractionSessionSendData
-[SDXPCConnection remoteInteractionSessionSendPayload:]
-[SDXPCConnection serviceActivate:completion:]
ServiceActivate: %@
dedDisable
### Service identifier %@ is disabled via pref
-[SDXPCConnection serviceActivate:completion:]_block_invoke
Received event: %@
v16@?0@"SFEventMessage"8
v24@?0@"NSUUID"8@"NSError"16
v28@?0C8@"NSData"12@"NSUUID"20
Received request: %@
v16@?0@"SFRequestMessage"8
Received response: %@
v16@?0@"SFResponseMessage"8
ServiceUpdate
-[SDXPCConnection serviceUpdate:]
ServicePeerDisconnected
-[SDXPCConnection servicePeerDisconnected:error:]
ServiceSendEvent
-[SDXPCConnection serviceSendEvent:]
ServiceSendFrame
-[SDXPCConnection serviceSendFrameType:data:peer:]
%@: %s, %ld bytes
ServiceSendRequest
-[SDXPCConnection serviceSendRequest:]
ServiceSendResponse
-[SDXPCConnection serviceSendResponse:]
SessionActivate
-[SDXPCConnection sessionActivate:completion:]
com.apple.sharing.Session
v20@?0C8@"NSData"12
SessionSendEvent
-[SDXPCConnection sessionSendEvent:]
SessionSendFrame
-[SDXPCConnection sessionSendFrameType:data:]
SessionSendRequest
-[SDXPCConnection sessionSendRequest:]
SessionSendResponse
-[SDXPCConnection sessionSendResponse:]
-[SDXPCConnection userNotificationPresent:]
UserNotification XPC not supported on current platform
Unspecified
ATVSetup
MobileBackup
WatchSetup
ATVPair
InternetRelay
WiFiPassword
iOSSetup
Repair
LegacyHomePodSetup
HomePodSetup
ApplePay
WHASetup
DevToolsPair
DDPing
DDPong
RemoteAutoFill
CompanionLinkProx
RemoteManagement
RemoteAutoFillPong
AccessorySetup
TVLS
TVSA
AppSignIn
AuthenticateAccounts
NeedsRDLink
NeedsCLink
Goodbye
B238SetupAfterWiFi
iMessage
PhoneCall
Announcement
NoOp
PingReq
PingResp
UncRaw
UncOPACK
EncOPACK
AutoUnlock
UncEvent
UncReq
UncRes
RemoteApp
IRControl
IRData
PSStart
PSNext
PVStart
PVNext
HeartbeatLegacy
HeartbeatReq
HeartbeatAck
StartReq
StartAck
EncOPACKZ
UncOPACKZ
HeartbeatAlive
SUCreateSession
SUSessionCreated
SUEvent
SUReq
SUResp
ServiceFragment
ServiceFragmentLast
SessionFragment
SessionFragmentLast
keyData
keyIdentifier
dateCreated
lastUsedCounter
<%@: %p, keyIdentifier:%@, dateCreated:%@, lastUsedCounter:%hu>
T@"NSUUID",&,N,V_keyIdentifier
T@"NSDate",&,N,V_dateCreated
T@"NSMutableData",&,N,V_keyData
TS,N,V_lastUsedCounter
validKey
TB,N,GisValidKey,V_validKey
dictRepresentation
T@"NSDictionary",R,N
BluetoothAdvertiseEncryptionStartCount
Has Wrapping Key: %@, Should Refresh: %@
Keychain Items: %@
@unionOfObjects.%@
Encryption Key: %@
Device Identifier To Decryption Key: %@
isWrappedKey
handoff-decryption-key
com.apple.continuity.encryption
handoff-wrapping-key
Handoff Wrapping Key
handoff-own-encryption-key
Handoff Encryption Key
%@-%@
Handoff Decryption Key
encryptionKey
T@"SDActivityEncryptionKey",R,N
dataRepresentationForCurrentEncryptionKey
T@"NSData",R,N
, bundleID = %@
Connection timed out
Could not create message payload
Cannot send messages of these streams
 , expected = %d
Wrote more bytes than message contained
Zero bytes written for message
checkedCert
TB,V_checkedCert
registeredStreams
TB,V_registeredStreams
bufferSpaceAvailable
TB,V_bufferSpaceAvailable
openTimer
T@"NSTimer",&,V_openTimer
TB,GisClient,V_client
streamError
T@"NSError",&,V_streamError
T@"NSInputStream",&,V_inputStream
T@"NSOutputStream",&,V_outputStream
outputStreamData
T@"NSMutableData",&,V_outputStreamData
byteIndex
Tq,V_byteIndex
outMessage
T@"NSMutableData",&,V_outMessage
messageQueue
T@"NSMutableArray",&,V_messageQueue
handlers
T@"NSMutableDictionary",&,V_handlers
bytesRead
Tq,V_bytesRead
inMessageLength
TI,V_inMessageLength
inMessage
T@"NSData",&,V_inMessage
inData
T@"NSMutableData",&,V_inData
inputState
TQ,V_inputState
loggedTransfer
TB,V_loggedTransfer
wroteToNetwork
Tq,V_wroteToNetwork
readFromNetwork
Tq,V_readFromNetwork
timeOpened
T@"NSDate",&,V_timeOpened
timeToOpen
T@"NSDate",&,V_timeToOpen
usingMessages
TB,V_usingMessages
shouldReadNetwork
TB,V_shouldReadNetwork
T@"<SDStreamHandlerDelegate>",W,V_delegate
ltkID
signout
hasLtk
T@"NSData",&,N,V_ltk
hasLtkID
T@"NSData",&,N,V_ltkID
hasSignout
TB,N,V_signout
application/json
X-Mme-Client-Info
X-Apple-GS-Token
X-Mme-Device-ID
SDAppleIDMutableURLRequest
UniqueDeviceID
NSString * _Nullable DeviceUDID(void)_block_invoke
### AppleIDDeviceUDID failed with err %#m
SDAppleIDThrottle
void SDAppleIDThrottleReset(void)
Reset throttle
counter
void SDAppleIDThrottleUpdate(void)
Updated throttle: %ld -> %ld seconds
NSDate * _Nonnull SDAppleIDThrottleCopyNextDate(void)
Next date: %@ in %f seconds
void SDAppleIDThrottleForceMax(void)
Updated throttle to max: %ld seconds
hasActivityType
T@"NSString",&,N,V_activityType
SDNotificationManager
-- SDNotificationManager --
activated 
HomePod granted 
TV granted 
Watch granted 
AutoFill requests:
 - %@
HomePod requests:
TVKeyboard requests:
WatchKeyboard requests:
-[SDNotificationManager _activate]
-[SDNotificationManager _invalidate]
Invalidated
riClientTriggered
com.apple.ContinuityKeyBoard.enabled
-[SDNotificationManager _tvEnsureStarted:completion:]
Starting TV
com.apple.Sharing.TVRemoteNotifications
-[SDNotificationManager _tvEnsureStarted:completion:]_block_invoke_2
Requesting TV authorization
-[SDNotificationManager _tvEnsureStarted:completion:]_block_invoke_3
TV Notification granted: %s %@
v16@?0@"UNNotificationSettings"8
watchKBTriggered
-[SDNotificationManager _watchEnsureStarted:completion:]
Starting Watch
com.apple.Sharing.WatchRemoteNotifications
-[SDNotificationManager _watchEnsureStarted:completion:]_block_invoke_2
Requesting Watch authorization
-[SDNotificationManager _watchEnsureStarted:completion:]_block_invoke_3
Watch Notification granted: %s %@
hhNotifTriggered
-[SDNotificationManager _homePodEnsureStarted:completion:]
Starting HomePod
com.apple.Sharing.HomePodRemoteNotifications
-[SDNotificationManager _homePodEnsureStarted:completion:]_block_invoke_2
Requesting HomePod authorization
-[SDNotificationManager _homePodEnsureStarted:completion:]_block_invoke_3
HomePod Notification granted: %s %@
Starting HomePod mini
com.apple.Sharing.b7ce1794a1c8766816fc7b7500742862
Requesting HomePod mini authorization
HomePod mini Notification granted: %s %@
-[SDNotificationManager _addRequestWithID:content:type:isHomePodMini:]
Duplicate HomePod Handoff request
Duplicate TV autofill request
Duplicate TV needsKeyboard request
Duplicate watch needsKeyboard request
### Unsupported notification type: %d
### No notification center for request
Adding %@ notification request from %@
-[SDNotificationManager _addRequestWithID:content:type:isHomePodMini:]_block_invoke
### Error adding request %@: %@
Added request: %@
-[SDNotificationManager attachmentFromURL:]
### Failed to create attachment from URL %@
-[SDNotificationManager _tvHandleResponse:completion:]
Handle TV response: %@
### No notification ID?
### No device ID?
Handling dismiss
### Remove of unrecognized notification?
Handling default
### Unrecognized action: %@
REMOTE_BULLETIN_MESSAGE_AUTOFILL
REMOTE_BULLETIN_MESSAGE
REMOTE_BULLETIN_SUBTITLE_AUTOFILL
REMOTE_BULLETIN_SUBTITLE
continuityRemoteCategory
-[SDNotificationManager _tvKeyboardPostIfNeeded:backgroundAction:]_block_invoke
TV KBPost %@ backgroundAction: %s
-[SDNotificationManager _tvKeyboardRemove:]
TV KBRemove %@
-[SDNotificationManager _tvKeyboardRemoveAll]
TV KBRemoveAll
-[SDNotificationManager _tvKeyboardUpdate:info:]
### KBUpdate: request %@ not found
REMOTE_BULLETIN_MESSAGE_OPEN
KBUpdate (legacy) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _tvKeyboardUpdate:info:]_block_invoke
### Error updating %@: %@
Update %@ success
-[SDNotificationManager _tvKeyboardUpdate:rtiData:]
Updating TV text from RTI data
TV KBUpdate (RTI) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _tvKeyboardUpdate:rtiData:]_block_invoke
### Error handling RTI data: %@
PROX_AUTOFILL_MESSAGE
PROX_AUTOFILL_SUBTITLE
-[SDNotificationManager _tvAutoFillPostIfNeeded:]_block_invoke
AFPost %@
-[SDNotificationManager _tvAutoFillRemove:]
AFRemove %@
-[SDNotificationManager _tvAutoFillRemoveAll]
AFRemoveAll
WATCH_KEYBOARD_MESSAGE_AUTOFILL
WATCH_KEYBOARD_MESSAGE
WATCH_KEYBOARD_SUBTITLE_AUTOFILL
WATCH_KEYBOARD_SUBTITLE
-[SDNotificationManager _watchKeyboardPostIfNeeded:]_block_invoke
Watch KBPost %@
-[SDNotificationManager _watchKeyboardRemove:]
Watch KBRemove %@
-[SDNotificationManager _watchKeyboardRemoveAll]
Watch KBRemoveAll
-[SDNotificationManager _watchKeyboardUpdate:info:]
WATCH_KEYBOARD_MESSAGE_OPEN
Watch KBUpdate (legacy) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _watchKeyboardUpdate:info:]_block_invoke
-[SDNotificationManager _watchKeyboardUpdate:rtiData:]
Updating watch text from RTI data
Watch KBUpdate (RTI) %@, Prompt: '%@', Title: '%@'
-[SDNotificationManager _watchKeyboardUpdate:rtiData:]_block_invoke
-[SDNotificationManager _watchHandleResponse:completion:]
Handle Watch response: %@
HOMEPOD_HANDOFF_MESSAGE_CALL_GENERIC
HOMEPOD_HANDOFF_SUBTITLE_TALK_HOMEPOD
HOMEPOD_HANDOFF_MESSAGE_MEDIA_GENERIC
HOMEPOD_HANDOFF_SUBTITLE_TRANSFER
-[SDNotificationManager homePodHandoffContentForDevice:info:]
### Cannot create HomePod content for unknown variant: %ld
HOMEPOD_HANDOFF_HEADER_DEFAULT
HomePodHandoffCategory
60909dfe8f8c461e619cf5ffef54b503
### No attachment???
-[SDNotificationManager _homePodHandoffPostIfNeeded:info:]_block_invoke
HHPost %@
-[SDNotificationManager _homePodHandoffRemove:reason:]
HHRemove %@, %@
-[SDNotificationManager _homePodHandoffRemoveAll]
HHRemoveAll
-[SDNotificationManager _homePodHandoffUpdateIfNeeded:info:]
### Cannot update unrecognized ID: %@
### Failed to created content from info: %@
HHUpdate %@, %@
-[SDNotificationManager _homePodHandoffUpdateIfNeeded:info:]_block_invoke
-[SDNotificationManager _homePodHandleResponse:completion:]
Handle HomePod response: %@
### No identifier for notification response? %@
### No action identifier for notification response? %@
TRANSFER
Unrecognized action: %@
-[SDNotificationManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
### Unrecognized notification center: %@ for response: %@
### Error handling notification response: %@
-[SDNotificationManager testPost:]
Test post
-afr
-kba
-kbr
-kbu
-wkb
-waf
This is a test user notification
Example Subtitle
Notification Title
-[SDNotificationManager testPostBasic]
Test: Posting basic notification
-[SDNotificationManager testAutofillPost]
Test: Posting AF notification
-[SDNotificationManager testAutoFillRemove]
Test: Removing AF notification
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER_IPAD
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER_IPHONE
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER_IPOD
HOMEPOD_HANDOFF_MESSAGE_CALL_PEER
John Appleseed
Kitchen
-[SDNotificationManager testHandoffPost]
Test: Posting Handoff notification
-[SDNotificationManager testKeyboardPost]
Test: Posting TVKB notification
-[SDNotificationManager testKeyboardPostAutoFill]
Test: Posting KB notification with AutoFill
-[SDNotificationManager testKeyboardRemove]
Test: Removing KB notification
Updated prompt
Updated Title
-[SDNotificationManager testWatchKeyboard]
Test: Posting WatchKB notification
-[SDNotificationManager testWatchKeyboardAutoFill]
activeTVAutoFillPrompts
T@"NSSet",R,C,N
UNUserNotificationCenter
/System/Library/Frameworks/UserNotifications.framework/UserNotifications
UNNotificationRequest
HPMedia
HPCall
TVAutoFill
TVKeyboard
WatchKeyboard
UNErrorDomain
UNNotificationAttachmentOptionsTypeHintKey
UNNotificationAttachmentOptionsHiddenFromDefaultExpandedViewKey
UNNotificationAttachment
UNNotificationDefaultActionIdentifier
UNNotificationDismissActionIdentifier
UNMutableNotificationContent
UNNotificationSound
RTIInputSystemDataPayload
/System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput
Client
UserDismiss
UserTap
Untrigger
UNNotificationSilenceActionIdentifier
T@"NSString",R,C,V_workgroup
T@"<SDWindowsBrowserDelegate>",W,V_delegate
com.apple.mobilephone
VOICEMAIL
AutoUnlockCloudPairRetries
CloudPairGeneralRetryDate
CloudPairShortRetryDate
AutoUnlockLastSeenWatchDate
AutoUnlockWatchCurrentlyInList
AutoUnlockWatchExistedInUnlockList
ApproveBluetoothIDsChanged
com.apple.sharingd.auto-unlock.transport-client-queue
com.apple.sharingd.auto-unlock.transport-queue
com.apple.private.alloy.continuity.unlock
watch
iphone
ipad
AUDeviceBlackList
AUAllowOldWatchAuthPrompts
AUForceApproveLabel
iPhone
iPad
-[SDAutoUnlockTransport macVersionEligibleForDeviceID:]
5EAFD122-F291-4D56-B1F9-D856CBBC7E0C
Watch0,0
Watch OS
14S000
Placeholder
type:%d, sessionID:%ld, destinations:%@
AUShowIDInName
AUShowOtherDevices
AUDisableEncryption
Unlock IDS Devices
%''@, %@, %@, %@, BT=%@
No devices registered
T@"IDSService",&,N,V_idsService
transportQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_transportQueue
clientQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_clientQueue
clientMap
T@"NSMapTable",&,N,V_clientMap
completionHandlers
T@"NSMutableDictionary",&,V_completionHandlers
sendIdentifierToSessionID
T@"NSMutableDictionary",&,N,V_sendIdentifierToSessionID
sendDates
T@"NSMutableDictionary",&,V_sendDates
lastSendDate
T@"NSDate",&,N,V_lastSendDate
autoUnlockDeviceCache
T@"NSMutableDictionary",&,N,V_autoUnlockDeviceCache
cloudPairRetryRecords
T@"NSMutableDictionary",&,N,V_cloudPairRetryRecords
watchCurrentlyInList
T@"NSNumber",&,N,V_watchCurrentlyInList
lastSeenWatchDate
T@"NSDate",&,N,V_lastSeenWatchDate
watchExistedInUnlockList
T@"NSNumber",&,N,V_watchExistedInUnlockList
cachedBluetoothIDToUniqueIDs
T@"NSMutableDictionary",&,N,V_cachedBluetoothIDToUniqueIDs
cachedApproveBluetoothIDs
T@"NSSet",&,N,V_cachedApproveBluetoothIDs
appleWatchExisted
watchSeenRecently
primaryClient
T@"<SDAutoUnlockTransportClient>",W,V_primaryClient
kinds=%##@ realName=%@ cnId=%@ aTag=%@ id=%@ isRap=%d isMe=%d
%##@
q24@?0@8@16
All...
sidebarNodes
T@"<SDNodeBrowserDelegate>",W,V_delegate
SDAppleIDAgent
accountIdentifier
T@"NSString",R,N,V_accountIdentifier
emailOrPhone
T@"NSString",R,N,V_emailOrPhone
production
Push connection still active during dealloc
-[SDAppleIDAgent _accountState]
User not signed in
Device not unlocked yet
No account info for apple ID %@
No altDSID for %@, probaby because don't have the identity object.
No identity object for %@. A request is in progress
No identity object for %@
No certificate for %@
No intermediate certificate for %@
No private key for %@
Certificate expired
Identity object for %@ is invalid
Validation Record for %@ is invalid
-[SDAppleIDAgent _activate]
Activate
-[SDAppleIDAgent _invalidate]
Invalidated certificate request
Invalidated server task
-[SDAppleIDAgent _cleanUpAccount:]
Certificate token is missing or stale, setting it to nil
-[SDAppleIDAgent _ensurePushStarted]
AIA disabled
com.apple.coreservices.appleid.aps
com.apple.idmsauthagent
Started push agent with environment %@
-- SDAppleIDAgent --
Creation Date:                       %@
Enabled:                             %s
Push Environment:                    %@
Apple ID:                            %@
First Name:                          %@
Last Name:                           %@
AltDSID:                             %@
Validation Record (VR) Available:    %s
VR AltDSID:                          %@
VR Valid Start Date:                 %@
VR Suggested Valid Duration:         %ld
VR Next Check Date:                  %@
VR Needs Update:                     %s
VR Invalid:                          %s
Validated Email Addresses:           %@
Validated Email Hashes:              %@
Validated Phone Numbers:             %@
Validated Phone Hashes:              %@
Temporary Private Key Reference:     %s
Private Key Persistent Reference:    %s
Certificate Available:               %s
Certificate Account Identifier (AI): %@
Certificate Expiration Date:         %@
Certificate Serial Number:           %@
Certificate Token:                   %@
Certificate AI and VR AltDSID match: %s
Intermediate Certificate Available:  %s
Intermediate Cert. Expiration Date:  %@
Intermediate Cert. Serial Number:    %@
Identity Available:                  %s
Identity Invalid:                    %s
Identity Needs Renewal:              %s
Device Unlocked Once:                %s
Old Agent Identity Queried:          %s
OldAgentIdentityWasUsed
Old Agent Identity Used:             %s
Old Agent Certificate Serial Number: %@
OldAgentCertificateSN
Last Sign In Date:                   %@
LastSignInDate
Last Sign Out Date:                  %@
LastSignOutDate
Last Apple ID To Sign Out:           %@
LastSignOutAppleID
Last All Good Date:                  %@
LastAllGoodDate
Account state:                       %@
v24@?0^{__SecTrust=}8B16i20
-[SDAppleIDAgent _ensureEduModeDevicesAreCleanedUp]_block_invoke
Keychainc cleanup tag %d < %d. Remove all items
### SFAppleIDRemoveAllCertificatesFromKeychain failed with err=%#m
### SFAppleIDRemoveAllKeysFromKeychain failed with err=%#m
KeychainCleanupTag
-[SDAppleIDAgent _ensurePushStopped]
Invalidated push agent
-[SDAppleIDAgent _ensurePeriodicVerifyTimerStarted]
Started periodic verify timer
-[SDAppleIDAgent _ensurePeriodicVerifyTimerStopped]
Stopped periodic verify timer
-[SDAppleIDAgent _ensureThrottledRetryTimerStartedWithSuggestedDelay:]
Throttled retry already scheduled
Using server suggested delay of %d seconds
Started throttled retry timer with delay: %d seconds
-[SDAppleIDAgent _ensureThrottledRetryTimerStopped]
Stopped throttled retry timer
-[SDAppleIDAgent _handleAccountIdentifierValidationRecordMismatch]
Apple ID isn't set
-[SDAppleIDAgent _handleAppleIDChangedNotification]
Apple ID changed
-[SDAppleIDAgent _handleAppleIDSignedInNotification]
Apple ID signed in
-[SDAppleIDAgent _handleAppleIDSignedOutNotification]
Apple ID signed out
-[SDAppleIDAgent _handleCertificateStatusUpdate:forAppleID:]
### Apple ID %@ not currently signed in, cannot handle certifcate status 
### No account for %@, cannot handle certificate status
### Certificate status %@, removing current identity
Certificate status %@
### Unhandled certificate state %@
MatchedValue
-[SDAppleIDAgent _handleFindPersonResponse:forRequest:emailOrPhone:withError:queue:completion:]
Find person response matched value doesn't match the request
### Find Person request failed with error %@
-[SDAppleIDAgent _handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:]
Outdated info request received, ignoring
CertificateSerialNumber
Response certSN %@ is different than the requested %@
CertificateStatus
No certificate status returned by server
-[SDAppleIDAgent _handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:]_block_invoke
### SFAppleIDParseValidationRecordData failed with error %#m
altDsID
SuggestValidDuration
ValidatedEmailHashes
ValidatedPhoneHashes
ValidAsOf
Validation record for %@ is valid
### Info request failed with error %@
-[SDAppleIDAgent _handleKeyBagFirstUnlockNotification]
Key Bag First Unlock notification
-[SDAppleIDAgent _handleKeyVerificationFailure]
Handling key verification failure
-[SDAppleIDAgent _handleServerTaskCompletionWithError:]
### Server task failed with error %@
-[SDAppleIDAgent _handleUILockStatusChangedNotification]
UI Lock Status Change notification
-[SDAppleIDAgent _handleUILockStatusChange]
Handling UI Lock status change. Device was unlocked once: %s
-[SDAppleIDAgent _handleUntrustedAppleIDCertificateChainForIdentity:]
Unable to get account for %@
No identity for %@
-[SDAppleIDAgent _handleReceivedIdentity:forAppleID:identityRequest:withError:completion:]
Outdated identity request received, ignoring
-[SDAppleIDAgent _handlePeriodicVerifyTimerFired]
Periodic verify timer fired
Throttled retry scheduled, ignoring periodic verify
-[SDAppleIDAgent _handleThrottledRetryTimerFired]
Throttled retry timer fired
-[SDAppleIDAgent _performKeyVerificationForIdentity:]
### No identity
LastKeyVerificationDate
Skipping key verification. Last one peformed %g seconds ago.
Verify keys failed with err=%#m
com.apple.sharing.OperationDuration
operation
durationMs
LastKeychainCountDate
com.apple.sharing.AIAKeychainCount
certCount
privKeyCount
pubKeyCount
latencyMs
-[SDAppleIDAgent _performKeychainCount]
Certs: %d, private keys: %d, public keys: %d
### SDAppleIDCertificateAndKeyCounts failed with err=%#m.
requestType
createAndFetchCert
appleID
v24@?0@"SFAppleIDIdentity"8@"NSError"16
triggerPush
-[SDAppleIDAgent _performOtherTaskWithInfo:completion:]
Trigger push
Done
triggerVerify
Trigger verify
removeAppleID
Remove Apple ID Request
setMetaInfo
Set Meta Info Request
value
### Unsupported request type %@
createCert
v28@?0^{__SecKey=}8^{__SecKey=}16i24
-[SDAppleIDAgent _performServerTaskWithInfo:completion:]
CreateCSIdentity semaphore timed out
fetchCert
certificateToken
getMyInfo
certificateSN
vrid
serialNumber
clientAidvrId
findPerson
emails
phones
Server Task Type: %d
Response Info: %@
SDAppleIDAgent.m
inQueue and _dispatchQueue both nil.
-[SDAppleIDAgent _prefsChanged]
Device is in edu mode, agent disabled 
aiaEnabled
Agent Enabled: %s -> %s
aiaLinkIdentityEnabled
Agent Link Identity Enabled: %s -> %s
aiaPushEnvironment
development
Agent Push Environment: %@ -> %@
-[SDAppleIDAgent _requestInfoForAppleID:completion:]
Info request already in progress
Request info for %@
-[SDAppleIDAgent _requestIdentityForAppleID:certificateToken:privateKeyPersistentReference:withCompletion:]
Identity request already in progress
Request identity for %@, certificate token %@, private key persistent ref %s
v24@?0@"NSString"8@"NSData"16
AgentDescription
-[SDAppleIDAgent _updateAppleID]
Apple ID changed from %@ to %@
-[SDAppleIDAgent _updateMyInfo]
AppleID is nil, unable to updated my info
-[SDAppleIDAgent _verifyState]
Verifying state
My AppleID is nil, user probably not signed in
Account doesn't have an identity object
Identity is invalid or needs renewal
Key verificatin failed
Account doesn't have a validation record
Validation Record needs update or is invalid
### Certificate account identifier does not match altDSID in the validation record
-[SDAppleIDAgent _verifyState]_block_invoke_4
-[SDAppleIDAgent _verifyState]_block_invoke_6
### Invalid certificate chain for %@, error %#m
Certificate chain for %@ is trusted
Agent state: all good.
v16@?0B8i12
IdentityLinkedOnce
OldAgentIdentityQueried
-[SDAppleIDAgent accountForAppleID:]
Account for %@:
-[SDAppleIDAgent verifiedIdentityForEmailOrPhone:queue:completion:]_block_invoke
Verified identity for %@: %@
v24@?0@"SDAppleIDVerifiedIdentity"8@"NSError"16
-[SDAppleIDAgent verifiedIdentityForEmailOrPhone:]_block_invoke
### copyCSIdentityForEmailOrPhone:queue:completion failed with error=%{error}
-[SDAppleIDAgent verifiedIdentityForEmailOrPhone:]
-[SDAppleIDAgent copyIdentityForAppleID:]
SecIdentity for %@:
-[SDAppleIDAgent queryVerifiedIdentityForEmailOrPhone:queue:completion:]_block_invoke
### FindPerson failed with error %@
### FindPerson returned no person info object
### No account identifier in person info object
v24@?0@"SFAppleIDPersonInfo"8@"NSError"16
AppleIDAccountValidationRecordData
-[SDAppleIDAgent connection:didReceiveToken:forTopic:identifier:]
Received push token '%.6@...', topic '%@', identifier '%@'
-[SDAppleIDAgent connection:didReceivePublicToken:]
Received public push token '%.6@...'
-[SDAppleIDAgent connection:didReceiveIncomingMessage:]
Received push notification topic '%@'
APSEnvironmentProduction
/System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
APSEnvironmentDevelopment
APSConnection
%@...%@
Issued
Pending
Failed
Revoked
Expired
identifier == %@
awdlTimer
T@"NSObject<OS_dispatch_source>",&,V_awdlTimer
awdlNetwork
T@,&,V_awdlNetwork
awdlStartFailed
TB,N,V_awdlStartFailed
awdlStarting
TB,N,V_awdlStarting
awdlTimerFired
TB,N,V_awdlTimerFired
currentRequest
T@"SDAutoUnlockWiFiRequest",&,V_currentRequest
locationManager
T@"CLLocationManager",&,N,V_locationManager
wifiRequestQueue
T@"NSMutableArray",&,N,V_wifiRequestQueue
com.apple.sharing.sysdiagnose-queue
com.apple.private.alloy.nearby
v24@?0@"NSString"8@"NSError"16
com.apple.Honeybee.event-notify
kLogPath
kLogIdentifier
collectingSysdiagnose
TB,N,V_collectingSysdiagnose
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
sysdiagnoseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sysdiagnoseQueue
receivedHoneybeeIDs
T@"NSMutableArray",&,N,V_receivedHoneybeeIDs
idsService
T@"IDSService",R,N,V_idsService
honeybeeConnection
T@"NSObject<OS_xpc_object>",&,N,V_honeybeeConnection
Sharing
StreamID
com.apple.AirDrop
DisableAWDL
Expect
User-Agent
Connection
Content-Type
gzip
pkzip
dvzip
close
100-continue
application/zip
application/x-cpio
application/x-dvzip
application/octet-stream
text/xml
POST
adVN
adVF
adDT
atag
cname
phash
ehash
nhash
comment
model
ecolor
icolor
osxvers
flags
file-read-data
 %ld
@me.com
@mac.com
%@@icloud.com
awdl0
%@.%@%@
clientProxy
T@"<SFCompanionServiceManagerClient>",&,V_clientProxy
streamHandlers
T@"NSMutableDictionary",&,V_streamHandlers
enabledServices
T@"NSMutableArray",&,V_enabledServices
managerID
T@"NSString",R,V_managerID
com.apple.sharingd.DomainsChanged
com.apple.sharingd.ManagedChanged
activityLevel
otherDevices
bestIsMe
skipScanPhoneCall
skipScanVeryActive
hasEventType
TI,N,V_eventType
hasActivityLevel
TI,N,V_activityLevel
hasOtherDevices
Ti,N,V_otherDevices
hasBestIsMe
TB,N,V_bestIsMe
hasSkipScanPhoneCall
TB,N,V_skipScanPhoneCall
hasSkipScanVeryActive
TB,N,V_skipScanVeryActive
Proxy message failed
AWDL info retrieval failed
 with wrapper %@
Encryption failed
AUUseRangingKey
AutoUnlockUseCoreLocation
DisableRanging
useRealRangingKey
useAKSToken
TB,N,V_useAKSToken
inRange
TB,N,V_inRange
shouldUnlock
TB,N,V_shouldUnlock
awdlInfoData
T@"NSData",C,N,V_awdlInfoData
acceptor
TB,N,GisAcceptor,V_acceptor
awdlStart
T@"NSDate",&,N,V_awdlStart
awdlInterval
Td,N,V_awdlInterval
T@"NSNumber",&,N,V_distance
rangingKey
T@"NSData",&,N,V_rangingKey
rangingTimedOut
TB,N,V_rangingTimedOut
rangingErrorString
T@"NSString",&,N,V_rangingErrorString
aksSuccess
TB,N,V_aksSuccess
rangingDisabled
useCoreLocation
rangingStart
T@"NSDate",&,N,V_rangingStart
rangingInterval
Td,N,V_rangingInterval
attemptError
T@"NSError",&,N,V_attemptError
remoteAWDLInfo
T@"NSDictionary",&,N,V_remoteAWDLInfo
localAWDLInfo
T@"NSDictionary",&,N,V_localAWDLInfo
sessionRangingKey
T@"NSData",&,N,V_sessionRangingKey
legacyProtocol
TB,N,V_legacyProtocol
useEncryption
TB,N,V_useEncryption
wifiErrorDomain
T@"NSString",&,N,V_wifiErrorDomain
wifiRangingErrorCode
Tq,N,V_wifiRangingErrorCode
wifiRangingResults
T@"NSArray",&,N,V_wifiRangingResults
coreLocationError
T@"NSError",&,N,V_coreLocationError
startAWDLError
T@"NSError",&,N,V_startAWDLError
Tq,N,V_errorType
wifiRequest
T@"SDAutoUnlockWiFiRequest",&,N,V_wifiRequest
appIcon
T@"NSData",&,N,V_appIcon
failureReasons
ltkSyncing
hasFailureReasons
TI,N,V_failureReasons
hasLtkSyncing
TB,N,V_ltkSyncing
v16@?0@"NSProgress"8
known
unknown
empty
@16@?0@8
com.apple.photos.asset-bundle
com.apple.private.live-photo-bundle
v16@?0@"NSArray"8
%lu files
%lu items
SDAirDropConnection
contactsOnly
TB,V_contactsOnly
destination
T@"NSURL",C,V_destination
T@"NSString",C,V_sessionID
shouldExtractMediaFromPhotosBundles
TB,V_shouldExtractMediaFromPhotosBundles
T@"<SDAirDropConnectionDelegate>",W,V_delegate
SDActivityScanner
 Handoff
 CopyPaste
 Boosted
@unionOfObjects.UUIDString
v24@?0@"NSObject<SFContinuityScannerClient>"8^B16
v24@?0@"SFActivityAdvertisement"8@"NSError"16
com.apple.sharing.handoff.scanning
Handoff State End
Handoff State
Is Scanning: %@
Scan Types: %@
Device Identifier To Lost Device Timer: %@
Device Identifier To Device Record: %@
TRANSFER_FROM_MIXED_TYPES_TEXT
T@"NSString",&,N,V_sessionID
hasModelName
T@"NSString",&,N,V_modelName
hasModelCode
T@"NSString",&,N,V_modelCode
hasBluetoothDiscovery
TI,N,V_bluetoothDiscovery
hasBonjourDiscovery
TI,N,V_bonjourDiscovery
hasBonjourTXTRecordDiscovery
TI,N,V_bonjourTXTRecordDiscovery
hasBonjourResolveComplete
TI,N,V_bonjourResolveComplete
hasTcpConnectionComplete
TI,N,V_tcpConnectionComplete
hasTlsHandshakeComplete
TI,N,V_tlsHandshakeComplete
hasIdentityQueryComplete
TI,N,V_identityQueryComplete
hasTotalDiscovery
TI,N,V_totalDiscovery
hasVerifiableIdentity
TB,N,V_verifiableIdentity
hasRssi
Ti,N,V_rssi
hasAwdlVersion
TI,N,V_awdlVersion
hasPlatform
TI,N,V_platform
hasBrowserID
T@"NSString",&,N,V_browserID
clRangingPeer
T@"_CLRangingPeer",&,N,V_clRangingPeer
macAddressData
T@"NSData",&,N,V_macAddressData
Activate failed with invalid parameters
activateCalled
TB,N,V_activateCalled
invalidateCalled
TB,N,V_invalidateCalled
T@"NSDictionary",&,N,V_awdlInfo
T@"NSString",R,C,N,V_identifier
rangingIntiator
TB,N,V_rangingIntiator
rangingPeer
T@"SDAutoUnlockRangingPeer",&,N,V_rangingPeer
wifiRangingError
T@"NSError",&,N,V_wifiRangingError
queueAvailableHandler
T@?,C,N,V_queueAvailableHandler
awdlStartedHandler
T@?,C,N,V_awdlStartedHandler
peerFoundHandler
T@?,C,N,V_peerFoundHandler
rangingStartedHandler
T@?,C,N,V_rangingStartedHandler
rangingCompletedHandler
T@?,C,N,V_rangingCompletedHandler
rangeable
TB,N,V_rangeable
calledAWDLStarted
TB,N,V_calledAWDLStarted
rangingStarted
TB,N,V_rangingStarted
waitingForNetworkToDisable
TB,N,V_waitingForNetworkToDisable
com.apple.sharingd.ConnectedChanged
odiskNodes
airDropNodes
hasHttpStatusCode
TI,N,V_httpStatusCode
Ti,N,V_errorCode
hasType
TI,N,V_type
hasIdmsEnv
TI,N,V_idmsEnv
com.apple.SharingXPCHelper
SDXPCHelperConnection.m
SDXPCHelperConnection deallocated without -invalidate call
FALLBACK
-[SDXPCHelperConnection monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:]
contact
-[SDXPCHelperConnection monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:]_block_invoke
v20@?0@"NSData"8B16
-[SDXPCHelperConnection groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:]
%@,%li,%f,%i
@"NSString"16@?0@"SharingXPCHelperImageItem"8
@"SharingXPCHelperImageItem"24@?0@"SharingXPCHelperImageItem"8^{CGImage=}16
-[SDXPCHelperConnection groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:]_block_invoke_3
v20@?0@"NSArray"8B16
@"NSArray"16@?0@"NSArray"8
groupContacts
-[SDXPCHelperConnection urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:]_block_invoke
v16@?0@"NSURL"8
-[SDXPCHelperConnection monogramImagesForMultipleContacts:style:diameter:monogramsAsFlatImages:]
-[SDXPCHelperConnection monogramImagesForMultipleContacts:style:diameter:monogramsAsFlatImages:]_block_invoke_4
multipleContacts
-[SDXPCHelperConnection CGImgForUIActivityTitles:foregroundColor:processOppositeColor:]
v32@?0@"NSString"8Q16^B24
,%@,%@,%@,
-[SDXPCHelperConnection CGImgForUIActivityTitles:foregroundColor:processOppositeColor:]_block_invoke_3
v32@?0@"SharingXPCHelperImageItem"8Q16^B24
activityTitles
CacheHits
CacheMisses
%02x
cacheFileCount
totalCacheAccessCount
numberOfSuggestions
suggestionsHash
sourceApplicationBundleID
isDarkMode
durationInMS
daemonPID
com.apple.sharing.sharesheetInvocation
-[SDXPCHelperConnection CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:]
,%@,%@,%lu,%i,%i,%@,
nameLabel
-[SDXPCHelperConnection CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:]_block_invoke
v16@?0@"NSData"8
-[SDXPCHelperConnection CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:]
activityTitle
-[SDXPCHelperConnection CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:]_block_invoke
-[SDXPCHelperConnection CGImgForActionPlatterWithTitle:tintColor:]
actionPlatter
-[SDXPCHelperConnection CGImgForActionPlatterWithTitle:tintColor:]_block_invoke
-[SDXPCHelperConnection CGImgForNearbyBadgeWithCount:]
%li,%@
nearbyBadge
-[SDXPCHelperConnection CGImgForNearbyBadgeWithCount:]_block_invoke
(UIColor %.1f,%.1f,%.1f,%.1f)
NULL
,%li,%@,%li,
-[SDXPCHelperConnection _updateShareSheetHostConfiguration]_block_invoke
-[SDXPCHelperConnection setSessionKeepAliveTransactionIdentifier:]_block_invoke
interruptionHandler
T@?,C,N,V_interruptionHandler
invalidationHandler
T@?,C,N,V_invalidationHandler
CompanionStreamConnectResponse
RequestAuthorData
com.apple.
Could not send request to other device
Could not create streams
Connection refused
Connection lost
Could not create connection, wireless not enabled
streamHandler
T@"SDStreamHandler",&,V_streamHandler
authorData
T@"NSData",&,V_authorData
initiator
TB,V_initiator
shouldStop
TB,V_shouldStop
clientSent
TB,V_clientSent
clientReceived
TB,V_clientReceived
networkBufferSpaceAvailable
TB,V_networkBufferSpaceAvailable
netServiceBrowser
T@"NSNetServiceBrowser",&,V_netServiceBrowser
fileHandle
T@"NSFileHandle",R,V_fileHandle
clientInputStream
T@"NSInputStream",&,V_clientInputStream
clientOutputStream
T@"NSOutputStream",&,V_clientOutputStream
writeQueue
T@"NSObject<OS_dispatch_queue>",&,V_writeQueue
networkStreamData
T@"NSMutableData",&,V_networkStreamData
readQueue
T@"NSObject<OS_dispatch_queue>",&,V_readQueue
clientStreamData
T@"NSMutableData",&,V_clientStreamData
readFromClient
Tq,V_readFromClient
wroteToClient
Tq,V_wroteToClient
streamsRequestHandler
T@?,C,V_streamsRequestHandler
T@"<SDCompanionStreamDelegate>",W,V_delegate
T@"NSString",&,V_identifier
errorString
T@"NSString",R,N
errorDetailedString
AutoUnlockSuggestedPeers
AutoUnlockPeerRetries
AutoUnlockRetryDate
AutoUnlockRetryMultiplier
AutoUnlockSetupRetryVersion
com.apple.sharing.auto-unlock-suggestion-manager
C42094B4-B936-4673-8034-4EEFD437BEB0
com.apple.sharingd.auto-unlock.suggestion-manager-queue
q24@?0@"SFAutoUnlockDevice"8@"SFAutoUnlockDevice"16
AUSuggestionsEnabled
AUSuggestionsIgnoreBackoff
AUSuggestionsTestDeviceID
AUAlwaysShowSetupRetry
foundFirstPeer
TB,N,V_foundFirstPeer
T@"SFBLEScanner",&,N,V_scanner
foundPeers
T@"NSMutableArray",&,N,V_foundPeers
currentBluetoothIDs
T@"NSArray",&,N,V_currentBluetoothIDs
serviceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_serviceTimer
deviceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_deviceTimer
setupRetryDeviceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_setupRetryDeviceTimer
suggestedPeers
T@"NSMutableArray",&,N,V_suggestedPeers
suggestedPeer
T@"SFAutoUnlockDevice",&,N,V_suggestedPeer
suggestionManagerSessionID
T@"NSUUID",&,N,V_suggestionManagerSessionID
T@"SFAutoUnlockDevice",&,N,V_setupRetryDevice
suggestionManagerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_suggestionManagerQueue
suggestedDeviceID
T@"NSString",C,N,V_suggestedDeviceID
setupRetryDeviceID
T@"NSString",C,N,V_setupRetryDeviceID
lastSuccessfulDevice
T@"SFAutoUnlockDevice",&,N,V_lastSuccessfulDevice
keyRequestExchangeTime
tokenExchangeTime
setupSucceeded
hasCompanionDeviceModel
hasKeyRequestExchangeTime
TI,N,V_keyRequestExchangeTime
hasTokenExchangeTime
TI,N,V_tokenExchangeTime
hasKeyDeviceLocked
hasSetupSucceeded
TB,N,V_setupSucceeded
hasWatchExistedInUnlockList
TB,N,V_watchExistedInUnlockList
hasTimeIntervalSinceLastWatch
TQ,N,V_timeIntervalSinceLastWatch
hasUpsell
TB,N,V_upsell
hasResponseTimeout
TI,N,V_responseTimeout
hasResponseTimeoutFromServer
TB,N,V_responseTimeoutFromServer
hasMessageTimeout
TI,N,V_messageTimeout
hasMessageTimeoutFromServer
TB,N,V_messageTimeoutFromServer
hasSetupRetry
TB,N,V_setupRetry
hasMacOldLTKSyncStatus
Ti,N,V_macOldLTKSyncStatus
hasMacNewLTKSyncStatus
Ti,N,V_macNewLTKSyncStatus
hasWatchOldLTKSyncStatus
hasWatchNewLTKSyncStatus
hasReceivedSetupACK
hasReceivedTokenACK
AutoUnlockIconCache
-[SDAutoUnlockMacIconCache iconImageDataForHash:]
No icon cache for hash: %@
### Icon cache isn't a dictionary
AutoUnlockImageData
### Error getting image data: %x
AutoUnlockAppName
Found cached image: %ld bytes, hash: %@, app: %@
-[SDAutoUnlockMacIconCache cacheIconImageData:hash:appName:]
Cached image: %ld bytes, hash: %@, app: %@
AUIconCacheItem
com.apple.sharingd.AirDropAllowedChanged
com.apple.sharingd.AirDropLinkStateChanged
com.apple.sharingd.AirDropPublished
com.apple.sharingd.AirplaneModeChanged
com.apple.sharingd.AltDSIDChanged
com.apple.sharingd.AppleIDAccountInfoChanged
com.apple.sharingd.AppleIDChanged
com.apple.sharingd.AppleAccountSignIn
com.apple.sharingd.AppleAccountSignOut
com.apple.sharingd.BlacklistedAppsChanged
com.apple.sharingd.BluetoothPowerChanged
com.apple.sharingd.CarPlayStatusChanged
com.apple.sharingd.ClamshellStatusChanged
com.apple.sharingd.ComputerNameChanged
com.apple.sharingd.ConsoleUserChanged
com.apple.sharingd.ContactsChanged
com.apple.sharingd.ContinuationPayloadSent
com.apple.sharingd.DebugInfoRequested
com.apple.sharingd.DiscoverableModeChanged
com.apple.sharingd.ExternalDisplaysChanged
com.apple.sharingd.FinderAirDropChanged
com.apple.sharingd.FinderPrefsChanged
com.apple.sharingd.HotspotMISStateChanged
com.apple.sharingd.KeyBagFirstUnlock
com.apple.sharingd.KeyBagLockStatusChanged
com.apple.sharingd.LocalHostNameChanged
com.apple.sharingd.MountPointsChanged
com.apple.sharingd.MulticastDNSChanged
com.apple.sharingd.MultipleUsersLoggedInChanged
com.apple.sharingd.NetbiosNameChanged
com.apple.sharingd.ODiskMountPointsChanged
com.apple.sharingd.PairedWatchLockStateChanged
com.apple.sharingd.PairedWatchWristStateChanged
com.apple.sharingd.PersonalHotspotAllowedChanged
com.apple.sharingd.PowerSourceChanged
com.apple.sharingd.ResetState2
com.apple.sharingd.ResetState
com.apple.sharingd.ScreenStateChanged
com.apple.sharingd.SystemHasPoweredOn
com.apple.sharingd.SystemUIChanged
com.apple.sharingd.SystemWillSleep
com.apple.sharingd.UILockStatusChanged
com.apple.sharingd.UserPictureChanged
com.apple.sharingd.VolumesChanged
com.apple.sharingd.WirelessCarPlayChanged
com.apple.sharingd.WirelessModeChanged
com.apple.sharingd.WirelessPowerChanged
com.apple.sharingd.WorkgroupChanged
com.apple.sharingd.WristStateChanged
-[SDStatusMonitor clearMonitorCache]
Requested
Default
User Defaults
com.apple.sharing.airdrop-mode-changed
AccountState
v20@?0@"NSDictionary"8i16
-[SDStatusMonitor clearMyAppleIDInfo]
v20@?0B8@"NSError"12
altDSID
v24@?0@"NSDictionary"8@"NSError"16
-[SDStatusMonitor clearMyIconAndHash]
v16@?0@"CNContact"8
BuildVersion
IsSimulator
marketing-name
ProductName
ProductType
ProductVersion
ReleaseType
Production
Simulator
%@ (%@)
%@ %@ (%@)
%@: %@, %@, 
BatteryCurrentCapacity
BatteryIsCharging
charging
not charging
%d%% (%@)
B332BTAddressRotationDelayMsec
MinPersonImageSize
DeviceName
iPod
iPod touch
SidebarMaxCount
ShareSheetMaxSuggestions
WorkgroupThreshold
AlwaysAutoAccept
AlwaysSendPayload
B332PairingEnabled
SetupDone
ForceNoBuddy
com.apple.purplebuddy
BypassLTKeyAbort
CoalesceMe
DisableAutoAccept
DisableCompression
DisableContinuityTLS
DisablePeopleSuggestions
DisablePictureQuery
DisablePipelining
DisableQuarantine
DisableExtractMediaFromBundles
DisableRotation
DisableAirDropAdvertising
EnableAirDropReceiving
EnableAllRecents
EnableBugs
DisableContinuity
EnableDebugMode
EnableDVZip
EnableHotspotFallback
FullyEnableNewHashing
EnableOOBPCredentialLogging
EnablePKZip
pdStrangers
EnableStreamDebugging
EnableWebloc
EnableXML
ForceAWDL
ForceP2P
IgnoreIconDiskCache
RegisterAllInterfaces
ShowMeInWormhole
ShowThisComputer
TestDiskFull
client
server
begin
available
unavailable
_whats-my-name._tcp.
local.
com.apple.sharing.privacy-changed
-[SDStatusMonitor installContactsMonitor]
CMFSyncAgentBlockListUpdated
%@/%@/%@
MulticastDNS
com.apple.springboard.hasBlankedScreen
v12@?0i8
Unknown
DetectDisabled
Unexpected
com.apple.airport.preferences.plist
sharedMonitor
T@"SDStatusMonitor",R
b332BTAddressRotationDelay
Td,R
shareSheetMaxSuggestions
Tq,R
b332PairingEnabled
TB,R
enableNewHashing
enableOOBPCredentialLogging
meCard
T@"CNContact",R,N,V___meCard
familyHotspotEnabled
airDropPublished
airplaneModeEnabled
bluetoothEnabled
discoverableMode
T@"NSString",&
finderServer
T@"SDAirDropServer",W
wirelessEnabled
awdlInfo
T@"NSDictionary",R
awdlPeerList
T@"NSArray",R
awdlState
T@"NSDictionary",R,V_awdlState
bluetoothAddress
T@"NSData",R
bonjourName
T@"NSString",R
computerName
consoleUser
deviceInformation
deviceKeyBagState
lastDarkWakeDate
T@"NSDate",R,V_lastDarkWakeDate
localHostName
localPowerSource
T@"SFPowerSource",R
minPersonImageSize
Ti,R
modelCode
modelName
myAccountAppleID
myAltDSID
myAppleID
myAppleIDCommonName
myAppleIDEmailAddresses
myAppleIDEmailHash
myAppleIDPhoneHash
myAppleIDPhoneNumbers
myAppleIDValidationRecord
myEmail
myGivenName
myName
myPrimaryEmail
myMediumHashes
myShortHashesForAirDrop
netbiosName
pairedWatchLockState
pairedWatchWristState
sidebarMaxCount
someComputerName
systemUIFlags
TI,R
workgroup
workgroupThreshold
watchWristState
airdropAllowed
TB,R,GisAirDropAllowed
airdropAvailable
TB,R,GisAirDropAvailable
effectiveBlacklistedAppBundleIDs
T@"NSSet",R,V_effectiveBlacklistedAppBundleIDs
allEnabled
altDSIDNeedsFixing
alwaysAutoAccept
alwaysSendPayload
backlightOn
bonjourEnabled
browseAllInterfaces
bypassLTKeyAbort
carplayConnected
coalesceMe
computerToComputer
connectedEnabled
controlCenterVisible
TB,R,V_controlCenterVisible
currentConsoleUser
deviceKeyBagDisabled
deviceKeyBagLocked
deviceKeyBagLocking
deviceKeyBagUnlocked
deviceRequiresNewRanging
deviceSupportsContinuity
deviceSupportsRanging
deviceSupportsWAPI
deviceUIUnlocked
deviceWasUnlockedOnce
disableAutoAccept
disableCompression
disableContinuityTLS
disableExtractMediaFromBundles
disablePeopleSuggestions
disablePictureQuery
disablePipelining
disableQuarantine
disableRotation
disableTLS
dockHasDownloadsFolder
eduModeEnabled
enableAirDropAdvertising
enableAirDropReceiving
enableAllRecents
enableBugs
enableContinuity
enableDebugMode
enableDemoMode
enableDVZip
enableHotspotFallback
enablePKZip
enableStrangers
enableStreamDebugging
enableWebloc
enableXML
finderAirDropEnabled
forceAWDL
forceP2P
handoffVisible
ignoreIconDiskCache
internetSharingEnabled
multipleUsersLoggedIn
TB,R,V_multipleUsersLoggedIn
myAppleIDIsManaged
personalHotspotAllowed
registerAllInterfaces
runningAsSetupUser
screenOn
showMeInWormhole
showThisComputer
signedIntoPrimaryiCloudAccount
simStateReady
sleepModeOn
testDiskFull
wifiUserPowerPreference
wirelessAccessPoint
wirelessCarPlay
All Good
Identity Invalid
Validation Record Invalid
Identity Request In Progress
Certificate Expired
No Certificate
Password Invalid
Password Inaccessible
No Account
No Identity
No Private Key
No Intermediate Certificate
User Not Signed In
Device Not Unlocked Once
ITUNES_STORE_LINK_IBOOK
authToken
TI,N,V_sessionID
hasAuthToken
T@"NSData",&,N,V_authToken
com.apple.MobileStore
com.apple.Music
SFAirDropActivitySubjectiTunesStoreLinkType
ITUNES_STORE_LINK_MUSIC
ITUNES_STORE_LINK_MOVIE
ITUNES_STORE_LINK_TV_SHOW
ITUNES_STORE_LINK_AUDIOBOOK
ITUNES_STORE_LINK_RINGTONE
ITUNES_STORE_LINK
SDNotificationNameNearbyBLEAuthTagChanged
SDNotificationNameIDSAccountsChanged
SDNotificationNameIDSDevicesChanged
SDNearbyAgentNotificationUnlockBLEDataReceived
SDNearbyAgentNotificationInfoKeyBLEDevice
SDNearbyAgentNotificationInfoKeyBLEData
BLEAdv
SDNearbyAgentCore
-- SDNearbyAgent --
Up %ll{dur}, level %d (%s), timer %s, last user %.2f secs, linger %s, screen %s (%s), multiuser %s, sysUI 0x%X, watch %d, FamF 0x%llX, ARS %s
, AID '%@'
 (%s)
, iTunes '%@' (%s)
, MeDev F<%.8@> I<%.8@> '%@'
AutoUnlocking:         YES
Boost Nearby Info:     YES
BLE Connections:       %ld
BLE Diag Clients:      %ld
BLE Action Advertiser: %@, linger %s
BLE Action Scanner:    %@
BLE Info Advertiser:   %@
BLE Info Scanner:      %@
BLE Prox Scanner:      %@
BT Pipe:               %@
Device Discovery:      %ld request(s)
, Action
, NAScreenOff
, Info
, NIScreenOff
, Prox
, PPScreenOff
, %ld Action
, %ld Info
, %ld Prox
v32@?0@"NSUUID"8@"SDBLEIdentifiedDevice"16^B24
, %u of %ld Identified
IDS Service:           %s, %s, %ld device(s), %d AppleTV, %d Continuity, %d HomePod, iMessage %s, %ld device(s) ALEncrypted %d
signed in
not signed in
Services:              %ld, %ld sessions, %ld setup sessions
SystemService:         %@
Pref: '%@' = '%@'
-- BLE Connections --
-- Setup Sessions --
%@ -- %@
-- Sessions --
-- Devices --
-[SDNearbyAgent setAudioRoutingScore:]_block_invoke
Audio routing score changed: %s -> %s
-[SDNearbyAgent setAutoUnlockActive:]_block_invoke
AutoUnlocking: %s -> %s
-[SDNearbyAgent setBoostNearbyInfo:]_block_invoke
BoostNearbyInfo: %s -> %s
-[SDNearbyAgent setHotspotInfo:]_block_invoke
HotspotInfo: 0x%X -> 0x%X
-[SDNearbyAgent _activate]
Sharing-CA
com.apple.rapport.familyFlagsChanged
-[SDNearbyAgent _activate]_block_invoke
Family flags changed: 0x%llX
-[SDNearbyAgent _invalidate]
-[SDNearbyAgent _handleAirDropDiscoverableModeChanged:]_block_invoke
AirDrop discoverable mode changed
-[SDNearbyAgent _handleAppleIDChanged:]_block_invoke
AppleID changed
activityPollSeconds
-[SDNearbyAgent prefsChanged]
Activity poll seconds: %d -> %d
activityRecentSeconds
Activity recent seconds: %d -> %d
btPipeEnabled
BT Pipe enabled: %s -> %s
caEnabled
Coordinated Alerts enabled: %s -> %s
caForce
Coordinated Alerts force: %d -> %d
caPhoneCalls
Coordinated Alerts phone calls: %s -> %s
caScanIfVeryActive
Coordinated Alerts scan if very active: %s -> %s
caSingleDevice
Coordinated Alerts single device: %s -> %s
idEnabled
Identification enabled: %s -> %s
nearbyActionAdvertiseDisabled
NearbyAction advertise disabled: %s -> %s
nearbyActionRSSILog
NearbyAction RSSI log: %s -> %s
nearbyActionScan
NearbyAction scan always: %s -> %s
NearbyAction scan never: %s -> %s
nearbyAuthTagOverride
Nearby AuthTag override: %@ -> %@
nearbyInfoAdvertiseAlways
NearbyInfo advertise always: %s -> %s
nearbyInfoAdvertiseDisabled
NearbyInfo advertise disabled: %s -> %s
nearbyInfoAdvertiseLingerSecs
NearbyInfo advertise linger seconds: %.0f -> %.0f
nearbyInfoRSSILog
NearbyInfo RSSI log: %s -> %s
nearbyInfoWiFiP2P
NearbyInfo WiFiP2P: %s -> %s
pwsContactHashes
ContactHashes: %s -> %s
ppAdvFieldsLog
Log ProxPairing advertisement fields: %s -> %s
ppEnabled
Proximity Enabled: %s -> %s
ppInfoOverride
Proximity Info Override: %@
ppRSSIEstimatorInfo
ppRSSILog
Proximity RSSI log: %s -> %s
homePodIdentifiesAsB520
HomePod identifying as B520: %s -> %s
-[SDNearbyAgent _update]
### Ignoring update before activate
com.apple.sharing.activity-level-changed
Create activity timer failed
-[SDNearbyAgent _activityMonitorCurrentLevelAndNeedsPoll:recentUserActivity:]
Activity level changed %d (%s) -> %d (%s)
-[SDNearbyAgent _activityMonitorCarPlayStatusChanged:]_block_invoke
CarPlay changed to %s
-[SDNearbyAgent _activityMonitorMultipleUsersLoggedInChanged:]_block_invoke
Multiple users logged in changed: %s
-[SDNearbyAgent _activityMonitorScreenStateChanged:]_block_invoke
-[SDNearbyAgent _activityMonitorUILockStatusChanged:]_block_invoke
UserActive
-[SDNearbyAgent _activityMonitorWatchWristStateChanged:]_block_invoke
Watch wrist state changed: %d
ssidH
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]
BLE NearbyAction advertiser start: %#{flags}, %##@
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]_block_invoke
### Start NearbyAction advertiser failed: %@
BLE NearbyAction advertiser update: %#{flags}
BLE NearbyAction advertiser goodbye update: %#{flags}
BLE NearbyAction linger advertise for 5 seconds for goodbyes
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStarted]_block_invoke_2
BLE NearbyAction linger advertise ended
-[SDNearbyAgent _bleNearbyActionAdvertiserEnsureStopped]
BLE NearbyAction advertiser stop
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]
BLE NearbyAction scanner start
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]_block_invoke
BLE NearbyAction found %@
BLE NearbyAction lost %@
-[SDNearbyAgent _bleNearbyActionScannerEnsureStarted]_block_invoke_2
BLE NearbyAction changed %@
BLE NearbyAction scan state changed: %s
### Start NearbyAction scanner failed: %@
-[SDNearbyAgent _bleNearbyActionScannerEnsureStopped]
BLE NearbyAction scanner stop
-[SDNearbyAgent _bleNearbyInfoAdvertiserEnsureStarted]
BLE NearbyInfo advertiser created
-[SDNearbyAgent _bleNearbyInfoAdvertiserEnsureStopped]
BLE NearbyInfo advertiser stop
v32@?0@"NSUUID"8@"SFService"16^B24
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdate]
BLE NearbyInfo advertiser update
AirDropUsable
R1Capability
BLE NearbyInfo advertiser start: %##@
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdate]_block_invoke
### Start NearbyInfo advertiser failed: %@
BLEAdvKeyAudioRoutingScoreInfo
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdateAddAudioRoutingScore:]
Updated audio routing score: %s <%@>
BLEAdvKeyHotspotInfo
-[SDNearbyAgent _bleNearbyInfoAdvertiserUpdateAddHotspotInfo:]
Updated HotspotInfo: 0x%X <%@>
BLEAdvKeyActivityLevel
-[SDNearbyAgent _bleEncryptActivityLevel:]
NearbyInfo sending activity level, original: 0x%x encrypted:0x%x
-[SDNearbyAgent _bleNearbyInfoAdvertiserLingerStart:]
NearbyInfo Linger advertise start: %@, %.0f seconds
-[SDNearbyAgent _bleNearbyInfoAdvertiserLingerStart:]_block_invoke
NearbyInfo Linger advertise stop: %@
-[SDNearbyAgent _bleNearbyInfoReceivedData:cnx:peer:]
### BLE NearbyInfo frame no type (%tu bytes)
BLE NearbyInfo no-op frame
BLE NearbyInfo PingRequest: %'.32@
BLE NearbyInfo PingResponse: %'.32@
BLE NearbyInfo received frame type 0x%02X, %ld bytes
### BLE Remote app frame with no service
### BLE Remote app frame with no service event handler
### BLE NearbyInfo frame %s, no service type
BLE NearbyInfo frame %s, %s, %ld bytes, peer %@
### BLE NearbyInfo unsupported frame type 0x%02X
### BLE NearbyInfo frame error: %#m
-[SDNearbyAgent _bleNearbyInfoReceivedFrameType:src:end:cnx:]
### BLE NearbyInfo frame no session ID (%tu bytes)
### BLE NearbyInfo frame no message ID (%tu bytes)
Bad frame type: %d
BLE NearbyInfo received session frame type 0x%02X
### BLE NearbyInfo session receive with no handler: %@
00000000-0000-0000-0000-000000000000
BLE NearbyInfo received service frame type 0x%02X
_serviceUUID
### BLE NearbyInfo service receive with no handler: %@
### BLE NearbyInfo receive frame failed: %#m
-[SDNearbyAgent bleNearbyInfoStartConnectionToDevice:owner:connected:]
Reusing BLE connection for %@
Creating BLE connection for %@
-[SDNearbyAgent bleNearbyInfoStopConnectionToDevice:owner:]
Invalidating BLE connection for %@
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]
### BLE Nearby send frame type %s, invalid service 0x%X, %ld bytes, peer %@
### BLE Nearby send frame type %s, service %s, %ld bytes, unknown peer %@
### Can't send more than 255 fragments (%zu total bytes)
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]_block_invoke
### BLE Nearby send frame type %s, fragment %u, service %s, %ld of %ld bytes, peer %@ failed: %@
### BLE Nearby send frame type %s, last fragment %u, service %s, %ld of %ld bytes, peer %@ failed: %@
-[SDNearbyAgent bleNearbyInfoSendFrameType:serviceType:data:peer:isSession:]_block_invoke_2
### BLE Nearby send frame type %s, service %s, %ld bytes, peer %@ failed: %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]
BLE NearbyInfo scanner start
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke
BLE NearbyInfo found %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_2
BLE NearbyInfo lost %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_3
BLE NearbyInfo changed %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_4
BLE NearbyInfo scan state changed: %s
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStarted]_block_invoke_5
### Start NearbyInfo scanner failed: %@
-[SDNearbyAgent _bleNearbyInfoScannerEnsureStopped]
BLE NearbyInfo scanner stop
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]
BLE Prox scanner start
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke
BLE Prox found %@
BLE Prox found %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_2
BLE Prox lost %@
BLE Prox lost %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_3
BLE Prox changed %@
BLE Prox changed %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_4
BLE Prox scan state changed: %s
-[SDNearbyAgent _bleProximityPairingScannerEnsureStarted]_block_invoke_5
### BLE Prox scanner start failed: %@
-[SDNearbyAgent _bleProximityPairingScannerEnsureStopped]
BLE Prox scanner stop
-[SDNearbyAgent _btPipeEnsureStarted]
BTPipe start
com.apple.sharing.BTPipe
### BTPipe start faild: %#m
-[SDNearbyAgent _btPipeEnsureStopped]
BTPipe stop
-[SDNearbyAgent _btPipeHandleFrameType:data:]
BTPipe ping request: %ld bytes
### Ping request too small: %ld bytes
-[SDNearbyAgent _btPipeHandleFrameType:data:]_block_invoke
### BTPipe ping response failed: %@
### Ping response too small: %ld bytes
BTPipe ping response: %ld bytes, %.0f ms
-[SDNearbyAgent _bleAdvertisingAddressChanged]
BLE address unchanged: %.6a
BLE address changed: %.6a
-[SDNearbyAgent _bleUpdateAuthTagIfNeeded]
### Generate BLE Auth Tag failed: %{error}
Updated BLE Auth Tag: <%@>
-[SDNearbyAgent _bleUpdateScanner:typeFlag:]_block_invoke
Updating BLEScanner %p deviceFilter changed to %@ 
Updating BLEScanner %p changeFlags from 0x%x to 0x%x
Updating BLEScanner %p RSSI threshold to %ld
Updating BLEScanner %p scanCache from %@ to %@
Updating BLEScanner %p scanRate from %s to %s
Updating BLEScanner %p trackedPeers to %@
CUGuardLetNoReturn
CUGuardLet with no return
apay
rssi
atvp
ppEn
ppEx
ppRp
psEn
psEx
whas
ppEn-BeatsX1,1
ppEx-BeatsX1,1
psEn-BeatsX1,1
psEx-BeatsX1,1
ppEn-BeatsSolo3,1
ppEx-BeatsSolo3,1
psEn-BeatsSolo3,1
psEx-BeatsSolo3,1
ppEn-BeatsStudio3,2
ppEx-BeatsStudio3,2
psEn-BeatsStudio3,2
psEx-BeatsStudio3,2
rEst
algo
homepod-iPad-*
homepod-iPhone10,1-*
homepod-iPhone10,2-*
homepod-iPhone10,4-*
homepod-iPhone10,5-*
homepod-iPhone11,2-*
homepod-iPhone11,6-*
homepod-iPhone11,8-*
homepod
homepod-*-B520ish
rssiSmallEnter
rssiSmallExit
rssiMediumEnter
rssiMediumExit
b520ho
info
rssiExit
rssiImm
rssiNear
rssiFar
ioss-*-iPad
ioss-iPad-*
ioss-iPhone10,1-*
ioss-*-iPhone10,1
ioss-iPhone10,1-iPhone10,1
ioss-iPhone10,1-iPhone10,2
ioss-iPhone10,2-*
ioss-*-iPhone10,2
ioss-iPhone10,2-iPhone10,2
ioss-iPhone10,2-iPhone10,1
ioss-iPhone10,3-*
ioss-iPhone10,4-*
ioss-iPhone10,5-*
ioss-iPhone10,6-*
ioss-iPhone11,2-*
ioss-iPhone11,6-*
ioss-iPhone11,8-*
ioss-iPhone12,1-*
ioss-iPhone12,3-*
ioss-iPhone12,5-*
ioss-*-iPod9,1
ioss
rafp-iPhone10,1-*
rafp-iPhone10,2-*
ShAu-*-iPad
ShAu-iPad-*
ShAu
iPod9,1
%@-%@-%@
%@-*-%@
%@-%@-*
AudioAccessory5,1
-[SDNearbyAgent _bleProximityUpdateDeviceCloseNearbyActionDevice:]
### No ble proximity info found for %@
-[SDNearbyAgent coordinatedAlertRequestStart:]
CoordinatedAlert: start
CoordinatedAlert: always alerting when no other devices registered
CoordinatedAlert: always alerting for phone calls
CoordinatedAlert: skipping when very active
CoordinatedAlert: skipping when disabled
@"AWDSharingCoordinatedAlertResult"8@?0
Start
level
devices
best
skipPhone
skipActive
MsgScans
MsgNoScans
CA: Start, type %ld, level %d, devices %d, best %d, skipP %d, skipA %d, scans %u, noScans %u
-[SDNearbyAgent coordinatedAlertRequestFinish:]
CoordinatedAlert finish: device %@ ignored because its %s is disabled
CoordinatedAlert finish: device %@ activity level too low: 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) is lower than ours 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) loses over headphones audible, 0x%02X (%s)
CoordinatedAlert finish: device %@ activity level 0x%02X (%s) is higher than ours 0x%02X (%s)
CoordinatedAlert finish: no other devices found
*** Forcing Coordinated Alert 'bestIsMe' to %s
Finish
CA: Finish, type %ld, level %d, devices %d, best %d, skipP %d, skipA %d, scans %u, noScans %u
-[SDNearbyAgent coordinatedAlertRequestCancel:]
CoordinatedAlert cancel
-[SDNearbyAgent _deviceDiscoveryRequestStart:]
DeviceDiscovery start
-[SDNearbyAgent deviceDiscoveryRequestStop:]
DeviceDiscovery stop
MatchAWDL
MatchKeyboard
MatchProx
MatchSetup
MatchClose
-[SDNearbyAgent _deviceDiscoveryFastScanStart:device:reason:]
Fast scan start ignored for UI state (screen %s, unlocked %s)
Fast scan start too soon (%llu < %u seconds)
Fast scan rate start '%@' for %@
Fast scan rate start '%@'
Timeout-%@
-[SDNearbyAgent _deviceDiscoveryFastScanStop:reset:reason:]
Fast scan rate stop '%@'
Watch
v32@?0@"NSUUID"8@"SFDevice"16^B24
-[SDNearbyAgent _deviceDiscoveryBLEDeviceFound:type:]
Replace old device: %s, %@ -> %@
-[SDNearbyAgent _deviceDiscoveryBLEDeviceChanged:type:changes:]
BLE action type changed: %s -> %s, %@
-[SDNearbyAgent diagnosticBLEModeStart:]
BLE diagnostic mode start
-[SDNearbyAgent diagnosticBLEModeStop:]
BLE diagnostic mode stop
-[SDNearbyAgent diagnosticMockChanged:]
Mocking changed event with device: %@
-[SDNearbyAgent diagnosticMockFound:]
Mocking found event with device: %@
-[SDNearbyAgent diagnosticMockLost:]
Mocking lost event with device: %@
-[SDNearbyAgent _identificationEnsureStarted]
Deferring identification start until FirstUnlock
Identification start
com.apple.rapport.identitiesChanged
-[SDNearbyAgent _identificationEnsureStarted]_block_invoke
Identities changed
-[SDNearbyAgent _identificationEnsureStopped]
Identification stop
-[SDNearbyAgent _identificationGetIdentities]
Identification get identities
-[SDNearbyAgent _identificationGetIdentities]_block_invoke
### Identification get identities failed: %{error}
Self identity: %@, %#{flags}
### Self identity not found
Identification identities: %d total
-[SDNearbyAgent _identificationHandleDeviceFound:flags:]
### Max identification devices reached, skipping %@ (%d total)
NearbyInfo received activity level: 0x%x after decryption
Identification starting maintenance timer
-[SDNearbyAgent _identificationMaintenanceTimer]
Identification removed stale %@
Identification stopping maintenance timer
-[SDNearbyAgent _identificationReIdentifySameAccountDevices:type:]
Identification identified device: %@, %@, %@
-[SDNearbyAgent _identificationIdentifyDevice:sfDevice:]
Identification identified device %@ -> %@, %llu mus
-[SDNearbyAgent _idsEnsureStarted]
IDS start
-[SDNearbyAgent _idsEnsureStopped]
IDS stop
addTicks
-[SDNearbyAgent idsAddCachedIDSIdentifier:device:]
Remove old IDS cache entry: %@ : %##@
### No BT UUID for %@
idsID
Add IDS cache entry: %@ : %##@
-[SDNearbyAgent idsAddCachedIDSIdentifierToDevice:]
Found IDS cache entry for device: %@
AppleTV
AudioAccessory
iMac
v16@?0@"NSSet"8
-[SDNearbyAgent _idsDeviceArrayLocked]
Get IDSDevices
-[SDNearbyAgent idsDeviceForBluetoothDeviceID:conflictDetected:]
Multiple (%ld) IDS devices are associated with BT ID %@. Picking %@, some info may be inaccurate
Local BT Addr %.6a, Local IDS UniqueID: %@ (%@)
, iMessage
, SMS
, Active
, Connected
, Paired
HomePod1,
-[SDNearbyAgent idsIsSignedIn]
### No active IDS accounts, but has devices
IsSignedIn: %s
-[SDNearbyAgent _idsShouldEncryptActivityLevel]
Not encrypting activity level because Manatee is not available.
Not encrypting activity level; IDS device %@ is incompatible with encryption
-[SDNearbyAgent service:account:identifier:didSendWithSuccess:error:context:]
IDS service %@, account %@, identifier %@, success %d, error %@, context @
-[SDNearbyAgent service:account:identifier:hasBeenDeliveredWithContext:]
IDS service %@, account %@, identifier %@, context @
-[SDNearbyAgent service:account:incomingMessage:fromID:context:]
IDS service %@, account %@, message %@, fromID %@, context %@
-[SDNearbyAgent service:activeAccountsChanged:]
IDS service %@ activeAccountsChanged %@
-[SDNearbyAgent service:connectedDevicesChanged:]
IDS service %@ connectedDevicesChanged %@
-[SDNearbyAgent service:devicesChanged:]
IDS devicesChanged: %d device(s)
-[SDNearbyAgent serviceStart:]
Service start: %@
Forcing this device to identify as a B520
### Service start failed: %#m
-[SDNearbyAgent serviceStop:]
Service stop: %@
### Service stop failed: %#m
-[SDNearbyAgent serviceSendRequest:service:]
### Completing error response for service request %@ for service %@
-[SDNearbyAgent sessionStart:]
Session start: service %@, %@
Reusing BLE connection for session %@
Create new BLE connection for session %@
### Session start failed: %#m
-[SDNearbyAgent sessionStop:]
Session stop: %@, peer %@, connection %@
Invalidating BLE connection for session %@
Session stop: %@ (no peer/connection)
v32@?0@"NSUUID"8@"SFSession"16^B24
-[SDNearbyAgent sessionSendEvent:session:]
### Send Remote app message with no device identifier
### Send Remote app message to %@ with no connection
### Attempt to send Remote app message with header fields
### Attempt to send Remote app message with no body
-[SDNearbyAgent sessionSendEvent:session:]_block_invoke
### Sent %ld bytes to %@ failed: %@
-[SDNearbyAgent sessionSendRequest:session:]
### Completing error response for request %@ for session %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]
### Send message no device
### Send message no session
### Send message no message identifier
### Send message no service UUID
### Send message no connection
### Send message no connection for device %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]_block_invoke
Sent message to %@, %@, %@
-[SDNearbyAgent _sendMessage:frameType:service:session:]_block_invoke_2
### Send message failed: %#m
-[SDNearbyAgent _setupHandleCreateSession:data:]
BLE SetupCreateSession received from %@: %'.32@
WriteSalt
WriteKey
ReadSalt
ReadKey
### BLE SetupCreateSession failed: %#m
-[SDNearbyAgent _setupHandleSessionCreated:data:]
BLE SetupSessionCreated received from %@: %'.32@
-[SDNearbyAgent _setupHandleSessionEncryptedFrame:type:cnx:]
BLE SetupEMsg type 0x%02X received from %@: %'.32@
### BLE SetupEMsg session %@ not found
### BLE SetupEMsg type 0x%02X received from %@ failed: %#m
-[SDNearbyAgent _setupHandleSessionMessageType:src:end:cnx:session:]
### BLE SetupRecvMsg no message ID (%tu bytes)
### BLE NearbyInfo setup session receive with no handler: %@
### BLE NearbyInfo setup service receive with no handler: %@
### BLE SetupRecvMsg failed: %#m
-[SDNearbyAgent _setupSendCreateSession:cnx:]
BLE SetupSendCreateSession %@
### BLE SetupSendCreateSession failed: %#m
-[SDNearbyAgent _setupSendData:sessionIdentifier:cnx:clientSession:]
BLE Setup re-creating lost session ID %@
### BLE SetupSendMsg no setup session after re-create?
BLE SetupSendMsg queuing data until session created (%ld)
### BLE SetupSendMsg failed: %#m
Start unlock connection with no identifier
-[SDNearbyAgent _startUnlockBLEConnectionWithDevice:encrypted:]
Reusing BLE connection for unlock
Creating BLE connection for unlock
Stop unlock connection with no identifier
-[SDNearbyAgent _stopUnlockBLEConnectionWithDevice:]
Invalidating BLE connection for unlock
Send unlock data to BLE device with no identifier
-[SDNearbyAgent _unlockReceivedFrameData:peer:device:]
BLE NearbyInfo AutoUnlock received %ld bytes from %@
-[SDNearbyAgent unlockUpdateAdvertising:mask:]_block_invoke
Unlock advertise update: 0x%X flags, 0x%X mask
-[SDNearbyAgent unlockStartTestClientWithDevice:]
Unlock test client with device: %@
-[SDNearbyAgent unlockStartTestClientWithDevice:]_block_invoke_2
Unlock test send: %@
-[SDNearbyAgent unlockStartTestClientWithDevice:]_block_invoke_3
Unlock test client timer stopped
-[SDNearbyAgent unlockStopTestClient]
Unlock test client stop
-[SDNearbyAgent unlockStartTestServer]
Unlock start test server
-[SDNearbyAgent unlockStopTestServer]
Unlock stop test server
-[SDNearbyAgent _testPipePing]
### BT Pipe not enabled
-[SDNearbyAgent _testPipePing]_block_invoke
### BTPipe ping request failed: %@
sharedNearbyAgent
T@"SDNearbyAgent",R,N
autoUnlockActive
TB,N,V_autoUnlockActive
audioRoutingScore
Ti,N,V_audioRoutingScore
bleAuthTag
T@"NSData",R,N,V_bleAuthTag
boostNearbyInfo
TB,N,V_boostNearbyInfo
btConnectedDeviceMonitor
T@"CUBluetoothClient",R,N,V_btConnectedDeviceMonitor
hotspotInfo
TI,N,V_hotspotInfo
idSelfIdentity
T@"RPIdentity",R,N,V_idSelfIdentity
T@"NSData",C,N,V_authTag
btAddr
T@"NSData",C,N,V_btAddr
discoveryFlags
TQ,N,V_discoveryFlags
T@"NSUUID",&,N,V_identifier
identity
T@"RPIdentity",&,N,V_identity
lastUpdateTicks
TQ,N,V_lastUpdateTicks
SDSession %{ptr}
, ID %@
, Peer %@
, SessionCreated %s
, %ld pending sends
clientSession
T@"SFSession",&,N,V_clientSession
T@"NSUUID",C,N,V_identifier
dhSecretKey
T@"NSData",C,N,V_dhSecretKey
readKey
T@"NSData",C,N,V_readKey
readNonce
TQ,N,V_readNonce
writeKey
T@"NSData",C,N,V_writeKey
writeNonce
TQ,N,V_writeNonce
peerIdentifier
T@"NSUUID",C,N,V_peerIdentifier
sendDataQueue
T@"NSMutableArray",&,N,V_sendDataQueue
sessionCreated
TB,N,V_sessionCreated
Disabled
Idle
Audio
Screen
Video
User
Driving
Medium
High
PWOnly
HSA1
HSA2
Managed
SSAccountStore
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
AKAccountManager
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
Scanning
ContinuityKeyboard
ContinuityRemote
Setup2
AudioTuning
PasswordGranting
PasswordSharing
System
AppleTVSetup
DeviceDiagnostics
Debug
PhoneCallHandoff
RemoteDisplay
Background
Normal
HighNormal
Aggressive
BackgroundOld
NormalOld
HighOld
AggressiveOld
B520ish
HomePod
Prox
HeySiri
AirPlayTarget
AirPlaySource
MagicSwitch
Continuity
TetheringTarget
TetheringSource
NearbyAction
NearbyInfo
ANAnnounce
/System/Library/PrivateFrameworks/Announce.framework/Announce
SDAppleIDUtilities
void SDAppleIDClearGSTokenCache(NSString * _Nullable __strong)
Removing GS token cache entry for %@
Removing Account token cache entry for %@
com.apple.gs.authagent.auth
### Remove Account token cache entry for %@ failed: %@
void SDAppleIDClearGSTokenCache(NSString * _Nullable __strong)_block_invoke
Saved Account '%@ for token remove
### Save Account %@ for token remove failed: %@
Removing all GS token cache entries
### Remove GS token cache entry failed: %d
void SDAppleIDGetGSToken(NSString * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, SDAppleIDGSTokenCompletion  _Nullable __strong)
Reusing cached altDSID and gstoken for %@
Reusing Account-cached altDSID and gstoken for %@
### aida_tokenForService failed altDSID=%d, accountToken=%d
### ACAccount <%@> doesn't respond to selector aida_tokenForService:
### account identifier is %@ for %@
Throttling request that's too soon after user cancel (%f)
Asking server for GS token for %@
void SDAppleIDGetGSToken(NSString * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, SDAppleIDGSTokenCompletion  _Nullable __strong)_block_invoke_2
AltDSID for %@: %@
GS token for %@: %@
### authenticateWithContext completion called with AltDSID = %@, token = %d
### Request GS token for %@ failed: %@
### Request GS token for %@ failed: %d
%@:%@
void SDAppleIDAuthenticateCertificateChain(NSArray * _Nonnull __strong, SDAppleIDVerifiedIdentity * _Nonnull __strong, dispatch_queue_t  _Nullable __strong, SDAppleIDCertificateChainAuthenticationHandler  _Nonnull __strong)_block_invoke
SFAppleIDVerifyCertificateChain failed with err=%#m
Account identifier check failed
BOOL SDAppleIDAuthenticateCertificateChainSync(NSArray * _Nonnull __strong, SDAppleIDVerifiedIdentity * _Nonnull __strong, NSError * _Nullable __autoreleasing * _Nullable)
SFAppleIDVerifyCertificateChainSync failed with err=%#m
ACAccount * _Nullable AccountForAppleID(NSString * _Nonnull __strong, OSStatus * _Nullable)
AccountForAppleID falling back to account aliases
### AccountForAppleID altDSIDForAccount:%@ returned nil
AccountForAppleID found account %@
0123456789abcdef
Files
invalid state value
v24@?0@"NSObject<SFAirDropClassroomTransferManagerProtocol>"8^B16
com.apple.sharing.classroom-transfer
transferManager
T@"SDAirDropTransferManager",&,N,V_transferManager
com.apple.Photos
PHOTO
VIDEO
TB,R,N,V_shouldExtractMediaFromPhotosBundles
SDAirDropController
T@"<SDAirDropControllerDelegate>",W,V_delegate
iconHash
hasIconHash
T@"NSData",&,N,V_iconHash
path
all interfaces
T@"NSURL",R,V_url
T@"NSString",R,V_name
T@"NSString",R,V_type
T@"NSString",R,V_domain
T@"NSString",&,V_path
hostName
T@"NSString",&,V_hostName
portNumber
T@"NSNumber",&,V_portNumber
T^{_DNSServiceRef_t=},R,V_service
Ti,R,V_error
T@"<SDBonjourResolverDelegate>",W,V_delegate
Attempt Cancelled
Watch Missing Encryption Key
Watch Not First Unlocked
Watch Missing IDS Device For BT UUID
Decryption failure
UNLOCK_WATCH_LOCKED_ON_WRIST
Ranging Timeout: Results Not Returned
Failed to Start AWDL
Mac Clamshelled Without Display
Watch Failed to Connect
Ranging Timeout
 (%ld)
UNLOCK_OUT_OF_RANGE
Watch using old protocol (version: %d)
Received AWDL Info message missing information (info: %@)
Received auth prompt response missing information: %@)
Exchange request step failed
Lock session invalid
Watch locked and off wrist
Watch off wrist
UNLOCK_WATCH_IN_SLEEP_MODE
Watch not in state to perform Auto Unlock
Auth prompts disabled on remote
UNLOCK_WATCH_WLAN_DISABLED
UNLOCK_WATCH_WIFI_DISABLED
Remote WiFi failure
Remote AKS session failed
Key exhange request is missing information (request: %@)
Failed to generate ranging token
Auth token transfer failed
AWDL network failed to start
v24@?0@"NSArray"8@"NSError"16
Auth token failed
Missing local IDS ID
Auth prompt request failed
Image data message failed
canceled
TB,N,V_canceled
oldWatch
TB,N,V_oldWatch
onlyRanging
TB,N,V_onlyRanging
foundPeer
TB,N,V_foundPeer
connected
TB,N,V_connected
lockedKeyBag
TB,N,V_lockedKeyBag
unlockSucceeded
TB,N,V_unlockSucceeded
deviceWasLocked
TB,N,V_deviceWasLocked
receivedAWDLInfo
TB,N,V_receivedAWDLInfo
receivedAuthPromptResponse
TB,N,V_receivedAuthPromptResponse
sendingConfirmation
TB,N,V_sendingConfirmation
sentExchangeResponse
TB,N,V_sentExchangeResponse
receivedExchangeRequest
TB,N,V_receivedExchangeRequest
supportsConfirmationACK
TB,N,V_supportsConfirmationACK
waitingForDisplayOrClamshell
TB,N,V_waitingForDisplayOrClamshell
sentImageData
TB,N,V_sentImageData
imageDataAlreadyCached
TB,N,V_imageDataAlreadyCached
needsNewImage
TB,N,V_needsNewImage
usingProxy
peerMacAddress
T@"NSData",C,N,V_peerMacAddress
sessionAuthToken
T@"SDUnlockSessionAuthToken",&,N,V_sessionAuthToken
watchRSSI
Ti,N,V_watchRSSI
displayCount
Tq,N,V_displayCount
configChangeType
Tq,N,V_configChangeType
displayTimer
T@"NSObject<OS_dispatch_source>",&,V_displayTimer
confirmationTimer
T@"NSObject<OS_dispatch_source>",&,V_confirmationTimer
awdlUp
TB,N,V_awdlUp
watchModelID
T@"NSString",&,N,V_watchModelID
watchBuildVersion
T@"NSString",&,N,V_watchBuildVersion
watchOSVersion
T@"NSString",&,N,V_watchOSVersion
discoveryDate
T@"NSDate",&,N,V_discoveryDate
connectionDate
T@"NSDate",&,N,V_connectionDate
firstSend
T@"NSDate",&,N,V_firstSend
exchageResponseDate
T@"NSDate",&,N,V_exchageResponseDate
displayOrClamshellWaitingDate
T@"NSDate",&,N,V_displayOrClamshellWaitingDate
confirmationSendDate
T@"NSDate",&,N,V_confirmationSendDate
btOverall
Td,N,V_btOverall
btBootstrap
Td,N,V_btBootstrap
awdlInfoExchange
Td,N,V_awdlInfoExchange
keyRequestExchange
Td,N,V_keyRequestExchange
tokenExchange
Td,N,V_tokenExchange
confirmation
Td,N,V_confirmation
peerFoundInterval
Td,N,V_peerFoundInterval
awdlTotal
Td,N,V_awdlTotal
completeExchange
Td,N,V_completeExchange
connectionTime
Td,N,V_connectionTime
connectionWaitTime
Td,N,V_connectionWaitTime
displayClamshellWaitTime
Td,N,V_displayClamshellWaitTime
bluetoothID
T@"NSUUID",&,N,V_bluetoothID
useProxy
TB,N,V_useProxy
wifiState
TB,N,V_wifiState
otherSessionCancel
TB,N,V_otherSessionCancel
otherProviderCancel
TB,N,V_otherProviderCancel
attemptTimedOut
TB,N,V_attemptTimedOut
chosenDevice
TB,N,V_chosenDevice
startDate
T@"NSDate",&,N,V_startDate
discoveryTime
Td,N,V_discoveryTime
proxyDiscoveryTime
Td,N,V_proxyDiscoveryTime
TQ,N,V_connectedBluetoothDevices
autoUnlockDevice
T@"SFAutoUnlockDevice",&,N,V_autoUnlockDevice
externalACMContext
T@"NSData",&,N,V_externalACMContext
imageData
T@"NSData",&,N,V_imageData
imageHash
T@"NSData",&,N,V_imageHash
Connections still active during dealloc
Attempt to set dispatch queue after activate has been called
Attempt to enqueue XPC block before activate has been called
SDXPCDaemonConnection
Subclass %@ must override %@
activeConnections
T@"NSSet",C,N,V_activeConnections
currentConnection
T@"NSXPCConnection",R,C,N
machServiceName
exportedInterface
T@"NSXPCInterface",R,N
remoteObjectInterface
hasSender
TB,N,V_sender
hasBytesPerSec
TQ,N,V_bytesPerSec
hasModel
T@"NSString",&,N,V_model
hasLegacy
TB,N,V_legacy
_TtC16DaemoniOSLibrary11OnceManager
onceList
_TtC16DaemoniOSLibrary13PushableTimer
noLaterThan
timer
identifier
offset element 
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1567.1/Daemon/SDCommonSwifty.swift
deinit for untracked 
v8@?0
OS_dispatch_source_timer
OS_dispatch_source
B32@0:8@16^@24
Making AirDrop hash DB folder if doesn't exist: %s
_TtC16DaemoniOSLibrary19SDAirDropHandlerIPA
B16@0:8
v16@0:8
@32@0:8@16@24
canHandleTransfer
TB,N,R
suitableContentsDescription
singleItemActionTitle
INSTALL_BUTTON_TITLE
v16@?0@"SFAirDropAction"8
IPA Handler: Failed to install app with error (%s) for URL %s
IPA Handler: Successful app install for URL %s
IPA Handler: AirDrop app installation not allowed
IPA Handler: isJustFiles is false
IPA Handler: File is not IPA, ignoring...
/Developer/Library/PreferenceBundles/Developer Settings.bundle
IPA Handler: Developer settings bundle exists? %{bool}d
IPA Handler: Transfer is me, can handle.
IPA Handler: Device running in store demo mode
_TtC16DaemoniOSLibrary26SDAirDropHashStoreInMemory
longToEntry
medToEntry
shorts
initialized
cnStore
storePreviouslyExisted
SDAirDropHashStoreInMemory is not validated
com.apple.sharing
SDAirDropHashStore
SDXPCHelperImageCache
UserDefaultsHashesDirtyKey
hashesAreCorrectKey
_TtC16DaemoniOSLibrary27SDAirDropContactHashManager
shared
T@"_TtC16DaemoniOSLibrary27SDAirDropContactHashManager",N,R
B24@0:8Q16
systemMonitor
hashManagerQ
bucket
contactStore
hashDB
activated
updateTimer
meCardInfo
numUnpersisted
v24@0:8@16
@24@0:8@16
B24@0:8@16
ContactHashableKeysToFetch
T@"NSArray",N,R
iOSDisplayContactKeysToFetch
macOSDisplayContactKeysToFetch
GeneralContactKeysToFetch
AirDropRandomHashUUIDKey
Not activated in _contactIDForEmailOrPhone. Bailing.
Store is not CDB. Bailing.
Error: failed to get _contactID because (%s)
Not activated in contactOrFakeMeCardWithIdentifier. Bailing.
Error: failed to get contactWithIdentifier because (%s)
v24@?0@"CNContact"8^B16
Failed to find contact with contact identifier %s, error: %s
Not activated in contactsContainsShortHashes. Bailing.
Error: failed to get contactsContainsShortHashes because (%s)
Not activated in hashesNeedUpdating. Bailing.
Error: failed to get contactIdentifierForMediumHashes because (%s)
Not activated in addressOrNumForHash. Bailing.
Error: failed to get addressOrNumForHash because (%s)
base64Decoded.count != hashes.count, base64 decode must have failed
Not activated in contactForCombinedHash. Bailing.
Error: failed to get contactForCombinedHash because (%s)
Not activated in updateMeCard. Bailing.
Error: failed to process meCard(%@) because (%s)
Adding meCard: %@
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1567.1/Daemon/SDAirDropContactHashManager.swift
DaemoniOSLibrary/SDAirDropContactHashManager.swift
canonicalizedNum should always encode to UTF8.
lowercase should always encode to UTF8.
forcePersistNow() called
Not activated in forcePersistNow. Bailing.
schedulePersist (force) failed in forcePersistNow(): %s
schedulePersist - Nothing to persist.
Creating new timer.
Reusing timer.
No force. Scheduling persist.
Force persisting...
Failed to persist in timer handler: %s
Persist timer fired.
Updating hashes failed, replacing with in-memory store (%s)
Updating hashes with in-memory store failed (%s)
hashDB destruction failed
_hashesNeedUpdating called. forceRebuild: %{bool}d
SDAirDropContactHashManager didSet hashDB.
com.apple.sharingd.airdrop.hashmanager
v24@?0@"CNChangeHistoryContactChange"8^B16
updateHashes finished.
Finished enumerateContactChangesWithKeys.
numUpdates: %lu
numDeletes: %lu
numAdds: %lu
numOther: %lu
Contacts db count: %ld
No Contacts in database
Change anchor: %@
regenerateEntireDB = %{bool}d
forceRebuild: %{bool}d
storeIsOld: %{bool}d
changesTruncated: %{bool}d
storeIsNew: %{bool}d
hashesFailedToUpdate: %{bool}d
Hash store should rebuild at: %s, lastMod: %s. timeToNextUpdate: %ldsec
updateHashes called
Skip meCard
Skip meCard change
Processing event: %@
Not handling contact change type: %s
Device has not been unlocked. Don't activate hash manager.
enableNewHashing = false, don't activate SDAirDropContactHashManager
com.apple.sharingd.forceAirDropHashPersist
SDAirDropContactHashManager activated
Unable to persist after recovering from crash %s. Forcing rebuild.
Possibly recovering from crash, so persist immediately
registerChangeHistoryClientIdentifier failed
SDAirDropContactHashManager _activate called
com.apple.sharing.SDAirDropContactHashManager.queue
SDAirDropContactHashManager init.
systemMonitor activated.
We're plugged into power, let's kick the wheels in case it's been enough time to fully rebuild the hash database.
firstUnlockHandler
load called twice on SDAirDropHashStoreCDB
deletingAllEntriesForContactID: %s
v32@?0@"NSData"8@"NSData"16^B24
persistNowIfNeeded - Nothing to persist.
Persisting finished.
persistNowIfNeeded - %lu changes to persist.
No (%s) hash store to destroy.
v24@?0@"NSData"8^B16
_TtC16DaemoniOSLibrary21SDAirDropHashStoreCDB
reader
anchors
stagedAdditions
stagedDeletedIDs
destroyed
DaemoniOSLibrary/SDAirDropHashStoreCDB.swift
initializeNewStore consuming anchors!
initializeNewStore: persisting.isEmpty - bailing
CNKeyDescriptor
NSObject
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
NSSecureCoding
supportsSecureCoding
NSCopying
@24@0:8^{_NSZone=}16
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
SDXPCHelperImageCacheLastUpdateBuild
XPCHelperImageCache
_TtC16DaemoniOSLibrary21SDXPCHelperImageCache
v20@0:8B16
v40@0:8^{CGImage=}16@24@32
^{CGImage=}32@0:8@16@24
q16@0:8
@16@0:8
imageForKey caught: %s
Query: `%s`
URL: %s
Result: %s
/Library/Caches/com.apple.xbs/Sources/Sharing_executables_Sim/Sharing-1567.1/Daemon/SDXPCHelperImageCache.swift
Failed to form valid lossyContactID, unexpected hash length: %s
Key should encode to UTF8.
Couldn't purge for bundle version change: %s
currentBuild(%s) != lastBuildUpdate(%s), purging.
com.apple.Sharing
Expect UserDefaults to be able to read SFPrefs
removeFileIfExists - couldn't delete %s:
removeFileIfExists - Doesn't exist: %s
setImage failed: %s
Set: `%s`
ensureCacheNotFull - numItems = %ld, limit = %ld, shouldPurge = %{bool}d
evictContactIdentifier remove-all failed: %s
Failed to remove specific contactID: %s, removing all
Removing URLs: %s
evictContactIdentifier: %s, compressed: %s
purgeAvatars failed: %s
purgeAvatars
clearCacheWithSync: %{bool}d
clearCacheWithSync failed: %s
Sharing_Additions
SDAirDropHandler
SDAirDropSession
SDAirDropClientDelegate
SDActivityRequestRecord
SDActivityEncryptionKeyRequestRecord
SDActivityPayloadRequestRecord
SDActivityPayloadReplyRecord
SDUnlockSetupCreateSecret
SDAutoUnlockPairingSession
SDUnlockSessionConfirmation
SDAirDropHandlerUnsupportedType
SDAirDropHandlerNewsLinks
SDUnlockSessionKeyExchangeResponse
SDAirDropHandlerKeynoteLiveLinks
SDAutoUnlockKeySession
SDAutoUnlockPairingKeySession
SDAutoUnlockAKSSession
SDActivityDeviceRecord
SDClassroomBrowser
SDAirDropPublisher
SDAutoUnlockPairingLockSession
SharingXPCHelperGroupContactIcon
SDAutoUnlockAuthPromptResponse
SDUnlockSessionKeyExchangeRequest
SDAirDropHandleriLifeLinks
SDNetworkBrowser
SDNodeBrowserDelegate
SharingXPCHelperImageItem
SDAirDropHandlerSharediCloudDocumentsLinks
SDAutoUnlockDecryptionFailed
NSCopying
SDAirDropHandlerWebLinks
SDAutoUnlockNotificationsManager
SDAirDropPeerMetric
SDStreamManager
NSNetServiceDelegate
SDSetupAgent
SDAirDropClient
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
SDAirDropHandlerPhoneLinks
SDAirDropTransferManagerProtocol
SFAirDropTransferObserverProtocol
SFAirDropTransferObserverDelegate
SDAirDropTransferManager
SDAirDropAlertManager
SFActivityAdvertiserProtocol
SDXPCDaemonProtocol
SFActivityAdvertiserClient
SDActivityAdvertiser
IDSContinuityDelegate
SDAirDropHandleriCloudDrive
SDAutoUnlockProxyTrigger
SDAirDropHandlerPodcastsLinks
SDActivityController
AWDSharingAirDropSessionInfo
SDAirDropStatus
SDAutoUnlockSessionManager
SDAutoUnlockTransportClient
SDAutoUnlockSessionDelegate
SDAutoFillAgent
SBSRemoteAlertHandleObserver
SDSharedRemoteTextInputDelegate
SFCombinedDevice
SFNotificationProxy
SDProxHandoffAgent
SDRapportBrowser
SDAutoUnlockAuthPromptImageData
SDAirDropServer
SDAirDropPublisherDelegate
SDAirDropHandleriBooksItems
SDAutoUnlockSessionConfirmationACK
SDAirDropListener
SDCompanionCommon
SDAirDropHandlerMapsLinks
SDAirDropHandlerNotes
SDAirDropHandlerGenericLinks
Debug
SDAirDropHandlerFindMyFriendsLinks
Unlock_Additions
SDUnlockXPCSession
SFUnlockProtocol
SDAutoUnlockSessionManagerObserver
SDAirDropReceiveManager
SDAirDropListenerDelegate
SDAirDropAlertManagerDelegate
SDUnlockDisable
SDAirDropHandlerCalendarEvents
SDAutoUnlockProxySession
SDAutoUnlockAWDLInfo
SharingXPCHelperContactIcon
NSSecureCoding
NSCoding
SDAirDropHandlerPDFs
SDAutoUnlockKeyDeviceLocked
SDAirDropHandlerVoiceMemos
SDAirDropHandlerPlaygroundItems
SDNetworkResolver
SDBonjourResolverDelegate
SDAirDropHandlerWalletItems
SDUnlockSetupCreateRecord
SDAirDropHandlerContacts
SDNetworkOperation
SDAirDropServerDelegate
SDAirDropConnectionDelegate
SDAirDropSessionDelegate
SDAirDropControllerDelegate
SDAirDropStatusDelegate
SDAirDropInformationDelegate
SDNetworkResolverDelegate
SDNetworkEjecterDelegate
SDAutoUnlockIconTransferStore
SDWorkgroupBrowser
SDAppleIDDatabaseManager
SDXPCSession
SDConnectionManagerDelegate
SDRemoteInteractionAgent
SDSharedRemoteTextInputClient
SDAirDropInformation
SDServerBrowser
SDBonjourBrowserDelegate
SDWindowsBrowserDelegate
SDAirDropHandlerGenericFiles
SDAppleIDServerTask
SDConnectionManager
SFCompanionXPCManagerProtocol
SDCompanionStreamDelegate
SDUnlockXPCSesssionDelegate
SDCompanionPublisherProtocol
SDUnlockSetupRequest
SDAirDropCompressor
SDAutoUnlockSessionWrapper
SDAutoUnlockEscrowSecretInfo
SDAirDropHandlerCredentialLinks
SDAutoUnlockAKSManager
AWDSharingAutoUnlockAttempt
SDAirDropHandleriTunesULinks
SDAppleIDURLResponse
SDAirDropHandlerProfiles
SDActivityPayloadManager
IDSServiceDelegate
SDAirDropHandleriWorkLinks
SDAppleIDIdentityRequest
SDAirDropHandlerAppStoreLinks
SDAirDropHandleriCloudFamilyLinks
SDNetworkEjecter
SharingDaemon
SDNetworkBrowserDelegate
NSObject
SDNetworkOperationDelegate
SDBonjourBrowser
SDAirDropFileZipper
SFXPCInterface
SDXPCInterface
SDXPCAppleIDAuthInterface
SDXPCClientInterface
SDXPCCoordinatedAlertsInterface
SDXPCDeviceDiscoveryInterface
SDXPCDiagnosticsInterface
SDXPCNFCTagReaderInterface
SDXPCProximityClientInterface
SDXPCRemoteAutoFillSessionInterface
SDXPCRemoteInteractionSessionInterface
SDXPCServiceInterface
SDXPCSessionInterface
SDXPCUserNotificationInterface
SDXPCServer
NSXPCListenerDelegate
SDXPCConnection
SDActivityKey
SDActivityEncryptionKey
SDActivityDecryptionKey
SDActivityEncryptionManager
SDStreamHandler
SDAutoUnlockLTKInfo
SDAppleIDMutableURLRequest
AWDSharingSheetActivityType
SDNotificationManager
UNUserNotificationCenterDelegate
SDWindowsBrowser
SDAirDropHandlerVoiceMails
SDAutoUnlockTransport
SDNodeBrowser
SDSharePointBrowserDelegate
SDAppleIDVerifiedIdentity
SDAppleIDAgent
APSConnectionDelegate
SDAutoUnlockWiFiManager
CLLocationManagerDelegate
SDNearbyIDSAgent
SDServiceManager
SFCompanionServiceManagerProtocol
SDAirDropLogger
SDDomainBrowser
SDManagedBrowser
AWDSharingCoordinatedAlertResult
SDAutoUnlockAuthSession
SDUnlockSetupSessionCreated
SDAirDropConnection
SDAirDropFileZipperDelegate
SDAutoUnlockStartAdvertising
SFContinuityScannerProtocol
SFContinuityScannerClient
SDActivityScanner
SDAirDropHandlerFailedMixedTypes
AWDSharingAirDropPeerDiscoveredInfo
SDAutoUnlockRangingPeer
SDAutoUnlockWiFiRequest
SDConnectedBrowser
AWDSharingCMS2ServerTaskResponse
SharingXPCHelperProtocol
SDXPCHelperConnection
SDCompanionStream
NSStreamDelegate
NSNetServiceBrowserDelegate
SDStreamHandlerDelegate
SDAirDropHandlerFailed
SDAutoUnlockSuggestionManager
SDAutoUnlockNotificationsObserver
AWDSharingAutoUnlockSetup
SDAutoUnlockMacIconCache
SDStatusMonitor
MCProfileConnectionObserver
SDAirDropHandleriBooksLinks
SDAirDropHandlerMixedTypes
SDUnlockSessionAuthToken
SDAirDropHandleriTunesStoreLinks
SDNearbyAgent
SDBLEIdentifiedDevice
SDSession
SDAirDropClassroomTransferManagerProtocol
SFAirDropClassroomTransferManagerProtocol
SFAirDropClassroomTransferDelegate
SDAirDropClassroomTransferManager
SDAirDropHandlerPhotos
SDAirDropController
SDAutoUnlockAuthPromptRequest
SDBonjourResolver
SDAutoUnlockLockSession
R!H+
SDXPCDaemon
NSXPCConnectionDelegate
AWDSharingAirDropTransferResult
@16@0:8
B24@0:8@16
v48@0:8@16@24Q32^v40
v40@0:8@16@24^v32
@"SFAirDropTransfer"
v40@0:8@"SDAirDropClient"16q24@"NSDictionary"32
v24@0:8@"NSProgress"16
@40@0:8^{__SFNode=}16@24@32
v28@0:8^{__SFNode=}16B24
v32@0:8q16d24
v48@0:8@16@24@32^v40
{?=[8I]}16@0:8
v48@0:8{?=[8I]}16
@"SDAirDropClient"
@"<SDAirDropSessionDelegate>"
{?="val"[8I]}
{?="sessionID"b1"version"b1}
@28@0:8@16S24
@40@0:8@16S24B28@32
@"<SDAutoUnlockSessionDelegate>"
@"SDAutoUnlockAKSSession"
{?="sessionID"b1"version"b1"success"b1"supportsACK"b1}
{?="sessionID"b1"version"b1"keyFailed"b1}
@"SDAirDropHandlerWebLinks"
@"SDUnlockSessionKeyExchangeResponse"
@"SDAutoUnlockMacIconCache"
v52@0:8@16@24@32I40@44
@"SDUnlockSetupRequest"
@52@0:8@16@24q32B40@44
@60@0:8@16@24q32B40@44@52
@56@0:8@16@24q32B40@44B52
@72@0:8@16@24q32B40@44@52B60@64
B32@0:8@16^@24
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
{?=CCCCCCCCCCCCCC}16@0:8
@"IDSDevice"
@32@0:8@16^{__SecIdentity=}24
v24@0:8^{?=qi}16
^{__CFNetService=}
@"<SDAirDropPublisherDelegate>"
@"SDUnlockSetupSessionCreated"
{?="errorCode"b1"version"b1"needsImageData"b1}
{?="errorCode"b1"sessionID"b1"version"b1"usingRecord"b1}
v44@0:8@"SDNodeBrowser"16^{__SFNode=}24@"NSString"32i40
@32@0:8@16^{__SFNode=}24
i40@0:8^{__SFNode=}16@24Q32
^{__SFNode=}16@0:8
@24@0:8^{__SFNode=}16
i24@0:8^{__SFNode=}16
^{__SFNode=}
^{__CFDictionary=}
@"<SDNetworkBrowserDelegate>"
@40@0:8@16^{CGImage=}24@32
@24@0:8^{_NSZone=}16
{?="errorCode"b1"version"b1}
v24@0:8:16
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"NSNetService"
@20@0:8i16
B20@0:8C16
v36@0:8i16@20@28
v28@0:8I16@20
@"<PBSMediaRemoteServiceInterface>"
@"SFPINPairSession"
@"NEVPNConnection"
@"SFDeviceRepairService"
@"SFDeviceRepairSession"
@"SFWiFiHealthMonitor"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@36@0:8^{__SFNode=}16@24B32
v32@0:8q16^v24
B24@0:8^^{__CFError}16
v32@0:8^{__SecTrust=}16@?24
^{__SecKey=}16@0:8
B24@0:8^{__CFData=}16
^{__SecTrust=}16@0:8
@24@0:8^{__CFURL=}16
@"NSURLResponse"
@"NSURLSessionUploadTask"
^{CGImage=}
@"SDAirDropPeerMetric"
@"<SDAirDropClientDelegate>"
v32@0:8@"SFAirDropTransfer"16@"SFAirDropAction"24
v24@0:8@"SFAirDropTransfer"16
v32@0:8@"NSString"16@"NSDictionary"24
@"NSObject<SDAirDropAlertManagerDelegate>"16@0:8
v24@0:8@"NSObject<SDAirDropAlertManagerDelegate>"16
v40@0:8@16Q24Q32
v36@0:8Q16@24B32
v40@0:8Q16@24B32B36
@"NSObject<SDAirDropAlertManagerDelegate>"
v24@0:8@?<v@?>16
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SFPeerDevice"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSSet"@"NSError">24
v40@0:8@"NSData"16@"NSDictionary"24@?<v@?@"NSError">32
v48@0:8@16@24@32@?40
v40@0:8@16@24@32
v48@0:8@"NSData"16@"NSString"24@"SFPeerDevice"32@?<v@?@"NSUUID"@"NSData"@"NSError">40
v40@0:8@"NSUUID"16@"SFPeerDevice"24@"NSError"32
v24@0:8@"NSSet"16
v32@0:8@16q24
v48@0:8@16q24@32@40
v40@0:8@16@24q32
v48@0:8@16@24q32@40
v24@0:8@"IDSContinuity"16
v32@0:8@"IDSContinuity"16q24
v40@0:8@"IDSContinuity"16q24@"NSError"32
v48@0:8@"IDSContinuity"16q24@"NSData"32@"NSUUID"40
v40@0:8@"IDSContinuity"16@"NSUUID"24q32
v48@0:8@"IDSContinuity"16@"NSUUID"24q32@"NSError"40
@"SDStatusMonitor"
@"IDSContinuity"
@"NSTimer"
@"NSObject<OS_os_transaction>"
@"NSData"
@"SFAirDropAction"
@"NSArray"
{?="startTimestamp"b1"timestamp"b1"firstDiscovery"b1"maxPeersDiscovered"b1"sessionDuration"b1"totalPeersDiscovered"b1"transfersCompleted"b1"transfersInitiated"b1"legacyMode"b1}
@"<SDAirDropStatusDelegate>"
v44@0:8@16@24S32@36
v24@0:8@"SDAutoUnlockTransport"16
v44@0:8@"SDAutoUnlockTransport"16@"NSData"24S32@"NSString"36
v48@0:8@"SDAutoUnlockTransport"16@"NSUUID"24@"NSString"32@"NSData"40
v32@0:8@"SDAutoUnlockTransport"16@"NSString"24
v40@0:8@"SDAutoUnlockTransport"16@"NSData"24@"NSString"32
v24@0:8@"SDAutoUnlockPairingSession"16
v32@0:8@"SDAutoUnlockPairingSession"16@"NSError"24
v28@0:8q16B24
v60@0:8q16@24B32@36@44@?52
v20@0:8I16
@24@0:8B16B20
q24@0:8B16B20
B20@0:8B16
@?16@0:8
@"NSHashTable"
@"SDAutoUnlockSuggestionManager"
@"SFDeviceDiscovery"
@"SFAutoUnlockDevice"
@"NSError"
@"SDAutoUnlockIconTransferStore"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v32@0:8Q16@24
v32@0:8Q16@"NSDictionary"24
i48@0:8@16@24@32@40
i32@0:8@16@24
@"SBSRemoteAlertHandle"
@"SFRemoteAutoFillSession"
@"SDNotificationManager"
@"SFBLEScanner"
@"SFRemoteAutoFillService"
@"SFSiriRemoteMonitor"
@"SFDevice"
B20@0:8i16
@"RPCompanionLinkDevice"
@"SFBubbleEstimator"
@"SFNotificationInfo"
@"TURoute"
v40@0:8@16@24B32B36
v36@0:8@16@24B32
B28@0:8i16@20
i44@0:8@16@24@32B40
i40@0:8@16@24@32
Q24@0:8@16
@"SFProxHandoffService"
@"SFNotificationProxy"
@"SFCombinedDevice"
v32@0:8@16^{__SFNode=}24
^{__SFNode=}40@0:8@16@24@32
@"RPPeopleDiscovery"
{?="version"b1"finalMessage"b1}
v32@0:8@"SDAirDropPublisher"16@"NSDictionary"24
v24@0:8^{_CFHTTPServerConnection=}16
@"CUCoalescer"
^{_CFHTTPServer=}
@"SDAirDropPublisher"
@"SDAirDropInformation"
@"<SDAirDropServerDelegate>"
{?="version"b1"success"b1}
@"SDNetworkOperation"
@"<SDAirDropListenerDelegate>"
@"LSAppLink"
v44@0:8@16B24@28@?36
v24@0:8@?<v@?@"NSSet"@"NSError">16
v40@0:8@"SFAutoUnlockDevice"16@"NSString"24@"<SFUnlockClientProtocol>"32
v24@0:8@"SFAutoUnlockDevice"16
v32@0:8@"SFAutoUnlockDevice"16@?<v@?B@"NSError">24
v24@0:8@"<SFUnlockClientProtocol>"16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v44@0:8@"NSString"16B24@"NSString"28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SFUnlockState"@"NSError">24
v32@0:8@"SDAutoUnlockSessionManager"16@"SFAutoUnlockDevice"24
v40@0:8@"SDAutoUnlockSessionManager"16@"SFAutoUnlockDevice"24@"NSError"32
v44@0:8@"SDAutoUnlockSessionManager"16@"NSDictionary"24@"NSError"32B40
B24@0:8@?16
@"<SDUnlockXPCSesssionDelegate>"
@"<SFUnlockClientProtocol>"
v32@0:8@"SDAirDropListener"16@"NSError"24
v32@0:8@"SDAirDropListener"16@"SDNetworkOperation"24
v32@0:8@"SDAirDropListener"16@"NSDictionary"24
v44@0:8@16@24@32B40
v40@0:8@16@24Q32
v44@0:8@16@"NSString"24@"NSURL"32B40
v40@0:8@16@"NSString"24Q32
@"SDAirDropListener"
@"SDAirDropTransferManager"
@"SDAirDropClassroomTransferManager"
{?="version"b1}
@"SFBLEDevice"
{?="errorCode"b1"version"b1"authPrompt"b1"supportsConfirmationACK"b1"useToken"b1}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24q32@40
@48@0:8@16^{CGImage=}24q32@40
^{CGImage=}16@0:8
v24@0:8@"SDBonjourResolver"16
@"SDBonjourResolver"
@"<SDNetworkResolverDelegate>"
v40@0:8@"SDAirDropServer"16q24@"NSDictionary"32
v40@0:8@"SDAirDropConnection"16q24@"NSDictionary"32
v40@0:8@"SDAirDropSession"16q24@"NSDictionary"32
v32@0:8@"SDAirDropController"16@"NSDictionary"24
v32@0:8@"SDAirDropStatus"16@"NSDictionary"24
v32@0:8@"SDAirDropInformation"16@"NSDictionary"24
v40@0:8@"SDNetworkResolver"16q24@"NSDictionary"32
v40@0:8@"SDNetworkEjecter"16q24@"NSDictionary"32
v32@0:8^v16@24
r^v24@0:8@16
@"<SDNetworkOperationDelegate>"
v28@0:8B16@20
@"SFAppleIDAccount"
v24@0:8@"SDConnectionManager"16
v28@0:8Q16B24
@"SFRemoteTextInputClient"
B24@0:8^v16
@"<SDAirDropInformationDelegate>"
v24@0:8@"SDBonjourBrowser"16
v24@0:8@"SDWindowsBrowser"16
v40@0:8@16@24^{__SFNode=}32
@"NSOperationQueue"
@"SDAirDropHandleriCloudDrive"
@"SDAirDropHandler"
@"LSBundleProxy"
@40@0:8q16@24@32
v36@0:8@16@24i32
v28@0:8@16i24
v36@0:8@16i24@?28
v40@0:8q16q24q32
@32@0:8@16^i24
@"NSURLSession"
@"NSURLRequest"
v40@0:8@"NSString"16@"<SFCompanionServiceManagerClient>"24@?<v@?@"<SFCompanionServiceManagerProtocol>"@"NSString"@"NSString"@"NSString"@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSFileHandle"@"NSError">24
v24@0:8@?<v@?@"<SFUnlockProtocol>"@"NSError">16
v48@0:8@"SDCompanionStream"16@"SFCompanionService"24@"NSFileHandle"32@?<v@?B>40
v24@0:8@"SDCompanionStream"16
v24@0:8@"SDUnlockXPCSession"16
v40@0:8@"SDStreamManager"16@"SFCompanionService"24@"SDStreamHandler"32
v48@0:8@"SDStreamManager"16@"SFCompanionService"24@"NSFileHandle"32@?<v@?B>40
@"<SDConnectionManagerDelegate>"
@"SDServiceManager"
{?="sessionID"b1"version"b1"remoteNeedsLTK"b1}
@32@0:8^{__CFReadStream=}16^{__CFWriteStream=}24
B40@0:8*16q24^{__CFWriteStream=}32
B40@0:8*16q24^{__CFReadStream=}32
v36@0:8*16q24B32
{?="aksSessionID"b1"awdlCacheID"b1"messageType"b1"version"b1"useProxy"b1}
@"SFSharablePassword"
@36@0:8@16B24^q28
@28@0:8@16B24
@32@0:8@16B24B28
@36@0:8@16B24@28
B56@0:8@16@24^@32^@40^@48
@60@0:8@16@24@32@40B48^q52
i36@0:8@16@24B32
B40@0:8@16@24@32
B56@0:8@16@24@32@40@48
@20@0:8B16
B40@0:8@16@24^B32
v36@0:8@16B24B28B32
B28@0:8@16B24
v72@0:8@16@24@32@40@48@56@64
B44@0:8@16@24@32B40
v32@0:8@16B24B28
{?="timeIntervalSinceLastDarkWake"b1"timestamp"b1"attemptType"b1"awdlBringUpTime"b1"awdlPeerDiscoveryTime"b1"awdlRangingTime"b1"bleAWDLInfoExchangeTime"b1"bleAuthTokenExchangeTime"b1"bleConfirmationTime"b1"bleKeyConnectionTime"b1"bleKeyDiscoveryTime"b1"bleKeyRequestExchangeTime"b1"bleProxyConnectionTime"b1"bleProxyDiscoveryTime"b1"bluetoothConnectedDevices"b1"cancelReason"b1"cancelTime"b1"clamshellWaitTime"b1"displayWaitTime"b1"distance"b1"errorCode"b1"errorType"b1"flags"b1"keyBluetoothRSSI"b1"lastSleepType"b1"proxyBluetoothRSSI"b1"timeIntervalSinceLastWake"b1"totalUnlockTime"b1"clamshellClosed"b1"externalDisplay"b1"unlockSucceeded"b1"usingProxy"b1"usingTool"b1"withinRange"b1}
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8@16@24d32
v56@0:8@16@24@32q40@?48
v56@0:8@16@24@32@40@?48
v44@0:8@16@24@32i40
v36@0:8@16B24@28
v40@0:8i16@20B28d32
@"IDSService"
@"RPCompanionLinkClient"
@"NSMutableArray"
v40@0:8^{__SecCertificate=}16^{__SecCertificate=}24B32i36
@40@0:8@16@24@32
^{__SecKey=}
@"<SDNetworkEjecterDelegate>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v44@0:8@16^{__SFNode=}24@32i40
v44@0:8@"SDNetworkBrowser"16^{__SFNode=}24@"NSString"32i40
v40@0:8@16q24@32
v40@0:8@"SDNetworkOperation"16q24@"NSDictionary"32
v16@0:8
@24@0:8@16
v32@0:8@16@24
v24@0:8@16
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@0:8
@"NSMutableSet"
@"SDActivityAdvertiser"
@"SDActivityScanner"
@"SDAirDropReceiveManager"
@"SDAutoUnlockSessionManager"
@"SDActivityEncryptionManager"
@"SDNearbyIDSAgent"
@"NSMutableDictionary"
@"SDPairedDeviceAgent"
@"NSObject<OS_xpc_object>"
@"SDActivityPayloadManager"
@"SDUnlockKeyManager"
@"SDUnlockLockManager"
@"SDXPCServer"
@"SDXPCHelperConnection"
I20@0:8I16
v44@0:8@16@24@32I40
@44@0:8@16@24@32S40
v52@0:8^^{_DNSServiceRef_t}16@24@32@40S48
v48@0:8@16@24@32S40I44
v44@0:8@16@24@32S40
v28@0:8@16S24
^{__SFNode=}24@0:8@16
v32@0:8@16^{__CFDictionary=}24
v24@0:8^{__SFNode=}16
B20@0:8I16
v52@0:8I16I20i24r*28r*36r*44
@36@0:8@16r^v24S32
v36@0:8r*16S24r^v28
v48@0:8I16i20r*24S32S36r^v40
@"<SDBonjourBrowserDelegate>"
v24@0:8^{__CFReadStream=}16
^{__CFReadStream=}16@0:8
@32@0:8q16d24
@36@0:8r*16B24^{__CFURL=}28
@24@0:8r*16
v40@0:8r*16i24q28i36
v24@0:8r*16
q24@0:8^{__CFURL=}16
^{__CFArray=}32@0:8^{__CFURL=}16^{__CFURL=}24
B40@0:8^{__CFURL=}16^{__CFURL=}24^{_BOMBom=}32
v40@0:8^{_BOMBom=}16^{__CFURL=}24^{__CFURL=}32
B52@0:8^{_BOMBom=}16^{__CFURL=}24^{__CFURL=}32@40B48
v32@0:8^{__CFURL=}16^{__CFURL=}24
^{_BOMBom=}
^{_BOMCopier=}
^{__CFWriteStream=}
@"SDAirDropCompressor"
@"<SDAirDropFileZipperDelegate>"
v28@0:8B16@?20
v24@0:8I16i20
v28@0:8@16I24
v40@0:8@16q24q32
v36@0:8C16@20@28
v28@0:8C16@20
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@"SFDevice"16
v28@0:8@"SFDevice"16I24
v24@0:8@"NSString"16
v32@0:8@"NSString"16q24
v40@0:8@"NSString"16q24q32
v24@0:8@"NSDictionary"16
v24@0:8@"SFRemoteTextSessionInfo"16
v24@0:8@"NSError"16
v32@0:8@"NSUUID"16@"NSError"24
v24@0:8@"SFEventMessage"16
v36@0:8C16@"NSData"20@"NSUUID"28
v24@0:8@"SFRequestMessage"16
v24@0:8@"SFResponseMessage"16
v28@0:8C16@"NSData"20
v32@0:8@"NSString"16@?<v@?@"SFAppleIDAccount"@"NSError">24
v24@0:8@?<v@?@"SFAppleIDAccount"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"SFAppleIDPersonInfo"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v28@0:8C16@?20
v36@0:8@16I24@?28
v28@0:8i16@?20
v32@0:8Q16@?24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSData"@"NSError">16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"NSString"16@"NSUUID"24@?<v@?@"NSString"B@"NSError">32
v32@0:8@"SFContactInfo"16@?<v@?@"SFContactInfo"@"NSError">24
v32@0:8@"SFClientGetDeviceAssetsParams"16@?<v@?@"SFClientGetDeviceAssetsResults"@"NSError">24
v32@0:8@"SFPeopleSuggesterParams"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v28@0:8C16@?<v@?@"NSError">20
v36@0:8@"SFDevice"16I24@?<v@?@"NSError">28
v24@0:8@?<v@?@"NSError">16
v28@0:8i16@?<v@?@"NSError">20
v40@0:8@"SFDevice"16@"NSUUID"24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?I@"NSError">16
v32@0:8Q16@?<v@?B>24
v32@0:8@"SFCoordinatedAlertRequest"16@?<v@?@"NSError"B@"NSDictionary">24
v32@0:8@"SFDeviceDiscovery"16@?<v@?@"NSError">24
v24@0:8@"SFDeviceDiscovery"16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSString">24
v40@0:8@"NSString"16@"SFBLEDevice"24@?<v@?@"NSError">32
v24@0:8@"SFBLEDevice"16
v40@0:8@"NSXPCListenerEndpoint"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"SFProximityClient"16@?<v@?@"NSError">24
v24@0:8@"SFProximityClient"16
v44@0:8@"SFNotificationInfo"16@"NSString"24B32@?<v@?@"NSError">36
v40@0:8@"SFNotificationInfo"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"SFRemoteAutoFillSessionHelper"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@"NSError"32
v24@0:8@"NSUUID"16
v32@0:8@"SFRemoteInteractionSession"16@?<v@?@"NSError">24
v32@0:8@"SFService"16@?<v@?@"NSError">24
v24@0:8@"SFService"16
v32@0:8@"SFSession"16@?<v@?@"NSError">24
v24@0:8@"SFUserAlert"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8^@16
@"SDAppleIDAgent"
@"SDAutoFillAgent"
@"NSCountedSet"
@"SDNearbyAgent"
@"SDRemoteInteractionAgent"
@"SDSharedRemoteTextInputClient"
@"SDProxHandoffAgent"
@"SDSetupAgent"
@"NSXPCInterface"
@"NSXPCListener"
i40@0:8@16^B24@32
i32@0:8@16^B24
@"SFRemoteAutoFillSessionHelper"
@"SFCoordinatedAlertRequest"
@"SFUserAlert"
@"SFProximityClient"
@"SFRemoteInteractionSession"
@"SFService"
@"SFSession"
@"NSXPCConnection"
S16@0:8
v20@0:8S16
@"NSUUID"
@"NSMutableData"
C36@0:8[10C]16[2C]24C32
B40@0:8[10C]16[2C]24C32C36
v36@0:8[10C]16C24@?28
B32@0:8@16@24
@"SDActivityEncryptionKey"
@20@0:8I16
@"<SDStreamHandlerDelegate>"
{?="version"b1"signout"b1}
{?="timestamp"b1}
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v36@0:8@16@24I32
v40@0:8@16@24I32B36
@"UNUserNotificationCenter"
@"SDBonjourBrowser"
@"<SDWindowsBrowserDelegate>"
v60@0:8@16@24S32@36@44@?52
v68@0:8@16@24S32@36@44@52@?60
@72@0:8@16@24S32@36@44B52@56@?64
@"<SDAutoUnlockTransportClient>"
@"NSMapTable"
v28@0:8@"SDSharePointBrowser"16i24
@48@0:8^{__SFNode=}16@24Q32@40
v32@0:8^{__SFNode=}16^{__SFNode=}24
@40@0:8@16Q24^B32
@"SDDomainBrowser"
@"SDManagedBrowser"
@"SDClassroomBrowser"
@"SDConnectedBrowser"
@"SDWorkgroupBrowser"
@"SDSharePointBrowser"
@"SDRapportBrowser"
@"<SDNodeBrowserDelegate>"
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
^{__SecIdentity=}24@0:8@16
v32@0:8q16@24
v64@0:8@16@24@32@40@48@?56
i24@0:8@16
v24@0:8d16
@40@0:8@16@24^@32
@"SDAppleIDDatabaseManager"
@"NSObject<OS_dispatch_queue>"
@"SDAppleIDIdentityRequest"
@"SDAppleIDServerTask"
@"APSConnection"
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"SDAutoUnlockWiFiRequest"
@"CLLocationManager"
v24@0:8@"SFCompanionService"16
@"<SFCompanionServiceManagerClient>"
{?="timestamp"b1"activityLevel"b1"eventType"b1"otherDevices"b1"bestIsMe"b1"skipScanPhoneCall"b1"skipScanVeryActive"b1}
{?="errorCode"b1"failureReasons"b1"sessionID"b1"version"b1"watchNewLTKSyncStatus"b1"watchOldLTKSyncStatus"b1"ltkSyncing"b1}
v40@0:8@16q24^v32
v40@0:8@"SDAirDropFileZipper"16q24^v32
@24@0:8^{_CFHTTPServerConnection=}16
v24@0:8^{__CFError=}16
v32@0:8^v16^{__CFString=}24
v32@0:8^{__CFDictionary=}16^{__CFString=}24
v36@0:8^{_CFHTTPServerRequest=}16^{__CFString=}24B32
B24@0:8^{__SFNode=}16
v32@0:8^{__CFReadStream=}16Q24
B32@0:8^{_CFHTTPServerRequest=}16^@24
v40@0:8^{_CFHTTPServerRequest=}16q24^{__CFData=}32
B24@0:8^{_CFHTTPServerRequest=}16
v24@0:8^{_CFHTTPServerRequest=}16
q24@0:8^{_CFHTTPServerResponse=}16
v32@0:8^{_CFHTTPServerResponse=}16^{_CFHTTPServerRequest=}24
v24@0:8^{_CFHTTPServerResponse=}16
@"NSURL"
@"NSProgress"
^{__SecTrust=}
^{__CFReadStream=}
@"SDAirDropFileZipper"
@"NSObject<OS_dispatch_semaphore>"
^{_CFHTTPServerRequest=}
^{_CFHTTPServerConnection=}
@"<SDAirDropConnectionDelegate>"
v24@0:8Q16
v56@0:8@"NSString"16@"NSData"24@"NSString"32q40@?<v@?@"NSData"@"NSError">48
v24@0:8@"SFActivityAdvertisement"16
v24@0:8@"SFPeerDevice"16
v44@0:8@16@24B32@?36
@"NSObject<OS_dispatch_source>"
{?="timestamp"b1"awdlVersion"b1"bluetoothDiscovery"b1"bonjourDiscovery"b1"bonjourResolveComplete"b1"bonjourTXTRecordDiscovery"b1"errorCode"b1"identityQueryComplete"b1"platform"b1"rssi"b1"tcpConnectionComplete"b1"tlsHandshakeComplete"b1"totalDiscovery"b1"verifiableIdentity"b1}
@"_CLRangingPeer"
@"SDAutoUnlockRangingPeer"
v40@0:8^{__SFNode=}16@24@32
^{__CFBag=}
{?="timestamp"b1"errorCode"b1"httpStatusCode"b1"idmsEnv"b1"type"b1}
v52@0:8@16q24d32B40@?44
v56@0:8@16@24Q32B40B44@?48
v32@0:8q16@?24
v24@0:8@?<v@?@"NSSecurityScopedURLWrapper">16
v52@0:8@"CNContact"16q24d32B40@?<v@?@"NSData"B>44
v52@0:8@"NSArray"16q24d32B40@?<v@?@"NSArray"B>44
v40@0:8@"NSData"16@"CNContact"24@?<v@?@"NSURL">32
v52@0:8@"NSArray"16q24d32B40@?<v@?@"NSArray">44
v40@0:8@"NSArray"16@"UIColor"24@?<v@?@"NSArray">32
v56@0:8@"NSString"16@"UIColor"24Q32B40B44@?<v@?@"NSData">48
v40@0:8@"NSString"16@"UIColor"24@?<v@?@"NSData">32
v32@0:8q16@?<v@?@"NSData">24
v24@0:8@"UISUIActivityViewControllerConfiguration"16
@52@0:8@16q24d32B40^B44
@60@0:8@16@24q32d40B48^B52
@48@0:8@16q24d32B40B44
@44@0:8@16q24d32B40
@36@0:8@16@24B32
^{CGImage=}40@0:8@16@24@32
v60@0:8@16q24@32@40B48q52
^{CGImage=}52@0:8@16@24Q32B40B44B48
^{CGImage=}32@0:8@16@24
^{CGImage=}24@0:8q16
@56@0:8@16@?24@?32@?40@48
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"UISUIActivityViewControllerConfiguration"
v32@0:8@"NSStream"16Q24
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v32@0:8@"SDStreamHandler"16@"NSData"24
v24@0:8@"SDStreamHandler"16
v32@0:8@"SDStreamHandler"16@"NSError"24
v28@0:8@"SDStreamHandler"16B24
i24@0:8i16i20
@"NSFileHandle"
@"<SDCompanionStreamDelegate>"
@"SDStreamHandler"
@"NSNetServiceBrowser"
@"NSInputStream"
@"NSOutputStream"
{?="timeIntervalSinceLastWatch"b1"timestamp"b1"errorCode"b1"errorType"b1"flags"b1"keyRequestExchangeTime"b1"macNewLTKSyncStatus"b1"macOldLTKSyncStatus"b1"messageTimeout"b1"responseTimeout"b1"tokenExchangeTime"b1"watchNewLTKSyncStatus"b1"watchOldLTKSyncStatus"b1"keyDeviceLocked"b1"messageTimeoutFromServer"b1"receivedSetupACK"b1"receivedTokenACK"b1"responseTimeoutFromServer"b1"setupRetry"b1"setupSucceeded"b1"upsell"b1"watchExistedInUnlockList"b1}
d16@0:8
q16@0:8
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v20@0:8B16
B32@0:8@16o^@24
v32@0:8^{__SecCertificate=}16@24
@24@0:8^{__SecCertificate=}16
^{__SecCertificate=}24@0:8@16
^{__SecCertificate=}16@0:8
^{__SecIdentity=}16@0:8
v24@0:8@?16
v56@0:8@16@24@32@40@48
@32@0:8@16@24
v32@0:8^B16^B24
q24@0:8@16
C16@0:8
I16@0:8
i16@0:8
v28@0:8B16B20i24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
v32@0:8r*16I24i28
v24@0:8q16
v20@0:8i16
v28@0:8I16^v20
B40@0:8^{__SCPreferences=}16^@24^@32
@24@0:8q16
@"NSNumber"
@"NSString"
@"CNContactStore"
^{__CFRunLoopSource=}
@"SDAirDropServer"
@"NSDictionary"
^{__SecCertificate=}
^{__SecIdentity=}
@"NSMutableString"
^{_DNSServiceRef_t=}
^{IONotificationPort=}
^{__IOPMConnection=}
^{__SCPreferences=}
@"CUSystemMonitor"
@"CNContact"
@"NSDate"
@"NSSet"
{?="errorCode"b1"sessionID"b1"version"b1}
C32@0:8^B16^B24
C20@0:8C16
i44@0:8C16r*20r*28@36
i40@0:8@16@24^B32
i44@0:8C16C20@24@32B40
@28@0:8C16@20
q32@0:8q16@24
I24@0:8@16
v36@0:8@16q24I32
v32@0:8q16q24
C44@0:8C16@20@28@36
@32@0:8@16^B24
v40@0:8C16C20@24@32
i44@0:8@16C24@28@36
i36@0:8@16C24@28
i52@0:8C16r*20r*28@36@44
v24@0:8I16I20
@"SFBLEAdvertiser"
@"SFBLEPipe"
@"SFSystemService"
@"CUBluetoothClient"
@"RPIdentity"
v48@0:8@16q24@32@?40
v48@0:8@"NSString"16q24@"NSDictionary"32@?<v@?B@"NSURL"@"NSError">40
v32@0:8@16Q24
v32@0:8@"NSString"16Q24
@32@0:8@16^@24
v24@0:8B16B20
@"<SDAirDropControllerDelegate>"
@52@0:8@16@24@32@40B48
v44@0:8r*16S24S28r*32I40
^{_DNSServiceRef_t=}16@0:8
@"<SDBonjourResolverDelegate>"
B32@0:8@16B24B28
v36@0:8@16S24@?28
@"SDUnlockSessionAuthToken"
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
{?="bytesPerSec"b1"timestamp"b1"errorCode"b1"legacy"b1"sender"b1"success"b1}
Starting Up...
SIGTERM received, shutting down.
SIGINFO received, requesting debug output.
SIGUSR1 received, requesting reset state.
SIGUSR2 received, requesting reset state 2.
Delaying trigger of action %@ till transferState reaches requirement
Cannot trigger action %@ as it is past requirement
Delaying trigger of action %@ till UI unlock
Triggering action %@
logReceiverBundleID appIdentifier is nil
failed to remove item at %@
Cannot open empty list of URLs
Opening URLs: %@ in %@
Opening URLs: %@
sandbox_extension_consume failed with error %d for tokenData "%@"
Consumed %d sandbox extensions
SDAirDropSession: Skip adding client for Rapport node %@
SDAirDropSession: Received event %@, properties = %{private}@
totalBytes=%{public, signpost.telemetry:number1}lld
TransferTime
 enableTelemetry=YES 
TransferTimeBytes
SDAirDropSession: cancellation handler called for sessionID: %@
SDAirDropSession: startProgress sessionID is NULL
Invalidating %@
Restarting response timer
invalidateResponseTimer
Launching app store with URL: %@
Key session initialized (device id: %@)
Removing authorization request
Auth key session notifying delegate with error: %@
Alerting on notify
BLE peer disconnected (identifier: %@)
Authorization allowed by request, not showing alert
handleAWDLInfo: %@
Activation error: %@
AWDL network up with info %@
Automation: AWDL started %0.2f
WiFi request invalidated
Received SDAutoUnlockMessageTypeAWDLInfo %@
Finished setting in progress
Key session received device id: %@
Received SDAutoUnlockAuthPromptRequest
Received SDAutoUnlockAuthPromptImageData
Received SDUnlockSessionKeyExchangeResponse
Received SDUnlockSessionConfirmation
Using legacy protocol
Using new protocol
Deserializing AWDL info failed %@
Image caching disabled
Prompting with cached image
%@ (request: %@)
Received image data (length: %ld, total: %ld)
Received image data but already using cache
Received image data message without data %@
handleSessionKeyExchangeResponse: %@
Sending auth token for approve %@
Sending auth token %@
Failed to generate ranging session token
Creating auth token failed
Session confirmed %@
Caching image for app %@
Confirmation failed
WiFi interface disabled
Failed awdl info serialization
Sending SDAutoUnlockAWDLInfo
Error sending SDAutoUnlockAWDLInfo (error: %@)
Sending SDAutoUnlockAuthPromptResponse
Error sending auth prompt response %@
Sending SDUnlockSessionKeyExchangeRequest
Error sending request %@
Sending SDUnlockSessionAuthToken
AuthToken ack after session completed
Sending SDAutoUnlockSessionConfirmationACK
Grabbing system activity assertion for Auto Unlock key session
IOPMAssertionDeclareSystemActivity for key session returned %x
Power assertion (assertion %ld, state %d)
System sleep not reverted for key session (state %d)
Grabbing assertion we already have
Releasing key power assertion
Restarting assertion timer
Assertion timer fired
Invalidating aggressive advertising timer
Reset Session: %@
Hash from setup doesn't match preferred LTK
Timeout waiting for LTK response from Companion
Watch LTKs changed (user info: %@)
Incorrect LTK (deviceID: %@, ltk exists: %@, hashes match: %@)
Response missing view syncing state
Pairing key session notifying delegate with error: %@
Pairing canceled for create secret
Pairing Enabled
handleCreateEscrowSecret: %@
Sending key device locked failed
Device using new ranging: %@
Received SDUnlockSetupCreateSecret
Fix worked for pairing session: %@
Fix worked for auth session: %@
Incompatible type
Attempting to fix remote LTK
Received a new rawAdvertisementData %@ from %@ (isReplay:%@, disabledDuplicateFilter:%@)
No current key to decrypt advertisement from %@ with rawAdvertisementData %@. Requesting key
New counter %d is not greater than previous %d from %@ with rawAdvertisementData %@. Requesting new key
Failed to decrypt advertisement with new key from %@ with rawAdvertisementData %@. Discarding advertisement
Failed to decrypt advertisement from %@ with rawAdvertisementData %@. Requesting new key
New counter %d is not greater than previous %d from %@ with rawAdvertisementData %@. New key is same. Replay!
Failed to decrypt advertisement from %@ with rawAdvertisementData %@. New key is same. Replay?
Failed to retrieve new key from %@
Successfully decrypted advertisement (sharing flags + advertisementPayload): %@ => %@, counter: %u
Bonjour name conflict for %@
Bonjour advertise failed (%ld|%d)
Retrying Bonjour advertise in 3 seconds...
Giving up trying to advertise with Bonjour
Bonjour advertise %@ started
SDAirDropPublisher: dataFromTXTRecordDictionary returned nil
Bonjour advertise %@
SDAirDropPublisher: CFNetServiceRegisterWithOptions returned (%ld, %d)
SDAirDropPublisher: copyAirDropID returned NULL
Bonjour advertise %@ stopped
Created session (OS version: %@, build: %@, device: %@)
Updated timeouts (responseTimeout: %ld, responseTimeoutFromServer: %@, messageTimeout: %ld, messageTimeoutFromServer: %@)
Passcode can't unlock keybag
Invalid parameters (passcode = %@)
Internet Sharing enabled
Not enabling, view not syncing
Device is placeholder
Mac not IDS registered
Response timer fired
Pairing lock session notifying delegate with error: %@
Restarting LTK timer
Invalidate LTK timer
Timed out waiting for LTK to sync
Not notified of locked device, session canceled
Pairing session canceled for session created
Remote LTK Hash: %@
Received failure reasons %d
Watch missing LTK and is unable to communicate with Companion to potentially sync it
Watch missing LTK for Mac
Watch has old LTK for Mac
Error in session created response: %d
Pairing session canceled for session request
Setup received response from old watch (version: %d)
Setup received response from new watch (version: %d)
AKS session invalid
LTK invalid (exists: %@, hash matches: %@)
handleEscrowSessionRequest: %@
handleSetupCreateRecord: %@
Enabled for device: %@
Waiting for cloud pairing (Watch ID: %@, Companion ID: %@)
Missing proxy companion IDS ID -- this shouldn't happen
Retrying cloud pairing for specific devices %@
Unlock not enabled and cloud pairing not syncing after pairing (device: %@)
Sending SDUnlockSetupRequest %@
Sending SDUnlockSetupCreateSecret
Received SDAutoUnlockMessageTypePairingKeyDeviceLocked
Received SDUnlockSetupSessionCreated
Received SDUnlockSetupCreateRecord
Received ACK (identifier: %@, setup ID: %@, token ID: %@)
FileTransferSucceeded: %{private}@
FileTransferFailed: %{private}@
AirDropPeerDiscoveredInfo: %{private}@
AirDropSessionInfo: %{private}@
ShareSheetActivityType: %@
CFURLCopyResourcePropertyForKey %@
CFURLCopyResourcePropertyForKey failed with no error
Report interface failure ioctl failed (%d)
Report interface failure socket failed (%d)
Returning prompt info %@
Posting "%@" unlocked by Apple Watch (device ID: %@)
Restarting notification timer
Notification timer fired
Invaliding suggestion scan timer
BT address not available, force random AirDrop ID
Random AirDrop ID requested
Current AirDrop ID is %s
CNMonogrammer monogramForContact:isContactImage: returned nil for %@
No icon data for node with id = %@
copyCertificateChainFromTrust: SecTrustEvaluate result is %d
copyCertificateChainFromTrust: SecTrustGetCertificateCount returned %d
copyCertificateChainFromTrust: SecTrustEvaluateWithError failed %@
copyCertificateChainFromTrust: SecTrustRef is NULL
Validation record data for %@ not available
Validation record data verification failed for %@
Validation record for %@ is nil
Validation record altDSID for %@ is zero length
Certificate chain for %@ is empty
Certificate chain not trusted. SFAppleIDVerifyCertificateChainSync for %@ failed with error %d
SFAppleIDCommonNameForCertificate for %@ failed with error %d
%@ doesn't match %@ for %@
Hashes in validation record are not recognized.
Validation record data is accepted for %@
Contact information not available for %@
Unable to verify identity for %{private}@
Verified identity has a null email or phone (should never happen) %{private}@
storeFilesCopied: kSFOperationFilesKey is missing
storeFilesCopied: CFNumberGetValue failed
Contact info = %@ %@
Icon for node with id = %@: iconDataSize = %ld preferVibrant = %d isContactImage = %d
Icon too small for node with id = %@
No contact for node with id = %@
Got verified identity for %@ (%{private}@)
verifiedIdentityForCertificateChain failed for %@ (%{private}@) with error %@
Missing Apple ID already presented
Present missing Apple ID alert
Couldn't put up the missing Apple ID alert! (error = %d)
Missing Apple ID notification response handler called -> responseFlags (%d)
Request to open iCloud settings
Received continuation payload sent notification with %lu clients, activity ID = %@
Activity not stream activity, not publishing
Added connected stream, total = %ld
Streams are being requested for bonjour name = %@
Failed to create stream handler
Failed to create net service
Service does not have a bonjour name
Wi-Fi not enabled on local iOS device
Removed connected streams, total = %ld
Restarting publish timer
Publish timer fired, no more connected streams
Publishing net service
Could not create NSNetService
No stream ID when trying to publish
Already publishing
Unpublishing
Added service to publisher %@ with identifier %@
Service has already been added
Removed stream support for activity with identifier = %@
No more activities that support streams
Published net service = %@
Failed to published net service = %@, errorDict = %@
Republishing service
Publisher stopped publishing
Net service did accept streams
Could not create stream handler, other side should be timing out
No manager for received ID = %@, managers = %@
SDXPCHelperConnection invalidated in %@
SDAirDropClient %@
Got Discover response from %@
SDAirDropClient: Discover response has no content
Got Ask response from %@
SDAirDropClient: Ask response has no content
Got Upload response from %@
SDAirDropClient: didReceiveResponse unknown operation
SDAirDropClient: didReceiveResponse operation is NULL
SDAirDropClient: didReceiveResponse unknown status code %ld
SDAirDropClient: storePropertyValue value for key %@ is invalid
SDAirDropClient: storeDataValue value for key %@ is invalid
SDAirDropClient: storeStringValue value for key %@ is invalid
SDAirDropClient: CFPropertyListCreateWithData returned invalid dictionary
parseAskResponse: CFPropertyListCreateWithData %@
parseDiscoverResponse: CFPropertyListCreateWithData %@
Retry %s request for %@
Connection to %@ canceled (%@)
Connection to %@ failed (%@)
SDAirDropClient: receiver is not trusted
### Cannot get receiver's public key, no AppleID
### Cannot get receiver's public key, no cached cert
### Cannot get receiver's public key from cached cert
AirDrop sending to %@ over %s
SDAirDropClient: if_indextoname(%d) failed
AirDrop sending to %@ over IPv6
AirDrop sending to %@ over IPv4
NSURLSessionTaskTransactionMetrics count %lu is not expected, expecting 1
Connected to %@ from [%@] => [%@]
Failed to validate Apple ID certificate of receiver %@
Validated Apple ID certificate of receiver %@
SDAirDropClient: sending client certificate to %@
SDAirDropClient: intermediate certificate not available. Sending to %@ with no Apple ID certificate
SDAirDropClient: identity not available. Sending to %@ with no Apple ID certificate
SDAirDropClient: authenticationMethod returned %@
SDAirDropClient: needNewBodyStream invoked for task %@
Bonjour resolved %@ in %d ms
%s %@ at %@
Bonjour resolve %@ failed (%@)
Sending %@ request to %@
SDAirDropClient: CFURLCreateWithFileSystemPathRelativeToBase returned NULL
SDAirDropClient: CFURLCopyHostName returned NULL
SDAirDropClient: copyUserFolder returned NULL
SDAirDropClient: CFPropertyListWrite %@
SDAirDropClient: CFWriteStreamOpen failed
SDAirDropClient: CFWriteStreamCreateWithFile returned NULL
SDAirDropClient: CFURLCreateFromFileSystemRepresentation(%s) returned NULL
SDAirDropClient: realpath(%s) failed with error %d
SDAirDropClient: CFURLGetFileSystemRepresentation(%@) failed
SDAirDropClient: CFURLCreateFilePathURL %@
SDAirDropClient: internetLocationFile returned nil
SDAirDropClient: splitOutFileURLs url "%s" has no scheme
SDAirDropClient: validateAirDropItems _items is empty or NULL
Validating %lu items to send: %@
validateAirDropItems couldn't validate fileURL: %@ with error: %@
validateAirDropItems validated %lu/%lu items for transfer
SDAirDropClient: kCFURLTypeIdentifierKey %@
SDAirDropClient: kCFURLNameKey %@
SDAirDropClient: startPublishingProgress sessionID is NULL
created temporary directory %@
failed to create temporary directory %@
startSending to: "%@", validated %lu airdrop items. properties: %@
startSending, did NOT validate airdrop items. Error: %@. properties: %@
Starting file coordination for %@
SDAirDropClient: coordinateAccessWithIntents(%@) for %lu files %@ failed %@
Starting to send %lu files to "%@", fileURLs: %@
SDAirDropClient: splitOutFileURLs failed
Start transaction to "%@"
SDAirDropClient: removeObjectAtURL(%@) failed %@
Removing transfer with id %@
Cleaning up transfer with id %@
New incoming transfer %@ with items: %@
Progress event for recordID %@: transfer not found, ignoring.
Cancel event for recordID %@: transfer not found, ignoring.
Error event %@ for recordID %@
Error event for recordID %@: transfer not found, ignoring
Finished event for recordID %@: transfer not found, ignoring.
User response: %@ for transfer with id %@
Unhandled user response
No handler for transfer with id %@, ignore action triggered event for action %@
New connection established %@
Connection invalidated %@
Setting handler of class %@ for transfer with id %@
Handler %@ failed for transfer with id %@
Transfer with id %@ failed with reason %@
Set transfer state %@ -> %@ for transfer with id %@
Cleaning up URL %@
Remove URL failed with error %@
Loading all persisted transfers
Receive data at %@ is not valid
Started advertising %@ as %@ with options %@
Goodbye packet advertising interrupted
%@ advertising: advertisingEnabled %@, currentConsoleUser %@, state %s, shouldNotAdvertiseRequestersCount %lu, shouldStart %@
%s %@ + "%@"
%s %@ - "%@"
Advertising client arrived
Advertising client went away
Stopping for user %d on sleep
Stopping for user %d on logout
Grabbing power assertion to keep advertising until told to stop
IOPMAssertionCreateWithProperties returned %x
Trying to grab power assertion while we already have one
Releasing power assertion
%@ startGoodbyeTimer with time interval %.2f
%@ invalidateGoodbyeTimer
%@ goodbyeTimeoutFired
Ignoring currentAdvertisementPayload because it is of incorrect size %d, should be %d
Encrypted (sharing flags + advertisementPayload): %@ => %@, counter %u
Sharing/SDActivityAdvertiser/continuityDidUpdateState
Did update state to %s
continuityDidUpdateState: Powered on
continuityDidUpdateState: Powered off
continuityDidUpdateState: Unknown
continuityDidUpdateState: Resetting
Sharing/SDActivityAdvertiser/continuityDidStartAdvertisingOfType
IDSContinuity didStartAdvertisingOfType: %s
Sharing/SDActivityAdvertiser/continuityDidStopAdvertisingOfType
IDSContinuity didStopAdvertisingOfType: %s
Sharing/SDActivityAdvertiser/continuityDidStopAdvertisingOfTypeWithError
IDSContinuity didStopAdvertisingOfType: %s withError: %@
Sharing/SDActivityAdvertiser/continuityDidFailToStartAdvertisingOfType
Did fail to start advertising for %s (%@)
Request to advertise %@ with options %@
Advertisement contents does not differ from current, continuing previous advertising
Handoff is disabled in settings on this device
Handoff is disabled until first unlock has occurred
Real Handoff is disabled since alwaysSendPayload is enabled
Failed to find any valid cloud paired devices
List of Activity Continuation devices changed %@
nearbyDevicesChanged %@
Session manager starting
Resetting in progress state
Auto Unlock eligible devices %@
Calling key device locked %@
Calling enabled device %@
Calling failed to enable %@
Calling began %@
Calling completed %@
Calling failed %@
Repair cloud pairing if necessary
Devices %@
No eligible devices (signed in: %@, last watch seen: %@)
Devices with description %@
Ranging supported: %@ for model: %@
No eligible devices: Auto Unlock disabled due to profile
Enabling device %@, id %@
Unable to enable Auto Unlock due to profile
Cancel enabling all devices
Cancel enabling device %@
No pairing lock session to cancel (device id: %@)
Disabling Auto Unlock (device: %@)
Begin %@: %@
Test mode attempt
Test Mode: Token: %@
Test Mode: Unable to create hint token
Test Mode: Passcode missing for test mode
Starting attempt (attempt count: %ld, bluetooth devices: %ld, time since last wake: %ld seconds, sleep type: %@)
Unsupported Watch (device ID: %@, major os version: %d attempt type: %d, supports prompts: %@)
Connecting to watches: %@
Connecting to phone device IDs: %@
Scanner started with timeout %.2f seconds
Posting state changed: Scan started
Mac is internet sharing
Interfaces off (bluetooth off: %@, wifi off: %@)
Reached limit of attempts (been unlocked: %@, attempt count: %d)
No enabled devices for attempt
Attempt already in progress (progress state: %@)
Attempt started %@, error %@
Invalidating attempt
Posting state changed: Attempt invalidated
Updating WiFi state after attempt
Incremented attempt count %d
Decrementing
State requested (attempt in progress: %@, device: %@, state: %@)
Disabling (device ID: %@, pairingID: %@)
Sending %@ %@
Error sending disable message (device id: %@, error: %@)
Received SDUnlockDisable (device ID: %@, pairingID: %@)
Received SDUnlockDisable but device ID is NULL
Received disable while enabling device but pairing IDs don't match (lock device: %@, received pairing ID: %@, session ID: %@)
Not disabling (local pairingID: %@, received pairingID: %@)
Pairing lock session in progress %@
Pairing key session in progress %@
Missing IDS device ID for Mac requesting pairing
Lock session setting context %@
Auth lock session in progress %@
Auth key session in progress %@
Already sent trigger to device
Clearing all keys with tokens
Pairing session canceled (device ID: %@, session ID: %@)
Removing key session %@
Removed key session %@
Canceled at end
Session failed (id: %@, error: %@, outstanding sessions: %@)
Missing authorization token: %d
Unexpected attempt type: %d
Wi-Fi powered on: %@
Posting state changed: Scan stopped - session in progress
Already connected (new device: %@, attempt device: %@)
Discovered peer but Wi-Fi is off
Scanner invalidated
Scanning for bluetooth IDs %@
SFBLEScanner timer fired %@
Using BLE scan timeout %.2f seconds
Scanner error: %@
Scanner invalidated before activate
Invalidating scanner
Found BLE peer: %@
Restarting scan timer
Scan timer fired
Invalidating scan timer
Advertising for Auto Unlock: %@ (local: %@, background: %@, watch locked: %@, suggestion: %@)
Received wrapper %@
Received wrapper %@, session ID %@
No session for session ID: %@
Could not create session ID
Missing session ID (has session ID %@, length %ld)
Failed to decrypt message (error code: %ld)
Sending %@ Wrapper %@
Completed sending decryption failed message (error: %@)
Keybag state changed %d
Resetting mac been unlocked and attempt count
Bluetooth power changed (interface on: %@)
Bluetooth error count: %d
Already presented Bluetooth off error
WiFi error count: %d
Already presented Wi-Fi off error
Generating state dump
Rapport Browser start, current request count %d
Rapport Browser stop, current request count %d
Rapport Browser start
Enabling Stranger Discovery
Rapport found person %@
Rapport person %@ changed %@
Rapport lost person %@
Rapport people discovery interrupted
Rapport people discovery invalidated
Rapport people discovery failed to activate with error %@
Rapport people discovery activated. Already discovered people %d
Rapport Browser stop
SDRapportBrowser: createSFNodeFromMyRPDevice failed for %@
SDRapportBrowser: Removing SFNode %@ for %@
SDRapportBrowser: Adding SFNode %@ for %@
SDRapportBrowser: createSFNodeFromRPPerson failed for %@
SDRapportBrowser: Failed to add SFNode because contactID is nil for %@
SDRapportBrowser: Removing SFNode %@ for RPPerson %@
SDRapportBrowser: IDS device info for %@ may be inaccurate. Don't use it for AirDrop
SDRapportBrowser: contactWithContactIdentifier returned nil for %@
SDRapportBrowser: meCard is nil
AirDrop server initialized
AirDrop server invalidation complete
New AirDrop connection %p
Closed AirDrop connection %p
AirDrop server didReceiveError %@
Trying again with random port number
AirDrop server idle timeout
AirDrop status changed
Apple ID account info changed
Apple ID account changed
Stopping AirDrop server for user %d on sleep
Starting AirDrop server for user %d on wake
Starting AirDrop server for user %d on login
Stopping AirDrop server for user %d on logout
Finder %@ AirDrop
Discoverable mode changed to %@
Device first unlock
Screen turned %@
Auto-trigger server
Scanning mode %@
Scanning mode off: console=%d, discoverable=%d, screenOn=%d, unlockedOnce=%d
AirDrop updateServerState with nil delegate
SDAirDropServer: intermediate certificate not available
AirDrop using self-signed certificate
AirDrop server enabled on port %@
SDAirDropServer: _kCFHTTPServerServicePort is NULL
SDAirDropServer: _CFHTTPServerCreateService returned NULL
AirDrop server started
Invalidated AirDrop server
kSFOperationEventErrorOccurred
SDAirDropListener UNHANDLED EVENT %@ [%d] %@
IP Address = %@, Interface = %@
Create destination for %@ failed %@
### %s - dropped URL:[%@]
### %s -- URL does not exist on filesystem:[%@]
Ignoring advertisment data as it is of incorrect size %lu, expected %zu
Adding observer for enabling device
Cancel Auto Unlock: This process does not have permission to perform this action
Began: Calling client proxy %@
Completed: Calling client proxy %@
Client (%@-%d) does not have unlock manager entitlement = %@
Client bundle ID: %@
%s transferIdentifier: %@
SDAirDropListener didReceiveError %@
SDAirDropReceiveManager: Received event %@ for transfer %@
SDNetworkOperationCallBack (event = %@, recordID = %@, progress = %f)
SDNetworkOperationCallBack (event = %@, recordID = %@ , error = %@)
SDNetworkOperationDelegate UNHANDLED EVENT %@ [%d] %@
Submitting AWD metric for set up
Setup Metric %@
Updating enable state in dynamic store: %@
Updating global dynamic store (key: %@, value: %@)
Updating enabled dynamic store (key: %@, value: %@)
Failed to set global enabled state %d
Enabled dictionary exists %@
Updating in progress state in dynamic store: %@
Failed to set in progress state %d
Last machine wake date %@
IDS server bag contains keys (timeout key: %@, server timeout: %@, timeout percentage %@)
Using server timeout (random number: %ld)
Using default timeout (random number: %ld)
Using default value for timeout (default value: %ld, timeout key: %@, server timeout: %@, timeout percentage %@)
createURL: CFURLSetResourcePropertyForKey %@
copyImageData: CGImageDestinationFinalize failed
copyImageData: CGImageDestinationCreateWithData returned NULL
createCGImageWithData: CGImageSourceGetType image format invalid
createCGImageWithData: CGImageSourceGetCount returned zero
createCGImageWithData: CGImageSourceCreateWithData returned NULL
Proxy available for unlock
Sending SDAutoUnlockMessageTypeProxyTrigger
monogramImagesForMultipleContacts called with nil contact, will use fallback.
SDNetworkResolver: bonjourCallBack returned %d
Attempted to resolve a server with unknown protocol
Attempted to resolve a server with no URL
SDNetworkOperation: resume HTTPServerConnection is invalid
SDNetworkOperation: resume HTTPServerConnection is NULL
SDXPCSession:  Starting xpc session....
incrementTransfersInitiated: No AirDrop browsers are running
incrementTransfersCompleted: No AirDrop browsers are running
Unrecognized browser mode %d
SDConnectionManager:  XPC connection interrupted
SDConnectionManager:  XPC connection invalidated
Failed to create commpanion service, nil reply
Failed to create commpanion service, nil client proxy
Failed to create commpanion service, nil identifier
Streams are being requested from service = %@
SDAirDropCompressor: CFWriteStreamWrite returned %ld
SDAirDropCompressor: CFReadStreamRead returned %ld
SDAirDropCompressor: CFReadStreamOpen error = %@
SDAirDropCompressor: CFWriteStreamOpen error = %@
Turning compression back on since it took %f seconds to send a block
Not keeping up with network so turning compression off. Compressed send time: %f, uncompressed send time: %f
Turning compression back on. Compressed send time: %f, uncompressed send time: %f
Compression ratio is %f, so turning compression off, at least until the next file
SDAirDropCompressor: executeReadWithAdaptiveCompression error = %@
SDAirDropCompressor: executeWriteWithAdaptiveCompression error = %@
### Receiving credentials via AirDrop not supported on current platform
Local Unique ID:%@
Touch Bar:%@
DSID: %@
Reloading local unique ID: %@
AKS manager adding observers
Profile installed disabling Auto Unlock
Profile uninstalled -- posting devices changed
AKS received Apple Account sign in
AKS received Apple Account sign out
Current console user changed (uid: %d, pid: %d)
AKS session missing keys (device: %@, syncing %@, local exists %@, local LTK: %{private}@, remote exists %@, remote LTK: %{private}@)
Escrow secret (exists: %@, device ID: %@)
Escrow secret %{private}@
Missing escrow
Escrow secret for authorization (exists: %@, device ID: %@)
Missing escrow for authorization
Missing out variables (message: %p, authTag: %p)
Encryption error %ld
Failed to create random bytes %ld
Session key is missing (device ID: %@
Decrypting with cached device IDs
Decrypting without cached device IDs
Attempting to decrypt message with sorted device IDs %@
Decrypted message (deviceID: %@, length: %ld)
Error decryption failure (device ID: %@, error %ld)
Devices with session keys: %@
Failed to find key with cached devices, trying without cache
No IDS devices for bluetooth ID: %@
Adding existing LTK to new syncing view
Updating version for local LTK
Loaded local LTK: (%@), %{private}@
Unable to load LTK (local device ID: %@)
Local LTK Exists
Generating local LTK
Saved Local LTK (device ID: %@, saved: %@)
New local LTK, clearing remote LTKs and disabling Auto Unlock for all keys
Unable to generate LTK (local device ID: %@, keybag state: %d, setup user: %@)
Checking Local LTKs
Both LTKs missing, generating new LTK
Modern LTK is missing: Storing legacy LTK
Modern LTK is missing: Legacy LTK is invalid, regenerating
Legacy LTK is missing: Storing modern LTK
Legacy LTK is missing: Modern LTK is invalid, regenerating
LTKs match (valid: %@)
LTK Mismatch: Legacy LTK is valid, overwriting modern LTK
LTK Mismatch: Modern LTK is valid, overwriting legacy LTK
LTK Mismatch: Modern LTK is invalid, regenerating
Saved Local LTK after validation check (device ID: %@, saved: %@)
Missing local device ID to check local LTK
Device locked, not checking local LTK
Updating local ltk for sign out
Hash exists but key missing
Keychain devices: %@
Device not in keychain, removing signed key: %@
Trimmed Keychain devices: %@
Updated remote LTKs: %@
Remote LTK data: %{private}@
Not updating remote LTKs because device not first unlocked
Remote LTK needs resigning for pairing for hash
Signing remote LTK (device: %@ LTK: %@, class: %d)
Missing signing info (remoteLTK exists %@, remoteLTK %{private}@, localLTK exists %@, localLTK %{private}@)
Query for attributtes status: %d
LTK hashes do not match {
device ID: %@, 
requestLTKHash: %@, 
legacyRemoteLTKHash: %@, 
modernRemoteLTKHash: %@
Remote LTK list is empty (remote ltks %@, list %@)
LTK's are mismatched between keychain views (device ID: %@)
Missing ltk for deviceID: %@
Keychain peers %@
LTK waiting to be received
LTK needs to be sent
Nothing queued to be sent, re-added LTK
Unable to find keychain peer (IDS device ID: %@)
Taking keybag assertion
Releasing keybag assertion
Restarting keybag assertion timer
Keybag assertion fired
Restarting waiting for unlock timer
Waiting for unlock timer fired
Invalidating waiting for unlock timer
AKS Manager received unknown type
Escrow secret exists %@
Disabling pairing for all keys %@
Removing all remote LTKs on sign out
Updating remote LTK for %@
Overriding existing LTK
Saved remote LTKs: %@
Error persisting remote LTKs: %@
Error serializing remote LTKs: %@
Creating Remote LTK file
Loaded remote LTKs: %@
Remote LTK Data: %{private}@
Error deserializing LTKs: %@
Error loading LTK file: %@
Reloading pairing records
Saved watch ID to pairing record: %@
Error persisting watch ID to pairing record: %@
Error serializing watch ID to pairing record: %@
Failed to delete legacy watch to companion id file (path: %@, error: %@)
Loaded watch ID to companion ID mapping: %@
Error deserializing watch ID to companion ID mapping: %@
Error loading watch ID to companion ID file: %@
Failed to delete legacy companion id file (path: %@, error: %@)
Loaded companion IDs: %@
Error deserializing companion IDs: %@
Error loading companion IDs file: %@
Error creating Sharing folder for compainon IDs: (path %@, error %@)
Error creating Auto Unlock folder: (path %@, error %@)
Failed to store keychain item (add status:%d, delete status:%d)
Updated keychain item
Added keychain item
Using new secret
Unable to get secret from info (has secret %@, escrow info %{private}@)
Migrating escrow secret
No secret
Received unexpected SecItem error = %d
Deleted escrow secret for device %@
Failed to delete escrow secret: %d
Deleted all escrow secrets
Failed to delete all escrow secrets: %d
Store LTK (ltkInfo exists: %@, ltkInfo: %{private}@, deviceID: %@ attributes: %@, update: %{private}@, add: %{private}@)
Failed to delete remote LTK (status: %d, query: %@)
Updating session key (device id: %@)
Cached session keys for devices %@
Device ID missing for session key
Storing Session Key (deviceID: %@ attributes: %{private}@, update: %{private}@, add: %{private}@)
Deleting session key (device ID: %@)
Failed to delete ranging key: %d
Deleting all ranging keys
Deleted all ranging keys
Failed to delete all ranging keys: %d
Query status: %d
Rapport activation failed %@
Request failed %@
Request timed out - no request found for requestIdentifier %@
%@: Encryption key request - Already have request for key %@. Replacing completion block
%@: Preventing encryption key request - Auto Unlock in progress
Requesting Encryption key via Rapport from "%@" %@ with message GUID: %@ and timeout: %d
Sending encryption key request via Rapport %@
Encryption key request %@ with xid %@ via Rapport (%s) failed with error %@
failed to activate link client for destination device: %@ (%@)
Cannot send Handoff encryption key request %@ via Rapport as we found no devices in %@
Sending encryption key request to single of multiple possible destinations.
Encryption key: No device ID generated for device %@ (Devices: %@)
Encryption key: No device found for identifier %@ (Devices: %@)
Requesting Encryption key via IDS from "%@" %@ with message GUID: %@ and timeout: %f
Sending encryption key request via IDS %@
Responding to Handoff encryption key request from "%@" via IDS
No device ID generated for device %@ (Devices: %@) for requestIdentifier %@
%@ %@ %@ %d
Found activity payload in cache for %@ from %@ of size %d
Requesting Handoff payload via Rapport for %@ with message GUID: %@ and timeout: %d
Sending payload request via Rapport %@
Handoff payload request %@ with xid %@ via Rapport (%s) failed with error %@
Cannot send Handoff payload request %@ via Rapport as we found no devices in %@
Sending handoff payload request via IDS to single of multiple possible destinations.
No device ID generated for device %@ (Devices: %@)
No device found for identifier %@ (Devices: %@)
Requesting Handoff payload via IDS for %@ with message GUID: %@ and timeout: %d
Sending payload request via IDS %@ to %@
Ignoring request from %@ via %@ for key with requestIdentifier %@ as we replied only %@ ago
Received Handoff encryption key request from "%@" via Rapport with requestIdentifier %@, xid %@
Responding to Handoff encryption key request from "%@" via Rapport
Received Handoff encryption key request from "%@" via IDS with requestIdentifier %@
Received a new Handoff encryption key from "%@" via Rapport (%s) with requestIdentifier %@, xid %@
Received a new Handoff encryption key from "%@" via IDS with requestIdentifier %@
deviceIdentifier %@ does not match %@
Attempting to use unrequested encryption key with requestIdentifier %@ from %@
Discarding unrequested encryption key as it is missing the requestIdentifier %@ or device %@
Received Handoff payload request from "%@" via Rapport with requestIdentifier %@, xid %@
Responding to Handoff payload request from "%@" via Rapport
Sending payload reply %@
Payload reply record %@
No IDS device found for identifier %@ (Devices: %@)
Received handoff payload request via %@ from "%@" (%@) with requestIdentifier %@ command=%@ for advertisementPayload %@
Ready to respond to handoff request via %@ from "%@" (%@) with requestIdentifier %@ for advertisementPayload %@, command: %@. RTT:%@
Responding to request via %@ from %@ with requestIdentifier %@ for advertisementPayload %@ with an empty payload
Responding to request via %@ from %@ with requestIdentifier %@ for advertisementPayload %@ with payload of size %d
Responding to Handoff payload request from "%@" via IDS
Received Handoff payload reply from "%@" via Rapport (%s) with requestIdentifier %@, xid %@
Received Handoff payload reply from "%@" via IDS with requestIdentifier %@
Received requested Handoff payload via %@ from "%@" (%@) for %@ with activity payload of size %ld for requestIdentifier %@ (%@). RTT:%@
Activity payload received via %@ for requestIdentifier %@ not/no longer wanted from %@
Incoming unhandled protobuf, should never have been called!! protobuf:%@ context:%@
Incoming unhandled data, should never have been called!! context:%@
Incoming unhandled message, should never have been called!! message:%@
%@ %@ (%@)
Could not decode protobuf data (%@)
Could not encode protobuf data from %@ (%@)
Not replacing current key %@ with received key %@
%s creating client: %@
Got payload to send of size %d with activityIdentifier:%@ for advertisementPayload:%@
Not sending %@ to device as we could not get deviceID: %@
Not sending %@ to device as it has no nsuuid/BTUUID: %@
Sending Handoff %@advertisement
to %@, with payload of size %ld
from %@, is final:%@, %@
SDNetworkEjecter: stop
stringFromXPCObject result is not a string
arrayFromXPCObject result is not an array
numberFromXPCObject result is not a number or boolean
SFBrowserCallBack (<%p>{kind = %@}, node = %p, error = %d)
%@ is not entitled to do AirDrop discovery
SFOperationCallBack (<%p>{kind = %@}, event = %@, results = %p)
%@ is not entitled to get the AirDrop discoverable mode
kSharingBrowserCreate node is NULL
kSharingBrowserCreate kind is NULL
openNode returned %d
closeNode returned %d
addNode returned %d
removeNode returned %d
handleBrowserMessage browser is NULL
handleBrowserMessage functionName is NULL
kSharingOperationCreate operation is NULL
kSharingOperationCreate kind is NULL
kSharingOperationResume imageData is invalid
%@ is not entitled to set the AirDrop discoverable mode
kSharingOperationSetProperty name is NULL
handleOperationMessage operation is NULL
handleOperationMessage functionName is NULL
XPC_ERROR_CONNECTION_INVALID <%p>
Lost connection to client <%p>
XPC_ERROR_TERMINATION_IMMINENT <%p>
handleNewConnection unknown XPC error <%p>
handleNewConnection unknown object
handleNewConnection unknown XPC type
XPC_ERROR_TERMINATION_IMMINENT
Unknown XPC error
Unknown XPC type
Device Information: %@
SharingServices using high priority queue
Bonjour browser failed to find awdl0 interface
SDBonjourBrowser: DNSServiceSetDispatchQueue returned %d
Bonjour discovery started
SDBonjourBrowser: DNSServiceBrowse returned %d
SDBonjourBrowser: DNSServiceCreateConnection returned %d
Bonjour discovery stopped
Bonjour discovered %@ over %@ in %d ms
SDBonjourBrowser: DNSServiceQueryRecord returned %d
SDBonjourBrowser: CFStringGetCString failed to get fullName
SDBonjourBrowser: _SDServiceInstanceName returned nil
Bonjour removed %@
Discovered %@ identity of %@ accountID %{private}@ model %{private}@ in %d ms
Failed to update RPIdentity because emailOrPhone is empty
Failed to update RPIdentity because there's no contact for %{private}@
Skipped RPIdentity update because contact %{private}@ is blocked
Didn't update RPIdentity because deviceIRKData is missing for %{private}@
Didn't update RPIdentity because edPKData is missing for %{private}@
Didn't update RPIdentity because idsDeviceID is missing for %{private}@
Failed to update RPIdentity because contactID is nil for %{private}@
Updating RPIdentity for %{private}@
Failed to update RPIdentity for %@ with error %@
Updated RPIdentity for %@
Identity discovery denied for %@
Discovery validation failed because SecTrustRef is NULL
%@: UNHANDLED EVENT %@ [%d] %@
Bonjour discovered %@ TXT record in %d ms
SDBonjourBrowse:  failed to copy identity for %@ with error %@
AWDL link state changed
SDBonjourBrowser: handleBrowseCallBack returned %d
SDBonjourBrowser: handleQueryCallBack called with unexpected type %d
SDBonjourBrowser: handleQueryCallBack returned %d
AirDrop destination set to %@
SDAirDropFileZipper: BOMBomInsertFSObject("%s") failed
SDAirDropFileZipper: BOMFSObjectNewFromPath("%s") failed
SDAirDropFileZipper: Placeholder filename %@ already exists at destination: %@. Creating as new filename: %@
SDAirDropFileZipper: createPlaceholderFiles conflict not handled
SDAirDropFileZipper: CFURLCopyLastPathComponent returned NULL
SDAirDropFileZipper: createPlaceholder %@
SDAirDropFileZipper: createPlaceholderFiles originalName "%s" contains illegal characters
SDAirDropFileZipper: createPlaceholderFiles originalName[%d] is nil
SDAirDropFileZipper: createPlaceholderFiles file count is zero
SDAirDropFileZipper: createPlaceholderFiles placeholderFiles is NULL
SDAirDropFileZipper: moveObjectAtURL2 %@
SDAirDropFileZipper: removeObjectAtURL %@
SDAirDropFileZipper: moveObjectAtURL %@
SDAirDropFileZipper: BOMCopierCopyWithOptions returned %d
SDAirDropFileZipper: createPlaceholderFiles failed
SDAirDropFileZipper: %lu files saved: %@
SDAirDropFileZipper: No files were found
SDAirDropFileZipper: startBomCopy %s
SDAirDropFileZipper: copyCommonParent(%@) returned NULL
SDAirDropFileZipper: BOMBomInsertFSObject failed
SDAirDropFileZipper: BOMFSObjectNewFromPath failed
SDAirDropFileZipper: BOMBomNew returned NULL
SDAirDropFileZipper: _bomPath is nil
SDAirDropFileZipper: CFURLCopyAbsoluteURL returned NULL
SDAirDropFileZipper: CFURLCreateWithFileSystemPathRelativeToBase returned NULL
SDAirDropFileZipper: copyUserFolder returned NULL
AirDrop is using PKZip compression
AirDrop is using adaptive compression
SDAirDropFileZipper: CFWriteStreamOpen failed
SDAirDropFileZipper: initBomWithFiles failed
SDAirDropFileZipper: CFReadStreamOpen failed
SDAirDropFileZipper: _SDUniqueTemporaryFolder failed %@
SDAirDropFileZipper: bomCopierFileErrorPtr - %s, errno = %d (%s)
SDAirDropFileZipper: bomCopierFatalErrorPtr - %s
SDAirDropFileZipper: bomCopierFatalFileErrorPtr - %s (%d)
SDAirDropFileZipper: bomCopierFileConflictErrorPtr - %s
Failed to initialize key from data. Incorrect size %d
Generated new advertising encryption key %@, and saved to keychain
%@: Loaded advertising encryption key and bumped last used counter from %d by %d, then persisted key to keychain %@
Did not load advertising encryption key from keychain as the bumped last used counter exceeds max value
Failed to deserialize encryption key from keychain (%@)
Bumped advertising encryption key counter value from %ld to %ld
Generating new advertising encryption key as the bumped value of the old one exceeds max value
%@: Encryption key invalid %@
%@: Persisted last used counter and key to keychain %@
Saved decryption key %@ for %@ to keychain
Failed to save decryption key %@ for %@ to keychain
Loaded decryption key %@ for %@ from keychain
Converting key to wrapped key
Not wrapping key as wrapping key is unavailable
Failed to serialize encryption key from %@ (%@)
Failed to deserialize key (%@)
Failed to unwrap key cause key data is missing
Could not unwrap key cause wrapping key is not available
Converting wrapped key to key
Successfully cleared in-memory key caches
Successfully deleted encryption key:%@, decryption keys:%@
SecItemCopyMatching wrappingKeyQuery failed with error %d
SecItemCopyMatching encryptionKeyQuery failed with error %d
SecItemCopyMatching decryptionKeysQuery failed with error %d
Loaded wrapping key from keychain
No wrapping key found in keychain
SecItemCopyMatching baseDict failed with error %d
Failed to update keychain item with error %d for query %@ attributesToUpdate %@
Failed to delete keychain item with error %d for query %@
Failed to add keychain item with error %d for attributes %@
%@ Deallocating Stream Handler
Creating network streams
%@ Closing input stream
%@ Closing output stream
Network streams closed
Stream Stats: total bytes transferred = %ld, duration = %g%@
Starting open timer with timeout = %d
Open timer fired with input stream status = %d, output stream status = %d, closing streams
Streams invalidating open timer
Applying tls settings
Could not get cert chain to encrypt streams (intermediate cert not available)
Could not get identity to encrypt streams (identity not available)
Accounts match
Accounts do not match
Accounts do not match, my account identifier (common name) is not available
SFAppleIDCommonNameForCertificate failed with error %d
Client cert chain not trusted. SFAppleIDVerifyCertificateChainSync failed with err=%d
Cert chain from remote trust does is empty
Could not get trust from open stream
Network stream received error = %@
setsockopt failed: %s
Stream returned invalid socket %d
Network streams opened
Time to open streams = %f
Failed to evaluate certificate
No space available on network output stream, queuing stream data
Delegate does not respond to streamHandler:didReceiveStreamData:
Could not create stream data from read buffer
Total read from network = %ld
Read zero bytes from the network stream
Client buffer full, waiting to read from network
Total written to network = %ld
Error writing to network output stream, writeLength = %ld
No output stream data to write to network
Method not supported
No space available on network output stream, queuing message
Could not create message payload
Unexpected stream handler input state
Read chunk = %ld, total = %ld%@
Read more bytes than the incoming message header declared
Read error = %s
Zero bytes read from input stream
Expected message length = %d
Finished writing message of size = %lu
Wrote too many bytes (byteIndex = %d, message length = %d)
Failed to write message = %s
Zero bytes written for message
No messages to write in queue
No handler for message write
Incorrect version number in header
Sharing/SDNotificationManager/didReceiveNotificationResponse/homepod
Sharing/SDNotificationManager/didReceiveNotificationResponse/tv
Sharing/SDNotificationManager/didReceiveNotificationResponse/watch
IDS Devices: %@
Clearing Auto Unlock device cache
Skipping device in blacklist (device ID: %@)
Updating last seen date
Watch added to list -- updating watchCurrentlyInList and lastSeenWatchDate
Updating existed in list
Last watch removed from list -- updating watchCurrentlyInList and lastSeenWatchDate
Activity service has a Watch updating last seen date
Skipping enabled device in blacklist (device ID: %@)
Using cached device: %@
IDS device not cloud paired %@
Updated approve bluetooth IDs: %@
Device version: %d
IDSDevice not found for deviceID: %@
%s: called with deviceID:%@ whose deviceClass is %d
Remote MacOS major version: %d and minor version: %d
Proxy device not cloud paired
Bluetooth ID cache %@
Updated bluetooth ID cache
IDS registration status: %d
Updated cloud pairing retry dates %@
Still backing off cloud pair retry (device ID: %@, use short: %@, short date: %@, general date: %@)
No default paired for device type
Failed to create destination (deviceID: %@, IDS device: %@)
Sending %@, identifier:%@
Error sending %@, error:%@
No destinations for device ID: %@
Nearby devices changed %@
Received protobuf (type = %d, size = %u)
Received pairing request (date: %@, from storage: %@)
client:%@, sessionID:%@, clients:%@
Incoming message missing info (session = %@, wrapper = %@, data = %@)
Incoming message from unknown device
Received IDS ACK (identifier: %@, mapping: %@)
Calling client for ACK (client: %@, session ID: %@, identifier: %@)
success = %@, identifier = %@, time = %.2f, error = %@
missing error handler
Resetting apple watch existed state
Loaded lastSeenWatchDate %@
Loaded watchExistedInUnlockList %@
Loaded watchCurrentlyInList %@
Pairing request arrived (creation date: %@ server date: %@) from device: %@
Pairing request arrived outside window (creation date: %@ server date: %@)
Coalescing node %@: %@
No identifier found for node %@
coalescedNodesForNodesCache: Device ID is not available for %@
Coalesced node %@ not handled
Coalesced node %@ represents nodes %@
Sharing/SDAppleIDAgent/didReceiveToken
Sharing/SDAppleIDAgent/didReceivePublicToken
Sharing/SDAppleIDAgent/didReceiveIncomingMessage
Creating ranging manager
Created ranging manager %@
Already processing request
Starting ranging (manager: %@, peers: %@)
startRangingFromPeers (manager: %@, peers: %@)
stopRangingFromPeers (manager: %@, peers: %@)
Starting AWDL %@
AWDL went down. Invalidatng current request
Restarting AWDL bring up timer
Invalidating AWDL bring up timer
AWDL bring up timer fired
Disabling ranging and awdl for timer
Sending request (honeybee id: %@, devices: %@)
Sysdiagnose collected (path: %@, error: %@)
Uploading to honeybee
Error collecting sysdiagnose %@
Sending IDS message (identifier: %@, destinations: %@)
Error sending IDS message (identifier: %@)
No destination for IDS devices: %@
IDS send complete (success: %@, identifier: %@, error: %@)
IDS message from unknown device
Received message (device: %@, type: %d, message: %@)
setFileIncomplete: kCFURLCreationDateKey %@
setFileIncomplete: _kCFURLFinderInfoKey %@
setFileIncomplete: finderInfoData is NULL
setFileIncomplete: CFURLCopyResourcePropertyForKey %@
Exception caught trying to retrieve primary iCloud account : %@
copyLocalizedFileName %@
Unique temporary folder: %@
absoluteURL was nil for %@
createDirectoryAtURL:%@ returned nil error
NSItemReplacementDirectory appropriateForURL:%@ returned nil error
Failed to create Sharing folder
Missing Library folder
copyUserFolder: confstr(%d) failed with error %d (%s)
This is not a valid AFP volume (FSCTL returned %d errno = %d)
_SDVolumeNameForMountPoint: NSURLVolumeNameKey %@
SecTaskCreateWithAuditToken returned NULL for %@
Created new Stream ID (%s)
awdlInterfaceIndex: getifaddrs failed (%d)
Device Capabilities (Auto Unlock:%@, Handoff:%@, Instant Hotspot:%@, AirDrop:%@, Remote Disc:%@)
SDServiceManager: Accept Reply = %@
SDDomainBrowser: didNotSearch %@
Missing AWDL Info
Using AWDL info %@
Encryption start
Using encryption%{private}@
Error encrypting message (data: %@, authTag: %@, nonce: %@)
Session missing device ID for encrypted send
Using BLE encryption
Ranging key exists %@
Using ranging key (size: %d, realKey %@)
Ranging key data: %{private}@
System will sleep, stopping AirDrop connection.
WiFi is disabled, stopping AirDrop connection.
SDAirDropConnection event: %@
SDAirDropConnection %@
SDAirDropConnection: didReceiveError %@
SDAirDropConnection: didReceiveError suppressed
SDAirDropConnection: unexpected class %@ for file info key %@
SDAirDropConnection: invalid value for %@: %@
SDAirDropConnection: Files array has invalid items
SDAirDropConnection: storeArrayValue value for key %@ is invalid
SDAirDropConnection: unhandled key %@ for storeArrayValue
SDAirDropConnection: CFURLCreateStringByReplacingPercentEscapes returned NULL
SDAirDropConnection: storeRequestValue value is not a string
SDAirDropConnection: _CFHTTPServerRequestCopyProperty returned NULL
SDAirDropConnection: storeDataValue value for key %@ is invalid
SDAirDropConnection: storeStringValue value for key %@ is invalid
SDAirDropConnection: storeNumberValue value for key %@ is invalid
SDAirDropConnection: storeBooleanValue value for key %@ is invalid
SDAirDropConnection: createCGImageWithJPEG2000Data returned NULL
SDAirDropConnection: storeIconValue fileIconData is invalid
SDAirDropConnection: CFPropertyListCreateData failed %@
Responding to Discover request from %s person
Responding to Discover request with code %ld
Power assertion released (%d)
SDAirDropConnection: icon hashes don't match
SDAirDropConnection: _SDHashStringFromData returned NULL
SDAirDropConnection: createPersonForAskRequest senderIcon is NULL
SDAirDropConnection,createPersonForAskRequest: computerName is invalid
SDAirDropConnection,createPersonForAskRequest: validAirDropID(%@) returned NO
SDAirDropConnection: SDAppleIDAuthenticateCertificateChainSync failed %@
SDAirDropConnection,senderIsTrusted: userIdentity is NULL
SDAirDropConnection: no certificate chain for %@
SDAirDropConnection: myAccountIdentifier is an empty string
SDAirDropConnection: SFAppleIDCommonNameForCertificate failed with error %d
SDAirDropConnection: client cert chain not trusted. SFAppleIDVerifyCertificateChainSync failed with err=%d
SDAirDropConnection: copyCertificateChainFromTrust returned %s array
Parsing Discover request
SDAirDropConnection: CFPropertyListCreateWithData returned invalid dictionary
SDAirDropConnection: CFPropertyListCreateWithData failed %@
Sender is me, ignore self block.
Parsing Ask request
SDAirDropConnection,allowAskRequestFromPerson: appleID is NULL
SDAirDropConnection,allowAskRequestFromPerson: person is NULL
AirDrop failed to validate Apple ID certificate of sender
SDAirDropConnection,handleAskRequest: no files or items
SDAirDropConnection,handleAskRequest: senderID is NULL
SDAirDropConnection: CFReadStreamRead returned %ld
SDAirDropConnection: kCFStreamEventEndEncountered fired again
SDAirDropConnection: kCFStreamEventUnknown(%d)
SDAirDropConnection: CFReadStreamOpen failed
SDAirDropConnection: _CFHTTPServerRequestCopyBodyStream returned NULL
SDAirDropConnection: startReceivingFile destination is nil
SDAirDropConnection: thereIsEnoughFreeSpace failed %@
makeDestinationDirectory: createDirectoryAtURL failed %@
Discover already in progress
Upload already in progress
Bad Upload request
Ask already in progress
Received Discover request
Received Ask request
Received Upload request
Received Upload request for %@
SDAirDropConnection: kSFOperationErrorNotEnoughSpace
SDAirDropConnection: didReceiveRequest askRequest NULL userAccepted false
SDAirDropConnection: didReceiveRequest unknown operation
SDAirDropConnection: didReceiveRequest operation is NULL
SDAirDropConnection: didReceiveRequest unknown method
SDAirDropConnection: didReceiveRequest method is NULL
SDAirDropConnection: didSendResponse operation is unknown
SDAirDropConnection: didSendResponse operation is NULL
SDAirDropConnection: didSendResponse method is unknown
SDAirDropConnection: didSendResponse method is NULL
Connection from %@ closed but transfer is finished
Connection from %@ closed
Connection closed (cancel suppressed)
Power assertion retained (%d)
Invalidated AirDrop connection %p
Starting%@%@%@ scanning with duplicates:%@ for peers [%@]
%@ enabled: %@, state: %s, shouldStart: %@, scanForCopyPaste: %@, scanForHandoff: %@
nearbyServiceDevicesChanged: %@
Received a new advertisement %@
Ignoring new advertisement as it is for default pair only which is not me
Failed to update with raw advertisementData %@ from %@ (%@)
Saw IDS device %@ with mismatched version %d, expected %d
Scanning client arrived
Scanning client went away
Dumping state
Starting for user %d on wake
Starting for user %d on login
Sharing/SDActivityScanner/continuityDidUpdateState
Sharing/SDActivityScanner/continuityDidStartScanningForType
IDSContinuity didStartScanningForType: %s
Sharing/SDActivityScanner/continuityDidStopScanningForType
IDSContinuity didStopScanningForType: %s
Sharing/SDActivityScanner/continuityDidFailToStartScanningForType
IDSContinuity didFailToStartScanningForType: %s withError: (%@)
Sharing/SDActivityScanner/continuityDidDiscoverType
Saw device %@ but cannot find mathing IDSDevice
Lost IDS device %@
lostAllDevices
requested scanning for %@
Requesting payload from %@ for %@
Missing required properties (awdl info: %@, queue available handler: %@)
SDConnectedBrowser: _CFURLGetVolumePropertyFlags returned %@
SDConnectedBrowser: getResourceValue %@
SDXPCHelperConnection deallocated without -invalidate call
SDXPCHelperConnection makeActivatedConnection invalidationHandler
monogramImageDataForContact called with nil contact, will use fallback.
SDXPCHelperConnection %s remoteObjectProxyWithErrorHandler: %@
monogramImageDataForContact
Cache miss for %@ -> creating cache for opposite color too
groupMonogramImageDataForContacts
urlToCGImgDataForCallHandoffIconWithAppIconImageData
monogramImagesForMultipleContactsSync failed to return images
monogramImagesForMultipleContacts
CGImgDataForUIActivityTitle
CGImgForNameLabelWithString called with nil string.
CGImgForNameLabelWithStringDaemon
Cache miss for text %@ -> creating cache for opposite color too
%llu
CGImgForNameLabelWithString
Cache miss for label %@ -> creating cache for opposite color too
CGImgDataForActivityMoreListEntryForActivityTitle
CGImgForActionPlatterWithTitle
CGImgForNearbyBadgeWithCount
Need image data for %lu images, %lu are not in cache, return %lu image data.
Share sheet host app config not set on %@ as expected.
_latestHostConfig = nil
updateShareSheetHostConfiguration
Stopped net service browser
Client streams closed
Third party app client
Started net service browser
Sending initial request
Error sending initial request = %@
Sending initial streams response (accepted = %@)
Error sending initial response = %@
Switched from messages to Streams
Creating file handle failed
Error getting streams = %@
No handler for stream request
Failed to set buffer size on socket
Could not create sock pair = %s
Requested fileHandle more than once.
Browser found net service = %@
No type in stream handler message
Unarchiving stream handler failed: %@
Received request to create streams
Could not create file handles
No service in request
Received response to create stream (accepted = %@)
Stream handler closed with error = %@
Received NSStreamEventHasBytesAvailable on a stream other than an input stream
Received NSStreamEventHasSpaceAvailable on a stream other than an output stream
Stream end encountered, closing streams
Client stream received error = %@
Client Streams Opened
Total written to client = %ld
Error writing to client output stream, writeLength = %ld
Queueing client write, no space available
Total read from client = %ld
Read zero bytes from the client stream
Network buffer is full, waiting to read from client
No stream data to write to network
Client has written data
Client has read data
Received screen lock unlocked notification
Not initiating setup retry (already retried: %@, always show: %@, lastSuccessfulDevice: %@)
Retry setup device ID cleared
Restarting retry setup device timer
Retry setup device timer fired
Invaliding setup device device timer
Suggestion Found Peers %@
Suggested device ID cleared
Restarting suggested device timer
Suggested device timer fired
Invaliding suggested device timer
Restarting suggestion service timer
Suggestion service timer fired
Invaliding suggestion service timer
Suggestion scanning for bluetooth IDs %@
Scanner started
No devices to scan for, not starting suggetion scanner
Already scanning for suggestions
Suggestion manager found peer: %@
Suggestion manager peer (device: %@, supports advertising unlocked: %@, unlocked on wrist: %@)
Not looking for peer, ignoring: %@
Invalidating suggestion scanner
Restarting suggestion scan timer
Suggestion scan timer fired
Error sending message to start advertising to %@
Received SDAutoUnlockMessageTypeStartAdvertising (new ranging required: %@, message: %@)
Skipping response advertisement because Mac OS version is too old
Should send request (device: %@ enabled: %@)
Suggestions still backing off (device %@, retry date %@)
Reached limit of suggestions (device %@, multiplier: %ld)
Next suggestion (device: %@, multiplier: %ld, seconds: %ld, retry date %@)
Setting feature suggested for device: %@
Retry version: %ld
clearMonitorCache
AirDrop not ready: wifi=%d, bluetooth=%d, hotspot=%d, carplay=%d, receivingEnabled=%d
Discoverable mode off: appleIDAccountState=%@ eduModeEnabled=%d
Reconciled discoverable mode: %@ (%@)
Purged contact hashes
Discoverable mode changed from %@ to %@, posting notification
Apple ID account state: %@
SFAppleIDParseValidationRecordData failed with error %d (%ld ms)
SFAppleIDParseValidationRecordData timed out.
Verified validation record data (%ld ms)
clearMyAppleIDInfo
SecCertificateCopyCommonNames returned empty array
SecCertificateCopyCommonNames returned NULL
saveVerifiedAccount success %d %@
Could not fix Alt-DSID error = %@
No primary account, not fixing appleID
Apple Account signed in
Apple Account signed out
No normalized emails or phone numbers
No emails or phone numbers
No Apple ID certificate
addAdditionalInformationToMeCard: _myAppleID = nil
addAdditionalInformationToMeCard: accountForAppleID (%@) = nil
addAdditionalInformationToMeCard produced enhancedMeCard: %@
clearMyIconAndHash
_longHashesToContactIdentifier is nil
Failed to find contact with contact identifier %@, error: %@
Failed to find contact with phone number %@, error: %@
Failed to find contact with email %@, error: %@
Started generating hashes
Skipping as contact %@ has no identifier
No Contacts in database
Failed to retrieve any contacts due to %@
Finished generating hashes
Hash generation ended with no short hashes.
Failed to retrieve me-card due to %@
No me-card set
Adding additional information to me-card if needed
resetMeCardWithReason: %@
Added reason to prevent locale change exit (reason %@, reasons %@)
Removed reason to prevent locale change exit (reason %@, reasons %@)
Exiting for language change -- delayed
PWS availability: %ud
Generating SSID hashes
sysctl returned %d
SecIdentityCopyCertificate returned %d
altDSID is nil
altDSID is equal to primary email
altDSID is equal to Apple ID account
AirDrop %@ transaction %@ (%d)
Apple ID account info changed.
Bluetooth address changed
Bluetooth is now %s
Bluetooth power is now %s
SDStatusMonitor: DNSServiceSetDispatchQueue returned %d
SDStatusMonitor: DNSServiceRegister returned %d
contactStoreDidChange
contactsStoreMeCardChanged
SDStatusMonitor: Unknown keys changed (%@)
SCDynamicStoreCreateRunLoopSource failed: %s
SCDynamicStoreSetNotificationKeys failed: %s
SCDynamicStoreCreate failed: %s
SDStatusMonitor: handleNameMonitorCallBack returned %d
Paired watch wrist state changed: %@
Paired watch wrist lock changed: %d
Updating discoverable mode for personal hotspot change
Device can sleep
Device will sleep
Device has powered on
Device will not sleep
SDStatusMonitor: IORegisterForSystemPower failed
Screen: %@
Watch wrist state changed: %@
### Failed to make ssid prefs?
SSID cache monitor successfully installed: %s
Wi-Fi power is now %s
Current language changed
Preventing exit for reasons %@
Exiting...
WiFi Preferences changed callback, purging ssid cache
SDAirDropClassroomTransferManager: failed to get access to Downloads folder with error: %@
makeDestinationDirectoryWithIdentifier failed %@
SDAirDropClassroomTransferManager: createCGImageWithData returned NULL
SDAirDropClassroomTransferManager: replaceIconValue fileIconData is invalid
Update transfer %@ with state %d
Failed to update %@
Notifying %d clients that transfer %@ was accepted
Notifying %d clients that transfer %@ was declined
connection established %@
connection invalidated %@
Bonjour resolved %@ over %@
Ignoring Bonjour resolve of %@ over %@
Resolved a Bonjour server with unknown protocol
Bonjour resolver failed to find awdl0 interface
Bonjour resolving %@ over %@
SDBonjourResolver: DNSServiceSetDispatchQueue returned %d
SDBonjourResolver: DNSServiceResolve returned %d
SDBonjourResolver: DNSServiceCreateConnection returned %d
Creating lock session
Watch info (model ID: %@, build: %@, os version: %@)
Stopping BLE connection
Lock session canceled (device ID: %@, session ID: %@)
Lock session canceled after success (device ID: %@, session ID: %@)
Handling cancel at end
Not cancelled
Clamshell changed
Display config changed
Attempt timed out for session
Automation: Used Proxy Device %@
Automation: Key Device Model %@
Automation: Proxy Device Model %@
Automation: Phone Bluetooth Discovery %0.2fs
Automation: Phone Connection Time %0.2fs
Automation: Watch Bluetooth Discovery %0.2fs
Automation: Watch Connection Wait Time %0.2fs
Automation: Watch Connection Time %0.2fs
Automation: Bluetooth Info Exchange %0.2fs
Automation: Bluetooth Key Exchange %0.2fs
Automation: Bluetooth Token Exchange %0.2fs
Automation: Bluetooth Unlock Confirmation %0.2fs
Automation: AWDL Bring Up %0.2fs
Automation: Peer Found %0.2fs
Automation: Ranging Results %0.2fs
Automation: Time Waiting For Display %0.2f
Automation: Time Waiting For Clamshell %0.2f
Automation: Wi-Fi Total %0.2fs
Automation: Bluetooth Bootstrap Total %0.2fs
Automation: Bootstrap + Wi-Fi Total + Confirmation %0.2fs
Automation: Bluetooth Overall Total %0.2fs
Automation: Complete exchange %0.2fs
Automation: Key Device RSSI %d
Automation: Proxy Device RSSI %d
Automation: Within Range %@
Automation: Already Connected Bluetooth Devices %d
Automation: Time Since Last Wake %ld seconds
Automation: Last Sleep Type %@
Automation: Cancelled %@
Automation: Successful Session %@
Updating image data for non-auth prompt attempt
Image data updated (%@)
Image already cached: %@
Not updating icon, watch doesn't support icons
Chosen device updated: %@ (%@)
Unable to create token session, using escrow
Starting BLE connection %@
Found Device {
available: %@,
locked on wrist: %@
device:%@
Device connected %@
Peer not available %@
Timer fired
Timeout while waiting for a display or clamshell
Restarting confirmation timer
Confirmation timer fired
Invalidating confirmation timer
AWDL ranging results returned %@, error %d
Peer in range
Ranging timeout with no error code
handlePeerInRange %@
handlePeerOutOfRange %@
AWDL up (%.2f)
Auth lock session notifying delegate with error: %@
Automation: Success
Automation: Session Dismissed: %@
Received SDAutoUnlockAuthPromptResponse
Received SDUnlockSessionKeyExchangeRequest
Received SDUnlockSessionAuthToken
Received AWDL Info %@
Session supports confirmation ACK
Deserializing AWDL info failed
Already received auth prompt response
Key exchange request: attempt cancelled
Found device is not available
Received fallback AKS session
Watch locked on wrist from connection
handleSessionKeyExchangeRequest: %@
Auth token: attempt cancelled
Auth token: Already received auth token
handleSessionAuthToken: %@
Received SDAutoUnlockSessionConfirmationACK
Starting wifi request
AWDL started
Peer found (awdl up same time : %@)
Ranging started
Ranging completed
Current user: %@, clamshell closed: %@, display connected: %@
AKS Unlock succeeded
consumeAuthTokenIfReady: %@
Waiting for a display or clamshell change
Error sending AWDL info %@
Not sending data, local device ID is NULL
Sending SDAutoUnlockAuthPromptRequest
Not sending data for auth prompt, local device ID is NULL
Sending image data (chosen: %@, data: %@, already cached: %@, cache disabled: %@ needs new image: %@)
Using max size %ld
Sending SDAutoUnlockAuthPromptImageData (message count: %u, size: %ld)
Error sending image data %@
Not sending image data (already sent %@, chosen: %@, data %@, already cached %@, needs new image: %@)
Sending SDUnlockSessionKeyExchangeResponse
Never connected, skipping confirmation
Already sending confirmation
Sending SDUnlockSessionConfirmation
Error sending confirmation
Waiting for confirmation ack
Failed to get remote object proxy for %@ (%@)
Activating %@
Activate already called
New connection from %@ accepted %s
Connection %@ invalidated
New connection established to %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>Application-Group</key>
<string>com.apple.coreservices.appleidauthentication.keychainaccessgroup</string>
<key>BuildMachineOSBuild</key>
<string>19A603013</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>sharingd</string>
<key>CFBundleExecutable</key>
<string>sharingd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.sharingd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>sharingd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1569.1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>AppleTVSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1569.1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>12A8179f</string>
<key>DTPlatformName</key>
<string>appletvsimulator</string>
<key>DTPlatformVersion</key>
<string>14.2</string>
<key>DTSDKBuild</key>
<string>18K5047c</string>
<key>DTSDKName</key>
<string>appletvsimulator14.2.internal</string>
<key>DTXcode</key>
<string>1200</string>
<key>DTXcodeBuild</key>
<string>12A8179f</string>
<key>LSBackgroundOnly</key>
<true/>
<key>MinimumOSVersion</key>
<string>14.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>3</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1957431478</string>
<key>application-identifier</key>
<string>com.apple.sharingd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.BTServer.appleMfgDataAdvertising</key>
<true/>
<key>com.apple.BTServer.appleMfgDataScanner</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>carrier-settings</string>
<string>phone</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.PairingManager.HomeKit</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.radios.plist</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.appleidauthentication.defaultaccess</key>
<true/>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.announced.client</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.mediaremote</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.appstored.install-system-apps</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bluetooth.internal</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.carousel.onWristMonitor.actions</key>
<array>
<string>forceWristDetect</string>
</array>
<key>com.apple.cdp.followup</key>
<true/>
<key>com.apple.cdp.statemachine</key>
<true/>
<key>com.apple.cdp.utility</key>
<true/>
<key>com.apple.corecapture.manager-access</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.coreduetd.people</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.homekit.background-mode</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.fileprovider.enumerate</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.imagent.chat</key>
<true/>
<key>com.apple.imagent.chat.av</key>
<true/>
<key>com.apple.intents.intents-helper</key>
<true/>
<key>com.apple.itunesstored.lookup</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.device.remote-session</key>
<true/>
<key>com.apple.keystore.device.uuid</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.launchservices.MoveDocumentOnOpen</key>
<true/>
<key>com.apple.locationd.activity</key>
<true/>
<key>com.apple.locationd.peer_ranging</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.networkd_privileged</key>
<true/>
<key>com.apple.passes.add-silently</key>
<true/>
<key>com.apple.payment.all-access</key>
<true/>
<key>com.apple.photos.bourgeoisie</key>
<true/>
<key>com.apple.private.MobileActivation</key>
<array>
<string>GetActivationState</string>
</array>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>BluetoothAddress</string>
<string>EthernetMacAddress</string>
<string>SysCfg</string>
<string>UniqueDeviceID</string>
<string>WifiAddressData</string>
<string>WifiAddress</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.airdrop.discovery</key>
<true/>
<key>com.apple.private.appleairpowercharger.set-property</key>
<true/>
<key>com.apple.private.applecredentialmanager.allow</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SharingDeviceAssets</string>
</array>
<key>com.apple.private.assets.change-daemon-config</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.communicationsfilter</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.familycircle</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.homekit</key>
<true/>
<key>com.apple.private.homekit.pairing-identity</key>
<true/>
<key>com.apple.private.homekit.pairing-identity.private</key>
<true/>
<key>com.apple.private.homekit.remote-login.private</key>
<true/>
<key>com.apple.private.ids.continuity</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.madrid</string>
<string>com.apple.private.alloy.continuity.activity</string>
<string>com.apple.private.alloy.continuity.auth</string>
<string>com.apple.private.alloy.continuity.auth.classa</string>
<string>com.apple.private.alloy.continuity.encryption</string>
<string>com.apple.private.alloy.continuity.tethering</string>
<string>com.apple.private.alloy.continuity.unlock</string>
<string>com.apple.private.alloy.nearby</string>
<string>com.apple.private.alloy.sharing.paireddevice</string>
<string>com.apple.private.alloy.sms</string>
<string>com.apple.private.alloy.intercom</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.continuity.activity</string>
<string>com.apple.private.alloy.continuity.auth</string>
<string>com.apple.private.alloy.continuity.auth.classa</string>
<string>com.apple.private.alloy.continuity.encryption</string>
<string>com.apple.private.alloy.continuity.tethering</string>
<string>com.apple.private.alloy.nearby</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.continuity.unlock</string>
<string>com.apple.private.alloy.sharing.paireddevice</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.nearby</string>
</array>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.launchservices.canspecifymanageddocumentsource</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.neagent</key>
<true/>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.nehelper.privileged</key>
<true/>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.networkextension.configuration</key>
<true/>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.photoanalysisd.access</key>
<true/>
<key>com.apple.private.photos.service.mediaconversion</key>
<true/>
<key>com.apple.private.safari.can-inspect-autofill-feature-availability</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.HomeKit</key>
<true/>
<key>com.apple.private.security.storage.Photos</key>
<true/>
<key>com.apple.private.sharing.XPCHelperAccess</key>
<true/>
<key>com.apple.private.skywalk.register-kernel-pipe</key>
<true/>
<key>com.apple.private.skywalk.register-user-pipe</key>
<true/>
<key>com.apple.private.sleepd</key>
<true/>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.SFUserNotificationTVLatency</string>
<string>com.apple.Sharing.HomePodRemoteNotifications</string>
<string>com.apple.Sharing.b7ce1794a1c8766816fc7b7500742862</string>
<string>com.apple.Sharing.TVRemoteNotifications</string>
<string>com.apple.Sharing.WatchRemoteNotifications</string>
</array>
<key>com.apple.private.usernotifications.settings</key>
<array>
<string>read</string>
</array>
<key>com.apple.private.voicememod.client</key>
<true/>
<key>com.apple.private.xpc.launchd.reboot</key>
<true/>
<key>com.apple.purplebuddy.budd.access</key>
<true/>
<key>com.apple.rapport.Client</key>
<true/>
<key>com.apple.rapport.people</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/Applications/</string>
<string>/private/var/mobile/Library/MessagesMetaData/</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-NearbyAction.log</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-NearbyInfo.log</string>
<string>/private/var/mobile/Library/Logs/CrashReporter/com.apple.sharing/SFBLEScanner-Prox.log</string>
<string>/private/var/mobile/Library/Preferences/com.apple.Home.plist</string>
<string>/private/var/mobile/Library/CoreBehavior/BehaviorMiner.sqlite</string>
<string>/private/var/mobile/Library/CoreBehavior/BehaviorMiner.sqlite-shm</string>
<string>/private/var/mobile/Library/CoreBehavior/BehaviorMiner.sqlite-wal</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Preferences/com.apple.palette.chestnut.plist</string>
<string>/Library/Preferences/com.apple.sharing.powerStatus.plist</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accessories.blepairing</string>
<string>com.apple.audio.hapticd</string>
<string>com.apple.bulletinboard.observerconnection</string>
<string>com.apple.carousel.wakegesturemonitor</string>
<string>com.apple.cdp.daemon</string>
<string>com.apple.CloudPhotoDerivativeGenerator</string>
<string>com.apple.commcenter.coretelephony.xpc</string>
<string>com.apple.CompanionLink</string>
<string>com.apple.corecaptured</string>
<string>com.apple.coreduetd.knowledge</string>
<string>com.apple.corefollowup.agent</string>
<string>com.apple.diagnosticextensionsd.sharing-wakeup</string>
<string>com.apple.distributed_notifications@Uv3</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.homed.xpc</string>
<string>com.apple.icloud.fmfd</string>
<string>com.apple.iconservices</string>
<string>com.apple.imagent.embedded.auth</string>
<string>com.apple.imdpersistence.IMDPersistenceAgent</string>
<string>com.apple.intents.intents-helper</string>
<string>com.apple.lsd.xpc</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.networkd_privileged</string>
<string>com.apple.PairingManager</string>
<string>com.apple.photoanalysisd</string>
<string>com.apple.rapport.people</string>
<string>com.apple.rapport</string>
<string>com.apple.SafariFoundation.AutoFillHelper</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
<string>com.apple.server.bluetooth.le.pipe.xpc</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.sharing.sharesheet</string>
<string>com.apple.Sharing.SharingHUDService</string>
<string>com.apple.sharing.transfer-observer</string>
<string>com.apple.sharingd.b332setup</string>
<string>com.apple.sharingd.paireddevice</string>
<string>com.apple.sharingd</string>
<string>com.apple.SharingServices</string>
<string>com.apple.SharingXPCHelper</string>
<string>com.apple.siri.VoiceShortcuts.xpc</string>
<string>com.apple.soundboardservices.server</string>
<string>com.apple.springboard.blockableservices</string>
<string>com.apple.sysdiagnose.service.xpc</string>
<string>com.apple.tailspind</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.usernotifications.usernotificationsettingsservice</string>
<string>com.apple.announced.server</string>
</array>
<key>com.apple.security.exception.mach-register.global-name</key>
<array>
<string>com.apple.sharingd.b332setup</string>
<string>com.apple.Sharing.SharingHUDService</string>
</array>
<key>com.apple.security.exception.managed-preference.read-only</key>
<array>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.Home</string>
<string>com.apple.homed</string>
<string>com.apple.MobileBluetooth.debug</string>
<string>com.apple.PeopleSuggester</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.assistant.support</string>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.Home</string>
<string>com.apple.homed</string>
<string>com.apple.MobileBluetooth.debug</string>
<string>com.apple.siri.shortcuts</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.UIKit</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.sharedpclogging</string>
</array>
<key>com.apple.share-services-discovery</key>
<true/>
<key>com.apple.sharing.AirDropPrivilegedInformation</key>
<true/>
<key>com.apple.sharing.Client</key>
<true/>
<key>com.apple.sharing.DeviceDiscovery</key>
<true/>
<key>com.apple.sharing.PasswordGranting</key>
<true/>
<key>com.apple.sharing.PasswordSharing</key>
<true/>
<key>com.apple.sharing.RemoteInteractionSession</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.sharing.Session</key>
<true/>
<key>com.apple.shortcuts.library-read-access</key>
<true/>
<key>com.apple.springboard.allowallcallurls</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.stereoleader.soundboard</key>
<true/>
<key>com.apple.studentd-access</key>
<true/>
<key>com.apple.tailspin.dump-output</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-call-capabilities</string>
<string>access-call-providers</string>
<string>access-calls</string>
<string>modify-calls</string>
</array>
<key>com.apple.wifi.eap-nearby-device-setup-config-copy</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>appleaccount</string>
<string>com.apple.airplay.pairing</string>
<string>com.apple.continuity.encryption</string>
<string>com.apple.continuity.unlock</string>
<string>com.apple.hap.pairing</string>
<string>com.apple.MediaRemote.pairing</string>
<string>com.apple.pairing</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.sharing.appleidauthentication</string>
<string>com.apple.sharing.cdb</string>
<string>com.apple.Sharing</string>
<string>com.apple.sharing.safaripasswordsharing</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>sharingd</string>
</array>
</dict>
</plist>
HasProblem
iCloud
iTunes
HomeKit
WiFi
Fixing
WiFiPerf
Internet
Hardware
Bluetooth
Thermal
Recovery
StereoNotFound
StereoVersion
StereoError
802.1x
NetworkProfile
NetworkNotShareable
NetworkProfileRequired
Unknown
Bluetooth
Certificate
ValidationRecord
NotSupported
AppleID
ManagedConfig
Discoverability
Siri
Home
AppSwitcher
Spotlight
NowPlaying
CarPlay
Login
Passcode
Today
LSNav
Camera
InCall
Auth
AdvData
Attrs
Distance
Name
RSSI
SSID
Prox
RLoc
Attrs
Devices
Prox
RelativeLocation
AdvData
Distance
RSSI
Attrs
Bubble
9Y>)F
?ffffff
Unknown
Bluetooth
Certificate
ValidationRecord
NotSupported
AppleID
ManagedConfig
Discoverability
@333333
?333333
?}}}}}}
DeviceClose
NeedsKeyboard
NeedsSetup
HasAuthTag
Failed
Date
DeviceIRK
EdPK
EdSK
Identity
IDSDeviceID
Model
Name
Type
FeatureFlags
Created
Forced
AccountID
UserAdded
ContactID
MediaRemoteID
MediaRouteID
SendersKnownAlias
AccessGroups
SDRunState
OnceManager
PushableTimer
InstanceCounter
FileProtectionType
NNSFileProtectionType
FileAttributeKey
NNSFileAttributeKey
CGImage
NCGImageRef
CNChangeHistoryChangeType
IntegerPacker
PackError
Foundation
DaemoniOSLibrary
ContactIDAndField
SDAirDropHashStoreInitializationOption
SDAirDropHashError
SDAirDropHashStore
SDAirDropHashStoreEntry
ShortHash
MediumHash
LongHash
SDAirDropHandlerIPA
SDAirDropHashStoreInMemory
DaemoniOSLibrary
SDAirDropContactHashManager
SDAirDropHashStoreCDB
DaemoniOSLibrary
SDXPCHelperImageCache
CacheError
SSSg5label_yp5valuetSg
ShySiG
So24OS_dispatch_source_timer_p
SuSg
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
$s16DaemoniOSLibrary18SDAirDropHashStoreP
_A3At
So16SDAirDropHandlerC
ySo15SFAirDropActionCG
ySS_yptG
ySDySSSo8NSNumberCGG
ySS_So8NSNumberCtG
SS_So8NSNumberCt
SDySSSo8NSNumberCG
ySSypG
SS_ypt
ySSSo8NSNumberCG
So15CUSystemMonitorC
So17OS_dispatch_queueC
So21SFTokenBucketWithDupsC
So14CNContactStoreC
So9CNContactC_Say
GtSg
So15CNKeyDescriptor_p
yypG
ySo15CNKeyDescriptor_pG
SSSg
So9CNContactCSg
ySSG
SiSnySiGIegyd_
SnySiG
Iegyo_
SnySiG
Iegnr_
ySiGSnySiGG
ySiG
So9CNContactC
So14CNLabeledValueC
_pSg
Suz_Xx
_pSgz_Xx
Siz_Xx
Gz_Xx
ypSg
ySSSg
ySSSg
_pGz_Xx
ShySSG
AAGz_Xx
ypXp
Sgz_Xx
So21CUKeyValueStoreReaderCySo6NSDataCADG
ShySo21CNChangeHistoryAnchorCG
ySay
G_G_Sit
ySay
ySay
_pSg
ySuG
SaySo15CNKeyDescriptor_pG
ySS5field_
8longHash
Sg06mediumC0tG
SS5field_
8longHash
Sg06mediumC0t
ySSSuG
ySo21CNChangeHistoryAnchorCG
ySSG
GSpySo8NSObjectCGSgSpyypGSgytIeglllr_
So8NSObjectC
SaySSG
ySnySiGG
_yptG
_ypt
So14NSUserDefaultsCSg
notStarted
inProgress
completed
failed
skip
onceList
noLaterThan
timer
identifier
wrongPackLength
sourcesPerTarget
_rawValue
RawValue
_ObjectiveCType
field
createNewStoreAndPersist
loadFromDiskIfNecessary
cdbDecodeSplitCountIncorrect
hashesAreIncorrect
storeUninitialized
storeDestroyed
cdbDecodeContactIDDecodeFailed
cdbDecodeContactFieldDecodeFailed
rateLimited
value
longHash
mediumHash
storage
shortHash
lastMediumByte
longToEntry
medToEntry
shorts
initialized
cnStore
storePreviouslyExisted
systemMonitor
hashManagerQ
bucket
contactStore
hashDB
activated
updateTimer
meCardInfo
numUnpersisted
reader
anchors
stagedAdditions
stagedDeletedIDs
initialized
destroyed
cnStore
imageDestinationCreateFailed
imageDestinationFinalizeFailed
imageSourceCreateFailed
airdrop_dbv2
airdrop_dbv3
AirDropHashDB
