@"FBSSceneTransitionContext"16@?0@"FBSMutableSceneSettings"8
AFUISceneHostingViewController.m
Invalid parameter not satisfying: %@
configuration
completionBlock
-[AFUISceneHostingViewController startHostingSceneForConfiguration:withCompletionBlock:]_block_invoke
#sceneHosting scene mismatch : old=%@ new=%@
PresentationManager-Scene%@
v16@?0@"UIMutableScenePresentationContext"8
v24@?0@"FBScene"8@"NSError"16
-[AFUISceneHostingViewController startDeferringHIDEventsIfNeeded]
-[AFUISceneHostingViewController invalidateAndPauseDeferringHIDEvents]
-[AFUISceneHostingViewController _updateSceneUIApplicationSceneSettingsWithBlock:]_block_invoke
v16@?0@"FBSMutableSceneSettings"8
v16@?0@"UIMutableApplicationSceneSettings"8
-[AFUISceneHostingViewController _updateSceneSafeAreaInsets]
-[AFUISceneHostingViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
-[AFUISceneHostingViewController _updateDeferralChainWithWindow:]
launching Siri.app
-[AFUISceneHostingViewController sceneController:sceneWasInvalidated:forReason:]
Scene was invalidated - scene=%@
-[AFUISceneHostingViewController sceneController:sceneDidUpdateClientSettings:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
sceneController
T@"AFUISceneController",&,N,V_sceneController
windowSceneHostingView
T@"UIView",&,N,V_windowSceneHostingView
presentation
T@"<UIScenePresenter>",&,N,V_presentation
invalidationAction
T@"FBSceneClientProviderInvalidationAction",&,N,V_invalidationAction
scene
T@"FBScene",&,N,V_scene
predicateInvalidationHandler
T@"<BSInvalidatable>",&,N,V_predicateInvalidationHandler
pauseDeferrals
TB,N,V_pauseDeferrals
currentOrientation
Tq,N,V_currentOrientation
safeAreaInsetsAreSuspended
TB,N,V_safeAreaInsetsAreSuspended
effectiveSafeAreaInsets
T{UIEdgeInsets=dddd},N,V_effectiveSafeAreaInsets
suspendedSafeAreaInsets
T{UIEdgeInsets=dddd},N,V_suspendedSafeAreaInsets
deferralMode
Tq,R,N,V_deferralMode
T@"AFUISceneConfiguration",R,N,V_configuration
inFluidDismissal
TB,N,GisInFluidDismissal,V_inFluidDismissal
/AppleInternal/Library/Assistant/UIPlugins/Debug.siriUIBundle
AFUIDebugController
AFUIInternalDebugController
-[AFUISiriView _updateSiriStatusViewForMode:]
v8@?0
-[AFUISiriView setFlamesViewDeferred:]
-[AFUISiriView setVoiceActivationMaskViewVisible:]
v12@?0B8
v16@?0@"UIImage"8
radarBug
DnDwDSiri
position.y
opacity
Animation Group
-[AFUISiriView siriDidActivateFromSource:]
remoteContentView
T@"UIView",&,N
siriSessionState
Tq,N
mode
dataSource
T@"<AFUISiriViewDataSource>",W,N,V_dataSource
delegate
T@"<AFUISiriViewDelegate>",W,N,V_delegate
disabled
TB,N,V_disabled
foregroundView
T@"UIView",R,N,V_foregroundView
foregroundContainerView
T@"UIView",R,N,V_foregroundContainerView
backgroundBlurView
T@"_UIBackdropView",R,N
statusViewHeight
Td,R,N
Tq,N,V_siriSessionState
Tq,N,V_mode
T@"UIView",&,N,V_remoteContentView
DISABLE_AND_DELETE
DISABLE_AND_DELETE_FOOTER
DISABLE_AND_DELETE_PROMPT_TITLE_MULTI_USER
DISABLE_AND_DELETE_PROMPT_MULTI_USER
DISABLE_AND_DELETE_PROMPT_CANCEL_MULTI_USER
DISABLE_AND_DELETE_PROMPT_TITLE
DISABLE_AND_DELETE_PROMPT
DISABLE_AND_DELETE_PROMPT_OK
DISABLE_AND_DELETE_PROMPT_CANCEL
v16@?0@"NSError"8
-[AFUICloudStorageViewController _disableAndDeleteCloudSync]_block_invoke
Disable
v32@?0@8Q16^B24
-[AFUISiriRemoteSceneViewController init]
-[AFUISiriRemoteSceneViewController invalidate]
-[AFUISiriRemoteSceneViewController _connection]
com.apple.siri.app
-[AFUISiriRemoteSceneViewController serviceViewControllerProxyWithErrorHandler:]_block_invoke
Connection to Siri.app was invalidated pid=%d _remoteConnection=%@
-[AFUISiriRemoteSceneViewController _invalidated]
Connection to Siri.app was interrupted pid=%d _remoteConnection=%@
-[AFUISiriRemoteSceneViewController _interrupted]
-[AFUISiriRemoteSceneViewController startHostingSceneForConfiguration:withCompletionBlock:]_block_invoke_2
v20@?0B8@"NSError"12
-[AFUISiriRemoteSceneViewController _handleInvalidationForReason:explanation:]_block_invoke
-[AFUISiriRemoteSceneViewController viewDidAppear:]
-[AFUISiriRemoteSceneViewController viewDidDisappear:]
-[AFUISiriRemoteSceneViewController dismissViewControllerAnimated:completion:]_block_invoke
-[AFUISiriRemoteSceneViewController sessionDelegate]_block_invoke
-[AFUISiriRemoteSceneViewController speechSynthesisDelegate]_block_invoke
-[AFUISiriRemoteSceneViewController serviceRequestsDismissalWithDelayForTTS:userInfo:withDismissalReason:]
-[AFUISiriRemoteSceneViewController serviceViewControllerRequestsDismissalWithDismissalReason:completion:]
-[AFUISiriRemoteSceneViewController updateToPresentationWithIdentifier:presentationProperties:animated:completion:]_block_invoke
-[AFUISiriRemoteSceneViewController updateRemoteSceneWithFrontMostAppInterfaceOrientation:]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillActivateFromSource:]_block_invoke
-[AFUISiriRemoteSceneViewController siriDidActivateFromSource:]_block_invoke
-[AFUISiriRemoteSceneViewController setRequestOptions:]_block_invoke
-[AFUISiriRemoteSceneViewController preloadPresentationBundleWithIdentifier:]_block_invoke
-[AFUISiriRemoteSceneViewController preloadPluginBundles]_block_invoke
-[AFUISiriRemoteSceneViewController showPresentationWithIdentifier:properties:lockState:]_block_invoke
Invalidating because [AFUISiriRemoteSceneViewController siriDidDeactivate]
-[AFUISiriRemoteSceneViewController siriDidDeactivate]_block_invoke_2
-[AFUISiriRemoteSceneViewController siriWillShowPasscodeUnlockAndCancelRequest:]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillHidePasscodeUnlockForResult:]_block_invoke
-[AFUISiriRemoteSceneViewController siriDidHidePasscodeUnlock]_block_invoke
-[AFUISiriRemoteSceneViewController startRequestForText:]_block_invoke
-[AFUISiriRemoteSceneViewController siriKeyboardViewDidChange:]_block_invoke
-[AFUISiriRemoteSceneViewController setStatusBarFrame:]_block_invoke
-[AFUISiriRemoteSceneViewController setStatusViewHeight:]_block_invoke
-[AFUISiriRemoteSceneViewController setBottomContentInset:]_block_invoke
-[AFUISiriRemoteSceneViewController setSession:]_block_invoke
-[AFUISiriRemoteSceneViewController setSpeechSynthesis:]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveHelpAction]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveReportBugAction]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveBugButtonLongPress]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveShortTapAction]_block_invoke
-[AFUISiriRemoteSceneViewController applicationWillResignActive]_block_invoke
-[AFUISiriRemoteSceneViewController applicationWillEnterForeground]_block_invoke
-[AFUISiriRemoteSceneViewController applicationDidBecomeActive]_block_invoke
-[AFUISiriRemoteSceneViewController setWaitingForTelephonyToStart:]_block_invoke
-[AFUISiriRemoteSceneViewController hasContentAtPoint:completion:]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillBeginTearDownForDismissalReason:]_block_invoke
-[AFUISiriRemoteSceneViewController emitUIStateTransitionForSiriDismissalWithDismissalReason:]_block_invoke
-[AFUISiriRemoteSceneViewController emitInstrumentationEvent:]_block_invoke
-[AFUISiriRemoteSceneViewController dealloc]
remoteConnection
T@"NSXPCConnection",&,N,V_remoteConnection
T@"<AFUISiriRemoteSceneViewControllerDataSource>",W,N,V_dataSource
T@"<AFUISiriRemoteSceneViewControllerDelegate>",W,N,V_delegate
viewServiceApplicationInfo
T@"AFApplicationInfo",R,N,V_viewServiceApplicationInfo
com.apple.LocalAuthentication.ui.presented
AFUISiriSession.m
Session must have a delegate queue
-[AFUISiriSession dealloc]
v16@?0@"<AFUISiriSessionDelegate>"8
-[AFUISiriSession _connection]
-[AFUISiriSession stateMachine:didTransitionFromState:forEvent:]
-[AFUISiriSession _performTransitionForEvent:]
-[AFUISiriSession _startRequestWithFinalOptions:completion:]_block_invoke
v24@?0@"NSArray"8@"NSError"16
-[AFUISiriSession _startRequestWithFinalOptions:completion:]
Unexpected UI request options.
-[AFUISiriSession startRequestWithOptions:completion:]
Completion block of start request was dropped.
No network.
Device not unlocked since boot.
-[AFUISiriSession startRequestWithOptions:completion:]_block_invoke
Session delegate vetoed.
v16@?0@"SASRequestOptions"8
-[AFUISiriSession assistantConnectionAudioSessionDidBeginInterruption:]
v16@?0@"AceObject<SAAceCommand>"8
refId
-[AFUISiriSession assistantConnection:receivedCommand:completion:]
-[AFUISiriSession assistantConnection:receivedCommand:completion:]_block_invoke_2
-[AFUISiriSession _performPunchoutCommand:delegate:completion:]
-[AFUISiriSession assistantConnection:didFinishAcousticIDRequestWithSuccess:]
-[AFUISiriSession assistantConnection:requestFailedWithError:requestClass:]
-[AFUISiriSession assistantConnectionRequestFinished:]
-[AFUISiriSession assistantConnection:willProcessStartPlayback:intent:completion:]
-[AFUISiriSession assistantConnection:startPlaybackDidFail:]
Failed to play phatic prompt.
v16@?0q8
Unsupported Two-Shot prompt type %ld.
v16@?0@"<AFSpeechRecordingAlertBehaviorMutating>"8
v16@?0@"<AFSpeechRecordingAlertPolicyMutating>"8
dictionary
v16@?0@"NSArray"8
-[AFUISiriSession _startSpeechRequestWithSpeechRequestOptions:isInitialBringUp:completion:]
No speech request ispatch group.
No AFConnection.
AFConnection is already recording.
-[AFUISiriSession _startDirectActionRequestWithString:appID:withContext:completion:]
-[AFUISiriSession _startContinuityRequestWithInfo:completion:]
-[AFUISiriSession _startRequestWithInfo:completion:]
-[AFUISiriSession clearContext]
-[AFUISiriSession resetContextTypes:]
-[AFUISiriSession _handleUnlockDeviceCommand:completion:]
Core duet logging queue
-[AFUISiriSession end]
-[AFUISiriSession endForReason:]
-[AFUISiriSession _updateActiveAccount:]_block_invoke
-[AFUISiriSession _invocationContextFromDirectActionEvent:appBundleIdentifier:]
sessionDelegateContext
T@"NSArray",&,N,V_sessionDelegateContext
directActionApplicationContexts
T@"NSArray",&,N,V_directActionApplicationContexts
connection
T@"AFConnection",R,N,G_connection
currentSpeechRequestGroup
T@"NSObject<OS_dispatch_group>",&,N,G_currentSpeechRequestGroup,S_setCurrentSpeechRequestGroup:,V_currentSpeechRequestGroup
instrumentationTurnContext
T@"AFAnalyticsTurnBasedInstrumentationContext",&,N,G_instrumentationTurnContext,S_setInstrumentationTurnContext:,V_instrumentationTurnContext
T@"<AFUISiriSessionDelegate>",&,N,V_delegate
localDataSource
T@"<AFUISiriSessionLocalDataSource>",W,N,V_localDataSource
localDelegate
T@"<AFUISiriSessionLocalDelegate>",W,N,V_localDelegate
eyesFree
TB,N,GisEyesFree,V_eyesFree
isProcessingAcousticIdRequest
TB,R,N,V_isProcessingAcousticIdRequest
siriSessionInfo
T@"AFUISiriSessionInfo",&,N,V_siriSessionInfo
INStartCallIntent
Class getINStartCallIntentClass(void)_block_invoke
Unable to find class %s
void *IntentsLibrary(void)
/System/Library/Frameworks/Intents.framework/Intents
/System/Library/Frameworks/Intents.framework/Contents/MacOS/Intents
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
/System/Library/PrivateFrameworks/CoreDuet.framework/Contents/MacOS/CoreDuet
_DKSystemEventStreams
Class get_DKSystemEventStreamsClass(void)_block_invoke
void *CoreDuetLibrary(void)
T@"<AFUISiriLanguageDelegate>",R,W,N,G_delegate,V_delegate
spokenLanguageCode
T@"NSString",C,N,S_setSpokenLanguageCode:,V_spokenLanguageCode
setupAssistantHasCompletedInitialRunChecked
TB,N,V_setupAssistantHasCompletedInitialRunChecked
setupAssistantHasCompletedInitialRunAvailable
TB,N,G_setupAssistantHasCompletedInitialRunAvailable,V_setupAssistantHasCompletedInitialRunAvailable
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
/System/Library/PrivateFrameworks/SetupAssistant.framework/Contents/MacOS/SetupAssistant
BOOL soft_BYSetupAssistantHasCompletedInitialRun(void)
AFUISiriLanguage.m
BYSetupAssistantHasCompletedInitialRun
void *SetupAssistantLibrary(void)
AFUISceneConfiguration.m
displayConfiguration
-[AFUISceneConfiguration _initWithInitialBounds:displayConfiguration:]
AFUISceneInvalidationReasonUnknown
AFUISceneInvalidationReasonSiriDidDeactivate
AFUISceneInvalidationReasonDealloc
AFUISceneInvalidationReasonDisplayIdentityChanged
AFUISceneInvalidationReasonXpcInterrupted
AFUISceneInvalidationReasonXpcInvalidated
+[AFUISceneConfiguration stringForInvalidationReason:]
-[AFUISceneConfiguration _setupPlatformSpecificDefaultSettings]
, foreground: %@, bounds: %@, safeAreaInsets: %@, deactivationReasonMask: %@
bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_bounds
foreground
TB,N,V_foreground
launchIntent
Tq,N,V_launchIntent
preferredDeferralMode
Tq,N,V_preferredDeferralMode
cancelSceneLoadingAfterTimeout
TB,N,V_cancelSceneLoadingAfterTimeout
sceneLoadingTimeOutDuration
Td,N,V_sceneLoadingTimeOutDuration
initialBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_initialBounds
initialSafeAreaInsets
T{UIEdgeInsets=dddd},N,V_initialSafeAreaInsets
sceneParameters
T@"FBSSceneParameters",C,N,V_sceneParameters
userInterfaceStyle
Tq,N,V_userInterfaceStyle
deactivationReasonMask
TQ,N,V_deactivationReasonMask
AFUISiriSessionStateIdle
AFUISiriSessionStateListening
AFUISiriSessionStateThinking
AFUISiriSessionStateSuccess
AFUISiriSessionEventDirectRequestBegan
AFUISiriSessionEventSpeechRecordingBegan
AFUISiriSessionEventSpeechRecordingEnded
AFUISiriSessionEventSpeechRecordingCancelled
AFUISiriSessionEventSpeechRecordingFailed
AFUISiriSessionEventRequestCancelled
AFUISiriSessionEventRequestFinished
AFUISiriSessionEventRequestFailed
AFUISiriSessionEventCommandStarted
1.2.11
-[NSData(AFUIDebugAdditions) afui_dataByCompressingWithGzip]
yyyy
com.apple.siri
AFUISceneController(%p): <Transaction: %@
Scene (sceneID: %@, sceneState: %ld) (%@)>
#sceneHosting Invalidating scene because [AFUISceneController dealloc]
AFUISceneController.m
#sceneHosting Request is not allowed when we already have a scene or in flight request : scene=%@ createTransaction=%@
#sceneHosting Invalidating scene because displayIdentity changed from "%@" to "%@" for _scene:%@
-[AFUISceneController requestSceneViewWithConfiguration:completionBlock:]
SiriHostedScene-%@-%@
@"FBProcessExecutionContext"8@?0
-[AFUISceneController requestSceneViewWithConfiguration:completionBlock:]_block_invoke
-[AFUISceneController updateSceneViewWithConfiguration:]
-[AFUISceneController sceneLoadingTimeOutDidOccur]
timeout
-[AFUISceneController invalidateSceneForReason:explanation:]
deactivating
#sceneHosting createTransaction should be gone by now ; %@
-[AFUISceneController sceneDidInvalidate:]
siri prewarming
-[AFUISceneController transaction:didLaunchProcess:]_block_invoke
T@"<AFUISceneControllerDelegate>",W,N,V_delegate
AFUIStateMachine.m
initialState != NSNotFound
-[AFUIStateMachine _endStateNumberFromDictionary:forEvent:]
state
Tq,N,S_setState:,V_state
endStatesByEventByStartState
T@"NSMutableDictionary",&,N,G_endStatesByEventByStartState,V_endStatesByEventByStartState
T@"<AFUIStateMachineDelegate>",W,N,V_delegate
AFUISpeechSynthesisElement.m
eligibilityChangedQueue must be specified. eligibleForProcessing and eligibleForSynthesis updates are performed on this queue.
v20@?0@"NSString"8B16
<%@ %p; text="%@"; identifier=%@; delayed=%@; provisional=%@; eligibleForProcessing=%@; eligibleForSynthesis=%@; canUseServerTTS=%@; language=%@; gender=%@; audioByteCount=%@; completion=%p>
-[AFUISpeechSynthesisElement executeCompletion]
-[AFUISpeechSynthesisElement _setEligibleForProcessing:]
-[AFUISpeechSynthesisElement _setEligibleForSynthesis:]
eligibleForSynthesis
TB,N,GisEligibleForSynthesis,S_setEligibleForSynthesis:,V_eligibleForSynthesis
eligibleForProcessing
TB,N,GisEligibleForProcessing,S_setEligibleForProcessing:,V_eligibleForProcessing
completion
T@?,R,N,G_completion,V_completion
text
T@"NSString",C,N,S_setText:,V_text
preparationBlockCompleted
TB,S_setPreparationBlockCompleted:,V_preparationBlockCompleted
durationHasElapsed
TB,S_setDurationHasElapsed:,V_durationHasElapsed
audioData
T@"SAUIAudioData",R,N,V_audioData
identifier
T@"NSString",R,N,V_identifier
language
T@"NSString",R,N,V_language
gender
T@"NSString",R,N,V_gender
isPhonetic
TB,N,V_isPhonetic
provisional
TB,R,N,GisProvisional,V_provisional
delayed
TB,N,GisDelayed,V_delayed
canUseServerTTS
TB,N,V_canUseServerTTS
speechRequest
T@"VSSpeechRequest",&,N,V_speechRequest
presynthesizedAudioRequest
T@"VSPresynthesizedAudioRequest",&,N,V_presynthesizedAudioRequest
synthesisResult
Tq,N,V_synthesisResult
T@"<AFUISpeechSynthesisElementDelegate>",W,N,V_delegate
animationIdentifier
T@"NSString",R,N,V_animationIdentifier
analyticsContext
T@"NSDictionary",R,N,V_analyticsContext
speakableContextInfo
T@"NSDictionary",&,N,V_speakableContextInfo
shouldCache
TB,N,V_shouldCache
synthesizesWhileRecording
TB,N,V_synthesizesWhileRecording
VoiceServicesErrorDomain
ServerTTSErrorDomain
AFUISpeechSynthesisQueueDidEmptyNotification
\mrk=play=phat\
SpeechSynthesisProcessingElementsQueue
SpeechSynthesisPendingElementsQueue
v32@?0@"AFUISpeechSynthesisElement"8Q16^B24
-[AFUISpeechSynthesis _cancelByCancellingActiveElementsOnly:]_block_invoke
-[AFUISpeechSynthesis invalidate]
-[AFUISpeechSynthesis speechSynthesisElementSynthesisEligibilityDidChange:]
-[AFUISpeechSynthesis speechSynthesizer:didStopPresynthesizedAudioRequest:atEnd:error:]
-[AFUISpeechSynthesis speechSynthesizer:didFinishPresynthesizedAudioRequest:withInstrumentMetrics:error:]_block_invoke
-[AFUISpeechSynthesis speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:]_block_invoke
-[AFUISpeechSynthesis speechSynthesizer:didFinishSpeakingRequest:withInstrumentMetrics:]
-[AFUISpeechSynthesis setOutputVoice:]
-[AFUISpeechSynthesis setAudioSessionID:]
-[AFUISpeechSynthesis _enqueueText:audioData:identifier:language:gender:isPhonetic:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:preparationIdentifier:shouldCache:synthesizesWhileRecording:completion:animationIdentifier:analyticsContext:speakableContextInfo:]
v16@?0@?<v@?@"NSString"B>8
-[AFUISpeechSynthesis _enqueueText:audioData:identifier:language:gender:isPhonetic:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:preparationIdentifier:shouldCache:synthesizesWhileRecording:completion:animationIdentifier:analyticsContext:speakableContextInfo:]_block_invoke
-[AFUISpeechSynthesis processDelayedItem:]
-[AFUISpeechSynthesis _handleAudioData:completion:]
-[AFUISpeechSynthesis _handleAudioData:completion:]_block_invoke
v20@?0I8@"NSError"12
/+%@
-[AFUISpeechSynthesis _handleText:completion:]
matches
mismatches
-[AFUISpeechSynthesis _handleText:completion:]_block_invoke
v16@?0@"VSSpeechRequest"8
v16@?0@"AFVoiceInfo"8
-[AFUISpeechSynthesis _handleText:completion:]_block_invoke_3
-[AFUISpeechSynthesis _processElementQueue]_block_invoke
-[AFUISpeechSynthesis _processElementQueue]_block_invoke_2
-[AFUISpeechSynthesis _findVoiceForLanguage:gender:completion:]_block_invoke
female
male
v32@?0@"AFVoiceInfo"8Q16^B24
-[AFUISpeechSynthesis _processProvisionalElements]
elementQueue
T@"AFQueue",R,N,G_elementQueue,V_elementQueue
activeElements
T@"NSMutableArray",R,N,G_activeElements,V_activeElements
delayedElements
T@"NSMutableDictionary",R,N,G_delayedElements,V_delayedElements
T@"<AFUISpeechSynthesisLocalDelegate>",W,N,V_localDelegate
T@"<AFUISpeechSynthesisDelegate>",&,N,V_delegate
var/mobile/Library/Caches/com.apple.siri.SiriGuideUpdateCache.plist
com.apple.siri.AFUIGuideCacheManager
AppleKeyboardsPreferencesChangedNotification
-[AFUIGuideCacheManager updateCacheWithGuideUpdate:completion:]
-[AFUIGuideCacheManager updateCacheWithGuideUpdate:completion:]_block_invoke
-[AFUIGuideCacheManager _clearCachedGuide]
-[AFUIGuideCacheManager _clearCachedGuide]_block_invoke
-[AFUIGuideCacheManager _checkGuideUpdateUsingAFClientLiteWithTag:]_block_invoke
v16@?0@"SABaseCommand"8
-[AFUIGuideCacheManager _shouldCheckForUpdateAtDate:lastAppUpdateTime:]_block_invoke
-[AFUIGuideCacheManager _updateLastCheckedWithDate:]_block_invoke
-[AFUIGuideCacheManager _cachedGuideUpdate]_block_invoke
-[AFUIGuideCacheManager _aceObjectDictionaryAtFilepath:]
cachedGuideTag
T@"NSNumber",R,N
cachedGuideSnippet
T@"SAGuidanceGuideSnippet",R,N
cachedSuggestedUtterances
T@"SAGuidanceSuggestedUtterances",R,N
options
T@"SASRequestOptions",R,N,V_options
Tq,R,N,V_state
v16@?0@"AFXPCWrapper"8
AFUIPresentationPropertiesSupportsTouchKey
AFUIPresentationPropertiesRequestSourceKey
AFUIPresentationPropertiesShouldSuppressErrorTTSKey
clientWindowContextID
TI,R,N
TI,N
car.fill
eyesFreeMode
Tq,R,N,V_eyesFreeMode
supportsSecureCoding
TB,R
assistantVersion
T@"NSString",C,N,V_assistantVersion
activeAccount
T@"AFAccount",C,N,V_activeAccount
userAccountCount
T@"NSNumber",C,N,V_userAccountCount
T@"NSString",R,C,N,V_identifier
com.apple.AssistantUIFramework
com.apple.siri.assistantUI.LanguageCodeDidChangeNotification
AFUISetLanguageCode
+[AFUIUtilities parsedUtteranceFromText:context:]
+[AFUIUtilities orbViewModeForSiriSessionState:]
mapitem
https://
.siri.apple.com
%@ (%@)
(%@)
Library
Assistant
PreviousConversation
_DidShowEmergencyCallViewNotification
_WillLeaveEmergencyCallViewNotification
BOOL AFUIGraphicalFloatsEqualForScale(CGFloat, CGFloat, CGFloat)
AFUIUtilities.m
AFUIGraphicalFloatsEqualForScale cannot compute equivalence for scale of 0
ComponentName
ComponentVersion
ComponentID
Title
Description
Classification
Reproducibility
Screenshot
Attachments
Keywords
DeviceIDs
tap-to-radar
Serious Bug
I Didn't Try
v32@?0@"AFAccount"8Q16^B24
image/png
-[AFUITapToRadarManager attachData:name:mimeType:]
-[AFUITapToRadarManager attachFileAtPath:image:]
Please describe the bug you encountered:
- Hostname: %@
en-US
- Siri language: %@
- Context Collector: 
- Context Collectors: 
  %@
v32@?0@"NSString"8Q16^B24
 "%@"
T@"<AFUIBugReportingDelegate>",W,N
hostname
T@"NSString",C,N,G_hostname,V_hostname
lastUserText
T@"NSString",C,N,G_lastUserText,V_lastUserText
siriLanguage
T@"NSString",C,N,G_siriLanguage,V_siriLanguage
contextCollectorsInfo
T@"NSArray",C,N,G_contextCollectorsInfo,V_contextCollectorsInfo
tapToRadarParameters
T@"NSMutableDictionary",&,N,G_tapToRadarParameters,V_tapToRadarParameters
attachmentPaths
T@"NSMutableArray",&,N,G_attachmentPaths,V_attachmentPaths
T@"<AFUIBugReportingDelegate>",W,N,V_delegate
layer
T@"CAGradientLayer",R,D,N
gradientHeight
Td,N,V_gradientHeight
gradientOrigin
T{CGPoint=dd},N,V_gradientOrigin
gradientType
T@"NSString",&,N,V_gradientType
gradientStartOpacity
Td,N,V_gradientStartOpacity
gradientEndOpacity
Td,N,V_gradientEndOpacity
com.apple.SiriViewService
-[AFUIPreferences initWithDefaultsAtURL:]
T@"<AFUIPreferencesDelegate>",W,N,V_delegate
-[AFUIBugReportPresenter _requestToPresentDebugController:]_block_invoke
-[AFUIBugReportPresenter _requestToOpenURL:]_block_invoke_2
-[AFUIBugReportPresenter _requestToOpenURL:]_block_invoke
-[AFUIBugReportPresenter _requestToPresentInternalDebugController:]_block_invoke_2
-[AFUIBugReportPresenter _conversationDataFromConversation:]
Siri Debug
v16@?0@"UIAlertAction"8
File a radar
Siri Internal Settings
Internal Debug UI
Cancel
prefs:root=INTERNAL_SETTINGS&path=Siri
Would you like to attach a screenshot ?
presentedAlertController
T@"UIAlertController",&,N,S_setPresentedAlertController:,V_presentedAlertController
T@"<AFUIBugReportPresentingDelegate>",W,V_delegate
command
T@"SAUIDelayedActionCommand",R,N,V_command
assertion
T@"BKSProcessAssertion",R,N,V_assertion
-[AFUIDelayedActionCommandCache enqueueDelayedActionCommand:completion:]
SiriDelayedActionCommandAssertion-%@
-[AFUIDelayedActionCommandCache cancelDelayedActionWithDelayedActionCancelCommand:completion:]
-[AFUIDelayedActionCommandCache _performDelayedActionCommandTimerAction:]
-[AFUIDelayedActionCommandCache invalidatePendingCommands]
-[AFUIDelayedActionCommandCache _invalidateDelayedActionTimer:withKey:]
-[AFUIDelayedActionCommandCache performDismissalCommands]
-[AFUIDelayedActionCommandCache _performCommandsWithDelayedActionCommand:]
-[AFUIDelayedActionCommandCache _performCommandsWithDelayedActionCommand:]_block_invoke_2
-[AFUIDelayedActionCommandCache _performCommandsWithDelayedActionCommand:]_block_invoke
v32@?0@"<SAClientBoundCommand>"8Q16^B24
-[AFUISiriTapPanDismissalPolicyManager idleAndQuietDidChange:forSessionState:dimmingLayerVisible:]
-[AFUISiriTapPanDismissalPolicyManager idleAndQuietDidChange:forSessionState:]
-[AFUISiriTapPanDismissalPolicyManager dimmingLayerVisibilityDidChange:forSessionState:]
AFUISiriTapPanDismissalPolicyManager.m
Can't perform policy updates for iPad from a different device class
-[AFUISiriTapPanDismissalPolicyManager _dismissalPolicyForPassThroughUnlessDimmed:forSessionState:]
-[AFUISiriTapPanDismissalPolicyManager _setShouldDismissForTapsAndPans:shouldDelayDelegateUpdate:]
shouldDismissForTapsAndPans
TB,N,G_shouldDismissForTapsAndPans,S_setShouldDismissForTapsAndPans:,V_shouldDismissForTapsAndPans
idleAndQuiet
TB,N,G_idleAndQuiet,S_setIdleAndQuiet:,V_idleAndQuiet
dimmingLayerVisible
TB,N,G_dimmingLayerVisible,S_setDimmingLayerVisible:,V_dimmingLayerVisible
dismissalPolicy
Tq,N,G_dismissalPolicy,S_setDismissalPolicy:,V_dismissalPolicy
T@"<AFUISiriTapPanDismissalPolicyManagerDelegate>",W,N,G_delegate,S_setDelegate:,V_delegate
AFUISpeechSynthesisResultFinished
AFUISpeechSynthesisResultFailed
AFUISpeechSynthesisResultCancelled
AFUISpeechSynthesisResultUnknown
#TRUNCATED
SiriUserUtteranceKeyboardInitiated
@{tts#
\pause=500\}
_DKLocationApplicationActivityMetadataKey-phoneNumber
com.apple.siri.businessLocation
/app/locationActivity
AFUIStoreServicesData
RegionalBehaviorGB18030
location-reminders
DeviceSupportsNavigation
CellularTelephonyCapability
FEET_ABBREVIATION
Localizable
MILES_ABBREVIATION
METERS_ABBREVIATION
KILOMETERS_ABBREVIATION
-[SADistance(AssistantUIAdditions) afui_abbreviatedUnit]
-[SAUIAppPunchOut(AssistantUIAdditions) afui_populateStoreServicesData:]_block_invoke_2
-[SAUIAppPunchOut(AssistantUIAdditions) afui_populateStoreServicesData:]_block_invoke
v24@?0@"AMSLookupResult"8@"NSError"16
PUNCHOUT_FAILURE_FOR_APP
SPEAKABLE_PUNCHOUT_FAILURE_FOR_APP
PUNCHOUT_FAILURE_GENERIC
PUNCHOUT_APP_NOT_AVAILABLE_IN_STOREFRONT
SPEAKABLE_PUNCHOUT_APP_NOT_AVAILABLE_IN_STOREFRONT
INSTALL_APP_BUTTON_TITLE
%@://%@
afui_keyboardInitiated
TB,N,Gafui_isKeyboardInitiated,SsetAfui_KeyboardInitiated:
com.apple.MobileSMS
com.apple.mobilePhone
com.apple.siri.Weather
com.apple.siri.Calendar
com.apple.siri.News
com.apple.cmas
com.apple.mobileipod
com.apple.Music
com.apple.maps
AFUIStarkDirectActionStringForRequestOptions
AFUIStarkBackgroundViewModeUnset
AFUIStarkBackgroundViewModeSmall
AFUIStarkBackgroundViewModeFullScreen
AFUIStarkBackgroundViewModeFullScreenSystem
AFUIStarkBackgroundViewModeGetName
AFUIStarkBackgroundViewModeForRequestSource
/System/Library/Assistant/DebugOverrides.plist
materialView
T@"UIView",&,N,V_materialView
lightenSourceOverView
T@"UIView",&,N,V_lightenSourceOverView
plusDView
T@"UIView",&,N,V_plusDView
-[AFUIDisambiguationAnalyticsManager logDisambiguationItemSelected:]
manual
type
aceId
title
@"NSDictionary"8@?0
@unionOfArrays.self
T@"<AFUIDisambiguationAnalyticsManagerDataSource>",W,N,V_dataSource
listItems
T@"NSArray",&,N,V_listItems
disambiguationAssistance
T@"<AFDisambiguationAssistance>",&,N,V_disambiguationAssistance
com.apple.siri.Siriland
requestOptions
T@"SASRequestOptions",R,N,V_requestOptions
-[AFUIAudioPlayer startPlaying]
AFUIAudioPlayer.m
This method should be overwritten by child class!
-[AFUIAudioPlayer audioPlayerDidFinishPlaying:successfully:]
player
T@"AVAudioPlayer",&,N,G_player,S_setPlayer:,V_player
T@"<AFUIAudioPlayerDelegate>",W,N,V_delegate
playbackCommand
T@"AceObject",&,N,V_playbackCommand
deactivateAudioSessionOnPlaybackFinished
TB,N,V_deactivateAudioSessionOnPlaybackFinished
conversationItemIdentifier
T@"NSUUID",W,N,V_conversationItemIdentifier
com.apple.siri.EyesFree
com.apple.siri.CarDisplay
SpeechRecognition
UUID
VIEWMODE
-[AFUISiriViewController initWithConnection:configuration:requestSource:]
Siri Remote View Controller Message Queue
B12@?0B8
-[AFUISiriViewController initWithConnection:configuration:requestSource:]_block_invoke
SiriUI
persistent_phone
-[AFUISiriViewController dealloc]
-[AFUISiriViewController requestStatusBarVisible:animated:completion:]
AFUISiriViewController.m
%@ can only be used on the main thread
-[AFUISiriViewController enterUITrackingMode]
-[AFUISiriViewController exitUITrackingMode]
-[AFUISiriViewController proximityStatusChanged:]
-[AFUISiriViewController animatedAppearanceWithFactory:completion:]
-[AFUISiriViewController animatedDisappearanceWithFactory:completion:]
-[AFUISiriViewController animatedDisappearanceWithFactory:completion:]_block_invoke
-[AFUISiriViewController setFluidDismissalState:]
-[AFUISiriViewController loadView]
com.apple.siri.ui.begin
com.apple.siri.ui.end
-[AFUISiriViewController viewWillAppear:]
-[AFUISiriViewController viewDidAppear:]
-[AFUISiriViewController viewWillDisappear:]
-[AFUISiriViewController viewDidDisappear:]
-[AFUISiriViewController _setVoiceTriggerEnabled:]
Enabled
Disabled
No change
-[AFUISiriViewController _presentRemoteViewController]
-[AFUISiriViewController _presentRemoteViewController]_block_invoke
-[AFUISiriViewController siriRemoteViewControllerDidFinishDismissing:]
-[AFUISiriViewController dismissSiriRemoteViewController:delayForTTS:userInfo:withDismissalReason:]
-[AFUISiriViewController siriRemoteViewController:launchApplicationWithBundleIdentifier:withURL:launchOptions:replyHandler:]
-[AFUISiriViewController siriRemoteViewController:requestsDismissalWithReason:withCompletion:]
-[AFUISiriViewController _setStatusViewHidden:]
-[AFUISiriViewController _setShowKeyboardIfTextInputEnabled:minimized:]
requestSource
-[AFUISiriViewController _handleMicButtonTapFromSource:]
Unknown Siri status session state %ld
-[AFUISiriViewController _handleMicButtonLongPressBeganFromSource:]
-[AFUISiriViewController _handleMicButtonLongPressEndedFromSource:]
ASSISTANT_UNLOCK_TITLE
-[AFUISiriViewController showPasscodeUnlockScreenForRequest:unlockCompletion:]
ASSISTANT_REMOTE_AUTHENTICATION_TITLE
ASSISTANT_REMOTE_AUTHENTICATION_SUBTITLE
ASSISTANT_FIRST_UNLOCK_TITLE
-[AFUISiriViewController siriDidDeactivate]
-[AFUISiriViewController setCarDNDActive:]
-[AFUISiriViewController startRequestWithOptions:completion:]
No UI request options.
-[AFUISiriViewController handleViewFullyRevealed]
-[AFUISiriViewController _holdToTalkTriggerDidReleaseFromSource:]
-[AFUISiriViewController _holdToTalkThresholdHasElapsed]
-[AFUISiriViewController _transitionToAutomaticEndpointMode]
-[AFUISiriViewController _exitHoldToTalkMode]
-[AFUISiriViewController _activationTriggerDidRelease:]
-[AFUISiriViewController startRequestWithActivationTrigger:completion:]
-[AFUISiriViewController siriSessionWillEnd:]
-[AFUISiriViewController siriSessionDidEnd:]
-[AFUISiriViewController siriSession:speechRecordingDidBeginOnAVRecordRoute:]
-[AFUISiriViewController shouldNonLocalDelegateHandlePunchouts]
-[AFUISiriViewController handlePunchoutCommand:completion:]
-[AFUISiriViewController handlePunchoutCommand:completion:]_block_invoke
-[AFUISiriViewController updateSettingsOnRemoteSceneForInterfaceOrientationChange:willAnimationWithDuration:]
-[AFUISiriViewController hideVoiceActivationMaskViewIfNecessary]_block_invoke
session
T@"AFUISiriSession",R,N,G_session,V_session
remoteViewController
T@"AFUISiriRemoteSceneViewController",R,N,G_remoteViewController,V_remoteViewController
remoteViewControllerDispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,G_remoteViewControllerDispatchQueue,V_remoteViewControllerDispatchQueue
hasCalledBeginAppearanceTransition
TB,N,G_hasCalledBeginAppearanceTransition,S_setHasCalledBeginAppearanceTransition:,V_hasCalledBeginAppearanceTransition
hasCalledEndAppearanceTransition
TB,N,G_hasCalledEndAppearanceTransition,S_setHasCalledEndAppearanceTransition:,V_hasCalledEndAppearanceTransition
routePickerController
T@"SiriUIAudioRoutePickerController",&,N,V_routePickerController
statusBar
T@"UIStatusBar",&,N,G_statusBar,S_setStatusBar:,V_statusBar
inHoldToTalkMode
TB,N,G_isInHoldToTalkMode,S_setInHoldToTalkMode:,V_inHoldToTalkMode
currentRequestOptions
T@"SASRequestOptions",C,N,G_currentRequestOptions,S_setCurrentRequestOptions:,V_currentRequestOptions
recordingStartedTimeValue
T@"NSNumber",&,N,G_recordingStartedTimeValue,S_setRecordingStartedTimeValue:,V_recordingStartedTimeValue
viewDidAppearTime
Td,N,G_viewDidAppearTime,S_setViewDidAppearTime:,V_viewDidAppearTime
viewDisappearing
TB,N,GisViewDisappearing,V_viewDisappearing
userUtteranceTapToEditInProgress
TB,N,G_isUserUtteranceTapToEditInProgress,S_setUserUtteranceTapToEditInProgress:,V_userUtteranceTapToEditInProgress
inputAccessoryView
punchingOut
TB,N,G_isPunchingOut,S_setPunchingOut:,V_punchingOut
hostedPresentationFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_hostedPresentationFrame
T@"<AFUISiriViewControllerDataSource>",W,N,V_dataSource
T@"<AFUISiriViewControllerDelegate>",W,N,V_delegate
visible
TB,N,GisVisible,V_visible
deviceIsInStarkMode
TB,N,GisDeviceInStarkMode,SsetDeviceInStarkMode:,V_deviceIsInStarkMode
directActionEvent
Tq,N,V_directActionEvent
carDNDActive
TB,N,V_carDNDActive
receivedIncomingPhoneCall
TB,N,V_receivedIncomingPhoneCall
turnsOnScreenOnAppearance
TB,N,V_turnsOnScreenOnAppearance
showsStatusBar
TB,N,V_showsStatusBar
statusBarEnabled
TB,N,V_statusBarEnabled
TB,R,N
view
T@"UIView<AFUISiriRemoteViewHosting>",&,D,N
/siri/ui
backgroundColor
-[AFUISiriCompactView _micButtonTapped:]
-[AFUISiriCompactView _micButtonHeld:]
-[AFUISiriCompactView animateOrbViewDismissalWithCompletion:]
-[AFUISiriCompactView setSiriSessionState:]
-[AFUISiriCompactView backgroundBlurViewController:didSetBlurVisibilityTo:]
not visible
blurViewVisible
TB,R,N,GisBlurViewVisible,V_blurViewVisible
requestStatusBar
TB,R,N,GshouldRequestStatusBar
-[AFSpeakableUtteranceParser(AssistantUIAdditions) afui_hasExternalDomainsForStringWithFormat:]
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
+[AFSpeakableUtteranceParser(AssistantUIAdditions) _domainsForStringWithFormat:]
-[AFUISiriCarPlayBackgroundView setBackgroundViewMode:]
-[AFUISiriCarPlayBackgroundView _updateViewsForVisibility:backgroundViewMode:]
backgroundViewMode
Tq,N,V_backgroundViewMode
-[AFUINetworkAvailabilityStateMachine _performTransitionForEvent:]
T@"<AFUINetworkAvailabilityStateMachineDelegate>",W,N,V_delegate
radioPreferences
T@"RadiosPreferences",&,N,V_radioPreferences
stateMachine
T@"AFUIStateMachine",&,N,V_stateMachine
SRSiriAvailabilityEventConnectionAvailable
SRSiriAvailabilityEventConnectionOffline
SRSiriAvailabilityEventNotUnlocked
v32@?0@"UIImage"8@"UIImage"16@"SAUIAppPunchOut"24
localResourceName
T@"NSString",C,N,V_localResourceName
localPressedResourceName
T@"NSString",C,N,V_localPressedResourceName
localPunchOut
T@"SAUIAppPunchOut",&,N,V_localPunchOut
localResourceBundle
T@"NSBundle",&,N,V_localResourceBundle
remoteURL
T@"NSURL",C,N,V_remoteURL
remotePressedURL
T@"NSURL",C,N,V_remotePressedURL
remotePunchOut
T@"SAUIAppPunchOut",&,N,V_remotePunchOut
remoteScale
Td,N,V_remoteScale
remotePressedScale
Td,N,V_remotePressedScale
logoSize
T{CGSize=dd},N,V_logoSize
com.apple.siri.DebugErrorDomain
auraLight
@"UIColor"16@?0@"UITraitCollection"8
application/x-gzip
application/octet-stream
data
T@"NSData",R,C,N,V_data
mimeType
T@"NSString",R,C,N,V_mimeType
name
T@"NSString",R,C,N,V_name
ASSISTANT_ALERT_TITLE
ASSISTANT_ALERT_TEXT
ASSISTANT_ALERT_DISMISS
com.apple.siri.siri_enabled_from_siri_setup
-[AFUISiriSetupViewController _continueTapped:]
-[AFUISiriSetupViewController _laterTapped:]
T@"<AFUISiriSetupViewControllerDelegate>",W,N,V_delegate
lastTimeShown
TB,N,V_lastTimeShown
siriSetupView
T@"UIView",&,N,V_siriSetupView
Siri log manager queue
text/*
siri_view_hierarchy_description.txt
v16@?0@"NSString"8
siri-card
^%@-
SpeechLogs
.*\.spx$
audio/speex
.*\.opx$
audio/opus
.*\.wav$
audio/wav
VoiceTrigger
audio
.*\.log$
/bin/cp %@ %@
.*\.*$
/bin/cp -r %@ %@
/var/mobile/Library/VoiceTrigger/SAT
/SAT
/usr/local/bin/codecctl AppleCS42L71Audio dump
/codec_dump.txt
/usr/sbin/ioreg -c com_apple_audio_IOBorealisOwl -r -w 0
/IOBorealisOwl_dump.txt
/usr/local/bin/boreaowlctl --dump-fw
/boreaowlctl_dump.txt
/usr/sbin/ioreg -c AppleEmbeddedAudioDevice -r -w 0
/AppleEmbeddedAudioDevice_dump.txt
voicetrigger.tar.gz
VoiceServices
+[AFUIDebugLogManager executeSystemCommand:stdoutTo:]
application/x-plist
^%@_.*\.log$
text/plain
-[AFUIDebugLogManager _captureLogsAtURL:logName:sinceTime:pattern:mimeType:completion:]_block_invoke_2
B24@?0@"NSURL"8@"NSDictionary"16
%@-latest
/usr/bin/tar czf %@ -C %@ %@
Unable to archive directory.
ArchiveCommand
application/x-gtar
/var/mobile/Library/Logs/CrashReporter
-[AFUIDebugLogManager _contentsOfDirectoryAtURL:matchingPattern:sortedByDateWithResourceKey:error:]_block_invoke
q24@?0@"NSURL"8@"NSURL"16
CardLogs
queue
T@"NSObject<OS_dispatch_queue>",R,N,G_queue,V_queue
baseLogDirectoryURL
T@"NSURL",R,C,N,G_baseLogDirectoryURL
siriLogDirectoryURL
T@"NSURL",R,C,N,G_siriLogDirectoryURL
-[AFUISiriCarPlayView _orbTappedWithGestureRecognizer:]
-[AFUISiriCarPlayView _orbHeldWithGestureRecognizer:]
%s #sceneHosting Error requesting scene: %@ 
%s #sceneHosting Completed scene request with presenter %@ for scene (ID: %@) %@
%s #sceneHosting calling completion block for startHostingSceneForConfiguration
%s #siriHID Starting HID deferrals and resuming until asked to pause again: %@
%s #siriHID Invalidating HID deferrals and pausing until asked to start again
%s #sceneHosting Expected scene's settings to be UIMutableApplicationSceneSettings, but they weren't {actualClass: %@}
%s #sceneHosting Updating scene's safe area insets {newSafeAreaInsets: %@}
%s #siriHID viewDidMoveToWindow:shouldAppearOrDisappear: %d
%s #siriHID _shouldDeferHIDEventsForMode returned false for current deferral mode: %ld
%s #siriHID skipping deferral of HID events until un-paused
%s #siriHID invalidating defer HID events assertion
%s #siriHID Started defering HID events to Siri.app
%s #siriHID Skipped defering HID events because of an invalid contextID (%u) or clientContextID (%u)
%s #siriHID sceneDidUpdateClientSettings
%s AFUISiriView's mode set to SiriUIViewModeCarPlay. This should use AFUISiriCarPlayView instead
%s AFUISiriView's mode set to SiriUIViewModeCompact. This should use AFUISiriViewCompact instead
%s Not showing voiceActivationMaskView for mode - %@
%s Not dismissing lock view since we're at first unlock stage
%s Error deleting & disabling Cloud sync: %@
%s %@
%s #xpcSiriApp Asked to invalidate XPC connection to Siri.app
%s #xpcSiriApp Setting up new XPC connection to Siri.app
%s error talking to remote proxy: %@
%s #xpcSiriApp %@
%s #xpcSiriApp resuming connection after startHostingSceneForConfiguration
%s #xpcSiriApp expectingInvalidation=%i reason=%@ explanation=%@
%s AFUIRemoteViewController's view did appear
%s Unable to dismiss service view controller: %{public}@
%s Unable to perform operation on session delegate: %{public}@
%s Unable to perform operation speech delegate: %{public}@
%s #activation dismissal requested %@
%s Unable to update service view controller with new presentation identifier %@: %{public}@
%s Unable to notify service view controller about updated frontMostAppOrientation: %{public}@
%s Unable to notify service view controller about willActivate: %{public}@
%s Unable to notify service view controller about didActivate: %{public}@
%s Unable to set service view controller request options %{public}@: %{public}@
%s Unable to instruct service view controller to preloadPresentationBundleWithIdentifier: "%{public}@", error: %{public}@
%s Unable to instruct service view controller to preloadPluginBundles, error: %{public}@
%s Unable to instruct service view controller to show the presentation "%{public}@": %{public}@
%s Unable to notify service view controller about didDeactivate: %{public}@
%s Unable to notify service view controller about showing passcode unlock: %{public}@
%s Unable to notify service view controller about will hide passcode unlock: %{public}@
%s Unable to notify service view controller about did hide passcode unlock: %{public}@
%s Unable to notify service view controller about starting text request: %{public}@
%s Type2Siri: Unable to notify service view controller about keyboard info: %{public}@
%s Unable to set service view controller's status bar frame: %{public}@
%s Unable to set service view controller's status view height: %{public}@
%s #compact Unable to set service view controller's bottom content inset: %{public}@
%s Unable to set session of service view controller: %{public}@
%s Unable to set speech synthesis of service view controller: %{public}@
%s Unable to send help action: %{public}@
%s Unable to report bug: %{public}@
%s Unable to send bug button long press: %{public}@
%s Unable to send short tap action: %{public}@
%s Unable to notify service view controller about hostApplicationWillResignActive: %{public}@
%s Unable to notify service view controller about hostApplicationWillEnterForeground: %{public}@
%s Unable to notify service view controller about hostApplicationDidBecomeActive: %{public}@
%s Unable to notify service view controller about setWaitingForTelephonyToStart: %{public}@
%s Unable to check if there is content at point: %@
%s Unable to notify service view controller about siriWillBeginTearDownForDismissalReason:%lu error:%@
%s Unable to notify service view controller about emitUIStateTransitionForSiriDismissal:%d: %{public}@
%s Unable to notify service view controller about emitInstrumentationEvent: %{public}@
%s #session AFConnection was still alive when AFUISiriSession was being deallocated. Cleaning up the connection
%s The AFConnection for this session (%@) has been invalidated.
%s  from state %@; to state %@; event %@
%s  from state %@; event %@
%s Error fetching accounts: %@
%s #activation activating requested direct action via Native Siri Kit. SASRequestOptions: %@, SAStartLocalRequest: %@
%s #activation activating requested direct action via Legacy. SASRequestOptions: %@
%s Skipping activation. Invalid request options provided for SASRequestSourceTesting: %@
%s Unexpected request source %@
%s No network. Not starting the request
%s Device not unlocked since boot. Not starting the request
%s %@ not starting a new request because its delegate vetoed with nil request options
%s canceling TTS due to audio session interruption
%s Received Command: %@ aceId: %@
%s %@ may be a part of a multi turn request.
%s %@ indicates end of a multi turn request.
%s AFUISiriSession received unexpected command: %{public}@.%{public}@
%s Delegate is handling it - responds to shouldNonLocalDelegateHandlePunchouts: %@
%s Local delegate is handling it.
%s error:%@ requestClass:%@
%s #PhoneCallAudioSessionHandler Extending the audio session for imminent phone call
%s #PhoneCallAudioSessionHandler: shouldExtendAudioSessionForImminentPhoneCall: %@, suppressAudioInterruptedNotificationFlag: %@
%s #PhoneCallAudioSessionHandler startPlaybackDidFail: Telling SiriPresentationViewController to stop extending the audio session
%s couldn't find a speech request dispatch group
%s directActionString: %@, appId: appId: %@, context: %@
%s %zd
%s Lock state while handling unlockDevice command = %zd
%s reason %ld
%s Unhandled direct action event: %li
%s #sceneHosting Initializing AFUISceneConfiguration with null bounds, falling back to displayConfiguration's bounds: %@
%s #sceneHosting Initializing AFUISceneConfiguration using bounds: %@
%s unknown invalidation reason: %li
%s #sceneHosting Overriding bounds for TV: %@
%s Error initializing zlib for NSData deflation: %{public}s (zlib code=%{public}d)
%s Error deflating NSData: %{public}s (zlib error=%{public}d)
%s #sceneHosting Starting scene update for %@ with configuration %@
%s #sceneHosting Starting scene request for %@ with configuration %@
%s #sceneHosting FBApplicationUpdateScenesTransaction failed with error: %@
%s #sceneHosting FBApplicationUpdateScenesTransaction succeeded
%s #sceneHosting started FBApplicationUpdateScenesTransaction transaction
%s #sceneHosting updating scene (%@) with configuration %@
%s #sceneHosting went to update scene, but no scene exists and no transaction is running. Nothing to update
%s #sceneHosting Reached timeout, cancelling scene loading
%s #xpcSiriApp #sceneHosting %@: %@
%s #sceneHosting scene: %@
%s #sceneHosting prewarming assertion acquired %{bool}i
%s No transition is defined from state %{public}ld for event %{public}@. Let's not change state, then.
%s #tts %@
%s #tts %@ is now eligible for processing
%s #tts %@ is now eligible for synthesis
%s #tts Canceling speech synthesis
%s #tts Unable to stop speaking: %{public}@
%s #tts Invalidating %@
%s #tts element=%@
%s #tts Presynthesized audio stopped atEnd:%i, error:%@, request:%@
%s #tts request=%@ error=%@
%s #tts Expected an active element that corresponds to an active speech request, but got nothing!
%s #tts Unable to finish speaking presynthesized request"%@": %{public}@
%s #tts Finished speaking presynthesized audio "%@"
%s #tts text="%@" error=%@ request=%@ finishedSpeaking=%i
%s #tts Synthesis was cancelled, marking speech request finished "%@": %{public}@
%s #tts Unable to finish speaking "%@": %{public}@
%s #tts strongSelf==nil
%s #tts text=%@ request=%@
%s #tts Event metrics was missing for the request"%@"
%s #tts Updating synthesizer voice to %@
%s #tts Setting AudioSessionID=%i
%s #tts Stopping speech recording because we received new text to synthesize
%s #tts Element is delayed but no identifier provided. This will likely result in out-of-order TTS: %@
%s #tts Enqueueing element: %@
%s #tts nil is an invalid delayed item identifier
%s #tts Unable to start presynthesized audio request "%@" - %{public}@
%s #tts started presynthesized audio for %@
%s #tts Output voice [%@, %@] %@ specified language %@, gender %@
%s #tts synthesis failed for with %@ for %@ 
%s #tts started synthesis for %@
%s #tts Found voice for %@ %@: %@
%s #tts No voice for %@ %@. Using %@
%s #tts Could not find voice for %@ %@
%s #tts Not speaking nil text
%s #tts activeElements=%tu elementQueue=%tu
%s #tts Processing element text="%@" identifier=%@
%s #tts element not eligible: %@
%s #tts Unable to start speaking because Siri is listening, cancelling
%s #tts Invalid speak request. No text and no audio data
%s #tts %@ has %@ available Voices
%s #tts Discarding %@; it is provisional and there are other elements enqueued
%s #noisy entered _cacheFileQueue
%s Can't serialize %@: %{public}@
%s Can't write to %{public}@: %{public}@
%s #noisy exited _cacheFileQueue
%s Can't remove %@: %@
%s Handle guide update with command: %@
%s Guide update completed successfully
%s Guide update failed
%s Unexpected response for guide update: %@
%s Guide update succeeded
%s Guide update failed with error: %@
%s Can't retrieve file attributes for %{public}@: %{public}@
%s Can't update last checked date for cached guide at %{public}@: %{public}@
%s Cached guide language code: %@ does not match current language code: %@, ignoring cache
%s Can't load aceObject dictionary at: %@, %@
%s Guide cache file not found at: %@
%s Updated language code: %@
%s utterance parsing failed with error %@
%s unhandled siri session state: %@. Falling back to SUICOrbViewModeOff
%s Attached debug log: %@
%s %{public}@ unable to read defaults from %{public}@: %{public}@
%s %{public}@ unable to parse defaults property list at %{public}@: %{public}@
%s Device unlock failed, unable to present debug controller
%s Unable to open URL: %{public}@
%s Device unlock failed unable to open URL: %{public}@
%s Device unlock failed unable to open internal view controller
%s Failed to serialize current conversation: %@
%s Enqueue delayed action command: %@, delay: %f, commands: %@
%s Enqueue dismissal action command: %@, commands: %@
%s Invalidating assertion: %@ for delayed action command: %@
%s Invalidating delayed action timer with userInfo: %@
%s Performing delayed action command: %@ with commands: %@
%s Received response for delayed command: %@, response: %@
%s Delayed command succeeded: %@
%s Delayed command failed: %@ with error: %@
%s #dismissal: updating taps and pans should dismiss Siri for state:%@ siriIsIdleAndQuiet:%@ dimmingLayerVisible:%@
%s #dismissal: updating taps and pans should dismiss Siri for state:%@ siriIsIdleAndQuiet:%@
%s #dismissal: updating taps and pans should dismmiss for dimming layer change:%@ sessiontState:%@
%s #dismissal Not updating tap pan dismissal policy on phone, feature flag not enabled.
%s #dismissal: cancelling pending tap/pan dismissal policy update. Scheduling new update with delay:%@ shouldDismiss:%@
%s Unknown distance unit %{public}@; returning full unit as abbreviation
%s Discarding AMS Lookup Result due to block deallocation.
%s Error performing AMS Lookup: %@
%s Error performing AMS Lookup - item not found
%s #carPlay unsupported direct action being converted to SAStartDirectActionRequest: %@
%s Unsupported AFUIStarkBackgroundViewMode value: %lu, returning back nil.
%s Unsupported SASRequestSource value: %lu, returning back AFUIStarkBackgroundViewModeSmall.
%s Failed to log 'disambiguation selected' event with selected ace id: %@
%s Playing audio from %@: %@
%s Failed to set audio active: %@
%s Unable to set audio category: %@
%s Failed to create AVAudioPlayer: %@
%s %@ did finish playing %@
%s Error setting the AVAudioSession to inactive: %@
%s Timed out waiting for remote view controller to connect.
%s #myriadUI Not showing the status bar as voiceActivationMaskView is visible
%s #activation animated disappearance finished: %@
%s #myriadUI Requesting show - voiceActivationMaskView
%s AFUISiriViewController's view did appear
%s %@ previousCount:%zd newCount:%zd transitioning:%@ newState:%@
%s skipping the startHosting request as there is already one pending
%s skipping the startHosting request, remoteViewController already loaded
%s transitioning _remoteViewController connectionState to pending
%s Creating remote scene viewController
%s Using displayConfiguration: %@
%s %{public}@ unable to obtain remote view controller: %{public}@
%s Remote Scene Controller did succeed in hosting scene
%s transitioning _remoteViewController connectionState to loaded
%s AFUISiriViewController deallocated before -[AFUISiriRemoteSceneViewController startHostingSceneForConfiguration:] completionBlock could run.
%s The delegate does not know how to launch apps! Not launching for bundleIdentifier: %{public}@, url: %{public}@, launchOptions: %{public}@
%s _setStatusViewHidden: %@
%s Type2Siri: keyboard enabled %@=>%@, minimized %@=>%@ firstResponder %@=>%@
%s  sessionState: %@
%s Old trigger released
%s Starting new request with trigger
%s Trigger released
%s Passcode unlock screen for handoff authentication.
%s Passcode unlock screen for cold boot authentication.
%s #carDnd setting carDNDActive to %@
%s %@ not starting request because delegate returned nil requestOptions
%s Launched into listening mode. Setting recording start time to: %@
%s Not launching into listening mode. Setting recording start time back to nil.
%s In HTTMode %d, Current options %@, source %ld
%s Stopping recording on hold to talk request canIgnoreHoldToTalkThreshold %@, holdToTalkThresholdElapsed %@, isInitialSpeechRequest %@
%s Recording start time was not set
%s Recording has not started on the audio route
%s Button up time: %f
%s Start recording to button up time: %f
%s Manual endpointing threshold: %f
%s Transitioning to Automatic Endpointing
%s Exiting HTT mode
%s Trigger target did release
%s Starting request with trigger %@
%s Adding trigger target
%s Session released from AFUISiriViewController
%s Speech recording began on audio route: %@
%s Audio route changed to BluetoothHFP
%s Recording start time is not set
%s Recording start time should be updated
%s Updating recording start time to: %@
%s shouldNonLocalDelegateHandlePunchouts isVisible: %@
%s handlePunchoutCommand success: %@
%s orientation: %ld
%s #myriadUI Requesting hide - voiceActivationMaskView
%s #OrbUIInteraction Mic Button Tapped State %@
%s #OrbUIInteraction Mic Button Held State %@
%s #orbAnimation _ignoreSiriSessionUpdates: %@
%s #orbAnimation old state: %@ | new  state:  %@
%s #compact Blur Visibility changed to %@
%s Format string: %@ has external domains: %d
%s Malformed parse for format string: %@
%s #carPlay changing from %@ to %@
%s #carPlay backgroundViewMode should never be set to AFUIStarkBackgroundViewModeUnset
%s from state %ld; event %@
%s Continue Tapped, enabling assistant and starting Siri
%s Later Tapped, dismissing
%s Running Command ---> %{public}@
%s Failed to spawn %{public}s: %{public}s
%s Couldn't get modification date for log at %{public}@: %{public}@
%s Unable to get %{public}@ for file at %{public}@: %{public}@
:@ffffff
?333333
0E)\
?333333
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
softlink:o:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
softlink:o:path:/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
softlink:r:path:/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit
AFUISceneHostingViewController
AFUISceneControllerDelegate
NSObject
VSAdditions
AFUIModalTextViewController
AFUIVoicemailPlayer
AFUISiriView
SiriUISiriStatusViewDelegate
AFUISiriContent
AFUISiriRemoteViewHosting
AFUICloudStorageViewController
AFUITouchPassThroughView
AFUIViewControllerHosting
AFUISiriRemoteSceneViewController
SiriUIPresentationRemoteControlling
AFUIViewControllerServing
AFUISiriSessionDelegate
AFUISiriSessionListener
AFUISpeechSynthesisDelegate
AFUISiriSession
AFUISpeechSynthesis
AFAssistantUIService
AFSpeechDelegate
AFUIStateMachineDelegate
AFUISpeechSynthesisLocalDelegate
AFUISiriLanguage
AFUISiriViewBuilder
AFUISceneConfiguration
NSCopying
AFUIDebugAdditions
AFUISiriRemoteContainerView
AssistantUIAdditions
AFUISceneController
FBSceneObserver
FBApplicationUpdateScenesTransactionObserver
BSTransactionObserver
_AFUIDataStoringShim
AFUIDataStoring
AFUIStateMachine
AFUISpeechSynthesisElement
AFQueueDelegate
AFUIPowerLevelListenerDelegate
AFUISpeechSynthesisElementDelegate
VSSpeechSynthesizerDelegate
AFUIGuideCacheManager
AFUIRequestTrigger
AFUIPowerLevelListener
AFAudioPowerUpdaterDelegate
AFUISceneSpecification
AFUIStarkSceneSpecification
AFUISceneClientSettings
AFUIMutableSceneClientSettings
AFUISiriEyesFreeView
AFUISiriSessionInfo
NSSecureCoding
NSCoding
AFUIUtilities
AFUITapToRadarManager
AFUIBugReporting
AFUISiriCompactGradientView
AFUIPreferences
AFUIBugReportPresenter
AFUIDebugControllerDelegate
AFUIInternalDebugControllerDelegate
AFUIBugReportPresenting
_AFUIAssertingDelayedActionCommand
AFUIDelayedActionCommandCache
AFUISiriTapPanDismissalPolicyManager
SiriUI
KeyboardInitiated
SARecordActivity
AFUIPasscodeBlurView
AFUIDisambiguationAnalyticsManager
AFUITestInput
AFUIAudioPlayer
AVAudioPlayerDelegate
AFUISiriViewController
AFUINetworkAvailabilityStateMachineDelegate
AFUISiriRemoteSceneViewControllerDataSource
AFUISiriRemoteSceneViewControllerDelegate
AFUISiriViewDelegate
AFUISiriContentDelegate
AFUISiriCompactViewDelegate
SiriUIAudioRoutePickerControllerDelegate
AFUISiriSessionLocalDataSource
AFUISiriSessionLocalDelegate
AFUISiriViewDataSource
SiriUIKeyboardViewDelegate
AFUISiriTapPanDismissalPolicyManagerDelegate
AFUIAudioMessagePlayer
AFUISiriCompactDimmingView
AFUISiriCompactView
UIGestureRecognizerDelegate
SiriUIBackgroundBlurViewControllerDelegate
SUICOrbViewControlling
AFUISiriCarPlayBackgroundView
AFUINetworkAvailabilityStateMachine
RadiosPreferencesDelegate
AFUIImageResource
AFUIDebugError
AFUISiriCarPlayFullScreenBackgroundView
AFUIDebugLog
AFUISiriSetupViewController
UIAdaptivePresentationControllerDelegate
AFUIDebugLogManager
AFUISiriCarPlayView
AFUISiriCarPlayBackgroundViewDelegate
init
_commonInit
initWithCoder:
setDelegate:
viewWillAppear:
sharedApplication
activeInterfaceOrientation
scene
settings
isForeground
_isInAnimationBlock
_currentAnimationSettings
settingsWithDuration:
view
window
windowScene
_synchronizedDrawingFence
setAnimationFence:
setAnimationSettings:
isUISubclass
setInterfaceOrientation:
updateSettingsWithTransitionBlock:
updateRemoteSceneWithFrontMostAppInterfaceOrientation:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
preferredDeferralMode
traitCollection
userInterfaceStyle
setUserInterfaceStyle:
localizedDescription
presentation
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setScene:
uiPresentationManager
identifier
stringWithFormat:
createPresenterWithIdentifier:
setAppearanceStyle:
setPresentedLayerTypes:
modifyPresentationContext:
setPresentation:
activate
presentationView
contentState
_transitionContentsWithView:forContentState:
requestSceneViewWithConfiguration:completionBlock:
_audioCategoriesDisablingVolumeHUDDidChangeTo:
deactivate
stopHostingScene
invalidateSceneForReason:explanation:
superview
_updateDeferralChainWithWindow:
invalidate
updateSceneViewWithConfiguration:
removeFromSuperview
bounds
setFrame:
addSubview:
updateSettingsWithBlock:
traitCollectionDidChange:
_updateSceneUIApplicationSceneSettingsWithBlock:
effectiveSafeAreaInsets
setSafeAreaInsetsPortrait:
viewSafeAreaInsetsDidChange
_updateSceneSafeAreaInsets
safeAreaInsetsAreSuspended
suspendedSafeAreaInsets
safeAreaInsets
setSuspendedSafeAreaInsets:
setSafeAreaInsetsAreSuspended:
configuration
copy
setDeactivationReasonMask:
updateSceneWithConfiguration:
viewWillTransitionToSize:withTransitionCoordinator:
animateAlongsideTransition:completion:
viewWillLayoutSubviews
_shouldDeferHIDEventsForMode
uiClientSettings
_contextId
clientWindowContextID
tokenForIdentifierOfCAContext:
setDisplay:
setToken:
keyboardFocusEnvironment
setEnvironment:
clientProcess
setPid:
sharedInstance
deferEventsMatchingPredicate:toTarget:withReason:
isValid
_handleSceneDidActivateWithIdentifier:
_handleInvalidationForReason:explanation:
audioCategoriesDisablingVolumeHUD
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
sceneConfigurationForDelegate
sceneController:sceneContentStateDidChange:
sceneController:willInvalidateScene:forReason:
sceneController:sceneWasInvalidated:forReason:
sceneController:sceneDidUpdateClientSettings:
updateSettingsForInterfaceOrientationChange:willAnimationWithDuration:
startHostingSceneForConfiguration:withCompletionBlock:
isHostingScene
isDeferringHIDEvents
startDeferringHIDEventsIfNeeded
invalidateAndPauseDeferringHIDEvents
setWindowSceneHostingView:
setInFluidDismissal:
deactivateSceneForExtendingTTSInBackground
viewDidMoveToWindow:shouldAppearOrDisappear:
_hasScene
deferralMode
isInFluidDismissal
sceneController
setSceneController:
windowSceneHostingView
invalidationAction
setInvalidationAction:
predicateInvalidationHandler
setPredicateInvalidationHandler:
pauseDeferrals
setPauseDeferrals:
currentOrientation
setCurrentOrientation:
setEffectiveSafeAreaInsets:
.cxx_destruct
_inFluidDismissal
_pauseDeferrals
_safeAreaInsetsAreSuspended
_deferralMode
_configuration
_sceneController
_windowSceneHostingView
_presentation
_invalidationAction
_scene
_predicateInvalidationHandler
_currentOrientation
_effectiveSafeAreaInsets
_suspendedSafeAreaInsets
gender
footprint
VSSpeechGender
VSSpeechFootprint
isCustom
isBuiltInVoice
languages
languageCode
containsObject:
contentVersion
isEqualToNumber:
masteredVersion
isEqualToString:
isMatchForVoiceAsset:
setTitle:
donePressed
initWithBarButtonSystemItem:target:action:
navigationItem
setRightBarButtonItem:
initWithFrame:
setText:
preferredFontForTextStyle:
setFont:
setEditable:
setTextContainerInset:
setContentOffset:
setView:
initWithRootViewController:
setModalPresentationStyle:
presentViewController:animated:completion:
parentViewController
dismissViewControllerAnimated:completion:
initWithTitleText:andBodyText:
loadView
presentFromParentViewController:
_bodyText
initWithPath:
load
setPlaybackCommand:
playbackCommand
voiceMailId
_updateVoicemailPlayedState:finished:
audioPlayerDidFinishPlaying:successfully:
_audioURL
_audioCategory
_audioOptions
siriViewMode
_setupContentViews
_updateSiriStatusViewForMode:
_wantsBackdropView:
initWithPrivateStyle:
_reducesMotionEffects
setUsesZoom
frame
layer
setAllowsGroupOpacity:
_destroyAssistantVersionLabelIfNecessary
setNeedsLayout
mainScreen
_isTextInputEnabled
initWithFrame:screen:textInputEnabled:configuration:
flamesContainerView
insertSubview:belowSubview:
setFlamesViewDeferred:
sizeToFit
setDisabledMicOpacity:
_updateControlsAppearance
availabilityState
_configureEyesFreeLogo
_configureHelpButton
configureReportBugButtonToShowHoldToTalkState:
_showsReportBugButton
_createAssistantVersionLabelIfNecessary
effectWithStyle:
effectForBlurEffect:
initWithEffect:
siriui_lightWeightFontWithSize:
setCustomView:
defaultCenter
removeObserver:name:object:
dealloc
layoutSubviews
_remoteContentViewFrame
_lockViewFrame
setFlamesViewWidth:
_statusViewContainerFrame
_buttonInset
sizeThatFits:
statusViewHeight
setHitTestEdgeInsets:
_layoutReportBugButton
isHidden
safeAreaInsetsDidChange
_setSafeAreaInsetsSuspended:
_animateView:fromYPosition:toYPosition:fade:completion:
_animateButtonsHidden:
setMode:
setAlpha:
setHidden:
_setupButtonsIfNecessary
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
setUserInteractionEnabled:
paused
setPaused:
setInUITrackingMode:
setupOrbIfNeeded
fadeOutCurrentAura
reloadData
userAccountCountForSiriView:
assistantVersionForSiriView:
activeAccountForSiriView:
length
transitionToPrivateStyle:
dimBackdropSettings
transitionToSettings:
setShouldRasterizeEffectsView:
settingsForPrivateStyle:
setBlurRadius:
setScale:
_placeRemoteContentView
insertSubview:aboveSubview:
insertSubview:below:
_setupVoiceActivationMaskView
setStatusViewHidden:
animateWithDuration:animations:completion:
blackColor
setBackgroundColor:
setBackdropVisible:
forceMicVisible:
_audioRouteButtonTapped:
addTarget:action:forControlEvents:
_setTouchInsets:
insertSubview:above:
animateWithDuration:animations:
setBluetoothOn:
delegate
siriViewDidReceiveAudioRouteAction:
sharedPreferences
debugButtonIsEnabled
showsHoldToTalkIndicator
_createReportBugButtonWithTemplateImage:andConfigureWithHoldToTalkState:
_loadReportBugButtonTemplateImageInBackgroundWithCompletion:
_configureReportBugButtonWithHoldToTalkState:
buttonWithImageTemplate:style:
_reportBugButtonTapped
_reportBugButtonLongPressed
initWithTarget:action:
addGestureRecognizer:
_shouldIndicateHoldToTalkMode
colorWithRed:green:blue:alpha:
colorWithAlphaComponent:
siriui_transparantButtonColor
siriui_transparantHighlightedButtonColor
setDefaultColorForTemplate:
setHighlightColorForTemplate:
bundleWithPath:
imageNamed:inBundle:
imageWithRenderingMode:
siriViewDidReceiveReportBugAction:
siriViewDidReceiveBugButtonLongPress:
setEnabled:
buttonWithHelpImageMask
_helpButtonTapped:
siriViewDidReceiveHelpAction:
_helpButtonIsVisible
setEmphasized:
pulse
alpha
siriui_platterVibrancyEffect
bundleForClass:
imageNamed:inBundle:compatibleWithTraitCollection:
whiteColor
_flatImageWithColor:
initWithImage:
begin
setCompletionBlock:
setKeyPath:
numberWithDouble:
setFromValue:
setToValue:
setMass:
setStiffness:
setDamping:
addObject:
numberWithInt:
setRemovedOnCompletion:
defaultTimingFunction
setTimingFunction:
defaultAnimationDuration
setDuration:
setBeginTime:
setFillMode:
setAnimations:
addAnimation:forKey:
commit
floatValue
setOpacity:
setAnchorPoint:
setPosition:
audioRecordingPowerLevelForSiriView:
siriViewDidRecieveStatusViewTappedAction:
siriViewDidRecieveStatusViewHoldDidBeginAction:
siriViewDidRecieveStatusViewHoldDidEndAction:
siriViewShouldSupportTextInput:
siriView:didReceiveSiriActivationMessageWithSource:
foregroundContainerView
audioLevelForSiriStatusView:
siriStatusViewWasTapped:
siriStatusViewHoldDidBegin:
siriStatusViewHoldDidEnd:
safeAreaInsetsForSiriStatusView:
remoteContentView
setRemoteContentView:
siriSessionState
setSiriSessionState:
mode
showPasscodeUnlockWithStatusText:subtitle:completionHandler:unlockCompletionHandler:
setVoiceActivationMaskViewVisible:
setAuxiliaryViewsHidden:animated:
setSiriContentDelegate:
setContentViewsAlpha:
initWithFrame:configuration:
setDisabled:
setStatusViewUserInteractionEnabled:
flamesViewPaused
setFlamesViewPaused:
teardownStatusView
setDataSource:
backgroundBlurView
setBackdropShouldRasterize:
updateForPercentageRevealed:
setShowAudioRoutePicker:
setAudioRoutePickerBluetoothOn:
_preferencesDidChange:
setBugReportingAvailable:
setHelpButtonEmphasized:
setHelpButtonDeferred:
pulseHelpButton
cancelShowingPasscodeUnlock
siriDidActivateFromSource:
dataSource
disabled
foregroundView
_backdropView
_backdropViewVisible
_safeAreaInsetsSuspended
_dimmingAndLockContainer
_statusViewContainer
_audioRoutePickerButton
_helpButton
_reportBugButton
_voiceActivationMaskView
_lockContainerView
_inShowUnlockViewAnimation
_inHideUnlockViewAnimation
_remoteContentViewHidden
_lockViewHidden
_flamesViewDeferred
_helpButtonDeferred
_statusViewHidden
_flamesViewPaused
_keepStatusViewHidden
_eyesFreeEffectView
_eyesFreeLogoView
_assistantVersionLabel
_assistantVersionVisualEffectView
_foregroundView
_foregroundContainerView
_backgroundBlurView
_siriSessionState
_mode
_statusViewHeight
_siriStatusView
_disabled
_remoteContentView
_dataSource
_delegate
viewDidLoad
didReceiveMemoryWarning
groupSpecifierWithID:
setProperty:forKey:
handleDisableAndDeleteButtonPress
deleteButtonSpecifierWithName:target:action:
confirmDisableForMultiUserVoiceIdentification
confirmDisable
fetchMultiUserVoiceIdentificationSetting:
dictionaryWithObjects:forKeys:count:
setupWithDictionary:
setTarget:
setConfirmationAction:
showConfirmationViewForSpecifier:
_disableAndDeleteCloudSync
disableAndDeleteCloudSyncWithCompletion:
specifiers
_settings
localizedStringForKey:value:table:
hitTest:withEvent:
enumerateObjectsUsingBlock:
initWithMachServiceName:options:
_invalidated
setInvalidationHandler:
_interrupted
setInterruptionHandler:
remoteObjectInterface
setRemoteObjectInterface:
exportedInterface
setExportedInterface:
setExportedObject:
_setQueue:
serviceRequestsActivationSourceWithReplyHandler:
serviceRequestsDismissalWithDelayForTTS:userInfo:withDismissalReason:
serviceStartGuidedAccess
serviceBulletinWithIdentifier:replyHandler:
serviceDidReadBulletinWithIdentifier:
serviceStartRequestWithOptions:
serviceUserRelevantEventDidOccur
serviceLaunchApplicationWithBundleIdentifier:withURL:launchOptions:replyHandler:
siriIdleAndQuietStatusDidChange:
setFullScreenDimmingLayerVisible:animated:
setCarDisplaySnippetMode:
setStatusViewDisabled:
serviceWillPresentViewControllerWithStatusBarStyle:
serviceDidPresentViewControllerWithStatusBarStyle:
serviceWillDismissViewControllerWithStatusBarStyle:
serviceDidDismissViewControllerWithStatusBarStyle:
setStatusBarHidden:animated:
setStatusBarHidden:animated:completion:
serviceOpenURL:delaySessionEndForTTS:replyHandler:
serviceOpenURL:appBundleID:allowSiriDismissal:
getScreenshotWithReplyHandler:
handlePasscodeUnlockWithCompletion:
serviceDidPresentUserInterface
serviceDidPresentConversationFromBreadcrumb
serviceDidDetectMicButtonTap
serviceDidDetectMicButtonLongPressBegan
serviceDidDetectMicButtonLongPressEnded
servicePresentationDidChangePeekMode:
serviceDidEnterUITrackingMode
serviceDidExitUITrackingMode
serviceDidDetectAudioRoutePickerTap
serviceViewControllerRequestKeyboardForTapToEditWithCompletion:
serviceDidRequestKeyboard:minimized:
serviceDidRequestKeyboard:
serviceDidResetTextInput
serviceWillBeginTapToEdit
serviceDidEndTaptoEdit
serviceDidRequestCurrentTextInput:
serviceViewControllerRequestsPresentation:
serviceViewControllerRequestsDismissalWithDismissalReason:completion:
servicePresentedIntentWithBundleId:
serviceDidPresentBugReporter
serviceDidDismissBugReporter
setTypeToSiriViewHidden:
extendCurrentTTSRequested
setShouldDismissForTapOutsideContent:
setShouldDismissForTapsOutsideContent:
setShouldDismissForSwipesOutsideContent:
requestHostBlurVisible:reason:fence:
interfaceWithProtocol:
arrayWithObjects:count:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
_connection
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
processIdentifier
initWithFormat:
resume
stringForInvalidationReason:
siriRemoteViewControllerDidFinishDismissing:
siriRemoteViewController:invalidatedForReason:explanation:
isEqualToArray:
siriRemoteViewController:didUpdateAudioCategoriesDisablingVolumeHUD:
siriRemoteViewController:sceneDidActivateWithIdentifier:
viewDidAppear:
viewDidDisappear:
serviceViewControllerProxyWithErrorHandler:
didReceiveDismissalAction:delayForTTS:withDismissalReason:completion:
siriRemoteViewControllerRequestsActivationSource:
dismissSiriRemoteViewController:delayForTTS:userInfo:withDismissalReason:
startGuidedAccessForRemoteViewController:
siriRemoteViewController:bulletinWithIdentifier:
siriRemoteViewController:didReadBulletinWithIdentifier:
siriRemoteViewController:startRequestWithOptions:
userRelevantEventDidOccurInSiriRemoteViewController:
siriRemoteViewController:didRequestCurrentTextInputWithReplyHandler:
siriRemoteViewController:launchApplicationWithBundleIdentifier:withURL:launchOptions:replyHandler:
siriRemoteViewController:siriIdleAndQuietStatusDidChange:
siriRemoteViewController:setStatusViewHidden:
siriRemoteViewController:setTypeToSiriViewHidden:
siriRemoteViewController:setFullScreenDimmingLayerVisible:animated:
siriRemoteViewController:setCarDisplaySnippetMode:
siriRemoteViewController:setStatusViewDisabled:
siriRemoteViewController:setStatusViewUserInteractionEnabled:
siriRemoteViewController:willPresentViewControllerWithStatusBarStyle:
siriRemoteViewController:didPresentViewControllerWithStatusBarStyle:
siriRemoteViewController:willDismissViewControllerWithStatusBarStyle:
siriRemoteViewController:didDismissViewControllerWithStatusBarStyle:
siriRemoteViewController:setStatusBarHidden:animated:
siriRemoteViewController:setStatusBarHidden:animated:completion:
siriRemoteViewController:setHelpButtonEmphasized:
siriRemoteViewController:setBugReportingAvailable:
imageWithCGImage:
siriRemoteViewController:handlePasscodeUnlockWithCompletion:
siriRemoteViewControllerPulseHelpButton:
siriRemoteViewController:didRequestKeyboard:
siriRemoteViewController:didRequestKeyboard:minimized:
siriRemoteViewControllerDidResetTextInput:
siriRemoteViewController:requestKeyboardForTapToEditWithCompletion:
siriRemoteViewControllerWillBeginTapToEdit:
siriRemoteViewControllerDidEndTapToEdit:
siriRemoteViewControllerDidEnterUITrackingMode:
siriRemoteViewControllerDidExitUITrackingMode:
siriRemoteViewControllerDidPresentUserInterface:
siriRemoteViewController:openURL:delaySessionEndForTTS:completion:
siriRemoteViewController:openURL:appBundleID:allowSiriDismissal:
siriRemoteViewControllerDidDetectMicButtonTap:
siriRemoteViewControllerDidDetectMicButtonLongPressBegan:
siriRemoteViewControllerDidDetectMicButtonLongPressEnded:
siriRemoteViewController:didChangePresentationPeekMode:
siriRemoteViewControllerDidPresentConversationFromBreadcrumb:
siriRemoteViewControllerDidDetectAudioRoutePickerTap:
siriRemoteViewController:requestsPresentation:
siriRemoteViewController:requestsDismissalWithReason:withCompletion:
siriRemoteViewController:presentedIntentWithBundleId:
requestBlurVisible:reason:fence:
updateToPresentationWithIdentifier:presentationProperties:animated:completion:
setHostFrontMostAppOrientation:
_frontMostAppOrientation
siriWillActivateFromSource:
setRequestOptions:
preloadPresentationBundleWithIdentifier:
preloadPluginBundles
showPresentationWithIdentifier:properties:lockState:
siriRemoteViewControllerDidDeactivateScene:
siriDidDeactivateWithCompletion:
siriWillShowPasscodeUnlockAndCancelRequest:
siriWillHidePasscodeUnlockForResult:
siriDidHidePasscodeUnlock
startRequestForText:
siriKeyboardViewDidChange:
valueWithCGRect:
setStatusBarFrameValue:
setStatusViewHeightNumber:
setBottomContentInset:
setSession:
setSpeechSynthesis:
didReceiveHelpAction
didReceiveReportBugAction
didReceiveBugButtonLongPress
didReceiveShortTapAction
hostApplicationWillResignActive
hostApplicationWillEnterForeground
hostApplicationDidBecomeActive
setWaitingForTelephonyToStart:
valueWithCGPoint:
hasContentAtPoint:completion:
siriWillBeginTearDownForDismissalReason:
hostApplicationRequestsEmitUIStateTransitionForSiriDismissalWithReason:
hostApplicationRequestsEmitInstrumentationEvent:
serviceViewControllerProxy
sessionDelegate
speechSynthesisDelegate
siriDidDeactivate
siriWillShowPasscodeUnlock
setStatusBarFrame:
setStatusViewHeight:
applicationWillResignActive
applicationWillEnterForeground
applicationDidBecomeActive
emitUIStateTransitionForSiriDismissalWithDismissalReason:
emitInstrumentationEvent:
_canShowWhileLocked
viewServiceApplicationInfo
remoteConnection
setRemoteConnection:
_connectionHasBeenResumed
_audioCategoriesDisablingVolumeHUD
_expectingInvalidation
_viewServiceApplicationInfo
_remoteConnection
siriSessionDidInitializeSessionInfo:
siriSessionDidUpdateSessionInfo:
siriSessionDidFinishRequestWithError:
siriSessionResultForAceCommand:completion:
siriSessionDidTransitionFromState:toState:event:
siriSessionDidStartNewTurn:
siriSessionWillStartRequestWithOptions:completion:
siriSessionWillStartRequest
siriSessionWillCancelRequest
siriSessionWillStartUIRequestWithText:completionHandler:
siriSessionDidFailToStartStarkNotificationRequestWithOptions:
siriSessionAudioRecordingDidChangePowerLevel:
siriSessionDidStartAcousticIDRequest
siriSessionDidFinishAcousticIDRequestWithSuccess:
siriSessionDidChangeNetworkAvailability
siriSessionDidChangeLockState:
siriSessionOpenURL:completionHandler:
siriSessionRequestsDismissal
siriSessionWantsToCacheImage:
siriSessionIsPresentingLocalAuthenticationUI
siriSessionIsPresentingApplePaySheet
siriSessionSupportsSpeechSynthesis:
siriSessionGetRequestContextWithCompletionHandler:
siriSessionDidDetectMusic
siriSessionDidDetectSpeechStartpoint
siriSessionDidReceiveSpeechRecognizedCommand:
siriSessionDidReceiveSpeechPartialResultCommand:
siriSessionDidRecognizedAdditionalSpeechInterpretation:refId:
siriSessionDidUpdateRecognitionWithPhrases:utterances:refId:
siriSessionDidReceiveAddViewsCommand:completion:
siriSessionDidReceiveAddDialogsCommand:completion:
siriSessionDidReceiveOpenLinkCommand:completion:
siriSessionDidReceiveClearScreenCommand:completion:
siriSessionDidReceivePlayVoicemailCommand:completion:
siriSessionDidReceiveSmsPlayAudioCommand:completion:
siriSessionDidReceivePlayNotificationSound:completion:
siriSessionDidReceiveSayItCommand:completion:
siriSessionDidReceiveRepeatItCommand:completion:
siriSessionDidReceiveShowHelpCommand:completion:
siriSessionDidReceiveUpdateViewsCommand:completion:
siriSessionDidReceiveAppPunchOutCommand:completion:
siriSessionDidReceiveCloseAssistantCommand:completion:
siriSessionDidReceiveListenForPronunciationCommand:completion:
siriSessionDidReceiveGetResponseAlternativesPlaybackCommand:completion:
siriSessionDidReceiveSetSuggestedUtterancesCommand:completion:
siriSessionDidReceiveSAUIChangePrimaryUtteranceCommand:completion:
siriSessionDidReceiveSAUIShowFullScreenEffectCommand:completion:
siriSessionDidReceiveSAUIShowSpeechAlternativesCommand:completion:
siriSessionDidReceiveSetUIGuidedAccessCommand:completion:
siriSessionDidReceiveHideSiriOverlayCommand:completion:
siriSessionDidReceiveGuideUpdateCommand:completion:
siriSessionDidReceiveAddContentToViewCommand:completion:
siriSessionDidReceiveShowNextCardCommand:completion:
siriSessionDidReceivePreSynthesizeTTSCommand:completion:
siriSessionDidReceiveDisambiguationItemSelected:
siriSessionDidReceivePlayContentCommand:completion:
siriSessionDidReceiveLaunchTVRemoteCommand:completion:
siriSessionDidReceiveExtendCurrentTTSCommand:completion:
siriSessionDidReceiveRevealRecognizedSpeechCommand:completion:
siriSessionSpeechRecordingDidChangeAVRecordRoute:
siriSessionSpeechRecordingDidEnd
siriSessionSpeechRecordingDidCancel
siriSessionSpeechRecordingDidFailWithError:
siriSessionWillShowAudioRoutePicker
siriSessionWillDismissAudioRoutePicker
siriSessionWillProcessAceCommand:
speechSynthesisGetPreparedTextForIdentifier:completion:
speechSynthesisExecuteAnimationForIdentifier:
speechSynthesisDidStartSpeakingWithIdentifier:
speechSynthesisDidStopSpeakingWithIdentifier:queueIsEmpty:
didReceiveDismissalAction:delayForTTS:completion:
setDeviceInStarkMode:
setCarDNDActive:
setLockState:
preheat
forceAudioSessionActive
forceAudioSessionActiveForReason:
forceAudioSessionInactive
resumeInterruptedAudioPlaybackIfNeeded
clearContext
resetContextTypes:
rollbackClearContext
setAlertContext
setApplicationContext
startRequestWithOptions:
startRequestWithOptions:completion:
stopRequestWithOptions:
updateRequestOptions:
endForReason:
telephonyRequestCompleted
stopRecordingSpeech
cancelSpeechRequest
startCorrectedRequestWithText:correctionIdentifier:userSelectionResults:turnIdentifier:
performAceCommand:conflictHandler:
performAceCommand:
siriUIDidPresentDynamicSnippetWithInfo:
resultDidChangeForAceCommand:
resultDidChangeForAceCommand:completion:
requestDidPresentViewForUICommand:
requestDidPresentViewForErrorCommand:
recordUIMetrics:
recordRequestMetricEvent:withTimestamp:
recordMetricsContext:forDisambiguatedAppWIthBundleIdentifier:
audioRoutePickerWillShow
audioRoutePickerWillDismiss
setInterface:forSelector:argumentIndex:ofReply:
enqueueText:identifier:language:gender:isPhonetic:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:preparationIdentifier:completion:animationIdentifier:analyticsContext:speakableContextInfo:
enqueueText:identifier:completion:
enqueueAudioData:identifier:provisionally:eligibleAfterDuration:completion:
enqueuePhaticWithCompletion:
processDelayedItem:
cancel
skipCurrentSynthesis
prewarmIfNeeded
setWithObjects:
setSpeechDelegate:
_outputVoiceDidChange:
addObserver:selector:name:object:
_siriNetworkAvailabilityDidChange:
_discardConnectionForReason:
removeObserver:
outputVoice
setOutputVoice:
_performBlockWithDelegate:
initWithInitialState:
addTransitionFromState:toState:forEvent:
_stateMachine
state
_state
siriSession:didChangeToState:
performTransitionForEvent:
shouldSpeak
preheatWithStyle:
forceAudioSessionActiveWithOptions:reason:completion:
isAvailable
beginMonitoringAvailability
appBundleIdentifier
bulletin
requestInfo
activationEvent
setInvocationSource:
afui_isRemoteHeadsetActivation
requestSource
_mapInvocationSource:
invocationSource
directActionEvent
_invocationContextFromDirectActionEvent:appBundleIdentifier:
setCarPlayInvocationContext:
previousTurnIdentifier
newTurnBasedContextWithPreviousTurnID:
sharedManager
latestStoredTurn
sharedAnalytics
newTurnBasedInstrumentationContext
_setInstrumentationTurnContext:
_instrumentationTurnContext
emitInstrumentation:
instrumentationEvents
countByEnumeratingWithState:objects:count:
isPPTAvailable
activeAccount
isActive
count
_updateActiveAccount:withNumberOfActiveAccounts:
fetchAccountsWithCompletion:
directActionContextPayload
initWithAssociatedBundleIdentifier:bulletin:aceContext:contextDictionary:
startLocalRequest
_startRequestWithInfo:completion:
_startDirectActionRequestWithString:appID:withContext:completion:
checkForGuideUpdateContext
speechRequestOptions
isInitialBringUp
_startSpeechRequestWithSpeechRequestOptions:isInitialBringUp:completion:
_startSpeechRequestWithOptions:completion:
text
_startRequestWithText:completion:
speechFileURL
_startSpeechRequestWithSpeechFileAtURL:completion:
isForSpeechRequest
continuityInfo
_startContinuityRequestWithInfo:completion:
isPronunciationRequest
pronunciationContext
_startSpeechPronunciationRequestWithContext:options:completion:
errorWithCode:description:underlyingError:
initWithBlock:defaultValue:
_discardCurrentSpeechGroup
invokeWithValue:
_setCurrentSpeechRequestGroup:
_currentSpeechRequestGroup
_startRequestWithFinalOptions:completion:
_preparedSpeechRequestWithRequestOptions:
stopSpeechWithOptions:
updateSpeechOptions:
setLocalDelegate:
audioSessionID
setAudioSessionID:
localDelegate
siriSessionAudioOutputDidChangePowerLevel:
stopSpeech
initWithActivationEvent:
forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:
isRecording
refId
views
arrayWithCapacity:
dictionary
setObject:forKey:
initWithDictionary:
encodedClassName
safeWrapResponseCompletion:
aceId
_setRefIdForAllViewsInAddViews:
af_dialogPhase
isPossiblyPartOfMultiTurnRequest
adviseSessionArbiterToContinueWithPreviousWinner:
isCompletionDialogPhase
isErrorDialogPhase
isConfirmedDialogPhase
immersiveExperience
siriSessionImmersiveExperienceRequested
_afui_usefulUserResultType
willPresentUsefulUserResultWithType:forCommand:
siriSessionDidReceiveDelayedActionCancelCommand:completion:
siriSessionDidReceiveDelayedActionCommand:completion:
_handleUnlockDeviceCommand:completion:
_handleRequestUpdateViewsCommand:completion:
_performPunchoutCommand:delegate:completion:
groupIdentifier
shouldNonLocalDelegateHandlePunchouts
numberWithBool:
setRefId:
handlePunchoutCommand:completion:
_performTransitionForEvent:
_requestDidFinishWithError:
siriSessionShouldExtendAudioSessionForImminentPhoneCall
siriSessionShouldEndExtendAudioSessionForImminentPhoneCall
version
_updateAssistantVersion:
siriSession:willProcessAppLaunchWithBundleIdentifier:
siriSession:failedToLaunchAppWithBundleIdentifier:
setAssistantVersionAndGenerateLightweightInfo:
initWithBlock:
speechSynthesis
siriSessionRecordingPreparationHasFinished:
_continuePendingSpeechRequest
_requestContextWithCompletion:
siriSession:speechRecordingDidBeginOnAVRecordRoute:
recordingPowerLevel
_requestWillStart
setSuppressStartAlert:
setActivationEvent:
setIsEyesFree:
serverCommandId
setServerCommandId:
timestamp
setActivationEventTime:
buttonDownTimestamp
setHomeButtonDownEventTime:
expectedTimestamp
setExpectedActivationEventTime:
setIsInitialBringUp:
activationDeviceIdentifier
setActivationDeviceIdentifier:
useAutomaticEndpointing
setUseAutomaticEndpointing:
useStreamingDictation
setUseStreamingDictation:
homeButtonUpFromBeep
setHomeButtonUpFromBeep:
acousticIdEnabled
setAcousticIdEnabled:
releaseAudioSessionOnRecordingCompletion
setReleaseAudioSessionOnRecordingCompletion:
setSpeechSynthesisRecord:
presentationMode
setPresentationMode:
startRecordingSoundId
_startingRecordingAlertPolicyForSoundID:
setRecordingAlertPolicy:
setBeepSoundID:
newWithBuilder:
setStartingAlertBehavior:
valueForKey:
setOrderedContext:
turnIdentifier
setTurnIdentifier:
startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:
startSpeechRequestWithSpeechFileAtURL:
startSpeechPronunciationRequestWithOptions:pronunciationContext:
_hasActiveRequest
rollbackRequest
cancelRequest
deserializationDuration
initWithOriginalCommandId:category:duration:
underlyingConnection
recordRequestMetric:withTimestamp:
sendFeedbackToAppPreferencesPredictorForMetricsContext:selectedBundleId:
setDirectActionApplicationContexts:
setApplicationContextForDirectAction:
startDirectActionRequestWithString:
_startRequestWithBlock:
startContinuationRequestWithUserInfo:
startRequestWithInfo:
startRequestWithText:
startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:turnIdentifier:
localDataSource
bulletinsForSiriSession:
setAlertContextWithBulletins:
contextAppInfosForSiriSession:
starkAppBundleIdentifierContextForSiriSession:
addObjectsFromArray:
directActionApplicationContexts
currentCarPlaySupportedOEMAppIDListForSiriSession:
sessionDelegateContext
fetchAppicationContextForApplicationInfo:supplementalContext:refID:
lockStateForSiriSession:
siriSessionDidResetContext:
setIsDeviceInStarkMode:
setLockState:screenLocked:
successCommands
cancellationCommands
failureCommands
performAceCommands:
siriSession:didReceiveDeviceUnlockRequestAndCancelRequest:withCompletion:
_performAceCommand:forRequestUpdateViewsCommand:afterDelay:
timeInSeconds
doubleValue
commands
sendGenericAceCommand:conflictHandler:
siriServiceStream
name
UUID
UUIDString
removeObject:
siriSessionWillEnd:
siriSessionDidEnd:
cancelRequestForReason:
endSession
averagePower
_updateActiveAccount:
setActiveAccountAndGenerateLightweightInfo:
setUserAccountCountGenerateLightweightInfo:
setDirectAction:
setBundleID:
beginMonitoringSiriAvailability
effectiveCoreLocationBundle
assistantConnectionRequestWillStart:
assistantConnectionDismissAssistant:
assistantConnectionRequestFinished:
assistantConnection:receivedCommand:completion:
assistantConnection:requestFailedWithError:requestClass:
assistantConnection:openURL:completion:
assistantConnection:openApplicationWithBundleID:URL:completion:
assistantConnection:shouldSpeak:
assistantConnection:didChangeAudioSessionID:
assistantConnectionAudioSessionDidBeginInterruption:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:
assistantConnectionWillStartAcousticIDRequest:
assistantConnectionDidDetectMusic:
assistantConnection:didFinishAcousticIDRequestWithSuccess:
assistantConnection:setUserActivtiyInfoAndMakeCurrent:webpageURL:
assistantConnectionInvalidateCurrentUserActivity:
assistantConnection:wantsToCacheImage:
assistantConnection:extensionRequestWillStartForApplication:
assistantConnection:extensionRequestFinishedForApplication:error:
assistantConnection:startUIRequestWithText:completion:
assistantConnection:startUIRequestWithInfo:completion:
assistantConnection:willStartAudioPlaybackRequest:
assistantConnection:didStartAudioPlaybackRequest:
assistantConnection:didStopAudioPlaybackRequest:error:
assistantConnection:didHandleQuickStopWithAction:
assistantConnection:willProcessStartPlayback:intent:completion:
assistantConnection:willProcessStartPlayback:
assistantConnection:startPlaybackDidFail:
assistantConnection:audioSessionWillBecomeActive:
assistantConnection:audioSessionDidBecomeActive:
assistantConnection:willProcessAppLaunchWithBundleIdentifier:
assistantConnection:appLaunchFailedWithBundleIdentifier:
assistantConnectionSpeechRecordingWillBegin:
assistantConnection:speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:
assistantConnection:speechRecordingDidChangeAVRecordRoute:
assistantConnectionSpeechRecordingDidDetectStartpoint:
assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:
assistantConnectionSpeechRecordingDidEnd:
assistantConnectionSpeechRecordingDidCancel:
assistantConnection:speechRecordingDidFail:
assistantConnectionDidChangeAudioRecordingPower:
assistantConnection:speechRecognitionDidFail:
assistantConnection:speechRecognized:
assistantConnection:speechRecognizedPartialResult:
assistantConnection:recognizedAdditionalSpeechInterpretation:refId:
assistantConnection:recognitionUpdateWithPhrases:utterances:refId:
assistantConnection:recognitionUpdateWillBeginForTask:
stateMachine:didTransitionFromState:forEvent:
stateMachine:descriptionForEvent:
stopCurrentRecordingForSpeechSynthesis:
speechSynthesis:prepareForSpeakingWithOptions:completion:
speechSynthesisConnectionIsRecording:
speechSynthesisDidFinish:
speechSynthesis:didUpdatePowerLevelTo:
initWithConnection:delegateQueue:
setLocalDataSource:
assistantConnection:didLoadAssistant:
isPreventingActivationGesture
isListening
_localAuthenticationUIPresented
_applePaySheetPresented
settingsConnectionDidChangeActiveAccount:
isEyesFree
setEyesFree:
isProcessingAcousticIdRequest
siriSessionInfo
setSiriSessionInfo:
setSessionDelegateContext:
_delegateQueue
_currentRequestDidPresent
_speechSynthesis
_lastSpeechSynthesisRecord
_speechRequestGroupGraveyard
_continuePendingRequest
_sendContextBeforeContinuingSpeechRequest
_settingsConnection
_isDeviceInStarkMode
_eyesFree
_isProcessingAcousticIdRequest
_localDataSource
_localDelegate
_siriSessionInfo
_sessionDelegateContext
_directActionApplicationContexts
dryRun
isReflectionDialogPhase
_computeSpokenLanguageCode
_spokenLanguageDidChange:
_currentLocaleDidChange:
initWithDelegate:
_updateSpokenLanguageCode
_setSpokenLanguageCode:
siriLanguageSpokenLanguageCodeDidChange:
bestSupportedLanguageCodeForLanguageCode:
_setupAssistantHasCompletedInitialRunAvailable
spokenLanguageCode
setupAssistantHasCompletedInitialRunChecked
setSetupAssistantHasCompletedInitialRunChecked:
setSetupAssistantHasCompletedInitialRunAvailable:
_setupAssistantHasCompletedInitialRunChecked
_spokenLanguageCode
allowResizingBetweenModes
carDNDActiveOrEyesFreeAndShouldHaveFullScreenPresentation
initWithFrame:eyesFreeMode:
initWithFrame:compactViewDelegate:
sharedSystemState
buildSiriViewForFrame:configuration:dataSource:delegate:siriContentDelegate:
mainConfiguration
defaultSiriSceneConfigurationWithInitialBounds:onDisplay:
_setupPlatformSpecificDefaultSettings
isCarDisplay
specification
initWithSpecification:
configureMutableSceneSettings:
currentDevice
userInterfaceIdiom
setForeground:
setDisplayConfiguration:
setLevel:
setDeviceOrientationEventsEnabled:
setDeactivationReasons:
_initWithInitialBounds:displayConfiguration:
setLaunchIntent:
setPreferredDeferralMode:
setSceneLoadingTimeOutDuration:
setCancelSceneLoadingAfterTimeout:
setSceneParameters:
setInitialSafeAreaInsets:
stringByAppendingFormat:
copyWithZone:
sceneParameters
foreground
launchIntent
cancelSceneLoadingAfterTimeout
sceneLoadingTimeOutDuration
initialBounds
initialSafeAreaInsets
deactivationReasonMask
setBounds:
_displayConfiguration
_foreground
_cancelSceneLoadingAfterTimeout
_launchIntent
_preferredDeferralMode
_sceneLoadingTimeOutDuration
_sceneParameters
_userInterfaceStyle
_deactivationReasonMask
_initialBounds
_initialSafeAreaInsets
_bounds
bytes
dataWithLength:
mutableBytes
setLength:
afui_dataByCompressingWithGzip
_afui_dateStringUsingCurrentLocaleFromTemplate:
currentLocale
dateFormatFromTemplate:options:locale:
setDateFormat:
stringFromDate:
afui_longYearString
cancelSceneLoadingTimeOut
displayIdentity
_recordSceneCreateBegin
startSceneLoadingTimeOutTimerWithDuration:
identityForEmbeddedApplicationIdentifier:
initWithProcessIdentity:executionContextProvider:
identityForIdentifier:workspaceIdentifier:
updateSceneWithIdentity:parameters:transitionContext:
sceneWithIdentifier:
updateUISettingsWithBlock:
addObserver:
_recordSceneCreateEnd
error
setWaitsForSceneCommits:
isRunning
failWithReason:
sceneLoadingTimeOutDidOccur
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
destroyScene:withTransitionContext:
initWithPID:flags:reason:name:withHandler:
sceneContentStateDidChange:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
sceneDidInvalidate:
transactionWillBegin:
transactionDidBegin:
transactionDidFinishWork:
transactionDidComplete:
transaction:willLaunchProcess:
transaction:didLaunchProcess:
transaction:didCreateScene:
transaction:willUpdateScene:
transaction:willCommitSceneUpdate:
transaction:didCommitSceneUpdate:
_currentConfiguration
_createTransaction
_backgroundRunningAssertion
_pendingConfigurationToApply
_sceneForeground
_invalidationReason
setImage:forKey:
imageForKey:
setImageData:
scale
setImageData:forKey:
imageDataForKey:
imageData
initWithData:scale:
propertyListRepresentation
initWithPropertyListRepresentation:
afui_dataStoringShim
_setState:
_endStatesByEventByStartState
numberWithInteger:
objectForKey:
_descriptionForEvent:
_endStateNumberFromDictionary:forEvent:
integerValue
_setState:forEvent:
setEndStatesByEventByStartState:
_setDurationHasElapsed:
_setPreparationBlockCompleted:
preparationBlockCompleted
durationHasElapsed
_setEligibleForProcessing:
isDelayed
_setEligibleForSynthesis:
_setText:
_updateSynthesisEligibility
setCanUseServerTTS:
audioBuffer
language
isProvisional
canUseServerTTS
isEligibleForProcessing
isEligibleForSynthesis
_completion
numberWithUnsignedInteger:
speechSynthesisElementSynthesisEligibilityDidChange:
initWithText:audioData:identifier:language:gender:provisional:eligibleAfterDuration:delayed:preparation:completion:animationIdentifier:analyticsContext:speakableContextInfo:canUseServerTTS:eligibilityChangedQueue:
setDelayed:
executeCompletion
audioData
isPhonetic
setIsPhonetic:
speechRequest
setSpeechRequest:
presynthesizedAudioRequest
setPresynthesizedAudioRequest:
synthesisResult
setSynthesisResult:
animationIdentifier
analyticsContext
speakableContextInfo
setSpeakableContextInfo:
shouldCache
setShouldCache:
synthesizesWhileRecording
setSynthesizesWhileRecording:
_text
_isPhonetic
_eligibleForSynthesis
_eligibleForProcessing
_provisional
_delayed
_canUseServerTTS
_shouldCache
_synthesizesWhileRecording
_preparationBlockCompleted
_durationHasElapsed
_audioData
_identifier
_language
_gender
_speechRequest
_presynthesizedAudioRequest
_synthesisResult
_animationIdentifier
_analyticsContext
_speakableContextInfo
array
setLanguageCode:
setFootprint:
setGender:
_synthesizer
prewarmIfNeededWithRequest:
isSpeaking
_isSynthesisQueueEmpty
_activeElements
_elementQueue
_cancelByCancellingActiveElementsOnly:
dequeueAllObjects
stopSpeakingPresynthesizedAudioSynchronously:error:
stopSpeakingAtNextBoundary:synchronously:error:
makeObjectsPerformSelector:
invalidateOnMainThread
performSelectorOnMainThread:withObject:waitUntilDone:
_siriClientStateManager
invalidateClient:
_processElementQueue
_activeElementWithPresynthesizedAudioRequest:
speechSynthesizer:didFinishPresynthesizedAudioRequest:withInstrumentMetrics:error:
beginTransaction
endSpeakingForClient:
endTransaction
postNotificationName:object:
finishedIPTest:
_activeElementWithSpeechRequest:
dictionaryMetrics
mutableCopy
requestCreatedTimestamp
logEventWithType:machAbsoluteTime:context:
speechBeginTimestamp
speechEndTimestamp
initWithUtterance:beginTimestamp:endTimestamp:
synchronizeVoiceServicesLanguageCode
_enqueueText:audioData:identifier:language:gender:isPhonetic:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:preparationIdentifier:shouldCache:synthesizesWhileRecording:completion:animationIdentifier:analyticsContext:speakableContextInfo:
_delayedElements
setObject:forKeyedSubscript:
enqueueObject:
objectForKeyedSubscript:
removeObjectForKey:
decoderStreamDescription
playerStreamDescription
initWithAudioData:decoderStreamDescription:playerStreamDescription:
initWithAudioData:playerStreamDescription:
startSpeakingPresynthesizedAudioRequest:
beginSpeakingForClient:
caseInsensitiveCompare:
genderString
startSpeakingRequest:
setContextInfo:
setVoiceType:
queryPhaticCapability:
errorWithCode:
firstObject
_findVoiceForLanguage:gender:completion:
_processProvisionalElements
frontObject
dequeueObject
_handleAudioData:completion:
_handleText:completion:
_filterVoices:gender:
allKeys
getAvailableVoicesForSynthesisLanguage:completion:
_genderForString:
objectAtIndex:
queue:didEnqueueObjects:
powerLevelListener:powerLevelDidUpdateTo:
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:withRequest:didReceiveTimingInfo:
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeakingRequest:withInstrumentMetrics:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechSynthesizer:didFinishSynthesisRequest:withInstrumentMetrics:error:
speechSynthesizer:didStartPresynthesizedAudioRequest:
speechSynthesizer:didStopPresynthesizedAudioRequest:atEnd:error:
speechSynthesizer:didFinishPrewarmRequest:withError:
speechSynthesizer:didFinishSynthesisRequest:withError:
speechSynthesizer:didStopPresynthesizedAudioRequestAtEnd:error:
speechSynthesizerDidStartSpeaking:
speechSynthesizer:didFinishSpeaking:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeaking:withError:
speechSynthesizer:didFinishSpeakingRequest:successfully:withError:
speechSynthesizerDidPauseSpeaking:
speechSynthesizerDidContinueSpeaking:
speechSynthesizer:willSpeakRangeOfSpeechString:
isSynthesisQueueEmpty:
_setSynthesizer:
_setSiriClientStateManager:
_sessionID
_outputVoice
_availableVoicesForLanguage
_processingElementsQueue
_pendingElementsQueue
_pendingElementsGroup
_powerLevelListener
code
domain
_cachedGuideUpdate
guideTag
guideSnippet
suggestedUtterances
date
_shouldCheckForUpdateAtDate:lastAppUpdateTime:
_updateLastCheckedWithDate:
dataWithPropertyList:format:options:error:
_pathForCachedGuideUpdate
writeToFile:options:error:
defaultManager
removeItemAtPath:error:
setCurrentGuideTag:
afui_guideCheckSupportedFeatures
setSupportedFeatures:
updateCacheWithGuideUpdate:completion:
updateLastCheckedDate
handleCommand:commandHandler:completion:
cachedGuideTag
_checkGuideUpdateUsingAFClientLiteWithTag:
attributesOfItemAtPath:error:
dateByAddingTimeInterval:
compare:
setAttributes:ofItemAtPath:error:
_aceObjectDictionaryAtFilepath:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
cachedGuideSnippet
cachedSuggestedUtterances
shouldCheckForUpdateWithLastAppUpdateTime:
_clearCachedGuide
checkGuideUpdate
_cacheFileQueue
_isCheckingGuideUpdate
_updateState:
initWithKeyOptions:valueOptions:capacity:
initWithRequestOptions:updateHandle:
addTriggerTarget:action:
removeTriggerTarget:
options
_options
_observers
endListening
initWithXPCWrapper:
_frequency
initWithProvider:queue:frequency:delegate:
beginUpdate
beginAudioPowerUpdateWithReply:
endAudioPowerUpdate
endUpdate
_carScreen
maximumFramesPerSecond
audioPowerUpdaterDidUpdate:averagePower:peakPower:
beginListeningToSpeechSynthesizer:
_powerLevelListenerDelegate
_outputAudioPowerUpdater
clientSettingsClass
transitionContextClass
otherSettings
objectForSetting:
intValue
initWithSettings:
mutableCopyWithZone:
numberWithUnsignedInt:
setObject:forSetting:
setClientWindowContextID:
_configureEyesFreePresentation:
backdropView
systemImageNamed:
setContentMode:
setVisible:
eyesFreeMode
_eyesFreeMode
setAssistantVersion:
_setPropertyValue:withSelector:
setActiveAccount:
setUserAccountCount:
_strippedInfo
applyInfo:
assistantVersion
userAccountCount
_initWithIdentifier:
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
_assistantVersion
_activeAccount
_userAccountCount
localeWithLocaleIdentifier:
_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:
_performWithoutRetargetingAnimations:
afui_speakableUtteranceParserForCurrentLanguage
afui_hasExternalDomainsForStringWithFormat:
speakableProviderForObject:
registerProvider:forNamespace:
parseStringWithFormat:error:
animateUsingSpringWithStiffness:damping:animations:
parsedUtteranceFromText:context:
orbViewModeForSiriSessionState:
bundleWithIdentifier:
characterDirectionForLanguage:
assistantLanguageForceRTL
_assistantUILocalizedStringForKey:value:table:language:
preferredLanguages
assistantUILocalizedStringForKey:value:table:
_assistantUIlocalizationArrayForLanguageCode:
_assistantUIStringForKey:value:table:localizationLanguageCode:
localizations
arrayWithObject:
bundleIdentifier
assistantLanguageIsRTL
assistantUILocale
assistantUILocalizedStringFromSiriLanguageForKey:table:
assistantUILocalizedStringFromSystemLanguageForKey:table:
assistantUILocalizedStringForKey:table:
afui_assistantUIFrameworkBundle
scheme
lowercaseString
afui_hasMapItemScheme
cardSections
nextCard
setCardSectionId:
setResultIdentifier:
dictionaryRepresentation
afui_hasContentEqualTo:
afui_isRemoteVoiceActivation
rangeOfString:
substringToIndex:
label
hostname
substringFromIndex:
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
URLByAppendingPathComponent:isDirectory:
showServerOnUI
settlingDuration
accounts
setHostname:
_setDefaultParameterValues
setScheme:
setPercentEncodedHost:
componentsJoinedByString:
stringValue
initWithName:value:
setQueryItems:
bugReporter:openURL:
setValue:forKey:
URLWithString:
URLByAppendingPathComponent:
absoluteString
attachFileAtPath:image:
_attachmentPaths
appendFormat:
_hostname
_siriLanguage
_lastUserText
canReportBugs
composeBugReport
setSiriLanguage:
setLastUserText:
setIncludeSysdiagnosesFromDevices:
setContextCollectorsInfo:
setKeywordIdentifiers:
maximumAttachmentSize
attachData:name:mimeType:
setComponentName:componentVersion:componentID:
setEmailGroup:
setDescription:
_contextCollectorsInfo
_tapToRadarParameters
setTapToRadarParameters:
setAttachmentPaths:
setGradientType:
_updateGradientOpacity
setOpaque:
clearColor
setAllowsHitTesting:
setType:
setStartPoint:
setEndPoint:
setLocations:
_fadeInAnimation
_fadeOutAnimation
colorWithWhite:alpha:
CGColor
setColors:
animationWithKeyPath:
initWithControlPoints::::
layerClass
initWithGradientType:
setGradientStartOpacity:
setGradientEndOpacity:
setVisible:animated:
gradientHeight
setGradientHeight:
gradientOrigin
setGradientOrigin:
gradientType
gradientStartOpacity
gradientEndOpacity
_isVisible
_gradientHeight
_gradientType
_gradientStartOpacity
_gradientEndOpacity
_gradientOrigin
initWithSuiteName:
dataWithContentsOfURL:options:error:
registerDefaults:
URLForResource:withExtension:
initWithDefaultsAtURL:
integerForKey:
doubleForKey:
boolForKey:
stringForKey:
preferences:didChangeValueForKey:
setInteger:forKey:
_mutateValueForKey:block:
setDouble:forKey:
setBool:forKey:
synchronize
initWithDefaultsResource:withExtension:inBundle:
_userDefaults
_requestToPresentDebugController:
_alertControllerWithActionTypes:
_requestToPresentAlertController:
_dismissAlertControllerAnimated:
dismiss
_debugControllerPresentationWillStart
_captureViewHierarchyDescriptionForController:
bugReportPresenterRequestsActiveConversation:
_lastUserTextFromConversation:
_conversationDataFromConversation:
_logTime
_debugControllerPresentationDidEnd
presentWithActivationTime:lastUserText:conversation:completion:
_requestDeviceUnlockWithSuccessCompletion:withErrorCompletion:
_setPresentedAlertController:
bugReportPresenter:requestsToPresentViewController:
bugReportPresenter:requestsToOpenURL:withCompletion:
bugReportPresenter:requestsToHandlePasscodeUnlockWithCompletion:
setViewHierarchyDescription:
bugReportPresenterRequestsPresentingView:
recursiveDescription
numberOfChildrenForItemAtIndexPath:
indexPathWithIndex:
itemAtIndexPath:
type
aceObject
af_bestTextInterpretation
bugReportPresenterRequestsLastPresentationTime:
alertControllerWithTitle:message:preferredStyle:
_actionForAlertAction:
addAction:
_actionTitleForAlertAction:
_actionStyleForAlertAction:
_actionClickedForAction:withActionType:
actionWithTitle:style:handler:
_requestToOpenURL:
_requestToPresentInternalDebugController:
bugReportPresenter:setBugReportingAvailable:
bugReportPresenter:requestsToPerformAceCommand:
bugReportPresenterShouldPromptUserForScreenshotPermission:
_confirmationAlertControllerWithTitle:onConfirmation:
bugReportPresenter:requestsToTakeScreenshotWithCompletion:
bugReportPresenterRequestsBugReportPrefixForTitle:
bugReportPresenterRequestsBugReportKeywordIdentifiers:
_dismissInternalDebugController
debugController:stateDidChangeWithAddViews:
debugController:requestsPermissionToScreenshot:
debugController:requestsScreenShotWithCompletion:
debugController:openURL:
debugControllerRequestsBugReportPrefixForTitle:
debugControllerRequestsBugReportKeywordIdentifiers:
internalDebugControllerWantsDismissViewController
hasContentAtPoint:
presentedAlertController
_internalDebugController
_debugController
_presentedAlertController
setObject:atIndexedSubscript:
afui_arrayByMappingWithBlock:
currentCalendar
components:fromDate:
year
month
_afui_isSameDayAsDate:
setDay:
dateByAddingComponents:toDate:options:
afui_isToday
afui_isTomorrow
initWithCommand:assertion:
command
assertion
_command
_assertion
invalidatePendingCommands
timerValue
processInfo
_performDelayedActionCommandTimerAction:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
delayedActionAceId
_invalidateDelayedActionTimer:withKey:
userInfo
_performCommandsWithDelayedActionCommand:
allValues
_commandHandler
enqueueDelayedActionCommand:completion:
cancelDelayedActionWithDelayedActionCancelCommand:completion:
performDismissalCommands
_delayedActionTimersByIdentifier
_dismissalDelayedActionCommandsByIdentifier
_setDismissalPolicy:
_setShouldDismissForTapsAndPans:
_setDelegate:
_setIdleAndQuiet:
_dismissalPolicy
_dismissalPolicyForPassThroughAlways:forSessionState:
_dimmingLayerVisible
_dismissalPolicyForPassThroughUnlessDimmed:forSessionState:
_setDimmingLayerVisible:
_updateDelegateOfPolicyChange
_setShouldDismissForTapsAndPans:shouldDelayDelegateUpdate:
_shouldDismissForTapsAndPans
tapPanDismissalPolicyManager:dismissalPolicyDidChange:
initWithPolicy:delegate:
idleAndQuietDidChange:forSessionState:dimmingLayerVisible:
idleAndQuietDidChange:forSessionState:
dimmingLayerVisibilityDidChange:forSessionState:
_idleAndQuiet
afui_insertionContext
dialogIdentifier
timeZoneId
timeZoneWithName:
afui_timeZone
unit
value
afui_metersValue
afui_abbreviatedUnit
afui_compare:
bundleId
bagKeySet
bagSubProfile
bagSubProfileVersion
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
initWithBag:caller:keyProfile:
performLookupWithBundleIdentifiers:itemIdentifiers:
allItems
appDisplayName
displayName
setAppDisplayName:
appStoreUri
productPageURL
setAppStoreUri:
addFinishBlock:
setSpeakableText:
setAceId:
setDialogPhase:
setViews:
_afui_installAppPunchout
afui_populateStoreServicesData:
setAppAvailableInStorefront:
setPunchOutUri:
setCommands:
afui_punchOutFailureViews
afui_punchOutAppNotAvailableViews
afui_getInstallAppPunchoutWithCompletion:
setBundleId:
afui_appPunchOutEventWithRefId:URL:appDisplayName:bundleId:
propertyForKey:
boolValue
setAfui_KeyboardInitiated:
afui_isKeyboardInitiated
phoneNumber
setMetadata:
setVisibility:
setStreamType:
setActivity:
donateActivityCommand
object
selectionResponse
selectionText
setSelectionText:
afui_appInfo
afui_setSelectionTextWithDisambiguationList:
compare:options:
intentIDs
_capabilityForKey:
unsignedIntegerValue
shouldShowHeaderForDirectActionEvent:
dictionaryWithContentsOfFile:
setAllowsGroupBlending:
filterWithType:
setCompositingFilter:
_setPlusDBackgroundColorWithWeighting:
materialView
setMaterialView:
lightenSourceOverView
setLightenSourceOverView:
plusDView
setPlusDView:
_materialView
_lightenSourceOverView
_plusDView
selectedAceId
_listItemMatchingAceId:
disambiguationAssistance
af_saveItemSelection:forType:
_logDisambiguationSelectedEventWithListItem:
_allListItems
metricsContext
_recordSASMetrics:withSelectedBundleId:originalCommandId:
title
logEventWithType:contextProvider:
appIdentifyingInfo
siriui_bundleId
listItems
valueForKeyPath:
logDisambiguationItemSelected:
logDisambiguationDismissedEvent
setListItems:
setDisambiguationAssistance:
_listItems
_disambiguationAssistance
initWithRequestSource:uiPresentationIdentifier:
_baseRequestOptions
_initWithRequestOptions:
setSpeechFileURL:
initWithText:
initWithRecordedSpeechURL:
requestOptions
_requestOptions
setActive:error:
setCategory:withOptions:error:
initWithContentsOfURL:error:
_setPlayer:
_player
prepareToPlay
setCurrentTime:
play
audioPlayer:didFinishPlayback:
audioPlayerStartPlaying:
stop
deactivateAudioSessionOnPlaybackFinished
setActive:withOptions:error:
voicemailPlayer
audioMessagePlayer
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
startPlaying
stopPlaying
setDeactivateAudioSessionOnPlaybackFinished:
conversationItemIdentifier
setConversationItemIdentifier:
_deactivateAudioSessionOnPlaybackFinished
_playbackCommand
_conversationItemIdentifier
initWithConnection:configuration:requestSource:
initWithNibName:bundle:
_statusBarFrameDidChange:
_applicationWillResignActive:
_applicationWillEnterForeground:
_applicationDidBecomeActive:
_suspendRemoteViewControllerDispatchQueue
_beginDelayingPresentation:cancellationHandler:
_resumeRemoteViewControllerDispatchQueue
_session
statusBarEnabled
viewMode
_compactSiriView
shouldRequestStatusBar
_showStatusBarAnimated:completion:
_hideStatusBarAnimated:completion:
preferredContentSize
setPreferredContentSize:
isMainThread
_fullSiriView
_siriView
currentSource
_carPlaySiriView
updateBackgroundVisibility:
animateWithFactory:actions:completion:
_setFullScreenDimmingLayerVisible:animated:
_orbViewControllingView
animateOrbViewToOffWithCompletion:
requestStatusBarVisible:animated:completion:
_remoteViewController
_enqueueRemoteViewControllerMessageBlock:
_thresholdForBarSwipeDismissal
contentRect
_setInFluidDismissal:
dismissSiriViewController:delayForTTS:withDismissalReason:
contentWeighting
setTransform:
setCenter:
backgroundWeighting
logEventWithType:context:
performWithoutAnimation:
_isUserUtteranceTapToEditInProgress
_currentSessionAvailabilityState
initWithFlamesViewFidelity:isSystemHostedPresentation:allowResizingBetweenModes:siriViewMode:
isSystemHostedPresentation
_isDeviceScreenOn
isDeviceInStarkMode
_shouldShowVoiceActivationMaskViewWithSiriView:requestSource:screenOff:connectedToCarPlay:
_showVoiceActivationMaskView:
updateBackgroundViewMode:
requestStatusBarVisible:
siriViewController:voiceActivationMaskViewIsVisible:
_statusBar
_statusBarFrame
getStatusBarOverrideData
setLocalDataOverrides:
_setStatusBar:
setEdgeAntialiasingMask:
requestStyle:
bringSubviewToFront:
_referenceBounds
statusBar
defaultHeight
interfaceOrientation
supportedInterfaceOrientations
addEntriesFromDictionary:
_triggerPeopleSuggesterLogging
_recordUIAppearance
beginPresentationTransition
_sendBeginAppearanceTransitionIfReadyAnimated:
_keyboardDidShowNotification:
_keyboardDidHideNotification:
CGRectValue
_keyboardInfoFromNotification:
heightForWidthSizeClass:
_sendEndAppearanceTransitionIfReady
siriViewControllerDidChangeVisibility:
_updateAudioRoutePicker
systemUptime
_setViewDidAppearTime:
endPresentationTransition
viewWillDisappear:
_setShowKeyboardIfTextInputEnabled:
isShowingPicker
cancelPickerAnimated:
beginAppearanceTransition:animated:
endAppearanceTransition
_setHasCalledBeginAppearanceTransition:
_setHasCalledEndAppearanceTransition:
_removeStatusBar
_recordUIDismissal
didMoveToParentViewController:
_informRemoteViewControllerOfParentIfNecessary
_presentRemoteViewController
safeAreaInsetsForSceneCreationInSiriViewController:
siriViewController:didEncounterUnexpectedError:
isBeingPresented
addChildViewController:
_endDelayingPresentation
containsView:
convertRect:toView:
setDockFrame:
setStatusBarEnabled:
setShouldPassTouchesThroughToSpringBoard:
setShareHomeGesture:
siriViewController:updateHomeAffordanceForBlurVisibilty:
_hasCalledBeginAppearanceTransition
_hasCalledEndAppearanceTransition
siriViewController:bulletinWithIdentifier:
lockStateForSiriViewController:
siriViewControllerDidFinishDismissing:
errorWithDomain:code:userInfo:
dismissSiriViewController:delayForTTS:
resetGestureBehaviors
startGuidedAccessForSiriViewController:
userRelevantEventDidOccurInSiriViewController:
textField
siriViewController:launchApplicationWithBundleIdentifier:withURL:launchOptions:replyHandler:
_setPunchingOut:
siriViewController:siriIdleAndQuietStatusDidChange:
_setStatusViewHidden:
_setTypeToSiriViewHidden:
requestStyle:animated:
willChangeValueForKey:
didChangeValueForKey:
_updateInterfaceOrientationAnimated:
lockStateForSiriRemoteViewController:
siriViewController:willStartTest:
siriViewController:didFinishTest:
siriViewController:failTest:withReason:
enterUITrackingMode
exitUITrackingMode
_isInitialSpeechRequest
currentRequestOptions
_setShowKeyboardIfTextInputEnabled:minimized:
siriViewController:didReadBulletinWithIdentifier:
siriViewController:openURL:delaySessionEndForTTS:completion:
siriViewController:openURL:appBundleID:allowSiriDismissal:
_handleMicButtonTapFromSource:
_handleMicButtonLongPressBeganFromSource:
_handleMicButtonLongPressEndedFromSource:
siriViewController:didChangePresentationPeekMode:
_didDetectAudioRoutePickerTap
_setUserUtteranceTapToEditInProgress:
isInHardwareKeyboardMode
_deactivateReachability
siriViewController:requestsPresentation:
siriViewController:requestsDismissalWithReason:withCompletion:
siriViewController:requestsDismissal:
siriViewController:presentedIntentWithBundleId:
siriViewController:didUpdateAudioCategoriesDisablingVolumeHUD:
siriViewController:sceneDidActivateWithIdentifier:
siriViewControllerDidDeactivateScene:
siriViewController:didHideStatusView:
resignFirstResponder
becomeFirstResponder
firstResponder
isFirstResponder
_handleReportBugAction
_handleHelpAction
_handleReportBugLongPressAction
_uiPresentationIdentifier
siriViewControllerSpeechRequestStartedFromSiriOrb
siriViewControllerSpeechRequestCancelledFromSiriOrb
startRequestWithActivationTrigger:
handlePasscodeUnlockAndCancelRequest:withCompletion:
beginIgnoringInteractionEvents
endIgnoringInteractionEvents
requiresUserInteraction
handoffOriginDeviceName
defrost
willPresentUI
_setVoiceTriggerEnabled:
_handleSiriDidActivateFromSource:
_viewDidAppearTime
didDismissUI
_systemState
updateIfNeededWithSystemState:
siriViewController:willStartRequestWithOptions:
predictedRecordRouteIsZLL
_setRecordingStartedTimeValue:
_setCurrentRequestOptions:
_updateRemoteViewControllerStateForAppearance
shouldAutorotate
isBlurViewVisible
_isInHoldToTalkMode
_currentRequestOptions
_canIgnoreHoldToTalkThreshold
_holdToTalkThresholdHasElapsed
setInitialBringUp:
_delayForHoldToTalkStopRequestsWithSource:
_stopRequestWithOptions:afterDelay:
_transitionToAutomaticEndpointMode
siriViewControllerShouldSupportTextInput:
_recordingStartedTimeValue
_manualEndpointingThreshold
_setInHoldToTalkMode:
_exitHoldToTalkMode
manualEndpointingThreshold
_holdToTalkTriggerDidReleaseFromSource:
startRequestWithActivationTrigger:completion:
_activationTriggerDidRelease:
inputAccessoryView
_enterHoldToTalkMode
siriViewControllerShouldEndSession:
siriViewController:attemptUnlockWithPassword:
_routePickerController
showPickerFromViewController:animated:
initWithCategory:mode:delegate:
refreshRoutes
hasRoutesToPick
_setShowAudioRoutePicker:
bluetoothIsPicked
_setAudioRoutePickerBluetoothOn:
bulletinsForSiriViewController:
contextAppInfosForSiriViewController:
currentCarPlaySupportedOEMAppsForSiriViewController:
starkAppBundleIdentifierContextForSiriViewController:
siriViewController:willProcessAppLaunchWithBundleIdentifier:
siriViewController:failedToLaunchAppWithBundleIdentifier:
setInputPowerLevel:
setOutputPowerLevel:
siriViewControllerDidChangeToListeningMode:
presentRemoteViewControllerIfNecessary
siriViewControllerSessionDidResetContext:
siriViewController:didEndSession:
_presentDeferredFlamesViewIfNecessary
siriViewController:didCompleteRequestWithError:
isVisible
punchOutUri
launchOptions
deviceScreenIsOn
animateOrbViewDismissalWithCompletion:
_updateSiriAvailability:
siriRemoteViewController:willStartTest:
siriRemoteViewController:didFinishTest:
siriRemoteViewController:failTest:withReason:
siriView:attemptUnlockWithPassword:
collapseAndTriggerDismissalFromSiriView:
siriContentDidReceiveOrbTappedAction:
siriContentDidReceiveOrbHoldDidBeginAction:
siriContentDidReceiveOrbHoldDidEndAction:
siriContentDidReceiveReportBugAction:
siriContentDidReceiveReportBugLongPress:
compactView:bottomContentInsetDidChange:
compactView:blurVisibilityDidChange:
routePickerController:hasRoutesToPick:
routePickerControllerPickedNewRoute:isBluetooth:
routePickerControllerWillShow:
routePickerControllerWillDismiss:
siriSession:didReceiveDeviceUnlockRequestWithCompletion:
keyboardView:didReceiveText:
keyboardViewDidReceiveHelpButtonAction:
keyboardViewDidReceiveReportBugAction:
keyboardViewDidReceiveBugButtonLongPress:
keyboardViewDidReceiveAudioRouteAction:
initWithConnection:configuration:
setReceivedIncomingPhoneCall:
setHostedPresentationFrame:
proximityStatusChanged:
cancelSpeechRecordingIfNecessary
animatedAppearanceWithFactory:completion:
animatedDisappearanceWithFactory:completion:
setFluidDismissalState:
canBecomeFirstResponder
setInputAccessoryView:
keyboardAppearance
childViewControllerForHomeIndicatorAutoHidden
shouldAutomaticallyForwardAppearanceMethods
showPasscodeUnlockScreenForRequest:unlockCompletion:
updateContexts:
setSiriRequestCancellationReason:
handleViewFullyRevealed
shortTapAction
hasQueuedTTS:
cancelTTS
updateSettingsOnRemoteSceneForInterfaceOrientationChange:willAnimationWithDuration:
_recordingStartedOnRoute
_setRecordingStartedOnRoute:
emitUIStateTransitionForSiriDismissalWithReason:
hideVoiceActivationMaskViewIfNecessary
animateOrbViewDismissalIfNecessaryWithCompletion:
setDirectActionEvent:
carDNDActive
receivedIncomingPhoneCall
turnsOnScreenOnAppearance
setTurnsOnScreenOnAppearance:
showsStatusBar
setShowsStatusBar:
_remoteViewControllerDispatchQueue
routePickerController
setRoutePickerController:
isViewDisappearing
setViewDisappearing:
_isPunchingOut
hostedPresentationFrame
_active
_remoteViewControllerDispatchQueueSuspended
_vtEnabledCount
_currentRequestSource
_triggerUpdater
_delayedActionCommandCache
_siriSessionWantsToEnd
_uiAppearanceUUIDString
_uiAppearanceCoreDuetQueue
_presentedConversationFromBreadcrumb
_inputAccessoryView
_keyboardInfo
_unlockScreenVisible
_remoteViewControllerIsPresenting
_hostingConnectionState
_dismissalUserInfo
_shouldShowVoiceActivationMaskView
_statusBarDeferralState
_requestCancellationReason
_requestedBlurVisible
_networkAvailabilityStateMachine
_tapPanDismissalPolicyManager
_immersiveExperienceOn
_visible
_deviceIsInStarkMode
_carDNDActive
_receivedIncomingPhoneCall
_turnsOnScreenOnAppearance
_showsStatusBar
_statusBarEnabled
_inHoldToTalkMode
_viewDisappearing
_userUtteranceTapToEditInProgress
_punchingOut
_directActionEvent
_hostedPresentationFrame
userContext
keyPathForSiriActiveStatus
eventStreamWithName:
eventWithStream:startDate:endDate:identifierStringValue:metadata:
knowledgeStore
saveObjects:error:
audioPlayer:audioURLForCommand:
_dimmingViewColor
animation
backgroundColor
_setupBugReportButtonIfNeeded
_setUpEyesFreePresentation:
_orbViewContainerFrame
_originXForOrbContainer
setHitTestsAsOpaque:
_micButtonTapped:
_micButtonHeld:
setMinimumPressDuration:
insertSubview:atIndex:
_synchronizeDrawingWithFence:
requestBackgroundBlurVisible:forReason:
_shouldShowBugReportButton
_constructAndAddBugReportButtonWithImage:
systemDarkGrayTintColor
setCornerRadius:
setTranslatesAutoresizingMaskIntoConstraints:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setActive:
animateToOffWithCompletion:
convertRect:fromView:
setPowerLevel:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
backgroundBlurViewController:didSetBlurVisibilityTo:
_orbViewContainer
_orbView
_touchInputView
_longPressRecognizer
_dimmingBackdropView
_siriContentDelegate
_compactViewDelegate
_dockFrame
_eyesFreeView
_blurringAndLockContainer
_fullScreenBlurViewController
_ignoreSiriSessionUpdates
_blurViewVisible
initWithLocaleIdentifier:
initWithLocale:
_domainsForStringWithFormat:
_builtInDomains
isSubsetOfSet:
handleTTSCodes
handlesFunctions
initWithString:
appendString:
enumerateSubstringsInRange:options:usingBlock:
tableBackgroundColor
topAnchor
constraintEqualToAnchor:
leadingAnchor
trailingAnchor
bottomAnchor
arrayWithArray:
activateConstraints:
backgroundViewMode
_animateBackgroundsWithVisibility:backgroundViewMode:
_updateViewsForVisibility:backgroundViewMode:
_updateCarPlayStatusBarForVisibility:backgroundViewMode:
updateVisibility:
settingsWithMass:stiffness:damping:
backgroundView:requestsCarPlayStatusBarOverride:animationSettings:
setBackgroundViewMode:
_fullScreenBackgroundView
_systemBackgroundView
_backgroundViewMode
siriNetworkAvailabilityDidChange
airplaneModeChanged
radioPreferences
setRadioPreferences:
stateMachine
setStateMachine:
_radioPreferences
imageResourceFromKey:pressedKey:punchOut:
setLocalResourceBundle:
setLocalResourceName:
setLocalPressedResourceName:
setLocalPunchOut:
appIconMap
appIcon
resourceUrl
scaleFactor
pixelWidth
pixelHeight
setRemoteURL:
setRemoteScale:
setRemotePressedURL:
setRemotePressedScale:
setLogoSize:
setRemotePunchOut:
localResourceName
_fetchRemoteResourcesWithCompletion:
_fetchLocalResourcesWithCompletion:
remoteURL
_imageInLocalResourceBundleNamed:
size
localPressedResourceName
localPunchOut
localResourceBundle
_deviceSpecificImageNamed:inBundle:
remotePressedURL
remotePunchOut
sharedURLSession
imageTaskWithHTTPGetRequest:client:completionHandler:
imageResourceWithAppPunchOut:
imageResourceWithLocalResourceName:pressedResourceName:localPunchOut:bundle:
getLogoWithCompletion:
logoSize
remoteScale
remotePressedScale
_localResourceName
_localPressedResourceName
_localPunchOut
_localResourceBundle
_remoteURL
_remotePressedURL
_remotePunchOut
_remoteScale
_remotePressedScale
_logoSize
initWithCode:userInfo:
initWithDomain:code:userInfo:
debugErrorWithCode:userInfo:
_setupAuraBackdropViews
pathForResource:ofType:
imageWithContentsOfFile:
colorWithDynamicProvider:
colorEffectSaturate:
effectWithBlurRadius:
setBackgroundEffects:
_backgroundView
_auraView
_effectView
sampleRate
formatID
unsignedIntValue
formatFlags
bytesPerPacket
framesPerPacket
bytesPerFrame
channelsPerFrame
bitsPerChannel
reserved
initWithData:mimeType:name:attemptCompression:
stringByAppendingPathExtension:
logWithData:mimeType:name:attemptCompression:
data
mimeType
_data
_mimeType
_name
setAutoresizingMask:
navigationController
setNavigationBarHidden:
dismissSiriSetupViewController:
siriSetupView
updateHomeGestureSharingForSiriSetup:
setAssistantIsEnabled:
openSiriRequestedBySiriSetupViewController:
disableSiriActivationRequestedBySiriSetupViewController:
assistantIsEnabled
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentationControllerDidDismiss:
presentationControllerDidAttemptToDismiss:
setLastTimeShown:
_continueTapped:
_laterTapped:
lastTimeShown
setSiriSetupView:
_contentView
_lastTimeShown
_siriSetupView
dataUsingEncoding:
keyWindow
_queue
_siriCardLogDirectoryURL
_captureLogsAtURL:logName:sinceTime:pattern:mimeType:completion:
_siriLogDirectoryURL
_captureLogsInDirectoryAtURL:matchingPattern:withMimeType:attemptCompression:limit:error:
_uniqueTemporaryFileURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
path
_baseLogDirectoryURL
_contentsOfDirectoryAtURL:matchingPattern:sortedByDateWithResourceKey:error:
subarrayWithRange:
executeSystemCommand:stdoutTo:
stringByAppendingString:
_archiveLogDirectoryAtURL:name:error:
URLByDeletingLastPathComponent
removeItemAtURL:error:
componentsSeparatedByString:
cStringUsingEncoding:
_contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:
getResourceValue:forKey:error:
timeIntervalSinceDate:
predicateWithBlock:
filteredArrayUsingPredicate:
lastPathComponent
URLByAppendingPathExtension:
initWithContentsOfURL:options:error:
regularExpressionWithPattern:options:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
numberOfMatchesInString:options:range:
sortedArrayUsingComparator:
fileURLWithPath:
captureViewHierarchyLogWithDefaultViewHierarchy:completion:
captureCardLogsSinceTime:completion:
captureSiriSpeechLogsWithCompletion:
captureSiriVoiceTriggerLogsWithCompletion:
captureSiriTTSAudioWithCompletion:
capturePreviousConversationWithCompletion:
_captureLogsAtURL:logName:sinceTime:completion:
_captureFileAtURL:completion:
constraints
deactivateConstraints:
_orbHeldWithGestureRecognizer:
_orbTappedWithGestureRecognizer:
requireGestureRecognizerToFail:
safeAreaLayoutGuide
constraintEqualToAnchor:constant:
centerXAnchor
widthAnchor
constraintEqualToConstant:
heightAnchor
centerYAnchor
orbViewRectInCarplayView
_orbContainerView
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24Q32
@"AFUISceneConfiguration"16@0:8
v32@0:8@"AFUISceneController"16@"FBScene"24
v40@0:8@"AFUISceneController"16@"FBScene"24Q32
v32@0:8@"AFUISceneController"16@"AFUISceneClientSettings"24
@24@0:8@16
v16@0:8
v20@0:8B16
v32@0:8q16d24
v24@0:8q16
v32@0:8@16@?24
v32@0:8Q16@24
v24@0:8@16
v32@0:8@16q24
v24@0:8@?16
{UIEdgeInsets=dddd}16@0:8
v28@0:8@16B24
v40@0:8{CGSize=dd}16@32
q16@0:8
v48@0:8{UIEdgeInsets=dddd}16
@"AFUISceneConfiguration"
@"AFUISceneController"
@"UIView"
@"<UIScenePresenter>"
@"FBSceneClientProviderInvalidationAction"
@"FBScene"
@"<BSInvalidatable>"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@32@0:8@16@24
@"NSString"
v56@0:8@16d24d32q40@?48
f24@0:8@16
{UIEdgeInsets=dddd}24@0:8@16
f24@0:8@"SiriUISiriStatusView"16
v24@0:8@"SiriUISiriStatusView"16
{UIEdgeInsets=dddd}24@0:8@"SiriUISiriStatusView"16
@"UIView"16@0:8
v24@0:8@"UIView"16
v48@0:8@16@24@?32@?40
v24@0:8B16B20
v24@0:8d16
v48@0:8@"NSString"16@"NSString"24@?<v@?B>32@?<v@?q>40
v24@0:8@"<AFUISiriContentDelegate>"16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
B24@0:8q16
d16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"_UIBackdropView"
@"SiriUIAudioRoutePickerButton"
@"SiriUIHelpButton"
@"SiriUIContentButton"
@"SiriUIConfiguration"
@"SiriUIVisualEffectView"
@"UIImageView"
@"UILabel"
@"UIView<SiriUISiriStatusViewProtocol>"
@"<AFUISiriViewDataSource>"
@"<AFUISiriViewDelegate>"
@"AFSettingsConnection"
@40@0:8{CGPoint=dd}16@32
v36@0:8B16@20Q28
v48@0:8@16@24q32@?40
v32@0:8B16B20@?24
v36@0:8@16B24@?28
v36@0:8@16@24B32
v24@0:8Q16
v32@0:8Q16@?24
v36@0:8B16q20@28
v24@0:8@?<v@?q>16
v36@0:8B16@"NSDictionary"20Q28
v32@0:8@"NSString"16@?<v@?@"AFBulletin">24
v24@0:8@"NSString"16
v24@0:8@"SASRequestOptions"16
v48@0:8@"NSString"16@"NSURL"24q32@?<v@?B>40
v32@0:8B16B20@?<v@?B>24
v36@0:8@"NSURL"16B24@?<v@?B>28
v36@0:8@"NSURL"16@"NSString"24B32
v24@0:8@?<v@?@"NSData">16
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"NSString">16
v32@0:8Q16@?<v@?B>24
v36@0:8B16q20@"BKSAnimationFenceHandle"28
v44@0:8@16@24B32@?36
v44@0:8@"NSString"16@"NSDictionary"24B32@?<v@?B>36
@24@0:8@?16
v28@0:8B16@?20
v24@0:8^{?=BBB{CGRect={CGPoint=dd}{CGSize=dd}}d}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v40@0:8{CGPoint=dd}16@?32
v20@0:8i16
@"NSArray"
@"<AFUISiriRemoteSceneViewControllerDataSource>"
@"<AFUISiriRemoteSceneViewControllerDelegate>"
@"AFApplicationInfo"
@"NSXPCConnection"
v24@0:8@"AFUISiriSessionInfo"16
v24@0:8@"NSError"16
v40@0:8q16q24q32
v20@0:8f16
v40@0:8@16@24@32
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?q>24
v24@0:8@"AFAnalyticsTurnBasedInstrumentationContext"16
v32@0:8@"SASRequestOptions"16@?<v@?@"SASRequestOptions">24
v32@0:8@"NSString"16@?<v@?B>24
v32@0:8@"NSURL"16@?<v@?B>24
v24@0:8@"INImage"16
v24@0:8@?<v@?@"NSArray">16
v24@0:8@"SASSpeechRecognized"16
v24@0:8@"SASSpeechPartialResult"16
v32@0:8@"AFSpeechInterpretation"16@"NSString"24
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v32@0:8@"SAUIAddViews"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAddDialogs"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIOpenLink"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIClearScreen"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAPhonePlayVoiceMail"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SASmsPlayAudio"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIPlayNotificationSound"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUISayIt"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIRepeatIt"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowHelp"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIUpdateViews"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAppPunchOut"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUICloseAssistant"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIListenForPronunciation"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIGetResponseAlternativesPlayback"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUISetSuggestedUtterances"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIChangePrimaryUtterance"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowFullScreenEffect"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowSpeechAlternatives"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SASettingSetUIGuidedAccess"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIHideSiriOverlay"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAGuidanceGuideUpdate"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAddContentToView"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SACardShowNextCard"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAPreSynthesizeTTS"16@?<v@?@"AceObject<SAAceCommand>">24
v24@0:8@"SAUIDisambiguationItemSelected"16
v32@0:8@"SAVCSPlayContent"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUILaunchTVRemote"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIExtendCurrentTTS"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIRevealRecognizedSpeech"16@?<v@?@"AceObject<SAAceCommand>">24
v24@0:8@"AceObject<SAAceCommand>"16
v32@0:8@"NSString"16@?<v@?@"NSString"B>24
v28@0:8@"NSString"16B24
v40@0:8B16B20Q24@?32
v24@0:8@"NSValue"16
v24@0:8@"NSNumber"16
v40@0:8@"NSString"16@"NSDictionary"24Q32
v24@0:8@?<v@?>16
v24@0:8@"<AFUISiriSession>"16
v24@0:8@"<AFUISpeechSynthesis>"16
v32@0:8B16B20@?<v@?>24
v40@0:8B16B20Q24@?<v@?>32
v24@0:8@"PBCodable"16
v32@0:8@"NSValue"16@?<v@?B>24
v48@0:8@16@24@32@40
v32@0:8@16d24
v32@0:8@"SASRequestOptions"16@?<v@?@"NSError">24
v48@0:8@"NSString"16@24@"AFUserUtteranceSelectionResults"32@"NSUUID"40
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?>24
v24@0:8@"NSDictionary"16
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?@"AceObject<SAAceCommand>">24
v24@0:8@"SABaseClientBoundCommand"16
v24@0:8@"AFMetrics"16
v32@0:8@"NSString"16d24
v32@0:8@"NSString"16@"NSString"24
v112@0:8@16@24@32@40B48B52d56B64B68@72@?80@88@96@104
v40@0:8@16@24@?32
v52@0:8@16@24B32d36@?44
v112@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48B52d56B64B68@"NSString"72@?<v@?q>80@"NSString"88@"NSDictionary"96@"NSDictionary"104
v40@0:8@"NSString"16@"NSString"24@?<v@?q>32
v52@0:8@"SAUIAudioData"16@"NSString"24B32d36@?<v@?q>44
v48@0:8@16@24@32@?40
v28@0:8@16I24
v32@0:8@16Q24
v48@0:8@16q24@32@?40
v24@0:8@"AFConnection"16
v40@0:8@"AFConnection"16@"AceObject<SAAceCommand>"24@?<v@?@"AceObject<SAAceCommand>">32
v40@0:8@"AFConnection"16@"NSError"24@"NSString"32
v40@0:8@"AFConnection"16@"NSURL"24@?<v@?B>32
v48@0:8@"AFConnection"16@"NSString"24@"NSURL"32@?<v@?B>40
v28@0:8@"AFConnection"16B24
v28@0:8@"AFConnection"16I24
v40@0:8@"AFConnection"16@"NSDictionary"24@"NSURL"32
v32@0:8@"AFConnection"16@"INImage"24
v32@0:8@"AFConnection"16@"NSString"24
v40@0:8@"AFConnection"16@"NSString"24@"NSError"32
v40@0:8@"AFConnection"16@"NSString"24@?<v@?B>32
v40@0:8@"AFConnection"16@"AFRequestInfo"24@?<v@?B>32
v32@0:8@"AFConnection"16@"AFAudioPlaybackRequest"24
v40@0:8@"AFConnection"16@"AFAudioPlaybackRequest"24@"NSError"32
v32@0:8@"AFConnection"16Q24
v48@0:8@"AFConnection"16q24@"INIntent"32@?<v@?BB>40
v32@0:8@"AFConnection"16q24
v36@0:8@16@24I32
v40@0:8@16q24@?32
v32@0:8@"AFConnection"16@"AFXPCWrapper"24
v36@0:8@"AFConnection"16@"NSString"24I32
v40@0:8@"AFConnection"16q24@?<v@?dd@"NSError">32
v32@0:8@"AFConnection"16@"NSError"24
v32@0:8@"AFConnection"16@"SASSpeechRecognized"24
v32@0:8@"AFConnection"16@"SASSpeechPartialResult"24
v40@0:8@"AFConnection"16@"AFSpeechInterpretation"24@"NSString"32
v48@0:8@"AFConnection"16@"NSArray"24@"NSArray"32@"NSString"40
v40@0:8@16q24q32
@32@0:8@16q24
v40@0:8@"AFUIStateMachine"16q24q32
@"NSString"32@0:8@"AFUIStateMachine"16q24
v40@0:8@16Q24@?32
v28@0:8@16f24
v24@0:8@"AFUISpeechSynthesis"16
v40@0:8@"AFUISpeechSynthesis"16Q24@?<v@?I@"NSError">32
B24@0:8@"AFUISpeechSynthesis"16
v24@0:8@"AFSpeechSynthesisRecord"16
v28@0:8@"AFUISpeechSynthesis"16f24
@?24@0:8@?16
v40@0:8@16@24d32
f16@0:8
i24@0:8q16
@32@0:8q16@24
@"NSObject<OS_dispatch_queue>"
@"AFUIStateMachine"
@"AFUISpeechSynthesis"
@"AFSpeechSynthesisRecord"
@"NSMutableSet"
@"AFConnection"
@"<AFUISiriSessionDelegate>"
@"<AFUISiriSessionLocalDataSource>"
@"<AFUISiriSessionLocalDelegate>"
@"AFUISiriSessionInfo"
@"NSObject<OS_dispatch_group>"
@"AFAnalyticsTurnBasedInstrumentationContext"
@"<AFUISiriLanguageDelegate>"
@80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56@64@72
@24@0:8Q16
@24@0:8^{_NSZone=}16
@"FBSDisplayConfiguration"
@"FBSSceneParameters"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
v24@0:8@"BSTransaction"16
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBApplicationProcess"24
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBScene"24
@"FBApplicationUpdateScenesTransaction"
@"BKSProcessAssertion"
@"<AFUISceneControllerDelegate>"
v32@0:8@"UIImage"16@"NSString"24
@"UIImage"24@0:8@"NSString"16
@24@0:8q16
v32@0:8q16q24
@"<AFUIStateMachineDelegate>"
@"NSMutableDictionary"
@124@0:8@16@24@32@40@48B56d60B68@?72@?80@88@96@104B112@116
@?16@0:8
@"SAUIAudioData"
@"VSSpeechRequest"
@"VSPresynthesizedAudioRequest"
@"<AFUISpeechSynthesisElementDelegate>"
@"NSDictionary"
v32@0:8@"AFQueue"16@"NSArray"24
v28@0:8@"AFUIPowerLevelListener"16f24
v24@0:8@"AFUISpeechSynthesisElement"16
v52@0:8@16@24B32@36@44
v48@0:8@16{_NSRange=QQ}24@40
v44@0:8@16@24B32@36
v36@0:8@16B24@28
v44@0:8@16B24@28@36
v40@0:8@16{_NSRange=QQ}24
v32@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSArray"32
v52@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24B32@"NSString"36@"NSError"44
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32
v48@0:8@"VSSpeechSynthesizer"16{_NSRange=QQ}24@"VSSpeechRequest"40
v48@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32@"NSError"40
v32@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24
v44@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24B32@"NSError"36
v48@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24@"VSInstrumentMetrics"32@"NSError"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSError"32
v36@0:8@"VSSpeechSynthesizer"16B24@"NSError"28
v24@0:8@"VSSpeechSynthesizer"16
v44@0:8@"VSSpeechSynthesizer"16B24@"NSString"28@"NSError"36
v44@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24B32@"NSError"36
v40@0:8@"VSSpeechSynthesizer"16{_NSRange=QQ}24
v20@0:8I16
v128@0:8@16@24@32@40@48B56B60d64B72B76@80B88B92@?96@104@112@120
q24@0:8@16
@"VSSpeechSynthesizer"
@"AFSiriClientStateManager"
@"AFVoiceInfo"
@"<AFUISpeechSynthesisDelegate>"
@"<AFUISpeechSynthesisLocalDelegate>"
@"AFUIPowerLevelListener"
@"AFQueue"
@"NSMutableArray"
B32@0:8@16@24
@"SAGuidanceGuideUpdate"
@32@0:8@16^@?24
v32@0:8@16:24
@"SASRequestOptions"
@"NSMapTable"
v32@0:8@16f24f28
v32@0:8@"AFAudioPowerUpdater"16f24f28
@"<AFUIPowerLevelListenerDelegate>"
@"AFAudioPowerUpdater"
I16@0:8
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"SiriUIBackgroundBlurView"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16:24
@"AFAccount"
@"NSNumber"
v40@0:8d16d24@?32
q24@0:8q16
@40@0:8@16@24@32
@48@0:8@16@24@32@40
v24@0:8@"NSArray"16
v40@0:8@"NSData"16@"NSString"24@"NSString"32
@"<AFUIBugReportingDelegate>"16@0:8
v24@0:8@"<AFUIBugReportingDelegate>"16
v40@0:8@"NSString"16@"NSString"24@"NSNumber"32
@"<AFUIBugReportingDelegate>"
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
{CGPoint="x"d"y"d}
d24@0:8@16
v32@0:8q16@24
v32@0:8d16@24
v28@0:8B16@20
@"NSUserDefaults"
@"<AFUIPreferencesDelegate>"
v32@0:8@"<AFUIDebugControlling>"16@"SAUIAddViews"24
v32@0:8@"<AFUIDebugControlling>"16@?<v@?B>24
v32@0:8@"<AFUIDebugControlling>"16@?<v@?@"UIImage">24
v32@0:8@"<AFUIDebugControlling>"16@"NSURL"24
@"NSString"24@0:8@"<AFUIDebugControlling>"16
@"NSArray"24@0:8@"<AFUIDebugControlling>"16
B32@0:8{CGPoint=dd}16
@24@0:8@"<AFUIBugReportPresentingDelegate>"16
v32@0:8@?16@?24
@32@0:8@16@?24
@"UIViewController<AFUIInternalDebugControlling>"
@"<AFUIDebugControlling>"
@"<AFUIBugReportPresentingDelegate>"
@"UIAlertController"
@"SAUIDelayedActionCommand"
v32@0:8B16q20B28
v28@0:8B16q20
@"<AFUISiriTapPanDismissalPolicyManagerDelegate>"
@"<AFUIDisambiguationAnalyticsManagerDataSource>"
@"<AFDisambiguationAssistance>"
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@"<AFUIAudioPlayerDelegate>"
@"AceObject"
@"NSUUID"
@"AVAudioPlayer"
Q24@0:8@16
@"AFBulletin"32@0:8@"AFUISiriRemoteSceneViewController"16@"NSString"24
Q24@0:8@"AFUISiriRemoteSceneViewController"16
v40@0:8@16Q24@32
v44@0:8@16B24@28Q36
v56@0:8@16@24@32q40@?48
v32@0:8@16B24B28
v40@0:8@16B24B28@?32
B44@0:8@16@24@32B40
v40@0:8@"AFUISiriRemoteSceneViewController"16Q24@"NSString"32
v44@0:8@"AFUISiriRemoteSceneViewController"16B24@"NSDictionary"28Q36
q24@0:8@"AFUISiriRemoteSceneViewController"16
v24@0:8@"AFUISiriRemoteSceneViewController"16
v32@0:8@"AFUISiriRemoteSceneViewController"16@"SASRequestOptions"24
v56@0:8@"AFUISiriRemoteSceneViewController"16@"NSString"24@"NSURL"32q40@?<v@?B>48
v28@0:8@"AFUISiriRemoteSceneViewController"16B24
v32@0:8@"AFUISiriRemoteSceneViewController"16B24B28
v32@0:8@"AFUISiriRemoteSceneViewController"16q24
v40@0:8@"AFUISiriRemoteSceneViewController"16B24B28@?<v@?B>32
v32@0:8@"AFUISiriRemoteSceneViewController"16@?<v@?q>24
v32@0:8@"AFUISiriRemoteSceneViewController"16@"NSString"24
v40@0:8@"AFUISiriRemoteSceneViewController"16@"NSString"24@"NSString"32
v44@0:8@"AFUISiriRemoteSceneViewController"16@"NSURL"24B32@?<v@?B>36
B44@0:8@"AFUISiriRemoteSceneViewController"16@"NSURL"24@"NSString"32B40
v32@0:8@"AFUISiriRemoteSceneViewController"16Q24
v32@0:8@"AFUISiriRemoteSceneViewController"16@"NSArray"24
v32@0:8@"AFUISiriRemoteSceneViewController"16@?<v@?@"NSString">24
v32@0:8@"AFUISiriRemoteSceneViewController"16@?<v@?B>24
v40@0:8@"AFUISiriRemoteSceneViewController"16Q24@?<v@?B>32
f24@0:8@"AFUISiriView"16
v24@0:8@"AFUISiriView"16
B32@0:8@"AFUISiriView"16@"NSString"24
v32@0:8@"AFUISiriView"16q24
B24@0:8@"AFUISiriView"16
v24@0:8@"<AFUISiriContent>"16
B32@0:8@"UIView<AFUISiriContent>"16@"NSString"24
v32@0:8@"AFUISiriCompactView"16d24
v28@0:8@"AFUISiriCompactView"16B24
v28@0:8@"SiriUIAudioRoutePickerController"16B24
v24@0:8@"SiriUIAudioRoutePickerController"16
@"NSArray"24@0:8@"AFUISiriSession"16
Q24@0:8@"AFUISiriSession"16
v32@0:8@"AFUISiriSession"16q24
v36@0:8@"AFUISiriSession"16B24@?<v@?q>28
v32@0:8@"AFUISiriSession"16@?<v@?q>24
v24@0:8@"AFUISiriSession"16
v32@0:8@"SAUIDelayedActionCommand"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIDelayedActionCancelCommand"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"AFUISiriSession"16@"NSString"24
v32@0:8@"SAUIAppPunchOut"16@?<v@?B>24
@"NSString"24@0:8@"AFUISiriView"16
@"AFAccount"24@0:8@"AFUISiriView"16
q24@0:8@"AFUISiriView"16
v32@0:8@"SiriUIKeyboardView"16@"NSString"24
v24@0:8@"SiriUIKeyboardView"16
v28@0:8@"AFUISiriTapPanDismissalPolicyManager"16B24
@40@0:8@16@24q32
B40@0:8@16q24B32B36
{?=BBB{CGRect={CGPoint=dd}{CGSize=dd}}d}24@0:8@16
d24@0:8q16
@"AFUIDelayedActionCommandCache"
@"SiriUIKeyboardView"
{?="enabled"B"minimized"B"hasBeenShown"B"keyboardFrame"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"keyboardHeight"d}
@"AFUINetworkAvailabilityStateMachine"
@"AFUISiriTapPanDismissalPolicyManager"
@"<AFUISiriViewControllerDataSource>"
@"<AFUISiriViewControllerDelegate>"
@"AFUISiriSession"
@"AFUISiriRemoteSceneViewController"
@"SiriUIAudioRoutePickerController"
@"UIStatusBar"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v28@0:8@"SiriUIBackgroundBlurViewController"16B24
@"SUICOrbView"
@"UILongPressGestureRecognizer"
@"AFUISiriCompactDimmingView"
@"<AFUISiriContentDelegate>"
@"<AFUISiriCompactViewDelegate>"
@"AFUISiriEyesFreeView"
@"SiriUIBackgroundBlurViewController"
@"AFUISiriCarPlayFullScreenBackgroundView"
@"<AFUISiriCarPlayBackgroundViewDelegate>"
@"<AFUINetworkAvailabilityStateMachineDelegate>"
@"RadiosPreferences"
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"SAUIAppPunchOut"
@"NSBundle"
@"NSURL"
{CGSize="width"d"height"d}
@"UIVisualEffectView"
@44@0:8@16@24@32B40
@"NSData"
q32@0:8@16@24
v40@0:8@16q24@32
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
@"<AFUISiriSetupViewControllerDelegate>"
i32@0:8@16@24
v32@0:8d16@?24
v48@0:8@16@24d32@?40
v64@0:8@16@24d32@40@48@?56
@40@0:8@16@24^@32
@60@0:8@16@24@32B40q44^@52
@48@0:8@16@24@32^@40
v36@0:8@"AFUISiriCarPlayBackgroundView"16B24@"BSAnimationSettings"28
@"AFUISiriCarPlayBackgroundView"
