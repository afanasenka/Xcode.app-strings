init
sharedInstance
_startMonitoringWithQueue:
_stopMonitoring
setTriggerMode:
getTriggerMode
installedVoiceTriggerAssetForLanguageCode:completion:
fetchRemoteVoiceTriggerAssetForLanguageCode:completion:
voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:
voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:
interfaceWithProtocol:
arrayWithObjects:count:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
xpcConnection:hasEntitlement:
invalidate
setExportedObject:
resume
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
listener:shouldAcceptNewConnection:
serviceListener
setDelegate:
defaultManager
fileExistsAtPath:
errorWithDomain:code:userInfo:
stringByAppendingPathComponent:
dataWithContentsOfFile:
JSONObjectWithData:options:error:
array
countByEnumeratingWithState:objects:count:
assetForAssetType:resourcePath:configVersion:
hearstRTModelWithMajorVersion:minorVersion:locale:
addObject:
count
modelHash
isEqualToString:
objectAtIndex:
sharedPreferences
setHearstFirstPassModelVersion:
setHearstSecondPassModelVersion:
getSiriLanguageWithFallback:
fakeHearstModelPath
_handleFakeHearstModelRequest:majorVersion:minorVersion:downloadedModels:preinstalledModels:completion:
sharedController
localizedDescription
hearstRTModelLocaleMap
getAccessoryFallbackLocalTable
selectFallbackModelForLocale:downloadedModels:preinstalledModels:rtLocaleMap:
installedAssetOfType:language:completion:
jarvisRTModelLocaleMap
getAccessoryFallbackFamilyLocal:fromLocaleMap:
objectForKeyedSubscript:
modelLocale
weakObjectsHashTable
dealloc
removeObject:
enumerateObservers:
CSEventMonitorDidReceiveEvent:
type
addObserver:
removeObserver:
enumerateObserversInQueue:
notifyObserver:
.cxx_destruct
_observers
_queue
assetForAssetType:resourcePath:configVersion:assetProvider:
hybridEndpointerAssetFilename
contentsOfDirectoryAtPath:error:
firstObject
initWithResourcePath:configFile:configVersion:assetProvderType:
fallBackAssetResourcePath
_decodeJson:
dictionary
numberWithBool:
getNumberForKey:category:default:
boolValue
resourcePath
assetHashInResourcePath:
stringWithFormat:
path
getConfigFileNameForAssetType:
defaultFallBackAssetForSmartSiriVolume
defaultFallBackAssetForHearst
defaultFallBackAssetForAdBlocker
getBoolForKey:category:default:
getStringForKey:category:default:
containsKey:category:
containsCategory:
hashFromResourcePath
isEqualAsset:
stringForCurrentAssetProviderType
configVersion
assetProvider
_decodedInfo
_path
_resourcePath
_configVersion
_assetProvider
getVoiceTriggerAssetTypeString
getEndpointAssetTypeString
getLanguageDetectorAssetTypeString
getAdBlockerAssetTypeString
getSpeakerRecognitionAssetTypeString
dictionaryWithObjects:forKeys:count:
_cleanUpMobileAssetV1Directory
_isReadyToUse
installedAssetOfType:withLanguage:
_fetchRemoteAssetOfType:withLanguage:completion:
_assetQueryForAssetType:
returnTypes:
queryMetaDataSync
results
filteredAssetsForAssets:assetType:language:
queryParams
isLatestCompareTo:
sortedArrayUsingComparator:
state
getCSAssetOfType:
enumerateObjectsUsingBlock:
installedAssetOfType:withLanguage:completion:
_installedAssetOfType:withLanguage:
_installedAssetOfType:withLanguage:completion:
_findLatestInstalledAsset:
queryMetaData:
attributes
numberWithUnsignedInteger:
initWithType:
addKeyValuePairForQuery:assetType:
isFirstUnlocked
fetchRemoteMetaOfType:allowRetry:
_runAssetQuery:completion:
_downloadAssetCatalogForAssetType:complete:
queue
_updateFromRemoteToLocalAssets:forAssetType:completion:
_defaultDownloadOptions
_isRetryRecommendedWithResult:
startCatalogDownload:options:then:
isCSAssetInstalled
isDownloading
cancelDownloadSync
canBePurged
purgeSync
observers
CSAssetController:didDownloadNewAssetForType:
_downloadAsset:withComplete:
setAllowsCellularAccess:
setCanUseLocalCacheServer:
setDiscretionary:
assetServerUrl
_startDownloadingAsset:progress:completion:
expectedTimeRemaining
totalWritten
totalExpected
attachProgressCallBack:
spaceCheck:
startDownload:then:
setObject:forKeyedSubscript:
getAssetTypeStringForType:
assetOfType:language:
allInstalledAssetsOfType:language:
assetOfType:language:completion:
installedAssetOfType:language:
fetchRemoteMetaOfType:
addObserver:forAssetType:
removeObserver:forAssetType:
setQueue:
assetsMigrationQueue
setAssetsMigrationQueue:
csAssetsDictionary
setCsAssetsDictionary:
setObservers:
_assetsMigrationQueue
_csAssetsDictionary
valueForKey:
containsObject:
supportPremiumAssets
objectForKey:
getVoiceTriggerAssetCurrentCompatibilityVersion
getEndpointAssetCurrentCompatibilityVersion
getLanguageDetectorCurrentCompatibilityVersion
getAdBlockerCurrentCompatibilityVersion
getSpeakerRecognitionCurrentCompatibilityVersion
addKeyValuePair:with:
filteredAssetsForFetchRemoteMetaDataForAssets:assetType:
_storeModeEnabled
runningVoiceTriggerOnMac
setFileLoggingLevel:
fileLoggingLevel
intValue
baseDir
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
assistantLogDirectory
myriadHashDirectory
numberWithInteger:
integerValue
setDateFormat:
date
stringFromDate:
stringByReplacingOccurrencesOfString:withString:
floatValue
interstitialRelativeDirForLevel:
enableAudioInjection:withKey:
audioInjectionEnabledWithKey:
unsignedIntegerValue
smartSiriVolumeContextAwareEnabled
fileLoggingIsEnabled
voiceTriggerEnabled
phraseSpotterEnabled
isAttentiveSiriEnabled
isAttentiveSiriAudioLoggingEnabled
voiceTriggerInCoreSpeech
twoShotNotificationEnabled
setFileLoggingIsEnabled:
voiceTriggerAudioLogDirectory
ssvLogDirectory
getSSVLogFilePathWithSessionIdentifier:
trialBaseAssetDirectory
getCatAdBlockerAssetUpdateDirectory
assistantAudioFileLogDirectory
myriadHashFilePath
secondPassAudioLoggingEnabled
speakerRecognitionAudioLoggingEnabled
jarvisAudioLoggingEnabled
setJarvisTriggerMode:
getJarvisTriggerMode
startOfSpeechAudioLoggingEnabled
forceVoiceTriggerAPMode
forceVoiceTriggerAOPMode
getStartOfSpeechAudioLogFilePath
_isDirectory:
remoteVoiceTriggerDelayTime
remoteVoiceTriggerEndpointTimeoutWithDefault:
interstitialAbsoluteDirForLevel:
myriadFileLoggingEnabled
enableAudioInjection:
audioInjectionEnabled
enableProgrammableAudioInjection:
programmableAudioInjectionEnabled
setAudioInjectionFilePath:
audioInjectionFilePath
isPHSSupported
_isRemoteVoiceTriggerAvailable
isSpeakerRecognitionAvailable
speakerIdScoreReportingType
smartSiriVolumeSoftVolumeEnabled
smartSiriVolumeContextAwareLoggingEnabled
audioSessionActivationDelay
maxNumLoggingFiles
maxNumGradingFiles
useSiriActivationSPIForHomePod
useSiriActivationSPIForwatchOS
iOSBargeInSupportEnabled
shouldOverwriteRemoteVADScore
overwritingRemoteVADScore
companionSyncVoiceTriggerUtterancesEnabled
opportuneSpeakListenerBypassEnabled
bypassPersonalizedHeySiri
isMultiPhraseVTEnabled
isMultiChannelAudioLoggingEnabled
isAdBlockerAudioLoggingEnabled
isSelfTriggerFileLoggingEnabled
containsValueForKey:
decodeObjectForKey:
encodeObject:forKey:
stringByAppendingString:
string
length
base64EncodedStringWithOptions:
substringToIndex:
appendFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithData:hash:locale:digest:signature:certificate:
initWithHash:locale:
initWithData:hash:locale:
builtInRTModelDictionary
modelData
digest
signature
certificate
_modelData
_modelLocale
_modelHash
_digest
_signature
_certificate
regularExpressionWithPattern:options:error:
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
substringWithRange:
_notifyObserver:withLanguageCode:
CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:
_didReceiveLanguageCodeUpdate
_notifyToken
localeWithLocaleIdentifier:
setLocale:
createRTModelWithLocale:
unsignedIntValue
_sha1:
_sha256:
localeMapWithName:
bytes
stringWithCapacity:
dataWithLength:
mutableBytes
RTModelWithFallbackLanguage:
latestHearstRTModelForLocale:
valueForEntitlement:
supportRaiseToSpeak
supportHearstVoiceTrigger
supportPremiumWatchAssets
shouldRunVTOnCS
inputRecordingNumberOfChannels
channelForOutputReference
supportTTS
supportJarvisVoiceTrigger
supportBluetoothDeviceVoiceTrigger
UTF8String
rootQueueWithFixedPriority:
supportHybridEndpointer
csAudioProcessingQueuePriority
initWithData:encoding:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
objectAtIndexedSubscript:
dateWithTimeIntervalSinceNow:
supportContinuousVoiceTrigger
supportKeywordDetector
supportOpportunisticZLL
supportSelfTriggerSuppression
supportCSTwoShotDecision
supportSmartVolume
supportSAT
supportCompactPlus
isIOSDeviceSupportingBargeIn
supportAdBlocker
supportContinuousAudioFingerprint
supportPremiumModel
supportPhatic
shouldDelayPhaticForMyriadDecision
supportSessionActivateDelay
supportLanguageDetector
shouldDownloadVTAssetsOnDaemon
supportLazySessionActivation
hasRemoteCoreSpeech
supportRemoraVoiceTrigger
shouldDeinterleaveAudioOnCS
supportCircularBuffer
supportBeepCanceller
supportZeroFilter
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getFixedHighPrioritySerialQueueWithLabel:
deviceProductType
deviceProductVersion
systemUpTime
deviceUserAssignedName
deviceBuildVersion
deviceHwRevision
timeStampWithSaltGrain
supportsSpeakerRecognitionAssets
supportHandsFree
supportsVoiceTriggerFides
_checkFirstUnlocked
_didReceiveFirstUnlock:
_notifyObserver:withUnlocked:
CSFirstUnlockMonitor:didReceiveFirstUnlock:
_firstUnlockNotified
_didReceiveFirstUnlockInQueue:
_firstUnlocked
_didReceiveNewSpeechEndpointAssetMetaData
_notifyObserver:
CSSpeechEndpointAssetMetaUpdateMonitor:didReceiveNewSpeechEndpointAssetMetaData:
getLocalUrl
_compatibilityVersion
stringValue
appendString:
_version
_footprint
isPremium
submitVoiceIdIssueReport:
submitAudioIssueReport:
submitVoiceTriggerIssueReport:
submitEndpointerIssueReport:
submitTrialIssueReport:
inputRecordingSampleByteDepth
inputRecordingFramesPerPacket
inputRecordingSampleRate
inputRecordingSampleRateNarrowBand
inputRecordingBytesPerFrame
inputRecordingBytesPerPacket
hearstNumberOfBytesPerChunk
hearstNumberOfSamplesPerChunk
inputRecordingDurationInSecs
inputRecordingSampleBitDepth
inputRecordingIsFloat
EncryptionAudioSampleByteDepth
inputRecordingEncoderAudioQuality
inputRecordingSampleRateConverterAlgorithm
inputRecordingBufferDuration
audioConverterBitrate
channelForProcessedInput
zeroFilterWindowSizeInMs
zeroFilterWindowSizeInMsForReport
zeroFilterApproxAbsSpeechThreshold
daysBeforeRemovingLogFiles
remoteVADDuration
serverLoggingChannelBitset
defaultContinousFingerprintBufferDuration
_asssetMetaUpdatedKey
_didReceiveNewVoiceTriggerAssetMetaData
CSVoiceTriggerAssetMetaUpdateMonitor:didReceiveNewVoiceTriggerAssetMetaData:
CSJarvisTriggerModeMonitor
CoreSpeechXPCProtocol
ServiceDelegate
NSXPCListenerDelegate
NSObject
CoreSpeechXPC
CSEventMonitor
CSAsset
CSAssetController
CSEventMonitorDelegate
Utils
CSPreferences
CSVoiceTriggerRTModel
NSSecureCoding
NSCoding
LanguageCode
ResourcePathHash
CSLanguageCodeUpdateMonitor
RTModel
NSXPC
CSUtils
CSFirstUnlockMonitor
CSSpeechEndpointAssetMetaUpdateMonitor
CSDiagnosticReporter
CSConfig
CSVoiceTriggerAssetMetaUpdateMonitor
@16@0:8
v24@0:8@16
v16@0:8
v24@0:8q16
q16@0:8
v32@0:8@16@?24
v64@0:8Q16Q24@32@40@48@?56
v40@0:8@16@24@?32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
v64@0:8Q16Q24@"NSString"32@"NSArray"40@"NSArray"48@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSString"@"NSError">32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v64@0:8@16Q24Q32@40@48@?56
@32@0:8@16@24
@48@0:8@16@24@32@40
v24@0:8@?16
@"NSHashTable"
@"NSObject<OS_dispatch_queue>"
@40@0:8Q16@24@32
@24@0:8Q16
@48@0:8Q16@24@32Q40
@48@0:8@16@24@32Q40
@24@0:8@16
@40@0:8@16@24@32
B36@0:8@16@24B32
@"NSDictionary"
@"NSString"
@32@0:8Q16@24
v40@0:8Q16@24@?32
v24@0:8Q16
v28@0:8Q16B24
v32@0:8Q16@?24
B24@0:8q16
v40@0:8@16Q24@?32
v40@0:8@16@?24@?32
v32@0:8@16Q24
@"NSMutableDictionary"
@32@0:8@16Q24
@40@0:8@16Q24@32
v32@0:8^@16Q24
v20@0:8B16
d16@0:8
d24@0:8d16
@24@0:8q16
B20@0:8B16
B28@0:8B16^{__CFString=}20
B24@0:8^{__CFString=}16
f16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@64@0:8@16@24@32@40@48@56
@"NSData"
v32@0:8@16@24
@40@0:8Q16Q24@32
@20@0:8i16
@28@0:8@16i24
v28@0:8@16B24
I16@0:8
S16@0:8
i16@0:8
r*16@0:8
corespeech.xpc
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
-[CoreSpeechXPC installedVoiceTriggerAssetForLanguageCode:completion:]
-[CoreSpeechXPC fetchRemoteVoiceTriggerAssetForLanguageCode:completion:]
-[CoreSpeechXPC _handleFakeHearstModelRequest:majorVersion:minorVersion:downloadedModels:preinstalledModels:completion:]
fakeModel.json
en-US
fakeModel
-[CoreSpeechXPC voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:]
v40@?0@"CSVoiceTriggerRTModel"8@"CSVoiceTriggerRTModel"16@"NSString"24@"NSError"32
-[CoreSpeechXPC voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:]_block_invoke
v24@?0@"CSAsset"8@"NSError"16
-[CoreSpeechXPC voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]_block_invoke
v24@?0@"NSString"8@"NSError"16
-[CoreSpeechXPC voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]
v8@?0
de-AT
de-DE
de-CH
en-AU
en-CA
en-GB
en-SG
en-IE
en-IN
en-ZA
en-NZ
it-IT
it-CH
ja-JP
zh-CN
zh-TW
nb-NO
nl-BE
nl-NL
sv-SE
tr-TR
fi-FI
he-IL
es-ES
es-US
es-CL
es-MX
fr-FR
fr-BE
fr-CA
fr-CH
ko-KR
zh-HK
yue-CN
da-DK
ms-MY
pt-BR
ru-RU
th-TH
ar-AE
ar-SA
Serial CSEventMonitor queue
-[CSEventMonitor _startMonitoringWithQueue:]
/Library/Caches/com.apple.xbs/Sources/CoreSpeech_Sim/CoreSpeech-446.6/CoreSpeech/CSEventMonitor.m
-[CSEventMonitor _stopMonitoring]
corespeech.json
assets.json
speakerRecognition.json
adBlockerPayload.bin
hybridendpointer.json
hybridendpointer_marsh.json
/System/Library/PrivateFrameworks/CoreSpeech.framework
+[CSAsset fallBackAssetResourcePath]
defaultFallbackHearst
defaultFallbackAdBlocker
-[CSAsset initWithResourcePath:configFile:configVersion:assetProvderType:]
-[CSAsset _decodeJson:]
-[CSAsset getNumberForKey:category:default:]
-[CSAsset getStringForKey:category:default:]
configVersion:%@ resourcePath:%@ path:%@
MobileAssets
Trial
Unknown
path
T@"NSString",R,N,V_path
resourcePath
T@"NSString",R,N,V_resourcePath
dictionary
T@"NSDictionary",R,N
hashFromResourcePath
T@"NSString",R,N
configVersion
T@"NSString",R,N,V_configVersion
assetProvider
TQ,R,N,V_assetProvider
-[CSAssetController init]
Serial CSAssetController queue
V1 Assets Clean-up queue
-[CSAssetController _cleanUpMobileAssetV1Directory]
-[CSAssetController assetOfType:language:]
-[CSAssetController allInstalledAssetsOfType:language:]
q24@?0@"MAAsset"8@"MAAsset"16
v32@?0@"MAAsset"8Q16^B24
-[CSAssetController assetOfType:language:completion:]
-[CSAssetController installedAssetOfType:language:]
-[CSAssetController installedAssetOfType:language:completion:]
v24@?0@"MAAsset"8@"NSError"16
-[CSAssetController _installedAssetOfType:withLanguage:]
-[CSAssetController _installedAssetOfType:withLanguage:completion:]_block_invoke
v16@?0q8
-[CSAssetController _findLatestInstalledAsset:]
-[CSAssetController _assetQueryForAssetType:]
-[CSAssetController _runAssetQuery:completion:]
-[CSAssetController _runAssetQuery:completion:]_block_invoke
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]_block_invoke
v20@?0@"NSError"8B16
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]_block_invoke_2
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]_block_invoke
-[CSAssetController _downloadAssetCatalogForAssetType:complete:]_block_invoke
-[CSAssetController _updateFromRemoteToLocalAssets:forAssetType:completion:]
-[CSAssetController _downloadAsset:withComplete:]
v16@?0d8
-[CSAssetController _downloadAsset:withComplete:]_block_invoke
v16@?0@"NSError"8
-[CSAssetController _startDownloadingAsset:progress:completion:]
v16@?0@"MAProgressNotification"8
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
assetsMigrationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetsMigrationQueue
csAssetsDictionary
T@"NSDictionary",&,N,V_csAssetsDictionary
observers
T@"NSMutableDictionary",&,N,V_observers
+[CSAssetController(Utils) addKeyValuePairForQuery:assetType:]
com.apple.MobileAsset.VoiceTriggerAssets
com.apple.MobileAsset.VoiceTriggerAssetsIPad
com.apple.MobileAsset.VoiceTriggerAssetsWatch
com.apple.MobileAsset.VoiceTriggerAssetsMarsh
com.apple.MobileAsset.VoiceTriggerAssetsMac
com.apple.MobileAsset.SpeechEndpointAssets
com.apple.MobileAsset.LanguageDetectorAssets
com.apple.MobileAsset.AdBlockerAssets
com.apple.MobileAsset.SpeakerRecognitionAssets
com.apple.voicetrigger
com.apple.voicetrigger.notbackedup
kCSPreferencesJarvisTriggerModeDidChangeDarwinNotification
VoiceTrigger Enabled
Phrase Detector Enabled
AttentiveSiri Enabled
AttentiveSiri AudioLogging Enabled
VoiceTrigger CoreSpeech Enabled
-[CSPreferences voiceTriggerInCoreSpeech]_block_invoke
Enable Two Shot Notification
com.apple.demo-settings
StoreDemoMode
File Logging Level
Library
Logs/CrashReporter/VoiceTrigger/audio/
/Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
Logs/CrashReporter/Assistant/smartSiriVolumeContextAwareLogs/
-[CSPreferences getSSVLogFilePathWithSessionIdentifier:]
/tmp
%@/SSV_%@.json
VoiceTrigger/TrialAssetData
VoiceTrigger/adBlocker
/Logs/CrashReporter/Assistant/
SpeechLogs
-[CSPreferences assistantAudioFileLogDirectory]
VoiceTrigger
siriBC
Second Pass Audio Logging Enabled
Speaker Recognition Audio Logging Enabled
Jarvis Audio Logging Enabled
Jarvis Trigger Mode
Enable SoS Audio Logging
Force VoiceTrigger AP Mode
-[CSPreferences forceVoiceTriggerAPMode]_block_invoke
Force VoiceTrigger AOP Mode
-[CSPreferences forceVoiceTriggerAOPMode]_block_invoke
mobile
Logs/CrashReporter/CoreSpeech/sos/
-[CSPreferences getStartOfSpeechAudioLogFilePath]
yyyyMMdd_HHmmss.SSS
%@/%@
Remote VoiceTrigger Delay
Remote VoiceTrigger Endpoint Timeout
VoiceTrigger/interstitial
Myriad File Logging Enabled
Audio Injection Enabled
Programmable Audio Injection Enabled
-[CSPreferences enableAudioInjection:withKey:]
-[CSPreferences setAudioInjectionFilePath:]
Audio Injection File Path
-[CSPreferences audioInjectionFilePath]
-[CSPreferences audioInjectionFilePath]_block_invoke
v32@?0@8Q16^B24
SpeakerId Enabled
SpeakerId Score Type
SmartSiriVolume SoftVolume Enabled
Audio Session Activation Delay
Max Number Logging Files
Max Number Grading Files
Enable SiriActivation HomePod
Enable SiriActivation watchOS
IOS Support Barge-in
-[CSPreferences iOSBargeInSupportEnabled]_block_invoke
enabled
disabled
-[CSPreferences iOSBargeInSupportEnabled]
Overwrite Remote VAD Score
Hearst First Pass Model Version
Hearst Second Pass Model Version
Hearst Fake Model Path
VoiceTrigger Companion Sync Enabled
Enable OpportuneSpeakListener Bypass
Bypass Personalized HeySiri
MultiPhraseVTEnabled
MultiChannelAudioLoggingEnabled
Enable AdBlocker Audio Logging
Enable Self Trigger Audio Logging
RTModelData
RTModelHash
RTModelLocale
RTModelDigest
RTModelSignature
RTModelCertificate
RT Model for 
 from asset 
CorealisRTModel
CorealisRTModelVersion
dataSize(%d), hash(%@), locale(%@), digest(%@), cert(%@), signature(%@)
supportsSecureCoding
TB,R
modelData
T@"NSData",R,N,V_modelData
modelLocale
T@"NSString",R,N,V_modelLocale
modelHash
T@"NSString",R,N,V_modelHash
digest
T@"NSData",R,N,V_digest
signature
T@"NSData",R,N,V_signature
certificate
T@"NSData",R,N,V_certificate
+[CSUtils(LanguageCode) getSiriLanguageWithFallback:]
nohash
((?:[a-z]|[0-9])*)\.asset
+[CSUtils(ResourcePathHash) assetHashInResourcePath:]
-[CSLanguageCodeUpdateMonitor _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitor _stopMonitoring]
-[CSLanguageCodeUpdateMonitor _didReceiveLanguageCodeUpdate]
v16@?0@8
com.apple.corespeech
Framework
::: Initializing CoreSpeech logging...
en_US_POSIX
yyyyMMdd-HHmmss
CSLogInitIfNeeded_block_invoke
gitrelno_unavailable
rtblobs
blob
majorVersion
minorVersion
cert
rtlocalemap
jarvislocalemap
-[CSAsset(RTModel) createRTModelWithLocale:]
-[CSAsset(RTModel) latestHearstRTModelForLocale:]
-[CSAsset(RTModel) hearstRTModelWithMajorVersion:minorVersion:locale:]
-[CSAsset(RTModel) localeMapWithName:]
%02x
com.apple.
com.apple.private.
U+73bmG4kBGj6kpreQXUTQ
InternalBuild
PTQ+ABwag03BwO/CKvIK/A
+[CSUtils isIOSDeviceSupportingBargeIn]_block_invoke
BuildVersion
IOPlatformExpertDevice
+[CSUtils deviceHwRevision]
config-number
yyyyMMdd
-[CSFirstUnlockMonitor _stopMonitoring]
v12@?0i8
-[CSSpeechEndpointAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeechEndpointAssetMetaUpdateMonitor _didReceiveNewSpeechEndpointAssetMetaData]
com.apple.MobileAsset.SpeechEndpointAssets.ma.cached-metadata-updated
Languages
Footprint
Premium
-[CSVoiceTriggerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetMetaUpdateMonitor _stopMonitoring]
-[CSVoiceTriggerAssetMetaUpdateMonitor _didReceiveNewVoiceTriggerAssetMetaData]
com.apple.MobileAsset.VoiceTriggerAssets.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsIPad.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.cached-metadata-updated
%s Received a request for VoiceTrigger Asset for language code : %{public}@
%s Fake Model Path does not exist : %{public}@
%s fake model meta json does not exist : %{public}@
%s Unable to read fake model meta json : %{public}@
%s Unable to parse fake model meta json : %{public}@
%s Loading FakeModel : %{public}@
%s Cannot create RTModel from %{public}@
%s fake model number(%{public}d) is less than minimum fake model number((%{public}d)
%s %{public}@ fake model is selected for download
%s %{public}@ model is selected for fallback
%s Received a request for VoiceTriggerRTModel for Firmware Version : %{public}d.%{public}d
%s Asking mobile asset with currentLanguageCode = %{public}@
%s DownloadModel : 
%s %{public}@
%s preinstalledModels : 
%s Hearst Fake Model request switch turned on, executing stress test mode with fakeModelPath : %{public}@
%s VoiceTriggerAsset is not available : %{public}@
%s rtLocaleMap is nil fallback to embedded locale map
%s accessoryRTBlobs are not available for the version(%{public}d.%{public}d) and locale:%{public}@, returning fallback model : %{public}@
%s Hash matched with downloadedModel : %{public}@, accessory will select this model
%s Hash matched with preinstalledModel : %{public}@, accessory will select this model
%s Ask for download : %{public}@, and use %{public}@ as fallback
%s Select keyword language as %{public}@, error : %{public}@
%s Language list and jarvis language not provided
%s current Siri language code : %{public}@
%s Jarvis locale map is nil, fallback to embedded locale map
%s Fallback asset resource path : %{public}@
%s Cannot find corespeech asset from resourcePath : %{public}@
%s Configuration file is not exists : %{public}@
%s Cannot read configuration file : %{public}@
%s Cannot decode configuration json file : %{public}@
%s Configuration json file is not expected format
%s Cannot access to %{public}@ %{public}@ using default value=%{public}@
%s _csAssetsDictionary = %{public}@
%s CSAssetController cannot query for nil language
%s ::: found %{public}lu installed assets for assetType=%{public}lu, matching query: %{public}@
%s Error running asset-query for assetType:%{public}lu, query: %{public}@, error: %{public}lu
%s ::: found %{public}lu assets for assetType=%{public}lu, matching query: %{public}@
%s Asset state : %{public}ld
%s ::: %{public}s
%s ::: %{public}s; query: %{public}@
%s Found %{public}lu assets
%s Error running asset query: error %{public}lu, or result is empty
%s ::: Request Fetching RemoteMetaData : assetType : %{public}d
%s Fetching remote meta data failed, scheduled retry after %{public}f seconds
%s ::: Request fetching remote asset
%s ::: found %{public}lu assets for assetType %{public}lu
%s Failed to finish query for assetType %{public}lu with error %{public}lu
%s Meta data downloaded successfully for assetType %{public}lu
%s Failed to download meta data for assetType %{public}lu with error %{public}lu
%s ::: Fetching remote asset
%s ::: Purging installed asset : %{public}@
%s ::: Request downloading remote asset for assetType %{public}lu
%s ::: Start downloading asset
%s ::: download progress: %{public}3.0f%%
%s ::: Error downloading from %{public}@ with error %{public}@
%s ::: download completed successfully from %{public}@.
%s Attempting to download asset %{public}@, asset state : %{public}ld
%s ERR: Unknown AssetType: %{public}lu
%s value = %{public}d
%s Couldn't create SSV log directory at path %{public}@ %{public}@
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Force enabling VoiceTrigger AP mode ? %{public}@
%s Force enabling VoiceTrigger AOP mode ? %{public}@
%s Couldn't create SoS log directory at path %{public}@ %{public}@
%s enableAudioInection: is only available on internal builds
%s setAudioInjectionFilePath: is only available on internal builds
%s kCSAudioInjectionFilePathKey is not array type
%s kCSAudioInjectionFilePathKey array size = %d
%s kCSAudioInjectionFilePathKey doesn't have NSString as an array entry
%s Override iOS barge-in support key to: %{public}@
%s Shouldn't be called on non-iOS platform
%s Siri language is nil, falling back to %@
%s Failed to create regular expression : %{public}@
%s Start monitoring : Siri language code
%s Stop monitoring : Siri language code
%s Siri language changed to : %{public}@
%s Ignore notifying change of language code, since it is nil
%s ::: CoreSpeech logging initialized (%s)
%s CS doesn't have ndblobbuilder!
%s latestMajorVersion = %d, LatestMinorVersion = %d
%s corespeech.json doesn't contains rtblobs
%s blob file name is not exists
%s blob file is not exists at %{public}@
%s Reading blob from : %{public}@
%s Blob is nil : %{public}@
%s Locale map for %{public}@ is not available on asset
%s Device supporting barge-in ? %{public}@
%s Failed to find matching service to IOPlatformExpertDevice
%s Fetched hardware revision : %{public}@
%s Failed to find property "config-number"
%s Stop monitoring : First unlock
%s Start monitoring : speech endpoint asset meta update
%s Stop monitoring : speech endpoint asset meta update
%s New speech endpoint asset is available
%s Start monitoring : VoiceTrigger Asset meta update
%s Stop monitoring : VoiceTrigger Asset meta update
%s New VoiceTrigger asset metadata is available
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsIPad</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMac</string>
</array>
</dict>
</plist>
