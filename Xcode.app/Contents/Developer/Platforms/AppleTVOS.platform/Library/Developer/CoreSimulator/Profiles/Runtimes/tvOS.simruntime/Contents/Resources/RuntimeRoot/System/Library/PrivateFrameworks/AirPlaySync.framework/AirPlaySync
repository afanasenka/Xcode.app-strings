HomeUUIDList
GroupMute
GroupUUIDList
GroupVolume
GroupVolumeControlSupported
GroupVolumeControlType
DeviceName
DeviceCategory
DeviceHijackID
DeviceUUIDList
DeviceUUIDListForSpeaker
PrimarySpeakerID
SpeakerCurrentGroupID
SpeakerIsSilentPrimary
SpeakerMute
SpeakerName
SpeakerOwnedGroupID
SpeakerProposedGroupID
SpeakerVolumeControlSupported
SpeakerVolumeControlType
SpeakersInGroup
SpeakerUUIDList
SpeakerVolume
StatusDump
ShowInfo
StereoPair
NowPlayingInfo
IsSupportedSpeaker
GroupLeaderScore
SpeakerGroupLeaderDeviceID
SpeakerUUID
HomeKitInfo
ClusterAvailability
SupportsAPSync
IsLegacyProxy
LegacyDevicesInMyHome
LegacyDevicesNotInAnyHome
DeviceRouteInfo
SpeakerRouteInfo
Manufacturer
ModelID
SerialNumber
FirmwareVersion
MACAddress
AirPlayEndpointProperties
SupportedFeatures
AirPlaySecurity
IsHKAccessControlEnabled
HKAccessControlLevel
AirPlayFromCloudSupported
IsAppleMusicSubscriber
CloudLibraryIsOn
SupportsExtendedWHAFeatures
IsMediaRemoteControllable
GroupContainsGroupLeader
IsGroupable
IsWHAGroupable
SupportsRelay
AdvertisesHAPSupport
ExternalPlaybackDoesNotSupportEncryptedCRABS
ExternalPlaybackCannotFetchMediaFromSender
ExternalPlaybackDoesNotShowProperUIForAudioOnlyAssets
DiagsCommandPing
RawSocket
AirPlayPipe
IPAddr
Port
apsyncstatemanager_trace
com.apple.coremedia
v8@?0
APSyncStateManagerCopyProperty
APSyncStateManagerSetProperty
APSyncStateManagerRunDiagnosticsCommand
APSyncStateManagerInitializeDevice
APSyncStateManagerSetPipeCallbacks
APSyncStateManagerAddDiscoveredDevice
APSyncStateManagerConnectToServer
APSyncStateManagerAddSpeakerChangeListener
APSyncStateManagerRemoveSpeakerChangeListener
APSyncStateManagerAddGroupChangeListener
APSyncStateManagerRemoveGroupChangeListener
APSyncStateManagerAddGeneralListener
APSyncStateManagerRemoveGeneralListener
APSyncStateManagerAddGroup
APSyncStateManagerRemoveGroup
APSyncStateManagerSetSpeakerGroupIDProposal
APSyncStateManagerUpdateSpeakerGroupIDProposal
APSyncStateManagerStartGroupInteraction
APSyncStateManagerStartSpeakerInteraction
APSyncStateManagerStopGroupInteraction
APSyncStateManagerStopSpeakerInteraction
APSyncStateManagerAdjustGroupVolume
APSyncStateManagerAdjustSpeakerVolume
APSyncStateManagerCreateDesiredVolumeUpdate
APSyncStateManagerCreateVolumeUpdateFromNotification
APSyncStateManagerApplyVolumeUpdate
APSyncStateManager
syncmanager_Finalize
syncmanager_create
assert_invariant
/System/Volumes/Data/SWE/iOS/BuildRoots/BuildRoot978/Applications/Xcode.app/Contents/Developer/Platforms/AppleTVSimulator.platform/Developer/SDKs/AppleTVSimulator14.2.Internal.sdk/usr/local/include/nlohmann/json.hpp
m_type != value_t::object or m_value.object != nullptr
m_type != value_t::array or m_value.array != nullptr
m_type != value_t::string or m_value.string != nullptr
cannot create object from initializer list
cannot use operator[] with 
null
object
array
string
boolean
discarded
number
apsyncvolumeuxmanager_trace
VolumeUXManager
~VolumeUXManager
start
m_scheduler != nullptr
m_timestamp != nullptr
startSpeakerInteraction
startSpeakerInteractionInternal
stopSpeakerInteraction
setSpeakerVolume
getSpeakerVolume
setSpeakerMute
getSpeakerMute
startGroupInteraction
startGroupInteractionInternal
stopGroupInteraction
setGroupVolume
getGroupVolume
setGroupMute
getGroupMute
getGroupVolumeControlSupported
getGroupVolumeControlType
stopInteractionInternal
cleanupAfterInteraction
Timeout
Caches
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
iter_impl
m_object != nullptr
set_end
cannot compare iterators of different containers
operator==
operator*
m_it.object_iterator != m_object->m_value.object->end()
m_it.array_iterator != m_object->m_value.array->end()
cannot get value
operator[]
m_value.object->find(key) != m_value.object->end()
array index must not begin with '0'
unresolved reference token '
replace
mute
volume
timeout
operator->
type must be string, but is 
true
false
<discarded>
x_write
x == 0
i < m_buf.size() - 2
%.*g
written_bytes > 0
static_cast<size_t>(written_bytes) < m_buf.size()
loc != nullptr
(i + 2) < m_buf.size()
m_buf[i] == '\0'
m_buf[i - 1] != '\0'
m_buf[i + 2] == '\0'
crdtmergevolume_trace
type must be boolean, but is 
type must be number, but is 
apsyncvolumemanageraggregate_trace
VolumeManagerAggregate
~VolumeManagerAggregate
addVolumeGroupHandlerContainer
removeVolumeGroupHandlerContainer
getBaseVolumeGroup
No volume group for group id 
VolumeManagerAggregate::setVolumeGroupListener() not supported
notifyVolumeGroupAdded
notifyVolumeGroupRemoved
VolumeGroups
public
Containers
WeakPtr
Handler
cannot use push_back() with 
Base group required to create VolumeGroupAggregateCaching
VolumeGroupAggregateCaching
~VolumeGroupAggregateCaching
setSpeakerVolumeAndMute
setGroupVolumeAndMute
removeSpeakerID
VolumeGroupAggregateCaching::removeSpeakerID not supported
GroupID
Address
Volumes
merge
valid
type
name
add_node_info
info:
nodeinfo
cost
set_begin
operator++
cannot use key() for non-object iterators
gprop
HMJ:
HMS:
apsynchomemanager_trace
HomeManager
Home: 
~HomeManager
updateHomeKitHomeID
!m_started
rawdb
HomeID
SpeakerManager
SpeakerManagerErr
GroupManager
DeviceManager
addJsonChangeListener
removeJsonChangeListener
notifyJsonChanges
getJsonHandle
JsonHandle
~JsonHandle
operator const nlohmann::basic_json<std::map, std::vector, std::__1::basic_string<char>, bool, long long, unsigned long long, double, std::allocator, adl_serializer> &
operator()
SimpleJsonPointer
~SimpleJsonPointer
get_reference
crdtmerge_trace
IsValid
_speakerGroup:
_general
NotificationType
UXVolumeChanged
CurrentVolumeChanged
ProposedVolumeChanged
VolumeControlSupportedChanged
VolumeControlTypeChanged
SpeakerPropGroupChanged
PrevGroupID
NewGroupID
Options
State
SpeakerSilentPrimaryStatusChanged
GroupMembersChanged
SpeakerGroupChanged
HijackIDChanged
HijackID
GroupsAvailableChanged
ClusterAvailabilityChanged
ClusterAvailabilityMap
IsBestProxyChanged
IsBestProxy
DiscoveryRequest
Active
QueryOnly
SpeakerGroupingChanged
SpeakerGroupingDeviceID
SpeakerGroupingGroupID
SpeakerGroupingStateChange
DiagsPingComplete
DiagsResultPing
HomeIDUpdate
OldHomeID
NewHomeID
InvalidatedIDs
ItemIDs
crdtmergeannounce_trace
/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2755.24.7/Sources/AirPlaySync/Engine/CRDT/CRDTMerge_Announce.cpp
ct == dt
make
replace_substring
not f.empty()
1-HomeKit
HomeManagerSyncing
addPipeFactory
/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2755.24.7/Sources/AirPlaySync/Core/Managers/APSyncHomeManagerSyncing.cpp
setHomeManagerLegacy
setHomeStateListener
stop
setHomeKitInfo
HKID
setDeviceConnectionInfo
rssi
addDiscoveredDevices
connectToDiscoveredDevice
setJsonValueInternal
appendClusterAvailability
notifyHijackIDChanged
notifyJsonChange
onChange
onStateChange
sync
PGUUID
TSUUID
Devices
onNodeStop
onNodeSetDiscovery
onPingComplete
Name
Duration
onAnnounce
mergeJsonChanges
ready
node
nodeErr
ClusterAvailabilityRaw
ValidIDs
updateValidIDs
revalidateIDs
managePossibleSpeakerGroupingStateChange
(same)
JSON pointer must be empty or begin with '/'
split
reference_token[pos] == '~'
escape error: '~' must be followed with '0' or '1'
unknown
abort
thread constructor failed
Error 
retry
crdtmergenodes_trace
cannot use erase() with 
crdtmergemultilww_trace
APSyncControllerSimulatorImpl
~APSyncControllerSimulatorImpl
initialize
openSpeakerCommChannel
closeSpeakerCommChannel
sendSpeakerData
getLocalSpeakerUUIDWithCompletion
registerNewReceiverChannel
transferReceiverData
handleReceiverChannelClosed
handleAllReceiverChannelsClosed
setCommChannelHandlers
invokeSendDataHandler
translatePipeAddress
setSetVolumeHandler
updateVolumeFromReceiver
updateVolumeControlSupportedFromReceiver
updateHomeStateFromReceiver
Could not construct
PipeSchedule
~PipeSchedule
schedule
checkOutgoing
send
apsyncpipeschedule_trace
Speakers
apsyncspeakermanager_trace
groupProposalDeleter
GroupPropCur
SpeakerID
GProp
GCur
GroupProposals
SpeakerIDToGroupID
createSpeaker
RoomID
OwnedGroupID
HomeTheaterCluster
setSpeakerName: Deleted speaker ID: 
setSpeakerName: Invalid speaker ID: 
setSpeakerName
setSpeakerStereoMode: Deleted speaker ID: 
setSpeakerStereoMode: Invalid speaker ID: 
setSpeakerStereoMode
setSpeakerGroupIDProposal
setSpeakerGroupIDProposal: Deleted speaker ID: 
ProposedGroupID
CurrentGroupID
Update
Ignore
Unsupported state: 
CreateProposal
updateSpeakerGroupIDProposal
updateSpeakerGroupIDProposal-legacy-processing2
updateSpeakerGroupIDProposal-legacy-processing
getSpeakerGroupIDProposal
setSpeakerGroupIDOwned: Deleted speaker ID: 
setSpeakerGroupIDOwned: Invalid speaker ID: 
setSpeakerGroupIDOwned
setSpeakerGroupIDCurrent: Deleted speaker ID: 
setSpeakerGroupIDCurrent
setSpeakerVolumeControlSupported
setSpeakerVolumeControlSupported: Invalid speaker ID: 
supported
getSpeakerVolumeControlSupported
setSpeakerVolumeControlType
setSpeakerVolumeControlType: Invalid speaker ID: 
getSpeakerVolumeControlType
getSpeakerDesiredVolumeInternalUpdate: Deleted speaker ID: 
getSpeakerDesiredVolumeInternalUpdate
Proposed
Current
getSpeakerCurrentVolumeInternalUpdate: Deleted speaker ID: 
getSpeakerCurrentVolumeInternalUpdate
setSpeakerCurrentVolumeFromUpdate
setSpeakerCurrentVolumeFromUpdate: Deleted speaker ID: 
setAllFromGroup
setOneFromGroup
notifyUXVolumeChanged
No volume group for speaker id '
' -> group '
options
handleSpeakerGroupDatabaseChange
isProposedVolumeChangeValid
handleSpeakerCurrentVolumeChange
isProposedGroupChangeValid
timed out
notifyIDsInvalidated
notifyIDsRevalidated
notifyVolumeGroupChanges
VProp
VCur
VControlS
SMeta
confirmChange
CHANGE WILL BE LOST
change will be updated in new current
groupIDsMatchForProposal
Device
Speaker
Group
/dev/urandom
%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x
Could not convert
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
Groups
apsyncUseNowPlayingInfo
com.apple.airplay
apsyncgroupmanager_trace
Album
Title
Artist
PlaybackState
album
artist
title
duration
playbackState
setNowPlayingInfo
notifyIfNewGroups
GMeta
VControlG
GNowP
Couldn't retrieve kCFNumberDoubleType type
Couldn't retrieve kCFNumberSInt64Type type
Unsupported CFPropertyList type
Unsupported JSON type
Unsupported CFPropertyList key type
crdtmergelww_trace
/announce
Node
~Node
/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2755.24.7/Sources/AirPlaySync/Engine/Utility/APSyncNode.cpp
m_tree_manager
m_name.length() != 0
m_node_delegate != nullptr
m_started == false
announce
onPipeManagerStop
isStoppedPrivate
connected
state_change
duplicate
onConnect
onMessage
onPingCompleteInternal
onTreeChange
setDiscovery
other
desc
sent
pipes
onLogEventImpl
#clock: 
onAccept
addMergeAlgorithm
disc
info
there
PipeManager
TreeManager
apsyncnode_trace
apsyncdevicemanager_trace
Rendering
RouteInfo
createDevice
setDeviceMetadataStringProperty: Deleted device ID: 
setDeviceMetadataStringProperty: invalid device ID: 
setDeviceMetadataStringProperty
setDeviceMetadataBoolProperty: Deleted device ID: 
setDeviceMetadataBoolProperty: Invalid deviceID: 
setDeviceMetadataBoolProperty
setDeviceMetadataUint64Property: Deleted device ID: 
setDeviceMetadataUint64Property: Invalid deviceID: 
setDeviceMetadataUint64Property
setDeviceMetadataDictionaryProperty: Deleted device ID: 
setDeviceMetadataDictionaryProperty: Invalid deviceID: 
setDeviceMetadataDictionaryProperty
addToDeviceMetadata: Invalid device ID: 
addToDeviceRouteInfoMetadata
addToDeviceMetadata
setDeviceGroupLeaderScore: Deleted device ID: 
setDeviceGroupLeaderScore: Invalid device ID: 
setDeviceGroupLeaderScore
setDeviceHijackID: Deleted device ID: 
setDeviceHijackID: Invalid device ID: 
setDeviceHijackID
setHijackID:
getCompositeHijackID: Deleted device ID: 
getCompositeHijackID: Invalid device ID: 
 -> 
getCompositeHijackIDForSpeaker
getSpeakerGroupLeaderDeviceID: Invalid deviceOrSpeaker ID: 
checkDeviceToSpeakerMapping
checkRouteInfoSupportsRelayChange
/RouteInfo
deviceIDToSpeakerID
DeviceIDToSpeakerID
DMeta
HJID
VolumeGroupHomeCaching::makeVolumeGroupForSpeaker() requires non-null base
VolumeGroupHomeCaching
whole group
~VolumeGroupHomeCaching
VolumeGroupHomeCaching::removeSpeakerID() invalid for caching group
Volume
Mute
LastInteraction
_Base
apsyncvolumeupdate_trace
APSyncVolumeUpdateCreateFromInternal
APSyncVolumeUpdateGetTimestamp
APSyncVolumeUpdateGetVolumeAndMute
APSyncVolumeUpdateSetSequenceNumber
APSyncVolumeUpdateGetSequenceNumber
APSyncVolumeUpdateConfirmChange
APSyncVolumeUpdate
volumeupdate_Finalize
apsyncInteractionTimeoutMs
LegacyHomeID
APSyncStateManagerNotificationQueue
Core
~StateManagerImpl
copyProperty
RemoveHomeHack
setProperty
nodeName
pingCount
runDiagnosticCommand
setDeviceInfo
deviceType
ForUnitTest
speakerGroupingChanged
deviceID
speakerID
ledGroupID
currentGroupID
deviceName
speakerName
speakerVolume
speakerMute
speakerVolumeControlSupported
speakerVolumeControlType
stereoPair
groupLeaderScore
deviceCategory
bogus-room-id
Solo
addDiscoveredDevice
addSpeakerChangeListener
removeSpeakerChangeListener
addUniversalSpeakerChangeListener
removeUniversalSpeakerChangeListener
addGeneralListener
removeGeneralListener
addSetSpeakerGroupListener
removeSetSpeakerGroupListener
addGroup
removeGroup
copyGroupIDList
copySpeakerIDsInGroupList
copySpeakerIDList
copyDeviceIDList
copySpeakerCurrentGroupID
copySpeakerProposedGroupID
copySpeakerOwnedGroupID
isSpeakerSilentPrimary
copySpeakerMetadataStringProperty
copySpeakerMetadataDataProperty
copySpeakerMetadataDictionaryProperty
getSpeakerMetadataBoolProperty
copyNowPlayingInfo
setStereoRolePaired
setGroupLeaderScore
copyDeviceIDsInSpeaker
dump
forsysdiagnose
HomeManagers
HomeManagersToDelete
VolumeUXManagerErr
VolumeManagerAggregateErr
discovery
Discovery
DeviceInfo
DeviceType
DeviceExtraMetadata
DiscoveredDevices
idmap
ItemIDMap
StateManager
this
CacheListeners
pretty
+-+ APSyncStateManager state +-+
Homes: 
getOnlyHomeManagerSyncingInternal
createHomeManagerSyncing
/data
/legacy
addHomeManagerListeners
removeHomeManagerListeners
findHomeManagerAny
stopHomeManager
removeHomeManager
mapItemIDToHomeID
onStateChangeInternal
after: 
notifyClusterAvailibilityChanged
notifyIsBestProxyChanged
notifySpeakerGroupingChanged
notifyHomeKitIDChanged
notifyInvalidatedIDs
HK: 
HomeUUID
MyUUID
checkHomeManagerConnectionStatus
addDeviceInfoToHome
networkType
deviceRole
Connecting-
createHomeManagerAndConnect
checkDiscoveredDevicesAndGetNext
devices: 
convertDiscoveredDevicesToArray
DeviceID
NetworkType
Status
ConnectionTime
NonAPSync
Connecting
Failed
Found
Home (UUID = 
) - 
 devices:
Device Name
Virtual Speaker Name
Device UUID
Virtual Speaker UUID
Group UUID
Group Timestamp
Volume Timestamp
Master Volume
Master Mute
appendHomeManagerInfo
Muted
Unmuted
%Y-%m-%dT%H:%M:%S
notify
checkCleanupCallback
group
non-group
type must be array, but is 
Dup ID Dump 
apsyncsocketconnection_trace
SocketConnection
~SocketConnection
appendMessageReceived
close
connect
handleConnect
runClient
internalConnect
retryConnect
setState
receivedMessage
state
port
socket
isDestructing
isAborting
crdtmergealgorithm_trace
sync:true
sync:false
make_home
private
crdtmergehome_trace
apsyncnotificationmanager_trace
apsync::NotificationManagerQueue
NotificationManager
~NotificationManager
registerListener
notifyAsync
/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2755.24.7/Sources/AirPlaySync/Engine/Utility/APSyncTreeManager.cpp
m_delegate != nullptr
m_merge != nullptr
m_lock_delegate != nullptr
setNodeInfo
default
recalc
/tree/nodes
lastSelected
apsynctreemanager_trace
Mixed
apsyncvolumegroup_trace
HomeManagerLegacy
/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2755.24.7/Sources/AirPlaySync/Core/Managers/APSyncHomeManagerLegacy.cpp
updateValidityFromDB
updateHomeKitValidIDs
updateSyncingHomeID
cleanHomeKitValidIDLists
recomputeValidIDs
notifyChangedValidIDs
ValidIDLists
Discovered
HKLegacy
HKSyncing
Computed
/tree/home
/tree/node
/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2755.24.7/Sources/AirPlaySync/Engine/Utility/APSyncTreeManagerC.cpp
nodes
home
/info
RoomUUID
getLinkCost
makeValidNodeList
types
makeAllLinks
compute
found
setActive
onChangeWhileIdle
onChangeWhileDiscovery
onDiscoveryWhileDiscovery
onRecheck
onTimeOut
fail
onFailure
failed
scheduleRecheck
cancelRecheck
getStateChange
test
apsynctreemanagerc_trace
iterator does not fit current value
iterator out of range
PipeJSON
/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2755.24.7/Sources/AirPlaySync/Engine/Utility/APSyncPipeJson.cpp
m_log_event != nullptr
rename
;connect
;close
send_direct
closed
Pipe
apsyncpipejson_trace
parse
std::accumulate(first, last, std::pair<bool, int>(true, 0), [&first](std::pair<bool, int> res, decltype(*first) val) { res.first &= (val == *(std::next(std::addressof(*first), res.second++))); return res; }).first
lexer
m_content != nullptr
scan
m_start != nullptr
fill_line_buffer
m_line_buffer.empty() or m_content == reinterpret_cast<const lexer_char_t*>(m_line_buffer.data())
m_line_buffer.empty() or m_limit == m_content + m_line_buffer.size()
m_content <= m_start
m_start <= m_cursor
m_cursor <= m_limit
m_marker == nullptr or m_marker <= m_limit
parse error - unexpected 
get_token_string
<uninitialized>
true literal
false literal
null literal
string literal
number literal
<parse error>
end of input
unknown token
get_string
m_cursor - m_start >= 2
missing low surrogate
missing high surrogate
missing or wrong low surrogate
code points above 0x10FFFF are invalid
get_number
m_start < m_cursor
(token == token_type::value_unsigned) or (token == token_type::value_integer) or (token == token_type::value_float)
len > 0
; expected 
receive
crdtmergegroupproposal_trace
apsyncgroupproposal_trace
Deleter callback is NULL
GroupProposal
~GroupProposal
timerFired
notifyTimedOut
notifyAndCleanup
ExistingGroupID
IsClockStarted
SpeakerRouteDescriptor
SpeakerClustered
RemoteGroupUUIDList
IsClusterLeader
SpeakerVolumeChanged
SpeakerVolumeControlSupportedChanged
SpeakerVolumeControlTypeChanged
GroupVolumeChanged
GroupVolumeControlSupportedChanged
GroupVolumeControlTypeChanged
GroupMetadataNowPlayingChanged
SpeakerProposedGroupIDChanged
SpeakerReceivedData
SpeakerCommChannelClosed
LocalSpeakerChanged
DeviceHijackIDChanged
CommChannelUUID
Data
Initiator
OpenFailureReason
Unauthorized
UserSkippedAuth
AuthorizationToken
CancelIfAuthRequired
ContinuePlayingAfterLastDeviceRemoved
controlType
clientTypeUUID
clientUUID
avoidAuthPrompt
1910A70F-DBC0-4242-AF95-115DB30604E1
8186BE43-A39A-4C42-9D0E-60BDB9CE1FE3
Left
Right
HomeName
RoomName
Role
GroupingName
ConfiguredGroupingName
~ReceiverConnectionInfo
apsynccontroller_trace
APSyncController_Create
APSyncController_Initialize
APSyncControllerCopyProperty
APSyncControllerSetProperty
APSyncControllerSetSpeakerGroup
APSyncControllerStartGroupInteraction
APSyncControllerStopGroupInteraction
APSyncControllerStartSpeakerInteraction
APSyncControllerStopSpeakerInteraction
APSyncControllerOpenSpeakerCommChannel
APSyncControllerCloseSpeakerCommChannel
APSyncControllerSendSpeakerData
APSyncControllerGetLocalSpeakerUUIDWithCompletion
APSyncControllerRunDiagnosticsCommand
APSyncController_TranslatePipeAddress
APSyncController
synccontroller_Finalize
VolumeGroupAggregateBase
~VolumeGroupAggregateBase
addVolumeGroup
removeVolumeGroup
APSyncControllerServerCreate
APSyncControllerStartServer
APSyncController_ServerCopySharedInternal
5-Validity
apsyncvaliditymanager_trace
ValidityManager
isValid
VMeta
dispatchscheduler_trace
~Pipe
CLOSED
OPENING
OPEN
apsyncpipe_trace
~PipeManager
isStopped
/Library/Caches/com.apple.xbs/Sources/EmbeddedCoreMedia_Sim/EmbeddedCoreMedia-2755.24.7/Sources/AirPlaySync/Engine/Utility/APSyncPipeManager.cpp
m_manager_delegate != nullptr
apsyncSlowMessageThreshold
m_started == true
accept
setActivePipes
reportSlow
sender
slow
__slow
__close
pipestate->m_connecting_side == true
__ping
__pong
(keep this outgoing, kill incoming)
(keep incoming, kill this outgoing)
yes-
,complete
closePipe
findUnnamedPipe
findNamedPipe
onOpen
opened
name:
Asserting false
onClose
scheduleRetry
onRetry
onCloseUnusedPipes
send_all
NamedPipes
UnnamedPipes
ActivePipes
LEFTOVER
redundant
ping
ManagerPipeState
INCOMING
WAITING_CONNECT
WAITING_ACCEPT
WAITING_RETRY
READY
DEAD
otherName
lastUsed
PipeJson
connectingSide
apsyncpipemanager_trace
apsyncosutil_trace
addDumpCallback
addDumpCallback_block_invoke
Dump:
Error: Too long; printed above.
Error: Too long or empty; printed above.
AirPlaySync StateDump: %s
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
removeDumpCallback
VolumeGroupHomeBase
~VolumeGroupHomeBase
ControlSupported
ControlType
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %@)
<<<< APSyncStateManager >>>> %s: exception - %s
<<<< APSyncStateManager >>>> %s: apsync exception - %s
<<<< APSyncStateManager >>>> %s: [%p] (%p)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %c)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %d)
<<<< APSyncStateManager >>>> %s: [%p] (%@, [%p], [%p])
<<<< APSyncStateManager >>>> %s: [%p] ([%p], [%p])
<<<< APSyncStateManager >>>> %s: [%p] (%@)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %@, %@, %u, %u, [%p], [%p])
<<<< APSyncStateManager >>>> %s: <APSyncError> Error adding set speaker group change listener: %d
<<<< APSyncStateManager >>>> %s: Not adding SpeakerGroupListener because inCallbackContext ([%p]) and/or inCallback ([%p]) is/are invalid
<<<< APSyncStateManager >>>> %s: [%p] (%@, %@, %@, %u)
<<<< APSyncStateManager >>>> %s: [%p] (%@, %f)
<<<< APSyncStateManager >>>> %s: [%p] (%@, [%p])
<<<< APSyncStateManager >>>> %s: [%p] (%@, %lld, %f, %c, [%p])
<<<< APSyncStateManager >>>> %s: APSyncStateManager [%p] finalizing
<<<< APSyncStateManager >>>> %s: <APSyncError> exception - %s
<<<< APSyncStateManager >>>> %s: <APSyncError> apsync exception - %s
<<<< APSyncStateManager >>>> %s: APSyncStateManager created: [%p]
<<<< APSyncVolumeUXManager >>>> %s: [%p]
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s)
<<<< APSyncVolumeUXManager >>>> %s: [%p] added cached group for %s, for speaker %s
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s, %g)
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s, %g): could not find or create cached volume group.
<<<< APSyncVolumeUXManager >>>> %s: <APSyncError> [%p] (%s): no current cache or base volume group.
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s, %c): could not find or create cached volume group.
<<<< APSyncVolumeUXManager >>>> %s: [%p] added cached group for %s
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s, %c)
<<<< APSyncVolumeUXManager >>>> %s: [%p] erasing cached group for %s
<<<< APSyncVolumeUXManager >>>> %s: [%p] (%s) done
<<<< CRDTMerge_Volume >>>> %s: merge[%s] into [%s]
<<<< APSyncVolumeManagerAggregate >>>> %s: [%p]
<<<< APSyncVolumeManagerAggregate >>>> %s: [%p] container %p
<<<< APSyncVolumeManagerAggregate >>>> %s: [%p] already has container %p
<<<< APSyncVolumeManagerAggregate >>>> %s: [%p] adding container %p
<<<< APSyncVolumeManagerAggregate >>>> %s: [%p] removing container %p
<<<< APSyncVolumeManagerAggregate >>>> %s: [%p] removed volume group for container %p - empty
<<<< APSyncVolumeManagerAggregate >>>> %s: [%p] could not find container %p
<<<< APSyncVolumeManagerAggregate >>>> %s: <APSyncError> [%p] No volume group for group id %s
<<<< APSyncVolumeManagerAggregate >>>> %s: %s
<<<< APSyncVolumeManagerAggregate >>>> %s: [%p] added %s
<<<< APSyncVolumeManagerAggregate >>>> %s: <APSyncError> [%p] Volume group for %s already in base group
<<<< APSyncVolumeManagerAggregate >>>> %s: <APSyncError> [%p] Volume group for %s: couldn't find container for handler [%p]
<<<< APSyncVolumeManagerAggregate >>>> %s: [%p] removed %s
<<<< APSyncVolumeManagerAggregate >>>> %s: <APSyncError> [%p] Volume group for %s not found
<<<< APSyncVolumeManagerAggregate >>>> %s: <APSyncError> [%p] removed volume group for %s - empty
<<<< APSyncVolumeGroupAggregateCaching >>>> %s: [%p] caching group created
<<<< APSyncVolumeGroupAggregateCaching >>>> %s: [%p]
<<<< APSyncVolumeGroupAggregateCaching >>>> %s: [%p] [%s](%s, %g, %s)
<<<< APSyncVolumeGroupAggregateCaching >>>> %s: [%p] [%s](%g, %s)
<<<< APSyncVolumeGroupAggregateCaching >>>> %s: <APSyncError> Operation not supported in VolumeGroupAggregateCaching!
<<<< APSyncHomeManager >>>> %s: [%p] (%s, %s)
<<<< APSyncHomeManager >>>> %s: [%p]
<<<< APSyncHomeManager >>>> %s: <APSyncInit> [%p] changing HKID from %s to %s
<<<< APSyncHomeManager >>>> %s: [%p] (%s, %p)
<<<< APSyncHomeManager >>>> %s: changes = %s
<<<< APSyncHomeManager >>>> %s: before  = %s
<<<< APSyncHomeManager >>>> %s: after   = %s
<<<< APSyncHomeManager >>>> %s: done
<<<< APSyncHomeManager >>>> %s: [%p] (%lld, ...)
<<<< APSyncHomeManager >>>> %s: [%p] constructed
<<<< APSyncHomeManager >>>> %s: [%p] destructing
<<<< APSyncHomeManager >>>> %s: [%p] called &
<<<< APSyncHomeManager >>>> %s: got op: %s (%s), %s
<<<< APSyncHomeManager >>>> %s: notifying %p op: %s
<<<< APSyncHomeManager >>>> %s: <APSyncError> exception: %s
<<<< APSyncHomeManager >>>> %s: [%p] onChange-lambda
<<<< CRDTMerge >>>> %s: [%p] : %s -> [%p]
<<<< CRDTMerge >>>> %s: [%p]
<<<< CRDTMerge >>>> %s: RC1:%s
<<<< CRDTMerge >>>> %s: RC:%s = %s
<<<< CRDTMerge >>>> %s: C:%s = %s
<<<< CRDTMerge >>>> %s: R:%s = %s
<<<< CRDTMerge >>>> %s: :%s = %s
<<<< CRDTMerge >>>> %s: merge %s into %s
<<<< CRDTMerge >>>> %s: no algorithm for operation %s
<<<< CRDTMerge >>>> %s: merging %s
<<<< CRDTMergeAnnounce >>>> %s: kFigNoteLevel_CRDTMergeAnnounce_API changes=%s, data=%s
<<<< CRDTMergeAnnounce >>>> %s: Merge_Multi_Announce data: %s
<<<< CRDTMergeAnnounce >>>> %s: Merge_Multi_Announce before: %s
<<<< CRDTMergeAnnounce >>>> %s: B(%s, %s, %s)
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] (%s, %s, %s)
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] was stopped = %c
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] (%s)
<<<< APSyncHomeManagerSyncing >>>> %s: Setting homeID in database to %s: %s
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] (%s, %s, %d)
<<<< APSyncHomeManagerSyncing >>>> %s: <APSyncInit> [%s] connecting to '%s' on %s
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] (%s) [type=%s]
<<<< APSyncHomeManagerSyncing >>>> %s: Adding %s = %s
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] (%s, %s)
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] path: %s
<<<< APSyncHomeManagerSyncing >>>> %s: Got HomeKit ID Update: %s (was %s)
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] (%d, %s)
<<<< APSyncHomeManagerSyncing >>>> %s: %s = %s
<<<< APSyncHomeManagerSyncing >>>> %s: Updating %s: %s
<<<< APSyncHomeManagerSyncing >>>> %s: <APSyncError> Unexpected: no change to availability map: %s
<<<< APSyncHomeManagerSyncing >>>> %s: m_isBestProxy changing to %c; firing notification
<<<< APSyncHomeManagerSyncing >>>> %s: [%p/%s]
<<<< APSyncHomeManagerSyncing >>>> %s: [%p/%s] (%c)
<<<< APSyncHomeManagerSyncing >>>> %s: %s:onPingComplete(%lld,%s,%s)
<<<< APSyncHomeManagerSyncing >>>> %s: %s:onAnnounce(%lld,%s)
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] starting
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] done
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] done-done
<<<< APSyncHomeManagerSyncing >>>> %s: m_validIDs == %s
<<<< APSyncHomeManagerSyncing >>>> %s: <APSyncMapping> m_validIDs -> %s
<<<< APSyncHomeManagerSyncing >>>> %s: removed IDs = %s
<<<< APSyncHomeManagerSyncing >>>> %s: added IDs = %s
<<<< APSyncHomeManagerSyncing >>>> %s: addedIDs == %s
<<<< APSyncHomeManagerSyncing >>>> %s: Initializing device grouping info for %s: pguuid=%s, tsuuid=%s
<<<< APSyncHomeManagerSyncing >>>> %s: Detected a change in grouping state for %s: pguuid=%s->%s, tsuuid=%s->%s, devid=%s->%s
<<<< APSyncHomeManagerSyncing >>>> %s: Group changed to: %s
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] notifying hijack ID changed
<<<< APSyncHomeManagerSyncing >>>> %s: [%p] onChange-lambda
<<<< APSyncHomeManagerSyncing >>>> %s: <APSyncMapping> revalidating [%s]
<<<< APSyncHomeManagerSyncing >>>> %s: Error notifying IDs revalidated: %s
<<<< CRDTMerge_Nodes >>>> %s: CRDTMerge_Nodes, change=%s, data=%s
<<<< CRDTMerge_Nodes >>>> %s: CRDTMerge_Nodes, data=%s
<<<< CRDTMerge_Nodes >>>> %s: valid(%s)
<<<< CRDTMerge_Nodes >>>> %s: TRUE
<<<< CRDTMerge_Nodes >>>> %s: FALSE
<<<< CRDTMerge_Nodes >>>> %s: <APSyncError> Node missing type/name/cost fields; skipping %s
<<<< CRDTMergeMultiLWW >>>> %s: Merge_Multi_LWW changes=%s, data=%s
<<<< CRDTMergeMultiLWW >>>> %s: Merge_Multi_LWW data: %s
<<<< CRDTMergeMultiLWW >>>> %s: Merge_Multi_LWW before: %s
<<<< APSyncControllerSimulatorImpl >>>> %s: APSyncControllerSimulatorImpl constructed: [%p]; isAppleTV = %c, isAudioAccessory = %c
<<<< APSyncControllerSimulatorImpl >>>> %s: APSyncControllerSimulatorImpl destructed: [%p]
<<<< APSyncControllerSimulatorImpl >>>> %s: [%p]
<<<< APSyncControllerSimulatorImpl >>>> %s: ([%p], %@)
<<<< APSyncControllerSimulatorImpl >>>> %s: ([%p]) - stubbed out
<<<< APSyncControllerSimulatorImpl >>>> %s: [%p] returns %@
<<<< APSyncPipeSchedule >>>> %s: [%p] pipe %p
<<<< APSyncPipeSchedule >>>> %s: [%p] %d outgoing dumped
<<<< APSyncPipeSchedule >>>> %s: nagle is %d ms
<<<< APSyncPipeSchedule >>>> %s: m_versions == m_version %d
<<<< APSyncPipeSchedule >>>> %s: set m_versions[%d] = %d
<<<< APSyncPipeSchedule >>>> %s: [%p] %d, m_version %d, state %s
<<<< APSyncPipeSchedule >>>> %s: [%p] %s
<<<< APSyncSpeakerManager >>>> %s: [%p] created for home %s
<<<< APSyncSpeakerManager >>>> %s: [%p] deleting GroupProposal [%p] from collection
<<<< APSyncSpeakerManager >>>> %s: [%p] unable to find and delete GroupProposal [%p] from collection
<<<< APSyncSpeakerManager >>>> %s: [%p] metadata -> %s
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s, %s, %s, %s, %lld, %d)
<<<< APSyncSpeakerManager >>>> %s: [%p] Current = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] ExistingProposal = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] new remote proposal => Create
<<<< APSyncSpeakerManager >>>> %s: [%p] group IDs match; state=%d => %s
<<<< APSyncSpeakerManager >>>> %s: [%p] adding to new group => Create
<<<< APSyncSpeakerManager >>>> %s: [%p] prev %s != current %s => Ignore
<<<< APSyncSpeakerManager >>>> %s: [%p] existing state is Timeout/Failure/Success => Create
<<<< APSyncSpeakerManager >>>> %s: [%p] existing proposal is old (now = %lld) => Create
<<<< APSyncSpeakerManager >>>> %s: [%p] existing proposal is not old (now = %lld) => Ignore
<<<< APSyncSpeakerManager >>>> %s: [%p] Ignoring update
<<<< APSyncSpeakerManager >>>> %s: [%p] action: %d
<<<< APSyncSpeakerManager >>>> %s: [%p] NewProposal empty because update is ignored
<<<< APSyncSpeakerManager >>>> %s: [%p] NewProposal = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s, %s, %s, %d)
<<<< APSyncSpeakerManager >>>> %s: [%p] NewProposal for legacy request[2] = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] New state %d <= current %d - ignoring update
<<<< APSyncSpeakerManager >>>> %s: [%p] NewProposal for un/silent primary = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] NewProposal for legacy request = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] groupID mismatch (dbCur '%s' v. specCur '%s', dbProp '%s' v. specProp '%s') - ignoring update
<<<< APSyncSpeakerManager >>>> %s: Proposed group JSON is: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] updating control supported=%c for speaker %s
<<<< APSyncSpeakerManager >>>> %s: [%p] <APSyncVolume> setting VolumeControlSupported=%c for speaker %s in database
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting VolumeControlSupportedChanged - for %s
<<<< APSyncSpeakerManager >>>> %s:   From comparing %s vs %s
<<<< APSyncSpeakerManager >>>> %s: [%p] getting control supported for speaker %s
<<<< APSyncSpeakerManager >>>> %s: [%p] updating control type = %llu for speaker %s
<<<< APSyncSpeakerManager >>>> %s: [%p] <APSyncVolume> setting VolumeControlType=%llu for speaker %s in database
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting VolumeControlTypeChanged - for %s
<<<< APSyncSpeakerManager >>>> %s: [%p] getting control type for speaker %s
<<<< APSyncSpeakerManager >>>> %s: <APSyncError> Got invalid control type for speaker %s; using None
<<<< APSyncSpeakerManager >>>> %s: [%p] cur (%s) vs. prop (%s) at %lld
<<<< APSyncSpeakerManager >>>> %s: [%p] using %s to return %s
<<<< APSyncSpeakerManager >>>> %s: proposed = %s
<<<< APSyncSpeakerManager >>>> %s: current  = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] cur (%s) vs. %g / %c @ %lld
<<<< APSyncSpeakerManager >>>> %s: [%p] returning %s
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s): %s
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s): %s = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] change = %s
<<<< APSyncSpeakerManager >>>> %s: <APSyncVolume> Change request prepared: speakerID=%s timestamp~=%lld volume=%f mute=%c
<<<< APSyncSpeakerManager >>>> %s: [%p] %s = %s
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting UXVolumeChanged - for [%s]
<<<< APSyncSpeakerManager >>>> %s: <APSyncError> [%p] No volume group for group id %s
<<<< APSyncSpeakerManager >>>> %s: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s)
<<<< APSyncSpeakerManager >>>> %s: [%p] before: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] after:  %s
<<<< APSyncSpeakerManager >>>> %s: <APSyncError> Path has no parent: %s; ignoring
<<<< APSyncSpeakerManager >>>> %s: Ignoring update for %s - invalid
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting VolumeChanged for [%s]
<<<< APSyncSpeakerManager >>>> %s: [%p] Received volume control change.
<<<< APSyncSpeakerManager >>>> %s: New speaker w/no grouping: %s
<<<< APSyncSpeakerManager >>>> %s: Will post VolumeControlSupportedChanged - for %s: %s vs %s
<<<< APSyncSpeakerManager >>>> %s: Will post VolumeControlTypeChanged - for %s: %s vs %s
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting VolumeControlSupportedChanged - db change to %c; notifying for [%s]
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting VolumeControlTypeChanged - db change to %llu; notifying for [%s]
<<<< APSyncSpeakerManager >>>> %s: [%p] Received group proposal, path: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] Notify grouping change proposal %s
<<<< APSyncSpeakerManager >>>> %s: [%p] Group ID proposal received: itemID=%s currentGroupID=%s (%s) proposedGroupID=%s, options=%s
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> Silent primary status changed for %s: groupID = %s, prevGroupID = %s, before = %s
<<<< APSyncSpeakerManager >>>> %s: [%p] not handled; key: %s
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting GroupsAvailableChanged for change %s b/c got new group IDs [%s]
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s) done
<<<< APSyncSpeakerManager >>>> %s: [%p] (%s, %s, %s)
<<<< APSyncSpeakerManager >>>> %s: [%p] removing volume for speaker '%s' from group '%s'
<<<< APSyncSpeakerManager >>>> %s: [%p] removing volume group %s for speaker: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] created volume group for current: %s
<<<< APSyncSpeakerManager >>>> %s: [%p] <APSyncVolume> adding speaker '%s' to group '%s': volume %g/%c, ctl %c/%d
<<<< APSyncSpeakerManager >>>> %s: proposedTimestamp = %lld, timeout = %d, currentTimestamp = %lld, now = %lld
<<<< APSyncSpeakerManager >>>> %s: Change request received: timestamp=%lld volume=%f mute=%c
<<<< APSyncSpeakerManager >>>> %s: [%p] updating volume for group %s, speaker %s
<<<< APSyncSpeakerManager >>>> %s: Will post VolumeChanged - for %s: %s vs %s
<<<< APSyncSpeakerManager >>>> %s: [%p] no group found for speaker %s
<<<< APSyncSpeakerManager >>>> %s: proposedTimestamp = %lld, timeout = %d, now = %lld -> %s
<<<< APSyncSpeakerManager >>>> %s: [%p] removing ID %s / group %s
<<<< APSyncSpeakerManager >>>> %s: [%p] removing volume for speaker: %s
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting GroupsAvailableChanged b/c removed group IDs [%s]
<<<< APSyncSpeakerManager >>>> %s: [%p] skipping non-speaker ID %s
<<<< APSyncSpeakerManager >>>> %s: [%p] adding ID %s / group %s
<<<< APSyncSpeakerManager >>>> %s: Error trying to add group '%s'; %s
<<<< APSyncSpeakerManager >>>> %s: Checking %s: %s vs. %s
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting VolumeControlSupportedChanged for %s
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting VolumeControlTypeChanged for %s
<<<< APSyncSpeakerManager >>>> %s: <APSyncNotify> [%s] Posting VolumeChanged for %s
<<<< APSyncSpeakerManager >>>> %s: volume has changed noticeably after update: %g -> %g; %s
<<<< APSyncSpeakerManager >>>> %s: mute has changed after update: %c -> %c; %s
<<<< APSyncSpeakerManager >>>> %s: groupIDsMatchForProposal: Match: current '%s' vs. '%s'; prop '%s'
<<<< APSyncSpeakerManager >>>> %s: groupIDsMatchForProposal: Didn't match: cur '%s' vs. '%s'; prop '%s' vs. '%s'
<<<< APSyncSpeakerManager >>>> %s: <APSyncVolume> Change request skipped: speakerID=%s volume control not supported
<<<< APSyncGroupManager >>>> %s: [%p] path = %s, prev = %s
<<<< APSyncGroupManager >>>> %s: <APSyncError> [%p] Could not extract group ID from path: %s.
<<<< APSyncGroupManager >>>> %s: [%p] %s
<<<< APSyncGroupManager >>>> %s: <APSyncNotify> [%s] Posting GroupsAvailableChanged b/c got new group IDs [%s]
<<<< CRDTMergeLWW >>>> %s: (%s, %s)
<<<< CRDTMergeLWW >>>> %s: A(%s, %s, %s)
<<<< CRDTMergeLWW >>>> %s: B(%s, %s, %s)
<<<< APSyncNode >>>> %s: [%p] %s: created
<<<< APSyncNode >>>> %s: <APSyncError> ~Node without stopping node first 
<<<< APSyncNode >>>> %s: [%p] %s: ~destructing
<<<< APSyncNode >>>> %s: %s:stop
<<<< APSyncNode >>>> %s: %s:onPipeManagerStop (called)
<<<< APSyncNode >>>> %s: %s:onNodeStop (about to call)
<<<< APSyncNode >>>> %s: %s:isStopped = %d
<<<< APSyncNode >>>> %s: %s:onConnect received %s
<<<< APSyncNode >>>> %s: %s:onConnect sending all
<<<< APSyncNode >>>> %s: %s:onConnect sending %s
<<<< APSyncNode >>>> %s: %s:onMessage %s
<<<< APSyncNode >>>> %s: %s:onPingComplete(%lld,%s,%s)
<<<< APSyncNode >>>> %s: %s:onTreeChange(%s)
<<<< APSyncNode >>>> %s: %s:setDiscovery(%s)
<<<< APSyncNode >>>> %s: %s%s+
<<<< APSyncNode >>>> %s: %s%s
<<<< APSyncNode >>>> %s: [%p] server %p, pipe %p
<<<< APSyncDeviceManager >>>> %s: [%p] metadata -> %s
<<<< APSyncDeviceManager >>>> %s: Metadata for %s is same as current device JSON, skipping set in database.
<<<< APSyncDeviceManager >>>> %s: Metadata for %s was different; setting in database.
<<<< APSyncDeviceManager >>>> %s: Setting HijackID for %s to %s
<<<< APSyncDeviceManager >>>> %s: Getting HijackID for speaker %s
<<<< APSyncDeviceManager >>>> %s: Timestamp %lld, hijd='%s' > max %lld, hjid='%s' - use
<<<< APSyncDeviceManager >>>> %s: Timestamp %lld, hijd='%s' <= max %lld, hjid='%s' - skip
<<<< APSyncDeviceManager >>>> %s: Timestamp %lld: Hijack ID empty, skip
<<<< APSyncDeviceManager >>>> %s: Timestamp %lld < max %lld - skip
<<<< APSyncDeviceManager >>>> %s: [%p] path: %s
<<<< APSyncDeviceManager >>>> %s: Ignoring update for %s - invalid
<<<< APSyncDeviceManager >>>> %s: <APSyncNotify> [%s] %s value did change for %s. Posting GroupsAvailableChanged.
<<<< APSyncDeviceManager >>>> %s: Notifying hijackID change for speaker %s to: '%s'
<<<< APSyncDeviceManager >>>> %s: [%p] mapping deviceID %s to speakerID %s
<<<< APSyncDeviceManager >>>> %s: [%p] Before: %s, after: %s
<<<< APSyncDeviceManager >>>> %s: %s before is %c, %s after is %c
<<<< APSyncDeviceManager >>>> %s: [%p] mapped deviceID %s to speakerID %s
<<<< APSyncDeviceManager >>>> %s: [%p] removing ID %s
<<<< APSyncDeviceManager >>>> %s: [%p] adding ID %s -> %s
<<<< APSyncVolumeGroupHomeCaching >>>> %s: [%p] caching group (%s, %p) created for %s
<<<< APSyncVolumeGroupHomeCaching >>>> %s: [%p]
<<<< APSyncVolumeGroupHomeCaching >>>> %s: [%p] [%s](%s, %g, %s)
<<<< APSyncVolumeGroupHomeCaching >>>> %s: [%p] [%s](%s) - speaker ID not found; caching group not allowed to create new entry -- ignoring!
<<<< APSyncVolumeGroupHomeCaching >>>> %s: [%p] [%s](%g, %s)
<<<< APSyncVolumeUpdate >>>> %s: [%p]
<<<< APSyncVolumeUpdate >>>> %s: <APSyncError> exception - %s
<<<< APSyncVolumeUpdate >>>> %s: <APSyncError> apsync exception - %s
<<<< APSyncVolumeUpdate >>>> %s: [%p] ([%p], [%p])
<<<< APSyncVolumeUpdate >>>> %s: [%p] %lld
<<<< APSyncVolumeUpdate >>>> %s: [%p] ([%p])
<<<< APSyncVolumeUpdate >>>> %s: [%p] (%f, %c)
<<<< APSyncVolumeUpdate >>>> %s: APSyncVolumeUpdate [%p] finalizing
<<<< APSyncStateManagerImpl >>>> %s: [%p]
<<<< APSyncStateManagerImpl >>>> %s: [%p] HomeManager entry count = %ld
<<<< APSyncStateManagerImpl >>>> %s: [%p] initializing
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> apsync exception - %s
<<<< APSyncStateManagerImpl >>>> %s: ([%p], %@, %@) => %d: %@
<<<< APSyncStateManagerImpl >>>> %s: Removing home: %s
<<<< APSyncStateManagerImpl >>>> %s: ([%p], %@, %@, %@) => %d
<<<< APSyncStateManagerImpl >>>> %s: Error - missing device type
<<<< APSyncStateManagerImpl >>>> %s: [%p] Not adding legacy speaker ID %s, device %s to home %s - already exists
<<<< APSyncStateManagerImpl >>>> %s: <APSyncInit> Adding legacy speaker ID %s, device %s to home %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] Got speaker ID '%s' / device ID '%s' - one is empty
<<<< APSyncStateManagerImpl >>>> %s: [%p] Current device type = %u
<<<< APSyncStateManagerImpl >>>> %s: [%p] Bad: don't have JSON, but got json for unit test: %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] Storing m_deviceInfo; m_deviceType = %u
<<<< APSyncStateManagerImpl >>>> %s: [%p] Found home manager: %p
<<<< APSyncStateManagerImpl >>>> %s: [%p] Bad: already have JSON: %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] (%s, %s, %c)
<<<< APSyncStateManagerImpl >>>> %s: Reset status for %s from %s to New
<<<< APSyncStateManagerImpl >>>> %s: [%p] [%p]
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> [%p] no speaker manager found for group/speaker %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] added callback for existing listener [%p] for (%s, [%p], [%p])
<<<< APSyncStateManagerImpl >>>> %s: [%p] inserted listener [%p] for (%s, [%p], [%p])
<<<< APSyncStateManagerImpl >>>> %s: [%p] couldn't find listener for (%s, [%p], [%p])
<<<< APSyncStateManagerImpl >>>> %s: [%p] couldn't remove listener for (%s, [%p], [%p])
<<<< APSyncStateManagerImpl >>>> %s: [%p] removed listener [%p]
<<<< APSyncStateManagerImpl >>>> %s: [%p] (%c, [%p])
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> [%p] error adding listener callback: %d
<<<< APSyncStateManagerImpl >>>> %s: [%p] inserted listener [%p]
<<<< APSyncStateManagerImpl >>>> %s: [%p] filteringListener was empty
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> [%p] error removing listener callback: %d
<<<< APSyncStateManagerImpl >>>> %s: [%p] ([%p])
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> [%p] no home found for %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] have valid homeManager, registering through it
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> addGroup() no longer needed/supported - for %s, %c, %c
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> removeGroup() no longer needed/supported - for %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (HMS) #### Duplicate groupID entry: %s ####
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (HMS) #### Duplicate speakerID entry: %s ####
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (Legacy) #### Duplicate speakerID entry: %s ####
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (HM) #### Duplicate speakerID entry: %s ####
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (HMS) #### Duplicate deviceID entry: %s ####
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (Legacy) #### Duplicate deviceID entry: %s ####
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (HM) #### Duplicate deviceID entry: %s ####
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> [%p] no home manager for speakerID %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> Error copying speaker leader device ID.
<<<< APSyncStateManagerImpl >>>> %s: Converted now playing %s to %@
<<<< APSyncStateManagerImpl >>>> %s: [%p] got json: %s
<<<< APSyncStateManagerImpl >>>> %s: Updating now playing info and distributing across system
<<<< APSyncStateManagerImpl >>>> %s: Updating new speaker name and distributing across system
<<<< APSyncStateManagerImpl >>>> %s: Updating new speaker stereo role status and distributing across system
<<<< APSyncStateManagerImpl >>>> %s: Updating new speaker group leader score and distributing across system
<<<< APSyncStateManagerImpl >>>> %s: qualifier = '%s'
<<<< APSyncStateManagerImpl >>>> %s: Wrong number of home managers: %zu
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> Trying to create home manager for empty home id
<<<< APSyncStateManagerImpl >>>> %s: <APSyncInit> Creating home manager for home: %s, deviceID: %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] Adding AirPlay pipe factory for home: %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] No AirPlay pipe factory for home: %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] adding cache listener for home: %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] removing cache listener for home: %s
<<<< APSyncStateManagerImpl >>>> %s: matched itemID %s to legacy homeManager [%p]
<<<< APSyncStateManagerImpl >>>> %s: matched itemID %s to homeManager [%p]
<<<< APSyncStateManagerImpl >>>> %s: no match for itemID %s to homeManager
<<<< APSyncStateManagerImpl >>>> %s: no entry in m_itemIDToHomeID for itemID %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> No homeManager found for removal, for ID %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncInit> Marking homeManager [%p] (%s) for removal
<<<< APSyncStateManagerImpl >>>> %s: <APSyncMapping> Removing %s to %s
<<<< APSyncStateManagerImpl >>>> %s: Checking for %s in %s
<<<< APSyncStateManagerImpl >>>> %s: Marking device %s status as Failed from %d
<<<< APSyncStateManagerImpl >>>> %s: Skipping device %s b/c status is %d
<<<< APSyncStateManagerImpl >>>> %s: <APSyncInit> Removing homeManager ([%p] %s)
<<<< APSyncStateManagerImpl >>>> %s: Deleting homeManager [%p] (%s)
<<<< APSyncStateManagerImpl >>>> %s: Not deleting homeManager [%p] (%s): mismatch
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> Could not find homeManager [%p] (%s) to delete
<<<< APSyncStateManagerImpl >>>> %s: <APSyncMapping> Couldn't re-map %s from %s to %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncMapping> Mapped %s to %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncMapping> Matched %s to %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> [%p] Error calling pipe address translator %p on type %@, name %s: %d
<<<< APSyncStateManagerImpl >>>> %s: [%p] (%lld, ...)
<<<< APSyncStateManagerImpl >>>> %s: [%p] (%p, %d, ...)
<<<< APSyncStateManagerImpl >>>> %s: %s = %s
<<<< APSyncStateManagerImpl >>>> %s: running on queue from onStateChange()
<<<< APSyncStateManagerImpl >>>> %s: Updating status for %s to Failed
<<<< APSyncStateManagerImpl >>>> %s: Removing home %p (%s)
<<<< APSyncStateManagerImpl >>>> %s: [%p] homeManager = [%p] / %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] homeManager = [%p] / %s -> %c
<<<< APSyncStateManagerImpl >>>> %s: [%p] %s -> %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> Couldn't find home manager for old ID '%s' - bailing!
<<<< APSyncStateManagerImpl >>>> %s: Stopping homeManager [%p] %s because it resolved to duplicate ID %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> Couldn't find homeManager for ID %s
<<<< APSyncStateManagerImpl >>>> %s: Checking %zu in m_itemIDToHomeID
<<<< APSyncStateManagerImpl >>>> %s: <APSyncMapping> Remapped %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncMapping> Not remapping %s: %s
<<<< APSyncStateManagerImpl >>>> %s: (%s, [%s])
<<<< APSyncStateManagerImpl >>>> %s: <APSyncMapping> Removing mapping for %s -> %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncMapping> Not removing mapping for %s -> %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncMapping> No mapping for %s
<<<< APSyncStateManagerImpl >>>> %s: %s%s+
<<<< APSyncStateManagerImpl >>>> %s: %s%s
<<<< APSyncStateManagerImpl >>>> %s: Skipping - no HomeUUID / MyUUID in %s
<<<< APSyncStateManagerImpl >>>> %s: homeKitHomeID = %s
<<<< APSyncStateManagerImpl >>>> %s: %s
<<<< APSyncStateManagerImpl >>>> %s: Checking homes
<<<< APSyncStateManagerImpl >>>> %s: Skipping - no device info
<<<< APSyncStateManagerImpl >>>> %s: [%p] delayed adding pipe server %p for home %s
<<<< APSyncStateManagerImpl >>>> %s: No current operation for device type: %u
<<<< APSyncStateManagerImpl >>>> %s: <APSyncInit> Adding device to home %s: (%s, %s, %s)
<<<< APSyncStateManagerImpl >>>> %s: [%p] Adding speaker ID %s, device %s to home %s
<<<< APSyncStateManagerImpl >>>> %s: In network type = %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncInit> (%s, %s, %s)
<<<< APSyncStateManagerImpl >>>> %s: returning false - connection attempt in progress
<<<< APSyncStateManagerImpl >>>> %s: returning: %s
<<<< APSyncStateManagerImpl >>>> %s: returning false - no next device
<<<< APSyncStateManagerImpl >>>> %s: converting: %s
<<<< APSyncStateManagerImpl >>>> %s: to: %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> Failed to get %@ for %s with error: %d
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> Exception from getting master volume/mute - %s
<<<< APSyncStateManagerImpl >>>> %s: [%p] handling %zu listeners
<<<< APSyncStateManagerImpl >>>> %s: [%p] listener ( [%p] - [%p] ) has not registered a callback
<<<< APSyncStateManagerImpl >>>> %s: [%p] [%s] handling %zu listeners
<<<< APSyncStateManagerImpl >>>> %s: [%p] [%c](%s) handling %zu listeners
<<<< APSyncStateManagerImpl >>>> %s: [%p] skipping '%s', for groups and not in APSync GroupID format
<<<< APSyncStateManagerImpl >>>> %s: [%p] [G] handling '%s'
<<<< APSyncStateManagerImpl >>>> %s: [%p] skipping '%s', not for groups and not in APSync SpeakerID format
<<<< APSyncStateManagerImpl >>>> %s: [%p] handling '%s'
<<<< APSyncStateManagerImpl >>>> %s: Removing SpeakerGroup callback; proposal state: %d, listener: [%p], callback: [%p]
<<<< APSyncStateManagerImpl >>>> %s: [%p] no proposal state found in payload
<<<< APSyncStateManagerImpl >>>> %s: (%s)
<<<< APSyncStateManagerImpl >>>> %s: (%s): got %s itemIDs %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (array) itemID %s is not already a group ID for payload %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (array) itemID %s is not already a speaker ID for payload %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (array) itemID %s is a device ID but already a group or speaker ID for payload %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (string) itemID %s is not already a group ID for payload %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (string) itemID %s is not already a speaker ID for payload %s
<<<< APSyncStateManagerImpl >>>> %s: <APSyncError> (string) itemID %s is a device ID but already a group or speaker ID for payload %s
<<<< APSyncStateManagerImpl >>>> %s: Private device is getting a deviceUUID - remove all homes
<<<< APSyncStateManagerImpl >>>> %s: Non-private device is losing its deviceUUID - remove all homes
<<<< APSyncSocketConnection >>>> %s: [%p] created
<<<< APSyncSocketConnection >>>> %s: [%p] destroying
<<<< APSyncSocketConnection >>>> %s: [%p] vs OPENING, state = %s
<<<< APSyncSocketConnection >>>> %s: [%p] tearing down while trying to reconnect
<<<< APSyncSocketConnection >>>> %s: [%p] vs OPEN, state = %s
<<<< APSyncSocketConnection >>>> %s: [%p] destroyed
<<<< APSyncSocketConnection >>>> %s: [%p] received %zd bytes
<<<< APSyncSocketConnection >>>> %s: [%p]: %s
<<<< APSyncSocketConnection >>>> %s: [%p] closing connection
<<<< APSyncSocketConnection >>>> %s: [%p] (state %s): %s
<<<< APSyncSocketConnection >>>> %s: [%p] connect: %s, valid completion: '%c'
<<<< APSyncSocketConnection >>>> %s: [%p] not connecting; connection is already in state: %s
<<<< APSyncSocketConnection >>>> %s: [%p] socket %d
<<<< APSyncSocketConnection >>>> %s: [%p] connect called existing socket (%d, new socket %d); current state = %s
<<<< APSyncSocketConnection >>>> %s: Error creating abort pipes: %s
<<<< APSyncSocketConnection >>>> %s: [%p] starting to listen on socket %d
<<<< APSyncSocketConnection >>>> %s: [%p] select failed with %s
<<<< APSyncSocketConnection >>>> %s: [%p] got non-negative result from select
<<<< APSyncSocketConnection >>>> %s: [%p] Got message on abort pipe
<<<< APSyncSocketConnection >>>> %s: [%p] Error reading from named pipe: %s
<<<< APSyncSocketConnection >>>> %s: [%p] Socket closed by server.
<<<< APSyncSocketConnection >>>> %s: [%p] No fd's set??
<<<< APSyncSocketConnection >>>> %s: [%p] Exception in runClient(): %s
<<<< APSyncSocketConnection >>>> %s: [%p] aborting; disconnecting socket %d
<<<< APSyncSocketConnection >>>> %s: [%p] returning from runClient
<<<< APSyncSocketConnection >>>> %s: [%p] IP: %s, port: %d
<<<< APSyncSocketConnection >>>> %s: [%p] Valid IPv4 address: %s
<<<< APSyncSocketConnection >>>> %s: [%p] Valid IPv6 address: %s
<<<< APSyncSocketConnection >>>> %s: [%p] '%s' - invalid address
<<<< APSyncSocketConnection >>>> %s: [%p] Socket creation error
<<<< APSyncSocketConnection >>>> %s: [%p] Connecting to IP: %s, port: %d, socket: %d
<<<< APSyncSocketConnection >>>> %s: [%p] Failed to Connect ( %d )!
<<<< APSyncSocketConnection >>>> %s: [%p] Connect status: %d, attempting to reconnect
<<<< APSyncSocketConnection >>>> %s: [%p] Connect succeeded!
<<<< APSyncSocketConnection >>>> %s: [%p] In progress or trying again, socket %d ( retry: %d )
<<<< APSyncSocketConnection >>>> %s: [%p] returning from retryConnect
<<<< APSyncSocketConnection >>>> %s: [%p] locked operation returned false; not calling delegate
<<<< APSyncSocketConnection >>>> %s: [%p] set state %d=%s; delegate = %p
<<<< APSyncSocketConnection >>>> %s: [%p], delegate [%p]
<<<< APSyncSocketConnection >>>> %s: [%p] started while destructing; returning
<<<< APSyncSocketConnection >>>> %s: [%p] setting m_socket = %d
<<<< APSyncSocketConnection >>>> %s: [%p] stopping while destructing; returning
<<<< APSyncSocketConnection >>>> %s: [%p] destructing before attempting reconnect, aborting
<<<< APSyncSocketConnection >>>> %s: [%p] returning from dispatch::after[1] from retryConnect
<<<< APSyncSocketConnection >>>> %s: [%p] Connect succeeded
<<<< APSyncSocketConnection >>>> %s: [%p] Connect retry attempt: %d, status: %d
<<<< APSyncSocketConnection >>>> %s: [%p] Failed to Connect after exceeding max retries!
<<<< APSyncSocketConnection >>>> %s: [%p] returning from dispatch::after[2] from retryConnect
<<<< APSyncSocketConnection >>>> %s: [%p] destructing after wait, before attempting reconnect, aborting
<<<< APSyncSocketConnection >>>> %s: [%p] destructing after failed reconnect attempts
<<<< CRDTMergeAlgorithm >>>> %s: merge '%s' into '%s'
<<<< CRDTMergeAlgorithm >>>> %s: merged.
<<<< CRDTMergeAlgorithm >>>> %s: not merged.
<<<< CRDTMerge_Home >>>> %s: CRDTMerge_Home::make_home(first=%d) home %s
<<<< CRDTMerge_Home >>>> %s: CRDTMerge_Home::make_home returns %s
<<<< APSyncNotificationManager >>>> %s: [%p]
<<<< APSyncNotificationManager >>>> %s: adding itemID %s with listener [%p]
<<<< APSyncNotificationManager >>>> %s: [%p] (%s)
<<<< APSyncNotificationManager >>>> %s: [%p] sending %s to %zu listeners
<<<< APSyncTreeManager >>>> %s: %s::setNodeInfo(%s)
<<<< APSyncTreeManager >>>> %s: %s::recalc(%s)
<<<< APSyncTreeManager >>>> %s: %s::recalc(nodes=%s)
<<<< APSyncTreeManager >>>> %s: not valid: %s
<<<< APSyncTreeManager >>>> %s: %s:links are %s, Selected: %s
<<<< APSyncHomeManagerLegacy >>>> %s: [%p] (%s, %s)
<<<< APSyncHomeManagerLegacy >>>> %s: (%s, %c)
<<<< APSyncHomeManagerLegacy >>>> %s: <APSyncMapping> adding m_discoveredIDs: %s
<<<< APSyncHomeManagerLegacy >>>> %s: <APSyncMapping> removing m_discoveredIDs: %s
<<<< APSyncHomeManagerLegacy >>>> %s: (%s)
<<<< APSyncHomeManagerLegacy >>>> %s: legacyDeviceIDs = [%s]
<<<< APSyncHomeManagerLegacy >>>> %s: syncingDeviceIDs = [%s]
<<<< APSyncHomeManagerLegacy >>>> %s: (%s, %s)
<<<< APSyncHomeManagerLegacy >>>> %s: [%p] (%s) [type=%s]
<<<< APSyncHomeManagerLegacy >>>> %s: [%p] starting
<<<< APSyncHomeManagerLegacy >>>> %s: [%p] done
<<<< APSyncHomeManagerLegacy >>>> %s: [%p] done-done
<<<< APSyncHomeManagerLegacy >>>> %s: [%p] changes = %s
<<<< APSyncHomeManagerLegacy >>>> %s: remaining home IDs = [%s]
<<<< APSyncHomeManagerLegacy >>>> %s: m_homekitLegacyIDs: removing home ID %s
<<<< APSyncHomeManagerLegacy >>>> %s: m_homekitSyncingIDs: removing home ID %s
<<<< APSyncHomeManagerLegacy >>>> %s: m_validIDs ==                   [%s]
<<<< APSyncHomeManagerLegacy >>>> %s: <APSyncMapping> new validIDs == [%s]
<<<< APSyncHomeManagerLegacy >>>> %s: <APSyncMapping> removedIDs == %s
<<<< APSyncHomeManagerLegacy >>>> %s: <APSyncMapping> addedIDs == %s
<<<< APSyncHomeManagerLegacy >>>> %s: [%p] setJsonValue-lambda
<<<< APSyncHomeManagerLegacy >>>> %s: <APSyncMapping> revalidating [%s]
<<<< APSyncHomeManagerLegacy >>>> %s: Error notifying IDs revalidated: %s
<<<< APSyncTreeManagerC >>>> %s: %s:m_scheduled_short %d
<<<< APSyncTreeManagerC >>>> %s: %s:connect(%s:%s)
<<<< APSyncTreeManagerC >>>> %s: home is %s and %s
<<<< APSyncTreeManagerC >>>> %s: cost is %d; %s=%s, %s=%s
<<<< APSyncTreeManagerC >>>> %s: %s:makeValidNodeList devices %s
<<<< APSyncTreeManagerC >>>> %s: %s:makeValidNodeList valid %s
<<<< APSyncTreeManagerC >>>> %s: %s:makeAllLinks %s
<<<< APSyncTreeManagerC >>>> %s: %s:compute waiting_links %s
<<<< APSyncTreeManagerC >>>> %s: %s:compute ready   links %s
<<<< APSyncTreeManagerC >>>> %s: %s:found(%s,%s)
<<<< APSyncTreeManagerC >>>> %s: %s:discovery_results %s
<<<< APSyncTreeManagerC >>>> %s: %s:setActive %s
<<<< APSyncTreeManagerC >>>> %s: %s:onChange %s
<<<< APSyncTreeManagerC >>>> %s: %s:onChange skip because !m_set_info(%d) || m_started(%d)!=true
<<<< APSyncTreeManagerC >>>> %s: %s:onChange skip because nothing new in home or nodes
<<<< APSyncTreeManagerC >>>> %s: %s:got _f != 0; bouncing it back
<<<< APSyncTreeManagerC >>>> %s: %s:onChangeWhileIdle scheduled=%d
<<<< APSyncTreeManagerC >>>> %s: %s:onChangeWhileDiscovery
<<<< APSyncTreeManagerC >>>> %s: %s:onChangeWhileDiscovery going IDLE
<<<< APSyncTreeManagerC >>>> %s: %s:onDiscoveryWhileDiscovery %s
<<<< APSyncTreeManagerC >>>> %s: <APSyncError> Node missing type/name fields: %s; skipping
<<<< APSyncTreeManagerC >>>> %s: %s:onDiscovery skipping %s because not in home
<<<< APSyncTreeManagerC >>>> %s: %s:m_discovery_results %s
<<<< APSyncTreeManagerC >>>> %s: %s:xx calling onJSONChange %s
<<<< APSyncTreeManagerC >>>> %s: %s:onRecheck
<<<< APSyncTreeManagerC >>>> %s: %s:onRecheck turning on DISCOVERY
<<<< APSyncTreeManagerC >>>> %s: %s:onTimeOut
<<<< APSyncTreeManagerC >>>> %s: <APSyncError> %s:onTimeout submitting %s
<<<< APSyncTreeManagerC >>>> %s: %s:onTimeout scheduleRecheck
<<<< APSyncTreeManagerC >>>> %s: %s:TreeManagerC::onFailure %s, %s, %lld
<<<< APSyncTreeManagerC >>>> %s: <APSyncError> Node missing type/name fields: '%s', '%s'; skipping
<<<< APSyncTreeManagerC >>>> %s: %s:TreeManagerC::onFailure private node case
<<<< APSyncTreeManagerC >>>> %s: TreeManagerC::fail json is '%s'
<<<< APSyncTreeManagerC >>>> %s: %s:scheduleRecheck when = %lld
<<<< APSyncTreeManagerC >>>> %s: %s:cancel recheck
<<<< APSyncTreeManagerC >>>> %s: %s:getStateChange, m_state_maybe_changed = %c
<<<< APSyncTreeManagerC >>>> %s: %s:scheduleRecheck skipping
<<<< APSyncPipeJson >>>> %s: [%p] PipeJson created, pipe = %p
<<<< APSyncPipeJson >>>> %s: [%p] host %s
<<<< APSyncPipeJson >>>> %s: [%p]
<<<< APSyncPipeJson >>>> %s: [%p] message = %s
<<<< APSyncPipeJson >>>> %s: <APSyncError> [%p] could not parse message '%s' as JSON: %s
<<<< APSyncPipeJson >>>> %s: [%p] state = %s
<<<< APSyncPipeJson >>>> %s: *** PipeJson missing on state change to %s
<<<< CRDTMergeGroupProposal >>>> %s: merge[%s] into [%s]
<<<< APSyncGroupProposal >>>> %s: [%p] Received GroupProposal, existingGroupID: %s, proposedGroupID: %s
<<<< APSyncGroupProposal >>>> %s: [%p] destructed
<<<< APSyncGroupProposal >>>> %s: [%p] path: %s
<<<< APSyncGroupProposal >>>> %s: [%p]: path ( '%s' ) not valid
<<<< APSyncGroupProposal >>>> %s: [%p]: not handling %s - wrong speaker (want %s, got %s)
<<<< APSyncGroupProposal >>>> %s: [%p]: Received group current
<<<< APSyncGroupProposal >>>> %s: GCur requestingSpeaker: '%s', proposedGroupID: '%s', existingGroupID: '%s', newGroupID: '%s'
<<<< APSyncGroupProposal >>>> %s: [%p]: signaling route added successfully
<<<< APSyncGroupProposal >>>> %s: [%p]: signaling route removed successfully
<<<< APSyncGroupProposal >>>> %s: [%p]: GroupCurrent notification unhandled
<<<< APSyncGroupProposal >>>> %s: [%p]: Received group proposal
<<<< APSyncGroupProposal >>>> %s: proposal: %s
<<<< APSyncGroupProposal >>>> %s: [%p]: proposal timeout set for: %lld milliseconds
<<<< APSyncGroupProposal >>>> %s: [%p] received callback failure state: %d, requestingSpeaker: %s
<<<< APSyncGroupProposal >>>> %s: <APSyncError> inContext is NULL
<<<< APSyncGroupProposal >>>> %s: Timer Fired, notifying [%p]
<<<< APSyncGroupProposal >>>> %s: [%p]: signaling route request timeout
<<<< APSyncGroupProposal >>>> %s: [%p]: payload ( %s )
<<<< APSyncController >>>> %s: ReceiverConnectionInfo destructing.
<<<< APSyncController >>>> %s: <APSyncError> exception - %s
<<<< APSyncController >>>> %s: <APSyncError> apsync exception - %s
<<<< APSyncController >>>> %s: APSyncController created: [%p]
<<<< APSyncController >>>> %s: Initializing APSyncController [%p]
<<<< APSyncController >>>> %s: [%p]
<<<< APSyncController >>>> %s: exception - %s
<<<< APSyncController >>>> %s: apsync exception - %s
<<<< APSyncController >>>> %s: [%p](%@, %@)
<<<< APSyncController >>>> %s: APSyncController [%p] finalizing
<<<< APSyncVolumeGroupAggregateBase >>>> %s: [%p] base group created
<<<< APSyncVolumeGroupAggregateBase >>>> %s: [%p]
<<<< APSyncVolumeGroupAggregateBase >>>> %s: [%p] container %p
<<<< APSyncVolumeGroupAggregateBase >>>> %s: [%p] already has container %p
<<<< APSyncVolumeGroupAggregateBase >>>> %s: [%p] adding container %p
<<<< APSyncVolumeGroupAggregateBase >>>> %s: [%p] removing container %p
<<<< APSyncVolumeGroupAggregateBase >>>> %s: [%p] could not find container %p
<<<< APSyncVolumeGroupAggregateBase >>>> %s: [%p] [%s](%s, %g, %s)
<<<< APSyncVolumeGroupAggregateBase >>>> %s: <APSyncError> Operation not suppoted in VolumeGroupAggregateBase!
<<<< APSyncControllerServer >>>> %s: Creating AirPlaySyncControllerServer
<<<< APSyncControllerServer >>>> %s: APSyncController obtained, result = %d
<<<< APSyncControllerServer >>>> %s: APSyncController initialized, result = %d
<<<< APSyncControllerServer >>>> %s: <APSyncError> Trying to create, but already created with error %d, result %p
<<<< APSyncControllerServer >>>> %s: Created APSyncControllerServer, result = %d
<<<< APSyncControllerServer >>>> %s: <APSyncError> Trying to copy, but not yet created
<<<< APSyncValidityManager >>>> %s: [%p]
<<<< APSyncValidityManager >>>> %s: [%p] (%s)
<<<< APSyncValidityManager >>>> %s: [%p] before: %s
<<<< APSyncValidityManager >>>> %s: [%p] after:  %s
<<<< APSyncValidityManager >>>> %s: <APSyncError> Path has no parent: %s; ignoring
<<<< APSyncValidityManager >>>> %s: [%p] (%s) done
<<<< APSyncPipe >>>> %s: [%p] Pipe created
<<<< APSyncPipe >>>> %s: [%p] Pipe destroyed
<<<< APSyncPipeManager >>>> %s: <APSyncError> called ~PipeManager without calling stop()
<<<< APSyncPipeManager >>>> %s: <APSyncError> called ~PipeManager with %lu+%lu pipes remaining
<<<< APSyncPipeManager >>>> %s: %s:called isStopped(stopping=%d,unnamed=%lu,named=%lu)
<<<< APSyncPipeManager >>>> %s: dump = %s
<<<< APSyncPipeManager >>>> %s: %s:start()
<<<< APSyncPipeManager >>>> %s: %s:slow_message_threshold_ms %d
<<<< APSyncPipeManager >>>> %s: addPipeFactory(%s,...)
<<<< APSyncPipeManager >>>> %s: <APSyncError> got onAccept when stopping 
<<<< APSyncPipeManager >>>> %s: %s:setActivePipes(%s)
<<<< APSyncPipeManager >>>> %s: %s:adding m_named_pipes[%s](%p) m_state == %s
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::reportSlow(%lld,%d)
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::message: "%s"
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::ignoring
<<<< APSyncPipeManager >>>> %s: <APSyncError> %s:PipeManager::error - waiting_connect, got message %s
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::got __close=true from receiver; closing pipe
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::got ping %d
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::got pong %d
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::forwarding
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::did not get yes; closing
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::got yes; retries=2 going to READY
<<<< APSyncPipeManager >>>> %s: <APSyncError> %s:PipeManager::reject incoming because no name
<<<< APSyncPipeManager >>>> %s: <APSyncError> %s:#pipe drop-incoming-noname %s
<<<< APSyncPipeManager >>>> %s: setting private to %d
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::existing pipes are
<<<< APSyncPipeManager >>>> %s: %s:#pipe drop-incoming %s
<<<< APSyncPipeManager >>>> %s: %s:#pipe drop-outgoing %s
<<<< APSyncPipeManager >>>> %s: %s:PipeManager new connection %s
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::send "accept:yes" '%s'
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::%s %p "%s" %s %s
<<<< APSyncPipeManager >>>> %s: %s:PipeManager moving pipe %s[%p] from named to unnamed
<<<< APSyncPipeManager >>>> %s: <APSyncError> %s: couldn't find pipe %s to move to unnamed
<<<< APSyncPipeManager >>>> %s: %s:PipeManager moving pipe %s[%p] from unnamed to named
<<<< APSyncPipeManager >>>> %s: %s:PipeManager closed connection %s
<<<< APSyncPipeManager >>>> %s: %s:PipeManager sending close to sender (instead of closing) %s
<<<< APSyncPipeManager >>>> %s: <APSyncError> %s:PipeManager::closePipe called on DEAD or INCOMING pipe %s
<<<< APSyncPipeManager >>>> %s: <APSyncError> %s:PipeManager Error: couldn't find unnamed pipestate[%p]
<<<< APSyncPipeManager >>>> %s: <APSyncError> %s:PipeManager Error: couldn't find named pipestate[%p,%s]
<<<< APSyncPipeManager >>>> %s: %s:PipeManager sending %s
<<<< APSyncPipeManager >>>> %s: <APSyncError> %s:PipeManager::%s %p "%s" %s retry_number %d
<<<< APSyncPipeManager >>>> %s: %s:PipeManager [%p] erasing named pipe [%p]%s xxx
<<<< APSyncPipeManager >>>> %s: %s:PipeManager [%p] calling onFailure2
<<<< APSyncPipeManager >>>> %s: %s:#pipe failed2   %s
<<<< APSyncPipeManager >>>> %s: %s:PipeManager [%p] erasing named pipe2 [%p]%s xxx
<<<< APSyncPipeManager >>>> %s: %s:PipeManager [%p] calling onFailure
<<<< APSyncPipeManager >>>> %s: %s:#pipe failed   %s
<<<< APSyncPipeManager >>>> %s: %s:PipeManager [%p] erasing unnamed pipe %p
<<<< APSyncPipeManager >>>> %s: %s:PipeManager calling onStop
<<<< APSyncPipeManager >>>> %s: <APSyncError> %s:PipeManager [%p] got onClose while WAITING_RETRY (bad)
<<<< APSyncPipeManager >>>> %s: %s:onRetry(%d)
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::onRetry(%p,"%s"), retry number %d
<<<< APSyncPipeManager >>>> %s: %s:stop()
<<<< APSyncPipeManager >>>> %s: <APSyncError> m_named_pipes not empty after stop()
<<<< APSyncPipeManager >>>> %s: %s:onCloseUnUsedPipes()
<<<< APSyncPipeManager >>>> %s: %s:state:%s
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::%s %p "%s" %s retry_number %d
<<<< APSyncPipeManager >>>> %s: PipeManager::onCloseUnusedPipes::delete pipe
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::send(%p,"%s")
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::send_all(except %p,"%s")
<<<< APSyncPipeManager >>>> %s: %s:called ping(%d,%s,%s)
<<<< APSyncPipeManager >>>> %s: <APSyncError> %s:ping couldn't find pipe %s or pipe not READY
<<<< APSyncPipeManager >>>> %s: %s:PipeManager::ManagerpipeState[%p] created
<<<< APSyncPipeManager >>>> %s: %s:#pipe opened   %s
<<<< APSyncPipeManager >>>> %s: %s:#pipe closed   %s
<<<< APSyncPipeManager >>>> %s: %s:#pipe connect  %s
<<<< APSyncOSUtil >>>> %s: Not adding %s; already found
<<<< APSyncOSUtil >>>> %s: State dump called for %@
<<<< APSyncOSUtil >>>> %s: Dump to long (%zu > %d); printing here for %@
<<<< APSyncOSUtil >>>> %s: Dump still to long/empty (%lu > %d); printing here for %@
<<<< APSyncOSUtil >>>> %s: %s%s+
<<<< APSyncOSUtil >>>> %s: %s%s
<<<< APSyncOSUtil >>>> %s: Returning data of length %u
<<<< APSyncOSUtil >>>> %s: Returning [%p]
<<<< APSyncOSUtil >>>> %s: Adding %s: handle %llu
<<<< APSyncOSUtil >>>> %s: Removed entry for '%s': %llu
<<<< APSyncOSUtil >>>> %s: Couldn't find entry for '%s'
<<<< APSyncVolumeGroupHomeBase >>>> %s: [%p] base group created
<<<< APSyncVolumeGroupHomeBase >>>> %s: [%p]
<<<< APSyncVolumeGroupHomeBase >>>> %s: [%p] [%s](%s, %g, %s)
<<<< APSyncVolumeGroupHomeBase >>>> %s: [%p] [%s](%s) - speaker ID not found; creating new entry
NSt3__120__shared_ptr_emplaceIN6apsync15VolumeUXManagerENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6apsync15VolumeUXManager15scheduleCleanupERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEExE3$_0NS7_ISC_EEFvvEEE
ZN6apsync15VolumeUXManager15scheduleCleanupERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEExE3$_0
N6apsync4crdt12Merge_VolumeE
0123456789abcdef
N6apsync22VolumeManagerAggregateE
N6apsync19VolumeGroupListenerE
NSt3__123enable_shared_from_thisIN6apsync22VolumeManagerAggregateEEE
NSt3__120__shared_ptr_emplaceIN6apsync22VolumeManagerAggregateENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6apsync22VolumeManagerAggregate15setAllFromGroupEPKNS2_18VolumeGroupCachingEE3$_0NS_9allocatorIS7_EEFbPNS2_27VolumeGroupHandlerContainerES6_EEE
NSt3__110__function6__baseIFbPN6apsync27VolumeGroupHandlerContainerEPKNS2_18VolumeGroupCachingEEEE
ZN6apsync22VolumeManagerAggregate15setAllFromGroupEPKNS_18VolumeGroupCachingEE3$_0
NSt3__110__function6__funcIZN6apsync22VolumeManagerAggregate15setOneFromGroupERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKNS2_18VolumeGroupCachingEE3$_1NS7_ISF_EEFbPNS2_27VolumeGroupHandlerContainerESE_EEE
ZN6apsync22VolumeManagerAggregate15setOneFromGroupERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKNS_18VolumeGroupCachingEE3$_1
NSt3__110__function6__funcIZN6apsync22VolumeManagerAggregate21notifyUXVolumeChangedEPKNS2_18VolumeGroupCachingERKNS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENSB_ISD_EEEEE3$_2NSB_ISI_EEFbPNS2_27VolumeGroupHandlerContainerES6_EEE
ZN6apsync22VolumeManagerAggregate21notifyUXVolumeChangedEPKNS_18VolumeGroupCachingERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEE3$_2
N6apsync27VolumeGroupAggregateCachingE
N6apsync18VolumeGroupCachingE
N6apsync11VolumeGroupE
NSt3__110__function6__funcIZN6apsync27VolumeGroupAggregateCaching22makeCachingVolumeGroupEPKNS2_24VolumeGroupAggregateBaseERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_0NSA_ISF_EEFbPNS2_27VolumeGroupHandlerContainerEEEE
NSt3__110__function6__baseIFbPN6apsync27VolumeGroupHandlerContainerEEEE
ZN6apsync27VolumeGroupAggregateCaching22makeCachingVolumeGroupEPKNS_24VolumeGroupAggregateBaseERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEE3$_0
NSt3__120__shared_ptr_emplaceIN6apsync27VolumeGroupAggregateCachingENS_9allocatorIS2_EEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N6apsync4crdt10Merge_CopyE
N6apsync11HomeManagerE
N6apsync27VolumeGroupHandlerContainerE
NSt3__123enable_shared_from_thisIN6apsync11HomeManagerEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt9Merge_LWWENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt12Merge_VolumeENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt19Merge_GroupProposalENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN6apsync11HomeManagerC1ERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_E3$_0NS7_ISC_EEFS9_vEEE
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEvEEE
ZN6apsync11HomeManagerC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_E3$_0
NSt3__110__function6__funcIZN6apsync11HomeManager17notifyJsonChangesERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSB_NS4_14adl_serializerEEESH_SH_E3$_1NSB_ISI_EEFbRKNS2_4crdt17SimpleJsonPointerESH_EEE
NSt3__110__function6__baseIFbRKN6apsync4crdt17SimpleJsonPointerERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSE_NS7_14adl_serializerEEEEEE
ZN6apsync11HomeManager17notifyJsonChangesERKN8nlohmann10basic_jsonINSt3__13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbxydS9_NS1_14adl_serializerEEESF_SF_E3$_1
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__110__function6__funcIZN6apsync4crdt5Merge8fill_idsERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSC_NS5_14adl_serializerEEERNS_3setISE_NS_4lessISE_EENSC_ISE_EEEEE3$_0NSC_ISP_EEFbRKNS3_17SimpleJsonPointerESI_EEE
ZN6apsync4crdt5Merge8fill_idsERKN8nlohmann10basic_jsonINSt3__13mapENS4_6vectorENS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbxydSA_NS2_14adl_serializerEEERNS4_3setISC_NS4_4lessISC_EENSA_ISC_EEEEE3$_0
NSt3__110__function6__funcIZN6apsync4crdt5Merge16recurse_nagle_msERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSC_NS5_14adl_serializerEEEE3$_1NSC_ISJ_EEFbRKNS3_17SimpleJsonPointerESI_EEE
ZN6apsync4crdt5Merge16recurse_nagle_msERKN8nlohmann10basic_jsonINSt3__13mapENS4_6vectorENS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbxydSA_NS2_14adl_serializerEEEE3$_1
NSt3__110__function6__funcIZN6apsync4crdt5Merge5mergeERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSC_NS5_14adl_serializerEEERSG_PSG_SK_RKSE_E3$_2NSC_ISN_EEFbRKNS3_17SimpleJsonPointerESI_EEE
ZN6apsync4crdt5Merge5mergeERKN8nlohmann10basic_jsonINSt3__13mapENS4_6vectorENS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEbxydSA_NS2_14adl_serializerEEERSE_PSE_SI_RKSC_E3$_2
N6apsync4crdt14Merge_AnnounceE
N6apsync18HomeManagerSyncingE
N6apsync4Node8DelegateE
NSt3__120__shared_ptr_emplaceIN6apsync18HomeManagerSyncingENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt10Merge_CopyENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN6apsync18HomeManagerSyncing21notifyHijackIDChangedERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_E3$_0NS7_ISC_EEFvvEEE
ZN6apsync18HomeManagerSyncing21notifyHijackIDChangedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_E3$_0
NSt3__110__function6__funcIZN6apsync18HomeManagerSyncing13revalidateIDsERKNS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS8_ISA_EEEEE3$_2NS8_ISF_EEFvvEEE
ZN6apsync18HomeManagerSyncing13revalidateIDsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEE3$_2
N6apsync9ExceptionE
N6apsync4crdt11Merge_NodesE
N6apsync4crdt15Merge_Multi_LWWE
29APSyncControllerSimulatorImpl
20APSyncControllerImpl
N6apsync12PipeScheduleE
NSt3__120__shared_ptr_emplaceIN6apsync12PipeScheduleENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6apsync12PipeSchedule8scheduleEvE3$_1NS_9allocatorIS4_EEFvvEEE
NSt3__110__function6__baseIFvvEEE
ZN6apsync12PipeSchedule8scheduleEvE3$_1
CN6apsync14SpeakerManagerE
N6apsync18VolumeGroupHandlerE
NSt3__120__shared_ptr_emplaceIN6apsync13GroupProposalENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6apsync14SpeakerManager25setSpeakerGroupIDProposalERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_SB_RKN8nlohmann10basic_jsonINS_3mapENS_6vectorES9_bxydS7_NSC_14adl_serializerEEExNS2_4crdt19Merge_GroupProposal5StateEE3$_0NS7_ISN_EEFvPNS2_13GroupProposalEEEE
NSt3__110__function6__baseIFvPN6apsync13GroupProposalEEEE
ZN6apsync14SpeakerManager25setSpeakerGroupIDProposalERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_RKN8nlohmann10basic_jsonINS1_3mapENS1_6vectorES7_bxydS5_NSA_14adl_serializerEEExNS_4crdt19Merge_GroupProposal5StateEE3$_0
NSt3__110__function6__funcIZN6apsync14SpeakerManager15setAllFromGroupEPKNS2_18VolumeGroupCachingEE3$_1NS_9allocatorIS7_EEFvRKNS_12basic_stringIcNS_11char_traitsIcEENS8_IcEEEEdbbEEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEdbbEEE
ZN6apsync14SpeakerManager15setAllFromGroupEPKNS_18VolumeGroupCachingEE3$_1
NSt3__110__function6__funcIZN6apsync14SpeakerManager16notifyJsonChangeERKNS2_4crdt17SimpleJsonPointerERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSF_NS8_14adl_serializerEEESL_E3$_2NSF_ISM_EEFNS3_17InitialVolumeInfoEvEEE
NSt3__110__function6__baseIFN6apsync14SpeakerManager17InitialVolumeInfoEvEEE
ZN6apsync14SpeakerManager16notifyJsonChangeERKNS_4crdt17SimpleJsonPointerERKN8nlohmann10basic_jsonINSt3__13mapENS7_6vectorENS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEbxydSD_NS5_14adl_serializerEEESJ_E3$_2
NSt3__110__function6__funcIZN6apsync14SpeakerManager16notifyJsonChangeERKNS2_4crdt17SimpleJsonPointerERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSF_NS8_14adl_serializerEEESL_E3$_3NSF_ISM_EEFvRKSH_EEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
ZN6apsync14SpeakerManager16notifyJsonChangeERKNS_4crdt17SimpleJsonPointerERKN8nlohmann10basic_jsonINSt3__13mapENS7_6vectorENS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEbxydSD_NS5_14adl_serializerEEESJ_E3$_3
NSt3__110__function6__funcIZN6apsync14SpeakerManager20notifyIDsRevalidatedERKNS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS8_ISA_EEEEE3$_4NS8_ISF_EEFNS3_17InitialVolumeInfoEvEEE
ZN6apsync14SpeakerManager20notifyIDsRevalidatedERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEE3$_4
N6apsync12GroupManagerE
N6apsync18JsonChangeListenerE
N6apsync4crdt9Merge_LWWE
N6apsync4NodeE
N6apsync11PipeManager8DelegateE
N6apsync11TreeManager8DelegateE
N6apsync10PipeServer8DelegateE
N6apsync8PipeJSON8LogEventE
N6apsync6Locker8DelegateE
N6apsync9SchedulerE
NSt3__123enable_shared_from_thisIN6apsync4NodeEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt14Merge_AnnounceENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN6apsync4Node14addPipeFactoryERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_8functionIFNS_10shared_ptrINS2_4PipeEEEvEEEE3$_1NS7_ISI_EEFNSD_INS2_8PipeJSONEEEvEEE
NSt3__110__function6__baseIFNS_10shared_ptrIN6apsync8PipeJSONEEEvEEE
ZN6apsync4Node14addPipeFactoryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8functionIFNS1_10shared_ptrINS_4PipeEEEvEEEE3$_1
N6apsync13DeviceManagerE
N6apsync22VolumeGroupHomeCachingE
NSt3__120__shared_ptr_emplaceIN6apsync22VolumeGroupHomeCachingENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6apsync22VolumeGroupHomeCaching11copyBaseMapERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_0NS7_ISC_EEFvSB_dbbEEE
ZN6apsync22VolumeGroupHomeCaching11copyBaseMapERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE3$_0
N6apsync16StateManagerImplE
N6apsync4crdt9TimeStampE
N6apsync18HomeManagerSyncing17HomeStateListenerE
NSt3__120__shared_ptr_emplaceINS_4pairIPKvPFvS3_S3_S3_EEENS_9allocatorIS6_EEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN6apsync15GeneralListenerENS_9allocatorIS2_EEEE
N6apsync15GeneralListenerE
N6apsync19NotificationManager8ListenerE
NSt3__120__shared_ptr_emplaceIN6apsync30FilteringSpeakerChangeListenerENS_9allocatorIS2_EEEE
N6apsync30FilteringSpeakerChangeListenerE
N6apsync21SpeakerChangeListenerE
NSt3__110__function6__funcIZN6apsync16StateManagerImplC1EvE3$_3NS_9allocatorIS4_EEFNS_12basic_stringIcNS_11char_traitsIcEENS5_IcEEEEvEEE
ZN6apsync16StateManagerImplC1EvE3$_3
NSt3__120__shared_ptr_emplaceIN6apsync21SpeakerChangeListenerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6apsync23SetSpeakerGroupListenerENS_9allocatorIS2_EEEE
N6apsync23SetSpeakerGroupListenerE
NSt3__110__function6__funcIZN6apsync16StateManagerImpl24createHomeManagerSyncingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_E3$_4NS7_ISC_EEFNS_10shared_ptrINS2_4PipeEEEvEEE
NSt3__110__function6__baseIFNS_10shared_ptrIN6apsync4PipeEEEvEEE
NSt3__120__shared_ptr_emplaceIN6apsync16SocketConnectionENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZZN6apsync16StateManagerImpl24createHomeManagerSyncingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESB_ENK3$_4clEvEUlSB_E_NS7_ISD_EEFNS_4pairIS9_iEESB_EEE
NSt3__110__function6__baseIFNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEERKS8_EEE
ZZN6apsync16StateManagerImpl24createHomeManagerSyncingERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_ENK3$_4clEvEUlS9_E_
ZN6apsync16StateManagerImpl24createHomeManagerSyncingERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_E3$_4
NSt3__120__shared_ptr_emplaceIN6apsync19ItemIDCacheListenerENS_9allocatorIS2_EEEE
N6apsync19ItemIDCacheListenerE
NSt3__110__function6__funcIZN6apsync16StateManagerImpl13onStateChangeEPNS2_11HomeManagerEiRKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSD_NS6_14adl_serializerEEEE3$_5NSD_ISK_EEFvvEEE
ZN6apsync16StateManagerImpl13onStateChangeEPNS_11HomeManagerEiRKN8nlohmann10basic_jsonINSt3__13mapENS5_6vectorENS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbxydSB_NS3_14adl_serializerEEEE3$_5
NSt3__110__function6__funcIZN6apsync16StateManagerImpl10onNodeStopEPNS2_11HomeManagerEE3$_6NS_9allocatorIS6_EEFvvEEE
ZN6apsync16StateManagerImpl10onNodeStopEPNS_11HomeManagerEE3$_6
NSt3__110__function6__funcIZN6apsync16StateManagerImpl28notifySpeakerGroupingChangedEPNS2_11HomeManagerERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESD_RKN8nlohmann10basic_jsonINS_3mapENS_6vectorESB_bxydS9_NSE_14adl_serializerEEEE3$_7NS9_ISM_EEFvvEEE
ZN6apsync16StateManagerImpl28notifySpeakerGroupingChangedEPNS_11HomeManagerERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_RKN8nlohmann10basic_jsonINS3_3mapENS3_6vectorES9_bxydS7_NSC_14adl_serializerEEEE3$_7
NSt3__110__function6__funcIZN6apsync16StateManagerImpl29checkShouldDumpForDuplicateIDEvE3$_8NS_9allocatorIS4_EEFvvEEE
ZN6apsync16StateManagerImpl29checkShouldDumpForDuplicateIDEvE3$_8
N6apsync16SocketConnectionE
NSt3__110__function6__funcIZN6apsync16SocketConnection7connectERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_8functionIFviEEEE3$_2NS7_ISF_EEFbvEEE
NSt3__110__function6__baseIFbvEEE
ZN6apsync16SocketConnection7connectERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8functionIFviEEEE3$_2
NSt3__110__function6__funcIZN6apsync16SocketConnection13handleConnectEiE3$_3NS_9allocatorIS4_EEFbvEEE
ZN6apsync16SocketConnection13handleConnectEiE3$_3
NSt3__110__function6__funcIZN6apsync16SocketConnection9runClientEvE3$_5NS_9allocatorIS4_EEFbvEEE
ZN6apsync16SocketConnection9runClientEvE3$_5
NSt3__120__shared_ptr_pointerIP8sockaddrNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI8sockaddrEE
NSt3__110__function6__funcIZN6apsync16SocketConnection12retryConnectEiNS_10shared_ptrI8sockaddrEEjjE3$_6NS_9allocatorIS7_EEFbvEEE
ZN6apsync16SocketConnection12retryConnectEiNSt3__110shared_ptrI8sockaddrEEjjE3$_6
NSt3__110__function6__funcIZN6apsync16SocketConnection12retryConnectEiNS_10shared_ptrI8sockaddrEEjjE3$_7NS_9allocatorIS7_EEFvvEEE
NSt3__110__function6__funcIZZN6apsync16SocketConnection12retryConnectEiNS_10shared_ptrI8sockaddrEEjjENK3$_7clEvEUlvE_NS_9allocatorIS8_EEFbvEEE
ZZN6apsync16SocketConnection12retryConnectEiNSt3__110shared_ptrI8sockaddrEEjjENK3$_7clEvEUlvE_
NSt3__110__function6__funcIZZN6apsync16SocketConnection12retryConnectEiNS_10shared_ptrI8sockaddrEEjjENK3$_7clEvEUlvE0_NS_9allocatorIS8_EEFbvEEE
ZZN6apsync16SocketConnection12retryConnectEiNSt3__110shared_ptrI8sockaddrEEjjENK3$_7clEvEUlvE0_
ZN6apsync16SocketConnection12retryConnectEiNSt3__110shared_ptrI8sockaddrEEjjE3$_7
N6apsync4crdt15Merge_AlgorithmE
N6apsync4crdt10Merge_HomeE
NSt3__120__shared_ptr_emplaceIN6apsync19NotificationManagerENS_9allocatorIS2_EEEE
N6apsync11TreeManagerE
NSt3__123enable_shared_from_thisIN6apsync11TreeManagerEEE
N6apsync17HomeManagerLegacyE
NSt3__120__shared_ptr_emplaceIN6apsync17HomeManagerLegacyENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6apsync17HomeManagerLegacy21notifyChangedValidIDsERKNS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS8_ISA_EEEESE_E3$_3NS8_ISF_EEFvvEEE
ZN6apsync17HomeManagerLegacy21notifyChangedValidIDsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESC_E3$_3
N6apsync12TreeManagerCE
NSt3__120__shared_ptr_emplaceIN6apsync12TreeManagerCENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt11Merge_NodesENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6apsync4crdt10Merge_HomeENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN6apsync12TreeManagerC8onChangeERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSB_NS4_14adl_serializerEEESH_E3$_1NSB_ISI_EEFvvEEE
ZN6apsync12TreeManagerC8onChangeERKN8nlohmann10basic_jsonINSt3__13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbxydS9_NS1_14adl_serializerEEESF_E3$_1
NSt3__110__function6__funcIZN6apsync12TreeManagerC9onRecheckEvE3$_2NS_9allocatorIS4_EEFvvEEE
ZN6apsync12TreeManagerC9onRecheckEvE3$_2
NSt3__110__function6__funcIZN6apsync12TreeManagerC15scheduleRecheckENS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEE3$_3NS_9allocatorIS9_EEFvvEEE
ZN6apsync12TreeManagerC15scheduleRecheckENSt3__16chrono8durationIxNS1_5ratioILl1ELl1000EEEEEE3$_3
N6apsync8PipeJSONE
N6apsync12PipeDelegateE
NSt3__123enable_shared_from_thisIN6apsync8PipeJSONEEE
NSt3__117bad_function_callE
NSt3__110__function6__funcIZN6apsync8PipeJSON9onMessageERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_1NS7_ISC_EEFvvEEE
ZN6apsync8PipeJSON9onMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE3$_1
NSt3__110__function6__funcIZN6apsync8PipeJSON8onChangeENS2_4Pipe5StateEE3$_2NS_9allocatorIS6_EEFvvEEE
ZN6apsync8PipeJSON8onChangeENS_4Pipe5StateEE3$_2
N6apsync4crdt19Merge_GroupProposalE
N6apsync13GroupProposalE
N6apsync24VolumeGroupAggregateBaseE
NSt3__120__shared_ptr_emplaceIN6apsync24VolumeGroupAggregateBaseENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZL41APSyncController_ServerCopySharedInternalbPP22OpaqueAPSyncControllerE3$_0NS_9allocatorIS5_EEFP20APSyncControllerImplS3_EEE
NSt3__110__function6__baseIFP20APSyncControllerImplP22OpaqueAPSyncControllerEEE
ZL41APSyncController_ServerCopySharedInternalbPP22OpaqueAPSyncControllerE3$_0
N6apsync15ValidityManagerE
N6apsync17DispatchSchedulerE
NSt3__123enable_shared_from_thisIN6apsync17DispatchSchedulerEEE
NSt3__120__shared_ptr_emplaceIN6apsync17DispatchSchedulerENS_9allocatorIS2_EEEE
N6apsync4PipeE
N6apsync11PipeManager16ManagerPipeStateE
N6apsync8PipeJSON8DelegateE
NSt3__110__function6__funcIZN6apsync11PipeManager14setActivePipesERKN8nlohmann10basic_jsonINS_3mapENS_6vectorENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEbxydSB_NS4_14adl_serializerEEEE3$_1NSB_ISI_EEFviEEE
NSt3__110__function6__baseIFviEEE
ZN6apsync11PipeManager14setActivePipesERKN8nlohmann10basic_jsonINSt3__13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbxydS9_NS1_14adl_serializerEEEE3$_1
NSt3__110__function6__funcIZN6apsync11PipeManager13scheduleRetryEPNS3_16ManagerPipeStateEE3$_3NS_9allocatorIS6_EEFvvEEE
ZN6apsync11PipeManager13scheduleRetryEPNS0_16ManagerPipeStateEE3$_3
NSt3__110__function6__funcIZN6apsync11PipeManager7onRetryEiE3$_4NS_9allocatorIS4_EEFviEEE
ZN6apsync11PipeManager7onRetryEiE3$_4
NSt3__110__function6__funcIZN6apsync11PipeManager18onCloseUnusedPipesEvE3$_5NS_9allocatorIS4_EEFvvEEE
ZN6apsync11PipeManager18onCloseUnusedPipesEvE3$_5
UUUUUU
?N6apsync19VolumeGroupHomeBaseE
NSt3__120__shared_ptr_emplaceIN6apsync19VolumeGroupHomeBaseENS_9allocatorIS2_EEEE
