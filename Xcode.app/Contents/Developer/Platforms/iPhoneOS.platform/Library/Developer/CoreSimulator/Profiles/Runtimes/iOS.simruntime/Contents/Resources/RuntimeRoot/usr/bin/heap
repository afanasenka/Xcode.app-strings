@(#)PROGRAM:heap  PROJECT:SamplingTools-64541.4.1
.memgraph
%s[%d]: [fatal] unable to read input graph: %s
Command args:    %@
Target process:  %@ [%u]
Parent process:  %@ [%u]
Target process of memgraph:  %@ [%u]
%s[%d]: Unable to deallocate target task port: %d (%s)
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
launchd
coresymbolicationd
coreservicesd
UserEventAgent
rpc.lockd
launchservicesd
Activity Monitor
mdworker
spindump_agent
WindowServer
hidd
bluetoothd
logd
loginwindow
usbd
TouchBarServer
sysdiagnose
coreaudiod
kextd
notifyd
powerd
ReportCrash
ReportMemoryException
ReportPanic
watchdogd
cfprefsd
Process exists but has not started -- it is launched-suspended
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
DT_FORCE_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
%s[%d]: respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but the analysis process does not match the SDK variant of the target process %d.
Analysis of malloc zones may fail.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
DYLD_FORCE_PLATFORM
x86_64
i386
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
__check_mach_ports_lookup
__check_parent_tool_v1
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal]  child process status could not be determined; exit code unavailable.
v8@?0
v20@?0I8I12I16
v12@?0I8
i24@?0r^v8r^v16
%s-%d-%s
/tmp/%s-allProcesses[%d].XXXXXX
%s[%d]: [fatal] Couldn't create output directory from template %s, exiting
%s[%d]: [fatal] Couldn't change directory to %s
stderr.txt
Couldn't create error file stderr.txt (%s)
Couldn't replace stderr file with stderr.txt (%s)
Writing output files into %s
Skipping process of wrong architecture:  %d %s
%5d: %s
.txt
Couldn't open output file %s (%s)
Couldn't replace output file with %s (%s)
generate corpse in analyzeAllProcesses()
Exception '%s', reason: '%s'
v16@?0i8I12
v40@?0i8r*12B20I24I28^B32
Wrote output files into %s
To print all files in pid order use:  (cd %s; cat `/bin/ls -tr1 *.txt`) 
%s[%d]: [fatal] 'pid_for_task' failed: %s (%d)
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
Target process is using %s so not generating corpse for better performance.
Failed to generate corpse from the process: %d (%s)
%s[%d]: [fatal] %s, exiting
%s[%d]: %s
%s[%d]: [fatal] Corpse generated for the process is incomplete, which can happen with processes that use a lot of memory
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
v24@?0{_CSTypeRef=QQ}8
%s/usr/bin/%s
v20@?0I8@?<v@?>12
_.([@
error in %@ <classes> pattern '%@' - cannot match the start of a class name
error in %@ <classes> pattern '%@' - no starting bracket [: %s
malloc
non-object
error in %@ <classes> pattern '%@': %s
Region
Thread
.*%@
%@.*
error in % <region-description> pattern '%@': %s
malloc size pattern '%@' was not of expected format '[size]' or '[lowerSizeBound-upperSizeBound]'
error in malloc size pattern '%@':  if upper bound of size is given, it must be %llu or more
error in malloc size pattern '%@': lower bound of size (%llu) should be <= upper bound of size (%llu)
error in malloc size pattern '%@':  size must be %llu or more
error in malloc size pattern '%@':  size must be a multiple of %llu, or a range like '[lowerSizeBound-upperSizeBound]'
%s[%d]: [fatal] %s
-[VMUClassPatternMatcher matchesNodeDetails:orNodeDescription:]
VMUClassPatternMatcher.m
malloc size lower bound (%llu) expected to be <= upper bound (%llu)
matchingKindOfClass
TB,N,GisMatchingKindOfClass
com.apple.dt.instruments
TB,N,V_guessNonObjects
TB,N,V_sumObjectFields
TB,N,V_showSizes
showRawClassNames
TB,N,V_showRawClassNames
TB,N,V_showInternalFragmentation
showShortenedOutput
TB,N,V_showShortenedOutput
showPaths
TB,N,V_showPaths
quietMode
TB,N,V_quietMode
classesPatternMatcher
T@"VMUClassPatternMatcher",&,N,V_classesPatternMatcher
layoutPatternMatcher
T@"VMUClassPatternMatcher",&,N,V_layoutPatternMatcher
classFilterPatternMatcher
T@"VMUClassPatternMatcher",&,N,V_classFilterPatternMatcher
classesPattern
T@"NSString",&,N,V_classesPattern
separateByZone
TB,N,V_separateByZone
showZoneSummaries
TB,N,V_showZoneSummaries
onlyShowAddresses
TB,N,V_onlyShowAddresses
objectContentLevel
TI,N,V_objectContentLevel
debugTimer
T@"VMUDebugTimer",&,N,V_debugTimer
[-sz] [--showSizes] [--noContent] [--addresses=all|<classes-pattern>] <process | memory-graph-file>
<classes-pattern> can be followed by a malloc size specification of the form
[size] or [lowerBound-upperBound], such as 'malloc[1024]' or 'CFData[16k-]'
help
sortBySize
sort output by total size of class instances, rather than by count
zones
show output per-zone instead of an aggregated summary of all zones
kindOfClass
kindOfClass-pattern
filter objects for kind of class (class or superclass matching pattern)
v24@?0@"NSString"8^@16
--kindOfClass option can only be specified once
--kindOfClass
addresses
all|classes-pattern
prints the addresses of matching objects found on the heap in ascending address order
--addresses option can only be specified once
only
--addresses
forkCorpse
generate a corpse fork from process and run heap on it
guessNonObjects
try to identify non-object malloc nodes which are referenced by fields of other objects
layouts
show the object layout for types matching the specified pattern
--layouts option can only be specified once
--layouts
noContent
do not show object content in --addresses mode
readonlyContent
in --addresses mode, only show content backed by readonly memory
showSizes
show distribution of each malloc size for each object, instead of summing and averaging
sumObjectFields
accumulate those fields into the entry for that object
quiet
suppress the process description header
rawNames
show raw class names instead of display names
showInternalFragmentation
print class layouts that have wasted space in allocated instances due to alignment
getCorpseFromParent
noScanOverlay
DT_NO_SCAN_OVERLAY
showTiming
initialization
metadata
print only the contents of metadata allocations, like 'Swift Metadata'
allProcesses
minimumPid
run heap against all processes (or those >= minimumPid), with the given arguments
shortenedOutput
print fewer characters by using tabs instead of spaces (for ExcResource reports)
paths
for debugging, show binary paths rather than just names
unknown argument: %@
no process id or name specified
only one of --noContent or --readonlyContent can be specified
reading/deserializing graph from file
%s[%d]: [fatal] mach port for process %d not valid
%s[%d]: [fatal] process %d has not started
generate corpse
gathering malloc block information for all zones
adding root nodes from task
adding malloc nodes from task
Process %d is not debuggable. Due to security restrictions, heap can only show contents of readonly memory of restricted processes.
unable to introspect malloc zones to get allocation information
%s[%d]: %s
%s[%d]: [fatal] %s
counting allocations
printHeap_block_invoke
/Library/Caches/com.apple.xbs/Sources/SamplingTools_Sim/SamplingTools-64541.4.1/heap/heap.m
Invalid zone index for block [%#llx-%#llx]: %d
region->zone_index < zoneCount
v24@?0@"VMUVMRegion"8^B16
enumerating references for guessNonObjects
Storage)
[%llu]
v68@?0I8I12I16{?=^{?}{?=QIQ}^{?}}20^B60
printing zone summary info
Process %d: %u zone%s
Zone %s: Overall size: %quKB
; %u nodes malloced for %quKB (%qu%% of capacity); largest unused: [%#llx-%lldKB]
All zones: %u nodes malloced - %quKB
Zone %s: %u nodes
 - Sizes: 
All zones: %u nodes malloced - Sizes: 
v36@?0Q8@"VMUClassInfo"16I24^B28
Found %u ObjC classes
Found %u Swift classes
Found %u CFTypes
Shouldn't need to create new delta bucket to decrement size %ld
MapIncrWithCount
delta > 0
v32@?0@"VMUFieldInfo"8Q16^B24
%gKB[%lu] 
%lu[%lu] 
Zone %s: %u nodes (%llu bytes) 
All zones: %u nodes (%llu bytes) 
Active blocks in Zone %s that match pattern '%s':
Active blocks in all zones that match pattern '%s':
%#qx
%#qx: %s (%qd bytes)
v52@?0I8{?=Qb60b4@}12@"VMUVMRegion"36^B44
q24@?0@"VMUClassInfo"8@"VMUClassInfo"16
%s -- %s wasted due to alignment (%u bytes * %lu instance%s)
printClassInfo
%8lu  %9lu  %8.1f   
(strlen(buf) + classNameWidth) == defaultTabWidth * 10
%-*s  %-*s  %s
  %-*s  %s
%2.1f GB
%2.1f MB
%2.1f KB
%4llu bytes
-----------------------------------------------------------------------
   COUNT      BYTES       AVG   CLASS_NAME                                        TYPE    BINARY
   =====      =====       ===   ==========                                        ====    ======
Entries <class>[<offset>], like __NSCFArray[12], indicate non-objects 
pointed to by instances of <class> at given offset.
containsString:
hasSuffix:
stringByResolvingSymlinksInPath
defaultManager
fileExistsAtPath:isDirectory:
isExecutableFileAtPath:
attributesOfItemAtPath:error:
fileSize
dataWithContentsOfFile:options:error:
localizedDescription
UTF8String
string
processInfo
arguments
arrayWithArray:
objectAtIndexedSubscript:
lastPathComponent
setObject:atIndexedSubscript:
componentsJoinedByString:
appendFormat:
initWithTask:getBinariesList:
executablePath
parentPid
parentProcessPath
processName
length
mainBundle
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
stringByStandardizingPath
fileExistsAtPath:
intValue
initWithPid:
name
containsObject:
is64Bit
valueForEnvVar:
stringWithFormat:
numberWithUnsignedInt:
stringValue
numberWithInt:
sharedTimerIfCreated
startWithMessage:
reason
callStackSymbols
init
letterCharacterSet
addCharactersInString:
rangeOfCharacterFromSet:
rangeOfString:options:
substringFromIndex:
substringToIndex:
_parseMallocSizePattern:error:
isEqualToString:
hasPrefix:
dealloc
className
_regex:matchesName:
displayName
superclassInfo
_matchesClassInfo:
classInfoWithClassName:binaryPath:type:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
isMatchingKindOfClass
setMatchingKindOfClass:
initWithPattern:forArgument:error:
resetCachedMatches
matchesNodeDetails:orNodeDescription:
_classesRegex
_vmRegionsRegex
_memoizedRegexResult
_matchingKindOfClass
_patternMatchesNonObjects
_allocationSizeLowerBound
_allocationSizeUpperBound
guessNonObjects
setGuessNonObjects:
sumObjectFields
setSumObjectFields:
showSizes
setShowSizes:
showRawClassNames
setShowRawClassNames:
showInternalFragmentation
setShowInternalFragmentation:
showShortenedOutput
setShowShortenedOutput:
showPaths
setShowPaths:
quietMode
setQuietMode:
classesPatternMatcher
setClassesPatternMatcher:
layoutPatternMatcher
setLayoutPatternMatcher:
classFilterPatternMatcher
setClassFilterPatternMatcher:
classesPattern
setClassesPattern:
separateByZone
setSeparateByZone:
showZoneSummaries
setShowZoneSummaries:
onlyShowAddresses
setOnlyShowAddresses:
objectContentLevel
setObjectContentLevel:
debugTimer
setDebugTimer:
.cxx_destruct
_guessNonObjects
_sumObjectFields
_showSizes
_showRawClassNames
_showInternalFragmentation
_showShortenedOutput
_showPaths
_quietMode
_separateByZone
_showZoneSummaries
_onlyShowAddresses
_objectContentLevel
_classesPatternMatcher
_layoutPatternMatcher
_classFilterPatternMatcher
_classesPattern
_debugTimer
largestUnusedRange
reservedTotal
allocatedTotal
blockCount
quantaCounter
classMap
setSyntaxDescription:
setDiscussion:
usage:
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:flags:handler:
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:handler:
sharedTimer
parseArguments:withBlock:
directedGraphWithData:error:
processDescriptionString
usage:shouldExit:
description
initWithTask:options:
setRecordRuntimeMetadataChunkInfo:
addRootNodesFromTask
addMallocNodesFromTask
printRuntimeMetadataInfo
detachFromTask
stop
zoneCount
mapTableWithKeyOptions:valueOptions:
nodeNamespaceSize
nodeDetails:
genericInfo
enumerateRegionsWithBlock:
stringByAppendingFormat:
binaryPath
infoType
enumerateReferencesWithBlock:
zoneNameForIndex:
realizedClasses
enumerateInfosWithBlock:
instanceSize
offset
size
enumerateTypeFieldsWithBlock:
count
binaryName
labelForNode:
objectForKey:
compare:
sortedArrayUsingComparator:
countByEnumeratingWithState:objects:count:
fullIvarDescription
typeName
examining %@ [%u]
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_port_deallocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
%s[%d]: [error] 'mach_msg_send' failed: %s (%d)
VMUClassPatternMatcher
HeapGlobals
HeapZoneAggregate
B16@0:8
v20@0:8B16
@40@0:8@16@24^@32
v16@0:8
B32@0:8@16^@24
B32@0:8^{?=iQ*^{re_guts}}16@24
B24@0:8@16
B48@0:8{?=Qb60b4@}16@40
^{?=iQ*^{re_guts}}
^{__CFDictionary=}
@16@0:8
v24@0:8@16
I16@0:8
v20@0:8I16
@"VMUClassPatternMatcher"
@"NSString"
@"VMUDebugTimer"
{_VMURange="location"Q"length"Q}
@"NSMapTable"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>19A603013</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.SamplingTools.heap</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>12A8179f</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>14.2</string>
<key>DTSDKBuild</key>
<string>18B5072c</string>
<key>DTSDKName</key>
<string>iphonesimulator14.2.internal</string>
<key>DTXcode</key>
<string>1200</string>
<key>DTXcodeBuild</key>
<string>12A8179f</string>
<key>MinimumOSVersion</key>
<string>14.2</string>
<key>SecTaskAccess</key>
<array>
<string>allowed</string>
<string>safe</string>
</array>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.iosurfaceinfo</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceRootUserClient</string>
</array>
<key>task_for_pid-allow</key>
<true/>
</dict>
</plist>
