%s %@
%s Failed to %@ pause timer intent %@%@
%s Successfully %@ pause timer attribute intent %@ with response %@
%s Failed to %@ resume timer intent %@%@
%s Successfully %@ resume timer attribute intent %@ with response %@
exportedObject: %{public}@ must conform to protocol: %{public}@
%s intent:%@
%{public}@ alarm fetch returned alarms: %{public}@
%{public}@ found no alarm to enable
%{public}@ Alarm being modified: %{public}@. Enabled state from intent: %{public}@, current alarm enable state: %i
%{public}@ alarm state already matches intent state : %{public}@
%{public}@ Updating enable state to %i for alarm: %{public}@
mobiletimerd - System language changed, terminating daemon
Initializing %{public}@
%{public}@ loading timers
%{public}@ migration needed
%{public}@ migrated timer is %{public}@
%{public}@ no timer created during migration.
%{public}@ has no timers
%{public}@ binary data storage version detected.  Using old reader.
%{public}@ unexpected error reading data %{public}@
%{public}@ loaded %{public}@
%{public}@ setting all timers %{public}@
%{public}@ setting all timers
%{public}@ received request for timers
%{public}@ returning timers: %{public}@, next timer: %{public}@
%{public}@ adding timer %{public}@
MTTimerStorage - Adding Timer
%{public}@ updating timer %{public}@
MTTimerStorage - Updating Timer
%{public}@ removing timer %{public}@
MTTimerStorage - Removing Timer
%{public}@ dismissing timer with ID %{public}@
MTTimerStorage - Dismissing Timer
%{public}@ repeating timer with ID %{public}@
MTTimerStorage - Repeating Timer
Timer already exists
MTTimerStorage - Failed Adding Timer
MTTimerStorage - Finished Adding Timer
MTTimerStorage - Finished Updating Timer
MTTimerStorage - Failed Updating Timer
%{public}@
MTTimerStorage - Finished Removing Timer
Timer doesn't exist
MTTimerStorage - Failed Removing Timer
Dismissed timer %{public}@ at %{public}@
MTTimerStorage - Finished Dismissing Timer
%{public}@ couldn't find matching timer to dismiss for %{public}@
MTTimerStorage - Failed Dismissing Timer
Repeated timer %{public}@
MTTimerStorage - Finished Repeating Timer
MTTimerStorage - Failed Repeating Timer
%{public}@ notifying observers for timer addition
%{public}@ notifying observers for timer update
%{public}@ notifying observers for timer removal
%{public}@ notifying observers for timer dismissal
%{public}@ notifying observers for timer firing
%{public}@ notifying observers for next timer change
-----MTTimerStorage-----
Timers: %{public}@
Last Modified: %{public}@
MTTimerStorage - Next Timer Changed
MTTimerStorage - Fired Timer
%{public}@ registered %{public}@
%{public}@ is registering for distributed notifications
%{public}@ is registering for darwin notifications
%{public}@ is registering for alarm notifications
%{public}@ is registering for darwin notification %{public}@
%{public}@ received notification %{public}@
%{public}@ Using a scheduling power assertion timeout of %{public}d
%{public}@ Alarm added - Request snapshot
%{public}@ Alarm updated - Request snapshot
%{public}@ Alarm removed - Request snapshot
%{public}@ has no sync manager.
MTAlarmSyncDataModel - Syncing Alarm Dismiss
MTAlarmSyncDataModel - Syncing Alarm Snooze
%{public}@ performing action %{public}@
MTAlarmSyncDataModel - Applying Alarm Dismiss
MTAlarmSyncDataModel - Applying Alarm Snooze
-----%{public}@-----
Alarm Sync Manager: %{public}@
%{public}@ no sleep alarm, sleep disabled
%{public}@ sleep schedule disabled
%{public}@ haven't dismissed morning alarm yet so we're sleeping
%{public}@ wake up alarm was snoozed (%{public}@) so we're sleeping
%{public}@ next trigger is for wake up (%{public}@) so we're sleeping
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime: (%{public}@). it is currently before bedtime and the snooze date
%{public}@ bedtime reminder was snoozed (%{public}@) for after the bedtime. it is currently past bedtime but before the snooze date.
%{public}@ user confirmed go to bed notification (%{public}@) so we're sleeping until %{public}@
%{public}@ haven't seen go to bed reminder yet (%{public}@)
%{public}@ not bedtime yet (%{public}@)
%{public}@ bedtime reached, checking state
%{public}@ waketime reached but alarm not enabled, dismissing
%{public}@ scheduling alarm timeout
%{public}@ alarm timeout occurred, dismissing
%{public}@ received %{public}@
%{public}@ Active Paired Device: %{public}@ (version: %{public}@)
%{public}@ no paired device detected
%{public}@ paired watch version is too old for sync
%{public}@ has active paired watch%{public}@
-----MTPairedDeviceListener-----
Paired Device: %{public}@ - %{public}@ - %{public}@
Paired Device Active: %{public}d
%{public}@ received willPresentNotification
%{public}@ completing with UNNotificationPresentationOptionAlert for %{public}@
%{public}@ completing with UNNotificationPresentationOptionAlert|UNNotificationPresentationOptionSound for %{public}@
Connection info must be non-nil
Initializing %{public}@ with info %{public}@
%{public}@ deallocing...
%{public}@ rebuilding connection
%{public}@ connection interrupted
%{public}@ connection invalidated
%{public}@ will retry connection because the response to the lifecycle notification failed
%{public}@ connection invalidated.  Retrying
%{public}@ not retrying invalidated connection
%{public}@ received lifecycle darwin notification. Reestablishing connection.
%{public}@ received lifecycle darwin notification.  Reconnecting.
%{public}@ received lifecycle darwin notification but does not have a reconnection handler.
Failed to reconnect for provider %{public}@ with error %{public}@.
%{public}@ retrying failed reconnect
%{public}@ attempting to reconnect.
%{public}@ failed to reconnect too many times
%{public}@ received a remote proxy error: %{public}@
%{public}@ expected non-nil proxy@
%{public}@ expected non-nil connection
%{public}@ invalidating
%{public}@ Handling manual %{public}@ invalidation
%{public}@ Keeping off until: %{public}@
%{public}@ Not in user sleep window
%{public}@ We are past keepOffUntilDate: %{public}@
%{public}@ ignoring updateState until keepOffUntilDate: %{public}@
%{public}@ Failed adding assertion update listener: %@
%{public}@ Added assertion update listener
%{public}@ engageUntilDate:userEngaged
%{public}@ already have assertion
%{public}@ updating active assertion with new end date %{public}@, isUserRequested %d
%{public}@ acquiring assertion with details %{public}@
%{public}@ Failed to acquire assertion with %{public}@
%{public}@ Successfully acquired assertion
%{public}@ clearKeepOff:
%{public}@ disengage:
%{public}@ there is no assertion
%{public}@ Failed to release assertion with %{public}@
%{public}@ Successfully released assertion
%{public}@ keepOffUntilDate: %{public}@
%{public}@ scheduleUpdateForSecondsFromNow: %f
%{public}@ re-checking %{public}@
%{public}@ user manually turning off %{public}@ (%{public}@)
%{public}@ didReceiveModeAssertionInvalidation %{public}@
%{public}@ user woke up, turning off %{public}@ if it's on
%{public}@ user went to bed, checking %{public}@
%{public}@ bedtime reminder fired, checking %{public}@
%{public}@ it's the user's bedtime, checking %{public}@
%{public}@ wake up alarm fired, checking %{public}@
%{public}@ wake up alarm snoozed, checking %{public}@
%{public}@ user %{public}@ sleep alarm, checking %{public}@
%{public}@ significant time change detected, checking %{public}@
-----%@-----
isEnabled: %d, isUserRequested: %d
%{public}@ resuming sync service
%{public}@ sync currently disabled, not starting, and removing any pending changes.
%{public}@ stopping sync service
%{public}@ removing pending changes
%{public}@ still has changes
%{public}@ no pending changes
%{public}@ syncing %{public}@
%{public}@ ignoring sync because we're not started
%{public}@ applying change %{public}@
%{public}@ nothing to apply
%{public}@ resetting data store
%{public}@ successfully sent %lu changes
%{public}@ incremental sync requested
%{public}@ sync isn't disabled.
%{public}@ sync is disabled.
Sync Service: %@
Sync Status: %lu
Pending Changes: %lu
%{public}@ createAlarm requested without time
%{public}@ no alarm, disabling
%{public}@ feature not enabled
%{public}@ user confirmed bedtime reminder (%{public}@).  Starting session.
%{public}@ user woke up at %@ (%{public}@)
%{public}@ received notification response
%{public}@ received response for category %{public}@ and action %{public}@
Unexpected alarm notification action: %{public}@
%{public}@ calling completion
%{public}@ received snooze action for %{public}@
%{public}@ received go to bed action for bedtime notification %{public}@
%{public}@ received dismiss action for wakeup alarm %{public}@
%{public}@ received dismiss action for bedtime notification %{public}@
%{public}@ received dismiss action for snooze countdown notification %{public}@
%{public}@ received dismiss action for alarm %{public}@
%{public}@ received response for action %{public}@
Unexpected timer notification action: %{public}@
%{public}@ received dismiss action for timer %{public}@
%{public}@ received repeat action for timer %{public}@
Initializing %{public}@ with persistence %{public}@ and migrator %{public}@
%{public}@ cleaning up snooze fire date for sleep alarm %{public}@
%{public}@ cleaning up repeat schedule for sleep alarm %{public}@
%{public}@ loading alarms
%{public}@ To set as a marker we are hitting here with updated root
%{public}@ has no alarms
%{public}@ clean-up needed
%{public}@ Migrating sleep alarm: %{public}@ 
%{public}@ Donate signal for existing bedtime
%{public}@ Don't donate signal because no existing bedtime
%{public}@ Failed to release assertion with %{public}@, failure error:%{public}@
%{public}@ Migrating sleep alarm: %{public}@ to regular: %{public}@
%{public}@ loaded %{public}@, sleep alarms %{public}@
%{public}@ loaded %{public}ld alarms, %{public}ld sleep alarms
%{public}@ persistence is nil
%{public}@ ignoring misplaced sleep alarm %{public}@
%{public}@ ignoring misplaced regular alarm %{public}@
%{public}@ received request for alarms
%{public}@ returning ordered alarms: %{public}@, sleep alarms: %{public}@, next alarm: %{public}@
%{public}@ calling completion block with alarms %@
%{public}@ adding alarm %{public}@
MTAlarmStorage - Adding Alarm
%{public}@ updating alarm %{public}@
MTAlarmStorage - Updating Alarm
%{public}@ updating %{public}@ with changes %{public}@
%{public}@ removing alarm %{public}@
MTAlarmStorage - Removing Alarm
%{public}@ removing alarm with ID %{public}@
%{public}@ removing all alarms
%{public}@ setting all alarms %{public}@, sleep alarms %{public}@
%{public}@ setting all alarms
%{public}@ setting sleep alarms %{public}@
%{public}@ transferring metadata from existing sleep alarms %{public}@
%{public}@ snoozing for %{public}lu minutes
%{public}@ snoozing alarm with ID %{public}@ and action %ld
MTAlarmStorage - Snoozing Alarm
%{public}@ dismissing alarm with ID %{public}@ and action %{public}@
MTAlarmStorage - Dismissing Alarm
Alarm already exists
MTAlarmStorage - Failed Adding Alarm
MTAlarmStorage - Finished Adding Alarm
Alarm doesn't exist
MTAlarmStorage - Failed Updating Alarm
%{public}@ Alarm %{public}@ disabled while firing (%{public}@).  Dismissing: %{public}@ (last dismissed: %{public}@)
%{public}@ Alarm %{public}@ modified during save.  Notifying everyone.
%{public}@ Changes: %{public}@
MTAlarmStorage - Finished Updating Alarm
MTAlarmStorage - Finished Removing Alarm
MTAlarmStorage - Failed Removing Alarm
%{public}@ was snoozed and isn't enabled anywhere. Cancelling.
%{public}@ was snoozed but had relevant changes. Cancelling.
%{public}@ was snoozed but early wake up was confirmed (%{public}@). Cancelling.
%{public}@ setting alarms:%{public}@, sleep alarms: %{public}@, persist: %i, notify %i, override: %i
%{public}@ setting alarms - needs update: %i
%{public}@ has a snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking later date
%{public}@ has a bed-time snooze fire date of %{public}@ and we want to snooze until %{public}@.  Picking later date
MTAlarmStorage - Finished Snoozing Alarm
%{public}@ couldn't find matching alarm to snooze for %{public}@
MTAlarmStorage - Failed Snoozing Alarm
%{public}@ Setting non-repeating alarm %{public}@ to disabled
%{public}@ dismissed alarm %{public}@ at %{public}@
MTAlarmStorage - Finished Dismissing Alarm
%{public}@ couldn't find matching alarm to dismiss for %{public}@
MTAlarmStorage - Failed Dismissing Alarm
%{public}@ notifying observers for alarm addition
%{public}@ notifying observers for alarm change
%{public}@ notifying observers for alarm removal
%{public}@ notifying observers for alarm snooze
%{public}@ notifying observers for alarm dismissal
%{public}@ notifying observers for alarm fire
%{public}@ notifying observers for next alarm change
MTAlarmStorage - Next Alarm Changed
MTAlarmStorage - Fired Alarm
%{public}@ significant time change detected, rescheduling alarms
%{public}@ resetting firedDate on %{public}@ because it's in the future
%{public}@ resetting dismissedDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeFiredDate on %{public}@ because it's in the future
%{public}@ resetting bedtimeDismissedDate on %{public}@ because it's in the future
%{public}@ resetting lastModifiedDate on %{public}@ because it's in the future
%{public}@ handling notification %{public}@
-----MTAlarmStorage-----
Alarms: %{public}@
Sleep Alarms: %{public}@
Start monitoring : Springboard/Carousel start
Cannot start monitoring Springboard/Carousel start because it was already started
Stop monitoring : Springboard/Carousel start
Springboard/Carousel started = %{public}@
%s Handled resolve label for intent: %@ with result: %@
%s Failed to fetch timers for intent: %@, error: %@
%s Handled resolve duration for intent: %@ with result: %@
%s Handled resolve type for intent: %@ with result: %@
%s Attempting to remove conflicting timer: %@
%s Successfully removed conflicting timer: %@
%s Failed to remove conflicting timer: %@ with error: %@
%s Successfully %@ create timer intent %@ with response %@
%s Failed to %@ create timer intent %@ with response: %@, error: %@
[Sound] Converting %{public}@ to UNNotificationSound for category %{public}@
[Sound] Made %@
[Sound] Converting %@ to MTSound
%{public}@ rescheduling %{public}ld alarms
%{public}@ scheduling %{public}ld alarms
%{public}@ scheduling %{public}ld additional alarms
%{public}@ fired last alarm more than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ the last alarm fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last alarm less than %d minutes ago.  Seeing if we have to fire any alarms we missed since %{public}@
%{public}@ Setting really old snoozed alarm %{public}@ to disabled
%{public}@ Clearing fire date for really old snoozed alarm %{public}@
%{public}@ Clearing fire date for really old firing alarm %{public}@
%{public}@ scheduling %{public}lu alarms
%{public}@ scheduled alarms: %{public}@
%{public}@ unscheduling %{public}lu alarms
%{public}@ next alarm changed: %{public}@
MTAlarmScheduler - Changing Next Alarm
%{public}@ has %{public}ld scheduled alerts and notifications
%{public}@ Scheduling persistent timer for next alert at %{public}@
%{public}@ Timer will fire %f minutes from now
%{public}@ Timer will fire %f seconds from now
%{public}@ Timer should have fired.  Triggering it now
%{public}@ Unscheduling persistent timer.
%{public}@ Alarm timer fired
%{public}@ Alarm %{public}@ is for non-visible event %{public}@
%{public}@ Alarm %{public}@ doesn't play on this device
MTAlarmScheduler - Firing Alarm
%{public}@ %{public}@ fired (scheduled fire date: %{public}@)
%{public}@ first dismissing related notifications for %{public}@
%{public}@ post notification for %{public}@
%{public}@ not posting notification for %{public}@
%{public}@ no next alarm
%{public}@ Alarm %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled alarms: %{public}@
%{public}@ Find notifications with current trigger date in range %{public}@
%{public}@ Alarm %{public}@ should actually fire in %f seconds
%{public}@ fired all alarms.  Rescheduling.
%{public}@ Setting last alarm trigger date to %{public}@
%{public}@ received update of alarms %{public}@.  Rescheduling them.
%{public}@ posting snooze countdown notification for snoozed alarm %{public}@
-----MTAlarmScheduler-----
Scheduled Alarms: %{public}@
Not scheduling %{public}@ because sleep schedule is disabled
Not scheduling alarm %{public}@ because it's disabled
Not scheduling bedtime triggers
Dropping undecodeable sync data from %{public}@
%{public}@ Processing os_state handler
State: %{public}@
%{public}@ Error serializing state data: %{public}@
%{public}@ Ignoring user bedtime %@.
%{public}@ stopping session with reason %{public}@
%{public}@ User bed time unset.  Using: %@
%{public}@ User bed time was: %@
%{public}@ User wake time was: %@
[Triggers] %{public}@ handleSystemReadyWithAlarmStorage %lu alarms
[Triggers] %{public}@ didAddAlarms: %{public}@
[Triggers] %{public}@ didUpdateAlarms: %{public}@
[Triggers] %{public}@ didChangeNextAlarm: %{public}@
[Triggers] %{public}@ didSnoozeAlarm: %{public}@, snoozeAction: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has snoozed
[Triggers] %{public}@ didDismissAlarm: %{public}@, dismissAction: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has been dismissed
[Triggers] %{public}@ Ignoring dismissAction (%{public}@)
[Triggers] %{public}@ didFireAlarm: %{public}@, triggerType: %{public}@
[Triggers] %{public}@ Telling context store and knowledge store that alarm (%{public}@) has fired
[Triggers] %{public}@ Ignoring triggerType (%{public}@)
[Triggers] %{public}@ didRemoveAlarms: %{public}@
%{public}@ could not save objects to knowledge store with error: %{public}@
%{public}@ didAddTimers %{public}@
%{public}@ didUpdateTimers %{public}@
%{public}@ didFireTimer %{public}@
%{public}@ Donating intent: %{public}@
Error donating timer create intent: %{public}@
%@ donated successfully
%@ - Cache Miss
%{public}@ - Error getting alarms: %{public}@
%{public}@ posting distributed notification for alarm: %{public}@
%{public}@ posting distributed notification for timer: %{public}@
%{public}@ System is ready.
Restore is done or not needed.
Restore isn't done.
%{public}@ has been notified that restore is done (received %{public}@) or not needed.
%{public}@ has been notified of F5 demo
-----MTSystemStateListener-----
Restore done: %{public}d
%{public}@ userWentToBed
%{public}@ telling observers user went to bed
%{public}@ userWokeUp
%{public}@ telling observers user woke up
%{public}@ dismissWakeUpAlarm (%{public}@)
%{public}@ shouldScheduleAlarmTimeoutForSecondsFromNow
%{public}@ telling observers about added sleep alarm
%{public}@ telling observers about removed sleep alarm
%{public}@ sleep alarm changes: %@
%{public}@ telling observers about modified sleep alarm
%{public}@ sleep alarm changes unimportant.
%{public}@ sleep alarm dismissed: (%{public}@)
%{public}@ telling observers bedtime reminder fired at %{public}@
%{public}@ telling observers bedtime reminder was confirmed at %{public}@
%{public}@ telling observers bedtime reminder was snoozed until %{public}@
%{public}@ telling observers bedtime was reached at %{public}@
%{public}@ telling observers waketime time was reached at %{public}@
%{public}@ telling observers wake up alarm fired at %{public}@
%{public}@ telling observers wake up alarm was snoozed until %{public}@
%{public}@ telling observers wake up alarm was dismissed at %{public}@ (%{public}@)
%{public}@ telling observers %{public}@ ended at %{public}@
%{public}@ significant time change detected
%{public}@ pairedDevicePreferencesChanged
-----MTSleepCoordinator-----
%@: %d
%s Failed to %@ delete timer intent %@ %@, response: %@
%s Successfully %@ delete timer attribute intent %@ with response %@
%s Deleting%@ timer %@ from timer manager %@
%s Failed to delete%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for delete to single unnamed timer: %@
%s Failed to %@ set timer attribute intent %@%@
%s Successfully %@ set timer attribute intent %@ with response %@
[Sound] No tone ID is specified in defaults. Fall back to the ToneLibrary default
[Sound] No media item ID is specified in defaults. Switch to the tone type and use the ToneLibrary default
[Sound] Alarm sound from stored defaults (toneID: %@, mediaItemID: %@)
[Sound] No vibration ID is specified in defaults. Use the ToneLibrary default
[Sound] Alarm vibration from stored defaults (vibrationID: %@)
[Sound] Default alarm sound is %@
[Sound] Default timer sound is %@
[Sound] Storing Alarm Defaults (soundTypeKey: %@, toneIDKey: %@, mediaItemIDKey: %@, vibrationIDKey: %@)
[Sound] Storing Timer Defaults (toneIDKey: %@)
%{public}@ Using snapshot quiescing window of %{public}f
%{public}@ skipping migration from old storage, as this device doesn't support the old storage
%{public}@ migrating old alarms and notifications to storage
%{public}@ need to migrate alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ need to migrate %{public}ld alarms and sleep alarm %{public}d
%{public}@ migrated alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated sleep alarm %{public}@ (enabled: %{public}d)
%{public}@ migrated to alarms: %{public}@ and sleep alarm: %{public}@
%{public}@ skipping migration removal, as this device doesn't support the old storage
%{public}@ removing old alarms and notifications from storage
%{public}@ notification cleanup, as this device doesn't support the old storage
%{public}@ cleaning up old notifications
Date before computing earlierst trigger date for %{public}@: %{public}@
Computing next fire date for %{public}@ after %{public}@
Alarm %{public}@ is snoozed:%d, repeats: %d
Alarm %{public}@ override alarm date: %{public}@
Alarm %{public}@ next alarm date: %{public}@
Alarm %{public}@ alarm trigger: %{public}@
%{public}@ has next fire date %{public}@ after %{public}@
Alarm %{public}@ include snooze: %d
Snooze hasn't fired yet (%{public}@) for alert %{public}@
Snooze has already fired (%{public}@) for alert %{public}@
Alarm %{public}@ candidate triggers after sorting: %{public}@
%{public}@ has next trigger %{public}@
%{public}@ %{public}@ after %{public}@ (%{public}@)
%{public}@ %{public}@ %{public}@
%{public}@ %{public}@ %{public}@ is nil
%{public}@ earliest trigger date: %{public}@
[Migration] (1.8) pushAlertsEnabled: %d
[Migration] (1.8) playOptions: %lu
[Migration] (2.6) old enabled: %d, sleepSchedule: %d
[Migration] (2.6) new enabled: %d, sleepSchedule: %d
Initializing %{public}@ with tracker: %{public}@
%{public}@ sessionDidComplete: %{public}@
%{public}@ writing session
%{public}@ notifying %{public}@
%{public}@ session has nothing to write
%{public}@ session is ready to write
%{public}@ session needs additional processing
%{public}@ failed to process session
%{public}@ archiving session
%{public}@ archiveSession: %{public}@
%{public}@ creating %{public}@ directory at %{public}@
%{public}@ failed to create directory at %{public}@
%{public}@ wrote sessions to file %{public}@
%{public}@ failed to write sessions file %{public}@
%{public}@ writeSession: %{public}@
%{public}@ can write session data
%{public}@ no unprocessed in bed intervals to save
%{public}@ device hasn't been unlocked since boot.  Waiting for unlock...
%{public}@ device has been unlocked.  Writing samples to HealthKit
%{public}@ device has been unlocked but no unprocessed intervals to save
%{public}@ caught exception %{public}@ when trying to read sessions
%{public}@ unarchiving failed with error %{public}@
%{public}@ no data found in file %{public}@
%{public}@ failed to remove session data file error %{public}@
%{public}@ doesn't have write access for HKCategoryTypeIdentifierSleepAnalysis
%{public}@ Processing session: %@
%{public}@ Skipping session due to missing bedtime or wake time: %@
%{public}@ Interval is nil.
%{public}@ sleep interval: %f greater than allowed: %f. Will not be used
%{public}@ Timer added - Request snapshot
%{public}@ Timer updated - Request snapshot
%{public}@ Timer removed - Request snapshot
%{public}@ initializing...
%{public}@ broadcasting %{public}@
%{public}@ registering %{public}@ for %{public}@
%{public}@ posting %{public}@ for %{public}@
%{public}@ unregistering %{public}@ for %{public}@
%{public}@ sensitiveUIStateChanged
%{public}@: %{public}@
%{public}@: Returning widget URL: %{public}@
Initializing %{public}@...
%{public}@ calling update handler with %{public}@
%{public}@ _handleAlarmsDidChange
%{public}@ setting up notification centers
%{public}@ setting %lu categories for %{public}@
%{public}@ handling responses with %{public}@
%{public}@ firing %{public}@
%{public}@ adding request %{public}@
%{public}@ failed to fire %{public}@ with error %{public}@
%{public}@ fired %{public}@
%{public}@ dismissing related notifications for %{public}@
%{public}@ dismissing any notifications for %{public}@
%{public}@ alarm is nil
%{public}@ dismissing notifications for %{public}@ (%{public}@)
%{public}@ dismissing notifications with identifiers %{public}@
%{public}@ tearDownNotificationsForEventIdentifiers %{public}@
%{public}@ Tearing down %{public}@
%{public}@ not interrupting audio or locking device because we're in a call
%{public}@ interrupting audio
%{public}@ locking device
%{public}@ dismissing %{public}@
%{public}@ timer is nil
%{public}@ removing all delivered notifications.
%{public}@ migrating old timers to storage
%{public}@ removing old timers and notifications from storage
%{public}@ received significant time change notification. Notifying observers
%{public}@ timeZone: %{public}@
Add Alarm
Update Alarm
Dismiss Alarm
Snooze Alarm
Sync Update Alarm
Sync Remove Alarm
Sync Dismiss Alarm
Sync Snooze Alarm
Fire Alarm
Schedule Alarm
Add Timer
Update Timer
Remove Timer
Dismiss Timer
Repeat Timer
Schedule Timer
Fire Timer
Remove Alarm
Sync Add Alarm
%{public}@ executing %{public}@ immediately
%{public}@ scheduling %{public}@
%{public}@ opening transaction for %{public}@
%{public}@ closing transaction for %{public}@
%{public}@ %{public}@ completed
%{public}@ %{public}@ has no tasks
%{public}@ error finding age %{public}@
%{public}@ age changed to %@
%{public}@ Not taking power assert for %{public}@ because assertion timeout is 0.
%{public}@ - Error getting timers: %{public}@
%{public}@ warming...
%{public}@ setting default duration to %f
%{public}@ Error getting timers:%{public}@
%{public}@ addTimer:%{public}@
MTTimerManager - Adding Timer
%{public}@ updateTimer:%{public}@
MTTimerManager - Updating Timer
%{public}@ removeTimer:%{public}@
MTTimerManager - Removing Timer
%{public}@ dismissTimerWithIdentifier:%{public}@
MTTimerManager - Dismissing Timer
%{public}@ repeatTimerWithIdentifier:%{public}@
MTTimerManager - Repeating Timer
%{public}@ received MTTimerServerReadyNotification
%{public}@ notified timers added: %{public}@
MTTimerManager - Timer Added
%{public}@ notified timers update: %{public}@
MTTimerManager - Timer Updated
%{public}@ notified timers removed: %{public}@
MTTimerManager - Timer Removed
%{public}@ notified timer fired: %{public}@
MTTimerManager - Timer Fired
%{public}@ notified timer dismissed: %{public}@
MTTimerManager - Timer Dismissed
%{public}@ notified next timer changed: %{public}@
MTTimerManager - Next Timer Changed
%s Failed to %@ reset timer intent %@ %@, response: %@
%s Successfully %@ reset timer intent %@ with response %@
%{public}@ checking in...
%{public}@ reconnecting...
%{public}@ updating cache %{public}@
%{public}@ calling connection provider %{public}@
%{public}@ remote block being called on connection provider %{public}@...
%{public}@ error while reconnecting: %{public}@
%{public}@ finish block called for next alarm
%{public}@ finish block called with no next alarm
%{public}@ finish block called with next alarm: %{public}@, error: %{public}@
%{public}@ addAlarm:%{public}@
MTAlarmManager - Adding Alarm
%{public}@ updateAlarm:%{public}@
MTAlarmManager - Updating Alarm
%{public}@ removeAlarm:%{public}@
MTAlarmManager - Removing Alarm
%{public}@ snoozeAlarmWithIdentifier:%{public}@
MTAlarmManager - Snoozing Alarm
%{public}@ dismissAlarmWithIdentifier:%{public}@ (%{public}@)
MTAlarmManager - Dismissing Alarm
%{public}@ received MTAlarmServerReadyNotification
%{public}@ received MTAlarmServerReadyNotification, posting MTAlarmManagerStateReset
%{public}@ notified alarms added: %{public}@
MTAlarmManager - Alarm Added
%{public}@ notified alarms updated: %{public}@
MTAlarmManager - Alarm Updated
%{public}@ notified alarms removed: %{public}@
MTAlarmManager - Alarm Removed
%{public}@ notified alarm snoozed: %{public}@
MTAlarmManager - Alarm Snoozed
%{public}@ notified alarm fired: %{public}@
MTAlarmManager - Alarm Fired
%{public}@ notified alarm dismissed: %{public}@
MTAlarmManager - Alarm Dismissed
%{public}@ notifying next alarm changed: %{public}@
MTAlarmManager - Next Alarm Changed
%{public}@ notified next alarm changed: %{public}@
%{public}@ notified alarms changed: %{public}@
MTAlarmManager - Refreshing Sleep Alarms
MTAlarmManager - Resetting Sleep Alarms Snooze State
%s Updating%@ timer %@ from timer manager %@
%s Failed to update%@ timer %@ from timer manager %@ due to error %@
%s Filtering timer for update to single unnamed timer: %@
%s Successfully handled search timers intent: %@ with response %@
%s Failed to handle search timers with intent: %@ due to error %@
%{public}@ Updating keep off until date: %{public}@
%{public}@ We are before keep off until date: %{public}@, turning off %{public}@ if it's on
%{public}@ no sleep alarm, turning off %{public}@ if it's on
%{public}@ sleep schedule for %{public}@ not enabled, turning off %{public}@ if it's on
%{public}@ %{public}@ not enabled for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ waiting 60 seconds before turning on %{public}@ for alarm %{public}@
%{public}@ turning on %{public}@ if it's not on for alarm %{public}@
%{public}@ not in sleep window for alarm %{public}@, turning off %{public}@ if it's on
%{public}@ ignoring user requested off because it's for previous sleep window
%{public}@ Alarm added - Donating intent: %{public}@
Error donating alarm create intent: %{public}@
Error deleting donations for update: %{public}@
%{public}@ Interactions for updated alarm %@ deleted successfully
%{public}@ Updated alarm - Donating intent: %{public}@
%{public}@ Updated Alarm %@ donated successfully
Error donating alarm enable intent: %{public}@
%{public}@ Alarm updated - Donating intent: %{public}@
Error donating alarm update intent: %{public}@
Error deleting donations: %{public}@
Interactions for %@ deleted successfully
%{public}@ loading legacy data
%{public}@ loading user preferences
%{public}@ loading scheduled notifications
%{public}@ found %lu scheduled notifications
%{public}@ migrated from springboard defaults
%{public}@ upgrading alarms
%{public}@ found %ld alarms to upgrade
%{public}@ Old alarms being upgraded: %@
%{public}@ New alarms already present: %@
%{public}@ No alarms found to upgrade
%{public}@ upgrading timer
%{public}@ setting current sound: %@
%{public}@ setting current sound: Stop Playing
%{public}@ Removing AlarmList
%{public}@ Removing SBCountdownTimerSoundIdentifier
%{public}@ Removing SBCountdownTimerTimeIdentifier
%{public}@ Reading alarms from preferences: %@
%{public}@ Invalid alarm found in preferences :: %@
%{public}@ Reading sleep alarm from preferences: %@
%{public}@ reconiling alarms with notifications
%{public}@ found scheduled notification matching alarm %{public}@.  Forcing active for migration.
%{public}@ finished reconiling alarms with notifications
%{public}@ loading timer defaults
%{public}@ purging legacy data
%{public}@ deleting defaults
%{public}@ cancelling notifications
Listener %{public}@ posting lifecycle darwin notification %{public}@
%{public}@ invalidation handler called for connection %{public}@...
Connection %{public}@ not entitled
Connection to server via %{public}@ mach port was interrupted.
Connection to server via %{public}@ mach port was invalidated. Removing server side connection
%{public}@: Adding XPC client: %{public}@
%{public}@: Already has XPC client: %{public}@
%{public}@: Current XPC clients: %{public}@
%{public}@: Removing XPC client: %{public}@
%{public}@ has launched
%{public}@ system is ready
%{public}@ migration finished
Launched: %{public}@
------------------------
%{public}@ initializing
%{public}@ received %{public}@ notification for %d alarms.
%{public}@ received MTAlarmManagerStateReset notification.
%{public}@ asynchronously reloading alarms
%{public}@ calling reload block
%{public}@ finished reloading
%{public}@ failed reloading: %{public}@
%{public}@ creating sync directory at %{public}@
%{public}@ failed to write create directory at %{public}@
%{public}@ wrote pending changes %{public}@ to file %{public}@
%{public}@ failed to write pending changes to file %{public}@
%{public}@ stored sync version is too old
%{public}@ read pending changes %{public}@ from file %{public}@
%{public}@ got nil pending changes.
%{public}@ caught exception %{public}@ when trying to read pending changes
%{public}@ had no pending changes in file %{public}@
%{public}@ failed to remove bogus pending changes with error %{public}@
[%{public}@] Will enter state %@ with previous state %{public}@
[%{public}@] Did enter state %{public}@ with previous state %{public}@
%{public}@ registering sleep observer %{public}@
%{public}@ already have a health observer
%{public}@ sleep data changed.  Notifying %ld observers
%{public}@ unregistering sleep observer %{public}@
%{public}@ no health observer
%{public}@ Fetching sleep data for range %{public}@ with interval %{public}@
%{public}@ Failed to fetch sleep data with error %{public}@
%{public}@ Fetched sleep intervals %@
%{public}@ Fetching sleep days for range %{public}@
%{public}@ Failed to fetch sleep days with error %{public}@
%{public}@ Fetched sleep days %@
%{public}@ Requesting authorization for types %{public}@
%{public}@ Authorization succeeded.  Executing query.
%{public}@ Failed to request HealthKit authorization with error: %@
%{public}@ Skipping authorization.  Executing query.
%{public}@ _handlePrefsChanged: pushAlertsEnabled = %d
%{public}@ rescheduling %{public}ld timers
%{public}@ fired last timer more than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ the last timer fire date is ahead of the current date (probably because we went back in time).
%{public}@ fired last timer less than %d minutes ago.  Seeing if we have to fire any timers we missed since %{public}@
%{public}@ Setting really old running timer %{public}@ to stopped
%{public}@ scheduling %{public}lu timers
%{public}@ scheduled timers: %{public}@
%{public}@ unscheduling %{public}lu timers
%{public}@ next timer changed: %{public}@
MTTimerScheduler - Changing Next Timer
%{public}@ Updating persistent timer for %{public}ld scheduled timers
%{public}@ Scheduling persistent timer for next timer at %{public}@
%{public}@ Timer should have fired. Triggering it now
%{public}@ Timer timer fired
MTTimerScheduler - Firing Timer
%{public}@ no next timer
%{public}@ Timer %{public}@ was supposed to fire but is no longer scheduled
%{public}@ Scheduled timers: %{public}@
%{public}@ Timer %{public}@ should actually fire in %f seconds
%{public}@ fired all timers.  Rescheduling.
%{public}@ Setting last timer trigger date to %{public}@
-----MTTimerScheduler-----
Scheduled Timers: %{public}@
%{public}@ Dismissing notifications for timer: %{public}@
Initializing %{public}@ with delegate %{public}@
%{public}@ will enqueue changes %{public}@
%{public}@ ready to enqueue changes
%{public}@ enqueued %{public}@
%{public}@ stopped enqueing at %{public}@
%{public}@ continuing session...
%{public}@ enqueued all %lu changes
%{public}@ has %lu changes to apply
%{public}@ applying %{public}@
%{public}@ skipping invalid change %{public}@
%{public}@ finished applying %lu changes
%{public}@ session %{public}@ wants to reset data store
%{public}@ completed succesfully
%{public}@ failed with error %{public}@
%{public}@ received notification
%{public}@ device has been unlocked
%{public}@ device hasn't been unlocked
%{public}@ posting MTDeviceHasBeenUnlockedForFirstTime notification
%{public}@ Found initial hasBeenUnlockedSinceBoot value of [%d]
-----MTDeviceListener-----
Unlocked since boot: %{public}d
%{public}@ sleep manager initialized
%{public}@ updateSleepAlarms
%{public}@ retrieving sleep schedule model
%{public}@ failed to retrieve sleep schedule model with error: %{public}@
%{public}@ retrieved sleep schedule model: %{public}@
%{public}@ sleep schedule is nil before completing onboarding
%{public}@ sleep schedule is nil after completing onboarding.
%{public}@ mapping sleep model to alarms
%{public}@ setting mapped alarms to storage
%{public}@ completed sleep onboarding check with result: %{public}@, error: %{public}@ 
%{public}@ resetSleepAlarmSnoozeState
%{public}@ needs sleep migration, fetching watchSleepFeaturesEnabled async
%{public}@ failed to get sleep settings, error: %{public}@ 
%{public}@ fetching sleep alarm from health
%{public}@ failed to retrieve upcoming sleep occurrence with error: %{public}@
%{public}@ failed to retrieve sleep schedule with error: %{public}@
%{public}@ no upcoming sleep schedule occurrence
%{public}@ not informing sleep store of alarm dismiss: %{public}@, action: %{public}@
%{public}@ informing sleep store of alarm dismiss: %{public}@, dismiss date:%{public}@ action: %{public}@
%{public}@ sleep store sleepAlarmWasDismissedOnDate completed for alarm id: %{public}@ with status: %d, error: %{public}@
%{public}@ sleep store sleepAlarmWasSnoozedUntilDate completed for alarm id: %{public}@ with status: %d, error: %{public}@
%{public}@ sleep store sleepAlarmWasModified completed with status: %d, error: %{public}@
%{public}@ no active paired device supporting syncing.  Syncing is disabled
%{public}@ this device doesn't support syncing.
%{public}@ active paired device changed.
%{public}@ modified after %{public}@ (%{public}@)
%{public}@ already fired after %{public}@ (%{public}@)
%{public}@ already dismissed after %{public}@ (%{public}@)
Next trigger date %{public}@ is prior to requested date %{public}@
%{public}@ read data version: %f
Illegal fire time class %{public}@
Starting %{public}@
Stopping %{public}@
System is ready: %{public}@.  Will post MTAlarmServerReadyNotification.
System isn't ready...
MTAlarmServer - Adding Alarm
MTAlarmServer - Updating Alarm
MTAlarmServer - Removing Alarm
MTAlarmServer - Snoozing Alarm
MTAlarmServer - Dismissing Alarm
%{public}@ calling to refresh sleep alarms
%{public}@ could not refresh sleep alarms:%{public}@
%{public}@ calling to reset sleep alarms snooze state
%{public}@ could not reset sleep alarms snooze state:%{public}@
-----MTAlarmServer-----
System Ready: %@
Clients: %{public}@
%s Failed to retrieve timers from timer manager %@: %@
%s Failed to resolve timer %@ from timer manager %@ due to error %@
%s Filtering matched timers for allowedTimerStatesForFollowup:%@ to: %@
%s Filtering resolved timer matches to single unnamed timer: %@
%s Found %ld matching timers for multi target timer: %@
%s Disambiguating %ld matching timers for single target timer: %@
%s Found no matching timers but 1 alternate timer: %@ for target timer: %@
%s Found no matching timers for target timer: %@
%s Found matching timer: %@ for target timer: %@
System is ready: %{public}@.  Will post MTTimerServerReadyNotification.
MTTimerServer - Adding Timer
MTTimerServer - Updating Timer
MTTimerServer - Removing Timer
MTTimerServer - Dismissing Timer
MTTimerServer - Repeating Timer
-----MTTimerServer-----
%{public}@ posting CFUserNotification for %{public}@
%{public}@ failed to post CFUserNotification
%{public}@ cancelling CFUserNotification for %{public}@
%{public}@ calling handler for %{public}@
%{public}@ couldn't find callback for notification %{public}@
%{public}@ loading changes
%{public}@ loaded %lu changes
%{public}@ unsupported change type %{public}@
%{public}@ enqueuing action %{public}@
%{public}@ jumping over pending change %{public}@
%{public}@ unable to merge %{public}@ into %{public}@
%{public}@ dequeing changes %{public}@
%{public}@ resolving incoming change %{public}@
%{public}@ incoming change %{public}@ conflicts with pending change %{public}@
%{public}@ dropping conflicting pending change %{public}@
%{public}@ dropping conflicting incoming change %{public}@
%{public}@ retry timer fired (%{public}@)
Initialized %{public}@
%{public}@ resuming service
%{public}@ suspending service
%{public}@ requests sync %{public}@
%{public}@ setHasChangesAvailable
%{public}@ wants to start sending session %{public}@ for request %{public}@
%{public}@ starting sending session %{public}@
%{public}@ not ok to sync yet
%{public}@ starting receiving session %{public}@
%{public}@ finished sending session %{public}@
%{public}@ finished sending session %{public}@ with error %{public}@
%{public}@ finished request %{public}@ with error %{public}@
%{public}@ finished receiving session %{public}@
%{public}@ finished receiving session %{public}@ with error %{public}@
%{public}@ had a conflict between %{public}@ (preferred) and %{public}@ (rejected)
%{public}@ retrying %{public}@
%{public}@ told it's ok to sync from %{public}@.
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForPauseTimer:withCompletion:]
v24@?0@"INTimerResolutionResult"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolvePauseMultipleForPauseTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmPauseTimer:completion:]
-[MTPauseResumeTimerIntentHandler handlePauseTimer:completion:]
B16@?0@"<MTTimerIntentSupport>"8
@"NSError"16@?0@"MTMutableTimer"8
v24@?0@"NSArray"8@"NSError"16
-[MTPauseResumeTimerIntentHandler resolveTargetTimerForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler resolveResumeMultipleForResumeTimer:withCompletion:]
-[MTPauseResumeTimerIntentHandler confirmResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler handleResumeTimer:completion:]
-[MTPauseResumeTimerIntentHandler _responseToPauseTimerIntent:withPausedTimers:error:dryRun:]
confirm
handle
due to error %@
confirmed
handled
-[MTPauseResumeTimerIntentHandler _responseToResumeTimerIntent:withResumedTimers:error:dryRun:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
StartDate
EndDate
EndReason
Intervals
MetaData
NeedsAdditionalProcessing
needsAdditionalProcessing: %d
intervals: %lu
<%@ %p start: %@ end: %@ %@ reason: %@ metadata: %@>
supportsSecureCoding
TB,R
startDate
T@"NSDate",R,N
endDate
intervals
T@"NSArray",R,N
sampleType
Tq,R,N
metadata
T@"NSDictionary",R,N
endReason
TQ,R,N
needsAdditionalProcessing
TB,R,N
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
T@"NSArray",&,N,V_intervals
TQ,N,V_endReason
T@"NSDictionary",&,N,V_metadata
TB,N,V_needsAdditionalProcessing
AlarmDismissal
WakeTimeReached
ConfigurationChanged
ManualExit
Error
MTSyncSnooze+ProtoBuffer.m
Unsupported class for action %@
Unexpected codeable: %@
data
alarmId
hour
minute
allowsSnooze
isSleepAlarm
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
daySetting
repeatDay
totalRepeatCount
remainingRepeatCount
title
soundType
sound
soundVolume
soundSongId
lastModified
revision
vibe
AlarmFiredNotificationNamePrefix
AlarmSnoozedNotificationNamePrefix
AlarmEditingProxyID
ALARM_DEFAULT_TITLE
%@::%@
Settings :: ID is wrong type
Settings :: ID is invalid
Settings :: hour is wrong type
Settings :: hour is invalid
Settings :: minute is wrong type
Settings :: minute is invalid
Settings :: day setting is wrong type
Settings :: day setting is invalid
Settings :: settings %@
Settings is nil
Alarms
q24@?0@"Alarm"8@"Alarm"16
x-apple-clock:alarm?id=
Alarm.m
Invalid parameter not satisfying: %@
volumeIsValid
%@ %d:%02d 0x%04X "%@" %@ <%@ #%i> %@
alarmID
T@"NSString",&,N,V_alarmID
alarmIDURL
T@"NSURL",&,N,V_alarmIDURL
editingProxy
T@"Alarm",R,N,V_editingProxy
settings
active
TB,R,N,GisActive
snoozed
TB,R,N,GisSnoozed,V_snoozed
TB,N,V_isSleepAlarm
T@"NSNumber",C,N
TI,N,V_hour
TI,N,V_minute
Tq,N
repeats
repeatDays
TI,N,V_daySetting
TB,N,V_allowsSnooze
Tq,R,N,V_soundType
T@"NSString",R,N,V_sound
uiTitle
T@"NSString",R,N
T@"NSString",&,N,V_title
vibrationID
T@"NSString",&,N
T@"NSDate",R,N,V_lastModified
TI,R,N,V_revision
delegate
T@"<AlarmDelegate>",W,N,V_delegate
forceActiveForMigration
TB,N,V_forceActiveForMigration
MTXPCConnectionInfo.m
exportedObject: %@ must conform to protocol: %@
<%@:%p %@>
machServiceName
T@"NSString",C,N,V_machServiceName
remoteObjectInterface
T@"NSXPCInterface",&,N,V_remoteObjectInterface
exportedObject
T@,&,N,V_exportedObject
exportedObjectInterface
T@"NSXPCInterface",&,N,V_exportedObjectInterface
lifecycleNotification
T@"NSString",C,N,V_lifecycleNotification
requiredEntitlement
T@"NSString",C,N,V_requiredEntitlement
options
TQ,N,V_options
-[MTToggleAlarmIntentHandler handleEnableAlarm:completion:]
v20@?0B8q12
-[MTToggleAlarmIntentHandler handleDisableAlarm:completion:]
v16@?0@"NSError"8
B16@?0@"MTAlarm"8
v16@?0@"NSArray"8
@"MTIntentAlarm"16@?0@"MTAlarm"8
-[MTToggleAlarmIntentHandler handleToggleAlarm:completion:]
Found no alarm to enable/disable
@"NAFuture"16@?0@"NSArray"8
v16@?0@"NSNull"8
com.apple.clock.alarm
B16@?0@"NSString"8
com.apple.language.changed
MTScheduledList.m
Not a mutable ordered collection
v32@?0@"MTScheduledObject"8Q16^B24
q24@?0@"MTScheduledObject"8@"MTScheduledObject"16
B16@?0@"MTScheduledObject"8
v8@?0
@"MTScheduledObject"16@?0@"MTTrigger"8
v16@?0@"MTScheduledObject"8
Alerts: %@, Notifications: %@, Events: %@
T@"<MTScheduledListDelegate>",W,N,V_delegate
orderedScheduledAlerts
T@"NSMutableOrderedSet",&,N,V_orderedScheduledAlerts
orderedScheduledNotifications
T@"NSMutableOrderedSet",&,N,V_orderedScheduledNotifications
orderedScheduledEvents
T@"NSMutableOrderedSet",&,N,V_orderedScheduledEvents
scheduledAlertMap
T@"NSMutableDictionary",&,N,V_scheduledAlertMap
numberOfScheduledAlerts
numberOfScheduledAlertsAndNotifications
scheduledAlerts
scheduledAlertsAndNotifications
scheduledObjects
storage
T@"NSMutableDictionary",&,N,V_storage
cities
T@"NSArray",C,D,N
code
Tq,N,V_code
clocks
MTTimers
MTTimerModifiedDate
MTTimerStorageVersion
com.apple.mobiletimerd.MTTimerStorage
com.apple.MTTimerStorage.access-queue
timerID
Timer already exists!
Can't update timer from %@ to %@
Timer doesn't exist
Timer does not exist!
v16@?0@"<MTTimerObserver>"8
B16@?0@"MTTimer"8
q24@?0@"MTTimer"8@"MTTimer"16
Timers
Timers Last Modified
state
None
fired
modified
toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
timers
nextTimer
T@"MTTimer",R,N
lastModifiedDate
orderedTimers
T@"NSMutableArray",&,N,V_orderedTimers
T@"NSDate",C,N,V_lastModifiedDate
currentDateProvider
T@?,R,C,N,V_currentDateProvider
migrator
T@"MTTimerMigrator",&,N,V_migrator
serializer
T@"<NAScheduler>",&,N,V_serializer
observers
T@"MTObserverStore",&,N,V_observers
persistence
T@"<MTPersistence>",&,N,V_persistence
scheduler
T@"MTTimerScheduler",W,N,V_scheduler
com.apple.MTNotificationManager.serialqueue
com.apple.distnoted.matching
com.apple.notifyd.matching
com.apple.alarm
v16@?0@"NSObject<OS_xpc_object>"8
SchedulingAssertionTimeout
listeners
T@"NSMutableArray",&,N,V_listeners
%@%@
mtType
mtCoder
T@"NSCoder",R,N
stack
T@"NSMutableArray",&,N,V_stack
T@"MTAlarmStorage",R,N,V_storage
com.apple.MTAlarmSyncDataModel
@"MTSyncServiceManager"16@?0@"MTAlarmSyncDataModel"8
AlarmSync.data
Alarm Sync Managers
syncServiceManager
T@"MTSyncServiceManager",&,N,V_syncServiceManager
alarmStorage
T@"MTAlarmStorage",&,N,V_alarmStorage
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
syncMetrics
T@"MTMetrics",&,N,V_syncMetrics
B16@?0@"MTTrigger"8
MTSleepCoordinatorStateMachineState.m
Unhandled sleep window case!
com.apple.MTPairedDeviceListener.access-queue
v16@?0@"<MTPairedDeviceObserver>"8
C0F3C2C3-0CDE-4DF9-A95A-789AC9A0348B
 with sync capability
sharedListener
T@"MTPairedDeviceListener",R
serializerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serializerQueue
sleepEnabled
TB,N,V_sleepEnabled
pairedDevice
T@"NRDevice",&,N,V_pairedDevice
pairedDeviceVersion
T@"NSString",R
hasActivePairedDevice
hasActivePairedDeviceSupportingSyncing
notificationCenter
T@"UNUserNotificationCenter",&,N,V_notificationCenter
%@ %@
alarmProperties
T@"MTPBAlarmProperties",&,N,V_alarmProperties
MTXPCConnectionProvider.m
Connection info must be non-nil
v16@?0@8
@"NAFuture"16@?0@"NSError"8
v24@?0@"NSNumber"8@"NSError"16
@"NAFuture"8@?0
@24@?0@"NSXPCConnection"8@?<v@?@"NSError">16
@"NAFuture"16@?0@"NSXPCConnection"8
callbackScheduler
T@"<NAScheduler>",&,N,V_callbackScheduler
info
T@"MTXPCConnectionInfo",&,N,V_info
errorHandler
T@?,C,N,V_errorHandler
reconnectHandler
T@?,C,N,V_reconnectHandler
lastLifecycleNotification
T@"NSDate",&,N,V_lastLifecycleNotification
connectionLock
T{os_unfair_lock_s=I},R,N,V_connectionLock
sleep mode
keepOffUntilDate
T@"NSDate",&,N,V_keepOffUntilDate
MTAlarmCategory
MTAlarmNoSnoozeCategory
MTBedtimeAlarmCategory
MTWakeUpAlarmCategory
MTWakeUpAlarmNoSnoozeCategory
AlarmSnoozeCountdown
MTAlarmDismissAction
MTAlarmSnoozeAction
MTAlarmGoToBedAction
MTBedtimeAlarm
MTSnoozeCountdown
MTScheduledFireDate
MTSnoozeable
MTPlaysOn
MTPresentGoodMorningAlert
MTDismissGoodMorningAlert
com.apple.mobiletimer
com.apple.mobiletimer.user-preferences-and-local-notifications-changed
com.apple.mobiletimer.user-preferences-changed
com.apple.mobiletimer.local-notifications-changed
com.apple.mobiletimer.user-preferences-dirty
@"NSDictionary"8@?0
com.apple.MobileTimer.numberOfAlarms
com.apple.MobileTimer.numberOfActiveAlarms
com.apple.MobileTimer.numberOfRepeatingAlarms
com.apple.MobileTimer.numberOfNamedAlarms
com.apple.MobileTimer.alarmNameLength
com.apple.MobileTimer.Clock.Alarm.adds
com.apple.MobileTimer.Clock.Alarm.removes
com.apple.MobileTimer.Clock.Alarm.activations
com.apple.MobileTimer.Clock.Alarm.deactivations
com.apple.MobileTimer.SleepAlarm.Onboarding.start-views
com.apple.MobileTimer.SleepAlarm.Onboarding.end-views
com.apple.MobileTimer.SleepAlarm.views
com.apple.MobileTimer.SleepAlarm.WakeTime.edits
com.apple.MobileTimer.SleepAlarm.Bedtime.edits
com.apple.MobileTimer.SleepAlarm.activations
com.apple.MobileTimer.SleepAlarm.deactivations
com.apple.MobileTimer.SleepAlarm.History.views
com.apple.MobileTimer.SleepAlarm.sleepalarm
com.apple.MobileTimer.SleepAlarm.wakealarm
com.apple.MobileTimer.SleepAlarm.cycles
com.apple.MobileTimer.SleepAlarm.enabled
com.apple.MobileTimer.SleepAlarm.enabled-days
com.apple.MobileTimer.SleepAlarm.active-days
com.apple.MobileTimer.SleepAlarm.duration
com.apple.MobileTimer.SleepAlarm.enabled-duration
com.apple.MobileTimer.WorldClock.adds
com.apple.MobileTimer.WorldClock.removes
com.apple.MobileTimer.Stopwatch.starts
com.apple.MobileTimer.Stopwatch.resets
com.apple.MobileTimer.Stopwatch.laps
com.apple.MobileTimer.Stopwatch.pauses
com.apple.MobileTimer.Timer.starts
com.apple.MobileTimer.Timer.pauses
com.apple.MobileTimer.Timer.resumes
com.apple.MobileTimer.Timer.cancels
com.apple.MobileTimer.Siri.Alarm.adds
com.apple.MobileTimer.Siri.Alarm.removes
com.apple.MobileTimer.Siri.Alarm.searches
com.apple.MobileTimer.Siri.Alarm.activations
com.apple.MobileTimer.Siri.Alarm.deactivations
com.apple.MobileTimer.Siri.Alarm.snoozes
com.apple.MobileTimer.Siri.Alarm.dismisses
com.apple.MobileTimer.Siri.Timer.searches
com.apple.MobileTimer.Siri.Timer.sets
com.apple.MobileTimer.Siri.Timer.cancels
com.apple.MobileTimer.Siri.Timer.pauses
com.apple.MobileTimer.Siri.Timer.resumes
com.apple.MobileTimer.Siri.Timer.dismisses
com.apple.MobileTimer.Sync.Error
com.apple.MobileTimer.Sync.success
com.apple.MobileTimer.Sync.failure
com.apple.MobileTimer.Alarm.add
com.apple.MobileTimer.Alarm.delete
com.apple.MobileTimer.Alarm.update
com.apple.MobileTimer.SleepAlarm.add
com.apple.MobileTimer.SleepAlarm.delete
com.apple.MobileTimer.SleepAlarm.update
com.apple.MobileTimer.Alarm.dismiss
com.apple.MobileTimer.Alarm.snooze
com.apple.MobileTimer.Alarm.snooze.stop
com.apple.MobileTimer.Bedtime.dismiss
com.apple.MobileTimer.Bedtime.snooze
com.apple.MobileTimer.Bedtime.confirm
com.apple.MobileTimer.WakeUp.dismiss
com.apple.MobileTimer.WakeUp.snooze
com.apple.MobileTimer.Timer.add
com.apple.MobileTimer.Timer.delete
com.apple.MobileTimer.Timer.update
com.apple.MobileTimer.Timer.dismiss
com.apple.MobileTimer.Timer.repeat
HHmmssSS
HHmmss
mmssSS
mmss
HH%@
%1$@
%2$@
%3$@
%4$@
MTKeepDndOffUntilDate
com.apple.mobiletimer.bedtime-mode
com.apple.mobiletimer.sleep-mode.automatic
v20@?0B8@"NSError"12
removed
isEnabled
isUserRequested
sleepAlarm
T@"MTAlarm",R,N
currentDate
isUserAsleep
T@"<MTAlarmStorage>",&,N,V_alarmStorage
sleepCoordinator
T@"MTSleepCoordinator",W,N,V_sleepCoordinator
T@?,C,N,V_currentDateProvider
stateMachine
T@"MTSleepModeStateMachine",&,N,V_stateMachine
assertionService
T@"DNDModeAssertionService",&,N,V_assertionService
enabled
TB,N,GisEnabled
initialState
T@"MTSleepModeStateMachineInitialState",R,N,V_initialState
offState
T@"MTSleepModeStateMachineOffState",R,N,V_offState
waitingState
T@"MTSleepModeStateMachineWaitingState",R,N,V_waitingState
MTDateFormattingLocaleDidChangeNotification
amString
T@"NSString",R,W,N
pmString
use24HourTime
TB,R,N,V_use24HourTime
timeDesignatorAppearsBeforeTime
TB,R,N,V_timeDesignatorAppearsBeforeTime
com.apple.MTSyncServiceManager.serialqueue
Sync Service
Sync Status
Pending Changes
syncService
T@"<MTSyncService>",&,N,V_syncService
syncStatusProvider
T@"<MTSyncStatusProvider>",&,N,V_syncStatusProvider
syncDataModel
T@"<MTSyncDataModel>",W,N,V_syncDataModel
syncChangeQueue
T@"MTSyncChangeQueue",&,N,V_syncChangeQueue
started
TB,N,V_started
@16@?0@"MTIntentRepeatDay"8
sleepSessionTrackerDelegate
T@"<MTSleepSessionTrackerDelegate>",W,N
trackingEnabled
cachedAlarm
T@"MTAlarm",&,N,V_cachedAlarm
alarmLock
T{os_unfair_lock_s=I},N,V_alarmLock
T@"<MTSleepSessionTrackerDelegate>",W,N,V_sleepSessionTrackerDelegate
Unexpected alert for go to bed action
Unexpected action type: %ld
timerStorage
T@"MTTimerStorage",&,N,V_timerStorage
metrics
T@"MTMetrics",&,N,V_metrics
com.apple.mobiletimerd.reset
MTAlarms
MTSleepAlarm
MTSleepAlarms
MTAlarmModifiedDate
MTAlarmStorageVersion
MTAlarmSnoozeDuration
MTBedtimeSnoozeDuration
com.apple.mobiletimerd.MTAlarmStorage
com.apple.mobiletimer.bedtime.migration.done
com.apple.MTAlarmStorage.access-queue
BED_TIME
Localizable
MTDefaultTimerVibrationID
@"<NSCopying>"16@?0@"MTAlarm"8
@"MTAlarm"16@?0@"MTAlarm"8
@16@?0@"MTAlarm"8
Alarm already exists!
Alarm does not exist!
v16@?0@"MTAlarm"8
v16@?0@"<MTAlarmObserver>"8
Sleep Alarms
Alarms Last Modified
firing
alarms
sleepAlarms
nextAlarm
allAlarms
orderedAlarms
T@"NSMutableArray",&,N,V_orderedAlarms
T@"NSMutableArray",&,N,V_sleepAlarms
T@"NSDate",&,N,V_lastModifiedDate
T@"MTAlarmMigrator",&,N,V_migrator
T@"MTAlarmScheduler",W,N,V_scheduler
BMDiscoverabilitySignalEvent
Class getBMDiscoverabilitySignalEventClass(void)_block_invoke
MTAlarmStorage.m
Unable to find class %s
void *BiomeStreamsLibrary(void)
/System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams
/System/Library/PrivateFrameworks/BiomeStreams.framework/Contents/MacOS/BiomeStreams
BMStreams
Class getBMStreamsClass(void)_block_invoke
Serial MTSpringboardStartMonitor queue
v12@?0i8
v16@?0@"<MTSpringboardStartMonitorObserver>"8
com.apple.springboard.finishedstartup
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke_2
-[MTCreateTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]_block_invoke
v12@?0B8
-[MTCreateTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateTimerIntentHandler resolveTypeForCreateTimer:withCompletion:]
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
-[MTCreateTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateTimerIntentHandler handleCreateTimer:completion:]
v12@?0I8
@"NAFuture"16@?0@"NSNull"8
B16@?0@"NSObject<MTTimerIntentSupport>"8
-[MTCreateTimerIntentHandler _createTimerWithIntent:dryRun:completion:]_block_invoke
v16@?0@"NSObject<MTTimerIntentSupport>"8
v28@?0@"INCreateTimerIntent"8B16@?<v@?@"INCreateTimerIntentResponse">20
-[MTCreateTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
B32@?0@"NSObject<MTTimerIntentSupport>"8Q16^B24
void _MRMediaRemoteGetNowPlayingApplicationPlaybackState(__strong dispatch_queue_t, void (^__strong)(MRPlaybackState))
MTCreateTimerIntentHandler.m
MRMediaRemoteGetNowPlayingApplicationPlaybackState
void *MediaRemoteLibrary(void)
/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
/System/Library/PrivateFrameworks/MediaRemote.framework/Contents/MacOS/MediaRemote
toneID
mediaID
vibeID
TI,N,V_soundType
hasToneID
T@"NSString",&,N,V_toneID
hasMediaID
TB,N
Td,N,V_mediaID
hasVibeID
T@"NSString",&,N,V_vibeID
hasSoundVolume
Tf,N,V_soundVolume
MTAlertSoundDuration
<%@:%p alertTopic: %@, toneID: %@, mediaItemID: %llu, vibeID: %@, volume: %@
MTAlarmLastTriggerDate
com.apple.MTAlarmScheduler.alarm-event
com.apple.MTAlarmTask.fire
com.apple.MTAlarmTask.reschedule
com.apple.MTAlarmScheduler.access-queue
v16@?0@?<v@?>8
MTAlarmScheduler
Scheduled alarms
T@"<MTAlarmStorage>",R,N,V_storage
scheduledAlarms
T@"MTScheduledList",R,N,V_scheduledAlarms
T@"<NAScheduler>",R,N,V_serializer
T@"<MTNotificationCenter>",R,N,V_notificationCenter
schedulingDelegate
T@"<MTSchedulingDelegate>",R,N,V_schedulingDelegate
taskScheduler
T@"<MTTaskScheduler>",R,N,V_taskScheduler
defaults
T@"<MTPersistence>",&,N,V_defaults
T@"<MTAlarmScheduleDelegate>",W,N,V_delegate
alarm
T@"MTPBAlarm",&,N,V_alarm
<%@:%p %@, Trigger: %@>
scheduleable
T@"<MTScheduleable>",C,N,V_scheduleable
trigger
T@"MTTrigger",C,N,V_trigger
type
isVisible
com.apple.MTExponentialBackOffTimer.serial
<%@: %p backoff: %ld>
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
block
T@?,C,N,V_block
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
initialTime
Td,N,V_initialTime
currentBackoff
TQ,N,V_currentBackoff
backoffFactor
TQ,N,V_backoffFactor
MTCompanionSyncSerializer.m
%@ not protobuffer serializable
Create
Update
Enable
Disable
Delete
time
label
identifier
repeat
com.apple.mobiletimer-framework.MobileTimerIntents
v16@?0q8
Alarm
intentAlarm
T@"MTIntentAlarm",R,N
CSSearchableIndex
Class getCSSearchableIndexClass(void)_block_invoke
MTAlarmIntent.m
void *CoreSpotlightLibrary(void)
/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
/System/Library/Frameworks/CoreSpotlight.framework/Contents/MacOS/CoreSpotlight
com.apple.mobiletimerd.diagnostics
com.apple.mobiletimerd
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
T@"<MTAgentDiagnosticDelegate>",W,N,V_delegate
Unexpected nil userBedtime
Wake times don't agree
NSString *getHKMetadataKeyTimeZone(void)
MTTimeInBedSessionTracker.m
HKMetadataKeyTimeZone
void *HealthKitLibrary(void)
/System/Library/Frameworks/HealthKit.framework/HealthKit
/System/Library/Frameworks/HealthKit.framework/Contents/MacOS/HealthKit
NSString *get_HKPrivateMetadataKeySleepAlarmUserSetBedtime(void)
_HKPrivateMetadataKeySleepAlarmUserSetBedtime
NSString *get_HKPrivateMetadataKeySleepAlarmUserWakeTime(void)
_HKPrivateMetadataKeySleepAlarmUserWakeTime
ALARM_DETAIL_EVERY_MONDAY
ALARM_DETAIL_EVERY_TUESDAY
ALARM_DETAIL_EVERY_WEDNESDAY
ALARM_DETAIL_EVERY_THURSDAY
ALARM_DETAIL_EVERY_FRIDAY
ALARM_DETAIL_EVERY_SATURDAY
ALARM_DETAIL_EVERY_SUNDAY
ALARM_DETAIL_EVERY_DAY
ALARM_DETAIL_WEEKDAYS
ALARM_DETAIL_WEEKENDS
ALARM_SHORT_MONDAY
ALARM_SHORT_TUESDAY
ALARM_SHORT_WEDNESDAY
ALARM_SHORT_THURSDAY
ALARM_SHORT_FRIDAY
ALARM_SHORT_SATURDAY
ALARM_SHORT_SUNDAY
@"NSString"24@?0@"NSString"8@"NSString"16
@"NSString"32@?0@"NSString"8@"NSString"16@"NSString"24
ALARM_REPEAT_NEVER
ALARM_DETAIL_REPEAT_NEVER
ALARM_EVERY_MONDAY
ALARM_MONDAY
ALARM_EVERY_TUESDAY
ALARM_TUESDAY
ALARM_EVERY_WEDNESDAY
ALARM_WEDNESDAY
ALARM_EVERY_THURSDAY
ALARM_THURSDAY
ALARM_EVERY_FRIDAY
ALARM_FRIDAY
ALARM_EVERY_SATURDAY
ALARM_SATURDAY
ALARM_EVERY_SUNDAY
ALARM_SUNDAY
ALARM_EVERY_DAY
ALARM_WEEKDAYS
ALARM_WEEKENDS
com.apple.mobiletimerd.MTCoreDuetMonitor
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"<MTAlarmStorage>",R,N,V_alarmStorage
alarmStatesByAlarmID
T@"NSMutableDictionary",R,N,V_alarmStatesByAlarmID
context
T@"_CDClientContext",R,N,V_context
knowledgeStore
T@"_DKKnowledgeStore",R,N,V_knowledgeStore
transition
com.apple.MTTimerIntentDonor.serialqueue
com.apple.clock.timer
duration
T@"MTTimerStorage",R,N,V_storage
donatedTimerIDs
T@"NSMutableSet",R,N,V_donatedTimerIDs
v40@?0@"NSArray"8@"NSArray"16@"MTAlarm"24@"NSError"32
updateBlock
T@?,C,N,V_updateBlock
T@"MTAlarm",&,N,V_nextAlarm
needsUpdate
TB,N,V_needsUpdate
cacheLock
T{os_unfair_lock_s=I},N,V_cacheLock
Restore done
T@"<MTSystemStateDelegate>",W,N,V_delegate
restoreDoneHandled
TB,N,V_restoreDoneHandled
MTTimerDataVersion
MTTimerID
MTTimerState
MTTimerDuration
MTTimerFireTimerClass
MTTimerFireTime
MTTimerTitle
MTTimerLastModifiedDate
MTTimerFiredDate
MTTimerDismissedDate
MTTimerSound
MTTimerSiriContext
v32@?0@"ALCity"8Q16^B24
DeviceClass
iPad
PerformanceTestingEnabled
/tmp/WorldClock-performance_test.plist
cityAddTest
timestamp
citySent
T@"NSDate",&,N,VlastModified
T@"NSArray",R,N,V_cities
NPSManager
Class getNPSManagerClass(void)_block_invoke
WorldClockManager.m
void *NanoPreferencesSyncLibrary(void)
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/Contents/MacOS/NanoPreferencesSync
com.apple.MTSleepCoordinator.wakeupalarmtimeout-event
MTSleepTimeOutMinutesKey
com.apple.MTSleepCoordinator.access-queue
@"NAFuture"16@?0@8
v16@?0@"<MTSleepObserver>"8
sleep session
MTSleepCoordinator
sleepTimeOutMinutes
T@"MTSleepCoordinatorStateMachine",&,N,V_stateMachine
cachedSleepAlarm
T@"MTAlarm",&,N,V_cachedSleepAlarm
sleepStateResolved
T@"NAFuture",&,N,V_sleepStateResolved
T@"<MTAlarmStorage>",C,N,V_alarmStorage
alarmTimeoutScheduler
T@"MTXPCScheduler",&,N,V_alarmTimeoutScheduler
sleepModeMonitor
T@"MTSleepModeMonitor",&,N,V_sleepModeMonitor
com.apple.MTOSTransaction.serial
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
objectIdentifier
sequencer
changeType
MTDeleteTimerIntentHandlerErrorDomain
-[MTDeleteTimerIntentHandler resolveTargetTimerForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler resolveDeleteMultipleForDeleteTimer:withCompletion:]
-[MTDeleteTimerIntentHandler confirmDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler handleDeleteTimer:completion:]
-[MTDeleteTimerIntentHandler _responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:]
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]
 (dry-run)
-[MTDeleteTimerIntentHandler _deleteTimer:multiple:dryRun:completion:]_block_invoke
@16@?0@"NSObject<MTTimerIntentSupport>"8
Failed to delete%@ timer %@ from timer manager %@ due to ambiguity between timers %@
-[MTSetTimerAttributeIntentHandler handleSetTimerAttribute:completion:]
v24@?0@"INTimer"8@"NSError"16
-[MTSetTimerAttributeIntentHandler confirmSetTimerAttribute:completion:]
-[MTSetTimerAttributeIntentHandler resolveToDurationForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler resolveTargetTimerForSetTimerAttribute:withCompletion:]
-[MTSetTimerAttributeIntentHandler _responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:]
Failed to update%@ timer %@ from timer manager %@ - renaming from %@ to %@ is not supported.
Failed to update%@ timer %@ from timer manager %@ due to invalid duration %f
snoozeAction
dismissAction
syncDate
syncID
syncVersion
hasSnoozeAction
T@"MTPBSnoozeAction",&,N,V_snoozeAction
hasDismissAction
T@"MTPBDismissAction",&,N,V_dismissAction
Td,N,V_syncDate
T@"NSString",&,N,V_syncID
Td,N,V_syncVersion
MTSoundType
MTSoundToneID
MTSoundMediaItemID
MTSoundVibrationID
MTSoundVolume
MTDefaultAlarmSoundType
MTDefaultAlarmToneID
MTDefaultAlarmMediaItemID
MTDefaultAlarmVibrationID
MTDefaultTimerToneID
Unexpected MTSoundCategory: %lu
Sound must be nonnull!
Timer
GoToSleep
WakeUp
Generic
Sound type integer value out of bounds: %lu
Timers only support tones
<%@:%p toneID: %@, mediaItemID: %@, vibeID: %@, volume: %@
v24@?0q8@"NSError"16
TQ,R,N,V_soundType
toneIdentifier
T@"NSString",R,N,V_toneIdentifier
mediaItemIdentifier
T@"NSNumber",R,N,V_mediaItemIdentifier
vibrationIdentifier
T@"NSString",R,N,V_vibrationIdentifier
T@"NSNumber",R,N,V_soundVolume
citiesLastModified
DefaultCityAdded
<%@:%p %@ %@ dismissDate: %@ (%@)>
syncIdentifier
syncType
Tf,R,N
T@"NSString",&,N,V_identifier
dismissDate
T@"NSDate",&,N,V_dismissDate
date
T@"NSDate",&,N,V_date
Tf,N,V_syncVersion
com.apple.mobiletimer.alarmintent
alarmManager
T@"MTAlarmManager",R,N,V_alarmManager
SnapshotWindow
v16@?0@"Alarm"8
T@"NSMutableArray",&,N,V_alarms
T@"MTAlarm",&,N,V_sleepAlarm
com.apple.mobiletimer.MTAlarmDidFireNotification
MTAlarmID
com.apple.mobiletimer.mode.sleep
Every Day
Weekdays
Weekends
q24@?0@"MTAlarm"8@"MTAlarm"16
apple-internal-install
q24@?0@"MTTrigger"8@"MTTrigger"16
v24@?0@"NSString"8@"NSDate"16
dismissed
bedtime dismissed
bedtime fired
keep off until
overriden for date
MTAlarm.m
Must be a single time override
sleep
month
year
schedule
isSnoozed
isFiring
TQ,N,V_hour
TQ,N,V_minute
TQ,N,V_bedtimeHour
TQ,N,V_day
TQ,N,V_month
TQ,N,V_year
TQ,N,V_bedtimeMinute
TQ,N
bedtimeReminder
T@"NSNumber",C,N,V_bedtimeReminder
sleepMode
TB,N,V_sleepMode
sleepModeOptions
TQ,N,V_sleepModeOptions
sleepTracking
TB,N,V_sleepTracking
overriddenForDate
T@"NSDate",C,N,V_overriddenForDate
timeInBedTracking
TB,N,V_timeInBedTracking
sleepSchedule
TB,N,V_sleepSchedule
repeatSchedule
TQ,N,V_repeatSchedule
TB,N,GisEnabled,V_enabled
playOptions
TQ,N,V_playOptions
TB,N,GisSleepAlarm,V_sleepAlarm
snoozeFireDate
T@"NSDate",C,N,V_snoozeFireDate
bedtimeSnoozeFireDate
T@"NSDate",C,N,V_bedtimeSnoozeFireDate
firedDate
T@"NSDate",C,N,V_firedDate
dismissedDate
T@"NSDate",C,N,V_dismissedDate
dismissedAction
TQ,N,V_dismissedAction
bedtimeFiredDate
T@"NSDate",C,N,V_bedtimeFiredDate
bedtimeDismissedDate
T@"NSDate",C,N,V_bedtimeDismissedDate
bedtimeDismissedAction
TQ,N,V_bedtimeDismissedAction
T@"NSDate",C,N,V_keepOffUntilDate
T@"NSString",C,N,V_title
T@"MTSound",C,N,V_sound
onboardingVersion
TQ,N,V_onboardingVersion
T@"NSUUID",R,N,V_alarmID
alarmURL
T@"NSURL",R,N
playsOnThisDevice
TB,R,N,GisFiring
TB,R,N,GisSnoozed
displayTitle
sleepDuration
nextFireDate
TQ,D,N
T@"NSNumber",C,D,N
TB,D,N
TB,D,N,GisEnabled
T@"NSString",C,D,N
T@"MTSound",C,D,N
DismissAlarm
DismissGoToBedNotification
ConfirmGoToBedNotification
DismissWakeUpAlarm
DismissSnoozeCountdownNotification
DismissWakeUpAlarmTimeOut
AlarmConfigurationChanged
WakeUpAlarmConfigurationChanged
SnoozeAlarm
SnoozeWakeUpAlarm
SnoozeGoToBedNotification
MTUnprocessedSessions
SleepSession.data
v16@?0@"<MTSleepSession>"8
v24@?0@8@"NSError"16
@"<MTSleepSession>"16@?0@"<MTSleepSession>"8
healthStore
T@"HKHealthStore",&,N,V_healthStore
archivedSessionDataPath
T@"NSString",C,N,V_archivedSessionDataPath
archivedSessionDataFile
T@"NSString",C,N,V_archivedSessionDataFile
sleepSessionTracker
T@"<MTSleepSessionTracker>",&,N,V_sleepSessionTracker
HKHealthStore
Class getHKHealthStoreClass(void)_block_invoke
MTSleepSessionManager.m
HKObjectType
Class getHKObjectTypeClass(void)_block_invoke
HKCategoryTypeIdentifier getHKCategoryTypeIdentifierSleepAnalysis(void)
HKCategoryTypeIdentifierSleepAnalysis
HKCategorySample
Class getHKCategorySampleClass(void)_block_invoke
HKDevice
Class getHKDeviceClass(void)_block_invoke
com.apple.MTMetrics.serialqueue
%@.%@
com.apple.mobiletimer-framework.preferences-and-notifications-changed
com.apple.mobiletimer-framework.preferences-changed
com.apple.mobiletimer-framework.local-notifications-changed
bundleIdentifier
refreshManagers
TB,N,V_refreshManagers
B16@?0q8
B16@?0d8
com.apple.mobiletimer.MTUserDefaults
Distributed
userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
T@"NSMutableDictionary",&,N,V_observers
ReleaseType
Vendor
v16@?0@"<MTSensitiveUIStateObserver>"8
notifyToken
Ti,N,V_notifyToken
hideSensitiveUI
TB,N,V_hideSensitiveUI
needPrefsUpdate
TB,N,V_needPrefsUpdate
lock
T{os_unfair_lock_s=I},N,V_lock
com.apple.NanoAlarm
com.apple.private.NanoTimer
com.apple.private.OldNanoTimer
assistant_service
@"NSDate"8@?0
MTUtilities.m
date can't be nil
en_US
@"NSDate"16@?0@"NSDate"8
clock-worldclock
clock-alarm
clock-sleep-alarm
clock-stopwatch
clock-timer-running
clock-timer
v16@?0@"MTTimer"8
@"NAFuture"16@?0@"NSString"8
%@:%@
default
list
lastTimer
mtClockAppSection
Ti,R,N
mtIsList
mtIsForLastTimer
mtID
internalScheduler
T@"<NAScheduler>",R,N,V_internalScheduler
internalQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_internalQueue
com.apple.%@.serial
HOURS_MINUTES_AHEAD
HOURS_MINUTES_BEHIND
DAY_FORMAT_HOURS_MINUTES_AHEAD
DAY_FORMAT_HOURS_MINUTES_BEHIND
DAY_FORMAT_HOURS_AHEAD
HOURS_AHEAD
DAY_FORMAT_MINUTES_AHEAD
DAY_FORMAT_MINUTES_BEHIND
MINUTES_AHEAD
MINUTES_BEHIND
DAY_FORMAT_ONE_HOUR_AHEAD
DAY_FORMAT_ONE_HOUR_BEHIND
ONE_HOUR_AHEAD
ONE_HOUR_BEHIND
DAY_FORMAT_HOURS_BEHIND
HOURS_BEHIND
_SPACE
clock-worldclock:default
city
languageCode
timeZone
countryCode
name
unlocalizedName
countryName
unlocalizedCountryName
America/Los_Angeles
Cupertino
%@ %@, %@ || %@ %@ || %@, %@
x-apple-clock:world-clock?
alcid=%d
ccid=
properties
alCity
T@"ALCity",R,N,V_alCity
alCityId
T@"NSNumber",R,N
unlocalizedCityName
idUrl
[%@] title: [%@] fireDate: [%@] identifier: [%@] clockAppSectionURL: [%@]
fireDate
T@"NSDate",C,N,V_fireDate
T@"NSString",C,N,V_identifier
clockAppSectionURL
T@"NSURL",R,C,N
com.apple.MTNextAlarmManager.accessqueue
nextAlarms
T@"NSSet",&,N,V_nextAlarms
T@"MTAlarmManager",&,N,V_alarmManager
updateHandler
T@?,C,N,V_updateHandler
timeZoneName
T@"NSDateComponents",C,D,N
currentTime
timeZoneDisplayName
timeZoneAbbreviation
timeZoneOffset
timeZoneOffsetFromGMT
isDaylightSavingTime
MTBedtimeExpirationDuration
v16@?0@"UNUserNotificationCenter"8
ALARM_STOP_ACTION
ALARM_SNOOZE_ACTION
SNOOZE_STOP
TIMER_STOP_ACTION
TIMER_REPEAT_ACTION
BEDTIME_GO_TO_BED_ACTION
BEDTIME_SNOOZE_ACTION
B16@?0@"UNNotification"8
@16@?0@"UNNotification"8
TIME_FOR_BED_TITLE
TIME_FOR_BED_ALARM_ON_MESSAGE_FORMAT
_SINGULAR
TIME_FOR_BED_ALARM_OFF_MESSAGE
ALARM_SNOOZING_TITLE
Unexpected trigger type %ld for scheduled alarm %@
Unexpected trigger type %ld for scheduled timer %@
notificationCenters
T@"NSDictionary",&,N,V_notificationCenters
actionHandler
T@"MTUserNotificationActionDispatcher",&,N,V_actionHandler
TUCallCenter
Class getTUCallCenterClass(void)_block_invoke
MTUserNotificationCenter.m
void *TelephonyUtilitiesLibrary(void)
/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
/System/Library/PrivateFrameworks/TelephonyUtilities.framework/Contents/MacOS/TelephonyUtilities
Boolean MTMRMediaRemoteSendCommand(MRMediaRemoteCommand, CFDictionaryRef)
MRMediaRemoteSendCommand
T@"MTTimer",&,N,V_timer
MTTimerCategory
MTTimerDismissAction
MTTimerRepeatAction
com.apple.mobiletimer.start-timer
com.apple.mobiletimer.stop-timer
fromObject
toObject
<%@:%p %@ = %@ (was %@)>
property
T@"NSString",C,N,V_property
changedValue
T@,&,N,V_changedValue
originalValue
T@,&,N,V_originalValue
v16@?0@"MTChange"8
@24@?0@"NSString"8@"MTChange"16
<%@:%p %@ >
changedProperties
T@"NSSet",&,N,V_changedProperties
changeDictionary
T@"NSDictionary",&,N,V_changeDictionary
changes
sleepModeEndDate
T@"NSDate",R,N,V_sleepModeEndDate
SignificantTimeChange
com.apple.MTTimeListener.access-queue
v16@?0@"<MTTimeObserver>"8
MobileTimer
Agent
Sync
Sleep
Activity
com.apple.mobiletimer.logging
Td,N,V_dismissDate
-[MTCreateSingleTimerIntentHandler resolveLabelForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]
-[MTCreateSingleTimerIntentHandler resolveDurationForCreateTimer:withCompletion:]_block_invoke
-[MTCreateSingleTimerIntentHandler confirmCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler handleCreateTimer:completion:]
-[MTCreateSingleTimerIntentHandler _responseToCreateTimerIntent:withCreatedTimer:error:dryRun:]
com.apple.mobiletimer-framework.preferences-and-notifications-changed-externally
com.apple.mobiletimer-framework.preferences-changed-externally
com.apple.mobiletimer-framework.local-notifications-changed-externally
com.apple.MTGCDTimer
kMTScheduleTaskOSTransactionId
kMTScheduleTaskGroupOSTransactionId
<%@:%p %@ delay:%f>
delay
Td,N,V_delay
completableBlock
T@?,C,N,V_completableBlock
T@"MTGCDTimer",&,N,V_timer
<%@:%p tasks: %@>
tasks
T@"NSArray",C,N,V_tasks
completionBlock
T@?,C,N,V_completionBlock
MTAgeDidChange
SignificantTimeChangeNotification
T@"NSNumber",&,N,V_age
characteristicUpdateToken
Ti,N,V_characteristicUpdateToken
char *getkHKUserCharacteristicsDidChangeNotification(void)
MTAgeObserver.m
kHKUserCharacteristicsDidChangeNotification
Tq,N,V_type
T@"NSString",C,N,V_name
powerAssertion
T@"MTPowerAssertion",&,N,V_powerAssertion
assertionTimeout
Td,R,N,V_assertionTimeout
T@"NSString",R,N,V_name
v32@?0@"NSArray"8@"MTTimer"16@"NSError"24
T@"MTTimer",&,N,V_nextTimer
MTTimerTimeInterval
MTTimerTimeDate
remainingTime
Td,R,N
Td,R,N,V_remainingTime
T@"NSDate",C,N,V_date
MTTimerManagerTimersAdded
MTTimerManagerTimersUpdated
MTTimerManagerTimersRemoved
MTTimerManagerTimerFired
MTTimerManagerFiringTimerChanged
MTTimerManagerFiringTimerDismissed
MTTimerManagerNextTimerChanged
MTTimerManagerTimersChanged
MTTimerManagerStateReset
MTTimerManagerPreferencesChanged
NextTimer
com.apple.mobiletimerd.MTTimerManager
@"MTXPCConnectionProvider"16@?0@"MTTimerManager"8
v16@?0@"<MTTimerServer>"8
v20@?0@?<v@?@"NSArray"@"MTTimer"@"NSError">8B16
Timer is running but doesn't have a next trigger.
v32@?0@"MTTimer"8Q16^B24
MTTimerManager.m
State can't be unknown
@"NAFuture"16@?0@"MTTimer"8
%@ cannot restart a timer (%@) that isn't stopped.
Start timer isn't finished, but expected it to be
v24@?0@"NSNull"8@"NSError"16
Update Timer isn't finished, but expected it to be
notificationObject
T@,R,N
T@"NSNotificationCenter",R,N
T@"MTTimerManagerExportedObject",&,N,V_exportedObject
connectionProvider
T@"MTXPCConnectionProvider",R,N,V_connectionProvider
cache
T@"MTTimerCache",&,N,V_cache
T@"NSNotificationCenter",&,N,V_notificationCenter
timerManager
T@"MTTimerManager",R,W,N,V_timerManager
-[MTResetTimerIntentHandler resolveTargetTimerForResetTimer:withCompletion:]
-[MTResetTimerIntentHandler confirmResetTimer:completion:]
-[MTResetTimerIntentHandler handleResetTimer:completion:]
-[MTResetTimerIntentHandler _responseToResetTimerIntent:withResetTimers:error:dryRun:]
MTObserverStore.m
observer cannot be nil
observersLock
T{os_unfair_lock_s=I},N,V_observersLock
T@"NSHashTable",&,N,V_observers
count
Date
UserVisible
eventName
T@"NSString",C,N,V_eventName
MTAlarmManagerAlarmsAdded
MTAlarmManagerAlarmsUpdated
MTAlarmManagerAlarmsRemoved
MTAlarmManagerNextAlarmChanged
MTAlarmManagerAlarmFired
MTAlarmManagerFiringAlarmDismissed
MTAlarmManagerFiringAlarmChanged
MTAlarmManagerAlarmsChanged
MTAlarmManagerStateReset
NextAlarm
com.apple.mobiletimer.MTAlarmManager
.siri_data_changed
com.apple.alarm.label
@"MTXPCConnectionProvider"16@?0@"MTAlarmManager"8
v16@?0@"<MTAlarmServer>"8
v20@?0@?<v@?@"NSArray"@"NSArray"@"MTAlarm"@"NSError">8B16
@"NSArray"40@?0@"NSArray"8@"NSArray"16@"MTAlarm"24@"NSError"32
MTAlarmManager.m
Expected alarm future to be finished.
Expected next alarm future to be finished.
B32@?0@"MTAlarm"8Q16^B24
v24@?0@"MTAlarm"8@"NSError"16
@"NAFuture"16@?0@"MTAlarm"8
T@"MTAlarmManagerExportedObject",&,N,V_exportedObject
T@"MTAlarmCache",&,N,V_cache
T@"MTAlarmManager",R,W,N,V_alarmManager
en_US_POSIX
yyyy-MM-dd-HH-mm
DND_BEDTIME_MORNING_GREETING
DND_BEDTIME_MORNING_GREETING_LOWERCASE
DND_BEDTIME_AFTERNOON_GREETING
DND_BEDTIME_AFTERNOON_GREETING_LOWERCASE
DND_BEDTIME_EVENING_GREETING
DND_BEDTIME_EVENING_GREETING_LOWERCASE
com.apple.mobiletimer-framework
Localizable_Burrito
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]
-[MTUpdateTimerIntentHandler _updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:]_block_invoke
B32@?0@"<MTTimerIntentSupport>"8Q16^B24
Failed to update%@ timer %@ from timer manager %@ due to ambiguity between timers %@
v32@?0@"NSObject<MTTiming>"8Q16^B24
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]
@16@?0@"<MTTimerIntentSupport>"8
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke_2
-[MTSearchTimerIntentHandler handleSearchForTimers:completion:]_block_invoke
com.apple.MTAlarmIntentDonor.access-queue
alarmsByID
T@"NSMutableDictionary",R,N,V_alarmsByID
com.apple.MTLegacyManager
com.apple.springboard
UpgradeAttempted
SBCountdownTimerSoundIdentifier
AlarmList
allows snooze
sound path
setting
SBCountdownTimerTimeIdentifier
timerSleepiPod
timerSound
SleepAlarm
TIMER_INTERVAL
AlarmsLastModified
T@"NSObject<OS_dispatch_queue>",&,N,V_serializer
scheduledNotifications
T@"NSArray",&,N,V_scheduledNotifications
T@"NSArray",&,N,V_alarms
T@"Alarm",&,N,V_sleepAlarm
defaultDuration
Td,N,V_defaultDuration
defaultSound
T@"NSString",C,N,V_defaultSound
loaded
TB,N,V_loaded
purged
TB,N,V_purged
void MTGSSendAppPreferencesChanged(CFStringRef, CFStringRef)
MTLegacyManager.m
GSSendAppPreferencesChanged
void *GraphicsServicesLibrary(void)
/System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
/System/Library/PrivateFrameworks/GraphicsServices.framework/Contents/MacOS/GraphicsServices
MTXPCConnectionListenerProvider.m
com.apple.MTXPCConnectionListenerProvider.serialqueue
v16@?0@"MTXPCClientInfo"8
clients
T@"NSMutableSet",&,N,V_clients
connectionListener
T@"NSXPCListener",&,N,V_connectionListener
connectedClients
com.apple.MTAgent
Launched
launchDate
T@"NSDate",&,N,V_launchDate
systemReady
TB,N,V_systemReady
notificationManager
T@"MTAgentNotificationManager",&,N,V_notificationManager
systemStateListener
T@"MTSystemStateListener",&,N,V_systemStateListener
languageChangeListener
T@"MTLanguageChangeListener",&,N,V_languageChangeListener
diagnostics
T@"MTAgentDiagnosticListener",&,N,V_diagnostics
timeListener
T@"MTTimeListener",&,N,V_timeListener
alarmServer
T@"MTAlarmServer",&,N,V_alarmServer
alarmScheduler
T@"MTAlarmScheduler",&,N,V_alarmScheduler
alarmSnapshot
T@"MTAlarmSnapshot",&,N,V_alarmSnapshot
timerServer
T@"MTTimerServer",&,N,V_timerServer
timerScheduler
T@"MTTimerScheduler",&,N,V_timerScheduler
timerSnapshot
T@"MTTimerSnapshot",&,N,V_timerSnapshot
T@"<MTNotificationCenter>",&,N,V_notificationCenter
alarmIntentDonor
T@"MTAlarmIntentDonor",&,N,V_alarmIntentDonor
timerIntentDonor
T@"MTTimerIntentDonor",&,N,V_timerIntentDonor
coreDuetMonitor
T@"MTCoreDuetMonitor",&,N,V_coreDuetMonitor
T@"MTSleepCoordinator",&,N,V_sleepCoordinator
sleepSessionManager
T@"MTSleepSessionManager",&,N,V_sleepSessionManager
T@"MTSleepSessionTracker",&,N,V_sleepSessionTracker
alarmSyncDataModel
T@"MTAlarmSyncDataModel",&,N,V_alarmSyncDataModel
sleepManager
T@"MTSleepManager",R,N,V_sleepManager
v16@?0@"NSObject<MTAlarmDataSourceObserver>"8
v16@?0@"NSNotification"8
MTSyncStoragePendingChanges
MTSyncStorageVersion
com.apple.MTSyncStore.archive-queue
archiverScheduler
T@"<NAScheduler>",R,N,V_archiverScheduler
syncDataPath
T@"NSString",C,N,V_syncDataPath
syncDataFile
T@"NSString",C,N,V_syncDataFile
T@"NSMutableArray",&,N,V_changes
T@"MTStateMachine",W,N,V_stateMachine
latitude
abbreviation
longditude
; currentState: %@>
currentState
T@"MTStateMachineState",&,N,V_currentState
T@"<MTStateMachineDelegate>",W,N,V_delegate
infoProvider
T@"<MTStateMachineInfoProvider>",W,N,V_infoProvider
com.apple.MTSleepMetrics.serialqueue
v16@?0@"<MTSleepDataObserver>"8
v32@?0@"HKObserverQuery"8@?<v@?>16@"NSError"24
v32@?0@"HKQuery"8@"NSArray"16@"NSError"24
healthObserver
T@"HKObserverQuery",&,N,V_healthObserver
sleepDataObservers
T@"MTObserverStore",&,N,V_sleepDataObservers
MTSleepMetrics.m
HKObserverQuery
Class getHKObserverQueryClass(void)_block_invoke
_HKQueryUtilities
Class get_HKQueryUtilitiesClass(void)_block_invoke
HKSleepQuery
Class getHKSleepQueryClass(void)_block_invoke
MTPairedDevicePreferencesChanged
BulletinDistributorBBSectionsDidChangeNotification
com.apple.bulletinboard.apps
BPSNanoBulletinShowsAlerts
npsManager
T@"NPSManager",&,N,V_npsManager
pushAlertsEnabled
TB,R,N,V_pushAlertsEnabled
T@"<MTTimerManagerIntentSupport>",R,N
MTTimerLastTriggerDate
com.apple.MTTimerScheduler.timer-event
com.apple.MTTimerTask.fire
com.apple.MTTimerTask.reschedule
com.apple.MTTimerScheduler.access-queue
Scheduled timers
MTTimerScheduler
T@"<MTTimerStorage>",&,N,V_storage
scheduledTimers
T@"MTScheduledList",R,N,V_scheduledTimers
T@"<MTTimerSchedulerDelegate>",W,N,V_delegate
id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)
NSObject+NAAdditions.h
Expected class of %@ but was %@
<%@: %p %@ >
SEND
RECV
session
T@"SYSession",&,N,V_session
request
T@"MTCompanionSyncRequest",&,N,V_request
pendingChanges
T@"NSArray",&,N,V_pendingChanges
processedChanges
T@"NSMutableArray",&,N,V_processedChanges
lastIndex
TQ,N,V_lastIndex
T@"<MTSyncServiceDelegate>",W,N,V_delegate
com.apple.private.mobiletimerd
com.apple.MobileTimer.alarmserver
com.apple.MobileTimer.timerserver
com.apple.mobile.keybagd.first_unlock
MTDeviceHasBeenUnlockedForFirstTime
com.apple.MTDeviceUtilities.work-queue
Unlocked since boot
workScheduler
T@"<NAScheduler>",&,N,V_workScheduler
internalHasBeenUnlockedSinceBoot
TB,N,V_internalHasBeenUnlockedSinceBoot
MTSleepManagerSettingsDidChange
MTNeedsSleepMigration
@"HKSPSleepStore"24@?0@"NSString"8@"HKHealthStore"16
@"HKSPFeatureAvailabilityStore"16@?0@"HKSPSleepStore"8
%@-updateSleepAlarms
@16@?0@"HKSPSleepScheduleOccurrence"8
v16@?0@"MTMutableAlarm"8
v24@?0@"HKSPSleepSettings"8@"NSError"16
sleepStoreProvider
T@?,C,N,V_sleepStoreProvider
sleepStore
T@"HKSPSleepStore",&,N,V_sleepStore
featureStore
T@"HKSPFeatureAvailabilityStore",&,N,V_featureStore
MTSleepManager.m
HKFeatureIdentifier getHKFeatureIdentifierSleepCoaching(void)
HKFeatureIdentifierSleepCoaching
watch-companion
syncStatusProviderDelegate
T@"<MTSyncStatusProviderDelegate>",W,N
T@"<MTSyncStatusProviderDelegate>",W,N,V_syncStatusProviderDelegate
CURRENT_TIMER
MTTimerDefaultDuration
com.apple.mobiletimer.MTTimerDidFireNotification
x-apple-clock:timer?id=
TIMER_DEFAULT_TITLE
<%@:%p TimerID: %@, Title: %@, state:%@, duration:%d, firedDate: %@, dismissedDate: %@, sound: %@, siriContext: %@>
Stopped
Running
Paused
Unknown
Timer duration can only be modified while stopped.
Timer duration must be positive.
Unexpected timer state: %ld
fireTime
T@"<MTTimerTime>",C,N,V_fireTime
TQ,N,V_state
Td,N,V_duration
siriContext
T@"NSDictionary",C,N,V_siriContext
timerIDString
T@"NSUUID",R,N,V_timerID
timerURL
hasDefaultTitle
T@"NSDate",C,D,N
T@"NSDictionary",C,D,N
Td,D,N
com.apple.MTAlarmServer.wakeup
com.apple.MTAlarmServer.ready
com.apple.mobiletimerd.MTAlarmServer
com.apple.MTAlarmServer.ready-queue
v16@?0@"<MTAlarmClient>"8
Alarm system ready
Alarm clients
processName
connectionListenerProvider
T@"MTXPCConnectionListenerProvider",R,N,V_connectionListenerProvider
TB,R,N,GisSystemReady,V_systemReady
MTTimerIntentHandlerErrorDomain
v32@?0@"<MTTimerIntentSupport>"8Q16^B24
-[MTTimerIntentHandler _matchTimersFromIntentsTimer:excludeStoppedTimers:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke
-[MTTimerIntentHandler _genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:]_block_invoke_2
T@"<MTTimerManagerIntentSupport>",&,N,V_timerManager
timerManagerProvider
T@"<MTTimerManagerProviding>",W,N,V_timerManagerProvider
q24@?0@"NSObject<MTTimerIntentSupport>"8@"NSObject<MTTimerIntentSupport>"16
com.apple.MTCompanionSyncRequest.serialqueue
v16@?0@?<v@?@"NSError">8
DELTA
requestType
TQ,N,V_requestType
completed
TB,N,V_completed
error
T@"NSError",&,N,V_error
completionBlocks
T@"NSMutableArray",&,N,V_completionBlocks
MTTriggerType
MTTriggerDate
Alert
Snoozed
Go To Bed
Snoozed Go To Bed
Wake Up
Snoozed Wake Up
Snooze Countdown
Bedtime
Waketime
isPastOverride
triggerType
TQ,N,V_triggerType
triggerDate
T@"NSDate",C,N,V_triggerDate
isPastOverrideEvent
TB,R,N,V_isPastOverrideEvent
isForSnooze
isForGoToBed
isForAlert
isForNotification
isScheduled
isEvent
isBedtimeRelated
isWakeUpRelated
com.apple.MTTimerServer.wakeup
com.apple.MTTimerServer.ready
com.apple.mobiletimerd.MTTimerServer
com.apple.MTTimerServer.ready-queue
v16@?0@"<MTTimerClient>"8
Timer system ready
Timer clients
<%@:%p %@ snoozeDate: %@ (%@)>
snoozeDate
T@"NSDate",&,N,V_snoozeDate
Td,N,V_snoozeDate
MTSyncDismiss+ProtoBuffer.m
MTAlarmDataVersion
MTAlarmHour
MTAlarmMinute
MTAlarmBedtimeHour
MTAlarmBedtimeMinute
MTAlarmBedtimeReminderMinutes
MTAlarmBedtimeDoNotDisturb
MTAlarmBedtimeDoNotDisturbOptions
MTAlarmSleepModeDetectionKey
MTAlarmSleepTrackingKey
MTAlarmDay
MTAlarmMonth
MTAlarmYear
MTAlarmOverriddenForDate
MTAlarmTimeInBedTrackingKey
MTAlarmSleepScheduleKey
MTAlarmBedtimeForSleepTracking
MTAlarmWakeupForSleepTracking
MTAlarmRepeatSchedule
MTAlarmEnabled
MTAlarmActive
MTAlarmPlayOptions
MTAlarmFiring
MTAlarmIsSleep
MTAlarmAllowsSnooze
MTAlarmSnoozeFireDate
MTAlarmBedtimeSnoozeFireDate
MTAlarmFireDate
MTAlarmDismissDate
MTAlarmLastModifiedDate
MTAlarmBedtimeFireDate
MTAlarmBedtimeDismissDate
MTAlarmBedtimeDismissAction
MTAlarmKeepOffUntilDate
MTAlarmTitle
MTAlarmSound
MTAlarmIsNew
MTAlarmOnboardingVersion
handler
T@?,C,N,V_handler
T@"MTOSTransaction",&,N,V_transaction
notification
T^{__CFUserNotification=},N,V_notification
v16@?0@"NSString"8
notifications
T@"NSMutableDictionary",&,N,V_notifications
B16@?0@"MTCFUserNotification"8
MTTimerIntentSupportSiriContextTimerTypeKey
T@"NSUUID",R,N
com.apple.MTSyncChangeQueue.serial
Q16@?0@"<MTSyncable>"8
MTSyncChangeQueue.m
Undetermined enqueue result returned
Q24@?0@"<MTSyncable>"8@"<MTSyncable>"16
Invalid conflict result returned
changesLoaded
T@"NSObject<OS_dispatch_group>",&,N,V_changesLoaded
changeStore
T@"<MTSyncChangeStore>",&,N,V_changeStore
changeQueue
T@"NSMutableArray",&,N,V_changeQueue
com.apple.private.alloy.mobiletimersync
com.apple.MTCompanionSyncService.serialqueue
<%@: %p master: %d >
T@"<MTSyncServiceDelegate>",W,N
service
T@"SYService",&,N,V_service
sendingSession
T@"MTCompanionSyncSession",&,N,V_sendingSession
receivingSession
T@"MTCompanionSyncSession",&,N,V_receivingSession
pendingRequests
T@"NSMutableDictionary",&,N,V_pendingRequests
retryTimer
T@"MTExponentialBackOffTimer",&,N,V_retryTimer
SYService
Class getSYServiceClass(void)_block_invoke
MTCompanionSyncService.m
void *CompanionSyncLibrary(void)
/System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync
/System/Library/PrivateFrameworks/CompanionSync.framework/Contents/MacOS/CompanionSync
SYServiceOption getSYServiceOptionDiskBufferProtectionClass(void)
SYServiceOptionDiskBufferProtectionClass
NSString *getIDSSendMessageOptionBypassDuetKey(void)
IDSSendMessageOptionBypassDuetKey
void *IDSLibrary(void)
/System/Library/PrivateFrameworks/IDS.framework/IDS
/System/Library/PrivateFrameworks/IDS.framework/Contents/MacOS/IDS
<%@:%p ProcessName: %@ ProcessID: %@ Connected: %@ Connection: %@>
%@-%d
connection
T@"NSXPCConnection",&,N,V_connection
clientLink
T@,&,N,V_clientLink
connectedDate
T@"NSDate",&,N,V_connectedDate
processID
T@"NSString",R,C,N
hasAlarmID
hasHour
hasMinute
hasTitle
hasAllowsSnooze
hasDaySetting
hasSound
T@"MTPBSound",&,N,V_sound
hasIsSleepAlarm
hasBedtimeHour
TI,N,V_bedtimeHour
hasBedtimeMinute
TI,N,V_bedtimeMinute
hasBedtimeReminderMinutes
TI,N,V_bedtimeReminderMinutes
hasRevision
TI,N,V_revision
hasLastModifiedDate
Td,N,V_lastModifiedDate
hasSnoozeFireDate
Td,N,V_snoozeFireDate
hasBedtimeSnoozeFireDate
Td,N,V_bedtimeSnoozeFireDate
hasIsEnabled
TB,N,V_isEnabled
hasFiredDate
Td,N,V_firedDate
hasDismissedDate
Td,N,V_dismissedDate
hasPlayOptions
TI,N,V_playOptions
hasSleepMode
hasSleepTracking
hasSleepSchedule
hasOnboardingVersion
TI,N,V_onboardingVersion
hasSleepModeOptions
TI,N,V_sleepModeOptions
hasTimeInBedTracking
hasDismissedAction
TI,N,V_dismissedAction
hasBedtimeFiredDate
Td,N,V_bedtimeFiredDate
hasBedtimeDismissedDate
Td,N,V_bedtimeDismissedDate
hasBedtimeDismissedAction
TI,N,V_bedtimeDismissedAction
hasKeepOffUntilDate
Td,N,V_keepOffUntilDate
asleepState
T@"MTSleepCoordinatorStateMachineAsleepState",&,N,V_asleepState
awakeState
T@"MTSleepCoordinatorStateMachineAwakeState",&,N,V_awakeState
disabledState
T@"MTSleepCoordinatorStateMachineDisabledState",&,N,V_disabledState
T@"INObject",C,D,N
dateComponents
requiresAppLaunch
Tq,D,N
T@"MTIntentAlarm",C,D,N
operation
value
@33
 @ff&@
,@ffF@
L@33S@
softlink:r:path:/System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:r:path:/System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync
softlink:r:path:/System/Library/PrivateFrameworks/IDS.framework/IDS
MTPauseResumeTimerIntentHandler
INPauseTimerIntentHandling
NSObject
INResumeTimerIntentHandling
MTTimeInBedSession
MTSleepSession
NSSecureCoding
NSCoding
ProtoBuffer
MTProtoBufferSerializable
MTSerializable
Alarm
MTXPCConnectionInfo
MTToggleAlarmIntentHandler
MTEnableAlarmIntentHandling
MTDisableAlarmIntentHandling
MTToggleAlarmIntentHandling
MTLanguageChangeListener
MTAgentNotificationListener
MTScheduledList
MTSleepCoordinatorStateMachineAsleepState
MTInMemoryDefaults
MTPersistence
ClocksIntent
ClocksIntentResponse
MTTimerStorage
MTTimerSchedulerDelegate
MTAgentDiagnosticDelegate
MTAgentNotificationManager
MTDictionarySerializable
NSCopying
MTStorageWriter
MTSerializer
MTStorageReader
MTStorageReaderV1
MTAlarmSnapshot
MTAlarmObserver
MTAlarmSyncDataModel
MTSource
MTSyncDataModel
MTSleepCoordinatorStateMachineState
MTSleepCoordinatorStateMachineEventHandler
MTStateMachineEventHandler
MTPairedDeviceListener
MTUserNotificationAppDelegate
UNUserNotificationCenterDelegate
MTPBAlarm
MTXPCConnectionProvider
MTSleepModeStateMachineUserRequestedOffState
ClockManager
MTAnalytics
IntentsSupport
MTTimerManagerIntentSupport
MTSleepModeMonitor
DNDModeAssertionUpdateListener
MTSleepModeStateMachineInfoProvider
MTStateMachineInfoProvider
MTSleepModeStateMachineDelegate
MTStateMachineDelegate
MTSleepObserver
MTTimeObserver
MTSleepModeManager
MTSleepModeStateMachine
MTSleepModeStateMachineEventHandler
MTDateFormatting
MTSyncServiceManager
MTSyncStatusProviderDelegate
MTSyncServiceDelegate
MTSyncManager
MTCreateAlarmIntentHandler
MTCreateAlarmIntentHandling
MTSleepSessionTracker
MTUserNotificationActionDispatcher
MTPBAlarmDelete
MTUpdateAlarmIntentHandler
MTUpdateAlarmIntentHandling
MTSleepModeStateMachineInitialState
ClocksSingleIntent
ClocksSingleIntentResponse
MTAlarmStorage
MTAlarmScheduleDelegate
MTSpringboardStartMonitor
MTCreateTimerIntentHandler
INCreateTimerIntentHandling
MTPBSound
MTSound_Notifications
MTAlarmScheduler
MTScheduledListDelegate
MTPBAlarmAdd
MTScheduledObject
NAEquatable
NAHashable
MTScheduling
MTScheduleable
MTExponentialBackOffTimer
MTCompanionSyncSerializer
SYChangeSerializer
MTAlarmIntent
MTAgentDiagnosticListener
MTTimeInBedSessionTracker
MTCoreDuetMonitor
MTTimerIntentDonor
MTTimerObserver
MTAlarmCache
MTDistributedNotificationPoster
MTNotificationCenter
MTSleepModeStateMachineOffState
MTSystemStateListener
Properties
MTSyncChangeArchiver
MTSyncChangeUnarchiver
WorldClockManager
MTSleepCoordinator
MTSleepCoordinatorStateMachineDelegate
MTSleepCoordinatorStateMachineInfoProvider
SleepCoordinator
MTOSTransaction
CompanionSync
SYChange
MTDeleteTimerIntentHandler
INDeleteTimerIntentHandling
MTSetTimerAttributeIntentHandler
INSetTimerAttributeIntentHandling
MTPBSyncMessage
MTSound
WorldClockPreferences
MTSyncDismiss
MTSyncable
MTSyncableObject
MTAlarmIntentHandler
MTSnapshotScheduler
MTAlarmMigrator
MTAlarm
BSDescriptionProviding
NSMutableCopying
MTMutableAlarm
MTSleepSessionManager
MTSleepSessionTrackerDelegate
MTMetrics
NotificationRelay
MTTimerSnapshot
MTUserDefaults
MTSensitiveUIMonitor
MTUtilities
_MTSerialQueueScheduler
MTScheduler
NAScheduler
MTExpiringFuture
WorldClockCity
MTNextAlarm
MTNextAlarmManager
MTWorldClock
MTWorldClockResolutionResult
MTUserNotificationCenter
MTTimerMigrator
MTChange
MTChangeSet
ChangeSet
MTSleepModeStateMachineOnState
MTDictionarySerializer
MTDictionaryDeserializer
MTTimeListener
MTSleepCoordinatorStateMachineDisabledState
MTPBDismissAction
MTCreateSingleTimerIntentHandler
DistributedNotificationPoster
MTGCDTimer
MTGCDTaskScheduler
MTTaskScheduler
MTTask
MTTaskGroup
MTAgeObserver
MTAgentNotification
MTNotification
MTSleepModeStateMachineWaitingState
MTGetAlarmsIntentHandler
MTGetAlarmsIntentHandling
MTPowerAssertion
MTTimerCache
MTTimerTime
MTTimerTimeInterval
MTTimerDate
MTTimerManager
MTUserDefaultNotificationObserver
MTTimerManagerExportedObject
MTTimerClient
MTResetTimerIntentHandler
INResetTimerIntentHandling
MTObserverStore
MTXPCScheduler
MTSchedulingDelegate
MTAlarmManager
MTAlarmManagerExportedObject
MTAlarmClient
MTNotifiying
Sleep
Notification
MTPBAlarmState
MTUpdateTimerIntentHandler
MTSearchTimerIntentHandler
INSearchForTimersIntentHandling
MTSleepModeStateMachineState
MTAlarmIntentDonor
MTLegacyManager
MTXPCConnectionListenerProvider
NSXPCListenerDelegate
MTAgent
MTSystemStateDelegate
MTAlarmDataSource
MTPersistentSyncChangeStore
MTSyncChangeStore
MTInMemorySyncChangeStore
MTStateMachineState
MTCity
MTCityResolutionResult
MTStateMachine
MTSleepMetrics
MTPairedDevicePreferences
MTTimerManagerProviding
MTSleepUtilities
MTTimerScheduler
MTCompanionSyncSession
SYSessionDelegate
MTAlarmServer
MTXPCServer
MTTimerServer
MTAdditions
MTDeviceListener
MTPBAlarmUpdate
MTSleepManager
HKSPSleepStoreObserver
MTCompanionSyncStatusProvider
MTPairedDeviceObserver
MTSyncStatusProvider
MTTimer
MTMutableTimer
MTTimerIntentHandler
MTCompanionSyncRequest
MTSyncToken
MTTrigger
MTSleepCoordinatorStateMachineAwakeState
MTSyncSnooze
MTPBSnoozeAction
MTCFUserNotification
MTCFUserNotificationPoster
MTTimerIntentSupport
MTSyncChangeQueue
MTCompanionSyncService
SYServiceDelegate
MTSyncService
MTXPCClientInfo
MTPBAlarmProperties
MTSleepCoordinatorStateMachine
MTCreateAlarmIntent
MTCreateAlarmIntentResponse
MTUpdateAlarmIntent
MTUpdateAlarmIntentResponse
MTEnableAlarmIntent
MTEnableAlarmIntentResponse
MTDisableAlarmIntent
MTDisableAlarmIntentResponse
MTToggleAlarmIntent
MTToggleAlarmIntentResponse
MTGetAlarmsIntent
MTGetAlarmsIntentResponse
MTAlarmStateResolutionResult
MTAlarmOperationResolutionResult
MTIntentAlarm
MTIntentAlarmResolutionResult
MTIntentRepeatDay
MTIntentRepeatDayResolutionResult
targetTimer
_timerFromIntentTargetTimer:defaultState:
setWithArray:
pauseMultiple
boolValue
successWithResolvedTimer:
_genericallyResolveTargetTimer:multiple:allowedTimerStatesForFollowup:completion:
successWithResolvedValue:
_handlePauseTimer:dryRun:completion:
state
setState:
_responseToPauseTimerIntent:withPausedTimers:error:dryRun:
_updateTimer:dryRun:allowMultiple:excludeStoppedTimers:filterBlock:updateBlock:completion:
setWithObjects:
resumeMultiple
_handleResumeTimer:dryRun:completion:
_responseToResumeTimerIntent:withResumedTimers:error:dryRun:
domain
isEqualToString:
code
initWithCode:userActivity:
stringWithFormat:
setPausedTimers:
setResumedTimers:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handlePauseTimer:completion:
confirmPauseTimer:completion:
resolveTargetTimerForPauseTimer:withCompletion:
resolvePauseMultipleForPauseTimer:withCompletion:
handleResumeTimer:completion:
confirmResumeTimer:completion:
resolveTargetTimerForResumeTimer:withCompletion:
resolveResumeMultipleForResumeTimer:withCompletion:
initWithStartDate:endDate:intervals:endReason:metadata:
init
startDate
encodeObject:forKey:
endDate
intervals
endReason
encodeInteger:forKey:
metadata
needsAdditionalProcessing
encodeBool:forKey:
decodeObjectOfClass:forKey:
arrayWithObjects:count:
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
decodeBoolForKey:
count
timeInBedSessionWithStartDate:endDate:intervals:endReason:metadata:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
sampleType
setNeedsAdditionalProcessing:
setStartDate:
setEndDate:
setIntervals:
setEndReason:
setMetadata:
.cxx_destruct
_needsAdditionalProcessing
_startDate
_endDate
_intervals
_endReason
_metadata
syncDate
timeIntervalSinceReferenceDate
setSyncDate:
syncIdentifier
setSyncID:
syncVersion
setSyncVersion:
snoozeDate
setSnoozeDate:
setSnoozeAction:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
hasSnoozeAction
snoozeAction
syncID
dateWithTimeIntervalSinceReferenceDate:
syncSnoozeOfObjectWithIdentifier:snoozeDate:date:version:
initFromDeserializer:
mtCoder
initWithData:
deserialize:
serializeWithSerializer:
serialize
data
unsignedLongLongValue
numberWithLongLong:
stringValue
initWithSettings:
distantPast
applySettings:
numberWithUnsignedInt:
dictionaryWithObjects:forKeys:count:
mutableCopy
objectForKey:
setObject:forKey:
unsignedIntValue
setHour:
setMinute:
setAllowsSnooze:
numberWithInt:
intValue
setSound:ofType:
setSoundVolume:
setVibrationID:
setTitle:
setDaySetting:
setIsSleepAlarm:
setBedtimeReminderMinutes:
integerValue
setBedtimeHour:
setBedtimeMinute:
dropEditingProxy
settings
isActive
setAlarmID:
alarmID
setAlarmIDURL:
hour
minute
daySetting
allowsSnooze
sound
soundType
vibrationID
title
addObject:
length
initWithCapacity:
verifyIdSetting:withMessageList:
verifyHourSetting:withMessageList:
verifyMinuteSetting:withMessageList:
verifyDaySetting:withMessageList:
countByEnumeratingWithState:objects:count:
date
defaultTimeZone
setYear:
setMonth:
setWeekdayOrdinal:
setWeekday:
alarmDidUpdate:
timeComparator
stringByAppendingString:
initWithString:
copy
hasPrefix:
numberWithBool:
removeObjectForKey:
numberWithInteger:
initWithArray:
floatValue
objectForKeyedSubscript:
sharedVibrationManager
defaultVibrationIdentifierForAlertType:
vibrationWithIdentifierIsValid:
bundleForClass:
localizedStringForKey:value:table:
soundVolume
verifySettings:
prepareEditingProxy
applyChangesFromEditingProxy
nowDateForOffsetCalculation
timeZoneForOffsetCalculation
_newBaseDateComponentsForDay:
refreshActiveState
markModified
compareTime:
alarmIDURL
bedtimeReminderMinutes
bedtimeHour
bedtimeMinute
repeats
repeatDays
uiTitle
alarmSoundIdentifier
alarmSoundType
setAlarmSoundIdentifier:ofType:
alarmSoundVolume
setAlarmSoundVolume:
editingProxy
isSnoozed
isSleepAlarm
lastModified
revision
delegate
setDelegate:
forceActiveForMigration
setForceActiveForMigration:
_hour
_minute
_daySetting
_allowsSnooze
_lastModified
_revision
_editingProxy
_pretendActiveIfProxy
_settings
_repeatDays
_vibrationID
_snoozed
_isSleepAlarm
_forceActiveForMigration
_soundType
_sound
_title
_delegate
_alarmID
_alarmIDURL
infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
initWithMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
protocol
machServiceName
infoForMachServiceName:remoteObjectInterface:options:
setMachServiceName:
remoteObjectInterface
setRemoteObjectInterface:
exportedObject
setExportedObject:
exportedObjectInterface
setExportedObjectInterface:
lifecycleNotification
setLifecycleNotification:
requiredEntitlement
setRequiredEntitlement:
options
setOptions:
_machServiceName
_remoteObjectInterface
_exportedObject
_exportedObjectInterface
_lifecycleNotification
_requiredEntitlement
_options
_alarmUserActivityWithEnableIntent:
_alarmUserActivityWithDisableIntent:
identifier
_toggleAlarm:alarmIDString:completion:
alarm
needsValue
alarmManager
alarmsIncludingSleepAlarm:
unsupported
addFailureBlock:
alarmIDString
na_firstObjectPassingTest:
intentAlarm
successWithResolvedAlarm:
addSuccessBlock:
successWithResolvedAlarmState:
operation
notRequired
na_map:
setAlarm:
successWithResolvedAlarmOperation:
UUIDString
errorWithDomain:code:userInfo:
futureWithError:
getEnableStateForAlarm:
futureWithNoResult
updateEnableStateForAlarm:enabled:
updateAlarm:
flatMap:
isEnabled
sleepSchedule
setEnabled:
setSleepSchedule:
mtUserActivityWithActivityType:
createUserInfoWithIntentName:alarmIDString:time:label:
setUserInfo:
confirmEnableAlarm:completion:
handleEnableAlarm:completion:
confirmDisableAlarm:completion:
handleDisableAlarm:completion:
handleToggleAlarm:completion:
resolveStateForToggleAlarm:withCompletion:
resolveAlarmForToggleAlarm:withCompletion:
provideAlarmOptionsCollectionForToggleAlarm:withCompletion:
confirmToggleAlarm:completion:
defaultAlarmForToggleAlarm:
provideAlarmOptionsForToggleAlarm:withCompletion:
resolveOperationForToggleAlarm:withCompletion:
confirmMTEnableAlarm:completion:
handleMTEnableAlarm:completion:
confirmMTDisableAlarm:completion:
handleMTDisableAlarm:completion:
liveDarwinNotifications
na_any:
_languageChangeNotification
_handleLanguageChanged
handlesNotification:ofType:
handleNotification:ofType:completion:
assertionTimeOutForNotification:ofType:
initWithDelegate:
array
sortUsingComparator:
_scheduledObjectComparator
_sortAndFilter:objectsToScheduleAhead:
trigger
triggerType
scheduleable
isSleepItem
isSingleTime
isItemEnabled
enumerateObjectsUsingBlock:
firstObject
mtGregorianCalendar
overridesScheduledObject:calendar:
triggerDate
upcomingTriggersAfterDate:
scheduledObjectForScheduleable:trigger:
scheduleOverridenForDate:
startOfDayForDate:
dateByAddingUnit:value:toDate:options:
isPastOverrideEvent
removeObjectsInArray:
isEqualToDate:
compare:
arrayWithArray:
addObjectsFromArray:
_sortAndFilter:
scheduledAlertsAndNotifications
scheduledObjects
mtIsBeforeOrSameAsDate:
_filterScheduledObjects:withBlock:
_dateIntervalFilter:
containsDate:
na_filter:
_nextScheduledObjectInSets:
mtIsBeforeDate:
_scheduledListForTriggerType:
scheduledTypeForTriggerType:
removeAllObjects
_unschedule:
_performScheduleChangingBlock:withCompletion:
allValues
_unscheduleObject:
shouldBeScheduled
_scheduleObject:
na_each:
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
nextScheduledAlertOrNotification
_sort:
scheduledListDidChange:withCompletion:
removeObject:
orderedScheduledAlerts
orderedScheduledNotifications
orderedScheduledEvents
numberOfScheduledAlerts
numberOfScheduledAlertsAndNotifications
scheduledAlerts
scheduledObjectsToFireBeforeDate:
scheduledObjectsToFireInInterval:
nextScheduledAlert
nextScheduledObject
nextScheduledObjectWithTriggerType:
reset
unschedule:
schedule:afterDate:withCompletion:
isScheduled:
setOrderedScheduledAlerts:
setOrderedScheduledNotifications:
setOrderedScheduledEvents:
scheduledAlertMap
setScheduledAlertMap:
_orderedScheduledAlerts
_orderedScheduledNotifications
_orderedScheduledEvents
_scheduledAlertMap
stateMachine
disabledState
stateMachineUserWentToBed:
didEnterWithPreviousState:
storage
numberWithFloat:
objectForKey:defaultValue:
floatForKey:
setFloat:forKey:
setStorage:
_storage
mainBundle
bundleIdentifier
setUserActivity:
setCode:
_code
sharedUserDefaults
initWithPersistence:
serialDispatchQueueSchedulerWithName:
mtMainThreadScheduler
initWithPersistence:migrator:serializer:callbackScheduler:currentDateProvider:
initWithCallbackScheduler:
dealloc
_loadTimersWithCompletion:
serializer
persistence
migrateFromOldStorage
timer
initForReadingFromData:error:
initWithEncodedDictionary:
decodeObjectForKey:
_queue_setAllTimers:source:persist:notify:
removeFromOldStorage
valueForKey:
performBlock:
currentTimerFromTimers:
defaultDuration
initWithState:duration:currentDateProvider:
_queue_addTimer:withCompletion:source:
scheduler
nextTimer
addObserver:
_queue_setAllTimers:source:
orderedTimers
_queue_persistTimers
_queue_sortTimers
_queue_notifyObserversForTimerRemoval:source:
_queue_notifyObserversForTimerAdd:source:
timerID
_createDefaultTimerIfNeededWithCompletion:
_queue_updateTimer:withCompletion:source:
_queue_removeTimer:withCompletion:source:
_queue_dismissTimerWithIdentifier:withCompletion:source:
_queue_repeatTimerWithIdentifier:withCompletion:source:
_queue_hasMatchingTimer:
timerIDString
_queue_timerMatchingTimerIdentifier:
stateChangeIsAllowableFromState:toState:
_queuePersistTimer:replacingTimer:
_queue_notifyObserversForTimerUpdate:source:
descriptionForState:
setDismissedDate:
_queue_notifyObserversForTimerDismiss:source:
timerByRestarting
_applyNecessaryChangesFromOldTimer:currentTimer:
setLastModifiedDate:
setFiredDate:
enumerateObserversWithBlock:
source:didAddTimers:
_queue_notifyObserversWithBlock:
source:didUpdateTimers:
source:didRemoveTimers:
source:didDismissTimer:
source:didFireTimer:
nextTimerDidChange:
encodedDictionary
_diagnosticTimerDictionary
lastModifiedDate
_diagnosticDictionaryForTimer:
firedDate
toneIdentifier
mediaItemIdentifier
vibrationIdentifier
_queue_notifyObserversForNextTimerChange:source:
_queue_notifyObserversForTimerFire:source:
scheduler:didChangeNextTimer:
scheduler:didFireTimer:
printDiagnostics
gatherDiagnostics
registerObserver:
getTimersWithCompletion:
addTimer:withCompletion:source:
updateTimer:withCompletion:source:
removeTimer:withCompletion:source:
dismissTimerWithIdentifier:withCompletion:source:
repeatTimerWithIdentifier:withCompletion:source:
setAllTimers:source:
timers
loadTimers
loadTimersSync
setScheduler:
_queue_removeAllTimersForSource:
handleF5Reset
handleMigrationFinish
setOrderedTimers:
currentDateProvider
migrator
setMigrator:
setSerializer:
observers
setObservers:
setPersistence:
_scheduler
_orderedTimers
_lastModifiedDate
_currentDateProvider
_migrator
_serializer
_observers
_persistence
listeners
_registerForLiveDarwinNotification:
_registerForDistributedNotifications
_registerForDarwinNotifications
_registerForAlarmNotifications
_registerForXPCStream:notificationType:
UTF8String
stringWithCString:encoding:
_handleNotificationWithName:type:
defaultAssertionTimeOutForNotification:type:
notificationWithType:name:powerAssertionTimeout:
releaseAssertion
_schedulingAssertionTimeout
integerForKey:isValid:defaultValue:
registerListener:
beginListening
setListeners:
_listeners
arrayWithObject:
lastObject
_encodeObject:forKey:
numberWithDouble:
_serializingProtocol
_dictionaryForProtocolObject:
dictionary
_encodeProtocolObject:forKey:
copyWithZone:
removeLastObject
mtType
encodeInt:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeFloat:forKey:
encodeDouble:forKey:
stack
setStack:
_stack
longLongValue
doubleValue
_decodeObject:
_dictionaryIsForSerializableObject:
_objectForDictionary:
allKeys
substringFromIndex:
_unwrap:
allowsKeyedCoding
decodeIntForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeFloatForKey:
decodeDoubleForKey:
initWithBundleID:
shouldScheduleSnapshotForAlarms:
scheduleSnapshot
source:didAddAlarms:
source:didUpdateAlarms:
source:didRemoveAlarms:
source:didSnoozeAlarm:snoozeAction:
source:didFireAlarm:triggerType:
source:didDismissAlarm:dismissAction:
source:didChangeNextAlarm:
initWithStorage:
schedulerWithDispatchQueue:
defaultBlock
initWithAlarmStorage:syncMetrics:syncServiceManagerBlock:serializer:serialQueue:
_setupSyncManagerWithBlock:
deviceSupportsSyncing
initWithSyncStatusProvider:
syncMetrics
initWithSyncService:syncStatusProvider:syncDataModel:syncMetrics:
startSyncService
stopSyncService
sourceIdentifier
dismissedDate
syncDismissOfObjectWithIdentifier:dismissDate:date:
syncChange:
snoozeFireDate
syncSnoozeOfObjectWithIdentifier:snoozeDate:date:
syncType
_performAction:
_performDismiss:
_performSnooze:
alarmStorage
dismissDate
dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
syncServiceManager
addEntriesFromDictionary:
isFromOtherDevice
donatesIntent
dontNotify
dataFileName
applyChange:
resetDataStore
initWithAlarmStorage:syncMetrics:
startSyncServices
stopSyncServices
setSyncServiceManager:
setAlarmStorage:
serialQueue
setSerialQueue:
setSyncMetrics:
_syncServiceManager
_alarmStorage
_serialQueue
_syncMetrics
sleepAlarm
updateStateForSleepAlarm:
determineNextStateForSleepAlarm:
enterState:
currentDate
isFiring
asleepState
nextTriggersAfterDate:includeBedtime:
mtIsAfterDate:
awakeState
confirmedLastBedtimeReminder
bedtimeDismissedDate
updateState
stateMachine:dismissWakeUpAlarm:dismissAction:
sleepTimeOutMinutes
stateMachine:shouldScheduleAlarmTimeoutForSecondsFromNow:
userWentToBed
userWokeUp
userBedTimeReached:
userWakeTimeReached:
userWakeUpAlarmFired
wakeUpAlarmTimedOut
_registerForLocalNotifications
updateActiveDeviceInfo
defaultCenter
didReceiveNotification:
addObserver:selector:name:object:
_handledNotifications
containsObject:
didReceiveNotificationNamed:
name
activePairedDeviceDidChange
notifyObserversWithBlock:
sharedInstance
getActivePairedDevice
setPairedDevice:
pairedDevice
valueForProperty:
hasActivePairedDeviceCheckSyncing:
initWithUUIDString:
supportsCapability:
sharedListener
pairedDeviceVersion
hasActivePairedDevice
hasActivePairedDeviceSupportingSyncing
serializerQueue
setSerializerQueue:
sleepEnabled
setSleepEnabled:
_sleepEnabled
_serializerQueue
_pairedDevice
currentNotificationCenter
request
content
categoryIdentifier
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
notificationCenter
setNotificationCenter:
_notificationCenter
dictionaryRepresentation
setAlarmProperties:
allocWithZone:
mergeFrom:
readFrom:
writeTo:
copyTo:
alarmProperties
_alarmProperties
initWithConnectionInfo:errorHandler:reconnectHandler:
_withLock:
invalidate
info
initWithMachServiceName:options:
_didInterruptConnection
setInterruptionHandler:
_didInvalidateConnection
setInvalidationHandler:
setExportedInterface:
resume
_connectionRebuildingIfNecessary
errorHandler
timeIntervalSinceDate:
_retryConnectionWithRecover:
reconnectHandler
finishWithResult:
finishWithError:
performRemoteBlock:withErrorHandler:
_retryConnection
recover:
addCompletionBlock:
performRemoteBlock:withErrorHandler:isSynchronous:
_syncRemoteObjectProxyWithErrorHandler:
_asyncRemoteObjectProxyWithErrorHandler:
connection
futureWithResult:
remoteObjectProxyWithErrorHandler:
_remoteObjectProxyWithXPCConnectionProvider:remoteObjectProxyProvider:errorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
providerWithConnectionInfo:errorHandler:
providerWithConnectionInfo:reconnectHandler:
didReceiveLifecycleNotification
performRemoteBlock:
setInfo:
setErrorHandler:
setReconnectHandler:
callbackScheduler
setCallbackScheduler:
lastLifecycleNotification
setLastLifecycleNotification:
connectionLock
_connection
_alive
_connectionLock
_info
_errorHandler
_reconnectHandler
_callbackScheduler
_lastLifecycleNotification
initWithStateMachine:
keepOffUntilDate
isEqualToState:
stateMachine:disengageSleepModeUserRequested:
isUserAsleep
stateMachine:keepSleepModeOffUntilDate:
updateModeKeepOffUntilDateIfNecessary
updateState:
initWithKeepOffUntilDate:stateMachine:
setKeepOffUntilDate:
_keepOffUntilDate
loadUserPreferences
saveAndNotifyForUserPreferences:localNotifications:
submitEvent:eventParameters:
incrementEventCount:
localeIdentifier
setNumberStyle:
stringByReplacingOccurrencesOfString:withString:
setPositiveFormat:
stringFromNumber:
currentLocale
initWithLocaleIdentifier:
addTimer:
updateTimer:
removeTimer:
sleepTimersWithState:
initWithAlarmStorage:sleepCoordinator:currentDateProvider:
mtSerialSchedulerForObject:
serviceForClientIdentifier:
addAssertionUpdateListener:withCompletionHandler:
initWithDelegate:infoProvider:
removeAssertionUpdateListener:
invalidateActiveModeAssertionWithError:
isSleepModeEnabled:error:
activeModeAssertionWithError:
details
integerForKey:defaultValue:
assertionService
sleepModeTimeoutMinutes
dateByAddingTimeInterval:
initWithStartDate:endDate:
lifetimeWithDateInterval:
lifetime
detailsWithIdentifier:modeIdentifier:lifetime:
setUserVisibleEndDate:
takeModeAssertionWithDetails:error:
isSleepModeEnabled:
userDisengagedSleepModeOnDate:
sleepModeEnabled:userRequested:date:
reason
updateMonitorState
invalidationDate
modeAssertionService:didUpdateActiveModeAssertion:
modeAssertionService:didReceiveModeAssertionInvalidation:
stateMachine:engageSleepModeUntilDate:userEngaged:
stateMachineClearKeepSleepModeOff:
stateMachine:scheduleUpdateForSecondsFromNow:
sleepCoordinator:userWentToBed:sleepAlarm:
sleepCoordinator:userWokeUp:sleepAlarm:
sleepCoordinator:bedtimeReminderDidFire:sleepAlarm:
sleepCoordinator:bedtimeReminderWasConfirmed:sleepAlarm:
sleepCoordinator:bedtimeReminderWasSnoozed:sleepAlarm:
sleepCoordinator:bedtimeWasReached:sleepAlarm:
sleepCoordinator:waketimeWasReached:sleepAlarm:
sleepCoordinator:wakeUpAlarmDidFire:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasDismissed:dismissAction:sleepAlarm:
sleepCoordinator:wakeUpAlarmWasSnoozed:sleepAlarm:
sleepCoordinator:sleepModeManuallyExited:sleepAlarm:
sleepCoordinator:sleepSessionEnded:reason:sleepAlarm:
sleepCoordinator:sleepAlarmDidChange:
timeListener:didDetectSignificantTimeChangeWithCompletionBlock:
initWithAlarmStorage:sleepCoordinator:
sleepMode:
userDisengagedSleepMode
sleepCoordinator
setSleepCoordinator:
setCurrentDateProvider:
setStateMachine:
setAssertionService:
_sleepCoordinator
_stateMachine
_assertionService
initWithDelegate:isSynchronous:
checkIn
reconnect
setEnabled:valueDidChangeBlock:
_enabled
initWithSleepModeEndDate:stateMachine:
currentState
infoProvider
onStateWithSleepModeEndDate:
userRequestedOffStateWithKeepOffUntilDate:
stateMachineLog
initialState
offState
waitingState
_initialState
_offState
_waitingState
_reloadLocaleInfo
_loadLocaleInfo
_clearLocaleDependentState
postNotificationName:object:
dateFormatFromTemplate:options:locale:
rangeOfString:
rangeOfString:options:
setLocale:
setDateStyle:
setTimeStyle:
setLocalizedDateFormatFromTemplate:
_dateOnlyFormatter
AMSymbol
PMSymbol
localizedTimeStringFromDate:forTimeZone:timeDesignator:
_timeOnlyFormatter
timeZone
isEqualToTimeZone:
setTimeZone:
timeDesignatorForDate:timeZone:
stringFromDate:
currentCalendar
component:fromDate:
amString
pmString
localizedTimeStringFromDate:timeDesignator:
timeDesignatorForDate:
use24HourTime
timeDesignatorAppearsBeforeTime
_amString
_pmString
_use24HourTime
_timeDesignatorAppearsBeforeTime
persistentStoreForDataModel:
initWithSyncService:syncStatusProvider:syncDataModel:syncMetrics:syncChangeStore:
setSyncStatusProviderDelegate:
initWithChangeStore:
loadChanges
syncStatus
resume:
checkForPendingChanges
removePendingChanges
suspend
hasPendingChanges
requestSync:
enqueueChange:
pendingChanges
resolveChange:
syncDataModel
dequeueChanges:
logSyncFailedWithError:
logSyncCompleted
syncService
syncStatusProvider
syncChangeQueue
syncStatusProvider:didChangeSyncStatus:
pendingChangesSent:
setSyncService:
setSyncStatusProvider:
setSyncDataModel:
setSyncChangeQueue:
started
setStarted:
_started
_syncService
_syncStatusProvider
_syncDataModel
_syncChangeQueue
label
successWithResolvedString:
time
dateComponents
calendarWithIdentifier:
setCalendar:
setDateComponents:
successWithResolvedDateComponents:
repeatSchedule
successWithResolvedRepeatDay:
firstWeekday
subarrayWithRange:
arrayByAddingObjectsFromArray:
_alarmUserActivityWithIntent:
value
alarmWithHour:minute:
setRepeatSchedule:
addAlarm:
displayString
handleMTCreateAlarm:completion:
resolveLabelForMTCreateAlarm:withCompletion:
resolveDateComponentsForMTCreateAlarm:withCompletion:
resolveRepeatScheduleForMTCreateAlarm:withCompletion:
provideRepeatScheduleOptionsCollectionForMTCreateAlarm:withCompletion:
confirmMTCreateAlarm:completion:
defaultRepeatScheduleForMTCreateAlarm:
provideRepeatScheduleOptionsForMTCreateAlarm:withCompletion:
_trackingEnabledForSleepAlarm:
setCachedAlarm:
trackingEnabled
startSession
endSessionWithDate:reason:
sessionClass
sleepSessionTrackerDelegate
setSleepSessionTrackerDelegate:
processedSessionForSession:
initWithAlarmStorage:
prepare
cachedAlarm
alarmLock
setAlarmLock:
_alarmLock
_sleepSessionTrackerDelegate
_cachedAlarm
notification
_handleAlarmNotificationResponse:withCompletionHandler:
_handleTimerNotificationResponse:withCompletionHandler:
actionIdentifier
_alarmNotificationActionForUserNotificationAction:category:
handleAlarmNotificationIdentifier:action:category:completionHandler:
mtStringByRemovingNotificationPrefixes
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:source:
metrics
logAlarmSnoozeAction:
dismissAlarmWithIdentifier:dismissAction:withCompletion:source:
logAlarmDismissAction:
_timerNotificationActionForUserNotificationAction:
timerStorage
logTimerDismissed
logTimerRepeated
initWithAlarmStorage:timerStorage:
setTimerStorage:
setMetrics:
_timerStorage
_metrics
confirmUpdateAlarm:completion:
handleUpdateAlarm:completion:
confirmMTUpdateAlarm:completion:
handleMTUpdateAlarm:completion:
setSnoozeFireDate:
toneSoundWithIdentifier:vibrationIdentifer:volume:
setSound:
initWithSound:usingVolume:
_resetCurrentToneIdentifier
sharedToneManager
setCurrentToneIdentifier:forAlertType:topic:
setCurrentVibrationIdentifier:forAlertType:topic:
_loadAlarmsWithCompletion:
alarms
cleanUpOldNotifications
_cleanUpForInternalBuild:
_cleanUpSnoozeFireDate:
cleanDeliveredNotifications
_cleanUpSleepAlarmRepeat:
initWithIdentifier:bundleID:context:
discoverabilitySignal
source
sendEvent:
_convertSleepAlarmToRegular:
arrayByAddingObject:
_queue_setAllAlarms:sleepAlarms:source:persist:notify:
_queue_allSleepAlarms
_queue_allAlarms
nextAlarm
_queue_addAlarm:withCompletion:source:
_queue_updateAlarm:withCompletion:source:
_queue_updateAlarmWithIdentifier:changeSet:withCompletion:source:
_queue_removeAlarm:withCompletion:source:
_queue_removeAlarmWithIdentifier:withCompletion:source:
_queue_removeAllAlarmsForSource:
_queue_setAllAlarms:sleepAlarms:source:
_queue_updateSleepAlarmsFromExistingAlarms:
_queue_setAllAlarms:sleepAlarms:source:persist:notify:override:
na_dictionaryWithKeyGenerator:
transferMetadataForSleepAlarm:fromPrevious:
dismissedAction
setDismissedAction:
bedtimeFiredDate
setBedtimeFiredDate:
setBedtimeDismissedDate:
bedtimeDismissedAction
setBedtimeDismissedAction:
bedtimeSnoozeFireDate
setBedtimeSnoozeFireDate:
_applyNecessaryChangesFromExistingAlarm:updatedAlarm:
sleepAlarms
_queue_snoozeAlarmWithIdentifier:snoozeDate:snoozeAction:withCompletion:source:
_queue_dismissAlarmWithIdentifier:dismissDate:dismissAction:withCompletion:source:
_queue_alarmMatchingAlarmIdentifier:
_queue_hasMatchingAlarm:
_queuePersistAlarm:replacingAlarm:
_notifyObserversForAlarmAdd:source:
applyChangesFromChangeSet:
_queue_alarmMatchingAlarm:
_queue_dismissMutableAlarm:dismissDate:dismissAction:
changeSetWithChangesFromObject:toObject:
propertiesAffectingNotification
hasChangesInProperties:
_notifyObserversForAlarmChange:source:
_notifyObserversForAlarmDismiss:dismissAction:source:
_queue_actuallyRemoveAlarm:withCompletion:source:
_notifyObserversForAlarmRemoval:source:
_queue_persistAlarms
_queue_sortSleepAlarms
_queue_sortAlarms
changes
isBedtimeSnoozed
propertiesAffectingSnooze
mtIsAfterOrSameAsDate:
_queue_resetAlarmsTo:sleepAlarms:
isEqualToAlarm:
laterDate:
_notifyObserversForAlarmSnooze:snoozeAction:source:
_notifyObserversWithBlock:
_notifyObserversForNextAlarmChange:source:
_notifyObserversForAlarmFire:triggerType:source:
rescheduleAlarmsWithCompletion:
removeAllAlarmsForSource:
_diagnosticDictionaryForAlarms:
_diagnosticDictionaryForAlarm:
scheduler:didChangeNextAlarm:
scheduler:didFireAlarm:
getAlarmsWithCompletion:
addAlarm:withCompletion:source:
updateAlarm:withCompletion:source:
updateAlarmWithIdentifier:changeSet:withCompletion:source:
removeAlarm:withCompletion:source:
removeAlarmWithIdentifier:withCompletion:source:
setAllAlarms:sleepAlarms:source:
updateSleepAlarms:source:
updateSleepAlarmsWithBlock:source:
alarmWithIdentifier:withCompletion:
allAlarms
loadAlarms
loadAlarmsSync
activeSleepAlarm
orderedAlarms
setOrderedAlarms:
setSleepAlarms:
_orderedAlarms
_sleepAlarms
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
_checkSpringBoardStarted
_stopMonitoring
addObserver:wasFirst:
_startMonitoringWithQueue:
removeObserver:wasLast:
didReceiveSpringboardStarted:
springboardStartMonitor:didReceiveStarted:
enumerateObservers:
removeObserver:
isSpringboardStarted
_notifyToken
_isSpringBoardStarted
_queue
_timerManager
duration
initWithState:duration:
type
spokenPhrase
setSiriContext:
_timer:conflictsWithRunningTimersInTimers:
confirmationRequiredWithStringToConfirm:
resolutionResultUnsupportedWithReason:
initWithSpokenPhrase:
_checkNowPlayingMediaState:
successWithResolvedTimeInterval:
successWithResolvedTimerType:
initWithLabel:duration:remainingTime:identifier:state:type:
confirmationRequiredWithTimerTypeToConfirm:
_matchTimersFromIntentsTimer:excludeStoppedTimers:completion:
_createTimerWithIntent:dryRun:completion:
_isPlayingMediaFromMRPlaybackState:
_responseToCreateTimerIntent:withCreatedTimer:error:dryRun:
setCreatedTimer:
indexOfObjectPassingTest:
handleCreateTimer:completion:
confirmCreateTimer:completion:
resolveLabelForCreateTimer:withCompletion:
resolveDurationForCreateTimer:withCompletion:
resolveTypeForCreateTimer:withCompletion:
setToneID:
setVibeID:
hasToneID
setMediaID:
setHasMediaID:
hasMediaID
hasVibeID
setHasSoundVolume:
hasSoundVolume
setSoundType:
toneID
mediaID
vibeID
_mediaID
_soundVolume
_toneID
_vibeID
_has
unSoundForCategory:
descriptionForCategory:
_alertTypeForCategory:
soundWithAlertType:
setShouldRepeat:
setAlertTopic:
setShouldIgnoreRingerSwitch:
setMaximumDuration:
setAudioVolume:
setVibrationIdentifier:
setToneIdentifier:
setToneMediaLibraryItemIdentifier:
mt_Description
unSound
audioVolume
toneMediaLibraryItemIdentifier
numberWithUnsignedLongLong:
songSoundWithIdentifier:vibrationIdentifier:volume:
alertTopic
alertType
defaultSoundForCategory:
mtSound
initWithStorage:notificationCenter:scheduler:defaults:
xpcSchedulerWithEvent:
initWithStorage:notificationCenter:scheduler:defaults:schedulingDelegate:taskScheduler:currentDateProvider:
_rescheduleAlarmsWithCompletion:
removeAllDeliveredNotifications
_scheduleAlarms:withCompletion:
_additionalAlarmsToScheduleForAlarms:
isSingleTimeAlarm
_lastAlarmTriggerDate
_setLastAlarmTriggerDate:
scheduledAlarms
_unscheduleAlarms:
_queue_updateNextAlarmTimerWithCompletion:
_nextTriggerDateForScheduling
scheduleTimerForSeconds:
_queue_fireTriggeredAlarmsWithCompletionBlock:
_queue_unregisterTimer
unscheduleTimer
isVisible
isForAlert
playsOnThisDevice
dismissRelatedNotificationsForScheduledAlarm:
_shouldPostNotificationForScheduledAlarm:
postNotificationForScheduledAlarm:completionBlock:
isBedtimeRelated
isForSnooze
isForGoToBed
_intervalToCheckForAlarmsToFireBeforeDate:
_fireScheduledAlarm:firedDate:completionBlock:
taskWithIdentifier:delay:completableBlock:
taskWithIdentifier:completableBlock:
scheduleTask:
taskGroupWithTasks:completionBlock:
scheduleTaskGroup:
nextAlarmIncludingBedtimeNotification:
nextScheduledAlarmIncludingBedtimeNotification:
nextTriggerDateIncludingBedtimeNotification:
_nextScheduledAlertIncludingBedtimeNotification:
scheduleAlarms:
dismissNotificationsWithIdentifiers:
_snoozeCountdownIdentifier:
unscheduleAlarms:
dismissNotificationsForAlarm:
dismissNotificationsForAlarm:includeSnooze:
triggerWithDate:triggerType:
dismissNotificationsForAlarm:dismissAction:
_queue_triggerDidFireForAlarmWithCompletionBlock:
initWithStorage:notificationCenter:
nextTriggerDate
schedulingDelegate
taskScheduler
defaults
setDefaults:
_scheduledAlarms
_schedulingDelegate
_taskScheduler
_defaults
_alarm
initWithScheduleable:trigger:
isEqualToScheduledObject:
setScheduleable:
setTrigger:
_scheduleable
_trigger
overridesAlarm:trigger:calendar:
setOverriddenDate:
nextTriggerAfterDate:
timerWithInitialTime:backoffFactor:fireBlock:
timerWithInitialTime:backoffFactor:fireBlock:queue:
initWithInitialTime:backoffFactor:fireBlock:queue:
timerFinished
_cancel
timerWithInitialTime:fireBlock:
start
stop
setTimer:
block
setBlock:
queue
setQueue:
initialTime
setInitialTime:
currentBackoff
setCurrentBackoff:
backoffFactor
setBackoffFactor:
_timer
_block
_initialTime
_currentBackoff
_backoffFactor
hasDismissAction
dataFromChange:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
_setExtensionBundleId:
_setLaunchId:
mt_nanoAlarmBundleIDForAlarm:
_setNanoLaunchId:
intentLabel
setLabel:
alarmIDIntentObject
setOperation:
displayTitle
na_safeSetObject:forKey:
initWithDomain:verb:parametersByName:
defaultSearchableIndex
deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:
mt_initWithAlarm:verb:
mt_intentForAlarmCreate:
mt_intentForAlarmUpdate:
mt_intentForAlarmEnable:
mt_intentForAlarmDisable:
mt_deleteDonationsForAlarm:completion:
deferredLocalizedIntentsStringWithFormat:fromTable:bundle:
dateBySettingHour:minute:second:ofDate:options:
localizedStringFromDate:dateStyle:timeStyle:
alarmIntentDisplayString
initWithIdentifier:displayString:
timeObject
setValue:
_addStateHandler
dataWithPropertyList:format:options:error:
bytes
timeInBedTracking
bedtimeComponents
mtPreviousDateBeforeDate:matchingComponents:
mtNextDateAfterDate:matchingComponents:
_createSleepSessionWithUserWakeTime:endReason:
sleepSessionTracker:sessionDidComplete:
_shouldUseBedtimeDismissedDateForAlarm:
mtDateNearestMatchingComponents:
systemTimeZone
assistantUILocalizedStringForKey:table:
string
appendString:
userContext
knowledgeStore
updateStateForNextAlarm:
updateStateForIdleAlarms:
updateLastModifiedDateForAlarms:
updateStateForAlarm:alarmEvent:
writeAlarmToKnowledgeStore:alarmEvent:
alarmStatesByAlarmID
_queue_writeCurrentStateToContextStore
modifiedDateKey
setValue:forKey:
_queue_writeNextAlarmStateToContextStore:
keyPathForCurrentAlarms
keyPathForNextAlarm
firing
_queue_writeAlarmToKnowledgeStore:category:
stopped
snoozed
alarmStream
metadataForAlarm:
eventWithStream:startDate:endDate:value:metadata:
saveObjects:error:
isSleep
handleSystemReady
context
_alarmStatesByAlarmID
_context
_knowledgeStore
alarmIDKey
stateKey
expectedFireDateKey
nextFireDate
distantFuture
_queue_donateCreateTimerIntent:source:
hasDefaultTitle
initWithLabel:duration:type:
initWithIntent:response:
mtSetIntentDonorFromSource:
donateInteractionWithCompletion:
donatedTimerIDs
_donatedTimerIDs
_isUpdateNeeded
_getCachedAlarmsWithCompletion:doSynchronous:
initWithUpdateBlock:
markNeedsUpdate
getCachedAlarmsWithCompletion:
getCachedAlarmsSyncWithCompletion:
updateBlock
setUpdateBlock:
setNextAlarm:
needsUpdate
setNeedsUpdate:
cacheLock
setCacheLock:
_needsUpdate
_cacheLock
_updateBlock
_nextAlarm
_shouldNotifyForTrigger:
postNotificationName:object:userInfo:deliverImmediately:
postNotificationForScheduledTimer:completionBlock:
dismissNotificationsForTimer:
_checkIfRestoreDone
isSystemRestoreDone
_handleRestoreDone
restoreDoneHandled
_restoreNotification
restoreDidFinish
setRestoreDoneHandled:
checkSystemReady
_verifyRestoreDone
_handleF5Reset
_restoreDoneHandled
sharedManagerWithPreferences:
initWithPreferences:
setLastModified:
cities
addDefaultCitiesIfNeeded
objectAtIndex:
worldClockCityFromPersistenceRepresentation:
replaceObjectAtIndex:withObject:
removeObjectAtIndex:
pushCityPropertiesToPreferences
synchronize
_notifyNano
sharedManager
allCities
initWithALCity:
worldClockCityFromPersistenceDictionary:
worldClockCityFromPersistenceArray:
bestCityForLegacyCity:
fixUpCityProperties:
isWorldClockCityProperties:
initWithProperties:
defaultCitiesAdded
defaultCitiesShownInWorldClock
defaultCitiesForLocaleCode:options:
setDefaultCitiesAdded:
saveCities
properties
setCities:
isCachedLanguageStaleForProperties:
dictionaryWithDictionary:
idUrl
canAddCity
indexOfObject:
insertObject:atIndex:
standardUserDefaults
boolForKey:
dictionaryWithContentsOfFile:
writeToFile:atomically:
defaultsKeys
synchronizeUserDefaultsDomain:keys:
citiesWithIdentifiers:
loadCities
checkIfCitiesModified
cityWithIdUrl:
addCity:
removeCity:
removeCityAtIndex:
removeAllCities
moveCityFromIndex:toIndex:
citiesMatchingIdentifiers:
_dirty
_cities
initWithAlarmStorage:currentDateProvider:
updateSleepStateWithSleepAlarm:
finishWithNoResult
mtSynchronousResult:
notifyObserversForSleepAlarmChange:
notifyObserversForSleepAlarmChangeIfNecessary:
_notifyObserversForSleepAlarmChange:
handleBedtimeForAlarm:date:
handleBedtimeReminderForAlarm:date:
handleWakeUpAlarmForAlarm:date:
handleWakeUpTimeForAlarm:date:
handleSnoozeOfGoToBedNotificationForAlarm:date:
handleSnoozeForAlarm:date:
handleConfirmationOfGoToBedNotificationForAlarm:date:
handleDismissForAlarm:dismissAction:date:
handleSleepSessionEndedForAlarm:date:reason:
updateSleepState
stateMachineUserWokeUp:
setSleepModeMonitor:
isSleepModeOn
pairedDevicePreferencesChanged:
cachedSleepAlarm
setCachedSleepAlarm:
sleepStateResolved
setSleepStateResolved:
alarmTimeoutScheduler
setAlarmTimeoutScheduler:
sleepModeMonitor
_cachedSleepAlarm
_sleepStateResolved
_alarmTimeoutScheduler
_sleepModeMonitor
nextExpectedWakeUpDateAfterDate:
nextExpectedBedtimeDateAfterDate:
transactionWithDescription:timeout:
transactionWithDescription:timeout:timeoutBlock:
initWithDescription:timeout:timeoutBlock:
transaction
transactionWithDescription:
setTransaction:
_transaction
objectIdentifier
sequencer
changeType
deleteMultiple
_responseToDeleteTimerIntent:withDeletedTimers:error:dryRun:
_deleteTimer:multiple:dryRun:completion:
setDeletedTimers:
_onlyUnnamedTimerInTimers:forTargetTimer:allowMultiple:
remainingTime
handleDeleteTimer:completion:
confirmDeleteTimer:completion:
resolveTargetTimerForDeleteTimer:withCompletion:
resolveDeleteMultipleForDeleteTimer:withCompletion:
toDuration
toLabel
_responseToSetTimerAttributeIntent:withUpdatedTimer:error:dryRun:
_updateTimer:toDuration:toLabel:dryRun:completion:
initWithTimerResolutionResult:
unsupportedForReason:
setUpdatedTimer:
lowercaseString
setDuration:
_updateTimer:dryRun:updateBlock:completion:
handleSetTimerAttribute:completion:
confirmSetTimerAttribute:completion:
resolveTargetTimerForSetTimerAttribute:withCompletion:
resolveToDurationForSetTimerAttribute:withCompletion:
resolveToLabelForSetTimerAttribute:withCompletion:
setDismissAction:
dismissAction
_syncDate
_syncVersion
_dismissAction
_snoozeAction
_syncID
_loadDefaultAlarmSound
_loadDefaultTimerSound
_saveDefaultAlarmSound:
_saveDefaultTimerSound:
initWithToneIdentifier:vibrationIdentifer:volume:
initWithMediaItemIdentifier:vibrationIdentifier:volume:
unsignedIntegerValue
defaultToneIdentifierForAlertType:
isEqualToSound:
isSilent
initWithType:
setTopic:
setForPreview:
alertWithConfiguration:
playWithCompletionHandler:
_updateAudioVolumeDynamicallyToValue:
setDefaultSound:forCategory:
soundByUpdatingVibrationIdentifier:
soundByUpdatingVolume:
interruptAudio
previewWithCompletionHandler:
updatePreview:
_toneIdentifier
_mediaItemIdentifier
_vibrationIdentifier
syncDismissOfObjectWithIdentifier:dismissDate:date:version:
initWithDismissedObjectIdentifier:dismissDate:date:version:
merge:
conflicts:
preferred:
setDismissDate:
setIdentifier:
setDate:
_dismissDate
_identifier
_date
initWithAlarmManager:
_alarmManager
timeIntervalForKey:isValid:defaultValue:
_quiescingWindow
_performScheduleSnapshot
_bundleID
setAlarms:
loadLegacyData
alarmFromOldAlarm:
setSleepAlarm:
purgeLegacyData
cancelNotifications
_alarms
_sleepAlarm
initWithHour:minute:
sleepAlarmWithSchedule:
sleepScheduleString:
sleepAlarmWithId:
defaultPlayOptionsIsSleepAlarm:
setPlayOptions:
defaultSleepModeOptions
setSleepModeOptions:
sleepAlarmWithHour:minute:
setDay:
sleepAlarmWithHour:minute:bedtimeHour:bedtimeMinute:
_initCommon
initWithCurrentTimeFromCurrentDateProvider:
components:fromDate:
initWithHour:minute:currentDateProvider:
UUID
defaultPlayOptions
pushAlertsEnabled
setOverriddenForDate:
overriddenForDate
month
year
setSecond:
URLWithString:
sleepDurationSeconds
mtTimeIntervalSinceComponents:now:
nextTrigger
nextFireDateAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeBedtimeNotification:
nextTriggerAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggersAfterDate:includeSnooze:includeBedtimeNotification:
nextTriggersAfterDate:inclusionOptions:
_earliestTriggerDateForDate:
singleTimeOverrideDateInCalendar:
triggerWithDate:triggerType:isPastOverrideEvent:
_nextDateHelperWithDate:calendar:
mtLatest:
_date:isOnDay:calendar:
dateFromComponents:
mtNextDateAfterDate:matchingUnit:value:
earlierDate:
nextTriggerAfterDate:ofType:
_isEqualToAlarm:checkLastModified:
bedtimeReminder
sleepMode
sleepModeOptions
sleepTracking
playOptions
onboardingVersion
initWithIdentifier:
_copyStateOntoAlarm:
setBedtimeReminder:
setSleepMode:
setSleepTracking:
setTimeInBedTracking:
setOnboardingVersion:
_updatePropertiesFromDeserializer:
isValidDateComponent:
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
build
builderWithObject:
appendObject:withName:
appendBool:withName:ifEqualTo:
appendBool:withName:
descriptionBuilderWithMultilinePrefix:
appendInteger:withName:
appendString:withName:skipIfEmpty:
sleepAlarmWithHour:minute:year:month:day:bedtimeHour:bedtimeMinute:
_isInternalBuild
mostRecentlyUpdatedAlarmForAlarms:
succinctDescription
mutableCopyWithZone:
getOverriddenDate
alarmURL
setFiring:
sleepDuration
nextFireDateAfterDate:
nextTriggersAfterDate:
overridesNextAlarm:date:calendar:
isEqualIgnoringLastModifiedDate:
_sleepSchedule
_sleepMode
_sleepTracking
_timeInBedTracking
_day
_month
_year
_bedtimeHour
_bedtimeMinute
_bedtimeReminder
_sleepModeOptions
_repeatSchedule
_playOptions
_overriddenForDate
_snoozeFireDate
_bedtimeSnoozeFireDate
_firedDate
_dismissedDate
_dismissedAction
_bedtimeFiredDate
_bedtimeDismissedDate
_bedtimeDismissedAction
_onboardingVersion
platformSpecificSourceBundleIdentifier
setSourceBundleIdentifier:
stringByAppendingPathComponent:
writeSession:
sleepSessionTracker
hasBeenUnlockedSinceBoot
archiveSession:
waitForUnlock
_unprocessedSessions
defaultManager
archivedSessionDataPath
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initRequiringSecureCoding:
finishEncoding
encodedData
archivedSessionDataFile
_writeSessions:
mtFinishWithFuture:
_hasUnprocessedSessions
_writeSessionData
deviceFirstUnlocked
removeObserver:name:object:
fileExistsAtPath:isDirectory:
initWithContentsOfFile:
_removeSessionDataFile
finishDecoding
removeItemAtPath:error:
categoryTypeForIdentifier:
authorizationStatusForType:
na_genericError
globalAsyncScheduler
combineAllFutures:ignoringErrors:scheduler:
maximumAllowedDuration
localDevice
categorySampleWithType:value:startDate:endDate:device:metadata:
sleepSampleWithInterval:sampleType:metadata:
initWithAlarmStorage:sleepCoordinator:sleepSessionTracker:
saveSessionData
healthStore
setHealthStore:
setArchivedSessionDataPath:
setArchivedSessionDataFile:
setSleepSessionTracker:
_healthStore
_archivedSessionDataPath
_archivedSessionDataFile
_sleepSessionTracker
_sharedPublicMetrics
logAlarmAdded:
logAlarmDeleted:
logAlarmUpdated:
logTimerAdded
logTimerDeleted
logTimerUpdated
relayFrameworkNotification:
userInfo
refreshManagers
refreshManagersForPreferences:localNotifications:
sharedRelay
setRefreshManagers:
_refreshManagers
initWithUserDefaults:
initWithSuiteName:
setFloat:forKey:notification:
setObject:forKey:notification:
floatForKey:exists:
setBool:forKey:notification:
boolForKey:exists:
setInteger:forKey:notification:
integerForKey:exists:
setTimeInterval:forKey:notification:
timeIntervalForKey:exists:
_postNotification:
_distributedNotificationForLocalNotification:
distributedNotificationPosted:
weakObjectsHashTable
_localNotificationForDistributedNotification:
_cleanupObserversForNotification:
notificationObject
allObjects
setBool:forKey:
setInteger:forKey:
setTimeInterval:forKey:
timeIntervalForKey:defaultValue:
registerNotification:observer:
unregisterNotification:observer:
userDefaults
setUserDefaults:
_userDefaults
registerForNotifications
unregisterForNotifications
sensitiveUIStateChanged
_isVendorRelease
_hideSensitiveUI
sharedMonitor
_handleNotification
addSensitiveUIObserver:
removeSensitiveUIObserver:
shouldHideForSensitivity:
notifyToken
setNotifyToken:
hideSensitiveUI
setHideSensitiveUI:
needPrefsUpdate
setNeedPrefsUpdate:
lock
setLock:
_needPrefsUpdate
_lock
localeWithLocaleIdentifier:
descriptionWithLocale:
mtMidnightForDate
mtDescription
mtNow
mtEarliest:
_mtNextDateAfterDate:matchingComponents:backwards:
_optionsForBackwards:
nextDateAfterDate:matchingComponents:options:
_nextDateHelperAfterDate:nextDateBlock:
_mtNextDateAfterDate:matchingUnit:value:backwards:
nextDateAfterDate:matchingUnit:value:options:
daylightSavingTimeOffsetForDate:
locale
mtIsIn24HourTime
mtPreviousDateBeforeDate:matchingUnit:value:
mtDateRequiresSingularTimeString:
mtTimeIntervalSinceComponents:
mtURLForClockAppSection:timerManager:
currentTimer
mtURLForScheme:
scheme
host
path
mtClockAppSection
mtIsList
mtIsForLastTimer
mtID
mtURLForClockAppSection:
mtUserActivityWithActivityType:title:
mtUserActivityWithActivityType:title:keywords:
initWithActivityType:
setEligibleForHandoff:
setEligibleForSearch:
setEligibleForPublicIndexing:
setKeywords:
processName
_setDonatedBySiri:
performCancelableBlock:
afterDelay:performBlock:
performSyncBlock:
initWithQueue:
internalScheduler
internalQueue
_internalScheduler
_internalQueue
serialSchedulerWithName:
serialSchedulerForObject:
null
mtContainsDate:
mtDateIntervalWithEndDate:duration:
mtTimeOnlyFormatter
finishWithResult:error:
isFinished
na_timeoutError
initWithTimeout:
setDoesRelativeDateFormatting:
setFormattingContext:
setUnitsStyle:
dateWithTimeIntervalSinceNow:
numberWithLong:
stringFromDateComponents:
dayAndTimeZoneOffsetStringFromDate:withTimeZoneOffset:timeZoneAbbreviation:spaceBeforeTimeDesignator:hoursOnly:numericOnly:
logMessage:
widgetURL
isCachedLanguageStaleForProperties:systemLanguage:
initWithTimeZone:countryCode:name:countryName:unlocalizedName:unlocalizedCountryName:
initWithFormat:
initWithObjects:
initWithInt:
countryName
unlocalizedName
unlocalizedCountryName
localeCode
appendFormat:
unlocalizedExampleCity
initWithALCityIdentifier:
alCityId
unlocalizedCityName
countryCode
alCity
_alCity
_timeZone
_name
_countryName
_countryCode
_unlocalizedName
_unlocalizedCountryName
fireDate
clockAppSectionURL
setFireDate:
_fireDate
setNextAlarms:
setAlarmManager:
calculateNextAlarms
_handleAlarmsDidChange
alarmsSyncIncludingSleepAlarm:
updateHandler
nextAlarms
setUpdateHandler:
_nextAlarms
_updateHandler
successWithResolvedObject:
disambiguationWithObjectsToDisambiguate:
confirmationRequiredWithObjectToConfirm:
successWithResolvedMTWorldClock:
disambiguationWithMTWorldClocksToDisambiguate:
confirmationRequiredWithMTWorldClockToConfirm:
initWithBundleIdentifier:
notificationCategories
setNotificationCategories:
setWantsNotificationResponsesDelivered
actionWithIdentifier:title:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
setListPriority:
alarmCategories
unionSet:
timerCategories
bedtimeCategories
contentForScheduledAlarm:
postNotificationForScheduledAlarm:content:completionBlock:
requestIdentifierForScheduledAlarm:
requestWithIdentifier:content:trigger:destinations:
isForNotification
_notificationCenterForScheduledAlarm:
addNotificationRequest:withCompletionHandler:
dismissNotificationsForAlarm:includeMainIdentifier:
isWakeUpRelated
_goToBedIdentifier:
_allIdentifiersForAlarm:includeMainIdentifier:
_allIdentifiersForAlarm:includeMainIdentifier:includeSnooze:
dismissNotificationsForAlarm:includeMainIdentifier:includeSnooze:
_allIdentifiersForAlarm:
tearDownNotificationsForEventIdentifiers:
cancelNotificationsWithIdentifiers:
mtStringByRemovingNotificationDate
removeDeliveredNotificationsWithIdentifiers:
getDeliveredNotificationsWithCompletionHandler:
interruptAudioAndLockDeviceWithCompletionBlock:
contentForScheduledTimer:
_notificationCenterForScheduledTimer
currentCallCount
incomingCall
mtStringByAppendingNotificationDate:
_mutableContentForScheduledAlarmWithCommonSettings:
_setSpecificContent:forScheduledAlarm:
categoryForScheduledAlarm:
setCategoryIdentifier:
launchURLForScheme:
setDefaultActionURL:
userInfoForAlarm:
_setSpecificContent:forGoToBedNotification:
_setSpecificContent:forSnoozeCountdownNotification:
_setSpecificContent:forNormalScheduledAlarm:
_setGoToBedTitleAndBody:forGoToBedNotification:
setExpirationDate:
_setSnoozeCountdownTitleAndBody:forSnoozeCountdownNotification:
setShouldSuppressScreenLightUp:
setShouldPreventNotificationDismissalAfterDefaultAction:
setShouldIgnoreDoNotDisturb:
setBody:
setShouldBackgroundDefaultAction:
setShouldPreemptPresentedNotification:
setAllowedUnits:
_wakeUpAlarmStringForAlarm:
_timeFormatter
categoryForScheduledTimer:
userInfoForTimer:
isScheduled
notificationCenters
notificationPrefixes
_durationComponentsFormatter
setupNotificationCenter
registerActionHandler:
postBedtimeNotificationForAlarm:date:
setNotificationCenters:
actionHandler
setActionHandler:
_notificationCenters
_actionHandler
setDefaultDuration:
defaultSound
initWithProperty:changedValue:originalValue:
property
setProperty:
changedValue
setChangedValue:
originalValue
setOriginalValue:
_property
_changedValue
_originalValue
dictionaryFromChanges:
initWithChangeDictionary:
changeDictionary
isEqualToDictionary:
changedProperties
isEqualToSet:
na_all:
_isEqualToChangeSet:checkOriginalValues:
changeSetWithChangesFromObject:toObject:inProperties:
initWithChanges:
intersectsSet:
changedValueForProperty:hasProperty:
na_dictionaryByMappingValues:
isEquivalentToChangeSet:
changeSetByAddingChangeSet:
hasChangeForProperty:
hasChangesInCommonWithChangeSet:
deserializedChangedValueForProperty:hasProperty:
_deserializer
setChangedProperties:
setChangeDictionary:
_changedProperties
_changeDictionary
sleepModeEndDate
_sleepModeEndDate
resetSystemTimeZone
confirmationRequiredWithTimeIntervalToConfirm:
postNotificationForUserPreferences:localNotifications:
postNotificationForAlarmsEdited
postNotificationForAlarmActiveChanged
cancelTimer
initWithName:assertionTimeout:
takeAssertion
startTimer:block:
_powerAssertion
delay
completableBlock
_scheduleTask:withCompletion:
tasks
completionBlock
setDelay:
setCompletableBlock:
_delay
_completableBlock
setTasks:
setCompletionBlock:
_tasks
_completionBlock
_computeAge
_registerForSignificantTimeChangeNotification
checkForAgeChange
dateOfBirthComponentsWithError:
components:fromDate:toDate:options:
sharedAgeObserver
setAge:
characteristicUpdateToken
setCharacteristicUpdateToken:
_characteristicUpdateToken
_age
initWithType:name:powerAssertionTimeout:
notificationWithType:name:
setType:
setName:
powerAssertion
setPowerAssertion:
_type
handleGetAlarms:completion:
confirmGetAlarms:completion:
initWithName:
assertionTimeout
_assertionTimeout
_getCachedTimersWithCompletion:doSynchronous:
getCachedTimersWithCompletion:
getCachedTimersSyncWithCompletion:
setNextTimer:
_nextTimer
isEqualToTime:
initWithTimeInterval:
_remainingTime
initWithDate:currentDateProvider:
initWithDate:
initWithMetrics:
_initWithConnectionProvidingBlock:metrics:
_initWithConnectionProvidingBlock:metrics:notificationCenter:
initWithTimerManager:
connectionProvider
cache
_getCachedTimersWithFuture:finishBlock:
errorOnlyCompletionHandlerAdapter
addTimer:withCompletion:
updateTimer:withCompletion:
_updateTimer:doSynchronous:
removeTimer:withCompletion:
dismissTimerWithIdentifier:withCompletion:
repeatTimerWithIdentifier:withCompletion:
timerByUpdatingWithState:
_updateCurrentTimerWithState:
_validateCanStartTimer:
_runningTimerFromCurrentTimer:withDuration:
timersSync
getCurrentTimerSync
_updateCurrentTimerWithStateSync:
warmUp
initWithConnectionProvider:metrics:
initWithConnectionProvider:metrics:notificationCenter:
nextTimersForDate:maxCount:
dismissTimerWithIdentifier:
repeatTimerWithIdentifier:
stopCurrentTimer
pauseCurrentTimer
resumeCurrentTimer
startCurrentTimerWithDuration:
startCurrentTimerWithDurationSync:
stopCurrentTimerSync
pauseCurrentTimerSync
resumeCurrentTimerSync
setCache:
_connectionProvider
_cache
_didReceiveTimerServerReadyNotification:
timerManager
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
timersAdded:
timersUpdated:
timersRemoved:
timerFired:
timerDismissed:
nextTimerChanged:
resetMultiple
_responseToResetTimerIntent:withResetTimers:error:dryRun:
_handleResetTimer:dryRun:completion:
setResetTimers:
handleResetTimer:completion:
confirmResetTimer:completion:
resolveTargetTimerForResetTimer:withCompletion:
resolveResetMultipleForResetTimer:withCompletion:
containsObserver:
observersLock
setObserversLock:
_observersLock
initWithEvent:
scheduleActivityWithCriteria:activityHandler:performImmediately:
scheduleActivityWithCriteria:activityHandler:
unscheduleActivity
eventName
setEventName:
_eventName
na_safeAddObjectsFromArray:
_getCachedAlarmsWithFuture:finishBlock:
_alarmsIncludingSleepAlarm:doSynchronous:
nextAlarmsForDate:maxCount:includeSleepAlarm:
nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:
_nextAlarmsForDate:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_filteredAlarms:afterDate:maxCount:filter:
nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:
_nextAlarmsInRange:maxCount:includeSleepAlarm:includeBedtimeNotification:doSynchronous:
_filterSleepAlarmOverrides:date:
_sortedAlarms:date:includeBedtimeNotification:
sortedArrayUsingComparator:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:
nextAlarmsForDateSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:includeBedtimeNotification:
alarmWithIDString:includeSleep:
alarmsSync
objectAtIndexedSubscript:
alarmCountIncludingSleepAlarm:
nextSleepAlarmWithCompletion:
addAlarm:withCompletion:
assistantSyncNotificationName
cStringUsingEncoding:
updateAlarm:withCompletion:
removeAlarm:withCompletion:
_alarmWithIDStringAsync:
snoozeAlarmWithIdentifier:snoozeAction:
snoozeAlarmWithIdentifier:snoozeAction:withCompletion:
dismissAlarmWithIdentifier:dismissAction:
dismissAlarmWithIdentifier:dismissAction:withCompletion:
firingAlarmCount
nextAlarmsForDate:maxCount:
nextAlarmsForDate:maxCount:includeBedtimeNotification:
nextAlarmsInRange:maxCount:includeSleepAlarm:
_sortedNextAlarmsAfterDate:includeSleepAlarm:includeBedtimeNotification:
nextAlarmsForDateSync:maxCount:
nextAlarmsForDateSync:maxCount:includeBedtimeNotification:
nextAlarmsInRangeSync:maxCount:includeSleepAlarm:
sleepAlarmSync
sleepAlarmsSync
nextAlarmSync
alarmWithIDString:
indexForAlarm:
alarmAtIndex:
alarmCount
nextSleepAlarm
removeAlarm:
snoozeAlarmWithIdentifier:
dismissAlarmWithIdentifier:
_didReceiveAlarmServerReadyNotification:
mtNotifiyingQueue
alarmsAdded:
alarmsUpdated:
alarmsRemoved:
alarmSnoozed:
alarmDismissed:
alarmFired:
nextAlarmChanged:
updateSleepAlarmsWithCompletion:
resetSleepAlarmSnoozeStateWithCompletion:
updateSleepAlarms
resetSleepAlarmSnoozeState
componentsSeparatedByString:
timeZoneForSecondsFromGMT:
setDateFormat:
stringByAppendingFormat:
bs_dayPeriodForDate:inLocale:
bundleWithIdentifier:
mtGreetingString:
addAlarms:
alarmsCount
clearAlarms
alarmsAtIndex:
alarmsType
indexesOfObjectsPassingTest:
objectsAtIndexes:
arrayWithCapacity:
immediateScheduler
combineAllFutures:scheduler:
_alternateTimersForTargetTimerState:type:inTimers:allowedTimerStates:
setMatchedTimers:
setUnmatchedTimers:
handleSearchForTimers:completion:
confirmSearchForTimers:completion:
resolveLabelForSearchForTimers:withCompletion:
resolveDurationForSearchForTimers:withCompletion:
resolveStateForSearchForTimers:withCompletion:
resolveTypeForSearchForTimers:withCompletion:
determineNextState:
nextSleepModeStartDateAfterDate:
nextSleepModeEndDate
nextSleepModeEndDateAfterDate:
nextSleepModeStartDate
setGroupIdentifier:
prepareAlarms
alarmsByID
_alarmsByID
_bundleIDForUNSchedule
_loadUserPreferences
_loadScheduledNotifications
_upgradeFromSpringboardDefaults
_loadAlarms
_reconcileAlarmsAndNotifications
_loadTimerDefaults
getPendingNotificationRequestsWithCompletionHandler:
_upgradeIfNeverAttempted
_discardOldVersion
_upgrade
_upgradeAlarms
_upgradeTimers
_copyLegacyAlarmsFromPreferences
sortUsingSelector:
_discardOldAlarms
_discardOldTimers
_copyLegacySleepAlarmFromPreferences
_purgeAlarmsAndTimers
_cancelNotifications
removeAllPendingNotificationRequests
repeatScheduleFromOldAlarm:
soundFromOldAlarm:
_numberFromString:
numberFromString:
setDefaultSound:
scheduledNotifications
setScheduledNotifications:
loaded
setLoaded:
purged
setPurged:
_loaded
_purged
_defaultDuration
_defaultSound
_scheduledNotifications
initWithConnectionInfo:errorHandler:
initWithMachServiceName:
valueForEntitlement:
_didInvalidateConnection:
addClientConnection:clientLink:
removeClientConnection:
processInfo
processIdentifier
clientInfoForConnection:clientLink:
clients
_connectedClients
currentConnection
_currentClientForConnection:
clientLink
performBlockOnAllClients:excludingCurrent:
performBlockOnClientInfos:excludeCurrent:
_performBlockOnClientInfos:excludingClient:
listener:shouldAcceptNewConnection:
startListening
connectedClients
currentClient
performBlockOnCurrentClient:
performBlockOnAllClients:
performBlockOnAllClients:excludingClient:
stopListening
setClients:
connectionListener
setConnectionListener:
_clients
_connectionListener
_setupNotificationCenter
_setupAlarms
_setupTimers
_setupSync
_setupInitialListeners
rescheduleTimers
_setupSecondaryListeners
sharedDeviceListener
systemStateListener
alarmServer
alarmScheduler
timerServer
timerScheduler
launchDate
_diagnosticProviders
agent
sleepManager
setLaunchDate:
systemReady
setSystemReady:
notificationManager
setNotificationManager:
setSystemStateListener:
languageChangeListener
setLanguageChangeListener:
diagnostics
setDiagnostics:
timeListener
setTimeListener:
setAlarmServer:
setAlarmScheduler:
alarmSnapshot
setAlarmSnapshot:
setTimerServer:
setTimerScheduler:
timerSnapshot
setTimerSnapshot:
alarmIntentDonor
setAlarmIntentDonor:
timerIntentDonor
setTimerIntentDonor:
coreDuetMonitor
setCoreDuetMonitor:
sleepSessionManager
setSleepSessionManager:
alarmSyncDataModel
setAlarmSyncDataModel:
_systemReady
_sleepManager
_launchDate
_notificationManager
_systemStateListener
_languageChangeListener
_diagnostics
_timeListener
_alarmServer
_alarmScheduler
_alarmSnapshot
_timerServer
_timerScheduler
_timerSnapshot
_alarmIntentDonor
_timerIntentDonor
_coreDuetMonitor
_sleepSessionManager
_alarmSyncDataModel
_registerForNotifications
mainQueue
dataSource:didAddAlarms:
_iterateObserversWithBlock:
_handleAlarmNotification:block:
addObserverForName:object:queue:usingBlock:
dataSource:didRemoveAlarms:
dataSource:didUpdateAlarms:
_stateReset
reloadAlarms
reschedule:
dataSourceDidReload:
rowForAlarmWithID:
rowForAlarm:
setObject:atIndexedSubscript:
unregisterObserver:
numberOfAlarms
alarmAtRow:
setupSyncDataFileForDataModel:
setSyncDataPath:
syncDataPath
setSyncDataFile:
archiverScheduler
syncDataFile
_removeSyncDataFile
persistChanges:
initWithDataModel:
_archiverScheduler
_syncDataPath
_syncDataFile
setChanges:
_changes
inMemoryStore
willExitWithNextState:
willEnterWithPreviousState:
didExitWithNextState:
successWithResolvedMTCity:
disambiguationWithMTCitysToDisambiguate:
confirmationRequiredWithMTCityToConfirm:
stateMachineName
setCurrentState:
deleteCharactersInRange:
setInfoProvider:
_currentState
_infoProvider
registerSleepDataObserver:
sleepDataObservers
healthObserver
sleepDataDidChange
initWithSampleType:predicate:updateHandler:
setHealthObserver:
executeQuery:
unregisterSleepDataObserver:
stopQuery:
sleepDataForPastWeekRequestAuthorization:
sleepDataForPastWeekRequestAuthorization:dataSource:
sleepDateIntervalForThePastWeekWithCalendar:
sleepDataForRange:requestAuthorization:dataSource:
sleepDataForRange:
sleepDataForRange:intervalComponents:requestAuthorization:dataSource:
_sourcePredicate:
sleepQueryWithStartDate:endDate:intervalComponents:calendar:predicate:healthStore:completion:
_executeSleepQuery:requestAuthorization:future:
lastSleepDayRequestAuthorization:
lastSleepDayRequestAuthorization:dataSource:
hk_dateByAddingDays:toDate:
sleepDaysForRange:requestAuthorization:dataSource:
sleepDaysForRange:requestAuthorization:
sleepDaysQueryWithStartDate:endDate:calendar:predicate:healthStore:completion:
_predicateForObjectsFromAppleWatches
orPredicateWithSubpredicates:
setWithObject:
requestAuthorizationToShareTypes:readTypes:completion:
sleepDataForPastWeek
lastSleepDay
sleepDaysForRange:
setSleepDataObservers:
_healthObserver
_sleepDataObservers
_isPushAlertsEnabledInPreferences
initWithDomain:
dictionaryForKey:
_notifyClientsOfChange
isPushAlertsEnabled
_handlePrefsChanged
npsManager
setNpsManager:
_pushAlertsEnabled
_npsManager
weekdays
alarmRepeatScheduleFrom:
wakeUpComponents
isSingleDayOverride
alarmConfiguration
playOptionsForOccurrence:
alarmFromSleepOccurrence:scheduleEnabled:keepOffUntilDate:
_queue_nextTimer
_queue_nextScheduledTimer
rescheduleTimersWithCompletion:
_queue_rescheduleTimersWithCompletion:
_queue_scheduleTimers:withCompletion:
_queue_unscheduleTimers:
_queue_lastTimerTriggerDate
_queue_setLastTimerTriggerDate:
fireTime
scheduledTimers
_queue_updatePersistentTimerForNextTimerWithCompletion:
_queue_fireTriggeredTimersWithCompletionBlock:
_intervalToCheckForTimersToFireBeforeDate:
_fireScheduledTimer:firedDate:completionBlock:
_queue_triggerDidFireForTimerWithCompletionBlock:
scheduleTimers:
unscheduleTimers:
_scheduledTimers
initWithSession:request:delegate:
isSending
sessionDescription
session
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
initWithSession:delegate:
processedChanges
setProcessedChanges:
setRequest:
setSession:
setPendingChanges:
lastIndex
setLastIndex:
_processedChanges
_request
_session
_pendingChanges
_lastIndex
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
secondsFromGMTForDate:
stringFromDate:withRelativeToTimeZone:
workScheduler
_latestKeyBagValueForHasBeenUnlockedSinceBoot
setInternalHasBeenUnlockedSinceBoot:
_hasBeenUnlockedSinceBoot
internalHasBeenUnlockedSinceBoot
setWorkScheduler:
_internalHasBeenUnlockedSinceBoot
_workScheduler
initWithIdentifier:healthStore:
initWithFeatureIdentifier:sleepStore:
initWithAlarmStorage:sleepStoreProvider:featureStoreProvider:healthStore:persistence:
setSleepStoreProvider:
sleepStoreProvider
setSleepStore:
sleepStore
setFeatureStore:
markSleepMigrationComplete
sleepScheduleModelWithError:
_didCompleteSleepOnboarding
occurrences
sleepEventRecord
wakeUpConfirmedUntilDate
featureStore
isCurrentOnboardingVersionCompletedWithError:
currentSleepSettingsWithCompletion:
currentSleepSettingsWithError:
watchSleepFeaturesEnabled
initWithHealthStore:
upcomingScheduleOccurrenceAfterDate:error:
currentSleepScheduleWithError:
sleepAlarmWasDismissedOnDate:completion:
sleepAlarmWasSnoozedUntilDate:completion:
sleepAlarmWasModifiedWithCompletion:
sleepStore:sleepScheduleDidChange:
sleepStore:sleepSettingsDidChange:
sleepStore:sleepEventDidOccur:
sleepStore:sleepScheduleStateDidChange:
sleepStore:sleepModeOnDidChange:
_sleepStoreProvider
_sleepStore
_featureStore
syncStatusProviderDelegate
_syncStatusProviderDelegate
_timerTimeForState:remainingTime:currentDateProvider:
isCurrentTimer
siriContext
setFireTime:
_setDuration:
isEqualToTimer:
_isEqualToTimer:checkLastModified:
_copyStateOntoTimer:
dateWithTimeInterval:sinceDate:
timerURL
_timerID
_state
_duration
_fireTime
_siriContext
initWithStorage:connectionListenerProvider:
_isSystemReady
_systemNotReadyError
connectionListenerProvider
_notifyClientsForTriggerType:
componentsJoinedByString:
isSystemReady
_connectionListenerProvider
timerManagerProvider
_isDefaultTimer:
disambiguationWithTimersToDisambiguate:
confirmationRequiredWithTimerToConfirm:
firstIndex
setTimerManagerProvider:
setTimerManager:
_timerManagerProvider
initWithRequestType:
requestDescription
requestWithType:
complete:
requestType
setRequestType:
completed
setCompleted:
error
setError:
completionBlocks
setCompletionBlocks:
_completed
_requestType
_error
_completionBlocks
initWithDate:type:
initWithDate:type:isPastOverrideEvent:
isEqualToTrigger:
isEvent
_stringForType:
appendString:withName:
setTriggerType:
setTriggerDate:
_isPastOverrideEvent
_triggerType
_triggerDate
initWithSnoozedObjectIdentifier:snoozeDate:date:version:
_snoozeDate
setWithSet:
propertiesAffectingWaketime
propertiesAffectingBedtime
propertiesAffectingSync
handler
setHandler:
setNotification:
_handler
_notification
notifications
postNotificationWithIdentifier:title:message:defaultButtonTitle:otherButtonTitle:bypassDND:handler:
setNotifications:
_notifications
caseInsensitiveCompare:
localizedCaseInsensitiveContainsString:
performBlockOnceChangesAreLoaded:async:
_enqueueAction:
persistChanges
_enqueueChange:changeCompareBlock:
reverseObjectEnumerator
_resolveChange:
_resolveChange:resolutionHandler:
changesLoaded
setChangesLoaded:
changeStore
setChangeStore:
changeQueue
setChangeQueue:
_changesLoaded
_changeStore
_changeQueue
initWithService:priority:asMasterStore:options:
setDelegate:queue:
retryTimer
_retryRequest
_requestSync:
service
setHasChangesAvailable
setTargetQueue:
service:startSendingSession:error:
service:startReceivingSession:error:
setSendingSession:
sendingSession
setReceivingSession:
service:sendingSessionEnded:error:
service:receivingSessionEnded:error:
shouldRetryForError:
isMasterStore
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
setService:
receivingSession
pendingRequests
setPendingRequests:
setRetryTimer:
_service
_sendingSession
_receivingSession
_pendingRequests
_retryTimer
initWithConnection:clientLink:
processID
connectedDate
setConnection:
setClientLink:
setConnectedDate:
_clientLink
_connectedDate
hasAlarmID
setHasHour:
hasHour
setHasMinute:
hasMinute
hasTitle
setHasAllowsSnooze:
hasAllowsSnooze
setHasDaySetting:
hasDaySetting
hasSound
setHasIsSleepAlarm:
hasIsSleepAlarm
setHasBedtimeHour:
hasBedtimeHour
setHasBedtimeMinute:
hasBedtimeMinute
setHasBedtimeReminderMinutes:
hasBedtimeReminderMinutes
setRevision:
setHasRevision:
hasRevision
setHasLastModifiedDate:
hasLastModifiedDate
setHasSnoozeFireDate:
hasSnoozeFireDate
setHasBedtimeSnoozeFireDate:
hasBedtimeSnoozeFireDate
setIsEnabled:
setHasIsEnabled:
hasIsEnabled
setHasFiredDate:
hasFiredDate
setHasDismissedDate:
hasDismissedDate
setHasPlayOptions:
hasPlayOptions
setHasSleepMode:
hasSleepMode
setHasSleepTracking:
hasSleepTracking
setHasSleepSchedule:
hasSleepSchedule
setHasOnboardingVersion:
hasOnboardingVersion
setHasSleepModeOptions:
hasSleepModeOptions
setHasTimeInBedTracking:
hasTimeInBedTracking
setHasDismissedAction:
hasDismissedAction
setHasBedtimeFiredDate:
hasBedtimeFiredDate
setHasBedtimeDismissedDate:
hasBedtimeDismissedDate
setHasBedtimeDismissedAction:
hasBedtimeDismissedAction
setHasKeepOffUntilDate:
hasKeepOffUntilDate
_bedtimeReminderMinutes
_isEnabled
setAsleepState:
setAwakeState:
setDisabledState:
_asleepState
_awakeState
_disabledState
successIntentResponseWithAlarm:
unspecifiedIntentResponseWithState:
readyIntentResponseWithState:
continueInAppIntentResponseWithState:
inProgressIntentResponseWithState:
successIntentResponseWithState:alarm:
failureRequiringAppLaunchIntentResponseWithState:
successIntentResponseWithAlarms:
confirmationRequiredWithValueToConfirm:
confirmationRequiredWithAlarmStateToConfirm:
confirmationRequiredWithAlarmOperationToConfirm:
disambiguationWithAlarmsToDisambiguate:
confirmationRequiredWithAlarmToConfirm:
disambiguationWithRepeatDaysToDisambiguate:
confirmationRequiredWithRepeatDayToConfirm:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INPauseTimerIntentResponse">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INPauseTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INResumeTimerIntentResponse">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResumeTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v36@0:8@16B24@?28
@44@0:8@16@24@32B40
@56@0:8@16@24@32Q40@48
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q16@0:8
@"NSDate"16@0:8
@"NSArray"16@0:8
@"NSDictionary"16@0:8
v20@0:8B16
v24@0:8Q16
v16@0:8
@"NSDate"
@"NSArray"
@"NSDictionary"
@"PBCodable"16@0:8
@24@0:8@"PBCodable"16
v24@0:8@"<MTSerializer>"16
@24@0:8@"<MTSerializer>"16
B32@0:8@16@24
@?16@0:8
@24@0:8q16
q24@0:8@16
v20@0:8I16
v24@0:8q16
v32@0:8@16q24
I16@0:8
@"Alarm"
@"NSMutableDictionary"
@"NSString"
@"<AlarmDelegate>"
@"NSURL"
@40@0:8@16@24Q32
@72@0:8@16@24@32@40@48@56Q64
@"NSXPCInterface"
v32@0:8@"MTEnableAlarmIntent"16@?<v@?@"MTEnableAlarmIntentResponse">24
v32@0:8@"MTDisableAlarmIntent"16@?<v@?@"MTDisableAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTToggleAlarmIntentResponse">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTAlarmStateResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"MTIntentAlarmResolutionResult">24
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"INObjectCollection"@"NSError">24
@"MTIntentAlarm"24@0:8@"MTToggleAlarmIntent"16
v32@0:8@"MTToggleAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@16@24@?32
@28@0:8@16B24
B32@0:8@16q24
v40@0:8@16q24@?32
d32@0:8@16q24
B32@0:8@"NSString"16q24
v40@0:8@"NSString"16q24@?<v@?>32
d32@0:8@"NSString"16q24
v32@0:8@16@24
@?24@0:8@16
@32@0:8@16@?24
@24@0:8Q16
v32@0:8@?16@?24
@"<MTScheduledListDelegate>"
@"NSMutableOrderedSet"
@32@0:8@16@24
f24@0:8@16
v28@0:8f16@20
@24@0:8@"NSString"16
@32@0:8@"NSString"16@24
f24@0:8@"NSString"16
v32@0:8@16@"NSString"24
v28@0:8f16@"NSString"20
@32@0:8q16@24
v32@0:8@"MTTimerScheduler"16@"MTTimer"24
v32@0:8@"MTTimerScheduler"16@"MTScheduledObject"24
v24@0:8@?16
v40@0:8@16@?24@32
v24@0:8@"<MTTimerObserver>"16
v24@0:8@?<v@?@"NSArray"@"MTTimer"@"NSError">16
v40@0:8@"MTTimer"16@?<v@?@"NSError">24@"<MTSource>"32
v40@0:8@"NSString"16@?<v@?@"NSError">24@"<MTSource>"32
v32@0:8@"NSArray"16@"<MTSource>"24
@"MTTimer"16@0:8
@56@0:8@16@24@32@40@?48
v40@0:8@16@24B32B36
@40@0:8@16@?24@32
@"MTTimerScheduler"
@"NSMutableArray"
@"MTTimerMigrator"
@"<NAScheduler>"
@"MTObserverStore"
@"<MTPersistence>"
d16@0:8
@24@0:8^{_NSZone=}16
@"NSCoder"16@0:8
v28@0:8B16@20
v32@0:8q16@24
v28@0:8i16@20
v32@0:8d16@24
i24@0:8@16
d24@0:8@16
v40@0:8@16@24Q32
v32@0:8@"<MTSource>"16@"NSArray"24
v40@0:8@"<MTSource>"16@"MTAlarm"24Q32
v32@0:8@"<MTSource>"16@"MTAlarm"24
@"MTAlarmStorage"
v24@0:8@"<MTSyncable>"16
@56@0:8@16@24@?32@40@48
@"MTSyncServiceManager"
@"NSObject<OS_dispatch_queue>"
@"MTMetrics"
v24@0:8@"NSDate"16
B20@0:8B16
@"NRDevice"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
@"MTPBAlarmProperties"
@40@0:8@16@?24@?32
v36@0:8@?16@?24B32
@24@0:8@?16
@40@0:8@?16@?24@?32
{os_unfair_lock_s=I}16@0:8
@"NSXPCConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MTXPCConnectionInfo"
v24@0:8B16B20
@"NAFuture"16@0:8
@"NAFuture"24@0:8@"NSObject<MTTimerIntentSupport>"16
@"NAFuture"24@0:8Q16
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertion"24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
B24@0:8^B16
@"MTAlarm"16@0:8
B36@0:8@16@24B32
B28@0:8@16B24
v32@0:8@16d24
B36@0:8@"MTSleepModeStateMachine"16@"NSDate"24B32
B28@0:8@"MTSleepModeStateMachine"16B24
v32@0:8@"MTSleepModeStateMachine"16@"NSDate"24
v24@0:8@"MTSleepModeStateMachine"16
v32@0:8@"MTSleepModeStateMachine"16d24
v40@0:8@16@24@32
v48@0:8@16@24Q32@40
v40@0:8@"MTSleepCoordinator"16@"NSDate"24@"MTAlarm"32
v48@0:8@"MTSleepCoordinator"16@"NSDate"24Q32@"MTAlarm"40
v32@0:8@"MTSleepCoordinator"16@"MTAlarm"24
v32@0:8@"MTTimeListener"16@?<v@?>24
@40@0:8@16@24@?32
B32@0:8^B16^@24
B24@0:8^@16
@"<MTAlarmStorage>"
@"MTSleepCoordinator"
@"MTSleepModeStateMachine"
@"DNDModeAssertionService"
v28@0:8B16@?20
v32@0:8B16B20@24
v32@0:8B16B20@"NSDate"24
@"MTSleepModeStateMachineInitialState"
@"MTSleepModeStateMachineOffState"
@"MTSleepModeStateMachineWaitingState"
@32@0:8@16o^@24
@40@0:8@16@24o^@32
@"NSDateFormatter"
v32@0:8@16Q24
v32@0:8@"<MTSyncStatusProvider>"16Q24
v24@0:8@"NSArray"16
@"<MTSyncToken>"24@0:8Q16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@"<MTSyncService>"
@"<MTSyncStatusProvider>"
@"<MTSyncDataModel>"
@"MTSyncChangeQueue"
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"MTCreateAlarmIntentResponse">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INDateComponentsResolutionResult">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray">24
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"INObjectCollection"@"NSError">24
@"NSArray"24@0:8@"MTCreateAlarmIntent"16
v32@0:8@"MTCreateAlarmIntent"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSDate"16Q24
@"<MTSleepSessionTrackerDelegate>"16@0:8
v24@0:8@"<MTSleepSessionTrackerDelegate>"16
B24@0:8@"MTAlarm"16
@"<MTSleepSession>"24@0:8@"<MTSleepSession>"16
v20@0:8{os_unfair_lock_s=I}16
@"<MTSleepSessionTrackerDelegate>"
@"MTAlarm"
Q32@0:8@16@24
Q24@0:8@16
v48@0:8@16Q24@32@?40
@"MTTimerStorage"
v32@0:8@"MTUpdateAlarmIntent"16@?<v@?@"MTUpdateAlarmIntentResponse">24
v32@0:8@"MTAlarmScheduler"16@"MTScheduledObject"24
v48@0:8@16@24@?32@40
v32@0:8@?16@24
v48@0:8@16Q24@?32@40
v56@0:8@16@24Q32@?40@48
v24@0:8@"<MTAlarmObserver>"16
v24@0:8@?<v@?@"NSArray"@"NSArray"@"MTAlarm"@"NSError">16
v40@0:8@"MTAlarm"16@?<v@?@"NSError">24@"<MTSource>"32
v48@0:8@"NSString"16@"MTChangeSet"24@?<v@?@"NSError">32@"<MTSource>"40
v24@0:8@"<MTSource>"16
v40@0:8@"NSArray"16@"NSArray"24@"<MTSource>"32
v32@0:8@?<v@?@"MTMutableAlarm">16@"<MTSource>"24
v48@0:8@"NSString"16Q24@?<v@?@"NSError">32@"<MTSource>"40
v56@0:8@"NSString"16@"NSDate"24Q32@?<v@?@"NSError">40@"<MTSource>"48
v32@0:8@"NSString"16@?<v@?@"MTAlarm">24
v48@0:8@16@24@32B40B44
v52@0:8@16@24@32B40B44B48
v40@0:8@16Q24@32
@"MTAlarmScheduler"
@"MTAlarmMigrator"
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerIntentResponse">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INCreateTimerLabelResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INCreateTimerIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B20@0:8I16
v24@0:8d16
v20@0:8f16
f16@0:8
{?="mediaID"b1"soundVolume"b1}
q24@0:8Q16
v32@0:8@"MTScheduledList"16@?<v@?>24
@72@0:8@16@24@32@40@48@56@?64
@20@0:8B16
@"<MTAlarmScheduleDelegate>"
@"MTScheduledList"
@"<MTNotificationCenter>"
@"<MTSchedulingDelegate>"
@"<MTTaskScheduler>"
@"MTPBAlarm"
Q24@0:8Q16
@"<MTScheduleable>"
@"MTTrigger"
@"NSArray"24@0:8@"NSDate"16
B32@0:8@"MTScheduledObject"16@"NSCalendar"24
@32@0:8d16@?24
@40@0:8d16Q24@?32
@48@0:8d16Q24@?32@40
@"NSObject<OS_dispatch_source>"
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
@"<MTAgentDiagnosticDelegate>"
@32@0:8@16Q24
@"_CDClientContext"
@"_DKKnowledgeStore"
v32@0:8@"<MTSource>"16@"MTTimer"24
v24@0:8@"MTTimer"16
@"NSMutableSet"
v28@0:8@?16B24
v28@0:8@16B24
v32@0:8@"MTScheduledObject"16@?<v@?>24
v24@0:8@"MTAlarm"16
v24@0:8@"MTScheduledObject"16
v32@0:8@"MTAlarm"16Q24
v28@0:8@"MTAlarm"16B24
@"<MTSystemStateDelegate>"
v32@0:8Q16Q24
@"WorldClockPreferences"
v24@0:8@"MTSleepCoordinatorStateMachine"16
v40@0:8@"MTSleepCoordinatorStateMachine"16@"NSDate"24Q32
v32@0:8@"MTSleepCoordinatorStateMachine"16d24
@"MTSleepCoordinatorStateMachine"
@"NAFuture"
@"MTXPCScheduler"
@"MTSleepModeMonitor"
@32@0:8@16d24
@40@0:8@16d24@?32
@"NSObject<OS_os_transaction>"
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INDeleteTimerIntentResponse">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INDeleteTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v40@0:8@16B24B28@?32
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeIntentResponse">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSetTimerAttributeTargetTimerResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSetTimerAttributeIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v52@0:8@16d24@32B40@?44
@"MTPBDismissAction"
@"MTPBSnoozeAction"
@40@0:8@16@24@32
@"NSNumber"
@44@0:8@16@24@32f40
@"<MTSyncableObject>"24@0:8@"<MTSyncableObject>"16
B24@0:8@"<MTSyncableObject>"16
@"MTAlarmManager"
@32@0:8Q16Q24
@32@0:8q16q24
@48@0:8q16q24q32q40
@72@0:8q16q24q32q40q48q56q64
Q20@0:8B16
B40@0:8@16q24@32
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@40@0:8Q16Q24@?32
@32@0:8@16B24B28
B40@0:8@16@24@32
B24@0:8q16
@"NSUUID"
@"MTSound"
@40@0:8@16q24@32
v32@0:8@"<MTSleepSessionTracker>"16@"<MTSleepSession>"24
@"HKHealthStore"
@"<MTSleepSessionTracker>"
v36@0:8f16@20@28
f32@0:8@16^B24
v36@0:8B16@20@28
B32@0:8@16^B24
v40@0:8q16@24@32
q32@0:8@16^B24
q32@0:8@16q24
q40@0:8@16@?24q32
v40@0:8d16@24@32
d32@0:8@16^B24
d32@0:8@16d24
d40@0:8@16@?24d32
@"NSUserDefaults"
i16@0:8
v20@0:8i16
@36@0:8@16@24B32
@40@0:8@16Q24q32
@44@0:8@16Q24q32B40
d32@0:8@16@24
@20@0:8i16
@28@0:8i16@20
v24@0:8@?<v@?>16
@"<NACancelable>"24@0:8@?<v@?@"NACancelationToken">16
@"<NACancelable>"32@0:8d16@?<v@?>24
@24@0:8^@16
@24@0:8d16
@52@0:8@16q24@32B40B44B48
@64@0:8@16@24@32@40@48@56
@"ALCity"
@"NSSet"
v32@0:8@16B24B28
@"MTUserNotificationActionDispatcher"
@"MTTimer"
@32@0:8@16^B24
v32@0:8d16@?24
@"MTPowerAssertion"
v24@0:8@"MTTask"16
v24@0:8@"MTTaskGroup"16
@"MTGCDTimer"
@40@0:8q16@24d32
v32@0:8@"MTGetAlarmsIntent"16@?<v@?@"MTGetAlarmsIntentResponse">24
B24@0:8@"<MTTimerTime>"16
q24@0:8@"<MTTimerTime>"16
@"NSNotificationCenter"16@0:8
@32@0:8@?16@24
@40@0:8@?16@24@32
B24@0:8d16
B24@0:8Q16
@"MTTimerManagerExportedObject"
@"MTXPCConnectionProvider"
@"MTTimerCache"
@"NSNotificationCenter"
@"MTTimerManager"
v32@0:8@"INResetTimerIntent"16@?<v@?@"INResetTimerIntentResponse">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INTimerResolutionResult">24
v32@0:8@"INResetTimerIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@16^B24
@"NSHashTable"
v36@0:8@16@?24B32
@48@0:8@16@24Q32@?40
@24@0:8B16B20
@36@0:8@16Q24B32
@40@0:8@16Q24B32B36
@44@0:8@16Q24B32B36B40
@36@0:8@16B24B28B32
@"MTAlarmManagerExportedObject"
@"MTAlarmCache"
v44@0:8@16B24@?28@?36
v60@0:8@16B24B28B32@?36@?44@?52
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSearchForTimersIntentResponse">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimeIntervalResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerStateResolutionResult">24
v32@0:8@"INSearchForTimersIntent"16@?<v@?@"INTimerTypeResolutionResult">24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"MTSleepManager"
@"MTAgentNotificationManager"
@"MTSystemStateListener"
@"MTLanguageChangeListener"
@"MTAgentDiagnosticListener"
@"MTTimeListener"
@"MTAlarmServer"
@"MTAlarmSnapshot"
@"MTTimerServer"
@"MTTimerSnapshot"
@"MTAlarmIntentDonor"
@"MTTimerIntentDonor"
@"MTCoreDuetMonitor"
@"MTSleepSessionManager"
@"MTSleepSessionTracker"
@"MTAlarmSyncDataModel"
@"MTStateMachine"
@"MTStateMachineState"
@"<MTStateMachineDelegate>"
@"<MTStateMachineInfoProvider>"
@28@0:8B16Q20
@36@0:8@16B24Q28
@44@0:8@16@24B32Q36
v36@0:8@16B24@28
@"HKObserverQuery"
@"NPSManager"
@"<MTTimerManagerIntentSupport>"16@0:8
@36@0:8@16B24@28
@"<MTTimerSchedulerDelegate>"
@"<MTTimerStorage>"
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
@"MTCompanionSyncRequest"
@"SYSession"
@"<MTSyncServiceDelegate>"
v40@0:8@16Q24@?32
v32@0:8@"MTAlarm"16@?<v@?@"NSError">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"MTAlarm"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"MTTimer"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSchedule"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSettings"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEvent"24
v32@0:8@"HKSPSleepStore"16Q24
v28@0:8@"HKSPSleepStore"16B24
@56@0:8@16@?24@?32@40@48
@"HKSPSleepStore"
@"HKSPFeatureAvailabilityStore"
@"<MTSyncStatusProviderDelegate>"16@0:8
v24@0:8@"<MTSyncStatusProviderDelegate>"16
@"<MTSyncStatusProviderDelegate>"
B32@0:8Q16Q24
@40@0:8Q16d24@?32
@32@0:8Q16d24
@"<MTTimerTime>"
@"MTXPCConnectionListenerProvider"
v44@0:8@16B24@28@?36
@48@0:8q16q24@32@40
@"<MTTimerManagerProviding>"
@"<MTTimerManagerIntentSupport>"
@"NSError"
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"MTOSTransaction"
^{__CFUserNotification=}
v68@0:8@16@24@32@40@48B56@?60
@"NSUUID"16@0:8
@"NSObject<OS_dispatch_group>"
@"<MTSyncChangeStore>"
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
@"<MTSyncServiceDelegate>"16@0:8
v24@0:8@"<MTSyncServiceDelegate>"16
@"SYService"
@"MTCompanionSyncSession"
@"MTExponentialBackOffTimer"
@"MTPBSound"
{?="bedtimeDismissedDate"b1"bedtimeFiredDate"b1"bedtimeSnoozeFireDate"b1"dismissedDate"b1"firedDate"b1"keepOffUntilDate"b1"lastModifiedDate"b1"snoozeFireDate"b1"bedtimeDismissedAction"b1"bedtimeHour"b1"bedtimeMinute"b1"bedtimeReminderMinutes"b1"daySetting"b1"dismissedAction"b1"hour"b1"minute"b1"onboardingVersion"b1"playOptions"b1"revision"b1"sleepModeOptions"b1"allowsSnooze"b1"isEnabled"b1"isSleepAlarm"b1"sleepMode"b1"sleepSchedule"b1"sleepTracking"b1"timeInBedTracking"b1}
@"MTSleepCoordinatorStateMachineAsleepState"
@"MTSleepCoordinatorStateMachineAwakeState"
@"MTSleepCoordinatorStateMachineDisabledState"
