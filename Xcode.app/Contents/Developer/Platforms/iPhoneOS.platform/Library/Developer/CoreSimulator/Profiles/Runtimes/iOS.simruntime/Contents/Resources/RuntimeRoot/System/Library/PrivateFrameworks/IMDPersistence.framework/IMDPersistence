@(#)PROGRAM:IMDPersistence  PROJECT:IMDPersistence-
333333
IMDSuggestions
Exception caught trying to create the SGSuggestionsService: %@
Exception caught trying to get suggestions for message: %@
sgService
T@"<NSObject><SGSuggestionsServiceMessagesProtocol>",&,V_sgService
v8@?0
SGSuggestionsService
CoreSuggestions
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDSuggestions.m
void _IMDSuggestionsApiInit()
_IMDSuggestionsApiInit
Unexpected nil '%@' in %s at %s:%d. %@
IMSGSuggestionsService
ASSERTION FAILED: %@
BEGIN EXCLUSIVE;
Database
IMFoundation
"Database": Skipping commit of a non-existent transaction in Downgraded database
COMMIT;
"Database": Skipping revert of a non-existant transaction in Downgraded database.
REVERT;
UPDATE _SqliteDatabaseProperties SET value = %ld WHERE key = '_ClientVersion';
"Database": Cloning and downgrading table '%@' into Downgraded Database
PRAGMA dest.table_info(%@);
name
, %@
INSERT INTO dest.%@ SELECT %@ FROM main.%@
"Database": Downgrade: turning off foreign keys
PRAGMA foreign_keys = OFF;
"Database": Downgrade: attaching new (empty so far) downgraded database to the real database
ATTACH '%@' AS 'dest';
"Database": Downgrade: Beginning transaction
"Database": Downgrade: Copying table: %@
v20@?0B8@"NSError"12
"Database": Downgrade: Detaching database
DETACH DATABASE 'dest';
Warning
"Database": Downgraded database SQL query '%@' got error: '%@'
"Database": Downgraded database SQL query ran ok: '%@'
"Database": Opening Downgraded database at: '%@'...
Open database
PRAGMA page_size = 4096;
PRAGMA auto_vacuum = 2;
PRAGMA journal_mode = wal;
"Database": Closed Downgraded database at: '%@'...
path
T@"NSString",&,N,V_path
tableNames
T@"NSArray",&,N,V_tableNames
createIndexesSQL
T@"NSArray",&,N,V_createIndexesSQL
createTablesSQL
T@"NSArray",&,N,V_createTablesSQL
createTriggersSQL
T@"NSArray",&,N,V_createTriggersSQL
isOpen
TB,R,N
database
T^{sqlite3=},R,N,V_database
downgradesToVersion
Tq,R,N,V_downgradesToVersion
SELECT value FROM _SqliteDatabaseProperties WHERE key = '_ClientVersion';
SELECT count(*) FROM %@;
INSERT INTO message_processing_task (guid, task_flags) VALUES (?, ?);
"Database": Unable to insert row (guid:%@ taskFlag:%ld) into Message PTask Table: %@
SELECT * FROM message_processing_task ORDER BY ROWID ASC LIMIT ?;
"Database": Unable to select rows from Message PTask Table: %@
array_result
guid
task_flags
B24@?0Q8@"NSObject<OS_xpc_object>"16
v16@?0@"NSObject<OS_xpc_object>"8
UPDATE message_processing_task SET task_flags = ? WHERE guid = ?;
"Database": Unable to update row (guid:%@ taskFlag:%ld) for Message PTask Table: %@
Delete from message_processing_task WHERE task_flags = 0;
"Database": Unable to delete completed task from Message PTask Table: %@
statement == nil || statement->query == nil || statement->sql_statement == nil
void IMDSqlStatementBindTextFromCFString(IMDSqlStatement *, CFStringRef)
"Database": ASSERTION FAILED: Condition is unexpectedly true: %s in "%s" at line %d [%@]
string
"Database": ASSERTION FAILED: %s is unexpectedly nil in "%s" at line %d [%@]
strings
void IMDSqlStatementBindTextFromArrayOfCFStrings(IMDSqlStatement *, CFArrayRef)
void IMDSqlStatementBindInt64(IMDSqlStatement *, int64_t)
statement == nil || statement->sql_statement == nil
void IMDSqlStatementBindInt(IMDSqlStatement *, int32_t)
void IMDSqlStatementBindDouble(IMDSqlStatement *, double)
void IMDSqlStatementBindBlob(IMDSqlStatement *, CFDataRef)
column.statement
int IMDIntFromSqlColumn(IMDSqlColumn)
statement
double IMDDoubleFromSqlColumn(IMDSqlColumn)
int64_t IMDInt64FromSqlColumn(IMDSqlColumn)
CFStringRef IMDStringFromSqlColumn(IMDSqlColumn)
CFDataRef IMDBlobFromSqlColumn(IMDSqlColumn)
block
void IMDSqlStatementIterateRow(IMDSqlStatement *, IMDSqlOperationColumnIterator)
sql_statement
IMDSqlColumn IMDSqlStatementColumnByIndex(IMDSqlStatement *, int)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDSqlStatement.m
IMDSqlStatementColumnByIndex
Unexpected false '%@' in %s at %s:%d. %@
index >= 0 && index < count
IMDSqlColumn IMDSqlStatementColumnByName(IMDSqlStatement *, const char *)
dictionary
void IMDSqlColumnSetColumnValueInXPCDictionary(xpc_object_t, IMDSqlColumn)
xpc_object_t IMDSqlStatementGetXPCRow(IMDSqlStatement *)
CFDictionaryRef IMDSqlStatementGetRow(IMDSqlStatement *)
public.jpeg
__kmessageItemTypeKey
__kmessageRowIDKey
__kmessageGUIDKey
__kmessageDateKey
__kmessageDateReadKey
__kmessageDateDeliveredKey
__kmessageTextKey
__kmessageAttributedBodyKey
__kmessageFlagsKey
__kmessageServiceKey
__kmessageSubjectKey
__kmessageErrorKey
__kmessageMadridTypeKey
__kmessageHasAttachmentsKey
__kmessageAttachmentsKey
__kmessageAssociatedMessageGUIDKey
__kmessageAssociatedMessageTypeKey
__kmessageAssociatedMessageRangeKey
__kmessageBalloonBundleIDKey
__kmessagePayloadDataKey
__kmessageExpressiveSendStyleIDKey
__kmessageSummaryInfoDataKey
__kmessageHandleKey
__kmessageCNContactForSenderKey
__kmessageDestinationCallerIDKey
__kmessageAccountKey
__kmessageThreadOriginatorGUIDKey
__kmessageThreadOriginatorKey
__kchatStyleKey
__kchatPropertiesDataKey
__kchatChatIdentifierKey
__kchatChatGUIDKey
__kchatGroupNameKey
__kchatLastAddressedHandleStringKey
__kchatGroupIDKey
__kchatIsFilteredKey
__kchatHasDNDSetKey
__kchatWasDetectedAsSMSSpamKey
__kchatSMSCategoryKey
__kchatWasDetectedAsiMessageSpamKey
__kchatWasReportedAsiMessageSpamKey
__kchatHandlesForChatKey
__kchatLastMessageTimestamp
com.apple.MobileSMS
com.apple.messages.notifications
com.apple.MobileSMS.CKDNDList
com.apple.carrier
MigratedPreferencesDomain
LastIMDNotificationPostedDate
LastFailedMessageIMDNotificationPostedDate
LastBulletinboardPostedMessageRowID
LastBulletinboardPostedDate
wasAutoDetectedForSpam
wasDetectedAsiMessageSpam
wasDetectedAsSMSSpam
SMSCategory
CKDNDListKey
kSpokenMessageWhitelistLevel
kSpokenMessageWhitelistLevelVersion
ShowMessagesConversationListFilteringPrompt
MessageFilteringSettingsConfirmed
IncomingMessageAlertFiltration
IncomingMessageAlertSpamFiltration
RaiseToListenEnabled
AddressMeInGroupchat
messageIsAddressedToMe
messageMentionsMe
com.apple.MobileSMS.IncomingMessageAlertCount.changed
MessageExtension
MessageExtension-Madrid
MessageExtension-MadridGroup
MessageExtension-SMS
MessageExtension-AudioRaise
MADRID_MESSAGE_FORMAT
IMSharedUtilities
SINGLE_SUMMARY_FORMAT
GROUP_SUMMARY_FORMAT
TEXT_MESSAGE_FORMAT
IMDNotificationsController
We have not migrated the SMSBBPlugin preferences to the new UserNotifications domain...doing so now with last posted date %@
The SMSBBPlugin last posted date was null, so migrating the rowid
lastAlertedMessage is null for the old rowid: %@ -- this device hasn't posted any message notifications
The last posted rowid is %@ and the date for that message is %@
We are setting the date to be %@
Setup first load lastAlertedMessageDate %@ lastAlertedFailedMessageDate %@
setting last alerted message date to %@
q24@?0@8@16
Skipping posting guid as we already posted messages newer: %@
   FromChat: { chatChatGUIDKey: %@
      chatGroupIDKey: %@
      chatGroupNameKey: %@ }
B24@?0@8@"NSDictionary"16
iterating new messages for newMessageDate: [%lld]-[%@], last alerted date: [%lld]-[%@]
Generated notification request for identifier %@ with category identifier %@
Finished adding notification request with error %@
v16@?0@"NSError"8
v12@?0B8
Generated notification request for failed delivery identifier %@
Finished adding notification request %@ for failed delivery with error %@
Advancing last failed message date to %@ but not posting the notification
v32@?0@8Q16^B24
Post notifications after coalescing, background threading
newMessages
lastFailedDate
new messages number: [%lu] lastAlertedDate: [%lld]-[%@] lastFailedMessageAlertDate: [%lld]-[%@] lastFailedMessageDate: [%lld]-[%@]
Post notifications called from client with context %@
Withdrew message notifications for message guids %@
Retract and re-post iMessage notifications sent before first unlock
We need to post these urgent message requests %@ with context %@
MADRID_MESSAGE
CKBBContextKeyMessageGUID
CKBBContextKeyIsFirstUnlock
adding notification request under first unlock %@ with content %@
we added the notification request under first unlock %@ with error %@
IMDNotificationsController - %s asked to post notification with nil messageGUID
-[IMDNotificationsController postFirstUnlockMessage:forIdentifier:]
We have never set the raise to listen default, marking it as enabled
IMDNotificationController
We got an audio message and raise to listen is enabled setting audio notification category
This was not an audio message
"Database": We don't have a chat identifier to set as the thread identifier for chat dictionary %@
Setting the date %@ category identifier %@ thread identifier %@
Message sent with Invisible Ink
We don't have a message body for message guid %@
"Database": We don't have a message guid for message dictionary %@
Unable to create formatted display string for other recipient handle from messageGUID %@
PARTICIPANT_ADDRESS_TO_YOU_ITEM
PARTICIPANT_ADDRESS_FINAL_ITEM
PARTICIPANT_ADDRESS_NON_FINAL_ITEM
GROUP_MENTION_RECEIVED_TITLE
GROUP_REPLY_RECEIVED_TITLE
GROUP_REPLY_RECEIVED_TO_YOU_TITLE
MESSAGE_SEND_RECEIVED_AS_JUNK_DEFAULT
MESSAGE_SEND_RECEIVED_AS_JUNK_BODY_DEFAULT
MESSAGE_SEND_TO_%@_RECEIVED_AS_JUNK
CKBBContextKeySenderName
MESSAGE_SEND_RECEIVED_AS_JUNK_BODY_EMAIL_ADDRESS_%@
MESSAGE_SEND_RECEIVED_AS_JUNK_BODY_PHONE_NUMBER_%@
Sender (self) ID "%@" type not identified as email or phone number. Displaying default summary for received-as-junk notification
Sender (self) ID not found (senderID is NULL). Displaying default summary for received-as-junk notification
CKBBContextKeyIsFailedMessage
MESSAGE_SEND_FAILED
MESSAGE_SEND_TO_UNKNOWN_FAILED
MESSAGE_SEND_TO_PERSON_FAILED_FORMAT
Unable to create formatted display string for handle from messageGUID %@
MENTION_RECEIVED_TITLE
REPLY_RECEIVED_TITLE
Coordinated Alerts -- this is not the most active device, suppressing the screen from lighting up and not playing sound
Populating sound and display isMostActive %@ sound %@ ignoreDND %@ suppress screen light up %@
We have an urgent message for %@ punching through DND
CKBBUserInfoKeyChatIdentifier
CKBBContextKeyChatGUIDs
CKBBContextKeyChatGroupID
CKBBContextKeySenderPersonCentricID
CKBBContextKeyIsAcknowledgment
CKBBContextKeyIsSticker
CKBBContextKeyIsBalloonPluginBulletin
CKBBContextKeyBalloonBundleID
CKBBContextKeyEffectIdentifier
CKBBContextKeyIsAttachmentWithEffectBulletin
CKBBContentKeyAttachmentSummary
CKBBContentKeyAttachmentCount
CKBBContentKeyCountByAttachmentType
Set userInfo for dictionaries %@
Set userInfo for message content dictionaries %@
public.vlocation
Failed to deserialize contact for message %@, error %@
generated previewfile url %@ for transfer %@ as unnotificationattachment %@ with error %@
We didn't generate a previewFileURL for transfer %@ to generate a notification preview
Filename was null (%@) or transfer state was not finished (%@) for file transfer %@ -- did not generate attachment preview
B56@?0@"NSString"8^@16^@24^B32^B40^@48
IncomingMessageAlertCount
Setting repeat alert count to %d
Chat has DND key set %@, not marking as spoken message whitelisted
Contact %@ isSpokenMessageWhitelisted: %d
Coordinated Alerts -- this is not the most active device, suppressing spoken messages
CoordinatedAlertQueue
v28@?0@"NSError"8B16@"NSDictionary"20
timeout waiting for completionHandler from SFCoordinatedAlertRequest
SpokenMessageWhitelistLevel: %lu
Last message timestamp: %f
Last message date: %@
Missing last read date for chatID %@
Message: %@ is spoken message whitelisted: %d
Stripped address: %@, contactToUse: %@
Contact to use valid. AddressBookName : %@
Address: %@, displayName = %@. Contact = %@
We don't have an address book name, so going to try and suggest a name
Defaulting to the handle for the display name
Handle display name is equal to lowercase uncanonicalized address, falling back to preserve case
Display name = %@
@"NSString"16@?0@"NSString"8
MAYBE
We have a nickname suggestion for the title %@
address %@ results %@ error %@
v24@?0@"NSArray"8@"NSError"16
Suggestion service request timed out
Using Suggested name = %@
v16@?0@"NSString"8
IMBusinessNameManager
Business name lookup timed out
BUSINESS_NOTIFICATION_TITLE
IMNotificationsController
 deviceIsiPad %@ allowPromptToConfirmSetting %@ carrier setting %@
We have never set the filtering default, check if we should be doing it by default %@
isSMS %@ unknownFilterinOn %@ smsSpamFilteringOn %@ chatIsFiltered %@ isSpam %@ isContact %@
We are not posting the notification because chat has DND set (%@) or it's from a filtered unknown sender (%@)
v40@?0@"NSString"8{_NSRange=QQ}16^B32
not overriding chat silencing because override message mentions me is (%@) isSMS (%@) isBusinessChat (%@).
Request is already delivered {deliveredRequest: %@ currentRequest: %@}
We will post the notification request %@ {requestIsAlreadyDelivered: %@
v16@?0@"NSArray"8
We don't post notifications during system migration
Disallowing notifications during ScreenTime Downtime
Disallowing notifications during ScreenTime Comm Limits
fetch screenTimeNotificationOption for handleIDs: [%@]
STConversation
ScreenTimeCore
STConversationContext
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDNotificationsController.m
-[IMDNotificationsController screenTimeNotificationOptionsForChatDictionary:]_block_invoke
IMSTConversationClass
IMSTConversationContextClass
get screenTimeNotificationOption: [%tu]
This notification %@ hasn't been associated with a chat yet
Not notifying for %@ because it is a silent business chat message
Not notifying for %@ because it is not allowed by Screen Time
shouldIgnoreDowntime for %@ : %@ 
suppressed notification generation for silenced message %@.
Caught exception generation notification %@
We don't notify for delivery non-failures or failures of non-messages for messageDictionary %@
We got 0 handles back for chatRecord with guid %@
We didn't get any chat records for message record %@
DND is %@ for chat %@ based on style %lld chatIdentifier %@ groupID %@
DND is %@ for chat %@ based on group participant hash %@ handles %@ lastAddressedHandleString %@
CNContact for sender %@
@"NSString"16@?0@8
notificationCenter
T@"UNUserNotificationCenter",&,N,V_notificationCenter
incomingMessageNotificationCategory
T@"UNNotificationCategory",&,N,V_incomingMessageNotificationCategory
incomingFilesNotificationCategory
T@"UNNotificationCategory",&,N,V_incomingFilesNotificationCategory
businessNameManager
T@"IMBusinessNameManager",&,N,V_businessNameManager
meContact
T@"CNContact",&,N,V_meContact
meTokens
T@"NSSet",&,N,V_meTokens
activeAccountAliases
T@"NSSet",&,N,V_activeAccountAliases
lastAlertedMessageDate
lastAlertedFailedMessageDate
suggestionsService
T@,&,N,V_suggestionsService
Re-Alert setting has changd
com.apple.Messages
SELECT value FROM kvtable WHERE key = ?
v32@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16^{CSDBSqliteStatement=^{CSDBSqliteConnection}^{sqlite3_stmt}i}24
value
INSERT OR REPLACE INTO kvtable (key, value) VALUES (?, ?)
DELETE FROM kvtable WHERE key = ?
operation
BOOL _IMDSqlOperationRunQuery(IMDSqlOperation *, CFStringRef, IMDBlock, IMDBlock, IMFileLocation_t *)
query
"Database": SQL ERROR: %@
operationBlock
BOOL IMDRunSqlOperation(IMDSqlOperationBlock)
BOOL _IMDSqlOperationRunQueryWithString(CFStringRef, NSError **, IMDSqlOperationBlock, IMFileLocation_t *)
__kIMDCNPersonNotFound
aliasMap
historyToken
dictionary_result
IMDCNAliasResolver
IMDCNRecordIDForAliases ASYNC returning updated map count %lu. Old map count %lu
IMDCNRecordIDForAliases returning map count %lu for aliases count %lu
IMDAreAllAliasesUnknown result is %d
bool_result
SMSMigrator
"Database": "Database": Database version is newer, but internal build allows this state (dbver %d, expected %d)
Database version is newer, but internal build allows this state (dbver %d, expected %d)
"Database": "Database": Unable to perform database migration to %d - NO MIGRATOR FOUND
Unable to perform database migration to %d - NO MIGRATOR FOUND
!success && op.error == nil
BOOL _IMDDatabasePerformOneMigration(IMDDatabaseVersioner *, CSDBSqliteDatabase *, CSDBSqliteConnection *, int, int *, NSError **)
can't have migration %d to %d fail without error!! (Begin Transaction)
can't have migration %d to %d fail without error!! (Drop Triggers)
can't have migration %d to %d fail without error!! (Drop unknown indexes)
can't have migration  %d to %d fail without error!! (Actual migration))
Migration
Migration from %d to %d failed with error: %@
Migrated from %d to %d ok in %f seconds
Unable to perform database migration from %d to %d
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDDatabaseMigration.m
BOOL IMDCreateTriggersAndIndexes(IMDSqlOperation *, BOOL)
IMDCreateTriggersAndIndexes
success || operation->error != nil
can't have migration fail without error!!
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDUtils.h
BOOL IMDSetOutError(NSError **, NSError *)
IMDSetOutError
Unexpected not nil '%@' in %s at %s:%d. %@
*outError
outError is already pointing at an error, this could be a leak
v16@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8
IMDSMSRecordStoreCopyAllChats
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, sr_server_change_token, sr_ck_sync_state, cloudkit_record_id, sr_cloudkit_record_id, last_addressed_sim_id, is_blackholed FROM chat ORDER BY chat.ROWID ASC;
IMDSMSRecordStoreCopyAllNamedChats
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, sr_server_change_token, sr_ck_sync_state, cloudkit_record_id, sr_cloudkit_record_id, last_addressed_sim_id, is_blackholed FROM chat WHERE display_name IS NOT NULL AND display_name != "" ORDER BY chat.ROWID ASC;
IMDSMSRecordStoreCopyAllActiveChats
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, sr_server_change_token, sr_ck_sync_state, cloudkit_record_id, sr_cloudkit_record_id, last_addressed_sim_id, is_blackholed FROM chat INDEXED BY chat_idx_is_archived WHERE IS_ARCHIVED = 0 ORDER BY chat.ROWID ASC;
IMDChatQueries
Trying to update chats wuth lastAddressedSIMID %@ to new simID %@ and new handle %@
Old lastAddressedSIMID passed is nil, returning.
Both new lastAddressedSIMID and lastAddressedSIMID are nil, not updating chats with simID %@ and returning.
UPDATE chat                 SET last_addressed_handle = ?, last_addressed_sim_id = ?                 WHERE service_name = ? AND last_addressed_sim_id = ?;
Error executing IMDChatRemapChatsWithLastAddressedSIMIDToNewLastAddressedIDs %@ 
Last addressed handles/simIDs got modified to %@ and %@. Posting notification to reload chat registry.
com.apple.imdpersistenceagent.notification.lastaddressedidsmodified
Trying to find last address labelID/date from chatIds %@ and labelIDs %@
"Database": No chatIdentifiers or lastAddressedLabelIDsCount provided. No rows will be returned.
select max(cm.message_date),last_addressed_sim_id from (select * from chat where chat_identifier in (%@?) AND style=45 and service_name=? and last_addressed_sim_id in (%@?)) c INNER JOIN chat_message_join cm ON c.ROWID=cm.chat_id;
GetMessageDateAndLastAddressedLabelID: running with query %@
last_addressed_sim_id
max(cm.message_date)
GetMessageDateAndLastAddressedLabelID: found results from db %@
"Database": Unable to find last addressed lablID & date from chat identifiers: %@
labelID
date
chatGUID is nil or empty string = %@. Returning NULL result.
SELECT DISTINCT display_Name,chat_id from chat c INNER JOIN chat_handle_join ch ON c.ROWID = ch.chat_id INNER JOIN handle h on h.ROWID = ch.handle_id WHERE c.state = 3 AND c.guid = ?
v16@?0^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}8
chat_id
SELECT handle_id FROM chat_handle_join WHERE chat_id = ?
display_name
Handle records from kIMDChatTableSelectHandleIDFromChatID query is empty.
displayName
handles
SELECT guid,display_Name,chat_id from chat c INNER JOIN chat_handle_join ch ON c.ROWID = ch.chat_id INNER JOIN handle h on h.ROWID = ch.handle_id WHERE c.state = 3 AND h.id = ?
chatGUID
Trying to find last address handles/date from chatIds %@ and handles %@
"Database": No chatIdentifiers or lastAddressedHandles provided. No rows will be returned.
select max(cm.message_date),last_addressed_handle from (select * from chat where chat_identifier in (%@?) AND style=45 and service_name=? and last_addressed_handle in (%@?)) c INNER JOIN chat_message_join cm ON c.ROWID=cm.chat_id;
GetMessageDateAndLastAddressedHandle: running with query %@
last_addressed_handle
GetMessageDateAndLastAddressedHandle: found results from db %@
"Database": Unable to find last addressed handles & date from chat identifiers: %@
handle
select chat_id, max(message_date) from chat_message_join group by chat_id order by message_date desc;
max(message_date)
Unable to find most recent ChatRow IDs from chat_message_join error: %@
Received empty batch in IMDChatRecordCopyAllActiveChatsProgressivelyWithLimitAndBlock
Copying active chats progressively: total number copied was %ld
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, sr_server_change_token, sr_ck_sync_state, cloudkit_record_id, sr_cloudkit_record_id, last_addressed_sim_id, is_blackholed FROM chat WHERE guid = ? ORDER BY chat.ROWID ASC;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, sr_server_change_token, sr_ck_sync_state, cloudkit_record_id, sr_cloudkit_record_id, last_addressed_sim_id, is_blackholed FROM chat WHERE ROWID = (SELECT chat_id from chat_message_join WHERE message_id = ?)
Did not get results for chat guid %@
No handle provided to IMDChatRecordCopyChatsWithHandleOnService
No service provided to IMDChatRecordCopyChatsWithHandleOnService
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, sr_server_change_token, sr_ck_sync_state, cloudkit_record_id, sr_cloudkit_record_id, last_addressed_sim_id, is_blackholed FROM chat WHERE    chat_identifier = ? AND    service_name = ? ORDER BY chat.ROWID ASC;
No roomname provided to IMDChatRecordCopyChatsWithRoomnameOnService
No service provided to IMDChatRecordCopyChatsWithRoomnameOnService
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, sr_server_change_token, sr_ck_sync_state, cloudkit_record_id, sr_cloudkit_record_id, last_addressed_sim_id, is_blackholed FROM chat WHERE    room_name = ? AND    service_name = ? ORDER BY chat.ROWID ASC;
No roomname provided to IMDChatRecordCopyNewestChatForGroupIDOnService
No service provided to IMDChatRecordCopyNewestChatForGroupIDOnService
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, sr_server_change_token, sr_ck_sync_state, cloudkit_record_id, sr_cloudkit_record_id, last_addressed_sim_id, is_blackholed FROM chat LEFT OUTER JOIN chat_message_join on    chat_id == chat.rowid WHERE    original_group_id = ? AND    service_name = ? ORDER BY    chat_message_join.message_date DESC LIMIT    1;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, sr_server_change_token, sr_ck_sync_state, cloudkit_record_id, sr_cloudkit_record_id, last_addressed_sim_id, is_blackholed FROM chat LEFT OUTER JOIN chat_message_join on    chat_id == chat.rowid WHERE    group_id = ? AND    service_name = ? ORDER BY    chat_message_join.message_date DESC LIMIT    1;
guid == NULL || guid.length == 0
void IMDChatRecordDeleteChatForGUID_Fast(NSString *)
DELETE FROM chat WHERE guid = ?;
Query for GUID yields %d results, deleting all
GroupPhotoImage
   => file doesn't exist at path: %@
  => failed to remove item at path: %@ 
  => Successfully deleted item at path: %@ 
Unable to associate message with chat, the chat is NULL (chat guid: %@)
Unable to associate message with chat, the message is NULL (message guid: %@)
IMDChatRecordAssociateMessageWithGUIDToChatWithGUIDIfNeeded [ChatGUID: %@] [MessageGUID: %@]
IMDChatRecordDisassociateMessageWithGUIDFromChatWithGUIDIfNeeded [ChatGUID: %@] [MessageGUID: %@]
Unable to disassociate message from chat, the chat is NULL.
Unable to disassociate message from chat, the message is NULL.
Unable to update filter flag, the chat record is NULL.
Request to insert guid %@ recordID %@ timeStamp %lld
INSERT INTO sync_deleted_chats (guid, recordID, timestamp) VALUES (?, ?, ?);
"Database": Unable to insert row (guid:%@ recordID: %@ timeStamp:%ld, error %@) into sync_deleted_chats Table
Returned from IMDP after inserting in synd deleted table guid %@ recordID %@ timeStamp %lld
Request to load deleted chat recordIDs with limit %lld
select guid, recordID, timestamp from sync_deleted_chats where LENGTH(recordID) > 0;
"Database": Unable to select rows from Message Deleted Messages Table: %@
recordID
timeStamp
Returned from DB call after loading messages to delete messages count %lu
Request to clear pending deletes from chat table
delete from sync_deleted_chats;
IMDMessageQueries
IMDChatClearPendingDeleteChatsTable cleared pending delete chat table
Returned from DB call after marking clearing all pending delete chats
rowIDCount
CFStringRef kIMDChatRemapMessagesWithErrorCodeToErrorCode(int)
"Database": ASSERTION FAILED: Conditions are unexpectedly equal: %s == %s in "%s" at line %d [%@]
theQuery
UPDATE message SET error=? WHERE rowid IN (SELECT message_id FROM chat_message_join WHERE chat_id IN (?
)) AND error=?
UPDATE message SET error=? WHERE rowid IN (SELECT message_id FROM chat_message_join WHERE chat_id IN (?)) AND error=?
Request to reset messages with error %lld to error %lld on chatGUIDS %@
"Database": Unable to update messages to new error (%@)
deleting attachment failed at path: %@: %@
Removed attachment at path: %@
No attachment to remove at path: %@
Resetting downloadState for attachment guid: %@
Attachment already marked as needing download for guid: %@
Purging attachment files for chat guid: %@
Found %ld messages for chat
Found %ld attachments for message: %@
Failed to load attachments for message: %@
Failed to load message at index: %ld
Updated %lld attachments on %ld messages
No messages load for chat: %@
Chat record not loaded for chat: %@
Reindexing %ld messages
chat
style
state
account_id
properties
chat_identifier
service_name
room_name
account_login
is_archived
group_id
is_filtered
successful_query
engram_id
server_change_token
ck_sync_state
original_group_id
last_read_message_timestamp
sr_server_change_token
sr_ck_sync_state
cloudkit_record_id
sr_cloudkit_record_id
is_blackholed
country
service
uncanonicalized_id
person_centric_id
IMDChatRecordCopyChatGUIDsWithUnplayedAudioMessages
SELECT DISTINCT  c.guid FROM   chat c INNER JOIN chat_message_join cm ON   c.ROWID = cm.chat_id INNER JOIN message m ON   m.ROWID = cm.message_id WHERE   m.is_from_me = 0   AND m.is_played = 0   AND m.is_audio_message = 1   AND c.style = 45 
v24@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16
op == nil || op->connection == nil || op->database == nil
void IMDSqlOperationWasInitialized(IMDSqlOperation *)
chat_message_join
chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, message_date INTEGER DEFAULT 0, PRIMARY KEY (chat_id, message_id)
chat_handle_join
chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, handle_id INTEGER REFERENCES handle (ROWID) ON DELETE CASCADE, UNIQUE(chat_id, handle_id)
message_attachment_join
message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, attachment_id INTEGER REFERENCES attachment (ROWID) ON DELETE CASCADE, UNIQUE(message_id, attachment_id)
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, id TEXT NOT NULL, country TEXT, service TEXT NOT NULL, uncanonicalized_id TEXT, person_centric_id TEXT, UNIQUE (id, service) 
deleted_messages
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL
message_processing_task
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL, task_flags INTEGER NOT NULL 
sync_deleted_messages
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL, recordID TEXT 
sync_deleted_chats
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL, recordID TEXT,timestamp INTEGER
sync_deleted_attachments
kvtable
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, key TEXT UNIQUE NOT NULL, value BLOB NOT NULL
CREATE TABLE IF NOT EXISTS %@ (%@);
select name from sqlite_master where type = 'table'
v40@?0{IMDSqlColumn=^{IMDSqlStatement}*ii}8^B32
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDTables.m
int64_t IMDRowCountForTable(NSString *, NSError **)
IMDRowCountForTable
tableName
select count(*) from %@
void IMDCreateLegacyTables(IMDSqlOperation *)
IMDCreateLegacyTables
BOOL IMDCreateTablesWithOperation(IMDSqlOperation *, BOOL)
IMDCreateTablesWithOperation
"Database": "Database": Failed to create table %@ with error %@
Failed to create table %@ with error %@
Created table (if needed) ok: %@
BOOL IMDDropTableWithOperation(IMDSqlOperation *, NSString *, BOOL)
IMDDropTableWithOperation
DROP TABLE IF EXISTS %@;
"Database": "Database": Failed to drop table %@ with error %@
Failed to drop table %@ with error %@
Dropped table (if needed) ok: %@
sqlite_stat1
IF NOT EXISTS
SELECT name, sql FROM sqlite_master WHERE type = 'table';
Expected: %@
  Actual: %@
BOOL IMDConfirmTablesCreatedAsExpected(NSError **)
IMDTables.m
index check failed
void IMDSqlOperationIterateRow(IMDSqlOperation *, IMDSqlOperationColumnIterator)
message
text
replace
service_center
handle_id
subject
attributedBody
version
type
account
account_guid
error
date_read
date_delivered
is_delivered
is_finished
is_emote
is_from_me
is_empty
is_delayed
is_auto_reply
is_prepared
is_read
is_system_message
is_sent
has_dd_results
is_service_message
is_forward
was_downgraded
is_archive
cache_has_attachments
cache_roomnames
was_data_detected
was_deduplicated
is_audio_message
is_played
date_played
item_type
other_handle
group_title
group_action_type
share_status
share_direction
is_expirable
expire_state
message_action_type
message_source
associated_message_guid
associated_message_type
balloon_bundle_id
payload_data
expressive_send_style_id
associated_message_range_location
associated_message_range_length
time_expressive_send_played
message_summary_info
ck_record_id
ck_record_change_tag
destination_caller_id
sr_ck_record_id
sr_ck_record_change_tag
is_corrupt
reply_to_guid
sort_id
is_spam
has_unseen_mention
thread_originator_guid
thread_originator_part
attachment
created_date
start_date
filename
mime_type
transfer_state
is_outgoing
user_info
transfer_name
total_bytes
is_sticker
sticker_user_info
attribution_info
hide_attachment
ck_server_change_token_blob
original_guid
sr_ck_server_change_token_blob
void _IMDPerformBlockWithDelay(NSTimeInterval, dispatch_block_t, IMFileLocation_t *)
recordStore
void _IMDPerformBlock(dispatch_block_t, IMFileLocation_t *)
void _IMDPerformLockedMessageStoreBlock(CSDBLockedRecordStore, IMFileLocation_t *)
void _IMDPerformLockedMessageStoreBlockWithoutInitialize(CSDBLockedRecordStore, IMFileLocation_t *)
void _IMDPerformLockedDatabaseBlock(CSDBLockedDatabase, IMFileLocation_t *)
threadedRecordStore
recordStoreRef
void _IMDPerformLockedStatementBlockWithQuery(CFStringRef, CSDBLockedStatement, IMFileLocation_t *)
void _IMDPerformLockedConnectionBlock(CSDBLockedConnection, IMFileLocation_t *)
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) 
AND m.ROWID >= ( SELECT * FROM (SELECT mm.rowid FROM message mm WHERE mm.GUID = ? UNION SELECT 0 ) ORDER BY ROWID DESC LIMIT 1   ) 
 AND m.item_type == 0 AND m.associated_message_type == 0 
ORDER BY cm.chat_id, cm.message_id DESC 
LIMIT ?
AND ((m.thread_originator_guid = ? AND m.thread_originator_part = ?) OR m.associated_message_guid = ?)
 AND m.is_read == 0 AND m.is_finished == 1 AND m.is_from_me == 0 
ORDER BY cm.chat_id, cm.message_date DESC, cm.message_id DESC 
"Database": No handles or services specified. Or handleCount != serviceCount. No rows will be returned.
SELECT FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id IN (SELECT m.ROWID FROM message m WHERE m.guid 
DELETE FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id IN (SELECT m.ROWID FROM message m WHERE m.guid 
SELECT cm.chat_id, COUNT(1) FROM message m INNER JOIN chat_message_join cm ON m.ROWiD = cm.message_id WHERE m.item_type == 0 AND m.is_read == 0 AND m.is_from_me == 0 GROUP BY cm.chat_id
com.apple.IMDPersistenceIPCQueue
IMDPersistenceConnection
IMDPersistenceAgent disconnected
Forcing a new xpc connection
com.apple.imdpersistence.IMDPersistenceAgent
void IMDSqlOperationInvalidateCaches(IMDSqlOperation *)
operation == nil || operation->connection == nil
void IMDSqlOperationUpdateLastDeleteSequenceNumber(IMDSqlOperation *)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDSqlOperationCoreSDB.m
IMDSqlOperationUpdateLastDeleteSequenceNumber
IMDSharedThreadedRecordStore()
CSDBRecordStoreRefFromThreadedRecordStoreRef(IMDSharedThreadedRecordStore())
operation->connection
connection
void _IMDUpdateSequenceNumberWithConnection(CSDBSqliteConnection *)
__CSDBRecordSequenceNumber
IMDSqlOperation IMDSqlOperationInitWithCSDBConnection(CSDBSqliteConnection *, CSDBSqliteDatabase *)
IMDSqlOperationInitWithCSDBConnection
IMDSqlOperation IMDSqlOperationInitWithCSDBDatabase(CSDBSqliteDatabase *)
IMDSqlOperationInitWithCSDBDatabase
sqlConnection
CSDBSqliteDatabaseConnectionForWriting returned a nil CSDBSqliteConnection
IMDSqlOperation IMDSqlOperationInitWithSharedCSDBDatabase()
IMDSharedSqliteDatabase() should not be nil
IMDSqlOperation IMDSqlOperationInitWithThreadedMessageStore(CSDBThreadedRecordStoreRef)
IMDSqlOperationInitWithThreadedMessageStore
messageStore
IMDSqlOperation IMDSqlOperationInitAndCreateIfNeededWithPath(NSString *)
IMDSqlOperationInitAndCreateIfNeededWithPath
IMDSqlOperation IMDSqlOperationInitWithPath(NSString *)
IMDSqlOperationInitWithPath
Database not found at %@
void IMDSqlOperationSetThreadedMessageStore(IMDSqlOperation *, CSDBThreadedRecordStoreRef)
IMDSqlOperationSetThreadedMessageStore
Error IMDMessageRecordCreateFromRecordIDWithLock could not create message for id %lld
Setting IMDMessageRecord property %d of %d
New message record [%@] has ID [%lld]  [%@].
"Database": Attempted to get record identifier for NULL message record: %@
"Database": Attempted to get record identifier for NULL record: %@
CFStringRef IMDMessageRecordCopyGUID(CFAllocatorRef, IMDMessageRecordRef)
"Database": NULL message passed to %s
CFStringRef IMDMessageRecordCopyGUIDUnlocked(CFAllocatorRef, IMDMessageRecordRef)
CFStringRef IMDMessageRecordCopyText(CFAllocatorRef, IMDMessageRecordRef)
int64_t IMDMessageRecordGetHandleID(IMDMessageRecordRef, Boolean)
int64_t IMDMessageRecordGetItemType(IMDMessageRecordRef, Boolean)
int64_t IMDMessageRecordGetDate(IMDMessageRecordRef, Boolean)
"Database": NULL message passed when trying to get property: %ld
"Database": NULL message passed when trying to set property: %ld  (value:%d)
SELECT chat_id FROM chat_message_join WHERE message_id = ?;
SELECT attachment_id FROM message_attachment_join WHERE message_id = ? LIMIT ?;
void IMDMessageRecordBulkCopy(IMDMessageRecordRef, IMDMessageRecordItemType *, int64_t *, int64_t *, CFStringRef *, int64_t *, int64_t *, int64_t *, int64_t *, CFStringRef *, CFDataRef *, CFNumberRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, CFStringRef *, int64_t *, int64_t *, Boolean *, Boolean *, CFStringRef *, int64_t *, CFStringRef *, int64_t *, int64_t *, int64_t *, int64_t *, int64_t *, CFStringRef *, int64_t *, NSRange *, CFStringRef *, CFDataRef *, CFStringRef *, int64_t *, CFDataRef *, int64_t *, CFStringRef *, CFDataRef *, CFStringRef *, CFStringRef *, int64_t *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, CFStringRef *, CFStringRef *)
"Database": Remote set other handle not implemented
Trying to associate attachment [%lld] with message [%lld]
INSERT OR IGNORE INTO message_attachment_join (message_id, attachment_id) VALUES (?, ?);
void IMDMessageRecordAddAttachmentIfNeededUnlocked(IMDMessageRecordRef, IMDAttachmentRecordRef)_block_invoke
"Database": Error adding attachment join: %d (%s)
void IMDMessageRecordBulkUpdate(IMDMessageRecordRef, int64_t, CFStringRef, int64_t, int64_t, int64_t, int64_t, CFStringRef, CFDataRef, CFNumberRef, CFStringRef, CFStringRef, CFStringRef, int64_t, CFStringRef, int64_t, int64_t, int64_t, CFStringRef, int64_t, int64_t, int64_t, int64_t, int64_t, CFStringRef, int64_t, NSRange, CFDataRef, CFStringRef, int64_t, CFDataRef, int64_t, CFStringRef, CFDataRef, CFStringRef, CFStringRef, int64_t, CFStringRef, CFStringRef, CFStringRef, int64_t, CFStringRef, CFStringRef)
recordIdentifier
flags
void _IMDMessageRecordBulkCopyXPCDictionary(IMDMessageRecordRef, xpc_object_t, Boolean, Boolean, Boolean)
"Database": NULL dictionary passed to %s
"Database": NULL record passed to %s
handle_cache
other_handle_cache
attachments_cache
Messages
Request to markAllUnsuccessFullySyncedMessagesAsNeedingSync 
update message set ck_sync_state=0 where ck_sync_state=2;
Executed query to mark all unsuccessfuly synced messages as needing sync
Error executing markAllUnsuccessFullySyncedMessagesAsNeedingSync %@ 
update message set sr_ck_sync_state=0 where sr_ck_sync_state=2;
Executed query to mark all unsuccessfuly synced messages as needing sync for SR messages
IMDMessageRecord
<IMDMessageRecord %p [%p]>{}
_IMDMessageRecordCreate()
void _IMDMessageRecordSetHandleID(IMDMessageRecordRef, int64_t)
void _IMDMessageRecordSetOtherHandleID(IMDMessageRecordRef, int64_t)
threadCountsByPart
B24@?0r*8@"NSObject<OS_xpc_object>"16
v32@?0@"NSString"8@"NSNumber"16^B24
IMActiveAccountAliasesKey
iMessage
SELECT person_centric_id FROM handle where ID = '%@' and service = 'iMessage'
IMDHandleRecord
We are setting the person_centric_id for a non-iMessage handle to be %@
"Database": new IMDHandleRecordRef [%@] has id [%lld].
"Database": Attempted to get record identifier for NULL handle record: %@
CFStringRef IMDHandleRecordCopyID(CFAllocatorRef, IMDHandleRecordRef)
"Database": NULL handle passed to %s
CFStringRef IMDHandleRecordCopyCountry(CFAllocatorRef, IMDHandleRecordRef)
CFStringRef IMDHandleRecordCopyUncanonicalizedID(CFAllocatorRef, IMDHandleRecordRef)
CFStringRef IMDHandleRecordCopyPersonCentricID(CFAllocatorRef, IMDHandleRecordRef)
void IMDHandleRecordBulkCopy(IMDHandleRecordRef, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *)
void IMDHandleRecordBulkUpdate(IMDHandleRecordRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef)
IMDHandle
Updating handle: %@   ID: %@   Country: %@   Service: %@  Unformatted: %@ PersonCentricID: %@
void _IMDHandleRecordBulkCopyXPCDictionary(IMDHandleRecordRef, xpc_object_t, Boolean)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDHandleRecord.m
BOOL IMDDeleteOrphanedHandles(IMDSqlOperation *)
IMDDeleteOrphanedHandles
DELETE FROM handle WHERE ROWID IN (SELECT ROWID FROM handle h1 WHERE ((SELECT 1 from chat_handle_join WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE other_handle = h1.ROWID LIMIT 1) IS NULL));
SELECT ROWID FROM handle h1 WHERE ((SELECT 1 from chat_handle_join WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE other_handle = h1.ROWID LIMIT 1) IS NULL);
<IMDHandleRecord %p [%p]>{}
"Database": _IMDHandleRecordCreate()
IMDSqlColumn IMDSqlOperationColumnByIndex(IMDSqlOperation *, int)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMAbstractDatabaseArchiver.m
-[IMAbstractDatabaseArchiver initWithSourceDatabasePath:destinationDatabasePath:]
sourcePath
destinationPath
-[IMAbstractDatabaseArchiver copyDatabase:]
Failure in %s at %s:%d. %@
required override
Attempting to delete failed anonymized database...
unable to delete failed anonymous database: %@ at %@
T@"NSString",R,N,V_sourcePath
T@"NSString",R,N,V_destinationPath
before_delete_on_attachment
BEFORE DELETE ON attachment BEGIN   SELECT before_delete_attachment_path(OLD.ROWID, OLD.guid); END
after_delete_on_attachment
AFTER DELETE ON attachment BEGIN   SELECT delete_attachment_path(OLD.filename); END
after_delete_on_chat_message_join
AFTER DELETE ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = OLD.message_id       )       WHERE         message.ROWID = OLD.message_id;  DELETE FROM message WHERE message.ROWID = OLD.message_id AND OLD.message_id NOT IN (SELECT chat_message_join.message_id from chat_message_join WHERE chat_message_join.message_id = OLD.message_id LIMIT 1); END
after_insert_on_chat_message_join 
AFTER INSERT ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = NEW.message_id       )       WHERE         message.ROWID = NEW.message_id; END
after_delete_on_message_attachment_join
AFTER DELETE ON message_attachment_join BEGIN     UPDATE message       SET cache_has_attachments = 0     WHERE       message.ROWID = OLD.message_id       AND       (SELECT 1 from message_attachment_join WHERE message_id = OLD.message_id LIMIT 1) IS NULL; END
after_insert_on_message_attachment_join
AFTER INSERT ON message_attachment_join BEGIN     UPDATE message       SET cache_has_attachments = 1     WHERE       message.ROWID = NEW.message_id; END
after_delete_on_message
AFTER DELETE ON message BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END
after_delete_on_chat_handle_join
AFTER DELETE ON chat_handle_join BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END
AFTER DELETE ON message_attachment_join BEGIN     DELETE FROM attachment         WHERE attachment.ROWID = OLD.attachment_id     AND         (SELECT 1 from message_attachment_join WHERE attachment_id = OLD.attachment_id LIMIT 1) IS NULL; END
add_to_deleted_messages
AFTER DELETE ON message BEGIN     INSERT INTO deleted_messages (guid) VALUES (OLD.guid); END
add_to_sync_deleted_messages
AFTER DELETE ON message BEGIN     INSERT INTO sync_deleted_messages (guid, recordID) VALUES (OLD.guid, OLD.ck_record_id); END
add_to_sync_deleted_attachments
AFTER DELETE ON attachment BEGIN     INSERT INTO sync_deleted_attachments (guid, recordID) VALUES (OLD.guid, OLD.ck_record_id); END
after_delete_on_chat
AFTER DELETE ON chat BEGIN DELETE FROM chat_message_join WHERE chat_id = OLD.ROWID; END
delete_associated_messages_after_delete_on_message
AFTER DELETE ON message BEGIN DELETE FROM message WHERE (OLD.associated_message_guid IS NULL AND associated_message_guid IS NOT NULL AND guid = OLD.associated_message_guid); END
update_message_date_after_update_on_message
AFTER UPDATE OF date ON message BEGIN UPDATE chat_message_join SET message_date = NEW.date WHERE message_id = NEW.ROWID AND message_date != NEW.date; END
IMDCKDatabase
Not adding trigger for external builds %@
CREATE TRIGGER IF NOT EXISTS %@ %@
SELECT name FROM sqlite_master WHERE type = 'trigger'
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDTriggers.m
DROP TRIGGER IF EXISTS %@
Dropped trigger failed: %@: %@
Dropped trigger: %@
select * from sqlite_master where type = 'trigger'
BOOL IMDCreateTriggersWithOperation(IMDSqlOperation *, BOOL)
IMDCreateTriggersWithOperation
Create trigger failed: %@: %@
Created trigger ok: %@, trigger: %@
BOOL IMDDropTriggersWithTriggerNames(NSArray *, BOOL)
IMDDropTriggersWithTriggerNames
names
dropping trigger failed: %@: %@
dropped trigger ok: %@
BOOL IMDCreateTriggersWithTriggerNames(NSArray *, BOOL)
IMDCreateTriggersWithTriggerNames
Created trigger ok: %@ trigger %@
IMDCoreSpotlightIndexer - Invalid to call IMDCoreSpotlightBaseIndexer directly, use subclass
com_apple_mobilesms_indexType
com_apple_mobilesms_fromMe
com_apple_mobilesms_businessChat
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com_apple_mobilesms_suggested_contact_name
com_apple_mobilesms_suggested_contact_photo
com_apple_mobilesms_groupPhotoPath
participants
time
lalh
%@:%@
groupName
IMDCoreSpotlightRecipientIndexer
 Adding profile name of length %@ 
 Adding profile avatar path 
IMDCoreSpotlightRecipientIndexer - Failed to get author CSPerson for !isFromMe message
@"NSString"16@?0@"CSPerson"8
balloonBundleID
IMDCoreSpotlightMessageBodyIndexer
Message is a balloon plugin type, deferring to later indexers
plainBody
com.apple.IMCoreSpotlight
IMCSPoisonPillEnabled
poison_abort
IMDCoreSpotlightMessageBodyIndexer - Poison pill abort detected, crashing!
poison_spin
(IMDCoreSpotlightMessageBodyIndexer - Poison pill spin detected, hanging!
associatedMessageType
IMDCoreSpotlightMessageMetadataIndexer
Item is of type %ld
%s GUID %@ is of type %ld, not indexing
+[IMDCoreSpotlightMessageMetadataIndexer cancelIndexingForItem:]
accountID
payloadData
IMDCoreSpotlightMessageBalloonPluginIndexer - Failed to get summary text
com_apple_mobilesms_lpDescription
rowID
LPLinkMetadataPresentationTransformer
LinkPresentation
com_apple_mobilesms_lpRichMedia
com_apple_mobilesms_lpPluginPaths
hasAttachments
attachmentDomain
DDScannerResult
DataDetectorsCore
dd-result
IMDCoreSpotlightMessageAttachmentIndexer
IMDPCopyDDScannerResultFromAttributedStringData: %@
IMDCoreSpotlightMessageAttachmentIndexer - Could not unarchive DDScannerResult data: %@ error: %@
IMDCoreSpotlightMessageAttachmentIndexer - Could not create keyed unarchiver due to error: %@
IMDCoreSpotlightMessageAttachmentIndexer - Failed to unarchive DDScannerResult data %@ class: %@ Exception: %@
pluginpayload
pluginpayloadattachment
pkpass
apto
handleID
T@"NSString",R,C,N,V_handleID
contact
T@"CNContact",R,&,N,V_contact
isSender
TB,R,N,V_isSender
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDSqliteUtilities.m
NSString *IMDGetTimeStampedFilePath(NSString *, NSString *)
IMDGetTimeStampedFilePath
yyMMdd-HHmmss
-%@.%@
-%@-%@.%@
NSString *IMDGetDestinationFilePath(NSString *, NSString *, NSString *)
IMDGetDestinationFilePath
originalPath
destFolder
fileName
newFileName
NSString *IMDGetDatabasePath(void)
IMDGetDatabasePath
/var/mobile/Library/Logs/CrashReporter/Messages/AnonymizedDatabases
anon
trimmed
Tried to change DB on non gizmo device. This is not supported!!
"Database": QuickSwitch about to downgrade database at path %@ to %@
Database QuickSwitch tried to downgraded incompatible database versioin %ld
"Database": Quickswitch Downgrade Sending XPC now...
Database QuickSwitch Downgrade got unsuccessful result
BOOL _IMDArchiveDatabase(IMAbstractDatabaseArchiver *, NSError **)
_IMDArchiveDatabase
copier
SELECT   c.ROWID, c2.ROWID, ch.handle_id FROM   chat c INNER JOIN chat c2 ON   c2.chat_identifier = lower(c.chat_identifier)   AND c2.style = c.style INNER JOIN chat_handle_join ch ON   c2.ROWID = ch.chat_id WHERE   c.style = 45   AND c.chat_identifier != lower(c.chat_identifier) 
UPDATE   message SET   handle_id = ? WHERE   handle_id = (SELECT ch.handle_id FROM chat_handle_join ch WHERE ch.chat_id = ? LIMIT 1) 
UPDATE   chat_message_join SET   chat_id = ? WHERE   chat_id = ?   AND message_id NOT IN (SELECT cm.message_id FROM chat_message_join cm WHERE cm.chat_id = ?) 
DELETE FROM   chat WHERE   rowid = ? 
SELECT   c.ROWID, c.guid, c.chat_identifier FROM   chat c WHERE   c.style = 45   AND c.chat_identifier != lower(c.chat_identifier) 
UPDATE   chat SET     guid = ?,     chat_identifier = ? WHERE     ROWID = ?
SELECT   h.rowid, h2.rowid FROM   handle h INNER JOIN handle h2 ON   h2.id = lower(h.id)   AND h2.service = h.service WHERE   h.id != lower(h.id) 
UPDATE   chat_handle_join SET   handle_id = ? WHERE   handle_id = ?   AND chat_id NOT IN (SELECT ch2.chat_id FROM chat_handle_join ch2 WHERE ch2.handle_id = ?) 
UPDATE   message SET   handle_id = ? WHERE   handle_id = ? 
DELETE FROM   handle WHERE   rowid = ? 
UPDATE   handle SET     uncanonicalized_id = id,     id = lower(id) WHERE     id != lower(id)
SELECT ROWID, id, country, service, uncanonicalized_id, person_centric_id FROM handle WHERE   id = ? AND   service = ? ORDER BY handle.ROWID ASC;
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/IMDPersistenceTests/IMDSqlQuery.m
-[IMDSqlQuery createQueryString]
Use one of the subclasses
T@"NSString",R,C,N,V_tableName
columns
T@"NSString",C,N,V_columns
limit
Tq,N,V_limit
where
T@"NSString",C,N,V_where
SELECT %@ FROM %@
 WHERE %@
 LIMIT %lld
Attachments
Not deleting at original path %@ because we're storing at an external path %@
Request to save transfer to store: %@ [isIncoming = %d, %d], filename %@ isAuxVideo %@
   => transfer has empty file name, bailing: %@
   => transfer is not ready to save
   => persistent path is zero length for transfer: %@
   => transfer could not ensure persistent path: %@
   => local path is already the same as destination path. Not moving or copying.
   => file already exists for transfer: %@
   => file is already in attachment store: %@
   => Copied gif file successfully: %@, from: %@, to: %@, error: %@
   => IMGifUtils fileWriter is nil, falling back on standard copying for gif file
   => successfully copied file to path: %@
   => checking if file has any siblings to copy
        ...removing old file in 10: %@
        ...removing old file: %@
        ...removing old sibling file: %@
   => ** failed copying file to path: %@
          The error was %@
   => failed copy file to path: %@, will try move
      The error was %@
   => ** failed moving file to path: %@
   => ** failed copying file from path, file not on disk: %@
Changing permissions on attachment file at %@
    => Permissions changed: %@  error: %@
   => Success! returning path: %@
Not deleting attachment path, last component is Attachments
Not deleting attachment path, last component is not guid-like %@ guidPathComponent: %@
/var/mobile/Library/SMS/Attachments
Not deleting attachment path, not in attachment store: %@
Bailing out of legacy attachment path deletion, %@ has other contents in path
Bailing out of legacy attachment path deletion, %@ is not an eligible path
Path was in attachment store, removing %@
Can't migrate sibling attachments to the same folder
Looking for sibling files of %@ in %@
Sibling search found orig filename %@, skipping
Will migrate sibling at path %@ to %@
Failed to copy sibling attachment to dst. Orig %@ sibling %@ dst %@ error %@
Successfully migrated %@ to %@
Failed to update permissions on sibling file dst path %@ error %@
Request to delete attachment for transfer: %@ high quality: %@
  => No persistent path for transfer found: %@
  => failed to remove item at path: %@  for transfer: %@
  => Successfully deleted item at path: %@  for transfer: %@
Generating path for sticker transfer %@ isSticker %@
Overriding guid for transfer in _persistentPathForTransfer %@
Storing group photo at an accessible location.
%02x
%02d
Local path is %@
Resulting path %@   for transfer: %@
Input path: %@
DB Path: %@
/var/mobile/Library/SMS
Anonymizing database at: '%@'...
Copying database (to be anonymized) from %@ to %@ failed: %@
Anonymizing data:
Failed to anonymize attachments with error: %@
Anonymizing failed with error: %@
Failed to delete partially anonymized database at with error: %@
IMPORTANT -- Please manually delete database here:
Successfully Deleted partially anonymized database at '%@'
%@: %d%% completed
%@: %d%% completed; %@ elapsed
%@: %d%% completed; %@ elapsed; ~%@ remaining
taskName
T@"NSString",R,N,V_taskName
totalCount
TQ,R,N,V_totalCount
  no query function set
  Replacing '%@' in '%@' with '%@ <ROWNUM>'
UPDATE %@ SET %@ = "[%@ " || ROWID || "]" WHERE %@ IS NOT NULL AND %@ != '';
Cleaning text
SELECT ROWID, attributedBody, text, message_summary_info FROM message
ROWID
UPDATE message SET text = ?, attributedBody = ?, message_summary_info = ? WHERE ROWID = ?
v32@?0@"NSDictionary"8Q16^B24
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. 
v40@?0@"NSDictionary"8{_NSRange=QQ}16^B32
UPDATE attachment SET filename = ((SELECT rtrim(filename, (SELECT transfer_name FROM attachment WHERE ROWID = a1.ROWID)) FROM attachment a1) || ROWID || ".JPG");
Cleaning attachment path
UPDATE attachment SET transfer_name = ROWID || ".JPG" WHERE transfer_name IS NOT NULL AND transfer_name != '';
Cleaning attachment name
UPDATE attachment SET mime_type = "image/jpeg";
Updating attachment mimetype
UPDATE attachment SET uti = "public.jpeg";
Updating attachment uti
UPDATE attachment SET total_bytes = 67946;
setting attachment size
  %@
~/Library/SMS/Attachments/

-Attachments
Creating anonymous attachments in directory at %@
SELECT filename FROM attachment
Cleaning attachments
IMDCoreSpotlightProcessingQueue
expressiveSendStyleID
loginID
chatIdentifier
groupID
isBlackholed
lastMessageDate
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.23/IMCore/IMDPersistence/Source/IMDCoreSpotlightIndexHelpers.m
NSString *_IMDCoreSpotlightHandleID(IMDHandleRecordRef)
_IMDCoreSpotlightHandleID
CNContact *_IMDCoreSpotlightCNContactForHandle(IMDHandleRecordRef)
_IMDCoreSpotlightCNContactForHandle
IMDCoreSpotlight
Adress is not nil, we are returning nil.
Adding additioanl keys tp fetch.
We got a cache hit but the cachedContact is nil. We are retruning nil.
Return cached contact.
Return  contact.
Cache contact: %@.
Cache contact nil.
Return contact: %@
CSPerson *_IMDCoreSpotlightPerson(NSString *, NSString *, CNContact *, NSString *)
_IMDCoreSpotlightPerson
NSString *_IMDContactsKindForID(NSString *, NSString *)
_IMDContactsKindForID
NSString *_IMDCoreRecentsKindForHandleID(NSString *, NSString *)
_IMDCoreRecentsKindForHandleID
pendingNicknamesKeyStore.db
pendingNicknameUpdatesStore
handledNicknamesKeyStore.db
handledNicknamesStore
We got an error loading the nickname info from the kv store for notifications %@
We got an error unarchiving the nickname dictionary %@
We have a nickname dictionary for %@ %@
CRRecentWeightMessagesReceivedAddress
CoreRecents
map url
_AddLocationsFromVCFToCoreRecents() was passed a nil filePath
CRAddressKindEmail
CRAddressKindPhoneNumber
CRRecentContactMetadataEventTime
CRRecentContactMetadataReferenceURL
CRRecentContactMetadataFromAddress
CRRecentContactMetadataFromAddressKind
CRRecentContactMetadataFrom
sms:/open?message-guid=%@
DataDetectors
CoreRecents metadata:%@
Screenshot
recentsInstance
T@"CRRecentContactsLibrary",N,V_recentsInstance
allowsOverrideOfObjects
TB,N,V_allowsOverrideOfObjects
shouldAddToSuggestions
TB,N,V_shouldAddToSuggestions
shouldAddToSpotlight
TB,N,V_shouldAddToSpotlight
shouldAddToCoreRecents
TB,N,V_shouldAddToCoreRecents
IMDCoreSpotlightContactCache - asked to cache contact for nil key %@
IMDCoreSpotlightContactCache - Cannot get cached contact for nil key
Contacts store reported a change, clearing our contacts cache
%s Couldn't read data from file %@ ; error %@
+[IMDCoreSpotlightContactCache contactsForVCardAtPath:]
%s Failed to generate vcard summary from file %@ ; error %@
maps.apple.com
maps.google.com
%s urls %@
+[IMDCoreSpotlightContactCache vCardMapURLForContact:]
%s url host %@
%s got mapURL %@ value %@
cache
T@"NSCache",&,N,V_cache
INInteraction
Intents
INSendMessageIntent
INSendMessageIntentResponse
INPerson
INPersonHandle
INMessage
INSpeakableString
INImage
Chat
Not donating INInteraction for message without a date, to prevent message send from appearing to have taken place now.
Not donating INInteraction for non-text message.
None of the current chat participants match the current senderID, creating a new person.
speakableGroupName
CNPhoneNumber
Contacts
INPersonHandleLabelForCNLabeledValue
Starting migration from V21 to V22.
DROP TRIGGER IF EXISTS delete_attachment_files;
Failed to delete trigger delete_attachment_files [SQLite result %d reason %s]
Failed to delete trigger delete_attachment_files [SQLite result %d]
Whoa, pardner, where is the V21_MIGRATION_GROUP_CHAT_MAP ?!
Whoa, pardner, where is the V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP ?!
SELECT ROWID, address, date, text, flags, replace, svc_center, group_id, association_id, height, UIFlags, version, subject, country, headers, recipients, read, madrid_attributedBody, madrid_handle, madrid_version, madrid_guid, madrid_type, madrid_roomname, madrid_service, madrid_account, madrid_account_guid, madrid_flags, madrid_attachmentInfo, madrid_url, madrid_error, is_madrid, madrid_date_read, madrid_date_delivered FROM message_legacy ORDER BY ROWID ASC
"Database": "Database": [Database] ERROR: **** Failed ingesting legacy message with row ID: %d
[Database] ERROR: **** Failed ingesting legacy message with row ID: %d
Successful migration for legacy message [%d]
No message rows available to migrate, great success!!
Whoa pardner, we didn't drop the group to chat map table. C'est la vie.
Whoa pardner, we didn't drop the non-canonical group to handle map table. C'est la vie.
Asking DB to analyze.
analyze;
Migration ended with result %d
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
CREATE TABLE IF NOT EXISTS V21_MIGRATION_GROUP_CHAT_MAP (chat_id INTEGER REFERENCES chat(ROWID), group_id INTEGER NOT NULL, is_broadcast INTEGER NOT NULL, UNIQUE (chat_id, group_id, is_broadcast) );
CREATE TABLE IF NOT EXISTS V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP (group_id INTEGER REFERENCES msg_group_legacy(ROWID), handle_id INTEGER REFERENCES handle(rowid), UNIQUE (group_id, handle_id) );
ORPHAN: Unable to find/create a chat for handle[%@] and roomname[%@] for legacy messageID[%d]. Skipping this message.
INSERT INTO message (  guid,   text,   replace,   service_center,   subject,   country,   attributedBody,   version,   type,   service,   account,   account_guid,   error,   date,   date_read,   date_delivered ) SELECT   madrid_guid,   text,   replace,   svc_center,   subject,   country,   madrid_attributedBody,   1,   madrid_type,   'iMessage',   madrid_account,   madrid_account_guid,   madrid_error,   date,   madrid_date_read,   madrid_date_delivered FROM   message_legacy WHERE   ROWID = ?
"Database": "Database": [Database] ERROR: Unable to migrate message row %d with error: %d
[Database] ERROR: Unable to migrate message row %d with error: %d
UPDATE   message SET   is_delivered = ?,   is_finished = ?,   is_emote = ?,   is_from_me = ?,   is_empty = ?,   is_delayed = ?,   is_auto_reply = ?,   is_prepared = ?,   is_read = ?,   is_system_message = ?,   is_sent = ?,   has_dd_results = ?,   is_service_message = ?,   is_forward = ?,   was_downgraded = ?,   is_archive = ? WHERE   ROWID = ? 
Unable to update flags row %d with error: %d
SELECT   ROWID FROM   chat WHERE   room_name = ?     OR    chat_identifier = ?   AND service_name = 'iMessage' LIMIT 1
SELECT   ROWID FROM   chat WHERE   chat_identifier = ?   AND service_name = 'iMessage' LIMIT 1
SELECT ROWID, style, state, account_id, properties, chat_identifier, service_name, guid, room_name, account_login, participants FROM   madrid_chat_legacy WHERE   room_name = ?     OR   chat_identifier = ? LIMIT 1
SELECT ROWID, style, state, account_id, properties, chat_identifier, service_name, guid, room_name, account_login, participants FROM   madrid_chat_legacy WHERE   chat_identifier = ? LIMIT 1
"Database": "Database": [DATABASE] There don't appear to be any participants in this chat, so it will NOT be migrated. RowID: %lld Handle %@ Roomname %@
[DATABASE] There don't appear to be any participants in this chat, so it will NOT be migrated. RowID: %lld Handle %@ Roomname %@
INSERT INTO chat (  guid,   style,   state,   account_id,   properties,   chat_identifier,   service_name,   room_name,   account_login ) SELECT   guid,   style,   state,   account_id,   properties,   chat_identifier,   'iMessage',   room_name,   account_login FROM   madrid_chat_legacy WHERE   ROWID = ?
Unable to migrate chat row %lld with error: %d
UPDATE chat SET room_name = ? WHERE ROWID = ? AND room_name is NULL
Unable to update chatID[%lld]'s room_name.
UPDATE chat SET guid = ? WHERE ROWID = ?
Unable to update chatID[%lld] with guid[%@]
"Database": "Database": [Database] ERROR: Could not create chat from handle[%@] and roomname[%@].
[Database] ERROR: Could not create chat from handle[%@] and roomname[%@].
ORPHAN: Unable to find a legacy madrid chat record for handle[%@] and roomname[%@] with sqlite status (%d). This usually means that a chat was deleted but the messages it contained weren't. Failing chat creation.
** You attempted to bind HandleID [%lld] to ChatID [%lld]. One of these values is bogus.
INSERT INTO chat_handle_join (handle_id, chat_id) values (?, ?)
"Database": "Database": [Database] ERROR: Failed to join Handle [%lld] to Chat [%lld]. SQLite error: %d
[Database] ERROR: Failed to join Handle [%lld] to Chat [%lld]. SQLite error: %d
INSERT INTO chat_message_join (   chat_id,   message_id ) VALUES (   ?,   ? )
"Database": "Database": [Database] ERROR: Unable to bind chat id[%lld] to message id[%lld]: %d
[Database] ERROR: Unable to bind chat id[%lld] to message id[%lld]: %d
AWOL handle for uncanonicalizedID [%@]  canonicalizedID [%@] Service [%@] Country [%@]
SELECT   ROWID FROM   handle WHERE   id = ?   AND service = ? LIMIT 1 
int64_t __createHandleRecord(CSDBSqliteConnection *, CFStringRef, CFStringRef, CFStringRef, CFStringRef)
Got an invalid IDs uncanon: (%@) canon: (%@) in %s.
Got an invalid service (%@) in %s.
Got an invalid identifier (%@) (%@) in %s.
INSERT INTO handle (  id,   service,   country,   uncanonicalized_id ) VALUES (   ?,   ?,   ?,   ? ) 
"Database": "Database": [Database] ERROR: Unable to create handle row with uncanonid[%@] canonid[%@] service[%@] country[%@]
[Database] ERROR: Unable to create handle row with uncanonid[%@] canonid[%@] service[%@] country[%@]
missed call
Invalid handleID[%lld] or messageID[%lld] passed for binding
UPDATE   message SET   handle_id = ? WHERE   ROWID = ? 
Unable to update handle id on message row %lld with error: %d
Boolean __findOrCreateiMessageAttachmentsForLegacyGUID(CSDBSqliteConnection *, CFStringRef, int64_t)
Invalid legacy guid provided in %s - this is bad but non-fatal.
"Database": Invalid legacy guid provided in %s - this is bad but non-fatal.
Unable to find legacy attachment for guid[%@]. Not fatal, but bailing.
Fatal error binding attachmentID[%lld - %@] to messageID[%lld]
SELECT   ROWID FROM   attachment WHERE   guid = ? LIMIT 1 
SELECT   ROWID FROM   madrid_attachment_legacy WHERE   attachment_guid = ? 
INSERT INTO attachment (  guid,   created_date,   start_date,   filename,   uti,   mime_type,   transfer_state ) SELECT   attachment_guid,   created_date,   start_date,   filename,   uti_type,   mime_type,   transfer_state FROM   madrid_attachment_legacy WHERE   ROWID = ?
Unable to migrate attachment row %lld with error: %d
INSERT INTO message_attachment_join (   message_id,   attachment_id ) VALUES (   ?,   ? )
Unable to bind attachmentID[%lld] to messageID[%lld]: %d
ORPHAN: Could not find an appropriate chat to use for messageID[%d]. Skipping this message.
INSERT INTO message (guid, text) values (?, ?);
"Database": "Database": [Database] ERROR: Failed to create new message row. SQLite error: %d
[Database] ERROR: Failed to create new message row. SQLite error: %d
This message is empty, and we should NOT keep it.
This message lacks a handle, and we should NOT keep it.
DELETE FROM message WHERE ROWID = ?;
Message [%lld] Legacy [%d] was problematic, thus we skip it.
Problems deleting message [%lld], SQLite error: %d
Unable to delete message.
"Database": "Database": [Database] Bailing early on a problematic message.
[Database] Bailing early on a problematic message.
UPDATE message SET     attributedBody = ?,     text = ?,     date = ?,     date_read = ?,     date_delivered = ?,     service_center = ?,     version = ?,     country = ?,     service = ?,     is_delivered = ?,     is_finished = ?,     is_emote = ?,     is_from_me = ?,     is_empty = ?,     is_delayed = ?,     is_auto_reply = ?,     is_prepared = ?,     is_read = ?,     is_system_message = ?,     is_sent = ?,     has_dd_results = ?,     is_service_message = ?,     is_forward = ?,     was_downgraded = ?,     subject = ?,     error = ?,     handle_id = ? WHERE     ROWID = ?
"Database": "Database": [Database] ORPHAN: Failed to update message. SQLite error: %d
[Database] ORPHAN: Failed to update message. SQLite error: %d
"Database": "Database": [Database] ORPHAN: Failed to insert message. SQLite error was: %d
[Database] ORPHAN: Failed to insert message. SQLite error was: %d
SELECT   COUNT(ROWID) FROM   message_legacy WHERE   ROWID < ?   AND group_id = ?   AND association_id = ?   AND is_madrid = 0 
"Database": "Database": [Database] ****** Result from select query: %d
[Database] ****** Result from select query: %d
"Database": "Database": [Database] ERROR: * * * * * Holy Smokes, the group row id is bogus! * * * * * *
[Database] ERROR: * * * * * Holy Smokes, the group row id is bogus! * * * * * *
ORPHAN: Unable to find handles for groupID[%d]. This means we have message rows without a matching group. Failing the chat lookup.
INSERT INTO chat (   guid,   style,   state,   chat_identifier,   service_name,   room_name ) VALUES (   ?,   ?,   ?,   ?,   ?,   ? )
"Database": "Database": [Database] ERROR: Got a NULL identifier for handleID[%lld]. Something is seriously wrong.
[Database] ERROR: Got a NULL identifier for handleID[%lld]. Something is seriously wrong.
"Database": "Database": [Database] ERROR: Was slinging around an invalid handleID for messageID[%d] to create chat. Something is wrong.
[Database] ERROR: Was slinging around an invalid handleID for messageID[%d] to create chat. Something is wrong.
"Database": "Database": [Database] ERROR: Got a NULL handleID for messageID[%d] to create chat. Something is wrong.
[Database] ERROR: Got a NULL handleID for messageID[%d] to create chat. Something is wrong.
"Database": "Database": [Database] ERROR: Failed to create chat record. SQLite error: %d
[Database] ERROR: Failed to create chat record. SQLite error: %d
SELECT count(rowid) FROM group_member_legacy WHERE group_id = ?
SELECT ROWID, group_id, address, country FROM group_member_legacy WHERE group_id = ?
Ugh, the address '%@' wouldn't canonicalize.
MsgAddress '%@' was null, we won't even try to canonicalize it.
SELECT handle_id from V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP where group_id = ?
Got an invalid rowid looking for a handle mapped to group id: %lld
SELECT address from message_legacy where group_id = ?
"Database": "Database": [Database] ERROR: You tried to join handle [%lld] to group [%lld] with an invalid row id.
[Database] ERROR: You tried to join handle [%lld] to group [%lld] with an invalid row id.
INSERT INTO V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP (group_id, handle_id) values (?, ?)
"Database": "Database": [Database] ERROR: Failed to asscociate handle [%lld] to group [%lld] with sqlite result: %d.
[Database] ERROR: Failed to asscociate handle [%lld] to group [%lld] with sqlite result: %d.
SELECT chat_id from V21_MIGRATION_GROUP_CHAT_MAP where group_id = ? AND is_broadcast = ?
Got an invalid rowid looking for a chat mapped to group id: %lld
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived FROM chat WHERE     style = ? AND     service_name = ? ORDER BY ROWID ASC
SELECT handle_id from chat_handle_join where chat_id = ? ORDER BY handle_id ASC
"Database": "Database": [Database] ERROR: You tried to join chat [%lld] to group [%lld] with an invalid row id.
[Database] ERROR: You tried to join chat [%lld] to group [%lld] with an invalid row id.
INSERT INTO V21_MIGRATION_GROUP_CHAT_MAP (chat_id,group_id,is_broadcast) values (?, ?, ?)
"Database": "Database": [Database] ERROR: Failed to Asscociated chat [%lld] for group [%lld] (isBroadcast[%d]) with Sqlite result: %d.
[Database] ERROR: Failed to Asscociated chat [%lld] for group [%lld] (isBroadcast[%d]) with Sqlite result: %d.
SELECT   id FROM   handle WHERE   ROWID = ? LIMIT 1
"Database": "Database": [Database] ERROR: Unable to update placeholder property on invalid chatID
[Database] ERROR: Unable to update placeholder property on invalid chatID
SELECT   COUNT(message_id) FROM   chat_message_join WHERE   chat_id = ? 
CKPlaceholderTimeSince1970Property
UPDATE   chat SET   properties = ? WHERE   ROWID = ? 
"Database": "Database": [Database] ERROR: Unable to set properties for chat[%lld]: %d
[Database] ERROR: Unable to set properties for chat[%lld]: %d
SELECT ROWID, message_id, data, part_id, preview_part, content_type, height, version, flags, content_id, content_loc, headers FROM msg_pieces_legacy WHERE message_id = ? AND preview_part < 0 ORDER BY part_id ASC
application/smil
text/plain
INSERT INTO attachment (guid, mime_type, uti, created_date, transfer_state) values (?, ?, ?, ?, 5);
"Database": "Database": [Database] ORPHAN: Failed to create new attachment record. SQLite error: %d.
[Database] ORPHAN: Failed to create new attachment record. SQLite error: %d.
INSERT INTO message_attachment_join (message_id, attachment_id) values (?, ?);
"Database": "Database": [Database] ERROR: Failed joining new attachment to message with SQLite result: %d
[Database] ERROR: Failed joining new attachment to message with SQLite result: %d
"Database": "Database": [Database] ERROR: Failed to create directory [%@]: %@
[Database] ERROR: Failed to create directory [%@]: %@
"Database": "Database": [Database] ERROR: Failed to write piece data to FS.
[Database] ERROR: Failed to write piece data to FS.
UPDATE attachment SET filename  = ? WHERE guid = ?
"Database": "Database": [Database] ERROR: Failed updating the filename on the new attachment record with SQLite result: %d
[Database] ERROR: Failed updating the filename on the new attachment record with SQLite result: %d
%d-%d
/var/mobile/Library/SMS/Parts/
DROP TABLE IF EXISTS V21_MIGRATION_GROUP_CHAT_MAP
DROP TABLE IF EXISTS V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP
BOOL _IMDSqlOperationBeginQuery(IMDSqlOperation *, CFStringRef, IMFileLocation_t *)
operation->statement.sql_statement
"Database": ASSERTION FAILED: %s is unexpectedly NOT nil in "%s" at line %d [%@]
"Database": Starting new query with pending error: : %@
void IMDSqlOperationSetError(IMDSqlOperation *, CFErrorRef)
BOOL IMDSqlOperationFinishQuery(IMDSqlOperation *)
BOOL IMDSqlOperationBeginTransaction(IMDSqlOperation *)
BEGIN IMMEDIATE;
BOOL IMDSqlOperationCommitTransaction(IMDSqlOperation *)
operation->transaction
trying to commit transaction when we don't have one.
BOOL IMDSqlOperationRevertTransaction(IMDSqlOperation *)
Trying to revert transaction when we don't have one. This may mean we have a transaction open on this same sql_connection with another IMDSqlOperation
ROLLBACK;
BOOL IMDSqlOperationCommitOrRevertTransaction(IMDSqlOperation *)
BOOL IMDSqlOperationRelease(IMDSqlOperation *, NSError **)
"Database": reverting uncommitted transation with error: %@
"Database": committing uncommitted transation
NSArray *_IMDSqlOperationGetRowsWithBindingBlock(IMDSqlOperation *, CFStringRef, dispatch_block_t)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDSqlOperation.m
_IMDSqlOperationGetRowsWithBindingBlock
binder
rows
NSArray *_IMDSqlOperationGetRowsForQueryWithBindingBlock(CFStringRef, NSError **, IMDSqlOperationBlock)
_IMDSqlOperationGetRowsForQueryWithBindingBlock
binderBlock
BOOL IMDSqlOperationExecuteQuery(IMDSqlOperation *, NSString *, IMDBlock)
IMDSqlOperationExecuteQuery
BOOL IMDSqlOperationHasRows(IMDSqlOperation *)
void _IMDSqlOperationSetQuery(IMDSqlOperation *, CFStringRef)
operation->statement.query
void _IMDSqlOperationReleaseQuery(IMDSqlOperation *)
(operation->error == nil && operation->statement.stepCount == 0)
SQL operation results never read from statement
_IMDChatRecordSetProperty [%d of %d]
"Database": Attempted to get identifier for NULL chat record: %@
CFStringRef IMDChatRecordCopyGUID(CFAllocatorRef, IMDChatRecordRef)
"Database": NULL chat passed to %s
CFStringRef IMDChatRecordCopyGUIDUnlocked(CFAllocatorRef, IMDChatRecordRef)
CFStringRef IMDChatRecordCopyDisplayName(CFAllocatorRef, IMDChatRecordRef)
SELECT cm.message_id from chat_message_join cm where cm.chat_id = ? ORDER BY cm.message_date DESC, cm.message_id DESC LIMIT 1;
SELECT ROWID from message m WHERE m.item_type == 0 AND m.ROWID in (SELECT message_id FROM chat_message_join where chat_id = ?) ORDER BY date DESC, ROWID DESC LIMIT 1
SELECT message_id FROM chat_message_join WHERE chat_id = ? ORDER BY ROWID DESC LIMIT ?;
void _IMDChatRecordBulkCopy(IMDChatRecordRef, int64_t *, int64_t *, CFStringRef *, CFDataRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, int64_t *, int64_t *, CFStringRef *, CFStringRef *, int64_t *, CFStringRef *, int64_t *, CFStringRef *, int64_t *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *)
void IMDChatRecordSetIsArchived(IMDChatRecordRef, int64_t)
void IMDChatRecordSetIsBlackholed(IMDChatRecordRef, int64_t)
Trying to associate message [%lld] with chat [%lld]
INSERT OR IGNORE INTO chat_message_join (chat_id, message_id, message_date) VALUES (?, ?, ?);
SQLite returned %d from IMDChatRecordAddMessageIfNeeded
void IMDChatRecordRemoveMessage(IMDChatRecordRef, IMDMessageRecordRef)
DELETE FROM chat_message_join WHERE chat_id = ? AND message_id = ?;
IMDSpotlight
Finished remove message [%@] from chat [%@], updating the spotlight index for this chat.
Trying to associate handle [%lld] with chat [%lld]
INSERT INTO chat_handle_join (chat_id, handle_id) VALUES (?, ?)
SQLite returned %d from IMDChatRecordAddHandle
DELETE FROM chat_handle_join WHERE chat_id = ? AND handle_id = ?
SQLite returned %d from IMDChatRecordRemoveHandle
IMDChatRecordBulkUpdateChat %@
void IMDChatRecordBulkUpdate(IMDChatRecordRef, int64_t, int64_t, CFStringRef, CFDataRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, int64_t, int64_t, CFStringRef, CFStringRef, int64_t, CFStringRef, int64_t, CFStringRef, int64_t, CFStringRef, CFStringRef, CFStringRef, int64_t)
void _IMDChatRecordBulkCopyXPCDictionary(IMDChatRecordRef, xpc_object_t, Boolean, Boolean, Boolean, Boolean)
handles_cache
last_message_cache
unread_count_cache
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDChatRecord.m
BOOL IMDMergeDuplicateChatsWithOperation(IMDSqlOperation *, NSArray<NSString *> *, NSString *, NSString *)
IMDMergeDuplicateChatsWithOperation
losingChatGUIDs
winningChatGUID
ForkMerge
failed dropping triggers: %@
UPDATE chat_message_join SET chat_id = (SELECT ROWID FROM chat WHERE guid = ?) WHERE (chat_id = (SELECT ROWID FROM chat WHERE guid = ?) AND message_id NOT IN (SELECT message_id from chat_message_join WHERE chat_id =  (SELECT ROWID FROM chat WHERE guid = ?)));
failed updating chat_message_join table: %@ for unwanted chat: %@
DELETE FROM chat_handle_join WHERE chat_id IN (SELECT ROWID FROM chat WHERE guid %@)
failed deleting chat_handle_join rows failed (%@) - for unwanted chats: %@
UPDATE chat SET display_name = '%@' WHERE guid = '%@';
failed recreating the triggers: (%@) - for unwanted chats: %@
Finished merging %ld (%@) unwanted chats into %@ 
Being to merge %lld (%@) duplicate chats into winning chat %@
IMDMergeDuplicateChatsWithOperation failed in db with error: %@
Finished repairing %lld duplicate chats in %f seconds
error_domain
error_code
error_localized_description
Finished merging duplicated chats in %f seconds
IMDMergeDuplicateChatsWithOperation in agent failed with error: %@
IMDChatRecord
<IMDChatRecord %p [%p]>[%lld]{}
_IMDChatRecordCreate()
Got record in _IMDChatRecordCreateFromRecordIDWithLock (%lld) : %@
Could not get chat record for identifier %lld
last_message_date_on_load
SELECT   m.ROWID, m.attributedBody FROM   message m WHERE   m.text IS NULL   AND m.attributedBody IS NOT NULL   AND (    SELECT       COUNT(*)     FROM       message_attachment_join     WHERE       message_id = m.ROWID   ) = 0 
UPDATE   message SET     text = ? WHERE     ROWID = ?
%@, error: %@
SQL_ERROR
"Database": Sqlite3 Error: %@
DMIsMigrationNeeded
DataMigration
IMDSystemMigration
system migration finished: %@
system needs to finish migration still, not allowing indexing
com.apple.imdsmsrecordstore
mobile
kIMDPersistenceLastBuild
Needs migration, not allowing indexing, lastBuild: %@, currentBuild: %@
Migration not needed, allowing indexing, lastBuild: %@ currentBuild: %@
No current build version, allowing indexing
We have migrated, lastBuild: %@
Indexing %lu number of items with Index %@
IMDChatAddMessageToSpotlight: [async] indexing searchable items failed with error %@. Using Index %@
Indexing item ID %@ domain %@
v40@?0@"NSError"8@"NSArray"16@"NSArray"24@"NSArray"32
Number of pseudo-contacts %@
Number of pseudo-event %@
 => Before first unlock, skipping indexing
%s reindexing message
CSSearchableItem *_IMDChatAddMessageToSpotlight(IMDChatRecordRef, IMDMessageRecordRef, BOOL, IMDCoreSpotlightFiltered *)
bailing early, chatGUID (%@) or sender handle (%@) was nil
Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s
_IMDChatAddMessageToSpotlight
 => Nuking messages: %@
IMDChatAddMessageToSpotlight: deleting message for searchable items failed with error %@
 => Deleting this chat
IMDCoreRecentDeleteChat bailing because we were passed no handles
%K == %@
address
performRecentsSearch - recents = %@
Recents remove failed with error %@
performRecentsSearch: recents SEARCH failed with error %@
 => Nuking chat: %@
IMDCoreSpotlightDeleteChatGUID: Failed to delete items with domain identifier %@ with error %@
 => Before first unlock, skipping re-indexing of messages
Trying to reindex messages with an empty guids array
Request to re-index messages with messages count: %d
total time for indexing messages
generate indexable item
v32@?0@"NSString"8Q16^B24
Done re-indexing messages, time: %@
 => %s Before first unlock, skipping indexing
void IMDCoreSpotlightSetNeedsMessageReindex(dispatch_block_t)
void IMDCoreSpotlightIndexNextMessageBatchIfNeeded(NSUInteger, dispatch_block_t)
kIMDPersistenceHasFixedIsFiltered
Needs to fix is filtered: %@
Doesnt to fix is filtered: %@
We fixed isFiltered
IMCSDoNotIndex
Current blocklist size is %lu
Blocklist size > %d on load, truncating
Getting chat for message id %lld
IMDCoreSpotlight - Skipping indexing %@, blacklisted
Indexing placing %@ under scrutiny
Indexing %@ threw exception %@
IMCoreSpotlight - Timed out indexing %@, likely have a hung thread, aborting!
Indexing removing %@ from scrutiny
Indexing NOT removing %@ from scrutiny, exception was thrown
GEO request to geocode %lu items
GEO Created and enqueuing geo ticket %p for %@ 
GEO ticket complete for item %@
IMDCoreSpotlight %s - Geocoding failed with error %@
-[IMDCoreSpotlightManager _geocodeItems:]_block_invoke_3
v16@?0@"<GEOMapServiceThrottlableTicket>"8
IMDCoreSpotlight %s: item %@ returned invalid coordinate from geocode
-[IMDCoreSpotlightManager _updateItem:withGeoMapItem:]
IMDCoreSpotlight %s: indexing geocoded searchable item %@ failed with error %@
-[IMDCoreSpotlightManager _updateItem:withGeoMapItem:]_block_invoke
Chat %@ has no last message date, not indexing
chatDomain
com_apple_mobilesms_chatStyle
IMDCoreSpotlight: Failed to delete chat searchable items with unique identifier %@ with error %@
%s starting reindex
-[IMDCoreSpotlightManager setNeedsMessageReindexingWithCompletion:]
IMDCoreSpotlight: Failed to create index!
%s max cmj rowID %lld
IMDCoreSpotlight: Failed to get max cmj row ID for indexing!
_sanitizeIndexesForCurrentVersionIfNeeded complete, kicking off standard indexes
Bypassing index version comparisons. **NOT** deleting indexes
Current idx version is %llu, expected is %llu, deleting prior indexes
CSDeleteAllIndexes
Index deletion complete - %@
IMDCoreSpotlight: Version mismatch failed to delete all indexes! %@
Current idx version is %llu, index does not need deletion
totalTime
copyAllActiveChats
generateItems
Indexing %ld chat records
IMDCoreSpotlight: Failed to get chats to index!
indexChats timing %@
Chat count: %ld
Not indexing UID %@, already indexed newer record
Passing chat records to Spotlight.Using index %@
IMDCoreSpotlight: indexing all chats failed with error %@
IMDCoreSpotlight: indexing all chats completed with error %@. Index: %@
Spotlight finished ingesting chat records
IMCoreSpotlight
Indexing next batch of messages. Batch size of %lu
IMDCoreSpotlight %s - Not indexing. Batch size %lu needsIndexing %@ hasMigrated %@
-[IMDCoreSpotlightManager indexNextMessageBatchIfNeeded:completion:]
sqlQuery
indexCreation
CSIngest
IMDCoreSpotlight: %s - Generated no indexable items :(
IMDCoreSpotlight %s - Got no records from IMDMessageRecordCopyMessagesFromRowIDDescLimit. Stopping indexing
Timing %@
Using legacy path for searchable item generation
Got %lu records from IMDMessageRecordCopyMessagesFromRowIDDescLimit
IMDCoreSpotlight: %s - Failed to get chat for message
-[IMDCoreSpotlightManager _newLegacySearchableIndexesForMessages:]
%s Generated %lu items to index!. Using Index %@
-[IMDCoreSpotlightManager _indexSearchableItems:lastIndexedRowID:batchSize:lastBatch:withIndex:completion:]
IMDCoreSpotlight: endIndexBatchWithClientState failed with error %@. Using index %@
Indexing complete!
Setting lastIndexedRowID to %lu
IMDChatAddMessageToSpotlight: indexing searchable items failed with error %@. Using index %@
IMCSNeedsIndexing
IMCSIndexLastIndexDate
IMCSNeedsDeferredIndexing
IMCSIndexTotalRecords
IMCSLastIndexedRowID
IMCSIdxVersion
IMCSBypassIndexVersionCheckV2
Reducing batch size to %lu, last batch?
blocklistMessageGUIDs
T@"NSMutableOrderedSet",&,N,V_blocklistMessageGUIDs
Library
sms.db
sms-temp.db
uint64_result
v32@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16^{CSDBSqliteConnection=^{CSDBSqliteDatabase}^{sqlite3}^{__CFDictionary}^v^?I}24
counter_in_all
counter_out_all
counter_last_reset
RecordStore
Beginning record store clean.
Beginning file cleanse.
Sticker with path is not in use.
XPC connection failed, not deleting sticker
Found %lld sticker(s), path is in use
Beginning sticker attachment cleanse.
Beginning browser snapshot deletion
Attachments. Could not delete browser snapshot cache at path %@
ProtectionMerge: unprotected database: %s, found: %s, error: %d
%@-shm
%@-wal
ProtectionMerge: unprotected database: %s, deleted: %s, error: %d
maxSMSDBSize
IMDPersistence
Overriding max db size to be %lu
Max db size to is %lu mega bytes
counter_out_lifetime
counter_in_lifetime
Skipping '%@' as its level is %d and our target level is %d.
Examining '%@' as it looks like it contains a guid '%@'.
To Delete: %@
Cleaned up '%@'
Could ~not~ clean up '%@' due to error '%@'.
Keeping '%@' we have a record for it in the DB.
  Deleting preview: %@
  Not deleting the actual attachment: %@
Beginning iteration of _IMDCleanseOrphanedAttachmentsWithEnumerator attachments
File cleanse ended %@
successfully.
in failure.
Attachments _IMDCleanseOrpanedStickersInStickerCachePath nil stickerCachePath
Sticker cache path %@
Attachments. Error getting contents of directory %@ error %@
Searching db for filename: %@
Will delete %@
Attachments. Could not delete sticker at path %@
IMDDonationManager
early returning from copyGroupPhotoToExternalPathIfNecessary - nil argument. groupPhotoGUID %@ chatGUID %@ filepath %@
File already exists at path %@
File missing at path %@. Will attempt to copy from Attachments directory
Error creating intermediate directories for path: %@
Error copying to path %@ from path %@ success: %@ error: %@
Successfully copied to path %@ from path %@
fileManager
T@"NSFileManager",&,N,V_fileManager
"Database": Unable to create record for attachment.
Boolean IMDAttachmentRecordIsSticker(IMDAttachmentRecordRef)
"Database": NULL attachment passed to %s
Attempted to get record identifier for NULL attachment record: %@
CFStringRef IMDAttachmentRecordCopyGUID(CFAllocatorRef, IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetCreatedDate(IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetStartDate(IMDAttachmentRecordRef)
Boolean IMDAttachmentRecordGetIsOutgoing(IMDAttachmentRecordRef)
CFStringRef IMDAttachmentRecordCopyFilename(CFAllocatorRef, IMDAttachmentRecordRef, BOOL)
CFStringRef IMDAttachmentRecordCopyTransferName(CFAllocatorRef, IMDAttachmentRecordRef)
CFStringRef IMDAttachmentRecordCopyUTIType(CFAllocatorRef, IMDAttachmentRecordRef)
CFDictionaryRef IMDAttachmentRecordCopyUserInfo(CFAllocatorRef, IMDAttachmentRecordRef)
CFStringRef IMDAttachmentRecordCopyMIMEType(CFAllocatorRef, IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetTransferState(IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetTotalBytes(IMDAttachmentRecordRef)
void IMDAttachmentRecordBulkCopy(IMDAttachmentRecordRef, CFStringRef *, int64_t *, int64_t *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, Boolean *, int64_t *, CFDictionaryRef *, Boolean *, CFDictionaryRef *, CFDictionaryRef *, Boolean *, int64_t *, CFDataRef *, CFStringRef *, CFStringRef *, int64_t *, CFDataRef *, CFStringRef *)
void IMDAttachmentRecordBulkUpdate(IMDAttachmentRecordRef, CFStringRef, int64_t, int64_t, CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, Boolean, int64_t, CFDictionaryRef, Boolean, CFDictionaryRef, CFDictionaryRef, Boolean, int64_t, CFDataRef, CFStringRef, CFStringRef, int64_t, CFDataRef, CFStringRef)
void _IMDAttachmentRecordBulkCopyXPCDictionary(IMDAttachmentRecordRef, xpc_object_t, Boolean)
Request to markAllUnsuccessFullySyncedAttachmentsAsNeedingSync 
update attachment set ck_sync_state=0 where ck_sync_state=2 or ck_sync_state=3;
Executed query to mark all unsuccessfuly synced attachments as needing sync
Error executing markAllUnsuccessFullySyncedAttachmentsAsNeedingSync %@ 
IMDAttachmentRecord
CFStringRef _AttachmentCopyDescription(_IMDAttachmentRecord *)
<IMDAttachmentRecord %p [%p]>{}
"Database": _IMDAttachmentRecordCreate()
CREATE TABLE _SqliteDatabaseProperties (key TEXT, value TEXT, UNIQUE(key));
CREATE TABLE message (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, guid TEXT UNIQUE NOT NULL, text TEXT, replace INTEGER DEFAULT 0, service_center TEXT, handle_id INTEGER DEFAULT 0, subject TEXT, country TEXT, attributedBody BLOB, version INTEGER DEFAULT 0, type INTEGER DEFAULT 0, service TEXT, account TEXT, account_guid TEXT, error INTEGER DEFAULT 0, date INTEGER, date_read INTEGER, date_delivered INTEGER, is_delivered INTEGER DEFAULT 0, is_finished INTEGER DEFAULT 0, is_emote INTEGER DEFAULT 0, is_from_me INTEGER DEFAULT 0, is_empty INTEGER DEFAULT 0, is_delayed INTEGER DEFAULT 0, is_auto_reply INTEGER DEFAULT 0, is_prepared INTEGER DEFAULT 0, is_read INTEGER DEFAULT 0, is_system_message INTEGER DEFAULT 0, is_sent INTEGER DEFAULT 0, has_dd_results INTEGER DEFAULT 0, is_service_message INTEGER DEFAULT 0, is_forward INTEGER DEFAULT 0, was_downgraded INTEGER DEFAULT 0, is_archive INTEGER DEFAULT 0, cache_has_attachments INTEGER DEFAULT 0, cache_roomnames TEXT, was_data_detected INTEGER DEFAULT 0, was_deduplicated INTEGER DEFAULT 0, is_audio_message INTEGER DEFAULT 0, is_played INTEGER DEFAULT 0, date_played INTEGER, item_type INTEGER DEFAULT 0, other_handle INTEGER DEFAULT -1, group_title TEXT, group_action_type INTEGER DEFAULT 0, share_status INTEGER, share_direction INTEGER, is_expirable INTEGER DEFAULT 0, expire_state INTEGER DEFAULT 0, message_action_type INTEGER DEFAULT 0, message_source INTEGER DEFAULT 0);
CREATE TABLE chat (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, guid TEXT UNIQUE NOT NULL, style INTEGER, state INTEGER, account_id TEXT, properties BLOB, chat_identifier TEXT, service_name TEXT, room_name TEXT, account_login TEXT, is_archived INTEGER DEFAULT 0, last_addressed_handle TEXT, display_name TEXT, group_id TEXT, is_filtered INTEGER DEFAULT 0, successful_query INTEGER DEFAULT 1);
CREATE TABLE attachment (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, guid TEXT UNIQUE NOT NULL, created_date INTEGER DEFAULT 0, start_date INTEGER DEFAULT 0, filename TEXT, uti TEXT, mime_type TEXT, transfer_state INTEGER DEFAULT 0, is_outgoing INTEGER DEFAULT 0, user_info BLOB, transfer_name TEXT, total_bytes INTEGER DEFAULT -1);
CREATE TABLE handle ( ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, id TEXT NOT NULL, country TEXT, service TEXT NOT NULL, uncanonicalized_id TEXT, UNIQUE (id, service) );
CREATE TABLE message_attachment_join ( message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, attachment_id INTEGER REFERENCES attachment (ROWID) ON DELETE CASCADE, UNIQUE(message_id, attachment_id));
CREATE TABLE chat_message_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, PRIMARY KEY (chat_id, message_id));
CREATE TABLE chat_handle_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, handle_id INTEGER REFERENCES handle (ROWID) ON DELETE CASCADE, UNIQUE(chat_id, handle_id));
CREATE TABLE deleted_messages (ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL);
_SqliteDatabaseProperties
CREATE INDEX message_idx_is_read ON message(is_read, is_from_me, is_finished);
CREATE INDEX message_idx_failed ON message(is_finished, is_from_me, error);
CREATE INDEX message_idx_handle ON message(handle_id, date);
CREATE INDEX message_idx_was_downgraded ON message(was_downgraded);
CREATE INDEX chat_message_join_idx_message_id ON chat_message_join(message_id, chat_id);
CREATE INDEX message_idx_date ON message(date);
CREATE INDEX chat_idx_chat_identifier_service_name ON chat(chat_identifier, service_name);
CREATE INDEX chat_idx_chat_identifier ON chat(chat_identifier);
CREATE INDEX chat_idx_chat_room_name_service_name ON chat(room_name, service_name);
CREATE INDEX message_attachment_join_idx_message_id ON message_attachment_join(message_id);
CREATE INDEX chat_handle_join_idx_handle_id ON chat_handle_join(handle_id);
CREATE INDEX message_attachment_join_idx_attachment_id ON message_attachment_join(attachment_id);
CREATE INDEX message_idx_handle_id ON message(handle_id);
CREATE INDEX chat_message_join_idx_chat_id ON chat_message_join(chat_id);
CREATE INDEX message_idx_other_handle ON message(other_handle);
CREATE INDEX message_idx_expire_state ON message(expire_state);
CREATE INDEX chat_message_join_idx_message_id_only ON chat_message_join(message_id);
CREATE INDEX chat_idx_is_archived ON chat(is_archived);
CREATE TRIGGER after_delete_on_chat AFTER DELETE ON chat BEGIN DELETE FROM chat_message_join WHERE chat_id = OLD.ROWID; END;
CREATE TRIGGER after_delete_on_message_attachment_join AFTER DELETE ON message_attachment_join BEGIN     DELETE FROM attachment         WHERE attachment.ROWID = OLD.attachment_id     AND         (SELECT 1 from message_attachment_join WHERE attachment_id = OLD.attachment_id LIMIT 1) IS NULL; END;
CREATE TRIGGER after_insert_on_message_attachment_join AFTER INSERT ON message_attachment_join BEGIN     UPDATE message       SET cache_has_attachments = 1     WHERE       message.ROWID = NEW.message_id; END;
CREATE TRIGGER add_to_deleted_messages AFTER DELETE ON message BEGIN     INSERT INTO deleted_messages (guid) VALUES (OLD.guid); END;
CREATE TRIGGER after_delete_on_chat_message_join AFTER DELETE ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = OLD.message_id       )       WHERE         message.ROWID = OLD.message_id;  DELETE FROM message WHERE message.ROWID = OLD.message_id AND OLD.message_id NOT IN (SELECT chat_message_join.message_id from chat_message_join WHERE chat_message_join.message_id = OLD.message_id LIMIT 1); END;
CREATE TRIGGER after_delete_on_chat_handle_join AFTER DELETE ON chat_handle_join BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END;
CREATE TRIGGER after_delete_on_message AFTER DELETE ON message BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END;
CREATE TRIGGER before_delete_on_attachment BEFORE DELETE ON attachment BEGIN   SELECT before_delete_attachment_path(OLD.ROWID, OLD.guid); END;
CREATE TRIGGER after_delete_on_attachment AFTER DELETE ON attachment BEGIN   SELECT delete_attachment_path(OLD.filename); END;
CREATE TRIGGER after_insert_on_chat_message_join  AFTER INSERT ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = NEW.message_id       )       WHERE         message.ROWID = NEW.message_id; END;
"Database": Downgrade: Opening new coral database
"Database": Downgrade: Creating Tables
"Database": Downgrade: Creating Indexes
"Database": Downgrade: Committing phase 1
"Database": Downgrade: Beginning to copy tables
"Database": Downgrade: Creating triggers
"Database": Downgrade: Updating Version
"Database": Downgrade: Committing phase 2
Database downgrade failed with error: %@
"Database": Downgrade completed ok! :-D
"Database": Unable to perform query %@. Error %d
SELECT ROWID FROM chat WHERE GUID = ?
SELECT ROWID FROM message WHERE GUID = ?
SELECT ROWID FROM attachment WHERE GUID = ?
SELECT ROWID FROM handle WHERE id = ? AND service = ?
INSERT INTO chat (  guid,   style,   state,   properties,   chat_identifier,   service_name,   room_name,   is_archived ) VALUES (   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ? );
INSERT INTO handle ( id,  service )  VALUES (  ?,  ? );
INSERT OR IGNORE INTO chat_handle_join ( chat_id,  handle_id )  VALUES (  ?,  ? );
INSERT INTO attachment ( guid,  created_date,  start_date,  filename,  uti,  mime_type,  transfer_state,  is_outgoing,  transfer_name,  total_bytes) VALUES (   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ? );
INSERT INTO message ( guid,  text,  handle_id,  subject,  attributedBody,  service,  account,  account_guid,  error,  date,  date_read,  date_delivered,  is_delivered,  is_finished,  is_emote,  is_from_me,  is_empty,  is_delayed,  is_auto_reply,  is_prepared,  is_read,  is_system_message,  is_sent,  is_service_message,  is_forward,  is_archive,  order_date ) VALUES ( ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ? );
INSERT OR IGNORE INTO chat_message_join (chat_id, message_id, message_date) VALUES (?, ?, ?)
MessageImport
IMDMessageImportEnd
"Database": %s called, but not during import, ignoring
ALTER TABLE message RENAME TO message_import
CREATE INDEX message_import_idx ON message_import(date, ROWID)
INSERT INTO message (guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated) SELECT guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated FROM message_import ORDER BY message_import.order_date ASC, message_import.ROWID ASC;
CREATE TABLE IF NOT EXISTS message_new_to_old (            ROWID        INTEGER PRIMARY KEY,            old_rowid    INTEGER            ); 
INSERT INTO message_new_to_old (old_rowid) SELECT message_import.ROWID FROM message_import ORDER BY message_import.order_date ASC, message_import.ROWID ASC
CREATE INDEX message_new_to_old_idx ON message_new_to_old(old_rowid);
ALTER TABLE chat_message_join RENAME TO chat_message_join_import
CREATE TABLE IF NOT EXISTS chat_message_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, message_date INTEGER DEFAULT 0, PRIMARY KEY (chat_id, message_id));
INSERT INTO chat_message_join    SELECT cmi.chat_id, mno.ROWID, mno.date    FROM      chat_message_join_import cmi    INNER JOIN message_new_to_old mno ON      cmi.message_id = mno.old_rowid    ; 
ALTER TABLE message_attachment_join RENAME TO message_attachment_join_import
CREATE TABLE IF NOT EXISTS message_attachment_join ( message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, attachment_id INTEGER REFERENCES attachment (ROWID) ON DELETE CASCADE, UNIQUE(message_id, attachment_id));
INSERT INTO message_attachment_join   SELECT mno.ROWID, mai.attachment_id   FROM     message_attachment_join_import mai   INNER JOIN message_new_to_old mno ON     mai.message_id = mno.old_rowid   ;
UPDATE message SET cache_has_attachments = IFNULL((SELECT 1 FROM message_attachment_join maj WHERE message.ROWID = maj.message_id LIMIT 1), 0)
UPDATE message SET cache_roomnames = (                           SELECT group_concat(c.room_name)                           FROM                             chat c                           INNER JOIN                             chat_message_join j                           ON                             c.ROWID = j.chat_id                           WHERE                             j.message_id = message.ROWID                           ) WHERE message.ROWID = (select j.message_id FROM chat c INNER JOIN chat_message_join j ON c.rowid = j.chat_id WHERE c.room_name IS NOT NULL); 
DELETE FROM message WHERE (SELECT 1 from chat_message_join cmj WHERE message.ROWID = cmj.message_id LIMIT 1) IS NULL;
DELETE FROM attachment WHERE (SELECT 1 from message_attachment_join maj WHERE attachment.ROWID = maj.attachment_id LIMIT 1) IS NULL
Successful import! This is not an internal install so let's delete the backup database stored at %@
IMDCopyGUIDForImportedOneToOneChat
"Database": %s called for chat: %@, but not during import, ignoring
Creating chat for guid: %@
Created new chat with row id: %lld
Creating handle for: %lld
"Database": Failed to add handle: %lld to chat: %lld
"Database": Failed to create new chat for guid: %@
Already have chat for guid: %@
IMDCopyGUIDForImportedChat
Created new chat: %lld
Creating handle for: %@
Import attachment %@ with data
Import attachment %@ with filePath %@
IMDImportMessage
SELECT MIN(ROWID) FROM message m WHERE m.ROWID IN (SELECT message_id FROM chat_message_join where chat_id = ?) AND m.text = ? AND m.date > ? AND m.date < ?
Found duplicate for %@ at %lld
Found chat for guid: %@
Created message for guid: %@  associating with chat: %@
"Database": Failed to create message for guid: %@
Not inserting %@  already have message in chat: %@
"Database": No chat found for guid: %@   failing message import for GUID: %@
Associated attachment GUID %@ with message GUID: %@
INSERT OR IGNORE INTO message_attachment_join (message_id, attachment_id) VALUES (?, ?)
_IMDServerImportAttachmentWithDataOrPath
"Database": MessageImport - IMDImportAttachmentWithPath - empty guid
"Database": Unable to create directories for %@ when saving attachment %@
"Database": MessageImport - couldn't link/copy attachment from %@ to %@ - %@
"Database": Could not write attachmentData to path %@
Created attachment id %lld with path %@ for guid %@
Already have an attachment for guid %@
Attempted to create IMDMessageRecordRef from nil IMItem.
Attempting to create a TU Conversation item with guid %@ conversationUUID: %@
Exception caught creating IMDMessageRecordRef from IMItem: %@   (%@)
Attempting to create participant change item with GUID: %@  %@  %@ => %@
invite
remove
Attempting to create title item with GUID: %@   title: %@
Attempting to add group leave GUID: %@ %@ => %@
start sharing
stop sharing
unknown
incoming
outgoing
Attempting location share update to chat guid GUID: %@  (%@:%@) %@ => %@
save audio
save video
Attempting to add message action GUID: %@ (%@) %@ => %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDMessageStore_PersistenceUtilities.m
IMDMessageRecordRef IMDCreateIMDMessageRecordRefFromIMMessageItem(IMItem *)
IMDCreateIMDMessageRecordRefFromIMMessageItem
Unexpected not equal '%@ (%@) != %@ (%@)' in %s at %s:%d. %@
[imMessageItem type]
IMDMessageRecordItemTypeMessage
[imMessageItem isKindOfClass:[IMAssociatedMessageItem class]]
msg-room-%@
msg-handle-%@
Updating IMMessageItem: %@ from IMMessageItem: %@
Updating IMItem: %@ from IMItem: %@
CSDBSqliteDatabase *IMDSharedSqliteDatabase()
NSString *IMDSharedSqliteDatabasePath()
Sqlite database path is nil
com.apple.IMDSMSRecordStore.MessagesRecordStore
_MessagesRecordStore
CSDBThreadedRecordStoreRef IMDSharedThreadedRecordStore()_block_invoke
CSDBCreateThreadedRecordStore failed
CSDBThreadedRecordStoreRef IMDSharedThreadedRecordStore()
CSDBCreateThreadedRecordStore should not be nil. Did attempt to init: %@
CSDBRecordStoreRef CSDBSharedRecordStore()
void IMDEnsureSharedRecordStoreInitialized()
recordStore is nil, will not initialize
^{__CFString=}8@?0
"Database": Saving database.
"Database": Destroying database.
"Database": Closed database.
store
void _initializeDB(CSDBRecordStoreRef, CSDBSqliteConnection *)
"Database": Create tables...
void _initializeConnection(CSDBSqliteDatabase *, CSDBSqliteConnection *)
"Database": Setting page size.
"Database": Enabling WAL journal mode.
"Database": Enabling Foreign Key support.
PRAGMA foreign_keys = ON;
"Database": Registering external functions.
delete_attachment_path
before_delete_attachment_path
im_trim
"Database": Performing a pre-checkpoint vacuum.
vacuum;
"Database": Performing Analyze to optimize the database
ANALYZE;
"Database": Performing a WAL checkpoint.
PRAGMA wal_checkpoint(RESTART);
"Database": Database Clean up took: %f seconds
"Database": No valid database handle, cannot perform a clean
v16@?0@"CSDBThreadedRecordStore"8
"Database": Creating triggers for %p after db init failed: %@
DeleteSequenceNumber
_Bool _databaseVersionCanBeMigrated(CSDBSqliteDatabase *, CSDBSqliteConnection *, int, void *)
"Database": "Database": The current SMS database is v%d.  The current schema version is v%d. Can be migrated: %@
The current SMS database is v%d.  The current schema version is v%d. Can be migrated: %@
"Database": "Database": The current SMS database has a NEWER version (%d) than expected (%d), internal build allows newer DB? %@
The current SMS database has a NEWER version (%d) than expected (%d), internal build allows newer DB? %@
CSDBSqliteMigrationContinuation _performMigrationCallback(CSDBSqliteDatabase *, CSDBSqliteConnection *, int, void *)
"Database": "Database": Beginning migration.  The SMS db is currently at v%d, upgrading to v%d.
Beginning migration.  The SMS db is currently at v%d, upgrading to v%d.
Initial Integrity checked success
vacuum
com.apple.MobileSMS.Migration.Migration_Successful
"Database": "Database": Message database migration passed post migrate integrity check
Message database migration passed post migrate integrity check
"Database": "Database": Message database migration failed post migrate integrity check
Message database migration failed post migrate integrity check
com.apple.MobileSMS.Migration.Migration_Failure
"Database": "Database": Migration failed, made it to version: %d: error: %@
Migration failed, made it to version: %d: error: %@
"Database": "Database": Message database migration failed - Database integrity check failed
Message database migration failed - Database integrity check failed
"Database": "Database": Message's DB migration took %f seconds.
Message's DB migration took %f seconds.
BOOL _IMDCheckDatabaseIntegrity(CSDBSqliteDatabase *, CSDBSqliteConnection *)
com.apple.MobileSMS.InitialIntegrityCheck_Failure
REINDEX
Reindexing the DB worked.
com.apple.MobileSMS.Migration.Reindex_Success
"Database": "Database": Database Reindexing the DB failed with SQLite result: %d
Database Reindexing the DB failed with SQLite result: %d
com.apple.MobileSMS.Migration.Reindex_Failure
com.apple.MobileSMS.PostReindex.IntegrityCheck_Failure
Vacuuming DB success
com.apple.MobileSMS.Migration.Vacuum_Success
"Database": "Database": Database Vacuuming failed with SQLite result: %d
Database Vacuuming failed with SQLite result: %d
com.apple.MobileSMS.Migration.Vacuum_Failure
Post Vacuuming integrity check success
com.apple.MobileSMS.Migration.PostVacuum.IntegrityCheck_Success
"Database": "Database": Database Post Vacuuming integrity checked failed failed
Database Post Vacuuming integrity checked failed failed
com.apple.MobileSMS.Migration.PostVacuum.IntegrityCheck_Failure
Integrity checked success
com.apple.MobileSMS.PostReindex.IntegrityCheck_Success
com.apple.MobileSMS.InitialIntegrityCheck_Success
BOOL IMDSqliteDatabaseCheckIntegrity(CSDBSqliteConnection *)
com.apple.MobileSMS.Migration.IntegrityCheck_Failure
BOOL IMDSqlOperationIsQueryIndexed(IMDSqlOperation *, NSArray **)
detail
SCAN TABLE
*** Query is indexed: %@
    query: %@
         : %@
BOOL IMDSqlOperationColumnExistsOnTableWithOperation(IMDSqlOperation *, CFStringRef, CFStringRef)
columnName
PRAGMA table_info(%@);
BOOL IMDSqlOperationAddColumnIfNotExistsToTableWithOperation(IMDSqlOperation *, CFStringRef, CFStringRef, CFStringRef)
typeAndDefault
Found column %@ on %@, no need to add it
ALTER TABLE %@ ADD COLUMN %@ %@;
Adding column %@ to %@ succeeded: %@
BOOL IMDSqlOperationAddColumnIfNotExistsToTable(CFStringRef, CFStringRef, CFStringRef)
uint64_t IMDSqlOperationGetRowCountForTable(CFStringRef)
SELECT count(*) from %@;
CFStringRef IMDSqlOperationGetDatabasePath(IMDSqlOperation *)
main
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDSqlOperationUtilities.m
BOOL IMDDatabaseCopy(NSString *, NSString *, NSError **)
IMDDatabaseCopy
fromPath
toPath
[[fromPath pathExtension] isEqualToString:@"db"]
[[toPath pathExtension] isEqualToString:@"db"]
Unable to open source database at %@ (%d)
Unable to open destination database at %@ (%d)
Unable to replace database at %@ (%d)
uint32_t IMDSqlStatementColumnCount(IMDSqlStatement *)
statement->sql_statement
chat_message_join_idx_message_id_only
chat_message_join(message_id)
chat_message_join_idx_chat_id
chat_message_join(chat_id)
chat_message_join_idx_message_date_id_chat_id
chat_message_join(chat_id, message_date, message_id)
chat_handle_join_idx_handle_id
chat_handle_join(handle_id)
message_attachment_join_idx_attachment_id
message_attachment_join(attachment_id)
message_attachment_join_idx_message_id
message_attachment_join(message_id)
message_idx_failed
message(is_finished, is_from_me, error)
message_idx_handle
message(handle_id, date)
message_idx_handle_id
message(handle_id)
message_idx_other_handle
message(other_handle)
message_idx_is_read
message(is_read, is_from_me, is_finished)
message_idx_was_downgraded
message(was_downgraded)
message_idx_date
message(date)
message_idx_cache_has_attachments
message(cache_has_attachments)
message_idx_is_sent_is_from_me_error
message(is_sent, is_from_me, error)
message_idx_expire_state
message(expire_state)
message_idx_associated_message
message(associated_message_guid)
message_idx_isRead_isFromMe_itemType
message(is_read, is_from_me, item_type)
message_idx_thread_originator_guid
message(thread_originator_guid)
chat_idx_is_archived
chat(is_archived)
chat_idx_chat_identifier_service_name
chat(chat_identifier, service_name)
chat_idx_chat_identifier
chat(chat_identifier)
chat_idx_chat_room_name_service_name
chat(room_name, service_name)
message_processing_task_idx_guid_task_flags
message_processing_task(guid, task_flags)
attachment_idx_purged_attachments_v2
attachment(hide_attachment,ck_sync_state,transfer_state) WHERE hide_attachment=0 AND (ck_sync_state=1 OR ck_sync_state=4) AND transfer_state=0
message_idx_undelivered_one_to_one_imessage
message(cache_roomnames,service,is_sent,is_delivered,was_downgraded,item_type) where cache_roomnames IS NULL AND service = 'iMessage' AND is_sent = 1 AND is_delivered = 0 AND was_downgraded = 0 AND item_type == 0
CREATE INDEX IF NOT EXISTS %@ ON %@;
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.23/IMCore/IMDPersistence/Source/IMDIndexes.m
BOOL IMDCreateIndexesWithOperation(IMDSqlOperation *, BOOL)
IMDCreateIndexesWithOperation
Create index failed: %@: %@
Created index ok: %@
SELECT name, sql FROM sqlite_master WHERE type = 'index'
sqlite_autoindex
DROP INDEX %@
Dropped index failed: %@: %@
Dropped index: %@
SELECT name FROM sqlite_master WHERE type = 'index';
Dropping unknown index failed: %@: %@
Dropped unknown index: %@
SELECT name, sql FROM sqlite_master WHERE type = 'index';
expected: %@:%@
  actual: %@:%@
Not updating Spotlight index, a NULL chat was passed to _IMDUpdateSpotlightForChatThresholdMessage
Updating the Spotlight index for chat [%lld]
SELECT message_id from chat_message_join WHERE chat_id = ? ORDER BY message_id DESC LIMIT 1 OFFSET ?;
"Database": Found %ld messages guids to remove from spotlight
"Database": Found 0 messages guids to remove from spotlight
xpc_object_t IMDSqlOperationGetXpcRows(IMDSqlOperation *)
xpc_object_t IMDSqlOperationGetXpcRowsForQuery(CFStringRef)
__xpc__event_code__
createdDate
startDate
transferName
utiType
mimeType
transferState
isOutgoing
userInfo
stickerUserInfo
isSticker
attributionInfo
hideAttachment
totalBytes
cloudKitSyncState
cloudKitServerChangeTokenBlob
cloudKitRecordID
originalGUID
srCloudKitSyncState
srCloudKitServerChangeTokenBlob
srCloudKitRecordID
isLegacyGUID
spath
days
options
attachmentClass
numRecents
bytesToFreeUp
chatLimit
attachmentLimit
watermark
startingOffset
queryType
useStingRay
rowid
updatedGuid
chatIdentifiers
services
aliases
cnRecordID
unformattedID
personCentricID
uncanonicalizedID
messageId
messageGUID
attachmentGUID
associatedMessageGUID
guids
lowerRowID
maxRowID
rowIDs
roomname
threadIdentifier
only_messages
only_unread
numberOfMessagesBefore
numberOfMessagesAfter
lastAddressedHandles
oldLastAddressedSIMID
newLastAddressedSIMID
newLastAddressedHandle
lastAddressedLabelIDs
body
servicesToSkip
guidsToSkip
searchAfter
chatServices
includeFromMe
replaceID
afterRowID
originalMessageGUID
chatID
chatGUIDs
dateRef
fromMe
fallbackGUID
addresses
dateRead
dateDelivered
datePlayed
accountGUID
handleString
countryCode
itemType
otherHandleID
groupActionType
shareStatus
shareDirection
groupTitle
expireState
messageActionType
associatedMessageRangeLocation
associatedMessageRangeLength
timeExpressiveSendPlayed
messageSummaryInfo
cloudKitRecordChangeTag
dataDetectorsInfo
destinationCallerID
srCloudKitRecordChangeTag
replyToGUID
sortID
threadOriginatorGUID
threadOriginatorPart
messageID
fzGuid
fzDate
fzDateRead
fzDateDelivered
fzDatePlayed
fzBody
fzAttributedBody
fzFlags
fzService
fzAccount
fzAccountGUID
fzSubject
fzError
fzType
timePlayedExpressiveSend
propertiesData
serviceName
lastAddressedLocalHandle
accountLogin
isArchived
isFiltered
hasHadSuccessfulQuery
engramID
serverChangeToken
ckSyncState
originalGroupID
lastReadMessageTimeStamp
srServerChangeToken
srCKSyncState
lastAddressedSIMID
chatRowID
identifier
complete
request
Progressive copy of all chats started
Progressive copy of all chats completed with %d messages
batchSize
messageGUIDS
__xpc_event_code__
winning_guid
losing_guids
display_name_update
backup_path
message_count
target_db_path
sender
file
recipients
isIncoming
source
destination
ckRecordID
recordIDs
fromError
toError
syncCounts
data
context
messageGUIDs
"Database": __syncXPCIMDMessageStoreSendXPCMessage got a bogus message to send...bailing!
"Database": __syncXPCIMDMessageStoreSendXPCMessage: You should not be hitting the database in a unit test. Please check your dependencies
__xpc_wants_reply__
"Database": __syncXPCIMDMessageStoreSendXPCMessage has failed %lu time(s)!
"Database": __syncXPCIMDMessageStoreSendXPCMessage failed to copy the xpc_connection_t!
"Database": __syncXPCIMDMessageStoreSendXPCMessage failed several consecutive times - sleeping for 1+ the launchd throttle time.
"Database": __syncXPCIMDMessageStoreSendXPCMessage failed too many times...bailing!
IMAutomaticHistoryDeletionAgent
Cleansing orphaned attachments
IMDMessageAutomaticHistoryDeletion
Deleting previews older than last 200
Finished previews older than last 200
Cleansing orphaned sticker transfer user info
Cleansing orphaned sticker attachments
Cleansing browser snapshot cache
deleting messages older than %ld days
deleting attachments older than %ld days
  => Cleaning up orphaned messages
Cleansing database
deleting spotlight archive files
~/Library/Messages/Archive
main folder path found %@
could not messages archive director, error:
deleteDirectoryAtPath: Deleting directory at path %@
deleteDirectoryAtPath:  path is nil
isFileHeaderDateAtPathOlderThanDays: checking file at path %@
EndTime
isFileHeaderDateAtPathOlderThanDays: date modified %@
isFileHeaderDateAtPathOlderThanDays: dateCreated or dateMod is nil
isDirCreationDateAtPathOlderThanDays: checking how old dir at %@ is
isDirCreationDateAtPathOlderThanDays:path attributes are %@
isDirCreationDateAtPathOlderThanDays: Could not locate directory at path
_getiChatFileMetadataForPath: data %@
metadata
Failed to unarchive iChat file metadata. Error: %@
.DS_Store
Cleaning Database
SELECT   c.ROWID, c.guid FROM   chat c WHERE   c.style != 45 
UPDATE   chat SET     chat_identifier = ?,     room_name = ? WHERE     ROWID = ?
wrong number of arguments
Failed to create index pieces_message_index.
Created index pieces_message_index.
CREATE INDEX pieces_message_index ON msg_pieces(message_id);
Updating madrid indices.
Failed to create index madrid_handle_index.
Created index madrid_handle_index.
CREATE INDEX madrid_handle_index ON message(madrid_handle);
Failed to create index madrid_guid_index.
Created index madrid_guid_index.
CREATE INDEX madrid_guid_index ON message(madrid_guid);
Failed to create index madrid_roomname_index.
Created index madrid_roomname_index.
CREATE INDEX madrid_roomname_index ON message(madrid_roomname);
Failed to create index madrid_service_index.
Created index madrid_service_index.
CREATE INDEX madrid_service_index ON message(madrid_service);
Failed to create index madrid_account_index.
Created index madrid_account_index.
CREATE INDEX madrid_account_index ON message(madrid_account);
Failed to create index madrid_url_index.
Created index madrid_url_index.
CREATE INDEX madrid_url_index ON message(madrid_url);
Failed to create index madrid_flags_index.
Created index madrid_flags_index.
CREATE INDEX madrid_flags_index ON message(madrid_flags);
Nuking bogus madrid message indices.
Failed to drop index madrid_handle_index.
Dropped index madrid_handle_index.
DROP INDEX madrid_handle_index;
Failed to drop index madrid_roomname_index.
Dropped index madrid_roomname_index.
DROP INDEX madrid_roomname_index;
Failed to drop index madrid_service_index.
Dropped index madrid_service_index.
DROP INDEX madrid_service_index;
Failed to drop index madrid_account_index.
Dropped index madrid_account_index.
DROP INDEX madrid_account_index;
Failed to drop index madrid_url_index.
Dropped index madrid_url_index.
DROP INDEX madrid_url_index;
Failed to drop index madrid_flags_index.
Dropped index madrid_flags_index.
DROP INDEX madrid_flags_index;
Failed to create index madrid_roomname_service_index.
Created index madrid_roomname_service_index.
CREATE INDEX madrid_roomname_service_index ON message(madrid_roomname, madrid_service);
Failed to create index madrid_handle_service_index.
Created index madrid_handle_service_index.
CREATE INDEX madrid_handle_service_index ON message(madrid_handle, madrid_service);
CREATE INDEX message_group_index ON message(group_id, ROWID);
Failed to create index madrid_attachment_message_index.
Created index madrid_attachment_message_index.
CREATE INDEX IF NOT EXISTS madrid_attachment_message_index ON madrid_attachment(message_id);
Failed to create index madrid_attachment_guid_index.
Created index madrid_attachment_guid_index.
CREATE INDEX IF NOT EXISTS madrid_attachment_guid_index ON madrid_attachment(attachment_guid);
Failed to create index madrid_attachment_filename_index.
Created index madrid_attachment_filename_index.
CREATE INDEX IF NOT EXISTS madrid_attachment_filename_index ON madrid_attachment(filename);
Failed to create madrid_attachment table
Created madrid_attachment table
CREATE TABLE IF NOT EXISTS madrid_attachment (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, attachment_guid TEXT, created_date INTEGER, start_date INTEGER, filename TEXT, uti_type TEXT, mime_type TEXT, transfer_state INTEGER, is_incoming INTEGER, message_id INTEGER)
Failed to create madrid_chat table
Created madrid_chat table
CREATE TABLE madrid_chat (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, style INTEGER, state INTEGER, account_id TEXT, properties BLOB, chat_identifier TEXT, service_name TEXT, guid TEXT, room_name TEXT, account_login TEXT, participants BLOB)
Failed to create index madrid_chat_style_index.
Created index madrid_chat_style_index.
CREATE INDEX IF NOT EXISTS madrid_chat_style_index ON madrid_chat(style)
Failed to create index madrid_chat_state_index.
Created index madrid_chat_state_index.
CREATE INDEX IF NOT EXISTS madrid_chat_state_index ON madrid_chat(state)
Failed to create index madrid_chat_account_id_index.
Created index madrid_chat_account_id_index.
CREATE INDEX IF NOT EXISTS madrid_chat_account_id_index ON madrid_chat(account_id)
Failed to create index madrid_chat_chat_identifier_index.
Created index madrid_chat_chat_identifier_index.
CREATE INDEX IF NOT EXISTS madrid_chat_chat_identifier_index ON madrid_chat(chat_identifier)
Failed to create index madrid_chat_service_name_index.
Created index madrid_chat_service_name_index.
CREATE INDEX IF NOT EXISTS madrid_chat_service_name_index ON madrid_chat(service_name)
Failed to create index madrid_chat_guid_index.
Created index madrid_chat_guid_index.
CREATE INDEX IF NOT EXISTS madrid_chat_guid_index ON madrid_chat(guid)
Failed to create index madrid_chat_room_name_index.
Created index madrid_chat_room_name_index.
CREATE INDEX IF NOT EXISTS madrid_chat_room_name_index ON madrid_chat(room_name)
Failed to create index madrid_chat_account_login_index.
Created index madrid_chat_account_login_index.
CREATE INDEX IF NOT EXISTS madrid_chat_account_login_index ON madrid_chat(account_login)
Failed to drop table: %@
Successfully dropped table: %@
Failed to drop index: %@
Successfully dropped index: %@
DROP INDEX IF EXISTS %@;
Failed to create index: %@
Successfully created index: %@
Failed to create table msg_pieces.
Created table msg_pieces.
CREATE TABLE IF NOT EXISTS msg_pieces (ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, message_id INTEGER, data BLOB, part_id INTEGER, preview_part INTEGER, content_type TEXT, height INTEGER, version INTEGER, flags INTEGER, content_id TEXT, content_loc TEXT, headers BLOB);
Failed to add column subject.
Added column subject.
ALTER TABLE message ADD COLUMN subject TEXT
Failed to add column country.
Added column country.
ALTER TABLE message ADD COLUMN country TEXT
Failed to add column headers.
Added column headers.
ALTER TABLE message ADD COLUMN headers BLOB
Failed to add column recipients.
Added column recipients.
ALTER TABLE message ADD COLUMN recipients BLOB
Failed to add column hash.
Added column hash.
ALTER TABLE msg_group ADD COLUMN hash INTEGER
Failed to add index hash_index.
Added index hash_index.
CREATE INDEX hash_index ON msg_group(hash)
ALTER TABLE group_member ADD COLUMN country TEXT
Failed to add column content_id.
Added column content_id.
ALTER TABLE msg_pieces ADD COLUMN content_id TEXT;
Failed to add column content_loc.
Added column content_loc.
ALTER TABLE msg_pieces ADD COLUMN content_loc TEXT;
ALTER TABLE msg_pieces ADD COLUMN headers BLOB;
Failed to add column madrid_attributedBody.
Added column madrid_attributedBody.
ALTER TABLE message ADD COLUMN madrid_attributedBody BLOB
Failed to add column madrid_handle.
Added column madrid_handle.
ALTER TABLE message ADD COLUMN madrid_handle TEXT
Failed to add column madrid_version.
Added column madrid_version.
ALTER TABLE message ADD COLUMN madrid_version INTEGER
Failed to add column madrid_guid.
Added column madrid_guid.
ALTER TABLE message ADD COLUMN madrid_guid TEXT
Failed to add column madrid_type.
Added column madrid_type.
ALTER TABLE message ADD COLUMN madrid_type INTEGER
Failed to add column madrid_roomname.
Added column madrid_roomname.
ALTER TABLE message ADD COLUMN madrid_roomname TEXT
Failed to add column madrid_service.
Added column madrid_service.
ALTER TABLE message ADD COLUMN madrid_service TEXT
Failed to add column madrid_account.
Added column madrid_account.
ALTER TABLE message ADD COLUMN madrid_account TEXT
Failed to add column madrid_flags.
Added column madrid_flags.
ALTER TABLE message ADD COLUMN madrid_flags INTEGER
Failed to add column madrid_attachmentInfo.
Added column madrid_attachmentInfo.
ALTER TABLE message ADD COLUMN madrid_attachmentInfo BLOB;
Failed to add column madrid_url.
Added column madrid_url.
ALTER TABLE message ADD COLUMN madrid_url TEXT
Failed to add column madrid_error.
Added column madrid_error.
ALTER TABLE message ADD COLUMN madrid_error INTEGER
Failed to add column is_madrid.
Added column is_madrid.
ALTER TABLE message ADD COLUMN is_madrid INTEGER;
"Database": "Database": %@ SQLiteResult: %d SQLite Message: %s
%@ SQLiteResult: %d SQLite Message: %s
"Database": "Database": No migration block to execute!
No migration block to execute!
Failed to add column read.
Added column read.
ALTER TABLE message ADD COLUMN read INTEGER
Failed to update flags.
Updated flags.
UPDATE message SET read = ((flags >> 1) & 1)
Failed to create index update message_groupid_read_index.
Created index message_groupid_read_index.
CREATE INDEX message_groupid_read_index ON message(group_id, read)
Create tables...
CREATE TABLE IF NOT EXISTS handle ( ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, id TEXT NOT NULL, country TEXT, service TEXT NOT NULL, uncanonicalized_id TEXT, UNIQUE (id, service) )
Table for handle was created successfully.
Failed to create table for handle. SQLiteError: %d
BOOL IMDLegacyMigrator(IMDSqlOperation *, int)
"Database": "Database": Migration unsupported.  The SMS db is currently at v%d, cannot upgrade to v%d.
Migration unsupported.  The SMS db is currently at v%d, cannot upgrade to v%d.
read
Updating DB to sort by ROWID instead of date.
MobileSMS DB Migration failed while dropping message_group_index.
Successfully dropped index message_group_index.
DROP INDEX message_group_index;
MobileSMS DB Migration failed while creating message_group_index.
Created index message_group_index
Updating DB to support madrid.
Updating DB from version 12 to current.
MobileSMS DB Migration failed adding madrid_error column to message table.
Added madrid_error column.
ALTER TABLE message ADD COLUMN madrid_error INTEGER;
MobileSMS DB Migration failed adding is_madrid column to message table.
Added column is_madrid
MobileSMS DB Migration failed creating index madrid_flags_index.
Added index madrid_flags_index.
Updating DB from version 13 to current.
MobileSMS DB Migration failed adding column madrid_date_read.
Added column madrid_date_read.
ALTER TABLE message ADD COLUMN madrid_date_read INTEGER;
MobileSMS DB Migration failed adding column madrid_date_delivered.
Added column madrid_date_delivered.
ALTER TABLE message ADD COLUMN madrid_date_delivered INTEGER;
Updating DB from version 14 to current.
Adding index for group_id on group_member
MobileSMS DB Migration failed adding index group_id_index
Added index group_id_index
CREATE INDEX group_id_index ON group_member(group_id);
Adding support for Chats and Participants.
Ensuring sanity of is_madrid column.
MobileSMS DB Migration failed updating the values for is_madrid.
Updated values for is_madrid.
UPDATE message SET is_madrid = 0 WHERE is_madrid IS NULL;
Cleaning message indices for iMessage.
Adding column for iMessage Account GUID
MobileSMS DB Migration failed adding column madrid_account_guid.
Added column madrid_account_guid.
ALTER TABLE message ADD COLUMN madrid_account_guid TEXT;
Moving old tables to *_legacy and adding tables for the new schema.
MobileSMS DB migration failed to rename group_member table.
Renamed group_member table.
ALTER TABLE group_member RENAME TO group_member_legacy;
MobileSMS DB migration failed to rename madrid_attachment table.
Renamed madrid_attachment table.
ALTER TABLE madrid_attachment RENAME TO madrid_attachment_legacy;
MobileSMS DB migration failed to rename madrid_chat table.
Renamed madrid_chat table.
ALTER TABLE madrid_chat RENAME TO madrid_chat_legacy;
Renamed message table.
ALTER TABLE message RENAME TO message_legacy;
MobileSMS DB migration failed to rename msg_group table.
Renamed msg_group table.
ALTER TABLE msg_group RENAME TO msg_group_legacy;
MobileSMS DB migration failed to rename msg_pieces table.
Renamed msg_pieces table.
ALTER TABLE msg_pieces RENAME TO msg_pieces_legacy;
SELECT is_archived FROM chat
The is_archived column already exists on chat, skipping this step.
MobileSMS DB migration failed to add column is_archived to the chat table.
Added is_archived column to the chat table.
ALTER TABLE chat ADD COLUMN is_archived DEFAULT 0
PRAGMA vacuum
SQLite result was %d
Fixing missing text in group field
SELECT was_data_detected FROM message
The was_data_detected column already exists on message, skipping this step.
MobileSMS DB migration failed to add column was_data_detected to the message table.
Added was_data_detected column to the message table.
ALTER TABLE message ADD COLUMN was_data_detected INTEGER DEFAULT 0
SELECT last_addressed_handle FROM chat
The last_addressed_handle column already exists on chat, skipping this step.
MobileSMS DB migration failed to add column last_addressed_handle to the chat table.
Added last_addressed_handle column to the chat table.
ALTER TABLE chat ADD COLUMN last_addressed_handle TEXT
MobileSMS DB migration failed to delete V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP.
Dropped unneeded V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP.
SELECT was_deduplicated FROM message
The was_deduplicated column already exists on message, skipping this step.
MobileSMS DB migration failed to add column was_deduplicated to the message table.
Added was_deduplicated column to the message table.
ALTER TABLE message ADD COLUMN was_deduplicated INTEGER DEFAULT 0
CREATE INDEX message_idx_failed ON message(is_finished, is_from_me, error)
CREATE INDEX IF NOT EXISTS message_idx_handle ON message(handle_id, date);
chat_idx_identifier
CREATE INDEX IF NOT EXISTS chat_idx_identifier ON chat(chat_identifier)
chat_idx_room_name
CREATE INDEX IF NOT EXISTS chat_idx_room_name ON chat(room_name)
CREATE INDEX IF NOT EXISTS message_idx_was_downgraded ON message(was_downgraded);
chat_message_join_idx_message_id
CREATE INDEX IF NOT EXISTS chat_message_join_idx_message_date_id_chat_id ON chat_message_join(chat_id, message_date, message_id)
madrid_attachment_legacy
group_member_legacy
madrid_chat_legacy
message_legacy
msg_group_legacy
msg_pieces_legacy
Fixing busted chat identifiers for group chats
Adding attachment is_outgoing column
SELECT is_outgoing FROM attachment
The is_outgoing column already exists on attachment, skipping this step.
MobileSMS DB migration failed to add column is_outgoing to the attachment table.
Added is_outgoing column to the attachment table.
ALTER TABLE attachment ADD COLUMN is_outgoing INTEGER DEFAULT 0
Fixing up uncanonicalized identifiers that had previously been incorrectly treated as canonicalized.
Fixing up uncanonicalized handle identifiers that failed to migrate due to conflicts.
Adding attachment user_info column
SELECT user_info FROM attachment
The user_info column already exists on attachment, skipping this step.
MobileSMS DB migration failed to add column user_info to the attachment table.
Added user_info column to the attachment table.
ALTER TABLE attachment ADD COLUMN user_info BLOB
Adding attachment transfer_name column
SELECT transfer_name FROM attachment
The transfer_name column already exists on attachment, skipping this step.
MobileSMS DB migration failed to add column transfer_name to the attachment table.
Added transfer_name column to the attachment table.
ALTER TABLE attachment ADD COLUMN transfer_name TEXT
Adding chat display_name column
SELECT display_name FROM chat
The display_name column already exists on chat, skipping this step.
MobileSMS DB migration failed to add column display_name to the display_name table.
Added display_name column to the display_name table.
ALTER TABLE chat ADD COLUMN display_name TEXT
Adding attachment total_bytes column
SELECT total_bytes FROM attachment
MobileSMS DB migration failed to add column total_bytes to the attachment table.
Added total_bytes column to the attachment table.
ALTER TABLE attachment ADD COLUMN total_bytes INTEGER DEFAULT -1
Purging orphaned messages
Purged orphaned messages failed :-(.
Purged orphaned messages.
Adding message is_audio_message, is_played, and date_played column
SELECT is_audio_message, is_played, date_played FROM message
The is_audio_message, is_played, and date_played columns already exist on message, skipping this step.
MobileSMS DB migration failed to add column is_audio_message to the message table.
Added is_audio_message column to the message table.
ALTER TABLE message ADD COLUMN is_audio_message INTEGER DEFAULT 0
MobileSMS DB migration failed to add column is_played to the message table.
Added is_played column to the message table.
ALTER TABLE message ADD COLUMN is_played INTEGER DEFAULT 0
MobileSMS DB migration failed to add column date_played to the message table.
Added date_played column to the message table.
ALTER TABLE message ADD COLUMN date_played INTEGER
Purging orphaned messages - again
Adding message item_type, other_handle, group_title, group_action_type, share_status, share_direction
SELECT item_type, other_handle, group_title, group_action_type, share_status, share_direction FROM message
The item_type, other_handle, group_title, group_action_type, share_status, share_direction columns already exist on message, skipping this step.
MobileSMS DB migration failed to add column item_type to the message table.
Added item_type column to the message table.
ALTER TABLE message ADD COLUMN item_type INTEGER DEFAULT 0
MobileSMS DB migration failed to add column other_handle to the message table.
Added other_handle column to the message table.
ALTER TABLE message ADD COLUMN other_handle INTEGER DEFAULT -1
MobileSMS DB migration failed to add column group_title to the message table.
Added group_title column to the message table.
ALTER TABLE message ADD COLUMN group_title TEXT
MobileSMS DB migration failed to add column group_action_type to the message table.
Added group_action_type column to the message table.
ALTER TABLE message ADD COLUMN group_action_type INTEGER DEFAULT 0
MobileSMS DB migration failed to add column share_status to the message table.
Added share_status column to the message table.
ALTER TABLE message ADD COLUMN share_status INTEGER
MobileSMS DB migration failed to add column share_direction to the message table.
Added share_direction column to the message table.
ALTER TABLE message ADD COLUMN share_direction INTEGER
SELECT group_id FROM chat
The group_id columns already exist on chat, skipping this step.
MobileSMS DB migration failed to add column group_id to the chat table.
Added group_id column to the chat table.
ALTER TABLE chat ADD COLUMN group_id TEXT
Adding message is_expirable, expire_state, and message_action_type column
SELECT is_expirable, expire_state, message_action_type FROM message LIMIT 1
The is_expirable, expire_state, and message_action_type columns already exist on message, skipping this step.
MobileSMS DB migration failed to add column is_expirable to the message table.
Added is_expirable column to the message table.
ALTER TABLE message ADD COLUMN is_expirable INTEGER DEFAULT 0
MobileSMS DB migration failed to add column expire_state to the message table.
Added expire_state column to the message table.
ALTER TABLE message ADD COLUMN expire_state INTEGER DEFAULT 0
MobileSMS DB migration failed to add column message_action_type to the message table.
Added message_action_type column to the message table.
ALTER TABLE message ADD COLUMN message_action_type INTEGER DEFAULT 0
Adding message message_source column
SELECT message_source FROM message LIMIT 1
The message_source column already exists on message, skipping this step.
MobileSMS DB migration failed to add column message_source to the message table.
Added message_source column to the message table.
ALTER TABLE message ADD COLUMN message_source INTEGER DEFAULT 0
"Database": "Database": Migration failed, made it to version: %d
Migration failed, made it to version: %d
Join table for Chat <--> Message was created successfully.
Failed to create join table for Chat <--> Message. SQLiteError: %d
CREATE TABLE IF NOT EXISTS chat_handle_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, handle_id INTEGER REFERENCES handle (ROWID) ON DELETE CASCADE, UNIQUE(chat_id, handle_id));
Join table for Chat <--> Handle was created successfully.
Failed to create join table for Chat <--> Handle. SQLiteError: %d
Join table for Message <--> Attachment was created successfully.
Failed to create join table for Message <--> Attachment. SQLiteError: %d
INTEGER DEFAULT 0
INTEGER DEFAULT 1
STRING DEFAULT NULL
BLOB
BLOB DEFAULT NULL
UPDATE message SET message_summary_info = NULL WHERE message_summary_info IS NOT NULL;
TEXT
TEXT DEFAULT NULL
message_date
UPDATE chat_message_join SET message_date = (select m.date from message m where m.ROWID = message_id);
update attachment set original_guid=guid;
UPDATE message SET date = date * 1000000000.0 WHERE date < 1000000000.0 ;
UPDATE chat SET room_name = chat_identifier WHERE style = 43 AND room_name is null;
ck_record_system_property_blob
sr_ck_record_system_property_blob
UPDATE chat SET ck_record_system_property_blob = NULL, sr_ck_record_system_property_blob = NULL;
UPDATE chat SET ck_record_system_property_blob = NULL;
UPDATE chat SET sr_ck_record_system_property_blob = NULL;
UPDATE chat SET is_filtered = 1 WHERE is_filtered = 0 AND service_name = 'SMS';
IMDMessageRecordCloudKitStatisticTotalMessageCountKey
IMDMessageRecordCloudKitStatisticSyncedMessageCountKey
IMDMessageRecordCloudKitStatisticTotalChatCountKey
IMDMessageRecordCloudKitStatisticSyncedChatCountKey
IMDMessageRecordCloudKitStatisticTotalAttachmentCountKey
IMDMessageRecordCloudKitStatisticSyncedAttachmentCountKey
IMDMessageRecordCloudKitStatisticAllSyncedCountKey
IMDMessageRecordCloudKitStatisticTotalCountKey
SELECT count(message_id) FROM     (SELECT ocj.message_id FROM chat_message_join ocj WHERE ocj.chat_id IN         (SELECT cj.chat_id FROM chat_message_join cj WHERE cj.message_id = ?)     ORDER BY ocj.message_id DESC LIMIT ?) WHERE message_id = ? 
IMDMessageRecordUnassociateMessageWithGUIDFromAttachmentWithGUID [MessageGUID: %@] [AttachmentGUID: %@
Cannot unassociate attachment from empty message GUID
Cannot unassociate attachment with empty attachment GUID
DELETE FROM message_attachment_join WHERE   ROWID IN (     SELECT       j.ROWID     FROM       message_attachment_join j     INNER JOIN message m ON j.message_id = m.ROWID     INNER JOIN attachment a ON j.attachment_id = a.ROWID     WHERE       m.guid = ?       AND a.guid = ?   ) 
DELETE FROM message WHERE message.ROWID NOT IN (SELECT message_id from chat_message_join);
"Database": Orphaned messages cleanup complete
Unable to associate message and attachment, empty attachment GUID.
Unable to associate message and attachment, empty message GUID.
IMDMessageRecordAssociateMessageWithGUIDToAttachmentWithGUID [MessageGUID: %@] [AttachmentGUID: %@
IMDMessageRecordCopyMessagesForAssociatedGUID [%@]
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE associated_message_guid = ? ORDER BY message.ROWID ASC;
IMDMessageRecordCopyMessagesForGUIDs [%@]
CFArrayRef IMDMessageRecordCopyMessagesForGUIDs(CFArrayRef)_block_invoke
IMDMessageRecordCopyMessageForGUID [%@]
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE guid = ? ORDER BY message.ROWID ASC;
IMDMessageRecordCopyGUID [%@]
IMDMessageRecordCopyLastReadMessageForChatGUID [%@]
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m INNER JOIN chat_message_join j ON m.ROWID = j.message_id INNER JOIN chat c ON c.ROWID = j.chat_id WHERE c.chat_identifier = ? AND m.is_read == 1 AND is_from_me == 0 AND is_finished == 1 ORDER BY m.date DESC LIMIT 1
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE error == 0 AND is_from_me == 0 AND is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT 1;
results from last received: %@
"Database": IMDMessageRecordCopyLastReceivedMessageLimit with limit %lld
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE error == 0 AND is_from_me == 0 AND item_type == 0 AND is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT ?;
"Database": IMDMessageRecordCopyLastReceivedMessageLimit syncXPC
IMDMessageRecordCopyMessageForRowID [%lld]
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE ROWID = ? ORDER BY message.ROWID ASC;
SELECT MAX(message_id) FROM chat_message_join
sint64_result
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE ROWID IN (SELECT message_id FROM chat_message_join WHERE message_id < ?) AND item_type = 0 ORDER BY ROWID DESC LIMIT ?
readMessageIDs
IMDMessageRecordCopyMessageForGUIDUnlocked failed to get results
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/IMDMessageQueries.m
BOOL IMDMessageRecordDeleteBatchOfDeletedMessageGuids(int, NSArray **, NSError **)
IMDMessageRecordDeleteBatchOfDeletedMessageGuids
batchAmount > 0
rowIDs.count == guids.count
IMDMessageRecordDeleteMessagesForGUIDs %@
IMDMessageRecordDeleteMessagesForGUIDs has no GUIDs to delete.
IMDSelectMessagesForDeletionAfterDaysWithQuery %lld
SELECT guid from message WHERE date >= 1000000000.0 AND date < ?;
SELECT guid from message WHERE date >= 1000000000.0 AND date < ? LIMIT 100;
SELECT * from deleted_messages ORDER BY ROWID ASC LIMIT ?;
SELECT * from deleted_messages ORDER BY ROWID ASC;
BOOL _IMDDeleteDeletedMessagesWithRangeOfRowIDs(IMDSqlOperation *, uint64_t, uint64_t)
_IMDDeleteDeletedMessagesWithRangeOfRowIDs
lastRowID >= firstRowID
DELETE FROM deleted_messages where ROWID >= ? AND ROWID <= ?;
"Database": IMDMessageRecordDeleteMessagesOlderThanDays %lld
"Database": IMDMessageRecordDeleteMessagesOlderThanDays interval is %f
DELETE from message WHERE date >= 1000000000.0 AND date < ?   AND NOT (group_action_type IN (1,3) AND (ROWID IN (SELECT message_id FROM message_attachment_join)));
"Database": No roomname or service specified. No rows will be returned.
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m INNER JOIN chat_message_join j ON   m.ROWID = j.message_id INNER JOIN chat c ON   c.ROWID = j.chat_id WHERE   c.room_name = ?   AND c.service_name = ? ORDER BY   m.ROWID DESC LIMIT ?
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id INNER JOIN chat c ON   c.ROWID = cm.chat_id INNER JOIN chat_handle_join ch ON   c.ROWID = ch.chat_id WHERE   ch.handle_id = ?   AND c.room_name IS NULL ORDER BY m.ROWID DESC LIMIT ?
CFMutableArrayRef IMDMessageRecordLoadMessagesInSet(NSSet *, uint64_t, BOOL)
IMDMessageRecordLoadMessagesInSet
comparator
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimitWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, CFStringRef, Boolean, Boolean, int64_t)
results
sqlite-timing
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimitWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, CFStringRef, Boolean, Boolean, int64_t)_block_invoke
history query:
rowID == 0
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimitWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, CFStringRef, Boolean, Boolean, int64_t)_block_invoke_2
history query: rowID should be > 0
"Database": history query got %lu rows
"Database": sqlite query timing: %@
"Database": history query: IMDP client got at least one message: %@
"Database": IMDP client got null array_result back: %@
"Database": IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID No handles or services specified for loading a limited number of messages up to guid. No rows will be returned
"Database": IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID We have a NULL messageGUID, early returning ****--We should have not gotten to this point if we had a null messageGUID, please file a radar--****
"Database": IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID with ids: %@ services: %@ messageGUID: %@ numberOfMessagesBefore: %lld numberOfMessagesAfter: %lld threadIdentifier: %@
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, int64_t, int64_t, CFStringRef, Boolean *, Boolean *)_block_invoke
firstLoadResults
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, int64_t, int64_t, CFStringRef, Boolean *, Boolean *)_block_invoke_3
Paged history query with numberOfMessagesBefore: %lld numberOfMessagesAfter: %lld
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, int64_t, int64_t, CFStringRef, Boolean *, Boolean *)_block_invoke_2
Paged history query: rowID should be > 0
"Database": Paged history query got %lu rows
secondLoadResults
Paged history query with numberOfMessagesAfter: %lld for second load
Paged history query: rowID should be > 0 for second load
"Database": Paged history query got %lu rows for second load
"Database": IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID IMDP client got null array_result back: %@
has_messages_before
has_messages_after
SELECT m.guid FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?)
"Database": No handles or services specified. Or handleCount != serviceCount. Or guidCount == 0. No rows will be returned.
"Database": Deleted %ld messages in %f seconds on %ld chats and %ld services
UPDATE   message SET   is_read = 0, date_read = 0 WHERE   rowid in (     select m.rowid from message m       INNER JOIN chat_message_join       cm ON m.ROWID = cm.message_id     WHERE       cm.chat_id = ?       AND m.item_type == 0       AND m.is_from_me == ?   )
SQLite returned %d from IMDMessageRecordMarkMessagesAsUnreadWithChatGUIDUpToGUIDFromMe
update message set is_read = 0 where guid = ?;
SQLite returned %d from IMDMessageRecordMarkMessageGUIDUnread
"Database": No handle or service specified. No rows will be returned.
IMDMessageRecordRef IMDMessageRecordCopyMessageMatchingBodyStringWithHandleSkippingServicesSkippingGUIDs(CFStringRef, CFStringRef, CFArrayRef, CFArrayRef, NSTimeInterval)
IMDMessageRecordCopyUndeliveredOneToOneMadridMessages
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m INDEXED BY message_idx_undelivered_one_to_one_imessage WHERE   m.cache_roomnames IS NULL   AND m.service = '%@'   AND m.is_sent = 1   AND m.is_delivered = 0   AND m.was_downgraded = 0   AND m.item_type == 0   AND m.ROWID > ? ORDER BY m.date ASC
IMDMessageRecordCopyExpiredOrExpiringiMessages
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m INDEXED BY message_idx_expire_state WHERE   (m.expire_state = %d OR m.expire_state = %d)  AND m.item_type == 0   AND m.ROWID > ? ORDER BY m.date ASC
IMDMessageRecordCopyUnsentUnfailedMessages
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m WHERE   m.is_from_me = 1   AND m.is_sent = 0   AND m.error = 0   AND m.item_type = 0   AND m.ROWID > ? 
IMDMessageRecordCopyMessageActionItemsForOriginalMessageGUID [%@]
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE subject = ?   AND item_type = ? ORDER BY message.ROWID ASC;
SELECT   COUNT(1) FROM (SELECT   m.rowid , cm.message_id FROM   message m INNER JOIN chat_message_join cm ON  cm.message_id = m.rowid INNER JOIN chat c ON   c.ROWID = cm.chat_id WHERE   m.is_read == 0   AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_blackholed != 1  AND c.is_filtered != ?)
"Database": Can't determine unread count when GUID is NULL or empty.
SELECT   COUNT(m.ROWID) FROM   message m INNER JOIN chat_message_join   cm ON m.ROWID = cm.message_id WHERE   cm.chat_id = ?   AND m.item_type == 0   AND m.is_read == 0   AND m.is_from_me == 0 
SELECT   COUNT(m.ROWID) FROM   message m   INDEXED BY message_idx_isRead_isFromMe_itemType INNER JOIN chat_message_join   cm ON m.ROWID = cm.message_id WHERE   cm.chat_id = ?   AND m.item_type == 0   AND m.is_read == 0   AND m.is_from_me == 0 
void _IMDMessageRecordCountAllUnreadMessagesForChatQuery(CFStringRef, void (^)(int64_t, SInt64))
_IMDMessageRecordCountAllUnreadMessagesForChatQuery
IMDIsRunningInDatabaseServerProcess()
_IMDMessageRecordCountAllUnreadMessagesForAllUnreadChats can only be called from IMDPersistenceAgent
SELECT cm.chat_id, COUNT(1) FROM message m INNER JOIN chat_message_join cm ON m.ROWiD = cm.message_id WHERE m.item_type == 0 AND m.is_read == 0 AND m.is_from_me == 0 GROUP BY +cm.chat_id
SELECT   m.thread_originator_part, COUNT(m.ROWID) FROM   message m INDEXED BY   message_idx_thread_originator_guid WHERE   m.thread_originator_guid == ?   AND m.associated_message_guid IS NULL GROUP BY  m.thread_originator_part
Unexpected column in reply count query with index %d
Reply count query got invalid column data back: %@|%@
IMDMessageRecordCountMessagesWithThreadOriginatorGroupedByParts called by client
"Database": Can't determine unplayed audio messages GUID is NULL or empty.
SELECT   m.ROWID FROM   message m WHERE   m.error != 0   AND m.is_from_me == 1   AND m.is_finished == 1  ORDER BY date DESC, ROWID DESC LIMIT 1
select ROWID from message where LENGTH(ck_record_id) > 0 AND ck_sync_state=1 ORDER BY ROWID DESC limit 1;
SELECT   m.date FROM   message m  INDEXED BY message_idx_failed WHERE   m.error != 0   AND m.is_from_me == 1   AND m.is_finished == 1  ORDER BY date DESC, ROWID DESC LIMIT 1
SELECT date FROM message ORDER BY date DESC, ROWID DESC LIMIT 1;
Most recent date: %@
Marking all unsent and failed messages as sent.
UPDATE message SET error = ? WHERE (is_sent = 0 AND is_from_me = 1 AND error = 0)
Row ID is %lld for message with guid [%@]
IMDMessageRecordCopyAndMarkAsReadMessagesPriorToGuidMatchingChatGUIDs
1. QueryHighestRowID
2. QueryChatRecordIDs
3. MarkAsRead
4. QueryMessageGUIDsFromRowIDs
Time to mark 1:1 as read when tapping/reflecting read receipt: %@
Time to mark 1:1 as read when receiving read receipt from receiver: %@
SELECT seq FROM SQLITE_SEQUENCE WHERE name = 'message';
int64_result
IMDMessageRecordCopyMessagesBetweenRowIDs [%lld:%lld]
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE rowID >= ?   AND rowID <= ?   AND item_type == 0 ORDER BY message.ROWID ASC;
"Database": The RowID is out of bounds.  We were asked for rows after [%lld] which exceeds the current sequence number [%lld]
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID limit: %lld  rowID: %lld
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.ROWID > ?  AND m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.date DESC, m.ROWID DESC LIMIT ?;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.date DESC, m.ROWID DESC LIMIT ?;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.ROWID > ?  AND m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.ROWID DESC;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.ROWID DESC;
IMDMessageRecordCopyNewestUnreadIncomingMessagesAfterRowID got back %ld rows
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID got back %zu rows from XPC
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID got back %d rows after deserialization
Asked to load up to oldest unread or fallback message: %@
SELECT * FROM (  SELECT ROWID from (      SELECT m1.ROWID FROM message m1 WHERE m1.GUID = ?    UNION      SELECT m2.ROWID FROM message m2        INNER JOIN chat_message_join cm ON          m2.ROWID = cm.message_id        WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?)        AND m2.is_read = 0        AND m2.item_type = 0        AND m2.is_from_me = 0  )) ORDER BY ROWID ASC LIMIT 1;
Query failed to look up message for guid: %@ error: %d
"Database": Final adjusted row ID: %lld
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND m.ROWID >= ? AND m.item_type == 0  AND m.is_read == 0 ORDER BY cm.chat_id, cm.message_id DESC LIMIT ?;
"Database": The date is out of bounds.  We were asked for rows after date: [%lld] which exceeds the most recent message [%lld]
IMDMessageRecordCopyNewestFailedOutgoingMessagesToLimitAfterDate limit: %lld  date: %lld
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE date > ?   AND item_type == 0   AND error != 0   AND is_from_me == 1   AND is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT ?;
IMDMessageRecordCopyMessagesDataDetectionResults limit: %lld  rowID: %lld
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE ROWID > ?   AND item_type == 0   AND has_dd_results == 1 ORDER BY ROWID DESC LIMIT ?;
"Database": No addresses provided to IMDMessageRecordCopyMostRecentUseageOfAddresses().
"Database": No addresses to lookup, no results for you.
"Database": Matching addresses (in order) are %@
CFArrayRef IMDMessageRecordCopyArrayOfAssociatedMessagesForMessageGUIDFromSender(NSString *, NSString *, NSError **)
IMDMessageRecordCopyArrayOfAssociatedMessagesForMessageGUIDFromSender
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE (associated_message_guid = ?) AND (handle_id IN (SELECT ROWID FROM handle where id = ?));
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE ((associated_message_guid = ?) AND (is_from_me = 1));
error_description
"Database": Found %ld associated messages for messageGUID: %@, forSender: %@
IMDMessageRecordCopyMessagesToUploadToCloudKitWithLimit called with limit %lld useStingRay%@
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message where ck_sync_state == 0 AND (service == 'iMessage' OR service == 'SMS') order by date limit ? ;
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message where sr_ck_sync_state == 0 AND (service == 'iMessage' OR service == 'SMS') order by date limit ? ;
Number of results %ld
Number of results 0
Returned from DB call.
IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync
update message set ck_sync_state=0,ck_record_id='',ck_record_change_tag='';update attachment set ck_sync_state=0, ck_server_change_token_blob='';
IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync updated messages as dirty 
Returned from DB call after marking all msgs as dirty.
IMDMessageRecordCopyRecordIDsAndGUIDsToDeleteWithLimit is in IMDP with limit %lld
 select * from sync_deleted_messages where LENGTH(recordID) > 0 limit ?;
IMDMessageRecordCopyRecordIDsAndGUIDsToDeleteWithLimit is in imagent with limit %lld
Request to add message with guid (%@) and recordID (%@) to delete table
 INSERT INTO sync_deleted_messages (guid, recordID) VALUES (?, ?);
Finished adding message with guid (%@) and recordID (%@) to delete table
Request to add incompatible group photo to delete table
 INSERT INTO sync_deleted_messages (guid, recordID) SELECT guid,ck_record_id FROM message WHERE item_type = 3 AND group_action_type != 0 AND length(ck_record_id) > 0;
Finished adding incompatible group photo to delete table
IMDMessageRecordClearDeleteTombStones
delete from sync_deleted_messages;
IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync deleted pending sync table
Returned from DB call after marking clearing all tombstones
IMDMessageRecordDeleteTombStonedMessagesWithGUIDs has no GUIDs to delete.
Returned from DB call after deleting RecordIDs from Tombstone table
Request to mark message with ROWID %lld as ignore but needing sync
update message set ck_sync_state = 2 where rowid=?
update message set sr_ck_sync_state = 2 where rowid=?
Finised marking message with ROWID %lld as ignore but needing sync
Request to mark message with ROWID %lld as clean
update message set ck_sync_state = 1 where rowid=?
update message set sr_ck_sync_state = 1 where rowid=?
Finised marking message with ROWID %lld as clean
SELECT ck_sync_state
 FROM message WHERE (ROWID in (SELECT message_id FROM chat_message_join));
 FROM chat;
SELECT ck_sync_state FROM attachment WHERE (ROWID in (SELECT attachment_id FROM message_attachment_join));
"Database": IMDMessageRecordCalculateLocalCloudKitStatistics failed with error: %@
"Database": Calculated sync stats in %f seconds. All Records: %lld of %lld, %lld remaining. Messages : %lld of %lld, %lld remaining. Chats : %lld of %lld, %lld remaining. Attachments : %lld of %lld, %lld remaining.
"Database": Expected dictionary of cloudkit stats is nil 2
"Database": IMDMessageRecordCalculateLocalCloudKitStatistics loaded stats: %@
UPDATE %@ SET ck_sync_state = 0;
SELECT ROWID from %@ LIMIT %lld
"Database": _IMDMessageRecordSetSyncCountOnTable got error: %@
UPDATE %@ SET ck_sync_state = 1 WHERE ROWID = %lld;
"Database": Write cloudkit sync counts: %@
"Database": setting new stats: messageSyncCount: %lld, chatSyncCount: %lld, attachmentCount: %lld
"Database": new stats: %@
"Database": We don't have a guid to find messages with this reply to guid
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message WHERE reply_to_guid = ?;
Bad thread identifier given to paged history query, identifier: %@ guid: %@ part: %@
SELECT   m.ROWID FROM   message m INDEXED BY   message_idx_thread_originator_guid WHERE   m.thread_originator_guid = ? AND m.thread_originator_part = ?   AND m.date < (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY   m.date DESC LIMIT ?
SELECT   m.ROWID FROM   message m INDEXED BY   message_idx_thread_originator_guid WHERE   m.thread_originator_guid = ? AND m.thread_originator_part = ?   AND m.date >= (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY   m.date ASC LIMIT ? + 1
Threaded history query got %llu items
Performing threaded history query ref msg: %@ originator guid: %@ part: %@ limit: %llu results: %@
void _IMDPerformQueryForPagedHistoryWithThreadIdentifier(CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, NSMutableSet *)_block_invoke
Performing threaded history query associated item GUID: %@
SELECT   m.ROWID FROM   message m WHERE   m.associated_message_guid = ?
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.sr_ck_sync_state, m.sr_ck_record_id, m.sr_ck_record_change_tag, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id INNER JOIN chat c ON   c.ROWID = cm.chat_id INNER JOIN chat_handle_join ch ON   c.ROWID = ch.chat_id WHERE   ch.handle_id = ?   AND c.room_name IS NULL   AND m.replace = ? ORDER BY m.ROWID DESC LIMIT ?
IMDMessageRecordCopyAllUnplayedMessageGUIDsForChatGUID
SELECT   m.guid FROM   message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id INNER JOIN chat c ON   c.ROWID = cm.chat_id WHERE   m.is_from_me = 0   AND m.is_played = 0   AND m.is_audio_message = 1   AND c.guid = ? ORDER BY m.ROWID ASC
_IMDMessageRecordCopyAndMarkAsReadMessagesReceivedPriorToGuidMatchingChatGUIDs
SELECT   message_id FROM chat_message_join WHERE message_id in (SELECT rowid FROM message INDEXED BY message_idx_isRead_isFromMe_itemType  WHERE (is_read == 0     AND is_finished == 1     AND is_from_me == 0     AND item_type == 0     AND is_system_message == 0     %s )) AND chat_id %@
 AND rowid <= ?
Query1
UPDATE   message SET   is_read = 1,   date_read = ? WHERE rowid %@
Query2-Update
Query results were null or empty bulk reading messages for %@
Time to run db query for marking 1:1 as read when tapping/reflecting read receipt: %@
Unable to create message record for guid %@
Time to run db query for marking 1:1 as read when receiving remote read receipt: %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/Source/IMDSqlOperation.h
IMDSqlColumn IMDSqlOperationColumnByName(IMDSqlOperation *, const char *)
IMDSqlOperationColumnByName
Attempted to create IMMessageItem from NULL IMDMessageRecordRef.
Exception caught creating IMMessageItem from IMDMessageRecordRef: %@
ID: %@
Account: %@
AccountID: %@
Service Name: %@
Service: %@  Account: %@ AccountID: %@
Creating TUConversationItem with GUID: %@ conversationUUID: %@ handle: %@ date: %@ otherHandle: %@ serviceName: %@
Creating group title item with GUID: %@   title: %@   handle: %@   date: %@  otherHandle: %@   serviceName: %@
Creating group action item with GUID: %@   action: %d   handle: %@   date: %@  otherHandle: %@   serviceName: %@
Creating participant change item with GUID: %@   action: %d   handle: %@   date: %@  otherHandle: %@   serviceName: %@
Creating location status update with GUID: %@   status: %@   direction: %@   handle: %@   date: %@  otherHandle: %@   serviceName: %@
start
stop
Creating message action item with GUID: %@   action: %d   handle: %@   date: %@  otherHandle: %@   serviceName: %@
Unarchived incoming message with empty sender, ignoring this (IMDMessageRecordRef: %@  IMMessageItem: %@)
Unarchived message with empty sender, ignoring this (IMDMessageRecordRef: %@  IMMessageItem: %@)
Unarchived message with empty guid, ignoring this (IMDMessageRecordRef: %@  IMMessageItem: %@)
Requests
Is database full? %@
Database schema version? %u
Created attachment record for guid: %@ with filename %@
Failed to create attachment record for guid: %@
rrid
Copied attachment record for guid: %@
No attachment record found for guid: %@
Copied attachment record for path: %@
No attachment record found for path: %@
Delete attachment for guid: %@
Deleting attachments older than %lld days
Query space saved by deleting attachments older than %lld days
bytes
Clean database
Query largest conversations
result
Query largest attachment GUIDs
Query space taken by attachment class
Does attachment exist for guid: %@? %@
Attachment count at sticker: %@ is %lld
Copying filenames for most recent %lld attachments (Results: %ld)
Copying most recent %lld attachments for queryType: %lld (Results: %ld)
Getting message record for attachment GUID %@
Failed to copy message for attachment GUID %@
Purgeable disk space is %lld
purgeableDiskSpace
Non synced attachment disk space is %lld
diskSpace
Copying oldest attachments to delete to free up: %lld bytes (Results: %ld)
Copying most recent attachments %ld from %ld most recent chats: (Results: %ld)
Copying oldest attachments to delete to free up: %lld bytes starting offset: %d (Results: %ld)
Deleting files older than %lld recent attachments
Copying filenames for attachments for chat identifiers: %@ on services: %@   (Results: %ld)
Copying purged attachments for chat %@ services %@ limit %@
All chats that have %@ as a participant.
All chats that have %@ as a chat GUID.
Copying purged attachments count for chat %@ services %@
purgedCount
Copying filenames for sticker attachments
accessibility_string
Updating attachment for guid: %@
No attachment found to update for guid: %@
_IMDPersistenceQueueForAsyncIPAction
v16@?0@"NSMutableDictionary"8
Creating handle record for ID: %@  service: %@
Failed to create handle record for ID: %@  service: %@
Updating handle record for handle ID: %lld   ID: %@  country: %@  unformatted: %@  service: %@ personCentricID: %@
Failed handle record record ID: %lld
Copied handle record for ID: %@  service: %@
No handle record found for ID: %@  service: %@
Is message record visible? %@
Unassociating message guid: %@  from attachment: %@
Associating message guid: %@  from attachment: %@
Copying messages for associated guid: %@   (Results: %ld)
Copying messages for guids: %@   (Results: %ld)
Copying messages between rowID: %lld  and rowID: %lld   (Results: %ld)
Copy message for guid: %@   (Result: %@)
Failed to copy message for guid: %@
Copy last read message for chat identifier: %@   (Result: %@)
Failed to copy last read message for chat identifier: %@
Copy message for RowID: %lld   (Result: %@)
Failed to copy message for rowID: %lld
Copy last received message (Result: %@)
Failed to copy last received message
Copying last received messages with limit: %lld   (Results: %ld)
Copying messages for rowIDs: %@   (Results: %ld)
Copying messages for rowIDs: %@
v32@?0@"NSString"8@16^B24
Delete messages for guids: %@
Delete messages older than %lld days
Copying messages for room name: %@ on service: %@   (Results: %ld)
Copying messages for chat identifiers: %@ on services: %@ onlyMessages: %@   (Results: %ld)
Copying limited number of messages for chat identifiers: %@ on services: %@  (Results: %ld) numberOfMessagesBefore: %lld numberOfMessagesAfter: %lld
Copying frequent replies for chat identifiers: %@ on services: %@   (Results: %ld)
Copying guids for chat identifiers: %@ on services: %@   (Results: %ld)
Getting last addressed labelID and last message date for chat identifiers: %@ and last addressed labelIDs: %@   (Results: %@)
Getting last addressed handle and last message date for chat identifiers: %@ and last addressed handles: %@   (Results: %@)
Delete messages guids: %@ for chat identifiers: %@ on services: %@
Copy messages with for handle: %@ on service: %@  limit: %lld  (Results: %ld)
Copy messages with handle: %@ matching body with for chatidentifiers: %@ on services: %@  skipping: %@  (Result: %@)
No message found with handle: %@ matching body with for chatidentifiers: %@ on services: %@  skipping: %@
Copy messages with handle: %@ matching body skipping services: %@  (Result: %@)
No message found with handle: %@ matching body skipping services: %@
Copy message with handle: %@ on service: %@  replaceID: %lld (Result: %@)
No message found with handle: %@ on service: %@  replaceID: %lld
Copy undelivered 1-1 messages (Results: %ld)
Copy expiring or expired messages (Results: %ld)
Copy unsent messages (Results: %ld)
Copy message action items for original message guid (Results: %ld)
Unread message count: %lld
Unread message count: %lld  for chat GUID: %@
Unread message count: %lld  for chat rowID: %lld
Last failed message rowID: %lld
Last synced message rowID: %lld
Most recent message date: %lld
Get identifier for message guid: %@  result: %lld
Get messages sequence number: %lld
Mark all unsent messages failed
Delete orphaned messages
Copy messages guids, and mark read, for chatGUIDs: %@ up to guid: %@  (Results: %ld)
Copy unplayed audio messages guids, for chat guid: %@  (Results: %ld)
Copy unread incoming messages chatIdentifiers:%@   services: %@   limit: %lld  fallbackGUID:%@ (Result: %lu)
Copy DD result messages up to rowID: %lld  limit: %lld   (Result: %lu)
Copy messages with reply to guid %@
Copy newest unread incoming messages up to rowID: %lld  limit: %lld   (Result: %lu)
Copy newest failed outgoing messages up to date: %lld  limit: %lld   (Result: %lu)
Copy most recent usage of addresses: %@   result: %@
Created message with guid: %@
Failed to create message with guid: %@
Copy chats from message ID: %lld  (Results: %lu)
Tried to copy chats from message ID: %lld, but no message found
Copy attachments from message ID: %lld  (Results: %lu)
Tried to copy attachments from message ID: %lld, but no attachments found
Setting handle ID: %lld  on message ID: %lld
Failed to set handle (%lld) on message (%lld)   (Message: %@  Handle: %@)
Copied handle: %@  for message ID: %lld
Tried to copy handle from Message ID: %lld, but no handle was found
Tried to copy handle from Message ID: %lld, but no message was found
Copied other handle: %@  for message ID: %lld
Tried to copy other handle from Message ID: %lld, but no handle was found
Tried to copy other handle from Message ID: %lld, but no message was found
Inserting Message Processing Task with (guid: %@, taskflags: %ld)
Coping first %ld Message Processing Task (Results: %ld)
Updating task_flags to %ld for Message Processing Task with guid: %@
Deleting all completed task from Message Processing Table
Created chat with guid: %@  (0x%p)
Failed to create chat with guid: %@
goFetchAllActiveChatsProgressively
Got nil for all active chats, aborting progressive copy all chats request early
Enforcing lastMessage load limit of %lld, found %lu chats with messages
v24@?0q8q16
Request
Received new copy all chats request (total: %ld, batch size: %ld)
Progressive chat send progress: %lu out of %lu
Progressive chat send complete with %lu chats sent
goFetchAllActiveChats
Enforing lastMessage load limit of %lld, found %lu chats with messages
v32@?0@8@16^B24
Finished timing goFetchAllActiveChats with time: %@
Backing up database failed with error: %@
IMDChatRecordRepairDuplicateChats is returned %@
got NO success with error: %@
got NO success with NO error!?
Mark file %@ succedded ? %@
Downgrade Database to version %ld
timestamp
IMDAttachmentRecordCopyAttachmentsForQueryWithLimit_IPCAction
IMDMessageRecordMarkAttachmentWithROWIDAsSyncedWithCloudKit_IPCAction
IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync_IPCAction
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState_IPCAction
IMDAttachmentRecordCopyMessageForAttachmentGUID_IPCAction
IMDAttachmentRecordUpdateAttachmentGUIDWithGUID_IPCAction
IMDAttachmentRecordGetPurgeableDiskSpace_IPCAction
IMDAttachmentRecordGetNonSyncedAttachmentDiskSpace_IPCAction
IMDAttachmentRecordCopyAttachmentsToMetricForDiskSpace_IPCAction
IMDAttachmentRecordCopyMostRecentAttachmentsInMostRecentChats_IPCAction
IMDAttachmentUpdateAttachmentFileSizeWithRowIDGreaterThanWatermark_IPCAction
IMDAttachmentRecordCopyAttachmentsToPurgeForDiskSpace_IPCAction
Clean database requested
com.apple.private.imcore.spi.database-access
com.apple.private.imcore.imdpersistence.data-detection-access
com.apple.private.imcore.imdpersistence.database-access
com.apple.imdpersistence.IMDPersistenceAgent-UnreadChatList
com.apple.imdpersistence.IMDPersistenceAgent-StorageManagement
peer(%d) received XPC_ERROR_CONNECTION_INVALID
peer(%d) received XPC_ERROR_CONNECTION_INTERRUPTED
peer(%d) received XPC_ERROR_TERMINATION_IMMINENT
Database request from client(%@:%d): %@
__IMDPersistenceIPCServer_peer_event_handler
Denying xpc connection, task does not have entitlement for message: %@  (%@:%d)
DELETE FROM sync_deleted_messages WHERE (recordID = ?
 OR recordID = ?
DELETE FROM message WHERE (guid = ?
 OR guid = ?
SELECT cm.message_id FROM chat_message_join cm 
INNER JOIN message m ON m.ROWID = cm.message_id 
WHERE cm.chat_id = (SELECT c.ROWID FROM chat c WHERE (c.chat_identifier = ? and c.service_name = ?)) 
AND m.is_read == 0 AND m.is_finished == 1 AND m.is_from_me == 0 
ORDER BY cm.message_date DESC, cm.message_id DESC LIMIT ?;
ORDER BY cm.message_date DESC, cm.message_id DESC;
SELECT message_id from chat_message_join cmj 
INNER JOIN message m ON m.ROWID = cmj.message_id 
WHERE cmj.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) 
AND ((m.thread_originator_guid = ? AND m.thread_originator_part = ?) OR m.associated_message_guid = ?) 
AND cmj.message_date <= (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY cmj.message_date DESC LIMIT ? + 1
AND cmj.message_date < (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY cmj.message_date DESC LIMIT ?
AND cmj.message_date >= (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY cmj.message_date ASC LIMIT ? + 1
DELETE
SELECT *
guidCount
CFStringRef IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServicesQuery1(int)
DELETE FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id IN (SELECT m.ROWID FROM message m WHERE m.guid IN (?
DELETE FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id = (SELECT m.ROWID FROM message m WHERE m.guid = ?);
CFStringRef IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServicesQuery2(int)
cleanOrphanedMessageString
DELETE FROM message WHERE (     SELECT 1 FROM chat_message_join     WHERE message_id = message.rowid     LIMIT 1 ) IS NULL AND message.guid 
CFStringRef IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServicesQuery3(int)
updateCacheRoomnamesString
UPDATE message SET cache_roomnames = (SELECT group_concat(c.room_name)                    FROM chat c INNER JOIN chat_message_join j                    ON c.ROWID = j.chat_id                    WHERE j.message_id = message.ROWID) WHERE message.guid 
AND h.service NOT %@
AND m.guid NOT %@
SELECT   MAX(m.ROWID) FROM   message m   INDEXED BY message_idx_handle WHERE  (   %@  m.handle_id IN (    SELECT       h.rowid     FROM       handle h     WHERE       h.id = ?       %@)  )   AND m.date >= ?   AND m.was_deduplicated = 0   AND m.cache_has_attachments = 0   %@   AND im_trim(m.text) = im_trim(?)   AND m.ROWID IN (     SELECT        cm.message_id      FROM        chat_message_join cm      WHERE        m.ROWID = cm.message_id        AND cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?)   ) 
m.is_from_me = 1 OR
m.is_from_me = 0 AND
SELECT   MAX(m.ROWID) FROM   message m   INDEXED BY message_idx_handle WHERE   m.handle_id IN (    SELECT       h.rowid     FROM       handle h     WHERE       h.id = ?       %@  )  AND m.date >= ?   AND m.is_from_me = 0   AND m.was_deduplicated = 0   AND m.cache_roomnames IS NULL   %@   AND im_trim(m.text) = im_trim(?) 
CFStringRef IMDMessageRecordCopyMessageMatchingBodyStringWithHandleSkippingServicesSkippingGUIDsQuery(int, int)
CFStringRef IMDMessageRecordCopyMostRecentUseageOfAddressesQuery(int)
SELECT   MAX(cm.message_id), h.ID FROM chat_message_join cm   INNER JOIN chat_handle_join j     ON cm.chat_id = j.chat_id       INNER JOIN handle h         ON h.ROWID = j.handle_id WHERE h.ID 
 GROUP BY h.ID 
 ORDER BY cm.message_id DESC 
CFStringRef IMDMessageRecordCopyMessagesForGUIDsQuery(int)
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part  FROM message 
WHERE guid 
ORDER BY message.ROWID ASC;
rowCount
CFStringRef IMDCreateDeleteDeletedMessagesGuidsQuery(int)
DELETE from deleted_messages where (ROWID = ?
 OR ROWID = ?
CFStringRef _IMDCreateQueryRemoveMessagesFromChatMessageJoinWithArrayOfMessageGuids(CFArrayRef, NSArray **)
spotlightMessageGuids
DELETE FROM chat_message_join WHERE message_id = ?
message_guid=%@
 OR message_id = ?
SELECT count(rowid) FROM Attachment where guid = ?
IMDAttachmentQueries
*** IMDAttachmentRecordCopyAttachmentForGUIDIsLegacyGUID called with isLegacyGUID %@
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, sr_ck_sync_state, sr_ck_server_change_token_blob, sr_ck_record_id FROM attachment WHERE original_guid = ? ORDER BY ROWID DESC;
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, sr_ck_sync_state, sr_ck_server_change_token_blob, sr_ck_record_id FROM attachment WHERE guid = ? ORDER BY ROWID DESC;
"Database": There appears to be more than one attachment with GUID [%@]
Getting message record for attachment guid %@
SELECT ROWID FROM attachment WHERE guid = ? LIMIT 1;
kIMDAttachmentRecordGetAttachmentRowIDForGUID returned error %@
kIMDAttachmentRecordGetAttachmentRowIDForGUID returned zero results
Got ROWID %lu for GUID %@
Looking up message ID that corresponds to attachment ID %lld
SELECT message_id FROM message_attachment_join WHERE attachment_id = ?;
kIMDAttachmentRecordGetMessageIDFromAttachmentID returned error %@
kIMDAttachmentRecordGetMessageIDFromAttachmentID returned zero results
message_id
Looking up message record corresponding to %lld
Failed to look up message record for messsage_id %llu
SELECT sticker_user_info, filename, created_date, attribution_info FROM attachment a INNER JOIN message_attachment_join ma ON a.ROWID = ma.attachment_id INNER JOIN message m ON ma.message_id = m.ROWID WHERE a.sticker_user_info IS NOT NULL AND m.is_from_me=1 AND a.transfer_state=5 GROUP BY filename ORDER BY a.ROWID DESC LIMIT ?;
accessl
Invalid parameter to IMDAttachmentCountAttachmentsWithStickerPath stickerCachePath %@
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, sr_ck_sync_state, sr_ck_server_change_token_blob, sr_ck_record_id FROM attachment WHERE filename LIKE ?;
StickerAttachmentCount
There appears to be more than one sticker with sticker path [%@]
SELECT count(rowid) FROM Attachment WHERE filename LIKE ?;
SELECT filename from attachment where mime_type in ("image/jpeg", "image/png", "image/gif")  order by ROWID DESC LIMIT ?
Request to mark attachment with ROWID %lld as clean
update attachment set ck_sync_state = 1,transfer_state = 5 where rowid=?
update attachment set sr_ck_sync_state = 1,transfer_state = 5 where rowid=?
Finished marking attachment with ROWID %lld as clean
IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync
update attachment set ck_sync_state=0, ck_server_change_token_blob='', ck_record_id='';
IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync updated attachments as dirty 
update attachment set sr_ck_sync_state=0, sr_ck_server_change_token_blob='', sr_ck_record_id='';
IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync updated stingray attachments as dirty 
Returned from DB call after marking all attachments as dirty.
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState
UPDATE attachment SET ck_sync_state == 1 WHERE ck_sync_state == 5;
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState reset all failed cloud attachment downloads 
UPDATE attachment SET sr_ck_sync_state == 1 WHERE sr_ck_sync_state == 5;
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState reset all failed stingray cloud attachment downloads 
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState Returned from DB call after resetting all failed cloud attachment downloads.
Request to fetch the non synced attachment disk space
SELECT sum(total_bytes) FROM attachment WHERE ck_sync_state != 1 AND hide_attachment == 0 ORDER BY created_date ASC;
Returning non synced attachment disk space with: %lld bytes
/var/mobile
Request to fetch the purgeable disk space
SELECT filename, total_bytes FROM attachment WHERE ck_sync_state == 1 AND transfer_state == 5 AND ck_server_change_token_blob != '' AND ck_server_change_token_blob NOT NULL;
File does not exist at path %@
returning purgeable disk space results (%lld) to delete number of attachments to delete (%lld) number of attachments total (%lld) 
Request to copy attachments to metric what we would purge
SELECT COUNT(*) FROM attachment WHERE ck_sync_state == 1 AND transfer_state == 5 AND ck_server_change_token_blob != '' AND ck_server_change_token_blob NOT NULL;
Offset we are choosing: %@ number of available records: %@
SELECT DISTINCT chat_id FROM (SELECT chat_id,message_date FROM chat_message_join ORDER BY message_date desc) ORDER BY message_date DESC LIMIT ?;
SELECT a.ROWID, a.guid, a.is_sticker, a.transfer_name, a.filename FROM attachment a JOIN (SELECT ma.attachment_id as a_id, message_date as m_date FROM message_attachment_join ma JOIN (SELECT cm.message_id as message_id, cm.message_date as message_date FROM message m JOIN chat_message_join cm WHERE m.cache_has_attachments = 1 AND cm.chat_id AND cm.chat_id = ? AND m.rowid = cm.message_id) as tmp WHERE ma.message_id = tmp.message_id) as tmp2 WHERE a.rowid = tmp2.a_id ORDER BY tmp2.m_date DESC LIMIT ?
Request to copy attachments to purge from disk that have been synced to CloudKit with bytes to free up: %lld starting offset: %d
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, sr_ck_sync_state, sr_ck_server_change_token_blob, sr_ck_record_id FROM attachment WHERE ck_sync_state == 1 AND transfer_state == 5 AND ck_server_change_token_blob != '' AND ck_server_change_token_blob NOT NULL ORDER BY created_date ASC LIMIT ? OFFSET ?;
Going to try and free up disk space with remaining bytes to free up: %lld
returning results (%d) to delete 
SELECT * FROM attachment a WHERE a.ck_sync_state == 0 ORDER BY ROWID LIMIT ? 
SELECT * FROM attachment a WHERE a.ck_sync_state == 1 AND transfer_state == 0 ORDER BY ROWID DESC LIMIT ? 
IMDAttachmentQueryStringForIMAttachmentsQuery unknown IMAttachmentsQuery type %lld
SELECT * FROM attachment a WHERE a.sr_ck_sync_state == 0 ORDER BY ROWID DESC LIMIT ? 
transfernames
filenames
/var/mobile/Library/Caches/
Previews
StickerCache
sticker
%@-%@-sticker
Examining pewview folder name'%@'.
Sticker preview %@ is part of 200 last attachments, not deleting
Skipping folder %@ as it does not have a valid transfername
Could ~not~ clean up sticker previews due to error '%@'.
Sticker Preview to Delete: %@
Cleaned up sticker preview '%@'
Could ~not~ clean up sticker preview '%@' due to error '%@'.
Beginning iteration of _IMDAttachmentRecordDeleteStickersExceptPreviewsToKeep attachments
_IMDAttachmentRecordDeleteStickersExceptPreviewsToKeep File cleanse ended
Beginning iteration of _IMDAttachmentRecordDeleteAttachmentsExceptPreviewsToKeep attachments
_IMDAttachmentRecordDeleteAttachmentsExceptPreviewsToKeep File cleanse ended
DELETE FROM attachment WHERE created_date < ? AND transfer_name != 'GroupPhotoImage';
Request to fetch estimate space taken by attachments older than days %llu
SELECT filename FROM attachment WHERE created_date < ?;
Request to fetch estimate space taken by attachments older than days %llu returning %llu
Request to fetch largest non synced conversations
SELECT chat.guid, sum(attachment.total_bytes) s FROM attachment INNER JOIN message_attachment_join ON message_attachment_join.attachment_id = attachment.rowid INNER JOIN chat_message_join ON chat_message_join.message_id = message_attachment_join.message_id INNER JOIN chat ON chat.ROWID = chat_message_join.chat_id WHERE attachment.hide_attachment=0 AND attachment.transfer_state = 5 GROUP BY chat.guid ORDER BY s DESC;
SELECT chat.guid, sum(attachment.total_bytes) s FROM attachment INNER JOIN message_attachment_join ON message_attachment_join.attachment_id = attachment.rowid INNER JOIN chat_message_join ON chat_message_join.message_id = message_attachment_join.message_id INNER JOIN chat ON chat.ROWID = chat_message_join.chat_id WHERE attachment.ck_sync_state != 1 AND attachment.hide_attachment=0 GROUP BY chat.guid ORDER BY s DESC;
SELECT chat.guid, sum(attachment.total_bytes) s FROM attachment INNER JOIN message_attachment_join ON message_attachment_join.attachment_id = attachment.rowid INNER JOIN chat_message_join ON chat_message_join.message_id = message_attachment_join.message_id INNER JOIN chat ON chat.ROWID = chat_message_join.chat_id WHERE attachment.ck_sync_state = 1 AND attachment.hide_attachment=0 AND transfer_state = 5 GROUP BY chat.guid ORDER BY s DESC;
size
Returning %lu conversations
Photo
Video
GIFOrSticker
Other
Request to fetch non synced attachment guids for attachment class
Returning %lu non synced attachments
SELECT mime_type, is_sticker, SUM(total_bytes) FROM attachment WHERE ck_sync_state != 1 AND hide_attachment=0 AND transfer_state = 5 GROUP BY mime_type, is_sticker ;
SELECT mime_type, is_sticker, SUM(total_bytes) FROM attachment WHERE hide_attachment=0 AND transfer_state = 5 GROUP BY mime_type, is_sticker ;
SELECT mime_type, is_sticker, SUM(total_bytes) FROM attachment WHERE ck_sync_state != 0 AND hide_attachment=0 AND transfer_state = 5 GROUP BY mime_type, is_sticker ;
UPDATE attachment set total_bytes = ? WHERE rowid = ?;
Updated attachment at rowID %@ to new filesize %@ with success %@
UPDATE attachment set transfer_state = ? WHERE rowid = ?;
Updated attachment at rowID %@ to new transfer_state %@ with success %@
SELECT filename,rowid,total_bytes,ck_sync_state,is_sticker,hide_attachment,transfer_state FROM attachment WHERE rowid > ? AND hide_attachment = 0 AND transfer_state = 5 AND filename != '' ORDER BY rowid ASC LIMIT 20;
For rowID %@ bytes %@ is not equal to new byte count %@ for file.
Error %@ occurred getting filesize for file at rowID %@
[ROWID: %@]File at has new calculated filesize %@ and old filesize %@ which are equal
Failed getting filesize at rowID %@ and path %@ because file does not exist.
File not on disk, lets switch it to tap to download rowID: %@, filename: %@.
No more attachments found to update
SELECT c.rowid FROM chat c WHERE (c.chat_identifier = ? AND c.service_name = ?)
 OR (c.chat_identifier = ? AND c.service_name = ?)
select a.filename, a.guid, a.is_sticker, a.created_date, a.transfer_state from attachment a join  (select ma.attachment_id as a_id, message_date as m_date from message_attachment_join ma join (select cm.message_id as message_id, cm.message_date as message_date from message m join chat_message_join cm where m.cache_has_attachments = 1 AND cm.chat_id AND cm.chat_id IN (%@) AND m.rowid = cm.message_id) as tmp where ma.message_id = tmp.message_id) as tmp2 where a.rowid = tmp2.a_id AND     a.hide_attachment == 0 ORDER BY tmp2.m_date ASC;
IMDAttachmentRecordCopyAttachmentGUIDsAndPathsForChatIdentifiersOnServicesQuery %@
SELECT * FROM attachment a INNER JOIN message_attachment_join ma ON   a.ROWID = ma.attachment_id INNER JOIN chat_message_join cm ON   ma.message_id = cm.message_id INNER JOIN message m ON   ma.message_id = m.ROWID WHERE   m.cache_has_attachments   AND m.expire_state != %d   AND cm.chat_id IN (%@)   AND a.hide_attachment == 0   AND a.ck_sync_state == 1   AND a.transfer_state == 0 ORDER BY m.date DESC limit %d
SELECT c.rowid FROM chat c INDEXED BY chat_idx_chat_identifier_service_name WHERE (c.chat_identifier = ? AND c.service_name = ?)
select count(*) from attachment a INDEXED BY attachment_idx_purged_attachments_v2 join (select ma.attachment_id as a_id, message_date as m_date from message_attachment_join ma INDEXED BY message_attachment_join_idx_attachment_id join (select cm.message_id as message_id, cm.message_date as message_date from message m INDEXED BY message_idx_cache_has_attachments join chat_message_join cm where m.cache_has_attachments = 1 AND cm.chat_id AND cm.chat_id IN (%@) AND m.rowid = cm.message_id) as tmp where ma.message_id = tmp.message_id) as tmp2 where a.rowid = tmp2.a_id AND a.hide_attachment == 0 AND (a.ck_sync_state == 1 OR a.ck_sync_state == 4) AND a.transfer_state == 0 ORDER BY tmp2.m_date ASC;
IMDAttachment
Copy purged attachments for chat %@ services %@ limit %@
"Database": Could not initialize query.
%@ assets that have been purged for chat %@ outQuery %@
Copy purged attachments count for chat %@ services %@
"Database": Skipping an attachment because of incomplete data.
"Database": Not removing attachments, we got a NULL or 0 length GUID [%@]
DELETE FROM attachment WHERE guid = ?;
IMDAttachmentRecordUpdateAttachmentGUIDWithGUID - kIMDAttachmentRecordGetAttachmentRowIDForGUID returned error %@
IMDAttachmentRecordUpdateAttachmentGUIDWithGUID - kIMDAttachmentRecordGetAttachmentRowIDForGUID returned zero results
Updating GUID for attachment at rowID %lld
UPDATE attachment set guid = ? WHERE ROWID = ?;
kIMDAttachmentRecordUpdateAttachmentGUIDWithGUID Success: %@
IMDAttachmentCopyRecordIDsToDeleteWithLimit is in IMDP with limit %lld
 select * from sync_deleted_attachments where LENGTH(recordID) > 0 limit ?;
"Database": Unable to select rows from Attachment Deleted Table: %@
IMDAttachmentCopyRecordIDsToDeleteWithLimit is in imagent with limit %lld
Returned from DB call after loading attachments to delete messages count %lu
DELETE FROM sync_deleted_attachments WHERE (recordID = ?
IMDAttachmentRecordDeleteTombStonedAttachmentsWithRecordIDs has no GUIDs to delete.
IMDAttachmentRecordClearDeleteTombStones
delete from sync_deleted_attachments;
IMDAttachmentRecordClearDeleteTombStones deleted pending sync table
Returned from DB call after clearing all tombstones
SELECT guid, total_bytes, filename, created_date FROM attachment WHERE transfer_state = 5 AND hide_attachment=0 %@ ORDER BY total_bytes DESC LIMIT ?;
SELECT guid, total_bytes, filename, created_date FROM attachment WHERE ck_sync_state != 1 AND transfer_state = 5 AND hide_attachment=0 %@ ORDER BY total_bytes DESC LIMIT ?;
SELECT guid, total_bytes, filename, created_date FROM attachment WHERE ck_sync_state = 1 AND transfer_state = 5 AND hide_attachment=0 %@ ORDER BY total_bytes DESC LIMIT ?;
AND is_sticker = 0 AND mime_type LIKE 'image/%' AND NOT mime_type = 'image/gif'
AND mime_type LIKE 'video/%'
AND (is_sticker = 1 OR mime_type = 'image/gif')
AND NOT (mime_type LIKE 'image/%' OR mime_type LIKE 'video/%' OR is_sticker = 1 OR mime_type = 'image/gif')
image/gif
image/
video/
"Database": TRIGGER: custom function is already executing -- this is not reentrant!
"Database": TRIGGER: Before deleting attachment, finding messageRowID for attachment rowID %d
SELECT message_id FROM message_attachment_join WHERE attachment_id = ? LIMIT 1
"Database": TRIGGER: Before deleting attachment, message row id: %lli
"Database": TRIGGER: Before deleting attachment, messageRecord: %@
"Database": TRIGGER: Before deleting attachment, we found attachment guid: %@
"Database": TRIGGER: Before deleting attachment, guid in message part: %@
"Database": TRIGGER: Before deleting attachment, was equal, deleting range
v40@?0@"NSNumber"8{_NSRange=QQ}16^B32
"Database": TRIGGER: Before deleting attachment,deleted messages for guid
"Database": TRIGGER: deferred deletion of messageGUID: %@
UPDATE message set attributedBody = ?, text = ? where guid = ?
"Database": TRIGGER: Before deleting attachment, updated attributedBody and text
"Database": TRIGGER: Before deleting attachment, no message record found
"Database": TRIGGER: Before deleting attachment, all done!
_IMDSMSRecordStoreCustomFunctionDeleteAttachment: wrong number of arguments
"Database": TRIGGER: Deleting attachment files based on path: %@, pathIsInStickerCache %@
"Database": Deleting this guid directory too: %@
"Database": Just deleting the original path: %@
"Database": Did not delete attachment at path %@
_IMDSMSRecordStoreCustomFunctionTrim: wrong number of arguments
_IMDSMSRecordStoreCustomFunctionTrim: sqlite3_value was NULL.
_IMDSMSRecordStoreCustomFunctionTrim: SQLite text of value[0] was NULL.
INSERT INTO message SELECT %@ from source.message WHERE date >= ?;
ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, sr_ck_sync_state, sr_ck_record_id, sr_ck_record_change_tag, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part 
newerThanDays
Tq,R,N,V_newerThanDays
INSERT INTO message SELECT %@ from source.message ORDER BY ROWID DESC LIMIT ?;
messageCount
Tq,R,N,V_messageCount
INSERT INTO chat SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, sr_server_change_token, sr_ck_sync_state, cloudkit_record_id, sr_cloudkit_record_id, last_addressed_sim_id, is_blackholed from source.chat WHERE ROWID IN (SELECT chat_id from source.chat_message_join where message_id IN (SELECT ROWID from message));
INSERT INTO chat_message_join SELECT * from source.chat_message_join WHERE message_id IN (SELECT ROWID from message);
INSERT INTO handle SELECT * from source.handle WHERE ROWID IN (SELECT handle_id from source.chat_handle_join where chat_id IN (select ROWID from chat));
INSERT INTO chat_handle_join SELECT * from source.chat_handle_join WHERE chat_id IN (SELECT ROWID from chat);
INSERT OR IGNORE INTO handle SELECT * from source.handle WHERE ROWID IN (SELECT handle_id from message);
INSERT OR IGNORE INTO handle SELECT * from source.handle WHERE ROWID IN (SELECT other_handle from message);
INSERT INTO attachment SELECT * from source.attachment WHERE ROWID IN (SELECT attachment_id from source.message_attachment_join where message_id IN (select ROWID from message));
UPDATE attachment SET transfer_state = 0; 
INSERT INTO message_attachment_join SELECT * from source.message_attachment_join WHERE attachment_id IN (SELECT ROWID from attachment);
Trimming database at: '%@'...
ATTACH '%@' AS source;
__kIMDSMSFailedToSendNotification
__kIMDSMSMarkAsReadCompletedNotification
IN (
? ) 
Aggregate
Submitting persistence event: %@
IMDSavedDeviceStateDidUpgradeKey
IMDSavedDeviceStateDidRestoreFromBackupKey
IMDSavedDeviceStateDidMigrateFromDifferentDeviceKey
IMDSavedDeviceStateDidRestoreFromCloudBackupKey
IMDSavedDeviceStateDidMigrateKey
IMDSavedDeviceStateBuildVersionKey
IMDSavedDeviceStateIsMigratingKey
IMDSavedDeviceStateDateKey
IMDSavedDeviceState
"Database": Set device state test user defaults domain to: %@
"Database": Saved device state: %@
"Database": Read stored device state: %@
"Database": Device state not set, return default version: %@
_IMDPersistenceClientQueue
IMDCNPersonAliasResolver
Error being called in a process that is not in IMDPersistenceAgent!
CNContactStore
Passed in nil email _fetchCNContactForEmail
Could not get predicate for alias %@
Requesting a CNContact from Contact Store for Alias %@ and Predicate %@
Error getting contact from Contact Store for alias %@ error %@
No contact for alias %@
CNRecord ID %@ for alias %@
Passed in empty set of aliases
Dispatching a contacts batch query with %lu aliases
batchFetchForAliases
Contacts batch fetch from Contact Store completed. Took %f seconds
No results obtained from the CN Fetchrequest. Error: %@
Contacts batch fetch from Contact Store FAILED with an exception %@.
_fetchAliasToCNIDMapForAliases
_fetchAliasToCNIDMapForAliases returning aliasIDMap
Generating aliasToIDMap completed. Used Batch Fetching: %@. Took %f seconds
Updating aliasToCNIDMap using Contact Change History events
Could not fetch Change History from CNContactStore error:%@
Refetching CNID for ALL Aliases.
_updateAliasToCNIDMap returning aliasIDMap
contactStore
T@"CNContactStore",&,N,V_contactStore
currentHistoryToken
T@"NSData",&,N,V_currentHistoryToken
aliasToCNIDMap
T@"NSMutableDictionary",&,N,V_aliasToCNIDMap
contactsEventhandler
T@"IMDContactStoreChangeHistoryEventsHandler",&,N,V_contactsEventhandler
CNContactEmailAddressesKey
CNContactPhoneNumbersKey
CNContactInstantMessageAddressesKey
CNContact
CNContactFormatter
CNContactFetchRequest
CNChangeHistoryFetchRequest
CNFavorites
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1125.19.3.1/IMCore/IMDPersistence/IMDCNPersonAliasResolver.m
void _IMDContactsApiInit()
_IMDContactsApiInit
kIMContactsContactEmailAddressesKey
kIMContactsContactPhoneNumbersKey
kIMContactsContactInstantMessageAddressesKey
Action: Save
Query: Is Full
Query: Schema Version
Action: Create Attachment
Query: Attachment Record ID for GUID
Query: Copy Attachment for GUID
Action: Delete Attachment
Action: Deleting Attachments older than a certain number of days
Query: Copy recent attachment filenames
Query: Delete attachment previews older than recent
Query: Copy media attachment filenames for Chat Identifiers
Query: Copy purged attachments for chat identifiers
Query: Copy purged attachments count for chat identifiers
Query: Copy sticker attachment filename and user info
Query: Does attachment with GUID exist
Query: Does sticker path have attachments
Action: Update Attachment
Action: Get contacts record id for aliases
Action: Get contacts record id and history token for aliases
Action: Async Get contacts record id and history token for aliases
Action: Create Handle
Action: Update Handle
Query: Copy Handle
Query: Is message visible to spotlight
Action: Unassociate Message from Attachment
Action: Associate Message from Attachment
Query: Copy Messages Between row IDs
Query: Copy Messages for GUIDs
Query: Copy Messages for associated GUID
Query: Copy Message for RowID
Query: Copy Last Received Message
Query: Copy a Limited Number of Last Received Messages
Query: Get Most Recent Message Date
Query: Copy Messages for RowIDs
Query: Copy new messages using rowIDs
Query: Copy Message for GUID
Query: Copy Last Read Message for Chat Identifier
Action: Delete Messages for GUIDs
Action: Delete Messages older than a certain number of days
Query: Copy Messages with Roomname
Query: Copy Messages with Chat Identifiers
Query: Copy a Limited Number of Messages Before and or After GUID with Chat Identifiers
Query: Copy Frequent Replies for Chat Identifiers
Query: Copy GUIDs for Messages with Chat Identifiers
Query: Copy message date and last addressed handle from chat with chat identfiers and last addressed handles
Query: Copy message date and last addressed labelID from chat with chat identfiers and last addressed labelIDs
Query: Update chat last addressed simID and handle for chats with the old last addressed simID
Action: Delete Messages with GUIDs on ChatIdentifiers
Query: Copy Messages with Handle on Service
Query: Copy Message Matching Body on Chat Identifiers
Query: Copy Message Matching Body with Handle
Query: Copy Messages with Handle and ReplaceID
Query: Copy undelivered 1-1 Messages
Query: Copy Expiring or Expired Messages
Query: Copy Unsent Unfailed Messages
Query: Copy Message Action Items for Original Message GUID
Query: Unread Message Count
Query: Unread Message Count for Chat GUID
Query: Unread Message Count for Row ID
Query: Last Failed Message ID
Query: Last Synced Message row ID
Query: Last Failed Message Date
Query: Message Row ID for GUID
Query: Max CMJ Message ID
Query: Messages Sequence Number
Action: Mark message as deduplicated
Action: Mark failed all unsent messages
Action: Delete Orphaned Messages
Query: Copy and mark as read matching chat guids prior to guid
Query: Copy all guids for unplayed messages for a chat guid
Query: Copy Unread Incoming Messages for chat
Query: Copy newest Unread Incoming Messages after Row ID
Query: Copy newest Failed Outgoing Messages after date
Query: Copy messages with Data Detected Results after Row ID
Query: Copy most recent usage of address
Action: Create Message
Query: Copy Chats from Message
Query: Copy Attachments from Message
Action: Set Handle on Message
Query: Copy Handle from Message
Query: Copy Other Handle from Message
Action: Update Message
Action: Insert Message Processing Task
Query: Select Message Processing Task with Limit
Action: Update Message Processing Task
Action: Delete all Complete Message Processing Task
Action: Create Chat
Query: Copy Handles from Chat
Query: Copy Messages from Chat with limit
Action: Set Chat is Archived
Action: Set Chat is Blackholed
Action: Add Handle to Chat
Action: Remove Handle from Chat
Action: Update Chat
Query: Copy all chats
Query: Copy all named chats
Query: Copy all active chats
Query: Copy all active chats progressively
Action: Add message with GUID to Spotlight
Query: Reindex the given messages
Query: Copy Chat for GUID
Query: Copy Chat for Message ID
Query: Copy Chats with Handle
Query: Copy Chats with Roomname
Query: Copy Newest chat for Group ID
Action: Delete Chat for GUID
Action: Associate Message with Chat
Action: Disassociate Message from Chat
Action: Copy Chat guids with unplayed audio messages
Action: Set Chat isFiltered
Action: Repair Duplicate Chats
Action: Anonymize Database
Action: Split DB by days
Action: Split DB by recent message count
Action: Copy array of associated message items from sender
Action: Mark attachment with Spotlight attributes
Action: Downgrade database
Query: Estimate space taken by attachments older than days
Query: Find largest conversations
Query: Find largest attachments
Query: Find all unread chats and count of unread messages in each
Query: Purge attachments in chat
Unknown
"Database": Skipping commit of a non-existent transaction in Downgraded database
"Database": Skipping revert of a non-existant transaction in Downgraded database.
"Database": Cloning and downgrading table '%@' into Downgraded Database
"Database": Downgrade: turning off foreign keys
"Database": Downgrade: attaching new (empty so far) downgraded database to the real database
"Database": Downgrade: Beginning transaction
"Database": Downgrade: Copying table: %@
"Database": Downgrade: Detaching database
"Database": Downgraded database SQL query '%@' got error: '%@'
"Database": Downgraded database SQL query ran ok: '%@'
"Database": Opening Downgraded database at: '%@'...
"Database": Closed Downgraded database at: '%@'...
"Database": Unable to insert row (guid:%@ taskFlag:%ld) into Message PTask Table: %@
"Database": Unable to select rows from Message PTask Table: %@
"Database": Unable to update row (guid:%@ taskFlag:%ld) for Message PTask Table: %@
"Database": Unable to delete completed task from Message PTask Table: %@
"Database": ASSERTION FAILED: Condition is unexpectedly true: %s in "%s" at line %d [%@]
"Database": ASSERTION FAILED: %s is unexpectedly nil in "%s" at line %d [%@]
"Database": We don't have a chat identifier to set as the thread identifier for chat dictionary %@
"Database": We don't have a message guid for message dictionary %@
"Database": SQL ERROR: %@
Database version is newer, but internal build allows this state (dbver %d, expected %d)
"Database": "Database": Database version is newer, but internal build allows this state (dbver %d, expected %d)
Unable to perform database migration to %d - NO MIGRATOR FOUND
"Database": "Database": Unable to perform database migration to %d - NO MIGRATOR FOUND
Migration from %d to %d failed with error: %@
Migrated from %d to %d ok in %f seconds
Unable to perform database migration from %d to %d
IMDSMSRecordStoreCopyAllChats
IMDSMSRecordStoreCopyAllNamedChats
IMDSMSRecordStoreCopyAllActiveChats
"Database": No chatIdentifiers or lastAddressedLabelIDsCount provided. No rows will be returned.
"Database": Unable to find last addressed lablID & date from chat identifiers: %@
"Database": No chatIdentifiers or lastAddressedHandles provided. No rows will be returned.
"Database": Unable to find last addressed handles & date from chat identifiers: %@
IMDChatRecordAssociateMessageWithGUIDToChatWithGUIDIfNeeded [ChatGUID: %@] [MessageGUID: %@]
IMDChatRecordDisassociateMessageWithGUIDFromChatWithGUIDIfNeeded [ChatGUID: %@] [MessageGUID: %@]
"Database": Unable to insert row (guid:%@ recordID: %@ timeStamp:%ld, error %@) into sync_deleted_chats Table
"Database": Unable to select rows from Message Deleted Messages Table: %@
"Database": ASSERTION FAILED: Conditions are unexpectedly equal: %s == %s in "%s" at line %d [%@]
"Database": Unable to update messages to new error (%@)
IMDChatRecordCopyChatGUIDsWithUnplayedAudioMessages
Failed to create table %@ with error %@
"Database": "Database": Failed to create table %@ with error %@
Created table (if needed) ok: %@
Failed to drop table %@ with error %@
"Database": "Database": Failed to drop table %@ with error %@
Dropped table (if needed) ok: %@
"Database": No handles or services specified. Or handleCount != serviceCount. No rows will be returned.
Setting IMDMessageRecord property %d of %d
New message record [%@] has ID [%lld]  [%@].
"Database": Attempted to get record identifier for NULL message record: %@
"Database": Attempted to get record identifier for NULL record: %@
"Database": NULL message passed to %s
"Database": NULL message passed when trying to get property: %ld
"Database": NULL message passed when trying to set property: %ld  (value:%d)
"Database": Remote set other handle not implemented
Trying to associate attachment [%lld] with message [%lld]
"Database": Error adding attachment join: %d (%s)
"Database": NULL dictionary passed to %s
"Database": NULL record passed to %s
_IMDMessageRecordCreate()
"Database": new IMDHandleRecordRef [%@] has id [%lld].
"Database": Attempted to get record identifier for NULL handle record: %@
"Database": NULL handle passed to %s
"Database": _IMDHandleRecordCreate()
Dropped trigger failed: %@: %@
Dropped trigger: %@
Create trigger failed: %@: %@
Created trigger ok: %@, trigger: %@
dropping trigger failed: %@: %@
dropped trigger ok: %@
Created trigger ok: %@ trigger %@
"Database": QuickSwitch about to downgrade database at path %@ to %@
"Database": Quickswitch Downgrade Sending XPC now...
Starting migration from V21 to V22.
Failed to delete trigger delete_attachment_files [SQLite result %d reason %s]
Failed to delete trigger delete_attachment_files [SQLite result %d]
Whoa, pardner, where is the V21_MIGRATION_GROUP_CHAT_MAP ?!
Whoa, pardner, where is the V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP ?!
[Database] ERROR: **** Failed ingesting legacy message with row ID: %d
"Database": "Database": [Database] ERROR: **** Failed ingesting legacy message with row ID: %d
Successful migration for legacy message [%d]
No message rows available to migrate, great success!!
Whoa pardner, we didn't drop the group to chat map table. C'est la vie.
Whoa pardner, we didn't drop the non-canonical group to handle map table. C'est la vie.
Asking DB to analyze.
Migration ended with result %d
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ORPHAN: Unable to find/create a chat for handle[%@] and roomname[%@] for legacy messageID[%d]. Skipping this message.
[Database] ERROR: Unable to migrate message row %d with error: %d
"Database": "Database": [Database] ERROR: Unable to migrate message row %d with error: %d
Unable to update flags row %d with error: %d
[DATABASE] There don't appear to be any participants in this chat, so it will NOT be migrated. RowID: %lld Handle %@ Roomname %@
"Database": "Database": [DATABASE] There don't appear to be any participants in this chat, so it will NOT be migrated. RowID: %lld Handle %@ Roomname %@
Unable to migrate chat row %lld with error: %d
Unable to update chatID[%lld]'s room_name.
Unable to update chatID[%lld] with guid[%@]
[Database] ERROR: Could not create chat from handle[%@] and roomname[%@].
"Database": "Database": [Database] ERROR: Could not create chat from handle[%@] and roomname[%@].
ORPHAN: Unable to find a legacy madrid chat record for handle[%@] and roomname[%@] with sqlite status (%d). This usually means that a chat was deleted but the messages it contained weren't. Failing chat creation.
** You attempted to bind HandleID [%lld] to ChatID [%lld]. One of these values is bogus.
[Database] ERROR: Failed to join Handle [%lld] to Chat [%lld]. SQLite error: %d
"Database": "Database": [Database] ERROR: Failed to join Handle [%lld] to Chat [%lld]. SQLite error: %d
[Database] ERROR: Unable to bind chat id[%lld] to message id[%lld]: %d
"Database": "Database": [Database] ERROR: Unable to bind chat id[%lld] to message id[%lld]: %d
AWOL handle for uncanonicalizedID [%@]  canonicalizedID [%@] Service [%@] Country [%@]
Got an invalid IDs uncanon: (%@) canon: (%@) in %s.
Got an invalid service (%@) in %s.
Got an invalid identifier (%@) (%@) in %s.
[Database] ERROR: Unable to create handle row with uncanonid[%@] canonid[%@] service[%@] country[%@]
"Database": "Database": [Database] ERROR: Unable to create handle row with uncanonid[%@] canonid[%@] service[%@] country[%@]
Invalid handleID[%lld] or messageID[%lld] passed for binding
Unable to update handle id on message row %lld with error: %d
Invalid legacy guid provided in %s - this is bad but non-fatal.
"Database": Invalid legacy guid provided in %s - this is bad but non-fatal.
Unable to find legacy attachment for guid[%@]. Not fatal, but bailing.
Fatal error binding attachmentID[%lld - %@] to messageID[%lld]
Unable to migrate attachment row %lld with error: %d
Unable to bind attachmentID[%lld] to messageID[%lld]: %d
ORPHAN: Could not find an appropriate chat to use for messageID[%d]. Skipping this message.
[Database] ERROR: Failed to create new message row. SQLite error: %d
"Database": "Database": [Database] ERROR: Failed to create new message row. SQLite error: %d
This message is empty, and we should NOT keep it.
This message lacks a handle, and we should NOT keep it.
Message [%lld] Legacy [%d] was problematic, thus we skip it.
Problems deleting message [%lld], SQLite error: %d
Unable to delete message.
[Database] Bailing early on a problematic message.
"Database": "Database": [Database] Bailing early on a problematic message.
[Database] ORPHAN: Failed to update message. SQLite error: %d
"Database": "Database": [Database] ORPHAN: Failed to update message. SQLite error: %d
[Database] ORPHAN: Failed to insert message. SQLite error was: %d
"Database": "Database": [Database] ORPHAN: Failed to insert message. SQLite error was: %d
[Database] ****** Result from select query: %d
"Database": "Database": [Database] ****** Result from select query: %d
[Database] ERROR: * * * * * Holy Smokes, the group row id is bogus! * * * * * *
"Database": "Database": [Database] ERROR: * * * * * Holy Smokes, the group row id is bogus! * * * * * *
ORPHAN: Unable to find handles for groupID[%d]. This means we have message rows without a matching group. Failing the chat lookup.
[Database] ERROR: Got a NULL identifier for handleID[%lld]. Something is seriously wrong.
"Database": "Database": [Database] ERROR: Got a NULL identifier for handleID[%lld]. Something is seriously wrong.
[Database] ERROR: Was slinging around an invalid handleID for messageID[%d] to create chat. Something is wrong.
"Database": "Database": [Database] ERROR: Was slinging around an invalid handleID for messageID[%d] to create chat. Something is wrong.
[Database] ERROR: Got a NULL handleID for messageID[%d] to create chat. Something is wrong.
"Database": "Database": [Database] ERROR: Got a NULL handleID for messageID[%d] to create chat. Something is wrong.
[Database] ERROR: Failed to create chat record. SQLite error: %d
"Database": "Database": [Database] ERROR: Failed to create chat record. SQLite error: %d
Ugh, the address '%@' wouldn't canonicalize.
MsgAddress '%@' was null, we won't even try to canonicalize it.
Got an invalid rowid looking for a handle mapped to group id: %lld
[Database] ERROR: You tried to join handle [%lld] to group [%lld] with an invalid row id.
"Database": "Database": [Database] ERROR: You tried to join handle [%lld] to group [%lld] with an invalid row id.
[Database] ERROR: Failed to asscociate handle [%lld] to group [%lld] with sqlite result: %d.
"Database": "Database": [Database] ERROR: Failed to asscociate handle [%lld] to group [%lld] with sqlite result: %d.
Got an invalid rowid looking for a chat mapped to group id: %lld
[Database] ERROR: You tried to join chat [%lld] to group [%lld] with an invalid row id.
"Database": "Database": [Database] ERROR: You tried to join chat [%lld] to group [%lld] with an invalid row id.
[Database] ERROR: Failed to Asscociated chat [%lld] for group [%lld] (isBroadcast[%d]) with Sqlite result: %d.
"Database": "Database": [Database] ERROR: Failed to Asscociated chat [%lld] for group [%lld] (isBroadcast[%d]) with Sqlite result: %d.
[Database] ERROR: Unable to update placeholder property on invalid chatID
"Database": "Database": [Database] ERROR: Unable to update placeholder property on invalid chatID
[Database] ERROR: Unable to set properties for chat[%lld]: %d
"Database": "Database": [Database] ERROR: Unable to set properties for chat[%lld]: %d
[Database] ORPHAN: Failed to create new attachment record. SQLite error: %d.
"Database": "Database": [Database] ORPHAN: Failed to create new attachment record. SQLite error: %d.
[Database] ERROR: Failed joining new attachment to message with SQLite result: %d
"Database": "Database": [Database] ERROR: Failed joining new attachment to message with SQLite result: %d
[Database] ERROR: Failed to create directory [%@]: %@
"Database": "Database": [Database] ERROR: Failed to create directory [%@]: %@
[Database] ERROR: Failed to write piece data to FS.
"Database": "Database": [Database] ERROR: Failed to write piece data to FS.
[Database] ERROR: Failed updating the filename on the new attachment record with SQLite result: %d
"Database": "Database": [Database] ERROR: Failed updating the filename on the new attachment record with SQLite result: %d
"Database": Starting new query with pending error: : %@
"Database": reverting uncommitted transation with error: %@
"Database": committing uncommitted transation
"Database": ASSERTION FAILED: %s is unexpectedly NOT nil in "%s" at line %d [%@]
_IMDChatRecordSetProperty [%d of %d]
"Database": Attempted to get identifier for NULL chat record: %@
"Database": NULL chat passed to %s
Trying to associate message [%lld] with chat [%lld]
SQLite returned %d from IMDChatRecordAddMessageIfNeeded
Finished remove message [%@] from chat [%@], updating the spotlight index for this chat.
Trying to associate handle [%lld] with chat [%lld]
SQLite returned %d from IMDChatRecordAddHandle
SQLite returned %d from IMDChatRecordRemoveHandle
IMDChatRecordBulkUpdateChat %@
_IMDChatRecordCreate()
Got record in _IMDChatRecordCreateFromRecordIDWithLock (%lld) : %@
"Database": Sqlite3 Error: %@
"Database": Unable to create record for attachment.
"Database": NULL attachment passed to %s
"Database": _IMDAttachmentRecordCreate()
"Database": Downgrade: Opening new coral database
"Database": Downgrade: Creating Tables
"Database": Downgrade: Creating Indexes
"Database": Downgrade: Committing phase 1
"Database": Downgrade: Beginning to copy tables
"Database": Downgrade: Creating triggers
"Database": Downgrade: Updating Version
"Database": Downgrade: Committing phase 2
"Database": Downgrade completed ok! :-D
"Database": Unable to perform query %@. Error %d
"Database": %s called, but not during import, ignoring
"Database": %s called for chat: %@, but not during import, ignoring
"Database": Failed to add handle: %lld to chat: %lld
"Database": Failed to create new chat for guid: %@
"Database": Failed to create message for guid: %@
"Database": No chat found for guid: %@   failing message import for GUID: %@
"Database": MessageImport - IMDImportAttachmentWithPath - empty guid
"Database": Unable to create directories for %@ when saving attachment %@
"Database": MessageImport - couldn't link/copy attachment from %@ to %@ - %@
"Database": Could not write attachmentData to path %@
"Database": Saving database.
"Database": Destroying database.
"Database": Closed database.
"Database": Create tables...
"Database": Setting page size.
"Database": Enabling WAL journal mode.
"Database": Enabling Foreign Key support.
"Database": Registering external functions.
"Database": Performing a pre-checkpoint vacuum.
"Database": Performing Analyze to optimize the database
"Database": Performing a WAL checkpoint.
"Database": Database Clean up took: %f seconds
"Database": No valid database handle, cannot perform a clean
"Database": Creating triggers for %p after db init failed: %@
The current SMS database is v%d.  The current schema version is v%d. Can be migrated: %@
"Database": "Database": The current SMS database is v%d.  The current schema version is v%d. Can be migrated: %@
The current SMS database has a NEWER version (%d) than expected (%d), internal build allows newer DB? %@
"Database": "Database": The current SMS database has a NEWER version (%d) than expected (%d), internal build allows newer DB? %@
Beginning migration.  The SMS db is currently at v%d, upgrading to v%d.
"Database": "Database": Beginning migration.  The SMS db is currently at v%d, upgrading to v%d.
Initial Integrity checked success
Message database migration passed post migrate integrity check
"Database": "Database": Message database migration passed post migrate integrity check
Message database migration failed post migrate integrity check
"Database": "Database": Message database migration failed post migrate integrity check
Migration failed, made it to version: %d: error: %@
"Database": "Database": Migration failed, made it to version: %d: error: %@
Message database migration failed - Database integrity check failed
"Database": "Database": Message database migration failed - Database integrity check failed
Message's DB migration took %f seconds.
"Database": "Database": Message's DB migration took %f seconds.
Reindexing the DB worked.
Database Reindexing the DB failed with SQLite result: %d
"Database": "Database": Database Reindexing the DB failed with SQLite result: %d
Vacuuming DB success
Database Vacuuming failed with SQLite result: %d
"Database": "Database": Database Vacuuming failed with SQLite result: %d
Post Vacuuming integrity check success
Database Post Vacuuming integrity checked failed failed
"Database": "Database": Database Post Vacuuming integrity checked failed failed
Integrity checked success
Found column %@ on %@, no need to add it
Adding column %@ to %@ succeeded: %@
Create index failed: %@: %@
Created index ok: %@
Dropped index failed: %@: %@
Dropped index: %@
Dropping unknown index failed: %@: %@
Dropped unknown index: %@
"Database": Found %ld messages guids to remove from spotlight
"Database": Found 0 messages guids to remove from spotlight
"Database": __syncXPCIMDMessageStoreSendXPCMessage got a bogus message to send...bailing!
"Database": __syncXPCIMDMessageStoreSendXPCMessage: You should not be hitting the database in a unit test. Please check your dependencies
"Database": __syncXPCIMDMessageStoreSendXPCMessage has failed %lu time(s)!
"Database": __syncXPCIMDMessageStoreSendXPCMessage failed to copy the xpc_connection_t!
"Database": __syncXPCIMDMessageStoreSendXPCMessage failed several consecutive times - sleeping for 1+ the launchd throttle time.
"Database": __syncXPCIMDMessageStoreSendXPCMessage failed too many times...bailing!
Updating madrid indices.
Nuking bogus madrid message indices.
%@ SQLiteResult: %d SQLite Message: %s
"Database": "Database": %@ SQLiteResult: %d SQLite Message: %s
No migration block to execute!
"Database": "Database": No migration block to execute!
Create tables...
Table for handle was created successfully.
Failed to create table for handle. SQLiteError: %d
Migration unsupported.  The SMS db is currently at v%d, cannot upgrade to v%d.
"Database": "Database": Migration unsupported.  The SMS db is currently at v%d, cannot upgrade to v%d.
Updating DB to sort by ROWID instead of date.
Updating DB to support madrid.
Updating DB from version 12 to current.
Updating DB from version 13 to current.
Updating DB from version 14 to current.
Adding index for group_id on group_member
Adding support for Chats and Participants.
Ensuring sanity of is_madrid column.
Cleaning message indices for iMessage.
Adding column for iMessage Account GUID
Moving old tables to *_legacy and adding tables for the new schema.
The is_archived column already exists on chat, skipping this step.
Fixing missing text in group field
The was_data_detected column already exists on message, skipping this step.
SQLite result was %d
The last_addressed_handle column already exists on chat, skipping this step.
The was_deduplicated column already exists on message, skipping this step.
Fixing busted chat identifiers for group chats
Adding attachment is_outgoing column
The is_outgoing column already exists on attachment, skipping this step.
Fixing up uncanonicalized identifiers that had previously been incorrectly treated as canonicalized.
Fixing up uncanonicalized handle identifiers that failed to migrate due to conflicts.
Adding attachment user_info column
The user_info column already exists on attachment, skipping this step.
Adding attachment transfer_name column
Adding chat display_name column
The display_name column already exists on chat, skipping this step.
Adding attachment total_bytes column
The transfer_name column already exists on attachment, skipping this step.
Purging orphaned messages
Adding message is_audio_message, is_played, and date_played column
The is_audio_message, is_played, and date_played columns already exist on message, skipping this step.
Purging orphaned messages - again
Adding message item_type, other_handle, group_title, group_action_type, share_status, share_direction
The item_type, other_handle, group_title, group_action_type, share_status, share_direction columns already exist on message, skipping this step.
The group_id columns already exist on chat, skipping this step.
Adding message is_expirable, expire_state, and message_action_type column
The is_expirable, expire_state, and message_action_type columns already exist on message, skipping this step.
Adding message message_source column
The message_source column already exists on message, skipping this step.
Migration failed, made it to version: %d
"Database": "Database": Migration failed, made it to version: %d
Join table for Chat <--> Message was created successfully.
Failed to create join table for Chat <--> Message. SQLiteError: %d
Join table for Chat <--> Handle was created successfully.
Failed to create join table for Chat <--> Handle. SQLiteError: %d
Join table for Message <--> Attachment was created successfully.
Failed to create join table for Message <--> Attachment. SQLiteError: %d
IMDMessageRecordUnassociateMessageWithGUIDFromAttachmentWithGUID [MessageGUID: %@] [AttachmentGUID: %@
"Database": Orphaned messages cleanup complete
IMDMessageRecordAssociateMessageWithGUIDToAttachmentWithGUID [MessageGUID: %@] [AttachmentGUID: %@
IMDMessageRecordCopyMessagesForAssociatedGUID [%@]
IMDMessageRecordCopyMessagesForGUIDs [%@]
IMDMessageRecordCopyGUID [%@]
IMDMessageRecordCopyLastReadMessageForChatGUID [%@]
results from last received: %@
"Database": IMDMessageRecordCopyLastReceivedMessageLimit with limit %lld
"Database": IMDMessageRecordCopyLastReceivedMessageLimit syncXPC
IMDMessageRecordCopyMessageForRowID [%lld]
IMDMessageRecordCopyMessageForGUID [%@]
IMDMessageRecordDeleteMessagesForGUIDs %@
IMDSelectMessagesForDeletionAfterDaysWithQuery %lld
"Database": IMDMessageRecordDeleteMessagesOlderThanDays %lld
"Database": IMDMessageRecordDeleteMessagesOlderThanDays interval is %f
"Database": No roomname or service specified. No rows will be returned.
"Database": history query got %lu rows
"Database": sqlite query timing: %@
"Database": history query: IMDP client got at least one message: %@
"Database": IMDP client got null array_result back: %@
"Database": IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID No handles or services specified for loading a limited number of messages up to guid. No rows will be returned
"Database": IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID We have a NULL messageGUID, early returning ****--We should have not gotten to this point if we had a null messageGUID, please file a radar--****
"Database": IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID with ids: %@ services: %@ messageGUID: %@ numberOfMessagesBefore: %lld numberOfMessagesAfter: %lld threadIdentifier: %@
"Database": Paged history query got %lu rows
"Database": Paged history query got %lu rows for second load
"Database": IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID IMDP client got null array_result back: %@
"Database": No handles or services specified. Or handleCount != serviceCount. Or guidCount == 0. No rows will be returned.
"Database": Deleted %ld messages in %f seconds on %ld chats and %ld services
"Database": No handle or service specified. No rows will be returned.
IMDMessageRecordCopyUndeliveredOneToOneMadridMessages
IMDMessageRecordCopyExpiredOrExpiringiMessages
IMDMessageRecordCopyUnsentUnfailedMessages
IMDMessageRecordCopyMessageActionItemsForOriginalMessageGUID [%@]
"Database": Can't determine unread count when GUID is NULL or empty.
"Database": Can't determine unplayed audio messages GUID is NULL or empty.
Marking all unsent and failed messages as sent.
Row ID is %lld for message with guid [%@]
 enableTelemetry=YES 
MarkAsRead-Database
MarkAsRead-XPC+Database
IMDMessageRecordCopyMessagesBetweenRowIDs [%lld:%lld]
"Database": The RowID is out of bounds.  We were asked for rows after [%lld] which exceeds the current sequence number [%lld]
"Database": Final adjusted row ID: %lld
"Database": The date is out of bounds.  We were asked for rows after date: [%lld] which exceeds the most recent message [%lld]
IMDMessageRecordCopyMessagesDataDetectionResults limit: %lld  rowID: %lld
"Database": No addresses provided to IMDMessageRecordCopyMostRecentUseageOfAddresses().
"Database": No addresses to lookup, no results for you.
"Database": Matching addresses (in order) are %@
"Database": Found %ld associated messages for messageGUID: %@, forSender: %@
"Database": IMDMessageRecordCalculateLocalCloudKitStatistics failed with error: %@
"Database": Calculated sync stats in %f seconds. All Records: %lld of %lld, %lld remaining. Messages : %lld of %lld, %lld remaining. Chats : %lld of %lld, %lld remaining. Attachments : %lld of %lld, %lld remaining.
"Database": Expected dictionary of cloudkit stats is nil 2
"Database": IMDMessageRecordCalculateLocalCloudKitStatistics loaded stats: %@
"Database": _IMDMessageRecordSetSyncCountOnTable got error: %@
"Database": Write cloudkit sync counts: %@
"Database": setting new stats: messageSyncCount: %lld, chatSyncCount: %lld, attachmentCount: %lld
"Database": new stats: %@
"Database": We don't have a guid to find messages with this reply to guid
IMDMessageRecordCopyAllUnplayedMessageGUIDsForChatGUID
"Database": There appears to be more than one attachment with GUID [%@]
"Database": Could not initialize query.
"Database": Skipping an attachment because of incomplete data.
"Database": Not removing attachments, we got a NULL or 0 length GUID [%@]
"Database": Unable to select rows from Attachment Deleted Table: %@
"Database": TRIGGER: custom function is already executing -- this is not reentrant!
"Database": TRIGGER: Before deleting attachment, finding messageRowID for attachment rowID %d
"Database": TRIGGER: Before deleting attachment, message row id: %lli
"Database": TRIGGER: Before deleting attachment, messageRecord: %@
"Database": TRIGGER: Before deleting attachment, we found attachment guid: %@
"Database": TRIGGER: Before deleting attachment, guid in message part: %@
"Database": TRIGGER: Before deleting attachment, was equal, deleting range
"Database": TRIGGER: Before deleting attachment,deleted messages for guid
"Database": TRIGGER: deferred deletion of messageGUID: %@
"Database": TRIGGER: Before deleting attachment, updated attributedBody and text
"Database": TRIGGER: Before deleting attachment, no message record found
"Database": TRIGGER: Before deleting attachment, all done!
"Database": TRIGGER: Deleting attachment files based on path: %@, pathIsInStickerCache %@
"Database": Deleting this guid directory too: %@
"Database": Just deleting the original path: %@
"Database": Did not delete attachment at path %@
"Database": Set device state test user defaults domain to: %@
"Database": Saved device state: %@
"Database": Read stored device state: %@
"Database": Device state not set, return default version: %@
IMDSuggestions
SGMessagesSuggestionsServiceDelegate
IMDDatabaseDowngradeHelper
Testing
IMDNotificationsController
IMDPersistence
IMDCNAliasResolver
IMAbstractDatabaseArchiver
IMDCoreSpotlightBaseIndexer
IMDCoreSpotlightIndexer
NSObject
IMDCoreSpotlightRecipientIndexer
IMDCoreSpotlightMessageBodyIndexer
IMDCoreSpotlightMessageSubjectIndexer
IMDCoreSpotlightMessageMetadataIndexer
IMDCoreSpotlightMessageBalloonPluginIndexer
IMDCoreSpotlightMessageDataDetectorsIndexer
IMDCoreSpotlightMessageAttachmentIndexer
IMDCoreSpotlightChatParticipant
IMDSqlQuery
IMDSqlSelectQuery
IMDPersistentAttachmentController
IMDatabaseAnonymizer
IMDTaskProgress
IMDCoreSpotlightDispatchObject
IMDCoreSpotlightContactCache
IMDCoreSpotlightManager
IMDDonationManager
IMDWhitetailToCoralDowngrader
IMDWhitetailToCoralDowngradeHelper
IMDAbstractDatabaseDowngrader
IMDMessageAutomaticHistoryDeletion
IMTrimDatabaseToDays
IMTrimDatabaseToMessageCount
IMAbstractDatabaseTrimmer
IMDCNPersonAliasResolver
init
serviceForMessages
dealloc
suggestionsFromMessage:options:completionHandler:
suggestionsService:needsContextForConversationIdentifier:numberOfMessagesNeeded:
sgService
setSgService:
_sgService
stringWithFormat:
copy
UTF8String
errorFromResult:query:
countByEnumeratingWithState:objects:count:
runSimpleQuery:resultBlock:
createTablesSQL
runArrayOfQueries:resultBlock:
createIndexesSQL
createTriggersSQL
string
length
objectForKeyedSubscript:
appendString:
appendFormat:
path
tableNames
cloneTableContents:withOperation:resultBlock:
localizedDescription
initWithPath:tableNames:createTablesSQL:createIndexesSQL:createTriggersSQL:downgradesToVersion:
createTables:
createIndexes:
createTriggers:
isOpen
beginTransaction:
commitTransaction:
revertTransaction:
writeDatabaseVersion:resultBlock:
importDataFromWhitetailDatabaseWithSqlOperation:resultBlock:
open:
close:
database
setPath:
downgradesToVersion
setTableNames:
setCreateIndexesSQL:
setCreateTablesSQL:
setCreateTriggersSQL:
_inTransaction
_database
_path
_downgradesToVersion
_tableNames
_createIndexesSQL
_createTablesSQL
_createTriggersSQL
_readIntegerFromQuery:resultBlock:
readDatabaseVersion:
readRowCountForTable:resultBlock:
addObject:
setObject:forKeyedSubscript:
numberWithLongLong:
initWithDouble:
initWithUnsignedLongLong:
initWithCString:encoding:
_setupFirstLoad
_setUpNotificationCenter
_setupBusinessNameManager
_setupMeContactAndTokens
setSuggestionsService:
sharedInstance
setBusinessNameManager:
initWithBundleIdentifier:
_makeNotificationCategories
setNotificationCategories:
arrayWithObjects:count:
categoryWithIdentifier:actions:intentIdentifiers:options:
madridCategoryWithIdentifier:actions:
madridGroupCategoryWithIdentifier:actions:
SMSCategoryWithIdentifier:actions:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
setMeTokens:
setMeContact:
localizedStringForKey:value:table:
categoryWithIdentifier:actions:intentIdentifiers:hiddenPreviewsBodyPlaceholder:categorySummaryFormat:options:
_hasMigratedPreferences
_legacyDatePreference
integerValue
_legacyRowIDPreference
_legacyDateForMessageWithRowIDPreference:
numberWithInteger:
_setLastPostedDateFromMigration:
_setHasMigratedPreferenceTrue
_migrateLastedPostedPreferencesIfNeeded
longLongValue
_storeLastAlertedMessageDate:
setLastAlertedMessageDate:
_storeLastAlertedFailedMessageDate:
setLastAlertedFailedMessageDate:
mentionsEnabled
__im_dateWithNanosecondTimeIntervalSinceReferenceDate:
compare:
sortedArrayUsingComparator:
_chatDictionaryForMessageRecord:
predicateWithBlock:
filteredArrayUsingPredicate:
_messages:newerThanDate:
_messagesSortedByDate:
count
objectAtIndex:
_generateNotificationRequestForMessageRecord:isUrgentMessage:isCarouselUITriggered:isMostActive:shouldAdvanceLastAlertedMessageDate:
identifier
content
categoryIdentifier
notificationCenter
advanceLastAlertedMessageDate:
addNotificationRequest:withCompletionHandler:
_shouldPostNotificationRequest:withCompletionHandler:
_generateNotificationRequestForDeliveryError:isCarouselUITriggered:
advanceLastAlertedFailedMessageDate:
enumerateObjectsWithOptions:usingBlock:
objectForKey:
lastAlertedMessageDate
lastAlertedFailedMessageDate
_registerUserNotificationsForFailedDeliveryMessageRecords:isCarouselUITriggered:
_registerUserNotificationsForMessageRecords:newerThanDate:areUrgentMessages:isCarouselUITriggered:isMostActiveDevice:
_postNotifications
cancelPreviousPerformRequestsWithTarget:selector:object:
__postNotificationsIsMostActiveDevice:
_isMostActiveDeviceWithCompletionBlock:
setWithArray:
setActiveAccountAliases:
performSelector:withObject:afterDelay:
removeDeliveredNotificationsWithIdentifiers:
removeAllDeliveredNotifications
postNotificationsWithContext:
setTitle:
setBody:
setCategoryIdentifier:
setThreadIdentifier:
userInfo
mutableCopy
setUserInfo:
triggerWithTimeInterval:repeats:
requestWithIdentifier:content:trigger:
defaultsSharedInstance
getValueFromDomain:forKey:
boolValue
setDate:
isEqualToString:
_messageIsBusiness:
_amIMentionedInMessage:
__im_URLForChatIdentifier:entryBody:messageGUID:
unsignedLongLongValue
_isRaiseGestureEnabled
setDefaultActionURL:
date
threadIdentifier
localizedStringWithFormat:
addCharactersInString:
characterAtIndex:
characterIsMember:
stringByReplacingOccurrencesOfString:withString:
substringToIndex:
_addressForHandle:
array
_displayNameForHandle:andContact:
stringByAppendingString:
setSubtitle:
setObject:forKey:
_displayNameForBusinessChatAddress:
soundWithAlertType:
valueForKey:
vibration
setVibrationIdentifier:
sound
setToneIdentifier:
ignoreMute
setShouldIgnoreRingerSwitch:
setShouldIgnoreDoNotDisturb:
setAlertTopic:
setSound:
setShouldSuppressScreenLightUp:
shouldIgnoreDoNotDisturb
shouldSuppressScreenLightUp
containsString:
body
unsignedIntegerValue
numberWithUnsignedLong:
numberWithUnsignedInteger:
dictionary
fileURLWithPath:isDirectory:
dataWithContentsOfURL:
contactsWithData:error:
_truncateNameIfNeeded:
_previewFileURLForTransferURL:utiType:
dictionaryWithObjects:forKeys:count:
attachmentWithIdentifier:URL:options:error:
firstNameForCNContact:
setAttachments:
validateAlertCount:
setRealertCount:
reminderAlertCount
_chatHasDNDSet:
_handleIsSpokenMessageWhitelisted:chat:message:
setType:
setDispatchQueue:
invalidate
_proceedMostActiveDevice:isBlockCalled:completionHandler:
setCompletionHandler:
start
_shouldUseOriginalURLForUTIType:
defaultManager
fileExistsAtPath:
lastPathComponent
stringByAppendingPathComponent:
copyItemAtURL:toURL:error:
_getMessagesSpokenWhitelistLevel:
currentCalendar
isDateInToday:
isDateInYesterday:
_messageIsFromKnownContact:
_messageIsFromFavorite:
setValue:forDomain:forKey:
_lastTwoMessagesForChat:
isCNContactFavorited:
substringWithRange:
_stripFZIDPrefix
_IMDCoreSpotlightCNContactForAddress:
displayNameForContact:
_uncanonicalizedAddressForHandle:
im_stripCategoryLabel
_addressBookNameForAddress:orContact:
_countryCodeForHandle:
_formattedDisplayStringForAddress:countryCode:
lowercaseString
_suggestedDisplayNameForAddress:
_nicknameDisplayNameForID:
_displayNameForHandle:andContact:suggestionProvider:
serviceForContacts
_nicknameInfoForAddress:
initWithDictionaryRepresentation:
suggestionsService
_setUpSuggestionService
firstObject
namesForDetail:limitTo:prependMaybe:withCompletion:
lock
unlock
businessNameForUID:updateHandler:
businessNameManager
_displayNameForBusinessChatAddress:businessNameManager:
getBoolFromDomain:forKey:
IMMessagesFilteringSettingForPreferedSubscription
IMDeviceRegionIsEligibleToBeForcedIntoFilteringUnknownSender
_filteringSettingConfirmed
_deviceIsElgibileToBeForcedIntoFilteringUnknownSenders
_isUnknownSenderFilteringOn
_isSpamFilteringOn
intValue
_notificationIsFromAFilteredSender:messageDictionary:
meTokens
activeAccountAliases
setByAddingObjectsFromSet:
allTokens
areMyTokens:inMessage:
containsObject:
enumerateAttribute:inRange:options:usingBlock:
_overrideDNDForMessagesAddressingMe
_haveMigrated
request
getDeliveredNotificationsWithCompletionHandler:
allowedByScreenTime
applicationCurrentlyLimited
shouldBeAllowedByScreenTimeWhenLimited
initSynchronouslyWithBundleIdentifier:
allowableByContactsHandles:
screenTimeNotificationOptionsForContext:
_messageDictionaryForMessageRecord:copyThreadOriginator:
_messageShouldBeSilentlyDeliveredForBusinessChat:
screenTimeNotificationOptionsForChatDictionary:
setShouldIgnoreDowntime:
shouldIgnoreDowntime
_shouldOverrideChatSilencingBecauseImMentioned:
_messageShouldBeSpoken:chatDictionary:isMostActive:
_shouldPostNotificationForChat:messageDictionary:
_populateBasicNotificationIdentifyingContent:chatDictionary:messageDictionary:isCarouselUITriggered:
_populateBodyForNotificationContent:messageDictionary:
_populateTitleForNotificationContent:chatDictionary:messageDictionary:
_populateSubtitleForNotificationContent:chatDictionary:messageDictionary:
_populateSoundAndDisplayActivationForNotificationContent:chatDictionary:messageDictionary:isMostActive:
_populateIgnoresDoNotDisturb:messageDictionary:isUrgentMessage:
_populateAttachmentsForNotificationContent:messageDictionary:messageRecord:
_populateUserInfoOnContentForWatch:messageDictionary:chatDictionary:isCarouselUITriggered:
_populateNotificationCategoryContent:messageDictionary:chatDictionary:
_populateUserInfoForMessageContent:messageDictionary:messageIsAddressedToMe:
_populateRealertCountForNotificationContent:
requestWithIdentifier:content:trigger:destinations:
_messageDictionaryForMessageRecord:
longValue
_populateBodyAndTitleForSendReceivedAsJunkNotificationContent:messageDictionary:
_populateBodyAndTitleForSendFailedNotificationContent:messageDictionary:
initWithCapacity:
numberWithBool:
valueWithRange:
_setContactInMessageDictionary:messageDictionary:
_chatHasDNDSetBasedOnChatGUID:chatIdentifier:groupID:handles:lastAddressedHandleString:style:
_lastMessageTimeForChat:
__im_nanosecondTimeInterval
_chatHasDNDSetBasedOnDNDIdentifier:
_groupHashForHandles:lastAddressedHandle:
__imArrayByApplyingBlock:
arrayByAddingObject:
retractNotificationsForReadMessages:
repostNotificationsFromFirstUnlockWithContext:
postUrgentNotificationForMessages:withContext:
postFirstUnlockMessage:forIdentifier:
_previewFileURLForTransferURL:
_getSpokenMessageWhitelistLevelVersion
_setSpokenMessageWhitelistLevelVersion:
_setMessagesSpokenWhitelistLevelInPreferences:
setNotificationCenter:
incomingMessageNotificationCategory
setIncomingMessageNotificationCategory:
incomingFilesNotificationCategory
setIncomingFilesNotificationCategory:
meContact
_lastAlertedMessageDate
_lastAlertedFailedMessageDate
_notificationCenter
_incomingMessageNotificationCategory
_incomingFilesNotificationCategory
_businessNameManager
_meContact
_meTokens
_activeAccountAliases
_suggestionsService
databaseLog
_updateAliasToCNIDMap:withHistoryToken:
currentHistoryToken
dictionaryWithObjectsAndKeys:
_fetchAliasToCNIDMapForAliases:
isFavoritedContact:
errorWithDomain:code:userInfo:
isInternalInstall
logAtLevel:type:category:format:
timeIntervalSinceReferenceDate
loadAllChatsProgressivelyEnabled
objectAtIndexedSubscript:
initWithObjectsAndKeys:
removeItemAtPath:error:
stringWithUTF8String:
stringWithCString:encoding:
rangeOfString:
currentHandler
handleFailureInFunction:file:lineNumber:description:
initWithInteger:
allObjects
fileExistsAtPath:isDirectory:
dictionaryWithObject:forKey:
initWithDomain:code:userInfo:
numberWithUnsignedLongLong:
initWithUTF8String:
enumerateKeysAndObjectsUsingBlock:
stringByExpandingTildeInPath
initWithSourceDatabasePath:destinationDatabasePath:
copyDatabase:
deleteFailedArchiveAtPath:error:
destinationPath
sourcePath
_destinationPath
_sourcePath
initWithFormat:
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
cancelIndexingForItem:
indexItem:withChat:isReindexing:metadataToUpdate:
auxiliaryItemsForPrimaryAttributes:withItem:chat:isReindexing:
indexTypeCustomKey
isFromMeCustomKey
isBusinessChatCustomKey
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
_contactForHandle:
_handleIDForHandle:
initWithHandleID:contact:isSender:
recentEventForAddress:displayName:kind:date:weight:metadata:options:
im_lastPathComponent
recentsInstance
recordContactEvents:recentsDomain:sendingAddress:source:userInitiated:
_selfCSPersonFromHandleID:messageService:
handles
setAuthorNames:
setAuthors:
setAuthorAddresses:
avatar
imageFilePath
suggestedContactNameCustomKey
setValue:forCustomKey:
suggestedContactPhotoCustomKey
removeObject:
insertObject:atIndex:
setPrimaryRecipients:
setRecipientAddresses:
groupPhotoPathCustomKey
setTextContent:
setContentCreationDate:
setAccountIdentifier:
setAccountHandles:
_newSummaryTextForPayloadData:item:
lpDescriptionCustomKey
URLWithString:
setURL:
_pluginPayloadAttachmentPathsForItem:
_richLinkPluginHasRichContentForItem:attachmentPaths:
lpHasRichMediaCustomKey
lpPluginPathsCustomKey
setData:
setMessageGUID:
setIsFromMe:
previewSummaryWithPluginPayload:
fileURLWithPath:
linkMetadataForPluginPayload:
setMetadata:
setComplete:
setPreferredSizeClass:
hasMedia
copyAttachmentsForMessageID:
attachmentRecordsFromAttachments:
copyPathFromAttachment:
setContentURL:
attachmentIndexTypeForPath:filename:attachmentRecord:
setFullyFormattedAddress:
contactsForVCardAtPath:
vCardNameForContact:
vCardMapURLForContact:
vCardCoordinateForMapURL:outLatitude:outLongitude:
updateAttributes:withAddressFromContact:
numberWithFloat:
setLatitude:
setLongitude:
copyGUIDFromAttachment:
partKeyForAttachmentFromItem:withGUID:
setOwnerIdentifier:
setRelatedUniqueIdentifier:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
distantFuture
setExpirationDate:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
finishDecoding
error
pathExtension
stringByDeletingPathExtension
previewGeneratorClassForUTIType:
_attachmentIsSticker:
partKeyForAttachmentGUID:inBody:
handleID
contact
isSender
_isSender
_handleID
_contact
setDateFormat:
stringFromDate:
stringByAppendingFormat:
stringByDeletingLastPathComponent
initWithSourceDatabasePath:destinationDatabasePath:newerThanDays:
initWithSourceDatabasePath:destinationDatabasePath:messageCount:
initWithTableName:
databaseQuery:
createQueryString
tableName
columns
setColumns:
where
setWhere:
limit
setLimit:
_tableName
_columns
_where
_limit
selectQueryForTable:
selectQueryForTable:withColumns:
selectQueryForTable:withColumns:where:
_saveAttachmentForTransfer:highQuality:copyWithinAttachmentStore:chatGUID:storeAtExternalPath:
_saveAttachmentForTransfer:highQuality:copyWithinAttachmentStore:
isIncoming
transferState
filename
isAuxVideo
__im_filePathWithVariant:
_persistentPathForTransfer:filename:highQuality:chatGUID:storeAtExternalPath:
temporaryHighQualityLocalPath
localPath
__im_makeDirectoriesInPath:mode:
isGIFFileAtPath:
fileWriter
copyGifFileFromSourcePath:toDestinationPath:error:
_randomTemporaryPathWithFileName:
copyItemAtPath:toPath:error:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
_migrateSiblingAssetsInAttachmentStoreWithOriginalPath:destinationPath:withFileManager:
_shouldDeleteOriginalPath:copyWithinAttachmentStore:destPath:storeAtExternalPath:
_removeLegacyAttachmentPathsInAttachmentStoreWithOriginalPath:withFileManager:
moveItemAtPath:toPath:error:
setAttributes:ofItemAtPath:error:
contentsOfDirectoryAtPath:error:
_canDeleteAttachmentPath:
_deleteAttachmentForTransfer:highQuality:
isSticker
guid
stickerUserInfo
guidByStrippingAuxPrefix:
mimeType
type
saveAttachmentsForTransfer:chatGUID:storeAtExternalLocation:completion:
saveAttachmentsForTransfer:completion:
moveAttachmentsForTransfer:completion:
isSafeToDeleteAttachmentPath:
deleteAttachmentsForTransfer:
cleanseOrphanedFileTransfers
defaultHFSFileManager
pathExtensionForUTIType:
pathExtensionForMIMEType:
stringByAppendingPathExtension:
setUnitsStyle:
stringFromTimeInterval:
initWithTaskName:totalCount:
startTrackingTime
updateWithCompletedCount:
taskName
totalCount
_lastPercentComplete
_startTime
_intervalFormatter
_taskName
_totalCount
enumerateObjectsUsingBlock:
initWithString:
beginEditing
setAttributes:range:
replaceCharactersInRange:withString:
enumerateAttributesInRange:options:usingBlock:
endEditing
initWithBase64EncodedString:options:
substringFromIndex:
URLByAppendingPathComponent:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:options:error:
initWithName:bundleIdentifier:
__im_dateWithCurrentServerTime
allowsOverrideOfObjects
defaultInstance
setRecentsInstance:
descriptorForRequiredKeysForStyle:
arrayWithObject:
addObjectsFromArray:
cachedContactForKey:cacheHit:
areKeysAvailable:
predicateForContactsMatchingEmailAddress:
unifiedContactsMatchingPredicate:keysToFetch:error:
cacheContact:forKey:
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
initWithDisplayName:handles:handleIdentifier:
setContactIdentifier:
_appearsToBePhoneNumber
_appearsToBeEmail
isEqualToIgnoringCase:
stringByResolvingAndStandardizingPath
initWithPath:storeName:dataProtectionClass:
dataForKey:error:
_strictlyUnarchivedObjectOfClasses:fromData:error:
firstName
setGivenName:
lastName
setFamilyName:
stringFromContact:style:
numberWithDouble:
postalAddresses
value
singleLineStringFromPostalAddress:addCountryName:
urlAddresses
label
query
componentsSeparatedByString:
charValue
valueWithBytes:objCType:
setAllowsOverrideOfObjects:
shouldAddToSuggestions
setShouldAddToSuggestions:
shouldAddToSpotlight
setShouldAddToSpotlight:
shouldAddToCoreRecents
setShouldAddToCoreRecents:
_allowsOverrideOfObjects
_shouldAddToSuggestions
_shouldAddToSpotlight
_shouldAddToCoreRecents
_recentsInstance
defaultCenter
contactStoreDidChange:
addObserver:selector:name:object:
null
cache
removeAllObjects
dataWithContentsOfURL:options:error:
organizationName
street
setThoroughfare:
city
setCity:
postalCode
setPostalCode:
state
setStateOrProvince:
country
setCountry:
host
componentsWithURL:resolvingAgainstBaseURL:
queryItems
name
doubleValue
removeObserver:
setCache:
_cache
componentsForContact:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
initWithValue:type:
setIsMe:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
initWithRecipients:content:speakableGroupName:conversationIdentifier:serviceName:sender:
_setLaunchId:
imageWithURL:
setImage:forParameterNamed:
initWithCode:userActivity:
initWithIdentifier:conversationIdentifier:content:dateSent:sender:recipients:groupName:messageType:serviceName:
setSentMessage:
initWithIntent:response:
setIdentifier:
setGroupIdentifier:
setDirection:
initWithStartDate:duration:
setDateInterval:
setIntentHandlingStatus:
initWithStringValue:
phoneNumbers
isLikePhoneNumber:
emailAddresses
initWithValue:type:label:
attributesAtIndex:longestEffectiveRange:inRange:
hasPrefix:
uppercaseString
stringGUID
dateWithTimeIntervalSince1970:
generatedRoomNameForGroupChat
isEqualToSet:
appendAttributedString:
UTITypeOfPathExtension:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:
initWithString:attributes:
characterSetWithCharactersInString:
stringByRemovingCharactersFromSet:
indexSearchableItems:completionHandler:
newSearchableItemsForMessage:reindexing:
initWithObjects:
uniqueIdentifier
domainIdentifier
isUnderFirstDataProtectionLock
initWithItemContentType:
setThumbnailURL:
setInstantMessageAddresses:
removeObjectAtIndex:
setRecipientNames:
setAlternateNames:
reason
deleteSearchableItemsWithIdentifiers:completionHandler:
setDomains:
predicateWithFormat:
setPredicate:
removeRecentContacts:error:
performRecentsSearch:queue:completion:
deleteChatSearchableItemForChatGUID:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
startTimingForKey:
newSearchableItemsForMessageGUID:reindexing:
stopTimingForKey:
setNeedsMessageReindexingWithCompletion:
indexNextMessageBatchIfNeeded:completion:
performanceClass
subarrayWithRange:
initWithArray:
blocklistMessageGUIDs
boolValueForKey:withDefault:
setMessageGUIDUnderScrutiny:
_postProcessIndexingForItem:chatDictionary:isReindexing:
clearMessageGUIDFromScrutiny:
newChatSearchableItemForChatDictionary:optionalLastMessageDate:
_donationManager
copyGroupPhotoToExternalPathIfNecessary:chatGUID:attachmentFilepath:
attributeSet
thoroughfare
setStreet:
sharedService
ticketForForwardGeocodePostalAddress:maxResults:traits:
sharedThrottler
_updateItem:withGeoMapItem:
submitWithHandler:networkActivity:
enqueueTicket:submissionHandler:
coordinate
searchableIndex
setLastUsedDate:
setSubject:
chatStyleCustomKey
_chatDictionaryForChatGUID:
maxRowID
_setNeedsIndexing:
_setNeedsDeferredIndexing:
_setLastIndexedRowID:
_setMaxIndexRowID:
expectedIndexVersion
_setCurrentIndexVersion:
_setBypassIndexVersionCheck
indexChats
messageIndexBatchSize:
_sanitizeIndexesForCurrentVersionIfNeeded:
_bypassIndexVersionCheck
_currentIndexVersion
_expectedIndexVersion
deleteAllSearchableItemsWithCompletionHandler:
_newSearchableChatItemsForChats:
_indexSearchableChatItems:withIndex:
_chatCountForChats:
_chatDictionaryForChatAtIndex:withChats:
lastUsedDate
allValues
beginIndexBatch
data
endIndexBatchWithClientState:completionHandler:
_shouldIndexNextBatchForBatchSize:
needsIndexing
_lastIndexedRowID
_batchSizeForTargetBatchSize:lastIndexedRowID:lastBatch:
_copyMessagesForIndexingWithLastRowID:batchSize:
_newSearchableIndexesForMessages:
_indexSearchableItems:lastIndexedRowID:batchSize:lastBatch:withIndex:completion:
_newLegacySearchableIndexesForMessages:
_shouldBypassForTesting
currentIndexVersion
bypassIndexVersionCheck
lastIndexedRowID
_geocodeItems:
setBlocklistMessageGUIDs:
_blocklistMessageGUIDs
setWatchesDataProtectionLockState:
pathWithComponents:
hasSuffix:
fileSystemRepresentation
enumeratorAtPath:
unsignedLongValue
nextObject
level
fileManager
setFileManager:
.cxx_destruct
_fileManager
stringByAbbreviatingWithTildeInPath
__im_apfsCompatibleFilename
initWithPath:
createDowngradeHelper
arrayOfTableNames
arrayOfCreateTablesSQL
arrayOfCreateIndexesSQL
arrayOfCreateTriggersSQL
makeDirectoriesInPath:mode:
linkItemAtURL:toURL:error:
attributesOfItemAtPath:error:
fileSize
conversationUUID
flags
time
service
account
accountID
handle
countryCode
unformattedID
cloudKitSyncState
cloudKitRecordID
cloudKitServerChangeTokenBlob
cloudKitRecordChangeTag
destinationCallerID
srCloudKitSyncState
srCloudKitRecordID
srCloudKitRecordChangeTag
replyToGUID
sortID
sender
changeType
otherHandle
title
actionType
status
direction
originalMessageGUID
balloonBundleID
timeRead
timeDelivered
timePlayed
errorCode
numberWithUnsignedInt:
roomName
subject
isFromMe
expireState
payloadData
expressiveSendStyleID
timeExpressiveSendPlayed
associatedMessageGUID
associatedMessageType
associatedMessageRange
messageSummaryInfo
dataWithMessageSummaryInfoDictionary:
value:withObjCType:
replaceID
initWithMessageItem:
bodyData
setBodyData:
plainBody
setPlainBody:
setAssociatedMessageGUID:
setAssociatedMessageType:
setPayloadData:
isEqualToDictionary:
setMessageSummaryInfo:
fileTransferGUIDs
setFileTransferGUIDs:
setTime:
setTimeDelivered:
setTimeRead:
setTimePlayed:
setAccount:
setAccountID:
setService:
setDestinationCallerID:
unsignedIntValue
setErrorCode:
setExpireState:
setTimeExpressiveSendPlayed:
isEmpty
isRead
isSent
isDelivered
isCorrupt
isSpam
setFlags:
hasUnseenMention
setHasUnseenMention:
setCloudKitSyncState:
setCloudKitRecordID:
setCloudKitRecordChangeTag:
setCloudKitServerChangeTokenBlob:
setSrCloudKitSyncState:
setSrCloudKitRecordID:
setSrCloudKitRecordChangeTag:
setReplyToGUID:
setSortID:
numberWithInt:
isEqualToData:
isEqualToNumber:
isEqualToDate:
timeIntervalSinceNow
cStringUsingEncoding:
_getDirSubDirURLsForDirPath:error:
deleteDirectoryAtPath:
_getFilePathNotDSStore:
isDirCreationDateAtPath:olderThanDays:
isFileHeaderDateAtPath:olderThanDays:
_getiChatFileMetadataForPath:
isOlderThanDays:fromDate:
_getPathAttributesForPath:
cleanUpOrphanAttachments
deleteMessagesAndAttachmentsAfterDays:
cleanDatabase
deleteSpolightArchivedFiles
isFileAtDirPath:olderThanDays:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
minusSet:
setDay:
dateByAddingComponents:toDate:options:
reverseObjectEnumerator
countForObject:
dateWithTimeIntervalSinceNow:
sortUsingComparator:
initWithSender:time:guid:type:
_setMessageID:
setUnformattedID:
setCountryCode:
setOtherHandle:
setOtherUnformattedID:
setOtherCountryCode:
setActionType:
setChangeType:
setStatus:
setOriginalMessageGUID:
setBalloonBundleID:
dictionaryWithMessageSummaryInfoData:
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:errorType:associatedMessageGUID:associatedMessageType:associatedMessageRange:bizIntent:locale:messageSummaryInfo:threadIdentifier:
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:bizIntent:locale:errorType:threadIdentifier:
isReply
setThreadOriginator:
setReplyCountsByPart:
hasDataDetectorResults
fixIMDPersistenceAgentPriorityInversion
allKeys
dateWithTimeIntervalSinceReferenceDate:
removeObjectForKey:
domain
code
containsIndex:
indexSetWithIndexesInRange:
addIndexesInRange:
arrayWithArray:
arrayWithObjects:
stringWithString:
initWithBool:
initWithUnsignedLong:
initWithTimeIntervalSinceReferenceDate:
initWithLongLong:
attribute:atIndex:effectiveRange:
deleteCharactersInRange:
isAbsolutePath
removeItemAtURL:error:
trimmedString
performMessageSelectionWithOperation:
newerThanDays
_newerThanDays
messageCount
_messageCount
trimDatabaseWithOperation:
arrayWithCapacity:
processInfo
operatingSystemVersionString
storeWithOptions:
_predicateForEmailAddress:
_predicateForPhoneNumber:
_predicateForAlias:
contactStore
initWithKeysToFetch:
predicateForContactsMatchingHandleStrings:
executeFetchRequest:error:
totalTimeForKey:
logContactFetchRequestResults:
setCurrentHistoryToken:
_batchFetchContactRecordIDForAliases:
_fetchContactIdentifierForAlias:
logDictionary:
setStartingToken:
setAdditionalContactKeyDescriptors:
initWithAliasToCNIDMap:
acceptEventVisitor:
getAliasToCNIDMap
unifiedContactWithIdentifier:keysToFetch:error:
initWithContactStore:
entriesForContact:
CNRecordIDForAliases:completionHandler:
setContactStore:
aliasToCNIDMap
setAliasToCNIDMap:
contactsEventhandler
setContactsEventhandler:
_contactStore
_currentHistoryToken
_aliasToCNIDMap
_contactsEventhandler
@40@0:8@16@24Q32
@"NSArray"40@0:8@"NSObject<SGSuggestionsServiceMessagesProtocol>"16@"NSString"24Q32
@16@0:8
v16@0:8
v40@0:8@16Q24@?32
v24@0:8@16
@"<NSObject><SGSuggestionsServiceMessagesProtocol>"
@64@0:8@16@24@32@40@48q56
B32@0:8@16@?24
B24@0:8@?16
B16@0:8
B32@0:8q16@?24
B40@0:8@16^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}24@?32
B32@0:8^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}16@?24
@28@0:8i16@20
^{sqlite3=}16@0:8
q16@0:8
^{sqlite3=}
@"NSString"
@"NSArray"
i20@0:8i16
i16@0:8
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_IMDHandleRecordStruct=}16
@40@0:8^{_IMDHandleRecordStruct=}16@24@?32
q24@0:8q16
v24@0:8q16
@32@0:8@16q24
v44@0:8@16q24B32B36B40
v28@0:8@16B24
v20@0:8B16
v32@0:8@16@24
v44@0:8@16@24@32B40
v40@0:8@16@24@32
v36@0:8@16@24B32
v40@0:8@16@24^{_IMDMessageRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}^{_IMDHandleRecordStruct}^{_IMDHandleRecordStruct}^{__CFArray}^{__CFDictionary}}32
B36@0:8@16@24B32
v24@0:8@?16
v36@0:8B16^B20@?28
B24@0:8@16
B40@0:8^{_IMDHandleRecordStruct=}16@24@32
Q16@0:8
v24@0:8Q16
@24@0:8^^{_IMDChatRecordStruct}16
Q24@0:8^B16
@32@0:8^{_IMDHandleRecordStruct=}16@24
B32@0:8@16@24
v32@0:8@16@?24
Q24@0:8@16
@44@0:8^{_IMDMessageRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}^{_IMDHandleRecordStruct}^{_IMDHandleRecordStruct}^{__CFArray}^{__CFDictionary}}16B24B28B32^B36
@28@0:8^{_IMDMessageRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}^{_IMDHandleRecordStruct}^{_IMDHandleRecordStruct}^{__CFArray}^{__CFDictionary}}16B24
@24@0:8^{_IMDMessageRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}^{_IMDHandleRecordStruct}^{_IMDHandleRecordStruct}^{__CFArray}^{__CFDictionary}}16
B64@0:8@16@24@32@40@48q56
v32@0:8^{_IMDHandleRecordStruct=}16@24
@"UNUserNotificationCenter"
@"UNNotificationCategory"
@"IMBusinessNameManager"
@"CNContact"
@"NSSet"
B32@0:8@16^@24
v44@0:8@16@24B32@36
@44@0:8@16@24@32B40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B24@0:8@"NSDictionary"16
v44@0:8@"NSDictionary"16@"NSDictionary"24B32@"CSSearchableItemAttributeSet"36
@"NSArray"44@0:8@"CSSearchableItemAttributeSet"16@"NSDictionary"24@"NSDictionary"32B40
@40@0:8@16@24^{_IMDAttachmentRecordStruct=}32
B24@0:8^{_IMDAttachmentRecordStruct=}16
@24@0:8q16
@24@0:8^{_IMDAttachmentRecordStruct=}16
Q32@0:8@16@24
@36@0:8@16@24B32
@40@0:8@16@24@32
v44@0:8@16@24B32@?36
@32@0:8@16B24B28
B40@0:8@16B24@28B36
@44@0:8@16B24B28@32B40
B28@0:8@16B24
@48@0:8@16@24B32@36B44
@32@0:8@16Q24
@"NSDateComponentsFormatter"
@"CRRecentContactsLibrary"
v40@0:8@16^f24^f32
@32@0:8@16^B24
@"NSCache"
@28@0:8@16B24
@24@0:8^{__CFArray=}16
q24@0:8@16
@32@0:8Q16@24
v32@0:8Q16@?24
^{__CFArray=}32@0:8Q16Q24
v60@0:8@16Q24Q32B40@44@?52
B24@0:8Q16
Q40@0:8Q16Q24^B32
@"NSMutableOrderedSet"
@"NSFileManager"
B32@0:8@16q24
B32@0:8q16@24
@32@0:8@16^@24
@40@0:8@16@24q32
v24@0:8^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}16
B24@0:8^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}16
@"CNContactStore"
@"NSData"
@"NSMutableDictionary"
@"IMDContactStoreChangeHistoryEventsHandler"
