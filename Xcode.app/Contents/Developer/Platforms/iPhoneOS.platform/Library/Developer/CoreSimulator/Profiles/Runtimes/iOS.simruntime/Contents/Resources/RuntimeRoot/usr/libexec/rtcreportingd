init
dealloc
initWithServices:needToReport:service:
update
report
block
setBlock:
_update
_report
_block
date
dateByAddingTimeInterval:
copy
decodeObjectForKey:
decodeInt64ForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeInt64:forKey:
encodeBool:forKey:
stringWithFormat:
compare:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithURLRequest:expediteAfterInterval:isRealtime:
description
setDateToExpedite:
dateToExpedite
setIsRealtime:
isRealtime
isExpedited
nextOffset
setNextOffset:
cachedRequest
filePath
setFilePath:
eventCompletion
setEventCompletion:
_dateToExpedite
_cachedRequest
_filePath
_nextOffset
_isRealtime
_eventCompletion
stringByExpandingTildeInPath
defaultManager
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
filePrefix
writeData:
dataWithBytes:length:
secureWriteDataForHandle:data:
removeItemAtPath:error:
deleteCurrentCacheFileWithOrderDispatched:
searchForCacheFileWithOrderDispatched:
attributesOfItemAtPath:error:
objectForKey:
timeIntervalSinceDate:
fileExpirationInterval
delegate
oldestFilePruned:
lostEventsForPrefix:filepath:
pruneFileIfExpiredDispatched:
fileUpdateInterval
fileHandleForReadingAtPath:
seekToEndOfFile
closeFile
fileSizeLimit
isSizeORTimeLimitationExceededForFileDispatched:
dateWithTimeIntervalSince1970:
isReadableFileAtPath:
diskCacheRootPath
contentsOfDirectoryAtPath:error:
predicateWithFormat:
filteredArrayUsingPredicate:
countByEnumeratingWithState:objects:count:
pathExtension
isEqualToString:
seekToFileOffset:
readDataOfLength:
length
getBytes:length:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
removeFromCacheDispatched:
fileHandleForUpdatingAtPath:
setDateFormat:
stringFromDate:
createFileAtPath:contents:attributes:
writeInitialHeaderToFile:
failedToWriteDiskCache
archivedDataWithRootObject:requiringSecureCoding:error:
successToWriteDiskCache
addEventForPrefix:filepath:
getOldestEventDispatched
removeEventForPrefix:filepath:
initWithOptions:delegate:
setSelfReporter:
syncUp
cacheFileExtention
deleteCurrentOldestCacheFile
deleteCurrentNewestCacheFile
deleteAllCacheFiles
pruneFileIfExpired:
isSizeORTimeLimitationExceededForFile:
searchForCacheFileWithOrder:
addEvent:
copyFirstEvent
oldestCacheFile
newestCacheFile
options
_options
_selfReporter
_rootPath
_oldestCacheFile
_newestCacheFile
_stateQueue
_delegate
initWithName:profile:productFamily:
containsString:
initWithName:profile:productFamily:clientType:
UTF8String
stringWithCapacity:
appendFormat:
componentsSeparatedByString:
objectAtIndex:
integerValue
count
setState:
sendMessage:timestamp:method:respCode:eventID:flag:
setCombinedSessionIDString:
intValue
allKeys
removeObjectForKey:
caseInsensitiveCompare:
convertIntoSHA256:
setObject:forKey:
objectForKeyedSubscript:
rangeOfString:options:
hashString:
matchExactStringWithList:wholeString:whitelist:
mutableCopy
dictionaryWithDictionary:
setUserInfoDict:
matchStringWithList:wholeString:whitelist:
newBackendWithName:profile:productFamily:clientType:
cleanup
setReportingSessionActivitySchedulerDelegate:
setSelfVersion:
state
updateState
setStartTimestamp:
sendMessage:timestamp:method:respCode:flag:
flushMessagesWithCompletion:
uploadFileAtPath:extensionToken:
uploadLogData:
setCorrelatedSessionID:
isWhitelistedEvent:
isBlacklistedEvent:
createFiltersFromArray:
filterEvent:
batchedEventsSize
checkHashedClientName:userInfoDict:
matchClientNameAndServiceID:clientName:serviceID:
sessionID
setSessionID:
combinedSessionIDString
compType
setCompType:
clientVersion
setClientVersion:
udid
setUdid:
name
setName:
displayURL
setDisplayURL:
productVersion
setProductVersion:
buildVersion
setBuildVersion:
hardwareType
setHardwareType:
productFamily
setProductFamily:
isInternal
setIsInternal:
userInfoDict
batchEvents
setBatchEvents:
hasRealtimeEvents
setHasRealtimeEvents:
samplingFactor
setSamplingFactor:
samplingThreshold
setSamplingThreshold:
digestKey
setDigestKey:
digestAlgorithm
setDigestAlgorithm:
allowNestedData
setAllowNestedData:
eventWhitelist
setEventWhitelist:
eventBlacklist
setEventBlacklist:
sessionPID
setSessionPID:
_profile
_name
_state
_productVersion
_buildVersion
_hardwareType
_productFamily
_startTimeStamp
_sessionID
_combinedSessionIDString
_compType
_clientVersion
_eventID
_selfVersionMajor
_selfVersionMiddle
_selfVersionMinor
_isInternal
_shouldUseWiFiOnly
_totalBytesSent
_bytesSentSinceLastReport
_overrideServerResponse
_userInfoDict
_batchEvents
_hasRealtimeEvents
_udid
_displayURL
_dnuEnabled
_dnuType
_samplingFactor
_samplingThreshold
_eventWhitelist
_eventBlacklist
_digestKey
_digestAlgorithm
_activitySchedulerDelegate
_allowNestedData
_includeSessionIDInHeader
_sessionPID
_numberOfFilters
_filters
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
setObject:forKeyedSubscript:
initWithString:
stringWithUTF8String:
boolValue
bundleWithIdentifier:
infoDictionary
initWithSuiteName:
integerForKey:
stringForKey:
setAttributes:ofItemAtPath:error:
fileURLWithPath:relativeToURL:
writeToURL:options:error:
absoluteString
failedToWWriteStorebag
path
dataWithContentsOfURL:options:error:
failedToReadStorebag
localizedDescription
reportSession:type:
allHeaderFields
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
indexOfObject:
numberWithInt:
propertyListWithData:options:format:error:
failedStorebagValidation
pathForResource:ofType:
dataWithContentsOfFile:
initWithBase64EncodedString:options:
URLWithString:
requestWithURL:cachePolicy:timeoutInterval:
setValue:forHTTPHeaderField:
GETRequestMode
initWithDelegate:mode:userInfo:
activate:forBundleID:
statusCode
initWithDomain:code:userInfo:
getURLRequestWithCompletionHandler:isUrgent:completion:
domain
code
timeIntervalSinceNow
bytes
lowercaseString
dictionaryWithObjectsAndKeys:
stringByAppendingPathComponent:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
objectAtIndexedSubscript:
initWithFormat:arguments:
fileHandleForWritingAtPath:
dataUsingEncoding:
dateFromString:
enumeratorAtPath:
nextObject
numberOfMatchesInString:options:range:
dataWithLength:
mutableBytes
setLength:
firstObject
gzipDeflate
arrayWithArray:
hasPrefix:
replaceObjectAtIndex:withObject:
processIdentifier
base64EncodedStringWithOptions:
numberWithBool:
copyReportingAgentState:cachedStorebags:
addSessionsAccumulatedHealthInfoToPayload:sessionList:storebags:
internalSendMessage:timestamp:method:respCode:
shutdownSessionAggregation
releaseOSTransactions:
releaseUserInfo
setStorebagVersion:
sessionInfo
userInfo
token
level
isActiveClientLimitReachedForSession:sessionInfo:
unsignedIntValue
setHierarchyToken:
updateCorrelatedSessions:
updateUserInfo:
currentLocale
boolForKey:
storebagForSession:
storebagVersionForSession:
createBackendsWithStorebag:
updateSessionWithDefaultSessionInfo
sendStartMessage
fetchReportingStates
fetchWhitelistedEvents
fetchBlacklistedEvents
receivedUserInfo:
appendString:
sessionInformation
sessionIDString
sendMessageWithDictionary:error:
internalFlushMessagesWithCompletion:
uploadFileWithURL:extensionToken:completionHandler:
sendOneMessageWithSessionInfo:userInfo:storebag:category:type:payload:
updateSharedDataForSession:sharedData:
removeObjectFromSharedDataForSession:key:
addObject:
removeObject:
sharedActivitySchedulerForRealtimeBackend:isBatching:
clientPID
parentSessionForChild:
floatValue
hierarchyLevel
arrayWithCapacity:
isMemberOfClass:
arrayByAddingObjectsFromArray:
setWithArray:
allObjects
intersectSet:
updateReportingStates
updateDownstreamSessions:
updateUserInfoForBackends
remoteObjectProxyWithErrorHandler:
sendMessageToClient:timestamp:category:type:payload:
initWithDictionary:
addEntriesFromDictionary:
getAncestorWithAggregatorForSession:
sendToAggregator:timestamp:category:type:payload:
aggregateMessage:timestamp:category:type:payload:
sharedDataForSession:
numberWithUnsignedShort:
parentSessionIDStringForSession:
numberWithUnsignedInteger:
numberWithUnsignedLong:
addSessionHealthInfo:healthReport:
numberWithUnsignedLongLong:
invalidate
setSessionInfo:userInfo:frameworksToCheck:hasAggregationBlock:
startConfigWithCompletionHandler:
fetchStatesWithUserInfo:completionHandler:
fetchDisplayURL:
getSessionId:
setEphemeralSession:enabled:
removeEphemeralSession:withHandler:
sendMessageWithDictionary:reply:
finishSessionGracefully
uploadFileAtPath:extensionToken:completionHandler:
uploadLogData:completionHandler:
sendMessageWithSessionInfo:userInfo:category:type:payload:reply:
updateSharedDataWithDictionary:
updateSharedDataForKey:value:
setDigestKey:algorithm:
initWithSessionDelegate:connection:
hasValidUserInfoKeys
syncReportingStates
hierarchyToken
updateCombinedSessionID
storebagVersion
hasAggregator
setHasAggregator:
isCounted
setCounted:
setClientPID:
bundleID
setBundleID:
_sessionInfo
_userInfo
_frameworks
_backends
_hierarchyDictionary
_periodicServices
_sessionDelegate
_sessionIDString
_storebagVersion
_clientPID
_bundleID
_deviceid
_connection
_hasAggregator
_hasFinishedGracefully
_disableGracefulTerminationReporting
_counted
methodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
setTarget:
setArgument:atIndex:
invoke
isClientTypeAllowed:
initWithPath:
isLoaded
load
classNamed:
_clientBundle
_awdAdaptorClass
_awdAdaptor
initWithBytes:length:
initWithBytes:length:eventNum:
numberOfChecks
setNumberOfChecks:
numberOfRetransmits
setNumberOfRetransmits:
eventNumber
setEventNumber:
data
setData:
_numberOfChecks
_numberOfRetransmits
_eventNumber
_data
getSelfReporter
performTask:
dispatchedStart
setActivityStartTime:
postURLRequest:isRealtime:
start
stop
activityName
setActivityName:
activityStartTime
schedulingDisabled
setSchedulingDisabled:
exponentialDelay
setExponentialDelay:
diskCache
activity
criteria
isRunning
setIsRunning:
delegat
_activityStartTime
_isRunning
_isHoldingXPCTransaction
_activity
_criteria
_eligibilityHandler
_task
_schedulingDisabled
_diskCache
_activityName
_exponentialDelay
_delegat
aboutToDealloc
initWithDelegate:
initWithName:profile:serverIP:serverPort:productFamily:
useReliableUDP
myPeriodicTask
cleanupSources
descriptionForObject:
keysSortedByValueUsingComparator:
sanitize:
writeLocalLog:
tryToSendMsg:length:eventNumber:
requestWithURL:
setHTTPMethod:
setHTTPBody:
initWithName:serverIP:serverPort:productFamily:
sendMessage:timestamp:method:respCode:eventID:
_socketDescriptor
_messageQueue
_reliableUDP
_usingProfile
_networkProcQueue
_readSource
_timer
_cleanupState
_postURL
processSocketRead
removeObjectAtIndex:
removeObjectIdenticalTo:
stringByReplacingOccurrencesOfString:withString:
getPersistentIdentifierForDNU:
updateBackendState
containsObject:
doubleValue
_immutable
_overrideSampling
_uuidRespectDnu
_uuidOverrideDnu
_uuidCustom
cleanupStorageRootFolder
initWithMachServiceName:
setDelegate:
resume
fileType
initWithContentsOfFile:
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
lastPathComponent
stringByAppendingString:
uploadURL
setUploadURL:
_uploadURL
fileExistsAtPath:isDirectory:
readFromDisk
sendDailySummary
updatePerformanceData
writeToFile:atomically:
dictionaryWithContentsOfFile:
updateFromDisk
resetData
sendFailureSummary:forType:
numberWithUnsignedInt:
createSession
invalidateSession:
initWithAgent:
flushOverdue
writeToDisk
failedToPOST:
successfulPOST:
failedStorebagFetch
successfulStorebagFetch
skippedStorebagFetchForError
wokeupForPrefix:
addFailure:forPrefix:withPayload:
sendFailureSummary:
_performanceData
_internalState
_agent
_reportQueue
_numberOfPOSTFailures
_numberOfStorebagDownloadFailures
_numberOfStorebagReadFailures
_numberOfStorebagWriteFailures
_numberOfStorebagValidationFailures
_numberOfStorebagDownloadSuccess
_numberOfStorebagFetchSkippedForError
_numberOfSuccessfulPOSTs
_numberOfCoreDuetNRMWakeUps
_numberOfCoreDuetPRTWakeUps
_numberOfCoreDuetARTWakeUps
_bytesFailed
_bytesSucceeded
_numFailedDiskCacheWrite
_numSuccessfulDiskCacheWrite
_numEventsNRM
_numEventsPRT
_numEventsART
_numLostEventsNRM
_numLostEventsPRT
_numLostEventsART
_lostEventsNRM
_lostEventsPRT
_lostEventsART
initWithAggregationBlock:
_aggregationBlock
initWithMachServiceName:options:
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
initWithSessionInfo:userInfo:frameworksToCheck:aggregationBlock:
finishSession
retain
release
messageSentDelegate
didSendMessageForReportingClient:event:
notifyMessageWasSent:
_queue
initWithObjectsAndKeys:
initWithToken:level:
regeneratePersistentIdentifierForDNU:
createEphemeralSessionWithSessionInfo:userInfo:error:
closeEphemeralSessiontWithSessionId:
sendOneMessageWithSessionInfo:userInfo:category:type:payload:error:
newHierarchyTokenFromParentToken:
newSecureHierarchyTokenFromParentToken:
initWithSessionInfo:userInfo:frameworksToCheck:
setMessageSentDelegate:
startConfigurationWithCompletionHandler:
fetchReportingStatesWithUserInfo:fetchComplete:
setMessageLoggingBlock:
sendMessageWithCategory:type:payload:error:
flushMessages
messageLoggingBlock
_reportingQueue
_reportingPeriodicTasksQueue
_loggingBlock
_counter
_periodicServiceDict
_enabledBackendNames
_whitelistedEvents
_blacklistedEvents
_strongDeallocNotifier
_weakDeallocNotifier
_weakMessageSentDelegate
sortedArrayUsingComparator:
_myPeriodicTask:type:intervalMultiplier:updateTimeout:
startLogTimerWithInterval:reportingMultiplier:category:type:
stopLogTimer
registerPeriodicTaskForModule:needToUpdate:needToReport:serviceBlock:
unregisterPeriodTaskForModule:
fileSystemRepresentation
serverSupportsFileUpload
uploadFileWithURL:completionHandler:
uploadDataArray:completionHandler:
superclass
conformsToProtocol:
addObjectsFromArray:
createReportingSessionWithDelegate:connection:
invalidateReportingSession:
distantPast
initForSchedulingMode:
mainRunLoop
auditToken
processNameForPID:
perPIDInfo:
valueForEntitlement:
bundleIDforXPCConnection:forProcessName:
classesForSelector:argumentIndex:ofReply:
setByAddingObjectsFromSet:
setClasses:forSelector:argumentIndex:ofReply:
canFetchNetworkStorebag
fetchAndCacheStorebag:forBundleID:andUserInfo:
getFirstSessionWithHierarchy:inSessionList:
initWithCapacity:
networkFetchDidFail
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
respondsToSelector:
autorelease
retainCount
zone
hash
debugDescription
listener:shouldAcceptNewConnection:
retainOSTransaction
_processActiveSessions
_sessionList
_cachedStorebags
_correlatedSessions
_sharedData
_sharedConnectivityHelpers
_OSTransactionReferenceCounter
_optionsForNormalScheduling
_optionsForPeriodicRealtimeScheduling
_optionsForAllRealtimeScheduling
_normalActivityScheduler
_periodicRealtimeActivityScheduler
_allRealtimeActivityScheduler
_activeClients
_OSTransaction
_nextAllowedStorebagNetworkFetchRequest
initWithTaskDescription:completion:
completionHandler
setCompletionHandler:
receivedData
_completionHandler
_taskDescription
_receivedData
sessionDescription
notifyAllPendingBlocksForURL:requestData:response:error:
stopConnectivityHelperReleaseTimer
finishTasksAndInvalidate
releaseAllXPCTransactions
privateURLSessionConfigWithMode:forBundleID:
setMaxConcurrentOperationCount:
sessionWithConfiguration:delegate:delegateQueue:
identifier
UUID
UUIDString
setSessionDescription:
startConnectivityHelperReleaseTimerWithBlock:queue:
defaultSessionConfiguration
set_sourceApplicationBundleIdentifier:
_sourceApplicationBundleIdentifier
set_sourceApplicationSecondaryIdentifier:
setTaskDescription:
taskDescription
composeUniqueContainerURL
HTTPBody
writeToURL:atomically:
uploadTaskWithRequest:fromFile:
createHelperForTask:completion:
deleteContainerAtURL:
dataTaskWithRequest:
POSTRequestMode
storageRootFolder
regularExpressionWithPattern:options:error:
response
appendData:
postURLRequestWithCompletionHandler:completion:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:readClosedForStreamTask:
URLSession:writeClosedForStreamTask:
URLSession:betterRouteDiscoveredForStreamTask:
URLSession:streamTask:didBecomeInputStream:outputStream:
setReleaseTimeout:
incrementTotalSessionsServedCount
ownerIncrementUsageCount
ownerDecrementUsageCountWithBlock:queue:
_privateURLSession
_reportingdSessionDelegate
_tasks
_mode
_NSURLDelegateQueue
_isActive
_requestInProgress
_usageCount
_totalSessionsServedCount
_releaseTimeout
_connectivityHelperReleaseTimer
_connectivityHelperReleaseTimerBlock
_connectivityHelperReleaseTimerQueue
numberWithLong:
numberWithDouble:
numberWithUnsignedChar:
stringValue
localTimeZone
secondsFromGMT
numberWithInteger:
timeIntervalSince1970
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
dataWithJSONObject:options:error:
initWithData:encoding:
substringToIndex:
isFrameworkEnabledForClient:
resetBackendStateWithClient:
updatePostLink:
newEventDictfromPayload:timestamp:method:respCode:eventID:
prepareEventForMessage:frameworkData:
batchEvent:
arrayWithObjects:count:
createMessageForPostAndLogging:prettyJsonString:
initWithFormat:
postJSONMessage:withFlag:method:responseCode:completion:
removeAllObjects
postURL
setPostURL:
_useDefaultPostURL
_realtimePostURL
_useDefaultRealtimePostURL
_batchedEvents
_eventThreshold
_extrasOnInternal
_eventMethodCounts
_forceEventLogging
allocWithZone:
setInitialRandomizationInterval:
setSequentialRandomizationInterval:
setSequentialRandomizationIntervalAfterSendError:
setActivityDuration:
setSendInterval:
setRequiresUserIdle:
setRequiresPowerPlugIn:
setRequiresWiFi:
setFileSizeLimit:
setFileExpirationInterval:
setFileUpdateInterval:
setFilePrefix:
copyWithZone:
initialRandomizationInterval
sequentialRandomizationInterval
sequentialRandomizationIntervalAfterSendError
activityDuration
sendInterval
requiresUserIdle
requiresPowerPlugIn
requiresWiFi
_initialRandomizationInterval
_sequentialRandomizationInterval
_sequentialRandomizationIntervalAfterSendError
_sendInterval
_activityDuration
_requiresUserIdle
_requiresPowerPlugIn
_requiresWiFi
_fileSizeLimit
_fileExpirationInterval
_fileUpdateInterval
_filePrefix
UpdateAndReportServices
RTCCachedURLRequest
NSSecureCoding
NSCoding
RTCDiskCache
RTCReportingBackend
ReportingdUtil
zlib
ReportingdSession
ClientSessionInterface
AWDBackend
UDPPacketToSend
RTCActivityScheduler
ReportingSessionEventCacheDelegate
RTCDiskCacheDelegate
RTCReportingDeallocNotifier
DashboardBackend
PrivateMethods
PowerLogBackend
UploadBackend
RTCSelfReporter
RTCReportingAggregationObject
ClientSessionReplyInterface
RTCReporting
RTCReportingDeallocNotifierDelegate
RealtimeStats
FileUpload
ENCRYPTION
Private
ReportingdAgent
NSXPCListenerDelegate
NSObject
ReportingdSessionDelegate
ConnectivityHelperTask
ReportingSessionConnectivityHelper
ReportingSessionConnectivityInterface
NSURLSessionDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
NSURLSessionStreamDelegate
HTTPSPostBackend
RTCActivitySchedulerOptions
@32@0:8B16B20@?24
v16@0:8
B16@0:8
@?16@0:8
v24@0:8@?16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8@16d24B32
@16@0:8
v20@0:8B16
Q16@0:8
v24@0:8Q16
@"NSDate"
@"NSURLRequest"
@"NSString"
@32@0:8@16@24
B32@0:8@16@24
v20@0:8i16
B24@0:8@16
B20@0:8i16
@"RTCActivitySchedulerOptions"
@"RTCSelfReporter"
@"NSObject<OS_dispatch_queue>"
@"<RTCDiskCacheDelegate>"
@44@0:8@16@24@32i40
@40@0:8@16@24@32
i16@0:8
@48@0:8@16r^{timeval=qi}24S32S36S40i44
v24@0:8r^{timeval=qi}16
@44@0:8@16r^{timeval=qi}24S32S36i40
@24@0:8@?16
B32@0:8@16*24
B20@0:8S16
v32@0:8@16@24
B36@0:8@16@24B32
B40@0:8@16@24@32
I16@0:8
v20@0:8I16
S16@0:8
v20@0:8S16
*16@0:8
v24@0:8*16
C16@0:8
v20@0:8C16
d16@0:8
v24@0:8d16
@"NSDictionary"
@"NSNumber"
@"NSArray"
@"NSData"
@"<ReportingSessionEventCacheDelegate>"
^{filterTag=iii@@}
v44@0:8@16@24@32B40
v32@0:8@16@?24
v28@0:8@16B24
v40@0:8@16*24@?32
v56@0:8@16@24S32S36@40@?48
v28@0:8@16i24
v44@0:8@"NSDictionary"16@"NSDictionary"24@"NSArray"32B40
v24@0:8@?<v@?@"NSArray"@"NSArray"@"NSArray">16
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSArray"@"NSArray">24
v24@0:8@?<v@?@"NSString">16
v28@0:8@"NSString"16B24
v32@0:8@"NSString"16@?<v@?B>24
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8@"NSURL"16*24@?<v@?B>32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v56@0:8@"NSDictionary"16@"NSDictionary"24S32S36@"NSDictionary"40@?<v@?@"NSString">48
v24@0:8@"NSDictionary"16
v32@0:8@"NSString"16@"NSObject"24
v28@0:8@"NSData"16i24
v48@0:8@16d24S32S36@40
v40@0:8@16r^{timeval=qi}24S32S36
Q32@0:8@16@24
v40@0:8@16@24@32
v56@0:8@16@24@32S40S44@48
@"NSMutableDictionary"
@"<ReportingdSessionDelegate>"
[41C]
@"NSXPCConnection"
@"NSBundle"
@32@0:8*16S24S28
v28@0:8@"NSURLRequest"16B24
v24@0:8@"NSString"16
@"NSObject<OS_xpc_object>"
^{_xpc_activity_eligibility_changed_handler_s=}
@"NSURLSessionDataTask"
@"RTCDiskCache"
@"<RTCReportingDeallocNotifierDelegate>"
@52@0:8@16@24@32S40@44
@44@0:8@16@24S32@36
@44@0:8@16r^{timeval=qi}24S32S36S40
@"NSMutableArray"
@"NSObject<OS_dispatch_source>"
v32@0:8^{tagReportingPacket={tagReportingPacketHeader=CCCCIISSSS[40C]SS}[1024c]}16S24S28
@24@0:8^{tagReportingPacket={tagReportingPacketHeader=CCCCIISSSS[40C]SS}[1024c]}16
v36@0:8i16@20@28
@"ReportingdAgent"
v48@0:8@"NSDictionary"16d24S32S36@"NSDictionary"40
@20@0:8B16
@40@0:8@16@24^@32
B56@0:8@16@24S32S36@40^@48
@48@0:8@16@24@32@?40
Vv16@0:8
B40@0:8S16S20@24^@32
B32@0:8@16^@24
@"RTCReportingDeallocNotifier"
v36@0:8S16S20i24Q28
v32@0:8i16i20S24S28
B36@0:8I16B20B24@?28
B20@0:8I16
B32@0:8@16@?24
B28@0:8@16i24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8^@16^@24
@24@0:8B16B20
@"NSDictionary"24@0:8@"ReportingdSession"16
@"NSString"24@0:8@"ReportingdSession"16
v24@0:8@"ReportingdSession"16
@"ReportingdSession"24@0:8@"ReportingdSession"16
v32@0:8@"ReportingdSession"16@"NSDictionary"24
v32@0:8@"ReportingdSession"16@"NSString"24
@"RTCSelfReporter"16@0:8
@"RTCActivityScheduler"24@0:8B16B20
B32@0:8@"ReportingdSession"16@"NSDictionary"24
@20@0:8i16
@28@0:8i16@20
@"RTCActivityScheduler"
[37C]
@"NSObject<OS_os_transaction>"
@32@0:8@16@?24
@"NSMutableData"
v36@0:8@16B24@?28
v32@0:8@"NSURLRequest"16@?<v@?@"NSData"@"NSURLResponse"@"NSError">24
v36@0:8@"NSURLRequest"16B24@?<v@?@"NSData"@"NSURLResponse"@"NSError">28
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v48@0:8@16@24@32@40
v32@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24@"NSInputStream"32@"NSOutputStream"40
@36@0:8@16i24@28
v32@0:8@?16@24
v28@0:8I16@20
@"NSURLSession"
@"NSOperationQueue"
@32@0:8@16^@24
v52@0:8@16i24@28@36@?44
@24@0:8^{_NSZone=}16
update
TB,R,V_update
report
TB,R,V_report
block
T@?,C,V_block
expediteDate
request
filePath
nextOffset
isRealtime
RTCCachedURLRequest:%@<-->Realtime(%d)<-->FilePath(%@)<-->FileOffset(%llu)
supportsSecureCoding
TB,R
TQ,N,V_nextOffset
cachedRequest
T@"NSURLRequest",R,V_cachedRequest
T@"NSString",C,N,V_filePath
eventCompletion
T@?,C,N,V_eventCompletion
isExpedited
TB,R,N
com.apple.RTCReportingd.DiskCacheQueue
~/Library/Caches/rtcreportingd/events
v8@?0
event
SELF contains[c] %@
%@/%@
v16@?0@"RTCCachedURLRequest"8
yyyy-MM-dd-HH-mm-ss
%@/%@_Events_%@.%@
NSFileProtectionKey
NSFileProtectionNone
oldestCacheFile
T@"NSString",R,V_oldestCacheFile
newestCacheFile
T@"NSString",R,V_newestCacheFile
options
T@"RTCActivitySchedulerOptions",R,V_options
ClientData
SharedData
Macintosh
%02x
com.apple.RTCReportingBackendStateQueue
method
status
value
action
remove
sha256
blacklistValues
whitelistValues
_method
_status
hashed_client
client
service
state
sessionID
TI,V_sessionID
combinedSessionIDString
T@"NSString",C,V_combinedSessionIDString
compType
Ti,V_compType
clientVersion
TS,V_clientVersion
udid
T*,V_udid
name
T@"NSString",C,V_name
displayURL
T@"NSString",C,V_displayURL
productVersion
T@"NSString",C,V_productVersion
buildVersion
T@"NSString",C,V_buildVersion
hardwareType
T@"NSString",C,V_hardwareType
productFamily
T@"NSString",C,V_productFamily
userInfoDict
T@"NSDictionary",C,V_userInfoDict
isInternal
TC,V_isInternal
batchEvents
TC,V_batchEvents
hasRealtimeEvents
TC,V_hasRealtimeEvents
samplingFactor
Td,V_samplingFactor
samplingThreshold
T@"NSNumber",&,V_samplingThreshold
digestKey
T@"NSData",C,V_digestKey
digestAlgorithm
Ti,V_digestAlgorithm
allowNestedData
TB,V_allowNestedData
eventWhitelist
T@"NSArray",&,V_eventWhitelist
eventBlacklist
T@"NSArray",&,V_eventBlacklist
sessionPID
TI,V_sessionPID
RTCReportingStorebagFetchErrorDomain
Could not find storebag name for client type
Could not find storebag for client type with environment
release_timeout
version
refresh_cycle
Invalid
gamekit
coremedia_crabs
coremedia
avconference
appletv
itunesradio
suggestions
osxanalytics
poem
videosapp
mobileasset
coreaudio
sahara
proactivesiri
lakitu
wings
alloy
storage
droplet
forecast
dpat
cupholder
reflection
ambassador
homerel
rtcassist
com.apple.RTCReporting
CFBundleVersion
10.14
com.apple.rtcreporting
environmentType
/var/mobile/Library/Caches/rtcreportingd/storebags
~/Library/Caches/rtcreportingd
ErrMsg
bagName
storebagURL
CACHED_%@_%@
max-age
Last-Modified
Cache-Control
signature
Signature is missing
publicKey
Signature can not be verified
If-Modified-Since
unknown or error status returned
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
iPhone
iPod touch
iPad
Apple TV
HomePod
homepod
Apple Watch
watch
%@/%@/%@?version=%@
%@/%@?version=%@
fetchNetworkStorebag: Fetch failed due to client error
fetchNetworkStorebag: Fetch failed due to server error
expired and will be
is valid and will not be
rtcreporting_storebag_url
https://pancake.apple.com/_/development/bags/maple
https://pancake.apple.com/_/internal/bags/maple
https://pancake.apple.com/bags/maple
%@:%@
UniqueDeviceID
ProductVersion
BuildVersion
HWModelStr
SerialNumber
ProductType
DeviceName
ReleaseType
Internal
%@_%@_%@
rtcreportingd
messageLog.ips
/var/mobile/Library/Logs/CrashReporter/Retired
Last-Successfully-Reported-At
(%@) 
%@:%@:%@
uuid
Age:%@:%@:%@
yyyy-MM-dd HH:mm:ss
1.2.11
Invalid parameter passed in to function.
Insufficient memory.
The version of zlib.h and the version of the library linked do not match.
Unknown error code.
Error occured while reading file.
The stream state was inconsistent (e.g., next_in or next_out was NULL).
The deflate data was invalid or incomplete.
Memory could not be allocated for processing.
Ran out of output buffer for writing compressed bytes.
ephemeralSessions
sessionId=%@
sessionTS
enabled
shared_values
StorebagVersion
GracefulTermination
InternalSuppress
SUPRESS_METHOD_0
'%@' - %@:%@
Unknown
com.apple.timed
TMAutomaticTimeZoneEnabled
AutomaticTimeSet
Locale
SerialNum
Version
Build
Hardware
Product
ReportVers
startConfigWithCompletionHandler: has been called more than once for session %u
%@?id=%@
&Client=%@
&Service=%@
URL not available
v24@?0@"NSString"8@"NSError"16
Exceeded maximum active reporting session limit for userInfo='%@'
Could not retrieve identifiers from sessionInfo
finished
storebag not available
sessionId
v16@?0@"NSError"8
[%@ -> sendMessageWithDictionary] %@
No backends available to send message
[%@ -> flushMessages] %@
[uploadFileWithURL] Upload %@ for file %@
succeeded
failed
%@.%@
%@_%@
SessionsCount
BatchSize
StorebagsCount
StorebagsSize
CalculatedMemoryUsage
ProcessMemoryUsage
[%@ -> sendOneMessageWithSessionInfo] %@
sessionIDString
T@"NSString",R,V_sessionIDString
storebagVersion
T@"NSString",C,V_storebagVersion
userInfo
T@"NSDictionary",R,N,V_userInfo
sessionInfo
T@"NSDictionary",R,N,V_sessionInfo
hasAggregator
TB,V_hasAggregator
hierarchyLevel
TI,R
hierarchyToken
T@"NSString",R
counted
TB,GisCounted,V_counted
clientPID
T@"NSString",C,V_clientPID
bundleID
T@"NSString",C,V_bundleID
sendMessageWithMethod:respCode:dict:
/System/Library/PrivateFrameworks/AVConference.framework/Frameworks/GKSPerformance.framework
AWDAdaptor
Ti,V_state
numberOfChecks
Ti,V_numberOfChecks
numberOfRetransmits
Ti,V_numberOfRetransmits
eventNumber
TS,V_eventNumber
data
T@"NSData",&,V_data
com.apple.RTCReportingd.ActivitySchedulerQueue
com.apple.rtcreportingd
non-
exponentialDelay
Ti,N,V_exponentialDelay
Ti,N,V_state
isRunning
TB,N,V_isRunning
schedulingDisabled
TB,N,V_schedulingDisabled
activityStartTime
T@"NSDate",C,N,V_activityStartTime
activityName
T@"NSString",C,N,V_activityName
delegat
T@"<ReportingdSessionDelegate>",R,N,V_delegat
T@"RTCActivitySchedulerOptions",R,N,V_options
diskCache
T@"RTCDiskCache",R,N,V_diskCache
activity
T@"NSObject<OS_xpc_object>",R,N,V_activity
criteria
T@"NSObject<OS_xpc_object>",R,N,V_criteria
port
com.apple.RTCReporting.networkProc
display_url
post_url
reliable
q24@?0@8@16
%s %s=%s
POST
application/octet-stream
Content-Type
null
empty
%u.%03d %s 127.0.0.1 %@ %5u %5u %5u %5u %5u %s
clients
override_dnu
locale_whitelist
locale_blacklist
device_whitelist
device_blacklist
filters
sampling_threshold
per_country_sampling_thresholds
country
threshold
override_sampling
custom_clientId
clientId_maxAge
event_whitelist
event_blacklist
FaceTime AFRC log
%@?uuid=%s&sequence=%u&description=%@%%20(Uploaded%%20by%%20GKS)&filename=%@&raw=true
gzip
Content-Encoding
uploadURL
T@"NSString",C,V_uploadURL
com.apple.RTCSelfReporterEventQueue
~/Library/Caches/rtcreportingd/selfreporter
%@/state.%@
%@-%@
StorebagDownloadFailure
StorebagUpdateSuccess
NumFailedPOSTs
NumSuccessfulPOSTs
StorebagSignatureFailure
StorebagReadFailure
StorebagWriteFailure
CDuetNRMWakeUpCount
CDuetPRTWakeUpCount
CDuetARTWakeUpCount
bytesFailed
bytesSucceeded
NumFailedWriteDiskCache
NumSuccessfulWriteDiskCache
NumLostEventsNRM
NumLostEventsPRT
NumLostEventsART
postFailure%@%d
%@Count
failureCount
framework
performance
v16@?0@"NSString"8
dashboard
upload_server
splunk
gonzo
aurora
power
EnableFlag
ComponentType
ClientVersion
SessionID
BatchEvents
RequireUserDict
HierarchyToken
RealTimeEvents
ClientBundleID
EphemeralSessionID
_clientName
_serviceName
RTCReportingErrorDomain
ParametersCategory
ParametersType
ParametersPayload
ParametersFlag
token
level
mach-lookup
com.apple.RTCReporting.main
com.apple.RTCReporting.PeriodicTask
v32@?0@"NSArray"8@"NSArray"16@"NSArray"24
URL for the session is: %@
v12@?0B8
com.apple.RTCReporting.sendOneMessageQueue
messageSentDelegate
T@"<RTCReportingMessageSentNotifier>",N
messageLoggingBlock
T@?,C,N,V_loggingBlock
com.apple.rtcreporting.upload
v20@?0B8@"NSError"12
Missing mandatory parameter 'category'
Missing mandatory parameter 'type'
uuidRespectDNU
uuidOverrideDNU
com.apple.RTCReportingAgentStateQueue
application-identifier
sandboxd
com.apple.sandboxd
listener: new XPC connection for PID '%@' - '%@' exceeds maximum per process limit for sessions currently set to '%d'. Dropping the connection...
com.apple.private.rtcreportingd
StorebagFetchTime
StorebagFetchState
Fetch Successful
StorebagMaxAge
StorebagData
isActiveClientLimitReachedForSession: session %u missing clientType in its sessionInfo %@. Session terminated...
isActiveClientLimitReachedForSession: session %u exceeds number of allowed active connections for clientType %@. Session terminated...
true
false
clientType
Fetch Failure
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
completionHandler
T@?,V_completionHandler
receivedData
T@"NSMutableData",R,V_receivedData
com.apple.ConnectivityHelperStateQueue
inactive
com.apple.system.diagnostics
Task_%08x
ConnectivityHelper is not active
getURLRequestWithCompletionHandler: unable to create data task
getURLRequestWithCompletionHandler: unrecognized mode
/tmp/rtcstorage
^.*\.%@$
rtcdiag
httpsPostURL
httpsRealtimePostURL
forceEventLogging
overrideServerResponse
_startTS
_sender
_clientVersion
_sessionID
_eventNumber
_clientTS
eventTime
_productFamily
_productModel
_osVersion
_build
_internal
%u.%u%@
_reportVers
_timezoneOffset
v32@?0@8Q16^B24
v32@?0@8@16^B24
v40@?0@"NSMutableDictionary"8@16@24^B32
%@(createMessageForPostAndLogging): NSJSONSerialization unable to handle key: %s, value: %s
postTime
clientId
events
postURL is nil
https
%@%@%@
X-RTC-Client-Name
X-RTC-Service-Name
X-RTC-Internal-Build
RTCReporting/%d.%d%@ (%@; %@)
User-Agent
X-RTC-Client-Version
X-RTC-Sender
%@ %@
X-RTC-Event-Map
application/json
Accept
Content-Length
X-RTC-Session-ID
X-RTC-DIGEST
realtime_post_url
event_threshold
extras_on_internal
enabledSince
expedite
include_session_id
use_wifi_only
SamplingThreshold
OverrideSampling
Batch
_totalBytesSent
_bytesSentSinceLastReport
Flushed events:
Standalone event:
Nothing to flush
Can not flush: userInfo is required
Nothing to flush: batched events were completely filtered out
postURL
T@"NSString",C,V_postURL
initialRandomizationInterval
TI,N,V_initialRandomizationInterval
sequentialRandomizationInterval
TI,N,V_sequentialRandomizationInterval
sequentialRandomizationIntervalAfterSendError
TI,N,V_sequentialRandomizationIntervalAfterSendError
sendInterval
TI,N,V_sendInterval
activityDuration
TI,N,V_activityDuration
requiresUserIdle
TB,N,V_requiresUserIdle
requiresPowerPlugIn
TB,N,V_requiresPowerPlugIn
requiresWiFi
TB,N,V_requiresWiFi
fileSizeLimit
TQ,N,V_fileSizeLimit
fileExpirationInterval
Ti,N,V_fileExpirationInterval
fileUpdateInterval
Ti,N,V_fileUpdateInterval
filePrefix
T@"NSString",C,N,V_filePrefix
0Effffff
RTCCachedURLRequest created
RTCCachedURLRequest created (NSSecureCoding)
RTCCachedURLRequest dealloced
RTCDiskCache: Created disk cache for '%@' scheduling mode
RTCDiskCache dealloced
RTCDiskCache:secureWriteDataForHandle: Failed to write event cache file with error '%@'
RTCDiskCache:oldestEvent: Event '%@' was read from file '%@'
RTCDiskCache:oldestEvent: Could not un-archive malformed event from file '%@'.  Deleting cache file...
RTCDiskCache:oldestEvent: read event is malformed as its size is 0 in the file '%@'. Deleting cache file...
RTCDiskCache:oldestEvent: Data in the file '%@' has been read out completely. Deleting cache file...
RTCDiskCache:oldestEvent: Signature mismatch in log file '%@'. Deleting cache file...
RTCDiskCache:oldestEvent: Empty log file '%@'. Deleting cache file...
RTCDiskCache:oldestEvent: No cache file '%@' exist
RTCDiskCache:oldestEvent: No more cache files exist
RTCDiskCache:getOldestEventDispatched ran for %.2f seconds
RTCDiskCache:addEvent: Event should not be nil
RTCDiskCache:addEvent: Failed to create events disk cache file '%@'
RTCDiskCache:removeFromCache: File '%@
 has no more data to read after removing the last processed event. Deleting file...
RTCDiskCache:removeFromCache: File '%@' has zero length. Deleting file...
RTCDiskCache:removeFromCache: Last event has been read from file '%@'. Deleting file...
RTCDiskCache:removeFromCache: Event specified file '%@' which does not exist any more
RTCDiskCache:removeFromCacheDispatched: ran for %.2f seconds
RTCReportingBackend(newBackendWithName): %s
filterEvent: API ABUSE!!! Only NSStrings are allowed as keys in user event payload! Removing abusing key '%@' for clientID '%d'
checkHashedClientNameForUserInfoDict: hashed client hashednames %@
%@(checkHashedClientNameForUserInfoDict): hashed client found %s:%s
fetchStorebagForEnvironmentAndClientType: Could not find storebag name for client type %d
fetchStorebagForEnvironmentAndClientType: Could not fetch storebag for client type %d
fetchStorebagForEnvironmentAndClientType: Seed section is missing in the storebag.
fetchStorebagForEnvironmentAndClientType: QA section is missing in the storebag.
fetchStorebagForEnvironmentAndClientType: Could not find storebag for client type %d with %s environment
fetchStorebagForEnvironmentAndClientType: Store bag override MaxAge=%d
senderNameForClientType: Invalid clientType '%d' passed
createBackends: Attempted to create backends with nil storebag. No backend created.
createBackends: Attempted to create backends with nil session info. No backend created.
createBackends: Attempted to create backends with kRTCReportingSessionInfoRequireUserInfo set to NO. No backend created
Session '%@' was not marked as having realtime events but tries to set batching as NO. Forcing events batching for the session
userDefaultsEnvironment: Invalid environment type %u
userDefaultsEnvironment: Environment type %u
setStorageClassProtectionLevel: could not set attribute %@ to file '%@'. Error is '%@'
saveStorebagToDisk: could not save storebag '%@' to file '%@'. Error is '%@'
loadStorebagFromDisk: could not load storebag '%@' from file '%@'. Error is '%@'
getLastLoadedStorebagMetricsWithName: maxAge is %d for storebag %@
getLastLoadedStorebagMetricsWithName: 'Last-Modified' has not changed for storebag '%@': '%@'
getLastLoadedStorebagMetricsWithName: 'Last-Modified' has changed to '%@' for storebag '%@'
saveLastLoadedStorebagMetricsWithName: New storebag '%@' received: maxAge %d, Last-Modified '%@'
verifyAndDecodeStorebag: propertyListWithData error %s
verifyAndDecodeStorebag: Signature is missing
verifyAndDecodeStorebag: Signature can not be verified, %p
verifyAndDecodeStorebag: storebag '%@' has been saved to disk cache
performGetRequestForServer: Adding 'Last-Modified: %@' to the header
performGetRequest: received zero-length storebag for '%@
, treat as unchanged
performGetRequest: storebag '%@' does not need update as its content has not changed on the server
performGetRequest: error resolving with URL '%@', error '%@'
fetchNetworkStorebag: Platform-specific storebag URL: '%@'
fetchNetworkStorebag: Fallback storebag URL: '%@'
fetchStorebagWithName: storebag '%@' loaded from disk cache. Disk cache %@ refreshed
userDefaultsStorebagURL: Storebag for environment '%d' is not defined. Should not be here!
userDefaultsStorebagURL: Storebag '%@' selected
deleteExpiredLogFile: Deleted expired rtcreportingd log file %s (%s)
createNewLogFile: both logFilePath and logFileCreationDate must not be nil
writeToLogFile: Created new rtcreportingd log file %s (%s)
writeToLogFile: Failed to create new rtcreportingd log file %s
RTCReporting Last Successfully Reported to server at %@
writeToLogFile: Creating rtcreportingd log directory at %s
writeToLogFile: Error reading from log directory: %s
writeToLogFile: Saved log message to %s
writeToLogFile: Failed. Error Exception: '%@'
getRotatingIdentifierForCustomClientIDSuffix: %f days > %d maxAge, generating new clientId
getRotatingIdentifierForCustomClientIDSuffix: The old value for %s: %s expired at: %@
getRotatingIdentifierForCustomClientIDSuffix: The value for %s: %s
getPersistentIdentifierForCustomClientIDSuffix: The value for %s: %s
compressDataWithZlibOrGzip: Cannot compress empty NSData
compressDataWithZlibOrGzip: deflateInit2() Error: "%s" Message: "%s"
compressDataWithZlibOrGzip: zlib error while attempting compression: "%s" Message: "%s"
compressDataWithZlibOrGzip: Compressed file from %u to %u
isValidEphemeralSession: validating ephemeral session '%@' on '%@' with %d
isValidEphemeralSession: validating ephemeral session '%@' is '%f' old
isValidEphemeralSession: ephemeral session '%@' does not exists.
expandMacroForDataSet: Expanding macro '%@' into '%@'
initWithSessionDelegate: Initialized session for sessionID '%@'
dealloc: ReportingdSession dealloc: for sessionID '%@'
setSessionInfo: Configuring session %u
setSessionInfo: userInfo must be present and valid!!!
startConfigWithCompletionHandler: Starting configuration for session %u
fetchStatesWithUserInfo: Fetching states for session %u
fetchDisplayURL: Fetching display URL for session %u
sendMessageWithDictionary: Sending message for %@ with category '%@' and type '%@' for session %u : '%@'
flushMessagesWithCompletion: Flushing messages for session %u
finishSessionGracefully: Session %u has been finished gracefully
uploadFileAtPath: Uploading file for session %u
sendMessageWithSessionInfo: Could not retrieve identifiers from sessionInfo
sendMessageWithSessionInfo: Sending message with session info for session %u
getSessionId: session for sessionID '%@'
getSessionId: handler session for sessionID '%@'
setEphemeralSession: ephemeral session '%@' already exists.
setEphemeralSession: set ephemeral session '%@' on '%@' with %d
removeEphemeralSession: closing ephemeral session '%@' on '%@' with %d
removeEphemeralSession: closed ephemeral session '%@' is '%f' old
removeEphemeralSession: ephemeral session '%@' does not exists.
createBackendsWithStorebag: Creating backends for session %u
%@(syncReportingStates): state and sampling rate updated to %d, %.02f%%
%@(syncReportingStates): Parent session  does not have backend %@. Current state '%d' kept for child session
syncReportingStates: child session %u (backend %s) with hierarchy %d is missing its parent
receivedUserInfo: userInfo must be present and valid!!! Aborting method...
receivedUserInfo: Received new user info for session %u
sendMessageWithDictionary: Failed to get remote object proxy: %s
shutdownSessionAggregation: Disable aggregation module for session %u
sendMessageWithDictionary: No backends available to send message
sendMessageWithDictionary: Missing mandatory parameter 'category'
sendMessageWithDictionary: Missing mandatory parameter 'type'
sendMessageWithDictionary: Dropping event with category %d as it is not whitelisted for backend %s
sendMessageWithDictionary: Dropping event with category %d as it is blacklisted for backend %s
internalSendMessage: Sent internal message (method:%d respCode:%d)
internalFlushMessagesWithCompletion: %s
uploadFileWithURL: File upload successful for %s
uploadFileWithURL: File upload failed for %s
uploadLogData: Log data array upload successful
uploadLogData: Log data array upload failed
updateCombinedSessionID: Updating combined session ID '%s' for session %u backends
sendOneMessageWithSessionInfo: Sending single message with sessionID %ld
sendOneMessageWithSessionInfo: Attempted to send message with one or more nil parameters
sendOneMessageWithSessionInfo: userInfo must be present and valid!!! Aborting method...
sendOneMessageWithSessionInfo: No backends available to send single message
sendOneMessageWithSessionInfo: Dropping event with category %d as it is not whitelisted for backend %s
sendOneMessageWithSessionInfo: Dropping event with category %d as it is blacklisted for backend %s
AWDBackend(sendMessage): AWD adaptor %s does not respond to forwarding selector %s
AWDBackend(initWithName): Loading AWD adaptor class for client type %d
AWDBackend(initWithName): No matching bundle found for client type %d
RTCActivityScheduler dealloced
RTCActivityScheduler: Caching %srealtime event '%@'
RTCActivityScheduler: Sending task is not running. Activating it due to realtime event
RTCActivityScheduler: oldest cache file '%@' has been pruned. Resetting exponential delay
DashboardBackend(initWithName): can't resolve server IP
DashboardBackend(initWithName): can't resolve server port
DashboardBackend(initWithName): socket() failed (%d)
DashboardBackend(initWithName): initWitName with all null params.
DashboardBackend(initWithName): socket connect() failed.
DashboardBackend(initWithName): can't create timer source.
DashboardBackend(sendMessage): can't malloc.
DashboardBackend(uploadLogData): Post URL for log data array is nil
DashboardBackend(uploadLogData): Failed to serialize log data array for upload
DashboardBackend(useReliableUDP): can't bind socket, %d
DashboardBackend(useReliableUDP): can't create read source
DashboardBackend(myPeriodicTask): clean up at myPeriodicTask.
DashboardBackend(myPeriodicTask): scheduled last resort clean-up in %d ms.
%@(updateBackendState): profile '%@'
%@(updateBackendState): clients '%@'
%@(updateBackendState): client '%@'
%@(updateBackendState): reporting disabled by DNU: %d.
%@(updateBackendState): (%@) isn't in country code whitelist %@
%@(updateBackendState): (%@) is in country code blacklist %@
%@(updateBackendState): (%s) isn't in device whitelist %s
%@(updateBackendState): (%s) is in device blacklist %s
%@(updateBackendState): filters are required.
%@(updateBackendState): sampling threshold for %s changed from %.02f to %.02f
%@(updateBackendState): client found %s:%s, state=%d, samplingFactor=%f, for sessionID '%@'
%@(updateBackendState): eventWhitelist=%@
%@(updateBackendState): eventBlacklist=%@
setupSignalHandler: Caught SIGTERM. Terminating daemon...
startLogging: Daemon starts logging...
UploadBackend(initWithName): can't resolve upload post URL.
UploadBackend(uploadFileAtPath): Uploading file %s
UploadBackend(uploadFileAtPath): Only upload a regular file.
UploadBackend(uploadFileAtPath): Input file is empty
UploadBackend(uploadFileAtPath): Unable to create URL request
RTCSelfReporter initWithAgent created
RTCSelfReporter writeToDisk
RTCSelfReporter readFromDisk
RTCSelfReporter sendDailySummary
sendMessageToClient: %u, %u
sendMessageToClient: Exception during invocation of aggregation block. Disabling aggregation
startLogging: Client starts logging...
initWithSessionInfo: the session is disabled
initWithSessionInfo: XPC not entitled, %d
initWithSessionInfo: Failed to connect to daemon
initWithSessionInfo: XPC connection invalidated
initWithSessionInfo: XPC connection interrupted
initWithSessionInfo: Failed to get remote object proxy: %s
initWithSessionInfo: Failed to create reporting queue
aboutToDealloc: RTCReporting client session %p is about to dealloc
Message Sent Delegate is set to %x:
startConfigurationWithCompletionHandler: Failed to get remote object proxy: %s
Cached %d enabled backends, (%@, %@) listed events
fetchReportingStatesWithUserInfo: Failed to get remote object proxy: %s
setMessageLoggingBlock: called
Event %u is filtered by storebag
sendMessageWithDictionary: %s
flushMessages:
flushMessagesWithCompletion: Failed to get remote object proxy: %s
flushMessagesWithCompletion: flush failed with error '%s'
flushMessagesWithCompletion: flushed session successfully with reply %s
finishSession: Failed to get remote object proxy: %s
updateSharedDataWithDictionary: Failed to get remote object proxy: %s
updateSharedDataForKey: Failed to get remote object proxy: %s
regeneratePersistentIdentifierForDNU: Set new value for %s: %s
getPersistentIdentifierForDNU: The value for %s: %s
createEphemeralSessiontWithSessionInfo: Failed to connect to daemon
createEphemeralSessiontWithSessionInfo: XPC connection invalidated
createEphemeralSessiontWithSessionInfo: XPC connection interrupted
createEphemeralSessiontWithSessionInfo: Failed to get remote object proxy: %@
createEphemeralSessiontWithSessionInfo getSessionId %@
createEphemeralSessiontWithSessionInfo: Failed to get remote object proxy
createEphemeralSessiontWithSessionInfo finished with sessionId %@
closeEphemeralSessiontWithSessionId: Failed to connect to daemon
closeEphemeralSessiontWithSessionId: XPC connection invalidated
closeEphemeralSessiontWithSessionId: XPC connection interrupted
closeEphemeralSessiontWithSessionId: Failed to get remote object proxy: %@
closeEphemeralSessiontWithSessionId: Failed to get remote object proxy
sendOneMessageWithSessionInfo: Failed to connect to daemon
sendOneMessageWithSessionInfo: XPC connection invalidated
sendOneMessageWithSessionInfo: XPC connection interrupted
sendOneMessageWithSessionInfo: Failed to get remote object proxy: %@
sendOneMessageWithSessionInfo: Failed to get remote object proxy
_myPeriodicTask: Started RT periodic task
_myPeriodicTask: Timeout scheduling RT metrics report tasks
_myPeriodicTask: Timeout during periodic tasks metrics collection. Not all stats will be reported
_myPeriodicTask: All RT metrics collected
_myPeriodicTask: Sent realtime event after collection all RT metrics
_myPeriodicTask: Finished RT metrics collection
_myPeriodicTask: Timeout scheduling RT metrics update tasks
_myPeriodicTask: Timeout during RT metrics update
_myPeriodicTask: Finished RT updates for all registered modules.
startLogTimerWithInterval: %d, %d
stopLogTimer.
stopLogTimer: No timer is present.
registerPeriodicTaskForModule: %u,%s update,%s reporting
unregisterPeriodTaskForModule: %u doesn't exist
unregisterPeriodTaskForModule: %u removed
serverSupportsFileUpload:%s (%lu backends)
uploadFileWithURL: fileURL provided is nil
uploadFileWithURL: Failed to get sandbox extension for path %s, errno %d
uploadFileWithURL: Failed to get remote object proxy: %s
uploadDataArray: Log data array is empty
uploadDataArray: Failed to get remote object proxy: %s
setDigestKey: digestKey should not be nil!!!
validateSessionInfo: sessionInfo is nil
validateSessionInfo: clientType is invalid
validateSessionInfo: bundleID is invalid. Please specify the bundleID for kRTCReportingSessionInfoClientBundleID
validateSessionInfo: invalid kRTCReportingSessionInfoSuppress provided, please remove
validateEphemeralSession: validating ephemeral session '%@' on '%@' with %d
validateEphemeralSession: validating ephemeral session '%@' is '%f' old
validateEphemeralSession: ephemeral session '%@' does not exists.
validateMessageWithCategory: payload provided '%@' is not secure and will not be able to get through XPC. Failing message send operation...
createReportingSessionWithDelegate: OS transaction started with session %@
createReportingSessionWithDelegate: retained OS transaction. Ref count is %d
invalidateReportingSession: ReportingdSession %@ was invalidated
invalidateReportingSession: active session count for clientType %d got decremented to %d
invalidateReportingSession: Per-process session usage count for PID '%@' decremented to '%d'
invalidateReportingSession: Should never be here: trying to decrement per-proces session usage count for PID '%@' when it is alrady zero!
Unable to create options for all scheduling policies. Terminating...
ReportingdAgent: Listener resumes with sandbox, start loop.
perPIDInfo: PID '%d' has session '%@' from clientType: '%d' sender: '%@' sessionInfo: '%@' userInfo: '%@
listener: new XPC connection for PID '%@' has processName: '%@'
listener: new XPC connection for PID '%@' - '%@' does NOT exceeds maximum per process limit for sessions currently set to '%d'. Per process session usage increased to '%d'
listener: Accepting new XPC connection from PID '%@' - '%@' as it has proper entitlement, %d(%d) connections.
listener: new XPC connection from PID '%@' - '%@' does not have required rtcreporting entitlement. Closing connection...
listener: XPC connection to %s was interrupted
listener: XPC connection to %s was invalidated
releaseOSTransactions: OS transaction ref count is %d, decremented by %d
releaseOSTransactions: OS transaction ended
retainOSTransaction: OS transaction started
retainOSTransaction: OS transaction retained, ref count is '%d', incremented by 1
storebagForSession: Retrieving storebag for session %u with client type %d
storebagForSession: Override maxAge as disk cache for storebag '%@' was updated: modification time '%@' is greater than last fetch time '%@
storebagForSession: Cached storebag found for client type %d
storebagForSession: Not fetching storebag for client type %d - must wait %d seconds between attempts
storebagForSession: A bundleID was not provided, falling back to '%@'
storeBagForSession: not fetching due to recent network error
parentSessionIDStringForSession: Checking hierarchyToken '%s' for session %u
parentSessionIDStringForSession: ERROR: No sessions found for hierarchyToken %s
parentSessionIDStringForSession: Session %u not found for hierarchyToken %s
parentSessionIDStringForSession: Found a gap in hierarchy (one of parents missing): incomplete parentSessionID is '%s'
updateCorrelatedSessions: Session %u has no correlated sessions as it is a standalone session
updateCorrelatedSessions: Adding session %u to list for hierarchyToken %s with hierarchyLevel %d
parentSessionForChild: Checking hierarchyToken '%s' for session %u
parentSessionForChild: ERROR: No sessions found for hierarchyToken %s
parentSessionForChild: ERROR: Session %u not found for hierarchyToken %s
parentSessionForChild: Unable to find session with hierarchy of %d for hierarchyToken '%s'
updateDownstreamSessions: Updating combined session ID and syncing reporting states for session %u
isActiveClientLimitReachedForSession: active session count for clientType %d got incremented to %d
canFetchNetworkStorebag: %s (nextAllowed: %@)
networkFetchDidFail: setting nextAllowed to %@
fetchAndCacheStorebag: Fetching storebag for client type %d
fetchAndCacheStorebag: clientType %d is invalid
fetchAndCacheStorebag: Storebag max age: %d seconds
fetchAndCacheStorebag: Unable to fetch storebag for client type %d
ConnectivityHelperTask with ID <%@> created
ConnectivityHelperTask with ID <%@> dealloced
ReportingSessionConnectivityHelper created with delegate %d
ReportingSessionConnectivityHelper dealloced with ID <%@>
ReportingSessionConnectivityHelper:invalidate: NSURLSession with ID <%@>
ReportingSessionConnectivityHelper:invalidate: release %d OS transactions for inactive connectivity helper
startConnectivityHelperReleaseTimerWithBlock: Special case of dealing with ever-lasting connectivity helper %@
startConnectivityHelperReleaseTimerWithBlock: release %d OS transactions for ever-lasting connectivity helper %@
startConnectivityHelperReleaseTimerWithBlock: Connectivity helper release timer fired for NSURLSession with ID <%@>, timeout %ds
startConnectivityHelperReleaseTimerWithBlock: Calling back owner of Connectivity helper with _usageCount=%d
startConnectivityHelperReleaseTimerWithBlock: started connectivity helper release timer for NSURLSession with ID <%@>
stopConnectivityHelperReleaseTimer: stopping connectivity helper release timer for NSURLSession with ID <%@>
activate: activating connectivity helper for NSURLSession with ID <%@>
activate: connectivity helper is already active for NSURLSession with ID <%@>
NSURLSession created and activated with ID <%@>, delegate %d
Total Sessions Served Count is incremented for NSURLSession with ID <%@>
ownerIncrementUsageCount: connectivity helper incremented usage count for NSURLSession with ID <%@>. _usageCount=%d, _totalSessionsServedCount=%d
ownerDecrementUsageCountWithBlock: connectivity helper decremented usage count for NSURLSession with ID <%@>. _usageCount=%d, _totalSessionsServedCount=%d
ownerDecrementUsageCountWithBlock: Usage count for NSURLSession with ID <%@> is greater than 0. Notifying owner that _usageCount=%d, _totalSessionsServedCount=%d
ownerDecrementUsageCountWithBlock: Usage count for NSURLSession with ID <%@> is equal to 0. Starting connectivity helper release timer
privateURLSessionConfigWithMode: Using bundleID '%@' with userInfo '%@' 
createHelperForTask: created helperTask for task <%@>
postURLRequestWithCompletionHandler: underlying NSURLSession has been invalidated with error %@. Ignoring POST request.
postURLRequestWithCompletionHandler: wrong mode for POST operation detected %d
getURLRequestWithCompletionHandler: new storebag pull for '%@' has been cancelled as NSURLSession is not active
getURLRequestWithCompletionHandler: underlying NSURLSession has been invalidated with error %@. Ignoring GET request.
getURLRequestWithCompletionHandler: new storebag pull for '%@' has been completed with error %@
getURLRequestWithCompletionHandler: new storebag pull for '%@' has been cancelled as NSURLSession data task creation has failed
getURLRequestWithCompletionHandler: duplicate request detected for storebag '%@'
getURLRequestWithCompletionHandler: storebag immediate pull for '%@' has been initiated
getURLRequestWithCompletionHandler: storebag delayed pull for '%@' delayed by %d seconds has been initiated. Time now %llu, scheduled time to pull %llu
getURLRequestWithCompletionHandler: wrong mode for GET operation detected %d
didBecomeInvalidWithError: release %d OS transactions for session %@
didBecomeInvalidWithError: session <%@> invalidated with error %@
didSendBodyData: for <session>:<task> <%@>:<%@>: Sent %lld out of %lld
didCompleteWithError: for <session>:<task> <%@>:<%@> with response %@, error %@
didReceiveResponse: for <session>:<task> <%@>:<%@>
didBecomeDownloadTask: session <%@> has become downoad task. SHOULD NEVER HAPPEN!!!
didReceiveData: received %d bytes for <session>:<task> <%@>:<%@>
%@(initWithName): can't find the client list.
%@(initWithName): Using user default '%s' for postURL
%@(initWithName): Using user default '%s' for realtimePostURL
HTTPSPostBackend: '%@' value is '%@'
%@(batchEvent): Flushing all batched events as we reached event threshold for method %d
Backend '%@' was not marked as one that may have realtime events but tries to send an event marked as realtime. Ignoring the realtime flag and treating the event as regular one
%@(updatePostLink): Storebag '%s' for postURL
%@(updatePostLink): Storebag '%s' for realtimePostURL
%@(updatePostLink): realtimePostURL defaults to postURL '%s'
resetBackendStateWithClient: event_threshold set to %d
setBackendStateWithClient: extras on internal is set to %d
Backend '%@' was not marked as one that may have realtime events but tries override batching to NO via storebag setting. Ignoring storebag setting and forcing events batching for the backend
%@(updateBackendState): Store bag override  _batchEvent=%d
%@(sendMessage): client data payload is nil
%@(sendMessage): Adding dnu type and sampling threshold to SESSION_TYPE_STOP message dictionary
%@(sendMessage): realtime is %d
%@(sendMessage): Batching %d, %d, %d
%@(sendMessage): Got a realtime event and some events have already been batched. Forcing Flush here to keep events in order.
%@(sendMessage): Sending %d, %d, %d
%@(flushMessagesWithCompletion): called
flushMessagesWithCompletion: Dropping event with category %d as it is not whitelisted for backend %s
flushMessagesWithCompletion: Dropping event with category %d as it is blacklisted for backend %s
RTCActivitySchedulerOptions: Created options for '%@' scheduling mode
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.rtcreportingd</string>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.osanalytics</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>com.apple.rtcreportingd</string>
</array>
</dict>
</plist>
