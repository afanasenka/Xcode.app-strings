MbP?
com.apple.SiriVOXService.service-command.%@
Failed to playback audio for command %@.
-[_SVXServiceCommandHandlerPlayVoiceMail handleCommand:withContext:taskTracker:completion:]_block_invoke_3
v24@?0d8@"NSError"16
v16@?0@"SVXSession"8
Failed to acquire audio for command %@.
v20@?0B8@"NSData"12
-[_SVXServiceCommandHandlerPlayVoiceMail _markVoiceMailAsRead:forRemoteDevice:]
v20@?0B8@"NSError"12
-[_SVXServiceCommandHandlerPlayVoiceMail _markVoiceMailAsRead:forRemoteDevice:]_block_invoke
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
identifier
T@"NSString",R,N
supportedCommandClass
T#,R,N
T@"NSString",R,N,V_identifier
v8@?0
activationService
T@"<SVXClientActivationServicing>",R,N,V_activationService
sessionStateService
T@"<SVXClientSessionStateServicing>",R,N,V_sessionStateService
sessionService
T@"<SVXClientSessionServicing>",R,N,V_sessionService
inputAudioPowerService
T@"<SVXClientAudioPowerServicing>",R,N,V_inputAudioPowerService
outputAudioPowerService
T@"<SVXClientAudioPowerServicing>",R,N,V_outputAudioPowerService
speechSynthesisService
T@"<SVXClientSpeechSynthesisServicing>",R,N,V_speechSynthesisService
deviceService
T@"<SVXClientDeviceServicing>",R,N,V_deviceService
audioSystemService
T@"<SVXClientAudioSystemServicing>",R,N,V_audioSystemService
-[SVXServiceCommandHandler _reset]
v16@?0@"SVXServiceCommandResult"8
v24@?0q8@"NSString"16
v16@?0@"AceObject<SAAceCommand>"8
SVXServiceCommandHandlerPreSynthesizeTTS.m
Invalid parameter not satisfying: %@
[command isKindOfClass:[SAPreSynthesizeTTS class]]
v16@?0@"SVXSpeechSynthesisResult"8
-[SVXServiceCommandHandlerPreSynthesizeTTS handleCommand:withContext:taskTracker:completion:]_block_invoke_2
v32@?0@"NSString"8Q16^B24
unspecified
siriIntro
tryHeySiriCapabilities
siriCapabilities
tryHeySiriMusic
siriOutro
siriCapabilitiesHomeNewsWeather
siriCapabilitiesHomeWeatherClock
tryHeySiriNews
tryHeySiriWeather
(unknown)
-[SVXClientSessionStateService handleWillChangeSessionStateFrom:to:]
-[SVXClientSessionStateService handleDidChangeSessionStateFrom:to:]
-[SVXClientSessionStateService handleDidChangeSessionStateFrom:to:]_block_invoke
-[SVXClientSessionStateService fetchStateWithCompletion:]
v24@?0q8@"NSError"16
v16@?0@"<SVXClientService>"8
-[SVXClientSessionStateService fetchStateWithCompletion:]_block_invoke
v16@?0@"NSError"8
-[SVXClientSessionStateService _setCurrentState:]
currentState
Tq,R,N
delegate
T@"<SVXClientSessionStateServiceDelegate>",W,N
Tq,R,N,V_currentState
T@"<SVXClientSessionStateServiceDelegate>",W,N,V_delegate
twoShot
sessionInactive
tapToSiri
deviceSetupIntro
deviceSetupOutro
phatic
timestamp
options
flowScene
%@ {%@}
timestamp = %@
options = %@
flowScene = %@
SVXDeviceSetupContext::timestamp
SVXDeviceSetupContext::options
SVXDeviceSetupContext::flowScene
supportsSecureCoding
TB,R
TQ,R,N,V_timestamp
T@"SVXDeviceSetupOptions",R,C,N,V_options
T@"SVXDeviceSetupFlowScene",R,C,N,V_flowScene
type
Tq,R,N,V_type
serviceCommandHandler
T@"<SVXServiceCommandHandling>",R,N,V_serviceCommandHandler
activityListener
T@"<SVXSessionActivityListening>",R,N,V_activityListener
audioPowerUpdateListener
T@"<SVXAudioPowerUpdateListening>",R,N,V_audioPowerUpdateListener
SVXAnnouncer.m
Announcer class %@ is expected to override +[SVXAnnouncer protocol] method and return a non null protocol.
Announcer class %@ is expected to conform to protocol %@.
-[SVXAnnouncer addListener:]
-[SVXAnnouncer removeListener:]
-[SVXAnnouncer forwardInvocation:]_block_invoke
v16@?0@"NSSet"8
Subclass Responsibility: Announcer class %@ is expected to override +[SVXAnnouncer protocol] method and return a non null protocol.
itemURL
numberOfLoops
fadeInDuration
fadeOutDuration
itemURL = %@
numberOfLoops = %@
fadeInDuration = %@
fadeOutDuration = %@
SVXUserFeedbackAudioContent::itemURL
SVXUserFeedbackAudioContent::numberOfLoops
SVXUserFeedbackAudioContent::fadeInDuration
SVXUserFeedbackAudioContent::fadeOutDuration
T@"NSURL",R,C,N,V_itemURL
TQ,R,N,V_numberOfLoops
Td,R,N,V_fadeInDuration
Td,R,N,V_fadeOutDuration
parsingService
T@"<SVXExpressionParsingServing>",&,N,V_parsingService
%@ {identifier = %@, queue = %@, options = (%@)}
Main Queue Performer
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
SVXSpeechSynthesisErrorDomain
-[SVXDeviceSetupManager prepareForSetupWithContext:completion:]
-[SVXDeviceSetupManager beginSetupWithContext:]
-[SVXDeviceSetupManager endSetup]
-[SVXDeviceSetupManager evictCachedContents]
-[SVXDeviceSetupManager _prepareForSetupWithContext:completion:]
RegionCode
-[SVXDeviceSetupManager _prepareForSetupWithContext:completion:]_block_invoke
v24@?0@"SVXDeviceSetupFlowScene"8@"NSError"16
v16@?0@"<SVXDeviceSetupFlowSiriCapabilitiesHintMutating>"8
-[SVXDeviceSetupManager _prepareForSetupWithContext:completion:]_block_invoke_3
v16@?0B8B12
-[SVXDeviceSetupManager _prepareForSetupWithContext:completion:]_block_invoke_2
143465
143463
HomePod Siri Device Setup Flow (Build %@)
-[SVXDeviceSetupManager _prepareSiriIntroSceneWithLanguageCode:gender:completion:]
-[SVXDeviceSetupManager _prepareSiriIntroSceneWithLanguageCode:gender:completion:]_block_invoke
-[SVXDeviceSetupManager _prepareTryHeySiriCapabilitiesSceneWithLanguageCode:gender:completion:]
-[SVXDeviceSetupManager _prepareTryHeySiriCapabilitiesSceneWithLanguageCode:gender:completion:]_block_invoke
v32@?0@"SVXSpeechSynthesisWordTiming"8Q16^B24
-[SVXDeviceSetupManager _prepareSiriCapabilitiesSceneWithID:languageCode:gender:hint:completion:]
zh-CN
yue-CN
zh-HK
-[SVXDeviceSetupManager _prepareSiriCapabilitiesSceneWithID:languageCode:gender:hint:completion:]_block_invoke
-[SVXDeviceSetupManager _prepareTryHeySiriMusicSceneWithLanguageCode:gender:completion:]
-[SVXDeviceSetupManager _prepareTryHeySiriMusicSceneWithLanguageCode:gender:completion:]_block_invoke
-[SVXDeviceSetupManager _prepareTryHeySiriNewsSceneWithLanguageCode:gender:completion:]
-[SVXDeviceSetupManager _prepareTryHeySiriNewsSceneWithLanguageCode:gender:completion:]_block_invoke
-[SVXDeviceSetupManager _prepareTryHeySiriNewsSceneWithLanguageCode:gender:completion:]_block_invoke_2
-[SVXDeviceSetupManager _prepareTryHeySiriWeatherSceneWithLanguageCode:gender:completion:]
-[SVXDeviceSetupManager _prepareTryHeySiriWeatherSceneWithLanguageCode:gender:completion:]_block_invoke
-[SVXDeviceSetupManager _prepareTryHeySiriWeatherSceneWithLanguageCode:gender:completion:]_block_invoke_2
%@:%@
SVXStoreDemoGetLocalizationKey
clientServiceServer
T@"SVXClientServiceServer",R,N
nowPlayingObserver
T@"SVXNowPlayingObserver",R,N
T@"SVXServiceCommandHandler",R,N
sessionManager
T@"SVXSessionManager",R,N
speechSynthesizer
T@"SVXSpeechSynthesizer",R,N
systemObserver
T@"SVXSystemObserver",R,N
deviceSetupManager
T@"SVXDeviceSetupManager",R,N
dictionaryRepresentation
T@"NSDictionary",R,C,N,V_dictionaryRepresentation
priority
speakableText
speakableContext
localizationKey
presynthesizedAudio
streamID
priority = %ld (%@)
options = %lu [%@]
speakableText = %@
speakableContext = %@
localizationKey = %@
presynthesizedAudio = %@
streamID = %@
SVXSpeechSynthesisRequest::priority
SVXSpeechSynthesisRequest::options
SVXSpeechSynthesisRequest::speakableText
SVXSpeechSynthesisRequest::speakableContext
SVXSpeechSynthesisRequest::localizationKey
SVXSpeechSynthesisRequest::presynthesizedAudio
SVXSpeechSynthesisRequest::streamID
Tq,R,N,V_priority
TQ,R,N,V_options
T@"NSString",R,C,N,V_speakableText
T@"NSDictionary",R,C,N,V_speakableContext
T@"NSString",R,C,N,V_localizationKey
T@"SVXSpeechSynthesisAudio",R,C,N,V_presynthesizedAudio
T@"NSString",R,C,N,V_streamID
text
isPhonetic
text = %@
isPhonetic = %@
SVXUserFeedbackVoiceContent::text
SVXUserFeedbackVoiceContent::isPhonetic
T@"NSString",R,C,N,V_text
TB,R,N,V_isPhonetic
-[SVXClientAudioSystemService handleAudioSessionWillBecomeActive:activationContext:deactivationContext:]_block_invoke
-[SVXClientAudioSystemService handleAudioSessionDidBecomeActive:activationContext:deactivationContext:]_block_invoke
T@"<SVXClientAudioSystemServiceDelegate>",W,N
T@"<SVXClientAudioSystemServiceDelegate>",W,N,V_delegate
medium
high
SVXServiceCommandHandlerUICloseAssistant.m
[command isKindOfClass:[SAUICloseAssistant class]]
-[SVXClientSessionService handleWillChangeStateFrom:to:]
-[SVXClientSessionService handleDidChangeStateFrom:to:]
-[SVXClientSessionService handleDidChangeStateFrom:to:]_block_invoke
-[SVXClientSessionService handleWillPresentFeedbackWithDialogIdentifier:]
-[SVXClientSessionService handleWillStartSoundWithID:]
-[SVXClientSessionService handleDidStartSoundWithID:]
-[SVXClientSessionService handleDidStopSoundWithID:error:]
-[SVXClientSessionService handleWillBecomeActiveWithActivationContext:]
-[SVXClientSessionService handleWillBecomeActiveWithActivationContext:]_block_invoke
-[SVXClientSessionService handleDidBecomeActiveWithActivationContext:]
-[SVXClientSessionService handleDidBecomeActiveWithActivationContext:]_block_invoke
-[SVXClientSessionService handleWillResignActiveWithOptions:duration:]
-[SVXClientSessionService handleWillResignActiveWithOptions:duration:]_block_invoke
-[SVXClientSessionService handleDidResignActiveWithDeactivationContext:]
-[SVXClientSessionService handleDidResignActiveWithDeactivationContext:]_block_invoke
v12@?0B8
-[SVXClientSessionService clientServiceDidChange]_block_invoke_2
-[SVXClientSessionService clientServiceDidChange]_block_invoke
-[SVXClientSessionService fetchStateWithCompletion:]
-[SVXClientSessionService fetchStateWithCompletion:]_block_invoke
-[SVXClientSessionService _setCurrentState:]
T@"<SVXClientSessionServiceDelegate>",W,N
T@"<SVXClientSessionServiceDelegate>",W,N,V_delegate
ready
inProgress
done
command
T@"SAUIDelayedActionCommand",R,C,N,V_command
taskTracker
T@"<SVXTaskTracking>",R,N,V_taskTracker
AssistantServices
Intents
SiriCore
SiriVOX
\ESC
com.apple.%@
/System/Library/PrivateFrameworks/%@.framework
/System/Library/Frameworks/%@.framework
true
false
%@ {identifier = %@, instanceClass = %@, performer = %@}
isActive
TB,N,V_isActive
T@"NSString",R,C,N,V_identifier
instanceClass
T#,R,N,V_instanceClass
performer
T@"<SVXPerforming>",R,N,V_performer
isFixingProblems
problems
isFixingProblems = %@
problems = %lu [%@]
SVXDeviceProblemsState::isFixingProblems
SVXDeviceProblemsState::problems
TB,R,N,V_isFixingProblems
TQ,R,N,V_problems
origin
sessionUUID
requestUUID
aceId
refId
dialogIdentifier
dialogPhase
isUUFR
listensAfterSpeaking
listenAfterSpeakingBehavior
activationContext
deactivationContext
error
origin = %ld (%@)
sessionUUID = %@
requestUUID = %@
aceId = %@
refId = %@
dialogIdentifier = %@
dialogPhase = %@
isUUFR = %@
listensAfterSpeaking = %@
listenAfterSpeakingBehavior = %@
activationContext = %@
deactivationContext = %@
error = %@
SVXTaskContext::origin
SVXTaskContext::timestamp
SVXTaskContext::sessionUUID
SVXTaskContext::requestUUID
SVXTaskContext::aceId
SVXTaskContext::refId
SVXTaskContext::dialogIdentifier
SVXTaskContext::dialogPhase
SVXTaskContext::isUUFR
SVXTaskContext::listensAfterSpeaking
SVXTaskContext::listenAfterSpeakingBehavior
SVXTaskContext::activationContext
SVXTaskContext::deactivationContext
SVXTaskContext::error
Tq,R,N,V_origin
T@"NSUUID",R,C,N,V_sessionUUID
T@"NSUUID",R,C,N,V_requestUUID
T@"NSString",R,C,N,V_aceId
T@"NSString",R,C,N,V_refId
T@"NSString",R,C,N,V_dialogIdentifier
T@"NSString",R,C,N,V_dialogPhase
TB,R,N,V_isUUFR
TB,R,N,V_listensAfterSpeaking
T@"SAUIListenAfterSpeakingBehavior",R,C,N,V_listenAfterSpeakingBehavior
T@"SVXActivationContext",R,C,N,V_activationContext
T@"SVXDeactivationContext",R,C,N,V_deactivationContext
T@"NSError",R,C,N,V_error
female
male
com.apple.SiriVOXService.client-service
com.apple.SiriVOXService.device-setup
com.apple.SiriVOXService.now-playing-observation
com.apple.SiriVOXService.service-command
com.apple.SiriVOXService.session-manager
com.apple.SiriVOXService.speech-synthesis
com.apple.SiriVOXService.system-observation
com.apple.SiriVOXService.user-feedback
sceneID
displayKeyFrames
siriCapabilitiesHint
sceneID = %ld (%@)
displayKeyFrames = %@
siriCapabilitiesHint = %@
SVXDeviceSetupFlowScene::sceneID
SVXDeviceSetupFlowScene::speakableText
SVXDeviceSetupFlowScene::displayKeyFrames
SVXDeviceSetupFlowScene::siriCapabilitiesHint
Tq,R,N,V_sceneID
T@"NSArray",R,C,N,V_displayKeyFrames
T@"SVXDeviceSetupFlowSiriCapabilitiesHint",R,C,N,V_siriCapabilitiesHint
synthesizing
speaking
v32@?0@"NSString"8@"SVXModule"16^B24
waitsUntilDone
allowsFastPath
idle
listening
thinking
presenting
com.apple.emergencycall_myriad
SVXServiceCommandHandlerClientCoordinationPhoneCall.m
[command isKindOfClass:[SAPhoneClientCoordinationPhoneCall class]]
-[SVXServiceCommandHandlerClientCoordinationPhoneCall handleCommand:withContext:taskTracker:completion:]_block_invoke
was not
no response
unsupported type
-[_SVXRemoteExpressionParsingService parseExpressions:targetDevice:reply:]_block_invoke
v16@?0@"SABaseCommand"8
-[_SVXRemoteExpressionParsingService parseExpressions:targetDevice:reply:]
aceHandler
T@"<SVXAceCommandHandling>",&,N,V_aceHandler
type = %ld (%@)
SVXButtonEvent::type
SVXButtonEvent::timestamp
playsSound
audio
voice
button
client
myriad
server
SVXClientServiceServerConnection
-[SVXClientServiceServerConnection pingWithReply:]
-[SVXClientServiceServerConnection fetchSessionStateWithCompletion:]
-[SVXClientServiceServerConnection fetchSessionActivityStateWithCompletion:]
-[SVXClientServiceServerConnection preheatWithActivationSource:]
-[SVXClientServiceServerConnection prewarmWithContext:completion:]
-[SVXClientServiceServerConnection activateWithContext:completion:]
-[SVXClientServiceServerConnection deactivateWithContext:completion:]
-[SVXClientServiceServerConnection performManualEndpointing]
-[SVXClientServiceServerConnection transitToAutomaticEndpointing]
-[SVXClientServiceServerConnection fetchAudioPowerWithType:completion:]
-[SVXClientServiceServerConnection prewarmRequest:]
-[SVXClientServiceServerConnection synthesizeRequest:completion:]
-[SVXClientServiceServerConnection enqueueSpeechSynthesisRequest:completion:]
-[SVXClientServiceServerConnection cancelPendingSpeechSynthesisRequest:]
-[SVXClientServiceServerConnection stopSpeechSynthesisRequest:]
-[SVXClientServiceServerConnection setDeviceSetupContext:]
-[SVXClientServiceServerConnection prepareForDeviceSetupWithContext:completion:]
-[SVXClientServiceServerConnection requestPermissionToActivateWithContext:completion:]
-[SVXClientServiceServerConnection requestPermissionToActivateWithContext:completion:]_block_invoke_2
-[SVXClientServiceServerConnection notifyWillActivateWithContext:]
-[SVXClientServiceServerConnection notifyWillActivateWithContext:]_block_invoke_2
-[SVXClientServiceServerConnection notifyDidActivateWithContext:]
-[SVXClientServiceServerConnection notifyDidActivateWithContext:]_block_invoke_2
-[SVXClientServiceServerConnection notifyDidNotActivateWithContext:error:]
-[SVXClientServiceServerConnection notifyDidNotActivateWithContext:error:]_block_invoke_2
-[SVXClientServiceServerConnection notifyWillDeactivateWithContext:]
-[SVXClientServiceServerConnection notifyWillDeactivateWithContext:]_block_invoke_2
-[SVXClientServiceServerConnection notifyDidDeactivateWithContext:]
-[SVXClientServiceServerConnection notifyDidDeactivateWithContext:]_block_invoke_2
-[SVXClientServiceServerConnection notifyWillChangeSessionStateFrom:to:]
-[SVXClientServiceServerConnection notifyWillChangeSessionStateFrom:to:]_block_invoke_2
-[SVXClientServiceServerConnection notifyDidChangeSessionStateFrom:to:]
-[SVXClientServiceServerConnection notifyDidChangeSessionStateFrom:to:]_block_invoke_2
-[SVXClientServiceServerConnection notifySessionWillPresentFeedbackWithDialogIdentifier:]
-[SVXClientServiceServerConnection notifySessionWillPresentFeedbackWithDialogIdentifier:]_block_invoke_2
-[SVXClientServiceServerConnection notifySessionWillStartSoundWithID:]
-[SVXClientServiceServerConnection notifySessionWillStartSoundWithID:]_block_invoke_2
-[SVXClientServiceServerConnection notifySessionDidStartSoundWithID:]
-[SVXClientServiceServerConnection notifySessionDidStartSoundWithID:]_block_invoke_2
-[SVXClientServiceServerConnection notifySessionDidStopSoundWithID:error:]
-[SVXClientServiceServerConnection notifySessionDidStopSoundWithID:error:]_block_invoke_2
-[SVXClientServiceServerConnection notifySessionWillBecomeActiveWithActivationContext:]
-[SVXClientServiceServerConnection notifySessionWillBecomeActiveWithActivationContext:]_block_invoke_2
-[SVXClientServiceServerConnection notifySessionDidBecomeActiveWithActivationContext:]
-[SVXClientServiceServerConnection notifySessionDidBecomeActiveWithActivationContext:]_block_invoke_2
-[SVXClientServiceServerConnection notifySessionWillResignActiveWithOptions:duration:]
-[SVXClientServiceServerConnection notifySessionWillResignActiveWithOptions:duration:]_block_invoke_2
-[SVXClientServiceServerConnection notifySessionDidResignActiveWithDeactivationContext:]
-[SVXClientServiceServerConnection notifySessionDidResignActiveWithDeactivationContext:]_block_invoke_2
-[SVXClientServiceServerConnection notifyWillBeginUpdateAudioPowerWithType:wrapper:]
-[SVXClientServiceServerConnection notifyWillBeginUpdateAudioPowerWithType:wrapper:]_block_invoke_2
-[SVXClientServiceServerConnection notifyDidEndUpdateAudioPowerWithType:]
-[SVXClientServiceServerConnection notifyDidEndUpdateAudioPowerWithType:]_block_invoke_2
-[SVXClientServiceServerConnection notifyAudioSessionWillBecomeActive:activationContext:deactivationContext:]
-[SVXClientServiceServerConnection notifyAudioSessionWillBecomeActive:activationContext:deactivationContext:]_block_invoke_2
-[SVXClientServiceServerConnection notifyAudioSessionDidBecomeActive:activationContext:deactivationContext:]
-[SVXClientServiceServerConnection notifyAudioSessionDidBecomeActive:activationContext:deactivationContext:]_block_invoke_2
-[SVXClientServiceServerConnection _connectionInterrupted]
-[SVXClientServiceServerConnection _connectionInvalidated]
deviceSetupContext
T@"SVXDeviceSetupContext",R,C,N,V_deviceSetupContext
homeNewsWeather
homeWeatherClock
homeClockWeather
homeClockMusic
SVXAudioServicesActivateWithTimeout
sampleRate
formatID
formatFlags
bytesPerPacket
framesPerPacket
bytesPerFrame
channelsPerFrame
bitsPerChannel
reserved
sampleRate = %@
formatID = %@
formatFlags = %@
bytesPerPacket = %@
framesPerPacket = %@
bytesPerFrame = %@
channelsPerFrame = %@
bitsPerChannel = %@
reserved = %@
SVXAudioStreamBasicDescription::sampleRate
SVXAudioStreamBasicDescription::formatID
SVXAudioStreamBasicDescription::formatFlags
SVXAudioStreamBasicDescription::bytesPerPacket
SVXAudioStreamBasicDescription::framesPerPacket
SVXAudioStreamBasicDescription::bytesPerFrame
SVXAudioStreamBasicDescription::channelsPerFrame
SVXAudioStreamBasicDescription::bitsPerChannel
SVXAudioStreamBasicDescription::reserved
Td,R,N,V_sampleRate
TI,R,N,V_formatID
TI,R,N,V_formatFlags
TI,R,N,V_bytesPerPacket
TI,R,N,V_framesPerPacket
TI,R,N,V_bytesPerFrame
TI,R,N,V_channelsPerFrame
TI,R,N,V_bitsPerChannel
TI,R,N,V_reserved
com.apple.SiriVOXService.client
iCloud
iTunes
HomeKit
wiFi
wiFiPerformance
internet
hardware
bluetooth
thermal
recovery
stereoNotFound
stereoVersion
stereoError
WiFi8021x
networkProfile
networkNotShareable
networkProfileRequired
SVXServiceCommandHandlerUIAddViews.m
[command isKindOfClass:[SAUIAddViews class]]
v20@?0B8@"SAUIAddViews"12
v16@?0@"<SVXTaskContextMutating>"8
-[SVXServiceCommandHandlerUIAddViews handleCommand:withContext:taskTracker:completion:]
-[SVXServiceCommandHandlerUIAddViews handleCommand:withContext:taskTracker:completion:]_block_invoke
-[SVXServiceCommandHandlerUIAddViews handleAceView:isExpository:taskTracker:completion:]_block_invoke
-[SVXServiceCommandHandlerUIAddViews handleAceView:isExpository:taskTracker:completion:]
_SVXServiceCommandHandlerUIAddViewsGetSpeakableTextFromAceView
_SVXServiceCommandHandlerUIAddViewsGetSpeakableTextFromAceView_block_invoke
v32@?0@"SAUIListItem"8Q16^B24
activation
deactivation
contentType
audioContent
voiceContent
identifier = %@
contentType = %ld (%@)
audioContent = %@
voiceContent = %@
SVXUserFeedback::identifier
SVXUserFeedback::contentType
SVXUserFeedback::audioContent
SVXUserFeedback::voiceContent
Tq,R,N,V_contentType
T@"SVXUserFeedbackAudioContent",R,C,N,V_audioContent
T@"SVXUserFeedbackVoiceContent",R,C,N,V_voiceContent
-[SVXClientServiceConnection initWithComponents:delegate:]
Client Service Connection
-[SVXClientServiceConnection initWithQueuePerformer:activationService:audioSystemService:deviceService:inputAudioPowerService:outputAudioPowerService:sessionService:speechSynthesisService:delegate:]
-[SVXClientServiceConnection pingWithReply:]
-[SVXClientServiceConnection pingWithReply:]_block_invoke_2
-[SVXClientServiceConnection activateWithContext:completion:]
-[SVXClientServiceConnection activateWithContext:completion:]_block_invoke_2
-[SVXClientServiceConnection deactivateWithContext:completion:]
-[SVXClientServiceConnection deactivateWithContext:completion:]_block_invoke_2
-[SVXClientServiceConnection performManualEndpointing]
-[SVXClientServiceConnection performManualEndpointing]_block_invoke_2
-[SVXClientServiceConnection transitToAutomaticEndpointing]
-[SVXClientServiceConnection transitToAutomaticEndpointing]_block_invoke_2
-[SVXClientServiceConnection fetchSessionStateWithCompletion:]
-[SVXClientServiceConnection fetchSessionStateWithCompletion:]_block_invoke_2
-[SVXClientServiceConnection fetchSessionActivityStateWithCompletion:]
-[SVXClientServiceConnection fetchSessionActivityStateWithCompletion:]_block_invoke_2
-[SVXClientServiceConnection preheatWithActivationSource:]
-[SVXClientServiceConnection preheatWithActivationSource:]_block_invoke_2
-[SVXClientServiceConnection prewarmWithContext:completion:]
-[SVXClientServiceConnection prewarmWithContext:completion:]_block_invoke_2
-[SVXClientServiceConnection fetchAudioPowerWithType:completion:]
-[SVXClientServiceConnection fetchAudioPowerWithType:completion:]_block_invoke_2
-[SVXClientServiceConnection prewarmRequest:]
-[SVXClientServiceConnection prewarmRequest:]_block_invoke_2
-[SVXClientServiceConnection synthesizeRequest:completion:]
-[SVXClientServiceConnection synthesizeRequest:completion:]_block_invoke_2
-[SVXClientServiceConnection enqueueSpeechSynthesisRequest:completion:]
-[SVXClientServiceConnection enqueueSpeechSynthesisRequest:completion:]_block_invoke_2
-[SVXClientServiceConnection cancelPendingSpeechSynthesisRequest:]
-[SVXClientServiceConnection cancelPendingSpeechSynthesisRequest:]_block_invoke_2
-[SVXClientServiceConnection stopSpeechSynthesisRequest:]
-[SVXClientServiceConnection stopSpeechSynthesisRequest:]_block_invoke_2
-[SVXClientServiceConnection setDeviceSetupContext:]
-[SVXClientServiceConnection setDeviceSetupContext:]_block_invoke_2
-[SVXClientServiceConnection prepareForDeviceSetupWithContext:completion:]
-[SVXClientServiceConnection prepareForDeviceSetupWithContext:completion:]_block_invoke_2
-[SVXClientServiceConnection requestPermissionToActivateWithContext:completion:]
-[SVXClientServiceConnection notifyWillActivateWithContext:]
-[SVXClientServiceConnection notifyDidActivateWithContext:]
-[SVXClientServiceConnection notifyDidNotActivateWithContext:error:]
-[SVXClientServiceConnection notifyWillDeactivateWithContext:]
-[SVXClientServiceConnection notifyDidDeactivateWithContext:]
-[SVXClientServiceConnection notifyWillChangeSessionStateFrom:to:]
-[SVXClientServiceConnection notifyDidChangeSessionStateFrom:to:]
-[SVXClientServiceConnection notifySessionWillPresentFeedbackWithDialogIdentifier:]
-[SVXClientServiceConnection notifySessionWillStartSoundWithID:]
-[SVXClientServiceConnection notifySessionDidStartSoundWithID:]
-[SVXClientServiceConnection notifySessionDidStopSoundWithID:error:]
-[SVXClientServiceConnection notifySessionWillBecomeActiveWithActivationContext:]
-[SVXClientServiceConnection notifySessionDidBecomeActiveWithActivationContext:]
-[SVXClientServiceConnection notifySessionWillResignActiveWithOptions:duration:]
-[SVXClientServiceConnection notifySessionDidResignActiveWithDeactivationContext:]
-[SVXClientServiceConnection notifyWillBeginUpdateAudioPowerWithType:wrapper:]
-[SVXClientServiceConnection notifyDidEndUpdateAudioPowerWithType:]
-[SVXClientServiceConnection notifyAudioSessionWillBecomeActive:activationContext:deactivationContext:]
-[SVXClientServiceConnection notifyAudioSessionDidBecomeActive:activationContext:deactivationContext:]
-[SVXClientServiceConnection connectionInterrupted]
-[SVXClientServiceConnection connectionInvalidated]
T@"<SVXPerforming>",R,N
T@"<SVXClientActivationServicing>",R,N
T@"<SVXClientAudioSystemServicing>",R,N
T@"<SVXClientDeviceServicing>",R,N
T@"<SVXClientAudioPowerServicing>",R,N
T@"<SVXClientSessionServicing>",R,N
T@"<SVXClientSpeechSynthesisServicing>",R,N
%@ {reason = %@, audioSessionID = %lu, taskTracker = %@}
-[SVXAudioSessionAssertion dealloc]
-[SVXAudioSessionAssertion initWithReason:audioSessionID:taskTracker:]
-[SVXAudioSessionAssertion relinquish]
audioSessionID
TI,R,N,V_audioSessionID
reason
T@"NSString",R,C,N,V_reason
-[SVXDaemon startWithPlatformDependencies:]
-[SVXDaemon startWithPlatformDependencies:]_block_invoke
-[SVXDaemon stop]
-[SVXDaemon stop]_block_invoke
-[SVXSessionManager preheatWithActivationSource:]
-[SVXSessionManager prewarmWithContext:completion:]
-[SVXSessionManager activateWithContext:completion:]
-[SVXSessionManager deactivateWithContext:completion:]
v16@?0q8
-[SVXSessionManager shouldAbortAnotherDeviceBetter:]
-[SVXSessionManager shouldAbortAnotherDeviceBetter:]_block_invoke
-[SVXSessionManager shouldAbortAnotherDeviceBetter:]_block_invoke_2
-[SVXSessionManager shouldContinue:]
-[SVXSessionManager shouldContinue:]_block_invoke
-[SVXSessionManager shouldUnduck:]
-[SVXSessionManager shouldUnduck:]_block_invoke
v16@?0@"AFRequestInfo"8
v32@?0q8Q16@"NSDictionary"24
v16@?0@"AFSpeechRequestOptions"8
-[SVXSessionManager startWithModuleInstanceProvider:platformDependencies:]_block_invoke_2
v24@?0q8d16
v16@?0@"AFClockAlarmSnapshot"8
v16@?0@"AFClockTimerSnapshot"8
v16@?0Q8
-[SVXSessionManager startWithModuleInstanceProvider:platformDependencies:]
com.apple.SiriVOX.voice-trigger
com.apple.coreaudio.borealisTrigger
Audio/Video
v12@?0f8
-[SVXSessionManager notifyObserver:didReceiveNotificationWithToken:]
-[SVXSessionManager notifyObserver:didChangeStateFrom:to:]
-[SVXSessionManager clockAlarmObserver:alarmDidFire:]
-[SVXSessionManager clockAlarmObserver:alarmDidDismiss:]
-[SVXSessionManager clockTimerObserver:timerDidFire:]
-[SVXSessionManager clockTimerObserver:timerDidDismiss:]
-[SVXSessionManager homeAnnouncementObserver:snapshotDidUpdateFrom:to:]
-[SVXSessionManager queue:didEnqueueObjects:]_block_invoke
-[SVXSessionManager _currentSession:]
-[SVXSessionManager _processNextOperations]
-[SVXSessionManager _processNextOperations]_block_invoke
v24@?0@"SVXActivationContext"8@?<v@?@"NSError">16
v24@?0@"SVXDeactivationContext"8@?<v@?>16
-[SVXSessionManager _preheatWithActivationSource:]
-[SVXSessionManager _prewarmWithContext:completion:]
-[SVXSessionManager _activateWithContext:activityState:completion:]
-[SVXSessionManager _deactivateWithContext:completion:]
-[SVXSessionManager _handleRemoteRequestDismissalWithReason:options:analyticsContext:completion:]
unknown
activityUUID
com.apple.siri.ui.begin
com.apple.siri.ui.end
-[SVXSessionManager _fetchExperimentContext]
-[SVXSessionManager _fetchExperimentContext]_block_invoke
v24@?0@"AFExperimentContext"8@"NSError"16
-[SVXSessionManager _handleFetchedExperimentContext:]
v16@?0@"<SVXDeviceSetupContextMutating>"8
-[SVXSessionManager _fetchStereoPartnerLastMyriadWinDate]
-[SVXSessionManager _fetchStereoPartnerLastMyriadWinDate]_block_invoke
v24@?0@"NSDate"8@"NSError"16
-[SVXSessionManager _handleFetchedStereoPartnerLastMyriadWinDate:]
-[SVXSessionManager _fetchStereoPairStateWithCompletion:]
-[SVXSessionManager _fetchStereoPairStateWithCompletion:]_block_invoke
-[SVXSessionManager _handleSpeechSynthesizer:willStartRequest:taskTracker:]
-[SVXSessionManager _handleSpeechSynthesizer:didStartRequest:record:taskTracker:]
-[SVXSessionManager _handleSpeechSynthesizer:didFinishRequest:utteranceInfo:record:taskTracker:]
-[SVXSessionManager _handleSpeechSynthesizer:didCancelRequest:taskTracker:]
-[SVXSessionManager _handleSpeechSynthesizer:didInterruptRequest:taskTracker:]
-[SVXSessionManager _handleSpeechSynthesizer:didFailRequest:taskTracker:error:]
-[SVXSessionManager _handleNowPlayingObserver:playbackStateDidChangeFrom:to:]
-[SVXSessionManager _handleSystemVolumeDataSource:didChangeVolumeForAudioCategory:from:toLevel:]
-[SVXSessionManager _handleClockAlarmsObserver:snapshotDidUpdateFrom:to:]
-[SVXSessionManager _handleClockTimersObserver:snapshotDidUpdateFrom:to:]
-[SVXSessionManager _handleHomeAnnouncementObserver:stateDidUpdateFrom:to:]
-[SVXSessionManager _handleDeviceProblemsStateChanged:]
-[SVXSessionManager _handleMyriadForActivationContext:]
-[SVXSessionManager _updateDeviceSetupContext:]
heySiriCapabilities
siriCapabilityHome
siriCapabilityNews
siriCapabilityWeather
heySiriMusic
siriCapabilityClock
heySiriNews
siriCapabilityMusic
heySiriWeather
SVXServiceCommandHandlerUISayIt.m
[command isKindOfClass:[SAUISayIt class]]
v20@?0B8@"NSArray"12
-[SVXServiceCommandHandlerUISayIt handleCommand:withContext:taskTracker:completion:]_block_invoke
-[SVXServiceCommandHandlerUISayIt handleCommand:withContext:taskTracker:completion:]
TwoShot-b238.wav
SessionInactive-b238.wav
Phatic
_SVXSoundID
%@-%@-%@
Female
Male
v32@?0@"NSURL"8Q16^B24
en_US
inactive
resigningActive
becomingActive
active
immediate
afterNextWord
-[SVXClientAudioPowerService handleWillBeginUpdateAudioPowerWithProvider:]
-[SVXClientAudioPowerService handleDidEndUpdateAudioPower]
v24@?0@"AFXPCWrapper"8@"NSError"16
-[SVXClientAudioPowerService clientServiceDidChange]_block_invoke
-[SVXClientAudioPowerService beginUpdateWithFrequency:]
-[SVXClientAudioPowerService endUpdate]
com.apple.SiriVOX.client.audio-power-updater
T@"<SVXClientAudioPowerServiceDelegate>",W,N
T@"<SVXClientAudioPowerServiceDelegate>",W,N,V_delegate
-[SVXSpeechSynthesizer beginUpdateAudioPowerWithCompletion:]
-[SVXSpeechSynthesizer endUpdateAudioPower]
-[SVXSpeechSynthesizer outputVoiceChanged:]
-[SVXSpeechSynthesizer languageCodeChanged:]
-[SVXSpeechSynthesizer speechSynthesizer:didStartSpeakingRequest:]
-[SVXSpeechSynthesizer speechSynthesizer:didFinishSpeakingRequest:withInstrumentMetrics:]
-[SVXSpeechSynthesizer speechSynthesizer:didFinishSpeakingRequest:successfully:withError:]
-[SVXSpeechSynthesizer speechSynthesizer:didStartPresynthesizedAudioRequest:]
-[SVXSpeechSynthesizer speechSynthesizer:didStopPresynthesizedAudioRequest:atEnd:error:]
-[SVXSpeechSynthesizer speechSynthesizer:didFinishPresynthesizedAudioRequest:withInstrumentMetrics:error:]
-[SVXSpeechSynthesizer speechSynthesizer:withRequest:didReceiveTimingInfo:]
-[SVXSpeechSynthesizer speechSynthesizer:withRequest:didReceiveTimingInfo:]_block_invoke
-[SVXSpeechSynthesizer speechSynthesizer:didFinishSynthesisRequest:withInstrumentMetrics:error:]
-[SVXSpeechSynthesizer _configuredSpeechRequestForContext:]
-[SVXSpeechSynthesizer _prewarm]
-[SVXSpeechSynthesizer _prewarmWithContext:]
-[SVXSpeechSynthesizer _configureWithConfiguration:]
-[SVXSpeechSynthesizer _configureSpeechSynthesizerWithAudioSessionID:]
-[SVXSpeechSynthesizer _beginUpdateAudioPowerWithCompletion:]
v16@?0@"AFXPCWrapper"8
-[SVXSpeechSynthesizer _endUpdateAudioPower]
-[SVXSpeechSynthesizer _handleDidStartSpeakingWithSpeechRequest:timestamp:]
-[SVXSpeechSynthesizer _handleDidFinishSpeakingWithSpeechRequest:instrumentMetrics:]
utterance
-[SVXSpeechSynthesizer _handleDidFinishSpeakingWithSpeechRequest:success:error:]
-[SVXSpeechSynthesizer _handleDidStartPresynthesizedAudioRequest:timestamp:]
-[SVXSpeechSynthesizer _handleDidStopPresynthesizedAudioRequest:success:error:]
-[SVXSpeechSynthesizer _handleDidFinishPresynthesizedAudioRequest:instrumentMetrics:error:]
-[SVXSpeechSynthesizer _handleDidReceiveSpeechWordTimingInfoArray:forSpeechRequest:]
-[SVXSpeechSynthesizer _handleDidFinishSynthesizingForSpeechRequest:instrumentMetrics:error:]
B24@?0@"SVXSpeechSynthesisContext"8^B16
character_count
voice_asset_key
is_warm_start
is_cache_hit_from_disk
is_server_tts
tts_synthesis_latency
tts_total_latency
audio_queue_latency
synthesis_to_speech_time
wait_for_synthesis_to_finish_time
audio_duration
is_speech_request
is_cache_hit_from_memory
synthesis_to_speech_time_gap
audio_start_timestamp_diffs
-[SVXSpeechSynthesizer _enqueueContext:]
-[SVXSpeechSynthesizer _enqueueContext:]_block_invoke
v32@?0@"SVXSpeechSynthesisContext"8Q16^B24
-[SVXSpeechSynthesizer _processPendingContexts]
-[SVXSpeechSynthesizer _processPendingContexts]_block_invoke
-[SVXSpeechSynthesizer _startContext:]
Speech Synthesis
-[SVXSpeechSynthesizer _startContext:]_block_invoke_2
-[SVXSpeechSynthesizer _startContext:]_block_invoke
v24@?0@"SVXAudioSessionAssertion"8@"NSError"16
v16@?0@"<SVXAudioSessionProviding>"8
-[SVXSpeechSynthesizer _continueContext:error:]
-[SVXSpeechSynthesizer _startPresynthesizedAudioRequestForContext:error:]
-[SVXSpeechSynthesizer _startSpeechRequestForContext:error:]
-[SVXSpeechSynthesizer _cancelPendingContextsAtIndexes:]
v16@?0@"SVXSpeechSynthesisContext"8
-[SVXSpeechSynthesizer _stopCurrentSpeakingContextWithInterruptionBehavior:]
B32@?0@"SVXSpeechSynthesisContext"8Q16^B24
-[SVXSpeechSynthesizer _finalizeContext:withResultType:utterance:error:]
-[SVXNowPlayingObserver _handleNowPlayingAppPlaybackStateChange:]
v12@?0I8
sessionListening
sessionThinking
sessionPresenting
sessionBecomeActive
sessionResignActive
requestBegin
requestEnd
speechTwoShot
serviceCommand
audioSessionAcquisition
allowsSynthesizingOnServer
\mrk=play=phat\
SVXSpeechSynthesisCreateLocaleFromLanguageCode
SVXSpeechSynthesisGetLocale
SVXSpeechSynthesisGetOutputVoiceInfo
%@ {context = %@, instrumentationContext = %@}
context
T@"SVXTaskContext",R,C,N
parent
T@"<SVXTaskTracking>",R,N
instrumentationContext
T@"AFAnalyticsTurnBasedInstrumentationContext",R,N
TQ,R,N
T@"NSUUID",R,N
TB,R,N
T@"SAUIListenAfterSpeakingBehavior",R,N
T@"SVXActivationContext",R,N
T@"SVXDeactivationContext",R,N
T@"NSError",R,N
T@"SVXTaskContext",R,C,N,V_context
T@"<SVXTaskTracking>",R,N,V_parent
T@"AFAnalyticsTurnBasedInstrumentationContext",R,N,V_instrumentationContext
source
buttonEvent
clientInfo
userInfo
source = %ld (%@)
buttonEvent = %@
clientInfo = %@
userInfo = %@
SVXDeactivationContext::source
SVXDeactivationContext::timestamp
SVXDeactivationContext::buttonEvent
SVXDeactivationContext::clientInfo
SVXDeactivationContext::userInfo
Tq,R,N,V_source
T@"SVXButtonEvent",R,C,N,V_buttonEvent
T@"SVXClientInfo",R,C,N,V_clientInfo
T@"NSDictionary",R,C,N,V_userInfo
clearsContext
underlyingRequestNotFound
platformNotSupported
operationTypeNotSupported
noSpeakableText
noParsedSpeakableUtterance
systemEvent
requestInfo
systemEvent = %@
requestInfo = %@
SVXActivationContext::source
SVXActivationContext::timestamp
SVXActivationContext::buttonEvent
SVXActivationContext::systemEvent
SVXActivationContext::clientInfo
SVXActivationContext::requestInfo
SVXActivationContext::userInfo
T@"SVXSystemEvent",R,C,N,V_systemEvent
T@"AFRequestInfo",R,C,N,V_requestInfo
style
style = %ld (%@)
SVXDeviceSetupFlowSiriCapabilitiesHint::style
Tq,R,N,V_style
-[SVXTaskTrackingCenter beginTrackingTaskWithContext:instrumentationContext:]
-[SVXTaskTrackingCenter endTrackingTaskWithContext:]
-[SVXTaskTrackingCenter endTrackingTasksPassingTest:]
-[SVXTaskTrackingCenter endTrackingAllTasks]
-[SVXTaskTrackingCenter taskTracker:childWillBegin:]
-[SVXTaskTrackingCenter taskTrackerDidEnd:]
-[SVXTaskTrackingCenter _beginContext:]
-[SVXTaskTrackingCenter _endContext:]
-[SVXTaskTrackingCenter _endContextsPassingTest:]
playing
paused
stopped
interrupted
seeking
utteranceInfo
utteranceInfo = %@
SVXSpeechSynthesisResult::type
SVXSpeechSynthesisResult::utteranceInfo
SVXSpeechSynthesisResult::error
T@"SVXSpeechSynthesisUtteranceInfo",R,C,N,V_utteranceInfo
processIdentifier
processName
processIdentifier = %@
processName = %@
SVXClientInfo::processIdentifier
SVXClientInfo::processName
Ti,R,N,V_processIdentifier
T@"NSString",R,C,N,V_processName
com.apple.SiriVOXService.service-command.fallback
-[SVXServiceCommandHandlerFallback handleCommand:withContext:taskTracker:completion:]
Localizable
Clock
DeviceSetup
Errors
Interstitials
StoreDemo
_FEMALE
_MALE
en-US
strings
v32@?0@"NSString"8@"NSString"16^B24
%@_%@
FEMALE
MALE
languageCode
gender
hasActiveAccount
isNewsRestricted
languageCode = %@
gender = %ld (%@)
hasActiveAccount = %ld (%@)
isNewsRestricted = %ld (%@)
SVXDeviceSetupOptions::languageCode
SVXDeviceSetupOptions::gender
SVXDeviceSetupOptions::hasActiveAccount
SVXDeviceSetupOptions::isNewsRestricted
T@"NSString",R,C,N,V_languageCode
Tq,R,N,V_gender
Tq,R,N,V_hasActiveAccount
Tq,R,N,V_isNewsRestricted
SVXServiceCommandHandlerUIDelayedActionCommand.m
[command isKindOfClass:[SAUIDelayedActionCommand class]]
finished
canceled
failed
transcriptID
outputVolume
transcriptID = %ld (%@)
outputVolume = %@
SVXStoreDemo::transcriptID
SVXStoreDemo::languageCode
SVXStoreDemo::gender
SVXStoreDemo::outputVolume
Tq,R,N,V_transcriptID
Tf,R,N,V_outputVolume
%@ {operationType = %@, request = %@, languageCode = %@, gender = %@, audioSessionID = %u, taskTracker = %@}
operationType
Tq,R,N,V_operationType
request
T@"SVXSpeechSynthesisRequest",R,C,N,V_request
analyticsContext
T@"NSDictionary",R,C,N,V_analyticsContext
handledPresynthesizedAudioRequest
TB,N,V_handledPresynthesizedAudioRequest
handledSpeechRequest
TB,N,V_handledSpeechRequest
presynthesizedAudioRequest
T@"VSPresynthesizedAudioRequest",&,N,V_presynthesizedAudioRequest
speechRequest
T@"VSSpeechRequest",&,N,V_speechRequest
instrumentMetrics
T@"VSInstrumentMetrics",&,N,V_instrumentMetrics
speechWordTimingInfoArray
T@"NSArray",C,N,V_speechWordTimingInfoArray
audioSessionAssertion
T@"SVXAudioSessionAssertion",&,N,V_audioSessionAssertion
v32@?0@"NSUUID"8Q16^B24
duration
nodes
duration = %@
nodes = %@
SVXUserFeedbackScene::identifier
SVXUserFeedbackScene::duration
SVXUserFeedbackScene::nodes
Td,R,N,V_duration
T@"NSSet",R,C,N,V_nodes
Tq,N,V_sceneID
assistant
notReachable
alreadyListening
unsupportedActivationContext
droppedActivationContext
invalidConnection
wordTimings
utterance = %@
wordTimings = %@
SVXSpeechSynthesisUtteranceInfo::utterance
SVXSpeechSynthesisUtteranceInfo::wordTimings
T@"NSString",R,C,N,V_utterance
T@"NSArray",R,C,N,V_wordTimings
-[_SVXAddViewsExpressionParser parseAddViews:reply:]
-[_SVXAddViewsExpressionParser parseAddViews:reply:]_block_invoke
B32@?0@"SAAceView"8Q16^B24
ignoresLocallyParseableExpressions
TB,N,V_ignoresLocallyParseableExpressions
SVXInstrumentationNextTurnBasedContextfromContext
SVXInstrumentationNewTurnBasedContext
SVXInstrumentationEmitInvocation
SVXInstrumentationEmitUIStateTransition
SVXInstrumentationEmitDismissalUIStateTransition
SVXInstrumentationEmitUUFRSaid
(unknown: %i)
feedback
dependentNodes
feedback = %@
dependentNodes = %@
SVXUserFeedbackNode::identifier
SVXUserFeedbackNode::duration
SVXUserFeedbackNode::feedback
SVXUserFeedbackNode::dependentNodes
T@"SVXUserFeedback",R,C,N,V_feedback
T@"NSSet",R,C,N,V_dependentNodes
deactivationSource
-[SVXClientActivationService handleButtonEvent:]
-[SVXClientActivationService enqueueButtonEvent:]
-[SVXClientActivationService activateWithUserInfo:completion:]
-[SVXClientActivationService activateWithButtonEvent:userInfo:completion:]
-[SVXClientActivationService prewarmForSystemEvent:completion:]
-[SVXClientActivationService activateWithSystemEvent:userInfo:completion:]
-[SVXClientActivationService deactivateWithUserInfo:completion:]
-[SVXClientActivationService _enqueueButtonEvent:]
v32@?0@"SVXButtonEvent"8Q16^B24
-[SVXClientActivationService _processLastButtonActivationContext]
-[SVXClientActivationService _requestPermissionToActivateWithContext:]
-[SVXClientActivationService _prewarmWithContext:completion:]_block_invoke
-[SVXClientActivationService _activateWithContext:completion:]
-[SVXClientActivationService _activateWithContext:completion:]_block_invoke_2
-[SVXClientActivationService _activateWithContext:completion:]_block_invoke
-[SVXClientActivationService _deactivateWithContext:completion:]
-[SVXClientActivationService _deactivateWithContext:completion:]_block_invoke_2
-[SVXClientActivationService _deactivateWithContext:completion:]_block_invoke
-[SVXClientActivationService _performManualEndpointing]
-[SVXClientActivationService _performManualEndpointing]_block_invoke_2
-[SVXClientActivationService _transitToAutomaticEndpointing]
-[SVXClientActivationService _transitToAutomaticEndpointing]_block_invoke_2
-[SVXClientActivationService _preheatWithActivationSource:]
-[SVXClientActivationService _preheatWithActivationSource:]_block_invoke_2
-[SVXClientActivationService _startPreheatTimer]
-[SVXClientActivationService _stopPreheatTimer]
-[SVXClientActivationService _preheatTimerArrivedWithToken:]
T@"<SVXClientActivationServiceDelegate>",W,N
T@"<SVXClientActivationServiceDelegate>",W,N,V_delegate
_SVXClientActivationServiceValidateButtonEventForActivation
_SVXClientActivationServiceValidateSystemEventForActivation
SiriVOXErrorDomain
SVXServiceCommandHandlerUIDelayedActionCancelCommand.m
[command isKindOfClass:[SAUIDelayedActionCancelCommand class]]
Unable to find the delayed action cached locally to cancel.
deviceSetupFlowScene
storeDemo
orderedAlarmAndTimerIDs
speechSynthesisRequest
deviceSetupFlowScene = %@
storeDemo = %@
orderedAlarmAndTimerIDs = %@
speechSynthesisRequest = %@
audioSessionID = %@
SVXSystemEvent::type
SVXSystemEvent::timestamp
SVXSystemEvent::deviceSetupFlowScene
SVXSystemEvent::storeDemo
SVXSystemEvent::orderedAlarmAndTimerIDs
SVXSystemEvent::speechSynthesisRequest
SVXSystemEvent::audioSessionID
T@"SVXDeviceSetupFlowScene",R,C,N,V_deviceSetupFlowScene
T@"SVXStoreDemo",R,C,N,V_storeDemo
T@"NSArray",R,C,N,V_orderedAlarmAndTimerIDs
T@"SVXSpeechSynthesisRequest",R,C,N,V_speechSynthesisRequest
system
continuity
data
decoderASBD
playerASBD
data = (%ld bytes)
decoderASBD = %@
playerASBD = %@
SVXSpeechSynthesisAudio::data
SVXSpeechSynthesisAudio::decoderASBD
SVXSpeechSynthesisAudio::playerASBD
T@"NSData",R,C,N,V_data
T@"SVXAudioStreamBasicDescription",R,C,N,V_decoderASBD
T@"SVXAudioStreamBasicDescription",R,C,N,V_playerASBD
-[SAUIAssistantUtteranceView(SiriVOX) svx_parseableExpression]
-[_SVXPlayVoicemailExpressionParser parsePlayVoicemail:reply:]
-[_SVXPlayVoicemailExpressionParser parsePlayVoicemail:reply:]_block_invoke
com.apple.SiriVOXService.client-service-listener
-[SVXClientServiceServer startWithModuleInstanceProvider:platformDependencies:]
-[SVXClientServiceServer stopWithModuleInstanceProvider:]
-[SVXClientServiceServer listener:shouldAcceptNewConnection:]
-[SVXClientServiceServer clientServiceServerConnectionWasDisconnected:]
earlyDetect
borealisTrigger
-[SVXSystemObserver _startObservingMediaServerConnection]
-[SVXSystemObserver mediaServerConnectionDied:]
-[SVXSystemObserver _startObservingSystemVolume]
-[SVXSystemObserver _handleSystemVolumeChangeForCategory:volume:reason:]
-[SVXSystemObserver _fetchSystemVolumes]
-[SVXSystemObserver _startObservingInfo]
Volumes
volumeDataSource
T@"<SVXSystemVolumeDataSource>",R,N
SVXDeviceSetupCreateSpeechSynthesisRequestForSiriIntroScene
SVXDeviceSetupCreateSpeechSynthesisRequestForTryHeySiriCapabilitiesScene
SVXDeviceSetupCreateSpeechSynthesisRequestForSiriCapabilitiesScene
SVXDeviceSetupCreateSpeechSynthesisRequestForTryHeySiriMusicScene
SVXDeviceSetupCreateSpeechSynthesisRequestForTryHeySiriNewsScene
SVXDeviceSetupCreateSpeechSynthesisRequestForTryHeySiriWeatherScene
SVXDeviceSetupCreateSpeechSynthesisRequestForSiriOutroScene
v16@?0@"<SVXDeviceSetupOptionsMutating>"8
domain
T@"NSString",C,N,V_domain
count
TQ,N,V_count
deferredMessageKeys
T@"NSSet",C,N,V_deferredMessageKeys
-[SVXClientDeviceService prepareForSetupWithContext:completion:]
v24@?0@"SVXDeviceSetupFlow"8@"NSError"16
-[SVXClientDeviceService beginSetupWithContext:]
-[SVXClientDeviceService endSetup]
-[SVXClientDeviceService _prepareForSetupWithContext:completion:]
-[SVXClientDeviceService _prepareForSetupWithContext:completion:]_block_invoke_2
-[SVXClientDeviceService _prepareForSetupWithContext:completion:]_block_invoke
-[SVXClientDeviceService _updateSetupContext]
-[SVXClientDeviceService _updateSetupContext]_block_invoke
SIRI_VOX_NETWORK_ERROR_0
SIRI_VOX_WIFI_ERROR_0
SIRI_VOX_WIFI_ERROR_1
SIRI_VOX_DEVICE_PROBLEM_NETWORK_0
SIRI_VOX_DEVICE_PROBLEM_NETWORK_1
SIRI_VOX_DEVICE_PROBLEM_NETWORK_2
SIRI_VOX_AUDIO_PASSCODE_INSTRUCTION
SIRI_VOX_SYSTEM_FACTORY_RESET_CONFIRMATION
SIRI_VOX_STORE_DEMO_STYLE_1_INTRO_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_1_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_2_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_1_OUTRO_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_1_VERSION_2
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_2_VERSION_2
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_3_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_3_VERSION_2
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_3_VERSION_3
SIRI_VOX_STORE_DEMO_STYLE_2_INTRO_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_2_STAGE_1_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_2_STAGE_2_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_2_STAGE_3_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_2_STAGE_3_VERSION_2
SIRI_VOX_STORE_DEMO_STYLE_2_STAGE_3_VERSION_3
SIRI_VOX_STORE_DEMO_STYLE_2_OUTRO_VERSION_1
%@ {type = %@, context = %@}
%@ {type = %@}
down
%@ {command = %@, handlers = %@, taskTracker = %@}
Service command handling context deallocated for command %@.
-[SVXServiceCommandTransaction _removeBlockingTransaction:]
-[SVXServiceCommandTransaction _prepare]
v20@?0B8@"<NSCopying>"12
-[SVXServiceCommandTransaction _handler:didPrepareSuccessfully:context:completion:]
-[SVXServiceCommandTransaction _didPrepareAll]
-[SVXServiceCommandTransaction _handle]
Failed to prepare command %@.
-[SVXServiceCommandTransaction _handler:didHandleWithResult:completion:]
-[SVXServiceCommandTransaction _didHandleAll]
-[SVXServiceCommandTransaction _invalidate]
Service command handling context invalidated for command %@.
didStart
TB,N,V_didStart
didFinish
TB,N,V_didFinish
start
Td,N,V_start
finish
Td,N,V_finish
%@ {timestamp = %llu, session = %@}
session
T@"SVXSession",R,N,V_session
%@ {sessionUUID = %@}
-[SVXSession dealloc]
-[SVXSession initWithPerformer:serviceCommandHandler:speechSynthesizer:experimentContext:delegate:]
SIRI_VOX_SYSTEM_DEVICE_SETUP_COMPLETION
-[SVXSession updateHomeAnnouncementState:]
-[SVXSession updateNowPlayingAppPlaybackState:]
-[SVXSession updateMediaPlaybackVolume:]
-[SVXSession updateDeviceProblemsState:]
-[SVXSession updateDeviceSetupContext:]
-[SVXSession updateClockAlarmSnapshot:]
-[SVXSession updateClockTimerSnapshot:]
-[SVXSession assistantConnectionSpeechRecordingWillBegin:]
-[SVXSession assistantConnection:speechRecordingWillBeginWithInputAudioPowerXPCWrapper:]
-[SVXSession assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:]
-[SVXSession assistantConnection:speechRecordingDidChangeAVRecordRoute:]
-[SVXSession assistantConnectionSpeechRecordingDidDetectStartpoint:]
-[SVXSession assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:]
-[SVXSession assistantConnectionSpeechRecordingDidEnd:]
-[SVXSession assistantConnectionSpeechRecordingDidCancel:]
-[SVXSession assistantConnection:speechRecordingDidFail:]
-[SVXSession assistantConnection:speechRecognitionDidFail:]
-[SVXSession assistantConnection:speechRecognized:]
-[SVXSession assistantConnection:speechRecognizedPartialResult:]
-[SVXSession assistantConnection:recognizedAdditionalSpeechInterpretation:refId:]
-[SVXSession assistantConnection:recognitionUpdateWithPhrases:utterances:refId:]
-[SVXSession assistantConnectionRequestWillStart:]
-[SVXSession assistantConnectionDismissAssistant:]
-[SVXSession assistantConnectionRequestFinished:]
-[SVXSession assistantConnection:receivedCommand:completion:]
-[SVXSession assistantConnection:requestFailedWithError:requestClass:]
-[SVXSession assistantConnection:shouldSpeak:]
-[SVXSession assistantConnection:didChangeAudioSessionID:]
-[SVXSession assistantConnectionAudioSessionDidBeginInterruption:]
-[SVXSession assistantConnectionAudioSessionDidEndInterruption:shouldResume:]
-[SVXSession assistantConnection:setUserActivtiyInfoAndMakeCurrent:webpageURL:]
-[SVXSession assistantConnection:willStartAudioPlaybackRequest:]
-[SVXSession assistantConnection:didStartAudioPlaybackRequest:]
-[SVXSession assistantConnection:didStopAudioPlaybackRequest:error:]
-[SVXSession assistantConnection:didHandleQuickStopWithAction:]
-[SVXSession assistantConnection:willProcessStartPlayback:intent:completion:]
-[SVXSession assistantConnection:startPlaybackDidFail:]
-[SVXSession assistantConnection:audioSessionWillBecomeActive:]
-[SVXSession assistantConnection:audioSessionDidBecomeActive:]
-[SVXSession assistantConnection:startUIRequestWithText:completion:]
-[SVXSession assistantConnection:startUIRequestWithInfo:completion:]
-[SVXSession acquireAudioSessionForReason:completion:]
v20@?0I8@"NSError"12
-[SVXSession speechSynthesizerDidBecomeBusy:]
-[SVXSession speechSynthesizerDidBecomeIdle:]
-[SVXSession speechSynthesizer:willEnqueueRequest:taskTracker:]
-[SVXSession speechSynthesizer:willStartRequest:taskTracker:]
-[SVXSession speechSynthesizer:didStartRequest:record:taskTracker:]
-[SVXSession speechSynthesizer:didFinishRequest:utteranceInfo:record:taskTracker:]
-[SVXSession speechSynthesizer:didCancelRequest:taskTracker:]
-[SVXSession speechSynthesizer:didInterruptRequest:taskTracker:]
-[SVXSession speechSynthesizer:didFailRequest:taskTracker:error:]
-[SVXSession taskTrackingCenterWillBecomeBusy:]
-[SVXSession taskTrackingCenter:didBeginTrackingTaskWithContext:]
-[SVXSession taskTrackingCenter:didEndTrackingTaskWithContext:]
-[SVXSession taskTrackingCenterDidBecomeIdle:]
-[SVXSession _activateWithContext:options:clockAlarmSnapshot:clockTimerSnapshot:deviceSetupContext:deviceProblemsState:homeAnnouncementState:nowPlayingAppPlaybackState:mediaPlaybackVolume:speechSynthesisRecord:speechSynthesisState:speechRecordingAlertPolicy:taskTracker:completion:]
-[SVXSession _activateWithContext:options:clockAlarmSnapshot:clockTimerSnapshot:deviceSetupContext:deviceProblemsState:homeAnnouncementState:nowPlayingAppPlaybackState:mediaPlaybackVolume:speechSynthesisRecord:speechSynthesisState:speechRecordingAlertPolicy:taskTracker:completion:]_block_invoke
Rejected alarms and timers announcement activation because there's an ongoing speech request.
v24@?0@"AFClockTimerSnapshot"8@"NSError"16
isDeviceInSetupFlow
-[SVXSession _deactivateWithContext:completion:]
-[SVXSession _preheatWithStyle:]
-[SVXSession _startSpeechRequestWithOptions:clearsContext:clockAlarmSnapshot:clockTimerSnapshot:deviceSetupContext:deviceProblemsState:homeAnnouncementState:nowPlayingAppPlaybackState:taskTracker:completion:]
-[SVXSession _stopSpeech]
-[SVXSession _stopSpeechWithCurrentSpeechRequestOptions]
-[SVXSession _transitSpeechToManualEndpointing]
-[SVXSession _transitSpeechToAutomaticEndpointing]
-[SVXSession _updateSpeechEndpointerOperationMode:]
-[SVXSession _startRequestWithInfo:clearsContext:clockAlarmSnapshot:clockTimerSnapshot:deviceSetupContext:taskTracker:completion:]
-[SVXSession _startSpeechSynthesisRequest:languageCode:gender:audioSessionID:introductionSoundID:conclusionSoundID:taskTracker:postActivationHandler:completion:]
v24@?0q8@?<v@?>16
Start Speech Synthesis Request (External)
-[SVXSession _startSpeechSynthesisRequest:languageCode:gender:audioSessionID:introductionSoundID:conclusionSoundID:taskTracker:postActivationHandler:completion:]_block_invoke
-[SVXSession _startActiveAudioSessionRequestWithOptions:taskTracker:completion:]
-[SVXSession beginWaitingForMyriadDecision]
-[SVXSession endWaitingForMyriadDecisionWithToken:result:]
-[SVXSession _beginWaitingForMyriadDecisionWithToken:]
-[SVXSession _endWaitingForMyriadDecisionWithToken:state:]
-[SVXSession _resetMyriadDecision]
-[SVXSession _cancelRequestWithOptions:keepTaskTracker:]
B24@?0@"SVXTaskContext"8^B16
-[SVXSession _dismiss]
-[SVXSession _setCurrentState:]
-[SVXSession _continuePendingSpeechRequest:]
-[SVXSession _clearContext]
-[SVXSession _setApplicationContext:]
-[SVXSession _addRequestBarrier:]
-[SVXSession _performNextPendingRequestBarrier]
-[SVXSession _discardPendingRequestBarriers]
-[SVXSession _setInputAudioPowerWrapper:]
-[SVXSession _setOutputAudioPowerWrapper:]
-[SVXSession _forceAudioSessionActiveWithOptions:reason:completion:]
-[SVXSession _forceAudioSessionActiveWithOptions:reason:completion:]_block_invoke
-[SVXSession _forceAudioSessionInactiveWithReason:completion:]
-[SVXSession _forceAudioSessionInactiveWithReason:completion:]_block_invoke
-[SVXSession _setAudioSessionID:]
-[SVXSession _checkIsActiveWithCompletion:]
-[SVXSession _checkIsActiveWithCompletion:]_block_invoke
-[SVXSession _checkIsActiveWithCompletion:]_block_invoke_2
-[SVXSession _resignActiveForReason:]
-[SVXSession _resignActiveForReason:]_block_invoke
-[SVXSession _resignActiveForReason:]_block_invoke_2
-[SVXSession _invalidate]
-[SVXSession _requestWillBeginWithTaskTracker:]
-[SVXSession _requestDidEndWithOptions:error:]
%@ %@
-[SVXSession _handleSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:]
-[SVXSession _handleSpeechRecordingDidBeginOnAVRecordRoute:]
-[SVXSession _handleSpeechRecordingDidChangeAVRecordRoute:]
-[SVXSession _handleSpeechRecordingDidDetectStartpoint]
-[SVXSession _handleSpeechRecordingPerformTwoShotPromptWithType:completion:]
Current activation context does not allow speech recording.
Failed to play phatic prompt.
Unsupported Two-Shot prompt type %ld.
-[SVXSession _handleSpeechRecordingDidEnd]
-[SVXSession _handleSpeechRecordingDidCancel]
-[SVXSession _handleSpeechRecordingDidFailWithError:]
-[SVXSession _handleSpeechRecognitionDidFailWithError:]
-[SVXSession _handleSpeechRecognized:]
-[SVXSession _handleSpeechRecognizedPartialResult:]
-[SVXSession _handleRequestWillStart]
-[SVXSession _handleDismissAssistant]
-[SVXSession _handleRequestFinished]
-[SVXSession _handleReceivedCommand:completion:]
-[SVXSession _handleRequestFailedWithError:]
-[SVXSession _handleShouldSpeak:]
-[SVXSession _handleDidChangeAudioSessionID:]
-[SVXSession _handleAudioSessionDidBeginInterruption]
-[SVXSession _handleAudioSessionDidEndInterruption:]
-[SVXSession _handleWillStartAudioPlaybackRequest:]
-[SVXSession _handleDidStartAudioPlaybackRequest:]
-[SVXSession _handleDidStopAudioPlaybackRequest:error:]
-[SVXSession _handleDidHandleQuickStopWithActions:]
-[SVXSession _handleWillProcessStartPlaybackWithDestination:intent:completion:]
-[SVXSession _handleDidFailStartPlaybackWithDestination:]
-[SVXSession _handleAudioSessionWillBecomeActive:]
-[SVXSession _handleAudioSessionDidBecomeActive:]
-[SVXSession _willChangeFromState:toState:]
-[SVXSession _didChangeFromState:toState:]
-[SVXSession _beginThinking]
-[SVXSession _endThinking]
-[SVXSession _handleSpeechSynthesizerWillBecomeBusy]
-[SVXSession _handleSpeechSynthesizerDidBecomeIdle]
-[SVXSession _handleSpeechSynthesizerWillStartRequest:taskTracker:]
-[SVXSession _handleSpeechSynthesizerDidStartRequest:record:taskTracker:]
-[SVXSession _handleSpeechSynthesizerDidFinishRequest:record:taskTracker:]
-[SVXSession _handleSpeechSynthesizerDidFinishRequest:record:taskTracker:]_block_invoke
-[SVXSession _handleSpeechSynthesizerDidCancelRequest:taskTracker:]
-[SVXSession _handleSpeechSynthesizerDidInterruptRequest:taskTracker:]
-[SVXSession _handleSpeechSynthesizerDidFailRequest:taskTracker:error:]
-[SVXSession _presentError:taskTracker:completion:]
SIRI_VOX_TIMEOUT_ERROR_%u
client#errorTimeout
SIRI_VOX_DEVICE_PROBLEM_NETWORK_%u
client#errorNetworkProblems
SIRI_VOX_%@_ERROR_%u
WLAN
WIFI
client#errorWiFi
SIRI_VOX_NETWORK_ERROR_%u
client#errorNetwork
SIRI_VOX_GENERIC_ERROR_%u
client#errorGeneric
SIRI_VOX_DEVICE_PROBLEM_FIXING_%u
client#errorTryAgain
SIRI_VOX_DEVICE_PROBLEM_HARDWARE_%u
client#errorHardwareProblems
SIRI_VOX_DEVICE_PROBLEM_THERMAL_%u
client#errorThermalProblems
-[SVXSession _presentError:taskTracker:completion:]_block_invoke
-[SVXSession _presentError:taskTracker:completion:]_block_invoke_2
-[SVXSession _handleCommand:taskTracker:completion:]
-[SVXSession _handleCommand:taskTracker:completion:]_block_invoke_2
-[SVXSession _connection:]
-[SVXSession _invalidateConnection]
-[SVXSession _startSessionIdleTimerWithTimeInterval:]
-[SVXSession _stopSessionIdleTimer]
-[SVXSession _sessionIdleFiredWithAssertion:]
-[SVXSession _sessionIdleFiredWithAssertion:]_block_invoke
T@"NSUUID",R,N,V_sessionUUID
SiriVOXService
com.apple.SiriVOXService
v16@?0@"<AFClientConfigurationMutating>"8
v16@?0@"<AFSpeechRecordingAlertPolicyMutating>"8
v16@?0@"<AFSpeechRecordingAlertBehaviorMutating>"8
keyFrameID
offset
keyFrameID = %ld (%@)
offset = %@
SVXDeviceSetupFlowDisplayKeyFrame::keyFrameID
SVXDeviceSetupFlowDisplayKeyFrame::text
SVXDeviceSetupFlowDisplayKeyFrame::offset
SVXDeviceSetupFlowDisplayKeyFrame::duration
Tq,R,N,V_keyFrameID
Td,R,N,V_offset
scenes
scenes = %@
SVXDeviceSetupFlow::identifier
SVXDeviceSetupFlow::languageCode
SVXDeviceSetupFlow::gender
SVXDeviceSetupFlow::scenes
T@"NSArray",R,C,N,V_scenes
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_UNIT_HOUR_%@
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_UNIT_MINUTE_%@
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_UNIT_SECOND_%@
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_HOURS_MINUTES_SECONDS
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_HOURS_MINUTES
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_HOURS_SECONDS
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_MINUTES_SECONDS
SVXServiceCommandHandlerUIRepeatIt.m
[command isKindOfClass:[SAUIRepeatIt class]]
-[SVXServiceCommandHandlerUIRepeatIt handleCommand:withContext:taskTracker:completion:]_block_invoke
deviceSetupCompletion
deviceFactoryResetConfirmation
deviceAudioDuckingCoordination
alarmFired
alarmSnoozed
alarmDismissed
timerFired
timerSnoozed
timerDismissed
alarmsAndTimersAnnouncement
speechSynthesis
30Hertz
60Hertz
120Hertz
input
output
approved
declined
-[SVXClientSpeechSynthesisService prewarmRequest:]_block_invoke
-[SVXClientSpeechSynthesisService synthesizeRequest:completion:]_block_invoke
-[SVXClientSpeechSynthesisService enqueueRequest:completion:]_block_invoke_4
-[SVXClientSpeechSynthesisService cancelPendingRequest:]_block_invoke_2
-[SVXClientSpeechSynthesisService stopRequest:]_block_invoke_2
-[_SVXPlayAudioExpressionParser parsePlayAudio:reply:]
-[_SVXPlayAudioExpressionParser parsePlayAudio:reply:]_block_invoke
range
timeInterval
range = %@
timeInterval = %@
SVXSpeechSynthesisWordTiming::range
SVXSpeechSynthesisWordTiming::timeInterval
T{_NSRange=QQ},R,N,V_range
Td,R,N,V_timeInterval
intro
stage1
stage2
outro
style1Stage1Version2
style1Stage2Version2
style1Stage3Version1
style1Stage3Version2
style1Stage3Version3
style2IntroVersion1
style2Stage1Version1
style2Stage2Version1
style2Stage3Version1
style2Stage3Version2
style2Stage3Version3
style2OutroVersion1
SVXSessionGetLanguageCode
SVXSessionGetSpeechSynthesisRequestForAlarmsAndTimers
@"NSLocale"8@?0
@"NSCalendar"8@?0
@"NSDateFormatter"8@?0
SIRI_VOX_FIRING_ALARM_OR_TIMER_ANNOUNCEMENT_CONCATENATION
 @{tts#
\pause=150\} 
v32@?0@"AFClockTimer"8Q16^B24
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_MULTI
SIRI_VOX_FIRING_TITLED_TIMER_ANNOUNCEMENT_SINGLE
SIRI_VOX_FIRING_UNTITLED_TIMER_ANNOUNCEMENT_SINGLE
 @{tts#
\pause=500\} 
v32@?0@"AFClockAlarm"8Q16^B24
SIRI_VOX_FIRING_ALARM_ANNOUNCEMENT_MULTI
SIRI_VOX_FIRING_TITLED_ALARM_ANNOUNCEMENT_SINGLE
SIRI_VOX_FIRING_UNTITLED_ALARM_ANNOUNCEMENT_SINGLE
outputVoiceInfo
T@"AFVoiceInfo",R,C,N,V_outputVoiceInfo
locale
T@"NSLocale",R,C,N,V_locale
%s Voicemail did not play long enough to be marked as read
%s Error marking voicemail as read: %@
%s Serialization failed: %@
%s Invalidating %tu transactions...
%s Removing %tu transactions...
%s PreSynthesis failed: %@
%s fromState = %@, toState = %@
%s _currentState = %@
%s currentState = %@
%s listener %@ does NOT conform to protocol %@
%s listener %@
%s Announcing %@ to %tu listeners.
%s context = %@
%s deviceRegionCode = %@
%s activeAccount = %@
%s activeAccount.storeFrontIdentifier = %@
%s Unable to load active store front due to an error.
%s Unable to load active store front because the user is not signed in.
%s currentLocalAccount = %@
%s localAccount.storeFrontIdentifier = %@
%s Unable to load local store front due to an error.
%s outputVoiceInfo = %@
%s languageCode = %@
%s languageCode = %@ (override)
%s gender = %@
%s siriIntroScene = %@
%s tryHeySiriCapabilitiesScene = %@
%s siriCapabilitiesScene = %@
%s tryHeySiriMusicOrNewsOrWeatherScene = %@
%s hasActiveAccount = %d
%s hasActiveAccount = %d (override)
%s isNewsRestricted = %d
%s isNewsRestricted = %d (override)
%s languageCode = %@, gender = %@
%s request = %@
%s result = %@
%s heySiriCapabilitiesRange = %@
%s heySiriCapabilitiesString = %@
%s sceneID = %@, languageCode = %@, gender = %@, hint = %@
%s siriCapabilityHomeRange = %@
%s siriCapabilityHomeString = %@
%s siriCapabilityNewsRange = %@
%s siriCapabilityNewsString = %@
%s siriCapabilityWeatherRange = %@
%s siriCapabilityWeatherString = %@
%s siriCapabilityClockRange = %@
%s siriCapabilityClockString = %@
%s siriCapabilityMusicRange = %@
%s scene = %@
%s heySiriMusicRange = %@
%s heySiriMusicString = %@
%s heySiriNewsRange = %@
%s heySiriNewsString = %@
%s heySiriWeatherRange = %@
%s heySiriWeatherString = %@
%s SVXStoreDemoTranscriptID = %lu
%s flag = %d, activationContext = %@, deactivationContext = %@
%s _isAudioSessionActive = %d, no need to deliver the delegate callbacka again.
%s dialogIdentifier = %@
%s soundID = %@
%s soundID = %@, error = %@
%s activationContext = %@
%s Client session activity state is active when begin becoming active.
%s Client session activity state is active when end becoming active.
%s options = %@, duration = %f
%s Client session activity state is inactive when begin resigning active.
%s deactivationContext = %@
%s Client session activity state is inactive when end resigning active.
%s Begin Emergency Call
%s Emergency call %@ handled
%s Got an unknown response %@ when attempting to parse expressions. Bailing
%s No parseable expressions - parsing failed
%s activationSource = %@
%s type = %@
%s %@
%s context = %@, error = %@
%s type = %@, wrapper = %@
%s Activating audio services with timeout...
%s Activated audio services with timeout.
%s Failed to activate audio services with timeout. (result = %d)
%s preparedAddViews = %@
%s Begin TTS request group %@ for %@.
%s End TTS request group %@ for %@.
%s Overriding listenAfterSpeaking due to defaults
%s speakableText = %@
%s Begin TTS request %@ for %@.
%s End TTS request %@ for %@ with result %@.
%s speakablePrefix = %@
%s speakableDelimiter = %@
%s speakableFinalDelimiter = %@
%s disambiguationListItems[%tu].speakableText = %@
%s speakableSuffix = %@
%s components = %lu
%s %@ is released without explicitly calling -relinquish.
%s Starting SiriVOX service in %@ (pid=%d) on %@...
%s Started SiriVOX service in %@ (pid=%d) on %@.
%s Stopping SiriVOX service in %@ (pid=%d) on %@...
%s Stopped SiriVOX service in %@ (pid=%d) on %@.
%s BTLE Device should abort session
%s End waiting for Myriad token %@ as lost.
%s BTLE willObtainTracker
%s BTLE released audio session tracker (error = %@)
%s BTLE didObtainTracker = %@
%s BTLE deactivate
%s BTLE Device continues to interact
%s End waiting for Myriad token %@ as won.
%s BTLE Device should unduck audio
%s BTLE released audio session tracker
%s nowPlayingPlaybackState = %@
%s clockAlarmSnapshot = %@
%s clockTimerSnapshot = %@
%s homeAnnouncementState = %@
%s usesUnifiedSiriActivationForVoiceTrigger = %d
%s VoiceTrigger is not available on this platform.
%s mediaPlaybackVolume = %f
%s notifyObserver = %@, token = %d
%s notifyObserver = %@, fromState = %llu, toState = %llu
%s firedAlarmID = %@
%s dismissedAlarmID = %@
%s firedTimerID = %@
%s dismissedTimerID = %@
%s snapshot = %@
%s numberOfQueuedOperations = %lu
%s Creating new session...
%s New session %@ created with (%@, %@, %@, %@, %@), configuring...
%s New session %@ configured with (%@, %@, %@, %@) and is ready to go.
%s dequeuedOperation = %@
%s currentSession = %@
%s activityState = %@
%s Ignored because activation source %@ does not support preheat.
%s context = %@, activityState = %ld
%s Handling remote request dismissal, reason=%@, options=%@, analyticsContext=%@
%s experimentContext = %@
%s lastWin = %@
%s speechSynthesisState = %@
%s speechSynthesisRecord = %@
%s deviceProblemsState = %@
%s Ignored because Myriad behavior undefined for Unspecified Activation Source: %@
%s Myriad configured for Direct Trigger with context %@.
%s Begin waiting for Myriad token %@.
%s Myriad configured for Voice Trigger with adjustment %d and context %@.
%s deviceSetupContext: %@ -> %@
%s preparedSpeakableText = %@
%s presynthesizedAudio = %@
%s provider = %@
%s frequency = %@
%s speechSynthesizer = %@, request = %@
%s speechSynthesizer = %@, request = %@, instrumentMetrics = %@
%s speechSynthesizer = %@, request = %@, finishedSpeaking = %d, error = %@
%s speechSynthesizer = %@, request = %@, atEnd = %d, error = %@
%s speechSynthesizer = %@, request = %@, instrumentMetrics = %@, error = %@
%s speechSynthesizer = %@, request = %@, timingInfo.count = %tu
%s %@ {textRange = %@, startTime = %f}
%s audioSessionID = %lu
%s Skipped prewarming because audio session ID is unknown.
%s locale changed from %@ to %@.
%s outputVoiceInfo changed from %@ to %@.
%s audioSessionID changed from %lu to %lu.
%s %@ -useSpecificAudioSession: %lu
%s speechRequest = %@
%s Started TTS for current speaking context. (_currentSpeakingContext = %@)
%s speechRequest = %@, instrumentMetrics = %@
%s Emit instrumentation: %@
%s speechRequest = %@, success = %d, error = %@
%s Stopped TTS for current speaking context. (_currentSpeakingContext = %@)
%s presynthesizedAudioRequest = %@
%s Started TTS with presynthesized audio for current speaking context. (_currentSpeakingContext = %@)
%s presynthesizedAudioRequest = %@, success = %d, error = %@
%s Stopped TTS with presynthesized audio for current speaking context. (_currentSpeakingContext = %@)
%s presynthesizedAudioRequest = %@, instrumentMetrics = %@, error = %@
%s speechRequest = %@, speechWordTimingInfoArray = %@
%s speechRequest = %@, instrumentMetrics = %@, error = %@
%s Ignored because current speaking context (%@) has a higher priority.
%s Ignored because pending speaking context (%@) has a higher priority.
%s Ignored because no priority is specified.
%s (numberOfContexts: %tu -> %tu)
%s Skipped prewarming because there's no audio session ID configured.
%s Skipped processing next pending context because there is no pending context.
%s Skipped processing pending contexts because there's no suitable pending context.
%s Dequeued %tu pending contexts to process.
%s Dequeued[%tu] = %@
%s There's no context to start.
%s Attempted to start a new speaking context when the current speaking context still exists. (_currentSpeakingContext = %@)
%s Setting current speaking context. (_currentSpeakingContext = %@)
%s Acquiring active audio session...
%s Failed to acquire active audio session. (error = %@)
%s Acquired active audio session. (assertion = %@)
%s There's no context to continue.
%s Unable to continue context (context = %@, error = %@).
%s Unable to continue context (context = %@).
%s streamID = %@
%s Caching presynthesized audio... (speechSynthesizer = %@, presynthesizedAudioRequest = %@)
%s Speech synthesizer failed to cache presynthesized audio. (error = %{public}@)
%s Cached presynthesized audio. (speechSynthesizer = %@, presynthesizedAudioRequest = %@)
%s Speakable utterance parser failed to parse speakable text. (speakableText = %{public}@, speakableUtteranceParser = %{public}@, error = %{public}@)
%s Starting TTS with presynthesized audio for speaking context... (speechSynthesizer = %@, presynthesizedAudioRequest = %@)
%s Speech synthesizer failed to start TTS with presynthesized audio. (error = %{public}@)
%s Started TTS with presynthesized audio for speaking context. (speechSynthesizer = %@, presynthesizedAudioRequest = %@)
%s Speech synthesizer failed. (error = %{public}@)
%s containsPrivacySensitiveContents = %d
%s Starting synthesizing context... (speechSynthesizer = %@, speechRequest = %@)
%s Speech synthesizer failed to start synthesizing. (error = %{public}@)
%s Started synthesizing context. (speechSynthesizer = %@, speechRequest = %@)
%s Starting TTS for speaking context... (speechSynthesizer = %@, speechRequest = %@)
%s Speech synthesizer failed to start TTS. (error = %{public}@)
%s Started TTS for speaking context... (speechSynthesizer = %@, speechRequest = %@)
%s There's no pending context to cancel.
%s (_currentSpeakingContext = %@, interruptionBehavior = %@)
%s There's no current speaking context to stop.
%s Current speaking context does NOT have an underlying speech request or presynthesized audio request when attempted to stop TTS. (_currentSpeakingContext = %@)
%s Stopping TTS for current speaking request... (speechSynthesizer = %@, speechRequest = %@, speechBoundary = %ld)
%s Speech synthesizer failed to stop TTS. (error = %{public}@)
%s Stopping TTS with presynthesized audio for current request... (speechSynthesizer = %@, presynthesizedAudioRequest = %@)
%s Speech synthesizer failed to stop TTS with presynthesized audio. (error = %{public}@)
%s context = %@, resultType = %@, utterance = %@, error = %@
%s nowPlayingAppPlaybackState = %@
%s Canonical locale identifier is nil, fallback to use language code %@ directly.
%s No language code.
%s Locale is nil. (Siri language code is %@)
%s Resolved locale is %@.
%s Output voice info is nil.
%s Output voice info does not have language code.
%s Siri language code is %@.
%s Output voice language code is %@.
%s Resolved output voice info is %@.
%s taskTracker = %@, childTaskTracker = %@
%s taskTracker = %@
%s %@ will become busy.
%s Adding %@.
%s Added %@.
%s numberOfContexts = %tu
%s Removing %@.
%s Removed %@.
%s %@ did become idle.
%s numberOfContextsToEnd = %tu
%s Service command handler is missing for %@. Please file a radar.
%s Looking for parseable expressions in command %@
%s Expression doesn't require remote parse: %@
%s Successfully parsed expressions for command: %@
    Parsed expressions: %@
%s Applying parsed expression %@ to view %@
    Parsed expression: %@
    View: %@
%s Splicing in applied parsed expression
    Original views: %@
    Updated views: %@
%s Failed splicing updated view for view in array
    Updated ace view: %@
    Original ace view: %@
    Updated views array: %@
%s Found no parseable expressions in command %@
%s #SVXInstrumentation - Start new turn because current turn is nil
%s #SVXInstrumentation - Start turn from current turn (%@)
%s #SVXInstrumentation - Start new turn
%s #SVXInstrumentation - Emit invocation event (source %@)
%s Emitting unknown UIStateTransition; this implies there are unaccounted session state transitions, add them here
%s #SVXInstrumentation - Emit state transition event (current: %@, next: %@)
%s #SVXInstrumentation - Emit state transition (dismissed) event (current: %@, dismissalReason: %@)
%s #SVXInstrumentation - Emit state transition (idle) event
%s #SVXInstrumentation - Emit UUFR said event (dialogIdentifier: %@, dialogPhase: %@)
%s This SPI has been deprecated, please use -enqueueButtonEvent: instead.
%s buttonEvent = %@
%s userInfo = %@
%s buttonEvent = %@, userInfo = %@
%s systemEvent = %@
%s systemEvent = %@, userInfo = %@
%s type = %@, timestamp = %llu
%s Ignored because the last button activation context is nil.
%s Ignored because the source of the last button activation context is not button. (_lastButtonActivationContext = %@)
%s Ignored because the type of the button event in last button activation context is not down. (_lastButtonActivationContext = %@)
%s Ignored because the timestamp of the button event in last button activation context is 0. (_lastButtonActivationContext = %@)
%s Ignored because no matching button up event can be found in the button event queue. (_lastButtonActivationContext = %@, _queuedButtonEvents = %@)
%s Matched button up event %@ for button down event %@ of last button activation context %@.
%s buttonHoldDuration = %f
%s error = %@
%s done (context = %@, error = %@)
%s _lastButtonActivationContext = %@
%s done (context = %@)
%s Started preheat timer for %f seconds.
%s Stopped preheat timer.
%s Preheat timer fired!
%s Validating button event %@ for activation...
%s Rejected button event for activation because it is nil.
%s Rejected button event for activation because the type is %@.
%s Rejected button event for activation because the timestamp is %llu.
%s Validating system event %@ for activation...
%s Rejected system event for activation because it is nil.
%s Rejected system event for activation because the type is %@, but the deviceSetupFlowScene is nil.
%s Rejected system event for activation because the type is %@, but the storeDemo is nil.
%s Rejected system event for activation because the type is %@, but orderedAlarmAndTimerIDs is empty.
%s Rejected system event for activation because the type is %@, but speechSynthesisRequest is nil.
%s Rejected system event for activation because the type is %@.
%s Don't know how to generate a parseable expression for context object: %@
%s Parsing expression with parsing service: %@
%s Service successfully parsed expression: %@
%s Parsed expression has no data: %@
%s Service failed to parse expression: %@
%s No expression to parse for PlayVoicemail: %@
%s Ignored because the XPC listener is unexpected.
%s Checking entitlement %@ on %@...
%s Entitlement value of SVXMachServiceEntitlements.clientService is expected to be an NSNumber.
%s Entitlement value of SVXMachServiceEntitlements.clientService is expected to be true.
%s Connected to %@.
%s Disconnected from %@.
%s Celestial is not available on this platform.
%s notification = %@
%s category = %@, volume = %f, reason = %@
%s SoundAutoConfig is not available on this platform.
%s languageCode = %@, gender = %@, hint = %@
%s Backward Compatibility: Mapped sceneID %@ to style %@.
%s flow = %@
%s _currentSetupContext = %@
%s %@ is no longer blocked by %@.
%s Ignored because state is %ld.
%s Ignored because blocked by %@.
%s performer = %@, serviceCommandHandler = %@, speechSynthesizer = %@, experimentContext = %@, delegate = %@
%s sessionUUID = %@
%s deviceSetupContext = %@
%s connection = %@
%s connection = %@, wrapper = %@
%s connection = %@, route = %@, audioSessionID = %lu
%s connection = %@, route = %@
%s connection = %@, type = %ld
%s connection = %@, error = %@
%s connection = %@, speechRecognized = %@, text = %@
%s connection = %@, partialResult = %@, text = %@
%s connection = %@, interpretation = %@, refId = %@
%s connection = %@, phrases = %@, utterances = %@, refId = %@
%s connection = %@, command = %@
%s connection = %@, error = %@, requestClass = %@
%s connection = %@, shouldSpeak = %d
%s connection = %@, sessionID = %lu
%s connection = %@, shouldResume = %d
%s connection = %@, info = %@, url = %@
%s connection = %@, request = %@
%s connection = %@, request = %@, error = %@
%s connection = %@, actions = %tu
%s connection = %@, playbackType = %ld, intent = %@
%s connection = %@, playbackType = %ld
%s connection = %@, flag = %d
%s connection = %@, text = %@
%s connection = %@, info = %@
%s reason = %@
%s speechSynthesizer = %@
%s speechSynthesizer = %@, request = %@, taskTracker = %@
%s speechSynthesizer = %@, request = %@, record = %@, taskTracker = %@
%s speechSynthesizer = %@, request = %@, utteranceInfo = %@, record = %@, taskTracker = %@
%s speechSynthesizer = %@, request = %@, taskTracker = %@, error = %@
%s taskTrackingCenter = %@
%s taskTrackingCenter = %@, context = %@
%s context = %@, options = %@, taskTracker = %@
%s deviceSetupContext = %@, deviceProblemsState = %@
%s nowPlayingAppPlaybackState = %@, mediaPlaybackVolume = %f
%s speechSynthesisRecord = %@, speechSynthesisState = %@
%s speechRecordingAlertPolicy = %@
%s Siri is not enabled.
%s Siri is not reachable.
%s Presenting error %d for task tracker %@
%s Starting active audio session request for Myriad...
%s Starting active audio session request for Audio Duck Coordination...
%s deviceSetupFlowSceneID = %@, introductionSoundID = %@, conclusionSoundID = %@, deviceSetupFlowSiriCapabilitiesHint = %@
%s storeDemo = %@
%s No valid localizationKey
%s Unable to activate with context %@ because the current activation context %@ is a speech request.
%s Unable to find alarm or timer with ID %@ for announcement.
%s speechSynthesisRequest = %@
%s requestInfo = %@
%s Siri is in device setup mode and is active.
%s Barged-in over Siri request.
%s Barged-in over Siri voice output.
%s Barged-in over home announcement playback.
%s Barged-in over media playback.
%s Barged-in over firing alarm.
%s Barged-in over firing timer.
%s speechRequestOptions.activationEvent = %@
%s speechRequestOptions.activationEventTime = %f
%s speechRequestOptions.activationEventMachAbsoluteTime = %llu
%s speechRequestOptions.bargeInOptions = %lu
%s speechRequestOptions.endpointerOperationMode = %@
%s speechRequestOptions.homeButtonDownEventTime = %f
%s speechRequestOptions.homeButtonDownEventMachAbsoluteTime = %llu
%s speechRequestOptions.isMediaPlaying = %d
%s speechRequestOptions.mediaPlaybackVolume = %f
%s speechRequestOptions.speechSynthesisRecord = %@
%s speechRequestOptions.recordingAlertPolicy = %@
%s speechRequestOptions.reloadSmartSiriVolume = %d
%s Unable to activate with context %@.
%s Rejected Myriad deactivation because the current activation context is %@.
%s Rejected Myriad deactivation because the current activation timestamp is %llu.
%s style = %ld
%s options = %@, clearsContext = %d, taskTracker = %@
%s Attempting to start a new speech request during an existing speech recording.
%s clearContext
%s setApplicationContext: %@
%s setAlertContextWithClockAlarmSnapshot: %@
%s setAlertContextWithClockTimerSnapshot: %@
%s Ignored because _currentRequestUUID is nil.
%s Ignored because _currentSpeechRequestOptions is nil.
%s speechEndpointerOperationMode = %@
%s requestInfo = %@, clearsContext = %d, clockAlarmSnapshot = %@, clockTimerSnapshot = %@, deviceSetupContext = %@, taskTracker = %@
%s speechSynthesisRequest = %@, languageCode = %@, gender = %@, introductionSoundID = %@, conclusionSoundID = %@, taskTracker = %@
%s SESSION IS ACTIVE (%@) (with external audio session %u) 
%s options = %tu, taskTracker = %@
%s token = %@
%s token = %@, result = %d
%s _myriadState (%ld -> %ld)
%s _myriadToken (%@ -> %@)
%s state = %ld, token = %@
%s Ignored because input token (%@) does not match _myriadToken (%@).
%s result = %d
%s %@ -> %@
%s success = %d
%s Ignored because _currentRequestUUID is not nil.
%s wrapper = %@
%s BEGIN -forceAudioSessionActive (options = %lu, reason = %ld)
%s END -forceAudioSessionActive (options = %lu, reason = %ld, duration = %f, audioSessionID = %lu, error = %@)
%s END -forceAudioSessionActive (options = %lu, reason = %ld, duration = %f, audioSessionID = %lu)
%s SESSION IS ACTIVE (%@)
%s BEGIN -forceAudioSessionInactive (reason = %@)
%s END -forceAudioSessionActive (reason = %@, duration = %f)
%s %@ is active. (_currentRequestUUID = %@)
%s %@ is active. (_audioSessionAssertions.count = %tu)
%s _audioSessionAssertions = (
%s     %@
%s )
%s %@ is active. (_taskTrackingCenter.contextsOfAllTrackedTasks.count = %tu)
%s _taskTrackingCenter.contextsOfAllTrackedTasks = (
%s %@ is NOT active.
%s Ignored because session is still active.
%s _currentSpeechRequestOptions = %@
%s _currentSpeechRequestContinueBlock = %@
%s _currentSpeechRequestPendingBlocks = %@
%s SESSION IS INACTIVE (%@)
%s Session unspecified.
%s Session is already inactive.
%s Session is already resigning active.
%s Session is ready to resign active.
%s Exposed to %@
%s SESSION GOING INACTIVE (%@)
%s SESSION GOING ACTIVE (%@)
%s BEGIN REQUEST (_currentRequestUUID = %@)
%s options = %tu, error = %@
%s options = %tu
%s Ignored presenting %@ because request ending options = %tu.
%s Ignored presenting %@ because UUFR was presented.
%s Using built-in error dialogs.
%s END REQUEST (_currentRequestUUID = %@)
%s Ignored resign active because request ending options = %tu
%s _currentActivationContext does not allow speech recording. (_currentActivationContext = %@)
%s recordRoute = %@
%s type = %ld
%s _currentState is expected to be %@ when the speech recording is ended. (_currentState = %@)
%s _currentState is expected to be %@ when the speech recording is canceled. (_currentState = %@)
%s _currentState is expected to be %@ when the speech recording is failed. (_currentState = %@)
%s _currentActivationContext does not allow speech recording and recognition. (_currentActivationContext = %@)
%s speechRecognized = %@
%s partialResult = %@
%s command = %@
%s Ignoring as current activation context is from %@
%s Ignored %@ because it does not contain speakable texts.
%s Ignored %@ because it is expository and UUFR has already been presented.
%s Ignored %@ because it is expository and UUFR is going to be presented.
%s shouldSpeak = %d
%s shouldResume = %d
%s updating start time for request: %@
%s updating finish time for request: %@
%s actions = %tu
%s destination = %ld, intent = %@
%s destination = %ld
%s flag = %d
%s request = %@, record = %@
%s listensAfterSpeaking = YES
%s listensAfterSpeaking: Scheduled activation context %@ in request barrier.
%s listensAfterSpeaking: Executing request barrier with activation context %@.
%s listensAfterSpeaking: Cancelled request barrier with activation context %@.
%s request = %@, error = %@
%s Begin waiting for Myriad decision...
%s End waiting for Myriad decision with result %d.
%s Begin presenting error %@...
%s End presented error %@.
%s The error %@ is not presented because of Myriad decision.
%s The error %@ is not presented because it is suppressed.
%s The error %@ is not presented. Please take a sysdiagnose and file a radar.
%s command = %@, taskTracker = %@
%s UUFR PRESENT
%s Begin handle command %@ with task tracker %@.
%s End handle command %@ with task tracker %@ and response %@.
%s createIfAbsent = %d
%s Set up %@
%s Tear down %@
%s Started session idle timer for %f seconds (assertion = %@).
%s Stopped all session idle timers (assertions = %@).
%s Fired session idle timer (assertion = %@), but there are still other active timers (assertions = %@).
%s Fired last session idle timer (assertion = %@).
%s Ignored because session is active.
%s _activityState = %lu
%s No expression to parse for PlayAudio: %@
%s Siri language code is nil.
%s Best supported Siri language is nil.
%s Default Siri language is %@.
%s Best supported Siri language is %@.
%s Resolved Siri language code is %@.
_SVXServiceCommandHandlerPlayVoiceMail
SVXServiceCommandHandling
NSObject
SVXClientServiceManager
SVXClientServiceConnectionDelegate
SVXClientServiceProviding
SVXServiceCommandHandler
SVXModuleInstance
SVXServiceCommandHandlerPreSynthesizeTTS
SVXClientSessionStateService
SVXClientServiceConsuming
SVXClientSessionStateServicing
SVXDeviceSetupContext
NSCopying
NSSecureCoding
NSCoding
_SVXDeviceSetupContextMutation
SVXDeviceSetupContextMutating
SVXDeviceSetupContextMutability
SVXSpeechSynthesisListening
SVXSpeechSynthesisAnnouncer
SVXPlatformDependency
SVXAnnouncer
SubclassResponsibility
SVXUserFeedbackAudioContent
_SVXUserFeedbackAudioContentMutation
SVXUserFeedbackAudioContentMutating
SVXUserFeedbackAudioContentMutability
_SVXExpressionParser
SVXQueuePerformer
SVXPerforming
_SVXMainQueuePerformer
SVXServiceCommandDelayedActionStore
SVXDeviceSetupManager
SVXModuleInstanceMap
SVXModuleInstanceProviding
SVXSpeechSynthesisRequest
_SVXSpeechSynthesisRequestMutation
SVXSpeechSynthesisRequestMutating
SVXSpeechSynthesisRequestMutability
SiriVOX
SVXUserFeedbackVoiceContent
_SVXUserFeedbackVoiceContentMutation
SVXUserFeedbackVoiceContentMutating
SVXUserFeedbackVoiceContentMutability
SVXClientAudioSystemService
SVXClientAudioSystemServicing
SVXServiceCommandHandlerUICloseAssistant
SVXClientSessionService
SVXClientSessionServicing
SVXServiceCommandDelayedAction
SVXModule
SVXDeviceProblemsState
_SVXDeviceProblemsStateMutation
SVXDeviceProblemsStateMutating
SVXDeviceProblemsStateMutability
SVXTaskContext
_SVXTaskContextMutation
SVXTaskContextMutating
SVXTaskContextMutability
SVXServiceCommandHandlerRegistry
SVXDeviceSetupFlowScene
_SVXDeviceSetupFlowSceneMutation
SVXDeviceSetupFlowSceneMutating
SVXDeviceSetupFlowSceneMutability
SVXAudioPowerUpdateListening
SVXAudioPowerUpdateAnnouncer
SVXModuleManager
SVXServiceCommandHandlerClientCoordinationPhoneCall
AFMyriadEmergencyDelegate
_SVXRemoteExpressionParsingService
SVXExpressionParsingServing
SVXButtonEvent
_SVXButtonEventMutation
SVXButtonEventMutating
SVXButtonEventMutability
SVXSessionActivityListening
SVXSessionActivityAnnouncer
SVXClientServiceServerConnection
SVXClientService
SVXClientServiceDelegate
SVXAudioStreamBasicDescription
_SVXAudioStreamBasicDescriptionMutation
SVXAudioStreamBasicDescriptionMutating
SVXAudioStreamBasicDescriptionMutability
SVXServiceCommandHandlerUIAddViews
SVXUserFeedback
_SVXUserFeedbackMutation
SVXUserFeedbackMutating
SVXUserFeedbackMutability
SVXClientServiceConnection
SVXAudioSessionAssertion
SVXDaemon
SVXSessionManager
AFHomeAnnouncementListening
AFMyriadDelegate
AFNotifyObserverDelegate
AFQueueDelegate
SVXSessionDelegate
SVXNowPlayingPlaybackStateListening
AFClockAlarmListening
AFClockTimerListening
SVXSystemVolumeListening
SVXServiceCommandHandlerUISayIt
SVXTStubExpressionParsingService
SVXClientAudioPowerService
AFAudioPowerUpdaterDelegate
SVXClientAudioPowerServicing
SVXSpeechSynthesizer
VSSpeechSynthesizerDelegate
SVXNowPlayingPlaybackStateAnnouncer
SVXSystemVolumeAnnouncer
SVXNowPlayingObserver
SVXTaskTracker
SVXTaskTracking
SVXDeactivationContext
_SVXDeactivationContextMutation
SVXDeactivationContextMutating
SVXDeactivationContextMutability
SVXActivationContext
_SVXActivationContextMutation
SVXActivationContextMutating
SVXActivationContextMutability
SVXDeviceSetupFlowSiriCapabilitiesHint
_SVXDeviceSetupFlowSiriCapabilitiesHintMutation
SVXDeviceSetupFlowSiriCapabilitiesHintMutating
SVXDeviceSetupFlowSiriCapabilitiesHintMutability
SVXTaskTrackingCenter
SVXTaskTrackingDelegate
SVXSpeechSynthesisResult
_SVXSpeechSynthesisResultMutation
SVXSpeechSynthesisResultMutating
SVXSpeechSynthesisResultMutability
SVXClientInfo
_SVXClientInfoMutation
SVXClientInfoMutating
SVXClientInfoMutability
SVXServiceCommandHandlerFallback
SVXSessionActivationListening
SVXSessionActivationAnnouncer
SVXDeviceSetupOptions
_SVXDeviceSetupOptionsMutation
SVXDeviceSetupOptionsMutating
SVXDeviceSetupOptionsMutability
SVXServiceCommandHandlerUIDelayedActionCommand
SVXStoreDemo
_SVXStoreDemoMutation
SVXStoreDemoMutating
SVXStoreDemoMutability
SVXSpeechSynthesisContext
SVXUserFeedbackScene
_SVXUserFeedbackSceneMutation
SVXUserFeedbackSceneMutating
SVXUserFeedbackSceneMutability
Convenience
SVXDeviceSetupFlowSceneBuilder
SVXSpeechSynthesisUtteranceInfo
_SVXSpeechSynthesisUtteranceInfoMutation
SVXSpeechSynthesisUtteranceInfoMutating
SVXSpeechSynthesisUtteranceInfoMutability
_SVXAddViewsExpressionParser
SVXUserFeedbackNode
_SVXUserFeedbackNodeMutation
SVXUserFeedbackNodeMutating
SVXUserFeedbackNodeMutability
SVXClientActivationService
SVXClientActivationServicing
SVXServiceCommandHandlerUIDelayedActionCancelCommand
SVXSystemEvent
_SVXSystemEventMutation
SVXSystemEventMutating
SVXSystemEventMutability
SVXSpeechSynthesisAudio
_SVXSpeechSynthesisAudioMutation
SVXSpeechSynthesisAudioMutating
SVXSpeechSynthesisAudioMutability
_SVXPlayVoicemailExpressionParser
_SVXServiceCommandHandlerSmsPlayAudio
SVXServiceCommandResult
SVXClientServiceServer
SVXClientServiceServerConnectionDelegate
NSXPCListenerDelegate
SVXSystemObserver
SVXSystemVolumeDataSource
SVXAceCommandHandling
_SVXSpeakableNamespaceDomainOccurrenceProvider
AFSpeakableNamespaceProvider
SVXClientDeviceService
SVXClientDeviceServicing
SVXSessionOperation
SVXServiceCommandTransaction
SVXPlaybackRequestInfo
SVXSessionIdleAssertion
SVXSession
AFAssistantUIService
AFSpeechDelegate
SVXTaskTrackingCenterDelegate
SVXAudioSessionProviding
SVXDeviceSetupFlowDisplayKeyFrame
_SVXDeviceSetupFlowDisplayKeyFrameMutation
SVXDeviceSetupFlowDisplayKeyFrameMutating
SVXDeviceSetupFlowDisplayKeyFrameMutability
SVXDeviceSetupFlow
_SVXDeviceSetupFlowMutation
SVXDeviceSetupFlowMutating
SVXDeviceSetupFlowMutability
SVXSpeechSynthesis
SVXServiceCommandHandlerUIRepeatIt
SVXClientSpeechSynthesisService
SVXClientSpeechSynthesisServicing
_SVXPlayAudioExpressionParser
SVXSpeechSynthesisWordTiming
_SVXSpeechSynthesisWordTimingMutation
SVXSpeechSynthesisWordTimingMutating
SVXSpeechSynthesisWordTimingMutability
SVXSpeechSynthesisConfiguration
init
supportedCommandClass
initWithFormat:
resultIgnored
targetDevice
initWithAceHandler:
initWithParsingService:
_audioPlaybackDuration:
initWithItemURL:itemData:numberOfLoops:volume:fadeInDuration:fadeOutDuration:userInfo:
aceId
resultFailureWithErrorCode:reason:
resultSuccess
voiceMailId
_markVoiceMailAsRead:forRemoteDevice:
startAudioPlaybackRequest:options:completion:
getCurrentSessionUsingBlock:
parsePlayVoicemail:reply:
UUID
UUIDString
setAceId:
setIdentifier:
setObject:
dictionary
dataWithPropertyList:format:options:error:
setSerializedCommand:
setRemoteDevice:
handleCommand:afterCurrentRequest:commandHandler:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
isCommandUUFR:
handleCommand:withContext:taskTracker:completion:
identifier
shouldDependOnCommand:
prepareToHandleCommand:completion:
initWithSessionManager:
.cxx_destruct
_sessionManager
_identifier
length
getBytes:range:
sharedMainQueuePerformer
initWithClientServiceProvider:performer:
initWithType:clientServiceProvider:performer:
_connect
_connection
performBlock:
performBlock:withOptions:
initWithQueuePerformer:activationService:audioSystemService:deviceService:inputAudioPowerService:outputAudioPowerService:sessionService:speechSynthesisService:delegate:
sharedManager
clientServiceConnectionDidInvalidate:
clientServiceConnection:performerForComponent:
getClientServiceUsingBlock:errorHandler:
activationService
sessionStateService
sessionService
inputAudioPowerService
outputAudioPowerService
speechSynthesisService
deviceService
audioSystemService
_performer
_activationService
_sessionStateService
_sessionService
_inputAudioPowerService
_outputAudioPowerService
_speechSynthesisService
_deviceService
_audioSystemService
performer
_reset
handlersForCommand:
countByEnumeratingWithState:objects:count:
_handleCommand:taskTracker:completion:
initWithResult:
sessionManager
speechSynthesizer
initWithSpeechSynthesizer:
initWithDelayedActionStore:performer:
initWithDelayedActionStore:sessionManager:performer:
initWithSpeechSynthesizer:performer:
arrayWithObjects:count:
count
type
serviceCommandHandler
addObject:
arrayByAddingObjectsFromArray:
initWithHandlers:
invalidate
removeAllObjects
removeAllActions
copy
handleResult:forCommand:completion:
initWithPerformer:command:handlers:taskTracker:dependencies:completion:
setRefId:
setErrorCode:
setReason:
handleResultUsingIgnoredBlock:successBlock:failureBlock:commandBlock:
initWithModule:
startWithModuleInstanceProvider:platformDependencies:
stopWithModuleInstanceProvider:
reset
handleCommand:taskTracker:completion:
_module
_handlerRegistry
_fallbackHandler
_delayedActionStore
_transactions
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
dialogStrings
aceAudioData
streamIds
speakableContextInfo
objectAtIndex:
initWithPriority:options:speakableText:speakableContext:localizationKey:presynthesizedAudio:streamID:
error
synthesizeRequest:taskTracker:analyticsContext:completion:
enumerateObjectsUsingBlock:
_speechSynthesizer
objectForKey:
integerValue
_setCurrentState:
sessionStateService:willChangeStateFrom:to:
sessionStateService:didChangeStateFrom:to:
fetchStateWithCompletion:
fetchSessionStateWithCompletion:
clientServiceDidChange
currentState
delegate
setDelegate:
handleWillChangeSessionStateFrom:to:
handleDidChangeSessionStateFrom:to:
_clientServiceProvider
_currentState
_delegate
_descriptionWithIndent:
numberWithUnsignedLongLong:
componentsJoinedByString:
timestamp
options
flowScene
decodeObjectOfClass:forKey:
unsignedLongLongValue
initWithTimestamp:options:flowScene:
encodeObject:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
_timestamp
_options
_flowScene
initWithBaseModel:
setTimestamp:
setOptions:
setFlowScene:
generate
_baseModel
_mutationFlags
mutatedCopyWithMutator:
newWithBuilder:
speechSynthesizerDidBecomeBusy:
speechSynthesizerDidBecomeIdle:
speechSynthesizer:willEnqueueRequest:taskTracker:
speechSynthesizer:willStartRequest:taskTracker:
speechSynthesizer:didStartRequest:record:taskTracker:
speechSynthesizer:didFinishRequest:utteranceInfo:record:taskTracker:
speechSynthesizer:didCancelRequest:taskTracker:
speechSynthesizer:didInterruptRequest:taskTracker:
speechSynthesizer:didFailRequest:taskTracker:error:
protocol
initWithServiceCommandHandler:
initWithSessionActivityListener:
initWithAudioPowerUpdateListener:
activityListener
audioPowerUpdateListener
_type
_serviceCommandHandler
_activityListener
_audioPowerUpdateListener
weakObjectsHashTable
dealloc
removeObject:
methodSignatureForSelector:
selector
invokeWithTarget:
_accessListenersUsingBlock:
doesNotRecognizeSelector:
setRepresentation
addListener:
removeListener:
removeAllListeners
forwardInvocation:
_protocolRequiredInstanceMethodSignaturesBySelector
_protocolOptionalInstanceMethodSignaturesBySelector
_listeners
raise:format:
signatureWithObjCTypes:
numberWithUnsignedInteger:
numberWithDouble:
numberOfLoops
fadeInDuration
fadeOutDuration
itemURL
unsignedIntegerValue
doubleValue
initWithItemURL:numberOfLoops:fadeInDuration:fadeOutDuration:
_itemURL
_numberOfLoops
_fadeInDuration
_fadeOutDuration
setItemURL:
setNumberOfLoops:
setFadeInDuration:
setFadeOutDuration:
parsingService
setParsingService:
_parsingService
sampleRate
formatID
formatFlags
bytesPerPacket
framesPerPacket
bytesPerFrame
channelsPerFrame
bitsPerChannel
reserved
unsignedIntValue
initWithSampleRate:formatID:formatFlags:bytesPerPacket:framesPerPacket:bytesPerFrame:channelsPerFrame:bitsPerChannel:reserved:
UTF8String
_initWithIdentifier:queue:options:
_performBlock:withOptions:
_isExecutingInContext
performBlock:afterDelay:
initWithIdentifier:qosClass:relativePriority:options:
queue
_queue
setObject:forKey:
removeObjectForKey:
actionForKey:
setAction:forKey:
removeActionForKey:
_actionsByKey
_prepareForSetupWithContext:completion:
_beginSetupWithContext:
_endSetup
_evictCachedContents
ams_sharedAccountStore
ams_activeiTunesAccount
ams_storefront
ams_localiTunesAccount
languageCode
isEqualToString:
gender
defaultGenderForOutputVoiceLanguageCode:
_cachedSceneWithID:forLanguageCode:andGender:siriCapabilitiesHint:
_prepareSiriIntroSceneWithLanguageCode:gender:completion:
_prepareTryHeySiriCapabilitiesSceneWithLanguageCode:gender:completion:
setStyle:
_prepareSiriCapabilitiesSceneWithID:languageCode:gender:hint:completion:
_prepareTryHeySiriMusicSceneWithLanguageCode:gender:completion:
_prepareTryHeySiriWeatherSceneWithLanguageCode:gender:completion:
_prepareTryHeySiriNewsSceneWithLanguageCode:gender:completion:
hasActiveAccount
caseInsensitiveCompare:
hasPrefix:
isNewsRestricted
initWithSceneID:speakableText:displayKeyFrames:siriCapabilitiesHint:
initWithIdentifier:languageCode:gender:scenes:
utteranceInfo
utterance
wordTimings
range
substringWithRange:
timeInterval
speakableText
initWithKeyFrameID:text:offset:duration:
_cacheScene:forLanguageCode:andGender:
style
sceneID
siriCapabilitiesHint
prepareForSetupWithContext:completion:
beginSetupWithContext:
endSetup
evictCachedContents
_cachedSceneMapsByVoiceKey
moduleInstanceWithIdentifier:
clientServiceServer
nowPlayingObserver
systemObserver
deviceSetupManager
initWithDictionaryRepresentation:
dictionaryRepresentation
_dictionaryRepresentation
numberWithInteger:
priority
speakableContext
localizationKey
presynthesizedAudio
streamID
setWithObjects:
decodeObjectOfClasses:forKey:
_priority
_speakableText
_speakableContext
_localizationKey
_presynthesizedAudio
_streamID
setPriority:
setSpeakableText:
setSpeakableContext:
setLocalizationKey:
setPresynthesizedAudio:
setStreamID:
svx_parseableExpression
svx_applyParsedExpression:
numberWithBool:
isPhonetic
text
boolValue
initWithText:isPhonetic:
_isPhonetic
_text
setText:
setIsPhonetic:
audioSystemService:audioSessionWillBecomeActive:
audioSystemService:audioSessionWillBecomeActiveWithActivationContext:
audioSystemService:audioSessionWillBecomeInactiveWithDeactivationContext:
audioSystemService:audioSessionDidBecomeActive:
audioSystemService:audioSessionDidBecomeActiveWithActivationContext:
audioSystemService:audioSessionDidBecomeInactiveWithDeactivationContext:
handleAudioSessionWillBecomeActive:activationContext:deactivationContext:
handleAudioSessionDidBecomeActive:activationContext:deactivationContext:
_isAudioSessionActive
initWithSource:timestamp:buttonEvent:clientInfo:userInfo:
deactivateWithContext:completion:
sessionService:willChangeStateFrom:to:
sessionService:didChangeStateFrom:to:
sessionService:willPresentFeedbackWithDialogIdentifier:
sessionService:willStartSoundWithID:
sessionService:didStartSoundWithID:
sessionService:didStopSoundWithID:error:
sessionService:willBecomeActiveWithActivationContext:
sessionService:didBecomeActiveWithActivationContext:
sessionService:willResignActiveWithOptions:duration:
sessionService:didResignActiveWithDeactivationContext:
sessionServiceDidResignActive:
fetchSessionActivityStateWithCompletion:
handleWillChangeStateFrom:to:
handleDidChangeStateFrom:to:
handleWillPresentFeedbackWithDialogIdentifier:
handleWillStartSoundWithID:
handleDidStartSoundWithID:
handleDidStopSoundWithID:error:
handleWillBecomeActiveWithActivationContext:
handleDidBecomeActiveWithActivationContext:
handleWillResignActiveWithOptions:duration:
handleDidResignActiveWithDeactivationContext:
_isActive
initWithCommand:taskTracker:
command
taskTracker
_command
_taskTracker
sharedInstance
localizedStringForKey:table:bundle:languageCode:
bundleIdentifier
stringByReplacingOccurrencesOfString:withString:
bundleWithIdentifier:
bundleWithPath:
stringWithFormat:
initWithIdentifier:instanceClass:performer:
instanceClass
isActive
setIsActive:
_instanceClass
isFixingProblems
problems
initWithIsFixingProblems:problems:
_isFixingProblems
_problems
setIsFixingProblems:
setProblems:
origin
isUUFR
listensAfterSpeaking
sessionUUID
requestUUID
refId
dialogIdentifier
dialogPhase
listenAfterSpeakingBehavior
activationContext
deactivationContext
initWithOrigin:timestamp:sessionUUID:requestUUID:aceId:refId:dialogIdentifier:dialogPhase:isUUFR:listensAfterSpeaking:listenAfterSpeakingBehavior:activationContext:deactivationContext:error:
_isUUFR
_listensAfterSpeaking
_origin
_sessionUUID
_requestUUID
_aceId
_refId
_dialogIdentifier
_dialogPhase
_listenAfterSpeakingBehavior
_activationContext
_deactivationContext
_error
setOrigin:
setSessionUUID:
setRequestUUID:
setDialogIdentifier:
setDialogPhase:
setIsUUFR:
setListensAfterSpeaking:
setListenAfterSpeakingBehavior:
setActivationContext:
setDeactivationContext:
setError:
allKeys
addObjectsFromArray:
_handlersByServiceCommandClassName
domain
code
userInfo
displayKeyFrames
_sceneID
_displayKeyFrames
_siriCapabilitiesHint
setSceneID:
setDisplayKeyFrames:
setSiriCapabilitiesHint:
audioPowerWillBeginUpdateForType:wrapper:
audioPowerDidEndUpdateForType:
initWithCapacity:
enumerateKeysAndObjectsUsingBlock:
_startWithModuleInstanceMap:platformDependencies:
_stopWithModuleInstanceMap:
startWithPlatformDependencies:
stop
_modulesByIdentifier
_moduleInstanceMap
emergencyCall
initWithDelegate:onQueue:
initiateEmergencyCallMyriad
emergencyCall:wasHandled:
_emergencyManager
_waitForResult
_wasHandled
setExpressions:
setTargetDevice:
parsedExpressions
handleAceCommand:reply:
parseExpressions:targetDevice:reply:
aceHandler
setAceHandler:
_aceHandler
initWithType:timestamp:
setType:
sessionWillChangeFromState:toState:
sessionDidChangeFromState:toState:
sessionWillPresentFeedbackWithDialogIdentifier:
sessionWillStartSoundWithID:
sessionDidStartSoundWithID:
sessionDidStopSoundWithID:error:
sessionWillBecomeActiveWithActivationContext:
sessionDidBecomeActiveWithActivationContext:
sessionWillResignActiveWithOptions:duration:
sessionDidResignActiveWithDeactivationContext:
audioSessionWillBecomeActive:activationContext:deactivationContext:
audioSessionDidBecomeActive:activationContext:deactivationContext:
_setQueue:
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
_connectionInterrupted
setInterruptionHandler:
_connectionInvalidated
setInvalidationHandler:
_cleanUpConnection
pingWithReply:
preheatWithActivationSource:
prewarmWithContext:completion:
activateWithContext:completion:
performManualEndpointing
transitToAutomaticEndpointing
fetchAudioPowerWithType:completion:
prewarmRequest:
synthesizeRequest:completion:
enqueueSpeechSynthesisRequest:completion:
cancelPendingSpeechSynthesisRequest:
stopSpeechSynthesisRequest:
setDeviceSetupContext:
prepareForDeviceSetupWithContext:completion:
_remoteServiceDelegateWithErrorHandler:
requestPermissionToActivateWithContext:completion:
notifyWillActivateWithContext:
notifyDidActivateWithContext:
notifyDidNotActivateWithContext:error:
notifyWillDeactivateWithContext:
notifyDidDeactivateWithContext:
notifyWillChangeSessionStateFrom:to:
notifyDidChangeSessionStateFrom:to:
notifySessionWillPresentFeedbackWithDialogIdentifier:
notifySessionWillStartSoundWithID:
notifySessionDidStartSoundWithID:
notifySessionDidStopSoundWithID:error:
notifySessionWillBecomeActiveWithActivationContext:
notifySessionDidBecomeActiveWithActivationContext:
notifySessionWillResignActiveWithOptions:duration:
notifySessionDidResignActiveWithDeactivationContext:
notifyWillBeginUpdateAudioPowerWithType:wrapper:
notifyDidEndUpdateAudioPowerWithType:
notifyAudioSessionWillBecomeActive:activationContext:deactivationContext:
notifyAudioSessionDidBecomeActive:activationContext:deactivationContext:
remoteObjectProxyWithErrorHandler:
clientServiceServerConnectionWasDisconnected:
initWithConnection:connectionDelegate:localService:
deviceSetupContext
_localService
_connectionDelegate
_deviceSetupContext
svx_isDeferredExpressionContextObject
numberWithUnsignedInt:
_formatID
_formatFlags
_bytesPerPacket
_framesPerPacket
_bytesPerFrame
_channelsPerFrame
_bitsPerChannel
_reserved
_sampleRate
setSampleRate:
setFormatID:
setFormatFlags:
setBytesPerPacket:
setFramesPerPacket:
setBytesPerFrame:
setChannelsPerFrame:
setBitsPerChannel:
setReserved:
af_dialogPhase
isExpository
parseAddViews:reply:
context
beginChildWithContext:
views
handleAceView:isExpository:taskTracker:completion:
dictionaryWithObjects:forKeys:count:
listenAfterSpeaking
sharedPreferences
listenAfterSpeakingDisabled
instrumentationContext
canUseServerTTS
enqueueRequest:languageCode:gender:audioSessionID:preparation:finalization:taskTracker:analyticsContext:
items
appendString:
speakableDelimiter
speakableFinalDelimiter
speakableSuffix
contentType
audioContent
voiceContent
initWithIdentifier:contentType:audioContent:voiceContent:
_contentType
_audioContent
_voiceContent
setContentType:
setAudioContent:
setVoiceContent:
_clientServiceDidChange
_invalidate
_clientServiceWithErrorHandler:
initWithType:utteranceInfo:error:
handleRequestPermissionToActivateWithContext:completion:
handleWillActivateWithContext:
handleDidActivateWithContext:
handleDidNotActivateWithContext:error:
handleWillDeactivateWithContext:
handleDidDeactivateWithContext:
initWithXPCWrapper:
handleWillBeginUpdateAudioPowerWithProvider:
handleDidEndUpdateAudioPower
errorWithDomain:code:userInfo:
_cleanUpComponents
initWithMachServiceName:options:
connectionInterrupted
connectionInvalidated
resume
initWithComponents:delegate:
_queuePerformer
_isInvalid
initWithReason:audioSessionID:taskTracker:
relinquish
audioSessionID
reason
_audioSessionID
_reason
processInfo
processName
processIdentifier
initialize
_moduleManager
sharedAnalytics
logEventWithType:context:
_preheatWithActivationSource:
_prewarmWithContext:completion:
initWithBlock:defaultValue:
invokeWithValue:
initWithActivationContext:completion:
enqueueObject:
initWithBlock:
invoke
initWithDeactivationContext:completion:
_fetchCurrentStateWithCompletion:
_fetchCurrentActivityStateWithCompletion:
_fetchCurrentAudioPowerWithType:completion:
_currentSession:
_updateDeviceSetupContext:
endWaitingForMyriadDecisionWithToken:result:
initWithSource:timestamp:buttonEvent:systemEvent:clientInfo:requestInfo:userInfo:
_fetchStereoPartnerLastMyriadWinDate
initWithDelegate:
myriadDuckingEnabled
setPrewarmHandler:
setNewRequestHandler:
_handleRemoteRequestDismissalWithReason:options:analyticsContext:completion:
setDismissalHandler:
activateWithSpeechRequestOptions:options:clockAlarmSnapshot:clockTimerSnapshot:deviceSetupContext:deviceProblemsState:homeAnnouncementState:nowPlayingAppPlaybackState:completion:
setNewSpeechRequestHandler:
beginMonitoringAvailability
attachToTether
setAttachmentStatusChangedHandler:
_attachToTether
addPlaybackStateListener:
getCurrentPlaybackStateUsingBlock:
getAlarmSnapshotWithCompletion:
getTimerSnapshotWithCompletion:
getStateWithCompletion:
useSiriActivationSPIForHomePod
initWithUTF8String:
initWithName:options:queue:delegate:
volumeDataSource
addVolumeListener:
getVolumeForAudioCategory:completion:
_fetchExperimentContext
dequeueAllObjects
removeVolumeListener:
removePlaybackStateListener:
_invalidateCurrentSession
stopMonitoringAvailability
_handleDeviceProblemsStateChanged:
_handleSession:willChangeFromState:toState:
_handleSession:didChangeFromState:toState:
_handleSession:willBeginUpdateAudioPowerWithType:wrapper:
_handleSession:didEndUpdateAudioPowerWithType:
_handleSession:willStartSoundWithID:
_handleSession:didStartSoundWithID:
_handleSession:didStopSoundWithID:error:
_handleSession:willBecomeActiveWithActivationContext:activityUUID:
_handleSession:didBecomeActiveWithActivationContext:activityUUID:
_handleSession:willResignActiveWithOptions:duration:activityUUID:
_handleSession:didResignActiveWithDeactivationContext:activityUUID:
_handleSession:willActivateWithContext:
_handleSession:didActivateWithContext:
_handleSession:didNotActivateWithContext:error:
_handleSession:willDeactivateWithContext:
_handleSession:didDeactivateWithContext:
_handleSession:audioSessionWillBecomeActive:activationContext:deactivationContext:
_handleSession:audioSessionDidBecomeActive:activationContext:deactivationContext:
_handleSessionDidInvalidate:
_handleSpeechSynthesizer:willStartRequest:taskTracker:
_handleSpeechSynthesizer:didStartRequest:record:taskTracker:
_handleSpeechSynthesizer:didFinishRequest:utteranceInfo:record:taskTracker:
_handleSpeechSynthesizer:didCancelRequest:taskTracker:
_handleSpeechSynthesizer:didInterruptRequest:taskTracker:
_handleSpeechSynthesizer:didFailRequest:taskTracker:error:
_handleNowPlayingObserver:playbackStateDidChangeFrom:to:
_handleSystemVolumeDataSource:didChangeVolumeForAudioCategory:from:toLevel:
_handleClockAlarmsObserver:snapshotDidUpdateFrom:to:
_handleClockTimersObserver:snapshotDidUpdateFrom:to:
_handleHomeAnnouncementObserver:stateDidUpdateFrom:to:
_processNextOperations
initWithPerformer:serviceCommandHandler:speechSynthesizer:experimentContext:delegate:
updateDeviceProblemsState:
updateDeviceSetupContext:
updateClockAlarmSnapshot:
updateClockTimerSnapshot:
updateHomeAnnouncementState:
updateNowPlayingAppPlaybackState:
attach:
dequeueObject
_activateWithContext:activityState:completion:
_deactivateWithContext:completion:
handleOperationUsingActivationBlock:deactivationBlock:
getActivityStateWithCompletion:
preheatWithStyle:
preheatWiProx
source
requestInfo
speechRequestOptions
isVoiceTrigger
systemUptime
activateWithContext:options:clockAlarmSnapshot:clockTimerSnapshot:deviceSetupContext:deviceProblemsState:homeAnnouncementState:nowPlayingAppPlaybackState:mediaPlaybackVolume:speechSynthesisRecord:speechSynthesisState:speechRecordingAlertPolicy:completion:
getAudioPowerWithType:completion:
endTask
_handleFetchedExperimentContext:
fetchExperimentContextWithCompletion:
_handleMyriadForActivationContext:
sessionManager:willActivateWithContext:
systemEvent
deviceSetupFlowScene
sessionManager:didActivateWithContext:
sessionManager:didNotActivateWithContext:error:
sessionManager:willDeactivateWithContext:
sessionManager:didDeactivateWithContext:
_handleFetchedStereoPartnerLastMyriadWinDate:
getStereoPartnerLastMyriadWinDate:
getStereoPairState:
updateMediaPlaybackVolume:
myriadContext
isSpeechRequest
beginWaitingForMyriadDecision
startAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromVoiceTriggerAdjusted:withContext:
setupEnabled:
homeAnnouncementObserver:stateDidUpdateFrom:to:
homeAnnouncementObserver:snapshotDidUpdateFrom:to:
willStartWithSession:
willEndSession:
shouldAbortAnotherDeviceBetter:
shouldContinue:
shouldUnduck:
shouldHandleEmergency:
advertisingWillBeginWithDelay:advertisingInterval:
advertisingDidBegin:
advertisingDidEnd:
listeningDidBegin:
listeningDidEnd:
notifyObserver:didReceiveNotificationWithToken:
notifyObserver:didChangeStateFrom:to:
queue:didEnqueueObjects:
session:willChangeFromState:toState:
session:didChangeFromState:toState:
session:willBeginUpdateAudioPowerWithType:wrapper:
session:didEndUpdateAudioPowerWithType:
session:willStartSoundWithID:
session:didStartSoundWithID:
session:didStopSoundWithID:error:
session:willBecomeActiveWithActivationContext:activityUUID:
session:didBecomeActiveWithActivationContext:activityUUID:
session:willResignActiveWithOptions:duration:activityUUID:
session:didResignActiveWithDeactivationContext:activityUUID:
session:willActivateWithContext:
session:didActivateWithContext:
session:didNotActivateWithContext:error:
session:willDeactivateWithContext:
session:didDeactivateWithContext:
session:audioSessionWillBecomeActive:activationContext:deactivationContext:
session:audioSessionDidBecomeActive:activationContext:deactivationContext:
sessionDidInvalidate:
nowPlayingObserver:playbackStateDidChangeFrom:to:
clockAlarmObserver:alarmDidFire:
clockAlarmObserver:alarmDidDismiss:
clockAlarmObserver:snapshotDidUpdateFrom:to:
clockTimerObserver:timerDidFire:
clockTimerObserver:timerDidDismiss:
clockTimerObserver:snapshotDidUpdateFrom:to:
systemVolumeDataSource:didChangeVolumeForAudioCategory:from:toLevel:
fetchCurrentStateWithCompletion:
fetchCurrentActivityStateWithCompletion:
fetchCurrentAudioPowerWithType:completion:
getAudioSessionProviderWithCompletion:
addActivationListener:
removeActivationListener:
addAudioPowerUpdateListener:
removeAudioPowerUpdateListener:
addActivityListener:
removeActivityListener:
_myriadStereoPartnerDataChanged
_fetchStereoPairStateWithCompletion:
_borealisTriggerNotifyObserver
_earlyDetectNotifyObserver
_deviceProblemsNotifyObserver
_nowPlayingObserver
_clockAlarmObserver
_clockTimerObserver
_homeAnnouncementObserver
_mediaPlaybackVolume
_myriadToken
_myriadCoordinator
_currentMyriadCoordinatedRequestAssertion
_myriadDuckingAllowed
_lastStereoPartnerMyriadWin
_remoteRequestWatcher
_tether
_experimentContext
_usesUnifiedSiriActivationForVoiceTrigger
_currentSession
_activationAnnouncer
_audioPowerUpdateAnnouncer
_activityAnnouncer
_queuedOperations
_lastSessionResignActiveTimestamp
_nowPlayingPlaybackState
_speechSynthesisRecord
_speechSynthesisState
_deviceProblemsState
_clockAlarmSnapshot
_clockTimerSnapshot
_homeAnnouncementState
_coreDuetQueue
_nowPlayingPlaybackStateRecordTime
_needsClearContext
initWithLocaleIdentifier:
initWithLocale:
groupIdentifier
providerForDomain:
registerProvider:forNamespace:
message
parseStringWithFormat:error:
setContext:
setExpressionString:
firstObject
parseableExpression
parsedOutput
audioData
stringByDeletingPathExtension
pathExtension
URLForResource:withExtension:
URLsForResourcesWithExtension:subdirectory:
lastPathComponent
localeWithLocaleIdentifier:
setHandleTTSCodes:
expressionString
setParseableExpression:
setParsedOutput:
_englishStubParser
_handleWillBeginUpdateAudioPowerWithProvider:
_handleDidEndUpdateAudioPower
_beginUpdateWithFrequency:
_endUpdate
audioPowerServiceDidUpdate:averagePower:peakPower:
_createUpdater
_destroyUpdater
audioPowerServiceWillBeginUpdate:
initWithProvider:queue:frequency:delegate:
beginUpdate
endUpdate
audioPowerServiceDidEndUpdate:
audioPowerUpdaterDidUpdate:averagePower:peakPower:
beginUpdateWithFrequency:
_wantsUpdate
_frequency
_provider
_updater
defaultCenter
removeObserver:
initWithOperationType:request:languageCode:gender:audioSessionID:preparation:finalization:taskTracker:analyticsContext:
_prewarmWithContext:
_enqueueContext:
_cancelPendingSpeakingContextWithRequest:
_stopCurrentSpeakingContextWithRequest:withInterruptionBehavior:
_cancelPendingContextsWithOperationType:
_stopCurrentSpeakingContextWithInterruptionBehavior:
initWithLocale:outputVoiceInfo:audioSessionID:
_configureWithConfiguration:
outputVoiceChanged:
addObserver:selector:name:object:
languageCodeChanged:
_prewarm
_beginUpdateAudioPowerWithCompletion:
_endUpdateAudioPower
configurationWithOutputVoiceInfo:
configurationWithLocale:
_handleDidStartSpeakingWithSpeechRequest:timestamp:
_handleDidFinishSpeakingWithSpeechRequest:instrumentMetrics:
_handleDidFinishSpeakingWithSpeechRequest:success:error:
_handleDidStartPresynthesizedAudioRequest:timestamp:
_handleDidStopPresynthesizedAudioRequest:success:error:
_handleDidFinishPresynthesizedAudioRequest:instrumentMetrics:error:
textRange
startTime
_handleDidReceiveSpeechWordTimingInfoArray:forSpeechRequest:
_handleDidFinishSynthesizingForSpeechRequest:instrumentMetrics:error:
outputVoiceInfo
setLanguageCode:
setGender:
audioSessionAssertion
setAudioSessionID:
request
setContextInfo:
setShouldCache:
_configuredSpeechRequestForContext:
prewarmIfNeededWithRequest:
locale
_configureSpeechSynthesizerWithAudioSessionID:
_processPendingContexts
useSpecificAudioSession:
beginAudioPowerUpdateWithReply:
endAudioPowerUpdate
speechRequest
analyticsContext
initWithUtterance:beginTimestamp:endTimestamp:
setInstrumentMetrics:
dictionaryMetrics
mutableCopy
shouldLogForQA
requestCreatedTimestamp
logEventWithType:machAbsoluteTime:context:
speechBeginTimestamp
setAceID:
setAudioOutputRoute:
emitInstrumentation:machAbsoluteTime:
speechEndTimestamp
_continueContext:error:
_finalizeContext:withResultType:utterance:error:
presynthesizedAudioRequest
creationContextFromInstrumentMetrics:
setSpeechWordTimingInfoArray:
objectsPassingTest:
minusSet:
synthesisBeginTimestamp
synthesisEndTimestamp
voiceAssetKey
isWarmStart
isCacheHitFromDisk
isServerTTS
ttsSynthesisLatency
timeToSpeakLatency
audioQueueLatency
eagerRequestTimeGap
audioDuration
isCacheHitFromMemory
audioStartTimestampDiffs
numberWithLongLong:
_numberOfContexts
operationType
_cancelPendingSpeakingContextsWithPriorityBelow:
addIndex:
objectsAtIndexes:
removeObjectsAtIndexes:
_startContext:
prepare
setAudioSessionAssertion:
acquireAudioSessionForReason:completion:
handledPresynthesizedAudioRequest
setHandledPresynthesizedAudioRequest:
_startPresynthesizedAudioRequestForContext:error:
handledSpeechRequest
setHandledSpeechRequest:
_startSpeechRequestForContext:error:
initWithDomain:code:userInfo:
data
decoderASBD
playerASBD
initWithAudioData:decoderStreamDescription:playerStreamDescription:
initWithIdentifier:
cachePresynthesizedAudioRequest:
startSpeakingPresynthesizedAudioRequest:
setPresynthesizedAudioRequest:
parseStringWithFormat:error:containsPrivacySensitiveContents:
setCanUseServerTTS:
startSynthesizingRequest:
startSpeakingRequest:
setSpeechRequest:
finalizeWithResultType:utteranceInfo:error:
enumerateObjectsAtIndexes:options:usingBlock:
stopSpeakingAtNextBoundary:synchronously:error:
stopSpeakingPresynthesizedAudioSynchronously:error:
indexesOfObjectsPassingTest:
_cancelPendingContextsAtIndexes:
speechWordTimingInfoArray
initWithRange:timeInterval:
initWithUtterance:wordTimings:
instrumentMetrics
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:withRequest:didReceiveTimingInfo:
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeakingRequest:withInstrumentMetrics:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechSynthesizer:didFinishSynthesisRequest:withInstrumentMetrics:error:
speechSynthesizer:didStartPresynthesizedAudioRequest:
speechSynthesizer:didStopPresynthesizedAudioRequest:atEnd:error:
speechSynthesizer:didFinishPresynthesizedAudioRequest:withInstrumentMetrics:error:
speechSynthesizer:didFinishPrewarmRequest:withError:
speechSynthesizer:didFinishSynthesisRequest:withError:
speechSynthesizer:didStopPresynthesizedAudioRequestAtEnd:error:
speechSynthesizerDidStartSpeaking:
speechSynthesizer:didFinishSpeaking:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeaking:withError:
speechSynthesizer:didFinishSpeakingRequest:successfully:withError:
speechSynthesizerDidPauseSpeaking:
speechSynthesizerDidContinueSpeaking:
speechSynthesizer:willSpeakRangeOfSpeechString:
cancelRequest:
stopRequest:withInterruptionBehavior:
cancelPendingRequests
stopCurrentRequestWithInterruptionBehavior:
prewarm
updateWithConfiguration:
beginUpdateAudioPowerWithCompletion:
endUpdateAudioPower
_impl
_announcer
_currentConfiguration
_currentSpeakingContext
_pendingContexts
_synthesizingContexts
_needsPrewarm
_startObservingNowPlayingAppPlaybackState
_fetchNowPlayingAppPlaybackState
_stopObservingNowPlayingAppPlaybackState
nowPlayingAppPlaybackStateChanged:
removeObserver:name:object:
_handleNowPlayingAppPlaybackStateChange:
_playbackState
_playbackStateAnnouncer
canonicalLocaleIdentifierFromString:
currentLocale
outputVoice
initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:
audioBuffer
decoderStreamDescription
playerStreamDescription
initWithData:decoderASBD:playerASBD:
taskTrackerDidEnd:
initWithContext:instrumentationContext:delegate:
taskTracker:childWillBegin:
parent
_context
_parent
_instrumentationContext
buttonEvent
clientInfo
_source
_buttonEvent
_clientInfo
_userInfo
setSource:
setButtonEvent:
setClientInfo:
setUserInfo:
_systemEvent
_requestInfo
setSystemEvent:
setRequestInfo:
initWithStyle:
_style
_beginContext:
_endContext:
_endContextsPassingTest:
containsObject:
taskTrackingCenterWillBecomeBusy:
taskTrackingCenter:didBeginTrackingTaskWithContext:
taskTrackingCenter:didEndTrackingTaskWithContext:
taskTrackingCenterDidBecomeIdle:
initWithPerformer:delegate:
beginTrackingTaskWithContext:instrumentationContext:
endTrackingTaskWithContext:
endTrackingTasksPassingTest:
endTrackingAllTasks
getContextsOfAllTrackedTasksUsingBlock:
_contexts
_utteranceInfo
setUtteranceInfo:
numberWithInt:
intValue
initWithProcessIdentifier:processName:
_processIdentifier
_processName
setProcessIdentifier:
setProcessName:
_result
localizations
URLForResource:withExtension:subdirectory:localization:
initWithContentsOfURL:
hasSuffix:
substringToIndex:
allObjects
compare:
sortedArrayUsingSelector:
localizedOOBStringForKey:language:gender:
interfaceWithProtocol:
initWithLanguageCode:gender:hasActiveAccount:isNewsRestricted:
_languageCode
_gender
_hasActiveAccount
_isNewsRestricted
setHasActiveAccount:
setIsNewsRestricted:
timerValue
_performDelayedAction:
commands
handleCommand:taskTracker:
numberWithFloat:
transcriptID
outputVolume
floatValue
initWithTranscriptID:languageCode:gender:outputVolume:
_outputVolume
_transcriptID
setTranscriptID:
setOutputVolume:
_preparation
_finalization
_handledPresynthesizedAudioRequest
_handledSpeechRequest
_operationType
_request
_analyticsContext
_presynthesizedAudioRequest
_speechRequest
_instrumentMetrics
_speechWordTimingInfoArray
_audioSessionAssertion
alarmsByID
orderedSet
notifiedFiringAlarmIDs
objectForKeyedSubscript:
svx_notifiedFiringAlarms
timersByID
notifiedFiringTimerIDs
svx_notifiedFiringTimers
duration
nodes
initWithIdentifier:duration:nodes:
_duration
_nodes
setDuration:
setNodes:
initWithTimestamp:options:
initWithTimestamp:
initWithTimestamp:presentsAlternativeFlowWhenStoreAccountIsUnavailable:
build
_utterance
_wordTimings
setUtterance:
setWordTimings:
indexOfObjectPassingTest:
replaceObjectAtIndex:withObject:
setViews:
ignoresLocallyParseableExpressions
setIgnoresLocallyParseableExpressions:
_ignoresLocallyParseableExpressions
turnIdentifier
newTurnBasedContextWithPreviousTurnID:
activationEvent
setInvocationSource:
emitInstrumentation:
setPresentationType:
setPresenting:
setPreviousState:
setCurrentState:
setDismissalReason:
setDismissed:
setSiriResponseMode:
setSiriResponseContext:
feedback
dependentNodes
initWithIdentifier:duration:feedback:dependentNodes:
_feedback
_dependentNodes
setFeedback:
setDependentNodes:
_requestPermissionToActivateWithContext:
_stopPreheatTimer
clientActivationService:willActivateWithContext:
clientActivationService:didActivateWithContext:
clientActivationService:didNotActivateWithContext:error:
clientActivationService:willDeactivateWithContext:
clientActivationService:didDeactivateWithContext:
_enqueueButtonEvent:
_activateWithContext:completion:
insertObject:atIndex:
removeLastObject
_startPreheatTimer
_processLastButtonActivationContext
_performManualEndpointing
_transitToAutomaticEndpointing
clientActivationService:shouldActivateWithContext:
_preheatTimerArrivedWithToken:
handleButtonEvent:
enqueueButtonEvent:
activateWithUserInfo:completion:
activateWithButtonEvent:userInfo:completion:
prewarmForSystemEvent:completion:
activateWithSystemEvent:userInfo:completion:
deactivateWithUserInfo:completion:
_queuedButtonEvents
_lastButtonActivationContext
_preheatToken
manualEndpointingThreshold
storeDemo
orderedAlarmAndTimerIDs
speechSynthesisRequest
delayedActionAceId
initWithType:timestamp:deviceSetupFlowScene:storeDemo:orderedAlarmAndTimerIDs:speechSynthesisRequest:audioSessionID:
_deviceSetupFlowScene
_storeDemo
_orderedAlarmAndTimerIDs
_speechSynthesisRequest
setDeviceSetupFlowScene:
setStoreDemo:
setOrderedAlarmAndTimerIDs:
setSpeechSynthesisRequest:
_data
_decoderASBD
_playerASBD
setData:
setDecoderASBD:
setPlayerASBD:
setAttachmentExpression:
attachment
parsePlayAudio:reply:
_initWithType:failureErrorCode:failureReason:command:results:
_optimalResult
resultWithCommand:
resultWithResults:
_failureErrorCode
_failureReason
_results
_removeAllConnections
initWithMachServiceName:
suspend
valueForEntitlement:
_addConnection:
_updateDeviceSetupContext
stopSpeech
transitSpeechToAutomaticEndpointing
_removeConnection:
listener:shouldAcceptNewConnection:
_listener
_connections
_deviceSetupManager
_startObservingInfo
_startObservingMediaServerConnection
_startObservingSystemVolume
_fetchSystemVolumes
_stopObservingMediaServerConnection
_stopObservingSystemVolume
_stopObservingInfo
_logSnapshot
_handleMediaServerConnectionDied
name
_handleSystemVolumeChangeForCategory:volume:reason:
mediaServerConnectionDied:
systemVolumeChanged:
_volumeAnnouncer
_volumesByCategory
rangeOfString:
allVoicesForSiriSessionLanguage:
array
setDomain:
setDeferredMessageKeys:
deferredMessageKeys
stringForExpression:
stringForExpression:containsPrivacySensitiveContents:
initWithAceObject:
setAssistantBulletin:
attachmentURLForExpression:
setCount:
_domain
_count
_deferredMessageKeys
_updateSetupContext
_currentSetupContext
_activationCompletion
_deactivationCompletion
_dispatchCompletionWithResult:
addBlockedTransaction:
_prepare
_addBlockedTransaction:
_removeBlockingTransaction:
_handler:didPrepareSuccessfully:context:completion:
_handler:didHandleWithResult:completion:
removeBlockingTransaction:
_handle
handler:didPrepareSuccessfully:context:completion:
_didPrepareAll
handler:didHandleWithResult:completion:
_didHandleAll
allValues
_unblockDependentTransactions
_state
_preparedResultsByHandlerIdentifier
_preparedContextsByHandlerIdentifier
_handledResultsByHandlerIdentifier
_handlers
_completion
_blockingTransactions
_blockedTransactions
didStart
setDidStart:
didFinish
setDidFinish:
start
setStart:
finish
setFinish:
_didStart
_didFinish
_start
_finish
initWithTimestamp:session:
session
_session
experimentForSiriVOXSounds
experimentForSiriVOXTapToSiriBehavior
_preheatWithStyle:
_activateWithContext:options:clockAlarmSnapshot:clockTimerSnapshot:deviceSetupContext:deviceProblemsState:homeAnnouncementState:nowPlayingAppPlaybackState:mediaPlaybackVolume:speechSynthesisRecord:speechSynthesisState:speechRecordingAlertPolicy:taskTracker:completion:
invokeWithSignal:
_stopSpeech
_transitSpeechToAutomaticEndpointing
_transitSpeechToManualEndpointing
_cancelRequestWithOptions:keepTaskTracker:
_dismiss
_connection:
stopAudioPlaybackRequest:immediately:
_addRequestBarrier:
setConfiguration:
_startSpeechRequestWithOptions:clearsContext:clockAlarmSnapshot:clockTimerSnapshot:deviceSetupContext:deviceProblemsState:homeAnnouncementState:nowPlayingAppPlaybackState:taskTracker:completion:
_handleSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:
_setAudioSessionID:
_handleSpeechRecordingDidBeginOnAVRecordRoute:
_handleSpeechRecordingDidChangeAVRecordRoute:
_handleSpeechRecordingDidDetectStartpoint
_handleSpeechRecordingPerformTwoShotPromptWithType:completion:
_handleSpeechRecordingDidEnd
_handleSpeechRecordingDidCancel
_handleSpeechRecordingDidFailWithError:
_handleSpeechRecognitionDidFailWithError:
af_bestTextInterpretation
_handleSpeechRecognized:
_handleSpeechRecognizedPartialResult:
_handleRequestWillStart
_handleDismissAssistant
_handleRequestFinished
_handleReceivedCommand:completion:
_handleRequestFailedWithError:
_handleShouldSpeak:
_handleDidChangeAudioSessionID:
_handleAudioSessionDidBeginInterruption
_handleAudioSessionDidEndInterruption:
initWithActivityType:
setWebpageURL:
becomeCurrent
_handleWillStartAudioPlaybackRequest:
_handleDidStartAudioPlaybackRequest:
_handleDidStopAudioPlaybackRequest:error:
_handleDidHandleQuickStopWithActions:
_handleWillProcessStartPlaybackWithDestination:intent:completion:
_handleDidFailStartPlaybackWithDestination:
_handleAudioSessionWillBecomeActive:
_handleAudioSessionDidBecomeActive:
_forceAudioSessionActiveWithOptions:reason:completion:
_handleSpeechSynthesizerWillBecomeBusy
_handleSpeechSynthesizerDidBecomeIdle
_handleSpeechSynthesizerWillStartRequest:taskTracker:
_handleSpeechSynthesizerDidStartRequest:record:taskTracker:
_handleSpeechSynthesizerDidFinishRequest:record:taskTracker:
_handleSpeechSynthesizerDidCancelRequest:taskTracker:
_handleSpeechSynthesizerDidInterruptRequest:taskTracker:
_handleSpeechSynthesizerDidFailRequest:taskTracker:error:
_stopSessionIdleTimer
_resignActiveForReason:
assistantIsEnabled
errorWithCode:
_resetMyriadDecision
isAvailable
_requestWillBeginWithTaskTracker:
_performBlockAfterResignActive:
_presentError:taskTracker:completion:
_waitForMyriadDecisionUsingHandler:
_requestDidEndWithOptions:error:
initWithActivationEvent:
setHomeButtonDownEventTime:
setHomeButtonDownEventMachAbsoluteTime:
setActivationEventTime:
setActivationEventMachAbsoluteTime:
setSpeechSynthesisRecord:
setEndpointerOperationMode:
_startActiveAudioSessionRequestWithOptions:taskTracker:completion:
beginTimestamp
endTimestamp
setRecordingAlertPolicy:
state
_startSpeechSynthesisRequest:languageCode:gender:audioSessionID:introductionSoundID:conclusionSoundID:taskTracker:postActivationHandler:completion:
getRemoteClockTimerSnapshotWithCompletion:
setBargeInOptions:
setIsMediaPlaying:
setMediaPlaybackVolume:
setClientAnalyticsContext:
setReloadSmartSiriVolume:
activationEventTime
activationEventMachAbsoluteTime
bargeInOptions
endpointerOperationMode
homeButtonDownEventTime
homeButtonDownEventMachAbsoluteTime
isMediaPlaying
mediaPlaybackVolume
speechSynthesisRecord
recordingAlertPolicy
reloadSmartSiriVolume
_startRequestWithInfo:clearsContext:clockAlarmSnapshot:clockTimerSnapshot:deviceSetupContext:taskTracker:completion:
_clearContext
_startSessionIdleTimerWithTimeInterval:
isRecording
setTurnIdentifier:
startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:
clearContext
setApplicationContext:
setAlertContextWithClockAlarmSnapshot:
setAlertContextWithClockTimerSnapshot:
playsSound
_stopSpeechWithCurrentSpeechRequestOptions
_performBlockAfterContinueBlock:
stopSpeechWithOptions:
_updateSpeechEndpointerOperationMode:
updateSpeechOptions:
startRequestWithInfo:
_forceAudioSessionInactiveWithReason:completion:
_beginWaitingForMyriadDecisionWithToken:
_endWaitingForMyriadDecisionWithToken:state:
cancelRequest
rollbackRequest
_willChangeFromState:toState:
_didChangeFromState:toState:
_performNextPendingRequestBarrier
removeObjectAtIndex:
forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:
forceAudioSessionInactiveWithOptions:completion:
configurationWithAudioSessionID:
playsSessionInactiveSoundForSiriVOXSounds
logExperimentExposureForSiriVOXSounds
_checkIsActiveWithCompletion:
_invalidateConnection
_discardPendingRequestBarriers
_continuePendingSpeechRequest:
_setInputAudioPowerWrapper:
errorWithCode:description:underlyingError:
_setOutputAudioPowerWrapper:
_beginThinking
_endThinking
updateSpeechSynthesisRecord:
willPresentUsefulUserResultWithType:forCommand:
initWithTargetQueue:
setSpeechDelegate:
shouldSpeak
endSession
_sessionIdleFiredWithAssertion:
assistantConnectionRequestWillStart:
assistantConnectionDismissAssistant:
assistantConnectionRequestFinished:
assistantConnection:receivedCommand:completion:
assistantConnection:requestFailedWithError:requestClass:
assistantConnection:openURL:completion:
assistantConnection:openApplicationWithBundleID:URL:completion:
assistantConnection:shouldSpeak:
assistantConnection:didChangeAudioSessionID:
assistantConnectionAudioSessionDidBeginInterruption:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:
assistantConnectionWillStartAcousticIDRequest:
assistantConnectionDidDetectMusic:
assistantConnection:didFinishAcousticIDRequestWithSuccess:
assistantConnection:setUserActivtiyInfoAndMakeCurrent:webpageURL:
assistantConnectionInvalidateCurrentUserActivity:
assistantConnection:wantsToCacheImage:
assistantConnection:extensionRequestWillStartForApplication:
assistantConnection:extensionRequestFinishedForApplication:error:
assistantConnection:startUIRequestWithText:completion:
assistantConnection:startUIRequestWithInfo:completion:
assistantConnection:willStartAudioPlaybackRequest:
assistantConnection:didStartAudioPlaybackRequest:
assistantConnection:didStopAudioPlaybackRequest:error:
assistantConnection:didHandleQuickStopWithAction:
assistantConnection:willProcessStartPlayback:intent:completion:
assistantConnection:willProcessStartPlayback:
assistantConnection:startPlaybackDidFail:
assistantConnection:audioSessionWillBecomeActive:
assistantConnection:audioSessionDidBecomeActive:
assistantConnection:willProcessAppLaunchWithBundleIdentifier:
assistantConnection:appLaunchFailedWithBundleIdentifier:
assistantConnectionSpeechRecordingWillBegin:
assistantConnection:speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:
assistantConnection:speechRecordingDidChangeAVRecordRoute:
assistantConnectionSpeechRecordingDidDetectStartpoint:
assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:
assistantConnectionSpeechRecordingDidEnd:
assistantConnectionSpeechRecordingDidCancel:
assistantConnection:speechRecordingDidFail:
assistantConnectionDidChangeAudioRecordingPower:
assistantConnection:speechRecognitionDidFail:
assistantConnection:speechRecognized:
assistantConnection:speechRecognizedPartialResult:
assistantConnection:recognizedAdditionalSpeechInterpretation:refId:
assistantConnection:recognitionUpdateWithPhrases:utterances:refId:
assistantConnection:recognitionUpdateWillBeginForTask:
transitSpeechToManualEndpointing
dismiss
addRequestBarrier:
_setApplicationContext:
_activityState
_activityUUID
_postResignActiveBlock
_currentActivationContext
_currentDeactivationContext
_currentRequestUUID
_currentSpeechRequestOptions
_currentSpeechRequestDidStartBlock
_currentSpeechRequestPendingBlocks
_currentRequestWillPresentUUFR
_currentRequestDidPresentUUFR
_previousRequestInstrumentationContext
_currentRequestInstrumentationContext
_taskTrackingCenter
_sessionIdleAssertions
_inputAudioPowerWrapper
_outputAudioPowerWrapper
_audioSessionAssertions
_currentInstrumentationUIState
_pendingRequestBarriers
_experimentForSiriVOXSounds
_experimentForSiriVOXTapToSiriBehavior
_isMostRecentRequestStartingMediaPlaybackLocally
_isMostRecentRequestSuppressedError
_setApplicationContext
_nowPlayingAppPlaybackState
_myriadState
_pendingMyriadDecisionHandlers
_playbackRequestInfo
_userActivity
setAppName:
setBundleId:
setAppIdentifyingInfo:
setSetupSceneId:
setOrderedContext:
setIsDeviceInSetupFlow:
setTapToSiriAudioPlaybackRequest:
playsTwoShotSoundForSiriVOXSounds
setTwoShotAudioPlaybackRequest:
startAlertSoundID
setBeepSoundID:
setStartingAlertBehavior:
keyFrameID
offset
_keyFrameID
_offset
setKeyFrameID:
setOffset:
scenes
_scenes
setScenes:
svx_speakableDurationStringWithLanguageCode:gender:
contingency
_lastStartedRequest
initWithType:timestamp:deviceSetupFlowScene:storeDemo:orderedAlarmAndTimerIDs:audioSessionID:
initWithType:timestamp:alarm:
initWithType:timestamp:deviceSetupFlowScene:
initWithType:timestamp:storeDemo:
initWithType:timestamp:alarm:deviceSetupFlowScene:
initWithType:timestamp:timer:
initWithType:timestamp:deviceSetupFlowScene:storeDemo:orderedAlarmAndTimerIDs:
enqueueRequest:completion:
cancelPendingRequest:
stopRequest:
valueWithRange:
rangeValue
_timeInterval
_range
setRange:
setTimeInterval:
bestSupportedLanguageCodeForLanguageCode:
title
currentCalendar
setLocale:
setCalendar:
setDateStyle:
setTimeStyle:
appendFormat:
hour
setHour:
minute
setMinute:
dateFromComponents:
stringFromDate:
_outputVoiceInfo
_locale
#16@0:8
B24@0:8@16
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@?40
v32@0:8@16@?24
B24@0:8@"AceObject<SAAceCommand>"16
v48@0:8@"AceObject<SAAceCommand>"16@"<NSCopying>"24@"<SVXTaskTracking>"32@?<v@?@"SVXServiceCommandResult">40
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?B@"<NSCopying>">24
@24@0:8@16
d24@0:8@16
v32@0:8@16@24
v16@0:8
@"SVXSessionManager"
@"NSString"
v24@0:8@16
@32@0:8@16q24
v24@0:8@"SVXClientServiceConnection"16
@"<SVXPerforming>"32@0:8@"SVXClientServiceConnection"16q24
v32@0:8@?16@?24
v32@0:8@?<v@?@"<SVXClientService>">16@?<v@?@"NSError">24
@"<SVXPerforming>"
@"SVXClientServiceConnection"
@"<SVXClientActivationServicing>"
@"<SVXClientSessionStateServicing>"
@"<SVXClientSessionServicing>"
@"<SVXClientAudioPowerServicing>"
@"<SVXClientSpeechSynthesisServicing>"
@"<SVXClientDeviceServicing>"
@"<SVXClientAudioSystemServicing>"
@24@0:8@"SVXModule"16
v32@0:8@"<SVXModuleInstanceProviding>"16@"NSArray"24
v24@0:8@"<SVXModuleInstanceProviding>"16
v40@0:8@16@24@?32
@"SVXModule"
@"SVXServiceCommandHandlerRegistry"
@"SVXServiceCommandHandlerFallback"
@"SVXServiceCommandDelayedActionStore"
@"NSMutableSet"
@"SVXSpeechSynthesizer"
@32@0:8@16@24
@32@0:8@"<SVXClientServiceProviding>"16@"<SVXPerforming>"24
v24@0:8@?16
q16@0:8
v24@0:8@?<v@?q>16
@"<SVXClientSessionStateServiceDelegate>"16@0:8
v24@0:8@"<SVXClientSessionStateServiceDelegate>"16
v32@0:8q16q24
v24@0:8q16
@"<SVXClientServiceProviding>"
@"<SVXClientSessionStateServiceDelegate>"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@24@0:8Q16
@"SVXDeviceSetupOptions"
@"SVXDeviceSetupFlowScene"
v24@0:8Q16
v24@0:8@"SVXDeviceSetupOptions"16
v24@0:8@"SVXDeviceSetupFlowScene"16
@"SVXDeviceSetupContext"
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasOptions"b1"hasFlowScene"b1}
@24@0:8@?16
v40@0:8@16@24@32
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@48
v24@0:8@"SVXSpeechSynthesizer"16
v40@0:8@"SVXSpeechSynthesizer"16@"SVXSpeechSynthesisRequest"24@"<SVXTaskTracking>"32
v48@0:8@"SVXSpeechSynthesizer"16@"SVXSpeechSynthesisRequest"24@"AFSpeechSynthesisRecord"32@"<SVXTaskTracking>"40
v56@0:8@"SVXSpeechSynthesizer"16@"SVXSpeechSynthesisRequest"24@"SVXSpeechSynthesisUtteranceInfo"32@"AFSpeechSynthesisRecord"40@"<SVXTaskTracking>"48
v48@0:8@"SVXSpeechSynthesizer"16@"SVXSpeechSynthesisRequest"24@"<SVXTaskTracking>"32@"NSError"40
@"<SVXServiceCommandHandling>"
@"<SVXSessionActivityListening>"
@"<SVXAudioPowerUpdateListening>"
^{__CFDictionary=}
@"NSHashTable"
@48@0:8@16Q24d32d40
d16@0:8
@"NSURL"
v24@0:8d16
v24@0:8@"NSURL"16
@"SVXUserFeedbackAudioContent"
{_mutationFlags="isDirty"b1"hasItemURL"b1"hasNumberOfLoops"b1"hasFadeInDuration"b1"hasFadeOutDuration"b1}
@"<SVXExpressionParsingServing>"
v32@0:8@?16d24
v32@0:8@?16Q24
v24@0:8@?<v@?>16
v32@0:8@?<v@?>16d24
v32@0:8@?<v@?>16Q24
@40@0:8@16I24i28Q32
@40@0:8@16@24Q32
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
v40@0:8@16q24@?32
v56@0:8q16@24q32@40@?48
@48@0:8q16@24q32@40
v40@0:8@16@24q32
@"<SVXModuleInstance>"24@0:8@"NSString"16
@"SVXClientServiceServer"16@0:8
@"SVXNowPlayingObserver"16@0:8
@"SVXServiceCommandHandler"16@0:8
@"SVXSessionManager"16@0:8
@"SVXSpeechSynthesizer"16@0:8
@"SVXSystemObserver"16@0:8
@"SVXDeviceSetupManager"16@0:8
@"NSDictionary"
@72@0:8q16Q24@32@40@48@56@64
@"SVXSpeechSynthesisAudio"
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
v24@0:8@"SVXSpeechSynthesisAudio"16
@"SVXSpeechSynthesisRequest"
{_mutationFlags="isDirty"b1"hasPriority"b1"hasOptions"b1"hasSpeakableText"b1"hasSpeakableContext"b1"hasLocalizationKey"b1"hasPresynthesizedAudio"b1"hasStreamID"b1}
@28@0:8@16B24
v20@0:8B16
@"SVXUserFeedbackVoiceContent"
{_mutationFlags="isDirty"b1"hasText"b1"hasIsPhonetic"b1}
@"<SVXClientAudioSystemServiceDelegate>"16@0:8
v24@0:8@"<SVXClientAudioSystemServiceDelegate>"16
v36@0:8B16@20@28
@"<SVXClientAudioSystemServiceDelegate>"
@"<SVXClientSessionServiceDelegate>"16@0:8
v24@0:8@"<SVXClientSessionServiceDelegate>"16
v32@0:8q16@24
v32@0:8Q16d24
@"<SVXClientSessionServiceDelegate>"
@"SAUIDelayedActionCommand"
@"<SVXTaskTracking>"
@40@0:8@16#24@32
@28@0:8B16Q20
@"SVXDeviceProblemsState"
{_mutationFlags="isDirty"b1"hasIsFixingProblems"b1"hasProblems"b1}
@120@0:8q16Q24@32@40@48@56@64@72B80B84@88@96@104@112
@"NSUUID"
@"SAUIListenAfterSpeakingBehavior"
@"SVXActivationContext"
@"SVXDeactivationContext"
@"NSError"
v24@0:8@"NSUUID"16
v24@0:8@"SAUIListenAfterSpeakingBehavior"16
v24@0:8@"SVXActivationContext"16
v24@0:8@"SVXDeactivationContext"16
v24@0:8@"NSError"16
@"SVXTaskContext"
{_mutationFlags="isDirty"b1"hasOrigin"b1"hasTimestamp"b1"hasSessionUUID"b1"hasRequestUUID"b1"hasAceId"b1"hasRefId"b1"hasDialogIdentifier"b1"hasDialogPhase"b1"hasIsUUFR"b1"hasListensAfterSpeaking"b1"hasListenAfterSpeakingBehavior"b1"hasActivationContext"b1"hasDeactivationContext"b1"hasError"b1}
@48@0:8q16@24@32@40
@"NSArray"
@"SVXDeviceSetupFlowSiriCapabilitiesHint"
v24@0:8@"NSArray"16
v24@0:8@"SVXDeviceSetupFlowSiriCapabilitiesHint"16
{_mutationFlags="isDirty"b1"hasSceneID"b1"hasSpeakableText"b1"hasDisplayKeyFrames"b1"hasSiriCapabilitiesHint"b1}
v32@0:8q16@"AFXPCWrapper"24
@"SVXModuleInstanceMap"
v28@0:8@16B24
v28@0:8@"AFMyriadEmergencyManager"16B24
@"AFMyriadEmergencyManager"
@"NSObject<OS_dispatch_semaphore>"
v40@0:8@"NSArray"16@"SARemoteDevice"24@?<v@?B@"NSArray">32
@"<SVXAceCommandHandling>"
@32@0:8q16Q24
@"SVXButtonEvent"
{_mutationFlags="isDirty"b1"hasType"b1"hasTimestamp"b1}
v32@0:8q16@"NSError"24
v36@0:8B16@"SVXActivationContext"20@"SVXDeactivationContext"28
Vv24@0:8@?16
Vv24@0:8q16
Vv32@0:8@16@?24
Vv32@0:8q16@?24
Vv24@0:8@16
Vv24@0:8@?<v@?@"NSError">16
Vv24@0:8@?<v@?q@"NSError">16
Vv24@0:8@?<v@?B@"NSError">16
Vv32@0:8@"SVXActivationContext"16@?<v@?>24
Vv32@0:8@"SVXActivationContext"16@?<v@?@"NSError">24
Vv32@0:8@"SVXDeactivationContext"16@?<v@?>24
Vv32@0:8q16@?<v@?@"AFXPCWrapper"@"NSError">24
Vv24@0:8@"SVXSpeechSynthesisRequest"16
Vv32@0:8@"SVXSpeechSynthesisRequest"16@?<v@?@"SVXSpeechSynthesisResult">24
Vv24@0:8@"SVXDeviceSetupContext"16
Vv32@0:8@"SVXDeviceSetupContext"16@?<v@?@"SVXDeviceSetupFlow"@"NSError">24
Vv32@0:8@16@24
Vv32@0:8q16q24
Vv32@0:8q16@24
Vv32@0:8Q16d24
Vv36@0:8B16@20@28
Vv32@0:8@"SVXActivationContext"16@?<v@?B@"NSError">24
Vv24@0:8@"SVXActivationContext"16
Vv32@0:8@"SVXActivationContext"16@"NSError"24
Vv24@0:8@"SVXDeactivationContext"16
Vv24@0:8@"NSString"16
Vv32@0:8q16@"NSError"24
Vv32@0:8q16@"AFXPCWrapper"24
Vv36@0:8B16@"SVXActivationContext"20@"SVXDeactivationContext"28
@40@0:8@16@24@32
@"NSXPCConnection"
@"<SVXClientService>"
@"<SVXClientServiceServerConnectionDelegate>"
@56@0:8d16I24I28I32I36I40I44I48I52
I16@0:8
v20@0:8I16
@"SVXAudioStreamBasicDescription"
{_mutationFlags="isDirty"b1"hasSampleRate"b1"hasFormatID"b1"hasFormatFlags"b1"hasBytesPerPacket"b1"hasFramesPerPacket"b1"hasBytesPerFrame"b1"hasChannelsPerFrame"b1"hasBitsPerChannel"b1"hasReserved"b1}
v44@0:8@16B24@28@?36
@48@0:8@16q24@32@40
v24@0:8@"SVXUserFeedbackAudioContent"16
v24@0:8@"SVXUserFeedbackVoiceContent"16
@"SVXUserFeedback"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasContentType"b1"hasAudioContent"b1"hasVoiceContent"b1}
@32@0:8Q16@24
@88@0:8@16@24@32@40@48@56@64@72@80
@"SVXQueuePerformer"
@"<SVXClientServiceConnectionDelegate>"
@"SVXClientSessionService"
@"SVXClientActivationService"
@"SVXClientAudioPowerService"
@"SVXClientSpeechSynthesisService"
@"SVXClientDeviceService"
@"SVXClientAudioSystemService"
@36@0:8@16I24@28
@"SVXModuleManager"
v40@0:8@16Q24Q32
v40@0:8@"AFHomeAnnouncementObserver"16Q24Q32
v40@0:8@"AFHomeAnnouncementObserver"16@"AFHomeAnnouncementSnapshot"24@"AFHomeAnnouncementSnapshot"32
v24@0:8f16f20
v24@0:8@"AFMyriadSession"16
v24@0:8@"AFMyriadCoordinator"16
v28@0:8@16i24
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
v32@0:8@"AFQueue"16@"NSArray"24
v40@0:8@16q24q32
v40@0:8@16q24@32
v32@0:8@16q24
v48@0:8@16Q24d32@40
v44@0:8@16B24@28@36
v40@0:8@"SVXSession"16q24q32
v40@0:8@"SVXSession"16q24@"AFXPCWrapper"32
v32@0:8@"SVXSession"16q24
v40@0:8@"SVXSession"16q24@"NSError"32
v40@0:8@"SVXSession"16@"SVXActivationContext"24@"NSUUID"32
v48@0:8@"SVXSession"16Q24d32@"NSUUID"40
v40@0:8@"SVXSession"16@"SVXDeactivationContext"24@"NSUUID"32
v32@0:8@"SVXSession"16@"SVXActivationContext"24
v40@0:8@"SVXSession"16@"SVXActivationContext"24@"NSError"32
v32@0:8@"SVXSession"16@"SVXDeactivationContext"24
v44@0:8@"SVXSession"16B24@"SVXActivationContext"28@"SVXDeactivationContext"36
v24@0:8@"SVXSession"16
v40@0:8@"SVXNowPlayingObserver"16q24q32
v32@0:8@"AFClockAlarmObserver"16@"NSUUID"24
v40@0:8@"AFClockAlarmObserver"16@"AFClockAlarmSnapshot"24@"AFClockAlarmSnapshot"32
v32@0:8@"AFClockTimerObserver"16@"NSUUID"24
v40@0:8@"AFClockTimerObserver"16@"AFClockTimerSnapshot"24@"AFClockTimerSnapshot"32
v40@0:8@16@24f32f36
v40@0:8@"<SVXSystemVolumeDataSource>"16@"NSString"24f32f36
v32@0:8q16@?24
@20@0:8B16
v48@0:8q16Q24@32@?40
@"AFNotifyObserver"
@"SVXNowPlayingObserver"
@"SVXServiceCommandHandler"
@"AFClockAlarmObserver"
@"AFClockTimerObserver"
@"AFHomeAnnouncementObserver"
@"AFMyriadCoordinator"
@"NSDate"
@"AFRemoteRequestWatcher"
@"AFSiriTether"
@"AFExperimentContext"
@"SVXSession"
@"SVXSessionActivationAnnouncer"
@"SVXAudioPowerUpdateAnnouncer"
@"SVXSessionActivityAnnouncer"
@"AFQueue"
@"AFSpeechSynthesisRecord"
@"AFClockAlarmSnapshot"
@"AFClockTimerSnapshot"
@"AFSpeakableUtteranceParser"
v32@0:8@16f24f28
v32@0:8@"AFAudioPowerUpdater"16f24f28
@"<SVXClientAudioPowerServiceDelegate>"16@0:8
v24@0:8@"<SVXClientAudioPowerServiceDelegate>"16
@40@0:8q16@24@32
@"<AFAudioPowerProviding>"
@"AFAudioPowerUpdater"
@"<SVXClientAudioPowerServiceDelegate>"
v52@0:8@16@24B32@36@44
v48@0:8@16{_NSRange=QQ}24@40
v44@0:8@16@24B32@36
v36@0:8@16B24@28
v40@0:8@16{_NSRange=QQ}24
v32@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSArray"32
v52@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24B32@"NSString"36@"NSError"44
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32
v48@0:8@"VSSpeechSynthesizer"16{_NSRange=QQ}24@"VSSpeechRequest"40
v48@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32@"NSError"40
v32@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24
v44@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24B32@"NSError"36
v48@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24@"VSInstrumentMetrics"32@"NSError"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSError"32
v36@0:8@"VSSpeechSynthesizer"16B24@"NSError"28
v24@0:8@"VSSpeechSynthesizer"16
v44@0:8@"VSSpeechSynthesizer"16B24@"NSString"28@"NSError"36
v44@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24B32@"NSError"36
v40@0:8@"VSSpeechSynthesizer"16{_NSRange=QQ}24
v76@0:8@16@24q32I40@?44@?52@60@68
v32@0:8@16Q24
B32@0:8@16^@24
v48@0:8@16q24@32@40
@"VSSpeechSynthesizer"
@"SVXSpeechSynthesisAnnouncer"
@"SVXSpeechSynthesisConfiguration"
@"SVXSpeechSynthesisContext"
@"NSMutableArray"
@"SVXNowPlayingPlaybackStateAnnouncer"
@"<SVXTaskTracking>"24@0:8@"SVXTaskContext"16
@"SVXTaskContext"16@0:8
@"<SVXTaskTracking>"16@0:8
@"AFAnalyticsTurnBasedInstrumentationContext"16@0:8
@"NSUUID"16@0:8
@"SAUIListenAfterSpeakingBehavior"16@0:8
@"SVXActivationContext"16@0:8
@"SVXDeactivationContext"16@0:8
@"NSError"16@0:8
@"<SVXTaskTrackingDelegate>"
@"AFAnalyticsTurnBasedInstrumentationContext"
@56@0:8q16Q24@32@40@48
@"SVXClientInfo"
v24@0:8@"SVXButtonEvent"16
v24@0:8@"SVXClientInfo"16
{_mutationFlags="isDirty"b1"hasSource"b1"hasTimestamp"b1"hasButtonEvent"b1"hasClientInfo"b1"hasUserInfo"b1}
@"SVXSystemEvent"
@"AFRequestInfo"
v24@0:8@"SVXSystemEvent"16
v24@0:8@"AFRequestInfo"16
{_mutationFlags="isDirty"b1"hasSource"b1"hasTimestamp"b1"hasButtonEvent"b1"hasSystemEvent"b1"hasClientInfo"b1"hasRequestInfo"b1"hasUserInfo"b1}
@24@0:8q16
{_mutationFlags="isDirty"b1"hasStyle"b1}
v32@0:8@"<SVXTaskTracking>"16@"<SVXTaskTracking>"24
v24@0:8@"<SVXTaskTracking>"16
@"<SVXTaskTrackingCenterDelegate>"
@"SVXSpeechSynthesisUtteranceInfo"
v24@0:8@"SVXSpeechSynthesisUtteranceInfo"16
@"SVXSpeechSynthesisResult"
{_mutationFlags="isDirty"b1"hasType"b1"hasUtteranceInfo"b1"hasError"b1}
@28@0:8i16@20
i16@0:8
v20@0:8i16
{_mutationFlags="isDirty"b1"hasProcessIdentifier"b1"hasProcessName"b1}
@"SVXServiceCommandResult"
v32@0:8@"SVXSessionManager"16@"SVXActivationContext"24
v40@0:8@"SVXSessionManager"16@"SVXActivationContext"24@"NSError"32
v32@0:8@"SVXSessionManager"16@"SVXDeactivationContext"24
@48@0:8@16q24q32q40
{_mutationFlags="isDirty"b1"hasLanguageCode"b1"hasGender"b1"hasHasActiveAccount"b1"hasIsNewsRestricted"b1}
@44@0:8q16@24q32f40
f16@0:8
v20@0:8f16
@"SVXStoreDemo"
{_mutationFlags="isDirty"b1"hasTranscriptID"b1"hasLanguageCode"b1"hasGender"b1"hasOutputVolume"b1}
@84@0:8q16@24@32q40I48@?52@?60@68@76
v40@0:8q16@24@32
@"VSPresynthesizedAudioRequest"
@"VSSpeechRequest"
@"VSInstrumentMetrics"
@"SVXAudioSessionAssertion"
@40@0:8@16d24@32
@"NSSet"
v24@0:8@"NSSet"16
@"SVXUserFeedbackScene"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasDuration"b1"hasNodes"b1}
@28@0:8Q16B24
{_mutationFlags="isDirty"b1"hasUtterance"b1"hasWordTimings"b1}
@48@0:8@16d24@32@40
v24@0:8@"SVXUserFeedback"16
@"SVXUserFeedbackNode"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasDuration"b1"hasFeedback"b1"hasDependentNodes"b1}
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v40@0:8@"SVXButtonEvent"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"SVXSystemEvent"16@?<v@?>24
v40@0:8@"SVXSystemEvent"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?>24
@"<SVXClientActivationServiceDelegate>"16@0:8
v24@0:8@"<SVXClientActivationServiceDelegate>"16
@"<SVXClientActivationServiceDelegate>"
@68@0:8q16Q24@32@40@48@56I64
v24@0:8@"SVXStoreDemo"16
v24@0:8@"SVXSpeechSynthesisRequest"16
{_mutationFlags="isDirty"b1"hasType"b1"hasTimestamp"b1"hasDeviceSetupFlowScene"b1"hasStoreDemo"b1"hasOrderedAlarmAndTimerIDs"b1"hasSpeechSynthesisRequest"b1"hasAudioSessionID"b1}
@"NSData"
v24@0:8@"NSData"16
v24@0:8@"SVXAudioStreamBasicDescription"16
{_mutationFlags="isDirty"b1"hasData"b1"hasDecoderASBD"b1"hasPlayerASBD"b1}
@32@0:8q16@24
B48@0:8@?16@?24@?32@?40
@56@0:8q16q24@32@40@48
@"AceObject<SAAceCommand>"
v24@0:8@"SVXClientServiceServerConnection"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"SVXDeviceSetupManager"
v32@0:8@"NSString"16@?<v@?f>24
v24@0:8@"<SVXSystemVolumeListening>"16
v36@0:8@16f24@28
@"SVXSystemVolumeAnnouncer"
v32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand">24
@32@0:8@16^B24
@"NSString"24@0:8@"NSString"16
@"NSString"32@0:8@"NSString"16^B24
@24@0:8@"AceObject"16
v24@0:8@"AFBulletin"16
@"NSURL"24@0:8@"NSString"16
v32@0:8@"SVXDeviceSetupContext"16@?<v@?@"SVXDeviceSetupFlow"@"NSError">24
v24@0:8@"SVXDeviceSetupContext"16
@32@0:8@16@?24
B32@0:8@?16@?24
@64@0:8@16@24@32@40@48@?56
v28@0:8@16I24
v48@0:8@16q24@32@?40
v24@0:8@"AFConnection"16
v40@0:8@"AFConnection"16@"AceObject<SAAceCommand>"24@?<v@?@"AceObject<SAAceCommand>">32
v40@0:8@"AFConnection"16@"NSError"24@"NSString"32
v40@0:8@"AFConnection"16@"NSURL"24@?<v@?B>32
v48@0:8@"AFConnection"16@"NSString"24@"NSURL"32@?<v@?B>40
v28@0:8@"AFConnection"16B24
v28@0:8@"AFConnection"16I24
v40@0:8@"AFConnection"16@"NSDictionary"24@"NSURL"32
v32@0:8@"AFConnection"16@"INImage"24
v32@0:8@"AFConnection"16@"NSString"24
v40@0:8@"AFConnection"16@"NSString"24@"NSError"32
v40@0:8@"AFConnection"16@"NSString"24@?<v@?B>32
v40@0:8@"AFConnection"16@"AFRequestInfo"24@?<v@?B>32
v32@0:8@"AFConnection"16@"AFAudioPlaybackRequest"24
v40@0:8@"AFConnection"16@"AFAudioPlaybackRequest"24@"NSError"32
v32@0:8@"AFConnection"16Q24
v48@0:8@"AFConnection"16q24@"INIntent"32@?<v@?BB>40
v32@0:8@"AFConnection"16q24
v36@0:8@16@24I32
v32@0:8@"AFConnection"16@"AFXPCWrapper"24
v36@0:8@"AFConnection"16@"NSString"24I32
v40@0:8@"AFConnection"16q24@?<v@?dd@"NSError">32
v32@0:8@"AFConnection"16@"NSError"24
v32@0:8@"AFConnection"16@"SASSpeechRecognized"24
v32@0:8@"AFConnection"16@"SASSpeechPartialResult"24
v40@0:8@"AFConnection"16@"AFSpeechInterpretation"24@"NSString"32
v48@0:8@"AFConnection"16@"NSArray"24@"NSArray"32@"NSString"40
v24@0:8@"SVXTaskTrackingCenter"16
v32@0:8@"SVXTaskTrackingCenter"16@"SVXTaskContext"24
v32@0:8@"NSString"16@?<v@?@"SVXAudioSessionAssertion"@"NSError">24
@56@0:8@16@24@32@40@48
@116@0:8@16Q24@32@40@48@56Q64q72f80@84q92@100@?108
v40@0:8@16Q24@?32
v88@0:8@16Q24@32@40@48@56Q64q72@?80
v124@0:8@16Q24@32@40@48@56Q64q72f80@84q92@100@108@?116
v92@0:8@16B24@28@36@44@52Q60q68@76@?84
v68@0:8@16B24@28@36@44@52@?60
v84@0:8@16@24q32I40q44q52@60@?68@?76
v40@0:8Q16@24@?32
v32@0:8Q16@24
v40@0:8Q16q24@?32
v40@0:8q16@24@?32
@"AFConnection"
@"AFSpeechRequestOptions"
@"SVXTaskTrackingCenter"
@"AFXPCWrapper"
@"<SVXSessionDelegate>"
@"AFExperiment<AFExperimentForSiriVOXSounds>"
@"AFExperiment<AFExperimentForSiriVOXTapToSiriBehavior>"
@"SASetApplicationContext"
@"NSUserActivity"
@48@0:8q16@24d32d40
@"SVXDeviceSetupFlowDisplayKeyFrame"
{_mutationFlags="isDirty"b1"hasKeyFrameID"b1"hasText"b1"hasOffset"b1"hasDuration"b1}
@48@0:8@16@24q32@40
@"SVXDeviceSetupFlow"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasLanguageCode"b1"hasGender"b1"hasScenes"b1}
@40@0:8q16Q24@32
@48@0:8q16Q24@32@40
@60@0:8q16Q24@32@40@48I56
v32@0:8@"SVXSpeechSynthesisRequest"16@?<v@?@"SVXSpeechSynthesisResult">24
@40@0:8{_NSRange=QQ}16d32
{_NSRange=QQ}16@0:8
{_NSRange="location"Q"length"Q}
v32@0:8{_NSRange=QQ}16
@"SVXSpeechSynthesisWordTiming"
{_mutationFlags="isDirty"b1"hasRange"b1"hasTimeInterval"b1}
@20@0:8I16
@36@0:8@16@24I32
@"AFVoiceInfo"
@"NSLocale"
