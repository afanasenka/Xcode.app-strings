?333333
ffffff
@ffffff
EPYTATAD!DNE!ECA!FER
MbP?
@xfua2vpelppa
333333
AFSiriDidLaunchAppNotification
requestSettings
typeToSiri
showRecognizedSpeech
captionVoiceFeedback
hideBackgroundContent
useSpeakerForTTS
locale
AFNetworkAvailabilityDidChangeNotification
v8@?0
hash
superclass
description
T@"NSString",R,C
-[AFConnection initWithTargetQueue:]
-[AFConnection dealloc]
AFConnection.m
Client is already capturing speech
-[AFConnection _requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:isBackgroundRequest:analyticsEventProvider:]
-[AFConnection _requestDidEnd]
-[AFConnection _handleCommand:reply:]
-[AFConnection _dispatchCommand:isInterstitial:interstitialPhase:interstitialDelay:reply:]
-[AFConnection _dispatchCommand:isInterstitial:interstitialPhase:interstitialDelay:reply:]_block_invoke
Interstitial
Early Fire
v16@?0@"AceObject<SAAceCommand>"8
-[AFConnection _setShouldSpeak:]
-[AFConnection _startInputAudioPowerUpdatesWithXPCWrapper:]
-[AFConnection _startInputAudioPowerUpdatesWithXPCWrapper:]_block_invoke
v16@?0@"<AFSpeechDelegate>"8
-[AFConnection _stopInputAudioPowerUpdates]
-[AFConnection _setAudioSessionID:]
-[AFConnection _setRecordRoute:]
-[AFConnection _markIsDucking]
-[AFConnection _markIsTwoShot]
-[AFConnection _markSpeechRecognized]
-[AFConnection _updateSpeechEndHostTime:]
-[AFConnection _completeRequestWithUUID:forReason:error:]
success
v32@?0d8d16@"NSError"24
Speech delegate %@ is incapable of performing two-shot prompt.
Active request type is %ld and active request UUFR type is %ld, two-shot prompt is ignored.
-[AFConnection _connectionFailedWithError:]
-[AFConnection _connection]_block_invoke_2
AFConnection
-[AFConnection _scheduleRequestTimeoutForReason:]
-[AFConnection _invokeRequestTimeoutForReason:]
-[AFConnection _pauseRequestTimeoutForReason:]
-[AFConnection _resumeRequestTimeoutForReason:]
-[AFConnection _cancelRequestTimeoutForReason:]
-[AFConnection _extendRequestTimeoutForReason:]
-[AFConnection _extendExistingRequestTimeoutForReason:]
-[AFConnection _updateState]_block_invoke_2
-[AFConnection _updateState]_block_invoke
v16@?0B8I12
-[AFConnection _willStartRequestWithSpeech:speechRequestOptions:requestInfo:analyticsEventProvider:]
isSpeechRequest
unixTime
systemVersion
-[AFConnection _willEndSession]
-[AFConnection _willCancelRequest]
-[AFConnection _willFailRequestWithError:]
B16@?0@"NSError"8
%@,%@
SpeechErrorHints[StartStopSpeechDelta:%@]
@"NSError"8@?0
-[AFConnection _willCompleteRequest]
-[AFConnection _willPresentUsefulUserResultWithType:]
Near Fire before UUFR
-[AFConnection _enqueueInterstitialCommand:]
-[AFConnection _beginInterstitialsForReason:]
-[AFConnection _handleInterstitialPhase:fromProvider:displayText:speakableText:expectedDelay:context:completion:]
Initial Phase
-[AFConnection _handleInterstitialPhase:fromProvider:displayText:speakableText:expectedDelay:context:completion:]_block_invoke
v24@?0@"AceObject<SAAceCommand>"8@"NSError"16
-[AFConnection _endInterstitialsForReason:]
+[AFConnection isAvailable]
NOT 
-[AFConnection endSession]
-[AFConnection invalidate]
+[AFConnection defrost]
com.apple.assistant.sync
v16@?0@"NSObject<OS_xpc_object>"8
name
defrost
mach_time
+[AFConnection defrost]_block_invoke_2
-[AFConnection preheatWithStyle:forOptions:]
-[AFConnection boostedPreheatWithStyle:completion:]
v16@?0@"NSError"8
-[AFConnection forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:]
v20@?0I8@"NSError"12
-[AFConnection forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:]_block_invoke
-[AFConnection forceAudioSessionInactiveWithOptions:completion:]
-[AFConnection forceAudioSessionInactiveWithOptions:completion:]_block_invoke
-[AFConnection resumeInterruptedAudioPlaybackIfNeeded]_block_invoke
-[AFConnection willPresentUI]_block_invoke
v16@?0@"<AFClientConfigurationMutating>"8
-[AFConnection setShouldWaitForMyriad:]
-[AFConnection setMyriadDecisionResult:]
Data
-[AFConnection startRequestWithInfo:activationEvent:]
-[AFConnection _startRequestWithInfo:]
@"AFAnalyticsEvent"16@?0@"NSUUID"8
-[AFConnection _startRequestWithInfo:]_block_invoke
%@_%@
Never
Always
UnlessMuted
-[AFConnection startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:]
-[AFConnection startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:]_block_invoke_2
v16@?0q8
-[AFConnection startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:]_block_invoke
-[AFConnection startSpeechPronunciationRequestWithOptions:pronunciationContext:]
-[AFConnection startSpeechPronunciationRequestWithOptions:pronunciationContext:]_block_invoke_2
-[AFConnection startAcousticIDRequestWithOptions:]_block_invoke_2
-[AFConnection cancelSpeech]
-[AFConnection cancelRequest]
-[AFConnection cancelRequestForReason:]
-[AFConnection failRequestWithError:]
-[AFConnection stopSpeechWithOptions:]
-[AFConnection updateSpeechOptions:]
-[AFConnection sendGenericAceCommand:turnIdentifier:conflictHandler:]
v12@?0B8
v16@?0@"NSMutableDictionary"8
v16@?0@"NSSet"8
v16@?0@"NSDictionary"8
v24@?0@"AFClockTimerSnapshot"8@"NSError"16
-[AFConnection startAudioPlaybackRequest:options:completion:]_block_invoke
-[AFConnection beginUpdateOutputAudioPowerWithCompletion:]_block_invoke
delegate
T@"<AFAssistantUIService>",W,N,V_delegate
speechDelegate
T@"<AFSpeechDelegate>",W,N,V_speechDelegate
isRecording
TB,R,N
hasActiveRequest
speechEvent
File
isNarrowBand
-[AFConnectionClientServiceDelegate requestHandleCommand:reply:]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedOpenApplicationWithBundleID:URL:reply:]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedOpenURL:reply:]_block_invoke
-[AFConnectionClientServiceDelegate requestRequestedDismissAssistant]_block_invoke
-[AFConnectionClientServiceDelegate quickStopWasHandledWithActions:]_block_invoke
stop_before_start
0-100ms
100-200ms
200-300ms
300-400ms
400-500ms
500ms-1s
1-2s
2-4s
4-8s
8-15s
15-30s
30-60s
60s+
no_stop
no_start
no_start_and_stop
INSerializedCacheItem
initINSerializedCacheItem_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFConnection.m
classINSerializedCacheItem
/System/Library/Frameworks/Intents.framework/Intents
IntentsLibrary
frameworkLibrary
AFBluetoothPairedDeviceInfoUpdated
AFBluetoothWirelessSplitterSessionStateChanged
ASSISTANT_SERVICES_INTERSTITIAL
Interstitials
-[AFInterstitialProvider dealloc]
-[AFInterstitialProvider initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:delegate:]
com.apple.assistant.interstitial-provider.default
-[AFInterstitialProvider initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:delegate:]_block_invoke
-[AFInterstitialProvider invalidate]
v16@?0@"NSNumber"8
-[AFInterstitialProvider _performNextActionWithExpectedDelay:]
phase
Tq,R,N,V_phase
displayKey
T@"NSString",R,C,N,V_displayKey
speakableKey
T@"NSString",R,C,N,V_speakableKey
duration
Td,R,N,V_duration
%@_%@_%@_%@
DISPLAY
FEMALE
MALE
_AFInterstitialActionsCreate
INITIAL_%u
FOLLOW_UP_%u
nano://
AFMessagesGetDomainObjectsFromContext
_alarms
alarms
T@"NSArray",C,N,V_alarms
_settings
settings
T@"NSArray",C,N,V_settings
%@-%@
UNKNOWN_CALLER
CONTACT_WITH_TYPE
TWO_CONTACTS_SHARED_FAMILY_NAME
TWO_CONTACTS
THREE_CONTACTS
MORE_THAN_THREE_CONTACTS
CALLER_ID_WITH_RAW_CALLER
RAW_CALLER_WITH_SERVICE
phonemeInformation
value
/+%@
@"NSString"16@?0@"NSString"8
\tn=email\%@
\tn=normal\
\tn=phone\%@
\tn=normal\
\tn=state\%@
\tn=normal\
contacts
T@"NSArray",&,N,V_contacts
displayedCallerID
T@"NSString",C,N,V_displayedCallerID
callerIDType
Tq,N,V_callerIDType
callServiceSpeakableName
T@"NSString",C,N,V_callServiceSpeakableName
callDestinationID
T@"NSString",C,N,V_callDestinationID
callDestinationIDType
Tq,N,V_callDestinationIDType
voiceInfo
T@"AFVoiceInfo",R,N,V_voiceInfo
textToSpeak
T@"NSString",R,N
SPOKEN_CONTACT_FULL
givenName
T@"NSString",C,N,V_givenName
middleName
T@"NSString",C,N,V_middleName
familyName
T@"NSString",C,N,V_familyName
nickname
T@"NSString",C,N,V_nickname
organizationName
T@"NSString",C,N,V_organizationName
languageCode
T@"NSString",C,N,V_languageCode
Ringtone
CNContactPhonemeDataKey
initCNContactPhonemeDataKey_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFSiriRingtone.m
constant
/System/Library/Frameworks/Contacts.framework/Contacts
%@#%@#%@
-[AFDeviceStateConnection fetchSiriKitAppIdentifiersWithNotificationPreviewRestrictionsWithCompletion:]
v16@?0@"NSArray"8
v24@?0@"<AFFlowService>"8@?<v@?>16
-[AFDeviceStateConnection fetchSiriKitAppIdentifiersWithNotificationPreviewRestrictionsWithCompletion:]_block_invoke
-[AFDeviceStateConnection getPersonalSettingsForSharedUserID:completion:]
v24@?0@"AFPersonalUserSettings"8@"NSError"16
-[AFDeviceStateConnection getPersonalSettingsForSharedUserID:completion:]_block_invoke
type
identifier
version
controlGroup
experimentGroups
salt
%@ {%@}
type = %ld (%@)
identifier = %@
version = %@
controlGroup = %@
experimentGroups = %@
salt = %@
AFExperimentConfiguration::type
AFExperimentConfiguration::identifier
AFExperimentConfiguration::version
AFExperimentConfiguration::controlGroup
AFExperimentConfiguration::experimentGroups
AFExperimentConfiguration::salt
supportsSecureCoding
TB,R
Tq,R,N,V_type
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_version
T@"AFExperimentGroup",R,C,N,V_controlGroup
T@"NSArray",R,C,N,V_experimentGroups
T@"NSString",R,C,N,V_salt
com.apple.assistant.security.encryption_key.did_change
com.apple.assistant.security.connection
com.apple.assistant.security.callback
error
-[AFSecurityConnection _connectionInterrupted]
-[AFSecurityConnection _connectionInvalidated]
v24@?0@"NSData"8@"NSError"16
v24@?0@"NSDictionary"8@"NSDictionary"16
three
four
frontObject
T@,R,N
count
TQ,R,N
T@"<AFQueueDelegate>",W,N,V_delegate
_applyChanges
T@"NSArray",C,N,S_setSettings:,V_settings
applyChanges
TB,N,S_setApplyChanges:,V_applyChanges
-[AFMyriadAdvertisementContextManager pushMyriadAdvertisementContext:completionHandler:]_block_invoke
v32@?0@"NSString"8@"AFDeviceContext"16^B24
v24@?0@"NSDictionary"8@"NSError"16
-[AFMyriadAdvertisementContextManager reset]
state
deviceAddresses
state = %ld (%@)
deviceAddresses = %@
AFBluetoothWirelessSplitterSessionInfo::state
AFBluetoothWirelessSplitterSessionInfo::deviceAddresses
Tq,R,N,V_state
T@"NSArray",R,C,N,V_deviceAddresses
: %p
; type=
; stringValue=
; contactIdentifier=
; contactInternalGUID=
_type
_stringValue
_contactIdentifier
_contactInternalGUID
Email
Phone
Unknown
INVALID
unspecified
message
home
(unknown)
ar-SA
en-GB
en-IN
fr-FR
nl-NL
%@ languageCode: %@ gender: %@ custom: %@ footprint: %@ contentVersion: %@ masteredVersion: %@
Language
Gender
Custom
Footprint
Name
ContentVersion
MasteredVersion
_languageCode
_gender
_isCustom
_footprint
_name
_contentVersion
_masteredVersion
gender
Tq,N,V_gender
wasInitalizedFromDictionaryRepresentation
TB,R,N,V_wasInitalizedFromDictionaryRepresentation
T@"NSString",R,N,V_languageCode
isCustom
TB,N,V_isCustom
footprint
Tq,R,N,V_footprint
T@"NSString",R,N,V_name
contentVersion
T@"NSNumber",R,N,V_contentVersion
masteredVersion
T@"NSString",R,N,V_masteredVersion
Male
Female
Default
Compact
Premium
builtInMicrophone
builtInDigitizer
accelerometer
bluetoothDevice
carPlayDevice
homeButton
lockButton
digitalCrown
appleTVRemote
appleMikey
internal
RecognizedSpeech
PartialSpeechResult
View
Help
AcousticID Spinner
Cancelled
Committed
Provisional
, dialogIdentifier=%@
, dialogText="%@"
%@, speakableText="%@"
<ConversationItem %p; %@ (revision %@): type=%@, aceObject=%@, dialogPhase=%@, presentationState=%@, aceCommandIdentifier=%@%@%@, transient=%@, supplemental=%@, immersiveExperience=%@>
Version
Identifier
RevisionIdentifier
Type
AceObject
AceDialogPhase
PresentationState
AceCommandIdentifier
Transient
Supplemental
ImmersiveExperience
AssociatedDataStore
@24@?0@8^@16
-[AFMutableConversationItem initWithPropertyListRepresentation:]
T@"NSUUID",R,C,N,V_identifier
revisionIdentifier
T@"NSUUID",R,C,N,V_revisionIdentifier
Tq,N,V_type
aceObject
T@"AceObject",&,N,V_aceObject
dialogPhase
T@"AFDialogPhase",&,N,V_dialogPhase
aceCommandIdentifier
T@"NSString",C,N,V_aceCommandIdentifier
presentationState
Tq,N,V_presentationState
virgin
TB,N,GisVirgin,V_virgin
transient
TB,N,GisTransient,V_transient
supplemental
TB,N,GisSupplemental,V_supplemental
immersiveExperience
TB,N,GisImmersiveExperience,V_immersiveExperience
associatedDataStore
T@"AFDataStore",R,N,V_associatedDataStore
%@.%@
v16@?0@"<AFBundleResourceMutating>"8
dt-begin
dt-confirm
dt-cancel
announce-messages-tone
home-announcement-recording-begin
home-announcement-received
AFFlowServiceConnection
-[AFFlowServiceConnection invokeMethodOnRemoteWithBlock:onError:]_block_invoke
-[AFFlowServiceConnection _clearConnection]
-[AFFlowServiceConnection _connection]
_orthography
_language
_phonemeSuggestions
orthography
T@"NSString",&,N,V_orthography
language
T@"NSString",&,N,V_language
phonemeSuggestions
T@"NSArray",&,N,V_phonemeSuggestions
com.apple.assistant.analytics
com.apple.assistant.analytics-observation
com.apple.assistant.client
com.apple.assistant.dictation
com.apple.assistant.dictation.prerecorded
com.apple.assistant.security
com.apple.assistant.settings
com.apple.assistant.multiuser.service
com.apple.siri.tether
com.apple.siri.activation
com.apple.siri.activation.horseman
com.apple.siri.activation.application
com.apple.developer.siri
com.apple.siri.synapse
com.apple.assistantd.managedstorage
com.apple.assistant.notification_service
com.apple.siri.NotificationSource
com.apple.assistant.flow_service
com.apple.assistant.context
com.apple.siri.daemon_launched
com.apple.assistant.request
com.apple.assistant.speech-request
RequiresUserInteraction
OriginDeviceName
ActivationEvent
com.apple.assistant_service
PlayAndRecord_WithBluetooth
com.apple.assistant.speech-capture.finished
com.apple.siri.application_launched
com.apple.intents-service
.reload_plugin
com.apple.MobileAsset.EmbeddedSpeech
com.apple.MobileAsset.EmbeddedSpeech.ma.new-asset-installed
MAQueryResult
mock-replay-server
http://127.0.0.1:8181
com.apple.siri.client.state.DynamiteClientState.siri_data_changed
AlarmURLs
alarmURLs
T@"NSArray",C,N,V_alarmURLs
com.apple.assistant.logging
AFLogLevel
AFOutputLevel
AFCommandLoggingEnabled
log.facility.assistant
Client
ClientFlow
Daemon
Session
Speech
Fides
Location
AceConnection
Service
Plugin
Utility
Analysis
Performance
Proxy
Dispatch
Analytics
TinyCDB
MediaSupport
MockServer
MusicIndexer
Database
Sync
DeviceSync
Networking.Functional
Networking.Performance
/Library/Logs/CrashReporter/Assistant/
SpeechLogs
AFSpeechLogsDirectory
AFAnalyticsLogsDirectory
AFClearInternalLogFiles
CommandLogs
AFLogParsedCommandObject
plist
AFDispatchSyncLogged
AFDispatchSyncLogged_block_invoke
AFDispatchAsyncLogged
AFDispatchAsyncLogged_block_invoke
com.apple.siri
%02x
AFMyriadAdvertisementContextRecord: contextVersion=%ld vtEndTime=%f advRecordType=%ld advPayload=0x%@ deviceID=%@
-[AFMyriadAdvertisementContextRecord myriadAdvertisementContextAsData]
-[AFMyriadAdvertisementContextRecord isSaneForVoiceTriggerEndTime:endtimeDistanceThreshold:]
-[AFMyriadAdvertisementContextRecord _initializeMyriadAdvertisementContextRecordFromData:]
advertisementContextVersion
TC,R,N,V_advertisementContextVersion
advertisementRecordType
Tq,R,N,V_advertisementRecordType
voiceTriggerEndTime
Td,R,N,V_voiceTriggerEndTime
advertisementPayload
T@"NSData",R,C,N,V_advertisementPayload
deviceID
T@"NSUUID",R,C,N,V_deviceID
advertisementDispatchTime
Td,N,V_advertisementDispatchTime
info
T@"AFRequestInfo",R,N,V_info
peerIdentifier
T@"NSString",C,N,V_peerIdentifier
AFSiriTaskExecution.m
-[AFSiriTaskExecution initWithRequest:taskDeliverer:usageResultListener:]
Siri Task Execution
v24@?0@"AFSiriResponse"8@"NSError"16
-[AFSiriTaskExecution dealloc]
SiriRequest
SiriResponse
Task executions can only be started once
-[AFSiriTaskExecution start]_block_invoke_3
-[AFSiriTaskExecution start]_block_invoke
-[AFSiriTaskExecution _completeWithResponse:error:]
-[AFSiriTaskExecution _completeWithResponse:error:]_block_invoke
builtIn
server
default
horseman
application
allocation
properties
allocation = %@
properties = %@
AFExperimentGroup::identifier
AFExperimentGroup::allocation
AFExperimentGroup::properties
TQ,R,N,V_allocation
T@"NSDictionary",R,C,N,V_properties
AFWatchdogTimer.m
Invalid parameter not satisfying: %@
timeoutInterval >= 0
queue
timeoutHandler
_version
_history
Tq,R,N,V_version
history
T@"NSArray",&,N,V_history
_itemIdentifier
_selectionType
_date
Manual
Single Result
Assisted
Identifier: %@, Selection Type: %@, Date: %@
itemIdentifier
T@"NSString",C,N,V_itemIdentifier
selectionType
Tq,N,V_selectionType
date
T@"NSDate",&,N,V_date
vtSatScore
confidenceScores
vtSatScore = %@
confidenceScores = %@
AFMultiUserStateSnapshot::vtSatScore
AFMultiUserStateSnapshot::confidenceScores
T@"NSNumber",R,C,N,V_vtSatScore
T@"NSArray",R,C,N,V_confidenceScores
AFTurnIdentifierCreateFromBytes
timestamp
perceptualAudioHash
timestamp = %@
perceptualAudioHash = %@
AFMyriadContext::timestamp
AFMyriadContext::perceptualAudioHash
TQ,R,N,V_timestamp
T@"AFMyriadPerceptualAudioHash",R,C,N,V_perceptualAudioHash
com.apple.siri.activation.connection
-[AFSiriActivationConnection prewarmWithRequestInfo:context:completion:]
-[AFSiriActivationConnection prewarmWithRequestInfo:context:completion:]_block_invoke_2
v16@?0@"<AFSiriActivationResultMutating>"8
-[AFSiriActivationConnection prewarmWithRequestInfo:context:completion:]_block_invoke
v16@?0@"AFSiriActivationResult"8
-[AFSiriActivationConnection activateWithRequestInfo:context:completion:]
-[AFSiriActivationConnection activateWithRequestInfo:context:completion:]_block_invoke_2
-[AFSiriActivationConnection deactivateForReason:options:context:completion:]
-[AFSiriActivationConnection deactivateForReason:options:context:completion:]_block_invoke_2
-[AFSiriActivationConnection handleContext:completion:]
-[AFSiriActivationConnection handleContext:completion:]_block_invoke_2
-[AFSiriActivationConnection handleIntent:inBackgroundAppWithBundleId:reply:]
-[AFSiriActivationConnection handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke_2
-[AFSiriActivationConnection handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke
v24@?0@"INIntentResponse"8@"NSError"16
-[AFSiriActivationConnection handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]
-[AFSiriActivationConnection handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke_2
-[AFSiriActivationConnection handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke
v16@?0@"INIntentForwardingActionResponse"8
-[AFSiriActivationConnection _connection]
-[AFSiriActivationConnection _connectionInterrupted]
-[AFSiriActivationConnection _connectionInvalidated]
PhonemeMaps
v32@?0@"NSTextCheckingResult"8Q16^B24
_xpcObject
WasLanguageToggled
CurrentKeyboard
LastMessageLanguage
GlobalLastUsedKeyboard
MultilingualKeyboardLanguages
RecentConversationalMessages
DictationLanguages
KeyboardConversationLanguagePriors
KeyboardGlobalLanguagePriors
Language toggled = %d,
Current keyboard = %@,
Previous message language = %@,
Last used keyboard = %@,
Multilingual keyboard languages = %@,
Primary language = %@,
Dictation languages = %@,
Global Conversational Language Priors = %@,
Global Keyboard Language Priors = %@,
Dictation input origin = %@.
_languageToggled
_simulateLanguageDetectorAssetsAvailability
_currentKeyboard
_primaryLanguageCode
_prevMessageLanguage
_globalLastUsedKeyboard
_userContextChangeBit
_multiLingualKeyboardLanguages
_keyboardConvoRecentMessages
_dictationLanguages
_simulatingLanguageCodes
_finalDictationLanguages
_keyboardConversationLanguagePriors
_keyboardGlobalLanguagePriors
_languageCodeOverrides
_lidUserContext
_dictationLanguageMappingCache
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@"NSString"16^B24
AFLanguageDetectionUserContext.m
The cached dictation languages is not a instance of NSArray
The input dictation languages are not supported by language detector. This is a critical error.
-[AFLanguageDetectionUserContext getDictationLanguagesForSupportedLocales:error:]
-[AFLanguageDetectionUserContext userContextLanguageCodeForKeyboardLangauge:overrideLanguageCode:]
currentKeyboard
T@"NSString",C,N,V_currentKeyboard
primaryLanguageCode
T@"NSString",C,N,V_primaryLanguageCode
languageCodeOverrides
T@"NSDictionary",C,N,V_languageCodeOverrides
languageToggled
TB,N,GwasLanguageToggled,SsetWasLanguageToggled:,V_languageToggled
prevMessageLanguage
T@"NSString",C,N,V_prevMessageLanguage
globalLastUsedKeyboard
T@"NSString",C,N,V_globalLastUsedKeyboard
multiLingualKeyboardLanguages
T@"NSArray",C,N,V_multiLingualKeyboardLanguages
keyboardConvoRecentMessages
T@"NSArray",C,N,V_keyboardConvoRecentMessages
dictationLanguages
T@"NSArray",C,N,V_dictationLanguages
keyboardConversationLanguagePriors
T@"NSDictionary",C,N,V_keyboardConversationLanguagePriors
keyboardGlobalLanguagePriors
T@"NSDictionary",C,N,V_keyboardGlobalLanguagePriors
dictationInputOrigin
T@"NSNumber",C,N,V_dictationInputOrigin
com.apple.assistant.sync_data_changed
com.apple.assistant.sync_did_finish
sync_flag
Timer
timer
T@"STTimer",&,N,V_timer
updatedItemIndexPaths
T@"NSArray",R,N,V_updatedItemIndexPaths
insertedItemIndexPaths
T@"NSArray",R,N,V_insertedItemIndexPaths
presentationStateChangedItemIndexPaths
T@"NSArray",R,N,V_presentationStateChangedItemIndexPaths
kAFAssistantErrorDomain
SiriSpeechErrorDomain
SiriAceErrorDomain
SiriStructuredDictationErrorDomain
SiriLocalizedFailureTitle
SiriLocalizedFailureDescription
SiriRecognition
SiriSerializedUserActivity
SiriUnderlyingErrors
AFError.m
AFError is not designed to be instantiated.
+[AFError new]
-[AFError init]
AFErrorSetUnderlyingError
_AFErrorSetUnderlyingErrorRecursively
v32@?0@"NSError"8Q16^B24
-[_AFAudioPowerXPCSharedMemory initWithXPCObject:]
-[_AFAudioPowerXPCSharedMemory _destroyMapping]
averagePower
Tf,R,N
peakPower
com.apple.assistant.contextprovider
com.apple.assistant.contextprovider.%@
CollateContexts
Contexts
com.apple.siri.contextcollector
-[AFContextManager _collateContextsIntoArray:]
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/Assistant Framework/Context/AFContextManager.m
[NSThread isMainThread]
-[AFContextManager addContextProvider:]
-[AFContextManager removeContextProvider:]
AFNowPlayingObserver.defaultObserver
-[AFNowPlayingObserver initWithQueue:]
initial
-[AFNowPlayingObserver initWithQueue:]_block_invoke_2
-[AFNowPlayingObserver getPlaybackStateWithCompletion:]
-[AFNowPlayingObserver getPlaybackStateWithCompletion:]_block_invoke_2
-[AFNowPlayingObserver getPlaybackStateWithCompletion:]_block_invoke
-[AFNowPlayingObserver _fetchNowPlayingAppPlaybackStateForReason:completion:]
v12@?0I8
playbackState
Tq,R,N
AFUserNotificationProvider
-[AFUserNotificationProvider postNotificationRequest:responseHandler:]
v16@?0@"UNNotificationResponse"8
-[AFUserNotificationProvider postNotificationRequest:responseHandler:]_block_invoke
-[AFUserNotificationProvider withdrawNotificationRequestWithIdentifier:]_block_invoke
-[AFUserNotificationProvider _connection]_block_invoke
-[AFUserNotificationProvider receivedNotificationResponse:]
/siri/ui
AFRecordCoreDuetContext
AFDeleteCoreDuetEventsInStream
AFDeleteCoreDuetEventsInStream_block_invoke
(startDate > %@ AND startDate < %@) OR (endDate > %@ AND endDate < %@)
AFAppleAudioDeviceConnectedInLast24Hours
unknown_product_id
_AFRecordCoreDuetEventAtTimestamps_block_invoke
_DKEvent
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
_CDContextualKeyPath
/System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext
_CDClientContext
_DKQuery
_DKEventStream
_AFFetchCoreDuetEventsWithStream
_DKEventQuery
_DKKnowledgeStore
_DKSystemEventStreams
_DKBluetoothMetadataKey
PreviousConversation
Library
Assistant
Unspecified
RemoteRequest
Continuity
DirectAction
CorrectedText
Keyboard
SpokenNotification
ExternalRequest
TestAutomation
Bluetooth Headset
TV Remote
Control Center Remote
Remote App
Non Apple Remote
Home Button
Motion Down Gesture
Motion Up Gesture
On-Screen Affordance
Server Command
CarPlay
Voice
Wired Microphone
Stark Voice
Pre Recorded Audio
Raise To Speak
Hearst Double Tap
Hearst Voice
Jarvis
Triggerless
Test
Spoken Notification
AFQuickStopActionNone
AFQuickStopActionDismissFiringAlarm
AFQuickStopActionDismissFiringTimer
AFQuickStopActionInterruptSiriVoiceOutput
AFQuickStopActionStopMediaPlayback
AFQuickStopActionStopHomeAnnouncementPlayback
AFQuickStopActionCancelRunningTimer
AFQuickSTopActionPromptForConfirmation
isVoiceOverTouchEnabled
isVibrationDisabled
isVoiceOverTouchEnabled = %ld (%@)
isVibrationDisabled = %ld (%@)
AFAccessibilityState::isVoiceOverTouchEnabled
AFAccessibilityState::isVibrationDisabled
Tq,R,N,V_isVoiceOverTouchEnabled
Tq,R,N,V_isVibrationDisabled
_temperatureUnit
_twentyFourHourTimeDisplay
_region
_countryCode
_preferredLanguage
temperatureUnit
T@"NSString",C,N,V_temperatureUnit
twentyFourHourTimeDisplay
TB,N,V_twentyFourHourTimeDisplay
region
T@"NSString",C,N,V_region
countryCode
T@"NSString",C,N,V_countryCode
preferredLanguage
T@"NSString",C,N,V_preferredLanguage
index
source
-[AFUserUtterance rangeListOfDifferingTextFromUtteranceAtIndex:comparedToBaseUtteranceAtIndex:]
-[AFUserUtterance speechTokensForUtteranceAtIndex:]
-[AFUserUtterance textOfUtteranceAtIndex:]
v32@?0@"NSNumber"8Q16^B24
-[AFUserUtterance allRecognitionStringsAndScores]
-[AFUserUtterance _updatePhraseswithSwapIndices:]
-[AFUserUtterance _updateUtteranceswithAlternativeUtteranceAtIndex:swapIndices:]
-[AFUserUtterance updateDictationResult:withAlternativeUtteranceAtIndex:]
<%@: %p; %lu phrases; %lu tokens; text: "%@">
correctionIdentifier
T@"NSDictionary",R,N,V_correctionIdentifier
dictationResult
T@"NSArray",R,N
allPhrases
combinedRank: %@ combinedScore: %@ interactionId: %@ onDeviceUtterancesPresent: %@ originalRank: %@ originalScore: %@ previousUtterance; %@ sessionId: %@ utteranceSource: %@
_combinedRank
_combinedScore
_interactionId
_onDeviceUtterancesPresent
_originalRank
_originalScore
_previousUtterance
_sessionId
_utteranceSource
combinedRank
T@"NSNumber",C,N,V_combinedRank
combinedScore
T@"NSNumber",C,N,V_combinedScore
interactionId
T@"NSString",C,N,V_interactionId
onDeviceUtterancesPresent
T@"NSNumber",C,N,V_onDeviceUtterancesPresent
originalRank
T@"NSNumber",C,N,V_originalRank
originalScore
T@"NSNumber",C,N,V_originalScore
previousUtterance
T@"NSString",C,N,V_previousUtterance
sessionId
T@"NSString",C,N,V_sessionId
utteranceSource
T@"NSString",C,N,V_utteranceSource
v32@?0@"NSString"8@"NSDictionary"16^B24
v40@?0r^v8{_NSRange=QQ}16^B32
TQ,R
T#,R
debugDescription
{NSDecimalNumber=#b8b4b1b1b1b1b16[0S]}
{NSURL=#@@^v^v}
{NSDictionary=#}
aceId
timerID
timerURL
isFiring
title
fireTimeInterval
fireDate
firedDate
dismissedDate
lastModifiedDate
timerID = %@
timerURL = %@
isFiring = %@
title = %@
duration = %@
fireTimeInterval = %@
fireDate = %@
firedDate = %@
dismissedDate = %@
lastModifiedDate = %@
AFClockTimer::timerID
AFClockTimer::timerURL
AFClockTimer::isFiring
AFClockTimer::title
AFClockTimer::state
AFClockTimer::duration
AFClockTimer::type
AFClockTimer::fireTimeInterval
AFClockTimer::fireDate
AFClockTimer::firedDate
AFClockTimer::dismissedDate
AFClockTimer::lastModifiedDate
T@"NSUUID",R,C,N,V_timerID
T@"NSURL",R,C,N,V_timerURL
TB,R,N,V_isFiring
T@"NSString",R,C,N,V_title
Td,R,N,V_fireTimeInterval
T@"NSDate",R,C,N,V_fireDate
T@"NSDate",R,C,N,V_firedDate
T@"NSDate",R,C,N,V_dismissedDate
T@"NSDate",R,C,N,V_lastModifiedDate
com.apple.assistant.analytics.connection
-[AFAnalyticsConnection beginEventsGrouping]
-[AFAnalyticsConnection endEventsGrouping]
-[AFAnalyticsConnection logInstrumentationOfType:machAbsoluteTime:turnIdentifier:]_block_invoke_2
-[AFAnalyticsConnection boostQueuedEvents:]
-[AFAnalyticsConnection boostQueuedEvents:]_block_invoke
-[AFAnalyticsConnection _handleFailureCallbackForEvents:error:numberOfRetries:completion:]
needsCleanUpConnection
TB,V_needsCleanUpConnection
%@ anchor: %@ validity: %@ count: %zd key: %@ targetIsLocal: %d appMetadata: %@ reasons: %@
_anchor
_validity
_count
_key
_targetIsLocal
_appMetadata
_forVerification
_reasons
anchor
T@"NSString",C,N,V_anchor
validity
T@"NSString",C,N,V_validity
Tq,N,V_count
T@"NSString",C,N,V_key
appMetadata
T@"SASyncAppMetaData",C,N,V_appMetadata
targetIsLocal
TB,N,V_targetIsLocal
forVerification
TB,N,V_forVerification
reasons
T@"NSSet",C,N,V_reasons
_recognition
_rawRecognition
_audioAnalytics
_isFinal
_utteranceStart
recognition
rawRecognition
isFinal
utteranceStart
T@"AFSpeechRecognition",R,N,V_recognition
T@"AFSpeechRecognition",R,N,V_rawRecognition
audioAnalytics
T@"AFSpeechAudioAnalytics",R,N,V_audioAnalytics
TB,R,N,V_isFinal
Td,R,N,V_utteranceStart
style
beepSoundID
style = %ld (%@)
beepSoundID = %ld (%@)
AFSpeechRecordingAlertBehavior::style
AFSpeechRecordingAlertBehavior::beepSoundID
Tq,R,N,V_style
Tq,R,N,V_beepSoundID
data
data = (%ld bytes)
AFMyriadPerceptualAudioHash::data
T@"NSData",R,C,N,V_data
v32@?0@8@16^B24
tone
silent
daemon
daemon.launch
daemon.loaded
daemon.exit
daemon.failure
daemon.start-request.speech
daemon.start-request.dictation
daemon.start-request.other
daemon.start-request.keyboard
daemon.log.numeric-event
daemon.log.string-event
daemon.audio
daemon.audio.init.begin
daemon.audio.init.end
daemon.audio.configure.begin
daemon.audio.configure.end
daemon.audio.prewarm.begin
daemon.audio.prewarm.end
daemon.audio.prepare.begin
daemon.audio.prepare.end
daemon.audio.fetch-route.begin
daemon.audio.fetch-route.end
daemon.audio.start-recording.begin
daemon.audio.start-recording.end
daemon.audio.recording.begin
daemon.audio.recording.first-buffer
daemon.audio.recording.end
daemon.audio.stop-recording.begin
daemon.audio.stop-recording.end
daemon.audio.late-buffer
daemon.audio.analyzer.startpoint.detected
daemon.audio.analyzer.hard-endpoint.detected
daemon.audio.failure
daemon.audio.bt-info.fetch.begin
daemon.audio.bt-info.fetch.end
daemon.audio.fan-info
daemon.audio.first-chance-trigger-info
daemon.audio.recording.interruption.begin
daemon.audio.recording.interruption.end
daemon.audio.set-endpoint-state
daemon.audio.recording.first-buffer.start
daemon.audio.recording.first-buffer.receipt
daemon.audio.recording.last-buffer.start
daemon.audio.recording.last-buffer.receipt
daemon.audio.session.set-active.begin
daemon.audio.session.set-active.end
daemon.audio.session.set-inactive.begin
daemon.audio.session.set-inactive.end
daemon.audio.recording.missed-buffer
daemon.audio.file.started
daemon.audio.two-shot.transition.begin
daemon.audio.two-shot.transition.end
daemon.audio.recording.metrics
daemon.audio.bluetooth-info
daemon.audio.analyzer.multi-modal-endpoint.detected
daemon.speech
daemon.speech.capture.start.begin
daemon.speech.capture.start.end
daemon.speech.capture.update
daemon.speech.capture.cancel
daemon.speech.capture.stop
daemon.speech.failure
daemon.speech.capture.continued
daemon.speech.result-candidate.evaluation.begin
daemon.speech.result-candidate.evaluation.end
daemon.speech.result-candidate.accepted
daemon.speech.result-candidate.stashed
daemon.speech.log.begin
daemon.speech.log.end
daemon.service
daemon.service.handle.begin
daemon.service.handle.end
daemon.service.bundle.handle.begin
daemon.service.bundle.handle.end
daemon.memory
daemon.memory.pressure.notification
daemon.generic-intent
daemon.generic-intent.handle.begin
daemon.generic-intent.handle.timeout
daemon.generic-intent.deliver.begin
daemon.generic-intent.recipient.state-changed
daemon.generic-intent.recipient.crash
daemon.generic-intent.recipient.finished
daemon.generic-intent.handle.end
daemon.intent
daemon.intent.extension.prepare
daemon.intent.extension.ready
daemon.intent.extension.unexpected-exit
daemon.intent.extension.launch.timeout.
daemon.intent.extension.request.timeout
daemon.intent.resolve.begin
daemon.intent.resolve.request.sent
daemon.intent.resolve.response.received
daemon.intent.resolve.end
daemon.intent.confirm.begin
daemon.intent.confirm.request.sent
daemon.intent.confirm.response.received
daemon.intent.confirm.response-ui-visible
daemon.intent.confirm.end
daemon.intent.handle.begin
daemon.intent.handle.request.sent
daemon.intent.handle.response.received
daemon.intent.handle.response-ui-visible
daemon.intent.handle.end
daemon.intent.launch-with-intent.begin
daemon.intent.launch-with-intent.end
daemon.intent.launch-with-user-activity.begin
daemon.intent.launch-with-user-activity.end
daemon.intent.resolve-app.begin
daemon.intent.resolve-app.end
daemon.intent.extension.request.begin
daemon.intent.extension.request.end
daemon.intent.extension.prewarm.begin
daemon.intent.extension.prewarm.end
daemon.intent.process-intent.begin
daemon.intent.process-intent.end
daemon.intent.process-intent.extension.sent
daemon.intent.process-intent.extension.received
daemon.intent.get-app-info.begin
daemon.intent.get-app-info.end
daemon.intent.process-intent.resolve.begin
daemon.intent.process-intent.resolve.end
daemon.intent.process-intent.confirm.begin
daemon.intent.process-intent.confirm.end
daemon.intent.process-intent.handle.begin
daemon.intent.process-intent.handle.end
daemon.task
daemon.task.schedule
daemon.task.start
daemon.task.deliver
daemon.task.finish
daemon.domain-signal
daemon.domain-signal.launch-app
daemon.session
daemon.session.connection.opened
daemon.session.connection.snapshot.local
daemon.session.connection.snapshot.remote
daemon.session.connection.timeout
daemon.session.connection.dropped
daemon.session.connection.failed
daemon.session.validation.failed
daemon.session.authentication.failed
daemon.session.assistant.failed
daemon.session.assistant.not-ready
daemon.session.remapped-request-id
daemon.session.connection.start
daemon.session.connection.reset
daemon.session.connection.client-connection-id.created
daemon.session.connection.first-byte.received
daemon.session.local.assistant.not-ready
daemon.session.local.connection.reset
daemon.session.proxied-request-id
daemon.session.won
daemon.session.load-assistant
daemon.session.failed
daemon.session.connection.http-header.created
daemon.session.results.queued
daemon.session.assistant.loaded
daemon.session.reset-on-request-boundary
daemon.session.connection-header.ace-host.mismatch
daemon.network
daemon.network.available
daemon.network.server-address.resolved
daemon.network.failure
daemon.network.peer.error
daemon.network.ace-ping.sent
daemon.network.ace-pong.received
daemon.network.provider.open.begin
daemon.network.provider.open.end
daemon.network.provider.secondary.open.begin
daemon.network.provider.secondary.open.end
daemon.network.link.recommendation.begin
daemon.network.link.recommendation.end
daemon.network.link.recommendation.timeout
daemon.network.connection.unviable
daemon.network.connection.viable
daemon.network.connection.state-prepare
daemon.network.connection.state-ready
daemon.incoming-command
daemon.incoming-command.speech-partial-result
daemon.incoming-command.speech-recognized
daemon.outgoing-command
daemon.outgoing-command.failure
daemon.local.outgoing-command.failure
daemon.service.maintenance.begin
daemon.service.maintenance.end
daemon.preferences.synchronize.failure
ui.plugin.loaded
ui.activation.prepare
ui.activation.cancel
ui.activation.handle.begin
ui.activation.handle.end
ui.present.begin
ui.present.end
ui.dismiss.begin
ui.dismiss.end
ui.button.down
ui.button.up
ui.button.tap
ui.blur
ui.flames.present
ui.flames.dismiss
ui.mode.idle
ui.mode.listening
ui.mode.thinking
ui.mode.success
ui.uufr.present
ui.command.handle.begin
ui.command.handle.end
ui.failure
ui.tap-to-edit-button.tap
ui.url-session-load.failure
ui.disambiguation.selected
ui.tts.should-speak
ui.tts.should-not-speak
ui.transcript-item.inserted
ui.transcript-item.did-appear
ui.transcript-item.did-disappear
ui.transcript.scrolled
ui.unlock-ui.presented
ui.unlock-ui.dismissed
ui.device.locked
ui.device.unlocked
ui.punchout.begin
ui.punchout.end
ui.transcript-items.reload.begin
ui.transcript-items.reload.end
ui.mode.presenting
ui.mode.idle.rendered
ui.mode.listening.rendered
ui.mode.thinking.rendered
ui.mode.presenting.rendered
ui.button.text-request-input.start
ui.button.text-request-input.done
ui.button.text-request-input.clear
ui.add-views.view.null-ace-id-detected
ui.swipe.dismiss
ui.bluetooth.bvra1.received
ui.notification-sound.playback.failure
ui.view.presented
ui.view.dismissed
ui.view.did-engage
ui.view.scrolled
ui.view.item-selected
ui.audio-route-picker.tapped
ui.received-reveal-speech-command
ui.dismiss.request
ui.view.did-appear
ui.view.did-disappear
ui.view-service
ui.view-service.launch
ui.view-service.loaded
ui.view-service.exit
ui.view-service.speech-partial-result.received
ui.view-service.speech-partial-result.presented
ui.view-service.speech-recognized.received
ui.view-service.speech-recognized.presented
ui.view-service.failure
ui.view-service.pin
ui.view-service.pin.begin
ui.view-service.pin.end
ui.view-service.drag
ui.view-service.did-appear
ui.view-service.did-disappear
coverage.aggregate-dictionary
coverage.aggregate-dictionary.scalar
coverage.aggregate-dictionary.distribution
coverage.request-statistics
coverage.request-statistics.cancellation
coverage.request-statistics.failure
voice-services.daemon
voice-services.daemon.speech-request.creation
voice-services.daemon.speech-request.vocalization.begin
voice-services.daemon.speech-request.vocalization.end
voice-services.daemon.speech-request.synthesize.begin
voice-services.daemon.speech-request.synthesize.end
client
client.start-request
client.start-speech-request
client.start-speech-pronunciation-request
client.start-acoustic-id-request
client.start-continuity-request
client.start-correction-request
client.start-direct-action-request
client.start-text-request
client.update-speech
client.stop-speech
client.cancel-speech
client.request-canceled
client.request-failed
client.request-completed
client.preheat
client.acoustic-id.begin
client.acoustic-id.end
client.tether.wait.begin
client.tether.wait.end
client.tether.attach.begin
client.tether.attach.end
client.tether.attached
client.tether.detached
client.feedback.presented
client.auto-disambiguation.requested
client.auto-disambiguation.saved
client.location.no-result
client.location.start-updating
client.location.did-update
client.screen-wake-requested
client.screen-turn-off-requested
client.coord
client.coord.audio-ready
client.coord.advertising-start-request
client.coord.advertising-did-start
client.coord.advertising-end-request
client.coord.advertising-did-end
client.coord.decision-made
client.coord.slowdown-generated
client.coord.slowdown-received
client.coord.multiple-continuation-signals
client.coord.advertising-will-end
client.coord.activity-start
client.coord.activity-end
client.coord.advertisement-push-begin
client.coord.advertisement-push-error
client.coord.advertisement-push-response-received
client.coord.advertisement-push-response-received-invalidAdvertisementId
client.coord.advertisement-push-response-received-late
client.coord.suppress-late-trigger
ui.watch
ui.activation.gizmo-vt-while-already-recording
ui.delayed-response.education
ui.delayed-response.wrist-lowered
ui.delayed-response.backlight-on
ui.tts.canceled
client.dictation
client.dictation.start-request
client.dictation.update-speech
client.dictation.stop-speech
client.dictation.cancel-speech
client.dictation.request-canceled
client.dictation.request-failed
client.dictation.request-completed
client.dictation.timeout-request
client.dictation.speech-recording.started
client.dictation.speech-recording.canceled
client.dictation.speech-recording.completed
client.dictation.speech-recording.failed
client.dictation.speech-recognition.phrases-recognized
client.dictation.speech-recognition.tokens-recognized
client.dictation.speech-recognition.transcription-objects-recognized
client.dictation.speech-recognition.completed
client.dictation.speech-recognition.failed
client.dictation.app-did-enter-background
client.dictation.smart-language-selection.language-overridden
client.dictation.request-sampled
client.dictation.personalization-validation-metrics
client.dictation.request-completion-status
client.dictation.sampled-audio.send-to-server.status
client.dictation.request-sampled.save-audio
client.dictation.preheat
client.dictation.offline-dictation-status
voice-trigger
voice-trigger.start
voice-trigger.fire
voice-trigger.end
voice-trigger.early-detect
ui-plugin
ui-plugin.movies.loading-media-buttons.begin
ui-plugin.movies.loading-media-buttons.end
ui-plugin.sports.watch-list-kit-call.begin
ui-plugin.sports.watch-list-kit-call.end
qa.automation
qa.automation.begin
qa.automation.end
qa.automation.mark
cdm.nl-service.handle-command.begin
cdm.nl-service.handle-command.end
cdm.flow-service.handle-command.begin
cdm.flow-service.handle-command.end
cdm.config.asset-manager.offline-query-start
cdm.config.asset-manager.offline-query-success
cdm.config.asset-manager.offline-query-failed
cdm.config.asset-manager.online-query-start
cdm.config.asset-manager.online-query-success
cdm.config.asset-manager.online-query-failed
cdm.config.asset-manager.asset-download-start
cdm.config.asset-manager.asset-download-completed
cdm.config.asset-manager.asset-download-failed
cdm.config.asset-manager.asset-download-cancelled
cdm.config.asset-manager.asset-purged
cdm.start-speech.received
cdm.set-assistant-data.received
cdm.load-assistant.received
cdm.service.handle-command.begin
cdm.service.handle-command.end
vox.speech-synthesis.enqueued
vox.speech-synthesis.canceled
vox.speech-synthesis.failed
vox.speech-synthesis.finished
vox.speech-synthesis.interrupted
vox.speech-synthesis.started
vox.two-shot-sound.begin
vox.two-shot-sound.end
vox.session-inactive-sound.begin
vox.session-inactive-sound.end
vox.tap-to-siri-sound.begin
vox.tap-to-siri-sound.end
now-playing
now-playing.is-playing.changed
music
music.playback.ready
music.playback.secure-key
music.playback.asset-load
music.playback.summary
music.playback.start
music.playback.queue.received
music.playback.queue.daemon.received
music.playback.alternatives
xcode
xcode.test.begin
xcode.test.end
device-configuration
device-configuration.snapshot
settings.set-language
settings.set-output-voice
settings.set-voice-feedback
settings.changed-tcc-info
settings.changed-type-to-siri
setup
setup.phs.bootstrapped
setup.phs.training-started
setup.phs.training-finished
setup.phs.training-canceled
setup.phs.training-phs-1
setup.phs.training-phs-2
setup.phs.training-phs-3
setup.phs.training-phs-4
setup.phs.training-phs-5
setup.phs.training-skipped
setup.phs.training-step-retry
experiment
experiment.exposure.siri-vox-sounds
experiment.exposure.siri-vox-tap-to-siri-behavior
experiment.exposure.invocation-feedback
client-flow.plugin
client-flow.plugin.started
client-flow.plugin.execution.started
client-flow.plugin.execution.finished
client-flow.plugin.execution.failed
client-flow.cf-client
client-flow.cf-client.scripter-load-started
client-flow.cf-client.scripter-load-finished
client-flow.cf-client.scripter-warmed-up
client-flow.cf-client.scripter-warmed-up-with-script-hint
client-flow.cf-client.execution.started
client-flow.cf-client.execution.finished
client-flow.cf-client.execution.failed
client-flow.cf-client.warmup.started
client-flow.cf-client.cache.evicted
client-flow.js
client-flow.js.siri-mini
client-flow.js.server-flow
client-flow.js.provider
client-flow.js.background-action.maintenance
client-flow.js.background-action.activity-collection
client-flow.js.background-action.data-migration
client-flow.js.background-action.update-scripts
client-flow.js.background-action.morphun_assets_downloaded
client-flow.js.background-action.morphun_assets_failed
client-flow.update-scripts.script.download-from-server
client-flow.update-scripts.script.download-from-cdn
client-flow.update-scripts.script.download-failed-from-cdn.invalidUrl
client-flow.update-scripts.script.download-failed-from-cdn.networkError
client-flow.update-scripts.script.download-failed-from-cdn.hmacVerificationError
client-flow.update-scripts.script.download-failed-from-cdn.decryptionError
client-flow.update-scripts.script.download-failed-from-cdn.checksumVerificationError
client-flow.client-scripter
client-flow.client-scripter.started
client-flow.client-scripter.js-context-setup.started
client-flow.client-scripter.js-context-setup.finished
client-flow.client-scripter.js-evaluation.started-for-script
client-flow.client-scripter.js-evaluation.finished-for-script
client-flow.client-scripter.js-execution.started
client-flow.client-scripter.js-execution.finished
client-flow.client-scripter.js-execution.successful
client-flow.client-scripter.js-execution.failed
client-flow.client-scripter.script.sent-from-server
client-flow.client-scripter.script.retrieved-from-server
client-flow.client-scripter.script.loaded-from-memory-cache
client-flow.client-scripter.script.loaded-from-filesystem
client-flow.client-scripter.script.used-cached-js-context
client-flow.client-scripter.script.used-deferred-cached-js-context
client-flow.client-scripter.script.retrieval-failed
client-flow.client-scripter.script.caching-failed
client-flow.client-scripter.sent-command
client-flow.client-scripter.sent-command-async
client-flow.client-scripter.received-response
client-flow.client-scripter.js-context-created-in-warmup
client-flow.client-scripter.js-context-evaluated-script-in-warmup-for-script
client-flow.client-scripter.cached-js-context-count
client-flow.client-scripter.execution.failed
client-flow.client-scripter.connection-interrupted
client-flow.client-scripter.connection-invalidated
client-flow.client-scripter.memory-usage
client-flow.client-scripter.warmup-failed
ui.card.present.begin
ui.card.present.end
ui.card.section-present.begin
ui.card.section-present.end
ui.card.engaged-with
ui.card.section-engaged-with
ui.card.async-card-requested
ui.card.async-card-received
ui.card.relationship-identified
assistant-service
assistant-service.launch
assistant-service.exit
assistant-service.message.send
assistant-service.message.delivered
assistant-service.message.begin
assistant-service.message.end
assistant-service.command-perform.begin
assistant-service.command-perform.end
assistant-service.bundle-loading.begin
assistant-service.bundle-loading.end
cloud-kit
cloud-kit.siri.change-arrived
cloud-kit.knowledge.change-arrived
cloud-kit.keychain.sync-error
cloud-kit.zone.not-found
cloud-kit.server.change-token.expired
cloud-kit.rate-limited
cloud-kit.network-failure
cloud-kit.server.record-changed
ids.device-connection.snapshot.local
analytics
analytics.store.database.post-corruption-detected
analytics.store.database.open-failed
analytics.store.database.integrity-check-failed
analytics.store.database.unrecoverable-error-detected
analytics.store.database.preparation-failed
analytics.store.reset
analytics.store.database.created
local-recognition
local-recognition.started
local-recognition.partial-result
local-recognition.eager-candidate
local-recognition.package
local-recognition.finished
local-recognition.preheat.start
local-recognition.preheat.done
daemon.context
daemon.context.get-background-context.begin
daemon.context.get-background-context.end
daemon.context.get-background-context.nav-status.begin
daemon.context.get-background-context.nav-status.end
daemon.context.get-background-context.now-playing.begin
daemon.context.get-background-context.now-playing.end
daemon.context.get-background-context.siri-kit-settings.begin
daemon.context.get-background-context.siri-kit-settings.end
daemon.context.get-background-context.device-problems.begin
daemon.context.get-background-context.device-problems.end
daemon.context.get-background-context.current-home-kit-home.begin
daemon.context.get-background-context.current-home-kit-home.end
daemon.context.get-background-context.app-subscription-status.begin
daemon.context.get-background-context.app-subscription-status.end
daemon.context.get-background-context.music-personalization-token.begin
daemon.context.get-background-context.music-personalization-token.end
daemon.context.get-background-context.phone-call-state.begin
daemon.context.get-background-context.phone-call-state.end
daemon.context.get-background-context.simple-state.begin
daemon.context.get-background-context.simple-state.end
daemon.context.get-background-context.is-navigating.begin
daemon.context.get-background-context.is-navigating.end
daemon.context.get-background-context.playback-devices.begin
daemon.context.get-background-context.playback-devices.end
daemon.context.get-cross-device-context.begin
daemon.context.get-cross-device-context.end
daemon.context.get-background-context.home-communication-announcement.begin
daemon.context.get-background.context.home-communication-announcement.end
daemon.context.cross-device-command.handled
daemon.context.cross-device-command.nearby-devices
daemon.context.context-collector.changed
daemon.context.local-context.changed
daemon.context.context-fetch.request.sent
daemon.context.context-fetch.request.received
daemon.context.context-fetch.response.sent
daemon.context.context-fetch.response.received
daemon.context.context-fetch.error
volume
volume.changed
volume.fetched
volume.updated
volume.down
volume.up
core-speech
core-speech.audio-logging-metrics
core-speech.smart-siri-volume.fetched
core-speech.smart-language-detector.metrics
core-speech.voice-trigger.reject.info
core-speech.voice-trigger.phs-reject.info
core-speech.nvi.additional.signal
core-speech.last-process-chunk
core-speech.voice-trigger.toggle.info
core-speech.voice-trigger.phs-fa-reject.info
daemon.peer-message
daemon.peer-message.send.begin
daemon.peer-message.send.end
daemon.peer-message.remote.execute.send.begin
daemon.peer-message.remote.execute.send.end
call-status
call-status.audio-call.on
call-status.audio-call.off
daemon.peer
daemon.peer.companion.account.changed
daemon.wha
daemon.wha.media.system.configuration.changed
raise-to-speak
raise-to-speak.settings-enabled
raise-to-speak.settings-disabled
raise-to-speak.legacy-policy-decision
raise-to-speak.second-pass-policy-decision
raise-to-speak.silence-posterior-generator-decision
raise-to-speak.near-miss.nearby-activation
raise-to-speak.data-collection.session-mark
raise-to-speak.first-pass-policy-decision
voice-shortcut
voice-shortcut.setup.started
voice-shortcut.setup.finished
voice-shortcut.setup.cancelled
bluetooth-device
bluetooth-device.double-tap
bluetooth-device.voice
bluetooth-device.double-tap.false-remote-activation-decision
bluetooth-device.double-tap.false-remote-deactivation-decision
proximity.setup
proximity.setup.phs.bootstrapped
proximity.setup.phs.training-started
proximity.setup.phs.training-finished
proximity.setup.phs.training-canceled
proximity.setup.phs.training-phs-1
proximity.setup.phs.training-phs-2
proximity.setup.phs.training-phs-3
proximity.setup.phs.training-phs-4
proximity.setup.phs.training-phs-5
proximity.setup.phs.training-skipped
proximity.setup.phs.training-step-retry
proximity.setup.dismissed
client-mode
client-mode.computation.evaluated-add-views
client-mode.computation.evaluated-ace-command
spoken-notifications
spoken-notifications-start
spoken-notifications.message-received
spoken-notifications.message-not-read-inopportune
spoken-notifications.message-not-read-muted
spoken-notifications.message-not-read-siri-in-use
spoken-notifications.message-opportune
spoken-notifications.message-readout-canceled-pull-out
spoken-notifications.message-readout-canceled-double-tap
spoken-notifications.message-readout-canceled-speech
spoken-notifications.message-readout-finished
spoken-notifications.message-reply-related
spoken-notifications.message-reply-silence
spoken-notifications.message-reply-unrelated
spoken-notifications-end
multi-user
multi-user.voice-profile.upload-failure
multi-user.voice-profile.limit-reached
multi-user.manatee.key-loss
multi-user.participant.sharing-failure
multi-user.voice-profile.upload-success
multi-user.voice-profile.download-failure
multi-user.voice-profile.download-success
multi-user.setup.user.added-to-home
multi-user.setup.user.voice-id-enabled
multi-user.setup.homepod.user.added-to-home
multi-user.setup.homepod.user.voice-id-enabled
multi-user.setup.homepod.user.ready
multi-user.score.confusion
multi-user.metrics.homepod.voice-id-enablement-count
multi-user.score.donation
multi-user.score.usage
multi-user.setup.homepod.missing-home-member-settings
donate-activity
donate-activity.location-search.donation-displayed-in-maps
donate-activity.location-search.donation-selected-in-maps
client-ad-blocker
client-ad-blocker.found-match
dialog-engine
dialog-engine.cat-executed
home-automation
home-automation.homekit-request.start
home-automation.homekit-request.end
home-automation.control-home.flow.start
home-automation.control-home.flow.end
home-automation.control-home.app-extension.start
home-automation.control-home.app-extension.end
unknown.%ld
interpretations
isLowConfidence
%@, interpretations=%@, isLowConfidence=%@
T@"NSArray",C,N,V_interpretations
TB,N,V_isLowConfidence
%@, interpretationIndices=%@, confidenceScore=%@, source=%@
_interpretationIndices
_confidenceScore
_source
interpretationIndices
confidenceScore
T@"NSArray",C,N,V_interpretationIndices
Tq,N,V_confidenceScore
Tq,N,V_source
tokens
%@, tokens=%@
T@"NSArray",C,N,V_tokens
text: %@, phoneSequence: %@, score: %ld, start: %lf, silenceStart: %lf, end: %lf, remove space before: %@ after: %@, ipaPhoneSequence: %@
text
phoneSequence
confidence
startTime
silenceStartTime
endTime
removeSpaceBefore
removeSpaceAfter
ipaPhoneSequence
T@"NSString",C,N,V_text
T@"NSString",C,N,V_phoneSequence
T@"NSString",C,N,V_ipaPhoneSequence
Td,N,V_startTime
Td,N,V_silenceStartTime
Td,N,V_endTime
TB,N,V_removeSpaceBefore
TB,N,V_removeSpaceAfter
disabled
suspended
automatic
automaticClientOnly
successTitle
successBody
successButtonText
errorTitle
errorBody
errorButtonText
successTitle = %@
successBody = %@
successButtonText = %@
errorTitle = %@
errorBody = %@
errorButtonText = %@
AFDeleteSiriHistoryContext::successTitle
AFDeleteSiriHistoryContext::successBody
AFDeleteSiriHistoryContext::successButtonText
AFDeleteSiriHistoryContext::errorTitle
AFDeleteSiriHistoryContext::errorBody
AFDeleteSiriHistoryContext::errorButtonText
T@"NSString",R,C,N,V_successTitle
T@"NSString",R,C,N,V_successBody
T@"NSString",R,C,N,V_successButtonText
T@"NSString",R,C,N,V_errorTitle
T@"NSString",R,C,N,V_errorBody
T@"NSString",R,C,N,V_errorButtonText
kAFPreferencesDidChangeDarwinNotification
com.apple.siri.cloud.synch.changed
com.apple.siri.cloud.storage.deleted
com.apple.siri.supported.languages.changed
com.apple.siri.stereo.configuration.changed
com.apple.siri.myriad.stereo.partner.data.changed
AFPreferencesDidChangeNotification
com.apple.UIKit
Dictation Enabled
com.apple.siri.ClientFlow
clientflow.scriptoverride
com.apple.webinspectord
RemoteInspectorEnabled
AFInternalPreferencesDidChangeDarwinNotification
AFLanguageCodeDidChangeDarwinNotification
AFOutputLanguageDidChangeDarwinNotification
AFLanguageCodeDidChangeNotification
AFOutputVoiceDidChangeNotification
AFPreferencesManualEndpointingThresholdDidChangeNotification
AFNanoPreferencesDidChangeNotification
com.apple.ironwood.support
Assistant Enabled
Hands Free Mode
In Progress Output Voice
Output Voice
Session Language
SessionLanguageUIForceRTL
Additional Languages
Respects System Mute
Use device speaker for TTS
Suppress Assistant Opt In
Suppress Dictation Opt In
On Device Dictation Available Alert Presented
Suppress Siri Data Sharing Opt In
Cloud Sync User ID
Cloud Sync Enabled
Cloud Sync Enabled Modification Date
StartAlertEnabled
Internal User Classification
Config Overrides
Config Profile Overrides
Spoken Notification Temporarily Muted End Date
Spoken Notification Skip Triggerless Reply Confirmation
Spoken Notification Should Always Speak Notifications
Spoken Notification Should Skip Trggerless Replies
HI/CI Design Mode
Modification Dates
SiriKit Enabled List
PHS Asset Manifest
PHS Asset Manifest V2
com.apple.assistant.nano
PHS Enabled
RTS Enabled
RTS Info Dismissed
TTS Speaker Volume
Crown Activation Enabled
Siri Data Sharing Opt-In Status
Offline Dictation Status
com.apple.assistant.nano.preferences.did_change
com.apple.assistant.nano.preferences.did_change.internal
com.apple.internal.ck
SiriMiniEnabled
SiriMiniWaitTimeInMillisBeforeResponding
SiriPersonalizedASRDisabled
DictationOnDeviceSamplingDisabled
ATVStopRecordingDelay
com.apple.siri.ContinuousDialogManagerService
com.apple.MobileAsset.EmbeddedNL
com.apple.siri.embeddedspeech
InstalledLanguages
com.apple.assistant.managedconfiguration
allowSiriServerLogging
en-US
com.apple.siri.textinput
SiriUITextInputEnabled
SiriUITextInputHTTEnabled
Type To Siri Enabled
com.apple.assistant
com.apple.assistant.backedup
mobile
_AFPreferencesBoolValueFromValueWithDefault
com.apple.assistant.support
ADTestAccess
Always Print Siri Response Override
de-DE
de-CH
en-AU
en-CA
en-SG
es-ES
es-MX
es-US
fr-CA
fr-CH
it-IT
it-CH
ja-JP
ko-KR
zh-CN
zh-TW
zh-HK
pt-BR
da-DK
en-NZ
ru-RU
sv-SE
th-TH
tr-TR
nb-NO
de-AT
fr-BE
nl-BE
fi-FI
he-IL
ms-MY
es-CL
en-ZA
yue-CN
en-IE
143441
143442
143443
143444
143452
143454
143455
143456
143457
143460
143462
143468
143503
zh_CN
en_MY
en_HK
en_SA
en_AE
es-419
776E7CEE-4FCE-4780-A401-691B2C16EF68
iPhone OS
Ignore Internal Config
Always Eyes Free
Ignore Server Manual Endpointing Threshold
Manual Endpointing Threshold
Streaming Dictation Enabled
Simulate Immediate Speech Capture
Buffered Speech Capture Packet Interval
Show All Dialog Variants
Enable TFO
Disable Tuscany
Enable Server Debug Flags
Enable Non Manatee Identity
Prefer SiriMini
Experimental SiriMini
Enable Sync Directly From Watch
Allow Myriad Coordination
Disable Myriad BLE Activity
Enable Database Syncing
Siri Vocabulary Enabled
Allow Myriad Ducking
Server Has Provisioned Myriad
Server Provisions Myriad
Myriad Device Group
Myriad Device Class
Myriad Constant Goodness
Myriad Device Adjust
Myriad Device Delay
Myriad Test Device Delay
Myriad Device Slowdown
Myriad Device Trump Delay
Myriad Last Win
Myriad VTEndtimeDistanceThreshold
Myriad Ignore Adjusted Boost
Myriad Monitor Timeout Interval
Opportune Speaking Pause
Opportune Speaking Timeout
Limited Audio Logging
Network Stack Override
Enable Siri Debug UI
Enable Speaker Grading Debug UI
Enable Companion Messaging
Enable BLE Companion Connections
Enable Drag And Drop Feature for iOS
Enable the New Siri appearance for iOS
Use Smart App Auto Selection
Use Smart App Selection for 1st Party Apps
Ignore EV Failures
Force Speex Audio Recording
Force Uncompressed Audio Recording
Acoustic ID Auto Endpoint
Vibrate with Siri Alert
Keep Recorded Audio Files
Beep Vibration Intensity
Disable plugin timeouts
com.apple.webinspectord.disabled
com.apple.webinspectord.enabled
Local CF development
Beep InterVibration Gap
Beep Vibration Duration
Number of Vibrations per Beep
Network Logging Enabled
Country Code
Borealis Education Header Display Count
Lower Wrist Education Message Display Count
AFSiriTaskResponseTimeout
AFSiriTaskBackgroundAssertionTimeout
Client Command Delivery Delay
Forced Interstitial Style
Interstitial Display Disabled Before Speech Recognition
Include Probe Packet Capture For ABC
%@ - %@
Initial Interstitial Delay
Initial Interstitial Delay for VoiceTrigger One-Shot without Audio Ducking
Ironwood Allowed
Assistant Allowed
forceAssistantProfanityFilter
allowAssistantUserGeneratedContent
Censor Speech
Notification Preview Restricted Apps
Last Pushed Censor Speech
Disable Dictation Mode
Audio Ducking Allowed
Opportune Speaking Module Enabled
Opportune Speaking Model Used
Show UI During Triggerless Listening
Play Alert Before Triggerless Listening
Spoken Notification Quick Ignore Time
Opportune Speaking Edge Detector Signal Override
Dictation Language Detector Enabled
Dictation Language Detector Enabled By Server
MultilingualDictationTimeout
Sync First Party App Intent Policy
Authentication Disabled
iRATManagerRecommendationEnabled
GLOBAL
Spoken Notifications Proximity Card Seen
Hard-coded BT Proximity
-[AFPreferences handsFreeMode]
-[AFPreferences setHandsFreeMode:]
-[AFPreferences respectsSystemMute]
-[AFPreferences setRespectsSystemMute:]
com.apple.avfoundation.avvc
navTokenQueue
-[AFPreferences _setAssistantIsEnabledLocal:]
-[AFPreferences _setDictationIsEnabledLocal:]
-[AFPreferences setAssistantIsEnabled:]
-[AFPreferences setDictationIsEnabled:]
-[AFPreferences _setOnDeviceDictationAvailableAlertPresentedLocal:]
-[AFPreferences setOnDeviceDictationAvailableAlertPresented:]
Force Offline Recognition Enabled
-[AFPreferences setForceOfflineRecognitionEnabled:]
Utterance Detection Enabled
-[AFPreferences setUtteranceDetectionEnabled:]
Prefer Online Recognition Enabled
-[AFPreferences setPreferOnlineRecognitionEnabled:]
Dictation SLS Languages Enabled
v16@?0@"NSDate"8
-[AFPreferences setSiriDataSharingOptInStatus:completion:]
Last Summary Report Date
Auto Dismissal Idle Timeout
Auto Dismissal Extended Idle Timeout
Auto Dismissal Max Attention Sampling Time
-[AFPreferences languageCode]
-[AFPreferences isCurrentLocaleNativelySupported]
-[AFPreferences isLocaleIdentifierNativelySupported:]
-[AFPreferences _languagePreferencesForCurrentSystemConfiguration]
-[AFPreferences _bestSupportedLanguageCodeForLanguageCode:isGoodFit:]
-[AFPreferences allSiriLanguageCodesForSystemLanguageCode:isGoodFit:]
<Sentinel> (not a special-cased language)
-[AFPreferences _bestSupportedLanguageCodeForLanguageCodes:isGoodFit:]
hi-IN
-[AFPreferences setLanguageCode:]
-[AFPreferences setInProgressOutputVoice:]
-[AFPreferences setLanguageCode:outputVoice:]
Navigation Status
AFPreferencesNavStatusDidChangeNotification
com.apple.siri.nav_status
v12@?0i8
AFPreferences.m
This SPI is not to be used with other keys
Flush Session Tickets Cache
%@.plist
com.apple.AppSupport.loggingDefaultsChanged
dump_input
debug_level
debug_state
debug_callbacks
debug_timing
debug_logtofile
Auto Dismissal 2018 Enabled
Dismiss When Face Attention is Lost
Dismiss When Device is Lowered
Hands-On Idle Time Interval (sec)
Hands-Off Idle Time Interval (sec)
%@Library/Managed Preferences/mobile/%@
pt-PT
hu-HU
pl-PL
el-GR
ca-ES
hr-HR
cs-CZ
id-ID
ro-RO
sk-SK
uk-UA
vi-VN
en-PH
es-CO
en-SA
en-AE
en-ID
wuu-CN
hi-Latn
zh-Hans-HK
zh-Hans-MO
en-MY
_AFPreferencesAlternativeLocaleLanguages
_ADSiriMiniAssetsAvailable
_AFPreferencesDidChangeCallback
_AFInternalPreferencesDidChangeCallback
_AFLanguageDidChangeCallback
_AFOutputVoiceDidChangeCallback
_AFNanoPreferencesDidChangeCallback
Dictation SLS Enabled
Enable Offline Dictation Override
Offline Dictation Profile Override Path
Show Server on UI
Debug Button Enabled
Indicate Hold-To-Talk Mode
Always Allow Voice Activation
Always Print Siri Response
Always Obscure Background Content When Active
Always Show Recognized Speech
Listen After Speaking Disabled
_AFAddCountryCodeToLanguageIdentifier
ar-AE
zh-Hans
zh-Hans-CN
zh-Hans-TW
zh-Hant-CN
zh-Hant-HK
zh-Hant-MO
zh-MO
zh-Hant-TW
zh-Hant-US
es_IC
es_EA
/Library/Preferences
Card Logging Enabled
NPSDomainAccessor
initNPSDomainAccessor_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFPreferences.m
classNPSDomainAccessor
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
NanoPreferencesSyncLibrary
NPSManager
initNPSManager_block_invoke
classNPSManager
ObjectCreatedResponseObjectIdentifier
eventType
eventData
turnID
event
-[AFMyriadRecord initWithAudioData:]
-[AFMyriadRecord initWithDeviceID:data:]
-[AFMyriadRecord setRawAudioGoodnessScore:withBump:]
-[AFMyriadRecord isSane]
FALSE
TRUE
MyriadRecord: hash=%#04x,good=%d,conf=%d,dc=%d,pt=%d,tb=%d,isMe=%@,g=%d,cc=%d
advertisementDataIsDirty
TB,N,V_advertisementDataIsDirty
rawAudioGoodnessScore
TC,N,V_rawAudioGoodnessScore
bump
TC,N,V_bump
goodness
TC,N,V_goodness
advertisementData
T@"NSData",C,N,V_advertisementData
userConfidence
TC,N,V_userConfidence
pHash
TS,N,V_pHash
T@"NSUUID",C,N,V_deviceID
deviceGroup
TC,N,V_deviceGroup
deviceClass
TC,N,V_deviceClass
productType
TC,N,V_productType
tieBreaker
TC,N,V_tieBreaker
isMe
TB,N,V_isMe
isCollectedFromContextCollector
TC,N,V_isCollectedFromContextCollector
activate
deactivate
deliver
notify
prewarm
assistantd
OpportuneSpeakingModelService
FeatureName
FeatureValue
T@"NSString",R,N,V_identifier
T@"NSDate",R,N,V_date
OSMDataCollection
-[AFOpportuneSpeakingModuleDataCollection _deleteSpeakablesOlderThan:]
_phrases
_utterances
@"SASPhrase"16@?0@"AFSpeechPhrase"8
@"SASInterpretation"16@?0@"AFSpeechInterpretation"8
@"SASToken"16@?0@"AFSpeechToken"8
@"SASUtterance"16@?0@"AFSpeechUtterance"8
phrases
utterances
T@"NSArray",R,C,N,V_phrases
T@"NSArray",R,C,N,V_utterances
%@ {audioSessionID = %u}
_audioSessionID
audioSessionID
TI,N,V_audioSessionID
<%@ %p: item=%@; %lu children=(
none)>
Cannot generate an index path relative to node %@, which isn't an ancestor
AFTreeNode.m
relativeIndexPath
B16@?0@"AFTreeNode"8
v24@?0@"AFTreeNode"8^B16
child != self
Attempt to create cycle
Cannot remove a child if we're not its parent
Cannot remove a child that we don't contain
v32@?0@8Q16^B24
parentNode
T@"AFTreeNode",W,N,S_setParentNode:,V_parentNode
childNodes
T@"NSMutableArray",R,N,G_childNodes,V_childNodes
item
T@,&,N,V_item
decisionDepth
decisionAge
Td,R,N
decisionThreshold
maxPersistenceDepth
maxPersistenceAge
AFSiriTaskContextProvider.m
-[AFSiriTaskContextProvider getAppContextWithDeliveryHandler:completionHandler:]
!response || [response isKindOfClass:[AFContextResponse class]]
-[AFSiriTaskContextProvider getAppContextWithDeliveryHandler:completionHandler:]_block_invoke
com.apple.assistant.conversation.ErrorDomain
Object %@ is not a kind of %@
Unable to create UUID for string "%@"
dictationStart
dictationFinish
dictationCancel
announceMessagesStart
homeAnnouncementRecordingStart
homeAnnouncementReceived
v16@?0@"AFTreeNode"8
B16@?0@"AFMutableConversationItem"8
v32@?0@"AFTreeNode"8q16^B24
-[AFConversation _processInsertions:inDialogPhase:]
v32@?0@"AFConversationInsertion"8Q16^B24
@24@?0@"AFConversationInsertion"8Q16
-[AFConversation _processInsertions:inDialogPhase:]_block_invoke_3
-[AFConversation _processInsertions:inDialogPhase:]_block_invoke
v32@?0@"SAAceView"8Q16^B24
@24@?0@"AceObject"8Q16
-[AFConversation addAdditionalSpeechInterpretation:refId:]
AFConversation.m
Cannot return an index path to an item that is not contained in the conversation
v24@?0@"AFMutableConversationItem"8^B16
LanguageCode
SynchronizedWithServer
RootNode
@16@?0@8
-[AFConversation initWithPropertyListRepresentation:]
rootNode
T@"AFTreeNode",&,N,G_rootNode,S_setRootNode:,V_rootNode
lastRestoredItem
T@"<AFConversationStorable>",&,N,S_setLastRestoredItem:,V_lastRestoredItem
T@"NSString",R,C,N,V_languageCode
synchronizedWithServer
TB,N,GisSynchronizedWithServer,V_synchronizedWithServer
T@"<AFConversationDelegate>",W,N,V_delegate
v20@?0r^v8I16
/dev/random
generation
contextData
contextFetchDelay
generation = %@
contextData = (%ld bytes)
contextFetchDelay = %@
AFMyriadAdvertisementContext::generation
AFMyriadAdvertisementContext::contextData
AFMyriadAdvertisementContext::contextFetchDelay
TQ,R,N,V_generation
T@"NSData",R,C,N,V_contextData
Td,R,N,V_contextFetchDelay
com.apple.assistant.myriad.delay_monitor
-[AFMyriadMonitor _enqueueBlock:forReason:]
-[AFMyriadMonitor _enqueueBlock:forReason:]_block_invoke
-[AFMyriadMonitor startMonitoringWithTimeoutInterval:]_block_invoke
-[AFMyriadMonitor ignoreMyriadEvents:]_block_invoke
Pending
Lost
com.apple.siri.myriad.decision.begin
com.apple.siri.myriad.decision.won
com.apple.siri.myriad.decision.lost
com.apple.siri.myriad.repost.decision.won
-[AFMyriadMonitor _registerForMyriadEvents]
-[AFMyriadMonitor _fetchCurrentMyriadDecisionWithWaitTime:]
-[AFMyriadMonitor _fetchCurrentMyriadDecisionWithWaitTime:]_block_invoke
com.apple.siri.myriad.get.decision
-[AFMyriadMonitor _deregisterFromMyriadEventNotifications]
-[AFMyriadMonitor _deregisterFromRepostedDecisionResultsObservers]
-[AFMyriadMonitor notifyObserver:didReceiveNotificationWithToken:]
-[AFMyriadMonitor notifyObserver:didChangeStateFrom:to:]
-[AFMyriadMonitor _setDecisionIsPending]
-[AFMyriadMonitor _setDecisionIsPending]_block_invoke
-[AFMyriadMonitor _dequeueBlocksWithSignal:]
-[AFMyriadMonitor _clear]
-[AFMyriadMonitor _resultSeenWithValue:]
none
beep
haptic
siri_vox_sounds_experiment
playsTwoShotSound
playsSessionInactiveSound
playsTwoShotSoundForSiriVOXSounds
playsSessionInactiveSoundForSiriVOXSounds
experimentForSiriVOXSounds
T@"AFExperiment<AFExperimentForSiriVOXSounds>",R,N
accessibilityState
deviceRingerSwitchState
isDeviceInSetupFlow
isDeviceInCarDNDMode
isDeviceInStarkMode
outputVolume
tapToSiriAudioPlaybackRequest
twoShotAudioPlaybackRequest
accessibilityState = %@
deviceRingerSwitchState = %ld (%@)
isDeviceInSetupFlow = %@
isDeviceInCarDNDMode = %@
isDeviceInStarkMode = %@
outputVolume = %@
tapToSiriAudioPlaybackRequest = %@
twoShotAudioPlaybackRequest = %@
AFClientConfiguration::accessibilityState
AFClientConfiguration::deviceRingerSwitchState
AFClientConfiguration::isDeviceInSetupFlow
AFClientConfiguration::isDeviceInCarDNDMode
AFClientConfiguration::isDeviceInStarkMode
AFClientConfiguration::outputVolume
AFClientConfiguration::tapToSiriAudioPlaybackRequest
AFClientConfiguration::twoShotAudioPlaybackRequest
T@"AFAccessibilityState",R,C,N,V_accessibilityState
Tq,R,N,V_deviceRingerSwitchState
TB,R,N,V_isDeviceInSetupFlow
TB,R,N,V_isDeviceInCarDNDMode
TB,R,N,V_isDeviceInStarkMode
Tf,R,N,V_outputVolume
T@"AFAudioPlaybackRequest",R,C,N,V_tapToSiriAudioPlaybackRequest
T@"AFAudioPlaybackRequest",R,C,N,V_twoShotAudioPlaybackRequest
unknown
near
immediate
primary
/usr/lib/libAXSpeechManager.dylib
+[AFSpeakableUtteranceParser parseUserGeneratedMessage:]_block_invoke
AXSpeechTransformText
+[AFSpeakableUtteranceParser parseUserGeneratedMessage:]
ERROR parsing remainder: %@
-[AFSpeakableUtteranceParser _handleControlCodeAtIndex:withBuffer:totalLength:consumedLength:hadEmpties:containsPrivacySensitiveContents:externalProviders:]
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFSpeakableUtteranceParser.m
consumed && "Need to provide a consumer."
handleTTSCodes
TB,N
handlesFunctions
%@ {name = %@}
T@"NSString",R,C,N,V_name
firstName
lastName
fullName
nickName
internalGUID
relationName
@{fn#firstName}
@{fn#middleName}
@{fn#lastName}
@{fn#fullName}
@{fn#nickName}
@{fn#internalGUID}
@{fn#relationName}
jjmma
hhmma
HHmm
eeee
com.apple.weather
Celsius
-[AFSUPFunctionProvider _tempInWeatherUnits:]
-[AFSUPFunctionProvider _lowercaseString:]
-[AFSUPFunctionProvider _meCard]_block_invoke
v24@?0@"SAPerson"8@"NSError"16
-[AFSUPFunctionProvider _meCard]
a meCard
(null)
-[AFSUPFunctionProvider _siriUsageDescription:]
-[AFSUPFunctionProvider _speechRecognitionUsageDescription:]
-[AFSUPFunctionProvider _contextRoomName:]
-[AFSUPFunctionProvider _contextDeviceName:]
v16@?0@"AFPeerInfo"8
-[AFSUPFunctionProvider _peerInfoForContextIdentifier:]
currentTime
currentTimeIn
currentDateShort
currentDateShortIn
currentDateLong
currentDateLongIn
currentDayOfWeek
currentDayOfWeekIn
tempInWeatherUnits
deviceModel
lowercase
siriUsageDescription
speechRecognitionUsageDescription
contextRoomName
contextDeviceName
-[AFSUPFunctionProvider _callFunction:withArguments:]
Dictation
-[AFDictationConnection init]
-[AFDictationConnection dealloc]
-[AFDictationConnection _checkAndSetIsCapturingSpeech:]
Trying to start speech capture while we are already capturing. This is a client app logic error, cancelling dictation
v16@?0@"<AFDictationDelegate>"8
-[AFDictationConnection _tellSpeechDelegateRecordingDidBeginWithOptions:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizePackage:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizeSpeechPhrases:utterances:languageModel:correctionIdentifier:audioAnalytics:]
-[AFDictationConnection _delegateDidRecognizeSpeechTokens:languageModel:delegate:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizePartialResult:]_block_invoke
tokensCount
languageModel
@"NSDictionary"8@?0
-[AFDictationConnection _tellSpeechDelegateDidRecognizeSpeechTokens:languageModel:]
-[AFDictationConnection _tellSpeechDelegateDidRecognizeTranscriptionObjects:languageModel:]
-[AFDictationConnection _tellSpeechDelegateRecognitionDidFail:]
-[AFDictationConnection _tellSpeechDelegateSpeechRecognitionDidSucceed]
-[AFDictationConnection _tellSpeechDelegateSearchResultsReceived:recognitionText:stable:final:]
-[AFDictationConnection _tellSpeechDelegateLanguageDetected:confidenceScores:isConfident:]
-[AFDictationConnection _tellSpeechDelegateMultilingualSpeechRecognized:]
-[AFDictationConnection _tellSpeechDelegateLanguageDetectorDidFail:]
-[AFDictationConnection _tellSpeechDelegateDidBeginLocalRecognitionWithModelInfo:]
-[AFDictationConnection _connectionClearedForInterruption:]
Please file radar
Sorry internal user, assistantd crashed during dictation
AFDictationConnection.connection
-[AFDictationConnection _startInputAudioPowerUpdatesWithXPCWrapper:]
-[AFDictationConnection _stopInputAudioPowerUpdates]
-[AFDictationConnection dictationIsAvailableForLanguage:synchronous:]
-[AFDictationConnection forcedOfflineDictationIsAvailableForLanguage:synchronous:]
-[AFDictationConnection forcedOfflineDictationIsAvailableForLanguage:synchronous:]_block_invoke
+[AFDictationConnection getForcedOfflineDictationSupportedLanguagesWithCompletion:]_block_invoke
-[AFDictationConnection _willStartDictationWithLanguageCode:options:speechOptions:machAbsoluteTime:]
isOnDeviceDictationExpected
canceled
failure
noMatch
interrupted
requestStatus
dictationUIInteractionIdentifier
-[AFDictationConnection _willCancelDictation]
-[AFDictationConnection _willFailDictationWithError:]
-[AFDictationConnection _willCompleteDictation]
-[AFDictationConnection _sendPendingAnalyticsEvents]
+[AFDictationConnection dictationIsSupportedForLanguageCode:error:]
-[AFDictationConnection preheatWithRecordDeviceIdentifier:]
-[AFDictationConnection _setActivationTimeOnOptionsIfNecessary:]
-[AFDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:]
-[AFDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:]_block_invoke_2
-[AFDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:]_block_invoke
v16@?0d8
v16@?0@"NSXPCListenerEndpoint"8
-[AFDictationConnection startDictationWithLanguageCode:options:speechOptions:]
-[AFDictationConnection startDictationWithLanguageCode:options:speechOptions:]_block_invoke_2
-[AFDictationConnection startRecordedAudioDictationWithOptions:forLanguage:narrowband:forceSampling:]
-[AFDictationConnection startRecordedAudioDictationWithOptions:forLanguage:narrowband:forceSampling:]_block_invoke_2
-[AFDictationConnection cancelSpeech]
-[AFDictationConnection stopSpeechWithOptions:]
-[AFDictationConnection stopSpeechWithOptions:]_block_invoke
-[AFDictationConnection _delayedStopSpeechWithOptions:]
-[AFDictationConnection updateSpeechOptions:]
-[AFDictationConnection sendUserSelectedAlternativeDictationLanguageCode:]
-[AFDictationConnection endSession]
-[AFDictationConnection _sendDataIfNeeded]
-[AFDictationConnection _updateBufferFlushTimerWithDelay:]
T@"<AFDictationDelegate>",W,N,V_delegate
delegateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
-[AFDictationConnection(Private) preheatTestWithLanguage:options:]
speechRecognitionSource
local
sessionID
sessionRequestUUID
dictationOptInStatus
phrasesCount
correctionContext
transcribedObjectsCount
SanitizeAFSpeechRequestOptions
Results
results
T@"NSArray",C,N,V_results
-[AFSiriActivationHandlerAssistantDaemon handleContext:completion:]
-[AFSiriActivationHandlerAssistantDaemon handleContext:completion:]_block_invoke
inactive
active
address
deviceUID
vendorID
productID
isAdvancedAppleAudioDevice
supportsInEarDetection
supportsVoiceTrigger
supportsSpokenNotification
supportsListeningModeANC
supportsListeningModeTransparency
address = %@
deviceUID = %@
vendorID = %@
productID = %@
isAdvancedAppleAudioDevice = %@
supportsInEarDetection = %@
supportsVoiceTrigger = %@
supportsSpokenNotification = %@
supportsListeningModeANC = %@
supportsListeningModeTransparency = %@
AFBluetoothDeviceInfo::address
AFBluetoothDeviceInfo::deviceUID
AFBluetoothDeviceInfo::vendorID
AFBluetoothDeviceInfo::productID
AFBluetoothDeviceInfo::isAdvancedAppleAudioDevice
AFBluetoothDeviceInfo::supportsInEarDetection
AFBluetoothDeviceInfo::supportsVoiceTrigger
AFBluetoothDeviceInfo::supportsSpokenNotification
AFBluetoothDeviceInfo::supportsListeningModeANC
AFBluetoothDeviceInfo::supportsListeningModeTransparency
T@"NSString",R,C,N,V_address
T@"NSUUID",R,C,N,V_deviceUID
TI,R,N,V_vendorID
TI,R,N,V_productID
TB,R,N,V_isAdvancedAppleAudioDevice
TB,R,N,V_supportsInEarDetection
TB,R,N,V_supportsVoiceTrigger
TB,R,N,V_supportsSpokenNotification
TB,R,N,V_supportsListeningModeANC
TB,R,N,V_supportsListeningModeTransparency
OriginatingAceIDKeyIdentifier
AFSiriTaskUsageResult.m
_resultDescription must be overridden in subclasses.
: %p;
 originatingAceID=
X-Dev-ConfigOverride-
assistant.service.sms.nativeExecutor.enabled
assistant.service.hal.enabled
assistant.service.location-search.continuity.enabled
assistant.service.announce.enabled
true
%@assistant.service.%@.%@.enabled
JMjIql4w2ryl8XrRuebT
%@%@
com.apple.assistant.features
+[AFFeatureFlags dump]
false
Siri
HMFeatureDomain
initHMFeatureDomain_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.31.2/AFFeatureFlags.m
/System/Library/Frameworks/HomeKit.framework/HomeKit
None
+IDS
+Rapport
+Bluetooth
+Wifi
+Cloud
State
Value
Tq,N,V_state
T@"NSNumber",C,N,V_value
startingAlertBehavior
stoppedAlertBehavior
stoppedWithErrorAlertBehavior
startingAlertBehavior = %@
stoppedAlertBehavior = %@
stoppedWithErrorAlertBehavior = %@
AFSpeechRecordingAlertPolicy::startingAlertBehavior
AFSpeechRecordingAlertPolicy::stoppedAlertBehavior
AFSpeechRecordingAlertPolicy::stoppedWithErrorAlertBehavior
T@"AFSpeechRecordingAlertBehavior",R,C,N,V_startingAlertBehavior
T@"AFSpeechRecordingAlertBehavior",R,C,N,V_stoppedAlertBehavior
T@"AFSpeechRecordingAlertBehavior",R,C,N,V_stoppedWithErrorAlertBehavior
includeAlarm
includeTimer
includeHeardVoiceTrigger
includePlaybackState
includeMyriadAdvertisement
multiUserState
includeHomeAnnouncement
excludeDeviceInfo
excludeIdentifier
excludePrivacyClass
configurationIdentifier
configurationVersion
deploymentGroupIdentifier
deploymentGroupProperties
deploymentReason
configurationIdentifier = %@
configurationVersion = %@
deploymentGroupIdentifier = %@
deploymentGroupProperties = %@
deploymentReason = %ld (%@)
AFExperiment::configurationIdentifier
AFExperiment::configurationVersion
AFExperiment::deploymentGroupIdentifier
AFExperiment::deploymentGroupProperties
AFExperiment::deploymentReason
T@"NSString",R,C,N,V_configurationIdentifier
T@"NSString",R,C,N,V_configurationVersion
T@"NSString",R,C,N,V_deploymentGroupIdentifier
T@"NSDictionary",R,C,N,V_deploymentGroupProperties
Tq,R,N,V_deploymentReason
uuid: %@, timestamp: %llu, turnId: %@, options: %lu, notifyState: %@ text: %@ directAction: %@ handoffOriginDeviceName: %@ handOffData: %@ handoffURL: %@ handoffRequiresUserInteraction ? %d handoffNotification %@ correctedSpeech: %@ startRequest: %@ activationEvent: %@ speechRequestOptions: %@ requestCompletionOptions: %@ sharedUserID: %@ confidenceScore: %lu nonspeakerConfidenceScores: %@
_uuid
_timestamp
_turnIdentifier
_options
_notifyState
_text
_legacyDirectActionIdentifier
_handoffOriginDeviceName
_handoffRequestData
_handoffURLString
_handoffRequiresUserInteraction
_handoffNotification
_correctedSpeech
_correctedSpeechContext
_startRequest
_startLocalRequest
_directActionAppId
_directActionEvent
_activationEvent
_speechRequestOptions
_requestCompletionOptions
_expectedSpeakerSharedUserID
_expectedSpeakerConfidenceScore
_nonspeakerConfidenceScores
uuid
T@"NSUUID",R,N,V_uuid
options
TQ,N,V_options
notifyState
T@"NSNumber",C,N,V_notifyState
legacyDirectActionIdentifier
T@"NSString",C,N,V_legacyDirectActionIdentifier
handoffOriginDeviceName
T@"NSString",C,N,V_handoffOriginDeviceName
handoffRequestData
T@"NSData",C,N,V_handoffRequestData
handoffURLString
T@"NSString",C,N,V_handoffURLString
handoffRequiresUserInteraction
TB,N,V_handoffRequiresUserInteraction
handoffNotification
T@"NSString",C,N,V_handoffNotification
correctedSpeech
T@"NSString",C,N,V_correctedSpeech
correctedSpeechContext
T@"NSDictionary",C,N,V_correctedSpeechContext
startRequest
T@"SAStartRequest",C,N,V_startRequest
startLocalRequest
T@"SAStartLocalRequest",C,N,V_startLocalRequest
directActionAppId
T@"NSString",C,N,V_directActionAppId
directActionEvent
Tq,N,V_directActionEvent
activationEvent
Tq,N,V_activationEvent
speechRequestOptions
T@"AFSpeechRequestOptions",C,N,V_speechRequestOptions
requestCompletionOptions
T@"AFRequestCompletionOptions",C,N,V_requestCompletionOptions
expectedSpeakerSharedUserID
T@"NSString",C,N,V_expectedSpeakerSharedUserID
expectedSpeakerConfidenceScore
TQ,N,V_expectedSpeakerConfidenceScore
nonspeakerConfidenceScores
T@"NSDictionary",C,N,V_nonspeakerConfidenceScores
turnIdentifier
T@"NSUUID",C,N,V_turnIdentifier
_alarmIdentifiers
alarmIdentifiers
T@"NSArray",C,N,V_alarmIdentifiers
-[AFClockItemStorage beginGrouping]
-[AFClockItemStorage endGroupingWithOptions:]
-[AFClockItemStorage insertOrUpdateItems:]
-[AFClockItemStorage deleteItemsWithIDs:]
-[AFClockItemStorage deleteAllItems]
TQ,N,V_generation
T@"NSDate",C,N,V_date
itemsByID
T@"NSDictionary",C,N,V_itemsByID
%@ (%@) (id = %@, deviceInfo = %@, fromLocalDevice = %d, alarm = %@, timer = %@, playbackState = %@, homeAnnouncement = %@, heardVoiceTrigger = %d, myriad advertisement context length = %lu, multiuser state = %@)
alarmSnapshot
T@"AFClockAlarmSnapshot",R,N
alarmSnapshotMetadata
T@"AFDeviceContextMetadata",R,N
timerSnapshot
T@"AFClockTimerSnapshot",R,N
timerSnapshotMetadata
playbackStateSnapshot
T@"AFMediaPlaybackStateSnapshot",R,N
playbackStateMetadata
homeAnnouncementSnapshot
T@"AFHomeAnnouncementSnapshot",R,N
homeAnnouncementSnapshotMetadata
heardVoiceTrigger
heardVoiceTriggerMetadata
myriadAdvertisementContext
T@"NSData",R,N
multiUserStateSnapshot
T@"AFMultiUserStateSnapshot",R,N
multiUserStateMetadata
locationSnapshot
T@"AFLocationSnapshot",R,N
locationMetadata
com.apple.siri.client_lite
-[AFClientLiteInternal initAndHandleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:]
-[AFClientLiteInternal dealloc]
-[AFClientLiteInternal _handleCommand:afterCurrentRequest:isOneWay:completion:]
-[AFClientLiteInternal _handleCommand:afterCurrentRequest:isOneWay:completion:]_block_invoke_2
-[AFClientLiteInternal _handleCommand:afterCurrentRequest:isOneWay:completion:]_block_invoke
v20@?0B8@"NSError"12
-[AFClientLiteInternal handleCommand:completion:]_block_invoke
-[AFClientLite init]
-[AFClientLite dealloc]
-[AFClientLite _handleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:]
-[AFClientLite handleCommand:afterCurrentRequest:commandHandler:completion:]
-[AFClientLite handleOneWayCommand:commandHandler:completion:]
client#interstitialInitial
client#interstitialFollowUpOne
client#interstitialFollowUpTwo
client#interstitialFinal
AFMediaRemoteDeviceInfoRouteIdentifierDidChangeNotification
AFMediaRemoteDeviceInfoGroupIdentifierDidChangeNotification
com.apple.assistant.MediaRemoteDeviceInfo
-[AFMediaRemoteDeviceInfo _activeDeviceInfoChanged:]
-[AFMediaRemoteDeviceInfo _updateDeviceInfoWithCompletion:]
-[AFMediaRemoteDeviceInfo _updateDeviceInfoWithCompletion:]_block_invoke
v24@?0^v8^{__CFError=}16
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
lastFetchSucceeded
TB,N,V_lastFetchSucceeded
routeIdentifier
T@"NSString",C,N,V_routeIdentifier
Message
Frontmost
AFLocalization
Localizable
strings
^%@-*\w*\.strings$
LONG_
SiriLanguages
COMPACT_
VOICE_
VOICE_GENDER_UNSPECIFIED
VOICE_GENDER_MALE
VOICE_GENDER_FEMALE
AssistantVoiceDialects
-[AFLocalization loadInfoForVoicesWithLanguageCode:]
+[AFVoiceInfo(AFLocalizationAdditions) allVoicesForSiriSessionLanguage:]
VoiceMail
FaceTime
_applicationName
_applicationDisplayName
_applicationVersion
_context
_fieldLabel
_fieldIdentifier
_interactionIdentifier
_requestIdentifier
_keyboardType
_prefixText
_postfixText
_selectedText
_returnKeyType
_languageCodeOverride
_offlineLanguage
_transcriptionMode
_microphoneIdentifier
_inlineItemList
_voiceSearchTypeOptions
_voiceSearchHeaderFields
_voiceSearchQueryParameters
_voiceTriggerEventInfo
_keyboardIdentifier
_forceOfflineRecognition
_preferOnlineRecognition
_detectUtterances
_secureOfflineOnly
_farField
_releaseAudioSessionOnRecordingCompletion
_incremental
_maximumRecognitionDuration
_taskHint
_originalAudioFileURL
_recognitionOverrides
_modelOverrideURL
_languageDetectionUserContext
_dictationInputOrigin
_samplingInfo
applicationName
T@"NSString",C,N,V_applicationName
applicationDisplayName
T@"NSString",C,N,V_applicationDisplayName
applicationVersion
T@"NSString",C,N,V_applicationVersion
context
T@"STSiriContext",&,N,V_context
fieldLabel
T@"NSString",C,N,V_fieldLabel
fieldIdentifier
T@"NSString",C,N,V_fieldIdentifier
interactionIdentifier
T@"NSString",C,N,V_interactionIdentifier
requestIdentifier
T@"NSString",C,N,V_requestIdentifier
keyboardType
Tq,N,V_keyboardType
prefixText
T@"NSString",C,N,V_prefixText
postfixText
T@"NSString",C,N,V_postfixText
selectedText
T@"NSString",C,N,V_selectedText
returnKeyType
Tq,N,V_returnKeyType
transcriptionMode
Tq,N,V_transcriptionMode
inlineItemList
T@"NSArray",C,N,V_inlineItemList
microphoneIdentifier
T@"NSString",C,N,V_microphoneIdentifier
T@"NSString",C,N,V_orthography
keyboardIdentifier
T@"NSString",C,N,V_keyboardIdentifier
languageCodeOverride
T@"NSString",C,N,V_languageCodeOverride
offlineLanguage
T@"NSString",C,N,V_offlineLanguage
voiceSearchTypeOptions
Tq,N,V_voiceSearchTypeOptions
voiceSearchHeaderFields
T@"NSDictionary",C,N,V_voiceSearchHeaderFields
voiceSearchQueryParameters
T@"NSDictionary",C,N,V_voiceSearchQueryParameters
voiceTriggerEventInfo
T@"NSDictionary",C,N,V_voiceTriggerEventInfo
forceOfflineRecognition
TB,N,V_forceOfflineRecognition
preferOnlineRecognition
TB,N,V_preferOnlineRecognition
detectUtterances
TB,N,V_detectUtterances
secureOfflineOnly
TB,N,V_secureOfflineOnly
farField
TB,N,V_farField
releaseAudioSessionOnRecordingCompletion
TB,N,V_releaseAudioSessionOnRecordingCompletion
incremental
TB,N,V_incremental
maximumRecognitionDuration
Td,N,V_maximumRecognitionDuration
taskHint
Tq,N,V_taskHint
originalAudioFileURL
T@"NSURL",C,N,V_originalAudioFileURL
recognitionOverrides
T@"NSDictionary",C,N,V_recognitionOverrides
modelOverrideURL
T@"NSURL",C,N,V_modelOverrideURL
languageDetectionUserContext
T@"AFLanguageDetectionUserContext",C,N,V_languageDetectionUserContext
Tq,N,V_dictationInputOrigin
samplingInfo
T@"NSString",C,N,V_samplingInfo
imageData
T@"NSData",&,N,V_imageData
scale
Td,N,V_scale
-[AFDataStore imageDataForKey:]
Entries
v32@?0@"NSString"8@"_AFDataStoreEntry"16^B24
-[AFDataStore initWithPropertyListRepresentation:]
Image
Scale
PNGData
-[_AFDataStoreEntry initWithPropertyListRepresentation:error:]
Unable to decode value for data store entry %@
T@,R,N,V_value
isEnabled
primaryEarbudSide
primaryInEarStatus
secondaryInEarStatus
isEnabled = %@
primaryEarbudSide = %ld (%@)
primaryInEarStatus = %ld (%@)
secondaryInEarStatus = %ld (%@)
AFBluetoothHeadphoneInEarDetectionState::isEnabled
AFBluetoothHeadphoneInEarDetectionState::primaryEarbudSide
AFBluetoothHeadphoneInEarDetectionState::primaryInEarStatus
AFBluetoothHeadphoneInEarDetectionState::secondaryInEarStatus
TB,R,N,V_isEnabled
Tq,R,N,V_primaryEarbudSide
Tq,R,N,V_primaryInEarStatus
Tq,R,N,V_secondaryInEarStatus
-[AFAudioAnalyzer _configureWithSampleRate:andFrameRate:]
kAUEndpointVAD2Property_EDLStartWaitTimeSec
kAUEndpointVAD2Property_EDLInterspeechWaitTimeSec
kAUEndpointVAD2Property_EDLSpeechStartAdjustSec
kAUEndpointVAD2Property_EDLSpeechEndAdjustSec
kAUEndpointVAD2Property_EDLWindowLengthSeconds
kAUEndpointVAD2Property_EDLSpeechFraction
kAUEndpointVAD2Property_EDLNonspeechFraction
kAUEndpointVAD2Property_IsRealtimeOperationMode
kAUEndpointVAD2Property_DecoderLatencySeconds
kAudioUnitProperty_MaximumFramesPerSlice
-[AFAudioAnalyzer _detectVoiceActivityInSamples:numSamples:]
-[AFAudioAnalyzer getStatus:]_block_invoke
-[AFAudioAnalyzer reset]
-[AFAudioAnalyzer reset]_block_invoke
endpointMode
startWaitTime
interspeechWaitTime
endWaitTime
Tq,N,V_style
delay
Td,N,V_delay
lastStartOfVoiceActivityTime
lastEndOfVoiceActivityTime
automaticEndpointingSuspensionEndTime
Td,N,V_automaticEndpointingSuspensionEndTime
minimumDurationForEndpointer
Td,N,V_minimumDurationForEndpointer
T@"<AFAudioAnalyzerDelegate>",W,N,V_delegate
Ti,V_endpointMode
Td,V_startWaitTime
Td,V_interspeechWaitTime
Td,V_endWaitTime
Library/Audio/Tunings/Generic/AU/
aufx-epv2-bluetooth8khz-appl.plist
aufx-epv2-appl.plist
EndpointerSpeechBeginListener
EndpointerSpeechEndListener
RecurrentVADSpeechBeginListener
RecurrentVADSpeechEndListener
AFConversationStore
-[AFConversationStore saveConversation:withIdentifier:completionBlock:]_block_invoke
Unable to decode conversation from property list
conversationsByIdentifier
T@"NSMutableDictionary",R,N,G_conversationsByIdentifier,V_conversationsByIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
metadata
deviceInfo
privacyClass
contexts
metadata_type
metadata_timestamp
metadata_expirationDate
metadata_redactedKeyPaths
serializedBackingStore
fromLocalDevice
contextCollectorSource
TB,R,N,V_fromLocalDevice
T@"NSString",R,N,V_contextCollectorSource
T@"NSUUID",R,N,V_identifier
T@"AFPeerInfo",R,N,V_deviceInfo
Tq,R,N,V_privacyClass
T@"NSString",R,N,V_type
deliveryDate
T@"NSDate",R,N,V_deliveryDate
expirationDate
T@"NSDate",R,N,V_expirationDate
redactedKeyPaths
T@"NSArray",R,N,V_redactedKeyPaths
alternativeSelectionCount
characterModificationCount
characterInsertionCount
characterSubstitutionCount
characterDeletionCount
correctedText
Tq,N,V_alternativeSelectionCount
Tq,N,V_characterModificationCount
Tq,N,V_characterInsertionCount
Tq,N,V_characterSubstitutionCount
Tq,N,V_characterDeletionCount
T@"NSString",C,N,V_correctedText
AFMemoryInfoGetCurrent
reason
userInfo
parentContext
reason = %@
userInfo = %@
parentContext = %@
AFAssertionContext::timestamp
AFAssertionContext::reason
AFAssertionContext::userInfo
AFAssertionContext::parentContext
T@"NSString",R,C,N,V_reason
T@"NSDictionary",R,C,N,V_userInfo
T@"AFAssertionContext",R,C,N,V_parentContext
intentRequestId
stream_uid
delivery_stream
context_data
context_data_type
date_created
_event
_streamUID
_dateCreated
T@"AFAnalyticsEvent",R,C,N,V_event
streamUID
T@"NSString",R,C,N,V_streamUID
dateCreated
T@"NSDate",R,C,N,V_dateCreated
@"NSDictionary"16@?0@"NSString"8
com.apple.assistant.memory-pressure-observer
-[AFMemoryPressureObserver _startObservingMemoryPressureWithOptions:]
-[AFMemoryPressureObserver _stopObservingMemoryPressure]
-[AFMemoryPressureObserver _handleMemoryPressureWithFlags:]
processName
memoryPressureChange
normal
warning
critical
_showUIDuringListening
_playAlertBeforeListening
showUIBeforeListening: %@, playAlertBeforeListening: %@
showUIDuringListening
TB,N,V_showUIDuringListening
playAlertBeforeListening
TB,N,V_playAlertBeforeListening
showUIBeforeListening
beepBeforeListening
endpointDelay
Td,R,N,V_endpointDelay
AFApplicationWorkspaceEnumerateInstalledApplications
AFApplicationWorkspaceEnumerateInstalledApplications_block_invoke
Internal
System
hidden
v24@?0@"LSBundleProxy"8^B16
LSApplicationProxy
initLSApplicationProxy_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFApplicationWorkspaceUtils.m
classLSApplicationProxy
/System/Library/Frameworks/CoreServices.framework/CoreServices
CoreServicesLibrary
LSApplicationWorkspace
initLSApplicationWorkspace_block_invoke
classLSApplicationWorkspace
AFNetworkAvailability
AFDeviceContextPrivacyClassUnknown
AFDeviceContextPrivacyClassUsedByLocalUser
AFDeviceContextPrivacyClassSharedWithHome
left
right
AFFetchContextsKeyPlaybackStates
alarm
homeAnnouncement
location
kAFAccountInfoIdentifierKey
kAFAccountInfoLabelKey
kAFAccountInfoAssistantIdentifierKey
kAFAccountInfoLoggingAssistantIdentifierKey
kAFAccountInfoSpeechIdentifierKey
kAFAccountInfoHostnameKey
kAFAccountInfoPeerAssistantIdentifierKey
kAFAccountInfoPeerLoggingAssistantIdentifierKey
kAFAccountInfoPeerSpeechIdentifierKey
kAFAccountInfoPeerUserAgentStringKey
kAFAccountInfoPeerLanguageCodeKey
kAFAccountInfoPeerSiriEnabledKey
kAFAccountInfoPeerHostnameKey
kAFAccountInfoPredefinedServerKey
kAFAccountInfoAceHostKey
kAFAccountInfoConnectionPolicyKey
kAFAccountInfoConnectionPolicyDateKey
kAFAccountInfoConnectionPolicyHostnameKey
kAFAccountInfoGroupKey
kAFAccountInfoIsActiveKey
kAFAccountInfoLocaleIdentifierKey
kAFAccountInfoNeedsDestructionKey
kAFAccountConnectionPolicyFirstFailureDate
: %@ { Assistant: %@, Host: %@, Ace Host: %@, Group: %@ }
_identifier
_label
_assistantIdentifier
_loggingAssistantIdentifier
_speechIdentifier
_hostname
_peerAssistantIdentifier
_peerLoggingAssistantIdentifier
_peerSpeechIdentifier
_peerUserAgentString
_predefinedServer
_aceHost
_connectionPolicy
_connectionPolicyDate
_connectionPolicyHostname
_connectionPolicyFirstFailureDate
_group
_lastSyncDates
_localeIdentifier
_isActive
T@"NSString",C,N,V_identifier
lastSyncDates
T@"NSDictionary",C,N,V_lastSyncDates
localeIdentifier
T@"NSString",C,N,V_localeIdentifier
isActive
TB,N,V_isActive
label
T@"NSString",C,N,V_label
assistantIdentifier
T@"NSString",C,N,V_assistantIdentifier
loggingAssistantIdentifier
T@"NSString",C,N,V_loggingAssistantIdentifier
speechIdentifier
T@"NSString",C,N,V_speechIdentifier
hostname
T@"NSString",C,N,V_hostname
peerAssistantIdentifier
T@"NSString",C,N,V_peerAssistantIdentifier
peerLoggingAssistantIdentifier
T@"NSString",C,N,V_peerLoggingAssistantIdentifier
peerSpeechIdentifier
T@"NSString",C,N,V_peerSpeechIdentifier
peerUserAgentString
T@"NSString",C,N,V_peerUserAgentString
peerLanguageCode
T@"NSString",C,N,V_peerLanguageCode
peerSiriEnabled
TB,N,V_peerSiriEnabled
peerHostname
T@"NSString",C,N,V_peerHostname
predefinedServer
T@"NSString",C,N,V_predefinedServer
aceHost
T@"NSString",C,N,V_aceHost
connectionPolicy
T@"NSDictionary",C,N,V_connectionPolicy
connectionPolicyDate
T@"NSDate",C,N,V_connectionPolicyDate
connectionPolicyHostname
T@"NSString",C,N,V_connectionPolicyHostname
group
T@"NSString",C,N,V_group
connectionPolicyFirstFailureDate
T@"NSDate",C,N,V_connectionPolicyFirstFailureDate
keepUISessionAlive
keepAudioSessionAlive
manual
assisted
singleResult
selection
af_disambiguationIdentifier
af_disambiguationInfo
T@"AFDisambiguationInfo",&,N,Saf_setDisambiguationInfo:
%lu.%@
q24@?0@"SAUIListItem"8@"SAUIListItem"16
DisambiguationInfoKey
q24@?0@8@16
_af_SaveItemSelection
-[AFManagedStorageConnection domainObjectForKey:]_block_invoke
-[AFManagedStorageConnection dataForKey:inKnowledgeStoreWithName:]
-[AFManagedStorageConnection dataForKey:inKnowledgeStoreWithName:]_block_invoke
v16@?0@"NSData"8
-[AFManagedStorageConnection setData:forKey:inKnowledgeStoreWithName:]
-[AFManagedStorageConnection setData:forKey:inKnowledgeStoreWithName:]_block_invoke
-[AFManagedStorageConnection resetKnowledgeStoreWithName:]
-[AFManagedStorageConnection resetKnowledgeStoreWithName:]_block_invoke
AlarmIdentifier
alarmIdentifier
T@"NSString",C,N,V_alarmIdentifier
TimerURLs
timerURLs
T@"NSArray",C,N,V_timerURLs
AFPersistentConnection
-[AFRemoteRequestWatcher _setupRequestListener]
v24@?0@"AFRequestInfo"8@?<v@?@"NSError">16
-[AFRemoteRequestWatcher _setupSpeechRequestListener]
-[AFRemoteRequestWatcher _setupSpeechRequestListener]_block_invoke
v16@?0@8
Neutral
Positive
Negative
_lastNegativeFeedback
_negativeFeedbackByContact
lastNegativeFeedback
T@"NSDate",&,N,V_lastNegativeFeedback
negativeFeedbackByContact
T@"NSDictionary",&,N,V_negativeFeedbackByContact
-[AFOpportuneSpeakingModelFeedbackManager init]
-[AFOpportuneSpeakingModelFeedbackManager lastNegativeFeedbackForContact:]
-[AFOpportuneSpeakingModelFeedbackManager setLastNegativeFeedbackForContact:]
-[AFOpportuneSpeakingModelFeedbackManager fetchNotificationUsageForSpeakableId:withStartDate:withEndDate:withHandler:]
startDate
EventType
StartDate
EndDate
TimeZone
Confidence
IndirectClear
-[AFOpportuneSpeakingModelFeedbackManager loadIfNecessary]
-[AFOpportuneSpeakingModelFeedbackManager save]
init_DKKnowledgeStore_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFOpportuneSpeakingModelFeedback.m
class_DKKnowledgeStore
CoreDuetLibrary
init_DKSystemEventStreams_block_invoke
class_DKSystemEventStreams
init_DKQuery_block_invoke
class_DKQuery
init_DKEventQuery_block_invoke
class_DKEventQuery
_DKNotificationUsageMetadataKey
init_DKNotificationUsageMetadataKey_block_invoke
class_DKNotificationUsageMetadataKey
com.apple.siri.opportune_speaking.feedback.plist
currentElectionAdvertisementId
currentElectionAdvertisementData
electionAdvertisementDataByIds
sessionId = %@
currentElectionAdvertisementId = %@
currentElectionAdvertisementData = (%ld bytes)
electionAdvertisementDataByIds = %@
AFMyriadSession::generation
AFMyriadSession::sessionId
AFMyriadSession::currentElectionAdvertisementId
AFMyriadSession::currentElectionAdvertisementData
AFMyriadSession::electionAdvertisementDataByIds
T@"NSUUID",R,C,N,V_sessionId
T@"NSUUID",R,C,N,V_currentElectionAdvertisementId
T@"NSData",R,C,N,V_currentElectionAdvertisementData
T@"NSDictionary",R,C,N,V_electionAdvertisementDataByIds
ShowSiri
ShowSnippet
ShowCardSnippet
ShowUtterance
ScrollTranscript
EditTranscript
ShowPasscodeUnlock
ParseUsefulUserResult
SmartAppSelection
ButtonDownTimestamp
ActivationTimestamp
DidPresentHostedUITimestamp
DidPresentViewServiceUITimestamp
UsefulUserFacingResult
Duration
_originalCommandId
_category
_eventInfo
_duration
-[AFMetrics categoryString]
%@ - originalCommandId: %@, category: %@, duration: %@, eventInfo: %@
originalCommandId
T@"NSString",C,N,V_originalCommandId
category
Tq,N,V_category
eventInfo
T@"NSDictionary",C,N,V_eventInfo
T@"NSNumber",&,N,V_duration
AFSiriUserNotificationRequestCapabilityForceUpdate
-[AFSiriUserNotificationRequest performRequestWithCompletion:]
AFSiriUserNotificationRequestCapabilityManager
com.apple.bluetooth.GuestConnected
+[AFSiriUserNotificationRequestCapabilityManager supportedByApplicationWithBundleID:]
+[AFSiriUserNotificationRequestCapabilityManager applicationWithBundleID:canAnnounceNotificationWithIntentIdentifiers:]
com.apple.Home
com.apple.NanoHome
-[AFSiriUserNotificationRequestCapabilityManager fetchEligibleSetupStateWithCompletion:]
-[AFSiriUserNotificationRequestCapabilityManager fetchEligibleSetupStateWithCompletion:]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]
-[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager fetchRequestCanBeHandledStateWithCompletion:]
-[AFSiriUserNotificationRequestCapabilityManager fetchRequestCanBeHandledStateWithCompletion:]_block_invoke_2
-[AFSiriUserNotificationRequestCapabilityManager fetchRequestCanBeHandledStateWithCompletion:]_block_invoke
v16@?0Q8
-[AFSiriUserNotificationRequestCapabilityManager requestCanBeHandled]
-[AFSiriUserNotificationRequestCapabilityManager updateWirelessSplitterSessionInfoAndObserve]_block_invoke_3
v24@?0@"AFBluetoothWirelessSplitterSessionInfo"8@"NSError"16
-[AFSiriUserNotificationRequestCapabilityManager notifyObserversOfCurrentRequestCanBeHandledState]_block_invoke
v24@?0@"NSArray"8@"NSError"16
-[AFSiriUserNotificationRequestCapabilityManager notifyObserver:didChangeStateFrom:to:]
-[AFSiriUserNotificationRequestCapabilityManager notifyObserver:didReceiveNotificationWithToken:]
-[AFSiriUserNotificationRequestCapabilityManager notifyObserver:didReceiveNotificationWithToken:]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager _settingsConnectionDidDisconnect]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager fetchElligibleSetupStateAndNotifyObservers:]_block_invoke
BluetoothPairedStatusChangedNotification
initBluetoothPairedStatusChangedNotification_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFSiriUserNotificationRequest.m
/System/Library/PrivateFrameworks/BluetoothManager.framework/BluetoothManager
BluetoothManagerLibrary
BluetoothFirstDeviceUnlockCompleted
initBluetoothFirstDeviceUnlockCompleted_block_invoke
INAppInfo
initINAppInfo_block_invoke
classINAppInfo
INSearchForMessagesIntentIdentifier
initINSearchForMessagesIntentIdentifier_block_invoke
INReadAnnouncementIntentIdentifier
initINReadAnnouncementIntentIdentifier_block_invoke
INSendMessageIntentIdentifier
initINSendMessageIntentIdentifier_block_invoke
SettingsVoices
-[AFSettingsConnection _connection]_block_invoke_2
-[AFSettingsConnection fetchAccountsSynchronously:completion:]_block_invoke
AFSettingsConnection.m
Need an account to save
-[AFSettingsConnection saveAccount:setActive:]_block_invoke
Need an identifier to delete
-[AFSettingsConnection deleteAccountWithIdentifier:]_block_invoke
Need an identifier to set active
-[AFSettingsConnection setActiveAccountIdentifier:]_block_invoke
-[AFSettingsConnection setAssistantEnabled:]_block_invoke
-[AFSettingsConnection setDictationEnabled:]_block_invoke
-[AFSettingsConnection setAssistantLoggingEnabled:]_block_invoke
-[AFSettingsConnection killDaemon]_block_invoke
-[AFSettingsConnection shutdownSessionIfIdle]_block_invoke
-[AFSettingsConnection barrier]_block_invoke
-[AFSettingsConnection disableAndDeleteCloudSyncWithCompletion:]_block_invoke
-[AFSettingsConnection getDevicesWithAvailablePHSAssetsForLanguage:completion:]_block_invoke
-[AFSettingsConnection getDevicesWithAvailablePHSAssetsOnDeviceCheck:]_block_invoke
-[AFSettingsConnection setConfigOverrides:completion:]_block_invoke
-[AFSettingsConnection configOverrides:]_block_invoke
-[AFSettingsConnection forceMultiUserSync:download:completion:]_block_invoke
-[AFSettingsConnection getSpokenNotificationTemporarilyDisabledEndDateWithCompletion:]_block_invoke
-[AFSettingsConnection setSpokenNotificationTemporarilyDisabledUntil:]_block_invoke
-[AFSettingsConnection clearSpokenNotificationTemporarilyDisabledStatus]_block_invoke
-[AFSettingsConnection getSpokenNotificationTemporarilyDisabledEndDateForApp:completion:]_block_invoke
-[AFSettingsConnection setSpokenNotificationTemporarilyDisabledForApp:until:]_block_invoke
-[AFSettingsConnection getSpokenNotificationShouldAlwaysSpeakNotificationsWithCompletion:]_block_invoke
-[AFSettingsConnection setSpokenNotificationShouldAlwaysSpeakNotifications:]_block_invoke
-[AFSettingsConnection getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:]_block_invoke
-[AFSettingsConnection setSpokenNotificationShouldSkipTriggerlessReplies:]_block_invoke
-[AFSettingsConnection setSpokenNotificationProxCardSeen:]_block_invoke
-[AFSettingsConnection setOpportuneSpeakingEdgeDetectorSignalOverride:]_block_invoke
-[AFSettingsConnection clearOpportuneSpeakingEdgeDetectorSignalOverride]_block_invoke
-[AFSettingsConnection fetchMultiUserVoiceIdentificationSetting:]_block_invoke
-[AFSettingsConnection homeOnboardingFlowInvoked:completion:]_block_invoke
-[AFSettingsConnection currectNWActivityId:]_block_invoke
v16@?0@"NSUUID"8
-[AFSettingsConnection setOutputVoice:withCompletion:]
-[AFSettingsConnection setLanguage:withCompletion:]
-[AFSettingsConnection setLanguage:outputVoice:withCompletion:]
-[AFSettingsConnection startUIRequestWithText:]_block_invoke
-[AFSettingsConnection startUIRequestWithInfo:]_block_invoke
-[AFSettingsConnection startUIRequestWithSpeechAudioFileURL:]_block_invoke
-[AFSettingsConnection startUIMockServerRequestWithReplayFileURL:completion:]_block_invoke
-[AFSettingsConnection startUIRequestWithText:completion:]_block_invoke
-[AFSettingsConnection startUIRequestWithInfo:completion:]_block_invoke
-[AFSettingsConnection startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:]_block_invoke
-[AFSettingsConnection dismissUI]_block_invoke
-[AFSettingsConnection stopAudioPlaybackRequest:immediately:]_block_invoke
-[AFSettingsConnection stopAllAudioPlaybackRequests:]_block_invoke
-[AFSettingsConnection getMeCard:]
-[AFSettingsConnection getMeCard:]_block_invoke
-[AFSettingsConnection setNanoAssistantEnabled:withCompletion:]
-[AFSettingsConnection setNanoDictationEnabled:withCompletion:]
-[AFSettingsConnection setNanoPhraseSpotterEnabled:withCompletion:]
-[AFSettingsConnection setNanoRaiseToSpeakEnabled:withCompletion:]
-[AFSettingsConnection setNanoUseDeviceSpeakerForTTS:withCompletion:]
-[AFSettingsConnection setNanoTTSSpeakerVolume:withCompletion:]
-[AFSettingsConnection setNanoOutputVoice:withCompletion:]
-[AFSettingsConnection setNanoLanguage:withCompletion:]
-[AFSettingsConnection setNanoCrownActivationEnabled:withCompletion:]
-[AFSettingsConnection setNanoSiriDataSharingOptInStatus:withCompletion:]
v16@?0@"AFBluetoothDeviceInfo"8
v16@?0@"AFBluetoothWirelessSplitterSessionInfo"8
-[AFSettingsConnection startObservingWirelessSplitterSession]_block_invoke
-[AFSettingsConnection stopObservingWirelessSplitterSession]_block_invoke
-[AFSettingsConnection showMultiUsers:]_block_invoke
-[AFSettingsConnection showPrimaryUserSharedUserIDWithCompletion:]_block_invoke
v24@?0@"NSError"8q16
-[AFSettingsConnection setSiriDataSharingOptInStatus:completion:]
-[AFSettingsConnection setSiriDataSharingOptInStatus:completion:]_block_invoke
-[AFSettingsConnection getSiriDataSharingOptInStatusWithCompletion:]
-[AFSettingsConnection getSiriDataSharingOptInStatusWithCompletion:]_block_invoke
-[AFSettingsConnection setSiriDataSharingOptInAlertPresented:completion:]
-[AFSettingsConnection setSiriDataSharingOptInAlertPresented:completion:]_block_invoke
-[AFSettingsConnection setOnDeviceDictationAvailableAlertPresented:]
-[AFSettingsConnection setOnDeviceDictationAvailableAlertPresented:]_block_invoke
-[AFSettingsConnection shouldSuppressSiriDataSharingOptInAlert:]_block_invoke
-[AFSettingsConnection deleteSiriHistoryWithContext:withCompletion:]
-[AFSettingsConnection deleteSiriHistoryWithContext:withCompletion:]_block_invoke
-[AFSettingsConnection deleteSiriHistoryWithCompletion:]
-[AFSettingsConnection setSiriDesignModeEnabled:completion:]_block_invoke
-[AFSettingsConnection siriDesignModeIsEnabled:]_block_invoke
-[AFSettingsConnection getCrossDeviceContextWithCompletion:]_block_invoke
-[AFSettingsConnection getCurrentContextSnapshotWithCompletion:]_block_invoke
-[AFSettingsConnection getOriginDeviceInfoForContextIdentifier:completion:]_block_invoke
-[AFSettingsConnection getContextCollectorsInfoWithCompletion:]_block_invoke
-[AFSettingsConnection setHardcodedBluetoothProximity:]_block_invoke
-[AFSettingsConnection accessRecordedAudioWithIdentifier:completion:]_block_invoke
-[AFSettingsConnection trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:]_block_invoke
-[AFSettingsConnection getRecordedAudioDirectoryPathsWithCompletion:]_block_invoke
-[AFSettingsConnection pushMyriadAdvertisementContext:completionHandler:]_block_invoke
-[AFSettingsConnection(Internal) _setSyncNeededForReason:]_block_invoke
-[AFSettingsConnection(Internal) _clearSyncNeededForKey:]_block_invoke
-[AFSettingsConnection(Internal) _fetchPeerData:]_block_invoke
-[AFSettingsConnection(Internal) _runServiceMaintenance]_block_invoke
_delegate
T@"<AFSettingsDelegate>",W,N,S_setDelegate:
/var/mobile/Library/Assistant/DictationSampled
com.apple.assistantd/DictationSampled
yyyyMMdd
DictationSampled.plist
currentSamplingDate
AFCreateDirectoryWithPath
AFDeleteItemWithPath
AFDeleteDictationSamplingData
%@/%@
AFDictationOnDeviceSamplingDateAsString
com.apple.siri.activation.frontend-process-handler
com.apple.siri.client-state-changed
-[AFSiriActivationHandlerFrontendProcess handleContext:completion:]
-[AFSiriActivationHandlerFrontendProcess handleContext:completion:]_block_invoke
-[AFSiriActivationHandlerFrontendProcess notifyObserver:didChangeStateFrom:to:]
v32@?0@"NSNumber"8@"AFSafetyBlock"16^B24
-[AFSiriActivationHandlerFrontendProcess _waitUntilListeningForContext:timeoutInterval:completion:]
-[AFSiriActivationHandlerFrontendProcess _waitUntilListeningForContext:timeoutInterval:completion:]_block_invoke
UnlocalizedName
CountryName
UnlocalizedCountryName
Latitude
Longitude
ALCityID
AFShouldUseLanguageDetector
AFOverrideLanguageCode
object
T@,R,N,V_object
previousItem
T@"AFLinkedListItem",&,N,V_previousItem
nextItem
T@"AFLinkedListItem",&,N,V_nextItem
stopped
paused
running
airPodDoubleTapWhenActive
airPodOutOfEarWhenActive
adBlockerTriggered
%@, playbackState = %@, nowPlayingTimestamp = %@, mediaType = %@, groupIdentifier = %@
_playbackState
_nowPlayingTimestamp
_mediaType
_groupIdentifier
Tq,R,N,V_playbackState
nowPlayingTimestamp
T@"NSDate",R,C,N,V_nowPlayingTimestamp
mediaType
T@"NSString",R,C,N,V_mediaType
groupIdentifier
T@"NSString",R,C,N,V_groupIdentifier
_settingType
_valueBeforeUpdate
_valueAfterUpdate
SiriRequestIdentifier
SiriRequestOriginatingAceIDIdentifier
OriginatingAceID: 
v32@?0@"NSString"8@16^B24
Request
_refId
T@"NSString",C,N,S_setRefId:,V__refId
_originatingAceID
T@"NSString",C,N,S_setOriginatingAceID:,V_originatingAceID
-[AFSiriActivationHandlerCoreSpeechDaemon handleContext:completion:]
-[AFSiriActivationHandlerCoreSpeechDaemon handleContext:completion:]_block_invoke
score
-[AFSiriActivationHandlerCoreSpeechDaemon handleContext:completion:]_block_invoke_2
CSActivationEventNotifier
initCSActivationEventNotifier_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFSiriActivationHandlerCoreSpeechDaemon.m
classCSActivationEventNotifier
/System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
CoreSpeechLibrary
CSActivationEvent
initCSActivationEvent_block_invoke
classCSActivationEvent
Siri Global
 - %@
AFKeychainValueForAccountAndKey
AFKeychainRemoveValueForAccountAndKey
AFKeychainSetValueForAccountAndKey
latitude
longitude
altitude
direction
speed
verticalAccuracy
horizontalAccuracy
preciseLocationEnabled
latitude = %@
longitude = %@
altitude = %@
direction = %@
speed = %@
verticalAccuracy = %@
horizontalAccuracy = %@
preciseLocationEnabled = %@
AFLocationSnapshot::latitude
AFLocationSnapshot::longitude
AFLocationSnapshot::altitude
AFLocationSnapshot::direction
AFLocationSnapshot::speed
AFLocationSnapshot::verticalAccuracy
AFLocationSnapshot::horizontalAccuracy
AFLocationSnapshot::preciseLocationEnabled
T@"NSNumber",R,C,N,V_latitude
T@"NSNumber",R,C,N,V_longitude
T@"NSNumber",R,C,N,V_altitude
T@"NSNumber",R,C,N,V_direction
T@"NSNumber",R,C,N,V_speed
T@"NSNumber",R,C,N,V_verticalAccuracy
T@"NSNumber",R,C,N,V_horizontalAccuracy
TB,R,N,V_preciseLocationEnabled
route
isRemoteDevice
route = %@
isRemoteDevice = %@
AFAudioDeviceInfo::route
AFAudioDeviceInfo::isRemoteDevice
AFAudioDeviceInfo::deviceUID
T@"NSString",R,C,N,V_route
TB,R,N,V_isRemoteDevice
alarmsByID
notifiedFiringAlarmIDs
date = %@
alarmsByID = %@
notifiedFiringAlarmIDs = %@
AFClockAlarmSnapshot::generation
AFClockAlarmSnapshot::date
AFClockAlarmSnapshot::alarmsByID
AFClockAlarmSnapshot::notifiedFiringAlarmIDs
T@"NSDate",R,C,N,V_date
T@"NSDictionary",R,C,N,V_alarmsByID
T@"NSOrderedSet",R,C,N,V_notifiedFiringAlarmIDs
mediaSystemIdentifier
mediaRouteIdentifier
roomName
proximity
contextSnapshots
serializedContextByKey
metricsContext
mediaSystemIdentifier = %@
mediaRouteIdentifier = %@
roomName = %@
proximity = %@
contextSnapshots = %@
serializedContextByKey = %@
metricsContext = %@
AFServiceDeviceContext::identifier
AFServiceDeviceContext::mediaSystemIdentifier
AFServiceDeviceContext::mediaRouteIdentifier
AFServiceDeviceContext::roomName
AFServiceDeviceContext::proximity
AFServiceDeviceContext::contextSnapshots
AFServiceDeviceContext::serializedContextByKey
AFServiceDeviceContext::metricsContext
T@"NSString",R,C,N,V_mediaSystemIdentifier
T@"NSString",R,C,N,V_mediaRouteIdentifier
T@"NSString",R,C,N,V_roomName
Tq,R,N,V_proximity
T@"NSArray",R,C,N,V_contextSnapshots
T@"NSDictionary",R,C,N,V_serializedContextByKey
T@"NSDictionary",R,C,N,V_metricsContext
followUpOne
followUpTwo
final
%@ {event = %ld (%@), deviceIdentifier = %@, time = %f, hostTime = %llu}
_activationDeviceIdentifier
_isEyesFree
_serverCommandId
_useAutomaticEndpointing
_endpointerOperationMode
_recordingAlertPolicy
_useStreamingDictation
_homeButtonDownEventTime
_homeButtonDownEventMachAbsoluteTime
_activationEventTime
_activationEventMachAbsoluteTime
_expectedActivationEventTime
_stopRecordingHostTime
_isInitialBringUp
_homeButtonUpFromBeep
_acousticIdEnabled
_audioFileType
_audioFileHandle
_myriadContext
_recordDeviceIdentifier
_speechRecordingEventListeningEndpoint
_usePrelisteningMode
_pendCallbacksUntilAfterContinuation
_useBorealisBuffer
_audioFileURL
_suppressStartAlert
_suppressStopAlert
_hasPlayedStartAlert
_bargeInOptions
_speechSynthesisRecord
_reloadSmartSiriVolume
_skipPersonalizedASR
_clientAnalyticsContext
_startContext
_stopContext
_location
_locationStatus
_isOnPhoneCall
_isMediaPlaying
_mediaPlaybackVolume
_applicationBundleIdentifier
_presentationMode
_preheatTestLanguage
_preheatTestModelPath
applicationBundleIdentifier
T@"NSString",C,N,V_applicationBundleIdentifier
activationDeviceIdentifier
T@"NSString",C,N,V_activationDeviceIdentifier
isEyesFree
TB,N,V_isEyesFree
serverCommandId
T@"NSString",C,N,V_serverCommandId
useAutomaticEndpointing
TB,N,V_useAutomaticEndpointing
endpointerOperationMode
Tq,N,V_endpointerOperationMode
recordingAlertPolicy
T@"AFSpeechRecordingAlertPolicy",C,N,V_recordingAlertPolicy
useStreamingDictation
TB,N,V_useStreamingDictation
homeButtonDownEventTime
Td,N,V_homeButtonDownEventTime
homeButtonDownEventMachAbsoluteTime
TQ,N,V_homeButtonDownEventMachAbsoluteTime
activationEventTime
Td,N,V_activationEventTime
activationEventMachAbsoluteTime
TQ,N,V_activationEventMachAbsoluteTime
expectedActivationEventTime
Td,N,V_expectedActivationEventTime
stopRecordingHostTime
TQ,N,V_stopRecordingHostTime
isInitialBringUp
TB,N,V_isInitialBringUp
homeButtonUpFromBeep
T@"NSNumber",C,N,V_homeButtonUpFromBeep
acousticIdEnabled
TB,N,V_acousticIdEnabled
audioFileType
Tq,N,V_audioFileType
audioFileHandle
T@"NSFileHandle",&,N,V_audioFileHandle
myriadContext
T@"AFMyriadContext",C,N,V_myriadContext
recordDeviceIdentifier
T@"NSString",C,N,V_recordDeviceIdentifier
speechRecordingEventListeningEndpoint
T@"NSXPCListenerEndpoint",&,N,V_speechRecordingEventListeningEndpoint
usePrelisteningMode
TB,N,V_usePrelisteningMode
pendCallbacksUntilAfterContinuation
TB,N,V_pendCallbacksUntilAfterContinuation
useBorealisBuffer
TB,N,V_useBorealisBuffer
reloadSmartSiriVolume
TB,N,V_reloadSmartSiriVolume
skipPersonalizedASR
TB,N,V_skipPersonalizedASR
audioFileURL
T@"NSURL",C,N,V_audioFileURL
suppressStartAlert
TB,N,V_suppressStartAlert
suppressStopAlert
TB,N,V_suppressStopAlert
hasPlayedStartAlert
TB,N,V_hasPlayedStartAlert
bargeInOptions
TQ,N,V_bargeInOptions
speechSynthesisRecord
T@"AFSpeechSynthesisRecord",C,N,V_speechSynthesisRecord
T@"CLLocation",C,N,V_location
locationStatus
T@"NSString",C,N,V_locationStatus
btDeviceAddress
T@"NSString",C,N
clientAnalyticsContext
T@"NSDictionary",C,N,V_clientAnalyticsContext
startContext
T@"NSDictionary",C,N,V_startContext
stopContext
T@"NSDictionary",C,N,V_stopContext
isOnPhoneCall
TB,N,V_isOnPhoneCall
isMediaPlaying
TB,N,V_isMediaPlaying
mediaPlaybackVolume
Tf,N,V_mediaPlaybackVolume
presentationMode
Tq,N,V_presentationMode
preheatTestLanguage
T@"NSString",C,N,V_preheatTestLanguage
preheatTestModelPath
T@"NSURL",C,N,V_preheatTestModelPath
factoryClass
T#,&,N,V_factoryClass
factoryInstance
T@,&,N,V_factoryInstance
classIdentifiers
T@"NSMutableDictionary",&,N,V_classIdentifiers
@16@?0#8
-[AFPluginManager enumerateFactoryInstancesForDomainKey:groupIdentifier:classIdentifier:usingBlock:]
-[AFPluginManager preloadBundles]
-[AFPluginManager _loadBundlesIfNeeded]
-[AFPluginManager _registerBundle:]
 Bundle Path: %@, Bundles: %@
reusesRecycled
recyclesWhenDone
%@ %@
turnContext
hasTurnContext
T@"SISchemaClientTurnContext",&,N,V_turnContext
hasEvent
T@"SISchemaClientAnyEvent",&,N,V_event
voiceTriggerInfo
analyticsContext
endpointerMode
AFSiriActivationBuiltInMicVoice
v16@?0@"<AFSiriActivationContextMutating>"8
AFSiriActivationBuiltInMicVoiceTriggerPrewarm
com.apple.voicetrigger.EarlyDetect
AFSiriActivationBuiltInMicVoiceTrigger
AFSiriActivationHearst
AFSiriActivationHearstDoubleTap
AFSiriActivationHearstVoice
AFSiriActivationHearstBoron
AFSiriActivationBluetoothDeviceDoubleTap
AFSiriActivationBluetoothDeviceVoice
AFSiriActivationBluetoothDeviceVoiceTriggerPrewarm
AFSiriActivationBluetoothDeviceVoiceTrigger
AFSiriActivationRemoraVoice
AFSiriActivationRemoraVoiceTriggerPrewarm
AFSiriActivationRemoraVoiceTrigger
AFSiriActivationBluetoothDeviceBoronSignal
AFSiriActivationBluetoothDeviceTriggerless
AFSiriActivationCarPlayDeviceVoice
AFSiriActivationCarPlayDeviceVoiceTriggerPrewarm
AFSiriActivationCarPlayDeviceVoiceTrigger
AFSiriActivationRaiseToSpeakPrewarm
AFSiriActivationRaiseToSpeak
AFSiriActivationTriggerless
AFSiriActivationValidate
AFSiriActivationPerform
AFSiriActivationCreateRequestInfoFromContext
AFSiriActivationCreateContextFromXPCDictionary_block_invoke
AFSiriActivationCreateXPCDictionaryFromContext
AFSiriActivationCreateResultFromXPCDictionary_block_invoke
AFSiriActivationCreateXPCDictionaryFromResult
AFSiriActivationCreateContextFromNSDictionary_block_invoke
AFSiriActivationCreateNSDictionaryFromContext
playing
seeking
GetContextResponseContext
timersByID
notifiedFiringTimerIDs
timersByID = %@
notifiedFiringTimerIDs = %@
AFClockTimerSnapshot::generation
AFClockTimerSnapshot::date
AFClockTimerSnapshot::timersByID
AFClockTimerSnapshot::notifiedFiringTimerIDs
T@"NSDictionary",R,C,N,V_timersByID
T@"NSOrderedSet",R,C,N,V_notifiedFiringTimerIDs
experimentsByConfigurationIdentifier
experimentsByConfigurationIdentifier = %@
AFExperimentContext::experimentsByConfigurationIdentifier
T@"NSDictionary",R,C,N,V_experimentsByConfigurationIdentifier
Outbound
SenderAddress
SenderInternalGUID
RecipientAddresses
GroupName
GroupNameId
SubjectText
BodyText
AttachmentURL
SendDate
ChatIdentifier
Effect
siri-message-internal
-[SASmsSms(STSiriMessage) af_messageValue]
voiceTriggerEnabled
%@(voiceTriggerEnabled=%@)
Tq,R,N,V_voiceTriggerEnabled
lastPlayedAnnouncement
state = %lu [%@]
lastPlayedAnnouncement = %@
AFHomeAnnouncementSnapshot::state
AFHomeAnnouncementSnapshot::lastPlayedAnnouncement
TQ,R,N,V_state
T@"AFHomeAnnouncement",R,C,N,V_lastPlayedAnnouncement
AFSiriTaskService.m
com.apple.siri.task.app.
Cannot create an app task service for a process without a bundle
-[AFSiriTaskService initWithMachServiceName:]
SiriTaskService-
com.apple.siri.task.client
-[AFSiriTaskService listener:shouldAcceptNewConnection:]
-[AFSiriTaskDeliveryHandler deliverSiriTask:completionHandler:]
-[AFSiriTaskDeliveryHandler deliverSiriTask:completionHandler:]_block_invoke
service
T@"AFSiriTaskService",W,N,V_service
T@"<AFSiriTaskServiceDelegate>",W,N,V_delegate
AFSiriTaskmaster.m
Siri Taskmaster
-[AFSiriTaskmaster _handleFailureOfRequest:error:atTime:]
-[AFSiriTaskmaster handleFailureOfRequest:error:atTime:]
 %p; 
taskDeliverer=
, taskExecutions=
request
-[AFSiriTaskmaster handleSiriRequest:deliveryHandler:completionHandler:]
STGenericIntentRequest
T@"<AFSiriTaskmasterDelegate>",W,N,V_delegate
Voice Activity
Smart Heuristics
Online Learner
_enabled
_daysOfWeek
_hourOfDay
_minuteOfHour
_sleepAlarm
_overrideAlarm
_bedtimeHour
_bedtimeMinute
enabled
TB,N,GisEnabled,V_enabled
daysOfWeek
Tq,N,V_daysOfWeek
hourOfDay
Tq,N,V_hourOfDay
minuteOfHour
Tq,N,V_minuteOfHour
sleepAlarm
TB,N,GisSleepAlarm,V_sleepAlarm
overrideAlarm
TB,N,GisOverrideAlarm,V_overrideAlarm
bedtimeHour
Tq,N,V_bedtimeHour
bedtimeMinute
Tq,N,V_bedtimeMinute
Item
ChildNodes
-[AFTreeNodePropertyListSerialization _propertyListWithTreeNode:itemPropertyListCreation:]
Item creation block returned nil for %@
Unable to create tree node from property list with version %ld
monday
tuesday
wednesday
thursday
friday
saturday
sunday
AlarmIdentifiers
v16@?0@"AFAssertionContext"8
T@"NSUUID",R,N
T@"AFAssertionContext",R,N
T@"AFAssertionContext",R,N,V_context
-[_AFAssertionProxy initWithRecord:coordinator:]
-[_AFAssertionProxy relinquishWithContext:]
-[_AFAssertionProxy dealloc]
%@ {identifier = %@, numberOfPendingAndActiveAssertions = %llu}
-[AFAssertionCoordinator acquireRelinquishableAssertionWithContext:relinquishmentHandler:]
-[AFAssertionCoordinator relinquishAssertionWithUUID:context:]
-[AFAssertionCoordinator numberOfPendingAndActiveAssertions]
-[AFAssertionCoordinator _addRecord:isFirstRecord:]
-[AFAssertionCoordinator _removeRecordWithUUID:isLastRecord:]
-[AFAssertionCoordinator _removeAllRecords]
-[AFAssertionCoordinator _removeAllRecords]_block_invoke
v32@?0@"_AFAssertionRecord"8Q16^B24
-[AFAssertionCoordinator _didAcquireAssertion:isFirstAssertion:]
-[AFAssertionCoordinator _didRelinquishAssertion:isLastAssertion:]
uuid = %@, timestamp = %llu, reason = %@, userInfo = %@
com.apple.siri.disambiguation
UpdateMessageRequestMessage
myriadLoss
requestCancelled
requestFailed
requestTimedOut
kSTSiriLocationAddressBookIDKey
kSTSiriLocationAddressLabelKey
kSTSiriLocationContactNameKey
kSTSiriLocationGeoResultKey
kSTSiriLocationResultTypeKey
type: %@, data length: %@
\ %@
addressBookID
T@"NSURL",C,N,V_addressBookID
addressLabel
T@"NSString",C,N,V_addressLabel
contactName
T@"NSString",C,N,V_contactName
geoResult
T@"NSData",C,N,V_geoResult
resultType
Tq,N,V_resultType
virtualMemorySizeInBytes
numberOfRegions
pageSizeInBytes
residentMemorySizeInBytes
peakResidentMemorySizeInBytes
physicalMemoryFootprintInBytes
virtualMemorySizeInBytes = %@
numberOfRegions = %@
pageSizeInBytes = %@
residentMemorySizeInBytes = %@
peakResidentMemorySizeInBytes = %@
physicalMemoryFootprintInBytes = %@
AFMemoryInfo::virtualMemorySizeInBytes
AFMemoryInfo::numberOfRegions
AFMemoryInfo::pageSizeInBytes
AFMemoryInfo::residentMemorySizeInBytes
AFMemoryInfo::peakResidentMemorySizeInBytes
AFMemoryInfo::physicalMemoryFootprintInBytes
TQ,R,N,V_virtualMemorySizeInBytes
Ti,R,N,V_numberOfRegions
Ti,R,N,V_pageSizeInBytes
TQ,R,N,V_residentMemorySizeInBytes
TQ,R,N,V_peakResidentMemorySizeInBytes
TQ,R,N,V_physicalMemoryFootprintInBytes
itemID
itemURL
T@"NSURL",R,N
T@"NSDate",R,C,N
source = %ld (%@)
event = %ld (%@)
options = %lu [%@]
deviceID = %@
AFSiriActivationContext::timestamp
AFSiriActivationContext::source
AFSiriActivationContext::event
AFSiriActivationContext::options
AFSiriActivationContext::deviceID
AFSiriActivationContext::userInfo
Tq,R,N,V_source
Tq,R,N,V_event
TQ,R,N,V_options
T@"NSString",R,C,N,V_deviceID
(gen: %@, date: %@, notifiedFiringAlarmIDs: %@, isFiring: %@)
(gen: %@, date: %@, notifiedFiringTimerIDs: %@, isFiring: %@)
(playstate: %@, time: %@, mediaType: %@, group: %@)
(state: %@, lastPlayed: {id = %@, start = %@, finish = %@})
(IDSDeviceID: %@, MediaSystemId: %@, MediaRouteId: %@, Name: %@, Room: %@, Communal: %d)
(vtSatScore = %@, hasConfidenceScores = %@)
([%d,%d], accuracy=%d)
AFAnalytics.m
%s is marked as NS_UNAVAILABLE. Use the designated initializer instead.
-[AFAnalytics init]
com.apple.assistant.analytics.client
-[AFAnalytics logEventWithType:machAbsoluteTime:context:]
-[AFAnalytics logInstrumentation:machAbsoluteTime:turnContext:]
-[AFAnalytics logInstrumentation:machAbsoluteTime:turnContext:]_block_invoke
-[AFAnalytics boostQueuedEvents:]
-[AFAnalytics boostQueuedEvents:]_block_invoke
_AFAnalyticsEventCreate
_AFAnalyticsEventGetContextGuarded
-[AFSiriActivationListener initWithServicePort:]
com.apple.siri.activation.listener
-[AFSiriActivationListener dealloc]
-[AFSiriActivationListener listener:shouldAcceptNewConnection:]
com.apple.siri.external_request
-[AFSiriActivationListener notifyObserver:didChangeStateFrom:to:]
-[AFSiriActivationListener prewarmWithRequestInfo:context:completion:]
-[AFSiriActivationListener prewarmWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener activateWithRequestInfo:context:completion:]
-[AFSiriActivationListener activateWithRequestInfo:context:completion:]_block_invoke_2
-[AFSiriActivationListener activateWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener deactivateForReason:options:context:completion:]
-[AFSiriActivationListener deactivateForReason:options:context:completion:]_block_invoke_2
-[AFSiriActivationListener deactivateForReason:options:context:completion:]_block_invoke
-[AFSiriActivationListener handleContext:completion:]
-[AFSiriActivationListener handleContext:completion:]_block_invoke_2
-[AFSiriActivationListener handleContext:completion:]_block_invoke
v16@?0@"AFRequestInfo"8
v24@?0q8Q16
-[AFSiriActivationListener handleIntent:inBackgroundAppWithBundleId:reply:]
-[AFSiriActivationListener handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke_2
-[AFSiriActivationListener handleIntent:inBackgroundAppWithBundleId:reply:]_block_invoke
-[AFSiriActivationListener handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]
-[AFSiriActivationListener handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke_2
-[AFSiriActivationListener handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]_block_invoke
-[AFSiriActivationListener _startWithDelegate:]
-[AFSiriActivationListener _stop]
-[AFSiriActivationListener _invalidate]
-[AFSiriActivationListener _prewarmWithRequestInfo:context:completion:]
-[AFSiriActivationListener _prewarmWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener _activateWithRequestInfo:context:completion:]
-[AFSiriActivationListener _activateWithRequestInfo:context:completion:]_block_invoke
-[AFSiriActivationListener _deactivateForReason:options:context:completion:]
-[AFSiriActivationListener _deactivateForReason:options:context:completion:]_block_invoke
siri_vox_tap_to_siri_behavior_experiment
playsSound
experimentForSiriVOXTapToSiriBehavior
T@"AFExperiment<AFExperimentForSiriVOXTapToSiriBehavior>",R,N
AFDeviceRingerSwitchObserver
com.apple.springboard.ringerstate
CreateMessageRequestMessage
com.apple.siri.suggestions-%@.plist
T@"<AFUtteranceSuggestionsDelegate>",R,W,N,V_delegate
Siri Utterance Suggestions Queue
; service=
; initiatorAddress=
; recipientAddress=
_service
_initiatorAddress
_recipientAddress
FaceTime Audio
Telephony
startedHostTime
finishedHostTime
startedDate
finishedDate
startedHostTime = %@
finishedHostTime = %@
startedDate = %@
finishedDate = %@
AFHomeAnnouncement::identifier
AFHomeAnnouncement::startedHostTime
AFHomeAnnouncement::finishedHostTime
AFHomeAnnouncement::startedDate
AFHomeAnnouncement::finishedDate
TQ,R,N,V_startedHostTime
TQ,R,N,V_finishedHostTime
T@"NSDate",R,C,N,V_startedDate
T@"NSDate",R,C,N,V_finishedDate
T@,&,N,V_value
%@, deliveryDate: %@
_deliveryDate
T@"NSDate",R,C,N,V_deliveryDate
-[AFClockTimerObserver init]
com.apple.assistant.clock-timer-observer
-[AFClockTimerObserver init]_block_invoke_2
-[AFClockTimerObserver getTimerSnapshotWithCompletion:]
-[AFClockTimerObserver getTimerSnapshotWithCompletion:]_block_invoke_2
-[AFClockTimerObserver getTimerSnapshotWithCompletion:]_block_invoke
-[AFClockTimerObserver clockItemStorageDidUpdate:insertedItemIDs:updatedItemIDs:deletedItemIDs:]
v16@?0@"<AFClockTimerListening>"8
-[AFClockTimerObserver timersAdded:]
-[AFClockTimerObserver timersUpdated:]
-[AFClockTimerObserver timersRemoved:]
-[AFClockTimerObserver timerFired:]
-[AFClockTimerObserver firingTimerChanged:]
-[AFClockTimerObserver firingTimerDismissed:]
-[AFClockTimerObserver stateReset:]
state reset
-[AFClockTimerObserver stateReset:]_block_invoke_2
-[AFClockTimerObserver timersChanged:]
batched changes
-[AFClockTimerObserver timersChanged:]_block_invoke_2
v16@?0@"<AFClockTimerSnapshotMutating>"8
-[AFClockTimerObserver _setUp]
timer observer
-[AFClockTimerObserver _tearDown]
-[AFClockTimerObserver _fetchTimersForReason:completion:]
-[AFClockTimerObserver _handleFetchTimersForReason:error:completion:]
v32@?0@"NSUUID"8@"AFClockTimer"16^B24
AFUIApplicationSiriTaskDeliverer.m
appBundleIdentifier
AFUIApplicationSiriTaskDeliverer
-[AFUIApplicationSiriTaskDeliverer _startAppStateMonitoringForRequest:]
<%@: %p; %@>
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasInvalidatedForRequest:]
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasInvalidatedForRequest:]_block_invoke
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasAcquired:]
-[AFUIApplicationSiriTaskDeliverer _processAssertionWasAcquired:]_block_invoke
-[AFUIApplicationSiriTaskDeliverer deliverSiriTask:completionHandler:]
v24@?0@"BSProcessHandle"8@"NSError"16
-[AFUIApplicationSiriTaskDeliverer siriTaskDidFinish]
SiriTaskDelivererBackground
-[AFUIApplicationSiriTaskDeliverer _handleSuccessfulAppLaunchToBackground:forRequest:completion:]
taskmaster
T@"AFSiriTaskmaster",W,N,V_taskmaster
bundleIdentifier
BKSApplicationStateMonitor
/System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices
BKSApplicationStateAll
initBKSApplicationStateAll_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFUIApplicationSiriTaskDeliverer.m
appIsFrontmost
BKSApplicationStateAppIsFrontmostKey
initBKSApplicationStateAppIsFrontmostKey_block_invoke
_LogAppStateInfo
SBApplicationStateDisplayIDKey
initSBApplicationStateDisplayIDKey_block_invoke
/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
SBApplicationStateKey
initSBApplicationStateKey_block_invoke
UISiriTaskAction
/System/Library/Frameworks/UIKit.framework/UIKit
FBSOpenApplicationOptionKeyActions
initFBSOpenApplicationOptionKeyActions_block_invoke
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptionKeyActivateSuspended
initFBSOpenApplicationOptionKeyActivateSuspended_block_invoke
FBSOpenApplicationOptionKeyUnlockDevice
initFBSOpenApplicationOptionKeyUnlockDevice_block_invoke
FBSOpenApplicationOptionKeyPromptUnlockDevice
initFBSOpenApplicationOptionKeyPromptUnlockDevice_block_invoke
FBSOpenApplicationService
FBSOpenApplicationOptions
FBSOpenApplicationServiceErrorDomain
initFBSOpenApplicationServiceErrorDomain_block_invoke
BKSProcessAssertion
class
dialogIdentifier
listenAfterSpeaking
v48@?0{?=@@@@B}8
emergencyCallInitiatedCallback
emergencyHandledCallback
com.apple.siri.myriad.initate_emergency_call
com.apple.siri.myriad.emergency_call_handled
-[AFMyriadEmergencyManager initiateEmergencyCallMyriad]
-[AFMyriadEmergencyManager informDelegateEmergencyHandled]
-[AFMyriadEmergencyManager informDelegateEmergencyNotHandled]
com.apple.cmas
UN://%@
BB://%@
_bulletinID
_recordID
_sectionID
_sectionSubtype
_allDay
_endDate
_recencyDate
_timeZone
_title
_message
_displayName
_subtitle
_publisherBulletinID
_intentIDs
_availableOnLockScreen
_supportsSpokenNotification
_internalID
_previewRestricted
_threadID
_feed
feed
TQ,R,N,V_feed
displayName
T@"NSString",C,N,V_displayName
availableOnLockScreen
TB,N,V_availableOnLockScreen
TB,N,V_supportsSpokenNotification
read
TB,N,GisRead,V_read
bbBulletin
T@"BBBulletin",R,N,V_bbBulletin
bulletinID
T@"NSString",R,C,N,V_bulletinID
recordID
T@"NSString",R,C,N,V_recordID
endDate
T@"NSDate",R,C,N,V_endDate
allDay
TB,R,N,GisAllDay,V_allDay
T@"NSString",R,C,N,V_message
modalAlertContentMessage
T@"NSString",R,C,N,V_modalAlertContentMessage
recencyDate
T@"NSDate",R,C,N,V_recencyDate
sectionID
T@"NSString",R,C,N,V_sectionID
sectionSubtype
Tq,R,N,V_sectionSubtype
subtitle
T@"NSString",R,C,N,V_subtitle
timeZone
T@"NSString",R,C,N,V_timeZone
intentIDs
T@"NSArray",R,C,N,V_intentIDs
publisherBulletinID
T@"NSString",R,C,N,V_publisherBulletinID
previewRestricted
TB,R,N,V_previewRestricted
threadID
T@"NSString",R,C,N,V_threadID
internalID
T@"NSString",R,C,N,V_internalID
/System/Library/PrivateFrameworks/CoreServices.framework/CoreServices
AFDialogPhaseType
Unexpected value for _type: %ld
acknowledgementDialogPhase
reflectionDialogPhase
statusDialogPhase
clarificationDialogPhase
summaryDialogPhase
confirmationDialogPhase
completionDialogPhase
errorDialogPhase
confirmedDialogPhase
cancelledDialogPhase
userRequestDialogPhase
unknown dialogPhase
<%@ %@>
Tq,R,N,G_type,V_type
temporary
TB,R,N,GisTemporary
expository
TB,R,N,GisExpository
TB,R,N,GisConfirmationDialogPhase
TB,R,N,GisReflectionDialogPhase
TB,R,N,GisClarificationDialogPhase
TB,R,N,GisConfirmedDialogPhase
TB,R,N,GisCancelledDialogPhase
TB,R,N,GisUserRequestDialogPhase
TB,R,N,GisErrorDialogPhase
TB,R,N,GisCompletionDialogPhase
TB,R,N,GisSummaryDialogPhase
aceDialogPhaseValue
imagePath
symbolName
imagePath = %@
symbolName = %@
AFCallSiteInfo::imagePath
AFCallSiteInfo::symbolName
T@"NSString",R,C,N,V_imagePath
T@"NSString",R,C,N,V_symbolName
%@: %p; 
machServiceName=
Mach Service Task Delivery Completion Handler
-[AFMachServiceSiriTaskDeliverer deliverSiriTask:completionHandler:]
-[AFMachServiceSiriTaskDeliverer deliverSiriTask:completionHandler:]_block_invoke
v32@?0@"AFAnalyticsEvent"8Q16^B24
media
hasTurnID
T@"NSData",&,N,V_turnID
-[AFClockAlarmObserver init]
com.apple.assistant.clock-alarm-observer
-[AFClockAlarmObserver init]_block_invoke_2
-[AFClockAlarmObserver getAlarmSnapshotWithCompletion:]
-[AFClockAlarmObserver getAlarmSnapshotWithCompletion:]_block_invoke_2
-[AFClockAlarmObserver getAlarmSnapshotWithCompletion:]_block_invoke
-[AFClockAlarmObserver clockItemStorageDidUpdate:insertedItemIDs:updatedItemIDs:deletedItemIDs:]
v16@?0@"<AFClockAlarmListening>"8
-[AFClockAlarmObserver alarmsAdded:]
-[AFClockAlarmObserver alarmsUpdated:]
-[AFClockAlarmObserver alarmsRemoved:]
-[AFClockAlarmObserver alarmFired:]
-[AFClockAlarmObserver firingAlarmChanged:]
-[AFClockAlarmObserver firingAlarmDismissed:]
-[AFClockAlarmObserver stateReset:]
-[AFClockAlarmObserver stateReset:]_block_invoke_2
-[AFClockAlarmObserver alarmsChanged:]
-[AFClockAlarmObserver alarmsChanged:]_block_invoke_2
v16@?0@"<AFClockAlarmSnapshotMutating>"8
-[AFClockAlarmObserver _setUp]
alarm observer
-[AFClockAlarmObserver _tearDown]
-[AFClockAlarmObserver _fetchAlarmsForReason:completion:]
-[AFClockAlarmObserver _handleFetchAlarmsForReason:error:completion:]
v32@?0@"NSUUID"8@"AFClockAlarm"16^B24
ObjectUpdatedResponseObjectIdentifier
com.apple.siri.vocabularyupdates
com.apple.siri.appIntentSupportPolicyAndVocab
com.apple.siri.appIntentSupportPolicyAndVocab.nano
-[SASyncAnchor(SyncPrivate) _af_isValid]
machAbsoluteTime
appBundleId
appState
resultCode
Daemon.Launch
Daemon.Loaded
Daemon.Exit
Daemon.Failure
Daemon.StartRequest.Speech
Daemon.StartRequest.Dictation
Daemon.StartRequest.Other
Daemon.StartRequest.Keyboard
Daemon.Audio
Daemon.Audio.Init.Begin
Daemon.Audio.Init.End
Daemon.Audio.Configure.Begin
Daemon.Audio.Configure.End
Daemon.Audio.Prewarm.Begin
Daemon.Audio.Prewarm.End
Daemon.Audio.Prepare.Begin
Daemon.Audio.Prepare.End
Daemon.Audio.FetchRoute.Begin
Daemon.Audio.FetchRoute.End
Daemon.Audio.StartRecording.Begin
Daemon.Audio.StartRecording.End
Daemon.Audio.Recording.Begin
Daemon.Audio.Recording.FirstBuffer
Daemon.Audio.Recording.End
Daemon.Audio.StopRecording.Begin
Daemon.Audio.StopRecording.End
Daemon.Audio.LateBuffer
Daemon.Audio.Analyzer.Startpoint.Detected
Daemon.Audio.Analyzer.Endpoint.Hard.Detected
Daemon.Audio.Failure
Daemon.Audio.BTInfoFetch.Begin
Daemon.Audio.BTInfoFetch.End
Daemon.Audio.FanInfo
Daemon.Audio.FirstChanceTriggerInfo
Daemon.Audio.Recording.Interruption.Begin
Daemon.Audio.Recording.Interruption.End
Daemon.Audio.Endpointer.State
Daemon.Audio.Recording.FirstBuffer.Start
Daemon.Audio.Recording.FirstBuffer.Receipt
Daemon.Audio.Recording.LastBuffer.Start
Daemon.Audio.Recording.LastBuffer.Receipt
Daemon.Audio.Session.SetActive.Begin
Daemon.Audio.Session.SetActive.End
Daemon.Audio.Session.SetInactive.Begin
Daemon.Audio.Session.SetInactive.End
Daemon.Audio.Recording.MissedBuffer
Daemon.Audio.File.Started
Daemon.Audio.TwoShot.Transition.Begin
Daemon.Audio.TwoShot.Transition.End
Daemon.Audio.Recording.Metrics
Daemon.Speech
Daemon.Speech.Capture.Start.Begin
Daemon.Speech.Capture.Start.End
Daemon.Speech.Capture.Update
Daemon.Speech.Capture.Cancel
Daemon.Speech.Capture.Stop
Daemon.Speech.Failure
Daemon.Speech.Capture.Continued
Daemon.Speech.ResultCandidate.Evaluation.Begin
Daemon.Speech.ResultCandidate.Evaluation.End
Daemon.Speech.ResultCandidate.Accepted
Daemon.Speech.ResultCandidate.Stashed
Daemon.Service
Daemon.Service.Handle.Begin
Daemon.Service.Handle.End
Daemon.Service.Bundle.Handle.Begin
Daemon.Service.Bundle.Handle.End
Daemon.GenericIntent
Daemon.GenericIntent.Handle.Begin
Daemon.GenericIntent.Handle.Timeout
Daemon.GenericIntent.Deliver.Begin
Daemon.GenericIntent.Recipient.StateChange
Daemon.GenericIntent.Recipient.Crash
Daemon.GenericIntent.Recipient.Finished
Daemon.GenericIntent.Handle.End
Daemon.Intent
Daemon.Intent.Extension.Prepare
Daemon.Intent.Extension.Ready
Daemon.Intent.Extension.UnexpectedExit
Daemon.Intent.Extension.TimedOut.Launching
Daemon.Intent.Extension.TimedOut.Request
Daemon.Intent.Resolve.Begin
Daemon.Intent.Resolve.Request.Sent
Daemon.Intent.Resolve.Response.Received
Daemon.Intent.Resolve.End
Daemon.Intent.Confirm.Begin
Daemon.Intent.Confirm.Request.Sent
Daemon.Intent.Confirm.Request.Received
Daemon.Intent.Confirm.ResponseUIVisible
Daemon.Intent.Confirm.End
Daemon.Intent.Handle.Begin
Daemon.Intent.Handle.Request.Sent
Daemon.Intent.Handle.Request.Received
Daemon.Intent.Handle.ResponseUIVisible
Daemon.Intent.Handle.End
Daemon.Intent.Launch.WithIntent.Begin
Daemon.Intent.Launch.WithIntent.End
Daemon.Intent.Launch.WithUserActivity.Begin
Daemon.Intent.Launch.WithUserActivity.End
Daemon.Intent.ResolveApp.Begin
Daemon.Intent.ResolveApp.End
Daemon.Intent.Extension.Request.Begin
Daemon.Intent.Extension.Request.End
Daemon.Intent.Extension.Prewarm.Begin
Daemon.Intent.Extension.Prewarm.End
Daemon.Task
Daemon.Task.Schedule
Daemon.Task.Start
Daemon.Task.Deliver
Daemon.Task.Finish
Daemon.Signal
Daemon.DomainSignal.LaunchApp
Daemon.Session
Daemon.Session.Connection.Opened
Daemon.Session.Connection.Snapshot.Local
Daemon.Session.Connection.Snapshot.Remote
Daemon.Session.Connection.Timeout
Daemon.Session.Connection.Dropped
Daemon.Session.Connection.Failed
Daemon.Session.Validation.Failed
Daemon.Session.Authentication.Failed
Daemon.Session.Assistant.Failed
Daemon.Session.Assistant.NotReady
Daemon.Session.RemappedRequestId
Daemon.Session.Connection.Start
Daemon.Session.Connection.Reset
Daemon.Session.Connection.ClientConnectionId.Created
Daemon.Session.Connection.FirstByteReceived
Daemon.Session.Local.Assistant.NotReady
Daemon.Session.Local.Connection.Reset
Daemon.Session.ProxiedRequestId
Daemon.Session.Won
Daemon.Session.LoadAssistant
Daemon.Session.Failed
Daemon.Session.Results.Queued
Daemon.Network
Daemon.Network.Available
Daemon.Network.ServerAddress.Resolved
Daemon.Network.Failure
Daemon.Network.Peer.Error
Daemon.Network.AcePing.Sent
Daemon.Network.AcePong.Received
Daemon.Network.Provider.Open.Begin
Daemon.Network.Provider.Open.End
Daemon.Network.Provider.Secondary.Open.Begin
Daemon.Network.Provider.Secondary.Open.End
Daemon.Network.Link.Recommendation.Begin
Daemon.Network.Link.Recommendation.End
Daemon.Network.Link.Recommendation.Timedout
Daemon.IncomingCommand
Daemon.IncomingCommand.SpeechPartialResult
Daemon.IncomingCommand.SpeechRecognized
Daemon.OutgoingCommand
Daemon.OutgoingCommand.Failure
Daemon.Local.OutgoingCommand.Failure
UI.Plugin.Loaded
UI.Activation.Prepare
UI.Activation.Cancel
UI.Activation.Handle.Begin
UI.Activation.Handle.End
UI.Present.Begin
UI.Present.End
UI.Dismiss.Begin
UI.Dismiss.End
UI.Button.Down
UI.Button.Up
UI.Button.Tap
UI.Blur
UI.Flames.Present
UI.Flames.Dismiss
UI.Mode.Idle
UI.Mode.Listening
UI.Mode.Thinking
UI.Mode.Success
UI.UUFR.Present
UI.Command.Handle.Begin
UI.Command.Handle.End
UI.Failure
UI.TapToEditButton.Tap
UI.URLSessionLoad.Failure
UI.Disambiguation.Selected
UI.TTS.ShouldSpeak
UI.TTS.ShouldNotSpeak
UI.TranscriptItem.Inserted
UI.TranscriptItem.DidAppear
UI.TranscriptItem.DidDisappear
UI.Transcript.Scrolled
UI.Unlock.Presented
UI.Unlock.Dismissed
UI.Device.Locked
UI.Device.Unlocked
UI.Punchout.Begin
UI.Punchout.End
UI.TranscriptItems.Reload.Begin
UI.TranscriptItems.Reload.End
UI.Mode.Presenting
UI.Mode.Idle.Rendered
UI.Mode.Listening.Rendered
UI.Mode.Thinking.Rendered
UI.Mode.Presenting.Rendered
UI.Button.TextRequestInput.Start
UI.Button.TextRequestInput.Done
UI.Button.TextRequestInput.Clear
UI.ViewService
UI.ViewService.Launch
UI.ViewService.Loaded
UI.ViewService.Exit
UI.ViewService.SpeechPartialResult.Received
UI.ViewService.SpeechPartialResult.Presented
UI.ViewService.SpeechRecognized.Received
UI.ViewService.SpeechRecognized.Presented
UI.ViewService.Failure
UI.ViewService.Pin
UI.ViewService.Pin.Begin
UI.ViewService.Pin.End
UI.ViewService.Drag
UI.ViewService.DidAppear
UI.ViewService.DidDisappear
Coverage.AggregateDictionary
Coverage.AggregateDictionary.Scalar
Coverage.AggregateDictionary.Distribution
Coverage.RequestStatistics
Coverage.RequestStatistics.Cancellation
Coverage.RequestStatistics.Failure
Client.StartRequest
Client.StartSpeechRequest
Client.StartSpeechPronunciationRequest
Client.StartAcousticIDRequest
Client.StartContinuityRequest
Client.StartCorrectionRequest
Client.StartDirectActionRequest
Client.StartTextRequest
Client.UpdateSpeech
Client.StopSpeech
Client.CancelSpeech
Client.RequestCanceled
Client.RequestFailed
Client.RequestCompleted
Client.Preheat
Client.AcousticId.Begin
Client.AcousticId.End
Client.Tether.Wait.Begin
Client.Tether.Wait.End
Client.Tether.Attach.Begin
Client.Tether.Attach.End
Client.Tether.Attached
Client.Tether.Detached
Client.Feedback.Presented
Client.AutoDisambiguation.Requested
Client.AutoDisambiguation.Saved
Client.Coord
Client.Coord.AdvertisingWillEnd
Client.Coord.AudioReady
Client.Coord.AdvertisingStartRequest
Client.Coord.AdvertisingDidStart
Client.Coord.AdvertisingEndRequest
Client.Coord.AdvertisingDidEnd
Client.Coord.DecisionMade
Client.Coord.SlowdownGenerated
Client.Coord.SlowdownReceived
Client.Coord.ActivityStart
Client.Coord.ActivityEnd
UI.Watch
UI.Activation.GizmoVTWhileAlreadyRecording
UI.DelayedResponse.Education
UI.DelayedResponse.WristLowered
UI.DelayedResponse.BacklightOn
UI.TTS.Canceled
Client.Dictation
Client.Dictation.StartRequest
Client.Dictation.UpdateSpeech
Client.Dictation.StopSpeech
Client.Dictation.CancelSpeech
Client.Dictation.RequestCanceled
Client.Dictation.RequestFailed
Client.Dictation.RequestCompleted
Client.Dictation.TimeoutRequest
Client.Dictation.SpeechRecording.Started
Client.Dictation.SpeechRecording.Canceled
Client.Dictation.SpeechRecording.Completed
Client.Dictation.SpeechRecording.Failed
Client.Dictation.SpeechRecognition.PhrasesRecognized
Client.Dictation.SpeechRecognition.TokensRecognized
Client.Dictation.SpeechRecognition.TranscriptionObjectsRecognized
Client.Dictation.SpeechRecognition.Completed
Client.Dictation.SpeechRecognition.Failed
Client.Dictation.AppDidEnterBackground
Client.Dictation.SmartLanguageSelection.LanguageOverridden
VoiceTrigger
VoiceTrigger.Start
VoiceTrigger.Fire
VoiceTrigger.End
VoiceTrigger.EarlyDetect
UIPlugin.Movies
UIPlugin.Movies.BeginLoadingMediaButtons
UIPlugin.Movies.EndLoadingMediaButtons
QA.Automation
QA.Automation.Begin
QA.Automation.End
QA.Automation.Mark
CDM.NLService.HandleCommand.Begin
CDM.NLService.HandleCommand.End
CDM.FlowService.HandleCommand.Begin
CDM.FlowService.HandleCommand.End
CDM.Config.AssetManager.OfflineQueryStart
CDM.Config.AssetManager.OfflineQuerySuccess
CDM.Config.AssetManager.OfflineQueryFailed
CDM.Config.AssetManager.OnlineQueryStart
CDM.Config.AssetManager.OnlineQuerySuccess
CDM.Config.AssetManager.OnlineQueryFailed
CDM.Config.AssetManager.AssetDownloadStart
CDM.Config.AssetManager.AssetDownloadCompleted
CDM.Config.AssetManager.AssetDownloadFailed
CDM.Config.AssetManager.AssetDownloadCancelled
CDM.Config.AssetManager.AssetPurged
CDM.StartSpeech.Received
CDM.SetAssistantData.Received
CDM.LoadAssistant.Received
VOXService
VOXService.SpeechSynthesis.Enqueued
VOXService.SpeechSynthesis.Canceled
VOXService.SpeechSynthesis.Failed
VOXService.SpeechSynthesis.Finished
VOXService.SpeechSynthesis.Interrupted
VOXService.SpeechSynthesis.Started
VOXService.TwoShotSound.Begin
VOXService.TwoShotSound.End
VOXService.SessionInactiveSound.Begin
VOXService.SessionInactiveSound.End
VOXService.TapToSiriSound.Begin
VOXService.TapToSiriSound.End
NowPlaying
NowPlaying.isPlaying.Changed
Music
Music.Playback.Ready
Music.Playback.SecureKey
Music.Playback.AssetLoad
Music.Playback.Summary
Xcode
Xcode.Test.Begin
Xcode.Test.End
DeviceConfiguration
DeviceConfiguration.Snapshot
Settings
Settings.SetLanguage
Settings.SetOutputVoice
Settings.SetVoiceFeedback
Settings.ChangedTCCInfo
Settings.ChangedTypeToSiri
Setup
Setup.PHSBootstrapped
Setup.PHSTrainingStarted
Experiment
Experiment.Exposure.SiriVOXSounds
Experiment.Exposure.SiriVOXTapToSiriBehavior
ClientFlow.Plugin
ClientFlow.Plugin.Started
ClientFlow.Plugin.ExecutionStarted
ClientFlow.Plugin.ExecutionFinished
ClientFlow.Plugin.ExecutionFailed
ClientFlow.CFClient
ClientFlow.CFClient.ScripterLoadStarted
ClientFlow.CFClient.ScripterLoadFinished
ClientFlow.CFClient.ScripterWarmedUp
ClientFlow.CFClient.ScripterWarmedUpWithScriptHint
ClientFlow.CFClient.Execution.Started
ClientFlow.CFClient.Execution.Finished
ClientFlow.CFClient.Execution.Failed
ClientFlow.JS
ClientFlow.JS.SiriMini
ClientFlow.JS.ServerFlow
ClientFlow.JS.Provider
ClientFlow.JS.BackgroundAction.Maintenance
ClientFlow.JS.BackgroundAction.ActivityCollection
ClientFlow.JS.BackgroundAction.DataMigration
ClientFlow.ClientScripter
ClientFlow.ClientScripter.Started
ClientFlow.ClientScripter.JSContextSetup.Started
ClientFlow.ClientScripter.JSContextSetup.Finished
ClientFlow.ClientScripter.JSEvaluation.StartedForScript
ClientFlow.ClientScripter.JSEvaluation.FinishedForScript
ClientFlow.ClientScripter.JSExecution.Started
ClientFlow.ClientScripter.JSExecution.Finished
ClientFlow.ClientScripter.JSExecution.Successful
ClientFlow.ClientScripter.JSExecution.Failed
ClientFlow.ClientScripter.Script.SentFromServer
ClientFlow.ClientScripter.Script.RetrievedFromServer
ClientFlow.ClientScripter.Script.LoadedFromMemoryCache
ClientFlow.ClientScripter.Script.LoadedFromFilesystem
ClientFlow.ClientScripter.Script.UsedCachedJSContext
ClientFlow.ClientScripter.Script.UsedDeferredCachedJSContext
ClientFlow.ClientScripter.Script.RetrievalFailed
ClientFlow.ClientScripter.Script.CachingFailed
ClientFlow.ClientScripter.SentCommand
ClientFlow.ClientScripter.SentCommandAsync
ClientFlow.ClientScripter.ReceivedResponse
ClientFlow.ClientScripter.JSContextCreatedInWarmup
ClientFlow.ClientScripter.JSContextEvaluatedScriptInWarmupForScript
ClientFlow.ClientScripter.CachedJSContextCount
ClientFlow.ClientScripter.ExecutionFailed
UI.Card.PresentBegin
UI.Card.PresentEnd
UI.Card.SectionPresentBegin
UI.Card.SectionPresentEnd
UI.Card.EngagedWith
UI.Card.SectionEngagedWith
UI.Card.AsyncCardRequested
UI.Card.AsyncCardReceived
AssistantService
AssistantService.Launch
AssistantService.Exit
AssistantService.Message.Send
AssistantService.Message.Delivered
AssistantService.Message.Begin
AssistantService.Message.End
AssistantService.CommandPerform.Begin
AssistantService.CommandPerform.End
AssistantService.BundleLoading.Begin
AssistantService.BundleLoading.End
CloudKit
CloudKit.Siri.ChangeArrived
CloudKit.Knowledge.ChangeArrived
IDS.DeviceConnection.Snapshot.Local
Analytics.Store.Database.PostCorruptionDetected
Analytics.Store.Database.OpenFailed
Analytics.Store.Database.IntegrityCheckFailed
Analytics.Store.Database.UnrecoverableErrorDetected
Analytics.Store.Database.PreparationFailed
LocalRecognition
LocalRecognition.Started
LocalRecognition.PartialResult
LocalRecognition.EagerCandidate
LocalRecognition.Package
LocalRecognition.Finished
_acousticFeatureValuePerFrame
_frameDuration
acousticFeatureValuePerFrame
T@"NSArray",R,N,V_acousticFeatureValuePerFrame
frameDuration
Td,R,N,V_frameDuration
_speechRecognitionFeatures
_acousticFeatures
speechRecognitionFeatures
T@"NSDictionary",R,N,V_speechRecognitionFeatures
acousticFeatures
T@"NSDictionary",R,N,V_acousticFeatures
devices
product_type
context_type
recency
playstate
media_type
announce_state
hasNotifyState
hasAudioFileURL
bargeInOverHomeAnnouncementPlayback
bargeInOverSiriRequest
bargeInOverSiriVoiceOutput
bargeInOverFiringAlarm
bargeInOverFiringTimer
bargeInOverMediaPlayback
isRecordedAudio
hasDirectAction
hasHandoffRequestData
hasHandoffURLString
hasCorrectedSpeech
offlineLanguageCode
languageDetectionContext
@16@?0@"NSString"8
iPhone
iPad
iPod
Watch
PersonalDevice
AppleTV
AudioAccessory
AFAnalyticsContextCreateForCrossDeviceCommandHandled_block_invoke
targetDevices
result
refId
-[SABaseAceObject(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]
viewId
domain
utteranceView
dialogIdentifiers
views
dialogs
isWHA
bytes
v32@?0@"NSNumber"8@16^B24
code
underlyingError
smsInitiate
smsRead
smsCompose
smsReply
phoneInitiate
phoneCall
phoneVoicemail
acousticId
musicSmartPlayInitiate
musicSearch
mapsSearch
mapsSearchInNav
guideUpdateAndShow
appLaunch
weatherInitiate
calendarInitiate
newsInitiate
spokenNotificationInitiate
homeAnnouncementsRead
runVoiceShortcut
com.apple.siri.create
com.apple.siri.load
com.apple.siri.invoked
hardware_button
voice_trigger
com.apple.siri.settings
com.apple.message.siri.enabled
com.apple.message.dictation.enabled
Other
dictation_success_timestamp
assistant_success_timestamp
carplay_success_timestamp
carplay_connect_timestamp
com.apple.siri.
-[AFAggregator recordSessionRetrySuccess]
com.apple.siri.RetrySuccess
com.apple.siri.WWAN.FallbackSuccess
+[AFAggregator logRequestCompletedWithDuration:]
com.apple.siri.RequestDurationLessThan1Second
com.apple.siri.RequestDuration1Second
com.apple.siri.RequestDuration2Seconds
com.apple.siri.RequestDuration3Seconds
com.apple.siri.RequestDuration4Seconds
com.apple.siri.RequestDuration5Seconds
com.apple.siri.RequestDuration6Seconds
com.apple.siri.RequestDuration7Seconds
com.apple.siri.RequestDuration8Seconds
com.apple.siri.RequestDuration9Seconds
com.apple.siri.RequestDurationOver10Seconds
com.apple.siri.context.missed.app
com.apple.siri.context.missed.alert
com.apple.siri.RequestCancel.LessThan1
com.apple.siri.RequestCancel.2Seconds
com.apple.siri.RequestCancel.3Seconds
com.apple.siri.RequestCancel.4Seconds
com.apple.siri.RequestCancel.5Seconds
com.apple.siri.RequestCancel.6Seconds
com.apple.siri.RequestCancel.7Seconds
com.apple.siri.RequestCancel.8Seconds
com.apple.siri.RequestCancel.9Seconds
com.apple.siri.RequestCancel.10Seconds
com.apple.siri.RequestCancel.11Seconds
com.apple.siri.RequestCancel.12Seconds
com.apple.siri.RequestCancel.13Seconds
com.apple.siri.RequestCancel.14Seconds
com.apple.siri.RequestCancel.15Seconds
com.apple.siri.RequestCancel.20Seconds
com.apple.siri.RequestCancel.25Seconds
com.apple.siri.RequestCancel.30Seconds
com.apple.siri.RequestCancel.35Seconds
com.apple.siri.RequestCancel.40Seconds
com.apple.siri.RequestCancel.40SecondsOrMore
%@.%ld.
%@.%ld
+[AFAggregator logRequestLaunchedApp]
com.apple.siri.SiriSucceeded
com.apple.siri.SiriCancelled
+[AFAggregator logSiriSpeechRequestStarted]
com.apple.siri.SiriStarted.Speech
+[AFAggregator logSiriOtherRequestStarted]
com.apple.siri.SiriStarted.Other
+[AFAggregator logSiriRequestFailedWithError:]
com.apple.siri.SiriFailed.
+[AFAggregator logSiriRequestSucceeded]
+[AFAggregator logSiriRequestCancelled]
+[AFAggregator logDictationStarted]
com.apple.siri.DictationStarted
+[AFAggregator logDictationFailedWithError:]
com.apple.siri.DictationFailed.
+[AFAggregator logDictationSucceeded]
com.apple.siri.DictationSucceeded
+[AFAggregator logDictationCancelled]
com.apple.siri.DictationCancelled
+[AFAggregator logDictationFollowedByContinueOccurredForLanguage:]
com.apple.siri.DictationFollowedByContinue.
+[AFAggregator logDictationFollowedByKeyboardInputOccurredForLanguage:]
com.apple.siri.DictationFollowedByKeyboardEntry.
+[AFAggregator logDictationFollowedByKeyboardDeleteOccurredForLanguage:]
com.apple.siri.DictationFollowedByKeyboardDelete.
+[AFAggregator logKeyboardInputFollowedByContinueOccurredForLanguage:]
com.apple.siri.KeyboardEntryFollowedByContinue.
+[AFAggregator logUILockCanceledVTActivation]
com.apple.siri.VTActivationCancel.UILocked
com.apple.siri.CreateAssistant
com.apple.siri.LoadAssistant
com.apple.siri.PingTimeout
+[AFAggregator logEnabledState:]
+[AFAggregator logLocalRecognitionAssetEvictedForLanguage:]
com.apple.siri.LocalRecognitionAssetEvicted.
com.apple.siri.LocalRecognitionStarted
com.apple.siri.LocalRecognitionSucceeded
com.apple.siri.LocalRecognitionLoaded.
com.apple.siri.LocalRecognitionWon.
com.apple.siri.LocalRecognitionLost.
com.apple.siri.DESRecording.
.%ld
com.apple.siri.DESEvaluation.
+[AFAggregator logCDMAssetEvictedForAssetType:language:]
com.apple.siri.CDMAssetEvicted.
connectionType
TQ,N,V_type
TB,N,V_hasActiveRequest
com.apple.siri.BeepBringUp.HomeButton
com.apple.siri.PressToActivationDuration.HomeButton
com.apple.siri.Car.GateKeeper.Dismissed.Manual
+[AFAggregator(AssistantUI) logStarkGatekeeperDismissedManuallyForType:]
com.apple.siri.Car.GateKeeper.Appeared
+[AFAggregator(AssistantUI) logStarkGatekeeperAppearedForType:]
Messages
Maps
Cold.
Unknown.
WiFi.
WWAN.
MPTCP.
LedBelly.
POP.
IDS.
Florence.
Local.
ResponseLessThan1Second
Response1Second
Response2Seconds
Response3Seconds
Response4Seconds
Response5Seconds
Response6Seconds
Response7Seconds
Response8Seconds
Response9Seconds
ResponseOver10Seconds
Failed
Dropped
push
_CreateTimestampFile
BKSHIDServicesLastUserEventTime
initBKSHIDServicesLastUserEventTime
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFAggregator.m
softLinkBKSHIDServicesLastUserEventTime
/System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
BackBoardServicesLibrary
attached
-[AFSiriTether waitForAttachment:]
-[AFSiriTether _attach:]
attach
-[AFSiriTether _attach:]_block_invoke
-[AFSiriTether _attachmentStatusUpdate:]
-[AFSiriTether _listenForLaunchNotification]
itemData
numberOfLoops
fadeInDuration
fadeOutDuration
itemURL = %@
itemData = (%ld bytes)
numberOfLoops = %@
volume = %@
fadeInDuration = %@
fadeOutDuration = %@
AFAudioPlaybackRequest::itemURL
AFAudioPlaybackRequest::itemData
AFAudioPlaybackRequest::numberOfLoops
AFAudioPlaybackRequest::volume
AFAudioPlaybackRequest::fadeInDuration
AFAudioPlaybackRequest::fadeOutDuration
AFAudioPlaybackRequest::userInfo
T@"NSURL",R,C,N,V_itemURL
T@"NSData",R,C,N,V_itemData
Tq,R,N,V_numberOfLoops
Tf,R,N,V_volume
Td,R,N,V_fadeInDuration
Td,R,N,V_fadeOutDuration
extension
name = %@
extension = %@
AFBundleResource::name
AFBundleResource::extension
T@"NSString",R,C,N,V_extension
SiriResponseRequestIdentifier
Alarm
T@"STAlarm",&,N,V_alarm
AssistantDirectActionEventKey
AssistantDirectActionEventMessagesConversationKey
AssistantDirectActionEventMessagesConversationGUIDKey
AssistantDirectActionEventMessagesFullNameKey
AssistantDirectActionEventMessagesAddressKey
AFDirectActionEventUnknown
AFDirectActionEventMessagesAmbiguous
AFDirectActionEventMessagesCompose
AFDirectActionEventMessagesComposeNewThread
AFDirectActionEventMessagesRead
AFDirectActionEventMessagesReply
AFDirectActionEventMapsSearch
AFDirectActionEventMusicSearch
AFDirectActionEventGuideUpdate
AFDirectActionEventCalendar
AFDirectActionEventWeather
AFDirectActionEventNews
AFDirectActionEventPhoneAmbiguous
AFDirectActionEventPhoneCall
AFDirectActionEventPhoneVoicemail
AFDirectActionEventAppLaunch
AFDirectActionEventHomeAnnouncementsRead
AFDirectActionEventRunVoiceShortcut
Invalid direct action event
AFDirectActionSourceUnknown
AFDirectActionSourceStark
AFDirectActionSourceStarkAppProxy
AFDirectActionSourceStarkNotification
Invalid direct action source
SKIMessagesInvocation
/System/Library/PrivateFrameworks/SiriKitInvocation.framework/SiriKitInvocation
SKIPhoneInvocation
SKIVoiceShortcutsInvocation
x-sampmedentity
x-sampmeditem
x-sampcollection
x-sampgeniusmix
x-sampplaylist
x-sampcollection-album
x-sampcollection-artist
x-sampcollection-genre
x-sampcollection-title
x-sampcollection-audiobook
x-sampcollection-podcast
x-sampradiotrack
x-sampradio
device
multiverse
store
external
AFValidatedNowPlayingInfo_block_invoke
v32@?0@"NSString"8#16^B24
-[SAMPQueueState(SiriMediaRemoteHelpers) _af_setNowPlayingInfo:]
-[SAMPQueueState(SiriMediaRemoteHelpers) _af_validateAndFinalize]
AFPerformDeviceVolumeAction_block_invoke
v12@?0C8
v16@?0^{__CFArray=}8
AFMediaRemoteSendCommandWithOptions_block_invoke_3
v16@?0@"SACommandFailed"8
v24@?0@"<SAAceCommand>"8@"NSError"16
AFMediaRemoteSendCommandWithOptions_block_invoke
AFGetCurrentItemAdamIDFromNowPlayingInfo
kMRPlaybackStateUnknown
kMRPlaybackStatePlaying
kMRPlaybackStatePaused
kMRPlaybackStateStopped
kMRPlaybackStateInterrupted
kMRPlaybackStateSeeking
<Unknown MRPlaybackState:%u>
AFGetNowPlayingQueueState_block_invoke
AFLanguageOptionsForNowPlayingInfo
_DeviceIdFromNowPlayingInfo
_ListeningToContainerFromNowPlayingInfo
_AddSanitizedKeyAndValueToListeningToContainer
_AFLocalGetMediaPlaybackVolumeNoCheck_block_invoke
v12@?0f8
_AFLocalSetVolumeActionNoCheck_block_invoke
v16@?0^{__CFError=}8
_CheckForSpecialFailureCodesForCurrentlyDisabledMRCommand
_CheckForSpecialFailureCodesForCurrentlyDisabledMRCommand_block_invoke
_AFAddNowPlayingItemInfoToQueue
_AFAddNowPlayingItemInfoToQueue_block_invoke
_LogNowPlayingInfo
_AFAddPlaybackStateToQueue
_AFAddPlaybackStateToQueue_block_invoke
CSAudioSessionController
initCSAudioSessionController_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFMediaRemoteUtilities.m
classCSAudioSessionController
AVAudioSession
initAVAudioSession_block_invoke
classAVAudioSession
/System/Library/Frameworks/AVFoundation.framework/Frameworks/AVFAudio.framework/AVFAudio
AVFAudioLibrary
Options
Criteria
Tq,N,V_options
criteria
T@"STAlarm",&,N,V_criteria
MTTimerIntentSupportSiriContextTimerTypeKey
Call
call
continuation
direct
emergency
emergencyHandled
inEar
other
slowDown
suppressLate
voice
associatedBundleIdentifier
bulletin
aceContext
contextDictionary
associatedBundleIdentifier = %@
bulletin = %@
aceContext = %@
contextDictionary = %@
AFApplicationContext::associatedBundleIdentifier
AFApplicationContext::bulletin
AFApplicationContext::aceContext
AFApplicationContext::contextDictionary
T@"NSString",R,C,N,V_associatedBundleIdentifier
T@"AFBulletin",R,C,N,V_bulletin
T@"AceObject",R,C,N,V_aceContext
T@"NSDictionary",R,C,N,V_contextDictionary
inCase
outOfEar
transparency
com.apple.myriad_work
com.apple.myriad_timer_mgmt
com.apple.myriad_readiness
com.apple.myriad_adv_context
notificationCallback
outputTriggerSeenCallback
inEarTriggerSeenCallback
carplayTriggerSeenCallback
emergencyCallback
defaultsCallback
myriadDecisionRequestCallback
safelyGetAudioData
safelyClearAudioData
com.apple.siri.myriad.readdefaults
-[AFMyriadCoordinator initWithDelegate:]
com.apple.siri.myriad.apayload
com.apple.siri.corespeech.selftrigger
com.apple.siri.myriad.falseemergency
com.apple.siri.myriad.in.ear
com.apple.siri.myriad.jarvis
hh:mm:ss.SSS
-[AFMyriadCoordinator _readDefaults]
ProductType
DeviceClass
iFPGA
watch1,1
watch1,2
Bridge
-[AFMyriadCoordinator _initDeviceClassAndAdjustments]
Library/VoiceTrigger
AFMyriadCoordinatorAudioHashFileBaseDirectory
siriBC
AFMyriadCoordinatorAudioHashFilePath
-[AFMyriadCoordinator preheatWiProx]_block_invoke
-[AFMyriadCoordinator startAdvertisingForPHSSetupAfterDelay:maxInterval:]
-[AFMyriadCoordinator startAdvertisingFromVoiceTriggerWithContext:]_block_invoke
trigger
-[AFMyriadCoordinator _startAdvertisingFromVoiceTrigger]
-[AFMyriadCoordinator startAdvertisingFromVoiceTriggerAdjusted:withContext:]_block_invoke
-[AFMyriadCoordinator startWatchAdvertisingFromVoiceTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator startWatchAdvertisingFromDirectTriggerWithContext:]_block_invoke
DirectTrigger
-[AFMyriadCoordinator startAdvertisingFromDirectTriggerWithContext:]_block_invoke
-[AFMyriadCoordinator startAdvertisingFromOutgoingTriggerWithContext:]_block_invoke
OutgoingTrigger
-[AFMyriadCoordinator startAdvertisingFromInEarTrigger]_block_invoke
InEarTrigger
-[AFMyriadCoordinator startAdvertisingFromCarPlayTrigger]_block_invoke
CarPlayTrigger
-[AFMyriadCoordinator startAdvertisingEmergencyHandled]_block_invoke
-[AFMyriadCoordinator startAdvertisingEmergency]_block_invoke
Emergency
-[AFMyriadCoordinator _startAdvertisingFromInTaskVoiceTrigger]
InTaskVoiceTrigger
-[AFMyriadCoordinator startAdvertisingFromAlertFiringVoiceTriggerWithContext:]_block_invoke
AlertFiringVoiceTrigger
-[AFMyriadCoordinator startResponseAdvertising:]_block_invoke
-[AFMyriadCoordinator startAdvertisingSlowdown:]_block_invoke
end advert delay
-[AFMyriadCoordinator endAdvertisingAfterDelay:]_block_invoke_2
-[AFMyriadCoordinator _endAdvertising:]
-[AFMyriadCoordinator _endAdvertisingAnalyticsContext:]
previous_decision
previous_decision_time
%llu
goodness_scores
decision
device_count
%hhu
winner_goodness
max_slowdown
homepod_involved
winner_device_class
winner_product_type
winner_sent_suppresssion
coordination_allowed
device-group
election
counts
-[AFMyriadCoordinator _endAdvertisingWithDeviceProhibitions:]
Myriad
listening late
wait until after suppress
-[AFMyriadCoordinator endTask]_block_invoke
-[AFMyriadCoordinator setInTask:]_block_invoke
-[AFMyriadCoordinator setupEnabled:]_block_invoke
-[AFMyriadCoordinator _deviceShouldContinue:]
-[AFMyriadCoordinator _winElection]
-[AFMyriadCoordinator _loseElection]
v16@?0@"<AFMyriadSessionMutating>"8
-[AFMyriadCoordinator _addElectionAdvertisementDataToMyriadSession:]
-[AFMyriadCoordinator _createMyriadSessionIfRequired]
-[AFMyriadCoordinator _clearMyriadSession]
v32@?0@"NSUUID"8@"NSData"16^B24
-[AFMyriadCoordinator _clearMyriadSession]_block_invoke
-[AFMyriadCoordinator _initializeTimer]
-[AFMyriadCoordinator _createDispatchTimerWithTime:toExecute:]_block_invoke
listen
-[AFMyriadCoordinator _startTimer:for:thenExecute:]
-[AFMyriadCoordinator _startTimer:for:thenExecute:]_block_invoke
-[AFMyriadCoordinator _cancelTimer]
-[AFMyriadCoordinator _setOverallTimeout]
-[AFMyriadCoordinator _setOverallTimeout]_block_invoke
-[AFMyriadCoordinator _cancelOverallTimeout]
-[AFMyriadCoordinator _enterState:]
listen late
listen wait/emergency
listen emergency handled
preheat timer
filter initialization timer
MYR_NOACTIVITY
MYR_ADVERT_TRIGGER
MYR_LISTEN_LATE
MYR_ADVERT_SUPPRESS_LATE
MYR_WAIT_TASK
MYR_ADVERT_CONT
MYR_ADVERT_SUPPRESS
MYR_WAIT_EMERGENCY_OR_TASK
MYR_ADVERT_EMERGENCY
MYR_ADVERT_HANDLED
MYR_LISTEN_TASK
MYR_WAIT_EMERGENCY_HANDLED
MYR_LISTEN_EMERGENCY
MYR_ADVERT_OUTPUT_TRIGGER
MYR_ADVERT_SLOWDOWN
MYR_PREHEAT
MYR_INIT_FILTERS
<AFMYR_State_ERROR>
-[AFMyriadCoordinator _startListening:]
-[AFMyriadCoordinator _stopAdvertising:]
-[AFMyriadCoordinator _stopListening:]
-[AFMyriadCoordinator _handleStateMachineErrorIfNeeded]
-[AFMyriadCoordinator _testAndFilterAdvertisementsFromContextCollector:voiceTriggerEndTime:advertisementDispatchTime:advertisement:]
-[AFMyriadCoordinator _testAndFilterAdvertisementsFromContextCollector:voiceTriggerEndTime:advertisementDispatchTime:advertisement:]_block_invoke
v32@?0@"NSUUID"8@"AFMyriadAdvertisementContextRecord"16^B24
-[AFMyriadCoordinator _suppressDeviceIfNeededWithVoiceTriggerEndTime:adverisementDispatchTime:]_block_invoke
v32@?0@8@"AFMyriadRecord"16^B24
-[AFMyriadCoordinator _pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:]
contextAdvertisementId
advertismentContext
-[AFMyriadCoordinator _pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:]_block_invoke_2
-[AFMyriadCoordinator _pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:]_block_invoke
currentAdvertisementId
-[AFMyriadCoordinator _setupActionWindows]
-[AFMyriadCoordinator _adjustActionWindowsFromSlowdown:]
-[AFMyriadCoordinator _duringNextWindowExecute:]
-[AFMyriadCoordinator setupAdvIntervalsInDelay:interval:withSlowdown:]
-[AFMyriadCoordinator _advertiseTrigger]
-[AFMyriadCoordinator _advertiseTrigger]_block_invoke
-[AFMyriadCoordinator _advertiseSlowdown]
-[AFMyriadCoordinator _advertiseSlowdown]_block_invoke
-[AFMyriadCoordinator _advertiseWith:afterDelay:maxInterval:thenExecute:]_block_invoke
advertise
v24@?0@"NSData"8@?<v@?>16
-[AFMyriadCoordinator _advertiseWith:afterDelay:maxInterval:thenExecute:]
advert delay
-[AFMyriadCoordinator voiceTriggerRecord]
-[AFMyriadCoordinator slowdownRecord:]
-[AFMyriadCoordinator _shouldContinueFor:]
-[AFMyriadCoordinator _shouldContinueFor:]_block_invoke
-[AFMyriadCoordinator _shouldHandleEmergency]
-[AFMyriadCoordinator _shouldHandleEmergency]_block_invoke
v32@?0@"AFMyriadRecord"8Q16^B24
-[AFMyriadCoordinator _inTaskTriggerWasTooSoon]
-[AFMyriadCoordinator _updateRepliesWith:id:data:]
-[AFMyriadCoordinator notifyCurrentDecisionResult]_block_invoke
-[AFMyriadCoordinator _testAndUpdateWedgeFilter:]
-[AFMyriadCoordinator _initializeWiProxReadinessTimer]
-[AFMyriadCoordinator _suspendWiProxReadinessTimer]
-[AFMyriadCoordinator _clearWiProxReadinessTimer]
-[AFMyriadCoordinator _createWaitWiProxTimer:waitBlock:]_block_invoke
-[AFMyriadCoordinator _waitWiProx:andExecute:]_block_invoke
-[AFMyriadCoordinator _waitWiProx:andExecute:]
-[AFMyriadCoordinator _enterBLEDiagnosticMode]
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.31.2/AFMyriadCoordinator.m
_myriadWorkQueue
-[AFMyriadCoordinator _enterBLEDiagnosticMode]_block_invoke
-[AFMyriadCoordinator _leaveBLEDiagnosticMode]
-[AFMyriadCoordinator recentEventBump]
-[AFMyriadCoordinator _signalEmergencyCallHandled]
SFDiagnostics
initSFDiagnostics_block_invoke
classSFDiagnostics
/System/Library/PrivateFrameworks/Sharing.framework/Sharing
SharingLibrary
sharedUserId
sharedUserId = %@
confidenceScore = %@
AFSharedConfidenceScore::sharedUserId
AFSharedConfidenceScore::confidenceScore
T@"NSString",R,C,N,V_sharedUserId
TQ,R,N,V_confidenceScore
-[AFAudioPowerUpdater _getPowerWithCompletion:]
provider
T@"<AFAudioPowerProviding>",R,N,V_provider
frequency
Tq,R,N,V_frequency
handsFree
hearst
rhodes
stark
voiceOnly
watch
-[AFNotifyStatePublisher initWithName:queue:]
-[AFNotifyStatePublisher _setState:withToken:]
-[AFNotifyStatePublisher _getState:withToken:]
-[AFNotifyStatePublisher _register]
-[AFNotifyStatePublisher _unregister]
invocation_feedback_experiment
featureGroups
invocationFeedbackExperiment
T@"AFExperiment<AFInvocationFeedbackExperiment>",R,N
<%@: %p; handle=%@ (%@)>
_handle
handle
T@"NSString",C,N,V_handle
<%@: %p; fullName=%@ contactHandles=%@>
_contactHandles
_fullName
contactHandles
T@"NSSet",C,N,V_contactHandles
T@"NSString",C,N,V_fullName
com.apple.bluetooth.WirelessSplitterOn
-[AFBluetoothWirelessSplitterSessionStateObserver initWithQueue:delegate:]_block_invoke
-[AFBluetoothWirelessSplitterSessionStateObserver notifyObserver:didReceiveNotificationWithToken:]_block_invoke
-[AFBluetoothWirelessSplitterSessionStateObserver notifyObserver:didChangeStateFrom:to:]_block_invoke
-[AFBluetoothWirelessSplitterSessionStateObserver _setState:]
-[AFAppContextAggregator aggregateContextForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:]
-[AFAppContextAggregator aggregateContextForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:]_block_invoke
SiriDomains
SiriDisambiguationDomains
SiriProviderDomains
/Library/Assistant/UIPlugins
AFClientPluginManager.m
Plugin factory %@ must return a new allocated instance of id<AFSpeakableNamespaceProvider> from speakableNamespaceProviderForAceObject:
instance must conform to AFSpeakableNamespaceProvider, %@
v24@?0@8^B16
com.apple.assistant.analytics-observation.connection
-[AFAnalyticsObserverConnection initWithObservation:]_block_invoke_2
-[AFAnalyticsObserverConnection flushWithCompletion:]
-[AFAnalyticsObserverConnection flushWithCompletion:]_block_invoke_2
-[AFAnalyticsObserverConnection flushWithCompletion:]_block_invoke
-[AFAnalyticsObserverConnection _connectionInterrupted]
-[AFAnalyticsObserverConnection _connectionInvalidated]
com.apple.siri.client-state-manager
-[AFSiriClientStateManager getCurrentStateWithCompletion:]_block_invoke_2
-[AFSiriClientStateManager _aggregateStatesAndPublishIfNeeded]_block_invoke
Q16@?0Q8
-[AFSiriClientStateManager _beginPresentationTransition]
-[AFSiriClientStateManager _beginPresentationTransition]_block_invoke
Timeout
-[AFSiriClientStateManager _endPresentationTransitionForReason:]
hasActiveSession
TB,N,V_hasActiveSession
isListening
TB,N,V_isListening
isSpeaking
TB,N,V_isSpeaking
action
local_request
start_request
request_options
activation_context
notification
source_app_id
activation_result
com.apple.assistant.home-announcement-observer
v24@?0Q8@"AFHomeAnnouncement"16
client request without cache
-[AFHomeAnnouncementObserver _setUp]
-[AFHomeAnnouncementObserver _tearDown]
-[AFHomeAnnouncementObserver _fetchStateAndLastPlayedAnnouncementForReason:completion:]
-[AFHomeAnnouncementObserver _handleNotifyStateChangeFrom:to:]
-[AFHomeAnnouncementObserver _updateState:]
v16@?0@"<AFHomeAnnouncementListening>"8
-[AFHomeAnnouncementObserver _updateLastPlayedAnnouncement:]
-[AFHomeAnnouncementObserver _updateSnapshot:]
v32@?0@"NSString"8@"SASAcousticFeature"16^B24
utterance
beginTimestamp
endTimestamp
utterance = %@
beginTimestamp = %@
endTimestamp = %@
AFSpeechSynthesisRecord::utterance
AFSpeechSynthesisRecord::beginTimestamp
AFSpeechSynthesisRecord::endTimestamp
T@"NSString",R,C,N,V_utterance
TQ,R,N,V_beginTimestamp
TQ,R,N,V_endTimestamp
com.apple.myriad_emergncy_call
-[AFMyriadEmergencyCallPunchout initiateEmergencyCallMyriad]
recordRoute
isVoiceTrigger
isDucking
isTwoShot
speechEndHostTime
languageCode = %@
gender = %@
recordRoute = %@
isVoiceTrigger = %@
isDucking = %@
isTwoShot = %@
speechEndHostTime = %@
AFInterstitialConfiguration::style
AFInterstitialConfiguration::languageCode
AFInterstitialConfiguration::gender
AFInterstitialConfiguration::recordRoute
AFInterstitialConfiguration::isVoiceTrigger
AFInterstitialConfiguration::isDucking
AFInterstitialConfiguration::isTwoShot
AFInterstitialConfiguration::speechEndHostTime
Tq,R,N,V_gender
T@"NSString",R,C,N,V_recordRoute
TB,R,N,V_isVoiceTrigger
TB,R,N,V_isDucking
TB,R,N,V_isTwoShot
TQ,R,N,V_speechEndHostTime
optedIn
optedOut
dismissed
doubleTap
voiceActivity
voiceTrigger
raiseToSpeak
boronSignal
press
release
triggerless
inEarDetection
bluetoothVoiceRecognitionActivation
multiUserSharedUserIdKey
multiUserConformingSharedUserIdKey
com.apple.assistant.multiuser.connection
-[AFMultiUserConnection _clearConnection]
-[AFMultiUserConnection _multiUserServiceWithErrorHandler:]
-[AFMultiUserConnection getHomeUserIdForSharedUserId:completion:]
-[AFMultiUserConnection getFirstNameForSharedUserId:completion:]
-[AFMultiUserConnection getSharedUserIdForHomeUserId:completion:]
-[AFMultiUserConnection getSharedUserProfileLimitWithCompletion:]
-[AFMultiUserConnection getConformingSharedUserIdForHomeUserId:completion:]
-[AFMultiUserConnection getConformingSharedUserIds:]
-[AFMultiUserConnection getMultiUserSettingsForSharedUserID:completion:]
-[AFMultiUserConnection getMultiUserSettingsForSharedUserID:completion:]_block_invoke_2
ModelObjects
-[STSiriContext _aceValue]
Unknown.%ld
instrumentation.
_deliveryStream
_contextDataType
_contextData
deliveryStream
TQ,R,N,V_deliveryStream
contextDataType
Tq,R,N,V_contextDataType
(unknown: %i)
_settingChanges
actionType
actionType = %ld (%@)
error = %@
AFSiriActivationResult::actionType
AFSiriActivationResult::error
Tq,R,N,V_actionType
T@"NSError",R,C,N,V_error
executionID
requestID
originPeerInfo
executionID = %@
requestID = %@
originPeerInfo = %@
AFCommandExecutionInfo::executionID
AFCommandExecutionInfo::requestID
AFCommandExecutionInfo::originPeerInfo
AFCommandExecutionInfo::userInfo
T@"NSString",R,C,N,V_executionID
T@"NSString",R,C,N,V_requestID
T@"AFPeerInfo",R,C,N,V_originPeerInfo
hasEventType
Ti,N,V_eventType
hasEventData
T@"NSData",&,N,V_eventData
Library/Assistant
Library/Keyboard
System/Library/Assistant
Plugins
PresentationPlugins
amos
committed=yes
Installed
High Quality
assistant
dictation
Version: %@
Version:
Version: HQ:
Installing
Waiting to Install
: HQ:
 AssetId=
OfflineDictationCapability
DeviceName
 Simulator
UserAssignedDeviceName
ProductName
BuildVersion
ProductVersion
PPTDevice
cellular-data
HasBaseband
telephony
wapi
ipad
DeviceClassNumber
watch-companion
NRWatchOSVersion
NRVersionIsGreaterThanOrEqual
main-screen-scale
DeviceColor
DeviceEnclosureColor
AppleInternal/Library/Assistant/InternalConfig.plist
com.apple.Carousel
_AFDictationLanguageForKeyboardLanguageAndConfiguration
+N9mZUAHooNvMiQnjeTJ8g
U+73bmG4kBGj6kpreQXUTQ
DeviceSupportsAOP
DeviceSupportsSiriBargeIn
RegionCode
0AJUv/uYPsRiZNGpWJ7zfg
kern.boottime
AFSystemGetBootTimeInMicroseconds_block_invoke
AFAddInterruptingAudioSessionInfoToAnalyticsContext
kAudioSessionProperty_ActiveSessionDisplayIDs
No displayIDs found, but success reported
Terminated
Suspended
BackgroundRunning
ForegroundRunning
ProcessServer
RunningObscured
SnippetName
SnippetDomain
SnippetAction
SnippetAceId
PunchoutApp
NSSiriUsageDescription
NSSpeechRecognitionUsageDescription
FlashlightLevel
com.apple.springboard
v16@?0@"<AFCallSiteInfoMutating>"8
Speaker
Receiver
BluetoothDoAP
SFSpeech
com.apple.siri.bundleservicecache.plist
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
NRPairedDeviceRegistry
initNRPairedDeviceRegistry_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFUtilities.m
classNRPairedDeviceRegistry
NRDevicePropertyDeviceBrand
initNRDevicePropertyDeviceBrand_block_invoke
NRDevicePropertyIsAltAccount
initNRDevicePropertyIsAltAccount_block_invoke
_AFHandleSignalByExitingCleanly
_AFSpecificFallbackForLanguage
Language Fallbacks
zh-SG
zh-Hant
ja-Hira
ja-Hrkt
ja-Jpan
ja-Hani
ja-Kana
ja-Latn
yue-Hant
_AFMachAbsoluteTimeRate_block_invoke
InfoPlist
BluetoothManager
initBluetoothManager_block_invoke
classBluetoothManager
BBGetObserverGatewayTimeout
/System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
conversationItemType
Tq,R,N,V_conversationItemType
T@"AceObject",R,N,V_aceObject
T@"NSString",R,C,N,V_aceCommandIdentifier
TB,R,N,GisTransient,V_transient
TB,R,N,GisSupplemental,V_supplemental
TB,R,N,GisImmersiveExperience,V_immersiveExperience
indexPath
T@"NSIndexPath",R,N,V_indexPath
playbackState = %ld (%@)
nowPlayingTimestamp = %@
mediaType = %@
groupIdentifier = %@
AFMediaPlaybackStateSnapshot::playbackState
AFMediaPlaybackStateSnapshot::nowPlayingTimestamp
AFMediaPlaybackStateSnapshot::mediaType
AFMediaPlaybackStateSnapshot::groupIdentifier
isPlaying
command
T@"AceObject<SAAceCommand>",R,N,V_command
defaultReply
T@"AceObject<SAAceCommand>",R,N,V_defaultReply
v24@?0Q8^B16
v24@?0@"NSUUID"8^B16
conversation
T@"AFConversation",R,N,G_conversation,V_conversation
parentItemIdentifier
T@"NSUUID",R,N,G_parentItemIdentifier,V_parentItemIdentifier
_triggerlessListeningOptions
triggerlessListeningOptions: %@
triggerlessListeningOptions
T@"AFTriggerlessListeningOptions",C,N,V_triggerlessListeningOptions
_pid
%@ %@ %d
Ti,N,V_pid
alarmID
alarmURL
hour
minute
repeatOptions
isSnoozed
alarmID = %@
alarmURL = %@
type = %lu [%@]
hour = %@
minute = %@
repeatOptions = %lu [%@]
isSnoozed = %@
AFClockAlarm::alarmID
AFClockAlarm::alarmURL
AFClockAlarm::isFiring
AFClockAlarm::title
AFClockAlarm::type
AFClockAlarm::hour
AFClockAlarm::minute
AFClockAlarm::repeatOptions
AFClockAlarm::isEnabled
AFClockAlarm::isSnoozed
AFClockAlarm::firedDate
AFClockAlarm::dismissedDate
AFClockAlarm::lastModifiedDate
T@"NSUUID",R,C,N,V_alarmID
T@"NSURL",R,C,N,V_alarmURL
TQ,R,N,V_type
TQ,R,N,V_hour
TQ,R,N,V_minute
TQ,R,N,V_repeatOptions
TB,R,N,V_isSnoozed
UnnamedPowerAssertion
AFContextDonationService
-[AFContextDonationService _clearConnection]
-[AFContextDonationService donateContext:withMetadata:pushToRemote:]_block_invoke_2
v24@?0@"<AFContextSnapshot>"8@"AFDeviceContextMetadata"16
isDeviceOwnedByCurrentUser
idsIdentifier
idsDeviceUniqueIdentifier
rapportEffectiveIdentifier
isCommunalDevice
buildVersion
userInterfaceIdiom
aceVersion
isDeviceOwnedByCurrentUser = %@
idsIdentifier = %@
idsDeviceUniqueIdentifier = %@
rapportEffectiveIdentifier = %@
isCommunalDevice = %@
productType = %@
buildVersion = %@
userInterfaceIdiom = %@
aceVersion = %@
AFPeerInfo::isDeviceOwnedByCurrentUser
AFPeerInfo::idsIdentifier
AFPeerInfo::idsDeviceUniqueIdentifier
AFPeerInfo::rapportEffectiveIdentifier
AFPeerInfo::mediaSystemIdentifier
AFPeerInfo::mediaRouteIdentifier
AFPeerInfo::isCommunalDevice
AFPeerInfo::roomName
AFPeerInfo::name
AFPeerInfo::productType
AFPeerInfo::buildVersion
AFPeerInfo::userInterfaceIdiom
AFPeerInfo::aceVersion
TB,R,N,V_isDeviceOwnedByCurrentUser
T@"NSString",R,C,N,V_idsIdentifier
T@"NSString",R,C,N,V_idsDeviceUniqueIdentifier
T@"NSString",R,C,N,V_rapportEffectiveIdentifier
TB,R,N,V_isCommunalDevice
T@"NSString",R,C,N,V_productType
T@"NSString",R,C,N,V_buildVersion
T@"NSString",R,C,N,V_userInterfaceIdiom
T@"NSString",R,C,N,V_aceVersion
processIdentifier
processIdentifier = %@
processName = %@
AFClientInfo::processIdentifier
AFClientInfo::processName
Ti,R,N,V_processIdentifier
T@"NSString",R,C,N,V_processName
sleep
RemoteResponseListenerEndpoint
RemoteUsageResultListenerEndpoint
-[AFSiriTask _initWithRequest:remoteResponseListenerEndpoint:usageResultListenerEndpoint:]
-[AFSiriTask dealloc]
 request=
-[AFSiriTask _responseHandlerConnection]
-[AFSiriTask failWithError:]
-[AFSiriTask failWithError:]_block_invoke
-[AFSiriTask completeWithResponse:]
-[AFSiriTask completeWithResponse:]_block_invoke
-[AFSiriTask reportUsageResult:]
-[AFSiriTask reportUsageResult:]_block_invoke
-[AFSiriTask initWithXPCDictionary:]
AFAccessibilityObserver
v16@?0@"<AFAccessibilityStateMutating>"8
T@"AFAccessibilityState",R,C,N
kAXSVoiceOverTouchEnabledNotification
initkAXSVoiceOverTouchEnabledNotification_block_invoke
/Library/Caches/com.apple.xbs/Sources/MobileAssistantFramework_Sim/MobileAssistantFramework-2152.26/AFAccessibilityObserver.m
/usr/local/lib/libAccessibility.dylib
/usr/lib/libAccessibility.dylib
libAccessibilityLibrary
kAXSVibrationDisabledPreferenceDidChangeNotification
initkAXSVibrationDisabledPreferenceDidChangeNotification_block_invoke
_AXSVoiceOverTouchEnabled
init_AXSVoiceOverTouchEnabled
softLink_AXSVoiceOverTouchEnabled
_AXSVibrationDisabled
init_AXSVibrationDisabled
softLink_AXSVibrationDisabled
%s %p (Caller = %@)
%s %p (requestClass = %@, isSpeechRequest = %d (%@), isBackgroundRequest = %d)
%s command = %@
%s Enqueued command %@ because it is an interstitial and active request has not presented UUFR yet.
%s Ignored command %@ because it is an interstitial but there's no active request or active request has presented UUFR already.
%s command = %@, isInterstitial = %d
%s interstialPhase = %@
%s interstitalDelay = %f (expected)
%s durationFromSpeechRecordingEnd = %f
%s durationFromSpeechRecognition = %f
%s durationFromSpeechEnd = %f
%s durationFromRequestBegin = %f
%s interstitalDelay = %f (actual)
%s Initial interstitial fired too early!
%s Drop command %@ because UUFR has been presented.
%s Dispatching command %@
%s no delegate method on %@ to handle command: %@
%s shouldSpeak = %d
%s Prepared for input audio power updates. Waiting for _speechCallbackGroup...
%s Started input audio power updates.
%s Stopped input audio power updates.
%s audioSessionID = %lu
%s recordRoute = %@
%s Unable to mark isDucking because the active request is not a speech request. (_activeRequestType = %zd, _activeRequestUUID = %@)
%s Unable to mark isTwoShot because the active request is not a speech request. (_activeRequestType = %zd, _activeRequestUUID = %@)
%s Unable to mark speech recognized because the active request is not a speech request. (_activeRequestType = %ld, _activeRequestUUID = %@)
%s No interstitial has been presented yet, adjusting timings based on updated speech end host time %llu.
%s Skipped timing adjustment because 1 interstitial has been presented.
%s Skipped timing adjustment because %lu interstitials have been presented.
%s Unable to update speech end host time. (_activeRequestType = %zd, _activeRequestUUID = %@)
%s requestUUID = %@, reason %ld, error = %@
%s Dropping delegate callback because request is complete
%s Dropping delegate callback because request is different (_activeRequestUUID = %@, requestUUID = %@)
%s Resetting isCapturingSpeech for %@ for reason: %ld
%s Reporting speech error on connection tear down
%s Connection invalidated
%s Connection interrupted
%s Scheduling request timeout for %f seconds for reason %@
%s Invoking request timeout for reason %@
%s Pausing request timeout for reason %@
%s Resuming request timeout for reason %@
%s Canceling request timeout for reason %@
%s Updated internal state. ShouldSpeak %@
%s Updated internal state. AudioSessionID %@
%s %p %@ %d (%@)
%s %p %@ %@
%s Wrapping up non-siri error in generic error %@
%s Appending additional details to error %@
%s %p %ld
%s Initial interstitial fired %f seconds right before UUFR!
%s reason = %@
%s phase = %@, displayText = %@, speakableText = %@, expectedDelay = %f, context = %@
%s Unable to create an interstitial command because display text and speakable text are both empty.
%s interstitialCommand = %@
%s interstitialReply = %@
%s interstitialError = %@
%s Siri is %@available
%s Begin sending defrost XPC message.
%s End sending defrost XPC message.
%s %p %ld %@
%s %p %lu %ld %@
%s ErrorHandler %{public}@
%s %p %lu
%s Received reply.
%s Overriding activation event in info %@ %@
%s Complete %@
%s Continuing pending speech request %p
%s Failed continuing pending speech request %p %{public}@
%s %@ %@
%s reason = %ld
%s %p %@
%s passed command without ACE ID; inventing one (%@)
%s Performing BackgroundUpdateRequest outside normal request processing flow.
%s Fail to start audio playback request %{public}@ due to error %{public}@.
%s Fail to begin update output audio power due to error %{public}@.
%s Delaying delivery of client command %@ by %f seconds...
%s Delayed delivery of client command %@ by %f seconds.
%s Dropping delayed client command %@ because request already ended.
%s Unexpected nil bundle ID
%s Unexpected nil URL
%s %@ Got dismiss assistant message
%s %@ Got quick stop handled message with actions %tu taken.
%s %p
%s %p (style = %@, recordRoute = %@, isVoiceTrigger = %d, isDucking = %d, isTwoShot = %d, speechEndHostTime = %llu, context = %@)
%s No language preference, using best supported language: %@
%s configuration = %@, context = %@
%s phase = %@, displayText = %@, speakableText = %@, expectedDelay = %f
%s duration = %f
%s configuration = %@
%s initialInterstitialDelay = %f
%s delayBeforeInitial = %f
%s initialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking = %f
%s delayBeforeInitial = %f (adjustment based on speech request info for Hearst)
%s delayBeforeInitial = %f (adjustment based on end-of-speech info)
%s delayBeforeInitial = %f (adjustment for frontend UI)
%s %{private}@
%s Using conversation guid: %{private}@
%s #myriad Pushing Myriad advertisement context %@
%s returning nil; passed invalid property list (%{public}@): %@
%s unable to deserialize property list with version %{public}ld; returning nil
%s returning nil; unable co create associated data store from property list %@
%s Error accessing remote proxy: %@
%s cleared connection: %@
%s created new connection: %@
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Couldn't create analytics log directory at path %{public}@ %{public}@
%s Nothing to do on non-internal install
%s Removing speech log %@ %@
%s Finished, and removed %ld files
%s Couldn't create %@: %@
%s Couldn't serialize: %@
%s Couldn't write to %@: %@
%s Queue block at %s line %lu (queue: %s)
%s Enter block at %s line %lu (queue: %s, waitingTime: %llums)
%s Leave block at %s line %lu (queue: %s, executionTime: %llums)
%s Generated Myriad advertisement context data: %lu bytes
%s Invalid Voicetrigger endtime: %f
%s VoicetriggerEndtime isSane: %d (threshold: %f, me: %f, other: %f, abs-diff: %f adv: %@)
%s Initializing Myriad advertisement context (version: %d)
%s #myriad-advertisementcontext: Received wedged Myriad advertisement context record %@
%s <AFSiriTaskExecution %p>
%s Delivery of task %@ by %@ failed with error %{public}@
%s Task %@ was delivered successfully by %@
%s Handling of %@ timed out after %{public}.2f seconds
%s cancelling watchdog for %@
%s %@ is already completed; not completing again with response %@ %@
%s <AFSiriTaskExecution %p> releasing listener
%s Attempted to convert bytes with invalid length (%ld) to AFTurnIdentifier
%s requestInfo = %@, context = %@
%s result = %@
%s reason = %@, options = %@, context = %@
%s context = %@
%s error = %@
%s intent = %@
%s intentResponse = %@
%s intentForwardingActionResponse = %@
%s servicePort = %@ (incoming, effective)
%s servicePort = %@ (incoming)
%s servicePort = %@ (effective)
%s machServiceName = %@
%s %@
%s User context language code mapping %@ -> %@ (override: %@)
%s %s is not available, as AFError is not designed to be instantiated. Returning nil.
%s outTopLevelErrorPtr is NULL
%s inTopLevelError is nil
%s matchError block is nil
%s buildUnderlyingError block is nil
%s Unable to create the new underlying error from specified block.
%s XPC object is nil.
%s Unexpectec XPC object type.
%s Mapping failed due to nil shared region.
%s Mapping failed due to unexpected mapped length (mappedLength = %zd).
%s Initial playback state fetch completed, playbackState = %@
%s Notified, playbackState = %@
%s playbackState = %@
%s No identifier specified for %@
%s Error connecting to assistantd for notification service: %@
%s Error posting notification %@: %@
%s Connection to assistantd for notification interrupted
%s Connection to assistantd for notification invalidated
%s No response handler for %@
%s Queue and key must be non-nil: %@, %@
%s Queue and stream must be non-nil: %@, %@
%s Error deleting from duet: %@
%s Error saving to duet: %@
%s Unable to get an instance of _DKKnowledgeStore.
%s utterance index (%{public}lu) is out of range
%s base utterance index (%{public}lu) is out of range
%s utterance interpretationIndex (%{public}lu) is out of range of interpretations=%@
%s Phrase length is not the same as interpretationIndices. Phrases=%@, interpretationIndices=%{public}@
%s No utterance text existed for utterance index %{public}lu
%s _phrase count (%{public}ld) not match swapIndices count (%{public}ld)
%s utterance interpretationIndices count (%{public}ld) does not match swapIndices count (%{public}ld)
%s utterance index %{public}lu out of range
%s Error with remoteObjectProxy: %@
%s Boosting XPC queue %@
%s Completed boosting XPC queue %@
%s Failed to send %tu events due to %@. (numberOfRetries = %tu)
%s Dropping %@ because the maximum number of retries was reached.
%s Expected an value responding to -boolValue, but found something else. Returning %@. {key: %@, value: %@}
%s Deprecated method called. Ignoring.
%s %{private}ld
%s No language code saved, but Assistant is enabled - returning: %@
%s supported: %s
%s No language code given, answer is NO.
%s %@ supported: %s
%s preferredLanguages = %@
%s currentLocale identifier = %@
%s total preferences = %@
%s input: nil -> %@
%s Somehow we have no language preferences!
%s preferences %@
%s sentinelOrSpecialCase = %@
%s Special-case: %@ -> %@
%s %@ is intentionally supported as %@
%s Preferred Languages = %@, -> Best Supported Languages = %@
%s falling back to %@
%s Removing "%@" from alternative language map. Please file a radar on Siri Frameworks to remove it permanently.
%s EAR language assets unavailable
%s NL assets unavailable
%s Preferences Changed!
%s Internal Preferences Changed!
%s Language Code Changed: %@!
%s Output Voice Changed!
%s Nano Prefs Changed!
%s Could not parse languageID, passing it through!
%s AFMyriadRecord initfrom: <THISDEVICE> - %@
%s AFMyriadRecord invalid data during init: %@
%s AFMyriadRecord initfrom: %@ - %@
%s Bad data of unexpected length %@ : %@
%s [(rawAudioGoodnessScore + bump) overflow] rawAudioGoodnessScore: %d, bump: %d. Overwriting goodness score to 0xff
%s rawAudioGoodnessScore: %d, bump: %d goodness: %d
%s AFMyriadRecord sanity: %d
%s Deleting sanitized speakable:%@ date:%@
%s %@ %s
%s asking taskmaster=%@ to handle contextRequest=%@
%s Unable to obtain context using %@: %{public}@
%s %@ got context
%s No dialog phase provided for conversation insertions; defaulting to %@
%s ACE object: %@
%s %@: updating item %@ at %@ from ACE object.
%s %@: adding new item %@ at %@ for ACE object.
%s rootNode=%@
%s Unable to add additional speech interpretation, invalid refId
%s passed invalid property list (%@): %{public}@
%s Unable to create conversation from property list with version %{public}ld
%s Queueing command waiting for Myriad decision: %@ (reason = %@).
%s Waited %f seconds for Myriad decision (reason = %@).
%s Dequeueing command for Myriad decision: %@ (reason = %@).
%s BTLE delay monitor watchdog timeout %f
%s Myriad Delay Monitor: Should ignoring Myriad events -> %d.
%s Myriad Delay Monitor: Registering for Myriad event notifications (beginObserver: %p, wonObserver: %p, lostObserver: %p, decisionRepostObserver: %p).
%s Myriad Delay Monitor: Ignoring Myriad repost notifications.
%s Myriad Delay Monitor: Fetching reposted Myriad event notification.
%s Myriad Delay Monitor: Deregistering from Myriad event notifications.
%s Myriad Delay Monitor: Deregistering from reposted Myriad event notification.
%s Myriad Delay Monitor result: YES
%s Myriad Delay Monitor result: NO
%s Myriad Delay Monitor Begin
%s Myriad Delay Monitor received reposted result: YES
%s notifyObserver %p didChangeStateFrom %ld -> %ld
%s Myriad decision is already in pending state.
%s Myriad monitor cancelling existing watch dog timer.
%s Myriad decision is pending.
%s Myriad monitor initializing safety timer with timeout: %f seconds
%s Myriad monitor times out, Myriad is probably unable to finish, clear pending blocks
%s Myriad decision had %d blocks waiting
%s Clear pending for Myriad decision: %@.
%s Myriad decision seen: state is %@.
%s Could not open speech manager dylib: %{public}s
%s Could not find AXSpeechTransformText: %{public}s
%s User Generated Message: %@
%s Transformed Text: %@
%s No argument for weather units.
%s No argument for initLowercase
%s Error fetching meCard %@
%s Timed out fetching meCard  after waiting %0.1g seconds
%s Got %@
%s ERROR: No argument for siriUsageDescription
%s No argument for speechRecognitionUsageDescription
%s Missing argument for contextRoomName
%s Computed value: %@
%s Missing argument for contextDeviceName
%s Timed out fetching peerInfo after waiting %0.1g milliseconds
%s Unhandled functor %@
%s Trying to start speech capture while we are already capturing. This is a client app logic error, cancelling dictation
%s Recognizing incrementally.
%s %@ - %@
%s %p Local speech recognizer model info: %@
%s %p %d
%s %p Started input audio power updates.
%s %p Stopped input audio power updates.
%s Offline language fetch failed: %@
%s %p %@ %@ %@ %llu
%s Sending 1 event
%s Language %@ is %@supported for dictation
%s Inserting activation timestamps since client did not set them
%s Pending dictation request completed
%s %p %@ %@ %@
%s Dictation request completed
%s %p %@ %@ %d
%s Recorded audio dictation request completed
%s Stop requested, delaying till buffer is empty
%s Delayed stop after buffer cleared
%s Language code is nil.
%s Sent data from buffer, actualRuntime=%f, amountSent=%f, outgoingDuration=%f
%s Schedule timer with delay: %.2f
%s Ignoring suppressStopAlert from client
%s Ignoring suppressStartAlert from client
%s externalRequest = %@
%s grouping depth: %ld -> %ld
%s numberOfItems: %lu
%s numberOfItems: %lu -> %lu
%s itemsByID: [+] %@
%s itemsByID: [-] %@
%s itemsByID: [*] %@ -> %@
%s Item changes detected, but there is no inserted, updated or deleted items.
%s generation: %llu -> %llu
%s date: %@ -> %@
%s There's no generation, date or item changes.
%s Attempt to end grouping without a balanced begin grouping.
%s items = %@
%s itemIDs = %@
%s %p Started %@ %d %d
%s %p Finished
%s %p Failed %d %@
%s No command handler in client for command %@
%s %p %@ %d %d
%s %p %@ %d
%s Successfully fetched local route identifier
%s Unable to fetch local route identifier: %@
%s Local route identifier: %@
%s Local group identifier: %@
%s No voice resource found for %@
%s voiceResource=%@
%s Unknown voiceType: %ld
%s No voices loaded for %@, but they were expected
%s returning nil because value for key "%@" is %@, which cannot be coerced to an image
%s returning nil; passed invalid property list (%@): %{public}@
%s sampleRate: %lf frameRate: %d
%s Skipping re-initialization of EPVAD2; no audio consumed yet
%s EPVAD2 reset with existing parameters
%s Failed to reset EPVAD2: %d
%s Could not find endpointer audio unit component
%s AU instantiation error: %{public}d
%s No model available for mode: %{public}d
%s Error reading plist endpoint model at %{public}@
%s Could not set kAUEndpointVADProperty_ViterbiModelData: %{public}d
%s Could not set %@ to %@: %{public}d
%s Could not initialize audio unit: %{public}d
%s Endpointer is configured
%s Unexpected block size of %{public}u, not %{public}u. Skipping this block of audio.
%s Could not process audio via endpointer: %{public}d
%s Got null AQ buffer
%s Not configured
%s Received audio buffer with 8 frames of zeroes
%s Ignoring leading zeros
%s Ignoring samples because we've not crossed our delay threshold
%s No startpoint detected after %f, timing out
%s Ignoring recurrent endpoint at %f becuase it's too early (< %f)
%s Fell back to recurrent endpoint (%f) because one-shot is too early (%f < %f)
%s %@ Resetting with style %ld
%s Could not read kAUEndpointVAD2Property_LatestEndpointerEventTimeSeconds: %{public}d
%s Found one shot startpoint at %.3f seconds
%s Found one shot endpoint at %.3f seconds
%s Could not read kAUEndpointVAD2Property_LatestRecurrentVADEventTimeSeconds: %{public}d
%s Found recurrent startpoint at %.3f seconds
%s Found recurrent endpoint at %.3f seconds
%s Unable to exclude %@ from backup; deleting.
%s task_info() with TASK_VM_INFO returned %d due to %s.
%s Current memory info is %@.
%s Memory pressure condition changed from %@ to %@.
%s Memory pressure condition stayed at %@.
%s Unable to get LSApplicationProxy class.
%s Encountered a bundle proxy that is not a LSApplicationProxy: %@
%s Encountered an application proxy without bundle identifier: %@
%s Encountered an application proxy with an identical bundle identifier: %@
%s Unable to get an instance of LSApplicationWorkspace.
%s Not saving disambiguation event. Item %@ does not exist in object %@
%s Could not get domain objects for %@: %{public}@
%s Error: %@
%s Notify register failed %u
%s Error obtaining CoreDuet knowledge store.
%s contact: %@
%s Error obtaining notificationUsageStream from CoreDuet.
%s Error querying CoreDuet with %@: %@
%s No feedback persisted
%s Error reading data: %@
%s Saved feedback is corrupted: %@
%s Error creating directory: %@
%s Failed to save feedback to disk %@: %@
%s Failed to archive feedback %@: %@
%s Invalid AFMetrics category
%s Unable to fulfill reading request for %@
%s Failed to serialize notification %@: %@
%s Sending xpc message for %@
%s Unable to send xpc message for %@
%s All applications supported. This should only be used for testing.
%s Application does not support required Intents: %@
%s No announceable intents for bundle id: %@
%s Always eligible. This should only be used for testing.
%s Not supported on device
%s Eligble Bluetooth Device Paired: %d, Local Voice Asset Avaiable: %d
%s Always has eligible. This should only be used for testing.
%s Eligible setup state changed, notifying observers
%s Timed out fetching eligible setup status
%s Request can always be handled. This should only be used for testing.
%s audio route: %d
%s In wireless splitter session: %ld, guest connection state: %llu
%s Forcing all user notification request to be handled. This should only be used for testing.
%s Timed out waiting for updates
%s In wireless splitter session: %ld
%s wireless connection state: %llu
%s wireless splitter session state: %ld, error: %@
%s Notifying observers, request can be handled? %d
%s wireless splitter session state changed from %llu to %llu
%s wireless guest connection state changed from %llu to %llu
%s re-fetching eligibility
%s Force updating client, the device is eligible
%s re-fetching eligibility after assistantd is ready
%s previous eligibility: %d, now updating to %d
%s Because pid=0, most likely a connection could never be established to begin with. Likely you are missing an entitlement and/or privilege to look up a mach port.
%s settingsService got error: %@
%s Setting Siri output voice: %@
%s Setting Siri language code: %@
%s Setting Siri output voice:%@ language code: %@
%s Can not get meCard on this device
%s Hit error %@
%s %d
%s %ld
%s Failed to connect and start observing wireless splitter session: %@
%s Failed to connect and stop observing wireless splitter session: %@
%s error is %@
%s Setting siri data sharing optin status to = %@
%s Siri data sharing optin status is set to %@
%s Getting siri data sharing optin status
%s optin status = %@
%s status = %d
%s presented = %d
%s Failed with error %@.
%s Done
%s Error creating directory %@ - %@
%s Error deleting item at %@ - %@
%s Successfully deleted file %@
%s Dictation Sampling: Deleting all the dictation sampling data
%s Dictation Sampling: Done with deleting all the dictation sampling data. Deleted - %@, %@
%s Dictation Sampling: Error while reading plist at location %@ - %@
%s Dictation Sampling: currentSamplingDate is nil. Check if ADDictationOnDeviceSampling is getting initialized.
%s Begin waiting for listening...
%s End waiting for listening (isListening = %d).
%s overrideResult = %@
%s state: %llu -> %llu
%s context = %@, timeoutInterval = %f
%s signal = %ld
%s isListening = %d
%s Language detector enabled - %d (Client: %d, Server: %d)
%s Language detection user context is nil. Not using language detector
%s Skipping dictation fallback code because override %@ has been set for keyboard %@
%s Dictation override %{public}@ is not in our supported list.
%s CSActivationEventNotifier returned error %@ for activation context %@.
%s Unexpected event in context %@.
%s No score is provided in context %@.
%s No device ID is provided in context %@.
%s Unexpected source in context %@.
%s Couldn't find keychain value %@ for account %@ %{public}d
%s Couldn't delete value %@ from keychain for account %@ %{public}d
%s Couldn't update value %@ from keychain for account %@ %{public}d
%s Unable to create an instance of plugin NSPrincipalClass %{public}@
%s Error loading bundle at path "%@":%@
%s Siri plugin does not specify an NSPrincipalClass, unable to load: %@
%s timestamp = %llu, context = %@
%s Deprecated, use AFSiriActivationBluetoothDeviceDoubleTap() or AFSiriActivationBluetoothDeviceVoice() instead.
%s Deprecated, use AFSiriActivationBluetoothDeviceDoubleTap() instead.
%s Deprecated, use AFSiriActivationBluetoothDeviceVoice() instead.
%s Deprecated, use AFSiriActivationBluetoothDeviceBoronSignal() instead.
%s timestamp = %llu, deviceID = %@, context = %@
%s timestamp = %llu, deviceID = %@, score = %f
%s timestamp = %llu, activationTimeShift = %f, deviceID = %@
%s Validating Siri activation context %@...
%s Siri activation context %@ is invalid, because source '%@' does not support event '%@'.
%s Siri activation context %@ is invalid, because source '%@' requires a non-nil device ID.
%s Siri activation context %@ is invalid, because source '%@' is not supported yet.
%s Siri activation context %@ is valid.
%s Siri activation context %@ is valid. (internal override)
%s Invalid context %@.
%s No handler for context %@.
%s Context %@ rejected by handler %@.
%s Unable to resolve speech event for context %@.
%s speechEvent = %ld (%@)
%s Unable to deserialize user info data due to error %@.
%s Unable to serialize user info %@ due to error %@.
%s Unable to deserialize error data due to error %@.
%s Unable to serialize error %@ due to error %@.
%s Invalid message recipient has no actionable contact values %@. Ignoring that recipient.
%s rejecting incoming connection (%@) because it doesn't have the "%@" entitlement
%s accepting incoming connection (%@)
%s %@ asking %@ to handle task %@
%s No execution for this request, it can not be failed %@
%s Unexpected failure %@ of request %@
%s item property list creation block returned nil for item %@
%s %p {%@}
%s assertionUUID = %@, context = %@
%s numberOfPendingAndActiveRecords is %lld
%s numberOfRecords: %llu -> %llu
%s recordUUID = %@
%s numberOfRecords = %llu
%s record = %@
%s numberOfRecords: %llu -> 0
%s assertion = %@, isFirstAssertion = %d
%s assertion = %@, isLastAssertion = %d
%s Not logging event %@ because it has no associated time. Context: %@
%s Attempted to log nil instrumentation event.
%s Not logging instrumentation event %@ because it has no associated time. Turn context: %@
%s Not logging instrumentation type %@ because it is of an unknown type. Context: %@
%s Failed to serialize proto %@ to binary.
%s Failed to serialize proto wrapper %@ to binary.
%s Completed boosting event producer queue %@
%s Failed to serialize context %@ to JSON due to exception %@.
%s Failed to serialize context %@ to JSON due to error %@.
%s An exception has been raised during the execution of the context provider block for logging event (name = %@, timestamp = %f): %@
%s %p Client with pid %{public}d does not have entitlement %@.
%s notifyObserver = %@, fromState = %llu, toState = %llu
%s %p requestInfo = %@, context = %@
%s done
%s %p result = %@
%s %p error = %@
%s %p done
%s %p reason = %@, options = %@, context = %@
%s %p context = %@
%s %p Handling as prewarming...
%s %p Unable to handle context %@ as prewarming due to error %@.
%s %p Handling as activation...
%s %p Unable to handle context %@ as activation due to error %@.
%s %p Handling as deactivation...
%s %p Unable to handle context %@ as deactivation due to error %@.
%s %p requestInfo = %@
%s %p intent = %@, bundleIdentifier = %@
%s %p intentResponse = %@
%s intentForwardingAction = %@, bundleIdentifier = %@
%s Intent handling is not supported on this platform
%s %p delegate = %@
%s Initial timer fetch completed
%s Notified, timerSnapshot = %@
%s timerSnapshot = %@
%s insertedItemIDs = %@
%s  updatedItemIDs = %@
%s  deletedItemIDs = %@
%s notification = %@
%s Timer fetch complete for state reset
%s Timer fetch complete for batched changes
%s reason = %@, error = %@
%s Unable to start app state monitoring because BKSApplicationStateMonitor is nil.
%s BKS assertion was unexpectedly dropped
%s Unable to restart app state monitoring because BKSApplicationStateMonitor is nil.
%s %{public}@ appears to have crashed
%s Could not acquire BKS assertion
%s BKS assertion for %{public}@ timed out after %{public}.2f seconds
%s After timing out, recipient %{public}@ state was %{public}@
%s Couldn't create a SiriTask action %{public}p %{public}@
%s Unable to launch apps because FBSOpenApplicationService is nil %@
%s Unable to take process assertion for background launch because BKSProcessAssertion is nil %@
%s missing expected values dumping everything %@
%s %@ is %@ frontmost=%@
%s Received emergency call initiation signal
%s Received emergency call handled signal
%s Posted emergency call notification
%s Informing Delegate emergency call was handled: %d
%s Informing Delegate emergency call was NOT handled: %d
%s %@ %s %@
%s connection to task service %{public}@ was invalidated
%s connection to task service %{public}@ was interrupted
%s task service was unable to deliver task: %{public}@
%s Initial alarm fetch completed
%s Notified, alarmSnapshot = %@
%s alarmSnapshot = %@
%s Alarm fetch complete for state reset
%s Alarm fetch complete for batched changes
%s Sync info is missing a key
%s SASyncAppMetaData has no bundleID, but it is required for this key
%s SASyncAppMetaData does not have exactly one -syncSlots, as required for this key
%s SASyncAppMetaData has no -applicationClientIdentifier, as required for this key
%s Unexpected product type for CrossDeviceCommandHandled metric: %@
%s Caught an exception %@ while converting metricsContext %@ to Foundation object. 
%s WWAN fallback %@
%s %{public}@
%s %tu
%s logged for key: %@
%s failed to create timestamp file %s %s
%s Waiting for attachment %lf
%s Wait finished %d
%s Sending attachment message
%s Attachment Reply %d
%s Bad NowPlaying Info, expected %@ for key %@ but got %@
%s infoToNowOffset = %g
%s playbackRate = %@
%s adjusted infoToNowOffset = %g
%s calculatedElapsedTime = %g
%s NowPlaying reports we are playing, but we have no ApplicationDisplayID for who is playing
%s We have a NowPlaying listeningToItem but no ApplicationDisplayID for it %@
%s Media Remote reported that the picked route does NOT have volume control
%s Unknown volume action
%s Best failure for MR command %d is %@
%s MRMediaRemoteCommand %d is not supported by NowPlaying app
%s Found %@ value that is illegal (not a 64 bit integer): %@
%s MRMediaRemoteGetNowPlayingClient failed with error %@
%s group=%p Got ApplicationDisplayID %@
%s Exception when decoding subtitle and audio languages %@
%s Bad NowPlaying Info, kMRMediaRemoteNowPlayingInfoUniqueIdentifier gave unexpected item of class %@,  %@
%s No container info
%s Ignoring non-string key %@
%s Processing kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
%s Unexpected non-dictionary value for kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
%s Unexpected non-string value of class %@ for key %@ -- attempting to convert to string
%s Could not make safe value for key %@
%s Got MRMediaRemoteGetMediaPlaybackVolume says %f
%s Media Remote error %@
%s Media Remote reported success
%s Checking if an unsupported skip is unsupported by the app or the content
%s kMRMediaRemoteNowPlayingInfoIsAlwaysLive = %@ %@
%s Reporting SAMPExceededSkipLimitErrorCode instead, because media is always live
%s Failed to create queue request.
%s group=%p No NowPlaying info because nothing is playing right now.
%s group=%p Error getting NowPlaying queue %@
%s group=%p contentItems has %lu items location %ld
%s group=%p previous: %@
%s group=%p next: %@
%s group=%p no contentItems 
%s group=%p got NowPlaying info with %@ keys:
%s %p         %@ -> %@:
%s group=%p lastActivationStoppedNowPlayingApp=%d
%s group=%p MRMediaRemoteGetNowPlayingApplicationPlaybackState gave us state %@
%s group=%p Treating kMRPlaybackStateInterrupted as %@
%s #myriad BTLE audio data signal received
%s #myriad BTLE self trigger signal received
%s #myriad BTLE in ear trigger signal received
%s #myriad BTLE CarPlay trigger signal received
%s #myriad BTLE emergency signal received
%s #myriad BTLE defaults signal received
%s #myriad BTLE myriad decision fetch signal received
%s #myriad BTLE opening audio file at path %{private}s
%s #myriad BTLE could not open audio data file
%s #myriad BTLE could not read 4 bytes from audio data file
%s #myriad Audio file deletion status: %d
%s Attempt to initialize MyriadCoordinator when one already exists.
%s #myriad coordinationEnabled=%d, BLEActivityEnabled=%d 
%s Initialized MyriadCoordinator
%s #myriad reading defaults
%s #myriad reading server provisioned defaults
%s #myriad reading defaults: BTLE device class: %@ (%@) detected, category %ld, adjusting goodness by %ld, std delay %f, trump delay %f, vt_endtime threshold %f
%s BTLE device class: %@ (%@) detected, category %ld, adjusting goodness by %ld, std delay %f, trump delay %f, in_ear delay %f interval %f vt_endtime threshold %f
%s BTLE audio hash base directory %{private}@
%s BTLE audio hash file path %{private}@
%s Preheat shows slowdown for this device as %d msecs
%s BTLE startFromVoiceTrigger inTask=%d, inSetupMode=%d
%s BTLE device class: %@ (%@) detected, adjusting goodness by %d incomingAdjustment %d
%s BTLE overriding to constant goodness %d
%s Downgrading goodness as HS invocation too soon %f for score %d
%s BTLE startFromVoiceTrigger inTask=%d, inSetupMode=%d, ignoringIncomingAdjustment=%d
%s BTLE ignoring watch voice trigger and continuing with ongoing advertisement.
%s BTLE trumping
%s BTLE suppressing trigger in audio output
%s BTLE trumping from in ear voice trigger
%s BTLE trumping from in CarPlay trigger
%s BTLE handling emergency beacon
%s BTLE sending emergency beacon
%s BTLE in-task voice trigger heard
%s BTLE ignoring in-task voice trigger and continuing with ongoing advertisement.
%s BTLE voice trigger during alert heard
%s BTLE suppressing stragglers
%s BTLE advertising slowdown: %d msecs
%s BTLE ending advertising after %f secs delay
%s Myriad decision is based on 0 replies
%s BTLE advertising is being ignored
%s BTLE detected a slowdown signal for %d msecs, resetting election for later time
%s inTask=%d
%s #myriad setupEnabled: %d, current state: %@
%s Coordination disabled, continuing with the request)
%s BTLE deviceShouldContinue:%ld (coordinationDisabled:%ld, isDirectlyActivating:%ld, isInEarTrigger:%ld, isWatch:%ld, suppressLateTrigger:%ld.
%s BTLE notify myriad won
%s BTLE notify myriad loss
%s BTLE unable to cancel against: %@
%s #myriad Election advertisement %@ added to myriad session %@
%s #myriad Initialized myriad session %@ when myriad is in state %@
%s #myriad Clearing myriad session %@
%s #myriad Election advertisement %@ -> %@
%s #myriad Event token: %@, current event token: %@
%s BTLE starting %@ timer for %f secs
%s BTLE %@ timer fires
%s BTLE timer %@ cancelled (%@)
%s BTLE Coordinator setting overall timeout
%s BTLE Coordinator hitting overall timeout, resetting to NoActivity and declaring loss
%s BTLE Coordinator cancelling overall timeout
%s BTLE Coordinator altered state: %@ -> %@
%s #myriad Force stopping BTLE scan
%s BTLE task continuation: %d
%s BTLE task MYR_WAIT_EMERGENCY_OR_TASK only stopping advertising, not listening
%s BTLE emergency is being handled
%s BTLE task MYR_WAIT_EMERGENCY_HANDLED only stopping advertising, not listening
%s BTLE Coordinator in invalid state: %@
%s BTLE notify Myriad win due to state machine error
%s #myriad Context collector returned 0 AFMyriadAdvertisementContextRecords instances
%s #myriad ignoring advert from other deviceGroup %d: %@ data=%@
%s #myriad %@
%s #myriad Suppressing the current device due to late trigger (voicetrigger endtime: %f, advertisement dispatch time: %f, advertisement delay: %f, myriad record count: %ld)
%s #myriad adv dispatch time: %f, voice trigger end time: %f, time since voice trigger: %f (curr time: %llu, time since device boot: %llu), advertisment: %@
%s #myriad Not pushing myriad advertisement context - Valid voicetrigger endtime: %d (curr time: %llu, time since device boot: %llu)
%s #myriad Pushing Myriad advertisment context is complete
%s #myriad Error: %@
%s #myriad current advId: %@ is different from the advId for which the myriad context was dispatched: %@
%s #myriad Not pushing myriad advertisement context - HAL enabled: %d, direct activation: %d
%s BTLE action window trigger time: %@
%s BTLE action window adjusted by slowdown signal %d msecs new time: %@
%s BTLE next action window: %@
%s BTLE Attempt to execute time windowed action when trigger time not initialized
%s endTime: %f targetTime: %f, advInterval: %f, slowDown: %d (ms)
%s adjusted advInterval: %f (secs) device delay: %f (secs), slowDown: %f (secs)
%s adjusted advInterval: %f (secs) adjusted delay: %f (secs), slowDown: %f (secs)
%s BTLE checking if slowdown needed testmsecs=%d msecs=%d state=%@
%s BTLE advertising TEST INDUCED slowdown delay, 2nd pass seen
%s BTLE advertising slowdown finished, advertising delayed trigger
%s BTLE advertising slowdown delay, 2nd pass seen
%s BTLE computed advertising delay: %f finished, interval: %f
%s BTLE slowdown advertising delay: %f finished, interval: %f
%s BTLE ending slowdown advertising, 2nd pass not seen
%s BTLE delay finished, advertising: %@
%s BTLE error: attempting to readvertise %@
%s BTLE starting advert delay timer for %f secs
%s BTLE advertising recentEventBump %d
%s BTLE created slowdown record %@
%s BTLE end advertising summary: %@
%s BTLE summary %lu: %@
%s BTLE emergencyCallSummary: %@
%s BTLE EmergencyCallSummary %lu: %@
%s BTLE Emergency call: this device should handle
%s BTLE Emergency call: This device should NOT handle, another is better
%s BTLE Emergency Call: No device available to handle this call
%s #myriad CurrentTime: %f TrigerTime: %f, ElectionAdvertisementTime: %f, triggerDelta: %f, electionAdvertisementRemainingTime: %f [isIntaskTooSoonForVoiceTriggerActivation = %d, isIntaskTooSoonForDirectActivation = %d, currentElectionAdvertisementIsSane = %d]
%s #myriad BTLE in-task continuous voice trigger heard too soon. Ignoring.
%s #myriad BTLE in-task continious voice trigger heard. NOT ignoring.
%s BTLE Updating record table, data= %@, for %@
%s BTLE Updating record table with a late supression ( %hhu -> %hhu), data= %@, for %@
%s BTLE ignoring this advert because one already exists, data= %@, for %@
%s BTLE ignoring decision result callback (state = %@)
%s BTLE reposting result win (state = %@)
%s BTLE ignoring incoming event bad device class for Horseman %@
%s BTLE ignoring as wedged suppress %@
%s BTLE record %@  isSane: %d
%s #myriad WiProx readiness timer initialized
%s #myriad WiProx readiness timer suspended
%s #myriad WiProx readiness timer wait block cleared
%s #myriad BTLE WiProx readiness timer timed out, WiProx not called
%s #myriad BTLE done waiting on WiProx to execute
%s #myriad Method called on unexpected thread (curr:%{private}s expected:%{private}s)
%s #myriad didRequestForBTLEAdvertisement: %s -> %s, didRequestForBTLEScan: %s -> %s
%s #myriad BTLE not ready, waiting to execute for up to %ld msecs (current HeySiri WPState %ld)
%s BTLE entering diagnostic mode
%s BTLE failed to enter diagnostic mode %@
%s BTLE diagnostic mode timer fired
%s BTLE added diagnostic mode timer for %f seconds %@
%s BTLE leaving diagnostic mode
%s BTLE cancelling diagnostic mode timer for %f seconds %@
%s #myriad check if bump needed
%s #myriad ignoring recent event bump
%s #myriad bumptoGoodness secsAgo=%f yields %d = %f(act) + %f(siri)
%s Posted emergency call handled notification
%s Unable to get average power and peak power from audio power provider %@.
%s Unable to get C string of name from %@.
%s Failed to set state to %llu of %s with token %d (status = %u).
%s Failed to get state of %s with token %d (status = %u).
%s Failed to get registration token of %s (status = %u).
%s Registration token of %s is %d.
%s Registration token of %s is invalidated.
%s initialState = %llu
%s token = %d
%s fromState = %llu, toState = %llu
%s state: %@ -> %@
%s Asking for context for %@
%s Got context for %@
%s begin
%s end with error %@
%s end
%s Took %f seconds to access current state.
%s Acquired presentation transition assertion.
%s Relinquished presentation transition assertion. (signal = %ld, duration = %f)
%s Attempted to begin a presentation transition when there's already a current presentation transition.
%s Attempted to end a presentation transition when there's no current presentation transition.
%s lastPlayedAnnouncement: %@ -> %@
%s snapshot: %@ -> %@
%s TelephonyUtilities is not available on this platform.
%s No connection.
%s ErrorABCD:%@
%s Unable to create context object for Siri model object %@; dropping on floor
%s Can not infer dictation language with no keyboard language
%s %@ countryCode=%@ siriLanguage=%@
%s %@ is specifically supported as %@
%s %@ is an exact match for a dictation language, using it
%s Could not parse keyboard language, giving up
%s preferences %@ -> %@
%s Could not determine keyboard language-code, returning best-guess: %@
%s %@ is the best-choice in the same base language, using it.
%s No dictation language found
%s Failed getting kern.boottime MIB with sysctlnametomib() %s
%s Failed getting kern.boottime with sysctl() %s
%s Failed getting kern.boottime with sysctlbyname() %s
%s kAudioSessionProperty_ActiveSessionDisplayIDs: %@
%s Error fetching kAudioSessionProperty_ActiveSessionDisplayIDs %@
%s Got signal %ld, exiting when clean
%s Using dictation hardcoded fallback %@ for %@
%s Using dictation internal hardcoded fallback %@ for %@
%s mach_timebase_info() failed with %d.
%s machTimebaseInfo.numer = %u, machTimebaseInfo.denom = %u, rate = %f
%s #hal redacted: %@ %@
%s <AFSiriTask %p>
%s Fatal error sending response - couldn't make XPC connection from endpoint: %@
%s Task %@ failed with error %{public}@, but was unable to communicate that to the response handler: %{public}@
%s Task %@ completed, but was unable to communicate that to the response handler: %{public}@
%s Task %@ unable to communicate usage results to handler: %{public}@
%s the encoded request is in an unexpected format: %@
%s the encoded request failed to decode
%s the encoded request failed to decode - make sure you have linked *all* required frameworks. Exception: %{public}@
%s the encoded response endpoint is in an unexpected format: %{public}@
%s no encoded response endpoint: %{public}@
%s the encoded usage results endpoint is in an unexpected format: %{public}@
%s no encoded usage results endpoint: %{public}@
AFConnectionAvailabilityObserver
AFNetworkAvailabilityObserver
NSObject
AFConnection
NSXPCListenerDelegate
AFAudioPowerUpdaterDelegate
AFAccessibilityListening
AFDeviceRingerSwitchListening
AFInterstitialProviderDelegate
Private
Internal
AFConnectionClientServiceDelegate
AFClientServiceDelegate
AFInterstitialProvider
AFInvalidating
_AFInterstitialAction
AFUpdateAlarmRequest
AFGetSettingsRequest
AFSiriRingtone
AFSiriPhoneticContactNames
AFDeviceStateConnection
AFExperimentConfiguration
NSCopying
NSSecureCoding
NSCoding
_AFExperimentConfigurationMutation
AFExperimentConfigurationMutating
AFExperimentConfigurationMutability
AFSecurityConnection
AFSecurityService
AFProviderService
AFProviderServiceDelegate
AFQueue
NSFastEnumeration
AFSetSettingsRequest
AFMyriadAdvertisementContextManager
AFBluetoothWirelessSplitterSessionInfo
_AFBluetoothWirelessSplitterSessionInfoMutation
AFBluetoothWirelessSplitterSessionInfoMutating
AFBluetoothWirelessSplitterSessionInfoMutability
AFSpeechRecordingEventListening
STContactAddress
AFVoiceInfo
AFMutableConversationItem
AFConversationStorable
AFBundleResourceSupport
_AFBundleResourceURLProviding
AFBundleResourceManager
Convenience
AFFlowServiceConnection
AFPhonemeTranscription
AFTranscriptionType
AFDismissAlarmRequest
AFMyriadAdvertisementContextRecord
AFRemoteRequest
AFSiriTaskExecution
AFSiriResponseHandling
AFSiriRequestFailureHandling
AFExperimentGroup
_AFExperimentGroupMutation
AFExperimentGroupMutating
AFExperimentGroupMutability
AFSiriRequestSucceededResponse
AFWatchdogTimer
AFDisambiguationInfo
AFDisambiguationEvent
AFMultiUserStateSnapshot
AFDictionaryConvertible
_AFMultiUserStateSnapshotMutation
AFMultiUserStateSnapshotMutating
AFMultiUserStateSnapshotMutability
AFMyriadContext
_AFMyriadContextMutation
AFMyriadContextMutating
AFMyriadContextMutability
AFSiriActivationConnection
AFSiriActivationService
AFPhonemeMapper
AFGetTimerRequest
AFXPCWrapper
AFAnalyticsObserver
AFLanguageDetectionUserContext
AFSetTimerRequest
AFGetTimerResponse
AFConversationTransaction
AFError
AFAudioPowerXPCProvider
AFAudioPowerProviding
_AFAudioPowerXPCSharedMemory
AFContextManager
AFNowPlayingObserver
AFUserNotificationService
AFUserNotificationServiceDelegate
AFUserNotificationProvider
AFAccessibilityState
_AFAccessibilityStateMutation
AFAccessibilityStateMutating
AFAccessibilityStateMutability
AFPersonalUserSettings
AFUserUtterance
AFUserUtteranceAdditions
AFUserUtteranceSelectionResults
AFSecurityDigestibleChunksProvider
AFSecurityDigestibleChunksProviding
AFClockTimer
_AFClockTimerMutation
AFClockTimerMutating
AFClockTimerMutability
AFAnalyticsConnection
AFAnalyticsServiceDelegate
AFAnalyticsService
AFSyncInfo
AFSpeechPackage
AFSpeechRecordingAlertBehavior
_AFSpeechRecordingAlertBehaviorMutation
AFSpeechRecordingAlertBehaviorMutating
AFSpeechRecordingAlertBehaviorMutability
AFMyriadPerceptualAudioHash
_AFMyriadPerceptualAudioHashMutation
AFMyriadPerceptualAudioHashMutating
AFMyriadPerceptualAudioHashMutability
AFDictionarySchema
AFSettingsService
AFSettingsServiceDelegate
AFMultiUserService
AFSpeechPhrase
AFSpeechUtterance
AFSpeechInterpretation
AFSpeechToken
AFSpeechTokenAdditions
AFDeleteSiriHistoryContext
_AFDeleteSiriHistoryContextMutation
AFDeleteSiriHistoryContextMutating
AFDeleteSiriHistoryContextMutability
AFPreferences
AFObjectCreatedSiriResponse
DictionaryRepresentation
AFMyriadRecord
AFConnectionUserInteractionAssertion
AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable
AFOpportuneSpeakingModuleDataCollection
AFSpeechRecognition
AFAudioState
AFTreeNode
AFAssistedDisambiguationRules
AFSiriTaskContextProvider
AFSiriAppContextProviding
AFConversationError
AFCoercion
AFConversation
AFMyriadAdvertisementContext
_AFMyriadAdvertisementContextMutation
AFMyriadAdvertisementContextMutating
AFMyriadAdvertisementContextMutability
AFMyriadMonitor
AFNotifyObserverDelegate
SiriVOXSounds
AFExperimentForSiriVOXSounds
AFClientConfiguration
_AFClientConfigurationMutation
AFClientConfigurationMutating
AFClientConfigurationMutability
AFSpeakableUtteranceParser
_AFSpeakableUtterancePassThroughProvider
AFSpeakableNamespaceProvider
AFNotifyObserver
AFSUPFunctionProvider
AFDictationService
AFDictationConnection
AFDictationConnectionServiceDelegate
AFDictationServiceDelegate
AFSearchAlarmsResponse
AFSiriActivationHandlerAssistantDaemon
AFSiriActivationHandling
AFBluetoothDeviceInfo
_AFBluetoothDeviceInfoMutation
AFBluetoothDeviceInfoMutating
AFBluetoothDeviceInfoMutability
AFSiriTaskUsageResult
AFFeatureFlags
ConfigOverrides
SWEFeatureFlags
Additions
AFSpeechService
AFSpeechServiceDelegate
Utility
STTimer
AFSpeechRecordingAlertPolicy
_AFSpeechRecordingAlertPolicyMutation
AFSpeechRecordingAlertPolicyMutating
AFSpeechRecordingAlertPolicyMutability
AFExperiment
_AFExperimentMutation
AFExperimentMutating
AFExperimentMutability
AFRequestInfo
AFUpdateAlarmResponse
AFOpportuneSpeakable
AFClockItemStorage
AFCollectionUtilities
BuiltInContextTypes
AFClientLiteInternal
AFClientLiteClientCommandHandling
AFClientLite
AFSynchronousClientLite
AFClientLiteRemoteCommandHandling
AFMediaRemoteDeviceInfo
AFSiriDebugUIRequest
AFLocalization
AFLocalizationAdditions
AFDictationOptions
AFImagePNGData
AFDataStore
_AFDataStoreEntry
AFBluetoothHeadphoneInEarDetectionState
_AFBluetoothHeadphoneInEarDetectionStateMutation
AFBluetoothHeadphoneInEarDetectionStateMutating
AFBluetoothHeadphoneInEarDetectionStateMutability
AFAudioAnalyzer
Endpointer
AFConversationStore
AFDeviceContext
AFDeviceContextMetadata
AFSpeechCorrectionInfo
AFAssertionContext
_AFAssertionContextMutation
AFAssertionContextMutating
AFAssertionContextMutability
AFAnalytics
AFAnalyticsEventRecord
SiriCoreSQLiteRecord
Utilities
AFMemoryPressureObserver
AFTriggerlessListeningOptions
AFNetworkAvailability
AFAccount
AFDisambiguationAssistancePrivate
AFManagedStorageService
AFManagedStorageConnection
AFManagedStore
AFOpportuneSpeakingModelServiceProtocol
AFOpportuneSpeakingModelDelegate
AFOpportuneSpeakingModel
AFCreateAlarmResponse
AFDismissTimerRequest
AFRemoteRequestWatcher
AFSiriActivationListenerDelegate
AFFuture
AFSafetyBlock
AFOneArgumentSafetyBlock
AFTwoArgumentSafetyBlock
AFThreeArgumentSafetyBlock
AFOpportuneSpeakingModelFeedback
AFOpportuneSpeakingModelFeedbackManager
AFMyriadSession
_AFMyriadSessionMutation
AFMyriadSessionMutating
AFMyriadSessionMutability
AFMetrics
AFSiriUserNotificationRequest
AFSiriExternalRequest
AFSiriUserNotificationRequestCapabilityManager
AFSettingsDelegate
AFSiriNotificationRequest
AFSettingsConnection
AFSettingsConnectionServiceDelegate
AFSiriActivationHandlerFrontendProcess
STCity
AFLinkedListItem
AFServiceMediaPlaybackStateSnapshot
STSettingChange
AFSiriRequest
AFSiriActivationHandlerCoreSpeechDaemon
AFLocationSnapshot
_AFLocationSnapshotMutation
AFLocationSnapshotMutating
AFLocationSnapshotMutability
AFAudioDeviceInfo
_AFAudioDeviceInfoMutation
AFAudioDeviceInfoMutating
AFAudioDeviceInfoMutability
AFClockAlarmSnapshot
_AFClockAlarmSnapshotMutation
AFClockAlarmSnapshotMutating
AFClockAlarmSnapshotMutability
AFServiceDeviceContext
_AFServiceDeviceContextMutation
AFServiceDeviceContextMutating
AFServiceDeviceContextMutability
AFSpeechRequestOptions
AFAnalyticsObservationService
AFPluginBundle
AFPluginManager
SISchemaClientTurnBasedEvent
AFContextResponse
AFClockTimerSnapshot
_AFClockTimerSnapshotMutation
AFClockTimerSnapshotMutating
AFClockTimerSnapshotMutability
AFExperimentContext
_AFExperimentContextMutation
AFExperimentContextMutating
AFExperimentContextMutability
STSiriMessage
AFDeviceCapabilities
AFHomeAnnouncementSnapshot
_AFHomeAnnouncementSnapshotMutation
AFHomeAnnouncementSnapshotMutating
AFHomeAnnouncementSnapshotMutability
AFSiriTaskService
AFSiriTaskDeliveryHandler
AFSiriTaskDelivering
AFSiriTaskmaster
AFSiriUsageResultHandling
AFSiriRequestHandling
STAlarm
AFTreeNodePropertyListSerialization
AFDeleteAlarmRequest
_AFAssertionRecord
AFAssertion
_AFAssertionProxy
AFRelinquishableAssertion
AFAssertionCoordinator
AFDisambiguationStore
AFUpdateMessageRequest
STSiriLocation
AFMemoryInfo
_AFMemoryInfoMutation
AFMemoryInfoMutating
AFMemoryInfoMutability
ClockItem
AFClockItem
AFSiriActivationContext
_AFSiriActivationContextMutation
AFSiriActivationContextMutating
AFSiriActivationContextMutability
ShortDescription
AFSiriActivationListener
SiriVOXTapToSiriBehavior
AFExperimentForSiriVOXTapToSiriBehavior
AFDeviceRingerSwitchObserver
AFCreateMessageRequest
AFUtteranceSuggestions
STCall
AFHomeAnnouncement
_AFHomeAnnouncementMutation
AFHomeAnnouncementMutating
AFHomeAnnouncementMutability
AFShowSettingRequest
STSetting
AFServiceContextSnapshot
AFGetSettingsResponse
AFClockTimerObserver
AFClockItemStorageDelegate
AFUIApplicationSiriTaskDeliverer
AFUIApplicationSiriTaskHandler
AFAceCommandClientFeedbackEnumerating
ClientFeedbackPresented
AFMyriadEmergencyManager
ContextSnapshot
AFContextSnapshot
AFBulletin
AFDialogPhase
AFCallSiteInfo
_AFCallSiteInfoMutation
AFCallSiteInfoMutating
AFCallSiteInfoMutability
AFAnalyticsTurnBasedInstrumentationContext
Instrumentation
AFMachServiceSiriTaskDeliverer
AFMachServiceSiriTaskHandler
AFInstrumentationObserverConnection
AFShowNextEventRequest
SISchemaClientTurnContext
AFClockAlarmObserver
AFObjectUpdatedSiriResponse
AFBundleID
SyncPrivate
AssistantAdditions
AFSpeechAcousticFeature
AFSpeechAudioAnalytics
AnalyticsContextVending
AFAnalyticsContextVending
AFFlowService
AFDeviceStateService
AFDictationDetection
AFAggregator
AssistantUI
AFShowTimerRequest
AFSiriTether
AFAudioPlaybackRequest
_AFAudioPlaybackRequestMutation
AFAudioPlaybackRequestMutating
AFAudioPlaybackRequestMutability
AFBundleResource
_AFBundleResourceMutation
AFBundleResourceMutating
AFBundleResourceMutability
AFSiriResponse
AFCreateAlarmRequest
SiriMediaRemoteHelpers
AFMediaRemoteUtilities
AFSearchAlarmsRequest
AFInitiateCallRequest
AFConversationItem
AFApplicationContext
_AFApplicationContextMutation
AFApplicationContextMutating
AFApplicationContextMutability
AFPendingSpeechRequestService
AFMyriadCoordinator
AFSharedConfidenceScore
_AFSharedConfidenceScoreMutation
AFSharedConfidenceScoreMutating
AFSharedConfidenceScoreMutability
AFAudioPowerUpdater
AFNotifyStatePublisher
InvocationFeedbacks
AFInvocationFeedbackExperiment
STPersonContactHandle
STPerson
AFClientService
AFBluetoothWirelessSplitterSessionStateObserver
AFAppContextAggregator
AFClientPluginManager
AFClientPlugin
AceFactorySupport
VSAdditions
AFAnalyticsObserverConnection
AFContextRequest
AFSiriClientStateManager
_AFSiriClientState
AFSiriAcousticIDRequest
AFSiriMusicSubscriptionLeaseTakenRequest
AFSiriMusicSmartPlayRequest
AFSiriAceRequest
AFSiriActivationRequest
AFHomeAnnouncementObserver
AudioAnalytics
AFSpeechSynthesisRecord
_AFSpeechSynthesisRecordMutation
AFSpeechSynthesisRecordMutating
AFSpeechSynthesisRecordMutability
AFMyriadEmergencyCallPunchout
AFInterstitialConfiguration
_AFInterstitialConfigurationMutation
AFInterstitialConfigurationMutating
AFInterstitialConfigurationMutability
AFMultiUserConnection
STSiriContext
AFAnalyticsEvent
AFSetSettingsResponse
AFSiriActivationResult
_AFSiriActivationResultMutation
AFSiriActivationResultMutating
AFSiriActivationResultMutability
AFCommandExecutionInfo
_AFCommandExecutionInfoMutation
AFCommandExecutionInfoMutating
AFCommandExecutionInfoMutability
SISchemaClientAnyEvent
AMOSExtensions
AFConnectionEntitlementCache
AssistantServices
AFPairedBluetoothDevicesObserver
AFConversationInsertion
AFMediaPlaybackStateSnapshot
_AFMediaPlaybackStateSnapshotMutation
AFMediaPlaybackStateSnapshotMutating
AFMediaPlaybackStateSnapshotMutability
STSiriModelObject
AFInterstitialCommandWrapper
AFChildConversationItemList
AFRequestCompletionOptions
AFApplicationInfo
AFClockAlarm
_AFClockAlarmMutation
AFClockAlarmMutating
AFClockAlarmMutability
AFPowerAssertionManager
AFContextDonationXPCInterface
AFContextDonationService
AFContextDonation
AFSyncSnapshot
AFShowAlarmRequest
AFPeerInfo
_AFPeerInfoMutation
AFPeerInfoMutating
AFPeerInfoMutability
AFClientInfo
_AFClientInfoMutation
AFClientInfoMutating
AFClientInfoMutability
AFSiriTask
BSXPCCoding
AFAccessibilityObserver
defaultCenter
postNotificationName:object:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
networkAvailability:isAvailable:
init
initWithTargetQueue:
errorWithCode:
_connectionFailedWithError:
_clearConnection
dealloc
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_stopInputAudioPowerUpdates
sharedManager
beginListeningForClient:
endListeningForClient:
_requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:isBackgroundRequest:analyticsEventProvider:
_willStartRequestWithSpeech:speechRequestOptions:requestInfo:analyticsEventProvider:
_tellDelegateRequestWillStart
_scheduleRequestTimeoutForReason:
_beginInterstitialsForReason:
_endInterstitialsForReason:
_cancelRequestTimeoutForReason:
assistantConnection:startUIRequestWithText:completion:
assistantConnection:startUIRequestWithInfo:completion:
_enqueueInterstitialCommand:
aceId
setRefId:
_dispatchCommand:isInterstitial:interstitialPhase:interstitialDelay:reply:
assistantConnection:receivedCommand:completion:
sharedAnalytics
logEventWithType:context:contextNoCopy:
_pauseRequestTimeoutForReason:
timeIntervalSinceReferenceDate
processInfo
systemUptime
reportIssueForType:subtype:context:
_resumeRequestTimeoutForReason:
arrayWithObjects:count:
encodedClassName
shouldSpeak
_tellDelegateShouldSpeakChanged:
assistantConnectionDidChangeAudioRecordingPower:
initWithXPCWrapper:
initWithProvider:queue:frequency:delegate:
beginUpdate
_dispatchCallbackGroupBlock:
endUpdate
invalidate
_tellDelegateAudioSessionIDChanged:
isEqualToString:
copy
assistantConnectionRequestWillStart:
_willFailRequestWithError:
assistantConnection:requestFailedWithError:requestClass:
_willCompleteRequest
assistantConnectionRequestFinished:
_requestDidEnd
_checkAndSetIsCapturingSpeech:
assistantConnection:shouldSpeak:
assistantConnection:didChangeAudioSessionID:
logEventWithType:context:
assistantConnectionWillStartAcousticIDRequest:
assistantConnectionDidDetectMusic:
numberWithBool:
dictionaryWithObjects:forKeys:count:
assistantConnection:didFinishAcousticIDRequestWithSuccess:
assistantConnection:setUserActivtiyInfoAndMakeCurrent:webpageURL:
assistantConnectionInvalidateCurrentUserActivity:
assistantConnection:wantsToCacheImage:
assistantConnection:extensionRequestWillStartForApplication:
assistantConnection:extensionRequestFinishedForApplication:error:
assistantConnectionAudioSessionDidBeginInterruption:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:
assistantConnection:willStartAudioPlaybackRequest:
assistantConnection:didStartAudioPlaybackRequest:
assistantConnection:didStopAudioPlaybackRequest:error:
assistantConnection:willProcessStartPlayback:intent:completion:
assistantConnection:willProcessStartPlayback:
assistantConnection:startPlaybackDidFail:
assistantConnection:audioSessionWillBecomeActive:
assistantConnection:audioSessionDidBecomeActive:
assistantConnection:willProcessAppLaunchWithBundleIdentifier:
assistantConnection:appLaunchFailedWithBundleIdentifier:
assistantConnection:speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
assistantConnectionSpeechRecordingWillBegin:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:
assistantConnection:speechRecordingDidChangeAVRecordRoute:
assistantConnectionSpeechRecordingDidDetectStartpoint:
assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:
stringWithFormat:
errorWithCode:description:underlyingError:
assistantConnectionSpeechRecordingDidEnd:
assistantConnectionSpeechRecordingDidCancel:
assistantConnection:speechRecordingDidFail:
assistantConnection:speechRecognized:
assistantConnection:recognizedAdditionalSpeechInterpretation:refId:
assistantConnection:recognitionUpdateWithPhrases:utterances:refId:
assistantConnection:recognitionUpdateWillBeginForTask:
assistantConnection:speechRecognizedPartialResult:
assistantConnection:speechRecognitionDidFail:
setAccessibilityState:
setDeviceRingerSwitchState:
_handleInterstitialPhase:fromProvider:displayText:speakableText:expectedDelay:context:completion:
beginTransaction
_tellSpeechDelegateRecordingDidFail:
_completeRequestWithUUID:forReason:error:
endTransaction
initWithMachServiceName:options:
setInvalidationHandler:
_updateState
_updateClientConfiguration
setInterruptionHandler:
_setQueue:
setRemoteObjectInterface:
setExportedInterface:
initWithConnection:targetQueue:
setExportedObject:
resume
_invokeRequestTimeoutForReason:
initWithTimeoutInterval:onQueue:timeoutHandler:
start
_clientService
cancelRequestForReason:
stop
cancel
_extendRequestTimeoutForReason:
_setShouldSpeak:
numberWithUnsignedInt:
_setAudioSessionID:
requestStateUpdateWithReply:
_clientConfiguration
setConfiguration:
startRequest
length
initWithUUIDString:
startLocalRequest
UUID
beginRequestWithUUID:forClient:
_willCancelRequest
UUIDString
date
timeIntervalSince1970
numberWithDouble:
_startRequestMetricSettings
logEvent:
activationEvent
activationEventTime
activationEventMachAbsoluteTime
logSiriSpeechRequestStarted
logSiriOtherRequestStarted
_updateStateIfNotInSync
sharedObserver
addListener:
endSessionForClient:
logSiriRequestCancelled
removeListener:
endRequestWithUUID:forClient:
domain
code
initWithFormat:
errorWithDomain:code:userInfo:
logSiriRequestFailedWithError:
reportIssueForError:type:subtype:context:
logSiriRequestSucceeded
recordAWDSuccessMetrics
enqueueObject:
isDeviceInStarkMode
isDeviceInCarDNDMode
initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:delegate:
dequeueObject
sharedPreferences
isLocaleIdentifierNativelySupported:
siriIsSupportedForLanguageCode:productName:productVersion:error:
containsObject:
sharedAvailability
addObserver:
beginMonitoringAvailability
isAvailable
removeObserver:
languageCode
outputVoice
_willEndSession
currentCoordinator
endTask
endSession
invalidateClient:
preheatWithStyle:forOptions:
_clientServiceWithErrorHandler:
boostedPreheatWithStyle:completion:
forceAudioSessionActiveWithOptions:completion:
forceAudioSessionActiveWithOptions:reason:completion:
forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:
forceAudioSessionInactiveWithOptions:completion:
resumeInterruptedAudioPlaybackIfNeeded
willPresentUIWithReply:
beginSessionForClient:
didDismissUI
setLockState:showingLockScreen:
setIsDeviceInStarkMode:
mutatedCopyWithMutator:
setIsDeviceInCarDNDMode:
setActivationEvent:
setText:
_startRequestWithInfo:
setLegacyDirectActionIdentifier:
objectForKey:
setHandoffRequestData:
_startRequestWithAceCommand:turnIdentifier:suppressAlert:
startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:turnIdentifier:
setCorrectedSpeech:
setCorrectedSpeechContext:
setTurnIdentifier:
combinedRank
setCombinedRank:
combinedScore
setCombinedScore:
interactionId
setInteractionId:
onDeviceUtterancesPresent
setOnDeviceUtterancesPresent:
originalRank
setOriginalRank:
originalScore
setOriginalScore:
previousUtterance
setPreviousUtterance:
sessionId
setSessionId:
utteranceSource
setUtteranceSource:
speechRequestOptions
_requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:analyticsEventProvider:
startRequestWithInfo:completion:
dictionary
setObject:forKey:
alwaysShowRecognizedSpeech
siriResponseShouldAlwaysPrint
alwaysObscureBackgroundContentWhenActive
useDeviceSpeakerForTTS
_metricContextValueForUseDeviceSpeakerForTTS:
setValue:forKey:
currentLocale
countryCode
setOptions:
setStartLocalRequest:
setStartRequest:
startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:
logSiriInvokedVia:
startRecordingForPendingSpeechRequestWithOptions:requestId:completion:
pendCallbacksUntilAfterContinuation
initWithBlock:
continuePendingSpeechRequestWithId:fromTimestamp:
invoke
serverCommandId
startSpeechPronunciationRequestWithOptions:context:completion:
startAcousticIDRequestWithOptions:context:completion:
cancelRequest
userInfo
reportIssueForError:type:context:
stopSpeechWithOptions:
stopRecordingHostTime
updateSpeechOptions:
rollbackClearContext
rollbackRequest
_unsafeAveragePower
_unsafePeakPower
sendGenericAceCommand:turnIdentifier:conflictHandler:
setAceId:
commands
countByEnumeratingWithState:objects:count:
performGenericAceCommand:interruptOutstandingRequest:reply:
refId
removeObjectForKey:
getDeferredObjectsWithIdentifiers:completion:
initWithBlock:defaultValue:
allValues
setWithArray:
cacheIdentifier
invokeWithValue:
deserializeCacheItems:completion:
getSerializedCachedObjectsWithIdentifiers:completion:
getRemoteClockTimerSnapshotWithCompletion:
clearContext
willSetApplicationContextWithRefId:
setApplicationContext:
fetchAppicationContextForApplicationInfo:supplementalContext:refID:
setOverriddenApplicationContext:withContext:
setAlertContextDirty
prepareForPhoneCall
telephonyRequestCompleted
willPresentUsefulUserResultWithType:forCommand:
_willPresentUsefulUserResultWithType:
startAudioPlaybackRequest:options:reply:
stopAudioPlaybackRequest:immediately:
stopAllAudioPlaybackRequests:
beginUpdateOutputAudioPowerWithReply:
endUpdateOutputAudioPower
updateSpeechSynthesisRecord:
adviseSessionArbiterToContinueWithPreviousWinner:
initialize
assistantIsSupportedForLanguageCode:error:
siriIsSupportedForLanguageCode:deviceProductVersion:error:
assistantIsSupported
stopMonitoringAvailability
currentLanguageCode
defrost
listener:shouldAcceptNewConnection:
audioPowerUpdaterDidUpdate:averagePower:peakPower:
accessibilityObserver:stateDidChangeFrom:to:
deviceRingerObserver:didChangeState:
interstitialProvider:handlePhase:displayText:speakableText:expectedDelay:context:completion:
setDelegate:
_startUIRequestWithText:completion:
_startUIRequestWithInfo:completion:
_handleCommand:reply:
_aceConnectionWillRetryOnError:
_startInputAudioPowerUpdatesWithXPCWrapper:
_setRecordRoute:
_markIsDucking
_markIsTwoShot
_markSpeechRecognized
_updateSpeechEndHostTime:
_tellDelegateWillStartAcousticIDRequest
_tellDelegateDidDetectMusic
_tellDelegateDidFinishAcousticIDRequestWithSuccess:
_tellDelegateSetUserActivityInfo:webpageURL:
_tellDelegateInvalidateCurrentUserActivity
_tellDelegateCacheImage:
_tellDelegateExtensionRequestWillStartForApplication:
_tellDelegateExtensionRequestFinishedForApplication:error:
_tellDelegateAudioSessionDidBeginInterruption
_tellDelegateAudioSessionDidEndInterruption:
_tellDelegateAudioPlaybackRequestWillStart:
_tellDelegateAudioPlaybackRequestDidStart:
_tellDelegateAudioPlaybackRequestDidStop:error:
_tellDelegateWillProcessStartPlayback:intent:completion:
_tellDelegateStartPlaybackDidFail:
_tellDelegateAudioSessionWillBecomeActive:
_tellDelegateAudioSessionDidBecomeActive:
_tellDelegateWillProcessAppLaunchWithBundleIdentifier:
_tellDelegateFailedToLaunchAppWithBundleIdentifier:
_tellSpeechDelegateRecordingWillBeginWithInputAudioPowerXPCWrapper:
_tellSpeechDelegateRecordingDidBeginOnAVRecordRoute:audioSessionID:
_tellSpeechDelegateRecordingDidChangeAVRecordRoute:
_tellSpeechDelegateRecordingDidDetectStartpoint
_tellSpeechDelegateToPerformTwoShotPromptWithType:reply:
_tellSpeechDelegateRecordingDidEnd
_tellSpeechDelegateRecordingDidCancel
_tellSpeechDelegateSpeechRecognized:
_tellSpeechDelegateRecognizedAdditionalSpeechInterpretation:refId:
_tellSpeechDelegateRecordingDidUpdateRecognitionPhrases:utterances:refId:
_tellSpeechDelegateRecognitionUpdateWillBeginForTask:
_tellSpeechDelegateSpeechRecognizedPartialResult:
_tellSpeechDelegateRecognitionDidFail:
_connection
_extendExistingRequestTimeoutForReason:
preheatWithStyle:
forceAudioSessionActive
forceAudioSessionInactive
willPresentUI
setLockState:screenLocked:
setCarDNDActive:
setShouldWaitForMyriad:
setMyriadDecisionResult:
setVoiceOverIsActive:
startRequestWithText:
startDirectActionRequestWithString:
startContinuationRequestWithUserInfo:
startRequestWithAceCommand:
startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:
startRequestWithInfo:
startRequestWithInfo:activationEvent:
startSpeechRequestWithOptions:
startRecordingForPendingSpeechRequestWithOptions:completion:
startSpeechPronunciationRequestWithOptions:pronunciationContext:
startAcousticIDRequestWithOptions:
cancelSpeech
failRequestWithError:
stopSpeech
recordUIMetrics:
recordRequestMetric:withTimestamp:
isRecording
hasActiveRequest
audioSessionID
averagePower
peakPower
sendGenericAceCommand:
sendGenericAceCommand:conflictHandler:
sendReplyCommand:
getCachedObjectsWithIdentifiers:completion:
setApplicationContextForApplicationInfos:withRefId:
setApplicationContextForApplicationInfos:
setAlertContextWithBulletins:
setAlertContextWithClockAlarmSnapshot:
setAlertContextWithClockTimerSnapshot:
usefulUserResultWillPresent
willPresentUsefulUserResultWithType:
checkLanguageReady:completion:
startAudioPlaybackRequest:options:completion:
beginUpdateOutputAudioPowerWithCompletion:
_speechRecordingDidFailWithError:
acquireUserInteractionAssertion
delegate
speechDelegate
setSpeechDelegate:
.cxx_destruct
_targetQueue
_outstandingRequestClass
_clientID
_initiationCallSiteInfo
_cachedBulletins
_cachedClockAlarmSnapshot
_cachedClockTimerSnapshot
_activeRequestUUID
_activeRequestType
_activeRequestUsefulUserResultType
_requestTimeoutTimer
_requestCompletion
_activeRequestActivationEvent
_activeRequestSpeechEvent
_activeRequestHasSpeechRecognition
_activeRequestIsDucking
_activeRequestIsTwoShot
_activeRequestBeginTime
_activeRequestSpeechEndHostTime
_activeRequestNumberOfPresentedInterstitials
_activeRequestStartSpeechTimeRequested
_activeRequestStartSpeechTimeAPICalled
_activeRequestStopSpeechTimeRequested
_activeRequestStopSpeechTimeAPICalled
_activeRequestSpeechRecordingEndTimeInterval
_activeRequestSpeechRecognitionTimeInterval
_activeRequestInitialInterstitialBeginTimeInterval
_replyHandlerForAceId
_stateInSync
_shouldSpeak
_isCapturingSpeech
_hasOutstandingRequest
_audioSessionID
_recordRoute
_playbackRoute
_inputAudioPowerUpdater
_interstitialProvider
_interstitialCommandQueue
_clientConfigurationIsInSync
_voiceOverIsActive
_lastRetryError
_pendingSpeechRequestCounter
_speechCallbackGroup
_delegate
_speechDelegate
startSpeechRequestWithSpeechFileAtURL:isNarrowBand:
_startSpeechWithURL:isNarrowBand:
_requestBarrierWithReply:
_broadcastCommandDictionary:
startSpeechRequestWithSpeechFileAtURL:
requestBarrier:
sendFeedbackToAppPreferencesPredictorForMetricsContext:selectedBundleId:
broadcastCommandDictionary:
_barrierWithReply:
_clearAssistantInfoForAccountIdentifier:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
currentState
state
initWithAccessibilityState:deviceRingerSwitchState:isDeviceInSetupFlow:isDeviceInCarDNDMode:isDeviceInStarkMode:outputVolume:tapToSiriAudioPlaybackRequest:twoShotAudioPlaybackRequest:
_barrier
_clearAssistantInfoForAccountWithIdentifier:
startUIRequest
userDataSyncNeeded
_connectionDelegate
assistantConnection:openApplicationWithBundleID:URL:completion:
assistantConnection:openURL:completion:
assistantConnectionDismissAssistant:
assistantConnection:didHandleQuickStopWithAction:
shouldSpeakChanged:
audioSessionIDChanged:
requestHandleCommand:reply:
requestRequestedOpenApplicationWithBundleID:URL:reply:
requestRequestedOpenURL:reply:
requestRequestedDismissAssistant
quickStopWasHandledWithActions:
acousticIDRequestWillStart
musicWasDetected
acousticIDRequestDidFinishWithSuccess:
setUserActivityInfo:webpageURL:
invalidateCurrentUserActivity
cacheImage:
extensionRequestWillStartForApplication:
extensionRequestFinishedForApplication:error:
startUIRequestWithText:completion:
startUIRequestWithInfo:completion:
getBulletinContext:
getClockContext:
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:reply:
speechRecordingDidBeginOnAVRecordRoute:audioSessionID:reply:
speechRecordingDidChangeAVRecordRoute:isDucking:isTwoShot:speechEndHostTime:reply:
speechRecordingStartpointDetectedWithReply:
speechRecordingPerformTwoShotPromptWithType:reply:
speechRecordingDidEndWithReply:
speechRecordingDidCancelWithReply:
speechRecordingDidFail:reply:
speechRecognized:
speechRecognizedAdditionalInterpretation:refId:
speechRecognizedPartialResult:
speechRecognitionDidFail:
speechRecordingDidUpdateRecognitionPhrases:utterances:refId:
speechRecordingWillBeginRecognitionUpdateForTask:
aceConnectionWillRetryOnError:
audioSessionDidBeginInterruption
audioSessionDidEndInterruption:
audioPlaybackRequestWillStart:
audioPlaybackRequestDidStart:
audioPlaybackRequestDidStop:error:
willProcessStartPlayback:intent:completion:
startPlaybackDidFail:
audioSessionWillBecomeActive:
audioSessionDidBecomeActive:
willProcessAppLaunchWithBundleIdentifier:
appLaunchFailedWithBundleIdentifier:
requestDidReceiveCommand:reply:
initWithDictionary:
bestSupportedLanguageCodeForLanguageCode:
gender
defaultGenderForOutputVoiceLanguageCode:
initWithStyle:languageCode:gender:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:
mutableCopy
_performNextActionWithExpectedDelay:
_invalidate
count
objectAtIndex:
removeObjectAtIndex:
doubleValue
phase
duration
displayKey
sharedInstance
bundleForClass:
localizedStringForKey:table:bundle:languageCode:
speakableKey
_queue
_configuration
_pendingActions
_context
initWithPhase:displayKey:speakableKey:
initWithDuration:
_phase
_displayKey
_speakableKey
_duration
style
isVoiceTrigger
isDucking
isTwoShot
speechEndHostTime
stringByAppendingString:
hasPrefix:
substringFromIndex:
rangeOfString:
setChatIdentifier:
setOutgoing:
setDisplayText:
setData:
setObject:
setMsgRecipients:
dictionaryArrayWithAceObjectArray:
setFullName:
setEmailAddress:
setEmails:
setNumber:
setPhones:
firstObject
_initWithRequest:
encodeWithCoder:
encodeObject:forKey:
initWithCoder:
decodeObjectOfClasses:forKey:
supportsSecureCoding
alarm
createResponse
alarms
setAlarms:
_alarms
settings
setSettings:
_settings
initWithLanguageCode:
assistantIsEnabled
_bestVoiceInfoWithCurrentLocale:
_generateSpokenTextForContacts:voiceLanguage:displayedCallerID:callerIDType:callDestinationID:callDestinationIDType:callServiceSpeakableName:
_spokenTextForContacts:callServiceSpeakableName:languageCode:
_spokenTextForCallerID:ofType:rawCaller:rawCallerType:languageCode:
_spokenTextForCallDestinationID:ofType:callServiceSpeakableName:languageCode:
_phoneticNamesForContact:languageCode:
spokenName
_spokenTextForOneContact:callServiceSpeakableName:languageCode:
givenName
familyName
lastObject
_spokenTextForTwoContacts:callServiceSpeakableName:languageCode:
stringByReplacingOccurrencesOfString:withString:
localeWithLocaleIdentifier:
setLocale:
stringFromNumber:
_spokenTextForThreeContacts:callServiceSpeakableName:languageCode:
numberWithUnsignedLong:
_escapeCallerIDString:forType:
_escapeCallDestinationIDString:forType:
valueForKey:
dataUsingEncoding:
JSONObjectWithData:options:error:
_phoneticInfoForContact:languageCode:firstName:middleName:lastName:nickname:
stringByReplacingPhonemesInString:
pronunciationGivenName
pronunciationFamilyName
phoneticGivenName
phoneticMiddleName
phoneticFamilyName
setLanguageCode:
setGivenName:
middleName
setMiddleName:
setFamilyName:
nickname
setNickname:
organizationName
setOrganizationName:
initWithContacts:
textToSpeak
contacts
setContacts:
displayedCallerID
setDisplayedCallerID:
callerIDType
setCallerIDType:
callServiceSpeakableName
setCallServiceSpeakableName:
callDestinationID
setCallDestinationID:
callDestinationIDType
setCallDestinationIDType:
voiceInfo
_languageMismatch
_voiceLanguage
_contacts
_displayedCallerID
_callerIDType
_callServiceSpeakableName
_callDestinationID
_callDestinationIDType
_voiceInfo
_givenName
_middleName
_familyName
_nickname
_organizationName
_languageCode
sharedConnection
fetchSiriKitApplicationsWithNotificationPreviewRestrictionsWithCompletion:
invokeMethodOnRemoteWithBlock:onError:
getPersonalSettingsForSharedUserID:completion:
fetchSiriKitAppIdentifiersWithNotificationPreviewRestrictionsWithCompletion:
_descriptionWithIndent:
componentsJoinedByString:
numberWithInteger:
type
identifier
version
controlGroup
experimentGroups
salt
decodeObjectOfClass:forKey:
integerValue
setWithObjects:
initWithType:identifier:version:controlGroup:experimentGroups:salt:
copyWithZone:
_type
_identifier
_version
_controlGroup
_experimentGroups
_salt
initWithBaseModel:
setType:
setIdentifier:
setVersion:
setControlGroup:
setExperimentGroups:
setSalt:
generate
_baseModel
_mutationFlags
newWithBuilder:
_invalidateConnection
_dispatchCallbackForProcessedData:error:completion:
_processData:usingProcedure:completion:
_dispatchCallbackForProcessedDataMap:errorMap:completion:
_processDataMap:usingProcedure:completion:
setKeychainValue:forKey:accountIdentifier:completion:
_connectionInterrupted
_connectionInvalidated
processData:usingProcedure:completion:
processDataMap:usingProcedure:completion:
_connectionQueue
_callbackQueue
doCommandForServicePath:className:infoDictionary:executionInfo:reply:
beginSyncForServicePath:className:requestUUID:info:reply:
fetchCurrentSyncSnapshotForServicePath:className:key:completion:
clearDomainObjectsForServicePath:className:
preheatBundleForServicePath:
runMaintenanceWorkForServicePath:className:completion:
reloadServiceBundleAtPath:
interfaceWithProtocol:
syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:
openURL:reply:
dismissAssistant
getLockStateWithReply:
getCarDNDModeWithReply:
getStarkModeWithReply:
handleCommand:executionInfo:completion:
getTimeoutSuspendedWithReply:
assistantServiceWillCrashForStuckSyncPluginAtPath:
prepareForAudioHandoffWithCompletion:
prepareForAudioHandoffFailedWithCompletion:
fetchContextsForKeys:forRequestID:includesNearbyDevices:completion:
setClasses:forSelector:argumentIndex:ofReply:
addObject:
unsignedIntegerValue
nextItem
removeFromList
initWithCapacity:
object
enqueueObjects:
initWithObject:
insertAfterItem:
queue:didEnqueueObjects:
_objects
stringByAppendingFormat:
frontObject
dequeueAllObjects
_head
_tail
_count
_initWithRequest:settingChanges:
encodeBool:forKey:
decodeBoolForKey:
createResponseWithSettingChanges:
_setSettings:
applyChanges
_setApplyChanges:
_applyChanges
setXPCConnectionManagementQueue:
_settingsConnection
myriadAdvertisementContext
initWithMyriadAdvertisementContextRecordData:
deviceID
enumerateKeysAndObjectsUsingBlock:
pushMyriadAdvertisementContext:completionHandler:
_resetSettingsConnection
initWithQueue:
reset
deviceAddresses
initWithState:deviceAddresses:
_state
_deviceAddresses
setState:
setDeviceAddresses:
handleSpeechRecordingEvent:
initWithType:stringValue:contactIdentifier:contactInternalGUID:
initWithType:stringValue:
initWithString:
appendString:
appendFormat:
absoluteString
stringValue
encodeInteger:forKey:
decodeIntegerForKey:
initWithStringValue:
contactIdentifier
contactInternalGUID
_aceContextObjectValue
_stringValue
_contactIdentifier
_contactInternalGUID
data
internalGUID
st_contactAddressValue
initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:
initWithLanguageCode:gender:isCustom:
isEqualToNumber:
genderString
footprintString
boolValue
footprint
isLanguageAndGenderEqual:
dictionaryRepresentation
initWithDictionaryRepresentation:
isCustom
setIsCustom:
name
contentVersion
masteredVersion
setGender:
wasInitalizedFromDictionaryRepresentation
_isCustom
_wasInitalizedFromDictionaryRepresentation
_footprint
_name
_contentVersion
_masteredVersion
_gender
initWithIdentifier:revisionIdentifier:type:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:
initWithIdentifier:type:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:
revisionIdentifier
aceObject
dialogPhase
presentationState
aceCommandIdentifier
isVirgin
isTransient
isSupplemental
isImmersiveExperience
associatedDataStore
af_dialogIdentifier
af_text
af_speakableText
_didMutate
_propertyListStringForType
aceDialogPhaseValue
_propertyListStringForPresentationState
propertyListRepresentation
typeAssertionWithClass:
setObjectCoercion:forKey:
stringToUUIDCoercion
coerceObject:error:
_typeForPropertyListString:
coercionWithBlock:
_presentationStateForPropertyListString:
aceObjectWithDictionary:
dialogPhaseForAceDialogPhase:
userRequestDialogPhase
initWithPropertyListRepresentation:
initWithType:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:
setAceObject:
setDialogPhase:
setAceCommandIdentifier:
setPresentationState:
setVirgin:
setTransient:
setSupplemental:
setImmersiveExperience:
_virgin
_transient
_supplemental
_immersiveExperience
_revisionIdentifier
_aceObject
_dialogPhase
_aceCommandIdentifier
_presentationState
_associatedDataStore
af_getBundleResourceURL
extension
URLForResource:withExtension:
null
resourceForSoundID:
URLForResource:
_lock
_resourceURLProvidersByIdentifier
URLForSoundID:
setName:
setExtension:
_init
_pendingTransactionCount
orthography
setOrthography:
language
setLanguage:
phonemeSuggestions
setPhonemeSuggestions:
_orthography
_language
_phonemeSuggestions
alarmURLs
setAlarmURLs:
_alarmURLs
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dateByAddingTimeInterval:
contentsOfDirectoryAtPath:error:
pathExtension
compare:options:
attributesOfItemAtPath:error:
compare:
removeItemAtPath:error:
dataWithPropertyList:format:options:error:
initWithFormat:arguments:
stringByAppendingPathExtension:
writeToFile:options:error:
_initializeMyriadAdvertisementContextRecordFromData:
bytes
_advertismentPayloadSizeForVersion:
getBytes:length:
getUUIDBytes:
appendBytes:length:
getBytes:range:
dataWithBytes:length:
_deviceIDFromBytes:
_getAdvertismentRecordTypeForVersion:data:
_getVoiceTriggerEndTimeForVersion:data:
_getMyriadAdvertisementDataForVersion:data:
_getDeviceIdForVersion:data:
initWithDeviceID:data:
setIsCollectedFromContextCollector:
initWithAdvertisementRecordType:voiceTriggerEndTime:advertisementPayload:deviceID:
myriadAdvertisementContextAsData
isSaneForVoiceTriggerEndTime:endtimeDistanceThreshold:
recordForDeviceId:
compareAdvertisementPayload:
advertisementContextVersion
advertisementRecordType
voiceTriggerEndTime
advertisementPayload
advertisementDispatchTime
setAdvertisementDispatchTime:
_advertisementContextVersion
_advertisementRecordType
_voiceTriggerEndTime
_advertisementPayload
_deviceID
_advertisementDispatchTime
startRemoteRequest:onPeer:completion:
initWithInfo:
sendWithCompletion:
info
peerIdentifier
setPeerIdentifier:
_info
_peerIdentifier
anonymousListener
_af_analyticsContextDescription
logEventWithType:machAbsoluteTime:context:
_isForRequest:
_completeWithResponse:
_completeWithError:
endpoint
_initWithRequest:remoteResponseListenerEndpoint:usageResultListenerEndpoint:
initWithDomain:code:userInfo:
deliverSiriTask:completionHandler:
siriTaskDidFinish
_completeWithResponse:error:
handleFailureOfRequest:error:atTime:
handleSiriResponse:atTime:
initWithRequest:taskDeliverer:usageResultListener:
setDeliveryHandler:
setCompletionHandler:
_request
_taskDeliverer
_usageResultListener
_deliveryHandler
_completionHandler
_keepAliveCycle
_taskResponseWatchdogTimer
_taskResponseListener
numberWithUnsignedInteger:
allocation
properties
initWithIdentifier:allocation:properties:
_allocation
_properties
setAllocation:
setProperties:
allocWithZone:
initWithTimeoutInterval:timeoutHandler:
isStopped
cancelIfNotAlreadyCanceled
_interval
_timerSource
_timeoutHandler
_isStopped
_remainingInterval
_startTime
history
setHistory:
_history
itemIdentifier
setItemIdentifier:
selectionType
setSelectionType:
setDate:
_itemIdentifier
_selectionType
_date
vtSatScore
confidenceScores
initWithVtSatScore:confidenceScores:
buildDictionaryRepresentation
_vtSatScore
_confidenceScores
setVtSatScore:
setConfidenceScores:
initWithUUIDBytes:
numberWithUnsignedLongLong:
timestamp
perceptualAudioHash
unsignedLongLongValue
initWithTimestamp:perceptualAudioHash:
_timestamp
_perceptualAudioHash
setTimestamp:
setPerceptualAudioHash:
initWithServicePort:
setError:
prewarmWithRequestInfo:context:completion:
activateWithRequestInfo:context:completion:
deactivateForReason:options:context:completion:
handleContext:completion:
handleIntent:inBackgroundAppWithBundleId:reply:
handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:
_xpcConnection
_servicePort
_mapForLanguageCode:
allKeys
_buildRegexMatchingSubstrings:
pathForResource:ofType:inDirectory:
initWithContentsOfFile:
escapedPatternForString:
replaceCharactersInRange:withString:
initWithPattern:options:error:
range
substringWithRange:
enumerateMatchesInString:options:range:usingBlock:
_phonemeMap
_regex
setTimer:
createResponseWithTimer:
encodeXPCObject:forKey:
decodeXPCObjectOfType:forKey:
initWithXPCObject:
xpcObject
_xpcObject
didObserveEvents:completion:
setPrimaryLanguageCode:
primaryLanguageCode
setDictationLanguages:
encodeInt32:forKey:
decodeInt32ForKey:
decodePropertyListForKey:
_removeContextValueForKey:context:
_updateContextValue:forKey:context:
userContextLanguageCodeForKeyboardLangauge:overrideLanguageCode:
enumerateObjectsUsingBlock:
getSiriDictationLanguagesFromLanguages:
floatValue
numberWithFloat:
_setContextValue:forKey:context:
siriDictationLanguageForLanguage:
priorsByReplacingKeyboardLanguage:
languageDetectorUserContext
addEntriesFromDictionary:
_setFinalFilteredDictationLanguages:
_setDictationLanguageCodeMappingCache:
setWasLanguageToggled:
setCurrentKeyboard:
setPrevMessageLanguage:
setGlobalLastUsedKeyboard:
setMultiLingualKeyboardLanguages:
setKeyboardConvoRecentMessages:
setKeyboardConversationLanguagePriors:
setKeyboardGlobalLanguagePriors:
setLanguageCodeOverrides:
setSimulatingLanguageCodes:
setShouldSimulateLanguageDetectorAssetsAvailability:
_setUserContextChangeBit:
_setLanguageDetectorContext:
defaultContextWithPrimaryLanguage:
isUpdateAvailableForLanguageDetectorContext
languageDetectorContextChangeBits
context
getContextForAnalytics
getDictationLanguagesForSupportedLocales:error:
finalFilteredDictationLanguages
shouldSimulateLanguageDetectorAssetsAvailability
simulatingLanguageCodes
currentKeyboard
languageCodeOverrides
wasLanguageToggled
prevMessageLanguage
globalLastUsedKeyboard
multiLingualKeyboardLanguages
keyboardConvoRecentMessages
dictationLanguages
keyboardConversationLanguagePriors
keyboardGlobalLanguagePriors
dictationInputOrigin
setDictationInputOrigin:
_lidUserContext
_userContextChangeBit
_simulateLanguageDetectorAssetsAvailability
_simulatingLanguageCodes
_finalDictationLanguages
_dictationLanguageMappingCache
_languageToggled
_currentKeyboard
_primaryLanguageCode
_languageCodeOverrides
_prevMessageLanguage
_globalLastUsedKeyboard
_multiLingualKeyboardLanguages
_keyboardConvoRecentMessages
_dictationLanguages
_keyboardConversationLanguagePriors
_keyboardGlobalLanguagePriors
_dictationInputOrigin
timer
_timer
initWithUpdatedItemIndexPaths:insertedItemIndexPaths:presentationStateChangedItemIndexPaths:
updatedItemIndexPaths
insertedItemIndexPaths
presentationStateChangedItemIndexPaths
_updatedItemIndexPaths
_insertedItemIndexPaths
_presentationStateChangedItemIndexPaths
errorWithCode:description:
errorWithCode:description:underlyingErrors:
addObjectsFromArray:
replaceObjectAtIndex:withObject:
willBeginAccessPower
getAveragePower:andPeakPower:
didEndAccessPower
_wrapper
_sharedMemory
_destroyMapping
_mappedLength
_sharedRegion
isMainThread
getCurrentContext
runServerOnCurrentThreadProtectedByEntitlement:
currentRunLoop
distantFuture
nothing
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
initWithTimeIntervalSinceNow:
runUntilDate:
doesServerExist
array
_collateContextsIntoArray:
performSelectorOnMainThread:withObject:waitUntilDone:
dictionaryWithObject:forKey:
cancelPreviousPerformRequestsWithTarget:selector:object:
stopServer
_shutdownServer
_serverName
pidRestrictedCenterNamed:
setTargetPID:
_collateContexts
registerForMessageName:target:selector:
startCenter:
detachNewThreadSelector:toTarget:withObject:
performSelector:withObject:afterDelay:
mainBundle
bundleIdentifier
allowContextProvider:
_startListening
_stopListening
defaultContextManager
addContextProvider:
removeContextProvider:
_contextProviders
_center
initWithOptions:capacity:
_beginGroup
_startObservingNowPlayingAppPlaybackState
_endGroup
_fetchNowPlayingAppPlaybackStateForReason:completion:
_stopObservingNowPlayingAppPlaybackState
removeObject:
nowPlayingApplicationPlaybackStateChanged:
addObserver:selector:name:object:
nowPlayingInfoDidChange:
removeObserver:name:object:
unsignedIntValue
_handleNowPlayingApplicationPlaybackStateChange:
nowPlayingObserverNowPlayingInfoDidChange:
nowPlayingObserver:playbackStateDidChangeFrom:to:
defaultObserver
playbackState
getPlaybackStateWithCompletion:
getNowPlayingInfoWithCompletion:
_playbackStateGroup
_playbackStateGroupDepth
_playbackState
_listeners
_isObserving
notification
request
postNotificationRequest:completion:
withdrawNotificationRequestWithIdentifier:
receivedNotificationResponse:
postNotificationRequest:responseHandler:
_responseHandlersByNotificationID
keyPathWithKey:
userContext
setObject:forContextualKeyPath:
predicateForEventsWithStreamName:
eventStreamWithName:
knowledgeStore
deleteObjects:error:
localizedDescription
carPlayIsConnectedStream
currentCalendar
dateByAddingUnit:value:toDate:options:
predicateWithFormat:
bluetoothIsConnectedStream
metadata
isAppleAudioDevice
productID
allObjects
eventWithStream:startDate:endDate:identifierStringValue:metadata:
saveObjects:error:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
executeQuery:error:
URLByAppendingPathComponent:isDirectory:
fileURLWithPath:isDirectory:
isVoiceOverTouchEnabled
isVibrationDisabled
initWithIsVoiceOverTouchEnabled:isVibrationDisabled:
_isVoiceOverTouchEnabled
_isVibrationDisabled
setIsVoiceOverTouchEnabled:
setIsVibrationDisabled:
temperatureUnit
setTemperatureUnit:
twentyFourHourTimeDisplay
setTwentyFourHourTimeDisplay:
region
setRegion:
setCountryCode:
preferredLanguage
setPreferredLanguage:
_twentyFourHourTimeDisplay
_temperatureUnit
_region
_countryCode
_preferredLanguage
firstInterpretation
tokens
interpretationIndices
interpretations
text
valueWithRange:
arrayWithCapacity:
objectAtIndexedSubscript:
intValue
numberWithInt:
setObject:atIndexedSubscript:
insertObject:atIndex:
speechTokensForUtteranceAtIndex:
rangeListOfDifferingTextFromSpeechInterpretation:comparedToBaseTokenList:
rangeListOfDifferingTextFromTargetTokenList:comparedToBaseTokenList:
longestCommonSubsequenceBetweenList:andList:
removeSpaceBefore
removeSpaceAfter
string
setTokens:
confidenceScore
textOfUtteranceAtIndex:
source
allInterpretationStringsAndScores
setDictionary:
isLowConfidence
initWithInterpretations:isLowConfidence:
initWithInterpretationIndices:confidenceScore:
setSource:
allPhrases
_updateUtteranceswithAlternativeUtteranceAtIndex:swapIndices:
_updatePhraseswithSwapIndices:
setConfidenceScore:
setRemoveSpaceBefore:
bestTextInterpretation
initWithPhrases:correctionIdentifier:
initWithPhrases:utterances:
initWithPhrases:sentenceConfidence:utterances:correctionIdentifier:
initWithTokens:correctionIdentifier:
initWithString:correctionIdentifier:
numberOfAlternativeUtterances
rangeListOfDifferingTextFromUtteranceAtIndex:comparedToBaseUtteranceAtIndex:
rangeListOfDifferingTextFromSpeechInterpretation:comparedToBaseUtteranceAtIndex:
interpretationOfUtteranceAtIndex:
allRecognitionStringsAndScores
updateDictationResult:withAlternativeUtteranceAtIndex:
dictationResult
streamingTokens
correctionIdentifier
_phrases
_tokens
_text
_sentenceConfidence
_utterances
_correctionIdentifier
confidenceScoreAvg
confidenceScoreMax
confidenceScoreMin
bestInterpretation
recognition
af_speechPhrases
sentenceConfidence
af_speechUtterances
af_correctionContext
af_userUtteranceValue
af_bestTextInterpretation
af_correctionContextWithRefId:sessionId:
af_userUtteranceValueWithRefId:sessionId:
af_bestTextInterpretationWithRefId:sessionId:
af_speechToken
_combinedRank
_combinedScore
_interactionId
_onDeviceUtterancesPresent
_originalRank
_originalScore
_previousUtterance
_sessionId
_utteranceSource
numberWithLong:
enumerateByteRangesUsingBlock:
af_enumerateDigestibleChunksWithOptions:usingBlock:
objCType
longLongValue
decimalValue
sortedArrayUsingSelector:
groupIdentifier
isFiring
fireTimeInterval
timerID
timerURL
title
fireDate
firedDate
dismissedDate
lastModifiedDate
initWithTimerID:timerURL:isFiring:title:state:duration:type:fireTimeInterval:fireDate:firedDate:dismissedDate:lastModifiedDate:
_isFiring
_timerID
_timerURL
_title
_fireTimeInterval
_fireDate
_firedDate
_dismissedDate
_lastModifiedDate
setTimerID:
setTimerURL:
setIsFiring:
setTitle:
setDuration:
setFireTimeInterval:
setFireDate:
setFiredDate:
setDismissedDate:
setLastModifiedDate:
_stopIdleTimer
_cleanUpConnection
stageEvents:completion:
_willStartSendingEvents:
_didFinishSendingEvents:
_sendEvents:numberOfRetries:completion:
logInstrumentationOfType:machAbsoluteTime:turnIdentifier:
barrier:
boostQueuedEvents:
_handleFailureCallbackForEvents:error:numberOfRetries:completion:
_handleSuccessCallbackForEvents:completion:
_startIdleTimer
_cleanUpConnectionIfNeeded
setNeedsCleanUpConnection:
needsCleanUpConnection
_idleTimerFired
flushStagedEventsWithReply:
beginEventsGrouping
endEventsGrouping
stageEvent:
stageEvents:
_idleTimer
_numberOfEventsBeingSent
_group
_needsCleanUpConnection
setKey:
appMetaData
setAppMetadata:
generation
setAnchor:
validity
setValidity:
setCount:
initWithAnchor:forcingReset:
anchor
appMetadata
targetIsLocal
setTargetIsLocal:
forVerification
setForVerification:
reasons
setReasons:
_targetIsLocal
_forVerification
_anchor
_validity
_key
_appMetadata
_reasons
encodeDouble:forKey:
decodeDoubleForKey:
initWithRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:
rawRecognition
audioAnalytics
isFinal
utteranceStart
_isFinal
_recognition
_rawRecognition
_audioAnalytics
_utteranceStart
beepSoundID
initWithStyle:beepSoundID:
_style
_beepSoundID
setStyle:
setBeepSoundID:
initWithData:
_data
identityCoercion
_coercions
fetchSupportedLanguagesWithReply:
retrieveAccountMessageDictionariesWithReply:
saveAccountWithMessageDictionary:setActive:
deleteAccountWithIdentifier:
setActiveAccountIdentifier:
setAssistantEnabled:
setDictationEnabled:
_shutdownSessionIfIdle
_killDaemon
barrierWithReply:
_setSyncNeededForReason:
_clearSyncNeededForKey:
_syncDataWithAnchorKeys:forceReset:reason:reply:
_fetchPeerData:
_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:
_runServiceMaintenance
getAvailableVoicesIncludingAssetInfo:completion:
setOutputVoice:withCompletion:
setLanguage:withCompletion:
setLanguage:outputVoice:withCompletion:
getOfflineDictationStatusWithCompletion:
updateOfflineSpeechProfileWithLanguage:modelOverridePath:completion:
createOfflineSpeechProfileWithLanguage:modelOverridePath:JSONData:completion:
setOfflineDictationProfileOverridePath:completion:
startUIRequestWithSpeechAudioFileURL:
startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:
dismissUI
startUIMockServerRequestWithReplayFileURL:completion:
getPeerIdentifiers:
startAudioPlaybackRequest:completion:
setEnableAssistantLogging:
setSupplementalLanguageDictionary:forProduct:completion:
setSupplementalLanguages:forProduct:forBuildVersion:completion:
getSupplementalLanguagesDictionary:
getSupplementalLanguagesModificationDate:
getSupplementalLanguageDictionaryForProduct:completion:
getSupplementalLanguagesForProduct:forBuildVersion:completion:
fetchEventRecordsFromAnalyticsStoreAtPath:completion:
purgeAnalyticsStoreWithCompletion:
resetAnalyticsStoreWithCompletion:
sendMetricsToServerWithCompletion:
fetchExperimentConfigurationsWithCompletion:
fetchExperimentContextWithCompletion:
disableAndDeleteCloudSyncWithCompletion:
getDevicesWithAvailablePHSAssetsForLanguage:completion:
getDevicesWithAvailablePHSAssetsOnDeviceCheck:
getMeCard:
getStereoPartnerLastMyriadWinDate:
getStereoPairState:
setConfigOverrides:completion:
configOverrides:
getSharedCompanionInfo:
getCrossDeviceContextWithCompletion:
getCurrentContextSnapshotWithCompletion:
getOriginDeviceInfoForContextIdentifier:completion:
getContextCollectorsInfoWithCompletion:
setHardcodedBluetoothProximity:
getSiriOutputVolumeForAudioRoute:completion:
setSiriOutputVolume:forAudioRoute:completion:
getBluetoothDeviceInfoWithAddress:completion:
getBluetoothDeviceInfoWithUID:completion:
getConnectedBluetoothDeviceInfoArrayWithCompletion:
getPairedBluetoothDeviceInfoArrayWithCompletion:
getBluetoothWirelessSplitterSessionInfoWithCompletion:
startObservingBluetoothWirelessSplitterSession
stopObservingBluetoothWirelessSplitterSession
addMultiUserUser:sharedId:loggableSharedId:enrollmentName:isPrimary:completion:
removeMultiUserUser:completion:
removeMultiUserUserWithSharedUserId:completion:
showMultiUsers:
showPrimaryUserSharedUserIDWithCompletion:
updateVoiceIdScoreToUser:score:reset:completion:
forceMultiUserSync:download:completion:
getHomeUserIdForSharedUserId:completion:
getSharedUserIdForHomeUserId:completion:
updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:
getSharedUserID:
fetchMultiUserVoiceIdentificationSetting:
homeOnboardingFlowInvoked:completion:
setNanoAssistantEnabled:withCompletion:
setNanoDictationEnabled:withCompletion:
setNanoPhraseSpotterEnabled:withCompletion:
setNanoRaiseToSpeakEnabled:withCompletion:
setNanoUseDeviceSpeakerForTTS:withCompletion:
setNanoTTSSpeakerVolume:withCompletion:
setNanoOutputVoice:withCompletion:
setNanoLanguage:withCompletion:
setNanoCrownActivationEnabled:withCompletion:
setNanoSiriDataSharingOptInStatus:withCompletion:
getSpokenNotificationTemporarilyDisabledEndDateWithCompletion:
setSpokenNotificationTemporarilyDisabledUntil:
clearSpokenNotificationTemporarilyDisabledStatus
getSpokenNotificationTemporarilyDisabledEndDateForApp:completion:
setSpokenNotificationTemporarilyDisabledForApp:until:
getSpokenNotificationShouldAlwaysSpeakNotificationsWithCompletion:
setSpokenNotificationShouldAlwaysSpeakNotifications:
getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:
setSpokenNotificationShouldSkipTriggerlessReplies:
setSpokenNotificationProxCardSeen:
setOpportuneSpeakingEdgeDetectorSignalOverride:
clearOpportuneSpeakingEdgeDetectorSignalOverride
getCurrentNWActivityIDWithCompletion:
setSiriDataSharingOptInStatus:completion:
getSiriDataSharingOptInStatusWithCompletion:
setSiriDataSharingOptInAlertPresented:completion:
shouldSuppressSiriDataSharingOptInAlertWithCompletion:
deleteSiriHistoryWithContext:withCompletion:
setOnDeviceDictationAvailableAlertPresented:
setSiriDesignModeEnabled:completion:
siriDesignModeIsEnabled:
accessRecordedAudioWithIdentifier:completion:
trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:
getRecordedAudioDirectoryPathsWithCompletion:
syncVerificationPartialResult:
syncVerificationServerReport:
getConformingSharedUserIdForHomeUserId:completion:
getFirstNameForSharedUserId:completion:
getConformingSharedUserIds:
getMultiUserSettingsForSharedUserID:completion:
isEqualToArray:
setInterpretations:
setIsLowConfidence:
_isLowConfidence
_interpretations
setInterpretationIndices:
_interpretationIndices
_confidenceScore
_source
averageConfidenceScore
phoneSequence
setPhoneSequence:
startTime
setStartTime:
silenceStartTime
setSilenceStartTime:
endTime
setEndTime:
setRemoveSpaceAfter:
aceToken
ipaPhoneSequence
setIpaPhoneSequence:
_removeSpaceBefore
_removeSpaceAfter
_phoneSequence
_ipaPhoneSequence
_silenceStartTime
_endTime
phrases
af_speechInterpretations
lowConfidence
utterances
af_speechTokens
createUsingPhrases:andUtterances:
successTitle
successBody
successButtonText
errorTitle
errorBody
errorButtonText
initWithSuccessTitle:successBody:successButtonText:errorTitle:errorBody:errorButtonText:
_successTitle
_successBody
_successButtonText
_errorTitle
_errorBody
_errorButtonText
setSuccessTitle:
setSuccessBody:
setSuccessButtonText:
setErrorTitle:
setErrorBody:
setErrorButtonText:
containsString:
substringToIndex:
_afpreferences_isLanguageCodePrefix
_afpreferences_languageCodePrefix
arrayByAddingObjectsFromArray:
initWithArray:
initWithSuiteName:
synchronize
distantPast
boolForKey:
setBool:forKey:
isSiriServerLoggingAllowed
laterDate:
UTF8String
_registerForInternalPrefs
barrier
_registerForLanguageCodeChangeNotifications
_bestSupportedLanguageCodeForLanguageCode:isGoodFit:
_bestSupportedLanguageCodeForLanguageCodes:isGoodFit:
preferredLanguages
localeIdentifier
canonicalLanguageIdentifierFromString:
_languagePreferencesForCurrentSystemConfiguration
arrayByAddingObject:
preferredLocalizationsFromArray:forPreferences:
_languageCode:isGoodFitForPreferredLanguages:
_registerForOutputVoice
setOutputVoice:
setLanguage:outputVoice:
currentNavigationState
setCurrentNavigationState:
_registerForNavStatusIfNeeded
_setLoggingDefaultValue:forKey:
fileLoggingIsEnabled
configOverrides
setConfigOverrides:
dictionaryWithDictionary:
_registerForNanoPrefsChangeNotifications
initWithDomain:
setWithObject:
synchronizeNanoDomain:keys:
_nanoPreferencesValueForKey:
_setNanoPreferencesValue:forKey:
handsFreeMode
setHandsFreeMode:
respectsSystemMute
setRespectsSystemMute:
_preferencesDidChangeExternally
_internalPreferencesDidChangeExternally
_languageCodeDidChangeExternally
_outputVoiceDidChangeExternally
_nanoPrefsDidChangeExternally
synchronizeLogPreferencesDomain
synchronizeAVVCPreferencesDomain
dictationIsEnabled
dictationSLSLanguagesEnabled
isSmartLanguageSelectionEnabled
setSmartLanguageSelection:
offlineDictationOverride
setOfflineDictationOverride:
offlineDictationStatus
setOfflineDictationStatus:
offlineDictationProfileOverridePath
setOfflineDictationProfileOverridePath:
_setAssistantIsEnabledLocal:
_setDictationIsEnabledLocal:
setAssistantIsEnabled:
setDictationIsEnabled:
onDeviceDictationAvailableAlertPresented
_setOnDeviceDictationAvailableAlertPresentedLocal:
forceOfflineRecognitionEnabled
setForceOfflineRecognitionEnabled:
utteranceDetectionEnabled
setUtteranceDetectionEnabled:
preferOnlineRecognitionEnabled
setPreferOnlineRecognitionEnabled:
setDictationSLSLanguagesEnabled:
resetSessionLanguage
showServerOnUI
setShowServerOnUI:
debugButtonIsEnabled
setDebugButtonIsEnabled:
showsHoldToTalkIndicator
setShowsHoldToTalkIndicator:
suppressAssistantOptIn
setSuppressAssistantOptIn:
suppressDictationOptIn
setSuppressDictationOptIn:
_setSuppressDictationOptInLocal:
alwaysAllowVoiceActivation
setAlwaysAllowVoiceActivation:
setSiriResponseShouldAlwaysPrint:
setAlwaysObscureBackgroundContentWhenActive:
setAlwaysShowRecognizedSpeech:
crownActivationEnabled
setCrownActivationEnabled:
listenAfterSpeakingDisabled
setListenAfterSpeakingDisabled:
cloudSyncEnabled
setCloudSyncEnabled:
cloudSyncEnabledModificationDate
setInternalUserClassification:
internalUserClassification
getSpokenNotificationTemporarilyDisabledStatusWithCompletion:
getSpokenNotificationTemporarilyDisabledForApp:completion:
setSpokenNotificationsProxCardSeen
setSpokenNotificationSkipTriggerlessReplyConfirmation:
spokenNotificationSkipTriggerlessReplyConfirmation
designModeIsEnabled
setDesignModeEnabled:
siriDataSharingOptInStatus
shouldSuppressSiriDataSharingOptInAlert
supplementalLanguageDictionaryForProduct:
supplementalLanguagesForProduct:forBuildVersion:
supplementalLanguages
supplementalLanguagesModificationDate
horsemanSupplementalLanguageDictionary
activitySummaryReportDate
setActivitySummaryReportDateToNow
ignoreServerManualEndpointingThreshold
setIgnoreServerManualEndpointingThreshold:
manualEndpointingThreshold
setManualEndpointingThreshold:
streamingDictationEnabled
setStreamingDictationEnabled:
companionConnectionsOverBLEEnabled
setCompanionConnectionsOverBLEEnabled:
myriadCoordinationEnabled
disableMyriadBLEActivity
setMyriadCoordinationEnabled:
myriadDuckingEnabled
setMyriadDuckingEnabled:
myriadDeviceGroup
setMyriadDeviceGroup:
myriadServerHasProvisioned
setMyriadServerHasProvisioned:
myriadServerProvisioning
setMyriadServerProvisioning:
myriadDeviceClass
setMyriadDeviceClass:
myriadConstantGoodness
setMyriadConstantGoodness:
myriadDeviceAdjust
setMyriadDeviceAdjust:
myriadDeviceDelay
setMyriadDeviceDelay:
myriadTestDeviceDelay
setMyriadTestDeviceDelay:
myriadDeviceSlowdown
setMyriadDeviceSlowdown:
myriadDeviceTrumpDelay
setMyriadDeviceTrumpDelay:
myriadLastWin
setMyriadLastWin
myriadDeviceVTEndTimeDistanceThreshold
setIgnoreMyriadAdjustedBoost:
myriadShouldIgnoreAdjustedBoost
myriadMonitorTimeOutInterval
opportuneSpeakingPauseInterval
setOpportuneSpeakingPauseInterval:
opportuneSpeakingTimeoutInterval
setOpportuneSpeakingTimeoutInterval:
limitedAudioLoggingEnabled
setLimitedAudioLoggingEnabled:
setDatabaseSyncEnabled:
databaseSyncEnabled
setSiriVocabularyEnabled:
siriVocabularyEnabled
includeProbePacketCaptureForABC
autoDismissalIdleTimeout
setAutoDismissalIdleTimeout:
autoDismissalExtendedIdleTimeout
setAutoDismissalExtendedIdleTimeout:
autoDismissalMaxAttentionSamplingTime
setAutoDismissalMaxAttentionSamplingTime:
siriDebugUIEnabled
setSiriDebugUIEnabled:
siriSpeakerGradingDebugUIEnabled
setSiriSpeakerGradingDebugUIEnabled:
enableDragAndDrop
setEnableDragAndDrop:
enableNonFullScreenAppearance
setEnableNonFullScreenAppearance:
useSASAutoSelectionFeature
setUseSASAutoSelectionFeature:
applySASToFirstPartyDomains
setApplySASToFirstPartyDomains:
disableAssistantWhilePasscodeLocked
setDisableAssistantWhilePasscodeLocked:
assistantLanguageForceRTL
setAssistantLanguageForceRTL:
isCurrentLocaleNativelySupported
allSiriLanguageCodesForSystemLanguageCode:isGoodFit:
synchronizeVoiceServicesLanguageCode
inProgressOutputVoice
setInProgressOutputVoice:
setLanguageCode:outputVoice:
setUseDeviceSpeakerForTTS:
setLanguageDetectorEnabled:
isLanguageDetectorEnabled
isLanguageDetectorEnabledByServer
isDictationOnDeviceSamplingDisabled
setKeepRecordedAudioFiles:
keepRecordedAudioFiles
valueForSessionContextPreferenceKey:
setValue:forSessionContextKey:
setTLSSessionTicketsFlushPending:
tlsSessionTicketsFlushPending
setFileLoggingIsEnabled:
shouldLogForQA
setCardLoggingEnabled:
cardLoggingEnabled
setCommandLoggingEnabled:
commandLoggingEnabled
setNetworkLoggingEnabled:
networkLoggingEnabled
setAVVCLoggingEnabled:
avvcLoggingEnabled
autoDismissal2018Enabled
setAutoDismissal2018Enabled:
dismissWhenFaceAttentionIsLostEnabled
setDismissWhenFaceAttentionIsLostEnabled:
dismissWhenDeviceIsLoweredEnabled
setDismissWhenDeviceIsLoweredEnabled:
handsOnIdleTimeInterval
setHandsOnIdleTimeInterval:
handsOffIdleTimeInterval
setHandsOffIdleTimeInterval:
setConfigOverrideWithValue:forKey:
removeConfigOverrideForKey:
nanoAssistantEnabled
setNanoAssistantEnabled:
nanoDictationEnabled
setNanoDictationEnabled:
nanoPhraseSpotterEnabled
setNanoPhraseSpotterEnabled:
nanoRaiseToSpeakEnabled
setNanoRaiseToSpeakEnabled:
nanoUseDeviceSpeakerForTTS
setNanoUseDeviceSpeakerForTTS:
nanoTTSSpeakerVolume
setNanoTTSSpeakerVolume:
nanoLanguageCode
setNanoLanguageCode:
nanoOutputVoice
setNanoOutputVoice:
nanoCrownActivationEnabled
setNanoCrownActivationEnabled:
nanoSiriDataSharingOptInStatus
setNanoSiriDataSharingOptInStatus:
nanoOfflineDictationStatus
_registeredForInternalPrefs
_registeredForLanguageCode
_registeredForOutputVoice
_registeredForNanoPrefs
_navTokenQueue
_navTokenIsValid
_navToken
_tlsSessionTicketFlushRequestPending
indexOfObject:
subarrayWithRange:
dictionaryWithObjectsAndKeys:
effectiveBoolValueForSetting:
setBoolValue:forSetting:
componentsFromLocaleIdentifier:
localeIdentifierFromComponents:
initWithLocaleIdentifier:
componentsSeparatedByString:
fileExistsAtPath:isDirectory:
_initWithRequest:objectIdentifier:
_objectIdentifier
si_dictionaryRepresentation
eventType
eventData
turnID
initWithBytes:length:
setGoodness:
pHash
isAContinuation
isATrump
goodness
isSlowdown
dataWithCapacity:
userConfidence
deviceGroup
deviceClass
tieBreaker
productType
setDeviceID:
setPHash:
setRawAudioGoodnessScore:
setBump:
setUserConfidence:
setDeviceGroup:
setDeviceClass:
setTieBreaker:
setProductType:
setIsMe:
asAdvertisementData
rawAudioGoodnessScore
bump
isMe
isCollectedFromContextCollector
initWithAudioData:
setRawAudioGoodnessScore:withBump:
adjustByMultiplier:adding:
generateRandomConfidence
generateTiebreaker
isInEarTrump
isCarplayTrump
isALateSupressionTrumpFor:
isAnEmergency
isAnEmergencyHandled
isSane
slowdownDelay
hasEqualAdvertismentData:
advertisementData
setAdvertisementData:
advertisementDataIsDirty
setAdvertisementDataIsDirty:
_goodness
_userConfidence
_deviceGroup
_deviceClass
_productType
_tieBreaker
_isMe
_rawAudioGoodnessScore
_bump
_isCollectedFromContextCollector
_advertisementDataIsDirty
_pHash
_advertisementData
initWithCompletion:
releaseAssertion
_safetyBlock
initWithDate:
isOlderThan:
speakableIdentifier
speakableDate
dateWithTimeIntervalSinceNow:
_deleteSpeakablesOlderThan:
sharedCollector
logSpeakable:forContact:withModelId:withFeatures:withScore:
logFeedbackOfType:forSpeakableId:withModelId:
logRecommendedAction:forSpeakableId:withModelId:
logInteractionEvents:forSpeakableId:
_speakableMap
fakeOneBestFromPhrases:
_sa_mappedArrayWithBlock:
setPhrases:
setUtterances:
setSentenceConfidence:
initWithPhrases:
aceRecognition
setAudioSessionID:
absoluteIndexPath
item
_childNodes
_appendDescriptionToString:withIndentation:
parentNode
indexPathFromAncestorNode:
indexOfChildNode:
indexPathByAddingIndex:
exceptionWithName:reason:userInfo:
indexAtPosition:
numberOfChildNodes
childNodeAtIndex:
enumerateDescendentNodesUsingBlock:
removeChildNode:
removeFromParentNode
_setParentNode:
insertChildNode:atIndex:
removeChildNodeAtIndex:
enumerateObjectsWithOptions:usingBlock:
enumerateChildNodesWithOptions:usingBlock:
absoluteIndexPathsForTreeNodes:
containsNodeAtIndexPath:
nodeAtIndexPath:
indexPathOfNodeWithItem:
lastChildNode
addChildNode:
replaceChildNodeAtIndex:withNode:
enumerateChildNodesUsingBlock:
setItem:
_item
_parentNode
timeIntervalSinceNow
decisionDepth
decisionAge
defaultRules
decisionThreshold
weightForEvent:
maxPersistenceDepth
maxPersistenceAge
_aceValue
handleSiriRequest:deliveryHandler:completionHandler:
getAppContextWithDeliveryHandler:completionHandler:
initWithTaskmaster:
_taskmaster
initWithCode:userInfo:
initWithCode:localizedFailureReason:
errorWithCode:userInfo:
errorWithCode:localizedFailureReason:
initWithCode:
_block
initWithIdentifier:languageCode:rootNode:
initWithIdentifier:languageCode:
_rootNode
_nodeAtIndexPath:
conversation:didRemoveItemsWithIdentifiers:atIndexPaths:parentItemIdentifiers:
_nodeContainsProvisionalItems:
isConfirmedDialogPhase
isExpository
isConfirmationDialogPhase
isClarificationDialogPhase
af_isUtterance
isUserRequestDialogPhase
completionDialogPhase
orderedSet
strongToStrongObjectsMapTable
indexPath
indexPathByRemovingLastIndex
keyEnumerator
conversationItemType
af_arrayByMappingWithBlock:
isSummaryDialogPhase
_childOfNode:withItemWhichCanBeUpdatedWithAceObject:inDialogPhase:
_changePresentationStateForNodes:
notifyDelegateOfUpdates:inserts:presentationChanges:
_removeNodes:
initWithConversationItemType:aceObject:aceCommandIdentifier:transient:supplemental:immersiveExperience:indexPath:
_processInsertions:inDialogPhase:
indexPathForItemWithIdentifier:
numberOfChildrenForItemAtIndexPath:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:atIndexPaths:isSupplemental:isImmersiveExperience:
_indexPathsForAddingItemsWithCount:asChildrenOfItemWithIdentifier:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:asChildrenOfItemWithIdentifier:isSupplemental:isImmersiveExperience:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:atIndexPaths:
_addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:asChildrenOfItemWithIdentifier:
views
supplemental
immersiveExperience
_addItemsForAceObjects:type:aceCommandIdentifier:dialogPhase:asChildrenOfItemWithIdentifier:
speakableText
setSpeakableText:
reflectionDialogPhase
addItemsForAceViews:withDialogPhase:asChildrenOfItemWithIdentifier:
viewId
removeItemsAtIndexPaths:
_indexPathForItemWithIdentifier:ignoreNonExistent:
_itemAtIndexPath:
itemAtIndexPath:
initWithIndex:
_enumerateItemsUsingBlock:
isSynchronizedWithServer
propertyListWithTreeNode:itemPropertyListCreation:
treeNodeWithPropertyList:error:itemCreation:
localizedFailureReason
setSynchronizedWithServer:
conversation:didUpdateItemsAtIndexPaths:
conversation:didInsertItemsAtIndexPaths:
conversation:presentationStateDidChangeForItemsAtIndexPaths:
conversation:didChangeWithTransaction:
insertItemsForAceViews:withDialogPhase:atIndexPaths:
addItemsForAddViewsCommand:
addItemsForAceObjects:type:dialogPhase:asChildrenOfItemWithIdentifier:
addItemForSpeechRecognizedCommand:
addAdditionalSpeechInterpretation:refId:
additionalSpeechInterpretationsForRefId:
addRecognitionUpdateWithPhrases:utterances:refId:
updatedUserUtteranceForRefId:
addItemForPartialResultCommand:
addItemsForShowHelpCommand:
addItemForMusicStartSessionCommand:
addSelectionResponse:
updateWithUpdateViewsCommand:
removeItemsWithIdentifiers:
removeItemsFollowingItemAtIndexPath:
removeTransientItems
cancelItemWithIdentifier:
containsItemWithIdentifier:
identifierOfItemAtIndexPath:
hasItemWithIdentifier:
itemWithIdentifier:
parentOfItemWithIdentifier:
lastItem
typeForItemAtIndexPath:
dialogPhaseForItemAtIndexPath:
aceObjectForItemAtIndexPath:
presentationStateForItemAtIndexPath:
numberOfChildrenForItemWithIdentifier:
aceCommandIdentifierForItemAtIndexPath:
itemAtIndexPathIsVirgin:
containsItemForAceViewWithIdentifier:
_setRootNode:
lastRestoredItem
_setLastRestoredItem:
_additionalInterpretationsForRefId
_updatedUserUtteranceForRefId
_synchronizedWithServer
_lastRestoredItem
subdataWithRange:
initWithBytesNoCopy:length:freeWhenDone:
contextFetchDelay
contextData
initWithGeneration:contextData:contextFetchDelay:
_generation
_contextData
_contextFetchDelay
setGeneration:
setContextData:
setContextFetchDelay:
_enqueueBlock:forReason:
_myriadStateToString:
_registerForMyriadEvents
_setDecisionIsPending
_cancelRepostedMyriadDecisionTimer
_fetchCurrentMyriadDecisionWithWaitTime:
_deregisterFromRepostedDecisionResultsObservers
_dequeueBlocksWithSignal:
_deregisterFromMyriadEventNotifications
_clear
initWithUTF8String:
initWithName:options:queue:delegate:
_resultSeenWithValue:
invokeWithSignal:
_flushCompletions:
sharedMonitor
notifyObserver:didReceiveNotificationWithToken:
notifyObserver:didChangeStateFrom:to:
waitForMyriadDecisionWithCompletion:
waitForMyriadDecisionForReason:withCompletion:
startMonitoringWithTimeoutInterval:
ignoreMyriadEvents:
dequeueBlocksWaitingForMyriadDecision
stopMonitoring
isMonitoring
didWin
_ignoreRepostMyriadNotification:
_fetchRepostedMyriadDecisionTimer
_myriadMonitorQueue
_completions
_beginObserver
_wonObserver
_lostObserver
_repostedWonObserver
_myriadEventMonitorTimeout
_isRegisteredForMyriadEventNotification
_ignoreMyriadEvents
_isMonitoring
_ignoreRepostMyriadNotification
deploymentGroupProperties
playsTwoShotSoundForSiriVOXSounds
playsSessionInactiveSoundForSiriVOXSounds
logExperimentExposureForSiriVOXSounds
experimentsByConfigurationIdentifier
experimentForSiriVOXSounds
deviceRingerSwitchState
isDeviceInSetupFlow
outputVolume
accessibilityState
tapToSiriAudioPlaybackRequest
twoShotAudioPlaybackRequest
_isDeviceInSetupFlow
_isDeviceInCarDNDMode
_isDeviceInStarkMode
_outputVolume
_accessibilityState
_deviceRingerSwitchState
_tapToSiriAudioPlaybackRequest
_twoShotAudioPlaybackRequest
setIsDeviceInSetupFlow:
setOutputVolume:
setTapToSiriAudioPlaybackRequest:
setTwoShotAudioPlaybackRequest:
initWithLocale:
_shouldAutomaticallyProvideFunctions
setHandlesFunctions:
registerProvider:forNamespace:
handleTTSCodes
handlesFunctions
_parseStringWithFormat:error:hadEmpties:containsPrivacySensitiveContents:externalProviders:
stringForExpression:containsPrivacySensitiveContents:
stringForExpression:
parseStringWithFormat:includeControlCharacters:error:hadEmpties:containsPrivacySensitiveContents:externalProviders:
_handleOptionalAtIndex:withBuffer:totalLength:consumedLength:containsPrivacySensitiveContents:externalProviders:
_handleProviderAtIndex:withBuffer:totalLength:consumedLength:containsPrivacySensitiveContents:hadEmpties:externalProviders:
stringWithCapacity:
_handleControlCodeAtIndex:withBuffer:totalLength:consumedLength:hadEmpties:containsPrivacySensitiveContents:externalProviders:
parseStringWithFormat:error:hasExternalDomains:
parseStringWithFormat:error:containsPrivacySensitiveContents:hasExternalDomains:
parseUserGeneratedMessage:
setHandleTTSCodes:
parseStringWithFormat:error:
parseStringWithFormat:error:containsPrivacySensitiveContents:
parseStringRemovingControlCharacters:error:
parseStringRemovingControlCharacters:error:containsPrivacySensitiveContents:
_providers
_functionHandler
_locale
initWithAceObject:
setAssistantBulletin:
attachmentURLForExpression:
_handleNotificationWithToken:
_updateStateWithToken:
getStateWithCompletion:
_options
_registrationToken
_flags
timeZoneWithName:
timeZoneWithAbbreviation:
setTimeZone:
localTimeZone
calendarWithIdentifier:
setCalendar:
locale
stringFromDate:
setDateStyle:
setTimeStyle:
dateFormatFromTemplate:options:locale:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
setDateFormat:
_dateFormattedWithFormatter:arguments:
lowercaseStringWithLocale:
_meCard
fullName
firstName
lastName
nickName
_peerInfoForContextIdentifier:
roomName
_currentTime:
_currentShortDate:
_currentLongDate:
_currentWeekday:
_tempInWeatherUnits:
_deviceModel
_lowercaseString:
_siriUsageDescription:
_speechRecognitionUsageDescription:
_contextRoomName:
_contextDeviceName:
_userFullName:
_userFirstName:
_userMiddleName:
_userLastName:
_userNickName:
_meCardIdentifier:
_callFunction:withArguments:
_dateFormatter
_timeFormatter
_dictationService
dictationConnectionSpeechRecordingWillBegin:
dictationConnection:speechRecordingDidBeginWithOptions:
dictationConnectionSpeechRecordingDidBegin:
dictationConnectionSpeechRecordingDidEnd:
dictationConnectionSpeechRecordingDidCancel:
_willFailDictationWithError:
dictationConnection:speechRecordingDidFail:
_willCompleteDictation
dictationConnection:didRecognizePhrases:languageModel:correctionIdentifier:replacingPreviousPhrasesCount:
dictationConnection:didRecognizePackage:
dictationConnection:didRecognizePhrases:languageModel:correctionIdentifier:
dictationConnection:didRecognizeTokens:languageModel:
logEventWithType:contextProvider:
dictationConnection:didRecognizePartialResult:
af_tokens
_delegateDidRecognizeSpeechTokens:languageModel:delegate:
dictationConnection:didProcessAudioDuration:
dictationConnection:didRecognizeTranscriptionObjects:languageModel:
dictationConnection:speechRecognitionDidFail:
dictationConnectionSpeechRecognitionDidSucceed:
dictationConnection:didFinishWritingAudioFile:error:
dictationConnnectionDidChangeAvailability:
dictationConnection:didReceiveSearchResults:recognizedText:stable:final:
dictationConnection:didDetectLanguage:confidenceScores:isConfident:
dictationConnection:didDetectLanguage:confidenceScores:
dictationConnection:didRecognizeMultilingualSpeech:
dictationConnection:languageDetectorFailedWithError:
dictationConnection:didBeginLocalRecognitionWithModelInfo:
_tellSpeechDelegateAudioFileFinished:error:
_cancelTimerClearBuffer
_connectionClearedForInterruption:
_registerInvalidationHandlerForXPCConnection:
_dispatchAsync:
startRequestActivityWithCompletion:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:
startDictationWithLanguageCode:options:speechOptions:
startRecordedAudioDictationWithOptions:language:narrowband:forceSampling:
addRecordedSpeechSampleData:
sendSpeechCorrectionInfo:forCorrectionContext:
sendSpeechCorrectionInfo:interactionIdentifier:
preheat
preheatTestWithLanguage:options:
preheatWithRecordDeviceIdentifier:
recordFailureMetricsForError:
_startDictationWithURL:isNarrowBand:language:options:
_sendEngagementFeedback:voiceQueryIdentifier:
getInstalledOfflineLanguagesWithCompletion:
requestOfflineDictationSupportForLanguage:completion:
reportIssueForError:eventType:context:
reportIssueForError:eventType:subtype:context:
sendUserSelectedAlternativeDictationLanguageCode:
initWithDictationConnection:
_invokeRequestTimeout
_cancelRequestTimeout
_scheduleRequestTimeout
dictationIsAvailableForLanguage:synchronous:
forcedOfflineDictationIsAvailableForLanguage:synchronous:
synchronousRemoteObjectProxyWithErrorHandler:
_availabilityChanged
_tellSpeechDelegateAvailabilityChanged
audioFileType
interactionIdentifier
fieldLabel
setInteractionIdentifier:
objectForKeyedSubscript:
logDictationStarted
_sendPendingAnalyticsEvents
_logRequestCompetionStatusWithEventType:error:
logDictationCancelled
logDictationFailedWithError:
logDictationSucceeded
_addPreheatAnalyticsEvent
expectedActivationEventTime
setActivationEventTime:
setExpectedActivationEventTime:
_setActivationTimeOnOptionsIfNecessary:
_willStartDictationWithLanguageCode:options:speechOptions:machAbsoluteTime:
_dictationServiceWithErrorHandler:
initWithListenerEndpoint:
continuePendingSpeechRequestFromTimestamp:
addBarrierBlock:
forceOfflineRecognition
incremental
offlineLanguage
setOfflineLanguage:
startRecordedAudioDictationWithOptions:forLanguage:narrowband:forceSampling:
appendData:
_sendDataIfNeeded
_willCancelDictation
_delayedStopSpeechWithOptions:
_dequeueAudioWithLength:
_updateBufferFlushTimerWithDelay:
replaceBytesInRange:withBytes:length:
_cancelBufferFlushTimer
getForcedOfflineDictationSupportedLanguagesWithCompletion:
languageDetectorIsEnabled
dictationIsSupportedForLanguageCode:error:
fetchSupportedLanguageCodes:
_tellSpeechDelegateRecordingWillBegin
_tellSpeechDelegateRecordingDidBeginWithOptions:
_tellSpeechDelegateDidRecognizePackage:
_tellSpeechDelegateDidRecognizeSpeechPhrases:utterances:languageModel:correctionIdentifier:audioAnalytics:
_tellSpeechDelegateDidRecognizePartialResult:
_tellSpeechDelegateDidRecognizeSpeechTokens:languageModel:
_tellSpeechDelegateDidProcessAudioDuration:
_tellSpeechDelegateDidRecognizeTranscriptionObjects:languageModel:
_tellSpeechDelegateSpeechRecognitionDidSucceed
_tellSpeechDelegateSearchResultsReceived:recognitionText:stable:final:
_tellSpeechDelegateLanguageDetected:confidenceScores:isConfident:
_tellSpeechDelegateMultilingualSpeechRecognized:
_tellSpeechDelegateLanguageDetectorDidFail:
_tellSpeechDelegateDidBeginLocalRecognitionWithModelInfo:
_extendRequestTimeout
dictationIsAvailableForLanguage:
forcedOfflineDictationIsAvailableForLanguage:
beginAvailabilityMonitoring
cancelAvailabilityMonitoring
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:
startDictationWithLanguageCode:options:
startRecordedAudioDictationWithOptions:forLanguage:
startRecordedAudioDictationWithOptions:forLanguage:narrowband:
sendSpeechCorrection:forIdentifier:
sendSpeechCorrection:interactionIdentifier:
delegateQueue
setDelegateQueue:
_lastUsedLanguage
_knownOfflineInstalledLanguages
_isWaitingForKnownOfflineInstalledLanguages
_hasActiveRequest
_isWaitingForAudioFile
_recognizingIncrementally
_internalQueue
_timeoutTimer
_bufferTimer
_forceOfflineRecognition
_stopOptions
_buffer
_audioStartTime
_amountDataSent
_narrowband
_requestIdString
_previouslyRecognizedPhrases
_onDeviceDictationUIInteractionIdentifier
_preheatEvent
_delegateQueue
startDictationWithSpeechFileAtURL:isNarrowBand:options:forLanguage:
startDictationWithSpeechFileAtURL:options:forLanguage:
sendEngagementFeedback:voiceQueryIdentifier:
secureOfflineOnly
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
speechRecordingDidBeginWithOptions:sessionUUID:sessionRequestUUID:
speechDidBeginLocalRecognitionWithModelInfo:
speechRecordingDidEnd
speechRecordingDidCancel
speechRecordingDidFail:
speechDidRecognizePhrases:utterances:usingSpeechModel:correctionContext:audioAnalytics:
speechDidRecognizePartialResult:
speechDidRecognizeTokens:usingSpeechModel:
speechDidProcessAudioDuration:
speechDidRecognizeTranscriptionObjects:usingSpeechModel:
speechRecognitionDidFinishWithError:
speechDidFinishWritingAudioFile:error:
speechDidReceiveSearchResults:recognitionText:stable:final:
speechDidRecognizePackage:
speechDidDetectLanguage:confidenceScores:isConfident:
speechDidRecognizeMultilingualSpeech:
languageDetectorFailedWithError:
suppressStopAlert
setSuppressStopAlert:
suppressStartAlert
setSuppressStartAlert:
results
setResults:
_results
initWithContext:
performRequestWithResultHandler:
vendorID
isAdvancedAppleAudioDevice
supportsInEarDetection
supportsVoiceTrigger
supportsSpokenNotification
supportsListeningModeANC
supportsListeningModeTransparency
address
deviceUID
initWithAddress:deviceUID:vendorID:productID:isAdvancedAppleAudioDevice:supportsInEarDetection:supportsVoiceTrigger:supportsSpokenNotification:supportsListeningModeANC:supportsListeningModeTransparency:
_isAdvancedAppleAudioDevice
_supportsInEarDetection
_supportsVoiceTrigger
_supportsSpokenNotification
_supportsListeningModeANC
_supportsListeningModeTransparency
_vendorID
_productID
_address
_deviceUID
setAddress:
setDeviceUID:
setVendorID:
setProductID:
setIsAdvancedAppleAudioDevice:
setSupportsInEarDetection:
setSupportsVoiceTrigger:
setSupportsSpokenNotification:
setSupportsListeningModeANC:
setSupportsListeningModeTransparency:
_initWithOriginatingAceID:
_originatingAceID
_resultDescription
isAnnounceEnabled
isHALEnabled
featureFlags
isLocationSearchContinuityEnabled
setLocationSearchContinuityEnabled:
dump
caseInsensitiveCompare:
isMessagesOnSiriKitNative
initWithVtSatScore:
initWithConfidenceScores:
resetCacheAndCompileAllAssetsWithCompletion:
preheatSpeechRecognitionWithLanguage:modelOverrideURL:
startSpeechRecognitionWithLanguage:interactionIdentifier:task:context:profile:narrowband:detectUtterances:censorSpeech:maximumRecognitionDuration:farField:overrides:modelOverrideURL:secureOfflineOnly:originalAudioFileURL:applicationName:shouldStoreAudioOnDevice:didStartHandler:
addAudioPacket:
finishAudio
createSpeechProfileWithLanguage:modelOverridePath:JSONData:completion:
updateSpeechProfileWithLanguage:modelOverridePath:existingProfile:existingAssetPath:completion:
getOfflineDictationStatusIgnoringCache:withCompletion:
fetchAssetsForLanguage:completion:
fetchUserDataForLanguage:completion:
runAdaptationRecipeEvaluation:recordData:attachments:completion:
readProfileAndUserDataWithLanguage:allowOverride:completion:
getInstalledAssetSizeWithCompletion:
purgeInstalledAssetsExceptLanguages:completion:
writeDESRecord
invalidatePersonalizedLM
removePersonalizedLMForFidesOnly:completion:
runEvaluationWithDESRecordDatas:language:recipe:fidesPersonalizedLMPath:fidesPersonalizedLMTrainingAsset:scrubResult:completion:
deleteAllDESRecordsForDictationPersonalizationWithCompletion:
speechServiceDidRecognizeTokens:
speechServiceDidProcessAudioDuration:
speechServiceDidRecognizeRawEagerRecognitionCandidate:
speechServiceDidRecognizePackage:
speechServiceDidFinishRecognitionWithStatistics:error:
notifiedFiringAlarmIDs
alarmsByID
hasFiringAlarms
mostRecentFiringAlarm
value
setValue:
_value
startingAlertBehavior
stoppedAlertBehavior
stoppedWithErrorAlertBehavior
initWithStartingAlertBehavior:stoppedAlertBehavior:stoppedWithErrorAlertBehavior:
_startingAlertBehavior
_stoppedAlertBehavior
_stoppedWithErrorAlertBehavior
setStartingAlertBehavior:
setStoppedAlertBehavior:
setStoppedWithErrorAlertBehavior:
deploymentReason
configurationIdentifier
configurationVersion
deploymentGroupIdentifier
initWithConfigurationIdentifier:configurationVersion:deploymentGroupIdentifier:deploymentGroupProperties:deploymentReason:
_configurationIdentifier
_configurationVersion
_deploymentGroupIdentifier
_deploymentGroupProperties
_deploymentReason
setConfigurationIdentifier:
setConfigurationVersion:
setDeploymentGroupIdentifier:
setDeploymentGroupProperties:
setDeploymentReason:
initWithTimestamp:
setNotifyState:
setHandoffOriginDeviceName:
setHandoffURLString:
setHandoffRequiresUserInteraction:
setHandoffNotification:
setDirectActionAppId:
setDirectActionEvent:
setSpeechRequestOptions:
setRequestCompletionOptions:
setExpectedSpeakerSharedUserID:
setExpectedSpeakerConfidenceScore:
setNonspeakerConfidenceScores:
requiresUserInteraction
handoffOriginDeviceName
isSpeechRequest
turnIdentifier
requestCompletionOptions
uuid
options
notifyState
legacyDirectActionIdentifier
handoffRequestData
handoffURLString
handoffRequiresUserInteraction
handoffNotification
correctedSpeech
correctedSpeechContext
directActionAppId
directActionEvent
expectedSpeakerSharedUserID
expectedSpeakerConfidenceScore
nonspeakerConfidenceScores
_handoffRequiresUserInteraction
_turnIdentifier
_requestCompletionOptions
_uuid
_notifyState
_legacyDirectActionIdentifier
_handoffOriginDeviceName
_handoffRequestData
_handoffURLString
_handoffNotification
_correctedSpeech
_correctedSpeechContext
_startRequest
_startLocalRequest
_directActionAppId
_directActionEvent
_activationEvent
_speechRequestOptions
_expectedSpeakerSharedUserID
_expectedSpeakerConfidenceScore
_nonspeakerConfidenceScores
setAlarmIdentifiers:
setAlarmIdentifier:
alarmIdentifiers
_alarmIdentifiers
content
body
speakableContent
speakableDescription
beginGrouping
endGroupingWithOptions:
isEqualToDictionary:
minusSet:
intersectSet:
isEqualToDate:
clockItemStorageDidUpdate:insertedItemIDs:updatedItemIDs:deletedItemIDs:
itemID
removeObjectsForKeys:
removeAllObjects
initWithIdentifier:delegate:
setItemsByID:
itemWithID:
insertOrUpdateItems:
deleteItemsWithIDs:
deleteAllItems
itemsByID
_groupingDepth
_workingGeneration
_workingDate
_workingItemsByID
_itemsByID
_af_lenient:map:
indexesOfObjectsPassingTest:
objectsAtIndexes:
af_mappedArray:
af_lenientMappedArray:
af_mappedDictionary:
af_objectsPassingTest:
af_mappedSet:
serializedContextForKey:
initWithSerializedBackingStore:
contextMetadataForKey:
deviceInfo
ad_shortDescription
fromLocalDevice
alarmSnapshot
timerSnapshot
playbackStateSnapshot
homeAnnouncementSnapshot
af_didHearVoiceTrigger
multiUserStateSnapshot
alarmSnapshotMetadata
timerSnapshotMetadata
playbackStateMetadata
homeAnnouncementSnapshotMetadata
heardVoiceTrigger
heardVoiceTriggerMetadata
multiUserStateMetadata
locationSnapshot
locationMetadata
_handleCommand:afterCurrentRequest:isOneWay:completion:
handleRemoteCommand:afterCurrentRequest:isOneWay:completion:
handleCommand:completion:
initAndHandleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:
_commandHandler
_handleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:
handleCommand:afterCurrentRequest:commandHandler:completion:
handleOneWayCommand:commandHandler:completion:
handleCommand:commandHandler:completion:
setDialogIdentifier:
setCanUseServerTTS:
setDisplayTarget:
setViews:
af_dialogPhase
_activeDeviceInfoChanged:
_updateDeviceInfoWithCompletion:
currentDevice
getRouteIdentifierWithCompletion:
getGroupIdentifierWithCompletion:
routeIdentifier
setRouteIdentifier:
serialQueue
setSerialQueue:
lastFetchSucceeded
setLastFetchSucceeded:
_groupIdentifier
_lastFetchSucceeded
_routeIdentifier
_serialQueue
initWithMessage:makeAppFrontmost:
message
_makeAppFrontmost
_message
_frontmost
localizations
URLsForResourcesWithExtension:subdirectory:localization:
regularExpressionWithPattern:options:error:
lastPathComponent
numberOfMatchesInString:options:range:
initWithContentsOfURL:
compactDisplayNameInLanguage:forSiriLanguage:
longDisplayNameInLanguage:forSiriLanguage:
localizedNameOfOutputVoiceWithIdentifier:inDisplayLanguage:
localizedNameOfVoiceGender:inDisplayLanguage:
pathForResource:ofType:
dictionaryWithContentsOfFile:
selectVoiceResourceAssetForLanguage:
defaultVoiceType
defaultVoiceGender
localizedCompactNameForSiriLanguage:inDisplayLanguage:
localizedNameForSiriLanguage:inDisplayLanguage:
localizedNameOfOutputVoice:inDisplayLanguage:
localizedGenderOfOutputVoice:inDisplayLanguage:
allOutputVoiceIdentifiersForSiriLanguage:
defaultOutputVoiceForSiriSessionLanguage:
loadInfoForVoicesWithLanguageCode:
_tables
allVoicesForSiriSessionLanguage:
isValidForSiriSessionLanguage:
voiceInfoForLanguageCode:
keyboardType
transcriptionMode
preferOnlineRecognition
languageDetectionUserContext
dictationOptionsWithoutTextContext
prefixText
setPrefixText:
postfixText
setPostfixText:
selectedText
setSelectedText:
applicationName
setApplicationName:
applicationDisplayName
setApplicationDisplayName:
applicationVersion
setApplicationVersion:
setContext:
setFieldLabel:
fieldIdentifier
setFieldIdentifier:
requestIdentifier
setRequestIdentifier:
setKeyboardType:
returnKeyType
setReturnKeyType:
languageCodeOverride
setLanguageCodeOverride:
setTranscriptionMode:
microphoneIdentifier
setMicrophoneIdentifier:
voiceSearchTypeOptions
setVoiceSearchTypeOptions:
voiceSearchHeaderFields
setVoiceSearchHeaderFields:
voiceSearchQueryParameters
setVoiceSearchQueryParameters:
voiceTriggerEventInfo
setVoiceTriggerEventInfo:
setForceOfflineRecognition:
setPreferOnlineRecognition:
detectUtterances
setDetectUtterances:
setSecureOfflineOnly:
farField
setFarField:
keyboardIdentifier
setKeyboardIdentifier:
releaseAudioSessionOnRecordingCompletion
setReleaseAudioSessionOnRecordingCompletion:
setIncremental:
maximumRecognitionDuration
setMaximumRecognitionDuration:
taskHint
setTaskHint:
originalAudioFileURL
setOriginalAudioFileURL:
recognitionOverrides
setRecognitionOverrides:
modelOverrideURL
setModelOverrideURL:
inlineItemList
setInlineItemList:
setLanguageDetectionUserContext:
samplingInfo
setSamplingInfo:
_preferOnlineRecognition
_detectUtterances
_secureOfflineOnly
_farField
_releaseAudioSessionOnRecordingCompletion
_incremental
_applicationName
_applicationDisplayName
_applicationVersion
_fieldLabel
_fieldIdentifier
_interactionIdentifier
_requestIdentifier
_keyboardType
_prefixText
_postfixText
_selectedText
_returnKeyType
_transcriptionMode
_inlineItemList
_microphoneIdentifier
_keyboardIdentifier
_languageCodeOverride
_offlineLanguage
_voiceSearchTypeOptions
_voiceSearchHeaderFields
_voiceSearchQueryParameters
_voiceTriggerEventInfo
_maximumRecognitionDuration
_taskHint
_originalAudioFileURL
_recognitionOverrides
_modelOverrideURL
_languageDetectionUserContext
_samplingInfo
imageData
setImageData:
scale
setScale:
_imageData
_scale
initWithEntries:
initWithType:value:
dictionaryWithCapacity:
initWithPropertyListRepresentation:error:
setImageData:forKey:
imageDataForKey:
_entries
_valuePropertyListRepresentation
_valueForPropertyListRepresentation:type:
isEnabled
primaryEarbudSide
primaryInEarStatus
secondaryInEarStatus
initWithIsEnabled:primaryEarbudSide:primaryInEarStatus:secondaryInEarStatus:
_isEnabled
_primaryEarbudSide
_primaryInEarStatus
_secondaryInEarStatus
setIsEnabled:
setPrimaryEarbudSide:
setPrimaryInEarStatus:
setSecondaryInEarStatus:
configureWithASBD:andFrameRate:
setLength:
_configureWithSampleRate:andFrameRate:
mutableBytes
_detectVoiceActivityInSamples:numSamples:
audioAnalyzer:didDetectStartpointAtTime:
audioAnalyzer:didDetectHardEndpointAtTime:
getStatus:
endpointMode
setEndpointMode:
startWaitTime
setStartWaitTime:
interspeechWaitTime
setInterspeechWaitTime:
endWaitTime
setEndWaitTime:
configureWithSampleRate:andFrameRate:
saveSamplesSeenOnNextReset
lastStartOfVoiceActivityTime
lastEndOfVoiceActivityTime
setAutomaticEndpointingSuspensionEndTime:
delay
setDelay:
automaticEndpointingSuspensionEndTime
minimumDurationForEndpointer
setMinimumDurationForEndpointer:
_detectedOneShotStartpoint
_detectedRecurrentStartpoint
_communicatedStartPointDetection
_detectedOneShotEndpoint
_detectedRecurrentEndpoint
_communicatedEndpointDetection
_haveSeenNonZeroSamples
_sampleRate
_samplesSeen
_frameRate
_totalSamples
_lastOneShotStartpoint
_lastOneShotEndpoint
_lastRecurrentStartpoint
_lastRecurrentEndpoint
_floatSampleBuffer
_topLevelParameterDict
_modelDictPath
_audioUnitEPVAD2
_isConfigured
_saveSampleSeenInReset
_previousSamplesSeen
_endpointMode
_startWaitTime
_interspeechWaitTime
_endWaitTime
_delay
_automaticEndpointingSuspensionEndTime
_minimumDurationForEndpointer
_conversationsByIdentifier
_registerConversation:withIdentifier:
writeToURL:options:error:
setResourceValue:forKey:error:
removeItemAtURL:error:
initWithContentsOfURL:options:error:
removeConversationWithIdentifier:completionBlock:
propertyListWithData:options:format:error:
saveConversation:withIdentifier:completionBlock:
fetchConversationWithIdentifier:completionBlock:
queue
setQueue:
_safeContextDictionary
_serializedBackingStoreIncludingKeys:excludingMandatoryKeys:
idsDeviceUniqueIdentifier
serializedBackingStore
initWithSerializedBackingStore:fromLocalDevice:contextCollectorSource:
partialSerializedBackingStoreIncludingKeys:excludingMandatoryKeys:
allContextKeys
partiallyUpdatedContextForDeviceContextKeys:excludingMandatoryKeys:fromDeviceContext:
deviceContextForDeviceContextKeys:excludingMandatoryKeys:
isValid
contextCollectorSource
privacyClass
_fromLocalDevice
_deviceInfo
_privacyClass
_serializedBackingStore
_dirtyFlags
_contextCollectorSource
initWithType:deliveryDate:expirationDate:redactedKeyPaths:
expirationDate
backingStore
initWithBackingStore:
isExpiredByDate:
deliveryDate
redactedKeyPaths
_backingStore
_deliveryDate
_expirationDate
_redactedKeyPaths
alternativeSelectionCount
setAlternativeSelectionCount:
characterModificationCount
setCharacterModificationCount:
characterInsertionCount
setCharacterInsertionCount:
characterSubstitutionCount
setCharacterSubstitutionCount:
characterDeletionCount
setCharacterDeletionCount:
correctedText
setCorrectedText:
_alternativeSelectionCount
_characterModificationCount
_characterInsertionCount
_characterSubstitutionCount
_characterDeletionCount
_correctedText
initWithVirtualMemorySizeInBytes:numberOfRegions:pageSizeInBytes:residentMemorySizeInBytes:peakResidentMemorySizeInBytes:physicalMemoryFootprintInBytes:
reason
parentContext
initWithTimestamp:reason:userInfo:parentContext:
_reason
_userInfo
_parentContext
setReason:
setUserInfo:
setParentContext:
initWithEvent:streamUID:dateCreated:
event
streamUID
dateCreated
_event
_streamUID
_dateCreated
deliveryStream
contextDataType
siriCoreSQLiteRecord_enumerateStorageKeysAndValuesUsingBlock:
af_serviceDeviceContextForKeys:excludeContextExpiredBefore:
mediaRouteIdentifier
nowPlayingTimestamp
mediaType
initWithDeliveryDate:playbackState:nowPlayingTimestamp:mediaType:groupIdentifier:
mediaSystemIdentifier
initWithIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:roomName:proximity:contextSnapshots:serializedContextByKey:metricsContext:
af_serviceDeviceContextForKeys:
_startObservingMemoryPressureWithOptions:
_stopObservingMemoryPressure
initWithOptions:
_addListener:
_removeListener:
_removeAllListeners
_handleMemoryPressureWithFlags:
processName
memoryPressureObserver:didChangeFromCondition:toCondition:
removeAllListeners
getCurrentConditionWithCompletion:
_memoryPressureSource
_memoryPressureFlags
setShowUIDuringListening:
setPlayAlertBeforeListening:
_initWithShowUIDuringListening:playAlertBeforeListening:
showUIBeforeListening
beepBeforeListening
showUIDuringListening
playAlertBeforeListening
endpointDelay
_showUIDuringListening
_playAlertBeforeListening
_endpointDelay
defaultWorkspace
applicationType
appTags
isLaunchProhibited
enumerateBundlesOfType:block:
_notifyObservers
_clearState
_startObservingAvailability
_stopObservingAvailability
_notifyToken
_observers
setLabel:
setAssistantIdentifier:
setLoggingAssistantIdentifier:
setSpeechIdentifier:
setHostname:
setPeerAssistantIdentifier:
setPeerLoggingAssistantIdentifier:
setPeerSpeechIdentifier:
setPeerUserAgentString:
setPeerLanguageCode:
setPeerSiriEnabled:
setPeerHostname:
setPredefinedServer:
setAceHost:
setConnectionPolicy:
setConnectionPolicyDate:
setConnectionPolicyFirstFailureDate:
setConnectionPolicyHostname:
setGroup:
setLocaleIdentifier:
label
assistantIdentifier
loggingAssistantIdentifier
speechIdentifier
hostname
peerAssistantIdentifier
peerLoggingAssistantIdentifier
peerSpeechIdentifier
peerUserAgentString
predefinedServer
aceHost
connectionPolicy
connectionPolicyDate
connectionPolicyHostname
connectionPolicyFirstFailureDate
group
lastSyncDates
setLastSyncDates:
isActive
setIsActive:
initWithMessageDictionary:
messageDictionary
peerLanguageCode
peerSiriEnabled
peerHostname
_peerSiriEnabled
_isActive
_label
_assistantIdentifier
_loggingAssistantIdentifier
_speechIdentifier
_hostname
_peerAssistantIdentifier
_peerLoggingAssistantIdentifier
_peerSpeechIdentifier
_peerUserAgentString
_peerLanguageCode
_peerHostname
_predefinedServer
_aceHost
_connectionPolicy
_connectionPolicyDate
_connectionPolicyHostname
_lastSyncDates
_localeIdentifier
_connectionPolicyFirstFailureDate
initWithLength:
items
autoDisambiguationDisabled
af_disambiguationIdentifier
af_indexIdentifierForItem:
af_itemForIndexIdentifier:
af_disambiguationInfo
af_setDisambiguationInfo:
af_assistedSelectionItem
af_saveItemSelection:forType:
disambiguationLists
disambiguationKey
sortedArrayUsingComparator:
labelValue
infoForIdentifier:
saveInfo:forIdentifier:
timeIntervalSinceDate:
setManagedStoreObject:forKey:
fetchManagedStoreObjectForKey:reply:
setKnowledgeStoreData:forKey:inStoreWithName:completion:
getKnowledgeStoreDataForKey:inStoreWithName:completion:
resetKnowledgeStoreWithName:completion:
_synchronousManagedStoreServiceWithErrorHandler:
_managedStoreService
domainObjectForKey:
setDomainObject:forKey:
dataForKey:inKnowledgeStoreWithName:
setData:forKey:inKnowledgeStoreWithName:
resetKnowledgeStoreWithName:
_managedStoreServiceWithErrorHandler:
createModelWithType:completion:
recordFeedbackOfType:forSpeakableId:
recordRecommendedAction:forSpeakableId:withModelIdentifier:
recordNotificationUsageForSpeakableId:withStartDate:withEndDate:withCompletion:
modelWithIdentifier:didUpdateScore:forSpeakable:
startWithDelegate:
setSpeakable:
recordFeedbackOfType:forSpeakable:
setInterface:forSelector:argumentIndex:ofReply:
alarmIdentifier
_alarmIdentifier
timerURLs
setTimerURLs:
_timerURLs
setRequestHandler:
_setupRequestListener
initWithActivationEvent:
_dispatchSpeechRequestOptions:
_setupSpeechRequestListener
siriActivationListener:handleIntent:inBackgroundAppWithBundleId:reply:
siriActivationListener:handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:
siriActivationListener:prewarmWithRequestInfo:context:completion:
siriActivationListener:activateWithRequestInfo:context:completion:
siriActivationListener:deactivateForReason:options:context:completion:
setPrewarmHandler:
setNewRequestHandler:
setDismissalHandler:
setIntentHandler:
setIntentForwardingActionHandler:
setNewSpeechRequestHandler:
_prewarmHandler
_requestHandler
_dismissalHandler
_intentHandler
_intentForwardingActionHandler
_speechRequestToken
_speechRequestHandler
_siriActivationListener
initAndGetSetterBlock:
waitForValue:
_hasInvoked
_defaultValue
initWithBlock:defaultValue1:defaultValue2:
invokeWithValue:andValue:
_defaultValue1
_defaultValue2
invokeWithValue:andValue:andValue:
lastNegativeFeedback
setLastNegativeFeedback:
negativeFeedbackByContact
setNegativeFeedbackByContact:
_lastNegativeFeedback
_negativeFeedbackByContact
loadIfNecessary
save
notificationUsageStream
predicateForEventsWithStartInDateRangeFrom:to:
sortDescriptorWithKey:ascending:
startDate
endDate
timeZone
confidence
fileExistsAtPath:
initWithContentsOfFile:options:error:
initForReadingFromData:error:
finishDecoding
stringByDeletingLastPathComponent
archivedDataWithRootObject:requiringSecureCoding:error:
lastNegativeFeedbackForContact:
setLastNegativeFeedbackForContact:
fetchNotificationUsageForSpeakableId:withStartDate:withEndDate:withHandler:
interactionDetectedForSpeakableId:
_feedback
_knowledgeStore
_usageEventsBySpeakableId
currentElectionAdvertisementId
currentElectionAdvertisementData
electionAdvertisementDataByIds
initWithGeneration:sessionId:currentElectionAdvertisementId:currentElectionAdvertisementData:electionAdvertisementDataByIds:
_currentElectionAdvertisementId
_currentElectionAdvertisementData
_electionAdvertisementDataByIds
setCurrentElectionAdvertisementId:
setCurrentElectionAdvertisementData:
setElectionAdvertisementDataByIds:
initWithOriginalCommandId:category:eventInfo:duration:
originalCommandId
setOriginalCommandId:
categoryString
setCategory:
eventInfo
setEventInformation:
_roundDouble:toSignificantDigits:
setTimings:
initWithOriginalCommandId:category:duration:
aceMetrics
category
setEventInfo:
_originalCommandId
_category
_eventInfo
requestCanBeHandled
hasEligibleSetup
supportedByApplicationWithBundleID:
canBeHandled
supportedOnPlatform
supportedForApplicationWithBundleId:
performRequestWithCompletion:
initWithUserNotification:sourceAppId:
_notification
_sourceAppId
stringWithUTF8String:
fetchElligibleSetupStateAndNotifyObservers:
weakObjectsHashTable
fetchInitialState
announcementTypeForBundleID:
_requiredIntentIdentifiersForAnnouncementType:
applicationProxyForIdentifier:
appInfoWithAppProxy:
supportedIntents
_announceableIntentIdentifiersForAnnouncementType:
_fetchPairedBluetoothDevicesFromSourceWithCompletion:
fetchLocalVoiceAssetAvailabilityWithCompletion:
notifyObserversOfCurrentEligibleSetupState:
fetchEligibleSetupStateWithCompletion:
updateWirelessSplitterSessionInfoAndObserve
fetchWirelessSplitterSessionInfoAndStartObservingSync
_updateAudioRouteAvailabilityForSpokenMessagesAndBroadcast:
_fetchWirelessSplitterSessionInfoAndStartObservingFromSourceWithCompletion:
hasEligibleSetupChanged:
requestCanBeHandledChanged:
fetchRequestCanBeHandledStateWithCompletion:
startObservingWirelessSplitterSession
notifyObserversOfCurrentRequestCanBeHandledState
_setDelegate:
applicationWithBundleID:canAnnounceNotificationWithIntentIdentifiers:
_isRouteAvailableForAnnouncement:
_settingsConnectionDidDisconnect
_settingsConnectionPartialVerificationResult:
_settingsConnectionServerVerificationReport:
_inWirelessSplitterSession
_inWirelessSplitterSessionStateValid
_routeAvailableForSpokenMessages
_lastKnownEligibilityState
_localVoiceAssetAvailable
_pairedInfoChangeObserver
_wirelessSplitterSessionObserver
_wirelessGuestConnectionObserver
_forcedUpdateObserver
initWithNotifications:sourceAppId:
processIdentifier
initWithSettingsConnection:
_synchronousSettingsServiceWithErrorHandler:
_settingsServiceWithErrorHandler:
fetchAccountsSynchronously:completion:
_setVoices:
getAvailableVoicesForRecognitionLanguage:includeAssetInfo:completion:
getAvailableVoicesForLanguage:includeAssetInfo:completion:
_voices
_filterVoices:forLanguage:
_updateVoicesIncludingAssetInfo:completion:
startUIRequestWithText:
setEndpointerOperationMode:
newTurnBasedContextWithPreviousTurnID:
startUIRequestWithInfo:
fetchSupportedMultiUserLanguageCodes:
fetchAccountsWithCompletion:
accounts
saveAccount:setActive:
setAssistantLoggingEnabled:
killDaemon
shutdownSessionIfIdle
currectNWActivityId:
getAvailableVoicesForRecognitionLanguage:completion:
getAvailableVoicesForSynthesisLanguage:completion:
startUIRequest:
getHorsemanSupplementalLanguageDictionary:
setHorsemanSupplementalLanguageDictionary:completion:
getSiriOutputVolumeWithCompletion:
setSiriOutputVolume:completion:
stopObservingWirelessSplitterSession
removeMultiUserWithSharedUserID:completion:
setSiriGradingEnabled:completion:
siriGradingIsEnabled:
shouldSuppressSiriDataSharingOptInAlert:
deleteSiriHistoryWithCompletion:
_voicesQueue
_selectedVoice
_syncDataWithAnchorKeys:forceReset:reason:completion:
_getSharedCompanionInfo:
_updateMultiUserInfoForUser:score:companionId:companionSpeechId:idsIdentifier:aceHost:reset:completion:
_getSharedUserID:
_tellDelegatePartialVerificationResult:
_tellDelegateServerVerificationReport:
fileURLWithPath:
dictionaryWithContentsOfURL:error:
setAllowsCellularAccess:
setDiscretionary:
initWithConnection:
_waitUntilListeningForContext:timeoutInterval:completion:
actionType
error
_clientStateObserver
_clientStateTransitionHandlersByTimestamp
setLatitude:
setLongitude:
setUnlocalizedName:
setCountryName:
setUnlocalizedCountryName:
_initWithName:unlocalizedName:countryName:unlocalizedCountryName:timeZone:latitude:longitude:alCityID:
alCityValue
_unlocalizedName
_countryName
_unlocalizedCountryName
_timeZone
_latitude
_longitude
_alCityID
previousItem
setNextItem:
setPreviousItem:
insertBeforeItem:
_object
_previousItem
_nextItem
initWithDeliveryDate:
_nowPlayingTimestamp
_mediaType
initWithSettingType:valueBeforeUpdate:valueAfterUpdate:
settingType
valueBeforeUpdate
valueAfterUpdate
_settingType
_valueBeforeUpdate
_valueAfterUpdate
_initWithOriginatingAceID:identifier:
_descriptionWithProperties:
requestName
_af_stringByRemovingPrefixWithLength:
_af_stringByRemovingSuffix:
_setOriginatingAceID:
_refId
_setRefId:
__refId
hasSuffix:
sharedNotifier
builtInMicVoiceTriggerEvent:hostTime:
setActionType:
notifyActivationEvent:completion:
remoteMicVoiceTriggerEvent:activationInfo:hostTime:
remoteMicVADEvent:vadScore:hostTime:
jarvisVoiceTriggerEvent:activationInfo:hostTime:
preciseLocationEnabled
latitude
longitude
altitude
direction
speed
verticalAccuracy
horizontalAccuracy
initWithLatitude:longitude:altitude:direction:speed:verticalAccuracy:horizontalAccuracy:preciseLocationEnabled:
_preciseLocationEnabled
_altitude
_direction
_speed
_verticalAccuracy
_horizontalAccuracy
setAltitude:
setDirection:
setSpeed:
setVerticalAccuracy:
setHorizontalAccuracy:
setPreciseLocationEnabled:
isRemoteDevice
route
initWithRoute:isRemoteDevice:deviceUID:
_isRemoteDevice
_route
setRoute:
setIsRemoteDevice:
initWithGeneration:date:alarmsByID:notifiedFiringAlarmIDs:
_alarmsByID
_notifiedFiringAlarmIDs
setAlarmsByID:
setNotifiedFiringAlarmIDs:
proximity
contextSnapshots
serializedContextByKey
metricsContext
_mediaSystemIdentifier
_mediaRouteIdentifier
_roomName
_proximity
_contextSnapshots
_serializedContextByKey
_metricsContext
setMediaSystemIdentifier:
setMediaRouteIdentifier:
setRoomName:
setProximity:
setContextSnapshots:
setSerializedContextByKey:
setMetricsContext:
encodeFloat:forKey:
decodeFloatForKey:
setActivationDeviceIdentifier:
activationDeviceIdentifier
setIsEyesFree:
setServerCommandId:
setUseAutomaticEndpointing:
setRecordingAlertPolicy:
setUseStreamingDictation:
setHomeButtonDownEventTime:
setHomeButtonDownEventMachAbsoluteTime:
setActivationEventMachAbsoluteTime:
setStopRecordingHostTime:
setIsInitialBringUp:
setHomeButtonUpFromBeep:
setAcousticIdEnabled:
setAudioFileType:
setAudioFileHandle:
setMyriadContext:
setRecordDeviceIdentifier:
setSpeechRecordingEventListeningEndpoint:
setPendCallbacksUntilAfterContinuation:
setUseBorealisBuffer:
setAudioFileURL:
setHasPlayedStartAlert:
setBargeInOptions:
setSpeechSynthesisRecord:
setReloadSmartSiriVolume:
setSkipPersonalizedASR:
setClientAnalyticsContext:
setStartContext:
setStopContext:
setLocation:
setLocationStatus:
setIsOnPhoneCall:
setIsMediaPlaying:
setMediaPlaybackVolume:
setApplicationBundleIdentifier:
setPresentationMode:
setPreheatTestLanguage:
setPreheatTestModelPath:
isRaiseToSpeak
setBtDeviceAddress:
btDeviceAddress
isEyesFree
useAutomaticEndpointing
endpointerOperationMode
recordingAlertPolicy
useStreamingDictation
homeButtonDownEventTime
homeButtonDownEventMachAbsoluteTime
isInitialBringUp
homeButtonUpFromBeep
acousticIdEnabled
audioFileHandle
myriadContext
recordDeviceIdentifier
speechRecordingEventListeningEndpoint
usePrelisteningMode
setUsePrelisteningMode:
useBorealisBuffer
reloadSmartSiriVolume
skipPersonalizedASR
audioFileURL
hasPlayedStartAlert
bargeInOptions
speechSynthesisRecord
location
locationStatus
clientAnalyticsContext
startContext
stopContext
isOnPhoneCall
isMediaPlaying
mediaPlaybackVolume
presentationMode
preheatTestLanguage
preheatTestModelPath
applicationBundleIdentifier
_isEyesFree
_useAutomaticEndpointing
_useStreamingDictation
_isInitialBringUp
_acousticIdEnabled
_usePrelisteningMode
_pendCallbacksUntilAfterContinuation
_useBorealisBuffer
_reloadSmartSiriVolume
_skipPersonalizedASR
_suppressStartAlert
_suppressStopAlert
_hasPlayedStartAlert
_isOnPhoneCall
_isMediaPlaying
_mediaPlaybackVolume
_activationDeviceIdentifier
_serverCommandId
_endpointerOperationMode
_recordingAlertPolicy
_homeButtonDownEventTime
_homeButtonDownEventMachAbsoluteTime
_activationEventTime
_activationEventMachAbsoluteTime
_expectedActivationEventTime
_stopRecordingHostTime
_homeButtonUpFromBeep
_audioFileType
_audioFileHandle
_myriadContext
_recordDeviceIdentifier
_speechRecordingEventListeningEndpoint
_audioFileURL
_bargeInOptions
_speechSynthesisRecord
_location
_locationStatus
_clientAnalyticsContext
_startContext
_stopContext
_presentationMode
_preheatTestLanguage
_preheatTestModelPath
_applicationBundleIdentifier
observeWithCompletion:
flushWithCompletion:
classIdentifiers
setObject:forKeyedSubscript:
registerClassIdentifier:forDomain:inGroup:
supportsClassIdentifier:forDomainKey:groupIdentifier:
factoryClass
setFactoryClass:
factoryInstance
setFactoryInstance:
setClassIdentifiers:
_factoryClass
_factoryInstance
_classIdentifiers
initWithPath:domainKeys:factoryInitializationBlock:
_loadBundlesIfNeeded
initWithPath:
_registerBundle:
principalClass
infoDictionary
pluginManagerForPath:domainKeys:factoryInitializationBlock:
enumerateFactoryInstancesForDomainKey:groupIdentifier:classIdentifier:usingBlock:
preloadBundles
_path
_domainKeys
_factoryInitializationBlock
_domainKeyDictionary
_hasLoadedBundles
setTurnContext:
setEvent:
mergeFrom:
hasTurnContext
hasEvent
readFrom:
writeTo:
copyTo:
turnContext
_turnContext
initWithBytes:length:encoding:
unarchivedObjectOfClasses:fromData:error:
unarchivedObjectOfClass:fromData:error:
_initWithRequest:context:
timersByID
notifiedFiringTimerIDs
initWithGeneration:date:timersByID:notifiedFiringTimerIDs:
_timersByID
_notifiedFiringTimerIDs
setTimersByID:
setNotifiedFiringTimerIDs:
initWithExperimentsByConfigurationIdentifier:
_experimentsByConfigurationIdentifier
setExperimentsByConfigurationIdentifier:
_af_URLWithMessageIdentifier:
attachmentURL
setAttachments:
sendDate
setDateSent:
bodyText
setMessage:
isOutbound
subjectText
setSubject:
chatIdentifier
groupName
setGroupName:
groupNameId
setGroupNameId:
senderAddress
setMsgSender:
recipientAddresses
effect
setEffect:
setOutbound:
setSenderAddress:
senderInternalGUID
_setSenderInternalGUID:
setRecipientAddresses:
setSubjectText:
setBodyText:
setAttachmentURL:
setSendDate:
_outbound
_senderAddress
_senderInternalGUID
_recipientAddresses
_groupName
_groupNameId
_subjectText
_bodyText
_effect
_attachmentURL
_sendDate
_chatIdentifier
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
URLWithString:
scheme
resourceSpecifier
stringByRemovingPercentEncoding
_af_messageIdentifierValue
attachments
dateSent
outgoing
subject
msgSender
msgRecipients
af_messageValue
initWithVoiceTriggerEnabled:
voiceTriggerEnabled
_voiceTriggerEnabled
lastPlayedAnnouncement
initWithState:lastPlayedAnnouncement:
_lastPlayedAnnouncement
setLastPlayedAnnouncement:
_machServiceNameForAppTaskServiceWithBundleIdentifier:
initWithMachServiceName:
setService:
valueForEntitlement:
af_siriTaskDeliveringInterface
appTaskService
_listener
siriTaskService:handleSiriTask:
service
_service
weakToWeakObjectsMapTable
_handleFailureOfRequest:error:atTime:
setOutcomes:
taskmaster:didReceivePunchoutOutcome:
handleSiriTaskUsageResult:fromRequest:
initWithTaskDeliverer:
_executorForRequest
setEnabled:
daysOfWeek
setDaysOfWeek:
hourOfDay
setHourOfDay:
minuteOfHour
setMinuteOfHour:
isSleepAlarm
setSleepAlarm:
isOverrideAlarm
setOverrideAlarm:
bedtimeHour
setBedtimeHour:
bedtimeMinute
setBedtimeMinute:
_enabled
_daysOfWeek
_hourOfDay
_minuteOfHour
_sleepAlarm
_overrideAlarm
_bedtimeHour
_bedtimeMinute
_propertyListWithTreeNode:itemPropertyListCreation:
_treeNodeWithPropertyList:error:itemCreation:
initWithUUID:context:relinquishmentHandler:
invokeRelinquishmentHandlerWithContext:
_relinquishmentHandler
relinquishAssertionWithUUID:context:
relinquishWithContext:
initWithRecord:coordinator:
_record
_coordinator
numberOfPendingAndActiveAssertions
_addRecord:isFirstRecord:
_didAcquireAssertion:isFirstAssertion:
_removeRecordWithUUID:isLastRecord:
_didRelinquishAssertion:isLastAssertion:
_records
_removeAllRecords
assertionCoordinator:didAcquireAssertion:isFirstAssertion:
assertionCoordinator:didRelinquishAssertion:isLastAssertion:
initWithIdentifier:queue:delegate:
acquireRelinquishableAssertionWithContext:relinquishmentHandler:
getActiveAssertionsWithCompletion:
_numberOfPendingAndActiveRecords
_recordsByUUID
_store
base64EncodedStringWithOptions:
_initWithMessage:
createResponseWithMessageIdentifier:
resultType
addressBookID
setAddressBookID:
addressLabel
setAddressLabel:
contactName
setContactName:
geoResult
setGeoResult:
setResultType:
_addressBookID
_addressLabel
_contactName
_geoResult
_resultType
virtualMemorySizeInBytes
numberOfRegions
pageSizeInBytes
residentMemorySizeInBytes
peakResidentMemorySizeInBytes
physicalMemoryFootprintInBytes
_numberOfRegions
_pageSizeInBytes
_virtualMemorySizeInBytes
_residentMemorySizeInBytes
_peakResidentMemorySizeInBytes
_physicalMemoryFootprintInBytes
setVirtualMemorySizeInBytes:
setNumberOfRegions:
setPageSizeInBytes:
setResidentMemorySizeInBytes:
setPeakResidentMemorySizeInBytes:
setPhysicalMemoryFootprintInBytes:
itemURL
initWithTimestamp:source:event:options:deviceID:userInfo:
hasFiringTimers
startedDate
finishedDate
isCommunalDevice
logEventWithType:machAbsoluteTime:context:contextNoCopy:
logEventWithType:machAbsoluteTime:contextProvider:contextProvidingQueue:
logEventWithType:machAbsoluteTime:contextResolver:
logInstrumentation:machAbsoluteTime:turnContext:
setTurnID:
setEventType:
setEventData:
_stageEvent:
_service:
_stageEvents:
logEventWithType:contextProvider:contextProvidingQueue:
logEventWithType:contextResolver:
logInstrumentation:turnContext:
logInstrumentation:machAbsoluteTime:turnIdentifier:
logInstrumentationOfType:turnIdentifier:
logEvents:
initWithDeliveryStream:type:timestamp:contextDataType:contextData:
dataWithJSONObject:options:error:
_startWithDelegate:
_stop
_prewarmWithRequestInfo:context:completion:
_activateWithRequestInfo:context:completion:
_deactivateForReason:options:context:completion:
suspend
_xpcListener
playsSound
logExperimentExposureForTapToSiriBehavior
experimentForSiriVOXTapToSiriBehavior
_updateStateWithNotifyState:
_notifyObserver
_suggestionsFilePath
arrayWithContentsOfFile:
suggestionsDidChange:
writeToFile:atomically:
initWithLanguageCode:delegate:
getSuggestedUtterancesWithCompletion:
setSuggestedUtterances:
_suggestedUtterances
initiatorAddress
setInitiatorAddress:
recipientAddress
setRecipientAddress:
_initiatorAddress
_recipientAddress
startedHostTime
finishedHostTime
initWithIdentifier:startedHostTime:finishedHostTime:startedDate:finishedDate:
_startedHostTime
_finishedHostTime
_startedDate
_finishedDate
setStartedHostTime:
setFinishedHostTime:
setStartedDate:
setFinishedDate:
_initWithSettingType:
_setUp
_fetchTimersForReason:completion:
_tearDown
_timerSnapshot
_consolidateNotifiedFiringTimers
clockTimerObserver:snapshotDidUpdateFrom:to:
_enumerateListenersUsingBlock:
clockTimerObserver:timerDidDismiss:
clockTimerObserver:timerDidFire:
_handleFetchTimersForReason:error:completion:
setWithSet:
getTimerSnapshotWithCompletion:
getFiringTimerIDsWithCompletion:
timersAdded:
timersUpdated:
timersRemoved:
timerFired:
firingTimerChanged:
firingTimerDismissed:
stateReset:
timersChanged:
_timerSnapshotGroup
_timerSnapshotGroupDepth
_timerStorage
_timersChangedToken
_invalidateAssertionTimer
_invalidateBackboardServices
initWithBundleIDs:states:
setHandler:
applicationInfoForApplication:completion:
_processAssertionWasInvalidatedForRequest:
initWithPayload:
_startAppStateMonitoringForRequest:
serviceWithDefaultShellEndpoint
optionsWithDictionary:
_handleSuccessfulAppLaunchToBackground:forRequest:completion:
openApplication:withOptions:completion:
_processAssertionWasAcquired:
initWithBundleIdentifier:flags:reason:name:withHandler:
processAssertionWasInvalidatedForRequest:
taskmaster:didLaunchApplicationForRequestWithId:
initWithAppBundleIdentifier:
taskmaster
setTaskmaster:
_appBundleIdentifier
_appStateMonitor
_bKSAssertionForBgLaunch
_assertionTimer
_bKSAssertionSetupGroup
taskmasterForUIApplicationWithBundleIdentifier:
logClientFeedbackPresented:dialogIdentifierProvider:
_af_enumerateClientFeedbackDetails:
associatedDialogIdentifiersForAceObjectIdentifier:
logClientFeedbackPresented:
_af_dialogPhase
_af_dialogIdentifier
listenAfterSpeaking
dialogIdentifier
utteranceView
startAdvertisingEmergency
informDelegateEmergencyHandled
informDelegateEmergencyNotHandled
_createDispatchTimerFor:toExecute:
emergencyCall:wasHandled:
currentManager
initWithDelegate:onQueue:
initiateEmergencyCallMyriad
_handled
_informed
sectionID
sectionDisplayName
localizedName
setBulletin:forFeed:
bulletinID
recordID
sectionSubtype
dateIsAllDay
recencyDate
modalAlertContent
subtitle
publisherBulletinID
intentIDs
contentPreviewSetting
threadID
_displayNameForBulletin:
internalIDForBBBulletinID:
localizedNameForContext:
shouldHideTime
threadIdentifier
destinations
decodeInt64ForKey:
encodeInt64:forKey:
setBulletin:
setNotification:fromSourceApp:
wasRemovedFromFeed:
displayName
setDisplayName:
availableOnLockScreen
setAvailableOnLockScreen:
isRead
setRead:
bbBulletin
isAllDay
modalAlertContentMessage
previewRestricted
internalID
feed
_availableOnLockScreen
_read
_allDay
_previewRestricted
_displayName
_bbBulletin
_bulletinID
_recordID
_endDate
_modalAlertContentMessage
_recencyDate
_sectionID
_sectionSubtype
_subtitle
_intentIDs
_publisherBulletinID
_threadID
_internalID
_feed
acknowledgementDialogPhase
statusDialogPhase
clarificationDialogPhase
summaryDialogPhase
confirmationDialogPhase
errorDialogPhase
confirmedDialogPhase
cancelledDialogPhase
_dialogPhaseWithType:
_initWithType:
isEqualToDialogPhase:
replacesPreviousSnippetContents
isTemporary
isReflectionDialogPhase
isCancelledDialogPhase
isErrorDialogPhase
isCompletionDialogPhase
isPossiblyPartOfMultiTurnRequest
propertyForKeyWithoutDeserializing:
imagePath
symbolName
initWithImagePath:symbolName:
_imagePath
_symbolName
setImagePath:
setSymbolName:
initWithTurnIdentifier:
setPreviousTurnID:
emitInstrumentation:
emitInstrumentation:machAbsoluteTime:
nextTurnBasedContext
newTurnBasedInstrumentationContext
machServiceSiriTaskDelivererForAppWithBundleIdentifier:
_machServiceName
taskmasterForMachServiceWithName:
taskmasterForMachServiceForAppWithBundleIdentifier:
initWithObservation:filterByInstrumentationTypes:
setWithCapacity:
contextDataAsProtobuf
initWithObservation:
waitUntilInvalidated
_observerConnection
_filteredTagIdentifiers
hasTurnID
_turnID
_fetchAlarmsForReason:completion:
_alarmSnapshot
_consolidateNotifiedFiringAlarms
clockAlarmObserver:snapshotDidUpdateFrom:to:
clockAlarmObserver:alarmDidDismiss:
clockAlarmObserver:alarmDidFire:
_handleFetchAlarmsForReason:error:completion:
getAlarmSnapshotWithCompletion:
getFiringAlarmIDsWithCompletion:
alarmsAdded:
alarmsUpdated:
alarmsRemoved:
alarmFired:
firingAlarmChanged:
firingAlarmDismissed:
alarmsChanged:
_alarmSnapshotGroup
_alarmSnapshotGroupDepth
_alarmStorage
_alarmsChangedToken
appIdentifyingInfo
bundleId
clientIdentifier
_af_preferredBundleID
syncSlots
_af_normalizedKeyForKey:appBundleID:syncSlotName:
_af_normalizedKey
_af_isValid
components:fromDate:
year
month
_af_isSameDayAsDate:
setDay:
dateByAddingComponents:toDate:options:
af_isToday
af_isTomorrow
initWithAcousticFeatureValue:frameDuration:
acousticFeatureValuePerFrame
frameDuration
_acousticFeatureValuePerFrame
_frameDuration
initWithSpeechRecognitionFeatures:acousticFeatures:
speechRecognitionFeatures
acousticFeatures
_speechRecognitionFeatures
_acousticFeatures
initWithSetRequestOrigin:
ace_setRequestOrigin
af_analyticsContext
localizedCaseInsensitiveCompare:
af_addEntriesToAnalyticsContext:
af_dialogIdentifiersForAnalyticsContext
dialog
dialogs
hashedRouteUIDs
hashedRouteUID
_af_isKindOfDictationRequest
recordFailure:forConnectionType:
recordSuccessForConnectionType:isWarm:forTimeInterval:
recordSessionRetrySuccess
_fullAggDKeyWithPrefix:error:
fileSystemRepresentation
logRequestCompletedWithDuration:
missedAppContextForRequest
missedAlertContextForRequest
logRequestCancelAfterSeconds:
logSiriQuickStopAction:
logSiriMediaVolumeAction:
logSiriPausedMedia
logRequestLaunchedApp
logDictationFollowedByContinueOccurredForLanguage:
logDictationFollowedByKeyboardInputOccurredForLanguage:
logDictationFollowedByKeyboardDeleteOccurredForLanguage:
logKeyboardInputFollowedByContinueOccurredForLanguage:
logUILockCanceledVTActivation
logCreateAssistant
logLoadAssistant
logPingTimeout
logEnabledState:
logLocalRecognitionAssetEvictedForLanguage:
logLocalSpeechStartedWithDuration:
logLocalFinalSpeechRecognitionWithDuration:
logLocalRecognitionLoadedForLanguage:duration:
logLocalRecognitionWonForLanguage:
logLocalRecognitionLostForLanguage:
logDESRecordingForLanguage:error:
logDESEvaluationForLanguage:error:
logCDMAssetEvictedForAssetType:language:
noteConnectedToCarPlayHeadunit
noteSuccessOfRequest:inCar:
_hadUserEventSinceIntervalAgo:
_timestamp:isAfter:
logPeriodicUsageIfNeeded
connectionDidFail
connectionDidDrop
beginSessionRetryPreferringWWAN:
startWaitingForSpeechResponse
speechResponseReceived
speechResponseFailure
connectionType
setConnectionType:
setHasActiveRequest:
_sessionIsRetrying
_retryPrefersWWAN
_stringForGatekeeperType:
logTimeToBeepWithDuration:
logHomeButtonPressToActivationDuration:
logStarkGatekeeperDismissedManuallyForType:
logStarkGatekeeperAppearedForType:
numberWithLongLong:
_logEvent:
_attach:
attach:
_connectionInterrupted:
_connectionInvalid:
_attachmentStatusUpdate:
_listenForLaunchNotification
waitForAttachment:
setAttachmentStatusChangedHandler:
_isAttached
_attachmentStatusChangedHandler
_pendingEvents
numberOfLoops
volume
fadeInDuration
fadeOutDuration
itemData
initWithItemURL:itemData:numberOfLoops:volume:fadeInDuration:fadeOutDuration:userInfo:
_volume
_itemURL
_itemData
_numberOfLoops
_fadeInDuration
_fadeOutDuration
setItemURL:
setItemData:
setNumberOfLoops:
setVolume:
setFadeInDuration:
setFadeOutDuration:
initWithName:extension:
_extension
authorizationStatusForBundle:
_initWithRequestIdentifier:
setAlarm:
_alarm
associatedBundleIdentifier
contextDictionary
beginSiriRequestForApp:
composeNewMessageRequestToContact:phoneNumber:emailAddress:inApp:
composeNewMessageRequestInApp:
bulletin
readMessagesRequestFromConversationIdentifier:inApp:
readMessagesRequestFromNotificationIdentifier:fromApp:
composeReplyRequestToConversationIdentifier:inApp:
readHomeAnnouncementRequestFromApp:
startVoiceShortcutInCarPlayUsingTriggerId:withTriggerName:fromApp:
startPhoneCallRequestFromApp:
setShuffleEnabled:
setAlbum:
setArtist:
setBrandIdentifier:
setExternalIdentifier:
setAdamIdentifier:
_mediaTypeFromNowPlayingInfo:
setMediaType:
_mediaItemIdURLFromNowPlayingInfo:
setDurationMillis:
setPlaybackPositionMillis:
setPlaybackInfo:
album
artist
setListeningToItem:
setCurrentItemSteerable:
setIndex:
setQueueSize:
setPlaybackQueuePosition:
initWithDouble:
setPlaybackRate:
setCurrentListeningToContainer:
_af_setShuffleModeFromNowPlayingInfo:
setAudioAndSubtitleLanguageOptions:
applicationIdentifier
listeningToItem
_af_setNowPlayingInfo:
_af_validateAndFinalize
defaultTimeZone
setTimeZoneId:
setReleaseDate:
_af_releaseInfoWithReleaseDate:
setPlays:
setReleaseInfo:
_af_mediaItemWithMRContentItemRef:
initWithErrorCode:
initWithLongLong:
setApplicationIdentifier:
setLanguageTag:
setCharacteristics:
_languageOptionFromMediaRemoteRepresentation:
setAvailableTracks:
setAvailableSubtitles:
setCurrentAudioTrack:
setCurrentSubtitles:
setScheme:
setHost:
pathWithComponents:
setPath:
setVolumeValue:
setErrorCode:
setPreviousListenedToItem:
setNextListeningToItem:
getAudioSessionID
retrieveSessionWithID:
lastActivationStoppedNowPlayingApp
criteria
setCriteria:
_criteria
mostRecentFiringTimer
_initWithCall:
call
_call
initWithDelegateItem:
_delegateItem
aceContext
initWithAssociatedBundleIdentifier:bulletin:aceContext:contextDictionary:
_associatedBundleIdentifier
_bulletin
_aceContext
_contextDictionary
setAssociatedBundleIdentifier:
setAceContext:
setContextDictionary:
startAdvertisingFromVoiceTrigger
startAdvertisingFromInTaskVoiceTrigger
startAdvertisingFromInEarTrigger
startAdvertisingFromCarPlayTrigger
readDefaults
notifyCurrentDecisionResult
_initDeviceClassAndAdjustments
_initializeTimer
_initializeWiProxReadinessTimer
_resetAdvertisementTimings
stringWithCString:encoding:
initWithName:queue:
_clearWiProxReadinessTimer
releasePowerAssertion
_readDefaults
startAdvertisingSlowdown:
enterState:
_phsSetupRecord
advertiseWith:afterDelay:maxInterval:
startAdvertisingFromVoiceTriggerWithContext:
_setMyraidAudioData:
_startAdvertisingFromInTaskVoiceTrigger
_startAdvertisingFromVoiceTrigger
voiceTriggerRecord
_enterState:
startAdvertisingFromVoiceTriggerAdjusted:withContext:
startWatchAdvertisingFromVoiceTriggerWithContext:
_inTaskTriggerWasTooSoon
startWatchAdvertisingFromDirectTriggerWithContext:
directTriggerRecord
startAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromOutgoingTriggerWithContext:
_duringNextWindowEnterState:
startAdvertisingFromInTaskVoiceTriggerWithContext:
startAdvertisingFromAlertFiringVoiceTriggerWithContext:
responseObject:
_startAdvertising:afterDelay:maxInterval:
_startTimer:for:thenExecute:
_endAdvertising:
endAdvertising:
_sortedReplies
emptyRecord
numberWithUnsignedChar:
_advertiseTrigger
_deviceShouldContinue:
takePowerAssertionWithName:
_winElection
_nextElectionPublisherState
publishState:
_loseElection
_cancelOverallTimeout
_ageWedgeFilter
resetReplies
_resetAudioData
_endAdvertisingWithDeviceProhibitions:
_stateAsString
_shouldContinueFor:
shouldContinue:
_endAdvertisingAnalyticsContext:
shouldAbortAnotherDeviceBetter:
_myriadSession
myriadCoordinator:didAddAdvertisement:toSession:
_stateAsString:
willStartWithSession:
willEndSession:
_createDispatchTimerWithTime:toExecute:
myriadCoordinatorOverallTimerCancelled:
_enteringIntoState:fromState:
myriadCoordinator:didEnterState:fromState:
_leaveBLEDiagnosticMode
_stopAdvertisingAndListening
_resetActionWindows
_unduck
_cancelTimer
_handleStateMachineErrorIfNeeded
_clearMyriadSession
_shouldStopListeningBeforeAdvertising
_stopListening:
_createMyriadSessionIfRequired
_addElectionAdvertisementDataToMyriadSession:
_setupActionWindows
_setOverallTimeout
_startTimer:for:thenEnterState:
lateSuppressionRecord
_advertise:andMoveTo:
continuationRecord
_stopAdvertising:
_startListening:
emergencyRecord
myriadCoordinatorIsAdvertisingEmergency:
emergencyHandledRecord
myriadCoordinatorWillHandleEmergency:
_advertiseIndefinite:
_advertiseSlowdown
_advertiseSuppressTriggerInOutput
listeningDidBegin:
advertisingDidEnd:
listeningDidEnd:
shouldUnduck:
_contextFetchDelayForAdvertimentInterval:advertisementDelay:
_shouldUseContextCollector
_testAndFilterAdvertisementsFromContextCollector:voiceTriggerEndTime:advertisementDispatchTime:advertisement:
_testAndUpdateWedgeFilter:
_updateRepliesWith:id:data:
_suppressDeviceIfNeededWithVoiceTriggerEndTime:adverisementDispatchTime:
dateWithTimeInterval:sinceDate:
_createDispatchTimerForEvent:toExecute:
_duringNextWindowExecute:
setupAdvIntervalsInDelay:interval:withSlowdown:
slowdownRecord:
_adjustActionWindowsFromSlowdown:
_advertiseWith:afterDelay:maxInterval:thenExecute:
myriadCoordinator:willStartAdvertisingWithSlowDownInterval:
_okayToSuppressOnOutput
_advertise:afterDelay:maxInterval:andMoveTo:
myriadCoordinator:willStartAdvertisingUsingData:
_pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:
advertisingDidBegin:
isEqualToData:
advertisingWillBeginWithDelay:advertisingInterval:
recentEventBump
numberWithUnsignedShort:
_sortedReplies:
_isAPhone:
_resumeWiProxReadinessTimer
_suspendWiProxReadinessTimer
_createWaitWiProxTimer:waitBlock:
_waitWiProx:andExecute:
setDispatchQueue:
diagnosticBLEModeWithCompletion:
myriadCoordinatorDidHandleEmergency:
didChangeDefaults
clearCurrentCoordinator
initWithDelegate:
preheatWiProx
startAdvertisingForPHSSetupAfterDelay:maxInterval:
resetStateMachine
startAdvertisingFromVoiceTriggerAdjusted:
startWatchAdvertisingFromVoiceTrigger
startWatchAdvertisingFromDirectTrigger
startAdvertisingFromDirectTrigger
startAdvertisingFromOutgoingTrigger
startAdvertisingEmergencyHandled
startAdvertisingFromInTaskTriggerWithContext:
startAdvertisingFromAlertFiringVoiceTrigger
startResponseAdvertising:
endAdvertisingAfterDelay:
endAdvertising
endAdvertisingWithDeviceProhibitions:
inTask
setInTask:
setupEnabled:
_startListenTimer
startListening
startListening:
stopListening
stopListening:
startAdvertising:afterDelay:maxInterval:
advertiseWith:
_shouldHandleEmergency
waitWiProx:andExecute:
_waitWiProxAndExecute:
_enterBLEDiagnosticMode
_signalEmergencyCallHandled
injectAdvertisementForTesting:forDevice:
startListeningToEmergencySignal
startAdvertisingEmergencySignal
deviceTrumpDelay
setupActionWindows
updateRepliesWith:id:data:
stateAsString:
myriadSession:
resetMyriadCoordinator:
_myriadState
_nextState
_previousState
_incomingAudioData
_previousAdvertisedData
_replies
_replyCounts
_repliesBeforeDecision
_previousTrumps
_incomingTrumps
_multipleContinuations
_deviceClassName
_productTypeName
_deviceAdjust
_deviceDelay
_deviceTrumpDelay
_deviceVTEndtimeDistanceThreshold
_deviceInEarDelay
_deviceInEarInterval
_myriadWorkQueue
_myriadAdvertisementContextQueue
_timerLabel
_eventToken
_overallTimeout
_powerAssertionManager
_triggerRecord
_recordType
_voiceTriggerTime
_delayTarget
_advertInterval
_nTimesContinued
_nTimesExtended
_incomingAdjustment
_slowdownMsecs
_testInducedSlowdownMsecs
_maxSlowdownRecord
_BTLEReady
_inTask
_inSetupMode
_ducking
_stateMachineEncounteredError
_listenTimerIsRunning
_coordinationEnabled
_BLEActivityEnabled
_clientIsDirectActivating
_clientIsInEarActivation
_clientRecentlyLostElection
_clientLostDueToTrumping
_clientIsListeningAfterRecentWin
_clientIsWatchActivation
_clientIsWatchTrumpPromote
_clientIsRespondingToSlowdown
_clientDoneRespondingToSlowdown
_clientRespondingToCarPlay
_clientIsDeciding
_constantGoodness
_dateFormat
_coreDuetStore
_designatedSelfID
_lastSiriActivationTime
_triggerTime
_nDeltaTs
_callPunchout
_lastDecisionTime
_lastDecision
_lastPHash
_lastEmergencyAttempt
_wasEmergency
_suppressLateTrigger
_sfdiagnostics
_sfDiagnosticsTimer
_heySiriBTLEState
_wiproxReadinessTimer
_advTiming
_advContextManager
_contextRecord
_electionBeginPublisher
_electionWinPublisher
_electionLossPublisher
_electionRepostWinDecisionPublisher
_electionPublisherState
sharedUserId
initWithSharedUserId:confidenceScore:
_sharedUserId
setSharedUserId:
_beginUpdate
_getPowerWithCompletion:
_endUpdate
_createNewXPCWrapperWithCompletion:
_timerFired
_updatePowerWithAveragePower:andPeakPower:
_writeSharedMemoryWithAveragePower:peakPower:
_destroySharedMemory
_createSharedMemory
_createNewXPCWrapper
_createSharedMemoryXPCObject
getPowerWithCompletion:
createNewXPCWrapperWithCompletion:
provider
frequency
_averagePower
_peakPower
_provider
_frequency
_unregister
maximumLengthOfBytesUsingEncoding:
getCString:maxLength:encoding:
_register
_setState:withToken:
_getState:withToken:
publishStateWithBlock:
featureGroups
logExperimentExposureForInvocationFeedbacks
isFeatureGroupOneEnabled
isFeatureGroupTwoEnabled
isFeatureGroupThreeEnabled
isFeatureGroupFourEnabled
invocationFeedbackExperiment
languages
setLanguageString:
setQuality:
setMasteredVersion:
setVoiceType:
setVoiceContentVersion:
handle
isEqualToPersonContactHandle:
setHandle:
_handle
contactHandles
setContactHandles:
_contactHandles
_fullName
recordCancellationMetrics
_listInstalledServicesWithReply:
_pingServiceForIdentifier:reply:
_sendLargeData:reply:
_performCommandDictionary:forBundleIdentifier:reply:
_performTaskCommandDictionary:forBundleIdentifier:reply:
_fetchAppContextForApplicationInfo:reply:
_refreshAssistantValidation
_setState:
bluetoothWirelessSplitterSessionStateObserver:didChangeStateFrom:to:
initWithQueue:delegate:
setBundleId:
setAppIdentifyingInfo:
setOrderedContext:
aggregateContextForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:
aggregateContextForAppWithBundleIdentifier:contextProvider:completionHandler:
clientPluginManagerWithFactoryInitializationBlock:
speakableNamespaceProviderForAceObject:
VSSpeechGender
VSSpeechFootprint
setFootprint:
setIsBuiltInVoice:
setLanguages:
setContentVersion:
isBuiltInVoice
VSSpeechType
VSVoiceAsset
isMatchForVoiceAsset:
genderForVSSpeechGender:
_semaphore
_observation
createResponseWithContext:
initWithKeyOptions:valueOptions:capacity:
_removeStateForClient:
_beginSessionForClient:
_endSessionForClient:
_beginRequestWithUUID:forClient:
_endRequestWithUUID:forClient:
_beginListeningForClient:
_endListeningForClient:
_beginSpeakingForClient:
_endSpeakingForClient:
_aggregateStatesAndPublishIfNeeded
_beginPresentationTransition
_endPresentationTransitionForReason:
_aggregatedState
_stateForClient:createIfAbsent:
setHasActiveSession:
addRequestUUID:
removeRequestUUID:
setIsListening:
setIsSpeaking:
objectEnumerator
beginSpeakingForClient:
endSpeakingForClient:
beginPresentationTransition
endPresentationTransition
getCurrentStateWithCompletion:
_publisher
_statesByClient
_transactionDepth
_presentationTransitionAssertion
_presentationTransitionWatchdogTimer
_presentationTransitionGroup
hasActiveSession
isListening
isSpeaking
_requestUUIDs
_hasActiveSession
_isListening
_isSpeaking
initWithStartRequest:requestOptions:
initWithStartRequest:
_startRequestData
_requestOptions
_beginGrouping
_updateState:
_updateLastPlayedAnnouncement:
_endGrouping
_fetchStateAndLastPlayedAnnouncementForReason:completion:
_handleNotifyStateChangeFrom:to:
homeAnnouncementObserver:stateDidUpdateFrom:to:
homeAnnouncementObserver:snapshotDidUpdateFrom:to:
_updateSnapshot:
getSnapshotWithCompletion:
_snapshotGroup
_snapshot
af_isUserUtterance
af_waitsForConfirmation
af_speechModel
af_acousticFeature
af_audioAnalytics
acousticFeaturePerFrame
beginTimestamp
endTimestamp
utterance
initWithUtterance:beginTimestamp:endTimestamp:
_utterance
_beginTimestamp
_endTimestamp
setUtterance:
setBeginTimestamp:
setEndTimestamp:
_myriadEmergencyCallingQueue
recordRoute
_isVoiceTrigger
_isDucking
_isTwoShot
_speechEndHostTime
setRecordRoute:
setIsVoiceTrigger:
setIsDucking:
setIsTwoShot:
setSpeechEndHostTime:
_multiUserServiceWithErrorHandler:
getSharedUserProfileLimitWithCompletion:
modelObjects
_aceCollectionClass
isSubclassOfClass:
setDomainObjects:
initWithModelObjects:
_modelObjects
anyEventType
typeName
dateWithTimeIntervalSince1970:
eventsReferenceTime
legacyTypeName
contextDataAsDictionary
dateStamp
_deliveryStream
_contextDataType
settingChanges
_settingChanges
initWithActionType:error:
_actionType
_error
executionID
requestID
originPeerInfo
initWithExecutionID:requestID:originPeerInfo:userInfo:
_executionID
_requestID
_originPeerInfo
setExecutionID:
setRequestID:
setOriginPeerInfo:
setHasEventType:
hasEventType
hasEventData
_eventData
_eventType
_has
initFileURLWithPath:isDirectory:
URLByAppendingPathComponent:
isAMOSIdentifier
query
isAMOSCommittedIdentifier
isDictationAllowed
getActivePairedDevice
valueForProperty:
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
sharedCache
hasEntitlement:forPID:
cacheEntitlement:forPID:bundleID:
_cache
_bundleIDToPIDMap
stringWithString:
setFirstName:
setLastName:
setNickName:
setInternalGUID:
relatedNames
setRelatedNames:
_createUserActivityDataWithOptions:completionHandler:
initWithBytesNoCopy:length:encoding:freeWhenDone:
hexStringFromBytes:length:
hexStringFromData:
af_temperatureUnitForAceTemperatureUnit:
_setPreferredTemperatureUnit:
af_aceTemperatureUnit
af_setAceTemperatureUnit:
updatePairedDevices:
pairedDevices
pairedBluetoothDevices
_pairedDevices
_pairedDevicesLock
featureCapability:
bundleWithIdentifier:
objectForInfoDictionaryKey:ofClass:
_conversationItemType
_indexPath
initWithPlaybackState:nowPlayingTimestamp:mediaType:groupIdentifier:
setPlaybackState:
setNowPlayingTimestamp:
setGroupIdentifier:
dispatchCompletionWithReply:error:
initWithCommand:defaultReply:completion:
command
defaultReply
_completion
_command
_defaultReply
initWithConversation:parentItemIdentifier:
_conversation
_parentItemIdentifier
_indexPathForItemAtIndex:
_addItemsForAceObjects:type:dialogPhase:asChildrenOfItemWithIdentifier:
_identifierOfItemAtIndex:
enumerateIndexesUsingBlock:
_indexPathForLastRestoredItem
itemAtIndex:
numberOfItems
addItemsForAceObjects:type:dialogPhase:
addItemsForAceObjects:type:dialogPhase:asChildrenOfItemAtIndex:
identifiersForItemsAtIndexes:
removeItemsAtIndexes:
itemIsRestoredAtIndex:
setTriggerlessListeningOptions:
triggerlessListeningOptions
_triggerlessListeningOptions
setPid:
_pid
hour
minute
repeatOptions
isSnoozed
alarmID
alarmURL
initWithAlarmID:alarmURL:isFiring:title:type:hour:minute:repeatOptions:isEnabled:isSnoozed:firedDate:dismissedDate:lastModifiedDate:
_isSnoozed
_alarmID
_alarmURL
_hour
_minute
_repeatOptions
setAlarmID:
setAlarmURL:
setHour:
setMinute:
setRepeatOptions:
setIsSnoozed:
_debugName
donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:
strongToWeakObjectsMapTable
getRedactedContextForContextSnapshot:metadata:privacyPolicy:completion:
defaultService
registerContextTransformer:forType:
donateContext:withMetadata:pushToRemote:
_transformersByType
isDeviceOwnedByCurrentUser
idsIdentifier
rapportEffectiveIdentifier
buildVersion
userInterfaceIdiom
aceVersion
initWithIsDeviceOwnedByCurrentUser:idsIdentifier:idsDeviceUniqueIdentifier:rapportEffectiveIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:isCommunalDevice:roomName:name:productType:buildVersion:userInterfaceIdiom:aceVersion:
_isDeviceOwnedByCurrentUser
_isCommunalDevice
_idsIdentifier
_idsDeviceUniqueIdentifier
_rapportEffectiveIdentifier
_buildVersion
_userInterfaceIdiom
_aceVersion
setIsDeviceOwnedByCurrentUser:
setIdsIdentifier:
setIdsDeviceUniqueIdentifier:
setRapportEffectiveIdentifier:
setIsCommunalDevice:
setBuildVersion:
setUserInterfaceIdiom:
setAceVersion:
initWithProcessIdentifier:processName:
_processIdentifier
_processName
setProcessIdentifier:
setProcessName:
_responseHandlerConnection
_invalidateConnectionAfterMessageSent:
_usageResultHandlerConnection
_endpoint
_setEndpoint:
initWithXPCDictionary:
encodeWithXPCDictionary:
fallbackXPCEncodableClass
failWithError:
completeWithResponse:
reportUsageResult:
_remoteResponseListenerEndpoint
_usageResultListenerEndpoint
voiceOverTouchEnabledPreferenceDidChange:
vibrationDisabledPreferenceDidChange:
_fetchIsVoiceOverTouchEnabled
_fetchIsVibrationDisabled
_setState:clearDirtyFlags:
_updateVoiceOverTouchEnabledPreference
_updateVibrationDisabledPreference
setRepresentation
_stateLock
_stateDirtyFlags
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v28@0:8@"AFNetworkAvailability"16B24
v16@0:8
B32@0:8@16^@24
B40@0:8@16@24^@32
B48@0:8@16@24@32^@40
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16f24f28
v32@0:8@"AFAudioPowerUpdater"16f24f28
v40@0:8@16@24@32
v40@0:8@"AFAccessibilityObserver"16@"AFAccessibilityState"24@"AFAccessibilityState"32
v32@0:8@16q24
v32@0:8@"AFDeviceRingerSwitchObserver"16q24
v72@0:8@16q24@32@40d48@56@?64
v72@0:8@"AFInterstitialProvider"16q24@"NSString"32@"NSString"40d48@56@?<v@?>64
@24@0:8@16
v24@0:8@16
v20@0:8B16
v52@0:8@16B24@28@36@?44
v56@0:8@16B24@28@36B44@?48
v32@0:8@16@?24
v52@0:8@16B24q28d36@?44
v20@0:8I16
v24@0:8Q16
v40@0:8@16q24@32
v32@0:8@16@24
v40@0:8q16@24@?32
v24@0:8q16
v24@0:8@?16
v28@0:8@16I24
v32@0:8q16@?24
v44@0:8B16@20@28@?36
v72@0:8q16@24@32@40d48@56@?64
v32@0:8q16@24
v32@0:8Q16@?24
v40@0:8Q16q24@?32
v48@0:8Q16q24@32@?40
v24@0:8B16B20
v48@0:8@16@24@32@40
@24@0:8q16
v36@0:8@16@24B32
@?24@0:8@16
v48@0:8@16q24@32@40
v32@0:8@16d24
I16@0:8
f16@0:8
v40@0:8@16@24@?32
v40@0:8@16Q24@?32
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"AFCallSiteInfo"
@"NSArray"
@"AFClockAlarmSnapshot"
@"AFClockTimerSnapshot"
@"NSUUID"
@"AFWatchdogTimer"
@"AFOneArgumentSafetyBlock"
@"NSMutableDictionary"
@"AFAudioPowerUpdater"
@"AFClientConfiguration"
@"AFInterstitialProvider"
@"AFQueue"
@"NSError"
@"NSObject<OS_dispatch_group>"
@"<AFAssistantUIService>"
@"<AFSpeechDelegate>"
@24@0:8@?16
Vv20@0:8B16
Vv20@0:8I16
Vv32@0:8@16@?24
Vv40@0:8@16@24@?32
Vv24@0:8Q16
Vv32@0:8@16@24
Vv24@0:8@16
Vv24@0:8@?16
Vv36@0:8@16I24@?28
Vv48@0:8@16B24B28Q32@?40
Vv32@0:8q16@?24
Vv40@0:8@16@24@32
Vv40@0:8q16@24@?32
Vv24@0:8q16
Vv32@0:8@"AceObject<SAAceCommand>"16@?<v@?@"AceObject<SAAceCommand>"@"NSError">24
Vv40@0:8@"NSString"16@"NSURL"24@?<v@?B>32
Vv32@0:8@"NSURL"16@?<v@?B>24
Vv32@0:8@"NSDictionary"16@"NSURL"24
Vv24@0:8@"INImage"16
Vv24@0:8@"NSString"16
Vv32@0:8@"NSString"16@"NSError"24
Vv32@0:8@"NSString"16@?<v@?B>24
Vv32@0:8@"AFRequestInfo"16@?<v@?B>24
Vv24@0:8@?<v@?@"NSArray">16
Vv24@0:8@?<v@?@"AFClockAlarmSnapshot"@"AFClockTimerSnapshot">16
Vv32@0:8@"AFXPCWrapper"16@?<v@?>24
Vv36@0:8@"NSString"16I24@?<v@?>28
Vv48@0:8@"NSString"16B24B28Q32@?<v@?>40
Vv24@0:8@?<v@?>16
Vv32@0:8q16@?<v@?dd@"NSError">24
Vv32@0:8@"NSError"16@?<v@?>24
Vv24@0:8@"SASSpeechRecognized"16
Vv32@0:8@"AFSpeechInterpretation"16@"NSString"24
Vv24@0:8@"SASSpeechPartialResult"16
Vv24@0:8@"NSError"16
Vv40@0:8@"NSArray"16@"NSArray"24@"NSString"32
Vv24@0:8@"AFAudioPlaybackRequest"16
Vv32@0:8@"AFAudioPlaybackRequest"16@"NSError"24
Vv40@0:8q16@"INIntent"24@?<v@?BB>32
@32@0:8@16@24
@"AFConnection"
@68@0:8q16@24B32B36B40Q44@52@60
v24@0:8d16
@"AFInterstitialConfiguration"
@"NSMutableArray"
@"<AFInterstitialProviderDelegate>"
@40@0:8q16@24@32
@24@0:8d16
q16@0:8
d16@0:8
@72@0:8@16@24@32q40@48q56@64
@40@0:8@16@24@32
@56@0:8@16q24@32q40@48
@48@0:8@16q24@32@40
v64@0:8@16@24^@32^@40^@48^@56
@32@0:8@16q24
@"AFVoiceInfo"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@64@0:8q16@24@32@40@48@56
@24@0:8Q16
@"AFExperimentGroup"
v24@0:8@"NSString"16
v24@0:8@"AFExperimentGroup"16
v24@0:8@"NSArray"16
@"AFExperimentConfiguration"
{_mutationFlags="isDirty"b1"hasType"b1"hasIdentifier"b1"hasVersion"b1"hasControlGroup"b1"hasExperimentGroups"b1"hasSalt"b1}
Vv40@0:8@16q24@?32
Vv48@0:8@16@24@32@?40
Vv40@0:8@"NSData"16q24@?<v@?@"NSData"@"NSError">32
Vv40@0:8@"NSDictionary"16q24@?<v@?@"NSDictionary"@"NSDictionary">32
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v40@0:8@16q24@?32
Vv56@0:8@16@24@32@40@?48
Vv56@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"AFCommandExecutionInfo"40@?<v@?@"NSDictionary"@"NSArray"@"NSError">48
Vv56@0:8@"NSString"16@"NSString"24@"NSUUID"32@"AFSyncInfo"40@?<v@?>48
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"AFSyncSnapshot">40
Vv32@0:8@"NSString"16@"NSString"24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?>32
Vv72@0:8@16@24@32@40@48@56@?64
Vv44@0:8@16@24B32@?36
Vv72@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSString"48@"NSUUID"56@?<v@?B>64
Vv24@0:8@?<v@?B>16
Vv40@0:8@"SABaseCommand"16@"AFCommandExecutionInfo"24@?<v@?@"SABaseCommand"@"NSError">32
Vv44@0:8@"NSSet"16@"NSString"24B32@?<v@?@"NSArray">36
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"AFLinkedListItem"
@"<AFQueueDelegate>"
@"AFSettingsConnection"
@32@0:8q16@24
@"AFBluetoothWirelessSplitterSessionInfo"
{_mutationFlags="isDirty"b1"hasState"b1"hasDeviceAddresses"b1}
@48@0:8q16@24@32@40
@"NSURL"
q24@0:8@16
@68@0:8@16q24B32@36q44@52@60
@36@0:8@16q24B32
@"NSNumber"
@"NSUUID"16@0:8
@"AceObject"16@0:8
@"AFDialogPhase"16@0:8
@"AFDataStore"16@0:8
@96@0:8@16@24q32@40@48q56@64B72B76B80B84@88
@88@0:8@16q24@32@40q48@56B64B68B72B76@80
@80@0:8q16@24@32q40@48B56B60B64B68@72
@"AceObject"
@"AFDialogPhase"
@"AFDataStore"
@"NSURL"16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v32@0:8@?16@?24
@48@0:8q16d24@32@40
B32@0:8d16d24
Q20@0:8C16
c28@0:8C16@20
d28@0:8C16@20
@28@0:8C16@20
@24@0:8r^[16C]16
C16@0:8
@"NSData"
@"AFRequestInfo"
v40@0:8@16@24Q32
v40@0:8@"AFSiriRequest"16@"NSError"24Q32
v32@0:8@16Q24
v32@0:8@"AFSiriResponse"16Q24
@"AFSiriRequest"
@"<AFSiriTaskDelivering>"
@"NSXPCListener"
@40@0:8@16Q24@32
@"NSDictionary"
v24@0:8@"NSDictionary"16
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasAllocation"b1"hasProperties"b1}
@32@0:8d16@?24
@40@0:8d16@24@?32
@"NSObject<OS_dispatch_source>"
@"NSDate"
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
v24@0:8@"NSNumber"16
@"AFMultiUserStateSnapshot"
{_mutationFlags="isDirty"b1"hasVtSatScore"b1"hasConfidenceScores"b1}
@32@0:8Q16@24
@"AFMyriadPerceptualAudioHash"
v24@0:8@"AFMyriadPerceptualAudioHash"16
@"AFMyriadContext"
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasPerceptualAudioHash"b1}
Vv48@0:8q16Q24@32@?40
Vv40@0:8@"AFRequestInfo"16@"AFSiriActivationContext"24@?<v@?@"AFSiriActivationResult">32
Vv48@0:8q16Q24@"AFSiriActivationContext"32@?<v@?@"AFSiriActivationResult">40
Vv32@0:8@"AFSiriActivationContext"16@?<v@?@"AFSiriActivationResult">24
Vv40@0:8@"INIntent"16@"NSString"24@?<v@?@"INIntentResponse"@"NSError">32
Vv40@0:8@"INIntentForwardingAction"16@"NSString"24@?<v@?@"INIntentForwardingActionResponse">32
@"NSRegularExpression"
@"NSObject<OS_xpc_object>"
Vv32@0:8@"NSArray"16@?<v@?>24
@32@0:8@16^@24
@"STTimer"
B32@0:8^f16^f24
@"AFXPCWrapper"
@"_AFAudioPowerXPCSharedMemory"
^{__CFArray=}
@"CPDistributedMessagingCenter"
@"NSHashTable"
v32@0:8@"UNNotificationRequest"16@?<v@?@"NSError">24
v24@0:8@"UNNotificationResponse"16
@32@0:8q16q24
@"AFAccessibilityState"
{_mutationFlags="isDirty"b1"hasIsVoiceOverTouchEnabled"b1"hasIsVibrationDisabled"b1}
@32@0:8Q16Q24
@32@0:8@16Q24
v32@0:8Q16@24
v32@0:8Q16@?<v@?^vI>24
@108@0:8@16@24B32@36q44d52q60d68@76@84@92@100
v24@0:8@"NSUUID"16
v24@0:8@"NSURL"16
v24@0:8@"NSDate"16
@"AFClockTimer"
{_mutationFlags="isDirty"b1"hasTimerID"b1"hasTimerURL"b1"hasIsFiring"b1"hasTitle"b1"hasState"b1"hasDuration"b1"hasType"b1"hasFireTimeInterval"b1"hasFireDate"b1"hasFiredDate"b1"hasDismissedDate"b1"hasLastModifiedDate"b1}
Vv24@0:8@?<v@?@"NSError">16
Vv40@0:8@16Q24@32
Vv40@0:8@"NSString"16Q24@"NSUUID"32
Vv24@0:8@"AFAnalyticsEvent"16
Vv24@0:8@"NSArray"16
v48@0:8@16@24Q32@?40
@28@0:8@16B24
@"SASyncAppMetaData"
@"NSSet"
@52@0:8@16@24@32B40d44
@"AFSpeechRecognition"
@"AFSpeechAudioAnalytics"
@"AFSpeechRecordingAlertBehavior"
{_mutationFlags="isDirty"b1"hasStyle"b1"hasBeepSoundID"b1}
v24@0:8@"NSData"16
{_mutationFlags="isDirty"b1"hasData"b1}
Vv28@0:8@16B24
Vv44@0:8@16B24@28@?36
v32@0:8B16B20@?24
Vv28@0:8B16@?20
Vv56@0:8@16@24Q32@40@?48
Vv36@0:8f16@20@?28
Vv60@0:8@16@24@32@40B48@?52
Vv32@0:8B16B20@?24
Vv56@0:8@16d24d32q40@?48
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv28@0:8@"NSDictionary"16B24
Vv44@0:8@"NSArray"16B24@"NSString"28@?<v@?@"NSArray">36
v32@0:8B16B20@?<v@?@"NSArray">24
Vv28@0:8B16@?<v@?@"NSArray">20
Vv32@0:8@"AFVoiceInfo"16@?<v@?>24
Vv32@0:8@"NSString"16@?<v@?>24
Vv40@0:8@"NSString"16@"AFVoiceInfo"24@?<v@?@"NSDictionary"@"NSError">32
Vv24@0:8@?<v@?@"NSDictionary"@"NSError">16
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSData"@"NSError">40
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8@"AFRequestInfo"16@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
Vv56@0:8@"NSString"16@"NSString"24Q32@"NSDictionary"40@?<v@?@"NSError">48
Vv32@0:8@"NSURL"16@?<v@?@"NSError">24
Vv40@0:8@"AFRequestInfo"16@"NSString"24@?<v@?@"NSError">32
Vv32@0:8@"AFAudioPlaybackRequest"16@?<v@?@"NSError">24
Vv28@0:8@"AFAudioPlaybackRequest"16B24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSArray"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"NSDate"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
Vv32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
Vv24@0:8@?<v@?@"AFExperimentContext"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSArray">24
Vv24@0:8@?<v@?@"SAPerson"@"NSError">16
Vv24@0:8@?<v@?B@"NSError">16
Vv32@0:8@"NSDictionary"16@?<v@?>24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv32@0:8@"NSUUID"16@?<v@?@"AFPeerInfo">24
Vv24@0:8@?<v@?@"NSArray"B>16
Vv24@0:8@"NSNumber"16
Vv32@0:8@"NSString"16@?<v@?f@"NSError">24
Vv36@0:8f16@"NSString"20@?<v@?@"NSError">28
Vv32@0:8@"NSString"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv32@0:8@"NSUUID"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv24@0:8@?<v@?@"AFBluetoothWirelessSplitterSessionInfo">16
Vv60@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
Vv24@0:8@?<v@?@"NSString">16
Vv44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSError">36
Vv32@0:8B16B20@?<v@?B>24
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
Vv72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?@"NSError">64
Vv24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
Vv28@0:8B16@?<v@?@"NSError">20
Vv28@0:8B16@?<v@?>20
Vv32@0:8@"NSNumber"16@?<v@?>24
Vv32@0:8q16@?<v@?>24
Vv24@0:8@?<v@?@"NSDate">16
Vv24@0:8@"NSDate"16
Vv32@0:8@"NSString"16@?<v@?@"NSDate">24
Vv32@0:8@"NSString"16@"NSDate"24
Vv24@0:8@?<v@?@"NSUUID">16
Vv24@0:8@?<v@?q>16
Vv32@0:8@"AFDeleteSiriHistoryContext"16@?<v@?@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
Vv56@0:8@"NSString"16d24d32q40@?<v@?@"NSURL"@"NSError">48
Vv32@0:8@"AFMyriadAdvertisementContext"16@?<v@?@"NSDictionary"@"NSError">24
Vv24@0:8@"NSDictionary"16
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"AFPersonalUserSettings"@"NSError">24
@64@0:8@16@24@32@40@48@56
@"AFDeleteSiriHistoryContext"
{_mutationFlags="isDirty"b1"hasSuccessTitle"b1"hasSuccessBody"b1"hasSuccessButtonText"b1"hasErrorTitle"b1"hasErrorBody"b1"hasErrorButtonText"b1}
v28@0:8B16@?20
v20@0:8C16
i16@0:8
v20@0:8i16
v20@0:8f16
@32@0:8@16^B24
v20@0:8S16
v24@0:8C16C20
v24@0:8f16i20
S16@0:8
@"AFSafetyBlock"
v52@0:8@16@24@32@40f48
v40@0:8q16@24@32
@"AFTreeNode"
d24@0:8@16
v32@0:8@?<v@?>16@?<v@?@"NSArray">24
@"AFSiriTaskmaster"
@24@0:8#16
v56@0:8@16@24@32@40B48B52
v56@0:8@16q24@32@40@48
@"<AFConversationDelegate>"
@"<AFConversationStorable>"
@40@0:8Q16@24d32
@"AFMyriadAdvertisementContext"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasContextData"b1"hasContextFetchDelay"b1}
v28@0:8@16i24
v40@0:8@16Q24Q32
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
v32@0:8@?16@24
@"AFNotifyObserver"
@64@0:8@16q24B32B36B40f44@48@56
@"AFAudioPlaybackRequest"
v24@0:8@"AFAccessibilityState"16
v24@0:8@"AFAudioPlaybackRequest"16
{_mutationFlags="isDirty"b1"hasAccessibilityState"b1"hasDeviceRingerSwitchState"b1"hasIsDeviceInSetupFlow"b1"hasIsDeviceInCarDNDMode"b1"hasIsDeviceInStarkMode"b1"hasOutputVolume"b1"hasTapToSiriAudioPlaybackRequest"b1"hasTwoShotAudioPlaybackRequest"b1}
@244@0:8I16{?=[64S]^{__CFString}^S*{?=qq}qq}20Q204^I212^B220^B228^B236
@236@0:8I16{?=[64S]^{__CFString}^S*{?=qq}qq}20Q204^I212^B220^B228
@60@0:8@16B24^@28^B36^B44^B52
@56@0:8@16^@24^B32^B40^B48
@40@0:8@16^@24^B32
@48@0:8@16^@24^B32^B40
@"NSLocale"
@"NSString"24@0:8@"NSString"16
@"NSString"32@0:8@"NSString"16^B24
@24@0:8@"AceObject"16
v24@0:8@"AFBulletin"16
@"NSURL"24@0:8@"NSString"16
@48@0:8@16Q24@32@40
@"<AFNotifyObserverDelegate>"
{_flags="delegateRespondsToDidReceiveNotificationWithToken"b1"delegateRespondsToDidChangeStateFromTo"b1}
@"NSDateFormatter"
Vv40@0:8@16@24B32B36
Vv44@0:8@16B24@28@36
Vv32@0:8q16@24
Vv40@0:8@16q24@32
Vv48@0:8@16q24@32@40
Vv48@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32@?<v@?@"NSXPCListenerEndpoint">40
Vv40@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32
Vv24@0:8@"AFSpeechRequestOptions"16
Vv40@0:8@"AFDictationOptions"16@"NSString"24B32B36
Vv24@0:8@"NSData"16
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSDictionary"24
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSString"24
Vv32@0:8@"NSString"16@"AFDictationOptions"24
Vv44@0:8@"NSURL"16B24@"NSString"28@"AFDictationOptions"36
Vv32@0:8q16@"NSString"24
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv40@0:8@"NSError"16q24@"NSDictionary"32
Vv48@0:8@"NSError"16q24@"NSString"32@"NSDictionary"40
v56@0:8@16@24@32@40@48
v40@0:8@16@24B32B36
B28@0:8@16B24
v48@0:8@16@24@32Q40
@?40@0:8@16@24@32
@"<AFDictationDelegate>"
@"AFSpeechRequestOptions"
@"NSMutableData"
@"AFAnalyticsEvent"
v44@0:8@16B24@28@36
Vv56@0:8@16@24@32@40@48
Vv24@0:8d16
Vv36@0:8@16@24B32
Vv24@0:8@"AFXPCWrapper"16
Vv40@0:8@"AFDictationOptions"16@"NSString"24@"NSString"32
Vv56@0:8@"NSArray"16@"NSArray"24@"NSString"32@"NSDictionary"40@"AFSpeechAudioAnalytics"48
Vv32@0:8@"NSArray"16@"NSString"24
Vv32@0:8@"NSFileHandle"16@"NSError"24
Vv40@0:8@"NSArray"16@"NSString"24B32B36
Vv24@0:8@"AFSpeechPackage"16
Vv36@0:8@"NSString"16@"NSDictionary"24B32
Vv24@0:8@"SASMultilingualSpeechRecognized"16
@"AFDictationConnection"
B32@0:8@16@?24
B32@0:8@"AFSiriActivationContext"16@?<v@?@"AFSiriActivationResult">24
@64@0:8@16@24I32I36B40B44B48B52B56B60
@"AFBluetoothDeviceInfo"
{_mutationFlags="isDirty"b1"hasAddress"b1"hasDeviceUID"b1"hasVendorID"b1"hasProductID"b1"hasIsAdvancedAppleAudioDevice"b1"hasSupportsInEarDetection"b1"hasSupportsVoiceTrigger"b1"hasSupportsSpokenNotification"b1"hasSupportsListeningModeANC"b1"hasSupportsListeningModeTransparency"b1}
Vv128@0:8@16@24@32@40@48B56B60B64d68B76@80@88B96@100@108B116@?120
Vv36@0:8@16B24@?28
Vv68@0:8@16@24@32@40@48B56@?60
Vv32@0:8@"NSString"16@"NSURL"24
Vv128@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSData"48B56B60B64d68B76@"NSDictionary"80@"NSURL"88B96@"NSURL"100@"NSString"108B116@?<v@?@"NSString"@"NSString"@"NSError">120
Vv56@0:8@"NSString"16@"NSString"24@"NSData"32@"NSString"40@?<v@?@"NSData"@"NSString"@"NSError">48
Vv28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
Vv32@0:8@"NSString"16@?<v@?@"NSData">24
Vv48@0:8@"NSDictionary"16@"NSData"24@"NSArray"32@?<v@?@"NSDictionary"@"NSData"@"NSError">40
Vv36@0:8@"NSString"16B24@?<v@?@"NSData"@"NSString">28
Vv24@0:8@?<v@?@"NSNumber"@"NSError">16
Vv32@0:8@"NSSet"16@?<v@?@"NSNumber"@"NSError">24
Vv68@0:8@"NSDictionary"16@"NSString"24@"NSDictionary"32@"NSString"40@"NSString"48B56@?<v@?@"NSDictionary"@"NSError">60
Vv24@0:8@"AFSpeechRecognition"16
Vv32@0:8@"NSDictionary"16@"NSError"24
v24@0:8@"AFSpeechRecordingAlertBehavior"16
@"AFSpeechRecordingAlertPolicy"
{_mutationFlags="isDirty"b1"hasStartingAlertBehavior"b1"hasStoppedAlertBehavior"b1"hasStoppedWithErrorAlertBehavior"b1}
@56@0:8@16@24@32@40q48
@"AFExperiment"
{_mutationFlags="isDirty"b1"hasConfigurationIdentifier"b1"hasConfigurationVersion"b1"hasDeploymentGroupIdentifier"b1"hasDeploymentGroupProperties"b1"hasDeploymentReason"b1}
@"AFRequestCompletionOptions"
@"SAStartRequest"
@"SAStartLocalRequest"
@"NSDate"16@0:8
@"<AFClockItemStorageDelegate>"
@28@0:8B16@?20
Vv32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand"@"NSError">24
@48@0:8@16B24B28@?32@?40
v40@0:8@16B24B28@?32
v48@0:8@16B24B28@?32@?40
v44@0:8@16B24@?28@?36
v40@0:8@16@?24@?32
Vv40@0:8@16B24B28@?32
Vv40@0:8@"SABaseCommand"16B24B28@?<v@?B@"NSError">32
@48@0:8@16@24@32@40
@"STSiriContext"
@"AFLanguageDetectionUserContext"
@44@0:8B16q20q28q36
@"AFBluetoothHeadphoneInEarDetectionState"
{_mutationFlags="isDirty"b1"hasIsEnabled"b1"hasPrimaryEarbudSide"b1"hasPrimaryInEarStatus"b1"hasSecondaryInEarStatus"b1}
i24@0:8^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}16
B28@0:8d16I24
B28@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24
v28@0:8d16I24
v28@0:8^f16I24
^{OpaqueAudioComponentInstance=}
@"<AFAudioAnalyzerDelegate>"
@36@0:8@16B24@28
@"AFPeerInfo"
@48@0:8Q16@24@32@40
@"AFAssertionContext"
v24@0:8@"AFAssertionContext"16
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasReason"b1"hasUserInfo"b1"hasParentContext"b1}
v24@0:8@?<v@?@"NSString"@"<SiriCoreSQLiteValue>"^B>16
@24@0:8B16B20
{AvailabilityState="availabilityIsKnown"b1"isAvailable"b1}
@"NSString"24@0:8@"SAUIListItem"16
@"SAUIListItem"24@0:8@"NSString"16
@"NSData"16@0:8
@"AFDisambiguationInfo"16@0:8
v24@0:8@"AFDisambiguationInfo"16
Vv32@0:8@"NSDictionary"16@"NSString"24
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary">24
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?>40
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData">32
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@"NSString"24
@"NSData"32@0:8@"NSString"16@"NSString"24
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v48@0:8@16@24@32@?40
v32@0:8q16@?<v@?@"<AFOpportuneSpeakingModel>"@"NSString">24
v32@0:8q16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v48@0:8@"NSString"16@"NSDate"24@"NSDate"32@?<v@?BB>40
v36@0:8@16f24@28
v36@0:8@"NSString"16f24@"<AFOpportuneSpeakable>"28
v24@0:8@"<AFOpportuneSpeakingModelDelegate>"16
v24@0:8@"<AFOpportuneSpeakable>"16
v32@0:8q16@"<AFOpportuneSpeakable>"24
v56@0:8@16q24Q32@40@?48
v48@0:8@"AFSiriActivationListener"16@"INIntent"24@"NSString"32@?<v@?@"INIntentResponse"@"NSError">40
v48@0:8@"AFSiriActivationListener"16@"INIntentForwardingAction"24@"NSString"32@?<v@?@"INIntentForwardingActionResponse">40
v48@0:8@"AFSiriActivationListener"16@"AFRequestInfo"24@"AFSiriActivationContext"32@?<v@?@"NSError">40
v56@0:8@"AFSiriActivationListener"16q24Q32@"AFSiriActivationContext"40@?<v@?@"NSError">48
@"AFSiriActivationListener"
@24@0:8^@?16
B24@0:8q16
{atomic_flag="_Value"AB}
@32@0:8@?16@24
@40@0:8@?16@24@32
B40@0:8@16@24@32
@"AFOpportuneSpeakingModelFeedback"
@"<_DKKnowledgeQuerying>"
@56@0:8Q16@24@32@40@48
@"AFMyriadSession"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasSessionId"b1"hasCurrentElectionAdvertisementId"b1"hasCurrentElectionAdvertisementData"b1"hasElectionAdvertisementDataByIds"b1}
@40@0:8@16q24@32
d32@0:8d16Q24
v24@0:8@?<v@?B>16
@"UNNotification"
B20@0:8B16
v36@0:8@16B24@?28
v56@0:8@16@24Q32@40@?48
v28@0:8f16@?20
v36@0:8f16@20@?28
v60@0:8@16@24@32@40B48@?52
v56@0:8@16d24d32q40@?48
@"<AFSettingsDelegate>"
v44@0:8@16B24@28@?36
v76@0:8@16@24@32@40@48@56B64@?68
v40@0:8@16d24@?32
@"AFSiriActivationConnection"
@80@0:8@16@24@32@40@48@56@64@72
@56@0:8@16q24@32@40@48
@76@0:8@16@24@32@40@48@56@64B72
@"AFLocationSnapshot"
{_mutationFlags="isDirty"b1"hasLatitude"b1"hasLongitude"b1"hasAltitude"b1"hasDirection"b1"hasSpeed"b1"hasVerticalAccuracy"b1"hasHorizontalAccuracy"b1"hasPreciseLocationEnabled"b1}
@"AFAudioDeviceInfo"
{_mutationFlags="isDirty"b1"hasRoute"b1"hasIsRemoteDevice"b1"hasDeviceUID"b1}
@"NSOrderedSet"
v24@0:8@"NSOrderedSet"16
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasAlarmsByID"b1"hasNotifiedFiringAlarmIDs"b1}
@80@0:8@16@24@32@40q48@56@64@72
@"AFServiceDeviceContext"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasMediaSystemIdentifier"b1"hasMediaRouteIdentifier"b1"hasRoomName"b1"hasProximity"b1"hasContextSnapshots"b1"hasSerializedContextByKey"b1"hasMetricsContext"b1}
@"NSFileHandle"
@"NSXPCListenerEndpoint"
@"AFSpeechSynthesisRecord"
@"CLLocation"
v24@0:8#16
@40@0:8@16@24@?32
@"SISchemaClientAnyEvent"
@"SISchemaClientTurnContext"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasTimersByID"b1"hasNotifiedFiringTimerIDs"b1}
@"AFExperimentContext"
{_mutationFlags="isDirty"b1"hasExperimentsByConfigurationIdentifier"b1}
@"STContactAddress"
@"AFHomeAnnouncement"
v24@0:8@"AFHomeAnnouncement"16
@"AFHomeAnnouncementSnapshot"
{_mutationFlags="isDirty"b1"hasState"b1"hasLastPlayedAnnouncement"b1}
@"AFSiriTaskDeliveryHandler"
v32@0:8@"AFSiriTask"16@?<v@?@"NSError">24
@"AFSiriTaskService"
@"<AFSiriTaskServiceDelegate>"
v32@0:8@"AFSiriTaskUsageResult"16@"AFSiriRequest"24
v40@0:8@"AFSiriRequest"16@?<v@?>24@?<v@?@"AFSiriResponse"@"NSError">32
@"NSMapTable"
@"<AFSiriTaskmasterDelegate>"
@32@0:8@16@?24
@40@0:8@16^@24@?32
@"AFAssertionContext"16@0:8
@"_AFAssertionRecord"
@"AFAssertionCoordinator"
B32@0:8@16^B24
@"<AFAssertionCoordinatorDelegate>"
@"AFManagedStorageConnection"
@"STSiriMessage"
@56@0:8Q16i24i28Q32Q40Q48
@"AFMemoryInfo"
{_mutationFlags="isDirty"b1"hasVirtualMemorySizeInBytes"b1"hasNumberOfRegions"b1"hasPageSizeInBytes"b1"hasResidentMemorySizeInBytes"b1"hasPeakResidentMemorySizeInBytes"b1"hasPhysicalMemoryFootprintInBytes"b1}
@64@0:8Q16q24q32Q40@48@56
@"AFSiriActivationContext"
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasSource"b1"hasEvent"b1"hasOptions"b1"hasDeviceID"b1"hasUserInfo"b1}
v40@0:8q16Q24@32
v36@0:8q16@24B32
v40@0:8q16@?24@32
v40@0:8@16Q24@32
v32@0:8#16@24
v40@0:8#16Q24@32
v44@0:8q16Q24@32B40
v48@0:8q16Q24@?32@40
v40@0:8q16Q24@?32
@20@0:8B16
@"<AFAnalyticsService>"
v48@0:8q16Q24@32@?40
@"<AFSiriActivationListenerDelegate>"
@"<AFUtteranceSuggestionsDelegate>"
@56@0:8@16Q24Q32@40@48
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasStartedHostTime"b1"hasFinishedHostTime"b1"hasStartedDate"b1"hasFinishedDate"b1}
v48@0:8@"AFClockItemStorage"16@"NSSet"24@"NSSet"32@"NSSet"40
@"AFClockItemStorage"
@"NSMutableOrderedSet"
v36@0:8B16@20@?28
@"BKSApplicationStateMonitor"
@"BKSProcessAssertion"
v24@0:8@?<v@?{?=@@@@B}>16
v32@0:8d16@?24
@"<AFMyriadEmergencyDelegate>"
^{__CFNotificationCenter=}
@"BBBulletin"
{_mutationFlags="isDirty"b1"hasImagePath"b1"hasSymbolName"b1}
@"AFAnalyticsObserverConnection"
@32@0:8@16d24
v24@0:8@"NSMutableDictionary"16
@"NSArray"16@0:8
B24@0:8d16
v36@0:8Q16B24d28
v28@0:8i16Q20
@68@0:8@16@24q32f40d44d52@60
{_mutationFlags="isDirty"b1"hasItemURL"b1"hasItemData"b1"hasNumberOfLoops"b1"hasVolume"b1"hasFadeInDuration"b1"hasFadeOutDuration"b1"hasUserInfo"b1}
@"AFBundleResource"
{_mutationFlags="isDirty"b1"hasName"b1"hasExtension"b1}
@"STAlarm"
@24@0:8^v16
@"STCall"
@"AFMutableConversationItem"
@"AFBulletin"
v24@0:8@"AceObject"16
@"AFApplicationContext"
{_mutationFlags="isDirty"b1"hasAssociatedBundleIdentifier"b1"hasBulletin"b1"hasAceContext"b1"hasContextDictionary"b1}
v24@0:8f16f20
v20@0:8c16
v28@0:8c16@20
v36@0:8@16f24@?28
v36@0:8@16f24Q28
v32@0:8Q16Q24
d32@0:8d16d24
@48@0:8@16d24d32@40
v32@0:8d16d24
v36@0:8^f16^f24i32
v40@0:8@16f24f28Q32
v40@0:8@16f24f28@?32
@20@0:8S16
B20@0:8C16
@"AFPowerAssertionManager"
@"AFMyriadRecord"
@"_DKKnowledgeStore"
@"AFMyriadEmergencyCallPunchout"
@"SFDiagnostics"
{?="didRequestForBTLEScan"B"didRequestForBTLEAdvertisement"B}
{?="waitTimer"@"NSObject<OS_dispatch_source>""waitBlock"@?"isWaitTimerSuspended"B}
{?="advertTriggerAdvStartTime"@"NSDate""advertTriggerEndTime"@"NSDate"}
@"AFMyriadAdvertisementContextManager"
@"AFMyriadAdvertisementContextRecord"
@"AFNotifyStatePublisher"
@"AFSharedConfidenceScore"
{_mutationFlags="isDirty"b1"hasSharedUserId"b1"hasConfidenceScore"b1}
@48@0:8@16@24q32@40
@"<AFAudioPowerUpdaterDelegate>"
@"<AFAudioPowerProviding>"
B28@0:8Q16i24
B28@0:8^Q16i24
Vv48@0:8Q16q24@32@?40
Vv32@0:8Q16@?24
Vv24@0:8B16B20
Vv40@0:8@16Q24@?32
Vv32@0:8Q16d24
Vv32@0:8q16@"AFSpeechRequestOptions"24
Vv48@0:8Q16q24@"AFSpeechRequestOptions"32@?<v@?I@"NSError">40
Vv32@0:8Q16@?<v@?>24
Vv24@0:8@"AFClientConfiguration"16
Vv40@0:8@"AFSpeechRequestOptions"16Q24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"SASPronunciationContext"24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"NSString"24@?<v@?@"NSError">32
Vv24@0:8@?<v@?BI>16
Vv36@0:8@"NSDictionary"16B24@?<v@?B>28
Vv24@0:8@"SASetApplicationContext"16
Vv32@0:8@"NSString"16@24
Vv24@0:8@"AFMetrics"16
Vv32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
Vv24@0:8@?<v@?@"AFClockTimerSnapshot"@"NSError">16
Vv40@0:8@"AFAudioPlaybackRequest"16Q24@?<v@?@"NSError">32
Vv24@0:8@?<v@?@"AFXPCWrapper">16
Vv24@0:8@"AFSpeechSynthesisRecord"16
Vv40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
Vv32@0:8@"NSData"16@?<v@?@"NSString"@"NSData">24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
Vv32@0:8@"AFApplicationInfo"16@?<v@?@"NSArray">24
Vv28@0:8@"NSURL"16B24
@"<AFBluetoothWirelessSplitterSessionStateObserverDelegate>"
v48@0:8@16@24@?32@?40
@"<AFSpeakableNamespaceProvider>"24@0:8@"AceObject"16
q24@0:8q16
@"NSObject<OS_dispatch_semaphore>"
v24@0:8^v16
v32@0:8@16^v24
@28@0:8^v16B24
@"NSMutableSet"
@40@0:8@16Q24Q32
{_mutationFlags="isDirty"b1"hasUtterance"b1"hasBeginTimestamp"b1"hasEndTimestamp"b1}
@68@0:8q16@24q32@40B48B52B56Q60
{_mutationFlags="isDirty"b1"hasStyle"b1"hasLanguageCode"b1"hasGender"b1"hasRecordRoute"b1"hasIsVoiceTrigger"b1"hasIsDucking"b1"hasIsTwoShot"b1"hasSpeechEndHostTime"b1}
@56@0:8Q16q24Q32q40@48
v24@0:8@"NSError"16
@"AFSiriActivationResult"
{_mutationFlags="isDirty"b1"hasActionType"b1"hasError"b1}
v24@0:8@"AFPeerInfo"16
@"AFCommandExecutionInfo"
{_mutationFlags="isDirty"b1"hasExecutionID"b1"hasRequestID"b1"hasOriginPeerInfo"b1"hasUserInfo"b1}
{?="eventType"b1}
B28@0:8@16i24
v36@0:8@16i24@28
@32@0:8r*16Q24
@60@0:8q16@24@32B40B44B48@52
@"NSIndexPath"
@"AFMediaPlaybackStateSnapshot"
{_mutationFlags="isDirty"b1"hasPlaybackState"b1"hasNowPlayingTimestamp"b1"hasMediaType"b1"hasGroupIdentifier"b1}
@"AceObject<SAAceCommand>"
v48@0:8@16q24@32q40
@"AFConversation"
@"AFTriggerlessListeningOptions"
@108@0:8@16@24B32@36Q44Q52Q60Q68B76B80@84@92@100
@"AFClockAlarm"
{_mutationFlags="isDirty"b1"hasAlarmID"b1"hasAlarmURL"b1"hasIsFiring"b1"hasTitle"b1"hasType"b1"hasHour"b1"hasMinute"b1"hasRepeatOptions"b1"hasIsEnabled"b1"hasIsSnoozed"b1"hasFiredDate"b1"hasDismissedDate"b1"hasLastModifiedDate"b1}
v44@0:8@16@24@32B40
v44@0:8@"NSDictionary"16@"NSDictionary"24@"NSString"32B40
v32@0:8@"<AFContextSnapshotTransforming>"16@"NSString"24
v36@0:8@"<AFContextSnapshot>"16@"AFDeviceContextMetadata"24B32
@112@0:8B16@20@28@36@44@52B60@64@72@80@88@96@104
{_mutationFlags="isDirty"b1"hasIsDeviceOwnedByCurrentUser"b1"hasIdsIdentifier"b1"hasIdsDeviceUniqueIdentifier"b1"hasRapportEffectiveIdentifier"b1"hasMediaSystemIdentifier"b1"hasMediaRouteIdentifier"b1"hasIsCommunalDevice"b1"hasRoomName"b1"hasName"b1"hasProductType"b1"hasBuildVersion"b1"hasUserInterfaceIdiom"b1"hasAceVersion"b1}
@28@0:8i16@20
@"AFClientInfo"
{_mutationFlags="isDirty"b1"hasProcessIdentifier"b1"hasProcessName"b1}
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
