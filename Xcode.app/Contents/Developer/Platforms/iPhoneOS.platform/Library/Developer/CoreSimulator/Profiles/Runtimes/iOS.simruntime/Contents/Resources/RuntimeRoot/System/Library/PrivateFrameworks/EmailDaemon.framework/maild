doesNotRecognizeSelector:
init
copy
count
initWithCapacity:
countByEnumeratingWithState:objects:count:
blockForKey:
setObject:forKeyedSubscript:
copyResults
initWithKeys:
keys
results
valueForKey:
.cxx_destruct
_resultKeys
UTF8String
initWithBundleIdentifier:
serialDispatchQueueSchedulerWithName:qualityOfService:
initWithRepresentedObjectID:
mailboxPersistence
addChangeObserver:withIdentifier:
removeChangeObserverWithIdentifier:
cancel
dealloc
notificationSettingsByTopic
badgeSetting
isEqualToString:
addObject:
enumerateKeysAndObjectsUsingBlock:
activeAccounts
primaryMailboxUid
uniqueID
containsObject:
pairWithFirst:second:
oldBadgeCount
numberWithInteger:
setBadgeNumber:withCompletionHandler:
setOldBadgeCount:
_nts_getAccountsExcludedFromUnreadCount:includeUnreadVIPs:includeUnreadNotifiedThreads:
_enabledAndExcludedMailboxesExcludingAccountIDs:
mailboxProvider
first
allObjects
mailboxesFromLegacyMailboxes:
objectID
ef_mapSelector:
second
predicateForVIPMessages
predicateForNotifyMessages
firstObject
orPredicateWithSubpredicates:
predicateForMessagesInMailboxes:
arrayWithObjects:count:
andPredicateWithSubpredicates:
predicateForUnreadMessages
mailboxScopeForMailboxObjectIDs:forExclusion:
_startObservingCountPredicate:serverCountMailboxScope:
initWithTargetClass:predicate:sortDescriptors:queryOptions:label:
query
isEqual:
queryHandler
messagePersistence
hookRegistry
initWithQuery:serverCountMailboxScope:messagePersistence:hookRegistry:observer:
setQueryHandler:
setQuery:
scheduler
setNotificationSettingsByTopic:
_createCountQueryPredicateFromNotificationTopics
performBlock:
invoke
setBadgeCount:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
countDidChange:acknowledgementToken:
mailboxListChanged:
userNotificationCenterSettingsDidChange:
initWithMessagePersistence:hookRegistry:mailboxProvider:
setScheduler:
setMessagePersistence:
setHookRegistry:
setMailboxProvider:
notificationCenter
setNotificationCenter:
mailboxObserverID
setMailboxObserverID:
_scheduler
_messagePersistence
_hookRegistry
_mailboxProvider
_queryHandler
_query
_notificationSettingsByTopic
_oldBadgeCount
_notificationCenter
_mailboxObserverID
mutableCopy
uniqueId
objectForKey:
numberWithDouble:
setObject:forKey:
sortedArrayUsingFunction:context:
pushedMailboxUids
ef_publicDescription
isUserRequested
isForegroundRequest
isForced
fullPath
objectForKeyedSubscript:
lastFetchTime
accountRelativePath
initRequestForMailboxUid:
setKey:
setIsUserRequested:
setIsForegroundRequest:
shouldGrowFetchWindow
setShouldGrowFetchWindow:
isCompacting
setShouldCompact:
setShouldLoadMessageBody:
initForAccounts:accountResponsiveness:fetchType:
shouldLoadOlderMessages
jobList
_jobList
_accounts
_accountResponsiveness
_fetchType
store
initWithDataSource:
sharedController
activityPersistence
defaultCenter
removeObserver:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
sharedInstance
isFatPipe
isPluggedIn
currentMonitor
mailboxFromLegacyMailbox:
sharedStorage
URLString
fetchDateForSource:
startActivityOfType:userInfo:
stringHash
int64Value
setStartedFetch:
_handleMonitorActivityMessage:
addObserver:selector:name:object:
mailboxUid
account
loggingIdentifier
fetchWindow
growFetchWindow
stringWithFormat:
numberWithUnsignedInteger:
shouldCompact
displayErrors
isVisibleFetch
isPowernapFetch
downloadAllMessages
shouldLoadMessageBody
closeConnection
dontNotify
retry
loaderForAccount:
beginAddingNewMessagesForStore:
start
fetchMobileSynchronously:preservingUID:options:
_fetchedSuccessfully
setFetchDate:forSource:
activityWithID:setUserInfoObject:forKey:
connectionError
error
errorWithDomain:code:localizedDescription:
gotNewMessagesState
logSummary:error:
stopAndSubmitWithOptions:fetchSize:
serverMessageCount
allNonDeletedCountIncludingServerSearch:andThreadSearch:
fetchWindowCap
fetchNumMessages:preservingUID:options:
updateServerUnreadCountClosingConnection:
trashCompactor
emptyTrashForAccount:
removeObject:
domain
code
errorWithDomain:code:userInfo:
dictionaryWithObjects:forKeys:count:
_markActivityDoneWithError:
setRetry:
initWithAccount:networkController:error:
healSilentlyWithCompletion:
finished
activityWithID:finishedWithError:
userInfo
isActive
mf_shortDescription
longLongValue
activityWithID:setCompletedCount:totalCount:
unsignedIntValue
integerValue
sharedManager
statisticsKind
emailProviderFromAccountStatisticsKind:
mailErrorReportProtocolFromAccountStatisticsKind:
mailboxType
mailErrorFromErrorDomainCode:
bytesWritten
bytesRead
totalBytesSent
dictionaryWithDictionary:
powerlog:eventData:
diagnosticManager
emailProvider
protocol
trigger
newMessagesState
mailError
totalBytesReceived
numMessagesFetched
localNonDeletedCount
shouldReport
isForeground
didTimeout
monitor
mailbox
willGrowFetchWindow
setRemoteIDToPreserve:
setDisplayErrors:
markAsDone
_healAccountWithCompletionHandler:
_markAsPendingRetryWithPriority:
_markAsScheduled
shouldNotify
remoteIDToPreserve
wasPrimaryMailbox
setWasPrimaryMailbox:
setIsVisibleFetch:
setIsPowernapFetch:
setGotNewMessagesState:
responsiveness
setResponsiveness:
result
setError:
loadNumOlderMessages
setLoadNumOlderMessages:
setDontNotify:
setCloseConnection:
setShouldLoadOlderMessages:
setDownloadAllMessages:
isPush
setIsPush:
isScheduled
setIsScheduled:
_remoteID
_uid
_store
_key
_metricsController
_responsiveness
_gotNewMessagesState
_wasPrimaryMailbox
_error
_result
_shouldLoadMessageBody
_dontNotify
_activity
_activityPersistence
_signpostID
_displayErrors
_compactMailbox
_isVisibleFetch
_isPowernapFetch
_retry
_closeConnection
_isUserRequested
_isForegroundRequest
_shouldGrowFetchWindow
_shouldLoadOlderMessages
_downloadAllMessages
_isPush
_isScheduled
_loadNumOlderMessages
_monitor
initWithMailboxPath:
mailboxPath
frequency
setFrequency:
setLastFetchTime:
lastFetchDuration
setLastFetchDuration:
setNewMessagesState:
_mailboxPath
_frequency
_lastFetchTime
_lastFetchDuration
_newMessagesState
signpostLog
addDiagnosticsGenerator:
serialDispatchQueueSchedulerWithName:
_accountContentsDidChange:
_freeSpaceStatusDidChange:
freeSpaceMonitor
_newNotificationSoundSent:
_cleanUpReachabilityTimer
sharedNetworkObserver
defaultMonitor
fetchScheduler
isFreeSpaceCritical
stopAutoFetch
startAutoFetch
fetchNow:
isWiFiEnabled
lastSystemWakeDate
timeIntervalSinceNow
_tryFetch:withAccounts:
autoFetchState
isEqualToArray:
postNotificationName:object:
_startAutoFetch:withAccounts:
fetchNow:withAccounts:
setWithCapacity:
mailboxUids
unionSet:
fetchNow:withMailboxes:
objectAtIndexedSubscript:
_fetchChangedUids:forAccount:options:
accountsProvider
displayedAccounts
fetchProcessorScheduler
powernapProcessor
setAccounts:
favoritesPersistence
setFavoritesPersistence:
runSynchronouslyWithDuration:
_tryFetch:
mailAccounts
uniqueIdForPersistentConnection
setCurrentAlertContexts:
setCurrentAlertSuppresionContexts:
copyDiagnosticInformation
invocationWithSelector:target:taskName:priority:canBeCancelled:
_scheduleRequest:priority:selector:
afterDelay:performBlock:
_invocationWithTarget:priority:
_beginSignpostForMailboxFetch:
_logSignpostForMailboxFetchRetry:
initWithObjectsAndKeys:
postNotificationName:object:userInfo:
sharedInvocationQueue
addInvocation:
copySourcesCurrentlyVisible
isFrontmost
representsMailboxUid:
retainAssertionWithIdentifier:
_fetchCompleted:
hasAdequateFreeSpace
_doFetchChangedUids:forAccount:options:
isMaild
object
arrayWithObject:
target
removeObserver:name:object:
_scheduleRetryRequest:priority:selector:
numberWithBool:
initWithDictionary:
_endSignpostForMailboxFetch:
submitMailCannotGetMailError:forAccount:submitNetworkDiags:
displayError:forAccount:mode:
releaseAssertionWithIdentifier:
launchedToTest
submitMailCannotGetMailErrorDueToMailErrorCode:submitNetworkDiags:
signpostID
_checkForReachability
boolValue
_checkForWiFi
_finishAutoFetch
_reportReachabilityChange:
addNetworkReachableObserver:selector:
isNetworkReachable
dataStatus
submitMailCannotGetMailErrorDueToErrorDomainCode:submitNetworkDiags:
setAutoFetchState:
_reportReachabilityTimeout
canFetch
canReceiveNewMailNotifications
_shouldAutoFetchAccount:whenVisible:
array
type
_createJobList
_reportSynchronousFetchCompletion:
doubleValue
addObjectsFromArray:
_createJobListFinished:
callStackReturnAddresses
_scheduleAllJobs
setJobList:
sharedDeliveryQueue
processQueue
lastAdditionalMailboxesFetchDate
date
timeIntervalSinceDate:
setLastAdditionalMailboxesFetchDate:
intelligentSkeletonFetchProcessor
currentAlertContexts
intersectsSet:
currentAlertSuppresionContexts
unsignedIntegerValue
playNewMailSoundStyle:forAccount:
appendString:
appendFormat:
dateWithTimeIntervalSinceReferenceDate:
allValues
standardUserDefaults
boolForKey:
initWithAccountsProvider:favoritesPersistence:
stopListeningForNotifications
isBatterySaverModeEnabled
startListeningForNotifications
_logSignpostForMailboxFetch:finished:
initWithFormat:
setDataSource:
fetchNow:withSources:
networkConfigurationChanged
isIdle
performFetchOfType:
resetPushStateWithCompletion:
setCurrentSuppressionContexts:suppressedContexts:
diagnosticInformation
setAccountsProvider:
setFetchScheduler:
setFetchProcessorScheduler:
_dataSource
_lastNonvisibleAutoFetchDate
_outstandingAccountChangeFetchRequests
_autoFetchState
_pendingFetchType
_lastAutoFetchHadErrors
_lastAutoFetchHadSources
_fetchAccounts
_pendingFetchAccounts
_visibleSources
_visibleSourceJobInvocations
_outstandingAutoFetchRequests
_networkWakeupCancelationToken
_isReachable
_monitoringReachability
_tryFetchWhenReachable
_accountsProvider
_favoritesPersistence
_currentAlertContexts
_currentAlertSuppresionContexts
_fetchScheduler
_fetchProcessorScheduler
compare:
setWithSet:
objectsPassingTest:
minusSet:
mf_invocationWithSelector:target:
bundleIdentifier
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
mainBundle
objectForInfoDictionaryKey:
cachedMailAppIsInstalled
initWithMonitoredBundleIdentifier:
_start
_unregisterAllXPCActivities
_unregisterPushTopics
_startNonAcceptingServer
defaultWorkspace
addObserver:
mainRunLoop
transactionWithDescription:
defaultInstance
initWithPrimaryLibrary:
persistence
defaultProvider
setUserProfileProvider:
initWithAccountsProvider:
initWithMessagePersistence:
setUpWithMailboxProvider:remoteSearchProvider:
setPurgeableStorage:
purgeableStorage
initWithPurgeableStorage:
setPurgeableStorageMonitor:
messageChangeManager
initWithMessageChangeManager:
registerMessageChangeHookResponder:
setSummaryLoaderProvider:
initWithMessagePersistence:messageChangeManager:
initWithOutgoingMessageRepository:
setListUnsubscribeHandler:
scheduleLibraryCompressionIfNeeded
scheduleIfNeeded
unregisterXPCActivity
blockedSenderManager
vipManager
setBackingManager:
startListeningForBatterySaverNotifications
conversationPersistence
initWithConversationSubscriptionProvider:accountsProvider:mailboxPersistence:daemonInterface:deferNotificationDelivery:
_initializeUserNotificationCenterController
addSettingsObserver:
initWithMachServiceNames:
_registerServices
userNotificationCenterController
sharedStakeholder
initWithPersistence:userProfileProvider:vipManager:sourceApplicationBundleIdentifier:
setCategorySubsystem:
categorySubsystem
scheduleRecurringActivity
initWithPersistence:categorySubsystem:sharedFetchController:
initWithDaemonInterfaceFactory:
initWithLibrary:queryProvider:accountsProvider:
invalidate
scheduleDelayedStartupTasks
initWithNetworkController:delegate:
sharedServer
registerServiceClass:
initWithSystemUserNotificationCenter:persistence:favoritesReader:
setUserNotificationCenterController:
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:ignoredTopics:opportunisticTopics:
shutdown
em_userDefaults
intValue
linesOfText:
_isAppForeground
defaultManager
storeForMailboxUid:
fetchMobileSynchronously:
networkActivityStarted:
networkActivityEnded:
initWithMessage:
mainThreadScheduler
_delayedStartupTasks
checkForAddressBookChanges
initializeConversationManagerAndPerformInitialSync
initWithAccountsProvider:favoritesPersistence:messagePersistence:hookRegistry:
isHarvestingSupported
initWithLibrary:
resumeFullDownloadProcessing
_setupSnapshotInvalidation
fileSystemRepresentation
initWithServiceName:
removeAppWithReply:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
synchronousRemoteObjectProxyWithErrorHandler:
systemWillSleep
makeObjectsPerformSelector:
systemDidWake
initWithApplicationBundleIdentifier:hookRegistry:
setSnapshotInvalidator:
currentDevice
isInternal
snapshotInvalidator
setEnabled:
isRunningTests
observeChangesForFeature:usingBlock:
featureEnabled:
ef_observeKeyPath:options:usingBlock:
focusedMessage
autofetchAccount:mailboxUid:
isMobileMail
isAllowedToAccessProtectedData
canRegisterForAPSPush
canUseSpotlightIndex
sourceApplicationBundleIdentifier
messageSummaryLoaderForMessage:
contentProtectionStateChanged:previousState:
assertionDidExpire
daemonInterface
linesOfText
defaultAttachmentManager
_callMobileMailAppRemovalService
nanoServer
setTrashCompactor:
setBlockedSenderManager:
purgeableStorageMonitor
badgeController
setBadgeController:
libraryReconciler
setLibraryReconciler:
_attachmentManager
_library
_messageRuleLibraryHook
_persistence
_fetchController
_server
_networkActivityManager
_networkActivityIndicator
_notifyToken
_suggestionsDataProvider
_remoteSearchProvider
_appShortcutProvider
_contentProtectionSemaphore
_contentProtectionQueue
_startupTransaction
_clientIsTestingObservation
_snapshotOverrideObservation
_purgeableStorage
_nanoServer
_trashCompactor
_blockedSenderManager
_purgeableStorageMonitor
_badgeController
_categorySubsystem
_userNotificationCenterController
_snapshotInvalidator
_libraryReconciler
initWithType:interval:delegate:
_init
stringWithUTF8String:
_updatePushStateThrottled
_fetchTypeForSchedulerType:
_updatePushState
_schedulePowernapFetches
compactScheduler
schedule
_autoFetchProcessFinished:
_powernapFetchInterval
powerNapScheduler
interval
setPowerNapScheduler:
unregisterAndTearDown
periodicScheduler
setPeriodicScheduler:
unregisterXPCActivityForType:
_periodicFetchInterval
schedulerType
_cancelThrottleTimer
_schedulePeriodicFetches
_cancelPeriodicFetches
accountWithUniqueId:
ef_map:
absoluteString
mailboxUidFromActiveAccountsForURL:
ef_compactMap:
allMailMailboxUid
mailboxUidForRelativePath:create:
_mailboxWithName:forAccount:
fetchMailboxList
activeAccountsWithError:
_findMailboxWithName:inAccounts:
observableOnDefaultNotificationCenterWithName:object:
sharedChangeManager
unreadCountForMailbox:
observerWithResultBlock:
subscribe:
runWithCompletion:
visibleMailboxesObjectIds
initWithMailbox:
mailboxesForAutoFetch
fetchSchedulerDidTrigger:
performFetchOfType:accountIds:
performFetchOfType:mailboxObjectIds:
performFetchOfType:mailboxName:completion:
downloadMessageBodiesWithCompletion:
setCompactScheduler:
_throttleTimer
_pcPollInterval
_fetchSchedulerLock
_powerNapScheduler
_periodicScheduler
_compactScheduler
initWithPersistence:categorySubsystem:
newFetchController
newOutgoingMessageRepository
_sharedFetchController
initWithApplicationBundleIdentifier:hookRegistry:invalidationHandler:
registerAccountChangeHookResponder:
applicationBundleID
deleteSnapshotsForApplicationIdentifier:
isEnabled
invalidationHandler
deleteSnapshotsForBundleIdentifier:
accountsAdded:
accountsRemoved:
accountsChanged:
accountBecameActive:
accountBecameInactive:
setApplicationBundleID:
setInvalidationHandler:
_enabled
_applicationBundleID
_invalidationHandler
initWithAccount:
itemForMailbox:selected:shouldSync:
setSelected:
setShouldSync:
initWithMailboxType:
initWithSourceType:
initWithVIP:
_defaultShouldSync
_defaultShouldExpand
sourceType
dictionary
isSelected
setValue:forKey:
isExpanded
shouldSync
displayName
ef_UUID
bundleWithIdentifier:
localizedStringForKey:value:table:
badgeCount
localizedStringWithFormat:
representingMailboxes
predicateForMessagesInMailboxesWithObjectIDs:
representingMailbox
isExpandable
isVisible
itemForAccount:
itemForMailbox:selected:
itemForInboxWithAccount:selected:
itemForUnifiedMailboxWithType:selected:
itemForSharedMailboxWithType:selected:
itemForVIP:selected:
itemForOutbox
itemFromDictionary:
initWithType:
dictionaryRepresentation
itemID
parentItemID
badgeCountString
countQueryPredicate
serverCountMailboxScope
additionalPredicate
syncKey
syncValue
wasAddedToCollection:
wasRemovedFromCollecion:
wasChangedExternally
persistentIDForMigration
acceptsMessageTransfers
isExpandableInEditMode
setExpanded:
criterion
subItems
setSubItems:
_type
_expanded
_lock
_syncKey
_itemID
_collectionID
_selected
_shouldSync
_criterion
_badgeCount
_subItems
removeAllObjects
isEnabledForDataclass:
_account
representedAccount
accountContainingEmailAddress:includingInactive:
firstEmailAddress
originalPushState
criterionForMailbox:
isStandardizedMailboxUidType:
mailboxUidOfType:createIfNeeded:
typeIsValidTransferDestination:
username
hostname
lowercaseString
removeObjectForKey:
isMailboxesCollection
setOriginalPushState:
setWithObject:
changePushedMailboxUidsAdded:deleted:
_postNotification
setMailbox:
_mailbox
_mailboxType
_accountRelativePath
_displayName
_originalPushState
isDisplayingMultipleAccounts
specialNameForType:
unreadCountToken
setUnreadCountToken:
badgeCountDebouncer
setBadgeCountDebouncer:
_unreadCountToken
_badgeCountDebouncer
predicateForFlaggedMessages
predicateForFlagColor:
predicateForIncludesMeMessages
predicateForMessagesWithAttachments
predicateForTodayMessages
predicateForMuteMessages
mailboxScope
predicateForMessagesWithMailboxScope:
mailboxScopeForMailboxTypes:forExclusion:
mailboxScopeForMailboxType:forExclusion:
_sourceType
identifier
stringValue
vipWithIdentifier:
emailAddresses
predicateForMessagesWithSender:
_VIP
_additionalPredicate
mapTableWithKeyOptions:valueOptions:
setItems:
initWithObject:
addItem:
dictionaryRepresentations
performWhileLocked:
allKeys
sortedArrayUsingSelector:
insertObject:atIndex:
isAccountsCollection
orderedAccountIds
synchronize
isEditing
setEditing:
invalidateVisibleItems
makeObjectsPerformSelector:withObject:
addItem:ordered:
addOrUpdateItem:didAdd:didReplace:
removeItem:
removeItemWithSyncKey:
itemWithSyncKey:
items
visibleItems
selectedItems
ef_filter:
bundleForClass:
anyObject
countOfVisibleItems
isOutboxCollection
mailboxesCollection
accountsCollection
outboxCollection
prepareForWriting
addOrUpdateItem:replacedItem:
itemsOfType:
visibleItemsOfType:
isShowingSharedMailboxOfType:
isShowingAllInboxes
doesSync
hidesHeader
transient
setTransient:
_transient
_invalidItemDicts
_state
mutableItems
_indexForNewItem:
indexOfObject:
replaceObjectAtIndex:withObject:
displayOrder
indexOfObjectPassingTest:
objectAtIndex:
_addVisibleItem:toArray:
_addSubitems:toArray:
_addMailboxCollectionVisibleItemsToArray:
_addAccountsCollectionVisibleItemsToArray:
setArray:
ef_countObjectsPassingTest:
setType:
_editing
_visibleItems
_selectedItems
_items
initWithName:andDelegate:
stringByAppendingPathComponent:
observableOnNotifyTokenWithName:
debounceWithTimeInterval:scheduler:
subscribeWithResultBlock:
_mailboxListingChanged:
_mailboxNameChanged:
_accountsDidChange:
additionalStoreWithIdentifier:
_keyValueStoreChangedExternally:
fetchMailboxLists
lock
initWithContentsOfFile:
initWithString:
removeObjectsInArray:
unlock
integerForKey:
conversationSubscriptionProvider
hasSubscribedConversations
sortUsingComparator:
initWithArray:
setDictionary:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
indexPathForRow:inSection:
updateCollections:changeType:withReason:source:
timeIntervalSinceReferenceDate
setDictionary:forKey:
dictionaryForKey:
length
null
isSyncingNotes
_loadMailboxesForcibly:
allMailboxUidsSortedWithSpecialsAtTopForAccount:includingLocals:client:outbox:
isEqualToSet:
arrayWithArray:
_loadMailboxesAfterMailboxListingChanged
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
mailboxCollections
alertSetting
notificationCenterSetting
lockScreenSetting
mailboxRepository
mailboxObjectIDsForMailboxType:
mailboxForObjectID:
addSuccessBlock:
addFailureBlock:
messageRepository
startCountingQuery:includingServerCountsForMailboxScope:withObserver:
ef_any:
orderedFavoriteMailboxesForAccount:includeUnifiedMailboxes:
messageRepository:query:countDidChange:
shouldReloadMailboxesWithOutbox:
shouldHideInbox
shouldHideNotesForAccount:
favoriteMailboxesForAccount:
hasFavoriteMailboxes
resumeNotificationDelivery
showingOutbox
setLastSelectedItem:
indexPathForItem:
updateCollections:forItemChangeAddedItems:removedItems:withReason:source:
updateCollections:forOrderChange:withReason:source:
setVisibility:forSourceType:
includeFavoriteMailboxesDuringFetch
lastSelectedItem
storagePath
setMailboxPersistence:
_deferNotificationDelivery
_includeFavoriteMailboxesDuringFetch
_showingSingleAccount
_loadingMailboxes
_showingOutbox
_mailboxCollections
_lastSelectedItem
_storagePath
_mailboxPersistence
_conversationSubscriptionProvider
_visibleMailboxCollections
_daemonInterface
_outbox
_outboxCountObserver
_outboxFuture
_writeCollectionScheduler
_kvStore
_favoritesPersistenceUpdateToken
performSyncBlock:
_xpcActivityIdentifierForType:
_xpcActivityIdentifier
criteriaBuilder
_runXPCActivity:
tearDown
_markXPCActivitiesAsDone
_updateIntervalIfNeededForXPCActivity:
delegate
_markFetchXPCActivityAsRunning:
xpcActivityInterval
initialXPCActivityInterval
isAutomatic
_runForTimer
_didSchedule
_tornDown
_xpcActivities
_schedulerType
_interval
_delegate
correspondingType
open
close
needsFetch
shouldCompactOnFetch
representsMailboxUidType:
supportsSearch
accountForAutoFetch
canFetchSearchResults
equivalentCriterion
storeSearchResultUsingSearchContext:limit:error:
copyMessagesWithRemoteIDs:options:
copyMessagesWithRemoteIDs:options:inMailbox:
isProtectedDataAvailable
setProtectedDataAvailable:
copyWithZone:
setLocalId:
parentAccountIdentifier
setParentAccountIdentifier:
setDisplayName:
supportsArchiving
shouldArchiveByDefault
setShouldArchive:
emailAddressStrings
setEmailAddresses:
persistentAccount
setUsername:
defaultEmailAddress
setDefaultEmailAddress:
arrayWithCapacity:
initWithMailboxUid:account:
nano_account
nano_activeMailAccounts
nano_bridgeSettingsInboxesFromAccounts:
recentEventForAddress:displayName:kind:date:weight:metadata:options:
recordContactEvents:recentsDomain:sendingAddress:completion:
predicateWithFormat:
setPredicate:
setDomains:
promise
_mailboxURLQuery
frecencyComparator
setComparator:
completionHandlerAdapter
performRecentsSearch:queue:completion:
future
dateWithTimeIntervalSinceNow:
resultBeforeDate:error:
address
arrayByApplyingSelector:
_rankedMailboxURLs
allMailboxUids
ownsMailboxUidWithURL:
removeRecentContacts:error:
nullFuture
futureWithError:
then:
recordEventWithMailboxURLString:
orderedMailboxUidsForAccount:
orderedArrayOfSources:
removeAllDataBelongingToAccount:
setLevel:
_addChildNode:toParentNode:
addChild:
setParentMailbox:
level
children
_insertMailboxUidsFlattenedFromMailboxNode:intoArray:currentLevel:
removeNodeForMailbox:
parentMailbox
moveMailbox:toParent:
initWithRootMailbox:
rootMailboxNode
addChildMailbox:forMailboxNode:
flattenedMailboxTreeRepresentation
parentForMailbox:
levelForMailbox:
setDisplayName:forMailbox:
displayNameForMailbox:
mailboxHasSubMailboxes:
_rootMailboxNode
_nodesByMailbox
_mailboxStructureHasBeenCached
ef_insertObject:usingSortFunction:context:allowDuplicates:
_findNodeForMailbox:removeNode:
findNodeForMailbox:
_children
_parentMailbox
_level
localizedCaseInsensitiveCompare:
setAlgorithm:
setResult:
setOutput:
setDismissBlock:
viewDidLoad
setTitle:
_dismiss
initWithTitle:style:target:action:
navigationItem
setRightBarButtonItem:
boldSystemFontOfSize:
setFont:
setText:
algorithm
systemFontOfSize:
output
setEditable:
initWithArrangedSubviews:
setAxis:
setAutoresizingMask:
setLayoutMarginsRelativeArrangement:
setLayoutMargins:
setSpacing:
setOutputTextView:
setView:
whiteColor
view
setBackgroundColor:
addSubview:
selectAll:
outputTextView
selectedRange
text
dismissBlock
initWithAlgoritm:result:output:dismiss:
canPerformAction:withSender:
_algorithm
_output
_dismissBlock
_outputTextView
mf_lock
setStore:
mf_unlock
searchText
offset
storeSearchResultMatchingSearchText:criterion:limit:offset:error:
searchedServer
iconString
imageNamed:inBundle:compatibleWithTraitCollection:
_applicationIconImageForFormat:precomposed:
accountImageForAccounts:
childEnumerator
nextObject
name
hasChildren
_putMailboxesRootedAt:intoArray:hideNotes:
_addGenericChildrenToMailboxTree:forNode:hideNotes:
rootMailboxUid
localAccount
_addSpecialMailbox:toTree:
addSpecialMailbox:toArray:
accountRepository
accountForAccountIdentifier:
outgoingMessageRepository
outboxContainsMessageFromAccount:
outboxMailboxUid
_loadOutbox:
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
_treeOfAllMailboxesIncludingLocals:withOutbox:hideInbox:hideNotes:
_allMailboxesIncludingLocals:withOutbox:hideInbox:hideNotes:
treeOfAllMailboxUidsSortedWithSpecialsAtTopIncludingLocals:client:outbox:
treeOfAllGenericMailboxes
allMailboxUidsSortedWithSpecialsAtTopIncludingLocals:client:
initWithFilename:
filename
cachedImage
setCachedImage:
_filename
_cachedImage
numberWithInt:
mf_systemImageNamed:forView:
iconFromBundle:forType:
parent
displayNameUsingSpecialNames
_flatImageWithColor:
iconFromBundle:
foundInDescriptionIncludingAccount:
tinyDisplayIconWithColor:
shorcutIconNameForMailboxType:
isStore
mv_isEditable
mv_isSelectable
legacyMailboxForObjectID:
predicateForMailboxType:
initWithTargetClass:predicate:sortDescriptors:
finishWithResult:error:
performQuery:completionHandler:
result:
mailboxesWithTypes:
stringWithString:
hasSuffix:
setMaxThreadCount:
initWithCondition:
_mailboxUserInfoDidChange:
_mailMessageStoreMessagesCompacted:
pause
string
condition
unlockWithCondition:
isFinalized
newGenerationNumber
setManagerNumber:
stores
URLStrings
_invalidateUnreadCountsForKey:onlyPostChange:
isRevertible
_revertCommittedChange:
registerUndoWithTarget:selector:object:
localizedChangeDescription
setActionName:
processPendingChanges
setInvocation:
lockWhenCondition:
removeObjectAtIndex:
isReverseOperation
revert
commit
localizedErrorDescription
localizedErrorTitle
errorWithDomain:code:localizedDescription:title:userInfo:
accounts
removeAllActions
mailboxToMoveOrRename
messagesSet
_updateUnreadCountForMailbox:
setIsReverseOperation:
addChange:
prepareWithInvocationTarget:
shouldUseNonDeletedForUnreadCount
_serverNonDeletedCountForMailbox:
_serverUnreadCountForMailbox:
statusCountDelta
serverNonDeletedCount
serverUnreadCount
unreadCountMatchingCriterion:
copyChangeSetForFullPath:
adjustUnreadCount:withCriterion:
_unreadCountAfterChangesForMailbox:withKey:criteria:
serverUnreadOnlyOnServerCount
unreadCountForMailbox:criteria:
mailboxToRemove
modifiedMailboxName
mailboxParentForMove
_modifyMailboxesForMailboxTree:forChange:
_serverUnreadOnlyOnServerCountForMailboxes:
genericMailboxUidsSortedForAccount:includingLocals:excludingMailbox:
displayNameUsingSpecialNamesForMailbox:
purgeCommittedChanges
undoManager
_processingLock
_pendingChanges
_committedChanges
_currentChange
_invocationQueue
_lastCalculatedMailboxDictionary
_undoManager
_isUndoing
_mailboxPreChangeUnreadCounts
_mailboxPostChangeUnreadCounts
cachedMetadataJSONForKey:messageID:
initWithJSON:
encodedAsJSON
setCachedMetadataJSON:forKey:messageID:
deliveryInfoForMessage:
setDeliveryInfo:forMessage:
mailDropDeliveryStateForMessage:
setMailDropDeliveryState:forMessage:
accountForErrorHandling
initWithOperation:
applyPendingChangeToObjects:
localizedChangeDescriptionPriority
_mailboxOperation
_setMessages:
_populateMessageSets
canBeTriaged
mailboxForMessage:
setMessageStore:
localizedErrorDescriptionForMessageCount:
localizedErrorTitleForMessageCount:
localizedShortOperationDescription
willMarkRead
messageFlags
willMarkUnread
willUnflag
willFlag
copyMessageInfo
commitToMessages:failures:newMessages:
revertOnMessages:failures:newMessages:
isRevertibleWithMessages:
messageStore
initWithMessages:unreadMessages:readMessages:flaggedMessages:unflaggedMessages:operation:
_unreadCountAdjustmentByMailboxForCriterion:
numberWithLong:
ef_reduce:
useFlaggedForUnreadCount
ef_groupBy:
dictionaryWithCapacity:
doesMessageSatisfyCriterion:
initWithMessages:operation:
operation
_messagesSet
_messagesMarkedRead
_messagesMarkedUnread
_messagesUnflagged
_messagesFlagged
_operation
initWithDictionary:copyItems:
initWithName:preventIdleSleep:
isFinished
taskAssertion
setTaskAssertion:
isCancelled
groupDictionary
destinationPath
initWithDestinationPath:groupDictionary:
main
setGroupDictionary:
setDestinationPath:
finishedObservation
setFinishedObservation:
_groupDictionary
_destinationPath
_finishedObservation
_taskAssertion
setQualityOfService:
setMaxConcurrentOperationCount:
defaultFilePath
initWithFilePath:
saveOperationQueue
addOperation:
_setObject:forKey:inGroup:
_objectForKey:inGroup:
save
wipePersistentStorage
setBodyBackfillDate:forSource:
bodyBackfillDateForSource:
touchLastLoadOlder
clearLastLoadOlder
lastLoadOlder
clearSearchedServer
searchedServerDate
setSceneRestorationDictionary:
sceneRestorationDictionary
setSaveOperationQueue:
_filePath
_groups
_saveOperationQueue
stop
_registerConnection:
_enumerateServiceClasses:
initWithConnection:
setServiceManager:
setErrorHandler:
_serviceClassForName:
requiredEntitlement
_connection:hasEntitlement:
handleMessage:connectionState:reply:
handleMessage:connectionState:replyObject:error:
serviceName
enumerateKeysAndObjectsWithOptions:usingBlock:
_dispatchMessage:onQueue:connectionState:completion:
_listener
_queue
_services
_connections
_connectionsLock
handleError:
initWithName:
dictionaryWithObject:forKey:
errorHandler
shouldCancel
serviceManager
_connection
_connectionQueue
_messageQueue
_cancelFlag
_errorHandlerLock
_errorHandler
_serviceManager
initWithBytesNoCopy:length:encoding:freeWhenDone:
archiveDestination
initWithSpecialDestination:markAsRead:deleteIfSame:
setIsDeletion:
setWithObjects:
initWithFlagsToSet:flagsToClear:reason:
addEntriesFromDictionary:
_fetchRemoteIdForMessages:
addReason:
uniqueRemoteId
numberWithUnsignedLongLong:
remoteIDsFromUniqueRemoteIDs:
fetchMessagesWithRemoteIDs:andSetFlags:
messageForRemoteID:
initWithDestination:markAsRead:
uniqueRemoteIDsForMessages:
unsignedLongLongValue
setUniqueRemoteId:
initWithStore:
_seenOrTransferOperation
_deleteOperation
_isDeleteInPlace
committedNumber
invocation
_invocation
_committedNumber
_managerNumber
_isFinalized
_isReverseOperation
flagChangesForKey:
allMessagesInChanges:
mergeMessageChanges:withChanges:
addObject:toSetForKey:
shouldDeleteInPlace
initWithDeleteInPlace:
setRead:
setFlagged:
setDeleted:
setMessageFlagsWithoutCommitting:
_applyFlagChange:toObjects:
isLibraryMessage
_sortMessages:intoLibraryMesages:nonLibraryMessages:
mf_dictionaryWithMessagesSortedByStore
setFlagsFromDictionary:forMessages:
setFlagsForAllMessagesFromDictionary:
mf_boolForKey:
commitToAllMessagesInStore:
revertForAllMessagesInStore:
isRevertibleForAllMessagesInStore:
_flagChanges
_isDeletion
initWithFormat:arguments:
methodSignatureForSelector:
invokeWithTarget:
getReturnValue:
setReturnValue:
initWithCollection:allMustMatch:
forwardInvocation:
_first
_collection
_allMustMatch
mf_andOperations:
mf_orOperations:
setWithArray:
initWithSpecialDestination:markAsRead:flagsToSet:flagsToClear:
_operations
initWithSpecialDestination:
initWithObjects:
_storeToMessagesMappingWithMessages:
setOriginalLocations:
moveMessages:destinationMailboxURL:userInitiated:
deleteMessages:
changesReadTo:
initWithBuilder:
applyFlagChange:toMessages:
_notifyStoresOfTransferedMessages:failedMessages:
intersectSet:
canMoveMessagesFromAccount:toAccount:
messagesWereDeleted:
messageIDHeader
destination
originalLocations
_destination
_specialType
_equivalentFlagChange
_markAsRead
_deleteIfSame
_originalLocations
setMaximumSize:
setMaximumLatency:
containsIndex:
addIndex:
flushIfNecessary
handleHashes:
recentsLibrary
metadata
URLWithString:
messageIDHeaderFromMessageURL:
setTargetQueue:
isEmpty
addHash:
_flush
setRecentsLibrary:
_dispatchQueue
_hashes
_recentsLibrary
firstSender
mf_uncommentedAddress
mf_addressComment
subject
subjectWithoutPrefix
globalMessageURL
allVIPEmailAddresses
flush
messageIDHash
_messagesFlagsChanged:
_messagesWillBeCompacted:
_messagesWereCompacted:
_scheduleRemovalOfDetectedAddressesInMessages:
addressBook
scanner
_addAddressDetectorResult:forMessage:
coreRecentsMetadataForMessage:
library
weightForMessage:addressBook:vipManager:
dateReceived
setLibrary:
handleAddressBookChange
scanSummary:forMessage:
_scanner
_pendingRemovalQueue
_scheduledPendingRemovalQueueFlush
startup
setAccount:
summary
attachmentManager
initWithMessage:attachmentManager:
immediateScheduler
load:scheduler:shouldDownload:
content
htmlData
preferredCharacterSet
initWithHTML:
addSubparser:
newStringAccumulatorWithOptions:lengthLimit:
valueForAttributes:
appendInnerTextWithConsumableNode:
appendCustomEntityWithTag:stringRepresentation:
isFull
abortParsing
setFoundTextBlock:
setFoundWhitespaceBlock:
parse
parserError
accumulatedString
plainTextFromHTML:limit:
substringToIndex:
context
messageBody
topLevelPart
attachmentURLs
attachmentsForURLs:error:
isPass
attachmentForURL:error:
passWithError:
localizedName
filenameStrippingZipIfNeededUseApplications:
firstChildPart
disposition
subtype
dispositionParameterForKey:
nextSiblingPart
componentsJoinedByString:
addLoadObserver:
powerObservable
addCancelable:
_messageFlagsChanged:
_setIsRunning:
isDataAvailable
isPaused
countForObject:
initForMBLMailbox:
setMessages:
_finishedCullingMessageList:
_getNextClientOrMessage
setClients:
setViewingMessages:
_getNextClientOrMessageFinished:
client
message
_recordStats:
_tryProcessingQueues
nextClient
initForClient:forMBLMailbox:
_clientLoadFinished:
messageID
nextMessage
initForMessage:forMBLMailbox:
_messageLoadFinished:
setCanBeCancelled:
setPriority:
addMessages_nts:
_removeNewMessages_nts:
member:
setMutableInfoFromMessage:
_nts_insertClient:
_nts_removeClient:
ordering
priority
ef_removeObject:usingSortFunction:context:
enumerateObjectsUsingBlock:
arrayWithObjects:
addMessages:
_nts_isProcessingMessage:
_messagesAdded:
_blockingMessage
_retainPowerAssertion
_releasePowerAssertion
_logStats:
_cancelSleepIfNeeded
applicationWillSuspend
_clearResumeTime
applicationWillResume
_nts_sortClients
libraryID
startTime
earlierDate:
initialize
_setSharedLoaderForTesting:account:
copySummaryForMessage:downloadIfNecessary:
accountsDidChange
addSingleMessageClient:
removeSingleMessageClient:
addMessage:
isProcessingMessage:
stopAddingNewMessagesForStore:
userViewingMessages:
userStoppedViewingMessages
enableNetworkFetching
disableNetworkFetching
networkFetchingAllowed
_removeNewMessages:
_removeViewingMessages:
_waitUntilNotRunning
_isRunning
_applicationDidBecomeActive:
_applicationDidEnterBackground:
_clients
_newMessages
_newMessageSet
_newMessageMailboxQuota
_userViewingMessages
_currentMonitor
_watchedUids
_workQueue
_cancelationToken
_waitReply
_noNetworkFetching
_isPaused
_resumeTime
_isWaitingForTask
_shouldProcessQueues
_holdingPowerAssertion
_bytesPerAccount
_currentMessage
isMessageContentsLocallyAvailable
clients
messages
viewingMessages
_messageBodyLoader
_messages
_nextClient
_nextMessage
_viewingMessages
retainAssertionWithIdentifier:withAccount:
shouldDownloadBodyDataForMessage:
load:scheduler:
sharedAggregateDictionary
incrementKey:
shouldSetSummary
setSummary:
_message
wantsContentsOfType:
notifyContentsUnavailableForMessage:error:
notifyContentsAvailable:forMessage:
notifyFullMessageContentsUnavailableForMessage:error:
notifyFullMessageContentsAvailableForMessage:
_client
created
numberOfFailures
failedCellularAttempts
lastStatus
messageSize
lastAttempt
dataWithJSONObject:options:error:
initWithData:encoding:
dataUsingEncoding:
JSONObjectWithData:options:error:
setNumberOfFailures:
setFailedCellularAttempts:
setLastStatus:
setLastAttempt:
setMessageSize:
_created
_numberOfFailures
_failedCellularAttempts
_lastStatus
_lastAttempt
_messageSize
mailTransparentLightGrayColor
sharedApplication
preferredContentSizeCategory
capHeight
ascender
setStroke
drawWithRect:options:attributes:context:
traitCollectionWithPreferredContentSizeCategory:
defaultMetrics
scaledValueForValue:compatibleWithTraitCollection:
bezierPathWithRoundedRect:cornerRadius:
CGPath
scaledFontForFont:compatibleWithTraitCollection:
mainScreen
scale
boundingRectWithSize:options:attributes:context:
sizeWithAttributes:
pointSize
timeIntervalSince1970
cancelSummaryRequest
headersIfAvailable
setSummaryPromise:
numberOfLoadAttempts
setNumberOfLoadAttempts:
_bodyLoader
summaryPromise
requestSummary
order
requestSummaryImmediatelyFromDownloadedMessage:
summaryLoaded
setOrder:
_summary
_numberOfLoadAttempts
_summaryPromise
_order
strongToStrongObjectsMapTable
mailboxID
numberWithLongLong:
_mailboxWithMailboxLibraryID:
urlForMailboxID:
unsignedLongValue
mailboxForMessageInfo:
_mailboxCache
baseAccount
hasPasswordCredential
networkController
_renewCredentialsWithError:completionHandler:
_alternateAccount
initWithPerformsValidationInBackground:
usesSSL
validateAccount:useSSL:
globalAsyncScheduler
validationInvocation
accountIsValid
_overwriteAccount:withAlternateAccount:
portNumber
_getMailAccountFromDeliveryAccount:
isManaged
shouldFetchACEDBInfoForError:
_lastTimeConnectToACEDBForAccount:
initWithCalendarIdentifier:
components:fromDate:toDate:options:
hour
shouldHealFromAlternateAccount
_fetchServerFromACEDB:forIncomingServer:
_shouldHealAccount:withNewAccount:
password
setPassword:
caseInsensitiveCompare:
deliveryAccount
ef_firstObjectPassingTest:
accountPropertyForKey:
dateWithTimeIntervalSince1970:
setUsesSSL:
setPortNumber:
setHostname:
setValueInAccountProperties:forKey:
savePersistentAccount
renewCredentialsWithOptions:completion:
healFromAlternateAccountWithCompletion:
alternateAccount
_networkController
_accountReference:
_displayName:
_fullUserName:
_username:
_emailAddresses:
_emailAddressesAndAliases:
_fromEmailAddresses:
_fromEmailAddressesIncludingDisabled:
_defaultAddress:
_isActive:
_isDefaultSendingAccount:
_restrictsRepliesAndForwards:
_restrictedFromSendingExternally:
_supportsThreadOperations:
_syncsReadState:
_restrictedFromSyncingRecents:
_supportsMailDrop:
_isManaged:
_canFetch:
_pcStyle:
_restrictedFromMailDrop:
fullUserName
emailAddressesAndAliasesList
fromEmailAddresses
fromEmailAddressesIncludingDisabled
defaultMailAccountForDelivery
restrictedFromTransferingMessagesToOtherAccounts
restrictedFromSendingExternally
supportsMailDrop
numberWithUnsignedInt:
supportsThreadOperations
supportsSyncingReadState
restrictedFromSyncingRecents
resultsDictionaryFromAccount:forKeys:
sharedConnection
filteredMailSheetAccountsForBundleID:sourceAccountManagement:
signatureForSendingEmailAddress:
_deleteAccount:
invalidateAndDelete
setCurrentToneIdentifier:forAlertType:topic:
setPushedMailboxUids:
setMailboxUid:
capabilitiesDictionary
_updateApplicationShortcuts
_favoritesDidChange:
specialMailboxCountObserver
mailboxCountObserver
setSpecialMailboxCountObserver:
setMailboxCountObserver:
updateApplicationShortcutsForNoDisplayedAccounts
favoriteItem
setSpecialMailboxFavoriteItem:
startCountQueryForMailboxFavoriteItem:
setMailboxFavoriteItem:
specialMailboxFavoriteItem
mailboxFavoriteItem
fixedShortcutItems
_applicationShortcutForFavoriteItem:badgeCountString:
setShortcutItems:
initWithFavoriteItem:messagePersistence:hookRegistry:countDidChange:
initWithSystemImageName:
setLocalizedTitle:
setIcon:
_applicationShortcutIconForFavoriteItem:
setLocalizedSubtitle:
setUserInfo:
labelColor
_iconImageWithBackgroundColor:
initWithImageData:dataType:isTemplate:
size
drawInRect:
localizedTitle
localizedSubtitle
updateDynamicApplicationShortcutItems:forBundleIdentifier:
_unreadCountDidChange:
_mailboxCountObserver
_specialMailboxCountObserver
_specialMailboxFavoriteItem
_mailboxFavoriteItem
initWithTimeInterval:scheduler:startAfter:block:
predicate
debounceResult:
_favoriteItem
canExecuteRuleOnMessage:
setRead
shouldIncludeInNewMessagesSet
performOperationOnMessages:withMessageChangeManager:
isDXF
isPDFFile
isImageFile
isMedia
isRFC822
isCalendarFile
isRTF
isCSV
isHTML
isPlainText
isVCard
isZip
isExcel
isPowerpoint
isMSWord
isCertificate
isProfile
isVPN
mimeType
contentType
hasPrefix:
nanoAttachmentType
isMoveToTrashEnabled
isEmailAddressBlocked:
shouldMoveToTrashForMailboxType:
reloadWithMailAccounts:
rebuildActiveAccountsClausesAndExpressionsWithAccounts:
_handleAccountChange
reloadAccounts
reloadDeliveryAccounts
displayedAccountsIdentifiers
accountChangeNotificationToken
setAccountChangeNotificationToken:
_accountChangeNotificationToken
weakObjectsHashTable
hasAutosavedMessageWithIdentifier:completion:
removeAutosavedMessageWithIdentifier:
autosavedMessageDataWithIdentifier:completion:
autosaveMessageData:replacingIdentifier:completion:
getIdleAutosaves:
autosaveSessionForIdentifier:completion:
endpointInfoWithExportedInterface:remoteObjectInterface:shouldAcceptClient:exportedObjectForClient:
setClasses:forSelector:argumentIndex:ofReply:
autosaveIdentifier
setInterface:forSelector:argumentIndex:ofReply:
_autosavedMessageWithIdentifier:localOnly:completion:
compactMessages:
autosaveScheduler
mf_messageCriterion
transientDraftsFolder
andCompoundCriterionWithCriteria:
messagesMatchingCriterion:options:
messageData
messageWithRFC822Data:
mf_documentReference
openSynchronously
orCompoundCriterionWithCriteria:
addNewMessages:mailboxURL:userInitiated:
messageBodyIfAvailable
ef_partition:
activeAutosaveSessions
subjectString
withAutosaveIdentifier:subject:
initWithAutosaveIdentifier:
endpointInfo
newConnectionForInterface:
remoteObjectProxyWithErrorHandler:
setAutosaveScheduler:
setActiveAutosaveSessions:
_autosaveScheduler
_activeAutosaveSessions
setAutosaveIdentifier:
_autosaveIdentifier
reindexAllSearchableItemsWithAcknowledgementHandler:
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
exportedInterface
submissionDate
stringByAppendingString:
_scheduleNextFireEvent
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
notificationMessage
accountID
addIndexes:
isProcessing
initWithNotificationMessage:identifier:submissionDate:context:
ef_insertObject:usingComparator:allowDuplicates:
setNotificationMessage:
process
_delegateProcessMessages:
_processSufficientlyDelayedMessages
ef_objectsPassingTest:
isInvalidated
delayedNotificationsPresenter:userNotificationRequestForNotificationMessage:context:
delayedNotificationsPresenter:handleUserNotificationRequest:notificationMessage:context:
_removeProcessedMessages
setPostingDelay:
postingDelay
clearPendingMessages
removePendingMessagesWithIdentifiers:
removePendingMessagesWithAccountIdentifiers:
schedulePendingNotificationMessage:identifier:context:
immediatelyProcessPendingMessagesWithIdentifiers:
setDelegate:
_fireSource
_delegateQueue
_postingDelay
_pendingMessages
setIdentifier:
setSubmissionDate:
setContext:
_notificationMessage
_identifier
_submissionDate
_context
removeLastObject
mf_popElement
mf_isEmpty
headers
hasHeaderForKey:
firstHeaderForKey:
mailDropDeliveryState
playSound
setPlaySound:
forceAll
setForceAll:
_playSound
_forceAll
canUsePersistence
_outboxStore
_messagesInProgress
_mailAccountsChanged:
_focusedMessageDidChange:
_queueProcessingDidFinish:
_reachabilityChanged:
currentUser
_updateCounts
getFreeSpaceStatusWithCompletionHandler:
removeNetworkReachableObserver:
processQueueAndPlaySoundOnSuccess:forceAll:
processQueueAndPlaySoundOnSuccess:forceAll:isUserRequested:
_processQueueWithOptions:
mf_invocationWithSelector:target:object:
suspend
_append:flags:
initWithDomain:code:userInfo:
initWithStatus:error:
accountThatMessageIsFrom:includingInactive:
newWithMessage:
setArchiveAccount:
deleteMessages:moveToTrash:
deliverSynchronouslyWithCompletion:
status
attributes
setMailDropState:
mailDropState
_logDeliveryResult:forMessage:account:
_setDeliveryFlag:state:
conversationFlags
originalConversationId
setPersistenceConversationFlags:forConversationIDs:reason:
doCompact
setFlag:state:forMessages:
setUserInfoObject:forKey:
_updateDeliveryInfoFromResult:forMessage:
_setErrorForMessageLibraryID:error:
localizedDescription
isValid
outboxMessageStore:
_flagsChanged:
copyOfAllMessagesWithOptions:
notifyObserversOfUpdatedPendingMessageCount:
sortedArrayUsingComparator:
duration
isWifi
bytesSent
deliveryHookResponder
deliveredMessage:account:
hasPlaceholderRepresentation:
_sendProcessingStartedNotification:
_sortedMessages
setDisplayName:maxCount:
setCurrentCount:
_shouldSend:options:
newDeliveryObjectFactoryForMessage:
_setErrorForMessage:error:
reset
_sendProcessingFinishedNotificationWithSentMessages:failedMessages:playSound:
setSupportsPerItemProgress:
setPercentDoneOfCurrentItem:
observationScheduler
observers
numberOfPendingMessagesChanged:
setPercentDone:
notifyUserDeliverySucceeded:
isReady
isSuspended
isBusy
numberOfPendingMessages
append:
deliverSynchronously:
lastErrorForMessage:
test_waitForObservers
setObservationScheduler:
_stateQueue
_jobQueue
_messagesFromActiveAccounts
_messageWithUIFocus
_lastErrorForMessage
_numberOfCurrentSynchronousDeliveries
_resetDeliveryQueueWhenDoneWithCurrentMessage
_suspendRequested
_hasAdequateFreeSpace
_observationScheduler
_observers
setTo:
setCc:
setBcc:
sendingEmailAddress
mf_formattedAddressWithName:email:useQuotes:
composeWebView
containsRichText
initWithAllowsRestrictedAccounts:
accountProxyGenerator
accountProxyContainingEmailAddress:includingInactive:originatingBundleID:sourceAccountManagement:
setToRecipients:
toRecipients
setCcRecipients:
ccRecipients
setBccRecipients:
bccRecipients
setSubject:
setSavedHeaders:
savedHeaders
setSendingEmailAddress:
sendingAccountProxy
attachments
shouldCreateRichTextRepresentation
addSignature:
contentDidChange
contentVariationIndex
setOriginalMessageWasEncrypted:
_sendingEmailAddress
_bodyField
_accountProxyGenerator
_savedHeaders
initWithComposeType:
reference
initForwardOfMessage:legacyMessage:
initReplyAllToMessage:legacyMessage:
sender
setSendingAddress:
body
setMessageBody:isHTML:
sendingAddress
signaturePlainTextForSendingEmailAddress:
setupWithCompositionModel:delegate:
messageFromDelegate:originatingBundleID:sourceAccountManagement:
onScheduler:addSuccessBlock:
onScheduler:addFailureBlock:
mf_mailMessageFromModel:
unarchivedObjectOfClass:fromData:error:
setMessageBody:
autosave
serializedPlaceholderForFileName:fileSize:mimeType:contentID:
removePlaceholderForFileURL:
path
mf_canonicalizedAbsolutePath
placeholderDirectory
lastPathComponent
fileURLWithPath:
securityScopedURL:
securityScopeToken
composeType
legacyMessage
markAsViewed
markAsReplied
markAsForwarded
inAirplaneMode
setMessageFlags:
recordContactEventsForHeaders:recentsDomain:
setName:
_retrieveFreeSpaceStatus:
handleDidPurgeSpace:
systemSpaceWithError:
setFreeSpaceStatus:
freeSpaceStatus
_freeSpaceStatusQueue
_freeSpaceStatusTimerSource
_freeSpaceStatusLock
_freeSpaceStatus
fetchMessagesForMailboxWithName:options:withCompletion:
initWithClient:
_autoFetchCompleted:
_isWaitingForMailboxFetch
_waitForFetchCompletedForMailbox:withCompletion:
_completionAfterFetchCompleted
_waitingForMailbox
getFocusedMessageIDWithCompletion:
registerMetrics
awdServerConnection
awdNetworkDiagnosticReport
registerQueriableMetric:callback:
submitWithIdentifier:metricGenerator:
_statisticsKindFromAccount:
mailErrorCodeFromErrorDomainCode:
setGenericErrorCode:
setErrorCode:
setProtocol:
setProvider:
setMailError:
submitMailNetworkDiagnosticsReport
submitMailCannotGetMailErrorForHostname:protocol:emailProvider:mailError:submitNetworkDiags:
submitMailCannotGetMailErrorForHostname:protocol:emailProvider:mfErrorDomainCode:submitNetworkDiags:
mailErrorReportProtocolFromAccount:
mailErrorReportProviderFromAccount:
submitMailMessageDisplayErrorReport:
enumeratorAtPath:
attributesOfItemAtPath:error:
mf_enumerateAtPath:withBlock:
_pathsForContentWithType:
ef_flatMap:
purgeableAccounts
_enumerateContentsForAccounts:withType:handler:
attributesOfFileSystemForPath:error:
dictionaryWithObjectsAndKeys:
rangeOfString:
_enumerateContentPathsAndAttributes:
fileSize
_enumeratePurgeableFileInTemporaryDirectoryWithHandler:
deletePlaceholderAttachmentsWithCreationDateOver:
fileCreationDate
ef_isEarlierThanDate:
removeItemAtPath:error:
fileModificationDate
_enumeratePurgeableContentsWithType:handler:
mailSpaceWithError:
sizeForPurgeableTemporaryDirectoryContent
deletePlaceholderAttachments
deleteTemporaryDirectoryContent
deleteLocalAttachments
deleteLocalMessages
currentCalendar
dateByAddingUnit:value:toDate:options:
loadBodyOfMessageWithID:completion:
loadBodiesOfMessagesContainingSubject:completion:
messagesWithMessageIDHeader:
_loadMessages:completion:
initWithType:qualifier:expression:
setCriterionIdentifier:
hasLoadedSomeContent
resetListUnsubscribeSuggestionsWithCompletion:
removeAllPersistedCommands
findMessageData:matchingCriterion:options:
foundResults:error:
initWithRemoteObjectInterface:
setInterruptionHandler:
_libraryWillBecomeUnavailable:
connection
remoteObjectProxy
_hasSearchableMailAccount
setOptions:
setCriteria:
setKeys:
_registerForAutoFetchFinishedNotification
_searchResultsProxy
_autoFetchDone:
_backgroundSearch
retainArguments
searchProgress
_libraryOptions
resultsQueue
iterateMessagesMatchingCriterion:withResultHandler:options:withMonitor:
setSearchPromise:
searchPromise
initWithKeys:resultsProxy:
setResultsQueue:
_shouldPerformMallSearch
_performMallSearch
_performLibrarySearch
finishWithError:
setSearchProgress:
criteria
options
_criteria
_options
_keys
_resultsQueue
_searchPromise
_searchProgress
initWithMaximumSize:latency:
initWithKeys:downloadIfNecessary:
setAttachmentManager:
setMessage:
handleMessage:
handleItems:
_resultsProxy
_generator
qualifier
allActivePrimaryMailboxUids
setDateUnits:
mf_conversationCriterion
messageCriterionFromPredicateFormatString:
orderedVIPAddressesAndUnreadCountsWithCompletion:
allVIPSendersWithCompletion:
saveVIPSender:withCompletion:
deleteVIPSenderWithIdentifier:withCompletion:
initWithIdentifier:name:emailAddresses:
sortedVIPs
_dictionaryFromVIP:
_allVIPDictionaries
protectedDataAvailability
VIPSenderMessageCriterion
setCriterionType:
setAllCriteriaMustBeSatisfied:
messageIsDeletedCriterion:
sendersIfCached
dateSent
iterateMessagesMatchingCriterion:options:handler:
_vipFromDictionary:
saveVIP:
deleteVIPWithIdentifier:
_sharedInstance
processInfo
processorCount
alwaysSatisfiedCondition
initWithMaxThreadCount:
initWithName:condition:
setRequireWiFi:
setRequireExternalPower:
setRequireScreenLocked:
setMinBatteryLevel:
setMaxThermalPressureLevel:
processorWithName:condition:
setExcludedMailboxTypes:
setIncludePushedMailboxes:
setIncludeFavoritesMailboxes:
setLoadMessageBodies:
setMaximumMailboxesToFetch:
setUseMailboxFrecencyRanking:
_runSynchronously:
_observeChangesInConditions
_processEligibleMailboxesAndWait
descriptionWithLocale:
_mailboxesToFetch
isSatisfied
_finishRequest
loadMessageBodies
conditionsObservable
_cancelCurrentInvocations
totalCountForMailbox:
includePushedMailboxes
includeFavoritesMailboxes
excludedMailboxTypes
isNotesMailboxUid
useMailboxFrecencyRanking
subarrayWithRange:
_setRequestLimiterLimit:
runSynchronously
numberOfMailboxesFetched
accountMailboxesBatchSize
setAccountMailboxesBatchSize:
lastFetchDateCutoff
setLastFetchDateCutoff:
maximumMailboxesToFetch
setCondition:
_mailboxFetchCounts
_finishedProcessing
_requestLimiter
_requestLimiterLimit
_runningRequests
_currentInvocations
_failedMailboxes
_stopTime
_loadMessageBodies
_includePushedMailboxes
_includeFavoritesMailboxes
_useMailboxFrecencyRanking
_name
_accountMailboxesBatchSize
_lastFetchDateCutoff
_maximumMailboxesToFetch
_excludedMailboxTypes
_condition
signature
useAccountSignatures
libraryCompressionComplete
_registerLibraryCompression
_unregisterXPCActivity
initWithMailboxUIDs:
runLibraryCompressionShouldDefer:completion:
libraryCompressionActivity
mailboxesNeedingCompression
fileURLWithPath:isDirectory:
compressDirectory:shouldCancel:error:
_markMailboxCompressed:
setInteger:forKey:
mailboxUIDs
_removeCompressedXAttr:
_mailboxNeedsCompression:
mf_valueForExtendedAttribute:ofItemAtPath:error:
dataWithBytes:length:
mf_setValue:forExtendedAttribute:ofItemAtPath:error:
setLibraryCompressionActivity:
_mailboxUIDs
_libraryCompressionActivity
nanoMessageWithHeaders:
nanoMessageId
setMessageId:
publisherBulletinId
setPublisherBulletinId:
remoteID
generateNotificationIdWithFolderId:remoteId:
setNotificationMessageId:
accountId
setAccountId:
conversationID
setConversationId:
nano_mailboxId
setMailboxId:
setDateSent:
setDateReceived:
firstSenderAddress
setFrom:
copyAddressListForTo
copyAddressListForCc
copyAddressListForBcc
setMessageIdHeader:
nnmkMailItemStatusFromMFMessageFlags:conversationFlags:
setStatus:
generateMessageHashForMessage:
nanoMessage
nanoLocalMessageId
nanoMessageIdsForMailMessages:
nano_nnmkMailItemStatusFromMSResultsStatus:
detector
ignoreCommand:
deliveryForCommand:
initWithMessageData:
deliverMessageSynchronously:usingMailDrop:
acceptCommand:
ignoreWithCommand:completion:
unsubscribeWithCommand:completion:
_outgoingMessageRepository
_detector
_registerNotifications
systemAccount
canAuthenticateWithCurrentCredentials
primaryiCloudAccount
setDeliveryAccount:
mailboxForType:
containsMailboxWithURL:
sourceIsManaged
smtpIdentifier
isLocalAccount
ef_flatten
setMailAccounts:
_activeNonLocalAccountsWithMailAccounts:
setDisplayedAccounts:
setOrderedAccounts:
accountConduit
resetSpecialMailboxes
_executeChange:
representedObjectID
initFromProvider:
numberOfActiveAccounts
numberOfInactiveAccounts
setNumberOfActiveAccounts:
setNumberOfInactiveAccounts:
orderedAccounts
autofetchAccounts
receivingAddresses
legacyMailAccountForObjectID:
_accountsOrderDidChange:
_displayedAccountsIdentifiers
_mailAccounts
_displayedAccounts
_orderedAccounts
_numberOfActiveAccounts
_numberOfInactiveAccounts
filter
messagesAccumulator
batchSize
newMessagesAvailable:
initWithBatchSize:messageStore:filter:
setMessagesAccumulator:
setBatchSize:
setFilter:
_messagesAccumulator
_batchSize
_messageStore
_filter
dateReceivedAsTimeIntervalSince1970
finishWithResult:
_promise
messageBodyLoader
resultWithTimeout:error:
_enumerateMessagesToDownload:
_shouldTryToDownloadMessage:
sendMessagesMatchingCriterion:to:options:
_shouldContinueProcessing
_shouldDownloadMessage:
mailboxMessageBodyProcessorShouldContinueProcessing:
_freeSpaceGuidanceForSpaceIncreaseForMessage:
_spaceIncreaseUrgencyForMessage:
deviceStorage
freeSpaceGuidanceForSpaceIncrease:urgency:
initWithMailbox:batchSize:deviceStorage:
_deviceStorage
_relativePath:
_type:
_level:
_pushState:
resultsDictionaryFromMailboxUid:forKeys:
_mailboxUid
_pushedMailboxUids
nano_mailboxType
setUrl:
localId
setAccountLocalId:
nano_displayName
nano_mailbox
loadLibraryMessagesFromLibraryMatchingCriterion:count:protectedDataAvailable:
messagesMatchingCriterion:options:range:
libraryMessageForMessageId:libraryOptions:
libraryMessagesForMessageIds:protectedDataAvailable:
mf_sizeForDirectoryAtURL:error:
messageBasePathForAccount:
rootMessageDataDirectoryForBasePath:purgeable:
personaIdentifier
supportsPurge
baseMailDirectory
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
nonPurgeableSpace
previousPurgeTime
setPreviousPurgeTime:
previousUrgency
setPreviousUrgency:
_previousUrgency
_previousPurgeTime
_serviceName
isComplete
_registerLibraryPurgeableUpgrader
allPurgeableMailboxUids
runMarkLibraryPurgeableUpgraderShouldDefer:completion:
activity
_canRun
mailboxesNeededToBeMarkedPurgeable
markDirectoryPurgeable:account:shouldCancel:error:
_setPurgeableXAttrForMailbox:
_removePurgeableXAttrForMailbox:
_mailboxNeedsToBeMarkedPurgeable:
fileExistsAtPath:
initFileURLWithPath:
getResourceValue:forKey:error:
initWithFile:account:
markPurgeableWithError:
setActivity:
initWithName:accountsProvider:deviceStorage:condition:
setMailboxMessagesBatchSize:
setStopDate:
loggingActivity
_runSynchronously
_mailboxesToDownload
mailboxMessagesBatchSize
persistentStorage
stopDate
_loggingActivity
_mailboxMessagesBatchSize
_stopDate
setSecond:
dateByAddingComponents:toDate:options:
weakToWeakObjectsMapTable
setScheme:
setPath:
storage
componentsWithURL:resolvingAgainstBaseURL:
sharedRegistry
URLForLoadingContext:scheme:
loadingContextForURL:
_storage
registerClass:
registry
scheme
initWithRequest:cachedResponse:client:
response
URLProtocol:didReceiveResponse:cacheStoragePolicy:
data
URLProtocol:didLoadData:
URLProtocolDidFinishLoading:
URLProtocol:didFailWithError:
addCancelationBlock:
request
initWithURL:MIMEType:expectedContentLength:textEncodingName:
initWithResponse:data:userInfo:storagePolicy:
_didLoadContentEvent:error:
appendData:
mf_messageFragment
loadingContext
markupString
attachmentForTextAttachment:error:
fetchLocalData
markupStringForDisplayWithData:allowAttachmentElement:
mf_stringByEscapingHTMLCodes
done
_cachedResponseWithData:error:
setRegistry:
URLForLoadingContext:
canInitWithRequest:
canonicalRequestForRequest:
requestIsCacheEquivalent:toRequest:
startLoading
stopLoading
token
setPromise:
_token
_loadingContext
userProfileProvider
accountsEmailAddresses
criterionType
expression
allVIPEmailAddressesCriterion
myEmailAddressesCriterionWithType:
components:fromDate:
minute
mailServerSideCriterion
notCriterionWithCriterion:
criterionByApplyingTransform:
indexSet
scannerWithString:
whitespaceAndNewlineCharacterSet
addCharactersInString:
isAtEnd
scanCharactersFromSet:intoString:
scanLongLong:
referencedMailboxes
referencedConversations
_bodySummary:
_conversationReference:
_dateReceived:
_dateSent:
_mailboxURL:
_messageIDHash:
_messageReference:
_outgoing:
_receivingAddresses:
_recipientBcc:
_recipientCc:
_recipientTo:
_sender:
_status:
_subject:
_bestAlternativePart:
_headerData:
_isLocalDraft:
_messageLibraryID:
_localMessageReference:
_predictiveModelSummary:
_publisherBulletinID:
_rfc822Data:
_suppressionContexts:
_mailboxType:
_attachmentValueForKey:
_headerValueForKey:
mf_externalReference
uniqueServerIdForMessage:
mf_conversationReference
_copyPredictiveModelSummaryForMessage:downloadIfNecessary:
_defaultAttachmentManager
_addressBook
_convertEmailAddress:
_convertEmailAddresses:
isOutgoingMailboxUid
conformsToType:
_knownAttachmentLimiterTests
initWithPattern:options:error:
rangeAtIndex:
substringWithRange:
_testForAttachmentLimiterType:
fileName
part
partNumber
enumerateMatchesInString:options:range:usingBlock:
headerDataForMessage:downloadIfNecessary:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
bestAlternativePart
bestAlternativeInPart:
defaultAlternativeInPart:
headersForKey:
_shouldDownload
_loadRules
_subscribeNotification
executeRulesOnMessages:
rules
setRules:
persistenceWillBeginUpdates
persistenceDidFinishUpdates
persistenceWillAddMessage:fromExistingMessage:
persistenceIsAddingMessages:journaled:generationWindow:
persistenceDidAddMessages:generationWindow:
persistenceDidReconcileJournaledMessages:generationWindow:
persistenceDidUpdateData:message:
persistenceDidUpdateProperties:message:generationWindow:
persistenceIsDeletingMessages:generationWindow:
persistenceDidDeleteMessages:generationWindow:
persistenceIsDeletingAllMessagesInMailboxWithURL:generationWindow:
persistenceDidDeleteAllMessagesInMailboxesWithURLs:generationWindow:
persistenceWillChangeFlags:messages:
persistenceIsChangingFlags:messages:generationWindow:
persistenceDidChangeFlags:messages:generationWindow:
persistenceDidChangeConversationNotificationLevel:conversationID:generationWindow:
persistenceDidAddLabels:removeLabels:messages:generationWindow:
persistenceWillChangeConversationID:messages:
persistenceIsChangingConversationID:messages:generationWindow:
persistenceDidChangeGlobalMessageID:orConversationID:message:generationWindow:
persistenceWillTransferMessages:transferType:destinationMailboxURL:userInitiated:
_handleDefaultChanged:
setMessageChangeManager:
_rules
_messageChangeManager
_checkIfSettingsChanged
_addObservers
_handleNewAccountIdentityAvailable
_accountsChanged:
_settingsChanged:
_swipeActionsChanged:
nanoAccountFromMailAccount:
syncProvider
watchAccounts
standaloneState
setStandaloneAccountStateByAccountId:
setUpdateMailboxSelection:
_notifyFavoritesManagerSelectedMailboxesChanged
notifyMobileMailAccountsChanged
addUpdateOrDeleteAccounts:
notifyMobileMailSwipeRightActionChanged
_nanoMailboxesFromMailAccount:
setMailboxes:
bridgeSettingsMailboxSelection
setCustomName:
inboxesFilterTypes
setFilterType:
setSyncEnabled:
selectedMailboxes
mailboxId
filterType
isPaired
initWithAccounts:
mailboxSelection
updateMailboxSelection:
organizeByThread
setOrganizeByThread:
allMailboxesSyncEnabled
mailboxUidForURL:
favoriteMailboxUidList
accountIdentities
setAccountIdentities:
syncStandaloneAccountIdentity:
handleWatchAccountsUpdated
requestWatchAccounts
initWithExecutionQueue:syncProvider:
accountWithId:
notifyAuthenticationFailedForAccount:
updateBridgeSettingsWithMailboxSelection:
_handleImportantBridgeSettingHasChanged
executionQueue
setExecutionQueue:
setSyncProvider:
_executionQueue
_syncProvider
pairedDeviceSupportsMultipleMailboxes
getActivePairedDevice
defaultSelectedMailboxes
sourceTypeForMailboxFilterType:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
mailboxFilterType
icon
configureCell:
encodeObject:forKey:
decodeObjectOfClass:forKey:
imageWithTintColor:
kitImageNamed:
mailInteractiveColor
_includesMeIconImage
systemGrayColor
initWithAccountUniqueIdentifier:mailboxURL:
mailboxURL
accountUniqueIdentifier
URLStringFromLegacyURLString:
invalidateCachedData
_mailboxURL
_accountUniqueIdentifier
_loadAccounts
_handleDidUnpair
_handlePairedDeviceChanged
updateSharedPreferences
mirrorSettingsFromCompanion
notifyMirrorSettingsFromCompanionChanged
_mirrorSettingsFromCompanion
includeMailMailboxes
setInboxesFilterTypes:
setSelectedMailboxes:
mailboxesWithAllMessagesSyncEnabledIds
aggregatedMailboxesFilterTypes
addSharedSettingsToArray:ifFilterTypes:containsFilter:
setIncludeMailMailboxes:
_getValueForKey:
unarchivedObjectOfClasses:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
_setValue:forKey:syncWithClient:
_includeMailMailbox
_setIncludeMailMailboxes:
_linesOfPreview
_setLinesOfPreview:
_askBeforeDeleting
_setAskBeforeDeleting:
_loadRemoteImages
_setLoadRemoteImages:
_organizeByThread
_setOrganizeByThread:
_swipeRightAction
_setSwipeRightAction:
_signature
_setSignature:
notifyMobileMailAskBeforeDeletingChanged
notifyMobileMailLoadRemoteImagesChanged
notifyMobileMailOrganizeByThreadChanged
_mobileMailAskBeforeDeleting
_mobileMailLoadRemoteImages
_mobileMailOrganizeByThread
_mobileMailSwipeRightAction
_mailboxSelectionFromPreviousOSVersion
_includeMailMailboxesFromDisk
_getValueForKey:perGizmo:
_setValue:forKey:syncWithClient:perGizmo:
domainAccessor
readFromSharedPreferencesValueForKey:
_saveValueToSharedPreference:forKey:
synchronizeNanoDomain:keys:
synchronizeUserDefaultsDomain:keys:
initWithDomain:
standaloneAccountStateByAccountId
linesOfPreview
setLinesOfPreview:
askBeforeDeleting
setAskBeforeDeleting:
loadRemoteImages
setLoadRemoteImages:
swipeRightAction
setSwipeRightAction:
setSignature:
reloadCachedAccounts
_syncManager
_domainAccessor
_mailboxUidById
_accountByMailboxId
_activeAccounts
_inboxesFilterTypes
_selectedMailboxes
initWithCallbackQueue:
initWithDelegate:
_vipChangedNotification:
_conversationFlagsChanged:
_messagesCompacted:
containsSyncedMailbox:
bulletinFlagsForMessageStatus:dateReceived:messageWillBeAddedToSyncProvider:mailboxId:
replyWithAccounts:
updateMessages:
_fetchForMailboxes:growFetchWindow:
_libraryMessagesReceivedBefore:count:inConversationWithId:protectedDataAvailable:limitDateReceived:syncedMailboxes:
_filteredMessagesArrayFromLibraryMessages:syncedMailboxes:
replyWithFirstMessages:includesProtectedMessages:mailboxes:organizedByThread:
reportWillDownloadFirstMessages
_loadFullMesssagesForMessageIds:messagesAlreadyLoadedByMessageId:libraryMessagesRetrievalBlock:callback:
beforeDate
conversationId
mailboxes
setHasProtectedMessages:
replyWithMoreMessages:context:
syncedMailboxes
replyWithMessagesToResend:includesProtectedMessages:
replyWithMessagesToSendAsFetchResponse:includesProtectedMessages:
replyWithAccountToResend:
_loadContentForLibraryMessageId:highPriority:
attemptToCancelFullMessageLoadForMessageIds:
_cancelLoadingContentForLibraryMessageId:
cancelAllPendingOperations
syncProvider:didRequestFetchForMailboxes:
_handleAutoFetchDone:
_updateVIPList:requestContext:
composedMessageId
replyWithMessageSendingProgress:forComposedMessageId:
sendMessage:progressHandler:
updateMessagesStatus:
criterionForConversationID:
markConversationIdForNotify:messages:includesProtectedMessages:
markConversationIdForNotNotify:
deleteMessagesWithIds:
allVIPs
updateVIPSenderList:requestContext:
notifyFetchCompleted
messageId
addMessageContent:forMessage:loadedProtected:
addImageAttachment:forMessageId:contentId:loadedProtected:
reportMessageContentDownloadFailureForMessageId:
highPriority
setHighPriority:
pairedDeviceInfo
initWithMessageId:highPriority:pairedDeviceInfo:delegate:
removeObjectsForKeys:
loadFullMessagesForMessageIds:completion:
setBeforeDateReceived:
setDateReceivedLimit:
setCount:
messagesForMailboxes:param:
protectedDataAvailable
isMessageOkForSyncedMailboxes:
accountLocalId
syncProviderDidRequestAccounts:
syncProvider:didRequestFirstMessages:mailboxes:
syncProvider:didRequestMessagesToSendAsFetchResponseForMessageIds:
syncProvider:didUpdateMessagesStatus:
syncProvider:didRequestContentForMessageWithId:highPriority:
syncProvider:didRequestStopDownloadingMessageElementsForMessageWithId:
syncProviderDidRequestStopDownloadingAllMessageElements:
syncProvider:didRequestResendMessagesWithIds:
syncProvider:didRequestResendAccountWithId:
syncProvider:didRequestSendComposedMessage:
syncProviderDidRequestFetch:forConversationId:mailbox:
syncProvider:didUpdateMailboxSelection:
syncProvider:didRequestMessagesWithContext:
syncProvider:didUpdateWatchAccounts:
syncProvider:didRequestReauthenticationForAccount:
syncProvider:didFailAuthenticatingAccount:
syncProvider:didRequestVIPSenderListWithRequestContext:
messageContentLoader:receivedMailContent:forMessage:loadedProtected:
messageContentLoader:receivedImageAttachment:contentId:loadedProtected:
messageContentLoaderDidFinishLoading:
messageContentLoaderDidFailLoadingContent:
watchedMailboxes
nanoBulletinFlagsForMessageFromAccount:mailboxURLString:status:dateReceived:
_messageIdsForNanoMessages:
_libraryMessagesReceivedBefore:count:inConversationWithId:protectedDataAvailable:limitDateReceived:syncedMailbox:
_filteredMessagesArrayFromLibraryMessages:syncedMailbox:
_nanoServerQueue
_messageContentLoadersKeyedByMessageId
_fullMessageLoader
_messageUpdater
_messageSender
_mailboxListeningForNotificationsTo
_accountHandler
_messageFetchService
_waitingForAutoFetchDone
isNetworkUp
_suspendOrResumeOperationQueue
_setupNetworkObserver
_registerForLibraryAvailabilityNotifications
_libraryAvailabilityChanged
_networkStatusChanged
addNetworkObserverBlock:queue:
removeNetworkObserver:
callbackQueue
privateQueue
resetExponentialBackoff
initWithMessageIds:completion:
requests
_dispatchOperation
cancelRequestForMessageId:
operationQueue
cancelAllOperations
_dequeueMessageIdsFromFirstRequestAvailable:
_loadFullMessageForMessageIds:isProtectedMessage:
_handleResults:forRequest:isProtectedMessage:
_scheduleRetryForFailedMessageIds:failedRequest:
_isProtectedDataAvailable
_libraryMessagesKeyedByStore:
_downloadHeadersForMessages:
dequeueAllMessageIds
failedMessageIdsByRequest
_exponentialBackoff
_enqueueMessageIds:forRequest:
setIsRetryScheduled:
addResults:isProtectedMessage:
isRequestCompleted
completionBlock
resultIncludesProtectedMessages
_processPendingRequests
addExecutionBlock:
enqueueMessageIds:
setSuspended:
setRequests:
setCallbackQueue:
setPrivateQueue:
setOperationQueue:
networkObserverId
setNetworkObserverId:
setIsProtectedDataAvailable:
setIsNetworkUp:
setFailedMessageIdsByRequest:
isRetryScheduled
currentBackoff
setCurrentBackoff:
_isNetworkUp
_isRetryScheduled
_requests
_callbackQueue
_privateQueue
_operationQueue
_networkObserverId
_failedMessageIdsByRequest
_currentBackoff
enqueueMessageId:
addResult:isProtectedMessage:
resultedMessagesById
dequeueMessageId
setCompletionBlock:
outstandingMessageIdRequests
setOutstandingMessageIdRequests:
pendingMessageIdRequests
setPendingMessageIdRequests:
setResultedMessagesById:
setResultIncludesProtectedMessages:
_resultIncludesProtectedMessages
_completionBlock
_outstandingMessageIdRequests
_pendingMessageIdRequests
_resultedMessagesById
_startContentLoadProcess
_parseContentFromMessageAndNotifyDelegate:loadedProtected:
_notifyDelegateOfFailure
_attemptToLoadLibraryMessageWithContentFromDatabase
_downloadContent
_monitoredOperationWithBlock:
_libraryMessageForMessageId:
screenWidth
setPreview:
_notifyDelegateThatReceivedMailContent:forMessage:loadedProtected:
imageWithData:
screenScale
adjustedImage:maxWidth:screenScale:
_notifyDelegateThatReceivedImageAttachment:forContentId:loadedProtected:
_startLoadingImageAttachments:messageBody:loadedProtected:
_notifyDelegateDidFinish
parseMessage:maxImageWidth:completionBlock:
mf_lastPartNumber
partWithNumber:
_attachmentForURL:mimePart:
fetchDataSynchronously:
contentID
setContentId:
setFileName:
encodedFileSize
setFileSize:
setMimePartNumber:
setPart:
setMimeType:
attachmentFilename
approximateRawSize
setEncodedFileSize:
setDisposition:
blockOperationWithBlock:
setQueuePriority:
_nanoAttachmentForURL:mimePart:
_requestDate
_messageForDownload
_contentQueuedForDownload
_pairedDeviceInfo
_monitoredOperations
_monitoredOperationsLock
_currentContentParsers
_highPriority
_messageId
sharedSession
load:
parseMessageWithLoadingContextEvent:maxImageWidth:messageBody:imageAttachmentsURLsToLoad:imageAttachmentsLoaded:
setHtmlContentData:
dataTaskWithURL:completionHandler:
hasLoadedCompleteBody
_parseMimeParts:messageBody:attributedString:maxLength:maxImageWidth:maxImageAttachments:shouldTryAlternatives:urlsForValidation:nanoAttachmentsList:imageAttachmentsURLsToLoad:imageAttachmentsLoaded:usingAlternativePart:partiallyLoaded:
externalID
setMainAlternativeValid:
setHasTextData:
trimAttributedString:
setTextData:
setAttachments:
setPartiallyLoaded:
initWithString:attributes:
archivedDataWithRootObject:
setOriginalContentSize:
_parseTextAttachmentMimePart:messageBody:maxImageAttachments:nanoAttachmentsList:imageAttachmentsURLsToLoad:
appendAttributedString:
_parseStringMimePart:maxLength:
_parseWebMessageDocumentMimePart:messageBody:maxLength:maxImageWidth:maxImageAttachments:shouldTryAlternatives:urlsForValidation:finalNanoAttachmentsList:finalImageAttachmentsURLsToLoad:finalImageAttachmentsLoaded:usingAlternativePart:partiallyLoaded:
_parseAttachmentsFromMimePart:messageBody:maxImageAttachments:nanoAttachmentsList:imageAttachmentsURLsToLoad:
mimePart
setMimeBody:
imageAttachmentAttributedStringWithContentId:imageSize:mergingAttributes:
attachmentAttributedStringWithContentId:mergingAttributes:
parseHTMLBody:encoding:maxLength:maxImageWidth:partiallyParsed:imageAttachmentsLoaded:urlsFound:
parseHTMLBody:encoding:maxLength:maxImageWidth:partiallyParsed:imageAttachmentsLoaded:urlsForValidation:
parentPart
numberOfAlternatives
alternativeAtIndex:
contentToOffset:resultOffset:asHTML:
setRenderOnClient:
contentId
mimeBody
attachmentForURL:withMimeBody:error:
setContentID:
_htmlParser
_htmlContentURLSession
_cancelable
_criterionForMessagesFromMailboxes:param:
_criterionForMessagesFromMailbox:param:
criterionForMailboxUrl:
_filterTypeCriterionForMailbox:
beforeDateReceived
dateReceivedLimit
criterionForMailboxURL:
hasFilterType:
_criterionForFilterType:
flaggedMessageCriterion
unreadMessageCriterion
threadNotifyMessageCriterion
includesMeCriterion
todayMessageCriterion
_protectedDataAvailable
_beforeDateReceived
_count
_conversationId
_dateReceivedLimit
_didReceiveMessageDeliveryNotification:
sendingType
referenceMessageId
initReplyToMessage:legacyMessage:
setLoadingContext:
includeAttachments
lastObject
attachmentsInDocument
allManagers
fileWrapperForcingDownload:
setOriginalContent:
setLoadRest:
setIncludeAttachments:
_messageToSendWithCompositionContext:
_sendComposedMessage:
contextID
setCompositionContextID:
_messagesDeliveredSemaphore
_pendingMessageReferences
_sentMessageReferences
pianoMoverImageURL
compositionContextID
_compositionContextID
_status:containsState:
_addOperation:withMessages:toChangeManager:
_networkConfigurationChanged:
_networkHasAlternateAdvice:
releaseAllForcedConnections
releaseAllAccountConnections
isMainThread
releaseAllConnections
deliveryQueue
setDeliveryQueue:
autofetchController
setAutofetchController:
setNetworkController:
_deliveryQueue
_autofetchController
messageOperation
senders
ef_stringByTrimmingLeadingCharactersInSet:
senderAddressComment
isVIPAddress:
_isInFavoriteMailbox
senderFullAddress
contactStore
predicateForContactsMatchingEmailAddress:
descriptorForRequiredKeysForStyle:
unifiedContactsMatchingPredicate:keysToFetch:error:
stringFromContact:style:
senderCommentedAddress
notificationIDForMessage:
isVIP
isNotifiedThread
isFavoriteMailbox
accountDisplayName
libraryMessage
notificationID
topicIdentifiers
initWithFavoritesReader:vipReader:libraryMessage:contactStore:suppressionContexts:summary:
title
messageReference
coalesceThreadID
subtitle
senderAddress
suppressionContexts
favoritesReader
setFavoritesReader:
vipReader
setVipReader:
setContactStore:
setSenderFullAddress:
_isVIP
_isFavoriteMailbox
_libraryMessage
_dateReceived
_subtitle
_senderAddress
_suppressionContexts
_accountID
_nanoMessageId
_favoritesReader
_vipReader
_subject
_senderCommentedAddress
_contactStore
_senderFullAddress
_title
_registerPushNotificationPrefix:forMailboxNames:
transformer
criterionForQuery:
setCriterion:
searchManager
fullSearchUsingSearchContext:
initWithCriterion:
filterRemoteSearchResults:
fetchRemoteMessagesWithQuery:delegate:
verifyResults:query:
_transformer
_searchManager
emptyTrash
emptiedTrashTimestamps
setEmptiedTrashTimestamps:
_emptiedTrashTimestamps
allKeysForObject:
mailArchiveActionColor
mailDestructiveActionColor
mailFlaggedColor
systemIndigoColor
mailMoreButtonGrayColor
triageActionForActionKey:
actionKeyForTriageAction:
defaultColorForTriageAction:
isActionDestructive:
traitCollection
layoutDirection
initWithSystemUserNotificationCenter:conversationSubscriptionProvider:favoritesReader:vipReader:blockedSenderReader:messageChangeManager:messagePersistence:hookRegistry:
initWithVIPReader:favoritesReader:delegate:
initWithUserNotificationCenterObserver:
initWithBlockedSenderReader:vipReader:
setPrivateDelegate:
setWantsNotificationResponsesDelivered
_applicationForegroundStateChanged:
_postingDelayIsMailForeground:
strongToWeakObjectsMapTable
registerDatabaseChangeHookResponder:
hasVIPs
nts_resetUserNotificationCenterTopics
startUpgradeIfNecessary
_loadCurrentSettingsAndNotifyObservers
observer
startObserving
_retrySummaryLoadsOnStartup
systemUserNotificationCenter
initWithDelegate:systemUserNotificationCenter:conversationSubscriptionProvider:favoritesReader:vipReader:activeAccounts:
setUpgrader:
upgrader
performUpgradeIfNecessary
delayedNotificationPresenter
distantFuture
isEqualToDate:
updateCutoffForMailboxesWithMessages:
messagesNeedingNotification:
requestSummaryForMessage:
handleDidFetchSummaryForMessages:
handleDidFetchMessages:
deliveredNotifications
removeNotificationsWithIdentifiers:
removePendingNotificationRequestsWithIdentifiers:
removeDeliveredNotificationsWithIdentifiers:
mailboxCutoffController
isMessageAboveMailboxCutoff:
soundController
notificationRequestForNotificationMessage:destinations:isAdd:soundController:
setSubtitle:
setDate:
setCategoryIdentifier:
setDefaultActionURL:
setTopicIdentifiers:
setBody:
setThreadIdentifier:
setSummaryArgument:
addSoundIfNecessaryForNotificationContent:suppressionContexts:
requestWithIdentifier:content:trigger:destinations:
requestWithIdentifier:content:trigger:
addNotificationRequest:withCompletionHandler:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
queue
topicRequestsForAccounts:
defaultTopicRequests
setByAddingObjectsFromSet:
requestAuthorizationWithOptions:completionHandler:
setNotificationTopics:withCompletionHandler:
topicRequestWithIdentifier:displayName:priority:sortIdentifier:supportedOptions:enabledOptions:
notifyMessagesAdded:afterDate:isSummaryDownload:
cancelSummaryRequestForMessageWithExternalReference:
resetUserNotificationCenterTopics
initWithSet:
cancelSummaryRequestsForAccountWithID:
nts_removeNotificationsForRemovedAccounts
notification
actionIdentifier
processNotificationActionForMessageReferenceURL:actionIdentifier:
settingsObservers
currentSettingsByTopic
getNotificationSettingsForTopicsWithCompletionHandler:
_swipeActionForNotificationActionIdentifier:
messageObjectIDForURL:
persistedMessagesForMessageObjectIDs:requireProtectedData:temporarilyUnavailableMessageObjectIDs:
setFlagged
substringFromIndex:
updateMessage:withSummary:
globalMessageID
_retrySummaryLoads
initWithObserver:message:
requestSummaryWithClient:
setObserver:
summaryClientsLock
_nts_invalidateClient:summaryClientsByReference:
objectEnumerator
_requestSummariesForMessageReferences:
_libraryMessagesForMessageReferences:
notificationRequestForNotificationMessage:destinations:
persistenceIsInitializingDatabaseWithConnection:
persistenceDidInvalidate
persistenceDidInitializeConversationSubscriptionProvider
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:didChangeSettings:
userNotificationCenter:didOpenApplicationForResponse:
notificationCenterObserver:messageAdded:afterDate:
notificationCenterObserver:messagesUpdated:flags:
notificationCenterObserver:messagesDeleted:
vipsChangedForNotificationCenterObserver:
notificationCenterObserver:removedVIPs:
conversationFlagsDidChangeForNotificationCenterObserver:
notificationCenterObserver:didStopListeningForChangesForAccountIDs:
activeAccountsDidChangeForNotificationCenterObserver:
removeSettingsObserver:
setQueue:
notificationFilter
resultsGenerator
setResultsGenerator:
setSummaryClientsLock:
setSystemUserNotificationCenter:
setSoundController:
summaryClientsByReference
setSummaryClientsByReference:
setHasVIPs:
hasThreads
setHasThreads:
setDelayedNotificationPresenter:
notificationsNeedingSummaries
setNotificationsNeedingSummaries:
setNanoServer:
_settingsLock
_hasVIPs
_hasThreads
_notificationFilter
_mailboxCutoffController
_resultsGenerator
_summaryClientsLock
_systemUserNotificationCenter
_upgrader
_observer
_soundController
_summaryClientsByReference
_delayedNotificationPresenter
_settingsObservers
_currentSettingsByTopic
_notificationsNeedingSummaries
_calculatePriority
_calculateOrdering
_attempts
_priority
_ordering
mailboxesToBeObserved:
_handleAccountsChanged:
_handleVIPsChanged:
_handleConversationFlagsChanged:
_nts_startObservingAccounts:
_nts_stopObservingAccountWithIDs:
_handleMessagesAdded:
_handleMessagesFlagsChanged:
_handleMessagesDeleted:
_nts_updateObservationWithAccounts:
_handleFoldersChanged:
_startObservingStore:
_handlePushedFoldersChanged:
_handleFavoriteMailboxesChanged:
_stopObservingStore:
stopObserving
isObservingMailbox:inAccountID:
observedAccountIDs
setObservedAccountIDs:
observedStoresByAccountID
setObservedStoresByAccountID:
_activeAccountsLock
_observedAccountIDs
_observedStoresByAccountID
mailboxesToBeObservedWithFavoritesReader:
_hasBeenUpgraded
_verifyDatabaseAccessAndPerformUpgrade
assertIsExecuting:
_canAccessDatabase
_upgrade
_performUpgrade
_markUpgradeComplete
setBool:forKey:
clearedInfoForDataProviderMigration
_lastClearedInfo
dateByAddingTimeInterval:
_notificationMessagesForAccountIDs:count:clearedInfo:sinceDate:
_criteriaForAccountIDs:clearedInfo:since:favoritesReader:
messagesMatchingCriterion:options:range:success:
ef_uniquifyWithComparator:
_criterionForObservedMailboxesInAccount:favoritesReader:
messageIsServerSearchResultCriterion:
_criterionForDismissedMessages:
_criterionForExcludedDateRanges:
threadMuteMessageCriterion
_criterionForCutOffDates:sinceDate:
_criterionForSpecialNotifications:
laterDate:
_dataMigrationIsComplete
currentAccountIDOfSoundToPlay
setCurrentAccountIDOfSoundToPlay:
loudestState
setLoudestState:
notificationExpectedFromFetch
setNotificationExpectedFromFetch:
fetchStart
setFetchStart:
_notificationExpectedFromFetch
_currentAccountIDOfSoundToPlay
_loudestState
_fetchStart
_autoFetchStarted:
_autoFetchJobCompleted:
_autoFetchFinished:
_autoFetchPushStarted:
_autoFetchPushFinished:
soundsToPlay
autoFetchData
autoFetchPushCount
waitUntilDate:
setSoundsToPlayWaitTimeoutTS:
soundWithAlertType:
setAlertTopic:
setSound:
setAutoFetchData:
_fetchJobCompleted:autoFetchData:
soundsToPlayWaitTimeoutTS
signal
_fetchFinished:timestamp:
setAutoFetchPushCount:
pushFetchTimestamps
setPushFetchTimestamps:
_fetchSoundDataCondition
_soundsToPlay
_autoFetchData
_autoFetchPushCount
_soundsToPlayWaitTimeoutTS
_pushFetchTimestamps
copyReceivingEmailAddresses
_accountsEmailAddresses
_processingDidStart:
_processingDidFinish:
registerUserSyncStakeholder:withMachServiceName:
taskWithName:reason:forBundleID:
begin
createAndStartTask
unregisterStakeHolder:status:reason:
uploadContent
endTask
willSwitchUser
printDeliveryQueue
processQueueAndExit
_runningInSyncBubble
_transaction
_task
_exitWhenDone
defaultMessageLibrary
_pendingVIPChangesPath
_performTasksAfterProtectedDataBecomesAvailable
_libraryDidFinishReconciliation:
_vipsDidChange:
_checkForAddressBookChangesNeedingRevert:
existingPersonForVIP:usingAddressBook:
isSubsetOfSet:
_newVIPFromVIP:byAddingEmailAddresses:
saveVIPs:
removeVIPsWithIdentifiers:
mf_copyIDNAEncodedEmailAddress
mf_copyIDNADecodedEmailAddress
mf_indexOfRecipientWithEmailAddress:
writeToFile:atomically:
storedIntegerPropertyWithName:
orderedBatchOfMessagesEndingAtRowId:limit:success:
updateFlagsForMessagesInPlace:success:
setStoredIntegerPropertyWithName:value:
_clearVIPSenderFlagForSenders:retryFailedSenders:
_setVIPSenderFlagForSenders:retryFailedSenders:
_removePendingVIPChanges
_messagesForSenders:success:
_savePendingVIPChanges_nts
criterionForEmailAddresses:
messagesMatchingCriterion:options:success:
_handleAddressBookNotification
_addressBookQueue
_addressBookResetCount
_pendingAddressQueue
_pendingAdds
_pendingRemoves
_vipManager
processIdentifier
hasEntitlement:
interruptionHandler
_interruptionHandler
existingListener:
listener
remoteObjectInterface
shouldAcceptClient
exportedObjectForClient
_exportedInterface
_remoteObjectInterface
_shouldAcceptClient
_exportedObjectForClient
initWithEndpointInfo:
anonymousListener
setClient:
setConnection:
setExportedInterface:
setExportedObject:
removeClientInfo:
addClientInfo:
listener:shouldAcceptNewConnection:
setListener:
_clientInfos
_endpoint
listenerForProtocolNamed:
endpoint
removeDiagnosticsGenerator:
activeListeners
_endpointInfoByProtocol
setStatusBarShowsMailProgress:
performSelectorOnMainThread:withObject:waitUntilDone:
_hideStatusBarProgress
setStatusBarShowsProgress:
_networkMonitors
_activityLock
initWithMarkupString:baseURL:
ef_match
mf_isSMIMEError
setHost:
queryItemWithName:value:
setQueryItems:
searchResultIdentifier
ef_hasScheme:
ef_hasHost:
pathComponents
ef_caseInsensitiveIsEqualToString:
isInternalMessageURL:
internalIDFromInternalMessageURL:
databaseID
criterionForLibraryID:
mf_isDocumentURL
criterionForDocumentID:
mf_isInternallyHandleable
mf_isOAuthRedirectURL
mf_URLForMessageLibraryID:externalID:
documentID
UUIDString
messageWithRFC822Data:forMailboxUID:
action
setAction:
shouldSign
setShouldSign:
shouldEncrypt
setShouldEncrypt:
conversationNotificationLevel
conversationFlagsForConversationNotificationLevel:
setConversationFlags:
originalMessageID
libraryMessageForMessageObjectID:
setOriginalMessage:
accountContainingEmailAddress:
hasMessageForAccount:
copyMessagesMatchingCriterion:options:
isProcessingWithCompletion:
numberOfPendingMessagesWithCompletion:
outboxContainsMessageFromAccountObjectID:completion:
processAllQueuedMessages
resumeDeliveryQueue
suspendDeliveryQueue
messagesForDocumentID:mailboxID:
startObservingPendingMessageChangesWithChangeObserver:observationIdentifier:
cancelObservation:
setObservers:
pendingMessages
setPendingMessages:
progress
logPrefix
totalUnitCount
_addSearchOperations:
workQueue
waitUntilAllOperationsAreFinished
cancelled
completedUnitCount
setCancelled:
searchContext
foundResults
shouldStopSearching
setFoundResults:
shouldSuppressErrors
source
nextSearchableSource
foundMessages
stopEarly
finishedSearchingSource
progressWithTotalUnitCount:parent:pendingUnitCount:
initWithSource:searchContext:logPrefix:progress:delegate:
setFoundMessages:
setStopEarly:
setFinishedSearchingSource:
remoteSearchOperationShouldStopEarly:
remoteSearchOperation:didFindResults:
initWithAccount:searchContext:logIdentifier:progress:
performSearch
setNextSearchableSource:
_foundResults
_cancelled
_nextSearchableSource
_foundMessages
_stopEarly
_finishedSearchingSource
_searchContext
_logPrefix
_progress
currentThread
threadDictionary
_emitFoundMessagesForResult:totalSearchResultCount:
_followUpContextForSearchContext:searchResult:totalSearchResultCount:
setCompletedUnitCount:
enumerateMailboxesAndRemoteIDsUsingBlock:
continueOffset
setOffset:
_source
_sourcesForSearchContext:
fullSearchForManager:searchContext:sources:
discreteProgressWithTotalUnitCount:
remoteSearchDidFinish
_finishedSearchOperation:
_sources
baseCriterionFromSources:
initWithManager:sources:searchContext:
manager
setManager:
sourcesCriterion
serverSearchContext
sources
_group
_monitorLock
_monitors
_sourcesCriterion
_manager
_serverSearchContext
updateWithAccounts:
setCancellationHandler:
performRemoteSearches
timeoutDelay
becomeCurrentWithPendingUnitCount:
_remoteSearchableSourcesByAccount
progressWithTotalUnitCount:
_performRemoteSearchesWithSources:accountID:
addChild:withPendingUnitCount:
_performRemoteSearchesForAccount:
resignCurrent
remoteSearchDidFindMessages:
_orderedEnumeratorForSources:withAccount:
_performRemoteSearchForAccount:coordinator:
setTotalUnitCount:
_orderedMailboxesForAccount:
currentMailboxes
orderedSetWithArray:
initWithOrderedSet:
isSentMailboxUid
isDraftsMailboxType:
_accountsLock
_remoteSearchCoordinatorsByAccountIdentifierLock
_remoteSearchCoordinatorsByAccountIdentifier
_parseFlagsFromCriterion:
verifySkeletonMessage
verifyIndexedBySpotlight
_passesSpotlightVerification:
_passesSkeletonVerification:
_walkCriterion:mode:withBlock:
criterionIdentifier
setVerifySkeletonMessage:
_containsSpotlightCriterion:
setVerifyIndexedBySpotlight:
allCriteriaMustBeSatisfied
_verifySkeletonMessage
_verifyIndexedBySpotlight
stringByAppendingPathExtension:
bundleWithPath:
setSearchTerms:
setSearchText:
setShouldStopSearching:
setShouldSearchAllMail:
setShouldSkipLocalSearch:
setShouldSkipRemoteSearch:
setShouldSuppressErrors:
setTimeoutDelay:
setCurrentMailboxes:
shouldSearchAllMail
searchTerms
mutableCopyWithZone:
shouldSkipLocalSearch
shouldSkipRemoteSearch
_shouldSearchAllMail
_shouldSkipLocalSearch
_shouldSkipRemoteSearch
_shouldSuppressErrors
_searchText
_searchTerms
_shouldStopSearching
_timeoutDelay
_currentMailboxes
_offset
initWithLibrary:message:semaphore:
_semaphore
_unregisterXpcActivity
serviceForMail
setCountLimit:
_libraryFinishedReconciliation:
_registerXpcActivity
_scheduleBackgroundDownload
_processBackgroundDownload
fullDownloadRequestBatch:withCompletion:
_libraryMessagesForSGMailMessageKeys:
arrayByExcludingObjectsInArray:
resolveFullDownloadRequests:withCompletion:
refreshLostMessagesUntilDeferred:
mailboxUidForMessage:
uidIsLibraryID
_mailboxForMessageLikeObject:
messageWithLibraryID:options:inMailbox:
unconfirmedLostMessages
messagesToRefreshWithCompletion:
setLastUnconfirmedLostMessagesSearchTime:
lastUnconfirmedLostMessagesSearchTime
mailboxesForSuggestionsLostMessageSearchPriorToTime:
messageIdRollCall:
updateSuggestionsLostMessageSearchResultCount:
setUnconfirmedLostMessages:
reportMessagesFound:lost:withCompletion:
_messageFromMessageInfo:
_suggestionsQueue
_harvesterService
_scheduledDownloadSemaphore
_scheduledDownloadClients
_suspended
_fullDownloadToken
_unconfirmedLostMessages
_lastUnconfirmedLostMessagesSearchTime
systemOrangeColor
systemRedColor
colorNamed:
systemYellowColor
systemGreenColor
systemTealColor
systemPurpleColor
secondaryLabelColor
systemGroupedBackgroundColor
traitCollectionWithUserInterfaceStyle:
traitCollectionWithTraitsFromCollections:
resolvedColorWithTraitCollection:
colorWithDynamicProvider:
tableCellDefaultSelectionTintColor
opaqueSeparatorColor
systemBackgroundColor
mailConversationViewExpandedCellBackgroundColor
colorWithAlphaComponent:
separatorColor
secondarySystemGroupedBackgroundColor
mailSystemLightGrayColor
systemBlackColor
blackColor
colorWithWhite:alpha:
mailSecondaryLabelDarkColor
systemGray4Color
systemGray5Color
mf_useSplitViewStyling
secondarySystemBackgroundColor
getRed:green:blue:alpha:
systemBlueColor
CGColor
getWhite:alpha:
colorWithRed:green:blue:alpha:
mailFlaggedColorRed
mailFlaggedColorOrange
mailFlaggedColorYellow
mailFlaggedColorGreen
mailFlaggedColorTeal
mailFlaggedColorIndigo
mailFlaggedColorGray
mf_isTranslucent
mailFlaggedColorIncreasedContrastRed
mailLightGrayColor
mailDarkGrayColor
mailAppBackgroundColor
mailSystemUltraLightGrayColor
mailSelectedCellColor
mailSelectedCellSystemLightGrayColor
mailSelectedCellSystemUltraLightGrayColor
mailChevronBoxColor
mailExpandedChevronBoxColor
mailHighlightedChevronBoxColor
mailSortOfNavBarBackgroundColor
mailVibrantDarkColor
mailVibrantLightColor
mailAccountCellTitleColor
mailGrabberColor
mailPreviousDraftPickerHeaderTextColor
mailSplitViewBorderColor
mailConversationViewBackgroundColor
mailConversationViewCollapsedCellBackgroundColor
mailConversationViewCollapsedCellHighlightedBackgroundColor
mailConversationViewCollapsedCellLabelColor
mailHeaderSeparatorLayerColor
mailTransferConversationViewBackgroundColor
mailConversationViewNoSelectedMessageViewBackgroundColor
mailDockViewLightBackgroundColor
mailDockViewDarkBackgroundColor
mailDockedPlaceholderViewBackgroundColor
mailDockViewShadowGradientColors
mailDockViewShadowGradientColorLocations
mailTiltedTabCloseButtonTintColor
mailExpandedConversationViewCellDateLabelColor
mailTransferStackViewBackgroundColor
mailSplitViewBackgroundColor
mailMessageListPrimarySelectionColor
mailMessageListSecondarySelectionColor
mailMessageListTertiarySelectionColor
mailMessageListSelectedSummaryColor
mailMessageListSelectedAnnotationColor
mailMessageListSelectedStatusIndicatorColor
mailMessageListSelectedRecipientColor
mailCellSelectionStateColorForInterfaceLevel:
mailMailboxPickerBackgroundColorForTraitCollection:
mailTodayFilterColor
mailAttachmentsFilterColor
mailVIPFilterColor
mf_colorFromColor:toColor:progress:
mf_colorFromFlagColor:
defaultInstanceLock
initWithBackingManager:
backingManager
removeVIPsWithEmailAddresses:
vipForEmailAddresses:andDisplayNames:
vipCriteria
_abPersonByVIPIdentifierLock
_abPersonByVIPIdentifier
_backingManager
-[_MFResultsGenerator blockForKey:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/maild/Legacy XPC Services/Results Generators/_MFResultsGenerator.m
0 && "subclass must implement"
com.apple.email
v8@?0
v32@?0@"NSString"8@"UNNotificationSettings"16^B24
App badge
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSObject<OS_os_log>",R
scheduler
T@"<EFScheduler>",&,N,V_scheduler
messagePersistence
T@"EDMessagePersistence",&,N,V_messagePersistence
hookRegistry
T@"EDPersistenceHookRegistry",&,N,V_hookRegistry
mailboxProvider
T@"MFMailboxProvider",&,N,V_mailboxProvider
queryHandler
T@"EDMessageCountQueryHandler",&,N,V_queryHandler
query
T@"EFQuery",&,N,V_query
notificationSettingsByTopic
T@"NSDictionary",C,N,V_notificationSettingsByTopic
oldBadgeCount
Tq,N,V_oldBadgeCount
notificationCenter
T@"UNUserNotificationCenter",&,N,V_notificationCenter
mailboxObserverID
T@"EMObjectID",&,N,V_mailboxObserverID
AutoFetchProcessStartNotification
AutoFetchProcessJobCompletedNotification
AutoFetchProcessFinishedNotification
AutoFetchPushCompletedNotification
AutoFetchPushStartedNotification
AutoFetchDoneNotification
AutoFetchMailboxRequestStartNotification
AutoFetchJobNewMessagesState
AutoFetchMailboxRequestMonitor
AutoFetchJobAccount
AutoFetchJobMailboxUid
AutoFetchDontNotify
AutoFetchError
com.apple.mail.fetchchangeduids
com.apple.mobilemail.autofetch
jobList
T@"NSArray",R,N,V_jobList
AutoFetchController.m
Current thread is main
%lu (%@)
grew
same
v12@?0B8
other
push
poll
powernap
user
account
cause
duration
%.2fs
wifi
%@/%ld
error
numFetched
remoteIDToPreserve
T@"NSString",C,N,V_remoteID
T@"NSString",C,N,V_key
gotNewMessagesState
TQ,N,V_gotNewMessagesState
wasPrimaryMailbox
TB,N,V_wasPrimaryMailbox
isPush
TB,N,V_isPush
isScheduled
TB,N,V_isScheduled
responsiveness
Td,N,V_responsiveness
T@"MFError",&,N,V_error
result
Tq,R,N,V_result
monitor
T@"MFActivityMonitor",R,N,V_monitor
T@"MFMailboxUid",R,N,V_uid
T@"MailAccount",R,N
shouldNotify
TB,R,N
shouldCompact
TB,N,V_compactMailbox
displayErrors
TB,N,V_displayErrors
isVisibleFetch
TB,N,V_isVisibleFetch
isPowernapFetch
TB,N,V_isPowernapFetch
isUserRequested
TB,N,V_isUserRequested
isForegroundRequest
TB,N,V_isForegroundRequest
shouldGrowFetchWindow
TB,N,V_shouldGrowFetchWindow
shouldLoadOlderMessages
TB,N,V_shouldLoadOlderMessages
downloadAllMessages
TB,N,V_downloadAllMessages
shouldLoadMessageBody
TB,N,V_shouldLoadMessageBody
closeConnection
TB,N,V_closeConnection
dontNotify
TB,N,V_dontNotify
retry
TB,N,V_retry
fetchedSuccessfully
TB,R,N,G_fetchedSuccessfully
loadNumOlderMessages
TQ,N,V_loadNumOlderMessages
mailboxPath
T@"NSString",R,N,V_mailboxPath
frequency
TQ,N,V_frequency
lastFetchTime
Td,N,V_lastFetchTime
lastFetchDuration
Td,N,V_lastFetchDuration
newMessagesState
TQ,N,V_newMessagesState
com.apple.email.signposts
com.apple.email.AutofetchController.fetch
com.apple.email.AutofetchController.fetchProcessor
v12@?0i8
%s should not be called while there are outstanding autofetch requests.
-[AutoFetchController _startAutoFetch:withAccounts:]
should not have existing visible stores for new auto fetch
should only get reachability timeouts when we're waiting on reachability.
should not be a reachability timeout cancelation token.
should have made a network wakeup timeout cancelation token.
down
we should not get any fetches back while we're not waiting for them.
%s should not be called while there are visible store requests to enqueue.
-[AutoFetchController _finishAutoFetch]
==== Autofetcher State ====
  current state                   : %@
  last fetch date (non-visible)   : %@
  last fetch had errors           : %@
  last fetch had sources          : %@
  last fetch type                 : %d
  fetch accounts:                 : %@
  pending fetch type              : %d
  pending fetch accounts:         : %@
  reachable                       : %@
  monitoring reachability         : %@
  fetch when reachable            : %@
  outstanding fetch requests : %lu
  account responsiveness          : %@
==== Autofetcher Joblist ====
==== Fetch History ====
==== Fetch History (Push) ====
AutoFetchDisabled
[%@ - %@]
signpostID
signpostLog
autoFetchState
Ti,N
accountsProvider
T@"<MFAccountsProvider>",&,N,V_accountsProvider
favoritesPersistence
T@"FavoritesPersistence",&,N,V_favoritesPersistence
T@"NSArray",&,N,V_jobList
currentAlertContexts
T@"NSSet",C,N,V_currentAlertContexts
currentAlertSuppresionContexts
T@"NSSet",C,N,V_currentAlertSuppresionContexts
fetchScheduler
T@"<EFScheduler>",&,N,V_fetchScheduler
fetchProcessorScheduler
T@"<EFScheduler>",&,N,V_fetchProcessorScheduler
B24@?0@"MailAccount"8^B16
Idle
WaitingForWiFi
WaitingForReachability
JoiningBackgroundFetches
WaitingForJobList
  uid: %@
    account: %@
    isVisibleFetch: %@
    isUserRequested: %@
    isForegroundRequest: %@
    shouldGrowFetchWindow: %@
  %@
    frequency  : %lu
    last fetch : %@
    duration   : %.2fs
    result     : %@
no new messages
new messages
new messages (incl. VIP)
new messages (incl. thread notify)
new messages (incl. in folder you've favorite)
new messages (no sound)
com.apple.email.maild
com.apple.mail.maild.contentProtectionObserver
DaemonAppController startup
AppleLanguagePreferencesChangedNotification
com.apple.mobilemail.nano.pairedsync
DaemonAppController.m
Invalid parameter not satisfying: %@
MFUserAgent() == self
com.apple.MobileMail.pushPurgeableSpaceUpdate
com.apple.email.ConversationDailyExporter
com.apple.email.ConversationPruning
com.apple.email.interaction-log.submit-pet
com.apple.email.maild.suggestionsLostMessageProcessing
com.apple.email.searchableIndex.scheduler.budgeted
com.apple.email.searchableIndex.scheduler.maintenance
com.apple.email.spotlightVerification
com.apple.emaildaemon.protecteddatabasepersistence.cleanup
com.apple.mailsupport.downloadMobileAssetCatalog
com.apple.message.LibraryPurgeableMigrator
com.apple.message.db.vacuum
com.apple.message.fileCompressionQueueActivity
com.apple.message.journal-reconciliation
com.apple.message.libraryCompression
com.apple.message.statisticsLogging
com.apple.mobilemail.powernapFetches
com.apple.mobilemail.scheduledFetches
com.apple.mobilemail.compactingFetches
com.apple.email.EDRemoteContentManager.requestScheduler
com.apple.mail.maild.unregisterPushTopics
com.apple.email.maild.aps
Delayed Startup Transaction
/System/Library/AppRemovalServices/com.apple.mobilemail.appremoval.xpc
com.apple.mobilemail.appremoval
v16@?0@"NSError"8
v16@?0B8B12
v20@?0Q8B16
v16@?0@"NSDictionary"8
sharedController
T@"DaemonAppController",R
blockedSenderManager
T@"EMBlockedSenderManager",&,N,V_blockedSenderManager
purgeableStorage
T@"MFMailPurgeableStorage",&,N,V_purgeableStorage
purgeableStorageMonitor
T@"MFMailPurgeableStorageMonitor",&,N,V_purgeableStorageMonitor
badgeController
T@"AppBadgeController",&,N,V_badgeController
categorySubsystem
T@"EDCategorySubsystem",&,N,V_categorySubsystem
userNotificationCenterController
T@"MFUserNotificationCenterController",&,N,V_userNotificationCenterController
snapshotInvalidator
T@"DaemonSnapshotInvalidator",&,N,V_snapshotInvalidator
libraryReconciler
T@"MFLibraryReconciler",&,N,V_libraryReconciler
trashCompactor
T@"MFTrashCompactor",&,N,V_trashCompactor
activityPersistence
T@"EDActivityPersistence",R,N
T@"MFMailboxProvider",R,N,V_mailboxProvider
nanoServer
T@"MFNanoServer",R,N,V_nanoServer
com.apple.notifyd.matching
PCPreferencesDidChangeNotification
com.apple.mobilemail.afc.poll
com.apple.exchangesyncd.ping
MFNanoMailImportantBridgeSettingHasChangedDarwinNotification
v16@?0@"NSObject<OS_xpc_object>"8
PowerNapFetchesInterval
MailPCPollIntervalOverride
-[DaemonFetchController _fetchTypeForSchedulerType:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/maild/Fetching/DaemonFetchController.m
v28@?0B8B12i16@"NSError"20
@16@?0@"NSString"8
@16@?0@"EMMailboxObjectID"8
INBOX
ALL_MAIL
DaemonFetchController.m
mailboxName
completion
No active accounts found.
No account had a mailbox with the given name.
v16@?0@"NSNotification"8
Fetch timed out.
v20@?0B8@"NSError"12
@"SimpleMailboxSource"16@?0@"MFMailboxUid"8
T@"NSSet",&,N,V_currentAlertContexts
T@"NSSet",&,N,V_currentAlertSuppresionContexts
powerNapScheduler
T@"FetchXPCActivityScheduler",&,N,V_powerNapScheduler
periodicScheduler
T@"FetchXPCActivityScheduler",&,N,V_periodicScheduler
compactScheduler
T@"FetchXPCActivityScheduler",&,N,V_compactScheduler
Enabled
Disabled
applicationBundleID
T@"NSString",C,N,V_applicationBundleID
invalidationHandler
T@"<DaemonSnapshotInvalidationHandler>",W,N,V_invalidationHandler
enabled
TB,N,GisEnabled,V_enabled
type
selected
shouldSync
expanded
+[FavoriteItem itemFromDictionary:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/FavoriteItem.m
type > 0 && type < FavoriteItemTypeMaxValue
-[FavoriteItem dictionaryRepresentation]
_type > 0 && _type < FavoriteItemTypeMaxValue
displayName
%@-%@
-[FavoriteItem displayName]
com.apple.Message
UNREAD_COUNT_FORMAT%1$lu
Main
ItemTypeAccount
ItemTypeMailbox
ItemTypeInbox
ItemTypeUnifiedMailbox
ItemTypeSharedMailbox
ItemTypeOutbox
ItemTypeMaxValue
<%@: %p; type = %@; visible:%@ expanded:%@ displayName = %@>
TB,V_shouldSync
itemID
T@"NSString",R,N
parentItemID
Tq,R,V_type
sourceType
criterion
T@"MFMessageCriterion",R,V_criterion
badgeCount
T@"NSNumber",&,V_badgeCount
additionalPredicate
T@"NSPredicate",R
TB,GisSelected,V_selected
acceptsMessageTransfers
TB,R
expandable
TB,R,GisExpandable
expandableInEditMode
TB,R,GisExpandableInEditMode
TB,GisExpanded
subItems
T@"NSArray",C,V_subItems
uniqueID
primaryEmail
name
mailboxType
syncKey
originalPushState
(NOT A CRASH) FavoriteItem_Mailbox dictionaryRepresentation primary==nil accountRelativePath:%@ displayName:%@ mailbox:%@ sync:%@
%@@%@
usernameHostInfo
TB,V_originalPushState
mailbox
T@"MFMailboxUid",&,V_mailbox
%@-%ld
ALL_INBOXES_LONG
All Inboxes
ALL_DRAFTS
All Drafts
ALL_ARCHIVE
All Archive
ALL_SENT
All Sent
ALL_TRASH
All Trash
AllInboxes
InvalidMailboxUidType
RootlessMailboxUid
GenericMailboxUid
JunkMailboxUid
ArchiveMailboxUid
TrashMailboxUid
SentMessagesUid
DraftsMailboxUid
OutboxUid
InboxUid
RootMailboxUid
INBOXSpecialMailboxUid
JunkSpecialMailboxUid
ArchiveSpecialMailboxUid
TrashSpecialMailboxUid
SentMessagesSpecialMailboxUid
DraftsSpecialMailboxUid
OutboxSpecialMailboxUid
<%@: %p; mailboxType = %@; displayName = %@>
unreadCountToken
T@"<EFCancelable>",&,V_unreadCountToken
badgeCountDebouncer
T@"EFDebouncer",&,V_badgeCountDebouncer
SharedMailbox-%i
VIP_MAILBOX
FLAGGED_MAILBOX
Flagged
ORANGE_MAILBOX
Orange
RED_MAILBOX
PURPLE_MAILBOX
Purple
BLUE_MAILBOX
Blue
YELLOW_MAILBOX
Yellow
GREEN_MAILBOX
Green
GRAY_MAILBOX
Gray
UNREAD_MAILBOX
Unread
INCLUDES_ME_MAILBOX
To or Cc
HAS_ATTACHMENTS_MAILBOX
Attachments
NOTIFY_ME_MAILBOX
Thread Notifications
TODAY_MAILBOX
Today
MUTED_MAILBOX
Muted Threads
MESSAGE_COUNT_FORMAT%1$lu
TQ,R,V_sourceType
VIPIdentifier
VIPMailbox-%@
T@"EMVIP",R,V_VIP
com.apple.mobilemail.pushStatusUpdates
FavoritesCollectionDidInvalidateVisibleItemsNotification
__OUTBOX__
INBOXES
ACCOUNTS
SINGLE_ACCOUNT_MAILBOXES
MAILBOXES
items
v16@?0@"FavoritesCollectionState"8
B16@?0@"FavoriteItem"8
Collection-%d
<%@: %p; type = %@; items = %@>
transient
TB,N,V_transient
isEditing
TB,D,N
doesSync
TB,R,GdoesSync
hidesHeader
TB,R,GhidesHeader
T@"NSArray",R,N
visibleItems
selectedItems
isOutboxCollection
B32@?0@8Q16^B24
T@"NSArray",&,N,V_items
T@"NSArray",R,N,V_visibleItems
T@"NSArray",R,N,V_selectedItems
TQ,N,V_type
editing
TB,N,GisEditing,V_editing
MailApplicationFavoritesDidChange
MailApplicationFavoritesOrderDidChange
MailApplicationAccountsOrderDidChange
MailApplicationAccountFavoritesDidChange
FavoritePersistenceCollectionDidChange
FavoritePersistenceShouldReload
FavoritesPersistenceCollectionChangedSourceKey
Collections
LastSelectedItem
InboxesOrder
com.apple.mobilemail
FavoritesManagerLock
MailboxCollections.plist
com.apple.FavoritesPersistence.writeCollectionData
v16@?0@8
com.apple.mail.favorites
_reload
version
collections
lastSelectedItem
B16@?0@"MailAccount"8
 << removingItems %@ from collection %@ >>
 << addingItem %@ to collection %@ >>
v32@?0@"FavoritesCollection"8@"NSArray"16#24
 << adding shared mailbox items >>
 << Creating default mailbox collections >>
FlaggedMailboxControllerBadgeCount
setLastSelectedItem: %@
q24@?0@8@16
@"MFMailboxUid"16@?0@"MailAccount"8
buildVersion
Refreshing due to item expansion on collection:%p itemIndex:%lu item:<%p> %@
modified
v32@?0@8@16^B24
_mergeExternalChanges
FavoritesPersistence.m
Current thread must be main
Removing orphaned mailboxes
_processNewMailboxes
OldChildren
NewChildren
_mailboxNameChanged: changedItem: %@
_sharedMailboxControllerBadgeCountDidChange
v16@?0@"EMMailbox"8
Outbox (Observing)
B16@?0@"MFMailboxUid"8
hasFavoriteMailboxes
mailboxCollections
mailboxesCollection
T@"FavoritesCollection",R,N
showingOutbox
includeFavoriteMailboxesDuringFetch
T@"FavoriteItem",&,N,V_lastSelectedItem
storagePath
T@"NSString",R,N,V_storagePath
mailboxPersistence
T@"EDMailboxPersistence",&,N,V_mailboxPersistence
conversationSubscriptionProvider
T@"<EDConversationSubscriptionProvider>",R,N,V_conversationSubscriptionProvider
+[FetchXPCActivityScheduler _xpcActivityIdentifierForType:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/maild/Fetching/FetchXPCActivityScheduler.m
-[FetchXPCActivityScheduler criteriaBuilder]
-[FetchXPCActivityScheduler initialXPCActivityInterval]
delegate
T@"<FetchXPCActivitySchedulerDelegate>",R,W,N,V_delegate
schedulerType
Ti,R,N,V_schedulerType
interval
Td,R,N,V_interval
-[GenericSource mailboxUids]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/GenericSource.m
protectedDataAvailable
TB,GisProtectedDataAvailable
@16@?0@"MailAccount"8
B16@?0@8
NNMKAccount
/System/Library/PrivateFrameworks/NanoMailKitServer.framework/NanoMailKitServer
### Failed to Soft Linked: /System/Library/PrivateFrameworks/NanoMailKitServer.framework/NanoMailKitServer
com.apple.mobilemail.mailboxes
kind IN %@
B16@?0@"CRRecentContact"8
@"EFFuture"16@?0@"NSArray"8
CRRecentContactsLibrary
/System/Library/PrivateFrameworks/CoreRecents.framework/CoreRecents
### Failed to Soft Linked: /System/Library/PrivateFrameworks/CoreRecents.framework/CoreRecents
CRAddressKindURL
CRSearchQuery
%@, %@
parentMailbox
T@"MFMailboxUid",&,V_parentMailbox
T@"NSString",&,V_displayName
No output
Mailbox Prediction Debug
Dismiss
Prediction: %@
Model: %@
algorithm
T@"NSString",C,V_algorithm
T@"NSString",C,V_result
output
T@"NSString",C,V_output
dismissBlock
T@?,C,V_dismissBlock
outputTextView
T@"UITextView",&,V_outputTextView
<%@: %p> %@ : %@
store
T@"MFMailMessageStore",&,N,V_store
Notes
LoadOutboxTask
filename
T@"NSString",R,C,N,V_filename
cachedImage
T@"UIImage",&,N,V_cachedImage
@16@?0@"NSNumber"8
v24@?0@"NSArray"8@"NSError"16
FOUND_IN_MAILBOX_FORMAT
_WITH_ACCOUNT
_SHORT
MAILBOX_SUFFIX
BOX_SUFFIX
FOLDER_SUFFIX
MailPendingChanges
MVMailboxListHasPendingChangesNotification
==== %@ ====
  current change:    %@
  pending changes:   %@
  committed changes: %@
  invocation queue:  %@
  pre-change unread counts: %@
<no pre-change unread counts>
  post-change unread counts: %@
<no post-change unread counts>
-[MailChangeManager addChange:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MailChangeManager.m
[change isFinalized]
isProperlyPaused
FLUSH_MBOX_CHANGES
MailChangeManager.m
<rdar://problem/14669980> key was nil, change %@, store %@, uid %@
MailErrorHandlerDoNotSanitize
ChangeManager %p (%lu pending, %lu committed)
only post-change
pre- and post-change
all keys
undoManager
T@"NSUndoManager",R,V_undoManager
%@ : %lu,
maild.deliveryInfo
maild.mailDropDeliveryState
-[MailMailboxChangeSet commit]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MailMailboxChangeSet.m
[self isFinalized]
-[MailMailboxChangeSet revert]
%@ %@
-[MailMessageChangeSet initWithMessages:operation:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MailMessageChangeSet.m
[messages isKindOfClass:[NSSet class]]
-[MailMessageChangeSet initWithMessages:unreadMessages:readMessages:flaggedMessages:unflaggedMessages:operation:]
-[MailMessageChangeSet applyPendingChangeToObjects:]
-[MailMessageChangeSet commit]
-[MailMessageChangeSet revert]
%@ => %lu messages
-[MailMessageChangeSet copyChangeSetForFullPath:]
-[MailMessageChangeSet stores]
-[MailMessageChangeSet accounts]
-[MailMessageChangeSet URLStrings]
-[MailMessageChangeSet adjustUnreadCount:withCriterion:]
@"NSNumber"24@?0@"NSNumber"8@"NSNumber"16
-[MailMessageChangeSet _unreadCountAdjustmentByMailboxForCriterion:]
@"<NSCopying>"16@?0@"MFMailMessage"8
B16@?0@"MFMailMessage"8
v32@?0@"MFMailboxUid"8@"NSArray"16^B24
operation
T@"MCSMessageOperation",R,V_operation
MailChangeSetUnreadCountChanged
MailChangeSetEncounteredError
MailChangeSetErrorKey
MailChangeSetAccountKey
MailChangeSetResurrectedMessages
com.apple.mobilemail.%@-%p
groupDictionary
T@"NSDictionary",C,N,V_groupDictionary
destinationPath
T@"NSString",C,N,V_destinationPath
finishedObservation
T@"<EFCancelable>",&,N,V_finishedObservation
taskAssertion
T@"MFTaskAssertion",&,N,V_taskAssertion
metadata.plist
-[MailPersistentStorage _setObject:forKey:inGroup:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MailPersistentStorage.m
GenericData
-[MailPersistentStorage _objectForKey:inGroup:]
group
FetchingData
LastAdditionalMailboxesFetch
BodyBackfillData
LastLoadOlder
OverflowData
AllSearch
SearchData
SceneRestorationDict
SceneData
saveOperationQueue
T@"NSOperationQueue",&,N,V_saveOperationQueue
com.apple.mobilemail.mailservices
com.apple.mobilemail.services.xpc
XPCConnectionErrorDomain
com.apple.mobilemail.services
MailXPCServices.m
attempt to start server mutliple times
XPCErrorDescription
v16@?0#8
reply
v28@?0B8@"NSObject<OS_xpc_object>"12@"NSError"20
multiple services attempted to register for service name '%@'
v32@?0@8#16^B24
XPC ErrorHandler
com.apple.mobilemail.services.connection.%p
com.apple.mobilemail.services.connection.message.%p
com.apple.mobilemail.services.connection
unexpected type encountered %@
serviceManager
T@"MailXPCServices",N,V_serviceManager
errorHandler
T@?,C,V_errorHandler
OPERATION_ARCHIVE_DESC
-[MCSChange applyPendingChangeToObjects:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MCSChange.m
-[MCSChange commit]
-[MCSChange revert]
-[MCSChange URLStrings]
-[MCSChange stores]
-[MCSChange accounts]
-[MCSChange localizedErrorDescription]
-[MCSChange localizedErrorTitle]
-[MCSChange localizedChangeDescription]
-[MCSChange localizedChangeDescriptionPriority]
-[MCSChange copyChangeSetForFullPath:]
-[MCSChange adjustUnreadCount:withCriterion:]
isReverseOperation
TB,N,V_isReverseOperation
messagesSet
T@"NSSet",R,N
MCSChangeSetDeletedMessages
MCSChangeSetReadMessages
MCSChangeSetUnreadMessages
MCSChangeSetFlaggedMessages
MCSChangeSetUnflaggedMessages
-[MCSDelete init]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MCSDelete.m
OPERATION_DELETE_DESC
Flags to set: %@ Flags to clear: %@
-[MCSFlagChange initWithFlagsToSet:flagsToClear:reason:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MCSFlagChange.m
[flagsToSet intersectsSet:flagsToClear] == __objc_no
-[MCSFlagChange _applyFlagChange:toObjects:]
-[MCSFlagChange commitToMessages:failures:newMessages:]
-[MCSFlagChange commitToAllMessagesInStore:]
-[MCSFlagChange revertOnMessages:failures:newMessages:]
OPERATION_FLAG_DESC
%p Mark as Junk
OPERATION_JUNK_DESC
OPERATION_NOT_JUNK_DESC
-[MCSMessageOperation commitToMessages:failures:newMessages:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MCSMessageOperation.m
-[MCSMessageOperation revertOnMessages:failures:newMessages:]
-[MCSMessageOperation isRevertibleWithMessages:]
-[MCSMessageOperation willMarkRead]
-[MCSMessageOperation willMarkUnread]
-[MCSMessageOperation willFlag]
-[MCSMessageOperation willUnflag]
-[MCSMessageOperation localizedErrorDescriptionForMessageCount:]
-[MCSMessageOperation localizedErrorTitleForMessageCount:]
-[MCSMessageOperation localizedShortOperationDescription]
-[MCSOperation applyPendingChangeToObjects:]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MCSOperation.m
-[MCSTransfer init]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MCSTransfer.m
-[MCSTransfer applyPendingChangeToObjects:]
v16@?0@"<ECMessageFlagChangeBuilder>"8
v32@?0@"MFMailMessageStore"8@"NSMutableSet"16^B24
%p Transfer to %@ (%@)
mark read
don't mark read
ERROR_TRANSFERRING_LONG_FORMAT
ERROR_TRANSFERRING_LONG_FORMAT_MANY
ERROR_TRANSFERRING_TITLE
ERROR_TRANSFERRING_TITLE_MULTIPLE
OPERATION_TRANSFER_DESC
B24@?0@"MFMailMessage"8^B16
originalLocations
T@"NSDictionary",C,N,V_originalLocations
com.apple.mobilemail.MessageAddressScannerPendingRemovalsQueue
recentsLibrary
T@"CRRecentContactsLibrary",&,N,V_recentsLibrary
MessageAddressScanner
library
T@"MFMailMessageLibrary",&,N,V_library
CRRecentsDomainMaps
CRRecentContactMetadataReferenceURL
CRRecentContactMetadataFromAddress
CRAddressKindEmail
CRRecentContactMetadataFromAddressKind
CRRecentContactMetadataFromDisplayName
CRRecentContactMetadataFrom
CRRecentContactMetadataSubject
CRRecentWeightMailReceivedTrustedAddress
CRRecentWeightMailReceivedAddress
CRAddressKindMapLocation
LogPreviewGenerationTime
v24@?0@"<MFMessageBodyElement>"8Q16
v16@?0@"<MFMessageBodyElement>"8
attachment
pkcs7-signature
MULTI_FILE
Attachments: %@
SEPARATOR
SINGLE_FILE
Attachment: %@
v24@?0@"MFMessageLoadingContextEvent"8@"NSError"16
MessageBodyLoaderQueue
v16@?0@"MFPowerController"8
==== Message Body Loader ====
  Account         : %@
  Running         : %d
  Paused          : %s
  Paused until    : %@
  Network Fetching: %@
  Client Count    : %lu
  Messages Count  : %lu
  Mailbox Quotas  : %@
  Watched Uids    : %@
  Current Monitor : %p
  Waiting for task: %d
MessageBodyLoader.m
should not try to process queues while we're running a task.
should have a current monitor at this point.
should not have a current monitor at this point.
ordering
priority
v32@?0@"<MBLSingleMessageClient>"8Q16^B24
B16@?0@"<MBLSingleMessageClient>"8
-[MessageBodyLoader _waitUntilNotRunning]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/MessageBodyLoader.m
!_waitReply
running
DisableBodyFetches
tx+rx
assertionDidExpire
resumeTime
cancelledExpiration
resumeTimeWas
com.apple.mobilemail.messagebodyloader
isPaused
T@"MailAccount",&,N,V_account
No Mailbox
com.apple.mobilemail.receievedMessagesLoadedKey
B8@?0
clients
T@"NSArray",C,N,V_clients
messages
T@"NSArray",C,N,V_messages
viewingMessages
T@"NSArray",C,N,V_viewingMessages
nextClient
T@"<MBLSingleMessageClient>",R,N,V_nextClient
nextMessage
T@"MFMailMessage",R,N,V_nextMessage
received-date
T@"NSMutableArray",C,N,V_messages
com.apple.mobilemail.messagebodyloader_job.message
message
T@"MFMailMessage",R,N,V_message
com.apple.mobilemail.messagebodyloader_job.client.%@
client
T@"<MBLSingleMessageClient>",R,N,V_client
created
numberOfFailures
failedCellularAttempts
lastStatus
messageSize
lastAttempt
numberOfFailures: %d, failedCellularAttempts: %d, lastStatus: %@, lastAttempt: %@, message size: %d bytes
T@"NSDate",R,N,V_created
Tq,N,V_numberOfFailures
Tq,N,V_failedCellularAttempts
Tq,N,V_lastStatus
T@"NSDate",&,N,V_lastAttempt
TQ,N,V_messageSize
FROM_LABEL
MailboxContentViewCellLabelToShort
MailboxContentViewCellLabelTo
MailboxContentViewCellLabelCcShort
MailboxContentViewCellLabelCc
summary
summaryLoaded
numberOfLoadAttempts
TQ,N,V_numberOfLoadAttempts
summaryPromise
T@"EFPromise",&,N,V_summaryPromise
order
Td,N,V_order
T@"NSString",R,N,V_summary
MessageToMailboxUidCache.m
messageInfo
<%@:%p> {(
: %@
MFAccountHealer.m
completed
failed
v24@?0Q8@"MFError"16
networkController
T@"MFNetworkController",R,N,V_networkController
T@"MFAccount",R,N,V_account
alternateAccount
T@"MFAccount",R,N,V_alternateAccount
T@"MFError",R,N,V_error
@24@?0@"MFAccountResultsGenerator"8@"NSString"16
MFAccountsService.m
arguments
com.apple.mobilemail.MFMailAddAccountAppShortcut
com.apple.mobilemail.NewMessageApplicationShortcut
com.apple.mobilemail.SearchApplicationShortcut
com.apple.mobilemail.FavoriteItemApplicationShortcut
MFMailFavoriteItemAppShortcutFavoriteItem
MFApplicationShortcutProvider.m
ADD_ACCOUNT_APP_SHORTCUT
Add Account
COMPOSE_APP_SHORTCUT
New Message
SEARCH_APP_SHORTCUT
Search
@"NSString"16@?0@"SBSApplicationShortcutItem"8
Name: %@ Subtitle: %@
mailboxCountObserver
T@"_ShortcutCountObserverWrapper",&,N,V_mailboxCountObserver
specialMailboxCountObserver
T@"_ShortcutCountObserverWrapper",&,N,V_specialMailboxCountObserver
T@"EDMessagePersistence",R,N,V_messagePersistence
specialMailboxFavoriteItem
T@"FavoriteItem",&,N,V_specialMailboxFavoriteItem
mailboxFavoriteItem
T@"FavoriteItem",&,N,V_mailboxFavoriteItem
Application Shortcut Count Query %@
favoriteItem
T@"FavoriteItem",R,N,V_favoriteItem
T@"EFDebouncer",&,N,V_badgeCountDebouncer
@"MailAccount"16@?0@"MFMailMessage"8
v32@?0@"MailAccount"8@"NSArray"16^B24
image/vnd.dxf
com.apple.mobileconfig
com.apple.mobileprovision
com.microsoft.excel
com.microsoft.powerpoint
com.microsoft.word
com.apple.mobilemail.DaemonAccountsProvider
accountChangeNotificationToken
Ti,N,V_accountChangeNotificationToken
MFDAutosaveQueue
@16@?0@"MFXPCClient"8
autosaveIdentifier
T@"NSString",R,C,N
v24@?0@"MFMailMessage"8@"NSError"16
MFDAutosave transaction: documentID=%@
(Autosave documentID=%@)
B16@?0@"MFDAutosaveSession"8
@16@?0@"MFMailMessage"8
autosaveScheduler
T@"<EFScheduler>",&,N,V_autosaveScheduler
activeAutosaveSessions
T@"NSHashTable",&,N,V_activeAutosaveSessions
<%@: %p, autosaveID=%@>
T@"NSString",C,N,V_autosaveIdentifier
q24@?0@"_MFDelayedNotification"8@"_MFDelayedNotification"16
com.apple.mobilemail.notificationcenter.delayedpresenter.%p
.delegate
B32@?0@"_MFDelayedNotification"8Q16^B24
', '
B16@?0@"_MFDelayedNotification"8
identifier
T@"<MFDelayedNotificationsPresenterDelegate>",W,N,V_delegate
postingDelay
notificationMessage
T@"MFNotificationMessage",&,N,V_notificationMessage
T@"NSString",C,N,V_identifier
submissionDate
Td,N,V_submissionDate
context
T@,&,N,V_context
MFDeliveryQueueProcessingStartedNotification
MFDeliveryQueueProcessingFinishedNotification
MFDeliveryQueueDeliverSynchronouslyStartNotification
MFDeliveryQueueDeliverSynchronouslyFinishNotification
MFDeliveryQueueMonitorKey
MFDeliveryQueueMailboxKey
com.apple.message.delivery
playSound: %d, forceAll: %d, isUserRequested: %d
playSound
TB,N,V_playSound
forceAll
TB,N,V_forceAll
MFDeliveryQueue.m
App is in daemon mode, but accessing database
com.apple.mobilemail.delivery
com.apple.email.MFDeliveryQueue.ObservationScheduler
v24@?0Q8@"NSError"16
v16@?0q8
FAILED_SEND
Delayed
FAILED_SEND_TITLE
Cannot Send Mail
MailAppController
GENERIC_DELIVERY_ERROR_MESSAGE
sent
@"EFPair"16@?0@"MFLibraryMessage"8
q24@?0@"EFPair"8@"EFPair"16
@"MFLibraryMessage"16@?0@"EFPair"8
status
DELIVER
MF_SENDING_FORMAT
Sending %@ of %@
MF_FAILED_SEND_INACTIVE_ACCOUNT
This account is inactive. Check the settings in Settings > Accounts & Passwords.
%s can only be called from unit tests
-[MFDeliveryQueue test_waitForObservers]
<%@: %p>
==== Outbox ====
  state: %@
==== Pending Messages (Sorted by Size) ====
%@ -- %@
@"NSString"16@?0@"MFLibraryMessage"8
T@"EDMessagePersistence",R,N
observationScheduler
T@"<EFScheduler>",&,N,V_observationScheduler
observers
T@"NSHashTable",R,N,V_observers
deliveryHookResponder
T@"<EDMessageDeliveryHookResponder>",R
MFDeliveryQueueStateReady
MFDeliveryQueueStateProcessing
MFDeliveryQueueStateSuspended
MSAttachmentRequest
MSAttachmentRequestKeyOperation
MSAttachmentRequestKeyURL
MSAttachmentRequestKeyNameType
MSAttachmentRequestKeySizeType
MSAttachmentRequestKeyMimeType
MSAttachmentRequestKeyContentID
MSAttachmentResponse
MSAttachmentResponseKeyError
MSAttachmentResponseKeyData
savedHeaders
T@"MFMessageHeaders",&,N,V_savedHeaders
%@%@
v16@?0@"MFOutgoingMessage"8
MFDeliveryService.m
args
v24@?0@"MFMailMessage"8@"_MFMailCompositionContext"16
UniqueID
argName
argURL
_saveMailMessage
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/maild/Legacy XPC Services/Services/MFDeliveryService.m
mailMessage != nil
account != nil
x-last-saved-message
_sendMailMessage
x-last-sent-message
MFDiskFreeSpaceMonitorDidChangeNotification
com.apple.mobilemail.diskCacheMonitor.freeSpaceStatusQueue
com.apple.mobilemail.diskCacheMonitor.freeSpaceStatusLock
SimulateCriticalFreeSpaceStatus
freeSpaceStatus
TQ,R,N
isFreeSpaceCritical
hasAdequateFreeSpace
TQ,N,V_freeSpaceStatus
MFDFetch was dealloced before request completed.
MFDFetch.m
(mailbox == nil) == (completion == nil)
Cannot manage more than one fetch at a time.
v12@?0I8
@"PBCodable"8@?0
MFFileSystemTotalSize
MFFileSystemFreeSize
MFMailTotalCacheSize
MFMailHeaderCacheSize
MFMailMessageCacheSize
MFMailAttachmentCacheSize
MFDiskCacheUtilities.m
block
/Attachments
/Messages
handler
@"NSArray"16@?0@"MailAccount"8
@16@?0@"MFMailboxUid"8
v32@?0@"NSString"8@"NSDictionary"16^B24
fileHandler
/Attachments/
/Messages/
v40@?0@"NSFileManager"8@"NSString"16@"NSDictionary"24^B32
MFDMessageBodyLoader.m
Could not load %lu of %lu messages from network
No matching message found in library
-[MFDSearch init]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/maild/Legacy XPC Services/Modern Services/MFDSearch.m
-[MFDSearch initWithRemoteObjectInterface:]
MFDSearch.m
attempt to start a search without setting criteria
MailServices Search
 with error: 
criteria
T@"MFMessageCriterion",&,N,V_criteria
options
TQ,N,V_options
keys
T@"NSArray",C,N,V_keys
resultsQueue
T@"_MFDSearchResultsQueue",&,N,V_resultsQueue
searchPromise
T@"EFPromise",&,N,V_searchPromise
searchProgress
T@"NSProgress",&,N,V_searchProgress
com.apple.mobilemail.search.results
%llu
priv_totalMessageCount
priv_recentInteractionDate
%@://%@
B32@?0@"NSDictionary"8Q16^B24
@"NSMutableDictionary"16@?0@"NSString"8
v24@?0@"MFLibraryMessage"8^B16
q24@?0@"NSDictionary"8@"NSDictionary"16
MFVIPServicesError
Data protection not available
q24@?0@"MFMailboxUid"8@"MFMailboxUid"16
com.apple.mobilemail.fetchProcessor.state
v16@?0@"<MFActivityConditionBuilder>"8
com.apple.mobilemail.fetch.powernap
com.apple.mobilemail.fetch.intelligentBackgroundFetch
v16@?0@"NSNumber"8
B24@?0@"MFMailboxUid"8^B16
condition
T@"<MFActivityCondition>",&,N,V_condition
T@"NSString",R,N,V_name
accounts
T@"NSSet",C,N,V_accounts
accountMailboxesBatchSize
Tq,N,V_accountMailboxesBatchSize
lastFetchDateCutoff
Tq,N,V_lastFetchDateCutoff
loadMessageBodies
TB,N,V_loadMessageBodies
includePushedMailboxes
TB,N,V_includePushedMailboxes
includeFavoritesMailboxes
TB,N,V_includeFavoritesMailboxes
useMailboxFrecencyRanking
TB,N,V_useMailboxFrecencyRanking
maximumMailboxesToFetch
TQ,N,V_maximumMailboxesToFetch
numberOfMailboxesFetched
excludedMailboxTypes
T@"NSArray",C,N,V_excludedMailboxTypes
MFKeyValueStoreService.m
SignatureKey
UseAccountSignatures
MFLibraryCompressorDefaultsUpgradeStateKey
com_apple_mail_mailboxDirectoryCompressed
mailboxUIDs
T@"NSArray",R,N,V_mailboxUIDs
libraryCompressionActivity
T@"NSObject<OS_os_activity>",&,N,V_libraryCompressionActivity
%lld
NNMKMessage
com.apple.mobilemail.ListUnsubscribeScheduler
outgoingMessageRepository
T@"EDOutgoingMessageRepository",R,N,V_outgoingMessageRepository
detector
T@"EMListUnsubscribeDetector",R,N,V_detector
T@"<EFScheduler>",R,N,V_scheduler
MailAccountsOrder
@16@?0@"<EDAccount>"8
emailAddressStrings
T@"NSArray",R,C,N
hostname
T@"NSString",C,N
password
systemAccount
T@"ACAccount",R,N
statisticsKind
primaryiCloudAccount
isManaged
sourceIsManaged
emailAddresses
smtpIdentifier
isLocalAccount
shouldArchiveByDefault
v32@?0@"MailAccount"8Q16^B24
MFMailAccountsProvider.m
changeBlock
mailAccounts
orderedAccounts
displayedAccounts
T@"NSSet",R,C,N
autofetchAccounts
displayingMultipleAccounts
TB,R,N,GisDisplayingMultipleAccounts
receivingAddresses
T@"NSArray",C,N,V_mailAccounts
T@"NSSet",C,N,V_displayedAccounts
T@"NSArray",C,N,V_orderedAccounts
numberOfActiveAccounts
TQ,N,V_numberOfActiveAccounts
numberOfInactiveAccounts
TQ,N,V_numberOfInactiveAccounts
TQ,R,N,V_numberOfActiveAccounts
TQ,R,N,V_numberOfInactiveAccounts
displayedAccountsIdentifiers
T@"NSSet",R,C,N,V_displayedAccountsIdentifiers
T@"NSArray",R,C,N,V_mailAccounts
messagesAccumulator
T@"NSMutableArray",&,N,V_messagesAccumulator
batchSize
TQ,N,V_batchSize
messageStore
T@"MFMessageStore",&,N,V_messageStore
filter
T@?,C,N,V_filter
future
T@"EFFuture",R,N
MFMailboxMessageBodyProcessor.m
B16@?0@"MFLibraryMessage"8
v32@?0@"MFLibraryMessage"8Q16^B24
messageBodyLoader
T@"<MessageBodyLoader>",R,N,V_messageBodyLoader
T@"MFMailMessageLibrary",R,N
T@"<MFMailboxMessageBodyProcessorDelegate>",W,N,V_delegate
T@"MFMailboxUid",R,N,V_mailbox
deviceStorage
T@"<MFDeviceStorage>",R,N,V_deviceStorage
TQ,R,N,V_batchSize
@24@?0@"MFMailboxResultsGenerator"8@"NSString"16
mailboxUid
T@"MFMailboxUid",&,N,V_mailboxUid
pushedMailboxUids
T@"NSSet",&,N,V_pushedMailboxUids
%@/%@
nano_mailboxId
nano_mailboxType
nano_displayName
nano_mailbox
T@"NNMKMailbox",R,N
NNMKMailbox
MFMailPurgeableStorageDidPurgeSpace
v16@?0@"NSURL"8
previousPurgeTime
Td,N,V_previousPurgeTime
previousUrgency
Ti,N,V_previousUrgency
serviceName
T^{__CFString=},R,N,V_serviceName
com_apple_mail_markedPurgeable
activity
T@"NSObject<OS_os_activity>",&,N,V_activity
com.apple.mobilemail.body.powernap
T@"NSString",R,C,N,V_name
T@"<MFAccountsProvider>",R,N,V_accountsProvider
T@"<MFActivityCondition>",R,N,V_condition
persistentStorage
T@"MailPersistentStorage",R,N
loggingActivity
T@"NSObject<OS_os_activity>",R,N,V_loggingActivity
mailboxMessagesBatchSize
Tq,N,V_mailboxMessagesBatchSize
stopDate
T@"NSDate",W,N,V_stopDate
/%lu
storage
T@"NSMapTable",R,N,V_storage
x-apple-msg-load-wk2
v16@?0@"NSCachedURLResponse"8
text/html
v16@?0@"NSString"8
ShowAttachmentMarkup
NO_BODY
registry
T@"_MFMessageContentURLProtocolRegistry",&,N
scheme
T@"NSString",R
token
T@"EFCancelationToken",R,V_token
loadingContext
T@"MFMessageLoadingContext",R,V_loadingContext
promise
T@"EFPromise",&,N,V_promise
@"MFMessageCriterion"16@?0@"NSString"8
@"MFMessageCriterion"16@?0@"MFMessageCriterion"8
@24@?0@"MFMessageResultsGenerator"8@"NSString"16
com.apple.mobilemail.context.flagged
com.apple.mobilemail.context.toMe
com.apple.mobilemail.context.hasAttachments
B24@?0@"NSString"8@"MFAttachment"16
mimeType
utiType
%@\[(%@)=([a-zA-Z0-9.-/]+)\]
v32@?0@"NSTextCheckingResult"8Q16^B24
attachmentManager
T@"MFAttachmentManager",&,N,V_attachmentManager
T@"MFLibraryMessage",&,N,V_message
MFMessageRuleLibraryHook.m
messageChangeManager
[messages.firstObject isKindOfClass:MFLibraryMessage.class]
rules
T@"NSArray",&,N,V_rules
T@"EDMessageChangeManager",&,N,V_messageChangeManager
-[MFMutedThreadMessageRule shouldIncludeInNewMessagesSet]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/maild/Rules/MFMutedThreadMessageRule.m
-[MFMutedThreadMessageRule performOperationOnMessages:withMessageChangeManager:]
watchedMailboxes
MFNanoServerWatchedMailboxesDidChange
@"NNMKMailbox"16@?0@"MFMailboxUid"8
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
syncProvider
T@"NNMKSyncProvider",&,N,V_syncProvider
activeAccounts
NanoMailOrganizeByThreadKey
NNMKMailboxSelection
kNSCodingKeyType
kNSCodingKeyAccount
kNSCodingKeyURL
supportsSecureCoding
ALL_INBOXES
Ti,R,N,V_type
FLAGGED
UNREAD
TO_OR_CC
IMPORTANT_THREADS
TODAY
UIImageNameStandaloneIndicatorDot
TQ,R,N,V_type
accountUniqueIdentifier
T@"NSString",R,N,V_accountUniqueIdentifier
mailboxURL
T@"NSURL",R,N,V_mailboxURL
mailboxId
Tq,R,N
BPSBridgeTintColor
/System/Library/PrivateFrameworks/BridgePreferences.framework/BridgePreferences
### Failed to Soft Linked: /System/Library/PrivateFrameworks/BridgePreferences.framework/BridgePreferences
com.apple.NanoMail
kIncludeMailBoxesKey
kStandaloneAccountStateByAccountIdKey
kAccountIdentitiesKey
NanoMailIncludeMail
MFNanoAccountIdentityAvailableDarwinNotification
MFNanoWatchAccountStatusChanged
MFNanoWatchAuthenticationFailedDarwinNotification
MFNanoWatchAuthenticationFailedAccountIdDarwinNotificationUserInfoKey
NanoMailKit
mirrorSettingsFromCompanion
includeMailMailboxes
T@"NSArray",&,N
standaloneAccountStateByAccountId
T@"NSDictionary",&,N
linesOfPreview
TQ,N
askBeforeDeleting
TB,N
loadRemoteImages
organizeByThread
swipeRightAction
T@"NSString",&,N
signature
accountIdentities
T@"NSArray",R,C,N,V_activeAccounts
Mailbox Selection: 
Selected mailboxes id: %@
Unified mailbox selected 
VIP mailbox selected 
Unread mailbox selected 
Flagged mailbox selected 
ToOrCC mailbox selected 
Important Threads mailbox selected 
Today mailbox selected 
inboxesFilterTypes
TQ,N,V_inboxesFilterTypes
selectedMailboxes
T@"NSSet",&,N,V_selectedMailboxes
NPSManager
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
### Failed to Soft Linked: /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
NNMKAccountIdentity
NanoMailLinesOfPreviewKey
NanoMailDefaultLinesOfPreview
NanoMailAskBeforeDeletingKey
NanoMailDefaultAskBeforeDeleting
NanoMailLoadRemoteImagesKey
NanoMailDefaultLoadRemoteImages
NanoMailDefaultOrganizeByThread
NanoMailSwipeRightActionKey
NanoMailDefaultSwipeRightAction
NanoMailSignatureKey
NNMKSyncProvider
NanoMailDefaultSignatureLocalizationKey
NPSDomainAccessor
MFNanoServerRequestWatchAccountReauthenticationNotification
com.apple.MobileMail.NanoServer
com.apple.email.NanoServer
@"NSArray"8@?0
v20@?0@"NSArray"8B16
oldFlagsByMessage
@"NSString"16@?0@"MFMessageDetails"8
v20@?0@"NSDictionary"8B16
@16@?0@"NNMKMessage"8
@"NNMKMessage"16@?0@"MFLibraryMessage"8
@16@?0@"NNMKMailbox"8
NNMKVIPSender
com.apple.mobileMail.nanoServerFullMessageLoader
com.apple.MobileMail.NanoServerFullMessageLoader
v32@?0@"MFLibraryMessage"8@"MFMessageHeaders"16^B24
requests
T@"NSMutableArray",&,N,V_requests
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
privateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_privateQueue
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
networkObserverId
T@,&,N,V_networkObserverId
isProtectedDataAvailable
TB,N,V_isProtectedDataAvailable
isNetworkUp
TB,N,V_isNetworkUp
failedMessageIdsByRequest
T@"NSMutableDictionary",&,N,V_failedMessageIdsByRequest
isRetryScheduled
TB,N,V_isRetryScheduled
currentBackoff
Td,N,V_currentBackoff
outstandingMessageIdRequests
T@"NSMutableOrderedSet",&,N,V_outstandingMessageIdRequests
pendingMessageIdRequests
T@"NSMutableSet",&,N,V_pendingMessageIdRequests
resultedMessagesById
T@"NSMutableDictionary",&,N,V_resultedMessagesById
resultIncludesProtectedMessages
TB,N,V_resultIncludesProtectedMessages
completionBlock
T@?,C,N,V_completionBlock
com.apple.MFNanoServerMessageContentLoader.database
com.apple.MFNanoServerMessageContentLoader.parsing
com.apple.MFNanoServerMessageContentLoader.attachments
v40@?0@"NNMKMessageContent"8@"MFMimeBody"16@"NSSet"24@"NSDictionary"32
NanoServer
downloadedImageSize
messageId
T@"NSString",R,N,V_messageId
highPriority
TB,N,V_highPriority
NNMKContentAttributedStringHTMLParser
NNMKImageAttachment
NNMKAttachment
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
NanoContent has nil messageId (hasLoadedCompleteBody). (MessageID: %@, ExternalID: %@)
NanoContent has nil messageId. (MessageID: %@, ExternalID: %@)
multipart
alternative
NNMKHTMLParserMaxContentTextLength
NNMKHTMLParserMaxImageAttachmentsToSync
NNMKMessageContent
beforeDateReceived
T@"NSDate",&,N,V_beforeDateReceived
count
TQ,N,V_count
conversationId
T@"NSString",&,N,V_conversationId
dateReceivedLimit
T@"NSDate",&,N,V_dateReceivedLimit
TB,N,V_protectedDataAvailable
com.apple.MFNanoServerMessageSender
%@<br/><br/>%@
%@://%lld
v20@?0@"MFLibraryMessage"8B16
compositionContextID
T@"NSString",&,N,V_compositionContextID
com.apple.MFNanoServerMessageUpdater
deliveryQueue
T@"MFDeliveryQueue",&,N,V_deliveryQueue
autofetchController
T@"<AutoFetchController>",&,N,V_autofetchController
T@"MFNetworkController",&,N,V_networkController
T@"<MFNetworkActivityManagerDelegate>",&,N,V_delegate
NO_SUBJECT
NO_FROM
%@ - %@
notificationID %@, Account:%@, Topics:%@
ef_publicDescription
favoritesReader
T@"<MFFavoritesReader>",&,N,V_favoritesReader
vipReader
T@"<EMVIPReader>",&,N,V_vipReader
T@"MFMailboxUid",&,N,V_mailbox
subject
T@"NSString",C,N,V_subject
senderCommentedAddress
T@"NSString",R,C,N,V_senderCommentedAddress
contactStore
T@"CNContactStore",&,N,V_contactStore
senderFullAddress
T@"NSString",C,N,V_senderFullAddress
title
T@"NSString",C,N,V_title
libraryMessage
T@"MFLibraryMessage",R,N,V_libraryMessage
dateReceived
T@"NSDate",R,N,V_dateReceived
notificationID
coalesceThreadID
subtitle
T@"NSString",R,C,N,V_subtitle
topicIdentifiers
T@"NSString",R,C,N,V_summary
senderAddress
T@"NSString",R,C,N,V_senderAddress
suppressionContexts
T@"NSSet",R,C,N,V_suppressionContexts
accountID
T@"NSString",R,C,N,V_accountID
messageReference
nanoMessageId
T@"NSString",R,C,N,V_nanoMessageId
Ti,R,N,V_mailboxType
isVIP
TB,R,N,V_isVIP
isFavoriteMailbox
TB,R,N,V_isFavoriteMailbox
isNotifiedThread
MFPushRegistrationService.m
transformer
T@"MFMailMessageLibraryQueryTransformer",R,N,V_transformer
searchManager
T@"SearchManager",R,N,V_searchManager
com.apple.mail.TrashCompactor.scheduler
emptiedTrashTimestamps
T@"NSMutableDictionary",&,N,V_emptiedTrashTimestamps
mail-message
com.apple.mail.UserNotificationCenter
@"NSDictionary"16@?0@"MFLibraryMessage"8
@"NSString"16@?0@"MailAccount"8
@"NSString"16@?0@"UNNotification"8
modify
@"NSString"16@?0@"MFNotificationMessage"8
LOADING_SUMMARY
Loading
NO_SUMMARY
This message has no content.
v16@?0@"NSMutableSet"8
@"UNNotificationTopicRequest"16@?0@"MailAccount"8
VIP_SECTION_DISPLAY_NAME
MailNotifications
FAVORITE_MAILBOXES_SECTION_DISPLAY_NAME
Favorite Mailboxes
favorites
THREADS_SECTION_DISPLAY_NAME
Thread
@"MFNotificationMessage"16@?0@"MFLibraryMessage"8
Handle Notification Action Transaction
B16@?0@"UNNotification"8
v16@?0@"NSMapTable"8
Retrying summary loads
@16@?0@"UNNotification"8
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"<EMVIPReader>",R,N,V_vipReader
notificationFilter
T@"EDUserNotificationFilter",R,N,V_notificationFilter
mailboxCutoffController
T@"EDUserNotificationMailboxCutoffController",R,N,V_mailboxCutoffController
resultsGenerator
T@"MFMessageResultsGenerator",&,N,V_resultsGenerator
summaryClientsLock
T@"NSLock",&,N,V_summaryClientsLock
systemUserNotificationCenter
T@"<MFSystemUserNotificationCenter>",&,N,V_systemUserNotificationCenter
upgrader
T@"MFUserNotificationCenterUpgrader",&,N,V_upgrader
observer
T@"MFUserNotificationCenterObserver",&,N,V_observer
soundController
T@"MFUserNotificationSoundController",&,N,V_soundController
summaryClientsByReference
T@"EFLocked",&,N,V_summaryClientsByReference
hasVIPs
TB,N,V_hasVIPs
hasThreads
TB,N,V_hasThreads
delayedNotificationPresenter
T@"MFDelayedNotificationPresenter",&,N,V_delayedNotificationPresenter
settingsObservers
T@"NSMutableArray",R,N,V_settingsObservers
currentSettingsByTopic
T@"NSDictionary",R,N,V_currentSettingsByTopic
notificationsNeedingSummaries
T@"EFLocked",&,N,V_notificationsNeedingSummaries
T@"MFNanoServer",&,N,V_nanoServer
<%@: %p :: message=%@>
MFUserNotificationCenterController.m
Invalid message
T@"MFUserNotificationCenterController",&,N,V_observer
com.apple.mail.UserNotificationCenter.Observer
T@"<MFFavoritesReader>",R,N,V_favoritesReader
observedAccountIDs
T@"NSMutableSet",&,N,V_observedAccountIDs
observedStoresByAccountID
T@"NSMutableDictionary",&,N,V_observedStoresByAccountID
T@"<MFUserNotificationCenterObserverDelegate>",W,N,V_delegate
MFUserNotificationCenterUpgraderDefaultStatus
MFMailDismissedBulletins
MFMailBulletinClearedDateRangesKey
MFMailBulletinLastAllClearedKey
com.apple.email.MFUserNotificationCenterUpgrader
@"UNNotificationRequest"16@?0@"MFNotificationMessage"8
@"NSArray"16@?0@"MFMessageCriterion"8
@"MFMessageCriterion"20@?0@"MailAccount"8B16
@"MFMessageCriterion"16@?0@"MailAccount"8
@"MFMessageCriterion"16@?0@"NSArray"8
T@"<MFUserNotificationCenterUpgraderDelegate>",W,N,V_delegate
T@"NSArray",R,N,V_activeAccounts
T@"<EFAssertableScheduler>",R,N,V_scheduler
<%@: %p> %@, %@, %llu
notification expected from fetch
no notification expected from fetch
currentAccountIDOfSoundToPlay
T@"NSString",C,N,V_currentAccountIDOfSoundToPlay
loudestState
TQ,N,V_loudestState
notificationExpectedFromFetch
TB,N,V_notificationExpectedFromFetch
fetchStart
TQ,N,V_fetchStart
Will not play sound for upcoming notification. Timed out resolving sound for notification %@ autoFetchData=%@
timed out
processing auto-fetch
T@"MFUserNotificationCenterObserver",R,N,V_observer
soundsToPlay
T@"NSMutableArray",R,N,V_soundsToPlay
autoFetchData
T@"_MFMailNotificationSoundControllerAutoFetchData",&,V_autoFetchData
autoFetchPushCount
TQ,V_autoFetchPushCount
soundsToPlayWaitTimeoutTS
TQ,V_soundsToPlayWaitTimeoutTS
pushFetchTimestamps
T@"NSMutableArray",&,N,V_pushFetchTimestamps
com.apple.mail.stakeholder-initialization
com.apple.mailq.sync.xpc
MFUserSyncStakeholder.m
task already exists!
mail delivery
client requested
-[MFUserSyncStakeholder uploadContent]
willSwitchUser
com.apple.mail.stakeholder-processing
set-initial-vip-flags
to-add
to-remove
MFVIPSendersLibrary.m
com.apple.mobilemail.vipaddressbook
com.apple.mobilemail.vipsenders.pendingaddresses
[message isKindOfClass:MFMailMessage.class]
PendingVIPChanges
ToCcMigrationCompleted
MaxRowIdForMigrationToVersion31
userProfileProvider
T@"<EMUserProfileProvider>",R,N
vipManager
T@"VIPManager",R,N,V_vipManager
<%@: %p> / <%@: %p> connection from pid %d
connection
T@"NSXPCConnection",R,W,N
T@?,C,N,V_invalidationHandler
interruptionHandler
T@?,C,N,V_interruptionHandler
B16@?0@"MFXPCClient"8
exportedInterface
T@"NSXPCInterface",R,N,V_exportedInterface
remoteObjectInterface
T@"NSXPCInterface",R,N,V_remoteObjectInterface
shouldAcceptClient
T@?,R,C,N,V_shouldAcceptClient
exportedObjectForClient
T@?,R,C,N,V_exportedObjectForClient
<%@: %p> %@ - %ld clients
listener
T@"NSXPCListener",&,N,V_listener
T@"MFXPCClient",&,N,V_client
T@"NSXPCConnection",&,N,V_connection
xpc-endpoint
protocol
endpoint
<%@: %p> 
%ld active listeners: {
no active listeners
==== XPC Endpoint Service ====
  self: %p
  endpoints: 
@16@?0@"MFXPCEndpointInfo"8
%@ - <%@: %p> %ld clients %@
%@ - no active listener
%ld exported {
none
+[MFXPCServer exportedInterface]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/maild/Legacy XPC Services/Infrastructure/MFXPCServer.m
-[MFXPCServer init]
-[MFXPCServer initWithRemoteObjectInterface:]
fullUserName
username
emailAddressAndAliases
fromEmailAddresses
fromEmailAddressesIncludingDisabled
isDefaultSendingAccount
isActive
defaultAddress
restrictsRepliesAndForwards
sendingRestricted
restrictedRecentsSyncing
supportsMailDrop
canFetch
pcStyle
restrictedMailDrop
supportsThreadOperations
syncsReadState
relativePath
level
pushState
MSResultsKeyBodySummary
MSResultsKeySubject
MSResultsKeySender
MSResultsKeyRecipientTo
MSResultsKeyRecipientCc
MSResultsKeyRecipientBcc
MSResultsKeyMessageReference
MSResultsKeyMessageIDHash
MSResultsKeyConversationReference
MSResultsKeyAccountReference
MSResultsKeyMailboxURL
MSResultsKeyDateSent
MSResultsKeyDateReceived
MSResultsKeyStatus
MSResultsKeyOutgoing
MSResultsKeyRecievingAddresses
MSResultsKeyIsLocalDraft
MSResultsKeyLocalMessageReference
MSResultsKeyPublisherBulletinID
MSResultsKeyRFC822Data
MSResultsKeySuppressionContexts
MSResultsKeyBestAlternativePart
MSResultsKeyHeaderData
_MSResultsKeyPredictiveModelSummary
_MSResultsKeyLibraryID
_MSResultsKeyMailboxType
data
MSResultsKeyAttachments
SBSSetStatusBarShowsActivityForApplication
/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
### Failed to Soft Linked: /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
<html dir=auto><body><i><font color=#888>%@</font></i></body></html>
MESSAGE_CAUSED_PROBLEM
MESSAGE_UNAVAILABLE
%@://conversation/%lld
document
uuid
conversation
mf_isInternallyHandleable
com.apple.MobileMail.OutgoingMessageRepository_iOS.observationScheduler
does not have
T@"<EFScheduler>",R,N,V_observationScheduler
T@"NSMutableDictionary",&,N,V_observers
pendingMessages
TQ,N,V_pendingMessages
RemoteSearchKey
[%@-%@]
com.apple.mobilemail.remotesearchcoordinator.workqueue
cancelled after finishing
finished
T@"MailAccount",R,N,V_account
searchContext
T@"SourceSearchContext",R,N,V_searchContext
logPrefix
T@"NSString",R,C,N,V_logPrefix
progress
T@"NSProgress",R,N,V_progress
workQueue
T@"NSOperationQueue",R,N,V_workQueue
foundResults
TB,V_foundResults
cancelled
TB,N,V_cancelled
nextSearchableSource
T@?,C,N,V_nextSearchableSource
foundMessages
T@?,C,N,V_foundMessages
stopEarly
T@?,C,N,V_stopEarly
finishedSearchingSource
T@?,C,N,V_finishedSearchingSource
v32@?0@"MFMailboxUid"8@"NSSet"16^B24
source
T@"<MiniMallSource>",R,N,V_source
T@"<RemoteSearchOperationDelegate>",R,W,N,V_delegate
#search-manager
SearchManagerDidTimeoutKey
SearchManagerDidStopSearchingEarlyKey
%@.%p
-[SearchOperation progress]
/Library/Caches/com.apple.xbs/Sources/Mail_Sim/Mail-3654.20.0.1.22/MobileMail/SearchManager.m
T@"NSProgress",R
manager
T@"SearchManager",W,V_manager
T@"NSNumber",&,V_identifier
sourcesCriterion
T@"MFMessageCriterion",R,N,V_sourcesCriterion
T@"SourceSearchContext",R,C,N,V_searchContext
serverSearchContext
T@"SourceSearchContext",R,C,N,V_serverSearchContext
sources
T@"NSArray",R,C,N,V_sources
v32@?0@"NSString"8@"RemoteSearchCoordinator"16^B24
SearchManager.m
Need accountID for source
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"NSArray"8
v16@?0@"<MiniMallSource>"8
@"<MiniMallSource>"8@?0
#search-results-verifier
%@ verifySkeletonMessage:%@, verifyIndexedBySpotlight:%@
B16@?0@"MFMessageCriterion"8
verifySkeletonMessage
TB,N,V_verifySkeletonMessage
verifyIndexedBySpotlight
TB,N,V_verifyIndexedBySpotlight
T@"MFMessageCriterion",&,N,V_criterion
MailDefaultsChangedNotification
LinesOfPreview
ShowMessageDeleteConfirmation
DisableThreading
LeftEdgeSwipeAction
SwipeActionNone
SwipeActionRead
SwipeActionFlag
SwipeActionMove
SwipeActionArchive
SwipeActionTrash
SwipeActionAlternateDestructiveAction
MailApplicationDidChangePreviewLinesNotification
MailApplicationDidChangeSwipeActions
MailApplicationDidChangeAccounts
MailApplicationAutoFetchStart
MailApplicationAutoFetchStop
identifiersOfPreviouslyDisplayedAccounts
identifiersOfDisplayedAccounts
<%@: %p> %@
searchText
T@"NSString",C,N,V_searchText
searchTerms
T@"NSArray",C,N,V_searchTerms
shouldStopSearching
T@?,C,N,V_shouldStopSearching
shouldSearchAllMail
TB,N,V_shouldSearchAllMail
shouldSkipLocalSearch
TB,N,V_shouldSkipLocalSearch
shouldSkipRemoteSearch
TB,N,V_shouldSkipRemoteSearch
shouldSuppressErrors
TB,N,V_shouldSuppressErrors
timeoutDelay
Td,N,V_timeoutDelay
currentMailboxes
T@"NSSet",C,N,V_currentMailboxes
offset
T@"NSDate",&,N,V_offset
T@"<EDRemoteSearchDelegate>",W,N,V_delegate
T@"EFQuery",C,N,V_query
referencedMailboxes
referencedConversations
T@"EFMutableInt64Set",R,C,N
T@"NSString",C,D,N
T@"NSArray",C,D,N
T@"MFMessageCriterion",&,D,N
T@?,C,D,N
Td,D,N
T@"<EDRemoteSearchDelegate>",W,D,N
T@"EFQuery",C,D,N
T@"NSSet",C,D,N
T@"NSDate",&,D,N
com.apple.mobilemail.%@.%p
.suggestions
@16@?0@"SGMailMessageKey"8
@"<NSCopying>"16@?0@"SGMailMessageKey"8
(NOT A CRASH) see <rdar://problem/26633447> : MessageID should be a string, but is %@
unconfirmedLostMessages
T@"NSArray",&,N,V_unconfirmedLostMessages
lastUnconfirmedLostMessagesSearchTime
Td,N,V_lastUnconfirmedLostMessagesSearchTime
com.apple.suggestions.fulldownloadrequested
mailIncreasedContrastRed
mailLightGrayColor
mailDarkGrayColor
mailMoreButtonGrayColor
mailSystemLightGrayColor
mailSystemUltraLightGrayColor
@"UIColor"16@?0@"UITraitCollection"8
mailSelectedCellSystemLightGrayColor
mailSelectedCellSystemUltraLightGrayColor
mailChevronBoxColor
mailExpandedChevronBoxColor
mailHighlightedChevronBoxColor
mailSortOfNavBarBackgroundColor
mailVibrantDarkColor
mailVibrantLightColor
mailAccountCellTitleColor
mailGrabberColor
mailPreviousDraftPickerHeaderTextColor
mailConversationViewCellBackgroundColor
mailConversationViewCollapsedCellLabelColor
mailMessageListPrimarySelectionColor
mailMessageListSecondarySelectionColor
mailMessageListTertiarySelectionColor
mailFlaggedColor
T@"UIColor",R
mailFlaggedColorRed
mailFlaggedColorIncreasedContrastRed
mailFlaggedColorOrange
mailFlaggedColorYellow
mailFlaggedColorGreen
mailFlaggedColorTeal
mailFlaggedColorIndigo
mailFlaggedColorGray
mailDestructiveActionColor
mailArchiveActionColor
mailTransparentLightGrayColor
mailAppBackgroundColor
mailSecondaryLabelDarkColor
mailSelectedCellColor
mailSplitViewBorderColor
mailConversationViewBackgroundColor
mailTransferConversationViewBackgroundColor
mailConversationViewNoSelectedMessageViewBackgroundColor
mailHeaderSeparatorLayerColor
mailConversationViewExpandedCellBackgroundColor
mailConversationViewCollapsedCellBackgroundColor
mailConversationViewCollapsedCellHighlightedBackgroundColor
mailMessageListSelectedSummaryColor
mailMessageListSelectedAnnotationColor
mailMessageListSelectedStatusIndicatorColor
mailMessageListSelectedRecipientColor
mailTodayFilterColor
mailAttachmentsFilterColor
mailVIPFilterColor
mailDockViewLightBackgroundColor
mailDockViewDarkBackgroundColor
mailDockedPlaceholderViewBackgroundColor
mailDockViewShadowGradientColors
T@"NSArray",R
mailDockViewShadowGradientColorLocations
mailTiltedTabCloseButtonTintColor
mailExpandedConversationViewCellDateLabelColor
mailTransferStackViewBackgroundColor
mailSplitViewBackgroundColor
VIPManager.m
+setBackingManager: must be called before attempting to get the default instance
q24@?0@"EMVIP"8@"EMVIP"16
allVIPs
allVIPEmailAddresses
T@"EAEmailAddressSet",R,C,N
defaultInstanceLock
T^{os_unfair_lock_s=I},R
defaultInstance
T@"VIPManager",R,N
backingManager
T@"<EMVIPManager>",R,N,V_backingManager
_MFResultsGenerator
AppBadgeController
EMMessageRepositoryCountQueryObserver_xpc
NSObject
EMMailboxChangeObserver
EFLoggable
MFUserNotificationCenterSettingsObserver
AutoFetchCreateJobListPrivate
AutoFetchRequestPrivate
MSFetchMetricsControllerDataSource
AFCVisibleMailboxFetch
AutoFetchHistoryEntry
AutoFetchController
MFDiagnosticsGenerator
EFSignpostable
_MaildTerminator
LSApplicationWorkspaceObserverProtocol
LSAppRemovalServiceProtocol
DaemonAppController
MFUserAgent
MFMessageSummaryLoaderProvider
MFNetworkActivityManagerDelegate
EFContentProtectionObserver
MFPowerObserver
DaemonFetchController
FetchXPCActivitySchedulerDelegate
AutoFetchControllerDataSource
DaemonInterfaceFactory
DaemonSnapshotInvalidator
DaemonSnapshotInvalidationHandler
EDAccountChangeHookResponder
FavoriteItem
FavoriteItem_Account
FavoriteItem_Mailbox
FavoriteItem_Inbox
FavoriteItem_UnifiedMailbox
FavoriteItem_SharedMailbox
FavoriteItem_VIPMailbox
SharedItem_Outbox
FavoritesCollection
FavoritesCollectionState
FavoritesPersistence
EMMessageRepositoryCountQueryObserver
MailboxUtilsClient
MFFavoritesReader
FetchXPCActivityScheduler
GenericSource
MiniMallSource
NSCopying
NanoMail
MailboxFrecencyController
MailboxHierarchyTree
MailboxHierarchyNode
MailboxPredictorDebugViewController
MailboxSource
Utilities
MailboxSorting
_MFIconCacheItem
MobileMailEditing
MailChangeManager
MFDeliveryQueue
MailMailboxChangeSet
MailMessageChangeSet
MailPersistentStorageSaveOperation
MailPersistentStorage
MailXPCServices
MFXPCConnection
MFServiceConnectionState
MCSArchive
MCSChange
MCSFinalizedObject
MCSChangeUtilities
MailUtilites
MCSDelete
MCSFlagChange
MCSAllMessagesOperation
_CollectingInvocationTrampoline
_CollectingInvocation
_MCSJunk
MCSJunk
MCSNotJunk
MCSMessageOperation
MCSOperation
MCSTransfer
_MessageAddressScannerQueue
MessageAddressScanner
MessageBodyLoader
_MBLGetNextClientOrMessageJob
_MBLCullOldMessagesJob
_MBLLoadMessageJob
_MBLLoadForClientJob
MessageDeliveryInfo
MessageSummaryLoader
MBLSingleMessageClient
MFMessageSummaryLoader
EFCancelable
MessageToMailboxUidCache
MFAccountHealer
MFAccountResultsGenerator
MFAccountsListService
MFMailService
MFCustomSignatureService
MFAccountsRemovalService
MFMailboxListingService
MFMailboxPushStateService
MFAttachmentCapabilitiesService
MFApplicationShortcutProvider
_ShortcutCountObserverWrapper
MFArchiveOrDeleteMutedThreadMessageRule
NanoUtilities
MFBlockedSenderMessageRule
MFMessageRule
MFDaemonAccountsProvider
MSDAutosaveProtocol
MSDAutosaveSessionProtocol
MFDAutosave
MFDAutosaveSession
MSDCoreSpotlightProtocol
MFDCoreSpotlight
MFDelayedNotificationPresenter
_MFDelayedNotification
Queue
DeliveryOptions
MFDeliveryDelegate
MailServicesComposeDelegate
MFComposeTypeFactoryDelegate
MFMailMessage
MFEmailModelSaveService
MFMessageSaveService
MFAttachmentService
MFEmailModelSendService
MFMessageSendService
MFDiskFreeSpaceMonitor
MSDFetchProtocol
MFDFetch
MSDFocusedMessagesProtocol
MFDFocusedMessages
MFDiagnostic
DiskCacheUtilities
MFDiskCacheUtilities
MSDMessageBodyLoaderProtocol
MFDMessageBodyLoader
MSDResetListUnsubscribeProtocol
MFDResetListUnsubscribe
MSDSearchProtocol
MSDSearchResultsProtocol
MFDSearch
QueryProgressMonitor
_MFDSearchResultsQueue
MFSearchResultHandler
MSDVIPServicesProtocol
MFDVIPServices
MFFetchProcessor
MFKeyValueStoreService
MFLibraryCompressionActivityManager
MFLibraryCompressor
NanoServer
MFListUnsubscribeHandler_iOS
EDReceivingAccount
EDAccount
ECMailAccount
MFMailAccountsProvider
MFAccountsProvider
EDAccountsProvider
MFMailAccountsProviderState
_MFBatchedMessageConsumer
MessageConsumer
_MFMFMailboxMessageBodyProcessorLoaderClient
MFMailboxMessageBodyProcessor
MFMailboxResultsGenerator
MFMailDeviceStorage
MFDeviceStorage
MFMailPurgeableStorage
MFMailPurgeableStorageMonitor
MFMarkLibraryPurgeableActivityManager
MFMarkLibraryPurgeableUpgrader
MFMarkReadMutedThreadMessageRule
MFMessageBodyProcessor
MFMailboxMessageBodyProcessorDelegate
_MFMessageContentURLProtocolRegistry
MFMessageContentURLProtocol
MobileMail
MFMessageResultsGenerator
MFMessageRuleLibraryHook
EDMessageChangeHookResponder
MFMutedThreadMessageRule
MFNanoAccountHandler
MFNanoBridgeSettingsMailbox
NSSecureCoding
NSCoding
MFNanoBridgeSettingsUnifiedMailbox
MFNanoBridgeSettingsSharedMailbox
MFNanoBridgeSettingsAccountSpecificMailbox
MFNanoBridgeSettingsManager
MFBridgeSettingsMailboxSelection
MFNanoServer
NNMKSyncProviderDelegate
MFNanoServerMessageContentLoaderDelegate
MFNanoServerFullMessageLoader
MFNanoServerFullMessageLoaderBatchRequest
MFNanoServerMessageContentLoader
MFNanoServerMessageContentParser
MFNanoServerMessageFetchService
MFNanoServerFetchParam
MFNanoServerMessageSender
MFNanoServerMessageSenderComposeDelegate
MFNanoServerMessageUpdater
MFNetworkActivityManager
MFNoopMutedThreadMessageRule
MFNotificationMessage
EFPubliclyDescribable
MFPushRegistrationService
MFRemoteSearchProvider_iOS
EDRemoteSearchProvider
MFTrashCompactor
MFTriageActionUtilities
MFUserNotificationCenterController
MFDelayedNotificationsPresenterDelegate
MFUserNotificationCenterUpgraderDelegate
EDDatabaseChangeHookResponder
UNUserNotificationCenterDelegatePrivate
UNUserNotificationCenterDelegate
MFUserNotificationCenterObserverDelegate
_MFUserNotificationCenterSummaryClient
MFUserNotificationCenter
MFUserNotificationCenterObserver
MFUserNotificationCenterUpgrader
_MFMailNotificationSoundControllerAutoFetchData
MFUserNotificationSoundController
MFUserProfileProvider_iOS
EMUserProfileProviderSubclassMethods
MFUserSyncStakeholder
UMUserSyncStakeholder
UMUserSwitchStakeholder
MFVIPSendersLibrary
MFXPCClient
MFXPCEndpointInfo
Internal
MFXPCEndpointListener
NSXPCListenerDelegate
_MFXPCClientInfo
MFXPCEndpointService
MFXPCServer
NetworkActivityIndicator
MessageContentView
NSURL_MobileMail
OutgoingMessageRepository_iOS
MFDeliveryQueueObserver
RemoteSearchCoordinator
RemoteSearchOperationDelegate
RemoteSearchOperation
SearchManager
SearchOperation
NSProgressReporting
FullSearchOperation
SearchResultsVerifier
SimpleMailboxSource
SourceSearchContext
NSMutableCopying
MutableSourceSearchContext
_SuggestionsMessageBodyLoaderClient
SuggestionsDataProvider
VIPManager
EMVIPManager
EMVIPReader
@16@0:8
@24@0:8@16
@?24@0:8@16
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8q16@24
v32@0:8q16@"<EFInvocable>"24
v24@0:8@16
v24@0:8@"NSArray"16
@"NSObject<OS_os_log>"16@0:8
v24@0:8@"NSDictionary"16
@40@0:8@16@24@32
v40@0:8o^@16o^B24o^B32
v24@0:8q16
v32@0:8@16@24
q16@0:8
@"<EFScheduler>"
@"EDMessagePersistence"
@"EDPersistenceHookRegistry"
@"MFMailboxProvider"
@"EDMessageCountQueryHandler"
@"EFQuery"
@"NSDictionary"
@"UNUserNotificationCenter"
@"EMObjectID"
@36@0:8@16@24i32
@"NSMutableArray"
@"NSMutableDictionary"
i16@0:8
@"MSDiagnosticManager"16@0:8
@"AWDMailError"16@0:8
v20@0:8B16
@"MFActivityMonitor"16@0:8
@"MFMailboxUid"16@0:8
v24@0:8@"NSString"16
v24@0:8@?16
v24@0:8i16
v24@0:8Q16
d16@0:8
v24@0:8d16
@"NSString"
@"MFMailboxUid"
@"MFMailMessageStore"
@"MSFetchMetricsController"
@"MFError"
@"EMActivity"
@"EDActivityPersistence"
@"MFActivityMonitor"
Vv24@0:8@16
Vv20@0:8i16
Vv28@0:8i16@20
v20@0:8i16
Vv24@0:8@"<AutoFetchControllerDataSource>"16
Vv28@0:8i16@"NSArray"20
v24@0:8@?<v@?BBi@"NSError">16
v32@0:8@"NSSet"16@"NSSet"24
@32@0:8@16@24
B20@0:8i16
B28@0:8i16@20
@32@0:8@16i24
v40@0:8@16i24:32
v36@0:8@16@24i32
v28@0:8i16@20
B28@0:8@16B24
v28@0:8@16B24
@"<AutoFetchControllerDataSource>"
@"<EFCancelable>"
@"<MFAccountsProvider>"
@"FavoritesPersistence"
@"NSSet"
v32@0:8@"NSArray"16@"NSArray"24
v24@0:8@?<v@?@"NSError">16
@"MFMessage"16@0:8
v32@0:8@"MailAccount"16@"MFMailboxUid"24
@"<MFMessageSummaryLoader>"24@0:8@"MFMailMessage"16
v24@0:8i16i20
i20@0:8B16
@"MFAttachmentLibraryManager"
@"MFMailMessageLibrary"
@"MFMessageRuleLibraryHook"
@"MFPersistence_iOS"
@"DaemonFetchController"
@"EDServer"
@"MFNetworkActivityManager"
@"NetworkActivityIndicator"
@"SuggestionsDataProvider"
@"MFRemoteSearchProvider_iOS"
@"MFApplicationShortcutProvider"
@"NSObject<OS_dispatch_semaphore>"
@"NSObject<OS_dispatch_queue>"
@"EFProcessTransaction"
@"MFMailPurgeableStorage"
@"MFNanoServer"
@"MFTrashCompactor"
@"EMBlockedSenderManager"
@"MFMailPurgeableStorageMonitor"
@"AppBadgeController"
@"EDCategorySubsystem"
@"MFUserNotificationCenterController"
@"DaemonSnapshotInvalidator"
@"MFLibraryReconciler"
v24@0:8@"FetchXPCActivityScheduler"16
@"NSArray"16@0:8
i20@0:8i16
v36@0:8i16@20@?28
@"NSObject<OS_dispatch_source>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"FetchXPCActivityScheduler"
@"EDFetchController"
v24@0:8@"<EDAccount>"16
@"<DaemonSnapshotInvalidationHandler>"
@28@0:8@16B24
@32@0:8@16B24B28
@24@0:8i16B20
@28@0:8Q16B24
@24@0:8q16
@"MFMessageCriterion"
@"NSNumber"
@"MailAccount"
@20@0:8i16
@"EFDebouncer"
@24@0:8Q16
@"EMVIP"
@"NSPredicate"
v32@0:8@16^@24
B24@0:8Q16
@"EFLocked"
@40@0:8@16o^B24o^B32
q24@0:8@16
v40@0:8@16@24q32
v40@0:8@"EMMessageRepository"16@"EFQuery"24q32
v24@0:8@"MFMailboxUid"16
B24@0:8@"MFAccount"16
@"NSSet"24@0:8@"MailAccount"16
@"NSOrderedSet"28@0:8@"MailAccount"16B24
@52@0:8@16@24@32@40B48
v48@0:8@16Q24@32@40
v56@0:8@16@24@32@40@48
v28@0:8B16Q20
@"FavoriteItem"
@"EDMailboxPersistence"
@"<EDConversationSubscriptionProvider>"
@"EMDaemonInterface"
@"EMMailbox"
@"EFFuture"
@"NSUbiquitousKeyValueStore"
@"NSRecursiveLock"
r*20@0:8i16
@36@0:8i16d20@28
r*16@0:8
@?16@0:8
@"<FetchXPCActivitySchedulerDelegate>"
@40@0:8@16Q24^@32
@28@0:8@16I24
@36@0:8@16I24@28
B24@0:8@"MFMailboxUid"16
@"NSSet"16@0:8
@"MailAccount"16@0:8
@"MFMessageCriterion"16@0:8
@"MFMailMessageStoreSearchResult"40@0:8@"SourceSearchContext"16Q24^@32
@"NSArray"28@0:8@"NSSet"16I24
@"NSArray"36@0:8@"NSSet"16I24@"MFMailboxUid"28
@24@0:8^{_NSZone=}16
@"CRRecentContactsLibrary"
i24@0:8@16
@"MailboxHierarchyNode"
@48@0:8@16@24@32@?40
B32@0:8:16@24
@"UITextView"
v36@0:8@16@24B32
@36@0:8B16@20B28B32
@36@0:8B16@20@28
@28@0:8B16@20
@"UIImage"
@20@0:8B16
@28@0:8@16i24
Q24@0:8@16
Q40@0:8@16@24@32
Q32@0:8@16@24
@44@0:8@16B24@28@36
@36@0:8@16B24@28
@"MFConditionLock"
@"MCSChange"
@"MFInvocationQueue"
@"NSUndoManager"
^{__CFDictionary=}
Q32@0:8Q16@24
@"MCSMailboxOperation"
@64@0:8@16@24@32@40@48@56
@"MCSMessageOperation"
@"MFTaskAssertion"
v40@0:8@16@24@32
@"NSOperationQueue"
B32@0:8@16@24
v48@0:8@16@24@32@?40
v24@0:8#16
#24@0:8@16
@"NSObject<OS_xpc_object>"
@"NSLock"
@"MailXPCServices"
B40@0:8@16@24@32
@"NSInvocation"
B24@0:8@"MFMailMessageStore"16
@40@0:8@16@24q32
@"<NSFastEnumeration>"
@40@0:8i16B20@24@32
@28@0:8i16B20B24
@"MCSFlagChange"
B24@0:8q16
@"EFMutableInt64Set"
@40@0:8@16^v24@32
^{__DDScanner=}16@0:8
^v16@0:8
v32@0:8^{__DDResult=}16@24
^{__DDScanner=}
@"_MessageAddressScannerQueue"
Vv24@0:8@"<MBLSingleMessageClient>"16
Vv24@0:8@"MFMailMessage"16
Vv24@0:8@"NSArray"16
B24@0:8@"MFMailMessage"16
Vv24@0:8@"MFMailMessageStore"16
@"NSMutableSet"
@"NSCountedSet"
@"EFCancelationToken"
@"NSDate"
@"MFMailMessage"
@"<MBLSingleMessageClient>"
@"MFMailMessage"16@0:8
v32@0:8@"NSString"16@"MFMailMessage"24
v32@0:8@"MFMailMessage"16@"MFError"24
v24@0:8@"MFMailMessage"16
@"EFFuture"16@0:8
@"NSString"24@0:8@"MFMailMessage"16
@"EFPromise"
@"NSMapTable"
v32@0:8@16@?24
@"MFAccount"
@"MFNetworkController"
B48@0:8@16@24^@32^@40
v40@0:8@16@24@?32
B48@0:8@"NSObject<OS_xpc_object>"16@"<MFServiceConnectionState>"24^@32^@40
v40@0:8@"NSObject<OS_xpc_object>"16@"<MFServiceConnectionState>"24@?<v@?B@"NSObject<OS_xpc_object>"@"NSError">32
@48@0:8@16@24@32@40
@"_ShortcutCountObserverWrapper"
v32@0:8@"NSArray"16@"EDMessageChangeManager"24
v32@0:8@"NSString"16@?<v@?B>24
v32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"<MSDAutosaveSessionProtocol>"@"NSError">24
@24@0:8@?16
v36@0:8@16B24@?28
@"NSHashTable"
v24@0:8@?<v@?>16
v32@0:8@"NSArray"16@?<v@?>24
@"<MFDelayedNotificationsPresenterDelegate>"
@48@0:8@16@24d32@40
@"MFNotificationMessage"
v24@0:8@"MFOutgoingMessageDelivery"16
v24@0:8B16B20
v28@0:8B16B20B24
@"<MFMailAccountProxyGenerator>"16@0:8
@"MFComposeWebView"16@0:8
v24@0:8@"MFMutableMessageHeaders"16
@"MFMutableMessageHeaders"16@0:8
@"MFMailAccountProxy"16@0:8
@"MFComposeWebView"
@"<MFMailAccountProxyGenerator>"
@"MFMessageHeaders"
v24@0:8@?<v@?Q@"NSError">16
Q24@0:8^@16
v40@0:8@16q24@?32
v40@0:8@"NSString"16q24@?<v@?Q@"NSError">32
v24@0:8@?<v@?@"NSString"@"NSError">16
i24@0:8q16
v44@0:8@16i24i28@32B40
v44@0:8@16i24i28q32B40
v24@0:8i16B20
v28@0:8q16B24
v40@0:8@16Q24@?32
v32@0:8Q16@?24
@24@0:8^@16
q24@0:8q16
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v40@0:8@16@24Q32
v40@0:8@"NSArray"16@"MSCriterion"24Q32
v32@0:8@"NSArray"16@"NSError"24
I16@0:8
@"MFXPCClient"
@"_MFDSearchResultsQueue"
@"NSProgress"
B24@0:8@"MFLibraryMessage"16
@"<MSDSearchResultsProtocol>"
@"MFMessageResultsGenerator"
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
B24@0:8d16
@"<MFActivityCondition>"
v32@0:8@?16@?24
@"NSObject<OS_os_activity>"
Q32@0:8Q16Q24
Q24@0:8Q16
@"EDOutgoingMessageRepository"
@"EMListUnsubscribeDetector"
@"ACAccount"16@0:8
@"<EDDeliveryAccount>"16@0:8
v24@0:8@"<EDDeliveryAccount>"16
@"<ECMailbox>"24@0:8q16
B24@0:8@"NSURL"16
@40@0:8Q16@24@?32
@"MFMessageStore"
@40@0:8@16Q24@32
@"<MFMailboxMessageBodyProcessorDelegate>"
@"<MFDeviceStorage>"
@"<MessageBodyLoader>"
q32@0:8q16q24
@32@0:8@16^B24
@40@0:8@16Q24^B32
^{__CFString=}16@0:8
^{__CFString=}
B48@0:8@16@24@?32^@40
B24@0:8@"MFMailboxMessageBodyProcessor"16
@32@0:8@16^@24
@"MFMessageLoadingContext"
@"MFAttachmentManager"
@"MFLibraryMessage"
v36@0:8@16B24@28
v40@0:8q16q24@32
v48@0:8@16@24@32@40
v40@0:8q16@24@32
v48@0:8q16q24@32@40
v44@0:8@16q24@32B40
v28@0:8@"<ECMessage>"16B24
v36@0:8@"NSArray"16B24@"EDPersistenceDatabaseGenerationWindow"28
v32@0:8@"NSArray"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"NSData"16@"<EDPersistedMessage>"24
v40@0:8@"NSArray"16@"<EDPersistedMessage>"24@"EDPersistenceDatabaseGenerationWindow"32
v32@0:8@"NSURL"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"ECMessageFlagChange"16@"NSArray"24
v40@0:8@"ECMessageFlagChange"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v40@0:8q16q24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8@"NSSet"16@"NSSet"24@"NSArray"32@"EDPersistenceDatabaseGenerationWindow"40
v32@0:8q16@"NSArray"24
v40@0:8q16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8q16q24@"<EDPersistedMessage>"32@"EDPersistenceDatabaseGenerationWindow"40
v44@0:8@"NSArray"16q24@"NSURL"32B40
@"EDMessageChangeManager"
@"NNMKSyncProvider"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
v40@0:8@16Q24Q32
v40@0:8@16@24B32B36
@"NPSManager"
@"NPSDomainAccessor"
v40@0:8@16Q24@32
v24@0:8@"NNMKSyncProvider"16
v40@0:8@"NNMKSyncProvider"16Q24@"NSArray"32
v32@0:8@"NNMKSyncProvider"16@"NSArray"24
v32@0:8@"NNMKSyncProvider"16@"NSDictionary"24
v36@0:8@"NNMKSyncProvider"16@"NSString"24B32
v32@0:8@"NNMKSyncProvider"16@"NSString"24
v32@0:8@"NNMKSyncProvider"16@"NNMKComposedMessage"24
v40@0:8@"NNMKSyncProvider"16@"NSString"24@"NNMKMailbox"32
v32@0:8@"NNMKSyncProvider"16@"NNMKMailboxSelection"24
v32@0:8@"NNMKSyncProvider"16@"NNMKRequestContext"24
v32@0:8@"NNMKSyncProvider"16@"NNMKAccount"24
v44@0:8@16@24@32B40
v44@0:8@"MFNanoServerMessageContentLoader"16@"NNMKMessageContent"24@"NNMKMessage"32B40
v44@0:8@"MFNanoServerMessageContentLoader"16@"UIImage"24@"NSString"32B40
v24@0:8@"MFNanoServerMessageContentLoader"16
@48@0:8@16@24Q32@40
v48@0:8@16@24@?32@?40
@64@0:8@16Q24@32^B40@48@56
@"MFNanoServerFullMessageLoader"
@"MFNanoServerMessageUpdater"
@"MFNanoServerMessageSender"
@"MFNanoAccountHandler"
@"MFNanoServerMessageFetchService"
@24@0:8o^@16
@32@0:8@16@?24
@"NSMutableOrderedSet"
@"<MFNanoServerMessageContentLoaderDelegate>"
@"NNMKPairedDeviceInfo"
v40@0:8@16d24@?32
@56@0:8@16d24o^@32o^@40o^@48
B116@0:8@16@24@32Q40d48Q56B64@68@76@84@92^B100^B108
@56@0:8@16@24Q32@40@48
@32@0:8@16Q24
@108@0:8@16@24Q32d40Q48B56@60@68@76@84^B92^B100
v56@0:8@16@24Q32@40@48
@"NNMKContentAttributedStringHTMLParser"
@"NSURLSession"
B32@0:8Q16Q24
@"MFDeliveryQueue"
@"<AutoFetchController>"
@"<MFNetworkActivityManagerDelegate>"
@"<MFFavoritesReader>"
@"<EMVIPReader>"
@"CNContactStore"
@"NSProgress"32@0:8@"EFQuery"16@"<EDRemoteSearchDelegate>"24
@"NSArray"32@0:8@"NSArray"16@"EFQuery"24
@"MFMailMessageLibraryQueryTransformer"
@"SearchManager"
@"UNNotificationRequest"40@0:8@"MFDelayedNotificationPresenter"16@"MFNotificationMessage"24@32
v48@0:8@"MFDelayedNotificationPresenter"16@"UNNotificationRequest"24@"MFNotificationMessage"32@40
@"UNNotificationRequest"32@0:8@"MFNotificationMessage"16Q24
v24@0:8@"EDPersistenceDatabaseConnection"16
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationSettings"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24
v40@0:8@"MFUserNotificationCenterObserver"16@"NSArray"24@"NSDate"32
v40@0:8@"MFUserNotificationCenterObserver"16@"NSArray"24@"NSDictionary"32
v32@0:8@"MFUserNotificationCenterObserver"16@"NSArray"24
v24@0:8@"MFUserNotificationCenterObserver"16
v32@0:8@"MFUserNotificationCenterObserver"16@"NSSet"24
@80@0:8@16@24@32@40@48@56@64@72
d20@0:8B16
@44@0:8@16Q24B32@36
@"EDUserNotificationFilter"
@"EDUserNotificationMailboxCutoffController"
@"<MFSystemUserNotificationCenter>"
@"MFUserNotificationCenterUpgrader"
@"MFUserNotificationCenterObserver"
@"MFUserNotificationSoundController"
@"MFDelayedNotificationPresenter"
@"<MFUserNotificationCenterObserverDelegate>"
@48@0:8@16Q24@32@40
@"<MFUserNotificationCenterUpgraderDelegate>"
@"<EFAssertableScheduler>"
v32@0:8@16Q24
@"NSCondition"
@"_MFMailNotificationSoundControllerAutoFetchData"
@"UMUserSyncTask"
@"EAEmailAddressSet"
@"VIPManager"
@"NSXPCConnection"
@48@0:8@16@24@?32@?40
@"MFXPCEndpointListener"
@"NSXPCInterface"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"MFXPCEndpointInfo"
@"NSXPCListener"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
B24@0:8@"RemoteSearchOperation"16
v28@0:8@"RemoteSearchOperation"16B24
@"SourceSearchContext"
@56@0:8@16@24@32@40@48
v32@0:8@16N^Q24
@40@0:8@16@24Q32
@"<MiniMallSource>"
@"<RemoteSearchOperationDelegate>"
@"NSProgress"16@0:8
@"NSObject<OS_dispatch_group>"
B40@0:8@16q24@?32
@"<EDRemoteSearchDelegate>"
@"NSObject<SGSuggestionsServiceMailProtocol>"
@"NSCache"
@36@0:8@16@24f32
^{os_unfair_lock_s=I}16@0:8
B24@0:8@"NSString"16
@"EMVIP"24@0:8@"NSString"16
v24@0:8@"NSSet"16
v24@0:8@"EAEmailAddressSet"16
@"EAEmailAddressSet"16@0:8
r^v32@0:8@16^v24
@"<EMVIPManager>"
updating badge to %ld
Generating new query excluding accounts: %{public}@, VIPs:%d, Notified Threads: %d
Settings changed. Updating query based on current topics
%{public}@ is pushing %lu folders
[Push Incoming] account=%{public}@
Skipping %{public}@ because it is too close to the last fetch
Preparing to autofetch %{public}@ uid %{public}@
[Fetch Initiated] account=%{public}@ mailboxPath=%@ mailbox=%{public}@
skipping scheduled fetch: conditions for 'automatic' no longer exist (wi-fi)
skipping scheduled fetch: conditions for 'automatic' no longer exist (charging)
%p Current #Activity %p (hash: %llx): Starting New Activity
%p Remote '%@', mailbox '%@', store '%@', key '%@'
activity=%{signpost.description:attribute,public}p hash=%{signpost.description:attribute,public}llx
AutoFetchRequest
%p Will try to grow the fetch window for %{public}@, uid %{public}@
%p Autofetching %{public}@, uid %{public}@, remoteID %@, fetchSize %@, shouldCompact: %{BOOL}d, displayErrors: %{BOOL}d, isVisibleFetch: %{BOOL}d, isPowernapFetch: %{BOOL}d, isUserRequested: %{BOOL}d, isForegroundRequest: %{BOOL}d, shouldGrowFetchWindow: %{BOOL}d, downloadAllMessages: %{BOOL}d, shouldLoadMessageBody: %{BOOL}d, closeConnection: %{BOOL}d, dontNotify: %{BOOL}d, retry: %{BOOL}d
[Autofetch] account=%{public}@ remoteID=%@
%p will perform visible store fetch
%p Error occurred during autofetch: %{public}@
[Autofetch Error] account=%{public}@ error=%{public}@
%p Using server search to populate past the fetch window. Downloading %u messages for %{public}@, uid %{public}@
%p Fetching %u older messages for %{public}@ (local count: %u/%u)
NOT fetching older messages for %{public}@ (local count: %u/%u)
Fetch failed initial attempt. Scheduling silent heal and retry...
activity=%{signpost.description:attribute,public}p
success=%{signpost.description:attribute,public}d
AutoFetchHeal
Activity %p did finish with error: %{public}@
error code=%{signpost.description:attribute,public}lld activity=%{signpost.description:attribute,public}p
Activity %p did finish.
retry={signpost.description:attribute,public}YES activity=%{signpost.description:attribute,public}p priority=%{signpost.description:attribute,public}hhu
AutoFetchRequestRetryPending
retry=%{signpost.description:attribute,public}hhu activity=%{signpost.description:attribute,public}p
AutoFetchRequestRetrying
current=%{signpost.description:attribute,public}u total=%{signpost.description:attribute,public}u
[App Startup]
low disk mode turned ON, stopping autofetch
low disk mode turned OFF, starting autofetch
Suppressing autofetch because there's already one inflight
Suppressing background autofetch because it's too close to the last one
maild fetching mailboxObjectIDs: %@
powernap: no eligible accounts were found
autofetch state changing: %@ => %@
Preparing to fetch changed %{public}@ uid %{public}@
Suppressing fetched UID changes due to low disk space
[Push Received] account=%{public}@ mailbox=%@
Starting auto fetch. Force: %{BOOL}d, DisplayErrors: %{BOOL}d, IncludePush: %{BOOL}d, IncludeManual: %{BOOL}d, IncludeNonvisible: %{BOOL}d, UserRequested: %{BOOL}d, ForegroundRequest: %{BOOL}d, ShouldGrowFetchWindow: %{BOOL}d, Pushed: %{BOOL}d, Scheduled: %{BOOL}d, FetchOnlyHeaders: %{BOOL}d, DontNotify: %{BOOL}d, DownloadAllMessages: %{BOOL}d, RequiresPower: %{BOOL}d, RequiresWifi: %{BOOL}d, Compact: %{BOOL}d, LoadOlderMessages: %{BOOL}d
Suppressing autofetch because free space is critical.
AUTOFETCH
Autofetch beginning. Visible stores are %@
Cancelling autofetch, data status %d
should NOT fetch %{public}@: can
t fetch fetch
should NOT fetch %{public}@: is not in the set of accounts to fetch
should fetch %{public}@: isVisible and not suspended
should fetch %{public}@: pushCapable and poll style
should fetch %{public}@: pushCapable, push style, options include push.
should fetch %{public}@: pushCapable, manual style, options include manual.
should fetch %{public}@: !pushCapable, !fetchOnManual, and !manual style
should fetch %{public}@: fetchOnManual, not poll style, options include manual
should NOT fetch %{public}@. visible=%d style=%d pushCapable=%d fetchOnManual=%d fetchType=%d
Network stack is %s
Request got new messages for mailbox %{public}@ of %{public}@
WiFi up: %@
Caught exception %@
Stack trace: %{public}@
Scheduling fetch of additional mailboxes
Finished background fetch, starting pending fetch with options %#x
Finished background fetch call-back
[Fetch Complete]
**DING** Auto fetch notifying user of new mail.
#Warning fetching disabled (AutoFetchDisabled = YES)
Retry of Mailbox=%{signpost.description:attribute,public}@
AUTOFETCH MAILBOX
Mailbox=%{signpost.description:attribute,public}@
#Warning unable to create string for autofetch state %d!
#Warning unable to create string for new messages state %lu!
MobileMail was installed, terminating...
Starting maild version %{public}@
Mail app is not installed, switching to EDNonAcceptingServer
Content protection state changed from %d to %d
Device has not been unlocked after boot, waiting for unlock...
bye bye!
Starting up MailXPCServices.
Starting up UserNotificationCenterController.
Autofetching after abort %{public}@
#Network Error occurred during autofetch but was suppressed intentionally.
%{public}@
Performing delayed startup tasks.
Connection error: %@
Removing app failed with error: %@
Removing app succeeded
WARNING: Snapshot invalidation is disabled. This should only be used for testing purposes. isClientRunningTests=%{BOOL}d forceDisable=%{BOOL}d
initializing fetching
received ping notification from exchangesyncd
received notification about important NanoMail Bridge setting change
Canceling periodic fetches.
overriding periodic fetch interval: %ld seconds
Auto fetch finished.
Updating push state.
resetPushState failed: %{public}@
resetPushState: success (schedulePeriodicFetches: %{BOOL}d, pollInterval: %d)
Detected at least one non-manual account: starting periodic fetches.
All accounts are manual: stopping periodic fetches.
performFetchOfType:%i failed to find uids for %@
visible sources: %@
%{public}@ monitoring for snapshot invalidation events for bundleID %{public}@
Deleting all snapshots for bundle: %{public}@
#Warning unsupported type
Attempting to set item expanded on an item the does not support expansion. Overriding to NO.
#Favorites Failed to create FavoriteItem_Account dictionary representation for %@
#Favorites %@ Could not find representingMailbox mailboxType:%ld accountIsEnabled:%ld account:%@
#Favorites Failed to create FavoriteItem_Inbox dictionary representation for %@
invalidateVisibleItems %@
FavoritesPersistence collection reloaded.
failed to create kv store for %@
Loaded _lastSelectedItem : <%p> %@
Could not read %@: %s
Creating default mailbox collection
Attempting to write to collection data from maild. Returning early.
#Favorites Writing mailboxes collection with reason: << %@ >>
FavoritesPersistence collection changed
#Favorites Could not find collection for item:%@
syncing key = %@; value = %@
Syncing local changes (%lu added, %lu removed)
merging external changes (reason: %lu) %@
_mergeExternalChanges applying %lu changes
item %@ was replaced by %@
cannot create item for KV entry (possibly the account does not exist): %@ = %@
Uploading all items due to Initial Sync Change
kvstorage reported quota exceeded
#Favorites Settings mailbox items for account: %{public}@
accounts did change: oldAccounts: %@, newAccounts: %@
removing orphaned mailbox from favorites: %{public}@
updating existing item with new mailbox data: %{public}@
item not found for mailbox: %{public}@
delaying processing of orphaned mailboxes for Exchange account
Starting processing of orphaned mailboxes for Exchange account
#Favorites Failed to get outbox predicate: %{public}@
#Favorites Started observing outbox using predicate: %@
#Favorites Outbox countDidChange to: %lld shouldShow: %lld
#Favorites Posting notifications for outbox visibility change
Unregistering XPC activity for type %d.
Tried to schedule fetch for type %d more than once.
Scheduling fetch for type %d with interval %g seconds.
Unregistering XPC activity for type %d (and tearing down).
Tearing down fetch scheduler for type %d.
XPC activity triggered for fetch scheduler (type %d, interval %g seconds).
Torn down. Not running.
No delegate. Nothing to do.
Dispatch timer triggered for fetch scheduler (type %d, interval %g seconds).
Marking fetch scheduler as done (type %d).
Failed to mark XPC activity %p as continuing (async).
Marked XPC activity %p as continuing (async).
There are %u running fetch XPC activities.
Found %u fetch XPC activities.
Failed to mark XPC activity %p as done.
Marked XPC activity %p as done.
%@ error determining mailbox frecency: %{public}@
%@ error removing mailbox frecency information: %{public}@
#ChangeSetActions Added %@ to changes
#ChangeSetActions %@ taking power assertion
#ChangeSetActions Initiating change %@
#ChangeSetActions Exception raised while processing change: %@
#ChangeSetActions Committed change %@
#ChangeSetActions Committed: %lu
Pending: %lu
#ChangeSetActions %@ releasing power assertion
#ChangeSetActions MCM handling %@
#ChangeSetActions invalidating %@ unread counts for %@
#ChangeSetActions Received mailbox change with notification key %@
#ChangeSetActions set %lu for %@
#ChangeSetActions found cached pre-change unread count %lu for %@
#ChangeSetActions Warning: overwriting unread count %lu with %lu for %@
#ChangeSetActions Started with %lu for %@
#ChangeSetActions %@ adjusted unread count (%lu -> %lu)
#ChangeSetActions Ended with %lu for %@
#ChangeSetActions no post-change unread count for %@
#ChangeSetActions Committed %@ with result %d
#ChangeSetActions Committed %@ with result %d (%@)
#ChangeSetActions Unable to get mailbox for message: %@, store: %@
Error serializing metadata: %{public}@
Error writing metadata at: %@ with error: %{public}@
starting Mail xpc services
maild exiting due to xpc error [%s] 
stopping maild legacy xpc services
PID %d : new connection %@
connection %@ had error %{public}@
connection %@ was sent bad message %{public}@
PID %d (%lld) : <connection: %p> handling message %@
PID %d (%lld) : <connection: %p> handled message %@successfully sending %@ %@
registering class %@ for service name %@
PID %d : starting peer connection <connection: %p>
PID %d : tearing down peer connection <connection: %p>
#ChangeSetActions flags applied to messages: %@
#Warning MCSAssert: %@
performRecentsSearch results: %ld
%ld recents to remove
#Warning failed to remove MessageAddressScanner recents: %@
#Warning failed to create scanner: %@
#BodyLoading scanning summary for message %lld - enqueued %f secs ago
#BodyLoading found %ld DD results for message %lld
copySummaryForMessage start (downloadIfNecessary %@): %{public}@
%0.4fs
%0.4fs
copySummaryForMessage end (downloadIfNecessary %@): %{public}@
startup: %@
should be running at this point
_finishedCullingMessageList was called but _isWaitingForTask was NO
MBL CLIENT LOAD
_clientLoadFinished was called but _isWaitingForTask was NO
MBL MESSAGE LOAD
_messageLoadFinished was called but _isWaitingForTask was NO
Message=%@
_getNextClientOrMessageFinished was called but _isWaitingForTask was NO
client ADD: %@ %p idx: %lu count: %lu
client DEL: %@ %p idx: %lu count: %lu
_setIsRunning: %@
MBL PROCESSING
start at %@
Account:%@ 
newMessageSet [%ld]:%@
_noNetworkFetching went negative
account=%@; lid=%lld; duration=%.2fs; tx=%d; rx=%d; wifi=%@
an error occurred while loading message: %{public}@
account=%@; tx+rx=%@
power assertion timeout
assertionDidExpire: pausing until %@
Account:%@ 
newMessageSet [%ld]:%@
MBL COPY SUMMARY
MBL WRITE SUMMARY
Attempting renewal of credentials for account: %{public}@
Credential renewal for account %{public}@  %@
User allow us to heal their account to: %@:%i %i
Unable to find account that is related to this SMTP server: %@:%i %i
Error for error we use to determind to heal with another account or not: %{public}@, should heal? %@
Informations we got back from Ace DB: %@, %i, %i
#Warning credential renewal failed: %@
Setting shortcuts: %@
Starting count query for predicate: %@ mailboxScope: %@
Failed to create count predicate for favorite item: %@
Checking for existing autosaves failed with error [%{public}@]
Checking for existing autosaves failed because no identifier was provided.
Successfully removed autosave. autosaveID=%@
Removal of autosave failed with error. autosaveID=%@ error=%{public}@
Retrieved autosaved message [%@]
Enqueuing autosave. %@
Starting autosave... %@
Identifying previous autosaves... %@
Including any autosaves of oldID=%@. %@
Ignoring provided old identifier. Failed to create criterion. %@
Found %lu previous autosaves. %@
Adding new autosave to library... %@
Autosave added to library successfully. %@
Cleaning up old saves. %@
Autosave complete. %@
Autosave failed! The saved message was not returned from the change manager. %@
Autosave could not be performed because message does not have a document identifier header. error=%{public}@
Autosave could not be performed because the message data is invalid. error=%{public}@
Retrieving idle autosave items...
Number of active autosave sessions: %lu
Found %lu autosave items in the transient drafts mailbox without active autosave sessions.
Autosave session started. (autosaveID=%@)
Autosave session ended. (autosaveID=%@)
setting postingDelay to %.4fs
purging all pending delayed messages
Delayed Presenter: Removing pending messages by identifier
Delayed Presenter: Removing pending messages {'%@'}
Delayed Presenter: Removing all pending notifications for accounts: %{public}@
Delayed Presenter: Removing all pending notifications for account: %{public}@
enqueued '%@' at index %lu
updated queued message for identifier '%@'
found %lu messages to process immediately (out of %lu requested)
cancelling existing fire source %@
scheduling next delayed dequeue in %gs for '%@' (%@)
found %lu sufficiently delayed messages (out of %lu)
processing %lu messages {'%@'}
removing all processed messages
Resetting delivery state for %d messages
processQueue: queue is empty (no messages from active accounts)
ignoring request to process queue: state is 'suspended'
ignoring request to process queue: state is 'processing'
suspending delivery queue
request suspending delivery queue
ignoring suspend request, we are already suspended
resuming delivery queue
low disk mode turned ON, stopping delivery
low disk mode turned OFF, resuming delivery
Aborting synchronus delivery to inadequate free space
Begin Delivery Message : %@
EMAIL DELIVERY
Failed to append message to outbox, continuing with delivery
Network may not be reachable, but attempting delivery anyway
Message delivery succeeded
Message delivery failed
Delivered Message : %@ with result %@
detected stale store
Not updating counts - hasAdequateDiskSpace:%d
purging orphaned messsage: %@
%lu message(s) total, %lu from active accounts
Saved message to outbox (libraryId: %lld)
skipping message because it has UI focus
skipping message because it is marked as deleted
skipping message because delivery is in progress
skipping message as no deliveryInfo metadata not found for libraryId: %lld
skipping message because last failure was permanent
skipping message because maximum number of retries exceeded
skipping message because it is larger than %d bytes and had more than %d transient failures. It will only re-send once wifi becomes available
delivery info for %@: %@
delivery result for %@: %@
processing %d outbox %@ (%@): %@
activity was cancelled (possible due to timed out power assertion)
network is not reachable, aborting queue processing
sending %@ (account class: %@)
account %@{public} became an alternate for %@{public}
message delivery failed with error: %{public}@
skipping message from  inactive account
done processing queue: %lu messages sent, %lu failures
processing queue did finish
change in mail accounts detected: %@
detected deleted flag change of outbox message(s)
detected new outbox message(s)
message got UI focus: %@
detected change in network reachability: %d
locale change detected
Handling MSAttachmentOperationCreatePlaceholderFromMetadata
Handling MSAttachmentOperationDeletePlaceholderWithURL
Handling MSAttachmentOperationSecurityScopeForURL
#Attachments ** Unable to vet security scope URL: %@. Must be a URL inside the placeholder directory.
#Attachments Unable to handle operation code [%lu]
Unable to retrieve free space with error: %{public}@
Simulate critical free space is enabled: returning MFDiskFreeSpaceMonitorStatusCritical
#MailServices %@ searching library for criteria: %@
#MailServices %@ finished search%@%@
Canceling fetch %@ because one with the same name is currently running
Finished powernap fetch. Duration: %.2fs Mailboxes fetched (%lu): %@
Ending powernap fetch because no eligible mailboxes were found
powernap: start processing %lu mailboxes
Stopping powernap fetch because requirements are no longer met
Stopping fetch processor because time limit was exceeded
Ending powernap fetch because disk is almost full
Ending powernap fetch because we have hit the maximum number of mailboxes to fetch
Canceling in-flight fetch for %{public}@
powernap: %@ %p [%@ %d %lu]
powernap: %@ %p [%@ FAIL]
Library upgrade compression has been scheduled.
Library upgrade compression has not been scheduled. (Not needed)
Failed to transition from state %ld to state %ld.
Mail library compression activity
Running library compression
Begin compressing mailbox directory "%@"
Finished compressing mailbox directory "%@"
Error occured attempting to compress directory "%@": %{public}@
Finishing Library Compression
Compression should not have run it was already completed
Error trying to get compresssed xattr to "%@": %{public}@
Error trying to add compressed xattr to "%@": %{public}@
After reloading accounts: %lu/%lu active mail accounts (previously %lu/%lu)
#MessageBodyProcessor Starting body download for mailbox %@ (batch size: %lu)
#MessageBodyProcessor Found message to download %@ of size: %lu
#MessageBodyProcessor Failed to wait for message (%@) download with error %{public}@
#MessageBodyProcessor Finished body download for mailbox %@
#MessageBodyProcessor Testing message %{public}@
#MessageBodyProcessor Should stop searching %@ because condition are no more met
#Nano Could not create criterion for message id: %{public}@
#PurgeableStorage Failed to compute size for %@ with error %{public}@
Library purgeable upgrader has been scheduled.
Library purgeable upgrader has not been scheduled. (Not needed)
Mail mark library purgeable activity
Marking library purgeable
Begin marking files in directory purgeable {%@}
Finished marking files purgeable in directory: {%@}
Error occured attempting to mark files purgeable in {%@}: %{public}@
Finishing Marking Library as Purgeable
Library purgeable upgrader should not run
Error trying to get purgeable xattr to {%@}: %{public}@
Error trying to add purgeable xattr to {%@}: %{public}@
Error trying to remove purgeable xattr to {%@}: %{public}@
Error marking file purgeable: %@
Canceling marking directory purgeable: %@
Error %{public}@ attempting to close fts for URL %@
Error %{public}@ No filesystem representation for URL %@
BodyProcessor
#MessageBodyProcessor Canceling body-backfill download %@ because one with the same name is currently running
#MessageBodyProcessor Starting body-backfill download %@
#MessageBodyProcessor Finished body download %@ (Duration: %.2fs)
#MessageBodyProcessor Stopping body-backfill download because requirements are no longer met
#MessageBodyProcessor Begin processing mailbox: %@
#MessageBodyProcessor Should continue: conditions: %@ | time budget: %@ (stop by %@)
#MessageLoading loading message %{public}@ had error (%{public}@/%ld): fragment %{public}@
#Warning unexpected criterion during server-side searchability determination (assuming YES) : %@
#Warning couldn't convert attachment URLs to attachment objects: %@
#Warning couldn't find a test for attachment limiter type '%@'
#Warning Exchange message was not fully loaded.  We won't be able to get custom headers for it.
#Nano Account %{public}@, State: %lu
#Nano Posting Darwin Notification Watch Account Status Changed
#Nano Received authentication failure notification with no account.
#Nano Posting Darwin Notification Account Authentication Failed
#Nano Received Darwin Notification Account Identity Available. Syncing to watch...
#NanoMail Attempt to recover mailboxUid for MFNanoBridgeSettingsAccountSpecificMailbox failed. Account did not return valid mailboxUid for mailboxURL: %@
#NanoMail Attempt to recover mailboxUid for MFNanoBridgeSettingsAccountSpecificMailbox failed. (Id: %{public}@, Active: %lu)
#NanoMail Mailbox selection list is from legacy OS. %{public}@
#NanoMail Mailbox selection list read from disk. %{public}@
#NanoMail Mailbox settings item is invalid. %{public}@
#NanoMail Mailbox selection list does not exist or is invalid. Creating default seletion
#NanoMail Mailbox selection list validated. %{public}@
#NanoMail Posting Darwin Notification Bridge Setting has Changed for key: %@
#NanoMail Posting NotificationCenter Notification Bridge Setting has Changed for key: %@
#Nano Messages added notification ignored. Not paired. %{public}@
#Nano Message flags changed notification ignored. Not paired. %{public}@
#Nano Messages compacted notification ignored. Not paired. %{public}@
#Nano Dropping message because it does not belong to synced mailboxes. %{public}@
MFNanoServerFullMessageLoader: Batch request scheduled - message count: %ld - request: %{public}@
MFNanoServerFullMessageLoader: Message header request started - message count: %ld - request: %@
MFNanoServerFullMessageLoader: Message header requests finished successfully - message count: %ld - request: %@
MFNanoServerFullMessageLoader: Message header requests failed - message count: %ld - request: %@
MFNanoServerFullMessageLoader: Protected data available. Message headers will be fetched from database
MFNanoServerFullMessageLoader: Protected data not available. Message headers will be downloaded from server
MFNanoServerFullMessageLoader: Scheduling retry in %f seconds
MFNanoServerFullMessageLoader: Enqueueing request to retry - message count: %ld - request: %{public}@
MFNanoServerFullMessageLoader: Request completed - message count: %ld - request: %@
MFNanoServerFullMessageLoader: OperationQueue resumed - Request count: %ld
MFNanoServerFullMessageLoader: OperationQueue suspended - Request count: %ld
#Nano Message from MFNanoServerMessageContentLoader is not a LibraryMessage
#Nano Waiting for parse to finished. Holding on so no other request in enqueued until this is finished. %{public}@
#Nano Received signal, parse finished. %{public}@
#Nano Error retrieving Html Content for Message. %{public}@
#Nano Error retrieving Html Content for Message. %{public}@, %{public}@
#Nano NanoContent has nil messageId (hasLoadedCompleteBody). Please file bug against 'Mail | watchOS' component! MessageID: %@, ExternalID: %@
#Nano NanoContent has nil messageId. Please file bug against 'Mail | watchOS' component! MessageID: %@, ExternalID: %@
#Warning failed to find a store for message %{public}@, things may behave unexpectedly
%@: network up, transitioned to WiFi, closing WWAN connections
%@: network up, transitioned to WWAN
%@: network down
RNF: ignoring notification (reason: application not running in the foreground)
RNF: received notification, dropping all connections
RNF: triggering autofetch
#aps-push account %@: registered mailboxes {%@} for external push notifications with prefix '%@' for '%@'
#aps-push account %@: failed to register mailboxes for external push notifications
Removing %lu notifications due to account changes.
fetched summary for messages = %@
fetched messages = %{public}@
Removing %lu notifications with identifiers: %@
Notification is below cutoff. Sending directly to NotificationCener. %{public}@
Failed to add notification request: %{public}@ for topics: %{public}@ with error %{public}@
Successfully created notification request: %{public}@ for topics: %{public}@
Failed to replace notification request: %{public}@ for topics: %{public}@ with error %{public}@
Successfully replaced notification request: %{public}@ for topics: %{public}@
Generating new topics based on active accounts: %{public}@
Setting new NotificationCenter topics: %@
Failed to set NotificationCenter topics: %@ with error : %@
Successfully set new NotificationCenter topics: %@
Authorization complete
Authorization failed with error: %{public}@
Removing notifications due to flag changes (Read:%d, Deleted:%d) for %lu messages: %@
Removing notifications for %{public}lu deleted messages: %{public}@
Reloading User Notification Center topics due to VIPs change
notification: %@
Failed to replace notification due to VIP change: ID: %{public}@, error: %{public}@
Successfully replaced notification request due to VIP change: ID: %{public}@
Reloading User Notification Center topics due to Conversation Flags change
No longer listenting for changes for accounts: %{public}@
Active accounts changes. Will rebuild topics and remove stale notifictions
Did receive response %{public}@ for notification: %{public}@ and action: %{public}@
Received notification response without a message referense. %{public}@
process notification %{public}@ action for messageID: %{public}@.
process notification mark as read action for messageID: %{public}@.
process notification flag action for messageID: %{public}@.
Failed to process notification action with unknown action: %{public}@.
Failed to process notification action for unknown messages: %{public}@.
Generating new topics due to conversation provider initialization
Updating notified message for conversation ID change: %{public}lld. Conversation ID: %{public}lld. Old conversation ID: %{public}lld
Post notification for Notified Thread due to conversation ID change: %{public}@
Failed to load body for message: %@
Observer: Accounts changed. Active accounts = %@. Currently observed accounts: %{public}@
Observer: Removed Accounts: %{public}@
Error: got nil store for mailbox uid %{public}@
Observer: Started observing stores for accounts %{public}@
Observer: Stopped observing stores for accounts %{public}@
Observer: Currently observed accounts %{public}@
UPGRADE: Marking upgrade to Notification Center complete
UPGRADE: Starting upgrade to notification center
UPGRADE: Found %lu messages for notification center upgrade:
UPGRADE: Failed to add notification request: %@ with error %@
UPGRADE: Successfully created notification request: %@
UPGRADE: Gathering criteria for accounts: %@
UPGRADE: for %lu messages matching criteria: %@
UPGRADE: account contain message = %p -> %@, messageID:%lli, subject:%lu, sender:%lu
Upgrader: Protected database is available.
Upgrader: Protected database is not available (= %lu), waiting for reconciliation to finish/or device to unlock
Upgrader: Device needs to go through data migration, deferring
Sound Controller: No sound assigned for notification content %@
Sound Controller: Waiting for sound for notification content %@
Sound Controller: took %g seconds to resolve sound for notification content %@ (%@%@%@) autoFetchData=%@
Sound Controller: **DING** Auto fetch notification will notify user of new mail.
Sound Controller: Push fetch saving notification of new mail.
Sound Controller: Unbalanced calls to _autoFetchPushStarted/Finished
%s: creating sync task for %lu messages
%s: no pending messages found
%s: task already exists
#Network network %@
#MailServices got address book change notification
#MailServices merging VIPs that mapped to the same AB record (%@ -> %@)
#MailServices removing VIPs from cloud with identifiers {%@}
starting to/cc migration, email addresses: %@
failure during to/cc migration
done with to/cc migration, setting ToCcMigrationCompleted default
to/cc migration took %f ms
#MailServices connection %@ for %@ was invalidated.
#MailServices connection %@ for %@ was interrupted.
Failed to find a message for error: %{public}@
Begin delivery of Message %p
Outbox has %lu pending messages.
Account:%@ %@ messages in Outbox
Start processing queued messages for delivery.
Resume processing queued messages for delivery.
Suspend processing queued messages for delivery
Found %ld messages for documentID: %{public}@ in mailboxID: %{public}@
%@ %{public}@ begin %lu remote searches
%@ %{public}@ %{public}@ %lld/%lld remote searches
%@ source: %@, error: %@ shouldSuppressErrors: %d
%@ %{public}@ begin search on source %@
%@ %{public}@ fetchError: %@
%@ %{public}@ finished search on source %p, countOfSearchResults:%lu isCancelled:%@
%@ %{public}@ source %p found %lu messages, will stop
%@ %{public}@ source %p found %lu messages, will continue searching with offset %{public}@
%@ FinishedSearchOperation identifier:%{public}@ isCancelled:%@
#Warning source has no equivalent criterion! %@
%@ FullSearchOperation [%{public}@] cancelled:%@ hasServerSearchContext:%@
%@ [%{public}@] begin remote searches countOfSearchableSources:%lu
%@ [%@-%{public}@] skipping unsearchable source %@
%@ filtered search results: spotlightFailedCount:%lu, skeletonFailedCount:%lu
#Warning could not create hash from message ID %@
See <rdar://problem/26633447> : MessageID should be a string, but is %{public}@
#MailServices saveVIP: %@
#MailServices deleteVIPWithIdentifier: %@
?333333
333333
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>19A603013</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>maild</string>
<key>CFBundleExecutable</key>
<string>maild</string>
<key>CFBundleIdentifier</key>
<string>com.apple.email.maild</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleShortVersionString</key>
<string>3654.20.0.1.43</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>3654.20.0.1.43</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>12A8179f</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>14.2</string>
<key>DTSDKBuild</key>
<string>18B5072c</string>
<key>DTSDKName</key>
<string>iphonesimulator14.2.internal</string>
<key>DTXcode</key>
<string>1200</string>
<key>DTXcodeBuild</key>
<string>12A8179f</string>
<key>MinimumOSVersion</key>
<string>14.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
<key>UNUserNotificationCenter</key>
<dict>
<key>UNDaemonShouldReceiveBackgroundResponses</key>
<true/>
<key>UNDaemonShouldReceiveNotificationSettingsUpdates</key>
<true/>
<key>UNDefaultSettings</key>
<dict>
<key>UNSettingAlerts</key>
<true/>
<key>UNSettingSounds</key>
<true/>
</dict>
<key>UNDefaultTopics</key>
<string></string>
</dict>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.email.maild</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.bulletindistributord.server</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.dataaccess.dataaccessd.PersistentPush</key>
<string>com.apple.email.maild</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.mobilemail</string>
<string>com.apple.mail.preferences</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
<string>CloudDocuments</string>
</array>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.mobilemail</string>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.mobilemail.mailservices</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.notificationcenter.widgetcontrollerhascontent</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>ITEMIZED_PURGEABLE_ENTITLEMENT</string>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileContainerManager.lookup</key>
<dict>
<key>appData</key>
<string>com.apple.mobilemail</string>
</dict>
<key>com.apple.private.MobileContainerManager.unrestrictedPersona</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.mail.preferences</key>
<string>com.apple.mail.preferences</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.communicationsfilter</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corespotlight.bundleid</key>
<string>com.apple.mobilemail</string>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.corespotlight.search.internal</key>
<true/>
<key>com.apple.private.donotdisturb.behavior.resolution.client-identifiers</key>
<array>
<string>com.apple.messageui</string>
</array>
<key>com.apple.private.dprivacyd.allow</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.mail.fetches</string>
<string>com.apple.private.alloy.mail.sync.accounts</string>
<string>com.apple.private.alloy.mail.sync.content</string>
<string>com.apple.private.alloy.mail.sync.messages</string>
<string>com.apple.private.alloy.mail.sync.protected.content</string>
<string>com.apple.private.alloy.mail.sync.protected</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.mail.fetches</string>
<string>com.apple.private.alloy.mail.sync.accounts</string>
<string>com.apple.private.alloy.mail.sync.content</string>
<string>com.apple.private.alloy.mail.sync.messages</string>
<string>com.apple.private.alloy.mail.sync.protected.content</string>
<string>com.apple.private.alloy.mail.sync.protected</string>
</array>
<key>com.apple.private.kernel.override-cpumon</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.persona.read</key>
<true/>
<key>com.apple.private.personas.propagate</key>
<true/>
<key>com.apple.private.security.storage.Calendar</key>
<true/>
<key>com.apple.private.security.storage.Mail</key>
<true/>
<key>com.apple.private.suggestions.mail</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
<key>com.apple.private.ubiquity-additional-kvstore-identifiers</key>
<array>
<string>com.apple.mail.vipsenders</string>
<string>com.apple.mail.threadinfo</string>
<string>com.apple.mail.listUnsubscribeInfo</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.mobilemail</string>
</array>
<key>com.apple.proactive.eventtracker</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.mail</string>
<string>com.apple.MailPersonaStorage</string>
</array>
<key>com.apple.security.exception.carrier-bundle.read</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/ClientTruth.plist</string>
<string>/System/</string>
<string>/private/var/MobileAsset/</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/com.apple.email.maild/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/SyncedPreferences/com.apple.email.maild-com.apple.mail.vipsenders.plist</string>
<string>/Library/SyncedPreferences/com.apple.email.maild-com.apple.mail.threadinfo.plist</string>
<string>/Library/Caches/PassKit/</string>
<string>/Library/UserConfigurationProfiles/</string>
<string>/Library/Preferences/com.apple.purplebuddy.plist</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Application Support/CloudKitMailConversationsFlags/</string>
<string>/Library/Caches/com.apple.backboardd/</string>
<string>/Library/Caches/com.apple.email.maild/</string>
<string>/Library/Caches/com.apple.WebKit.Networking/</string>
<string>/Library/Caches/com.apple.WebKit.WebContent/</string>
<string>/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.email.maild/</string>
<string>/Library/Calendar/</string>
<string>/Library/Cookies/</string>
<string>/Library/DataAccess/</string>
<string>/Library/DeviceRegistry/</string>
<string>/Library/Logs/CrashReporter/DataAccess/</string>
<string>/Library/Mail/</string>
<string>/Library/WebKit/</string>
<string>/Library/WebKit/com.apple.email.maild/</string>
<string>/tmp/com.apple.email.maild/</string>
</array>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>AppleKeyStoreUserClient</string>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.symptom_diagnostics</string>
<string>com.apple.iphone.axserver</string>
<string>com.apple.coredatad.cloudkit</string>
<string>com.apple.adid</string>
<string>com.apple.dprivacyd</string>
<string>com.apple.cdp.daemon</string>
<string>com.apple.exchangesyncd</string>
<string>com.apple.donotdisturb.service</string>
<string>com.apple.icloud.fmfd</string>
<string>com.apple.ind.xpc</string>
<string>com.apple.lsd.modifydb</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.spotlight.SearchAgent</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.FSEvents</string>
<string>com.apple.mobilemail.appremoval</string>
<string>com.apple.usernotifications.usernotificationservice</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.suggestions</string>
<string>com.apple.FontParser</string>
<string>com.apple.persistentconnection-mcc</string>
<string>com.apple.nsurlcache</string>
<string>com.apple.ImageIO</string>
<string>com.apple.applejpeg</string>
<string>com.apple.pairedsyncd</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.ids</string>
<string>com.apple.ids.debug</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.EmailFoundation</string>
<string>com.apple.NanoMail</string>
<string>com.apple.mobilemail</string>
<string>com.apple.email.maild</string>
<string>com.apple.message</string>
<string>com.apple.usernotifications.delegate.mobilemail</string>
<string>com.apple.usernotifications.delegate.com.apple.mobilemail</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.osanalytics</string>
</array>
<key>com.apple.security.ts.addressbook</key>
<true/>
<key>com.apple.security.ts.application-group-support</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.identity-services-client</key>
<true/>
<key>com.apple.security.ts.location-services</key>
<true/>
<key>com.apple.security.ts.mach-task-name</key>
<true/>
<key>com.apple.security.ts.mobile-keybag-access</key>
<true/>
<key>com.apple.security.ts.power-assertions</key>
<true/>
<key>com.apple.springboard.delete-application-snapshots</key>
<true/>
<key>com.apple.springboard.monitorAppSwitcherUserQuit</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>com.apple.symptom_diagnostics</key>
<true/>
<key>com.apple.tailspin.dump-output</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.create</key>
<true/>
<key>com.apple.usermanagerd.persona.delete</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.social.oauthurl</string>
<string>apple</string>
<string>appleaccount</string>
<string>com.apple.mobilemail.smime</string>
<string>com.apple.identities</string>
<string>com.apple.certificates</string>
<string>com.apple.mail</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>maild</string>
</array>
</dict>
</plist>
