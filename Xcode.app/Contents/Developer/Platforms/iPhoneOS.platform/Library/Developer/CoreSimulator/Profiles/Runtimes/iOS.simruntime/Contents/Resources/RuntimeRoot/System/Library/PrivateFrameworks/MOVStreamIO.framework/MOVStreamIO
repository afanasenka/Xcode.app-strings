@(#)PROGRAM:MOVStreamIO  PROJECT:MOVStreamIO-1
C610L010L3.315.114ggr4ggb4rbg4brg
010L010L010L010L010L010L010Lfvuy610L3.31610L010L3.315.114ggr4ggb4rbg4brg
com.apple.videoeng.streamerror
com.apple.videoeng.streamwriterwarning
com.apple.videoeng.streamreaderwarning
com.apple.videoeng.streamreadererror
StreamEncoderType
PixelFormat
ColorStreamBitrate
VideoTransform
HEVCQPValue
ExpectedFrameRateForStream
RawBayerRearrangeTypeKey
UseSlimXCompression
FrameMetadataFormat
OriginalTimestampWhenWrittenToFile
MarksOutputTrackAsEnabled
VideoTrackTypeInfo
PixelBufferExactBytesPerRow
ProResEncodingQuality
CustomEncoderConfig
com.apple.mio.tracktype.AlphaDataOnly
com.apple.mio.tracktype.NoVideoData
com.apple.mio.tracktype.IRData
com.apple.mio.tracktype.RasterOrientedVideoData
hvc1
hw.pagesize
hw.cachelinesize
Cannot retrieve available video encoder list, error %d
{CGAffineTransform=dddddd}
Embedded configuration must not be nil.
CFBundleShortVersionString
%d.%d.%d%@
%d.%d.%d
%d.%d
Cannot compare with nil object.
Version: %@
major
TI,R,V_major
minor
TI,R,V_minor
bugfix
TI,R,V_bugfix
modifier
T@"NSString",R,V_modifier
Cannot create pixel buffer pool for adjusting Bytes Per Row. (%@)
Cannot convert pixel buffer. (%@)
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
removePadding
processedPixelFormat
TI,R
exactBytesPerRow
originalPixelFormat
TI,N
TB,VremovePadding
TQ,VexactBytesPerRow
TI,N,VoriginalPixelFormat
HEVC_Monochrome12_AutoLevel
Cannot read config from file '%@'.
codecType
encoderSpecification
sessionProperties
Cannot write to file %@.
TI,V_codecType
T@"NSDictionary",&,V_encoderSpecification
T@"NSDictionary",&,V_sessionProperties
Finishing Queues
name
T@"NSString",R
writerStatus
Tq,R
v8@?0
mdta/com.apple.rawSampleBufferAttachmentDict
mdta/com.apple.metadataTrackType
mdta/com.apple.metadataDict
mdta/com.apple.rawIMUDict
mdta/com.apple.imuTrackType
AudioFormatObject
AdditionalAudioSettings
slim
SlimXFormat
readyForMoreMediaData
sampleBuffer
T^{opaqueCMSampleBuffer=},V_sampleBuffer
metadata
T@"AVTimedMetadataGroup",&,V_metadata
Target path is an existing directory.
MOVStreamWriter init with URL %@
com.apple.streamwriter.writing
com.apple.streamwriter.encoding
init
Flushing pixel buffer pool...
Unknown stream id.
Stream is an audio stream, use [MOVStreamWriter setWritingBufferCapacity:forAudioStream:]
Stream is a video stream, use [MOVStreamWriter setWritingBufferCapacity:forStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferCapacityForAudioStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferCapacityForStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferUsageForAudioStream:]
Stream is an audio stream, use [MOVStreamWriter writingBufferUsageForStream:]
State Change: %@ - (%@) -> %@
status
Caller must provide a delegateCallbackQueue
Cannot find track for stream %@
Cannot add tracks while not idle
Cannot add two metadata tracks with the same name
Unable to find stream with identifier %@
recordingConfiguration cannot be null or empty
Format description cannot be null
ProRes4444 only supported on macOS.
ProRes4444 only supports Medium or High quality setting.
Cannot add two tracks with the same stream name
Not matching kMIOPixelBufferExactBytesPerRow value %d.
No video track type info (MIOVideoTrackTypeInfo) specified for stream '%@'.
Invalid audio format
Current state does not support prepareToRecord.
prepareToRecord
Start prepareToRecordWithMovieMetadata
prepareQueue
Init av writer...
Writer setupAssetWriterStreamInputs
Writer setupMetadataInputs
Writer setupAssociatedMetadataInputs
Writer add MOV metadata
Writer startWriting
Writer register KVO
Writer transition status
executePrepareToRecord
-[MOVStreamWriter executePrepareToRecordWithMovieMetadata:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO-3.14/MOVStreamIO/Writer/MOVStreamWriter.mm
-[MOVStreamWriter addIsReadyObservers]
Cannot append to stream that hasn't been set up.
Cannot append: writer is not recording. Current writer state: %@
MOVStreamWriter appendPixelBuffer at '%5.3f' to stream '%@'
Mode for pixel buffer attachements for RawBayer pixel buffers is not set to PLIST! Default format is overriden by client (kMIOFrameAttachmentSerializationMode), this will be ignored for RawBayer.
appendPixelBuffer
Exception occurred during encoding %@ for stream '%@'. Dropping frame.
Sample buffer was appended with presentation timestamp less than (or equal to) previous sample buffer for stream '%@'. Dropping frame.
Sample buffer creation failed (error: %i) for stream '%@'. Dropping frame.
Sample Buffer cannot be nil.
Cannot append to a stream that hasn't been set up.
Pixel format not defined for stream '%@'.
Sample Buffer with invalid PTS for stream '%@'.
Cannot append sample buffer with encoder type not MIOStreamEncoderTypeNone.
MOVStreamWriter appendSampleBuffer at '%5.3f' to stream '%@'
[FIFO] add to fifo '%@' %ld
[FIFO] FIFO buffer for stream '%s' is full, dropping older buffer.
Sample buffer encoding failed (encoder status: %i flags: %d) for stream '%@'. Dropping frame.
Missing customEncoderConfigDelegate '%@'. Cannot encode!
overrideVideoEncoderSpecificationForstreamId
configureSessionOverride
codecTypeOverrideForstreamId
Cannot append metadata when the track was never added. Call addMetadataTrack: before prepareToRecord.
MOVStreamWriter metadata group at '%5.3f' to stream '%@'
Invalid time stamp is not supported for metadata for stream '%@'.
MOVStreamWriter metadata at '%5.3f' to stream '%@'
No metadata appended because it's empty
No metadata appended because the AVTimedMetadataGroup* is nil
FIFO buffer for metadata stream '%@' is full, dropping older buffer.
Cannot append associated metadata when the track was never added. Call addMetadataTrackAssociatedWith:forIdentifier: before prepareToRecord.
nullptr IMU metadata
Info: The metadata append triggered the start for the asset writer. Are you sure this is what you want?
asyncWriteAssociatedMetadata
[%s associated with %s] metadata input not ready for more data, dropping samples
Cannot append audioSample <null>.
Cannot append stream type that hasn't been set up.
Could not append audio sample because it is nil
Current writer state does not support finishRecording.
finishRecording
Cannot finishRecording.
finishAndDrainFifoFirst
-[MOVStreamWriter finishAndDrainFifoFirst]
movstreamio.finish.waitqueue
Should finish recording but will drain fifo(s) first...
cancelRecording
forceFinishRecording
finishAVWriter
-[MOVStreamWriter finishAVWriter]_block_invoke
processCancelRecording
Late frames arrived from encoder. Drain fifos again...
processFinishRecording-checkIfFifoAreEmpty
Writing pending frame attachements for stream '%@'.
q24@?0@8@16
processFinishRecording
FINISHING!
checkForFinishing
-[MOVStreamWriter checkForFinishing]
[FIFO] Precheck All Fifo items written '%@'
Start Session by '%@' at %f
writeSampleBuffer
Exception occurred during writing %@ for stream '%@'. Dropping frame.
writeMetadataOfSample
Exception occurred during writing %@ for stream '%@'. Dropping sample.
writeMetadata
-[MOVStreamWriter encoderTypeForStream:]
configuration
AllowFrameReordering
-[MOVStreamWriter getWriterSettingsForStream:description:]
Quality
LossLess
MOVStreamWriter: Disable 'AllowFrameReordering' related to r50244907.
ap4x
Unsupported media type (%d) for stream '%@'.
Unable to use output settings (%@) for track '%@'.
Will add AVAssetWriterInput for stream '%@' with outputSettings: %@ 
 sourceFormatHint: %@
Error creating AVAssetWriterInput (%@) for track '%@'.
Unable to get metadata format description for stream: %@
Can't add stream and metadata inputs to the asset writer to stream: %@
Setup metadata track with identifier "%@"
Can't add smetadata input to the asset writer to stream: %@
Cannot setup metadata associated with %@: %@ stream doesn't exist
mdta/%@
Unable to get metadata format
movMetadataItems
T@"NSArray",&
criticalError
T@"NSError",&
fifoBufferCapacity
delegate
T@"<MOVStreamWriterDelegate>",W,V_delegate
state
T@"<MOVStreamWriterState>",&,V_state
defaultWritingBufferCapacity
defaultAudioWritingBufferCapacity
defaultMetadataWritingBufferCapacity
finishingTimeout
Td,V_finishingTimeout
baseMediaTimeScale
Ti,V_baseMediaTimeScale
T@"NSError",&,VcriticalError
customEncoderConfigDelegate
T@"<MOVStreamCustomEncoderConfigDelegate>",W,V_customEncoderConfigDelegate
T@"NSArray",&,VmovMetadataItems
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
MOVStreamWriter dealloc
Recording
ERROR CREATING PIXELBUFFERREFCOPY %d
Inconsistent height.
Inconsistent bytes per row.
Inconsistent width.
Error creating pixel buffer from pool (%d).
Cannot copyPixelBuffer, not matching plane count
Cannot copyPixelBuffer, not matching bytes per row
Cannot create pixel buffer transfer session
Cannot create pixel buffer pool
Cannot create new pixel buffer.
Cannot transfer pixel buffer
Cannot copy pixel buffer
transferSessionUsageDisabled
TB,V_transferSessionUsageDisabled
MOVStreamFrameConverter dealloc > release pool
Frame %f (%@)
pixelBuffer
T^{__CVBuffer=},R,V_pixelBuffer
timeStamp
Td,R,V_timeStamp
cmTimeStamp
T{?=qiIq},R,V_cmTimeStamp
context
T@,R,V_context
CVBytesPerRow
%@.%@
%@[%d]
Can't serialize object as JSON: %@
RawBayer
mdta/com.apple.MOVStreamIO.versionKey
mdta/com.apple.MOVStreamIO.defaultOptions
mdta/com.apple.MOVStreamIO.stateMetadataIdentifier
Unable to serialize MOVStream State metatdata as JSON: %@
Error joining Warhol-Buffer for RawBayer pixel buffer.
rawBayerMSBReplication
TB,N,V_rawBayerMSBReplication
Init
Finishing AVWriter
HEVCMonochrome
h264
HEVC
none
Depth
Color
FrontDepth
FrontColor
FrontIR
Got a Depth/IR stream which uses unknown version of SLIM (%d)
HEVCMonochrom
BackColorWide
BackColorTele
BackIR
BackDepth
Cancelled
mdta/custom.
mdta/com.apple.trackStreamType
mdta/com.apple.trackStreamEncoding
RawBayerFormat
ProRes4444
ProRes422
unknown
custom
mdta/com.apple.trackStreamPixelFormat
mdta/com.apple.trackStreamEncodedPixelFormat
mdta/com.apple.trackStreamRelatedToStream
mdta/com.apple.trackStreamRelationSpecifier
mdta/com.apple.trackTypeInfo
mdta/com.apple.exactBytesPerRow
mdta/com.apple.trackStreamAttachmentsSerializationMode
mdta/com.apple.RawBayerRearrangeType
Unable to serialize audio metatdata as PLIST: %@
Error: The metadata dictionary is not valid for XML v1.0 plist Format
Error: Cannot serialize metadata to plist
Unable to serialize depth metatdata as JSON: %@
%@%@
Can't create metadata format description...
Preparing Cancelling
Forcing Finish
Assert: %s - f: %s, l: %d
Frame size too small
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO-3.14/MOVStreamIO/VTEncoder/HEVCLosslessEncoder.mm
Assert: (%d) %s - f: %s, l: %d
VTCompressionSessionCreate failed
AllowFrameReordering: %d
Cannot check AllowFrameReordering status of encoding session. Assuming disabled.
VTCompressionSessionEncodeFrame failed
Custom video encoder configuration.
*-----------------------------------------------------------------------------*
Encoder Config >> kVTCompressionPropertyKey_Usage = %d
kVTCompressionPropertyKey_Usage failed
HEVC_Main_AutoLevel
HEVC_Main10_AutoLevel
HEVC_Main444_AutoLevel
HEVC_Main44410_AutoLevel
HEVC_MainStill_AutoLevel
HEVC_Monochrome10_AutoLevel
Profile passed unrecognized (%d). exit.
Encoder Config >> kVTCompressionPropertyKey_ProfileLevel = %@
VTVideoEncoderSetProperty failed
Encoder Config >> kVTCompressionPropertyKey_Priority = %d
kVTCompressionPropertyKey_Priority failed
Encoder Config >> kVTCompressionPropertyKey_AllowFrameReordering = %d
Encoder Config >> kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration = %f
VTVideoEncoderSetProperty kVTCompressionPropertyKey_MaxKeyFrameIntervalDuration failed
Encoder Config >> kVTCompressionPropertyKey_ExpectedFrameRate = %f
VTVideoEncoderSetProperty kVTCompressionPropertyKey_ExpectedFrameRate failed
EnableRCFW
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_EnableRCFW failed
EnableQPMod
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_EnableQPMod failed
InitialQPI
VTVideoEncoderSetProperty  my_kVTCompressionPropertyKey_InitialQPI failed
InitialQPP
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_InitialQPP failed
InitialQPB
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_InitialQPB failed
Encoder Config >> my_kVTCompressionPropertyKey_LossLess = %d
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_LossLess failed
Encoder Config >> kVTCompressionPropertyKey_RealTime = %d
VTVideoEncoderSetProperty kVTCompressionPropertyKey_RealTime failed
Encoder Config >> my_kVTCompressionPropertyKey_DebugMetadataSEI2 = %d
DebugMetadataSEI
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_DebugMetadataSEI2 failed
Encoder Config >> my_kVTCompressionPropertyKey_OutputBitDepth = %d
OutputBitDepth
VTVideoEncoderSetProperty my_kVTCompressionPropertyKey_OutputBitDepth failed
Cancelling
3.14.0
MIOBossMode
MIODisableFrameReordering
MIOBitrateMultiplier
MIOBitrateOverride
MIOForceColorLossless
MIOLogAppendTimeStamps
MIOLogWriterEvents
MIOLogReaderEvents
MIOForce10bitMonoByVT
MIOForceLossless8bitMonoByVT
MIOLogPrepareRecording
MIOSkipSourceHint
[WARNING] MOVStreamIO Debug Mode enabled. This could change the Framework behavior.
[WARNING] Default setting for '%@' was changed from '%@' to '%@'. This can affect your recordings!
sharedOptions
T@"MOVStreamOptions",R
disableFrameReordering
TB,R
bitrateMultiplier
Td,R
bitrateOverride
forceColorLossless
logAppendTimeStamps
logWriterEvents
logReaderEvents
force10bitMonoByVT
forceLossless8bitMonoByVT
logPrepareRecording
skipSourceHint
DeviceMotion
RawGyro
RawAccel
URL must be a file URL type. (%@)
File doesn't exist. (%@)
No MOVStreamReaderDelegate set.
Invalid file path. (%@)
MOVStreamReader asset is nil
Time to reset to is invalid
Unknown
Unknown-%lu
Detected %@ stream
Unknown stream type detected.
Undefined pixel format for stream '%@'. Ignoring stream.
Can't add video track (%@) to the AVAssetReader.
Can't add metadata track (%@) to the AVAssetReader.
Detected %@ IMU data type
Unknown IMU data type, ignoring: '%@'
Can't add audio track (%@) to the AVAssetReader.
metadataKey: %@ metadataId: %@
No valid streams in the resource.
Start Reading (AVAssetReader) Error: %@  Status: %ld
No or invalid MOVStreamIO version information in MOV!
-[MOVStreamReader movVersionCheck]
/Library/Caches/com.apple.xbs/Sources/MOVStreamIO_Sim/MOVStreamIO-3.14/MOVStreamIO/Reader/MOVStreamReader.mm
versionError == nil
MOV created with a newer MOVStreamIO version '%@' (current '%@')!
v32@?0@"AVMetadataItem"8Q16^B24
File doesn't contain stream '%@'.
File doesn't contain data for requested stream '%@'.
Metadata PLIST Read error: %@
Metadata JSON Read error: %@
 Unknown AttachmentSerializationMode = %d for frame metadata!
Unknown metadata item in attachments track: %@
Pixel buffer attachments don't match by timestamps (delta: %f). Stream: '%@'
        Frame %f   Atta: %f
-[MOVStreamReader copyNextFrameForStream:timestamp:error:]
m_assetReader.error != nil
-[MOVStreamReader grabNextAudioSampleForStream:timestamp:error:]
-[MOVStreamReader grabNextMetadataItemsOfTrackAssociatedWith:withIdentifier:timeRange:error:]
No AVAssetReaderOutputMetadataAdaptor found for metadata stream: '%@'
-[MOVStreamReader grabNextTimedMetadataGroupOfStream:error:]
-[MOVStreamReader grabNextMetadataOfStream:timeRange:error:]
MetadataKeyTable
MetadataKeyValue
l010OutputFormatRAW14L016
T@"<MOVStreamReaderDelegate>",W,V_delegate
Error joining Warhol-Buffer for Companded-RawBayer pixel buffer.
Failed
Cannot create pixel buffer pool for RawBayer stream.
duration = %5.3f msec, min/max/avg/count = %5.3f/%5.3f/%5.3f/%d
No sample buffer received. VTCompressionSession failed with status: %d
Encoder not configured yet.
lastEncodingStatus
TI,R,V_lastEncodingStatus
lastEncodingInfoFlags
TI,R,V_lastEncodingInfoFlags
frameReorderingEnabled
customEncoderConfig
TB,V_customEncoderConfig
TB,N,V_l010OutputFormatRAW14L016
Preparing
Finished
Draining FIFO
movStreamIOErrorWithDomain:message:code:
readerErrorWithMessage:code:
sharedOptions
logReaderEvents
streamErrorWithMessage:code:
logWriterEvents
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
populateReaderError:message:code:
readerWarningWithMessage:code:
populateStreamError:message:code:
writerWarningWithMessage:code:
UTF8String
lengthOfBytesUsingEncoding:
numberWithUnsignedLong:
objectForKeyedSubscript:
processInfo
isOperatingSystemAtLeastVersion:
isEncoderAvailableWithEncoderName:
stringWithFormat:
exceptionWithName:reason:userInfo:
countByEnumeratingWithState:objects:count:
objectForKey:
isEqualToString:
valueWithBytes:objCType:
getValue:
mutableCopy
valueWithCGAffineTransform:
setObject:forKey:
copy
numberWithUnsignedInt:
transformAngleFromVideoOrientation:
formatForPixelBuffer:
getPreferredPlaneAlignmentSize
getPreferredBytesPerRowAlignmentSize
isEncoderAvailableForEncoderType:
getDefaultBitrateForVideoDimension:atExpectedFramerate:forEncoderType:
CGAffineTransformValueFromNSValue:
addTransform:toConfiguration:
addTrackTypeInfo:toConfiguration:
monochrome10bitHEVCLosslessEncoderConfig
monochrome8bitHEVCLosslessEncoderConfig
monochrome8bitHEVCEncoderConfig
monochrome8bitHEVCEncoderConfigWithBitrate:
color8bitHEVCWithAlphaEncoderConfig
color8bitHEVCWithAlphaEncoderConfigWithBitrate:
colorHEVCLosslessEncoderConfig
colorHEVCEncoderConfig
colorWithAlphaLossless8bitHEVCEncoderConfig
colorH264EncoderConfig
colorHEVCEncoderConfigWithBitrate:
colorH264EncoderConfigWithBitrate:
slimEncoderConfig
slimXEncoderConfig
noneEncoderConfig
sampleBufferConfigWithPixelFormat:
audioNoneEncoderConfig
customEncoderConfig
customEncoderConfigWithEmbeddedConfiguration:
monochrome10bitHEVCEncoderConfig
monochrome10bitHEVCEncoderConfigWithBitrate:
bundleForClass:
objectForInfoDictionaryKey:
initWithVersionString:error:
init
componentsSeparatedByString:
count
objectAtIndexedSubscript:
isAllDigitsInString:
intValue
decimalDigitCharacterSet
rangeOfCharacterFromSet:
stringByTrimmingCharactersInSet:
invertedSet
length
major
minor
bugfix
modifier
compare:
compareToVersion:
getVersionAsString
isEqualToVersion:
description
.cxx_destruct
_major
_minor
_bugfix
_modifier
setOriginalPixelFormat:
originalPixelFormat
shouldRemovePaddingOfPixelBuffer:metadata:
pixelBufferWithoutPaddingFromPixelBuffer:error:
shouldChangeBytesPerRowOfPixelBuffer:
exactBytesPerRow
pixelBufferWithExactByterPerRow:fromPixelBuffer:error:
dealloc
minimumBytesPerRowForPixelBuffer:
removePadding
initWithTargetWidth:height:format:bytesPerRow:
convertPixelBuffer:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
initWithOriginalPixelFormat:
processedPixelBufferFrom:metadata:error:
setRemovePadding:
processedPixelFormat
setExactBytesPerRow:
_converter
addObject:
initWithCodecType:encoderSpecification:sessionProperties:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
unsignedIntValue
codecType
encoderSpecification
sessionProperties
dataWithPropertyList:format:options:error:
writeToFile:atomically:
isEncoderAvailableOfType:withId:
encoderIdsForType:
monochrome10BitEncoderConfigUsingAVEWithBitrate:
initWithContentsOfFile:error:
writeToFile:error:
setCodecType:
setEncoderSpecification:
setSessionProperties:
_codecType
_encoderSpecification
_sessionProperties
setCriticalError:
processFinishRecording
canConfigure:
canAppendData:
canWriteData:
stopWriterWhenFifosAreEmpty:
canFinishRecording:
prepareRecording:
prepareFinished:
finishRecording:
forceFinishRecording:
nextFinishStep:
cancelRecording:
finishedCancelRecording:
criticalErrorOccurred:context:
activateWithContext:
name
writerStatus
streamWriter:changedStatusTo:
streamWriterDidFinishPreparing
streamWriterDidFinishRecording
streamWriterDidFailWithError:
criticalError
streamWriterDidCancelRecording:
streamWriter:writingSessionDidStartAtTime:stream:mediaType:
writerStatusChanged:writerDelegate:delegateCallbackQueue:
writingSessionDidStartAtTime:streamId:mediaType:writerDelegate:delegateCallbackQueue:
sampleBuffer
setSampleBuffer:
metadata
setMetadata:
_sampleBuffer
_metadata
defaultManager
path
fileExistsAtPath:isDirectory:
activateNewState:byEvent:
removeIsReadyObservers
isAudioStream:
willChangeValueForKey:
didChangeValueForKey:
delegate
removeItemAtURL:error:
informDelegateAboutError:
setDelegate:
relateStream:toStream:relationSpecifier:error:
addMetadataTrack:formatDescription:
defaultMetadataWritingBufferCapacity
valueForKey:
verifyExactBytesPerRow:width:height:pixelFormat:
defaultAudioWritingBufferCapacity
defaultWritingBufferCapacity
defaultFactory
preProcessorForFormat:recordingConfiguration:
formatDescription
addTrackForStreamWithIdentifier:formatDescription:recordingConfiguration:
setTrackMetadata:forStream:error:
setTrackMetadata:forMetadataStream:error:
setMovMetadataItems:
logPrepareRecording
initWithURL:fileType:error:
setupAssetWriterStreamInputsWithError:
setupMetadataInputsWithError:
setupAssociatedMetadataInputsWithError:
getMOVStreamIOMetadataItem
addObjectsFromArray:
startWriting
addIsReadyObservers
error
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
boolValue
stringWithUTF8String:
informDelegateAboutIsReady:forStream:
consumeSamplesOfVideoAudioStream:
consumeMetadatOfMetadataStream:
logAppendTimeStamps
isPixelBufferRawBayer:
isPixelBufferCompandedRawBayer:
attachmentSerializationModeForStream:withDefaultMode:fromMap:
getMetadataGroupForBuffer:stream:presentationTime:serializationMode:
processedPixelBufferCopyOf:streamData:error:
encodeFrame:pst:frameProperties:metadata:
formatDescriptionForPixelBuffer:streamData:
newSampleReady:metadata:presentationTime:streamKey:streamId:isAudioSample:
getPixelFormatForStream:fromMap:
encoderTypeForStream:
getJsonFriendlyCopy:
dataWithJSONObject:options:error:
getPlistFriendlyCopyOf:
metadataItem
setIdentifier:
setDataType:
setExtraAttributes:
setValue:
arrayWithObjects:count:
initWithItems:timeRange:
firstObject
removeObjectAtIndex:
frameReorderingEnabled
streamWriter:encodedBuffer:pts:metadata:forStream:
lastEncodingStatus
lastEncodingInfoFlags
customEncoderConfigDelegate
streamWriter:overrideVideoEncoderSpecificationForStream:
streamWriter:configureSessionOverride:forStream:
streamWriter:codecTypeOverrideForStream:
timeRange
queueMetadataGroup:stream:
initWithCapacity:
asyncWriteAssociatedMetadata:metadataKey:associatedStreamKey:
startSessionAtSourceTime:
isReadyForMoreMediaData
appendTimedMetadataGroup:
getAudioMetadataForBuffer:
checkIfFifoAreEmpty
finishingTimeout
state
informDelegateAboutFinishingTimeout
forceFinishRecording
removeAllObjects
clearAllFifoQueues
closeEncoder
markAsFinished
finishAVWriter
finishWritingWithCompletionHandler:
status
cancelWriting
fileExistsAtPath:
removeItemAtPath:error:
sortedArrayUsingComparator:
writeVideoFrameStreamAttachmentsData:toMetadataAdaptor:ofStream:
checkForFinishing
writeMetadata:forStreamId:
isReadyForMoreDataForStreamId:fromMap:
writeSampleBuffer:andMetadata:forStreamId:
appendSampleBuffer:
arrayWithObject:
doubleValue
integerValue
applyBitrateModifiersTo:
getExpectedFrameRateForStream:
bitrateMultiplier
bitrateOverride
numberWithInt:
getBitsPerSecondForColorStream:dimensions:
numberWithDouble:
disableFrameReordering
forceLossless8bitMonoByVT
initWithExpectedFrameRate:forStream:delegate:
forceColorLossless
force10bitMonoByVT
initForStream:configuration:delegate:
setCustomEncoderConfig:
settings
addEntriesFromDictionary:
getWriterSettingsForStream:description:
canApplyOutputSettings:forMediaType:
baseMediaTimeScale
trackFormatDescriptionFromStreamData:
skipSourceHint
initWithMediaType:outputSettings:sourceFormatHint:
setMediaTimeScale:
getVideoTransformForStream:
setTransform:
setExpectsMediaDataInRealTime:
getTrackMetadataForStream:
getTrackEncodingMetadataForStream:fromMap:
getTrackInputPixelFormatMetadataForStream:fromMap:
getTrackEncodedPixelFormatMetadataForStream:fromMap:
getTrackMetadataForAttachmentsSerializationMode:fromMap:
getTrackMetadataForTrackTypeInfo:fromMap:
createRelatedToStreamMetadata:
createRelationSpecifierMetadata:
getTrackMetadataForExactBytesPerRow:fromMap:
isPixelFormatRawBayer:
getTrackMetadataForRawBayerRearrangeType:fromMap:
customTrackMetadataForStream:fromMap:
marksOutputTracksAsEnabledForStream:fromMap:
setMarksOutputTrackAsEnabled:
createMetadataFormatDescription:
addTrackAssociationWithTrackOfInput:type:
assetWriterInputMetadataAdaptorWithAssetWriterInput:
canAddInput:
addInput:
identifier
customMetadataTrackMetadataForStream:fromMap:
setDefaultWritingBufferCapacity:
setDefaultAudioWritingBufferCapacity:
setDefaultMetadataWritingBufferCapacity:
prepareToRecordWithMovieMetadata:
streamWriterEncounteredAnError:
streamWriter:inputForStream:changedIsReadyStatusTo:
streamWriterReachedFinishingTimeout:
encoder:encodedSampleBuffer:metadata:presentationTime:streamId:
encoder:encodingFailedForStream:
encoder:overrideVideoEncoderSpecificationForstreamId:
encoder:configureSessionOverride:streamId:
encoder:codecTypeOverrideForstreamId:
executePrepareToRecordWithMovieMetadata:
finishAndDrainFifoFirst
deleteMOVFile
deleteFileOnCancel
processCancelRecording
processForceFinishRecording
movMetadataItems
setVideoTransformFromOrientation:
addTrackForStreamWithIdentifier:formatDescription:encoderConfig:
prepareToRecord
setTrackMetadata:forStream:
setTrackMetadata:forMetadataStream:
relateStream:toStream:relationSpecifier:
fifoBufferSizeForStream:
fifoBufferCapacity
setFifoBufferCapacity:
initWithURL:andExpectedFrameRate:
setWritingBufferCapacity:forStream:
setWritingBufferCapacity:forAudioStream:
setWritingBufferCapacity:forMetadataStream:
writingBufferCapacityForStream:
writingBufferCapacityForAudioStream:
writingBufferCapacityForMetadataStream:
writingBufferUsageForStream:
writingBufferUsageForAudioStream:
writingBufferUsageForMetadataStream:
setDelegate:callbackQueue:
setExpectedFrameRate:
setVideoTransform:
setRealTimeCapture:
addMetadataTrack:
addMetadataTrackAssociatedWith:withIdentifier:withFormatDescription:
addAudioTrackForStreamWithIdentifier:audioFormat:additionalSettings:
observeValueForKeyPath:ofObject:change:context:
attachmentSerializationModeForStream:withDefaultMode:
marksOutputTracksAsEnabledForStream:
appendPixelBuffer:presentationTime:toStreamId:
appendVideoSampleBuffer:attachmentMetadata:streamId:
appendVideoSampleBuffer:attachments:streamId:
appendTimeMetadataGroup:toStream:
appendMetadata:withTimeStamp:toStream:
appendMetadata:associatedWith:toStream:
appendAudioBuffer:forStream:
finishRecording
cancelRecording
setFinishingTimeout:
setBaseMediaTimeScale:
setCustomEncoderConfigDelegate:
setState:
.cxx_construct
m_delegateCallbackQueue
m_writingQueue
m_processingQueue
m_finisDrainFifohWaitSemaphore
m_writeURL
m_assetWriter
m_expectedFrameRate
m_realtime
m_haveStartedSession
m_videoTransform
m_streamDataMap
m_orderedStreamNames
m_metadataDataMap
m_orderedMetadataStreamNames
m_associatedMetadataDataMap
m_lastPtsForStream
m_observingIsReady
_state
_defaultWritingBufferCapacity
_defaultAudioWritingBufferCapacity
_defaultMetadataWritingBufferCapacity
_baseMediaTimeScale
_finishingTimeout
_customEncoderConfigDelegate
_delegate
createPixelBufferAttributesWithWidth:height:extendedPixelsPerRow:pixelFormat:bytesPerRowAlignment:planeAlignment:
createPixelBufferAttributesWithWidth:height:pixelFormat:bytesPerRow:
splitBayerBuffer:intoWarholPixelBuffer:shiftBitsLeftBy:
splitBayerBuffer:intoYUVPixelBuffer:shiftBitsLeftBy:
joinYUVBuffer:intoRawBayerPixelBuffer:shiftBitsLeftBy:msbReplication:
splitCompandedBayerBuffer:intoCompandedWarholPixelBuffer:
createRawPixelBufferWithWidth:height:extendedRows:extendedPixelsPerRow:pixelFormat:bytesPerRowAlignment:planeAlignment:bufferCacheMode:
isPixelFormatCompandedRawBayer:
cStringUsingEncoding:
copyData:toPlanarPixelBuffer:toPlane:
bytes
copyPixelBufferData:ofPlane:
dataWithLength:
mutableBytes
createRawPixelBufferWithWidth:height:pixelFormat:bytesPerRow:
newPixelBufferRefCopy:
copyFromPixelBuffer:toPixelBuffer:andShiftBits:
createNewL010PixelBufferPoolWithReferencePixelBuffer:minimumBufferCount:
createNewL008PixelBufferPoolWithReferencePixelBuffer:minimumBufferCount:
newWarholBufferFromRawBayerPixelBuffer:withPixelBufferPool:
newYUVBufferFromRawBayerPixelBuffer:withPixelBufferPool:
newRawBayerBufferFromYUVPixelBuffer:withPixelBufferPool:msbReplication:
newWarholBufferFromCompandedRawBayerPixelBuffer:withPixelBufferPool:
newWarholBufferFromRawBayerPixelBuffer:
fillPlaneOfPixelBuffer:planeIndex:withValue:
writeBuffer:ofSize:toFile:
joinWarholBuffer:intoBayerBuffer:shiftBitsRightBy:msbReplication:
joinCompandedWarholBuffer:intoCompandedBayerBuffer:
verticallySplitPixelBuffer:intoTopPixelBuffer:bottomPixelBuffer:
concatPixelBuffer:withPixelBuffer:targetPixelBuffer:
extendedPixelsPerRowOfPixelBuffer:
createPixelBufferPoolWithWidth:height:format:extendedPixelsPerRow:minBufferCount:
createPixelBufferPoolWithWidth:height:format:bytesPerRow:minBufferCount:
pixelBufferFromPool:
copyPixelBuffer:toPixelBuffer:bytesPerPixel:
copyData:toNonPlanarPixelBuffer:
copyNonPlanarPixelBufferData:
readFrameFromFile:width:height:pixelFormat:
writeBuffer:toFile:
create4444AYpCbCr16PixelBufferFillAlphaWithData:width:height:
copyMonochromeBuffer:toAlphaChannelOfBuffer:
copyuint16Data:toAlphaChannelOfBuffer:
copyAlphaChannelOfBuffer:touint16Data:
copyAlphaChannelOfBuffer:toMonochromeBuffer:
initWithTargetWidth:height:format:extendedPixelsPerRow:
transferSessionUsageDisabled
setTransferSessionUsageDisabled:
_pool
_transferSession
_transferSessionUsageDisabled
initWithPixelBuffer:timeStamp:context:
pixelBuffer
timeStamp
cmTimeStamp
context
_pixelBuffer
_timeStamp
_context
_cmTimeStamp
getPixelFormatFromStreamData:
inputPixelFormatFromStreamData:
encodedPixelFormatFromStreamData:
setValue:forKey:
isValidJSONObject:
isValidJSONObject:path:
createL010FormatDescriptionFromL016FormatDescription:
createL010FormatDescriptionFromRawBayerFormatDescription:
createxf20FormatDescriptionFromRawBayerFormatDescription:
createL008FormatDescriptionFromCompandedRawBayerFormatDescription:
rawBayerMSBReplication
initWithOriginalPixelFormat:rawBayerMSBReplication:
initWithOriginalPixelFormat:l010OutputFormatRAW14L016:
l010OutputFormatRAW14L016
postProcessorFromReader:originalPixelFormat:encodedFormat:encoderType:streamId:
currentOptions
localizedDescription
createHEVCCompatiblePixelBuffer:
setRawBayerMSBReplication:
_rawBayerMSBReplication
playbackPixelFormatForTrack:ofStream:delegate:
formatDescriptions
pixelFormatForUnknownTrackOfReader:
streamIdFromTrackStreamTypeIdentifier:
playbackPixelFormatForTrack:ofStream:streamEncodingType:inputPixelFormat:delegate:
propertyList:isValidForFormat:
overrideVideoEncoderSpecification
codecTypeOverride
configureSessionOverride:
registerStandardDefaults
localDefaults
standardUserDefaults
standardDefaultValues
dictionaryWithCapacity:
allKeys
checkHasValue:changedForKey:
registerDefaults:
checkBossMode
_debugMode
initWithURL:delegate:error:
isFileURL
URLAssetWithURL:options:
movVersionCheck
resetReaderTo:error:
fileURLWithPath:
initWithContentsOfURL:delegate:error:
cancelReading
initWithAsset:error:
tracksWithMediaType:
value
longValue
reader:bytesPerRowForStream:storedValue:
reader:pixelFormatForStream:suggestedFormat:
preferredTransform
assetReaderTrackOutputWithTrack:outputSettings:
canAddOutput:
addOutput:
findAllAssociatedMetadataTrackInAsset:forTrack:
getKeyFromMetadataTrack:
initWithTrack:outputSettings:
initWithAssetReaderTrackOutput:
containsObject:
setTimeRange:
startReading
movstreamIOMetadataForMovie
reader:didReceiveWarning:
containsStream:
enumerateObjectsUsingBlock:
JSONObjectWithData:options:error:
rangeOfString:
stringByReplacingOccurrencesOfString:withString:
containsMetadataStream:
naturalSize
outputSettings
nominalFrameRate
minFrameDuration
duration
trackMetadataForStream:
arrayWithCapacity:
getMetadataStreamsAssociatedTo:error:
nextTimedMetadataGroup
items
copyNextSampleBuffer
getFrameRateForStream:
grabNextMetadataOfStream:timeRange:error:
allValues
associatedTracksOfType:
initWithData:encoding:
initWithURL:error:
getMetadataStreamsAssociatedTo:
getUnknownMetadataStreamsAssociatedTo:
grabNextMetadataOfStream:timeRange:
pixelFormatForStream:
setL010OutputFormatRAW14L016:
resetReader:
endOfStream
initWithContentsOfFile:delegate:error:
transformForStream:
metadataForMovie
getRelatedStreamForStreamId:
getRelationSpecifierForStreamId:
getStreamsRelatedToStream:
trackMetadataForMetadataStream:
getSizeForStream:
getOutputPixelFormatForStream:
trackTypeInfoForStream:
trackForStream:
metadataTrackForStream:
getMinFrameDurationForStream:
removePixelBufferPadding:forStream:
getAllStreams
getAllAudioStreams
trackMetadataForAudioStream:
containsAudioStream:
getAllMetadataStreams
copyNextFrameForStream:timestamp:error:
grabNextAudioSampleForStream:timestamp:error:
grabNextMetadataItemsOfTrackAssociatedWith:withIdentifier:timeRange:error:
grabNextTimedMetadataGroupOfStream:error:
hasFinishedReading
hasReachedEndOfStream:
hasReachedEndOfMetadataStream:
findAssociatedMetadataTrackInAsset:forTrack:forKey:
m_asset
m_assetReader
m_orderedAudioStreamNames
_l010OutputFormatRAW14L016
writeSampleBuffer:pts:metadata:withStatus:andFlags:
skipFrameWithStatus:andFlags:
setupEncoderWithWidth:andHeight:imageFormat:andFramerate:
applySessionProperties:
useQPEncoding:
m_encoder
m_encoderInitialized
m_qpValue
m_stream
m_delegate
m_config
_customEncoderConfig
_lastEncodingStatus
_lastEncodingInfoFlags
MOVStreamIO
MOVStreamIOUtility
Version
DefaultPostProcessor
MOVStreamPostProcessor
NSObject
MOVStreamEncoderConfig
MOVStreamWriterStateFinishQueues
MOVStreamWriterState
Delegate
SampleBufferAndMetadata
MOVStreamWriter
VideoEncoderInterfaceDelegate
MOVStreamWriterStateContext
MOVStreamWriterDeprecated
MOVStreamWriterDeprecationNominates
MOVStreamWriterStateRecording
PixelBufferUtility
PreProcessorFactory
MOVStreamFrameConverter
MOVStreamFrame
DefaultPreProcessor
MOVStreamPreProcessor
Private
PostProcessorFactory
L016Raw14PreProcessor
RawBayerFromYUVPostProcessor
MOVStreamWriterStateInit
MOVStreamWriterStateFinishAVWriter
Legacy
MOVStreamWriterStateCancelled
TrackMetadata
MOVStreamWriterStatePrepareCancelling
MOVStreamWriterStateForceFinish
MOVStreamWriterStateCancelling
MOVStreamOptions
MOVStreamReader
MOVStreamReaderDeprecationNominates
MOVStreamReaderDeprecated
CompandedRawBayerPostProcessor
MOVStreamWriterStateFailed
RawBayerTo1stPlaneYUVPreProcessor
CompandedRawBayerPreProcessor
VideoEncoderInterface
EncoderConfigDelegate
L016Raw14PostProcessor
MOVStreamWriterStatePreparing
RawBayerPostProcessor
RawBayerPreProcessor
MOVStreamWriterStateFinished
MOVStreamWriterStateDrainFifo
RawBayerToYUVPreProcessor
@32@0:8@16q24
v40@0:8^@16@24q32
@40@0:8@16@24q32
d20@0:8i16
^{opaqueCMFormatDescription=}24@0:8^{__CVBuffer=}16
Q16@0:8
B20@0:8i16
B24@0:8@16
Q36@0:8{?=ii}16d24i32
@64@0:8{CGAffineTransform=dddddd}16
{CGAffineTransform=dddddd}24@0:8@16
@72@0:8{CGAffineTransform=dddddd}16@64
@32@0:8Q16@24
@16@0:8
@24@0:8Q16
@20@0:8I16
@24@0:8@16
@32@0:8@16^@24
q24@0:8@16
I16@0:8
v16@0:8
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^{__CVBuffer=}40@0:8^{__CVBuffer=}16@24^@32
v20@0:8B16
v24@0:8Q16
v20@0:8I16
^{__CVBuffer=}40@0:8^{__CVBuffer=}16@"NSDictionary"24^@32
Q24@0:8^{__CVBuffer=}16
B24@0:8^{__CVBuffer=}16
B32@0:8^{__CVBuffer=}16@24
^{__CVBuffer=}32@0:8^{__CVBuffer=}16^@24
^{__CVBuffer=}40@0:8Q16^{__CVBuffer=}24^@32
@"MOVStreamFrameConverter"
B28@0:8I16@20
@36@0:8I16@20@28
B32@0:8@16^@24
v24@0:8@16
@"NSDictionary"
@32@0:8@16@24
q16@0:8
B24@0:8@"<MOVStreamWriterStateContext>"16
@"<MOVStreamWriterState>"24@0:8@"<MOVStreamWriterStateContext>"16
@"<MOVStreamWriterState>"32@0:8@"NSError"16@"<MOVStreamWriterStateContext>"24
v24@0:8@"<MOVStreamWriterStateContext>"16
v40@0:8q16@24@32
v72@0:8{?=qiIq}16@40q48@56@64
^{opaqueCMSampleBuffer=}16@0:8
v24@0:8^{opaqueCMSampleBuffer=}16
^{opaqueCMSampleBuffer=}
@"AVTimedMetadataGroup"
v72@0:8@16^{opaqueCMSampleBuffer=}24@32{?=qiIq}40@64
v32@0:8@16@24
B40@0:8@16^{OpaqueVTCompressionSession=}24@32
I32@0:8@16@24
v72@0:8@"VideoEncoderInterface"16^{opaqueCMSampleBuffer=}24@"AVTimedMetadataGroup"32{?=qiIq}40@"NSString"64
v32@0:8@"VideoEncoderInterface"16@"NSString"24
@"NSDictionary"32@0:8@"VideoEncoderInterface"16@"NSString"24
B40@0:8@"VideoEncoderInterface"16^{OpaqueVTCompressionSession=}24@"NSString"32
I32@0:8@"VideoEncoderInterface"16@"NSString"24
v24@0:8@"NSArray"16
@"NSArray"16@0:8
@"NSError"16@0:8
v24@0:8@"NSError"16
v40@0:8@16r^{opaqueCMFormatDescription=}24@32
v40@0:8@"NSString"16r^{opaqueCMFormatDescription=}24@"NSDictionary"32
B32@0:8@16@24
B40@0:8@16@24@32
Q24@0:8@16
B32@0:8@"NSDictionary"16@"NSString"24
B40@0:8@"NSString"16@"NSString"24@"NSString"32
Q24@0:8@"NSString"16
@32@0:8@16d24
B24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}}16
v32@0:8Q16@24
B24@0:8d16
B64@0:8{CGAffineTransform=dddddd}16
B48@0:8@16@24@32^@40
B20@0:8B16
v32@0:8@16r^{opaqueCMFormatDescription=}24
v40@0:8@16@24^{opaqueCMFormatDescription=}32
v40@0:8@16@24@32
B40@0:8@16@24^@32
v48@0:8@16@24@32^v40
i44@0:8{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16i40
B40@0:8{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16
v56@0:8^{__CVBuffer=}16{?=qiIq}24@48
v40@0:8^{opaqueCMSampleBuffer=}16@24@32
v92@0:8^{opaqueCMSampleBuffer=}16@24{?=qiIq}32{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}56@80B88
v56@0:8@16{?=qiIq}24@48
v72@0:8@16{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}48
v32@0:8^{opaqueCMSampleBuffer=}16@24
d24@0:8@16
Q32@0:8@16{?=ii}24
Q24@0:8Q16
i24@0:8@16
@32@0:8@16^{opaqueCMFormatDescription=}24
v24@0:8^@16
v40@0:8@16^{opaqueCMFormatDescription=}24@32
v28@0:8B16@20
d16@0:8
v24@0:8d16
i16@0:8
v20@0:8i16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_semaphore>"
@"NSURL"
@"AVAssetWriter"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
{map<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >="__begin_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_cap_"{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >="__value_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}
{map<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > > > > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > > >, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<std::__1::basic_string<char>, CMTime, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CMTime> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, CMTime>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CMTime>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, CMTime> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, CMTime>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CMTime>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
@"<MOVStreamWriterState>"
@"NSArray"
@"NSError"
@"<MOVStreamCustomEncoderConfigDelegate>"
@"<MOVStreamWriterDelegate>"
^{__CVBuffer=}48@0:8I16I20I24I28i32I36I40I44
^{__CVBuffer=}32@0:8I16I20i24I28
^{__CFDictionary=}32@0:8I16I20i24I28
^{__CFDictionary=}40@0:8I16I20I24i28I32I36
^{__CVBuffer=}24@0:8^{__CVBuffer=}16
B36@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32
^{__CVPixelBufferPool=}32@0:8^{__CVBuffer=}16Q24
^{__CVBuffer=}32@0:8^{__CVBuffer=}16^{__CVPixelBufferPool=}24
^{__CVBuffer=}36@0:8^{__CVBuffer=}16^{__CVPixelBufferPool=}24B32
B32@0:8^{__CVBuffer=}16i24S28
B20@0:8I16
v40@0:8r*16Q24@32
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24i32B36
B32@0:8^{__CVBuffer=}16^{__CVBuffer=}24
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24^{__CVBuffer=}32
^{__CVPixelBufferPool=}52@0:8Q16Q24I32Q36Q44
^{__CVBuffer=}24@0:8^{__CVPixelBufferPool=}16
B40@0:8^{__CVBuffer=}16^{__CVBuffer=}24Q32
B32@0:8@16^{__CVBuffer=}24
B40@0:8@16^{__CVBuffer=}24Q32
@24@0:8^{__CVBuffer=}16
@32@0:8^{__CVBuffer=}16Q24
^{__CVBuffer=}36@0:8@16I24I28I32
^{__CVBuffer=}40@0:8^{__CFData=}16Q24Q32
B32@0:8^S16^{__CVBuffer=}24
B32@0:8^{__CVBuffer=}16^S24
@32@0:8^{opaqueCMFormatDescription=}16@24
@44@0:8Q16Q24I32Q36
^{__CVPixelBufferPool=}
^{OpaqueVTPixelTransferSession=}
@40@0:8^{__CVBuffer=}16d24@32
^{__CVBuffer=}16@0:8
{?=qiIq}16@0:8
^{__CVBuffer=}
{?="value"q"timescale"i"flags"I"epoch"q}
^{__CVBuffer=}40@0:8^{__CVBuffer=}16^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}}24^@32
r^{opaqueCMFormatDescription=}24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}}16
r^{opaqueCMFormatDescription=}32@0:8^{__CVBuffer=}16^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}}24
I24@0:8^{StreamRecordingData=^{opaqueCMFormatDescription}B@@@@@@@Q@@^{__CVPixelBufferPool}@@@{?=qiIq}}16
^{opaqueCMFormatDescription=}24@0:8^{opaqueCMFormatDescription=}16
B44@0:8Q16Q24Q32I40
@48@0:8@16I24I28@32@40
@24@0:8I16B20
i52@0:8@16@24@32I40@44
i40@0:8@16@24@32
@24@0:8^{opaqueCMSampleBuffer=}16
B32@0:8@16^{map<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}24
@60@0:8^{__CVBuffer=}16@24{?=qiIq}32i56
B48@0:8{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16^{map<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}40
i52@0:8{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16i40^{map<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}44
@32@0:8@16^{map<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}24
@32@0:8@16^{map<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::MetadataRecordingData>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}24
r^{opaqueCMFormatDescription=}24@0:8@16
I32@0:8@16^{map<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamRecordingData>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}24
@40@0:8@16@24^@32
@32@0:8@16^{?={?=qiIq}{?=qiIq}}24
I24@0:8@16
@32@0:8@"NSURL"16^@24
@40@0:8@"NSURL"16@"<MOVStreamReaderDelegate>"24^@32
@"NSArray"24@0:8@"NSString"16
@"NSArray"32@0:8@"NSString"16^{?={?=qiIq}{?=qiIq}}24
I24@0:8@"NSString"16
B24@0:8^@16
B48@0:8{?=qiIq}16^@40
{CGSize=dd}24@0:8@16
{?=qiIq}24@0:8@16
^{__CVBuffer=}40@0:8@16^{?=qiIq}24^@32
^{opaqueCMSampleBuffer=}40@0:8@16^{?=qiIq}24^@32
@48@0:8@16@24^{?={?=qiIq}{?=qiIq}}32^@40
@40@0:8@16^{?={?=qiIq}{?=qiIq}}24^@32
@40@0:8@16@24@32
@"AVURLAsset"
@"AVAssetReader"
{map<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, (anonymous namespace)::StreamReadingData>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
@"<MOVStreamReaderDelegate>"
B24@0:8^{OpaqueVTCompressionSession=}16
@"NSDictionary"16@0:8
@40@0:8d16@24@32
v36@0:8i16i20i24d28
v64@0:8^{__CVBuffer=}16{?=qiIq}24^{__CFDictionary=}48@56
v24@0:8i16I20
v64@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24@48i56I60
^{HEVCLosslessEncoder=@iid^{OpaqueVTCompressionSession}{EncoderConfig=iiiidBBBBBi}{?=qiIq}IIIBB}
@"<VideoEncoderInterfaceDelegate>"
@"MOVStreamEncoderConfig"
