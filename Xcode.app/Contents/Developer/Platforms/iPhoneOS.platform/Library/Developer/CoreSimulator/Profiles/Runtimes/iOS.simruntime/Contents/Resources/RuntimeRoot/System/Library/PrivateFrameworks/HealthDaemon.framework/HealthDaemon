payload
binary_samples
data_id
INTEGER PRIMARY KEY
BLOB
HDBinarySampleEntity.m
Subclasses must override %s
+[HDBinarySampleEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
INSERT INTO %@ (%@, %@) VALUES (?, ?)
@"NSString"8@?0
v16@?0^{sqlite3_stmt=}8
HDCloudSyncParallelOperation.m
Invalid parameter not satisfying: %@
self.status == HDCloudSyncOperationStatusPending
v16@?0@"HDCloudSyncOperation"8
v24@?0@"HDCloudSyncOperation"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
operations
T@"NSArray",R,C
%@ %@
resourceType
identifier
hasResourceType
TB,R,N
T@"NSString",&,N,V_resourceType
hasIdentifier
T@"NSString",&,N,V_identifier
daemon
T@"HDDaemon",W,N,Vdaemon
healthDaemon
T@"<HDHealthDaemon>",W,N,V_healthDaemon
healthDatabase
T@"<HDHealthDatabase>",&,N,VhealthDatabase
healthSourceManager
T@"HDSourceManager",&,N,VhealthSourceManager
healthDeviceManager
T@"HDDeviceManager",&,N,VhealthDeviceManager
dataCollectionManager
T@"HDDataCollectionManager",&,N,V_dataCollectionManager
userCharacteristicsManager
T@"HDUserCharacteristicsManager",&,N,V_userCharacteristicsManager
activityCacheManager
T@"HDActivityCacheManager",R,N
CloudSyncPrimaryProfileDataRequestedSubscription
CloudSyncTinkerProfileDataAvailableForDownloadSubscription
CloudSyncPrimaryProfileDataAvailableForDownloadSubscription
CloudSyncTinkerMedicalIDDataAvailableForDownloadSubscription
CloudSyncPrimaryMedicalIDDataAvailableForDownloadSubscription
CloudSync
LastSuccessfulPull-
CloudSyncRestoreSyncStartDate
CloudSyncRestoreSyncEndDate
CloudSyncRestoreMergeEndDate
HDCloudSyncLastPulledUpdateDate
OldestSampleStartDate
Sync
Fetch
Push
Pull
Rebase
Disable and Delete
Disable
Show
Reset
Status
Add Participant
Remove All Participants
Fetch Participants
Leave Shares
Accept Shares
Save Subscriptions
Request Data Upload
Prepare For Sharing
MedicalID
Unknown (%zd)
Error
Success
too many records
device abandonded
rebase threshold exceeded
ownership loss
anchor mismatch
hole in current sequence
third party deleted samples
health deleted samples
Restore Phase Sync Complete
Restore Phase Ingest Complete
v8@?0
%@%@
@"NSString"16@?0@"NSString"8
v32@?0@"NSString"8Q16^B24
B24@?0@"HDDatabaseTransaction"8^@16
eventCollectors
T@"NSSet",&,N,V_eventCollectors
queue
v20@?0B8@"NSError"12
Validate subscriptions.
includeSecondaryContainers
TB,N,V_includeSecondaryContainers
B32@?0@"HKObject"8q16^@24
HDDocumentQueryServer.m
secondPassError != nil
error != nil
v24@?0@"NSArray"8@"NSError"16
maxResults
TQ,R,N,V_maxResults
sortDescriptors
T@"NSArray",R,N,V_sortDescriptors
includeDocumentData
TB,R,N,V_includeDocumentData
medicalRecord
medicationCodings
quantityDispensed
preparationDate
handOverDate
dosages
earliestDosageDate
statusCoding
daysSupplyQuantity
hasMedicalRecord
T@"HDCodableMedicalRecord",&,N,V_medicalRecord
hasMedicationCodings
T@"HDCodableMedicalCodingList",&,N,V_medicationCodings
hasQuantityDispensed
T@"HDCodableCodedQuantity",&,N,V_quantityDispensed
hasPreparationDate
T@"NSData",&,N,V_preparationDate
hasHandOverDate
T@"NSData",&,N,V_handOverDate
hasDosages
T@"HDCodableMedicationDosageList",&,N,V_dosages
hasEarliestDosageDate
T@"NSData",&,N,V_earliestDosageDate
hasStatusCoding
T@"HDCodableMedicalCoding",&,N,V_statusCoding
hasDaysSupplyQuantity
T@"HDCodableCodedQuantity",&,N,V_daysSupplyQuantity
ready
active
ended
finalized
error
unknown(%ld)
workoutDataFlowLink
T@"HKDataFlowLink",R
workoutDataProcessorUUID
T@"NSUUID",R,C
workoutDataDestinationState
workoutDataAccumulator
T@"<HDWorkoutDataAccumulator>",R,N
<%@:%p %@>
v16@?0@"HDWorkoutSessionServer"8
v16@?0@"<HDWorkoutDataDestination>"8
v16@?0@"NSError"8
B16@?0@"<HDWorkoutDataDestination>"8
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
pairing.finished
success
duration
setupType
@"NSDictionary"8@?0
pairing.failed
errorDomain
<null>
errorCode
com.apple.healthd.tinker.%@
com.apple.healthd.SQLite
com.apple.SQLite
Invalid database URL
main
:memory:
HDSQLiteDatabase.mm
_db == NULL
opening database
PRAGMA cache_size=512;
setting cache_size
setting busy timeout
PRAGMA journal_mode = WAL;
setting journal_mode
PRAGMA foreign_keys = ON;
enabling foreign keys
installing custom functions
Error %@: [%d, %@]
self.open == NO
self.fileURL != nil
self.open
Database connection is closed
unknown
BEGIN DEFERRED TRANSACTION
BEGIN IMMEDIATE TRANSACTION
BEGIN EXCLUSIVE TRANSACTION
Cannot perform %@ transaction inside an existing %@ transaction
B16@?0^@8
Transaction block failed without an error.
COMMIT;
ROLLBACK;
Attempt to execute SQL within a commit or rollback block.
name: '%@' reason '%@'
^{sqlite3_stmt=}24@?0@"HDSQLiteStatementCache"8^@16
user_version
PRAGMA %@%@=%lld
PRAGMA %@%@;
B24@?0^{HDSQLiteRow=^^?^{sqlite3_stmt}ii{unordered_map<const char *, int, HDSQLiteRow::_Hash, HDSQLiteRow::_Comparison, std::__1::allocator<std::__1::pair<const char *const, int> > >={__hash_table<std::__1::__hash_value_type<const char *, int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true> >=f}}}}8^@16
_isInTransaction
Cannot add new commit or rollback handlers from within a commit or rollback handler.
!_isHandlingTransactionEnd
PRAGMA %@foreign_key_check(%@)
PRAGMA %@foreign_key_check
Foreign key check failed for reference from %@ to row %@ in %@
AUTO_VACUUM
CACHE_SPILL
VACUUM %@;
FREELIST_COUNT
PAGE_SIZE
PRAGMA %@.incremental_vacuum(%lld)
PRAGMA %@.INTEGRITY_CHECK;
=266
Access error during integrity check.
EXPLAIN QUERY PLAN %@
Invalid database name
ATTACH DATABASE "%s" AS %@
DETACH DATABASE %@
PRAGMA %@.table_info(%@);
PRAGMA table_info(%@);
name
type
dflt_value
notnull
PRAGMA %@.index_list(%@)
PRAGMA index_list(%@)
unique
PRAGMA %@.index_info(%@)
PRAGMA index_info(%@)
PRAGMA %@.foreign_key_list(%@);
PRAGMA foreign_key_list(%@);
from
table
on_delete
CASCADE
RESTRICT
NO ACTION
SET NULL
SET DEFAULT
Unable to determine deletion action for %@
SELECT name FROM %@.sqlite_master WHERE type='table';
PRAGMA database_list;
temp
Corruption encountered (%d: %s): %s
_db != NULL
delegate
T@"<HDSQLiteDatabaseDelegate>",W,N,V_delegate
cacheScope
Tq,N,V_cacheScope
statementCache
T@"HDSQLiteStatementCache",R,N,V_statementCache
transactionInterruptRequested
corruptionError
T@"NSError",R,C,N,V_corruptionError
corruptionResultCode
Ti,R,N,V_corruptionResultCode
fileURL
T@"NSURL",R,C,N,V_fileURL
open
TB,R,N,GisOpen
writer
TB,N,GisWriter,V_writer
virtualFileSystem
T@"HDSQLiteVFS",&,N,V_virtualFileSystem
fileProtectionType
T@"NSString",C,N,V_fileProtectionType
checkpointRequired
TB,N,V_checkpointRequired
lastInsertRowID
T@"NSNumber",R,C,N
void HDSQLiteBindFoundationValueToStatement(sqlite3_stmt * _Nonnull, int, id  _Nonnull __strong)
NSData parameter passed to SQLiteBindFoundationValueToStatement (%lu bytes) is larger than maximum allowed SQLite blob (%lu bytes)
Binding unexpected value class %@
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
virtual int64_t HDSQLiteRow::columnAsInt64(int) const
HDSQLiteRow_Internal.h
Column must be greater than or equal to 0.
Column must be less than the number of requested columns (%d).
DEFERRED
IMMEDIATE
EXCLUSIVE
T@"<HDPairedDeviceCapabilityProvidingDelegate>",W,N
T@"<HDPairedDeviceCapabilityProvidingDelegate>",W,N,V_delegate
changes
CloudSyncStoreRecord
Version
UnderlyingMessage
The -%@ method is not available on %@
Validation failed for %@; does not compare equal after inflation to %@
record has type (%@), but expected (%@)
recordID
T@"CKRecordID",R,C,N,V_recordID
record
T@"CKRecord",R,N
underlyingMessage
T@"NSData",R,C,N
schemaVersion
Tq,R,N
repaired
TB,N,V_repaired
unsaved
TB,R,N,V_unsaved
basic
satellite
procedure_coding_collection
performers
execution_start_date
execution_end_date
not_performed
status_coding
category_coding_collection
reason_coding_collections
reasons_not_performed_coding_collections
outcome_coding_collection
complications_coding_collections
follow_ups_coding_collections
body_sites_coding_collections
procedure_record_samples
BLOB NOT NULL
INTEGER NOT NULL
HDProcedureRecordEntity.m
+[HDProcedureRecordEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
v16@?0^{HDSQLiteStatementBinder=}8
@"HDCodableMedicalCodingList"16@?0@"HKMedicalCodingCollection"8
versionStruct
T{?=qqq},V_versionStruct
iPhone
Watch
q24@?0@8@16
13A0
13A344
13A405
13A452
13A5325c
13B143
13B5130b
13C5060d
13D20
13E237
13E238
13E5234a
13F69
13G34
13G35
13G36
14A0
14A346
14A403
14A456
14A551
14A5346a
14B99999
14C99999
14E0
14E99999
15A99999
12S0
12S507
12S632
13S0
13S344
13S428
13S661
13S5325c
13V0
13V144
13V420
13V604
13V5143a
14B0
14B471
14S0
14S326
14S471
14S1000
14S5869b
14V0
14V9999
15R0
15R9999
15A0
Requested by "%@" (%d)
HKTempDir.XXXXXXXXX
HDWorkoutNotificationTerminalHandoffFieldDetected
HDConnectedGymPreferencesChanged
CloudSyncChangeRecord
SequenceRecord
EntityAnchorRangeMap
ChangeSet
CurrentChangeIndex
ProtocolVersion
Options
ChangeSize
HDCloudSyncChangeRecord.m
changeSize (%lld) is invalid for anchors %@
record reference to parent does not have correct reference action
Underlying message present but does not decode.
Unable to decode anchor range map.
%@/Change/%@
/Change/
record has nil assetContent
RecordID: %@
Last Modified Date: %@
Schema Version: %@
Sequence Ref: %@
Anchor Range Map: %@
ChangeIndex: %llu
ProtocolVersion: %d
Final: %s
changesetArchiveFileURL
T@"NSURL",R,C,N
changeIndex
protocolVersion
Ti,R,N
finalForSequence
decodedSyncAnchorRangeMap
T@"HDSyncAnchorRangeMap",R,N
changeSize
sequenceRecordID
T@"CKRecordID",R,C,N
Cross Trainer Data: instantaneousSpeed = %@, averageSpeed = %@, totalDistance = %@, stepPerMinute = %@, averageStepRate = %@, strideCount = %@, positiveElevationGain = %@, negativeElevationGain = %@, inclination = %@, rampSetting = %@, resistanceLevel = %@, instantaneousPower = %@, averagePower = %@, totalEnergy = %@, energyPerHour = %@, energyPerMinute = %@, heartRate = %@, metabolicEquivalent = %@, elapsedTime = %@, remainingTime = %@
(null)
instantaneousSpeedIsSet
instantaneousSpeed
Td,R,N
averageSpeedIsSet
averageSpeed
totalDistanceIsSet
totalDistance
TI,R,N
stepPerMinuteIsSet
stepPerMinute
TS,R,N
averageStepRateIsSet
averageStepRate
strideCountIsSet
strideCount
positiveElevationGainIsSet
positiveElevationGain
negativeElevationGainIsSet
negativeElevationGain
inclinationIsSet
inclination
rampSettingIsSet
rampSetting
resistanceLevelIsSet
resistanceLevel
instantaneousPowerIsSet
instantaneousPower
Ts,R,N
averagePowerIsSet
averagePower
totalEnergyIsSet
totalEnergy
energyPerHourIsSet
energyPerHour
energyPerMinuteIsSet
energyPerMinute
TC,R,N
heartRateIsSet
heartRate
metabolicEquivalentIsSet
metabolicEquivalent
elapsedTimeIsSet
elapsedTime
remainingTimeIsSet
remainingTime
domain
code
localizedDescription
hasDomain
T@"NSString",&,N,V_domain
hasCode
TB,N
Tq,N,V_code
hasLocalizedDescription
T@"NSString",&,N,V_localizedDescription
timestamp
latitude
longitude
altitude
speed
course
horizontalAccuracy
verticalAccuracy
hasTimestamp
Td,N,V_timestamp
hasLatitude
Td,N,V_latitude
hasLongitude
Td,N,V_longitude
hasAltitude
Td,N,V_altitude
hasSpeed
Td,N,V_speed
hasCourse
Td,N,V_course
hasHorizontalAccuracy
Td,N,V_horizontalAccuracy
hasVerticalAccuracy
Td,N,V_verticalAccuracy
database
T@"HDSimpleGraphDatabase",R,W,N,V_database
rowID
Tq,R,N,V_rowID
uncertainty
confidence
uuid
locationOfInterestType
geoData
visits
hasUncertainty
Td,N,V_uncertainty
hasConfidence
Td,N,V_confidence
hasUuid
T@"NSString",&,N,V_uuid
hasLocationOfInterestType
Ti,N,V_locationOfInterestType
hasGeoData
T@"NSData",&,N,V_geoData
T@"NSMutableArray",&,N,V_visits
UnknownLocation
Home
Work
School
(unknown: %i)
com.apple.widgetkit-extension
Missing %@ entitlement.
Missing %@[%@] entitlement.
<%@ %@(%d): "%@">
entitlements
T@"_HKEntitlements",R,N,V_entitlements
processIdentifier
auditToken
T@"_HKXPCAuditToken",R,C,N,V_auditToken
T@"NSString",R,C,N,V_name
bundleIdentifier
T@"NSString",R,C,N,V_bundleIdentifier
isExtension
TB,R,N,V_isExtension
isWidgetKitExtension
containerAppBundleIdentifier
T@"NSString",R,C,N,V_containerAppBundleIdentifier
applicationIdentifier
T@"NSString",R,C,N
Unknown
@"HDCodableMedicalCoding"16@?0@"HKMedicalCoding"8
@"HDCodableMedicalCodingList"16@?0@"NSArray"8
%@ for HDProfile:%@
HDXPCAlarm.m
_eventHandler == nil
<%@:%p eventName:%@>
eventHandler
scheduler
T@"HDXPCAlarmScheduler",R,N,V_scheduler
eventHandlerQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_eventHandlerQueue
T@?,C,N,V_eventHandler
unitTest_schedulerObserver
T@?,C,N,V_unitTest_schedulerObserver
eventName
T@"NSString",R,C,N,V_eventName
items
T@"NSMutableArray",&,N,V_items
@"HKCodableQuantitySeriesDatum"16@?0@"HDQuantityDatum"8
HDSeriesQuantityDataAggregator.m
currentSeries == nil || [currentSeries isKindOfClass:[HKQuantitySample class]]
B24@?0@"HDDataOriginProvenance"8^@16
v16@?0@"HDQuantityDatum"8
[datum isKindOfClass:[HDQuantityDatum class]]
overlap
lastDatum
T@"HDQuantityDatum",R,N,V_lastDatum
length
Tq,R,N,V_length
sample
hasSample
T@"HDCodableSample",&,N,V_sample
Push Stores
Prepare & Push
v24@?0@"HDCloudSyncOperation"8@"HDCloudSyncOperation"16
@16@?0@"HDCloudSyncTarget"8
Insufficient data (%lu bytes) for Eurotas Enhanced FTMS
km/hr
<%@: instantaneousSpeed=%@, averageSpeed=%@>
updateTime
T@"NSDate",R,N
Error building predicate for query
statisticsOptions
TQ,R,N,V_statisticsOptions
mergeStrategy
TQ,R,N,V_mergeStrategy
sync_provenance
origin_product_type
origin_build
local_product_type
local_build
source_id
device_id
contributor_id
source_version
tz_name
origin_major_version
origin_minor_version
origin_patch_version
derived_flags
data_provenances
ROWID
INTEGER PRIMARY KEY AUTOINCREMENT
TEXT NOT NULL
HDDataProvenanceEntity.m
originProductType != nil
originSystemBuild != nil
localProductType != nil
localSystemBuild != nil
sourceVersion != nil
timeZoneName != nil
sourceID != nil
deviceID != nil
contributorID != nil
transaction != nil
SELECT ROWID FROM protected.data_provenances WHERE sync_provenance = ? AND origin_product_type = ? AND origin_build = ? AND local_product_type = ? AND local_build = ? AND source_id = ? AND device_id = ? AND contributor_id = ? AND source_version = ? AND tz_name = ? AND origin_major_version = ? AND origin_minor_version = ? AND origin_patch_version = ?
INSERT INTO protected.data_provenances (sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, contributor_id, source_version, tz_name, origin_major_version, origin_minor_version, origin_patch_version, derived_flags) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
B24@?0^{HDSQLiteRow=}8^@16
SELECT sync_provenance, origin_product_type, origin_build, source_version, tz_name, source_id, device_id, contributor_id, origin_major_version, origin_minor_version, origin_patch_version FROM protected.data_provenances WHERE ROWID = ?
Failure retrieving contributor identifier
B40@?0q8@"NSArray"16^{HDSQLiteRow=}24^@32
SELECT (%@ LIKE 'Watch%%') FROM %@ WHERE %@=? LIMIT 1
timeStamp
event
hasTimeStamp
Td,N,V_timeStamp
hasEvent
T@"NSString",&,N,V_event
locationOfInterest
nextEntryTime
modeOfTransportation
sourceType
hasLocationOfInterest
T@"HDCodableRoutineLocation",&,N,V_locationOfInterest
hasNextEntryTime
Td,N,V_nextEntryTime
hasModeOfTransportation
Ti,N,V_modeOfTransportation
hasSourceType
Ti,N,V_sourceType
UnknownMode
Walking
Driving
UnknownSource
Audio
Bluetooth
CoreRoutine
EventKit
LocationVisit
Unexpected class %@
Failed to decode superclass message
Received nil for non-nil field 'statusCoding'
Received nil for non-nil field 'coverageTypeCodingCollection'
Received nil for non-nil field 'subscriberId'
@24@?0@8^@16
INDEX (\w+)\b
SCAN TABLE
USING INDEX
USING COVERING INDEX
<%@ %@>
queryPlanRows
T@"NSArray",R,C,N,V_queryPlanRows
includesTableScan
TB,R,N,V_includesTableScan
usesIndex
TB,R,N,V_usesIndex
usesCoveringIndex
TB,R,N,V_usesCoveringIndex
indices
T@"NSArray",R,N,V_indices
%lld %lld %lld %@
selectID
Tq,R,N,V_selectID
order
Tq,R,N,V_order
Tq,R,N,V_from
detail
T@"NSString",R,C,N,V_detail
workout_builder_events
%@: %@
%@: Unable to retrieve owner identifier: %@
Repository (%@):
  Primary Container:
  Secondary Containers:
anchorRanges
T@"NSMutableArray",&,N,V_anchorRanges
auxiliaryStatistics
count
freezeTimestamp
frozenBucketCount
frozenMean
intervals
mean
mostRecentDatum
primaryStatistics
sourceID
unfinishedDatum
unfrozenCount
unfrozenMean
weightTotal
weightedMean
bucketEndTime
bucketStartTime
dataEndTime
dataStartTime
inclusiveEndTimeBoundary
maskedIntervals
mergeGranularity
mergePoint
remainders
shouldCombineSources
shouldComputePerBundleIDStatistics
shouldComputePerSourceIDStatistics
statistics
statisticsByBundleIdentifier
statisticsByCanonicalSourceID
statisticsBySourceID
@"HDCodableFHIRIdentifier"16@?0@"HKFHIRIdentifier"8
requestIdentifier
setupMetadata
hasRequestIdentifier
T@"NSString",&,N,V_requestIdentifier
hasSetupMetadata
T@"HDCodableSharingSetupMetadata",&,N,V_setupMetadata
hasError
T@"HDCodableError",&,N,V_error
source_bundle_id
status
date_modified
profile_authorization
TEXT NOT NULL UNIQUE
REAL NOT NULL
v24@?0@"NSArray"8^{HDSQLiteRow=}16
q24@?0q8^@16
INSERT INTO key_value (category, provenance, domain, key, value, mod_date) SELECT category, provenance, 'BASAL_ENERGY_INGESTION', key, value, mod_date FROM key_value WHERE domain = 'ACTIVE_ENERGY_INGESTION'
CREATE TABLE protected.fitness_friend_activity_snapshots (active_hours REAL, active_hours_goal REAL, brisk_minutes_goal REAL, friend_uuid BLOB, workout_data BLOB, achievement_data BLOB, energy_burned REAL, walk_run_distance REAL, energy_burned_goal REAL, data_id INTEGER PRIMARY KEY, deep_breathing_session_count INTEGER, brisk_minutes REAL, uploaded_date REAL, steps INTEGER, snapshot_index INTEGER, source_uuid BLOB)
DROP TABLE protected.fitness_friend_activity_snapshots;
CREATE TABLE IF NOT EXISTS protected.fitness_friend_activity_snapshots (data_id INTEGER PRIMARY KEY, friend_uuid BLOB, snapshot_index INTEGER, source_uuid BLOB, energy_burned REAL, brisk_minutes REAL, active_hours REAL, steps REAL, vulcan_count REAL, energy_burned_goal REAL, brisk_minutes_goal REAL, active_hours_goal REAL, walk_run_distance REAL, vulcan_condition INTEGER, uploaded_date REAL)
CREATE TABLE protected.fitness_friend_workouts (data_id INTEGER PRIMARY KEY, friend_uuid BLOB, duration REAL, total_energy_burned REAL, total_basal_energy_burned REAL, total_distance REAL, activity_type INTEGER, goal_type INTEGER, goal REAL)
CREATE TABLE protected.fitness_friend_achievements (data_id INTEGER PRIMARY KEY, friend_uuid BLOB, definition_identifier TEXT, completed_date REAL, value, extra_data BLOB, workout_activity_type INTEGER)
DROP TABLE protected.fitness_friend_workouts
CREATE TABLE IF NOT EXISTS protected.fitness_friend_workouts (data_id INTEGER PRIMARY KEY, friend_uuid BLOB, duration REAL, total_energy_burned REAL, total_basal_energy_burned REAL, total_distance REAL, activity_type INTEGER, goal_type INTEGER, goal REAL, bundle_id TEXT, source_first_party_workout_app INTEGER)
CREATE TABLE IF NOT EXISTS protected.fitness_friend_workouts (data_id INTEGER PRIMARY KEY, friend_uuid BLOB, duration REAL, total_energy_burned REAL, total_basal_energy_burned REAL, total_distance REAL, activity_type INTEGER, goal_type INTEGER, goal REAL, bundle_id TEXT, is_watch_workout INTEGER)
CREATE TABLE IF NOT EXISTS protected.fitness_friend_workouts (data_id INTEGER PRIMARY KEY, friend_uuid BLOB, duration REAL, total_energy_burned REAL, total_basal_energy_burned REAL, total_distance REAL, activity_type INTEGER, goal_type INTEGER, goal REAL, bundle_id TEXT, is_watch_workout INTEGER, is_indoor_workout INTEGER)
deep_breathing_session_count
deep_breathing_session_anchor
ALTER TABLE protected.activity_caches ADD COLUMN %@ INTEGER;
CREATE TABLE protected.ccdas (data_id INTEGER PRIMARY KEY REFERENCES samples (data_id) ON DELETE CASCADE, document_data BLOB, title TEXT NOT NULL, patient_name TEXT NOT NULL, author_name TEXT NOT NULL, custodian_name TEXT NOT NULL);
ALTER TABLE protected.activity_caches ADD COLUMN vulcan_count REAL;
ALTER TABLE protected.activity_caches ADD COLUMN vulcan_count_anchor INTEGER;
ALTER TABLE protected.metadata_values ADD COLUMN value_type INTEGER NOT NULL DEFAULT 0;
UPDATE protected.metadata_values SET value_type = (CASE WHEN protected.metadata_values.string_value IS NOT NULL THEN 0 WHEN protected.metadata_values.numerical_value IS NOT NULL THEN 1 WHEN protected.metadata_values.date_value IS NOT NULL THEN 2 END);
DROP TABLE protected.data_series;
CREATE TABLE IF NOT EXISTS protected.data_series (data_id INTEGER PRIMARY KEY REFERENCES samples(data_id) ON DELETE CASCADE, frozen INTEGER NOT NULL DEFAULT 0, count INTEGER NOT NULL DEFAULT 0)
ALTER TABLE protected.fitness_friend_activity_snapshots ADD COLUMN vulcan_count INTEGER;
ALTER TABLE protected.activity_caches ADD COLUMN vulcan_condition INTEGER;
ALTER TABLE protected.fitness_friend_activity_snapshots ADD COLUMN vulcan_condition INTEGER;
ALTER TABLE protected.activity_caches RENAME TO activity_caches_old
CREATE TABLE IF NOT EXISTS protected.activity_caches (data_id INTEGER PRIMARY KEY, cache_index INTEGER, energy_burned REAL, brisk_minutes REAL, active_hours REAL, steps REAL, vulcan_count REAL, vulcan_condition INTEGER, energy_burned_goal REAL, energy_burned_goal_date REAL, brisk_minutes_goal REAL, active_hours_goal REAL, walk_distance REAL, deep_breathing_duration REAL, active_energy_burned_anchor INTEGER, active_hours_anchor INTEGER, brisk_minutes_anchor INTEGER, energy_burned_goal_anchor INTEGER, step_count_anchor INTEGER, vulcan_count_anchor INTEGER, walking_and_running_distance_anchor INTEGER, workout_anchor INTEGER, deep_breathing_session_anchor INTEGER, flights INTEGER, flights_anchor INTEGER)
INSERT INTO activity_caches (data_id, cache_index, energy_burned, brisk_minutes, active_hours, steps, vulcan_count, vulcan_condition, energy_burned_goal, energy_burned_goal_date, brisk_minutes_goal, active_hours_goal, walk_distance, active_energy_burned_anchor, active_hours_anchor, brisk_minutes_anchor, energy_burned_goal_anchor, step_count_anchor, vulcan_count_anchor, walking_and_running_distance_anchor, workout_anchor, flights, flights_anchor) SELECT data_id, cache_index, energy_burned, brisk_minutes, active_hours, steps, vulcan_count, vulcan_condition, energy_burned_goal, energy_burned_goal_date, brisk_minutes_goal, active_hours_goal, walk_distance, active_energy_burned_anchor, active_hours_anchor, brisk_minutes_anchor, energy_burned_goal_anchor, step_count_anchor, vulcan_count_anchor, walking_and_running_distance_anchor, workout_anchor, flights, flights_anchor from activity_caches_old;
DROP TABLE activity_caches_old
CREATE TABLE protected.object_authorizations (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, object BLOB NOT NULL REFERENCES objects(uuid) ON DELETE CASCADE, source BLOB NOT NULL, status INTEGER NOT NULL, sync_provenance INTEGER NOT NULL, modification_date REAL NOT NULL)
ALTER TABLE protected.workouts ADD COLUMN total_w_steps REAL;
ALTER TABLE protected.workout_events ADD COLUMN w_step_style INTEGER;
ALTER TABLE protected.fitness_friend_activity_snapshots ADD COLUMN timezone_offset INTEGER;
SELECT MAX(data_id) FROM protected.objects
INSERT OR REPLACE INTO key_value (category, domain, key, value, provenance, mod_date) values (0, '', 'HDMaxObjectPersistentID', ?, 0, 0.0)
UPDATE OR IGNORE protected.data_provenances SET origin_device='Watch0,0' WHERE origin_build LIKE '12S%' OR origin_build LIKE '13S%' OR origin_build LIKE '13V%' OR origin_build LIKE '14S%'
UPDATE OR IGNORE protected.data_provenances SET local_device='Watch0,0' WHERE local_build LIKE '12S%' OR local_build LIKE '13S%' OR local_build LIKE '13V%' OR local_build LIKE '14S%'
UPDATE OR IGNORE protected.data_provenances SET origin_device='iPhone0,0' WHERE (origin_build LIKE '12%' OR origin_build LIKE '13%' OR origin_build LIKE '14%') AND origin_device NOT LIKE 'Watch%'
UPDATE OR IGNORE protected.data_provenances SET local_device='iPhone0,0' WHERE (origin_build LIKE '12%' OR origin_build LIKE '13%' OR origin_build LIKE '14%') AND local_device NOT LIKE 'Watch%'
UPDATE OR IGNORE protected.data_provenances SET origin_device='Watch0,0' WHERE origin_device='iPhone0,0' AND (origin_build LIKE '12S%' OR origin_build LIKE '13S%' OR origin_build LIKE '13V%' OR origin_build LIKE '14S%')
SELECT value FROM protected.key_value_secure WHERE key = 'birthdate'
UPDATE protected.key_value_secure SET value = ? WHERE key = 'birthdate'
DELETE FROM protected.objects WHERE NOT EXISTS (SELECT samples.data_id FROM protected.samples WHERE samples.data_id=objects.data_id);
DELETE FROM key_value_secure WHERE domain = 'com.apple.healthd.workout' AND key = 'companionWorkoutCreditAnchorKey';
INSERT OR REPLACE INTO key_value_secure (category, domain, key, value, provenance, mod_date) values (100, 'com.apple.healthd.workout', 'companionWorkoutCreditAnchorKey', COALESCE((select max(data_id) from protected.objects), 0), 0, 0.0);
ALTER TABLE protected.data_provenances RENAME TO data_provenances_old
CREATE TABLE IF NOT EXISTS protected.data_provenances (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, sync_provenance INTEGER NOT NULL, origin_product_type TEXT NOT NULL, origin_build TEXT NOT NULL, local_product_type TEXT NOT NULL, local_build TEXT NOT NULL, source_id INTEGER NOT NULL, device_id INTEGER NOT NULL, source_version TEXT NOT NULL, tz_name TEXT NOT NULL, UNIQUE(sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, source_version, tz_name))
INSERT INTO protected.data_provenances (rowid, sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, source_version, tz_name) SELECT rowid, sync_provenance, origin_device, origin_build, local_device, local_build, source_id, device_id, source_version, '' FROM protected.data_provenances_old;
DROP TABLE IF EXISTS data_provenances_old
CREATE UNIQUE INDEX protected.ff_unique_columns ON fitness_friend_activity_snapshots (friend_uuid, snapshot_index, source_uuid);
ALTER TABLE protected.data_series ADD COLUMN insertion_era INTEGER NOT NULL DEFAULT 0
CREATE TABLE IF NOT EXISTS protected.cda_documents (data_id INTEGER PRIMARY KEY REFERENCES samples (data_id) ON DELETE CASCADE, document_data BLOB, title TEXT NOT NULL, patient_name TEXT NOT NULL, author_name TEXT NOT NULL, custodian_name TEXT NOT NULL);
INSERT INTO protected.cda_documents SELECT * FROM ccdas;
DROP TABLE IF EXISTS ccdas;
q24@?0^{DataStore={BlockAccessFile={TransactionalFile={shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}{WriteAheadLog={mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}{shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<health::VirtualFile>=^{VirtualFile}^{__shared_weak_count}}QQqB{vector<std::__1::shared_ptr<health::WriteAheadLog::Transaction>, std::__1::allocator<std::__1::shared_ptr<health::WriteAheadLog::Transaction> > >=^{shared_ptr<health::WriteAheadLog::Transaction>}^{shared_ptr<health::WriteAheadLog::Transaction>}{__compressed_pair<std::__1::shared_ptr<health::WriteAheadLog::Transaction> *, std::__1::allocator<std::__1::shared_ptr<health::WriteAheadLog::Transaction> > >=^{shared_ptr<health::WriteAheadLog::Transaction>}}}{unordered_multiset<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > >={__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>=^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<unsigned long long> >=Q}{__compressed_pair<float, std::__1::equal_to<unsigned long long> >=f}}}{map<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> >, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > > > >={__tree<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::less<unsigned long long>, true> >=Q}}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<health::VirtualFile>=^{VirtualFile}^{__shared_weak_count}}B{FileHeader=IIIQQQ}QQi{mutex={_opaque_pthread_mutex_t=q[56c]}}{TransactionalCache<unsigned long long, health::FilePage>=QQ{unordered_map<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::equal_to<unsigned long long>, true> >=f}}}^{CacheEntry}^{CacheEntry}{function<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>={__value_func<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>={type=[32C]}^{__base<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>}}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}{map<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *, std::__1::less<std::__1::__thread_id>, std::__1::allocator<std::__1::pair<const std::__1::__thread_id, health::TransactionalFile::ReadTransaction *> > >={__tree<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::less<std::__1::__thread_id>, true>, std::__1::allocator<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::less<std::__1::__thread_id>, true> >=Q}}}{queue<std::__1::__thread_id, std::__1::deque<std::__1::__thread_id, std::__1::allocator<std::__1::__thread_id> > >={deque<std::__1::__thread_id, std::__1::allocator<std::__1::__thread_id> >={__split_buffer<std::__1::__thread_id *, std::__1::allocator<std::__1::__thread_id *> >=^^{__thread_id}^^{__thread_id}^^{__thread_id}{__compressed_pair<std::__1::__thread_id **, std::__1::allocator<std::__1::__thread_id *> >=^^{__thread_id}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__thread_id> >=Q}}}{map<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *, std::__1::less<std::__1::__thread_id>, std::__1::allocator<std::__1::pair<const std::__1::__thread_id, health::TransactionalFile::WriteTransaction *> > >={__tree<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::less<std::__1::__thread_id>, true>, std::__1::allocator<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::less<std::__1::__thread_id>, true> >=Q}}}}{BlockAccessFileHeader=IIIQ{BlockPointer=QQ}{BlockPointer=QQ}{BlockPointer=QQ}}}{BlockPointer=QQ}}8^@16
CREATE INDEX IF NOT EXISTS protected.samples_type_dates ON samples (data_type, start_date, end_date);
CREATE INDEX IF NOT EXISTS protected.samples_end ON samples (data_type, end_date);
CREATE INDEX IF NOT EXISTS protected.samples_type_anchor ON samples (data_type, data_id);
DELETE FROM key_value WHERE domain = 'ActivitySharing';
SELECT data_id FROM data_series ds INNER JOIN samples s USING (data_id) WHERE data_type = 102
The requested sample history does not exist.
index < Length
operator[]
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.25.2/HealthKit/HealthDaemon/Database/HighFrequencyData/Utility/HDStaticArray.h
Index out of bounds.
Critical Error: 
Failed assertion '
' in '
' at 
Invalid format options reference: Must be of form {*<index>} but no trailing '}' found.
Invalid format string- missing numeric value.
Parameter index out of bounds.
_buffer != nullptr || _length == 0
RawBuffer
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.34.1/HealthKit/HealthDaemon/Database/HighFrequencyData/Utility/HDRawBuffer.h
Unable to create a raw buffer of length > 0 at nullptr
sizeof(T) <= _length
extractRaw
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.34.1/HealthKit/HealthDaemon/Database/HighFrequencyData/Utility/HDEncoder.h
Extract would overflow deserialization buffer.
childCount > 0
childForKey
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.34.1/HealthKit/HealthDaemon/Database/HighFrequencyData/HDBPlusTree.hpp
Looking for child for key in an empty node.
index < node.childCount
_valueForKeyInChildAtIndex
Child index out of bounds.
valueCount > 0
indexForKey
Looking for index for key in an empty node.
_interiorChildAtIndex
depth < kMaximumRecursionDepth
Maximum recursion depth reached.
child.children[0].key >= node.children[index].key
Child node's smallest key is < parent's key
child.children[child.childCount - 1].key < node.children[index + 1].key
Child node's largest key is >= parent's next key
Attempt to indirect through to the value of an invalid optional.
appendRaw
Append would overflow serialization buffer.
insertElementAtIndex
destinationIndex + elementCount <= Length
copyElementsFromArrayToIndex
Copy would overflow destination.
sourceIndex + elementCount <= Length
Copy would overflow source.
key > lastKey
_enumerateLeaves
Out of order keys during btree enumeration.
leaf.valueCount > 0
Empty leaf encountered during enumeration.
key < lastKey
diagnostic_test_coding_collection
panel_name
results
effective_start_date
effective_end_date
issue_date
diagnostic_test_report_samples
HDDiagnosticTestReportEntity.m
+[HDDiagnosticTestReportEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
restoreIdentifier
sequenceNumber
statusCode
defaultSourceBundleIdentifier
obliteratedHealthPairingUUIDs
hasRestoreIdentifier
T@"NSData",&,N,V_restoreIdentifier
hasSequenceNumber
Tq,N,V_sequenceNumber
hasStatusCode
Ti,N,V_statusCode
hasDefaultSourceBundleIdentifier
T@"NSString",&,N,V_defaultSourceBundleIdentifier
T@"NSMutableArray",&,N,V_obliteratedHealthPairingUUIDs
Continue
Finished
Abort
HDFitnessMachineMetricsCollectorDidChangeNotification
fitness-machine-session-observer
Unknown connection UUID
-[HDFitnessMachineManager _queue_endFitnessMachineConnectionForFitnessMachineSessionUUID:withConnectionUUID:forcingReset:]
No fitness machine has been found
v36@?0Q8q16B24@"NSError"28
v40@?0Q8@"HDHealthServiceCharacteristic"16@"HKDevice"24@"NSError"32
v24@?0Q8@"NSError"16
(#w0) 
Fitness Machine brand not detected
HDFitnessMachineManager.m
Data Collector should have been setup as part of discovery
Reset should have been handled in `handleInitialMachineStatusIfNecessary`
v16@?0@"<HDFitnessMachineSessionObserver>"8
-[HDFitnessMachineManager _queue_handleBluetoothDisconnection]
v24@?0q8@"NSError"16
Expected to have a fitness machine at this point
Running or Not Yet Started should have been the first state set. fromState=%@, toState=%@
v16@?0@"HDFitnessMachineConnection"8
MFA Authentication Failed
MFA Authentication Timed Out
Failed to connect to fitness machine within allotted time.
(#w0) Failed to complete MFA within allotted time.
Client already registered
Must have a start date if we're stopped or paused
B16@?0@"HDFitnessMachineConnection"8
-[HDFitnessMachineManager pairingManagerWillBeginPairing:fitnessMachineToken:]
-[HDFitnessMachineManager _queue_simulateDisconnect]
serviceManager
T@"HDHealthServiceManager",W,N,V_serviceManager
fitnessMachineStateTimers
T@"HDFitnessMachineStateTimers",&,N,V_fitnessMachineStateTimers
analyticsCollector
T@"HDFitnessMachineAnalyticsCollector",&,N,V_analyticsCollector
fitnessMachineDataProducer
T@"HDFitnessMachineDataProducer",R,N,V_fitnessMachineDataProducer
machinePreferredUntilDate
connectionInitiatorServer
T@"<HDFitnessMachineConnectionInitiatorProtocol>",R,N
metricsCollector
T@"<HDMetricsCollector>",R,N
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
value
category_samples
INTEGER
HDCategorySampleEntity.m
+[HDCategorySampleEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
INSERT INTO protected.category_samples (data_id, value) VALUES (?, ?)
HDDemoDataFoodObjectBrandNameKey
HDDemoDataFoodObjectGenericNameKey
HDDemoDataFoodObjectFoodTypeKey
HDDemoDataFoodObjectNutritionFactsKey
HDDemoDataFoodObjectRecommendedServingsKey
Brand name: %@
Generic name: %@
Food type: %@
Recommend Serving: %.1f
Nutrion facts: %@
supportsSecureCoding
TB,R
brandName
T@"NSString",C,N,V_brandName
genericName
T@"NSString",C,N,V_genericName
foodType
Tq,N,V_foodType
nutritionFacts
T@"NSDictionary",C,N,V_nutritionFacts
recommendedNumServings
Td,N,V_recommendedNumServings
Received nil for non-nil field 'diagnosticTestCodingCollection'
Received nil for non-nil field 'panelName'
Received nil for non-nil field 'issueDate'
workout_builder_statistics
B24@?0^{DataStore={BlockAccessFile={TransactionalFile={shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}{WriteAheadLog={mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}{shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<health::VirtualFile>=^{VirtualFile}^{__shared_weak_count}}QQqB{vector<std::__1::shared_ptr<health::WriteAheadLog::Transaction>, std::__1::allocator<std::__1::shared_ptr<health::WriteAheadLog::Transaction> > >=^{shared_ptr<health::WriteAheadLog::Transaction>}^{shared_ptr<health::WriteAheadLog::Transaction>}{__compressed_pair<std::__1::shared_ptr<health::WriteAheadLog::Transaction> *, std::__1::allocator<std::__1::shared_ptr<health::WriteAheadLog::Transaction> > >=^{shared_ptr<health::WriteAheadLog::Transaction>}}}{unordered_multiset<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > >={__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>=^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<unsigned long long> >=Q}{__compressed_pair<float, std::__1::equal_to<unsigned long long> >=f}}}{map<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> >, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > > > >={__tree<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::less<unsigned long long>, true> >=Q}}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<health::VirtualFile>=^{VirtualFile}^{__shared_weak_count}}B{FileHeader=IIIQQQ}QQi{mutex={_opaque_pthread_mutex_t=q[56c]}}{TransactionalCache<unsigned long long, health::FilePage>=QQ{unordered_map<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::equal_to<unsigned long long>, true> >=f}}}^{CacheEntry}^{CacheEntry}{function<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>={__value_func<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>={type=[32C]}^{__base<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>}}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}{map<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *, std::__1::less<std::__1::__thread_id>, std::__1::allocator<std::__1::pair<const std::__1::__thread_id, health::TransactionalFile::ReadTransaction *> > >={__tree<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::less<std::__1::__thread_id>, true>, std::__1::allocator<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::less<std::__1::__thread_id>, true> >=Q}}}{queue<std::__1::__thread_id, std::__1::deque<std::__1::__thread_id, std::__1::allocator<std::__1::__thread_id> > >={deque<std::__1::__thread_id, std::__1::allocator<std::__1::__thread_id> >={__split_buffer<std::__1::__thread_id *, std::__1::allocator<std::__1::__thread_id *> >=^^{__thread_id}^^{__thread_id}^^{__thread_id}{__compressed_pair<std::__1::__thread_id **, std::__1::allocator<std::__1::__thread_id *> >=^^{__thread_id}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__thread_id> >=Q}}}{map<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *, std::__1::less<std::__1::__thread_id>, std::__1::allocator<std::__1::pair<const std::__1::__thread_id, health::TransactionalFile::WriteTransaction *> > >={__tree<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::less<std::__1::__thread_id>, true>, std::__1::allocator<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::less<std::__1::__thread_id>, true> >=Q}}}}{BlockAccessFileHeader=IIIQ{BlockPointer=QQ}{BlockPointer=QQ}{BlockPointer=QQ}}}{BlockPointer=QQ}}8^@16
This database does not support high frequency data.
B24@?0@"HDSQLiteDatabase"8^@16
com.apple.health.WorkoutPlugin
pluginIdentifier
com.apple.HealthApp.MedicalID.Daily
allergyInfo
bloodType
clinicalContacts
emergencyContacts
gregorianBirthdate
height
isShownOnLockScreen
medicalConditions
medicalNotes
medicationInfo
organDonorStatus
picture
primaryLanguageCode
shareDuringEmergency
weight
sosContactBug
profileType
@8@?0
com.apple.healthd.MedicalID.hasBeenSet
com.apple.healthd.MedicalID.hasBeenDeleted
objectCreationBlock
T@?,C,N,V_objectCreationBlock
sensorDatumComparisonBlock
T@?,C,N,V_sensorDatumComparisonBlock
bufferAggregationInterval
Td,N,V_bufferAggregationInterval
HKSample+HDDistinctableObject.m
keyPath
%@ does not support distinct-by on key-path %@
180A
2A29
2A24
2A25
2A27
2A26
2A28
Property %@ not supported on this device
characteristics
T@"NSMutableDictionary",&,N,V_characteristics
propertyValues
T@"NSMutableDictionary",&,N,V_propertyValues
propertiesLeftToFetch
T@"NSMutableSet",&,N,V_propertiesLeftToFetch
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
deviceInformationHasBeenLoaded
TB,N,V_deviceInformationHasBeenLoaded
pendingDeviceInformationLoadedBlocks
T@"NSMutableArray",&,N,V_pendingDeviceInformationLoadedBlocks
manufacturerName
T@"NSString",R
modelNumber
serialNumber
hardwareRevision
firmwareRevision
softwareRevision
fetchLimitedCharacteristics
TB,N,V_fetchLimitedCharacteristics
conditionCodingCollection
categoriesCodingCollections
asserter
abatement
onset
recordedDate
clinicalStatusCoding
verificationStatusCoding
severityCodingCollection
bodySitesCodingCollections
hasConditionCodingCollection
T@"HDCodableMedicalCodingList",&,N,V_conditionCodingCollection
hasCategoriesCodingCollections
T@"HDCodableMedicalCodingListList",&,N,V_categoriesCodingCollections
hasAsserter
T@"NSString",&,N,V_asserter
hasAbatement
T@"HDCodableInspectableValue",&,N,V_abatement
hasOnset
T@"HDCodableInspectableValue",&,N,V_onset
hasRecordedDate
T@"NSData",&,N,V_recordedDate
hasClinicalStatusCoding
T@"HDCodableMedicalCoding",&,N,V_clinicalStatusCoding
hasVerificationStatusCoding
T@"HDCodableMedicalCoding",&,N,V_verificationStatusCoding
hasSeverityCodingCollection
T@"HDCodableMedicalCodingList",&,N,V_severityCodingCollection
hasBodySitesCodingCollections
T@"HDCodableMedicalCodingListList",&,N,V_bodySitesCodingCollections
B16@?0@"HKProfileIdentifier"8
@16@?0@"HKProfileIdentifier"8
Unimplemented
@"NSUUID"16@?0@"HKObject"8
bundleIdentifier may not be nil
<%@:%p "%@" (%s) device-id:%@>
inactive
health-location-manager-observers
@"CLLocationManager"8@?0
HDLocationManager requested location
v16@?0@"<HDLocationManagerObserver>"8
locationManagerConfiguration
T@?,C,N,V_locationManagerConfiguration
unitTestDelegate
T@"<HDLocationManagerUnitTestDelegate>",W,N,V_unitTestDelegate
Unable to create push zones in a non-primary container.
B16@?0@"HDCloudSyncZone"8
Unable to create zones in a non-private database.
B16@?0@"HDCloudSyncStoreRecord"8
pushTarget
T@"HDCloudSyncTarget",R,N,V_pushTarget
sync
frozen
pushed
Invalid anchor(s) (%lld, %lld) for %@
v24@?0@"NSString"8^B16
Unable to create change record with invalid archive.
No sequence record for current session.
Change size %@ does not match computed file size: %llu
HDCloudSyncPushSequenceOperation.m
sequenceRecord.firstUnfrozenChangeRecord == nil
@16@?0@"HDCloudSyncChangeRecord"8
Invalid container ID %@
@"CKRecordID"16@?0@"CKRecord"8
[session isKindOfClass:[HDCloudSyncSession class]]
Canceling sync, xpc activity indicated deferral.
@"HDSyncEntityIdentifier"16@?0@"<HDSyncChange>"8
hasMadeForwardProgress
TB,R,N,V_hasMadeForwardProgress
achievementType
completedDate
definitionIdentifier
workoutActivityType
hasAchievementType
Ti,N,V_achievementType
hasCompletedDate
Tq,N,V_completedDate
hasValue
Tq,N,V_value
hasDefinitionIdentifier
T@"NSString",&,N,V_definitionIdentifier
hasWorkoutActivityType
Ti,N,V_workoutActivityType
None
FirstSessionOfType
BestSessionCalories
SevenWorkoutsInWeek
OneTimeStepCountMilestone
StepCountMilestone
BestDailyCalories
BestDailyBriskMinutes
DailyGoalExceeded50
DailyGoalExceeded100
DailyGoalExceeded200
DailyGoalExceeded300
DailyGoalComplete
DailyGoalCompleteWeek
DailyGoalCompleteMonth
DailyGoalComplete10Weeks
DailyGoalLongestStreak
DailyGoalLifetimeMilestone
AmericanFootball
Archery
AustralianFootball
Badminton
Baseball
Basketball
Bowling
Boxing
Climbing
Cricket
CrossTraining
Curling
Cycling
Dance
DanceInspiredTraining
Elliptical
EquestrianSports
Fencing
Fishing
FunctionalStrengthTraining
Golf
Gymnastics
Handball
Hiking
Hockey
Hunting
Lacrosse
MartialArts
MindAndBody
MixedMetabolicCardioTraining
PaddleSports
Play
PreparationAndRecovery
Racquetball
Rowing
Rugby
Running
Sailing
SkatingSports
SnowSports
Soccer
Softball
Squash
StairClimbing
SurfingSports
Swimming
TableTennis
Tennis
TrackAndField
TraditionalStrengthTraining
Volleyball
WaterFitness
WaterPolo
WaterSports
Wrestling
Yoga
Barre
CoreTraining
CrossCountrySkiing
DownhillSkiing
Flexibility
HighIntensityIntervalTraining
JumpRope
Kickboxing
Pilates
Snowboarding
Stairs
StepTraining
WheelchairWalk
WheelchairRun
HandCycling
TaiChi
Other
Wheelchair
OOBInfo: randomValue=%@, confirmationValue=%@, btAddress=%@
oobData
T@"NSData",R,N,V_oobData
randomValue
T@"NSData",R,N,V_randomValue
confirmationValue
T@"NSData",R,N,V_confirmationValue
btAddress
T@"NSData",R,N,V_btAddress
external_id
last_reported_status
revision
raw_content
sync_anchor
country
fhirVersion
clinical_gateways
INTEGER NOT NULL UNIQUE
json_extract(%@.raw_content, '$.%@')
HDDemoDataFoodSampleGeneratorNextMealTimeKey
HDDemoDataFoodSampleGeneratorNextBreakfastTimeKey
HDDemoDataFoodSampleGeneratorNextLunchTimeKey
HDDemoDataFoodSampleGeneratorNextSnackTimeKey
HDDemoDataFoodSampleGeneratorNextDinnerTimeKey
HDDemoDataFoodSampleGeneratorLastMealTimeKey
HDDemoDataFoodSampleGeneratorLastMealKey
HDDemoDataFoodSampleGeneratorNextBloodGlucoseSampleTimeKey
HDDemoDataFoodSampleGeneratorNextBloodGlucoseFingerStickSampleTimeKey
HDDemoDataFoodSampleGeneratorNextBloodGlucoseMealTimeKey
HDDemoDataFoodSampleGeneratorLastBloodGlucoseKey
HDDemoDataFoodSampleGeneratorNextInsulinPumpBasalSampleKey
HDDemoDataFoodSampleGeneratorCarbohydratesLeftToDigestKey
HDDemoDataFoodSampleGeneratorBloodGlucoseCarbohydrateGlycemicRateKey
HDDemoDataFoodSampleGeneratorBloodGlucoseDecreaseRateDueToInsulinKey
HDDemoDataFoodSampleGeneratorNextWaterConsumeSampleTimeKey
mg/dL
foodDatabase
T@"HDDemoDataFoodDatabase",&,N,V_foodDatabase
nextMealTime
Td,N,V_nextMealTime
lastMeal
T@"NSArray",C,N,V_lastMeal
nextBloodGlucoseSampleTime
Td,N,V_nextBloodGlucoseSampleTime
nextBloodGlucoseFingerStickSampleTime
Td,N,V_nextBloodGlucoseFingerStickSampleTime
nextBloodGlucoseMealTime
Td,N,V_nextBloodGlucoseMealTime
lastBloodGlucose
Td,N,V_lastBloodGlucose
nextInsulinPumpBasalSampleTime
Td,N,V_nextInsulinPumpBasalSampleTime
carbohydratesLeftToDigest
Td,N,V_carbohydratesLeftToDigest
bloodGlucoseCarbohydrateGlycemicRate
Td,N,V_bloodGlucoseCarbohydrateGlycemicRate
bloodGlucoseDecreaseRateDueToInsulin
Td,N,V_bloodGlucoseDecreaseRateDueToInsulin
nextWaterConsumedSampleTime
Td,N,V_nextWaterConsumedSampleTime
nextBreakfastTime
Td,R,N,V_nextBreakfastTime
nextLunchTime
Td,R,N,V_nextLunchTime
nextSnackTime
Td,R,N,V_nextSnackTime
nextDinnerTime
Td,R,N,V_nextDinnerTime
lastMealTime
Td,R,N,V_lastMealTime
HDCloudSyncDeleteZonesOperation.m
@16@?0@"HDCloudSyncZone"8
zonesToDelete
T@"NSArray",C
syncCircleIdentifier
ownerParticipant
sourceProfileIdentifier
shareParticipant
ownerCloudKitEmailAddress
invitationToken
hasSyncCircleIdentifier
T@"NSString",&,N,V_syncCircleIdentifier
hasOwnerParticipant
T@"NSData",&,N,V_ownerParticipant
hasSourceProfileIdentifier
T@"NSData",&,N,V_sourceProfileIdentifier
hasShareParticipant
T@"NSData",&,N,V_shareParticipant
hasOwnerCloudKitEmailAddress
T@"NSString",&,N,V_ownerCloudKitEmailAddress
invitationTokens
T@"NSMutableArray",&,N,V_invitationTokens
_HKQuantitySampleComparisonFilter+HealthDaemon.m
Unreachable code has been executed
numerator
denominator
hasNumerator
T@"HDCodableCodedQuantity",&,N,V_numerator
hasDenominator
T@"HDCodableCodedQuantity",&,N,V_denominator
launchError
hasSuccess
TB,N,V_success
hasLaunchError
T@"HDCodableError",&,N,V_launchError
stringValue
dateValue
numberIntValue
numberDoubleValue
quantityValue
dataValue
hasKey
T@"NSString",&,N,V_key
hasStringValue
T@"NSString",&,N,V_stringValue
hasDateValue
Td,N,V_dateValue
hasNumberIntValue
Tq,N,V_numberIntValue
hasNumberDoubleValue
Td,N,V_numberDoubleValue
hasQuantityValue
T@"HDCodableQuantity",&,N,V_quantityValue
hasDataValue
T@"NSData",&,N,V_dataValue
-wal
!isOpen()
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.25.2/HealthKit/HealthDaemon/Database/HighFrequencyData/HDTransactionalFile.cpp
File is already open.
isOpen()
File failed to open as expected.
Invalid header version for transactional file.
Transactional file header has incorrect magic word.
/dev/urandom
_activeReadTransactions.find(threadID) == _activeReadTransactions.end()
invalidate
Attempt to invalidate the transactional file from within a read transaction.
_activeWriteTransactions.find(threadID) == _activeWriteTransactions.end()
Attempt to invalidate the transactional file from within a write transaction.
Read transaction attempted after file was closed.
readTransactionWithLambda
File has not yet been opened.
writeTransactionWithLambda
Nested write transaction failed.
Unable to upgrade from a read transaction to a write transaction.
Write transaction attempted after file was closed.
configurePageSize
Page size must be configured before the file is opened.
pageSize > 1 && !(pageSize & (pageSize - 1))
pageSize must be a power of 2
!page.is_mapped()
_writeBufferAtOffset
Attempt to write to a mapped page.
(start + length) <= _length
slice
Slice extends beyond end of buffer.
offset >= _offset
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.25.2/HealthKit/HealthDaemon/Database/HighFrequencyData/Utility/HDFilePage.h
Attempt to slice starting before the page start.
length <= (_length - localOffset)
Attempt to slice beyond page end
rawBytes != nullptr
Attempt to slice an invalid page.
source._length == _length
copyFrom
Cannot copy buffers of unequal sizes.
_buffer != nullptr
Canot copy to an invalid buffer.
source._buffer != nullptr
Cannot copy from an invalid buffer.
valid()
copy
Copying an invalid page.
bitset set argument out of range
maxSize > 0
setMaxSize
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.25.2/HealthKit/HealthDaemon/Database/HighFrequencyData/Utility/HDTransactionalCache.hpp
Cache max size must be greater than 0.
unique_lock::unlock: not locked
unique_lock::lock: references null mutex
unique_lock::lock: already locked
(state == CacheEntryState::Dirty) || (entry->state == CacheEntryState::Clean)
_replaceValueForEntry
Unable to replace a dirty entry with a clean one.
_waitingWriterThreads.front() == std::this_thread::get_id()
operator()
Improper thread at write transaction start.
medication_codings
assertion_type
assertion_date
earliest_dosage_date
reason_for_use_codings
not_taken
reasons_not_taken_codings
medication_record_samples
TEXT
HDMedicationRecordEntity.m
+[HDMedicationRecordEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
@"HDCodableMedicationDosage"16@?0@"HKMedicationDosage"8
profile
T@"HDProfile",R,W,N,V_profile
UUIDs
BundleIdentifier
T@"NSSet",&,N,V_UUIDs
T@"NSString",C,N,V_bundleIdentifier
HDPassiveQuantityDataAggregator.m
[quantityType isKindOfClass:[HKQuantityType class]]
quantityType
T@"HKQuantityType",R,C,N,V_quantityType
<%@:%p %@ %@>
ACTIVE
%0.2lfs
idle
v16@?0@"NSObject<OS_xpc_object>"8
currentActivity
T@"NSObject<OS_xpc_object>",&,V_currentActivity
loggingCategory
T@"NSObject<OS_os_log>",R,N,V_loggingCategory
shouldDefer
waitingForTrigger
TB,V_waitingForTrigger
com.apple.healthd
INSERT INTO %@ (%@, %@, %@, %@) VALUES (?, ?, ?, ?)
TinkerNRDeviceUUIDKey
TinkerDSIDKey
instruction
timingPeriod
hasInstruction
T@"NSString",&,N,V_instruction
hasTimingPeriod
T@"HDCodableMedicalDateInterval",&,N,V_timingPeriod
Received nil for non-nil field 'medicationCodings'
objectType
anchor
entityIdentifier
hasObjectType
Ti,N,V_objectType
hasAnchor
Tq,N,V_anchor
hasEntityIdentifier
T@"HDCodableEntityIdentifier",&,N,V_entityIdentifier
CategorySamples
QuantitySamples
Workouts
ActivityCaches
LegacyAchievements
UserCharacteristics
Deprecated7
ObjectAssociations
UnitPreferences
Sources
Authorizations
Devices
Correlations
DataTypeSourceOrder
NanoUserDefaults
ProtectedNanoUserDefaults
LocationSeriesSamples
DeletedSamples
LegacyAchievementKeyValue
ActivityAchievementsKeyValue
BinarySamples
CDADocumentSamples
FHIRResources
ClinicalGateways
MedicationOrders
MedicationDispenseRecords
MedicationRecords
DiagnosticTestResults
DiagnosticTestReports
VaccinationRecords
ConditionRecords
AllergyRecords
ProcedureRecords
ClinicalAccounts
UserDefaults
ClinicalDeletedAccounts
AccountOwners
UnknownRecords
OnboardingCompletions
ECGSamples
SleepSchedules
QuantityDerivedCategorySamples
Start
nil query server
v16@?0@"HDQueryServer"8
Failed to start query with unknown error
v16@?0@"<HDQueryManagerUnitTestDelegate>"8
Attempt to start a query with the same identifier.
Missing process bundle identifier
@16@?0@"_HDProcessQueryCollection"8
queryType
queryId
dataType
filter
v32@?0@"NSString"8@"_HDProcessQueryCollection"16^B24
%@ (%ld active queries)
Query blocks pending:
%@ %@ %@ created %@
<invalidated query>
%lu additional blocks not shown
Query blocks executing:
Query blocks executing:
Process: %@
@16@?0@"HDQueryServer"8
 (%@)
 - suspended
 - foreground
 - background
v32@?0@"NSString"8@"NSArray"16^B24
HDQueryManager.m
_unitTest_suspendCount == 0
unitTest_delegateQueue
T@"NSObject<OS_dispatch_queue>",&,V_unitTest_delegateQueue
unitTest_delegate
T@"<HDQueryManagerUnitTestDelegate>",W,V_unitTest_delegate
T@"HDDaemon",R,W,N,V_daemon
processBundleIdentifier
T@"NSString",R,C,N,V_processBundleIdentifier
queryServers
T@"NSArray",R,C,N
hasQueryServers
clientState
T@"HDQueryServerClientState",C,N,V_clientState
<%@ query:%@ QoS:%@ process:%@ timestamp:%@>
block
T@?,R,C,N,V_block
queryServer
T@"HDQueryServer",R,W,N,V_queryServer
qualityOfService
Tq,R,N,V_qualityOfService
creationTime
Td,R,N,V_creationTime
shouldThrottle
%@.%@_%@
%@_%@
CREATE 
UNIQUE 
INDEX IF NOT EXISTS %@ ON %@ (%@)
 WHERE (%@)
entityClass
T#,R,N,V_entityClass
disambiguatedName
columns
T@"NSArray",R,N,V_columns
TB,R,N,GisUnique,V_unique
predicateString
T@"NSString",R,C,N,V_predicateString
2a37
Insufficient data (%lu bytes) for heart rate measurement.
Insufficient data (%lu bytes) for heart rate value.
Insufficient data (%lu bytes) for energy expended.
Insufficient data (%lu bytes) for RR interval.
Heart rate measurement (%@) %ld BPM
, %ld J
, %@sensor contact detected
, RRIntervals:[ 
heartRateValue
Tq,N,V_heartRateValue
hasEnergyExpended
TB,N,V_hasEnergyExpended
energyExpended
Tq,N,V_energyExpended
hasSensorContact
TB,N,V_hasSensorContact
sensorContact
TB,N,V_sensorContact
rrIntervals
T@"NSArray",&,N,V_rrIntervals
derivedContactStatus
TQ,R,N
past
future
pasts
T@"NSMutableArray",&,N,V_pasts
futures
T@"NSMutableArray",&,N,V_futures
MedicalIDData.archive
Medical ID must not be nil
Attempt to save Medical ID with no updated fields.
Attempt to save Medical ID created before current Medical ID on disk.
Attempt to save empty Medical ID for the first time.
Medical ID Update
%@ is not a directory
T@"HDProfile",W,N,V_profile
SOSUtilities
Class getSOSUtilitiesClass(void)_block_invoke
HDMedicalIDDataManager.m
Unable to find class %s
void *SOSLibrary(void)
/System/Library/PrivateFrameworks/SOS.framework/SOS
/System/Library/PrivateFrameworks/SOS.framework/Contents/MacOS/SOS
v24@?0@"NSSet"8@"NSError"16
v16@?0@"NSNumber"8
@16@?0@"HDSourceEntity"8
nanoRegistryPairingID
T@"NSUUID",&,N,V_nanoRegistryPairingID
nsuuid
T@"NSUUID",&,N,V_nsuuid
uniqueIDOverride
T@"NSString",C,N,V_uniqueIDOverride
service
T@"NSString",C,N,V_service
T@"NSString",C,N,V_name
productBuildVersion
T@"NSString",C,N,V_productBuildVersion
buildType
T@"NSString",C,N,V_buildType
productType
T@"NSString",C,N,V_productType
T@"NSString",C,N,V_modelNumber
systemVersion
T@"NSString",C,N,V_systemVersion
regionCode
T@"NSString",C,N,V_regionCode
identities
T@"NSArray",C,N,V_identities
relationship
electrocardiogramVersion
T@"NSString",C,N,V_electrocardiogramVersion
backgroundAtrialFibrillationVersion
T@"NSString",C,N,V_backgroundAtrialFibrillationVersion
isLocallyPaired
isDefaultPairedDevice
isActive
TB,N,V_isActive
supportsCinnamonHW
TB,N,V_supportsCinnamonHW
supportsCinnamonAntimonyGloryF
TB,N,V_supportsCinnamonAntimonyGloryF
B24@?0@"NSError"8^@16
writeBlock
T@?,R,C,N,V_writeBlock
completion
T@?,R,C,N,V_completion
HDSortedSampleIterator.mm
_isComplete
Sorted sample iterator is exhausted
v56@?0B8{vector<std::__1::tuple<long long, HKSample *>, std::__1::allocator<std::__1::tuple<long long, HKSample *> > >=^{tuple<long long, HKSample *>}^{tuple<long long, HKSample *>}{__compressed_pair<std::__1::tuple<long long, HKSample *> *, std::__1::allocator<std::__1::tuple<long long, HKSample *> > >=^{tuple<long long, HKSample *>}}}12@"HKSortedQueryAnchor"36B44@"NSError"48
T@"HKSample",R,N
objectID
nextAnchor
T@"HKSortedQueryAnchor",R,C,N
Indoor Bike Data: instantaneousSpeed = %@, averageSpeed = %@, instantaneousCadence = %@, averageCadence = %@, totalDistance = %@, resistanceLevel = %@, instantaneousPower = %@, averagePower = %@, totalEnergy = %@, energyPerHour = %@, energyPerMinute = %@, heartRate = %@, metabolicEquivalent = %@, elapsedTime = %@, remainingTime = %@
instantaneousCadenceIsSet
instantaneousCadence
averageCadenceIsSet
averageCadence
No owner identifiers fetched when preparing for sync.
Target Computation & Validation
B16@?0@"HDCloudSyncConditionalOperation"8
Targets & Validation
Push Validation
v16@?0@"HDCloudSyncCompoundOperation"8
HDDemoDataReproductiveHealthSampleHelperNextSexualActivitySampleTimeKey
HDDemoDataReproductiveHealthSampleHelperNextCycleDaySampleTimeKey
HDDemoDataReproductiveHealthSampleGenerator.m
HDProfile must be set
com.apple.private.health.menstrual-cycles
OnboardingCompleted
MenstruationNotificationsEnabled
MenstruationProjectionsEnabled
FertileWindowProjectionsEnabled
FertileWindowNotificationsEnabled
ShouldHideByDisplayTypeIdentifier
basalBodyTempMultiplierTable
T@"NSArray",C,N,V_basalBodyTempMultiplierTable
cervicalMucusTable
T@"NSArray",C,N,V_cervicalMucusTable
nextSexualActivitySampleTime
Td,N,V_nextSexualActivitySampleTime
nextCycleDaySampleTime
Td,N,V_nextCycleDaySampleTime
T@"HDProfile",&,N,V_profile
machineType
TQ,R,N,V_machineType
ConnectedGymLegacySpeed
kcal
 PRIMARY KEY
 AUTOINCREMENT
 NOT NULL
 REFERENCES %@(%@) ON DELETE %@
T@"NSString",C,N,V_type
isAutoincrement
TB,N,V_isAutoincrement
isPrimaryKey
TB,N,V_isPrimaryKey
isNullable
TB,N,V_isNullable
defaultValue
T@"NSString",C,N,V_defaultValue
foreignKeyTargetTable
T@"NSString",C,N,V_foreignKeyTargetTable
foreignKeyTargetColumn
T@"NSString",C,N,V_foreignKeyTargetColumn
deletionAction
Tq,N,V_deletionAction
CREATE TABLE %@ (%@);
 CREATE %@INDEX %@ on %@;
T@"NSDictionary",&,N,V_columns
T@"NSSet",&,N,V_indices
%@ (%@)
UNIQUE
INDEX
T@"NSArray",&,N,V_columns
isUnique
TB,N,V_isUnique
<%@: 
tables
T@"NSDictionary",&,N,V_tables
LHS has extra database '%@'
RHS has extra database '%@'
LHS: %@: extra table '%@'
RHS: %@: extra table '%@'
LHS: %@: extra column '%@'
%@: Column %@ types differ: %@ vs %@
%@: Column %@ default values differ: %@ vs %@
%@: Column %@ nullability differs: %d vs %d
%@: Column %@ pk status differs: %d vs %d
%@: Column %@ foreign key differs: %@(%@) %@ vs %@(%@) %@
RHS: %@: extra column '%@'
LHS: %@: extra index '%@'
RHS: %@: extra index '%@'
dataSources
T@"NSMutableArray",&,N,V_dataSources
workoutConfiguration
T@"HKWorkoutConfiguration",&,N,V_workoutConfiguration
sampleHandler
T@?,C,V_sampleHandler
T@?,C,V_eventHandler
metadataHandler
T@?,C,V_metadataHandler
updateconfigurationHandler
T@?,C,V_updateconfigurationHandler
TQ,V_workoutDataDestinationState
T@"<HDWorkoutDataAccumulator>",R,N,VworkoutDataAccumulator
prescriber
number_of_fills
written_date
ended_date
reason_codings
reason_ended_codings
medication_order_samples
HDMedicationOrderEntity.m
+[HDMedicationOrderEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
HealthLite
HDUnprotectedNanoUserDefaultsDidSync
HDProtectedNanoUserDefaultsDidSync
HDNanoUserDefaultsDidSyncNotificationKeysKey
EnableDemoMode
com.apple.DeepBreathing
daemonTransaction
T@"HDDaemonTransaction",&,N,V_daemonTransaction
sessionConfiguration
T@"_HKDeepBreathingSessionConfiguration",R,C,N,V_sessionConfiguration
serverState
Tq,N,V_serverState
com.apple.healthd.services
serviceType
added
removed
servicesCount
com.apple.healthd.services.connection-duration
appBundleIdentifier
shouldPrompt
hostAppName
errorDescription
hasAppBundleIdentifier
T@"NSString",&,N,V_appBundleIdentifier
T@"NSData",&,N,V_requestIdentifier
hasShouldPrompt
TB,N,V_shouldPrompt
hasHostAppName
T@"NSString",&,N,V_hostAppName
hasErrorDescription
T@"NSString",&,N,V_errorDescription
bundle_id
source_options
local_device
product_type
deleted
mod_date
provenance
owner_bundle_id
sources
BLOB UNIQUE NOT NULL
bundle_id_uuid
missing source UUID during decoding
Invalid bundle identifier '%@'
HDSourceEntity.m
UUID != nil
bundleIdentifier != nil
Attempt to insert source with nil UUID or bundleIdentifier (%@, %@)
INSERT INTO %@ (%@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, COALESCE((SELECT MAX(%@) + 1 FROM %@), 1))
B32@?0@"NSArray"8^{HDSQLiteRow=}16^@24
SELECT %@ FROM %@ WHERE %@ = ? AND %@ = 0
v24@?0[16C]8^B16
[entityEncoder purpose] == HDEntityEncodingPurposeCodableObjectCreation
UPDATE %@ SET %@=0
values.count == properties.count
UPDATE %@ SET %@ = COALESCE((SELECT MAX(%@) + 1 FROM %@), 1), %@ = ?
, %@ = ?
 WHERE %@ = ? AND (0
 OR %@ != ?
SELECT %@ FROM %@ WHERE %@ = ?
UPDATE %@ SET %@ = ?, %@ = ?, %@ = '', %@ = '', %@ = 0, %@ = 0, %@ = '', %@ = 1, %@ = NULL, %@ = (SELECT MAX(%@) + 1 FROM %@) WHERE %@ = ? AND %@ == 0
[self superclassEncoder] == nil
B64@?0@"HDSQLiteEntity"8@"NSArray"16^{HDSQLiteRow=}24q32Q40^B48^@56
@16@?0@"HDCodableSource"8
syncEntityIdentifier
T@"HDSyncEntityIdentifier",R,C,N
@16@?0@"NSUUID"8
Watch%%
com.apple.private.alloy.health.sync.classc
NanoSync
WatchSwitchIndex
syncing after unlock
Unable to launch watch app
Unable to complete Tinker health sharing opt in because active sync store is nil
Active device (%@) is not same as the device we want to pair to (%@).
Unable to complete Tinker health sharing because active sync store is nil
Unable to complete Tinker end to end Cloud Sync because active sync store is nil
HDNanoSyncManager.m
_waitingForFirstUnlock == NO
%@ invalidated
com.apple.private.alloy.health.sync.db
message-center
sync is restricted by PairedSync
request != nil
syncStore != nil
response != nil
[[syncStore device] hd_isEquivalentToDevice:[response.toParticipant device]]
Incoming message has no sync version information.
Incoming message has unexpected version %d (expected %d, current is %d).
block != NULL
v24@?0@"HKNanoSyncPairedDevicesSnapshot"8@"NSError"16
v16@?0@"HDNanoSyncStore"8
v24@?0@"HDNanoSyncStore"8@?<v@?>16
request
response
![syncStore isActive] || (activeSyncStore == nil)
v32@?0@"NSString"8@"HDNanoSyncStore"16^B24
no active paired device
SBIconVisibility
com.apple.Fitness
com.apple.Fitness.activity-widget
com.apple.springboard.appIconVisibilityPreferencesChanged
_isMaster
[syncStore persistentUUID] != nil
Restore
Restore timed out
Restore cancelled by reset
v28@?0I8@"NSDate"12@"NSUUID"20
v32@?0@"NSUUID"8@"NSMutableArray"16^B24
PairedSync session began
failed to find sync store for device %@
no device specified
Unexpected restore state %ld
unexpected restore request on master device
missing persistent UUID
missing health UUID
missing restore request content
restore request missing required fields
restore request has invalid sequence number
remote requested abort
Companion change requires protected data accessibility.
ReceiveRestoreRequest
Requested by NanoSync remote
unexpected restore response on slave
missing restore response content
invalid pairing UUIDs
restore response missing required fields
no active restore session
unexpected restore UUID %@ (expected %@)
v20@?0i8@"NSString"12
finishing restore
unxpected finish sequence number %lld (expected %lld)
continuing restore
aborting restore
abort requested by remote
ignoring unexpected status code
restore incomplete
missing changeset and status content
remote requires obliteration
ReceiveChangeRequest
Remote requested sync
Remote requested last chance sync
missing status content
illegal obliteration request
unhandled status code %d
ReceiveChangeResponse
Remote requested reactivation
periodic sync timer fired
restore is incomplete
missing sync store
proactive sync is unavailable on this device
proactive sync
changes != nil
originSyncStore != nil
user characteristics changed
user preferences changed
workout samples were associated
samples of observed types were added
watch off wrist
completion != NULL
pairingID cannot be nil
Device with pairing ID "%@" is not active
Last chance sync request
request not supported
workout-launch
Invalid request identifier %@
with response
with nil response
v24@?0@"HDCodableStartWorkoutAppResponse"8@"NSError"16
companion-user-notification
v24@?0@"HDCodableCompanionUserNotificationResponse"8@"NSError"16
tinker-optin
Apple Watch needs to be unlocked for sharing setup, ignoring opt in request: %@
Watch is not in Tinker pairing mode, ignoring opt in request: %@
[sharing-setup] Profile %@ is not an instance of type HDPrimaryProfile (#t0)
v12@?0i8
Tinker user declined Health sharing opt-in
tinker-pairing
v24@?0@"HDCodableSharingSetupMetadata"8@"NSError"16
Guardian icloud ID not found %@
Watch is not in Tinker pairing mode, ignoring request: %@
Tinker Setup
Setup Tinker sharing.
v32@?0@"HDAsynchronousTaskTree"8q16@"NSError"24
v24@?0@"HDAsynchronousTaskTree"8@?<v@?q@"NSError">16
v24@?0@"HDCloudSyncShareSetupMetadata"8@"NSError"16
Watch is not in Tinker pairing mode, ignoring end to end Cloud Sync request: %@
auth-identifier
Remote authorization request complete
v28@?0@"NSUUID"8B16@"NSError"20
v28@?0B8@"NSString"12@"NSError"20
Unable to look up host app with requested bundle identifier.
Reset Received Nanosync Anchors
@16@?0@"HDSyncStoreEntity"8
v16@?0@"<HDNanoSyncManagerObserver>"8
Master: %s
Active Store:
Inactive Stores:
Periodic sync timer: %s
Last periodic sync: %@
Received sync data.
client process entered foreground
isMaster
syncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
messageCenter
T@"HDIDSMessageCenter",&,N,V_messageCenter
observers
T@"HKObserverSet",&,N,V_observers
nanoSyncDomain
T@"HDKeyValueDomain",&,N,V_nanoSyncDomain
activeSyncStore
T@"HDNanoSyncStore",&,N,V_activeSyncStore
activeTinkerSyncStore
T@"HDNanoSyncStore",&,N,V_activeTinkerSyncStore
tinkerOptInAcceptedToken
Ti,N,V_tinkerOptInAcceptedToken
tinkerOptInDeclinedToken
Ti,N,V_tinkerOptInDeclinedToken
tinkerOptInResponseBlocks
T@"NSMutableArray",&,N,V_tinkerOptInResponseBlocks
syncStoresByDeviceIdentifier
T@"NSMutableDictionary",&,N,V_syncStoresByDeviceIdentifier
pairedDevices
T@"NSArray",&,N,V_pairedDevices
pairedDevicesSnapshot
T@"HKNanoSyncPairedDevicesSnapshot",&,V_pairedDevicesSnapshot
waitingForFirstUnlock
TB,N,V_waitingForFirstUnlock
periodicSyncTimer
T@"NSObject<OS_dispatch_source>",&,N,V_periodicSyncTimer
lastPeriodicSyncDate
T@"NSDate",&,N,V_lastPeriodicSyncDate
restoreTimeout
Td,V_restoreTimeout
enablePeriodicSyncTimer
TB,V_enablePeriodicSyncTimer
pairedSyncManager
T@"HDPairedSyncManager",R,N,V_pairedSyncManager
requestRecord
T@"HKAuthorizationRequestRecord",&,N,V_requestRecord
requestSentHandler
T@?,C,N,V_requestSentHandler
T@?,C,N,V_completion
T@"HDCodableRoutineRequestMessage",&,N,V_request
T@"HDCodableStartWorkoutAppRequest",&,N,V_request
T@"HDCodableCompanionUserNotificationRequest",&,N,V_request
T@"HDCodableTinkerOptInRequest",&,N,V_request
T@"HDCodableTinkerPairingRequest",&,N,V_request
T@"HDCodableTinkerEndToEndCloudSyncRequest",&,N,V_request
pull request
last chance
active only
requested by remote
%@.%@%@%@.%p
Invalid configuration class %@.
Missing workout builder identifier.
v16@?0@"HKSample"8
B16@?0@"HKSample"8
_HKMedicalRecordComparisonFilter+HealthDaemon.m
HDWorkoutSessionAssertionIdentifierCarousel
HDWorkoutSessionAssertionIdentifierDisableAOT
applicationBundleIdentifier
T@"NSString",R,N,V_applicationBundleIdentifier
supportsAOT
TB,N,V_supportsAOT
medicalIDData
medicalIDLogs
hasMedicalIDData
T@"HDCodableMedicalIDData",&,N,V_medicalIDData
T@"NSMutableArray",&,N,V_medicalIDLogs
display_name
unknown_record_samples
HDUnknownRecordEntity.m
+[HDUnknownRecordEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
protected.
HDSQLiteJoinClause.m
localTable != nil
targetEntityClass != nil
localReferenceProperty != nil
targetKeyProperty != nil
([localTable hasPrefix:_HDSQLiteHealthDatabaseProtectedDatabasePrefix] && [[targetEntityClass disambiguatedDatabaseTable] hasPrefix:_HDSQLiteHealthDatabaseProtectedDatabasePrefix]) || (![localTable hasPrefix:_HDSQLiteHealthDatabaseProtectedDatabasePrefix] && ![[targetEntityClass disambiguatedDatabaseTable] hasPrefix:_HDSQLiteHealthDatabaseProtectedDatabasePrefix])
USING(%@)
ON %@.%@=%@.%@
INNER
LEFT
%@ JOIN %@ as %@ %@
%@ JOIN %@ %@
<%@:%p, localTable:%@, targetEntity:%@>
localTable
T@"NSString",R,C,N,V_localTable
targetEntityClass
T#,R,N,V_targetEntityClass
joinAsName
localReferenceProperty
T@"NSString",R,C,N,V_localReferenceProperty
targetKeyProperty
T@"NSString",R,C,N,V_targetKeyProperty
joinType
Tq,R,N,V_joinType
user_enabled_flag
relogin_needed_flag
creation_date
last_fetch_date
last_full_fetch_date
last_extracted_rowid
last_submitted_rowid
last_extracted_rules_version
credential_id
gateway_id
patient_hash
sync_identifier
modification_date
gateway
gateway.external_id
gateway.last_reported_status
clinical_accounts
BLOB NOT NULL UNIQUE
REAL
ECGNSR-Cinnamon
ECGAFib-Cinnamon
HKEADFFileParser+DemoData.m
fileName != nil
eadf
data != nil
bool HDSQLiteRow::columnIsNull(int) const
bool HDSQLiteRow::columnAsBoolean(int) const
double HDSQLiteRow::columnAsDouble(int) const
NSString * _Nullable HDSQLiteRow::columnAsString(int) const
const void * _Nullable HDSQLiteRow::columnAsBytes(int) const
int HDSQLiteRow::columnBytesLength(int) const
NSData * _Nullable HDSQLiteRow::columnAsData(int) const
NSUUID * _Nullable HDSQLiteRow::columnAsUUID(int) const
NSDate * _Nullable HDSQLiteRow::columnAsDate(int) const
NSNumber * _Nullable HDSQLiteRow::columnAsNumber(int) const
id  _Nullable HDSQLiteRow::columnAsNaturalType(int) const
com.apple.healthd.authorization.request
isAppleWatch
com.apple.healthd.authorization.prompt
database.corruption
sqlite
reported
context
build
date
Database corruption in %@: %@
HFD failure '%@': %@
Original Context:
%@-%@
%@ (%lld): %@
Corrupt Health Database
Corruption has been detected in your Health database and it cannot be opened. Please file a radar with Tap-to-Radar against 'Health' and attach your Health database directory. With your device attached to a Mac, run /SWE/Teams/Health/Tools/bin/extractHealthDiagnostics. Please make sure that the device remains unlocked at all times during the process. Details: https://confluence.sd.apple.com/display/HealthSoftware/How+to+file+good+Health+Bugs
Tap-to-Radar
Not Now
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"HDUserNotification"8q16@"NSError"24
unitTest_willPresentTTRAlertHandler
T@?,C,N,V_unitTest_willPresentTTRAlertHandler
HDDemoDataGeneratorStateFirstSampleDateKey
HDDemoDataGeneratorStateLastSampleDateKey
HDDemoDataGeneratorStateLastRunDateKey
HDDemoDataGeneratorStateCurrentDayKey
HDDemoDataGeneratorStateStartTimeKey
HDDemoDataGeneratorStateEndTimeKey
firstSampleDate
T@"NSDate",&,N,V_firstSampleDate
lastSampleDate
T@"NSDate",&,N,V_lastSampleDate
lastRunDate
T@"NSDate",&,N,V_lastRunDate
currentDay
Tq,N,V_currentDay
currentDate
startTime
Td,N,V_startTime
currentTime
Td,N,V_currentTime
endTime
Td,N,V_endTime
finished
TB,N,GisFinished,V_finished
firstRun
TB,N,GisFirstRun,V_firstRun
exercising
TB,R,N,GisExercising
running
TB,R,N,GisRunning
cycling
TB,R,N,GisCycling
swimming
TB,R,N,GisSwimming
doingHIIT
TB,R,N,GisDoingHIIT
walking
TB,R,N,GisWalking
doingElliptical
TB,R,N,GisDoingElliptical
doingYoga
TB,R,N,GisDoingYoga
hiking
TB,R,N,GisHiking
coreTraining
TB,R,N,GisCoreTraining,V_coreTraining
dancing
TB,R,N,GisDancing,V_dancing
functionalStrengthTraining
TB,R,N,GisFunctionalStrengthTraining,V_functionalStrengthTraining
coolingDown
TB,R,N,GisCoolingDown
T@"HDDemoDataGeneratorWorkoutConfiguration",&,N,V_workoutConfiguration
calendarDay
client
T@"HDHealthStoreClient",R,N,V_client
shouldAcquireCLAssertion
TB,R,N,V_shouldAcquireCLAssertion
bksAssertion
T@"BKSProcessAssertion",&,N,V_bksAssertion
coreLocationAssertion
T@"CLInUseAssertion",&,N,V_coreLocationAssertion
HDBackgroundWorkoutRunner.m
[assertion isKindOfClass:[_HDBackgroundRunningAssertion class]]
HealthKit Background Workout
v12@?0B8
_HKClinicalRecordComparisonFilter+HealthDaemon.m
HDUserCharacteristicsDidChangeNotification
HDUserCharacteristicsShouldSyncNotification
HDUserCharacteristicsManager.m
profile != nil
Failed to get local device data provenance
v32@?0@"NSString"8@"HKCharacteristicType"16@?<@@?@>24
@"NSNumber"16@?0@"NSNumber"8
@"NSNumber"16@?0@"NSDateComponents"8
@"NSNumber"16@?0@"HKQuantity"8
(%@)
Needs update after unlock: %s
Profile last updated: %@
Last user profile: %@
SignificantTimeChangeNotification
v16@?0@"<HDUserCharacteristicsProfileObserver>"8
unitTest_currentDate
T@"NSDate",C,N,V_unitTest_currentDate
startDate
endDate
isBusy
hasStartDate
Tq,N,V_startDate
hasEndDate
Tq,N,V_endDate
hasIsBusy
TB,N,V_isBusy
v16@?0@"CKShareParticipant"8
participant
T@"CKShareParticipant",R,V_participant
hasApplicationIdentifier
T@"NSString",&,N,V_applicationIdentifier
hasWorkoutConfiguration
T@"HDCodableWorkoutConfiguration",&,N,V_workoutConfiguration
client_identifier
due_date
due_date_components
event_identifier
event_options
alarm_events
INTEGER NOT NULL DEFAULT 0
(due_date IS NULL AND due_date_components IS NOT NULL) OR (due_date IS NOT NULL AND due_date_components IS NULL)
B16@?0@"HKObject"8
B32@?0@"HKSample"8@"NSNumber"16^@24
HDClientAuthorizationOracle.m
type != nil
types != nil && types.count > 0
B16@?0@"HKObjectType"8
v24@?0@"HKObjectType"8@?<v@?@@>16
expiration_date
scope
patient_id
requested_scope
clinical_credentials
HDUSR2SignalNotification
HDHealthDaemonApplicationsInstalledNotification
HDHealthDaemonApplicationsInstalledBundleIdentifiersKey
HDHealthDaemonApplicationsUninstalledNotification
HDHealthDaemonApplicationsUninstalledBundleIdentifiersKey
HDDaemonHomescreenUnlockedNotification
HDDaemonHomescreenUnlockedAtHomescreenKey
HDHealthStoreServerDidAssociateWorkoutSamples
HDHealthStoreServerUserPreferencesDidChangeNotification
HDCPSWhitelistedProviders
HDCPSEnvironment
Production
Carry
Staging
Integration
Development
Demo
Staging2
UAT2
Integration2
Development2
Demo2
HDClinicalEnableHC
HDClinicalHCEnvironment
HDHealthRecordsGatewayListURL
HDPPTTestRunning
HDPPTTestDataUpdateApplied
.watchkitextension
HDHealthInUse
BRISK_MINUTE_INGESTION
ACTIVE_ENERGY_INGESTION
BASAL_ENERGY_INGESTION
HEART_RATE_INGESTION
DISTANCE_CYCLING_INGESTION
EXERCISE_TIME_INGESTION
DISTANCE_SWIMMING_INGESTION
SWIMMING_STROKES_INGESTION
DISTANCE_WHEELCHAIR_INGESTION
HDHealthDaemonFitnessAppsAllowedNotification
HDHealthDaemonFitnessAppsRestrictedNotification
HDCoachingDataCollectionEnabled
AppleInternalDataCollectionEnabled
com.apple.nanolifestyle
NanoLifestyleEnableFitnessDataCollectionSettingDidChangeNotification
Default
Main
Unknown (%ld)
HDCloudSyncDeleteRecordsOperation.m
B16@?0@"CKRecordID"8
recordIDsToDelete
apple_id
caller_id
primary_user
contributors
INTEGER UNIQUE NOT NULL
00000000-0000-0000-0000-000000000000
kBackgroundTaskAgentJobWindowStartTime
kBackgroundTaskAgentJobWindowEndTime
kBackgroundTaskAgentUserContext
kBackgroundTaskAgentPowerOptLevel
kBackgroundTaskAgentJobWindowAdjustTime
HDBackgroundTask <%p> has start date <%@>, end date <%@>, and user context <%@>
T@"NSDate",&,N
userContext
T@"NSDictionary",&,N
shiftsDatesWithSystemClockChanges
allowsPowerOptimizedScheduling
HDBackgroundTaskScheduler.m
task != nil
task.endDate != nil
-[HDBackgroundTaskScheduler _queue_addTask:withName:forClientNamed:]
Attempt to add persistent task for unregistered client %@.
-[HDBackgroundTaskScheduler _queue_removeTaskWithName:forClientNamed:]
Attempt to remove persistent task for unregistered client %@.
-[HDBackgroundTaskScheduler _queue_taskWithName:forClientNamed:]
Attempt to get persistent task for unregistered client %@.
void _ValidateClientName(NSString *__strong)
HDBackgroundTaskAgent client name cannot contain the string '%@'
acceptedShares
sourceUUID
authorizations
backupUUID
source
hasSourceUUID
T@"NSData",&,N,V_sourceUUID
T@"NSMutableArray",&,N,V_authorizations
hasBackupUUID
T@"NSData",&,N,V_backupUUID
hasSource
T@"HDCodableSource",&,N,V_source
DiffPriv
v32@?0@"HKSampleType"8Q16^B24
Data source is disabled.
B52@?0d8d16d24q32B40^@44
builderEntity
T@"HDWorkoutBuilderEntity",R,N,V_builderEntity
enabled
TB,N,V_enabled
_HKWorkoutComparisonFilter+HealthDaemon.m
+[_HKWorkoutComparisonFilter(HealthDaemon) _goalTypeForQuantity:]
_HKWorkoutGoalType _HKGoalTypeForQuantity(HKQuantity * _Nullable __strong)
RSSIdb
batteryLevelPercent
fitnessMachineType
1800
2A00
Disconnected
Connecting
Connected
Disconnecting
Device connection dropped
Cannot find service to perform operation %@ on device %@
Cannot find service to write characteristic %@ on device %@
Unknown property
Device not connected
The device modified its service requiring a new discovery.
Property %@ not supported
-[HDHealthPeripheral peripheral:didWriteValueForCharacteristic:error:]_block_invoke
healthServices
T@"NSMutableDictionary",&,N,V_healthServices
servicesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_servicesQueue
discoveredServices
TB,N,V_discoveredServices
serviceForProperty
T@"NSMutableDictionary",&,N,V_serviceForProperty
propertiesAwaiting
T@"NSMutableDictionary",&,N,V_propertiesAwaiting
cbPeripheral
T@"CBPeripheral",R,N,V_cbPeripheral
T@"NSUUID",R,N
state
Tq,R
stateDescription
T@"NSString",R,V_name
deviceInformation
T@"HKDevice",R,N,V_deviceInformation
HDShouldEnableCloudSync
com.apple.healthd.sync.cloud.periodic
com.apple.healthd.sync.cloud.periodic.secondary
HDLastLongTimeWithoutSuccessfulCloudSyncReportDate
HDCloudSyncHasPullAppliedChange
com.apple.healthd.sync.cloud.subscription
HDLongTimeWithoutSuccessfulCloudSyncPeriodicSyncErrorStrings
HDCloudSyncAccountInfo
HDCloudSyncKeyErrorRequiringUserAction
HKCloudSyncObserverRestoreCompletionDate
v32@?0@"HDGatedActivity"8@"NSObject<OS_xpc_object>"16@?<v@?q@"NSError">24
reason
options
%@, date=%@
%@, date=%@, success=%@, error=%@
result
v28@?0@"HDSynchronousTaskGroup"8B16@"NSArray"20
HDCloudSyncCoordinator.m
profileIdentifier != nil
%@ Account (Credentials: %@, Status: %@, Encryption: %@)
v24@?0@"NSString"8@"NSError"16
Fetch cloud sync status
v40@?0B8@"NSDate"12@"NSDate"20B28@"NSError"32
Unable to get the database UUID
CloudKit Partial Error:
Manatee Unavailable (Within CloudKit Partial Error)
%@ => %@
HealthKit Internal Failure: %@
[%@] %@
cannot set Health dataclass enabled state because the primary account is nil
ENABLED
disabled
Managed Apple IDs are not permitted to participate in cloud sync.
Health cloud sync is disabled for this Apple ID.
Cloud sync disabled: Demo data is enabled but sync for demo data default (%@) is not set.
Cloud sync disabled by switch: Internal Settings > Health > Cloud Sync Enabled
aps-environment
UserRequestedBackupTask
Periodic Cloud Sync
Periodic sync failed, but did not provide an error
v16@?0@?<v@?>8
v32@?0q8d16@"NSError"24
CloudSync Enabled: %@ 
Started: %@
Ended: %@
HDDemoDataStatisticsSampleGeneratorPseudoRandomDoublesKey
pseudoRandomDoubles
T@"NSArray",C,N,V_pseudoRandomDoubles
HDHealthRecordsNotificationManager.m
Attempt to start notification manager with nil profile
resource_id
last_seen_date
original_fhir_resources_last_seen
builderIdentifier
T@"NSUUID",C,N,V_builderIdentifier
T@"HKWorkoutConfiguration",C,N,V_workoutConfiguration
sourceEntity
T@"HDSourceEntity",&,N,V_sourceEntity
sourceVersion
T@"NSString",C,N,V_sourceVersion
deviceEntity
T@"HDDeviceEntity",&,N,V_deviceEntity
goalType
TQ,N,V_goalType
goal
T@"HKQuantity",C,N,V_goal
shouldCollectWorkoutEvents
TB,N,V_shouldCollectWorkoutEvents
Activity cache manager is unavailable
T@"HDActivityCacheManager",W,N,V_activityCacheManager
Error creating file at %@
Failed to create fileHandle at %@
Error setting protection class for %@
syncarchive-%@-%llu
/changeset-%04llu
startAnchor (%lld) != previous endAnchor (%lld), sequence (%@)
endAnchor (%lld) != previous endAnchor (%lld), sequence (%@)
progress
T@"NSProgress",R
archiveCreator
T@"_HKArchiveCreator",R,N,V_archiveCreator
archiveURL
T@"NSURL",R,C,N,V_archiveURL
pendingAnchorRangeMap
T@"HDSyncAnchorRangeMap",R,N,V_pendingAnchorRangeMap
changesetCount
TQ,N,V_changesetCount
archiveCount
TQ,N,V_archiveCount
isComplete
TB,N,V_isComplete
T@"NSError",&,N,V_error
T@"NSProgress",R,N,V_progress
hasOpenSequence
TB,R,N,V_hasOpenSequence
archiveSize
parent_uuid
child_uuid
correlation
object
HDAssociationEntityDidReceiveSyncObjectsNotification
association_objects.uuid
object_objects.uuid
object_samples.end_date
object_objects.creation_date
object_samples.data_type
correlations
associations
HDAssociationEntity.m
[components count] == 2
One of the provided objects (UUIDs %@ and %@) was not found in database
INSERT INTO %@(%@, %@, %@) SELECT ?, %@, %@ FROM %@ WHERE %@=?
INSERT INTO %@ (%@, %@, %@) VALUES (?, ?, ?)
Unable to find parent object for UUID %@ when inserting associations.
Unable to find parent source for source id %@
Unexpected join clauses for %@
SELECT %@, %@, %@ FROM %@ %@ WHERE %@ = ?
SELECT %@, %@ FROM %@ WHERE %@ = ?
INSERT OR REPLACE INTO %@ (%@, %@, %@) VALUES (?, ?, ?)
SELECT parent.%@, child.%@, a.%@, a.%@ FROM %@ parent CROSS JOIN %@ a ON parent.%@ = a.%@ INNER JOIN %@ child ON child.%@ = a.%@ WHERE parent.%@ > ? UNION SELECT parent.%@, child.%@, a.%@, a.%@ FROM %@ child CROSS JOIN %@ a ON child.%@ = a.%@ INNER JOIN %@ parent ON parent.%@ = a.%@ WHERE child.%@ > ?
DELETE FROM %@ WHERE %@ = ?
parentUUID
T@"NSUUID",R,C,N,V_parentUUID
enforceSameSource
TB,R,N,V_enforceSameSource
permitPendingAssociations
TB,R,N,V_permitPendingAssociations
T@"HDProfile",R,N,V_profile
transaction
T@"HDDatabaseTransaction",R,N,V_transaction
%@ - %@ (%lu objects)
corUUID
objUUIDs
objUUIDsData
sameSource
T@"NSUUID",R,N,V_parentUUID
childUUIDsData
T@"NSData",R,N,V_childUUIDsData
Tq,R,N,V_provenance
v32@?0@"NSUUID"8@"NSUUID"16^B24
v32@?0@"NSUUID"8@"NSData"16^B24
pending_associations
child
%@.%@ = ?
<"%@" = %lld>
%@ (SELECT 1 FROM %@ cor WHERE ((cor.%@ = ?) AND (%@=cor.%@)) LIMIT 1))
(EXISTS
(NOT EXISTS
<"%@" = %lld %@>
exits
does not exist
%@.%@
IS NULL
IS NOT NULL
((SELECT 1 FROM %@ WHERE (%@ = %@) LIMIT 1) %@)
%@ uuid=%@ %@
HDHealthServiceCharacteristic.m
count <= sizeof(uint32_t)
count <= sizeof(int32_t)
T@"NSDate",R,N,V_updateTime
HDCloudSyncRemoveInvalidShareParticipantsOperation.m
requiredPermission
Tq,N,V_requiredPermission
participantsToCheck
T@"NSArray",C,N,V_participantsToCheck
coverageTypeCodingCollection
subscriber
subscriberId
beneficiary
policyHolder
payor
relationshipCodingCollection
classification
network
periodStartDate
periodEndDate
hasCoverageTypeCodingCollection
T@"HDCodableMedicalCodingList",&,N,V_coverageTypeCodingCollection
hasSubscriber
T@"NSString",&,N,V_subscriber
hasSubscriberId
T@"NSString",&,N,V_subscriberId
hasBeneficiary
T@"NSString",&,N,V_beneficiary
hasPolicyHolder
T@"NSString",&,N,V_policyHolder
hasPayor
T@"HDCodableStringList",&,N,V_payor
hasRelationshipCodingCollection
T@"HDCodableMedicalCodingList",&,N,V_relationshipCodingCollection
hasClassification
T@"HDCodableCoverageClassificationList",&,N,V_classification
hasNetwork
T@"NSString",&,N,V_network
hasPeriodStartDate
T@"NSData",&,N,V_periodStartDate
hasPeriodEndDate
T@"NSData",&,N,V_periodEndDate
CloudSyncMedicalID
CloudSyncMedicalIDRecord
MedicalID Record: %@ Record Modification Date: %@ Record Schema Version: %@
MedicalID Data Modified Date: %@
MedicalID Log:
Event: %@ TimeStamp: %@
%@%@%@
T@"HDCodableMedicalIDData",&,N
T@"NSArray",R,N
createdFromNSKeyedUnarchiver
TB,N,V_createdFromNSKeyedUnarchiver
demoDataGenerator
T@"HDDemoDataGenerator",W,N,V_demoDataGenerator
v32@?0@"NSString"8@"NSMutableSet"16^B24
none
DoNotResetAnchors
ExportToDisk
TQ,R,N,V_options
storeIdentifier
T@"NSUUID",R,N,V_storeIdentifier
export
-[HDStaticSyncExportTask runWithCompletion:]
Static Sync
staticSync-%@
-[HDStaticSyncExportTask syncSessionWillBegin:]
-[HDStaticSyncExportTask syncSession:sendChanges:completion:]
-[HDStaticSyncExportTask syncSession:didEndTransactionWithError:]
-[HDStaticSyncExportTask syncSession:didFinishSuccessfully:error:]
exportDirectoryURL
T@"NSURL",R,C,N,V_exportDirectoryURL
-[HDStaticSyncImportTask runWithCompletion:]
B16@?0@"NSURL"8
syncarchive-
%@ contains no data files that can be imported
path
<%@:%p storeIdentifier:%@>
com.apple.Health
Ti,R
syncStoreType
T@"NSUUID",R,C,N,V_storeIdentifier
HDStaticSyncTask.m
%@ must be an instance of %@
HDXPCListener.m
listener != nil
[listener delegate] == nil
ServiceListener
%@ (%d)
shared
allClients
T@"<HDXPCListenerDelegate>",W,N,V_delegate
clientProvider
T@"<HDXPCListenerClientProvider>",W,N,V_clientProvider
endpoint
T@"NSXPCListenerEndpoint",R
label
T@"NSString",R,C,V_label
Received nil for non-nil field 'displayName'
disabledOwnerIdentifiers
stores
displayFirstName
displayNameModificationDate
displayLastName
ownerProfileIdentifier
sharedProfileIdentifier
T@"NSMutableArray",&,N,V_disabledOwnerIdentifiers
T@"NSMutableArray",&,N,V_stores
hasDeleted
TB,N,V_deleted
hasDisplayFirstName
T@"NSString",&,N,V_displayFirstName
hasDisplayNameModificationDate
Td,N,V_displayNameModificationDate
hasDisplayLastName
T@"NSString",&,N,V_displayLastName
hasOwnerProfileIdentifier
T@"HDCloudSyncCodableProfileIdentifier",&,N,V_ownerProfileIdentifier
hasSharedProfileIdentifier
T@"HDCloudSyncCodableProfileIdentifier",&,N,V_sharedProfileIdentifier
codingSystem
codingVersion
displayString
hasCodingSystem
T@"NSString",&,N,V_codingSystem
hasCodingVersion
T@"NSString",&,N,V_codingVersion
T@"NSString",&,N,V_code
hasDisplayString
T@"NSString",&,N,V_displayString
TinkerPairedGuardianParticipantKey
TinkerSharedUserFirstName
TinkerSharedUserLastName
TinkerSharedUserDSID
<%@:%p firstName:%@ lastName:%@ DSID:%@>
firstName
T@"NSString",&,N,V_firstName
lastName
T@"NSString",&,N,V_lastName
dsid
T@"NSNumber",&,N,V_dsid
XPCClient
T@"HDXPCClient",R,V_XPCClient
T@"HDProfile",R,V_profile
T@"_HKEntitlements",R
authorizationOracle
T@"HDClientAuthorizationOracle",R,V_authorizationOracle
connection
T@"NSXPCConnection",R
process
T@"HDXPCProcess",R
configuration
T@"HKHealthStoreConfiguration",R,C,V_configuration
sourceBundleIdentifier
T@"NSString",R,C,V_sourceBundleIdentifier
T@"NSString",R,C,V_sourceVersion
T@"NSString",R,C,V_defaultSourceBundleIdentifier
Missing session UUID
Session requires recovery but no matching session record was found.
Failed to recover workout session after connection loss.
accumulator
T@"<HDWorkoutDataAccumulator>",W,V_accumulator
requiresCoreLocationAssertion
supportsAppRelaunchForRecovery
shouldStopPreviousSession
clientSource
T@"HKSource",R,C,N,V_clientSource
%@ cannot be nil
hk_compare_build_versions
hk_generate_uuid
hk_convert_uuid_string
hk_convert_blob_to_uuid_string
hk_compare_quantity_metadata_values
hk_MD5
(\d+)([a-zA-z]+)(\d+)([a-zA-Z]*)
Improper number of arguments.
Received nil for non-nil field 'name'
categorySamples
quantitySamples
workouts
activityCaches
binarySamples
deletedSamples
locationSeries
cdaDocumentSamples
fitnessFriendActivitySnapshots
fitnessFriendAchievements
fitnessFriendWorkouts
medicalRecords
generatedObjectCollection
sleepSchedules
ecgSamples
hasSourceBundleIdentifier
T@"NSString",&,N,V_sourceBundleIdentifier
T@"NSMutableArray",&,N,V_categorySamples
T@"NSMutableArray",&,N,V_quantitySamples
T@"NSMutableArray",&,N,V_workouts
T@"NSMutableArray",&,N,V_correlations
T@"NSMutableArray",&,N,V_activityCaches
T@"NSMutableArray",&,N,V_binarySamples
T@"NSMutableArray",&,N,V_deletedSamples
T@"NSMutableArray",&,N,V_locationSeries
T@"NSMutableArray",&,N,V_cdaDocumentSamples
T@"NSMutableArray",&,N,V_fitnessFriendActivitySnapshots
T@"NSMutableArray",&,N,V_fitnessFriendAchievements
T@"NSMutableArray",&,N,V_fitnessFriendWorkouts
T@"NSMutableArray",&,N,V_medicalRecords
hasGeneratedObjectCollection
T@"HDCodableGeneratedObjectCollection",&,N,V_generatedObjectCollection
hasProvenance
T@"HDCodableProvenance",&,N,V_provenance
T@"NSMutableArray",&,N,V_sleepSchedules
T@"NSMutableArray",&,N,V_ecgSamples
@16@?0@"CKRecordZone"8
B16@?0@"CKRecordZone"8
medicalIDBytes
dateSaved
isDisabled
isDisabledModifiedDate
pictureData
pictureDataModifiedDate
nameModifiedDate
gregorianBirthday
gregorianBirthdayModifiedDate
heightModifiedDate
weightModifiedDate
bloodTypeModifiedDate
isOrganDonor
isOrganDonorModifiedDate
emergencyContactsModifiedDate
clinicalContactsModifiedDate
medicalConditionsModifiedDate
medicalNotesModifiedDate
allergyInfoModifiedDate
medicationInfoModifiedDate
shareDuringEmergencyModifiedDate
primaryLanguageCodeModifiedDate
hasMedicalIDBytes
T@"NSData",&,N,V_medicalIDBytes
hasDateSaved
Td,N,V_dateSaved
hasSchemaVersion
TI,N,V_schemaVersion
hasIsDisabled
TB,N,V_isDisabled
hasIsDisabledModifiedDate
Td,N,V_isDisabledModifiedDate
hasPictureData
T@"NSData",&,N,V_pictureData
hasPictureDataModifiedDate
Td,N,V_pictureDataModifiedDate
hasName
T@"NSString",&,N,V_name
hasNameModifiedDate
Td,N,V_nameModifiedDate
hasGregorianBirthday
T@"HDCodableDateComponents",&,N,V_gregorianBirthday
hasGregorianBirthdayModifiedDate
Td,N,V_gregorianBirthdayModifiedDate
hasHeight
T@"HDCodableQuantity",&,N,V_height
hasHeightModifiedDate
Td,N,V_heightModifiedDate
hasWeight
T@"HDCodableQuantity",&,N,V_weight
hasWeightModifiedDate
Td,N,V_weightModifiedDate
hasBloodType
Ti,N,V_bloodType
hasBloodTypeModifiedDate
Td,N,V_bloodTypeModifiedDate
hasIsOrganDonor
Tq,N,V_isOrganDonor
hasIsOrganDonorModifiedDate
Td,N,V_isOrganDonorModifiedDate
T@"NSMutableArray",&,N,V_emergencyContacts
hasEmergencyContactsModifiedDate
Td,N,V_emergencyContactsModifiedDate
T@"NSMutableArray",&,N,V_clinicalContacts
hasClinicalContactsModifiedDate
Td,N,V_clinicalContactsModifiedDate
hasMedicalConditions
T@"NSString",&,N,V_medicalConditions
hasMedicalConditionsModifiedDate
Td,N,V_medicalConditionsModifiedDate
hasMedicalNotes
T@"NSString",&,N,V_medicalNotes
hasMedicalNotesModifiedDate
Td,N,V_medicalNotesModifiedDate
hasAllergyInfo
T@"NSString",&,N,V_allergyInfo
hasAllergyInfoModifiedDate
Td,N,V_allergyInfoModifiedDate
hasMedicationInfo
T@"NSString",&,N,V_medicationInfo
hasMedicationInfoModifiedDate
Td,N,V_medicationInfoModifiedDate
hasShareDuringEmergency
TB,N,V_shareDuringEmergency
hasShareDuringEmergencyModifiedDate
Td,N,V_shareDuringEmergencyModifiedDate
hasPrimaryLanguageCode
T@"NSString",&,N,V_primaryLanguageCode
hasPrimaryLanguageCodeModifiedDate
Td,N,V_primaryLanguageCodeModifiedDate
NotSet
APositive
ANegative
BPositive
BNegative
ABPositive
ABNegative
OPositive
ONegative
count/min
CKRecord is invalid for recordID %@, CKRecord: %@
MedicalID data from a future schema version is present in iCloud and cannot be handled by this device.
cloudMedicalIDData
T@"_HKMedicalIDData",R,N,V_cloudMedicalIDData
medicalIDRecord
T@"HDCloudSyncMedicalIDRecord",R,N,V_medicalIDRecord
ALTER TABLE sync_anchors RENAME TO sync_anchors_old;
CREATE TABLE sync_anchors (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, next INTEGER NOT NULL, acked INTEGER NOT NULL, frozen INTEGER NOT NULL, received INTEGER NOT NULL, expected INTEGER NOT NULL, schema TEXT NOT NULL, type INTEGER NOT NULL, store INTEGER NOT NULL, epoch INTEGER NOT NULL, UNIQUE(store, epoch, type, schema));
INSERT INTO sync_anchors (next, acked, frozen, received, expected, schema, type, store, epoch) SELECT next, acked, 0, received, 0, schema, type, store, epoch FROM sync_anchors_old;
DROP TABLE sync_anchors_old;
CREATE TABLE sync_anchors (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, next INTEGER NOT NULL, next_updated_date REAL NOT NULL, acked INTEGER NOT NULL, acked_updated_date REAL NOT NULL, frozen INTEGER NOT NULL, frozen_updated_date REAL NOT NULL, received INTEGER NOT NULL, received_updated_date REAL NOT NULL, expected INTEGER NOT NULL, expected_updated_date REAL NOT NULL, schema TEXT NOT NULL, type INTEGER NOT NULL, store INTEGER NOT NULL, epoch INTEGER NOT NULL, UNIQUE(store, epoch, type, schema));
INSERT INTO sync_anchors (next, next_updated_date, acked, acked_updated_date, frozen, frozen_updated_date, received, received_updated_date, expected, expected_updated_date, schema, type, store, epoch) SELECT next, 0.0, acked, 0.0, frozen, 0.0, received, 0.0, expected, 0.0, schema, type, store, epoch FROM sync_anchors_old;
DELETE FROM workout_builders;
DELETE FROM workout_sessions;
DROP TABLE workout_session_controllers
CREATE TABLE IF NOT EXISTS workout_session_controllers (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, workout_session_id INTEGER NOT NULL REFERENCES workout_sessions(ROWID) ON DELETE CASCADE, recovery_identifier TEXT NOT NULL, archived_state BLOB, UNIQUE(workout_session_id, recovery_identifier))
CREATE TABLE IF NOT EXISTS alarm_events (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, client_identifier TEXT NOT NULL, due_date REAL, due_date_components BLOB, event_identifier TEXT NOT NULL, UNIQUE(client_identifier, event_identifier), CHECK((due_date IS NULL AND due_date_components IS NOT NULL) OR (due_date IS NOT NULL AND due_date_components IS NULL)))
ALTER TABLE alarm_events ADD COLUMN event_options INTEGER NOT NULL DEFAULT 0
DROP INDEX IF EXISTS sources_bundle_id_uuid
ALTER TABLE sources RENAME TO sources_old
CREATE TABLE IF NOT EXISTS sources (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, bundle_id TEXT NOT NULL, name TEXT NOT NULL, source_options INTEGER NOT NULL, local_device INTEGER NOT NULL, product_type TEXT NOT NULL, deleted INTEGER NOT NULL, mod_date REAL NOT NULL, provenance INTEGER NOT NULL, sync_anchor INTEGER NOT NULL UNIQUE, owner_bundle_id TEXT)
INSERT INTO sources (ROWID, uuid, bundle_id, name, source_options, local_device, product_type, deleted, mod_date, provenance, sync_anchor, owner_bundle_id) SELECT ROWID, uuid, bundle_id, name, source_options, local_device, product_type, deleted, mod_date, provenance, sync_anchor, NULL FROM sources_old
DROP TABLE sources_old
CREATE INDEX sources_bundle_id_uuid ON sources (bundle_id, uuid)
CREATE TABLE datatype_source_order_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, data_type INTEGER NOT NULL, source INTEGER NOT NULL REFERENCES sources (ROWID) ON DELETE CASCADE, user_preferred INTEGER NOT NULL, provenance INTEGER NOT NULL, modification_date REAL NOT NULL);
INSERT INTO datatype_source_order_new (data_type, source, user_preferred, provenance, modification_date) SELECT data_type, source, user_preferred, provenance, %lf FROM datatype_source_order ORDER BY ROWID ASC
DROP TABLE datatype_source_order
ALTER TABLE datatype_source_order_new RENAME TO datatype_source_order
CREATE INDEX datatype_source_order_data_type ON datatype_source_order (data_type, ROWID)
DROP TABLE workout_sessions;
CREATE TABLE IF NOT EXISTS workout_sessions (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, workout_configuration BLOB NOT NULL, state INTEGER NOT NULL, requested_target_state INTEGER NOT NULL DEFAULT 1, has_failed INTEGER NOT NULL DEFAULT 0, source_id INTEGER REFERENCES sources(ROWID) ON DELETE CASCADE, builder_id INTEGER REFERENCES workout_builders(ROWID) ON DELETE SET NULL, creation_date REAL NOT NULL, start_date REAL, end_date REAL, client_bundle_id TEXT, client_application_id TEXT, latest_activity_date REAL NOT NULL);
UPDATE sync_anchors SET received=0 WHERE schema LIKE 'main' AND sync_anchors.type IN (2, 4) AND ROWID IN (SELECT ROWID FROM sync_stores WHERE sync_stores.type=1);
DROP INDEX IF EXISTS quantity_sample_series_unfrozen
ALTER TABLE quantity_sample_series RENAME TO quantity_sample_series_old
CREATE TABLE IF NOT EXISTS protected.quantity_sample_series (data_id INTEGER PRIMARY KEY REFERENCES samples (data_id) ON DELETE CASCADE, count INTEGER NOT NULL DEFAULT 0, insertion_era INTEGER, hfd_key INTEGER UNIQUE NOT NULL)
CREATE INDEX protected.quantity_sample_series_unfrozen ON quantity_sample_series (insertion_era) WHERE (protected.quantity_sample_series.insertion_era IS NOT NULL)
INSERT INTO quantity_sample_series (data_id, count, insertion_era, hfd_key) SELECT data_id, count, insertion_era, hfd_key FROM quantity_sample_series_old;
CREATE TABLE IF NOT EXISTS protected.quantity_sample_statistics (owner_id INTEGER PRIMARY KEY REFERENCES quantity_samples (data_id) ON DELETE CASCADE, min REAL, max REAL, most_recent REAL, most_recent_date REAL, most_recent_duration REAL)
INSERT INTO quantity_sample_statistics (owner_id, min, max, most_recent, most_recent_date) SELECT data_id, min, max, most_recent, most_recent_date FROM quantity_sample_series_old WHERE min IS NOT NULL OR max IS NOT NULL OR most_recent IS NOT NULL
DROP TABLE quantity_sample_series_old
DROP INDEX IF EXISTS protected.activity_caches_cache_index
CREATE TABLE protected.activity_caches (data_id INTEGER PRIMARY KEY REFERENCES samples (data_id) ON DELETE CASCADE, cache_index INTEGER, sequence INTEGER NOT NULL, activity_mode INTEGER, wheelchair_use INTEGER, energy_burned REAL, energy_burned_goal REAL, energy_burned_goal_date REAL, move_minutes REAL, move_minutes_goal REAL, move_minutes_goal_date REAL, brisk_minutes REAL, brisk_minutes_goal REAL, brisk_minutes_goal_date REAL, active_hours REAL, active_hours_goal REAL, active_hours_goal_date REAL, steps REAL, pushes REAL, walk_distance REAL, deep_breathing_duration REAL, flights INTEGER, energy_burned_stats BLOB, move_minutes_stats BLOB, brisk_minutes_stats BLOB)
INSERT INTO protected.activity_caches (data_id, cache_index, sequence, wheelchair_use, energy_burned, energy_burned_goal, energy_burned_goal_date, brisk_minutes, brisk_minutes_goal, active_hours, active_hours_goal, steps, pushes, walk_distance, deep_breathing_duration, flights, energy_burned_stats, brisk_minutes_stats) SELECT data_id, cache_index, sequence, vulcan_condition, energy_burned, energy_burned_goal, energy_burned_goal_date, brisk_minutes, brisk_minutes_goal, active_hours, active_hours_goal, steps, vulcan_count, walk_distance, deep_breathing_duration, flights, energy_burned_stats, brisk_minutes_stats from protected.activity_caches_old aco where exists (select * from protected.samples s where s.data_id = aco.data_id)
CREATE INDEX IF NOT EXISTS protected.activity_caches_cache_index ON activity_caches (cache_index)
DROP TABLE IF EXISTS protected.activity_caches_old
CREATE TABLE IF NOT EXISTS protected.concept_index (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, sample_uuid BLOB NOT NULL, concept_identifier INTEGER NOT NULL, version INTEGER NOT NULL, key_path INTEGER NOT NULL);
CREATE INDEX IF NOT EXISTS protected.concept_index_sample_uuids ON concept_index (sample_uuid);
CREATE INDEX IF NOT EXISTS protected.concept_index_concept_identifier_key_paths ON concept_index (concept_identifier, key_path);
DELETE FROM metadata_values WHERE key_id=(SELECT rowid FROM metadata_keys WHERE key='HKMetadataKeyHeartRateMotionContext') AND (EXISTS (SELECT * FROM metadata_values mvprivate WHERE mvprivate.key_id=(SELECT rowid FROM metadata_keys WHERE key='_HKPrivateHeartRateContext') AND mvprivate.object_id=metadata_values.object_id))
ALTER TABLE protected.medical_records ADD COLUMN locale TEXT
DROP INDEX IF EXISTS protected.ff_unique_columns
ALTER TABLE protected.fitness_friend_activity_snapshots RENAME TO fitness_friend_activity_snapshots_old
CREATE TABLE protected.fitness_friend_activity_snapshots (data_id INTEGER PRIMARY KEY, snapshot_index INTEGER, uploaded_date REAL, energy_burned REAL, energy_burned_goal REAL, move_minutes REAL, move_minutes_goal REAL, brisk_minutes REAL, brisk_minutes_goal REAL, active_hours REAL, active_hours_goal REAL, walk_run_distance REAL, steps REAL, vulcan_count REAL, vulcan_condition INTEGER, activity_move_mode INTEGER, timezone_offset INTEGER, friend_uuid BLOB, source_uuid BLOB)
INSERT INTO protected.fitness_friend_activity_snapshots (data_id, snapshot_index, uploaded_date, energy_burned, energy_burned_goal, brisk_minutes, brisk_minutes_goal, active_hours, active_hours_goal, walk_run_distance, steps, vulcan_count, vulcan_condition, timezone_offset, friend_uuid, source_uuid) SELECT data_id, snapshot_index, uploaded_date, energy_burned, energy_burned_goal, brisk_minutes, brisk_minutes_goal, active_hours, active_hours_goal, walk_run_distance, steps, vulcan_count, vulcan_condition, timezone_offset, friend_uuid, source_uuid from protected.fitness_friend_activity_snapshots_old ffaso where exists (select * from protected.samples s where s.data_id = ffaso.data_id)
CREATE UNIQUE INDEX IF NOT EXISTS protected.ff_unique_columns ON fitness_friend_activity_snapshots (friend_uuid, snapshot_index, source_uuid)
DROP TABLE IF EXISTS protected.fitness_friend_activity_snapshots_old
ALTER TABLE protected.diagnostic_test_report_samples RENAME COLUMN status TO status_coding;
ALTER TABLE protected.fitness_friend_workouts RENAME TO fitness_friend_workouts_old
CREATE TABLE protected.fitness_friend_workouts (data_id INTEGER PRIMARY KEY, friend_uuid BLOB, duration REAL, total_energy_burned REAL, total_basal_energy_burned REAL, total_distance REAL, activity_type INTEGER, goal_type INTEGER, goal REAL, bundle_id TEXT, is_watch_workout INTEGER, is_indoor_workout INTEGER, device_manufacturer TEXT, device_model TEXT, activity_move_mode INTEGER DEFAULT 0)
INSERT INTO protected.fitness_friend_workouts (data_id, friend_uuid, duration, total_energy_burned, total_basal_energy_burned, total_distance, activity_type, goal_type, goal, bundle_id, is_watch_workout, is_indoor_workout, device_manufacturer, device_model) SELECT data_id, friend_uuid, duration, total_energy_burned, total_basal_energy_burned, total_distance, activity_type, goal_type, goal, bundle_id, is_watch_workout, is_indoor_workout, device_manufacturer, device_model from protected.fitness_friend_workouts_old ffw where exists (select * from protected.samples s where s.data_id = ffw.data_id)
DROP TABLE IF EXISTS protected.fitness_friend_workouts_old
DROP INDEX IF EXISTS protected.concept_index_sample_uuids
DROP INDEX IF EXISTS protected.concept_index_concept_identifier_key_paths
DROP TABLE IF EXISTS protected.concept_index
CREATE TABLE IF NOT EXISTS protected.concept_index (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, sample_uuid BLOB NOT NULL, concept_identifier INTEGER NOT NULL, version INTEGER NOT NULL, key_path TEXT NOT NULL, compound_index INTEGER, type INTEGER);
ALTER TABLE protected.vaccination_record_samples RENAME COLUMN body_site_coding TO body_site_codings;
ALTER TABLE protected.clinical_credentials RENAME TO clinical_credentials_old
ALTER TABLE clinical_credentials_old ADD COLUMN identifier BLOB
UPDATE clinical_credentials_old SET identifier = RANDOMBLOB(16)
CREATE TABLE protected.clinical_credentials (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, identifier BLOB NOT NULL, expiration_date REAL, scope TEXT, patient_id TEXT, creation_date REAL NOT NULL)
INSERT INTO protected.clinical_credentials (ROWID, identifier, expiration_date, scope, patient_id, creation_date)                                                 SELECT ROWID, identifier, expiration_date, scope, patient_id, creation_date FROM clinical_credentials_old
SELECT identifier, access_token, refresh_token FROM clinical_credentials_old WHERE identifier IS NOT NULL AND refresh_token IS NOT NULL
patient/*.read
DROP TABLE clinical_credentials_old
protected.menstrual_cycle_day_summary_samples
protected.samples
protected.objects
ALTER TABLE protected.allergy_record_samples ADD COLUMN status_coding BLOB
UPDATE clinical_accounts SET last_submitted_rowid = NULL
ALTER TABLE protected.concept_index ADD COLUMN ontology_version INTEGER NOT NULL DEFAULT 0
CREATE TABLE IF NOT EXISTS protected.data_provenances_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, sync_provenance INTEGER NOT NULL, origin_product_type TEXT NOT NULL, origin_build TEXT NOT NULL, local_product_type TEXT NOT NULL, local_build TEXT NOT NULL, source_id INTEGER NOT NULL, device_id INTEGER NOT NULL, source_version TEXT NOT NULL, tz_name TEXT NOT NULL, origin_major_version INTEGER NOT NULL, origin_minor_version INTEGER NOT NULL, origin_patch_version INTEGER NOT NULL, derived_flags INTEGER NOT NULL, UNIQUE(sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, source_version, tz_name, origin_major_version, origin_minor_version, origin_patch_version))
INSERT INTO protected.data_provenances_new (ROWID, sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, source_version, tz_name, origin_major_version, origin_minor_version, origin_patch_version, derived_flags) SELECT ROWID, sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, source_version, tz_name, origin_major_version, origin_minor_version, origin_patch_version, 0 from protected.data_provenances
DROP TABLE IF EXISTS protected.data_provenances
ALTER TABLE protected.data_provenances_new RENAME TO data_provenances
SELECT ROWID, source_id FROM protected.data_provenances
SELECT (product_type LIKE 'Watch%%') FROM sources WHERE ROWID=? LIMIT 1
UPDATE protected.data_provenances SET derived_flags=? WHERE ROWID=?
CREATE TABLE IF NOT EXISTS protected.medical_records_new (data_id INTEGER PRIMARY KEY, note TEXT, entered_in_error INTEGER NON NULL, modified_date REAL, fhir_identifier TEXT NON NULL, locale TEXT, extraction_version INTEGER NON NULL, sort_date REAL NON NULL, sort_date_key_path TEXT NON NULL, country TEXT NOT NULL)
INSERT INTO protected.medical_records_new (data_id, note, entered_in_error, modified_date, fhir_identifier, locale, extraction_version, sort_date, sort_date_key_path, country) SELECT data_id, note, entered_in_error, modified_date, fhir_identifier, locale, extraction_version, sort_date, sort_date_key_path, "US" from protected.medical_records
DROP TABLE IF EXISTS protected.medical_records
ALTER TABLE protected.medical_records_new RENAME TO medical_records
ALTER TABLE protected.medical_records ADD COLUMN state INTEGER NOT NULL DEFAULT 0
DELETE FROM sync_anchors WHERE schema = 'main' AND type = 5;
xxREPLACExx
\b(?!219(?:-| )?09(?:-| )?9999|078(?:-| )?05(?:-| )?1120)(?!666|000|9\d{2})\d{3}(?:-| )?(?!00)\d{2}(?:-| )?(?!0{4})\d{4}\b
Error getting names to redact
\b(?:\.|\w)*%@(?:\.|\w)*\b
v32@?0@"NSTextCheckingResult"8Q16^B24
(?:(?:\d{2}(?:(\d*)\.(\d+)))|(?:\d\.\d(\d+))|(?:\d{2}(\d+)))(?:[eE][-+]?(\d+))?
DataDetectorAll
DataDetectorSkipLink
DataDetectorSkipPhoneNumbers
DataDetectorSkipLinkSkipPhoneNumbers
Names
FullWordRegex
SSNRegex
LongNumberRegex
dataDetectorAll
T@"NSDataDetector",R,N,V_dataDetectorAll
dataDetectorSkipLink
T@"NSDataDetector",R,N,V_dataDetectorSkipLink
dataDetectorSkipPhoneNumbers
T@"NSDataDetector",R,N,V_dataDetectorSkipPhoneNumbers
dataDetectorSkipLinkSkipPhoneNumbers
T@"NSDataDetector",R,N,V_dataDetectorSkipLinkSkipPhoneNumbers
fullWordRegex
T@"NSRegularExpression",R,N,V_fullWordRegex
T@"NSRegularExpression",R,N,V_SSNRegex
longNumberRegex
T@"NSRegularExpression",R,N,V_longNumberRegex
names
T@"NSSet",R,N,V_names
activityType
durationMs
totalEnergyBurned
totalSteps
TQ,N,V_timestamp
hasActivityType
Ti,N,V_activityType
hasDurationMs
Tq,N,V_durationMs
hasTotalEnergyBurned
Tq,N,V_totalEnergyBurned
hasTotalDistance
Tq,N,V_totalDistance
hasTotalSteps
Tq,N,V_totalSteps
account_id
received_date
received_date_timezone
fhir_version
source_url
extraction_hints
first_seen_date
first_seen_date_timezone
original_fhir_resources
HDCloudSyncAddSharingParticipantOperation.m
No participant set when adding a sharing participant.
Participant not found on any zones: %@
B16@?0@"CKShareParticipant"8
T@"CKShareParticipant",&
zones
requireExistingRelationship
shareURLs
T@"NSArray",R,C,N,V_shareURLs
invitationTokensByShareURL
T@"NSDictionary",R,C,N,V_invitationTokensByShareURL
T@"CKShareParticipant",R,C,N,V_ownerParticipant
PrimarySyncCircle
com.apple.health.sync
com.apple.health.sync.secure
LastRebaseStart
CurrentRebaseActiveTime
HDCloudSyncRepository.m
HealthDaemon
UnifiedCloudSync
Container %@ is not associated with this repository.
@16@?0@"CKContainer"8
<%@:%p [%@] %@ (%@)>
repositorySettings
TQ,N,V_repositorySettings
deviceMode
shouldPushToUnifiedZone
TB,R,N,V_shouldPushToUnifiedZone
primaryCKContainer
T@"CKContainer",R,N,V_primaryCKContainer
secondaryCKContainers
T@"NSArray",R,N,V_secondaryCKContainers
allCKContainers
T@"NSSet",R,N,V_allCKContainers
T@"NSString",R,C,N,V_syncCircleIdentifier
Status Unknown
Cloud sync restore operation hit error, retry unless user action required
Cloud sync restore operation in progress
Cloud sync restore operation has completed successfully
Cloud sync has successfully pulled data
Cloud sync disabled
v32@?0@"NSDate"8@"NSDate"16@"NSError"24
Manatee container is unavailable, device is in CFU state
Determine if sync is complete enough stop stop waiting
fractionCompleted
predictedLocationsOfInterest
predictedLocationsOfInterests
T@"NSMutableArray",&,N,V_predictedLocationsOfInterests
The unified zone must already exist before requesting data upload.
Private
Public
Shared
UnknownScope(%ld)
<%@ (%@): %@ [%@]>
containerIdentifier
T@"NSString",R,C,N,V_containerIdentifier
zoneIdentifier
T@"CKRecordZoneID",R,C,N,V_zoneIdentifier
Tq,R,N,V_scope
Tq,R,N,V_type
%@: Unexpected store record %@ in master zone.
%@: Store record for zone %@ has unexpected store identifier %@
%@: Unexpected sequence record %@ in master zone.
B16@?0@"HDCloudSyncSequenceRecord"8
@"NSString"16@?0@"HDCloudSyncRecord"8
<%@:%p %@ (%@, %@)>
repository
T@"HDCloudSyncRepository",R,W,N,V_repository
T@"HDCloudSyncZoneIdentifier",R,C,N,V_zoneIdentifier
zoneType
Tq,R,N,V_zoneType
hasLostIdentity
TB,N,V_hasLostIdentity
isEmpty
hasOrphanedSequenceRecords
recordNames
recordCount
registryRecord
T@"HDCloudSyncRegistryRecord",R,N,V_registryRecord
storeRecords
records
hasFutureSchemaRecord
TB,N,V_hasFutureSchemaRecord
purpose
Tq,N,V_purpose
zoneShareRecordID
zoneShare
T@"CKShare",&,N,V_zoneShare
validatedForSharing
TB,N,V_validatedForSharing
T@"NSUUID",R,C,N
storeRecord
T@"HDCloudSyncStoreRecord",R,N
masterRecord
T@"HDCloudSyncMasterRecord",R,N,V_masterRecord
store
T@"HDCloudSyncStore",&,N,V_store
dataUploadRequestRecord
T@"HDCloudSyncDataUploadRequestRecord",R,N,V_dataUploadRequestRecord
master
individual
unified
push-primary
pull
seized
HDAlarmEvent.m
dueDate != nil || dueDateComponents != nil
dueDate == nil || dueDateComponents == nil
HDAlarmEventValidateDateComponents(dueDateComponents)
<%@:%p client:%@ event:%@ dueDate:%@, dueDateComponents:%@, eventOptions: %@>
_unitTest_localTimeZoneOverride
T@"NSTimeZone",C,N,V__unitTest_localTimeZoneOverride
clientIdentifier
T@"NSString",R,C,N,V_clientIdentifier
eventIdentifier
T@"NSString",R,C,N,V_eventIdentifier
dueDate
T@"NSDate",R,C,N,V_dueDate
dueDateComponents
T@"NSDateComponents",R,C,N,V_dueDateComponents
currentDueDate
T@"NSDate",R,C,N
eventOptions
TQ,R,N,V_eventOptions
requiresDeviceUnlocked
requiresDeviceOnWrist
require-device-on-wrist
require-device-unlocked
behavior
T@"_HKBehavior",R,N,V_behavior
schemaProviders
T@"NSArray",R,C,N,V_schemaProviders
T@"<HDDatabaseMigrationTransactionDelegate>",W,N,V_delegate
defaultDatabase
T@"HDSQLiteDatabase",R,N
defaultDatabaseName
defaultProtectionClass
unprotectedDatabase
T@"HDSQLiteDatabase",R,N,V_unprotectedDatabase
protectedDatabase
T@"HDSQLiteDatabase",R,N,V_protectedDatabase
HFDataStore
T@"HDHFDataStore",R,N,V_HFDataStore
isProtectedMigration
resource
Object (%@) is not of class %@
Authorization status is not determined for all types provided.
Unit (%@) is not compatible with the provided type (%@)
v16@?0@"<HDUnitPreferencesManagerObserver>"8
%@%ld
v32@?0@"NSString"8@"NSString"16^B24
<%@:%p "%@" %@>
nameContactIdentifier
phoneNumber
phoneNumberContactIdentifier
phoneNumberLabel
hasNameContactIdentifier
T@"NSString",&,N,V_nameContactIdentifier
hasPhoneNumber
T@"NSString",&,N,V_phoneNumber
hasPhoneNumberContactIdentifier
T@"NSString",&,N,V_phoneNumberContactIdentifier
hasPhoneNumberLabel
T@"NSString",&,N,V_phoneNumberLabel
hasRelationship
T@"NSString",&,N,V_relationship
HDDatabase+Schema.m
Incorrectly returned in-progress migration status.
Retry: temporary SQL error reading identifiers
Fatal: database identifiers did not match
Found identifier %@ in unprotected database when creating protected database
B16@?0#8
Entity '%@' missing required prefix '%@'
Plugin '%@' provided no schema name.
Schema '%@' provided by both %@ and %@.
HDHasPresentedRollbackWarningDialog
protected
<primary>
Health DB Version Mismatch
Your Health database appears to be from a newer build. Rolling back to earlier builds is not supported, and Health apps will not be functional.
unprotected
entryHeader.pageChecksum == page.checksum()
_PageForEntry
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.25.2/HealthKit/HealthDaemon/Database/HighFrequencyData/HDWriteAheadLog.cpp
Page failed checksum validation.
entryHeader.transactionIdentifier == entry.transactionIdentifier
Page has unexpected transaction identifier.
_transactionStack.size() == 0
reset
Attempt to discard the log while a write transaction is open.
discardLog
(_transactionStack.size() > 0) || (_readTransactionIdentifiers.size() > 0)
pageAtOffset
Attempt to retrieve a page while no transaction is active.
_transactionStack.size() > 0
updatedPage
Attempt to store an updated page while no transaction is active.
_readTransactionIdentifiers.find(transactionIdentifier) == _readTransactionIdentifiers.end()
Attempt to update a page from a read transaction.
false
Attempt to record updated page for inactive transaction {0}; current transaction is {1}.
_walLock_openLogForFileIdentifier
Attempt to open the log while transactions are active.
_walFile
Failed to open WAL file.
header.fileIdentifier == fileIdentifier
WAL file identifier does not match transactional file identifier; ignoring WAL file.
Caught exception replaying WAL: {0}
Invalid WAL entry: found a page update for a transaction that is not active.
Invalid WAL entry type {0}.
_walLock_transactionForIdentifier(transactionIdentifier) == nullptr
_walLock_startTransaction
Attempt to start a transaction which is already active.
_walLock_commitTransaction
Attempt to commit transaction {0} when no transaction is active.
transaction->identifier() == transactionIdentifier
Attempt to commit transaction ({0}) which is not the innermost transaction ({1}).
_walLock_rollbackTransaction
Attempt to roll back transaction {0} when no transaction is active.
Attempt to roll back transaction ({0}) which is not the innermost transaction ({1}).
_walLock_checkpoint
Attempt to checkpoint the WAL while a write transaction is active
_readTransactionIdentifiers.size() == 0
Attempt to checkpoint the WAL while a read transaction is active
_transactionStatus == Status::Active
_writeCompletionEntryOfType
Attempt to {0} transaction {1} but it has already completed.
Attempt to {0} a transaction {1} with an invalid entry type {0}
Commit
Rollback
PageUpdate
Invalid({0})
Requested parameter is not an FormatOptions instance.
Invalid checksum on read object.
0x1826
0x2ACC
0x2ACD
0x2ACE
0x2ACF
0x2AD0
0x2AD2
0x2AD3
0x2ADA
0xFE13
0x2ADB
0x2ADD
T@"NSData",&,N,V_identifier
hasType
Tq,N,V_type
dataCode
Tq,R,N,V_dataCode
T@"HKObjectType",R,C,N
updateFrequency
TQ,N,V_updateFrequency
lastAnchor
TQ,N,V_lastAnchor
lastAckTime
Tq,N,V_lastAckTime
launchTimeHysteresis
Tq,N,V_launchTimeHysteresis
@"HDCodableAllergyReaction"16@?0@"HKAllergyReaction"8
@"NSSet"24@?0@"HDDatabaseTransaction"8^@16
v16@?0@"<HDOnboardingCompletionManagerObserver>"8
onboardingCompletions
syncProvenance
fitness-machine-metrics-observer
HDFitnessMachineDataCollector.m
Expected to find an aggregator for fitness machine '%@', HKObjectType %@
Approximate start date should have been calculated
v16@?0@"<HDMetricsCollectorObserver>"8
v24@?0@"HKQuantity"8@"NSDate"16
HDFitnessMachineDataCollector
T@"NSDate",&,N,V_machinePreferredUntilDate
v16@?0@"HDCloudSyncAcceptSharesOperation"8
share
T@"HDCloudSyncShareSetupMetadata",R,C,N,V_share
T@"NSArray",R,C,N,V_acceptedShares
BKSApplicationStateUnknown
BKSApplicationStateTerminated
BKSApplicationStateBackgroundTaskSuspended
BKSApplicationStateBackgroundRunning
BKSApplicationStateForegroundRunning
Stair Climber Data: floors = %@, stepsPerMinute = %@, averageStepRate = %@, positiveElevationGain = %@, stepCount = %@, totalEnergy = %@, energyPerHour = %@, energyPerMinute = %@, heartRate = %@, metabolicEquivalent = %@, elapsedTime = %@, remainingTime = %@
floorsIsSet
floors
stepsPerMinuteIsSet
stepsPerMinute
stepCountIsSet
stepCount
Operation timed out
A secondary device setup request is already in progress.
v16@?0@?<v@?B@"NSError">8
No profile for device UUID %@
v24@?0q8@?<v@?B@"NSError">16
HDSecondaryDevicePairingAgentTaskServer.m
%@ must be called from a watch.
%@ must be called from a phone.
Tear down health sharing pairing agent not initialized with primary profile health store.
Profile associated with NRDeviceUUID: %@ is primary profile.
Unable to find secondary profile associated with NRDeviceUUID: %@
Failed to fetch current Apple ID
STOP_SHARING_FAILED_NOTIFICATION_TITLE
Localizable-tinker
STOP_SHARING_FAILED_NOTIFICATION_MESSAGE
Existing profile identifier has an owner (%@) which does not match the incoming owner (%@)
Health Jr
[tinkerProfile isKindOfClass:HDTinkerProfile.class]
tinkerSharingSetupTimeout
Td,N,V_tinkerSharingSetupTimeout
unitTest_timeoutTriggered
T@?,C,N,V_unitTest_timeoutTriggered
Td,R,N,V_startTime
T@"HKDaemonTransaction",R,N,V_transaction
T@"HKSecondaryPairedDeviceConfiguration",R,N,V_configuration
stage
Tq,N,V_stage
T@"HDTinkerProfile",&,N,V_profile
guardianAccountIdentifier
T@"NSString",C,N,V_guardianAccountIdentifier
Health
HDDaemon.m
alreadyStarted == false
com.apple.language.changed
B16@?0@"<HDHealthDaemonExtension>"8
Obliteration
obliterating
Health database obliterated
com.apple.ActivityMonitorApp
com.apple.HeartRatecom.apple.SessionTrackerApp
com.apple.
locale or language changed
 clean
com.apple.notifyd.matching
Notification
com.apple.Preferences.ResetPrivacyWarningsNotification
com.apple.nearfield.handoff.terminal
com.apple.springboard.homescreenunlocked
_State
com.apple.distnoted.matching
com.apple.LaunchServices
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
app-installation
AppInstallation
UserInfo
bundleIDs
isPlaceholder
v24@?0^d8*16
DISPATCH_MEMORYPRESSURE_NORMAL
DISPATCH_MEMORYPRESSURE_WARN
DISPATCH_MEMORYPRESSURE_CRITICAL
received SIGTERM
powerAssertionIdentifier != nil
transactionName != nil
B24@?0@"NSURL"8@"NSError"16
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
_contentProtectionManager != nil
_backgroundTaskScheduler != nil
_processStateManager != nil
_pluginManager != nil
_profileManager != nil
DaemonReadyObservers: %ld (%ld before ready, %ld after ready)
_healthDirectoryPath
com.apple.SessionTrackerApp
B16@?0@"LSApplicationProxy"8
backgroundTaskScheduler
T@"HDBackgroundTaskScheduler",R
pluginManager
T@"HDPluginManager",R
primaryProfile
T@"HDPrimaryProfile",R,N
alertSuppressionService
T@"<HDNanoAlertSuppressionService>",&,N
T@"_HKBehavior",R,N
daemonTester
T@"<HDDaemonTester>",W,N,V_daemonTester
shouldEnqueueMaintenanceWork
TB,N,V_shouldEnqueueMaintenanceWork
connectionManager
T@"HDDaemonConnectionManager",R,N,V_connectionManager
taskServerRegistry
T@"HDTaskServerRegistry",R,N,V_taskServerRegistry
devicePowerMonitor
T@"HDDevicePowerMonitor",R,N,V_devicePowerMonitor
alarmScheduler
T@"HDXPCAlarmScheduler",R,N,V_alarmScheduler
xpcEventManager
T@"HDXPCEventManager",R,N,V_xpcEventManager
workoutPluginExtension
T@"HDWorkoutPluginDaemonExtension",R,N
T@"_HKBehavior",R
healthDirectoryPath
healthDirectoryURL
T@"NSURL",R,C
medicalIDDirectoryPath
T@"NSString",R,C,V_medicalIDDirectoryPath
analyticsSubmissionCoordinator
T@"HDAnalyticsSubmissionCoordinator",R,N,V_analyticsSubmissionCoordinator
autoBugCaptureReporter
T@"HDAutoBugCaptureReporter",R,N,V_autoBugCaptureReporter
T@"<HDNanoAlertSuppressionService>",&,N,V_alertSuppressionService
cloudSyncCoordinator
T@"HDCloudSyncCoordinator",R,N,V_cloudSyncCoordinator
contentProtectionManager
T@"HDContentProtectionManager",R,N
remoteFeatureAvailabilityAssetManager
T@"HDRemoteFeatureAvailabilityAssetManager",R,N,V_remoteFeatureAvailabilityAssetManager
maintenanceWorkCoordinator
T@"HDMaintenanceWorkCoordinator",R,N,V_maintenanceWorkCoordinator
T@"HDPrimaryProfile",R,N,V_primaryProfile
processStateManager
T@"HDProcessStateManager",R,N
profileManager
T@"HDProfileManager",R,N
queryManager
T@"HDQueryManager",R,N,V_queryManager
start_date
end_date
data_type
samples
type_dates
type_end
type_anchor
HDSampleEntity.m
+[HDSampleEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
INSERT INTO protected.samples (data_id, data_type, start_date, end_date) VALUES (?, ?, ?, ?)
Invalid arguments to delete; source entities or types must be non-empty.
v44@?0B8@"NSNumber"12Q20@"NSSet"28@"NSError"36
predicate
completionHandler
@16@?0@"HKObjectType"8
Unable to determine entity class for object types (%@)
Attempt to query across object types (%@) with incompatible entity classes (%@)
SELECT (SELECT %@ FROM %@ INNER JOIN %@ USING(%@) WHERE %@ = ? AND %@ = ? ORDER BY %@ ASC LIMIT 1) AS min, (SELECT %@ FROM %@ INNER JOIN %@ USING(%@) WHERE %@ = ? AND %@ = ? ORDER BY %@ DESC LIMIT 1) AS max
B32@?0q8@"HDSQLiteDatabase"16^@24
SELECT COUNT(%@), %@ FROM %@ INNER JOIN %@ USING(%@) WHERE %@ = ? AND (%@ > ?) AND (%@ < ?) AND %@ IN (%@) GROUP BY %@
The provided object's end date is too early.
B24@?0@"HKObject"8^@16
types
sids
@16@?0@"NSNumber"8
sourceIDs
T@"NSSet",C,N,V_sourceIDs
T@"NSSet",C,N,V_types
-[NSCalendar(HDSampleEntityPredicates) hd_predicateForSamplesWithTypes:endingAfterDate:minusDays:]
date != nil
-[NSCalendar(HDSampleEntityPredicates) hd_predicateForSamplesWithTypes:endingBeforeDate:minusDays:]
DROP TABLE IF EXISTS nano_pairing;
CREATE TABLE IF NOT EXISTS nano_pairing (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, registry_uuid BLOB UNIQUE NOT NULL, persistent_uuid BLOB, health_uuid BLOB, sync_provenance INTEGER NOT NULL, activated INTEGER NOT NULL);
SELECT rowid FROM key_value WHERE domain='NanoPairing' AND key='RegistryPairingUUID' AND value IS NOT NULL
SELECT value FROM key_value WHERE domain='NanoPairing' AND key='%@' LIMIT 1
INSERT INTO nano_pairing(registry_uuid, persistent_uuid, health_uuid, sync_provenance, activated) SELECT (%@), (%@), (%@), 1, (%@);
RegistryPairingUUID
PersistentPairingUUID
HealthPairingUUID
ActivationFinished
DELETE FROM key_value WHERE domain='NanoPairing';
ALTER TABLE sources RENAME TO sources_old;
CREATE TABLE IF NOT EXISTS sources (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, bundle_id TEXT, name TEXT, source_options INTEGER, local_device INTEGER, product_type TEXT, deleted INTEGER NOT NULL, mod_date REAL, provenance INTEGER NOT NULL)
INSERT INTO sources(rowid, uuid, bundle_id, name, source_options, local_device, product_type, deleted, mod_date, provenance) SELECT rowid, hk_new_source_uuid(bundle_id, product_type), bundle_id, name, source_options, local_device, product_type, 0, NULL, 0 FROM sources_old;
CREATE INDEX IF NOT EXISTS sources_index_0 ON sources(bundle_id)
DROP TABLE sources_old;
hk_new_source_uuid
v16@?0^{sqlite3=}8
CREATE TABLE IF NOT EXISTS source_devices (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, manufacturer TEXT NOT NULL, model TEXT NOT NULL, hardware TEXT NOT NULL, firmware TEXT NOT NULL, software TEXT NOT NULL, localIdentifier TEXT NOT NULL, FDAUDI TEXT NOT NULL, creation_date REAL NOT NULL, sync_provenance INTEGER NOT NULL, uuid BLOB UNIQUE NOT NULL)
INSERT INTO source_devices(name, manufacturer, model, hardware, firmware, software, localIdentifier, FDAUDI, creation_date, sync_provenance, uuid) VALUES ('__NONE__', '', '', '', '', '', '__NONE__', '', %f, 0, %@())
INSERT INTO source_devices(name, manufacturer, model, hardware, firmware, software, localIdentifier, FDAUDI, creation_date, sync_provenance, uuid) SELECT COALESCE(name, ''), '', '', '', '', '', bundle_id, '', %f, 0, %@() FROM sources WHERE source_options = 0 AND product_type = 'Bluetooth'
ALTER TABLE authorization RENAME TO authorization_old;
CREATE TABLE IF NOT EXISTS authorization (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, source_id INTEGER NOT NULL, object_type INTEGER NOT NULL, status INTEGER NOT NULL, request INTEGER NOT NULL, date_modified REAL NOT NULL, provenance INTEGER NOT NULL, UNIQUE(source_id, object_type));
INSERT INTO authorization(source_id, object_type, status, request, date_modified, provenance) SELECT source_id, code, status, request, 0.0, 0 FROM authorization_old;
DROP TABLE authorization_old;
DROP TABLE IF EXISTS authorization_old;
CREATE TABLE authorization (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, source_id INTEGER NOT NULL REFERENCES sources(ROWID) ON DELETE CASCADE, object_type INTEGER NOT NULL, status INTEGER NOT NULL, request INTEGER NOT NULL, date_modified REAL NOT NULL, provenance INTEGER NOT NULL, UNIQUE(source_id, object_type));
INSERT INTO authorization SELECT ROWID, source_id, object_type, status, request, date_modified, provenance FROM authorization_old WHERE EXISTS (SELECT ROWID FROM sources WHERE sources.ROWID = authorization_old.source_id);
ALTER TABLE authorization ADD object_anchor INTEGER NOT NULL DEFAULT 0
DELETE FROM authorization WHERE object_type = 70;
ALTER TABLE datatype_source_order RENAME TO datatype_source_order_old;
CREATE TABLE IF NOT EXISTS datatype_source_order (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, data_type INTEGER NOT NULL, source INTEGER NOT NULL REFERENCES sources (ROWID) ON DELETE CASCADE, user_preferred INTEGER NOT NULL, provenance INTEGER NOT NULL);
INSERT INTO datatype_source_order SELECT ROWID, data_type, source, user_preferred_order, 0 FROM datatype_source_order_old WHERE EXISTS (SELECT ROWID FROM sources WHERE sources.ROWID = datatype_source_order_old.source);
DROP TABLE datatype_source_order_old;
CREATE TABLE IF NOT EXISTS protected.unit_strings (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, unit_string TEXT UNIQUE);
ALTER TABLE protected.quantity_samples add column original_quantity REAL;
ALTER TABLE protected.quantity_samples add column original_unit INTEGER REFERENCES unit_strings(ROWID);
CREATE TABLE IF NOT EXISTS protected.data_provenances (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, sync_provenance INTEGER NOT NULL, origin_device TEXT NOT NULL, origin_build TEXT NOT NULL, local_device TEXT NOT NULL, local_build TEXT NOT NULL, UNIQUE(sync_provenance, origin_device, origin_build, local_device, local_build));
INSERT INTO protected.data_provenances (ROWID, sync_provenance, origin_device, origin_build, local_device, local_build) values (1, 0, 'UnknownDevice', '[8.0, 8.2)', 'UnknownDevice', 'UnknownBuild')
INSERT INTO protected.data_provenances (ROWID, sync_provenance, origin_device, origin_build, local_device, local_build) values (2, 0, 'UnknownDevice', '[8.2, 9.0)', 'UnknownDevice', 'UnknownBuild')
INSERT INTO protected.data_provenances (ROWID, sync_provenance, origin_device, origin_build, local_device, local_build) values (3, 1, 'UnknownDevice', '[8.2, 9.0)', 'UnknownDevice', 'UnknownBuild')
ALTER TABLE protected.objects RENAME TO objects_old;
CREATE TABLE protected.objects (data_id INTEGER PRIMARY KEY AUTOINCREMENT, creation_date REAL, source INTEGER, provenance INTEGER REFERENCES data_provenances(ROWID), type INTEGER, uuid BLOB);
INSERT INTO protected.objects (data_id, creation_date, source, type, uuid, provenance) SELECT data_id, creation_date, source, type, uuid, (CASE WHEN data_id <= COALESCE(value, 0) THEN 1 ELSE (CASE objects_old.provenance WHEN 0 THEN 2 WHEN 1 THEN 3 END) END) FROM objects_old LEFT JOIN (SELECT value from key_value_secure WHERE category=100 AND key_value_secure.provenance=0 AND domain='OBJECT_ANCHOR' AND key='OBJECT_ANCHOR_8_2');
CREATE UNIQUE INDEX protected.objects_uuid ON objects(uuid);
DROP TABLE objects_old;
DELETE FROM protected.key_value_secure WHERE category=100 AND domain='OBJECT_ANCHOR';
INSERT INTO category_samples (data_id, value) SELECT data_id, CASE WHEN quantity < 0.5 THEN 0 ELSE 1 END FROM quantity_samples LEFT JOIN samples USING (data_id) WHERE data_type = 69
DELETE FROM quantity_samples WHERE data_id IN (SELECT data_id FROM samples WHERE data_type = 69)
UPDATE samples SET data_type = 70 WHERE data_type = 69
CREATE TABLE protected.menstruation_samples (data_id INTEGER PRIMARY KEY, start_cycle INTEGER, menstrual_flow INTEGER);
CREATE TEMPORARY TABLE source_device_map (source INTEGER PRIMARY KEY, device INTEGER, provenance INTEGER)
INSERT INTO source_device_map(source, device, provenance)                                        SELECT sources.ROWID, source_devices.ROWID, sources.provenance                                        FROM sources JOIN source_devices ON bundle_id = localIdentifier
CREATE TABLE protected.data_provenances          (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, sync_provenance INTEGER NOT NULL, origin_device TEXT NOT NULL, origin_build TEXT NOT NULL, local_device TEXT NOT NULL, local_build TEXT NOT NULL, source_id INTEGER NOT NULL, device_id INTEGER NOT NULL, source_version TEXT NOT NULL,          UNIQUE(sync_provenance, origin_device, origin_build, local_device, local_build, source_id, device_id, source_version))
INSERT INTO protected.data_provenances          (sync_provenance, origin_device, origin_build, local_device, local_build, source_id, device_id, source_version)          SELECT sync_provenance, origin_device, origin_build, local_device, local_build, source, provenance, ''          FROM protected.objects          JOIN protected.data_provenances_old          ON provenance = protected.data_provenances_old.ROWID          GROUP BY sync_provenance, origin_device, origin_build, local_device, local_build, source, provenance
ALTER TABLE protected.objects RENAME TO objects_old
CREATE TABLE protected.objects (data_id INTEGER PRIMARY KEY AUTOINCREMENT, creation_date REAL, provenance INTEGER REFERENCES data_provenances(ROWID), type INTEGER, uuid BLOB)
INSERT INTO protected.objects (data_id, creation_date, provenance, type, uuid)          SELECT data_id, creation_date, (SELECT ROWID FROM protected.data_provenances WHERE source = source_id AND provenance = device_id), type, uuid FROM objects_old
DROP INDEX IF EXISTS protected.objects_uuid
SELECT ROWID FROM source_devices WHERE source_devices.name = '__NONE__' AND source_devices.localIdentifier = '__NONE__'
INSERT INTO source_devices(name, manufacturer, model, hardware, firmware, software, localIdentifier, FDAUDI, creation_date, sync_provenance, uuid) VALUES ('__NONE__', '', '', '', '', '', '__NONE__', '', ?, 0, ?)
SELECT device FROM source_device_map WHERE source = ?
UPDATE protected.data_provenances SET device_id = ? WHERE ROWID = ?
DROP TABLE IF EXISTS source_device_map
DROP TABLE IF EXISTS objects_old
UPDATE protected.devices SET device_enabled = 1 WHERE device_enabled = 'TRUE' OR device_enabled = 'true'
ALTER TABLE protected.devices RENAME TO devices_old
CREATE TABLE IF NOT EXISTS protected.devices (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, device_uuid BLOB, device_name TEXT, device_service INTEGER, device_last_connect REAL, device_enabled BOOLEAN default 1, UNIQUE(device_uuid, device_service))
INSERT INTO protected.devices(rowid, device_uuid, device_name, device_service, device_last_connect, device_enabled) SELECT rowid, device_uuid, device_name, device_service, device_last_connect, device_enabled FROM devices_old
DROP TABLE devices_old
DELETE FROM protected.samples WHERE data_id IN (SELECT data_id FROM protected.menstruation_samples)
DELETE FROM protected.metadata_values WHERE object_id IN (SELECT data_id FROM protected.menstruation_samples)
DELETE FROM protected.objects WHERE data_id IN (SELECT data_id FROM protected.menstruation_samples)
DROP TABLE protected.menstruation_samples
ALTER TABLE protected.data_provenances RENAME TO provenance_old;
CREATE TABLE protected.data_provenances (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, sync_provenance INTEGER NOT NULL, origin_device TEXT NOT NULL, origin_build TEXT NOT NULL, local_device TEXT NOT NULL, local_build TEXT NOT NULL, source_id INTEGER NOT NULL, device_id INTEGER NOT NULL, source_version TEXT NOT NULL, UNIQUE(sync_provenance, origin_device, origin_build, local_device, local_build, source_id, device_id, source_version));
INSERT INTO protected.data_provenances SELECT data_id, sync_provenance, origin_device, origin_build, local_device, local_build, source_id, device_id, source_version from provenance_old;
DROP TABLE provenance_old;
objects
CREATE TABLE protected.objects (data_id INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB, provenance INTEGER NOT NULL REFERENCES data_provenances (ROWID) ON DELETE CASCADE, type INTEGER, creation_date REAL);
INSERT INTO protected.objects SELECT data_id, uuid, provenance, type, creation_date from objects_old WHERE EXISTS (SELECT ROWID FROM protected.data_provenances WHERE ROWID=provenance);
DELETE FROM protected.category_samples WHERE data_id IN (SELECT data_id FROM protected.samples WHERE data_type = 93 OR data_type = 95)
DELETE FROM protected.metadata_values WHERE object_id IN (SELECT data_id FROM protected.samples WHERE data_type = 93 OR data_type = 95)
DELETE FROM protected.objects WHERE data_id IN (SELECT data_id FROM protected.samples WHERE data_type = 93 OR data_type = 95)
DELETE FROM protected.samples WHERE data_type = 93 OR data_type = 95
UPDATE key_value_secure SET value='ft' WHERE key='2' AND value='in';
energy_burned_goal_date
protected.activity_caches
no energy_burned_goal_date column
CREATE TABLE protected.activity_caches (data_id INTEGER PRIMARY KEY, energy_burned REAL, energy_burned_goal REAL, step_count_anchor INTEGER, energy_burned_goal_date REAL, steps REAL, active_hours_goal REAL, active_energy_burned_anchor INTEGER, brisk_minutes_anchor INTEGER, brisk_minutes_goal REAL, walk_distance REAL, energy_burned_goal_anchor INTEGER, walking_and_running_distance_anchor INTEGER, workout_anchor INTEGER, brisk_minutes REAL, active_hours_anchor INTEGER, cache_index INTEGER, active_hours REAL)
INSERT INTO activity_caches SELECT data_id, energy_burned, energy_burned_goal, step_count_anchor, energy_burned_goal_date, steps, active_hours_goal, active_energy_burned_anchor, brisk_minutes_anchor, brisk_minutes_goal, walk_distance, energy_burned_goal_anchor, walking_and_running_distance_anchor, workout_anchor, brisk_minutes, active_hours_anchor, cache_index, active_hours from activity_caches_old;
UPDATE authorization SET deleted_object_anchor = ?
SELECT ROWID FROM sources WHERE local_device = 1;
SELECT MAX(sync_anchor) FROM sources;
com.apple.health.%@
INSERT INTO sources(uuid, bundle_id, name, source_options, local_device, product_type, deleted, mod_date, provenance, sync_anchor) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
SELECT ROWID FROM source_devices WHERE name='__NONE__' AND manufacturer='' AND model='' AND hardware='' AND firmware='' AND software='' AND localIdentifier='__NONE__' AND FDAUDI=''
SELECT ROWID, sync_provenance, origin_device, origin_build, local_device, local_build, source_id, device_id, source_version FROM protected.data_provenances WHERE source_id=0 OR device_id=0
SELECT ROWID FROM protected.data_provenances WHERE sync_provenance=? AND origin_device=? AND origin_build=? AND local_device=? AND local_build=? AND source_id=? AND device_id=? AND source_version=?
INSERT INTO protected.data_provenances (sync_provenance, origin_device, origin_build, local_device, local_build, source_id, device_id, source_version) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
UPDATE protected.objects SET provenance=? WHERE provenance=?
DELETE FROM protected.data_provenances WHERE source_id=0 OR device_id=0
SELECT MAX(ROWID) FROM sources WHERE provenance=1 and deleted=0 and product_type LIKE 'Watch1,%';
SELECT rowid FROM sources
AND source_id NOT IN (%@)
SELECT ROWID, origin_device, origin_build, local_device, local_build, device_id, source_version FROM protected.data_provenances WHERE sync_provenance=1 %@;
SELECT ROWID FROM protected.data_provenances WHERE sync_provenance=1 AND origin_device=? AND origin_build=? AND local_device=? AND local_build=? AND source_id=? AND device_id=? AND source_version=?;
INSERT INTO protected.data_provenances(sync_provenance, origin_device, origin_build, local_device, local_build, source_id, device_id, source_version) VALUES (?,?,?,?,?,?,?,?);
UPDATE protected.objects SET provenance=? WHERE provenance=?;
DELETE FROM protected.data_provenances WHERE ROWID IN (%@);
ALTER TABLE protected.workouts ADD COLUMN total_basal_energy_burned REAL
void _HDSQLiteNewSourceUUIDWithBundleIdentifierAndProductType(sqlite3_context *, int, sqlite3_value **)
HDDatabaseMigrator+Monarch.m
argc == 2
com.apple.health.
iPod6,4
iPod6,3
Watch1,1
Watch1,2
listener
Daemon became nil
processCreationHandler
T@?,C,N,V_processCreationHandler
serviceListener
T@"HDXPCListener",R,N,V_serviceListener
clientProcesses
note
enteredInError
modifiedDate
FHIRIdentifier
sortDate
extractionVersion
locale
hasNote
T@"NSString",&,N,V_note
hasEnteredInError
TB,N,V_enteredInError
hasModifiedDate
Td,N,V_modifiedDate
hasFHIRIdentifier
fHIRIdentifier
T@"HDCodableFHIRIdentifier",&,N,V_fHIRIdentifier
hasSortDate
T@"HDCodableSemanticDate",&,N,V_sortDate
hasExtractionVersion
Tq,N,V_extractionVersion
hasLocale
T@"NSString",&,N,V_locale
hasCountry
T@"NSString",&,N,V_country
hasState
Tq,N,V_state
Contributor reference for unknown type should have a persistent ID
Contributor reference for other type should have an UUID
Contributor reference of invalid type %ld
HDIDSPersistentDictionary.m
databaseURL
[objectClass supportsSecureCoding]
Failed to open database
v16@?0@"NSString"8
Found integrity issues in IDS message database.
(_database == nil) || ([_database isOpen] == NO)
Re-creating IDS persistent database with version %ld
_database == nil
Corrupt database
INSERT OR REPLACE INTO key_value_store (key, expiration, value) VALUES (?, ?, ?)
failed to store value for key '%@'
SELECT value FROM key_value_store WHERE key = ?
failed to lookup value for key '%@'
DELETE FROM key_value_store WHERE key = ?
failed to delete value for key '%@'
DELETE FROM key_value_store
failed to delete all keys and values
iterator
SELECT key, value, expiration FROM key_value_store ORDER BY expiration ASC
failed to iterate over all keys and values
CREATE TABLE key_value_store (key TEXT PRIMARY KEY, expiration REAL NOT NULL, value BLOB NOT NULL)
CREATE INDEX key_value_store_by_expiration ON key_value_store(expiration)
CREATE TABLE message_records (uuid TEXT NOT NULL PRIMARY KEY, type INTEGER NOT NULL, timestamp DOUBLE NOT NULL, outgoing BOOLEAN NOT NULL, is_request BOOLEAN NOT NULL, length INTEGER NOT NULL, send_timestamp DOUBLE, device_id TEXT NOT NULL, canceled INTEGER NOT NULL DEFAULT 0, error_domain TEXT, error_code INTEGER, error_timestamp DOUBLE)
CREATE INDEX message_records_timestamp ON message_records(timestamp)
CREATE TABLE request_response_mappings (request TEXT NOT NULL REFERENCES message_records(uuid) ON DELETE CASCADE, response TEXT NOT NULL REFERENCES message_records(uuid) ON DELETE CASCADE, UNIQUE (request, response) ON CONFLICT IGNORE)
INSERT OR IGNORE INTO message_records (uuid, type, timestamp, outgoing, is_request, length, device_id) VALUES (?, ?, ?, ?, ?, ?, ?)
failed to record message event
DELETE FROM message_records WHERE timestamp < ?
failed to prune message event database
INSERT INTO request_response_mappings (request, response) VALUES (?, ?)
failed to record message response mapping
UPDATE message_records SET send_timestamp=? WHERE uuid=?
failed to record message sent
UPDATE message_records SET error_domain=?, error_code=?, error_timestamp=? WHERE uuid=?
failed to record message error
UPDATE message_records SET canceled=1 WHERE uuid=?
failed to mark messages as canceled
SELECT uuid FROM message_records WHERE type=? AND outgoing=1 AND canceled=0 AND send_timestamp IS NULL AND error_timestamp IS NULL
SELECT ROWID FROM sources WHERE product_type LIKE 'Watch%'
SELECT ROWID FROM protected.data_provenances WHERE sync_provenance = 0 AND origin_build = '[8.0, 8.2)' AND source_id IN (%@) LIMIT 1;
UPDATE protected.data_provenances SET origin_build = '[8.2, 9.0)' WHERE origin_build = '[8.0, 8.2)'
UPDATE protected.data_provenances SET sync_provenance = 1 WHERE origin_build = '[8.2, 9.0)' AND source_id IN (%@)
2a39
Not enough buffer
Heart rate control point (%@) operation: %d
operation
TC,N,V_operation
DATABASE_CREATION
IDENTIFIER
OBJECT_ANCHOR
OBJECT_ANCHOR_8_2
HDKeyValueEntity+DatabaseProperties.m
(data == nil) || [data isKindOfClass:[NSData class]]
values || *error
No workout found with UUID %@
km/min
authorizationStatus
authorizationRequest
modificationDate
modificationEpoch
authorizationMode
Tq,N,V_objectType
hasAuthorizationStatus
Tq,N,V_authorizationStatus
hasAuthorizationRequest
Tq,N,V_authorizationRequest
hasModificationDate
Td,N,V_modificationDate
hasModificationEpoch
Tq,N,V_modificationEpoch
hasAuthorizationMode
Tq,N,V_authorizationMode
gatewayExternalID
resourceID
rawContent
receivedDate
receivedDateTimeZoneName
sourceURL
extractionHints
accountIdentifier
originVersionMajor
originVersionMinor
originVersionPatch
originVersionBuild
messageVersion
firstSeenDate
firstSeenDateTimeZoneName
hasGatewayExternalID
T@"NSString",&,N,V_gatewayExternalID
hasResourceID
T@"NSString",&,N,V_resourceID
hasRawContent
T@"NSData",&,N,V_rawContent
hasReceivedDate
Td,N,V_receivedDate
hasFhirVersion
T@"NSString",&,N,V_fhirVersion
hasReceivedDateTimeZoneName
T@"NSString",&,N,V_receivedDateTimeZoneName
hasSourceURL
T@"NSString",&,N,V_sourceURL
hasExtractionHints
Tq,N,V_extractionHints
hasAccountIdentifier
T@"NSString",&,N,V_accountIdentifier
hasOriginVersionMajor
Tq,N,V_originVersionMajor
hasOriginVersionMinor
Tq,N,V_originVersionMinor
hasOriginVersionPatch
Tq,N,V_originVersionPatch
hasOriginVersionBuild
T@"NSString",&,N,V_originVersionBuild
hasMessageVersion
T@"HDCodableMessageVersion",&,N,V_messageVersion
hasFirstSeenDate
Td,N,V_firstSeenDate
hasFirstSeenDateTimeZoneName
T@"NSString",&,N,V_firstSeenDateTimeZoneName
======== %@ ==========
<%@:%p> %@
======== Overview ==========
Date: %@
Device: %@
Internal Model: %@
Build: %@ (%@)
Disk capacity: %.1f GB
Disk space available: %.3f GB
CloudSyncSequenceRecord
CloudSyncSequenceA
CloudSyncSequenceB
CloudSyncTombstoneSequence
StoreRecord
Slot
Active
BaselineEpoch
EntityAnchorMap
FrozenAnchorMap
ChangeIndex
ChildRecordCount
IncludedIdentifiers
FirstUnfrozenChange
HDCloudSyncSequenceRecord.m
includedIdentifiers
storeRecordID
Invalid sequence record slot identifier %ld
%@/%@/%@
record identity (%ld) is not a valid HDCloudSyncSequenceRecordIdentity value
sequence slot (%ld) does not match the record name (%@)
record has invalid owner UUID data '%@'
deletedChildCount <= _underlyingSequence.childRecordCount
@16@?0@"NSData"8
%@ (%@) in %@ (Owner: %@)
Last Modified Date: %@
Store Ref: %@
%@ (%@) Epoch: %lld, Change: %llu, Children: %llu
IncludedIdentifiers: %@
ProtocolVersion: %d
EntityAnchorMap:
  %@FrozenAnchorMap:
  %@
TB,N,GisActive
slot
baselineEpoch
childRecordCount
syncAnchorMap
T@"HDSyncAnchorMap",R,N
T@"NSSet",R,C,N
Ti,N
frozenSyncAnchorMap
firstUnfrozenChangeRecord
T@"CKRecordID",C,N
Tombstone
valueRange
hasValueRange
T@"HDCodableInspectableValueCollection",&,N,V_valueRange
HDUserNotification.m
!_responseHandler
responseHandler
T@?,C,N,V_responseHandler
notification
T^{__CFUserNotification=},N,V_notification
title
T@"NSString",C,N,V_title
message
T@"NSString",C,N,V_message
defaultButton
T@"NSString",C,N,V_defaultButton
cancelButton
T@"NSString",C,N,V_cancelButton
otherButton
T@"NSString",C,N,V_otherButton
additionalDescriptors
T@"NSDictionary",C,N,V_additionalDescriptors
alertLevel
Tq,N,V_alertLevel
userNotificationOptions
TQ,N,V_userNotificationOptions
default
other
cancel
metadata_keys
TEXT UNIQUE
SessionTrackerApp
startFitnessMachineSession
closed
HDDatabaseLegacyJournalFile.m
Cannot open %@ because it is already open
Cannot read journal version if journal file is not open
Failed to read journal version
Journal is not open
Error opening journal file
_UserDefaultUpdatedJournalEntry
_UserDefaultRemovedJournalEntry
entriesOut != NULL
Journal file too short for expected data, Offset: %lu Length: %ld, fileSize: %llu
Unknown journal entry (%lu bytes at offset %llu)
*** Journal file too short for expected data, Offset: %lu Length: %d, fileSize: %ld
Journal file fstat failed: %d: %s
%@ does not support %@
I28@?0@"NSArray"8B16^@20
Unable to read build length from journal file
Unable to read build number from journal file
Cannot create and open %@ because it is already open
Failed to create journal file at %@
Error writing journal version %ld
Error writing OS build %@
Cannot append data because journal is not open
Wrote wrong number of bytes to journal, expected: %lu, actual: %llu (error %d: %s)
Exception writing to journal: %@
Failed to fsync journal %@ (%d): %s
journalPath
isOpen
size
modificationTime
%@:%@
Country code %@ is not an allowed country code
[%@] Onboarding completed
[%@] Onboarding reset
v16@?0@"<HDFeatureAvailabilityExtensionObserver>"8
featureIdentifier
T@"NSString",R,C,N,V_featureIdentifier
data
lastUpdatedDate
fhirVersionMajor
fhirVersionMinor
fhirVersionPatch
hasData
T@"NSData",&,N,V_data
hasLastUpdatedDate
Td,N,V_lastUpdatedDate
hasFhirVersionMajor
Tq,N,V_fhirVersionMajor
hasFhirVersionMinor
Tq,N,V_fhirVersionMinor
hasFhirVersionPatch
Tq,N,V_fhirVersionPatch
HDSimpleGraphNode.m
-[HDSimpleGraphNode work_addAttribute:ofType:forKeyID:error:]
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.25.2/HealthKit/HealthDaemon/Ontology/SimpleGraphDatabase/HDSimpleGraphNode.m
(self.rowID > 0)
Graph Node: %@
relationships
T@"NSArray",R,N,V_relationships
areAllRelationshipsLoaded
TB,R,N,V_areAllRelationshipsLoaded
attributes
startAnchor
endAnchor
objectData
requiredAnchors
speculative
sequence
complete
hasStartAnchor
Tq,N,V_startAnchor
hasEndAnchor
Tq,N,V_endAnchor
objectDatas
T@"NSMutableArray",&,N,V_objectDatas
T@"NSMutableArray",&,N,V_requiredAnchors
hasSpeculative
TB,N,V_speculative
hasSequence
Tq,N,V_sequence
hasComplete
TB,N,V_complete
sample_uuid
concept_identifier
version
key_path
compound_index
ontology_version
com.apple.health.records
Indexer-State
concept_index
sample_uuids
concept_index_concept_identifier_key_paths
HDConceptIndexEntity.m
conceptIndexEntries
sampleUUID
handler
B32@?0@"HDConceptIndexEntry"8q16^@24
keyPaths
No key paths specified in sample-by-concept lookup.
@16@?0@"NSString"8
CloudSyncDataUploadRequest
CloudSyncDataUploadRequestRecord
Unauthorized use of includeAutomaticTimeZones
updates after samples added
Unable to determine authorization status.
initial results
v36@?0@"NSArray"8@"NSArray"16q24B32
pending updates after resume
updates after resume
v32@?0@"HKDeletedObject"8q16^B24
updates after samples removed
T@"HKQueryAnchor",R,C,N,V_anchor
limit
TQ,R,N,V_limit
includeAutomaticTimeZones
TB,R,N,V_includeAutomaticTimeZones
includeContributorInformation
TB,R,N,V_includeContributorInformation
HKHFDRebuildStage
DatabaseAccessibility
HDDatabase.mm
[profile directoryPath] != nil
%@.%p.transaction
%@.%p.transactionContext
%@.%p.ignoreTransactionContext
serial-asynchronous
protectedData
database-protected-data
journal
secondary-journal
database-main-journal-observers
database-cloudsync-journal-observers
Journals
CloudSyncJournals
Failed to retrieve size for file at '%@': %s
sqlite-wal
Failed to attach protected database
Corrupt protected database (%d)
Missing database pool for type %@
Database pool %@ not created by %@
Transaction failed with unknown error
Cannot set database transaction context inside transaction
Cannot override database transaction context
B8@?0
transactionIdentifier != nil
%@,%@
secure
Corrupt %@ database (%d)
(intentional)
Failed migrations for %@, error: %@
Timed out waiting for protected database migration transaction.
Fatal migration failure attaching protected database: %@
Invalid database pair (removed)
Migration must be performed inside a database transaction
Transaction database connection must be nil before migration
schemaName
database != nil
Database invalidated
%@ %@ %lld
Transaction may not be both high priority and write
PRAGMA wal_checkpoint(truncate)
protectedDataFlushInterval >= 0.0
available
unavailable
v16@?0@"<HDDatabaseProtectedDataObserver>"8
Failed to take database accessibility assertion
Failed to take cloned database accessibility assertion
 with %lu active assertions
_protectedDataFlushDeadlineDate != nil
Attempt to add a journal entry when no journal is active.
Failed to merge required journal.
healthdb_archive.hfd
Observed content protection state: %@
Protected data availability state: %@
Protected data flush required by %@
Protected data flush required NOW
Database aggregate size: %.2f MB
HFD size: %.2f MB
  -- Includes %d journal chapter%s.
Accessibility Assertions (%lu):
@"NSString"16@?0@"HDAssertion"8
%@ (%lu)
Protected Data Observers: %@
v16@?0@"<HDDatabaseJournalMergeObserver>"8
activeDatabaseCount == 0
self.invalidated
dataProtectedByFirstUnlockAvailable
TB,R,N,GisDataProtectedByFirstUnlockAvailable
protectedDataAvailable
TB,R,N,GisProtectedDataAvailable
profileDirectoryPath
T@"NSString",R,C,N,V_profileDirectoryPath
threadLocalTransactionKey
T@"NSString",R,C,N,V_threadLocalTransactionKey
threadLocalTransactionContextKey
T@"NSString",R,C,N,V_threadLocalTransactionContextKey
threadLocalIgnoreTransactionContextKey
T@"NSString",R,C,N,V_threadLocalIgnoreTransactionContextKey
invalidated
assertionManager
T@"HDAssertionManager",&,N,V_assertionManager
schemaMigrationLock
T@"NSLock",&,N,V_schemaMigrationLock
activeDatabasesLock
T@"NSConditionLock",&,N,V_activeDatabasesLock
activeDatabases
T@"NSMutableSet",&,N,V_activeDatabases
migratedDatabases
T@"NSHashTable",&,N,V_migratedDatabases
asynchronousOperationQueue
T@"NSOperationQueue",&,N,V_asynchronousOperationQueue
journalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_journalQueue
journalGroup
T@"NSObject<OS_dispatch_group>",&,N,V_journalGroup
pendingJournalMerges
TQ,N,V_pendingJournalMerges
secondaryJournalMergeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_secondaryJournalMergeQueue
extendedTransactions
T@"NSMutableDictionary",&,N,V_extendedTransactions
databasePoolForType
T@"NSDictionary",&,N,V_databasePoolForType
T@"HDContentProtectionManager",R,N,V_contentProtectionManager
offsetTimeInterval
Td,N,V_offsetTimeInterval
protectedDataFlushInterval
Td,N,V_protectedDataFlushInterval
didRunPostMigrationUpdates
TB,N,V_didRunPostMigrationUpdates
corruptedMigrationAttemptsCount
Tq,N,V_corruptedMigrationAttemptsCount
unitTest_didWaitForJournalMergeHandler
T@?,C,N,V_unitTest_didWaitForJournalMergeHandler
T@"HDDatabaseJournal",R,N,V_journal
cloudSyncJournal
T@"HDDatabaseJournal",R,N,V_cloudSyncJournal
Protected Database
Unprotected Database
Unknown Database Type (%ld)
DatabaseIdentifier-%@
protectedDatabaseName
T@"NSString",C,N,V_protectedDatabaseName
unmerged
invalid (%ld)
v32@?0@8@16^B24
HKObject+HDCodingSupport.m
HKDeletedObjects don't use HDCodingSupport, deleted objects from codable is handled in HDDatatSyncEntity's _insertObjectsFromCodableObjectCollection:syncStore:profile:error:
HKDeletedObjects don't use HDCodingSupport, deleted coables are added using HDDeletedSampleEntity's addCodableObject:toCollection
HKDeletedObjects don't use HDCodingSupport, deleted codables are generated in _HDDeletedSampleEntityEncoder's `codableRepresentationForPersistentID:row:error:`
@16@?0@"HKMedicalCoding"8
@16@?0@"HKInspectableValue"8
@16@?0@"HKReferenceRange"8
@16@?0@"HKCodedValue"8
DataMigration
needsProtectedDataMigration
TB,N,V_needsProtectedDataMigration
HDDemoDataSleepSampleGeneratorNextSleepDurationSampleTimeKey
nextSleepDurationSampleTime
Td,N,V_nextSleepDurationSampleTime
HDSourceOrderManager.mm
v24@?0q8@"NSString"16
v16@?0@?<v@?qBdq>8
@"_HDCachedSourceOrder"24@?0@"HDDatabaseTransaction"8^@16
B36@?0q8B16d20^@28
q24@?0@"HKSource"8@"HKSource"16
<%@:%p> userOrder:%s sources:%@, IDs:%@
orderedSources
T{vector<_HDWrappedSource, std::__1::allocator<_HDWrappedSource> >=^{_HDWrappedSource}^{_HDWrappedSource}{__compressed_pair<_HDWrappedSource *, std::__1::allocator<_HDWrappedSource> >=^{_HDWrappedSource}}},N,V_orderedSources
sourcesByID
T{unordered_map<long long, HKSource *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, HKSource *> > >={__hash_table<std::__1::__hash_value_type<long long, HKSource *>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, HKSource *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::hash<long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::equal_to<long long>, true> >=f}}},N,V_sourcesByID
userOrdered
TB,R,N,V_userOrdered
isDefaultSourceOrder
TB,R,N,V_isDefaultSourceOrder
Invalid codeable source order %@
@"NSNumber"16@?0@"HKSource"8
HDAppSubscriptionManager
subscription_launch
launch_timer
v24@?0@"NSString"8@"HDBackgroundTask"16
kKeepAppsUpToDateEnabledChangedNotification
%@ for %@
com.apple.healthd.scheduled.
%@|%@.%@
v32@?0@"HKObjectType"8@"HDReadAuthorizationStatus"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"NSNumber"8@"NSNumber"16^B24
appAssertionManager
T@"HDAppAssertionManager",&,N,V_appAssertionManager
T@"HDBackgroundTaskScheduler",&,N,V_backgroundTaskScheduler
launchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_launchQueue
pendingTypeCodesToAnchors
T@"NSMutableDictionary",&,N,V_pendingTypeCodesToAnchors
pendingFirstLaunchBundleIdentifiers
T@"NSMutableSet",&,N,V_pendingFirstLaunchBundleIdentifiers
launchTimers
T@"NSMutableDictionary",&,N,V_launchTimers
launchTimerLaunchTimes
T@"NSMutableDictionary",&,N,V_launchTimerLaunchTimes
launchTimerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_launchTimerQueue
backgroundAppRefreshNotifyToken
Ti,N,V_backgroundAppRefreshNotifyToken
shouldScheduleLaunches
TB,N,V_shouldScheduleLaunches
Received nil for non-nil field 'procedureCodingCollection'
standHourTimestamp
didStand
hasStandHourTimestamp
Tq,N,V_standHourTimestamp
hasDidStand
TB,N,V_didStand
bytesValue
hasBytesValue
T@"NSData",&,N,V_bytesValue
mode
hasFrom
T@"HDAWDHealthKitRoutineLocation",&,N,V_from
hasTo
T@"HDAWDHealthKitRoutineLocation",&,N,V_to
hasMode
Ti,N,V_mode
Automotive
Pedestrian
HDDataProvenanceCache.m
[_sourceEncoder purpose] == HDEntityEncodingPurposeCodableObjectCreation
[_sourceEncoder purpose] == HDEntityEncodingPurposeObjectInstantiation
provenanceManager
T@"HDDataProvenanceManager",&,N,V_provenanceManager
T@"HDDatabaseTransaction",&,N,V_transaction
sourceEncoder
T@"HDEntityEncoder",&,N,V_sourceEncoder
provenanceByID
T@"NSMutableDictionary",&,N,V_provenanceByID
codableSourcesByID
T@"NSMutableDictionary",&,N,V_codableSourcesByID
deviceUUIDBytesByID
T@"NSMutableDictionary",&,N,V_deviceUUIDBytesByID
sourceByPersistentIDCache
T@"NSMutableDictionary",&,N,V_sourceByPersistentIDCache
sourceRevisionByDataProvenanceIDCache
T@"NSMutableDictionary",&,N,V_sourceRevisionByDataProvenanceIDCache
sourceRevisionsDictionaryBySourceCache
T@"NSMutableDictionary",&,N,V_sourceRevisionsDictionaryBySourceCache
deviceByPersistentIDCache
T@"NSMutableDictionary",&,N,V_deviceByPersistentIDCache
contributorByReferenceCache
T@"NSMutableDictionary",&,N,V_contributorByReferenceCache
codableObjectCollectionsByProvenance
T@"NSMutableDictionary",&,N,V_codableObjectCollectionsByProvenance
Treadmill Data: instantaneousSpeed = %@, averageSpeed = %@, totalDistance = %@, inclination = %@, rampSetting = %@, positiveElevationGain = %@, negativeElevationGain = %@, instantaneousPace = %@, averagePace = %@, totalEnergy = %@, energyPerHour = %@, energyPerMinute = %@, heartRate = %@, metabolicEquivalent = %@, elapsedTime = %@, remainingTime = %@, forceOnBelt = %@, powerOutput = %@
instantaneousPaceIsSet
instantaneousPace
averagePaceIsSet
averagePace
forceOnBeltIsSet
forceOnBelt
powerOutputIsSet
powerOutput
com.apple.mobilephone
B24@?0@8@"NSDictionary"16
SOSManager
Class getSOSManagerClass(void)_block_invoke
HDMedicalIDDataManager+EmergencyContactConsolidation.m
FKFriendsManager
Class getFKFriendsManagerClass(void)_block_invoke
void *FriendKitLibrary(void)
/System/Library/PrivateFrameworks/FriendKit.framework/FriendKit
/System/Library/PrivateFrameworks/FriendKit.framework/Contents/MacOS/FriendKit
FKPerson
Class getFKPersonClass(void)_block_invoke
<%@ totalLocations=%tu %@>
T@"HKWorkoutRoute",&,N,V_sample
unsmoothedLocations
T@"NSArray",&,N,V_unsmoothedLocations
T@?,C,N,V_completionHandler
T@"HDDaemonTransaction",&,N,V_transaction
smoothingAttempts
TQ,V_smoothingAttempts
CLSmootherErrorDomain
Workout route smoothed
Phone
Did not find the expected sample with UUID=%@
B16@?0@"CLLocation"8
Smoothing task timed out
Object not found
didCompleteAllPendingSmoothingTasksHandler
T@?,C,N,V_didCompleteAllPendingSmoothingTasksHandler
unitTest_wilTriggerSmoothing
T@?,C,N,V_unitTest_wilTriggerSmoothing
Conditions.plist
com.apple.MobileAsset.HealthKit.FeatureAvailability
com.apple.healthd.remote-feature-availability-asset-activity
HDFeatureAvailabilityAssetManagerTestMode
FeatureAvailabilityOverride
v16@?0@"NSArray"8
assetDirectoryOverride
T@"NSURL",R,N,V_assetDirectoryOverride
retryInterval
Td,R,N,V_retryInterval
downloadManager
T@"_HKMobileAssetDownloadManager",&,N,V_downloadManager
periodicActivity
T@"HDPeriodicActivity",&,N,V_periodicActivity
unitTest_defaults
T@"NSUserDefaults",&,N,V_unitTest_defaults
unitTest_errorObserver
T@?,C,N,V_unitTest_errorObserver
No client connection
Unable to look up workout builder '%@' during create workout operation.
B16@?0@"HKWorkoutEvent"8
Invalid workout parameters: %@
B24@?0@"NSUUID"8^@16
workout_configuration
date_interval
metadata
device
events
calculators
goal_type
T@"HKWorkoutConfiguration",R,C,N,V_workoutConfiguration
T@"NSUUID",R,C,N,V_identifier
dateInterval
T@"NSDateInterval",R,C,N,V_dateInterval
T@"NSDictionary",R,C,N,V_metadata
T@"HKDevice",R,C,N,V_device
T@"HKSource",R,C,N,V_source
T@"NSString",R,C,N,V_sourceVersion
T@"NSArray",R,C,N,V_events
statisticsCalculators
T@"NSDictionary",R,C,N,V_statisticsCalculators
associatedSeries
T@"NSArray",R,C,N,V_associatedSeries
TQ,R,N,V_goalType
T@"HKQuantity",R,C,N,V_goal
quantityTypesIncludedWhilePaused
T@"NSArray",R,C,N,V_quantityTypesIncludedWhilePaused
createdWorkout
T@"HKWorkout",R,N,V_createdWorkout
CloudSyncRoot
OwnerIdentifier
StoreIdentifier
PendingOwner
SupportedProtocolVersion
RequiredProtocolVersion
SystemBuildVersion
ProductType
DeviceName
DeviceMode
Store
HDCloudSyncStoreRecord.m
ownerIdentifier != nil
Failed to validate sequence record after creation: %@
_slotASequenceHeaderRecord == record
_slotBSequenceHeaderRecord == record
_tombstoneSequenceRecord == record
_underlyingStore.ownerIdentifier == nil
productType != nil
systemBuildVersion != nil
deviceName != nil
%@ (%@) in %@ (Owner: %@)
%@, Last Modified: %@
%@ on %@, Mode: %@
StoreIdentifier: %@
OwnerIdentifier: %@
PendingOwner: %@
Protocol Version: Supported(%ld) Required(%ld)
Sequence Headers: Current(%@) Old(%@) Active(%@)
SlotASequenceHeaderRecord:
SlotBSequenceHeaderRecord:
TombstoneSequenceHeaderRecord:
Inactive
  <none>
  --
ownerIdentifier
sequenceRecord
T@"HDCloudSyncSequenceRecord",R,N
orderedSequenceRecords
tombstoneSequenceRecord
T@"HDCloudSyncSequenceRecord",R,N,V_tombstoneSequenceRecord
pendingOwner
T@"NSString",C,N
supportedProtocolVersion
requiredProtocolVersion
systemBuildVersion
deviceName
Tq,N
%@/%@/Store
Basic
Satellite
mockPrimaryProfile
T@"HDMockPrimaryProfile",R,N,VmockPrimaryProfile
T@"HDBackgroundTaskScheduler",R,VbackgroundTaskScheduler
T@"HDPluginManager",R,VpluginManager
T@"HDPrimaryProfile",R,N,VprimaryProfile
T@"<HDNanoAlertSuppressionService>",&,N,ValertSuppressionService
workout_builder_id
series_uuid
series_type
workout_builder_associated_series
batteryState
hasBatteryState
Ti,N,V_batteryState
Unplugged
Charging
Full
SyncEntity
%@(%ld)
HDSyncEntityType
schema
Tq,R,N,V_entityIdentifier
schemaIdentifier
T@"NSString",R,C,N,V_schemaIdentifier
notificationConfiguration
hasNotificationConfiguration
T@"HDCodableCompanionUserNotificationConfiguration",&,N,V_notificationConfiguration
countryCode
T@"NSString",R,C,N,V_countryCode
supportedCodingSystems
T@"NSSet",R,C,N,V_supportedCodingSystems
analyticsOptions
TQ,R,N,V_analyticsOptions
query
account
account.identifier
clinical_authorization_sessions
(account_id IS NULL AND gateway_id IS NOT NULL) OR (account_id IS NOT NULL AND gateway_id IS NULL)
diagnosticTestCodings
referenceRanges
effectiveStartDate
category
issueDate
effectiveEndDate
interpretationCodings
comments
bodySiteCodings
methodCodings
hasDiagnosticTestCodings
T@"HDCodableMedicalCodingList",&,N,V_diagnosticTestCodings
T@"HDCodableInspectableValueCollection",&,N,V_value
hasReferenceRanges
T@"HDCodableReferenceRangeList",&,N,V_referenceRanges
hasEffectiveStartDate
T@"NSData",&,N,V_effectiveStartDate
hasCategory
T@"NSString",&,N,V_category
hasIssueDate
T@"NSData",&,N,V_issueDate
hasEffectiveEndDate
T@"NSData",&,N,V_effectiveEndDate
hasInterpretationCodings
T@"HDCodableMedicalCodingList",&,N,V_interpretationCodings
hasComments
T@"NSString",&,N,V_comments
hasBodySiteCodings
T@"HDCodableMedicalCodingList",&,N,V_bodySiteCodings
hasMethodCodings
T@"HDCodableMedicalCodingList",&,N,V_methodCodings
hasPerformers
T@"HDCodableStringList",&,N,V_performers
HDCloudSyncValidatePushTargetOperation.m
No target set when beginning push target validation.
Target's push store not set when beginning push target validation.
validationResult
v32@?0@"HDSyncEntityIdentifier"8q16^B24
Found %@ anchors from the future
rebase-reason
deadline
record-count
Unable to find container for identifier %@
v16@?0@"CKRecord"8
v40@?0@"HDSyncEntityIdentifier"8{HDSyncAnchorRange=qq}16^B32
shouldValidateCurrentSequence
TB,N,V_shouldValidateCurrentSequence
target
T@"HDCloudSyncTarget",C,N,V_target
Tq,R,N,V_result
CSLExtendedRuntimeSession
v16@?0@"NSDictionary"8
Client processes:
%@ (%@) %@
applicationStateMonitorProvider
T@"<HDApplicationStateMonitorProvider>",R,W,N,V_applicationStateMonitorProvider
applicationState
TI,R,N,V_applicationState
Ti,R,N,V_pid
data_provenances.sync_provenance
data_provenances.origin_build
data_provenances.origin_product_type
data_provenances.local_build
data_provenances.local_product_type
data_provenances.source_version
data_provenances.tz_name
data_provenances.source_id
data_provenances.device_id
data_provenances.origin_major_version
data_provenances.origin_minor_version
data_provenances.origin_patch_version
data_provenances.derived_flags
data_provenances.contributor_id
ExcludePrivateMetadata
IncludeAutomaticTimeZone
IncludeContributorInformation
OverrideMCCategorySampleValue
HDMaxObjectPersistentID
HDDataEntity.m
dataObject != nil
existingObject != nil
Could not find existing object of class %@ to delete with external sync identifier '%@' (object ID %@)
@"NSNumber"24@?0@"HKObject"8^@16
Invalid data object %@
Internal error occurred for %@ insertionFilter.
Invalid provenance.
Internal error attempting to validate objects for insertion.
Internal error occurred fetching provenance %@
Internal error reporting failure.
journaling
insertion
Batch journal failed on nil identifier, %@
Multiple bundle identifiers (%@) found for source entities (%@)
object not found
No support for deleting objects with options when database is not available
%@ should not be used for abstract class %@
Could not find expected sourceID for object with ID %@
No source found with bundle identifier "%@"
B64@?0@"HDDataEntity"8@"NSArray"16^{HDSQLiteRow=}24q32Q40^B48^@56
BLOB UNIQUE
%@ = %ld
+[HDDataEntity _insertBaseDataObject:withProvenance:inDatabase:error:]
INSERT OR IGNORE INTO protected.objects (uuid, provenance, type, creation_date) VALUES (?, ?, ?, ?)
Duplicate HKObject
B16@?0@"NSString"8
[object isKindOfClass:[HKObject class]]
dataObject
restrictSource
fullProvenance
%@ - %@
%@-%ld
T@"HKObject",R,N,V_dataObject
T@"HDDataOriginProvenance",R,N,V_provenance
codableCollectionData
collection
T@"HDCodableObjectCollection",R,N,V_collection
TB,R,N,V_restrictSource
((%@ & %lld) != %d)
v32@?0@"NSMutableArray"8@"NSString"16@24
HDSQLitePredicate * _Nonnull HDDataEntityPredicateForOriginBuildInRange(NSString * _Nullable __strong, NSString * _Nullable __strong)
Must specify at least one of minBuild and maxBuild.
%@(%@, ?) >= 0
%@(%@, ?) < 0
== 0
!= 0
<= 0
>= 0
%@(%@, ?) %@
guardianDisplayName
hasGuardianDisplayName
T@"NSString",&,N,V_guardianDisplayName
delayed-aggregation
B32@?0@"HDDatabaseTransaction"8@"NSError"16^@24
B16@?0@"<HDCollectedSensorDatum>"8
q24@?0@"<HDCollectedSensorDatum>"8@"<HDCollectedSensorDatum>"16
@16@?0@"_HDAggregationStateKey"8
unaggregatedSensorData
T@"NSMutableArray",R,N,V_unaggregatedSensorData
openSeries
T@"HKSample",R,N,V_openSeries
aggregationState
T@"HDDataAggregationState",R,C,N,V_aggregationState
consumedSensorData
T@"NSArray",R,C,N,V_consumedSensorData
persistenceHandler
T@?,R,C,N,V_persistenceHandler
collectorIdentifier
T@"NSString",R,C,N,V_collectorIdentifier
Client is not authorized for this query.
bedtime
Td,N,V_bedtime
bedtimeGoalHour
Tq,N,V_bedtimeGoalHour
wakeUpTime
Td,N,V_wakeUpTime
wakeUpTimeGoalHour
Tq,N,V_wakeUpTimeGoalHour
Craig
Karina
Rogers
Cavanna
Default Person
CraigRogers
KarinaCavanna
Karina Cavanna
Craig Rogers
(555) 555-0100
spouse
Hypertension
Peanuts
Lisinopril (10mg by mouth once a day)
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
personDescription
T@"NSString",C,N,V_personDescription
birthDateComponents
T@"NSDateComponents",&,N,V_birthDateComponents
birthDate
T@"NSDate",&,N,V_birthDate
biologicalSex
Tq,N,V_biologicalSex
Tq,N,V_bloodType
fitzpatrickSkinType
Tq,N,V_fitzpatrickSkinType
timeIncrement
Td,N,V_timeIncrement
timeIncrementDuringExercise
Td,N,V_timeIncrementDuringExercise
dawnTime
Td,N,V_dawnTime
sunsetTime
Td,N,V_sunsetTime
genericSampleTimeNoiseStdDev
Td,N,V_genericSampleTimeNoiseStdDev
createHighFidelityData
TB,N,V_createHighFidelityData
Tq,N,V_profileType
uvIndexSampleFrequency
Td,N,V_uvIndexSampleFrequency
waistCircumferenceInInches
Td,N,V_waistCircumferenceInInches
wristCircumferenceInInches
Td,N,V_wristCircumferenceInInches
forearmCircumferenceInInches
Td,N,V_forearmCircumferenceInInches
hipCircumferenceInInches
Td,N,V_hipCircumferenceInInches
heightSampleTime
Td,N,V_heightSampleTime
heightTargetInCm
Td,N,V_heightTargetInCm
heightSampleTimeFrequency
Td,N,V_heightSampleTimeFrequency
heightSampleNoiseStdDev
Td,N,V_heightSampleNoiseStdDev
weightSampleTime
Td,N,V_weightSampleTime
weightTargetInKg
Td,N,V_weightTargetInKg
weightSampleTimeFrequency
Td,N,V_weightSampleTimeFrequency
weightSampleNoiseStdDev
Td,N,V_weightSampleNoiseStdDev
weightLossStartDay
Td,N,V_weightLossStartDay
weightDailyChangeStdDev
Td,N,V_weightDailyChangeStdDev
weightDailyMaxLoss
Td,N,V_weightDailyMaxLoss
weightChangePercentageMax
Td,N,V_weightChangePercentageMax
weightGainHolidayDaysInYear
T@"NSArray",&,N,V_weightGainHolidayDaysInYear
restingHeartRate
Tq,N,V_restingHeartRate
restingHeartRateMaxDailyDifference
Tq,N,V_restingHeartRateMaxDailyDifference
restingHeartRateMaxTotalDifference
Tq,N,V_restingHeartRateMaxTotalDifference
walkingHeartRateAverage
Tq,N,V_walkingHeartRateAverage
walkingHeartRateAverageMaxDailyDifference
Tq,N,V_walkingHeartRateAverageMaxDailyDifference
walkingHeartRateAverageMaxTotalDifference
Tq,N,V_walkingHeartRateAverageMaxTotalDifference
heartRateSampleFrequency
Td,N,V_heartRateSampleFrequency
heartRateSampleFrequencyStdDev
Td,N,V_heartRateSampleFrequencyStdDev
heartRateSampleNoiseStdDev
Td,N,V_heartRateSampleNoiseStdDev
restingRespirationRate
Tq,N,V_restingRespirationRate
restingRespirationRateSampleFrequency
Td,N,V_restingRespirationRateSampleFrequency
restingRespirationRateSampleNoiseStdDev
Td,N,V_restingRespirationRateSampleNoiseStdDev
bloodPressureSampleFrequency
Td,N,V_bloodPressureSampleFrequency
restingSystolicBloodPressure
Tq,N,V_restingSystolicBloodPressure
restingDiastolicBloodPressure
Tq,N,V_restingDiastolicBloodPressure
restingSystolicBloodPressureSampleNoiseStdDev
Td,N,V_restingSystolicBloodPressureSampleNoiseStdDev
restingDiastolicBloodPressureSampleNoiseStdDev
Td,N,V_restingDiastolicBloodPressureSampleNoiseStdDev
bodyTempFeverMultiplier
Td,N,V_bodyTempFeverMultiplier
bodyTempExerciseMultiplier
Td,N,V_bodyTempExerciseMultiplier
bodyTempSampleFrequency
Td,N,V_bodyTempSampleFrequency
bodyTempSampleNoiseStdDev
Td,N,V_bodyTempSampleNoiseStdDev
oxygenSaturationMean
Td,N,V_oxygenSaturationMean
oxygenSaturationStdDev
Td,N,V_oxygenSaturationStdDev
oxygenSaturationMeanAtElevation
Td,N,V_oxygenSaturationMeanAtElevation
oxygenSaturationStdDevAtElevation
Td,N,V_oxygenSaturationStdDevAtElevation
oxygenSaturationMeasuringSuccessRate
Td,N,V_oxygenSaturationMeasuringSuccessRate
oxygenSaturationMeasuringSuccessRateDuringSleep
Td,N,V_oxygenSaturationMeasuringSuccessRateDuringSleep
oxygenSaturationSampleFrequency
Td,N,V_oxygenSaturationSampleFrequency
peripheralPerfusionIndexMean
Td,N,V_peripheralPerfusionIndexMean
peripheralPerfusionIndexSampleFrequency
Td,N,V_peripheralPerfusionIndexSampleFrequency
peripheralPerfusionIndexStdDev
Td,N,V_peripheralPerfusionIndexStdDev
sexualActivityProbabilityPercentage
Td,N,V_sexualActivityProbabilityPercentage
sexualActivityProtectionProbabilityPercentage
Td,N,V_sexualActivityProtectionProbabilityPercentage
sexualActivityProtectionDocumentationProbabilityPercentage
Td,N,V_sexualActivityProtectionDocumentationProbabilityPercentage
menstrualPeriodFrequency
Td,N,V_menstrualPeriodFrequency
sexualActivityIsTryingToConceive
TB,N,V_sexualActivityIsTryingToConceive
ovulationIndeterminateProbabilityPercentage
Td,N,V_ovulationIndeterminateProbabilityPercentage
fitzpatrickSkinTypeSampleTime
Td,N,V_fitzpatrickSkinTypeSampleTime
fitzpatrickSkinTypeScore
Tq,N,V_fitzpatrickSkinTypeScore
toothbrushingDurationMean
Td,N,V_toothbrushingDurationMean
toothbrushingDurationMeanStdDev
Td,N,V_toothbrushingDurationMeanStdDev
handwashingDurationMean
Td,N,V_handwashingDurationMean
handwashingDurationMeanStdDev
Td,N,V_handwashingDurationMeanStdDev
handwashingSampleFrequency
Td,N,V_handwashingSampleFrequency
handwashingSampleFrequencyStdDev
Td,N,V_handwashingSampleFrequencyStdDev
activeCaloriesSampleFrequency
Td,N,V_activeCaloriesSampleFrequency
restingCaloriesSampleFrequency
Td,N,V_restingCaloriesSampleFrequency
stepsSampleFrequency
Td,N,V_stepsSampleFrequency
stepsSampleFrequencyDuringExercise
Td,N,V_stepsSampleFrequencyDuringExercise
sedentarySampleFrequency
Td,N,V_sedentarySampleFrequency
exerciseTimeSampleFrequency
Td,N,V_exerciseTimeSampleFrequency
moveGoal
Td,N,V_moveGoal
swimmingStrokesPerYard
Td,N,V_swimmingStrokesPerYard
exerciseStartTime
Td,N,V_exerciseStartTime
exerciseStopTime
Td,N,V_exerciseStopTime
exerciseCooldownTime
Td,N,V_exerciseCooldownTime
exerciseStartTimeStdDev
Td,N,V_exerciseStartTimeStdDev
exerciseStopTimeStdDev
Td,N,V_exerciseStopTimeStdDev
exerciseIntensityPercentage
Td,N,V_exerciseIntensityPercentage
workoutPrototypesByCalendarDay
T@"NSDictionary",&,N,V_workoutPrototypesByCalendarDay
exerciseWeeklyWorkoutsMean
Td,N,V_exerciseWeeklyWorkoutsMean
exerciseWeeklyWorkoutsStdDev
Td,N,V_exerciseWeeklyWorkoutsStdDev
exercisePostDietWeeklyWorkoutsMean
Td,N,V_exercisePostDietWeeklyWorkoutsMean
exercisePostDietWeeklyWorkoutsStdDev
Td,N,V_exercisePostDietWeeklyWorkoutsStdDev
flightsClimbedDailyMean
Td,N,V_flightsClimbedDailyMean
flightsClimbedStdDev
Td,N,V_flightsClimbedStdDev
flightsClimbedSampleTime
Td,N,V_flightsClimbedSampleTime
flightsClimbedSampleFrequency
Td,N,V_flightsClimbedSampleFrequency
flightsClimbedSampleFrequencyStdDev
Td,N,V_flightsClimbedSampleFrequencyStdDev
rehabLogarithmicConstant
Td,N,V_rehabLogarithmicConstant
walkingSpeedMean
Td,N,V_walkingSpeedMean
walkingSpeedStdDev
Td,N,V_walkingSpeedStdDev
walkingSpeedSampleFrequency
Td,N,V_walkingSpeedSampleFrequency
walkingSpeedSampleFrequencyStdDev
Td,N,V_walkingSpeedSampleFrequencyStdDev
stepLengthMean
Td,N,V_stepLengthMean
stepLengthStdDev
Td,N,V_stepLengthStdDev
stepLengthSampleFrequency
Td,N,V_stepLengthSampleFrequency
stepLengthSampleFrequencyStdDev
Td,N,V_stepLengthSampleFrequencyStdDev
asymmetryPercentageMean
Td,N,V_asymmetryPercentageMean
asymmetryPercentageStdDev
Td,N,V_asymmetryPercentageStdDev
asymmetryPercentageSampleFrequency
Td,N,V_asymmetryPercentageSampleFrequency
asymmetryPercentageSampleFrequencyStdDev
Td,N,V_asymmetryPercentageSampleFrequencyStdDev
doubleSupportPercentageMean
Td,N,V_doubleSupportPercentageMean
doubleSupportPercentageStdDev
Td,N,V_doubleSupportPercentageStdDev
doubleSupportPercentageSampleFrequency
Td,N,V_doubleSupportPercentageSampleFrequency
doubleSupportPercentageSampleFrequencyStdDev
Td,N,V_doubleSupportPercentageSampleFrequencyStdDev
sixMinuteWalkTestDistanceMean
Td,N,V_sixMinuteWalkTestDistanceMean
sixMinuteWalkTestDistanceStdDev
Td,N,V_sixMinuteWalkTestDistanceStdDev
sixMinuteWalkTestDistanceSampleFrequency
Td,N,V_sixMinuteWalkTestDistanceSampleFrequency
sixMinuteWalkTestDistanceSampleFrequencyStdDev
Td,N,V_sixMinuteWalkTestDistanceSampleFrequencyStdDev
stairAscentSpeedMean
Td,N,V_stairAscentSpeedMean
stairAscentSpeedStdDev
Td,N,V_stairAscentSpeedStdDev
stairAscentSpeedSampleFrequency
Td,N,V_stairAscentSpeedSampleFrequency
stairAscentSpeedSampleFrequencyStdDev
Td,N,V_stairAscentSpeedSampleFrequencyStdDev
stairDescentSpeedMean
Td,N,V_stairDescentSpeedMean
stairDescentSpeedStdDev
Td,N,V_stairDescentSpeedStdDev
stairDescentSpeedSampleFrequency
Td,N,V_stairDescentSpeedSampleFrequency
stairDescentSpeedSampleFrequencyStdDev
Td,N,V_stairDescentSpeedSampleFrequencyStdDev
breakfastTime
Td,N,V_breakfastTime
lunchTime
Td,N,V_lunchTime
snackTime
Td,N,V_snackTime
dinnerTime
Td,N,V_dinnerTime
mealTimeSampleNoiseStdDev
Td,N,V_mealTimeSampleNoiseStdDev
preDietIntakeMultiplier
Td,N,V_preDietIntakeMultiplier
numCupsOfCoffeeDailyMean
Td,N,V_numCupsOfCoffeeDailyMean
numCupsOfCoffeeStdDev
Td,N,V_numCupsOfCoffeeStdDev
waterConsumedSampleTime
Td,N,V_waterConsumedSampleTime
waterConsumedSampleFrequency
Td,N,V_waterConsumedSampleFrequency
waterConsumedDailyMean
Td,N,V_waterConsumedDailyMean
waterConsumedStdDev
Td,N,V_waterConsumedStdDev
waterConsumedIntervalMean
Td,N,V_waterConsumedIntervalMean
waterConsumedIntervalStdDev
Td,N,V_waterConsumedIntervalStdDev
weekdaySleepParameters
T@"HDDemoDataSleepParameters",&,N,V_weekdaySleepParameters
weekendSleepParameters
T@"HDDemoDataSleepParameters",&,N,V_weekendSleepParameters
wakeUpTimeNoiseStdDev
Td,N,V_wakeUpTimeNoiseStdDev
bedtimeNoiseStdDev
Td,N,V_bedtimeNoiseStdDev
inBedTimeStdDev
Td,N,V_inBedTimeStdDev
numSleepInterruptions
TQ,N,V_numSleepInterruptions
fallSampleFrequency
Td,N,V_fallSampleFrequency
fallsDailyMean
Td,N,V_fallsDailyMean
fallsDailyStdDev
Td,N,V_fallsDailyStdDev
spirometrySampleFrequency
Td,N,V_spirometrySampleFrequency
spirometrySampleTime
Td,N,V_spirometrySampleTime
asthmaSeverity
Tq,N,V_asthmaSeverity
useContinuousGlucoseMonitoring
TB,N,V_useContinuousGlucoseMonitoring
continuousGlucoseMonitoringSampleFrequency
Td,N,V_continuousGlucoseMonitoringSampleFrequency
numDailyFingerSticksAdherence
Td,N,V_numDailyFingerSticksAdherence
insulinSensitivity
Td,N,V_insulinSensitivity
insulinProduction
Td,N,V_insulinProduction
insulinAdherence
Td,N,V_insulinAdherence
insulinTherapy
TQ,N,V_insulinTherapy
mindfulSessionFrequency
Td,N,V_mindfulSessionFrequency
mindfulSessionMean
Tq,N,V_mindfulSessionMean
mindfulSessionStdDev
Tq,N,V_mindfulSessionStdDev
nutritionTrackingType
Tq,N,V_nutritionTrackingType
resultsTrackingType
Tq,N,V_resultsTrackingType
T@"_HKMedicalIDData",&,N,V_medicalIDData
TQ,N,V_workoutActivityType
T@"HKQuantity",&,N,V_goal
startTimeOffsetInDay
Td,N,V_startTimeOffsetInDay
Td,N,V_duration
totalEnergyBurnedInKcal
Td,N,V_totalEnergyBurnedInKcal
totalDistanceWalkingInMiles
Td,N,V_totalDistanceWalkingInMiles
totalDistanceCyclingInMiles
Td,N,V_totalDistanceCyclingInMiles
totalDistanceSwimmingInYards
Td,N,V_totalDistanceSwimmingInYards
swimmingSegmentDistanceInYards
Td,N,V_swimmingSegmentDistanceInYards
totalSwimmingSegments
Tq,N,V_totalSwimmingSegments
numLapsPerSegment
Tq,N,V_numLapsPerSegment
swimTimePerSegment
Td,N,V_swimTimePerSegment
restTimePerSegment
Td,N,V_restTimePerSegment
swimmingStrokeStyle
Tq,N,V_swimmingStrokeStyle
HDDatabase+TestSupport.m
unprotectedDatabase == protectedDatabase
HDQuantityDatumPassthroughAggregator.m
Expected a quantity
Invalid quantity type %@ (expected compatibility with %@)
notificationType
hasNotificationType
Ti,N,V_notificationType
HeartRhythmDataAvailable
<%@:%p destinationIdentifier=%@
T@"IDSDevice",R,N,V_device
destinationIdentifier
T@"NSString",R,C,N,V_destinationIdentifier
deviceIdentifier
T@"NSString",R,C,N,V_deviceIdentifier
HDDataCollectionDisableCalorimetry
HDCalorimetryDataCollector
CoreLocation
CMCaloriePushModelEnabled
v24@?0@"CMNatalieData"8@"NSError"16
thirdPartyAppsCount
thirdPartyAppsWroteDataCount
databaseSizeMB
rowCountObjects
percentageDeletedObjects
manuallyEnteredTypesCount
highFrequencyDataSizeMB
hasWatchSource
rowCountCDA
lastMonthRowsAdded
lastMonthDatabaseSizeIncreaseMB
hasThirdPartyAppsCount
Tq,N,V_thirdPartyAppsCount
hasThirdPartyAppsWroteDataCount
Tq,N,V_thirdPartyAppsWroteDataCount
hasDatabaseSizeMB
Tq,N,V_databaseSizeMB
hasRowCountObjects
Tq,N,V_rowCountObjects
hasPercentageDeletedObjects
Tq,N,V_percentageDeletedObjects
hasManuallyEnteredTypesCount
Tq,N,V_manuallyEnteredTypesCount
hasHighFrequencyDataSizeMB
Tq,N,V_highFrequencyDataSizeMB
hasHasWatchSource
TB,N,V_hasWatchSource
hasRowCountCDA
Ti,N,V_rowCountCDA
hasLastMonthRowsAdded
Tq,N,V_lastMonthRowsAdded
hasLastMonthDatabaseSizeIncreaseMB
Tq,N,V_lastMonthDatabaseSizeIncreaseMB
Zero
OneToFive
SixToForty
MoreThanForty
Register subscriptions.
subscriptions
T@"NSDictionary",R,C,N,V_subscriptions
metadataDictionary
hasDate
Td,N,V_date
hasSwimmingStrokeStyle
hasMetadataDictionary
T@"HDCodableMetadataDictionary",&,N,V_metadataDictionary
hasDuration
device_connections
_Connection_Manager
Connect
<%@:%p connecting:%s, BTLE:%s, services:%@>
numberOfFriends
medianFriendDuration
minFriendDuration
maxFriendDuration
numberOfFriendsMyDataHidden
numberOfFriendsHiddenFromMe
numberOfFriendsMuted
numberOfFriendsAwaitingResponse
numberOfFriendsPendingMyResponse
hasNumberOfFriends
Tq,N,V_numberOfFriends
hasMedianFriendDuration
Ti,N,V_medianFriendDuration
hasMinFriendDuration
Ti,N,V_minFriendDuration
hasMaxFriendDuration
Ti,N,V_maxFriendDuration
hasNumberOfFriendsMyDataHidden
Tq,N,V_numberOfFriendsMyDataHidden
hasNumberOfFriendsHiddenFromMe
Tq,N,V_numberOfFriendsHiddenFromMe
hasNumberOfFriendsMuted
Tq,N,V_numberOfFriendsMuted
hasNumberOfFriendsAwaitingResponse
Tq,N,V_numberOfFriendsAwaitingResponse
hasNumberOfFriendsPendingMyResponse
Tq,N,V_numberOfFriendsPendingMyResponse
Duration_1week
Duration_1month
Duration_3month
Duration_6month
Duration_1year
Duration_2years_or_more
HDSyncStoreEntity.m
B16@?0@"HDSQLiteEntity"8
sync_stores
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
Failed to retrieve any share metadata.
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
invitationTokensByShareURLs
T@"NSDictionary",R,C,N,V_invitationTokensByShareURLs
HDExtendedDatabaseTransaction.m
transactionTimeout > 0
continuationTimeout > 0
Rollback due to automatic rollback timer timeout
Rollback due to transaction timeout
Extended transaction is no longer in progress.
Exception caught during transaction: %@
Invalid transaction status.
transactionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_transactionQueue
dataQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dataQueue
completionSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_completionSemaphore
pendingWorkSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_pendingWorkSemaphore
automaticRollbackTimer
T@"NSObject<OS_dispatch_source>",&,N,V_automaticRollbackTimer
pendingWork
T@?,C,N,V_pendingWork
TQ,N,V_status
lastError
T@"NSError",&,N,V_lastError
pendingWorkDidSucceed
TB,N,V_pendingWorkDidSucceed
transactionTimeout
Td,R,N,V_transactionTimeout
continuationTimeout
Td,R,N,V_continuationTimeout
transactionIdentifier
T@"NSUUID",R,C,N,V_transactionIdentifier
T@"HDDatabase",R,W,N,V_database
enableStandReminders
progressUpdateFrequency
enableGoalCompletions
enableAchievements
enableWeeklySummary
timeZoneOffset
numberOfEvents
eventBusyTime
daysSinceFirstCalorieGoal
userCharacteristics
achievementStatistics
wellnessComplicationOnWatchFace
firstCalendarItemOfDay
hasEnableStandReminders
TB,N,V_enableStandReminders
hasProgressUpdateFrequency
Tq,N,V_progressUpdateFrequency
hasEnableGoalCompletions
TB,N,V_enableGoalCompletions
hasEnableAchievements
TB,N,V_enableAchievements
hasEnableWeeklySummary
TB,N,V_enableWeeklySummary
hasTimeZoneOffset
Tq,N,V_timeZoneOffset
hasNumberOfEvents
Tq,N,V_numberOfEvents
hasEventBusyTime
Tq,N,V_eventBusyTime
hasDaysSinceFirstCalorieGoal
Tq,N,V_daysSinceFirstCalorieGoal
hasUserCharacteristics
T@"HDAWDHealthKitUserCharacteristics",&,N,V_userCharacteristics
hasAchievementStatistics
T@"HDAWDHealthKitAchievementStatistics",&,N,V_achievementStatistics
hasWellnessComplicationOnWatchFace
TB,N,V_wellnessComplicationOnWatchFace
hasFirstCalendarItemOfDay
T@"HDAWDHealthKitConcurrentCalendarItem",&,N,V_firstCalendarItemOfDay
v32@?0@"HKActivitySummary"8@"NSArray"16^B24
B16@?0@"NSArray"8
shouldIncludePrivateProperties
TB,N,V_shouldIncludePrivateProperties
shouldIncludeStatistics
TB,N,V_shouldIncludeStatistics
orderByDateAscending
TB,N,V_orderByDateAscending
TQ,N,V_limit
databaseTransactionContext
T@"HDDatabaseTransactionContext",C,N,V_databaseTransactionContext
enumeratedSummaryCount
Tq,R,N,V_enumeratedSummaryCount
keyValuePairs
T@"NSMutableArray",&,N,V_keyValuePairs
HKSwimmingStrokeStyle _HKSwimmingStrokeStyleFromCMSwimStrokeType(CMSwimStrokeType)
HDSwimmingWorkoutEventCollector.m
Invalid swimming stroke style
consecutiveStandingHoursGoalsMet
consecutiveBriskMinuteGoalsMet
currentCalorieGoalConsecutiveCompleteDays
consecutiveCompleteDays
hasConsecutiveStandingHoursGoalsMet
Tq,N,V_consecutiveStandingHoursGoalsMet
hasConsecutiveBriskMinuteGoalsMet
Tq,N,V_consecutiveBriskMinuteGoalsMet
hasCurrentCalorieGoalConsecutiveCompleteDays
Tq,N,V_currentCalorieGoalConsecutiveCompleteDays
hasConsecutiveCompleteDays
Tq,N,V_consecutiveCompleteDays
T@"NSArray",R,C,N,V_contributors
registry_uuid
persistent_uuid
health_uuid
restored
ids_id
HDNanoPairingEntity.m
nanoRegistryUUID != nil
syncStoreEntity != nil
registryUUID != nil
missing source bundle identifier for registry UUID %@
nano_pairing
<%@:%p registry:%@ persistent:%@ health:%@ device:%@>
entity
T@"HDNanoPairingEntity",&,N,V_entity
nanoRegistryUUID
T@"NSUUID",C,N,V_nanoRegistryUUID
Tq,N,V_syncProvenance
persistentUUID
T@"NSUUID",C,N,V_persistentUUID
healthDatabaseUUID
T@"NSUUID",C,N,V_healthDatabaseUUID
T@"NSString",C,N,V_defaultSourceBundleIdentifier
T@"NSString",C,N,V_deviceIdentifier
restoreComplete
TB,N,GisRestoreComplete,V_restoreComplete
HDDemoDataActivitySampleGeneratorNextActiveCaloriesSampleTimeKey
HDDemoDataActivitySampleGeneratorNextAppleStandHourSampleTimeKey
HDDemoDataActivitySampleGeneratorNextRestingCaloriesSampleTimeKey
HDDemoDataActivitySampleGeneratorNextFallSampleTimeKey
HDDemoDataActivitySampleGeneratorNextFlightSampleTimeKey
HDDemoDataActivitySampleGeneratorNextStepsSampleTimeKey
HDDemoDataActivitySampleGeneratorNextExerciseMinuteSampleTimeKey
HDDemoDataActivitySampleGeneratorNextHeartRateRecoveryStartTimeKey
HDDemoDataActivitySampleGeneratorNextHeartRateRecoveryStopTimeKey
HDDemoDataActivitySampleGeneratorNextUVIndexSampleTimeKey
HDDemoDataActivitySampleGeneratorLastUVIndexPeakTimeKey
HDDemoDataActivitySampleGeneratorLastUVExposureKey
HDDemoDataActivitySampleGeneratorLastUVIndexPeakKey
HDDemoDataActivitySampleGeneratorLastActivityCache
HDDemoDataActivitySampleGeneratorCurrentWorkoutConfiguration
HDDemoDataActivitySampleGeneratorWorkoutState
v32@?0@"NSNumber"8Q16^B24
T@"HDDataOriginProvenance",&,N,V_provenance
nextActiveCaloriesSampleTime
Td,N,V_nextActiveCaloriesSampleTime
nextAppleStandHourSampleTime
Td,N,V_nextAppleStandHourSampleTime
nextRestingCaloriesSampleTime
Td,N,V_nextRestingCaloriesSampleTime
nextFallSampleTime
Td,N,V_nextFallSampleTime
nextFlightsClimbedSampleTime
Td,N,V_nextFlightsClimbedSampleTime
nextStepsSampleTime
Td,N,V_nextStepsSampleTime
nextExerciseMinuteTime
Td,N,V_nextExerciseMinuteTime
nextHeartRateRecoveryStartTime
Td,N,V_nextHeartRateRecoveryStartTime
nextHeartRateRecoveryStopTime
Td,N,V_nextHeartRateRecoveryStopTime
nextUVIndexSampleTime
Td,N,V_nextUVIndexSampleTime
lastUVIndexPeakTime
Td,N,V_lastUVIndexPeakTime
lastUVExposure
Td,N,V_lastUVExposure
lastUVIndexPeak
Td,N,V_lastUVIndexPeak
lastActivityCache
T@"HKActivityCache",&,N,V_lastActivityCache
currentWorkoutConfiguration
T@"HDDemoDataGeneratorWorkoutConfiguration",&,N,V_currentWorkoutConfiguration
workoutState
T@"_HDDemoDataActivityWorkoutState",&,N,V_workoutState
GoldenGateLocationSeriesTrimmed
json
HDDemoDataActivitySampleGenerator.m
provenance != nil
v32@?0@"NSArray"8Q16^B24
objectUUIDs
totalWalkingDistance
totalCyclingDistance
totalSwimmingDistance
totalSwimmingStrokes
workoutEvents
associatedObjectUUIDs
T@"NSMutableData",&,N,V_associatedObjectUUIDs
T@"NSMutableArray",&,N,V_workoutEvents
T@"NSDate",&,N,V_startDate
totalEnergyBurnedInKilocalories
Td,N,V_totalEnergyBurnedInKilocalories
totalDistanceWalkingInMeters
Td,N,V_totalDistanceWalkingInMeters
totalDistanceCyclingInMeters
Td,N,V_totalDistanceCyclingInMeters
Td,N,V_totalSwimmingStrokes
creationDate
Td,R,N,V_creationDate
skipInsertionFilter
TB,R,N,V_skipInsertionFilter
resolveAssociations
TB,R,N,V_resolveAssociations
_NextStepLengthSampleTimeKey
_NextWalkingSpeedSampleTimeKey
_NextAsymmetryPercentageSampleTimeKey
_NextDoubleSupportPercentageSampleTimeKey
_NextSixMinuteWalkTestDistanceSampleTimeKey
_NextStairAscentSpeedSampleTimeKey
_NextStairDescentSpeedSampleTimeKey
nextStepLengthSampleTime
Td,N,V_nextStepLengthSampleTime
nextWalkingSpeedSampleTime
Td,N,V_nextWalkingSpeedSampleTime
nextAsymmetryPercentageSampleTime
Td,N,V_nextAsymmetryPercentageSampleTime
nextDoubleSupportPercentageSampleTime
Td,N,V_nextDoubleSupportPercentageSampleTime
nextSixMinuteWalkTestDistanceSampleTime
Td,N,V_nextSixMinuteWalkTestDistanceSampleTime
nextStairAscentSpeedSampleTime
Td,N,V_nextStairAscentSpeedSampleTime
nextStairDescentSpeedSampleTime
Td,N,V_nextStairDescentSpeedSampleTime
HDHealthEntity+Sync.m
anchorProperty != nil
@"NSNumber"16@?0@"<HDSyncStore>"8
feature_identifier
completion_date
country_code
B24@?0@"HKOnboardingCompletion"8^@16
Cannot insert codable without UUID
The user has already completed onboarding for this feature, version, and country
onboarding_completions
Unexpectedly found missing values: UUID(%@) featureIdentifier(%@) completionDate(%@)
default-task
HDAsynchronousTaskTree.m
queue != nil
handler != nil
Cannot add task if the task tree is rejecting addTask calls
checkpointHandler != nil
!_queue_started
Asynchronous task failed without reporting an error.
Asynchronous task had a critical failure without reporting an error.
Asynchronous task failed due to timeout
Asynchronous task has already completed.
groupDescription
T@"NSString",R,C,N,V_groupDescription
allErrors
T@?,C,N,V_handler
timeout
Td,N,V_timeout
hasTimeout
TB,N,V_hasTimeout
checkpointHandler
T@?,C,N,V_checkpointHandler
IncludeCondenserInfo
total_energy_burned
total_basal_energy_burned
total_distance
activity_type
total_w_steps
total_flights_climbed
condenser_version
condenser_date
HDWorkoutEntity.m
+[HDWorkoutEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
INSERT INTO %@ (%@, %@, %@, %@, %@, %@, %@, %@, %@, %@) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
v56@?0d8d16q24@"NSDictionary"32@"NSUUID"40@"NSError"48
180D
energyExpendedJoules
RRIntervalSeconds
resetEnergyExpended
v32@?0@"HDHealthService"8@"NSData"16@"NSError"24
Unrecognized operation
preferredSensorLocation
Tq,N,V_preferredSensorLocation
HDCloudSyncPipeline.m
Health Sync
<[%@:%@] %@ (%@) %@>
    
syncIdentifier
pipelineIdentifier
primaryContainerIdentifier
cloudKitIdentifier
operationType
_status == HDCloudSyncOperationStatusPending
@16@?0@"HDCloudSyncPipelineStage"8
v16@?0@"HDAsynchronousTaskTree"8
Sync pipeline
Sync has been disabled for this account.
v24@?0@"HDCloudSyncPipelineStage"8@"NSError"16
CloudSync-%@-%@-%zd
Tq,R,N,V_status
T@"HDCloudSyncContext",R,C,N,V_context
T@"HDCloudSyncRepository",R,N,V_repository
accessibilityAssertion
T@"HDAssertion",R,N,V_accessibilityAssertion
operationGroup
T@"CKOperationGroup",&,N,V_operationGroup
operationConfiguration
T@"HDCloudSyncOperationConfiguration",R,N,V_operationConfiguration
continueWhenSyncDisabled
TB,N,V_continueWhenSyncDisabled
pipelineCompletionHandler
T@?,C,N,V_pipelineCompletionHandler
HDEntityEncoder.m
entityClass != nil
T@"HDSQLiteDatabase",R,N,V_database
encodingOptions
T@"NSDictionary",R,C,N,V_encodingOptions
authorizationFilter
T@?,R,C,N,V_authorizationFilter
Tq,R,N,V_purpose
superclassEncoder
T@"HDEntityEncoder",R,N,V_superclassEncoder
createAndTakeBlock
T@?,R,C,N,V_createAndTakeBlock
taken
Tq,R,N,V_state
hasPayload
T@"NSData",&,N,V_payload
metricAvailable
TB,R,N,V_metricAvailable
healthServiceManager
T@"HDHealthServiceManager",R,N
attached
_HKFilter+HealthDaemon.m
@"_HKFilter"16@?0@"_HKFilter"8
propertyForKeyPath
v24@?0@"CKAccountInfo"8@"NSError"16
key_id
object_id
string_value
numerical_value
date_value
value_type
data_value
metadata_values
Received invalid metadata value type %@ (%@)
<redacted>
SELECT %@, %@, %@, %@, %@, %@ FROM %@ WHERE %@ = ?
EXISTS (SELECT 1 FROM %@ INNER JOIN %@ ON %@=%@ WHERE ((%@=%@) AND %@ AND (%@)))
 OR 
NOT EXISTS
EXISTS
%@ (SELECT 1 FROM %@ INNER JOIN %@ ON %@=%@ WHERE ((%@=%@) AND %@))
(key %@)
exists
(key does not exist OR %@)
<metadata: %@ AND %@>
HDSQLitePredicate * _Nonnull HDPredicateForMetadataValues(NSSet * _Nonnull __strong)
HDMetadataValueEntity.m
Unsupported metadata value type!
= -1
=  0
=  1
=  2
HDSQLitePredicate * _Nonnull _HDMetadataQuantityComparisonPredicate(HDSQLiteComparisonType, HKQuantity * _Nonnull __strong)
Unsupported comparison type for HKQuantity metadata values!
%@(%@, %@, ?, ?) %@ OR %@(%@, %@, ?, ?) %@ OR %@(%@, %@, ?, ?) %@
%@(%@, %@, ?, ?) %@ OR %@(%@, %@, ?, ?) %@
%@(%@, %@, ?, ?) %@
failingKeyPath
failingAction
hasFailingKeyPath
T@"NSString",&,N,V_failingKeyPath
hasFailingAction
T@"NSString",&,N,V_failingAction
observerQueue
v32@?0@"NSArray"8B16B20@"NSError"24
dateOverride
timezoneOverride
T@"NSTimeZone",&,N
todayActivitySummary
T@"HKActivitySummary",R
yesterdayActivitySummary
hasLoadedActivitySummaries
persistent-ids
provenances
Missing data provenance source (%@), device (%@) id or contributor (%@)
@"NSNumber"24@?0@"HDDatabaseTransaction"8^@16
@24@?0@"HDDatabaseTransaction"8^@16
<%@:%p source=%@, device=%@, build=%@, productType=%@, sourceVersion=%@, tz=%@, noneDevice=%@, noneContributor=%@, primaryUserContributor=%@>
persistentIDsByProvenanceKey
T@"HDDatabaseValueCache",&,N,V_persistentIDsByProvenanceKey
originProvenanceByPersistentID
T@"HDDatabaseValueCache",&,N,V_originProvenanceByPersistentID
localSystemBuild
T@"NSString",C,N,V_localSystemBuild
localProductType
T@"NSString",C,N,V_localProductType
localSourceID
localDeviceID
deviceNoneID
noneContributorReference
T@"HDContributorReference",R,C,N
primaryUserContributorReference
<%@:%p %@ localBuild=%@, localProductType=%@>
dataProvenance
T@"HDDataOriginProvenance",R,C,N,V_dataProvenance
T@"NSString",R,C,N,V_localProductType
T@"NSString",R,C,N,V_localSystemBuild
_HDAppAssertion.m
v24@?0@"BSProcessHandle"8@"NSError"16
HealthKitData
-[_HDAppAssertion invalidateForDataType:anchor:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.25.2/HealthKit/HealthDaemon/AppSubscription/_HDAppAssertion.m
anchor != nil
T@"HDAppAssertionManager",W,N,V_assertionManager
pendingLaunchCompletions
T@"NSMutableDictionary",&,N,V_pendingLaunchCompletions
processDeathSource
T@"NSObject<OS_dispatch_source>",&,N,V_processDeathSource
processAssertions
T@"NSMutableSet",R,N,V_processAssertions
TB,N,V_invalidated
pendingDataTypeCodesToAnchors
T@"NSMutableDictionary",R,N,V_pendingDataTypeCodesToAnchors
lastLaunchAttempt
Td,R,N,V_lastLaunchAttempt
nextLaunchAttempt
launchErrorCount
Tq,R,N,V_launchErrorCount
v16@?0@"HKObject"8
insertion_era
hfd_key
data_series
Unable to get %@ for %@ with persistentID %lld
Could not find series with ID %@
SELECT frozen FROM protected.data_series WHERE data_id = ?
INSERT INTO protected.data_series (data_id, frozen, count, insertion_era, hfd_key) VALUES (?, ?, ?, ?, (COALESCE((SELECT MAX(hfd_key) + 1 FROM protected.data_series), 1)))
hdqd_qt
hdqd_md
@"NSData"8@?0
<%@: %@, quantity: %@>
quantity
T@"HKQuantity",R,C,N,V_quantity
saveCompletion
T@?,C,N,V_saveCompletion
aggregatedSamples
T@"NSArray",R,C,N,V_aggregatedSamples
remainingSensorData
T@"NSMutableArray",R,C,N,V_remainingSensorData
void _assertMetadataIsSame(NSArray<HDQuantityDatum *> * _Nonnull __strong)
HDQuantityDatum.m
Cannot merge an array of datums with different metadata
onWrist
hasOnWrist
TB,N,V_onWrist
Workout route is already %@.
completed
discarded
Cannot discard a finished or discarded series
Unexpected error encoutered while discarding series
No data was added to the workout route.
Workout route already finished.
Workout route was discarded.
T@"HKSeriesBuilderConfiguration",C,N,V_configuration
queue_state
Tq,R,N,V_queue_state
seriesSample
T@"HKSeriesSample",&,N,V_seriesSample
persistentEntity
T@"HDSeriesBuilderEntity",&,N,V_persistentEntity
HDSourceManager.m
entities
client-sources
local-entities
local-entities-by-id
Use the designated initializer
HKSourceLastObservedDeviceName
@"HDSourceEntity"24@?0@"HDDatabaseTransaction"8^@16
B32@?0@"HDSourceEntity"8@"HDDatabaseTransaction"16^@24
source.name
Missing application-identifier entitlement
@"HKSource"24@?0@"HDDatabaseTransaction"8^@16
sourceUUID != nil
B24@?0@"NSString"8^@16
@"NSUUID"16@?0@"HDCodableSource"8
No sources with bundle identifier "%@"
No sources with UUIDs %@
SELECT DISTINCT %@ FROM %@ WHERE %@ AND NOT EXISTS (SELECT 1 FROM %@ s WHERE s.%@=%@ AND NOT s.%@ AND s.%@=?)
Reset All Containers
HDAssertion.m
assertionIdentifier.length > 0
ownerIdentifier.length > 0
Assertion %@ must be invalidated prior to deallocation
Unable to set assertion budget: %@
Unable to set budget consumption interval start: %@
Unable to end budget consumption interval: %@
<%@ %@ %@ %@%@: %@>
 (%.3fs/%.3fs)
Assertion state '%@', but expected '%@'
Cannot give assertion a non-postive budget of %f
Budget interval already started with time (%f) cannot set to (%f)
Budget interval start (%f) must be positive
Cannot end budget time interval (%f) before starting it
Cannot end budget time interval (%f) before interval start (%f)
rawState
UUID
T@"NSUUID",R,C,N,V_UUID
assertionIdentifier
T@"NSString",R,C,N,V_assertionIdentifier
T@"NSString",R,C,N,V_ownerIdentifier
budget
Td,N,V_budget
remainingBudget
Td,R
epoch
includedStoreIdentifiers
anchorMap
frozenAnchorMap
unfrozenChangeRecordNames
hasSlot
Ti,N,V_slot
hasActive
TB,N,V_active
hasEpoch
Tq,N,V_epoch
T@"NSMutableArray",&,N,V_includedStoreIdentifiers
hasProtocolVersion
Tq,N,V_protocolVersion
hasAnchorMap
T@"HDCodableSyncAnchorRangeMap",&,N,V_anchorMap
hasFrozenAnchorMap
T@"HDCodableSyncAnchorRangeMap",&,N,V_frozenAnchorMap
hasChangeIndex
Tq,N,V_changeIndex
hasChildRecordCount
Tq,N,V_childRecordCount
T@"NSMutableArray",&,N,V_unfrozenChangeRecordNames
{public}%@: domain name must be non-empty
{public}%@: invalid HKKeyValueCategory: %@
Unauthorized access to key-value domain %@
HDXPCEventIsolationQueue
v28@?0I8Q12@"NSObject<OS_xpc_object>"20
Disabling cloud sync locally.
B16@?0@"HDCloudSyncRecord"8
@16@?0@"HDCloudSyncRecord"8
typeCodings
hasTypeCodings
T@"HDCodableMedicalCodingList",&,N,V_typeCodings
T@"NSString",&,N,V_value
Unable to find quantity series '%@' when inserting journaled series values.
series
values
T@"HKQuantitySample",R,C,N,V_series
T@"NSArray",R,C,N,V_values
bedtimeAlarmNightCount
bedtimeChangesCount
thirdPartySleepTrackerNightCount
thirdPartyBundleIdentifier
bedtimeCorrectionMinutesStatistics
bedtimeChangesMinutesStatistics
thirdPartyDeviceModel
thirdPartyDeviceManufacturer
hasBedtimeAlarmNightCount
Tq,N,V_bedtimeAlarmNightCount
hasBedtimeChangesCount
Tq,N,V_bedtimeChangesCount
hasThirdPartySleepTrackerNightCount
Tq,N,V_thirdPartySleepTrackerNightCount
hasThirdPartyBundleIdentifier
T@"NSString",&,N,V_thirdPartyBundleIdentifier
hasBedtimeCorrectionMinutesStatistics
T@"HDSleepAlarmAWDSleepAlarmStatistics",&,N,V_bedtimeCorrectionMinutesStatistics
hasBedtimeChangesMinutesStatistics
T@"HDSleepAlarmAWDSleepAlarmStatistics",&,N,V_bedtimeChangesMinutesStatistics
hasThirdPartyDeviceModel
T@"NSString",&,N,V_thirdPartyDeviceModel
hasThirdPartyDeviceManufacturer
T@"NSString",&,N,V_thirdPartyDeviceManufacturer
v16@?0B8B12
v32@?0@"NSNumber"8@?<v@?>16^B24
HDAppExtensionAssertion.m
pendingAssertionCompletions
T@"NSMutableDictionary",&,N,V_pendingAssertionCompletions
T@"NSMutableDictionary",&,N,V_pendingDataTypeCodesToAnchors
timeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimer
graceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_graceTimer
lock
T{os_unfair_lock_s=I},N,V_lock
pendingAssertion
TB,N,V_pendingAssertion
TB,R,N,V_invalidated
lastAssertionAttempt
Td,N,V_lastAssertionAttempt
connectionErrorCount
Tq,N,V_connectionErrorCount
T@"<HDAppExtensionAssertionDelegate>",W,N,V_delegate
shouldAssert
nextAssertionAttempt
unitTest_errorCountDidIncrement
T@?,C,N,V_unitTest_errorCountDidIncrement
unitTest_extensionWillTimeout
T@?,C,N,V_unitTest_extensionWillTimeout
unitTest_timersWithShortTimeout
TB,N,V_unitTest_timersWithShortTimeout
Trying to open journal chapters without providing any to open
%05ld.log
Error enumerating journal chapter /'%@/'
q24@?0@"<HDJournalChapter>"8@"<HDJournalChapter>"16
remainingJournalChapters
T@"NSMutableArray",&,N,V_remainingJournalChapters
openJournalChapters
T@"NSMutableArray",&,N,V_openJournalChapters
totalOpenJournalChapterCount
TQ,R,N,G_totalOpenJournalChapterCount
maxAllowedOpenJournalChapterCount
T@"<HDJournalChapterEnumeratorTestsDelegate>",W,N,V_unitTestDelegate
hasJournalChapters
totalJournalChapterCount
currentJournalChapterIndex
moreJournalChapters
TB,R,N,GhasMoreJournalChapters
anchors
T@"NSMutableArray",&,N,V_anchors
UnknownError
Resend
Reactivate
ChangesRequested
LastChanceChangesRequested
Obliterate
flagFieldFlipped
TB,N,V_flagFieldFlipped
correspondingFlagBit
TC,R,N,V_correspondingFlagBit
fieldLength
TC,R,N,V_fieldLength
factor
TC,R,N,V_factor
isSet
TB,N,V_isSet
TC,N,V_value
TS,N,V_value
Ts,N,V_value
TI,N,V_value
Td,N,V_value
isSigned
TB,N,V_isSigned
Not Set
Male
Female
NSString *NSStringFromHKBiologicalSex(HKBiologicalSex)
HDDemoDataDefines.m
Invalid biological sex
Breakfast
Lunch
Snack
Dinner
Beverage
NSString *NSStringFromHDDemoDataFoodType(HDDemoDataFoodType)
Invalid demo data food type
1 Day
1 Week
1 Month
2 Months
3 Months
6 Months
1 Year
Year to Date
NSString *NSStringFromHDDemoDataGenerationPeriod(HDDemoDataGenerationPeriod)
Invalid demo data generation period
BOOL HDDemoDataIsValidGenerationPeriod(HDDemoDataGenerationPeriod)
Invalid demo data initial generation period
Type 1 Diabetes
Rehab
NSString *DisplayNameForHDDemoDataProfileType(HDDemoDataProfileType)
Invalid demo data profile type
Normal
DiabetesType1
NSString *DirectoryPathForHDDemoDataProfileType(HDDemoDataProfileType)
Typical
Inclusive
NSString *NSStringFromHDDemoDataSampleTrackingType(HDDemoDataSampleTrackingType)
Invalid demo data sample tracking type
HDDemoDataSettingsDidChangeNotification
HealthCloudSyncForDemoDataKey
HealthDemoDataEnableNotificationsKey
HealthDemoDataEnsureRecentWorkoutHasRouteKey
HealthDemoDataFirstRunDateKey
HealthDemoDataFirstSampleDateKey
HealthDemoDataGenderKey
HealthDemoDataGenerateHealthDocumentsKey
HealthDemoDataGenerateMedicalIDKey
HealthDemoDataGenerateRecentLiquidsKey
HealthDemoDataHighFidelityDataKey
HealthDemoInitialDataGenerationPeriodKey
HealthDemoDataLastRunDateKey
HealthDemoDataLastSampleDateKey
HealthDemoDataLoudHeadphoneListeningKey
HealthDemoDataNutritionTrackingTypeKey
HealthDemoDataProfileTypeKey
HealthDemoDataProgressKey
HealthDemoDataResetDatabaseKey
HealthDemoDataResultsTrackingTypeKey
HealthDemoDataDataTrackingTypeKey
HDConceptIndexEntry.m
ontologyVersion
<%@:%p sampleUUID=%@, conceptIdentifier=%lld, conceptVersion=%lld, keyPath='%@', compoundIndex=%llu, type=%lu, ontologyVersion=%@>
T@"NSUUID",R,C,N,V_sampleUUID
conceptIdentifier
Tq,R,N,V_conceptIdentifier
conceptVersion
Tq,R,N,V_conceptVersion
T@"NSString",R,C,N,V_keyPath
compoundIndex
TQ,R,N,V_compoundIndex
TQ,R,N,V_type
T@"NSNumber",R,C,N,V_ontologyVersion
Fetch sync status
HealthKitQuery
HealthKitDiscovery
HealthKitSession
HealthKitBGDelivery
HealthKitCloudSync
HealthKitWorkoutSession
v32@?0@"HKObjectType"8@"NSNumber"16^B24
hourSinceMidnight
exerciseMinutes
hasHourSinceMidnight
Tq,N,V_hourSinceMidnight
hasExerciseMinutes
Tq,N,V_exerciseMinutes
HDCloudSyncPushStoreOperation.m
No target set when beginning push.
Push Sequences
Setup & Push
T@"HDCloudSyncTarget",C
generationPeriodInDays
Tq,N,V_generationPeriodInDays
highFidelityGeneration
TB,N,V_highFidelityGeneration
shouldPresentNotifications
TB,N,V_shouldPresentNotifications
sampleTrackingType
Tq,N,V_sampleTrackingType
shouldGenerateHealthDocuments
TB,N,V_shouldGenerateHealthDocuments
shouldGenerateMedicalID
TB,N,V_shouldGenerateMedicalID
shouldEnsureRecentWorkoutHasRoute
TB,N,V_shouldEnsureRecentWorkoutHasRoute
shouldGenerateRecentLiquidsIntake
TB,N,V_shouldGenerateRecentLiquidsIntake
shouldGenerateLoudHeadphoneData
TB,N,V_shouldGenerateLoudHeadphoneData
REFERENCES %@ (%@) ON DELETE %@
property
T@"NSString",R,C,N,V_property
Tq,R,N,V_deletionAction
@"HDCodableCoverageClassification"16@?0@"HKCoverageClassification"8
B16@?0@"<HDCoreMotionDatum>"8
d24@?0@"<HDCoreMotionDatum>"8@"<HDCoreMotionDatum>"16
@"NSDateInterval"24@?0@"<HDCoreMotionDatum>"8@"<HDCoreMotionDatum>"16
Diagnostic Description:
state: %@
errorCount: %ld
dataSource: %@
quantityTypes: %@
lastCMDatumByType: %@
B32@?0@"HKQuantityType"8@"<HDCoreMotionDatum>"16^B24
q24@?0@"<HDCoreMotionDatum>"8@"<HDCoreMotionDatum>"16
Unable to migrate %@: unknown domain for migration.
DATA_AGGREGATION-%@
STEP_INGESTION
VULCAN_INGESTION
DISTANCE_INGESTION
FLIGHTS_INGESTION
nanoSyncStore
T@"HDNanoSyncStore",R,N
pullRequest
TB,R,N,GisPullRequest
requestedByRemote
TB,R,N,GisRequestedByRemote
lastChance
TB,R,N,GisLastChance
messageCount
TQ,R,N,V_messageCount
INSERT%@ INTO %@ (%@) VALUES (
 OR REPLACE
@16@?0@8
%@ = ?
UPDATE %@ SET %@%@%@
 WHERE 
UPDATE %@ SET %@ WHERE %@ = ?
+[%@ databaseTable] not implemented
HDSQLiteEntity.mm
foreignKey != nil
v24@?0^{?=@@C}8^B16
CREATE TABLE IF NOT EXISTS %@ (
v24@?0@"_HDSQLiteEntityColumn"8^B16
, UNIQUE(%@)
, CHECK(%@)
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
SELECT 
 FROM 
.ROWID = ?;
v24@?0@"NSArray"8^{HDSQLiteRow=^^?^{sqlite3_stmt}ii{unordered_map<const char *, int, HDSQLiteRow::_Hash, HDSQLiteRow::_Comparison, std::__1::allocator<std::__1::pair<const char *const, int> > >={__hash_table<std::__1::__hash_value_type<const char *, int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true> >=f}}}}16
DELETE FROM %@ WHERE %@ = ?;
<%@, id:%lld>
persistentID
Tq,R,N,V_persistentID
void HDSQLiteStatementBinder::assertAllPropertiesBound() const
HDSQLiteStatementBinder_Internal.h
Property '%s' was never bound.
FailedAssetExtractionCount-
Change record %@ does not match this sequence record (%@)
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
Failed to fetch requested change record %@
is nil
has data size (%lu)
cloud sync archive data %@
syncarchive-%@
T@"HDCloudSyncTarget",R,N,V_target
T@"HDCloudSyncSequenceRecord",R,N,V_sequenceRecord
changeRecord
T@"HDCloudSyncChangeRecord",R,N,V_changeRecord
Received nil for non-nil field 'allergyCodings'
v24@?0@"HKQuantity"8@"NSError"16
@"HDAssertion"8@?0
displayName
displayImageData
TEST_PROFILE
HDProfile.m
_syncEngine != nil
B16@?0@"<HDProfileExtension>"8
testModeEnabled
TB,N,V_testModeEnabled
T@"HDRestorableAlarmScheduler",R,N,V_alarmScheduler
appSubscriptionManager
T@"HDAppSubscriptionManager",R,N
awdSubmissionManager
T@"HDAWDSubmissionManager",R,N,V_awdSubmissionManager
databasePruningManager
T@"HDDatabasePruningManager",R,N,V_databasePruningManager
extensionManager
T@"HDBackgroundObservationServerExtensionManager",R,N
medicalIDDataManager
T@"HDMedicalIDDataManager",R,N,V_medicalIDDataManager
migrationManager
T@"HDMigrationManager",R,N,V_migrationManager
serviceConnectionManager
T@"HDServiceConnectionManager",R,N
T@"<HDHealthDaemon>",R,W,N
authorizationManager
T@"HDAuthorizationManager",R,N
cloudSyncManager
T@"HDCloudSyncManager",R,N,V_cloudSyncManager
contributorManager
T@"HDContributorManager",R,N,V_contributorManager
currentActivitySummaryHelper
T@"HDCurrentActivitySummaryHelper",R,N
dataManager
T@"HDDataManager",R,N,V_dataManager
T@"HDDataCollectionManager",R,N
dataProvenanceManager
T@"HDDataProvenanceManager",R,N,V_dataProvenanceManager
deviceManager
T@"HDDeviceManager",R,N,V_deviceManager
fitnessMachineManager
T@"HDFitnessMachineManager",R,N
metadataManager
T@"HDMetadataManager",R,N,V_metadataManager
nanoSyncManager
T@"HDNanoSyncManager",R,N
notificationManager
T@"HDNotificationManager",R,N
onboardingCompletionManager
T@"HDOnboardingCompletionManager",R,N,V_onboardingCompletionManager
sessionAssertionManager
T@"HDAssertionManager",R,N,V_sessionAssertionManager
sharingEntryManager
T@"HDSharingEntryManager",R,N,V_sharingEntryManager
sourceManager
T@"HDSourceManager",R,N,V_sourceManager
sourceOrderManager
T@"HDSourceOrderManager",R,N,V_sourceOrderManager
syncEngine
T@"<HDSyncEngine>",R,N
T@"HDUserCharacteristicsManager",R,N,V_userCharacteristicsManager
workoutCondenser
T@"HDWorkoutCondenser",R,N,V_workoutCondenser
workoutManager
T@"HDWorkoutManager",R,N
ontologyLifecycleManager
T@"HDOntologyLifecycleManager",R,N
cloudSharingInviteRequestManager
T@"HDCloudSharingInviteRequestManager",R,N,V_cloudSharingInviteRequestManager
tinkerPrivacyAlertCoordinator
T@"HDTinkerPrivacyAlertCoordinator",R,N
T@"HDDatabase",R,N
profileIdentifier
T@"HKProfileIdentifier",R,C,N,V_profileIdentifier
directoryPath
directoryURL
T@"NSString",R,C,N,V_medicalIDDirectoryPath
unitPreferencesManager
T@"HDUnitPreferencesManager",R,N,V_unitPreferencesManager
CREATE TABLE workout_builders (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, workout_configuration BLOB NOT NULL, metadata BLOB, source_id INTEGER NOT NULL REFERENCES sources(rowid) ON DELETE CASCADE, source_version TEXT, device_id INTEGER REFERENCES source_devices(rowid) ON DELETE CASCADE, session BLOB, start_date REAL, end_date REAL, data_interval BLOB, goal_type INTEGER NOT NULL, goal BLOB, types_while_paused BLOB)
CREATE TABLE series_builders (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, state INTEGER NOT NULL, metadata BLOB, series_type INTEGER NOT NULL)
CREATE TABLE workout_builder_associated_objects (workout_builder_id INTEGER NOT NULL REFERENCES workout_builders(rowid) ON DELETE CASCADE, object_uuid BLOB NOT NULL, UNIQUE(workout_builder_id, object_uuid))
CREATE TABLE workout_builder_associated_series (workout_builder_id INTEGER NOT NULL REFERENCES workout_builders(rowid) ON DELETE CASCADE, series_uuid BLOB NOT NULL, series_type INTEGER NOT NULL, UNIQUE(workout_builder_id, series_uuid, series_type))
CREATE TABLE workout_builder_events (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, owner_id INTEGER NOT NULL REFERENCES workout_builders(ROWID) ON DELETE CASCADE, date REAL NOT NULL, type INTEGER NOT NULL, duration REAL NOT NULL, metadata BLOB, session_uuid BLOB, error BLOB)
CREATE TABLE workout_builder_statistics (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, owner_id INTEGER NOT NULL REFERENCES workout_builders(ROWID) ON DELETE CASCADE, quantity_type INTEGER NOT NULL, anchor INTEGER, statistics BLOB NOT NULL, calculator BLOB, UNIQUE(owner_id, quantity_type))
CREATE TABLE workout_builder_data_sources (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, workout_builder_id INTEGER NOT NULL REFERENCES workout_builders(ROWID) ON DELETE CASCADE, recovery_identifier TEXT NOT NULL, archived_state BLOB)
CREATE TABLE workout_sessions (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, workout_configuration BLOB NOT NULL, state INTEGER NOT NULL, source_id INTEGER REFERENCES sources(ROWID) ON DELETE CASCADE, builder_id INTEGER REFERENCES workout_builders(ROWID) ON DELETE SET NULL, creation_date REAL NOT NULL, start_date REAL, end_date REAL)
CREATE TABLE workout_session_events (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, owner_id INTEGER NOT NULL REFERENCES workout_sessions(ROWID) ON DELETE CASCADE, date REAL NOT NULL, type INTEGER NOT NULL, duration REAL NOT NULL, metadata BLOB, session_uuid BLOB, error BLOB)
CREATE TABLE IF NOT EXISTS workout_session_controllers (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, workout_session_id INTEGER NOT NULL REFERENCES workout_sessions(ROWID) ON DELETE CASCADE, recovery_identifier TEXT NOT NULL, archived_state BLOB)
ALTER TABLE workout_sessions ADD COLUMN client_bundle_id TEXT;
ALTER TABLE authorization RENAME TO authorization_old
CREATE TABLE IF NOT EXISTS authorization (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, source_id INTEGER NOT NULL REFERENCES sources (ROWID) ON DELETE CASCADE, object_type INTEGER NOT NULL, status INTEGER NOT NULL, request INTEGER NOT NULL, mode INTEGER NOT NULL, date_modified REAL NOT NULL, modification_epoch INTEGER NOT NULL, provenance INTEGER NOT NULL, object_anchor INTEGER NOT NULL DEFAULT 0, UNIQUE(source_id, object_type))
INSERT INTO authorization (rowid, source_id, object_type, status, request, date_modified, modification_epoch, provenance, object_anchor, mode) SELECT rowid, source_id, object_type, status, request, date_modified, modification_epoch, provenance, object_anchor, 0 FROM authorization_old
DROP TABLE authorization_old
ALTER TABLE workout_sessions ADD COLUMN client_application_id TEXT;
CREATE TABLE IF NOT EXISTS authorization (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, source_id INTEGER NOT NULL REFERENCES sources (ROWID) ON DELETE CASCADE, object_type INTEGER NOT NULL, status INTEGER NOT NULL, request INTEGER NOT NULL, mode INTEGER NOT NULL, date_modified REAL NOT NULL, modification_epoch INTEGER NOT NULL, provenance INTEGER NOT NULL, deleted_object_anchor INTEGER NOT NULL DEFAULT 0, object_limit_anchor INTEGER NOT NULL DEFAULT 0, object_limit_modified REAL, UNIQUE(source_id, object_type))
INSERT INTO authorization (rowid, source_id, object_type, status, request, date_modified, modification_epoch, provenance, mode, deleted_object_anchor) SELECT rowid, source_id, object_type, status, request, date_modified, modification_epoch, provenance, mode, object_anchor FROM authorization_old
ALTER TABLE cloud_sync_stores RENAME TO cloud_sync_stores_old
CREATE TABLE cloud_sync_stores (sync_store INTEGER PRIMARY KEY REFERENCES sync_stores (ROWID) ON DELETE CASCADE, server_change_token BLOB, baseline_epoch INTEGER NOT NULL, rebase_deadline REAL, last_sync REAL, empty_zones BLOB, last_check REAL, owner_id TEXT NOT NULL, container_id TEXT NOT NULL, has_gap INTEGER NOT NULL, sync_protocol_version INTEGER NOT NULL)
INSERT INTO cloud_sync_stores SELECT sync_store, server_change_token, baseline_epoch, rebase_deadline, last_sync, empty_zones, last_check, owner_id, container_id, has_gap, 6 FROM cloud_sync_stores_old;
DROP TABLE cloud_sync_stores_old
DROP TABLE workout_builder_statistics;
CREATE TABLE workout_builder_statistics (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, owner_id INTEGER NOT NULL REFERENCES workout_builders(ROWID) ON DELETE CASCADE, quantity_type INTEGER NOT NULL, anchor INTEGER, statistics BLOB, calculator BLOB, UNIQUE(owner_id, quantity_type));
ALTER TABLE workout_sessions ADD COLUMN requested_target_state INTEGER NOT NULL DEFAULT 1;
ALTER TABLE workout_sessions ADD COLUMN has_failed INTEGER NOT NULL DEFAULT 0;
ALTER TABLE protected.workout_events RENAME TO workout_events_old
CREATE TABLE protected.workout_events (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, owner_id INTEGER NOT NULL REFERENCES workouts(data_id) ON DELETE CASCADE, date REAL NOT NULL, type INTEGER NOT NULL, duration REAL NOT NULL, metadata BLOB, session_uuid BLOB, error BLOB)
INSERT INTO protected.workout_events (rowid, owner_id, date, type, duration, metadata) SELECT rowid, workout_id, date, type, duration, metadata FROM protected.workout_events_old WHERE type IS NOT NULL AND EXISTS (SELECT * FROM protected.workouts WHERE data_id = workout_id)
DROP TABLE protected.workout_events_old
CREATE TABLE IF NOT EXISTS protected.quantity_sample_series (data_id INTEGER PRIMARY KEY REFERENCES samples (data_id) ON DELETE CASCADE, count INTEGER NOT NULL DEFAULT 0, insertion_era INTEGER, hfd_key INTEGER NOT NULL, min REAL, max REAL, most_recent REAL, most_recent_date REAL)
ALTER TABLE protected.workouts ADD condenser_version INTEGER
DROP TABLE protected.fitness_friend_achievements
CREATE TABLE protected.fitness_friend_achievements (data_id INTEGER PRIMARY KEY, friend_uuid BLOB, template_unique_name TEXT, completed_date REAL, value)
CREATE TABLE protected.original_fhir_resources (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT NOT NULL, account_id INTEGER NOT NULL REFERENCES clinical_accounts (ROWID) ON DELETE CASCADE, id TEXT NOT NULL, sync_provenance INTEGER NOT NULL, raw_content BLOB NOT NULL, received_date REAL NOT NULL, received_date_timezone TEXT NOT NULL, fhir_version TEXT NOT NULL, source_url TEXT, extraction_hints INTEGER, origin_major_version INTEGER NOT NULL, origin_minor_version INTEGER NOT NULL, origin_patch_version INTEGER NOT NULL, origin_build TEXT NOT NULL, UNIQUE(type, account_id, id))
CREATE TABLE IF NOT EXISTS protected.original_fhir_resources_last_seen (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, resource_id INTEGER NOT NULL REFERENCES original_fhir_resources(ROWID) ON DELETE CASCADE, last_seen_date REAL NOT NULL)
INSERT INTO protected.original_fhir_resources (rowid, type, account_id, id, sync_provenance, raw_content, received_date, received_date_timezone, fhir_version, source_url, extraction_hints, origin_major_version, origin_minor_version, origin_patch_version, origin_build) SELECT rowid, type, account_id, id, sync_provenance, raw_content, received_date, received_date_timezone, fhir_version, source_url, extraction_hints, 11, 3, 0, '15E216' FROM fhir_resources
INSERT INTO protected.original_fhir_resources_last_seen (rowid, resource_id, last_seen_date) SELECT rowid, resource_id, last_seen_date FROM fhir_resources_last_seen
DROP TABLE protected.fhir_resources
DROP TABLE protected.fhir_resources_last_seen
ALTER TABLE protected.workouts ADD condenser_date REAL
protected.data_series
ALTER TABLE protected.data_series ADD COLUMN count INTEGER NOT NULL DEFAULT 0
ALTER TABLE protected.data_series RENAME TO data_series_old
CREATE TABLE protected.data_series (data_id INTEGER PRIMARY KEY REFERENCES samples(data_id) ON DELETE CASCADE, frozen INTEGER NOT NULL DEFAULT 0, count INTEGER NOT NULL DEFAULT 0, insertion_era INTEGER NOT NULL DEFAULT 0, hfd_key INTEGER NOT NULL)
INSERT INTO protected.data_series SELECT data_id, frozen, count, insertion_era, data_id AS hfd_key FROM protected.data_series_old
DROP TABLE protected.data_series_old
CREATE TABLE IF NOT EXISTS protected.clinical_record_samples (data_id INTEGER PRIMARY KEY, display_name TEXT NOT NULL, fhir_resource_resource_type TEXT, fhir_resource_identifier TEXT, fhir_resource_data BLOB, fhir_resource_source_url TEXT, fhir_resource_last_updated_date REAL)
ALTER TABLE protected.quantity_sample_series RENAME TO quantity_sample_series_old
CREATE TABLE protected.quantity_sample_series (data_id INTEGER PRIMARY KEY REFERENCES samples (data_id) ON DELETE CASCADE, count INTEGER NOT NULL DEFAULT 0, insertion_era INTEGER, hfd_key INTEGER UNIQUE NOT NULL, min REAL, max REAL, most_recent REAL, most_recent_date REAL)
INSERT INTO protected.quantity_sample_series SELECT data_id, count, insertion_era, hfd_key, min, max, most_recent, most_recent_date FROM quantity_sample_series_old
DROP TABLE IF EXISTS protected.achievements
CREATE TEMPORARY TABLE public_clinical_sources (account_id TEXT, gateway_id TEXT, md5_hex TEXT, stable_bundle_id TEXT, name TEXT, source_options INT, local_device INT, product_type TEXT, mod_date REAL, sync_anchor INT)
INSERT INTO public_clinical_sources (account_id, name, source_options, local_device, product_type, mod_date)                                             SELECT REPLACE(REPLACE(bundle_id, 'com.apple.private.health.clinical.', ''), '-', ''), name, source_options, local_device, product_type, mod_date                                             FROM sources WHERE bundle_id LIKE 'com.apple.private.health.clinical.%' AND provenance = 0 AND deleted = 0
SELECT account_id FROM public_clinical_sources
SELECT external_id FROM protected.clinical_accounts             LEFT JOIN protected.clinical_gateways ON clinical_accounts.gateway_id = clinical_gateways.ROWID             WHERE HEX(protected.clinical_accounts.identifier) = ?
UPDATE public_clinical_sources SET gateway_id = ? WHERE account_id = ?
UPDATE public_clinical_sources SET md5_hex = (SELECT HEX(hk_MD5(gateway_id)))
UPDATE public_clinical_sources SET stable_bundle_id = (SELECT 'com.apple.public.health.clinical.' || SUBSTR(md5_hex, 1, 8) || '-'  || SUBSTR(md5_hex, 9, 4) || '-'  || SUBSTR(md5_hex, 13, 4) || '-'  || SUBSTR(md5_hex, 17, 4) || '-'  || SUBSTR(md5_hex, 21, 12))
INSERT INTO sources (uuid, bundle_id, name, source_options, local_device, product_type, mod_date, provenance, sync_anchor, deleted)                                             SELECT RANDOMBLOB(16), stable_bundle_id, name, source_options, local_device, product_type, mod_date, 0, COALESCE((SELECT MAX(sync_anchor) + 1 FROM sources), 1) + public_clinical_sources.ROWID, 0                                             FROM public_clinical_sources
DROP TABLE public_clinical_sources
protected.clinical_record_samples
CREATE TABLE protected.data_series (data_id INTEGER PRIMARY KEY REFERENCES samples(data_id) ON DELETE CASCADE, frozen INTEGER NOT NULL DEFAULT 0, count INTEGER NOT NULL DEFAULT 0, insertion_era INTEGER NOT NULL DEFAULT 0, hfd_key INTEGER UNIQUE NOT NULL)
INSERT INTO protected.data_series SELECT data_id, frozen, count, insertion_era, hfd_key FROM data_series_old
DROP TABLE data_series_old
SELECT COUNT(*) FROM protected.clinical_accounts
INSERT OR REPLACE INTO key_value (domain, key, value, mod_date, category, provenance) VALUES (?, ?, ?, ?, ?, ?);
com.apple.health.HealthRecordsPlugin
HDClinicalAccountEntityAccountCountKey
owner_id
session_uuid
workout_events
B16@?0@"HDCloudSyncTarget"8
allergy_codings
onset_date
reactions
criticality_coding
last_occurence_date
recorded_date
allergy_record_samples
HDAllergyRecordEntity.m
+[HDAllergyRecordEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
timeSinceSequenceStart
Td,R,N,V_timeSinceSequenceStart
precededByGap
TB,R,N,V_precededByGap
v32@?0@"HDHeartbeatDatum"8Q16^B24
HeartbeatData
Context
LongestSubsequenceStart
LongestSubsequenceDuration
HeartRateVariabilityUUID
heartbeatSequenceData
T@"NSData",R,N,V_heartbeatSequenceData
Tq,R,N,V_context
longestSubsequenceStart
Td,R,N,V_longestSubsequenceStart
longestSubsequenceDuration
Td,R,N,V_longestSubsequenceDuration
heartRateVariabilityUUID
T@"NSUUID",R,N,V_heartRateVariabilityUUID
Sensor datum must have a nonempty heartbeat sequence: %@
HDActivityCacheManagerTodayCalorieGoal
HDActivityCacheManagerYesterdayCalorieGoal
HDActivityCacheManagerTodayMoveMinuteGoal
HDActivityCacheManagerYesterdayMoveMinuteGoal
HDActivityCacheManagerTodayExerciseGoal
HDActivityCacheManagerYesterdayExerciseGoal
HDActivityCacheManagerTodayStandGoal
HDActivityCacheManagerYesterdayStandGoal
observer
Today
Yesterday
HDActivityCacheForceRebuild
T@"NSDate",&,N,V_dateOverride
timeZoneOverride
T@"NSTimeZone",&,N,V_timeZoneOverride
calendar
T@"NSCalendar",R
currentActivityCache
T@"HKActivityCache",R,N
yesterdayActivityCache
com.apple.hid.bghr_rhr_eod
output_value
raw_count
filtered_count
filtered_frac
Unable to save series data.
v24@?0@"HKWorkoutRoute"8@"NSArray"16
This route builder is attached to a workout builder and will be finished with the workout builder
Unable to finish the series data.
Workout has not been saved.
HDWorkoutRouteBuilderServer.m
route missing.
Unable to save series sample.
Unable to associate series to workout builder.
%@: Route data cannot be nil or empty.
%@: Invalid data series object %@
route
T@"HKWorkoutRoute",&,N,V_route
HDFitnessMachineDataCharacteristicBase.m
Expected flag field length to be 2 or 3
flagFieldLength
allFields
Outer transaction journal type %ld is incompatible with type %ld
Outer transaction cache scope %ld is incompatible with %ld
Transaction statistics are not mergeable
Outer transaction must require write
Outer transaction must require protected data
Outer transaction must skip journal merge
Outer transaction must require new database connection
Outer transaction must have database accessibility assertion
Outer transaction must have the same statistics object
 journal=%ld
 cache-scope=%ld
skip-journal
new-connection
write
protected-data
high-priority
 assertions={%@}
<%@%@%@ options=%@%@>
skipJournalMerge
requiresNewDatabaseConnection
accessibilityAssertions
empty
TB,R,N,GisEmpty
journalType
Tq,R,N,V_journalType
Tq,R,N,V_cacheScope
requiresWrite
requiresProtectedData
highPriority
T@"HDDatabaseTransactionContextStatistics",R,N,V_statistics
TB,D,N
Tq,D,N
T@"HDDatabaseTransactionContextStatistics",&,D,N
hasOwnerIdentifier
T@"NSString",&,N,V_ownerIdentifier
hasStoreIdentifier
T@"NSString",&,N,V_storeIdentifier
HDDatabaseJournal.m
type != HDDatabaseJournalTypeDefault
<%@:%p, %@, %@, %@>
Open
Closed
Journal has already been invalidated.
v32@?0@"NSString"8@"NSNumber"16^B24
Retrying, attempt (%ld / %ld)
Continuing (%ld)
Starting
I36@?0@"NSArray"8Q16B24^@28
 with original error: %@
Unable to create journal name
Failed to set object anchor
T@"NSURL",C,N,V_URL
journalLock
T@"NSLock",&,N,V_journalLock
currentJournalChapter
T@"<HDJournalChapter>",&,N,V_currentJournalChapter
T@"<HDDatabaseJournalDelegate>",W,N,V_delegate
Retry
Fatal Error
Empty
Requires Merge
Unexpected (%ld)
HDSyncSession.m
%@ does not respond to selector %@
<%@:%p uuid:%@ reason:"%@">
T@"<HDSyncSessionDelegate>",R,W,N,V_delegate
syncStore
T@"<HDSyncStore>",R,N,V_syncStore
sessionUUID
T@"NSUUID",R,C,N,V_sessionUUID
shortSessionIdentifier
T@"NSString",R,C,N,V_shortSessionIdentifier
T@"NSDate",R,C,N,V_startDate
T@"NSCalendar",R,C,N,V_calendar
T@"NSString",R,C,N,V_reason
databaseAccessibilityAssertion
T@"HDAssertion",&,N,V_databaseAccessibilityAssertion
databaseAccessibilityTimeout
Td,N,V_databaseAccessibilityTimeout
syncPredicate
T@"HDSyncPredicate",R,C,N
HDActiveQuantityDataAggregator.m
UPDATE key_value SET key='com.apple.locationdHKQuantityTypeIdentifierActiveEnergyBurned'         WHERE category=0 AND domain LIKE 'DATA_AGGREGATION-HKQuantityTypeIdentifierActiveEnergyBurned' AND key LIKE 'HDCalorimetryDataCollector.HKQuantityTypeIdentifierActiveEnergyBurned'         AND NOT EXISTS (SELECT * FROM key_value WHERE category=0 AND domain LIKE 'DATA_AGGREGATION-HKQuantityTypeIdentifierActiveEnergyBurned' AND key LIKE 'com.apple.locationdHKQuantityTypeIdentifierActiveEnergyBurned')
UPDATE key_value SET key='com.apple.locationdHKQuantityTypeIdentifierBasalEnergyBurned'         WHERE category=0 AND domain LIKE 'DATA_AGGREGATION-HKQuantityTypeIdentifierBasalEnergyBurned' AND key LIKE 'HDCalorimetryDataCollector.HKQuantityTypeIdentifierBasalEnergyBurned'         AND NOT EXISTS (SELECT * FROM key_value WHERE category=0 AND domain LIKE 'DATA_AGGREGATION-HKQuantityTypeIdentifierBasalEnergyBurned' AND key LIKE 'com.apple.locationdHKQuantityTypeIdentifierBasalEnergyBurned')
CREATE TABLE IF NOT EXISTS workout_builders_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, workout_configuration BLOB NOT NULL, metadata BLOB, source_id INTEGER NOT NULL REFERENCES sources (ROWID) ON DELETE CASCADE, source_version TEXT, device_id INTEGER REFERENCES source_devices (ROWID) ON DELETE CASCADE, session BLOB, start_date REAL, end_date REAL, data_interval BLOB, goal_type INTEGER NOT NULL, goal BLOB, types_while_paused BLOB, should_collect_events INTEGER NOT NULL)
INSERT INTO workout_builders_new SELECT ROWID, uuid, workout_configuration, metadata, source_id, source_version, device_id, session, start_date, end_date, data_interval, goal_type, goal, types_while_paused, 0 FROM workout_builders
DROP TABLE IF EXISTS workout_builders
ALTER TABLE workout_builders_new RENAME TO workout_builders
CREATE TABLE IF NOT EXISTS onboarding_completions (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB NOT NULL UNIQUE, feature_identifier TEXT NOT NULL, version INTEGER NOT NULL, completion_date REAL NOT NULL, country_code TEXT, mod_date REAL NOT NULL, deleted INTEGER NOT NULL DEFAULT 0, sync_provenance INTEGER NOT NULL)
DELETE FROM sync_anchors WHERE store IN (SELECT ROWID FROM sync_stores INNER JOIN cloud_sync_stores on (sync_stores.ROWID=cloud_sync_stores.sync_store) WHERE has_gap)
UPDATE sync_anchors SET received=0 WHERE schema LIKE 'main' AND sync_anchors.type IN (2, 4) AND store IN (SELECT ROWID FROM sync_stores WHERE sync_stores.type=1);
CREATE TABLE IF NOT EXISTS protected.sleep_schedule_samples (data_id INTEGER PRIMARY KEY, monday INTEGER NOT NULL, tuesday INTEGER NOT NULL, wednesday INTEGER NOT NULL, thursday INTEGER NOT NULL, friday INTEGER NOT NULL, saturday INTEGER NOT NULL, sunday INTEGER NOT NULL, wake_hour INTEGER, wake_minute INTEGER, bed_hour INTEGER, bed_minute INTEGER, wind_down_seconds REAL)
CREATE INDEX IF NOT EXISTS protected.sleep_schedule_samples_monday ON sleep_schedule_samples (monday) WHERE monday = 1;
CREATE INDEX IF NOT EXISTS protected.sleep_schedule_samples_tuesday ON sleep_schedule_samples (tuesday) WHERE tuesday = 1;
CREATE INDEX IF NOT EXISTS protected.sleep_schedule_samples_wednesday ON sleep_schedule_samples (wednesday) WHERE wednesday = 1;
CREATE INDEX IF NOT EXISTS protected.sleep_schedule_samples_thursday ON sleep_schedule_samples (thursday) WHERE thursday = 1;
CREATE INDEX IF NOT EXISTS protected.sleep_schedule_samples_friday ON sleep_schedule_samples (friday) WHERE friday = 1;
CREATE INDEX IF NOT EXISTS protected.sleep_schedule_samples_saturday ON sleep_schedule_samples (saturday) WHERE saturday = 1;
CREATE INDEX IF NOT EXISTS protected.sleep_schedule_samples_sunday ON sleep_schedule_samples (sunday) WHERE sunday = 1;
CREATE TABLE IF NOT EXISTS protected.contributors (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, payload BLOB, deleted INTEGER NOT NULL, placeholder INTEGER NOT NULL, mod_date REAL NOT NULL, sync_anchor INTEGER UNIQUE NOT NULL)
protected.onboarding_completions
SELECT uuid, feature_identifier, version, completion_date, country_code, mod_date, deleted, sync_provenance FROM protected.onboarding_completions
INSERT OR REPLACE INTO onboarding_completions (uuid, feature_identifier, version, completion_date, country_code, mod_date, deleted, sync_provenance) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
DELETE FROM sync_anchors WHERE schema='main' and type=?
DROP TABLE IF EXISTS protected.onboarding_completions
ALTER TABLE protected.clinical_record_samples RENAME TO clinical_record_samples_old;
CREATE TABLE protected.clinical_record_samples (data_id INTEGER PRIMARY KEY, display_name TEXT NOT NULL, fhir_resource_fhir_version_major INTEGER, fhir_resource_fhir_version_minor INTEGER, fhir_resource_fhir_version_patch INTEGER, fhir_resource_resource_type TEXT, fhir_resource_identifier TEXT, fhir_resource_data BLOB, fhir_resource_source_url TEXT, fhir_resource_last_updated_date REAL);
INSERT INTO protected.clinical_record_samples (data_id, display_name, fhir_resource_fhir_version_major, fhir_resource_fhir_version_minor, fhir_resource_fhir_version_patch, fhir_resource_resource_type, fhir_resource_identifier, fhir_resource_data, fhir_resource_source_url, fhir_resource_last_updated_date) SELECT data_id, display_name, 1, 0, 2, fhir_resource_resource_type, fhir_resource_identifier, fhir_resource_data, fhir_resource_source_url, fhir_resource_last_updated_date FROM clinical_record_samples_old;
DROP TABLE clinical_record_samples_old;
INSERT INTO protected.contributors (ROWID, uuid, payload, deleted, placeholder, mod_date, sync_anchor) VALUES (1, %@('00000000-0000-0000-0000-000000000000'), NULL, 0, 0, %lf, 0)
CREATE TABLE IF NOT EXISTS protected.data_provenances_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, sync_provenance INTEGER NOT NULL, origin_product_type TEXT NOT NULL, origin_build TEXT NOT NULL, local_product_type TEXT NOT NULL, local_build TEXT NOT NULL, source_id INTEGER NOT NULL, device_id INTEGER NOT NULL, contributor_id INTEGER NOT NULL, source_version TEXT NOT NULL, tz_name TEXT NOT NULL, origin_major_version INTEGER NOT NULL, origin_minor_version INTEGER NOT NULL, origin_patch_version INTEGER NOT NULL, derived_flags INTEGER NOT NULL, UNIQUE(sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, contributor_id, source_version, tz_name, origin_major_version, origin_minor_version, origin_patch_version))
INSERT INTO protected.data_provenances_new (ROWID, sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, contributor_id, source_version, tz_name, origin_major_version, origin_minor_version, origin_patch_version, derived_flags) SELECT ROWID, sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, 1, source_version, tz_name, origin_major_version, origin_minor_version, origin_patch_version, derived_flags FROM protected.data_provenances
DROP INDEX IF EXISTS objects_deleted
CREATE INDEX protected.objects_deleted ON objects (type) WHERE (protected.objects.type = 2)
CREATE TABLE IF NOT EXISTS protected.contributors_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, appleID TEXT, callerID TEXT, deleted INTEGER NOT NULL, placeholder INTEGER NOT NULL, mod_date REAL NOT NULL, sync_anchor INTEGER UNIQUE NOT NULL, primary_user INTEGER NOT NULL)
INSERT INTO protected.contributors_new SELECT ROWID, uuid, NULL, NULL, deleted, placeholder, mod_date, sync_anchor, 0 FROM protected.contributors
DROP TABLE IF EXISTS protected.contributors
ALTER TABLE protected.contributors_new RENAME TO contributors
DROP TABLE IF EXISTS ecg_samples
CREATE TABLE IF NOT EXISTS protected.ecg_samples (data_id INTEGER PRIMARY KEY REFERENCES samples (data_id) ON DELETE CASCADE, private_classification INTEGER NOT NULL, average_heart_rate REAL, voltage_payload BLOB NOT NULL, symptoms_status INTEGER NOT NULL)
SELECT samples.data_id, uuid, creation_date, provenance, start_date, end_date, binary_samples.payload, a.numerical_value, b.numerical_value, c.numerical_value                                     FROM objects                                     INNER JOIN samples USING (data_id)                                     INNER JOIN binary_samples USING (data_id)                                     LEFT JOIN metadata_values a ON ((a.object_id = samples.data_id) AND (a.key_id=(SELECT rowid FROM metadata_keys WHERE key='_HKPrivateMetadataKeyClassification')))                                     LEFT JOIN metadata_values b ON ((b.object_id = samples.data_id) AND (b.key_id=(SELECT rowid FROM metadata_keys WHERE key='_HKPrivateMetadataKeyElectrocardiogramHeartRate')))                                     LEFT JOIN metadata_values c ON ((c.object_id = samples.data_id) AND (c.key_id=(SELECT rowid FROM metadata_keys WHERE key='_HKPrivateMetadataKeyElectrocardiogramSymptoms')))                                     WHERE data_type = 144
DELETE FROM binary_samples WHERE data_id=?
INSERT INTO ecg_samples (data_id, voltage_payload, private_classification, average_heart_rate, symptoms_status) VALUES (?, ?, ?, ?, ?)
DELETE FROM metadata_values WHERE key_id IN (SELECT rowid FROM metadata_keys WHERE key LIKE '_HKPrivateMetadataKeyClassification' OR key LIKE '_HKPrivateMetadataKeyElectrocardiogramHeartRate') AND object_id=?
SELECT COUNT(*) FROM objects WHERE uuid=?
INSERT INTO objects (uuid, provenance, creation_date) VALUES (?, ?, ?)
INSERT INTO samples (data_id, start_date, end_date, data_type) VALUES (?, ?, ?, ?)
INSERT INTO category_samples (data_id, value) VALUES (?, ?)
INSERT INTO correlations (correlation, object, provenance) VALUES (?, ?, ?)
CREATE TABLE IF NOT EXISTS protected.contributors_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, apple_id TEXT, caller_id TEXT, deleted INTEGER NOT NULL, mod_date REAL NOT NULL, sync_anchor INTEGER UNIQUE NOT NULL, sync_provenance INTEGER NOT NULL, primary_user INTEGER NOT NULL)
INSERT INTO protected.contributors_new SELECT ROWID, uuid, NULL, NULL, deleted, mod_date, sync_anchor, 0, 0 FROM protected.contributors
DROP TABLE IF EXISTS protected.clinical_authorization_sessions
CREATE TABLE IF NOT EXISTS protected.clinical_authorization_sessions (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, query TEXT NOT NULL, state BLOB NOT NULL UNIQUE, code TEXT, creation_date REAL NOT NULL, gateway_id INTEGER REFERENCES clinical_gateways (ROWID) ON DELETE CASCADE, account_id INTEGER REFERENCES clinical_accounts (ROWID) ON DELETE CASCADE, requested_scope TEXT NOT NULL, CHECK((account_id IS NULL AND gateway_id IS NOT NULL) OR (account_id IS NOT NULL AND gateway_id IS NULL)))
CREATE TABLE IF NOT EXISTS protected.clinical_credentials_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, identifier BLOB NOT NULL, expiration_date REAL, scope TEXT, patient_id TEXT, creation_date REAL NOT NULL, requested_scope TEXT NOT NULL)
INSERT INTO protected.clinical_credentials_new SELECT DISTINCT c.ROWID, c.identifier, c.expiration_date, c.scope, c.patient_id, c.creation_date, json_extract(value, '$.literal') AS requested_scope FROM (protected.clinical_credentials c JOIN protected.clinical_accounts a ON a.credential_id JOIN protected.clinical_gateways g ON a.gateway_id) AS r, json_tree(r.raw_content) AS tree WHERE json_valid(tree.value) AND json_extract(tree.value, '$.param') = 'scope' GROUP BY c.ROWID
DROP TABLE IF EXISTS protected.clinical_credentials
ALTER TABLE protected.clinical_credentials_new RENAME TO clinical_credentials
ALTER TABLE protected.original_fhir_resources RENAME TO original_fhir_resources_old;
CREATE TABLE IF NOT EXISTS protected.original_fhir_resources (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT NOT NULL, account_id INTEGER NOT NULL REFERENCES clinical_accounts (ROWID) ON DELETE CASCADE, id TEXT NOT NULL, sync_provenance INTEGER NOT NULL, raw_content BLOB NOT NULL, received_date REAL NOT NULL, received_date_timezone TEXT NOT NULL, fhir_version TEXT NOT NULL, source_url TEXT, extraction_hints INTEGER, origin_major_version INTEGER NOT NULL, origin_minor_version INTEGER NOT NULL, origin_patch_version INTEGER NOT NULL, origin_build TEXT NOT NULL, first_seen_date REAL NOT NULL, first_seen_date_timezone TEXT NOT NULL, UNIQUE(type, account_id, id));
INSERT INTO protected.original_fhir_resources (ROWID, type, id, account_id, sync_provenance, raw_content, received_date, received_date_timezone, fhir_version, source_url, extraction_hints, origin_major_version, origin_minor_version, origin_patch_version, origin_build, first_seen_date, first_seen_date_timezone) SELECT ROWID, type, id, account_id, sync_provenance, raw_content, received_date, received_date_timezone, fhir_version, source_url, extraction_hints, origin_major_version, origin_minor_version, origin_patch_version, origin_build, received_date, received_date_timezone FROM original_fhir_resources_old;
DROP TABLE IF EXISTS original_fhir_resources_old;
ALTER TABLE protected.fitness_friend_workouts ADD COLUMN scwi TEXT;
SELECT ROWID from protected.contributors
SELECT * FROM protected.data_provenances WHERE contributor_id NOT IN (%@)
SELECT ROWID FROM protected.contributors WHERE uuid = %@('00000000-0000-0000-0000-000000000000')
SELECT ROWID from protected.data_provenances WHERE sync_provenance = ? AND origin_product_type = ? AND origin_build = ? AND local_product_type = ? AND local_build = ? AND source_id = ? AND device_id = ? AND contributor_id = ? AND source_version = ? AND tz_name = ? AND origin_major_version = ? AND origin_minor_version = ? AND origin_patch_version = ?
UPDATE protected.objects SET provenance = %lld WHERE provenance = %lld
UPDATE protected.data_provenances SET contributor_id = %lld WHERE ROWID IN (%@)
DELETE FROM protected.data_provenances WHERE ROWID IN (%@)
ALTER TABLE protected.sleep_schedule_samples RENAME TO sleep_schedule_samples_old;
CREATE TABLE IF NOT EXISTS protected.sleep_schedule_samples (data_id INTEGER PRIMARY KEY, monday INTEGER NOT NULL, tuesday INTEGER NOT NULL, wednesday INTEGER NOT NULL, thursday INTEGER NOT NULL, friday INTEGER NOT NULL, saturday INTEGER NOT NULL, sunday INTEGER NOT NULL, wake_hour INTEGER, wake_minute INTEGER, bed_hour INTEGER, bed_minute INTEGER, override_day_index INTEGER)
INSERT INTO protected.sleep_schedule_samples (data_id, monday, tuesday, wednesday, thursday, friday, saturday, sunday, wake_hour, wake_minute, bed_hour, bed_minute) SELECT data_id, monday, tuesday, wednesday, thursday, friday, saturday, sunday, wake_hour, wake_minute, bed_hour, bed_minute FROM protected.sleep_schedule_samples_old;
DROP TABLE protected.sleep_schedule_samples_old;
protected.procedure_record_samples
protected.diagnostic_test_report_samples
protected.coverage_record_samples
protected.medical_records
CREATE TABLE IF NOT EXISTS protected.procedure_record_samples (data_id INTEGER PRIMARY KEY, procedure_coding_collection BLOB NOT NULL, performers BLOB, execution_start_date BLOB, execution_end_date BLOB, not_performed INTEGER NOT NULL, status_coding BLOB NOT NULL, category_coding_collection BLOB, reason_coding_collections BLOB, reasons_not_performed_coding_collections BLOB, outcome_coding_collection BLOB, complications_coding_collections BLOB, follow_ups_coding_collections BLOB, body_sites_coding_collections BLOB)
CREATE TABLE IF NOT EXISTS protected.diagnostic_test_report_samples (data_id INTEGER PRIMARY KEY, diagnostic_test_coding_collection BLOB NOT NULL, panel_name TEXT NOT NULL, results BLOB, effective_start_date BLOB, status_coding BLOB NOT NULL, effective_end_date BLOB, issue_date BLOB NOT NULL)
CREATE TABLE IF NOT EXISTS protected.coverage_record_samples (data_id INTEGER PRIMARY KEY, status_coding BLOB NOT NULL, coverage_type_coding_collection BLOB NOT NULL, subscriber TEXT, subscriber_id TEXT NOT NULL, beneficiary TEXT, policy_holder TEXT, payor BLOB, relationship_coding_collection BLOB, classification BLOB, network TEXT, period_start_date BLOB, period_end_date BLOB)
SELECT objects.data_id, a.numerical_value                                     FROM objects                                     INNER JOIN ecg_samples USING (data_id)                                     LEFT JOIN metadata_values a ON ((a.object_id = objects.data_id) AND (a.key_id=(SELECT rowid FROM metadata_keys WHERE key='_HKPrivateMetadataKeyElectrocardiogramSymptoms')));
UPDATE ecg_samples SET symptoms_status = ? WHERE data_id = ?;
protected.condition_record_samples
protected.device_record_samples
CREATE TABLE protected.condition_record_samples (data_id INTEGER PRIMARY KEY, condition_coding_collection BLOB NOT NULL, categories_coding_collections BLOB NOT NULL, asserter TEXT, abatement BLOB, onset BLOB, recorded_date BLOB, clinical_status_coding BLOB, verification_status_coding BLOB, severity_coding_collection BLOB, body_sites_coding_collections BLOB)
UPDATE category_samples SET value = 0 WHERE data_id IN (SELECT objects.data_id FROM objects INNER JOIN samples USING (data_id) INNER JOIN data_provenances ON (objects.provenance = data_provenances.rowid) WHERE (data_type=164 OR data_type=169 OR data_type=170) AND NOT (%@(origin_build, '17G41') > 0 AND %@(origin_build, '18A1') < 0));
UPDATE objects SET type=1 WHERE type IS NULL
dwelltimeMs
dismissReason
scrollBehavior
hasDwelltimeMs
TQ,N,V_dwelltimeMs
hasDismissReason
Ti,N,V_dismissReason
hasScrollBehavior
Ti,N,V_scrollBehavior
AutoDismissNotDisplayed
AutoDismissDisplayed
CrownPressed
SwipeToDismiss
ActionButton
DismissButton
DisableButton
Mute
Timeout
DoNotDisturb
Snooze
PositiveAction
UnknownReason
Bottom
HDSyncAnchorRange HDSyncAnchorRangeMake(HDSyncAnchor, HDSyncAnchor)
HDSyncSupport.m
end >= start
(%lld, %lld)
series_builders
entity_class
frozenIdentifier
T@"NSUUID",R,N,V_frozenIdentifier
WorkoutDNDStateChangedNotification
Failed to retrieve provenance for id %@
Failed to find/create codable object collection for provanence %@
q36@?0@"PBCodable"8q16B24^@28
Failed to add codable representation to object collection
orderedProperties
TQ,R,N,V_fitnessMachineType
T@"NSUUID",R,N,V_uuid
btIdentifierData
T@"NSData",R,N
btIdentifier
T@"NSString",R,N
com.apple.healthd.awd-submission-manager.database-stats
com.apple.healthd.awd-submission-manager.sleep-alarm-monthly
com.apple.healthd.awd-submission-manager.sleep-alarm-daily
com.apple.healthd.awd-submission-manager.fitness-daily
com.apple.healthd.awd-submission-manager.differential-privacy.monthly-types
com.apple.healthd.awd-submission-manager.heart-daily-analytics
DATABASE_SIZE
DATABASE_SIZE_MB
ROW_COUNT
LAST_MONTH_DATABASE_SIZE
LAST_WEEK_DATABASE_SIZE
LAST_MONTH_HFD_DATABASE_SIZE
LAST_WEEK_HFD_DATABASE_SIZE
_DATE
.WaitingToRun
.LastSubmissionAttempt
.IntervalCounter
.LastProcessedDate
%@ activity %@ failed during forced execution
waitingToRun
Tq,R,N,V_waitingToRun
lastSubmissionAttemptDate
lastProcessedDate
intervalCounter
taskName
T@"NSString",R,C,N,V_taskName
HDAWDSubmissionManager.m
HDAWDSubmissionManager.DatabaseStats
B20@?0@"_HDAWDPeriodicAction"8B16
HDAWDSubmissionManager.SleepAlarmStats
HDAWDSubmissionManager.SleepAlarmDaily
HDAWDSubmissionManager.HeartDailyAnalytics
HDAWDSubmissionManager.FitnessDaily
HDAWDSubmissionManager.DiffPrivTypesMonthly
%@: counter:%ld waiting:%ld last:%@ processed:%@
AWD task '%@' not found
Failed to complete task %@
SELECT COUNT(*) FROM %@ WHERE %@ > ?
SELECT COUNT(*) FROM %@ WHERE %@ = %d
SELECT COUNT(*) FROM %@
@"NSNumber"16@?0@"HDSourceEntity"8
SELECT COUNT(DISTINCT %@) FROM %@ s INNER JOIN %@ o USING (%@) INNER JOIN %@ ON (o.%@ = %@.rowid) INNER JOIN %@ mv ON (mv.%@ = o.%@) INNER JOIN %@ mk ON (mk.rowid = mv.%@) WHERE (%@ in (%@)) AND mk.%@='%@' AND mv.%@ > 0
SELECT COUNT(*) FROM %@ WHERE (%@ & %d) == 0
(%@ & %llu) == 0
SELECT COUNT(*) FROM ( SELECT %@, COUNT(*) AS rows FROM %@ o  INNER JOIN %@ ON (o.%@ = %@.rowid)  WHERE (%@ in (%@))  AND o.%@ > %.0lf GROUP BY %@ ) WHERE rows > 0
date != NULL
error != NULL
Saving new 'last' value for %@
Failed database size delta queries, will retry
Failed row count delta queries, will retry
totalDatabaseSize
databaseSizeExcludingHFD
hfdDatabaseSize
unprotectedDatabaseSize
unprotectedDatabaseWALSize
protectedDatabaseSize
protectedDatabaseWALSize
Failed database size month delta queries
lastWeekDatabaseSizeIncreaseMB
Failed database size week delta queries
lastMonthHFDDatabaseSizeIncreaseMB
Failed HFD database size month delta queries
lastWeekHFDDatabaseSizeIncreaseMB
Failed HFD database size week delta queries
thirdPartyAppCounts
v24@?0@"HDStatisticsCollectionCalculator"8@"HKStatistics"16
v24@?0@"HKActivitySummary"8^B16
MotionFitnessDailyToken
com.apple.locationd
v16@?0@"HKCategorySample"8
@32@?0@"NSArray"8@"NSDate"16@"NSDate"24
testHandler
T@?,C,N,V_testHandler
q24@?0@"HKCategorySample"8@"HKCategorySample"16
T@"NSDateInterval",R,N
usedAppleBedtimeAlarm
appleBedtimeCorrection
appleBedtimeDeltaFromSleepDayStart
appleBedtime
appleWaketime
appleCorrectedBedtime
appleTotalInBedTime
appleFirstSleepInterruption
appleStartOfLongestSleepInterval
appleFinalWakeupTime
com.apple.mobiletimer
HDSQLiteEntityColumn.m
targetProperty != nil
%@%s%@
columnType
T@"NSString",R,C,N,V_columnType
keyPathType
TC,R,N,V_keyPathType
foreignKey
T@"HDSQLiteEntityForeignKey",R,N,V_foreignKey
codings
hasCodings
T@"HDCodableMedicalCodingList",&,N,V_codings
T@"HDCodableInspectableValue",&,N,V_value
T@"NSMutableArray",&,N,V_referenceRanges
ALTER TABLE sync_anchors RENAME TO sync_anchors_old
CREATE TABLE sync_anchors (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, next INTEGER NOT NULL, acked INTEGER NOT NULL, received INTEGER NOT NULL, schema TEXT NOT NULL, type INTEGER NOT NULL, store INTEGER NOT NULL, epoch INTEGER NOT NULL, UNIQUE(store, epoch, type, schema));
INSERT INTO sync_anchors (next, acked, received, schema, type, store, epoch) SELECT next, acked, received, 'main', type, store, epoch FROM sync_anchors_old;
DROP TABLE sync_anchors_old
DROP TABLE IF EXISTS subscription_data_anchors
SELECT rowid, metadata FROM workout_events WHERE metadata IS NOT NULL
Failed to create codable workout event metadata
UPDATE workout_events SET metadata = ? WHERE rowid = ?
CREATE TABLE protected.medical_records (data_id INTEGER PRIMARY KEY, note TEXT, entered_in_error INTEGER NON NULL, modified_date REAL, fhir_identifier TEXT NON NULL, extraction_version INTEGER NON NULL, sort_date REAL NON NULL, sort_date_key_path TEXT NON NULL)
protected.account_owner_samples
CREATE TABLE protected.account_owner_samples (data_id INTEGER PRIMARY KEY, name TEXT NOT NULL, birth_date BLOB)
protected.allergy_record_samples
CREATE TABLE protected.allergy_record_samples (data_id INTEGER PRIMARY KEY, allergy_codings BLOB NOT NULL, onset_date BLOB, asserter TEXT, reactions BLOB, criticality_coding BLOB, last_occurence_date BLOB, recorded_date BLOB)
protected.medication_dispense_record_samples
CREATE TABLE protected.medication_dispense_record_samples (data_id INTEGER PRIMARY KEY, medication_codings BLOB NOT NULL, preparation_date BLOB, hand_over_date BLOB, dosage_instructions BLOB, status_coding BLOB, quantity_dispensed BLOB)
CREATE TABLE protected.condition_record_samples (data_id INTEGER PRIMARY KEY, condition_codings BLOB NOT NULL, category_codings BLOB NOT NULL, asserter TEXT, abatement BLOB, onset BLOB, recorded_date BLOB, clinical_status_coding BLOB, verification_status_coding BLOB, severity_codings BLOB, body_sites_codings BLOB)
CREATE TABLE protected.diagnostic_test_report_samples (data_id INTEGER PRIMARY KEY, diagnostic_test_codings BLOB, panel_name TEXT NOT NULL, results BLOB, effective_start_date BLOB, status BLOB NOT NULL, effective_end_date BLOB, issue_date BLOB NOT NULL)
protected.diagnostic_test_result_samples
CREATE TABLE protected.diagnostic_test_result_samples (data_id INTEGER PRIMARY KEY, diagnostic_test_codings BLOB NOT NULL, value BLOB, reference_ranges BLOB, effective_start_date BLOB, category TEXT NOT NULL, issue_date BLOB, effective_end_date BLOB);
CREATE TABLE protected.medication_dispense_record_samples (data_id INTEGER PRIMARY KEY, medication_codings BLOB NOT NULL, quantity BLOB, preparation_date BLOB, hand_over_date BLOB, dosage_instructions BLOB, status_coding BLOB)
protected.medication_order_samples
CREATE TABLE protected.medication_order_samples (data_id INTEGER PRIMARY KEY, medication_codings BLOB NOT NULL, prescriber TEXT, number_of_fills INTEGER NOT NULL, signetur TEXT, written_date BLOB, ended_date BLOB)
protected.medication_record_samples
CREATE TABLE protected.medication_record_samples (data_id INTEGER PRIMARY KEY, medication_codings BLOB NOT NULL, assertion_type TEXT, asserter TEXT, assertion_date BLOB, dosage TEXT, not_taken INTEGER NOT NULL, effective_start_date BLOB, effective_end_date BLOB)
CREATE TABLE protected.procedure_record_samples (data_id INTEGER PRIMARY KEY, procedure_codings BLOB NOT NULL, orderer TEXT, order_date BLOB, performer TEXT, organization TEXT, execution_start_date BLOB, outcome TEXT, complications BLOB NOT NULL, reasons BLOB NOT NULL, not_performed INTEGER NOT NULL, execution_end_date BLOB)
protected.vaccination_record_samples
CREATE TABLE protected.vaccination_record_samples (data_id INTEGER PRIMARY KEY, vaccination_codings BLOB NOT NULL, expiration_date BLOB, dose_number TEXT, dose_quantity TEXT, performer TEXT, body_site_coding BLOB, reaction TEXT, not_given INTEGER NOT NULL, administration_date BLOB NOT NULL, status_coding BLOB, patient_reported INTEGER NOT NULL, route_codings BLOB, reasons_codings BLOB, reasons_not_given_codings BLOB)
protected.unknown_record_samples
CREATE TABLE protected.unknown_record_samples (data_id INTEGER PRIMARY KEY, display_name TEXT)
CREATE TABLE protected.procedure_record_samples (data_id INTEGER PRIMARY KEY, procedure_codings BLOB NOT NULL, performers BLOB, execution_start_date BLOB, execution_end_date BLOB, not_performed INTEGER NOT NULL, status_coding BLOB NOT NULL, category_codings BLOB, reason_codings BLOB, reasons_not_performed_codings BLOB, outcome_codings BLOB, complications_codings BLOB, follow_ups_codings BLOB, body_sites_codings BLOB)
CREATE TABLE IF NOT EXISTS protected.diagnostic_test_result_samples (data_id INTEGER PRIMARY KEY, diagnostic_test_codings BLOB NOT NULL, value BLOB, reference_ranges BLOB, effective_start_date BLOB, category TEXT NOT NULL, issue_date BLOB, effective_end_date BLOB, status_coding BLOB NOT NULL, interpretation_codings BLOB, comments TEXT, body_site_codings BLOB, method_codings BLOB, performers BLOB)
ALTER TABLE clinical_accounts ADD patient_hash TEXT
ALTER TABLE protected.fhir_resources ADD COLUMN source_url TEXT
ALTER TABLE protected.fhir_resources ADD COLUMN extraction_hints INTEGER
CREATE TABLE IF NOT EXISTS protected.fhir_resources_last_seen (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, resource_id INTEGER NOT NULL REFERENCES fhir_resources(ROWID) ON DELETE CASCADE, last_seen_date REAL NOT NULL)
CREATE TABLE protected.medication_record_samples (data_id INTEGER PRIMARY KEY, medication_codings BLOB NOT NULL, assertion_type INTEGER NOT NULL, asserter TEXT, assertion_date BLOB, status_coding BLOB NOT NULL, dosages BLOB, reason_for_use_codings BLOB, not_taken INTEGER NOT NULL, reasons_not_taken_codings BLOB, effective_start_date BLOB, effective_end_date BLOB, earliest_dosage_date BLOB)
CREATE TABLE protected.medication_dispense_record_samples (data_id INTEGER PRIMARY KEY, medication_codings BLOB NOT NULL, quantity_dispensed BLOB, preparation_date BLOB, hand_over_date BLOB, dosages BLOB, earliest_dosage_date BLOB, status_coding BLOB, days_supply_quantity BLOB)
CREATE TABLE protected.medication_order_samples (data_id INTEGER PRIMARY KEY, medication_codings BLOB NOT NULL, prescriber TEXT, number_of_fills INTEGER NOT NULL, dosages BLOB, earliest_dosage_date BLOB, written_date BLOB, ended_date BLOB, status_coding BLOB NOT NULL, reason_codings BLOB, reason_ended_codings BLOB)
termbase.sqlite
protected.medical_concept_annotation_samples
protected.visit_samples
protected.allergy_concept_concepts
protected.allergy_reaction_concept_concepts
protected.analyte_concept_concepts
protected.condition_concept_concepts
protected.diagnostic_test_concept_concepts
protected.ingredient_concept_concepts
protected.medication_concept_concepts
protected.procedure_concept_concepts
protected.vaccination_concept_concepts
protected.medical_concepts
protected.healthrecords_providers
protected.healthrecords_gateways
protected.healthrecords_credentials
protected.fhir_resources
protected.clinical_authorization_sessions
protected.clinical_accounts
protected.clinical_gateway_associations
protected.clinical_providers
protected.clinical_gateways
protected.clinical_credentials
protected.clinical_brands
protected.clinical_gateway_clinical_provider_associations
DROP TABLE IF EXISTS %@
CREATE TABLE protected.medical_records (data_id INTEGER PRIMARY KEY, note TEXT, entered_in_error INTEGER NON NULL, modified_date REAL, fhir_identifier BLOB, refinement_version BLOB, sort_date REAL NON NULL, sort_date_key_path TEXT NON NULL)
CREATE TABLE protected.diagnostic_test_result_samples (data_id INTEGER PRIMARY KEY, diagnostic_test_codings BLOB NOT NULL, value BLOB, reference_ranges BLOB, effective_start_date BLOB, category TEXT NOT NULL, issue_date BLOB, effective_end_date BLOB)
CREATE TABLE protected.clinical_gateways (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, external_id TEXT NOT NULL, last_reported_status INTEGER NOT NULL, revision INTEGER NOT NULL, raw_content BLOB NOT NULL, sync_anchor INTEGER NOT NULL UNIQUE, sync_provenance INTEGER NOT NULL, UNIQUE(external_id))
CREATE TABLE protected.clinical_accounts (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, identifier BLOB NOT NULL UNIQUE, user_enabled_flag INTEGER NOT NULL, relogin_needed_flag INTEGER NOT NULL, creation_date REAL NOT NULL, last_fetch_date REAL, last_full_fetch_date REAL, last_submitted_rowid INTEGER, last_extracted_rowid INTEGER, last_extracted_rules_version INTEGER, credential_id INTEGER REFERENCES clinical_credentials (ROWID) ON DELETE SET NULL, gateway_id INTEGER NOT NULL UNIQUE REFERENCES clinical_gateways (ROWID) ON DELETE NO ACTION, sync_identifier BLOB NOT NULL UNIQUE, modification_date REAL NOT NULL, sync_anchor INTEGER NOT NULL UNIQUE, sync_provenance INTEGER NOT NULL)
CREATE TABLE protected.clinical_deleted_accounts (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, sync_identifier BLOB NOT NULL, deletion_date REAL NOT NULL, sync_provenance INTEGER NOT NULL, UNIQUE(sync_identifier))
CREATE TABLE protected.fhir_resources (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, type TEXT NOT NULL, account_id INTEGER NOT NULL REFERENCES clinical_accounts (ROWID) ON DELETE CASCADE, id TEXT NOT NULL, sync_provenance INTEGER NOT NULL, raw_content BLOB NOT NULL, fhir_version TEXT NOT NULL, received_date REAL NOT NULL, received_date_timezone TEXT NOT NULL, UNIQUE(type, account_id, id))
CREATE TABLE protected.clinical_credentials (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, access_token BLOB NOT NULL, token_type TEXT NOT NULL, refresh_token BLOB, expiration_date REAL, scope TEXT, patient_id TEXT, creation_date REAL NOT NULL)
CREATE TABLE protected.clinical_authorization_sessions (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, query TEXT NOT NULL, state BLOB NOT NULL UNIQUE, code TEXT, creation_date REAL NOT NULL, gateway_id INTEGER REFERENCES clinical_gateways (ROWID) ON DELETE CASCADE, account_id INTEGER REFERENCES clinical_accounts (ROWID) ON DELETE CASCADE, CHECK ((account_id IS NULL AND gateway_id IS NOT NULL) OR (account_id IS NOT NULL AND gateway_id IS NULL)))
SELECT uuid, provenance, data_type FROM %@ INNER JOIN protected.objects USING (data_id) INNER JOIN protected.samples USING (data_id)
INSERT INTO protected.samples (data_id, data_type, start_date, end_date) VALUES (?, ?, ?, ?);
DELETE FROM protected.objects where uuid = ?
INSERT INTO protected.objects (uuid, provenance, type, creation_date) VALUES (?, ?, ?, ?);
HDDataEntityDeletionContext.m
SELECT %@, %@, %@ FROM %@ INNER JOIN %@ AS %@ ON %@.%@=%@.ROWID WHERE ((%@ = ?) AND (%@ = ?))
B64@?0q8@"NSUUID"16#24@"HKObjectType"32@"NSNumber"40@"NSNumber"48^@56
deletedEntityClass != Nil
originalProvenanceID != nil
v32@?0@"NSString"8@"NSMutableArray"16^B24
recursiveDeleteAuthorizationBlock
T@?,C,N,V_recursiveDeleteAuthorizationBlock
insertDeletedObjects
TB,N,V_insertDeletedObjects
preserveStartAndEndDates
TB,N,V_preserveStartAndEndDates
callWillDeleteFromDatabase
TB,N,V_callWillDeleteFromDatabase
lastInsertedDeletedObjectPersistentID
T@"NSNumber",R,N,V_lastInsertedDeletedObjectPersistentID
deletedObjectTypeSet
T@"NSSet",R,C,N,V_deletedObjectTypeSet
deletedObjectCount
TQ,R,N,V_deletedObjectCount
numberOfFills
writtenDate
endedDate
reasonCodings
reasonEndedCodings
hasPrescriber
T@"NSString",&,N,V_prescriber
hasNumberOfFills
Tq,N,V_numberOfFills
hasWrittenDate
T@"NSData",&,N,V_writtenDate
hasEndedDate
T@"NSData",&,N,V_endedDate
hasReasonCodings
T@"HDCodableMedicalCodingList",&,N,V_reasonCodings
hasReasonEndedCodings
T@"HDCodableMedicalCodingList",&,N,V_reasonEndedCodings
Cannot discard a frozen series.
HDQuantitySeriesManager.m
[type isKindOfClass:[HKQuantityType class]]
v16@?0@"<HDQuantitySeriesObserver>"8
series-observers-%@
alertSuppressor
T@"HDAlertSuppressor",R,N,V_alertSuppressor
appLauncher
T@"HDAppLauncher",R,N,V_appLauncher
backgroundWorkoutRunner
T@"HDBackgroundWorkoutRunner",R,N,V_backgroundWorkoutRunner
carouselServicesManager
T@"HDCarouselServicesManager",R,N,V_carouselServicesManager
coreMotionWorkoutInterface
T@"HDCoreMotionWorkoutInterface",R,N,V_coreMotionWorkoutInterface
heartRateRecoveryManager
T@"HDHeartRateRecoveryManager",R,N,V_heartRateRecoveryManager
powerSavingModeManager
T@"HDPowerSavingModeManager",R,N,V_powerSavingModeManager
quietModeManager
T@"HDQuietModeManager",R,N,V_quietModeManager
HDAuthorizationManager.m
completion-queue
Required authorization check only permitted for clinical types
Required authorization not granted
nil bundle identifier
sessionIdentifier != nil
ResetAllAuthorizationRecords
No app with the requested bundle identifier.
OPEN_%@_TITLE
OPEN_%@_DESCRIPTION
OPEN_%@
NOT_NOW
Application failed to prompt for authorization in a timely fashion.
ApplicationsUninstalled
[authorizationStatuses count] > 0
No source with bundle identifier %@
Missing authorization record for type %@
Invalid authorization status %@ for type %@, request %ld
Authorization changed
B16@?0@"NSNumber"8
Failed to look up source with bundle identifier "%@"
identifiers != nil
Authorization request canceled
requestGroup != nil
Must specify at least %lu identifiers for "%@"
Failed to find authorization session with identifier %@
There is no active authorization session
Session identifier does not match active authorization session identifier
There is already an active authorization session transaction
Authorization reset
Bundle identifier must be non-nil when requesting object authorization.
Prompting request group:
Pending request groups:
"%@" (%lu requests)
completionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_completionQueue
requestGroupsByBundleIdentifier
T@"NSMutableDictionary",&,N,V_requestGroupsByBundleIdentifier
pendingRequestGroups
T@"NSMutableArray",&,N,V_pendingRequestGroups
promptingRequestGroup
T@"_HDAuthorizationRequestGroup",&,N,V_promptingRequestGroup
pendingObjectAuthorizationRequestsByBundleIdentifier
T@"NSMutableDictionary",&,N,V_pendingObjectAuthorizationRequestsByBundleIdentifier
activeObjectPromptSessionsBySessionIdentifier
T@"NSMutableDictionary",&,N,V_activeObjectPromptSessionsBySessionIdentifier
suppressAuthorizationPrompt
TB,N,V_suppressAuthorizationPrompt
requestSessionTimeout
Td,N,V_requestSessionTimeout
identifier != nil
<%@:%p id:"%@">
T@"NSUUID",R,N,V_identifier
typesToWrite
T@"NSSet",R,C,N,V_typesToWrite
typesToRead
T@"NSSet",R,C,N,V_typesToRead
source != nil
Authorization session timed out
_promptSessionIdentifier != nil
!_inTransaction
<%@:%p source:"%@" requests:%lu prompt:%@ transaction:%s>
requests
T@"NSMutableArray",&,N,V_requests
completions
T@"NSMutableArray",&,N,V_completions
sessionTimeoutSource
T@"NSObject<OS_dispatch_source>",&,N,V_sessionTimeoutSource
promptSessionIdentifier
T@"NSUUID",R,N,V_promptSessionIdentifier
requestCount
inTransaction
TB,N,GisInTransaction,V_inTransaction
promptHandler
T@?,C,N,V_promptHandler
T@"NSArray",R,C,N,V_samples
samplesRequiringAuthorization
authorizationRecords
T@"NSArray",&,N,V_authorizationRecords
Timed out waiting for authorization transaction to begin.
Attempt to start a prompt transaction that has already started.
sessionCompletion
T@?,C,N,V_sessionCompletion
sessionIdentifier
T@"NSUUID",R,C,N,V_sessionIdentifier
T@"HKAuthorizationRequestRecord",R,N,V_record
T@?,R,C,N,V_requestSentHandler
requestFinishedHandler
T@?,R,C,N,V_requestFinishedHandler
bundleID
T@"NSString",R,C,N,V_bundleID
didRecieveShouldPrompt
TB,N,V_didRecieveShouldPrompt
T@"NSString",C,N,V_hostAppName
shouldPromptError
T@"NSError",C,N,V_shouldPromptError
T@"NSMutableArray",&,N,V_records
UIHealthAuthorizationAction
Class getUIHealthAuthorizationActionClass(void)_block_invoke
void *UIKitLibrary(void)
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/UIKit.framework/Contents/MacOS/UIKit
Must provide at least one object type
SELECT MAX(%@) FROM %@ WHERE %@ = ?
SELECT %@, COUNT(*) FROM %@ CROSS JOIN %@ USING (%@) WHERE %@ IS NOT NULL GROUP BY %@
SELECT %@, %@ FROM %@ WHERE %@ > ? AND %@ = ?
SELECT (SELECT MIN(%@) FROM %@ WHERE %@ > ? AND %@ = ?) AS min_start_date,(SELECT MAX(%@) FROM %@ WHERE %@ > ? AND %@ = ?) AS max_start_date,(SELECT MAX(%@) FROM %@ WHERE %@ = ?) as max_end_date,(SELECT %@ FROM %@ WHERE %@ > ? AND %@ = ? AND %@ IS NULL AND %@ IS NULL LIMIT 1) as deletions
B24@?0@"HKSampleType"8@"HKSampleTypeChange"16
B16@?0@"HDReadAuthorizationStatus"8
databaseChangesQueryConfiguration
T@"_HKDatabaseChangesQueryServerConfiguration",R,C,N
shareURL
token
hasShareURL
T@"NSString",&,N,V_shareURL
hasToken
T@"NSData",&,N,V_token
CloudSyncMaster
CloudSyncMasterRecord
DeletedOwnerIdentifiers
master record's disabled owner identifiers has non-string member %@
MASTER %@
Last Modified Date: %@
Schema Version: %@
Disabled Owners: %@
T@"NSSet",&,N,V_disabledOwnerIdentifiers
energyBurned
briskMinutes
activeSeconds
energyBurnedGoal
eventTimestamp
hasEnergyBurned
TI,N,V_energyBurned
hasBriskMinutes
TI,N,V_briskMinutes
hasActiveSeconds
TI,N,V_activeSeconds
hasEnergyBurnedGoal
TI,N,V_energyBurnedGoal
hasEventTimestamp
TQ,N,V_eventTimestamp
hasBiologicalSex
TI,N,V_biologicalSex
TI,N,V_height
TI,N,V_weight
hasAge
TI,N,V_age
HDAssertionManagerAssertionTakenNotification
HDAssertionManagerAssertionReturnedNotification
HDAssertionManagerAssertionKey
assertionExpiration
v24@?0@"HDAssertion"8^B16
v16@?0@"<HDAssertionObserver>"8
assertionExpirationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_assertionExpirationQueue
assertions
T@"NSHashTable",R,N,V_assertions
NextEnvironmentalAudioExposureSampleTimeKey
DidGenerateEnvironmentalAudioExposureSamplesKey
NextHeadphoneAudioExposureSampleTimeKey
DidGenerateHeadphoneAudioExposureSamplesKey
LastHeadphoneSampleEndDateKey
LastEnvironmentalSampleEndDateKey
%@'s Watch
AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA
com.apple.health.demo_watch
AirPods
Apple, Inc.
AirPods 1,1
EarPods
EarPods 1,1
Powerbeats Pro
Beats By Dre
Powerbeats Pro 1,1
Foo, Inc.
FooPods 1,1
com.apple.Music,com.apple.mobilesafari
nextEnvironmentalAudioExposureSampleTime
Td,N,V_nextEnvironmentalAudioExposureSampleTime
didGenerateEnvironmentalAudioExposureSamples
TB,N,V_didGenerateEnvironmentalAudioExposureSamples
lastEnvironmentalSampleEndDate
T@"NSDate",&,N,V_lastEnvironmentalSampleEndDate
nextHeadphoneAudioExposureSampleTime
Td,N,V_nextHeadphoneAudioExposureSampleTime
didGenerateHeadphoneAudioExposureSamples
TB,N,V_didGenerateHeadphoneAudioExposureSamples
lastHeadphoneSampleEndDate
T@"NSDate",&,N,V_lastHeadphoneSampleEndDate
Insufficient data (%lu bytes) for fitness machine status.
Insufficient data (%lu bytes) for stopped or paused by user fitness machine status.
Stopped by user
Paused by user
Stopped by safety key
Started or resumed by user
Fitness Machine Status(%@) %@
machineState
TQ,N,V_machineState
owningAppBundleIdentifier
hasBundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
hasProductType
T@"NSString",&,N,V_productType
hasOptions
Tq,N,V_options
T@"NSData",&,N,V_uuid
hasOwningAppBundleIdentifier
T@"NSString",&,N,V_owningAppBundleIdentifier
emergency_sos
health_records_data
heart_rhythm_phone_only
menstrual_cycles
sleep
Invalid notification domain %zd
The unified zone must already exist before pushing MedicalID
ProfileIdentifier: %@,ProductType: %@,SystemBuildVersion: %@,DeviceName: %@,DeviceMode: %@,
T@"_HKMedicalIDData",&,N,V_cloudMedicalIDData
medicalIDDataToPush
T@"_HKMedicalIDData",&,N,V_medicalIDDataToPush
T@"HDCloudSyncMedicalIDRecord",&,N,V_medicalIDRecord
keepaliveTimer
T@"NSObject<OS_dispatch_source>",&,N,V_keepaliveTimer
HDAlertSuppressor.m
[assertion isKindOfClass:[_HDAlertSuppressorAssertion class]]
Not Started
Started
Ended
Session configuration is nil
Cannot start session in state: %@
Cannot abort session in state: %@
healthdb_secure_temporary.hfd
hfd-wal
Failed to open destination store: %s
Failed to open destination store for writing series samples: %s
Unexpected failure trying to write series sample data
SELECT hfd_key FROM protected.data_series
SELECT hfd_key FROM protected.quantity_sample_series
B24@?0r^{DataStore={BlockAccessFile={TransactionalFile={shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}{WriteAheadLog={mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}{shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<health::VirtualFile>=^{VirtualFile}^{__shared_weak_count}}QQqB{vector<std::__1::shared_ptr<health::WriteAheadLog::Transaction>, std::__1::allocator<std::__1::shared_ptr<health::WriteAheadLog::Transaction> > >=^{shared_ptr<health::WriteAheadLog::Transaction>}^{shared_ptr<health::WriteAheadLog::Transaction>}{__compressed_pair<std::__1::shared_ptr<health::WriteAheadLog::Transaction> *, std::__1::allocator<std::__1::shared_ptr<health::WriteAheadLog::Transaction> > >=^{shared_ptr<health::WriteAheadLog::Transaction>}}}{unordered_multiset<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > >={__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>=^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<unsigned long long> >=Q}{__compressed_pair<float, std::__1::equal_to<unsigned long long> >=f}}}{map<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> >, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > > > >={__tree<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::less<unsigned long long>, true> >=Q}}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<health::VirtualFile>=^{VirtualFile}^{__shared_weak_count}}B{FileHeader=IIIQQQ}QQi{mutex={_opaque_pthread_mutex_t=q[56c]}}{TransactionalCache<unsigned long long, health::FilePage>=QQ{unordered_map<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::equal_to<unsigned long long>, true> >=f}}}^{CacheEntry}^{CacheEntry}{function<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>={__value_func<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>={type=[32C]}^{__base<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>}}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}{map<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *, std::__1::less<std::__1::__thread_id>, std::__1::allocator<std::__1::pair<const std::__1::__thread_id, health::TransactionalFile::ReadTransaction *> > >={__tree<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::less<std::__1::__thread_id>, true>, std::__1::allocator<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::less<std::__1::__thread_id>, true> >=Q}}}{queue<std::__1::__thread_id, std::__1::deque<std::__1::__thread_id, std::__1::allocator<std::__1::__thread_id> > >={deque<std::__1::__thread_id, std::__1::allocator<std::__1::__thread_id> >={__split_buffer<std::__1::__thread_id *, std::__1::allocator<std::__1::__thread_id *> >=^^{__thread_id}^^{__thread_id}^^{__thread_id}{__compressed_pair<std::__1::__thread_id **, std::__1::allocator<std::__1::__thread_id *> >=^^{__thread_id}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__thread_id> >=Q}}}{map<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *, std::__1::less<std::__1::__thread_id>, std::__1::allocator<std::__1::pair<const std::__1::__thread_id, health::TransactionalFile::WriteTransaction *> > >={__tree<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::less<std::__1::__thread_id>, true>, std::__1::allocator<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::less<std::__1::__thread_id>, true> >=Q}}}}{BlockAccessFileHeader=IIIQ{BlockPointer=QQ}{BlockPointer=QQ}{BlockPointer=QQ}}}{BlockPointer=QQ}}8^@16
Unexpected failure migrating HFD data: %s
OwnerDifferentiator
HDCloudSyncDatabaseIdentifier
Timed out waiting for device identifier from CloudKit.
Unable to get cloud sync database ID
Unable to get cloudSyncDatabaseIdentifier from databaseIdentifierData %@
Unable to get databaseIdentifier from databaseIdentifierData %@
Unable to persist cloud sync database ID
HDCloudSyncOwnerIdentifier.m
Improper attempt to roll the owner identifier for a profile that cannot rebase (type %ld)
Cloud Sync disabled
string
TinkerPrivacyAlertEventSharingSetUp
TinkerPrivacyAlertEventBirthday
TinkerPrivacyAlertEventTesting
HDTinkerPrivacyAlertCoordinator
v24@?0@"HDRestorableAlarm"8@"NSArray"16
@16@?0@"HDAlarmEvent"8
Did not any find valid events, not firing alert (#t0)
Unable to find guardian info (#t0)
HDTinkerPrivacyAlertCoordinator.m
Profile %@ is not an instance of type HDPrimaryProfile (#t0)
Invalid event identifier %@ (#t0)
Sharing is disabled (#t0)
Device not in tinker mode (#t0)
Error fetching guardian name (#t0)
_unitTest_currentDate
T@"NSDate",C,N,V__unitTest_currentDate
_unitTest_scheduledBirthdayTransparencyAlertComponents
T@"NSDateComponents",R,N,V__unitTest_scheduledBirthdayTransparencyAlertComponents
T@"NSMutableArray",&,N,V_changes
2a38
Missing expected body location
Heart rate sensor location (%@) value: %d 
sensorLocation
Tq,N,V_sensorLocation
Cannot start watch app when phone app is in background
Start workout app request not supported on non-watch devices
demo_cdas
.xml
HDAppLaunchClientKeepAliveAssertionIdentifier
B16@?0@"HDClientKeepAliveAssertion"8
launchCount
Tq,N,V_launchCount
T@"NSDate",C,N,V_lastLaunchAttempt
clientBundleIdentifier
T@"NSString",R,C,N,V_clientBundleIdentifier
payloadOptions
T@"NSDictionary",R,C,N,V_payloadOptions
HDDemoDataBloodSampleGeneratorNextBloodAlcoholContentSampleTimeKey
nextBloodAlcoholContentSampleTime
Td,N,V_nextBloodAlcoholContentSampleTime
MIIExDCCA6ygAwIBAgIIIlVjHlG7+W0wDQYJKoZIhvcNAQELBQAwgYcxOzA5BgNVBAMMMkFwcGxlIFN5c3RlbSBJbnRlZ3JhdGlvbiAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwHhcNMTgxMjE3MjA1NzM2WhcNMjAwNjE0MjA1NzM2WjA3MRMwEQYDVQQDDAplbmNyeXB0Q0hSMRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAObICoo2nVZHv1iUikD3ELGU05Ejp4qkRNBGYyf2ENq/avdg01/itE8YpiaOMQb13bp9LqqAq3eVniJGF3s/521jU8l7yLiiY7JyaVzpMcVIb8XTSru7BLz/7KptNDQijfn2CusK7erfGHveR+lFQYo19xsWfOesUCBUEbtFSyGYBgS50o99AzLlE0u+nB6mj/zNA4MKx0vbZcXOLds4ZMh9cnUMiTdI6iLltL0dtsgd2S9u7+b89UXsXbWvNxvaQ2BtxHCiWiIZydx/FjR7ae4ptkEjmeIIwxAHXJo3T+3zpBU6Dq7SlL5OYo9WsmUcwAtAVpRJCI8zCuV0fUEghO0CAwEAAaOCAYEwggF9MAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUEnV8R5L9g+O+LvxZf2dDgTUQRewwQQYIKwYBBQUHAQEENTAzMDEGCCsGAQUFBzABhiVodHRwOi8vb2NzcC5hcHBsZS5jb20vb2NzcDAzLWFzaTJjYTA0MIGWBgNVHSAEgY4wgYswgYgGCSqGSIb3Y2QFATB7MHkGCCsGAQUFBwICMG0Ma1RoaXMgY2VydGlmaWNhdGUgaXMgdG8gYmUgdXNlZCBleGNsdXNpdmVseSBmb3IgZnVuY3Rpb25zIGludGVybmFsIHRvIEFwcGxlIFByb2R1Y3RzIGFuZC9vciBBcHBsZSBwcm9jZXNzZXMuMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9jcmwuYXBwbGUuY29tL2FzaTJjYS5jcmwwHQYDVR0OBBYEFOZ4zlkXb7cQR/cLT+pvPHFQLJnMMA4GA1UdDwEB/wQEAwIFIDAPBgkqhkiG92NkBjgEAgUAMA0GCSqGSIb3DQEBCwUAA4IBAQBprYNbqM1kQC4LbDewulx7RUawiksMgCZPw694V2rvpfLuDYRBeaEmkAhwrMq5gYDxmhsmarO/uiz/dfdRfeaHx2mFncwLg+AbaVncl+iX8WBh9q6TsgwZVcxytERz3qOq0iFbjJh71+qg4whwBRJHknBC3gw6lfozB+fqns10J3gWjjo0s2IZSgp9wOdJENfKO4GAMDaddhNB1PR2NVtb8neZri8MJ2Z8Aa4hM0dFwBH/si8aM7bAn/7wGSJKsRBks6VoRhyXzD/aDv+4FkuCnN5bGo+HVrrPoysJFUilcXmD1vQ08wZWsrQsHizZ2hIjED9o/zpcLVt52mptphQS
Analytics
HealthWrap
Client should ensure submission directory is created before using analytics writer
DataAnalytics
JSON
FOO-Payload
Unable to write serialized unencrypted analytics data.
Failed to decode base64 certificate data.
Failed to create certificate.
Error creating analytics directory %@
ClinicalData
ReportAProblem
friend_uuid
energy_burned
energy_burned_goal
move_minutes
move_minutes_goal
activity_move_mode
brisk_minutes
brisk_minutes_goal
active_hours
active_hours_goal
steps
walk_run_distance
snapshot_index
source_uuid
uploaded_date
vulcan_count
vulcan_condition
timezone_offset
fitness_friend_activity_snapshots
HDFitnessFriendActivitySnapshotEntity.m
+[HDFitnessFriendActivitySnapshotEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
HDCloudSyncPrimaryLastPushForwardProgressDate
HDCloudSyncShareOwnerParticipantKey
HDBackstopSyncLastConsiderationDateKey
HDBackstopSyncCompletionNotification
HDBackstopSyncRefusedNotification
HDCloudSyncCircleIdentifier
v16@?0@"<HDCloudSyncManagerObserver>"8
v28@?0@"HDCloudSyncManagerPipelineTask"8B16@"NSError"20
v28@?0@"HDCloudSyncManagerShowTask"8B16@"NSError"20
Sync unavailable before setting a source share participant for profile: %@
v32@?0@"NSPersonNameComponents"8@"NSString"16@"NSError"24
HDCloudSyncManager.m
Unhandled profile type %ld
v40@?0@"NSString"8@"NSString"16Q24@"NSError"32
%@: Failed to create cloud sync container: %@
Shared profile sync is not yet supported.
v24@?0@"NSString"8@"NSString"16
HDCloudSyncManager Sync Preparation
profile is nil
Backstop Cloud Sync
Owner participant is not valid; will not save.
Expected a single repository during share configuration.
Expected only a single repository when attempting to add a sharing participant.
v32@?0@"HDCloudSyncCloudState"8q16@"NSError"24
Remove Sharing Participant
Expected only a single repository when attempting to remove sharing participant.
Fetch share particpants for profile
Expected only a single repository when attempting to fetch all sharing participants.
Expected only a single repository when attempting to leave shares.
v28@?0@"HDCloudSyncManagerAcceptSharesTask"8B16@"NSError"20
Expected only a single repository when attempting to request data upload.
Expected only a single repository when attempting to fetch server preferred push environment.
inProgressSyncCount
Tq,N,V_inProgressSyncCount
preparedDatabaseAccessibilityAssertion
T@"HDAssertion",&,V_preparedDatabaseAccessibilityAssertion
bytesPerChangeRecordAssetThreshold
bytesPerChangeRecordAssetThresholdHardLimit
supportsRebase
TB,R,N,V_supportsRebase
lastSuccessfulPullDate
lastSuccessfulPushDate
_HDSortedSampleIteratorInternalPager.mm
limit > 0 && limit <= 100
B40@?0@"HKSample"8@"HKDeletedObject"16q24^@32
@16@?0@"CKRecordID"8
v24@?0@"CKRecord"8@?<v@?@@>16
Auxiliary Health Store
hasSchema
T@"NSString",&,N,V_schema
Tq,N,V_identifier
com.apple.pairedsync.healthd
HDPairedSyncManager.m
syncSession != nil
full sync
reunion sync
migration sync
limit push
Sync Restriction: %@
Unfinished Sync Sessions:
%@ (%@): %@
pairedSyncCoordinator
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinator
unfinishedSyncSessions
T@"NSHashTable",&,N,V_unfinishedSyncSessions
syncCoordinator
T@"PSYSyncCoordinator",R
HDCloudSyncPipelineStageCheckForRequiredProfileDeletion.m
Profile of type HKProfileTypeTinker is not an HDTinkerProfile %@
Tinker watch revoked access. Deleting profile: %@
quantity_dispensed
preparation_date
hand_over_date
days_supply_quantity
medication_dispense_record_samples
HDMedicationDispenseRecordEntity.m
+[HDMedicationDispenseRecordEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
B24@?0@"HDCloudSyncZoneIdentifier"8@"HDCloudSyncZone"16
Reset for unit testing
ontology unavailable. Check whether CHR accounts are present
journaldb.sqlite
Cannot get identifier for %@
Cannot append data because journal database is not open
HDDatabaseJournalDatabase.m
Cannot enumerate data because journal database is not open
Cannot remove %@ because it is still open
Unable to read schema version
Journal database schema version '%ld' greater than current '%ld'
%@ does not yet support schema migration
CREATE TABLE IF NOT EXISTS key_value_store (key TEXT PRIMARY KEY, value BLOB NOT NULL, modification_date REAL NOT NULL)
CREATE TABLE IF NOT EXISTS unique_strings (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, string TEXT UNIQUE NOT NULL)
CREATE TABLE IF NOT EXISTS entries (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, os_build INTEGER NOT NULL REFERENCES unique_strings (ROWID) ON DELETE CASCADE, class_name INTEGER NOT NULL REFERENCES unique_strings (ROWID) ON DELETE CASCADE, size INTEGER NOT NULL, data BLOB NOT NULL)
INSERT OR IGNORE INTO key_value_store (key, value, modification_date) VALUES (?, ?, ?)
SELECT ROWID FROM unique_strings WHERE string = ?
INSERT INTO unique_strings (string) VALUES (?)
INSERT INTO entries (os_build, class_name, size, data) VALUES (?, ?, ?, ?)
SELECT ROWID, size, data FROM entries WHERE ROWID > ? ORDER BY ROWID ASC
SELECT MAX(ROWID) FROM entries
JournalDatabase-%@
SELECT COUNT(*) FROM sqlite_master
SELECT value, modification_date FROM key_value_store WHERE key = ?
No database identifier has been set
unitTesting_underlyingDatabase
T@"HDSQLiteDatabase",&,N
unitTesting_keyValueDomainOverride
T@"HDKeyValueDomain",&,N,V_unitTesting_keyValueDomainOverride
unitTesting_didCreateDatabaseConnectionHandler
T@?,C,N,V_unitTesting_didCreateDatabaseConnectionHandler
manufacturer
model
hardwareVersion
firmwareVersion
softwareVersion
localIdentifier
FDAUDI
hasManufacturer
T@"NSString",&,N,V_manufacturer
hasModel
T@"NSString",&,N,V_model
hasHardwareVersion
T@"NSString",&,N,V_hardwareVersion
hasFirmwareVersion
T@"NSString",&,N,V_firmwareVersion
hasSoftwareVersion
T@"NSString",&,N,V_softwareVersion
hasLocalIdentifier
T@"NSString",&,N,V_localIdentifier
hasFDAUDI
fDAUDI
T@"NSString",&,N,V_fDAUDI
hasCreationDate
Td,N,V_creationDate
diagnostic_test_codings
reference_ranges
interpretation_codings
body_site_codings
method_codings
diagnostic_test_result_samples
HDDiagnosticTestResultEntity.m
+[HDDiagnosticTestResultEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
@"HDCodableReferenceRange"16@?0@"HKReferenceRange"8
%@://%@/%@
appIsActive
TB,R,N,V_appIsActive
T@"<HDWatchAppStateMonitorDelegate>",W,N,V_delegate
Unknown(%ld)
rebase
seize
HDCloudSyncTarget.m
[container.containerIdentifier isEqualToString:zone.zoneIdentifier.containerIdentifier]
<%@ Target: (%@) [%@] %@ : %@>
container
T@"CKContainer",R,N,V_container
zone
T@"HDCloudSyncZone",R,N,V_zone
T@"HDCloudSyncStoreRecord",R,N,V_storeRecord
T@"HDCloudSyncStore",R,N,V_store
Delete profile called on health store of the same profile.
Cannot delete primary profile.
Display name must not be nil.
NRDevice must not be nil.
HDProfileStoreServer.m
Profile %@ is of type Tinker but is not an instance of type HDTinkerProfile (#t0)
Owner appleID is nil.
v24@?0@"CKShareParticipant"8@"NSError"16
T@"HDProfileManager",R
<%@>
v16@?0@"<HDNanoSyncDescription>"8
restore-id:%@ seq:%@ status:%@
invalid required anchor %@
No sync entity found for %@
spec
%lld -> %lld
TB,R,N,GisSpeculative
syncAnchorRange
T{HDSyncAnchorRange=qq},R,N
T@"NSNumber",R,N
done
encodedByteCount
HDNanoSyncSupport.m
session:%@ status:%@ changes:%@
%@(%lld)
%@ %lld
status:%@ anchors:%@
Changes
Authorization
Authorization Complete
Routine
FitnessFriends
Speculative Changes
Start Workout App
Companion UserNotification
Tinker Pairing
Tinker Opt In
Tinker End to End Cloud Sync
[self messageID] == HDNanoSyncMessageRestore
[self messageID] == HDNanoSyncMessageChanges
activation
changeset
%s %@ %s %@ %@
incoming
outgoing
<%@:%p>
v52@?0@"HKQuantity"8@"HKQuantityType"16@"NSDateInterval"24@"HKQuantitySample"32@"NSNumber"40B48
HDContributorReference.m
persistentID == nil || uuid == nil
<%@:%p %@, %@, %@>
contributorType
Tq,R,N,V_contributorType
T@"NSNumber",R,C,N,V_persistentID
No Contributor
Primary User
FFFF
application
hasApplication
Ti,N,V_application
ActivityMonitorApp
HDConceptIndexManagerNewRecordsNotification
HDConceptIndexManager.m
blockDispatcher
batchSize
concept-index-scheduler-observers
v16@?0@"<HDConceptIndexManagerObserver>"8
v28@?0q8B16@"NSError"20
Nil profile when attempting to enable index manager
Invalidating request received
Samples added
Samples removed
conceptIndexer
T@"HDConceptIndexer",R,N,V_conceptIndexer
currentExecutionState
criticalFailureOnError
TB,N,V_criticalFailureOnError
expectedSendSize
Tq,N,V_expectedSendSize
expectedReceiveSize
Tq,N,V_expectedReceiveSize
Missing default %@
CurrentRevisionAnchor
CurrentMedicalIDSyncProvenance
MedicalIDDomain
q40@?0@"HDDatabaseMigrator"8@"HDDatabaseMigrationTransaction"16q24^@32
HDDatabaseMigrationStep.m
(schemaName != nil) || (requiredPrimarySchemaVersion == HDSQLiteRequiredPrimarySchemaVersionAny)
<%@ %@: -> %ld (requiring: %ld) foreign keys %@>
migrationHandler
T@?,R,C,N,V_migrationHandler
finalSchemaVersion
Tq,R,N,V_finalSchemaVersion
foreignKeyStatus
Tq,N,V_foreignKeyStatus
T@"NSString",R,C,N,V_schemaName
requiredPrimarySchemaVersion
Tq,R,N,V_requiredPrimarySchemaVersion
retry
in progress
requires write
delete database
<UNKNOWN>
totalAchievementCount
moreThanOneYearSinceActivitySetup
totalOTAAchievementCount
totalOTAAchievementViewedCount
hasTotalAchievementCount
Ti,N,V_totalAchievementCount
hasMoreThanOneYearSinceActivitySetup
TB,N,V_moreThanOneYearSinceActivitySetup
hasTotalOTAAchievementCount
Ti,N,V_totalOTAAchievementCount
hasTotalOTAAchievementViewedCount
Ti,N,V_totalOTAAchievementViewedCount
LessThan_2
Range_2_5
Range_6_10
MoreThan_10
tbl_name
index
trigger
sqlite_master
Received nil for non-nil field 'diagnosticTestCodings'
Received nil for non-nil field 'category'
_HKCDADocumentSampleComparisonFilter+HealthDaemon.m
_WorkoutConfigurationActivityTypeKey
_WorkoutConfigurationIndoorKey
_WorkoutConfigurationGoalTypeKey
_WorkoutConfigurationGoalKey
_WorkoutConfigurationStartTimeKey
_WorkoutConfigurationEndTimeKey
_WorkoutConfigurationKCalRateKey
_WorkoutConfigurationDistanceWalkingRateMilesKey
_WorkoutConfigurationDistanceCyclingRateMilesKey
_WorkoutConfigurationDistanceSwimmingRateYardsKey
_WorkoutConfigurationNumSwimmingSegmentsKey
_WorkoutConfigurationSwimmingSwimSegmentTimeKey
_WorkoutConfigurationSwimmingRestSegmentTimeKey
_WorkoutConfigurationSwimmingNumLapsPerSegmentKey
_WorkoutConfigurationSwimmingStrokeStyleKey
TQ,N,V_activityType
indoor
TB,N,V_indoor
kcalRate
Td,N,V_kcalRate
distanceWalkingRateInMiles
Td,N,V_distanceWalkingRateInMiles
distanceCyclingRateInMiles
Td,N,V_distanceCyclingRateInMiles
distanceSwimmingRateInYards
Td,N,V_distanceSwimmingRateInYards
distanceSwimmingSegmentInYards
Td,N,V_distanceSwimmingSegmentInYards
numSwimmingSegments
Tq,N,V_numSwimmingSegments
swimmingNumLapsPerSegment
Tq,N,V_swimmingNumLapsPerSegment
swimmingSwimSegmentTime
Td,N,V_swimmingSwimSegmentTime
swimmingRestSegmentTime
Td,N,V_swimmingRestSegmentTime
sessionStateController
T@"<HDWorkoutSessionStateController>",R,W,N,V_sessionStateController
Workout Heart Rate Recovery
Td,N,V_endDate
Td,N,V_startDate
object_uuid
DELETE FROM %@ WHERE %@ = ? AND %@ = ?
workout_builder_associated_objects
HDNotificationManager.m
granted
not granted
NEW_ELECTROCARDIOGRAM_NOTIFICATION_TITLE
Localizable-Cinnamon
NEW_ELECTROCARDIOGRAM_NOTIFICATION_BODY
com.apple.private.health.heartrhythm.phoneonly
Unsupported companion notification type.
v24@?0@8@"NSError"16
deprecated
%@: %@
Last notification since boot: %@
Badge counts: %@
Invalid format options string (must begin with '{').
Invalid format options string (no terminating } found).
Invalid format options string (no : separator after index).
Invalid format string (no positive number indicator character after +)
Invalid format string (no padding character after p)
Invalid format string (unexpected formatting specifier)
<{0}: {1:x}>
valueInCanonicalUnit
valueInOriginalUnit
originalUnitString
final
mostRecent
mostRecentDate
quantitySeriesData
mostRecentDuration
hasValueInCanonicalUnit
Td,N,V_valueInCanonicalUnit
hasValueInOriginalUnit
Td,N,V_valueInOriginalUnit
hasOriginalUnitString
T@"NSString",&,N,V_originalUnitString
hasFrozen
TB,N,V_frozen
hasCount
Tq,N,V_count
hasFinal
TB,N,V_final
hasMin
Td,N,V_min
hasMax
Td,N,V_max
hasMostRecent
Td,N,V_mostRecent
hasMostRecentDate
Td,N,V_mostRecentDate
quantitySeriesDatas
T@"NSMutableArray",&,N,V_quantitySeriesDatas
hasMostRecentDuration
Td,N,V_mostRecentDuration
HDSynchronousTaskGroup.m
resultCount >= 0
taskCount
T@"<HDSynchronousTaskGroupDelegate>",W,V_delegate
didFinish
T@?,C,V_didFinish
Failed to decode onboarding completion due to missing UUID
Failed to decode onboarding completion due to missing modification date
Failed to decode onboarding completion due to missing featureIdentifier
Failed to decode onboarding completion due to missing version
Invalid value %@ of class %@
locationUUID
locationType
uncertaintyMillis
confidenceMillis
recentVisitCount
hasLocationUUID
T@"NSString",&,N,V_locationUUID
hasLocationType
Ti,N,V_locationType
hasUncertaintyMillis
Tq,N,V_uncertaintyMillis
hasConfidenceMillis
Tq,N,V_confidenceMillis
hasRecentVisitCount
Tq,N,V_recentVisitCount
cacheIndex
activeHours
walkingAndRunningDistance
energyBurnedGoalDate
deepBreathingDuration
pushCount
flightsClimbed
wheelchairUse
dailyEnergyBurnedStatistics
dailyBriskMinutesStatistics
briskMinutesGoal
activeHoursGoal
moveMinutes
moveMinutesGoal
moveMinutesGoalDate
dailyMoveMinutesStatistics
briskMinutesGoalDate
activeHoursGoalDate
activityMoveMode
hasCacheIndex
Tq,N,V_cacheIndex
Td,N,V_energyBurned
Td,N,V_briskMinutes
hasActiveHours
Td,N,V_activeHours
hasStepCount
Tq,N,V_stepCount
Td,N,V_energyBurnedGoal
hasWalkingAndRunningDistance
Td,N,V_walkingAndRunningDistance
hasEnergyBurnedGoalDate
Td,N,V_energyBurnedGoalDate
hasDeepBreathingDuration
Td,N,V_deepBreathingDuration
hasPushCount
Tq,N,V_pushCount
hasFlightsClimbed
Tq,N,V_flightsClimbed
hasWheelchairUse
Tq,N,V_wheelchairUse
T@"NSMutableArray",&,N,V_dailyEnergyBurnedStatistics
T@"NSMutableArray",&,N,V_dailyBriskMinutesStatistics
hasBriskMinutesGoal
Td,N,V_briskMinutesGoal
hasActiveHoursGoal
Td,N,V_activeHoursGoal
hasMoveMinutes
Td,N,V_moveMinutes
hasMoveMinutesGoal
Td,N,V_moveMinutesGoal
hasMoveMinutesGoalDate
Td,N,V_moveMinutesGoalDate
T@"NSMutableArray",&,N,V_dailyMoveMinutesStatistics
hasBriskMinutesGoalDate
Td,N,V_briskMinutesGoalDate
hasActiveHoursGoalDate
Td,N,V_activeHoursGoalDate
hasActivityMoveMode
Tq,N,V_activityMoveMode
Td,R,N,V_endTime
d16@?0@"HDDatabaseTransactionStatistics"8
%.1lf
@"NSString"16@?0@"HDDatabaseTransactionStatistics"8
%.0lfms [ %@ ]
transactions
totalDuration
shortDescription
<%@: aggregator: %@, identifier: %@, configuration: %@, hasSetLastSensorDatum: %@, lastSensorDatum: %@>
aggregator
T@"HDDataAggregator",R,N,V_aggregator
T@"NSString",R,C,N,V_identifier
T@"HDDataCollectorConfiguration",&,N,V_configuration
lastSensorDatum
T@"<HDCollectedSensorDatum>",C,N,V_lastSensorDatum
hasSetLastSensorDatum
TB,R,N,V_hasSetLastSensorDatum
v32@?0@"HKObjectType"8@"HDDataAggregator"16^B24
aggregatorsByType: %@
recordsByAggregator: %@
T@"HDCodableMedicalDate",&,N,V_startDate
T@"HDCodableMedicalDate",&,N,V_endDate
system
hasSystem
T@"NSString",&,N,V_system
hasVersion
T@"NSString",&,N,V_version
[8.0, 8.2)
[8.2, 9.0)
UnknownBuild
UnknownDevice
contributor_reference
os_major_version
os_minor_version
os_patch_version
<%@:%p syncProvenance=%ld, productType=%@, systemBuild=%@, timeZone=%@, sourceID=%@, deviceID=%@, contributorReference=%@, sourceVersion=%@ operatingSystemVersion=%@>
systemBuild
T@"NSString",C,N,V_systemBuild
operatingSystemVersion
T{?=qqq},N,V_operatingSystemVersion
timeZoneName
T@"NSString",C,N,V_timeZoneName
T@"NSNumber",&,N,V_sourceID
deviceID
T@"NSNumber",&,N,V_deviceID
contributorReference
T@"HDContributorReference",&,N,V_contributorReference
hdt_date
hdt_mets
hdt_active
hdt_basal
hdt_recordID
hdt_source
handleQueryDataSinceRecord
T@?,C,N,V_handleQueryDataSinceRecord
handleStartNatalimetryUpdates
T@?,C,N,V_handleStartNatalimetryUpdates
handleStopNatalimeteryUpdates
T@?,C,N,V_handleStopNatalimeteryUpdates
blockHeader.blockLength == destination.size()
retrieveBlock
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.25.2/HealthKit/HealthDaemon/Database/HighFrequencyData/HDBlockAccessFile.cpp
blockHeader.blockLength {0} differs from destination.size() {1}
blockHeader.blockLength == pointer.length
blockHeader.blockLength {0} does not match pointer.length {1}.
blockHeader.checksum == destination.checksum()
Block checksum {0} does not match retrieved buffer checksum {1}
pointer.length == destination.size()
Attempt to retrieve a block of length {0} into a buffer of size {1}.
Header has invalid magic word {0} (expected {1})
Header has invalid version {0} (expected {1})
Header's internal reported length {0} does not match expected header length {1}
!left.overlaps(right)
_computeFreeSpaceExtents
Found overlapping free space extents {0} and {1}
blockHeader.blockLength == updatedData.size()
updateBlock
blockHeader.blockLength {0} differs from updatedData.size() {1}
pointer.length == updatedData.size()
Attempt to update a block of length {0} from a buffer of size {1}.
Block access file header appears to be corrupted (invalid magic word).
!extent.overlaps(*i)
({0}, {1})
length <= _length
appendBytes
_HDMaintenanceWorkCoordinatorSuspensionAssertion;
MaintenanceWorkQueue
work
suspended
isExecuting
isFinished
executing
TB,GisExecuting,Vexecuting
TB,GisFinished,Vfinished
completionDate
hasFeatureIdentifier
T@"NSString",&,N,V_featureIdentifier
Tq,N,V_version
hasCompletionDate
Td,N,V_completionDate
hasCountryCode
T@"NSString",&,N,V_countryCode
connection.%@.%d
Requested server configuration is invalid.
Requested server configuration does not match existing server configuration.
Unauthorized use of source bundle identifier "%@"
T@"HDXPCClient",R,N,V_client
server
T@"HDHealthStoreServer",R,N,V_server
T@"HKProfileIdentifier",R,N
T@"NSError",R,N,V_error
FHIRResource
hasDisplayName
T@"NSString",&,N,V_displayName
hasFHIRResource
fHIRResource
T@"HDCodableFHIRResourceForAPI",&,N,V_fHIRResource
Ocean Spray Cranberry Juice
Cranberry juice
Tropicana Orange Juice
Orange juice
Odwalla C Monster
Health drink
Milk
Coffee
Quaker Instant Oatmeal Regular with Milk
Instant oatmeal with milk
Quaker Instant Oatmeal Apple Cinnamon with Milk
Flavored instant oatmeal with milk
Quaker Instant Oatmeal Maple with Milk
Life Cereal with Milk
Cereal with milk
TOTAL Cereal with Milk
Jimmy Dean Breakfast Croissant
Breakfast croissant
Trader Joes Breakfast Burrito
Breakfast burrito
McDonalds Big Mac
Fast food burger
McDonalds McDouble
McDonalds McChicken Sandwich
Fast food chicken sandwich
McDonalds Caesar Salad with Grilled Chicken
Fast food caesar salad with grilled chicken
McDonalds Greek Salad with Crispy Chicken
Fast food greek salad with crispy chicken
Trader Joes Butter Chicken with Basmata Rice
Chicken with rice
Trader Joes Chicken and Green Chile Tomales
Chicken and green chile tomales
Deli sandwich with black forest ham
Deli sandwich with veggies
Subway Veggie Delight Salad
Veggie salad
Bumble Bar with Almond
Energy bar
Hershey Bar with Almond
Candy bar
Clif Bar - Choco Fudge with Almond
Apple
Fruit
Crackers - Gluten Free Multigrain
Multigrain crackers
Crackers - Triscuits
Crackers
Keebler Animal Crackers
Animal crackers
Oikos Yogurt
Yogurt
Red Lobster - Tilapia with Roasted Vegetables
Tilapia with roasted vegetables
Livemain Lobster with Corn and Potatoes
Lobster with corn and potatoes
Olive Garden - Garlic Rosemary Chicken
Restaraunt dinner - chicken
Olive Garden - Baked Tilapia with Shrimp
Restaraunt dinner - tilapia with shrimp
Olive Garden - Citrus Chicken Sorrento
Restaraunt dinner - chicken with cheese and eggplant
Olive Garden - Rosemary Chicken
Restaraunt dinner - fancy chicken
Olive Garden - Herb Grilled Salmon
Restaraunt dinner - fancy fish
Olive Garden - Chicken Scampi
Restaraunt dinner - fancy chicken #2
Olive Garden - Chicken and Shrimp Carbonara
Restaraunt dinner - fancy chicken and shrimp
dietaryNutrientDailyValues
T@"NSDictionary",C,N,V_dietaryNutrientDailyValues
canonicalDietaryUnits
T@"NSDictionary",C,N,V_canonicalDietaryUnits
beverages
T@"NSArray",C,N,V_beverages
breakfastFoods
T@"NSArray",C,N,V_breakfastFoods
lunchFoods
T@"NSArray",C,N,V_lunchFoods
snackFoods
T@"NSArray",C,N,V_snackFoods
dinnerFoods
T@"NSArray",C,N,V_dinnerFoods
assertionType
assertionDate
reasonForUseCodings
notTaken
reasonsNotTakenCodings
hasAssertionType
Tq,N,V_assertionType
hasAssertionDate
T@"NSData",&,N,V_assertionDate
hasReasonForUseCodings
T@"HDCodableMedicalCodingList",&,N,V_reasonForUseCodings
hasNotTaken
TB,N,V_notTaken
hasReasonsNotTakenCodings
T@"HDCodableMedicalCodingListList",&,N,V_reasonsNotTakenCodings
SELECT data_id FROM protected.data_series
workout_session_events
reponse-status
sync.finished
optionPullRequest
optionsLastChange
optionsActiveOnly
optionsRequestedByRemote
@"NSMutableDictionary"8@?0
com.apple.healthd.sync.nano.%@
pendingOwnerIdentifier
hasPendingOwnerIdentifier
T@"NSString",&,N,V_pendingOwnerIdentifier
hasOrder
Tq,N,V_order
T@"NSData",&,N,V_storeIdentifier
hasDeviceMode
Ti,N,V_deviceMode
hasSupportedProtocolVersion
Ti,N,V_supportedProtocolVersion
hasRequiredProtocolVersion
Ti,N,V_requiredProtocolVersion
hasSystemBuildVersion
T@"NSString",&,N,V_systemBuildVersion
hasDeviceName
T@"NSString",&,N,V_deviceName
Tigris
Yukon
hasKeyPath
T@"NSString",&,N,V_keyPath
Unsupported operator type in comparison expression: %@
Expected constant value in right side of comparison expression: %@
blob
double
integer
Expected constant value of type %@, received %@
Constant value %@ not matching any expected type
unit_string
SELECT ROWID FROM protected.unit_strings WHERE unit_string=?
INSERT INTO protected.unit_strings (unit_string) VALUES (?)
unit_strings
poorTiming
alreadyDoing
hasPoorTiming
TB,N,V_poorTiming
hasAlreadyDoing
TB,N,V_alreadyDoing
allergyCodings
onsetDate
criticalityCoding
lastOccurenceDate
hasAllergyCodings
T@"HDCodableMedicalCodingList",&,N,V_allergyCodings
hasOnsetDate
T@"NSData",&,N,V_onsetDate
hasReactions
T@"HDCodableAllergyReactionList",&,N,V_reactions
hasCriticalityCoding
T@"HDCodableMedicalCoding",&,N,V_criticalityCoding
hasLastOccurenceDate
T@"NSData",&,N,V_lastOccurenceDate
unit
hasUnit
T@"NSString",&,N,V_unit
FitnessMachineSessionUUID
T@"<HDFitnessMachinePairingManagerDelegate>",W,N,V_delegate
template_unique_name
completed_date
fitness_friend_achievements
HDFitnessFriendAchievementEntity.m
+[HDFitnessFriendAchievementEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
+[%@ %@] not implemented
Nil healthDatabase
HDHealthEntity.mm
[properties count] > 0
enumerationHandler != NULL
v16@?0^{HDSQLiteStatementBinder=^{sqlite3_stmt}{unordered_map<const char *, int, HDSQLiteStatementBinder::_Hash, HDSQLiteStatementBinder::_Comparison, std::__1::allocator<std::__1::pair<const char *const, int> > >={__hash_table<std::__1::__hash_value_type<const char *, int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteStatementBinder::_Hash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteStatementBinder::_Comparison, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteStatementBinder::_Hash, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteStatementBinder::_Comparison, true> >=f}}}{unordered_set<const char *, HDSQLiteStatementBinder::_Hash, HDSQLiteStatementBinder::_Comparison, std::__1::allocator<const char *> >={__hash_table<const char *, HDSQLiteStatementBinder::_Hash, HDSQLiteStatementBinder::_Comparison, std::__1::allocator<const char *> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<const char *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const char *, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<const char *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const char *, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<const char *, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const char *, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const char *, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<const char *, void *> *>, std::__1::allocator<std::__1::__hash_node<const char *, void *> > >={__hash_node_base<std::__1::__hash_node<const char *, void *> *>=^{__hash_node_base<std::__1::__hash_node<const char *, void *> *>}}}{__compressed_pair<unsigned long, HDSQLiteStatementBinder::_Hash>=Q}{__compressed_pair<float, HDSQLiteStatementBinder::_Comparison>=f}}}}8
UPDATE %@ SET 
%@ = %@ + ?%s
HDPluginManager.m
daemon != nil
/System/Library/Health/Plugins
/AppleInternal/Library/Health/Plugins
@16@?0#8
Plugins not loaded when looking up plugins for protocol. Plugins should have been loaded during init; what happened?
bundle
@16@?0@"Protocol"8
T@"HDDaemon",W,N,V_daemon
allowablePluginDirectoryPaths
T@"NSArray",C,N,V_allowablePluginDirectoryPaths
location
arrivalDate
hasLocation
T@"HDAWDHealthKitRoutineLocation",&,N,V_location
hasArrivalDate
Tq,N,V_arrivalDate
HDDemoDataHeartSampleGeneratorNextElectrocardiogramSampleTimeKey
HDDemoDataHeartSampleGeneratorNextElectrocardiogramClassificationKey
HDDemoDataHeartSampleGeneratorNextRestingHeartRateSampleTimeKey
HDDemoDataHeartSampleGeneratorNextWalkingHeartRateAverageSampleTimeKey
HDDemoDataHeartSampleGeneratorLastRestingHeartRateSampleKey
HDDemoDataHeartSampleGeneratorLastWalkingHeartRateAverageSampleKey
nextElectrocardiogramSampleTime
Td,N,V_nextElectrocardiogramSampleTime
nextElectrocardiogramClassification
TQ,N,V_nextElectrocardiogramClassification
nextRestingHeartRateSampleTime
Td,N,V_nextRestingHeartRateSampleTime
nextWalkingHeartRateAverageSampleTime
Td,N,V_nextWalkingHeartRateAverageSampleTime
lastRestingHeartRate
Td,N,V_lastRestingHeartRate
lastWalkingHeartRateAverage
Td,N,V_lastWalkingHeartRateAverage
quantity_type
calculator
Unable to deserialize statistics with improper quantity type code %lld
insert
finish
discard
@"NSString"16@?0@"NSNumber"8
Current state "%@" is not in allowed state(s) %@ for action %@
unitTest_saveSamplesCompletion
T@?,C,N,V_unitTest_saveSamplesCompletion
NotStarted
WaitingToDiscard
ReadyToDiscard
Discarded
WaitingToFinish
ReadyToFinish
FatalError
Unknown state (%ld)
Nil query server identifier
Nil query UUID
Query '%@' already exists
Query manager unavailable
v32@?0@"NSUUID"8@"NSArray"16@"NSError"24
T@"HDHealthStoreServer",R,W,N,V_server
sessionStartDate
sessionError
hasSessionUUID
T@"NSData",&,N,V_sessionUUID
hasSessionStartDate
Td,N,V_sessionStartDate
hasSessionError
T@"HDCodableError",&,N,V_sessionError
HDWorkoutSessionAssertionIdentifierAlertSuppression
HDWorkoutSessionAssertionIdentifierBackgroundRunning
HDWorkoutSessionAssertionIdentifierCoreMotion
HDWorkoutSessionAssertionIdentifierEventCollection
HDWorkoutSessionAssertionIdentifierHeartRateRecovery
HDWorkoutSessionAssertionIdentifierPlatinum
HDWorkoutSessionAssertionIdentifierPowerSavingMode
HDWorkoutSessionAssertionIdentifierQuietMode
HDWorkoutSessionAssertionIdentifierLocationUpdating
deletion_date
clinical_deleted_accounts
-[HDActivityCacheDataSource _updateStatisticsBuildersWithError:]
SELECT o.%@, o.%@, s.%@, s.%@, s.%@, object_provenances.%@, (object_provenances.%@ LIKE '%%Watch%%'), object_provenances.%@, c.%@, workouts.activity_type FROM %@ s INNER JOIN %@ o USING (%@) INNER JOIN %@ object_provenances on (o.%@ = object_provenances.rowid) LEFT JOIN %@ c USING (%@) LEFT JOIN %@ workouts USING (%@) WHERE o.%@ = ? AND s.%@ IN (%@) AND s.%@ > ? AND s.%@ < ? AND s.%@ > ? AND +o.%@ > ? GROUP BY o.%@ ORDER BY s.%@ ASC, o.%@ ASC;
SELECT o.%@, s.%@, workout_objects.rowid, s.%@, s.%@, qs.%@, qss.%@, object_provenances.%@, metadata_values.numerical_value as hr_context FROM %@ qs INNER JOIN %@ s USING (%@) INNER JOIN %@ o USING (%@) INNER JOIN %@ object_provenances on (o.%@ = object_provenances.rowid) LEFT JOIN %@ qss USING (%@) LEFT JOIN %@ c on (c.%@ = o.%@) LEFT JOIN %@ workout_objects on (workout_objects.rowid = c.%@) LEFT JOIN %@ metadata_values on ((metadata_values.%@ = qs.%@) AND (metadata_values.key_id IN (SELECT rowid FROM %@ WHERE %@ = ?)))WHERE o.%@ = ? AND s.%@ IN (%@) AND s.%@ > ? AND s.%@ < ? AND s.%@ > ? AND qss.%@ IS NULL AND +qs.%@ > ? ORDER BY s.%@ ASC, o.%@ ASC;
B28@?0d8d16f24
targetDayStatisticsBuilder
T@"HDActivityCacheStatisticsBuilder",R,N,V_targetDayStatisticsBuilder
previousDayStatisticsBuilder
T@"HDActivityCacheStatisticsBuilder",R,N,V_previousDayStatisticsBuilder
targetDayHeartRateStatisticsBuilder
T@"HDActivityCacheHeartRateStatisticsBuilder",R,N,V_targetDayHeartRateStatisticsBuilder
previousDayHeartRateStatisticsBuilder
T@"HDActivityCacheHeartRateStatisticsBuilder",R,N,V_previousDayHeartRateStatisticsBuilder
observedQuantityTypes
T@"NSSet",R,N,V_observedQuantityTypes
targetDayDateInterval
T@"NSDateInterval",&,N,V_targetDayDateInterval
previousDayDateInterval
T@"NSDateInterval",&,N,V_previousDayDateInterval
targetDayCacheIndex
Tq,N,V_targetDayCacheIndex
previousDayCacheIndex
Tq,N,V_previousDayCacheIndex
targetDayStatisticsBuilderTag
T@"NSString",&,N,V_targetDayStatisticsBuilderTag
previousDayStatisticsBuilderTag
T@"NSString",&,N,V_previousDayStatisticsBuilderTag
%@:%p
Alarms
Pending Events
<%@:%p name:%@ fireDate:%@ isUserVisible:%d>
fireDate
T@"NSDate",R,C,N,V_fireDate
isUserVisible
TB,R,N,V_isUserVisible
com.apple.alarm
UserVisible
Date
continuationUUID
locationData
hasContinuationUUID
T@"NSData",&,N,V_continuationUUID
locationDatas
T@"NSMutableArray",&,N,V_locationDatas
Revoke access for all share participants called on tinker profile.
Tear down health sharing not called on primary profile participant manager.
No profile for identifier %@.
Tear down health sharing called for primary profile.
HDDemoDataBodySampleGeneratorNextHeightSampleTimeKey
HDDemoDataBodySampleGeneratorNextWeightSampleTimeKey
HDDemoDataBodySampleGeneratorLastHeightInCmKey
HDDemoDataBodySampleGeneratorLastWeightInKgKey
HDDemoDataBodySampleGeneratorWeightAdultStartInKgKey
CDCGrowthCurves50thPercentile
boysHeightBirthTo36MonthsGrowthCurve
boysHeight2To20YearsGrowthCurve
boysWeightBirthTo36MonthsGrowthCurve
boysWeight2To20YearsGrowthCurve
girlsHeightBirthTo36MonthsGrowthCurve
girlsHeight2To20YearsGrowthCurve
girlsWeightBirthTo36MonthsGrowthCurve
girlsWeight2To20YearsGrowthCurve
plist
T@"NSArray",C,N,V_boysHeightBirthTo36MonthsGrowthCurve
T@"NSArray",C,N,V_boysHeight2To20YearsGrowthCurve
T@"NSArray",C,N,V_boysWeightBirthTo36MonthsGrowthCurve
T@"NSArray",C,N,V_boysWeight2To20YearsGrowthCurve
T@"NSArray",C,N,V_girlsHeightBirthTo36MonthsGrowthCurve
T@"NSArray",C,N,V_girlsHeight2To20YearsGrowthCurve
T@"NSArray",C,N,V_girlsWeightBirthTo36MonthsGrowthCurve
T@"NSArray",C,N,V_girlsWeight2To20YearsGrowthCurve
nextHeightSampleTime
Td,N,V_nextHeightSampleTime
nextWeightSampleTime
Td,N,V_nextWeightSampleTime
lastHeightInCm
Td,N,V_lastHeightInCm
lastWeightInKg
Td,N,V_lastWeightInKg
weightAdultStartInKg
Td,N,V_weightAdultStartInKg
deletionDate
hasSyncIdentifier
T@"NSData",&,N,V_syncIdentifier
hasDeletionDate
Td,N,V_deletionDate
Unable to find location series %@ during data insert.
HDLocationSeriesSampleEntity.mm
Unable to add data to a frozen series.
Series contains no data.
Failed to lookup HFD series for location sample.
%@ - insert %lld location datums into %@
seriesIdentifier
T@"NSUUID",R,C,N,V_seriesIdentifier
T@"NSArray",R,C,N,V_data
History contains no samples.
Tree contains no values.
Message send for codable representation reported error status without specifying an error.
HDHealthOntologyConfiguration.m
HDHealthOntologyCountryConfiguration does not have `countryCode` despite it being non-nullable
http://hl7.org/fhir/allergy-intolerance-category
http://hl7.org/fhir/allergy-intolerance-criticality
http://hl7.org/fhir/allergy-intolerance-status
http://hl7.org/fhir/allergy-intolerance-type
http://hl7.org/fhir/condition-category
http://hl7.org/fhir/condition-clinical
http://hl7.org/fhir/condition-severity
http://hl7.org/fhir/condition-ver-status
http://hl7.org/fhir/diagnostic-report-status
http://hl7.org/fhir/diagnostic-service-sections
http://hl7.org/fhir/immunization-reason
http://hl7.org/fhir/immunization-route
http://hl7.org/fhir/immunization-site
http://hl7.org/fhir/medication-admin-status
http://hl7.org/fhir/medication-dispense-status
http://hl7.org/fhir/medication-order-status
http://hl7.org/fhir/medication-statement-status
http://hl7.org/fhir/no-immunization-reason
http://hl7.org/fhir/observation-category
http://hl7.org/fhir/observation-status
http://hl7.org/fhir/observation-valueabsentreason
http://hl7.org/fhir/procedure-category
http://hl7.org/fhir/procedure-followup
http://hl7.org/fhir/procedure-not-performed-reason
http://hl7.org/fhir/procedure-outcome
http://hl7.org/fhir/procedure-status
http://hl7.org/fhir/reaction-event-severity
http://hl7.org/fhir/reason-medication-not-given-codes
http://hl7.org/fhir/referencerange-meaning
http://hl7.org/fhir/CodeSystem/medication-statement-status
http://hl7.org/fhir/CodeSystem/medicationrequest-status
http://hl7.org/fhir/device-status
http://hl7.org/fhir/devicestatus
http://hl7.org/fhir/event-status
http://hl7.org/fhir/fm-status
http://terminology.hl7.org/CodeSystem/condition-clinical
http://terminology.hl7.org/CodeSystem/condition-ver-status
http://terminology.hl7.org/CodeSystem/coverage-class
http://terminology.hl7.org/CodeSystem/coverage-selfpay
http://terminology.hl7.org/CodeSystem/medication-statement-category
http://terminology.hl7.org/CodeSystem/medicationdispense-status
http://terminology.hl7.org/CodeSystem/medicationrequest-category
http://terminology.hl7.org/CodeSystem/medicationrequest-status-reason
http://terminology.hl7.org/CodeSystem/v3-ActCode
countryConfigurations
T@"NSDictionary",R,C,N,V_countryConfigurations
allCountryConfigurations
quantity_sample_series
%@ IS NOT NULL
unfrozen
IFNULL(%@, %@)
IFNULL(%@ + %@, %@)
INSERT INTO protected.quantity_sample_series (data_id, count, insertion_era, hfd_key) VALUES (?, ?, ?, (COALESCE((SELECT MAX(hfd_key) + 1 FROM protected.quantity_sample_series), 1)))
@"HKCodableQuantitySeriesDatum"16@?0@"HDCodableQuantitySeriesDatum"8
HDQuantitySampleSeriesEntity.mm
values != nil
SELECT insertion_era FROM protected.quantity_sample_series WHERE data_id = ?
Unable to lookup %@ and %@ for %@ with persistentID %lld
Cannot insert datum (%@) because it occurs before the series start time (%f)
Cannot insert datum (%@) because it has an invalid negative duration
Cannot insert datum (%@) because duration is too short. Minimum required duration for sample type %@ is %f
SELECT %@ FROM %@ WHERE ((%@ IS NOT NULL) AND (%@ != ?) AND ((%@ > 0) OR (ABS(? + %@) > ?)))
[existingObject isKindOfClass:[HKQuantitySample class]]
[replacementObject isKindOfClass:[HKQuantitySample class]]
v32@?0d8d16q24
Cannot freeze series %@ because the first quantity time (%f) is before the sample start time (%f)
Cannot freeze series %@ because the specifed sample endTime (%f) is not a number
Cannot freeze series %@ because the specifed sample endTime (%f) is before the last quantity end time (%f)
Cannot freeze series %@ because the series start date (%@) and specified endDate (%@) exceed the maximum allowed duration for sample type (%@)
Cannot freeze series %@ because the duration between the series start date (%@) and specified endDate (%@) falls below the minimum allowed duration for sample type (%@)
No statistics for quantity sample series with HFDKey (%lld)
Could not find frozen series with ID %@
@"NSDate"16@?0@"NSDateInterval"8
no-V1-data
Failed to insert frozen series during merge operation.
Failed to lookup frozen series entity during merge operation.
No quantity series sample found with UUID "%@"
Unable to find quantity series '%@'
T@"NSUUID",R,C,N,V_frozenIdentifier
endTime >= startTime
unable to access sample history to compute first end time (v1) for (%lld, %lld)
unable to access sample history during enumeration for (%lld, %lld)
unable to access sample history during bounded enumeration for (%lld, %lld)
unable to access sample history toc ompute first end time for (%lld, %lld)
node.childCount > 0
_removeValueForKeyWithLeafChildren
Attempt to remove from empty interior node.
result == RemovalResult::MergeRequired
Unexpected removal result {0} after handling non-merge cases.
deleteElementAtIndex
index + count <= Length
insertSpaceForElementsAtIndex
Array too small for requested space.
startingIndex + count <= Length
deleteElementsInRange
Delete would overflow array bounds.
_removeValueForKeyWithInteriorChildren
unable to access sample history for codable generation for (%lld, %lld)
generate
nodes
keys
HDSimpleGraphDatabase.m
_database
PRAGMA encoding="UTF-8";
PRAGMA page_size = 2048;
DELETE FROM %@ WHERE rowid IN (
SELECT COUNT(*) FROM %@;
CREATE TABLE IF NOT EXISTS metadata (rowid INTEGER PRIMARY KEY, key TEXT UNIQUE, value TEXT)
CREATE TABLE IF NOT EXISTS nodes (rowid INTEGER PRIMARY KEY, name TEXT)
CREATE TABLE IF NOT EXISTS relationships (rowid INTEGER PRIMARY KEY, subject_id INTEGER, name_id INTEGER, object_id INTEGER, FOREIGN KEY (subject_id) REFERENCES nodes(rowid) ON DELETE CASCADE, FOREIGN KEY (name_id) REFERENCES relationship_names(rowid), FOREIGN KEY (object_id) REFERENCES nodes(rowid) ON DELETE CASCADE, UNIQUE (subject_id, name_id, object_id))
CREATE TABLE IF NOT EXISTS relationship_names (rowid INTEGER PRIMARY KEY, name TEXT UNIQUE)
CREATE TABLE IF NOT EXISTS keys (rowid INTEGER PRIMARY KEY, name TEXT UNIQUE)
CREATE TABLE IF NOT EXISTS value_types (rowid INTEGER PRIMARY KEY, name TEXT)
CREATE UNIQUE INDEX IF NOT EXISTS uvalue_types ON value_types (name COLLATE NOCASE)
CREATE TABLE IF NOT EXISTS attributes (rowid INTEGER PRIMARY KEY, node_id INTEGER, key_id INTEGER, value TEXT, value_type_id INTEGER, FOREIGN KEY (node_id) REFERENCES nodes(rowid) ON DELETE CASCADE, FOREIGN KEY (key_id) REFERENCES keys(rowid), FOREIGN KEY (value_type_id) REFERENCES value_types(rowid), UNIQUE (node_id, key_id, value))
INSERT OR REPLACE INTO keys (rowid, name) VALUES (1, 'Version')
INSERT OR REPLACE INTO keys (rowid, name) VALUES (2, 'has ad-hoc concept code')
INSERT OR REPLACE INTO keys (rowid, name) VALUES (3, 'has-display-name')
INSERT OR REPLACE INTO keys (rowid, name) VALUES (1012, 'Has preferred name')
INSERT OR REPLACE INTO relationship_names (rowid, name) VALUES (10, 'is associated with')
INSERT OR REPLACE INTO relationship_names (rowid, name) VALUES (11, 'was associated with')
INSERT OR REPLACE INTO value_types (rowid, name) VALUES (1014, 'String')
CREATE INDEX IF NOT EXISTS relationship_parent_lookup_idx ON relationships (object_id, subject_id, rowid);
CREATE INDEX IF NOT EXISTS edge_query_idx ON relationships (subject_id, name_id, object_id, rowid);
CREATE INDEX IF NOT EXISTS edge_relationship_idx ON relationships (name_id);
CREATE INDEX IF NOT EXISTS property_query_idx ON attributes (key_id, node_id, rowid);
CREATE INDEX IF NOT EXISTS node_lookup_idx ON nodes (name, rowid);
DROP INDEX IF EXISTS relationship_parent_lookup_idx;
DROP INDEX IF EXISTS edge_query_idx;
DROP INDEX IF EXISTS edge_relationship_idx;
DROP INDEX IF EXISTS property_query_idx
SELECT MIN(rowid) FROM nodes where name = ?;
INSERT INTO nodes (name) VALUES (?);
SELECT COUNT(DISTINCT subject_id) FROM relationships WHERE name_id = ?
SELECT COUNT(*) FROM %@ WHERE name = ?
q24@?0@"HDSimpleGraphNode"8@"HDSimpleGraphNode"16
nodesForNames: should be given at least one name.
SELECT rowid, name FROM nodes WHERE name IN (
SELECT rowid, name FROM nodes WHERE rowid IN (
SELECT a.rowid, a.name, b.value                            FROM nodes a, attributes b                           WHERE a.rowid = b.node_id                             AND b.key_id = ?                             AND b.value = ?
 LIMIT ?
SELECT a.rowid, a.name, b.value                                       FROM nodes a, attributes b, keys c                                      WHERE a.rowid = b.node_id                                        AND b.key_id = c.rowid                                        AND c.name = ?                                        AND b.value = ?
DELETE FROM relationships                           WHERE rowid IN (SELECT a.rowid                                             FROM relationships a, relationship_names b                                            WHERE a.name_id = b.rowid                                              AND b.name = ?)
SELECT DISTINCT a.rowid, a.name                                       FROM nodes a, relationships b                                      WHERE a.rowid = b.subject_id                                        AND b.name_id = ?
SELECT rowid, name                                       FROM nodes                                      WHERE rowid                                         IN (SELECT rowid                                       FROM relationships b                                      WHERE b.object_id = ?                                        AND b.name_id = ?)
B24@?0@"HDSimpleGraphNode"8^@16
SELECT name FROM nodes WHERE rowid = (select MAX(node_id) FROM attributes WHERE key_id = ? AND value = ?);
SELECT COUNT(*) FROM relationships WHERE subject_id = ? AND name_id = ?
SELECT DISTINCT A.rowid, A.object_id, A.subject_id, A.object_id = ? as reverse, A.name_id, B.name FROM relationships A, relationship_names B WHERE A.name_id = B.rowid
 AND A.subject_id = ?
 AND A.object_id = ?
 AND (A.subject_id = ? OR A.object_id = ?)
 AND B.name IN (
) ORDER BY 1;
INSERT OR IGNORE INTO relationship_names (name) VALUES (?);
INSERT OR REPLACE INTO relationships (subject_id, name_id, object_id) VALUES(?, ?, ?);
fromNodeID >= 0
toNodeID >= 0
relationshipName
INSERT OR REPLACE INTO relationships (subject_id, name_id, object_id) VALUES (?, ?, ?);
DELETE FROM relationships WHERE object_id = (select MIN(rowid) FROM nodes n WHERE n.name = ?) AND name_id IN (SELECT a.rowid FROM relationship_names a WHERE a.name in (
DELETE FROM relationships WHERE subject_id = ? AND name_id = (SELECT a.rowid FROM relationship_names a WHERE a.name in (
 AND object_id = (SELECT b.rowid FROM nodes b WHERE b.rowid = object_id AND b.name = ?)
DELETE FROM relationships WHERE name_id IN (SELECT rowid FROM relationship_names WHERE name IN (
SELECT rowid FROM relationship_names WHERE name = ?;
INSERT OR IGNORE INTO keys (name) VALUES (?);
SELECT COUNT(rowid) FROM keys WHERE rowid = ?
INSERT OR IGNORE INTO keys (rowid, name) VALUES (?, ?);
INSERT OR IGNORE INTO value_types (name) VALUES (?);
SELECT MIN(rowid) FROM value_types WHERE name = ? COLLATE NOCASE
SELECT MIN(rowid) FROM keys WHERE name = ?;
INSERT OR REPLACE INTO attributes (node_id, key_id, value, value_type_id) VALUES (?, ?, ?, ?);
SELECT A.rowid, B.name AS 'key', A.value, C.name as 'value_type', A.node_id, A.key_id                           FROM attributes A, keys B, value_types C                          WHERE a.key_id = B.rowid                            AND A.value_type_id = C.rowid                            AND A.node_id = ?
SELECT A.rowid, B.name AS 'key', A.value, C.name AS 'value_type', A.node_id, A.key_id                           FROM attributes A, keys B, value_types C                          WHERE a.key_id = B.rowid                            AND A.value_type_id = C.rowid                            AND A.node_id = ?                            AND B.name = ?
DELETE FROM attributes WHERE node_id IN (SELECT rowid FROM nodes WHERE name = ?) AND key_id in (SELECT rowid FROM keys WHERE name = ?);
DELETE FROM attributes WHERE node_id IN (SELECT rowid FROM nodes WHERE name = ?);
SELECT a.value FROM metadata a WHERE a.key = ?
INSERT OR REPLACE INTO metadata (rowid, key, value) VALUES ((select rowid from metadata where key = ?), ?, ?)
BEGIN TRANSACTION 
COMMIT
ROLLBACK
committing
aborting
Database not open
tableCreateSQL
indexCreateSQL
indexDropSQL
T@"HDSQLiteDatabase",&,N,V_database
databasePath
T@"NSString",R,C,N,V_databasePath
subject_id
SELECT a.rowid, a.name                                                                     FROM nodes a, relationships b, relationship_names c                                                                    WHERE a.rowid = b.%@                                                                      AND b.name_id = c.rowid                                                                      AND b.%@ = ?
 AND c.name = ?
HDSimpleGraphDatabase+HealthOntologyAdditions.m
self.database
UPDATE relationships SET name_id = ? WHERE subject_id = ? AND name_id = ? AND object_id = (SELECT MAX(rowid) FROM nodes WHERE name = ?);
PRAGMA foreign_keys = OFF;
(\S+)( \+ \d+)
<%@: foreground=%@, suspended=%@>
foreground
TB,R,N,GisForeground
TB,R,N,GisSuspended
v24@?0@"NSString"8@16
B32@?0q8@16^@24
SELECT %@, %@, %@, %@, %@, %@ FROM %@ INNER JOIN %@ ON %@ = %@ INNER JOIN %@ ON %@ = %@.%@ WHERE %@ = ?
v32@?0@"NSString"8@16^B24
@"HDMetadataKeyEntity"24@?0@"HDDatabaseTransaction"8^@16
@"NSString"24@?0@"HDDatabaseTransaction"8^@16
manifestationCodings
severityCoding
T@"NSMutableArray",&,N,V_manifestationCodings
hasSeverityCoding
T@"HDCodableMedicalCoding",&,N,V_severityCoding
T@"HDCodableMedicalDate",&,N,V_onsetDate
HDCloudSyncOperationConfiguration.m
!((options & HKCloudSyncOptionRebase) && (options & HKCloudSyncOptionRebaseProhibited))
Unexpected profile: %@
options=(%@), reason=(%@), groupName=%@, syncCircle=%@
group
<none>
sync-container-prefix
sync-identifier
expected-send-size
expected-receive-size
has-accessibility-assertion
manatee-enabled
primary-container
T@"CKOperationGroup",R,N,V_operationGroup
syncContainerPrefix
T@"NSString",R,C,N,V_syncContainerPrefix
Tq,R,N,V_reason
T@"NSUUID",R,C,N,V_syncIdentifier
analyticsDictionary
T@"NSDictionary",R,C,N
shortSyncIdentifier
T@"NSString",R,C,N,V_shortSyncIdentifier
rebaseProhibited
user_preferred
so_source
so_source.uuid
so_source.provenance
datatype_source_order
source_order
INSERT INTO %@ (%@, %@, %@, %@, %@) VALUES (?, ?, ?, ?, ?)
v36@?0q8B16d20q28
SELECT %@, %@, %@ FROM %@ WHERE %@ = ? ORDER BY %@ ASC
@16@?0@"<HDSyncStore>"8
B64@?0@8@"NSArray"16^{HDSQLiteRow=}24q32Q40^B48^@56
v32@?0@"NSNumber"8@"HDCodableObjectTypeSourceOrder"16^B24
@16@?0@"HDSampleQueryDescription"8
HDMultiTypeSortedSampleIterator.m
sampleQueryDescriptions.count > 0
B16@?0@"HDSortedSampleIterator"8
All child iterators of the multi-type iterator are exhausted
@16@?0@"HDSortedSampleIterator"8
CurrentAnchor
!_isInitialized
monday
tuesday
wednesday
thursday
friday
saturday
sunday
wake_hour
wake_minute
bed_hour
bed_minute
override_day_index
sleep_schedule_samples
%@ = 1
HDSleepScheduleEntity.m
+[HDSleepScheduleEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
HKSleepScheduleWeekdaysIsSingleDay(weekday)
NSString * _Nullable _PropertyForWeekday(HKSleepScheduleWeekdays)
Only one weekday can be converted to property: %ld
underlyingSampleType
T@"HKSampleType",R,C,N,V_underlyingSampleType
overriddenAggregationStyle
Tq,R,N,V_overriddenAggregationStyle
overriddenCanonicalUnit
T@"HKUnit",R,C,N,V_overriddenCanonicalUnit
com.apple.healthd.daily-report
DailyAnalyticEventObservers
v32@?0@"NSMutableDictionary"8q16@"NSError"24
v16@?0@8
HDReadAuthorizationStatus.m
objectLimitAnchor != nil
<%@: %@ %@ deleted-object-baseline:%@%@%@>
 object-limit:%@
 RESTRICTED to %@ (%@)
authorizationRecord
T@"_HKAuthorizationRecord",R,C,N,V_authorizationRecord
restrictedSourceEntities
T@"NSSet",R,C,N,V_restrictedSourceEntities
restrictedBundleIdentifier
T@"NSString",R,C,N,V_restrictedBundleIdentifier
deletedObjectBaselineAnchor
T@"NSNumber",R,C,N,V_deletedObjectBaselineAnchor
objectLimitAnchor
T@"NSNumber",R,C,N,V_objectLimitAnchor
objectLimitModifiedDate
canRead
isAuthorizationDetermined
authorizationPredicate
T@"HDSQLitePredicate",R,C,N
T@"<HDFitnessMachineConnectionInitiatorProtocol>",R,N,V_connectionInitiatorServer
sensor_datum
HDDataAggregator.m
collector != nil
state != nil
q24@?0@"HDDataCollectorRecord"8@"HDDataCollectorRecord"16
Database transaction rollback.
%@: Unexpectedly nil collector key when starting %@
hasStartedCollectors: %@
configuration: %@
dataCollectors:
  %@: %@
T@"HDDataCollectionManager",R,W,N,V_dataCollectionManager
T@"HDDataAggregatorConfiguration",C
<Interval: %0.1lfs, Latency: %0.1lfs, Duration: %0.1lfs, Workout: %s, Foreground: %s>
collectionLatency
Td,R,N,V_collectionLatency
aggregationInterval
Td,R,N,V_aggregationInterval
maximumSeriesDuration
Td,R,N,V_maximumSeriesDuration
hasActiveWorkout
TB,R,N,V_hasActiveWorkout
hasForegroundObserver
TB,N,V_hasForegroundObserver
<%@: %@, priority %ld>
collectionType
TQ,N,V_collectionType
TQ,N,V_sourceType
priority
Tq,N,V_priority
<%@: %@, %@>
collector
T@"<HDDataCollector>",W,N,V_collector
T@"HDDataCollectorState",&,N,V_state
HDDCR_id
HDDCR_ts
HDDCR_ctx
dateInterval != nil
<%@: %@, context: %@>
datumIdentifier
T@"NSDateInterval",R,C,N
resumeContext
resumeContextProvider
T@?,R,C,N,V_resumeContextProvider
Local
Remote
HDAgeGatingManager.m
-[HDAgeGatingManager _queue_updateAgeGating]
-[HDAgeGatingManager _updateUserDefaultsWithAge:]
Tq,N,V_category
mostRecentGoal
numTimesGoalAchieved
selectedGoal
hasMostRecentGoal
Tq,N,V_mostRecentGoal
hasNumTimesGoalAchieved
Tq,N,V_numTimesGoalAchieved
hasSelectedGoal
Tq,N,V_selectedGoal
requestType
fetchLocationRequest
scenarioTriggeredRequest
hasRequestType
Ti,N,V_requestType
hasFetchLocationRequest
T@"HDCodableRoutineLocationRequest",&,N,V_fetchLocationRequest
hasScenarioTriggeredRequest
T@"HDCodableRoutineScenarioTriggeredRequest",&,N,V_scenarioTriggeredRequest
FetchLocation
FetchNextLocations
ScenarioTriggered
HDFitnessMachineSession.m
Must have data initialized
_oobInfo
_nfcSessionIDData
oobDataArray
T@"NSArray",&,N,V_oobDataArray
fitnessMachineSessionUUID
T@"NSUUID",R,N,V_fitnessMachineSessionUUID
nfcSessionID
nfcSessionIDData
T@"NSData",R,N,V_nfcSessionIDData
healthServiceSessionIdentifier
TQ,N,V_healthServiceSessionIdentifier
healthService
T@"HKHealthService",&,N,V_healthService
serviceStatus
Tq,N,V_serviceStatus
fitnessMachine
T@"_HKFitnessMachine",&,N,V_fitnessMachine
oobInfo
T@"HDHealthServiceOOBInfo",&,N,V_oobInfo
nfcConnectionHandoverData
waitingOnInitialMachineStatus
TB,N,V_waitingOnInitialMachineStatus
initialMachineStatus
T@"HDFitnessMachineStatus",&,N,V_initialMachineStatus
waitingOnInitialMachineData
TB,N,V_waitingOnInitialMachineData
initialMachineData
T@"HDFitnessMachineDataCharacteristicBase",&,N,V_initialMachineData
initialEnhancedFTMSData
T@"HDEnhancedFTMSData",&,N,V_initialEnhancedFTMSData
connectionState
TQ,N,V_connectionState
machineStartDate
T@"NSDate",&,N,V_machineStartDate
machineStateUpdateDate
T@"NSDate",&,N,V_machineStateUpdateDate
dataTransferPermitted
TB,R,N,V_dataTransferPermitted
waitingOnMFA
TB,R,N,V_waitingOnMFA
waitingOnBluetoothConnection
TB,R,N,V_waitingOnBluetoothConnection
waitingOnActivityType
TB,R,N,V_waitingOnActivityType
dataTransferRequirementsComplete
recoveryConfiguration
T@"HDFitnessMachineSessionRecoveryConfiguration",R,N
LegacyProtectedDataJournalSupport.m
Encoding is not supported
userDefault
T@"HDUserDefault",R,N,V_userDefault
T@"NSString",R,N,V_key
T@"NSString",R,N,V_bundleIdentifier
T@,R,N,V_value
T@"HKCharacteristicType",R,N,V_dataType
Fetch and Process Medical ID
Process Medical ID
omittedContent
documentData
patientName
authorName
custodianName
hasOmittedContent
Ti,N,V_omittedContent
hasDocumentData
T@"NSData",&,N,V_documentData
hasTitle
T@"NSString",&,N,V_title
hasPatientName
T@"NSString",&,N,V_patientName
hasAuthorName
T@"NSString",&,N,V_authorName
hasCustodianName
T@"NSString",&,N,V_custodianName
DocumentData
Document
HDContentProtectionManager.m
initialState != HDContentProtectionStateInvalid
Observer cannot be nil
Queue cannot be NULL
Queue cannot be the same as _observationQueue
Recorded state: %@
Unlocked since boot: %s
IGNORING UNLOCKED STATE
Last lock_status notification: %@ (began observing %@)
Observers:
<%@:%p> (%s)
shouldIgnoreUnlockedState
T@"<HDContentProtectionObserver>",R,W,N,V_observer
invalid
unlocked
locking
locked
experimentIdentifier
testCondition
hasExperimentIdentifier
T@"NSString",&,N,V_experimentIdentifier
hasTestCondition
Tq,N,V_testCondition
diagnosticTestCodingCollection
panelName
hasDiagnosticTestCodingCollection
T@"HDCodableMedicalCodingList",&,N,V_diagnosticTestCodingCollection
hasPanelName
T@"NSString",&,N,V_panelName
hasResults
T@"HDCodableFHIRIdentifierList",&,N,V_results
<%@ %@ (%@) %@>
<%@ %@ (%@)>
shortIdentifier
T@"NSString",R,C,N,V_shortIdentifier
Tq,R,N,V_operationType
T@"HDPeriodicActivity",R,N,V_periodicActivity
HDDataManager.m
sourceEntity != nil
Failed to insert objects.
v32@?0B8B12@"NSNumber"16@"NSError"24
v32@?0@"HKSampleType"8@"NSArray"16^B24
Failed to find some objects for deletion.
B32@?0@"NSUUID"8^B16^@24
((%@ = ?) AND (%@ = %ld)
INNER JOIN %@ USING(%@)
 INNER JOIN %@ ON %@=%@
 AND (%@ IN (
@"NSString"16@?0@"HDSourceEntity"8
%lld
 AND (1=0)
SELECT %@, %@, %@, %@ FROM %@ %@ WHERE %@
predicate != nil
[sampleTypes count] > 0
Must provide at least one source entity for deletion.
[uuids count] > 0
v40@?0B8B12@"NSNumber"16@"NSSet"24@"NSError"32
sampleType
data-observers-synchronous-%@
v16@?0@"<HDDataObserver>"8
No open transactions
action
subscribe
frequency
removeSubscription
Observers: %@
AllTypes
%@ %ld (%lu):
Synchronous Observers: %@
quantitySeriesManager
T@"HDQuantitySeriesManager",R,N,V_quantitySeriesManager
object_uuids
uuids_data
UUIDCollection
T@"<HKUUIDCollection>",R,N,V_UUIDCollection
T@"HDDataDeletionConfiguration",R,C,N,V_configuration
generate_deleted
fail_not_found
notify_observers
secure_delete
preserve_dates
source_bundle
Failed to load entity class '%@' when handling deletion configuration entry.
generateDeletedObjects
TB,N,V_generateDeletedObjects
failIfNotFound
TB,N,V_failIfNotFound
notifyObservers
TB,N,V_notifyObservers
secureDelete
TB,N,V_secureDelete
restrictedSourceBundleIdentifier
T@"NSString",C,N,V_restrictedSourceBundleIdentifier
T#,C,N,V_entityClass
HDAuthorizationServer.m
client != nil
queue != NULL
v20@?0B8@"NSSet"12
Saving objects to the database.
[types count] > 0
authorizationStatus != nil
requestCompletionHandler != NULL
Must specify types to share or read
Invalid types for sharing
Invalid types for reading
Failed to create source for client %@
[authorizationStatuses count] == [typesIncludingParentTypes count]
authorizationStatusNumber != nil
Unexpected authorization status %@
Authorization is not determined
Not authorized
read
Missing application-identifier entitlement.
The types argument may not be empty
The connection to the view service was invalidated.
authorizationRequestIdentifiers
T@"NSMutableArray",&,N,V_authorizationRequestIdentifiers
transactionSessionIdentifier
T@"NSUUID",&,N,V_transactionSessionIdentifier
Authorization server invalidated
There is already an open transaction
sessionIdentifier may not be nil
pending
failed
HDCloudSyncOperation.m
_onSuccess != nil
_onError != nil
status == HDCloudSyncOperationStatusPending
self.status == HDCloudSyncOperationStatusActive
_progress.completedUnitCount <= _progress.totalUnitCount
%@ failed without reporting an error.
operationClass
updated >= current
updated <= self.progress.totalUnitCount
T@"HDCloudSyncOperationConfiguration",R,N,V_configuration
cloudState
T@"HDCloudSyncCloudState",&,V_cloudState
onSuccess
T@?,C
onError
Unable to determine authorization.
hasContributedToOverall
hasContributedToSource
hasContributedToSourceID
m/hr
T@"HKQuantity",R,N
lastFireDate
T@"NSDate",R,N,V_lastFireDate
nextFireInterval
T@"<_HDDemoDataModuleDelegate>",W,N,V_delegate
m/min
Tq,R,N,V_category
domainName
T@"NSString",R,N,V_domainName
HDMultiTypeSampleQueryServer.m
Missing sample type for query
B16@?0@"HKSampleQueryDescription"8
v28@?0@"NSArray"8@"HKMultiTypeQueryCursor"16B24
%@.%p
Master
UnifiedSync
CKRecordZoneID+HDCloudSync.m
![syncCircleIdentifier containsString:RecordZoneIDComponentsSeparator]
HDQueryServerDidReceiveHealthRecordsQueryNotification
HDQueryServer.m
[delegate conformsToProtocol:@protocol(HDQueryServerDelegate)]
%d.%@.%@
.UnitTesting
Activate
Invalid query state %ld
Unknown query validation error
Re-activation
self.queryState == HDQueryServerStateActivated
self.queryState != HDQueryServerStateFinished
queryServerState != HDQueryServerStatePaused
queryServerState != HDQueryServerStateFinished
(state == HDQueryServerStateFinished) || (state == HDQueryServerStatePaused)
@"HKSampleType"16@?0@"HKObjectType"8
nil query server delegate
@"NSArray"16@?0@"NSArray"8
self.queryState == HDQueryServerStateRunning
(queryState == HDQueryServerStateFinished) || (queryState == HDQueryServerStatePaused)
Authorization not determined
Authorization not supported
%@ %@%@%@ - %@%@, activated %@
 "%@"
 (finishing)
clientHasActiveWorkout
dataCount
Tq,N,V_dataCount
activationTime
T@"_HKFilter",R,N,V_filter
unitTest_queryServerSetShouldPauseHandler
T@?,C,N,V_unitTest_queryServerSetShouldPauseHandler
unitTest_queryServerWillChangeStateHandler
T@?,C,N,V_unitTest_queryServerWillChangeStateHandler
T@"<HDQueryServerDelegate>",W,N,V_delegate
queryUUID
T@"NSUUID",R,C,N,V_queryUUID
T@"HKQueryServerConfiguration",R,C,N,V_configuration
queryQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_queryQueue
queryState
collectionInterval
Td,N,V_collectionInterval
clientProxy
T@"<HKQueryClientInterface><NSXPCProxyCreating>",R,N
T@"HKObjectType",R,C,N,V_objectType
objectTypes
T@"HKSampleType",R,N
T@"HKQuantityType",R,N
WaitingForActivation
Activated
Paused
Unknown state
QueryServerObserver-%@
HDHealthOntologyManagerLastReportedOntologyVersion
String
T@"HKConceptIdentifier",R,C,N,V_conceptIdentifier
Health Ontology Observers
HDHealthOntologyManager.m
INSERT OR REPLACE INTO %@ (rowid, name) VALUES (?, ?)
INSERT OR REPLACE INTO attributes (rowid, node_id, key_id, value, value_type_id) VALUES (?, ?, ?, ?, ?)
INSERT OR REPLACE INTO relationships (rowid, subject_id, name_id, object_id) VALUES (?, ?, ?, ?)
HDDaemonTest
HealthOntology
PRAGMA foreign_keys = OFF
relationship_names
value_types
Expected this code block to be unreachable
ontologyAssetVersion
ontologyAssetImportTimestamp
PRAGMA foreign_keys = ON
I don't have a handle to the graph database
graphDatabase
v16@?0q8
B16@?0@"HKConcept"8
Unable to resolve concept for codings %@, country %@; multiple concepts encountered.
Unable to resolve concept for codings %@, country %@; not valid in region.
B16@?0@"HKMedicalCoding"8
ad-hoc concept
Failed to find concept for coding %@.
concept
Updating concepts with relationships is currently unsupported.
Unsupported value type %ld
Failed to get attribute value as string.
node
B24@?0@"HDSimpleGraphDatabase"8^@16
@16@?0@"HKConceptIdentifier"8
Failed to load concepts; ontology version (%lld) does not match requested version (%lld)
@"NSArray"16@?0^@8
@"HDSimpleGraphNode"16@?0^@8
@16@?0@"HKConcept"8
v16@?0@"<HDHealthOntologyManagerObserver>"8
Ontology import failed
ontology
HealthOntology.db
T@"HDSimpleGraphDatabase",&,N,V_graphDatabase
ontologyURL
T@"NSURL",R,C,N,V_ontologyURL
ignoresVersionCheckDuringReferenceOntologyImport
ignoresOntologyAssetAvailabilityChanges
unitTest_useEmbeddedOntology
TB,R,N,V_unitTest_useEmbeddedOntology
unitTest_useEmbeddedOntologyAsset
TB,R,N,V_unitTest_useEmbeddedOntologyAsset
TB,N,GisEnabled
Relationship: %@ <-- %@ --> %@ (%@)
Reverse
Direct
subject
T@"HDSimpleGraphNode",W,N,V_subject
T@"HDSimpleGraphNode",W,N,V_object
nameID
Tq,R,N,V_nameID
isReverseRelationship
TB,R,N,V_isReverseRelationship
subjectID
Tq,R,N,V_subjectID
Tq,R,N,V_objectID
q24@?0@"HDQuantitySampleSeriesDataEnumerator"8@"HDQuantitySampleSeriesDataEnumerator"16
B40@?0d8d16d24q32
expand series
secondary sort by UUID
Unable to find quantity series '%@' when freezing.
Could not find sample with ID %@
meta
T@"NSDate",R,C,N,V_endDate
freezeResult
Tq,R,N,V_freezeResult
TQ,R,N,V_sessionIdentifier
characteristic
T@"HDHealthServiceCharacteristic",R,N,V_characteristic
T@"HKDevice",R,N,V_device
/System/Library/WatchNotifications/Bundles/NanoHealthNotifications.bundle
<INVALID>
rawValue
comparatorCoding
unitCoding
hasRawValue
T@"NSString",&,N,V_rawValue
hasComparatorCoding
T@"HDCodableMedicalCoding",&,N,V_comparatorCoding
hasUnitCoding
T@"HDCodableMedicalCoding",&,N,V_unitCoding
machine_uuid
machine_type
machine_name
machine_brand
machine_start_date
machine_preferred_until_date
nfc_session_id_data
T@"NSUUID",R,N,V_sessionUUID
machineUUID
T@"NSUUID",R,N,V_machineUUID
machineName
T@"NSString",R,C,N,V_machineName
machineBrand
T@"NSString",C,N,V_machineBrand
TQ,R,N,V_activityType
T@"NSDate",R,N,V_machineStartDate
T@"NSDate",R,N,V_machinePreferredUntilDate
unitString
hasUnitString
T@"NSString",&,N,V_unitString
idx (%tu) is out of range (%tu)
userToken
standEventMinutesSinceMidnight_RoundedTo10
exerciseMinuteHours
moveRingCompletionPercentage
monthsSinceFirstWatchUsage
hasUserToken
T@"NSString",&,N,V_userToken
standEventMinutesSinceMidnightRoundedTo10sCount
standEventMinutesSinceMidnightRoundedTo10s
T^q,R,N
T@"NSMutableArray",&,N,V_exerciseMinuteHours
hasMoveRingCompletionPercentage
Tq,N,V_moveRingCompletionPercentage
hasMonthsSinceFirstWatchUsage
Tq,N,V_monthsSinceFirstWatchUsage
didJournal
TB,R,N,V_didJournal
anchorRangeMap
hasAnchorRangeMap
T@"HDCodableSyncAnchorRangeMap",&,N,V_anchorRangeMap
hasChangeSize
Tq,N,V_changeSize
hasFinalForSequence
TB,N,V_finalForSequence
privateClassification
averageHeartRateInBPM
voltagePayload
symptomsStatus
hasPrivateClassification
Tq,N,V_privateClassification
hasAverageHeartRateInBPM
Td,N,V_averageHeartRateInBPM
hasVoltagePayload
T@"NSData",&,N,V_voltagePayload
hasSymptomsStatus
Tq,N,V_symptomsStatus
hdsp_esp
hdsp_interval
hdsp_types
hdsp_oage
hdsp_tage
hdsp_ages
excludedSyncProvenances
T@"NSSet",R,C,N,V_excludedSyncProvenances
includedObjectTypes
T@"NSSet",R,C,N,V_includedObjectTypes
defaultMaximumObjectAge
T@"NSNumber",R,C,N,V_defaultMaximumObjectAge
defaultMaximumTombstoneAge
T@"NSNumber",R,C,N,V_defaultMaximumTombstoneAge
maximumObjectAgeByType
T@"NSDictionary",R,C,N,V_maximumObjectAgeByType
T@"NSUUID",R,C,N,V_builderIdentifier
procedureCodingCollection
executionStartDate
executionEndDate
notPerformed
categoryCodingCollection
reasonCodingCollections
reasonsNotPerformedCodingCollections
outcomeCodingCollection
complicationsCodingCollections
followUpsCodingCollections
hasProcedureCodingCollection
T@"HDCodableMedicalCodingList",&,N,V_procedureCodingCollection
hasExecutionStartDate
T@"NSData",&,N,V_executionStartDate
hasExecutionEndDate
T@"NSData",&,N,V_executionEndDate
hasNotPerformed
TB,N,V_notPerformed
hasCategoryCodingCollection
T@"HDCodableMedicalCodingList",&,N,V_categoryCodingCollection
hasReasonCodingCollections
T@"HDCodableMedicalCodingListList",&,N,V_reasonCodingCollections
hasReasonsNotPerformedCodingCollections
T@"HDCodableMedicalCodingListList",&,N,V_reasonsNotPerformedCodingCollections
hasOutcomeCodingCollection
T@"HDCodableMedicalCodingList",&,N,V_outcomeCodingCollection
hasComplicationsCodingCollections
T@"HDCodableMedicalCodingListList",&,N,V_complicationsCodingCollections
hasFollowUpsCodingCollections
T@"HDCodableMedicalCodingListList",&,N,V_followUpsCodingCollections
objectUUID
hasObjectUUID
T@"NSData",&,N,V_objectUUID
v24@?0@"HDCloudSyncZone"8@?<v@?@@>16
B24@?0@8@"NSError"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v24@?0@"CKRecordID"8@"NSString"16
B16@?0@"HDCloudSyncChangeRecord"8
changeTokensByZone
T@"NSDictionary",R,C
changeRecords
recordFilter
T@?,C,V_recordFilter
expiredServerChangeTokenHandler
T@?,C,V_expiredServerChangeTokenHandler
stddev
percentile25
percentile75
median
hasMean
Tq,N,V_mean
hasStddev
Tq,N,V_stddev
hasPercentile25
Tq,N,V_percentile25
hasPercentile75
Tq,N,V_percentile75
hasMedian
Tq,N,V_median
Profiles
HDProfileManagerObservers
HDProfileManager.m
v16@?0@"<HDProfileManagerObserver>"8
Unable to create profiles after invalidation.
Profile identifier is nil.
Unable to create profile database directory
Invalid profile type %ld
ProfileIdentifier must not be nil.
%ld$%@
directoryName != nil
Directory name separates into too many components (%ld)
Directory name contains invalid profile type (%@)
Directory name contains invalid profile identifier: %@
object_authorizations
DELETE FROM %@
DELETE FROM %@ WHERE %@ IN (?)
SELECT %@, %@, %@, %@                                                     FROM %@ as oa                                                     INNER JOIN %@ obj ON oa.%@ = obj.%@                                                     INNER JOIN %@ spl ON obj.%@ = spl.%@                                                     WHERE oa.%@ = ? AND spl.%@ = ?
SELECT %@, %@, dp.%@                                                     FROM %@ AS o                                                     INNER JOIN %@ dp ON o.%@ = dp.%@                                                     LEFT JOIN %@ oa ON o.%@ = oa.%@ AND oa.%@ = ?                                                     WHERE o.%@ = ?
SELECT %@, %@, %@ from %@ AS oa WHERE oa.%@ = ?
<Object: %@ Source: %@ Status: %ld Mod: %@>
stat
T@"NSUUID",C,N,V_objectID
T@"NSUUID",C,N,V_sourceID
Tq,N,V_status
T@"NSArray",&,N,V_records
totalEnergyBurnedInCanonicalUnit
totalDistanceInCanonicalUnit
totalBasalEnergyBurnedInCanonicalUnit
totalSwimmingStrokeCountInCanonicalUnit
totalFlightsClimbedInCanonicalUnit
T@"NSMutableArray",&,N,V_events
hasTotalEnergyBurnedInCanonicalUnit
Td,N,V_totalEnergyBurnedInCanonicalUnit
hasTotalDistanceInCanonicalUnit
Td,N,V_totalDistanceInCanonicalUnit
hasGoalType
Tq,N,V_goalType
hasGoal
Td,N,V_goal
hasTotalBasalEnergyBurnedInCanonicalUnit
Td,N,V_totalBasalEnergyBurnedInCanonicalUnit
hasTotalSwimmingStrokeCountInCanonicalUnit
Td,N,V_totalSwimmingStrokeCountInCanonicalUnit
hasTotalFlightsClimbedInCanonicalUnit
Td,N,V_totalFlightsClimbedInCanonicalUnit
Node Attribute: 
Node: %@
Key ID: %lld
Key: %@
Value: %@
Value type:%@
keyID
Tq,R,N,V_keyID
T@"NSString",R,C,N,V_key
T@"NSString",R,C,N,V_value
valueType
T@"NSString",R,C,N,V_valueType
T@"HDSimpleGraphNode",R,W,N
originBuild
deviceUUID
originProductType
originMajorVersion
originMinorVersion
originPatchVersion
contributorUUID
hasOriginBuild
T@"NSString",&,N,V_originBuild
hasDeviceUUID
T@"NSData",&,N,V_deviceUUID
hasSourceVersion
T@"NSString",&,N,V_sourceVersion
hasOriginProductType
T@"NSString",&,N,V_originProductType
hasTimeZoneName
T@"NSString",&,N,V_timeZoneName
hasOriginMajorVersion
Ti,N,V_originMajorVersion
hasOriginMinorVersion
Ti,N,V_originMinorVersion
hasOriginPatchVersion
Ti,N,V_originPatchVersion
hasContributorUUID
T@"NSData",&,N,V_contributorUUID
B16@?0@"HKCodableQuantitySeriesDatum"8
B104@?0q8q16[16C]24d32d40q48q56d64d72d80q88^@96
unitTest_batchWillDeliver
T@?,C,N,V_unitTest_batchWillDeliver
Tinker
HDCloudSyncSharingStatusKey
userEnabled
lastFetchDate
lastFullFetchDate
patientHash
hasUserEnabled
TB,N,V_userEnabled
hasLastFetchDate
Td,N,V_lastFetchDate
hasLastFullFetchDate
Td,N,V_lastFullFetchDate
hasPatientHash
T@"NSString",&,N,V_patientHash
object_code
protected.external_sync_ids.sid
protected.external_sync_ids.version
protected.external_sync_ids.object_code
external_sync_ids
INTEGER NON NULL
source_object_code_sid_deleted
HDDataExternalSyncIdentifierEntity.m
SELECT object_id FROM protected.external_sync_ids WHERE source_id = ? AND object_code = ? AND sid = ? AND NOT deleted
SELECT source_id, object_code, sid, version, deleted FROM protected.external_sync_ids WHERE object_id = ?
syncIdentifier != nil
syncVersion != nil
INSERT INTO protected.external_sync_ids (object_id, source_id, object_code, sid, version, deleted) VALUES (?, ?, ?, ?, ?, ?)
EXISTS (SELECT 1 FROM %@ WHERE (%@=%@ AND %@))
%@ (SELECT 1 FROM %@ WHERE (%@=%@))
does not exist OR %@
<%@: %@>
Add Sharing Participant
T@"HDCloudSyncShareSetupMetadata",R,V_result
_HKSampleComparisonFilter+HealthDaemon.m
vaccination_codings
dose_number
dose_quantity
performer
reaction
not_given
administration_date
patient_reported
route_codings
reasons_codings
reasons_not_given_codings
vaccination_record_samples
HDVaccinationRecordEntity.m
+[HDVaccinationRecordEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
entityVersion
compatibilityVersion
hasEntityVersion
Ti,N,V_entityVersion
hasCompatibilityVersion
Ti,N,V_compatibilityVersion
medicationOrder
medicationDispenseRecord
medicationRecord
diagnosticTestResult
diagnosticTestReport
vaccinationRecord
conditionRecord
allergyRecord
procedureRecord
accountOwner
unknownRecord
clinicalRecord
coverageRecord
medicationOrders
T@"NSMutableArray",&,N,V_medicationOrders
medicationDispenseRecords
T@"NSMutableArray",&,N,V_medicationDispenseRecords
medicationRecords
T@"NSMutableArray",&,N,V_medicationRecords
diagnosticTestResults
T@"NSMutableArray",&,N,V_diagnosticTestResults
diagnosticTestReports
T@"NSMutableArray",&,N,V_diagnosticTestReports
vaccinationRecords
T@"NSMutableArray",&,N,V_vaccinationRecords
conditionRecords
T@"NSMutableArray",&,N,V_conditionRecords
allergyRecords
T@"NSMutableArray",&,N,V_allergyRecords
procedureRecords
T@"NSMutableArray",&,N,V_procedureRecords
accountOwners
T@"NSMutableArray",&,N,V_accountOwners
unknownRecords
T@"NSMutableArray",&,N,V_unknownRecords
clinicalRecords
T@"NSMutableArray",&,N,V_clinicalRecords
coverageRecords
T@"NSMutableArray",&,N,V_coverageRecords
changeToken
 by the user
rebase-trigger
HDCloudSyncStore.m
syncProtocolVersion <= _syncProtocolVersion
ACHAchievementsPlugin
<%@:%p %@ (%ld) Epoch %lld, version %@>
canPush
TB,R,N,V_canPush
sharingIdentifier
T@"NSString",R,C,N,V_sharingIdentifier
sharingPredicate
T@"HDSharingPredicate",R,N,V_sharingPredicate
syncTombstonesOnly
TB,R,N,V_syncTombstonesOnly
HDOdometerDataCollector.m
[type isEqual:_distanceType]
HDOdometerDataCollector.%@
v24@?0@"CMOdometerData"8@"NSError"16
Disable & Delete
HDCloudSyncDisableAndDeleteOperation.m
Public database scope not handled for disable and delete.
@16@?0@"HDCloudSyncStoreRecord"8
Local Medical ID updated during cloud sync.
medicalIDDataToPersist
T@"_HKMedicalIDData",&,N,V_medicalIDDataToPersist
cache_index
activity_mode
wheelchair_use
move_minutes_goal_date
brisk_minutes_goal_date
active_hours_goal_date
pushes
walk_distance
deep_breathing_duration
flights
energy_burned_stats
move_minutes_stats
brisk_minutes_stats
IncludePrivateActivityCacheProperties
IncludeActivityCacheStatistics
activity_caches
HDActivityCacheEntity.m
+[HDActivityCacheEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
INSERT INTO protected.activity_caches (data_id, cache_index, sequence, activity_mode, wheelchair_use, energy_burned, energy_burned_goal, energy_burned_goal_date, move_minutes, move_minutes_goal, move_minutes_goal_date, brisk_minutes, brisk_minutes_goal, brisk_minutes_goal_date, active_hours, active_hours_goal, active_hours_goal_date, steps, pushes, walk_distance, deep_breathing_duration, flights, energy_burned_stats, move_minutes_stats, brisk_minutes_stats) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Failed to insert activity cache during merge replacement
[self _shouldIncludeActivityCachePrivateProperties]
[self _shouldIncludeActivityCacheStatistics]
CREATE TABLE IF NOT EXISTS sources (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, bundle_id TEXT NOT NULL, name TEXT NOT NULL, source_options INTEGER NOT NULL, local_device INTEGER NOT NULL, product_type TEXT NOT NULL, deleted INTEGER NOT NULL, mod_date REAL NOT NULL, provenance INTEGER NOT NULL, sync_anchor INTEGER NOT NULL UNIQUE, sync_primary INTEGER NOT NULL);
INSERT INTO sources SELECT ROWID, uuid, bundle_id, name, source_options, local_device, product_type, deleted, mod_date, provenance, sync_anchor, 0 FROM sources_old;
UPDATE sources SET sync_primary = 1 WHERE deleted = 1;
SELECT ROWID, bundle_id, (provenance <> 0) as is_remote FROM sources WHERE deleted = 0 ORDER BY bundle_id, is_remote, ROWID;
UPDATE sources SET sync_primary = 1 WHERE ROWID = ?;
UPDATE sources SET bundle_id = '', name = '', product_type = '', source_options = 0 WHERE deleted = 1;
DROP INDEX IF EXISTS datatype_source_order_data_type
ALTER TABLE source_devices RENAME TO source_devices_old;
CREATE TABLE source_devices (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, manufacturer TEXT NOT NULL, model TEXT NOT NULL, hardware TEXT NOT NULL, firmware TEXT NOT NULL, software TEXT NOT NULL, localIdentifier TEXT NOT NULL, FDAUDI TEXT NOT NULL, creation_date REAL NOT NULL, sync_provenance INTEGER NOT NULL, uuid BLOB UNIQUE NOT NULL, UNIQUE(name, manufacturer, model, hardware, firmware, software, localIdentifier, FDAUDI, sync_provenance, uuid));
INSERT OR REPLACE INTO source_devices (ROWID, name, manufacturer, model, hardware, firmware, software, localIdentifier, FDAUDI, creation_date, sync_provenance, uuid) SELECT * FROM source_devices_old;
DROP TABLE source_devices_old;
SELECT rowid FROM sources WHERE bundle_id LIKE 'com.apple.private.health.localdevice'
UPDATE sources SET bundle_id = 'com.apple.health.' || %@(uuid), sync_anchor = COALESCE((SELECT MAX(sync_anchor) + 1 FROM sources), 1) WHERE rowid = ?
ALTER TABLE protected.object_authorizations RENAME TO object_authorizations_old;
CREATE TABLE IF NOT EXISTS protected.object_authorizations (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, object BLOB NOT NULL REFERENCES objects (uuid) ON DELETE CASCADE, source BLOB NOT NULL, status INTEGER NOT NULL, sync_provenance INTEGER NOT NULL, modification_date REAL NOT NULL, UNIQUE(object, source, sync_provenance));
INSERT OR REPLACE INTO protected.object_authorizations (ROWID, object, source, status, sync_provenance, modification_date) SELECT * FROM protected.object_authorizations_old ORDER BY ROWID;
DROP TABLE protected.object_authorizations_old
CREATE INDEX IF NOT EXISTS protected.activity_caches_cache_index ON activity_caches (cache_index);
@16@?0@"HDHealthOntologyCountryConfiguration"8
Ontology lifecycle manager start
Ontology lifecycle manager stop
profile.daemon.behavior.hasOntologyFeaturesEnabled
profile.database.protectedDataAvailable
profile.hasHealthRecordsAccounts
HDOntologyLifecycleManager.m
Expected this case to be unreachable
Ontology asset update
Ontology manager reference ontology finished update
Ontology manager reference ontology created
assetManager
T@"HDOntologyAssetManager",&,N,V_assetManager
ontologyManager
T@"HDHealthOntologyManager",&,N,V_ontologyManager
ontologyConfiguration
T@"HDHealthOntologyConfiguration",C,N,V_ontologyConfiguration
TB,N,GisReady,V_ready
ontologyTester
T@"<HDOntologyTester>",W,N,V_ontologyTester
unitTesting_ontologyConfigurationOverride
T@"HDHealthOntologyConfiguration",&,N,V_unitTesting_ontologyConfigurationOverride
indexManager
T@"HDConceptIndexManager",R,N,V_indexManager
T@"HDHealthRecordsNotificationManager",R,N,V_notificationManager
allSupportedCountryCodes
improveHealthRecordsGatedAnalyticsEnabledCountryCodes
optInDataCollectionEnabledCountryCodes
hasHealthRecordsAccounts
hd_condition_check_f
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.25.2/HealthKit/HealthDaemon/Ontology/HDOntologyLifecycleManager.m
conditionDescription != nil
com.apple.SessionController.GymKit
HDDistinctByKeyPathsIterator.m
sourceIterator
SourceIteratorState
SeenValues
entered_in_error
modified_date
fhir_identifier
extraction_version
sort_date
sort_date_key_path
com.apple.health.records.notifications
MostRecentlyNotified
medical_records
TEXT NON NULL
REAL NON NULL
HDMedicalRecordEntity.m
+[HDMedicalRecordEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
Unable to lookup concepts without an ontology manager
@16@?0@"HDConceptIndexEntry"8
Concept index spans multiple ontology versions.
Unable to find concepts referenced from concept index entry.
SELECT version FROM %@ WHERE schema LIKE ?
INSERT OR REPLACE INTO %@ (schema, version, modification_date) VALUES (?, ?, ?)
schema_user_versions
%@.schema_user_versions
CREATE TABLE IF NOT EXISTS %@ (schema TEXT NOT NULL PRIMARY KEY, version INTEGER NOT NULL, modification_date DOUBLE NOT NULL)
%@:%@:%@
condition_coding_collection
categories_coding_collections
clinical_status_coding
verification_status_coding
severity_coding_collection
condition_record_samples
HDConditionRecordEntity.m
+[HDConditionRecordEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
180F
2A19
Battery level not supported
Invalid property value format
failureReason
retryExpected
hasFailureReason
Ti,N,V_failureReason
hasStage
Ti,N,V_stage
hasAction
Ti,N,V_action
hasRetryExpected
TB,N,V_retryExpected
HealthDataUnavailable
NoSuchFriend
NoPendingIncomingRequest
NoPendingOutgoingRequest
MissingCloudKitAddress
MissingHandshakeToken
CloudKitErrorDomain
IDSErrorDomain
SendInvite
ReceiveInvite
SendReply
ReceiveReply
SendConfirm
ReceiveConfirm
IgnoreInvite
Accept
Reject
Blocked
typeIdentifier
inSession
minDelayUs
maxDelayUs
meanDelayUs
stdDelayUs
sampleCount
indexInSession
hasTypeIdentifier
Tq,N,V_typeIdentifier
hasInSession
TB,N,V_inSession
hasMinDelayUs
Tq,N,V_minDelayUs
hasMaxDelayUs
Tq,N,V_maxDelayUs
hasMeanDelayUs
Tq,N,V_meanDelayUs
hasStdDelayUs
Tq,N,V_stdDelayUs
hasSampleCount
Tq,N,V_sampleCount
hasIndexInSession
Tq,N,V_indexInSession
demo-data-generation
v28@?0B8q12@"NSError"20
Unable to generate demo data bbefore a person has been set.
v24@?0d8q16
v24@?0@"NSUUID"8@"NSData"16
DemoData
demoPerson
T@"HDDemoDataPerson",&,N,V_demoPerson
T@"HDDemoDataGeneratorConfiguration",&,N,V_configuration
activitySampleGenerator
T@"HDDemoDataActivitySampleGenerator",&,N,V_activitySampleGenerator
audioExposureSampleGenerator
T@"HDDemoDataAudioExposureSampleGenerator",&,N,V_audioExposureSampleGenerator
audiogramSampleGenerator
T@"HDDemoDataAudiogramSampleGenerator",&,N,V_audiogramSampleGenerator
bloodSampleGenerator
T@"HDDemoDataBloodSampleGenerator",&,N,V_bloodSampleGenerator
bodySampleGenerator
T@"HDDemoDataBodySampleGenerator",&,N,V_bodySampleGenerator
foodSampleGenerator
T@"HDDemoDataFoodSampleGenerator",&,N,V_foodSampleGenerator
healthDocumentSampleGenerator
T@"HDDemoDataHealthDocumentSampleGenerator",&,N,V_healthDocumentSampleGenerator
heartSampleGenerator
T@"HDDemoDataHeartSampleGenerator",&,N,V_heartSampleGenerator
mindfulnessSampleGenerator
T@"HDDemoDataMindfulnessSampleGenerator",&,N,V_mindfulnessSampleGenerator
mobilitySampleGenerator
T@"HDDemoDataMobilitySampleGenerator",&,N,V_mobilitySampleGenerator
otherAndAdditionalSampleGenerator
T@"HDDemoDataOtherAndAdditionalSampleGenerator",&,N,V_otherAndAdditionalSampleGenerator
pathologySampleGenerator
T@"HDDemoDataPathologySampleGenerator",&,N,V_pathologySampleGenerator
reproductiveHealthSampleGenerator
T@"HDDemoDataReproductiveHealthSampleGenerator",&,N,V_reproductiveHealthSampleGenerator
sleepSampleGenerator
T@"HDDemoDataSleepSampleGenerator",&,N,V_sleepSampleGenerator
statisticsSampleGenerator
T@"HDDemoDataStatisticsSampleGenerator",&,N,V_statisticsSampleGenerator
symptomsSampleGenerator
T@"HDDemoDataSymptomsSampleGenerator",&,N,V_symptomsSampleGenerator
vitalsSampleGenerator
T@"HDDemoDataVitalsSampleGenerator",&,N,V_vitalsSampleGenerator
generatorState
T@"HDDemoDataGeneratorState",R,N,V_generatorState
record %@ does not have value for key (%@)
record %@ does not have encrypted value for key (%@)
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
CellularTelephonyCapability
com.apple.nanolifestyle.sessiontrackerapp
EnablePowerSavingMode
NanoLifestyleSessionTrackerAppPreferencesChangedNotification
triggerTypes
currentLocation
hasTriggerTypes
TQ,N,V_triggerTypes
hasCurrentLocation
T@"HDCodableRoutineLocation",&,N,V_currentLocation
type may not be nil
sourceBundleIdentifier may not be nil
sampleUUID may not be nil
HDRestorableAlarmScheduler
Daemon ready and data first available
Significant time change
Protected data became available
v28@?0@"HDXPCAlarm"8@"NSDate"16B24
B16@?0@"HDAlarmEvent"8
Alarm %@ added
Alarm Events
Clients
isRegisteredForOnWristUpdates
TB,R,N,V_isRegisteredForOnWristUpdates
isRegisteredForLockStateUpdates
TB,R,N,V_isRegisteredForLockStateUpdates
systemScheduler
T@"HDXPCAlarm",R,N,V_systemScheduler
birth_date
account_owner_samples
HDAccountOwnerEntity.m
+[HDAccountOwnerEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
HDDeviceManager.m
devices
@"HKDevice"24@?0@"HDDatabaseTransaction"8^@16
@"HDDeviceEntity"24@?0@"HDDatabaseTransaction"8^@16
__NONE__
devicesByPersistentID
T@"HDDatabaseValueCache",&,N,V_devicesByPersistentID
deviceEntitiesByDevice
T@"HDDatabaseValueCache",&,N,V_deviceEntitiesByDevice
noneDeviceID
T@"NSNumber",C,V_noneDeviceID
Network failure during Cloud Sync Operation
iCloud Quota Exceeded during Cloud Sync Operation
Partial error with fatal underlying errors
fetchLocationResponse
fetchNextLocationResponse
hasFetchLocationResponse
T@"HDCodableRoutineLocationResponse",&,N,V_fetchLocationResponse
hasFetchNextLocationResponse
T@"HDCodableRoutinePredictedLocationsResponse",&,N,V_fetchNextLocationResponse
clientProcessBundleIdentifier
T@"NSString",R,C,N,V_clientProcessBundleIdentifier
clientApplicationIdentifier
T@"NSString",R,C,N,V_clientApplicationIdentifier
TB,R,N,V_requiresCoreLocationAssertion
TB,R,N,V_supportsAppRelaunchForRecovery
B24@?0@?<B@?@"HKSample"@"NSNumber"^@>8^@16
@"HKStatistics"16@?0@"HKStatistics"8
unitTest_queryServerStatisticsEnumerationHandler
T@?,C,N,V_unitTest_queryServerStatisticsEnumerationHandler
unitTest_queryServerUpdateStatisticsHandler
T@?,C,N,V_unitTest_queryServerUpdateStatisticsHandler
unitTest_queryServerUnableToUpdateStatisticsHandler
T@?,C,N,V_unitTest_queryServerUnableToUpdateStatisticsHandler
anchorDate
T@"NSDate",R,N,V_anchorDate
T@"HKQuantitySample",R,N,V_series
T@"NSNumber",R,C,N,V_anchor
quantities
T@"NSMutableArray",R,N,V_quantities
HDTaskServerDidInvalidateNotification
HDTaskServerUUIDKey
Invalid plugin URL for task server registration: %@
%@ does not respond to taskIdentifier
Attempt to register class '%@' as a task server for '%@', but class '%@' is already registered for that identifier.
HDTaskServerRegistry.m
taskUUID != nil
v16@?0@"<HDTaskServerObserver>"8
No registered task server for identifier '%@'
Task server class %@ failed to implement requiredEntitlements
Invalid configuration class %@ (expected %@)
Task server class %@ does not implement configurationClass
Task server class %@ failed to implement validateConfiguration:error:
Failed to instantiate task server endpoint for '%@'
%@ (%@):
(%ld, [%@], %@)
, (%ld, [%@], %@)
HDActivityCacheStatisticsBuilder.mm
HKVectorIsSorted(workouts)
HKVectorIsSorted(activationLogSamples)
intervalDuration
Td,N,V_intervalDuration
sourceOrderDelegate
T@"<HDActivityCacheStatisticsBuilderSourceOrderDelegate>",W,N,V_sourceOrderDelegate
HDCloudSyncCompoundOperationUnderlyingErrorsKey
HDCloudSyncCompoundOperation.m
isCurrentOperation
preceedingOperation != nil
<%@:%p %@ (%ld): %@>
@16@?0@"HDCloudSyncOperation"8
continueOnSubOperationError
TB,R,V_continueOnSubOperationError
preparationHandler
T@?,C,V_preparationHandler
Step Climber Data: floors = %@, stepCount = %@, stepPerMinute = %@, averageStepRate = %@, positiveElevationGain = %@, totalEnergy = %@, energyPerHour = %@, energyPerMinute = %@, heartRate = %@, metabolicEquivalent = %@, elapsedTime = %@, remainingTime = %@
entityType
hasEntityType
Tq,N,V_entityType
bedtimeToCorrectedBedtimeMinutes
bedtimeToFirstSleepInterruptionMinutes
bedtimeToStartOfLongestSleepIntervalMinutes
correctedBedtimeToThirdPartySleepOnsetMinutes
wakeupTimeToThirdPartyWakeupTimeMinutes
percentOfDesiredSleep
bedtimeHour
bedtimeMinute
wakeupIsOnWeekday
hasBedtimeToCorrectedBedtimeMinutes
Tq,N,V_bedtimeToCorrectedBedtimeMinutes
hasBedtimeToFirstSleepInterruptionMinutes
Tq,N,V_bedtimeToFirstSleepInterruptionMinutes
hasBedtimeToStartOfLongestSleepIntervalMinutes
Tq,N,V_bedtimeToStartOfLongestSleepIntervalMinutes
hasCorrectedBedtimeToThirdPartySleepOnsetMinutes
Tq,N,V_correctedBedtimeToThirdPartySleepOnsetMinutes
hasWakeupTimeToThirdPartyWakeupTimeMinutes
Tq,N,V_wakeupTimeToThirdPartyWakeupTimeMinutes
hasPercentOfDesiredSleep
Tq,N,V_percentOfDesiredSleep
hasBedtimeHour
Tq,N,V_bedtimeHour
hasBedtimeMinute
Tq,N,V_bedtimeMinute
hasWakeupIsOnWeekday
TB,N,V_wakeupIsOnWeekday
com.apple.healthd.healthrecords.HDClinicalCredentialManager
credential-key
Token encryption failed.
Token data decryption failed
HDLegacyClinicalCredentialManager.m
initializationVector.length == _InitializationVectorLength
Overrelease of cryptor.
Unable to allocate output buffer of length %zu for input of length %zu
Encrypted token data %@ missing initialization vector. Expected at least %zd bytes.
Token contains invalid padding.
Failed to decode token data.
Failed to encode token.
Failed to encrypt credential token. Output buffer too small.
Failed to decrypt credential token. Total number of bytes is not an integral multiple of the current algorithm's block size.
Failed to encrypt credential token. Incorrect key size.
Failed to encrypt credential token. CCCryptorStatus: %d
Failed to fetch credential key fingerprint
Failed to allocate buffer for fingerprint.
Credential key not found.
Credential key not accessible.
Failed to fetch credential key. OSStatus: %d
Credential key exists in Keychain.
Failed to add credential key. OSStatus: %d
Failed to delete credential key. OSStatus: %d
length > 0
Failed to allocate buffer for random bytes.
Failed to generate random bytes. OSStatus: %d
credentialKeyQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_credentialKeyQueue
cachedCredentialKey
T@"NSData",C,N
com.apple.healthd.healthrecords.credential-key
syncSchemaIdentifier
orderedSyncEntities
syncEntitiesByIdentifier
audio-exposure-event
HDHFDataStore.mm
atomic_load(&_invalidated)
<%@:%p %@ %s OPEN>
INVALIDATED
<%@:%p %@ %s PENDING DISCARD>
<%@:%p %@ %s closed>
Timed out attempting to open the HFD.
%@: Reached timeout waiting for existing data store to close the HFD.
HFD invalidated
block != nil
An object that was not an exception was thrown
T@"<HDHFDataStoreDelegate>",W,N,V_delegate
fileSystemPath
T@"NSString",R,C,N,V_fileSystemPath
v16@?0@"NSHashTable"8
B16@?0@"NSHashTable"8
objectsToInsertByDataProvenance
objectsToDelete
T@"NSDictionary",R,C,N,V_objectsToInsertByDataProvenance
T@"NSArray",R,C,N,V_objectsToDelete
T@"NSDictionary",R,C,N,V_associations
com.apple.MobileAsset.HealthKit.Ontology
com.apple.healthd.ontology-asset-catalog-activity
awaiting download
download complete
unknown value %zd
downloadManagerCallbackQueue
availabilityHandlerInvocationQueue
Contents
ContentPath
HDUnitTestingBaseURLOverride
IgnoreReferenceOntologyAssetEquality
ReferenceOntologyFileURL
HDOntologyAssetManager.m
ReferenceOntologyCatalogUpdateIntervalInSeconds
v32@?0@"MAAsset"8Q16^B24
Invalid downloadManager configuration: shouldAutoDownloadRemoteAssets == YES
HDOntologyAssetManager.TriggerDownload
v20@?0I8@"PBCodable"12
Not an Apple internal install
latestOntologyAsset
T@"MAAsset",R,N,V_latestOntologyAsset
assetDownloadManager
T@"_HKMobileAssetDownloadManager",R,N
completionsByActivityName
T@"NSMutableDictionary",R,C,N,V_completionsByActivityName
currentOntologyAsset
T@"MAAsset",&,N,V_currentOntologyAsset
simulatedCompatibilityVersion
Tq,N,V_simulatedCompatibilityVersion
assetDownloadEnabled
TB,N,V_assetDownloadEnabled
catalogUpdatePeriodicActivity
T@"HDPeriodicActivity",&,N,V_catalogUpdatePeriodicActivity
AWDMetricPosterBlock
T@?,C,N,V_AWDMetricPosterBlock
assetFileURL
assetFileVersion
ontology asset content version
ontology asset compatibility version
hd_availability
hd_contentVersion
hd_compatibilityVersion
HDCloudSyncStartSequenceOperation.m
shouldClearRebaselineDeadline
cloudDescription
T@"NSString",C,V_cloudDescription
alertType
dndEnabled
failedPosting
experimentalCondition
testAction
calendarItem
views
activityCache
achievement
weeklySummaryDetail
goalTypes
responseFlags
hasAlertType
Ti,N,V_alertType
hasDndEnabled
TB,N,V_dndEnabled
hasFailedPosting
TB,N,V_failedPosting
hasExperimentalCondition
T@"HDAWDHealthKitExperimentalCondition",&,N,V_experimentalCondition
hasTestAction
Ti,N,V_testAction
hasCalendarItem
T@"HDAWDHealthKitConcurrentCalendarItem",&,N,V_calendarItem
T@"NSMutableArray",&,N,V_views
hasActivityCache
T@"HDAWDHealthKitActivityCache",&,N,V_activityCache
hasAchievement
T@"HDAWDHealthKitAchievement",&,N,V_achievement
hasWeeklySummaryDetail
T@"HDAWDHealthKitWeeklySummaryDetail",&,N,V_weeklySummaryDetail
goalTypesCount
T^I,R,N
hasResponseFlags
T@"HDAWDHealthKitNotificationResponseFlags",&,N,V_responseFlags
GoalProgress
GoalCompletion
StandAlert
WeeklyGoal
StandActive
StandSuccess
Achievement
DeepBreathing
DeepBreathingWeekly
Allow
Ignore
appleID
callerID
hasAppleID
T@"NSString",&,N,V_appleID
hasCallerID
T@"NSString",&,N,V_callerID
v20@?0@"NSArray"8B16
dataFilters
T@"NSDictionary",R,N,V_dataFilters
HKQuery
HKDatabase
HKDataCollection
Duration
Series
Migration
%lld,%lf
%ld,%ld
unitTesting_didReportHandler
T@?,C,N,V_unitTesting_didReportHandler
eventType
recommendedGoal
newGoal
features
hasEventType
TI,N,V_eventType
TI,N,V_dismissReason
hasRecommendedGoal
TI,N,V_recommendedGoal
hasNewGoal
TI,N,V_newGoal
TQ,N,V_duration
hasFeatures
T@"HDAWDHealthKitCoachingFeatureGroup",&,N,V_features
session
data_interval
types_while_paused
should_collect_events
Could not find source for application
v40@?0@"HKQuantityType"8@"HKStatistics"16@"HDStatisticsCollectionCalculator"24@"NSNumber"32
SELECT %@, %@, %@, %@, %@, %@, %@, %@, %@ FROM %@ WHERE %@ = ?
B32@?0@"HDDatabaseTransaction"8@"HDSQLitePredicate"16^@24
CREATE TEMPORARY TABLE %@ (%@ BLOB NOT NULL)
INSERT INTO %@ (%@) VALUES (?)
CREATE INDEX %@_idx ON %@ (%@)
DROP TABLE %@
A protected data transaction is required.
B52@?0q8@"NSUUID"16B24d28d36^@44
workout_builders
(1=1)
HDWorkoutBuilderAssociatedSampleTemporaryTableEntityLocalTableKey
HDWorkoutBuilderEntity.mm
Must have set the current thread's local table name.
HDQuantitySampleSeriesDataEnumerator.mm
_hasFetchedData
This enumerator has experienced a fatal error
Enumerator experienced fatal error while filling value buffer
This enumerator is already done
<%@ transaction:%@ persistentID:%lld dataTypeCode:%ld UUID:%@ sourceID:%lld HFDKey:%lld startTime:%f endTime:%f nextDatumTime:%f done:%@>
objectIdentifier
T{ObjectIdentifier=qQ},N,V_objectIdentifier
hasFetchedData
TB,N,V_hasFetchedData
lastFetchedDatumTime
Td,N,V_lastFetchedDatumTime
lastDatumTime
Td,N,V_lastDatumTime
hasFetchedAllData
TB,N,V_hasFetchedAllData
dataTypeCode
Tq,R,N,V_dataTypeCode
UUIDBytesPtr
T^[16C],R,N
Tq,R,N,V_count
Tq,R,N,V_sourceID
HFDKey
Tq,R,N,V_HFDKey
device_uuid
device_name
device_service
device_last_connect
device_enabled
known_devices
BOOLEAN default 1
SELECT %@, %@ FROM %@ WHERE %@ = ? AND %@ = ?
Could not find the health service in the database.
device not found
year
month
hour
minute
second
weekday
weekdayOrdinal
quarter
weekOfMonth
weekOfYear
yearForWeekOfYear
nanosecond
timeZone
hasEra
Tq,N,V_era
hasYear
Tq,N,V_year
hasMonth
Tq,N,V_month
hasDay
Tq,N,V_day
hasHour
Tq,N,V_hour
hasMinute
Tq,N,V_minute
hasSecond
Tq,N,V_second
hasWeekday
Tq,N,V_weekday
hasWeekdayOrdinal
Tq,N,V_weekdayOrdinal
hasQuarter
Tq,N,V_quarter
hasWeekOfMonth
Tq,N,V_weekOfMonth
hasWeekOfYear
Tq,N,V_weekOfYear
hasYearForWeekOfYear
Tq,N,V_yearForWeekOfYear
hasNanosecond
Tq,N,V_nanosecond
hasCalendar
T@"NSString",&,N,V_calendar
hasTimeZone
T@"NSString",&,N,V_timeZone
HDSyncAnchorMap.m
syncEntityClass != Nil
v32@?0@"HDSyncEntityIdentifier"8@"NSNumber"16^B24
%@: %lld
AnchorByObjectType
AnchorByEntityIdentifier
anchorsByEntityIdentifier
T@"NSMutableDictionary",&,N,V_anchorsByEntityIdentifier
secondaryContext
%@ (%@): %@, %@
T@"HDSourceEntity",R,V_sourceEntity
v32@?0@"<HDSensorDatum>"8@16@"NSError"24
CoreMotion indicated a database reset.
B40@?0@"NSArray"8@"<HDSensorDatum>"16@"NSDate"24@"NSDate"32
maxDatumDuration
requiresSampleAggregation
id<HDSensorDatum> HDDataCollectorEnumerateBatches(NSArray<id<HDSensorDatum>> *__strong, __strong id<HDSensorDatum>, NSTimeInterval, NSTimeInterval, __strong HDDataCollectorBatchingCallback)
HDDataCollector.m
@"NSDate"24@?0@"<HDSensorDatum>"8@"<HDSensorDatum>"16
B16@?0@"<HDSensorDatum>"8
Idle
Failure
Streaming
Unknown <%ld>
(%@,%@)
com.apple.healthd.prune-database
HDDatabasePruningLastAttemptDateKey
HDDatabasePruningCompletedKey
pruneDatabase
Database Pruning
Last attempt: %@ (%scomplete)
timerSource
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
daily-report
syncEnabled
syncDisabledErrorDomain
syncDisabledErrorCode
timeSinceRestoreStart
journalSize
timeSinceLastSuccessfulPull
timeSinceLastSuccessfulPush
timeSinceLastPushForwardProgress
storeCount
zoneCount
errorRequiringUserActionDomain
errorRequiringUserActionCode
FetchMissingManateeIdentity
OwnershipChangePushMissingManateeIdentity
ownership-change
periodic.start
periodic.success
periodic.failure
rebase-trigger.deletion
byUser
restore.complete
pullCompleteDate
pullStartDate
finishedJournalMerge
dbSize
hfdSize
journalCount
pipeline.started
pipeline.finished
operation.finished
sucess
operation.started
com.apple.healthd.sync.cloud.%@
Generation
Anchor
DeletionAnchors
generation
Tq,R,N,V_generation
deletionAnchors
T@"NSDictionary",R,C,N,V_deletionAnchors
<%@:%p clientIdentifer:%@>
HDRestorableAlarm.m
_eventsHandler == nil
v28@?0@"HDRestorableAlarmScheduler"8B16@"NSError"20
eventsHandler != nil
Outstanding event identifiers:
T@"HDXPCAlarm",R,N
vaccinationCodings
expirationDate
doseNumber
doseQuantity
notGiven
administrationDate
patientReported
routeCodings
reasonsCodings
reasonsNotGivenCodings
hasVaccinationCodings
T@"HDCodableMedicalCodingList",&,N,V_vaccinationCodings
hasExpirationDate
T@"NSData",&,N,V_expirationDate
hasDoseNumber
T@"NSString",&,N,V_doseNumber
hasDoseQuantity
T@"NSString",&,N,V_doseQuantity
hasPerformer
T@"NSString",&,N,V_performer
hasReaction
T@"NSString",&,N,V_reaction
hasNotGiven
TB,N,V_notGiven
hasAdministrationDate
T@"NSData",&,N,V_administrationDate
hasPatientReported
TB,N,V_patientReported
hasRouteCodings
T@"HDCodableMedicalCodingList",&,N,V_routeCodings
hasReasonsCodings
T@"HDCodableMedicalCodingListList",&,N,V_reasonsCodings
hasReasonsNotGivenCodings
T@"HDCodableMedicalCodingListList",&,N,V_reasonsNotGivenCodings
is_watch_workout
is_indoor_workout
device_manufacturer
device_model
scwi
fitness_friend_workouts
INTEGER DEFAULT 0
HDFitnessFriendWorkoutEntity.m
+[HDFitnessFriendWorkoutEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
currentOntologyVersion
hoursSinceLastAssetDownload
downloadPhase
hasCurrentOntologyVersion
Tq,N,V_currentOntologyVersion
hasHoursSinceLastAssetDownload
Tq,N,V_hoursSinceLastAssetDownload
hasDownloadPhase
Ti,N,V_downloadPhase
CatalogDownloadNotAttempted
CatalogDownloadAttempted
CatalogDownloadCompleted
AssetDownloadAttempted
AssetDownloadCompleted
hk_writeValue file error: %@
hk_writeValue file size mismatch.
hk_readValue file size mismatch.
hk_readValue file error: %@
NextCommonColdSymptomsTimeKey
NextFoodPoisoningSymptomsTimeKey
NextSingleRandomSymptomTimeKey
nextCommonColdSymptomsTime
Td,N,V_nextCommonColdSymptomsTime
nextFoodPoisoningSymptomsTime
Td,N,V_nextFoodPoisoningSymptomsTime
nextSingleRandomSymptomTime
Td,N,V_nextSingleRandomSymptomTime
birthdate
blood_type
body_mass
lean_body_mass
fitzpatrick_skin_type
user_entered_menstrual_cycle_length
user_entered_period_cycle_length
cardio_fitness_medications_use
Invalid characteristic type %@
(1=0)
T@"NSString",R,N,V_property
%@%%
%%%@
%%%@%%
(%@%@ %@ ?)
<"%@%@" %@ %@>
comparisonType
Tq,R,N,V_comparisonType
(%@ LIKE ? ESCAPE '%@')
escapeCharacter
T@"NSString",R,N,V_escapeCharacter
(IFNULL(%@, ?) %@ ?)
<"(%@, %@)" %@ %@>
ifPropertyIsNullValue
T@,R,C,N,V_ifPropertyIsNullValue
(COALESCE(%@) %@ ?)
<"(%@)" %@ %@>
properties
T@"NSArray",R,C,N,V_properties
 IN (
 NOT IN (
@"NSString"16@?0@8
<"%@" %sIN (%@)>
NOT 
contains
TB,R,N,V_contains
(%@ %@)
<"%@" IS %sNULL>
matchesNull
TB,R,N,V_matchesNull
 AND 
{%@:
predicates
T@"NSArray",R,N,V_predicates
HDSQLitePredicate.m
sql != nil
<SQL: '%@>' joining over (%@)
joinClauses
T@"NSSet",R,C,N,V_joinClauses
LIKE
NSString *HDSQLOperatorForComparisonType(HDSQLiteComparisonType)
Invalid comparison type: %ld
void _BindValueToStatement(__strong id, sqlite3_stmt *, int *)
Unsupported predicate value: %@
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
workout-condenser
workoutsToCondense
workoutsToRecondense
condensedWorkouts
processedWorkouts
createdSeries
gymkit-workout
timeToBeginExperience
errorReason
com.apple.healthd.workout.%@
hdsce_archived_representation
needs_config
v16@?0@"HKStatistics"8
merge_strategy
interval_collection
merge_granularity
computation_method
T@"HKQuantityType",R,C,N
intervalCollection
T@"_HKDateIntervalCollection",R,C,N
computationMethod
Tq,R,N,V_computationMethod
T@"NSDateInterval",C,N
Td,N
T@"NSArray",R,C,N,V_maskedIntervals
statisticsHandler
T@?,C,N,V_statisticsHandler
dataSource
T@"<HDStatisticsCollectionCalculatorDataSource>",W,N
sourceOrderProvider
T@"<HDStatisticsCollectionCalculatorSourceOrderProvider>",W,N,V_sourceOrderProvider
void HDStatisticsBucket<HDStatisticsCombined<HDStatisticsDiscrete, HDStatisticsTimeInterval> >::_mergeThroughTime(double) [Statistics = HDStatisticsCombined<HDStatisticsDiscrete, HDStatisticsTimeInterval>]
HDStatisticsBucket.hpp
Failed to make forward progress during statistics merge.
Cannot configure statistics collection calculator engine with a sample if we cannot merge up to the sample's start date
q24@?0@"NSDateInterval"8@"NSDateInterval"16
Unable to invalidate interval: no data source available.
Unable to query for initial statistics: no data source available.
void HDStatisticsBucket<HDStatisticsDiscrete>::_mergeThroughTime(double) [Statistics = HDStatisticsDiscrete]
void HDStatisticsBucket<HDStatisticsCombined<HDStatisticsCumulative, HDStatisticsTimeInterval> >::_mergeThroughTime(double) [Statistics = HDStatisticsCombined<HDStatisticsCumulative, HDStatisticsTimeInterval>]
void HDStatisticsBucket<HDStatisticsCumulative>::_mergeThroughTime(double) [Statistics = HDStatisticsCumulative]
void HDStatisticsBucket<HDStatisticsCombined<HDStatisticsTemporalBucketWeightedDiscrete<HDStatisticsTemporalBucketWeightedDiscreteParameters>, HDStatisticsTimeInterval> >::_mergeThroughTime(double) [Statistics = HDStatisticsCombined<HDStatisticsTemporalBucketWeightedDiscrete<HDStatisticsTemporalBucketWeightedDiscreteParameters>, HDStatisticsTimeInterval>]
void HDStatisticsBucket<HDStatisticsTemporalBucketWeightedDiscrete<HDStatisticsTemporalBucketWeightedDiscreteParameters> >::_mergeThroughTime(double) [Statistics = HDStatisticsTemporalBucketWeightedDiscrete<HDStatisticsTemporalBucketWeightedDiscreteParameters>]
void HDStatisticsBucket<HDStatisticsCombined<HDStatisticsTemporallyWeightedDiscrete<HDStatisticsTemporallyWeightedDiscreteParameters>, HDStatisticsTimeInterval> >::_mergeThroughTime(double) [Statistics = HDStatisticsCombined<HDStatisticsTemporallyWeightedDiscrete<HDStatisticsTemporallyWeightedDiscreteParameters>, HDStatisticsTimeInterval>]
void HDStatisticsBucket<HDStatisticsTemporallyWeightedDiscrete<HDStatisticsTemporallyWeightedDiscreteParameters> >::_mergeThroughTime(double) [Statistics = HDStatisticsTemporallyWeightedDiscrete<HDStatisticsTemporallyWeightedDiscreteParameters>]
void HDStatisticsBucket<HDStatisticsCombined<HDStatisticsTimeInterval, HDStatisticsTimeInterval> >::_mergeThroughTime(double) [Statistics = HDStatisticsCombined<HDStatisticsTimeInterval, HDStatisticsTimeInterval>]
void HDStatisticsBucket<HDStatisticsTimeInterval>::_mergeThroughTime(double) [Statistics = HDStatisticsTimeInterval]
void HDStatisticsBucket<HDStatisticsCombined<HDStatisticsNoiseLevel, HDStatisticsTimeInterval> >::_mergeThroughTime(double) [Statistics = HDStatisticsCombined<HDStatisticsNoiseLevel, HDStatisticsTimeInterval>]
void HDStatisticsBucket<HDStatisticsNoiseLevel>::_mergeThroughTime(double) [Statistics = HDStatisticsNoiseLevel]
void HDStatisticsBucket<HDStatisticsCombined<HDStatisticsAverageSampleDuration, HDStatisticsTimeInterval> >::_mergeThroughTime(double) [Statistics = HDStatisticsCombined<HDStatisticsAverageSampleDuration, HDStatisticsTimeInterval>]
void HDStatisticsBucket<HDStatisticsAverageSampleDuration>::_mergeThroughTime(double) [Statistics = HDStatisticsAverageSampleDuration]
HDBatchedQueryServer.m
sample != nil || deletedObject != nil
com.appleinternal.health.Lime.
com.apple.Research.
@16@?0@"HKSample"8
unitTest_queryServerObjectEnumerationHandler
T@?,C,N,V_unitTest_queryServerObjectEnumerationHandler
unitTest_queryServerWillSendBatchHandler
T@?,C,N,V_unitTest_queryServerWillSendBatchHandler
currentBucket
currentBucketIndex
fhir_resource_fhir_version_major
fhir_resource_fhir_version_minor
fhir_resource_fhir_version_patch
fhir_resource_resource_type
fhir_resource_identifier
fhir_resource_data
fhir_resource_source_url
fhir_resource_last_updated_date
clinical_record_samples
HDClinicalRecordEntity.m
+[HDClinicalRecordEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
HDDataEntityEnumerator.m
outError != NULL
Querying with a nil entity class %@. You're about to be sad. Did you forget to implement -hd_dataEntityClass or an extension in HKObject+HDExtensions?
%@ is not a valid sort key for samples of type %@
<no provided outError>
 LEFT JOIN %@ USING(%@)
T@"_HKFilter",&,N,V_filter
T@"NSSet",R,N,V_objectTypes
T@"NSSet",&,N,V_restrictedSourceEntities
T@?,C,N,V_authorizationFilter
T@"NSNumber",&,N,V_anchor
deletedObjectsAnchor
T@"NSNumber",&,N,V_deletedObjectsAnchor
deletedObjectsPredicate
T@"HDSQLitePredicate",C,N,V_deletedObjectsPredicate
T@"NSArray",C,N,V_sortDescriptors
ignoreEntityClassAdditionalPredicateForEnumeration
TB,N,V_ignoreEntityClassAdditionalPredicateForEnumeration
improveJoinOrderingForStartDateIndexSelection
TB,N,V_improveJoinOrderingForStartDateIndexSelection
lastSQL
T@"NSString",R,C,N,V_lastSQL
v16@?0@"HDActivityCacheStatisticsBuilder"8
T@"HDHealthServiceCharacteristic",&,N,V_characteristic
expectResponse
TB,N,V_expectResponse
Device disconnected
Subclass %@ must override serviceType.
Subclass %@ must override serviceUUID.
Write characteristic not supported
Device not connected: %@
T@"HDHealthServiceManager",&,N,V_serviceManager
writableCharacteristics
T@"NSMutableDictionary",&,N,V_writableCharacteristics
writeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_writeQueue
pendingWrites
T@"NSMutableArray",&,N,V_pendingWrites
healthPeripheral
T@"HDHealthPeripheral",R,W,N,V_healthPeripheral
peripheralUUID
T@"NSUUID",R,N,V_peripheralUUID
deliverData
TB,V_deliverData
serviceId
T@"NSString",&,N,V_serviceId
characteristicsDiscovered
TB,R,N,V_characteristicsDiscovered
GetCodings
ApplyConcepts
@16@?0@"HKSampleQueryDescription"8
Profile is nil
T@"NSUUID",R
T@"NSLocale",R,C,N
Unsupported sample class (%@) when generating concept index
@16@?0@"HKIndexableObject"8
Device not found for pairing ID: %@
Device with %@ pairing ID not found
Unauthorized access to modify availability of feature %@
No profile extension providing feature availability for %@
Unauthorized access to availability of feature %@
Health Demo Data
Generation of demo data complete
 %ld s elapsed
 %ld samples written
Generation of demo data complete
 %.1f s elapsed
 %ld samples written
Generation of demo data complete
 %ld ms elapsed
 %ld samples written
generator
T@"HDDemoDataGenerator",R,N,V_generator
Error occurred while attempting to sync a file: {0} {1}
Error occurred writing {0} bytes at {1}: {2} {3}
Error occurred attempting to read {0} bytes at {1}: {2} {3}
Error occurred attempting to mmap {0} bytes at {1}: {2} {3}
Error occurred while attempting to truncate file to length {0}: {1} {2}
close
/Library/Caches/com.apple.xbs/Sources/HealthKit_Sim/HealthKit-1774.2.1.25.2/HealthKit/HealthDaemon/Database/HighFrequencyData/HDVirtualFilesystem.cpp
Unexpected errno value for file close: {0} {1}
Reached max retry count ({0}) for file close: {1} {2}
Failed to set protection class when creating file at '{0}': {1} {2}
Error occurred opening file at '{0}': {1} {2}
Error occurred unlinking file at '{0}': {1} {2}
File has been failed.
Read-only file.
HDAppleExerciseTimeDataAggregator.m
com.apple.healthkit.background-observation
extension.%@
[%@] app extension failed to get extension context for sessionUUID: %@
app extension has no active connection
%@: <%p> Extension ID: %@, App Bundle ID: %@
unitTest_notifiedExtensionDueToTimeout
TB,N,V_unitTest_notifiedExtensionDueToTimeout
extensionIdentifier
T@"NSString",R,C,N,V_extensionIdentifier
appIdentifier
T@"NSString",R,C,N,V_appIdentifier
wLocationType
wLengthValue
wLengthUnitString
Tq,N,V_activityType
Tq,N,V_locationType
hasWLocationType
Tq,N,V_wLocationType
hasWLengthValue
Td,N,V_wLengthValue
hasWLengthUnitString
T@"NSString",&,N,V_wLengthUnitString
CurrentLocation
CachedLocation
InternalBattery
device-power-observers
v16@?0@"CUPowerSource"8
v20@?0@"CUPowerSource"8I16
v16@?0@"<HDDevicePowerObserver>"8
primarySourceIsCharging
Pull Changes
hasAppliedChange
TB,R,N,V_hasAppliedChange
HDCloudSyncManagerTask.m
hasOriginalTask == NO
status == HDCloudSyncManagerTaskStatusPending
status != HDCloudSyncManagerTaskStatusPending
mirroringTask
originalTask
T@"NSProgress",R,V_progress
T@"HDCloudSyncManagerTask",R,V_originalTask
mirroringTasks
T@"NSArray",R,C,V_mirroringTasks
T@"<HDCloudSyncManagerTaskQueueDelegate>",W,V_delegate
pendingTaskCount
hasActiveTask
activeTask
T@"HDCloudSyncManagerTask",R
start
Profile type %ld requires a zone owner name but none was present.
Unexpected profile type %ld; requiring zone owner to be safe.
shouldFetchSubscriptions
TB,N,V_shouldFetchSubscriptions
builder_id
client_bundle_id
client_application_id
requested_target_state
has_failed
latest_activity_date
SELECT %@ FROM %@ WHERE %@ >= ? ORDER BY %@ DESC LIMIT 1
workout_sessions
INTEGER NOT NULL DEFAULT 1
Integrity checking failed due to caught exception: {0} {1}
Existing object not found when attempting to rename.
Attempt to rename an object would result in a collision.
Corrupt Header
Free Space Corruption
{0}: [{1}, {2}] {3}
Root node failed validation: {0}
Node contains too many values!
Node values are out of order!
Leaf node {0} failed validation: {1}
Interior node {0} failed validation: {1}
Value retrieval failed for {0}: enumerated value {1} but lookup value is {2}.
Value retrieval failed for {0}: enumerated value {1} but lookup failed.
Target block for {0} has 0 length
Attempt to get the value from an invalid optional.
({0}: {1})
Caught exception during tree rebuild: {0}
HDActivityCacheHeartRateStatisticsBuilder.mm
HKVectorIsSorted(heartRateSamples)
@16@?0@"HKHeartRateSummaryWorkoutStatistics"8
B16@?0@"HKHeartRateSummaryReading"8
HKVectorIsSorted(breatheSessions)
heartRateSummary
T@"HKHeartRateSummary",R,N
sampleTypesToCollect
T@"NSSet",C,N
T@"HDCloudSyncSequenceRecord",&,N,V_sequenceRecord
Errors
LastPromptDate
LastPromptBuild
Health error, %@
Health has run into a number of errors. Please file a radar with Tap-to-Radar against 'Health'
[%@] Multiple errors detected
Multiple errors detected %@
%@ Values:
%@: %@
%@: %@
%@: %@
Error not provided
%@. Last Prompt (%@, %@), Current (%@) Errors (%lu): %@
%@. Please file a radar with Tap-to-Radar against 'Health'
%@.ErrorDate
%@.Reason
T@"NSString",R,N,V_name
minimumPromptInterval
Td,N,V_minimumPromptInterval
maximumErrorCount
Tq,N,V_maximumErrorCount
canRepromptOnSameBuild
TB,N,V_canRepromptOnSameBuild
notificationTitle
T@"NSString",C,N,V_notificationTitle
notificationMessage
T@"NSString",C,N,V_notificationMessage
radarTitle
T@"NSString",C,N,V_radarTitle
radarDescription
T@"NSString",C,N,V_radarDescription
CREATE TABLE IF NOT EXISTS profile_authorization (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, source_bundle_id TEXT NOT NULL UNIQUE, status INTEGER NOT NULL, date_modified REAL NOT NULL)
HDCloudSyncRegisterSubscriptionsOperation.m
Record type nil for subscription after validation.
Received nil for non-nil field 'vaccinationCodings'
Received nil for non-nil field 'administrationDate'
Ready
AwaitingFinalData
Saving
Finalized
activate
receive-final-data
saved-workout
sample-observers
data-accumulator-observers
upstream
HDWorkoutBuilderServer.m
Failed to initialize current state after loading or creating our persistent entity.
nil workoutConfiguration
<%@_%@ %@>
Workout builder requires recovery but no persisted state was found.
Workout builder configuration does not match persisted configuration for this identifier.
v16@?0@"<HDWorkoutBuilderServerSampleObserer>"8
@16@?0@"_HKWorkoutEvent"8
Workout builder has been discarded.
Update target state
Adding samples
Adding events
Adding metadata
Removing metadata
Client is missing private entitlement
v16@?0@"<HDWorkoutDataAccumulatorObserver>"8
Consecutive pause events.
Consecutive resume events.
q24@?0@"HKQuantitySample"8@"HKQuantitySample"16
B24@?0@"HKSample"8^@16
Workout Builder is finalized.
Workout builder has encountered an unexpected failure.
Unexpected workout builder state.
_workoutDataFlowLink != nil
T@"HKWorkoutBuilderConfiguration",&,N,V_configuration
T@"NSMutableDictionary",&,N,V_metadata
T@"NSArray",&,N,V_workoutEvents
workoutStartDate
T@"NSDate",C,N,V_workoutStartDate
workoutEndDate
T@"NSDate",C,N,V_workoutEndDate
dataInterval
T@"NSDateInterval",C,N,V_dataInterval
showDemoActivityData
demoEnergyBurned
demoExerciseMinutes
demoStandHours
demoSteps
demoPushes
demoDistance
demoFlightsClimbed
demoAppleMoveTime
demoActivityMoveMode
.array
v56@?0@"NSString"8@"NSString"16@24@"NSDate"32q40^B48
@"NSDate"40@?0@"NSString"8@16@"NSDate"24q32
HDKeyValueEntity.m
(date == nil) || [date isKindOfClass:[NSDate class]]
(dateComponents == nil) || [dateComponents isKindOfClass:[NSDateComponents class]]
quanity == nil || [quanity isKindOfClass:[HKQuantity class]]
(number == nil) || [number isKindOfClass:[NSNumber class]]
(string == nil) || [string isKindOfClass:[NSString class]]
@40@?0@"NSString"8@16@"NSDate"24q32
[keys count] > 0
[self _validateEntityClassForCategory:category]
keysAndValues != nil
[values count] == count
[dates count] == count
domain != nil
SELECT %@ FROM %@ WHERE %@ = ? AND %@ = ? AND %@ = ? AND %@ >= ?;
key_value_secure
key_value
purpose != HDEntityEncodingPurposeObjectInstantiation
Missing category
Missing key in pair for %ld (%@)
Missing timestamp in pair for %ld (%@)
updatePolicy
T@"<NSSecureCoding>",R,N,V_value
T@"NSString",R,N,V_domain
T@"NSDate",R,N,V_modificationDate
Tq,R,N,V_updatePolicy
HDIDSErrorDomain
HDIDSContext
HDIDSMessageCenter.m
serviceIdentifier != nil
persistentDictionary != nil
com.apple.private.alloy.
%@: "%@"
Cannot use %@ after using -resume
key != nil
obj != nil
stop != NULL
v40@?0@"NSString"8@16d24^B32
atomic_load(&_invalidated) == false
request.toParticipant != nil
You cannot call sendRequest twice for the same request object
Cannot use %@ until -resume is used
missing destination device identifer for %@
Response's request needs an idsIdentifier
Response's to participant not found
You cannot call send twice for the same response object
missing device identifer in request %@
device != nil
*** IDS BUG! idsContext must have an outgoingResponseIdentifier or expectsPeerResponse must be false.
T@"<HDIDSMessageCenterDelegate>",W,N,V_delegate
idsService
T@"IDSService",R,N
serviceIdentifier
T@"NSString",R,C,N,V_serviceIdentifier
<%@ %p> messageID: %hu
T@"HDIDSMessageCenter",W,N,V_messageCenter
idsIdentifier
T@"NSString",C,N,V_idsIdentifier
pbRequest
T@,&,N,V_pbRequest
messageID
TS,R,N,V_messageID
toParticipant
T@"HDIDSParticipant",R,N,V_toParticipant
TQ,N,V_priority
sendTimeout
Td,N,V_sendTimeout
responseTimeout
Td,N,V_responseTimeout
persistentUserInfo
T@"NSDictionary",&,N,V_persistentUserInfo
doNotCompress
TB,N,V_doNotCompress
queueOnly1
TB,N,V_queueOnly1
forceLocalDelivery
TB,N,V_forceLocalDelivery
Can't access -pbRequest without a mapping for messageID: %hu
fromParticipant
T@"HDIDSParticipant",&,N,V_fromParticipant
TS,N,V_messageID
expectsResponse
TB,N,V_expectsResponse
T@"HDIDSOutgoingResponse",&,N,V_response
T@,R,N
requestIDSIdentifier
T@"NSString",C,N,V_requestIDSIdentifier
requestSent
T@"NSDate",&,N,V_requestSent
requestPersistentUserInfo
T@"NSDictionary",&,N,V_requestPersistentUserInfo
pbResponse
T@,R,N,V_pbResponse
Invalid pbResponse of type %@
requestIdsIdentifier
T@"NSString",C,N,V_requestIdsIdentifier
requestMessageID
TS,N,V_requestMessageID
sent
TB,GisSent,V_sent
T@"HDIDSParticipant",&,N,V_toParticipant
T@,&,N,V_pbResponse
requestClass
T#,&,N,V_requestClass
responseClass
T#,&,N,V_responseClass
!_userInfo || [_userInfo isKindOfClass:[NSDictionary class]]
<%@:%p id:%hu ids:%@ device:%@ date:%@ fromRequest:%d userInfo:%@>
userInfo
T@"NSDictionary",&,N,V_userInfo
T@"NSDate",&,N,V_date
fromRequest
TB,N,GisFromRequest,V_fromRequest
hd_messageID
hd_messageSent
hd_messageIDSIdentifier
hd_messageIDSDeviceIdentifier
hd_persistentUserInfo
T@"NSDictionary",R,N
hd_fromRequest
TB,R,N,Ghd_isFromRequest
Urgent
workout_session_id
recovery_identifier
archived_state
workout_session_controllers
Cloud sync has been disabled for this device.
Received nil for non-nil field 'conditionCodingCollection'
Received nil for non-nil field 'categoriesCodingCollections'
weightKg
heightCm
ageYears
hasWeightKg
Tq,N,V_weightKg
hasHeightCm
Tq,N,V_heightCm
hasAgeYears
Tq,N,V_ageYears
@16@?0@"_HKFilter"8
v32@?0d8d16d24
quantityDistributionQueryServerConfiguration
T@"_HKQuantityDistributionQueryServerConfiguration",R,C,N,V_quantityDistributionQueryServerConfiguration
startInterval
Td,R,N,V_startInterval
endInterval
Td,R,N,V_endInterval
seriesClass
_HDSeriesFreezeJournalEntry.m
seriesClass != Nil
[seriesClass conformsToProtocol:@protocol(_HDSeriesFreezeJournalEntrySeries)]
%@ - freeze %@
seriesUUID
T@"NSUUID",R,C,N,V_seriesUUID
T#,R,N,V_seriesClass
codedValues
T@"NSMutableArray",&,N,V_codedValues
ratioValue
dateComponentsValue
codedQuantityValue
medicalCodingValue
codedValueCollection
medicalDateValue
medicalDateIntervalValue
dataAbsentReasonCodingsValue
hasRatioValue
T@"HDCodableRatioValue",&,N,V_ratioValue
hasDateComponentsValue
T@"HDCodableDateComponents",&,N,V_dateComponentsValue
hasCodedQuantityValue
T@"HDCodableCodedQuantity",&,N,V_codedQuantityValue
hasMedicalCodingValue
T@"HDCodableMedicalCodingList",&,N,V_medicalCodingValue
hasCodedValueCollection
T@"HDCodableCodedValueCollection",&,N,V_codedValueCollection
hasMedicalDateValue
T@"HDCodableMedicalDate",&,N,V_medicalDateValue
hasMedicalDateIntervalValue
T@"HDCodableMedicalDateInterval",&,N,V_medicalDateIntervalValue
hasDataAbsentReasonCodingsValue
T@"HDCodableMedicalCodingList",&,N,V_dataAbsentReasonCodingsValue
T@"<HKFitnessMachineConnectionClientInterface>",R,N,V_client
externalSyncObjectCode
hasExternalSyncObjectCode
Tq,N,V_externalSyncObjectCode
wakeHour
wakeMinute
bedHour
bedMinute
overrideDayIndex
hasMonday
TB,N,V_monday
hasTuesday
TB,N,V_tuesday
hasWednesday
TB,N,V_wednesday
hasThursday
TB,N,V_thursday
hasFriday
TB,N,V_friday
hasSaturday
TB,N,V_saturday
hasSunday
TB,N,V_sunday
hasWakeHour
Tq,N,V_wakeHour
hasWakeMinute
Tq,N,V_wakeMinute
hasBedHour
Tq,N,V_bedHour
hasBedMinute
Tq,N,V_bedMinute
hasOverrideDayIndex
Tq,N,V_overrideDayIndex
.current
.goal
HDCloudSyncShareSetupMetadata.m
sync_circle
profile_id
email
share_participant
share_urls
tokens
T@"NSString",R,C,N,V_ownerCloudKitEmailAddress
T@"CKShareParticipant",R,C,N,V_shareParticipant
Ignoring sync objects from %@; syncEntityClass was %@
ApplyChange
Received out-of-order message for %@: Expected sequence number %ld but received %ld
invalid required anchor map
invalid last anchor %lld
invalid anchor range %@
unexpected anchor range %@ for %@, last anchor %lld
change requires anchor %lld for %@, but we only have %lld
%@ does not conform to %@
%@ does not support speculative changes
%@.sync.%@
SynchronizeStore
HDDaemonSyncEngine.m
startAnchor != NULL
Unknown error generating and sending sync messages for entity %@
_VerifySyncEntityOrderForStore(store)
reason=%@, storeType=%ld, storeID=%@, storeEpoch=%lld
Start or final anchor is invalid.
finalAnchor >= startAnchor
allOrderedSyncEntities
allSyncEntitiesByIdentifier
unitTest_didCompleteReadTransaction
T@?,C,N
T@?,C,N,V_unitTest_didCompleteReadTransaction
BOOL _VerifySyncEntityOrderForStore(id<HDSyncStore>  _Nonnull __strong)
healthdb.sqlite
healthdb_secure.sqlite
healthdb_secure.hfd
PRAGMA %@journal_mode = WAL
HDWorkoutManagerStateDidChange
HDCurrentWorkoutSessionAssertion
session-observers
current-workout-observers
HDWorkoutManager.m
Conflicting session creation.
Cannot start when another session is active
Another session is starting
B16@?0@"HDWorkoutSessionServer"8
No current workout to pause or resume
/System/Library/LocationBundles/AppleWatchWorkout.bundle
@"NSSet"8@?0
post-launch-recovery
Active workouts have been removed
Workout process: %@ (%d)
Workout Session: %@
No currently active workouts.
@"NSUUID"16@?0@"HDWorkoutSessionServer"8
v16@?0@"<HDCurrentWorkoutObserver>"8
v16@?0@"<HDWorkoutSessionObserver>"8
Workout session is not current
supported
DISABLED
Workout cannot run in school mode
locationSmoother
T@"HDWorkoutLocationSmoother",&,N,V_locationSmoother
isInHeartRateRecovery
locationManager
T@"HDLocationManager",R,N,V_locationManager
HDDatabaseMigrator.mm
finalVersion != HDSQLiteRequiredPrimarySchemaVersionAny
!_hasPerformedMigration
Unsupported Okemo database
currentVersionInOut
stepFinalSchemaVersion <= finalVersion
Invalid current main schema version %lu for migration step %@
Foreign key constraint violation encountered
(main schema version %lu)
migration of %@ (schema: %@) from %ld to %ld %@
Error missing for an unsuccessful %@
Error during %@
currentVersion
unhandled database (version %ld)
%@ (version %ld)
unrecoverable migration failure
T@"HDDatabaseMigrationTransaction",R,N,V_transaction
schemaManager
T@"HDDatabaseSchemaManager",R,N,V_schemaManager
q24@?0@"HDDatabaseMigrationStep"8@"HDDatabaseMigrationStep"16
B32@?0@"HDDatabaseMigrationStep"8Q16^B24
NSArray<HDDatabaseMigrationStep *> * _Nonnull _HDSortedMigrationSteps(NSArray<HDDatabaseMigrationStep *> * _Nonnull __strong)
Unable to find a primary migration step resulting in %ld, which is required for migration step %@
entryTime
exitTime
hasEntryTime
Td,N,V_entryTime
hasExitTime
Td,N,V_exitTime
HDDeletedSampleEntity.m
You can not insert a HKDeletedObject with metadata. Deleted objects don't insert related objects.
deleted_samples
T@"HDDataOriginProvenance",R,C,N,V_provenance
tmp_%@
CREATE TABLE %@ (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, category INTEGER, provenance INTEGER, domain TEXT, key TEXT, value, mod_date REAL, UNIQUE(category, provenance, domain, key));
INSERT INTO %@ SELECT * FROM %@;
DROP TABLE %@;
ALTER TABLE %@ RENAME TO %@;
DROP TABLE IF EXISTS achievements_kv;
CREATE TABLE key_value (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, category INTEGER, provenance INTEGER, domain STRING, key STRING, value, mod_date REAL, UNIQUE(category, provenance, domain, key));
sync_store
%@new_%@
CREATE TABLE %@ (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, category INTEGER, provenance INTEGER, domain STRING, key STRING, value, mod_date REAL, UNIQUE(category, provenance, domain, key));
INSERT INTO key_value (domain, key, value, mod_date, category, provenance) VALUES (?, ?, ?, ?, ?, ?);
LastPedometerRecordID
LastCaloriesRecordID
DROP TABLE IF EXISTS main.activity_caches;
DROP TABLE IF EXISTS main.achievements;
DELETE FROM key_value WHERE category = 1
DELETE FROM key_value WHERE category = 0 AND domain = 'NanoPairing';
CREATE TABLE nano_pairing (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, persistent_uuid BLOB UNIQUE NOT NULL, health_uuid BLOB NOT NULL, creation_date REAL NOT NULL);
DELETE FROM datatype_source_order;
DROP TABLE IF EXISTS sync_stores;
DROP TABLE IF EXISTS sync_anchors;
CREATE TABLE IF NOT EXISTS sync_anchors (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, next INTEGER, acked INTEGER, received INTEGER, type INTEGER, store INTEGER, UNIQUE(type, store));
CREATE TABLE protected.key_value_secure (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, category INTEGER, provenance INTEGER, domain STRING, key STRING, value, mod_date REAL, UNIQUE(category, provenance, domain, key));
INSERT INTO key_value_secure (domain, key, value, mod_date, category, provenance) SELECT NULL, 'birthdate', birthdate, 0.0, 101, 0 FROM users;
INSERT INTO key_value_secure (domain, key, value, mod_date, category, provenance) SELECT NULL, 'sex', sex, 0.0, 101, 0 FROM users;
INSERT INTO key_value_secure (domain, key, value, mod_date, category, provenance) SELECT NULL, 'blood_type', blood_type, 0.0, 101, 0 FROM users;
INSERT INTO key_value_secure (domain, key, value, mod_date, category, provenance) SELECT bundle_id, key, value, 0.0, 102, 0 FROM user_defaults;
DROP TABLE user_defaults;
DROP TABLE users
UPDATE protected.objects SET provenance = 0 WHERE provenance != 16;
UPDATE protected.objects SET provenance = 1 WHERE provenance = 16;
DROP TABLE IF EXISTS protected.activity_caches;
CREATE TABLE protected.activity_caches (data_id INTEGER PRIMARY KEY, active_hours_goal REAL, energy_burned REAL, steps REAL, brisk_minutes_goal REAL, energy_burned_goal REAL, brisk_minutes REAL, cache_index INTEGER, active_hours REAL);
DROP TABLE IF EXISTS data_session_activities;
DELETE FROM %@ WHERE data_id IN (SELECT data_id FROM %@ LEFT JOIN protected.objects USING (data_id) WHERE protected.objects.data_id IS NULL);
protected.quantity_samples
protected.category_samples
protected.workouts
UPDATE protected.workouts SET activity_type=3000 WHERE activity_type=0
ALTER TABLE protected.activity_caches ADD COLUMN walk_distance REAL;
CREATE TABLE IF NOT EXISTS protected.activity_caches (data_id INTEGER PRIMARY KEY, energy_burned_goal REAL, energy_burned REAL, brisk_minutes REAL, active_hours REAL, cache_index INTEGER, active_hours_goal REAL, brisk_minutes_goal REAL, steps REAL, walk_distance REAL);
CREATE INDEX IF NOT EXISTS protected.metadata_values_index_0 ON metadata_values(object_id);
CREATE INDEX IF NOT EXISTS protected.correlations_index_0 ON correlations(object);
ALTER TABLE protected.correlations ADD COLUMN provenance INTEGER;
UPDATE protected.correlations SET provenance = 0;
active_energy_burned_anchor
active_hours_anchor
brisk_minutes_anchor
energy_burned_goal_anchor
step_count_anchor
walking_and_running_distance_anchor
workout_anchor
INSERT OR REPLACE INTO key_value_secure (domain, key, value, mod_date, category, provenance) VALUES('DATABASE_CREATION', 'IDENTIFIER', ?, 0.0, 100, 0);
INSERT OR REPLACE INTO key_value (domain, key, value, mod_date, category, provenance) VALUES('DATABASE_CREATION', 'IDENTIFIER', ?, 0.0, 0, 0);
UPDATE key_value_secure SET key = 'LastSessionEndDate', value = (SELECT samples.end_date FROM workouts, samples WHERE workouts.data_id = samples.data_id ORDER BY samples.end_date DESC LIMIT 1) WHERE key = 'LastSessionAnchor';
@"NSString"24@?0@"NSString"8@"NSString"16
DELETE FROM %@ WHERE %@ IN (SELECT * FROM temp_unattached_objects);
WHERE source NOT IN (%@)
CREATE TEMPORARY TABLE temp_unattached_objects AS SELECT data_id FROM protected.objects %@
CREATE UNIQUE INDEX IF NOT EXISTS temp_index_0 ON temp_unattached_objects (data_id);
protected.workout_events
workout_id
protected.correlations
protected.metadata_values
DROP INDEX IF EXISTS temp_index_0;
DROP TABLE IF EXISTS temp_unattached_objects;
ALTER TABLE protected.devices add column device_enabled BOOLEAN default 1;
INSERT INTO key_value_secure (category, provenance, domain, key, value, mod_date) SELECT 100, 0, 'OBJECT_ANCHOR', 'OBJECT_ANCHOR_8_2', MAX(data_id), strftime('%s', 'now', '-31 years') FROM objects;
_HKObjectComparisonFilter+HealthDaemon.m
@"NSNumber"16@?0@"HDDeviceEntity"8
guardianIcloudIdentifier
guardianFirstName
guardianLastName
guardianDSID
tinkerFirstName
tinkerLastName
hasGuardianIcloudIdentifier
T@"NSString",&,N,V_guardianIcloudIdentifier
hasSetupType
Ti,N,V_setupType
hasGuardianFirstName
T@"NSString",&,N,V_guardianFirstName
hasGuardianLastName
T@"NSString",&,N,V_guardianLastName
hasGuardianDSID
Tq,N,V_guardianDSID
hasProfileIdentifier
T@"NSData",&,N,V_profileIdentifier
hasTinkerFirstName
T@"NSString",&,N,V_tinkerFirstName
hasTinkerLastName
T@"NSString",&,N,V_tinkerLastName
TinkerPairingInitialSetup
TinkerPairingMigrationSetup
kind
hasKind
Ti,N,V_kind
Receive
Send
HDPauseWorkoutGPSTimeout
locationQueue
approved
denied/not determined
v24@?0@"CMElevationData"8@"NSError"16
T@"<HDLocationEventDelegate>",W,N,V_delegate
elevation
T@"CMElevation",&,N,V_elevation
not started
started
paused
stopped
unknown(%zd)
v48@?0@"NSArray"8@"NSDictionary"16q24B32B36@"NSError"40
v40@?0@"NSArray"8@"NSDictionary"16q24@"NSError"32
v32@?0@"NSNumber"8@"NSArray"16^B24
q24@?0@"HKActivitySummary"8@"HKActivitySummary"16
B32@?0@"HKActivityCache"8Q16^B24
Tq,S_setEnumeratedSummaryCount:,V_enumeratedSummaryCount
batchedInitialResultsHandler
T@?,R,C,N,V_batchedInitialResultsHandler
batchedUpdateHandler
T@?,R,C,N,V_batchedUpdateHandler
TQ,N
next
next_updated_date
acked
acked_updated_date
frozen_updated_date
received
received_updated_date
expected
expected_updated_date
SELECT %@, %@, MIN(%@) FROM %@ sa1 WHERE EXISTS (SELECT * FROM %@ sa2 WHERE (sa1.%@ = sa2.%@) AND (sa1.%@ = sa2.%@) AND (sa2.%@ >= ?)) GROUP BY %@, %@
HDSyncAnchorEntity.m
store != nil
SELECT %@, %@, %@, %@, %@, %@, %@, %@ FROM %@ WHERE %@ = ? ORDER BY %@ ASC
HDSyncAnchorIsValid(anchor)
(options & HDSyncAnchorUpdateOptionsNext) || (options & HDSyncAnchorUpdateOptionsAcked) || (options & HDSyncAnchorUpdateOptionsReceived) || (options & HDSyncAnchorUpdateOptionsFrozen) || (options & HDSyncAnchorUpdateOptionsExpected)
entityIdentifier != nil
SELECT ROWID, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@ FROM %@ WHERE %@ = ? AND %@ = ? AND %@ = ? AND %@ = ?
q16@?0q8
v32@?0q8q16d24
sync_anchors
NSString * _Nonnull _HDSyncAnchorPropertyForType(HDSyncAnchorType)
Invalid anchor type %ld
NSUInteger _HDSyncAnchorUpdateOptionsForType(HDSyncAnchorType)
NSString * _Nonnull _HDSyncAnchorUpdateDatePropertyForType(HDSyncAnchorType)
v40@?0q8@"NSString"16@"NSData"24^@32
Preparing
Prepared
AutoPaused
AwaitingStopEvent
FinalizeActivity
Stopped
StoppedHeartRateRecovery
HeartRateRecovery
become-current
auto-pause
auto-resume
receive-stop-event
retrieved-final-data
end-heart-recovery
resign-current
target-prepared
target-running
target-paused
target-stopped
target-ended
target-stop
target-end
prepared
persistence
sessionserver-observers
activity=%@
location=%@
ftm_session=%@
swimming_location=%@
lap_length=%@
prediction_uuiud=%@
<%@-%@ [%@]>
Failed to recover persisted state for session %@
syncing after heart rate recovery
HealthKit Background Workout (Reconnect)
T@"NSString",R,C,N,V_applicationIdentifier
canBePaused
isFirstParty
taskServer
T@"HDWorkoutSessionTaskServer",W,N,V_taskServer
T@"HDHealthStoreClient",&,N,V_client
stopDate
T@"NSDate",R,C,N,V_stopDate
T@"<HDWorkoutEventCollectorDelegate>",R,W,V_delegate
sessionId
T@"NSUUID",R,V_sessionId
T@"HDProfile",R,W,V_profile
HDEnableCatflexing
HDWorkoutManagerTriggerCatFlexingEvent
%@_old
%@_temp
ALTER TABLE %@%@ RENAME TO %@;
CREATE TABLE IF NOT EXISTS %@%@ (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, category INTEGER NOT NULL, domain TEXT NOT NULL, key TEXT NOT NULL, value, provenance INTEGER NOT NULL, mod_date REAL NOT NULL, UNIQUE(category, domain, key));
CREATE TEMPORARY TABLE %@ (category INTEGER NOT NULL, domain TEXT NOT NULL, key TEXT NOT NULL, value, provenance INTEGER NOT NULL, mod_date REAL NOT NULL, UNIQUE(category, domain, key));
INSERT OR IGNORE INTO %@ (category, domain, key, value, provenance, mod_date) SELECT category, COALESCE(domain, ''), key, value, provenance, mod_date FROM %@%@ ORDER BY mod_date DESC;
INSERT OR REPLACE INTO %@%@ (rowid, category, domain, key, value, provenance, mod_date) SELECT old.rowid, merged.category, merged.domain, merged.key, merged.value, merged.provenance, merged.mod_date FROM %@%@ as old, %@ as merged WHERE merged.category = old.category AND merged.domain = COALESCE(old.domain, '') AND merged.key = old.key ORDER BY old.rowid ASC;
DROP TABLE %@%@;
CREATE TABLE IF NOT EXISTS sync_stores (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, type INTEGER NOT NULL, creation_date REAL NOT NULL);
ALTER TABLE nano_pairing RENAME TO nano_pairing_old;
CREATE TABLE IF NOT EXISTS nano_pairing (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, registry_uuid BLOB UNIQUE NOT NULL, persistent_uuid BLOB, health_uuid BLOB, sync_provenance INTEGER NOT NULL REFERENCES sync_stores (ROWID) ON DELETE CASCADE, restored INTEGER NOT NULL);
DELETE FROM nano_pairing_old WHERE rowid < (SELECT MAX(rowid) FROM nano_pairing_old);
INSERT INTO sync_stores (rowid, uuid, type, creation_date) SELECT 1, registry_uuid, 1, 0.0 FROM nano_pairing_old;
INSERT INTO nano_pairing SELECT * FROM nano_pairing_old;
DROP TABLE nano_pairing_old
ALTER TABLE nano_pairing ADD COLUMN source_bundle_id TEXT;
ALTER TABLE nano_pairing ADD COLUMN ids_id TEXT;
ALTER TABLE sync_anchors ADD COLUMN expected INTEGER;
ALTER TABLE protected.activity_caches ADD COLUMN flights INTEGER
ALTER TABLE protected.activity_caches ADD COLUMN flights_anchor INTEGER
CREATE TABLE IF NOT EXISTS protected.binary_samples (data_id INTEGER PRIMARY KEY, payload BLOB)
CREATE TABLE IF NOT EXISTS protected.data_series (data_id INTEGER PRIMARY KEY REFERENCES samples(data_id), frozen INTEGER NOT NULL DEFAULT 0, count INTEGER NOT NULL DEFAULT 0)
DROP TABLE protected.binary_samples;
CREATE TABLE protected.binary_samples (data_id INTEGER PRIMARY KEY REFERENCES samples (data_id) ON DELETE CASCADE, payload BLOB);
INSERT OR REPLACE INTO key_value_secure (category, domain, provenance, mod_date, key, value)                       SELECT category, domain, provenance, mod_date, 'LastSessionAnchor',                         (SELECT workouts.data_id FROM workouts INNER JOIN samples USING(data_id) ORDER BY samples.end_date DESC LIMIT 1)                       FROM key_value_secure WHERE key = 'LastSessionEndDate' ORDER BY value DESC;
UPDATE key_value_secure SET category = 106 WHERE category = 103;
Local and cloud MedicalID should not be nil.
localMedicalIDData
T@"_HKMedicalIDData",&,N,V_localMedicalIDData
mergedMedicalIDData
T@"_HKMedicalIDData",R,N,V_mergedMedicalIDData
q24@?0@"HDCloudSyncTarget"8@"HDCloudSyncTarget"16
v16@?0@"HDCloudSyncLookupParticipantOperation"8
CloudSyncRegistry
CloudSyncRegistryRecord
HDCloudSyncRegistryRecord.m
@16@?0@"HDCloudSyncCodableRegisteredStore"8
B16@?0@"HDCloudSyncCodableRegisteredStore"8
Registry %@
Last Modified Date: %@
Schema Version: %@
Disabled Owners: %@
T@"NSSet",&,N
ownerIdentifiers
childHeaderRecordIDs
T@"NSDate",C,N
T@"HKProfileIdentifier",C,N
HDDataCollectionAccessToFitnessDataDidChangeNotification
HDDataCollectionAssertionIdentifier
HDDataCollectionDisableExerciseTime
data-collection
data-collection-coalescing
com.apple.healthd.periodic-data-collection
Periodic
HDDataCollectionManager.m
objectType != nil
observer != nil
AddObserver
RemoveObserver
ObserverDidChangeState
%s must only be called once.
-[HDDataCollectionManager _queue_createBuiltinCollectors]
com.apple.tcc.access.changed
_NLAppleExerciseTimeDataCollector
B16@?0@"<HDHealthDataCollector>"8
_dataAggregatorsByType[objectType] == nil
PeriodicDataCollection
Active Observers (%ld type(s)):
%@ (%ld)
%@: %@
v32@?0@"HKObjectType"8@"NSMapTable"16^B24
Data Collectors:
Data Aggregators:
%.0f secs ago
%.0f mins ago
%.1f hrs ago
NEVER
%@%s
Last launch update: %@
DemoManager data
observersByType
T@"NSMutableDictionary",&,N,V_observersByType
blteHeartRateDataCollector
T@"HDBTLEHeartRateDataCollector",&,N,V_blteHeartRateDataCollector
assertionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assertionQueue
demoManager
T@"HDDemoManager",&,N,V_demoManager
dataCollectionQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dataCollectionQueue
hasAccessToFitnessData
(isInBackground=%@, hasRunningWorkout=%@)
isInBackground
TB,R,N,V_isInBackground
hasRunningWorkout
TB,R,N,V_hasRunningWorkout
<%@:%p> %@ (%lfs, inBackground=%@, hasRunningWorkout=%@)
T@,R,W,N,V_observer
T@"HDDataCollectionObserverState",C,N,V_state
sampleTypes
T@"NSSet",R,N,V_sampleTypes
Td,R,N,V_collectionInterval
observerState
T@"HDDataCollectionObserverState",C,N,V_observerState
exclusive
inclusive
(%0.2lfs, latency %0.2lfs, series %0.2lfs, %@, %@, %@)
FOREGROUND
background
WORKOUT
/Applications/Health.app
 NOT
HDCloudSyncIgnoredErrorsOperation.m
operation != nil
[! %@]
T@"HDCloudSyncOperation",&,V_operation
<%ld zones, %ld targets (%ld push, %ld pull)>
Minimum supported protocol: %ld
Master Records (%ld):
Push Targets (%lu):
Pull Targets (%lu):
Store %@ (%@, Options: %@) in %@:
@"HDCloudSyncZone"16@?0@"HDCloudSyncZone"8
zonesByIdentifier
T@"NSDictionary",R,C,N,V_zonesByIdentifier
targets
T@"NSArray",R,C,N,V_targets
pushTargets
pullTargets
primaryPushZone
T@"HDCloudSyncZone",R,N,V_primaryPushZone
seizedZones
T@"NSSet",R,N
pullZones
minimumSupportedProtocolVersion
Ti,R,N,V_minimumSupportedProtocolVersion
HDSampleQueryDescription.m
sampleTypes.count
T@"_HKFilter",R,C,N,V_filter
T@"NSSet",R,C,N,V_sampleTypes
T@"NSPredicate",R,C,N,V_predicate
sqlitePredicate
T@"HDSQLitePredicate",R,C,N,V_sqlitePredicate
NextToothbrushingSampleTimeKey
NextHandwashingSampleTimeKey
nextToothbrushingSampleTime
Td,N,V_nextToothbrushingSampleTime
nextHandwashingSampleTime
Td,N,V_nextHandwashingSampleTime
HDStandardTaskServer.m
This method can only be called while unit testing
taskIdentifier
taskUUID
T@"NSUUID",R,C,N,V_taskUUID
T@"<HDTaskServerDelegate>",R,W,N,V_delegate
server_change_token
baseline_epoch
rebase_deadline
last_sync
empty_zones
last_check
container_id
has_gap
sync_protocol_version
emptyZones
UPDATE %@ SET %@ = ? WHERE %@ IS NULL OR %@ > ?
SELECT %@ FROM %@ INNER JOIN %@ ON %@ = %@ WHERE %@ = ? AND %@ = ? ORDER BY %@ ASC LIMIT 1
SELECT %@ FROM %@ cloud_stores INNER JOIN %@ sync_stores ON cloud_stores.%@ = sync_stores.%@
SELECT MAX(%@) as %@ FROM %@
HDCloudSyncStoreEntity.m
storeUUID != nil
uuid != nil
Owner and container identifiers must not be changed after creation.
cloud_sync_stores
T@"NSString",R,N,V_ownerIdentifier
T@"NSString",R,N,V_containerIdentifier
serverChangeToken
T@"CKServerChangeToken",R,N,V_serverChangeToken
TQ,R,N,V_baselineEpoch
rebaseDeadline
T@"NSDate",R,N,V_rebaseDeadline
lastSyncDate
T@"NSDate",R,N,V_lastSyncDate
emptyZoneDateByZoneID
T@"NSDictionary",R,N,V_emptyZoneDateByZoneID
lastCheckDate
T@"NSDate",R,N,V_lastCheckDate
hasEncounteredGapInCurrentEpoch
TB,R,N,V_hasEncounteredGapInCurrentEpoch
syncProtocolVersion
Ti,R,N,V_syncProtocolVersion
form
underlyingDate
originalTimeZoneString
hasForm
Tq,N,V_form
hasUnderlyingDate
Td,N,V_underlyingDate
hasOriginalTimeZoneString
T@"NSString",&,N,V_originalTimeZoneString
com.apple.health.HeartRhythm.HeartDailyAnalytics
isECGOnboarded
isIRNOnboarded
isImproveHealthAndActivityAllowed
irregularRhythmNotificationCount
ecgCount
weeksSinceElectrocardiogramOnboarded
ecgClassificationCountWithin24HoursPostIRNNotSet
ecgClassificationCountWithin24HoursPostIRNInconclusivePoorReading
ecgClassificationCountWithin24HoursPostIRNInconclusiveOther
ecgClassificationCountWithin24HoursPostIRNSinusRhythmHeartRate50To100
ecgClassificationCountWithin24HoursPostIRNAtrialFibrillationHeartRate50To120
ecgClassificationCountWithin24HoursPostIRNHeartRateAbove120
ecgClassificationCountWithin24HoursPostIRNHeartRateBelow50
ecgClassificationCountWithin24HoursPostIRNUnknown
isTachycardiaDetectionEnabled
isBradycardiaDetectionEnabled
activeWatchProductType
ecgActiveAlgorithmVersion
ecgUpdateVersionPhone
ecgUpdateVersionWatch
ecgOnboardingCountryCode
irnOnboardingCountryCode
wasWatchWornPast24Hours
countRecordedTachogramsPast24Hours
countAnalyzedTachogramsPast24Hours
countMobileAssetsDownloadedPast24Hours
mobileAssetNamesDownloadedPast24Hours
HDUnitTestSchoolTimeChange
inSchoolMode
T@"<HDSchoolTimeObserverDelegate>",R,W,N,V_delegate
corruption
transactionError
fileAccessError
BTreeCorruption
OutOfRangeError
OtherException - historical
logicError
runtimeError
ioException
systemException
unknownException
notFoundError
Unknown failure type (%ld)
HDLastReportDate.%@.%@
SQLiteDatabaseCorruption
corruption.sqlite
databaseType
HFDDatabaseCorruption
corruption.hfd
failureType
currentRebuildStage
newRebuildStage
identifier-mismatch
has-unprotected-identifier
has-protected-identifier
journal-inserted
class
databaseStatus
databaseName
migration-status
com.apple.healthd.database.%@
HDClientDataCollectionTaskServer.m
HKDataCollectorTaskServerConfiguration is nil
%@ does not appear to be a collectible type.
Server synchronization failed (expected %@, got %@)
Failed to validate provided metadata
Out-of-order data received: got an end date of %@ but our last datum was %@
@16@?0@"HKQuantityDatum"8
HealthKit Background Data Collection Flush
Failed to finish client-side flush in a timely fashion.
<%@:%p %@: %@>
-shm
NSFileManager+HealthDaemon.m
databaseURL != nil
[extensionsSuffixes count] > 0
%lf.moved-aside
management
HDAppAssertionManager.m
background_observation_extension
appExtensionAssertions
T@"NSMutableDictionary",&,N,V_appExtensionAssertions
appExtensionRetryTimers
T@"NSMutableDictionary",&,N,V_appExtensionRetryTimers
activeExtensionAssertions
T@"NSMutableSet",&,N,V_activeExtensionAssertions
pendingExtensionAssertions
T@"NSMutableArray",&,N,V_pendingExtensionAssertions
activeAssertions
T@"NSMutableSet",&,N,V_activeAssertions
pendingAssertions
T@"NSMutableArray",&,N,V_pendingAssertions
appAssertions
T@"NSMutableDictionary",&,N,V_appAssertions
elementTags
hasCollectionType
Tq,N,V_collectionType
collections
T@"NSMutableArray",&,N,V_collections
hasElementTags
T@"HDCodableMedicalCodingList",&,N,V_elementTags
HDDatabaseValueCache.m
handler != NULL
v32@?0@"<NSCopying>"8@16^B24
%@: %lu values, %d%% fault rate (%ld/%ld), %ld resets
T{?=qqq},R
T@"NSString",R,C,V_name
cache
T@"NSMutableDictionary",&,N,V_cache
didRemoveAllObjects
TB,N,V_didRemoveAllObjects
ObliteratedDatabaseUUIDs
HDNanoSyncStore.m
registryDevice != nil
identityServicesDevice != nil
pairingEntity != nil
_invalidated
idsDevice != nil
delegate != nil
DeviceSourceIdentifier
LastRegistryUUID
Canceled by invalidation
Sync store for device with pairingID "%@" was invalidated
Canceled by new restore session
timeoutHandler != NULL
B16@?0@"_HKExpiringCompletionTimer"8
Sync request timed out
<%@:%p "%@" (%s) (%s) registry-id:%@ device-id:%@>
alt account
standard account
%@:%p {
Device: "%@" (%@)
Last Inactive: %@ - %@
Last Active: %@ - %@
IDS Device ID: %@
Registry UUID: %@
Persistent UUID: %@
Source identifier: %@
System build: %@ (protocol vers %@)
Restore state: %@
Restore %s, id:"%@"
unfinished
 (error: %@)
Last complete sync began %@%@
Last incomplete sync began %@
Needs sync on unlock: YES
identityServicesDevice
T@"IDSDevice",&,N,V_identityServicesDevice
nanoRegistryDevice
T@"NRDevice",&,N,V_nanoRegistryDevice
T@"<HDNanoSyncStoreDelegate>",W,N,V_delegate
T@"IDSDevice",R
deviceInfo
T@"HKNanoSyncPairedDeviceInfo",R,C
T@"NSUUID",C,N
healthUUID
TB,R,N,GisRestoreComplete
restoreState
Tq,R,N,V_restoreState
restoreSession
T@"HDNanoSyncRestoreSession",R,N,V_restoreSession
obliteratedDatabaseUUIDs
T@"NSSet",R,C,N,V_obliteratedDatabaseUUIDs
needsSyncOnUnlock
TB,N,V_needsSyncOnUnlock
TB,R,GisInvalidated
remoteSystemBuildVersion
remoteProductType
TB,R,GisActive
TB,R,GisMaster,V_master
lastInactiveDate
T@"NSDate",R
altAccount
TB,R,GisAltAccount
Incomplete
In Progress
Complete
<Order: "%@" %@>
ascending
descending
expression
T@"NSString",R,C,N,V_expression
TB,R,N,V_ascending
HDHealthStoreServer.m
configuration != nil
entitlement != nil
Nil task server identifier.
Nil task UUID
Task server endpoint for '%@' already exists
pluginIdentifier must not be nil
Plugin "%@" does not export a service
Unable to prompt for authorization using this type of extension; ignoring request.
v36@?0@"NSUUID"8B16@"NSError"20@?<v@?>28
Cannot request authorization on behalf of an extension from within an extension.
No source for bundle identifier "%@"
v24@?0@"HKAuthorizationRequestRecord"8@?<v@?B@"NSError">16
v24@?0@"HKObjectAuthorizationPromptSession"8@?<v@?B@"NSError">16
Authorization from parent application required
Rollback due to performInTransactionWithErrorOut:block: failed
Save transaction failed with an unknown error.
dataObjects cannot be empty
B24@?0@"NSSet"8@"NSSet"16
dataObjects cannot be %s
objectType cannot be nil
Background delivery is not available on this platform.
Unable to get bundle ID for %@.
No valid application identifier found.
sampleTypes may not be empty
uuids array may not be empty
dataType may not be nil
v16@?0@"NSSet"8
HealthLite key/value update
 [%@]
%@ (%d)%@
timed out
canceled
Unsupported feature.
Health Records plugin unavailable.
Workout with UUID (%@) has not yet been saved
@"NSUUID"16@?0@"HKSample"8
v24@?0@"HKWorkoutSessionTaskConfiguration"8@"NSError"16
clientDebuggingIdentifier
queryControlServer
T@"HDQueryControlServer",&,N,V_queryControlServer
T@"HKHealthStoreConfiguration",R,C,N,V_configuration
authorizationServer
T@"HDAuthorizationServer",R,N,V_authorizationServer
HDIDSReachabilityOperation.m
_queryController != nil
The operation has been cancelled.
The query has timed out.
v32@?0@"NSString"8@"NSNumber"16@?<v@?@@>24
destinationIdentifiers
T@"NSArray",C,N,V_destinationIdentifiers
T@"NSString",C,N,V_serviceIdentifier
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
queryController
T@"IDSBatchIDQueryController",&,N,V_queryController
HDNanoSyncRestoreSession.m
sessionUUID != nil
_finished == NO
_timer == nil
completionHandlers
T@"NSMutableArray",&,N,V_completionHandlers
T@"_HKExpiringCompletionTimer",&,N,V_timer
T@"NSDate",R,N,V_startDate
T@"NSCalendar",R,N,V_calendar
T@"HDNanoSyncStore",R,N,V_nanoSyncStore
TB,R,N,GisFinished,V_finished
TQ,R,N,V_duration
T@"NSObject<OS_dispatch_source>",R,N,V_timer
T@?,R,C,N,V_handler
Field Detect
Tag Read
Machine Identity Verification
User Acceptance
Wait for Machine Start
Pause
Disconnect
Retry Connection
fieldDetectTimer
T@"HDFitnessMachineStateTimer",&,N,V_fieldDetectTimer
tagReadTimer
T@"HDFitnessMachineStateTimer",&,N,V_tagReadTimer
machineIdentityVerificationTimer
T@"HDFitnessMachineStateTimer",&,N,V_machineIdentityVerificationTimer
userAcceptanceTimer
T@"HDFitnessMachineStateTimer",&,N,V_userAcceptanceTimer
waitForMachineStartTimer
T@"HDFitnessMachineStateTimer",&,N,V_waitForMachineStartTimer
pauseTimer
T@"HDFitnessMachineStateTimer",&,N,V_pauseTimer
disconnectTimer
T@"HDFitnessMachineStateTimer",&,N,V_disconnectTimer
retryConnectionTimer
T@"HDFitnessMachineStateTimer",&,N,V_retryConnectionTimer
mfaTimer
T@"HDFitnessMachineStateTimer",&,N,V_mfaTimer
T@"<HDFitnessMachineStateTimersDelegate>",W,N,V_delegate
BeginStatusUpdates
EndStatusUpdates
StartDiscovery
assignedId
clientId
v36@?0Q8@"HKHealthService"16B24@"NSError"28
EndDiscovery
StartSession
peripheralId
Missing a valid health device.
v40@?0Q8@"NSArray"16@"NSString"24@"NSError"32
EndSession
GetPairings
B16@?0@"HKHealthService"8
AddPairing
RemovePairing
AddPeripheral
No supported health services.
RemovePeripheral
GetPeripheralStatus
SetPeripheralStatus
GetSupportedPropertyNames
GetProperty
PerformOperation
T@"HDHealthServiceManager",R,N,V_healthServiceManager
healthServiceDiscoveryServerIDs
T@"HDIdentifierTable",&,N,V_healthServiceDiscoveryServerIDs
healthServiceDiscoveryClientIDs
T@"NSMutableDictionary",&,N,V_healthServiceDiscoveryClientIDs
healthDeviceSessionServerIDs
T@"HDIdentifierTable",&,N,V_healthDeviceSessionServerIDs
healthServiceSessionClientIDs
T@"NSMutableDictionary",&,N,V_healthServiceSessionClientIDs
healthServiceClosedSessionServerIDs
T@"NSMutableSet",&,N,V_healthServiceClosedSessionServerIDs
healthServiceClosedSessionClientIDs
T@"NSMutableSet",&,N,V_healthServiceClosedSessionClientIDs
_HKDiscreteQuantitySampleComparisonFilter+HealthDaemon.m
friendUUID
isWatchWorkout
isIndoorWorkout
deviceManufacturer
deviceModel
hasFriendUUID
T@"NSData",&,N,V_friendUUID
hasBundleID
T@"NSString",&,N,V_bundleID
hasIsWatchWorkout
Tq,N,V_isWatchWorkout
hasIsIndoorWorkout
Tq,N,V_isIndoorWorkout
hasDeviceManufacturer
T@"NSString",&,N,V_deviceManufacturer
hasDeviceModel
T@"NSString",&,N,V_deviceModel
hasAmm
Tq,N,V_amm
hasScwi
T@"NSString",&,N,V_scwi
HDDataCollectionDisablePedometer
HDPedometerDataCollector
v24@?0@"CMPedometerData"8@"NSError"16
Unexpected record of type (%@)
Subscription %@
Last Modified Date: %@
Schema Version: %@
<%@:%p "%@">
com.apple.healthd.HDWorkoutCondenser-activity
HDWorkoutCondenser
%@: condense workouts (%ld, %@)
condenseWorkouts
Unable to locate 1st Party Apple Watch workout entity for condensation with workout %@ from source %@
B24@?0@"HKCodableCondensedWorkout"8^@16
%@: condense workout %ld
%@: condense workout (%@) samples with quantity type %@
%@: checking if workoutEntity (%@) requires processing for quantity type %@
Error while enumerating samples associated with workout entity %lld to find overlaps
Error getting count of single value samples associated with workout entity %lld
Unable to get %@ for persistentID %lld
%ld:%@:%.5f:%.5f:%lld
Health Unable to Compress Older Workouts
Health has run into a number of errors while attempting to compress your older workouts
[Database Efficiency] Workout Condenser Problem Detected
The workout condenser has failed multiple times since last success
Workout Condensing
analyticsAccumulator
T@"_HDWorkoutCondenserAnalyticsAccumulator",R,N,V_analyticsAccumulator
T@"HDSQLitePredicate",R,N,V_predicate
minimumWorkoutDuration
Td,R,N,V_minimumWorkoutDuration
minimumSeriesSize
Tq,R,N,V_minimumSeriesSize
maximumSeriesSize
Tq,R,N,V_maximumSeriesSize
deletedSampleThreshold
Tq,R,N,V_deletedSampleThreshold
HDWorkoutCondenser.m
_startTime == anotherDatum->_startTime
<%@: %@, %f, %f, %f, %d>
Td,R,N,V_value
isSeries
TB,R,N,V_isSeries
<%@ workoutsToCondense (%ld) workoutsToRecondense (%ld) condensedWorkouts (%ld) processedWorkouts (%ld) createdSeries (%ld) deletedSamples (%ld)>
Tq,N,V_workoutsToCondense
Tq,N,V_workoutsToRecondense
Tq,N,V_condensedWorkouts
Tq,N,V_processedWorkouts
Tq,N,V_createdSeries
Tq,N,V_deletedSamples
hasProcessedWorkout
TB,N,V_hasProcessedWorkout
T@"<HDClientDataCollectionObservationStateMonitorDelegate>",W,N,V_delegate
doubleValue
intValue
templateUniqueName
Td,N,V_completedDate
hasDoubleValue
Td,N,V_doubleValue
hasIntValue
Tq,N,V_intValue
hasTemplateUniqueName
T@"NSString",&,N,V_templateUniqueName
HDXPCClient.m
connection != nil
process != nil
<%@:%p %@(%d): %@> processBundleIdentifier: %@ containerAppBundleIdentifier: %@
T@"HDXPCProcess",R,V_process
T@"NSXPCConnection",R,V_connection
HDDemoDataPathologySampleHelperNextSpirometrySampleTimesKey
HDDemoDataPathologySampleHelperNextAsthmaAttackSampleTimeKey
HDDemoDataPathologySampleHelperNextAsthmaAttackEndTimeKey
HDDemoDataPathologySampleHelperForcePEFRKey
L/min
nextSpirometrySampleTimes
T@"NSMutableDictionary",&,N,V_nextSpirometrySampleTimes
nextAsthmaAttackSampleTime
Td,N,V_nextAsthmaAttackSampleTime
nextAsthmaAttackEndTime
Td,N,V_nextAsthmaAttackEndTime
forcePEFR
TB,N,V_forcePEFR
Library/Health
DemoData/%@
HDPowerAssertion.m
timeout > 0.0
T@"NSString",R,C,V_identifier
Td,R,V_timeout
persistentPairingUUID
healthPairingUUID
changeSet
activationRestore
Ti,N,V_version
hasPersistentPairingUUID
T@"NSData",&,N,V_persistentPairingUUID
hasHealthPairingUUID
T@"NSData",&,N,V_healthPairingUUID
hasChangeSet
T@"HDCodableNanoSyncChangeSet",&,N,V_changeSet
hasStatus
T@"HDCodableNanoSyncStatus",&,N,V_status
hasActivationRestore
T@"HDCodableNanoSyncActivationRestore",&,N,V_activationRestore
v20@?0B8q12
nfcPermission
fitnessTrackingEnabled
T@"<HDGymKitSettingsDelegate>",W,N,V_delegate
Disabled
On With Workouts
Always On
DESC
COUNT
HDSQLiteQuery.mm
bindToSelectStatement called with limit count %ld, greater than maximum allowed limit count (%d)
B40@?0q8@"NSArray"16^{HDSQLiteRow=^^?^{sqlite3_stmt}ii{unordered_map<const char *, int, HDSQLiteRow::_Hash, HDSQLiteRow::_Comparison, std::__1::allocator<std::__1::pair<const char *const, int> > >={__hash_table<std::__1::__hash_value_type<const char *, int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true> >=f}}}}24^@32
pID > 0
B32@?0@"NSArray"8^{HDSQLiteRow=^^?^{sqlite3_stmt}ii{unordered_map<const char *, int, HDSQLiteRow::_Hash, HDSQLiteRow::_Comparison, std::__1::allocator<std::__1::pair<const char *const, int> > >={__hash_table<std::__1::__hash_value_type<const char *, int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true> >=f}}}}16^@24
Insane number of properties for enumeration (%lu)
T@"HDSQLiteDatabase",R,V_database
queryDescriptor
T@"HDSQLiteQueryDescriptor",R
lastSQLStatement
T@"NSString",R,C,V_lastSQLStatement
q24@?0@"HDSQLiteJoinClause"8@"HDSQLiteJoinClause"16
DISTINCT 
 FROM %@
 WHERE %@
 ORDER BY 
@"NSString"16@?0@"HDSQLiteOrderingTerm"8
 GROUP BY %@ 
The DELETE statement does not support the DISTINCT keyword
The DELETE statement does not support the LIMIT keyword
The DELETE statement does not support the GROUP BY keyword
SQL could not be created due to non-expected nil join clause
 WHERE %@ IN (SELECT %@ FROM %@ WHERE %@)
shouldExpandLastSQLStatement
TB,N,V_shouldExpandLastSQLStatement
T#,N,V_entityClass
limitCount
Tq,N,V_limitCount
orderingTerms
T@"NSArray",C,N,V_orderingTerms
returnsDistinctEntities
TB,N,V_returnsDistinctEntities
T@"HDSQLitePredicate",C,N,V_predicate
groupBy
T@"NSString",C,N,V_groupBy
preferredEntityJoinOrder
T@"NSArray",C,N,V_preferredEntityJoinOrder
%@(%@)
%@(DISTINCT %@)
typesToReadsCount
typesToReads
typesToWritesCount
typesToWrites
coverage_type_coding_collection
subscriber_id
policy_holder
relationship_coding_collection
period_start_date
period_end_date
coverage_record_samples
HDCoverageRecordEntity.m
+[HDCoverageRecordEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
<%@ Interval: %0.1lfs Latency: %0.1lfs>
TQ,R,N,V_collectionType
Passive
HDDaemonSyncMessageHandler.m
%@ has %ld changes that must be sent prior to deallocation
<%@:%p %@ %@ %lld -> %lld, %lld>
%@ is already done
interim
syncObjectsWithStore failed to update result anchor for entity type %@.
resultAnchor <= _anchorRange.end
accumulated
currentAnchor
Tq,R,N,V_currentAnchor
sendChangesStatus
Tq,R,N,V_sendChangesStatus
sendChangesError
T@"NSError",R,C,N,V_sendChangesError
HDSharedDataPrivacyNotificationCategory
SHARED_HEALTH_DATA_NOTIFICATION_TITLE
SHARED_HEALTH_DATA_NOTIFICATION_BODY_%@
Data entity subclass table names must be prefixed with 'protected.'.
DELETE FROM protected.metadata_values WHERE object_id IN (SELECT data_id FROM %@)
DELETE FROM %@ WHERE data_id IN (SELECT data_id FROM %@)
SELECT COUNT(*) FROM protected.correlations WHERE correlation IN (SELECT data_id FROM %@) OR object IN (SELECT data_id FROM %@)
Unable to remove samples with associations.
Failed to create %@ task server (%@)
T@"HDXPCListener",&,N,V_listener
taskServerClass
T#,R,N,V_taskServerClass
taskConfiguration
T@"HKTaskConfiguration",R,C,N,V_taskConfiguration
healthStoreConfiguration
T@"HKHealthStoreConfiguration",R,C,N,V_healthStoreConfiguration
listenerEndpoint
T@"NSXPCListenerEndpoint",R,N
T@"<HDTaskServer>",R,W,N,V_taskServer
T@"<HDTaskServerEndpointDelegate>",W,N,V_delegate
taskServerDelegate
T@"<HDTaskServerDelegate>",W,N,V_taskServerDelegate
CREATE TABLE IF NOT EXISTS cloud_sync_stores (sync_store INTEGER PRIMARY KEY REFERENCES sync_stores (ROWID) ON DELETE CASCADE, server_change_token BLOB NOT NULL)
CREATE TABLE sources (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, uuid BLOB UNIQUE NOT NULL, bundle_id TEXT NOT NULL, name TEXT NOT NULL, source_options INTEGER NOT NULL, local_device INTEGER NOT NULL, product_type TEXT NOT NULL, deleted INTEGER NOT NULL, mod_date REAL NOT NULL, provenance INTEGER NOT NULL, sync_anchor INTEGER NOT NULL);
INSERT INTO sources SELECT rowid, uuid, COALESCE(bundle_id, ''), COALESCE(name, ''), COALESCE(source_options, 0), COALESCE(local_device, 0), COALESCE(product_type, ''), deleted, COALESCE(mod_date, 0.0), provenance, rowid FROM sources_old;
DROP TABLE IF EXISTS cloud_sync_stores
CREATE TABLE IF NOT EXISTS cloud_sync_stores (sync_store INTEGER PRIMARY KEY REFERENCES sync_stores (ROWID) ON DELETE CASCADE, server_change_token BLOB, baseline_epoch INTEGER NOT NULL)
CREATE TABLE authorization (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, source_id INTEGER NOT NULL REFERENCES sources(ROWID) ON DELETE CASCADE, object_type INTEGER NOT NULL, status INTEGER NOT NULL, request INTEGER NOT NULL, date_modified REAL NOT NULL, modification_epoch INTEGER NOT NULL, provenance INTEGER NOT NULL, object_anchor INTEGER NOT NULL DEFAULT 0, UNIQUE(source_id, object_type));
INSERT INTO authorization (ROWID, source_id, object_type, status, request, date_modified, modification_epoch, provenance, object_anchor) SELECT ROWID, source_id, object_type, status, request, date_modified, 0, provenance, object_anchor FROM authorization_old;
ALTER TABLE cloud_sync_stores ADD COLUMN rebase_deadline REAL;
ALTER TABLE cloud_sync_stores ADD COLUMN last_sync REAL;
ALTER TABLE cloud_sync_stores ADD COLUMN empty_zones BLOB;
ALTER TABLE cloud_sync_stores ADD COLUMN last_check REAL;
ALTER TABLE cloud_sync_stores ADD COLUMN owner_id TEXT;
DELETE FROM sync_stores WHERE EXISTS (SELECT * FROM cloud_sync_stores WHERE sync_stores.rowid = cloud_sync_stores.sync_store)
DROP TABLE cloud_sync_stores
CREATE TABLE cloud_sync_stores (sync_store INTEGER PRIMARY KEY REFERENCES sync_stores (ROWID) ON DELETE CASCADE, server_change_token BLOB, baseline_epoch INTEGER NOT NULL, rebase_deadline REAL, last_sync REAL, empty_zones BLOB, last_check REAL, owner_id TEXT NOT NULL, container_id TEXT NOT NULL);
UPDATE sources SET source_options=18 WHERE bundle_id='com.apple.private.health.fitnessmachine'
ALTER TABLE cloud_sync_stores RENAME TO cloud_sync_stores_old;
CREATE TABLE cloud_sync_stores (sync_store INTEGER PRIMARY KEY REFERENCES sync_stores (ROWID) ON DELETE CASCADE, server_change_token BLOB, baseline_epoch INTEGER NOT NULL, rebase_deadline REAL, last_sync REAL, empty_zones BLOB, last_check REAL, owner_id TEXT NOT NULL, container_id TEXT NOT NULL, has_gap INTEGER NOT NULL);
INSERT INTO cloud_sync_stores SELECT sync_store, server_change_token, baseline_epoch, rebase_deadline, last_sync, empty_zones, last_check, owner_id, container_id, 0 FROM cloud_sync_stores_old;
CREATE TABLE sync_anchors (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, next INTEGER NOT NULL, acked INTEGER NOT NULL, received INTEGER NOT NULL, type INTEGER NOT NULL, store INTEGER NOT NULL, epoch INTEGER NOT NULL, UNIQUE(store, epoch, type));
INSERT INTO sync_anchors SELECT ROWID, COALESCE(next, 0), COALESCE(acked, 0), COALESCE(received, 0), type, store, 0 FROM sync_anchors_old WHERE type IS NOT NULL AND store IS NOT NULL;
UPDATE sync_anchors SET epoch = (SELECT baseline_epoch FROM cloud_sync_stores WHERE sync_store = store) WHERE EXISTS (SELECT * FROM cloud_sync_stores WHERE sync_store = store)
DROP INDEX IF EXISTS sources_bundle_id
CREATE TABLE IF NOT EXISTS protected.data_provenances (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, sync_provenance INTEGER NOT NULL, origin_product_type TEXT NOT NULL, origin_build TEXT NOT NULL, local_product_type TEXT NOT NULL, local_build TEXT NOT NULL, source_id INTEGER NOT NULL, device_id INTEGER NOT NULL, source_version TEXT NOT NULL, tz_name TEXT NOT NULL, origin_major_version INTEGER NOT NULL, origin_minor_version INTEGER NOT NULL, origin_patch_version INTEGER NOT NULL, UNIQUE(sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, source_version, tz_name, origin_major_version, origin_minor_version, origin_patch_version))
INSERT INTO protected.data_provenances (rowid, sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, source_version, tz_name, origin_major_version, origin_minor_version, origin_patch_version) SELECT rowid, sync_provenance, origin_product_type, origin_build, local_product_type, local_build, source_id, device_id, source_version, tz_name, -1, 0, 0 FROM protected.data_provenances_old;
DROP TABLE IF EXISTS data_provenances_old;
CREATE TABLE IF NOT EXISTS protected.external_sync_ids (object_id INTEGER NOT NULL REFERENCES objects (data_id) ON DELETE CASCADE, source_id INTEGER NOT NULL, sid TEXT NOT NULL, version REAL NOT NULL, current_flag INTEGER)
SELECT DISTINCT origin_build, origin_product_type FROM protected.data_provenances WHERE origin_major_version=-1 AND origin_minor_version=0 AND origin_patch_version=0
UPDATE OR IGNORE protected.data_provenances SET origin_major_version=?, origin_minor_version=?,  origin_patch_version=? WHERE origin_build=? AND origin_product_type=?
CREATE TABLE IF NOT EXISTS protected.activity_caches (data_id INTEGER PRIMARY KEY, cache_index INTEGER, energy_burned REAL, brisk_minutes REAL, active_hours REAL, steps REAL, vulcan_count REAL, vulcan_condition INTEGER, energy_burned_goal REAL, energy_burned_goal_date REAL, brisk_minutes_goal REAL, active_hours_goal REAL, walk_distance REAL, deep_breathing_duration REAL, active_energy_burned_anchor INTEGER, active_hours_anchor INTEGER, brisk_minutes_anchor INTEGER, energy_burned_goal_anchor INTEGER, step_count_anchor INTEGER, vulcan_count_anchor INTEGER, walking_and_running_distance_anchor INTEGER, workout_anchor INTEGER, deep_breathing_session_anchor INTEGER, flights INTEGER, flights_anchor INTEGER, energy_burned_stats BLOB, brisk_minutes_stats BLOB)
DROP TABLE IF EXISTS external_sync_ids
CREATE TABLE IF NOT EXISTS protected.external_sync_ids (object_id INTEGER PRIMARY KEY REFERENCES objects (data_id) ON DELETE CASCADE, source_id INTEGER NOT NULL, object_code INTEGER NOT NULL, sid TEXT NOT NULL, version REAL NOT NULL, deleted INTEGER NON NULL)
CREATE INDEX IF NOT EXISTS protected.external_sync_ids_source_object_code_sid_deleted ON external_sync_ids (source_id, object_code, sid, deleted)
ALTER TABLE protected.workout_events RENAME TO workout_events_old;
CREATE TABLE IF NOT EXISTS protected.workout_events (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, workout_id INTEGER, date REAL, type INTEGER, w_step_style INTEGER, duration REAL NOT NULL);
INSERT INTO protected.workout_events (workout_id, date, type, w_step_style, duration) SELECT workout_id, date, type, w_step_style, 0 FROM protected.workout_events_old;
DROP TABLE IF EXISTS workout_events_old;
ALTER TABLE protected.metadata_values ADD COLUMN data_value BLOB
CREATE TABLE IF NOT EXISTS protected.pending_associations (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, parent_uuid BLOB NOT NULL, child_uuid BLOB NOT NULL, provenance INTEGER NOT NULL, UNIQUE(parent_uuid, child_uuid));
CREATE INDEX IF NOT EXISTS protected.pending_associations_child ON pending_associations (child_uuid);
ALTER TABLE protected.workouts ADD COLUMN total_flights_climbed REAL;
ALTER TABLE protected.fitness_friend_workouts ADD COLUMN device_manufacturer TEXT;
ALTER TABLE protected.fitness_friend_workouts ADD COLUMN device_model TEXT;
CREATE TABLE IF NOT EXISTS protected.activity_caches (data_id INTEGER PRIMARY KEY, cache_index INTEGER, energy_burned REAL, brisk_minutes REAL, active_hours REAL, steps REAL, vulcan_count REAL, vulcan_condition INTEGER, energy_burned_goal REAL, energy_burned_goal_date REAL, brisk_minutes_goal REAL, active_hours_goal REAL, walk_distance REAL, deep_breathing_duration REAL, flights INTEGER, energy_burned_stats BLOB, brisk_minutes_stats BLOB)
INSERT INTO activity_caches SELECT data_id, cache_index, energy_burned, brisk_minutes, active_hours, steps, vulcan_count, vulcan_condition, energy_burned_goal, energy_burned_goal_date, brisk_minutes_goal, active_hours_goal, walk_distance, deep_breathing_duration, flights, energy_burned_stats, brisk_minutes_stats FROM activity_caches_old;
ALTER TABLE workout_events_old ADD COLUMN metadata BLOB;
SELECT * FROM workout_events_old WHERE w_step_style IS NOT NULL
w_step_style
HKSwimmingStrokeStyle
UPDATE workout_events_old SET metadata = ? WHERE rowid = ?
CREATE TABLE IF NOT EXISTS protected.workout_events (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, workout_id INTEGER, date REAL NOT NULL, type INTEGER, duration REAL NOT NULL, metadata BLOB);
INSERT INTO protected.workout_events (workout_id, date, type, duration, metadata) SELECT workout_id, date, type, duration, metadata FROM protected.workout_events_old;
DROP TABLE IF EXISTS protected.trusted_fitness_machines
UPDATE metadata_values SET numerical_value=2 WHERE key_ID=(SELECT ROWID FROM metadata_keys WHERE key='HKVO2MaxTestType') AND numerical_value=4
CREATE TABLE IF NOT EXISTS protected.activity_caches (data_id INTEGER PRIMARY KEY, cache_index INTEGER, sequence INTEGER NOT NULL, energy_burned REAL, brisk_minutes REAL, active_hours REAL, steps REAL, vulcan_count REAL, vulcan_condition INTEGER, energy_burned_goal REAL, energy_burned_goal_date REAL, brisk_minutes_goal REAL, active_hours_goal REAL, walk_distance REAL, deep_breathing_duration REAL, flights INTEGER, energy_burned_stats BLOB, brisk_minutes_stats BLOB)
INSERT INTO activity_caches SELECT data_id, cache_index, 1, energy_burned, brisk_minutes, active_hours, steps, vulcan_count, vulcan_condition, energy_burned_goal, energy_burned_goal_date, brisk_minutes_goal, active_hours_goal, walk_distance, deep_breathing_duration, flights, energy_burned_stats, brisk_minutes_stats FROM activity_caches_old;
snapshotIndex
timeZoneOffsetFromUTCForNoon
uploadedDate
hasSnapshotIndex
Tq,N,V_snapshotIndex
hasTimeZoneOffsetFromUTCForNoon
Tq,N,V_timeZoneOffsetFromUTCForNoon
Td,N,V_stepCount
Td,N,V_pushCount
hasUploadedDate
Td,N,V_uploadedDate
hasMmv
Td,N,V_mmv
hasMmg
Td,N,V_mmg
Unable to retrieve container for identifier '%@'
HDCloudSyncHandleMissingManateeIdentityOperation.m
Unable to handle manatee loss in public scope.
HDCloudSyncFetchZonesOperation.m
changedZoneIDs != nil
deletedZoneIDs != nil
v16@?0@"CKServerChangeToken"8
zone-count
B16@?0@"CKRecordZoneID"8
object cannot be nil
T@"NSMapTable",&,N,V_map
nextIdentifier
TQ,N,V_nextIdentifier
needsMFiAuthenticationCertClass2.0c
com.apple.bluetooth.accessory-authentication.success
0000
HDHealthServiceManager.m
serverKey != nil
nil serverKey
An internal device discovery error has occurred.
The data type %d is not supported for health devices.
An internal service session error has occurred.
Bluetooth state: %ld
Health updates from the health device %@ have been disabled.
The health device %@ was not found for the requested health type.
Connected to peripheral %@
Device no longer connected
Must have advertising address
OOB Data could not be read
(#w0) Timeout attempting to connect peripheral %@
-[HDHealthServiceManager _removeConnectedPeripheral:withError:]
v16@?0@"_HDHealthServiceConnectionInfo"8
kCBScanOptionRequiresActive
This device does not support Bluetooth Low Energy.
Bluetooth is currently powered off.
CBCentralManagerState is %ld
Session not found
Cannot find peripheral for session %@
v28@?0@"NSString"8B16@"NSError"20
Peripheral requires MFA, but is already paired. peripheral=%@
central
T@"CBCentralManager",&,N,V_central
discoveryLock
T@"NSLock",&,N,V_discoveryLock
discoveryInfosTable
T@"HDIdentifierTable",&,N,V_discoveryInfosTable
discoveryInfosByServiceUUID
T@"NSMutableDictionary",&,N,V_discoveryInfosByServiceUUID
scanServiceUUIDs
T@"NSSet",&,N,V_scanServiceUUIDs
allServicesUUID
T@"CBUUID",&,N,V_allServicesUUID
connectionLock
T@"NSLock",&,N,V_connectionLock
connectionInfosTable
T@"HDIdentifierTable",&,N,V_connectionInfosTable
connectionInfosByPeripheralUUID
T@"NSMutableDictionary",&,N,V_connectionInfosByPeripheralUUID
connectedPeripheralsByPeripheralUUID
T@"NSMutableDictionary",&,N,V_connectedPeripheralsByPeripheralUUID
bluetoothUpdateHandlers
T@"NSMutableDictionary",&,N,V_bluetoothUpdateHandlers
privateModeTimer
T@"NSObject<OS_dispatch_source>",&,N,V_privateModeTimer
discoveryIdentifier
TQ,N,V_discoveryIdentifier
discoveryHandler
T@?,R,N,V_discoveryHandler
serviceUUID
T@"CBUUID",R,N,V_serviceUUID
alwaysNotify
TB,R,N,V_alwaysNotify
requiresActiveScan
TB,R,N,V_requiresActiveScan
autoPairData
TQ,N,V_sessionIdentifier
sessionHandler
T@?,R,N,V_sessionHandler
dataHandler
T@?,R,N,V_dataHandler
characteristicsHandler
T@?,R,N,V_characteristicsHandler
mfaSuccessHandler
T@?,R,N,V_mfaSuccessHandler
connectionOptions
TQ,R,N,V_connectionOptions
mfaStatus
Tq,R,N,V_mfaStatus
T@"NSData",R,N,V_autoPairData
Tq,N,V_connectionState
pairingState
Tq,N,V_pairingState
timeoutInterval
Td,R,N,V_timeoutInterval
pairingAttempted
TB,N,V_pairingAttempted
Not Connected
HDSQLiteStatementCache.m
_inTransaction == NO
_inTransaction
-[HDSQLiteStatementCache _prepareStatementForSQL:error:]
NSString passed to %@ (%lu bytes) is larger than maximum allowed SQLite statement string (%lu bytes)
SQL strings must contain only a single statement; remaining statements will not be executed: %s
SQL string is empty
Unknown error during sqlite3_prepare_v2
CFSetContainsValue(_activeStatements, stmt)
CFSetGetCount(_activeStatements) == 0
CFSetGetCount(_uncachedActiveStatements) == 0
faultCount
Tq,R,N,V_faultCount
allStatmentSQLStrings
allStatementSQLStrings
<unknown sql>
HDCloudSyncConditionalOperation.m
[? %@]
shouldRunHandler
T@?,C,V_shouldRunHandler
HDSQLiteDatabasePool.m
concurrentReaderLimit > 0
Cannot both prefer a cached connection and require a new one.
databaseWrapper != nil
%lu connections in use:
<%@:%p>: %@ %p on thread 0x%X (%llu)
%lu cached connection%s:
<%@:%p>: %lu cached statements
No cached connections
T@"<HDSQLiteDatabasePoolDelegate>",W,V_delegate
cacheSize
concurrentReaderLimit
reader (high prio)
reader
flushGroup
T@"NSObject<OS_dispatch_group>",R,N,V_flushGroup
TQ,R,N,V_generation
threadID
TQ,R,N,V_threadID
TQ,N,V_options
typeString
HDSharedDataOptInNotificationCategory
START_SHARING_DATA_NOTIFICATION_TITLE
START_SHARING_DATA_NOTIFICATION_BODY_%@
IncludeCDADocument
IncludeCDADocumentData
document_data
patient_name
author_name
custodian_name
cda_documents
HDCDASampleEntity.m
+[HDCDASampleEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
Unable to save CDA samples without document data.
Unable to save CDA sample with document data length (%ld) which is greater than maximum allowed data length (%ld)
INSERT INTO %@ (%@, %@, %@, %@, %@, %@) VALUES (?, ?, ?, ?, ?, ?)
encoded size (%ld) > maximum (%ld) so this entity will by skipped
%@ record initialization for %@ failed without reporting an error.
No zone found for record %@
Fetched record %@ does not appear to be of any known class
d16@?0@"HDCloudSyncZone"8
fetchSubscriptions
TB,N,V_fetchSubscriptions
invalidRecordIDs
HDDatabaseTransaction.m
HDDatabaseTransaction dealloc'd while active.
rootContext != nil
Cannot peform a database transaction inside a database migration transaction
Cannot promote an unprotected transaction to a protected transaction
_unprotectedDatabase == nil
Transaction failure.
Error performing transaction
Must be in a transaction
!_isActive
rootContext
T@"HDDatabaseTransactionContext",R,C,N,V_rootContext
performingMigration
TB,N,V_performingMigration
highFrequencyDataStore
T@"HDHFDataStore",R,N,V_highFrequencyDataStore
update_frequency
last_anchor
last_ack_time
launch_time_hysteresis
last_launch_time
HDAppSubscriptionEntity.m
bundleID != nil
dataCode >= 0
subscription
app_subscriptions
subscription_app_launch
app_subscription_app_launch
B64@?0q8d16d24d32q40q48^@56
B16@?0@"HKQuantitySample"8
T@"_HKFilter",C,N,V_filter
T@"NSNumber",C,N,V_anchor
T@"NSSet",C,N,V_restrictedSourceEntities
includeUnfrozenSeries
TB,N,V_includeUnfrozenSeries
shouldContinueFrequency
Tq,N,V_shouldContinueFrequency
shouldContinueHandler
T@?,C,N,V_shouldContinueHandler
associationUuid
objectUuids
hasAssociationUuid
T@"NSData",&,N,V_associationUuid
hasObjectUuids
T@"NSData",&,N,V_objectUuids
CPUArchitecture
armv7k
No provenance information on codable object collection received from %@
 or create
Source %@ is deleted
HDDataSyncEntity.m
%@ isn't an object type class
B24@?0@"HKObjectType"8@"NSNumber"16
v32@?0@"NSNumber"8@"NSMutableSet"16^B24
v24@?0@"NSArray"8q16
Health data from a future system version is present in iCloud and cannot be handled by this device.
B24@?0@"HDCloudSyncFetchChangeRecordsForZonesOperation"8@"HDCloudSyncChangeRecord"16
v24@?0@"HDCloudSyncFetchChangeRecordsForZonesOperation"8@"HDCloudSyncZone"16
v16@?0@"HDCloudSyncFetchChangeRecordsForZonesOperation"8
HDCloudSyncPullStoreOperation.m
Invalid return value form _queue_requiresSyncForSequence:error:; fell out of switch.
Failed to fetch change records with a nil server change token after determining that a sync was required.
Pull Sequences
v24@?0@"HDCloudSyncSequenceRecord"8@?<v@?@@>16
anchor range %@ invalid for %@, last anchor %lld
SQLCheckConstraint
Codable sync anchor range %@ does not contain all required fields.
Codable sync anchor range %@ has a start anchor after its end anchor.
v32@?0@"HDSyncEntityIdentifier"8@"_HDSyncAnchorRangeBox"16^B24
HDSyncAnchorRangeMap.m
syncEntityIdentifier != nil
%@: (%lld, %lld)
AnchorRangesByObjectType
AnchorRangesByEntityIdentifier
anchorRangesByEntityIdentifier
T@"NSMutableDictionary",&,N,V_anchorRangesByEntityIdentifier
most_recent
most_recent_date
most_recent_duration
quantity_sample_statistics
(IFNULL((%@.%@ + %@.%@), %@.%@) %@ ?)
(IFNULL(%@.%@, (%@.%@ - %@.%@)) %@ ?)
Invalid push store found: sameOwnerID=%@, sameContainerID=%@
Multiple push stores found.
ErrorCount
LastSuccessfulRun
MinimumInterval
<%@:%p %@ (%0.2lfs)>
PeriodicActivity-%@-%@
v40@?0q8d16@"NSDate"24@"NSError"32
succeeded
Activity: '%@'
Last Successful Run: %@
Base Interval: %lfs
Minimum Interval: %lfs
Error Count: %ld
interval
Td,R,N,V_interval
T@"<HDPeriodicActivityDelegate>",R,W,N,V_delegate
errorCount
error-ignore
error-retry
error-defer
_HeartRateThresholdKey
_AssociatedSampleUUIDsKey
associatedSampleUUIDs
T@"NSArray",R,N,V_associatedSampleUUIDs
heartRateThreshold
T@"HKQuantity",R,N,V_heartRateThreshold
HDCloudSyncPipelineStageAddSharingParticipant.m
identityLookupInfo != nil
v16@?0@"HDCloudSyncShareToParticipantOperation"8
T@"HDCloudSyncShareSetupMetadata",R,N,V_result
identityLookupInfo
T@"CKUserIdentityLookupInfo",R,C,N,V_identityLookupInfo
participantPushStoreIdentifier
T@"NSUUID",R,C,N,V_participantPushStoreIdentifier
participantOwnerIdentifier
T@"NSString",R,C,N,V_participantOwnerIdentifier
TB,N,V_requireExistingRelationship
requiredZoneDeviceMode
T@"NSNumber",C,N,V_requiredZoneDeviceMode
Manager has gone nil before starting task.
manager
T@"HDCloudSyncManager",W,N,V_manager
T@"HDCloudSyncContext",C,N,V_context
repositories
T@"NSArray",C,N,V_repositories
runWhenSyncProhibited
TB,V_runWhenSyncProhibited
Orphaned sequence record found in zone %@
private_classification
average_heart_rate
voltage_payload
symptoms_status
ecg_samples
HDECGSampleEntity.m
+[HDECGSampleEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
@16@?0@"HKCategorySample"8
@16@?0@"HKCategoryType"8
hardware
firmware
software
source_devices
INSERT INTO %@ (%@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
missing UUID for codable device
missing creation date for codable device
HDDeviceEntity.m
row != NULL
GymKitTimeToCompleteAuthorize
TQ,N,V_fitnessMachineType
Tq,N,V_timeToBeginExperience
workoutEndErrorCode
Tq,N,V_workoutEndErrorCode
cybex
lifefitness
matrix
startrac
stairmaster
schwinn
technogym
woodway
truefitness
octane
NFCError
CBErrorDomain
CBATTErrorDomain
CBInternalErrorDomain
authorizationTimer
T@"HKPersistentTimer",&,N,V_authorizationTimer
gymKitWorkoutEvent
T@"HDGymKitWorkoutAnalyticEvent",&,N,V_gymKitWorkoutEvent
T@"HKWorkoutConfiguration",R,N,V_workoutConfiguration
cmWorkout
T@"CMWorkout",&,N,V_cmWorkout
Workout METs are not available for current device
kcal/(kg*hr)
v24@?0@"CMWorkoutMetsData"8@"NSError"16
HDCoreMotionWorkoutInterface.m
[assertion isKindOfClass:[_HDCoreMotionAssertion class]]
GymKit
Fitness Machine
T@"NSArray",R,C,N,V_sortDescriptors
No participant set when removing a shared participant.
removeAllParticipants
TB,N,V_removeAllParticipants
participantsToRemove
T@"NSSet",C,N,V_participantsToRemove
hasObject
T@"HDCodableHealthObject",&,N,V_object
hasDataType
Tq,N,V_dataType
sourceUUIDs
modificationDates
hasUserOrdered
TB,N,V_userOrdered
hasSourceUUIDs
T@"NSData",&,N,V_sourceUUIDs
modificationDatesCount
T^d,R,N
hasBirthDate
T@"NSData",&,N,V_birthDate
com.apple.SessionController.FirstParty
EnableAutoPause
void HDSQLiteStatementBinder::_recordBoundProperty(const char * _Nonnull)
Attempt to bind property '%s' twice.
int HDSQLiteStatementBinder::indexForProperty(const char * _Nonnull) const
Property '%s' is not a bindable property on this statement.
void HDSQLiteStatementBinder::bind(NSString * _Nonnull __strong, id  _Nullable __strong)
HDBTLEHeartRateDataCollector
Searching
T@"HDSourceEntity",R,N,V_sourceEntity
T@"NSString",R,N,V_version
T@"NSString",R,N,V_productType
T{?=qqq},R,N,V_operatingSystemVersion
workout_builder_data_sources
NextMindfulnessMinuteSampleTime
_DidGenerateMindfulnessMinuteKey
nextMindfulSessionSampleTime
Td,N,V_nextMindfulSessionSampleTime
didGenerateMindfulnessMinute
TB,N,V_didGenerateMindfulnessMinute
automotive
workout
activeCalories
hasWalking
TI,N,V_walking
hasAutomotive
TI,N,V_automotive
hasCycling
TI,N,V_cycling
hasRunning
TI,N,V_running
hasOther
TI,N,V_other
hasWorkout
TI,N,V_workout
hasHeartRate
TI,N,V_heartRate
hasActiveCalories
TI,N,V_activeCalories
TI,N,V_duration
hasUnknown
TI,N,V_unknown
HDDemoDataVitalsSampleHelperNextHeartRateSampleTimeKey
HDDemoDataVitalsSampleHelperNextRespirationRateSampleTimeKey
HDDemoDataVitalsSampleHelperNextBloodPressureSampleTimeKey
HDDemoDataVitalsSampleHelperNextBodyTempSampleTimeKey
HDDemoDataVitalsSampleHelperNextOxygenSaturationSampleTimeKey
HDDemoDataVitalsSampleHelperNextPeripheralPerfusionIndexSampleTimeKey
HDDemoDataVitalsSampleHelperLastPeripheralPerfusionIndexValueKey
diurnalBPVariationTable
T@"NSArray",C,N,V_diurnalBPVariationTable
diurnalTempVariationTable
T@"NSArray",C,N,V_diurnalTempVariationTable
nextHeartRateSampleTime
Td,N,V_nextHeartRateSampleTime
nextRespirationRateSampleTime
Td,N,V_nextRespirationRateSampleTime
nextBloodPressureSampleTime
Td,N,V_nextBloodPressureSampleTime
nextBodyTempSampleTime
Td,N,V_nextBodyTempSampleTime
nextOxygenSaturationSampleTime
Td,N,V_nextOxygenSaturationSampleTime
nextPeripheralPerfusionIndexSampleTime
Td,N,V_nextPeripheralPerfusionIndexSampleTime
lastPeripheralPerfusionIndexValue
Td,N,V_lastPeripheralPerfusionIndexValue
Tq,N,V_energyBurned
Tq,N,V_briskMinutes
Tq,N,V_activeHours
Tq,N,V_energyBurnedGoal
Tq,N,V_walkingAndRunningDistance
Tq,N,V_energyBurnedGoalDate
hrsd_hrctx
heartRateContext
Tq,R,N,V_heartRateContext
accepted
hasAccepted
TB,N,V_accepted
Eurotas Data: instantaneousHeartRate = %@, activeCalories = %@, totalCalories = %@, averageHeartRate = %@, 
Not enough buffer for heart rate
Not enough buffer for active energy
Not enough buffer for total energy
Not enough buffer for average heart rate
TB,R,N,V_hasHeartRate
TS,R,N,V_heartRate
hasActiveEnergy
TB,R,N,V_hasActiveEnergy
activeEnergy
TS,R,N,V_activeEnergy
hasTotalEnergy
TB,R,N,V_hasTotalEnergy
TS,R,N,V_totalEnergy
hasAverageHeartRate
TB,R,N,V_hasAverageHeartRate
averageHeartRate
TS,R,N,V_averageHeartRate
original_quantity
original_unit
unit_strings.unit_string
quantity_samples
HDQuantitySampleEntity.m
+[HDQuantitySampleEntity insertDataObject:withProvenance:inDatabase:persistentID:error:]
INSERT INTO protected.quantity_samples (data_id, quantity, original_quantity, original_unit) VALUES (?, ?, ?, ?)
@16@?0@"HDCloudSyncRepository"8
Sync unavailable before setting a source share participant for this profile.
T@"HDAssertion",&,N,V_accessibilityAssertion
object_type
modification_epoch
deleted_object_anchor
object_limit_anchor
object_limit_modified
HDAuthorizationEntity.m
%@ in (%@)
 AND %@ in (%@)
SELECT %@, %@, %@, %@, %@, %@, %@ FROM %@ WHERE %@ ORDER BY %@ ASC, %@ DESC, %@ DESC, %@ DESC
Unable to instantiate object type for code: %ld
authorizationStatuses != nil
profile !=nil
Authorization status changed for source %lld
Source %lld does not exist
Missing source UUID on codable source authorization
Failed to find source for UUID %@
SELECT COALESCE(MAX(%@ + 1), 0) FROM %@ WHERE %@ in (%@) AND %@ = ?
authorizationRequests != nil
authorizationModes != nil
v32@?0@"HKObjectType"8@"NSNumber"16@"NSNumber"24
authorization
PushIdentifier
PullIdentifier
DatabaseIdentifier
Invalid authorization %@
_HKElectrocardiogramComparisonFilter+HealthDaemon.m
Ti,N,V_eventType
T@"NSString",&,N,V_sessionUUID
@16@?0@"CKRecord"8
Updated record IDs do not match saved record IDs.
_11HDSQLiteRow
N10statistics10StatisticsE
N10statistics16StatisticsBucketE
NSt3__110__function6__funcIZZ69-[HDDatabaseMigrator(Whitetail) _addFieldsToLocationSeriesWithError:]EUb_E3$_0NS_9allocatorIS2_EEFbRN6health9DataStore16WriteTransactionEEEE
NSt3__110__function6__baseIFbRN6health9DataStore16WriteTransactionEEEE
NSt3__110__function6__funcIZN6health9DataStore43accessSampleHistoryWithIdentifierForWritingI25LocationHistoryBehaviorV1EEbRKNS3_16ObjectIdentifierEbNS_8functionIFbRNS3_20MutableSampleHistoryIT_EEEEEEUlRNS3_16WriteTransactionEE_NS_9allocatorISI_EEFbSH_EEE
ZN6health9DataStore43accessSampleHistoryWithIdentifierForWritingI25LocationHistoryBehaviorV1EEbRKNS0_16ObjectIdentifierEbNSt3__18functionIFbRNS0_20MutableSampleHistoryIT_EEEEEEUlRNS0_16WriteTransactionEE_
NSt3__110__function6__funcIZZZZ69-[HDDatabaseMigrator(Whitetail) _addFieldsToLocationSeriesWithError:]EUb_ENK3$_0clERN6health9DataStore16WriteTransactionEEUb_EUlRNS4_20MutableSampleHistoryI25LocationHistoryBehaviorV1EEE_NS_9allocatorISB_EEFbSA_EEE
NSt3__110__function6__baseIFbRN6health9DataStore20MutableSampleHistoryI25LocationHistoryBehaviorV1EEEEE
NSt3__110__function6__funcIZNK6health9DataStore43accessSampleHistoryWithIdentifierForReadingI25LocationHistoryBehaviorV0EEbRKNS3_16ObjectIdentifierENS_8functionIFvRKNS3_13SampleHistoryIT_EEEEEEUlRKNS3_15ReadTransactionEE_NS_9allocatorISK_EEFvSJ_EEE
NSt3__110__function6__baseIFvRKN6health9DataStore15ReadTransactionEEEE
ZNK6health9DataStore43accessSampleHistoryWithIdentifierForReadingI25LocationHistoryBehaviorV0EEbRKNS0_16ObjectIdentifierENSt3__18functionIFvRKNS0_13SampleHistoryIT_EEEEEEUlRKNS0_15ReadTransactionEE_
NSt3__110__function6__funcIZZZZZ69-[HDDatabaseMigrator(Whitetail) _addFieldsToLocationSeriesWithError:]EUb_ENK3$_0clERN6health9DataStore16WriteTransactionEEUb_ENKUlRNS4_20MutableSampleHistoryI25LocationHistoryBehaviorV1EEE_clESA_EUlRKNS4_13SampleHistoryI25LocationHistoryBehaviorV0EEE_NS_9allocatorISH_EEFvSG_EEE
NSt3__110__function6__baseIFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV0EEEEE
NSt3__110__function6__funcIZZZZZZ69-[HDDatabaseMigrator(Whitetail) _addFieldsToLocationSeriesWithError:]EUb_ENK3$_0clERN6health9DataStore16WriteTransactionEEUb_ENKUlRNS4_20MutableSampleHistoryI25LocationHistoryBehaviorV1EEE_clESA_ENKUlRKNS4_13SampleHistoryI25LocationHistoryBehaviorV0EEE_clESG_EUldRK21_HDRawLocationDatumV0E_NS_9allocatorISL_EEFbRKdSK_EEE
NSt3__110__function6__baseIFbRKdRK21_HDRawLocationDatumV0EEE
ZZZZZZ69-[HDDatabaseMigrator(Whitetail) _addFieldsToLocationSeriesWithError:]EUb_ENK3$_0clERN6health9DataStore16WriteTransactionEEUb_ENKUlRNS1_20MutableSampleHistoryI25LocationHistoryBehaviorV1EEE_clES7_ENKUlRKNS1_13SampleHistoryI25LocationHistoryBehaviorV0EEE_clESD_EUldRK21_HDRawLocationDatumV0E_
ZZZZZ69-[HDDatabaseMigrator(Whitetail) _addFieldsToLocationSeriesWithError:]EUb_ENK3$_0clERN6health9DataStore16WriteTransactionEEUb_ENKUlRNS1_20MutableSampleHistoryI25LocationHistoryBehaviorV1EEE_clES7_EUlRKNS1_13SampleHistoryI25LocationHistoryBehaviorV0EEE_
ZZZZ69-[HDDatabaseMigrator(Whitetail) _addFieldsToLocationSeriesWithError:]EUb_ENK3$_0clERN6health9DataStore16WriteTransactionEEUb_EUlRNS1_20MutableSampleHistoryI25LocationHistoryBehaviorV1EEE_
ZZ69-[HDDatabaseMigrator(Whitetail) _addFieldsToLocationSeriesWithError:]EUb_E3$_0
 g@d]
@`@H
?ffffff
|?5^
|?5^
?333333
N6health17TransactionalFile15ReadTransactionE
N6health17TransactionalFile16WriteTransactionE
NSt3__120__shared_ptr_pointerIPhNS_14default_deleteIA_hEENS_9allocatorIhEEEE
NSt3__110__function6__funcIZN6health17TransactionalFileC1ERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrINS2_17VirtualFilesystemEEEE3$_0NS7_ISF_EEFbyRKyRKNS2_8FilePageEEEE
NSt3__110__function6__baseIFbyRKyRKN6health8FilePageEEEE
ZN6health17TransactionalFileC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10shared_ptrINS_17VirtualFilesystemEEEE3$_0
NSt3__110__function6__funcIZN6health17TransactionalFile4openENS3_10OpenMethodEE3$_1NS_9allocatorIS5_EEFvyEEE
NSt3__110__function6__baseIFvyEEE
ZN6health17TransactionalFile4openENS0_10OpenMethodEE3$_1
NSt3__110__function6__funcIZN6health17TransactionalFile4openENS3_10OpenMethodEE3$_2NS_9allocatorIS5_EEFvyRKNS2_8FilePageEEEE
NSt3__110__function6__baseIFvyRKN6health8FilePageEEEE
ZN6health17TransactionalFile4openENS0_10OpenMethodEE3$_2
NSt3__110__function6__funcIZN6health17TransactionalFile4openENS3_10OpenMethodEE3$_3NS_9allocatorIS5_EEFvyEEE
ZN6health17TransactionalFile4openENS0_10OpenMethodEE3$_3
NSt3__110__function6__funcIZNK6health17TransactionalFile25readTransactionWithLambdaENS_8functionIFvRKNS3_15ReadTransactionEEEEE3$_4NS_9allocatorISA_EEFvyEEE
ZNK6health17TransactionalFile25readTransactionWithLambdaENSt3__18functionIFvRKNS0_15ReadTransactionEEEEE3$_4
NSt3__110__function6__funcIZZN6health17TransactionalFile26writeTransactionWithLambdaENS_8functionIFbRNS3_16WriteTransactionEEEEENK3$_5clEvEUlyE_NS_9allocatorISA_EEFbyEEE
NSt3__110__function6__baseIFbyEEE
ZZN6health17TransactionalFile26writeTransactionWithLambdaENSt3__18functionIFbRNS0_16WriteTransactionEEEEENK3$_5clEvEUlyE_
NSt3__110__function6__funcIZZN6health17TransactionalFile26writeTransactionWithLambdaENS_8functionIFbRNS3_16WriteTransactionEEEEENK3$_5clEvEUlyE0_NS_9allocatorISA_EEFvyEEE
ZZN6health17TransactionalFile26writeTransactionWithLambdaENSt3__18functionIFbRNS0_16WriteTransactionEEEEENK3$_5clEvEUlyE0_
NSt3__110__function6__funcIZZN6health17TransactionalFile26writeTransactionWithLambdaENS_8functionIFbRNS3_16WriteTransactionEEEEENK3$_5clEvEUlyRKNS2_8FilePageEE_NS_9allocatorISD_EEFvySC_EEE
ZZN6health17TransactionalFile26writeTransactionWithLambdaENSt3__18functionIFbRNS0_16WriteTransactionEEEEENK3$_5clEvEUlyRKNS_8FilePageEE_
NSt3__110__function6__funcIZZN6health17TransactionalFile26writeTransactionWithLambdaENS_8functionIFbRNS3_16WriteTransactionEEEEENK3$_5clEvEUlyE1_NS_9allocatorISA_EEFvyEEE
ZZN6health17TransactionalFile26writeTransactionWithLambdaENSt3__18functionIFbRNS0_16WriteTransactionEEEEENK3$_5clEvEUlyE1_
NSt3__111__end_stateIcEE
NSt3__16__nodeIcEE
NSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteINS_13__empty_stateIcEEEE
NSt3__113__empty_stateIcEE
NSt3__116__owns_one_stateIcEE
NSt3__115__has_one_stateIcEE
NSt3__110__l_anchorIcEE
NSt3__110__r_anchorIcEE
NSt3__115__word_boundaryIcNS_12regex_traitsIcEEEE
NSt3__111__lookaheadIcNS_12regex_traitsIcEEEE
NSt3__123__match_any_but_newlineIcEE
NSt3__118__match_char_icaseIcNS_12regex_traitsIcEEEE
NSt3__120__match_char_collateIcNS_12regex_traitsIcEEEE
NSt3__112__match_charIcEE
NSt3__116__back_ref_icaseIcNS_12regex_traitsIcEEEE
NSt3__118__back_ref_collateIcNS_12regex_traitsIcEEEE
NSt3__110__back_refIcEE
NSt3__120__bracket_expressionIcNS_12regex_traitsIcEEEE
NSt3__128__begin_marked_subexpressionIcEE
NSt3__126__end_marked_subexpressionIcEE
NSt3__16__loopIcEE
NSt3__117__owns_two_statesIcEE
NSt3__117__repeat_one_loopIcEE
NSt3__111__alternateIcEE
NSt3__121__empty_non_own_stateIcEE
NSt3__111__match_anyIcEE
N6health21data_corruption_errorE
NSt3__114default_deleteIA_hEE
0123456789ABCDEF0123456789abcdefNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N6health17transaction_errorE
NSt3__120__shared_ptr_emplaceIN6health13WriteAheadLog11TransactionENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN6health13WriteAheadLog26_walLock_commitTransactionEyE3$_4NS_9allocatorIS4_EEFvxNS3_9PageEntryEEEE
NSt3__110__function6__baseIFvxN6health13WriteAheadLog9PageEntryEEEE
ZN6health13WriteAheadLog26_walLock_commitTransactionEyE3$_4
NSt3__110__function6__funcIZN6health13WriteAheadLog11Transaction14commitAndMergeERS4_E3$_5NS_9allocatorIS6_EEFvxNS3_9PageEntryEEEE
ZN6health13WriteAheadLog11Transaction14commitAndMergeERS1_E3$_5
?333333
?333333
?ffffff
 l@333333
&@ffffff
?333333
NSt3__110__function6__funcIZZ68-[HDDatabaseMigrator(HFDMigrationSupport) rebuildHFDIndexWithError:]ENK3$_4clEPKN6health9DataStoreEPU15__autoreleasingP7NSErrorEUlRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE_NSE_ISJ_EEFvSI_EEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
ZZ68-[HDDatabaseMigrator(HFDMigrationSupport) rebuildHFDIndexWithError:]ENK3$_4clEPKN6health9DataStoreEPU15__autoreleasingP7NSErrorEUlRKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEE_
NSt3__110__function6__funcIZNK6health9DataStore43accessSampleHistoryWithIdentifierForReadingI25LocationHistoryBehaviorV1EEbRKNS3_16ObjectIdentifierENS_8functionIFvRKNS3_13SampleHistoryIT_EEEEEEUlRKNS3_15ReadTransactionEE_NS_9allocatorISK_EEFvSJ_EEE
ZNK6health9DataStore43accessSampleHistoryWithIdentifierForReadingI25LocationHistoryBehaviorV1EEbRKNS0_16ObjectIdentifierENSt3__18functionIFvRKNS0_13SampleHistoryIT_EEEEEEUlRKNS0_15ReadTransactionEE_
NSt3__110__function6__funcIZL14migrateSamplesI25LocationHistoryBehaviorV1EbPN6health9DataStoreES6_NS5_16ObjectIdentifierEEUlRKT_E_NS_9allocatorISB_EEFvRKNS5_13SampleHistoryIS3_EEEEE
NSt3__110__function6__baseIFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
NSt3__110__function6__funcIZZL14migrateSamplesI25LocationHistoryBehaviorV1EbPN6health9DataStoreES6_NS5_16ObjectIdentifierEENKUlRKT_E_clINS5_13SampleHistoryIS3_EEEEDaSA_EUlRS8_E_NS_9allocatorISH_EEFbRNS5_20MutableSampleHistoryIS3_EEEEE
NSt3__110__function6__funcIZZZL14migrateSamplesI25LocationHistoryBehaviorV1EbPN6health9DataStoreES6_NS5_16ObjectIdentifierEENKUlRKT_E_clINS5_13SampleHistoryIS3_EEEEDaSA_ENKUlRS8_E_clINS5_20MutableSampleHistoryIS3_EEEEbSG_EUlSA_RKT0_E_NS_9allocatorISO_EEFbRKdRK21_HDRawLocationDatumV1EEE
NSt3__110__function6__baseIFbRKdRK21_HDRawLocationDatumV1EEE
ZZZL14migrateSamplesI25LocationHistoryBehaviorV1EbPN6health9DataStoreES3_NS2_16ObjectIdentifierEENKUlRKT_E_clINS2_13SampleHistoryIS0_EEEEDaS7_ENKUlRS5_E_clINS2_20MutableSampleHistoryIS0_EEEEbSD_EUlS7_RKT0_E_
ZZL14migrateSamplesI25LocationHistoryBehaviorV1EbPN6health9DataStoreES3_NS2_16ObjectIdentifierEENKUlRKT_E_clINS2_13SampleHistoryIS0_EEEEDaS7_EUlRS5_E_
ZL14migrateSamplesI25LocationHistoryBehaviorV1EbPN6health9DataStoreES3_NS2_16ObjectIdentifierEEUlRKT_E_
NSt3__110__function6__funcIPFbPN6health9DataStoreES4_yENS_9allocatorIS6_EES5_EE
NSt3__110__function6__baseIFbPN6health9DataStoreES4_yEEE
PFbPN6health9DataStoreES1_yE
FbPN6health9DataStoreES1_yE
NSt3__110__function6__funcIZL27azul_migrateQuantitySamplesPN6health9DataStoreES4_yE3$_0NS_9allocatorIS5_EEFvRKNS3_15ReadTransactionEEEE
NSt3__110__function6__funcIZL14migrateSamplesI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreES6_NS5_16ObjectIdentifierEEUlRKT_E_NS_9allocatorISB_EEFvRKNS5_13SampleHistoryIS3_EEEEE
ZN6health9DataStore43accessSampleHistoryWithIdentifierForWritingI29QuantitySampleValueBehaviorV1EEbRKNS0_16ObjectIdentifierEbNSt3__18functionIFbRNS0_20MutableSampleHistoryIT_EEEEEEUlRNS0_16WriteTransactionEE_
NSt3__110__function6__funcIZZL14migrateSamplesI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreES6_NS5_16ObjectIdentifierEENKUlRKT_E_clINS5_13SampleHistoryIS3_EEEEDaSA_EUlRS8_E_NS_9allocatorISH_EEFbRNS5_20MutableSampleHistoryIS3_EEEEE
NSt3__110__function6__funcIZZZL14migrateSamplesI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreES6_NS5_16ObjectIdentifierEENKUlRKT_E_clINS5_13SampleHistoryIS3_EEEEDaSA_ENKUlRS8_E_clINS5_20MutableSampleHistoryIS3_EEEEbSG_EUlSA_RKT0_E_NS_9allocatorISO_EEFbRKdRK27_HDRawQuantitySampleValueV1EEE
ZZZL14migrateSamplesI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreES3_NS2_16ObjectIdentifierEENKUlRKT_E_clINS2_13SampleHistoryIS0_EEEEDaS7_ENKUlRS5_E_clINS2_20MutableSampleHistoryIS0_EEEEbSD_EUlS7_RKT0_E_
ZZL14migrateSamplesI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreES3_NS2_16ObjectIdentifierEENKUlRKT_E_clINS2_13SampleHistoryIS0_EEEEDaS7_EUlRS5_E_
ZL14migrateSamplesI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreES3_NS2_16ObjectIdentifierEEUlRKT_E_
NSt3__110__function6__funcIZNK6health9DataStore43accessSampleHistoryWithIdentifierForReadingI29QuantitySampleValueBehaviorV0EEbRKNS3_16ObjectIdentifierENS_8functionIFvRKNS3_13SampleHistoryIT_EEEEEEUlRKNS3_15ReadTransactionEE_NS_9allocatorISK_EEFvSJ_EEE
NSt3__110__function6__funcIZL14migrateSamplesI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreES6_NS5_16ObjectIdentifierEEUlRKT_E_NS_9allocatorISB_EEFvRKNS5_13SampleHistoryIS3_EEEEE
NSt3__110__function6__baseIFvRKN6health9DataStore13SampleHistoryI29QuantitySampleValueBehaviorV0EEEEE
ZN6health9DataStore43accessSampleHistoryWithIdentifierForWritingI29QuantitySampleValueBehaviorV0EEbRKNS0_16ObjectIdentifierEbNSt3__18functionIFbRNS0_20MutableSampleHistoryIT_EEEEEEUlRNS0_16WriteTransactionEE_
NSt3__110__function6__funcIZZL14migrateSamplesI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreES6_NS5_16ObjectIdentifierEENKUlRKT_E_clINS5_13SampleHistoryIS3_EEEEDaSA_EUlRS8_E_NS_9allocatorISH_EEFbRNS5_20MutableSampleHistoryIS3_EEEEE
NSt3__110__function6__funcIZZZL14migrateSamplesI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreES6_NS5_16ObjectIdentifierEENKUlRKT_E_clINS5_13SampleHistoryIS3_EEEEDaSA_ENKUlRS8_E_clINS5_20MutableSampleHistoryIS3_EEEEbSG_EUlSA_RKT0_E_NS_9allocatorISO_EEFbRKdSS_EEE
ZZZL14migrateSamplesI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreES3_NS2_16ObjectIdentifierEENKUlRKT_E_clINS2_13SampleHistoryIS0_EEEEDaS7_ENKUlRS5_E_clINS2_20MutableSampleHistoryIS0_EEEEbSD_EUlS7_RKT0_E_
ZZL14migrateSamplesI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreES3_NS2_16ObjectIdentifierEENKUlRKT_E_clINS2_13SampleHistoryIS0_EEEEDaS7_EUlRS5_E_
ZL14migrateSamplesI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreES3_NS2_16ObjectIdentifierEEUlRKT_E_
ZL27azul_migrateQuantitySamplesPN6health9DataStoreES1_yE3$_0
NSt3__110__function6__funcIZ96-[HDDatabaseMigrator(HFDMigrationSupport) migrateSamplesFrom:to:usingHandler:identifiers:error:]E3$_1NS_9allocatorIS2_EEFbRN6health9DataStore16WriteTransactionEEEE
Z96-[HDDatabaseMigrator(HFDMigrationSupport) migrateSamplesFrom:to:usingHandler:identifiers:error:]E3$_1
0123456789ABCDEF0123456789abcdef
NSt3__110__function6__funcIZN6health15BlockAccessFileC1ERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrINS2_17VirtualFilesystemEEEE3$_0NS7_ISF_EEFbRNS2_17TransactionalFile16WriteTransactionEEEE
NSt3__110__function6__baseIFbRN6health17TransactionalFile16WriteTransactionEEEE
ZN6health15BlockAccessFileC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10shared_ptrINS_17VirtualFilesystemEEEE3$_0
NSt3__110__function6__funcIZNK6health15BlockAccessFile32performReadTransactionWithLambdaENS_8functionIFvRKNS3_15ReadTransactionEEEEE3$_1NS_9allocatorISA_EEFvRKNS2_17TransactionalFile15ReadTransactionEEEE
NSt3__110__function6__baseIFvRKN6health17TransactionalFile15ReadTransactionEEEE
ZNK6health15BlockAccessFile32performReadTransactionWithLambdaENSt3__18functionIFvRKNS0_15ReadTransactionEEEEE3$_1
NSt3__110__function6__funcIZN6health15BlockAccessFile33performWriteTransactionWithLambdaENS_8functionIFbRNS3_16WriteTransactionEEEEE3$_2NS_9allocatorIS9_EEFbRNS2_17TransactionalFile16WriteTransactionEEEE
ZN6health15BlockAccessFile33performWriteTransactionWithLambdaENSt3__18functionIFbRNS0_16WriteTransactionEEEEE3$_2
NSt3__110__function6__funcIZNK6health15BlockAccessFile14checkIntegrityENS_8functionIFbNS3_14IntegrityErrorExxRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEE3$_3NS9_ISG_EEFvRKNS3_15ReadTransactionEEEE
ZNK6health15BlockAccessFile14checkIntegrityENSt3__18functionIFbNS0_14IntegrityErrorExxRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEEE3$_3
N6health17file_access_errorE
NSt3__110__function6__funcIZNK6health15BlockAccessFile15ReadTransaction24_computeFreeSpaceExtentsEvE3$_4NS_9allocatorIS5_EEFvRKNS2_10FileExtentEEEE
NSt3__110__function6__baseIFvRKN6health10FileExtentEEEE
ZNK6health15BlockAccessFile15ReadTransaction24_computeFreeSpaceExtentsEvE3$_4
?333333
?ffffff
?NSt3__110__function6__funcIZZ69-[HDDatabaseMigrator(Butler) _removeOrphanedLocationSeriesWithError:]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6health9DataStore15ReadTransactionEEEE
NSt3__110__function6__funcIZZZ69-[HDDatabaseMigrator(Butler) _removeOrphanedLocationSeriesWithError:]EUb_ENK3$_0clIN6health9DataStore15ReadTransactionEEEDaRKT_EUlRKNS5_16ObjectIdentifierEE_NS_9allocatorISE_EEFvSB_EEE
NSt3__110__function6__baseIFvN6health9DataStore16ObjectIdentifierEEEE
ZZZ69-[HDDatabaseMigrator(Butler) _removeOrphanedLocationSeriesWithError:]EUb_ENK3$_0clIN6health9DataStore15ReadTransactionEEEDaRKT_EUlRKNS2_16ObjectIdentifierEE_
ZZ69-[HDDatabaseMigrator(Butler) _removeOrphanedLocationSeriesWithError:]EUb_E3$_0
NSt3__110__function6__funcIZN6health9DataStore19deleteSampleHistoryI25LocationHistoryBehaviorV1EEvRKNS3_16ObjectIdentifierEEUlRNS3_16WriteTransactionEE_NS_9allocatorISB_EEFbSA_EEE
ZN6health9DataStore19deleteSampleHistoryI25LocationHistoryBehaviorV1EEvRKNS0_16ObjectIdentifierEEUlRNS0_16WriteTransactionEE_
NSt3__110__function6__funcIZN6health9DataStore19deleteSampleHistoryI25LocationHistoryBehaviorV0EEvRKNS3_16ObjectIdentifierEEUlRNS3_16WriteTransactionEE_NS_9allocatorISB_EEFbSA_EEE
ZN6health9DataStore19deleteSampleHistoryI25LocationHistoryBehaviorV0EEvRKNS0_16ObjectIdentifierEEUlRNS0_16WriteTransactionEE_
r@iK
NSt3__110__function6__funcIZZ95+[HDLocationSeriesSampleEntity _insertCodableSeriesDataFromObject:persistentID:database:error:]EUb_E3$_0NS_9allocatorIS2_EEFbRN6health9DataStore20MutableSampleHistoryI25LocationHistoryBehaviorV1EEEEE
ZZ95+[HDLocationSeriesSampleEntity _insertCodableSeriesDataFromObject:persistentID:database:error:]EUb_E3$_0
NSt3__110__function6__funcIZZ86+[HDLocationSeriesSampleEntity _deleteHFDSeriesIfFoundForPersistentID:database:error:]EUb0_E3$_1NS_9allocatorIS2_EEFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
ZZ86+[HDLocationSeriesSampleEntity _deleteHFDSeriesIfFoundForPersistentID:database:error:]EUb0_E3$_1
NSt3__110__function6__funcIZZ66-[HDLocationSeriesSampleEntity insertLocationData:database:error:]EUb1_E3$_2NS_9allocatorIS2_EEFbRN6health9DataStore20MutableSampleHistoryI25LocationHistoryBehaviorV1EEEEE
ZZ66-[HDLocationSeriesSampleEntity insertLocationData:database:error:]EUb1_E3$_2
NSt3__110__function6__funcIZZ69-[HDLocationSeriesSampleEntity sampleCountForSeriesInDatabase:error:]EUb2_E3$_3NS_9allocatorIS2_EEFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
ZZ69-[HDLocationSeriesSampleEntity sampleCountForSeriesInDatabase:error:]EUb2_E3$_3
NSt3__110__function6__funcIZZ70-[HDLocationSeriesSampleEntity dateIntervalForSeriesInDatabase:error:]EUb3_E3$_4NS_9allocatorIS2_EEFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
ZZ70-[HDLocationSeriesSampleEntity dateIntervalForSeriesInDatabase:error:]EUb3_E3$_4
NSt3__110__function6__funcIZZ102-[HDLocationSeriesSampleEntity enumerateLocationDataFromTimestamp:toTimestamp:database:error:handler:]EUb4_E3$_5NS_9allocatorIS2_EEFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
NSt3__110__function6__funcIZZZ102-[HDLocationSeriesSampleEntity enumerateLocationDataFromTimestamp:toTimestamp:database:error:handler:]EUb4_ENK3$_5clERKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEUldRK21_HDRawLocationDatumV1E_NS_9allocatorISD_EEFbRKdSC_EEE
ZZZ102-[HDLocationSeriesSampleEntity enumerateLocationDataFromTimestamp:toTimestamp:database:error:handler:]EUb4_ENK3$_5clERKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEUldRK21_HDRawLocationDatumV1E_
ZZ102-[HDLocationSeriesSampleEntity enumerateLocationDataFromTimestamp:toTimestamp:database:error:handler:]EUb4_E3$_5
NSt3__110__function6__funcIZZ85+[HDLocationSeriesSampleEntity enumerateLocationDataInDatabase:HFDKey:error:handler:]EUb5_E3$_6NS_9allocatorIS2_EEFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
NSt3__110__function6__funcIZZZ85+[HDLocationSeriesSampleEntity enumerateLocationDataInDatabase:HFDKey:error:handler:]EUb5_ENK3$_6clERKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEUldRK21_HDRawLocationDatumV1E_NS_9allocatorISD_EEFbRKdSC_EEE
ZZZ85+[HDLocationSeriesSampleEntity enumerateLocationDataInDatabase:HFDKey:error:handler:]EUb5_ENK3$_6clERKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEUldRK21_HDRawLocationDatumV1E_
ZZ85+[HDLocationSeriesSampleEntity enumerateLocationDataInDatabase:HFDKey:error:handler:]EUb5_E3$_6
NSt3__110__function6__funcIZZ73+[HDLocationSeriesSampleEntity hasSeriesDataForHFDKey:transaction:error:]EUb6_E3$_7NS_9allocatorIS2_EEFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
ZZ73+[HDLocationSeriesSampleEntity hasSeriesDataForHFDKey:transaction:error:]EUb6_E3$_7
NSt3__110__function6__funcIZZ68-[HDLocationSeriesSampleEntity freezeWithTransaction:profile:error:]EUb7_E3$_8NS_9allocatorIS2_EEFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
ZZ68-[HDLocationSeriesSampleEntity freezeWithTransaction:profile:error:]EUb7_E3$_8
NSt3__110__function6__funcIZZ87-[_HDLocationSeriesSampleEntityEncoder codableRepresentationForPersistentID:row:error:]EUb8_E3$_9NS_9allocatorIS2_EEFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
NSt3__110__function6__funcIZZZ87-[_HDLocationSeriesSampleEntityEncoder codableRepresentationForPersistentID:row:error:]EUb8_ENK3$_9clERKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEUldRK21_HDRawLocationDatumV1E_NS_9allocatorISD_EEFbRKdSC_EEE
ZZZ87-[_HDLocationSeriesSampleEntityEncoder codableRepresentationForPersistentID:row:error:]EUb8_ENK3$_9clERKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEUldRK21_HDRawLocationDatumV1E_
ZZ87-[_HDLocationSeriesSampleEntityEncoder codableRepresentationForPersistentID:row:error:]EUb8_E3$_9
NSt3__110__function6__funcIZZ130-[_HDLocationSeriesSampleEntityEncoder generateCodableRepresentationsForPersistentID:row:maxBytesPerRepresentation:error:handler:]EUb9_E4$_10NS_9allocatorIS2_EEFvRKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
NSt3__110__function6__funcIZZZ130-[_HDLocationSeriesSampleEntityEncoder generateCodableRepresentationsForPersistentID:row:maxBytesPerRepresentation:error:handler:]EUb9_ENK4$_10clERKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEUldRK21_HDRawLocationDatumV1E_NS_9allocatorISD_EEFbRKdSC_EEE
ZZZ130-[_HDLocationSeriesSampleEntityEncoder generateCodableRepresentationsForPersistentID:row:maxBytesPerRepresentation:error:handler:]EUb9_ENK4$_10clERKN6health9DataStore13SampleHistoryI25LocationHistoryBehaviorV1EEEUldRK21_HDRawLocationDatumV1E_
ZZ130-[_HDLocationSeriesSampleEntityEncoder generateCodableRepresentationsForPersistentID:row:maxBytesPerRepresentation:error:handler:]EUb9_E4$_10
u2ANSt3__110__function6__funcIZNK6health9DataStore43accessSampleHistoryWithIdentifierForReadingI29QuantitySampleValueBehaviorV1EEbRKNS3_16ObjectIdentifierENS_8functionIFvRKNS3_13SampleHistoryIT_EEEEEEUlRKNS3_15ReadTransactionEE_NS_9allocatorISK_EEFvSJ_EEE
ZNK6health9DataStore43accessSampleHistoryWithIdentifierForReadingI29QuantitySampleValueBehaviorV1EEbRKNS0_16ObjectIdentifierENSt3__18functionIFvRKNS0_13SampleHistoryIT_EEEEEEUlRKNS0_15ReadTransactionEE_
NSt3__110__function6__funcIZL38_getFirstTimeEndTimeCountWithDataStoreI29QuantitySampleValueBehaviorV1EbPKN6health9DataStoreERKNS5_16ObjectIdentifierEPdSB_PxPU15__autoreleasingP7NSErrorE4$_20NS_9allocatorISH_EEFvRKNS5_13SampleHistoryIS3_EEEEE
NSt3__110__function6__funcIZZL38_getFirstTimeEndTimeCountWithDataStoreI29QuantitySampleValueBehaviorV1EbPKN6health9DataStoreERKNS5_16ObjectIdentifierEPdSB_PxPU15__autoreleasingP7NSErrorENK4$_20clERKNS5_13SampleHistoryIS3_EEEUld27_HDRawQuantitySampleValueV1E_NS_9allocatorISN_EEFbRKdRKSM_EEE
NSt3__110__function6__baseIFbRKdRK27_HDRawQuantitySampleValueV1EEE
ZZL38_getFirstTimeEndTimeCountWithDataStoreI29QuantitySampleValueBehaviorV1EbPKN6health9DataStoreERKNS2_16ObjectIdentifierEPdS8_PxPU15__autoreleasingP7NSErrorENK4$_20clERKNS2_13SampleHistoryIS0_EEEUld27_HDRawQuantitySampleValueV1E_
ZL38_getFirstTimeEndTimeCountWithDataStoreI29QuantitySampleValueBehaviorV1EbPKN6health9DataStoreERKNS2_16ObjectIdentifierEPdS8_PxPU15__autoreleasingP7NSErrorE4$_20
NSt3__110__function6__funcIZZ90+[HDQuantitySampleSeriesEntity primitiveInsertValues:seriesVersion:HFDKey:database:error:]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6health9DataStore15ReadTransactionEEEE
ZZ90+[HDQuantitySampleSeriesEntity primitiveInsertValues:seriesVersion:HFDKey:database:error:]EUb_E3$_0
NSt3__110__function6__funcIZN6health9DataStore43accessSampleHistoryWithIdentifierForWritingI29QuantitySampleValueBehaviorV0EEbRKNS3_16ObjectIdentifierEbNS_8functionIFbRNS3_20MutableSampleHistoryIT_EEEEEEUlRNS3_16WriteTransactionEE_NS_9allocatorISI_EEFbSH_EEE
N6health15not_found_errorE
NSt3__110__function6__funcIZZ90+[HDQuantitySampleSeriesEntity primitiveInsertValues:seriesVersion:HFDKey:database:error:]EUb_E3$_3NS_9allocatorIS2_EEFbRN6health9DataStore20MutableSampleHistoryI29QuantitySampleValueBehaviorV0EEEEE
NSt3__110__function6__baseIFbRN6health9DataStore20MutableSampleHistoryI29QuantitySampleValueBehaviorV0EEEEE
ZZ90+[HDQuantitySampleSeriesEntity primitiveInsertValues:seriesVersion:HFDKey:database:error:]EUb_E3$_3
NSt3__110__function6__funcIZN6health9DataStore43accessSampleHistoryWithIdentifierForWritingI29QuantitySampleValueBehaviorV1EEbRKNS3_16ObjectIdentifierEbNS_8functionIFbRNS3_20MutableSampleHistoryIT_EEEEEEUlRNS3_16WriteTransactionEE_NS_9allocatorISI_EEFbSH_EEE
NSt3__110__function6__funcIZZ90+[HDQuantitySampleSeriesEntity primitiveInsertValues:seriesVersion:HFDKey:database:error:]EUb_E3$_4NS_9allocatorIS2_EEFbRN6health9DataStore20MutableSampleHistoryI29QuantitySampleValueBehaviorV1EEEEE
NSt3__110__function6__baseIFbRN6health9DataStore20MutableSampleHistoryI29QuantitySampleValueBehaviorV1EEEEE
ZZ90+[HDQuantitySampleSeriesEntity primitiveInsertValues:seriesVersion:HFDKey:database:error:]EUb_E3$_4
NSt3__110__function6__funcIZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_5ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_6EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS7_13SampleHistoryIS3_EEE_NS_9allocatorISR_EEFvSQ_EEE
NSt3__110__function6__funcIZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_5ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_6EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS7_13SampleHistoryIS3_EEE_clESQ_EUld27_HDRawQuantitySampleValueV1E_NS_9allocatorIST_EEFbRKdRKSS_EEE
ZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_5ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_6EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS4_13SampleHistoryIS0_EEE_clESN_EUld27_HDRawQuantitySampleValueV1E_
ZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_5ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_6EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS4_13SampleHistoryIS0_EEE_
ZNK6health9DataStore43accessSampleHistoryWithIdentifierForReadingI29QuantitySampleValueBehaviorV0EEbRKNS0_16ObjectIdentifierENSt3__18functionIFvRKNS0_13SampleHistoryIT_EEEEEEUlRKNS0_15ReadTransactionEE_
NSt3__110__function6__funcIZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_7ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_8EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS7_13SampleHistoryIS3_EEE_NS_9allocatorISR_EEFvSQ_EEE
NSt3__110__function6__funcIZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_7ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_8EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS7_13SampleHistoryIS3_EEE_clESQ_EUlddE_NS_9allocatorISS_EEFbRKdSW_EEE
NSt3__110__function6__baseIFbRKdS3_EEE
ZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_7ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_8EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS4_13SampleHistoryIS0_EEE_clESN_EUlddE_
ZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_7ZZ93+[HDQuantitySampleSeriesEntity _statisticsWithHFDKey:statisticsCalculator:transaction:error:]EUb2_E3$_8EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS4_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZZ73+[HDQuantitySampleSeriesEntity hasSeriesDataForHFDKey:transaction:error:]EUb0_E3$_1NS_9allocatorIS2_EEFvRKN6health9DataStore15ReadTransactionEEEE
ZZ73+[HDQuantitySampleSeriesEntity hasSeriesDataForHFDKey:transaction:error:]EUb0_E3$_1
NSt3__110__function6__funcIZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ82-[HDQuantitySampleSeriesEntity enumerateDataInInterval:transaction:error:handler:]EUb3_E3$_9EbPKN6health9DataStoreERKNS6_16ObjectIdentifierENT_7KeyTypeESD_PU15__autoreleasingP7NSErrorRKT0_EUlRKNS6_13SampleHistoryIS3_EEE_NS_9allocatorISP_EEFvSO_EEE
NSt3__110__function6__funcIZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ82-[HDQuantitySampleSeriesEntity enumerateDataInInterval:transaction:error:handler:]EUb3_E3$_9EbPKN6health9DataStoreERKNS6_16ObjectIdentifierENT_7KeyTypeESD_PU15__autoreleasingP7NSErrorRKT0_ENKUlRKNS6_13SampleHistoryIS3_EEE_clESO_EUld27_HDRawQuantitySampleValueV1E_NS_9allocatorISR_EEFbRKdRKSQ_EEE
ZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ82-[HDQuantitySampleSeriesEntity enumerateDataInInterval:transaction:error:handler:]EUb3_E3$_9EbPKN6health9DataStoreERKNS3_16ObjectIdentifierENT_7KeyTypeESA_PU15__autoreleasingP7NSErrorRKT0_ENKUlRKNS3_13SampleHistoryIS0_EEE_clESL_EUld27_HDRawQuantitySampleValueV1E_
ZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ82-[HDQuantitySampleSeriesEntity enumerateDataInInterval:transaction:error:handler:]EUb3_E3$_9EbPKN6health9DataStoreERKNS3_16ObjectIdentifierENT_7KeyTypeESA_PU15__autoreleasingP7NSErrorRKT0_EUlRKNS3_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ82-[HDQuantitySampleSeriesEntity enumerateDataInInterval:transaction:error:handler:]EUb3_E4$_10EbPKN6health9DataStoreERKNS6_16ObjectIdentifierENT_7KeyTypeESD_PU15__autoreleasingP7NSErrorRKT0_EUlRKNS6_13SampleHistoryIS3_EEE_NS_9allocatorISP_EEFvSO_EEE
NSt3__110__function6__funcIZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ82-[HDQuantitySampleSeriesEntity enumerateDataInInterval:transaction:error:handler:]EUb3_E4$_10EbPKN6health9DataStoreERKNS6_16ObjectIdentifierENT_7KeyTypeESD_PU15__autoreleasingP7NSErrorRKT0_ENKUlRKNS6_13SampleHistoryIS3_EEE_clESO_EUlddE_NS_9allocatorISQ_EEFbRKdSU_EEE
ZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ82-[HDQuantitySampleSeriesEntity enumerateDataInInterval:transaction:error:handler:]EUb3_E4$_10EbPKN6health9DataStoreERKNS3_16ObjectIdentifierENT_7KeyTypeESA_PU15__autoreleasingP7NSErrorRKT0_ENKUlRKNS3_13SampleHistoryIS0_EEE_clESL_EUlddE_
ZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ82-[HDQuantitySampleSeriesEntity enumerateDataInInterval:transaction:error:handler:]EUb3_E4$_10EbPKN6health9DataStoreERKNS3_16ObjectIdentifierENT_7KeyTypeESA_PU15__autoreleasingP7NSErrorRKT0_EUlRKNS3_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_11ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_12EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS7_13SampleHistoryIS3_EEE_NS_9allocatorISR_EEFvSQ_EEE
NSt3__110__function6__funcIZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_11ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_12EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS7_13SampleHistoryIS3_EEE_clESQ_EUld27_HDRawQuantitySampleValueV1E_NS_9allocatorIST_EEFbRKdRKSS_EEE
ZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_11ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_12EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS4_13SampleHistoryIS0_EEE_clESN_EUld27_HDRawQuantitySampleValueV1E_
ZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_11ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_12EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS4_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_13ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_14EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS7_13SampleHistoryIS3_EEE_NS_9allocatorISR_EEFvSQ_EEE
NSt3__110__function6__funcIZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_13ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_14EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS7_13SampleHistoryIS3_EEE_clESQ_EUlddE_NS_9allocatorISS_EEFbRKdSW_EEE
ZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_13ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_14EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS4_13SampleHistoryIS0_EEE_clESN_EUlddE_
ZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_13ZZ85+[HDQuantitySampleSeriesEntity enumerateRawDataWithTransaction:HFDKey:error:handler:]EUb4_E4$_14EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS4_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZL38_getFirstTimeEndTimeCountWithDataStoreI29QuantitySampleValueBehaviorV0EbPKN6health9DataStoreERKNS5_16ObjectIdentifierEPdSB_PxPU15__autoreleasingP7NSErrorEUlRKNS5_13SampleHistoryIS3_EEE_NS_9allocatorISL_EEFvSK_EEE
ZL38_getFirstTimeEndTimeCountWithDataStoreI29QuantitySampleValueBehaviorV0EbPKN6health9DataStoreERKNS2_16ObjectIdentifierEPdS8_PxPU15__autoreleasingP7NSErrorEUlRKNS2_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZL26_deleteSeriesWithDataStoreI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreERKNS5_16ObjectIdentifierEPU15__autoreleasingP7NSErrorEUlRKT_E_NS_9allocatorISH_EEFbRNS5_16WriteTransactionEEEE
NSt3__110__function6__funcIZN6health9DataStore19deleteSampleHistoryI29QuantitySampleValueBehaviorV1EEvRKNS3_16ObjectIdentifierEEUlRNS3_16WriteTransactionEE_NS_9allocatorISB_EEFbSA_EEE
ZN6health9DataStore19deleteSampleHistoryI29QuantitySampleValueBehaviorV1EEvRKNS0_16ObjectIdentifierEEUlRNS0_16WriteTransactionEE_
ZL26_deleteSeriesWithDataStoreI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreERKNS2_16ObjectIdentifierEPU15__autoreleasingP7NSErrorEUlRKT_E_
NSt3__110__function6__funcIZL26_deleteSeriesWithDataStoreI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreERKNS5_16ObjectIdentifierEPU15__autoreleasingP7NSErrorEUlRKT_E_NS_9allocatorISH_EEFbRNS5_16WriteTransactionEEEE
NSt3__110__function6__funcIZN6health9DataStore19deleteSampleHistoryI29QuantitySampleValueBehaviorV0EEvRKNS3_16ObjectIdentifierEEUlRNS3_16WriteTransactionEE_NS_9allocatorISB_EEFbSA_EEE
ZN6health9DataStore19deleteSampleHistoryI29QuantitySampleValueBehaviorV0EEvRKNS0_16ObjectIdentifierEEUlRNS0_16WriteTransactionEE_
ZL26_deleteSeriesWithDataStoreI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreERKNS2_16ObjectIdentifierEPU15__autoreleasingP7NSErrorEUlRKT_E_
NSt3__110__function6__funcIZL26_removeDatumsWithDataStoreI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreERKNS5_16ObjectIdentifierEP7NSArrayIP6NSDateEPU15__autoreleasingP7NSErrorEUlRKT_E_NS_9allocatorISM_EEFbRNS5_16WriteTransactionEEEE
NSt3__110__function6__funcIZZL26_removeDatumsWithDataStoreI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreERKNS5_16ObjectIdentifierEP7NSArrayIP6NSDateEPU15__autoreleasingP7NSErrorENKUlRKT_E_clINS5_16WriteTransactionEEEbSL_EUlRNS5_20MutableSampleHistoryIS3_EEE_NS_9allocatorISS_EEFbSR_EEE
0123456789ABCDEF0123456789abcdefZZL26_removeDatumsWithDataStoreI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreERKNS2_16ObjectIdentifierEP7NSArrayIP6NSDateEPU15__autoreleasingP7NSErrorENKUlRKT_E_clINS2_16WriteTransactionEEEbSI_EUlRNS2_20MutableSampleHistoryIS0_EEE_
ZL26_removeDatumsWithDataStoreI29QuantitySampleValueBehaviorV1EbPN6health9DataStoreERKNS2_16ObjectIdentifierEP7NSArrayIP6NSDateEPU15__autoreleasingP7NSErrorEUlRKT_E_
NSt3__110__function6__funcIZL26_removeDatumsWithDataStoreI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreERKNS5_16ObjectIdentifierEP7NSArrayIP6NSDateEPU15__autoreleasingP7NSErrorEUlRKT_E_NS_9allocatorISM_EEFbRNS5_16WriteTransactionEEEE
NSt3__110__function6__funcIZZL26_removeDatumsWithDataStoreI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreERKNS5_16ObjectIdentifierEP7NSArrayIP6NSDateEPU15__autoreleasingP7NSErrorENKUlRKT_E_clINS5_16WriteTransactionEEEbSL_EUlRNS5_20MutableSampleHistoryIS3_EEE_NS_9allocatorISS_EEFbSR_EEE
ZZL26_removeDatumsWithDataStoreI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreERKNS2_16ObjectIdentifierEP7NSArrayIP6NSDateEPU15__autoreleasingP7NSErrorENKUlRKT_E_clINS2_16WriteTransactionEEEbSI_EUlRNS2_20MutableSampleHistoryIS0_EEE_
ZL26_removeDatumsWithDataStoreI29QuantitySampleValueBehaviorV0EbPN6health9DataStoreERKNS2_16ObjectIdentifierEP7NSArrayIP6NSDateEPU15__autoreleasingP7NSErrorEUlRKT_E_
NSt3__110__function6__funcIZZ67-[HDQuantitySampleSeriesEntity _hasV1SeriesDataWithDatabase:error:]EUb1_E3$_2NS_9allocatorIS2_EEFvRKN6health9DataStore15ReadTransactionEEEE
ZZ67-[HDQuantitySampleSeriesEntity _hasV1SeriesDataWithDatabase:error:]EUb1_E3$_2
NSt3__110__function6__funcIZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_16ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_17EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS7_13SampleHistoryIS3_EEE_NS_9allocatorISR_EEFvSQ_EEE
NSt3__110__function6__funcIZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_16ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_17EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS7_13SampleHistoryIS3_EEE_clESQ_EUld27_HDRawQuantitySampleValueV1E_NS_9allocatorIST_EEFbRKdRKSS_EEE
ZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_16ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_17EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS4_13SampleHistoryIS0_EEE_clESN_EUld27_HDRawQuantitySampleValueV1E_
ZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV1ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_16ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_17EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS4_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_18ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_19EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS7_13SampleHistoryIS3_EEE_NS_9allocatorISR_EEFvSQ_EEE
NSt3__110__function6__funcIZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_18ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_19EbPKN6health9DataStoreERKNS7_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS7_13SampleHistoryIS3_EEE_clESQ_EUlddE_NS_9allocatorISS_EEFbRKdSW_EEE
ZZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_18ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_19EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_ENKUlRKNS4_13SampleHistoryIS0_EEE_clESN_EUlddE_
ZL27_enumerateDataWithDataStoreI29QuantitySampleValueBehaviorV0ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_18ZZ87-[_HDQuantitySampleSeriesEntityEncoder codableRepresentationForPersistentID:row:error:]EUb6_E4$_19EbPKN6health9DataStoreERKNS4_16ObjectIdentifierEPU15__autoreleasingP7NSErrorRKT0_RKT1_EUlRKNS4_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZZ130-[_HDQuantitySampleSeriesEntityEncoder generateCodableRepresentationsForPersistentID:row:maxBytesPerRepresentation:error:handler:]EUb5_E4$_15NS_9allocatorIS2_EEFvRKN6health9DataStore15ReadTransactionEEEE
ZZ130-[_HDQuantitySampleSeriesEntityEncoder generateCodableRepresentationsForPersistentID:row:maxBytesPerRepresentation:error:handler:]EUb5_E4$_15
NSt3__110__function6__funcIZL33_generateCodableDataWithDataStoreI29QuantitySampleValueBehaviorV1U8__strongU13block_pointerF15HDHandlerStatusPU8__kindof9PBCodablelbPU15__autoreleasingP7NSErrorEEbPKN6health9DataStoreERKNSG_16ObjectIdentifierElP23HDCodableQuantitySampleSB_RKT0_EUlRKNSG_13SampleHistoryIS3_EEE_NS_9allocatorISV_EEFvSU_EEE
NSt3__110__function6__funcIZZL33_generateCodableDataWithDataStoreI29QuantitySampleValueBehaviorV1U8__strongU13block_pointerF15HDHandlerStatusPU8__kindof9PBCodablelbPU15__autoreleasingP7NSErrorEEbPKN6health9DataStoreERKNSG_16ObjectIdentifierElP23HDCodableQuantitySampleSB_RKT0_ENKUlRKNSG_13SampleHistoryIS3_EEE_clESU_EUld27_HDRawQuantitySampleValueV1E_NS_9allocatorISX_EEFbRKdRKSW_EEE
ZZL33_generateCodableDataWithDataStoreI29QuantitySampleValueBehaviorV1U8__strongU13block_pointerF15HDHandlerStatusPU8__kindof9PBCodablelbPU15__autoreleasingP7NSErrorEEbPKN6health9DataStoreERKNSD_16ObjectIdentifierElP23HDCodableQuantitySampleS8_RKT0_ENKUlRKNSD_13SampleHistoryIS0_EEE_clESR_EUld27_HDRawQuantitySampleValueV1E_
ZL33_generateCodableDataWithDataStoreI29QuantitySampleValueBehaviorV1U8__strongU13block_pointerF15HDHandlerStatusPU8__kindof9PBCodablelbPU15__autoreleasingP7NSErrorEEbPKN6health9DataStoreERKNSD_16ObjectIdentifierElP23HDCodableQuantitySampleS8_RKT0_EUlRKNSD_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZL33_generateCodableDataWithDataStoreI29QuantitySampleValueBehaviorV0U8__strongU13block_pointerF15HDHandlerStatusPU8__kindof9PBCodablelbPU15__autoreleasingP7NSErrorEEbPKN6health9DataStoreERKNSG_16ObjectIdentifierElP23HDCodableQuantitySampleSB_RKT0_EUlRKNSG_13SampleHistoryIS3_EEE_NS_9allocatorISV_EEFvSU_EEE
NSt3__110__function6__funcIZZL33_generateCodableDataWithDataStoreI29QuantitySampleValueBehaviorV0U8__strongU13block_pointerF15HDHandlerStatusPU8__kindof9PBCodablelbPU15__autoreleasingP7NSErrorEEbPKN6health9DataStoreERKNSG_16ObjectIdentifierElP23HDCodableQuantitySampleSB_RKT0_ENKUlRKNSG_13SampleHistoryIS3_EEE_clESU_EUlddE_NS_9allocatorISW_EEFbRKdS10_EEE
ZZL33_generateCodableDataWithDataStoreI29QuantitySampleValueBehaviorV0U8__strongU13block_pointerF15HDHandlerStatusPU8__kindof9PBCodablelbPU15__autoreleasingP7NSErrorEEbPKN6health9DataStoreERKNSD_16ObjectIdentifierElP23HDCodableQuantitySampleS8_RKT0_ENKUlRKNSD_13SampleHistoryIS0_EEE_clESR_EUlddE_
ZL33_generateCodableDataWithDataStoreI29QuantitySampleValueBehaviorV0U8__strongU13block_pointerF15HDHandlerStatusPU8__kindof9PBCodablelbPU15__autoreleasingP7NSErrorEEbPKN6health9DataStoreERKNSD_16ObjectIdentifierElP23HDCodableQuantitySampleS8_RKT0_EUlRKNSD_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZN6health23HDDemangleBacktraceLineENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_0NS6_IS9_EEFS8_NS_13match_resultsINS_11__wrap_iterIPKcEENS6_INS_9sub_matchISF_EEEEEEEEE
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_13match_resultsINS_11__wrap_iterIPKcEENS5_INS_9sub_matchISC_EEEEEEEEE
ZN6health23HDDemangleBacktraceLineENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE3$_0
N10statistics17RawQuantitySampleE
MbP?
Mb`?
xV42?
NSt3__120__shared_ptr_emplaceIN6health9DataStoreENS_9allocatorIS2_EEEE
xV42
?fffff
NSt3__110__function6__funcIZZ66-[HDQuantitySampleSeriesDataEnumerator _fillValueBufferWithError:]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6health9DataStore15ReadTransactionEEEE
ZZ66-[HDQuantitySampleSeriesDataEnumerator _fillValueBufferWithError:]EUb_E3$_0
NSt3__110__function6__funcIZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV1EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEEUlRKNS7_13SampleHistoryIS3_EEE_NS_9allocatorISE_EEFvSD_EEE
NSt3__110__function6__baseIFvRKN6health9DataStore13SampleHistoryI29QuantitySampleValueBehaviorV1EEEEE
NSt3__110__function6__funcIZZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV1EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEENKUlRKNS7_13SampleHistoryIS3_EEE_clESD_EUld27_HDRawQuantitySampleValueV1E_NS_9allocatorISG_EEFbRKdRKSF_EEE
ZZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV1EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEENKUlRKNS4_13SampleHistoryIS0_EEE_clESA_EUld27_HDRawQuantitySampleValueV1E_
NSt3__110__function6__funcIZZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV1EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEENKUlRKNS7_13SampleHistoryIS3_EEE_clESD_EUld27_HDRawQuantitySampleValueV1E0_NS_9allocatorISG_EEFbRKdRKSF_EEE
ZZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV1EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEENKUlRKNS4_13SampleHistoryIS0_EEE_clESA_EUld27_HDRawQuantitySampleValueV1E0_
ZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV1EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEEUlRKNS4_13SampleHistoryIS0_EEE_
NSt3__110__function6__funcIZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV0EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEEUlRKNS7_13SampleHistoryIS3_EEE_NS_9allocatorISE_EEFvSD_EEE
NSt3__110__function6__funcIZZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV0EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEENKUlRKNS7_13SampleHistoryIS3_EEE_clESD_EUlddE_NS_9allocatorISF_EEFbRKdSJ_EEE
ZZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV0EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEENKUlRKNS4_13SampleHistoryIS0_EEE_clESA_EUlddE_
NSt3__110__function6__funcIZZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV0EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEENKUlRKNS7_13SampleHistoryIS3_EEE_clESD_EUlddE0_NS_9allocatorISF_EEFbRKdSJ_EEE
ZZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV0EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEENKUlRKNS4_13SampleHistoryIS0_EEE_clESA_EUlddE0_
ZL31_HDFillValueBufferForEnumeratorI29QuantitySampleValueBehaviorV0EvP36HDQuantitySampleSeriesDataEnumeratorPKN6health9DataStoreEEUlRKNS4_13SampleHistoryIS0_EEE_
55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI20HDStatisticsDiscrete24HDStatisticsTimeIntervalEE
47_HDStatisticsCollectionCalculatorImplementation
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI20HDStatisticsDiscrete24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS4_S5_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS6_E_NS_9allocatorISK_EEFRKS5_SJ_EEE
NSt3__110__function6__baseIFRK24HDStatisticsTimeIntervalRK20HDStatisticsCombinedI20HDStatisticsDiscreteS2_EEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI20HDStatisticsDiscrete24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS1_S2_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS3_E_
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI20HDStatisticsDiscrete24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS4_S5_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS6_E0_NS_9allocatorISK_EEFRKS4_SJ_EEE
NSt3__110__function6__baseIFRK20HDStatisticsDiscreteRK20HDStatisticsCombinedIS2_24HDStatisticsTimeIntervalEEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI20HDStatisticsDiscrete24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS1_S2_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS3_E0_
55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsDiscreteE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsDiscreteE32_addStatisticsFromFinishedBucketIS3_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS3_E_NS_9allocatorISF_EEFSE_SE_EEE
NSt3__110__function6__baseIFRK20HDStatisticsDiscreteS4_EEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsDiscreteE32_addStatisticsFromFinishedBucketIS0_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS0_E_
55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI22HDStatisticsCumulative24HDStatisticsTimeIntervalEE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI22HDStatisticsCumulative24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS4_S5_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS6_E_NS_9allocatorISK_EEFRKS5_SJ_EEE
NSt3__110__function6__baseIFRK24HDStatisticsTimeIntervalRK20HDStatisticsCombinedI22HDStatisticsCumulativeS2_EEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI22HDStatisticsCumulative24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS1_S2_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS3_E_
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI22HDStatisticsCumulative24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS4_S5_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS6_E0_NS_9allocatorISK_EEFRKS4_SJ_EEE
NSt3__110__function6__baseIFRK22HDStatisticsCumulativeRK20HDStatisticsCombinedIS2_24HDStatisticsTimeIntervalEEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI22HDStatisticsCumulative24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS1_S2_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS3_E0_
55_HDConcreteStatisticsCollectionCalculatorImplementationI22HDStatisticsCumulativeE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI22HDStatisticsCumulativeE32_addStatisticsFromFinishedBucketIS3_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS3_E_NS_9allocatorISF_EEFSE_SE_EEE
NSt3__110__function6__baseIFRK22HDStatisticsCumulativeS4_EEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI22HDStatisticsCumulativeE32_addStatisticsFromFinishedBucketIS0_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS0_E_
55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersE24HDStatisticsTimeIntervalEE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersE24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS6_S7_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS8_E_NS_9allocatorISM_EEFRKS7_SL_EEE
NSt3__110__function6__baseIFRK24HDStatisticsTimeIntervalRK20HDStatisticsCombinedI42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersES2_EEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersE24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS3_S4_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS5_E_
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersE24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS6_S7_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS8_E0_NS_9allocatorISM_EEFRKS6_SL_EEE
NSt3__110__function6__baseIFRK42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersERK20HDStatisticsCombinedIS4_24HDStatisticsTimeIntervalEEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersE24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS3_S4_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS5_E0_
55_HDConcreteStatisticsCollectionCalculatorImplementationI42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersEE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersEE32_addStatisticsFromFinishedBucketIS5_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS5_E_NS_9allocatorISH_EEFSG_SG_EEE
NSt3__110__function6__baseIFRK42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersES6_EEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI42HDStatisticsTemporalBucketWeightedDiscreteI52HDStatisticsTemporalBucketWeightedDiscreteParametersEE32_addStatisticsFromFinishedBucketIS2_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS2_E_
55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersE24HDStatisticsTimeIntervalEE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersE24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS6_S7_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS8_E_NS_9allocatorISM_EEFRKS7_SL_EEE
NSt3__110__function6__baseIFRK24HDStatisticsTimeIntervalRK20HDStatisticsCombinedI38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersES2_EEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersE24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS3_S4_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS5_E_
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersE24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS6_S7_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS8_E0_NS_9allocatorISM_EEFRKS6_SL_EEE
NSt3__110__function6__baseIFRK38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersERK20HDStatisticsCombinedIS4_24HDStatisticsTimeIntervalEEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersE24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS3_S4_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS5_E0_
55_HDConcreteStatisticsCollectionCalculatorImplementationI38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersEE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersEE32_addStatisticsFromFinishedBucketIS5_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS5_E_NS_9allocatorISH_EEFSG_SG_EEE
NSt3__110__function6__baseIFRK38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersES6_EEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI38HDStatisticsTemporallyWeightedDiscreteI48HDStatisticsTemporallyWeightedDiscreteParametersEE32_addStatisticsFromFinishedBucketIS2_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS2_E_
55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI24HDStatisticsTimeIntervalS1_EE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI24HDStatisticsTimeIntervalS4_EE32_addStatisticsFromFinishedBucketIS4_S4_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS5_E_NS_9allocatorISJ_EEFRKS4_SI_EEE
NSt3__110__function6__baseIFRK24HDStatisticsTimeIntervalRK20HDStatisticsCombinedIS2_S2_EEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI24HDStatisticsTimeIntervalS1_EE32_addStatisticsFromFinishedBucketIS1_S1_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS2_E_
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI24HDStatisticsTimeIntervalS4_EE32_addStatisticsFromFinishedBucketIS4_S4_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS5_E0_NS_9allocatorISJ_EEFRKS4_SI_EEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI24HDStatisticsTimeIntervalS1_EE32_addStatisticsFromFinishedBucketIS1_S1_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS2_E0_
55_HDConcreteStatisticsCollectionCalculatorImplementationI24HDStatisticsTimeIntervalE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI24HDStatisticsTimeIntervalE32_addStatisticsFromFinishedBucketIS3_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS3_E_NS_9allocatorISF_EEFSE_SE_EEE
NSt3__110__function6__baseIFRK24HDStatisticsTimeIntervalS4_EEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI24HDStatisticsTimeIntervalE32_addStatisticsFromFinishedBucketIS0_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS0_E_
55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI22HDStatisticsNoiseLevel24HDStatisticsTimeIntervalEE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI22HDStatisticsNoiseLevel24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS4_S5_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS6_E_NS_9allocatorISK_EEFRKS5_SJ_EEE
NSt3__110__function6__baseIFRK24HDStatisticsTimeIntervalRK20HDStatisticsCombinedI22HDStatisticsNoiseLevelS2_EEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI22HDStatisticsNoiseLevel24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS1_S2_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS3_E_
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI22HDStatisticsNoiseLevel24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS4_S5_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS6_E0_NS_9allocatorISK_EEFRKS4_SJ_EEE
NSt3__110__function6__baseIFRK22HDStatisticsNoiseLevelRK20HDStatisticsCombinedIS2_24HDStatisticsTimeIntervalEEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI22HDStatisticsNoiseLevel24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS1_S2_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS3_E0_
55_HDConcreteStatisticsCollectionCalculatorImplementationI22HDStatisticsNoiseLevelE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI22HDStatisticsNoiseLevelE32_addStatisticsFromFinishedBucketIS3_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS3_E_NS_9allocatorISF_EEFSE_SE_EEE
NSt3__110__function6__baseIFRK22HDStatisticsNoiseLevelS4_EEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI22HDStatisticsNoiseLevelE32_addStatisticsFromFinishedBucketIS0_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS0_E_
55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI33HDStatisticsAverageSampleDuration24HDStatisticsTimeIntervalEE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI33HDStatisticsAverageSampleDuration24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS4_S5_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS6_E_NS_9allocatorISK_EEFRKS5_SJ_EEE
NSt3__110__function6__baseIFRK24HDStatisticsTimeIntervalRK20HDStatisticsCombinedI33HDStatisticsAverageSampleDurationS2_EEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI33HDStatisticsAverageSampleDuration24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS1_S2_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS3_E_
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI33HDStatisticsAverageSampleDuration24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS4_S5_EEvP12HKStatisticsRK18HDStatisticsBucketIS3_IT_T0_EEEUlRKS6_E0_NS_9allocatorISK_EEFRKS4_SJ_EEE
NSt3__110__function6__baseIFRK33HDStatisticsAverageSampleDurationRK20HDStatisticsCombinedIS2_24HDStatisticsTimeIntervalEEEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI20HDStatisticsCombinedI33HDStatisticsAverageSampleDuration24HDStatisticsTimeIntervalEE32_addStatisticsFromFinishedBucketIS1_S2_EEvP12HKStatisticsRK18HDStatisticsBucketIS0_IT_T0_EEEUlRKS3_E0_
55_HDConcreteStatisticsCollectionCalculatorImplementationI33HDStatisticsAverageSampleDurationE
NSt3__110__function6__funcIZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI33HDStatisticsAverageSampleDurationE32_addStatisticsFromFinishedBucketIS3_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS3_E_NS_9allocatorISF_EEFSE_SE_EEE
NSt3__110__function6__baseIFRK33HDStatisticsAverageSampleDurationS4_EEE
ZNK55_HDConcreteStatisticsCollectionCalculatorImplementationI33HDStatisticsAverageSampleDurationE32_addStatisticsFromFinishedBucketIS0_EEvP12HKStatisticsRK18HDStatisticsBucketIT_EEUlRKS0_E_
N10statistics16StatisticsEngineE
N6health21POSIXMappedFileExtentE
N6health16MappedFileExtentE
N6health9POSIXFileE
N6health11VirtualFileE
N6health15POSIXFilesystemE
N6health17VirtualFilesystemE
N6health24InMemoryMappedFileExtentE
N6health12InMemoryFileE
N6health18InMemoryFilesystemE
NSt3__120__shared_ptr_emplaceIN6health15POSIXFilesystemENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6health21POSIXMappedFileExtentENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6health9POSIXFileENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_6vectorIhNS_9allocatorIhEEEENS2_IS4_EEEE
NSt3__120__shared_ptr_emplaceIN6health24InMemoryMappedFileExtentENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6health12InMemoryFileENS_9allocatorIS2_EEEE
N10statistics8IntervalE
NSt3__110__function6__funcIZN6health9DataStoreC1ERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrINS2_17VirtualFilesystemEEEE3$_0NS7_ISF_EEFbRNS2_15BlockAccessFile16WriteTransactionEEEE
NSt3__110__function6__baseIFbRN6health15BlockAccessFile16WriteTransactionEEEE
ZN6health9DataStoreC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10shared_ptrINS_17VirtualFilesystemEEEE3$_0
NSt3__110__function6__funcIZNK6health9DataStore32performReadTransactionWithLambdaENS_8functionIFvRKNS3_15ReadTransactionEEEEE3$_1NS_9allocatorISA_EEFvRKNS2_15BlockAccessFile15ReadTransactionEEEE
NSt3__110__function6__baseIFvRKN6health15BlockAccessFile15ReadTransactionEEEE
NSt3__117bad_function_callE
ZNK6health9DataStore32performReadTransactionWithLambdaENSt3__18functionIFvRKNS0_15ReadTransactionEEEEE3$_1
NSt3__110__function6__funcIZN6health9DataStore33performWriteTransactionWithLambdaENS_8functionIFbRNS3_16WriteTransactionEEEEE3$_2NS_9allocatorIS9_EEFbRNS2_15BlockAccessFile16WriteTransactionEEEE
ZN6health9DataStore33performWriteTransactionWithLambdaENSt3__18functionIFbRNS0_16WriteTransactionEEEEE3$_2
NSt3__110__function6__funcIZNK6health9DataStore14checkIntegrityENS_8functionIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEE3$_3NS8_ISF_EEFbNS2_15BlockAccessFile14IntegrityErrorExxSC_EEE
NSt3__110__function6__baseIFbN6health15BlockAccessFile14IntegrityErrorExxRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
ZNK6health9DataStore14checkIntegrityENSt3__18functionIFvRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEEE3$_3
N6health18btree_access_errorE
NSt3__110__function6__funcIZNK6health9DataStore14checkIntegrityENS_8functionIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEE3$_4NS8_ISF_EEFvRKNS2_15BlockAccessFile15ReadTransactionEEEE
ZNK6health9DataStore14checkIntegrityENSt3__18functionIFvRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEEE3$_4
NSt3__110__function6__funcIZN6health9DataStore12rebuildIndexEvE3$_5NS_9allocatorIS4_EEFbRNS2_15BlockAccessFile16WriteTransactionEEEE
NSt3__110__function6__funcIZZN6health9DataStore12rebuildIndexEvENK3$_5clERNS2_15BlockAccessFile16WriteTransactionEEUlRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE_NSB_ISG_EEFvSF_EEE
ZZN6health9DataStore12rebuildIndexEvENK3$_5clERNS_15BlockAccessFile16WriteTransactionEEUlRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE_
ZN6health9DataStore12rebuildIndexEvE3$_5
ffffff
NSt3__110__function6__funcIZZ65-[HDDatabaseMigrator performHFDMigrationToVersion:handler:error:]EUb_E3$_0NS_9allocatorIS2_EEFbRN6health9DataStore16WriteTransactionEEEE
ZZ65-[HDDatabaseMigrator performHFDMigrationToVersion:handler:error:]EUb_E3$_0
ffffff
7o(?
aTR'
[0?/9
?^O
tv28J
'?g3
NSt3__110__function6__funcIZZ61-[HDDatabaseMigrator(Corry) _corry_rewriteHFDStep1WithError:]ENK3$_0clEPN6health9DataStoreEPU15__autoreleasingP7NSErrorEUlRT_E_NS_9allocatorISC_EEFbRNS4_16WriteTransactionEEEE
NSt3__110__function6__funcIZZZ61-[HDDatabaseMigrator(Corry) _corry_rewriteHFDStep1WithError:]ENK3$_0clEPN6health9DataStoreEPU15__autoreleasingP7NSErrorENKUlRT_E_clINS4_16WriteTransactionEEEbSB_EUlRKSA_E_NS_9allocatorISH_EEFvRKNS4_13SampleHistoryI25LocationHistoryBehaviorV1EEEEE
NSt3__110__function6__funcIZZZZ61-[HDDatabaseMigrator(Corry) _corry_rewriteHFDStep1WithError:]ENK3$_0clEPN6health9DataStoreEPU15__autoreleasingP7NSErrorENKUlRT_E_clINS4_16WriteTransactionEEEbSB_ENKUlRKSA_E_clINS4_13SampleHistoryI25LocationHistoryBehaviorV1EEEEDaSG_EUlSB_E_NS_9allocatorISN_EEFbRNS4_20MutableSampleHistoryISK_EEEEE
NSt3__110__function6__funcIZZZZZ61-[HDDatabaseMigrator(Corry) _corry_rewriteHFDStep1WithError:]ENK3$_0clEPN6health9DataStoreEPU15__autoreleasingP7NSErrorENKUlRT_E_clINS4_16WriteTransactionEEEbSB_ENKUlRKSA_E_clINS4_13SampleHistoryI25LocationHistoryBehaviorV1EEEEDaSG_ENKUlSB_E_clINS4_20MutableSampleHistoryISK_EEEEbSB_EUlSG_RKT0_E_NS_9allocatorISU_EEFbRKdRK21_HDRawLocationDatumV1EEE
ZZZZZ61-[HDDatabaseMigrator(Corry) _corry_rewriteHFDStep1WithError:]ENK3$_0clEPN6health9DataStoreEPU15__autoreleasingP7NSErrorENKUlRT_E_clINS1_16WriteTransactionEEEbS8_ENKUlRKS7_E_clINS1_13SampleHistoryI25LocationHistoryBehaviorV1EEEEDaSD_ENKUlS8_E_clINS1_20MutableSampleHistoryISH_EEEEbS8_EUlSD_RKT0_E_
ZZZZ61-[HDDatabaseMigrator(Corry) _corry_rewriteHFDStep1WithError:]ENK3$_0clEPN6health9DataStoreEPU15__autoreleasingP7NSErrorENKUlRT_E_clINS1_16WriteTransactionEEEbS8_ENKUlRKS7_E_clINS1_13SampleHistoryI25LocationHistoryBehaviorV1EEEEDaSD_EUlS8_E_
ZZZ61-[HDDatabaseMigrator(Corry) _corry_rewriteHFDStep1WithError:]ENK3$_0clEPN6health9DataStoreEPU15__autoreleasingP7NSErrorENKUlRT_E_clINS1_16WriteTransactionEEEbS8_EUlRKS7_E_
ZZ61-[HDDatabaseMigrator(Corry) _corry_rewriteHFDStep1WithError:]ENK3$_0clEPN6health9DataStoreEPU15__autoreleasingP7NSErrorEUlRT_E_
K@ffffff
%{public}@: Update progress.completedUnitCount = (%lld): %{public}@
Could not get keys/values out of cloud sync domain: %{public}@
Could not get date for key: %{public}@ from the cloud sync domain: %{public}@
Failed to get persisted oldest sample start date from key value store, Error %{public}@
Retrieving oldest sample start date %{public}@ on key-value store for profile: %{public}@
Setting oldest sample start date %{public}@ on key-value store for profile: %{public}@
Failed to persist oldest sample start date %{public}@ to key value store, Error %{public}@
Failed to retrieve cloud sync restore phase sync complete start date from key value store, Error: %{public}@
Setting cloud sync restore phase sync complete start date %{public}@ on key-value store for profile: %{public}@
Failed to persist cloud sync restore phase sync complete end date %{public}@ to key value store, Error: %{public}@
Failed to retrieve cloud sync restore phase sync complete end date from key value store, Error: %{public}@
Setting cloud sync restore phase sync complete end date %{public}@ on key-value store for profile: %{public}@
Failed to retrieve cloud sync restore merge complete end date from key value store, Error: %{public}@
Setting cloud sync restore phase merge complete end date %{public}@ on key-value store for profile: %{public}@
Failed to persist cloud sync restore phase merge complete end date %{public}@ to key value store, Error: %{public}@
Setting oldest sample date to nil.
Error fetching oldest sample date %{public}@
Failed to retrieve most recent tinker update date from key value store, Error: %{public}@
Failed to update most recent tinker update date from key value store, Error: %{public}@
%{public}@: Successfully finished collecting post-stop events pending for %{public}@
%{public}@: Failed to collect post-stop pending events for %{public}@, error: %{public}@
resume query %{public}@.
[routes] Will setup route data source: %{public}@, session: %{public}@
Couldn't link workout route data source to session %{public}@
[routes] Add elevation: %@ to elevation: %@
%{public}@: Failed to notify client of elevation update: %{public}@
%{public}@: Failed to notify client of route update: %{public}@
%{public}@: Failed to notify client of altitude update: %{public}@
[routes] Workout route will not be tracked because activity is not routeable for session %{public}@, workout configuration %@
[routes] Data destination requests data from route data source: %{public}@, data destination: %{public}@
%{public}@, Expected HDWorkoutBuilderServer as a direct data destination
[routes] Workout configuration updated to Indoor
Could not convert database to in-memory store. Unable to open in-memory database with result code : %d
Could not backup database on file into in-memory store with result code : %d
%{public}@: Invalid fileProtectionType "%{public}@"
Error %{public}@: [%d, %{public}@]
Could not execute SQL: %{public}@: [%d, %{public}s]
Cannot perform %@ transaction inside an existing %@ transaction
Transaction block failed without an error.
Caught exception while running an on-commit block: %@
Failed to roll back transaction: %{public}@
Caught exception while running an on-rollback block: %@
%{public}@ Attempt to execute SQL within a commit or rollback block
Failed to validate foreign keys: %{public}@
Failed to retrieve schema for '%{public}@': %{public}@
Table '%{public}@' has no column %{public}@: %{public}@
Failed to retrieve base value for CACHE_SPILL when enabling incremental autovacuum: %{public}@
Failed to set %lld for CACHE_SPILL when enabling incremental autovacuum: %{public}@
Failed to reset base value for CACHE_SPILL when enabling incremental autovacuum: %{public}@
Constraint violation during statement step: %s [%d, %{public}s]
Step failed: %s: [%d, %s]
Failed to find schema version in record %{public}@: %{public}@
Failed to find underlying message in record %{public}@: %{public}@
Failed to decode codable sync anchor range map %{public}@: %{public}@
Invalid archive attempting to decode sync anchor range map: %{public}@
Failed to decode sync anchor range map: %@
Plugin bundle not found for process: %{public}@
Bundle extension point not found for process: %{public}@
%{public}@: Retrieved plugin bundle info (%{public}@)
%{public}@: Received unexpected state object %{public}@ (expected class %{public}@); resetting state.
%{public}@: Saved state has unexpected open series %{public}@ (expected class %{public}@); resetting state.
%{public}@: Freezing series %@, length %ld, with final datum %@
%{public}@: Ignoring failed persistence: %{public}@
%{public}@: new series %{public}@ overlaps with %{public}@
%{public}@: error checking for overlap with %{public}@: %{public}@
%{public}@: Skipping due to pipeline options.
Failed to create sync store with ID: %{public}@ error:%{public}@
Failed to compute sync store identifier: %{public}@
Unable to look up data provenance: %{public}@
Unable to look up derived flags: %{public}@
Unable to insert data provenance : %{public}@
Failed to decode object of type HKCoverageRecord with error %@
Unable to fetch research study bundle for source %@: %@
%{public}@ Encountered unexpected value %ld in table profile_authorization
Ignoring reset request because session uuids don't match: %{public}@ != %{public}@
Resetting fitness machine connection: %s connectionUUID: %@
Request to invalidate connection: %@, connection client: %@ with connection UUID: %@
Invalidating connection: %@, connection client: %@, connection UUID: %@
Not unpairing machine %@ because another workout is active with the same machine
(#w0) Connecting to fitness machine, reconnect=%{BOOL}d
(#w0) Marking MFA authenticated as it's not required
requireMFA = %{BOOL}d
(#w0) Connection status changed to %{public}@, finished: %{BOOL}d, error: %{public}@
%{public}@Received fitness machine characteristic %{public}@
Not handling enhanced FTMS as dependencies aren't satisfied
Detected that machine started on %@
Notifying workouts that we've been running since %{public}@
(#w0) Disconnecting from fitness machine
Resetting fitness machine connection: %s
Re-attempting disconnect
Re-attempting connect
Data transfer permitted (MFA not required). Allowing reconnect.
Not sending connection success -- Not all connection requirements are complete. dataTransferPermitted=%{BOOL}d, waitingOnBluetoothConnection=%{BOOL}d, waitingOnActivityType=%{BOOL}d
Ignoring reset request because there is no session.
Ignoring reset request because a reset is already in progress.
Resetting Fitness Machine Manager
Delivering final Eurotas values and disconnecting
(#w0) Fitness machine manager recovering from crash
Fitness machine information updated %@
Fitness machine state changed from %{public}@ to %{public}@
Fitness machine connection state changed from %{public}@ to %{public}@, error %{public}@ in sessionID %{public}@
MFA authentication failed: %{public}@
(#w0) Fitness machine connection failed with error %{public}@
Marking MFA successful
Machine has been paused for too long. Disconnecting.
Machine has been connected for too long without receiving a start event. Disconnecting.
Failed to successfully disconnect from bluetooth within the allotted time
Failed to successfully connect within the allotted time. Cleaning up.
(#w0) Failed to complete MFA within allotted time. Cleaning up.
Error registering client connection: %@ client: %@, connection UUID: %@, error: %{public}@
Registering client connection: %@, client: %@ for connection UUID %@
(#w0) Pairing Failed: %{public}@
NFC Enabled State Change %{BOOL}d
Characteristic is unimplemented for machine type %{public}@
%{public}@: Found existing zone %{public}@ in primary container %{public}@; ready for sharing.
%{public}@: No existing zones found in primary contaienr %{public}@; creating master zone.
%{public}@: Successfully created master zone for sharing preparation.
%{public}@: Failed to create master zone for sharing preparation: %{public}@
Failed to decode object of type HKDiagnosticTestReport with error %@
%@: %@
Starting device information timer with duration: %lld
%@: Timeout fired, %lu properties left of %lu
Reading device information characteristic %{public}@ (%{public}@)
Error updating value for peripheral: %@ characteristic: %@; %{public}@
Failed to look up source for bundle identifier '%@' when reseting object authorization: %{public}@
Failed to reset status for %{public}@ (authorization entity failure: %{public}@)
Failed to reset status for %{public}@ (local source failure: %{public}@)
Failed to reset status for %{public}@ (object authorization records failure: %{public}@)
%{public}@: No zone found for store %{public}@; creating zone %{public}@
%{public}@: Successfully created zone for store: %{public}@
%{public}@: Failed to create zone for store: %{public}@: %{public}@
Failed to validate store record after creation: %{public}@
%{public}@: Replace persisted anchors for store %{public}@ with (%{public}@) %{public}@
%{public}@: Failed to lookup owner identifier for %{public}@
%{public}@: error estimating (for progress reporting) sync entity classes with changes to sync: %{public}@
%{public}@: Failed to validate change record archive (enumerated %lld entries): %{public}@
%{public}@: Failed to validate store record after creation: %{public}@
%{public}@: Failed to compute archive file size: %{public}@
%{public}@: Change size %{public}@ does not match computed file size: %llu
%{public}@: Update sequence record's frozen sync anchors with %{public}@
%{public}@: Set sequence record's initial frozen sync anchors with %{public}@
%{public}@: Failed to replace frozen anchor map during change record finalization: %{public}@
%{public}@: %{public}@: assetSize: (%llu), anchorRangeMap: %{public}@
%{public}@: %{public}@: Uploading changeset record to CloudKit
%{public}@: isFinalUpload
%{public}@: Container not found for container ID: %{public}@
%{public}@: save:%{public}@, delete:%{public}@ container:%{public}@
%{public}@: Successfully uploaded changes
%{public}@: Failed to upload changes: %{public}@
%{public}@: Update persisted state for %{public}@ with successful sync date %{public}@
%{public}@: Failed to record sync completion date: %{public}@
%{public}@: Failed to retrieve persisted sync store state for recording completion date: %{public}@
%{public}@: Sync session %{public}@ failed during upload: %{public}@
Unable to determine value for %{public}@: %{public}@.
Failed to update %{public}@: %{public}@.
%{public}@: Recording push operation forward progress
Failed to record push operation forward progress: %{public}@.
%{public}@: Beginning sync session: %{public}@
cloud-sync-push-session
%{public}@: %{public}@: Archiving changes for sync entities (%{public}@)
%{public}@: %{public}@: total: (%llu), assetSize: (%llu), data.length: (%lu), entities (%{public}@)
%{public}@: %{public}@: Estimated asset data size (%llu) is over threshold hard limit (%ld), and needs to be uploaded
%{public}@: %{public}@: Estimated asset data size (%llu) is over threshold (%ld), and needs to be uploaded
%{public}@: didEndTransaction called for session: %{public}@
success=%{BOOL}d, %{public}@
%{public}@: Finished session: %{public}@
%{public}@: Sync session %{public}@ failed: %{public}@
Bad oob data: %@
%{public}@: Deleting %ld zones in %{public}@: %{public}@
%{public}@: Failed to delete zones in %{public}@: %{public}@
%{public}@: Deleted %ld zones in %{public}@
%{public}@: Failed to update expected sync anchors for %{public}@: %{public}@
%{public}@: Failed to update frozen sync anchors for %{public}@: %{public}@
Unable to delete source/samples for journaled source UUIDs %{public}@: %{public}@
%{public}@: Run requested with delay %lf, but next fire date is in  %lf, no need to re-register.
%{public}@: Requesting run with delay %lf
%{public}@ Checked in for gated scheduling
%{public}@ fired with activity %{public}@, but we're not currently waiting on a trigger.
%{public}@: Failed to update completion state.
%{public}@ fired with activity %{public}@
%{public}@: Finished activity successfully.
%{public}@: Failed to perform activity: %{public}@.
%{public}@: Requesting activity deferral.
%{public}@: Failed to defer activity.
%{public}@: Handler requested activity deferral but activity should not be deferred; failing activity.
%{public}@: Failed to lookup share owner participant upon profile awake from disk; assuming it is set for this launch.
%{public}@: No share owner participant set after launch for this Tinker profile. Triggering deletion.
Error deleting Tinker profile %{public}@, error: %{public}@ (#t0)
Failed to decode object of type HKMedicationDispenseRecord with error %@
%{public}@: Total activation delay: %.3fs, database access delay: %.3fs
server=%{public}@
query-run
Ignoring attempt to start duplicate query server of class %{public}@ for UUID %{public}@
Ignoring attempt to start query server of class %{public}@ for UUID %{public}@: process %@ (%d) has no bundle identifier
Registering query server %{public}@
Unregistering query server %{public}@
Failed to finish client state transition in time for process "%@" (%lu queries)
%{public}@ Medical ID on disk is non-nil but empty, returning nil to the client in this case
Failed to get date of birth for Medical ID: %{public}@
Failed to get blood type for Medical ID: %{public}@
Failed to get height for Medical ID: %{public}@
Failed to get weight for Medical ID: {public}%@
%{public}@ Failed to migrate Medical ID before update, error: %{public}@
%{public}@ Failed to unarchive Medical ID fetched from disk, error: %{public}@
Migrated Medical ID data to version %li
Failed to save migrated Medical ID data: %{public}@
Failed to touch Medical ID sync anchor: %{public}@
%{public}@ Persisted MedicalID changes on device with success (%id), error (%{public}@)
%{public}@ Error saving sync anchor for medicalID %{public}@
%{public}@ Failed to save sync provenance during medicalID update, error: %{public}@
%{public}@ Error performing write transaction to update medicalID key value parameters %{public}@
Server failed to archive Medical ID data: %{public}@
Error writing Medical ID data file at %@, %{public}@
 %{public}@ Nano-sync triggered for a MedicalID update failed, error: %{public}@
 %{public}@ Cloudsync triggered for a MedicalID update failed, error: %{public}@
%{public}@: Skipping cloud sync for medical ID update: %{public}@
Obliterating Medical ID with reason: %{public}@
Failed to decode Medical ID data: %{public}@
Could not synchronize Medical Id flag for watch
Set allowedToMessageSOSContacts for Medical ID on a Tinker device %{public}@
Migrated Medical ID from %{public}@ to %{public}@
Failed to migrate Medical ID before update: %{public}@
Failed to fetch MedicalID for daily analytics with error %{public}@
Submitted daily medical id analytic event
Failed to retrieve authorization status; ignoring added samples: %{public}@
Failed to retrieve client source: %{public}@:
%{public}@: Completed scheduled pending write operation.
%{public}@: Scheduled pending write operation failed with error: %{public}@
count=%ld
coalesced-write
%{public}@: Completed %ld pending writes in %0.3lfs.
%{publilc}@: Failed to refetch owner identifiers after target computation; assuming we need to refetch: %{public}@
Error on characteristic update for peripheral: %@ characteristic: %@; %{public}@
Error handling characteristic update for peripheral: %@ characteristic: %@; %{public}@
No characteristic class found for characteristic UUID: %@
Incorrect advertisement data for Fitness Machine Service %@
start session %{public}@ with start date: %{public}@, configuration: %@
%@ called on server that has already been started. Returning early.
start guiding
ending session with endReason=%@
returning fake heartrate for simulator
not using healthlite, returning no heartrate
%@ deactivate
(%@) error fetching client proxy: %@
%{public}@: failed to find source for UUID %{public}@
%{public}@: Failed to instantiate source: %{public}@
%{public}@: missing database source entity %lld
data protected by first unlock available
failed to initialize NanoSync after first unlock: %{public}@
post-unlock sync failed: %{public}@
%{public}@: Unable to clone assertion error: %{public}@
%@ Active tinker NR device %@, IDS device %@ (#t0)
%{public}@ Active tinker store %{public}@ (#t0)
failed to create persistent dictionary
%{public}@: Incoming message has sync protocol version %d, but we were only expecting %d. Adjusting expected version to %d
unable to find sync store for request from device %{public}@
unable to find sync store for response from device %{public}@
unable to find sync store for error from message %{public}@ to device %{public}@
resolved %{public}@ to %{public}@
IDS bug: active device isActive=NO %{public}@
unexpected active store %{public}@ after switch to device %{public}@
[sharing-setup] Created _activeTinkerSyncStore for new pairing request %{public}@ (#t0)
[sharing-setup] Unable to create sync store for request from device %{public}@ (#t0)
[sharing-setup] Unable to create sync store for response from device %{public}@ (#t0)
[sharing-setup] Unable to find sync store for error from message %{public}@ to device %{public}@ (#t0)
[sharing-setup] Created _activeTinkerSyncStore for new end to end Cloud Sync request %{public}@ (#t0)
[sharing-setup] Unable to create sync store for end to end Cloud Sync request from device %{public}@ (#t0)
[sharing-setup] Unable to create sync store for end to end Cloud Sync response from device %{public}@ (#t0)
[sharing-setup] Unable to find sync store for end to end Cloud Sync error from message %{public}@ to device %{public}@ (#t0)
received %{public}@ from %{public}@
%{public}@ %s %{public}@ to device %{public}@ error: %{public}@
multiple active sync stores for IDS devices: %@
got new active paired device %{public}@
will attempt restore for paired device %{public}@
Showing fitness app. Setting defaults and notifying Springboard.
resetting restore state to incomplete for paired device %{public}@, error: %{public}@
finished restore for paired device %{public}@
resetting sync store %{public}@
did pair notification
did unpair notification
did become active notification
failed to get switch index: %{public}@
current switch index %u is greater than %u
got index %u pairingID %@ and date %@ from getSwitchEventsFromIndex
inserted %lu activation samples for pairing ID %@
failed to insert watch activation samples: %{public}@
failed to get source for watch activation with pairing ID %{public}@: %{public}@
no source exists for watch activation with pairing ID %{public}@
failed to set switch index: %{public}@
PairedSync for device %{public}@ postponed until unlock
received restore message %{public}@ with unknown persistent pairing UUID %{public}@ (expected %{public}@)
%{public}@: failed to apply companion change: %{public}@
ignoring restore request %{public}@: %{public}@
aborting restore %{public}@ after message %{public}@: %{public}@
unhandled restore message %{public}@: %{public}@
obliterating in response to restore message %{public}@
%@ with response %{public}@ statusCode:%d seq:%lld
ignoring restore response %{public}@: %{public}@
aborted restore with message %{public}@: %{public}@
set local device source bundle identifier to "%{public}@" with message %{public}@
failed to set local device source bundle identifier: %{public}@
ignoring change request %{public}@: %{public}@
will not apply change request %{public}@: %{public}@
failed to apply request %{public}@ change %{public}@: %{public}@
failed to apply acknowledged anchors for request %{public}@: %{public}@
failed to get received anchors: %{public}@
timeout waiting for response to change request %{public}@
resetting anchors for failed change request %{public}@: %{public}@
failed to send Resend response %{public}@; will attempt to send at next unlock
ignoring change response %{public}@: %{public}@
Obliterating in response to request %{public}@
ignoring status response %{public}@: %{public}@
failed to apply received anchors: %{public}@
failed to sync immediately for reason "%{public}@": %{public}@
syncing immediately with reason "%@" options:'%@'
Finished sync (%@) in %lfs options='%@' success=%d error=%{public}@
performing proactive sync with %lu remaining device(s)
failed proactive sync for store %{public}@: %{public}@
skipping proactive sync for store %{public}@ for device "%{public}@"
forwarding speculative change set %{public}@ to %{public}@
error occurred during last-chance sync request: %{public}@
Received start workout app request %@
Start workout app request complete %@, error: %{public}@
Sending response to start app request %@
Received response to start workout app request %@, error: %{public}@
Ignoring response: no request identifier for %@
Ignoring response: no context for %@
Ignoring error: no request identifier
Ignoring error: no context for %@
Request to display companion user notification failed: %@
Received display notification request %@
Display notification request complete %@, error: %@
Received response to display notification request %@, error: %@
[sharing-setup] %{public}@ Will send Tinker opt in request %{public}@, syncStore %{public}@ (#t0)
[sharing-setup] %{public}@ Did receive Tinker opt in request from guardian %{public}@, active NR device ID %{public}@, active IDS device %{public}@ (#t0)
[sharing-setup] %{public}@ Preparing response to Tinker opt in request; error: %{public}@ (#t0)
[sharing-setup] %{public}@ Will send Tinker opt in response to request %{public}@ (#t0)
[sharing-setup] Apple Watch is locked, sending setup error to guardian (#t0)
[sharing-setup] Tinker opt in accepted for the previous %{public}lu requests. Sending answer to companion (#t0)
[sharing-setup] Tinker opt in declined for the previous %{public}lu requests. Sending answer to companion (#t0)
[sharing-setup] %{public}@ Did receive Tinker opt in response from watch %@, error: %@ (#t0)
[sharing-setup] Ignoring response: no request identifier for %@ (#t0)
[sharing-setup] Ignoring response: no context for %@ (#t0)
[sharing-setup] Error sending health sharing opt in request %{public}@ (#t0)
[sharing-setup] Guardian requesting health sharing with Tinker watch. (#t0)
[sharing-setup] Received health sharing request from guardian %{public}@, active NR device ID %{public}@, active IDS device %{public}@ (#t0)
[sharing-setup] Preparing response %{public}@ to Tinker pairing request; error: %{public}@ (#t0)
[sharing-setup] Sending response to Tinker pairing request %{public}@ (#t0)
%{public}@: Failed to take tinker setup accessibility assertion (#t0): %{public}@
[sharing-setup] Successfully finished health sharing set up process, sending response (#t0)
[sharing-setup] Failed health sharing set up process: %{public}@ (#t0)
[sharing-setup] Ensuring that sync is enabled locally. (#t0)
[sharing-setup] Updating profile name for local device. (#t0)
[sharing-setup] No first/last name present; not saving in local profile. (#t0)
[sharing-setup] Starting sharing setup with lookupInfo %{public}@ (#t0)
[sharing-setup] Share setup failed %{public}@ (#t0)
[sharing-setup] Set up shares in response to Tinker pairing request %{public}@ (#t0)
[sharing-setup] Encoding sharing setup metadata failed %{public}@ (#t0)
[sharing-setup] Sharing set up successful to %{public}@. Save guardian details for transparency alert (#t0)
[sharing-setup] Scheduling buddy flow transparency alert(#t0)
[sharing-setup] Subscribing to data upload requests (#t0)
[sharing-setup] Subscribing to data download available notifications (#t0)
[sharing-setup] Failed to purge sharing state cache with error: %{public}@ (#t0)
[sharing-setup] Set up transparency alert to fire after buddy flow (#t0)
[sharing-setup] %{public}@ Found user defaults, scheduling alert for %{public}@ (#t0)
[sharing-setup] %{public}@ Did not find any user defaults. Scheduling alert for %{public}@ (#t0)
[sharing-setup] Saving guardian info %{public}@, guardianParticipant %{public}@ (#t0)
[sharing-setup] Received health sharing response from tinker watch %@, error: %@ (#t0)
[sharing-setup] Error sending health sharing request %{public}@ (#t0)
[sharing-setup] %{public}@ Will send Tinker end to end Cloud Sync request %{public}@, syncStore %{public}@ (#t0)
[sharing-setup] %{public}@ Did receive Tinker end to end Cloud Sync request from guardian %{public}@, active NR device ID %{public}@, active IDS device %{public}@ (#t0)
[sharing-setup] %{public}@ Preparing response to Tinker end to end Cloud Sync request; error: %{public}@ (#t0)
[sharing-setup] %{public}@ Will send Tinker end to end Cloud Sync response to request %{public}@ (#t0)
[sharing-setup] %{public}@ Did receive Tinker end to end Cloud Sync response from watch %@, error: %@ (#t0)
[sharing-setup] Error sending Tinker end to end Cloud Sync request %{public}@ (#t0)
Requesting authorization from companion.
Authorization request complete with success: %d, error: %{public}@.
Post-authorization sync complete with success: %d, error: %{public}@.
Sending response to authorization request; host app is %@ and should prompt is %d; error: %{public}@
Failed to lookup name for bundle '%@': got a proxy, but didn't find a localizedName or localizedShortName.
Failed to lookup name for bundle '%@': failed to get an application proxy object from LSApplicationProxy.
Received response to authorization request; host app is %@ and should prompt is %d; error: %{public}@
Error sending authorization request: %{public}@
Received authorization complete from companion for request UUID: %@, but no request context was found; dropping
Received authorization error from companion for request UUID: %@; error: %{public}@
Received authorization complete from companion for request UUID: %@
No completion handler found for authorization complete message; dropping.
Attempting reset of sync anchors
%{public}@: Failed to reset sync anchors as requested after HFD rebuild step.
Reset of sync anchors completed
failed to get received anchors for outgoing change pull request: %{public}@
store %{public}@ remote system build version changed to %{public}@
store %{public}@ device name did change
failed to look up source for %{public}@: %{public}@
updated device name to %@ for %@
failed to set device name for %{public}@: %{public}@
CoreDuet: Attempt to add new foregroundClientBundleIds: %@ 
 and remove previouslyForegroundBundleIds: %@
%{public}@: Unable to perform historical query: no workout builder server has been found yet.
%{public}@: Failed to send historical samples to client: %{public}@
%{public}@: Failed to complete historical fetch: %{public}@
%{public}@: Failed to send added samples to client: %{public}@
Error fetching %{public}@ column: %{public}@
%{public}@: present database corruption alert %{public}@
%{public}@: TTR alert: 'Tap-to-Radar' button pressed
Could not open Tap-to-Radar URL %{public}@
%{public}@: TTR alert: 'Not Now' button pressed
Application entered foreground: %@
Client does not have background run mode. Will not take process assertion
Taking background workout assertion for process %{public}@
Failed to acquire assertion for : %{public}@
Releasing background workout assertion for process %{public}@ (%d)
Taking CoreLocation in-use assertion for bundle %{public}@ (%d).
Releasing CoreLocation in-use assertion for bundle %{public}@ (%d)
Setting user characteristic for type %@
Updating activity move mode characteristic to %{public}@
Error updating user activity move mode characteristic: %{public}@
Error reading activity move mode characteristic for defaults update: %@
Activity Move Mode defaults value changed to %{public}@! Posting notification!
Updating changed user profile keys %{public}@
Error setting CoreMotion user profile: %{public}@
Error updating user characteristics values: %{public}@
Not updating quantity characteristic: kv row changed from %lld to %lld
Updating quantity characteristic for %@
Error updating user characteristics quantity: %{public}@
[%{public}@] Updating age gating due to significant time change.
%{public}@: Failed to find read authorization status for type: %{public}@
%{public}@: No client source bundle identifier while filtering samples
Marking health as in use: %{public}@
Migrating data collection setting (%@)
%{public}@: Nothing to delete.
%{public}@: Deleting %ld records in %{public}@: %{public}@
%{public}@: Ignored error deleting records in %{public}@: %{public}@
%{public}@: Failed to delete records in %{public}@: %{public}@
%{public}@: Deleted %ld records in %{public}@
HDBackgroundTask initialized with non-dictionary job. Returning nil.
Unable to create HDBackgroundTask from job %{public}s
Unable to retrieve client and task names from job name %{public}s
Invalid task; not delivering. Please file a Radar on PEP HealthKit. Client: %{public}@, Task: %{public}@ %{public}@
Task not satisfied, but delivering anyway. Client: %{public}@, Task: %{public}@ %{public}@
Attempting to report usage of non-sample type
Cannot update peripheral because identifier %@ does not match %@
Discovering services %@ on peripheral %@
No writable characteristic %@ discovered for %@
|>- peripheral:didModifyServices: %@, %@
|>- didReadRSSI: %@, error: %{public}@
|>- Peripheral services: %@, error: %{public}@
|>- didDiscoverCharacteristicsForService: %@, %@, error: %{public}@
|>- Device Name Characteristic: %@
|>- peripheral:didUpdateValueForCharacteristic: %@, %@, %@, error: %{public}@
|>- peripheral:didWriteValueForCharacteristic: %@, %@, error: %{public}@
%s: No health service found for serviceUUID: %@
|>- peripheral:didUpdateNotificationStateForCharacteristic: %@, %@, error: %{public}@
%{public}@ %{public}@ : %{public}@
%{public}@: Cloud Sync triggered, but is not permitted. %{public}@
%{public}@: start syncAllProfiles: %{public}@
 enableTelemetry=YES %{public}@
cloud-sync
%{public}@: finish syncAllProfiles: %{public}@
 enableTelemetry=YES %{public}@, success=%{BOOL}d
Scheduling cloud sync for profiles %{public}@: %{public}@
%{public}@: Beginning cloud reset for all profiles: %{public}@
Scheduling fetch of cloud description for all profiles with context %{public}@
%{public}@: Beginning fetch of cloud description for all profiles with context %{public}@
%{public}@: Fetching cloud sync status for all profiles.
%{public}@: Skipping persistence of error: %{public}@
%{public}@: Beginning disable-and-delete operation for cloud sync.
%{public}@: finish disableAndDeleteCloudSyncData: success (%{public}@), error (%{public}@)
Failed to disable cloud sync: %{public}@
Updated owner identifier after disabling cloud sync.
Failed to update owner differentiator after disabling cloud sync: %{public}@.
%{public}@: set enabled = %{public}@ for dataclass %{public}@
%{public}@: error %{public}@ trying to set enabled = %{public}@ for dataclass %{public}@
%{public}@: Cloud sync %s
%{public}@: Cloud sync triggered by account changes (iCloud login or health dataclass enabled)
Failed to decode persisted CK account info: %{public}@
Error getting server APS preferred push environment: %{public}@ (#t0)
Using APS push environment: %{public}@ (#t0)
%{public}@ Unknown subscription type %{public}@
Recieved CloudKit push notification for subscription with id: %{public}@ (#t0)
Push notification is low-priority, ignoring. (#t0)
%{public}@: Ignoring data upload request on ineligible device.
%{public}@: Ignoring data upload request; time since last request %lf is less than threshold %lf
%{public}@: Data upload requested; scheduling sync with maximum delay %lf.
%{public}@: Completed scheduled data upload.
%{public}@: Ignoring data download request on ineligible device.
%{public}@: Ignoring data download request; time since last request %lf is less than threshold %lf
%{public}@: Data download available; scheduling sync with maximum delay %lf.
%{public}@: Completed scheduled data download.
%{public}@: Ignoring data download on ineligible device.
%{public}@ No pending subscription syncs; not firing.
%{public}@ Starting subscription sync with options %{public}@
%{public}@ Finished subscription sync
%{public}@ Failed subscription sync with error: %{public}@
%{public}@ Error syncing after MedicalID on data available notification, error %{public}@
%{public}@ Successfully synced Medical ID on data available notification
Subscription notification registration complete or updated with public token "%@" on connection %p
Received per-topic push token "%@" for topic "%{public}@" identifier "%@" on connection %p
APS push recieved: %@ %@ (#t0)
Sync unavailable; setting up periodic activity with default values: %{public}@
%{public}@: Cloud sync unavailable, setting disabled periodic activity criteria: %{public}@
%{public}@: Cloud Sync Triggered to Perform Periodic Activity: %{public}@
%{public}@: Treating cloud sync error as success for periodic activity: %{public}@
Failed to determine whether to post new records notification with error %{public}@
%@ received updated summary: %@
%@ notifying client: %@
%@ ignoring summary because nothing changed
Creating new asset file %{public}@
Error setting F_NOCACHE on file at %{public}@ failed (%d): %{public}s
Error unlinking file at %{public}@ failed (%d): %{public}s
Unexpected join clauses for %{public}@: %{public}@
Not inserting association since object %{public}@ was previously deleted
Not inserting assocation from %{public}@ to %{public}@ because child source ID %lld is not in the allowable set of parent source IDs %{public}@
Not inserting association, unable to look up entity for object %{public}@ and pending associations are disabled.
Error applying %{public}@
%{public}@: No participants to check; nothing to do.
%{public}@: Successfully updated share records for %{public}@
%{public}@: Failed to update shares in %{public}@: %{public}@
%{public}@: Found invalid participant %{public}@, removing.
Failed to decode underlying Medical ID message.
%{public}@: %s: storeIdentifier = %{public}@, options = %{public}@
%{public}@: %{public}@: export static sync data to %{public}@
%{public}@: start performSyncSession: %{public}@
%{public}@: finshed performSyncSession: %{public}@
%{public}@: %{public}@: create archive %{public}@
%{public}@: %s: %{public}@
%{public}@: sendChanges for anchor ranges %{public}@
%{public}@: %s: %{public}@: success: %{public}@, error: %{public}@
%{public}@: %{public}@: extract archive %{public}@
%{public}@: %{public}@: ingest file %{public}@
%{public}@: cannot apply change %{public}@ because it is for an unknown (possibly future) sync entity.
failed to apply request change %{public}@: %{public}@
%{public}@: New connection from pid %d
%{public}@: Rejecting connection %{public}@: delegate is nil
%{public}@: Failed to create client for connection %{public}@: %{public}@
%{public}@: Rejecting connection from %{public}@: %{public}@
%{public}@: Connection to %{public}@ (%d) invalidated
%{public}@: Unexpected interruption on connection to %{public}@ (%d)
Failed to decode object of type HKClinicalRecord with error %@
%{public}@: Connection configured with session server: %{public}@
%{public}@: Failed to notify client of start date: %{public}@
%{public}@: Failed to notify client of state change: %{public}@
%{public}@: Failed to notify client of failure: %{public}@
%{public}@: Failed to notify client of generated events: %{public}@
%{public}@: Failed to notify client of workout configuration update: %{public}@
%{public}@:Updated workout configuration : %{public}@
Client "%{public}@" deleted source %{public}@
Client "%{public}@" failed to deleted source %{public}@: %{public}@
Failed to decode object of type HKAccountOwner with error %@
%{public}@: Verifying existence of zones: %{public}@
%{public}@: Creating zones: %{public}@
%{public}@ No unified zone exists for database %{public}@ in %{public}@
%{public}@ Beginning fetch Medical ID record operation for %{public}@ in %{public}@
%{public}@: %{public}@: Failed to fetch MedicalID in database %{public}@ with error %{public}@
%{public}@ No MedicalID record exists in the cloud for %{public}@ in %{public}@
%{public}@ Fetched multiple MedicalID records from the cloud. CKRecordIDs: %{public}@ 
%{public}@ CKRecord is invalid for recordID %{public}@, CKRecord: %{public}@
%{public}@ Failed to instantiate MedicalID record for CKRecord %{public}@, CKRecordID %{public}@ with error %{public}@
%{public}@: MedicalID Record is from the future, aborting MedicalID Sync %{public}@
%{public}@ Fetched MedicalID record from cloud %{public}@
Lost token data during migration, skipping token
Failed to decrypt access token data during migration: %{public}@
Failed to store access token to keychain during migration: %{public}@
Failed to decrypt refresh token data during migration: %{public}@
Failed to store refresh token to keychain during migration: %{public}@
Failed to delete credential key from keychain during migration: %{public}@
Skipping deletion from nonexistent table "%@"
%{public}@: Successfully updated share records
%{public}@: Failed to update shares: %{public}@
%{public}@: Failed to add registry record %{public}@ to %{public}@ after creation: %{public}@
%{public}@: %{public}@: Skipping, zone already contains this participant: %{public}@.
%{public}@: Ignoring candidate owner %{public}@ with default record name.
%{public}@: Found owner participant: %{public}@
%{public}@: %{public}@: Added participant: %{public}@
%{public}@: Found candidate participant: %{public}@
%{public}@: Found added participant: %{public}@ with share URL: %{public}@ and token: %{publicl}@
%{public}@: Failed to find a matching participant with pending status in the participants (%{public}@) for zone %{public}@
%{public}@ Failed to update sync status dates during daemon ready, error %{public}@
%{public}@: waitUUID %{public}@: start syncIfRestoreNotCompleted: date (%{public}@)
%{public}@: Calling cloudSync observer client didUpdateObserverWithSyncStatus: with status: %{public}@
%{public}@: Failed to call cloudSync observer client didUpdateObserverWithSyncStatus: with error: %{public}@
%{public}@: Calling cloudSync observer client syncDidStart with date: (%{public}@
%{public}@: Failed to call cloudSync observer client syncDidStart with error: %{public}@
%{public}@: waitUUID %{public}@: taskTree complete: status (%{public}@), error (%{public}@)
%{public}@: waitUUID %{public}@: syncCompletion already called
%{public}@: waitUUID %{public}@: syncCompletion called: result (%{public}id), error (%{public}@)
%{public}@: waitUUID %{public}@: active sync in progress, observe it
%{public}@: waitUUID %{public}@: start a sync and observe it
%{public}@: waitUUID %{public}@: call client startHandler
%{public}@: waitUUID %{public}@: observer block called: progress (%03.3f%%), status (%{public}@), error (%{public}@)
%{public}@: waitUUID %{public}@: stop observer: status (%{public}@), error (%{public}@)
%{public}@: syncIfRestoreNotCompleted triggered, but Health cloud sync is not enabled: %{public}@
%{public}@: Cloud sync restore was already completed on %{public}@.
%{public}@: wait for cloud sync journals to merge
%{public}@: Failed to merge cloud sync journals for profile %{public}@: %{public}@
%{public}@: Cloud sync restore was completed once successfully, we should not be restoring again.
%{public}@: Failed to read the cloud sync restore status: %{public}@.
%{public}@: Restore complete status not set.
%{public}@: Failed to read cloud sync error requiring user action: %{public}@
%{public}@: Failed to unarchive cloud sync error requiring user action: %{public}@
%{public}@: Saved subscription records (%{public}@)
%{public}@: Failed to save subscription records (%{public}@): %{public}@
Ignoring cloud sync record '%{public}@' because it is of unexpected type '%{public}@'
%{public}@: Error removing unit preferences: %{public}@
%{public}@: Received error when getting unit preferences for domain %{public}@: %{public}@
%{public}@: Error persisting unit preferences: %{public}@
%{public}@: Key string did not create HKQuantityType (%@)
%{public}@: Unable to parse integer from key string (%@)
%{public}@: Unit string (%@) not compatible with quantity type (%@)
%{public}@: Exception parsing unit string: %@
temporary SQL error reading identifiers: %{public}@
FATAL: database identifiers do not match (protected: %{public}@, unprotected: %{public}@)
Fatal: Found identifier %{public}@ in unprotected database when creating protected database
Inserting identifier %{public}@ in unprotected db
Failed inserting unprotected identifier %{public}@: %{public}@
Inserting identifier %{public}@ in protected db
Failed inserting protected identifier %{public}@: %{public}@
Failed to enable autovacuum for database '%{public}@': %{public}@
Created entities for '%{public}@' at version %ld
Detected attempt to rollback %s database (schema: %{public}@) from a newer build (Found version %ld but current version is %ld); failing migration.
Will migrate %s database from version %ld to %ld (build version %{public}@)
Will migrate %s database schema '%{public}@' from version %ld to %ld
Migration step indicated success but failed to increment the user version. This will be reported as a failure.
Finished %{public}@ database migration with success=YES, version %ld
Database migration returned success but failed to update user version to current version (expected %ld but final version is %ld)
Migrator returned %d for migration from %ld to %ld: %{public}@
Finished %s database migration with success=NO
%{public}@: Failed to perform during journal merge: %{public}@
Buffering metrics as a GymKit metrics observer is not yet ready
Calculating datum for aggregator of type %@, currentDatum %@, previousDatum %@
Datum for aggregator %@
Error calculating fitness machine sum for type %@
Fitness machine sum for type %@ for interval %@ is %@
A GymKit metrics observer is active. Delivering metrics.
[sharing-setup] %{public}@: Attempting to finish with no active request (success: %{BOOL}d, %{public}@)
[sharing-setup] %{public}@: Finish successfully, profile: %{public}@ (#t0)
[sharing-setup] %{public}@: Failed to successfully setup pairing: %{public}@ (#t0)
[sharing-setup] %{public}@: Completed profile teardown after pairing failure for %{public}@ (#t0)
[sharing-setup] %{public}@: Failed to tear down profile %{public}@ after pairing failure: %{public}@ (#t0)
[sharing-setup] %{public}@ Preparing to send message to Tinker watch (#t0)
[sharing-setup] %{public}@ Sharing Opt In timed out
[sharing-setup] %{public}@: Received setupHealthSharing call (#t0)
[sharing-setup] %{public}@ Sharing Setup timed out
[sharing-setup] %{public}@ Preparing to send message to Tinker watch for end to end Cloud Sync (#t0)
[sharing-setup] %{public}@ Did finish Gizmo Sync with success: %d, error: %{public}@ (#t0)
%{public}@: Unable to find profile for end-to-end sync for device %{public}@
[sharing-setup] %{public}@ Performing Sync for local device (reason: end to end Cloud Sync) (#t0)
[sharing-setup] %{public}@ Did finish local device sync for end to end Cloud Sync with error: %{public}@ (#t0)
[sharing-setup] %{public}@ %{public}@ called (#t0)
[sharing-setup] %{public}@ Guardian participant is nil (#t0)
[sharing-setup] %{public}@: Error %@ removing alerts
[sharing-setup] %{public}@ %{public}@ called with NR UUID %{public}@ (#t0)
%{public}@ %{public}@ Health sharing pairing agent must be intialized with primary profile health store.
[sharing-setup] %{public}@ Profile %{public}@ associated with NRDeviceUUID:%{public}@ is primary profile. Abort sharing tear down flow (#t0)
[sharing-setup] %{public}@ Sharing Tear Down timed out
[sharing-setup] %{public}@ Unable to find secondary profile associated with NRDeviceUUID: %{public}@ (#t0)
[sharing-setup] %{public}@ Failed to fetch participants from cloud zones, error: %{public}@
[sharing-setup] %{public}@ Failed to fetch persisted paired Guardian participant from key value store, error: %{public}@
%{public}@ Failed to fetch participants from cloud zones, error: %{public}@
%{public}@ Failed to current Apple ID, error: %{public}@
[sharing-setup] %{public}@ Operation timed out
[sharing-setup] %{public}@: Failed to prepare for sharing during setup: %{public}@ (#t0)
[sharing-setup] %{public}@: Unable to fetch iCloud ID with error: %{public}@ (#t0)
[sharing-setup] %{public}@: Fetched icloud address for guardian: %{private}@ (#t0)
[sharing-setup] %{public}@ Tinker health sharing is disabled (#t0)
[sharing-setup] %{public}@ We received a response from the tinker watch but the request has timed out.(#t0)
[sharing-setup] %{public}@: Failed to decode share setup metadata: %{public}@
[sharing-setup] %{public}@: Profile %{public}@ deleted during iteration; skipping.
[sharing-setup] %{public}@: Profile %{public}@ is not actually a Tinker profile; skipping.
[sharing-setup] %{public}@: Failed to lookup owner participant at existing tinker profile %{public}@: %{public}@
%{public}@: Existing profile identifier has an owner (%{public}@) which does not match the incoming owner (%{public}@)
[sharing-setup] %{public}@ Accept shares with %{private}@ (#t0)
[sharing-setup] %{public}@ Profile name, DoB, DSID saved successfully (#t0)
[sharing-setup] %{public}@: Failed to associate profile (%{public}@) with NRDeviceUUID: (%{public}@) error: %{public}@ (#t0)
[sharing-setup] %{public}@ Device %{public}@ associated successfully with profile %{public}@ (#t0)
[sharing-setup] %{public}@ Configuring profile for share setup metadata (#t0)
[sharing-setup] %{public}@ Subscribing to data available notifications (#t0)
[sharing-setup] %{public}@: Failed to set up subscriptions: %{public}@ (#t0)
[sharing-setup] %{public}@: Failed to create profile %{public}@ with error: %{public}@ (#t0)
[sharing-setup] %{public}@ Error %{public}@ saving date of birth into profile %{public}@ (#t0)
[sharing-setup] %{public}@ Did not receive birthdate for user (#t0)
[sharing-setup] %{public}@ Error %{public}@ saving first %{public}@ and last %{public}@ name (#t0)
[sharing-setup] %{public}@ Error %{public}@ saving DSID %{public}@ (#t0)
Failed to create "%{public}@": %{public}@
Device is unsupported
Failed to register task server classes from provider %{public}@: %{public}@
*** OBLITERATING HEALTH DATA (%{public}@): %{public}@ (%ld)
Failed to find profile %{public}@ during obliteration
*** INVALIDATING PROFILES
*** OBLITERATING PROFILES
*** KILLING CLIENTS
*** EXITING
Terminating %lu clients in response to obliteration
Did terminate client %{public}@ in response to obliteration
Failed to terminate client %{public}@ in response to obliteration: %{public}@
Client termination timed out
Exiting%s: %{public}@
Received notifyd notification "%s"
Received distnoted notification "%@"
Ignoring LaunchServices notification for placeholder
%@ notification missing bundle identifiers
%{public}@: notify daemon ready for observer %{public}@ on queue %s
Notify (%lu) Daemon Ready Observers
count=%lu
cound=%lu
Notify Daemon Ready Observers
%{public}@: notify daemon activated for observer %{public}@ on queue %s
Notify (%lu) Daemon Activated Observers
Unable to enumerate %{public}@: %{public}@
Unable to determine file size for %{public}@: %{public}@
Current device source name update failed: %{public}@
Resetting privacy settings
Failed to synchronize %{public}@: %{public}@
Could not set up signal handler for %d
%{public}@ unknown data type code %ld
Failed to delete samples for deleted source identifiers (%@) and types (%@): %{public}@.
Failed to generate UUID from bundle identifier %{public}@
%{public}@: Error fetching primary Apple account
Found integrity issues in IDS message database: %{public}@.
Failed to check IDS message database integrity: %{public}@
Obliterating NanoSync persistent dictionary at "%{public}@": %{public}@
failed to create directory '%{public}@': %{public}@
Failed to look up existing schema version for IDS persistent database: %{public}@
failed to create schema: %{public}@
Failed to update schema version for IDS persistent database: %{public}@
Failed to create database for IDS persistent storage (%d): %{public}@
%{public}@: %{public}@
failed to re-create database
#IDSMessage (%lf) message='%@' deviceID:'%@' type=%d outgoing=%d request=%d length=%lld
#IDSMessage (%lf) request='%@' response='%@'
#IDSMessage (%lf) sent message='%@'
#IDSMessage (%lf) message='%@' error domain='%@' code=%ld
#IDSMessage (%lf) canceled message='%@'
Attempt to fix sync provenance failed due to a SQL constraint. Skipping migration step.
%{public}@: Repaired during init (updated keys: %{public}@)
Failed to decode frozen anchor map: %{public}@
Failed to encode updated frozen anchor map: %{public}@
Error creating address book in migrating emergency contacts to version %ld: %{public}@
Error occurred while decoding journal entry: %{public}@
Processed file size %lluK.
Failed to load journal entry (%d bytes at offset %lu); skipping.
Processed file size %luK.
Journal file could not be mapped: %d: %s
Ignoring version %u journal %{public}@
Unexpected journal version %u at path %@
Map load time: %0.2f, entries: %ld
Map load time: %0.2f, entries: %ld, error: %{public}@
Load time: %0.2f, entries: %ld
Load time: %0.2f, entries: %ld, error: %{public}@
Merge time: %0.2f
Failed to delete journal file %{public}@, error: %{public}@
Failed to get existing file size when writing to journal %{public}@: %{public}@
[%{public}@] No onboarding completions found
[%{public}@] No onboarding completion found
[%{public}@] Onboarding completion found with older version than current
[%{public}@] Onboarding completion found with unsupported country code
[%{public}@] Onboarding completion found with current version and supported country code
[%{public}@] Onboarding completion found with current version
[%{public}@] No onboarding completions meet the current requirements
[%{public}@] Onboarding completion found with supported country code
[%{public}@] Onboarding completion found
[%{public}@] Failed to fetch highest version of onboarding completed: %{public}@
[%{public}@] Failed to fetch lowest version of onboarding completed: %{public}@
[%{public}@] Can complete onboarding in any country code
[%{public}@] Country code %{public}@ is allowed
[%{public}@] Country code %{public}@ is NOT allowed
[%{public}@] Onboarded country code is supported.
[%{public}@] Non-zero onboarding completions but still not supported due to version mismatch or onboarded countries dropped support.
[%{public}@] Cannot save onboarding completion with disallowed country code
[%{public}@] Failed to set current onboarding version completed: %{public}@
[%{public}@] NanoSync completed after onboarding completed
[%{public}@] NanoSync failed after onboarding completed: %{public}@
[%{public}@] Failed to reset onboarding: %{public}@
[%{public}@] NanoSync completed after onboarding reset
[%{public}@] NanoSync failed after onboarding reset: %{public}@
[%{public}@] Notifying %@ observers of onboarding completion update
[%{public}@] Notifying %@ observers of paired device capability update
Error loading relationships for node %@: %@
Error loading attributes for %@: %@
%{public}@: did deactivate
%{public}@: changed state (%@) -> (%@)
%{public}@: Samples added while not accepting updates
%{public}@: skip samples added update because anchor %lld <= current anchor %lld
%{public}@: Failed to filter samples for authorization: %{public}@
%{public}@: samples added filter does not accept sample %@
%{public}@: samples added count %lu != updatedObjects count %lu
%{public}@: Pausing after accumulating samples
%{public}@: Running for initial results
%{public}@: encountered error calculating max rowid: %{public}@
%{public}@: Running for update
%{public}@: Suspended during enumeration
%{public}@: Encountered error enumerating update results: %{public}@
%{public}@: Client no longer authorized
%{public}@: Canceled during enumeration
%{public}@: Delivering %{public}@: %lu samples, %lu deleted objects (anchor:%llu clear-pending:%{BOOL}d deliver:%{BOOL}d)
%{public}@: Samples removed while not accepting updates
%{public}@: Failed to retrieve authorization status; ignoring removed samples: %{public}@
%{public}@: Encountered error while enumerating deleted objects: %{public}@
Database corruption detected: [%d, %{public}@]
Incompatible nested transaction context: %@
Failed to set transaction context: %{public}@
Failed to get database size for %@ : %{public}@
Unable to open database: [%d, %{public}@]
Failed to migrate database: %{public}@
Failed to migrate schema for protected database: %{public}@
Destroying both databases - fatal error while attaching protected database
Failed to run post-migration updates: %{public}@
%@ received database corruption errors from %ld migration attempts.
Unable to get schema version for database %{public}@: %{public}@
Report %{public}@ database migration failure %{public}@
Inserting identifier %{public}@ in user defaults
Failed to truncate the wal after a transaction requiring checkpointing: %{public}@
Error vacuuming %{public}@ database: %{public}@
Got content protection state change notification %{public}@ (%{public}@) -> %{public}@ (%{public}@).
Previous content protection state %{public}@ does not match observed content protection state %{public}@
Started protected data flush timer with deadline %{public}@
Notifying %lu observers of protected data availability change: %{public}s
Running %lu first unlock blocks
Taking accessibility assertion for owner identifier "%{public}@" with timeout %.3fs
Failed to pre-emptively check out database for accessibility assertion owner "%{public}@": %{public}@
Failed to pre-emptively open the HFD for accessibility assertion owner "%{public}@": %{public}@
Attempting to clone improper database accessibility assertion: %{public}@
Flushing protected data%{public}@
Finished post-journal merge cleanup.
Failed to perform post-journal merge cleanup: %{public}@
HFD data corruption detected: %{public}@
Requesting rebuild of the HFD
Moving aside corrupted HFD
Corrupted HFD archive successful
Failed to archive the current HFD - %{public}@
Scheduling nano sync anchor reset
Notifying %@ observer of journal merge completion for journal type %ld
Deleting Health databases in "%@": %@
Removing journal chapter at '%{public}@'
Error removing journal chapter at '%{public}@': %{public}@
Class: %@ must either conform to _HKBinarySample or implement creatWithCodable:
Caught exception while decoding %{public}@: %{public}@
Unable to create source URL with string %@
%@: Unable to create HKMedicalDateInterval from codable, error: %@
%@: Unable to create HDCodableMedicationDosage from codable
Unlocked since boot: %s, protected data available: %s
Postponing protected data migration
Database migration succeeded
Database migration failed: %{public}@
Failed to fetch MedicalID during database migration with error %{public}@
Will perform migration postponed for protected data availablility
Failed to decode object of type HKMedicationRecord with error %@
[%{public}@] In Bed: Bedtime date cannot be after wake up date! %{public}@ - %{public}@
Ignoring source order for invalid data type code %lld
Ignoring source order for unknown data type code %lld
Updating source order for type %@ sources (%@)
Failed to update source order for type %@: %{public}@.
Failed to lookup source order information for %lld
Failed to fetch ordered sources for type %@: %{public}@
Failed to update ordered source IDs for bundle identifier %{public}@: %{public}@
Will add ordered source %@ for type %@
Updating should schedule launches (%@)
Setting should schedule launches (%@)
Background task job %@ has fired!
Launching %@
Launched %@
Scheduling subscription %@ for launch
Not rescheduling: Job already scheduled to fire in %f vs our %f
Removing stale job.
Unscheduling subscription for %@
Not scheduling launches
Ignoring scheduling launches for unsupported type %ld
Failed to look up app subscriptions: %{public}@
Scheduling launches for %@
Scheduling launches for %lu
Scheduling launches for all data codes.
Setting next launch time for %@
Last Ack: %lld - Update Freq: %lld
Last Launch: %lld - Hyst: %lld
Next Launch: %lld - Now: %lld - Time Diff: %lld seconds
Adding code to pending type codes
Setting timer with interval %lld
Failed to look up source with bundle identifier "%{public}@": %{public}@
Source for bundle identifier "%{public}@" not found
Ignoring subscription for %{public}@ to %@
Failed to look up authorizations for bundle identifier "%{public}@": %{public}@
Timer fired, scheduling launches
Ignoring app subscription for unsupported type %ld
Ignoring app subscription request since %@ is already subscribed for %ld at freq %llu
Acking '%@' with '%@' to anchor %@ and ackTime %@.
Running first time launch for %@
Doing first launch for Antimony.
Adding bundle identifier %@ to pending bundle identifiers.
Doing first launch for %@.
Failed to update scheduled launch times: %{public}@
Failed to decode object of type HKProcedureRecord with error %@
failed to find provenance for provenance %{public}@: %{public}@
failed to externalize contributor for provenance %{public}@: %{public}@
Failed to get codable source for sourceID %{public}@: %{public}@
Failed to find device %{public}@: %{public}@
Failed to externalize contributor reference: %{public}@
[routes] Set up location observers
[routes] Workout-sample associations occurred, start smoothing if unlocked.
[routes] Will smooth sample %@
[routes] Error occurred in enumerator: %{public}@ %@
[routes] Activity app launched, is first launch, and is unlocked.
[routes] Protected data available and isFirstLaunch; Attempting to smooth unsmoothed routes.
[routes] Protected data available; location samples were possibly added while locked; check for workout route.
[routes] Did finish smoothing sample %{public}@
[routes] Successfully synced smoothed route
[routes] Failed to sync smoothed workout route with error: %{public}@
[routes] Failed to fetch locations for sample with UUID=%@: %{public}@
[routes] Workout route %{public}@ has 0 locations; delete it.
[routes] New smoothing task will run: %{public}@
[routes] Smoothing did fail for sample %{public}@ with error: %@
[routes] Couldn't smooth sample %{public}@ after %ld attempts on device %@, marking as v2. Error: %@
[routes] An error occurred with transaction while writing new series: %{public}@
[routes] Could not fetch local device source. %{public}@
[routes] Could not insert initial metadata for route %{public}@ %{public}@
[routes] Failed to associate route %{public}@ with workout %{public}@ %{public}@
[routes] Successfully smoothed %{public}@ -> %{public}@ for workout %{public}@
[routes] Error occurred while saving new series sample: %{public}@
[routes] Couldn't insert location data for series sample %{public}@: %{public}@
[routes] Couldn't freeze series %{public}@: %{public}@
[routes] Error deleting route sample %{public}@ with %lu location(s): %{public}@
[routes] Smoothing did timeout for sample %{public}@
Workout Sample saved. Attempting to smooth all unsmoothed location series samples.
%@ running in testing mode every %.llds, looking for assets in %@
mobileAssetTypeName is empty
No assets found for %@
Unable to load asset at URL %{public}@: %{public}@
No container app bundle found for client %{public}@
Failed to set mask interval for %{public}@ at workout end; will fall back on existing statistics: %{public}@
Failed to update statistics for %{public}@ at workout end; will fall back on existing statistics: %{public}@
Failed to create workout: %{public}@
Failed to unarchive %{public}@; unable to unarchive calculator for type %{public}@: %{public}@
Failed to archive statistics calculcator for type %{public}@
%{public}@: Verify anchor ranges for sequence %{public}@
%{public}@: Sequence Record %{public}@ sync anchor (%lld) less than local sync anchor (%lld) for sync entity %{public}@. Last upload to store %{public}@ must have failed
%{public}@: Sequence Record %{public}@ sync anchor (%lld) greater than local sync anchor (%lld) for sync entity %{public}@. Invalid state can be fixed with a forced ownership change
%{public}@: rebase required (%{public}@), rebase deadline of %{public}@ (trigger threshold is %0.1lfs, remaining interval is %0.1lfs)
%{public}@: Sequence has not yet been checked for validation; will validate sequence changes.
%{public}@: Time since last sequence check (%lf) is greater than the validation threshold (%lf); will validate the sequence changes.
%{public}@: rebase required but prohibited (%{public}@), child record count %llu
%{public}@: rebase required (%{public}@), child record count %llu
%{public}@: Failed to fetch record zone changes with error %{public}@
%{public}@: Fetched record zone changes
%{public}@: Error getting persisted state for store %{public}@: %{public}@
%{public}@: Update persisted state for %{public}@
%{public}@: syncStore %{public}@ could not persist state %{public}@: %{public}@
%{public}@: recordChangedBlock, record: %{public}@ cannot init change record %{public}@
%{public}@: Final ordered change record (%{public}@) is not final for sequence; rebase required to repair damage.
%{public}@: Checking for hole in %ld fetched records
%02d: [Record: %{public}@] %{public}@
%{public}@: ordered change record with nil or empty anchor range map found, this may indicate a hole in the sequence
%{public}@: hole found for %{public}@: %lld != %lld
Failed to register process missing a bundle identifier.
Registering observer %@ for process state changes for %@
Failed to unregister process, empty bundle identifier.
Unregistering observer %@ for process state changes for %@
Process %{public}@ is terminated but monitor reported pid %{public}d. Returning -1.
Failed to create an application state monitor for %@.
Created an application state monitor for bundle identifier %@.
Updating application state observer for processes: %@
Process %@ (%d) state changed %{public}@ -> %{public}@: suspended %ld -> %ld, foreground %ld -> %ld, terminated %ld
Unexpected sync identifier %@ (expected %@) for existing object %{public}@
%{public}@ failed to find existing object with UUID (%{public}@) during object merge
Failed to insert %lu objects, invalid provenance %{public}@
Failed to lookup data provenance for %@: %{public}@
Failed to find current max persistent ID to prepare for pending association realization: %{public}@
%{public}@: object %{public}@ failed with error: %{public}@
Failed to include entity %{public}@ when constructing messages for sync: %{public}@.
Failed to remove object with persistent id %{public}@ after failing subclasss insertion: %{public}@
sourceRevision not found. %{public}@
Expected device not found. %{public}@
Expected contributor not found. %{public}@
Error retrieving metadata: %{public}@
missing source for %{public}@: %{public}@
missing no device entity!
Missing source for %{public}@: %{public}@.
Inserting %ld objects for source: %@
Failed to apply for source: %@: %{public}@
missing collection source identifier during journal application
Missing source for %@: %{public}@.
Missing source for %{public}@, skipping: %{public}@
Deleting %ld objects for source: %@
%{public}@: Failed to aggregate with state %@: %{public}@
%{public}@: Persisted, consuming %ld datums with last datum: %@.
%{public}@: Failed to persist aggregated objects: %{public}@
Collector %{public}@ failed to return source for aggregator %{public}@
%{public}@: Incomplete aggregation (%ld remaining datums, %s open series); accumulating and will reconsider in %0.2lfs
collector=%{public}@, device=%{public}@, aggregationDate=%{public}@, mode=%ld
active-aggregation-for-collector
%{public}@: Failed to perform outer write transaction for aggregation and persistence: %{public}@
%{public}@: Reconsidering aggregation for old data.
%{public}@: Finished reconsidering with latency %0.2lfs.
%{public}@: Failed aggregation reconsideration after %0.2lfs: %{public}@
Rejecting sensor datum of unexpected class %{public}@ (expected %{public}@)
%{public}@: Finished save with latency %0.2lfs.
%{public}@: Save failed after %0.2lfs: %{public}@
%{public}@: Persisted objects with a nil last datum.
Delivering demo Activity Statistics
%{public}@: Failed to lookup device for ID %{public}@: %{public}@
Rejecting datum of unexpected quantity type %{private}@ (expected compatibility with %{public}@)
Calorimetry data collection disabled because defaults key '%{public}@' is %{public}@
Calorimetry data collection disabled because CM calorie push model is enabled.
%@: Unexpected type '%@' during difference calculation.
%{public}@: Completed initial historical fetch; beginning streaming.
%{public}@: Received datum %@, error: %{public}@.
Disconnecting service: %{public}@
Connecting service: %{public}@
Failed to decode object of type HKMedicationOrder with error %@
%{public}@: Accepting shares (%{public}@) with invitation tokens: %{public}@
%{public}@: %{public}@: Share metadata: %{public}@
%{public}@: %{public}@: Error retrieving share metadata: %{public}@
%{public}@: Found owner participant: %@
%{public}@: Beginning share acceptance with metadata: %{public}@
%{public}@: Failed to accept shares: %{public}@
%{public}@: Successfully accepted all shares
%{public}@: Accepted share: %{public}@
%{public}@: Failed to accept share metadata with %{public}@: %{public}@
'%@', rollbackDueToError failed: %@
Transaction was rolled back, last error: %@
Activity summary without start/end date: %@ from cache: %@ out of %ld caches: %@
Terminating request for collecting pending swim events as sessionId is nil
Starting swim workout event collector for sessionID %@
Stopping swim workout event collector for sessionID: %@
Setting initial reference swim data to %@
Processing swim data: %@
Ignoring swim data with mismatched session id. Swim data session id: %@ [self sessionID]: %@
Out-of-order CMSwimData segment events: %{public}@, %{public}@
Dropping zero-duration segment created from data: %{public}@ with start date: %{public}@ and end date: %{public}@
Adding workout segment event: %{public}@
Dropping zero-duration segment created with start date: %{public}@, end date: %{public}@ and fallback end date: %{public}@
Collection stopping: Adding workout segment event %{public}@
Out-of-order CMSwimData lap events: %{public}@, %{public}@
Adding workout lap event: %@
Error getting swim data for lap events: %{public}@
Exception creating demo workout: %@
Could not get data from file path: %{public}@
Could not serialize from JSON data at file path: %{public}@
Cannot associate workout route due to lack of frozen identifier
%{public}@:Updated workout configuration
%{public}@: Failed to filter objects for read authorization: %{public}@
[%{public}@] Unexpectedly unable to load onboarding completion: %{public}@
[%{public}@] Skipping invalid codable: %{public}@
Unable to create statement to look up workout events: %{public}@
Error retrieving workout events: %{public}@
Error handling heart rate measurement: %@
Type %d data of zero not saved.
Heart rate data not saved, no sensor contact.
Type %d preferred location: %d
Error handling heart rate body location: %@
*** performOperation, unsupported operation %@
%{public}@: Failed to acquire database accessibility assertion for cloud sync in repo: %{public}@, with error: %{public}@
%{public}@: Starting %ld-stage pipeline for %{public}@: %{public}@ with assertion: %{public}@
%{public}@: Finished computing configuration and beginning pipeline stages
%{public}@: Pipeline finished.
%{public}@: Pipeline failed: %{public}@.
%{public}@: Power assertion has expired.
%{public}@: Stage %ld: %{public}@: Starting...
%{public}@: Stage %ld: %{public}@: Finished successfully.
%{public}@: Stage %ld: %{public}@: Detected cloud sync disabled but pipeline is configured to continue anyway.
%{public}@: Stage %ld: %{public}@: Detected cloud sync disabled; disabling locally and failing pipeline.
%{public}@: Stage %ld: %{public}@: Finished with error: %{public}@
Attempting to take assertion already taken: %@
Assertion group: Updating assertions for current state %@
Assertion group: Already in state %@
Assertion group: Transitioning to state %@
Assertion group: No assertions for state %@
Eurotas timeout fired
%{public}@: Received updated accumulator statistics: %@
Not updating fitness machine because data producer is disconnected
%{public}@: Sending data to Fitness Machine: %@
Failed writing eurotas data: %@
Unable to construct predicate for filter: %{public}@
Unrecognized predicate operator type received: %lu
%{public}@: Primary container %{public}@ is not secure; skipping D2DE check.
%{public}@: Looking up account info to check for device-to-device encryption availability...
%{public}@: Failed to fetch account info while waiting on device-to-device encryption availability: %{public}@
%{public}@: Device-to-device encryption is available.
%{public}@: Device-to-device encryption not currently available; waiting for account update notification.
%{public}@: Received CKIdentityUpdateNotification
Received invalid value %@ of type %@
%@: Generating cache indices for today: %@, yesterday: %@
%{public}@: Setting up new query helper with indices today: (%ld) and yesterday: (%ld)
%{public}@: Error occurred, resetting query helper: %{public}@
%{public}@: Significant time change occurred, query helper has not been set up yet
%{public}@: Significant time change occurred, date change occurred. Re-querying
%{public}@: Significant time change occurred, no date change
Missing local source (%{public}@), device (%{public}@) id or contributor (%{public}@)
Failed to load data provenance default values: %{public}@
Failed to launch '%@' because it has been uninstalled.
Error launching '%@': %{public}@
Launched '%{public}@' for background updates
%{public}@ died with an active assertion.
Acquired first post-launch assertion for '%{public}@'
Failed to acquire post-launch assertion for '%{public}@'
Unable to get pid for %{public}@.
Assertion unexpectedly invalidated for '%{public}@'
Process assertion invalidation timer fired for '%{public}@'.
Ignoring attempt to set '%d' to lower anchor '%{public}@'
Expected anchor %{public}@ for %d, received %{public}@
All pending data types invalidated; invalidating assertion for '%{public}@'
Ignoring anchor call back as it is too old.
Invalidating assertions for '%{public}@'
Failed to look up series after freezing: %{public}@
Failed to archive %{public}@ when generating resume context for persisted data: %{public}@
Couldn't subtract units of type %{private}@ from units of type %{private}@
Minuend date %{private}@ must occur at the same time or before subtrahend date %{private}@
Sensor datum missing start date: %@
Sensor datum missing end date: %@
%{public}@: Aggregating %ld sensor datums produced %@
Failed to add datum to calculator during merge calculation for type %{public}@: %{public}@
%{public}@: Failed to notify client of state change to %ld with error: %{public}@
Couldn't recover series builder with error %{public}@
Couldn't create persistent entity for series builder with error %{public}@
Couldn't recover state for series builder with error %{public}@
%{public}@: Failed to persist state change with error: %{public}@
%{public}@: Failed to fetch series builer persistent entity: %{public}@
Couldn't discard invalidated series with error: %{public}@
Failed to create source %{public}@ with codable source %@
Deleting sources with UUIDs %{public}@ (%lu entities)
Error while checking if application %{public}@ has samples: %{public}@
Successfully deleted source without data for uninstalled application %{public}@
Failed to delete source without data for uninstalled application %{public}@: %{public}@
Updating name to "%@" for source %@
Failed to set name "%@" for source %@: %{public}@
Application uninstallation notification missing bundle identifiers
Failed to look up sources to delete for uninstalled applications: %{public}@
Application(s) uninstalled, deleted sources without data: %{public}@
%{public}@: Taken at %{public}@.
%{public}@: Invalidated.
Received XPC event error %d
%{public}@: Handling XPC event action %d for %llu
Unexpected XPC event action %d from %llu
Received XPC event reply from %llu
XPC event client %llu unsubscribed before replying to ping
XPC event client %llu replied with error: %s
XPC event client %llu replied with unexpected type %s
XPC event entitlement not found for %s:%llu
Registered XPC event subscriber %s:%llu
XPC event client %s:%llu is not entitled for subscription
Removed XPC event subscriber %llu
Published XPC event for %ld
Failed to publish XPC event for %ld with error: %d
%{public}@: Saving %ld repaired records in %{public}@:%{public}@
%{public}@: Repaired %{public}@
%{public}@: Failed to save repaired records in %{public}@:%{public}@: %{public}@
%{public}@: Successfully saved repaired records in %{public}@:%{public}@
Ignoring attempt to set '%lu' to lower anchor '%{public}@'
Failed to assert app extesnion: '%{public}@' since the app has been uninstalled.
Failed to assert app extension: '%{public}@' with error: %{public}@
Connected to app extension: '%{public}@'
Invalidating app extension assertion due to timeout for '%{public}@'
Updating app extension: '%{public}@' for data type code: '%{public}@'
Failed to connect to app extension: '%{public}@' with error: %{public}@
Updated app extension: '%{public}@' with data type code: %{public}@ and anchor: %{public}@
Failed to update app extension: '%{public}@' with error: %{public}@
%@ closing all open journal chapters
%@ for path:%@ loaded (%lu) journal chapter names with success:%{BOOL}d
_hasLoadedPersistedJournalNames
Finished processing journal chapters
%@ Closing journal chapter at index 0. Current open count is %ld
%@ next journal chapter is %@
%@: Will open %ld journal chapters
%@: Did open %ld journal chapters
Encountered journal index %ld in %{public}@; dropping changes
Error enumerating journal chapter /'%@/': %@
%{public}@ Completed fetching cloud sync status with success %{public}id, error %{public}@
%{public}@: Fetch cloud sync status
Calling query client with todayActivitySummary: %@
Not calling query client with todayActivitySummary: %@, same as _lastActivitySummary.
%{public}@: Computing operations for push with %ld included store identifiers: %{public}@
%{public}@: Sync options require separate tombstones but no tombstone sequence record exists. Creating it now.
%{public}@: Will push tombstone sequence.
%{public}@: Will push active sequence.
%{public}@: No current or active sequence; creating a new one and syncing.
%{public}@: Rebasing and pushing to new sequence record.
%{public}@: Pushing to existing incomplete sequence.
%{public}@: %{public}@ %{public}@
%{public}@: Transitioning collection type from %{public}@ -> %{public}@
%{public}@: Failed to decode datum resume context: %{public}@
%{public}@: CM database reset detected (Source ID %{public}@ -> %{public}@
%{public}@: Dropping value %lf covering unexpectedly long gap (%lfs from %{public}@ to %{public}@)
Received out-of-date-order samples %@, %@; creating instantaneous datum to account for adjustment.
%{public}@: Received %ld core motion datums
count=%ld, types=%{public}@
core-motion-data-unpack
%{public}@: Received invalid parameter error
%{public}@: Received error: %{public}@
%{public}@: Successfully migrated data collection context for %{public}@
%{public}@: Failed to migrate data collection context for %{public}@: %{public}@
%{public}@: Reached retry limit of %ld while attempting to begin streaming; will try again on next configuration change.
%{public}@: Failed to create a new data source; will not begin updates.
%{public}@: Beginning CM streaming with last datum %@ (current error count: %ld).
%{public}@: Received last sensor datum %@ from %{public}@
%{public}@: Resetting error count on configuration change.
%{public}@: Received updated configuration %{public}@ from %{public}@
%{public}@: Failed record fetch for change %{public}@: %{public}@
%{public}@: Finished record fetch for change %{public}@
%{public}@: Failed to fetch change asset: %@{public}
%{public}@: Persisting fetched change record %{public}@
%{public}@: change record instantiation failed: %{public}@
%{public}@: persisted %@ in %{public}@
cloud-sync-persist-asset
%{public}@: fetched asset data size (%lu)
%{public}@: persist asset archive
%{public}@: Change record has protocol version %ld, which is later than store protocol version %ld. Attempting pull and will re-ingest upon upgrade.
%{public}@: persist change set file %{public}@
%{public}@: Failed to unarchive changes: %{public}@
%{public}@: Error unarchiving change objects: %{public}@
%{public}@: Error applying sync changes to store %{public}@ with error %{public}@
Error during sync-archive extraction: %{public}@
Creating asset file %{public}@
%{public}@: Recording pull operation applied changes
Failed to record pull operation applied changes: %{public}@.
Failed to get value for %{public}@: %{public}@.
Failed to set value for %{public}@: %{public}@.
%{public}@: zip extraction failed: %{public}@
%{public}@: skip record due to multiple failures to extract archive: %{public}@
Failed to decode object of type HKAllergyRecord with error %@
Sample for source %{public}@ ignored - Not local device source or fitness machine source
Sample from local source ignored - Not connected to fitness machine
Sample for type %{public}@, end date %{public}@ and source %{public}@ ignored - Not from correct source. Machine preferred until %{public}@
Sample for type %{public}@ and source %{public}@ ignored - Not from correct source
%{public}@: (#w0) Requesting post-stop data aggregation for all collected types and pending events collection.
%{public}@: Successfully finished post-stop data aggregation.
%{public}@: Post-stop data aggregation failed: %{public}@.
Generating average METs for workout session: %{public}@
Failed retrieving METs for workout %{public}@ with error %{public}@
%{public}@: (#w0) Completed requests for post-stop data aggregation and event collection.
Received workout event %{public}@
Keep alive assertion not taken for client %{public}@
Error reading activity mode %{public}@
Failed to obliterate Medical ID: %{public}@
%{public}@: Test mode indicator URL: %{public}@
%{public}@: Updating test mode %{BOOL}d -> %{BOOL}d
%{public}@: Failed to enable testing mode: %{public}@
%{public}@: Failed to disable testing mode: %{public}@
%{public}@: Failed to retrieve owner identifier for %@: %{public}@
%{public}@: Considering finishing takeover for %ld owners:
%{public}@: %d. %@ (%@)
%{public}@: Unable to finish takeover; we have not pushed all relevant store identifiers.
%{public}@: Deleting %ld zones: %{public}@
%{public}@: Failed to delete zones to during takeover completion: %{public}@
%{public}@: Deleting %ld records: %{public}@
%{public}@: Failed to delete records to during takeover completion: %{public}@
Not persisting unexpected objects [%@] from sensor datum'%@': %{public}@
Failed to associate subsamples from heartbeat sequence sensor datum '%@': %{public}@
Update caches operation invoked
Rebuild caches operation invoked
Not saving today cache because not ready to save caches
Not saving yesterday cache because not ready to save cahces
Suppressing save because caches are the same (%ld).
Saved activity cache (%ld): %@
Error saving activity cache: %{public}@
Provenance nil, cannot store activity cache
Error fetching daily goal: %{public}@
Primed today's goal: %@
Primed yesterday's goal: %@
Loading activity move mode samples
Error loading activity move mode change sample for today: %{public}@
Error loading activity move mode change sample for yesterday: %{public}@
Updated today (%lld) and yesterday caches in %.3f seconds
Error fetching local source: %{public}@
Error enumarating activity cache: %{public}@
Failed to fetch wheelchair use: %{public}@
Wheelchair use characteristic is nil
Goals or move mode changed, updating caches
Samples (%{public}@) were removed, rebuilding caches
Forcing cache rebuild
Received significant time change
Day changed (%lld -> %lld), rebuilding caches
Time zone changed (%{public}@ -> %{public}@), rebuilding caches
Error deleting future activity caches: %{public}@
Adding Activity Cache Observer
Activity Cache Observer Added, Notifying with activity caches
Not alerting activity cache observers, _existingTodayActivityCache is nil
Alerting observers that Today Activity Cache Changed
Not alerting activity cache observers, _existingYesterdayActivityCache is nil
Alerting observers that Yesterday Activity Cache Changed
not alerting activity cache observers, heartRateSummary is nil
heart rate summary changed, is today = %{public}@, notifying observers: %{public}@
Error creating journal directory %{public}@: %{public}@
Appending %lu journal entries to %{public}@
Added %lu of %lu entries to %{public}@, error: %{public}@
Failed to flush data to %{public}@: %{public}@
%{public}@: Journal merge interruption requested on %s
Failed to enumerate URL during size computation: %{public}@ (%{public}@)
Failed to retrieve file type during size computation: %{public}@ (%{public}@)
Failed to retrieve file size during size computation: %{public}@ (%{public}@)
No journal chapter files to merge in %{public}@
Failed to acquire database accessibility assertion for journal merge: %{public}@
Failed to load sorted journal chapters: %{public}@
Could not get next journal chapter %{public}@
%@ journal merge for %{public}@ (%ld of %ld)
Used maximum retry attempts for %@
A transient error (%{public}@) was encountered processing %{public}@, error: %{public}@
A fatal error occurred while processing %{public}@, error: %{public}@
%{public}@ processing %{public}@ (%0.1lfkb), time: %.2f sec.
An error occurred while removing %{public}@: %{public}@
Journal merge transaction for %{public}@ (%{public}@) was interrupted%@
Merge transaction aborted for %{public}@; bailing out of journal merge: %{public}@
Creating new journal chapter %{public}@
Updating OBJECT_ANCHOR_8_2: %lld
_entityClass != Nil
Taking quiet mode assertion for workout
Releasing quiet mode assertion
%{public}@: failed to send current collection: %{public}@
%{public}@: failed to add codable representation for anchor %lld: %{public}@
%{public}@: failed to generate codable representation for sync: %{public}@
%{public}@: Failed to take database accessibility assertion during activity preparation: %{public}@
%{public}@: Registered XPC activity %{public}@ for periodic updates
%{public}@: %{public}@ starting
%{public}@: %{public}@ stopping
%@ Last submitted at %@
%@ Skipping submission: last attempt was too recent
Attempting to submit metric for %@
%@ Submission success: %{public}@, error: %{public}@
%{public}@: %{public}@ fired with activity %@
Stopping fitness daily action
Starting fitness daily action
ManagedConfiguration not available - not registering for settings changes
Failed to register for %@
%{public}@: Metric %08x submitted
%{public}@: Metric %08x submission failed
%{public}@: Failed differential privacy reporting: %{public}@
%{public}@: No metric container for database stats
%{public}@: Failed to compute database size
%{public}@: Database inaccessible while computing usage metric, will retry: %{public}@
%{public}@: Failed queries for usage metric, will retry: %{public}@
%{public}@: Failed to compute row count delta
Fitness daily collection is disabled, skipping
Fitness daily collection token is missing, skipping
Already reported for today
No metric container for fitness daily
No activity summary found: %@
No earliest calorie goal found: %{public}@
Error fetching brisk minutes: %{public}@
Error fetching stand hours: %{public}@
Missing start or end date for activity summary
Error querying sleep samples: %{public}@
No samples
No metric container for sleep alarm nightly
Error querying tacogram samples: %{public}@
Error querying atrial fibrillation samples: %{public}@
Error querying electrocardiogram samples: %{public}@
Error querying ActiveEnergyBurned samples: %{public}@
Failed to get CountAnalyzedTacogramsPast24Hours, error: %{public}@
Failed to reset CountAnalyzedTacogramsPast24Hours, error: %{public}@
Could not determine ECGAlgorithmVersion
Could not determine ECGUpdateVersionPhone
Could not determine ECGUpdateVersionWatch
Unable to retrieve countRecordedTachograms
Unable to retrieve countAnalyzedTachograms
Error getting ECGOnboardingCountryCode: %{public}@
Error getting IRNCountryCodeError: %{public}@
wasWatchWornPast24Hours could not be determined
Error getting electrocardiogramFirstOnboardedCompletedDate: %{public}@
No metric container for sleep alarm stats
Failed to unarchive workout event metadata for %lld: %{public}@
Failed to create codable workout event metadata for %lld
Attempted to delete the object with ID '%lld' which external sync already considers to be deleted
Failed to get deleted object provenance for original provenance %{public}@: %{public}@
Failed to insert deleted object with entity class %{public}@ after deleting an object of class %{public}@: %{public}@
Unable to find localSourceID for originalProvenanceID (%@), so we'll keep using the originalProvenanceID
Resetting all authorization records
Failed to reset all authorization settings: %{public}@
Reset authorization records for uninstalled application %@
Error resetting authorization records for uninstalled application %@: %{public}@
Failed to find source %{public}@ to update source order after authorization update: %{public}@
Failed to update source order while changing authorization status for %{public}@: %{public}@
Added authorization request %{public}@ to group for %{public}@. Request count: %ld
activating request group %@ (write: %@, read: %@)
prompting for authorization for "%@"
failed to determine authorization request status for "%{public}@": %{public}@
NOT prompting for authorization for "%@"
authorization request failed with error: %{public}@
authorization request finished successfully
Failed to look up bundle for "%{public}@": %{public}@
Beginning prompt session: %@
beginning authorization transaction for "%@" (%@)
cannot begin authorization transaction: %{public}@
Ending prompt session: %@
ending authorization transaction for "%@" (%@)
cannot end transaction "%@"
Beginning a new prompt session.
Timed out waiting on prompt transaction to begin.
Failed to look up source entity: %{public}@
%@: failed to determine query strategy
%{public}@: Error reading authorization statuses: %{public}@
%{public}@: Assertion %{public}@ already taken
%{public}@: Took assertion %{public}@
%{public}@: Cannot retake invalidated assertion %{public}@
%{public}@: Unexpected state for assertion %{public}@: %ld
%{public}@: Budget Consumption timer fired.
%{public}@: Released %{public}@
%{public}@: Released %{public}@ was not found
Failed to generate audio series: %{public}@
No source manager found on generator %{public}@ for profile %{public}@
Error creating watch source entity %{public}@
Error creating headphone device entity %{public}@
Unknown stop or pause procedure 0x%02x, returning unknown status.
HDFitnessMachineStatus ignoring fitness machine status op code 0x%02x, returning unknown status.
Failed to get badge for notification domain %@: %{public}@
%{public}@ Cloud MedicalID is the same as the MedicalID to be pushed. Completing push operation successfully
%{public}@ Beginning MedicalID record push to cloud for %{public}@ in %{public}@. %{public}@
%{public}@: %{public}@: Failed to push MedicalID in database %{public}@ with error %{public}@
%{public}@: Successfully pushed MedicalID.
Alert suppressor starting for workout client: %@
Starting an alert suppression again for app for which we were waiting to go to background: %@
Alert suppressor stopping for workout client: %@
Periodic alert suppression for workout client: %@
Activity alert suppression. Suspended: %@
Activity alert suppression. Terminated: %@
Activity alert suppression. Background: %@
Activity alert suppression. Resumed: %@
Activity alert suppression. Foreground: %@
Invalidating activity alert suppression after process %@ was suspended
Invalidating activity alert supression for wrong bundle identifier. received: %{public}@
[%{public}@] Session start
[%{public}@] Session abort
Error notifiying ECG Session client of contact detection: %{public}@
Error notifiying ECG Session client of session end: %{public}@
Error notifiying ECG Session client of ECBM end date: %{public}@
Failed to open destination store: %s
Failed to remove destination WAL while rewriting HFD: %{public}@
Failed to open destination store for writing series samples: %s
Ignoring file corruption error during attempt to rewrite HFD, all HFD data will be lost: %{public}@
Failed to migrate series with identifier %lld: %s
Unexpected failure to migrate series with identifier %lld
Semaphore timeout attempting to fetch current device ID for owner identifier calculation.
%{public}@: Copy database UUID %{public}@ to %{public}@
%{public}@: No database UUID present yet; healthd has not yet launched while the device is unlocked on this device. Create a cloud sync database identifier: %{public}@
%{public}@: ownership change required: %{public}@
%{public}@ Received %{public}@ due events: %@ (#t0)
%{public}@ Did not fire alert, error: %{public}@ (#t0)
%{public}@ Error removing events %{public}@ (#t0)
%{public}@ Not scheduling event %{public}@ (#t0)
User's already passed age limitations, not scheduling alert.
Could not fetch date of birth components from DB: %{public}@ (#t0)
Error scheduling birthdate transparency alert: %{public}@ (#t0)
Error reading sharing disabled date: %{public}@ (#t0)
Cannot start watch app when phone app is in background
Received unsupported start workout app message non-watch device.
Starting workout app %{public}@ on watch. configuration: %{public}@
Error launching watch app: %{public}@
Generating demo CDA documents for date: %@
Could not locate zip file containing CDA demo documents; aborting generation
Generation of demo CDA documents completed
%{public}@: Ignoring attempt to request keep-alive for invalide bundle identifier %{public}@
%{public}@: Taking assertion on processs %@ with different payload
%{public}@: Taking keep-alive assertion for %{public}@
%{public}@: %{public}@ has no active assertions.
%{public}@: %{public}@ is already running with pid %{public}d.
%{public}@: %{public}@ is already being launched.
%{public}@: Not attempting to launch %{public}@; does not require launch.
%{public}@: Attempting to launch %{public}@.
%{public}@: Failed to open: %{public}@
%{public}@: Not scheduling launch %{public}@; does not require launch.
%{public}@: Too many terminations; not rescheduling a launch.
%{public}@: Scheduling launch in %0.2lfs.
%{public}@: Invalidated keep-alive assertion for %{public}@
Do not remove analytics file '%{public}@' with modification date %{public}@
Removing analytics file '%{public}@'
Error removing analytics file at '%{public}@': %{public}@
%{public}@: Failed to retrieve persisted store UUIDs for daily analytics: %{public}@
%{public}@: Beginning description fetch for profile (%{public}@) %{public}@
%{public}@ Starting fetch cloud sync status task
%{public}@: Sync unavailable before setting a source share participant for profile %{public}@
%{public}@ Completed fetching cloud sync status task
%{public}@: %{public}@ Using primary cloud sync container identifier: %{public}@
Setting container identifiers. CloudKitSupportsDeviceToDeviceEncryption=%{BOOL}d, CKDeviceToDeviceEncryptionStatusSupportedByAccount=%{BOOL}d, internalSettingManateeEnabled=%{BOOL}d
%{public}@: accountInfo %{public}@
Failed to archive CKAccountInfo
Adding final progress update
%{public}@: Failed to take database accessibility assertion during sync preparation: %{public}@
%{public}@: Failed to archive cloud sync error requiring user action: %{public}@
%{public}@: Set cloud sync restore completion date: %{public}@
%{public}@: Failed to record cloud sync restore completion date: %{public}@.
%{public}@: Failed to check sync enablement status during backstop consideration: %{public}@
%{public}@: Cloud sync is not enabled; updating date but skipping backstop check.
%{public}@: Failed to get last backstop reconsideration date: %{public}@
%{public}@: Last backstop sync reconsideration was too recent, not syncing (%0.2lfs, %{public}@)
%{public}@: Failed to update last backstop reconsideration date: %{public}@
%{public}@: First backstop reconsideration; setting date and not syncing.
%{public}@: Failed to check last successful push date: %{public}@
%{public}@: Last successful push was too recent, not syncing (%0.2lfs, %{public}@)
%{public}@: Scheduling backstop sync; time since last successful push (%0.2lfs) is greater than threshold %0.2lfs
%{public}@: Unable to take database accessibility assertion.
%{public}@: Performing backstop sync.
%{public}@: Finished backstop sync successfully.
%{public}@: Backstop sync failed with error: %{public}@
%{public}@: Participant record has nil record name; ignoring invalid participant: %{public}@
%{public}@ Preparing for sharing (#t0)
%{public}@: Finished preparation for repository %{public}@
%{public}@: Failed preparation for repository %{public}@: %{public}@
%{public}@ Starting sharing setup (#t0)
%{public}@: Starting remove participants operation with participants %@ (#t0)
%{public}@: Starting fetch participants operation with participants (#t0)
%{public}@: Starting fetch owner participants operation with participants (#t0)
Failed to fetch records in database %{public}@ with error %{public}@
%{public}@: %{public}@: Fetched %ld records in database %{public}@
%{public}@: Limit exceeded fectching %ld records. Splitting record request in half and re-fetching.
%{public}@: Failed to decode registry record: %{public}@
%{public}@: Failed to create profile for sync circle identifier %{public}@: %{public}@
%{public}@: Created local profile for sync circle identifier %{public}@: %{public}@
%{public}@: Unable to fetch profile %{public}@ after creation.
%{public}@ Error %{public}@ saving first %{public}@ and last %{public}@ name (#t0)
%{public}@: Failed to delete profile %{public}@ after failing to set store owner participant.
%{public}@: Zone %{public}@ does not have a zone share during zone synchronization
%{public}@: Unable to find owner participant on share %{public}@
%{public}@: Stored owner participant: %{public}@
%{public}@: Failed to store owner participant: %{public}@
%{public}@: Deleting zones for lost manatee identity: %{public}@
%{public}@: Failed to delete zones for lost manatee identity: %{public}@
%{public}@: Successfully deleted %ld zones for which we have lost manatee identity.
%@ %{public}@ did start for device %{public}@
failed to send restore messages: %{public}@
sync session %{public}@ failed error: %{public}@
sync session %{public}@ complete
%@ %{public}@ was invalidated
sync restriction changed to %@
%{public}@: Skipping stale profile deletion due to pipeline options.
%{public}@: Ignoring zone %{public}@; sync circle identifier %{public}@ does not match expected sync circle %{public}@
%{public}@: Failed to find container for fetched zone: %{public}@
%{public}@: Ignoring zone %{public}@; zone scope %{public}@ does not match expected scope %{public}@ for this container
%{public}@: Ignoring zone %{public}@; owner %{public}@ does not match our expected zone owner name %{public}@
%{public}@: Completed filtering %ld -> %ld zones.
%{public}@: % 2d. %{public}@
%{public}@: Failed to call HKOntologyTaskServerClient clientRemote_conceptIndexManagerDidChangeState: with error: %{public}@
Enumerate %@ from anchor %lld
%{public}@: Adding layout observer for %{public}@
%{public}@: Removing layout observer for %{public}@
Attempt to open workouts failed with error: %@
Workouts successfully opened
%{public}@: didUpdateDisplayLayout for %{public}@, running: %{public}@, screenOn: %{public}@
%{public}@: Detected app (%{public}@) onscreen
%{public}@: Detected app (%{public}@) deactivated
Creating new profile of type %ld
%{public}@ Profile is nil for profileIdentifier: %{public}@
%{public}@ Found profiles with missing NRDevice UUID. Fetch share owner participant email address.
%{public}@ Error retrieving share owner participant for owner ID %{public}@, %{public}@
%{public}@ Timed out waiting for owner participant from CloudKit.
%{public}@ Error retrieving share owner participant for tinker profile %{public}@, %{public}@
%{public}@: failed to notify client of profile changes due to: %{public}@
Codable authorization request contains an invalid object type code (%ld) which will be ignored.
Failed to decode object of type HKUnknownRecord with error %@
Can't retrieve observer query anchor while db locked.
Unable to pull latest anchor for observer query: %{public}@
%{public}@: Failed to filter series for authorization: %{public}@
Started index operation with description '%@'
Failed index operation with description '%@', %ld samples processed, and error '%{public}@'
Completed index operation with description '%@' and %ld samples processed
Start with description '%@'
Start with description '%@' failed with error '%{public}@'
Start with description '%@' succeeded
Stop with description '%@'
Stop with description '%@' failed with error '%{public}@'
Stop with description '%@' succeeded
%{public}@: Successfully deleted sequence %{public}@
Failed to remove old sync anchors after finalizing new baseline: %{public}@
%{public}@: Failed to delete sequence %{public}@: %{public}@
%{public}@ Generate sync objects for MedicalID %@ with syncAnchorRange %{public}@ and newSyncAnchor %lld
Error reading syncProvenance, even though medical ID exists on disk %{public}@
%{public}@ Failed to save MedicalID with ignorable failure, SyncAnchor: %lld, Error: %{public}@, 
Failed to encode codable medical ID: %{public}@
Failed to decode codable medical ID: %{public}@
Failed to decode object of type HKDiagnosticTestResult with error %@
UNUserNotificationCenter request %@ error: %@
Posting notification: %{public}@
Error posting notification: %@
Received unsupported user notification message of type %ld.
Error getting badge for domain %{public}@: %{public}@
Setting badge to %@ for domain %@
Error setting badge to %{public}@ for domain %{public}@: %{public}@
Setting badge to %{public}@ for domain %{public}@
Setting application badge to %{public}@
Failed to post BadgesDidUpdateNotification
Failed to decode object of type HKSleepSchedule with error %@
%{public}@: last sensor dataum has not been set for %{public}@
%{public}@: merging configuration for record %{public}@
%{public}@: Enqueued
%{public}@: Started.
name=%{public}@
maintenance work operation
%{public}@: Stopped after %0.3lfs.
%{public}@: Cloud Sync Triggered by options: %{public}@ reason: %{public}@
%{public}@: Cloud Sync Data Upload Triggered for profileIdentifier: %{public}@
%{public}@ Requesting data refresh (#t0)
%{public}@: Couldn't notify GymKit metrics data source client of collected metrics with error: %{public}@
Failed to load plugins at "%{public}@": %{public}@
Error: failed to instantiate bundle "%{public}@"
Error: failed to load bundle "%{public}@": %{public}@
Error: failed to get principal class from bundle "%{public}@"
Loaded bundle "%{public}@"
Error: failed to load bundle "%{public}@": principal class %{public}@ doesn't conform to any of: %{public}@
Stopped query server %@
Failed to handle object authorization request: %{public}@
Failed to determine object authorization status: %{public}@
[%{public}@.%{public}s] Error fetching date of birth components: %{public}@
Updated statistics builders with %ld quantity samples and %ld non-quantity samples
Error priming statistics builder: %{public}@
Successfully primed previous activation log entry (%lld) %@
Error priming previous activation log entry: %{public}@
Error fetching ordered sources for %{public}@, defaulting to largest wins strategy: %{public}@
Added new samples to workout (%{public}@), rebuilding caches
[%{public}@] Received XPC alarm event with name: %{public}s date: %{time_t}ld
[%{public}@] Ignoring XPC alarm event with NULL event name
[%{public}@] notifying alarm %{public}@ of event: %{public}@
[%{public}@] no registered alarm for event: %{public}@
[%{public}@] adding alarm %{public}@
[%{public}@] removing alarm %{public}@
[%{public}@] scheduling event: %{public}@
[%{public}@] unscheduling event: %{public}@
%{public}@ Failed to fetch participant share status. Error: %{public}@
%{public}@ %{public}@
%{public}@ Received nil email address for fetched share participant %{public}@ with lookup info %{public}@
%{public}@ %{public}@ Called on tinker profile. Abort.
%{public}@ %{public}@ called for profile %{public}@
%{public}@ %{public}@ Must be called on primary profile participant manager. Abort.
%{public}@ %{public}@ Called for primary profile. Abort.
Failed to determine builder-associated series during post-journal-merge cleanup: %{public}@
Failed to enumerate workout routes requiring auto-freeze during post-journal-merge cleanup: %{public}@
Failed to freeze workout route %lld during post-journal-merge cleanup: %{public}@
Failed to find HFD Key when deleting object with persistent id %lld: %{public}@
Failed to remove sample history with HFD Key %{public}@: %{public}@
Failed to insert journaled location series data: %@ %{public}@
%{public}@: will perform post journal merge cleanup
Failed to enumerate quantity sample series requiring auto-freeze during post-journal-merge cleanup: %{public}@
%{public}@: will auto-freeze %lu unfrozen quantity sample series
Failed to freeze quantity sample series %lld during post-journal-merge cleanup: %{public}@
%{public}@: did successfully perform post journal merge cleanup in %f seconds
Cannot merge series data with frozen & final series
Non-final quantity sample %{public}@: type=%ld, count=%ld, frozen=%{BOOL}d, final=%{BOOL}d, datumsCount=%ld, sample=(%{public}@)
Non-final quantity sample generated %{public}@, value=%f, count=%lld, frozen=%{BOOL}d, final=%{BOOL}d, datumsCount=%lu, estimatedSize=%ld, maxSize=%ld
Unable to delete SQLite datbase at path %@
Error attempting delete of database: %@
Error setting encoding on graph database: %@
Error deleting nodes: %@
Error stamping datatbase with schema version %ld: %@
Validation: error reading database user version: %@
Validation: ontology database user version matches system schema version %ld.
Validation: found a database newer than we expected. Ignoring.
Validation: removing stale ontology database with schema version %ld
Validation: couldn't remove stale ontology database
Validation: error openning database after removing stale ontology database: %@
Error deleting relationships named %@: %@
Error retrieving nodes for attributes with key ID %lld and value %@: %@
Error retrieving node count for relationship %lld: %@
Error inserting relationship named %@: %@
Attempting to add relationship with missing relationship name. Aborting.
Attempting to add relationship with missing from node name. Aborting.
Attempting to add relationship with missing to node name. Aborting.
Error getting relationship ID: %@
Error adding subject node: %@
Error adding object node: %@
Error inserting new relationship from %@ to %@: %@
Error retrieving relationship ID: %@
Error inserting new relationship from %lld to %lld: %@
Error deleting relationships from node with name: %@: %@
Error deleting relationships from node with ID: %lld to node with name %@: %@
Error deleting all relationship: %@
Error retrieving relationship ID for key %@: %@
Error inserting new attribute key %@: %@
Error inserting new valueType %@: %@
Error retrieving rowid for ValueType %@: %@
Error retrieving key ID for key %@: %@
Error inserting value type while attempting to add attribute %lld to node %{public}lld
Error retrieving value type while attempting to add attribute %lld to node %{public}lld
Error adding attribute with ID %lld to node %{public}lld: %@
Error retrieving attributes for node with ID: %lld %@
Error retrieving attributes for node %lld: %@
Error deleting attributes from node %@ with key %@: %@
Error deleting attributes from node %@: %@
Error reading raw metadata for key '%@'. Error was: %@
Error beginning transaction: %@
Error %@ transaction: %@
Unable to create graph database tables
Error marking relationship as deleted: %@
Failed to fetch sample UUIDs for concept %{public}@.%{public}@: %@
%{public}@: Look for a local cloud sync store with owner: %{public}@, container: %{public}@
%{public}@: Event submitted: %{public}@
%{public}@: Event sent: %{public}@
%{public}@: Checked whether event is used: %{public}@
Collector %{public}@ failed to provide a source
Failed to produce objects from sensor datum %@ (%{public}@): %{public}@
Failed to persist %@ through %{public}@ from %{public}@: %{public}@
%{public}@: Requesting collection through %{public}@ from %{public}@
%{public}@: Finished collection through %{public}@ for %{public}@
%{public}@: Aggregator configuration changed from %{public}@ -> %{public}@
%{public}@: Registered %{public}@ with state %{public}@
%{public}@: Unregistered %{public}@
%{public}@: Collector %{public}@ changed state %{public}@ -> %{public}@
Failed to retrieve source entity for source '%{public}@' when creating a sample for aggregator '%{public}@': %{public}@
Failed to retrieve device entity for device '%{public}@' when creating a sample for aggregator '%{public}@': %{public}@
%{public}@: Persistence failed: %{public}@
%{public}@: Not yet starting collectors (_canStartCollectors = NO)
%{public}@: Unable to set _hasStartedCollectors (%{public}@); not starting
%{public}@: start collectors: %{public}@
%{public}@: Failed to retrieve existing context for collector '%{public}@': %{public}@:
%{public}@: *** Collector %{public}@ does not implement sensorDatumClassForAggregator:! Please implement to silence this warning. Assuming %{public}@.
%{public}@: Failed to decode sensor datum of class %{public}@ when starting %{public}@: %{public}@
%{public}@: Starting collector %{public}@ with last persisted datum: %@
%{public}@: wants collection for collector %{public}@ with configuration %{public}@
[%{public}@ %{public}s] Protected data not accessible. Adding observer.
[%{public}@ %{public}s] While fetching date of birth components, recieved error: %{public}@
[%{public}@ %{public}s] %{public}@ age gating enabled: %{public}d
[%{public}@] Updating age gating due to user characteristics change.
Unsupported journal entry %{public}@
%{public}@: encoding is not supported
%{public}@: Failed to set characteristic for type %ld, %{public}@
%{public}@ Failed to fetch local Medical ID during cloud sync with error %{public}@
Added content protection observer %{public}@
First unlock
Key bag transitioning from %{public}@ to %{public}@
Ignoring no-op keybag transition (%{public}@ -> %{public}@)
Failed to insert data objects: %{public}@
Discarding pending samples due to transaction rollback: %@
Failed to look up device %{public}@: %{public}@
Failed to update source order during insert: %{public}@
Failed to lookup source %@ during insert notification: %{public}@
Failed to get write transaction for setting up sample deletion commit hook: %{public}@.
%{public}@: added samples notifications (%ld): %ld added, %ld journaled in past %{public}@
Disabling all background delivery for '%@'
invalid update frequency %ld
Setting background delivery frequency of %lu for '%@' to %llu seconds
Disabling background delivery of %lu for '%@'
Failed to apply %{public}@: %{public}@
Unable to get authorization statuses: %{public}@
Failed to determine Health Records feature availability with error: %{public}@
Unable to get Health Records plugin
Enqueuing authorization request for %@
Client %@ is not %s authorized for data type(s) %@
Client %@ is not write authorized for data type(s).
Client %@ is not read authorized for data type(s).
Could not determine authorization status for types %@
Could not begin transaction: %{public}@
Ending transaction %{public}@
No active transaction to end (Ending %{public}@, but active is %{public}@)
%{public}@: Starting.
%{public}@: %{public}@ called in unexpected state %{public}@
%{public}@: Finished.
%{public}@: Failed but did not provide an error.
%{public}@: Failed with error: %{public}@.
Failed to retrieve authorization status for activity summary type: %{public}@
%{public}@: Saving %ld updated share records in %{public}@
%{public}@: Successfully updated share records in %{public}@
%{public}@: Failed to update share records in %{public}@: %{public}@
I don't know how to fake activity %d. Falling back to running.
Starting data faking with activity %d
[FAKE] generated samples: %@
%{public}@: activated successfully: %{BOOL}d, paused: %{BOOL}d
%{public}@: Ran in %.3fs (%.3fs in database transactions)
%{public}@: Ran in %.3fs
%{public}@: Sample authorization failed: %{public}@
%{public}@: Error determining authorization status: %{public}@
%{public}@: connection invalidated, deactivating
%{public}@: Ran in %.3fs for client %{public}@
Database transaction statistics: %@
Query: %{public}@
Query predicate: %{public}@
Data count: %lld
Error parsing int64_t into rowid
Error parsing string into value
Error inserting raw ontology value: %{public}@
Error parsing int64_t into nodeid
Error parsing int64_t into keyid
Error parsing int64_t into valueTypeID
Error parsing int64_t into rowID
Error parsing int64_t into subjectID
Error parsing int64_t into nameID
Error inserting raw ontology value: %@
Embedded testing ontology not found, falling back to default ontology creation
Error deleting outdated ontology database: %{public}@
Error copying embedded testing ontology: %{public}@
Import: unable to find source ontology asset URL. Bailing from ontology asset import.
Import: attempting to import reference ontology, but downloaded asset doesn't exist at %{public}@
Import: not importing ontology because the asset's content version %ld is not newer than the current ontology's asset version %ld. Asset URL: %@
Import: Encountered error while trying to remove previous ontology while trying to import new version of ontology at %{public}@
Importing reference ontology from URL '%@'
Import: non-fatal error attempting to turn off foreign keys before asset import
Import: skipping unrecognized file: %@
empty line
Import: error enumerating lines in entry %{public}@: %{public}@
Import: reference ontology import with asset version %@ complete. Parsed %@ lines
Import: error turning on foreign key constraints: %@
Import: error importing ontology with asset version %@: %{public}@
Error getting version from graph database: %@
Error getting user version from graph database: %@
Error creating ontology directory: %{public}@
Error copying embedded ontology for testing: %{public}@
Error initializing graph database from ontology file: %{public}@
Error resolving concept for context: %@, country: %@, error: %@
Error associating record to concept: %{public}@
Error unassociating FHIR Record from concept: %{public}@
Error determining which associated concepts for sample should be deleted: %{public}@
Didn't find a node for sample with ID %{public}@ while removing all its associations
Error removing all sample associations: %{public}@
Error retrieving nodes with with sample associations: %{public}@
Failed to get URL for ontology database, profile %{public}@
Obliterating health ontology database at "%{public}@": %{public}@
Asset: ontology asset availability has changed to "%@", will try to import: %d
Error retrieving object for relationship: %@
Skipping missing sample history during enumeration: %{public}@
Series data for key %lld lost; treating as a single sample
Failed to look up provenance for series after freezing: %{public}@
Failed to look up provenance ID for series after freezing: %{public}@
Posted %@ with success %@, error: %@
%{public}@: Failed to notify client of new snapshot: %{public}@
%{public}@: Beginning change record fetch for %ld zones in %{public}@.
%{public}@: Beginning fresh fetch for %{public}@ with nil server change token after receiving change token expiration error.
%{public}@: Ignoring record with future schema: %{public}@
%{public}@: Failed to decode change record %{public}@: %{public}@
%{public}@ Error fetching deviceUUID for profile: %{public}@ error: %{public}@
%@: %@ Overriding existing profile %@ for identifier %@ with new profile %@
Error while enumerating profiles directory. URL: %@ Error: %{public}@
Loaded profile from disk: %@ for identifier: %@ in directory: %@
Non UUID directory found in profiles directory: %@ error: %{public}@
Unable to create directory (%@) for profile. Error: %{public}@
Error setting display name %{public}@, error: %{public}@
Failed to delete profile after unsuccessfully setting display name: %{public}@
Created new profile: %@ for identifier: %@ in directory: %@
Deleting profile '%@'
Invalidated existing servers for deleted profile '%@'
Invalidated deleted profile '%@'
Files remaining in %{public}@: %{public}@
Failed to delete profile %{public}@: %{public}@
Finished deleting profile '%@'
Failed to delete profile %@'
Failed to insert or update object authorization: %{public}@
%{public}@ is missing an object ID and will be ignored.
%{public}@ is missing a source ID and will be ignored.
%{public}@ is missing authorization status and will be ignored.
Decoded %{public}@ has incomplete source and object IDs: %{public}@, %{public}@
Decoded %{public}@ has invalid authorization status: %ld
Attempt to apply entry of class %{public}@ via class %{public}@
%{public}@: Error during XPC call to client proxy: %{public}@
%{public}@: Failed to retrieved shared profile identifier for registry record when adding a sharing participant.
Terminating request for collecting pending ski events as sessionId is nil
Starting ski workout event collector for sessionID %@
Stopping ski workout event collector for sessionID: %@
Setting initial reference ski data to %@
Processing ski data: %@
Ignoring ski data with mismatched session id. Ski data session id: %@ [self sessionID]: %@
Dropping zero-duration segment created from data: %{public}@
Generating workout segment event: %@
Failed to add downhill snow sports distance. [self sessionId]: %@ Error: %@
Error getting ski data: %{public}@
Failed to record rebase requirement after samples were deleted%{public}@: %{public}@
%{public}@: Failed to get database identifier: %{public}@
%{public}@: Recorded anchor gap after validation failure: %{public}@
%{public}@: Failed to update persisted state when recording an encountered anchor gap: %{public}@
%{public}@: Failed to retrieve current persisted state when recording an encountered anchor gap: %{public}@
%{public}@ Failed to fetch local MedicalID during cloud sync with error %{public}@
%{public}@ Local MedicalID updated during cloud sync. Aborting.
%{public}@ Local MedicalID is the same as the MedicalID to be persisted. Completing persist operation successfully.
%{public}@ Updating Medical ID on disk.
%{public}@ Failed to persist MedicalID to disk during cloud sync with error %{public}@
Error retreiving most recent activity cache: %@
Replacing existing activity cache (%@) with new activity cache (%@)
Not replacing existing activity cache (%@) with new activity cache (%@)
Attempting to merge new activity cache (%@) with no sequence number, defaulting to old behavior of always replacing
Unable to insert %{public}@ for %{public}@ when replacing existing cache, and no error was returned
Failed to decode activity statistics: %{public}@
Failed to convert XPC dictionary to CF dictionary
%{public}@: passing a locale without country code (%{public}@) to isCountrySupported:, will return NO
Health Ontology unsupported
Health Ontology unavailable because protected data is unavailable
Health Ontology is now available
Failed to start notification manager with error, %@
Failed to figure out whether profile has CHR accounts. error: %{public}@
Condition not met. %{public}@ == YES
%{public}@: Accumulator changed; considering attaching.
%{public}@: Stopped observing old accumulator %{public}@
%{public}@: After accumulator change, adding %{public}@ as workout data accumulation observer at %{public}@
%{public}@: Accumulator changed but we do not need to accept new accumulators.
%{public}@: Failed to unarchive recovery state with error: %{public}@
%{public}@: Recovering state
%{public}@: Saving recovering state
%{public}@: Failed to retrieve recovery configuration for current fitness machine session
%{public}@: Failed to unarchive persisted recovery configuration: %{public}@
%{public}@: Failed to store recovery state with error: %{public}@
Auto-pause is ignore during GymKit workouts
%{public}@: At session start, adding %{public}@ as workout data accumulation observer at %{public}@
%{public}@: No accumulator available; marking needs-accumulator and waiting for destination set change.
%{public}@ invalid FHIR identifier string, error: %{public}@
Failed to apply concept index to medical record entity with persistent ID %{public}lld: %{public}@
Resetting concept index due to error %{public}@
Finished re-index request due to missing concept from index; failed with error %{public}@
Finished re-index request due to missing concept from index; %ld samples processed
Attempting to apply properties to HDMedicalRecord, but country was nil
%{public}@: Found broken store identifier %{public}@ in set for owner %{public}@; repairing.
%{public}@: Repairing broken store record with identifier %{public}@ by generating random owner identifier.
%{public}@ insufficient data (%lu bytes) for battery level.
%{public}@ insufficient data (%lu bytes) for battery level percent.
Last run date: %@
We have a pre-historic current date (%@), setting to something sane.
First sample date: %@
Last sample date: %@
Elapsed time since last run date: %.2f hr
Generating %@ %@ (gender) demo data for %.2f days
Generation time: %f
When started Start time: %f
When started Start date: %@
When started Current time: %f
When started Current date: %@
When started End time: %f
When started End date: %@
Current demo data generation progress: %.1f%%
When ended Last sample date: %@
When ended Start time: %f
When ended Start date: %@
When ended Current time: %f
When ended Current date: %@
When ended End time: %f
When ended End date: %@
Total runtime to generate: %ld s
Total runtime to generate: %ld ms
Total samples written: %ld
Last sample date for iteration: %@
Error updating medical ID: %{public}@
Error inserting phone app samples: %{public}@
Error inserting phone samples: %{public}@
Error associating objects with object: %{public}@
Error creating local phone app source entity with bundle id %{public}@ %{public}@
Error creating local phone device entity for app provenance %{public}@
Error creating local phone source entity %{public}@
Error creating local phone device entity %{public}@
Error creating watch device entity %{public}@
Failed to archive %{public}@ data: %{public}@
Successfully saved state from demo data generation
Failed to unarchive data for HDDemoDataGeneratorState: %{public}@
Failed to unarchive data for HDDemoDataStatisticsSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataActivitySampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataAudioExposureSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataAudiogramSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataBloodSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataBodySampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataFoodSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataHealthDocumentSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataHeartSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataMindfulnessSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataMobilitySampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataOtherAndAdditionalSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataPathologySampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataReproductiveHealthSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataSleepSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataSymptomsSampleGenerator: %{public}@
Failed to unarchive data for HDDemoDataVitalsSampleGenerator: %{public}@
Successfully restored state from last demo data generation
Seconds elapsed today: %f
[%{public}@] Unable to determine weekday components from time %{public}@
%{public}@: Beginning reset for container (%{public}@) with configuration %{public}@
%{public}@: Successfully deleted zones %{public}@
fetchRecordsOperation was explicitly canceled by its upstream dependency
%{public}@: Failed to delete zones: %{public}@
%{public}@: Fetched record zones %{public}@
%{public}@: No record zones available to delete
%{public}@: Failed to fetch record zones in %{public}@ with error: %{public}@
[wpsm] Enable PSM if needed. Mode: %@
[wpsm] Current telephony enabled: %@, bundle: %@
[wpsm] Should enable PSM; set telephony status OFF
[wpsm] Disable PSM if needed. Mode: %@
[wpsm] Should disable PSM; set telephony status ON
[wpsm] Power saving mode preference may have changed, from: %@, to: %@. Active session count: %ld
Failed to retrieve source for UUID %{public}@: %{public}@
Found an authorization record for a source that does not exist (%{public}@); ignoring this record.
%{public}@ received significant time change notification
%{public}@ Skipping maintenance operation with reason "%{public}@" as we're already waiting on one
%{public}@ Enqueued maintenance operation with reason "%{public}@"
%{public}@ Processing due events with maintenance operation reason "%@"
%{public}@ Skipping maintenance operation with reason "%@" since no longer needed
%{public}@ Received system alert to check for due alarms
%{public}@ Enumerating due events
%{public}@ Failed to enumerate due events: %{public}@
%{public}@ No client found with identifier %{public}@. Skipping notifying for due events: %{public}@
%{public}@ Registered for on-wrist updates
%{public}@ Client identifier conflict detected for "%{public}@". Replacing client %{public}@
%{public}@ Registering alarm: %{public}@
%{public}@ Scheduling events %{public}@
%{public}@ Removing events %{public}@
%{public}@ Removing all events with client identifier: %{public}@
%{public}@ Replace all scheduled events with client identifier %{public}@ with events %{public}@
%{public}@ partial error: %{public}@
%ld partial errors
     %2ld: Partial error: %{public}@, ID: %{public}@
Failed to retrieve authorization status; ignoring statistics update: %{public}@
%{public}@: unable to update statistics because of database accessibility error
Failed to retrieve authorization status; skipping statistics fetch: %{public}@
Unable to instantiate candidate task server class provider %{public}@
%@ Created active sources list %@
Unsupported data type encountered: %ld
Did not find a source for workout sample with source identifier %@
Failed to retrieve source for %lld: %{public}@
Failed to retrieve ordered source ids for %{public}@: %{public}@
%{public}@: Encrypting token: %@
%{public}@: Decrypting token data, data is nil: %{bool}d
%{public}@: Generated credential key.
%{public}@: Failed to generate credential key: %{public}@
Plugin %{public}@ provides multiple sync entities (%{public}@, %{public}@) for identifier %{public}@. This plugin will be ignored for sync.
Plugin %{public}@ provides a sync entity %{public}@ with identifier %{public}@, but a sync entity already exists (%@) for that identifier. This plugin will be ignored for sync.
%{public}@: Updating periods for sample types
%{public}@: Error reading intervals from sample types: %{public}@
%{public}@: Sending %lu updated results to client
%{public}@: Observed addition of notification event. Requesting series data of type %{public}@ to get frozen.
%{public}@: Error freezing series of type %{public}@. %{public}@
%{public}@: Discarding store and preparing for flush.
%{public}@: Closing store
%{public}@: Opening store
%{public}@: Timed out attempting to open the HFD, despite tracking saying we should be successful.
%@: Reached timeout waiting for existing data store to close the HFD.
%{public}@: Will close store (#hfd)
%{public}@: Existing open store: %{public}@ (#hfd)
%{public}@: Will open store (#hfd)
Error reading catalog update frequency %{public}@
Invoking ontology asset availability handler with availability %ld
Starting ontology asset download with asset %{public}@
NOT starting ontology asset download. assetDownloadEnabled ? %@ asset: %@
%@ update asset catalog called for reason %ld
NOT updating asset catalog for reason %ld
Ontology asset catalog update completed %@, starting download for asset
Ontology asset catalog update failed %{public}@
Ontology asset download completed %{public}@
Ontology asset download failed %{public}@
%@ asset/catalog up-to-date
%@ asset of incompatible version: %ld > %ld
%@ asset download or catalog update complete
%@ asset download or catalog update failed
%@ failed to read attributes for file %@, error: %{public}@
%@ performing periodict activity with name %{public}@
%@ unexpectedly hit unreachable case in performPeriodicActivity
%{public}@: Failed to add registry record (%{public}@) to zone (%{public}@): %{public}@
%{public}@ Resuming from suspend.
%{public}@: Suspended during enumeration.
%{public}@: Client no longer authorized.
%{public}@: Caught exception adding data point with value %lf (%lf -> %lf); ignoring.
%{public}@: Fetch record zone changes failed for container %{public}@: %{public}@
%{public}@: Confirmed %ld empty zones in container %{public}@
%{public}@: Failed to delete zones %{public}@: %{public}@
Failed to drop temporary table after sample enumeration: %{public}@
%{public}@: invalid parameters, service: %{public}@
%{public}@: cannot insert service %{public}@ into database
Cannot delete service %{public}@ from database. Error: %{public}@
Failed to delete expired service with id %@: %{public}@
Failed to instantiate non-deprecated service: %{public}@
%{public}@: Error persisting context: %{public}@
%{public}@: Error retrieving context: %{public}@
%{public}@: Error encoding context (%@) %{public}@
%{public}@: Error encoding dictionary context (%@) %{public}@
%{public}@: Asked to decode empty context (%{public}@), returning nil
%{public}@: Error decoding context (%lu bytes) %{public}@
%{public}@: Error decoding context (%lu bytes): %{public}@
%{public}@: Transitioning to Failure. Previous state %ld
%{public}@: Transitioning to Streaming. Previous state %ld
%{public}@: Transitioning to Idle. Previous state %ld
%{public}@: Updating collection period to %lf
%{public}@: Stopping data collection
%{public}@: Error fetching local device: %{public}@
%{public}@: Retrying from failure (%ld)
%{public}@: Retrying count limit reached (%ld), not retrying
%{public}@: Data collector disabled, not beginning streaming.
%{public}@: Error received in update handler: %{public}@
%{public}@: Error saving sensor data: %{public}@
%{public}@: Error occurred during historical fetch for update handler: %{public}@
%{public}@: Begin updates
%{public}@: Received update notification
%{public}@: Error occurred during update handler: %{public}@
%{public}@: Set last received sensor datum to nil, persisting nil context
%{public}@: Detected CoreMotion database reset, resetting state
%{public}@: Requested update while fetching historical data. Marking _needsHistoricalFetch
%{public}@: Forced fetch of historical data since last record: %@ %{public}@
%{public}@: Fetching historical data since last record: %@ %{public}@
%{public}@: Historical fetch returned %ld datums in %0.2lfs
%{public}@: Detected a database reset with the following results: %{public}@, %@, %@
%{public}@: Error fetching historical sensor data: %{public}@
%{public}@: Finished fetching historical data.
%{public}@: Needs historical fetch: %{BOOL}d
%{public}@: Received empty array of sensor data. Exiting early
%{public}@: (Processed: %ld, Persisting: %ld, Context: %@ %{public}@ )
%{public}@: Tried to create HKObjects with start date (%@) later than end date (%@)
%{public}@: Detected failure state, beginning streaming
Skipping invalid datum: %@
Received sensor datum in the future, aborting (%@)
%{public}@: unable to take accessibility assertion: %{public}@
%{public}@: Failed to determine minimum frozen anchors before pruning
%{public}@: Pruning failed for %{public}@: %{public}@
%{public}@: %{public}@ pruned %{public}@ objects in %0.2lfs
%{public}@: Finished pruning %ld objects in %0.2lfs
%{public}@ Scheduled %lu new events
%{public}@ Removing %lu events
%{public}@ Replacing all scheduled events with %lu new events
%{public}@ Removing all scheduled events
%{public}@ Skipping notification for in-flight event %{public}@
Unexpected characteristic type %ld
Failed to validate characteristic for type %ld
Invalid sort descriptor: %{public}@
Invalid sort descriptor: %@
Service type %d error creating device entity: %{public}@
Not delivering data because deliverData is false
Notifying service manager %@ with characteristic %@
|>- performOperation %@ with parameters %@
Attempting to write data (%@) to CBCharacteristic: %@, CBPeripheral: %@, HDCharacteristic: %@, HDPeripheral: %@, HDHealthService: %@ with write type %ld
Characteristic has no writable properties and will not be marked writable. No data will be written to this characteristic: %@
|>- readProperty: %@
|>- peripheral:didWriteValueForCharacteristic: %@, %@
Failed to apply concepts to sample with UUID %{public}@ with error %{public}@
error loading relationships for concept: %{public}@
Encountered an unsupported class %{public}@ when generating concept relationship cache
Failed to index sample with UUID %@
Failed to store concept index entries with error %{public}@
Failed to index sample with error %{public}@
Failed to index samples with error %{public}@
[%{public}@] Registering for extension changes
[%{public}@] Unregistering for extension changes
[%{public}@] Notifying client of onboarding completion update
[%{public}@] Notifying client of paired device capability update
[%{public}@] Using profile extension %{public}@ for feature %{public}@
Not generating demo data
Failed to generate demo data: %{public}@
Unexpected errno value for file close: %d %{public}s
Reached max retry count (%d) for file close: %d %{public}s
Initialized app extension server with extension ID: %{public}@ for extension point ID: %{public}@
Connecting to app extension: %{public}@
Failed to activate app extension: %{public}@ with error: %{public}@
Failed to activate app extension: %{public}@
Failed to connect to app extension: %{public}@ with error: %{public}@
Disconnected from app extension: %{public}@
No active app extension was found for %{public}@
%{public}@: Failed to activate power source monitor: %{public}@
%{public}@: Activated power source monitoring.
%{public}@: Discovered a power source: %{public}@.
%{public}@: Lost a power source: %{public}@.
%{public}@: Power source updated: %{public}@.
%{public}@: Beginning pull for sequence with %ld required record(s).
%02d: %{public}@: %{public}@
%{public}@: There do not appear to be any shared zones to remove ourselves from.
%{public}@: Successfully deleted share records
%{public}@: Failed to delete shares: %{public}@
Basic data source deallocated: %@.
%{public}@: Ending collection
%{public}@: Adjusting collected sample types: %{public}@ -> %{public}@
%{public}@:initialMetadata workout configuration : %{public}@
%{public}@: Beginning observation of types: %{public}@
%{public}@: Completed initial aggregation request for newly observed types.
%{public}@: Initial aggregation upon observation start failed: %{public}@
%{public}@: Ending observation of types: %{public}@
%{public}@: Fetching data from %{public}@ -> %{public}@
%{public}@: Failed to enumerate samples of type %{public}@: %{public}@
%{public}@: Updated workout configuration : %{public}@
%{public}@: Collection state changed for %{public}@
%{public}@: skip TTR prompt check
%{public}@: unable to clear value for %{public}@: %{public}@
%{public}@: unable to get values for keys %@: %{public}@
%{public}@: unable to unarchive errors from data %@: %@
%{public}@: unable to set values %{public}@: %{public}@
%{public}@: TTR alert: lastPromptDate %{public}@, lastPromptBuild %{public}@ (current build %{public}@), errors (%lu) %{public}@
%{public}@: unable to archive errors %@: %@
%{public}@: unable to set values for %{public}@: %{public}@
Characteristic does not support write-without-response for the Eurotas service. Eurotas data will not be written to this characteristic: %@
No characteristic class found for characteristic UUID: %{public}@
%{public}@: No subscriptions to register.
%{public}@: Failed to look up subscriptions: %{public}@
%{public}@: Missing %ld subscriptions: %@
%{public}@ Error saving subscriptions in database %{public}@, error: %{public}@
%{public}@ Successfully saved subscriptions in database %{public}@
Failed to decode object of type HKVaccinationRecord with error %@
Not automatically finishing builder %{public}@: Builder server is still present.
Unable to determine a date interval for detached builder %{public}@: discarding workout.
Invalid start/end date (%{public}@, %{public}@) for detached builder %{public}@: discarding workout.
Failed to lookup current status for builder entity %{public}@: %{public}@
Discarded builder %{public}@
Failed to discard builder %{public}@: %{public}@
Failed to finish workout builder: %{public}@
Finished workout builder %{public}@
%{public}@: Persisted recovery state in %.2lfs
%{public}@: Failed to persist recovery data: %{public}@
%{public}@: Unexpectedly nil calculator when recovery statistics for %{public}@
Failed to recover series builders after workout builder recovery: %{public}@
%{public}@: Couldn't notify workout builder client of recovered series builders with error: %{public}@
%{public}@: Failed to add samples: %{public}@
%{public}@: Ignoring %ld workout events (should-collect: %s)
%{public}@: Received %ld events (%{public}@) (%ld public: %@)
%{public}@: Failed to insert workout events: %{public}@
%{public}@: Failed to add metadata with error: %{public}@
%{public}@: (#w1) Requesting final data for interval (%{public}@ - %{public}@) from %{public}@
%{public}@: (#w1) Received final data from %{public}@
%{public}@: Failed to recieve final data from %{public}@: %{public}@
%{public}@: Failed to send finished workout to client, error fetching client proxy: %{public}@
%{public}@: Discarded workout after moving to %{public}@ state
%{public}@: Unable to discard workout after moving to %{public}@ state: %{public}@
%{public}@: Failed to send error to client, error fetching client proxy: %{public}@
%{public}@: (#w0) %{public}@.
%{public}@: (#w0) Enter at %{public}@.
%{public}@: (#w0) Start date set: %{public}@
%{public}@: (#w0) End date set: %{public}@
%{public}@: (#w0) Failed to persist updated start/end dates for workout builder: %{public}@
%{public}@: (#w0) Target state changed: %{public}@ -> %{public}@
%{public}@: Client's addSamples completion handler not called, error fetching client proxy: %{public}@
Trying to add already linked data source %@ to workout builder
%{public}@: Trying to remove non linked data source %{public}@ from workout builder
%{public}@: Client's addWorkoutEvents completion handler not called, error fetching client proxy: %{public}@
%{public}@: Client's addMetadata completion handler not called, error fetching client proxy: %{public}@
%{public}@: Client's removeMetadata completion handler not called, error fetching client proxy: %{public}@
%{public}@: Couldn't flush data to client with error: %{public}@
%{public}@: Failed to find device entity for device: %{public}@. Error %{public}@
%{public}@: Failed to update device: %{public}@
%{public}@: Workout Configuration is nil. Nothing to update}@
%{public}@: Failed to update builder workout Configuration: %{public}@
%{public}@: Empty or metadata for %{public}@ does not exist
%{public}@: Couldn't notify Workout Builder Server client of updated metadata with error: %{public}@
%{public}@: Did update with invalid metadata %{public}@: %{public}@
%{public}@: Failed to notify client of elapsed time basis change with error: %{public}@
%{public}@: Couldn't notify Workout Builder Server client of updated events with error: %{public}@
%{public}@: Failed to requery for samples of type %{public}@: %{public}@
%{public}@: Failed to get read transaction to requery for invalidated sample types: %{public}@
%{public}@: Failed to add samples to statistics calculator with error: %{public}@
%{public}@: Failed to persist statistics: %{public}@
%{public}@Unexpected error setting statistics masking intervals immediately after calculator creation: %{public}@
%{public}@: Updated statistics for [%{public}@]
%{public}@: Couldn't notify Workout Builder Server client of updated statistics with error: %{public}@
%{public}@: Couldn't notify Workout Builder Server client of finished recovery with error: %{public}@
%{public}@: Failed to requery after interval mask update for type %{public}@: %{public}@
%{public}@: Discarded workout on connection invalidation because no session is associated with this builder.
%{public}@: Failed to discard unassociated builder on connection invalidation: %{public}@
%{public}@: Failed to lookup associated session entity on connection invalidated; treating session as present: %{public}@
%{public}@: (#w0) Synthesizing end date while finishing; no end date yet specified (was endCollection called)?
%{public}@: Adding source %{public}@ (%{public}@)
%{public}@: Unable to add quantity types to include while paused: %{public}@
%{public}@: unrecognized category %ld
ignoring synced dictionary with missing category
ignoring synced dictionary with incorrect category %ld
%{public}@: Failed to apply value of category %ld, %{public}@
%{public}@: Invalid entity/key/value set
%@ expire: %@
%{public}@ outgoing request %{public}@ messageID:%u pri:%{public}@ to %{public}@ (%tu bytes) error: %{public}@
%{public}@ outgoing request %{public}@ messageID:%u pri:%{public}@ to %{public}@ (%tu bytes)
%{public}@ outgoing response %{public}@ to request %{public}@ messageID:%u pri:%{public}@ to %{public}@ (%tu bytes) error: %{public}@
%{public}@ outgoing response %{public}@ to request %{public}@ messageID:%u pri:%{public}@ to %{public}@ (%tu bytes)
%{public}@ failed to cancel request %{public}@: %{public}@
%{public}@ incoming response %{public}@ to request %{public}@ messageID:%u from %{public}@ (%tu bytes)
%{public}@ unexpected message ID (%u != %u) for message %{public}@
%{public}@ unexpected response %{public}@
%@ dispatching incoming response %@ with message id %u to '%@'
%{public}@ no registered response handler for message: %hu
%{public}@ could not find context for message: %hu identifier %{public}@
%{public}@ incoming request %{public}@ messageID:%u pri:%{public}@ from %{public}@ (%tu bytes)
%{public}@ received a message of type %u for which no request handler was registered.
%@ dispatching incoming request %@ with message id %u to '%@'
%{public}@ active paired IDSDevice for %{public}@ did switch: %{public}@
%@ (%@) deallocated without sending a response
%{public}@: Failed to retrieve owner identifier for %{public}@: %{public}@
%{public}@: Registry record %{public}@ contains one of our owner identifier; sync is disabled.
%{public}@: Master record %{public}@ contains one of our owner identifier; sync is disabled.
%{public}@: Failed to disable sync locally after detecting sync disablement for this owner identifier: %{public}@
%{public}@: Disabled sync locally after detecting sync disablement for this owner identifier.
Failed to decode object of type HKConditionRecord with error %@
%@: *** Failed to freeze series: %@ %{public}@
Failed to instantiate series freeze journal entry: unable to find subclass '%{public}@'
Delivering demo Activity Summary: %@
Failed to unarchive share participant %{public}@: %{public}@
Failed to unarchive owner participant %{public}@: %{public}@
Failed to receive sync objects for '%{public}@' with ignorable error: %{public}@
Received restart of sequence for %{public}@ (expecting %ld)
Failed to lookup existing anchor for sync entity: %{public}@
Apply Sync change for %{public}@ over range (%lld, %lld) with sequence %{public}@
No sync entity available for change with sync entity identifier %{public}@; change will be ignored.
Ignoring sync change with sync entity class %{public}@ (%{public}@), unsupported by %{public}@
Failed to apply object collection.
Applied sync change for %{public}@ over range (%lld, %lld) sequence %{public}@ in %.3f seconds
syncEntityClass=%{public}@, start=%lld, end=%lld, sequence=%ld
apply-sync-change
failed to write received anchor
Failed to acquire database accessibility assertion for sync: %{public}@
failed to reset next anchor to %lld for %{public}@: %{public}@
resetting store %@
Failed to retrieve sync anchor map for entity class %{public}@: %{public}@
Failed to update next sync anchor for %{public}@: %{public}@
beginning sync session %{public}@ with store %{public}@
%{public}@
beginning sync session %{public}@ transaction %d with store %{public}@
Failed to prepare sync entities for store %{public}@: %{public}@
Start anchor did not increase (original: %lld, updated: %lld, expected final: %lld) during sync of %{public}@; skipping this entity.
Delegate for sync session %{public}@ signaled that this sync session should start a new transaction, stop getting changes for %{public}@
Sync for entity %{public}@ was unsuccessful. Skipping sync.
Delegate for sync session %{public}@ signaled that this sync session should start a new transaction, stop getting changes for any sync entity
error during sync write transaction: %{public}@
error during sync read transaction: %{public}@
finished sync transaction %d in %lfs; success=%s
finished sync session %{public}@ in %lfs with %d transactions; success=%s
success=%s, %{public}@
sync-session
failed to reset sync store %{public}@: %{public}@
%{public}@ is not ordered before %{public}@ in sync entities
%{public}@ (#w1) Ignorning become-current request while already in line as the next workout.
%{public}@ (#w0) In line as next workout.
Finished all detached workout builders, excluding active sessions (%@)
Failed to finish detached workout builders: %{public}@
%{public}@: Received pause/resume request.
%{public}@: Ignoring pause/resume request. { unlocked=%{public}@, can be paused=%{public}@, active=%{public}@.
%{public}@: Generating pause/resume request for session %{public}@.
%{public}@: Rejecting pause/resume request; no current workout.
%{public}@: Skipping automatic current workout recovery: primary power source is currently charging.
%{public}@: Skipping automatic current workout recovery: session servers (%{public}@) already exist.
%{public}@: Failed to recover workout session %{public}@ after restart with error %{public}@
%{public}@: Automatically recovering latest workout session %{public}@ after restart.
%{public}@: Not automatically recovering workout session %{public}@ after restart; state %{public}@ does not indicate a current workout
%{public}@: No workout session available for automatic recovery after restart: %{public}@
%{public}@: No workout session available for automatic recovery after restart
Finished all unrecovered workouts, excluding active sessions (%@)
Failed to finish unrecovered workouts: %{public}@
%{public}@: Device is now charging; finishing all detached sessions and builders.
%{public}@ (#w0) Become current.
%{public}@ (#w0) Finished while current.
%{public}@ (#w0) Finished while pending.
Workout session %{public}@ not current. Current session: %{public}@ Current client: %{public}@
Posting %s notification
Starting activity simulation
Stopping activity simulation
Power saving mode is %s for current activity type %{public}@
Stopping current workout because school mode was turned on
Ending workout sesssion %@, because we are in school mode
Skipping migration step to %ld because expected current schema version is %ld.
Failed to disable foreign keys: %{public}@
Failed to retrieve current version for schema '%{public}@': %{public}@.
Successfully migrated %{public}@ schema '%{public}@' to %ld
Data migration succeeded for '%{public}@' to %ld but setting schema version failed: %{public}@
Error encountered when validating foreign keys: %{public}@
Foreign key constraint violation encountered after migration step: %{public}@
Failed to enable foreign keys: %{public}@
Unable to sort and prune migration steps from %ld to %ld: %{public}@.
Database migration interrupted attempting migration for %{public}@ (schema: %@) to %ld; migration will be retried.
Fatal error encountered attempting migration for %{public}@ (schema: %@) to %ld; migration will be aborted.
invalid data type code %ld when inserting codable deleted samples.
unable to look up sample type %ld when inserting codable deleted samples.
Transaction interrupted inserting deleted object %{public}@: %{public}@
Failed to insert deleted object %{public}@: %{public}@
HDCodableDeletedSample (%{public}@) with external sync metadata does not contain an external sync object code
Failed to insert external sync identifier (%{public}@, version %{public}@): %{public}@
Encountered %ld constraint violations while inserting %ld deleted objects
Failed to insert codable deleted samples: %{public}@
Received last pedometer record ID of %ld
Received last pedometer datum of %@ (out of %ld results)
Received last calorie record ID of %ld
Received last calorie datum of %{public}@ (out of %ld results)
Failed to find devices: %{public}@
Failed to retrieve sources for '%@': %{public}@
Failed to find sample with UUID %{public}@, error: %{public}@
%{public}@ Failed to find contributor with UUID %{public}@, error %{public}@
[routes] %{public}@ %{public}@ _route is nil.
[routes] %{public}@ Freezing series sample: %@
[routes] %{public}@ error freezing sample UUID %{public}@: %{public}@
[routes] %{public}@ route %@ is empty, deleting.
[routes] %{public}@ error deleting empty route %{public}@: %{public}@.
[routes] %{public}@ Inactive collector, ignoring end request
[routes] %{public}@ Received %tu valid locations, skipped %tu
[routes] %{public}@ Stop location updates.
[routes] %{public}@ Stop location updates and discard data.
[routes] %{public}@ Start location updates for workout %@ of type %d with data source %@
[routes] %{public}@ location updates already started, ignoring start request
[routes] %{public}@ Location services is not enabled
[routes] %{public}@ Location authorization status is: %d (%@)
[routes] [elevation] %{public}@ Creating CMElevation.
[routes] %{public}@ Fetched location manager: %@, create in-use assertion, and start updating location.
[routes] %{public}@ HDLocationDataCollector: Pause updates.
[routes] %{public}@ location updates already paused, ignoring end request
[routes] %{public}@ Last status was %d, location not approved
[routes] %{public}@ Stop elevation updates.
[routes] %{public}@ Stop location manager GPS updates.
[routes] %{public}@ HDLocationDataCollector: Resume updates.
[routes] %{public}@ location updates already started or ended, ignoring resume request
[routes] %{public}@ We resumed the workout before GPS was stopped. Don't restart GPS
[routes] %{public}@ GPS was stopped; restart GPS. Last paused time: %f
[routes] [elevation] %{public}@ Error updating: %@, %{public}@
[routes] %{public}@ Error occurred while saving route: %{public}@
[routes] %{public}@ Saved route %@ with associated workout %@.
[routes] %{public}@ Did change location authorization (%d -> %d)
[routes] %{public}@ Location authorization change: resume location updates.
[routes] %{public}@ Location authorization change: start location updates.
[routes] %{public}@ Location authorization change: pause location updates.
[routes] %{public}@ Did update with location. coord (%f %f) altitude: %f speed: %f, type: %d date: %@
[routes] %{public}@ Skipped adding location of type: %d, horizontal accuracy: %g
[routes] %{public}@ Did not successfully save location. Error: %{public}@
[routes] %{public}@ %@ failed to get location with error: %d
Error fetching activity cache indices: %{public}@
Received samples while _needsUpdateAfterUnlock=YES
Anchor %@ <= %ld, skipping
Finished %ld unrecovered sessions.
%{public}@: (#w0, #init) %{public}@:%p { %{public}@ }
%{public}@: Failed to save associated workout builder entity: %{public}@
%{public}@: Failed to lookup existing workout session entity: %{public}@
%{public}@: Failed to create workout session entity: %{public}@
%{public}@: (#w0) Recovered with state %{public}@ with start date %{public}@
%{public}@: Failed to recover persisted session state: %{public}@
%{public}@: Failed to send persisted workout events to data destination upon request: %{public}@
%{public}@: Failed to update persisted session state: %{public}@.
%{public}@: Failed to update start date: %{public}@.
%{public}@: (#w0) Target State: %{public}@.
%{public}@: (#w0) Target State Initialized at %{public}@.
%{public}@: (#w0) Failed to receive CM stop event with expected interval (%0.2lfs); generating simulated stop event
Failed to sync after heart rate recovery: %{public}@
%{public}@: Failed to make progress toward requested target state %{public}@: %{public}@
%{public}@: Failed to lookup associated builder while finishing session: %{public}@
%{public}@: Failed to delete session entity when finishing.
%{public}@: Finishing associated builder.
%{public}@: No associated builder entity found during finish; workout will not be automatically saved.
%{public}@: Generated event: %{public}@
%{public}@: Failed to persist workout event: %{public}@
%{public}@: Failed to record workout session failure: %{public}@
%{public}@: Generated configuration update : %{public}@
%{public}@: Failed to persist workout configuration update: %{public}@
%{public}@: Client application identifier change: %{public}@ -> %{public}@
%{public}@: Client process bundle identifier change: %{public}@ -> %{public}@
%{public}@: Failed to record client source. Client may not be able to recover correctly after a full crash.
%{public}@: Failed to record client process bundle identifier. Client may not be correctly relaunched after a full crash.
%{public}@: Failed to record client application identifier. Client may not be able to recover this workout after a crash.
%{public}@: Failed to record client process bundle identifier and source. Client may not correctly recover after a full crash.
%{public}@: Beginning invalidation timer.
Unable to get pid for %{public}@
Taking reconnection assertion for process %{public}@
Failed to acquire reconnection assertion for : %{public}@
%{public}@: Stopping invalidation timer.
%{public}@: Invalidation timer fired; finishing session for client loss.
%{public}@: Creating session controller of class %{public}@
%{public}@: Failed to retrieve recovery state with error: %{public}@
%{public}@: Starting latest activity update timer.
%{public}@: Stopping latest activity update timer.
%{public}@: Failed to update latest activity date in workout session entity: %{public}@
%@: Starting with session ID %@
%@: Stopping with session ID %@
%@: Received workoutManagerDidStartWorkout event
%@: Received workoutManagerDidStopWorkout event
%@: Received workoutManagerWillPauseWorkout event
%@: Received workoutManagerWillResumeWorkout event
%@: Received workoutManagerDidFail event
%@: Received catflexing event
%@:Received workout configuration update
CatFlexing: setting setSuggestedStopTimeout to %f seconds
CatFlexing: Triggering cat flexing event
%{public}@ Reached invalid state. Local and cloud MedicalID should not be nil.
%{public}@ Returning the cloud MedicalID since local MedicalID is nil
%{public}@ Returning the local MedicalID since cloud MedicalID is nil
%{public}@ Merged MedicalID contains the most recently updated fields from the local and cloud MedicalID
%{public}@ dateSaved property nil for cloud MedicalID and local MedicalID, returning cloud MedicalID
%{public}@ dateSaved property nil for cloud MedicalID, returning local MedicalID
%{public}@ dateSaved property nil for local MedicalID, returning cloud MedicalID
%{public}@ Returning the cloud MedicalID since dateSaved is equal
%{public}@ Returning the cloud MedicalID since dateSaved is more recent
%{public}@ Returning the local MedicalID since dateSaved is more recent
Unable to determine whether or not this is the first successful pull: %{public}@.
Generating AWD event for first successful pull
%{public}@: Recording successful cloud sync pull
Failed to record successful pull: %{public}@.
Failed to decode underlying registry.
Received demo objects: %ld
%{public}@: Attempting to fetch aggregator for non-collectible type %{public}@
Aggregator couldn't be found for type %{private}@
%{public}@: perform delayed write with maximum latency %0.2f
date=%{public}@, types=%ld, mode=%ld
aggregation-request
success=%{public}s
Requesting %{public}@ aggregation of type %{public}@ through %{public}@
date=%{public}@, type=%{public}@, mode=%ld
aggregation-request-single
Finished %{public}@ aggregation of type %{public}@ through %{public}@ in %0.2lfs
Failed to complete %{public}@ aggregation of type %{public}@ through %{public}@ in %0.2lfs: %{public}@
Ignoring flush request for type %@, already aggregated at %@
Failed to take collection assertion for %{public}@ for %{public}@
Taking collection assertion for %{public}@ for (%{public}@)
Invalidating collection assertion for %{public}@ for (%{public}@)
Completed aggregation of types %{public}@ after assertion invalidation.
Failed to aggregate to current time for types %{public}@ after assertion invalidation: %{public}@
%{public}@: Collection state %{public}@ -> %{public}@
Adding data collector: %@
Data collector already exists for type %{public}@
Data collection disabled; not starting built-in collectors.
Filtering built-in data collector creation through blacklist: %{public}@
Access to fitness data NOT granted.
Received data collectors: [%{public}@]
Exercise time data collection disabled because defaults key '%{public}@' is %{public}@
Filtering plugin data collectors via blacklist: %{public}@
Dropping blacklisted data collector: %{public}@
Access to fitness data %@granted.
sensorDataArrayReceived without device.
generating fake data for activity type %ld with duration: %lf
Failed to receive demo objects: %{public}@
Generated %ld fake samples.
Checking TCC authorization for bundle
TCCAccessGetOverride for motion failed
is%@ granted permission by TCC
%{public}@: Underlying operation failed with an ignored error: %{public}@
%{public}@: Initialized for task %{public}@.
Submitting CoreAnalytics heart daily analytics: %{public}@
School mode: %@ (%@)
School mode updated to: %@ (%@)
%{public}@: Registering aggregator for client data collection: %@
%{public}@: No aggregator available for data collection.
Unregistering data collector %{public}@ with bundle identifier %{public}@ from data aggregator: %{public}@
%{public}@: Batch %{public}@: Received %ld datums.
%{public}@: Ignoring duplicate registration request
%{public}@: Beginning collection for aggregator: %{public}@
%{public}@: Failed persistence for %ld datums: %{public}@
%{public}@: Calling completion for datum(s) inserted via HKDataCollector
Acquired data collection flush assertion for %{public}@ (%d)
Failed to acquire data collection flush assertion for %{public}@ (%d)
%{public}@: Failed to request data collection flush from client: %{public}@
Failed to preserve copy of database file: %{public}@
Failed to delete file at URL "%{public}@": %{public}@
Deleted database file at URL "%{public}@"
Invalidating assertion for '%@' with '%ld' and anchor '%@' (pre-queue).
Attempt to invalidate assertion for '%@' with '%ld', but no assertion is present.
Invalidating assertion for '%@' with '%ld'.
Unable to find NanoRegistry device for IDS device %{public}@ (#t0)
Unable to create entity for pairing %{public}@ (#t0)
Created sync store %{public}@ for IDS device %{public}@ (#t0)
unable to find NanoRegistry device for IDS device %{public}@
NanoRegistry device for IDS device %{public}@ is not paired
missing pairing ID for NanoRegistry device %{public}@
IDS device %{public}@ has unsupported system build version %{public}@
invalid persistent pairing UUID string "%{public}@" in NPS
failed to synchronize %{public}@: %{public}@
unexpectedly nil NRDevice properties: name="%{public}@", productType="%{public}@"
failed to get source for paired device %{public}@: %{public}@
failed to create sync store for IDS device %{public}@: %{public}@
failed to save pairing entity %{public}@: %{public}@
store %{public}@ transitioning from %@ to %@
incoming sync session %{public}@ error: %{public}@
unexpected session UUID (%{public}@) or date (%{public}@) in change set
unexpected change set status code %d
added incoming sync observer %p with %.2f timeout at %@
notified sync observer %p after %.3f seconds
removed expired sync observer %p after %.3f seconds
Dropping call to %{public}@ for task server %{public}@ because no completion was provided.
Unable to launch host app %@ for authorization: %{public}@
Did not launch host app %@ for authorization
Failed to determine whether authorization is necessary: %{public}@
Failed to roll back extended transaction: %{public}@
Failed to retrieve device entity for device %{public}@
Unable to get bundle ID for %{public}@
Suppressing activity alerts for %@
Invalidating activity alert suppression for %@
Error setting characteristic for data type %ld: %{public}@
Error retrieving modification date for data type: %{public}@
HDHealthStoreServer suspending connection with %{public}@
HDHealthStoreServer resuming connection with %{public}@
Client resume transaction timer for %@ %s
Dropping concept index manager quiescence notification with permission error %{public}@
Unable to copy sample associations from workout with UUID %{public}@ to workout with UUID %{public}@: %{public}@
%{public}@: We've been cancelled while in the operation queue.
%{public}@: Starting reachability operation for %ld identifiers
%{public}@: The reachability operation has been cancelled.
%{public}@: The reachability operation has timed out.
%{public}@: We got a reachability callback but we are already cancelled.
%{public}@: We got a reachability callback with the incorrect service identifier %@
HDFitnessMachineStateTimer: %@ timer already running
HDFitnessMachineStateTimer: Starting %@ timer with %llu seconds
HDFitnessMachineStateTimer: %@ timer expired
HDFitnessMachineStateTimer: Canceling %@ timer
%{public}@, Client discovery ID #%d not valid.
*** %{public}@, null completion.
*** %{public}@, Missing a valid health device.
*** %@, Missing server session ID for client ID #%d
%{public}@: Not creating data source: user condition is not yet set.
Unexpectedly large step count (%lf) between %@ and %@
%{public}@: Updated user characteristics
%{public}@: Beginning pedometer updates from %{public}@.
%{public}@ started
%{public}@ finished in %0.4f s, Success
%{public}@ finished in %0.4f s, Error: %{public}@
%{public}@ workout condenser is not enabled
%{public}@ workout condenser cannot run without access to protected data
%{public}@ %ld workouts requiring condensation (%ld uncondensed, %ld recondensable)
%{public}@: end with early success due to timeout, condensed %ld workouts in %0.4f s
%{public}@: end with early success due number of deleted samples (%ld), condensed %ld workouts in %0.4f s
%{public}@: failed to lookup workout with persistentID %lld: %{public}@
%{public}@ finished in %0.4f s, (%{BOOL}d, %{public}@)
%{public}@ finished single value samples check in %0.5f (total %0.5f): %@
%{public}@ finished overlapping samples check in %0.5f (total %0.5f): %@
%{public}@: create series quantityType %{public}@ with %lu values
%{public}@: insert %lu values into series
%{public}@: workout (%{public}@) freeze series %{public}@ with metadata: %{public}@
%{public}@: workout (%{public}@) associate series %{public}@
%{public}@: delete %ld condensed samples
%{public}@: condensed workout: %{public}@, type: %{public}@, duration: %{public}@, added: %{public}@
%{public}@: Unable to determine if profile has any watch sources: %{public}@
%{public}@ unable to get accessibilityAssertion before enqueing maintenance operation: %{public}@
%{public}@: maintenance operation enqueued
%{public}@: maintenance operation running
%{public}@: maintenance operation finished
Will reset demo data database as clock has moved too far back
Will reset demo data database as clock has been moved too far forward
Returning demo data directory path: %@
Demo Data path exists but is not a directory. Aborting. path = %@
Could not remove demo data directory. error: %{public}@
Demo data database has been reset
Power assertion "%@" timed out after %f seconds
Notification registration for '%s' failed with status %d
GymKit preferences: %{public}@
Fitness Tracking Disabled
Activity mode unknown. Defaulting to NFC on with workouts
NFC disabled because activity mode is Fitness Jr
NFC permission: before='%{public}@' current='%{public}@'
Failed to count workouts from a watch: %{public}@
Found workouts from a watch. NFC will be always on
Found no workouts from a watch. NFC will be on only when app is frontmost
Current activity move mode is %{public}@
No clauses in %@ can be joined after tables %@
Sync for %{public}@ from %lld -> %lld produced %s result anchor %lld and %lu objects with sequence %lld.
%{public}@: Attempt sending %s changes
Unexpected failure in migrating origin build to system versions, build string: %@
%{public}@: Zone %{public}@ is missing manatee identity and will be deleted
%{public}@: Zone %{public}@ is missing manatee identity; removing the share.
%{public}@: Successfully removed %ld zone share records after manatee identity loss.
%{public}@: Failed to remove zone shares after manatee identity loss: %{public}@
%{public}@: Beginning database changes operation for %{public}@ in %{public}@
%{public}@: %{public}@: Failed to fetch record zones in database %{public}@ with error %{public}@
%{public}@: Found %ld modified and %ld deleted zones for %{public}@ database in %{public}@
%lu: + %{public}@
%lu: - %{public}@
Zone %{public}@ was both modified and deleted and will be ignored.
Notification registration failed with status %d
Error retrieving previous service sessions, %{public}@
Removing inactive saved health service session %@
%{public}@: %{public}@: deviceIdentifier: %{public}@
Error retrieving update enabled status for device %@, %{public}@
%{public}@: %{public}@: deviceIdentifier: %{public}@ -> enabled: %{public}@, error: %{public}@
Error setting update enabled status for device %@, %{public}@
%{public}@: %{public}@: deviceIdentifier: %{public}@ -> success: %{public}@, error: %{public}@
%{public}@: %{public}@: serverKey: %{public}@
%{public}@: %{public}@: status: %ld
%{public}@: %{public}@: type: %ld, timeout: %lu, alwaysNotify: %{BOOL}d
*** discoverHealthServicesWithType, Discovery handler cannot be NULL
*** discoverHealthServicesWithType, Invalid health service type %ld
%{public}@: %{public}@: type: %ld, timeout: %lu, alwaysNotify: %{BOOL}d -> discoveryIdentifier: %lu
%{public}@: %{public}@: discoveryIdentifier: %lu
Stopping discovery %lu
Removing object with identifier: %@
Removing info for service uuid: %@
Calling discovery handler with cleanup
%{public}@: %{public}@: timeout: %lu, identifier: %lu
Service with UUID %@ not supported
%{public}@: %{public}@: peripheral: %{public}@, services: %{public}@
%{public}@: %{public}@: peripheralId: %{public}@, serviceId: %{public}@, characteristics: %{public}@
%{public}@: %{public}@: hkService: %{public}@
%{public}@: %{public}@: hkService: %{public}@, connectionInfo: %{public}@
*** connectHealthService, A HKHealthService is required.
*** connectHealthService, Connection handler cannot be NULL.
%{public}@: No peripheral was found on service of type %ld. retrievePeripheralsWithIdentifier: %{public}@
*** connectHealthService, multiple peripherals for identifier %@, %@
%{public}@: Attempt connection to peripheral (%{public}@) if service (%{public}@) enabled
*** Blocking connection to unauthorized device (%@) error: %@
*** Unrecognized data type (%d) and device (%@)
*** Unable to find peripheral %@
%{public}@: %{public}@: hkService: %{public}@, connectionInfo: %{public}@ -> sessionIdentifier: %lu
%{public}@: %{public}@: sessionIdentifier: %lu
%{public}@: %{public}@: healthService: %{public}@
%{public}@: retrievePeripheralsWithIdentifier: %{public}@
No peripheral found for identifier %@. Unpairing isn't necessary.
Peripheral %@ isn't paired. Unpairing isn't necessary.
Unpairing peer %@
%{public}@: %{public}@: deviceIdentifier: %{public}@, error: %{public}@
Peripheral was unexpectedly disconnected. sessionIdentifier =  %lu, peripheral = %@
%{public}@: %{public}@: error: %{public}@
%{public}@: %{public}@: session: %{public}@, duration: %d
%{public}@: %{public}@: peripheral: %{public}@, hkService: %{public}@, connectionInfo: %{public}@
*** Unsupported service type (%d) for peripheral %@.
%{public}@: no HDHealthPeripheral found for CBPeripheral %{public}@, so create one: %{public}@
Service could not be created from peripheral %{private}@ with advertisement data %{private}@
Discover peripheral services for %@
Connecting to %@
Disconnecting from %@
Begin connect to %@
*** %@, unknown state %{public}@ for %{public}@ state %d
(#w0) Tagging peripheral for mfa: %@
%{public}@: connectPeripheral: %{public}@ (hdPeripheral.cbPeripheral: %{public}@)
%@: %@ (%d) %@
%{public}@: (#w0) %{public}@: sessionIdentifier: %lu, error: %{public}@
%@: sessionIdentifier %d, error %@
*** Connection already closed for %d
*** %@, Peripheral not found for %d
Last connection pairingState=%ld, peripheral.state=%{public}@, info.connectionState=%{public}@
Transitioned to disconnecting. pairingState=%ld, state=%{public}@, connectionState=%{public}@, cancelPeripheralConnection=%{BOOL}d
Unpairing peer as we previously forced disconnect, but are still paired
Removing peripheral %@ (%@)
*** %@, Connection info not found for %d
Removing object from connection infos table
%@, %ld sessions remain: %@ (%d) %@
Checking pairing state %@ %ld
%s: unpairingNeeded=%{BOOL}d, forceDisconnection=%{BOOL}d
Unpairing peripheral %@
%{public}@: Canceling peripheral connection (forcing=%{BOOL}d for peripheral %@)
%{public}@ scanning for peripherals with services: %{public}@ options: %@
%@ stopping peripheral scan
No connection infos found for device uuid: %@
Ignoring received characteristic %@, state='%@'
%{public}@: %{public}@: op: %{public}@, sessionId: %lu, params: %{public}@
%{public}@: %{public}@: characteristic: %{public}@, sessionId: %lu, expectResponse: %{BOOL}d
%{public}@: %{public}@: %{public}@
BTLE became available
BTLE became unavailable: %{public}@
%{public}@: %{public}@: %{public}@: state: %{public}@
%{public}@: %{public}@: %{public}@: peripheral: %{public}@
Calling pair peer on %@
Not calling pair peer on %@, connectionOptions=%{public}@, pairingAttempted=%{BOOL}d, isPeripheralPaired=%{BOOL}d
%{public}@: %{public}@: %{public}@: peripheral: %{public}@, error: %{public}@
%{public}@: (#w0) %{public}@: %{public}@: peripheral: %{public}@, error: %{public}@
%{public}@: %{public}@: %{public}@: peripheral: %{public}@ (RSSI: %{public}@) with services %{public}@
%{public}@: %{public}@: peripheral: %{public}@, serviceUUID: %{public}@
Not notifying because health service is invalid %ld, peripheral: %@, serviceUUID: %@
%{public}@: %{public}@: peripheral: %{public}@, healthService: %{public}@, alwaysNotify: %{BOOL}d, discoveryInfos: %{public}@
Notifying client with server ID %ld of new peripheral: %@
Not notifying client with server ID %ld of new peripheral: %@ because none of these is true: alwaysNotify: %{BOOL}d, firstTime: %d discovery info always notify: %{BOOL}d
%{public}@: %{public}@: serviceUUID: %{public}@
%{public}@: %{public}@: hkService: %{public}@, connectionOptions: %lu
%{public}@: %{public}@: agent: %{public}@, peer: %{public}@
Ignoring peerDidCompletePairing for %@
Successfully paired: %@
%{public}@: %{public}@: agent: %{public}@, peer: %{public}@, error: %{public}@
Ignoring peerDidFailToCompletePairing for %@ %{public}@
peerDidFailToCompletePairing: %@ %{public}@
Ignoring peerDidUnpairCallback for %@
Peripheral did unpair: %@
Canceling peripheral connection for peripheral %@
Unexpected pairing type: %ld
Responding to pairing for peer: %{public}@, with type: %ld, accept: %{BOOL}d, data: %{public}@
Allowing pairing: %@
Adding peripheral UUID to %@ with id %@
Could not prepare statement: %{public}@: [%d, %s]
Transaction finished with active outstanding statement: %p %{public}s
%{public}@: Skipping.
%{public}@: Saving %ld records in %{public}@: %{public}@
%{public}@: Failed updating records in %{public}@: %{public}@
%{public}@: Finished saving updated records in %{public}@
%{public}@: %{public}@: Fetched records in database %{public}@
%{public}@: %{public}@: Beginning fetch of %ld header records (%ld already fetched).
%{public}@: Record: %{public}@ is from the future
wrappedRecord == nil
CKRecord is invalid
Error %{public}@ processing record %{public}@.
%{public}@: All fetches complete; fetched %ld header records
%{public}@: %ld
%3d. %{public}@
Cannot promote an unprotected transaction to a protected transaction
Caught exception while running transaction on-commit block: %@
Caught exception while running transaction on-rollback block: %@
long outermost database transaction: duration=%@, write=%{BOOL}d, protected=%{BOOL}d, priority=%{BOOL}d, cache=%ld, journal=%ld, queue=%s
Failed to create provenance for codable object collection from store %{public}@: %{public}@
No provenance information on codable object collection received from %{public}@
failed to look-up%s source %{public}@: %{public}@
missing source for object collection received from %{public}@
failed to find expected device "%{public}@": %{public}@
missing source/device provenance for object collection received from %{public}@, %{public}@/%{public}@.
Codable object %@ failed validation: %{public}@
failed to create client object with codable %@
%{public}@: Ignorning unknown data type code %lld
Failed to insert deleted samples during sync for store %{public}@: %{public}@
Failed to look up provenance for deleted samples from store %{public}@: %{public}@
failed to insert ECG sample from binary sample synced from store %{public}@: %{public}@
failed to insert objects synced from store %{public}@: %{public}@
%{public}@: Found incomprehensible required protocol version %ld (from %{public}@ on a %{public}@: '%{public}@')
%{public}@: Start: %{public}@: persistedStoreState (%{public}@, %llu)
%{public}@: Store: %{public}@
%{public}@: Active Sequence: %{public}@
%{public}@: detected sync protocol version change %d -> %d
%{public}@: Skipping pull; local anchors are up-to-date.
%{public}@: detected this is a pull of a new epoch %llu -> %llu
%{public}@: Failed to load persisted store state: %{public}@
%{public}@: %{public}@: is not in tombstone sequence or pull sequence, do not add
%{public}@: updatePersistedServerChangeToken: %{public}@ -> %{public}@
Error updating persisted server change token for store %{public}@ with error %{public}@
%{public}@: Fetched %lu record zone changes successfully
%{public}@: No applicable change records were fetched. This is unexpected; resetting change token to ensure that we don't miss anything on the next fetch.
%{public}@: %{public}@: No required changes.
%{public}@: %{public}@: %ld required changes.
%{public}@: error calling receivedSyncAnchorMapWithError: %{public}@
%{public}@: %lld %{public}@ - failed validity check: %{public}@
%{public}@: %lld %{public}@
%{public}@: %lld %{public}@ - no required changes in anchor map; will not apply
Codable sync anchor range contains invalid sync entity type (%lld) which will be ignored.
%{public}@: Found %ld push targets.
%{public}@: Found %ld pull targets.
%{public}@: 
%2d. %{public}@
%{public}@: %{public}@: Not a push candidate, wrong container '%{public}@'
%{public}@: %{public}@: Not a push candidate, wrong owner identifier '%{public}@'
%{public}@: %{public}@: Valid push candidate.
%{public}@: Looking for push targets for owner '%{public}@'
%{public}@: Could not create local push store: %{public}@ error: %{public}@
%{public}@: Could not validate state mismatch error when looking up local push store: %{public}@ error: %{public}@
%{public}@: Updated owner differentiator after detecting multiple push targets.
%{public}@: Failed to lookup store for store record: %{public}@ zone: %{public}@ error: %{public}@
Starting up XPC service scheduler (%@)
XPC activity %{public}@ checked in DISABLED.
%{public}@: Failed to set state as 'done' after firing while disabled.
XPC activity %{public}@ checked in for periodic run
%{public}@ fired with activity %@
Failed to defer activity %{public}@
Activity %{public}@ should not be deferred
%{public}@: Invalid activity result %ld; assuming done.
Failed to finish activity %{public}@
Failed to continue activity %{public}@
Attempted to perform activity %{public}@, but protected data was unavailable. Will wait for protected data availability.
[%{public}@] beginning activity
HDPeriodicActivity
[%{public}@] completed successfully in %0.3lfs.
[%{public}@] failed with an ignorable error after %0.3lfs: %{public}@
[%{public}@] failed with an error after %0.3lfs and will be retried: %{public}@
[%{public}@] failed with a deferrable error after %0.3lfs: %{public}@
name=%{public}@, result=%{public}@
[%{public}@] failed but will retry on the normal schedule with minimum interval %0.2lfs: %{public}@.
[%{public}@] failed and will retry after minimum interval %0.2lfs: %{public}@.
[%{public}@] failed with a deferrable error: %{public}@
[%{public}@] attempt %{public}@; new interval: %lfs
%{public}@ Not persisting unexpected objects [%@] from sensor datum'%@': %{public}@
%{public}@ Failed to associate heart event sample from sensor datum '%@': %{public}@
%{public}@: Fetched %ld repositories.
%{public}@: Discarding zone for invalid sharing state: %{public}@
Insert new device %@ failed: %{public}@
Inserted new device entity %lld for device: %{public}@
Missing database device entity %lld
Failed to insert codable device: %{public}@
Failed to track successful begin experience: timer does not exist.
Starting CM workout: %{public}@
Not starting CM workout %@ because workout %@ is in progress
Stopping CM workout: %{public}@
Not stopping CM workout %@ because workout %@ is in progress
%{public}@: Resuming from suspend
%{public}@ delivering %lu samples to client
%{public}@: Encountered error enumerating results: %{public}@
Failed to remove source WAL while rewriting HFD: %{public}@
%{public}@: Service %{public}@ connected but will be ignored (not in our pending session list: %{public}@)
%{public}@: Heart rate service %{public}@ connected.
%{public}@: Service %{public}@ disconnected but will be ignored (does not match our connected service: %{public}@)
%{public}@: Heart rate service %{public}@ disconnected.
%{public}@: One shot service %{public}@ disconnected; clearing one-shot service request list.
%{public}@: Client requested one-shot collection for %{public}@.
%{public}@: Attempting to connect to %ld heart rate services.
%{public}@: Failed to connect to health service '%{public}@': %{public}@
%{public}@: Starting BTLE heart rate data data collection with requested one-shot services.
%{public}@: Starting BTLE heart rate data data collection with all known services.
%{public}@: Failed to retrieve heart rate pairings to begin BTLE HR monitoring: %{public}@
%{public}@: No paired BTLE HR devices when collection is requested.
%{public}@: Stopping BTLE heart rate data data collection.
Heart rate: %@
Characteristic is the wrong type.
Heart rate datum could not be constructed.
Rejecting heart rate sensor datum of unexpected class %{public}@ (expected %{public}@)
Rejecting heart rate quantity %@ because it is not compatible with canonical unit %{public}@
Rejecting heart rate quantity %@ because it's value (%f) is less than 0.0
Failed to persist heart rate samples '%@': %{public}@
Disabled value was sent for a non-heart rate type: %d
%{public}@: Sync unavailable before setting a source share participant for this profile.
%{public}@: Finished successfully.
%{public}@: Failed with %ld errors: %{public}@.
%{public}@: Beginning %ld pipelines.
%{public}@: Failed to find source for UUID %{public}@: %{public}@
%{public}@: Failed to get source bundle identifier for UUID %{public}@: %{public}@
%{public}@: Failed to create source authorization predicate for "%{public}@": %{public}@
%{public}@: Failed to look up existing authorizations for "%{public}@": %{public}@
%@: skipping authorization for type %@ with status %@ request %@
%{public}@: Failed to create codable source for source %@: %{public}@
Ignoring %{public}@ objects (missing pull identifier)
Applying %lu objects for %{public}@
%{public}@: %{public}@ was abandoned. lastModifiedDate:(%{public}@), timeoutDateForOwnershipTransfer:(%{public}@)
%{public}@: store record: %{public}@ is abandoned, but is from the future and cannot be seized by this device.
%{public}@: store record: %{public}@ is abandoned, but it has no sequence records, so we don't know if we can safely seize it
%{public}@: store record: %{public}@ has been abandoned, but the local anchor map in the local store: %{public}@ is less than the received anchor map.
%{public}@: Local anchor map: %{public}@
%{public}@: Received anchor map: %{public}@
%{public}@: store record: %{public}@ was not found locally
%{public}@: store record: %{public}@ is also present in another container. Seize this.
%{public}@: store record: %{public}@ has been abandoned, and will be seized.
%{public}@: Failed to mark pending owner for store records: %{public}@
%{public}@: Saved record set does not match updated record set; missing %{public}@
%{public}@: Marked pending owner in %ld store records.
softlink:r:path:/System/Library/PrivateFrameworks/SOS.framework/SOS
softlink:r:path:/System/Library/PrivateFrameworks/SOS.framework/SOS
softlink:r:path:/System/Library/PrivateFrameworks/FriendKit.framework/FriendKit
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
BuiltInTaskServers
HDTaskServerClassProvider
HDBinarySampleEntity
_HDBinarySampleEntityEncoder
HDCloudSyncParallelOperation
HDSynchronousTaskGroupDelegate
NSObject
HDCodableFHIRIdentifier
NSCopying
HDMockProfile
HDMockPrimaryProfile
HDActivityCacheManagerProvider
HDPrimaryProfile
_HDEventsCollectionAssertion
HDWorkoutEventsManager
HDAssertionObserver
HDCloudSyncValidateSubscriptionsOperation
HDDocumentQueryServer
HDCodableMedicationDispenseRecord
HDWorkoutDataSource
HDWorkoutDataDestination
HDWorkoutRouteDataSource
HDWorkoutSessionObserver
HDLocationEventDelegate
HKDataFlowLinkProcessor
HKWorkoutRouteDataSourceServerInterface
Tinker
HDDemoDataAudiogramSampleGenerator
HDSQLiteDatabase
HDNanoRegistryPairedDeviceCapabilityProvider
HDPairedDeviceCapabilityProviding
HDCloudSyncRecord
HDProcedureRecordEntity
_HDProcedureRecordEntityEncoder
HDNSOperatingSystemVersion
HDDatabaseControlServer
HKDatabaseControlServer
HDExtensions
HDSerialQueueBlockDispatcher
HDBlockDispatcher
HDCloudSyncChangeRecord
HDCrossTrainerData
HDCodableError
HDCodableLocationDatum
HDSimpleGraphObject
HDCodableRoutineLocation
HDXPCProcess
HDCodingSupport
HDCoding
HDXPCAlarm
HDCodableReferenceRangeList
HDCloudSyncManagerMedicalIDSyncTask
HDSeriesQuantityDataAggregator
_HDSeriesQuantityDataAggregationState
HDCodableDeletedSample
HDCloudSyncPipelineStagePush
HDEnhancedFTMSData
HDDatumRendering
HDStatisticsQueryServer
HDDataProvenanceEntity
HDCloudSyncCodableLog
HDCodableRoutinePredictedLocation
HDDecoding
HDSQLiteQueryPlan
HDSQLiteQueryPlanRow
HealthDaemon
HDWorkoutBuilderEventEntity
HDCloudSyncPipelineStageDescribe
HDCodableSyncAnchorRangeMap
HDCodableTinkerPairingResponse
HDProfileAuthorizationEntity
Whitetail
HDDiagnosticTestReportEntity
_HDDiagnosticTestReportEntityEncoder
HDBackgroundObservationServer
HDCodableNanoSyncActivationRestore
HDFitnessMachineManager
HDFitnessMachinePairingManagerDelegate
HDFitnessMachineStateTimersDelegate
HDCloudSyncPrepareForSharingOperation
HDCategorySampleEntity
_HDCategorySampleEntityEncoder
HDDemoDataFoodObject
NSSecureCoding
NSCoding
HDWorkoutBuilderStatisticsCalculatorEntity
HDWorkoutPlugin
HDPlugin
MedicalID
HDCodableRoutineLocationResponse
HDLiveDataCollectorBuffer
HDDistinctableObject
HKDistincableObject
HKDistinctableObject
HDDeviceInformationService
HDCodableConditionRecord
HDHealthStoreProviderServer
HDAuthorizationStoreResetServer
HKAuthorizationStoreResetServer
HDLocationManager
CLLocationManagerDelegate
HDCloudSyncPreparePushZoneForStoreOperation
HDCloudSyncPushSequenceOperation
HDSyncSessionDelegate
HDAWDHealthKitAchievement
HDHealthServiceOOBInfo
HDClinicalGatewayEntity
HDDemoDataFoodSampleGenerator
HDCloudSyncDeleteZonesOperation
HDCodableSharingSetupMetadata
HDCodableRatioValue
HDCodableStartWorkoutAppResponse
HDCloudSyncUpdateLocalAnchorsOperation
HDCodableMetadataKeyValuePair
HDMedicationRecordEntity
_HDMedicationRecordEntityEncoder
HDBackgroundObservationServerExtensionManager
_HDDeleteSourcesWithUUIDsEntry
HDPassiveQuantityDataAggregator
HDGatedActivity
NanoSync
HDDeletedObjectEntity
HDDeletedObjectEntityPredicates
HDTinkerProfile
HDCodableMedicationDosage
HDCodableNanoSyncAnchor
HDQueryManager
HDProcessStateObserver
HDDiagnosticObject
_HDProcessQueryCollection
_HDQueryDatabaseAccessBlock
HDSQLiteEntityIndex
HDHeartRateMeasurement
HDAWDHealthKitCoachingFeatureGroup
HDMedicalIDDataManager
HDAnalyticsSubmissionCoordinatorDelegate
HDHealthDaemonReadyObserver
HDSourceQueryServer
HDDataObserver
HDMockIDSDevice
HDDatabaseCoalescedWritePool
_HDDatabasePendingWriteRecord
HDSortedSampleIterator
HDSampleIterator
HKIterator
HDIndoorBikeData
HDCloudSyncPipelineStagePrepareForSync
HDDemoDataReproductiveHealthSampleGenerator
HDFitnessMachineService
HDSQLiteDatabaseColumnSchema
HDSQLiteDatabaseTableSchema
HDSQLiteDatabaseIndexSchema
HDSQLiteDatabaseSchema
HDMockWorkoutDataDestination
HDMedicationOrderEntity
_HDMedicationOrderEntityEncoder
HDNanoUserDefaults
HDNanoUserDefaultsSyncEntity
HDUnprotectedNanoUserDefaultsSyncEntity
HDProtectedNanoUserDefaultsSyncEntity
HDDeepBreathingSessionServer
_HKDeepBreathingSessionServer
HDActivityStatisticsQueryServer
HealthService
HDCodableAuthorizationResponseMessage
0 0B
HDSourceEntity
_HDSourceEncoder
HDSourceSyncEntity
HDSyncEntity
HDNanoSyncManager
HDNanoSyncStoreDelegate
HDDatabaseProtectedDataObserver
HDIDSMessageCenterDelegate
HDForegroundClientProcessObserver
HDRemoteAuthorizationRequestContext
HDRemoteRoutineRequestContext
HDRemoteStartWorkoutAppRequestContext
HDRemoteCompanionUserNotificationRequestContext
HDRemoteTinkerOptInRequestContext
HDRemoteTinkerPairingRequestContext
HDRemoteTinkerEndToEndCloudSyncRequestContext
HDWorkoutBuilderSampleQueryServer
HDTaskServerObserver
HDWorkoutBuilderServerSampleObserer
_HDCarouselSessionAssertion
_HDDisableAOTAssertion
HDCarouselServicesManager
HDCloudSyncCodableMedicalID
HDStaticSyncControlServer
HKStaticSyncControlServer
HDUnknownRecordEntity
_HDUnknownRecordEntityEncoder
HDSQLiteJoinClause
HDClinicalAccountEntity
DemoData
Authorization
HDDatabaseCorruptionTTRPrompter
_HDDefaultDatabaseCorruptionDataSource
HDDatabaseCorruptionTTRPromptDataSource
HDDemoDataGeneratorState
_HDBackgroundRunningAssertion
HDBackgroundWorkoutRunner
HDUserCharacteristicsManager
HDUserCharacteristicSyncEntity
HDAWDHealthKitConcurrentCalendarItem
HDCloudSyncLookupParticipantOperation
HDCodableStartWorkoutAppRequest
HDAlarmEventEntity
HDClientAuthorizationOracle
HDFHIRCredentialEntity
HDCloudSyncDeleteRecordsOperation
HDContributorEntity
HDHealthRecordsNotificationManagerMigrationOperation
HDBackgroundTask
HDBackgroundTaskClient
HDBackgroundTaskScheduler
HDCloudSyncManagerAcceptSharesTask
HDCodableSourceAuthorization
HDDiffPrivReporter
HDWorkoutBuilderStatisticsDataSource
HDStatisticsCollectionCalculatorDataSource
HDHealthPeripheral
CBPeripheralDelegate
HDHeartRateVariabilityDataAggregator
HDCloudSyncCoordinator
APSConnectionDelegate
HDCloudSyncManagerTaskQueueDelegate
HDPeriodicActivityDelegate
HDDatabaseJournalMergeObserver
HDDemoDataStatisticsSampleGenerator
HDHealthRecordsNotificationManager
HDConceptIndexManagerObserver
HDOriginalFHIRResourceLastSeenEntity
HDWorkoutBuilderPersistedConfiguration
HDHeartRateSummaryQueryServer
HDActivityCacheManagerObserver
HDCloudSyncSessionContext
NSProgressReporting
HDAssociationEntity
_HDAssociationInsertionContext
_HDAssociationInsertionJournalEntry
HDAssociationSyncEntity
HDPendingAssociationEntity
HDAssociationEntityAssociationPredicate
HDAssociationEntityAssociationExistsPredicate
HDAssociationEntityIsAssociatedPredicate
_HDCorrelationInsertionJournalEntry
HDHealthServiceCharacteristic
HDCloudSyncRemoveInvalidShareParticipantsOperation
HDCodableCoverageRecord
HDCloudSyncMedicalIDRecord
HDDemoDataBaseSampleGenerator
HDDemoDataBaseSampleGeneratorObjectCollection
HDStaticSyncTask
HDStaticSyncExportTask
HDStaticSyncImportTask
_HDStaticSyncSession
_HDStaticSyncStore
HDSyncStore
HDXPCListener
NSXPCListenerDelegate
HDCloudSyncCodableRegistry
HDCodableMedicalCoding
HDTinkerPairedUserInfo
HDHealthStoreClient
HDWorkoutSessionTaskServer
HKWorkoutSessionServerInterface
HDSourceStoreServer
HKSourceStoreServer
HDCodableObjectCollection
HDCloudSyncCreateZonesOperation
HDCodableMedicalIDData
DatumRendering
HDCloudSyncMedicalIDFetchOperation
Yukon
HDPIIRedactor
HDAWDHealthKitWorkout
HDOriginalFHIRResourceEntity
HDCloudSyncAddSharingParticipantOperation
HDCloudSyncRepository
HDCloudSyncObserverTaskServer
HKCloudSyncObserverServerInterface
HDCloudSyncManagerObserver
HDCodableRoutinePredictedLocationsResponse
HDCloudSyncRequestDataUploadOperation
HDCloudSyncZoneIdentifier
HDCloudSyncZone
HDAlarmEvent
HDDatabaseMigrationTransaction
HDConceptIndexResetOperation
HDUnitPreferencesManager
HDUnitPreferencesSyncEntity
HDCodableEmergencyContact
Schema
BuiltInEntities
HDDeviceStoreServer
HKDeviceStoreServer
HDCloudSyncCodableProfileIdentifier
HDAppSubscription
HDOnboardingCompletionManager
HDOnboardingCompletionJournalOperation
HDFitnessMachineDataCollector
HDDataCollector
HDMetricsCollector
HDCloudSyncPipelineStageAcceptShares
HDStairClimberData
HDSecondaryDevicePairingAgentTaskServer
HKSecondaryDevicePairingAgentServerInterface
HKUnitTestingTaskServerInterface
HDSecondaryDevicePairingRequest
HDDaemon
HDApplicationStateMonitorProvider
LSApplicationWorkspaceObserverProtocol
HDHealthDaemon
1 1B
HDSampleEntity
_HDSampleEntityEncoder
_HDSampleTypesDeletionEntry
HDSampleEntityPredicates
Monarch
HDDaemonConnectionManager
HDXPCListenerDelegate
HDXPCListenerClientProvider
HDCodableMedicalRecord
HDContributorManager
HDIDSPersistentDictionary
Boulder
HDHeartRateControlPoint
DatabaseProperties
HDWorkoutCondenserControlServer
HKWorkoutCondenserControlServer
HDCodableAuthorization
HDCodableFHIRResource
HDDiagnosticManager
HDCloudSyncSequenceRecord
HDCodableReferenceRange
HDUserNotification
HDMetadataKeyEntity
HDMedicalIDDataMigrator
HDDatabaseLegacyJournalFile
HDJournalChapter
HDFeatureAvailabilityManager
HDOnboardingCompletionManagerObserver
HDPairedDeviceCapabilityProvidingDelegate
HDFeatureAvailabilityExtension
HKFeatureAvailabilityProviding
HDCodableFHIRResourceForAPI
HDSimpleGraphNode
HDCodableNanoSyncChange
HDConceptIndexEntity
HDCloudSyncDataUploadRequestRecord
HDAnchoredObjectQueryServer
HDDatabaseSchemaProvider
HDDatabase
HDContentProtectionObserver
HDSQLiteDatabaseDelegate
HDSQLiteDatabasePoolDelegate
HDSQLiteDatabaseProvider
HDDatabaseJournalDelegate
HDHFDataStoreDelegate
HDDatabaseMigrationTransactionDelegate
HDHealthDatabase
HDDatabaseVFS
_HKBinarySample
HDMigrationManager
HDCodableCompanionUserNotificationResponse
_HDMirroredProgress
HDDemoDataSleepSampleGenerator
HDCloudSyncManagerResetTask
HDSourceOrderManager
_HDCachedSourceOrder
_HDSourceOrderTransactionCache
HDAppSubscriptionManager
HDQuantitySeriesEditorTaskServer
HKQuantitySeriesSampleEditorTaskServerInterface
HDAWDHealthKitStandHourEvent
HDCodableTimestampedKeyValuePair
HDAWDHealthKitRoutineTransitionEvent
HDDataProvenanceCache
HDTreadmillData
EmergencyContactConsolidation
HDDatumGenerating
HDSmoothingTask
HDWorkoutLocationSmoother
CLLocationSmootherDelegate
CLLocationManagerDelegateInternal
HDRemoteFeatureAvailabilityAssetManager
_HDRemoteFeatureAvailabilityAssetManager
HDEntitlementStoreServer
HKEntitlementStoreServer
HDCreateWorkoutOperation
HDCloudSyncStoreRecord
HDMockDaemon
HDWorkoutBuilderAssociatedSeriesEntity
HDCodableMedicalCodingList
HDAWDHealthKitBatteryStateEvent
HDSyncEntityIdentifier
HDCodableCompanionUserNotificationRequest
HDHealthOntologyCountryConfiguration
HDClinicalAuthorizationSessionEntity
HDCodableDiagnosticTestResult
HDCloudSyncValidatePushTargetOperation
HDProcessStateManager
_HDProcessInfo
1 1`
HDDataEntity
HDSQLiteEntity
_HDDataEntityEncoder
_HDDataInsertionJournalEntry
_HDDataBatchInsertionJournalEntry
_HDDataDeletionJournalEntry
HDCodableTinkerOptInRequest
HDActiveDataAggregator
HDDataAggregationState
HDDataAggregationResult
_HDAggregationStateKey
HDCurrentActivityCacheDemoQueryServer
HDDeviceQueryServer
HDDemoDataSleepParameters
HDDemoDataPerson
HDDemoDataWorkoutPrototype
TestSupport
HDQuantityDatumPassthroughAggregator
HDCodableCompanionUserNotificationConfiguration
HDIDSParticipant
HDCalorimetryDataCollector
HDCoreMotionDatum
HDCoreMotionDataSource
HDAWDHealthKitDatabaseLastWeekUsageEvent
HDCloudSyncPipelineStageRegisterSubscriptions
HDCodableWorkoutEvent
HDServiceConnectionManager
HDSampleTypesQueryServer
HDActivityAWDActivityCompanionSharingEvent
HDSyncStoreEntity
HDCloudSyncAcceptSharesOperation
HDExtendedDatabaseTransaction
HDAWDHealthKitWristOnSettings
HDActivitySummaryBuilder
HDCodableMetadataDictionary
HDSwimmingWorkoutEventCollector
HDAWDHealthKitAchievementStatistics
HDInsertCodableContributorsOperation
HDNanoPairingEntity
HDDemoDataActivitySampleGenerator
_HDDemoDataActivityWorkoutState
HDDataEntityInsertionContext
Erie
HDDemoDataMobilitySampleGenerator
HDWorkoutDataAccumulator
HDLiveWorkoutDataSource
HKLiveWorkoutDataSourceServerInterface
1 3@`
 3@`
Sync
HDOnboardingCompletionEntity
HDOnboardingCompletionEntityEncoder
HDOnboardingCompletionSyncEntity
HDAsynchronousTaskTree
HDAsynchronousTask
HDWorkoutEntity
_HDWorkoutEntityEncoder
HDActivityCacheActiveSourceCalculator
HDHeartRateService
HDCloudSyncPipeline
HDEntityEncoder
HDSessionAssertionWrapper
HDSessionAssertionGroup
HDCodableBinarySample
_HDFTMProducerMetricTracker
HDFitnessMachineDataProducer
HDWorkoutDataAccumulatorObserver
HDCloudSyncPipelineStageWaitForDeviceToDeviceEncryptionAvailability
HDMetadataValueEntity
HDMetadataValueStatement
HDMetadataValueEntityPredicate
HDMetadataPredicate
HDAWDHealthKitClinicalOntologyIndexingEvent
HDCurrentActivitySummaryHelper
HDDataProvenanceManager
_HDDataProvenanceKey
_HDAppAssertion
UnitTesting
HDCodableGeneratedObjectCollection
HDSeriesSampleEntity
_HDSeriesFreezeJournalEntrySeries
HDQuantityDatum
HDQuantityAggregationResult
HDAWDHealthKitWristEvent
HDSeriesBuilderServer
HKSeriesBuilderServerInterface
HDSourceManager
HDCloudSyncPipelineStageReset
HDAssertion
HDCloudSyncCodableSequence
HDKeyValueDomainTaskServer
HKKeyValueDomainServerInterface
HDXPCEventPublisher
HDCloudSyncDisableSyncLocallyOperation
HDCloudSyncSaveRepairedRecordsOperation
HDCodableCoverageClassification
HDInsertValuesToQuantitySampleSeriesOperation
HDSleepAlarmAWDSleepAlarmMonthlyConsistencyEvent
HDAppExtensionAssertion
HDJournalChapterEnumerator
HDCodableNanoSyncStatus
HDFitnessMachineCharacteristicField
HDFitnessMachineCharacteristicUInt8Field
HDFitnessMachineCharacteristicUInt16Field
HDFitnessMachineCharacteristicInt16Field
HDFitnessMachineCharacteristicUInt24Field
HDFitnessMachineCharacteristicDoubleField
HDConceptIndexEntry
HDCloudSyncManagerStatusTask
HDCurrentActivitySummaryQueryServer
HDCurrentActivitySummaryHelperObserver
HDActivityAWDActivityExerciseMinuteHour
HDCloudSyncPushStoreOperation
HDDemoDataGeneratorConfiguration
HDCodableAuthorizationCompleteMessage
HDSQLiteEntityForeignKey
HDCoreMotionDataCollector
HDNanoSyncSession
HDCloudSyncPullChangeRecordOperation
HDGymKitDataSource
HKGymKitDataSourceServerInterface
HDDefaultWorkoutSessionController
HDWorkoutEventCollectorDelegate
HDWorkoutSessionController
HDProfile
Peace
HDWorkoutEventEntity
HDCloudSyncFinishOwnerTakeoverOperation
HDAllergyRecordEntity
_HDAllergyRecordEntityEncoder
HDHeartbeatDatum
HDHeartbeatSequenceSensorDatum
HDHeartbeatSequenceDataAggregator
HDActivityCacheManager
HeartRate
HDWorkoutRouteBuilderServer
HKWorkoutRouteBuilderServerInterface
HDFitnessMachineDataCharacteristicBase
HDMedicalIDStoreTaskServer
HKMedicalIDStoreServerInterface
HDDatabaseTransactionContext
NSMutableCopying
HDMutableDatabaseTransactionContext
HDCloudSyncCodableRegisteredStore
HDDatabaseJournal
HDDevicelessProfile
HDSyncSession
HDActiveQuantityDataAggregator
Azul
HDAWDHealthKitNotificationView
HDSyncCodable
HDSeriesBuilderEntity
HDFreezeSeriesOperation
HDQuietModeManager
_HDDataEntitySyncMessageBuilder
HDFitnessMachineSimulatorSupport
_HDAWDPeriodicAction
HDAWDSubmissionManager
_HDSleepReportResult
_HDSleepReportBuilder
HDElectrocardiogramQueryServer
HDDNDModeAssertionService
_HDSQLiteEntityColumn
HDCodableCodedValue
Emet
HDDataEntityDeletionContext
HDCodableMedicationOrder
HDQuantitySeriesManager
HDWorkoutPluginDaemonExtension
HDHealthDaemonExtension
HDAuthorizationManager
_HDAuthorizationRequest
_HDAuthorizationRequestGroup
_HDObjectAuthorizationRequest
_HDObjectAuthorizationPromptSession
_HDRemoteAuthorizationRecord
_HDRemoteAuthorizationRequestRecord
HDDatabaseChangesQueryServer
HDCodableSharingSetupInvitationToken
HDCloudSyncMasterRecord
HDNanoSyncControlServer
HKNanoSyncControlServer
NanoSyncSupport
HDNanoSyncEntity
HDAWDHealthKitActivityRingEvent
HDAssertionManager
_HDAssertionRecord
HDDemoDataAudioExposureSampleGenerator
HDFitnessMachineStatus
HDCodableSource
Badging
HDCloudSyncMedicalIDPushOperation
_HDAlertSuppressorAssertion
HDAlertSuppressor
HDElectrocardiogramSessionServer
HKElectrocardiogramSessionServerInterface
HFDMigrationSupport
HDCloudSyncOwnerIdentifier
HDTinkerPrivacyAlertCoordinator
HDCodableStaticSyncChangeSet
HDBodySensorLocation
HDXPCEventManager
Platform
HDDemoDataHealthDocumentSampleGenerator
HDAppLauncher
HDClientKeepAliveAssertion
HDDemoDataBloodSampleGenerator
HDCodableCoverageClassificationList
HDAnalyticsWriter
HDFitnessFriendActivitySnapshotEntity
_HDFitnessFriendActivitySnapshotEntityEncoder
HDCloudSyncManager
_HDSortedSampleIteratorInternalPager
HDCloudSyncSynchronizeProfilesOperation
HDCodableEntityIdentifier
HDPairedSyncManager
PSYSyncCoordinatorDelegate
HDCloudSyncPipelineStageCheckForRequiredProfileDeletion
HDMedicationDispenseRecordEntity
_HDMedicationDispenseRecordEntityEncoder
HDQuerySupport
HDCloudSyncFilterZonesOperation
HDConceptStoreTaskServer
HDHealthOntologyManagerObserver
HKConceptStoreServerInterface
HDDatabaseJournalDatabase
HDCodableDevice
HDDiagnosticTestResultEntity
_HDDiagnosticTestResultEntityEncoder
HDWatchAppStateMonitor
Workaround50841036
FBSDisplayLayoutObserver
HDCloudSyncTarget
HDProfileStoreServer
HKProfileStoreServer
HDProfileManagerObserver
HDSampleCountQueryServer
HealthDaemonSimulatorSupport
HDNanoSyncDescription
HDSyncChange
HDSyncAnchorMap
HDNanoSyncSupport
NanoSyncPersistentInfo
HDNanoSyncPersistentUserInfoCopying
HDObserverQueryServer
HDQuantitySeriesObserver
HDContributorReference
HDUnknownHealthService
HDAWDHealthKitApplicationLaunchEvent
HDConceptIndexManager
HDCloudSyncDeleteSequenceOperation
HDCloudSyncPipelineStage
HDMedicalIDSyncEntity
HDDatabaseMigrationStep
HDActivityAWDActivityAchievementCountEvent
HDSQLiteMetaEntity
HDMaintenanceWorkCoordinatorBlockDispatcher
HDDemoDataGeneratorWorkoutConfiguration
_HDHeartRateRecoveryAssertion
HDHeartRateRecoveryManager
HDCodableQuantitySeriesDatum
HDWorkoutBuilderAssociatedObjectEntity
HDNotificationManager
HDCodableQuantitySample
HDSynchronousTaskGroup
HDAWDHealthKitRoutineLocation
HDCodableCategorySample
HDHeartbeatSeriesQueryServer
HDCodableActivityCache
HDDatabaseTransactionStatistics
HDDatabaseTransactionContextStatistics
HDDataCollectorAggregatorRecord
HDDataCollectorMultiplexer
HDCodableMedicalDateInterval
HDCodableCoding
HDDataOriginProvenance
HDTMockCMNatalieData
HDTMockCMNatalimeter
HDMaintenanceWorkCoordinator
HDMaintenanceOperation
_HDMaintenanceWorkCoordinatorAsynchronousOperation
_HDMaintenanceWorkCoordinatorSynchronousOperation
HDCodableOnboardingCompletion
BuiltInPlugins
HDHealthStoreEndpoint
HDHealthStoreEndpointInterface
_HKXPCExportable
HDHealthStoreErrorEndpoint
HDCodableClinicalRecord
HDDemoDataFoodDatabase
HDCloudSyncControlTaskServer
HKCloudSyncControlServerInterface
HDCodableMedicationRecord
Butler
HDWorkoutSessionEventEntity
HDCloudSyncManagerDisableAndDeleteTask
HDCodableTinkerEndToEndCloudSyncRequest
HDWorkoutRouteQueryServer
HDCloudSyncCodableStore
HDCodableSemanticDate
SQLitePredicate
HDGymKitMetricsDataSource
HDMetricsCollectorObserver
HDUnitStringEntity
HDAWDHealthKitNotificationResponseFlags
HDCodableAllergyRecord
HDCodableActivityStatisticsQuantityInfo
HDFitnessMachinePairingManager
HDFitnessMachineConnectionInitiatorProtocol
HDFitnessFriendAchievementEntity
_HDFitnessFriendAchievementEntityEncoder
HDHealthEntity
HDHealthEntityEncoding
Conveniences
TimeShift
HDPluginManager
HDAWDHealthKitRoutineLocationVisitEvent
HDDemoDataHeartSampleGenerator
HDDiagnosticStoreServer
HKDiagnosticStoreServer
HDStatisticsCalculatorEntity
HDQuantitySeriesBuilderTaskServer
HKQuantitySeriesSampleBuilderTaskServerInterface
HDQueryControlServer
HDQueryServerDelegate
HDTaskServerDelegate
HDTaskServerEndpointDelegate
HDCloudSyncPipelineStageDisableSyncLocally
HDCodableNanoSyncChangeSet
HDClinicalDeletedAccountEntity
HDCloudSyncManagerSyncTask
HDActivityCacheDataSource
HDActivityCacheStatisticsBuilderSourceOrderDelegate
HDXPCAlarmScheduler
HDXPCAlarmEvent
HDCodableLocationSeries
HDCloudSyncShareParticipantManagerTaskServer
HKCloudSyncShareParticipantManagerServerInterface
HDDemoDataBodySampleGenerator
HDCodableClinicalDeletedAccount
HDLocationSeriesSampleEntity
HDSeriesEntity
_HDLocationSeriesSampleEntityEncoder
_HDLocationInsertionJournalEntry
HDHealthOntologyConfiguration
HDQuantitySampleSeriesEntity
HDSeriesFreezeResult
_HDQuantitySampleSeriesEntityEncoder
HDQuantitySampleEntity
HDSimpleGraphDatabase
HealthOntologyAdditions
HDQueryServerClientState
HDBuiltInQueries
HDMetadataManager
HDCodableAllergyReaction
HDCloudSyncOperationConfiguration
HDDataTypeSourceOrderEntity
HDDataTypeSourceOrderSyncEntity
HDMultiTypeSortedSampleIterator
HDRestorableIterator
HDSleepScheduleEntity
_HDSleepScheduleEntityEncoder
_HDStatisticsSyntheticQuantityType
HDAnalyticsSubmissionCoordinator
HDPassiveDataAggregator
HDReadAuthorizationStatus
HDFitnessMachineConnectionInitiatorServer
HKFitnessMachineConnectionInitiatorServerInterface
HDDataAggregator
HDDataAggregatorConfiguration
HDDataCollectorState
HDDataCollectorRecord
HDDataCollectorSensorDatum
HDCollectedSensorDatum
HDAgeGatingManager
HDCodableCategoryDomainDictionary
HDAWDHealthKitWeeklySummaryDetail
HDCodableRoutineRequestMessage
HDFitnessMachineSession
_HDUserDefaultUpdatedJournalEntry
_HDUserDefaultRemovedJournalEntry
_HDSetCharacteristicJournalEntry
_HDActivityCacheUpdateJournalEntry
_HDAchievementInsertionJournalEntry
_HDAchievementProgressLocalJournalEntry
HDCloudSyncPipelineStageMedicalID
HDCodableCDADocumentSample
HDContentProtectionManager
_HDContentProtectionObserverWrapper
HDAWDHealthKitExperimentalCondition
HDCodableDiagnosticTestReport
HDAuthorizationStoreWriteServer
HKAuthorizationStoreWriteServer
HDCloudSyncContext
HDCodableClinicalGateway
HDDataManager
_HDDataManagerDeletionJournalEntry
HDDataDeletionConfiguration
HDHealthRecordsProfileExtension
HDAuthorizationServer
Privileged
HDCloudSyncOperation
HDActivitySummaryQueryServer
HDCloudSyncRemoveSharingParticipantsOperation
_HDDataFaker
_HDDemoDataModuleDelegate
_HDDemoDataModule
_HDDemoOdometerModule
_HDDemoSwimmingModule
_HDDemoStepDataModule
_HDDemoCalorieDataModule
_HDDemoHeartRateDataModule
HDKeyValueDomain
HDMultiTypeSampleQueryServer
HDSQLiteVFS
HDCloudSync
HDQueryServer
HKQueryServerInterface
HDTaskServer
HDHealthOntologyManagerConceptSampleRelationship
HDHealthOntologyManager
HDAudioExposureAggregator
HDSimpleGraphRelationship
2 0@
HDQuantitySampleValueEnumerator
HDFreezeQuantitySampleSeriesOperation
_HDHealthServiceDataUpdate
HDNanoHealthNotification
HDWorkoutObserverServer
_HKWorkoutObserverServerInterface
HDCurrentWorkoutObserver
HDCodableCodedQuantity
HDFitnessMachineSessionRecoveryConfiguration
HDCodableQuantity
HDActivityAWDActivityFitnessDailyEvent
HDJournalableOperation
HDCloudSyncCodableChange
HDCodableECGSample
HDSyncPredicate
HDDiscardWorkoutOperation
HDCodableProcedureRecord
HDCodableObjectAuthorization
HDCloudSyncFetchChangeRecordsForZonesOperation
HDSleepAlarmAWDSleepAlarmStatistics
HDProfileManager
HDObjectAuthorizationEntity
HDObjectAuthorizationSyncEntity
HDObjectAuthorizationRecord
HDObjectAuthorizationJournalEntry
HDCodableWorkout
HDSimpleGraphAttribute
HDCodableProvenance
HDQuantitySeriesSampleQueryServer
HDCodableClinicalAccount
HDDataExternalSyncIdentifierEntity
HDDataExternalSyncIdentifierEntityPredicate
HDCloudSyncShareToParticipantOperation
HDSkiingWorkoutEventCollector
HDVaccinationRecordEntity
_HDVaccinationRecordEntityEncoder
HDCodableMessageVersion
HDCodableObjectSourceAuthorization
HDCloudSyncStore
HDOdometerDataCollector
HDJournalEntry
HDCloudSyncDisableAndDeleteOperation
HDCloudSyncMedicalIDPersistOperation
HDActivityCacheEntity
_HDActivityCacheEntityEncoder
Cinar
HDNotificationStoreServer
HKNotificationStoreServer
HDOntologyLifecycleManager
HDHealthRecordsAccountEventObserver
HDGymKitWorkoutSessionController
HDFitnessMachineSessionObserver
HDWorkoutSessionStateController
HDDistinctByKeyPathsIterator
HDMedicalRecordEntity
_HDMedicalRecordEntityEncoder
HDCloudSyncPipelineStagePrepareForSharing
HDDatabaseSchemaManager
HDCloudSyncRepairStoreRecordsOperation
HDConditionRecordEntity
_HDConditionRecordEntityEncoder
HDBatteryService
HDActivityAWDActivityCompanionInvitationEvent
HDAWDHealthKitIngestionLatencyEvent
HDDemoDataGenerator
HDCloudSyncResetOperation
HDCodableAllergyReactionList
HDPowerSavingModeManager
HDCodableRoutineScenarioTriggeredRequest
HDCodableTinkerEndToEndCloudSyncResponse
HDAuthorizationStoreReadServer
HKAuthorizationStoreReadServer
HDCodableCorrelation
HDRestorableAlarmScheduler
HDAccountOwnerEntity
_HDAccountOwnerEntityEncoder
HDDeviceManager
HDCodableRoutineResponseMessage
HDWorkoutSessionConfiguration
HDStatisticsCollectionQueryServer
_HDStatisticsCollectionQueryPendingQuantity
_HDStatisticsCollectionQueryPendingSeries
HDTaskServerRegistry
HDActivityCacheStatisticsBuilder
HDCloudSyncCompoundOperation
HDStepClimberData
HDCodableSyncAnchorRange
HDSleepAlarmAWDSleepAlarmNightEvent
HDStatisticsCollectionCalculatorDefaultSourceOrderProvider
HDStatisticsCollectionCalculatorSourceOrderProvider
HDLegacyClinicalCredentialManager
HDSyncEntityProvider
HDDaemonSyncEntityManager
HDDateRangeQueryServer
HDSeriesQuantityEventObserver
HDHFDataStore
HDInsertDeleteAndAssociateObjectsOperation
HDOntologyAssetManager
HDHealthDaemonAdditions
HDMedicalIDSetupStatusTaskServer
HKMedicalIDSetupStatusServerInterface
HealthKitTests
HDCloudSyncStartSequenceOperation
HDCloudSyncPipelineStageDisableAndDelete
HDCloudSyncManagerShowTask
HDAWDHealthKitNotificationEvent
HDCodableContributor
HDCorrelationQueryServer
HDAutoBugCaptureReporter
HDCorrelationSampleEntity
_HDCorrelationSampleEntityEncoder
HDQuantityDistributionCalculator
HDAWDHealthKitCoachingEvent
HDCloudSyncDeleteEmptyZonesOperation
HDWorkoutBuilderEntity
HDWorkoutBuilderAssociatedSamplePredicate
HDWorkoutBuilderAssociatedSampleTemporaryTableEntity
HDDemoDataFormula
HDQuantitySampleSeriesDataEnumerator
HDServiceEntity
_HDServiceEntityEncoder
HDCodableDateComponents
HDHealthDataCollector
HDLiveDataCollector
HDAggregateDataCollector
2A!`
HDDatabasePruningManager
CloudSync
HDConceptIndexManagerState
HDRestorableAlarm
HDCodableVaccinationRecord
HDCodableMedicalCodingListList
HDFitnessMachineConnectionServer
HKFitnessMachineConnectionServerInterface
HDFitnessFriendWorkoutEntity
_HDFitnessFriendWorkoutEntityEncoder
HDAWDHealthKitClinicalOntologyDownloadEvent
Additions
HDDemoDataSymptomsSampleGenerator
UserCharacteristics
HDDemoManager
HDSQLitePredicate
HDSQLiteFalsePredicate
HDSQLiteTruePredicate
HDSQLitePropertyPredicate
HDSQLiteComparisonPredicate
_HDSQLiteComparisonPredicateLikeWithEscape
_HDSQLiteComparisonPredicateIfNull
_HDSQLiteComparisonPredicateCoalesce
HDSQLiteContainsPredicate
HDSQLiteNullPredicate
HDSQLiteCompoundPredicate
HDSQLiteRawPredicate
HDSQLiteJoinPredicate
Convenience
Workout
HDStatisticsCollectionCalculator
HDStatisticsSourceOrderProvider
HDBatchedQueryServer
HDClinicalRecordEntity
_HDClinicalRecordEntityEncoder
HDCloudSyncUpdateSharingStatusOperation
HealthKit
HDDataEntityEnumerator
HDCurrentActivityCacheQueryServer
_HDHealthServiceWriteOperation
HDHealthService
HDHSCharacteristicsDelegate
HKConceptIndexable
HKCodedObject
HDConceptIndexer
HDDaemonTransaction
HDFeatureAvailabilityExtensionProvider
HDProfileExtension
HDFeatureAvailabilityStoreServer
HKFeatureAvailabilityStoreServer
HDFeatureAvailabilityExtensionObserver
HKFeatureAvailabilityProvidingObserver
HDDemoDataManager
HDAppleExerciseTimeDataAggregator
HDBackgroundObservationServerExtension
HDCodableWorkoutConfiguration
HDWorkoutRouteBuilderEntity
HDCodableRoutineLocationRequest
HDDevicePowerMonitor
HDCloudSyncPullSequenceOperation
HDCloudSyncManagerTask
HDCloudSyncManagerTaskQueue
HDCloudSyncPipelineStageFetch
HDWorkoutSessionEntity
HDCloudSyncLeaveAllSharesOperation
HDActivityCacheHeartRateStatisticsBuilder
HDWorkoutBasicDataSource
HDClientDataCollectionObservationStateMonitorDelegate
HDCloudSyncSession
HDTTRPromptController
HDEurotasService
Future
HDCloudSyncRegisterSubscriptionsOperation
HDWorkoutBuilderServer
HKStateMachineDelegate
HKWorkoutBuilderServerInterface
HDActivityDemoDataStore
HDKeyValueEntity
HDProtectedKeyValueEntity
HDUnprotectedKeyValueEntity
_HDKeyValueEntityEncoder
HDKeyValueSyncEntity
HDUserDefaultsSyncEntity
_HDKeyValueJournalEntry
HDIDSMessageCenter
IDSServiceDelegate
HDIDSOutgoingRequest
HDIDSIncomingRequest
HDIDSIncomingResponse
HDIDSOutgoingResponse
HDIDSPBMapping
HDIDSMessagePersistentContext
HDIDSError
HDWorkoutSessionControllerEntity
HDCloudSyncDetectSyncDisabledOperation
HDAWDHealthKitUserCharacteristics
_HKBuilders
_HKFilterBuilding
HDQuantityDistributionQueryServer
_HDQuantityDateIntervals
_HDQuantityIntervalPair
_HDSeriesFreezeJournalEntry
HDCodableCodedValueCollection
HDCodableInspectableValue
HDFitnessMachineConnection
HDCodableHealthObject
HDCodableSleepSchedule
HDContributorSyncEntity
HDCurrentActivitySummaryDemoQueryServer
HDCloudSyncShareSetupMetadata
HDDaemonSyncEngine
HDSyncEngine
Health
HDWorkoutManager
HDDevicePowerObserver
HDSchoolTimeObserverDelegate
HDDatabaseMigrator
HDCodableRoutineLocationVisit
HDDeletedSampleEntity
_HDDeletedSampleEntityEncoder
_HDDeletedSampleInsertionJournalEntry
HKUUIDProvider
OkemoZurs
HDCodableTinkerPairingRequest
HDActivityAWDActivitySharingSnapshotEvent
HDLocationDataCollector
HDLocationManagerObserver
HDActivitySummaryQueryHelper
HDSyncAnchorEntity
HDWorkoutSessionServer
HDWorkoutEventCollector
HDAutoPauseWorkoutEventCollector
CMWorkoutManagerDelegate
Eagle
HDCloudSyncMedicalIDMergeOperation
HDCloudSyncPipelineStagePull
HDCloudSyncPipelineStageLookupParticipant
HDCloudSyncRegistryRecord
HDHealthDataCollectorProvider
HDDataCollectionManager
HDDataCollectionObserverState
_HDDataCollectionObserverWrapper
HDDataCollectionAssertion
HDCloudSyncIgnoredErrorsOperation
HDCloudSyncCloudState
HDAWDHealthKitActivityCacheEvent
HDSampleQueryDescription
HDDemoDataOtherAndAdditionalSampleGenerator
HDStandardTaskServer
HDCloudSyncStoreEntity
_HDCloudSyncStorePersistableState
HDCloudSyncPipelineStageLeaveShares
HDCodableMedicalDate
HDHeartDailyAnalytics
HDSchoolTimeObserver
SCLSchoolModeDelegate
Database
HDClientDataCollectionTaskServer
HKDataCollectorTaskServerInterface
ClientDataCollection
HDAppAssertionManager
HDAppExtensionAssertionDelegate
HDCodableInspectableValueCollection
HDDatabaseValueCache
HDDatabaseValueCacheTransactionStorage
HDNanoSyncStore
NRDevicePropertyObserver
HDSQLiteOrderingTerm
HDHealthStoreServer
HDUnitPreferencesManagerObserver
HDSampleSaving
HDHealthStoreServerInterface
HDIDSReachabilityOperation
IDSBatchIDQueryControllerDelegate
HDNanoSyncRestoreSession
HDFitnessMachineStateTimer
HDFitnessMachineStateTimers
HDHealthServicesServer
HKHealthServicesServerInterface
HDCodableFitnessFriendWorkout
HDPedometerDataCollector
HDUserCharacteristicsProfileObserver
HDAWDHealthKitExperimentalConditionEvent
HDCloudSyncSubscriptionRecord
HDSQLiteStatement
HDWorkoutCondenser
_HDWorkoutCondensationConfiguration
_HDWorkoutCondenserBufferDatum
_HDWorkoutCondenserAnalyticsAccumulator
HDClientDataCollectionObservationStateMonitor
HDCodableFitnessFriendAchievement
HDCodableFHIRIdentifierList
HDXPCClient
HDCodableMedicationDosageList
HDCodableClinicalContact
HDDemoDataPathologySampleGenerator
HDDemoData
HDCloudSyncPipelineStageRequestDataUpload
HDCodableUnknownRecord
HDPowerAssertion
HDCodableNanoSyncMessage
HDGymKitSettings
HDSQLiteQuery
HDSQLiteQueryDescriptor
SQLiteQueryAdditions
HDCodableAuthorizationRequestMessage
HDCoverageRecordEntity
_HDCoverageRecordEntityEncoder
HDDataCollectorConfiguration
HDDaemonSyncMessageHandler
HDSyncMessageHandler
HDSharedDataPrivacyNotification
MigrationUtilities
HDTaskServerEndpoint
Tigris
HDCodableStringList
HDCodableFitnessFriendActivitySnapshot
HDCloudSyncHandleMissingManateeIdentityOperation
HDCloudSyncFetchZonesOperation
HDIdentifierTable
HDHealthServiceManager
CBCentralManagerPrivateDelegate
CBCentralManagerDelegate
CBPairingAgentDelegate
_HDHealthServiceDiscoveryInfo
_HDHealthServiceConnectionInfo
HDSQLiteStatementCache
_HDSQLiteStatementCacheStorage
HDCloudSyncConditionalOperation
HDSQLiteDatabasePool
_HDSQLiteDatabaseWrapper
HDSharedDataOptInNotification
HDCDASampleEntity
_HDCDASampleEntityEncoder
HDCloudSyncMarkAllOwnersDisabledOperation
HDCloudSyncFetchHeaderRecordsOperation
HDDatabaseTransaction
HDAppSubscriptionEntity
HDAppSubscriptionAppLaunchEntity
HDStatisticsCollectionCalculatorDefaultDataSource
HDCodableObjectAssociation
HDDataSyncEntity
HDSampleSyncEntity
HDActivityCacheSyncEntity
HDCategorySampleSyncEntity
HDNotificationCategorySampleSyncEntity
HDCorrelationSampleSyncEntity
HDQuantitySampleSyncEntity
HDWorkoutSyncEntity
HDLocationSeriesSyncEntity
HDDeletedSampleSyncEntity
HDCDASampleSyncEntity
HDBinarySampleSyncEntity
HDFitnessFriendActivitySnapshotSyncEntity
HDFitnessFriendAchievementSyncEntity
HDFitnessFriendWorkoutSyncEntity
HDSleepScheduleSyncEntity
HDECGSampleSyncEntity
HDCloudSyncPullStoreOperation
HDSQLiteCheckConstraint
HDSQLiteRawCheckConstraint
_HDSyncAnchorRangeBox
HDSyncAnchorRangeMap
HDQuantitySampleStatisticsEntity
HDCloudSyncComputeTargetsOperation
HDPeriodicActivity
HDHealthDaemonActivatedObserver
HDHeartEventSensorDatum
HDHeartEventDataAggregator
HDTachycardiaDataAggregator
HDBradycardiaDataAggregator
HDCloudSyncPipelineStageAddSharingParticipant
HDCloudSyncManagerRepositoryTask
HDCloudSyncValidateZonesOperation
HDECGSampleEntity
_HDECGSampleEntityEncoder
HDWorkoutControlServer
HKWorkoutControlServer
HDDeviceEntity
HDDeviceSyncEntity
HDGymKitWorkoutAnalyticEvent
HDFitnessMachineAnalyticsCollector
_HDCoreMotionAssertion
HDCoreMotionWorkoutInterface
HDSampleQueryServer
HDCloudSyncPipelineStageRemoveSharingParticipants
HDCodableSample
HDCodableObjectTypeSourceOrder
HDCodableAccountOwner
HDFirstPartyWorkoutSessionController
Corry
HDBTLEHeartRateDataCollector
HDSourceRevision
HDWorkoutBuilderDataSourceEntity
HDDemoDataMindfulnessSampleGenerator
HDAWDHealthKitCoachingFeatures
HDDemoDataVitalsSampleGenerator
HDAWDHealthKitActivityCache
HDHeartRateDataCollector
HDHeartRateDataAggregator
HDHeartRateSensorDatum
HDCodableTinkerOptInResponse
HDEurotasData
_HDQuantitySampleEntityEncoder
HDCloudSyncManagerPipelineTask
HDAuthorizationEntity
HDAuthorizationSyncEntity
HDAuthorizationBackupSyncEntity
HDAWDHealthKitWorkoutSessionEvent
HDCloudSyncSeizeAbandonedStoresOperation
arrayWithObjects:count:
builtInQueryServerClasses
arrayByAddingObjectsFromArray:
taskServerClasses
defaultForeignKey
dictionaryWithObjects:forKeys:count:
isEqual:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
disambiguatedDatabaseTable
stringWithFormat:
longLongValue
payload
executeCachedStatementForKey:error:SQLGenerator:bindingHandler:enumerationHandler:
binarySamples
addBinarySamples:
initWithHealthEntityClass:profile:transaction:purpose:encodingOptions:authorizationFilter:
databaseTable
columnDefinitionsWithCount:
foreignKeys
insertDataObject:withProvenance:inDatabase:persistentID:error:
codableObjectsFromObjectCollection:
addCodableObject:toCollection:
entityEncoderForProfile:transaction:purpose:encodingOptions:authorizationFilter:
isConcreteEntity
purpose
superclassEncoder
orderedProperties
codableRepresentationForPersistentID:row:error:
setSample:
setPayload:
dataTypeWithCode:
dataObjectClass
_init
applyPropertiesToObject:persistentID:row:error:
_setPayload:
objectForPersistentID:row:error:
initWithConfiguration:cloudState:
setDelegate:
count
finishWithSuccess:error:
progress
setTotalUnitCount:
beginTask
countByEnumeratingWithState:objects:count:
cloudState
setCloudState:
addChild:withPendingUnitCount:
start
finishTask
copy
configuration
addOperation:
status
setOnSuccess:
failTaskWithError:
setOnError:
addObject:
firstObject
shouldLogAtOperationStart
shouldProduceOperationAnalytics
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
synchronousTaskGroup:didFinishWithSuccess:errors:
main
operations
addOperationOfClass:
.cxx_destruct
_operations
_taskGroup
_lock
dictionaryRepresentation
dictionary
setObject:forKey:
setResourceType:
setIdentifier:
allocWithZone:
init
copyWithZone:
hasResourceType
hasIdentifier
readFrom:
writeTo:
copyTo:
mergeFrom:
resourceType
identifier
_identifier
_resourceType
healthDatabase
setHealthDatabase:
healthSourceManager
setHealthSourceManager:
healthDeviceManager
setHealthDeviceManager:
daemon
setDaemon:
healthDaemon
setHealthDaemon:
dataCollectionManager
setDataCollectionManager:
userCharacteristicsManager
setUserCharacteristicsManager:
_healthDaemon
_dataCollectionManager
_userCharacteristicsManager
database
primaryProfile
initWithDirectoryPath:medicalIDDirectoryPath:daemon:profileIdentifier:
initWithProfile:
_newAppSubscriptionManager
_newAWDSubmissionManager
_newNanoSyncManager
_newNotificationManager
_newWorkoutManager
_applyPPTUpdates
disconnectFromServices
activityCacheManager
profileExtensionsConformingToProtocol:
behavior
supportsAppSubscriptions
supportsAWDMetricSubmission
supportsNanoSync
isAppleWatch
initWithProfile:isMaster:
isAppleInternalInstall
standardUserDefaults
boolForKey:
dateWithTimeIntervalSinceReferenceDate:
date
timeIntervalSinceDate:
setOffsetTimeInterval:
setBool:forKey:
initWithDirectoryPath:medicalIDDirectoryPath:daemon:
terminationCleanup
appSubscriptionManager
awdSubmissionManager
currentActivitySummaryHelper
workoutManager
fitnessMachineManager
nanoSyncManager
notificationManager
serviceConnectionManager
serviceManager
tinkerPrivacyAlertCoordinator
unitTest_setServiceManager:
unitTest_setNanoSyncManager:
_ageGatingManager
_appSubscriptionManager
_awdSubmissionManager
_currentActivitySummaryHelper
_fitnessMachineManager
_nanoSyncManager
_notificationManager
_serviceManager
_serviceConnectionManager
_workoutManager
_demoDataManager
_tinkerPrivacyAlertCoordinator
completedUnitCount
setCompletedUnitCount:
initWithCategory:domainName:profile:
allValuesWithError:
allKeys
hasPrefix:
hk_map:
dateForKey:error:
laterDate:
enumerateObjectsUsingBlock:
setDate:forKey:error:
tinkerModeEnabled
minimumSampleStartDateForProfile:error:
hk_isBeforeDate:
performWriteTransactionWithHealthDatabase:error:block:
initWithAssertionIdentifier:ownerIdentifier:
initWithOwnerIdentifier:
eventCollectors
setEventCollectors:
_eventCollectors
addObserver:forAssertionIdentifier:queue:
takeAssertion:
_queue_eventCollectorsForType:delegate:
startWithSessionId:
activeAssertionsForIdentifier:
sessionId
requestPendingEventsThroughDate:completion:
stop
isAvailableInCurrentHardware
initWithProfile:delegate:
supportsWorkoutActivityType:
unitTest_setCMWorkoutManager:
assertionManager:assertionInvalidated:
assertionManager:assertionTaken:
takeSessionAssertionWithOwnerIdentifier:activityType:sessionIdentifier:eventsDelegate:
requestPendingEventsThroughDate:sessionIdentifier:completion:
_profile
_assertionManager
_queue
_subcriptionsToValidate
initWithConfiguration:cloudState:name:continueOnSubOperationError:
repository
primaryCKContainer
_registerOperationForSubscriptions:container:
addOperation:transitionHandler:
secondaryCKContainers
operationIgnoringErrors
delegateToOperation:
initWithConfiguration:cloudState:container:subscriptions:
profile
profileType
includeSecondaryContainers
setIncludeSecondaryContainers:
_includeSecondaryContainers
initWithUUID:configuration:client:delegate:
limit
sortDescriptors
includeDocumentData
sampleType
readAuthorizationStatusForType:error:
canRead
newDataEntityEnumerator
filter
setFilter:
restrictedSourceEntities
setRestrictedSourceEntities:
sampleAuthorizationFilter
setAuthorizationFilter:
setSortDescriptors:
setEncodingOption:forKey:
_shouldStopProcessingQuery
_shouldSuspendQuery
enumerateWithError:handler:
UUID
setPredicate:
queryUUID
client_deliverDocument:query:
objectAtIndex:
_deliverOneSample:client:errorOut:
delegate
queryServer:requestsAuthorizationForSamples:completion:
_queue_start
clientProxy
samplesBeforeAuthorizationWithSortDescriptors:errorOut:
_deliverAuthorizedSamplesToClient:errorOut:
client_deliverError:forQuery:
scheduleDatabaseAccessOnQueueWithBlock:
authorizeSamples:completion:
requiredEntitlements
queryClass
maxResults
_suspended
_authorizedSamples
_clientSampleIndex
_includeDocumentData
_maxResults
_sortDescriptors
setMedicalRecord:
setMedicationCodings:
setQuantityDispensed:
setPreparationDate:
setHandOverDate:
setDosages:
setEarliestDosageDate:
setStatusCoding:
setDaysSupplyQuantity:
hasMedicalRecord
hasMedicationCodings
hasQuantityDispensed
hasPreparationDate
hasHandOverDate
hasDosages
hasEarliestDosageDate
hasStatusCoding
hasDaysSupplyQuantity
medicalRecord
medicationCodings
quantityDispensed
preparationDate
handOverDate
dosages
earliestDosageDate
statusCoding
daysSupplyQuantity
_daysSupplyQuantity
_dosages
_earliestDosageDate
_handOverDate
_medicalRecord
_medicationCodings
_preparationDate
_quantityDispensed
_statusCoding
meterUnitWithMetricPrefix:
workoutDataDestination:requestsDataFrom:to:
workoutDataDestination:didChangeFromState:toState:
workoutDataDestination:requestsFinalDataFrom:to:completion:
workoutDataDestination:didUpdateConfiguration:
workoutDataFlowLink
workoutDataProcessorUUID
quantityTypesToIncludeWhilePaused
addSamples:dataSource:
addWorkoutEvents:dataSource:
addMetadata:dataSource:
updateWorkoutConfiguration:dataSource:
workoutDataDestinationState
workoutDataAccumulator
initWithProcessor:sourceProtocol:destinationProtocol:loggingCategory:
taskUUID
UUIDString
addObserver:queue:
_queue_setupLocationDataCollector
sessionServerFromSessionIdentifier:completion:
resumeUpdates
startUpdates
pauseUpdates
stopUpdates
quantityWithUnit:doubleValue:
_quantityByAddingQuantity:
sendToDestinationProcessors:
client
connection
remoteObjectProxyWithErrorHandler:
clientRemote_didUpdateElevation:
clientRemote_didUpdateRoute:
meterUnit
compare:
clientRemote_didUpdateAltitude:
_workoutBuilderServer
currentMetadata
objectForKeyedSubscript:
allDestinationProcessors
hk_firstObjectPassingTest:
workoutConfiguration
locationType
activityType
swimmingLocationType
_queue_createLocationDataCollectorWithActivityType:workoutUUID:
state
sampleSavingDelegate
initWithProfile:sampleSavingDelegate:activityType:workoutUUID:
serverInterface
clientInterface
removeObserver:
_queue_recoverCurrentElevation
stopUpdatesAndDiscardData
taskIdentifier
workoutSession:didChangeToState:fromState:date:
workoutSession:didGenerateEvent:
workoutSession:didFailWithError:
workoutSession:didUpdateDataAccumulator:
workoutSession:didUpdateControllerStateForRecoveryIdentifier:
elevationUpdated:
workoutRouteUpdated:
altitudeUpdated:
dataFlowLink:didAddSource:direct:
dataFlowLink:didAddDestination:direct:
remote_setupWithSessionIdentifier:
exportedInterface
remoteInterface
connectionInvalidated
_unitTest_locationDataCollector
queue
_sessionServer
_locationDataCollector
_workoutDataFlowLink
_elevationUnit
_currentElevation
_latestAltitude
_workoutUUID
numberWithDouble:
setupType
numberWithUnsignedInteger:
sendEvent:block:
domain
code
numberWithInteger:
tinker_pairingDidFinishForConfiguration:duration:
tinker_pairingDidFailWithError:configuration:duration:stage:
currentCalendar
components:fromDate:
setHour:
setMinute:
dateFromComponents:
_dateFromBaseDate:monthsInPast:forCalendar:
_generateAudiogramForDate:
addObjectFromPhone:
setMonth:
dateByAddingComponents:toDate:options:
hertzUnit
_randomSensitivityValueForSlot:
sensitivityPointWithFrequency:leftEarSensitivity:rightEarSensitivity:error:
audiogramSampleWithSensitivityPoints:startDate:endDate:metadata:
decibelHearingLevelUnit
generateFirstRunSampleForDemoPerson:firstDate:objectCollection:
isFileURL
raise:format:
initWithDatabaseURL:
_openForWriting:additionalFlags:error:
close
_copyContentsFromDatabase:toDatabase:
dealloc
path
name
UTF8String
isEqualToString:
fileSystemRepresentation
hk_assignError:code:format:
clearCachedStatements
isOpen
fileURL
hk_assignError:code:description:
_executeUncachedSQL:error:retryIfBusy:interruptible:
_verifyDatabaseOpenAndReturnError:
_handleInterruptionWithError:
getLastErrorWithResultCode:
hk_transactionInterruptedError
stringWithUTF8String:
errorWithDomain:code:userInfo:
_statementCache
setTransactionInterruptRequested:
beginTransaction
transactionInterruptRequested
endTransaction
hd_underlyingSQLiteError
hd_isDatabaseCorruptionError
hk_isTransactionInterruptedError
_stepStatement:hasRow:error:
reason
checkInStatement:
_executeSQL:cache:error:bindingHandler:enumerationHandler:
executeUncachedSQL:error:bindingHandler:enumerationHandler:
checkOutCachedStatementForKey:SQLGenerator:error:
_executeStatementWithError:statementProvider:bindingHandler:enumerationHandler:
checkOutStatementForSQL:shouldCache:error:
_setPragma:integerValue:withDatabaseName:error:
_integerValueForPragma:databaseName:value:error:
numberWithLongLong:
_executeUncachedSQL:error:
_schemaForTableWithName:database:error:
columns
foreignKeyTargetTable
foreignKeyTargetColumn
type
isNullable
containsString:
initWithSelectID:order:from:detail:
initWithQueryPlanRows:
length
setObject:forKeyedSubscript:
isDatabaseWithNameAttached:
removeObjectForKey:
componentsSeparatedByString:
objectAtIndexedSubscript:
setName:
setType:
setDefaultValue:
setIsNullable:
setIsPrimaryKey:
setIsUnique:
setColumns:
setWithArray:
setIndices:
setForeignKeyTargetTable:
setForeignKeyTargetColumn:
setDeletionAction:
_tableNamesForDatabaseWithName:error:
setTables:
_schemaForDatabaseWithName:error:
hk_error:format:
initWithDatabase:
memoryDatabaseFromURL:
initMemoryDatabase
openWithError:
openForReadingWithError:
setVirtualFileSystem:
setFileProtectionType:
accessDatabaseUsingBlock:
getChangesCount
performTransactionWithType:error:usingBlock:
executeSQL:error:bindingHandler:enumerationHandler:
executeUncachedSQL:error:
executeSQLStatements:error:
setUserVersion:withDatabaseName:error:
userVersionWithDatabaseName:error:
lastInsertRowID
onCommit:orRollback:
beforeCommit:
requireRollback
validateForeignKeysForTable:databaseName:error:
table:hasColumnWithName:error:
foreignKeyExistsFromTable:column:toTable:column:error:
typeOfColumn:inTable:error:
columnIsNullable:inTable:error:
enableIncrementalAutovacuumForDatabaseWithName:error:
incrementalVacuumDatabaseIfNeeded:error:
performIntegrityCheckOnDatabase:error:integrityErrorHandler:
queryPlanForSQL:error:
attachDatabaseWithName:fileURL:error:
detachDatabaseWithName:error:
_schemaForIndexWithName:database:error:
dumpSchemaWithError:
isWriter
setWriter:
virtualFileSystem
fileProtectionType
checkpointRequired
setCheckpointRequired:
cacheScope
setCacheScope:
statementCache
corruptionError
corruptionResultCode
_isInTransaction
_requiresRollback
_transactionType
_attachedDatabaseURLsByName
_transactionInterruptRequested
_isHandlingTransactionEnd
_beforeCommitBlocks
_onCommitBlocks
_onRollbackBlocks
_interruptionLock
_writer
_checkpointRequired
_corruptionResultCode
_fileURL
_virtualFileSystem
_fileProtectionType
_delegate
_cacheScope
_corruptionError
hk_underlyingErrorWithDomain:
hk_isErrorInDomain:code:
hk_isHealthKitError
userInfo
hd_isConstraintViolation
hd_isNotADatabaseError
timeIntervalSinceReferenceDate
handleFailureInFunction:file:lineNumber:description:
bytes
getUUIDBytes:
objCType
doubleValue
initWithLongLong:
initWithDouble:
initWithBytes:length:
initWithUTF8String:
defaultCenter
_pairedOrActiveDevicesDidChange:
sharedInstance
addObserver:selector:name:object:
pairedDeviceCapabilitiesDidUpdate:
activePairedDevice
supportsCapability:
numberWithInt:
getActivePairedDevice
deviceForPairingID:
numberWithBool:
isCapabilitySupportedOnActivePairedDevice:error:
isCapabilitySupported:onDevice:error:
startListeningForUpdates
recordID
integerValue
record
recordWithCKRecord:error:
serializeUnderlyingMessage
underlyingMessage
encryptedValuesByKey
hd_requiredValueForKey:type:error:
hd_requiredEncryptedValueForKey:type:error:
hd_equivalentRecord:
recordType
requiresUnderlyingMessage
initWithCKRecord:schemaVersion:
hasFutureSchema:
validateWithError:
schemaVersion
repaired
setRepaired:
unsaved
_record
_repaired
_unsaved
_recordID
procedureCodingCollection
performers
executionStartDate
executionEndDate
notPerformed
categoryCodingCollection
reasonCodingCollections
reasonsNotPerformedCodingCollections
outcomeCodingCollection
complicationsCodingCollections
followUpsCodingCollections
bodySitesCodingCollections
insertOrReplaceEntity:database:properties:error:bindingHandler:
generatedObjectCollection
procedureRecords
addProcedureRecord:
codableRepresentationForSync
setProcedureCodingCollection:
setWithObjects:
mutableCopy
setItems:
setPerformers:
archivedDataWithRootObject:requiringSecureCoding:error:
setExecutionStartDate:
setExecutionEndDate:
setNotPerformed:
setCategoryCodingCollection:
setReasonCodingCollections:
setReasonsNotPerformedCodingCollections:
setOutcomeCodingCollection:
setComplicationsCodingCollections:
setFollowUpsCodingCollections:
setBodySitesCodingCollections:
_setProcedureCodingCollection:
_setPerformers:
_setExecutionStartDate:
_setExecutionEndDate:
_setNotPerformed:
_setStatusCoding:
_setCategoryCodingCollection:
_setReasonCodingCollections:
_setReasonsNotPerformedCodingCollections:
_setOutcomeCodingCollection:
_setComplicationsCodingCollections:
_setFollowUpsCodingCollections:
_setBodySitesCodingCollections:
createBareObject
setVersionStruct:
versionWithMajor:minor:patch:
unknownVersion
versionStruct
_versionStruct
objectForKey:
hk_compareBuildVersionWithString:
indexOfObject:inSortedRange:options:usingComparator:
healthDirectorySizeInBytes
hasRequiredEntitlement:error:
process
processIdentifier
obliterateAndTerminateWithOptions:reason:completion:
migrationManager
performMigrationWithCompletion:
remote_getHealthDirectorySizeInBytesWithCompletion:
remote_obliterateHealthDataWithOptions:completion:
remote_performMigrationWithCompletion:
stringByAppendingPathComponent:
hd_dataEntityClass
dispatchBlock:name:
recordIDForNextChangeInSequence:
initWithRecordType:recordID:
incrementChildRecordCount
seekToEndOfFile
offsetInFile
fileDescriptor
initWithFileDescriptor:
setItemTypeHint:
changeIndex
initWithSyncAnchorRangeMap:changeIndex:changesetAsset:changeSize:protocolVersion:finalForSequence:sequenceRecordID:record:schemaVersion:
initWithRecordID:action:
setChangeIndex:
setFinalForSequence:
setProtocolVersion:
codableSyncAnchorRangeMap
setAnchorRangeMap:
setChangeSize:
initWithCKRecord:schemaVersion:underlyingChange:
_populateRecordFromUnderlyingMessage
data
referenceAction
hk_error:description:
hd_optionalEncryptedValueForKey:type:error:
initWithData:
_decodedSyncAnchorRangeMapForAnchorRangeData:
hd_optionalValueForKey:type:error:
zoneID
hd_isUnifiedSyncZoneIDForSyncCircleIdentifier:
recordName
initWithRecordName:zoneID:
rangeOfString:
initWithUUIDString:
_assetForCKRecord:error:
assetContent
initWithCodableSyncAnchorRangeMap:error:
hk_unarchivedObjectOfClass:forKey:data:error:
changeSize
protocolVersion
finalForSequence
anchorRangeMap
modificationDate
decodedSyncAnchorRangeMap
isChangeRecord:
isChangeRecordID:
isChangeRecord:inSequence:
bytesPerChangeRecordAssetThreshold
bytesPerChangeRecordAssetThresholdHardLimit
nonAssetKeys
assetKeys
changesetArchiveContentDataForCKRecord:error:
changesetArchiveURLForCKRecord:error:
initWithSyncAnchorRangeMap:finalForSequence:changesetArchiveFileHandle:sequenceRecord:protocolVersion:
shouldFetchAssetContentInMemory
changesetArchiveFileURL
sequenceRecordID
_underlyingChange
UUIDWithString:
initWithCorrespondingFlagBit:fieldLength:factor:
setFlagFieldFlipped:
setIsSigned:
isSet
value
numberWithUnsignedInt:
numberWithUnsignedShort:
numberWithShort:
numberWithUnsignedChar:
uuid
flagFieldLength
allFields
instantaneousSpeedIsSet
instantaneousSpeed
averageSpeedIsSet
averageSpeed
totalDistanceIsSet
totalDistance
stepPerMinuteIsSet
stepPerMinute
averageStepRateIsSet
averageStepRate
strideCountIsSet
strideCount
positiveElevationGainIsSet
positiveElevationGain
negativeElevationGainIsSet
negativeElevationGain
inclinationIsSet
inclination
rampSettingIsSet
rampSetting
resistanceLevelIsSet
resistanceLevel
instantaneousPowerIsSet
instantaneousPower
averagePowerIsSet
averagePower
totalEnergyIsSet
totalEnergy
energyPerHourIsSet
energyPerHour
energyPerMinuteIsSet
energyPerMinute
heartRateIsSet
heartRate
metabolicEquivalentIsSet
metabolicEquivalent
elapsedTimeIsSet
elapsedTime
remainingTimeIsSet
remainingTime
_instantaneousSpeedField
_averageSpeedField
_totalDistanceField
_stepPerMinuteField
_averageStepRateField
_strideCountField
_positiveElevationGainField
_negativeElevationGainField
_inclinationField
_rampSettingField
_resistanceLevelField
_instantaneousPowerField
_averagePowerField
_totalEnergyField
_energyPerHourField
_energyPerMinuteField
_heartRateField
_metabolicEquivalentField
_elapsedTimeField
_remainingTimeField
setDomain:
setLocalizedDescription:
hasDomain
setCode:
setHasCode:
hasCode
hasLocalizedDescription
localizedDescription
_code
_domain
_localizedDescription
_has
setTimestamp:
setHasTimestamp:
hasTimestamp
setLatitude:
setHasLatitude:
hasLatitude
setLongitude:
setHasLongitude:
hasLongitude
setAltitude:
setHasAltitude:
hasAltitude
setSpeed:
setHasSpeed:
hasSpeed
setCourse:
setHasCourse:
hasCourse
setHorizontalAccuracy:
setHasHorizontalAccuracy:
hasHorizontalAccuracy
setVerticalAccuracy:
setHasVerticalAccuracy:
hasVerticalAccuracy
timestamp
latitude
longitude
altitude
speed
course
horizontalAccuracy
verticalAccuracy
_altitude
_course
_horizontalAccuracy
_latitude
_longitude
_speed
_timestamp
_verticalAccuracy
rowID
initWithDatabase:rowID:
_database
_rowID
removeAllObjects
initWithCapacity:
addVisits:
setUuid:
setGeoData:
visitsCount
clearVisits
visitsAtIndex:
visitsType
setUncertainty:
setHasUncertainty:
hasUncertainty
setConfidence:
setHasConfidence:
hasConfidence
hasUuid
locationOfInterestType
setLocationOfInterestType:
setHasLocationOfInterestType:
hasLocationOfInterestType
locationOfInterestTypeAsString:
StringAsLocationOfInterestType:
hasGeoData
uncertainty
confidence
geoData
visits
setVisits:
_confidence
_uncertainty
_geoData
_locationOfInterestType
_uuid
_visits
auditToken
signingIdentifierFromAuditToken:
applicationIdentifier
_pluginBundleForCurrentProcess
hk_extensionPointIdentifier
defaultManager
informationForPlugInWithPid:
fileURLWithPath:isDirectory:
bundleWithURL:
entitlementsWithConnection:error:
hk_isAppExtension
hk_appExtensionContainerBundleForConnection:
bundleIdentifier
initWithAuditToken:
initWithAuditToken:entitlements:isExtension:containerAppBundleIdentifier:
entitlementsForCurrentTaskWithError:
entitlementsWithDictionary:
auditTokenForCurrentTask
valueForEntitlement:
boolValue
hasEntitlement:
containsObject:
hasArrayEntitlement:containing:
removeObject:
processWithConnection:error:
currentProcess
isWidgetKitExtension
hasRequiredArrayEntitlement:containing:error:
dropEntitlement:
unitTest_copyProcessWithEntitlements:
restoreEntitlement:
isExtension
containerAppBundleIdentifier
entitlements
_droppedEntitlements
_isExtension
_auditToken
_name
_bundleIdentifier
_containerAppBundleIdentifier
_entitlements
initWithBytes:length:encoding:
lastPathComponent
applyToObject:
_validateWithConfiguration:
vaccinationCodings
setVaccinationCodings:
expirationDate
setExpirationDate:
doseNumber
setDoseNumber:
doseQuantity
setDoseQuantity:
performer
setPerformer:
bodySiteCodings
setBodySiteCodings:
reaction
setReaction:
notGiven
setNotGiven:
administrationDate
setAdministrationDate:
patientReported
setPatientReported:
routeCodings
setRouteCodings:
reasonsCodings
setReasonsCodings:
reasonsNotGivenCodings
setReasonsNotGivenCodings:
addVaccinationRecord:
addCodableRepresentationToCollection:
createWithCodable:
alarmScheduler
directoryPath
initWithDaemon:eventName:eventHandlerQueue:
addAlarm:
removeAlarm:
eventName
initWithName:fireDate:isUserVisible:
scheduler
scheduleEvent:
unitTest_schedulerObserver
unscheduleEventWithName:
eventHandler
eventHandlerQueue
fireDate
isUserVisible
unittest_fireEvent:
initWithProfile:eventName:eventHandlerQueue:
beginReceivingEventsWithHandler:
invalidate
setNextFireDate:isUserVisible:
unschedule
eventDidFire:
unitTest_fireEventImmediatelyWithDate:isUserVisible:
setEventHandler:
setUnitTest_schedulerObserver:
_eventName
_scheduler
_eventHandlerQueue
_eventHandler
_unitTest_schedulerObserver
addItems:
itemsCount
clearItems
itemsAtIndex:
itemsType
items
_items
context
accessibilityAssertion
manager
initForContext:repository:accessibilityAssertion:queue:
operationConfiguration
addStage:
updateErrorRequiringUserAction:
callCompletionWithSuccess:error:
mirroringTasks
didFinishWithSuccess
didFailWithErrors:
isEquivalent:
profileIdentifier
mirrorTask:
pipelineForRepository:
combineWithTask:
_completion
initForQuantityType:dataCollectionManager:
hk_isHealthKitErrorWithCode:
_failSeriesWithUUID:
_hasFailedSeriesWithUUID:
metadata
dateInterval
startDate
endDate
maximumSeriesDuration
quantityType
canonicalUnit
duration
setDuration:
setTimeInterval:
quantity
doubleValueForUnit:
setValue:
unaggregatedSensorData
initWithRemainingSensorData:
openSeries
_validatedState:
lastDatum
aggregationIntervalForCollector:
dataManager
quantitySeriesManager
addObjectsFromArray:
_codableDatumsFromData:
lastObject
insertValues:series:error:
_successForPersistenceError:series:error:
_checkForOverlapWithSeries:lastDatum:provenance:profile:
freezeSeries:metadata:endDate:error:
_startSeriesWithDatum:device:
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:error:
requiresNewSeriesForDatum:lastDatum:seriesLength:currentSeries:configuration:aggregationInterval:
addDatum:toAccumulatedData:
collectionLatency
hk_isBeforeOrEqualToDate:
subarrayWithRange:
removeObjectsInRange:
shouldFreezeCurrentSeries:lastDatum:seriesLength:configuration:aggregationInterval:
initWithRemainingSensorData:currentSeries:lastDatum:length:
initWithResultingAggregationState:consumedSensorData:persistenceHandler:
didPersistObjects:lastDatum:collector:error:
_unfrozenQuantitySampleWithQuantityType:quantity:startDate:device:
_anySampleThatOverlapsWithSeries:lastDatum:provenance:profile:error:
autoBugCaptureReporter
reportDataCollectionSeriesProblem:quantityType:
_startTimestamp
dateByAddingTimeInterval:
hk_isAfterOrEqualToDate:
initWithStartDate:endDate:
dataProvenanceManager
provenanceEntityForProvenance:error:
persistentID
predicateWithProperty:equalToValue:
compoundPredicateWithPredicate:otherPredicate:
anySampleOfType:profile:encodingOptions:predicate:error:
aggregateForState:collector:device:requestedAggregationDate:mode:options:error:
initialAggregationState
_lock_failedSeriesUUIDs
initWithRemainingSensorData:currentSeries:
_lastDatum
_length
hasSample
sample
_sample
databaseSizeInBytesExcludingHFD
HFDSizeInBytes
databaseSizeInBytesForTypeUnprotected:WAL:
setExpectedSendSize:
options
_pushStores
addOperationOfClass:transitionHandler:
_pushOperationWithStore:
initWithConfiguration:cloudState:store:
initWithConfiguration:cloudState:target:
pushTarget
setTarget:
pushTargets
store
_pushStoreIdentifier
pushStoreWithIdentifier:container:error:
primaryPushZone
storeIdentifier
pushStoreIdentifierForContainer:error:
uint8FromData:before:
uint32FromData:before:
unitFromString:
initWithIdentifier:dateInterval:resumeContext:quantity:
_buildWithBinaryValue:error:
generateDatums:
updateTime
getBinaryValueWithError:
_instantaneousSpeed
_averageSpeed
mergeStrategy
countUnit
syntheticQuantityTypeWithUnderlyingSampleType:aggregationStyle:canonicalUnit:
_queue_fetchStatisticsWithError:
_copyOverwritingObjectType:
dataCount
setDataCount:
client_deliverStatistics:forQuery:
objectType
predicateWithProfile:
authorizationPredicate
initForProfile:quantityType:predicate:restrictedSourceEntities:
setIncludeUnfrozenSeries:
initWithProfile:quantityType:
calculatorForQuantityType:intervalCollection:options:mergeStrategy:
setDataSource:
setSourceOrderProvider:
setDateInterval:
queryForInitialStatisticsWithError:
currentStatistics
supportsAnchorBasedAuthorization
statisticsOptions
_dateInterval
_quantityType
_statisticsOptions
_mergeStrategy
protectedDatabase
unprotectedDatabase
_derivedFlagsForSourceID:database:error:
contributorReferenceForPersistentID:
dataProvenanceWithSyncProvenance:productType:systemBuild:operatingSystemVersion:sourceVersion:timeZoneName:sourceID:deviceID:contributorReference:
containsPredicateWithProperty:values:
queryWithDatabase:predicate:
enumeratePersistentIDsAndProperties:error:enumerationHandler:
performReadTransactionWithHealthDatabase:error:block:
uniquedColumns
protectionClass
insertOrLookupDataProvenanceForSyncProvenance:originProductType:originSystemBuild:originOSVersion:localProductType:localSystemBuild:sourceVersion:timeZoneName:sourceID:deviceID:contributorID:transaction:error:
originProvenanceForPersistentID:database:error:
sourceIDsWithProvenanceFromSourceIDs:profile:error:
setEvent:
setTimeStamp:
setHasTimeStamp:
hasTimeStamp
hasEvent
timeStamp
event
_timeStamp
_event
setLocationOfInterest:
hasLocationOfInterest
setNextEntryTime:
setHasNextEntryTime:
hasNextEntryTime
modeOfTransportation
setModeOfTransportation:
setHasModeOfTransportation:
hasModeOfTransportation
modeOfTransportationAsString:
StringAsModeOfTransportation:
sourceType
setSourceType:
setHasSourceType:
hasSourceType
sourceTypeAsString:
StringAsSourceType:
locationOfInterest
nextEntryTime
_nextEntryTime
_locationOfInterest
_modeOfTransportation
_sourceType
applyToObject:error:
coverageTypeCodingCollection
_setCoverageTypeCodingCollection:
subscriber
_setSubscriber:
subscriberId
_setSubscriberId:
beneficiary
_setBeneficiary:
policyHolder
_setPolicyHolder:
payor
hk_map:error:
_setPayor:
relationshipCodingCollection
_setRelationshipCodingCollection:
classification
_setClassification:
network
_setNetwork:
periodStartDate
unarchivedObjectOfClass:fromData:error:
_setPeriodStartDate:
periodEndDate
_setPeriodEndDate:
regularExpressionWithPattern:options:error:
detail
matchesInString:options:range:
rangeAtIndex:
substringWithRange:
queryPlanRows
includesTableScan
usesIndex
usesCoveringIndex
indices
_includesTableScan
_usesIndex
_usesCoveringIndex
_queryPlanRows
_indices
selectID
order
from
_selectID
_order
_from
_detail
sourceBundleIdentifier
defaultSourceBundleIdentifier
_sourceWithBundleIdentifier:defaultBundleIdentifier:appEntitlements:name:
hd_getNameForSource:
_setName:
_isLocalDevice
hd_currentDeviceSourceName
hd_isSpartanDeviceBundleIdentifier:
_isResearchStudy
_studyNameForResearchStudySource:
_applicationNameForBundleIdentifier:
_applicationNameForCompanionBundleIdentifier:
sharedBehavior
currentDeviceDisplayName
applicationProxyForIdentifier:
appState
isValid
localizedName
applicationProxyForCompanionIdentifier:
_fetchBundleWithError:
hk_displayName
hk_name
hd_sourceForClient:
workoutEventsForOwner:transaction:error:
ownerEntityClass
ownerEntityReferenceColumn
workoutEventsWithWorkoutBuilder:transaction:error:
_cloudSyncContainerDescriptionFromCloudState:configuration:
ownerIdentifierForContainer:error:
containerIdentifier
syncCircleIdentifier
_descriptionForContainer:configuration:
hk_stringIndentedBy:
appendFormat:
appendString:
detailedDescription
initWithConfiguration:cloudState:descriptionHandler:
_descriptionHandler
addAnchorRanges:
anchorRangesCount
clearAnchorRanges
anchorRangesAtIndex:
anchorRangesType
anchorRanges
setAnchorRanges:
_anchorRanges
diagnosticTestCodingCollection
setDiagnosticTestCodingCollection:
panelName
setPanelName:
results
setResults:
effectiveStartDate
setEffectiveStartDate:
effectiveEndDate
setEffectiveEndDate:
issueDate
setIssueDate:
addDiagnosticTestReport:
setRequestIdentifier:
setSetupMetadata:
setError:
hasRequestIdentifier
hasSetupMetadata
hasError
requestIdentifier
setupMetadata
error
_error
_requestIdentifier
_setupMetadata
fetchStatus:profile:bundleIdentifier:error:
setStatus:profile:bundleIdentifier:dateModified:error:
hk_invalidProfileError
allProperties
insertOrReplaceEntity:healthDatabase:properties:error:bindingHandler:
propertyValueForAnyWithProperty:predicate:healthDatabase:error:
anyWithPredicate:healthDatabase:error:
getValuesForProperties:healthDatabase:error:handler:
setStatusIfNeeded:profile:bundleIdentifier:error:
anyForBundleIdentifier:profile:error:
unitTest_getBundleIdentifier:status:dateModified:forProfile:error:
array
_migrateAddBasalCalorieKeyValueWithError:
_addFitnessFriendsTableWithError:
_addBackDeepBreathingColumnsToActivityCacheWithError:
_addCCDTableWithError:
_addPushCountColumnsToActivityCacheWithError:
_addValueTypeColumnToMetadataValuesWithError:
_recreateDataSeriesTableWithError:
_addPushCountColumnToFitnessFriendsTableWithError:
_addWheelchairUseColumnToActivityCacheWithError:
_addWheelchairUseColumnToFitnessFriendsTableWithError:
_addFitnessFriendsWorkoutAndAchievementTableWithError:
_migrateDeepBreathingColumnInActivityCacheTableWithError:
_addObjectAuthorizationTableWithError:
_addWorkoutSourceAndBundleIDToFitnessFriendsWorkoutsTableWithError:
_addSwimmingStrokeCountToWorkoutsAndEventsWithError:
_addTimeZoneOffsetColumnToFitnessFriendsTableWithError:
_addMaxObjectPersistentIDToKeyValueStoreWithError:
_fixDataProvenanceProductTypeWithError:
_addIsWatchWorkoutColumnToFitnessFriendsWorkoutsTableWithError:
_fixDataProvenanceProductTypeAgainWithError:
_migrateStoredDateOfBirthTimeZoneWithError:
_removeOrphanedDeletedObjectsWithError:
_recreateDataProvenanceTableIncludingTimeZoneNamesWithError:
migrationStepWithForeignKeysDisabledFrom:to:handler:
_addUniqueIndexForFitnessFriendsActivitySnapshotWithError:
_addAnchorForCompanionWorkoutCreditWithError:
_addInsertionEraColumnToDataSeriesWithError:
_renameCDATableWithError:
_addFieldsToLocationSeriesWithError:
_addSampleIndicesWithError:
_addIsIndoorWorkoutColumnToFitnessFriendsWorkoutsTableWithError:
_addSampleAnchorIndexWithError:
_migrateAchievementExtraDataToWorkoutActivityTypeWithError:
_removeActivitySharingDataWithError:
executeSQL:error:
transaction
hk_gregorianCalendar
hk_dateOfBirthDateComponentsWithDate:
hk_gregorianCalendarWithUTCTimeZone
performHFDMigrationToVersion:handler:error:
initWithSuiteName:
synchronize
whitetailUnprotectedMigrationSteps
whitetailProtectedMigrationSteps
diagnosticTestReports
_setDiagnosticTestCodingCollection:
_setPanelName:
_setResults:
_setEffectiveStartDate:
_setEffectiveEndDate:
_setIssueDate:
pluginKitProxyForIdentifier:
containingBundle
hd_extensionContainerBundleProxy
hd_extensionContainerBundleIdentifier
addObliteratedHealthPairingUUIDs:
setRestoreIdentifier:
setDefaultSourceBundleIdentifier:
obliteratedHealthPairingUUIDsCount
clearObliteratedHealthPairingUUIDs
obliteratedHealthPairingUUIDsAtIndex:
obliteratedHealthPairingUUIDsType
hasRestoreIdentifier
setSequenceNumber:
setHasSequenceNumber:
hasSequenceNumber
statusCode
setStatusCode:
setHasStatusCode:
hasStatusCode
statusCodeAsString:
StringAsStatusCode:
hasDefaultSourceBundleIdentifier
restoreIdentifier
sequenceNumber
obliteratedHealthPairingUUIDs
setObliteratedHealthPairingUUIDs:
_sequenceNumber
_defaultSourceBundleIdentifier
_obliteratedHealthPairingUUIDs
_restoreIdentifier
_statusCode
initWithQueue:delegate:
initWithName:loggingCategory:
cancelAllTimers
machinePreferredUntilDate
_queue_registerClient:withConnectionUUID:
_queue_connectionIsRegistered:
_queue_deliverFailedWithError:toConnectionUUID:
workoutAppIsReady
_queue_endFitnessMachineConnectionForFitnessMachineSessionUUID:withConnectionUUID:forcingReset:
fitnessMachineSessionUUID
_queue_resetConnectionForcing:
_queue_connectionWithUUID:
_queue_removeConnectionWithUUID:
fitnessMachine
recoveryConfiguration
_queue_recoverSessionWithConfiguration:
machineUUID
sessionUUID
serviceFromRecoveryConfiguration:
unpairHealthServiceIfNecessary:
registerObserver:
unregisterObserver:
healthService
_queue_deliverErrorToAllClients:
_queue_handleConnectionStatus:finished:error:
_queue_handleOrBufferReceivedCharacteristic:sessionIdentifier:device:error:
_queue_handleMFASuccess
connectionOptionsForSession:isReconnect:
markMFAAuthenticated
fitnessMachineStateTimers
beginRetryConnectionTimeout
oobInfo
oobData
connectHealthService:connectionOptions:sessionHandler:dataHandler:mfaSuccessHandler:autoPairData:error:
cancelRetryConnectionTimeout
setHealthServiceSessionIdentifier:
serviceStatus
_queue_handleConnectionSuccessIfPossible
_queue_reconnectFitnessMachineWithError:
_queue_handleBluetoothDisconnection
setServiceStatus:
_queue_setConnectionState:error:
_queue_connectFitnessMachineIsReconnect:
dataTransferRequirementsComplete
initWithSessionIdentifier:characteristic:device:error:
_queue_flushCharacteristicDataBuffer
_queue_handleReceivedCharacteristic:device:error:
device
localIdentifier
manufacturer
_queue_setDeviceInformation:
_queue_handleReceivedDataCharacteristic:
_queue_handleReceivedMachineStatus:
_queue_handleReceivedEnhancedFTMSCharacteristic:
_queue_handleInitialMachineDataIfNecessary:
handleDataCharacteristic:
_queue_waitingOnInitialStatusAndData
setInitialEnhancedFTMSData:
_queue_handleInitialMachineStatusIfNecessary:
machineState
cancelWaitForMachineStartTimeout
setMachineStartDate:
setMachinePreferredUntilDate:
cancelPauseTimeout
resumeCurrentSession
beginPauseTimeout
pauseCurrentSession
sendInitialValues
_queue_tearDownAfterStopEvent
_queue_setMachineState:date:
setWaitingOnInitialMachineStatus:
setWaitingOnInitialMachineData:
setInitialMachineData:
setInitialMachineStatus:
_queue_handleInitialStateIfNecessary
initialMachineStatus
initialMachineData
dateWithTimeInterval:sinceDate:
_queue_setMachinePreferredUntilDate:
initialEnhancedFTMSData
fitnessMachineSessionUUID:updatedRecoveryConfiguration:
notifyObservers:
waitingOnInitialMachineStatus
waitingOnInitialMachineData
cancelMfaTimeout
healthServiceSessionIdentifier
beginDisconnectTimeout
disconnectHealthService:
handleBLEConnectionCompletedSuccessfully:
cancelDisconnectTimeout
nfcSessionID
enablePrivateModeForSessionWithIdentifier:
_queue_deliverNFCDetected:
fitnessMachineServerId
_queue_handleBluetoothStatusUpdate:error:
sendBluetoothStatusUpdatesForServer:updateHandler:completion:
isDisconnectTimerValid
_queue_disconnectFitnessMachineFromBluetooth
isRetryConnectionTimerValid
waitingOnMFA
beginMfaTimeout
markBluetoothConnectionComplete
_queue_handleDataTransferRequirementsUpdated
connectionState
beginWaitForMachineStartTimeout
attachHealthServiceSession:
dataTransferPermitted
waitingOnBluetoothConnection
waitingOnActivityType
characteristic
removeObjectAtIndex:
resetOOBState
detachHealthServiceSession
tearDown
postNotificationName:object:
brand
setFitnessMachineType:manufacturer:
analyticsSubmissionCoordinator
workoutEndedSubmitMetricsWith:
reset
releasePrivateMode
deliverFinalValuesAndDetachWithCompletion:
_setDevice:
_setBrand:
setMachineBrand:
_queue_deliverMachineInformationUpdatedNotifyingPairingManager:
machineStartDate
setMachineState:
setMachineStateUpdateDate:
_queue_deliverMachineStateChangedFromState:date:
setConnectionState:
_queue_deliverConnectionStateChangedFromState:toState:error:notifyingPairingManager:
initWithRecoveryConfiguration:
machineType
initWithFitnessMachineType:
updateAdvertisementDataForSimulation:
initWithFitnessMachineType:profile:
machineBrand
clientRemote_deliverDetectedNFC:
_queue_performBlockOnConnections:
clientRemote_deliverMachineInformationUpdated:
updatedFitnessMachine
updatedFitnessMachineState:fitnessMachineSessionUUID:
clientRemote_deliverMachineChangedToState:fromState:fitnessMachineSessionUUID:date:
clientRemote_deliverConnectionChangedToState:fromState:fitnessMachineSessionUUID:error:
updatedConnectionStateWithError:
hk_error:description:underlyingError:
workoutFailedWithError:
clientRemote_deliverFailedWithError:
deliverError:
userIsAuthorized
initWithUUID:client:
_queue_addConnection:
machineStateUpdateDate
hk_removeObjectsPassingTest:
_queue_handleBeginPairing:
retrieveOOBData:
markActivityTypeProvided
markDataTransferPermitted
userBeganPairing
_queue_simulateDisconnect
attached
pairingManagerWillBeginPairing:fitnessMachineToken:
pairingManager:failedPairingWithError:
pairingManager:didChangeNFCEnabledState:
pairingManagerRequestsOOBData:error:
pairingManagerUpdatedMachineInformation:
pairingManager:updatedConnectionStateFromState:toState:
pairingManagerReceivedActivityTypeAndPermission:
pairingManager:discoveredHealthService:machineType:
pairingManagerReadyToConnect:
pairingManagerDidBeginPairing:
stateTimersFieldDetectTimeout:
stateTimersTagReadTimeout:
stateTimersMachineIdentityVerificationTimeout:
stateTimersUserAcceptanceTimeout:
stateTimersWaitForMachineStartTimeout:
stateTimersPauseTimeout:
stateTimersDisconnectTimeout:
stateTimersRetryConnectionTimeout:
stateTimersMfaTimeout:
_setQueue:
registerClient:withConnectionUUID:
markClientReadyWithConnectionUUID:
endFitnessMachineConnectionWithUUID:
endFitnessMachineConnectionForFitnessMachineSessionUUID:withConnectionUUID:
endFitnessMachineSessionWithUUID:
clientInvalidatedWithConnectionUUID:
fitnessMachineTypeForSessionUUID:
currentSessionRecoveryConfiguration
recoverSessionWithConfiguration:
finishSessionWithConfiguration:
addFitnessMachineSessionObserver:
removeFitnessMachineSessionObserver:
connectionInitiatorServer
metricsCollector
simulateDisconnect
hktest_setMachinePreferredUntilDate:
unitTest_fakeMachineDiscoveryForType:
unitTest_fakeSession:
unitTest_currentFitnessMachineSession
unitTest_receiveFakeCharacteristicUpdate:
fitnessMachineDataProducer
setServiceManager:
setFitnessMachineStateTimers:
analyticsCollector
setAnalyticsCollector:
_connections
_collector
_pairingManager
_fitnessMachineSession
_shouldReconnect
_resetInProgress
_characteristicDataBuffer
_fitnessMachineSessionObservers
_fitnessMachineDataProducer
_fitnessMachineStateTimers
_analyticsCollector
zonesByIdentifier
syncContainerPrefix
hd_masterZoneIDForSyncCircleIdentifier:
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
identifierForZone:container:scope:
initForZoneIdentifier:repository:type:
cloudStateByAddingZone:
setModifyRecordZonesCompletionBlock:
operationGroup
setGroup:
privateCloudDatabase
categorySamples
addCategorySamples:
initWithHealthEntityClass:profile:database:purpose:encodingOptions:authorizationFilter:
_setValue:
estimatedEncodedSize
_overrideMCCategorySampleValue
predicateWithProperty:value:comparisonType:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeObjectOfClasses:forKey:
decodeDoubleForKey:
encodeObject:forKey:
encodeInteger:forKey:
encodeDouble:forKey:
brandName
genericName
foodType
isEqualToNumber:
nutritionFacts
isEqualToDictionary:
recommendedNumServings
isEqualToHDDemoDataFoodObject:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithBrandName:genericName:foodType:nutritionFacts:
setBrandName:
setGenericName:
setFoodType:
setNutritionFacts:
setRecommendedNumServings:
_brandName
_genericName
_foodType
_nutritionFacts
_recommendedNumServings
accessHighFrequencyDataStoreWithError:block:
accessHFDForReadingWithError:block:
accessHFDForWritingWithError:block:
supportsWorkouts
initWithDaemon:
shouldLoadPluginForDaemon:
extensionForHealthDaemon:
extensionForProfile:
pluginIdentifier
allergyInfo
bloodType
clinicalContacts
emergencyContacts
gregorianBirthday
height
isDisabled
medicalConditions
medicalNotes
medicationInfo
isOrganDonor
pictureData
primaryLanguageCode
shareDuringEmergency
weight
medicalID_dailyReport:sosContactStatus:profileType:
medicalID_reportHasBeenSetForProfileType:
medicalID_reportHasBeenDeletedForProfileType:
_processBufferIfSensorDatumInvalid:
_bufferLengthAchieved:buffer:lastProcessedDatum:
_createObjectsFromBuffer:lastProcessedDatum:
_resetBuffer
_bufferStateForSensorDatum:
addSensorDatum:
objectCreationBlock
setObjectCreationBlock:
sensorDatumComparisonBlock
setSensorDatumComparisonBlock:
bufferAggregationInterval
setBufferAggregationInterval:
_buffer
_lastProcessedDatum
_objectCreationBlock
_sensorDatumComparisonBlock
_bufferAggregationInterval
uniqueIdentifierForDistinctByKeyPath:error:
supportsDistinctByKeyPath:
primaryConcept
groupByConcept
note
null
modifiedDate
supportsSecureCoding:
category
initWithServiceManager:peripheral:advertisementData:profile:
_startDeviceInformationLoadingTimeoutTimer
_propertyValueForPropertyName:
isCurrentDeviceN2XA
_queue_setDeviceInformationHasBeenLoaded
_queue_readProperty:
characteristicsDiscovered
healthPeripheral
service:didReadProperty:value:error:
cbPeripheral
readValueForCharacteristic:
_queue_peripheral:didDiscoverCharacteristic:
fetchLimitedCharacteristics
_queue_peripheral:didUpdateValueForCharacteristic:error:
_propertyValueForCharacteristic:
initWithData:encoding:
serviceType
serviceUUID
implementedProperties
manufacturerName
modelNumber
serialNumber
hardwareRevision
firmwareRevision
softwareRevision
performWhenDeviceInformationHasBeenLoaded:
readProperty:
peripheral:didDiscoverCharacteristic:
peripheral:didUpdateValueForCharacteristic:updateTime:error:
setFetchLimitedCharacteristics:
characteristics
setCharacteristics:
propertyValues
setPropertyValues:
propertiesLeftToFetch
setPropertiesLeftToFetch:
setQueue:
deviceInformationHasBeenLoaded
setDeviceInformationHasBeenLoaded:
pendingDeviceInformationLoadedBlocks
setPendingDeviceInformationLoadedBlocks:
_fetchLimitedCharacteristics
_deviceInformationHasBeenLoaded
_characteristics
_propertyValues
_propertiesLeftToFetch
_pendingDeviceInformationLoadedBlocks
setConditionCodingCollection:
setCategoriesCodingCollections:
setAsserter:
setAbatement:
setOnset:
setRecordedDate:
setClinicalStatusCoding:
setVerificationStatusCoding:
setSeverityCodingCollection:
hasConditionCodingCollection
hasCategoriesCodingCollections
hasAsserter
hasAbatement
hasOnset
hasRecordedDate
hasClinicalStatusCoding
hasVerificationStatusCoding
hasSeverityCodingCollection
hasBodySitesCodingCollections
conditionCodingCollection
categoriesCodingCollections
asserter
abatement
onset
recordedDate
clinicalStatusCoding
verificationStatusCoding
severityCodingCollection
_abatement
_asserter
_bodySitesCodingCollections
_categoriesCodingCollections
_clinicalStatusCoding
_conditionCodingCollection
_onset
_recordedDate
_severityCodingCollection
_verificationStatusCoding
profileManager
authorizationManager
verifyProfileAuthorizationForClient:error:
isPrimaryStoreIdentifier
profileForIdentifier:
clientMayAccessProfile:
hk_healthStoreUnavailableError
allProfileIdentifiers
hk_filter:
identifierFromProfileIdentifier:
remote_fetchForIdentifier:completion:
remote_fetchAvailableIdentifiersWithCompletion:
remote_requestAuthorizationToNewIdentifierWithCompletion:
remote_requestAuthorizationToNewIdentifierToShareTypes:readTypes:completion:
sourceManager
localSourceForBundleIdentifier:error:
resetObjectAuthorizationRecordsForSource:profile:error:
resetAuthorizationForObjects:profile:error:
sourceRevision
source
sourceUUIDWithProfile:error:
setObjectID:
setSourceID:
setModificationDate:
setStatus:
setObjectAuthorizationRecords:syncProvenance:profile:error:
resetAuthorizationStatusesForBundleIdentifier:profile:error:
resetTaskIdentifier
validateClient:error:
remote_resetAuthorizationStatusForBundleIdentifier:completion:
remote_resetObjectAuthorizationStatusForBundleIdentifier:objectType:completion:
remote_resetAuthorizationStatusesForObjects:completion:
uniqueIDOverride
hd_deviceIdentifier
isActive
hd_destinationIdentifier
hd_isEquivalentToDevice:
hd_shortDescription
setLocationManagerConfiguration:
requestWhenInUseAuthorization
_mainQueue_takeLocationUpdatingAssertion
_unitTest_didTakeAssertion:
_mainQueue_releaseLocationUpdatingAssertion
_mainQueue_updateLocationManager
_unitTest_didInvalidateAssertion:
_mainQueue_newLocationManagerWithEffectiveBundle:
initWithEffectiveBundle:delegate:onQueue:
setDesiredAccuracy:
setActivityType:
newAssertionForBundle:withReason:
startUpdatingLocation
stopUpdatingLocation
authorizationStatus
healthLocationManager:didChangeAuthorizationStatus:
healthLocationManager:didUpdateLocations:
healthLocationManager:didFailWithError:
_unitTest_healthLocationManager:didTakeAssertion:
_unitTest_healthLocationManager:didInvalidateAssertion:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
takeLocationUpdatingAssertionForOwnerIdentifier:
addObserver:
_unitTest_setLocationManagerConfiguration:
_unitTest_locationManager
locationManagerConfiguration
unitTestDelegate
setUnitTestDelegate:
_locationManager
_inUseAssertion
_observers
_locationManagerConfiguration
_unitTestDelegate
shouldPushToUnifiedZone
hd_unifiedSyncZoneIDForSyncCircleIdentifier:
hd_zoneIDWithSyncCircleIdentifier:storeIdentifier:
targets
zoneIdentifier
isEquivalentToZone:container:
allValues
zoneType
_finishWithZone:
_createZoneWithIdentifier:
databaseForContainer:
databaseScope
hd_storeIdentifier
initForZone:container:scope:
storeRecords
string
initInSyncCircle:ownerIdentifier:storeIdentifier:zoneID:
addRecord:error:
initWithPurpose:container:zone:storeRecord:store:options:
cloudStateByReplacingTargets:
_store
_pushTarget
_updateStoreRecordProperties
baselineEpoch
syncStoreForEpoch:
storeRecord
tombstoneSequenceRecord
syncStoreForTombstoneSyncOnly:
syncEngine
_excludedSyncStoresForPush
cloudSyncManager
syncSessionForSyncStore:reason:delegate:accessibilityAssertion:excludedStores:
syncAnchorMap
session:requiresSyncWithAnchors:error:
_synthesizeEmptySyncForSession:completion:
_prepareLocalSyncAnchorMapForStore:error:
_setInitialForwardProgressDateIfNecessary
setSequenceRecord:
_syncQueue_performSyncWithSession:completion:
currentDeviceProductType
setProductType:
currentOSBuild
setSystemBuildVersion:
setDeviceName:
setSupportedProtocolVersion:
_protocolVersionForPush
setRequiredProtocolVersion:
deviceMode
setDeviceMode:
frozenSyncAnchorMap
firstUnfrozenChangeRecord
setFirstUnfrozenChangeRecord:
decrementChildRecordCount:
resetChangeIndex:
replaceSyncAnchorMapWithSyncAnchorMap:
replacePersistedAnchorMap:error:
syncSessionWillBegin:
setCompletion:
syncSession:didFinishSuccessfully:error:
performSyncSession:accessibilityAssertion:error:
isComplete
success
container
pendingOwner
hk_mapToSet:
contextForReadingProtectedData
addAccessibilityAssertion:
syncStore
orderedSyncEntities
syncEntityIdentifier
syncAnchorOfType:entityIdentifier:store:profile:error:
nextSyncAnchorForEntity:session:startSyncAnchor:error:
performTransactionWithContext:error:block:inaccessibilityHandler:
nextSyncAnchorWithSession:startSyncAnchor:profile:error:
nextSyncAnchorWithSession:predicate:startSyncAnchor:profile:error:
seekToOffset:error:
archiveURL
initWithFileHandle:pathname:
enumerateEntriesUsingBlock:
lastError
pendingAnchorRangeMap
anchorRangeCount
archiveCreator
archiveIsValid
syncAnchorMapWithSyncAnchorRangeMap:
closeArchive
sequenceRecord
incrementChangeIndex
updateSyncAnchorMapWithSyncAnchorMap:
fileHandle
_validateArchiveFileHandle:error:
hasOpenSequence
seekToEndReturningOffset:error:
unsignedLongLongValue
updateFrozenSyncAnchorMapWithSyncAnchorMap:
replaceFrozenAnchorMap:updateDate:error:
archiveSize
arrayWithArray:
setPendingOwner:
setActive:
_pushRecords:recordIDsToDelete:containerID:completion:
containerForContainerIdentifier:
initWithRecordsToSave:recordIDsToDelete:
_recordForwardProgressDate
setModifyRecordsCompletionBlock:
_lock_finalizeNextChangeRecordForUploadToSession:shouldFreeze:error:
_endSyncSessionWithSuccess:error:
persistedStateWithError:
stateByRecordingLastSyncDate:
lastCheckDate
stateByRecordingLastCheckDate:
lastSyncDate
persistState:error:
didCompleteSuccessfulPushWithDate:
_uploadChangesForSyncSession:isFinalUpload:completion:
finishProgress
completion
setSuccess:
setIsComplete:
performAsynchronouslySerial:
descriptionForSignpost
_estimateSyncEntityClassesWithChangesForSession:
initWithChangedSyncEntityCount:profile:
totalUnitCount
defaultConfiguration
xpcActivity
allObjects
componentsJoinedByString:
resetInvalidArchiveCreatorWithSessionUUID:error:
initRequiringSecureCoding:
encodedData
addChangeData:changes:sessionIdentifier:outError:
_finalizePushForSession:
syncSession:sendChanges:completion:
syncSession:didEndTransactionWithError:
initWithConfiguration:cloudState:target:sequence:
hasMadeForwardProgress
_target
_sequenceRecord
_syncQueue
_sessionContext
_changeRecordsPendingPush
_recordsPendingDeletion
_hasMadeForwardProgress
setDefinitionIdentifier:
achievementType
setAchievementType:
setHasAchievementType:
hasAchievementType
achievementTypeAsString:
StringAsAchievementType:
setCompletedDate:
setHasCompletedDate:
hasCompletedDate
setHasValue:
hasValue
hasDefinitionIdentifier
workoutActivityType
setWorkoutActivityType:
setHasWorkoutActivityType:
hasWorkoutActivityType
workoutActivityTypeAsString:
StringAsWorkoutActivityType:
completedDate
definitionIdentifier
_completedDate
_value
_achievementType
_definitionIdentifier
_workoutActivityType
reverseData:
getBytes:length:
dataWithBytes:length:
randomValue
confirmationValue
btAddress
appendBytes:length:
initWithOOBData:btAddress:
_oobData
_randomValue
_confirmationValue
_btAddress
disambiguatedSQLForProperty:
propertyForSyncProvenance
propertyForSyncAnchor
setupWithDemoDataGenerator:
createdFromNSKeyedUnarchiver
demoPerson
breakfastTime
lunchTime
snackTime
dinnerTime
generateWaterAndCaffeineSampleForTodayIfNeededWith:
configurationFromDefaults:
shouldGenerateRecentLiquidsIntake
quantityTypeForIdentifier:
fluidOunceUSUnit
gramUnit
initWithCalendarIdentifier:
dateBySettingHour:minute:second:ofDate:options:
quantitySampleWithType:quantity:startDate:endDate:
addObjectsFromPhone:
generateSamplesForDemoPerson:atTime:sampleDate:objectCollection:
correlationTypeForIdentifier:
literUnit
totalDailyInsulinTherapyRequirementForDemoPerson:
mealTypeForTime:
_mealForDemoPerson:atTime:
nutritionTrackingType
_isTypicalNutritionTrackingQuantityType:
_computeNutrientForDemoPerson:atTime:mealItem:quantityType:
canonicalDietaryUnitForQuantityTypeIdentifier:
correlationWithType:startDate:endDate:objects:metadata:
basalInsulinInjectionForDemoPerson:quantityType:totalDailyInsulinInUnits:sampleDate:
bolusInsulinDeliveryForFoodItems:totalDailyInsulinInUnits:
quantitySampleWithType:quantity:startDate:endDate:metadata:
bloodGlucoseForDemoPerson:atTime:
basalInsulinPumpDeliveryForDemoPerson:quantityType:totalDailyInsulinInUnits:currentTime:sampleDate:
waterConsumedForDemoPerson:atTime:
useContinuousGlucoseMonitoring
continuousGlucoseMonitoringSampleFrequency
demoDataGenerator
isDemoDataTimeInWeekend:calendar:
weekendSleepParameters
weekdaySleepParameters
activitySampleGenerator
exerciseStartTime
exerciseStartTimeStdDev
_computeExerciseTimeFromCurrentTime:mean:stdDev:
exerciseStopTime
exerciseStopTimeStdDev
mealTimeSampleNoiseStdDev
_computeMealTimeForDemoPerson:fromTime:mealTimeType:timeMean:stdDev:
sleepSampleGenerator
bedtime
bedtimeNoiseStdDev
computeSleepTimeFromCurrentTime:mean:stdDev:
wakeUpTime
wakeUpTimeNoiseStdDev
statisticsSampleGenerator
pseudoRandomDoubleFromTime:
numDailyFingerSticksAdherence
bodySampleGenerator
lastWeightInKg
_computeBloodGlucoseForDemoPerson:atTime:weight:
computeNoiseFromTime:stdDev:
waterConsumedSampleFrequency
isDemoPersonSleeping:atTime:
waterConsumedDailyMean
waterConsumedIntervalMean
waterConsumedIntervalStdDev
insulinProduction
internationalUnit
insulinTherapy
basalInsulinDeliveryForTotalDailyInsulinInUnits:timeInterval:
timeIncrement
numCupsOfCoffeeDailyMean
numCupsOfCoffeeStdDev
computeStatisticalTimeFromCurrentTime:mean:stdDev:
foodDatabase
randomFoodForType:
_nextMealTimeForDemoPerson:atTime:
isDemoPersonAwake:atTime:
generatorState
isExercising
_isDemoPersonWalking:atTime:samplePeriod:
_computeFlightsClimbedForDemoPerson:atTime:
biologicalSex
insulinAdherence
insulinSensitivity
coffee
weightLossStartDay
preDietIntakeMultiplier
_isDemoPersonConsumingCaffeine:atTime:
_generateRandomLastMeal
_lastMeal
setFoodDatabase:
nextMealTime
setNextMealTime:
lastMeal
setLastMeal:
nextBloodGlucoseSampleTime
setNextBloodGlucoseSampleTime:
nextBloodGlucoseFingerStickSampleTime
setNextBloodGlucoseFingerStickSampleTime:
nextBloodGlucoseMealTime
setNextBloodGlucoseMealTime:
lastBloodGlucose
setLastBloodGlucose:
nextInsulinPumpBasalSampleTime
setNextInsulinPumpBasalSampleTime:
carbohydratesLeftToDigest
setCarbohydratesLeftToDigest:
bloodGlucoseCarbohydrateGlycemicRate
setBloodGlucoseCarbohydrateGlycemicRate:
bloodGlucoseDecreaseRateDueToInsulin
setBloodGlucoseDecreaseRateDueToInsulin:
nextWaterConsumedSampleTime
setNextWaterConsumedSampleTime:
nextBreakfastTime
nextLunchTime
nextSnackTime
nextDinnerTime
lastMealTime
_foodDatabase
_nextMealTime
_nextBloodGlucoseSampleTime
_nextBloodGlucoseFingerStickSampleTime
_nextBloodGlucoseMealTime
_lastBloodGlucose
_nextInsulinPumpBasalSampleTime
_carbohydratesLeftToDigest
_bloodGlucoseCarbohydrateGlycemicRate
_bloodGlucoseDecreaseRateDueToInsulin
_nextWaterConsumedSampleTime
_nextBreakfastTime
_nextLunchTime
_nextSnackTime
_nextDinnerTime
_lastMealTime
zonesToDelete
allCKContainers
_deleteZones:container:
cloudStateByRemovingZones:
setZonesToDelete:
_zonesToDelete
addInvitationToken:
setSyncCircleIdentifier:
setOwnerParticipant:
setSourceProfileIdentifier:
setShareParticipant:
setOwnerCloudKitEmailAddress:
invitationTokensCount
clearInvitationTokens
invitationTokenAtIndex:
invitationTokenType
hasSyncCircleIdentifier
hasOwnerParticipant
hasSourceProfileIdentifier
hasShareParticipant
hasOwnerCloudKitEmailAddress
ownerParticipant
sourceProfileIdentifier
shareParticipant
ownerCloudKitEmailAddress
invitationTokens
setInvitationTokens:
_invitationTokens
_ownerCloudKitEmailAddress
_ownerParticipant
_shareParticipant
_sourceProfileIdentifier
_syncCircleIdentifier
operatorType
keyPath
dataTypes
anyObject
falsePredicate
setNumerator:
setDenominator:
hasNumerator
hasDenominator
numerator
denominator
_denominator
_numerator
setLaunchError:
setHasSuccess:
hasSuccess
hasLaunchError
launchError
_launchError
_success
_updateExpectedSyncAnchorsForTarget:error:
_updateFrozenAnchorsForTarget:error:
resetSyncAnchorsOfType:store:profile:error:
updateSyncAnchorsWithMap:type:store:updatePolicy:resetInvalid:profile:error:
orderedSequenceRecords
_queue_updateExpectedSyncAnchorsForTarget:sequenceHeader:error:
setKey:
setStringValue:
setQuantityValue:
setDataValue:
hasKey
hasStringValue
setDateValue:
setHasDateValue:
hasDateValue
setNumberIntValue:
setHasNumberIntValue:
hasNumberIntValue
setNumberDoubleValue:
setHasNumberDoubleValue:
hasNumberDoubleValue
hasQuantityValue
hasDataValue
stringValue
dateValue
numberIntValue
numberDoubleValue
quantityValue
dataValue
_dateValue
_numberDoubleValue
_numberIntValue
_dataValue
_key
_quantityValue
_stringValue
assertionType
assertionDate
reasonForUseCodings
notTaken
reasonsNotTakenCodings
medicationRecords
addMedicationRecord:
setAssertionType:
setAssertionDate:
setReasonForUseCodings:
setNotTaken:
setReasonsNotTakenCodings:
_setMedicationCodings:
_setAssertionType:
_setAsserter:
_setAssertionDate:
_setDosages:
_setEarliestDosageDate:
_setReasonForUseCodings:
_setNotTaken:
_setReasonsNotTakenCodings:
_lock_extensionForBundleIdentifier:error:
_initWithExtension:
extensionsWithMatchingAttributes:error:
extensionForBundleIdentifier:error:
_availableExtensions
UUIDs
_deleteSourcesWithUUIDs:localSourceEntityCacheKey:deleteSamples:transaction:error:
initWithUUIDs:bundleIdentifier:
applyEntries:withProfile:
setUUIDs:
setBundleIdentifier:
_UUIDs
initWithDataCollectionManager:
sensorDatumClass
dataObjectsFromSensorDatum:error:
_registerActivityWithCriteria:
_performActivity:completion:
currentActivity
_handleXPCActivityCallback:
_activityFinishedWithResult:error:
initWithName:criteria:loggingCategory:handler:
requestRunWithMaximumDelay:completion:
runUngatedWithCompletion:
shouldDefer
loggingCategory
setCurrentActivity:
waitingForTrigger
setWaitingForTrigger:
_handler
_criteria
_nextScheduledFireDeadline
_inProgress
_pendingCompletions
_waitingForTrigger
_loggingCategory
_currentActivity
syncCoordinatorWithServiceName:
initWithService:
initWithDomain:pairedDevice:
nanoPairedDeviceRegistry
pairedSyncCoordinatorWithServiceName:
IDSServiceWithIdentifier:
healthDomainAccessorWithPairedDevice:
predicateMatchingPreferredEntityTypeIfRequiredWithPredicate:
initWithProfile:transaction:
databaseForEntityClass:
deleteObjectWithPersistentID:entityClass:error:
deleteEntitiesWithPredicate:healthDatabase:error:
insertDeletedObject:provenanceIdentifier:deletionDate:inDatabase:error:
deleteObjectsWithPredicate:profile:error:
deletedObjectEntityForDeletedObject:profile:error:
preferredEntityType
baseDataEntityClass
requiresSampleTypePredicate
hk_dateBySubtractingDays:fromDate:
hd_predicateForDeletedObjectsCreatedOnOrAfterDate:minusDays:
hd_predicateForDeletedObjectsCreatedBeforeDate:minusDays:
testModeEnabled
shareOwnerParticipantWithError:
triggerDeletion
performWhenDataProtectedByFirstUnlockIsAvailable:
dataForKey:error:
setData:forKey:error:
numberForKey:error:
setNumber:forKey:error:
deleteProfile:error:
awakeFromDisk
pairedNRDeviceUUIDWithError:
setPairedNRDeviceUUID:error:
dsidWithError:
setDSID:error:
setInstruction:
setTimingPeriod:
hasInstruction
hasTimingPeriod
instruction
timingPeriod
_instruction
_timingPeriod
displayName
setDisplayName:
FHIRResource
setFHIRResource:
addClinicalRecord:
_setQuantityDispensed:
_setPreparationDate:
_setHandOverDate:
_setDaysSupplyQuantity:
setEntityIdentifier:
setObjectType:
setHasObjectType:
hasObjectType
objectTypeAsString:
StringAsObjectType:
setAnchor:
setHasAnchor:
hasAnchor
hasEntityIdentifier
anchor
entityIdentifier
_anchor
_entityIdentifier
_objectType
sharedDiagnosticManager
transactionWithOwner:activityName:
_queryServerDidFinish:
setQueryDidFinishHandler:
unitTest_queryServerDidInit:
_lock_startQueryServer:completion:
_lock_registerQueryServer:error:
clientState
prepareToActivateServerWithError:
activateServerWithClientState:error:
initWithBlock:queryServer:
_lock_executeDatabaseAccessBlocks
_lock_dequeueNextDatabaseAccessBlock
queryServer
_lock_willExecuteDatabaseAccessBlock:
activationTime
creationTime
createDatabaseTransactionContext
block
performWithTransactionContext:error:block:
_didExecuteDatabaseAccessBlock:
performAsynchronously:
shouldThrottle
queryManager:willRunQueryServer:
_performAsyncWithUnitTestDelegate:
queryManager:didRunQueryServer:
_lock_foregroundBundleIdentifiers
_lock_canDequeueBlock:
shouldRunAfterBlock:foregroundBundleIdentifiers:
_monitoringIdentifierForProcess:
_lock_registerQueryServer:bundleIdentifier:
_logQueryActivationWithServer:
_lock_unregisterQueryServer:
_lock_queryCollectionForBundleIdentifier:createIfNecessary:
hasQueryServers
processStateManager
registerObserver:forBundleIdentifier:
applicationStateForBundleIdentifier:
initWithApplicationState:
setClientState:
addQueryServer:
removeQueryServer:
unregisterObserver:forBundleIdentifier:
initWithProcessBundleIdentifier:
isForeground
processBundleIdentifier
isApplicationInExtendedRuntimeSessionForBundleIdentifier:
applicationState
_lock_handleClientStateChangeWithQueryCollection:
queryServers
queue_startStateChangeTimerWithInterval:handler:
clientStateWillChange:
clientStateDidChange:
queue_cancelStateChangeTimer
enumerateKeysAndObjectsUsingBlock:
isSuspended
diagnosticDescription
unitTest_delegate
unitTest_delegateQueue
processWithBundleIdentifier:didTransitionFromState:toState:
processSuspended:
processResumed:
processTerminated:
processDidEnterBackground:
processDidEnterForeground:
startQueryServer:completion:
scheduleDatabaseAccessForQueryServer:block:
logDiagnostics
unitTest_suspendWithCount:
setUnitTest_delegateQueue:
setUnitTest_delegate:
_queryServersByUUID
_queryCollectionsByProcessBundleIdentifier
_pendingDatabaseAccessBlocks
_executingDatabaseAccessBlocks
_countOfExecutingThrottledDatabaseAccessBlocks
_unitTest_suspendCount
_daemon
_unitTest_delegateQueue
_unitTest_delegate
_timer
_processBundleIdentifier
_clientState
qualityOfService
_block
_queryServer
_qualityOfService
_creationTime
initWithEntity:name:columns:unique:predicateString:
databaseName
initWithString:
disambiguatedName
initWithEntity:name:columns:
creationSQL
entityClass
isUnique
predicateString
_unique
_entityClass
_columns
_predicateString
setHasSensorContact:
hasSensorContact
setSensorContact:
setHasEnergyExpended:
uint16FromData:before:
setHeartRateValue:
hasEnergyExpended
setEnergyExpended:
setRrIntervals:
sensorContact
derivedContactStatus
heartRateValue
energyExpended
rrIntervals
_hasEnergyExpended
_hasSensorContact
_sensorContact
_heartRateValue
_energyExpended
_rrIntervals
addPast:
addFuture:
pastsCount
clearPasts
pastAtIndex:
futuresCount
clearFutures
futureAtIndex:
pastType
futureType
pasts
setPasts:
futures
setFutures:
_futures
_pasts
registerDaemonReadyObserver:queue:
_fetchMedicalIDDataFromDiskWithError:
fetchMedicalIDWithError:
isEmpty
fetchMedicalIDIfSetUpWithError:
characteristicTypeForIdentifier:
userCharacteristicForType:error:
setGregorianBirthday:
setBloodType:
mostRecentSampleWithType:profile:encodingOptions:predicate:anchor:error:
setHeight:
setWeight:
isEqualToSyncedData:
_isDateSavedEarlierForMedicalID:originalMedicalID:
_persistMedicalIDData:originalData:provenance:error:
hasAnyModificationDate
setModificationDatesForUpdatedFieldsWithMedicalIDData:
merge:
setIsDisabled:
setModificationDatesToCurrentDate
updateMedicalIDWithLocalData:error:
_migrateMedicalIDLocationIfNecessary:
_medicalIDURL
dataWithContentsOfFile:
_unarchiveMedicalIDDataWithRawData:error:
migrateMedicalIDDataIfNeeded:
touchSyncAnchorIfNecessaryWithProfile:error:
_persistMedicalIDDataFileToDisk:error:
incrementSyncAnchorWithProfile:error:
setSyncProvenance:profile:error:
_updateShowMedicalIdOnWatch:
_setAllowedToMessageSOSContactsIfApplicableForMedicalID:
_triggerSyncForSuccessfulMedicalIDUpdate
writeToFile:options:error:
setAttributes:ofItemAtPath:error:
syncHealthDataWithOptions:reason:completion:
canPerformCloudSyncWithError:
initForOperationType:options:reason:periodicActivity:
syncMedicalIDDataWithContext:completion:
removeItemAtURL:error:
hk_isCocoaNoSuchFileError
setWithObject:
isAllowedToMessageSOSContacts
setAllowedToMessageSOSContacts:
medicalIDDirectoryPath
_medicalIDURLWithDirectoryPath:
initFileURLWithPath:
stringByStandardizingPath
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
moveItemAtURL:toURL:error:
dateSaved
_badgeHealthAppForEmergencyContactConsolidationWithCompletion:
dataWithContentsOfURL:
sharedConnection
isHealthDataSubmissionAllowed
reportDailyAnalyticsWithCoordinator:completion:
daemonReady:
fetchMedicalIDDataIfSetUpOrCreateDefaultWithError:
medicalIDEmergencyContactsWithError:
medicalIDClinicalContactsWithError:
updateMedicalIDWithSyncedData:provenance:error:
deleteMedicalIDDataWithError:
obliterateMedicalIDDataWithReason:error:
badgeHealthAppForEmergencyContactConsolidationWithCompletion:
unitTest_medicalIDData
unitTest_persistMedicalIDData:
setProfile:
shouldDeactivateAfterInitialResults
sourceClientProxy
client_deliverSources:forQuery:
_sourcesForObjectsOfType:filter:completion:
_queue_logThresholdHardwareFactor
_source
clientSourceForSourceEntity:error:
acceptsDataObject:
_queue_sourceAdded:
onQueue:
sourceIDsForSamplesWithType:profile:predicate:error:
clientSourceForPersistentID:error:
initWithObjects:
client_deliverUpdatedSources:added:forQuery:
samplesAdded:anchor:
didAddSamplesOfTypes:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
_shouldListenForUpdates
_queue_queryLogThreshold
_deliversUpdates
_sources
setUniqueIDOverride:
setNsuuid:
setService:
setProductBuildVersion:
setBuildType:
setModelNumber:
setSystemVersion:
setRegionCode:
setElectrocardiogramVersion:
setBackgroundAtrialFibrillationVersion:
setIsActive:
setSupportsCinnamonHW:
setIdentities:
setSupportsCinnamonAntimonyGloryF:
relationship
isLocallyPaired
isDefaultPairedDevice
nanoRegistryPairingID
setNanoRegistryPairingID:
nsuuid
service
productBuildVersion
buildType
productType
systemVersion
regionCode
identities
electrocardiogramVersion
backgroundAtrialFibrillationVersion
supportsCinnamonHW
supportsCinnamonAntimonyGloryF
_isActive
_supportsCinnamonHW
_supportsCinnamonAntimonyGloryF
_nanoRegistryPairingID
_nsuuid
_uniqueIDOverride
_service
_productBuildVersion
_buildType
_productType
_modelNumber
_systemVersion
_regionCode
_identities
_electrocardiogramVersion
_backgroundAtrialFibrillationVersion
_queue_performDelayedOperation
initWithMode:clock:queue:delay:block:
_queue_performPendingWriteOperationsWithError:
initWithWriteBlock:completion:
hk_withLock:
executeWithDelay:
writeBlock
lock
unlock
contextForWritingProtectedData
_performPendingWriteRecords:transaction:accessibilityError:error:
initWithProfile:name:loggingCategory:
performWriteWithMaximumLatency:block:completion:
flushPendingWriteQueueWithCompletion:
_writeQueue
_pendingWriteOperation
_pendingWriteLock
_pendingWriteQueue
_writeBlock
_queryForNextPageIfNecessaryWithError:
getSamplesWithSampleQueryDescription:sortDescriptors:anchor:limit:profile:resultsHandler:
objectID
sortedQueryAnchorWithSortDescriptors:followingSample:objectID:
nextAnchor
initWithSampleQueryDescription:sortDescriptors:anchor:bufferSize:profile:
advanceWithError:
object
.cxx_construct
_sampleQueryDescription
_bufferSize
_restrictedSourceEntities
_lastError
_isComplete
_current
instantaneousCadenceIsSet
instantaneousCadence
averageCadenceIsSet
averageCadence
_instantaneousCadenceField
_averageCadenceField
allOwnerIdentifiersWithError:
_computeAndValidateTargetsOperationWithConfiguration:cloudState:
initWithZonesByIdentifier:targets:
isEqualToSet:
initWithConfiguration:cloudState:operation:shouldRunHandler:
_validateSubscriptionsOperationForPrimaryContainerWithConfiguration:cloudState:
setPreparationHandler:
generateWatchFirstRunSampleForDemoPerson:firstDate:objectCollection:
generatePhoneFirstRunSampleForDemoPerson:firstDate:objectCollection:
birthDateComponents
completeOnboardingForDemoPerson:
categoryTypeForIdentifier:
menstrualFlowForDemoPerson:withSampleDate:
categorySampleWithType:value:startDate:endDate:metadata:
initWithArray:
intValue
addMenstruationSampleForDemoPersonFromWatch:date:flow:objectCollection:
addSymptomSampleForDemoPersonFromWatch:date:categoryType:objectCollection:
genericSampleTimeNoiseStdDev
degreeCelsiusUnit
sexualActivityForDemoPerson:atTime:
currentDateFromCurrentTime:
basalBodyTempForDemoPerson:atTime:
cervicalMucusQualityForDemoPerson:atTime:
categorySampleWithType:value:startDate:endDate:
ovulationTestResultForDemoPerson:withSampleDate:
menstrualCrampSymptomForDemoPerson:withSampleDate:
headacheSymptomForDemoPerson:withSampleDate:
addObjectFromWatch:
sexualActivityProbabilityPercentage
sexualActivityProtectionProbabilityPercentage
sexualActivityProtectionDocumentationProbabilityPercentage
sexualActivityIsTryingToConceive
_isDemoPersonOvulating:atTime:
vitalsSampleGenerator
_computeBodyTempInCelsiusForDemoPerson:atTime:addNoise:
bodyTempSampleNoiseStdDev
_computeNextLuteinizingHormoneSurgeForDemoPerson:atTime:
menstrualPeriodFrequency
cervicalMucusTable
month
_basalBodyTempMultiplier
basalBodyTempMultiplierTable
setBasalBodyTempMultiplierTable:
setCervicalMucusTable:
nextSexualActivitySampleTime
setNextSexualActivitySampleTime:
nextCycleDaySampleTime
setNextCycleDaySampleTime:
_basalBodyTempMultiplierTable
_cervicalMucusTable
_nextSexualActivitySampleTime
_nextCycleDaySampleTime
_characteristicsMap
properties
setNotifyValue:forCharacteristic:
buildWithBinaryValue:updateTime:error:
characteristicDataReceived:
_allCharacteristicClasses
getBytes:range:
typeFromAdvertisementData:
servicesInProfile
processAdvertisementData:
_machineType
persistentDomainForName:
isAutoincrement
setIsAutoincrement:
isPrimaryKey
defaultValue
deletionAction
_isAutoincrement
_isPrimaryKey
_isNullable
_type
_defaultValue
_foreignKeyTargetTable
_foreignKeyTargetColumn
_deletionAction
_isUnique
tables
_tables
member:
initWithQueue:profile:workoutConfiguration:
setWorkoutDataDestinationState:
sampleHandler
setSampleHandler:
metadataHandler
setMetadataHandler:
updateconfigurationHandler
setUpdateconfigurationHandler:
dataSources
setDataSources:
setWorkoutConfiguration:
_dataProcessorUUID
_workoutDataDestinationState
_sampleHandler
_metadataHandler
_updateconfigurationHandler
_dataSources
_workoutConfiguration
prescriber
numberOfFills
writtenDate
endedDate
reasonCodings
reasonEndedCodings
medicationOrders
addMedicationOrder:
setPrescriber:
setNumberOfFills:
setWrittenDate:
setEndedDate:
setReasonCodings:
setReasonEndedCodings:
_setPrescriber:
_setNumberOfFills:
_setWrittenDate:
_setEndedDate:
_setReasonCodings:
_setReasonEndedCodings:
healthLiteUserDefaultsDomain
_didReceiveKeysAndValuesNotificationName
postNotificationName:object:userInfo:
didReceiveValuesForKeys:profile:
identifierWithSchema:entity:
_queue_deactivate
_queue_beginSessionTransaction
_queue_endSessionWithReason:
_shouldUseHealthLiteSession
_queue_alertClientSessionDidReceiveHeartRate:
_queue_endSessionTransaction
isRunningStoreDemoMode
clientWithErrorHandler:
clientRemote_sessionDidReceiveHeartRate:
clientRemote_sessionDidReceiveError:
transactionWithOwner:
configurationClass
validateConfiguration:client:error:
remote_startSessionWithStartDate:completion:
remote_startGuiding
remote_endSessionWithEndReason:
_queue_alertClientSessionDidReceiveError:
daemonTransaction
setDaemonTransaction:
sessionConfiguration
serverState
setServerState:
_daemonTransaction
_sessionConfiguration
_serverState
moveIntervalComponents
exerciseIntervalComponents
queryQueue
updateInterval
_queue_deliverUpdates
initWithQueue:delay:block:
_queue_reset
_queue_stop
queryState
briskMinuteDataType
_allObservedQuantityTypes
initWithProfile:observedQuantityTypes:updateOperation:rebuildOperation:queue:
setTargetDayDateInterval:
updateWithError:
calendar
targetDayStatisticsBuilder
createMoveStatisticsWithIntervalComponents:calendar:
setActiveEnergyResults:
createMoveMinuteStatisticsWithIntervalComponents:calendar:
setAppleMoveTimeResults:
createExerciseStatisticsWithIntervalComponents:calendar:
setAppleExerciseTimeResults:
createStandStatisticsWithCalendar:
setAppleStandHourResults:
workoutSamplesWithSourceManager:
setWorkoutResults:
_queue_queryIsRunning
_createDataSourceIfNecessary
_queue_queryResultFromDataSourceWithError:
_queue_deliverError:
_queue_deliverResult:
client_deliverResult:query:
_queue_didDeactivate
_statisticsCollection
_updateOperation
_resetOperation
_startDate
_endDate
_moveIntervalComponents
_exerciseIntervalComponents
_dataSource
_sourceManager
healthService_reportServiceTypeAdded:profileType:
healthService_reportServiceTypeRemoved:profileType:
healthService_reportCountForAllServices:profileType:
healthService_reportServiceType:duration:profileType:
setAppBundleIdentifier:
setHostAppName:
setErrorDescription:
hasAppBundleIdentifier
setShouldPrompt:
setHasShouldPrompt:
hasShouldPrompt
hasHostAppName
hasErrorDescription
appBundleIdentifier
shouldPrompt
hostAppName
errorDescription
_appBundleIdentifier
_errorDescription
_hostAppName
_shouldPrompt
_insertSourceWithUUID:bundleIdentifier:owningAppBundleIdentifier:name:options:isCurrentDevice:productType:deleted:modificationDate:provenance:database:error:
decodedUUID
hasOptions
owningAppBundleIdentifier
deleted
decodedModificationDate
_isPlaceholderBundleIdentifier:
initWithPersistentID:
_firstSourceWithPredicate:database:error:
_firstSourceWithPredicate:profile:error:
_sourcesWithPredicate:includeDeleted:profile:error:
sourcesWithPredicate:orderingTerms:includeDeleted:database:error:
queryWithDatabase:predicate:limit:orderingTerms:groupBy:
setEntityClass:
setReturnsDistinctEntities:
initWithDatabase:descriptor:
enumerateProperties:error:enumerationHandler:
initWithUUIDBytes:
hk_enumerateUUIDBytesUsingBlock:
orderingTermWithProperty:entityClass:ascending:
firstInDatabase:predicate:orderingTerms:error:
databaseForEntity:
getValuesForProperties:database:handler:
codableSourceWithEncoder:error:
valueForProperty:healthDatabase:error:
_updateValues:forProperties:profile:didUpdate:error:
numberWithUnsignedLongLong:
insertSourceWithUUID:bundleIdentifier:owningAppBundleIdentifier:name:options:isCurrentDevice:productType:modificationDate:provenance:profile:error:
insertCodableSource:provenance:profile:error:
sourceForLocalDeviceWithDatabase:error:
firstSourceWithPredicate:profile:error:
firstSourceWithPredicate:database:error:
sourcesWithPredicate:includeDeleted:profile:error:
sourcesWithPredicate:includeDeleted:database:error:
enumerateBundleIdentifiersForSourcesWithPredicate:database:error:enumerationHandler:
enumerateBundleIdentifiersForSourcesForUUIDData:transaction:error:enumerationHandler:
sourceWithProfile:error:
codableSourceWithProfile:error:
sourceUUIDWithHealthDatabase:error:
setName:profile:error:
setOptions:profile:didUpdate:error:
adoptAsLocalSourceWithBundleIdentifier:UUID:name:productType:profile:error:
sourceBundleIdentifierInDatabase:error:
deleteSourceWithDatabase:error:
setDeleted:
setOptions:
setOwningAppBundleIdentifier:
_setBundleIdentifier:
_setOptions:
_setLocalDevice:
_setProductType:
_setSourceID:
_setOwningAppBundleIdentifier:
maxEncodedBytesPerCodableChangeForSyncEntityClass:
enumerateEntitiesForSyncWithProperties:predicate:session:syncAnchorRange:limit:lastSyncAnchor:healthDatabase:error:block:
sendCodableChange:resultAnchor:sequence:done:error:
nextSyncAnchorWithStartAnchor:predicate:session:healthDatabase:error:
_generateIdentifierForAppleDeviceWithUUID:
syncProvenance
createSourcesWithCodables:provenance:error:
generateSyncObjectsForSession:syncAnchorRange:profile:messageHandler:error:
decodeSyncObjectWithData:
receiveSyncObjects:syncStore:profile:error:
syncEntityDependenciesForSyncProtocolVersion:
supportsSyncStore:
excludedSyncStoresForSession:
pruneSyncedObjectsThroughAnchor:limit:nowDate:profile:error:
hk_dataForUUIDBytes
predicateWithProperty:likeValue:
predicateWithProperty:notEqualToValue:
initWithProfile:queue:
_invalidate
prepareForObliteration
obliterateWithReason:preserveCopy:
_queue_setUpMessageCentersIfNecessary
_unregisterForSyncTriggers
removeObserver:name:object:
_queue_finishInitializationAfterFirstUnlockIfNecessaryWithError:
performWhenDataProtectedByFirstUnlockIsAvailableOnQueue:block:
needsSyncOnUnlock
setNeedsSyncOnUnlock:
hk_isDatabaseAccessibilityError
_queue_syncImmediatelyWithReason:options:accessibilityAssertion:completion:
_queue_pairedSyncDidBeginForDevice:messagesSentHandler:completion:
syncHealthDataWithOptions:reason:accessibilityAssertion:completion:
cloneAccessibilityAssertion:ownerIdentifier:error:
_queue_waitForLastChanceSyncWithPairingID:timeout:completion:
_queue_resetSyncWithCompletion:
_queue_updateSyncStoresWithCompletion:
_queue_requestAuthorizationForRequestRecord:syncStore:requestSentHandler:completion:
_queue_sendStartWorkoutAppRequest:syncStore:completion:
_queue_sendCompanionUserNotificationRequest:syncStore:completion:
_queue_updateTinkerSyncStore
nanoRegistryUUID
_queue_sendTinkerOptInRequest:syncStore:completion:
_queue_sendTinkerPairingRequest:syncStore:completion:
_queue_sendTinkerEndToEndCloudSyncRequestWithSyncStore:completion:
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
idsService
linkedDevicesWithRelationship:
deviceForNRDevice:fromIDSDevices:
hd_pairingID
nanoSyncStoreWithProfile:device:delegate:tinkerPaired:
contentProtectionManager
deviceUnlockedSinceBoot
hk_databaseInaccessibleBeforeFirstUnlockError
addProtectedDataObserver:queue:
_deviceDidPair:
_deviceDidUnpair:
_deviceDidBecomeActive:
registerForegroundClientProcessObserver:
_registerForSyncTriggers
_queue_updateSyncStores
directoryURL
URLByAppendingPathComponent:isDirectory:
createPersistentDictionaryWithURL:
initWithIDSServiceIdentifier:persistentDictionary:queue:daemon:
_addDaytonaVersionMessageHandlersToMessageCenter:
_addHunterVersionMessageHandlersToMessageCenter:
resume
messageCenterDidReceiveRestoreRequest:
addRequestHandler:forMessageID:
messageCenterDidReceiveRestoreResponse:
addResponseHandler:forMessageID:
messageCenterRestoreError:
addErrorHandler:forMessageID:
mapPBRequest:toResponse:messageID:
messageCenterDidReceiveChangesRequest:
messageCenterDidReceiveChangesResponse:
messageCenterChangesError:
messageCenterDidReceiveAuthorizationResponse:
messageCenterDidReceiveAuthorizationRequest:
messageCenterDidReceiveAuthorizationError:
messageCenterDidReceiveAuthorizationCompleteRequest:
messageCenterDidReceiveRoutineRequest:
messageCenterDidReceiveStartWorkoutAppRequest:
messageCenterDidReceiveStartWorkoutAppResponse:
messageCenterDidReceiveStartWorkoutAppError:
messageCenterDidReceiveCompanionUserNotificationRequest:
messageCenterDidReceiveCompanionUserNotificationResponse:
messageCenterDidReceiveCompanionUserNotificationError:
messageCenterDidReceiveTinkerOptInRequest:
messageCenterDidReceiveTinkerOptInResponse:
messageCenterDidReceiveTinkerOptInError:
messageCenterDidReceiveTinkerPairingRequest:
messageCenterDidReceiveTinkerPairingResponse:
messageCenterDidReceiveTinkerPairingError:
messageCenterDidReceiveTinkerEndToEndCloudSyncRequest:
messageCenterDidReceiveTinkerEndToEndCloudSyncResponse:
messageCenterDidReceiveTinkerEndToEndCloudSyncError:
permitSynchronization
sendRequest:
toParticipant
configureOutgoingResponse:
send
hasVersion
version
nanoSyncStoreForProtocolVersion:
_logIncomingRequest:
fromParticipant
_queue_syncStoreForIDSDevice:updateIfNecessary:
_logIncomingResponse:
hd_messageIDSDeviceIdentifier
_logOutgoingMessageError:
_queue_syncStoreForMessageCenterError:
hd_messageIDSIdentifier
nanoSyncDescription
_queue_handleRestoreRequest:syncStore:
_handleIncomingRequest:usingBlock:
_queue_handleRestoreResponse:syncStore:
_handleIncomingResponse:usingBlock:
_queue_receiveChangeRequest:syncStore:completion:
_syncronouslyHandleIncomingRequest:usingBlock:
_queue_receiveChangeResponse:syncStore:
hd_isFromRequest
_queue_changeRequestDidFailToSendWithError:syncStore:
_queue_changeResponseDidFailToSendWithError:syncStore:
_handleOutgoingMessageError:usingBlock:
_queue_receiveAuthorizationRequest:syncStore:
_queue_receiveAuthorizationResponse:syncStore:
_queue_authorizationRequestDidFailToSendWithError:syncStore:
_queue_receiveAuthorizationCompleteRequest:syncStore:
_queue_receiveRoutineRequest:syncStore:
_queue_recieveStartWorkoutAppRequest:syncStore:
_queue_recieveStartWorkoutAppResponse:syncStore:
_queue_startWorkoutAppRequestDidFailToSendWithError:syncStore:
_queue_recieveCompanionUserNotificationRequest:syncStore:
_queue_recieveCompanionUserNotificationResponse:syncStore:
_queue_companionUserNotificationRequestDidFailToSendWithError:syncStore:
_queue_receiveTinkerOptInRequest:syncStore:
_queue_receiveTinkerOptInResponse:syncStore:
_queue_tinkerOptInRequestDidFailToSendWithError:syncStore:
_queue_receiveTinkerPairingRequest:syncStore:
_queue_receiveTinkerPairingResponse:syncStore:
_queue_tinkerPairingRequestDidFailToSendWithError:syncStore:
_queue_receiveTinkerEndToEndCloudSyncRequest:syncStore:
_queue_receiveTinkerEndToEndCloudSyncResponse:syncStore:
_queue_tinkerEndToEndCloudSyncRequestDidFailToSendWithError:syncStore:
hd_messageID
nanoSyncDevices
isInvalidated
deviceInfo
initWithPairedDeviceInfos:
setPairedDevicesSnapshot:
_queue_startPeriodicSyncTimerIfNecessary
_showFitnessAppIfNeeded
_queue_updateDeviceNameIfNecessaryWithSyncStore:
_queue_cancelPeriodicSyncTimer
_queue_generateWatchActivationSamples
_notifyObserversPairedDevicesChanged:
_queue_permitSyncWithError:
restoreState
_queue_beginProactiveSyncWithAssertion:completion:
initWithSyncStore:options:reason:delegate:completion:
_queue_transitionToRestoreInProgressWithSyncStore:
restoreSession
addCompletionHandler:
finishRestoreSessionWithError:
_resetSyncAnchorsForStore:
persistentUUID
_queue_beginRestoreWithStore:completion:
_queue_transitionToRestoreIncompleteWithSyncStore:error:
resetStore:
_queue_nanoSyncKeyValueDomain
unsignedIntValue
switchIndex
watchActivationType
getSwitchEventsFromIndex:inlineCallback:
sourceEntityForRegistryUUID:profile:error:
insertDataObjects:sourceEntity:deviceEntity:sourceVersion:creationDate:error:
_queue_syncStoreForNanoRegistryPairingID:
_queue_synchronizeWithOptions:restoreMessagesSentHandler:targetSyncStore:reason:accessibilityAssertion:completion:
restoreTimeout
restoreTimedOutWithSyncStore:
beginRestoreSessionWithUUID:timeout:timeoutHandler:
_queue_sendRestoreMessageWithStore:restoreUUID:sequenceNumber:statusCode:
activationRestoreWithRestoreUUID:sequenceNumber:statusCode:
obliteratedDatabaseUUIDs
encodeObliteratedHealthPairingUUIDs:
activationRequestWithRestore:syncStore:
_queue_sendRequest:syncStore:
pbRequest
decodedPersistentPairingUUID
decodedHealthPairingUUID
activationRestore
hasRequiredFields
healthUUID
decodedObliteratedHealthPairingUUIDs
idsIdentifier
companionDidChangeForProfile:error:
decodedRestoreUUID
_queue_validatedSyncStore:device:message:error:
_queue_actionForRestoreRequest:syncStore:error:
setPersistentUUID:
setHealthUUID:
_syncQueue_applyActivationRestore:request:syncStore:error:
_syncQueue_prepareForCompanionChangeWithStore:error:
_queue_transitionToRestoreCompleteWithSyncStore:
response
configureWithActivationRestore:syncStore:
_queue_sendResponse:syncStore:
pbResponse
validatePairingUUIDsWithIncomingMessage:
setLocalDeviceSourceUUID:bundleIdentifier:error:
_queue_isRestoreCompleteForSyncStore:error:
changeRequestWithChangeSet:status:syncStore:
isLastChance
setPriority:
incrementMessageCount
speculativeChangeRequestWithChangeSet:syncStore:
hasChangeSet
hasStatus
_didReceiveChangeRequest
changeSet
_queue_changeRequestActionForMessage:syncStore:errorDescription:
_changeResponseStatusCodeForAction:
_queue_eligibleInactiveSyncStores
changes
applySyncChange:forStore:error:
_syncQueue_forwardSpeculativeChangeSetIfNecessaryForChanges:destinationSyncStores:originSyncStore:
applyAcknowledgedAnchorMap:forStore:resetNext:resetInvalid:error:
_syncQueue_responseForChangesRequest:syncStore:statusCode:
messageID
didReceiveRequestWithChangeSet:
expectsResponse
statusWithStatusCode:
getReceivedAnchorMap:forStore:error:
clearAnchors
nanoSync_reportResponseStatusCode:profileType:
configureWithStatus:syncStore:
hd_isResponseTimeout
hd_persistentMessage
resetAnchorsWithFailedChanges:store:
_queue_changeResponseActionForMessage:statusCode:syncStore:errorDescription:
enablePeriodicSyncTimer
_queue_periodicSyncTimerFired
nanoSync_reportSyncSuccessWithReason:options:duration:profileType:
nanoSync_reportSyncFailureWithReason:options:duration:profileType:error:
isRestoreComplete
lastInactiveDate
hk_isAfterDate:
isProtectedDataAvailable
hk_protectedDataInaccessibilityError
_queue_performNextProactiveSyncWithRemainingDevices:accessibilityAssertion:completion:
removeFirstObject
syncEntityClassForProfile:
supportsSpeculativeChangesForSyncEntityClass:
speculativeCopy
addChanges:
changesCount
_queue_sendSpeculativeChangeSet:syncStore:completion:
_syncImmediatelyWithReason:options:
_userCharacteristicsDidChange:
_userPreferencesDidChange:
_syncImmediatelyWithReason:
removeExpiredIncomingSyncObservers
addIncomingSyncObserverWithTimeout:timeoutHandler:completion:
_sendFinalStatusMessageForSyncSession:didFinishSuccessfully:error:
setPbResponse:
createRequestWithMessageID:
setPbRequest:
setPersistentUserInfo:
setRequest:
addPendingRequestContext:forUUID:
hk_codableError
receivedStartWorkoutAppRequest:completion:
requestPersistentUserInfo
hk_errorWithCodableError:
pendingRequestContextForUUID:
hd_persistentUserInfo
removePendingRequestContextForUUID:
receivedCompanionUserNotificationRequest:completion:
setAccepted:
isAltAccount
_queue_registerForTinkerOptInNotificationWithResponse:
guardianDisplayName
initWithNotificationManager:guardianDisplayName:
triggerNotification
_queue_handleTinkerOptInNotification:
accepted
guardianIcloudIdentifier
takeAccessibilityAssertionWithOwnerIdentifier:timeout:error:
initWithDescription:completion:
cloudSyncCoordinator
cloudSyncSupportStatusDidChange
enableSyncLocallyWithCompletion:
addTaskOnQueue:task:
tinkerFirstName
tinkerLastName
setDisplayFirstName:lastName:error:
initWithEmailAddress:
codableSharingSetupMetadataWithError:
setupSharingToAccountWithIdentityLookupInfo:requireExistingRelationship:requireZoneDeviceMode:completion:
guardianFirstName
setFirstName:
guardianLastName
setLastName:
guardianDSID
setDsid:
_saveGuardianDetailsWithUserInfo:guardianParticipant:error:
_scheduleTransparencyAlert:
subscribeToDataUploadRequestsWithCompletion:
subscribeToDataAvailableNotificationsWithCompletion:
removeValuesForKeys:error:
begin
dateByAddingUnit:value:toDate:options:
setCalendar:
scheduleEventIfRequiredForDateComponents:eventIdentifier:error:
setPairedGuardianUserInfo:error:
setPairedGuardianParticipant:error:
_queue_performSyncForTinkerEndToEndCloudSyncWithCompletion:
hk_sanitizedError
syncWithContext:completion:
codableAuthorizationRequestWithRecord:
sessionIdentifier
setRequestRecord:
setRequestSentHandler:
localizedShortName
openAppForAuthorization:sessionIdentifier:completion:
decodedWriteTypes
decodedReadTypes
enqueueAuthorizationRequestForBundleIdentifier:writeTypes:readTypes:authorizationNeededHandler:completion:
requestSentHandler
hk_UUIDWithData:
contextForWriting
allSyncStoreEntitiesOfType:transaction:error:
resetAllSyncAnchorsOfType:syncProvenances:transaction:error:
maintenanceOperationWithName:queue:synchronousBlock:
maintenanceWorkCoordinator
enqueueMaintenanceOperation:
changeSetWithChanges:statusCode:error:
_queue_sendChangeSet:status:session:completion:
cancelPendingRequestsWithMessageID:device:
isPullRequest
_sendFinalMessageForSyncSession:status:success:error:
messageCount
isRequestedByRemote
invokeCompletionWithSuccess:error:
deviceName
nanoSyncManager:pairedDevicesChanged:
stringByReplacingOccurrencesOfString:withString:
nanoSyncStore:remoteSystemBuildVersionDidChange:
nanoSyncStore:restoreStateDidChange:
nanoSyncStore:deviceNameDidChange:
isMaster
database:protectedDataDidBecomeAvailable:
messageCenter:didReceiveUnknownRequest:
messageCenter:didResolveIDSIdentifierForRequest:
messageCenter:didResolveIDSIdentifierForResponse:
messageCenter:activeDeviceDidChange:acknowledgementHandler:
foregroundClientProcessesDidChange:previouslyForegroundBundleIdentifiers:
invalidateAndWait
obliterateWithOptions:reason:
initializeMessageCenterIfNeeded
pairedSyncDidBeginForDevice:messagesSentHandler:completion:
syncHealthDataWithOptions:completion:
waitForLastChanceSyncWithDevicePairingID:timeout:completion:
resetSyncWithCompletion:
updatePairedDevicesWithCompletion:
unitTest_performWithActiveSyncStore:
requestAuthorizationForRequestRecord:requestSentHandler:completion:
sendStartWorkoutAppRequest:completion:
sendCompanionUserNotificationRequest:completion:
sendTinkerSharingOptInRequest:forNRDeviceUUID:completion:
sendTinkerWatchPairingRequest:forNRDeviceUUID:completion:
sendTinkerEndToEndCloudSyncRequestForNRDeviceUUID:completion:
_workoutSamplesWereAssociated:
_watchOffWristNotification:
_scheduleResetReceivedNanoSyncAnchorsForHFD
pairedDevicesSnapshot
syncQueue
setSyncQueue:
messageCenter
setMessageCenter:
observers
setObservers:
nanoSyncDomain
setNanoSyncDomain:
activeSyncStore
setActiveSyncStore:
activeTinkerSyncStore
setActiveTinkerSyncStore:
tinkerOptInAcceptedToken
setTinkerOptInAcceptedToken:
tinkerOptInDeclinedToken
setTinkerOptInDeclinedToken:
tinkerOptInResponseBlocks
setTinkerOptInResponseBlocks:
syncStoresByDeviceIdentifier
setSyncStoresByDeviceIdentifier:
pairedDevices
setPairedDevices:
waitingForFirstUnlock
setWaitingForFirstUnlock:
periodicSyncTimer
setPeriodicSyncTimer:
lastPeriodicSyncDate
setLastPeriodicSyncDate:
setRestoreTimeout:
setEnablePeriodicSyncTimer:
pairedSyncManager
_isMaster
_invalidated
_waitingForFirstUnlock
_enablePeriodicSyncTimer
_tinkerOptInAcceptedToken
_tinkerOptInDeclinedToken
_pairedDevicesSnapshot
_messageCenter
_nanoSyncDomain
_activeSyncStore
_activeTinkerSyncStore
_tinkerOptInResponseBlocks
_syncStoresByDeviceIdentifier
_pairedDevices
_periodicSyncTimer
_lastPeriodicSyncDate
_restoreTimeout
_pairedSyncManager
requestRecord
_requestRecord
_requestSentHandler
request
_request
hd_isCKShare
needsHistoricalData
workoutBuilderIdentifier
taskServerRegistry
addObserver:forTaskServerUUID:queue:
_queue_performHistoricalQuery
workoutBuilderSampleQueryClientWithErrorHandler:
client_deliverSamples:hasFinishedHistoricalFetch:queryUUID:
enumerateSamplesOfType:error:handler:
addSampleObserver:
_queue_scheduleHistoricalQuery
didCreateTaskServer:
didInvalidateTaskServer:
workoutBuilderServer:addedSamples:
_shouldObserveOnPause
_shouldObserveDatabaseProtectedDataAvailability
_shouldExecuteWhenProtectedDataIsUnavailable
_hasFinishedHistoricalFetch
_hasDeliveredInitialResults
_workoutBuilderIdentifier
applicationBundleIdentifier
supportsAOT
setSupportsAOT:
_supportsAOT
_applicationBundleIdentifier
takeSessionAssertionForOwnerIdentifier:
takeSessionAssertionForOwnerIdentifier:supportsAOT:
takeDisableAOTAssertionForOwnerIdentifier:
addMedicalIDLogs:
setMedicalIDData:
medicalIDLogsCount
clearMedicalIDLogs
medicalIDLogsAtIndex:
medicalIDLogsType
hasMedicalIDData
medicalIDData
medicalIDLogs
setMedicalIDLogs:
_medicalIDData
_medicalIDLogs
initWithProfile:options:storeIdentifier:URL:batchSize:
runWithCompletion:
initWithProfile:options:storeIdentifier:URL:
remote_runStaticSyncExportWithOptions:storeIdentifier:URL:batchSize:completion:
remote_runStaticSyncImportWithOptions:storeIdentifier:URL:completion:
unknownRecords
addUnknownRecord:
_setDisplayName:
_initWithJoinType:fromTable:toTargetEntity:as:localReference:targetKey:
isTemporary
joinAsName
targetEntityClass
localTable
joinType
localReferenceProperty
targetKeyProperty
innerJoinClauseFromTable:toTargetEntity:as:localReference:targetKey:
leftJoinClauseFromTable:toTargetEntity:as:localReference:targetKey:
copyWithJoinType:
SQLJoinClause
_joinAsName
_localTable
_targetEntityClass
_localReferenceProperty
_targetKeyProperty
_joinType
initWithEntityClass:property:deletionAction:
joinClausesForProperty:
URLForResource:withExtension:
initWithDataFileName:
unarchivedObjectOfClasses:fromData:error:
initWithTimeIntervalSinceReferenceDate:
authorization_reportAuthRequestsFromBundleIdentifier:isExtension:isAppleWatch:shouldPrompt:
authorization_reportAuthRequestPromptedForBundleIdentifer:profileType:
initWithDataSource:
initWithFormat:
_promptTTRWithDatabaseType:isSQLite:description:error:
_deviceSupportsCorruptionPrompt
_persistedDatabaseCorruptionContextForSQLite:databaseType:
_currentDatabaseCorruptionContextForError:
_persistDatabaseCorruptionContext:isSQLite:databaseType:
_currentDatabaseIdentifierAndBuildString
_persistedDatabaseIdentifierAndBuildFromPriorPromptForSQLite:databaseType:
_popAlertWithRadarDescription:
_persistDatabaseIdentifierAndBuild:isSQLite:databaseType:
isTestingDevice
currentDatabaseIdentifier
_defaultKeyForSQLite:databaseType:suffix:
persistedStringForKey:
persistObject:forKey:
persistedDictionaryForKey:
setTitle:
setMessage:
setDefaultButton:
setCancelButton:
hk_tapToHealthRadarURLWithTitle:description:classification:reproducibility:keywords:autoDiagnostics:attachments:
defaultWorkspace
openURL:configuration:completionHandler:
presentWithResponseHandler:
defaultPrompterWithProfile:
promptTTRForSQLiteCorruptionWithDatabaseType:corruptionError:
promptTTRForHFDCorruptionWithFailureType:corruptionError:
unitTest_willPresentTTRAlertHandler
setUnitTest_willPresentTTRAlertHandler:
_unitTest_willPresentTTRAlertHandler
stringForKey:
dictionaryForKey:
firstSampleDate
currentTime
calendarWithIdentifier:
currentDate
component:fromDate:
isRunning
isCycling
isSwimming
isDoingHIIT
isDoingElliptical
isWalking
isDoingYoga
isHiking
isDoingCoreTraining
isDoingCardioDance
isDoingFunctionalStrengthTraining
isCoolingDown
setCurrentDay:
calendarDay
setFirstSampleDate:
lastSampleDate
setLastSampleDate:
lastRunDate
setLastRunDate:
currentDay
startTime
setStartTime:
setCurrentTime:
endTime
setEndTime:
isFinished
setFinished:
isFirstRun
setFirstRun:
isCoreTraining
isDancing
isFunctionalStrengthTraining
_createdFromNSKeyedUnarchiver
_finished
_firstRun
_coreTraining
_dancing
_functionalStrengthTraining
_firstSampleDate
_lastSampleDate
_lastRunDate
_currentDay
_startTime
_currentTime
_endTime
initWithOwnerIdentifier:client:shouldAcquireCLAssertion:
shouldAcquireCLAssertion
bksAssertion
setBksAssertion:
coreLocationAssertion
setCoreLocationAssertion:
_shouldAcquireCLAssertion
_client
_bksAssertion
_coreLocationAssertion
_queue_hasBackgroundPermissionForBundleIdentifier:errorOut:
_queue_acquireBKSAssertionForClient:
_queue_acquireCLInUseAssertionForClient:
ownerIdentifier
_queue_releaseCLInUseAssertion:forClient:
_queue_releaseBKSAssertion:forClient:
initWithPID:flags:reason:name:withHandler:
newAssertionForBundleIdentifier:withReason:
takeBackgroundRunningAssertionForOwnerIdentifier:client:includeCoreLocationAssertion:
hasBackgroundPermissionForBundleIdentifier:errorOut:
simplePredicate
propertyForKeyPath
supportsComputedUserCharacteristicCaching
_registerForTimeChangeNotifications
_queue_updateCharacteristicsAndUserProfile
initWithMode:queue:delay:block:
removeProtectedDataObserver:
_relatedQuantityType
removeObserver:forDataType:
_relatedCategoryType
_unregisterTimeChangeNotifications
_userCharacteristicForType:entity:error:
userCharacteristicForType:profile:entity:error:
modificationDateForCharacteristicWithType:profile:error:
_setUserCharacteristic:forType:shouldInsertSample:updateProfileAndSync:error:
setUserCharacteristic:forType:profile:error:
_relatedSampleForInsertionWithCharacteristicValue:
defaultLocalDataProvenance
insertDataObjects:withProvenance:creationDate:error:
_userCharacteristicsDidChangeShouldUpdateUserProfile:shouldSync:
performWriteTransactionWithHealthDatabase:error:block:inaccessibilityHandler:
_getCardioFitnessMedicationsStatusWithError:
initWithAge:gender:height:weight:condition:betaBlockerUse:
computeRestingCaloriesAtRate:user:duration:
_queue_updateActivityMoveModeCharacteristic
_queue_updateActivityMoveModeDefaultAndNotifyIfNecessary
_queue_updateQuantityCharacteristics
_queue_updateUserProfile
execute
hk_gregorianCalendarWithLocalTimeZone
startOfDayForDate:
copyForWritingProtectedData
_activityMoveModeActiveDate
_mostRecentCategorySampleOfType:beforeDate:error:
userProfile
dictionaryWithDictionary:
components:fromDate:toDate:options:
year
gramUnitWithMetricPrefix:
performReadTransactionWithHealthDatabase:context:error:block:
setUserProfile:error:
_queue_alertObserversDidUpdateUserProfile
_mostRecentQuantitySampleOfType:error:
performWriteTransactionWithHealthDatabase:context:error:block:
_mostRecentSampleOfType:beforeDate:error:
addObserver:forDataType:
_queue_updateCharacteristicsAndUserProfileIfNeeded
_queue_updateCharacteristicsAndUserProfileWithDelay
didRecieveDayChangeNotification:
userCharacteristicsManager:didUpdateUserProfile:
notifyObserver:handler:
modificationDateForCharacteristicWithType:error:
setUserCharacteristic:forType:error:
restingCaloriesFromTotalCalories:timeInterval:authorizedToRead:
addProfileObserver:
removeProfileObserver:
unitTest_setUpdateOperationDelay:
unitTest_currentDate
setUnitTest_currentDate:
_shouldUpdateQuantityCharacteristics
_significantTimeChangeNotificationToken
_userProfileLastUpdated
_lastUserProfile
_needsUpdateAfterUnlock
_unitTest_currentDate
setStartDate:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
setIsBusy:
setHasIsBusy:
hasIsBusy
isBusy
_isBusy
initWithUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
participant
setFetchShareParticipantsCompletionBlock:
initWithConfiguration:cloudState:identityLookupInfo:
_unitTest_setParticipant:
_participant
_identityLookupInfo
setApplicationIdentifier:
hasApplicationIdentifier
hasWorkoutConfiguration
_applicationIdentifier
enumerateAllAlarmEventsWithTransaction:predicate:error:enumerationHandler:
_alarmEventFromAllPropertiesRow:
clientIdentifier
eventIdentifier
dueDate
dueDateComponents
eventOptions
insertOrReplaceAlarmEvent:transaction:error:
predicateMatchingAllPredicates:
deleteEntitiesInDatabase:predicate:error:
deleteAlarmEvent:transaction:error:
_initWithClientIdentifier:eventIdentifier:dueDate:dueDateComponents:eventOptions:
getValuesForProperties:database:error:handler:
checkConstraintWithSQL:
enumerateAllAlarmEventsWithClientIdentifier:transaction:error:enumerationHandler:
enumerateAllAlarmEventsWithTransaction:error:enumerationHandler:
insertOrReplaceAlarmEvents:transaction:error:
deleteAlarmEvents:transaction:error:
deleteAllAlarmEventsWithClientIdentifier:transaction:error:
checkConstraints
alarmEventWithTransaction:error:
_shouldBypassAuthorization
hd_sampleType
authorizationMode
objectLimitAnchor
restrictedBundleIdentifier
_requiresPrivateEntitlementForQueries
readAuthorizationStatusesForTypes:error:
_unrestrictedAuthorizationForTypes:
_requiresAuthorization
hk_containsObjectPassingTest:
readAuthorizationStatusesByTypeForBundleIdentifier:types:profile:error:
unrestrictedReadAuthorizationStatus
notDerminedReadAuthorizationStatus
hk_mapToDictionary:
initWithSourceBundleIdentifier:entitlements:profile:
filteredObjectsForReadAuthorization:anchor:error:
performReadAuthorizationTransactionWithError:handler:
additionalAuthorizationPredicateForObjectType:error:
_sourceBundleIdentifier
_clientHasPrivateEntitlement
setValue:forKey:
bundleForClass:
dataContainerURL
recordIDsToDelete
zonesForContainerID:
_deleteRecords:container:
hd_errorStrippingExpectedCloudKitPartialFailures
removeRecord:
setRecordIDsToDelete:
_recordIDsToDelete
noneContributorUUID
_predicateForContributorWithUUID:
anyInDatabase:predicate:error:
_nextSyncAnchorInDatabase:error:
_insertWithUUID:appleID:callerID:deleted:modificationDate:syncAnchor:syncProvenance:primaryUser:database:error:
_predicateForNonDeletedContributor
updateProperties:predicate:database:error:bindingHandler:
contributorType
_predicateForContributorReference:
_initWithUUID:appleID:callerID:
_contributorReferenceForEntityMatchingPredicate:profile:error:
updateProperties:database:error:bindingHandler:
maxValueForProperty:predicate:database:error:
contributorReferenceForNoContributor
contributorReferenceForOtherUserWithUUID:
insertOrLookupContributorEntityForNoContributorWithTransaction:error:
insertWithUUID:appleID:callerID:primaryUser:profile:error:
insertWithUUID:appleID:callerID:primaryUser:syncProvenance:transaction:error:
insertPrimaryUserWithAppleID:callerID:database:error:
deleteContributorWithUUID:profile:error:
contributorEntityWithUUID:profile:includeDeleted:error:
contributorEntityForNoContributorWithProfile:error:
primaryUserContributorInProfile:error:
primaryUserContributorInDatabase:error:
contributorForReference:profile:error:
externalReferenceForContributorReference:profile:error:
appleIDInProfile:error:
updateAppleID:profile:error:
callerIDInProfile:error:
updateCallerID:profile:error:
modificationDateInProfile:error:
syncAnchorInProfile:error:
deletedInProfile:error:
mostRecentlyNotifiedLatestModifiedDateWithProfile:error:
latestCreationDateWithProfile:error:
distantPast
storeMostRecentlyNotifiedLatestModifiedDate:profile:error:
performWithProfile:transaction:error:
_initWithJob:
setShiftsDatesWithSystemClockChanges:
setAllowsPowerOptimizedScheduling:
userContext
_job
setUserContext:
shiftsDatesWithSystemClockChanges
allowsPowerOptimizedScheduling
taskValid
taskSatisfied
taskExpired
initWithTaskHandler:
deliverTask:taskName:onQueue:
_taskHandler
_queue_registerClientWithName:taskHandler:
_queue_addTask:withName:forClientNamed:
_queue_removeTaskWithName:forClientNamed:
_queue_taskWithName:forClientNamed:
registerClientWithName:taskHandler:
unregisterClientWithName:
addTask:withName:forClientNamed:
removeTaskWithName:forClientNamed:
taskWithName:forClientNamed:
_queue_deliverJob:withName:
_clients
_tasksQueuedForDelivery
_clientQueue
scannerWithString:
setCharactersToBeSkipped:
scanUpToString:intoString:
scanString:intoString:
isAtEnd
scanLocation
substringFromIndex:
initWithManager:context:accessibilityAssertion:completion:
setQualityOfService:
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
initWithConfiguration:cloudState:sharingResult:
acceptedShares
initWithManager:context:shareSetupMetadata:completion:
requiresExistingShareOwnerParticipant
_shareSetupMetadata
_acceptSharesPipelineStage
addAuthorizations:
setSourceUUID:
authorizationsCount
clearAuthorizations
authorizationsAtIndex:
setBackupUUID:
setSource:
authorizationsType
hasSourceUUID
hasBackupUUID
hasSource
sourceUUID
authorizations
setAuthorizations:
backupUUID
_authorizations
_backupUUID
_sourceUUID
hk_startOfDateBySubtractingDays:fromDate:
_typeWithIdentifier:
populatedSampleTypes:inDateInterval:profile:error:
arrayWithCapacity:
isAvailable
reportableTypes
_typesInMonthWithDataForTypes:now:error:
reportWithCurrentDate:error:
enumerateAssociatedSampleValuesOfType:interval:profile:error:sampleHandler:
collectionCalculator:queryForInterval:error:sampleHandler:
initWithProfile:quantityType:builderEntity:
builderEntity
enabled
setEnabled:
_enabled
_builderEntity
_predicateForDuration
_predicateForTotalDistance
_predicateForTotalEnergyBurned
_predicateForTotalFlightsClimbed
_predicateForTotalSwimmingStrokeCount
_predicateForWorkoutActivityType
_predicateForGoal
_predicateForGoalType
_goalTypeForQuantity:
valueForKey:
initWithObjects:forKeys:
services
discoverServices:
_queue_respond:forProperty:withError:
deviceDisconnecting
supportsOperation:
performOperation:onPeripheral:withParameters:completion:
supportsWritingCharacteristic:
writeCharacteristic:expectResponse:completion:
_queue_addPropertyHandler:forProperty:
_queue_startReadProperty:
readRSSI
arrayWithObject:
initWithName:manufacturer:model:hardwareVersion:firmwareVersion:softwareVersion:localIdentifier:UDIDeviceIdentifier:
deviceInformationSetOnPeripheral
servicesInvalidatedForDevice:withError:
discoverCharacteristics:forService:
discoveredServices:forPeripheral:
removeObjectsForKeys:
peripheral:didDiscoverCharacteristics:
discoveredCharacteristics:forDevice:service:
peripheral:didWriteValueForCharacteristic:error:
peripheralDidUpdateName:
peripheral:didModifyServices:
peripheralDidUpdateRSSI:error:
peripheral:didReadRSSI:error:
peripheral:didDiscoverServices:
peripheral:didDiscoverIncludedServicesForService:error:
peripheral:didDiscoverCharacteristicsForService:error:
peripheral:didUpdateValueForCharacteristic:error:
peripheral:didUpdateNotificationStateForCharacteristic:error:
peripheral:didDiscoverDescriptorsForCharacteristic:error:
peripheral:didUpdateValueForDescriptor:error:
peripheral:didWriteValueForDescriptor:error:
peripheralIsReadyToSendWriteWithoutResponse:
peripheral:didOpenL2CAPChannel:error:
initWithCBPeripheral:name:serviceManager:profile:
stateDescription
updateCBPeripheral:
discoverServices
addHealthService:
hasServiceWithUUID:
healthServiceForType:
disconnectServices
performOperation:withParameters:completion:
getProperty:withHandler:
deviceInformation
healthServices
setHealthServices:
servicesQueue
setServicesQueue:
discoveredServices
setDiscoveredServices:
serviceForProperty
setServiceForProperty:
propertiesAwaiting
setPropertiesAwaiting:
_privateMode
_discoveredServices
_cbPeripheral
_deviceInformation
_healthServices
_servicesQueue
_serviceForProperty
_propertiesAwaiting
quantityTypeIdentifier
addDatabaseJournalMergeObserver:journalType:queue:
_setupCloudSyncSupportIfRequired
_performPendingSubscriptionSyncsWithCompletion:
supportsCloudSync
_enableCloudSyncSupport
_disableCloudSyncSupport
_queue_setupPeriodicActivity
_queue_enableAPSPush
registerDisabledPeriodicActivityWithName:loggingCategory:
_disableAPSPush
removeDatabaseJournalMergeObserver:journalType:
_queue_syncAllProfilesWithContext:completion:
_queue_checkLastSyncDate
hk_finishedDiscreteProgressWithTotalUnitCount:
_queue_setStartDateForRestoreEventSyncComplete
_queue_updatePeriodicActivitiesWithSyncSuccess:
_queue_syncProfilesWithIdentifiers:context:completion:
_updateCachedLastSyncDatesWithCompletion:
setDidFinish:
discreteProgressWithTotalUnitCount:
_syncProfile:context:completion:
_unitTest_shouldSyncProfile:
_resetProfile:context:completion:
resetWithContext:completion:
_getPersistedAccountInfo
accountPartition
hasValidCredentials
accountStatus
deviceToDeviceEncryptionAvailability
_fetchDescriptionForProfile:context:completion:
fetchDescriptionWithContext:completion:
hasActiveTask
lastSuccessfulPushDate
lastSuccessfulPullDate
addTask:
activeTask
hd_progressMirroringProgress:
fetchSyncStatusWithCompletion:
retrieveDatabaseIdentifierFromProfile:error:
_reportingDescriptionForError:
_reportingDescriptionForPartialFailureError:
_timestampedDescriptionForError:
stringArrayForKey:
insertObject:atIndex:
removeLastObject
supportsDeviceToDeviceEncryption
_setHealthAccountDataclassEnabled:completion:
disableAndDeleteAllSyncDataWithCompletion:
hk_removeObjectsForKeysWithPrefix:
rollOwnerDifferentiatorAfterCloudSyncDisableForProfile:error:
disableSyncLocallyWithCompletion:
_disableAndDeleteAllSyncDataForProfile:completion:
_queue_updatePeriodicActivityCriteria
_queue_triggerSyncForAccountChange
aa_primaryAppleAccount
setEnabled:forDataclass:
saveAccount:withCompletionHandler:
_computeCanPerformCloudSyncForAccount:error:
aa_isManagedAppleID
isEnabledForDataclass:
usingDemoDataDatabase
didPerformActivityWithResult:minimumRetryInterval:activityStartDate:error:
compare:options:
fetchServerPreferredPushEnvironment:
_queue_handleIncomingDataUploadRequest
_queue_handleIncomingDataDownloadAvailableNotificationOnTinkerDevices
_queue_handleIncomingDataDownloadAvailableNotificationOnGuardianDevices
_queue_handleIncomingPrimaryMedicalIDDataAvailableForDownloadNotification
_queue_handleIncomingTinkerMedicalIDDataAvailableForDownloadNotification
subscriptionID
alertBody
_queue_handleSubscriptionWithID:
_profileIdentifiersForSubscriptionSync
_operationTypeForPull:push:
_syncOptionsForPull:push:
notificationFromRemoteNotificationDictionary:
topic
_queue_handleIncomingCloudKitPushNotification:
prepareForSync
updateCriteria
initWithProfile:name:interval:delegate:loggingCategory:
resetInterval
_timeSinceLastSyncSuccess
_requireInexpensiveNetworkingWithTimeSinceLastSuccess:
_configurePrimaryPeriodicActivityCriteria:hasPushed:hasRestored:timeSinceLastSuccess:
_configureSecondaryPeriodicActivityCriteria:hasPushed:hasRestored:timeSinceLastSuccess:
_configureUserRequestedBackupPeriodicActivityCriteria:
cloudSync_reportPeriodicSyncStartForType:
_prepareAllProfilesForSync
currentCriteria
_periodicActivityShouldTreatSyncErrorAsSuccess:
cloudSync_reportPeriodicSyncFailureWithError:duration:type:
_persistPeriodicSyncError:
cloudSync_reportPeriodicSyncSuccessAfterDuration:type:
_resetPersistedPeriodicSyncErrors
syncAllProfilesWithContext:completion:
maintenanceOperationWithName:asynchronousBlock:
_queue_generateRestoreEventMergeComplete
_primaryProfile
cloudSync_reportRestoreForProfile:startDate:endDate:duration:finishedJournalMerge:
performPeriodicActivity:completion:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
compareTask:withTask:queue:
periodicActivity:configureXPCActivityCriteria:
periodicActivityRequiresProtectedData:
databaseJournalMergeDidCompleteForProfile:
resetAllProfilesWithContext:completion:
fetchCloudDescriptionWithContext:completion:
fetchCloudSyncProgressWithCompletion:
addCloudSyncProgressCompletion:
_lastLongTimeWithoutSuccessfulCloudSyncReportDateKeyWithError:
_shouldPerformLastSyncDateCheckInternalSetting
isDeviceInManateeUnavailableCFUState
accountConfigurationDidChangeWithCompletion:
addManagerTask:
_queue_fetchAPSEnvironmentString:
triggerSubscription:
resetSubscriptionSyncBackoff
unitTest_setPrimaryProfileOverride:
unitTest_performPeriodicSyncWithCompletion:
unitTest_setPeriodicActivity:
unitTest_periodicActivity
_lock_cloudSyncEnabled
_lock_hasComputedCloudSyncEnabled
_lock_cloudSyncSupportEnabled
_lock_cloudSyncSupportValueLoaded
_lock_accountStore
_lock_syncInProgress
_lock_hasUpdatedCachedLastSuccessfulSyncDates
_lock_lastSuccessfulPullDate
_lock_lastSuccessfulPushDate
_syncTaskQueue
_activeSyncProgress
_activeSyncCompletions
_latestSyncStartLog
_latestSyncEndLog
_progressCompletionBlocks
_apsConnection
_periodicActivityCriteriaUpdateSource
_primaryPeriodicActivity
_secondaryPeriodicActivity
_userRequestedBackupActivity
_subscriptionBasedSyncActivity
_lock_requiresTinkerUpload
_lock_requiresTinkerDownload
_lock_lastTinkerDataDownloadTriggerTime
_lock_lastTinkerDataUploadTriggerTime
_unitTest_primaryProfileOverride
_createPseudoRandomDoubles
_pseudoRandomDoubleFromCurrentTime:mean:stdDev:
exchangeObjectAtIndex:withObjectAtIndex:
randomDoubleFromGenerator
_pseudoRandomDoubles
pseudoRandomDoubles
setPseudoRandomDoubles:
_generator
_distribution
performOrJournalWithProfile:error:
ontologyLifecycleManager
indexManager
dateWithTimeIntervalSinceNow:
notifyForNewHealthRecordsForProfile:
badgeForNewHealthRecordsForProfile:
_notifyUserIfNecessaryForProfile:
conceptIndexManagerDidBecomeQuiescent:samplesProcessedCount:
conceptIndexManagerDidChangeExecutionState:
startWithError:
stopWithError:
setBuilderIdentifier:
setSourceEntity:
setSourceVersion:
setDeviceEntity:
setGoalType:
setGoal:
setShouldCollectWorkoutEvents:
builderIdentifier
sourceEntity
sourceVersion
deviceEntity
goalType
goal
shouldCollectWorkoutEvents
_shouldCollectWorkoutEvents
_builderIdentifier
_sourceEntity
_sourceVersion
_deviceEntity
_goalType
_goal
remoteObjectProxy
addActivityCacheObserver:
removeActivityCacheObserver:
setActivityCacheManager:
heartRateSummaryQueryClientProxy
client_deliverSummary:queryUUID:
createTaskServerWithUUID:configuration:client:delegate:error:
activityCacheManager:changedTodayActivityCache:
activityCacheManager:changedYesterdayActivityCache:
activityCacheManager:changedHeartRateSummary:isToday:
_latestSummary
_activityCacheManager
createFileAtPath:contents:attributes:
fileHandleForUpdatingURL:error:
hk_assignError:code:description:underlyingError:
temporaryDirectory
URLByAppendingPathComponent:
URLByAppendingPathExtension:
_assetFileHandleForArchiveURL:fileManager:error:
initWithFileHandle:archiveType:
_updateAnchorRangeMap:withChange:outError:
done
addDataToArchive:pathInArchive:
getAnchorRange:forSyncEntityIdentifier:
syncAnchorRange
setAnchorRange:forSyncEntityIdentifier:
changesetCount
setChangesetCount:
archiveCount
setArchiveCount:
_syncEntityClassesWithProcessedChanges
_hasOpenSequence
_archiveCreator
_archiveURL
_pendingAnchorRangeMap
_changesetCount
_archiveCount
_progress
isSubclassOfClass:
hk_dataForAllUUIDs
_insertEntriesWithParentUUID:childUUIDsData:provenance:enforceSameSource:permitPendingAssociations:profile:error:
hk_appendBytesWithUUID:
initWithParentUUID:enforceSameSource:permitPendingAssociations:profile:transaction:
_insertEntriesWithParentUUID:childUUIDsData:provenance:context:error:
_insertAssociationEntryWithAssociationID:objectID:provenance:database:error:
enumerateProperties:withPredicate:healthDatabase:error:enumerationHandler:
initWithParentUUID:childUUIDsData:provenance:enforceSameSource:
enforceSameSource
permitPendingAssociations
_insertPendingAssociationsForParentUUID:childUUIDData:provenance:database:error:
valueForProperty:database:
allSourcesForBundleIdentifier:error:
_insertPendingAssociationForParentUUID:childUUIDBytes:provenance:database:error:
addJournalEntry:error:
deleteStatementWithProperty:database:
countValueForProperty:predicate:database:error:
predicateForSyncWithPredicate:syncEntityClass:session:syncAnchorRange:
tableAliases
associationPropertyForEntityClass:
privateSubEntities
associateSampleUUIDs:withSampleUUID:profile:error:
associateSampleUUIDData:withSampleUUID:profile:error:
insertEntriesWithAssociation:objects:enforceSameSource:profile:transaction:error:
insertEntriesWithAssociationUUID:objectUUIDsData:profile:error:
copyAssociationsFromObject:toObject:profile:error:
copyAssociationsFromObjectID:toObjectID:profile:error:
journalEntryForAssociation:objects:
realizePendingAssociationsWithTransaction:startingAnchor:error:
objectIDsForAssociationEntityWithPersistentID:profile:error:
deleteStatementForAssociationWithTransaction:
deleteStatementForObjectAssociationsWithTransaction:
countOfObjectsAssociatedWithObjectUUID:profile:error:
_enumerateAssociationsWithPredicate:syncEntityClass:session:syncAnchorRange:lastSyncAnchor:healthDatabase:error:block:
parentUUID
_enforceSameSource
_permitPendingAssociations
_parentUUID
_transaction
hk_countOfUUIDs
childUUIDsData
provenance
containsValueForKey:
decodeInt64ForKey:
decodeBoolForKey:
encodeInt64:forKey:
encodeBool:forKey:
_childUUIDsData
_provenance
syncPredicate
defaultMaximumObjectAge
_syncPredicateForSession:
initWithAssociationUUID:
setObjectUuids:
isNotNullPredicateWithProperty:
decodedAssociationUUID
objectUuids
entityClassForEnumeration
predicateWithAssociationID:
SQLJoinClausesForEntityClass:
SQLForEntityClass:
bindToStatement:bindingIndex:
_assocationID
predicateWithAssociationID:exists:
_exists
predicateWithInvertedCondition:
_inverted
_bufferHasSpace:beforeByte:count:resetOnFailure:
_copyUnsignedInt:fromData:byteCount:beforeByte:
_copySignedInt:fromData:byteCount:beforeByte:
floatFromSFLOAT:
doubleFromFLOAT:
setYear:
setDay:
setSecond:
int16FromData:before:
uint24FromData:before:
floatFromSFLOATData:before:
doubleFromFLOATData:before:
dateFromData:before:calendar:
uint8:toData:before:
uint16:toData:before:
uint32:toData:before:
unitTest_setUpdateTime:
_updateTime
_updateShareRecordsInContainer:
acceptanceStatus
permission
zoneShare
participants
role
_isValidParticipant:withPermissions:
removeParticipant:
setRequiredPermission:
setParticipantsToCheck:
requiredPermission
participantsToCheck
_requiredPermission
_participantsToCheck
setCoverageTypeCodingCollection:
setSubscriber:
setSubscriberId:
setBeneficiary:
setPolicyHolder:
setPayor:
setRelationshipCodingCollection:
setClassification:
setNetwork:
setPeriodStartDate:
setPeriodEndDate:
hasCoverageTypeCodingCollection
hasSubscriber
hasSubscriberId
hasBeneficiary
hasPolicyHolder
hasPayor
hasRelationshipCodingCollection
hasClassification
hasNetwork
hasPeriodStartDate
hasPeriodEndDate
_beneficiary
_classification
_coverageTypeCodingCollection
_network
_payor
_periodEndDate
_periodStartDate
_policyHolder
_relationshipCodingCollection
_subscriber
_subscriberId
recordIDWithZoneID:
isMedicalIDRecord:
initInSyncCircle:
initInZone:
addMedicalIDEvent:
_underlyingCodableMedicalIDMessage
setDemoDataGenerator:
setCreatedFromNSKeyedUnarchiver:
_demoDataGenerator
addObjects:fromPhoneAppWithBundleIdentifier:
addObjectsFromWatch:
objectsFromPhone
objectsFromWatch
objectsFromPhoneApps
setAssociatedObjectUUIDs:forObjectUUID:
enumerateObjectAssociations:
_objectsFromPhone
_objectsFromWatch
_objectsFromPhoneApps
_objectUUIDToAssocatedObjectUUIDs
initWithProfile:options:storeIdentifier:
_options
_storeIdentifier
initWithProfile:storeIdentifier:error:
_createEmptyExportDirectoryForStoreIdentifier:location:error:
initWithSyncStore:reason:delegate:
setDatabaseAccessibilityTimeout:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_archiveCreatorInDirectory:session:count:
_dataForChanges:
_chagesetFilePathForCount:
attributesOfItemAtPath:error:
fileSize
initWithURL:archiveType:
changeSetWithChanges:
nextSyncAnchorForEntity:session:startSyncAnchor:profile:error:
_estimateSyncEntityClassesWithChangesForSession:profile:
progressWithTotalUnitCount:parent:pendingUnitCount:
_exportQueue_archiveChanges:session:error:
exportDirectoryURL
_exportQueue
_exportToDisk
_batchSize
_exportProgress
_syncSessionProgress
_syncEntityIdentifiersWithProcessedChanges
_exportDirectoryURL
resetReceivedSyncAnchorMapWithError:
_queue_importStaticSyncChangesFromDirectory:syncStore:progress:completion:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
pathExtension
initWithKey:ascending:
sortedArrayUsingDescriptors:
_extractChangeArchive:syncStore:profile:progress:error:
initWithURL:
numberOfEntries
_extractChangesFromExtractor:error:
_applySyncChanges:store:profile:progress:error:
getDataForCurrentEntry
allSyncEntitiesByIdentifier
_importDirectoryURL
changeWithNanoSyncEntityClass:
maxEncodedBytesPerChangeSetForSyncEntityClass:
newChangeWithSyncEntityClass:
syncStoreEntityWithUUID:type:healthDatabase:error:
setAcknowledgedAnchorsWithMap:store:resetNext:resetInvalid:profile:error:
allOrderedSyncEntities
syncEpoch
syncStoreIdentifier
databaseIdentifier
syncStoreDefaultSourceBundleIdentifier
syncEntityDependenciesForSyncEntity:
canRecieveSyncObjectsForEntityClass:
enforceSyncEntityOrdering
shouldContinueAfterAnchorValidationError:
shouldEnforceSequenceOrdering
expectedSequenceNumberForSyncEntityClass:
setExpectedSequenceNumber:forSyncEntityClass:
syncStoreType
_syncProvenance
anonymousListener
initWithUnderlyingListener:label:
initWithMachServiceName:
serviceListener
keyEnumerator
endpoint
clientProvider
clientForListener:connection:error:
clientWithConnection:error:
exportObjectForListener:client:error:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
_handleInvalidationWithClient:exportedObject:
setInvalidationHandler:
_handleInterruptionWithClient:exportedObject:
setInterruptionHandler:
strongToStrongObjectsMapTable
connectionConfigured
connectionConfiguredForListener:client:exportedObject:
_handleConnectionInvalidationForClient:exportedObject:
connectionInterrupted
connectionInvalidatedForListener:client:exportedObject:
listener:shouldAcceptNewConnection:
initWithLabel:
allClients
setConnectionQueue:
setClientProvider:
label
_underlyingListener
_connectionQueue
_exportedObjectsByClient
_clientProvider
_label
fHIRResource
_setFHIRResource:
addDisabledOwnerIdentifiers:
addStores:
disabledOwnerIdentifiersCount
clearDisabledOwnerIdentifiers
disabledOwnerIdentifiersAtIndex:
storesCount
clearStores
storesAtIndex:
setDisplayFirstName:
setDisplayLastName:
setOwnerProfileIdentifier:
setSharedProfileIdentifier:
disabledOwnerIdentifiersType
storesType
setHasDeleted:
hasDeleted
hasDisplayFirstName
setDisplayNameModificationDate:
setHasDisplayNameModificationDate:
hasDisplayNameModificationDate
hasDisplayLastName
hasOwnerProfileIdentifier
hasSharedProfileIdentifier
disabledOwnerIdentifiers
setDisabledOwnerIdentifiers:
stores
setStores:
displayFirstName
displayNameModificationDate
displayLastName
ownerProfileIdentifier
sharedProfileIdentifier
_displayNameModificationDate
_disabledOwnerIdentifiers
_displayFirstName
_displayLastName
_ownerProfileIdentifier
_sharedProfileIdentifier
_stores
_deleted
setCodingSystem:
setCodingVersion:
setDisplayString:
hasCodingSystem
hasCodingVersion
hasDisplayString
codingSystem
codingVersion
displayString
_codingSystem
_codingVersion
_displayString
firstName
lastName
dsid
_firstName
_lastName
_dsid
setString:forKey:error:
stringForKey:error:
pairedGuardianParticipantWithError:
pairedGuardianUserInfoWithError:
_sourceBundleIdentifierWithEntitlements:processBundleIdentifier:isExtension:
currentOSVersion
hasAccessEntitlementWithIdentifer:
hasPrivateAccessEntitlementWithIdentifer:
initWithXPCClient:configuration:profile:
shouldBypassAuthorization
hasPrivateMetadataAccess
verifyHealthRecordsPermissionGrantedWithError:
XPCClient
authorizationOracle
_XPCClient
_authorizationOracle
_configuration
validateAndReturnError:
recoveredWorkoutSessionServerWithIdentifier:error:
requiresRecovery
createOrUpdateSourceForClient:error:
initWithUUID:configuration:client:clientSource:delegate:sessionServer:
setTaskServer:
addSource:
requiresCoreLocationAssertion
supportsAppRelaunchForRecovery
shouldStopPreviousSession
setAssociatedWorkoutBuilderEntity:
setAccumulator:
setWorkoutDataAccumulator:
sessionServerWithConfiguration:sessionUUID:taskServer:error:
_queue_setupSessionServer
setTargetState:date:error:
client_didChangeToState:date:
stopDate
client_didUpdateStartDate:endDate:
client_synchronizeWithCompletion:
client_didFailWithError:
accumulator
client_didGenerateEvents:
client_didUpdateWorkoutConfiguration:
remote_setTargetState:date:completion:
remote_recoverWithCompletion:
observeWorkoutSessionServer:
clientSource
_taskConfiguration
_clientSource
_accumulator
allSourcesWithError:
performHighPriorityTransactionsWithError:block:
hasSampleWithBundleIdentifier:error:
deleteSourceWithBundleIdentifier:error:
samplesDeletedInProfile:byUser:
sourceOrderManager
orderedSourcesForObjectType:error:
updateOrderedSources:forObjectType:error:
remote_fetchAllSourcesWithCompletion:
remote_fetchHasSampleWithBundleIdentifier:completion:
remote_deleteSourceWithBundleIdentifier:completion:
remote_fetchOrderedSourcesForObjectType:completion:
remote_updateOrderedSources:forObjectType:completion:
_unit
isCompatibleWithUnit:
birthDate
_setBirthDate:
addQuantitySamples:
addWorkouts:
addCorrelations:
addActivityCaches:
addDeletedSamples:
addLocationSeries:
addCdaDocumentSamples:
addFitnessFriendActivitySnapshots:
addFitnessFriendAchievements:
addFitnessFriendWorkouts:
addMedicalRecords:
addSleepSchedules:
addEcgSamples:
setSourceBundleIdentifier:
categorySamplesCount
clearCategorySamples
categorySamplesAtIndex:
quantitySamplesCount
clearQuantitySamples
quantitySamplesAtIndex:
workoutsCount
clearWorkouts
workoutsAtIndex:
correlationsCount
clearCorrelations
correlationsAtIndex:
activityCachesCount
clearActivityCaches
activityCachesAtIndex:
binarySamplesCount
clearBinarySamples
binarySamplesAtIndex:
deletedSamplesCount
clearDeletedSamples
deletedSamplesAtIndex:
locationSeriesCount
clearLocationSeries
locationSeriesAtIndex:
cdaDocumentSamplesCount
clearCdaDocumentSamples
cdaDocumentSamplesAtIndex:
fitnessFriendActivitySnapshotsCount
clearFitnessFriendActivitySnapshots
fitnessFriendActivitySnapshotsAtIndex:
fitnessFriendAchievementsCount
clearFitnessFriendAchievements
fitnessFriendAchievementsAtIndex:
fitnessFriendWorkoutsCount
clearFitnessFriendWorkouts
fitnessFriendWorkoutsAtIndex:
medicalRecordsCount
clearMedicalRecords
medicalRecordsAtIndex:
setGeneratedObjectCollection:
setProvenance:
sleepSchedulesCount
clearSleepSchedules
sleepSchedulesAtIndex:
ecgSamplesCount
clearEcgSamples
ecgSamplesAtIndex:
categorySamplesType
quantitySamplesType
workoutsType
correlationsType
activityCachesType
binarySamplesType
deletedSamplesType
locationSeriesType
cdaDocumentSamplesType
fitnessFriendActivitySnapshotsType
fitnessFriendAchievementsType
fitnessFriendWorkoutsType
medicalRecordsType
sleepSchedulesType
ecgSamplesType
hasSourceBundleIdentifier
hasGeneratedObjectCollection
hasProvenance
setCategorySamples:
quantitySamples
setQuantitySamples:
workouts
setWorkouts:
correlations
setCorrelations:
activityCaches
setActivityCaches:
setBinarySamples:
deletedSamples
setDeletedSamples:
locationSeries
setLocationSeries:
cdaDocumentSamples
setCdaDocumentSamples:
fitnessFriendActivitySnapshots
setFitnessFriendActivitySnapshots:
fitnessFriendAchievements
setFitnessFriendAchievements:
fitnessFriendWorkouts
setFitnessFriendWorkouts:
medicalRecords
setMedicalRecords:
sleepSchedules
setSleepSchedules:
ecgSamples
setEcgSamples:
_activityCaches
_binarySamples
_categorySamples
_cdaDocumentSamples
_correlations
_deletedSamples
_ecgSamples
_fitnessFriendAchievements
_fitnessFriendActivitySnapshots
_fitnessFriendWorkouts
_generatedObjectCollection
_locationSeries
_medicalRecords
_quantitySamples
_sleepSchedules
_workouts
isEquivalentIgnoringOwnerToZone:container:
cloudStateByAddingZones:
initWithZones:
initWithConfiguration:cloudState:zones:container:
_container
_zones
addEmergencyContacts:
addClinicalContacts:
setMedicalIDBytes:
setPictureData:
emergencyContactsCount
clearEmergencyContacts
emergencyContactsAtIndex:
clinicalContactsCount
clearClinicalContacts
clinicalContactsAtIndex:
setMedicalConditions:
setMedicalNotes:
setAllergyInfo:
setMedicationInfo:
setPrimaryLanguageCode:
emergencyContactsType
clinicalContactsType
hasMedicalIDBytes
setDateSaved:
setHasDateSaved:
hasDateSaved
setSchemaVersion:
setHasSchemaVersion:
hasSchemaVersion
setHasIsDisabled:
hasIsDisabled
setIsDisabledModifiedDate:
setHasIsDisabledModifiedDate:
hasIsDisabledModifiedDate
hasPictureData
setPictureDataModifiedDate:
setHasPictureDataModifiedDate:
hasPictureDataModifiedDate
hasName
setNameModifiedDate:
setHasNameModifiedDate:
hasNameModifiedDate
hasGregorianBirthday
setGregorianBirthdayModifiedDate:
setHasGregorianBirthdayModifiedDate:
hasGregorianBirthdayModifiedDate
hasHeight
setHeightModifiedDate:
setHasHeightModifiedDate:
hasHeightModifiedDate
hasWeight
setWeightModifiedDate:
setHasWeightModifiedDate:
hasWeightModifiedDate
setHasBloodType:
hasBloodType
bloodTypeAsString:
StringAsBloodType:
setBloodTypeModifiedDate:
setHasBloodTypeModifiedDate:
hasBloodTypeModifiedDate
setIsOrganDonor:
setHasIsOrganDonor:
hasIsOrganDonor
setIsOrganDonorModifiedDate:
setHasIsOrganDonorModifiedDate:
hasIsOrganDonorModifiedDate
setEmergencyContactsModifiedDate:
setHasEmergencyContactsModifiedDate:
hasEmergencyContactsModifiedDate
setClinicalContactsModifiedDate:
setHasClinicalContactsModifiedDate:
hasClinicalContactsModifiedDate
hasMedicalConditions
setMedicalConditionsModifiedDate:
setHasMedicalConditionsModifiedDate:
hasMedicalConditionsModifiedDate
hasMedicalNotes
setMedicalNotesModifiedDate:
setHasMedicalNotesModifiedDate:
hasMedicalNotesModifiedDate
hasAllergyInfo
setAllergyInfoModifiedDate:
setHasAllergyInfoModifiedDate:
hasAllergyInfoModifiedDate
hasMedicationInfo
setMedicationInfoModifiedDate:
setHasMedicationInfoModifiedDate:
hasMedicationInfoModifiedDate
setShareDuringEmergency:
setHasShareDuringEmergency:
hasShareDuringEmergency
setShareDuringEmergencyModifiedDate:
setHasShareDuringEmergencyModifiedDate:
hasShareDuringEmergencyModifiedDate
hasPrimaryLanguageCode
setPrimaryLanguageCodeModifiedDate:
setHasPrimaryLanguageCodeModifiedDate:
hasPrimaryLanguageCodeModifiedDate
medicalIDBytes
isDisabledModifiedDate
pictureDataModifiedDate
nameModifiedDate
gregorianBirthdayModifiedDate
heightModifiedDate
weightModifiedDate
bloodTypeModifiedDate
isOrganDonorModifiedDate
setEmergencyContacts:
emergencyContactsModifiedDate
setClinicalContacts:
clinicalContactsModifiedDate
medicalConditionsModifiedDate
medicalNotesModifiedDate
allergyInfoModifiedDate
medicationInfoModifiedDate
shareDuringEmergencyModifiedDate
primaryLanguageCodeModifiedDate
_allergyInfoModifiedDate
_bloodTypeModifiedDate
_clinicalContactsModifiedDate
_dateSaved
_emergencyContactsModifiedDate
_gregorianBirthdayModifiedDate
_heightModifiedDate
_isDisabledModifiedDate
_isOrganDonor
_isOrganDonorModifiedDate
_medicalConditionsModifiedDate
_medicalNotesModifiedDate
_medicationInfoModifiedDate
_nameModifiedDate
_pictureDataModifiedDate
_primaryLanguageCodeModifiedDate
_shareDuringEmergencyModifiedDate
_weightModifiedDate
_allergyInfo
_bloodType
_clinicalContacts
_emergencyContacts
_gregorianBirthday
_height
_medicalConditions
_medicalIDBytes
_medicalNotes
_medicationInfo
_pictureData
_primaryLanguageCode
_schemaVersion
_weight
_isDisabled
_shareDuringEmergency
initWithIdentifier:dateInterval:heartRate:heartRateContext:resumeContext:
_startMedicalIDFetchForContainer:database:
unifiedSyncZoneForContainerID:
setRecordIDs:
setFetchRecordsCompletionBlock:
initWithConfiguration:cloudState:container:
cloudMedicalIDData
medicalIDRecord
_cloudMedicalIDData
_medicalIDRecord
addMigrationTo:function:
addMigrationTo:function:foreignKeys:
yukon_addUnprotectedMigrationSteps
yukon_addProtectedMigrationSteps
initWithIdentifier:requestedScopeString:expiration:scope:
decryptTokenData:error:
storeAccessToken:error:
storeRefreshToken:error:
deleteCredentialKeyFromKeychainWithError:
databaseSchemas:containTable:
deleteDataEntitySubclassTable:intermediateTables:error:
dataDetectorWithTypes:error:
dataDetectorAll
dataDetectorSkipLink
dataDetectorSkipPhoneNumbers
dataDetectorSkipLinkSkipPhoneNumbers
_namesToRedactWithProfile:error:
names
_redactFullWordRegexWithError:
fullWordRegex
_SSNRegularExpressionWithError:
SSNRegex
_longNumberRegexWithError:
longNumberRegex
redactedStringWithString:options:redactedCount:
stringWithString:
_redactDataDetectorTypesFromString:options:
_redactNamesFromString:
_redactSSNsFromString:
_redactLongNumbersFromString:
replaceMatchesInString:options:range:withTemplate:
replaceOccurrencesOfString:withString:options:range:
_meContactNameKeys
_ios_meContactWithKeysToFetch:error:
_addNamesFromMeContact:toSet:
healthAppUserDefaultsDomainWithProfile:
propertyListValueForKey:error:
_addName:toSet:
medicalIDDataManager
whitespaceCharacterSet
componentsSeparatedByCharactersInSet:
_addNames:toSet:
accountOwnerType
samplesWithType:profile:encodingOptions:predicate:limit:anchor:error:
familyName
givenName
phoneticFamilyName
phoneticGivenName
previousFamilyName
nickname
resultType
numberOfRanges
valueWithRange:
enumerateMatchesInString:options:range:usingBlock:
rangeValue
stringByPaddingToLength:withString:startingAtIndex:
replaceCharactersInRange:withString:
redactorWithProfile:error:
redactedStringWithString:
redactedStringWithString:redactedCount:
redactedStringWithString:options:
_names
_dataDetectorAll
_dataDetectorSkipLink
_dataDetectorSkipPhoneNumbers
_dataDetectorSkipLinkSkipPhoneNumbers
_fullWordRegex
_SSNRegex
_longNumberRegex
setHasActivityType:
hasActivityType
activityTypeAsString:
StringAsActivityType:
setDurationMs:
setHasDurationMs:
hasDurationMs
setTotalEnergyBurned:
setHasTotalEnergyBurned:
hasTotalEnergyBurned
setTotalDistance:
setHasTotalDistance:
hasTotalDistance
setTotalSteps:
setHasTotalSteps:
hasTotalSteps
durationMs
totalEnergyBurned
totalSteps
_durationMs
_totalDistance
_totalEnergyBurned
_totalSteps
_activityType
_isSharingWithParticipant:
_updateShareRecordsWithParticipant:container:
_updatedRegistryRecordIfNeededForContainer:
arrayByAddingObject:
_didSaveSharesInZones:
registryRecord
initInZone:ownerProfileIdentifier:
sharedProfileIdentifierForOwnerProfileIdentifier:
setParticipantID:
setPermission:
addParticipant:
userIdentity
userRecordID
initWithRecordZoneID:
setZoneShare:
_addParticipantIfNeeded:zone:share:
owner
_foundOwnerParticipant:
invitationToken
hk_dictionaryByAddingEntriesFromDictionary:
setParticipant:
zones
setZones:
requireExistingRelationship
setRequireExistingRelationship:
shareURLs
invitationTokensByShareURL
_requireExistingRelationship
_shareURLs
_invitationTokensByShareURL
setByAddingObjectsFromArray:
ownerIdentifierForSyncContainer:profile:error:
initWithProfile:syncCircleIdentifier:primaryCKContainer:secondaryCKContainers:
unitTest_setShouldPushToUnifiedZone:
_disableCloudSyncWithCompletion:
_queue_generateRestoreEventSyncCompleteWithPullCompleteDate:
repositorySettings
setRepositorySettings:
_pullOperationFailureCount
_ownerIdentifierFetchCompletionBlocks
_shouldPushToUnifiedZone
_primaryCKContainer
_secondaryCKContainers
_allCKContainers
_repositorySettings
_queue_verifyCloudSyncEnabledWithError:
setSyncEnabled:
setLastPushDate:
setLastPullDate:
setLastPulledUpdateDate:
_readRestoreCompletionDateWithError:
setRestoreCompletionDate:
_readErrorRequiringUserActionOnCloudSyncError:
setErrorRequiringUserAction:
_queue_startObservingSync
_queue_didUpdateSyncStatusWithSyncEnabled:
_queue_didUpdateSyncStatusWithErrorRequiringUserAction:
_queue_startSyncIfRestoreNotCompletedWithUUID:completion:
_queue_didUpdateSyncStatus
syncEnabled
lastPushDate
lastPullDate
lastPulledUpdateDate
restoreCompletionDate
errorRequiringUserAction
clientRemote_didUpdateObserverWithSyncStatus:
clientRemote_syncDidStart
_completeCloudSyncRestoreForJournalMergeResult:error:
_queue_checkCloudSyncEarlyExitConditionsWithError:
_queue_syncDidStart
keyPathWithRootObject:path:
_queue_checkCloudSyncOngoingExitConditionsWithError:
addObserverBlock:
_queue_mergeCloudSyncJournalsWithTaskTree:progress:
_persistRestoreCompletionDate:
_queue_mergeCloudSyncJournalsForProfile:progress:taskTree:
progressForJournalMergeWithType:
performWithJournalType:error:block:
persistRestoreCompletionDate:withError:
_queue_didUpdateSyncStatusWithLastPushDate:
_queue_didUpdateSyncStatusWithLastPullDate:
_queue_didUpdateSyncStatusWithLastPulledUpdateDate:
_queue_didUpdateSyncStatusWithRestoreCompleteDate:
dataUploadRequestStatus
setDataUploadRequestStatus:
dataUploadRequestStartDate
setDataUploadRequestStartDate:
dataUploadRequestCompletionDate
setDataUploadRequestCompletionDate:
remote_startObservingSyncStatusWithCompletion:
remote_startSyncIfRestoreNotCompletedWithUUID:completion:
cloudSyncManager:didUpdateSyncEnabled:
cloudSyncManager:didUpdateLastPushDate:
cloudSyncManager:didUpdateLastPullDate:
cloudSyncManager:didUpdateLastPulledUpdateDate:
cloudSyncManager:didUpdateErrorRequiringUserAction:
cloudSyncManager:didUpdateRestoreCompletionDate:
cloudSyncManager:didUpdateDataUploadRequestStatus:startDate:endDate:
_status
_waitForSyncObservations
_observingSyncStatus
_hasRestoreCompleted
addPredictedLocationsOfInterest:
predictedLocationsOfInterestsCount
clearPredictedLocationsOfInterests
predictedLocationsOfInterestAtIndex:
predictedLocationsOfInterestType
predictedLocationsOfInterests
setPredictedLocationsOfInterests:
_predictedLocationsOfInterests
dataUploadRequestRecord
recordForZoneID:
setSavePolicy:
_typeForIdentifier:
hd_isMasterZoneIDForSyncCircleIdentifier:
zoneName
ownerName
initForZone:container:
scope
_containerIdentifier
_zoneIdentifier
_scope
_addSubscriptionRecord:error:
addSequenceHeaderRecord:
sortedArrayUsingSelector:
isDataUploadRequestRecord:
hasOrphanedSequenceRecords
records
recordNames
recordCount
zoneShareRecordID
hasLostIdentity
setHasLostIdentity:
hasFutureSchemaRecord
setHasFutureSchemaRecord:
setPurpose:
validatedForSharing
setValidatedForSharing:
masterRecord
setStore:
_records
_storeRecords
_orphanedSequenceRecords
_hasLostIdentity
_hasFutureSchemaRecord
_validatedForSharing
_repository
_zoneType
_registryRecord
_purpose
_zoneShare
_masterRecord
_dataUploadRequestRecord
_unitTest_localTimeZoneOverride
localTimeZone
hk_populatedCalendarGregorianCalendarDefault
setTimeZone:
isEqualToDate:
initWithClientIdentifier:eventIdentifier:dueDate:eventOptions:
initWithClientIdentifier:eventIdentifier:dueDateComponents:eventOptions:
currentDueDate
requiresDeviceOnWrist
requiresDeviceUnlocked
set_unitTest_localTimeZoneOverride:
_clientIdentifier
_eventIdentifier
_dueDate
_dueDateComponents
_eventOptions
__unitTest_localTimeZoneOverride
isValidDate
protectedDatabaseName
defaultProtectionClass
databaseNameForProtectionClass:
isProtectedMigration
schemaProviders
initWithUnprotectedDatabase:protectedDatabase:HFDataStore:schemaProviders:behavior:
unprotectedMigrationTransactionForMigrationTransaction:
defaultDatabase
defaultDatabaseName
HFDataStore
_unprotectedDatabase
_protectedDatabase
_HFDataStore
_behavior
_schemaProviders
stateWithProfile:error:
removeAllConceptIndexEntriesWithProfile:error:
generation
stateWithGeneration:
storeState:profile:error:
_localeDidChange:
_authorizationStatusesForTypes:authorizationServer:error:
_queue_versionedUnitPreferenceDictionaryWithError:
_queue_unitForType:versionedUnitPreferences:version:
_queue_defaultUnitForType:version:
isAuthorizationStatusDeterminedForTypes:error:
readAuthorizationWithTypes:error:
_queue_setUnit:forType:
_queue_removePreferredUnitForType:error:
_queue_generateVersionedUnitPreferencesWithError:
_queue_doesVersionedUnitPreferences:containPreferenceForType:
registerObserver:queue:
unitPreferencesManagerDidUpdateUnitPreferences:
_queue_updateUnitPreferenceCacheWithUnitPreferencesVersionToUnit:type:
_persistUnitPreferenceForType:unitPreferencesVersionToUnit:
_queue_notifyObserversWithUnitPreferences
_stringFromQuantityType:
domainForVersion:
setString:forKey:domain:category:profile:error:
setObject:atIndexedSubscript:
_queue_generateUnitPreferencesWithDomain:error:
allValuesForDomain:category:profile:error:
_unitPreferencesDictionaryFromKeyValueDictionary:
initWithDictionary:
unitString
_quantityTypeFromKeyString:
_unitFromValueString:quantityType:
scanInteger:
_quantityTypeWithCode:
unitPreferencesDictionaryForTypes:version:authorizationServer:error:
setPreferredUnit:forType:error:
removePreferredUnitForType:error:
setPreferredUnitToDefaultIfNotSetForType:
unitTesting_preferredUnitForType:error:
unitTesting_resetUnits
addUnitPreferenceObserver:queue:
removeUnitPreferenceObserver:
_unitPreferencesDidChange
_versionedUnitPreferences
_defaultPreferredUnits
_resourceQueue
unitPreferencesManager
valueForProperty:
hd_name
hd_isActive
hd_isAltAccount
hd_productType
hd_systemBuildVersion
hd_lastActiveDate
hd_lastInactiveDate
setNameContactIdentifier:
setPhoneNumber:
setPhoneNumberContactIdentifier:
setPhoneNumberLabel:
setRelationship:
hasNameContactIdentifier
hasPhoneNumber
hasPhoneNumberContactIdentifier
hasPhoneNumberLabel
hasRelationship
nameContactIdentifier
phoneNumber
phoneNumberContactIdentifier
phoneNumberLabel
_nameContactIdentifier
_phoneNumber
_phoneNumberContactIdentifier
_phoneNumberLabel
_relationship
allEntityClassesWithBehavior:
_migrateOrCreateSchemaWithEntityClasses:error:
retrieveDatabaseIdentifierFromDatabase:error:
isEqualToData:
migrationTransaction:didEncounterDatabaseMismatchWithUnprotectedIdentifier:protectedIdentifier:
_enableIncrementalAutovacuumIfNeeded
_createEntitiesWithEntityClasses:error:
_migrateFromUserVersion:didRequireMigration:error:
_verifyDatabaseIdentifiersAreValidWithError:
_createDataTablesInDatabase:entityClasses:requiredPrefix:error:
futureMigrationsEnabled
generateNewDatabaseIdentifier
_insertDatabaseIdentifier:error:
migrationTransaction:didCreateDatabasesWithIdentifier:
persistDatabaseIdentifier:database:error:
createTableSQL
databaseEntitiesForProtectionClass:
schemaName
schemaManager
currentSchemaVersionForProtectionClass:
setVersion:schema:protectionClass:error:
currentVersionForSchema:protectionClass:error:
_createEntitiesForSchemaProvider:protectionClass:migrator:error:
registerMigrationStepsForProtectionClass:migrator:
hk_databaseSchemaRolledBackError
_presentRollbackAlertForSchema:protectionClass:foundVersion:currentVersion:
initWithTransaction:
_migrationRequiredForProtectionClass:migrator:schemaProviders:error:
addPrimaryMigrationSteps
_createEntitiesOrAddMigrationStepsForProtectionClass:schemaProviders:migrator:error:
migrateFromVersion:toVersion:error:
migrateOrCreateSchemaWithError:
allEntityClassesWithProtectionClass:
allCurrentAndFutureEntityClasses
deviceManager
devicesWithProperty:matchingValues:error:
allDevicesWithError:
remote_fetchDevicesMatchingValues:forProperty:completion:
remote_fetchAllDevicesWithCompletion:
setHasType:
hasType
initWithBundleIdentifier:dataCode:
setUpdateFrequency:
setLastAckTime:
setLastAnchor:
setLaunchTimeHysteresis:
dataCode
updateFrequency
lastAnchor
lastAckTime
launchTimeHysteresis
_dataCode
_updateFrequency
_lastAnchor
_lastAckTime
_launchTimeHysteresis
allergyCodings
setAllergyCodings:
onsetDate
setOnsetDate:
reactions
setReactions:
criticalityCoding
setCriticalityCoding:
lastOccurenceDate
setLastOccurenceDate:
addAllergyRecord:
onboardingCompletionsForHighestVersionOfFeatureIdentifier:transaction:error:
onboardingCompletionsForLowestVersionOfFeatureIdentifier:transaction:error:
insertOnboardingCompletion:transaction:error:
featureIdentifier
_performWriteTransactionAndNotifyObserversWithError:block:inaccessibilityHandler:
deleteAllCompletionsForFeatureIdentifier:transaction:error:
_notifyObserversOfFeatureIdentifiers:
onboardingCompletionManager:didUpdateOnboardingCompletionsForFeatureIdentifier:
initWithCodableOnboardingCompletions:syncProvenance:
insertCodableOnboardingCompletions:syncProvenance:transaction:error:
_lock_unregisterObserver:featureIdentifier:
onboardingCompletionsForHighestVersionOfFeatureIdentifier:error:
onboardingCompletionsForLowestVersionOfFeatureIdentifier:error:
insertOnboardingCompletion:error:
resetOnboardingCompletionsForFeature:error:
insertCodableOnboardingCompletions:syncProvenance:error:
_insertCodableOnboardingCompletions:syncProvenance:error:inaccessabilityHandler:
registerObserver:featureIdentifier:queue:
unregisterObserver:featureIdentifier:
_observersByFeatureIdentifier
onboardingCompletionManager
_codableOnboardingCompletions
strongToWeakObjectsMapTable
configureCollectorsAndAggregators
_setFitnessMachineType:
_queue_processBufferedCharacteristics
unregisterDataCollector:
unsignedIntegerValue
objectTypeForWorkoutMetric:
aggregatorForType:
registerDataCollector:state:
_queue_handleDataCharacteristic:
_queue_processDataCharacteristic:
_queue_processDatumsByMetric:timestamp:
_queue_shouldApplyDatum:toAggregator:
_queue_calculateDatumForAggregatorType:currentDatum:previousDatum:
dataCollector:didCollectSensorDatum:device:
workoutMetricsFromDatums:
metricsCollector:didCollectMetrics:
_cmFitnessMachineDataFromDatums:timestamp:
feedFitnessMachineData:
aggregationStyle
datumForChangeSince:newIdentifier:newResumeContext:
_isZero
resumeContext
_queue_fitnessMachineSumForType:dateInterval:completion:
_filterForFitnessMachineSamplesWithStartDate:endDate:quantityType:
entityEnumeratorWithType:profile:
setImproveJoinOrderingForStartDateIndexSelection:
startDateFilterWithOperatorType:date:dataTypes:
endDateFilterWithOperatorType:date:dataTypes:
_connectedGymSource
filterForKeyPath:operatorType:value:dataTypes:
andFilterWithSubfilters:
_queue_handleConfigurationChanged:
_deliverBufferedMetrics
initWithTimestamp:
_getDoubleFromDatum:unitString:defaultValue:
setElapsedTime:
setTotalEnergy:
totalStrideCount
_getLongFromDatum:unitString:defaultValue:
setTotalStrideCount:
totalElevationAscended
setTotalElevationAscended:
totalFloorsClimbed
setTotalFloorsClimbed:
setInstantaneousSpeed:
setInstantaneousCadence:
setInstantaneousPower:
setInclination:
setResistanceLevel:
beginCollectionForDataAggregator:lastPersistedSensorDatum:
dataAggregator:wantsCollectionWithConfiguration:
sourceForDataAggregator:
identifierForDataAggregator:
registerWithAggregators
preferredAggregationIntervalForAggregator:
sensorDatumClassForAggregator:
canResumeCollectionFromLastSensorDatum
dataAggregator:didPersistDatums:success:error:
dataAggregator:requestsCollectionThroughDate:completion:
unitTest_processDatumsByMetric:
_fitnessMachineType
_aggregators
_previousDatums
_previousWorkoutMetrics
_approximatedStartDate
_bufferedCharacteristics
_localDevicePreferredObjectTypes
_bufferedMetrics
_machineBrand
_device
_cmFitnessMachine
_metricsCollectorObservers
_machinePreferredUntilDate
initWithConfiguration:cloudState:shareURLs:invitationTokensByShareURL:
share
_share
_acceptedShares
floorsIsSet
floors
stepsPerMinuteIsSet
stepsPerMinute
stepCountIsSet
stepCount
_floorsField
_stepsPerMinuteField
_stepCountField
_cancelTaskTimeout
stage
setGuardianDisplayName:
_scheduleTaskTimeout:timeoutHandler:
initWithConfiguration:completion:
_finishWithSuccess:error:
_prepareGuardianForSharingForRequest:
profileAssociatedWithNRDeviceUUID:
removePrivacyAlerts
_presentFailedTeardownAlert
removeParticipants:fromSharesWithCompletion:
removeAllEventsWithError:
leaveSharesWithCompletion:
fetchShareParticipantsWithCompletion:
lookupInfo
emailAddress
fetchCloudKitEmailAddressWithCompletion:
_didTimeOutWithHandler:
localizedStringForKey:value:table:
setStage:
setGuardianAccountIdentifier:
_sendSharingRequestToTinkerDevice:
prepareForSharingWithCompletion:
codablePairingRequest
nanoRegistryDeviceUUID
cloudSyncShareSetupMetadataWithCodableSharingSetupMetadata:error:
_acceptSharingForRequest:metadata:
_lookupOrCreateTinkerProfileForRequest:metadata:acceptedShares:error:
_setupTinkerProfileForRequest:metadata:acceptedShares:
acceptShare:completion:
dateOfBirth
_updateProfile:withDateOfBirth:firstName:lastName:dsid:error:
configureForShareSetupMetadata:acceptedShares:completion:
_existingTinkerProfileForRequest:metadata:acceptedShares:error:
_profileWithUUID:type:
createProfileForIdentifier:displayName:error:
remote_unitTesting_createTaskServerNoOpWithCompletion:
remote_requestTinkerSharingOptInWithGuardianDisplayName:NRDeviceUUID:completion:
remote_setupHealthSharingForSecondaryPairedDeviceWithConfiguration:completion:
remote_performEndToEndCloudSyncWithNRDeviceUUID:syncParticipantFirst:completion:
remote_tearDownHealthSharingWithTinkerDeviceWithNRUUID:completion:
remote_tearDownHealthSharingWithPairedGuardianWithCompletion:
remote_fetchSharingStatusWithPairedGuardianWithCompletion:
remote_fetchSharingStatusForCurrentAppleIDWithOwnerEmailAddress:completion:
tinkerSharingSetupTimeout
setTinkerSharingSetupTimeout:
unitTest_timeoutTriggered
setUnitTest_timeoutTriggered:
_timeoutSource
_taskDidTimeout
_currentRequest
_tinkerSharingSetupTimeout
_unitTest_timeoutTriggered
setSetupType:
setGuardianIcloudIdentifier:
setGuardianFirstName:
setGuardianLastName:
setGuardianDSID:
setTinkerFirstName:
setTinkerLastName:
guardianAccountIdentifier
_stage
_guardianAccountIdentifier
initWithHealthDirectoryPath:medicalIDDirectoryPath:
_newBehavior
_newConnectionManager
isDeviceSupported
_shouldInitializeDaemon
_newPluginManager
_newContentProtectionManager
_newProcessStateManager
_newBackgroundTaskScheduler
_newMaintenanceWorkCoordinator
_newPrimaryProfile
unitTest_didCreateProfile:
_newProfileManager
addProfile:
_newCloudSyncCoordinator
_newAnalyticsSubmissionCoordinator
_newAutoBugCaptureReporter
supportsFeatureAvailabilityAssets
pluginsConformingToProtocol:
registerTaskServerClassesWithProvider:error:
createExtensionsForDaemon:
_setUpSignalHandlers
_registerForDeviceNameChanges
_notifyDaemonReadyObservers
_setUpLaunchEventHandlers
_localeOrLanguageChanged:
cancelAllOperations
invalidateAllServersForProfile:
obliterateAndTerminateProfiles:options:reason:completion:
_bundleIdentifiersToTerminateAfterObliteration
_terminateAndKillClientsForObliteration:
terminateClean:reason:
terminateApplication:forReason:andReport:withDescription:completion:
clientProcesses
_terminationCleanup
exitClean:reason:
_handleSigterm
_setupSignal:handler:
logAllDiagnostics
_setUpDarwinNotificationEventHandler
_setUpDistributedNotificationEventHandler
_setupMemoryWarningHandler
_handleDarwinNotificationWithName:event:
daemonDidReceiveNotification:
_resetPrivacySettings
_handleDistributedNotificationWithName:event:
_handleLaunchServicesEvent:name:
hd_dictionaryFromXPCObject:
_notifyDaemonActivatedObservers
_postDaemonLaunchDarwinNotification
daemonReadyComplete:
daemonActivated:
powerAssertionWithIdentifier:timeout:timeoutHandler:
_unregisterLaunchEventDynamicallyForNotification:
_registerLaunchEventDynamicallyForNotification:
healthDirectoryURL
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
_updateCurrentDeviceName
updateCurrentDeviceNameWithError:
resetAllAuthorizationRecordsWithCompletion:
initWithDomain:
synchronizeNanoDomain:keys:
daemonExtensionWithIdentifier:
initWithBundleIDs:states:elevatedPriority:
initWithMachServiceName:daemon:
initWithApplicationStateMonitorProvider:
isRestricted
createApplicationStateMonitor
createApplicationStateMonitorWithBundleIDs:states:elevatedPriority:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
registerForDaemonReady:
registerDaemonActivatedObserver:queue:
registerForLaunchNotification:
unregisterForLaunchNotification:
daemonExtensionsConformingToProtocol:
backgroundTaskScheduler
pluginManager
alertSuppressionService
setAlertSuppressionService:
initWithContainerDirectoryPath:
setDaemonTester:
performBlockWithPowerAssertionIdentifier:transactionName:powerAssertionInterval:block:
healthDirectoryPath
mainQueue
workoutPluginExtension
_newReferenceOntologyAsset
unitTest_taskServerDidInit:
remoteFeatureAvailabilityAssetManager
queryManager
daemonTester
shouldEnqueueMaintenanceWork
setShouldEnqueueMaintenanceWork:
connectionManager
devicePowerMonitor
xpcEventManager
_healthDirectoryPath
_languageChangeNotifyToken
_backgroundTaskScheduler
_contentProtectionManager
_cloudSyncCoordinator
_periodicActivity
_pluginManager
_processStateManager
_profileManager
_deviceNameChangesToken
_daemonReadyLock
_daemonReadyBlocks
_numberOfDaemonReadyObserversBeforeReady
_numberOfDaemonReadyObserversAfterReady
_daemonReady
_didStart
_daemonActivatedBlocks
_daemonExtensionsByIdentifier
_shouldEnqueueMaintenanceWork
_medicalIDDirectoryPath
_analyticsSubmissionCoordinator
_autoBugCaptureReporter
_alertSuppressionService
_remoteFeatureAvailabilityAssetManager
_maintenanceWorkCoordinator
_queryManager
_daemonTester
_connectionManager
_taskServerRegistry
_devicePowerMonitor
_alarmScheduler
_xpcEventManager
_endTimestamp
ascending
orderingTermForSortDescriptor:
addEncodingOptionsFromDictionary:
setOrderingTerms:
setLimitCount:
maxRowIDForPredicate:healthDatabase:error:
deleteSamplesWithPredicate:limit:generateDeletedObjects:transaction:profile:recursiveDeleteAuthorizationBlock:completionHandler:
initWithSourceIDs:types:
setInsertDeletedObjects:
setRecursiveDeleteAuthorizationBlock:
deleteSamplesWithPredicate:limit:deletionContext:completionHandler:
finish
deleteObjectWithPersistentID:objectUUID:entityClass:objectType:provenanceIdentifier:deletionDate:error:
lastInsertedDeletedObjectPersistentID
deletedObjectCount
deletedObjectTypeSet
enumerateQueryResultsFromColumns:properties:predicate:groupBy:orderingTerms:limit:database:error:enumerationHandler:
_initWithObjectType:entityClass:profile:
_initWithObjectTypes:entityClass:profile:
sourceIDsForObjectsOfType:profile:predicate:error:
countOfObjectsWithPredicate:healthDatabase:error:
distinctProperty:predicate:database:error:
dataTypeWithNumber:
dateIntervalsForSampleTypes:profile:error:
supportsSampleExpiration
_predicateWithSampleType:sourceIdentifier:predicate:
_deletedEntityClass
_entityClassForDeletion
oldestSampleWithType:profile:encodingOptions:predicate:error:
maxAnchorForSamplesWithType:profile:error:
deleteSamplesWithTypes:sourceEntities:profile:recursiveDeleteAuthorizationBlock:completionHandler:
enumerateAssociatedObjectsForIdentifier:inDatabase:error:associatedObjectHandler:
entityEnumeratorWithTypes:profile:error:
countOfSamplesWithType:profile:matchingPredicate:withError:
sampleTypesForSamplesMatchingPredicate:profile:error:
objectInsertionFilterForProfile:
columnNamesForTimeOffset
_predicateWithSampleType:predicate:
_sampleTypeInDatabase:
setObject:
setDataType:
_setStartTimestamp:
_setEndTimestamp:
_setSampleType:
sourceIDs
types
deleteSamplesWithTypes:sourceEntities:recursiveDeleteAuthorizationBlock:error:
setSourceIDs:
setTypes:
_sourceIDs
_types
hd_predicateForSamplesWithTypes:endingAfterDate:minusDays:
hd_predicateForSamplesWithTypes:endingBeforeDate:minusDays:
_earliestAllowedStartDateForSampleOverlappingDate:
_migrateNanoPairingSchema:
migrationStepFrom:to:handler:
_migrateSourcesTableForSync:
_migrateSourceDevices:
_migrateAuthorizationsForSync:
_addAuthorizationForeignKeysWithError:
_addAuthorizationAnchorColumnWithError:
_removeStandHourWriteAuthorizationWithError:
_migrateDataTypeSourceOrderForSyncAndForeignKeys:
_addOriginalDataColumnsToQuantitySamplesWithError:
_addDataProvenanceTableAndMigrateWithError:
_migrateSedentaryStateFromQuantityToCategoryWithError:
_addMenstruationSamplesTable:
_migrateSourcesToProvenanceWithError:
_updateDeviceEnabledWithError:
_dropMenstruationTable:
_fixObjectsProvenanceForeignKeyWithError:
_clearMenstrualFlowAndSexualActivitySamples:
_updateHeightPreferenceWithError:
_fixupMigratedProtectedSchemaWithError:
_setAuthorizationAnchorWithError:
_fixProvenancesWithZeroSourceOrDeviceWithError:
_addNotNullConstraintToProvenanceColumnWithError:
_fixDanglingSourcesAndProvenancesWithError:
_addBasalEnergyColumnToWorkoutsWithError:
monarchUnprotectedMigrationSteps
monarchProtectedMigrationSteps
createListenerWithMachServiceName:
createAnonymousListenerWithLabel:
_configureListener:
_processForConnection:error:
initWithConnection:process:
endpointWithClient:healthDaemon:
endpointInvalidated:
processCreationHandler
setProcessCreationHandler:
_listenerQueue
_processesByAuditToken
_endpoints
_serviceListener
_processCreationHandler
setNote:
setFHIRIdentifier:
setSortDate:
setLocale:
setCountry:
hasNote
setEnteredInError:
setHasEnteredInError:
hasEnteredInError
setModifiedDate:
setHasModifiedDate:
hasModifiedDate
hasFHIRIdentifier
hasSortDate
setExtractionVersion:
setHasExtractionVersion:
hasExtractionVersion
hasLocale
hasCountry
setState:
setHasState:
hasState
enteredInError
fHIRIdentifier
sortDate
extractionVersion
locale
country
_extractionVersion
_modifiedDate
_state
_country
_fHIRIdentifier
_locale
_note
_sortDate
_enteredInError
contributorReferenceForPrimaryUser
entityWithPersistentID:
_insertOrLookupContributorEntityForPrimaryUserWithTransaction:error:
_primaryAppleAccount
_imPreferredAccount
appleID
iMessageService
contributorForReference:error:
defaultContributorReference
insertOrLookupContributorEntityWithReference:transaction:error:
_openDB
_obliterateWithReason:preserveCopy:generateStackshot:
absoluteString
hd_removeSQLiteDatabaseAtURL:preserveCopy:
URLByDeletingLastPathComponent
_reallyOpenDB
_createSchemaWithError:
initWithFormat:arguments:
_dataFromObject:
_handleError:format:
_objectFromData:
initForReadingFromData:error:
finishDecoding
_recordMessage:deviceID:type:outgoing:request:length:
_recordMappingOfRequest:toResponse:
initWithSQL:database:
performStatementWithError:bindingHandler:
initWithURL:objectClass:
setObject:forKey:expires:
enumerateObjectsSortedByExpirationDate:
didSendRequest:deviceID:type:length:
didReceiveRequest:deviceID:type:length:
didSendResponse:toRequest:deviceID:type:length:
didReceiveResponse:toRequest:deviceID:type:length:
didFinishSending:
didReceiveError:forMessageID:
didCancel:
messageIDsForPendingOutgoingMessagesWithType:deviceID:
_objectClass
_databaseURL
_fixSyncProvenanceForPostOkemoZurs:
boulderUnprotectedMigrationSteps
boulderProtectedMigrationSteps
initWithOperation:
operation
setOperation:
_operation
_deviceLocalCategory
setData:forKey:domain:category:profile:error:
dataForKey:domain:category:profile:entity:error:
_modDateForKey:domain:category:profile:entity:error:
_setRawKeysAndValues:domain:category:database:error:
_rawValuesForKeys:domain:category:database:error:
numberForKey:domain:category:profile:entity:error:
persistDatabaseIdentifier:profile:error:
retrieveDatabaseIdentifierCreationDateFromProfile:error:
setOkemoZursObjectAnchor:database:error:
okemoZursObjectAnchorWithProfile:error:
workoutCondenser
condenseWorkoutsForReason:workoutBatchLimit:completion:
objectWithUUID:encodingOptions:profile:error:
condenseWorkout:error:
condensedWorkoutsWithError:
condensableWorkoutsWithError:
remote_condenseWorkoutsForReason:workoutBatchLimit:completion:
remote_condenseWorkoutWithUUID:completion:
remote_condensedWorkoutsWithCompletion:
remote_condensableWorkoutsWithCompletion:
instantaneousPaceIsSet
instantaneousPace
averagePaceIsSet
averagePace
setAuthorizationStatus:
setHasAuthorizationStatus:
hasAuthorizationStatus
setAuthorizationRequest:
setHasAuthorizationRequest:
hasAuthorizationRequest
setHasModificationDate:
hasModificationDate
setModificationEpoch:
setHasModificationEpoch:
hasModificationEpoch
setAuthorizationMode:
setHasAuthorizationMode:
hasAuthorizationMode
authorizationRequest
modificationEpoch
_authorizationMode
_authorizationRequest
_authorizationStatus
_modificationDate
_modificationEpoch
setGatewayExternalID:
setResourceID:
setRawContent:
setFhirVersion:
setReceivedDateTimeZoneName:
setSourceURL:
setAccountIdentifier:
setOriginVersionBuild:
setMessageVersion:
setFirstSeenDateTimeZoneName:
hasGatewayExternalID
hasResourceID
hasRawContent
setReceivedDate:
setHasReceivedDate:
hasReceivedDate
hasFhirVersion
hasReceivedDateTimeZoneName
hasSourceURL
setExtractionHints:
setHasExtractionHints:
hasExtractionHints
hasAccountIdentifier
setOriginVersionMajor:
setHasOriginVersionMajor:
hasOriginVersionMajor
setOriginVersionMinor:
setHasOriginVersionMinor:
hasOriginVersionMinor
setOriginVersionPatch:
setHasOriginVersionPatch:
hasOriginVersionPatch
hasOriginVersionBuild
hasMessageVersion
setFirstSeenDate:
setHasFirstSeenDate:
hasFirstSeenDate
hasFirstSeenDateTimeZoneName
gatewayExternalID
resourceID
rawContent
receivedDate
fhirVersion
receivedDateTimeZoneName
sourceURL
extractionHints
accountIdentifier
originVersionMajor
originVersionMinor
originVersionPatch
originVersionBuild
messageVersion
firstSeenDate
firstSeenDateTimeZoneName
_extractionHints
_firstSeenDate
_originVersionMajor
_originVersionMinor
_originVersionPatch
_receivedDate
_accountIdentifier
_fhirVersion
_firstSeenDateTimeZoneName
_gatewayExternalID
_messageVersion
_originVersionBuild
_rawContent
_receivedDateTimeZoneName
_resourceID
_sourceURL
weakObjectsHashTable
_diagnosticsForKeys:shouldLog:
_diagnosticsOverview
currentInternalDeviceModel
totalDiskCapacity
currentDiskSpaceAvailable
diagnosticsForKeys:
_objects
recordIDWithOwnerIdentifier:storeIdentifier:zoneID:sequenceSlot:
recordIDWithIndividualZoneID:sequenceSlot:
_recordIDForStoreRecord:slot:
initForSequenceSlot:syncAnchorMap:active:changeIndex:childRecordCount:baselineEpoch:includedIdentifiers:protocolVersion:storeRecordID:record:schemaVersion:
setSlot:
setChildRecordCount:
setEpoch:
setAnchorMap:
setIncludedStoreIdentifiers:
initWithCKRecord:schemaVersion:underlyingSequence:
hd_splitIntoSyncCircleIdentifier:storeIdentifier:
includedStoreIdentifiers
slot
active
childRecordCount
epoch
hd_setValuesIfChanged:
anchorMap
syncAnchorMapWithCodableSyncAnchorRangeMap:
hd_setEncryptedValue:ifChangedForKey:
changedKeys
encryptedValueStore
_recordNameForSequenceSlot:
hasSuffix:
setWithCapacity:
setFrozenAnchorMap:
setUnfrozenChangeRecordNames:
anchorCount
setAnchorsFromMap:
hasFrozenAnchorMap
frozenAnchorMap
unfrozenChangeRecordNames
includedIdentifiers
recordIDsWithIndividualZoneID:
recordIDsForOwnerIdentifier:storeIdentifier:zoneID:
isSequenceRecord:
initForSequenceSlot:syncAnchorMap:changeIndex:baselineEpoch:includedIdentifiers:storeRecord:
_unitTest_setChildRecordCount:
_underlyingSequence
setValueRange:
hasValueRange
valueRange
_valueRange
addEntriesFromDictionary:
alertLevel
userNotificationOptions
_handleResponse:
title
message
defaultButton
cancelButton
otherButton
setOtherButton:
additionalDescriptors
setAdditionalDescriptors:
setAlertLevel:
setUserNotificationOptions:
responseHandler
setResponseHandler:
notification
setNotification:
_title
_message
_defaultButton
_cancelButton
_otherButton
_additionalDescriptors
_alertLevel
_userNotificationOptions
_responseHandler
_notification
_entityForKey:database:error:
_insertEntityWithKey:database:error:
entityForKey:healthDatabase:error:
insertEntityWithKey:healthDatabase:error:
_keyForPersistentID:database:
_migrateFromVersionNoneTo1:
_migrateEmergencyContactsToVersion2:
_migrateEmergencyContactsToVersion3:
_migrateFromVersion3ToVersion4:
_migrateToSchemaVersion:withAddressBook:
birthdate
_migrateToAddressBook:
_migrateToContactsWithAddressBook:
nameRecordID
contactFromPerson:keysToFetch:
linkedContacts
phoneNumbers
unifyContacts:
iOSLegacyIdentifier
phoneNumberPropertyID
setNameRecordID:
setPhoneNumberPropertyID:
_fullPath
stringByDeletingLastPathComponent
journalPath
_fileHandleForFileName:path:error:
closeFile
removeAllCachedResourceValues
removeItemAtPath:error:
hk_readValue:ofSize:error:
readVersionWithError:
_processJournalFile:profile:fileHandle:version:error:handler:
fileURLWithPath:
fileHandleForReadingFromURL:error:
setClass:forClassName:
readDataOfLength:
_loadJournalEntry:
dataWithBytesNoCopy:length:freeWhenDone:
_processJournalFile:profile:fileHandle:version:mapping:length:error:handler:
_processOkemoJournalWithVersion:fileHandle:mapping:size:headerLength:profile:error:handler:
_processMonarchJournalWithVersion:fileHandle:mapping:size:headerLength:profile:error:handler:
_loadJournalFromMapping:size:headerLength:journalEntries:error:
timeIntervalSinceNow
_loadJournalWithFileHandle:journalEntries:error:
mutableBytes
fileHandleForWritingAtPath:
hk_writeValue:size:error:
removeWithError:
initWithLength:
replaceBytesInRange:withBytes:
writeData:
truncateFileAtOffset:
createAndOpenForWritingWithError:
canAppendData:
appendData:entryClass:error:
flushDataToDisk:
enumerateEntriesWithProfile:transaction:error:handler:
size
modificationTime
_URL
_fileHandle
_version
initWithProfile:featureIdentifier:currentOnboardingVersion:pairedDeviceCapability:allowedCountryCodes:loggingCategory:pairedDeviceCapabilityProvider:
_onboardingCompletionsForHighestVersionWithError:
countryCode
isCurrentOnboardingVersionCompletedWithError:
_onboardingCompletionsForLowestVersionWithError:
distantFuture
completionDate
earlierDate:
uppercaseString
_canCompleteOnboardingForCountryCode:
onboardedCountryCodeSupportedStateWithError:
initWithFeatureIdentifier:version:completionDate:countryCode:
featureAvailabilityProvidingDidUpdateOnboardingCompletion:
featureAvailabilityProvidingDidUpdatePairedDeviceCapability:
highestOnboardingVersionCompletedWithError:
isCurrentOnboardingVersionCompletedWithCompletion:
canCompleteOnboardingForCountryCode:error:
canCompleteOnboardingForCountryCode:device:error:
onboardedCountryCodeSupportedStateForDevice:error:
isFeatureCapabilitySupportedOnActivePairedDeviceWithError:
isFeatureCapabilitySupportedOnDevice:error:
earliestDateLowestOnboardingVersionCompletedWithError:
setCurrentOnboardingVersionCompletedForCountryCode:completion:
resetOnboardingWithCompletion:
initWithProfile:featureIdentifier:currentOnboardingVersion:pairedDeviceCapability:loggingCategory:
initWithProfile:featureIdentifier:currentOnboardingVersion:loggingCategory:
initWithProfile:featureIdentifier:currentOnboardingVersion:allowedCountryCodes:loggingCategory:
initWithProfile:featureIdentifier:currentOnboardingVersion:allowedCountryCodes:pairedDeviceCapability:loggingCategory:
unitTest_updateAllowedCountryCodes:
_featureIdentifier
_currentOnboardingVersion
_pairedDeviceCapability
_pairedDeviceCapabilityProvider
_allowedCountryCodes
setData:
hasData
setLastUpdatedDate:
setHasLastUpdatedDate:
hasLastUpdatedDate
setFhirVersionMajor:
setHasFhirVersionMajor:
hasFhirVersionMajor
setFhirVersionMinor:
setHasFhirVersionMinor:
hasFhirVersionMinor
setFhirVersionPatch:
setHasFhirVersionPatch:
hasFhirVersionPatch
lastUpdatedDate
fhirVersionMajor
fhirVersionMinor
fhirVersionPatch
_fhirVersionMajor
_fhirVersionMinor
_fhirVersionPatch
_lastUpdatedDate
_data
initWithDatabase:rowID:name:attributes:relationships:
work_loadAttributesWithError:
work_loadAllRelationshipsWithMaxDepth:error:
work_getRelationshipsForNodeWithID:relationships:fetchType:error:
relationships
isReverseRelationship
subjectID
work_nodeForID:error:
setSubject:
_work_loadRelatedNodesRecursiveForRelationships:maxDepth:currentDepth:fetchType:error:
work_loadRelationships:maxDepth:fetchType:error:
_work_addAttributeToNodeWithID:key:value:valueType:error:
work_insertNewValueTypeIfNeeded:error:
work_insertNewKeyIfNeededWithKeyID:error:
_work_addAttributeToNodeWithID:keyID:value:valueType:error:
work_attributesForNodeWithID:error:
performWork:error:
nodeWithDatabase:rowID:name:loadAttributes:loadRelationshipsWithDepth:error:
work_addAttribute:ofType:forKey:error:
work_addAttribute:ofType:forKeyID:error:
work_attributesWithError:
attributes
areAllRelationshipsLoaded
_attributes
_areAttributesLoaded
_areAllRelationshipsLoaded
_relationships
addObjectData:
addRequiredAnchors:
objectDatasCount
clearObjectDatas
objectDataAtIndex:
requiredAnchorsCount
clearRequiredAnchors
requiredAnchorsAtIndex:
objectDataType
requiredAnchorsType
setStartAnchor:
setHasStartAnchor:
hasStartAnchor
setEndAnchor:
setHasEndAnchor:
hasEndAnchor
setSpeculative:
setHasSpeculative:
hasSpeculative
setSequence:
setHasSequence:
hasSequence
setComplete:
setHasComplete:
hasComplete
startAnchor
endAnchor
objectDatas
setObjectDatas:
requiredAnchors
setRequiredAnchors:
speculative
sequence
complete
_endAnchor
_sequence
_startAnchor
_objectDatas
_requiredAnchors
_complete
_speculative
sampleUUID
conceptIdentifier
conceptVersion
compoundIndex
ontologyVersion
_insertConceptIndexEntry:database:error:
deleteAllEntitiesWithError:
_propertiesForEntity
initWithSampleUUID:conceptIdentifier:conceptVersion:keyPath:compoundIndex:type:ontologyVersion:
_enumerateConceptIndexEntriesWithPredicate:transaction:error:handler:
_conceptIndexEntriesWithPredicate:transaction:error:
predicateMatchingAnyPredicates:
_keyValueDomainWithProfile:
initWithGeneration:anchor:deletionAnchors:
insertConceptIndexEntries:profile:error:
removeConceptIndexEntriesForSampleUUID:profile:error:
allConceptIndexEntriesWithProfile:error:
conceptIndexEntriesForSampleUUID:profile:error:
conceptIndexEntriesForSampleUUID:type:profile:error:
sampleUUIDsForConceptIdentifier:keyPaths:profile:error:
includeDeletedObjects
includeAutomaticTimeZones
collectionInterval
setCollectionInterval:
includeContributorInformation
validateConfiguration:
_queue_shouldAccumulateUpdates
_queue_startForInitialResults
_queue_startForUpdate
_queue_didChangeStateFromPreviousState:state:
_queue_shouldAcceptUpdates
_rowid
filteredSamplesForClientWithSamples:
filter:acceptsDataObject:
sanitizedSampleForQueryClient:
_anchorWithRowidValue:
schedulePause
_queue_deliverSamples:deletedObjects:anchor:clearPendingSamples:deliverResults:description:
_queue_samplesWereRemovedWithAnchor:
sortDescriptorWithKey:ascending:
anchoredObjectQueryClient
_maxRowIDInDatabaseWithError:
_queue_configuredEntityEnumerator
batchObjectsWithEnumerator:includeDeletedObjects:error:batchHandler:
_queue_handleBatchedQueryResult:error:
client_deliverSampleObjects:deletedObjects:anchor:clearPendingSamples:deliverResults:query:
clientHasActiveWorkout
enumerateDeletedSamplesWithType:profile:restrictedSourceEntities:limit:anchor:error:handler:
_initialResultsSent
_objectsDeleted
_includeDeletedObjects
_deliveredResults
_batchQueue
_addedSamplesPendingResume
_deletedSamplesPendingResume
_includeAutomaticTimeZones
_includeContributorInformation
_limit
initWithCondition:
initWithConcurrentReaderLimit:
setMaxConcurrentOperationCount:
_journalDirectoryPath
initWithType:path:
_cloudSyncJournalDirectoryPath
highFrequencyDataStoreURL
initWithPath:
currentThread
threadDictionary
URLByDeletingPathExtension
_protectedDataState
rootContext
skipJournalMerge
_protectedDataQueue_mergeJournalAsynchronously
_allowProtectedDataAccessWhileLockedWithTransaction:
isProtectedDatabaseAttached
protectedDatabaseURL
attachProtectedDatabaseWithURL:error:
_migrateOrCreateProtectedSchemaInDatabase:transaction:error:
database_reportSQLiteCorruptionWithResultCode:type:profile:
databasePoolForDatabaseType:
_isDatabaseValidWithError:
_threadLocalTransaction
requiresProtectedData
requiresWrite
_threadLocalTransactionContext
mergedContextWithContext:error:
initWithDatabaseProvider:rootContext:
containsContext:error:
journalType
_journalForType:
_waitForMergesWithCurrentJournal:error:
interruptJournalMerge
performWithContext:error:block:inaccessibilityHandler:
resumeJournalMerge
transactionDidEndWithError:
highPriorityContext
_performWhenDataProtectedByFirstUnlockIsAvailableOnQueue:block:
invalidated
addOperationWithBlock:
setJournalType:
initWithDatabase:context:transactionTimeout:continuationTimeout:error:
transactionIdentifier
profileDirectoryPath
highFrequencyDatabaseURLWithProfileDirectoryPath:
_fileSizeForURL:error:
mainDatabaseURL
_URLForWALForDatabaseAtURL:
mainDatabaseURLWithProfileDirectoryPath:
protectedDatabaseURLWithProfileDirectoryPath:
databaseURLForType:
createDatabaseConnectionWithURL:
setProtectedDatabaseName:
_createDatabaseConnectionWithType:
_createAndVerifyDatabaseConnectionWithType:error:
_performMigrationWithUnprotectedDatabase:protectedDatabase:error:
_reportMigrationResultIfNecessaryForStatus:database:protectedDatabase:error:
_migrateOrCreateProtectedSchemaInDatabaseIfWritable:error:
setRequiresWrite:
setHighPriority:
setPerformingMigration:
_runPostMigrationUpdatesWithDatabase:error:
hd_isCorruptionError
corruptedMigrationAttemptsCount
setCorruptedMigrationAttemptsCount:
offsetTimeInterval
_applyOffsetTimeInterval:database:error:
updateSQLForTimeOffsetWithBindingCount:
hk_isDatabaseSchemaRolledBackError
reportDatabaseMigrationFailureWithContext:
database_reportDatabaseMigrationStatus:database:schemaVersion:error:profileType:
database_reportUnprotectedDatabaseIdentifier:doesNotMatchProtectedDatabaseIdentifier:
_protectedDataQueue_flushProtectedDataIfNecessary
_checkOutDatabaseForTransaction:databaseType:error:
highPriority
requiresNewDatabaseConnection
_canAttachProtectedDatabaseForTransaction:error:
checkOutDatabaseWithOptions:error:
_attachProtectedDatabaseIfNeededToDatabase:transaction:error:
_checkInDatabase:type:flushImmediately:
_mergeSecondaryJournals
checkInDatabase:flushImmediately:
databaseTypeForDatabasePool:
_newDatabaseConnectionWithType:error:
unlockWithCondition:
_protectedDataQueue_beginObservingContentProtection
addContentProtectionObserver:withQueue:
observedState
contentProtectionStateChanged:previousState:
_journalQueue_performJournalMergeAndCleanup
recheckContentProtectionState
isProtectedDataAvailableWithState:
_protectedDataQueue_cancelProtectedDataFlushTimer
suspendBudgetConsumption
resumeBudgetConsumption
protectedDataFlushInterval
takeAccessibilityAssertionWithOwnerIdentifier:shouldPerformTransaction:timeout:error:
cacheSize
setBudget:
setRequiresProtectedData:
setRequiresNewDatabaseConnection:
accessStoreWithError:block:
assertionIdentifier
cloneWithOwnerIdentifier:
accessibilityAssertions
_protectedDataQueue_isProtectedDataFlushDeadlinePassed
intersectsSet:
flush
flushHandlerForInvalidation:
addJournalEntries:error:
_currentDatabaseJournal
addJournalEntries:profile:error:
progressForJournalMerge
mergeWithProfile:
performPostJournalMergeCleanupWithTransaction:profile:error:
performMergeTransactionWithProfile:transactionContext:error:block:
journalChapterCount
currentHFDRebuildStage
shouldRequestRebuildForFailure:code:
requestHFDRebuild
database_reportHFDCorruptionWithFailureType:code:description:profile:initialRebuildStage:newRebuildStage:
setCurrentHFDRebuildStage:
reportHFDRebuildStatus:error:
setInteger:forKey:
integerForKey:
archiveHFDTo:error:
discardStoreWithError:
contentsOfDirectoryAtPath:error:
countForObject:
allObservers
lockWhenCondition:
hd_removeHFDDatabaseAtURL:preserveCopy:
enumeratorAtPath:
setContentProtectionState:
newDatabaseForDatabasePool:error:
databasePool:didFlushDatabases:
checkOutProtectedDatabase:highFrequencyDataStore:error:
checkOutUnprotectedDatabase:error:
checkInDatabase:type:
databaseJournalMergeDidComplete:
HFDataStore:detectedCorruptionOfType:code:error:shouldPromptUser:
rebuildIfNeeded:
addProtectedDataObserver:
isDataProtectedByFirstUnlockAvailable
beginExtendedTransactionWithContext:transactionTimeout:continuationTimeout:error:
extendedDatabaseTransactionForIdentifier:
finalizeExtendedTransactionForIdentifier:
setProtectedDataFlushInterval:
beginObservingContentProtection
journalChapterCountForType:
discardHighFrequencyDataStoreWithError:
unitTest_setContentProtectionStateAndWait:
unitTest_currentTransaction
journal
cloudSyncJournal
threadLocalTransactionKey
threadLocalTransactionContextKey
threadLocalIgnoreTransactionContextKey
assertionManager
setAssertionManager:
schemaMigrationLock
setSchemaMigrationLock:
activeDatabasesLock
setActiveDatabasesLock:
activeDatabases
setActiveDatabases:
migratedDatabases
setMigratedDatabases:
asynchronousOperationQueue
setAsynchronousOperationQueue:
journalQueue
setJournalQueue:
journalGroup
setJournalGroup:
pendingJournalMerges
setPendingJournalMerges:
secondaryJournalMergeQueue
setSecondaryJournalMergeQueue:
extendedTransactions
setExtendedTransactions:
databasePoolForType
setDatabasePoolForType:
didRunPostMigrationUpdates
setDidRunPostMigrationUpdates:
unitTest_didWaitForJournalMergeHandler
setUnitTest_didWaitForJournalMergeHandler:
_serialAsynchronousQueue
_hfDataStore
_writeLock
_protectedDataQueue
_protectedDataObservers
_observedContentProtectionState
_isObservingContentProtection
_firstUnlockBlocks
_shouldNotifyFirstUnlockObservers
_protectedDataFlushDeadlineDate
_protectedDataFlushDeadlineTimer
_hasFlushedProtectedData
_hasPendingSecondaryJournalMerge
_databaseJournalMergeObserverSetByType
_didRunPostMigrationUpdates
_journal
_cloudSyncJournal
_profileDirectoryPath
_threadLocalTransactionKey
_threadLocalTransactionContextKey
_threadLocalIgnoreTransactionContextKey
_schemaMigrationLock
_activeDatabasesLock
_activeDatabases
_migratedDatabases
_asynchronousOperationQueue
_journalQueue
_journalGroup
_pendingJournalMerges
_secondaryJournalMergeQueue
_extendedTransactions
_databasePoolForType
_offsetTimeInterval
_protectedDataFlushInterval
_corruptedMigrationAttemptsCount
_unitTest_didWaitForJournalMergeHandler
openWithPath:file:flags:outFlags:
_protectedDatabaseName
hk_hasFloatingPointValue
addKeyValuePairs:
keyValuePairsCount
dictionaryWithCapacity:
keyValuePairs
dataWithData:
hk_codableMetadata
hk_dictionaryWithCodableMetadata:
initWithDomain:code:userInfo:
hasEra
setEra:
hasYear
hasMonth
hasDay
hasHour
hour
hasMinute
minute
hasSecond
second
hasWeekday
weekday
setWeekday:
hasWeekdayOrdinal
weekdayOrdinal
setWeekdayOrdinal:
hasQuarter
quarter
setQuarter:
hasWeekOfMonth
weekOfMonth
setWeekOfMonth:
hasWeekOfYear
weekOfYear
setWeekOfYear:
hasYearForWeekOfYear
yearForWeekOfYear
setYearForWeekOfYear:
hasNanosecond
nanosecond
setNanosecond:
hasCalendar
hasTimeZone
timeZone
timeZoneWithName:
calendarIdentifier
hk_dateComponentsWithCodableDateComponents:calendarUnits:
hk_codableDateComponentsForCalendarUnits:
hk_codableDateComponents
hk_dateComponentsWithCodableDateComponents:
setMetadataDictionary:
_externalSyncObjectCode
setExternalSyncObjectCode:
_creationTimestamp
setCreationDate:
addCodableRepresentationToCollectionForJournal:
addCodableRepresentationToCollectionForSync:
dataType
setVoltagePayload:
privateClassification
setPrivateClassification:
symptomsStatus
setSymptomsStatus:
averageHeartRate
_countPerMinuteUnit
setAverageHeartRateInBPM:
codableQuantitySample
setValueInCanonicalUnit:
setOriginalUnitString:
setValueInOriginalUnit:
_frozen
setFrozen:
valueInCanonicalUnit
migrateCodableObject:
_omittedContentFlags
document
setOmittedContent:
_compressedDocumentData
setDocumentData:
patientName
setPatientName:
authorName
setAuthorName:
custodianName
setCustodianName:
friendUUID
setFriendUUID:
templateUniqueName
setTemplateUniqueName:
setDoubleValue:
setIntValue:
activeHours
setActiveHours:
activeHoursGoal
setActiveHoursGoal:
briskMinutes
setBriskMinutes:
briskMinutesGoal
setBriskMinutesGoal:
energyBurned
setEnergyBurned:
energyBurnedGoal
setEnergyBurnedGoal:
setMmv:
setMmg:
setAmm:
walkingAndRunningDistance
setWalkingAndRunningDistance:
setStepCount:
snapshotIndex
setSnapshotIndex:
snapshotUploadedDate
setUploadedDate:
pushCount
setPushCount:
wheelchairUse
setWheelchairUse:
timeZoneOffsetFromUTCForNoon
setTimeZoneOffsetFromUTCForNoon:
setTotalEnergyBurnedInCanonicalUnit:
totalBasalEnergyBurned
setTotalBasalEnergyBurnedInCanonicalUnit:
setTotalDistanceInCanonicalUnit:
bundleID
setBundleID:
isWatchWorkout
setIsWatchWorkout:
isIndoorWorkout
setIsIndoorWorkout:
deviceManufacturer
setDeviceManufacturer:
deviceModel
setDeviceModel:
scwi
setScwi:
cacheIndex
setCacheIndex:
hasEnergyBurned
_energyBurnedInKilocalories
hasMoveMinutes
moveMinutes
setMoveMinutes:
hasBriskMinutes
hasActiveHours
hasStepCount
hasEnergyBurnedGoal
_energyBurnedGoalInKilocalories
energyBurnedGoalDate
setEnergyBurnedGoalDate:
hasMoveMinutesGoal
moveMinutesGoal
setMoveMinutesGoal:
moveMinutesGoalDate
setMoveMinutesGoalDate:
hasBriskMinutesGoal
hasActiveHoursGoal
hasWalkingAndRunningDistance
_walkingAndRunningDistanceInMeters
hasFlightsClimbed
flightsClimbed
setFlightsClimbed:
hasDeepBreathingDuration
deepBreathingDuration
setDeepBreathingDuration:
hasPushCount
hasWheelchairUse
activityMoveMode
setActivityMoveMode:
hasDailyEnergyBurnedStatistics
dailyEnergyBurnedStatistics
addDailyEnergyBurnedStatistics:
hasDailyMoveMinutesStatistics
dailyMoveMinutesStatistics
addDailyMoveMinutesStatistics:
hasDailyBriskMinutesStatistics
dailyBriskMinutesStatistics
addDailyBriskMinutesStatistics:
codableRepresentationForJournal
codableWorkoutEvents
setEvents:
_totalEnergyBurnedInCanonicalUnit
_totalBasalEnergyBurned
_totalBasalEnergyBurnedInCanonicalUnit
_totalDistanceInCanonicalUnit
totalSwimmingStrokeCount
_totalSwimmingStrokeCountInCanonicalUnit
setTotalSwimmingStrokeCountInCanonicalUnit:
totalFlightsClimbed
_totalFlightsClimbedInCanonicalUnit
setTotalFlightsClimbedInCanonicalUnit:
_goalInCanonicalUnit
workoutEvents
setDate:
setSwimmingStrokeStyle:
metadataDictionary
hasDuration
hasSwimmingStrokeStyle
swimmingStrokeStyle
decodedDateIntervalStartDate
initWithStartDate:duration:
_unvalidatedWorkoutEventWithType:dateInterval:metadata:
_codableWorkoutRoute
_isFrozen
_sourceWithBundleIdentifier:name:productType:options:
hasUnitString
setUnitString:
initWithSemanticVersion:
URLWithString:
initWithResourceType:identifier:FHIRVersion:data:sourceURL:lastUpdatedDate:
FHIRVersion
majorVersion
minorVersion
patchVersion
hasKeyPath
hasDate
semanticDateWithKeyPath:date:
setKeyPath:
codeSystemWithIdentifier:
medicalCodingWithSystem:codingVersion:code:displayString:
_validateConfiguration
medicalCodingsWithCodeable:
multipleMedicalCodingsWithCodables:
codeableRepresentationForMedicalCodings:
collectionWithCodings:
codings
manifestationCodings
hasOnsetDate
hasSeverityCoding
severityCoding
initWithManifestationCodings:onsetDate:severityCoding:
manifestionCodings
addManifestationCodings:
setSeverityCoding:
typeCodings
initWithTypeCodings:value:name:
setTypeCodings:
comparatorCoding
unitCoding
rawValue
codedQuantityWithValue:comparatorCoding:unitCoding:
setRawValue:
setComparatorCoding:
setUnitCoding:
ratioValueWithNumerator:andDenominator:
inspectableValueWithString:
hasRatioValue
ratioValue
inspectableValueWithRatio:
hasMedicalDateValue
medicalDateValue
inspectableValueWithMedicalDate:
hasDateComponentsValue
dateComponentsValue
inspectableValueWithDateComponents:
hasCodedQuantityValue
codedQuantityValue
inspectableValueWithCodedQuantity:
hasMedicalCodingValue
medicalCodingValue
inspectableValueWithMedicalCodings:
hasCodedValueCollection
codedValueCollection
inspectableValueWithCodedValueCollection:
inspectableValueWithNull
valueType
setRatioValue:
setMedicalDateValue:
medicalDateIntervalValue
setMedicalDateIntervalValue:
setDateComponentsValue:
setCodedQuantityValue:
medicalCodings
setMedicalCodingValue:
setCodedValueCollection:
dataAbsentReasonCodings
setDataAbsentReasonCodingsValue:
collectionType
collections
elementTags
_initWithCollectionType:collection:tags:
setCollectionType:
collection
setCollections:
setElementTags:
referenceRanges
codedValueWithCodings:value:referenceRanges:
setCodings:
setReferenceRanges:
codedValues
codedValueCollectionWithCodedValues:
setCodedValues:
referenceRangeWithIdentifier:inspectableValueRange:
referenceRangeIdentifier
initWithResourceType:identifier:
FHIRIdentifier
localeIdentifier
hasForm
hasUnderlyingDate
form
underlyingDate
originalTimeZoneString
_medicalDateWithForm:underlyingDate:originalTimeZoneString:
setForm:
setUnderlyingDate:
setOriginalTimeZoneString:
medicalDateIntervalWithStartDate:
medicalDateIntervalWithEndDate:
medicalDateIntervalWithStartDate:endDate:error:
dosageWithInstruction:timingPeriod:
setLocationType:
wLocationType
setSwimmingLocationType:
hasWLengthUnitString
wLengthUnitString
wLengthValue
setLapLength:
setWLocationType:
lapLength
setWLengthValue:
setWLengthUnitString:
unit
setUnit:
weekdays
setMonday:
setTuesday:
setWednesday:
setThursday:
setFriday:
setSaturday:
setSunday:
wakeTimeComponents
setWakeHour:
setWakeMinute:
bedTimeComponents
setBedHour:
setBedMinute:
overrideDayIndex
setOverrideDayIndex:
removeContentProtectionObserver:
_queue_performMigrationWithCompletion:
needsProtectedDataMigration
setNeedsProtectedDataMigration:
_needsProtectedDataMigration
initWithMirroredProgress:
initWithParent:userInfo:
_registerForKVO
_update
_unregisterForKVO
fractionCompleted
isIndeterminate
isCancelled
_KVOKeyPaths
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
cancel
observeValueForKeyPath:ofObject:change:context:
_originalProgress
hourUnit
hk_weekendDays
wakeUpTimeGoalHour
hk_componentsWithHour:minute:
bedtimeGoalHour
sleepScheduleWithDate:weekdays:wakeTimeComponents:bedTimeComponents:overrideDayIndex:device:metadata:
inBedTimeStdDev
numSleepInterruptions
sortUsingSelector:
_generateHeartRateDataForSleepSamples:objectCollection:demoPerson:
heartRateSampleNoiseStdDev
restingHeartRate
heartRateSampleFrequency
heartRateSampleFrequencyStdDev
computeAwakeTimeForDemoPerson:atTime:
nextSleepDurationSampleTime
setNextSleepDurationSampleTime:
_nextSleepDurationSampleTime
initWithName:
resetCacheWithTransaction:
removeAllObjectsWithTransaction:
_insertCodableObjectTypeSourceOrder:transactionCache:transaction:error:
decodedDataTypeCode
removeObjectForKey:transaction:
_sourceCacheItemForObjectType:error:
sources
userOrdered
orderedSources
orderedSourceIDsForBundleIdentifier:database:error:
initWithSources:userOrdered:isDefaultOrder:
_updateSourceOrder:type:transactionCache:transaction:error:
sourceUUIDs
modificationDatesCount
modificationDates
clientSourceForBundleIdentifier:error:
_updateOrderedSourceIDsForWrappedSource:transactionCache:transaction:error:
isDefaultSourceOrder
_sourceCacheItemForObjectType:transactionCache:transaction:error:
_sourceOrderForCodableSourceOrder:transactionCache:transaction:error:
_mergedSourceOrderForExistingOrder:incomingOrder:
setObject:forKey:transaction:
updateOrderedSourcesForType:profile:error:updateHandler:
_fetchSourceCacheItemForObjectType:transactionCache:transaction:error:
fetchObjectForKey:transaction:error:faultHandler:
enumerateOrderedSourceIDsForType:profile:transaction:error:block:
_defaultSourceCacheItemWithTransactionCache:database:error:
indexOfObject:
sortedArrayUsingComparator:
defaultOrderSourcesWithDatabase:error:
_addOrderedSource:objectType:transactionCache:transaction:error:
_sourceID
_updateSourceOrder:type:error:
_defaultOrderingWithSources:
resetCacheWithError:
createSourceOrdersWithCodables:error:
orderedSourceIDsForObjectType:bundleIdentifierMapping:userOrdered:error:
_orderedSourceIDsForOrderedSources:sourcesByID:objectType:transactionCache:database:error:
addOrderedSource:objectTypes:error:
_sourceOrdersForTypeCache
setOrderedSources:
sourcesByID
setSourcesByID:
_userOrdered
_isDefaultSourceOrder
_orderedSources
_sourcesByID
_orderedSourceIDsForBundleIdentifier:database:error:
_defaultOrderedSources
_orderedSourceIDsByBundleIdentifier
hasUserOrdered
hasSourceUUIDs
_isPreferredSource
_isConnectedGymSource
_isAppleWatch
_isAppleDevice
_isApplication
_backgroundTaskFiredWithName:
isAutomaticAppUpdatesAllowed
setShouldScheduleLaunches:
shouldScheduleLaunches
_queue_scheduleLaunches:anchor:
_applicationsInstalled:
_queue_subscriptionForActivityName:anchor:
_queue_launchSubscription:anchor:
numberWithLong:
updateBundleID:dataCode:launchTime:
extendAssertionWithBundleID:dataCode:anchor:completion:
substringToIndex:
subscriptionForBundleID:dataCode:profile:error:
_activityNameForSubscription:anchor:
areSubscriptionsSupportedForDataTypeCode:
_appSubscriptionsForDataTypeCode:lastAppLaunchTimes:error:
_queue_scheduleLaunchForSubscription:anchor:
_launchTimerFired:code:anchor:
allSubscriptionsForType:profile:error:
launchTimeForBundleID:profile:error:
allSubscriptionsForBundleID:profile:error:
_removeLaunchForSubscription:anchor:
removeSubscriptionsWithBundleID:dataCode:profile:error:
removeBundleIdentifier:profile:error:
addSubscriptionWithBundleID:dataCode:updateFrequency:profile:error:
setLaunchTimeHysteresis:forBundleID:dataCode:profile:error:
setLastAnchor:lastAckTime:forBundleID:dataCode:profile:error:
invalidateAssertionWithBundleID:dataCode:anchor:
setLaunchTime:forBundleID:profile:error:
_shouldDoAFirstLaunchForBundleIdentifier:
_queue_updateBundleID:dataCode:launchTime:
_removeSubscriptionForBundleID:dataCode:anchor:
_removeBundleID:
_queue_subscribeForBundleID:dataCode:frequencyInSeconds:
_queue_ackForBundleID:dataCode:anchor:ackTime:
removeSubscriptionForBundleID:dataCode:
removeBundleID:
subscribeForBundleID:dataCode:frequencyInSeconds:
setAnchor:forDataCode:
ackForBundleID:dataCode:anchor:ackTime:
unitTesting_synchronizeWithQueue
appAssertionManager
setAppAssertionManager:
setBackgroundTaskScheduler:
launchQueue
setLaunchQueue:
pendingTypeCodesToAnchors
setPendingTypeCodesToAnchors:
pendingFirstLaunchBundleIdentifiers
setPendingFirstLaunchBundleIdentifiers:
launchTimers
setLaunchTimers:
launchTimerLaunchTimes
setLaunchTimerLaunchTimes:
launchTimerQueue
setLaunchTimerQueue:
backgroundAppRefreshNotifyToken
setBackgroundAppRefreshNotifyToken:
_shouldScheduleLaunches
_backgroundAppRefreshNotifyToken
_appAssertionManager
_launchQueue
_pendingTypeCodesToAnchors
_pendingFirstLaunchBundleIdentifiers
_launchTimers
_launchTimerLaunchTimes
_launchTimerQueue
quantitySample
removeValues:fromQuantitySeriesSample:profile:error:
remote_commitRemovedDatums:completion:
_quantitySample
setStandHourTimestamp:
setHasStandHourTimestamp:
hasStandHourTimestamp
setDidStand:
setHasDidStand:
hasDidStand
standHourTimestamp
didStand
_standHourTimestamp
_didStand
newBuilderWithStartDate:
builderFromDemoDataFile:startDate:
setBytesValue:
hasBytesValue
bytesValue
_bytesValue
setFrom:
setTo:
hasFrom
hasTo
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
_mode
originProvenanceForPersistentID:transaction:error:
_provenanceWithSyncableContributor:error:
sourceID
existsInDatabase:
deviceID
deviceUUIDInDatabase:error:
codableSourceWithProvenance:
deviceUUIDBytesWithProvenance:
systemBuild
setOriginBuild:
setOriginProductType:
timeZoneName
setTimeZoneName:
setDeviceUUID:
operatingSystemVersion
setOriginMajorVersion:
setOriginMinorVersion:
setOriginPatchVersion:
contributorReference
setContributorUUID:
codableProvenanceWithProvenance:
_sourceForPersistentID:profile:error:
initWithSource:version:productType:operatingSystemVersion:
deviceForPersistentID:error:
contributorManager
initWithProfile:transaction:purpose:
provenanceWithID:
codableObjectCollectionForProvenance:
clearCodableObjectCollections
allCodableObjectCollections
sourceRevisionForProvenanceID:dataProvenance:profile:error:
deviceForPersistentID:profile:error:
provenanceManager
setProvenanceManager:
setTransaction:
sourceEncoder
setSourceEncoder:
provenanceByID
setProvenanceByID:
codableSourcesByID
setCodableSourcesByID:
deviceUUIDBytesByID
setDeviceUUIDBytesByID:
sourceByPersistentIDCache
setSourceByPersistentIDCache:
sourceRevisionByDataProvenanceIDCache
setSourceRevisionByDataProvenanceIDCache:
sourceRevisionsDictionaryBySourceCache
setSourceRevisionsDictionaryBySourceCache:
deviceByPersistentIDCache
setDeviceByPersistentIDCache:
contributorByReferenceCache
setContributorByReferenceCache:
codableObjectCollectionsByProvenance
setCodableObjectCollectionsByProvenance:
_provenanceManager
_sourceEncoder
_provenanceByID
_codableSourcesByID
_deviceUUIDBytesByID
_sourceByPersistentIDCache
_sourceRevisionByDataProvenanceIDCache
_sourceRevisionsDictionaryBySourceCache
_deviceByPersistentIDCache
_contributorByReferenceCache
_codableObjectCollectionsByProvenance
setIsSet:
unitTest_fakeTreadmillDataForDistance:energy:elapsedTime:
forceOnBeltIsSet
forceOnBelt
powerOutputIsSet
powerOutput
_instantaneousPaceField
_averagePaceField
_forceOnBeltField
_powerOutputField
deviceSupportsSOS
hasPairedWatch
managerForDomain:
allPeople
friendGroups
friends
predicateWithBlock:
filteredArrayUsingPredicate:
numberBadgeWithCount:
setBadge:forDomain:completion:
initWithRoute:
unsmoothedLocations
setUnsmoothedLocations:
completionHandler
setCompletionHandler:
smoothingAttempts
setSmoothingAttempts:
_unsmoothedLocations
_completionHandler
_smoothingAttempts
unregisterForegroundClientProcessObserver:
_shouldObserveWorkouts
workoutType
isCompanionCapable
_associationsSyncedForWorkout:
_queue_smoothAllUnsmoothedLocationSeries
metadataManager
predicateWithMetadataKey:value:operatorType:
_queue_smoothNextSample
_queue_setupLocationObserversIfNeeded
_queue_cancelTimeout
_queue_smoothingDidFailForTask:error:shouldRetry:
_queue_saveLocations:forTask:smoothingError:
hk_dequeue
didCompleteAllPendingSmoothingTasksHandler
_queue_smoothRouteSampleForTask:
_locationsForSampleUUID:error:
_finishSmoothingSampleWithTask:
_deleteSample:error:
_queue_scheduleSmoothingTimeoutTimerForTask:
_queue_startSmoothingTask:
_queue_locationManagerDidSmoothLocations:forTask:error:
smoothLocations:handler:
_queue_createNewSeriesFromTask:locations:error:
localSourceForBundleIdentifier:copyIfNecessary:error:
_queue_insertInitialMetadataForRoute:syncIdentifier:error:
_createWorkoutRouteWithMetadata:sourceEntity:locations:error:
insertMetadata:forObjectID:sourceID:externalSyncObjectCode:objectDeleted:error:
_workoutRouteWithDevice:metadata:
insertLocationData:seriesIdentifier:profile:error:
freezeSeriesWithIdentifier:metadata:profile:error:
_setMetadata:
setNotifyObservers:
deleteObjectsWithUUIDCollection:configuration:error:
enumerateLocationDataInDatabase:error:handler:
supportsWorkoutRouteSmoothing
unitTest_wilTriggerSmoothing
setDidCompleteAllPendingSmoothingTasksHandler:
locationManager:didUpdateToLocation:fromLocation:usingSupportInfo:
locationManager:didRecordHistoricLocation:forInterval:
locationManager:didReceiveApproval:
locationManager:didChangeAppStatusFor:
locationManager:didChangeStatusForTechnology:active:
locationManager:didFindPlacemark:forLocation:
locationManager:didFailFindingPlacemarkForLocation:withError:
locationManager:didRangePeers:
locationManager:didStartRangingForPeer:
locationManager:didStopRangingForPeer:
locationManager:rangingDidFailForPeer:withError:
locationManager:didNotReceiveLocationUpdatesForRegionMonitoringInInterval:
locationManager:didSignificantlyChangeLocation:completion:
locationManager:didEnter:completion:
locationManager:didExit:completion:
locationManager:didArrive:completion:
locationManager:didDepart:completion:
locationManager:didSmoothLocations:ofType:
_containsWorkoutObject:error:
smoothRouteWithWorkoutUUID:completion:
unitTest_smoothRouteSample:withSmoother:completion:
setUnitTest_wilTriggerSmoothing:
_smoother
_pendingSmoothingTasks
_currentSmoothingTask
_smoothingTaskTimeout
_needToCheckForLocationSeriesOnUnlock
_isFirstLaunchAndNotYetSmoothed
_didCompleteAllPendingSmoothingTasksHandler
_unitTest_wilTriggerSmoothing
_isInTestMode
assetDirectoryOverride
initWithMobileAssetTypeName:queue:
setDownloadManager:
_configureDownloadManager
mobileAssetDownloadOptions
setDiscretionary:
_queue_downloadDidCompleteWithAssets:
setMobileAssetDownloadCompletionHandler:
_queue_downloadDidCompleteWithError:
setErrorHandler:
unitTest_defaults
hk_remoteFeatureAvailabilityUserDefaults
downloadManager
mobileAssetTypeName
getLocalFileUrl
initWithContentsOfURL:error:
_updateMobileAssetsDownloadedMetricDefaultsValues
periodicActivity
retryInterval
unitTest_errorObserver
_hd_queryParamsForCompatibilityVersion:
downloadAssetsWithQueryParams:
setPeriodicActivity:
setUnitTest_defaults:
setUnitTest_errorObserver:
_assetDirectoryOverride
_retryInterval
_downloadManager
_unitTest_defaults
_unitTest_errorObserver
_allowedEntitlementsSet
entitlementValuesForKeys:
rawValues
remote_fetchContainerAppExtensionEntitlementsWithCompletion:
workoutBuilderEntityWithIdentifier:profile:error:
pruneAssociatedSamplesToDateInterval:transaction:error:
setMaskedIntervals:error:
invalidateInterval:error:
containsDate:
_workoutWithActivityType:startDate:endDate:workoutEvents:duration:statistics:goalType:goal:device:metadata:
_setUUID:
sourceEntityForClientSource:createOrUpdateIfNecessary:error:
deviceEntityForDevice:error:
localDataProvenanceForSourceEntity:version:deviceEntity:
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:updateSourceOrder:resolveAssociations:error:
enumerateAssociatedUUIDsWithTransaction:error:block:
discardBuilderWithIdentifier:profile:error:
hk_secureCodingClasses
calculatorForArchivedRepresentation:error:
archivedRepresentationWithError:
initWithWorkoutConfiguration:identifier:dateInterval:metadata:device:source:sourceVersion:events:statisticsCalculators:associatedSeries:goalType:goal:quantityTypesIncludedWhilePaused:
events
statisticsCalculators
associatedSeries
quantityTypesIncludedWhilePaused
createdWorkout
_metadata
_events
_statisticsCalculators
_associatedSeries
_quantityTypesIncludedWhilePaused
_createdWorkout
recordIDForOwnerIdentifier:storeIdentifier:zoneID:
recordIDWithIndividualZoneID:
recordIDInSyncCircle:ownerIdentifier:storeIdentifier:zoneID:
initWithOwnerIdentifier:storeIdentifier:pendingOwner:active:record:schemaVersion:
setOwnerIdentifier:
setPendingOwnerIdentifier:
setStoreIdentifier:
initWithCKRecord:schemaVersion:underlyingStore:
hd_setValue:ifChangedForKey:
pendingOwnerIdentifier
activeSequenceHeaderRecord
currentSequenceHeaderRecord
hk_addNonNilObject:
_clearSequenceHeaderRecord:
oldSequenceHeaderRecord
pendingSequenceHeaderRecord
setOrder:
systemBuildVersion
supportedProtocolVersion
requiredProtocolVersion
isStoreRecord:
isStoreRecordID:
initInSyncCircle:ownerIdentifier:storeIdentifier:unified:
clearCurrentSequenceHeaderRecord
clearOldSequenceHeaderRecord
clearPendingSequenceHeaderRecord
clearTombstoneSequenceHeaderRecord
addNewSequenceHeaderRecordWithSyncAnchorMap:includedIdentifiers:
addNewTombstoneSequenceHeaderRecordWithIncludedIdentifiers:
removeSequenceHeaderRecord:
hasActiveSequence
hasSequenceWithFutureProtocolVersion
sequenceRecordWithRecordID:
repairOwnerIdentifier:
_underlyingStore
_slotASequenceHeaderRecord
_slotBSequenceHeaderRecord
_tombstoneSequenceRecord
mockPrimaryProfile
associateSeries:toWorkoutBuilderID:profile:error:
seriesForBuilder:profile:error:
enumerateSeriesForBuilder:transaction:error:block:
allBuilderAssociatedSeriesWithProfile:error:
batteryState
setBatteryState:
setHasBatteryState:
hasBatteryState
batteryStateAsString:
StringAsBatteryState:
_batteryState
initWithEntityIdentifier:schemaIdentifier:
schema
setSchema:
initWithCodableEntityIdentifier:
codableEntityIdentifier
schemaIdentifier
_schemaIdentifier
setNotificationConfiguration:
hasNotificationConfiguration
notificationConfiguration
_notificationConfiguration
initWithCountryCode:supportedCodingSystems:analyticsOptions:
supportedCodingSystems
analyticsOptions
_countryCode
_supportedCodingSystems
_analyticsOptions
_accountJoinClausesForProperty:
unionSet:
_gatewayJoinClausesForProperty:
setDiagnosticTestCodings:
setCategory:
setInterpretationCodings:
setComments:
setMethodCodings:
hasDiagnosticTestCodings
hasReferenceRanges
hasEffectiveStartDate
hasCategory
hasIssueDate
hasEffectiveEndDate
hasInterpretationCodings
hasComments
hasBodySiteCodings
hasMethodCodings
hasPerformers
diagnosticTestCodings
interpretationCodings
comments
methodCodings
_bodySiteCodings
_category
_comments
_diagnosticTestCodings
_effectiveEndDate
_effectiveStartDate
_interpretationCodings
_issueDate
_methodCodings
_performers
_referenceRanges
_validateSequenceOrdering
analyticsDictionary
_validateCurrentSequence
_validateAnchorRangesForSequenceRecord:
rebaseProhibited
getPersistedAnchorMapWithError:
anchorForSyncEntityIdentifier:
enumerateAnchorsAndEntityIdentifiersWithBlock:
rollOwnerDifferentiatorForProfile:reason:error:
rebaseDeadline
_requireRebaseForTarget
_validateCurrentSequenceChildCount
_validateAnchorRanges
_validatePersistedStoreState
_validateCurrentSequenceChanges
setPreviousServerChangeToken:
setResultsLimit:
setDesiredKeys:
initWithRecordZoneIDs:configurationsByRecordZoneID:
setFetchAllChanges:
_orderedChangeRecordSequenceRequiresRebase:
setFetchRecordZoneChangesCompletionBlock:
_isRelevantChangeRecord:forStoreRecord:
setRecordChangedBlock:
setAnchor:forSyncEntityIdentifier:
enumerateAnchorRangesAndEntityIdentifiersWithBlock:
targetByAddingOptions:
shouldValidateCurrentSequence
setShouldValidateCurrentSequence:
target
result
_shouldValidateCurrentSequence
_result
_lock_registerObserver:forBundleIdentifier:
_lock_unregisterObserver:forBundleIdentifier:
applicationStateForApplication:
applicationStateMonitorProvider
processIdentifierForApplicationIdentifier:
identifierWithPid:
handleForIdentifier:error:
currentState
tags
applicationInfoForApplication:
_lock_handleBackboardApplicationInfoChanged:
interestedBundleIDs
_handleBackboardApplicationInfoChanged:
setHandler:
updateInterestedBundleIDs:
applicationInfoForApplication:completion:
processInfoWithDictionary:
_lock_handleProcessInfoChangedWithAllPreviousProcessInfos:
_lock_notifyObserversProcessWithBundleIdentifier:processIdentifier:applicationStateChanged:previousApplicationState:
isApplicationStateSuspendedForBundleIdentifier:
isApplicationStateForegroundForBundleIdentifier:
applicationIsForeground:
_processObserversByBundleID
_foregroundClientProcessObservers
_applicationMonitor
_clientCalloutQueue
_processInfoByBundleID
_applicationStateMonitorProvider
_applicationState
_pid
_insertDataObject:withProvenanceID:inDatabase:error:
hd_insertRelatedDataWithPersistentID:insertionContext:profile:transaction:error:
_creationDate
compareForReplacmentWithObject:existingObject:
localSourceForSourceID:copyIfNecessary:error:
populateSyncInfoForLocalSourceID:externalSyncObjectCode:syncIdentifier:deleted:database:objectIDOut:errorOut:
entityEnumeratorWithProfile:
setIgnoreEntityClassAdditionalPredicateForEnumeration:
_shouldReplaceExistingObject:withObject:dataEntityClass:
prepareObjectForInsertion:
shouldInsertObject:sourceID:profile:transaction:objectToReplace:objectID:error:
_primitiveInsertDataObject:insertionContext:entityClass:provenanceEntityID:profile:transaction:error:
replaceExistingObject:existingObjectID:replacementObject:replacementObjectID:profile:transaction:error:
supportsObjectMerging
mergeDataObject:provenance:profile:transaction:error:insertHandler:
deleteDataObjects:restrictedSourceEntities:failIfNotFound:recursiveDeleteAuthorizationBlock:error:
skipInsertionFilter
_validateObjectsToInsert:insertionContext:profile:error:
provenanceEntityForProvenance:transaction:error:
resolveAssociations
maxPersistentIDWithPredicate:database:error:
_insertDataObject:insertionContext:provenanceEntityID:profile:transaction:insertedEntityID:error:
setNumber:forKey:domain:category:profile:error:
journalObjects:insertionContext:profile:error:
hd_relatedJournalEntries
_setSourceBundleIdentifier:
_setSourceRevision:
initWithDataObject:provenance:
initWithCodableObjectCollection:provenance:
deleteInfoForObjectWithUUID:error:
_sourceBundleIdentifierForSourceEntities:profile:error:
initWithDataObject:restrictSource:
_initWithEntityClass:profile:
_objectWithPredicate:encodingOptions:profile:error:
shouldOverrideCycleTrackingSymptomsForBackwardsCompatibilty
initWithProfile:transaction:entityClass:provenanceCache:encodingOptions:messageHandler:bytesPerChangeSet:bytesPerChange:
addEntity:row:anchor:error:
finishAndFlushWithError:
entityForProperty:
setByAddingObjectsFromSet:
participatesInInsertion
_insertBaseDataObject:withProvenance:inDatabase:error:
_removeObjectWithPersistentID:database:error:
entityType
deleteFromDatabase:error:
isBackedByTable
deleteStatementForObjectMetadataWithTransaction:
insertDataObjects:insertionContext:profile:completionHandler:
deleteDataObjects:restrictedSourceEntities:failIfNotFound:profile:recursiveDeleteAuthorizationBlock:completionHandler:
dataEntityForObject:profile:error:
sourceIDForObjectID:type:profile:errorOut:
predicateForObjectsFromLocalSourceWithBundleIdentifier:profile:error:
objectWithID:encodingOptions:profile:error:
generateSyncObjectsForSession:syncEntityClass:predicate:syncAnchorRange:profile:messageHandler:error:
acceptsObject:
deleteStatementsForRelatedEntitiesWithTransaction:
booleanForProperty:database:
dateForProperty:database:
numberForProperty:database:
stringForProperty:database:
UUIDForProperty:database:
willDeleteFromDatabase:
enumerateColumnsWithBlock:
allDatabaseColumnNames
metadataValueStatementWithTransaction:
_copyBaseMetadataForRow:
metadataForObjectID:baseMetadata:keyFilter:statement:error:
_setCreationTimestamp:
_setContributor:
_metadataValueStatement
_dataProvenanceCache
_metadataKeyFilter
deviceEntityForNoDeviceWithError:
dataObject
setDeviceID:
_dataObject
decodedObjects
_collection
restrictSource
_restrictSource
predicateWithProperty:greaterThanValue:
doesNotContainPredicateWithProperty:values:
truePredicate
predicateWithSQL:overProperties:values:
insertMetadata:forObjectID:sourceID:externalSyncObjectCode:objectDeleted:transaction:error:
objects
_removeAllCorrelatedObjects
hd_cleanupBeforeJournalInsertion
insertWorkoutEventsFromWorkout:ownerID:transaction:error:
hasGuardianDisplayName
_guardianDisplayName
aggregationInterval
_reconsiderDelayedAggregation
keyForCollector:device:aggregator:
persistenceHandler
consumedSensorData
persistForCollector:usedDatums:source:device:error:persistenceHandler:
aggregationState
_requestAggregationThroughDate:mode:options:completion:
performSaveWithMaximumLatency:block:completion:
allCollectors
collector
_aggregateForAllDevicesForCollector:date:mode:options:
hk_addObjectsFromArray:passingTest:
sortUsingComparator:
_aggregateForCollector:device:requestedAggregationDate:mode:options:
hasActiveWorkout
configurationWithType:interval:latency:
defaultCollectionIntervalForType:
hasForegroundObserver
requestAggregationThroughDate:mode:options:completion:
recomputeCollectorConfiguration
dataCollector:didCollectSensorData:device:
configurationForCollector:
_aggregationLock
_currentAggregationStates
_delayedAggregationOperation
_delayedAggregationQueue
_unaggregatedSensorData
_openSeries
_aggregationState
_consumedSensorData
_persistenceHandler
collectorIdentifier
_collectorIdentifier
kilocalorieUnit
minuteUnit
_activityCacheWithUUID:startDate:endDate:dateComponents:sequence:
_demoStatisticsForDataTypeIdentifier:unit:
_demoStatisticsForStandHours
setCurrentActivityCache:
client_deliverQueryResult:queryUUID:
demoStatisticsDataForTypeIdentifier:
initWithTimeStamp:state:
shouldObserveActivityCache
deviceQueryClientProxy
clientRemote_deliverDevices:done:reset:query:
_deliverErrorToClient:
setBedtime:
setBedtimeGoalHour:
setWakeUpTime:
setWakeUpTimeGoalHour:
_bedtime
_bedtimeGoalHour
_wakeUpTime
_wakeUpTimeGoalHour
initWithFirstName:lastName:description:birthDateComponents:biologicalSex:
setFitzpatrickSkinType:
setTimeIncrement:
setTimeIncrementDuringExercise:
setDawnTime:
setSunsetTime:
setGenericSampleTimeNoiseStdDev:
setUvIndexSampleFrequency:
setWaistCircumferenceInInches:
setWristCircumferenceInInches:
setForearmCircumferenceInInches:
setHipCircumferenceInInches:
setHeightTargetInCm:
setHeightSampleTime:
setHeightSampleTimeFrequency:
setHeightSampleNoiseStdDev:
setWeightTargetInKg:
setWeightSampleTime:
setWeightSampleTimeFrequency:
setWeightLossStartDay:
setWeightSampleNoiseStdDev:
setWeightDailyChangeStdDev:
setWeightChangePercentageMax:
setWeightDailyMaxLoss:
setWeightGainHolidayDaysInYear:
setRestingHeartRate:
setRestingHeartRateMaxDailyDifference:
setRestingHeartRateMaxTotalDifference:
setWalkingHeartRateAverage:
setWalkingHeartRateAverageMaxDailyDifference:
setWalkingHeartRateAverageMaxTotalDifference:
setHeartRateSampleFrequency:
setHeartRateSampleFrequencyStdDev:
setHeartRateSampleNoiseStdDev:
setRestingRespirationRate:
setRestingRespirationRateSampleFrequency:
setRestingRespirationRateSampleNoiseStdDev:
setBloodPressureSampleFrequency:
setRestingSystolicBloodPressure:
setRestingDiastolicBloodPressure:
setRestingSystolicBloodPressureSampleNoiseStdDev:
setRestingDiastolicBloodPressureSampleNoiseStdDev:
setBodyTempSampleFrequency:
setBodyTempSampleNoiseStdDev:
setBodyTempFeverMultiplier:
setBodyTempExerciseMultiplier:
setOxygenSaturationSampleFrequency:
setOxygenSaturationMean:
setOxygenSaturationStdDev:
setOxygenSaturationMeanAtElevation:
setOxygenSaturationStdDevAtElevation:
setOxygenSaturationMeasuringSuccessRate:
setOxygenSaturationMeasuringSuccessRateDuringSleep:
setPeripheralPerfusionIndexMean:
setPeripheralPerfusionIndexStdDev:
setPeripheralPerfusionIndexSampleFrequency:
setSexualActivityProbabilityPercentage:
setSexualActivityProtectionProbabilityPercentage:
setSexualActivityProtectionDocumentationProbabilityPercentage:
setSexualActivityIsTryingToConceive:
setMenstrualPeriodFrequency:
setOvulationIndeterminateProbabilityPercentage:
setToothbrushingDurationMean:
setToothbrushingDurationMeanStdDev:
setHandwashingDurationMean:
setHandwashingDurationMeanStdDev:
setHandwashingSampleFrequency:
setHandwashingSampleFrequencyStdDev:
timeIncrementDuringExercise
setActiveCaloriesSampleFrequency:
setRestingCaloriesSampleFrequency:
setStepsSampleFrequency:
setStepsSampleFrequencyDuringExercise:
setSedentarySampleFrequency:
setSwimmingStrokesPerYard:
setExerciseIntensityPercentage:
setExerciseStartTime:
setExerciseStopTime:
setExerciseStartTimeStdDev:
setExerciseStopTimeStdDev:
setExerciseCooldownTime:
setExerciseWeeklyWorkoutsMean:
setExerciseWeeklyWorkoutsStdDev:
setExercisePostDietWeeklyWorkoutsMean:
setExercisePostDietWeeklyWorkoutsStdDev:
setFlightsClimbedDailyMean:
setFlightsClimbedStdDev:
setFlightsClimbedSampleTime:
setFlightsClimbedSampleFrequency:
setFlightsClimbedSampleFrequencyStdDev:
setRehabLogarithmicConstant:
setWalkingSpeedMean:
setWalkingSpeedStdDev:
setWalkingSpeedSampleFrequency:
setWalkingSpeedSampleFrequencyStdDev:
setStepLengthMean:
setStepLengthStdDev:
setStepLengthSampleFrequency:
setStepLengthSampleFrequencyStdDev:
setAsymmetryPercentageMean:
setAsymmetryPercentageStdDev:
setAsymmetryPercentageSampleFrequency:
setAsymmetryPercentageSampleFrequencyStdDev:
setDoubleSupportPercentageMean:
setDoubleSupportPercentageStdDev:
setDoubleSupportPercentageSampleFrequency:
setDoubleSupportPercentageSampleFrequencyStdDev:
setSixMinuteWalkTestDistanceMean:
setSixMinuteWalkTestDistanceStdDev:
setSixMinuteWalkTestDistanceSampleFrequency:
setSixMinuteWalkTestDistanceSampleFrequencyStdDev:
setStairAscentSpeedMean:
setStairAscentSpeedStdDev:
setStairAscentSpeedSampleFrequency:
setStairAscentSpeedSampleFrequencyStdDev:
setStairDescentSpeedMean:
setStairDescentSpeedStdDev:
setStairDescentSpeedSampleFrequency:
setStairDescentSpeedSampleFrequencyStdDev:
setMoveGoal:
HIITPrototype
functionalStrengthTrainingPrototype
pickRandomWorkoutFrom:
dancePrototype
yogaPrototype
swimmingPrototype
runningPrototype
walkingPrototype
coolDownPrototype
ellipticalPrototype
coreTrainingPrototype
hikingPrototype
setWorkoutPrototypesByCalendarDay:
setMealTimeSampleNoiseStdDev:
setBreakfastTime:
setLunchTime:
setSnackTime:
setDinnerTime:
setPreDietIntakeMultiplier:
setNumCupsOfCoffeeDailyMean:
setNumCupsOfCoffeeStdDev:
setWaterConsumedSampleFrequency:
setWaterConsumedDailyMean:
setWaterConsumedStdDev:
setWaterConsumedIntervalMean:
setWaterConsumedIntervalStdDev:
setWaterConsumedSampleTime:
setWeekdaySleepParameters:
setWeekendSleepParameters:
setWakeUpTimeNoiseStdDev:
setBedtimeNoiseStdDev:
setInBedTimeStdDev:
setNumSleepInterruptions:
setFallSampleFrequency:
setFallsDailyMean:
setFallsDailyStdDev:
setUseContinuousGlucoseMonitoring:
setContinuousGlucoseMonitoringSampleFrequency:
setNumDailyFingerSticksAdherence:
setInsulinSensitivity:
setInsulinProduction:
setInsulinAdherence:
setInsulinTherapy:
setSpirometrySampleFrequency:
setSpirometrySampleTime:
setAsthmaSeverity:
setMindfulSessionFrequency:
setMindfulSessionMean:
setMindfulSessionStdDev:
setNutritionTrackingType:
setResultsTrackingType:
updateMedicalIDData
setGivenName:
setFamilyName:
localizedStringFromPersonNameComponents:style:options:
setProfileType:
rehabLogarithmicConstant
asymmetryPercentageMean
doubleSupportPercentageMean
setCreateHighFidelityData:
heightTargetInCm
weightTargetInKg
initWithContentsOfURL:
fullName
defaultPersonWithBiologicalSex:
exerciseTimeSampleFrequency
applyProfileType:
setHighFidelityGeneration:
personDescription
setPersonDescription:
setBirthDateComponents:
setBirthDate:
setBiologicalSex:
fitzpatrickSkinType
dawnTime
sunsetTime
createHighFidelityData
uvIndexSampleFrequency
waistCircumferenceInInches
wristCircumferenceInInches
forearmCircumferenceInInches
hipCircumferenceInInches
heightSampleTime
heightSampleTimeFrequency
heightSampleNoiseStdDev
weightSampleTime
weightSampleTimeFrequency
weightSampleNoiseStdDev
weightDailyChangeStdDev
weightDailyMaxLoss
weightChangePercentageMax
weightGainHolidayDaysInYear
restingHeartRateMaxDailyDifference
restingHeartRateMaxTotalDifference
walkingHeartRateAverage
walkingHeartRateAverageMaxDailyDifference
walkingHeartRateAverageMaxTotalDifference
restingRespirationRate
restingRespirationRateSampleFrequency
restingRespirationRateSampleNoiseStdDev
bloodPressureSampleFrequency
restingSystolicBloodPressure
restingDiastolicBloodPressure
restingSystolicBloodPressureSampleNoiseStdDev
restingDiastolicBloodPressureSampleNoiseStdDev
bodyTempFeverMultiplier
bodyTempExerciseMultiplier
bodyTempSampleFrequency
oxygenSaturationMean
oxygenSaturationStdDev
oxygenSaturationMeanAtElevation
oxygenSaturationStdDevAtElevation
oxygenSaturationMeasuringSuccessRate
oxygenSaturationMeasuringSuccessRateDuringSleep
oxygenSaturationSampleFrequency
peripheralPerfusionIndexMean
peripheralPerfusionIndexSampleFrequency
peripheralPerfusionIndexStdDev
ovulationIndeterminateProbabilityPercentage
fitzpatrickSkinTypeSampleTime
setFitzpatrickSkinTypeSampleTime:
fitzpatrickSkinTypeScore
setFitzpatrickSkinTypeScore:
toothbrushingDurationMean
toothbrushingDurationMeanStdDev
handwashingDurationMean
handwashingDurationMeanStdDev
handwashingSampleFrequency
handwashingSampleFrequencyStdDev
activeCaloriesSampleFrequency
restingCaloriesSampleFrequency
stepsSampleFrequency
stepsSampleFrequencyDuringExercise
sedentarySampleFrequency
setExerciseTimeSampleFrequency:
moveGoal
swimmingStrokesPerYard
exerciseCooldownTime
exerciseIntensityPercentage
workoutPrototypesByCalendarDay
exerciseWeeklyWorkoutsMean
exerciseWeeklyWorkoutsStdDev
exercisePostDietWeeklyWorkoutsMean
exercisePostDietWeeklyWorkoutsStdDev
flightsClimbedDailyMean
flightsClimbedStdDev
flightsClimbedSampleTime
flightsClimbedSampleFrequency
flightsClimbedSampleFrequencyStdDev
walkingSpeedMean
walkingSpeedStdDev
walkingSpeedSampleFrequency
walkingSpeedSampleFrequencyStdDev
stepLengthMean
stepLengthStdDev
stepLengthSampleFrequency
stepLengthSampleFrequencyStdDev
asymmetryPercentageStdDev
asymmetryPercentageSampleFrequency
asymmetryPercentageSampleFrequencyStdDev
doubleSupportPercentageStdDev
doubleSupportPercentageSampleFrequency
doubleSupportPercentageSampleFrequencyStdDev
sixMinuteWalkTestDistanceMean
sixMinuteWalkTestDistanceStdDev
sixMinuteWalkTestDistanceSampleFrequency
sixMinuteWalkTestDistanceSampleFrequencyStdDev
stairAscentSpeedMean
stairAscentSpeedStdDev
stairAscentSpeedSampleFrequency
stairAscentSpeedSampleFrequencyStdDev
stairDescentSpeedMean
stairDescentSpeedStdDev
stairDescentSpeedSampleFrequency
stairDescentSpeedSampleFrequencyStdDev
waterConsumedSampleTime
waterConsumedStdDev
fallSampleFrequency
fallsDailyMean
fallsDailyStdDev
spirometrySampleFrequency
spirometrySampleTime
asthmaSeverity
mindfulSessionFrequency
mindfulSessionMean
mindfulSessionStdDev
resultsTrackingType
_createHighFidelityData
_sexualActivityIsTryingToConceive
_useContinuousGlucoseMonitoring
_personDescription
_birthDateComponents
_birthDate
_biologicalSex
_fitzpatrickSkinType
_timeIncrement
_timeIncrementDuringExercise
_dawnTime
_sunsetTime
_genericSampleTimeNoiseStdDev
_profileType
_uvIndexSampleFrequency
_waistCircumferenceInInches
_wristCircumferenceInInches
_forearmCircumferenceInInches
_hipCircumferenceInInches
_heightSampleTime
_heightTargetInCm
_heightSampleTimeFrequency
_heightSampleNoiseStdDev
_weightSampleTime
_weightTargetInKg
_weightSampleTimeFrequency
_weightSampleNoiseStdDev
_weightLossStartDay
_weightDailyChangeStdDev
_weightDailyMaxLoss
_weightChangePercentageMax
_weightGainHolidayDaysInYear
_restingHeartRate
_restingHeartRateMaxDailyDifference
_restingHeartRateMaxTotalDifference
_walkingHeartRateAverage
_walkingHeartRateAverageMaxDailyDifference
_walkingHeartRateAverageMaxTotalDifference
_heartRateSampleFrequency
_heartRateSampleFrequencyStdDev
_heartRateSampleNoiseStdDev
_restingRespirationRate
_restingRespirationRateSampleFrequency
_restingRespirationRateSampleNoiseStdDev
_bloodPressureSampleFrequency
_restingSystolicBloodPressure
_restingDiastolicBloodPressure
_restingSystolicBloodPressureSampleNoiseStdDev
_restingDiastolicBloodPressureSampleNoiseStdDev
_bodyTempFeverMultiplier
_bodyTempExerciseMultiplier
_bodyTempSampleFrequency
_bodyTempSampleNoiseStdDev
_oxygenSaturationMean
_oxygenSaturationStdDev
_oxygenSaturationMeanAtElevation
_oxygenSaturationStdDevAtElevation
_oxygenSaturationMeasuringSuccessRate
_oxygenSaturationMeasuringSuccessRateDuringSleep
_oxygenSaturationSampleFrequency
_peripheralPerfusionIndexMean
_peripheralPerfusionIndexSampleFrequency
_peripheralPerfusionIndexStdDev
_sexualActivityProbabilityPercentage
_sexualActivityProtectionProbabilityPercentage
_sexualActivityProtectionDocumentationProbabilityPercentage
_menstrualPeriodFrequency
_ovulationIndeterminateProbabilityPercentage
_fitzpatrickSkinTypeSampleTime
_fitzpatrickSkinTypeScore
_toothbrushingDurationMean
_toothbrushingDurationMeanStdDev
_handwashingDurationMean
_handwashingDurationMeanStdDev
_handwashingSampleFrequency
_handwashingSampleFrequencyStdDev
_activeCaloriesSampleFrequency
_restingCaloriesSampleFrequency
_stepsSampleFrequency
_stepsSampleFrequencyDuringExercise
_sedentarySampleFrequency
_exerciseTimeSampleFrequency
_moveGoal
_swimmingStrokesPerYard
_exerciseStartTime
_exerciseStopTime
_exerciseCooldownTime
_exerciseStartTimeStdDev
_exerciseStopTimeStdDev
_exerciseIntensityPercentage
_workoutPrototypesByCalendarDay
_exerciseWeeklyWorkoutsMean
_exerciseWeeklyWorkoutsStdDev
_exercisePostDietWeeklyWorkoutsMean
_exercisePostDietWeeklyWorkoutsStdDev
_flightsClimbedDailyMean
_flightsClimbedStdDev
_flightsClimbedSampleTime
_flightsClimbedSampleFrequency
_flightsClimbedSampleFrequencyStdDev
_rehabLogarithmicConstant
_walkingSpeedMean
_walkingSpeedStdDev
_walkingSpeedSampleFrequency
_walkingSpeedSampleFrequencyStdDev
_stepLengthMean
_stepLengthStdDev
_stepLengthSampleFrequency
_stepLengthSampleFrequencyStdDev
_asymmetryPercentageMean
_asymmetryPercentageStdDev
_asymmetryPercentageSampleFrequency
_asymmetryPercentageSampleFrequencyStdDev
_doubleSupportPercentageMean
_doubleSupportPercentageStdDev
_doubleSupportPercentageSampleFrequency
_doubleSupportPercentageSampleFrequencyStdDev
_sixMinuteWalkTestDistanceMean
_sixMinuteWalkTestDistanceStdDev
_sixMinuteWalkTestDistanceSampleFrequency
_sixMinuteWalkTestDistanceSampleFrequencyStdDev
_stairAscentSpeedMean
_stairAscentSpeedStdDev
_stairAscentSpeedSampleFrequency
_stairAscentSpeedSampleFrequencyStdDev
_stairDescentSpeedMean
_stairDescentSpeedStdDev
_stairDescentSpeedSampleFrequency
_stairDescentSpeedSampleFrequencyStdDev
_breakfastTime
_lunchTime
_snackTime
_dinnerTime
_mealTimeSampleNoiseStdDev
_preDietIntakeMultiplier
_numCupsOfCoffeeDailyMean
_numCupsOfCoffeeStdDev
_waterConsumedSampleTime
_waterConsumedSampleFrequency
_waterConsumedDailyMean
_waterConsumedStdDev
_waterConsumedIntervalMean
_waterConsumedIntervalStdDev
_weekdaySleepParameters
_weekendSleepParameters
_wakeUpTimeNoiseStdDev
_bedtimeNoiseStdDev
_inBedTimeStdDev
_numSleepInterruptions
_fallSampleFrequency
_fallsDailyMean
_fallsDailyStdDev
_spirometrySampleFrequency
_spirometrySampleTime
_asthmaSeverity
_continuousGlucoseMonitoringSampleFrequency
_numDailyFingerSticksAdherence
_insulinSensitivity
_insulinProduction
_insulinAdherence
_insulinTherapy
_mindfulSessionFrequency
_mindfulSessionMean
_mindfulSessionStdDev
_nutritionTrackingType
_resultsTrackingType
workoutPrototypeWithActivityType:goalType:goal:startTime:duration:energyBurned:distanceWalking:distanceCycling:
mileUnit
yardUnit
workoutPrototypeWithActivityType:goalType:goal:startTime:duration:energyBurned:distanceWalking:distanceCycling:distanceSwimming:distanceSwimmingSegment:totalSwimmingSegments:numLapsPerSegment:swimTimePerSegment:restTimePerSegment:swimmingStrokeStyle:
thirdPartyWorkoutPrototype
yogaAndRunningPrototypes
startTimeOffsetInDay
setStartTimeOffsetInDay:
totalEnergyBurnedInKcal
setTotalEnergyBurnedInKcal:
totalDistanceWalkingInMiles
setTotalDistanceWalkingInMiles:
totalDistanceCyclingInMiles
setTotalDistanceCyclingInMiles:
totalDistanceSwimmingInYards
setTotalDistanceSwimmingInYards:
swimmingSegmentDistanceInYards
setSwimmingSegmentDistanceInYards:
totalSwimmingSegments
setTotalSwimmingSegments:
numLapsPerSegment
setNumLapsPerSegment:
swimTimePerSegment
setSwimTimePerSegment:
restTimePerSegment
setRestTimePerSegment:
_startTimeOffsetInDay
_duration
_totalEnergyBurnedInKcal
_totalDistanceWalkingInMiles
_totalDistanceCyclingInMiles
_totalDistanceSwimmingInYards
_swimmingSegmentDistanceInYards
_totalSwimmingSegments
_numLapsPerSegment
_swimTimePerSegment
_restTimePerSegment
_swimmingStrokeStyle
unitTest_prepareUnprotectedDatabase:protectedDatabase:error:
unitTest_createOrMigrateDatabaseAtDirectoryURL:schemaProviders:behavior:error:
_quantitySamplesEnforcingDurationWithType:quantity:startDate:endDate:device:metadata:
datumIdentifier
notificationType
setNotificationType:
setHasNotificationType:
hasNotificationType
notificationTypeAsString:
StringAsNotificationType:
_notificationType
initWithDevice:
initWithIdentifier:
destinationIdentifier
deviceIdentifier
_destinationIdentifier
_deviceIdentifier
isNatalimeterAvailable
supportsCollectionForProfile:
isCoreMotionCaloriePushModelEnabled
hd_activeNatalies
basalNatalies
collectsCalorimetry
coreMotionDatumClass
collectedTypes
queue_newDataSource
queue_differenceFromDatum:toDatum:type:
persistentIdentifier
natalies
recordId
sourceId
hd_compare:
hd_sourceID
hd_datestamp
hd_epochDatestamp
hd_unitForType:
startAbsoluteNatalimetryDataUpdatesWithHandler:
queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:
stopAbsoluteNatalimetryDataUpdates
hd_beginStreamingFromDatum:handler:
hd_stopStreaming
setThirdPartyAppsCount:
setHasThirdPartyAppsCount:
hasThirdPartyAppsCount
setThirdPartyAppsWroteDataCount:
setHasThirdPartyAppsWroteDataCount:
hasThirdPartyAppsWroteDataCount
setDatabaseSizeMB:
setHasDatabaseSizeMB:
hasDatabaseSizeMB
setRowCountObjects:
setHasRowCountObjects:
hasRowCountObjects
setPercentageDeletedObjects:
setHasPercentageDeletedObjects:
hasPercentageDeletedObjects
setManuallyEnteredTypesCount:
setHasManuallyEnteredTypesCount:
hasManuallyEnteredTypesCount
setHighFrequencyDataSizeMB:
setHasHighFrequencyDataSizeMB:
hasHighFrequencyDataSizeMB
setHasWatchSource:
setHasHasWatchSource:
hasHasWatchSource
rowCountCDA
setRowCountCDA:
setHasRowCountCDA:
hasRowCountCDA
rowCountCDAAsString:
StringAsRowCountCDA:
setLastMonthRowsAdded:
setHasLastMonthRowsAdded:
hasLastMonthRowsAdded
setLastMonthDatabaseSizeIncreaseMB:
setHasLastMonthDatabaseSizeIncreaseMB:
hasLastMonthDatabaseSizeIncreaseMB
thirdPartyAppsCount
thirdPartyAppsWroteDataCount
databaseSizeMB
rowCountObjects
percentageDeletedObjects
manuallyEnteredTypesCount
highFrequencyDataSizeMB
hasWatchSource
lastMonthRowsAdded
lastMonthDatabaseSizeIncreaseMB
_databaseSizeMB
_highFrequencyDataSizeMB
_lastMonthDatabaseSizeIncreaseMB
_lastMonthRowsAdded
_manuallyEnteredTypesCount
_percentageDeletedObjects
_rowCountObjects
_thirdPartyAppsCount
_thirdPartyAppsWroteDataCount
_rowCountCDA
_hasWatchSource
_operationForContainer:configuration:cloudState:
initWithConfiguration:cloudState:subscriptions:
subscriptions
_subscriptions
setHasDate:
setHasSwimmingStrokeStyle:
hasMetadataDictionary
setHasDuration:
_date
_metadataDictionary
_connectToServices
_disconnectFromServicesStopConnecting:
_disconnectFromService:
_connectToService:
_handleBluetoothUpdates:
reviewSavedHealthServiceSessionsWithError:
btleHeartRateDataCollector
startOneShotCollectionForService:
connectHealthService:sessionHandler:dataHandler:error:
_subscribeBluetoothStateUpdates
reconnectToServices
disconnectFromService:
connectToService:
_connecting
_BTLEEnabled
_activeServices
_deviceQueue
client_deliverSampleTypes:query:
setNumberOfFriends:
setHasNumberOfFriends:
hasNumberOfFriends
medianFriendDuration
setMedianFriendDuration:
setHasMedianFriendDuration:
hasMedianFriendDuration
medianFriendDurationAsString:
StringAsMedianFriendDuration:
minFriendDuration
setMinFriendDuration:
setHasMinFriendDuration:
hasMinFriendDuration
minFriendDurationAsString:
StringAsMinFriendDuration:
maxFriendDuration
setMaxFriendDuration:
setHasMaxFriendDuration:
hasMaxFriendDuration
maxFriendDurationAsString:
StringAsMaxFriendDuration:
setNumberOfFriendsMyDataHidden:
setHasNumberOfFriendsMyDataHidden:
hasNumberOfFriendsMyDataHidden
setNumberOfFriendsHiddenFromMe:
setHasNumberOfFriendsHiddenFromMe:
hasNumberOfFriendsHiddenFromMe
setNumberOfFriendsMuted:
setHasNumberOfFriendsMuted:
hasNumberOfFriendsMuted
setNumberOfFriendsAwaitingResponse:
setHasNumberOfFriendsAwaitingResponse:
hasNumberOfFriendsAwaitingResponse
setNumberOfFriendsPendingMyResponse:
setHasNumberOfFriendsPendingMyResponse:
hasNumberOfFriendsPendingMyResponse
numberOfFriends
numberOfFriendsMyDataHidden
numberOfFriendsHiddenFromMe
numberOfFriendsMuted
numberOfFriendsAwaitingResponse
numberOfFriendsPendingMyResponse
_numberOfFriends
_numberOfFriendsAwaitingResponse
_numberOfFriendsHiddenFromMe
_numberOfFriendsMuted
_numberOfFriendsMyDataHidden
_numberOfFriendsPendingMyResponse
_maxFriendDuration
_medianFriendDuration
_minFriendDuration
_predicateWithStoreUUID:type:
enumerateEntitiesInDatabase:predicate:error:enumerationHandler:
existingSyncStoreEntityWithUUID:database:error:
initWithShareURLs:invitationTokensByShareURL:
setPerShareMetadataBlock:
ownerIdentity
_initWithUserIdentity:
_acceptSharesWithShareMetadata:
setFetchShareMetadataCompletionBlock:
initWithShareMetadatas:
setAcceptSharesCompletionBlock:
setPerShareCompletionBlock:
invitationTokensByShareURLs
_invitationTokensByShareURLs
rollbackDueToError:errorOut:
_enableAutomaticRollbackTimer
_transaction_runTransactionWithContext:
performInTransactionWithErrorOut:block:
commitWithErrorOut:
transactionQueue
setTransactionQueue:
dataQueue
setDataQueue:
completionSemaphore
setCompletionSemaphore:
pendingWorkSemaphore
setPendingWorkSemaphore:
automaticRollbackTimer
setAutomaticRollbackTimer:
pendingWork
setPendingWork:
setLastError:
pendingWorkDidSucceed
setPendingWorkDidSucceed:
transactionTimeout
continuationTimeout
_pendingWorkDidSucceed
_transactionIdentifier
_transactionQueue
_dataQueue
_completionSemaphore
_pendingWorkSemaphore
_automaticRollbackTimer
_pendingWork
_transactionTimeout
_continuationTimeout
setUserCharacteristics:
setAchievementStatistics:
setFirstCalendarItemOfDay:
setEnableStandReminders:
setHasEnableStandReminders:
hasEnableStandReminders
setProgressUpdateFrequency:
setHasProgressUpdateFrequency:
hasProgressUpdateFrequency
setEnableGoalCompletions:
setHasEnableGoalCompletions:
hasEnableGoalCompletions
setEnableAchievements:
setHasEnableAchievements:
hasEnableAchievements
setEnableWeeklySummary:
setHasEnableWeeklySummary:
hasEnableWeeklySummary
setTimeZoneOffset:
setHasTimeZoneOffset:
hasTimeZoneOffset
setNumberOfEvents:
setHasNumberOfEvents:
hasNumberOfEvents
setEventBusyTime:
setHasEventBusyTime:
hasEventBusyTime
setDaysSinceFirstCalorieGoal:
setHasDaysSinceFirstCalorieGoal:
hasDaysSinceFirstCalorieGoal
hasUserCharacteristics
hasAchievementStatistics
setWellnessComplicationOnWatchFace:
setHasWellnessComplicationOnWatchFace:
hasWellnessComplicationOnWatchFace
hasFirstCalendarItemOfDay
enableStandReminders
progressUpdateFrequency
enableGoalCompletions
enableAchievements
enableWeeklySummary
timeZoneOffset
numberOfEvents
eventBusyTime
daysSinceFirstCalorieGoal
userCharacteristics
achievementStatistics
wellnessComplicationOnWatchFace
firstCalendarItemOfDay
_daysSinceFirstCalorieGoal
_eventBusyTime
_numberOfEvents
_progressUpdateFrequency
_timeZoneOffset
_achievementStatistics
_firstCalendarItemOfDay
_userCharacteristics
_enableAchievements
_enableGoalCompletions
_enableStandReminders
_enableWeeklySummary
_wellnessComplicationOnWatchFace
initWithProfile:filter:
_enumerateActivitySummariesAndCachesWithPredicate:largestAnchor:error:handler:
_activitySummaryIndex
filterIgnoringActivityCacheIndexFilter
_mostSignificantCacheAmongCaches:
_initWithActivityCache:shouldIncludePrivateProperties:
filter:acceptsActivitySummary:
activityCacheType
setDatabaseTransactionContext:
enumerateActivitySummariesWithPredicate:error:handler:
activitySummariesWithPredicate:handler:
batchedActivitySummariesWithPredicate:maxBatchSize:handler:
shouldIncludePrivateProperties
setShouldIncludePrivateProperties:
shouldIncludeStatistics
setShouldIncludeStatistics:
orderByDateAscending
setOrderByDateAscending:
setLimit:
databaseTransactionContext
enumeratedSummaryCount
_filter
_shouldIncludePrivateProperties
_shouldIncludeStatistics
_orderByDateAscending
_databaseTransactionContext
_enumeratedSummaryCount
clearKeyValuePairs
keyValuePairsAtIndex:
keyValuePairsType
setKeyValuePairs:
_keyValuePairs
_queue_startCollectionWithSessionId:
_queue_stopCollection
_queue_addSegmentEventWithFallbackEndDate:
_queue_querySwimDataWithCompletion:
initWithSessionId:
_queue_errorOccurred:
startUpdatesFromRecord:handler:
_queue_processSwimData:error:
querySwimUpdatesFromRecord:handler:
lapCount
_queue_addLapEventForSwimData:
segment
_queue_addSegmentEventForSwimData:
initWithEventType:sessionId:dateInterval:metadata:
receivedWorkoutEvent:
strokeType
initWithSessionId:error:
_swimTracker
_referenceSwimData
_lastSwimData
_currentSegmentStartDate
_workoutEventQueue
setConsecutiveStandingHoursGoalsMet:
setHasConsecutiveStandingHoursGoalsMet:
hasConsecutiveStandingHoursGoalsMet
setConsecutiveBriskMinuteGoalsMet:
setHasConsecutiveBriskMinuteGoalsMet:
hasConsecutiveBriskMinuteGoalsMet
setCurrentCalorieGoalConsecutiveCompleteDays:
setHasCurrentCalorieGoalConsecutiveCompleteDays:
hasCurrentCalorieGoalConsecutiveCompleteDays
setConsecutiveCompleteDays:
setHasConsecutiveCompleteDays:
hasConsecutiveCompleteDays
consecutiveStandingHoursGoalsMet
consecutiveBriskMinuteGoalsMet
currentCalorieGoalConsecutiveCompleteDays
consecutiveCompleteDays
_consecutiveBriskMinuteGoalsMet
_consecutiveCompleteDays
_consecutiveStandingHoursGoalsMet
_currentCalorieGoalConsecutiveCompleteDays
callerID
initWithContributors:provenance:
contributors
_contributors
_predicateWithRegistryUUID:
_nanoPairingEntitiesWithPredicate:database:error:
_initWithNanoRegistryUUID:persistentUUID:healthDatabaseUUID:sourceBundleIdentifier:deviceIdentifier:syncStoreEntity:restoreComplete:database:error:
setNanoRegistryUUID:
setHealthDatabaseUUID:
setDeviceIdentifier:
setSyncProvenance:
setRestoreComplete:
propertyValueForAnyInDatabase:property:predicate:error:
updateProperties:healthDatabase:error:bindingHandler:
nanoPairingEntityWithRegistryUUID:profile:error:
nanoPairingEntityWithRegistryUUID:database:error:
saveWithHealthDatabase:error:
healthDatabaseUUID
entity
setEntity:
_restoreComplete
_nanoRegistryUUID
_persistentUUID
_healthDatabaseUUID
_entity
activeCaloriesForDemoPerson:atTime:
exerciseMinutesForDemoPerson:atTime:
appleStandHourForDemoPerson:atTime:activeCalories:exerciseMinutes:
gregorianCalendar
restingCaloriesForDemoPerson:atTime:
fallsForDemoPerson:atTime:
isFloorCountingAvailable
flightsClimbedForDemoPerson:atTime:
stepsForDemoPerson:atTime:
_computeWalkingRunningDistanceWithStepCount:demoPerson:
_computeCyclingDistanceWithStepCount:demoPerson:
uvIndexForDemoPerson:atTime:
_setEnergyBurnedGoal:
_setSequence:
_setStepCount:
_setFlightsClimbed:
_sumQuantity:withQuantity:
_setWalkingAndRunningDistance:
_setEnergyBurned:
_setActiveHours:
_setBriskMinutes:
_updateWorkoutStateWithActiveEnergyBurned:distanceWalking:distanceCycling:currentTime:date:objectCollection:demoPerson:
workoutState
totalEnergyBurnedInKilocalories
setTotalEnergyBurnedInKilocalories:
addAssociatedObjectUUID:
totalDistanceWalkingInMeters
setTotalDistanceWalkingInMeters:
totalDistanceCyclingInMeters
setTotalDistanceCyclingInMeters:
_generateHIITWorkoutDataWithObjectCollection:demoPerson:
_generateSwimmingWorkoutDataWithObjectCollection:demoPerson:
_generateEllipticalWorkoutDataWithObjectCollection:demoPerson:
_generateRunningWorkoutDataWithObjectCollection:demoPerson:workoutState:
_generateWalkingWorkoutDataWithObjectCollection:demoPerson:
_generateYogaWorkoutDataWithObjectCollection:demoPerson:
_generateHikingWorkoutDataWithObjectCollection:demoPerson:
_generateDanceWorkoutDataWithObjectCollection:demoPerson:
_generateCooldownWorkoutDataWithObjectCollection:demoPerson:
generateWorkoutWithEndDate:profile:provenance:
associatedObjectUUIDs
_generateWorkoutDataWithHeartRates:recoveryHeartRates:objectCollection:demoPerson:workoutState:
swimmingSwimSegmentTime
swimmingRestSegmentTime
numSwimmingSegments
distanceSwimmingSegmentInYards
swimmingNumLapsPerSegment
_generateSwimmingSegmentDataWithStartDate:segmentTime:segmentDistance:numLaps:strokeStyle:objectCollection:demoPerson:
workoutEventWithType:dateInterval:metadata:
addWorkoutEvent:
_computeSwimmingStrokesFromDistance:demoPerson:
totalSwimmingStrokes
setTotalSwimmingStrokes:
kcalRate
lastHeightInCm
computeBasalMetabolicRateFromWeight:height:age:sex:
firstSampleDayOfYear
_computeUVIndexForDemoPerson:atTime:
distanceWalkingRateInMiles
footUnit
distanceCyclingRateInMiles
lastUVIndexPeak
setProfile:provenance:
_pickActivityForTime:
_computeExerciseCaloriesForDemoPerson:duration:activity:weight:
_computePercentCooledForDemoPerson:atTime:
_isDemoPersonCoolingDown:atTime:
_isDemoPersonSedentary:atTime:
_isDemoPersonInWorkoutRecovery:atTime:
nextActiveCaloriesSampleTime
setNextActiveCaloriesSampleTime:
nextAppleStandHourSampleTime
setNextAppleStandHourSampleTime:
nextRestingCaloriesSampleTime
setNextRestingCaloriesSampleTime:
nextFallSampleTime
setNextFallSampleTime:
nextFlightsClimbedSampleTime
setNextFlightsClimbedSampleTime:
nextStepsSampleTime
setNextStepsSampleTime:
nextExerciseMinuteTime
setNextExerciseMinuteTime:
nextHeartRateRecoveryStartTime
setNextHeartRateRecoveryStartTime:
nextHeartRateRecoveryStopTime
setNextHeartRateRecoveryStopTime:
nextUVIndexSampleTime
setNextUVIndexSampleTime:
lastUVIndexPeakTime
setLastUVIndexPeakTime:
lastUVExposure
setLastUVExposure:
setLastUVIndexPeak:
lastActivityCache
setLastActivityCache:
currentWorkoutConfiguration
setCurrentWorkoutConfiguration:
setWorkoutState:
_nextActiveCaloriesSampleTime
_nextAppleStandHourSampleTime
_nextRestingCaloriesSampleTime
_nextFallSampleTime
_nextFlightsClimbedSampleTime
_nextStepsSampleTime
_nextExerciseMinuteTime
_nextHeartRateRecoveryStartTime
_nextHeartRateRecoveryStopTime
_nextUVIndexSampleTime
_lastUVIndexPeakTime
_lastUVExposure
_lastUVIndexPeak
_lastActivityCache
_currentWorkoutConfiguration
_workoutState
degreeFahrenheitUnit
percentUnit
workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalSwimmingStrokeCount:device:metadata:
inchUnit
workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:device:metadata:
pathForResource:ofType:
addWorkoutRouteFromFilePath:profile:provenance:workout:
_setGoal:
_setGoalType:
JSONObjectWithData:options:error:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
localDevice
_setCount:
setAssociatedObjectUUIDs:
setWorkoutEvents:
_associatedObjectUUIDs
_workoutEvents
_totalEnergyBurnedInKilocalories
_totalDistanceWalkingInMeters
_totalDistanceCyclingInMeters
_totalSwimmingStrokes
initWithProvenance:creationDate:skipInsertionFilter:resolveAssociations:profile:
creationDate
_defaultCreationDate
_skipInsertionFilter
_resolveAssociations
_corry_rewriteHFDStep1WithError:
_corry_rewriteHFDStep2WithError:
erieUnprotectedMigrationSteps
erieProtectedMigrationSteps
nextStepLengthSampleTime
nextWalkingSpeedSampleTime
nextAsymmetryPercentageSampleTime
nextDoubleSupportPercentageSampleTime
nextSixMinuteWalkTestDistanceSampleTime
nextStairAscentSpeedSampleTime
nextStairDescentSpeedSampleTime
_generateStepLengthSamplesForDemoPerson:atTime:sampleDate:objectCollection:
_generateWalkingSpeedSamplesForDemoPerson:atTime:sampleDate:objectCollection:
_generateAsymmetryPercentageSamplesForDemoPerson:atTime:sampleDate:objectCollection:
_generateDoubleSupportPercentageSamplesForDemoPerson:atTime:sampleDate:objectCollection:
_generateSixMinuteWalkTestDistanceSamplesForDemoPerson:atTime:sampleDate:objectCollection:
_generateStairAscentSpeedSamplesForDemoPerson:atTime:sampleDate:objectCollection:
_generateStairDescentSpeedSamplesForDemoPerson:atTime:sampleDate:objectCollection:
_isDemoPersonWalkingAboveAverage
_generateWalkingDataSamplesForDemoPerson:atTime:sampleDate:addFromWatch:shouldDecreaseDuringRehab:objectCollection:nextSampleTime:typeIdentifier:unit:sampleMean:sampleMeanStdDev:sampleFrequency:sampleFrequencyStdDev:
setNextStepLengthSampleTime:
setNextWalkingSpeedSampleTime:
setNextAsymmetryPercentageSampleTime:
setNextDoubleSupportPercentageSampleTime:
setNextSixMinuteWalkTestDistanceSampleTime:
setNextStairAscentSpeedSampleTime:
setNextStairDescentSpeedSampleTime:
generationPeriodInDays
_nextStepLengthSampleTime
_nextWalkingSpeedSampleTime
_nextAsymmetryPercentageSampleTime
_nextDoubleSupportPercentageSampleTime
_nextSixMinuteWalkTestDistanceSampleTime
_nextStairAscentSpeedSampleTime
_nextStairDescentSpeedSampleTime
initWithConfiguration:client:
_setDataSourceConfiguration:
filtersBySampleType
filterWithQueryFilter:objectType:
sampleTypesToCollect
eventTypesToCollect
initWithWorkoutConfiguration:sampleTypesToCollect:filters:eventTypesToCollect:
setSampleTypesToCollect:
_lock_shouldAddSample:
addDataAccumulationObserver:
removeDataAccumulationObserver:
currentEvents
destinationProcessorsConformingToProtocol:
remote_startTaskServerIfNeeded
remote_setDataSourceConfiguration:
_dataSourceConfiguration
_basicDataSource
enumerateEntitiesForSyncWithProperties:predicate:syncEntityClass:session:syncAnchorRange:orderingTerms:limit:lastSyncAnchor:healthDatabase:error:block:
_syncQueryWithDatabase:predicate:orderingTerms:limit:anchorProperty:
nextSyncAnchorWithStartAnchor:predicate:syncEntityClass:session:orderingTerms:limit:healthDatabase:error:
_syncQueryDescriptorWithPredicate:orderingTerms:limit:anchorProperty:
aggregateSingleValueForProperty:function:queryDescriptor:database:error:
excludedSyncStores
predicateWithProperty:lessThanOrEqualToValue:
_onboardingCompletionsForHighestVersion:featureIdentifier:transaction:error:
_enumerateAllOnboardingCompletionModelsWithTransaction:predicate:orderedByProperty:ascending:error:enumerationHandler:
onboardingCompletionWithTransaction:error:
_hasNoEquivalentCompletionForOnboardingCompletion:transaction:error:
_insertEntityWithUUID:featureIdentifier:version:completionDate:countryCode:modificationDate:deleted:syncProvenance:transaction:error:
isValidWithError:
_insertCodableOnboardingCompletion:syncProvenance:transaction:changedFeatureIdentifier:error:
_onboardingCompletionWithUUID:transaction:error:
decodedCompletionDate
_deleteEntitiesWithUUIDs:transaction:error:
_deletedEntityWithUUID:transaction:error:
enumerateAllOnboardingCompletionsWithTransaction:predicate:error:enumerationHandler:
setFeatureIdentifier:
setVersion:
setCompletionDate:
setCountryCode:
initWithFeatureIdentifier:version:completionDate:countryCode:UUID:
addTaskOnQueue:timeout:task:
setTimeout:
setHasTimeout:
addCheckpointTaskOnQueue:task:
setCheckpointHandler:
_queue_beginNextTask
_queue_insertPendingSubtasks
_queue_runPendingCheckpointTasks:completion:
_queue_reportResult:
checkpointHandler
hasTimeout
timeout
_queue_completeCurrentTaskWithResult:error:
handler
addTaskWithTimeout:task:
addCheckpointTask:
allErrors
groupDescription
_queue_pendingTasks
_queue_pendingSubtasks
_queue_taskErrors
_canceled
_rejectAddTask
_queue_started
_queue_finished
_queue_completion
_default_task_queue
_groupDescription
_hasTimeout
_timeout
_checkpointHandler
deleteStatementForWorkoutEventsWithTransaction:
_codableCondensedWorkoutProperties
setPersistentID:
setCondenserVersion:
setCondenserDate:
copySampleAssociationsFromWorkout:toWorkout:profile:error:
enumerateCondensedWorkoutsWithPredicate:profile:error:handler:
updateCondenserVersion:date:transaction:error:
isCondenserVersionLessThan:transaction:
getCondenserVersion:date:profile:error:
codableCondensedWorkoutWithTransaction:error:
statementForEnumeratingEventsForOwnerInDatabase:error:
addEvents:
enumerateEventsForOwner:withStatement:error:eventHandler:
_setDuration:
_setTotalEnergyBurned:
_setTotalBasalEnergyBurned:
_setTotalDistance:
_setWorkoutActivityType:
_setTotalSwimmingStrokeCount:
_setTotalFlightsClimbed:
workoutEventsWithOwnerID:database:error:
_setWorkoutEvents:
_workoutEntryLookupStatement
_includeCondenserInfo
isNullPredicateWithProperty:
predicateWithProperty:lessThanValue:
_baseSourceEvent
setActivationLogEntries:
createActiveSourceLog
_baseActiveSource
_activationLogEntries
sensorLocation
setPreferredSensorLocation:
resetEnergyExpendedOnPeripheral:completion:
setWritableCharacteristic:
deliverData
handleHeartRate:
handleBodyLocation:
setDeliverData:
preferredSensorLocation
_deliverData
_preferredSensorLocation
_powerAssertionDidTimeout
operationGroupForContext:syncCircleIdentifier:
initWithRepository:operationGroup:syncContainerPrefix:options:reason:accessibilityAssertion:syncIdentifier:
shortSyncIdentifier
syncIdentifier
operationType
_queue_computeConfigurationWithTaskTree:
_queue_runStagesWithTaskTree:
_queue_reportFinalAnalyticsWithTaskTree:
beginWithTaskTree:
discretionaryNetworkBehavior
_queue_computeStageTransferSizes
cloudKitIdentifier
cloudSync_reportPipelineStarted:
expectedSendSize
expectedReceiveSize
setExpectedReceiveSize:
cloudSync_reportPipelineFinished:
cloudSync_reportPipelineFailed:error:
criticalFailureOnError
_queue_runStage:taskTree:
setQuantity:
_allowCellularForContext:
setAllowsCellularAccess:
_qualityOfServiceForContext:
setXpcActivity:
beginWithCompletion:
setOperationGroup:
continueWhenSyncDisabled
setContinueWhenSyncDisabled:
pipelineCompletionHandler
setPipelineCompletionHandler:
_stages
_shortPipelineIdentifier
_cloudState
_pipelineResult
_analyticsCloudKitIdentifier
_powerAssertion
_continueWhenSyncDisabled
_context
_accessibilityAssertion
_operationGroup
_operationConfiguration
_pipelineCompletionHandler
backwardsCompatibleEncoderForEntityClass:profile:transaction:purpose:encodingOptions:authorizationFilter:
entityEncoderForProfile:database:purpose:encodingOptions:authorizationFilter:
encodedByteCount
generateCodableRepresentationsForPersistentID:row:maxBytesPerRepresentation:error:handler:
applyPropertiesToObject:persistentID:row:
encodingOptions
authorizationFilter
_encodingOptions
_authorizationFilter
_superclassEncoder
taken
initWithCreateAndTakeBlock:
_takeAssertion
_releaseAssertion
createAndTakeBlock
_currentAssertion
_createAndTakeBlock
_transitionToNewAssertions:
setupState:withAssertions:
transitionToState:
_allAssertions
_assertionsForState
hasPayload
_payload
_startTimer
restart
initWithCompletion:
startWithTimeoutInterval:handler:
initWithTimeoutHandler:queue:
metricReceived
pause
metricAvailable
_timeoutHandler
_paused
_metricAvailable
_readHeartRateEnabledPreference
_queue_updateFitnessMachine
_queue_updateFitnessMachineWithCompletion:forcing:
_queue_detachHealthServiceSession
_queue_workoutDataAccumulator:didUpdateStatistics:
sumQuantity
mostRecentQuantity
averageQuantity
_queue_generateEurotasData
_queue_sendEurotasData:completion:
initForWriting
addActiveEnergy:
addTotalEnergy:
addHeartRate:
addAverageHeartRate:
healthServiceManager
writeCharacteristic:onSession:expectResponse:completion:
workoutDataAccumulator:didUpdateStatistics:
workoutDataAccumulator:didUpdateMetadata:
workoutDataAccumulator:didUpdateEvents:
workoutDataAccumulator:didUpdateStartDate:
_sessionIdentifier
_totalActiveEnergy
_totalBasalEnergy
_latestHeartRate
_averageHeartRate
_heartRateTracker
_heartRateEnabled
_previousEurotasData
filterIgnoringPrivateMetadata
subfilters
compoundPredicateType
negatedPredicate:
_filterByApplyingTransformationToSubfilters:
initWithType:subfilters:
relationalPredicate
likePredicate
beginsWithPredicate
endsWithPredicate
containsPredicate
predicateWithProperty:likePattern:
predicateWithProperty:beginsWithString:
predicateWithProperty:endsWithString:
predicateWithProperty:containsString:
_cloudKitIdentityUpdated:
_checkForDevicetoDeviceEncryptionAvailability
accountInfoWithCompletionHandler:
insertSQLForProperties:shouldReplace:
_insertMetadataValueWithKeyID:objectID:value:database:error:
_predicateForEntityWithKeyID:
_predicateForEntityWithObjectID:
enumerateStatementWithError:bindingHandler:block:
enumerateResultsForObjectID:error:block:
_predicateWithMetadataKey:allowedValues:
_predicateWithMetadataKey:value:operatorType:
_predicateWithMetadataKey:exists:
_valuePredicateForValue:operatorType:
predicateWithMetadataKey:allowedValues:
predicateWithMetadataKey:exists:
_keyPredicate
_valuePredicate
_matchObjectsWithoutKey
setFailingKeyPath:
setFailingAction:
hasFailingKeyPath
hasFailingAction
failingKeyPath
failingAction
_failingAction
_failingKeyPath
_registerForSignificantTimeChangeNotification
_handleSignificantTimeChangeNotification:
_generateCacheIndexesWithTodayIndex:yesterdayIndex:
_queue_gregorianCalendar
hk_activitySummaryDateComponentsFromDate:
filterWithOperatorType:cacheIndex:
orFilterWithSubfilters:
_queue_updateActivitySummaries:
_queue_resetQueryHelper
initWithProfile:filter:batchedInitialResultsHandler:batchedUpdateHandler:
_gregorianDateComponents
_queue_updateTodayActivitySummary:
_queue_updateYesterdayActivitySummary:
_createEmptyActivitySummaryForIndex:
activeEnergyBurnedGoal
activeEnergyBurned
appleMoveTimeGoal
appleMoveTime
appleExerciseTimeGoal
appleExerciseTime
appleStandHoursGoal
appleStandHours
_deepBreathingDuration
_pushCount
_flightsClimbed
_wheelchairUse
_changedFieldsBetweenPreviousActivitySummary:andNewActivitySummary:
_queue_alertObserversTodaySummaryUpdated:changedFields:
_queue_alertObserversYesterdaySummaryUpdated:changedFields:
currentActivitySummaryHelper:didUpdateTodayActivitySummary:changedFields:
currentActivitySummaryHelper:didUpdateYesterdayActivitySummary:changedFields:
_queue_setUpActivityQueryHelper
stopDataCollectionForType:observer:
_queue_dateHasChanged
_setActivitySummaryIndex:
_setDataLoading:
todayActivitySummary
yesterdayActivitySummary
hasLoadedActivitySummaries
setDateOverride:
dateOverride
setTimezoneOverride:
timezoneOverride
_queryHelper
_observerQueue
_todayIndex
_yesterdayIndex
_todaySummary
_yesterdaySummary
_hasLoadedActivitySummaries
_typesForDataCollection
_dateOverride
_timezoneOverride
systemTimeZone
hk_classNameWithTag:
_lookupOrInsertProvenance:transaction:error:
_loadDefaults
deviceNoneID
noneContributorReference
setContributorReference:
localProductType
localSystemBuild
provenanceKeyForProvenance:localProductType:localSystemBuild:
primaryUserContributorReference
_localDataProvenanceWithSourceID:sourceVersion:deviceID:contributorReference:
localSourceID
processInfo
_localTimeZoneName
setNoneContributorReference:
setPrimaryUserContributorReference:
setDeviceNoneID:
localDeviceSourceWithError:
setLocalSourceID:
localDeviceID
currentDeviceEntityWithError:
setLocalDeviceID:
checkDefaultsLoaded
defaultLocalDataProvenanceWithDeviceEntity:
persistentIDsByProvenanceKey
setPersistentIDsByProvenanceKey:
originProvenanceByPersistentID
setOriginProvenanceByPersistentID:
setLocalSystemBuild:
setLocalProductType:
_localSourceVersion
_propertyLock
_propertyLock_localSourceID
_propertyLock_localDeviceID
_propertyLock_deviceNoneID
_propertyLock_noneContributorReference
_propertyLock_primaryUserContributorReference
_defaultsLoaded
_persistentIDsByProvenanceKey
_originProvenanceByPersistentID
_localSystemBuild
_localProductType
dataProvenance
_hash
_dataProvenance
launchBundleIdentifier
applicationIsInstalled:
_queue_invalidate
_queue_acquireAssertionWithCompletion:
hd_openApplication:optionsDictionary:completion:
_queue_assertionDidFinish:
initWithBundleIdentifier:assertionManager:profile:queue:
launchWithCompletion:
extendForDataType:anchor:completion:
invalidateForDataType:anchor:
nextLaunchAttempt
pendingDataTypeCodesToAnchors
lastLaunchAttempt
launchErrorCount
pendingLaunchCompletions
setPendingLaunchCompletions:
processDeathSource
setProcessDeathSource:
processAssertions
setInvalidated:
_pendingDataTypeCodesToAnchors
_lastLaunchAttempt
_launchErrorCount
_pendingLaunchCompletions
_processDeathSource
_processAssertions
medicationDispenseRecords
diagnosticTestResults
vaccinationRecords
conditionRecords
allergyRecords
accountOwners
clinicalRecords
coverageRecords
unitTest_isEquivalentToGeneratedObjectCollection:
addMedicationDispenseRecord:
addDiagnosticTestResult:
addConditionRecord:
addAccountOwner:
addCoverageRecord:
freezeWithTransaction:profile:error:
seriesSampleWithID:profile:error:
deleteSeriesWithID:deleteHFDData:insertDeletedObject:profile:transaction:error:
replaceObjectID:replacementObjectID:deleteOriginalHFDData:insertDeletedObject:profile:transaction:error:
shouldNotifyForDataObjects:provenance:database:anchor:
initWithSeriesUUID:metadata:class:
setCallWillDeleteFromDatabase:
_insertionEra
updateInsertionEra
additionalPredicateForEnumeration
entityEncoderForProfile:transaction:purpose:authorizationFilter:
HFDKeyWithDatabase:error:
canAddDatumInDatabase:error:
updateSampleCount:withDatabase:error:
initWithIdentifier:dateInterval:quantity:metadata:resumeContextProvider:
initWithIdentifier:dateInterval:resumeContextProvider:
quantityDataForDifferencesInData:baseDatum:unit:differenceHandler:intervalHandler:
quantityDatumWithHKQuantityDatum:metadata:
saveCompletion
setSaveCompletion:
_quantity
_saveCompletion
initWithAggregatedSamples:consumedData:remainingData:
aggregatedSamples
remainingSensorData
_aggregatedSamples
_remainingSensorData
resumeContextProvider
hk_mutableSubarrayWithRange:
addSampleValue:startTime:endTime:sourceID:error:
setOnWrist:
setHasOnWrist:
hasOnWrist
onWrist
_onWrist
_queue_recoverOrCreatePersistentEntity
workoutBuilderID
seriesSample
hd_validateMetadataKeysAndValuesWithClient:error:
_queue_addMetadata:completion:
_queue_discardIfAuthorizedWithCompletion:
queue_freezeBuilderWithCompletion:
_setClientState:completion:
clientRemote_didChangeToState:completion:
queue_canInsertDataWithErrorHandler:
canAddMetadata:errorOut:
persistentEntity
insertMetadata:transaction:error:
createSeriesSampleIfNeeded:errorHandler:
queue_setState:completion:
persistentEntityForBuilderIdentifier:profile:error:
queue_recoverBuilder
createPersistentEntityForBuilderIdentifier:seriesType:state:profile:error:
stateWithTransaction:error:
setBuilderState:transaction:error:
_queue_discardSeriesWithCompletion:
discardSeriesWithCompletion:
performIfAuthorizedToDeleteObjectTypes:usingBlock:errorHandler:
remote_addMetadata:completion:
remote_discardWithCompletion:
remote_freezeWithCompletion:
associateToWorkoutBuilderWithCompletion:
setConfiguration:
queue_state
setSeriesSample:
setPersistentEntity:
_queue_state
_seriesSample
_persistentEntity
initWithName:cacheScope:
_applicationsUninstalledNotification:
_createSourceEntityForLocalDeviceWithError:
_sourceForBundleIdentifier:createSourceBlock:modifySourceBlock:error:
_predicateForSourceBundleIdentifier:localOnly:
_createCopyOfFirstSourceWithPredicate:database:error:
_isLocalDeviceBundleIdentifier:
_privateSourceForClinicalAccountIdentifier:name:
_sourceFromEphemeralSource:provenance:createOrUpdateIfNecessary:error:
_publicSourceForGatewayExternalIdentifier:name:
_owningAppBundleIdentifier
_createSourceEntityForSpartanDeviceWithError:
_createSourceEntityForBundleIdentifier:owningAppBundleIdentifier:name:options:isCurrentDevice:productType:error:
clientSourcesForSourceIDs:error:
_fetchClientSourceForPersistentID:error:
_clientSourcesWithPredicate:error:
_createSourcesWithCodables:provenance:sourceUUIDSToDelete:deleteSamples:transaction:error:
sourceForCodableSource:provenance:createIfNecessary:isDeleted:error:
_sourceUUIDsForBundleIdentifier:error:
_bundleIDsWithoutLocalSourceForSourcesWithPredicate:database:error:
deleteSamplesWithSourceEntities:error:
_localSourcesForBundleIDs:database:error:
_generateIdentifierForAppleDevice
disjunctionWithPredicate:otherPredicate:
_deleteSourceIfNoSampleFound:
privateSourceForClinicalAccountIdentifier:provenance:createOrUpdateIfNecessary:nameOnCreateOrUpdate:error:
publicSourceForGatewayExternalIdentifier:provenance:createOrUpdateIfNecessary:nameOnCreateOrUpdate:error:
sourceForClient:error:
sourceForApplicationIdentifier:createOrUpdateIfNecessary:entitlements:name:error:
sourceForAppleDeviceWithUUID:identifier:name:productType:createIfNecessary:error:
clientSourceForSourceEntities:error:
sourceUUIDForBundleIdentifier:error:
clientSourceForUUID:error:
allWatchSourcesWithError:
_sourcePersistentIDsFromSourceEntities:
_sourceEntityByBundleIdentifierCache
_clientSourceCache
_localSourceForBundleIdentifierCache
_localSourceForSourceID
_resetOperationForContainer:primary:
rawState
_lock_description
_lock_cloneWithOwnerIdentifier:
_invalidateAndRelease:
_lock_state
_lock_setBudget:error:
_releaseAssertion:
_lock_setBudgetIntervalStartTime:
_lock_consumeBudgetThroughTime:error:
_lock_remainingBudget
remainingBudget
_takeWithManager:
_setBudgetIntervalStartTime:
_consumeFromBudgetThroughTime:
budget
_manager
_remainingBudget
_budgetIntervalStartTime
_UUID
_assertionIdentifier
_ownerIdentifier
_budget
addIncludedStoreIdentifiers:
addUnfrozenChangeRecordNames:
includedStoreIdentifiersCount
clearIncludedStoreIdentifiers
includedStoreIdentifiersAtIndex:
unfrozenChangeRecordNamesCount
clearUnfrozenChangeRecordNames
unfrozenChangeRecordNamesAtIndex:
includedStoreIdentifiersType
unfrozenChangeRecordNamesType
setHasSlot:
hasSlot
slotAsString:
StringAsSlot:
setHasActive:
hasActive
setHasEpoch:
hasEpoch
setHasProtocolVersion:
hasProtocolVersion
hasAnchorMap
setHasChangeIndex:
hasChangeIndex
setHasChildRecordCount:
hasChildRecordCount
_changeIndex
_childRecordCount
_epoch
_protocolVersion
_anchorMap
_frozenAnchorMap
_includedStoreIdentifiers
_slot
_unfrozenChangeRecordNames
_active
domainName
_entityClassForKeyValueCategory:
_entitlementForCategory:
arrayEntitlement:containsString:
setValuesWithDictionary:error:
setValueForAllKeys:error:
remote_setNumber:forKey:completion:
remote_setDate:forKey:completion:
remote_setString:forKey:completion:
remote_setData:forKey:completion:
remote_setValuesWithDictionary:completion:
remote_setValueForAllKeys:completion:
remote_removeValuesForKeys:completion:
remote_numberForKey:completion:
remote_dateForKey:completion:
remote_stringForKey:completion:
remote_dataForKey:completion:
remote_allValuesWithCompletion:
_keyValueEntityClass
_unitTest_overrideKeyValueDomainCategory:
_keyValueDomain
_handleEventAction:token:descriptor:
_queue_addSubscriberForToken:descriptor:
_queue_removeSubscriberForToken:
_queue_sendPendingEvents
_queue_sendEventWithXPCObject:
initWithStream:entitlement:
broadcastEvent:
_publisher
_pendingEvents
_pendingSubscribers
_subscribers
_requiredEntitlement
_saveRepairedRecordsForContainer:database:
sharedCloudDatabase
hasTypeCodings
_typeCodings
insertValues:transaction:error:
initWithSeries:values:
series
values
_legacySeriesIdentifier
_didAwakeFromJournal
_series
_values
setThirdPartyBundleIdentifier:
setBedtimeCorrectionMinutesStatistics:
setBedtimeChangesMinutesStatistics:
setThirdPartyDeviceModel:
setThirdPartyDeviceManufacturer:
setBedtimeAlarmNightCount:
setHasBedtimeAlarmNightCount:
hasBedtimeAlarmNightCount
setBedtimeChangesCount:
setHasBedtimeChangesCount:
hasBedtimeChangesCount
setThirdPartySleepTrackerNightCount:
setHasThirdPartySleepTrackerNightCount:
hasThirdPartySleepTrackerNightCount
hasThirdPartyBundleIdentifier
hasBedtimeCorrectionMinutesStatistics
hasBedtimeChangesMinutesStatistics
hasThirdPartyDeviceModel
hasThirdPartyDeviceManufacturer
bedtimeAlarmNightCount
bedtimeChangesCount
thirdPartySleepTrackerNightCount
thirdPartyBundleIdentifier
bedtimeCorrectionMinutesStatistics
bedtimeChangesMinutesStatistics
thirdPartyDeviceModel
thirdPartyDeviceManufacturer
_bedtimeAlarmNightCount
_bedtimeChangesCount
_thirdPartySleepTrackerNightCount
_bedtimeChangesMinutesStatistics
_bedtimeCorrectionMinutesStatistics
_thirdPartyBundleIdentifier
_thirdPartyDeviceManufacturer
_thirdPartyDeviceModel
extension
extensionManager
incrementErrorCount
extensionIdentifier
_lock_cancelTimeoutTimers
_notifyAppExtensionOfUpcomingTimeout
newTimerWithDuration:handler:
_notifyAppExtensionForDataType:
connectWithCompletionHandler:
notifyExtensionOfUpcomingTimeout
notifyExtensionOfUpdateForSampleType:completionHandler:
disconnect
appExtensionAssertionDidInvalidate:
initWithBundleIdentifier:assertionManager:profile:
assertAndUpdateWithCompletion:
shouldAssert
nextAssertionAttempt
_unitTest_pendingAssertionCompletionsCount
_unitTest_pendingDataTypeCodesToAnchors
_unitTest_connectionErrorCount
_unitTest_lastAssertionAttempt
_unitTest_invalidated
unitTest_errorCountDidIncrement
setUnitTest_errorCountDidIncrement:
unitTest_extensionWillTimeout
setUnitTest_extensionWillTimeout:
unitTest_timersWithShortTimeout
setUnitTest_timersWithShortTimeout:
pendingAssertionCompletions
setPendingAssertionCompletions:
setPendingDataTypeCodesToAnchors:
timeoutTimer
setTimeoutTimer:
graceTimer
setGraceTimer:
setLock:
pendingAssertion
setPendingAssertion:
lastAssertionAttempt
setLastAssertionAttempt:
connectionErrorCount
setConnectionErrorCount:
_unitTest_timersWithShortTimeout
_pendingAssertion
_unitTest_errorCountDidIncrement
_unitTest_extensionWillTimeout
_pendingAssertionCompletions
_timeoutTimer
_graceTimer
_lastAssertionAttempt
_connectionErrorCount
closeJournalChapters
_lightweightDirectoryEnumeratorForURL:
nextObject
_journalChaptersForURL:sorted:error:
loadSortedJournalChaptersWithError:
_updateRollingBufferIfRequiredWithError:
maxAllowedOpenJournalChapterCount
_unitTest_openJournalChapters:error:
_openJournalChapters:error:
journalChaptersForURL:error:
nextJournalChapterNameForURL:
journalChapterCountForURL:
hasJournalChapters
nextOpenJournalChapterError:
hasMoreJournalChapters
totalJournalChapterCount
currentJournalChapterIndex
_totalOpenJournalChapterCount
setMaxAllowedOpenJournalChapterCount:
remainingJournalChapters
setRemainingJournalChapters:
openJournalChapters
setOpenJournalChapters:
_currentIndex
_hasLoadedPersistedJournalNames
_maxAllowedOpenJournalChapterCount
_totalJournalChapterCount
_cachedError
_remainingJournalChapters
_openJournalChapters
addAnchors:
anchorsCount
anchorsAtIndex:
anchorsType
anchors
setAnchors:
_anchors
correspondingFlagBit
factor
fieldLength
isIncludedInFlags:
setValueWithBytes:before:
valueFromDouble:
valueAsData
markFieldSet
flagFieldFlipped
_flagFieldFlipped
_correspondingFlagBit
_fieldLength
_factor
_isSet
isSigned
_isSigned
_sampleUUID
_conceptIdentifier
_conceptVersion
_keyPath
_compoundIndex
_ontologyVersion
initWithManager:context:
storeIdentifierForOwnerIdentifier:containerIdentifier:profile:error:
persistedStateForStoreUUID:profile:error:
_lastSuccessfulPullKeyForContainerIdentifier:
didCompleteSuccessfulPullWithDate:
initWithManager:context:completion:
mainWithRepositories:error:
collectionIntervals
shouldShowActivityDemoData
requestAggregationThroughDate:types:mode:options:completion:
startDataCollectionForType:observer:collectionInterval:
_queue_startDataCollection
_queue_stopDataCollection
_allFieldsAreEqual:
client_deliverActivitySummaries:queryUUID:
_currentSummaryHelper
_lastActivitySummary
_collectionIntervals
setHourSinceMidnight:
setHasHourSinceMidnight:
hasHourSinceMidnight
setExerciseMinutes:
setHasExerciseMinutes:
hasExerciseMinutes
hourSinceMidnight
exerciseMinutes
_exerciseMinutes
_hourSinceMidnight
_validatedSequenceRecordOperationsForPush
_sequencePushesDidFinishSuccessfully
minusSet:
initWithConfiguration:cloudState:target:sequence:replacingSequence:
setShouldClearRebaselineDeadline:
_currentOwnedStoreIdentifiersForPush
_operationForNewSequenceRecord:replacingSequence:isRebaseline:
_operationForExistingSequenceRecord:
_pendingSequenceRecordOperationForPushWithIncludedStoreIdentifiers:
_replacePendingSequenceRecordWithIncludedStoreIdentifiers:
_storeState
configureForProfileType:
setGenerationPeriodInDays:
setShouldPresentNotifications:
setSampleTrackingType:
setShouldGenerateMedicalID:
setShouldGenerateHealthDocuments:
setShouldEnsureRecentWorkoutHasRoute:
setShouldGenerateRecentLiquidsIntake:
setShouldGenerateLoudHeadphoneData:
persistToDefaults:
highFidelityGeneration
shouldPresentNotifications
sampleTrackingType
shouldGenerateHealthDocuments
shouldGenerateMedicalID
shouldEnsureRecentWorkoutHasRoute
shouldGenerateLoudHeadphoneData
_highFidelityGeneration
_shouldPresentNotifications
_shouldGenerateHealthDocuments
_shouldGenerateMedicalID
_shouldEnsureRecentWorkoutHasRoute
_shouldGenerateRecentLiquidsIntake
_shouldGenerateLoudHeadphoneData
_generationPeriodInDays
_sampleTrackingType
property
_property
_accessToFitnessDataDidChange:
initForCollector:identifier:profile:types:
registerForCollectionWithState:
mergedConfiguration
queue_targetCollectionTypeForRequestedCollectionType:
hasAccessToFitnessData
_queue_diagnosticDescription
_queue_beginUpdatesWithTargetCollectionType:
_queue_updateCollectionType:
lastDatumForType:
coreMotionDatumFromSensorDatum:
_queue_forwardCoreMotionData:forType:
_queue_forwardCoreMotionData:
keysOfEntriesPassingTest:
setLastSensorDatum:forAggregator:
queue_recomputeCurrentState
dataCollector:didChangeState:
_migrateDataCollectionContextForType:error:
_queue_lastPersistedSensorDatumForType:
_queue_populateLastDatumDictionary
hk_firstSortedObjectWithComparison:
didReceiveCoreMotionData:startingDatum:error:
setConfiguration:forAggregator:
_localDeviceSource
identifierForAggregator:
initForWritingWithMutableData:
finishEncoding
_quantityTypes
_multiplexer
_lastCMDatumByType
_errorCount
_syncPredicate
nanoSyncStore
_intervalForSecondsSinceDaysAgo:
initWithExcludedSyncProvenances:dateInterval:includedObjectTypes:defaultMaximumObjectAge:defaultMaximumTombstoneAge:maximumObjectAgeByType:
changeSetWithChanges:sessionUUID:startDate:sessionError:statusCode:
_messageCount
updateSQLForProperties:
updateSQLForProperties:predicate:
initWithKeyOptions:valueOptions:capacity:
_generateDisambiguatedDatabaseTableName
initWithName:columnType:keyPathType:foreignKey:
_enumerateColumnDefinitionsWithBlock:
SQLCheckConstraint
_enumerateColumnNamesWithBlock:
_deleteRowFromTable:usingColumn:database:
_copyDeleteSQLWithTableName:columnName:
_persistentID
initWithRecordIDs:
setShouldFetchAssetContentInMemory:
setDropInMemoryAssetContentASAP:
_fetchedRecord:recordID:inMemoryAsset:error:
setPerRecordCompletionBlock:
updateCompletedProgressCount:
_zipArchiveExtractorForChangeRecord:assetContentInMemory:error:
_finishWithAssetExtractionError:
_persistFetchedArchiveAsset:changeRecord:error:
_setAssetExtractionFailureCount:
_recordAppliedChange
_assetFileHandleWithName:error:
syncStoreForProtocolVersion:
hk_unarchivedObjectOfClasses:forKey:data:error:
_applySyncChanges:store:error:
_assetExtractionFailureCountKey
_assetExtractionFailureCount
progressCount
initWithConfiguration:cloudState:target:sequenceRecord:changeRecord:
changeRecord
_changeRecord
_setAllergyCodings:
_setOnsetDate:
_setReactions:
_setCriticalityCoding:
_setLastOccurenceDate:
_setRecordedDate:
_setupTypes
hk_minus:
_shouldAddSample:
_machineSourceTypes
_localDevicePreferredTypes
_queue_setupAssertionGroup
_currentActivityMoveMode
observedTypesForActivityType:isIndoor:connectedToFitnessMachine:activityMode:
coreMotionWorkoutInterface
generateMetadata:
averageMETsForWorkoutSessionUUID:completion:
finishAggregationWithDate:
eventType
setShouldDisambiguateLocation:
generateConfigurationUpdate:
generateEvent:
autoPauseWithDate:
autoResumeWithDate:
_queue_assertionsPerStateForActivityType:
backgroundWorkoutRunner
clientProcessBundleIdentifier
alertSuppressor
createAndTakeAssertionForOwnerIdentifier:processBundleIdentifier:
clientApplicationIdentifier
appLauncher
_relaunchPayloadOptions
takeKeepAliveAssertionForApplicationBundleIdentifier:processBundleIdentifier:payloadOptions:
takeCMWorkoutAssertionForOwnerIdentifier:sessionUUID:workoutConfiguration:
carouselServicesManager
setWithSet:
dataCollectionObserverStateInBackground:hasRunningWorkout:
takeCollectionAssertionWithOwnerIdentifier:collectionIntervalsByType:observerState:
heartRateRecoveryManager
createAndTakeAssertionForOwnerIdentifier:sessionStateController:
sessionAssertionManager
powerSavingModeManager
supportsPowerSavingForActivityType:
takeSessionAssertionForOwnerIdentifier:activityType:
quietModeManager
takeQuietModeAssertionForOwnerIdentifier:
_takeAlertSuppressionAssertion
_takeBackgroundRunningAssertion
_takeCarouselAssertion
_takeClientKeepAliveAssertion
_takeCoreMotionAssertion
_takeDataCollectionAssertion
_takeEventsCollectionAssertion
_takeHeartRateRecoveryAssertion
_takePlatinumAssertion
_takePowerSavingAssertion
_takeQuietModeAssertion
recoveryIdentifier
willFinishSessionWithRecoveryData:profile:
initWithProfile:sessionConfiguration:sessionStateController:recoveryState:
workoutSessionServer:didChangeConfiguration:
workoutSessionServer:didTransitionFromState:toState:date:
workoutSessionServer:accumulatorDidChange:
hktest_setStateTransitionCompletionHandler:
_sessionStateController
_assertionGroup
_eventsManager
_sessionServerState
_hkTestTransitionCompletionHandler
fileExistsAtPath:
_newDatabase
_newContributorManager
_newUserCharacteristicsManager
_newCloudSyncManager
supportsOntology
_createExtensionsIfNeeded
createExtensionsForProfile:
obliterateWithReason:
_displayNameWithError:
_lastNameWithError:
dispatchProfileListDidChange
allProfileExtensions
_testModeIndicatorURL
writeToURL:options:error:
fetchDisplayFirstName:lastName:error:
profileExtensionWithIdentifier:
fetchDisplayImageDataWithError:
setDisplayImageData:error:
setTestModeEnabled:
sharingEntryManager
cloudSharingInviteRequestManager
databasePruningManager
_deviceManager
_authorizationManager
_ontologyLifecycleManager
_extensionManager
_directoryPath
_syncEngine
_profileExtensionsByIdentifier
_profileLock
_testModeEnabled
_cloudSyncManager
_contributorManager
_dataManager
_dataProvenanceManager
_metadataManager
_onboardingCompletionManager
_sessionAssertionManager
_sharingEntryManager
_sourceOrderManager
_workoutCondenser
_cloudSharingInviteRequestManager
_profileIdentifier
_unitPreferencesManager
_databasePruningManager
_medicalIDDataManager
_migrationManager
peace_addUnprotectedMigrationSteps
peace_addProtectedMigrationSteps
deleteRowsFromDataEntitySubclassTable:intermediateTables:error:
workoutEventType
insertPersistableWorkoutEvent:ownerID:database:error:
workoutEventClass
decodeMetadataFromData:
initWithWorkoutEventType:sessionUUID:dateInterval:metadata:error:
isSubsetOfSet:
datumWithTimeSinceSequenceStart:preceededByGap:
timeSinceSequenceStart
precededByGap
_precededByGap
_timeSinceSequenceStart
initWithIdentifier:dateInterval:resumeContext:
_dataFromHeartbeatArray:
initWithIdentifier:dateInterval:heartbeats:context:longestSubsequenceStart:longestSubsequenceDuration:heartRateVariabilityUUID:resumeContext:
dataWithCapacity:
initWithIdentifier:dateInterval:heartbeats:context:longestSubsequenceStart:longestSubsequenceDuration:medianHeartRate:heartRateVariabilityUUID:resumeContext:
heartbeatSequenceData
longestSubsequenceStart
longestSubsequenceDuration
heartRateVariabilityUUID
_heartbeatSequenceData
_longestSubsequenceStart
_longestSubsequenceDuration
_heartRateVariabilityUUID
heartbeatSeriesType
_metadataForSensorDatum:
_heartbeatSeriesSampleWithData:startDate:endDate:device:metadata:
_associateSubsampleFromSensorDatum:sampleUUID:error:
calorieGoal
moveMinuteGoal
exerciseGoal
standGoal
activityMoveModeChangeType
_queue_updateCaches
_queue_rebuildActivityCaches
_queue_readyToSaveCaches
_queue_todayActivityMoveMode
_queue_saveCacheWithDateInterval:calorieGoal:moveMinuteGoal:exerciseGoal:standGoal:cacheIndex:previousCache:statisticsBuilder:wheelchairUse:activityMoveMode:generateStats:
_queue_alertObserversTodayActivityCacheChanged:
_queue_yesterdayActivityMoveMode
previousDayStatisticsBuilder
_queue_alertObserversYesterdayActivityCacheChanged:
_queue_saveTodayCache
_queue_saveYesterdayCache
activeEnergyValue
_setEnergyBurnedGoalDateOnly:
moveMinuteValue
_setMoveMinutes:
_setMoveMinutesGoal:
_setMoveMinutesGoalDateOnly:
distanceWalkingValue
standHourValue
_setActiveHoursGoal:
_setActiveHoursGoalDateOnly:
exerciseMinuteValue
_setBriskMinutesGoal:
_setBriskMinutesGoalDateOnly:
pushCountValue
_setPushCount:
_setWheelchairUse:
stepCountValue
deepBreathingDurationValue
_setDeepBreathingDuration:
flightsClimbedValue
_setActivityMoveMode:
_isEqualToActivityCache:
_setDailyEnergyBurnedStatistics:
_setDailyMoveMinutesStatistics:
_setDailyBriskMinutesStatistics:
targetDayHeartRateStatisticsBuilder
heartRateSummary
_queue_alertObservers:heartRateSummaryChanged:
previousDayHeartRateStatisticsBuilder
_queue_readyToPrimeDataSource
setTargetDayStatisticsBuilderTag:
setPreviousDayStatisticsBuilderTag:
setPreviousDayDateInterval:
setTargetDayCacheIndex:
setPreviousDayCacheIndex:
_queue_calorieGoalSet
_queue_moveMinuteGoalSet
_queue_exerciseGoalSet
_queue_standGoalSet
_queue_allGoalsLoaded
_queue_primeDailyGoalWithType:
_mostRecentSampleWithType:beforeDate:error:
_queue_resetDailyGoalWithType:
_queue_updateGoalWithSample:
_queue_primeCacheIndices
_queue_primeLocalSource
_queue_primeExistingActivityCaches
_queue_primeDailyGoals
_queue_primeActivityMoveMode
_queue_primeDataSource
_queue_updateWheelchairUse
_queue_saveCaches
_queue_updateHeartRateSummaries
_queue_currentDate
_calculateCacheIndicesWithTodayIndex:yesterdayIndex:tomorrowIndex:todayStart:yesterdayStart:tomorrowStart:calendar:
_queue_deleteActivityCaches:
_queue_resetExistingActivityCaches
_queue_updateDateIntervalsWithExistingActivityCaches
_queue_resetCacheIndices
_queue_resetActivityMoveMode
_queue_resetDataSource
_queue_currentTimeZone
_queue_resetEverything
_queue_updateDailyGoalsWithSamples:
_queue_updateActivityMoveModeWithSamples:
_didReceiveSignificantTimeChangeNotification
_queue_rebuildCachesIfNeededForTimeChange
reportTargetDayHeartRateAnalytics
_userCharacteristicsDidChangeNotification:
_queue_streamSamplesAdded
_queue_registerForSignificantTimeChangeNotification
activityCacheIndex
setCurrentActivityCacheOverrideDate:timeZone:completion:
currentActivityCache
yesterdayActivityCache
accessStatisticsBuilderWithCacheIndex:handler:
timeZoneOverride
setTimeZoneOverride:
_todayActivityCacheIndex
_yesterdayActivityCacheIndex
_tomorrowActivityCacheIndex
_cacheIndicesAreSet
_currentTimeZone
_todayDateInterval
_yesterdayDateInterval
_existingActivityCachesAreSet
_existingYesterdayActivityCache
_existingTodayActivityCache
_todayHeartRateSummary
_yesterdayHeartRateSummary
_localDeviceSourceEntity
_calorieGoalType
_moveMinuteGoalType
_exerciseGoalType
_standGoalType
_allQuantityTypes
_goalsByIndex
_activityMoveModeChangeType
_todayActivityMoveModeChangeSample
_yesterdayActivityMoveModeChangeSample
_activityMoveModeIsSet
_updateCachesOperation
_rebuildCachesOperation
_hasSubscribedToSignificantTimeChangeNotifications
_rebuildCacheNotificationToken
_timeZoneOverride
heartRate_popWithProfileType:
heartRate_outputValueWithRestingHeartRate:
numberWithFloat:
heartRate_reportDailyRestingHeartRate:sedentaryHeartRateCount:filteredSedentaryHeartRateCount:profileType:
_queue_insertRouteData:completion:
_queue_finishRouteWithWorkout:metadata:completion:
_validateRouteData:error:
performIfAuthorizedToSaveObjectTypes:usingBlock:errorHandler:
containsDataObject:
baseDataEntityEncodingOptions
saveSamples:withCompletion:
remote_insertRouteData:completion:
remote_finishRouteWithWorkout:metadata:completion:
server_insertRouteData:completion:
route
setRoute:
_route
appendData:
remote_fetchMedicalIDWithCompletion:
remote_fetchMedicalIDDataIfSetUpOrCreateDefaultWithCompletion:
remote_updateMedicalIDData:lastFetchedMedicalIDData:completion:
remote_deleteMedicalIDDataWithLastFetchedMedicalIDData:completion:
remote_medicalIDEmergencyContactsWithCompletion:
remote_medicalIDClinicalContactsWithCompletion:
remote_badgeHealthAppForEmergencyContactsConsolidationWithCompletion:
_initWithOptions:journalType:cacheScope:assertions:statistics:
_initWithOptions:
_cachedContextForOptions:
statistics
contextForReading
mutableCopyWithZone:
copyForWriting
copyForReadingProtectedData
_applyOptions:enable:
_journalType
_accessibilityAssertions
_statistics
setSkipJournalMerge:
setStatistics:
hasOwnerIdentifier
hasStoreIdentifier
_appendData:entryClass:error:
database_reportJournalEntryInsertedForJournal:entryClass:entrySize:
_mergeTransactionContextWithContext:
_processJournalChaptersWithProfile:
_executeAtomically:
requestTransactionInterruption
_waitIfInterrupted
_mergeJournalChapter:profile:accessibilityAssertion:
_setActiveTransactionAndReturnInterrupted:
_mergeJournalEntries:profile:
_performPostJournalMergeWithVersion:profile:transaction:error:
openObserverTransaction
closeObserverTransaction
_isJournalDatabaseFeatureEnabled
_createNextJournalChapterWithError:
databaseForEntityProtectionClass:
journalDatabaseFeatureEnabled
sizeOnDisk
_unitTesting_closeCurrentJournalChapter
_unitTesting_directoryURL
_unitTesting_setJournalStatusRequiresMerge
setURL:
journalLock
setJournalLock:
currentJournalChapter
setCurrentJournalChapter:
_progressLock
_progressLock_observableProgress
_progressLock_internalProgress
_activeTransactionLock
_activeMergeTransaction
_journalStatus
_interrupted
_lastInsertedEntryClass
_journalLock
_currentJournalChapter
syncWillBegin
syncDidBeginWithProfile:error:
sendChanges:completion:
syncDidFinishWithSuccess:error:
shortSessionIdentifier
databaseAccessibilityAssertion
setDatabaseAccessibilityAssertion:
databaseAccessibilityTimeout
_syncStore
_sessionUUID
_shortSessionIdentifier
_calendar
_reason
_databaseAccessibilityAssertion
_databaseAccessibilityTimeout
_aggregateForState:collector:device:requestedAggregationDate:mode:interval:
azul_addUnprotectedMigrationSteps
azul_addProtectedMigrationSteps
hk_v3UUIDWithNameSpace:name:
deleteDataEntitySubclassTablesIfExist:intermediateTables:error:
setDwelltimeMs:
setHasDwelltimeMs:
hasDwelltimeMs
dismissReason
setDismissReason:
setHasDismissReason:
hasDismissReason
dismissReasonAsString:
StringAsDismissReason:
scrollBehavior
setScrollBehavior:
setHasScrollBehavior:
hasScrollBehavior
scrollBehaviorAsString:
StringAsScrollBehavior:
dwelltimeMs
_dwelltimeMs
_dismissReason
_scrollBehavior
metadataWithTransaction:error:
seriesEntityClass
initWithIdentifier:metadata:entityClass:
frozenIdentifier
_setMetadata:transaction:error:
_frozenIdentifier
_observeDNDWorkoutDefault
_queue_takeQuietModeAssertion
_queue_releaseQuietModeAssertion
requestQuietModeOverrideAssertion
invalidateAssertion
_loadWorkoutDNDDefault
unitTest_setDNDModeAssertionService:
unitTest_setEnableDND:
_enableDNDDuringWorkout
_dndModeAssertionService
_addEntity:row:anchor:provenance:
_sendCurrentCollectionIsFinal:error:
_addCodableRepresentation:encodedSize:anchor:provenance:error:
_provenanceCache
_entityEncoder
_messageHandler
_maxEncodedBytesPerChangeSet
_maxEncodedBytesPerChange
_totalEncodedBytes
_currentEncodedBytes
_lastEntityAnchor
_hasEncodedAnyObject
_didSendFinal
btIdentifierData
base64EncodedStringWithOptions:
setAdvertisementData:
btIdentifier
fitnessMachineType
stringByAppendingString:
_loadState
_queue_setWaitingToRun:
_queue_setIntervalCounter:
_queue_prepareAccessibilityAssertionIfNeeded
taskName
_queue_setLastProcessedDate:
_queue_setLastSubmissionAttemptDate:
_queue_registerActivity
doIfWaitingWithError:
_queue_shouldAttemptToSubmit
_runBlockWithAccessibilityAssertion:error:
_beginWaitingToRun
doIfWaitingOnMaintenanceQueueWithCompletion:
initWithTaskName:keyPrefix:xpcInterval:xpcGraceInterval:requiresClassB:intervalMultiple:maximumAttemptCount:minimumDelayBetweenAttempts:profile:block:
setLastProcessedDate:
lastProcessedDate
lastSubmissionAttemptDate
intervalCounter
doForced
waitingToRun
_waitingToRunKey
_lastSubmissionAttemptKey
_intervalCounterKey
_lastProcessedDateKey
_repeatInterval
_graceInterval
_requiresClassB
_intervalMultiple
_maximumAttemptCount
_minimumDelayBetweenAttempts
_preparedDatabaseAccessibilityAssertion
_waitingToRun
_lastSubmissionAttemptDate
_intervalCounter
_lastProcessedDate
_taskName
_computeAndSubmitDatabaseStatsMetric:
_computeAndSubmitSleepAlarmStatistics:
_computeAndSubmitSleepAlarmDailyReportWithAction:force:
_computeAndSubmitHeartDailyAnalyticsWithAction:force:
_computeAndSubmitFitnessDailyReportWithAction:force:
_computeAndSubmitHealthTypesDifferentialPrivacyMetric
_registerForFitnessDailyCollection
initWithComponentId:
hasHealthDataSubmissionAllowedBeenSet
_queue_updateFitnessDailyCollectionEnabled
isFitnessDailyCollectionEnabled
_actions
setMetric:
submitMetric:
metricId
formattedText
_countOfObjectsWithSQLQuery:database:error:bindingHandler:
valuesForKeys:domain:category:profile:error:
setValuesWithDictionary:domain:category:profile:error:
_int64ForKeyPrefix:profile:date:error:
_setInt64:keyPrefix:profile:date:error:
_updateDeltaToInt64:forKey:profile:currentDate:timeInterval:error:
_serverConnectionForComponentId:
newMetricContainerWithIdentifier:
_updateDatabaseStatsEvent:profile:currentDate:
_objectRowCountWithTransaction:afterRowId:error:
_deletedRowCountWithTransaction:error:
_CDACountWithTransaction:error:
_manuallyEnteredTypesCountWithTransaction:error:
_nonAppleSourcesCountWithTransaction:error:
_nonAppleSourcesWithDataSince:transaction:error:
_hasWatchSourcesWithTransaction:error:
_addRowCountDeltaToEvent:profile:currentDate:
_submitMetric:container:connection:force:
aggregateDatabaseSizeStats:
initWithAnchorDate:intervalComponents:
_initWithAnchorDate:statisticsInterval:
_insertStatistics:
setStatisticsHandler:
_hourlyStatisticsCollectionForStartDate:endDate:quantityType:statisticsOptions:error:
motionToken
_activitySummaryForActivityCacheIndex:error:
setUserToken:
setMonthsSinceFirstWatchUsage:
_exerciseMinuteHoursFromDate:toDate:error:
addStandEventMinutesSinceMidnightRoundedTo10:
_enumerateAppleStandHoursFromDate:toDate:error:handler:
setExerciseMinuteHours:
initWithResultInterval:calendar:
addSleepSamples:
calculateResult
usedAppleBedtimeAlarm
appleBedtime
appleCorrectedBedtime
setBedtimeHour:
setBedtimeMinute:
appleBedtimeCorrection
setBedtimeToCorrectedBedtimeMinutes:
appleFirstSleepInterruption
setBedtimeToFirstSleepInterruptionMinutes:
appleStartOfLongestSleepInterval
setBedtimeToStartOfLongestSleepIntervalMinutes:
appleWaketime
appleTotalInBedTime
setPercentOfDesiredSleep:
appleFinalWakeupTime
setWakeupIsOnWeekday:
deviceForSource:
model
sleepOnsetForSource:
setCorrectedBedtimeToThirdPartySleepOnsetMinutes:
finalWakeupForSource:
setWakeupTimeToThirdPartyWakeupTimeMinutes:
_sleepSamplesBeforeDate:days:startDate:endDate:calendar:
_sleepNightEventFromSamples:startDate:endDate:calendar:
atrialFibrillationEventType
electrocardiogramType
hk_heartRhythmDefaults
algorithmVersionForOnboardingVersion:
updateIrregularRhythmNotificationClassificationCount:
updateIsIrnOnboarded:
updateIsEcgOnboarded:
_ecgAlgorithmVersion
updateECGActiveAlgorithmVersion:
productBuildVersionForDeviceType:
updateECGUpdateVersionPhone:
updateECGUpdateVersionWatch:
_countMobileAssetsDownloadedPast24Hours
updateCountMobileAssetsDownloadedPast24Hours:
updateMobileAssetNamesDownloadedPast24Hours:
_resetMobileAssetsDownloadedPast24Hours
updateIsImproveHealthAndActivityAllowed:
_isTachycardiaDetectionEnabled
updateIsTachycardiaDetectionEnabled:
_isBradycardiaDetectionEnabled
updateIsBradycardiaDetectionEnabled:
activePairedDeviceProductType
updateActiveWatchProductType:
_ecgClassificationsBetweenStartDate:endDate:
updateElectrocardiogramClassificationCount:
_aFibSamplesBetweenStartDate:endDate:
_countRecordedTachogramsBetweenStartDate:endDate:
updateCountRecordedTachogramsPast24Hours:
_countAnalyzedTachogramsPast24Hours
updateCountAnalyzedTachogramsPast24Hours:
_resetCountAnalyzedTachogramsPast24Hours
updateECGOnboardingCountryCode:
updateIRNOnboardingCountryCode:
_countActiveEnergySamplesBetweenStartDate:endDate:
updateWasWatchWornPast24Hours:
updateWeeksSinceElectrocardiogramOnboardedWithFirstOnboardingCompletedDate:
updateWithElectrocardiogramClassifications:
_generateHeartDailyAnalyticsWithStartDate:endDate:
submit
setMean:
setStddev:
setMedian:
setPercentile25:
setPercentile75:
hk_oneDay
arrayByCoalescingObjects:startDate:intervalComponents:calendar:combiningBlock:
appleBedtimeDeltaFromSleepDayStart
keysSortedByValueUsingComparator:
_statisticsForTimeDeltas:
_sleepConsistencyEventForMonthPriorToDate:calendar:
updateFitnessDailyCollectionEnabled
runTask:error:
resetTask:
testHandler
setTestHandler:
_serverConnectionsByComponentId
_fitnessDailyAction
_started
_fitnessDailyCollectionEnabledNotifyToken
_testHandler
sampleEnumerator
_firstAppleInBedSample
_correctedDateFromDate:dateInterval:calendar:
allSamples
_lastEndDateInSampleArray:
initWithDateInterval:inBedSamplesBySource:calendar:
_inBedSamplesBySource
setSortDescriptor:
_categorySampleBufferForSource:
insertSamples:
_resultInterval
client_deliverData
_columnNameAndTypeString
initWithName:columnType:keyPathType:
initWithName:columnType:keyPathType:targetEntityClass:targetProperty:deletionAction:
columnType
keyPathType
foreignKey
_keyPathType
_columnType
_foreignKey
addReferenceRanges:
referenceRangesCount
clearReferenceRanges
referenceRangesAtIndex:
referenceRangesType
hasCodings
_codings
_emet_addSchemaColumnToSyncAnchorTableWithError:
_emet_dropSubscriptionDataAnchorsTableWithError:
_emet_recreateClinicalHealthRecordsTablesWithError:
_emet_migrateWorkoutEventMetadataToProtobufWithError:
_emet_updateFHIRIdentifierNullabilityAddQuantityDispensedWithError:
_emet_updateProcedureTableWithError:
_emet_updateDiagnosticTestResultSamplesTable:
_emet_updateFHIRResourcesAndLastSeenTable:
_emet_updateMedicationSamplesTablesWithError:
_emet_addPatientHashtoClinicalAccountsTable:
_emet_removeTigrisClinicalHealthRecordsTablesWithError:
_emet_createEmetClinicalHealthRecordsTablesWithError:
_recreateMedicalRecordTable:intermediateTables:creationSQL:error:
_insertDeletedSampleTombstoneWithUUID:provenanceIdentifier:dataTypeCode:deletionDate:error:
_insertDeletedObjectTombstoneWithUUID:provenanceIdentifier:deletionDate:insertedRowID:error:
emetUnprotectedMigrationSteps
emetProtectedMigrationSteps
_deleteAssociatedObjectsForPersistentID:entityClass:deletionDate:error:
populateSyncInfoForObjectID:database:localSourceIDOut:externalSyncObjectCodeOut:syncIdentifierOut:syncVersionOut:deletedOut:errorOut:
_startAndEndDatesForSampleWithPersistentID:startTimestampOut:endTimestampOut:database:error:
_deletedObjectWithUUID:metadata:
_provenanceIDForDeletedObjectWithOriginalProvenanceID:error:
insertDeletedObject:dataType:provenanceIdentifier:deletionDate:persistStartAndEndDates:startTimestamp:endTimestamp:inDatabase:error:
insertSyncIdentifierWithProfile:database:objectID:localSourceID:externalSyncObjectCode:syncIdentifier:syncVersion:deleted:errorOut:
_localSourceIDForSourceID:error:
recursiveDeleteAuthorizationBlock
insertDeletedObjects
preserveStartAndEndDates
setPreserveStartAndEndDates:
callWillDeleteFromDatabase
_deleteStatementsByClassName
_deletedObjectProvenanceIDsByOriginalProvenanceID
_localSourceIDsByOriginalSourceID
_deletedObjectTypeSet
_startAndEndDatesSQL
_deleteInfoSQL
_insertDeletedObjects
_preserveStartAndEndDates
_callWillDeleteFromDatabase
_recursiveDeleteAuthorizationBlock
_lastInsertedDeletedObjectPersistentID
_deletedObjectCount
hasPrescriber
setHasNumberOfFills:
hasNumberOfFills
hasWrittenDate
hasEndedDate
hasReasonCodings
hasReasonEndedCodings
_numberOfFills
_endedDate
_prescriber
_reasonCodings
_reasonEndedCodings
_writtenDate
insertValues:series:profile:error:
_notifyForValues:series:anchor:journaled:
freezeSeriesWithIdentifier:metadata:endDate:profile:error:
setGenerateDeletedObjects:
setFailIfNotFound:
_observersForType:
quantitySeriesDatas
transactionalQuantityInsertHandlerForProfile:journaled:count:
profile:didDiscardSeriesOfType:
timeInterval
discardSeries:error:
samplesAdded:type:anchor:
addObserver:forType:queue:
removeObserver:forType:
_observerLock_observersByType
_observerLock
hd_defaultService
initWithProcessStateManager:openApplicationService:
listenerEndpointForClient:error:
_alertSuppressor
_appLauncher
_backgroundWorkoutRunner
_carouselServicesManager
_coreMotionWorkoutInterface
_heartRateRecoveryManager
_powerSavingModeManager
_quietModeManager
applicationsUninstalledNotification:
_queue_setAuthorizationStatuses:authorizationModes:forBundleIdentifier:options:completion:
_authorizationRequestStatusForClientBundleIdentifier:writeTypes:readTypes:updateAuthorizationStatuses:error:
isClinicalType
authorizationRecordsByTypeForBundleIdentifier:types:profile:error:
readingEnabled
_queue_enqueueAuthorizationRequestWithIdentifier:bundleIdentifier:writeTypes:readTypes:authorizationNeededHandler:completion:
setPromptHandler:
addCompletion:
_queue_handleNextAuthorizationRequestGroup
_queue_cancelAuthorizationRequestsWithIdentifiers:
_queue_beginAuthorizationDelegateTransactionWithSessionIdentifier:completion:
_queue_endAuthorizationDelegateTransactionWithSessionIdentifier:error:
_queue_resetAllAuthorizationRecordsWithCompletion:
applicationProxyForIdentifier:placeholder:
cancelRequestsWithIdentifiers:error:
initWithBundleID:
initWithRequestRecord:requestSentHandler:requestFinishedHandler:
didRecieveShouldPrompt
shouldPromptError
setDidRecieveShouldPrompt:
setShouldPromptError:
requestFinishedHandler
_queue_resetAuthorizationRecordsForBundleIdentifier:error:
isCompatibleStatus:
setAuthorizationStatuses:authorizationRequests:authorizationModes:sourceEntity:options:profile:error:
_performNanoSyncImmediatelyWithReason:
_reportAuthorizationChangeForBundleIdentifier:
_updateSourceOrderWithAuthorizationStatuses:forBundleIdentifier:
hk_filterKeysWithBlock:
initWithIdentifier:typesToWrite:typesToRead:completionHandler:
initWithSource:
addRequest:
requestCount
typesToWrite
typesToRead
hk_setByUnioningSet:otherSet:
authorizationRecord
requestedSharing
requestedReading
parentType
deniedReading
deniedSharing
isAuthorizationDetermined
transactionContextForWriting:baseContext:
promptHandler
_queue_requestGroupDidFinishPrompting:error:
promptIfNecessaryWithTimeout:completion:
_validateRequiredAuthorizationWithRequestGroup:
finishRequestsWithError:
objectForInfoDictionaryKey:
_objectTypesFromIdentifierArray:error:
hasRequiredAuthorizationStatusesForBundleIdentifier:requiredReadTypes:error:
beginPromptTransactionWithCompletion:
promptSessionIdentifier
isInTransaction
endPromptTransactionWithSuccess:error:
resetAllAuthorizationStatusesWithProfile:error:
resetAllObjectAuthorizationRecordsForProfile:error:
authorizationChangedForBundleIdentifier:
initForSamples:completion:
authorizationRecordsForSamples:sourceEntity:profile:error:
setAuthorizationRecords:
initWithBundleIdentifier:profile:
_queue_activePromptSessionForBundleIdentifier:
beginPromptSessionWithCompletion:
sessionDescriptor
timeoutExpired
setAuthorizationStatuses:authorizationModes:forBundleIdentifier:options:completion:
authorizationRequestStatusForClientBundleIdentifier:writeTypes:readTypes:error:
handleAuthorizationRequestsForBundleIdentifier:promptHandler:completion:
cancelAuthorizationRequestsWithIdentifiers:
beginAuthorizationDelegateTransactionWithSessionIdentifier:completion:
endAuthorizationDelegateTransactionWithSessionIdentifier:error:
requestRemoteAuthorizationForRequestRecord:requestSentHandler:completion:
enqueueObjectAuthorizationRequestForBundleIdentifier:samples:promptIfNeeded:authorizationNeededHandler:completion:
handleObjectAuthorizationRequestsForBundleIdentifier:promptHandler:completion:
completionQueue
setCompletionQueue:
requestGroupsByBundleIdentifier
setRequestGroupsByBundleIdentifier:
pendingRequestGroups
setPendingRequestGroups:
promptingRequestGroup
setPromptingRequestGroup:
pendingObjectAuthorizationRequestsByBundleIdentifier
setPendingObjectAuthorizationRequestsByBundleIdentifier:
activeObjectPromptSessionsBySessionIdentifier
setActiveObjectPromptSessionsBySessionIdentifier:
suppressAuthorizationPrompt
setSuppressAuthorizationPrompt:
requestSessionTimeout
setRequestSessionTimeout:
_openAppCompletionHandlersByBundleID
_remoteAuthorizationRecordsByBundleID
_suppressAuthorizationPrompt
_completionQueue
_requestGroupsByBundleIdentifier
_pendingRequestGroups
_promptingRequestGroup
_pendingObjectAuthorizationRequestsByBundleIdentifier
_activeObjectPromptSessionsBySessionIdentifier
_requestSessionTimeout
invokeCompletionHandlerWithSuccess:error:
_typesToWrite
_typesToRead
initWithSource:session:readTypes:writeTypes:
_cancelTimeoutSource
requests
setRequests:
completions
setCompletions:
sessionTimeoutSource
setSessionTimeoutSource:
setInTransaction:
_inTransaction
_requests
_completions
_sessionTimeoutSource
_promptSessionIdentifier
_promptHandler
invokeCompletionWithSuccess:sourceEntity:profile:error:
invokeCompletionHandlerWithAuthorizedSamples:error:
samplesRequiringAuthorization
samples
authorizationRecords
_samples
_authorizationRecords
initForBundleIdentifier:samples:sessionIdentifier:
sessionCompletion
setSessionCompletion:
_didStartTransaction
_sessionCompletion
_requestFinishedHandler
setRecords:
_didRecieveShouldPrompt
_bundleID
_shouldPromptError
objectTypes
databaseChangesQueryConfiguration
sampleTypes
_queue_changesByTypeWithDatabase:sinceAnchor:error:
_queue_deliverQueryAnchor:sampleTypeChanges:
_authorizedObjectTypes
includeChangeDetails
_queue_sampleTypeCodesWithUnfrozenSeriesWithAuthorizedTypes:database:error:
_initWithSampleType:startTime:endTime:hasUnfrozenSeries:queryStrategy:
_queue_queryStrategyForType:sinceAnchor:currentAnchor:
_queue_detailedChangeUsingAnchorIndexStrategyForType:sinceAnchor:hasUnfrozenSeries:database:error:
_queue_detailedChangeUsingDateIndexStrategyForType:sinceAnchor:hasUnfrozenSeries:database:error:
changeDetailsQueryStrategy
anchorStrategyChangeCountLimit
isMaximumDurationRestricted
maximumAllowedDuration
_queue_addPendingChangesForSample:
_extendDateIntervalWithSample:
client_deliverQueryAnchor:sampleTypeChanges:queryUUID:
_pendingSampleTypeChanges
_detailsQueryDateIndexSQL
_detailsQueryAnchorIndexSQL
setShareURL:
setToken:
hasShareURL
hasToken
shareURL
token
_shareURL
_token
initInZone:disabledOwnerIdentifiers:
initWithCKRecord:disabledOwnerIdentifiers:schemaVersion:
isMasterRecord:
isMasterRecordID:
initInSyncCircle:disabledOwnerIdentifiers:
hk_featureUnavailableForProfileError
remote_fetchNanoSyncPairedDevicesWithCompletion:
remote_forceNanoSyncWithOptions:completion:
remote_resetNanoSyncWithCompletion:
remote_waitForLastChanceSyncWithDevicePairingID:timeout:completion:
supportsSpeculativeNanoSyncChanges
nanoSyncObjectType
supportedNanoSyncDirectionsForProtocolVersion:
setHasEnergyBurned:
setHasBriskMinutes:
setActiveSeconds:
setHasActiveSeconds:
hasActiveSeconds
setHasEnergyBurnedGoal:
setEventTimestamp:
setHasEventTimestamp:
hasEventTimestamp
setHasBiologicalSex:
hasBiologicalSex
setHasHeight:
setHasWeight:
setAge:
setHasAge:
hasAge
activeSeconds
eventTimestamp
_eventTimestamp
_activeSeconds
_age
_briskMinutes
_energyBurned
_energyBurnedGoal
_lock_enumerateActiveAssertionsWithIdentifier:handler:
assertions
initWithAssertionIdentifier:
_lock_consumeBudgetsThenResetTimerWithIntermediateBlock:
_postNotification:forAssertion:
_lock_resumeBudgetConsumption
_lock_suspendBudgetConsumption
objectEnumerator
_lock_releaseAssertion:
_lock_setBudgetConsumptionTimerWithStartTime:
_lock_consumeBudgetsThroughTime:
_budgetConsumptionTimerDidFire
hasActiveAssertionForIdentifier:
allAssertionsForIdentifier:
ownerIdentifiersForAssertionIdentifier:
removeObserver:forAssertionIdentifier:
assertionExpirationQueue
_notificationQueue
_assertionRecordsByIdentifier
_observerSetsByAssertionIdentifier
_consumeBudgets
_budgetConsumptionTimer
_assertionExpirationQueue
_assertions
nextEnvironmentalAudioExposureSampleTime
didGenerateEnvironmentalAudioExposureSamples
nextHeadphoneAudioExposureSampleTime
didGenerateHeadphoneAudioExposureSamples
lastHeadphoneSampleEndDate
lastEnvironmentalSampleEndDate
_generateEnvironmentalAudioExposureSamplesForDemoPerson:atTime:sampleDate:objectCollection:
_generateHeadphoneAudioExposureSamplesForDemoPerson:atTime:sampleDate:objectCollection:
setDidGenerateEnvironmentalAudioExposureSamples:
decibelAWeightedSoundPressureLevelUnit
_makeNormallyDistributedAudioExposureLevelsWithCount:headphones:loudData:
_makeEnvironmentalSamplesWithType:rawSampleValues:sampleUnit:initialSampleDate:sampleDuration:distanceBetweenSamples:
setNextEnvironmentalAudioExposureSampleTime:
setLastEnvironmentalSampleEndDate:
setDidGenerateHeadphoneAudioExposureSamples:
_makeQuantitySeriesSamplesWithType:rawSampleValues:sampleUnit:initialSampleDate:sampleDuration:distanceBetweenSamples:demoPerson:
_makeHeadphoneSamplesWithType:rawSampleValues:sampleUnit:initialSampleDate:sampleDuration:distanceBetweenSamples:demoPerson:
setNextHeadphoneAudioExposureSampleTime:
setLastHeadphoneSampleEndDate:
_allPossibleAudioExposureLevels
_randomlySelectedAudioExposureLevelFromPossibleValues:
_randomlySelectedGaussianWithMean:deviation:
_headphoneProvenanceWithPerson:
_headphoneAudioExposureMetadata
_makeQuantitySampleWithType:value:unit:startDate:endDate:metadata:
_makeAlertSampleWithStartDate:endDate:value:limit:
datumWithTimestamp:value:duration:
_makeAirPods
_makeEarPods
_makeBeatsHeadphones
_makeUnknownHeadphones
currentOSVersionStruct
_dateComponentsByAddingHours:toDate:
_didGenerateEnvironmentalAudioExposureSamples
_didGenerateHeadphoneAudioExposureSamples
_nextEnvironmentalAudioExposureSampleTime
_lastEnvironmentalSampleEndDate
_nextHeadphoneAudioExposureSampleTime
_lastHeadphoneSampleEndDate
unitTest_fakeStatusUpdateForState:
_machineState
hasBundleIdentifier
hasProductType
setHasOptions:
hasOwningAppBundleIdentifier
keyForNotificationDomain:error:
badgeFromKeyValueRepresentation:
keyValueRepresentation
badgeForDomain:profile:error:
setBadge:forDomain:profile:error:
_eventWithDeviceProperties
_pushMedicalIDRecordToCloudForContainer:database:
setRecordsToSave:
setCloudMedicalIDData:
medicalIDDataToPush
setMedicalIDDataToPush:
setMedicalIDRecord:
_medicalIDDataToPush
initWithOwnerIdentifier:processBundleIdentifier:
keepaliveTimer
setKeepaliveTimer:
_keepaliveTimer
_queue_clearSuppressionTimerForAssertion:
_queue_suppressActivityAlertsForProcessIdentifier:
_queue_startAlertSuppressionTimerForProcessIdentifier:
_queue_invalidateSuppressActivityAlertsForProcessIdentifier:
suppressActivityAlertsForIdentifier:suppressionReason:timeoutUntilDate:
invalidateActivityAlertSuppressionForIdentifier:
_invalidateSuppressActivityAlertsForSuspendedProcess:
_waitingForSuspension
_queue_abortSensorSession
_queue_startWithCompletion:
_queue_abortWithCompletion:
_queue_notifyClientDidEndWithEndReason:error:
clientRemote_didDetectContactAtDate:
clientRemote_didEndWithReason:error:
clientRemote_didDetectEmergencyCallbackModeWithEndDate:
remote_startWithCompletion:
remote_abortWithCompletion:
_queue_notifyClientDidDetectContactAtDate:
_queue_notifyClientDidDetectEmergencyCallbackModeWithEndDate:
_sessionState
writeaheadLogURLForHFDAt:
fileSystemPath
copyItemAtURL:toURL:error:
temporaryHFDURL
prepareTemporaryHFDAtURL:error:
azul_validWorkoutIdentifiersWithError:
azul_validQuantitySampleSeriesIdentifiersWithError:
moveTemporaryHFDAtURL:toPermanentLocationWithError:
migrateSamplesFrom:to:usingHandler:identifiers:error:
rebuildHFDIndexWithError:
azul_rebuildHFDStep1WithError:
azul_rebuildHFDStep2WithError:
initWithDatabaseIdentifer:deviceIdentifier:ownerDifferentiator:
fetchCurrentDeviceIDWithCompletionHandler:
_databaseUUIDForProfile:error:
deviceIDForContainer:profile:error:
supportsRebase
_canRollOwnerIdentifierForProfile:
_rollOwnerDifferentiatorForProfile:reason:error:
cloudSync_reportOwnershipChangeForProfile:reason:
unitTest_ownerIdentifierWithDatabaseIdentifer:deviceIdentifier:ownerDifferentiator:
_databaseIdentifier
_ownerDifferentiator
_ownerIdentifierString
initWithProfile:clientIdentifier:eventHandlerQueue:
_queue_alarm:didReceiveDueEvents:
_queue_showAlertIfRequiredForDueEvents:error:
_queue_clearDueEvents:
removeEvents:error:
allScheduledEventsWithError:
allScheduledEvents:
_shouldEnableTransparencyAlertsWithError:
initWithNotificationManager:guardianFirstName:lastName:
_queue_scheduleEventIfRequiredForDateComponents:eventIdentifier:error:
_shouldScheduleTransparencyAlertsWithError:
eventWithIdentifier:dueDateComponents:eventOptions:
scheduleEvents:error:
_queue_scheduleTransparencyAlertIfRequiredForBirthdate:error:
_unitTest_didReceiveDueEvents:
allScheduledDueDates:
_unitTest_scheduleTransparencyAlertIfRequiredForBirthdate:error:
set_unitTest_currentDate:
_unitTest_scheduledBirthdayTransparencyAlertComponents
__unitTest_currentDate
__unitTest_scheduledBirthdayTransparencyAlertComponents
clearChanges
changesAtIndex:
changesType
setChanges:
_changes
setSensorLocation:
_sensorLocation
_authorizationPublisher
_queue_startWatchAppWithWorkoutConfiguration:client:completion:
_sendStartWorkoutAppResponse:error:
_startWatchAppWithWorkoutConfiguration:client:completion:
_receivedStartWorkoutAppRequest:completion:
initWithPathname:
lowercaseString
getDataForCurrentEntryWithMaxSizeBytes:
CDADocumentSampleWithData:startDate:endDate:metadata:validationError:
_launchCountResetThresholdForDelay:maxLaunchCount:base:
_queue_assertionsForClientBundleIdentifier:
payloadOptions
launchCount
initWithOwnerIdentifier:clientBundleIdentifier:payloadOptions:
setLaunchCount:
setLastLaunchAttempt:
_queue_launchClientIfNeeded:
clientBundleIdentifier
_queue_clientRequiresLaunch:assertions:
_queue_scheduleLaunchForClient:
unitTest_setBaseLaunchDelay:launchCountResetThreshold:maxLaunchCount:
unitTest_hasAssertionForBundleIdentifier:
_openApplicationService
_registeredAssertionsByIdentifier
_monitoredProcessBundleIdentifiers
_launchingProcessBundleIdentifiers
_launchCountResetThreshold
_baseLaunchDelay
_maxLaunchCount
_launchCount
_clientBundleIdentifier
_payloadOptions
foodSampleGenerator
bloodAlcoholContentForDemoPerson:atTime:
_computeNumDrinksTodayForDemoPerson:atTime:
computeBloodAlcoholContentForNumDrinks:elapsedTime:weight:sex:
nextBloodAlcoholContentSampleTime
setNextBloodAlcoholContentSampleTime:
_nextBloodAlcoholContentSampleTime
ordinalityOfUnit:inUnit:forDate:
_submitJSONAnalyticsData:bugType:customDirectory:configuration:error:
_cleanAnalyticsDirectory:error:
_createAndCleanAnalyticsDirectoryWithError:
_serializeAnalyticsData:errorOut:
_loadCertificateWithError:
initWithChannel:payloadType:certificate:
setPayloadIdentifier:
_encryptAnalyticsData:withConfig:error:
dataWithJSONObject:options:error:
newOutputFileURL
initWithConfiguration:
startWithOutputFileURL:error:
appendData:error:
finalizeWithError:
_createAnalyticsDirectory:error:
fileAttributes
_payloadIdentifierForBugType:
submitJSONAnalyticsData:bugType:error:
submitJSONAnalyticsData:toDirectory:withConfiguration:error:
URLForAnalyticsFileWithName:
analyticsFilePathsWithError:
_certificate
_analyticsDirectory
enumerateSnapshotsWithPredicate:anchor:profile:error:handler:
setSnapshotUploadedDate:
preparedDatabaseAccessibilityAssertion
numberWithUnsignedLong:
persistedStoreUUIDsForProfile:error:
cloudSync_reportDailyAnalyticForProfileType:syncEnabled:syncDisabledError:primaryContainer:restoreComplete:timeSinceRestoreStart:journalSize:timeSinceLastSuccessfulPull:timeSinceLastSuccessfulPush:timeSinceLastPushForwardProgress:storeCount:zoneCount:hasUnifiedZone:hasMasterZone:hasMedicalID:errorRequiringUserAction:
cloudSyncRepositoriesWithCompletion:
_queue_updateAccessibilityAssertion
setExcludedSyncStores:
subContextByAddingOptions:
_updateDataUploadRequestStatus:
cloudDescription
setRunWhenSyncProhibited:
startWithCompletion:
fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:
queue_cloudSyncRepositoriesWithCompletion:
hd_syncCircleIdentifier
_errorForNilProfile
_syncCircleIdentifierForProfile:error:
_containerWithIdentifier:error:
_containerIdentifiersForCurrentAccountWithCompletion:
containerWithIdentifier:
setUseZoneWidePCS:
setApplicationBundleIdentifierOverride:
_tinkerContainerIdentifiersWithCompletion:
_primaryContainerIdentifiersForCurrentAccountWithCompletion:
isManateeEnabledForHSA2Accounts
_containerIdentifiersWithEncryptionSupportEnabled:accountManateeEnabled:internalSettingManateeEnabled:resultHandler:
setPreparedDatabaseAccessibilityAssertion:
_persistErrorRequiringUserAction:
hd_cloudKitErrorRequiringUserAction
_queue_considerStartingBackstopSyncForThreshold:
persistedMostRecentLastSyncDateForProfile:error:
_isValidOwnerParticipant:
setShareOwnerParticipant:error:
setRequiredZoneDeviceMode:
setParticipantsToRemove:
setRemoveAllParticipants:
_removeParticipants:fromSharesWithCompletion:
setShouldFetchSubscriptions:
_subscribeToSubscriptions:completion:
serverPreferredPushEnvironmentWithCompletionHandler:
lastPushForwardProgressDate
didCompleteSuccessfulPullOfUpdateWithDate:
_addFinalProgressUpdateWithTaskTree:progress:
removeAllParticipantsFromSharesWithCompletion:
lookupParticipantWithIdentityLookUpInfo:completion:
requestDataUploadWithCompletion:
unitTest_setSupportsRebase:
inProgressSyncCount
setInProgressSyncCount:
_lock_lastDataUploadRequestStartDate
_lock_lastDataUploadRequestCompletionDate
_lock_uploadRequestStatus
_supportsRebase
_inProgressSyncCount
querySortDescriptors
sqlitePredicate
predicate
andPredicateWithSubpredicates:
hk_filterRepresentationForDataTypes:
compoundFilterWithFilter:otherFilter:
sortedQueryAnchorWithSortDescriptors:
_enumeratorWithProfile:sampleQueryDescription:anchor:limit:error:
enumerateIncludingDeletedObjects:error:handler:
canRelax
sortedQueryAnchorRelaxingConstraintsWithAnchor:error:
_fetchRegistryRecordsForContainer:database:
_registryRecordsToFetchForContainer:database:
_fetchRegistryRecords:container:database:
_receivedLimitExceededError:fetchingRegistryRecords:container:database:
hd_isManateeIdentityLossError
_recordIdentityLossForPartialError:container:
_synchronizeProfilesForFetchedRegistryRecords:container:database:
_synchronizeProfileForRegistryRecord:share:container:database:
hd_profileIdentifierWithSyncCircleIdentifier:
_shouldSynchronizeProfileType:
_shouldStoreOwnerParticipantForProfileType:
_storeOwnerParticipantForProfile:share:zoneID:
_registryFetchDidFinish
_zoneDeletionDidFinish
_registryFetchTaskGroup
_zoneDeletionTaskGroup
_zonesWithIdentityLossByContainer
hasSchema
setHasIdentifier:
_schema
setDelegate:queue:
syncRestriction
_typeStringForSyncSession:
pairedDevice
_queue_didSendRestoreMessagesForSession:error:
_queue_didFinishRestoreForSession:error:
syncDidCompleteSending
syncDidFailWithError:
syncDidComplete
_queue_pairedSyncDidStartWithSession:
_syncRestrictionString
syncSessionType
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
syncCoordinator
pairedSyncCoordinator
setPairedSyncCoordinator:
unfinishedSyncSessions
setUnfinishedSyncSessions:
_pairedSyncCoordinator
_unfinishedSyncSessions
_watchKitAvailabilityFilterForSampleType:
initWithConfiguration:cloudState:zoneOwner:
_zoneOwner
taskServerIdentifier
ontologyManager
currentExecutionState
versionWithError:
conceptForIdentifier:loadRelationships:error:
relationshipsForConceptWithIdentifier:error:
makeAssociationFromSampleUUID:toConcept:error:
breakAssociationFromSampleUUID:toConcept:error:
countOfConceptsAssociatedWithUserRecords:
hd_unitTesting_closeDatabase
ignoreOntologyVersionCheckDuringReferenceOntologyImport
setIgnoreOntologyVersionCheckDuringReferenceOntologyImport:
importUsingAssetAtLocation:rememberLocation:completion:
clientRemote_conceptIndexManagerDidChangeState:
ontologyManagerReferenceOntologyWillUpdate:
ontologyManagerReferenceOntologyFinishedUpdate:success:error:
ontologyManagerReferenceOntologyCreated:
remote_testTaskServerWithCompletion:
remote_currentIndexingState:
remote_ontologyVersionWithCompletion:
remote_queryConceptByIdentifier:loadRelationships:completion:
remote_queryRelationshipsForNodeWithID:completion:
remote_makeAssociationFromSample:toConcept:completion:
remote_breakAssociationFromSample:toConcept:completion:
remote_cleanUpAfterUnitTestWithCompletion:
remote_queryCountOfConceptsAssociatedToUserRecordsWithCompletion:
remote_resetOntologyUsingAssetAtLocation:rememberLocation:completion:
_getIdentifierAndCreationDate:error:
_faultCachedProperties
_clearCachedProperties
_appendData:entryClass:database:error:
_createDatabaseConnectionWithURL:
_openDatabase:error:
_hasEmptySchemaWithError:
_keyValueDomainForProfile:
valuesForKeys:error:
_enumerateEntriesInDatabase:anchor:enumeratedBytesThreshold:error:handler:
_validateOrCreateSchemaForDatabase:error:
_readSchemaVersionForDatabase:error:
_createSchemaForDatabase:error:
_getIDForString:database:error:
_insertData:osBuildStringID:classNameStringID:database:error:
_maxEntryAnchorInDatabase:error:
resourceValuesForKeys:error:
getIdentifierAndCreationDate:error:
unitTesting_underlyingDatabase
setUnitTesting_underlyingDatabase:
unitTesting_setEnumeratedBytesThreshold:
unitTesting_keyValueDomainOverride
setUnitTesting_keyValueDomainOverride:
unitTesting_didCreateDatabaseConnectionHandler
setUnitTesting_didCreateDatabaseConnectionHandler:
_size
_enumeratedBytesThreshold
_unitTesting_keyValueDomainOverride
_unitTesting_didCreateDatabaseConnectionHandler
setManufacturer:
setModel:
setHardwareVersion:
setFirmwareVersion:
setSoftwareVersion:
setLocalIdentifier:
setFDAUDI:
hasManufacturer
hasModel
hasHardwareVersion
hasFirmwareVersion
hasSoftwareVersion
hasLocalIdentifier
hasFDAUDI
setHasCreationDate:
hasCreationDate
hardwareVersion
firmwareVersion
softwareVersion
fDAUDI
_fDAUDI
_firmwareVersion
_hardwareVersion
_localIdentifier
_manufacturer
_model
_softwareVersion
_setDiagnosticTestCodings:
_setReferenceRanges:
_setCategory:
_setInterpretationCodings:
_setComments:
_setBodySiteCodings:
_setMethodCodings:
initWithBundleIdentifier:
sharedMonitorForDisplayType:
launchWorkoutAppIfNeededWithFitnessMachineSessionUUID:
initWithFirstPartyWorkoutApp
appIsActive
_appIsActive
elements
displayBacklightLevel
monitorDidDetectAppActivate:
monitorDidDetectAppDeactivate:
layoutMonitor:didUpdateDisplayLayout:withContext:
layoutMonitor:didUpdateDisplayLayout:
_zone
_storeRecord
createProfileOfType:displayName:error:
client_remoteDidUpdateProfileList
remote_createProfileOfType:displayName:completion:
remote_deleteProfile:completion:
remote_getAllProfilesWithCompletion:
remote_profileIdentifierForNRDeviceUUID:completion:
remote_profileIdentifierForNRDeviceUUID:ownerAppleID:completion:
remote_fetchDisplayNameWithCompletion:
remote_setDisplayFirstName:lastName:completion:
remote_fetchDisplayImageData:
remote_setDisplayImageData:completion:
remote_startObservingWithCompletion:
profileListDidChange
sampleQueryDescriptions
client_deliverSampleCountDictionary:forQuery:
_sampleQueryDescriptions
hd_deviceForIDSDeviceUniqueID:
getPairedDevices
hd_deviceForIDSDevice:
devices
_mockDeviceWithNRDevice:
deviceForFromID:
serviceIdentifier
setPersistentPairingUUID:
setHealthPairingUUID:
messageWithSyncStore:
setAnchor:forSyncEntity:
isSpeculative
setObjects:syncAnchorRange:requiredAnchorMap:
setSequenceNumber:done:
requiredAnchorMapWithProfile:error:
decodedObjectsForProfile:error:
_addChanges:
setSessionUUID:
setSessionStartDate:
setSessionError:
decodedSessionUUID
decodedSessionStartDate
decodedSessionError
anchorForSyncEntityClass:
setActivationRestore:
_requestWithMessageID:message:syncStore:
setChangeSet:
copyPersistentUserInfo
persistentUserInfo
messageFromPersistentUserInfo:
addToPersistentUserInfo:
retreiveFromPersistentUserInfo:
copyForPersistentUserInfo
persistentUserInfoKey
typesToReadsCount
typesToReadAtIndex:
_objectTypeForCode:
typesToWritesCount
typesToWriteAtIndex:
typesRequiringReadAuthorization
addTypesToRead:
typesRequiringShareAuthorization
addTypesToWrite:
observeUnfrozenSeries
_deliverDataWasUpdatedWithAnchor:
client_dataUpdatedInDatabaseWithAnchor:query:
profile:didInsertQuantity:type:dateInterval:series:anchor:
_deliverOnUnlock
_observeUnfrozenSeries
_initWithContributorType:persistentID:uuid:
decodeIntForKey:
_contributorType
application
setApplication:
setHasApplication:
hasApplication
applicationAsString:
StringAsApplication:
_application
processSamplesWithLimit:countOfSamplesProcessed:error:
_updateConceptIndexWithBlockDispatcher:conceptIndexer:batchSize:initialCount:completion:
updateConceptIndexWithCompletion:
resetWithError:
medicalRecordTypesWithOptions:
stopWithDescription:
updateWithDescription:
setEnabled:completion:
initWithBlockDispatcher:batchSize:profile:
resetWithReindex:completion:
startWithDescription:
conceptIndexer
_dispatcher
_isEnabled
_observerSet
_completionBlocks
_executionStateLock
_executionState
_conceptIndexer
isEqualToArray:
clearAllSyncAnchorsWithError:
shouldLogAtOperationEnd
setCriticalFailureOnError:
_criticalFailureOnError
_expectedSendSize
_expectedReceiveSize
serviceWithDefaultShellEndpoint
optionsWithDictionary:
openApplication:withOptions:completion:
canOpenApplication:reason:
hd_canOpenApplication:reason:
_touchSyncAnchorWithProfile:shouldIncrement:error:
_getCurrentSyncAnchorWithProfile:error:
_setSyncAnchor:profile:error:
getSyncProvencanceOfMedicalIDForProfile:error:
_codableFromMedicalID:
_medicalIDFromCodable:
initForSchema:toVersion:requiringVersion:foreignKeys:handler:
migrationHandler
finalSchemaVersion
foreignKeyStatus
setForeignKeyStatus:
requiredPrimarySchemaVersion
_migrationHandler
_finalSchemaVersion
_foreignKeyStatus
_schemaName
_requiredPrimarySchemaVersion
totalAchievementCount
setTotalAchievementCount:
setHasTotalAchievementCount:
hasTotalAchievementCount
totalAchievementCountAsString:
StringAsTotalAchievementCount:
setMoreThanOneYearSinceActivitySetup:
setHasMoreThanOneYearSinceActivitySetup:
hasMoreThanOneYearSinceActivitySetup
totalOTAAchievementCount
setTotalOTAAchievementCount:
setHasTotalOTAAchievementCount:
hasTotalOTAAchievementCount
totalOTAAchievementCountAsString:
StringAsTotalOTAAchievementCount:
totalOTAAchievementViewedCount
setTotalOTAAchievementViewedCount:
setHasTotalOTAAchievementViewedCount:
hasTotalOTAAchievementViewedCount
totalOTAAchievementViewedCountAsString:
StringAsTotalOTAAchievementViewedCount:
moreThanOneYearSinceActivitySetup
_totalAchievementCount
_totalOTAAchievementCount
_totalOTAAchievementViewedCount
_moreThanOneYearSinceActivitySetup
_typePredicate:
_tableNamePredicate:
queryWithDatabase:type:
queryWithDatabase:type:tableName:
queryWithDatabase:types:tableName:
_namePredicate:
typeWithDatabase:
nameWithDatabase:
tableNameWithDatabase:
SQLWithDatabase:
initWithMaintenanceWorkCoordinator:
initWithPrototype:currentDemoDataTime:
indoor
setIndoor:
setKcalRate:
setDistanceWalkingRateInMiles:
setDistanceCyclingRateInMiles:
distanceSwimmingRateInYards
setDistanceSwimmingRateInYards:
setDistanceSwimmingSegmentInYards:
setNumSwimmingSegments:
setSwimmingNumLapsPerSegment:
setSwimmingSwimSegmentTime:
setSwimmingRestSegmentTime:
_indoor
_kcalRate
_distanceWalkingRateInMiles
_distanceCyclingRateInMiles
_distanceSwimmingRateInYards
_distanceSwimmingSegmentInYards
_numSwimmingSegments
_swimmingNumLapsPerSegment
_swimmingSwimSegmentTime
_swimmingRestSegmentTime
initWithOwnerIdentifier:sessionStateController:
sessionStateController
endHeartRateRecovery
associateObject:withBuilder:transaction:error:
enumerateAssociatedUUIDsForBuilder:transaction:error:block:
removeAssociationFromBuilder:toUUID:transaction:error:
registerWithUserNotificationCenter
requestAuthorizationWithOptions:completionHandler:
_objectCompletionOnClientQueue:
_resourceQueue_badgeForDomain:error:
badgeByIncrementingByCount:
_resourceQueue_setBadge:domain:error:
_actionCompletionOnClientQueue:
requestWithIdentifier:content:trigger:
postNotificationWithRequest:completion:
_resourceQueue_notifyObserversWithNotification:
addNotificationRequest:withCompletionHandler:
_postNotificationWithTitle:body:categoryIdentifier:subtitle:domain:url:accessoryImageName:completion:
setSubtitle:
setBody:
setCategoryIdentifier:
soundWithAlertType:
setSound:
setAccessoryImageName:
setUserInfo:
postNotificationWithIdentifier:content:trigger:completion:
_hk_urlForElectrocardiogramType
_sendCompanionUserNotificationResponse:error:
removeDeliveredNotificationsWithIdentifiers:
notificationManager:didPostNotification:
notificationManager:didUpdateBadge:domain:
_resourceQueue_coaleseDomainBadges
_resourceQueue_updateApplicationBadge
_resourceQueue_notifyObserversWithBadge:domain:
_postBadgesDidUpdateNotification
zeroBadge
_resourceQueue_badgeForDomain:
badgeByAggregatingWithBadge:
setBadgeValue:
badgeForDomain:completion:
incrementBadgeForDomain:count:error:
postNotificationWithTitle:body:categoryIdentifier:subtitle:domain:accessoryImageName:completion:
postCompanionUserNotificationOfType:completion:
addNotificationObserver:
removeNotificationObserver:
_badgeForDomain:error:
_aggregateBadge
_userNotificationCenter
_lastNotificationDate
addQuantitySeriesData:
quantitySeriesDatasCount
clearQuantitySeriesDatas
quantitySeriesDataAtIndex:
quantitySeriesDataType
setHasValueInCanonicalUnit:
hasValueInCanonicalUnit
setHasValueInOriginalUnit:
hasValueInOriginalUnit
hasOriginalUnitString
setHasFrozen:
hasFrozen
setCount:
setHasCount:
hasCount
setFinal:
setHasFinal:
hasFinal
setMin:
setHasMin:
hasMin
setMax:
setHasMax:
hasMax
setMostRecent:
setHasMostRecent:
hasMostRecent
setMostRecentDate:
setHasMostRecentDate:
hasMostRecentDate
setMostRecentDuration:
setHasMostRecentDuration:
hasMostRecentDuration
valueInOriginalUnit
originalUnitString
frozen
final
mostRecent
mostRecentDate
setQuantitySeriesDatas:
mostRecentDuration
_count
_max
_min
_mostRecent
_mostRecentDate
_mostRecentDuration
_valueInCanonicalUnit
_valueInOriginalUnit
_originalUnitString
_quantitySeriesDatas
_final
didFinish
taskCount
_taskCount
_errors
_didFinish
decodedSourceUUID
decodedDeviceUUID
decodedMetadata
_setQuantity:
_setFrozen:
_applyToDiscreteQuantitySeriesSample:
_setCodableQuantitySample:
_setMinimumQuantity:
_setMaximumQuantity:
_setMostRecentQuantity:
_setMostRecentQuantityDateInterval:
isSeries
decodedWorkoutEvents
decodedTotalEnergyBurned
decodedTotalBasalEnergyBurned
decodedTotalDistance
decodedTotalSwimmingStrokeCount
decodedTotalFlightsClimbed
decodedGoalType
decodedGoal
_setNote:
_setEnteredInError:
_setModifiedDate:
_setFHIRIdentifier:
localeWithLocaleIdentifier:
_setLocale:
_setExtractionVersion:
_setSortDate:
_setCountry:
_setCacheIndex:
decodedEnergyBurnedQuantity
decodedWalkingAndRunningDistanceQuantity
decodedEnergyBurnedGoalQuantity
_setMoveMinutesGoalOnly:
hasMoveMinutesGoalDate
_setBriskMinutesGoalOnly:
hasBriskMinutesGoalDate
briskMinutesGoalDate
_setActiveHoursGoalOnly:
hasActiveHoursGoalDate
activeHoursGoalDate
hasEnergyBurnedGoalDate
_setEnergyBurnedGoal:date:
hasActivityMoveMode
_decodeCodableActivityStatisticsQuantityInfos:
hasCompletionDate
hasFeatureIdentifier
monday
tuesday
wednesday
thursday
friday
saturday
sunday
_setWeekdays:
hasWakeHour
hasWakeMinute
wakeHour
wakeMinute
_setWakeTimeComponents:
hasBedHour
hasBedMinute
bedHour
bedMinute
_setBedTimeComponents:
hasOverrideDayIndex
_setOverrideDayIndex:
voltagePayload
_setPrivateClassification:
_setSymptomsStatus:
averageHeartRateInBPM
_quantityWithBeatsPerMinute:
_setAverageHeartRate:
omittedContent
documentData
_applyPropertiesWithOmittedFlags:compressedDocumentData:title:patientName:authorName:custodianName:
hasFriendUUID
hasIntValue
hasDoubleValue
hasTimeZoneOffsetFromUTCForNoon
uploadedDate
hasTotalEnergyBurnedInCanonicalUnit
totalEnergyBurnedInCanonicalUnit
hasTotalBasalEnergyBurnedInCanonicalUnit
totalBasalEnergyBurnedInCanonicalUnit
setTotalBasalEnergyBurned:
hasTotalDistanceInCanonicalUnit
totalDistanceInCanonicalUnit
hasGoal
hasDeviceManufacturer
hasDeviceModel
_setCodableWorkoutRoute:
initWithCategory:domain:
decodedCategory
setTimestampWithDate:
initWithKey:value:timestamp:
decodedValue
decodedTimestamp
unitTest_isEquivalentToObjectCollection:
decodedBackupUUID
setAssociationUuid:
setLocationUUID:
hasLocationUUID
setHasLocationType:
hasLocationType
locationTypeAsString:
StringAsLocationType:
setUncertaintyMillis:
setHasUncertaintyMillis:
hasUncertaintyMillis
setConfidenceMillis:
setHasConfidenceMillis:
hasConfidenceMillis
setRecentVisitCount:
setHasRecentVisitCount:
hasRecentVisitCount
locationUUID
uncertaintyMillis
confidenceMillis
recentVisitCount
_confidenceMillis
_recentVisitCount
_uncertaintyMillis
_locationType
_locationUUID
client_deliverHeartbeats
dailyEnergyBurnedStatisticsCount
clearDailyEnergyBurnedStatistics
dailyEnergyBurnedStatisticsAtIndex:
dailyBriskMinutesStatisticsCount
clearDailyBriskMinutesStatistics
dailyBriskMinutesStatisticsAtIndex:
dailyMoveMinutesStatisticsCount
clearDailyMoveMinutesStatistics
dailyMoveMinutesStatisticsAtIndex:
dailyEnergyBurnedStatisticsType
dailyBriskMinutesStatisticsType
dailyMoveMinutesStatisticsType
setHasCacheIndex:
hasCacheIndex
setHasActiveHours:
setHasStepCount:
setHasWalkingAndRunningDistance:
setHasEnergyBurnedGoalDate:
setHasDeepBreathingDuration:
setHasPushCount:
setHasFlightsClimbed:
setHasWheelchairUse:
setHasBriskMinutesGoal:
setHasActiveHoursGoal:
setHasMoveMinutes:
setHasMoveMinutesGoal:
setHasMoveMinutesGoalDate:
setBriskMinutesGoalDate:
setHasBriskMinutesGoalDate:
setActiveHoursGoalDate:
setHasActiveHoursGoalDate:
setHasActivityMoveMode:
setDailyEnergyBurnedStatistics:
setDailyBriskMinutesStatistics:
setDailyMoveMinutesStatistics:
_activeHours
_activeHoursGoal
_activeHoursGoalDate
_activityMoveMode
_briskMinutesGoal
_briskMinutesGoalDate
_cacheIndex
_energyBurnedGoalDate
_moveMinutes
_moveMinutesGoal
_moveMinutesGoalDate
_stepCount
_walkingAndRunningDistance
_dailyBriskMinutesStatistics
_dailyEnergyBurnedStatistics
_dailyMoveMinutesStatistics
_initWithStartTime:endTime:
hk_sumUsingEvaluationBlock:
hk_appendComponentsJoinedByString:container:componentGenerator:
transactions
totalDuration
_addTransactionStatistics:
shortDescription
_transactions
disabledConfiguration
initWithAggregator:identifier:
setLastSensorDatum:
aggregator
lastSensorDatum
hasSetLastSensorDatum
_hasSetLastSensorDatum
_aggregator
_lastSensorDatum
weakToStrongObjectsMapTable
mergedConfiguration:
_aggregatorsByType
_recordsByAggregator
setSystem:
hasSystem
system
_system
setSystemBuild:
setOperatingSystemVersion:
_systemBuild
_timeZoneName
_deviceID
_contributorReference
_operatingSystemVersion
initWithTimestamp:mets:active:basal:recordID:source:
mets
_mets
_basal
handleQueryDataSinceRecord
setHandleQueryDataSinceRecord:
handleStartNatalimetryUpdates
setHandleStartNatalimetryUpdates:
handleStopNatalimeteryUpdates
setHandleStopNatalimeteryUpdates:
_handleQueryDataSinceRecord
_handleStartNatalimetryUpdates
_handleStopNatalimeteryUpdates
setUnderlyingQueue:
setSuspended:
willChangeValueForKey:
didChangeValueForKey:
suspended
takeMaintenanceSuspensionAssertionForOwner:
_maintenanceWorkQueue
_assertionQueue
initWithName:operationBlock:
initWithName:queue:block:
_operationDidStart
_operationDidFinish
_startedTime
setExecuting:
isAsynchronous
isExecuting
_operationBlock
executing
finished
setHasVersion:
setHasCompletionDate:
hasCountryCode
_completionDate
_builtInPluginClasses
hk_healthDataUnavailableError
_isDeviceSupportedWithBehavior:error:
_isClientEntitled:error:
initWithClient:daemon:error:
initWithClient:daemon:
_validateSourceBundleIdentifier:client:error:
_validateAccessToProfile:byClient:
initWithClient:profile:configuration:connectionQueue:
remote_serverForConfiguration:completion:
server
_server
hasDisplayName
hasFHIRResource
_displayName
_fHIRResource
literUnitWithMetricPrefix:
oceanSprayCranberryJuice
tropicanaOrangeJuice
odwallaCMonster
milk
quakerInstantOatmealRegularWithMilk
quakerInstantOatmealAppleCinnamonWithMilk
quakerInstantOatmealMapleWithMilk
lifeCerealWithMilk
totalCerealWithMilk
jimmyDeanBreakfastCroissant
traderJoesBreakfastBurrito
mcDonaldsBigMac
mcDonaldsMcDouble
mcDonaldsMcChickenSandwich
mcDonaldsCaesarSaladWithGrilledChicken
mcDonaldsGreekSaladWithCrispyChicken
traderJoesButterChickenWithBasmataRice
traderJoesChickenAndGreenChileTomales
subwayFootLongBlackForestHamSandwich
subwayFootLongVeggieDelightSandwich
subwayVeggieDelightSalad
bumbleBarWithAlmond
hersheyBarWithAlmonds
clifBarChocoFudgeAndAlmond
apple
crackersGlutenFreeMultigrain
crackersTriscuits
keeblerAnimalCrackers
oikosYogurt
redLobsterTilapiaWithRoastedVegetables
livemainLobsterWithCornAndPotatoes
oliveGardenGarlicRosemaryChicken
oliveGardenBakedTilapiaWithShrimp
oliveGardenCitrusChickenSorrento
oliveGardenHerbGrilledSalmon
oliveGardenChickenScampi
oliveGardenChickenAndShrimpCarbonara
randomFoodObjectFromArray:
dailyValueForDietaryNutrientIdentifier:
oliveGardenRosemaryChicken
dietaryNutrientDailyValues
setDietaryNutrientDailyValues:
canonicalDietaryUnits
setCanonicalDietaryUnits:
beverages
setBeverages:
breakfastFoods
setBreakfastFoods:
lunchFoods
setLunchFoods:
snackFoods
setSnackFoods:
dinnerFoods
setDinnerFoods:
_dietaryNutrientDailyValues
_canonicalDietaryUnits
_beverages
_breakfastFoods
_lunchFoods
_snackFoods
_dinnerFoods
remote_forceCloudSyncWithOptions:reason:completion:
remote_forceCloudResetWithCompletion:
remote_forceCloudSyncDataUploadForProfileWithCompletion:
remote_fetchCloudDescriptionWithCompletion:
remote_fetchCloudSyncStatusWithCompletion:
remote_disableCloudSyncAndDeleteAllCloudDataWithCompletion:
remote_disableCloudSyncWithCompletion:
remote_enableCloudSyncWithCompletion:
remote_accountConfigurationDidChangeWithCompletion:
remote_oldestSampleStartDateInHealthDatabaseWithCompletion:
remote_fetchCloudSyncProgressWithCompletion:
remote_requestDataRefreshWithCompletion:
setHasAssertionType:
hasAssertionType
hasAssertionDate
hasReasonForUseCodings
setHasNotTaken:
hasNotTaken
hasReasonsNotTakenCodings
_assertionType
_assertionDate
_reasonForUseCodings
_reasonsNotTakenCodings
_notTaken
_removeOrphanedLocationSeriesWithError:
butlerUnprotectedMigrationSteps
butlerProtectedMigrationSteps
workoutEventsWithWorkoutSession:transaction:error:
workoutRoute
workoutRouteType
client_deliverWorkoutRouteLocations:isFinal:query:
unitTest_setBatchThreshold:
_batchThreshold
hasPendingOwnerIdentifier
setHasOrder:
hasOrder
setHasDeviceMode:
hasDeviceMode
deviceModeAsString:
StringAsDeviceMode:
setHasSupportedProtocolVersion:
hasSupportedProtocolVersion
supportedProtocolVersionAsString:
StringAsSupportedProtocolVersion:
setHasRequiredProtocolVersion:
hasRequiredProtocolVersion
requiredProtocolVersionAsString:
StringAsRequiredProtocolVersion:
hasSystemBuildVersion
hasDeviceName
_deviceMode
_deviceName
_pendingOwnerIdentifier
_requiredProtocolVersion
_supportedProtocolVersion
_systemBuildVersion
hd_sqlPredicateForSelect
subpredicates
leftExpression
rightExpression
predicateOperatorType
expressionType
constantValue
_checkTypeForValue:inKeyPath:
scanDouble:
_stopObservingMetrics
_startObservingMetrics
clientRemote_didReceiveMetrics:
_metadataFromMetrics:
_accumulatedMetadata
storeUnitString:database:error:
_predicateForLookupByUnitString:
setPoorTiming:
setHasPoorTiming:
hasPoorTiming
setAlreadyDoing:
setHasAlreadyDoing:
hasAlreadyDoing
poorTiming
alreadyDoing
_alreadyDoing
_poorTiming
hasAllergyCodings
hasReactions
hasCriticalityCoding
hasLastOccurenceDate
_allergyCodings
_criticalityCoding
_lastOccurenceDate
_onsetDate
_reactions
hasUnit
registerConnectionInitiatorClient:withConnectionUUID:
permitConnectionForFitnessMachineSessionUUID:activityType:withConnectionUUID:
forbidConnectionForFitnessMachineSessionUUID:withConnectionUUID:
simulateTapWithFitnessMachineType:
simulateAccept
permitConnectionForFitnessMachineSessionUUID:withConnectionUUID:
fitnessFriendAchievementType
enumerateAchievementsWithPredicate:anchor:profile:error:handler:
_isNilDatabase:error:
performWriteTransactionWithHealthDatabase:context:error:block:inaccessibilityHandler:
updateProperties:predicate:healthDatabase:error:bindingHandler:
longValue
stringForProperty:healthDatabase:error:
dateForProperty:transaction:error:
setDate:forProperty:transaction:error:
stringForProperty:transaction:error:
setString:forProperty:transaction:error:
numberForProperty:transaction:error:
setNumber:forProperty:transaction:error:
foreignKeyEntity:forProperty:transaction:error:
setForeignKeyEntity:forProperty:transaction:error:
_loadPlugins
_pluginsDirectoryPath
_internalPluginsDirectoryPaths
_pluginDirectoryPaths
_principalClassProtocols
_loadPrincipalClassesConformingToProtocols:fromBundlesInDirectoryAtPath:error:
_pluginClasses
_createPluginsFromClasses:
_loadPrincipalClassConformingToProtocols:fromBundleAtPath:
loadAndReturnError:
principalClass
allowablePluginDirectoryPaths
setAllowablePluginDirectoryPaths:
_plugins
_allowablePluginDirectoryPaths
setLocation:
hasLocation
setArrivalDate:
setHasArrivalDate:
hasArrivalDate
location
arrivalDate
_arrivalDate
_location
restingHeartRateForDemoPerson:atTime:
walkingHeartRateAverageForDemoPerson:atTime:
electrocardiogramForDemoPerson:atTime:sampleDate:
_generateSymptomSamplesForElectrocardiogram:
_computeRestingHeartRateForDemoPerson:atTime:
_computeWalkingHeartRateAverageForDemoPerson:atTime:
_generateElectrocardiogramForDemoPerson:atTime:classification:sampleDate:
addClassification:
finishWithDevice:metadata:
categorySampleWithType:value:startDate:endDate:device:metadata:
nextElectrocardiogramSampleTime
setNextElectrocardiogramSampleTime:
nextElectrocardiogramClassification
setNextElectrocardiogramClassification:
nextRestingHeartRateSampleTime
setNextRestingHeartRateSampleTime:
nextWalkingHeartRateAverageSampleTime
setNextWalkingHeartRateAverageSampleTime:
lastRestingHeartRate
setLastRestingHeartRate:
lastWalkingHeartRateAverage
setLastWalkingHeartRateAverage:
_nextElectrocardiogramSampleTime
_nextElectrocardiogramClassification
_nextRestingHeartRateSampleTime
_nextWalkingHeartRateAverageSampleTime
_lastRestingHeartRate
_lastWalkingHeartRateAverage
remote_fetchDiagnosticsWithKeys:completion:
remote_fetchURLForAnalyticsFileWithName:completion:
statisticsForOwner:type:anchor:transaction:error:
calculatorForOwner:type:anchor:transaction:error:
setStatistics:forOwner:anchor:transaction:error:
setCalculator:forOwner:anchor:transaction:error:
deleteStatisticsForOwner:type:transaction:error:
enumerateStatisticsForOwner:transaction:error:block:
_queue_insertQuantitySeries:completion:
_queue_finishSeriesWithMetadata:endDate:completion:
_queue_discardWithCompletion:
_queue_isStateInAllowedStates:description:error:
_queue_newSeriesSaveCompleted
_queue_insertQuantitySeries:series:forceInsert:error:
_canSaveOrSanitizeMetadata:error:
applicationSDKVersion
hk_copyWithoutPrivateMetadataKeys
hk_validateMetadataKeysAndValuesAllowingPrivateMetadataKeys:applicationSDKVersion:error:
remote_insertQuantitySeries:completion:
remote_finishSeriesWithMetadata:endDate:finalSeries:completion:
unitTest_saveSamplesCompletion
setUnitTest_saveSamplesCompletion:
_fatalError
_queue_activeHandler
_unitTest_saveSamplesCompletion
deactivateServerWithCompletion:
createTaskServerEndpointForIdentifier:taskUUID:configuration:client:connectionQueue:error:
setTaskServerDelegate:
listenerEndpoint
_lock_hasActiveQueries
taskServer
authorizationServer
objectAuthorizationPromptHandler
handleObjectAuthorizationRequestsWithPromptHandler:completion:
enqueueObjectAuthorizationRequestForSamples:promptIfNeeded:authorizationNeededHandler:completion:
_startQueryServer:completion:
_serverActivityChanged
queryServer:shouldStartWithCompletion:
queryServerDidFinish:
taskServerDidFinishInitialization:
taskServerDidFailToInitializeForUUID:
taskServerDidInvalidate:
initWithParentServer:connectionQueue:
createQueryServerEndpointForIdentifier:queryUUID:configuration:error:
hasActiveQueries
taskServerWithUUID:
_queryServerEndpointsByUUID
hasSessionUUID
setHasSessionStartDate:
hasSessionStartDate
hasSessionError
sessionStartDate
sessionError
_sessionStartDate
_sessionError
deepBreathingSessionType
_samplesAddedToWorkoutNotification:
_registerForSamplesAdded
_deregisterForSamplesAdded
_primePreviousActivationLogEntryWithError:
_updateStatisticsBuildersWithError:
_dateIntervalsAreSet
_readyToPrimeStatisticsBuilders
_resetStatisticsBuilders
initWithDateInterval:loggingName:
initWithDateInterval:activityCacheIndex:
setSourceOrderDelegate:
addActivationLogSamples:
setDateOfBirthComponents:
_primeNonQuantitySamplesWithError:count:
_primeQuantitySamplesWithError:count:
_readyToPrimeActivationLogEntries
_overallDateInterval
_resetPreviousWatchActivationLogEntries
_quantityTypeRequiresWatchSource:
_parameterStringWithCount:
_nonQuantitySamplesQueryStringWithSampleTypes:
_isWatchSourceForSourceIdentifier:error:
addDeepBreathingSessionDuration:
_nonQuantitySampleRequiresWatchSource:
_isConnectedGymDeviceForDeviceIdentifier:error:
addBreatheSessions:
addStandHourSamples:
addDeviceSamples:typeCode:
_quantitySamplesQueryStringWithQuantityTypes:
_isConnectedGymSourceForSourceIdentifier:error:
_quantitySampleIsValidWithTypeCode:workoutSourceIdentifier:isWatchSource:
_typeIsValidFromCompanionWithoutWorkout:
enumerateRawDataWithTransaction:HFDKey:error:handler:
addDeviceSample:typeCode:
addWorkoutSample:typeCode:
addHeartRateSamples:
reportDailyAnalyticsWithProfile:
activityCacheStatisticsBuilder:sourceOrderForObjectType:
_resetEverything
observedQuantityTypes
targetDayDateInterval
previousDayDateInterval
targetDayCacheIndex
previousDayCacheIndex
targetDayStatisticsBuilderTag
previousDayStatisticsBuilderTag
_previousWatchActivationLogEntryVector
_previousWatchActivationLogEntryIsSet
_quantitySampleAnchor
_nonQuantitySampleAnchor
_nonQuantitySamplesQueryString
_quantitySamplesQueryString
_standHoursType
_deepBreathingSessionType
_workoutType
_watchActivationType
_allObservedTypes
_observedQuantityTypes
_rebuildOperation
_isWatchSourceCache
_isConnectedGymSourceCache
_isConnectedGymDeviceCache
_targetDayStatisticsBuilder
_previousDayStatisticsBuilder
_targetDayHeartRateStatisticsBuilder
_previousDayHeartRateStatisticsBuilder
_targetDayDateInterval
_previousDayDateInterval
_targetDayCacheIndex
_previousDayCacheIndex
_targetDayStatisticsBuilderTag
_previousDayStatisticsBuilderTag
_queue_handleXPCEvent:
timeIntervalSince1970
_queue_handleEvent:
hk_nanosecondsSince1970
_eventWithName:
_queue_notifyAlarmsOfPendingEvents
_queue_scheduleEvent:
_queue_unscheduleEventWithName:
_alarms
_isUserVisible
_fireDate
addLocationData:
setContinuationUUID:
locationDatasCount
clearLocationDatas
locationDataAtIndex:
locationDataType
hasContinuationUUID
continuationUUID
locationDatas
setLocationDatas:
_continuationUUID
_locationDatas
remote_fetchSharingParticipantStatus:
remote_fetchAllShareParticipantEmailAddressesWithCompletion:
remote_revokeAccessForAllShareParticipantsWithCompletion:
remote_tearDownHealthSharingForProfile:completion:
initWithContentsOfFile:
heightForDemoPerson:atTime:
weightForDemoPerson:atTime:
leanBodyMassForDemoPerson:weight:
bodyFatPercentageForDemoPerson:atTime:weight:leanBodyMass:
bodyMassIndexForDemoPerson:weight:height:
_heightCurveForAge:sex:
weightChangeForDemoPerson:atTime:
_weightCurveForAge:sex:
computeLeanBodyMassFromWeight:height:sex:waistCircumference:forearmCircumference:wristCircumference:hipCircumference:
computeBodyFatPercentageFromWeight:leanBodyMass:
computeBodyMassIndexFromWeight:height:
boysHeightBirthTo36MonthsGrowthCurve
setBoysHeightBirthTo36MonthsGrowthCurve:
boysHeight2To20YearsGrowthCurve
setBoysHeight2To20YearsGrowthCurve:
boysWeightBirthTo36MonthsGrowthCurve
setBoysWeightBirthTo36MonthsGrowthCurve:
boysWeight2To20YearsGrowthCurve
setBoysWeight2To20YearsGrowthCurve:
girlsHeightBirthTo36MonthsGrowthCurve
setGirlsHeightBirthTo36MonthsGrowthCurve:
girlsHeight2To20YearsGrowthCurve
setGirlsHeight2To20YearsGrowthCurve:
girlsWeightBirthTo36MonthsGrowthCurve
setGirlsWeightBirthTo36MonthsGrowthCurve:
girlsWeight2To20YearsGrowthCurve
setGirlsWeight2To20YearsGrowthCurve:
nextHeightSampleTime
setNextHeightSampleTime:
nextWeightSampleTime
setNextWeightSampleTime:
setLastHeightInCm:
setLastWeightInKg:
weightAdultStartInKg
setWeightAdultStartInKg:
_boysHeightBirthTo36MonthsGrowthCurve
_boysHeight2To20YearsGrowthCurve
_boysWeightBirthTo36MonthsGrowthCurve
_boysWeight2To20YearsGrowthCurve
_girlsHeightBirthTo36MonthsGrowthCurve
_girlsHeight2To20YearsGrowthCurve
_girlsWeightBirthTo36MonthsGrowthCurve
_girlsWeight2To20YearsGrowthCurve
_nextHeightSampleTime
_nextWeightSampleTime
_lastHeightInCm
_lastWeightInKg
_weightAdultStartInKg
setSyncIdentifier:
hasSyncIdentifier
setDeletionDate:
setHasDeletionDate:
hasDeletionDate
deletionDate
_deletionDate
_syncIdentifier
_deleteHFDSeriesIfFoundForPersistentID:database:error:
_insertCodableSeriesDataFromObject:persistentID:database:error:
insertLocationData:database:error:
initWithSeriesPersistentID:locationData:
enumerateLocationDataInDatabase:HFDKey:error:handler:
_routeSampleWithID:canBeUnfrozen:profile:error:
_frozenUUIDForUnfrozenSeriesSample:HFDKey:frozenStartTime:frozenEndTime:frozenCount:profile:transaction:error:
_updateFrozenEntityToMatchReplacedUnfrozenEntity:unfrozenSeriesUUID:unfrozenSeriesHFDKey:database:error:
hasSeriesDataForHFDKey:transaction:error:
sampleCountForSeriesInDatabase:error:
dateIntervalForSeriesInDatabase:error:
enumerateLocationDataFromTimestamp:toTimestamp:database:error:handler:
seriesIdentifier
_seriesIdentifier
coordinate
CVXSystem
LOINCCodeSystem
RxNormCodeSystem
initWithCountryConfigurations:
bundledHealthOntologyConfiguration
configurationForCountryCode:
allCountryConfigurations
countryConfigurations
_countryConfigurations
_propertiesToLeftJoin
_statisticsProperties
initWithExpression:ascending:
_insertDataObject:inDatabase:persistentID:error:
_triggerABCForNotFinalSeriesSampleInsert:reason:
_notFinalInserationEra
setDiscreteQuantitySampleStatistics:persistentID:database:error:
_insertValues:database:error:
_canAddDatumInDatabase:error:
isMinimumDurationRestricted
minimumAllowedDuration
primitiveInsertValues:seriesVersion:HFDKey:database:error:
initWithIdentifier:metadata:endDate:
freezeResult
initWithStatus:frozenIdentifier:
quantitySampleSeriesEntitiesForAutoFreezeWithTransaction:error:
quantitySampleSeriesEntitiesForAutoFreezeSQL
_quantitySampleWithID:canBeUnfrozen:profile:error:
_frozenUUIDForUnfrozenQuantitySample:HFDKey:endDate:transaction:profile:error:
replaceObjectID:replacementObjectID:deleteOriginalHFDData:profile:transaction:error:
deleteSeriesWithID:deleteHFDData:profile:transaction:error:
_dataOriginProvenanceWithTransaction:profile:error:
_updatedSampleForQuantitySeriesSample:HFDKey:endDate:transaction:error:
_setFreezing
_getFirstTimeEndTimeCountWithTransaction:HFDKey:error:handler:
_setStatisticsForQuantitySample:HFDKey:transaction:error:
_statisticsWithHFDKey:statisticsCalculator:transaction:error:
_setStatistics:discreteQuantitySeriesSample:
_setStatistics:cumulativeQuantitySeriesSample:
_setAverageQuantity:
minimumQuantity
maximumQuantity
mostRecentQuantityDateInterval
_setSumQuantity:
_setHFDKey:database:error:
enumerateDataWithIdentifier:transaction:error:handler:
enumerateDataWithTransaction:error:handler:
startTimeEndTimeCountForSeriesWithTransaction:error:handler:
enumerateDataWithTransaction:HFDKey:error:handler:
datumWithValue:timeInterval:
deleteSeriesFromHFDWithKey:database:error:
_isSeriesInDatabase:
_mergeCodableSeriesDataFromQuantitySampleSeries:profile:database:error:
_hasV1SeriesDataWithDatabase:error:
_setInsertionEra:database:error:
_removeValues:fromQuantitySeriesSample:transaction:profile:error:
performSeriesWriteTransactionWithProfile:error:block:
primitiveRemoveDatums:HFDKey:transaction:error:
countForSeriesWithTransaction:error:
_updatedSampleForSeries:originalEntity:HFDKey:newCount:transaction:profile:error:
_updatedSampleUUIDForSeries:originalEntity:HFDKey:transaction:profile:error:
_moveHFDKey:fromEntity:toEntity:transaction:error:
_replaceEntity:UUIDToDelete:newEntity:profile:error:
reportNotFinalSeriesSampleWithClass:count:datumCount:reason:
enumerateDataWithIdentifier:profile:error:handler:
unitTesting_updateInsertionEra
unitTesting_insertionEra
unitTesting_insertValues:quantitySample:seriesVersion:profile:error:
freezeWithEndDate:transaction:profile:error:
hasSeriesDataWithTransaction:error:
enumerateDataInInterval:transaction:error:handler:
unitTesting_setInsertionEra:profile:error:
_codableQuantitySampleForPersistentID:row:error:
datumWithStartTime:value:endTime:
databasePath
_work_attemptDeleteWithCompletion:
work_validateExistingDatabaseVersion
work_createTablesIfNeededWithError:
work_createIndicesIfNeededwithError:
tableCreateSQL
indexCreateSQL
indexDropSQL
unitTest_useEmbeddedOntology
_work_close
_work_openDatabaseAtURL:error:
work_firstRowIDForNodeNamed:error:
work_addNodeWithName:error:
work_nodesForIDs:error:
work_addNodesWithNames:error:
_work_countOfObjectsInTable:
work_nodesForNames:error:
work_nodesForSQL:loadAttributes:loadRelationshipsWithDepth:error:bindingHandler:
work_deleteNodesWithIDs:error:
_work_deleteObjectsFromTable:withIDs:error:
work_enumerateNodesForSQL:loadAttributes:loadRelationshipsWithDepth:error:bindingHandler:enumerationHandler:
initWithDatabase:rowID:name:nameID:isReverse:subjectID:subject:objectID:object:
work_insertNewRelationshipIfNeededNamed:
work_getIDForRelationshipName:error:
work_uniquedNodeWithName:error:
work_deleteRelationshipsWithIDs:error:
work_deleteRelationships:fromNodeWithID:error:
_work_deleteRelationships:fromNodeWithID:toNodeNamed:error:
work_rowIDForValueType:error:
work_insertNewKeyIfNeeded:error:
work_getIDForKeyName:error:
initWithDatabase:rowID:keyID:key:value:valueType:nodeID:node:
_work_beginTransaction
_work_endTransaction:
_performWork:error:
_openDatabaseError:
_work_createGraphDatabaseIfNeededWithError:
initWithPath:error:
graphDatabaseWithBackingStore:error:
attemptDeleteWithCompletion:
attemptDelete
work_dropIndicesWithError:
work_userVersionWithError:
work_makeNodeWithName:error:
work_countOfNodesWithRelationship:error:
work_countOfNodes
work_doesNodeExist:error:
work_nodeForName:
work_deleteNodeWithID:error:
work_nodesContainingAttributeWithID:limit:withValue:error:
work_nodesContainingAttribute:withValue:error:
work_deleteAllRelationshipsWithName:withError:
work_allNodesWithFromRelationshipID:error:
work_nodesWithRelationshipOfType:toNodeWithID:error:
work_nodeNameForAttributeWithKeyID:value:error:
work_countOfRelationships
work_countOfRelationshipOfType:fromNodeWithID:error:
work_addRelationshipNamed:fromNodeNamed:toNodeNamed:error:
work_addRelationshipNamed:fromNodeWithID:toNodeWithID:error:
work_deleteRelationshipWithID:error:
work_deleteRelationship:fromNodeWithID:error:
_work_deleteRelationships:toNodeWithName:error:
work_deleteRelationships:fromNodeWithID:toNodeNamed:error:
work_deleteAllRelationshipsOfTypes:error:
work_attributesForNodeWithID:matchingKey:error:
work_deleteAttributesFromNodeNamed:forKey:error:
work_deleteAllAttributesFromNodeNamed:error:
work_metadataValueForKey:
work_setMetadataValue:forKey:error:
performWork:completionHandler:
setDatabase:
_databasePath
rawIdentifier
_work_nodesWithRelationship:toNodeWithID:reversed:error:
work_nodesWithRelationship:toNodeWithID:error:
work_nodesWithRelationship:fromNodeWithID:error:
work_changeRelationshipWithNameID:subjectID:toSampleWithUUID:withNewNameID:error:
_metadataForObjectID:baseMetadata:keyFilter:statement:error:
_externalSyncMetadataForObjectID:baseMetadata:keyFilter:database:error:
_keyForKeyID:transaction:error:
_insertDerivedMetadataforKey:value:filteredAddBlock:
_insertMetadata:forObjectID:transaction:error:
_insertExternalSyncMetadata:forObjectID:sourceID:externalSyncObjectCode:objectDeleted:transaction:error:
_skipInsertOfKey:metadata:
_keyEntityForKey:createIfNecessary:transaction:error:
_ignoredInsertedMetadataKeys
_metadataPredicateClassForKey:
unitTest_metadataForObjectID:keyFilter:error:
unitTest_rawMetadataForObject:error:
_keyEntityCache
_keyCache
manifestationCodingsCount
clearManifestationCodings
manifestationCodingsAtIndex:
manifestationCodingsType
setManifestationCodings:
_manifestationCodings
_severityCoding
syncStoreForProfile:storeIdentifier:syncCircleName:ownerIdentifier:containerIdentifier:error:
_syncContainerPrefix
_shortSyncIdentifier
_updateOrderedSourcesForType:profile:transaction:error:updateHandler:
enumerateOrderedSourceIDsForType:profile:error:block:
saveOrderedSourceIDs:type:userOrdered:profile:error:
orderedSourceIDsForType:userOrdered:profile:error:
sourceOrderSyncPredicateForSession:
setUserOrdered:
addModificationDates:
setSourceUUIDs:
removeObjectsInArray:
_upstreamIteratorsWithSampleQueryDescriptions:sortDescriptors:anchor:bufferSize:profile:
_prepareIteratorsWithError:
initForCopying
restoreIteratorStateFromData:error:
iteratorStateData
initWithSampleQueryDescriptions:sortDescriptors:bufferSize:profile:
_iterators
_nextIterator
_isInitialized
compareObject:toObject:
hk_hourNumber
hk_minuteNumber
mostRecentSleepScheduleForWeekday:beforeDate:profile:encodingOptions:error:
_initWithUnderlyingSampleType:aggregationStyle:canonicalUnit:
_initWithCode:
underlyingSampleType
overriddenAggregationStyle
overriddenCanonicalUnit
_underlyingSampleType
_overriddenAggregationStyle
_overriddenCanonicalUnit
AWDMetricID
codableRepresentationForAWDSubmission
notifyObserversInGroup:handler:
submitEvent:
isEventUsed:
unitTest_fireDailyAnalyticsActivityWithCompletion:
persistObjects:usedDatums:collector:source:device:resolveAssociations:error:
recordWithStatus:request:mode:anchorLimitModifiedDate:
initWithReadAuthorizationStatus:authorizationRequest:authorizationMode:restrictedBundleIdentifier:restrictedSourceEntities:deletedObjectBaselineAnchor:objectLimitAnchor:objectLimitModifiedDate:
anchorLimitModifiedDate
recordWithReadingDisabled
recordWithSharingDisabled
objectLimitModifiedDate
disableReading
disableSharing
deletedObjectBaselineAnchor
_authorizationRecord
_restrictedBundleIdentifier
_deletedObjectBaselineAnchor
_objectLimitAnchor
remote_registerConnectionInitiatorClient:
remote_permitConnectionForFitnessMachineSessionUUID:activityType:
remote_forbidConnectionForFitnessMachineSessionUUID:
remote_simulateTapWithFitnessMachineType:
remote_simulateAccept
_connectionInitiatorServer
configurationWithLatency:interval:seriesDuration:activeWorkout:foregroundObserver:
dataCollectionQueue
_considerStartingCollectors
_startCollector:
setCollector:
priority
configurationWithType:aggregatorConfiguration:
_lock_collectorRegistry
_lock_configuration
_hasStartedCollectors
_lock_canStartCollectors
initWithLatency:interval:seriesDuration:activeWorkout:foregroundObserver:
setHasForegroundObserver:
_hasActiveWorkout
_hasForegroundObserver
_collectionLatency
_aggregationInterval
_maximumSeriesDuration
_collectionType
_priority
_datumIdentifier
_resumeContext
_resumeContextProvider
_registerForNotifications
_unregisterNotifications
_queue_updateAgeGating
_ageWithDateOfBirthComponents:
_updateUserDefaultsWithAge:
_setAgeGatingEnabled:forKey:
components:fromDateComponents:toDateComponents:options:
unitTesting_updateAgeGates
_userCharacteristicsDidChangeNotificationToken
setHasCategory:
setMostRecentGoal:
setHasMostRecentGoal:
hasMostRecentGoal
setNumTimesGoalAchieved:
setHasNumTimesGoalAchieved:
hasNumTimesGoalAchieved
setSelectedGoal:
setHasSelectedGoal:
hasSelectedGoal
mostRecentGoal
numTimesGoalAchieved
selectedGoal
_mostRecentGoal
_numTimesGoalAchieved
_selectedGoal
setFetchLocationRequest:
setScenarioTriggeredRequest:
requestType
setRequestType:
setHasRequestType:
hasRequestType
requestTypeAsString:
StringAsRequestType:
hasFetchLocationRequest
hasScenarioTriggeredRequest
fetchLocationRequest
scenarioTriggeredRequest
_fetchLocationRequest
_requestType
_scenarioTriggeredRequest
_initWithFitnessMachineSessionUUID:
initWithNFCSessionIDData:
machineName
setFitnessMachineName:type:identifier:
_setActivityType:
nfcSessionIDData
initWithType:identifier:name:
initWithSessionUUID:machineUUID:machineType:machineName:machineBrand:activityType:machineStartDate:machinePreferredUntilDate:nfcSessionIDData:
initWithType:identifier:
setFitnessMachine:
_oobDataArrayWithRandomValue:confirmationValue:sessionID:btAddress:
nfcConnectionHandoverData
setHealthService:
setOobInfo:
oobDataArray
setOobDataArray:
_waitingOnInitialMachineStatus
_waitingOnInitialMachineData
_dataTransferPermitted
_waitingOnMFA
_waitingOnBluetoothConnection
_waitingOnActivityType
_fitnessMachineSessionUUID
_nfcSessionIDData
_healthServiceSessionIdentifier
_healthService
_serviceStatus
_fitnessMachine
_oobInfo
_initialMachineStatus
_initialMachineData
_initialEnhancedFTMSData
_connectionState
_machineStartDate
_machineStateUpdateDate
_oobDataArray
userDefault
_userDefault
_dataType
_compoundSyncOperationWithConfiguration:cloudState:
_operationWithMostRecentCloudMedicalIDFromPrimaryFetchOperation:secondaryFetchOperations:
operationWithRunCondition:
setLocalMedicalIDData:
mergedMedicalIDData
setMedicalIDDataToPersist:
_localMedicalIDData
setHasOmittedContent:
hasOmittedContent
omittedContentAsString:
StringAsOmittedContent:
hasDocumentData
hasTitle
hasPatientName
hasAuthorName
hasCustodianName
_authorName
_custodianName
_documentData
_omittedContent
_patientName
initWithNotifications:initialState:unlockedSinceBoot:
initWithObserver:queue:
_observationQueue_adjustContentProtectionStateWithBlock:
shouldIgnoreUnlockedState
observer
setShouldIgnoreUnlockedState:
_contentProtectionState
_shouldIgnoreUnlockedState
_unlockedSinceBoot
_notifyToken
_observationQueue
_beganObservingTime
_lastNotificationTime
_lastRecheckTime
_observer
setExperimentIdentifier:
hasExperimentIdentifier
setTestCondition:
setHasTestCondition:
hasTestCondition
experimentIdentifier
testCondition
_testCondition
_experimentIdentifier
hasDiagnosticTestCodingCollection
hasPanelName
hasResults
_diagnosticTestCodingCollection
_panelName
_results
writeTaskIdentifier
remote_setAuthorizationStatuses:authorizationModes:forBundleIdentifier:options:completion:
remote_setRequestedAuthorizationForBundleIdentifier:shareTypes:readTypes:completion:
remote_setObjectAuthorizationStatuses:forBundleIdentifier:completion:
subContextByRemovingOptions:
shortIdentifier
_shortIdentifier
_operationType
_insertDataObjects:transaction:insertionContext:updateSourceOrder:error:
_notifySynchronousObserversIfPossible
_callObserversIfPossible
_shouldNotifyOnInsert
_notifyObserversSamplesWithTypesWereRemoved:anchor:
shouldNotifyForDeletedSamplesOfTypes:transaction:anchor:
_notifySynchronousObserversForDeletedObjectTypes:anchor:
_notifyObserversWithAddedObjectsBySampleType:lastAnchor:
_observersForDataType:
_callObservers:samples:type:anchor:
_observersForAllTypes
secureDelete
_deleteDataObjectsByUUIDSQLStringForConfiguration:entityType:error:
generateDeletedObjects
failIfNotFound
notifyObservers
hk_enumerateUUIDsWithError:block:
_shouldNotifyForDeletedSamplesOfTypes:anchor:
initWithConfiguration:objectUUIDs:
restrictedSourceBundleIdentifier
hd_sampleTypesForObjects:
_deleteObjectsWithTypes:sourceEntities:recursiveDeleteAuthorizationBlock:error:
deleteDataObjectsOfClass:predicate:limit:deletedSampleCount:notifyObservers:generateDeletedObjects:recursiveDeleteAuthorizationBlock:error:
_notificationQueue_notifyObserversSamplesWithTypesWereRemoved:anchor:
_queue_observersAllTypesCreateIfNil:
_queue_observersForDataType:createIfNil:
_queue_observersForKey:createIfNil:
_synchronousObserverLock_synchronousObserverSetForSampleType:
_synchronousObserverLock_hasSynchronousObserverForSampleType:
insertDataObjects:error:
associateObjectUUIDs:objectUUID:error:
deleteSamplesWithTypes:sourceBundleIdentifier:recursiveDeleteAuthorizationBlock:error:
deleteSamplesWithUUIDs:recursiveDeleteAuthorizationBlock:error:
deleteSamplesWithUUIDs:generateDeletedObjects:transaction:error:
addObserverForAllTypes:
removeObserverForAllTypes:
addSynchronousObserver:forSampleType:
removeSynchronousObserver:forSampleType:
synchronouslyCloseObserverTransactionAndNotify
setBackgroundObserverFrequency:forDataType:frequency:completion:
_observersByDataType
_synchronousObserverLock
_synchronousObserversBySampleType
_needsSynchronousNotification
_openTransactions
_pendingObjectsBySampleType
_lastNotifyLogTime
_notifyCount
_samplesAddedCount
_samplesJournaledCount
_quantitySeriesManager
UUIDCollection
_UUIDCollection
setSecureDelete:
setRestrictedSourceBundleIdentifier:
_generateDeletedObjects
_failIfNotFound
_notifyObservers
_secureDelete
_restrictedSourceBundleIdentifier
_performIfAuthorizedForTypes:sharing:onQueue:usingBlock:errorHandler:
_authorizationStatusForTypes:error:
_allowAuthorizationForSharingWithTypes:entitlements:disallowedTypes:
_allowAuthorizationForReadingWithTypes:entitlements:disallowedTypes:
deviceConfigurationSupportsHealthRecords:error:
isSupportedFHIRVersionString:
isSupportedFHIRResourceType:FHIRVersionString:
registerHealthRecordsSupportedChangeObserver:
unregisterHealthRecordsSupportedChangeObserver:
hasAccounts:error:
addAccountEventObserver:
removeAccountEventObserver:
allTypes
_queue_enqueueAuthorizationRequestForBundleIdentifier:writeTypes:readTypes:authorizationNeededHandler:requestCompletionHandler:
handleAuthorizationRequestsForBundleIdentifier:promptHandler:requestCompletionHandler:
_typesIncludingParentTypes:
authorizationStatusesForBundleIdentifier:types:profile:error:
initWithClient:queue:
performIfAuthorizedToReadTypes:onQueue:usingBlock:errorHandler:
performIfAuthorizedToSaveObjectsWithTypes:onQueue:usingBlock:errorHandler:
performIfAuthorizedToDeleteObjectsWithTypes:onQueue:usingBlock:errorHandler:
authorizationStatusForType:error:
enqueueAuthorizationRequestToWriteTypes:readTypes:authorizationNeededHandler:requestCompletionHandler:
handleAuthorizationRequestsWithPromptHandler:requestCompletionHandler:
authorizationRequestIdentifiers
setAuthorizationRequestIdentifiers:
transactionSessionIdentifier
setTransactionSessionIdentifier:
_authorizationRequestIdentifiers
_transactionSessionIdentifier
_queue_beginAuthorizationRequestDelegateTransactionWithSessionIdentifier:completion:
typesForReadAuthorizationOverride
typesForWriteAuthorizationOverride
beginAuthorizationRequestDelegateTransactionWithRequestRecord:completion:
beginAuthorizationRequestDelegateTransactionWithSessionIdentifier:completion:
endAuthorizationRequestDelegateTransactionWithSessionIdentifier:error:
updateDefaultAuthorizationStatusesWithCompletion:
chainFromOperation:transitionHandler:
onError
cloudSync_operationStarted:
unitTest_operationHandler
cloudSync_operationFinished:
cloudSync_operationFailed:error:
_lock_currentDuration
unitTest_setOperationHandler:
unitTest_clearAllOperationHandlers
initWithPreceedingOperation:transitionHandler:
onSuccess
skip
_onSuccess
_onError
_shortOperationIdentifier
_setUpInitialQueryHelper
_queue_deliverErrorToClient:
_queue_deliverActivitySummariesToClient:isFinalBatch:clearPendingBatches:
activitySummaryType
client_deliverActivitySummaries:isFinalBatch:clearPendingBatches:queryUUID:
_queue_deliverResultsWithActivitySummaries:isFinalBatch:clearPendingBatches:error:
shouldIncludeActivitySummaryPrivateProperties
shouldIncludeActivitySummaryStatistics
_lastProcessedAnchor
_filterPredicate
_hasSentInitialResults
_updatedSharesByRemovingParticipants:container:
_saveUpdatedShares:container:
initWithConfiguration:cloudState:participantsToRemove:
_participantsToRemove
_isSupportedActivityType:
initWithOperationQueue:
waitUntilAllOperationsAreFinished
_generateSamplesForPeriodIncludeLessFrequentSamples:
quantitySampleWithType:quantity:startDate:endDate:device:metadata:
demoDataModule:didProduceDataObject:
initWithActivityType:speed:objectHandler:
generateDataForMinutes:completion:
_objectHandler
_operationQueue
_modules
scheduleNextFire
nextFireInterval
scheduleNextFireWithInterval:
timerDidFireWithInterval:
handleDataObject:
lastFireDate
_timerSource
_lastFireDate
_getDelayBeforeNextStepData:stepCount:distance:
_nextFireInterval
_nextStepCount
_nextDistance
_caloriesBurnedWithTimeInterval:
dateForKey:domain:category:profile:entity:error:
quantityForKey:unit:domain:category:profile:entity:error:
stringForKey:domain:category:profile:entity:error:
propertyListWithData:options:format:error:
modificationDatesForKeys:domain:category:profile:error:
setDate:forKey:domain:category:profile:error:
setQuantity:unit:forKey:domain:category:profile:error:
dataWithPropertyList:format:options:error:
setValueForAllKeys:domain:category:profile:error:
removeValuesForDomain:category:keys:profile:error:
quantityForKey:unit:error:
modificationDatesForKeys:error:
setQuantity:unit:forKey:error:
setPropertyListValue:forKey:error:
_domainName
queryCursor
followingAnchor
upToAndIncludingAnchor
distinctByKeyPaths
initWithSampleQueryDescriptions:sortDescriptors:followingAnchor:upToAndIncludingAnchor:distinctByKeyPaths:state:
isHealthRecordsType
_queue_deliverSamples:queryCursor:deliverResults:
batchObjectsWithError:batchHandler:
initWithSampleTypes:predicate:encodingOptions:restrictedSourceEntities:authorizationFilter:filter:sqlitePredicate:
initWithSourceIterator:keyPaths:
queryCursorWithState:
queryClient
client_deliverSampleObjects:queryCursor:deliverResults:query:
isQueryingForHealthRecordsTypes
_deliveredResultCount
_queryCursor
_baseVFS
_customVFS
initWithZoneName:ownerName:
hk_copySanitizedForPublicClient
_copyByArchiving
setShouldPause:
_queue_activateServerWithClientState:error:
_queue_setQueryState:
_queue_transitionToPaused
_queue_startDataCollectionIfNecessary
_queue_notifyIfQueryingForHealthRecords
_scheduleStartQuery
_queue_transitionToFinished
_queue_closeActivationTransactionIfNecessary
_queue_startQueryIfNecessary
_queue_transitionToRunning
_queue_collectionObserverState
setObserverState:
_queue_updateSampleTypeObservationAssertions
_shouldRegisterAsProtectedDataObserver
_queue_logQueryWithDuration:statistics:
_queue_transitionToSuspendedState:
_queue_endObservingDataTypes
_shouldObserveAllSampleTypes
collectibleTypes
shouldSuppressDataCollection
_queue_sampleTypesForObservation
takeCollectionAssertionWithOwnerIdentifier:sampleTypes:observerState:collectionInterval:
_queue_setSampleTypeObservationAssertions:
currentWorkoutClient
_queue_beginObservingDataTypes
debugIdentifier
_queryStateString
stringByAppendingFormat:
reportQueryDurationWithServer:dataCount:duration:
remote_startQueryWithCompletion:
remote_deactivateServer
_sampleTypeToObserveForUpdates
unitTest_queryServerSetShouldPauseHandler
setUnitTest_queryServerSetShouldPauseHandler:
unitTest_queryServerWillChangeStateHandler
setUnitTest_queryServerWillChangeStateHandler:
_baseDataEntityEncodingOptions
_queryDidFinishHandler
_dataObservationAssertions
_dataCollectionAssertion
_activationTransaction
_queryState
_shouldTakeObservationAssertions
_observingData
_isCollectingData
_shouldFinish
_shouldPause
_unitTestQueryQueue
_transactionStatistics
_queryUUID
_queryQueue
_collectionInterval
_dataCount
_unitTest_queryServerSetShouldPauseHandler
_unitTest_queryServerWillChangeStateHandler
initWithSampleUUID:conceptIdentifier:
_ontologyURLForProfile:
setCountLimit:
_queue_clearCache
_ontologyAssetManager
unregisterHandlerForToken:
_queue_closeDatabase
_queue_createAndInitializeIfNeeded
assetManager
assetFileURL
ignoreOntologyAssetAvailabilityChanges
unitTest_useEmbeddedOntologyAsset
scanLongLong:
ontologyURL
assetFileVersion
_graphDatabaseVersionImplementation:error:
ignoresVersionCheckDuringReferenceOntologyImport
_notifyObserversReferenceOntologyCreated
_notifyObserversReferenceOntologyWillUpdate
_queue_insertTwoItemRawOntologyValueIntoDatabase:table:valueString:
_queue_insertRawAttributeIntoDatabase:valueString:
_queue_insertRawRelationshipIntoDatabase:valueString:
enumerateLinesInCurrentEntryWithError:block:
_notifyObserversReferenceOntologyDidUpdateWithSuccess:error:
_queue_graphDatabase
graphDatabase:setVersion:error:
_queue_graphDatabaseVersionWithError:
_graphDatabaseUserVersionImplementation:error:
_queue_graphDatabaseUserVersionWithError:
useEmbeddedOntology
_handleOntologyAssetAvailabilityUpdate:
registerAssetAvailabilityHandler:
_createOntologyDirectoryIfNecessaryWithError:
_queue_copyEmbeddedReferenceOntology
_work_graphDatabase:findConceptsForCodings:error:
isNebulous
validInRegions
_ontologyConfigurationForCountryCode:
graphDatabase
_work_graphDatabase:resolveMercuryConceptForCodings:country:error:
adHocCodingForCodingCollection:
_work_graphDatabase:findConceptForCoding:error:
_work_graphDatabase:newConceptIdentifierWithName:error:
synthesizeConceptWithIdentifier:forCodingCollection:
_work_graphDatabase:insertConcept:error:
ontology_hasCodingSystemAttributeIdentifier
_work_conceptFromGraphNode:preloadRelationships:error:
initWithRawIdentifier:
attributeWithIdentifier:type:valueType:value:
keyID
_conceptWithIdentifier:attributes:
work_relationshipsForConceptWithIdentifier:error:
setRelationships:
performGraphDatabaseWork:error:
conceptsForIdentifiers:expectedOntologyVersion:loadRelationships:error:
relationshipsAreLoaded
numberRepresentation
_queue_conceptsWithGraphDatabaseCall:loadRelationships:error:
_conceptWithGraphDatabaseCall:error:
_conceptsWithGraphDatabaseCall:loadRelationships:error:
_conceptsWithRelationship:toNodeWithID:reversed:error:
nameID
initWithIdentifier:type:name:destination:
ontologyConfigurationForCountryCode:
conceptsAssociatedWithSampleUUID:error:
identifierWithRawIdentifier:
_queue_clearCachedConceptWithIdentifier:
isAdHoc
conceptsWithRelationship:toNodeWithID:error:
nodeName
conceptsWithRelationship:fromNodeWithID:error:
_queue_importReferenceOntology
setUserDefaultOverrideAssetFileURL:error:
clearUserDefaultOverrideAssetFileURLWithError:
importWithCompletion:
obliterateWithProfile:reason:
ignoresOntologyAssetAvailabilityChanges
setCurrentOntologyVersion:
isEnabled
_referenceOntologyFileURL
useEmbeddedOntologyAsset
hd_unitTesting_setVersion:error:
userVersionWithError:
conceptForCodingCollection:country:
conceptForName:error:
insertAssociations:error:
makeAssociationFromSampleUUID:toConceptIdentifier:error:
removeAllAssociationsToSampleUUID:error:
sampleUUIDsAssociatedWithConcept:error:
conceptsAssociatedWithSample:error:
allAssociatedConceptsWithError:
hd_unitTesting_setupDatabase
hd_unitTesting_disableCache
hd_unitTesting_clearCache
setGraphDatabase:
_codingSystemPriorityInfo
_assetAvailabilityRegistrationToken
_ivarLock
_nebulousConceptCache
_useCache
_conceptsByIdentifierCache
_unitTest_useEmbeddedOntology
_unitTest_useEmbeddedOntologyAsset
_graphDatabase
_ontologyURL
work_subjectWithError:
work_databaseObjectWithError:
subject
_isReverseRelationship
_nameID
_subjectID
_objectID
_subject
_object
orderedQuantityValuesBySeriesForPredicate:transaction:options:error:handler:
_queryForEnumerationWithPredicate:transaction:options:
_propertiesForEnumeration
orderedQuantityValuesForPredicate:transaction:options:error:handler:
initWithTransaction:persistentID:dataTypeCode:UUIDBytes:startTime:endTime:count:sourceID:HFDKey:bufferSize:
primeEnumeratorWithError:
nextDatumTime
_enumerateWithEnumerator:endTime:error:handler:
dataTypeCode
UUIDBytesPtr
enumerateDataToTime:error:handler:
orderedQuantityValuesBySeriesForPredicate:profile:options:error:handler:
orderedQuantityValuesForPredicate:profile:options:error:handler:
_freezeResult
_characteristic
body
_notificationContentWithTitle:body:
destinations
setDestinations:
setShouldIgnoreDoNotDisturb:
initWithNotificationManager:
unregisterCurrentWorkoutObserver:
registerCurrentWorkoutObserver:
performWhenPostLaunchSessionRecoveryHasCompleted:
_sendSnapshotForWorkout:
currentWorkoutSnapshot
clientRemote_didUpdateWorkoutSnapshot:
remote_waitForAutomaticWorkoutRecoveryWithCompletion:
workoutManager:didUpdateCurrentWorkout:
workoutManager:currentWorkout:didChangeToState:
workoutManager:currentWorkout:didUpdateDataAccumulator:
_registered
_currentWorkout
hasRawValue
hasComparatorCoding
hasUnitCoding
_comparatorCoding
_rawValue
_unitCoding
_machineUUID
_machineName
_unitString
exceptionWithName:reason:userInfo:
raise
addExerciseMinuteHours:
standEventMinutesSinceMidnightRoundedTo10sCount
clearStandEventMinutesSinceMidnightRoundedTo10s
standEventMinutesSinceMidnightRoundedTo10AtIndex:
exerciseMinuteHoursCount
clearExerciseMinuteHours
exerciseMinuteHoursAtIndex:
exerciseMinuteHoursType
hasUserToken
standEventMinutesSinceMidnightRoundedTo10s
setStandEventMinutesSinceMidnightRoundedTo10s:count:
setMoveRingCompletionPercentage:
setHasMoveRingCompletionPercentage:
hasMoveRingCompletionPercentage
setHasMonthsSinceFirstWatchUsage:
hasMonthsSinceFirstWatchUsage
userToken
exerciseMinuteHours
moveRingCompletionPercentage
monthsSinceFirstWatchUsage
_standEventMinutesSinceMidnightRoundedTo10s
_monthsSinceFirstWatchUsage
_moveRingCompletionPercentage
_exerciseMinuteHours
_userToken
didJournal
_didJournal
hasAnchorRangeMap
setHasChangeSize:
hasChangeSize
setHasFinalForSequence:
hasFinalForSequence
_changeSize
_anchorRangeMap
_finalForSequence
setHasPrivateClassification:
hasPrivateClassification
setHasAverageHeartRateInBPM:
hasAverageHeartRateInBPM
hasVoltagePayload
setHasSymptomsStatus:
hasSymptomsStatus
_averageHeartRateInBPM
_privateClassification
_symptomsStatus
_voltagePayload
hk_typesForSetOf:
hk_typesForDictionaryMapping:to:
maximumObjectAgeForType:
excludedSyncProvenances
includedObjectTypes
defaultMaximumTombstoneAge
maximumObjectAgeByType
_excludedSyncProvenances
_includedObjectTypes
_defaultMaximumObjectAge
_defaultMaximumTombstoneAge
_maximumObjectAgeByType
initWithBuilderIdentifier:
hasProcedureCodingCollection
hasExecutionStartDate
hasExecutionEndDate
setHasNotPerformed:
hasNotPerformed
hasCategoryCodingCollection
hasReasonCodingCollections
hasReasonsNotPerformedCodingCollections
hasOutcomeCodingCollection
hasComplicationsCodingCollections
hasFollowUpsCodingCollections
_categoryCodingCollection
_complicationsCodingCollections
_executionEndDate
_executionStartDate
_followUpsCodingCollections
_outcomeCodingCollection
_procedureCodingCollection
_reasonCodingCollections
_reasonsNotPerformedCodingCollections
_notPerformed
setObjectUUID:
hasObjectUUID
objectUUID
_objectUUID
_fetchChangeRecordsForContainer:
_configurationsByRecordZoneIDForContainer:
_fetchChangeRecordsForContainer:configurations:
hd_errorStrippingCloudKitPartialFailuresWithShouldIgnoreBlock:
_fetchDidFinishForZone:changeToken:container:error:
setRecordZoneFetchCompletionBlock:
_fetchedChangedRecord:
_recordWithIDWasDeleted:
setRecordWithIDWasDeletedBlock:
initWithConfiguration:cloudState:zones:changeTokensByZone:
changeRecords
changeTokensByZone
recordFilter
setRecordFilter:
expiredServerChangeTokenHandler
setExpiredServerChangeTokenHandler:
_initialServerChangeTokensByIdentifier
_finalServerChangeTokensByIdentifier
_fetchedRecords
_deletedRecordIDs
_recordFilter
_expiredServerChangeTokenHandler
setHasMean:
hasMean
setHasStddev:
hasStddev
setHasPercentile25:
hasPercentile25
setHasPercentile75:
hasPercentile75
setHasMedian:
hasMedian
mean
stddev
percentile25
percentile75
median
_mean
_median
_percentile25
_percentile75
_stddev
_resourceQueue_loadSecondaryProfiles
_resourceQueue_profileForIdentifier:
_resourceQueue_addProfile:dispatchChangeNotification:
_resourceQueue_createProfileOfType:UUID:name:error:
_resourceQueue_deleteProfile:error:
pathComponents
fileURLWithPathComponents:
_profileIdentifierForDirectoryName:error:
newProfileWithIdentifier:daemon:directoryPath:
_directoryURLForProfileIdentifier:
_directoryNameForProfileIdentifier:
isValidSecondaryProfileType:
profileIdentifierForUUID:
reloadSecondaryProfiles
_profiles
_setObjectAuthorizationRecords:syncProvenance:skipErrors:profile:error:
_insertCodableObjectAuthorizations:syncProvenance:profile:error:
authorizationStatusForSamplesOfType:sourceEntity:profile:error:
authorizationRecordsBySourceForSampleWithUUID:profile:error:
eventsCount
clearEvents
eventsAtIndex:
eventsType
setHasTotalEnergyBurnedInCanonicalUnit:
setHasTotalDistanceInCanonicalUnit:
setHasGoalType:
hasGoalType
setHasGoal:
setHasTotalBasalEnergyBurnedInCanonicalUnit:
setHasTotalSwimmingStrokeCountInCanonicalUnit:
hasTotalSwimmingStrokeCountInCanonicalUnit
setHasTotalFlightsClimbedInCanonicalUnit:
hasTotalFlightsClimbedInCanonicalUnit
totalSwimmingStrokeCountInCanonicalUnit
totalFlightsClimbedInCanonicalUnit
node
_nodeID
_node
_keyID
_valueType
hasOriginBuild
hasDeviceUUID
hasSourceVersion
hasOriginProductType
hasTimeZoneName
setHasOriginMajorVersion:
hasOriginMajorVersion
setHasOriginMinorVersion:
hasOriginMinorVersion
setHasOriginPatchVersion:
hasOriginPatchVersion
hasContributorUUID
originBuild
deviceUUID
originProductType
originMajorVersion
originMinorVersion
originPatchVersion
contributorUUID
_contributorUUID
_deviceUUID
_originBuild
_originMajorVersion
_originMinorVersion
_originPatchVersion
_originProductType
seriesAnchor
maximumStartDate
latestUUID
latestSampleStartDate
_deliverError:
_deliverEmptyResults
_queue_startSingleSeriesMode
_queue_startEnumerationMode
_clientProxy
_deliverQuantitySeries:seriesAnchor:isFinal:
_deliverEnumerationResults:isFinal:
addValues:
client_deliverQuantitySeries:seriesAnchor:isFinal:query:
_predicateForEnumerationWithError:
filter:acceptsDataObjectWithStartTimestamp:endTimestamp:valueInCanonicalUnit:
_shouldDeliverQuantityWithStartTime:UUID:maximumDeliveredStartDate:latestDeliveredUUID:orderBySamples:
_deliverEnumerationResults:latestUUID:latestSampleStartTime:sampleIDsToLookup:isFinal:error:
resultWithID:UUID:value:count:startTime:endTime:seriesIndex:
addResults:
_enumerateQuantityValuesForPredicate:orderBySamples:profile:error:handler:
hk_compare:
predicateWithProperty:greaterThanOrEqualToValue:
setLatestSampleStartTime:
setQuantitySample:
client_deliverEnumerationResults:isFinal:query:
unitTest_batchWillDeliver
setUnitTest_batchWillDeliver:
_lastDatumIndex
_maximumDeliveredStartDate
_latestDeliveredUUID
_latestDeliveredSampleStartDate
_unitTest_batchWillDeliver
setSeriesIndex:
setPatientHash:
setUserEnabled:
setHasUserEnabled:
hasUserEnabled
setLastFetchDate:
setHasLastFetchDate:
hasLastFetchDate
setLastFullFetchDate:
setHasLastFullFetchDate:
hasLastFullFetchDate
hasPatientHash
userEnabled
lastFetchDate
lastFullFetchDate
patientHash
_lastFetchDate
_lastFullFetchDate
_patientHash
_userEnabled
enumerateValuesWithProfile:error:handler:
_valuePredicateForKey:allowedValues:
_valuePredicateForKey:value:operatorType:
_propertyForKey:
_valueClassForKey:
booleanPredicateWithValue:
initWithSyncCircleIdentifier:profileIdentifier:shareURLs:ownerParticipant:ownerCloudKitEmailAddress:shareParticipant:invitationTokensByShareURL:
initWithConfiguration:cloudState:identityLookupInfo:requireExistingRelationship:requireZoneDeviceMode:
_expectedDeviceMode
_participantPushZone
_addedParticipants
_queue_querySkiDataWithCompletion:
_queue_processSkiData:error:
querySkiUpdatesFromRecord:handler:
runDistance
_queue_generateSegmentEventForSkiData:referenceData:
_queue_generateDownhillSnowSportsDistanceSampleForSkiData:referenceData:
_queue_saveDownhillSnowSportsDistanceSamples:
runAvgSpeed
runMaxSpeed
runSlope
_percentSlopeForAngle:
runElevationDescent
_skiTracker
_referenceSkiData
_setVaccinationCodings:
_setExpirationDate:
_setDoseNumber:
_setDoseQuantity:
_setPerformer:
_setReaction:
_setNotGiven:
_setAdministrationDate:
_setPatientReported:
_setRouteCodings:
_setReasonsCodings:
_setReasonsNotGivenCodings:
setEntityVersion:
setHasEntityVersion:
hasEntityVersion
setCompatibilityVersion:
setHasCompatibilityVersion:
hasCompatibilityVersion
entityVersion
compatibilityVersion
_compatibilityVersion
_entityVersion
medicationOrdersCount
clearMedicationOrders
medicationOrderAtIndex:
medicationDispenseRecordsCount
clearMedicationDispenseRecords
medicationDispenseRecordAtIndex:
medicationRecordsCount
clearMedicationRecords
medicationRecordAtIndex:
diagnosticTestResultsCount
clearDiagnosticTestResults
diagnosticTestResultAtIndex:
diagnosticTestReportsCount
clearDiagnosticTestReports
diagnosticTestReportAtIndex:
vaccinationRecordsCount
clearVaccinationRecords
vaccinationRecordAtIndex:
conditionRecordsCount
clearConditionRecords
conditionRecordAtIndex:
allergyRecordsCount
clearAllergyRecords
allergyRecordAtIndex:
procedureRecordsCount
clearProcedureRecords
procedureRecordAtIndex:
accountOwnersCount
clearAccountOwners
accountOwnerAtIndex:
unknownRecordsCount
clearUnknownRecords
unknownRecordAtIndex:
clinicalRecordsCount
clearClinicalRecords
clinicalRecordAtIndex:
coverageRecordsCount
clearCoverageRecords
coverageRecordAtIndex:
medicationOrderType
medicationDispenseRecordType
medicationRecordType
diagnosticTestResultType
diagnosticTestReportType
vaccinationRecordType
conditionRecordType
allergyRecordType
procedureRecordType
unknownRecordType
clinicalRecordType
coverageRecordType
setMedicationOrders:
setMedicationDispenseRecords:
setMedicationRecords:
setDiagnosticTestResults:
setDiagnosticTestReports:
setVaccinationRecords:
setConditionRecords:
setAllergyRecords:
setProcedureRecords:
setAccountOwners:
setUnknownRecords:
setClinicalRecords:
setCoverageRecords:
_accountOwners
_allergyRecords
_clinicalRecords
_conditionRecords
_coverageRecords
_diagnosticTestReports
_diagnosticTestResults
_medicationDispenseRecords
_medicationOrders
_medicationRecords
_procedureRecords
_unknownRecords
_vaccinationRecords
rebaseRequiredByDate:profile:error:
cloudSync_reportRebaseTriggeredByDeletionByUser:
initWithProfile:storeIdentifier:syncCircleName:ownerIdentifier:containerIdentifier:sharingIdentifier:predicate:error:
initWithServerChangeToken:baselineEpoch:rebaseDeadline:lastSyncDate:emptyZones:lastCheckDate:ownerIdentifier:containerIdentifier:syncProtocolVersion:
persistState:storeUUID:shouldReplace:healthDatabase:error:
getSyncAnchorsOfType:anchorMap:store:profile:error:
resetSyncStore:profile:error:
updateSyncAnchorsWithMap:type:updateDate:store:updatePolicy:resetInvalid:profile:error:
stateWithGapEncountered:
syncStoreForProfile:storeIdentifier:syncCircleName:ownerIdentifier:containerIdentifier:sharingIdentifier:predicate:error:
receivedSyncAnchorMapWithError:
_syncAnchorMapByStrippingBlacklistedEntities:
canPush
sharingIdentifier
sharingPredicate
syncTombstonesOnly
_syncEpoch
_syncProtocolVersion
_canPush
_syncTombstonesOnly
_sharingIdentifier
_sharingPredicate
distance
initWithProfile:collectedDistanceType:
_distanceType
startOdometerUpdatesForActivity:withHandler:
stopOdometerUpdates
_createZonesOperationForContainer:
_deleteIndividualZonesOperationForContainer:
_deleteUnifiedZoneStoresAndMedicalIDOperationForContainer:
_leaveSharesOperationForContainer:
_isSecureSecondaryContainer:
_persistMedicalIDToDisk:errorOut:
medicalIDDataToPersist
_medicalIDDataToPersist
activityCacheForIndex:profile:encodingOptions:error:
_shouldIncludeActivityCachePrivateProperties
_shouldIncludeActivityCacheStatistics
_decodeActivityQuantityStatisticsInfosWithRow:column:
_setEnergyBurnedGoalOnly:
_applyPrivateActivityCachePropertiesToObject:persistentID:row:
_applyActivityCacheStatisticsToObject:persistentID:row:
_activityStatisticsQuantityInfoClasses
_cinar_addSyncPrimaryColumnToSourcesWithError:
_cinar_removeDetailsFromDeletedSourcesWithError:
_cinar_addSourceAndDeviceIndicesWithError:
_cinar_convertLocalDevicePlaceholderSourcesWithError:
_cinar_addObjectAuthorizationAndActivityCacheIndicesWithError:
cinarUnprotectedMigrationSteps
cinarProtectedMigrationSteps
remote_fetchBadgeForDomain:completion:
remote_setBadge:forDomain:completion:
remote_postCompanionUserNotificationOfType:completion:
remote_postNotificationWithRequest:completion:
hasOntologyFeaturesEnabled
isCountryCodeSupported:
ontologyConfiguration
hasHealthRecordsAccounts
ontologyAvailabilityRequiresAccounts
_disableAllManagers
_enableAllManagers
_evaluateManagerState
ontologyTester
ontologyReadyComplete:
profileExtension:accountEventOccurred:
isCountrySupported:
allSupportedCountryCodes
improveHealthRecordsGatedAnalyticsEnabledCountryCodes
optInDataCollectionEnabledCountryCodes
setOntologyTester:
setAssetManager:
setOntologyManager:
setOntologyConfiguration:
isReady
setReady:
unitTesting_ontologyConfigurationOverride
setUnitTesting_ontologyConfigurationOverride:
_ready
_assetManager
_ontologyManager
_indexManager
_ontologyConfiguration
_ontologyTester
_unitTesting_ontologyConfigurationOverride
_setupRecoveryState:
_queue_sessionPrepared
_queue_sessionFinished
_queue_reconnectFitnessMachineFromRecoveryState:
_queue_storeSessionRecoveryConfiguration:
storeSessionControllerState:forRecoveryIdentifier:error:
prepareWithError:
startActivityWithDate:error:
stopActivityWithDate:error:
endWithError:
pauseWithError:
resumeWithError:
generateError:
_defaultSessionController
_acceptsDataAccumulators
_currentAccumulator
_sourceIterator
_keyPaths
_seenValues
latestDateForProperty:sampleTypes:profile:error:
latestModifiedDateWithProfile:error:
FHIRIdentifierWithString:error:
_applyConceptIndexToObject:profile:error:
_resetConceptIndexDueToError:profile:
indexableObjectWithObject:compoundIndex:
applyConcepts:forKeyPath:error:
initWithLocaleIdentifier:
_setState:
_createSchemaMigrationTableIfNeededForDatabaseName:error:
_schemaTableNameForDatabaseName:
_createdDatabaseNames
_repairRecordsForContainer:database:
_repairStoreRecordsForZone:
_repairStoreRecord:unifiedSyncZone:
_repairStoreRecordWithRandomOwnerIdentifier:
ownerIdentifiers
storeIdentifiersForOwnerIdentifier:
_setConditionCodingCollection:
_setCategoriesCodingCollections:
_setAbatement:
_setOnset:
_setClinicalStatusCoding:
_setVerificationStatusCoding:
_setSeverityCodingCollection:
peripheral
handleBatteryLevel:
_batteryCharacteristic
failureReason
setFailureReason:
setHasFailureReason:
hasFailureReason
failureReasonAsString:
StringAsFailureReason:
setHasStage:
hasStage
stageAsString:
StringAsStage:
action
setAction:
setHasAction:
hasAction
actionAsString:
StringAsAction:
setRetryExpected:
setHasRetryExpected:
hasRetryExpected
retryExpected
_action
_failureReason
_retryExpected
setTypeIdentifier:
setHasTypeIdentifier:
hasTypeIdentifier
setInSession:
setHasInSession:
hasInSession
setMinDelayUs:
setHasMinDelayUs:
hasMinDelayUs
setMaxDelayUs:
setHasMaxDelayUs:
hasMaxDelayUs
setMeanDelayUs:
setHasMeanDelayUs:
hasMeanDelayUs
setStdDelayUs:
setHasStdDelayUs:
hasStdDelayUs
setSampleCount:
setHasSampleCount:
hasSampleCount
setIndexInSession:
setHasIndexInSession:
hasIndexInSession
typeIdentifier
inSession
minDelayUs
maxDelayUs
meanDelayUs
stdDelayUs
sampleCount
indexInSession
_indexInSession
_maxDelayUs
_meanDelayUs
_minDelayUs
_sampleCount
_stdDelayUs
_typeIdentifier
_inSession
initWithProfile:configuration:queue:
_queue_runDemoDataGeneratorForDemoPerson:endDate:completion:
_archiveCurrentState
_queue_loadDemoDataSampleGeneratorState
_queue_initDemoDataSampleGenerators
_insertBiographicalDataFromDemoPerson:
_insertMedicalIDForDemoPerson:
_initialGenerationTimeWithDate:
dateWithTimeIntervalSince1970:
_timeIntervalFromInitialGenerationPeriod:currentDate:
_queue_generateDataForDemoPerson:startDate:endDate:firstRun:completionHandler:
_phoneProveance
_queue_unarchiveState
_queue_setupDemoDataSampleGenerators
_queue_generateFirstRunDataForDemoPerson:
_queue_generateDataForDemoPerson:numIntervals:
_insertIntoDatabaseObjectCollection:fromPerson:
_updateWorkoutConfigurationInGeneratorStateWithSampleDate:
isDifferentDayFromTime:
_watchProvenanceWithPerson:
_appProvenanceWithBundleIdentifier:
enumerateKeysAndObjectsWithOptions:usingBlock:
_appSourceWithBundleIdentifier:
_workoutPrototypesIfEnsureRecentWorkoutHasRouteIsYes
isDateInYesterday:
isDateInToday:
_archiveObject:error:
_unarchiveDataWithClass:error:
generateThroughEndDate:completion:
setDemoPerson:
setActivitySampleGenerator:
audioExposureSampleGenerator
setAudioExposureSampleGenerator:
audiogramSampleGenerator
setAudiogramSampleGenerator:
bloodSampleGenerator
setBloodSampleGenerator:
setBodySampleGenerator:
setFoodSampleGenerator:
healthDocumentSampleGenerator
setHealthDocumentSampleGenerator:
heartSampleGenerator
setHeartSampleGenerator:
mindfulnessSampleGenerator
setMindfulnessSampleGenerator:
mobilitySampleGenerator
setMobilitySampleGenerator:
otherAndAdditionalSampleGenerator
setOtherAndAdditionalSampleGenerator:
pathologySampleGenerator
setPathologySampleGenerator:
reproductiveHealthSampleGenerator
setReproductiveHealthSampleGenerator:
setSleepSampleGenerator:
setStatisticsSampleGenerator:
symptomsSampleGenerator
setSymptomsSampleGenerator:
setVitalsSampleGenerator:
_sampleGenerators
_appProvenances
_generatorState
_gregorianCalendar
_numHKSamples
_isGeneratingDemoData
_demoPerson
_activitySampleGenerator
_audioExposureSampleGenerator
_audiogramSampleGenerator
_bloodSampleGenerator
_bodySampleGenerator
_foodSampleGenerator
_healthDocumentSampleGenerator
_heartSampleGenerator
_mindfulnessSampleGenerator
_mobilitySampleGenerator
_otherAndAdditionalSampleGenerator
_pathologySampleGenerator
_reproductiveHealthSampleGenerator
_sleepSampleGenerator
_statisticsSampleGenerator
_symptomsSampleGenerator
_vitalsSampleGenerator
valueStore
hd_setEncryptedValuesIfChanged:
_deleteZonesOperation
_fetchDatabaseChangesOperationForDeleteOperation:
hd_wasCancelledWithError:
initWithPreviousServerChangeToken:
addDependency:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasPurgedBlock:
setRecordZoneWithIDWasDeletedBlock:
defaultRecordZone
setRecordZoneIDsToDelete:
setFetchDatabaseChangesCompletionBlock:
_startObservingPowerSavingModeSetting
_stopObservingPowerSavingModeSetting
_queue_enablePowerSavingIfNeededForOwnerIdentifier:
_queue_disablePowerSavingIfNeeded
refresh
telephonyStateWithBundleIdentifierOut:
setTelephonyState:fromBundleID:
_queue_powerSavingModeDidChange
_powerSavingModeDidChange
_powerSavingModeEnabled
_supportsCellularTelephony
_disableAOTAssertion
setCurrentLocation:
setTriggerTypes:
setHasTriggerTypes:
hasTriggerTypes
hasCurrentLocation
triggerTypes
currentLocation
_triggerTypes
_currentLocation
authorizationRecordsBySourceForType:profile:error:
allSourcesRequestingTypes:profile:error:
readTaskIdentifier
remote_fetchAuthorizationRecordsForSourceBundleIdentifier:completion:
remote_fetchAuthorizationRecordsForType:completion:
remote_fetchSourcesRequestingAuthorizationForTypes:completion:
remote_fetchAuthorizationStatusesForDocumentType:sourceBundleIdentifier:completion:
remote_fetchAuthorizationStatusesForSampleUUID:completion:
_stopObservingSignificantTimeChangeNotification
_startObservingSignificantTimeChangeNotification
_queue_setNeedsMaintenanceNotifyAndSchedule:
_queue_enqueueMaintenanceNotifyAndScheduleWithReason:
_queue_significantTimeChangeDidOccur
_queue_updateProtectedDataObserverStateIfRequired
_queue_runMaintenanceNotifyAndScheduleWithReason:
_queue_processDueEventsWithCompletion:
systemScheduler
_queue_notifyClientsOfDueEventsAndScheduleNextFireDateWithError:
_queue_fetchCurrentWristStateWithCompletion:
_currentDate
_enumerateAllAlarmEventsWithError:enumerationHandler:
_queue_registerForLockStateUpdates:
_queue_registerForWristStateUpdates:
eventsDidFire:
_queue_beginReceivingSystemEventsIfNecessary
_performWriteTransactionAndFireEventsWithError:block:
removeAllEventsWithClientIdentifier:error:
replaceAllScheduledEventsWithClientIdentifier:newEvents:error:
scheduledEventsForClientIdentifier:error:
checkForDueEventsImmediatelyWithCompletion:
isRegisteredForOnWristUpdates
isRegisteredForLockStateUpdates
_hasInitializedSystemScheduler
_maintenanceOperationQueued
_needsMaintenanceNotifyAndSchedule
_needsLockStateUpdates
_isDeviceOnWrist
_isRegisteredForOnWristUpdates
_isRegisteredForLockStateUpdates
_systemScheduler
noneDeviceID
_noneDevice
deviceEntityWithDevice:healthDatabase:error:
setNoneDeviceID:
deviceInHealthDatabase:error:
deviceEntitiesWithDevice:healthDatabase:error:
deviceEntitiesWithProperty:matchingValues:healthDatabase:error:
deviceEntitiesWithProperty:matchingValues:error:
deviceEntitiesForDevice:error:
devicesByPersistentID
setDevicesByPersistentID:
deviceEntitiesByDevice
setDeviceEntitiesByDevice:
_devicesByPersistentID
_deviceEntitiesByDevice
_noneDeviceID
hd_cloudKitErrorRequiringUserActionFromCKErrorDomain
setFetchLocationResponse:
setFetchNextLocationResponse:
hasFetchLocationResponse
hasFetchNextLocationResponse
fetchLocationResponse
fetchNextLocationResponse
_fetchLocationResponse
_fetchNextLocationResponse
initWithSessionIdentifier:workoutConfiguration:client:processBundleIdentifier:applicationIdentifier:requiresCoreLocationAssertion:supportsAppRelaunchForRecovery:
_requiresCoreLocationAssertion
_supportsAppRelaunchForRecovery
_clientProcessBundleIdentifier
_clientApplicationIdentifier
intervalComponents
anchorDate
_queue_fetchAndDeliverAllStatistics
_queue_updateStatistics
_queue_performUpdate
initWithSeries:anchor:
addQuantity:dateInterval:
_queue_didReceiveQuantity:type:dateInterval:series:anchor:
_queue_scheduleUpdate
_queue_deliverUpdatedStatistics:error:
_queue_filteredPendingSeriesWithError:
quantities
performAddSampleTransaction:error:
client_deliverStatisticsBatch:resetStatistics:isFinal:anchor:query:
_queue_sendAccumulatedStatistics:isFinal:statisticsCount:shouldResetStatistics:
_queue_accumulateUpdatedStatistics:accumulatedStatistics:sendHandler:
setShouldContinueFrequency:
setShouldContinueHandler:
client_deliverUpdatedStatistics:anchor:query:
_queue_objectIsRelevant:
unitTest_queryServerStatisticsEnumerationHandler
setUnitTest_queryServerStatisticsEnumerationHandler:
unitTest_queryServerUpdateStatisticsHandler
setUnitTest_queryServerUpdateStatisticsHandler:
unitTest_queryServerUnableToUpdateStatisticsHandler
setUnitTest_queryServerUnableToUpdateStatisticsHandler:
_intervalCollection
_sourceOrderProvider
_calculator
_pendingQuantitiesBySeries
_addedSamplesRequireProtectedData
_requiresFetch
_hasScheduledUpdate
_anchorDate
_unitTest_queryServerStatisticsEnumerationHandler
_unitTest_queryServerUpdateStatisticsHandler
_unitTest_queryServerUnableToUpdateStatisticsHandler
initWithQuantity:dateInterval:
_quantities
registerTaskServerClasses:error:
_lock_registerTaskServerClass:error:
_lock_loadTaskServersFromPluginAtURL:error:
loadPrincipalClassConformingToProtocols:fromBundleAtURL:skipIfLoaded:
initWithTaskServerClass:taskConfiguration:healthStoreConfiguration:taskUUID:profile:connectionQueue:
registerTaskServerClass:error:
loadTaskServersFromPluginAtURL:error:
taskServerForTaskUUID:
removeObserver:forTaskServerUUID:
removeTaskServerObserver:
_taskServerClassesByTaskIdentifier
_taskServersByUUID
_taskServerObserversByUUID
_loadedPluginURLs
_sourceOrderForTypeCode:
_sumSourceTotals:orderedSources:
_workoutIdentifiersStringForActiveSource:
_loggingPrefix
_logActiveSourcesList:
_resetAllCachedValues
_clearActiveSources
_clearCachedValueForTypeCode:
_activeSourceVectorFromActivationLogSamples:
_addSample:toSourceTotals:fromWorkout:
_addSamples:toSourceTotals:fromWorkout:
_sourceMapIsEmpty:
_minTimestampInSourceTotals:
_maxTimestampInSourceTotals:
_sumSourceTotals:orderedSources:strictStartTime:strictEndTime:
_initWithDataType:startDate:endDate:
setSumQuantity:
_createStatisticsForType:withIntervalComponents:calendar:
initWithStartDate:endDate:source:
_loadActiveSourceList
createStatisticsCollectionWithType:intervalComponents:calendar:
intervalDuration
setIntervalDuration:
sourceOrderDelegate
_standHourSamples
_activationLogSamples
_lastActiveEnergyValue
_lastMoveMinuteValue
_lastDistanceWalkingValue
_lastFlightsClimbedValue
_lastStepCountValue
_lastPushCountValue
_lastStandHourValue
_lastExerciseMinuteValue
_deepBreathingDurationValue
_activeSourcesList
_sourceTotalsByIntervalIndexByTypeCode
_builderStartTime
_builderEndTime
_loggingName
_intervalDuration
_sourceOrderDelegate
preparationHandler
_recordError:
_compoundError
_runRemainingOperations
_popNextRunnableOperation
_clearOperationAndRunRemaining:
_currentOperation:didFailWithError:nextOperation:transitionHandler:
_currentOperationDidFinish:nextOperation:transitionHandler:
continueOnSubOperationError
_currentOperation
_remainingOperations
_runningOperations
_operationErrors
_continueOnSubOperationError
_preparationHandler
setEntityType:
setHasEntityType:
hasEntityType
_entityType
setHasBedtimeToCorrectedBedtimeMinutes:
hasBedtimeToCorrectedBedtimeMinutes
setHasBedtimeToFirstSleepInterruptionMinutes:
hasBedtimeToFirstSleepInterruptionMinutes
setHasBedtimeToStartOfLongestSleepIntervalMinutes:
hasBedtimeToStartOfLongestSleepIntervalMinutes
setHasCorrectedBedtimeToThirdPartySleepOnsetMinutes:
hasCorrectedBedtimeToThirdPartySleepOnsetMinutes
setHasWakeupTimeToThirdPartyWakeupTimeMinutes:
hasWakeupTimeToThirdPartyWakeupTimeMinutes
setHasPercentOfDesiredSleep:
hasPercentOfDesiredSleep
setHasBedtimeHour:
hasBedtimeHour
setHasBedtimeMinute:
hasBedtimeMinute
setHasWakeupIsOnWeekday:
hasWakeupIsOnWeekday
bedtimeToCorrectedBedtimeMinutes
bedtimeToFirstSleepInterruptionMinutes
bedtimeToStartOfLongestSleepIntervalMinutes
correctedBedtimeToThirdPartySleepOnsetMinutes
wakeupTimeToThirdPartyWakeupTimeMinutes
percentOfDesiredSleep
bedtimeHour
bedtimeMinute
wakeupIsOnWeekday
_bedtimeHour
_bedtimeMinute
_bedtimeToCorrectedBedtimeMinutes
_bedtimeToFirstSleepInterruptionMinutes
_bedtimeToStartOfLongestSleepIntervalMinutes
_correctedBedtimeToThirdPartySleepOnsetMinutes
_percentOfDesiredSleep
_wakeupTimeToThirdPartyWakeupTimeMinutes
_wakeupIsOnWeekday
orderedSourceIDsWithUnorderedIDs:
sourceForSourceID:
_encryptToken:error:
_tokenDataFromToken:error:
_generateInitializationVectorWithError:
_encryptTokenData:initializationVector:operation:error:
_encryptedTokenDataWithInitializationVector:payload:
_decryptTokenData:error:
_initializationVectorFromEncryptedTokenData:error:
_payloadFromEncryptedTokenData:error:
_tokenFromTokenData:error:
_credentialKeyWithError:
_shouldProceedWithEncryptionAfterStatus:error:
_assignCredentialManagerError:code:format:
_encryptedTokenDataHasInitializationVector:error:
subdataWithRange:
_tokenByStrippingPaddingFromToken:
_assignCredentialManagerError:code:description:
_validateToken:error:
dataUsingEncoding:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
_credentialKeyFingerprintWithError:
credentialKeyQueue
_retrieveCredentialKeyFromKeychainWithError:
_credentialKeyBaseAttributes
_credentialKeyQuery
_attributesForCredentialKey:
_storeCredentialKeyInKeychain:error:
_generateRandomBytesOfLength:error:
encryptToken:error:
credentialKeyFingerprintWithError:
unitTesting_retrieveCredentialKeyFromKeychainWithError:
unitTesting_storeCredentialKeyInKeychain:error:
_generateCredentialKeyWithError:
cachedCredentialKey
setCachedCredentialKey:
_error:isCredentialManagerErrorWithCode:
_cachedCredentialKey
_credentialKeyQueue
syncSchemaIdentifier
_lock_loadSyncEntities
syncEntitiesByIdentifier
_lock_allOrderedSyncEntities
_lock_allSyncEntitiesByIdentifier
_queue_sendUpdatedResultsToClient
_queue_samplesAdded:
_queue_samplesOfTypesWereRemoved:
_queue_updateTimePeriodsForSampleTypes:
dateRangeClientProxy
client_deliverDateIntervals:forQuery:
_queue_protectedDataBecameAvailable
_resultsDirty
_dateIntervalsBySampleType
_sampleTypesToReFetch
_freezeSeriesForType:
initWithPath:fileSystem:
stringByDeletingPathExtension
stringByAppendingPathExtension:
_convertExceptionsToError:inBlock:
_lock_primitiveOpenHighFrequencyDataStoreWithError:
_lock_openHighFrequencyDataStoreWithError:
_lock_highFrequencyDataStoreWithError:
_highFrequencyDataStoreWithError:
_fileSystem
_highFrequencyDataStore
_hasOpenStore
_openQueue
_fileSystemPath
waitUntilDate:
signal
initWithObjectsToInsertByDataProvenance:objectsToDelete:associations:
objectsToInsertByDataProvenance
objectsToDelete
associations
_objectsToInsertByDataProvenance
_objectsToDelete
_associations
_newAssetDownloadManager
_userDefaultOverrideAssetFileURL
_localFileURLForAsset:
URLForKey:
hd_contentVersion
simulatedCompatibilityVersion
hd_availability
_registerNotifyDispatchHandler
_lock_schedulePeriodicActivity
_lock_assetAvailability
_updateAssetCatalogForReason:
_lock_unschedulePeriodicActivity
_catalogUpdateIntervalOverride
_newPeriodicActivityWithName:
setCatalogUpdatePeriodicActivity:
_downloadManagerCallbackQueue_catalogUpdateDidComplete:
_downloadManagerCallbackQueue_catalogUpdateDidFail:
setMaxNumberOfRetriesAllowed:
setShouldAutoDownloadRemoteAssets:
_normalIntervalForActivityNamed:
completionsByActivityName
_retryIntervalForActivityNamed:
assetDownloadManager
_downloadManagerCallbackQueue_assetDownloadDidComplete:
_downloadManagerCallbackQueue_assetDownloadDidFail:
downloadMobileAssets:completion:
assetDownloadEnabled
_effectiveSystemCompatibilityVersion
shouldAutoDownloadRemoteAssets
catalogUpdatePeriodicActivity
interval
_lock_invokeCompletionForPeriodicActivityName:withResult:error:
_postAWDMetricEventWithAssetDownloadPhase:
_bestAssetInArray:
purgeSync
_lock_saveContentInfoForAsset:
_lock_invokeAvailabilityHandlers
_startAssetDownload
_ignoreAssetEqualityComparison
refreshState
hd_compatibilityVersion
_lastModifiedDateForFileAtURL:
_lock_currentOntologyAssetFileURL
_hoursSinceLastModifiedForFileAtURL:
setDownloadPhase:
setHoursSinceLastAssetDownload:
AWDMetricPosterBlock
setURL:forKey:
setCurrentOntologyAsset:
setAWDMetricPosterBlock:
latestOntologyAsset
currentOntologyAsset
setSimulatedCompatibilityVersion:
setAssetDownloadEnabled:
_assetDownloadManager
_downloadManagerCallbackQueue
_handlerInvocationQueue
_notificationRegistrationToken
_registeredHandlers
_assetDownloadEnabled
_AWDMetricPosterBlock
_latestOntologyAsset
_completionsByActivityName
_currentOntologyAsset
_simulatedCompatibilityVersion
_catalogUpdatePeriodicActivity
assetProperty:
setupStatusTaskIdentifier
setupStatusServerInterface
setupStatusClientInterface
remote_medicalIDSetUpStatusWithCompletion:
hdt_quantityDatumForType:startTime:endTime:value:
_deleteReplacedSequence
_pushNewSequence
_updateDisplayNameForRegistryRecord:error:
addStoreIdentifier:ownerIdentifier:
shouldClearRebaselineDeadline
stateByResettingRebaselineDeadline
_replacedSequenceRecord
_shouldClearRebaselineDeadline
setCloudDescription:
_accumulatedDescription
_cloudDescription
addViews:
setExperimentalCondition:
setCalendarItem:
viewsCount
clearViews
viewsAtIndex:
setActivityCache:
setAchievement:
setWeeklySummaryDetail:
goalTypesCount
clearGoalTypes
goalTypesAtIndex:
addGoalTypes:
setResponseFlags:
viewsType
alertType
setAlertType:
setHasAlertType:
hasAlertType
alertTypeAsString:
StringAsAlertType:
setDndEnabled:
setHasDndEnabled:
hasDndEnabled
setFailedPosting:
setHasFailedPosting:
hasFailedPosting
hasExperimentalCondition
testAction
setTestAction:
setHasTestAction:
hasTestAction
testActionAsString:
StringAsTestAction:
hasCalendarItem
hasActivityCache
hasAchievement
hasWeeklySummaryDetail
goalTypes
setGoalTypes:count:
hasResponseFlags
dndEnabled
failedPosting
experimentalCondition
calendarItem
views
setViews:
activityCache
achievement
weeklySummaryDetail
responseFlags
_goalTypes
_achievement
_activityCache
_alertType
_calendarItem
_experimentalCondition
_responseFlags
_testAction
_views
_weeklySummaryDetail
_dndEnabled
_failedPosting
setAppleID:
setCallerID:
hasAppleID
hasCallerID
_appleID
_callerID
filterDictionary
_filterCorrelatedObjectsWithFilterDictionary:
_containsObjects
_correlatedObjectsMatchFilterDictionary:
client_deliverCorrelations:clearPendingSamples:isFinalBatch:queryUUID:
batchObjectsWithEnumerator:error:handler:
dataFilters
_permitPartiallyFilteredCorrelations
_dataFilters
_reportSnapshotWithType:subType:context:processIdentifier:thresholdValues:
unitTesting_didReportHandler
setUnitTesting_didReportHandler:
_unitTesting_didReportHandler
_objectsWithIDs:profile:
_addCorrelatedObjects:
_initializeWideBucketDatesFromStartDate:endDate:anchorDate:intervalComponents:
hk_negativeComponents
initWithStartDate:endDate:anchorDate:intervalComponents:histogramBucketAnchor:histogramBucketSize:
addDataPoint:startTime:endTime:
quantityDistributionsWithUnit:
validateDateSequenceForTesting:
_isWideIntervalComponents:
_dateComponentsToInterval:
_histogramState
initWithStartDate:endDate:minimumBucketValue:minimumValue:maximumValue:averageValue:duration:histogramCounts:
goalTypeAtIndex:
addGoalType:
setFeatures:
setEventType:
setHasEventType:
hasEventType
setRecommendedGoal:
setHasRecommendedGoal:
hasRecommendedGoal
setNewGoal:
setHasNewGoal:
hasNewGoal
hasFeatures
recommendedGoal
newGoal
features
_eventType
_features
_newGoal
_recommendedGoal
_confirmAndDeleteEmptyZonesInContainer:database:
_validateZonesAreEmptyWithDeletionCandidates:configurations:container:database:
_deleteEmptyZones:container:database:
_workoutBuilderEntitiesForPredicate:profile:error:
configurationWithTransaction:error:
workoutEventsInTransaction:error:
enumerateStatisticsInTransaction:error:block:
quantityTypesIncludedWhilePausedInTransaction:error:
_setupForEnumerationOfType:interval:profile:error:handler:
dataIntervalInTransaction:error:
_createTemporaryProtectedAssociatedSampleListInTransaction:error:
_predicateForAssociatedSamplesOfType:interval:associatedSampleTableName:transaction:error:
withLocalTableName:error:block:
_setupForEnumerationOfType:interval:transaction:error:handler:
_enumerateAssociatedSamplePropertiesInTransaction:error:handler:
_queryForAssociatedSamplePropertyEnumerationInTransaction:predicate:
storeDataSourceWithIdentifier:archivedState:workoutBuilder:transaction:error:
removeDataSourceWithIdentifier:fromWorkoutBuilder:transaction:error:
enumerateDataSourcesForWorkoutBuilder:transaction:error:block:
workoutBuilderEntitiesForSource:profile:error:
workoutBuilderEntitiesExcludingSessions:profile:error:
createEntityForBuilderConfiguration:profile:error:
finishWorkoutBuilderWithIdentifier:dateInterval:profile:error:
sessionIdentifierWithTransaction:error:
setSessionIdentifier:transaction:error:
startDateInTransaction:error:
setStartDate:transaction:error:
endDateInTransaction:error:
setEndDate:transaction:error:
setDataInterval:transaction:error:
setQuantityTypesIncludedWhilePaused:transaction:error:
setMetadata:transaction:error:
setDeviceEntity:transaction:error:
setWorkoutConfiguration:transaction:error:
associateObject:transaction:error:
enumerateAssociatedSamplesOfType:interval:profile:error:sampleHandler:
insertWorkoutEvent:transaction:error:
deleteStatisticsForType:transaction:error:
storeStatisticsCalculator:anchor:transaction:error:
setArchivedState:forDataSourceIdentifier:profile:error:
removeDataSourceWithIdentifier:profile:error:
enumerateDataSourcesForProfile:error:block:
setByAddingObject:
_computeHumeLeanBodyWeightFromWeight:height:sex:
_computeOther1LeanBodyWeightFromWeight:height:sex:
_computeOther2LeanBodyWeightFromWeight:sex:waistCircumference:forearmCircumference:wristCircumference:hipCircumference:
convertDegreeCelsiusToFahrenheit:
convertDegreeFahrenheitToCelsius:
_fillValueBufferWithError:
_addToBufferTimestamp:value:duration:
_unitTesting_addToBufferTimestamp:value:duration:isLastDatum:
HFDKey
objectIdentifier
setObjectIdentifier:
hasFetchedData
setHasFetchedData:
lastFetchedDatumTime
setLastFetchedDatumTime:
lastDatumTime
setLastDatumTime:
hasFetchedAllData
setHasFetchedAllData:
_hasFetchedData
_hasFetchedAllData
_hasDeterminedSeriesVersion
_isVersion1
_hasDuration
_index
_previousEndTime
_UUIDBytes
_dataTypeCode
_HFDKey
_lastFetchedDatumTime
_lastDatumTime
_objectIdentifier
_servicePredicate:
_servicesWithDatabaseTransaction:profile:removals:
insertOrUpdateService:healthDatabase:error:
deleteService:healthDatabase:error:
allServicesWithProfile:error:
healthUpdatesEnabledForDevice:inDatabase:error:
setHealthUpdatesEnabled:forDevice:inDatabase:error:
setLastConnection:
setHasEra:
setHasYear:
setHasMonth:
setHasDay:
setHasHour:
setHasMinute:
setHasSecond:
setHasWeekday:
setHasWeekdayOrdinal:
setHasQuarter:
setHasWeekOfMonth:
setHasWeekOfYear:
setHasYearForWeekOfYear:
setHasNanosecond:
_day
_era
_hour
_minute
_month
_nanosecond
_quarter
_second
_weekOfMonth
_weekOfYear
_weekday
_weekdayOrdinal
_year
_yearForWeekOfYear
_timeZone
anchorIfPresentForSyncEntityIdentifier:
isAllZero
anchorsByEntityIdentifier
setAnchorsByEntityIdentifier:
_anchorsByEntityIdentifier
observedType
defaultCollectionInterval
_retrieveContextForKey:domain:profile:
_persistContext:forKey:
_retrieveContextForKey:
_sensorDatumFromContext:
secondaryContextClasses
_queue_resetFailureRetryCounter
_performSync:
_performAsync:
_queue_disabled
stopPerformingUpdatesWithErrorEncountered:
_queue_beginStreamingIfNecessary
_queue_streaming
_queue_transitionToStreaming
_queue_beginStreaming
_queue_retryFromFailure
_queue_updateCollectionInterval:
_queue_transitionToIdle
updateHistoricalDataForcedUpdate:completion:
_queue_shouldRetryFromFailure
_queue_incrementFailureRetryCounter
_primaryContextExistsForDomain:profile:
_lastReceivedSensorDatumForProfile:
collectionStartedForType:collectionInterval:
updateCollectionInterval:forType:
collectionStoppedForType:
updateHistoricalData
updateHistoricalDataWithCompletion:
dataCollectorDiagnosticDescription
disabled
setDisabled:
initWithPrimaryProfile:
_persistPrimaryContext:
_persistSecondaryContext:
_retrievePrimaryContext
_retrieveSecondaryContext
_contextFromSensorDatum:
_contextFromDictionary:
_dictionaryFromContext:
_queue_receivedData
_queue_deviceEntity
_queue_transitionToFailure
_observedType
_failureRetryCount
_disabled
_queue_handleSensorDatum:context:
beginUpdatesWithHandler:
hkObjectsFromSensorDatum:context:
sensorDataArrayReceived:deviceEntity:error:
_queue_executeHistoricalFetchOperation
enableLoggingWithName:category:
_queue_handleUpdatingHistoricalDataWithCompletion:
_queue_maxDatumDuration
_queue_beginUpdates
_queue_lastReceivedSensorDatum
_queue_aggregationInterval
beginUpdatesFromDatum:withHandler:
_queue_updateLastReceivedSensorDatum:
_queue_handleUpdatingHistoricalDataForcedUpdate:completion:
_queue_handleCMDatabaseReset
_queue_fetchHistoricalDataForcedUpdate:completion:
_queue_fetchHistoricalDataWithCompletion:
_queue_processSensorData:lastSensorDatum:completion:
fetchHistoricalSensorDataSinceDatum:databaseIdentifier:completion:
requiresSampleAggregation
_queue_processSensorDataBatched:firstDatum:lastSensorDatum:
hkObjectsFromSensorData:baseSensorDatum:startDate:endDate:
willPersistHKObjects:
maxDatumDuration
setMaxDatumDuration:
_queue_lastReceivedSecondaryContext
_queue_updateLastReceivedSecondaryContext:
_historicalFetchOperation
_lastReceivedSensorDatum
_didReceiveSensorDatum
_lastReceivedSecondaryContext
_fetchingHistoricalData
_needsHistoricalFetch
_maxDatumDuration
pruneDatabaseWithAccessibilityAssertion:nowDate:error:
pruneDatabaseWithAccessibilityAssertion:nowDate:prunedObjectLimit:prunedObjectTransactionLimit:error:
_pruneDatabaseWithNowDate:prunedObjectLimit:prunedObjectTransactionLimit:error:
_setLastAttemptDate:completed:
getMinimumSyncAnchorsOfType:anchorMap:updatedSince:profile:error:
_minimumFrozenAnchorMapForPruningDate:error:
_lastAttemptDateWithCompleted:
timerSource
setTimerSource:
_activity
cloudSync_reportMissingManateeIdentityDuringFetchInContainer:zoneName:databaseScope:
cloudSync_reportOwnershipChangeForMissingManateeIdentityDuringPush
copyWithAnchor:
copyWithDeletionAnchor:forSampleType:
deletionAnchors
_generation
_deletionAnchors
eventWithIdentifier:dueDate:eventOptions:
replaceAllScheduledEventsWithEvents:error:
checkForDueEventsWithCompletion:
_eventsHandler
_outstandingEventIdentifiers
hasVaccinationCodings
hasExpirationDate
hasDoseNumber
hasDoseQuantity
hasPerformer
hasReaction
setHasNotGiven:
hasNotGiven
hasAdministrationDate
setHasPatientReported:
hasPatientReported
hasRouteCodings
hasReasonsCodings
hasReasonsNotGivenCodings
_administrationDate
_doseNumber
_doseQuantity
_expirationDate
_performer
_reaction
_reasonsCodings
_reasonsNotGivenCodings
_routeCodings
_vaccinationCodings
_notGiven
_patientReported
remote_registerClient:
remote_endFitnessMachineConnection
remote_endFitnessMachineConnectionForFitnessMachineSessionUUID:
remote_markClientReady
remote_simulateDisconnect
fitnessFriendWorkoutType
enumerateWorkoutsWithPredicate:anchor:profile:error:handler:
setHasCurrentOntologyVersion:
hasCurrentOntologyVersion
setHasHoursSinceLastAssetDownload:
hasHoursSinceLastAssetDownload
downloadPhase
setHasDownloadPhase:
hasDownloadPhase
downloadPhaseAsString:
StringAsDownloadPhase:
currentOntologyVersion
hoursSinceLastAssetDownload
_currentOntologyVersion
_hoursSinceLastAssetDownload
_downloadPhase
nextCommonColdSymptomsTime
nextFoodPoisoningSymptomsTime
nextSingleRandomSymptomTime
generateSingleSymptomSamplesForDemoPerson:atTime:sampleDate:objectCollection:
generateSymptomSamplesForDemoPerson:atTime:sampleDate:nextTime:condition:sampleTypes:frequency:objectCollection:
setNextCommonColdSymptomsTime:
setNextFoodPoisoningSymptomsTime:
setNextSingleRandomSymptomTime:
_nextCommonColdSymptomsTime
_nextFoodPoisoningSymptomsTime
_nextSingleRandomSymptomTime
_keyForDataType:error:
dateComponentsForKey:domain:category:profile:entity:error:
_canoncialUnit
_validateCharacteristic:error:
setDateComponents:forKey:domain:category:profile:error:
keyForUserCharacteristicType:
stopFakingData
startFakingDataForActivityType:speed:objectHandler:
generateFakeDataForActivityType:minutes:objectHandler:completion:
isProvidingData
_faker
isCompatibleWithPredicate:
initWithProperty:value:escapeCharacter:
predicateWithProperty:likeValue:escapeCharacter:
initWithProperty:value:comparisonType:
initWithProperty:value:comparisonType:influenceIndexUsage:
initWithProperty:ifPropertyIsNullValue:value:comparisonType:
initWithProperties:value:comparisonType:
_comparisonTypeString
predicateWithProperty:value:comparisonType:influenceIndexUsage:
predicateWithProperty:ifNullValue:value:comparisonType:
predicateWithCoalescedProperties:value:comparisonType:
comparisonType
_comparisonType
_influenceIndexUsage
escapeCharacter
_escapeCharacter
ifPropertyIsNullValue
_ifPropertyIsNullValue
_properties
_containsPredicateWithProperty:values:contains:
_arrayFromValues:
initWithProperty:values:contains:
contains
_contains
matchesNull
_matchesNull
predicateWithProperty:values:comparisonType:
predicateWithProperty:equalToValues:
predicates
predicateWithProperty:notEqualToValues:
_unary
_trueIfNoPredicates
_combinationOperation
_predicates
stringByReplacingCharactersInRange:withString:
_sql
joinClauses
predicateWithJoinClauses:
_joinClauses
enumerateSubstringsInRange:options:usingBlock:
workout_reportWorkoutCondenserEventWithReason:batchSize:hasWatchSource:duration:success:error:workoutsToCondense:workoutsToRecondense:condensedWorkouts:processedWorkouts:createdSeries:deletedSamples:
workout_reportGymKitWorkoutWithFitnessMachineType:manufacturer:timeToBeginExperience:workoutEndError:
initForQuantityType:intervalCollection:options:mergeStrategy:computationMethod:
calculatorForQuantityType:intervalCollection:options:mergeStrategy:computationMethod:
setMergeGranularity:
orderSourceIDs:
bundleIdentifierForSourceID:
intervalCollection
mergeGranularity
configureMergeAnchor:
dataSource
computationMethod
maskedIntervals
statisticsHandler
sourceOrderProvider
_implementation
_statisticsHandler
_computationMethod
_maskedIntervals
dateIntervalContainingDate:index:
_setSources:
secondUnit
setDurationBySource:
setDataCountBySource:
setAverageQuantity:
setMinimumQuantity:
setMaximumQuantity:
setMostRecentQuantity:
setMostRecentQuantityDateInterval:
setAverageQuantityBySource:
setMinimumQuantityBySource:
setMaximumQuantityBySource:
setMostRecentQuantityBySource:
setMostRecentQuantityDateIntervalBySource:
hk_dateIntervalWithStart:end:
dateIntervalAtIndex:
dateIntervalForIntervalsContainingInterval:
encodeBytes:length:forKey:
decodeBytesForKey:returnedLength:
setSumQuantityBySource:
_processBatchHandlerForResearchAppECGAccess:
setDeletedObjectsAnchor:
unitTest_queryServerObjectEnumerationHandler
setUnitTest_queryServerObjectEnumerationHandler:
unitTest_queryServerWillSendBatchHandler
setUnitTest_queryServerWillSendBatchHandler:
_unitTest_queryServerObjectEnumerationHandler
_unitTest_queryServerWillSendBatchHandler
finishOperationWithParticipantSharingStatus:
_enumerateObjectsWithDatabaseTransaction:error:handler:
_prepareDeletedObjectsAndSamplesDescriptor:error:
_metadataWithSyncIdentifier:syncVersion:
lastSQLStatement
_setOrderingTermsOnDescriptor:error:
improveJoinOrderingForStartDateIndexSelection
setPreferredEntityJoinOrder:
_prepareDescriptor:error:
_sortedJoinClauses:preferredOrder:baseTables:
_joinClauseForProperties:
encodingOptionForKey:
deletedObjectsAnchor
deletedObjectsPredicate
setDeletedObjectsPredicate:
ignoreEntityClassAdditionalPredicateForEnumeration
lastSQL
_useLeftJoin
_ignoreEntityClassAdditionalPredicateForEnumeration
_improveJoinOrderingForStartDateIndexSelection
_objectTypes
_deletedObjectsAnchor
_deletedObjectsPredicate
_lastSQL
statisticsIntervalComponents
_statisticsIntervalComponents
setCharacteristic:
expectResponse
setExpectResponse:
_expectResponse
_shouldNotifyReceivedData
_dataQueue_notifyCharacteristic:
_bufferCharacteristicToBeNotified:
characteristicReceived:device:
executeFirstWrite
respondFirstWriteWithData:error:
writeValue:forCharacteristic:type:
markCharacteristicsDiscovered
_dataQueue_deliverDataIfPossible
_dataQueue_deviceEntity
mfaSucceededOnPeripheral
peripheralUUID
serviceId
setServiceId:
writableCharacteristics
setWritableCharacteristics:
writeQueue
setWriteQueue:
pendingWrites
setPendingWrites:
_pendingCharacteristicBuffer
_deviceInformationLoaded
_characteristicsDiscovered
_healthPeripheral
_peripheralUUID
_serviceId
_writableCharacteristics
_pendingWrites
medicalRecordDescriptionsWithPredicate:futureMigrationsEnabled:
codingsForKeyPath:error:
indexableKeyPathsWithPrefix:
indexableConceptKeyPaths
cachedConceptRelationshipKeyPaths
sampleQueryDescriptionsFollowingAnchor:futureMigrationEnabled:
indexSample:profile:error:
_syncQueue_processSamplesWithLimit:countOfSamplesProcessed:error:
_syncQueue_processUpdatedSamplesWithLimit:countOfSamplesProcessed:error:
_syncQueue_processDeletedSamplesWithLimit:sampleType:countOfSamplesProcessed:error:
_syncQueue_resetWithError:
_hasWriteEntitlementWithError:
_clientRemoteObjectProxy
client_featureAvailabilityExtensionDidUpdateOnboardingCompletion
client_featureAvailabilityExtensionDidUpdatePairedDeviceCapability
featureAvailabilityExtensionForFeatureIdentifier:client:
_configureWithExtension:
remote_getIsCurrentOnboardingVersionCompletedWithCompletion:
remote_canCompleteOnboardingForCountryCode:completion:
remote_canCompleteOnboardingForCountryCode:devicePairingID:completion:
remote_onboardedCountryCodeSupportedStateWithCompletion:
remote_onboardedCountryCodeSupportedStateForDevicePairingID:completion:
remote_getIsFeatureCapabilitySupportedOnActivePairedDeviceWithCompletion:
remote_getIsFeatureCapabilitySupportedOnDeviceWithPairingID:completion:
remote_highestOnboardingVersionCompletedWithCompletion:
remote_earliestDateLowestOnboardingVersionCompletedWithCompletion:
remote_setCurrentOnboardingVersionCompletedForCountryCode:completion:
remote_resetOnboardingWithCompletion:
remote_startObservingChangesWithCompletion:
remote_stopObservingChanges
_extension
shouldGenerateDemoData
runningInStoreDemoModeF201
hk_startOfDateByAddingDays:toDate:
_queue_generateDemoDataIfNeeded
generator
_demoDataQueue
hk_startOfMinuteForDate:moduloMinutes:addingModuloCount:
extensionPointIdentifier
beginExtensionRequestWithOptions:inputItems:error:
_extensionContextForUUID:
_auxiliaryConnection
synchronousRemoteObjectProxyWithErrorHandler:
performCleanup
cancelExtensionRequestWithIdentifier:
didReceiveUpdateForSampleType:completionHandler:
backgroundObservationExtensionTimeWillExpire
unitTest_sessionUUID
unitTest_extensionContext
unitTest_extensionHostContext
unitTest_queue
appIdentifier
unitTest_notifiedExtensionDueToTimeout
setUnitTest_notifiedExtensionDueToTimeout:
_extensionHostContext
_extensionContext
_unitTest_notifiedExtensionDueToTimeout
_extensionIdentifier
_appIdentifier
setHasWLocationType:
hasWLocationType
setHasWLengthValue:
hasWLengthValue
_wLengthValue
_wLocationType
_wLengthUnitString
setDispatchQueue:
setChangeFlags:
powerSourceFound:
setPowerSourceFoundHandler:
powerSourceLost:
setPowerSourceLostHandler:
powerSource:changed:
setPowerSourceChangedHandler:
activateWithCompletion:
powerState
_queue_updatePrimaryPowerSourceState:
devicePowerMonitor:primaryPowerSourceIsCharging:
addDevicePowerObserver:queue:
removeDevicePowerObserver:
primarySourceIsCharging
_monitor
_isCharging
initWithConfiguration:cloudState:target:sequence:changes:
hasAppliedChange
_changeRecords
_hasAppliedChange
_addMirroringTask:
originalTask
_mirroringTasks
_originalTask
_considerStartingNextTask
_primitiveConsiderStartingNextTask
initWithDelegate:
pendingTaskCount
_pendingTasks
_pendingTasksBeingSorted
_isComputingActiveTask
_isStartingNextTask
_activeTask
_zoneOwnerNameWithError:
shouldFetchSubscriptions
setFetchSubscriptions:
invalidRecordIDs
_zoneOwnerName
_shouldFetchSubscriptions
updateLatestActivityDate:transaction:error:
lookupSessionWithIdentifier:profile:error:
createSessionWithIdentifier:source:configuration:state:profile:error:
sessionsForSource:profile:error:
sessionsExcludingIdentifiers:profile:error:
sessionIdentifierForRecoveryInProfile:expirationInterval:error:
workoutConfigurationWithTransaction:error:
hasFailedInTransaction:error:
setHasFailed:transaction:error:
clientBundleIdentifier:error:
setClientBundleIdentifier:transaction:error:
clientApplicationIdentifier:error:
setClientApplicationIdentifier:transaction:error:
sourceWithTransaction:error:
setSource:transaction:error:
associatedBuilderWithTransaction:error:
setAssociatedBuilder:transaction:error:
setState:transaction:error:
requestedTargetStateWithTransaction:error:
setRequestedTargetState:transaction:error:
finishWithTransaction:error:
latestActivityDateInTransaction:error:
updateLatestActivityDateWithTransaction:error:
_shareRecordIDsToDelete
initWithDateInterval:numberOfBuckets:sessionUUID:
calcRestingHeartRateWithMinReadings:readingsCount:filteredReadingsCount:
heartRateDateInterval
walkingAverageHeartRate
initWithActivityCacheIndex:heartRateDateInterval:restingHeartRate:walkingAverageHeartRate:allDayStatistics:workoutStatistics:workoutRecoveryStatistics:breatheStatistics:
hk_ageWithCurrentDate:
_countPerSecondUnit
_addHeartRateSamplesToAllStatistics:
_addHeartRateSamples:toStatistics:
initWithOptions:capacity:
hk_containsTime:
addHeartRateInBeatsPerMinute:forTime:
_addBeatsPerSecond:time:toSessionStatistics:
_updateMetricsForSessionStatistics:
_averageCalculatorForWorkoutStatistics:
_recoveryReadingsForWorkoutStatistics:
initWithDate:quantity:
_sessionReadingsForBreatheStatistics:
_updateMetricsForWorkoutStatistics:
_updateMetricsForWorkoutRecoveryStatistics:
_updateMetricsForBreatheStatistics:
_addHeartRateStatisticsForNewWorkouts:
initWithDateInterval:numberOfBuckets:workoutUUID:workoutActivityType:
intersectsDateInterval:
_setMaximumHeartRate:
_filteredRecoveryReadings:
perMinuteWorkoutRecoveryHeartRateFromReadings:workoutEndDate:
_setPerMinuteReadings:
_setHighlightedReadings:
_setFinalReading:
_activityCacheIndex
_heartRateSamples
_walkingAverageHeartRate
_allDayStatistics
_workoutStatistics
_workoutRecoveryStatistics
_breatheStatistics
_averageCalculatorsByWorkoutUUID
_recoveryReadingsByWorkoutUUID
_breatheSessionReadingsBySessionUUID
_breatheSessionDateIntervalBySessionUUID
_dateOfBirthComponents
initWithClient:delegate:
_stopCollection
_stopObservingSampleTypes:
_startObservingSampleTypes:
currentObserverState
_enumerateSamplesOfType:from:to:error:handler:
_initialMetadata
_forwardSamples:
dataCollectionObservationStateDidChangeForClient:
_workoutDataProcessorUUID
_sampleTypesToCollect
_collectionAssertion
_clientStateMonitor
_excludedSyncStores
nameForDomainName:
whitespaceAndNewlineCharacterSet
hk_stringByRemovingCharactersInSet:
_persistedValueKeys
_errorUserInfoKeyErrorDate
_errorUserInfoKeyReason
hk_errorByAddingEntriesToUserInfo:
_presentTTRPromptForErrors:lastPromptBuild:lastPromptDate:currentBuild:
formattedPersistedValuesForDomainName:database:error:
initWithProfile:domainName:loggingCategory:
promptIfRequiredForReason:success:error:
unitTest_setLastPromptDate:error:
unitTest_setLastPromptBuild:error:
minimumPromptInterval
setMinimumPromptInterval:
maximumErrorCount
setMaximumErrorCount:
canRepromptOnSameBuild
setCanRepromptOnSameBuild:
notificationTitle
setNotificationTitle:
notificationMessage
setNotificationMessage:
radarTitle
setRadarTitle:
radarDescription
setRadarDescription:
_isPresenting
_canRepromptOnSameBuild
_minimumPromptInterval
_maximumErrorCount
_notificationTitle
_notificationMessage
_radarTitle
_radarDescription
future_addUnprotectedMigrationSteps
future_addProtectedMigrationSteps
initWithSubscriptionIDs:
registerSubscriptionsWithIdentifer:database:
setFetchSubscriptionCompletionBlock:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
initWithSubscriptionID:
setRecordType:
setAlertBody:
setNotificationInfo:
setDevice:
finishDetachedBuilderForEntity:sessionEndDate:profile:
associatedSessionUUID
nameForOwner:UUID:tag:
addStateWithIndex:label:
addStateTransitionFrom:to:event:label:
dataDestinationStateMachineForTaskUUID:configuration:
_loadOrCreatePersistentEntity
hk_shortRepresentation
_lock_persistDataSourceRecoveryDataInTransaction:error:
enterAtState:
_lock_configurationForPersistenceWithTransaction:error:
_lock_createPersistentEntityForConfiguration:transaction:error:
_lock_recoverPersistedDataWithTransaction:error:
_lock_loadOrCreatePersistentEntityInTransaction:error:
_updateStatisticsPauseResumeMask
_lock_failWithError:
_lock_sourceOrderProviderForQuantityType:
_lock_statisticsDataSourceForQuantityType:
_recoveredStateForStartDate:endDate:
_didUpdateStatistics:
_didUpdateMetadata:
_didUpdateEvents:
_didChangeElapsedTimeBasis
_lock_didUpdateStartDate
_recoverAssociatedSeriesBuilders
_didFinishRecovery
clientRemote_didRecoverSeriesBuilders:
index
_lock_associateSamples:transaction:error:
_lock_updateStatisticsWithSamples:transaction:error:
_attemptRequeryForInvalidatedStatisticsCalculators
_workoutEventWithInternalEvent:
_insertWorkoutEvents:error:
_addMetadata:error:
_updateWorkoutConfiguration:
_notifySourcesOfConfigurationUpdate:
currentStatisticsByQuantityType
allSourceProcessors
enqueueEvent:date:error:completion:
_finishWorkoutWithError:
clientRemote_finishedWorkout:
_discardWorkoutWithError:
clientRemote_didFailWithError:
_lock_pushCurrentConstructionState
_notifySourcesOfTransitionFromState:toState:
_validateAuthorizationToSaveWorkoutWithError:
clientRemote_synchronizeWithCompletion:
removeSource:
_canAddDataWithError:
_saveSamples:withCompletion:
_removeMetadata:error:
clientRemote_stateDidChange:startDate:endDate:
_lock_statisticsCalculatorForQuantityType:mergeStrategy:computationMethod:
clientRemote_didUpdateMetadata:
clientRemote_didChangeElapsedTimeBasisWithStartDate:endDate:
_updateCachedStateForAddedWorkoutEvents:
clientRemote_didUpdateEvents:
_lock_statisticsCalculatorForQuantityType:
_lock_maskedIntervalsForStatisticsOfType:
clientRemote_didUpdateStatistics:
clientRemote_didFinishRecovery
_persistRecoveryData
_setupDataSource:identifier:
_lock_addQuantityTypesIncludedWhilePausedFromSource:transaction:
recoveredWorkoutBuilderConfigurationForClient:sessionIdentifier:builderIdentifierOut:profile:error:
finishAllWorkoutBuildersForClient:profile:error:
finishAllDetachedWorkoutBuildersExcludingSessions:profile:error:
stateMachine:persistTransition:
stateMachine:didTransition:fromState:toState:date:error:
stateMachine:willEnterState:date:error:
stateMachine:didEnterState:date:error:
stateMachine:willLeaveState:date:error:
stateMachine:didLeaveState:date:error:
stateMachine:didIgnoreEvent:state:
remote_setTargetConstructionState:startDate:endDate:completion:
remote_addDataSourcesWithIdentifiers:
remote_removeDataSourcesWithIdentifiers:
remote_addSamples:completion:
remote_addWorkoutEvents:completion:
remote_removeMetadata:completion:
remote_updateDevice:
remote_setStatisticsMergeStrategy:forType:
remote_setStatisticsComputationMethod:forType:
remote_setShouldCollectEvents:
removeSampleObserver:
setMetadata:
workoutStartDate
setWorkoutStartDate:
workoutEndDate
setWorkoutEndDate:
dataInterval
setDataInterval:
_dataAccumulatorObservers
_sampleObservers
_statisticsCalculatorsByType
_sourceOrderProvidersByType
_statisticsDataSourcesByType
_quantityTypesRequiringCalculatorInvalidation
_expectedDataSourceUUIDs
_stateMachine
_targetConstructionState
_upstreamQueue
_workoutStartDate
_workoutEndDate
_dataInterval
_baseActivityDemoKeyForDataTypeIdentifier:
arrayForKey:
demoValueForKey:withDataTypeIdentifier:
_rawValueForKey:domain:category:profile:entity:error:
hk_canonicalDateOfBirthDateComponentsWithDate:
_rawValuesForKeys:domain:category:profile:error:
_predicateForDomain:
_predicateForKeys:
_enumerateKeyValueEntitiesInCategory:predicate:healthDatabase:error:usingBlock:
_valuesForKeys:domain:category:profile:error:handler:
_setRawKeysAndValues:domain:category:profile:error:
timeZoneForSecondsFromGMT:
_predicateForCategory:
_readRawValuesInCategory:predicate:database:error:usingBlock:
_validateEntityClassForCategory:
_insertKeysAndValues:modificationDate:domain:category:provenance:updatePolicy:profile:error:
_insertKeysAndValues:modificationDate:domain:category:provenance:updatePolicy:database:error:
_insertValues:forKeys:modificationDates:domain:category:provenance:updatePolicy:profile:error:
_doInsertValues:forKeys:modificationDates:domain:category:provenance:updatePolicy:database:error:
_validateForInsertionWithError:
_insertCodableTimestampedKeyValuePairs:domain:category:provenance:updatePolicy:profile:error:
_shouldUpdateWithPolicy:key:domain:category:modificationDate:database:error:
_insertStatementKey
_validateModificationDatePolicyWithKey:domain:category:modificationDate:database:error:
initWithValue:key:domain:category:provenance:updatePolicy:modificationDate:
enumerateValuesForDomain:category:keys:profile:error:usingBlock:
_insertCodableCategoryDomainDictionary:provenance:profile:error:
_insertCodableTimestampedKeyValuePairs:domain:category:provenance:profile:error:
_predicateForKey:
_predicateForProvenance:
updatePolicy
_updatePolicy
_expireMessages
removeDelegate:
valueWithBytes:objCType:
setRequestClass:
setResponseClass:
_updateExpireTimerWithTimestamp:
_logPrefix
_handleError:context:
addDelegate:queue:
sendTimeout
doNotCompress
forceLocalDelivery
queueOnly1
sendData:toDestinations:priority:options:identifier:error:
setMessageID:
setIdsIdentifier:
setFromRequest:
responseTimeout
requestMessageID
isSent
setSent:
getValue:
cancelIdentifier:error:
isFromRequest
incomingResponseIdentifier
outgoingResponseIdentifier
setFromParticipant:
_pbMappingForMessageID:
responseClass
setRequestIDSIdentifier:
setRequestSent:
setRequestPersistentUserInfo:
expectsPeerResponse
setExpectsResponse:
configureResponse
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
_sendResponse:
_serviceIdentifier
_shortServiceIdentifier
_pairingUUID
_requestHandlers
_errorHandlers
_responseHandlers
_pbMapping
_persistentContextStore
_nextExpireTimerFireDate
_expireTimer
requestWithMessageID:participant:
setSendTimeout:
setResponseTimeout:
setDoNotCompress:
setQueueOnly1:
setForceLocalDelivery:
_doNotCompress
_queueOnly1
_forceLocalDelivery
_messageID
_toParticipant
_idsIdentifier
_sendTimeout
_responseTimeout
_persistentUserInfo
_pbRequest
setToParticipant:
setRequestMessageID:
requestClass
setResponse:
_expectsResponse
_fromParticipant
_response
requestIDSIdentifier
requestSent
_requestIDSIdentifier
_requestSent
_requestPersistentUserInfo
_pbResponse
requestIdsIdentifier
setRequestIdsIdentifier:
_sent
_requestMessageID
_requestIdsIdentifier
_requestClass
_responseClass
_fromRequest
_userInfo
hd_messageSent
_predicateForRecoveryIdentifier:workoutSession:
storeArchivedStateWithRecoveryIdentifier:archivedState:workoutSession:transaction:error:
retrieveArchivedStateFromRecoveryIdentifier:workoutSession:transaction:error:block:
_disableSyncLocally
masterZoneForContainerID:
setWeightKg:
setHasWeightKg:
hasWeightKg
setHeightCm:
setHasHeightCm:
hasHeightCm
setAgeYears:
setHasAgeYears:
hasAgeYears
weightKg
heightCm
ageYears
_ageYears
_heightCm
_weightKg
builder_filterWithDataTypes:
_queue_fetchHistogramDataWithError:
client_deliverDistributionCollection:forQuery:
histogramBucketSize
_valueByConvertingValue:toUnit:
histogramAnchor
_buildStatisticsCollectionCalculatorForAverageAndDuration
contextStyle
_intervalsForContextStyle:includeContextIdentifiers:errorOut:
_sqlitePredicateForObjectType:errorOut:
insideRanges:
_walkSampleValuesWithPredicate:errorOut:handler:
_combineDistributionResults:withIntersectingDateIntervals:
_combineDistributionResults:withAverageAndDurations:bucketUnits:
_mindfulnessPredicateWithErrorOut:
_walkSampleDatesWithPredicate:entityClass:errorOut:
_workoutPredicateWithErrorOut:
_categoryPredicateWithTypeCode:matchingValue:errorOut:
_walkSampleDatesWithPredicate:entityClass:includeUUID:errorOut:
addDateRangeFrom:to:uuid:
minimumBucketValue
minimumValue
maximumValue
histogramCounts
contextIdentifiers
initWithStartDate:endDate:minimumBucketValue:minimumValue:maximumValue:averageValue:duration:histogramCounts:contextIdentifiers:
resetState
intersectingIdentifiersFrom:to:
averageValue
quantityDistributionQueryServerConfiguration
_quantityDistributionQueryServerConfiguration
startInterval
endInterval
initWithStartInterval:endInterval:uuid:
containsUUIDs
_currentStartInterval
_currentEndInterval
_currentPairIndex
_containsUUIDs
_intervalPairs
_startInterval
_endInterval
seriesClass
seriesUUID
_seriesUUID
_seriesClass
addCodedValues:
codedValuesCount
clearCodedValues
codedValuesAtIndex:
codedValuesType
_codedValues
hasMedicalDateIntervalValue
hasDataAbsentReasonCodingsValue
dataAbsentReasonCodingsValue
_codedQuantityValue
_codedValueCollection
_dataAbsentReasonCodingsValue
_dateComponentsValue
_medicalCodingValue
_medicalDateIntervalValue
_medicalDateValue
_ratioValue
setHasExternalSyncObjectCode:
hasExternalSyncObjectCode
externalSyncObjectCode
setHasMonday:
hasMonday
setHasTuesday:
hasTuesday
setHasWednesday:
hasWednesday
setHasThursday:
hasThursday
setHasFriday:
hasFriday
setHasSaturday:
hasSaturday
setHasSunday:
hasSunday
setHasWakeHour:
setHasWakeMinute:
setHasBedHour:
setHasBedMinute:
setHasOverrideDayIndex:
_bedHour
_bedMinute
_overrideDayIndex
_wakeHour
_wakeMinute
_friday
_monday
_saturday
_sunday
_thursday
_tuesday
_wednesday
_basePredicateForSync
_activitySummary
_setStartDate:
_setEndDate:
setActiveEnergyBurned:
setActiveEnergyBurnedGoal:
setAppleMoveTime:
setAppleMoveTimeGoal:
setAppleExerciseTime:
setAppleExerciseTimeGoal:
setAppleStandHours:
setAppleStandHoursGoal:
setDistanceWalkingRunning:
_strictlyUnarchivedObjectOfClasses:fromData:error:
_validateSequenceNumberForSyncChange:store:error:
_validateAnchorsForSyncChange:store:error:
_applySyncChange:entity:store:error:
updateSyncAnchor:type:entityIdentifier:store:updatePolicy:profile:error:
_performSyncSession:databaseAccessibilityAssertion:error:
_resetStore:
_syncAnchorMapForSyncEntityClass:session:error:
initWithSyncEntityClass:anchorRange:session:requiredAnchorMap:
sendChangesStatus
currentAnchor
sendChangesError
prepareSyncAnchorsForEntityIdentifiers:store:profile:error:
_synchronizeSyncEntityClass:session:startAnchor:finalAnchor:postTransactionBlocks:error:
unitTest_didCompleteReadTransaction
setUnitTest_didCompleteReadTransaction:
_entityManager
_unitTest_didCompleteReadTransaction
detachProtectedDatabaseWithError:
recoveredSessionServerWithProfile:sessionUUID:workoutManager:error:
_queue_beginTransitionToWorkoutSession:
initWithProfile:configuration:sessionUUID:workoutManager:
didBecomeCurrent
didResignCurrentWithError:
_queue_setCurrentWorkout:
finishAllWorkoutSessionsForClient:profile:error:
_queue_sessionServerForRecoveryForClient:
taskServerConfigurationForRecoveryWithError:
_finishAllDetachedWorkoutBuilders
_activeSessionIdentifiers
_queue_currentWorkoutActivityType
_queue_currentWorkoutLocationType
canBePaused
bundleWithPath:
_scheduleFinishAllDetachedWorkoutBuilders
sessionIdentifierForRecoveryInProfile:error:
_queue_endSessionIfInSchoolMode:
finishAllWorkoutsExcludingSessions:profile:error:
_recoverActiveWorkoutSessionServersIfNeeded
_finishAllWorkoutsWithExclusionHandler:
_scheduleFinishForDetachedWorkoutBuilders
_notifyForPostLaunchSessionRecovery
_postWorkoutUpdatedNotification
_recoverCurrentWorkoutSessionAfterLaunch
_queue_logWorkoutStateToPowerLog
_queue_updateFakingDataInSimulator
_queue_sessionFinished:
startFakingWithHKWorkoutActivityType:
inSchoolMode
_queue_schoolModeDidChangeTo:
_queue_endSessionForSchoolMode:
_queue_inSchoolMode
unitTest_setSchoolMode:
schoolTime:didChangeSchoolModeTo:
startWatchAppWithWorkoutConfiguration:client:completion:
finishAllWorkoutsForClient:error:
recoverWorkoutSessionForClient:server:completion:
hasAnyActiveWorkouts
currentWorkoutActivityType
currentWorkoutLocationType
generatePauseOrResumeRequestWithCompletion:
getCurrentWorkoutSnapshotWithCompletion:
currentWorkoutSessionServer
pauseActiveWorkoutsWithCompletion:
addWorkoutEventObserver:
removeWorkoutEventObserver:
addWorkoutSessionObserver:queue:
removeWorkoutSessionObserver:
hk_fakeLapEventWithDate:strokeStyle:
hk_fakeStopEventWithDate:
unitTest_smoothRoute:withSmoother:completion:
unitTest_finishAllDetachedWorkoutBuilders
unitTest_currentWorkoutSession
_workoutSessionNotCurrentError:
isInHeartRateRecovery
isPowerSavingSupportedForCurrentActivity
unitTest_setInSchoolMode:
locationManager
locationSmoother
setLocationSmoother:
_currentWorkoutAssertion
_nextWorkout
_sessionServers
_sessionCreationHandlers
_observerTable
_sessionObservers
_appStateMonitor
_hasPerformedPostLaunchSessionRecovery
_postLaunchRecoveryBlocks
_postLaunchRecoveryCallbackQueue
_currentWorkoutObservers
_schoolTime
_locationSmoother
_addPrimaryProtectedMigrationSteps
_addPrimaryUnprotectedMigrationSteps
primaryProtectedMigrationSteps
addMigrationSteps:
primaryUnprotectedMigrationSteps
addMigrationTo:foreignKeys:handler:
deleteDatabaseStatusForVersion:errorMessage:error:
okemoZursUnprotectedMigrationSteps
eagleUnprotectedMigrationSteps
corryUnprotectedMigrationSteps
tigrisUnprotectedMigrationSteps
okemoZursProtectedMigrationSteps
eagleProtectedMigrationSteps
corryProtectedMigrationSteps
tigrisProtectedMigrationSteps
_sortedAndPrunedMigrationSteps:currentVersion:error:
_runMigrationStep:currentVersion:finalVersion:error:
_runMigrationSteps:currentVersion:expectedFinalVersion:error:
addMigrationForSchema:toVersion:foreignKeyStatus:handler:
addLockstepMigrationForSchema:toVersion:requiringVersion:foreignKeyStatus:handler:
statusForUnhandledVersion:error:
_hasPerformedMigration
_migrationSteps
_schemaManager
indexOfObjectPassingTest:
indexSetWithIndexesInRange:
insertObjects:atIndexes:
setEntryTime:
setHasEntryTime:
hasEntryTime
setExitTime:
setHasExitTime:
hasExitTime
entryTime
exitTime
_entryTime
_exitTime
_externalSyncMetadataForRow:
initWithCodableDeletedSamples:provenance:
insertCodableDeletedSamples:provenance:profile:error:
hk_UUID
_createUnprotectedKeyValueTableWithError:
_renameKeyValueSyncStoreColumnInProtectedDabase:error:
_migrateCoreMotionFromUserDefaultsToKeyValueWithError:
_removeAchievementsAndActivityCachesFromUnprotectedDatabaseWithError:
_createNanoPairingTableWithError:
_migrateKeyValueColumnsFromStringToText:error:
_clearSourceOrderingWithError:
_createSyncAnchorsTableWithError:
_createProtectedKeyValueTableAndMigrateCharacteristicsAndDefaultsWithError:
_migrateDataProvenanceValueAndRenameSyncStoreColumnWithError:
_createActivityCachesTableWithError:
_dropDataSessionActivitiesTableWithError:
_cleanupOrphanedRowsWithError:
_changeWorkoutActivityTypeOther:
_addWalkingDistanceColumnToActivityCacheWithError:
_createAchievementsAndActivityCachesTablesWithError:
_createMetadataValuesObjectIdIndexWithError:
_createCorrelationsObjectIdIndexWithError:
_addProvenanceColumnToCorrelationsWithError:
_addEnergyBurnedGoalDateAndAnchorsToActivityCacheTableWithError:
_initializeDatabaseIdentifiersWithError:
_migrateLastSessionAnchorKeyToEndDateWithError:
_clearSamplesWithoutSourcesWithError:
_addDeviceEnabledColumnToKnownDevicesWithError:
_setLastOkemoZursObjectAnchorWithError:
isStepCountingAvailable
queryPedometerDataSinceRecord:withHandler:
queryAbsoluteNatalimetryDataSinceRecord:withHandler:
_lastReceivedPedometerDatum:
_updateDataCollectorKeyValueContextWithObject:domain:error:
_lastReceivedNatalieDatum:
_migratePedometerUserDefaults:
_migrateCalorimetryUserDefaults:
_associatedSamplesPredicate
_devicePredicateWithProfile:
_sourcePredicateWithProfile:
_sourceRevisionPredicateWithProfile:
_UUIDPredicate
_associationPredicateWithProfile:
_appleWatchSourcePredicate
_OSBuildPredicate
_contributorPredicateWithProfile:
_creationDatePredicate
_productTypePredicate
hk_hasDevicePropertyKeyPathPrefix
_devicePropertyPredicateWithProfile:
hk_hasMetadataKeyPathPrefix
_metadataPredicateWithProfile:
_metadataKeyFromMetadataKeyPath
trueFilter
falseFilter
_deviceIDsWithProfile:devices:error:
_sourceEntitiesWithProfile:sources:
_sourceRevisionsWithProfile:clientSourceRevisions:
_deviceIDsWithProfile:property:allowedValues:error:
setProfileIdentifier:
hasGuardianIcloudIdentifier
setHasSetupType:
hasSetupType
setupTypeAsString:
StringAsSetupType:
hasGuardianFirstName
hasGuardianLastName
setHasGuardianDSID:
hasGuardianDSID
hasProfileIdentifier
hasTinkerFirstName
hasTinkerLastName
_guardianDSID
_guardianFirstName
_guardianIcloudIdentifier
_guardianLastName
_setupType
_tinkerFirstName
_tinkerLastName
kind
setKind:
setHasKind:
hasKind
kindAsString:
StringAsKind:
_kind
authorizationStatusForBundle:
locationServicesEnabled
isElevationAvailable
_queue_deleteCurrentRoute
workoutLocationManager
_queue_stopGPSUpdates
_queue_stopUpdates
_queue_freezeCurrentWorkoutRoute
_queue_setupLocationUpdates
createCMElevation
_handleElevationData:error:
startElevationUpdatesWithHandler:
_queue_createSeriesSample
_queue_pauseLocationUpdates
stopElevationUpdates
_queue_resumeWorkout
elevationAscended
_queue_savedLocationData
elevation
setElevation:
_sampleSavingDelegate
_lastStatus
_didSaveLocationData
_lastPausedTime
_elevationGain
_locationUpdatingAssertion
_validLocationsCount
_skippedLocationsCount
_elevation
_queue_deliverInitialResults
_fetchActivityCacheIndicesWithAnchor:predicate:error:
_queue_deliverActivitySummariesMatchingPredicate:
_queue_updatePreviousActivityCachesWithNewCaches:
_setEnumeratedSummaryCount:
_queue_addActivityCacheToCachedSamples:
indexOfObjectWithOptions:passingTest:
replaceObjectAtIndex:withObject:
_queue_filterActivityCaches:
_queue_updateActivitySummariesWithNewActivityCaches:anchor:
_shouldStopProcessing
batchedInitialResultsHandler
batchedUpdateHandler
_predicate
_activitySummaryBuilder
_shouldBatchSummaries
_previousActivityCachesByCacheIndex
_batchedInitialResultsHandler
_batchedUpdateHandler
_getAnchorsForProperty:anchorMap:store:profile:error:
_predicateForSyncEntityIdentifier:syncStore:
_syncAnchorForProperty:entityIdentifier:store:profile:error:
_setSyncAnchor:updateDate:options:updatePolicy:entityIdentifier:store:profile:error:
_setAnchorsWithMap:updateDate:store:updateOptions:updatePolicy:resetInvalid:profile:error:
_predicateForSyncStore:
_setSyncAnchor:updateDate:options:updatePolicy:entityIdentifier:store:transaction:error:
_predicateForSyncEntityIdentifier:
updateSyncAnchor:type:updateDate:entityIdentifier:store:updatePolicy:profile:error:
enumerateSyncAnchorsForStoreID:database:error:handler:
_finishSessionControllerForSessionEntity:profile:transaction:error:
_sessionControllerClassFromWorkoutConfiguration:clientApplicationIdentifier:
workoutSessionServerStateMachineForConfiguration:sessionUUID:
clientTargetStateMachineForConfiguration:sessionUUID:
_detailedDescriptionString
_queue_startInvalidationTimer
predictionSessionUUID
_detailedDescriptionComponents
_queue_cacheClientIdentifiers
_queue_stopInvalidationTimer
_queue_setupSessionController
_queue_startLatestActivityUpdateTimer
_initWithSessionIdentifier:workoutConfiguration:sessionServerState:applicationIdentifier:elapsedTime:snapshotDate:
_recoverPersistedState
_persistenceQueue_resendWorkoutEventsToDataDestination:error:
toState
_queue_deleteSessionAndFinishAssociatedBuilderAtDate:
_queue_evaluateRequestedTargetStateAtDate:
_queue_generateEventWithType:date:
_queue_generateError:
_queue_setTargetState:date:completion:
_queue_generateEvent:
_queue_generateMetadata:
_queue_generateConfigurationUpdate:
_persistenceQueue_storeSessionControllerState:forRecoveryIdentifier:error:
_queue_stopLatestActivityUpdateTimer
_queue_processStopEvent:
initWithQueue:completion:
_queue_invalidationTimerDidFire
_queue_currentWorkoutSessionConfiguration
_retrieveSessionControllerStateForRecoveryIdentifier:error:
_queue_latestActivityUpdateTimerDidFire
unitTest_setDefaultStopEventGenerationWaitInterval:
isFirstParty
_enqueueEvent:stateMachine:date:error:
unitTest_setSessionController:
unitTest_setStopEventGenerationWaitInterval:
unitTest_generateStopEvent
unitTest_generateWorkoutConfigurationUpdate:
unitTest_updateLatestActivityDate:
setClient:
_persistenceQueue
_sessionController
_invalidationTimer
_invalidationAssertion
_stopEventGenerationWaitInterval
_targetStateMachine
_hasFailed
_currentWorkoutSnapshot
_latestActivityUpdateTimer
_taskServer
_stopDate
_sessionId
_listenForCatFlexingFakingNotifications
_unregisterForCatFlexingNotifications
_deliverWorkoutEvent:sessionId:eventDate:
_triggerCatFlexingEvent
_triggerCatFlexingEventWithTimeout:
workoutManager:didStartWorkout:atDate:
workoutManager:didStopWorkout:atDate:
workoutManager:willPauseWorkout:atDate:
workoutManager:willResumeWorkout:atDate:
workoutManager:didFailWorkout:withError:
workoutManager:suggestedStopWorkout:atDate:
workoutManager:issuedPrediction:
workoutManager:workoutLocationEventUpdate:
workoutManagerDidStartWorkout:workout:startDate:
workoutManagerDidStopWorkout:workout:stopDate:
workoutManagerWillPauseWorkout:workout:pauseDate:
workoutManagerWillResumeWorkout:workout:resumeDate:
workoutManagerDidFail:workout:error:
workoutManagerSuggestedStop:workout:stopDate:
_cmWorkoutManager
_catFlexingNotifyToken
_updateKeyValueEntityUniquenessWithProtectedDatabase:error:
_createSyncStoreTableWithError:
_addSourceBundleIdentifierColumnToNanoPairingTableWithError:
_addDeviceIdentifierAndExpectedAnchorsColumns:
_addFlightsClimbedColumnsToActivityCacheWithError:
_addBinarySamplesTableWithError:
_addDataSeriesTableWithError:
_updateDataIDColumnForBinarySamplesTableWithError:
_migrateEndDateKeyBackToLastSessionAnchorWithError:
_migrateAchievementKeyValueCategoryToLocalWithError:
_legacyDateSavedBasedMergeForCloudMedicalID:localMedicalIDData:
localMedicalIDData
_mergedMedicalIDData
pullTargets
_recordSuccessfulPull
_generateRestoreEventSyncCompleteWithProfile:pullCompleteDate:
_queue_pullOperationFailureCount
_queue_firstPullOperationError
initInZone:ownerProfileIdentifier:sharedProfileIdentifier:
isValidProfileType:
_profileIdentifierWithCodableProfileIdentifier:
_codableProfileIdentifierWithProfileIdentifier:
isRegistryRecord:
isRegistryRecordID:
childHeaderRecordIDs
removeStoreIdentifier:ownerIdentifier:
_underlyingRegistry
_dataReceived:provenance:isDemoData:error:
_queue_aggregatorForType:
_typeIsCollectible:
_newAggregatorForObjectType:
_queue_adjustDataCollectionForType:block:
initWithObserver:state:collectionInterval:
_queue_observerMapForType:
_requestAggregationThroughDate:types:mode:options:completion:
_requestAggregationThroughDate:type:mode:options:completion:
initWithOwnerIdentifier:sampleTypes:observerState:dataCollectionManager:
addDataCollectionObserver:type:collectionInterval:state:
removeDataCollectionObserver:type:
_queue_defaultCollectionStateForType:
isInBackground
hasRunningWorkout
_queue_collectionStateForType:
_queue_updateLegacyDataCollector:forChangeFromState:toState:type:
_dataAggregatorConfigurationForCollectorState:
tachycardiaType
bradycardiaType
_collectorForType:
collectsData
_dataCollectorBlacklist
_registerCollectors:
_queue_createBuiltinCollectors
_updateDataCollectorsWithPrivacySettings
pluginDataCollectors
_queue_addDataCollector:
_queue_alertCollectorsOfTypesWithObservers
dataCollectorsForProfile:
_fakingLock_demoManagerCreatingIfNecessary
_demoObjectsReceived:completion:
startFakingDataWithActivityType:speed:
unitTest_addCollectibleType:
periodicUpdate
_queue_setupUnprotectedDataDependantState
_observersDescription
_dataCollectorsDiagnosticDescription
_dataAggregatorsDiagnosticDescription
removeDataCollectionObserver:
dataCollectionObserver:didChangeState:
generateFakeDataForActivityType:minutes:completion:
takeCollectionAssertionWithOwnerIdentifier:sampleTypes:observer:observerState:collectionInterval:
addDataCollector:
unitTest_setAggregator:forType:
unitTest_dataAggregatorConfigurationForType:
unitTest_setAggregatorConfigurationChangeHandler:
unitTest_setPendingSaveCoalescingInterval:
observersByType
setObserversByType:
blteHeartRateDataCollector
setBlteHeartRateDataCollector:
assertionQueue
setAssertionQueue:
demoManager
setDemoManager:
_lastLaunchUpdate
_dataAggregatorsByType
_periodicUpdateActivity
_pendingSavePool
unitTest_pendingSaveCoalescingInterval
unitTest_hasSetPendingSaveCoalescingInterval
_privacyPreferencesNotificationToken
_collectorLock
_collectorLock_builtinCollectors
_collectorLock_dataCollectorsByType
_lastFlushDateByType
_fakingLock
_unitTest_aggregatorConfigurationChangedHandler
_collectibleTypes
_seriesQuantityEventObserver
_observersByType
_blteHeartRateDataCollector
_demoManager
_dataCollectionQueue
_isInBackground
_hasRunningWorkout
observerState
_observerState
_sampleTypes
initWithConfiguration:cloudState:operation:
initWithZones:targets:
minimumSupportedProtocolVersion
_storeDescriptionForTarget:
initWithZonesByIdentifier:
cloudStateWithTargets:
seizedZones
pullZones
zoneForRecordID:containerIdentifier:
_minimumSupportedProtocolVersion
_zonesByIdentifier
_targets
_primaryPushZone
sampleQueryDescriptionWithSampleType:
sampleQueryDescriptionWithSampleType:predicate:
sampleQueryDescriptionWithSampleTypes:predicate:
initWithSampleTypes:predicate:encodingOptions:restrictedSourceEntities:authorizationFilter:sqlitePredicate:
_sqlitePredicate
nextToothbrushingSampleTime
nextHandwashingSampleTime
_generateToothbrushingSamplesForDemoPerson:atTime:sampleDate:objectCollection:
_generateHandwashingSamplesForDemoPerson:atTime:sampleDate:objectCollection:
_morningDateFromDate:calendar:
_eveningDateFromDate:calendar:
_generateToothbrushingSampleForDate:demoPerson:atTime:
setNextToothbrushingSampleTime:
_generateHandwashingSampleForDate:demoPerson:atTime:
setNextHandwashingSampleTime:
_nextToothbrushingSampleTime
_nextHandwashingSampleTime
_taskUUID
persistedStateForStoreUUID:database:error:
serverChangeToken
emptyZoneDateByZoneID
hasEncounteredGapInCurrentEpoch
syncProtocolVersion
stateWithServerChangeToken:
stateWithEmptyZones:
stateWithBaselineEpoch:
stateWithSyncProtocolVersion:
_hasEncounteredGapInCurrentEpoch
_serverChangeToken
_baselineEpoch
_rebaseDeadline
_lastSyncDate
_emptyZoneDateByZoneID
_lastCheckDate
setHasForm:
setHasUnderlyingDate:
hasOriginalTimeZoneString
_form
_underlyingDate
_originalTimeZoneString
_weeksBetweenStartDate:endDate:
_ecgClassificationWithin24HoursPostIRNKeyFromClassification:
_unitTestSchoolModeChanged
initWithActiveState:scheduleEnabled:inSchedule:
schoolMode:didUpdateState:fromState:
schoolMode:didUpdateScheduleSettings:
schoolMode:didLoadScheduleSettings:
schoolModeDidUpdateUnlockHistory:
schoolModeDidLoad:
_schoolMode
_schoolModeState
doubleForKey:
setDouble:forKey:
_database_shouldSendReportForKey:profile:
initWithCollectionInterval:maxUnsentDatumAge:
_queue_insertDatums:device:metadata:batchUUID:registrationUUID:completion:
_loggingClientProxy
clientRemote_receivedBatch:error:
clientRemote_finishedPersistenceForBatch:error:
_validateMetadata:error:
_didFinishPersistenceForBatch:error:
quantityDatumWithHDQuantityDatum:
clientRemote_beginCollectionWithConfiguration:lastPersistedDatum:registrationUUID:
setMaxUnsentDatumAge:
clientRemote_collectionConfigurationDidChange:
clientRemote_collectThroughDate:completion:
canResumeFromLastDatum
remote_insertDatums:device:metadata:batchUUID:registrationUUID:completion:
remote_registerWithCompletion:
remote_synchronizeWithCompletion:
_dataCollectorState
_registrationUUID
_collectionConfiguration
_lastDatumByDevice
initWithIdentifier:dateInterval:quantity:resumeContext:
_hd_removeDatabaseFilesAtDatabaseURL:extensionSuffixes:preserveCopy:
_queue_extendAssertionWithBundleID:dataCode:anchor:completion:
_queue_considerAssertingAppExtensions
_queue_considerLaunchingApp
_queue_invalidateAssertionWithBundleID:dataCode:anchor:
_queue_assertAppExtensionAssertion:currentTime:
_queue_retryAssertingAppExtensionAssertion:currentTime:
_queue_pendingAssertionsReadyForLaunch
_queue_retryAppLaunchForAssertion:
appExtensionAssertions
setAppExtensionAssertions:
appExtensionRetryTimers
setAppExtensionRetryTimers:
activeExtensionAssertions
setActiveExtensionAssertions:
pendingExtensionAssertions
setPendingExtensionAssertions:
activeAssertions
setActiveAssertions:
pendingAssertions
setPendingAssertions:
appAssertions
setAppAssertions:
_appExtensionAssertions
_appExtensionRetryTimers
_activeExtensionAssertions
_pendingExtensionAssertions
_activeAssertions
_pendingAssertions
_appAssertions
addCollection:
collectionsCount
clearCollections
collectionAtIndex:
setHasCollectionType:
hasCollectionType
hasElementTags
_collections
_elementTags
_storageForTransaction:createIfNecessary:
_lock_objectForKey:storage:
cache
didRemoveAllObjects
setDidRemoveAllObjects:
_lock_storeObject:forKey:transaction:
_lock_removeAllObjectsWithTransaction:
_commitTransactionStorage:
_cache
_threadLocalKey
setCache:
_didRemoveAllObjects
_observedDeviceProperties
addPropertyObserver:forPropertyChanges:
tinkerNanoSyncStoreWithProfile:device:delegate:
nanoSyncStoreWithProfile:device:delegate:
_initWithIdentityServicesDevice:nanoRegistryDevice:pairingEntity:obliteratedDatabaseUUIDs:protocolVersion:delegate:profile:tinkerPairing:
nanoSyncProtocolVersionForWatchSystemBuildVersion:
nanoSyncProtocolVersionForCompanionSystemBuildVersion:
removePropertyObserver:forPropertyChanges:
invalidateAndInvokeCompletionWithError:
nanoRegistryDevice
initWithSourceBundleIdentifier:systemBuildVersion:productType:active:restoreComplete:protocolVersion:
_savePairingEntity
initWithSyncStore:sessionUUID:
scheduleTimeoutWithInterval:handler:
_setRestoreState:
finishWithError:
_notifyIncomingSyncObservers
isExpired
orderedSyncEntitiesForProfile:protocolVersion:companion:
arrayByExcludingObjectsInArray:
remoteSystemBuildVersion
device:propertyDidChange:fromValue:
remoteProductType
identityServicesDevice
setIdentityServicesDevice:
setNanoRegistryDevice:
_remoteSystemBuildVersion
_remoteProductType
_pairingEntity
_pendingRequestContexts
_incomingSyncObserverTimers
_lastIncompleteIncomingSyncUUID
_lastIncompleteIncomingSyncDate
_lastCompleteIncomingSyncDate
_lastCompleteIncomingSyncError
_expectedSequenceNumbers
_orderedSyncEntities
_isTinkerPairing
_master
_needsSyncOnUnlock
_identityServicesDevice
_nanoRegistryDevice
_restoreState
_restoreSession
_obliteratedDatabaseUUIDs
expression
_ascending
_expression
_requireEntitlement:usingBlock:errorHandler:
clientSourceWithError:
_saveDataObjects:sourceEntity:sourceVersion:handler:
_openAppForAuthorizationForSession:completion:
_authorizationPromptHandler
clientRemote_presentAuthorizationWithRequestRecord:completion:
clientRemote_presentAuthorizationWithSession:completion:
_queue_insertObjects:sourceEntity:sourceVersionOverride:shouldJournal:error:
_objectsToInsertWithObjects:error:
_saveValidatedDataObjects:transactionIdentifier:final:handler:
hd_allObjectsToInsertWithObjects:
_validateForSavingWithClientEntitlements:applicationSDKVersion:error:
_performIfAuthorizedToSaveObjects:usingBlock:errorHandler:
_insertedObjects:containsQuantitySampleWithType:
_queue_objectsByProvenanceForInsertion:sourceEntity:sourceVersionOverride:error:
_permissionBlockForRestrictedSourceEntities:
_performIfAuthorizedToDeleteObjects:usingBlock:errorHandler:
_requirePrivateHealthKitEntitlementUsingBlock:errorHandler:
_objectsByProvenance:errorOut:
hk_isAuthorizationDeniedError
_performIfAuthorizedToReadTypes:usingBlock:errorHandler:
clientDebuggingIdentifier
_cancelActiveClientTransaction
_holdActiveClientTransactionWithCompletion:
_queue_serverActivityChanged
_queue_isServerActive
_queue_cancelActiveClientTransaction
_queue_holdActiveClientTransactionWithCompletion:
_clientHasPrivateHealthKitEntitlementWithError:
clientRemote_unitPreferencesDidUpdate
clientRemote_conceptIndexManagerDidBecomeQuiescentWithSamplesProcessedCount:
_getHealthRecordsPlugin
remote_saveDataObjects:handler:
_completionHandlerForReplaceWithOriginalWorkout:newWorkout:completion:
remote_deleteDataObjects:options:handler:
remote_createTaskServerEndpointForIdentifier:pluginURL:taskUUID:configuration:completion:
remote_fetchPluginServiceEndpointWithIdentifier:completion:
remote_createQueryServerEndpointForIdentifier:queryUUID:configuration:completion:
remote_getIsFeatureSetAvailable:completion:
remote_authorizationStatusForType:completion:
remote_getRequestStatusForAuthorizationToShareTypes:readTypes:completion:
remote_requestAuthorizationToShareTypes:readTypes:shouldPrompt:completion:
remote_handleAuthorizationForExtensionWithCompletion:
remote_beginAuthorizationDelegateTransactionWithSessionIdentifier:handler:
remote_endAuthorizationDelegateTransactionWithSessionIdentifier:error:
remote_saveDataObjects:transactionIdentifier:final:handler:
remote_deleteDataObjectsOfType:matchingFilter:options:handler:
_remote_associateSampleUUIDs:withSampleUUID:completion:
_remote_saveObjects:deleteObjects:associations:completion:
remote_clientWillSuspendWithCompletion:
remote_clientResumedWithCompletion:
remote_setBackgroundDeliveryFrequency:forDataType:handler:
remote_closeTransactionWithDataType:anchor:ackTime:completion:
remote_deleteAllSamplesWithTypes:sourceBundleIdentifier:options:completion:
remote_deleteClientSourceWithCompletion:
remote_deleteObjectsWithUUIDs:options:completion:
remote_suppressActivityAlertsForIdentifier:suppressionReason:timeoutUntilDate:completion:
remote_invalidateActivityAlertSuppressionForIdentifier:completion:
remote_fetchCharacteristicWithDataType:handler:
remote_setCharacteristic:forDataType:handler:
remote_fetchModificationDateForCharacteristicWithDataType:handler:
remote_setHealthLiteValue:forKey:completion:
remote_getHealthLiteValueForKey:completion:
remote_fetchServerURLForAssetType:completion:
remote_setServerURL:forAssetType:completion:
remote_setPreferredUnit:forType:completion:
remote_removePreferredUnitForType:completion:
remote_fetchUnitPreferencesForTypes:version:withCompletion:
remote_splitTotalCalories:timeInterval:withCompletion:
remote_fetchDaemonPreferenceForKey:completion:
remote_setDaemonPreferenceValue:forKey:completion:
remote_dropEntitlement:completion:
remote_restoreEntitlement:completion:
remote_addSamples:toWorkout:completion:
remote_replaceWorkout:withWorkout:completion:
remote_startWatchAppWithWorkoutConfiguration:completion:
remote_recoverActiveWorkoutSessionWithCompletion:
_clientHasControlEntitlementWithError:
queryControlServer
setQueryControlServer:
_clientTransactionTimer
_taskServerEndpointsByUUID
_authorizationServer
_queryControlServer
currentQueue
underlyingQueue
_queryDidTimeout
batchQueryController:updatedDestinationsStatus:onService:error:
idStatusUpdatedForDestinations:
idStatusUpdatedForDestinations:service:
initWithIdentifers:serviceIdentifier:completion:
queryController
setQueryController:
destinationIdentifiers
setDestinationIdentifiers:
setServiceIdentifier:
timer
setTimer:
_executing
_queryController
_destinationIdentifiers
_finishWithError:
completionHandlers
setCompletionHandlers:
_nanoSyncStore
_completionHandlers
_timerWithDuration:queue:handler:
initWithName:duration:queue:handler:
cancelFieldDetectTimeout
cancelTagReadTimeout
cancelMachineIdentityVerificationTimeout
cancelUserAcceptanceTimeout
fieldDetectTimer
setFieldDetectTimer:
tagReadTimer
setTagReadTimer:
machineIdentityVerificationTimer
setMachineIdentityVerificationTimer:
userAcceptanceTimer
setUserAcceptanceTimer:
waitForMachineStartTimer
setWaitForMachineStartTimer:
pauseTimer
setPauseTimer:
disconnectTimer
setDisconnectTimer:
retryConnectionTimer
setRetryConnectionTimer:
mfaTimer
setMfaTimer:
beginFieldDetectTimeout
isFieldDetectTimerValid
beginTagReadTimeout
isTagReadTimerValid
beginMachineIdentityVerificationTimeout
isMachineIdentityVerificationTimerValid
beginUserAcceptanceTimeout
isUserAcceptanceTimerValid
isWaitForMachineStartTimerValid
isPauseTimerValid
isMfaTimerValid
_fieldDetectTimer
_tagReadTimer
_machineIdentityVerificationTimer
_userAcceptanceTimer
_waitForMachineStartTimer
_pauseTimer
_disconnectTimer
_retryConnectionTimer
_mfaTimer
remote_endBluetoothStatusUpdates
remote_endHealthServiceDiscovery:
remote_endHealthServiceSession:
clientRemote_deliverBluetoothStatus:withError:
_healthDeviceClientDiscoveryIdentifier:
clientRemote_deliverDiscoveryHealthService:toClient:finished:withError:
_closeDiscoveryBetweenServer:andClient:
discoverHealthServicesWithType:timeout:alwaysNotify:handler:error:
_discoveryServerIdentifierForClientIdentifier:
stopDiscoveryWithIdentifier:
_isServerSessionValid:
_healthDeviceClientSessionIdentifier:
clientRemote_deliverSessionHealthServiceStatus:toClient:finished:withError:
_closeSessionBetweenServer:andClient:
clientRemote_deliverSessionCharacteristics:forService:toClient:withError:
connectHealthService:sessionHandler:dataHandler:characteristicsHandler:error:
_isClientSessionValid:
_sessionServerIdentifierForClientIdentifier:
_filterOnlyUserManageablePeripheralsFromServices:
intersectSet:
remote_addPairingForHealthService:withCompletion:
healthUpdatesEnabledFromDevice:error:
setHealthUpdatesEnabled:fromDevice:error:
getSupportedPropertyNamesWithHandler:
getProperty:forSession:withHandler:
performOperation:onSession:withParameters:completion:
_sessionClientIdentifierForServerIdentifier:
removeObjectWithIdentifier:
objectWithIdentifier:
remote_beginBluetoothStatusUpdates:
remote_fetchSupportedServiceIDsWithCompletion:
remote_startHealthServiceDiscovery:withCompletion:
remote_startHealthServiceSession:withCompletion:
remote_getHealthPeripheralsWithFilter:handler:
remote_removePairingForHealthService:withCompletion:
remote_getSupportedPropertyNamesWithHandler:
remote_getHealthServiceProperty:forSession:withHandler:
remote_performHealthServiceOperation:onSession:withParameters:completion:
remote_addPeripheral:name:forServices:withCompletion:
remote_removePeripheral:withCompletion:
remote_getEnabledStatusForPeripheral:withCompletion:
remote_setEnabledStatus:forPeripheral:withCompletion:
healthServiceDiscoveryServerIDs
setHealthServiceDiscoveryServerIDs:
healthServiceDiscoveryClientIDs
setHealthServiceDiscoveryClientIDs:
healthDeviceSessionServerIDs
setHealthDeviceSessionServerIDs:
healthServiceSessionClientIDs
setHealthServiceSessionClientIDs:
healthServiceClosedSessionServerIDs
setHealthServiceClosedSessionServerIDs:
healthServiceClosedSessionClientIDs
setHealthServiceClosedSessionClientIDs:
_healthServiceManager
_healthServiceDiscoveryServerIDs
_healthServiceDiscoveryClientIDs
_healthDeviceSessionServerIDs
_healthServiceSessionClientIDs
_healthServiceClosedSessionServerIDs
_healthServiceClosedSessionClientIDs
_comparisonQuantityAsNumber
hasBundleID
setHasIsWatchWorkout:
hasIsWatchWorkout
setHasIsIndoorWorkout:
hasIsIndoorWorkout
setHasAmm:
hasAmm
hasScwi
_amm
_isIndoorWorkout
_isWatchWorkout
_deviceManufacturer
_deviceModel
_friendUUID
_scwi
isDistanceAvailable
isPedometerDataCollectionSupported
queue_userConditionIsSet
queue_userIsAbleBodied
hd_hasWorkout
floorsAscended
numberOfPushes
numberOfSteps
_userCondition
_startPedometerUpdatesSinceDataRecord:withHandler:
startPedometerUpdatesFromDate:withHandler:
queryPedometerDataSinceDataRecord:withHandler:
stopPedometerUpdates
recordIDsWithZoneID:
isSubscriptionRecord:
storeRecordID
_queue_condenseWorkoutsWithBatchLimit:analyticsAccumulator:error:
_queue_submitAnalyticEventForReason:batchSize:success:duration:analyticsAccumulator:error:
_queue_didPerformCondensationForReason:success:error:
_queue_popTTRPromptIfRequiredWithReason:success:error:
configurationWithProfile:minimumSeriesSize:maximumSeriesSize:deletedSampleThreshold:analyticsAccumulator:error:
_condenseAndUpdateWorkout:configuration:error:
workoutEntitiesRequiringCondensationWithProfile:limit:allowRecondensation:error:
_workoutEntitiesRequiringCondensationWithProfile:limit:allowRecondensation:analyticsAccumulator:error:
_seriesSyncIdentifierForWorkout:startTime:endTime:count:
performsWorkoutCondensation
_queue_condenseWorkoutsWithAccessibilityAssertion:batchLimit:analyticsAccumulator:error:
_condenseWorkouts:configuration:error:
_workoutEntitiesRequiringCondensationWithPredicate:limit:orderingTerms:transaction:error:
setWorkoutsToCondense:
setWorkoutsToRecondense:
analyticsAccumulator
setHasProcessedWorkout:
condensedWorkouts
setCondensedWorkouts:
deletedSampleThreshold
_condenseWorkout:entity:configuration:error:
_updateCondenserVersionForWorkout:configuration:error:
_logCondenserProcessedWorkout:
minimumWorkoutDuration
condensableQuantityTypes
_condenserPredicateForQuantityType:workout:entity:configuration:
_condenseSamplesWithQuantityType:workout:entity:predicate:configuration:transaction:error:
_requiresProcessingWithEntity:quantityType:enumerationPredicate:configuration:transaction:error:
hasProcessedWorkout
processedWorkouts
setProcessedWorkouts:
_processSamplesWithQuantityType:workout:predicate:configuration:transaction:error:
_hasMoreThanMinimumNumberOfSingleValueSamplesWithEntity:enumerationPredicate:configuration:transaction:error:
_hasSamplesThatOverlapInTimeWithEntity:enumerationPredicate:configuration:transaction:error:
minimumSeriesSize
_dataOriginProvenanceForQuantitySampleEntity:configuration:transaction:error:
initWithStartTime:endTime:value:UUIDBytes:series:
hk_appendUUIDBytes:
_addDatumToBuffer:buffer:
maximumSeriesSize
_insertValuesForSeries:quantityType:startTime:values:provenance:configuration:transaction:countOut:error:
_finishSeries:quantityType:workout:UUIDDataToDelete:configuration:transaction:error:
setLength:
_createSeriesForIdentifier:workout:quantityType:startTime:values:UUIDDataToDelete:provenance:configuration:transaction:error:
_deleteSamplesWithUUIDData:configuration:error:
shouldReplaceDatum:
_requiredMetadataForEntity:quantityType:workout:transaction:error:
createdSeries
setCreatedSeries:
seriesSyncIdentifierForEntity:workout:transaction:error:
workoutsToCondense
workoutsToRecondense
setMinimumSeriesSize:
setMaximumSeriesSize:
setDeletedSamplesThreshold:
_minimumSeriesSize
_maximumSeriesSize
_deletedSamplesThreshold
_analyticsAccumulator
initWithProfile:predicate:minimumWorkoutDuration:minimumSeriesSize:maximumSeriesSize:deletedSampleThreshold:analyticsAccumulator:
_minimumWorkoutDuration
_deletedSampleThreshold
_isSeries
_hasProcessedWorkout
_workoutsToCondense
_workoutsToRecondense
_condensedWorkouts
_processedWorkouts
_createdSeries
workoutManagerDidChangeState:
_componentStateDidChange
setHasDoubleValue:
setHasIntValue:
hasTemplateUniqueName
_doubleValue
_intValue
_templateUniqueName
_initWithConnection:process:
initWithProcess:
_process
_connection
spirometryForDemoPerson:atTime:type:
inhalerUsageForDemoPerson:atTime:
nextSpirometrySampleTimeFromType:
setNextSpirometrySampleTime:forType:
_computeSpirometryForDemoPerson:atTime:type:computeLowerLimitOfNormality:height:
_isAsthmaAttackAllowedForDemoPerson:atTime:
nextSpirometrySampleTimes
setNextSpirometrySampleTimes:
nextAsthmaAttackSampleTime
setNextAsthmaAttackSampleTime:
nextAsthmaAttackEndTime
setNextAsthmaAttackEndTime:
forcePEFR
setForcePEFR:
_forcePEFR
_nextSpirometrySampleTimes
_nextAsthmaAttackSampleTime
_nextAsthmaAttackEndTime
isGenerateDemoDataSet
shouldUseDemoDataDirectory
initWithProfileType:
willBeGeneratingDemoData
_resetDemoDataDB
demoDataDirectory
_demoDataPath
_fileManager
_initWithIdentifier:timeout:timeoutHandler:
_scheduleTimer
_timerDidFire
hasPersistentPairingUUID
hasHealthPairingUUID
hasActivationRestore
persistentPairingUUID
healthPairingUUID
_activationRestore
_changeSet
_healthPairingUUID
_persistentPairingUUID
_monitorFieldAndPrivacySettings
_startObservingWatchWorkouts
_setNFCAlwaysOnPreferenceIfNecessary
_stopObservingWatchWorkouts
gymKitSettings:didChangeFromNFCPermission:toNFCPermission:
_isSatelliteWatch
_setConnectedGymPreferencesDefaultNFCAlwaysOnEnabled:
_handleNFCPreferencesForNFCAlwaysOn:
_currentActivityMoveModeWithCompletion:
_enableNFCAlwaysOnIfWatchWorkout
fitnessTrackingEnabled
nfcPermission
unitTest_simulateNRDeviceUpdate
_nfcPermission
_privacyNotificationToken
_currentDevice
groupBy
limitCount
_SQLForSelectWithProperties:columns:
_SQLForDeleteWithError:
shouldExpandLastSQLStatement
_expandLastSQLStatementIfNecessary:
bindToSelectStatement:bindingIndex:
queryDescriptor
copySelectSQLWithProperties:
enumerateEntitiesUsingBlock:
_descriptor
_lastSQLStatement
initWithSet:
_joinClauseComparatorWithPreferredEntityOrder:
_SQLForSelectWithProperties:
orderingTerms
returnsDistinctEntities
setGroupBy:
preferredEntityJoinOrder
setShouldExpandLastSQLStatement:
_returnsDistinctEntities
_shouldExpandLastSQLStatement
_limitCount
_orderingTerms
_groupBy
_preferredEntityJoinOrder
aggregateValuesForProperty:functions:queryDescriptor:database:error:
aggregateValuesForProperty:functions:predicate:groupBy:database:error:
aggregateSingleValueForProperty:function:predicate:database:error:
countDistinctForProperty:predicate:database:error:
clearTypesToReads
clearTypesToWrites
typesToReads
setTypesToReads:count:
typesToWrites
setTypesToWrites:count:
_typesToReads
_typesToWrites
initWithType:interval:latency:
_sendChangesWithError:
_sendChanges:session:error:
_syncEntityClass
_anchorRange
_session
_requiredAnchorMap
_done
_nextSequence
_accumulatedChangeSetSize
_currentAnchor
_sendChangesStatus
_sendChangesError
localizedFullNameForFirstName:lastName:
localizedStringWithFormat:
statementsForDeleteRowsFromDataEntitySubclassTable:intermediateTables:error:
correlationCountForDataEntitySubclassTable:count:error:
taskServerDelegate
instancesRespondToSelector:
taskServerClass
taskConfiguration
healthStoreConfiguration
listener
setListener:
_taskServerClass
_healthStoreConfiguration
_taskServerDelegate
_listener
_createCloudSyncStoreEntityTable:
_addSourceSyncAnchorColumnWithError:
_addBaselineEpochColumnToCloudSyncStoreEntityTableWithError:
_addModificationEpochColumnToAuthorizationsTableWithError:
_tigris_addRebaseDeadlineColumnWithError:
_tigris_addLastSyncColumnWithError:
_tigris_addEmptyZonesColumnWithError:
_tigris_addLastCheckAndOwnerIDColumnsWithError:
_tigris_addContainerColumnToCloudSyncStores:
_tigris_addPreferredSourceOptionToConnectedGymSources:
_tigris_addGapColumnToCloudSyncStores:
_tigris_addEpochColumnToSyncAnchorTable:
_tigris_addSourcesBundleIdentifierUUIDIndexWithError:
_recreateDataProvenanceTableIncludingOriginVersionsWithError:
_createExternalSyncIdentifierEntityTable:
_updateOriginVersionsWithError:
_updateWithComputedStatsColumnsInActivityCacheTableWithError:
_updateExternalSyncDatabaseSchema:
_addDurationColumnToWorkoutEventsTable:
_addDataValueColumnToMetadataValuesTable:
_createPendingAssociationTable:
_addFlightsClimbedToWorkoutsWithError:
_addDeviceColumnsToFitnessFriendWorkoutsWithError:
_removeUnusedColumnsFromActivityCacheWithError:
_addArbitraryMetadataSupportForWorkoutEventsWithError:
_removeTrustedFitnessMachineEntityTable:
_removeVO2MaxTestTypeMetadataKeyAppleWatch:
_addSequenceColumnToActivityCacheWithError:
setHasSnapshotIndex:
hasSnapshotIndex
setHasTimeZoneOffsetFromUTCForNoon:
setHasUploadedDate:
hasUploadedDate
setHasMmv:
hasMmv
setHasMmg:
hasMmg
_mmg
_mmv
_snapshotIndex
_timeZoneOffsetFromUTCForNoon
_uploadedDate
_handleLostManateeIdentitiesForZones:container:
_deleteZonesForLostManateeIdentitiesInZones:container:database:
_leaveSharesForLostManateeIdentitiesInZones:container:database:
setMarkAsParticipantNeedsNewInvitationToken:
_startZoneFetchForContainer:database:
setChangeTokenUpdatedBlock:
_fetchDatabaseChangesOperationDidFinishWithChangedZones:deletedZones:container:database:error:
setMap:
nextIdentifier
setNextIdentifier:
_map
_nextIdentifier
initWithProfile:centralManager:queue:
initWithDelegate:queue:
_queue_handleMFASuccessNotification
lastConnection
hk_isServiceDeviceNotFoundError
_disconnectPeripheralWithDeviceIdentifier:error:
_isBTLESupportedWithCentral:error:
initWithHandler:serviceUUID:alwaysNotify:requiresActiveScan:
setDiscoveryIdentifier:
_createDiscoveryTimeout:forIdentifier:
_queue_reportExistingDiscoveriesForService:
_queue_updateScan
discoveryHandler
setPeripheral:
initUnknownServiceWithIdentifier:name:serviceId:
_copyDiscoveryInfosForServiceUUID:
_serviceFromUUID:peripheral:serviceAdvertisementData:peripheralAdvertisementData:
discoveryIdentifier
characteristicsHandler
initWithSessionHandler:dataHandler:characteristicsHandler:mfaSuccessHandler:autoPairData:connectionOptions:timeoutInterval:peripheralUUID:
_connectHealthService:connectionInfo:error:
sessionHandler
retrievePeripheralsWithIdentifiers:
connectionOptions
_addConnectedPeripheral:service:connectionInfo:
_removeConnectedPeripheral:withError:
sharedPairingAgent
isPeerPaired:
central
unpairPeer:
_copyConnectionInfosForPeripheralUUID:
advertisingAddress
retrieveOOBDataForPeer:
mfaStatus
mfaSuccessHandler
markMFAStatusComplete
_queue_extendPrivateModeLeaseForSessionWithIdentifier:
enablePrivateModeForSessionWithIdentifier:forDuration:
setSessionIdentifier:
advertisementData
tag:
_createConnectionTimeoutForConnectionInfo:
connectPeripheral:options:
timeoutInterval
pairingState
setPairingState:
updateConnectionInfosForPeripheralUUID:withMutation:
cancelPeripheralConnection:force:
requiresActiveScan
initWithDictionary:copyItems:
_scanOptionsForDiscoveryInfos:
_allServiceUUIDs
scanForPeripheralsWithServices:options:
_queue_stopScan
stopScan
dataHandler
retrieveAndRemoveDisconnectedPeripherals
removeConnectingPeripheralsWithError:
_queue_notifyBluetoothStatusUpdates:error:
pairingAttempted
pairPeer:
setPairingAttempted:
centralManager:didFailToConnectPeripheral:error:
_reportPeripheral:serviceUUID:serviceAdvertisementData:peripheralAdvertisementData:
_notifyDiscoveryForInfos:peripheral:healthService:alwaysNotify:
_addPeripheralUUID:
alwaysNotify
cancelPeripheralConnection:
autoPairData
respondToPairingRequest:type:accept:data:
centralManagerDidUpdateState:
centralManager:willRestoreState:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
centralManager:didConnectPeripheral:
centralManager:didDisconnectPeripheral:error:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didUpdateANCSAuthorizationForPeripheral:
centralManager:didUpdatePeripheralConnectionState:
centralManager:didFindPeripheral:forType:
centralManager:didLosePeripheral:forType:
centralManager:didLoseZone:mask:
centralManager:didUpdateConnectionParameters:interval:latency:supervisionTimeout:
centralManager:application:isActive:
centralManager:didSendBytes:toPeripheral:withError:
centralManager:didReceiveData:fromPeripheral:
centralManager:didDiscoverMultiplePeripherals:
centralManager:canSendDataToPeripheral:
centralManager:didFailToScanWithError:
centralManager:didUpdateControllerBTClockForPeripheral:eventType:seconds:microseconds:localClock:remoteClock:
pairingAgent:peerDidCompletePairing:
pairingAgent:peerDidFailToCompletePairing:error:
pairingAgent:peerDidUnpair:
pairingAgent:peerDidRequestPairing:type:passkey:
allServicesWithError:
_healthServiceForPeriperalID:serviceType:
setCentral:
discoveryLock
setDiscoveryLock:
discoveryInfosTable
setDiscoveryInfosTable:
discoveryInfosByServiceUUID
setDiscoveryInfosByServiceUUID:
scanServiceUUIDs
setScanServiceUUIDs:
allServicesUUID
setAllServicesUUID:
connectionLock
setConnectionLock:
connectionInfosTable
setConnectionInfosTable:
connectionInfosByPeripheralUUID
setConnectionInfosByPeripheralUUID:
connectedPeripheralsByPeripheralUUID
setConnectedPeripheralsByPeripheralUUID:
bluetoothUpdateHandlers
setBluetoothUpdateHandlers:
privateModeTimer
setPrivateModeTimer:
_central
_discoveryLock
_discoveryInfosTable
_discoveryInfosByServiceUUID
_scanServiceUUIDs
_allServicesUUID
_connectionLock
_connectionInfosTable
_connectionInfosByPeripheralUUID
_connectedPeripheralsByPeripheralUUID
_bluetoothUpdateHandlers
_privateModeTimer
_peripheralsUUIDs
_alwaysNotify
_requiresActiveScan
_discoveryIdentifier
_discoveryHandler
_serviceUUID
_pairingAttempted
_sessionHandler
_dataHandler
_characteristicsHandler
_mfaSuccessHandler
_connectionOptions
_mfaStatus
_autoPairData
_pairingState
_timeoutInterval
_assertNoActiveStatements
allStatementSQLStrings
_cachedStatementForSQL:active:
_prepareStatementForSQL:error:
_setCachedStatement:forSQL:
_activateStatement:cached:
_cachedStatementForKey:active:
_setCachedStatement:forKey:
hk_trimWhitespaceAndNewlines
clearStatements
_statementStorage
statementForKey:
statementForSQL:
setStatement:forKey:
setStatement:forSQL:
initWithParentStorage:
allStatmentSQLStrings
faultCount
_defaultStatementStorage
_transactionStatementStorage
_activeStatements
_uncachedActiveStatements
_faultCount
_parentStorage
_statementsBySQL
_statementsByKey
setShouldRunHandler:
shouldRunHandler
_shouldRunHandler
_semaphoreForCheckOutOptions:
wait
initWithDatabase:flushGroup:generation:
captureThreadInfo
_addDatabaseWrapperToCheckoutMap:
_removeDatabaseFromCheckoutMap:
_didFlushDatabases:
flushGroup
broadcast
threadID
typeString
concurrentReaderLimit
_cacheCondition
_flushGroup
_cacheGeneration
_cacheSize
_concurrentReaderLimit
_checkoutLock
_checkoutMap
_readerSemaphore
_writerSemaphore
_threadID
prepareForSaving:
_updatedRecordsForContainer:disabledOwnerIdentifiers:
_updatedMasterRecordForZone:container:disabledOwnerIdentifiers:
_updatedRegistryRecordForZone:container:disabledOwnerIdentifiers:
_startHeaderRecordFetchForContainer:scope:
_startHeaderRecordFetchForZones:container:scope:completion:
_receivedLimitExceededError:fetchingRecordsWithIDs:container:scope:completion:
_processFetchedRecords:container:scope:
databaseWithDatabaseScope:
_fetchRecordsWithIDs:container:scope:completion:
_processFetchedRecord:recordClass:zone:error:
_processFetchedRecord:container:scope:error:
fetchSubscriptions
_fetchedRecordIDsByContainerID
_invalidRecordIDs
_fetchSubscriptions
highFrequencyDataStore
performingMigration
_databaseProvider
_isOutermostTransactionUnprotected
_performingMigration
_rootContext
_predicateForBundleID:dataCode:
_predicateForDataCode:
_subscriptionsWithPredicate:profile:error:
_predicateForBundleIdentifier:
_predicateForBundleID:
_launchTimesWithPredicate:profile:error:
_enumerateWithProfile:quantityType:predicate:filter:isQuantityType:includeUnfrozenSeries:error:block:
_enumerateSampleTypeWithProfile:quantityType:predicate:error:block:
_addValuesForQuantitySamples:calculator:requiresSeriesValues:transaction:error:
_addValueForQuantitySeriesSample:calculator:transaction:error:
_addValueForQuantitySample:calculator:error:
addValuesForQuantitySamples:calculator:includeSeries:error:
includeUnfrozenSeries
shouldContinueFrequency
shouldContinueHandler
_fullPredicate
_isRealQuantityType
_includeUnfrozenSeries
_shouldContinueFrequency
_shouldContinueHandler
hasAssociationUuid
hasObjectUuids
associationUuid
_associationUuid
_objectUuids
healthEntityClass
_predicateForSyncSession:
_insertObjectsFromCodableObjectCollection:syncStore:profile:error:
objectsFromCodableObjectsInCollection:
_provenanceFromCollection:syncStore:profile:error:
deviceEntityWithUUID:healthDatabase:error:
_objectWithCodable:
_pruningPredicateWithDate:profile:anchor:
_basePruningPredicateForDate:profile:
unitTest_predicateForSyncSession:
unitTest_pruningPredicateForDate:profile:
_predicateForDateIntervalInSyncSession:
_syncedSampleTypeClass
_predicateForSampleAgeInSyncSession:sampleTypeClass:
_predicateForSampleAgeWithMaximumObjectAgeByType:defaultMaxAge:sessionStartDate:
_categoryTypeWithCode:
_predicateForCategoryTypesToSync
_categoryTypesDerivedFromQuantitySamples
_allTypesOfClass:
sleepDurationGoalType
_headphoneAudioExposureSamplesExpirationPredicateForNowDate:
documentTypeForIdentifier:
_insertECGWithCodableBinarySample:syncStore:profile:provenance:error:
_insertObjectFromBinaryCodable:syncStore:profile:provenance:error:
_allBinarySampleTypes
fitnessFriendActivitySnapshotType
_resetPullState:error:
_prepareForEpochChangeWithPersistedState:error:
_requiresSyncWithError:
persistedStoreState
_fetchChangeRecordsWithChangeToken:
_isRelevantChangeRecord:
_updatePersistedServerChangeToken:
_fetchChangeRecordsOperationDidFinish:initialChangeToken:
_requiresSyncForSequence:error:
_orderedChangeRecordsBySequenceRecordIDWithFetchedChangeRecords:
_requiredRecordsWithOrderedChangeRecords:sequenceRecord:error:
_isValidAnchorRangeMap:lastAnchorMap:error:
_shouldApplyAnchorRangeMap:receivedAnchorMap:
_initialServerChangeToken
_initWithSQL:
_rawSQL
initWithHDSyncAnchorRange:
anchorRange
setAnchorRangesByEntityIdentifier:
anchorRangesByEntityIdentifier
_anchorRangesByEntityIdentifier
orderedSet
hd_associatedObjects
hd_associatedSampleTypes
_hasMinimumQuantity
_hasMaximumQuantity
_hasMostRecentQuantity
_hasMostRecentQuantityDateInterval
_pushTargetsWithError:
_pullTargetsWithError:
_isValidPushStoreRecord:zone:ownerIdentifier:
_storeForStoreRecord:zone:error:
_hasStateMismatchForStoreForStoreRecord:zone:error:
_userDefaultsKeyForName:key:
_lock_activityFinishedWithResult:minimumRetryInterval:activityStartDate:error:
_lock_errorCount
_dateForDefaultsKey:
_updateCriteriaForActivity:
_currentInterval
_criteriaForInterval:
_lock_setLastSuccessfulRunDate:
unitTesting_didPerformActivityWithResult:
_performActivityIfPossibleWithCompletion:
_performActivityIfWaiting
_performActivity:
_lock_currentInterval
_requiresProtectedData
_lock_incrementErrorCount
_finishActivity:result:
_unitTest_activityFiredButRunDeclined
_performActivityWithCompletion:
unitTesting_runDeclinedForActivity:
errorCount
isWaitingToRun
lastSuccessfulRunDate
synthesizeActivityFire
unitTest_setShouldDefer:
_lastSuccessfulRunDateUserDefaultsKey
_waitingActivityCompletion
_errorCountUserDefaultsKey
_minimumIntervalDefaultsKey
_unitTest_shouldDeferOverride
_interval
initWithIdentifier:dateInterval:heartRateThreshold:associatedSampleUUIDs:resumeContext:
associatedSampleUUIDs
heartRateThreshold
_associatedSampleUUIDs
_heartRateThreshold
_categoryType
_categorySamplesSplittingDurationWithType:value:startDate:endDate:device:metadata:
identityLookupInfo
participantPushStoreIdentifier
participantOwnerIdentifier
requiredZoneDeviceMode
_participantPushStoreIdentifier
_participantOwnerIdentifier
_requiredZoneDeviceMode
runWhenSyncProhibited
setManager:
setContext:
repositories
setRepositories:
_runWhenSyncProhibited
_repositories
_discardInvalidSharedZones
_checkForOrphanedSequenceRecords
_ecgSampleWithCodableBinarySample:
_symptomSamplesForECG:
_setCreationDate:
_symptomSamplesForSymptomTypes:withValue:ecg:
remote_finishAllWorkoutsWithCompletion:
remote_generatePauseOrResumeRequestWithCompletion:
remote_generateFakeDataForActivityType:minutes:completion:
_deviceEntityWithDevice:database:error:
UDIDeviceIdentifier
_insertDeviceWithUUID:creationDate:name:manufacturer:model:hardwareVersion:firmwareVersion:softwareVersion:localIdentifier:UDIDeviceIdentifier:syncProvenance:database:error:
_predicateForDeviceWithUUID:
_predicateForDevice:
_deviceEntitiesWithPredicate:healthDatabase:error:
_predicateForDeviceProperty:withValues:
_propertiesForDevice
_deviceWithRow:
_validateCodableDevice:error:
_sqlPropertyForPredicateProperty:
_insertCodableDevices:syncStore:healthDatabase:error:
_codableDeviceWithRow:
deviceUUIDInHealthDatabase:error:
creationDateInHealthDatabase:error:
setFitnessMachineType:
timeToBeginExperience
setTimeToBeginExperience:
workoutEndErrorCode
setWorkoutEndErrorCode:
_timeToBeginExperience
_workoutEndErrorCode
_reset
timerWithKey:
clear
_recordTimeToAuthorize
timerValue
elapsedSeconds
_failureReasonForError:
authorizationTimer
setAuthorizationTimer:
gymKitWorkoutEvent
setGymKitWorkoutEvent:
_authorizationTimer
_gymKitWorkoutEvent
initWithOwnerIdentifier:sessionUUID:workoutConfiguration:
cmWorkout
setCmWorkout:
_cmWorkout
_queue_startWorkoutWithAssertion:
_queue_coreMotionWorkoutMets
queryWorkoutMetsWithSessionId:handler:
_queue_countActiveAssertionsForSessionUUID:
_queue_stopWorkoutWithAssertion:
_queue_cmWorkoutForConfiguration:sessionUUID:
_queue_coreMotionWorkoutManager
startWorkout:
shouldDisambiguateLocation
initWithSessionId:location:poolLength:
initWithSessionId:workoutLabel:
initWithSessionId:workoutType:manufacturerName:model:
initWithSessionId:type:locationType:
initWithSessionId:type:
stopWorkout:
_cmWorkoutMets
_currentCMWorkout
client_deliverSamples:clearPendingSamples:isFinalBatch:queryUUID:
_delegateToOperationForRemoveSharingParticipants:
removeAllParticipants
participantsToRemove
_removeAllParticipants
hasObject
setHasDataType:
hasDataType
clearModificationDates
modificationDatesAtIndex:
setHasUserOrdered:
setModificationDates:count:
_modificationDates
_sourceUUIDs
hasBirthDate
_isAutoPauseEnabled
_currentState
_corry_fixHFDProtectionClassWithError:
_corry_temporaryHFDURL
_queue_currentState
_queue_updateForCurrentConfiguration
_queue_startHeartRateCollection
_queue_stopHeartRateCollection
_queue_service:sessionDidConnect:
_queue_service:sessionDidDisconnect:
_cancelSessionsWithIdentifiers:
_queue_stateDidChange
_queue_service:session:statusDidChange:finished:error:
_queue_handleCharacteristic:device:
_heartRatePairingsWithError:
_queue_startHeartRateServices:
_queue_configurationChanged:
_oneShotServices
_pendingSessions
_connectedService
_connectedSessionIdentifier
nextMindfulSessionSampleTime
didGenerateMindfulnessMinute
_mindfulSessionSampleForDemoPerson:atTime:startDate:
_heartRatesFromMindfulSessionSample:demoPerson:atTime:
setDidGenerateMindfulnessMinute:
setNextMindfulSessionSampleTime:
_didGenerateMindfulnessMinute
_nextMindfulSessionSampleTime
setWalking:
setHasWalking:
hasWalking
setAutomotive:
setHasAutomotive:
hasAutomotive
setCycling:
setHasCycling:
hasCycling
setRunning:
setHasRunning:
hasRunning
setOther:
setHasOther:
hasOther
setWorkout:
setHasWorkout:
hasWorkout
setHeartRate:
setHasHeartRate:
hasHeartRate
setActiveCalories:
setHasActiveCalories:
hasActiveCalories
setUnknown:
setHasUnknown:
hasUnknown
walking
automotive
cycling
running
other
workout
activeCalories
unknown
_activeCalories
_automotive
_cycling
_heartRate
_other
_running
_unknown
_walking
_workout
millimeterOfMercuryUnit
heartRateForDemoPerson:atTime:
bloodPressureForDemoPerson:atTime:
correlationWithType:startDate:endDate:objects:
respirationRateForDemoPerson:atTime:
bodyTempInCelsiusForDemoPerson:atTime:
oxygenSaturationForDemoPerson:atTime:currentDate:
pascalUnitWithMetricPrefix:
averageHeartRateForOxygenSaturation:atTime:
peripheralPerfusionIndexForDemoPerson:atTime:
_computeHeartRateForDemoPerson:atTime:
_computeRespirationRateForDemoPerson:atTime:
_computeBloodPressureForDemoPerson:atTime:baseBloodPressure:stdDev:
_computeMaxHRForDemoPerson:atTime:
diurnalBPVariationTable
diurnalTempVariationTable
setDiurnalBPVariationTable:
setDiurnalTempVariationTable:
nextHeartRateSampleTime
setNextHeartRateSampleTime:
nextRespirationRateSampleTime
setNextRespirationRateSampleTime:
nextBloodPressureSampleTime
setNextBloodPressureSampleTime:
nextBodyTempSampleTime
setNextBodyTempSampleTime:
nextOxygenSaturationSampleTime
setNextOxygenSaturationSampleTime:
nextPeripheralPerfusionIndexSampleTime
setNextPeripheralPerfusionIndexSampleTime:
lastPeripheralPerfusionIndexValue
setLastPeripheralPerfusionIndexValue:
_diurnalBPVariationTable
_diurnalTempVariationTable
_nextHeartRateSampleTime
_nextRespirationRateSampleTime
_nextBloodPressureSampleTime
_nextBodyTempSampleTime
_nextOxygenSaturationSampleTime
_nextPeripheralPerfusionIndexSampleTime
_lastPeripheralPerfusionIndexValue
workoutManagerStateChanged:
_shouldRequestActiveCollectionForConfiguration:
dataCollector:didCollectHeartRate:device:source:
heartRateContext
_notifyForSensorDatum:collector:device:source:
_metadataForSensorDatum:collector:
_heartRateContext
setHasAccepted:
hasAccepted
_accepted
hasActiveEnergy
activeEnergy
hasTotalEnergy
hasAverageHeartRate
_appendUInt16Value:type:toData:before:
_hasHeartRate
_hasActiveEnergy
_hasTotalEnergy
_hasAverageHeartRate
_activeEnergy
_totalEnergy
_compareFreezeStateWithSample:
setAccessibilityAssertion:
sharingEnabled
_predicateForSourceEntities:types:
_maxObjectPersistentIDForProfile:error:
_setAuthorizationStatuses:authorizationRequests:authorizationModes:sourceEntity:dateModified:syncProvenance:objectAnchor:options:profile:database:error:
_allSourcesRequestingTypes:additionalPredicate:profile:error:
_predicateForTypes:
_predicateForBundleIdentifier:profile:error:
_resetAuthorizationStatusesWithPredicate:profile:error:
_sourceEntityForCodableSourceAuthorization:syncStore:profile:database:error:
_insertCodableAuthorizations:sourceEntity:syncProvenance:objectAnchor:currentDate:options:profile:database:error:
_insertAuthorizationWithSourceIdentifier:dataTypeCode:authorizationStatus:authorizationRequest:authorizationMode:modificationDate:currentDate:syncProvenance:objectAnchor:modificationEpoch:options:profile:database:error:
_nextModificationEpochForSourceIdentifier:type:profile:database:error:
_setDataTypeCodeWithObjectType:
_setAuthorizationStatusWithNumber:
_setAuthorizationRequestWithNumber:
_setAuthorizationModeWithNumber:
_setModificationDate:
_predicateForSourceEntities:
modificationDateForSourceEntity:type:profile:error:
setAuthorizationStatuses:sourceEntity:profile:error:
_insertCodableSourceAuthorizations:overwriteExisting:syncStore:profile:error:
_propertiesForCodableAuthorization
_addAuthorizationWithRow:toCodableCollection:
_predicateForType:
createCodableSourceAuthorizationWithSource:syncSession:
didGenerateCodableSourceAuthorizationsForSyncSession:
_backupInfoWithSyncStore:
_setBackupInfo:
backupInfoUserDefaultsKey
setAuthorizationBackupPushIdentifier:syncStore:
authorizationBackupPullIdentifierWithSyncStore:
authorizationBackupPushIdentifierWithSyncStore:
resetAuthorizationBackupIdentifiers
_predicateForAverageHeartRate
_predicateForPrivateECGClassification
_predicateForPublicECGClassification
_predicateForSymptomsStatus
eventTypeAsString:
StringAsEventType:
_computeTargetsForSeizure
_markPendingOwnerForSeizureTargets
_updatedStoreRecordsForContainer:
@16@0:8
@"NSArray"16@0:8
r^{?=@@C}24@0:8^Q16
@56@0:8@16@24@32@40^@48
@24@0:8@16
B32@0:8@16@24
@56@0:8@16@24q32@40@?48
B16@0:8
@40@0:8q16^{HDSQLiteRow=}24^@32
B48@0:8@16q24^{HDSQLiteRow=}32^@40
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16B24@28
v36@0:8@"HDSynchronousTaskGroup"16B24@"NSArray"28
@32@0:8@16@24
v16@0:8
v24@0:8#16
v24@0:8@16
@"NSMutableArray"
@"HDSynchronousTaskGroup"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8^{_NSZone=}16
@"NSString"
@"<HDHealthDatabase>"
@"HDSourceManager"
@"HDDeviceManager"
@"HDDaemon"
@"<HDHealthDaemon>"
@"HDDataCollectionManager"
@"HDUserCharacteristicsManager"
@"HDActivityCacheManager"16@0:8
@40@0:8@16@24@32
@"HDAgeGatingManager"
@"HDAppSubscriptionManager"
@"HDAWDSubmissionManager"
@"HDCurrentActivitySummaryHelper"
@"HDFitnessMachineManager"
@"HDNanoSyncManager"
@"HDNotificationManager"
@"HDHealthServiceManager"
@"HDServiceConnectionManager"
@"HDWorkoutManager"
@"HDDemoDataManager"
@"HDTinkerPrivacyAlertCoordinator"
@"NSSet"
v32@0:8@16@24
v32@0:8@"HDAssertionManager"16@"HDAssertion"24
@48@0:8@16Q24@32@40
v40@0:8@16@24@?32
@32@0:8Q16@24
@"HDProfile"
@"HDAssertionManager"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
v20@0:8B16
@48@0:8@16@24@32@40
@32@0:8@16^@24
B40@0:8@16@24^@32
B32@0:8@16^@24
v32@0:8@16@?24
@"NSArray"
@"HDCodableCodedQuantity"
@"HDCodableMedicationDosageList"
@"NSData"
@"HDCodableMedicalRecord"
@"HDCodableMedicalCodingList"
@"HDCodableMedicalCoding"
v40@0:8@16@24@32
v40@0:8@16Q24Q32
v48@0:8@16@24@32@?40
v40@0:8@"<HDWorkoutDataDestination>"16@"NSDate"24@"NSDate"32
v40@0:8@"<HDWorkoutDataDestination>"16Q24Q32
v48@0:8@"<HDWorkoutDataDestination>"16@"NSDate"24@"NSDate"32@?<v@?B@"NSError">40
v32@0:8@"<HDWorkoutDataDestination>"16@"HKWorkoutConfiguration"24
@"HKDataFlowLink"16@0:8
@"NSUUID"16@0:8
@"NSSet"16@0:8
v32@0:8@"NSArray"16@"<HDWorkoutDataSource>"24
v32@0:8@"NSDictionary"16@"<HDWorkoutDataSource>"24
v32@0:8@"HKWorkoutConfiguration"16@"<HDWorkoutDataSource>"24
@"<HDWorkoutDataAccumulator>"16@0:8
v48@0:8@16q24q32@40
v48@0:8@"HDWorkoutSessionServer"16q24q32@"NSDate"40
v32@0:8@"HDWorkoutSessionServer"16@"_HKWorkoutEvent"24
v32@0:8@"HDWorkoutSessionServer"16@"NSError"24
v32@0:8@"HDWorkoutSessionServer"16@"<HDWorkoutDataAccumulator>"24
v32@0:8@"HDWorkoutSessionServer"16@"NSString"24
v24@0:8Q16
v24@0:8d16
v24@0:8@"HKWorkoutRoute"16
v36@0:8@16@24B32
v36@0:8@"HKDataFlowLink"16@"HKDataFlowLink"24B32
v24@0:8@"NSUUID"16
@"HDWorkoutSessionServer"
@"HDLocationDataCollector"
@"HKDataFlowLink"
@"HKUnit"
@"HKQuantity"
@"NSUUID"
v32@0:8@16d24
v48@0:8@16@24d32q40
@40@0:8@16q24@32
@24@0:8q16
i32@0:8^{sqlite3=}16^{sqlite3=}24
i32@0:8B16i20^@24
i24@0:8^@16
v24@0:8@?16
B24@0:8^@16
B40@0:8@16^@24B32B36
@20@0:8i16
i16@0:8
B40@0:8q16^@24@?32
B48@0:8^@16@?24@?32@?40
B48@0:8@16^@24@?32@?40
B56@0:8r*16^@24@?32@?40@?48
B52@0:8@16B24^@28@?36@?44
B40@0:8q16@24^@32
q32@0:8@16^@24
B48@0:8@16q24@32^@40
B48@0:8@16@24^q32^@40
v32@0:8@?16@?24
q40@0:8@16@24^@32
B56@0:8@16@24@32@40^@48
@40@0:8@16@24^@32
B40@0:8@16^@24@?32
@24@0:8^@16
B40@0:8^{sqlite3_stmt=}16^B24^@32
q16@0:8
v24@0:8q16
^{sqlite3=}
@"NSMutableDictionary"
@"NSURL"
@"HDSQLiteVFS"
@"<HDSQLiteDatabaseDelegate>"
@"HDSQLiteStatementCache"
@"NSError"
@"NSNumber"32@0:8@"NSUUID"16^@24
@"NRDevice"16@0:8
@"NRDevice"24@0:8@"NSUUID"16
@"NSNumber"40@0:8@"NSUUID"16@"NRDevice"24^@32
@"<HDPairedDeviceCapabilityProvidingDelegate>"16@0:8
v24@0:8@"<HDPairedDeviceCapabilityProvidingDelegate>"16
@"<HDPairedDeviceCapabilityProvidingDelegate>"
@32@0:8@16q24
@"CKRecord"
@"CKRecordID"
@40@0:8q16q24q32
{?=qqq}16@0:8
v40@0:8{?=qqq}16
{?="majorVersion"q"minorVersion"q"patchVersion"q}
v32@0:8Q16@?24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v32@0:8Q16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@?16@24
v32@0:8@?<v@?>16@"NSString"24
@48@0:8@16B24@28@36i44
@80@0:8@16q24@32q40i48B52@56@64q72
q24@0:8@16
@"HDCloudSyncCodableChange"
C16@0:8
d16@0:8
I16@0:8
S16@0:8
s16@0:8
@"HDFitnessMachineCharacteristicDoubleField"
@"HDFitnessMachineCharacteristicUInt24Field"
@"HDFitnessMachineCharacteristicUInt16Field"
@"HDFitnessMachineCharacteristicInt16Field"
@"HDFitnessMachineCharacteristicUInt8Field"
{?="code"b1}
{?="altitude"b1"course"b1"horizontalAccuracy"b1"latitude"b1"longitude"b1"speed"b1"timestamp"b1"verticalAccuracy"b1}
@"HDSimpleGraphDatabase"
v20@0:8i16
i24@0:8@16
@24@0:8Q16
{?="confidence"b1"latitude"b1"longitude"b1"uncertainty"b1"locationOfInterestType"b1}
@44@0:8@16@24B32@36
@"_HKXPCAuditToken"
@"_HKEntitlements"
@"PBCodable"16@0:8
@24@0:8@"PBCodable"16
v28@0:8@16B24
@?16@0:8
@"HDXPCAlarmScheduler"
v48@0:8@16@24@32@40
B64@0:8@16@24q32@40@48d56
@72@0:8@16@24@32@40q48Q56^@64
B56@0:8@16@24q32@40d48
@48@0:8@16@24@32q40
@"HDQuantityDatum"
@"HDCodableSample"
@"NSDictionary"24@0:8@"NSDateInterval"16
@"NSDate"16@0:8
@"NSNumber"
@"NSDateInterval"
@"HKQuantityType"
@136@0:8q16@24@32{?=qqq}40@64@72@80@88@96@104@112@120^@128
@40@0:8q16@24^@32
{?="timeStamp"b1}
@"HDCodableRoutineLocation"
{?="confidence"b1"nextEntryTime"b1"modeOfTransportation"b1"sourceType"b1}
B32@0:8@16o^@24
@48@0:8q16q24q32@40
@40@0:8@16@24@?32
@"HDCodableError"
@"HDCodableSharingSetupMetadata"
B48@0:8q16@24@32^@40
B56@0:8q16@24@32@40^@48
B48@0:8^q16@24@32^@40
B56@0:8^@16^q24^@32@40^@48
q24@0:8^@16
{?="sequenceNumber"b1"statusCode"b1}
v40@0:8@16@24Q32
v32@0:8@"HDFitnessMachinePairingManager"16@"HDFitnessMachineSession"24
v32@0:8@"HDFitnessMachinePairingManager"16@"NSError"24
v28@0:8@"HDFitnessMachinePairingManager"16B24
@"HDHealthServiceOOBInfo"32@0:8@"HDFitnessMachinePairingManager"16^@24
v24@0:8@"HDFitnessMachinePairingManager"16
v40@0:8@"HDFitnessMachinePairingManager"16Q24Q32
v40@0:8@"HDFitnessMachinePairingManager"16@"HKHealthService"24Q32
v24@0:8@"HDFitnessMachineStateTimers"16
Q24@0:8@16
Q28@0:8@16B24
v36@0:8q16B24@28
v48@0:8@16Q24@32@40
v32@0:8q16@24
v32@0:8Q16@24
v44@0:8Q16Q24@32B40
@"HDFitnessMachineDataCollector"
@"HDFitnessMachinePairingManager"
@"HDFitnessMachineSession"
@"HKSynchronousObserverSet"
@"HDFitnessMachineDataProducer"
@"HDFitnessMachineStateTimers"
@"HDFitnessMachineAnalyticsCollector"
@64@0:8#16@24@32q40@48@?56
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24q32@40
@"NSDictionary"
B32@0:8^@16@?24
@"<HDHealthDaemonExtension>"24@0:8@"<HDHealthDaemon>"16
@"<HDProfileExtension>"24@0:8@"HDProfile"16
B24@0:8@"<HDHealthDaemon>"16
v36@0:8@16B24q28
B40@0:8d16@24@32
@"<HDSensorDatum>"
@"<NSSecureCoding>"32@0:8@"NSString"16^@24
B24@0:8@"NSString"16
@"HDCodableInspectableValue"
@"HDCodableMedicalCodingListList"
v32@0:8@"HKHealthStoreIdentifier"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"HKHealthStoreIdentifier"@"NSError">16
v40@0:8@"NSSet"16@"NSSet"24@?<v@?@"HKHealthStoreIdentifier"@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"HKObjectType"24@?<v@?B@"NSError">32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"CLInUseAssertion"
@"HKObserverSet"
@"<HDLocationManagerUnitTestDelegate>"
@"HDCloudSyncStore"
@"HDCloudSyncTarget"
v24@0:8@"HDSyncSession"16
v40@0:8@"HDSyncSession"16@"NSArray"24@?<v@?q@"NSError">32
v36@0:8@"HDSyncSession"16B24@"NSError"28
B32@0:8@"HDSyncSession"16^@24
q48@0:8#16@24q32^@40
B36@0:8@16B24^@28
v36@0:8@16B24@?28
v28@0:8B16@20
@"HDCloudSyncSequenceRecord"
@"HDCloudSyncSessionContext"
{?="completedDate"b1"value"b1"achievementType"b1"workoutActivityType"b1}
v48@0:8@16d24@32@40
@32@0:8@16d24
d24@0:8@16
d32@0:8d16d24
@48@0:8@16@24d32@40
@56@0:8@16@24d32d40@48
q24@0:8d16
B32@0:8@16d24
d56@0:8@16d24q32d40d48
d32@0:8@16d24
d40@0:8@16d24d32
d48@0:8@16d24@32@40
@"HDDemoDataFoodDatabase"
{?="success"b1}
@"HDCodableQuantity"
{?="dateValue"b1"numberDoubleValue"b1"numberIntValue"b1}
@48@0:8@16@24@32@?40
v32@0:8d16@?24
@"NSObject<OS_xpc_object>"
@"NSObject<OS_os_log>"
@32@0:8@16Q24
@"HDCodableMedicalDateInterval"
@"HDCodableEntityIdentifier"
{?="anchor"b1"objectType"b1}
v32@0:8@16I24I28
v32@0:8@"NSString"16I24I28
v24@0:8@"NSString"16
@28@0:8@16B24
@"<HDQueryManagerUnitTestDelegate>"
@"NSObject<OS_dispatch_source>"
@"HDQueryServerClientState"
@32@0:8@?16@24
@"HDQueryServer"
@40@0:8#16@24@32
@52@0:8#16@24@32B40@44
v32@0:8@"HDAnalyticsSubmissionCoordinator"16@?<v@?@"NSMutableDictionary"q@"NSError">24
v24@0:8@"<HDHealthDaemon>"16
B48@0:8@16@24@32^@40
v32@0:8@"NSArray"16@"NSNumber"24
v32@0:8@"NSSet"16@"NSNumber"24
v32@0:8@"NSArray"16@"HKSampleType"24
v40@0:8d16@?24@?32
@"_HKDelayedOperation"
@"NSLock"
@32@0:8@?16@?24
@"HKSample"16@0:8
@56@0:8@16@24@32q40@48
@"HDSampleQueryDescription"
@"HKSortedQueryAnchor"
{vector<std::__1::tuple<long long, HKSample *>, std::__1::allocator<std::__1::tuple<long long, HKSample *> > >="__begin_"^{tuple<long long, HKSample *>}"__end_"^{tuple<long long, HKSample *>}"__end_cap_"{__compressed_pair<std::__1::tuple<long long, HKSample *> *, std::__1::allocator<std::__1::tuple<long long, HKSample *> > >="__value_"^{tuple<long long, HKSample *>}}}
{tuple<long long, HKSample *>="__base_"{__tuple_impl<std::__1::__tuple_indices<0, 1>, long long, HKSample *>="__value_"q"__value_"@"HKSample"}}
v56@0:8@16@24{HDDemoDataMenstrualFlow=qq}32@48
{HDDemoDataMenstrualFlow=qq}32@0:8@16@24
q32@0:8@16d24
@"<HDWorkoutDataAccumulator>"
@"HKWorkoutConfiguration"
v32@0:8@"NSDate"16@?<v@?B@"NSError">24
@24@0:8@?16
@"HDDaemonTransaction"
@"_HKDeepBreathingSessionConfiguration"
@"HKStatisticsCollection"
@"NSDate"
@"NSDateComponents"
@"HDActivityCacheDataSource"
v32@0:8@16q24
v40@0:8@16d24q32
{?="shouldPrompt"b1}
@100@0:8@16@24@32@40Q48B56@60@68q76@84^@92
@48@0:8@16q24@32^@40
@104@0:8@16@24@32@40Q48B56@60B68@72q80@88^@96
@44@0:8@16B24@28^@36
@52@0:8@16@24B32@36^@44
B48@0:8@16@24^@32@?40
B48@0:8Q16@24^B32^@40
B64@0:8@16@24@32@40@48^@56
B56@0:8@16@24@32^B40^@48
B64@0:8@16{HDSyncAnchorRange=qq}24@40@48^@56
q48@0:8@16q24@32^@40
q48@0:8@16@24@32^@40
q56@0:8@16@24q32@40^@48
@56@0:8@16Q24@32@40^@48
B64@0:8@"HDSyncSession"16{HDSyncAnchorRange=qq}24@"HDProfile"40@"<HDSyncMessageHandler>"48^@56
@"NSSet"20@0:8i16
@"<HDSyncCodable>"24@0:8@"NSData"16
q48@0:8@"NSArray"16@"<HDSyncStore>"24@"HDProfile"32^@40
@"HDSyncEntityIdentifier"16@0:8
q48@0:8@"HDSyncSession"16q24@"HDProfile"32^@40
q56@0:8@"HDSyncSession"16@"HDSQLitePredicate"24q32@"HDProfile"40^@48
B24@0:8@"<HDSyncStore>"16
@"NSSet"24@0:8@"HDSyncSession"16
@"NSNumber"56@0:8@"NSNumber"16Q24@"NSDate"32@"HDProfile"40^@48
v32@0:8@"HDNanoSyncStore"16@"NSString"24
v32@0:8@"HDNanoSyncStore"16q24
v28@0:8@"<HDHealthDatabase>"16B24
v32@0:8@"HDIDSMessageCenter"16@"HDIDSIncomingRequest"24
v32@0:8@"HDIDSMessageCenter"16@"HDIDSOutgoingRequest"24
v32@0:8@"HDIDSMessageCenter"16@"HDIDSOutgoingResponse"24
v40@0:8@"HDIDSMessageCenter"16@"IDSDevice"24@?<v@?>32
v32@0:8@"NSSet"16@"NSSet"24
v40@0:8@16@?24@?32
v40@0:8Q16@24@?32
v48@0:8Q16@24@32@?40
v40@0:8@16d24@?32
@48@0:8@16@24@32^@40
v64@0:8Q16@?24@32@40@48@?56
v44@0:8@16@24q32i40
i24@0:8q16
@36@0:8@16@24i32
q44@0:8@16i24@28^@36
v48@0:8@16Q24@32@?40
v32@0:8@16Q24
v48@0:8@16@24@?32@?40
v44@0:8@16@24B32@36
@"HKNanoSyncPairedDevicesSnapshot"
@"HDIDSMessageCenter"
@"HDKeyValueDomain"
@"HDNanoSyncStore"
@"HDPairedSyncManager"
@"HKAuthorizationRequestRecord"
@"HDCodableRoutineRequestMessage"
@"HDCodableStartWorkoutAppRequest"
@"HDCodableCompanionUserNotificationRequest"
@"HDCodableTinkerOptInRequest"
@"HDCodableTinkerPairingRequest"
@"HDCodableTinkerEndToEndCloudSyncRequest"
v24@0:8@"<HDTaskServer>"16
v32@0:8@"HDWorkoutBuilderServer"16@"NSArray"24
@"HDWorkoutBuilderServer"
@"HDCodableMedicalIDData"
@56@0:8Q16@24@32Q40@?48
@48@0:8Q16@24@32@?40
@"NSProgress"56@0:8Q16@"NSUUID"24@"NSURL"32Q40@?<v@?B@"NSError">48
@"NSProgress"48@0:8Q16@"NSUUID"24@"NSURL"32@?<v@?B@"NSError">40
@56@0:8@16#24@32@40@48
@64@0:8q16@24#32@40@48@56
v36@0:8@16B24B28B32
v44@0:8q16B24@28@36
@28@0:8B16q20
@36@0:8B16q20@28
@"<HDDatabaseCorruptionTTRPromptDataSource>"
@"NSString"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@16@"NSString"24
@"HDDemoDataGeneratorWorkoutConfiguration"
@36@0:8@16@24B32
@"HDHealthStoreClient"
@"BKSProcessAssertion"
@40@0:8@16^@24^@32
B48@0:8@16@24B32B36^@40
d36@0:8d16d24B32
v24@0:8B16B20
@"HKObserverSet<HDUserCharacteristicsProfileObserver>"
{?="endDate"b1"startDate"b1"isBusy"b1}
@"CKShareParticipant"
@"CKUserIdentityLookupInfo"
@"HDCodableWorkoutConfiguration"
@24@0:8^{HDSQLiteRow=}16
@60@0:8@16@24@32B40@44^@52
@68@0:8@16@24@32B40q44@52^@60
@88@0:8@16@24@32B40d44Q52q60B68@72^@80
@44@0:8@16@24B32^@36
v32@0:8@16r*24
@"HDCloudSyncShareSetupMetadata"
@"HDCloudSyncPipelineStageAcceptShares"
@"HDCodableSource"
B48@0:8@"HDStatisticsCollectionCalculator"16@"NSDateInterval"24^@32@?<B@?dddqB^@>40
@"HDWorkoutBuilderEntity"
v24@0:8@"CBPeripheral"16
v32@0:8@"CBPeripheral"16@"NSArray"24
v32@0:8@"CBPeripheral"16@"NSError"24
v40@0:8@"CBPeripheral"16@"NSNumber"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBDescriptor"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBL2CAPChannel"24@"NSError"32
B32@0:8@?16@24
@"CBPeripheral"
@"HKDevice"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
q40@0:8@16@24@32
q40@0:8@"HDCloudSyncManagerTask"16@"HDCloudSyncManagerTask"24@"HDCloudSyncManagerTaskQueue"32
v32@0:8@"HDPeriodicActivity"16@"NSObject<OS_xpc_object>"24
v32@0:8@"HDPeriodicActivity"16@?<v@?qd@"NSError">24
B24@0:8@"HDPeriodicActivity"16
v24@0:8@"HDProfile"16
@32@0:8@16@?24
v28@0:8B16@?20
q24@0:8B16B20
Q24@0:8B16B20
B24@0:8d16
v40@0:8@16B24B28d32
@"ACAccountStore"
@"HDCloudSyncManagerTaskQueue"
@"NSProgress"
@"APSConnection"
@"HDPeriodicActivity"
@"HDGatedActivity"
d24@0:8d16
d40@0:8d16d24d32
{linear_congruential_engine<unsigned int, 48271, 0, 2147483647>="__x_"I}
{normal_distribution<double>="__p_"{param_type="__mean_"d"__stddev_"d}"_V_"d"_V_hot_"B}
v32@0:8@"HDConceptIndexManager"16q24
@"HDSourceEntity"
@"HDDeviceEntity"
v32@0:8@"HDActivityCacheManager"16@"HKActivityCache"24
v36@0:8@"HDActivityCacheManager"16@"HKHeartRateSummary"24B32
@"HKHeartRateSummary"
@"HDActivityCacheManager"
@"NSProgress"16@0:8
@"_HKArchiveCreator"
@"HDSyncAnchorRangeMap"
@24@0:8#16
B60@0:8@16@24B32@36@44^@52
B56@0:8@16[16C]24q32@40^@48
B56@0:8@16@24q32@40^@48
B64@0:8@16@24q32B40B44@48^@56
B56@0:8q16q24q32@40^@48
B40@0:8@16q24^@32
B88@0:8@16#24@32{HDSyncAnchorRange=qq}40^q56@64^@72@?80
@48@0:8@16B24B28@32@40
@"HDDatabaseTransaction"
@44@0:8@16@24q32B40
v32@0:8^{sqlite3_stmt=}16^i24
@28@0:8q16B24
@20@0:8B16
B44@0:8r^*16r*24Q32B40
B48@0:8^I16r^*24Q32r*40
B48@0:8^i16r^*24Q32r*40
f20@0:8S16
d20@0:8I16
C32@0:8r^*16r*24
s32@0:8r^*16r*24
S32@0:8r^*16r*24
I32@0:8r^*16r*24
f32@0:8r^*16r*24
d32@0:8r^*16r*24
@40@0:8r^*16r*24@32
B36@0:8C16^*20r*28
B36@0:8S16^*20r*28
B36@0:8I16^*20r*28
@"NSData"24@0:8^@16
@"CBUUID"16@0:8
@40@0:8@"NSData"16@"NSDate"24^@32
B32@0:8@16q24
@"HDCodableCoverageClassificationList"
@"HDCodableStringList"
@"HDCloudSyncCodableMedicalID"
@"HDDemoDataGenerator"
@40@0:8@16Q24@32
@40@0:8@16@24Q32
q56@0:8#16@24q32@40^@48
@56@0:8@16Q24@32@40Q48
q24@0:8#16
v32@0:8q16#24
@"HDProfile"16@0:8
@"NSSet"24@0:8#16
B24@0:8@"NSError"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"NSMapTable"
@"<HDXPCListenerDelegate>"
@"<HDXPCListenerClientProvider>"
@"HDCloudSyncCodableProfileIdentifier"
{?="displayNameModificationDate"b1"deleted"b1}
@"HDXPCClient"
@"HDClientAuthorizationOracle"
@"HKHealthStoreConfiguration"
v40@0:8q16@24@?32
v40@0:8q16@"NSDate"24@?<v@?B@"NSError">32
@64@0:8@16@24@32@40@48@56
@"HKWorkoutSessionTaskConfiguration"
@"HKSource"
v32@0:8@"HKObjectType"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSArray"16@"HKObjectType"24@?<v@?B@"NSError">32
@"HDCodableGeneratedObjectCollection"
@"HDCodableProvenance"
@"CKContainer"
v20@0:8I16
@"HDCodableDateComponents"
{?="allergyInfoModifiedDate"b1"bloodTypeModifiedDate"b1"clinicalContactsModifiedDate"b1"dateSaved"b1"emergencyContactsModifiedDate"b1"gregorianBirthdayModifiedDate"b1"heightModifiedDate"b1"isDisabledModifiedDate"b1"isOrganDonor"b1"isOrganDonorModifiedDate"b1"medicalConditionsModifiedDate"b1"medicalNotesModifiedDate"b1"medicationInfoModifiedDate"b1"nameModifiedDate"b1"pictureDataModifiedDate"b1"primaryLanguageCodeModifiedDate"b1"shareDuringEmergencyModifiedDate"b1"weightModifiedDate"b1"bloodType"b1"schemaVersion"b1"isDisabled"b1"shareDuringEmergency"b1}
@"_HKMedicalIDData"
@"HDCloudSyncMedicalIDRecord"
@32@0:8@16^Q24
@40@0:8@16Q24^Q32
Q32@0:8@16Q24
@"NSDataDetector"
@"NSRegularExpression"
{?="durationMs"b1"endDate"b1"startDate"b1"timestamp"b1"totalDistance"b1"totalEnergyBurned"b1"totalSteps"b1"activityType"b1}
v24@0:8@?<v@?>16
@"NSProgress"32@0:8@"NSUUID"16@?<v@?q@"NSError">24
v48@0:8@16q24@32@40
v28@0:8@"HDCloudSyncManager"16B24
v32@0:8@"HDCloudSyncManager"16@"NSDate"24
v32@0:8@"HDCloudSyncManager"16@"NSError"24
v48@0:8@"HDCloudSyncManager"16q24@"NSDate"32@"NSDate"40
q32@0:8q16@24
@"HKCloudSyncObserverStatus"
@"NSObservation"
@40@0:8@16@24q32
@"CKRecordZoneID"
@"HDCloudSyncRepository"
@"HDCloudSyncZoneIdentifier"
@"HDCloudSyncRegistryRecord"
@"CKShare"
@"HDCloudSyncMasterRecord"
@"HDCloudSyncDataUploadRequestRecord"
@48@0:8@16@24@32Q40
@56@0:8@16@24@32@40Q48
@"NSTimeZone"
@56@0:8@16@24@32@40@48
@"HDSQLiteDatabase"
@"HDHFDataStore"
@"_HKBehavior"
@"<HDDatabaseMigrationTransactionDelegate>"
v48@0:8@16q24q32q40
q40@0:8q16^B24^@32
v40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSSet"@"NSError">32
{?="type"b1}
B40@0:8^@16@?24@?32
B48@0:8@16q24^@32@?40
#24@0:8@16
v32@0:8@"HDDataAggregator"16@"<HDCollectedSensorDatum>"24
v32@0:8@"HDDataAggregator"16@"HDDataCollectorConfiguration"24
@"HKSource"24@0:8@"HDDataAggregator"16
@"NSString"24@0:8@"HDDataAggregator"16
d24@0:8@"HDDataAggregator"16
#24@0:8@"HDDataAggregator"16
v44@0:8@"HDDataAggregator"16@"NSArray"24B32@"NSError"36
v40@0:8@"HDDataAggregator"16@"NSDate"24@?<v@?B@"NSError">32
v24@0:8@"<HDMetricsCollectorObserver>"16
d40@0:8@16@24d32
q40@0:8@16@24q32
@"HDDataCollectorConfiguration"
@"CMFitnessMachine"
v40@0:8@"NSString"16@"NSUUID"24@?<v@?B@"NSError">32
v32@0:8@"HKSecondaryPairedDeviceConfiguration"16@?<v@?B@"NSError">24
v36@0:8@"NSUUID"16B24@?<v@?B@"NSError">28
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
@"HDSecondaryDevicePairingRequest"
@"HKDaemonTransaction"
@"HKSecondaryPairedDeviceConfiguration"
@"HDTinkerProfile"
@32@0:8@16I24B28
@"BKSApplicationStateMonitor"16@0:8
@"BKSApplicationStateMonitor"32@0:8@"NSArray"16I24B28
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
v24@0:8r*16
v24@0:8@"<HDHealthDaemonReadyObserver>"16
v32@0:8@"<HDHealthDaemonReadyObserver>"16@"NSObject<OS_dispatch_queue>"24
v32@0:8@"<HDHealthDaemonActivatedObserver>"16@"NSObject<OS_dispatch_queue>"24
@24@0:8@"NSString"16
@"NSArray"24@0:8@"Protocol"16
@"HDBackgroundTaskScheduler"16@0:8
@"HDPluginManager"16@0:8
@"HDPrimaryProfile"16@0:8
@"<HDNanoAlertSuppressionService>"16@0:8
v24@0:8@"<HDNanoAlertSuppressionService>"16
@"_HKBehavior"16@0:8
v32@0:8r*16@24
v48@0:8@16@24d32@?40
@28@0:8i16@?20
@"HDBackgroundTaskScheduler"
@"HDContentProtectionManager"
@"HDCloudSyncCoordinator"
@"HDPluginManager"
@"HDProcessStateManager"
@"HDProfileManager"
@"HDPrimaryProfile"
^{MGNotificationTokenStruct=}
{atomic_flag="_Value"AB}
@"HDAnalyticsSubmissionCoordinator"
@"HDAutoBugCaptureReporter"
@"<HDNanoAlertSuppressionService>"
@"HDRemoteFeatureAvailabilityAssetManager"
@"HDMaintenanceWorkCoordinator"
@"HDQueryManager"
@"<HDDaemonTester>"
@"HDDaemonConnectionManager"
@"HDTaskServerRegistry"
@"HDDevicePowerMonitor"
@"HDXPCEventManager"
@64@0:8@16@24@32@40^@48^@56
v56@0:8@16@24@32@?40@?48
v68@0:8@16Q24B32@36@44@?52@?60
B48@0:8q16@24^@32@?40
@72@0:8@16@24@32@40Q48^@56^@64
@?24@0:8@16
@"<_HKXPCExportable>"40@0:8@"HDXPCListener"16@"HDXPCClient"24^@32
v40@0:8@"HDXPCListener"16@"HDXPCClient"24@"<_HKXPCExportable>"32
@"HDXPCClient"40@0:8@"HDXPCListener"16@"NSXPCConnection"24^@32
@"HDXPCListener"
@"HDCodableFHIRIdentifier"
@"HDCodableSemanticDate"
{?="extractionVersion"b1"modifiedDate"b1"state"b1"enteredInError"b1}
@32@0:8@16#24
v32@0:8@16B24B28
v40@0:8@16@24d32
v52@0:8@16@24i32B36B40q44
v44@0:8@16@24i32q36
v52@0:8@16@24@32i40q44
@28@0:8i16@20
@20@0:8C16
v20@0:8C16
v40@0:8q16q24@?32
v40@0:8q16q24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"HKCodableCondensedWorkoutCollection"@"NSError">16
{?="authorizationMode"b1"authorizationRequest"b1"authorizationStatus"b1"modificationDate"b1"modificationEpoch"b1"objectType"b1}
@"HDCodableMessageVersion"
{?="extractionHints"b1"firstSeenDate"b1"originVersionMajor"b1"originVersionMinor"b1"originVersionPatch"b1"receivedDate"b1}
@"NSHashTable"
@28@0:8@16i24
@44@0:8@16@24@32i40
@60@0:8i16@20Q28q36@44@52
@92@0:8i16@20B28Q32Q40q48@56i64@68@76q84
@"HDCloudSyncCodableSequence"
@"HDCodableInspectableValueCollection"
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
^{__CFUserNotification=}
v32@0:8q16^v24
v24@0:8^v16
B40@0:8@16^@24^@32
B56@0:8^v16Q24Q32^@40^@48
I60@0:8@16@24@32I40^@44@?52
I76@0:8@16@24@32I40^v44Q52^@60@?68
I76@0:8I16@20^v28Q36Q44@52^@60@?68
B40@0:8@16#24^@32
I24@0:8^@16
I48@0:8@16@24^@32@?40
B24@0:8@"NSData"16
B40@0:8@"NSData"16#24^@32
I48@0:8@"HDProfile"16@"HDDatabaseTransaction"24^@32@?<I@?@"NSArray"QB^@>40
@"NSFileHandle"
v32@0:8@"HDOnboardingCompletionManager"16@"NSString"24
v24@0:8@"<HDPairedDeviceCapabilityProviding>"16
@"NSNumber"24@0:8^@16
@"NSNumber"32@0:8@"NSString"16^@24
@"NSNumber"40@0:8@"NSString"16@"NRDevice"24^@32
@"NSNumber"32@0:8@"NRDevice"16^@24
@"NSDate"24@0:8^@16
v32@0:8@"<HKFeatureAvailabilityProvidingObserver>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<HKFeatureAvailabilityProvidingObserver>"16
v32@0:8@"<HDFeatureAvailabilityExtensionObserver>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<HDFeatureAvailabilityExtensionObserver>"16
@56@0:8@16@24q32@40@48
@64@0:8@16@24q32@40@48@56
@72@0:8@16@24q32@40@48@56@64
@"<HDPairedDeviceCapabilityProviding>"
{?="fhirVersionMajor"b1"fhirVersionMinor"b1"fhirVersionPatch"b1"lastUpdatedDate"b1}
@60@0:8@16q24@32B40q44^@52
@56@0:8@16q24@32@40@48
B56@0:8@16q24q32q40^@48
B48@0:8@16q24q32^@40
B32@0:8q16^@24
B48@0:8@16@24q32^@40
{?="endAnchor"b1"sequence"b1"startAnchor"b1"objectType"b1"complete"b1"speculative"b1}
@48@0:8@16Q24@32^@40
@48@0:8q16@24@32^@40
v32@0:8q16q24
v56@0:8@16@24@32B40B44@48
@"HKQueryAnchor"
q24@0:8q16
@"NSArray"24@0:8q16
v32@0:8q16@"HDDatabaseMigrator"24
@"HDSQLiteDatabase"32@0:8@"HDSQLiteDatabasePool"16^@24
v32@0:8@"HDSQLiteDatabasePool"16@"NSArray"24
@"HDSQLiteDatabase"40@0:8@"HDDatabaseTransaction"16^@24^@32
@"HDSQLiteDatabase"32@0:8@"HDDatabaseTransaction"16^@24
v32@0:8@"HDSQLiteDatabase"16q24
v24@0:8@"HDDatabaseJournal"16
v48@0:8@16q24i32@36B44
v48@0:8@"HDHFDataStore"16q24i32@"NSError"36B44
v32@0:8@"HDDatabaseMigrationTransaction"16@"NSData"24
v40@0:8@"HDDatabaseMigrationTransaction"16@"NSData"24@"NSData"32
@40@0:8@16d24^@32
B48@0:8@"HDDatabaseTransactionContext"16^@24@?<B@?@"HDDatabaseTransaction"^@>32@?<B@?@"NSError"^@>40
B40@0:8@"HDDatabaseTransactionContext"16^@24@?<B@?^@>32
B32@0:8^@16@?<B@?^@>24
@"HDAssertion"40@0:8@"NSString"16d24^@32
@"HDAssertion"40@0:8@"HDAssertion"16@"NSString"24^@32
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
B32@0:8@"HDJournalEntry"16^@24
B32@0:8@"NSArray"16^@24
v24@0:8@"<HDDatabaseProtectedDataObserver>"16
v32@0:8@"<HDDatabaseProtectedDataObserver>"16@"NSObject<OS_dispatch_queue>"24
v40@0:8@"<HDDatabaseJournalMergeObserver>"16q24@"NSObject<OS_dispatch_queue>"32
v32@0:8@"<HDDatabaseJournalMergeObserver>"16q24
@48@0:8@16d24d32^@40
@24@0:8B16B20
@32@0:8q16^@24
B40@0:8d16@24^@32
v44@0:8q16@24B32@36
@40@0:8@16q24^@32
v36@0:8@16q24B32
@44@0:8@16B24d28^@36
Q24@0:8q16
B28@0:8q16i24
@"HDDatabaseJournal"
@"NSConditionLock"
@"NSOperationQueue"
@"NSObject<OS_dispatch_group>"
i44@0:8r*16^{sqlite3_file=^{sqlite3_io_methods}}24i32^i36
@"NSData"16@0:8
v24@0:8@"NSData"16
v48@0:8@16@24@32^v40
@48@0:8@16@24^B32^@40
@64@0:8@16@24@32@40@48^@56
B48@0:8^{_HDWrappedSource=@{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}dB}16@24@32^@40
@"HDDatabaseValueCache"
@48@0:8{vector<_HDWrappedSource, std::__1::allocator<_HDWrappedSource> >=^{_HDWrappedSource}^{_HDWrappedSource}{__compressed_pair<_HDWrappedSource *, std::__1::allocator<_HDWrappedSource> >=^{_HDWrappedSource}}}16B40B44
{vector<_HDWrappedSource, std::__1::allocator<_HDWrappedSource> >=^{_HDWrappedSource}^{_HDWrappedSource}{__compressed_pair<_HDWrappedSource *, std::__1::allocator<_HDWrappedSource> >=^{_HDWrappedSource}}}16@0:8
v40@0:8{vector<_HDWrappedSource, std::__1::allocator<_HDWrappedSource> >=^{_HDWrappedSource}^{_HDWrappedSource}{__compressed_pair<_HDWrappedSource *, std::__1::allocator<_HDWrappedSource> >=^{_HDWrappedSource}}}16
{unordered_map<long long, HKSource *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, HKSource *> > >={__hash_table<std::__1::__hash_value_type<long long, HKSource *>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, HKSource *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::hash<long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::equal_to<long long>, true> >=f}}}16@0:8
v56@0:8{unordered_map<long long, HKSource *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, HKSource *> > >={__hash_table<std::__1::__hash_value_type<long long, HKSource *>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, HKSource *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::hash<long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::equal_to<long long>, true> >=f}}}16
{vector<_HDWrappedSource, std::__1::allocator<_HDWrappedSource> >="__begin_"^{_HDWrappedSource}"__end_"^{_HDWrappedSource}"__end_cap_"{__compressed_pair<_HDWrappedSource *, std::__1::allocator<_HDWrappedSource> >="__value_"^{_HDWrappedSource}}}
{unordered_map<long long, HKSource *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, HKSource *> > >="__table_"{__hash_table<std::__1::__hash_value_type<long long, HKSource *>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, HKSource *> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, HKSource *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::hash<long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, HKSource *>, std::__1::equal_to<long long>, true> >="__value_"f}}}
v40@0:8@16q24Q32
B24@0:8q16
@"HDAppAssertionManager"
v32@0:8@"NSArray"16@?<v@?@"HKQuantitySample"@"NSError">24
@"HKQuantitySample"
{?="standHourTimestamp"b1"timestamp"b1"didStand"b1}
{?="numberDoubleValue"b1"numberIntValue"b1"timestamp"b1}
@"HDAWDHealthKitRoutineLocation"
{?="endDate"b1"startDate"b1"timestamp"b1"mode"b1}
@"HDDataProvenanceManager"
@"HDEntityEncoder"
@28@0:8I16S20S24
@"HKWorkoutRoute"
v32@0:8@16i24B28
v48@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32@"NSDictionary"40
v40@0:8@"CLLocationManager"16@"CLLocation"24d32
v28@0:8@"CLLocationManager"16B24
v32@0:8@"CLLocationManager"16@"NSDictionary"24
v32@0:8@"CLLocationManager"16i24B28
v40@0:8@"CLLocationManager"16@"NSDictionary"24@"CLLocation"32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"NSError"32
v32@0:8@"CLLocationManager"16@"_CLRangingPeer"24
v40@0:8@"CLLocationManager"16@"_CLRangingPeer"24@"NSError"32
v32@0:8@"CLLocationManager"16d24
v40@0:8@"CLLocationManager"16@"CLLocation"24@?<v@?>32
v40@0:8@"CLLocationManager"16@"CLRegion"24@?<v@?>32
v40@0:8@"CLLocationManager"16@"CLVisit"24@?<v@?>32
v36@0:8@16@24i32
v36@0:8@"CLLocationSmoother"16@"NSArray"24i32
@"CLLocationSmoother"
@"HDSmoothingTask"
@"_HKMobileAssetDownloadManager"
@"NSUserDefaults"
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
@120@0:8@16@24@32@40@48@56@64@72@80@88Q96@104@112
@"HKWorkout"
@44@0:8@16@24@32B40
@60@0:8@16@24@32B40@44q52
@"HDCloudSyncCodableStore"
@"HDMockPrimaryProfile"
{?="timestamp"b1"batteryState"b1}
@32@0:8q16@24
@"HDCodableCompanionUserNotificationConfiguration"
@"HDCodableReferenceRangeList"
I24@0:8@16
v36@0:8@16i24I28I32
@"BKSApplicationStateMonitor"
@"<HDApplicationStateMonitorProvider>"
@72@0:8@16@24#32q40@48@56^@64
B40@0:8@16@24#32
q72@0:8@16@24@32@40^@48^@56^@64
B72@0:8@16@24q32@40@48^@56^@64
B72@0:8@16@24@32@40@48@56^@64
v60@0:8@16@24B32@36@?44@?52
B80@0:8@16#24@32{HDSyncAnchorRange=qq}40@56@64^@72
@64@0:8@16@24@32@40^@48@?56
q32@0:8@16@24
B40@0:8@16@24@?32
@32@0:8@"NSString"16@"HDSQLiteDatabase"24
B32@0:8@"NSString"16@"HDSQLiteDatabase"24
@"NSDate"32@0:8@"NSString"16@"HDSQLiteDatabase"24
@"NSNumber"32@0:8@"NSString"16@"HDSQLiteDatabase"24
@"NSString"32@0:8@"NSString"16@"HDSQLiteDatabase"24
@"NSUUID"32@0:8@"NSString"16@"HDSQLiteDatabase"24
B40@0:8@"NSArray"16@"HDSQLiteDatabase"24@?<v@?@"NSArray"^{HDSQLiteRow=}>32
B48@0:8@"NSArray"16@"HDSQLiteDatabase"24^@32@?<v@?@"NSArray"^{HDSQLiteRow=}>40
B32@0:8@"HDSQLiteDatabase"16^@24
v24@0:8@"HDSQLiteDatabase"16
@"HDSQLiteStatement"32@0:8@"NSString"16@"HDSQLiteDatabase"24
v24@0:8@?<v@?@"_HDSQLiteEntityColumn"^B>16
@"NSDictionary"16@0:8
#24@0:8@"NSString"16
@"NSSet"24@0:8@"NSString"16
@"HDSQLiteOrderingTerm"24@0:8@"NSSortDescriptor"16
@"HDMetadataValueStatement"
@"HDDataProvenanceCache"
@"HKObject"
@"HDDataOriginProvenance"
@"HDCodableObjectCollection"
v56@0:8@16@24@32q40Q48
v48@0:8@16@24q32Q40
v48@0:8@16q24Q32@?40
@"HKSample"
@"HDDataAggregationState"
@56@0:8@16@24@32@40q48
@"HDDemoDataSleepParameters"
@80@0:8Q16Q24@32d40d48d56d64d72
@136@0:8Q16Q24@32d40d48d56d64d72d80d88q96q104d112d120q128
{?="notificationType"b1}
@"IDSDevice"
d40@0:8@16@24@32
q24@0:8@"<HDCoreMotionDatum>"16
@"HKUnit"24@0:8@"HKQuantityType"16
v32@0:8@"<HDCoreMotionDatum>"16@?<v@?@"NSArray"@"NSError">24
{?="databaseSizeMB"b1"highFrequencyDataSizeMB"b1"lastMonthDatabaseSizeIncreaseMB"b1"lastMonthRowsAdded"b1"manuallyEnteredTypesCount"b1"percentageDeletedObjects"b1"rowCountObjects"b1"thirdPartyAppsCount"b1"thirdPartyAppsWroteDataCount"b1"timestamp"b1"rowCountCDA"b1"hasWatchSource"b1}
@"HDCodableMetadataDictionary"
{?="date"b1"duration"b1"swimmingStrokeStyle"b1"type"b1}
{?="numberOfFriends"b1"numberOfFriendsAwaitingResponse"b1"numberOfFriendsHiddenFromMe"b1"numberOfFriendsMuted"b1"numberOfFriendsMyDataHidden"b1"numberOfFriendsPendingMyResponse"b1"timestamp"b1"maxFriendDuration"b1"medianFriendDuration"b1"minFriendDuration"b1}
@56@0:8@16@24d32d40^@48
@"HDDatabase"
@"NSObject<OS_dispatch_semaphore>"
@"HDAWDHealthKitAchievementStatistics"
@"HDAWDHealthKitConcurrentCalendarItem"
@"HDAWDHealthKitUserCharacteristics"
{?="daysSinceFirstCalorieGoal"b1"eventBusyTime"b1"numberOfEvents"b1"progressUpdateFrequency"b1"timeZoneOffset"b1"timestamp"b1"enableAchievements"b1"enableGoalCompletions"b1"enableStandReminders"b1"enableWeeklySummary"b1"wellnessComplicationOnWatchFace"b1}
v40@0:8@16Q24@?32
B48@0:8@16^q24^@32@?40
@"_HKFilter"
@"HDDatabaseTransactionContext"
B24@0:8Q16
@"CMSwimTracker"
@"CMSwimData"
{?="consecutiveBriskMinuteGoalsMet"b1"consecutiveCompleteDays"b1"consecutiveStandingHoursGoalsMet"b1"currentCalorieGoalConsecutiveCompleteDays"b1}
@84@0:8@16@24@32@40@48@56B64@68^@76
@"HDNanoPairingEntity"
v72@0:8@16@24@32d40@48@56@64
v72@0:8@16d24d32q40q48@56@64
v56@0:8@16@24@32@40@48
@48@0:8@16d24@32@40
d48@0:8@16d24q32d40
B40@0:8@16d24d32
@"HKActivityCache"
@"_HDDemoDataActivityWorkoutState"
@"NSMutableData"
@48@0:8@16d24B32B36@40
d112@0:8@16d24@32B40B44@48d56@64@72d80d88d96d104
v24@0:8@"<HDWorkoutDataAccumulatorObserver>"16
v24@0:8@"HKWorkoutDataSourceConfiguration"16
@"HKWorkoutDataSourceConfiguration"
@"HDWorkoutBasicDataSource"
B96@0:8@16@24@32{HDSyncAnchorRange=qq}40Q56^q64@72^@80@?88
B112@0:8@16@24#32@40{HDSyncAnchorRange=qq}48@64Q72^q80@88^@96@?104
q56@0:8q16@24@32@40^@48
q80@0:8q16@24#32@40@48Q56@64^@72
@48@0:8@16@24Q32@40
@56@0:8@16@24@32Q40@48
@56@0:8@16#24@32{HDSyncAnchorRange=qq}40
@44@0:8B16@20@28^@36
B60@0:8@16@24@32B40^@44@?52
B56@0:8@16q24@32^@40^@48
@92@0:8@16@24q32@40@48@56B64q68@76^@84
B32@0:8q16@24
B48@0:8o^q16o^@24@32^@40
@"HDSQLiteStatement"
v24@0:8^{vector<HDActivityCacheStatisticsBuilderWorkoutSample, std::__1::allocator<HDActivityCacheStatisticsBuilderWorkoutSample> >=^{HDActivityCacheStatisticsBuilderWorkoutSample}^{HDActivityCacheStatisticsBuilderWorkoutSample}{__compressed_pair<HDActivityCacheStatisticsBuilderWorkoutSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderWorkoutSample> >=^{HDActivityCacheStatisticsBuilderWorkoutSample}}}16
v24@0:8^{vector<HDActivityCacheActiveSource, std::__1::allocator<HDActivityCacheActiveSource> >=^{HDActivityCacheActiveSource}^{HDActivityCacheActiveSource}{__compressed_pair<HDActivityCacheActiveSource *, std::__1::allocator<HDActivityCacheActiveSource> >=^{HDActivityCacheActiveSource}}}16
{vector<HDActivityCacheActiveSource, std::__1::allocator<HDActivityCacheActiveSource> >=^{HDActivityCacheActiveSource}^{HDActivityCacheActiveSource}{__compressed_pair<HDActivityCacheActiveSource *, std::__1::allocator<HDActivityCacheActiveSource> >=^{HDActivityCacheActiveSource}}}16@0:8
{_HDActivityCacheActiveSourceCalculatorSourceEvent=dqq}16@0:8
{HDActivityCacheActiveSource=dq{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}}16@0:8
{vector<HDActivityCacheStatisticsBuilderWorkoutSample, std::__1::allocator<HDActivityCacheStatisticsBuilderWorkoutSample> >="__begin_"^{HDActivityCacheStatisticsBuilderWorkoutSample}"__end_"^{HDActivityCacheStatisticsBuilderWorkoutSample}"__end_cap_"{__compressed_pair<HDActivityCacheStatisticsBuilderWorkoutSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderWorkoutSample> >="__value_"^{HDActivityCacheStatisticsBuilderWorkoutSample}}}
{vector<HDActivityCacheActiveSource, std::__1::allocator<HDActivityCacheActiveSource> >="__begin_"^{HDActivityCacheActiveSource}"__end_"^{HDActivityCacheActiveSource}"__end_cap_"{__compressed_pair<HDActivityCacheActiveSource *, std::__1::allocator<HDActivityCacheActiveSource> >="__value_"^{HDActivityCacheActiveSource}}}
@"HDCloudSyncCloudState"
@"HDPowerAssertion"
@"HDCloudSyncContext"
@"HDAssertion"
@"CKOperationGroup"
@"HDCloudSyncOperationConfiguration"
B56@0:8q16^{HDSQLiteRow=}24q32^@40@?48
v40@0:8@16q24^{HDSQLiteRow=}32
@"_HKExpiringCompletionTimer"
v32@0:8@"<HDWorkoutDataAccumulator>"16@"NSDictionary"24
v32@0:8@"<HDWorkoutDataAccumulator>"16@"NSArray"24
v32@0:8@"<HDWorkoutDataAccumulator>"16@"NSDate"24
v28@0:8@?16B24
@"_HDFTMProducerMetricTracker"
@"HDEurotasData"
B28@0:8B16@20
B56@0:8q16q24@32@40^@48
@"HDSQLitePredicate"32@0:8@"NSString"16@"NSSet"24
@"HDSQLitePredicate"40@0:8@"NSString"16@24Q32
@"HDSQLitePredicate"28@0:8@"NSString"16B24
v32@0:8^{sqlite3_stmt=}16N^i24
@"HDSQLitePredicate"
{?="timestamp"b1}
v32@0:8^q16^q24
Q32@0:8@16@24
@"HDActivitySummaryQueryHelper"
@"HKActivitySummary"
@"HDContributorReference"
B56@0:8@16B24B28@32@40^@48
B64@0:8@16@24B32B36@40@48^@56
@48@0:8@16@24q32@?40
B48@0:8@"NSUUID"16@"NSDictionary"24@"HDProfile"32^@40
@56@0:8@16@24@32@?40@?48
@56@0:8@16@24@32@40@?48
{?="timestamp"b1"onWrist"b1}
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
B24@0:8@?16
v32@0:8q16@?24
@"HKSeriesBuilderConfiguration"
@"HKSeriesSample"
@"HDSeriesBuilderEntity"
@36@0:8@16B24^@28
@52@0:8@16q24B32@36^@44
@44@0:8@16q24B32^@36
@52@0:8@16B24@28@36^@44
@60@0:8@16@24@32@40B48^@52
@52@0:8@16q24B32^B36^@44
@48@0:8@16@?24@?32^@40
B60@0:8@16q24@32B40@44^@52
B52@0:8@16@24B32@36^@44
@68@0:8@16@24@32Q40B48@52^@60
B32@0:8d16^@24
@24@0:8d16
q32@0:8d16^@24
@"HDCodableSyncAnchorRangeMap"
{?="changeIndex"b1"childRecordCount"b1"epoch"b1"protocolVersion"b1"slot"b1"active"b1}
v40@0:8@"NSNumber"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSDate"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSData"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@16@?<v@?B@"NSError">24
v32@0:8@"NSSet"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSNumber"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDate"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
@32@0:8r*16r*24
v36@0:8I16Q20@28
@"NSObject<OS_xpc_event_publisher>"
@"HDSleepAlarmAWDSleepAlarmStatistics"
{?="bedtimeAlarmNightCount"b1"bedtimeChangesCount"b1"thirdPartySleepTrackerNightCount"b1"timestamp"b1}
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"<HDAppExtensionAssertionDelegate>"
@"<HDJournalChapterEnumeratorTestsDelegate>"
{?="statusCode"b1}
@28@0:8C16C20C24
B20@0:8I16
v32@0:8r^*16r*24
v20@0:8S16
v20@0:8s16
@72@0:8@16q24q32@40Q48Q56@64
v40@0:8@"HDCurrentActivitySummaryHelper"16@"HKActivitySummary"24Q32
{?="exerciseMinutes"b1"hourSinceMidnight"b1}
@"_HDCloudSyncStorePersistableState"
@40@0:8#16@24q32
Q24@0:8Q16
@"HDDataCollectorMultiplexer"
@"<HDCoreMotionDataSource>"
@"HDDataCollectorState"
@56@0:8@16Q24@32@40@?48
@36@0:8@16i24@28
@"HDSyncPredicate"
@52@0:8B16@20@28^@36@?44
B56@0:8@16@24@32^@40@?48
B40@0:8@"NSArray"16@"HDSQLiteDatabase"24@?<v@?@"NSArray"^{HDSQLiteRow=^^?^{sqlite3_stmt}ii{unordered_map<const char *, int, HDSQLiteRow::_Hash, HDSQLiteRow::_Comparison, std::__1::allocator<std::__1::pair<const char *const, int> > >={__hash_table<std::__1::__hash_value_type<const char *, int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true> >=f}}}}>32
B48@0:8@"NSArray"16@"HDSQLiteDatabase"24^@32@?<v@?@"NSArray"^{HDSQLiteRow=^^?^{sqlite3_stmt}ii{unordered_map<const char *, int, HDSQLiteRow::_Hash, HDSQLiteRow::_Comparison, std::__1::allocator<std::__1::pair<const char *const, int> > >={__hash_table<std::__1::__hash_value_type<const char *, int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Hash, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, int>, HDSQLiteRow::_Comparison, true> >=f}}}}>40
B40@0:8@16@24@32
@"HDCloudSyncChangeRecord"
v24@0:8@"_HKWorkoutEvent"16
@48@0:8@"HDProfile"16@"HDWorkoutSessionConfiguration"24@"<HDWorkoutSessionStateController>"32@"NSData"40
v32@0:8@"<HDWorkoutSessionStateController>"16@"HDWorkoutSessionConfiguration"24
v48@0:8@"<HDWorkoutSessionStateController>"16q24q32@"NSDate"40
v32@0:8@"<HDWorkoutSessionStateController>"16@"<HDWorkoutDataAccumulator>"24
v24@0:8@?<v@?qq>16
v24@0:8@"CMWorkoutManager"16
v32@0:8@"NSData"16@"HDProfile"24
@"<HDWorkoutSessionStateController>"
@"HDWorkoutSessionConfiguration"
@"HDSessionAssertionGroup"
@"HDWorkoutEventsManager"
B40@0:8^@16^@24^@32
@"HDAuthorizationManager"
@"HDOntologyLifecycleManager"
@"HDBackgroundObservationServerExtensionManager"
@"HDDaemonSyncEngine"
@"HDCloudSyncManager"
@"HDContributorManager"
@"HDDataManager"
@"HDMetadataManager"
@"HDOnboardingCompletionManager"
@"HDSharingEntryManager"
@"HDSourceOrderManager"
@"HDWorkoutCondenser"
@"HDCloudSharingInviteRequestManager"
@"HKProfileIdentifier"
@"HDUnitPreferencesManager"
@"HDRestorableAlarmScheduler"
@"HDDatabasePruningManager"
@"HDMedicalIDDataManager"
@"HDMigrationManager"
@28@0:8d16B24
@80@0:8@16@24@32q40d48d56@64@72
@88@0:8@16@24@32q40d48d56@64@72@80
@100@0:8@16@24@32@40@48q56@64@72q80q88B96
v72@0:8^q16^q24^q32@40@48@56@64
@"HKCategoryType"
@"HKCategorySample"
v40@0:8d16i24i28q32
i24@0:8d16
v40@0:8@"HKWorkout"16@"NSDictionary"24@?<v@?@"HKWorkoutRoute"@"NSError">32
v24@0:8@?<v@?@"_HKMedicalIDData"@"NSError">16
v40@0:8@"_HKMedicalIDData"16@"_HKMedicalIDData"24@?<v@?B@"NSError">32
v32@0:8@"_HKMedicalIDData"16@?<v@?B@"NSError">24
@56@0:8Q16q24q32@40@48
v28@0:8Q16B24
@"HDDatabaseTransactionContextStatistics"
I40@0:8@16@24@32
B44@0:8I16@20@28^@36
@"<HDDatabaseJournalDelegate>"
@"<HDJournalChapter>"
@"<HDSyncSessionDelegate>"
@"<HDSyncStore>"
@"NSCalendar"
@64@0:8@16@24@32@40q48d56
{?="dwelltimeMs"b1"endDate"b1"startDate"b1"dismissReason"b1"scrollBehavior"b1}
@24@0:8@"NSData"16
@56@0:8@16@24q32@40^@48
@40@0:8@16@24#32
@"HDDNDModeAssertionService"
@80@0:8@16@24#32@40@48@56q64q72
q48@0:8@16^{HDSQLiteRow=}24q32^@40
q48@0:8@16^{HDSQLiteRow=}24q32@40
B28@0:8B16^@20
q56@0:8@16q24q32@40^@48
@"<HDSyncMessageHandler>"
@92@0:8@16@24q32q40B48q52q60d68@76@?84
@20@0:8I16
B44@0:8@16@24@32B40
q48@0:8@16@24^@32@?40
q40@0:8@16q24^@32
q48@0:8@16@24^@32^@40
@64@0:8q16@24@32@40d48^@56
B20@0:8B16
@56@0:8@16@24@32Q40^@48
B28@0:8@16B24
@56@0:8@16q24^@32^@40@48
@"_HDAWDPeriodicAction"
@36@0:8@16@24C32
@44@0:8@16@24C32@36
@60@0:8@16@24C32#36@44q52
@"HDSQLiteEntityForeignKey"
q24@0:8o^@16
B48@0:8@16@24@32o^@40
B56@0:8@16@24@32@40o^@48
B56@0:8@16@24@32o^@40o^@48
{_HDObjectDeletionInfo=Bqqq}32@0:8@16^@24
B40@0:8q16#24^@32
B48@0:8q16#24@32^@40
B72@0:8q16@24#32@40@48@56^@64
B56@0:8q16^d24^d32@40^@48
{?="numberOfFills"b1}
v44@0:8@16@24@32B40
B24@0:8r*16
@"NSXPCListenerEndpoint"32@0:8@"HDXPCClient"16^@24
@"HDAlertSuppressor"
@"HDAppLauncher"
@"HDBackgroundWorkoutRunner"
@"HDCarouselServicesManager"
@"HDCoreMotionWorkoutInterface"
@"HDHeartRateRecoveryManager"
@"HDPowerSavingModeManager"
@"HDQuietModeManager"
v56@0:8@16@24@32Q40@?48
v64@0:8@16@24@32@40@?48@?56
q52@0:8@16@24@32B40^@44
@52@0:8@16@24B32@?36@?44
@"_HDAuthorizationRequestGroup"
B32@0:8d16@?24
v44@0:8B16@20@28@36
@40@0:8@16@?24@?32
q40@0:8@16q24q32
v24@0:8@?<v@?@"HKNanoSyncPairedDevicesSnapshot"@"NSError">16
v40@0:8@"NSUUID"16d24@?<v@?B@"NSError">32
Q20@0:8i16
B32@0:8@"HDProfile"16^@24
{?="eventTimestamp"b1"timestamp"b1"activeSeconds"b1"age"b1"biologicalSex"b1"briskMinutes"b1"energyBurned"b1"energyBurnedGoal"b1"height"b1"weight"b1}
@32@0:8Q16B24B28
@72@0:8@16@24@32@40d48d56@64
@64@0:8@16@24@32@40d48d56
{?="modificationDate"b1"options"b1"deleted"b1}
@40@0:8q16@24o^@32
B48@0:8@16q24@32o^@40
@32@0:8q16o^@24
@"HKElectrocardiogramSessionConfiguration"
{unique_ptr<health::DataStore, std::__1::default_delete<health::DataStore> >={__compressed_pair<health::DataStore *, std::__1::default_delete<health::DataStore> >=^{DataStore}}}32@0:8@16^@24
B112@0:8^{DataStore={BlockAccessFile={TransactionalFile={shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}{WriteAheadLog={mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}{shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<health::VirtualFile>=^{VirtualFile}^{__shared_weak_count}}QQqB{vector<std::__1::shared_ptr<health::WriteAheadLog::Transaction>, std::__1::allocator<std::__1::shared_ptr<health::WriteAheadLog::Transaction> > >=^{shared_ptr<health::WriteAheadLog::Transaction>}^{shared_ptr<health::WriteAheadLog::Transaction>}{__compressed_pair<std::__1::shared_ptr<health::WriteAheadLog::Transaction> *, std::__1::allocator<std::__1::shared_ptr<health::WriteAheadLog::Transaction> > >=^{shared_ptr<health::WriteAheadLog::Transaction>}}}{unordered_multiset<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > >={__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>=^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<unsigned long long> >=Q}{__compressed_pair<float, std::__1::equal_to<unsigned long long> >=f}}}{map<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> >, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > > > >={__tree<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::less<unsigned long long>, true> >=Q}}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<health::VirtualFile>=^{VirtualFile}^{__shared_weak_count}}B{FileHeader=IIIQQQ}QQi{mutex={_opaque_pthread_mutex_t=q[56c]}}{TransactionalCache<unsigned long long, health::FilePage>=QQ{unordered_map<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::equal_to<unsigned long long>, true> >=f}}}^{CacheEntry}^{CacheEntry}{function<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>={__value_func<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>={type=[32C]}^{__base<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>}}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}{map<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *, std::__1::less<std::__1::__thread_id>, std::__1::allocator<std::__1::pair<const std::__1::__thread_id, health::TransactionalFile::ReadTransaction *> > >={__tree<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::less<std::__1::__thread_id>, true>, std::__1::allocator<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::less<std::__1::__thread_id>, true> >=Q}}}{queue<std::__1::__thread_id, std::__1::deque<std::__1::__thread_id, std::__1::allocator<std::__1::__thread_id> > >={deque<std::__1::__thread_id, std::__1::allocator<std::__1::__thread_id> >={__split_buffer<std::__1::__thread_id *, std::__1::allocator<std::__1::__thread_id *> >=^^{__thread_id}^^{__thread_id}^^{__thread_id}{__compressed_pair<std::__1::__thread_id **, std::__1::allocator<std::__1::__thread_id *> >=^^{__thread_id}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__thread_id> >=Q}}}{map<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *, std::__1::less<std::__1::__thread_id>, std::__1::allocator<std::__1::pair<const std::__1::__thread_id, health::TransactionalFile::WriteTransaction *> > >={__tree<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::less<std::__1::__thread_id>, true>, std::__1::allocator<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::less<std::__1::__thread_id>, true> >=Q}}}}{BlockAccessFileHeader=IIIQ{BlockPointer=QQ}{BlockPointer=QQ}{BlockPointer=QQ}}}{BlockPointer=QQ}}16^{DataStore={BlockAccessFile={TransactionalFile={shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}{WriteAheadLog={mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}{shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<health::VirtualFile>=^{VirtualFile}^{__shared_weak_count}}QQqB{vector<std::__1::shared_ptr<health::WriteAheadLog::Transaction>, std::__1::allocator<std::__1::shared_ptr<health::WriteAheadLog::Transaction> > >=^{shared_ptr<health::WriteAheadLog::Transaction>}^{shared_ptr<health::WriteAheadLog::Transaction>}{__compressed_pair<std::__1::shared_ptr<health::WriteAheadLog::Transaction> *, std::__1::allocator<std::__1::shared_ptr<health::WriteAheadLog::Transaction> > >=^{shared_ptr<health::WriteAheadLog::Transaction>}}}{unordered_multiset<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > >={__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>=^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<unsigned long long> >=Q}{__compressed_pair<float, std::__1::equal_to<unsigned long long> >=f}}}{map<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> >, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > > > >={__tree<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<health::WriteAheadLog::PageEntry, std::__1::allocator<health::WriteAheadLog::PageEntry> > >, std::__1::less<unsigned long long>, true> >=Q}}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{shared_ptr<health::VirtualFile>=^{VirtualFile}^{__shared_weak_count}}B{FileHeader=IIIQQQ}QQi{mutex={_opaque_pthread_mutex_t=q[56c]}}{TransactionalCache<unsigned long long, health::FilePage>=QQ{unordered_map<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, health::TransactionalCache<unsigned long long, health::FilePage>::CacheLine>, std::__1::equal_to<unsigned long long>, true> >=f}}}^{CacheEntry}^{CacheEntry}{function<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>={__value_func<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>={type=[32C]}^{__base<bool (unsigned long long, const unsigned long long &, const health::FilePage &)>}}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}{map<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *, std::__1::less<std::__1::__thread_id>, std::__1::allocator<std::__1::pair<const std::__1::__thread_id, health::TransactionalFile::ReadTransaction *> > >={__tree<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::less<std::__1::__thread_id>, true>, std::__1::allocator<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::ReadTransaction *>, std::__1::less<std::__1::__thread_id>, true> >=Q}}}{queue<std::__1::__thread_id, std::__1::deque<std::__1::__thread_id, std::__1::allocator<std::__1::__thread_id> > >={deque<std::__1::__thread_id, std::__1::allocator<std::__1::__thread_id> >={__split_buffer<std::__1::__thread_id *, std::__1::allocator<std::__1::__thread_id *> >=^^{__thread_id}^^{__thread_id}^^{__thread_id}{__compressed_pair<std::__1::__thread_id **, std::__1::allocator<std::__1::__thread_id *> >=^^{__thread_id}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__thread_id> >=Q}}}{map<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *, std::__1::less<std::__1::__thread_id>, std::__1::allocator<std::__1::pair<const std::__1::__thread_id, health::TransactionalFile::WriteTransaction *> > >={__tree<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::less<std::__1::__thread_id>, true>, std::__1::allocator<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::__thread_id, std::__1::__value_type<std::__1::__thread_id, health::TransactionalFile::WriteTransaction *>, std::__1::less<std::__1::__thread_id>, true> >=Q}}}}{BlockAccessFileHeader=IIIQ{BlockPointer=QQ}{BlockPointer=QQ}{BlockPointer=QQ}}}{BlockPointer=QQ}}24{function<bool (health::DataStore *, health::DataStore *, unsigned long long)>={__value_func<bool (health::DataStore *, health::DataStore *, unsigned long long)>={type=[32C]}^{__base<bool (health::DataStore *, health::DataStore *, unsigned long long)>}}}32{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >={__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >=Q}}}80^@104
{optional<std::__1::set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> > >=(?=c{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >={__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >=Q}}})B}24@0:8^@16
@"HDRestorableAlarm"
@"HDXPCEventPublisher"
d40@0:8d16q24d32
v40@0:8d16d24q32
@"FBSOpenApplicationService"
^{__SecCertificate=}
B56@0:8@16^@24@32^@40@?48
v36@0:8B16B20B24@?28
@44@0:8@16B24@28@?36
@56@0:8@16@24@32q40^@48
v64@0:8@16@24@32Q40@48@?56
{?="identifier"b1}
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
@"PSYSyncCoordinator"
v24@0:8@"HDHealthOntologyManager"16
v36@0:8@"HDHealthOntologyManager"16B24@"NSError"28
v24@0:8@?<v@?Q>16
v36@0:8@"HKConceptIdentifier"16B24@?<v@?@"HKConcept"@"NSError">28
v32@0:8@"HKConceptIdentifier"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"HKSample"16@"HKConcept"24@?<v@?B@"NSError">32
v24@0:8@?<v@?q@"NSError">16
v36@0:8@"NSURL"16B24@?<v@?B@"NSError">28
B48@0:8@16#24@32^@40
B56@0:8@16q24q32@40^@48
I56@0:8@16^q24q32^@40@?48
@32@0:8^@16^@24
{?="creationDate"b1}
@"<HDWatchAppStateMonitorDelegate>"
v32@0:8@"FBSDisplayLayoutMonitor"16@"FBSDisplayLayout"24
v40@0:8@"FBSDisplayLayoutMonitor"16@"FBSDisplayLayout"24@"FBSDisplayLayoutTransitionContext"32
@64@0:8q16@24@32@40@48Q56
@"HDCloudSyncZone"
@"HDCloudSyncStoreRecord"
v40@0:8q16@"NSString"24@?<v@?@"HKProfileIdentifier"@"NSError">32
v32@0:8@"HKProfileIdentifier"16@?<v@?B@"NSError">24
v32@0:8@"NSUUID"16@?<v@?@"HKProfileIdentifier"@"NSError">24
v40@0:8@"NSUUID"16@"NSString"24@?<v@?@"HKProfileIdentifier"@"NSError">32
v24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
@36@0:8@16q24i32
{HDSyncAnchorRange=qq}16@0:8
v48@0:8@16{HDSyncAnchorRange=qq}24@40
v28@0:8q16B24
#24@0:8@"HDProfile"16
v48@0:8@"NSArray"16{HDSyncAnchorRange=qq}24@"<HDSyncAnchorMap>"40
@"NSArray"32@0:8@"HDProfile"16^@24
@"<HDSyncAnchorMap>"32@0:8@"HDProfile"16^@24
@"NSNumber"16@0:8
@52@0:8@16@24@32@40i48
q24@0:8@"HDSyncEntityIdentifier"16
v24@0:8@?<v@?@"HDSyncEntityIdentifier"q^B>16
@36@0:8S16@20@28
v24@0:8@"NSMutableDictionary"16
@24@0:8@"NSDictionary"16
@?36@0:8@16B24q28
v32@0:8@"HDProfile"16@"HKQuantityType"24
@?<v@?@"HKQuantity"@"HKQuantityType"@"NSDateInterval"@"HKQuantitySample"@"NSNumber"B>36@0:8@"HDProfile"16B24q28
v64@0:8@16@24@32@40@48@56
@40@0:8q16@24@32
{?="timestamp"b1"application"b1}
v56@0:8@16@24q32q40@?48
@"<HDBlockDispatcher>"
@"HDConceptIndexer"
B32@0:8@16^q24
@40@0:8q16q24@?32
@56@0:8@16q24q32q40@?48
{?="timestamp"b1"totalAchievementCount"b1"totalOTAAchievementCount"b1"totalOTAAchievementViewedCount"b1"moreThanOneYearSinceActivitySetup"b1}
{?="endDate"b1"startDate"b1"value"b1}
B40@0:8q16q24o^@32
v40@0:8@16q24@?32
v72@0:8@16@24@32@40q48@56@?64
v80@0:8@16@24@32@40q48@56@64@?72
B40@0:8@16q24o^@32
@?24@0:8@?16
@"UNUserNotificationCenter"
{?="count"b1"max"b1"min"b1"mostRecent"b1"mostRecentDate"b1"mostRecentDuration"b1"valueInCanonicalUnit"b1"valueInOriginalUnit"b1"final"b1"frozen"b1}
@"<HDSynchronousTaskGroupDelegate>"
{?="confidenceMillis"b1"recentVisitCount"b1"uncertaintyMillis"b1"locationType"b1}
{?="value"b1}
{?="activeHours"b1"activeHoursGoal"b1"activeHoursGoalDate"b1"activityMoveMode"b1"briskMinutes"b1"briskMinutesGoal"b1"briskMinutesGoalDate"b1"cacheIndex"b1"deepBreathingDuration"b1"energyBurned"b1"energyBurnedGoal"b1"energyBurnedGoalDate"b1"flightsClimbed"b1"moveMinutes"b1"moveMinutesGoal"b1"moveMinutesGoalDate"b1"pushCount"b1"sequence"b1"stepCount"b1"walkingAndRunningDistance"b1"wheelchairUse"b1}
@32@0:8d16d24
@"HDDataAggregator"
@"<HDCollectedSensorDatum>"
@"<HDDataCollector>"
@"HDCodableMedicalDate"
@104@0:8q16@24@32{?=qqq}40@64@72@80@88@96
@64@0:8d16d24d32d40q48@56
{?="completionDate"b1"modificationDate"b1"version"b1"deleted"b1}
v32@0:8@"HKHealthStoreConfiguration"16@?<v@?@"<HDHealthStoreServerInterface>"@"NSError">24
@"NSXPCInterface"16@0:8
@"HDHealthStoreServer"
@"HDCodableFHIRResourceForAPI"
@40@0:8Q16q24@?32
@"NSProgress"40@0:8Q16q24@?<v@?B@"NSError">32
@"NSProgress"24@0:8@?<v@?B@"NSError">16
@"NSProgress"24@0:8@?<v@?@"NSString"@"NSError">16
v24@0:8@?<v@?B@"NSDate"@"NSDate"B@"NSError">16
v24@0:8@?<v@?@"NSDate"@"NSError">16
{?="assertionType"b1"notTaken"b1}
v28@0:8i16q20
v48@0:8@16Q24d32q40
v56@0:8@16Q24d32q40@48
{?="order"b1"deviceMode"b1"requiredProtocolVersion"b1"supportedProtocolVersion"b1"active"b1}
{?="date"b1}
v32@0:8@"<HDMetricsCollector>"16@"NSDictionary"24
{?="alreadyDoing"b1"poorTiming"b1}
@"HDCodableAllergyReactionList"
v40@0:8@16Q24@32
v32@0:8@"<HKFitnessMachineConnectionInitiatorClientInterface>"16@"NSUUID"24
v40@0:8@"NSUUID"16Q24@"NSUUID"32
v32@0:8@"NSUUID"16@"NSUUID"24
@"<HDFitnessMachinePairingManagerDelegate>"
B56@0:8@16@24^@32@?40@?48
@28@0:8B16@20
@"HDEntityEncoder"56@0:8@"HDProfile"16@"HDDatabaseTransaction"24q32@"NSDictionary"40@?<@"NSArray"@?@"NSArray">48
@"HDEntityEncoder"56@0:8@"HDProfile"16@"HDSQLiteDatabase"24q32@"NSDictionary"40@?<@"NSArray"@?@"NSArray">48
@48@0:8#16@24@32^@40
@24@0:8^Q16
#32@0:8@16@24
{?="arrivalDate"b1"timestamp"b1}
@40@0:8@16d24@32
@48@0:8@16d24Q32@40
v32@0:8@"NSArray"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
@56@0:8@16@24^@32@40^@48
v32@0:8@"HKCodableQuantitySeries"16@?<v@?B@"NSError">24
v48@0:8@"NSDictionary"16@"NSDate"24@"HKCodableQuantitySeries"32@?<v@?@"NSArray"@"NSError">40
B44@0:8@16@24B32^@36
B40@0:8@16@24o^@32
B32@0:8^@16^@24
@"HKQuantitySeriesSampleBuilderTaskServerConfiguration"
@"<HDSampleSaving>"16@0:8
v40@0:8@"HDQueryServer"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"HDQueryServer"16@?<v@?B@"NSError">24
v24@0:8@"HDQueryServer"16
{?="sessionStartDate"b1"statusCode"b1}
@"NSArray"32@0:8@"HDActivityCacheStatisticsBuilder"16@"HKObjectType"24
B36@0:8q16q24B32
B32@0:8^@16^q24
q32@0:8q16^@24
{vector<HDActivityCacheStatisticsBuilderSample, std::__1::allocator<HDActivityCacheStatisticsBuilderSample> >="__begin_"^{HDActivityCacheStatisticsBuilderSample}"__end_"^{HDActivityCacheStatisticsBuilderSample}"__end_cap_"{__compressed_pair<HDActivityCacheStatisticsBuilderSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderSample> >="__value_"^{HDActivityCacheStatisticsBuilderSample}}}
@"HKWorkoutType"
{unordered_map<long long, bool, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, bool> > >="__table_"{__hash_table<std::__1::__hash_value_type<long long, bool>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, bool>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, bool>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, bool> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, bool>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, bool>, std::__1::hash<long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, bool>, std::__1::equal_to<long long>, true> >="__value_"f}}}
@"HDActivityCacheStatisticsBuilder"
@"HDActivityCacheHeartRateStatisticsBuilder"
{?="final"b1"frozen"b1}
v24@0:8@?<v@?q>16
d48@0:8@16d24d32d40
@32@0:8d16q24
{?="deletionDate"b1}
@"NSNumber"32@0:8@"HDSQLiteDatabase"16^@24
@"NSNumber"40@0:8@"NSNumber"16@"HDDatabaseTransaction"24^@32
B56@0:8d16d24@32^@40@?48
@80@0:8@16q24d32d40q48@56@64^@72
B52@0:8@16B24@28@36^@44
@72@0:8@16@24q32q40@48@56^@64
@64@0:8@16@24q32@40@48^@56
@64@0:8@16q24@32@40@48^@56
@56@0:8@16q24@32@40^@48
@36@0:8d16d24f32
@40@0:8d16d24d32
@48@0:8q16q24@32^@40
@40@0:8q16q24^@32
@52@0:8@16B24q28^@36@?44
B60@0:8@16B24q28^@36@?44@?52
q40@0:8q16q24^@32
@48@0:8q16@24q32^@40
B32@0:8@?16^@24
B56@0:8q16q24@32q40^@48
@56@0:8q16@24@?32@40^@48
@40@0:8q16@?24^@32
B60@0:8@16@24@32q40B48^@52
B68@0:8@16@24@32q40B48@52^@60
@72@0:8@16@24@32Q40q48@56@64
@48@0:8@16^B24@32^@40
B32@0:8@"NSData"16^@24
@"HDSortedSampleIterator"
@56@0:8Q16@24@32@40^@48
@"HKSampleType"
@"HKObserverSet<HDAnalyticsSubmissionCoordinatorDelegate>"
@80@0:8q16q24q32@40@48@56@64@72
@"_HKAuthorizationRecord"
v24@0:8@"<HKFitnessMachineConnectionInitiatorClientInterface>"16
v32@0:8@"NSUUID"16Q24
@"<HDFitnessMachineConnectionInitiatorProtocol>"
B68@0:8@16@24@32@40@48B56^@60
B64@0:8@16@24@32@40^@48@?56
@"HDDataAggregatorConfiguration"
@48@0:8d16d24d32B40B44
@"NSDateInterval"16@0:8
{?="category"b1}
{?="mostRecentGoal"b1"numTimesGoalAchieved"b1"selectedGoal"b1}
@"HDCodableRoutineLocationRequest"
@"HDCodableRoutineScenarioTriggeredRequest"
{?="requestType"b1}
@"HKHealthService"
@"_HKFitnessMachine"
@"HDHealthServiceOOBInfo"
@"HDFitnessMachineStatus"
@"HDFitnessMachineDataCharacteristicBase"
@"HDEnhancedFTMSData"
@"HDUserDefault"
@"HKCharacteristicType"
{?="omittedContent"b1}
@32@0:8B16q20B28
@"<HDContentProtectionObserver>"
{?="testCondition"b1}
@"HDCodableFHIRIdentifierList"
v56@0:8@"NSDictionary"16@"NSDictionary"24@"NSString"32Q40@?<v@?B@"NSError">48
v48@0:8@"NSString"16@"NSSet"24@"NSSet"32@?<v@?B@"NSError">40
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?B@"NSError">32
@48@0:8q16Q24q32@40
B64@0:8@16@24@32@40d48^@56
B48@0:8@16@24d32^@40
B52@0:8@16@24d32B40^@44
B60@0:8@16@24d32B40B44B48^@52
B52@0:8@16@24@32B40^@44
B52@0:8@16@24B32@?36^@44
B72@0:8#16@24Q32^Q40B48B52@?56^@64
B48@0:8@16@24@?32^@40
B40@0:8@16@?24^@32
B44@0:8@16B24@28^@36
v48@0:8@16@24q32@?40
@"HDQuantitySeriesManager"
@"<HKUUIDCollection>"
@"HDDataDeletionConfiguration"
B32@0:8^B16^@24
B32@0:8@"NSString"16@"NSString"24
v24@0:8@"<HDHealthRecordsSupportedChangeObserver>"16
v24@0:8@"<HDHealthRecordsAccountEventObserver>"16
v44@0:8@16B24@?28@?36
v52@0:8@16B24@28@?36@?44
v40@0:8@16B24B28@32
v32@0:8@"_HDDemoDataModule"16@"HKObject"24
@"HKQuantity"16@0:8
@40@0:8q16@24@?32
@"<_HDDemoDataModuleDelegate>"
v40@0:8^d16^Q24^d32
q32@0:8^@16@?24
@"HKMultiTypeQueryCursor"
^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}
@48@0:8@"NSUUID"16@"HKTaskConfiguration"24@"HDHealthStoreClient"32@"<HDTaskServerDelegate>"40
@56@0:8@"NSUUID"16@"HKTaskConfiguration"24@"HDHealthStoreClient"32@"<HDTaskServerDelegate>"40^@48
B32@0:8@"HDHealthStoreClient"16^@24
B40@0:8@"HKTaskConfiguration"16@"HDHealthStoreClient"24^@32
v32@0:8d16@24
@"HKQueryServerConfiguration"
@"HDDataCollectionAssertion"
@"<HDQueryServerDelegate>"
@"HKObjectType"
@"HKConceptIdentifier"
@32@0:8@?16^@24
@36@0:8@?16B24^@28
@"NSCache"
@84@0:8@16q24@32q40B48q52@60q68@76
@"HDSimpleGraphNode"
B56@0:8@16@24q32^@40@?48
q48@0:8@16d24^@32@?40
@48@0:8Q16@24@32@40
@"HDHealthServiceCharacteristic"
v40@0:8@16@24q32
v32@0:8@"HDWorkoutManager"16@"HDWorkoutSessionServer"24
v40@0:8@"HDWorkoutManager"16@"HDWorkoutSessionServer"24q32
v40@0:8@"HDWorkoutManager"16@"HDWorkoutSessionServer"24@"<HDWorkoutDataAccumulator>"32
@88@0:8@16@24Q32@40@48Q56@64@72@80
^q16@0:8
q24@0:8Q16
v32@0:8^q16Q24
{?="list"^q"count"Q"size"Q}
{?="monthsSinceFirstWatchUsage"b1"moveRingCompletionPercentage"b1"timestamp"b1}
{?="changeIndex"b1"changeSize"b1"protocolVersion"b1"finalForSequence"b1}
{?="averageHeartRateInBPM"b1"privateClassification"b1"symptomsStatus"b1}
{?="notPerformed"b1}
{?="mean"b1"median"b1"percentile25"b1"percentile75"b1"stddev"b1}
@"HKObserverSet<HDProfileManagerObserver>"
B52@0:8@16q24B32@36^@44
{?="duration"b1"goal"b1"goalType"b1"totalBasalEnergyBurnedInCanonicalUnit"b1"totalDistanceInCanonicalUnit"b1"totalEnergyBurnedInCanonicalUnit"b1"totalFlightsClimbedInCanonicalUnit"b1"totalSwimmingStrokeCountInCanonicalUnit"b1"type"b1}
@80@0:8@16q24q32@40@48@56q64@72
{?="originMajorVersion"b1"originMinorVersion"b1"originPatchVersion"b1}
B52@0:8d16@24@32@40B48
B52@0:8@16B24@28^@36@?44
B60@0:8@16@24d32@40B48^@52
@72@0:8q16@24d32q40d48d56q64
{?="creationDate"b1"lastFetchDate"b1"lastFullFetchDate"b1"modificationDate"b1"userEnabled"b1}
B68@0:8q16q24@32B40@44^@52^@60
B80@0:8q16@24^q32^q40^@48^@56^B64^@72
B84@0:8@16@24q32q40q48@56@64B72^@76
@52@0:8@16@24@32B40@44
@"CMSkiTracker"
@"CMSkiData"
{?="compatibilityVersion"b1"entityVersion"b1}
{?="authorizationStatus"b1"modificationDate"b1}
@80@0:8@16@24@32@40@48@56@64^@72
@"HDSharingPredicate"
@28@0:8^{HDSQLiteRow=}16i24
v32@0:8q16@?<v@?@"HKBadge"@"NSError">24
v40@0:8@"HKBadge"16q24@?<v@?B@"NSError">32
v32@0:8q16@?<v@?B@"NSError">24
v32@0:8@"UNNotificationRequest"16@?<v@?B@"NSError">24
v32@0:8@"<HDHealthRecordsProfileExtension>"16Q24
@"HDOntologyAssetManager"
@"HDHealthOntologyManager"
@"HDConceptIndexManager"
@"HDHealthRecordsNotificationManager"
@"HDHealthOntologyConfiguration"
@"<HDOntologyTester>"
v32@0:8@"NSUUID"16@"HDFitnessMachineSessionRecoveryConfiguration"24
B32@0:8@"NSDate"16^@24
v24@0:8@"NSDate"16
v24@0:8@"NSError"16
v24@0:8@"NSDictionary"16
v24@0:8@"HKWorkoutConfiguration"16
B40@0:8@"NSData"16@"NSString"24^@32
@"HDDefaultWorkoutSessionController"
@"<HDSampleIterator><HDRestorableIterator>"
B48@0:8q16@24q32^@40
@"HDDatabaseMigrationTransaction"
@"CBCharacteristic"
{?="timestamp"b1"action"b1"failureReason"b1"stage"b1"retryExpected"b1"success"b1}
{?="endDate"b1"indexInSession"b1"maxDelayUs"b1"meanDelayUs"b1"minDelayUs"b1"sampleCount"b1"startDate"b1"stdDelayUs"b1"timestamp"b1"typeIdentifier"b1"inSession"b1}
v52@0:8@16@24@32B40@?44
@32@0:8#16^@24
d32@0:8q16@24
B32@0:8d16@24
@"HDDemoDataGeneratorState"
@"HDDemoDataPerson"
@"HDDemoDataGeneratorConfiguration"
@"HDDemoDataActivitySampleGenerator"
@"HDDemoDataAudioExposureSampleGenerator"
@"HDDemoDataAudiogramSampleGenerator"
@"HDDemoDataBloodSampleGenerator"
@"HDDemoDataBodySampleGenerator"
@"HDDemoDataFoodSampleGenerator"
@"HDDemoDataHealthDocumentSampleGenerator"
@"HDDemoDataHeartSampleGenerator"
@"HDDemoDataMindfulnessSampleGenerator"
@"HDDemoDataMobilitySampleGenerator"
@"HDDemoDataOtherAndAdditionalSampleGenerator"
@"HDDemoDataPathologySampleGenerator"
@"HDDemoDataReproductiveHealthSampleGenerator"
@"HDDemoDataSleepSampleGenerator"
@"HDDemoDataStatisticsSampleGenerator"
@"HDDemoDataSymptomsSampleGenerator"
@"HDDemoDataVitalsSampleGenerator"
@40@0:8@16#24^@32
{?="triggerTypes"b1}
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"HKObjectType"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSSet"@"NSError">24
v40@0:8@"HKDocumentType"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"NSDictionary"@"NSError">24
@"HDXPCAlarm"
@"HDCodableRoutineLocationResponse"
@"HDCodableRoutinePredictedLocationsResponse"
@64@0:8@16@24@32@40@48B56B60
v44@0:8@16B24^q28^B36
@"_HKDateIntervalCollection"
@"HDStatisticsCollectionCalculatorDefaultDataSource"
@"HDStatisticsCollectionCalculatorDefaultSourceOrderProvider"
@"HDStatisticsCollectionCalculator"
B32@0:8#16^@24
{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}24@0:8q16
@24@0:8^{HDActivityCacheActiveSource=dq{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}}16
v24@0:8r^{vector<HDActivityCacheStatisticsBuilderWorkoutSample, std::__1::allocator<HDActivityCacheStatisticsBuilderWorkoutSample> >=^{HDActivityCacheStatisticsBuilderWorkoutSample}^{HDActivityCacheStatisticsBuilderWorkoutSample}{__compressed_pair<HDActivityCacheStatisticsBuilderWorkoutSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderWorkoutSample> >=^{HDActivityCacheStatisticsBuilderWorkoutSample}}}16
v24@0:8r^{vector<HDActivityCacheStatisticsBuilderStandHourSample, std::__1::allocator<HDActivityCacheStatisticsBuilderStandHourSample> >=^{HDActivityCacheStatisticsBuilderStandHourSample}^{HDActivityCacheStatisticsBuilderStandHourSample}{__compressed_pair<HDActivityCacheStatisticsBuilderStandHourSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderStandHourSample> >=^{HDActivityCacheStatisticsBuilderStandHourSample}}}16
v24@0:8r^{vector<HDActivityCacheStatisticsBuilderSample, std::__1::allocator<HDActivityCacheStatisticsBuilderSample> >=^{HDActivityCacheStatisticsBuilderSample}^{HDActivityCacheStatisticsBuilderSample}{__compressed_pair<HDActivityCacheStatisticsBuilderSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderSample> >=^{HDActivityCacheStatisticsBuilderSample}}}16
v56@0:8{HDActivityCacheStatisticsBuilderSample=dddq}16q48
v32@0:8r^{vector<HDActivityCacheStatisticsBuilderSample, std::__1::allocator<HDActivityCacheStatisticsBuilderSample> >=^{HDActivityCacheStatisticsBuilderSample}^{HDActivityCacheStatisticsBuilderSample}{__compressed_pair<HDActivityCacheStatisticsBuilderSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderSample> >=^{HDActivityCacheStatisticsBuilderSample}}}16q24
{vector<HDActivityCacheActiveSource, std::__1::allocator<HDActivityCacheActiveSource> >=^{HDActivityCacheActiveSource}^{HDActivityCacheActiveSource}{__compressed_pair<HDActivityCacheActiveSource *, std::__1::allocator<HDActivityCacheActiveSource> >=^{HDActivityCacheActiveSource}}}24@0:8r^{vector<HDActivityCacheStatisticsBuilderSample, std::__1::allocator<HDActivityCacheStatisticsBuilderSample> >=^{HDActivityCacheStatisticsBuilderSample}^{HDActivityCacheStatisticsBuilderSample}{__compressed_pair<HDActivityCacheStatisticsBuilderSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderSample> >=^{HDActivityCacheStatisticsBuilderSample}}}16
B24@0:8r^{map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > >={__tree<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, _HDActivityCacheSourceTotal> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true> >=Q}}}16
d24@0:8r^{map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > >={__tree<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, _HDActivityCacheSourceTotal> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true> >=Q}}}16
v36@0:8r^{vector<HDActivityCacheStatisticsBuilderSample, std::__1::allocator<HDActivityCacheStatisticsBuilderSample> >=^{HDActivityCacheStatisticsBuilderSample}^{HDActivityCacheStatisticsBuilderSample}{__compressed_pair<HDActivityCacheStatisticsBuilderSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderSample> >=^{HDActivityCacheStatisticsBuilderSample}}}16^{map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > >={__tree<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, _HDActivityCacheSourceTotal> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true> >=Q}}}24B32
v60@0:8{HDActivityCacheStatisticsBuilderSample=dddq}16^{map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > >={__tree<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, _HDActivityCacheSourceTotal> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true> >=Q}}}48B56
d48@0:8^{map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > >={__tree<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, _HDActivityCacheSourceTotal> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true> >=Q}}}16{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}24
d64@0:8^{map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > >={__tree<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, _HDActivityCacheSourceTotal> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDActivityCacheSourceTotal>, std::__1::less<long long>, true> >=Q}}}16{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}24d48d56
{vector<HDActivityCacheStatisticsBuilderStandHourSample, std::__1::allocator<HDActivityCacheStatisticsBuilderStandHourSample> >="__begin_"^{HDActivityCacheStatisticsBuilderStandHourSample}"__end_"^{HDActivityCacheStatisticsBuilderStandHourSample}"__end_cap_"{__compressed_pair<HDActivityCacheStatisticsBuilderStandHourSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderStandHourSample> >="__value_"^{HDActivityCacheStatisticsBuilderStandHourSample}}}
{map<_HKDataTypeCode, std::__1::map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > >, std::__1::less<_HKDataTypeCode>, std::__1::allocator<std::__1::pair<const _HKDataTypeCode, std::__1::map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > > > > >="__tree_"{__tree<std::__1::__value_type<_HKDataTypeCode, std::__1::map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > > >, std::__1::__map_value_compare<_HKDataTypeCode, std::__1::__value_type<_HKDataTypeCode, std::__1::map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > > >, std::__1::less<_HKDataTypeCode>, true>, std::__1::allocator<std::__1::__value_type<_HKDataTypeCode, std::__1::map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<_HKDataTypeCode, std::__1::map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<_HKDataTypeCode, std::__1::__value_type<_HKDataTypeCode, std::__1::map<long long, _HDActivityCacheSourceTotal, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDActivityCacheSourceTotal> > > >, std::__1::less<_HKDataTypeCode>, true> >="__value_"Q}}}
@"<HDActivityCacheStatisticsBuilderSourceOrderDelegate>"
v32@0:8#16@?24
@"HDCloudSyncOperation"
{?="endAnchor"b1"entityType"b1"startAnchor"b1}
{?="bedtimeHour"b1"bedtimeMinute"b1"bedtimeToCorrectedBedtimeMinutes"b1"bedtimeToFirstSleepInterruptionMinutes"b1"bedtimeToStartOfLongestSleepIntervalMinutes"b1"correctedBedtimeToThirdPartySleepOnsetMinutes"b1"percentOfDesiredSleep"b1"timestamp"b1"wakeupTimeToThirdPartyWakeupTimeMinutes"b1"wakeupIsOnWeekday"b1}
@"NSArray"24@0:8@"NSArray"16
@"HKSource"24@0:8q16
@32@0:8@16o^@24
@44@0:8@16@24I32o^@36
B28@0:8i16o^@20
@24@0:8o^@16
B40@0:8o^@16q24@32
@40@0:8@16{shared_ptr<health::VirtualFilesystem>=^{VirtualFilesystem}^{__shared_weak_count}}24
@?20@0:8B16
{shared_ptr<health::DataStore>=^{DataStore}^{__shared_weak_count}}24@0:8^@16
{shared_ptr<health::VirtualFilesystem>="__ptr_"^{VirtualFilesystem}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<health::DataStore>="__ptr_"^{DataStore}"__cntrl_"^{__shared_weak_count}}
@"<HDHFDataStoreDelegate>"
@"MAAsset"
@48@0:8@16d24d32d40
@"NSMutableString"
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
@"HDAWDHealthKitAchievement"
@"HDAWDHealthKitActivityCache"
@"HDAWDHealthKitExperimentalCondition"
@"HDAWDHealthKitNotificationResponseFlags"
@"HDAWDHealthKitWeeklySummaryDetail"
{?="endDate"b1"startDate"b1"timestamp"b1"alertType"b1"testAction"b1"dndEnabled"b1"failedPosting"b1}
{?="modificationDate"b1"deleted"b1}
v48@0:8#16q24q32@40
v40@0:8@16q24d32
v40@0:8d16d24d32
{HistogramState="_dateBuckets"{vector<HistogramBucket, std::__1::allocator<HistogramBucket> >="__begin_"^{HistogramBucket}"__end_"^{HistogramBucket}"__end_cap_"{__compressed_pair<HistogramBucket *, std::__1::allocator<HistogramBucket> >="__value_"^{HistogramBucket}}}"_histogramBucketAnchor"d"_histogramBucketSize"d"_currentStartDateBucket"q}
@"HDAWDHealthKitCoachingFeatureGroup"
{?="duration"b1"eventTimestamp"b1"timestamp"b1"dismissReason"b1"eventType"b1"newGoal"b1"recommendedGoal"b1}
d48@0:8d16d24d32q40
d72@0:8d16d24q32d40d48d56d64
d40@0:8d16d24q32
d64@0:8d16q24d32d40d48d56
@96@0:8@16q24q32[16C]40d48d56q64q72q80Q88
B40@0:8d16^@24@?32
^[16C]16@0:8
B36@0:8d16d24f32
v40@0:8d16d24f32B36
{ObjectIdentifier=qQ}16@0:8
v32@0:8{ObjectIdentifier=qQ}16
{deque<std::__1::tuple<double, double, float>, std::__1::allocator<std::__1::tuple<double, double, float> > >="__map_"{__split_buffer<std::__1::tuple<double, double, float> *, std::__1::allocator<std::__1::tuple<double, double, float> *> >="__first_"^^{tuple<double, double, float>}"__begin_"^^{tuple<double, double, float>}"__end_"^^{tuple<double, double, float>}"__end_cap_"{__compressed_pair<std::__1::tuple<double, double, float> **, std::__1::allocator<std::__1::tuple<double, double, float> *> >="__value_"^^{tuple<double, double, float>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::tuple<double, double, float> > >="__value_"Q}}
[16C]
{ObjectIdentifier="objectType"q"identifier"Q}
B44@0:8B16@20@28^@36
{?="day"b1"era"b1"hour"b1"minute"b1"month"b1"nanosecond"b1"quarter"b1"second"b1"weekOfMonth"b1"weekOfYear"b1"weekday"b1"weekdayOrdinal"b1"year"b1"yearForWeekOfYear"b1}
v32@0:8@"HKObjectType"16d24
v32@0:8d16@"HKObjectType"24
v24@0:8@"HKObjectType"16
v28@0:8B16@?<v@?B@"NSError">20
B56@0:8@16@24Q32Q40^@48
B48@0:8@16Q24Q32^@40
@24@0:8^B16
v124@0:8q16B24@28@36B44@48@56@64@72@80q88q96B104B108B112@116
v32@0:8d16q24
v52@0:8@16@24@32d40B48
{?="notGiven"b1"patientReported"b1}
v24@0:8@"<HKFitnessMachineConnectionClientInterface>"16
{?="currentOntologyVersion"b1"hoursSinceLastAssetDownload"b1"timestamp"b1"downloadPhase"b1}
B40@0:8r^v16Q24^@32
B40@0:8^v16Q24^@32
v80@0:8@16d24@32d40q48@56d64@72
@48@0:8@16@24^@32^@40
v48@0:8q16d24@?32@?40
@"_HDDataFaker"
v104@0:8q16q24B32d36B44@48q56q64q72q80q88q96
v48@0:8@16@24q32q40
@48@0:8@16@24Q32Q40
@56@0:8@16@24Q32Q40q48
v24@0:8^{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}16
@"NSString"24@0:8q16
B56@0:8d16d24d32q40^@48
{unique_ptr<_HDStatisticsCollectionCalculatorImplementation, std::__1::default_delete<_HDStatisticsCollectionCalculatorImplementation> >="__ptr_"{__compressed_pair<_HDStatisticsCollectionCalculatorImplementation *, std::__1::default_delete<_HDStatisticsCollectionCalculatorImplementation> >="__value_"^{_HDStatisticsCollectionCalculatorImplementation}}}
@"<HDStatisticsCollectionCalculatorSourceOrderProvider>"
q40@0:8@16^@24@?32
q44@0:8@16B24^@28@?36
@32@0:8#16@24
@40@0:8@16#24@32
B36@0:8B16^@20@?28
v32@0:8@"CBPeripheral"16@"CBCharacteristic"24
v48@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSDate"32@"NSError"40
@"HDHealthPeripheral"
@"NSArray"32@0:8@"NSString"16^@24
B40@0:8@"NSArray"16@"NSString"24^@32
@"NSArray"24@0:8@"NSString"16
@"NSLocale"16@0:8
B48@0:8q16@24^q32^@40
B40@0:8q16^q24^@32
B40@0:8Q16^q24^@32
@"<HDFeatureAvailabilityExtension>"32@0:8@"NSString"16@"HDHealthStoreClient"24
v40@0:8@"NSString"16@"NSUUID"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"NSNumber"@"NSError">24
v24@0:8@"<HKFeatureAvailabilityProviding>"16
@"<HDFeatureAvailabilityExtension>"
@"NSExtension"
@"_HKBackgroundObservationExtensionHostContext"
@"_HKBackgroundObservationExtensionRemoteContext"
{?="activityType"b1"locationType"b1"wLengthValue"b1"wLocationType"b1}
{?="locationType"b1}
v28@0:8@16I24
@"CUPowerSourceMonitor"
@"HDCloudSyncManagerTask"
@"<HDCloudSyncManagerTaskQueueDelegate>"
@64@0:8@16@24@32q40@48^@56
B36@0:8B16@20^@28
@36@0:8i16^i20^i28
v24@0:8r^{vector<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample, std::__1::allocator<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample> >=^{HDActivityCacheHeartRateStatisticsBuilderHeartRateSample}^{HDActivityCacheHeartRateStatisticsBuilderHeartRateSample}{__compressed_pair<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample *, std::__1::allocator<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample> >=^{HDActivityCacheHeartRateStatisticsBuilderHeartRateSample}}}16
v32@0:8r^{vector<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample, std::__1::allocator<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample> >=^{HDActivityCacheHeartRateStatisticsBuilderHeartRateSample}^{HDActivityCacheHeartRateStatisticsBuilderHeartRateSample}{__compressed_pair<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample *, std::__1::allocator<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample> >=^{HDActivityCacheHeartRateStatisticsBuilderHeartRateSample}}}16@24
v40@0:8d16d24@32
v24@0:8r^{vector<HDActivityCacheStatisticsBuilderBreatheSample, std::__1::allocator<HDActivityCacheStatisticsBuilderBreatheSample> >=^{HDActivityCacheStatisticsBuilderBreatheSample}^{HDActivityCacheStatisticsBuilderBreatheSample}{__compressed_pair<HDActivityCacheStatisticsBuilderBreatheSample *, std::__1::allocator<HDActivityCacheStatisticsBuilderBreatheSample> >=^{HDActivityCacheStatisticsBuilderBreatheSample}}}16
{vector<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample, std::__1::allocator<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample> >="__begin_"^{HDActivityCacheHeartRateStatisticsBuilderHeartRateSample}"__end_"^{HDActivityCacheHeartRateStatisticsBuilderHeartRateSample}"__end_cap_"{__compressed_pair<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample *, std::__1::allocator<HDActivityCacheHeartRateStatisticsBuilderHeartRateSample> >="__value_"^{HDActivityCacheHeartRateStatisticsBuilderHeartRateSample}}}
@"HKHeartRateSummaryStatistics"
v24@0:8@"HDHealthStoreClient"16
@"HDClientDataCollectionObservationStateMonitor"
v32@0:8@"HKStateMachine"16@"HKStateMachineTransition"24
v64@0:8@"HKStateMachine"16@"HKStateMachineTransition"24@"HKStateMachineState"32@"HKStateMachineState"40@"NSDate"48@"NSError"56
v48@0:8@"HKStateMachine"16@"HKStateMachineState"24@"NSDate"32@"NSError"40
v40@0:8@"HKStateMachine"16q24@"HKStateMachineState"32
v48@0:8q16@24@32@?40
v48@0:8q16@"NSDate"24@"NSDate"32@?<v@?B@"NSError">40
v24@0:8@"HKDevice"16
v32@0:8Q16@"HKQuantityType"24
v32@0:8q16@"HKQuantityType"24
v32@0:8Q16Q24
@40@0:8@16Q24q32
@"HKStateMachine"
@"HKWorkoutBuilderConfiguration"
@64@0:8@16@24q32@40^@48^@56
@72@0:8@16@24@32q40@48^@56^@64
B64@0:8@16q24@32@40^@48@?56
B64@0:8@16@24@32q40@48^@56
B72@0:8@16@24@32@40q48@56^@64
B56@0:8@16q24@32@40^@48
@64@0:8@16@24q32@40^@48@?56
B56@0:8q16@24@32^@40@?48
B80@0:8@16@24@32q40q48q56@64^@72
B64@0:8@16@24q32q40@48^@56
B72@0:8@16@24q32q40q48@56^@64
B88@0:8@16@24@32@40q48q56q64@72^@80
r*16@0:8
q72@0:8q16@24@32q40d48@56^@64
q64@0:8@16@24q32d40@48^@56
#24@0:8q16
@72@0:8@16@24@32q40q48q56@64
@"<NSSecureCoding>"
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v28@0:8:16S24
v36@0:8#16#24S32
@20@0:8S16
v28@0:8S16@20
@"IDSService"
@"HDIDSPersistentDictionary"
@"<HDIDSMessageCenterDelegate>"
@28@0:8S16@20
@"HDIDSParticipant"
@"HDIDSOutgoingResponse"
{?="ageYears"b1"biologicalSex"b1"heightCm"b1"weightKg"b1}
@24@0:8@"NSSet"16
@36@0:8q16B24^@28
@44@0:8@16#24B32^@36
@"_HKQuantityDistributionQueryServerConfiguration"
@40@0:8d16d24@32
@"HDCodableCodedValueCollection"
@"HDCodableRatioValue"
@"<HKFitnessMachineConnectionClientInterface>"
{?="creationDate"b1"externalSyncObjectCode"b1}
{?="bedHour"b1"bedMinute"b1"overrideDayIndex"b1"wakeHour"b1"wakeMinute"b1"friday"b1"monday"b1"saturday"b1"sunday"b1"thursday"b1"tuesday"b1"wednesday"b1}
@72@0:8@16@24@32@40@48@56@64
q40@0:8@"HDSyncSession"16@"<HDSyncAnchorMap>"24^@32
B40@0:8@"HDSyncSession"16@"HDAssertion"24^@32
v32@0:8@"NSArray"16@"<HDSyncStore>"24
B40@0:8@"<HDSyncChange>"16@"<HDSyncStore>"24^@32
B40@0:8@"<HDSyncAnchorMap>"16@"<HDSyncStore>"24^@32
B48@0:8@"<HDSyncAnchorMap>"16@"<HDSyncStore>"24B32B36^@40
v24@0:8@"<HDSyncStore>"16
@?<v@?>16@0:8
q64@0:8#16@24^q32q40@48^@56
@40@0:8#16@24^@32
@"HDDaemonSyncEntityManager"
v28@0:8@"HDDevicePowerMonitor"16B24
v28@0:8@"HDSchoolTimeObserver"16B24
@"HDLocationManager"
@"HDWatchAppStateMonitor"
@"HDSchoolTimeObserver"
@"HDWorkoutLocationSmoother"
v32@0:8q16^?24
v40@0:8q16^?24q32
v48@0:8@16q24q32@?40
v56@0:8@16q24q32q40@?48
q48@0:8@16^q24q32^@40
q48@0:8@16q24q32^@40
q40@0:8q16@?24^@32
q40@0:8q16@24^@32
@"HDDatabaseSchemaManager"
{?="entryTime"b1"exitTime"b1}
@84@0:8@16@24@32@40B48d52d60@68^@76
B72@0:8@16@24@32Q40q48^@56@?64
q28@0:8B16^@20
{?="guardianDSID"b1"setupType"b1}
{?="count"b1"timestamp"b1"kind"b1"success"b1}
v28@0:8@"HDLocationManager"16i24
v32@0:8@"HDLocationManager"16@"NSArray"24
v32@0:8@"HDLocationManager"16@"NSError"24
@"<HDSampleSaving>"
@"<HDLocationEventDelegate>"
@"CMElevation"
@48@0:8@16@24@?32@?40
@"HDActivitySummaryBuilder"
B72@0:8q16q24@32@40q48@56^@64
B68@0:8@16q24@32q40B48@52^@60
B80@0:8q16q24@32@40@48q56@64^@72
B76@0:8@16q24@32@40q48B56@60^@68
B56@0:8@16@24B32B36@40^@48
B80@0:8q16d24Q32q40@48@56@64^@72
B76@0:8@16d24@32Q40q48B56@60^@68
q56@0:8@16@24@32@40^@48
@"<HDWorkoutSessionController>"
@"HDWorkoutSessionEntity"
@"_HKCurrentWorkoutSnapshot"
@"HDWorkoutSessionTaskServer"
@"<HDWorkoutEventCollectorDelegate>"
v40@0:8@"CMWorkoutManager"16@"CMWorkout"24@"NSDate"32
v40@0:8@"CMWorkoutManager"16@"CMWorkout"24@"NSError"32
v32@0:8@"CMWorkoutManager"16@"CMWorkout"24
v40@0:8q16@24@32
@"CMWorkoutManager"
@"HDCloudSyncCodableRegistry"
@"NSArray"24@0:8@"HDProfile"16
v48@0:8@16@24d32@40
v56@0:8@16@24q32Q40@?48
@48@0:8@16@24@32d40
{?=dddBBB}24@0:8@16
v96@0:8@16{?=dddBBB}24{?=dddBBB}56@88
@48@0:8{?=dddBBB}16
v40@0:8q16d24@?32
@56@0:8@16@24@32@40d48
@"HDDatabaseCoalescedWritePool"
@"HDSeriesQuantityEventObserver"
@"HDBTLEHeartRateDataCollector"
@"HDDemoManager"
@40@0:8@16@24d32
@"HDDataCollectionObserverState"
@64@0:8@16@24@32@40@?48@56
@72@0:8@16@24@32@40@?48@56@64
@"NSPredicate"
@"<HDTaskServerDelegate>"
@84@0:8@16Q24@32@40@48@56@64@72i80
@"CKServerChangeToken"
{?="form"b1"underlyingDate"b1}
v40@0:8@"SCLSchoolMode"16@"SCLState"24@"SCLState"32
v32@0:8@"SCLSchoolMode"16@"SCLScheduleSettings"24
v24@0:8@"SCLSchoolMode"16
@"SCLSchoolMode"
@"SCLState"
@"<HDSchoolTimeObserverDelegate>"
v36@0:8i16q20@28
v52@0:8q16i24@28@36i44i48
v56@0:8q16@24q32@40q48
v64@0:8@16@24@32@40@48@?56
v64@0:8@"NSArray"16@"HKDevice"24@"NSDictionary"32@"NSUUID"40@"NSUUID"48@?<v@?B@"NSError">56
@"HKDataCollectorTaskServerConfiguration"
@"HKDataCollectorCollectionConfiguration"
B36@0:8@16@24B32
v24@0:8@"HDAppExtensionAssertion"16
v48@0:8@16q24@32@?40
@32@0:8q16@?24
{?="collectionType"b1}
@48@0:8@16@24^@32@?40
{?="faultCount"q"lookupCount"q"resetCount"q}
@32@0:8@16i24B28
v40@0:8@"NRDevice"16@"NSString"24@32
@72@0:8@16@24@32@40i48@52@60B68
@40@0:8@16d24@?32
@"NRDevice"
@"<HDNanoSyncStoreDelegate>"
@"HDNanoSyncRestoreSession"
@36@0:8@16#24B32
v24@0:8@"HDUnitPreferencesManager"16
v40@0:8@"NSArray"16@?<v@?>24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@?<v@?B>24@?<v@?@"NSError">32
v56@0:8@16@24@32@40@?48
v44@0:8@16@24B32@?36
v48@0:8@16@24Q32@?40
v40@0:8d16d24@?32
v56@0:8@"NSString"16@"NSURL"24@"NSUUID"32@"HKTaskConfiguration"40@?<v@?@"NSXPCListenerEndpoint"@"NSError">48
v32@0:8@"NSString"16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v48@0:8@"NSString"16@"NSUUID"24@"HKQueryServerConfiguration"32@?<v@?@"NSXPCListenerEndpoint"@"NSError">40
v32@0:8@"HKObjectType"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"NSSet"16@"NSSet"24@?<v@?q@"NSError">32
v44@0:8@"NSSet"16@"NSSet"24B32@?<v@?B@"NSError">36
v32@0:8@"NSUUID"16@?<v@?@"HKSource"@"NSError">24
v32@0:8@"NSUUID"16@"NSError"24
v44@0:8@"NSArray"16@"NSUUID"24B32@?<v@?@"NSUUID"B@"NSError">36
v40@0:8@"NSArray"16Q24@?<v@?B@"NSError">32
v48@0:8@"HKObjectType"16@"_HKFilter"24Q32@?<v@?BQ@"NSError">40
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?B@"NSError">32
v48@0:8@"NSArray"16@"NSArray"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8q16@"HKObjectType"24@?<v@?B@"NSError">32
v48@0:8@"HKObjectType"16@"NSNumber"24@"NSNumber"32@?<v@?B@"NSError">40
v48@0:8@"NSArray"16@"NSString"24Q32@?<v@?B@"NSError">40
v48@0:8@"NSString"16q24@"NSDate"32@?<v@?B@"NSError">40
v32@0:8@"HKObjectType"16@?<v@?@@"NSError">24
v40@0:8@16@"HKCharacteristicType"24@?<v@?B@"NSError">32
v32@0:8@"HKCharacteristicType"16@?<v@?@"NSDate"@"NSError">24
v40@0:8@"NSURL"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"HKUnit"16@"HKQuantityType"24@?<v@?B@"NSError">32
v32@0:8@"HKQuantityType"16@?<v@?B@"NSError">24
v40@0:8@"NSSet"16q24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8d16d24@?<v@?d@"NSError">32
v32@0:8@"NSString"16@?<v@?@@"NSError">24
v40@0:8@16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSArray"16@"HKWorkout"24@?<v@?B@"NSError">32
v40@0:8@"HKWorkout"16@"HKWorkout"24@?<v@?B@"NSError">32
v32@0:8@"HKWorkoutConfiguration"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"HKWorkoutSessionTaskConfiguration"@"HKWorkoutBuilderConfiguration"@"NSUUID"@"NSError">16
@?40@0:8@16@24@?32
@"HDAuthorizationServer"
@"HDQueryControlServer"
v48@0:8@"IDSBatchIDQueryController"16@"NSDictionary"24@"NSString"32@"NSError"40
v32@0:8@"NSDictionary"16@"NSString"24
@"IDSBatchIDQueryController"
@48@0:8@16Q24@32@?40
@"<HDFitnessMachineStateTimersDelegate>"
@"HDFitnessMachineStateTimer"
v36@0:8B16@20@?28
v32@0:8q16@?<v@?Q@"NSError">24
v32@0:8@"HKHealthService"16@?<v@?Q@"NSError">24
v32@0:8Q16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"HKHealthService"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@@"NSError">16
v40@0:8@"NSString"16Q24@?<v@?@@"NSError">32
v48@0:8@"NSString"16Q24@"NSDictionary"32@?<v@?@"NSString"B@"NSError">40
v48@0:8@"NSUUID"16@"NSString"24@"NSArray"32@?<v@?B@"NSError">40
v36@0:8B16@"NSUUID"20@?<v@?B@"NSError">28
@"HDIdentifierTable"
{?="amm"b1"duration"b1"goal"b1"goalType"b1"isIndoorWorkout"b1"isWatchWorkout"b1"totalBasalEnergyBurnedInCanonicalUnit"b1"totalDistanceInCanonicalUnit"b1"totalEnergyBurnedInCanonicalUnit"b1"type"b1}
v32@0:8@"HDUserCharacteristicsManager"16@"NSDictionary"24
q64@0:8@16@24@32@40@48^@56
B96@0:8@16@24@32d40@48@56@64@72@80^@88
@88@0:8@16@24d32@40@48@56@64^q72^@80
@48@0:8@16d24d32q40
v60@0:8q16q24B32d36@44@52
@"_HDWorkoutCondenserAnalyticsAccumulator"
@64@0:8@16q24q32q40@48^@56
@72@0:8@16@24d32q40q48q56@64
@52@0:8d16d24d32[16C]40B48
@"<HDClientDataCollectionObservationStateMonitorDelegate>"
{?="completedDate"b1"doubleValue"b1"intValue"b1}
@"HDXPCProcess"
@"NSXPCConnection"
d24@0:8q16
@40@0:8@16d24q32
d52@0:8@16d24q32B40d44
@"NSFileManager"
@"HDCodableNanoSyncActivationRestore"
@"HDCodableNanoSyncChangeSet"
@"HDCodableNanoSyncStatus"
{?="version"b1}
@"<HDGymKitSettingsDelegate>"
v24@0:8^{sqlite3_stmt=}16
@"HDSQLiteQueryDescriptor"
B88@0:8@16@24@32@40@48q56@64^@72@?80
@56@0:8@16@24Q32@40@48
@40@0:8Q16d24d32
B52@0:8@16q24q32B40^@44
B52@0:8@"NSArray"16q24q32B40^@44
@56@0:8#16{HDSyncAnchorRange=qq}24@40@48
{HDSyncAnchorRange="start"q"end"q}
@"HDSyncSession"
@"HDSyncAnchorMap"
B40@0:8@16^q24^@32
@64@0:8#16@24@32@40@48@56
@"HKTaskConfiguration"
@"<HDTaskServer>"
@"<HDTaskServerEndpointDelegate>"
{?="activeHours"b1"activeHoursGoal"b1"amm"b1"briskMinutes"b1"briskMinutesGoal"b1"date"b1"energyBurned"b1"energyBurnedGoal"b1"mmg"b1"mmv"b1"pushCount"b1"snapshotIndex"b1"stepCount"b1"timeZoneOffsetFromUTCForNoon"b1"uploadedDate"b1"walkingAndRunningDistance"b1"wheelchairUse"b1}
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
v72@0:8@16@24@32@40@48@56@64
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSNumber"32
v40@0:8@"CBCentralManager"16@"NSData"24@"NSData"32
v56@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSNumber"32@"NSNumber"40@"NSNumber"48
v36@0:8@"CBCentralManager"16@"NSString"24B32
v48@0:8@"CBCentralManager"16@"NSNumber"24@"CBPeripheral"32@"NSError"40
v40@0:8@"CBCentralManager"16@"NSData"24@"CBPeripheral"32
v32@0:8@"CBCentralManager"16@"NSArray"24
v32@0:8@"CBCentralManager"16@"NSError"24
v72@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSNumber"32@"NSNumber"40@"NSNumber"48@"NSNumber"56@"NSNumber"64
v48@0:8@16@24q32@40
v32@0:8@"CBPairingAgent"16@"CBPeer"24
v40@0:8@"CBPairingAgent"16@"CBPeer"24@"NSError"32
v48@0:8@"CBPairingAgent"16@"CBPeer"24q32@"NSNumber"40
Q52@0:8q16Q24B32@?36^@44
@32@0:8Q16Q24
Q56@0:8@16@?24@?32@?40^@48
Q40@0:8@16@24^@32
Q40@0:8@16@24@32
v44@0:8@16Q24B32@?36
Q48@0:8@16@?24@?32^@40
Q72@0:8@16Q24@?32@?40@?48@56^@64
@"CBCentralManager"
@"CBUUID"
@40@0:8@?16@24B32B36
@80@0:8@?16@?24@?32@?40@48Q56d64@72
@24@0:8^{sqlite3=}16
^{sqlite3_stmt=}36@0:8@16B24^@28
^{sqlite3_stmt=}40@0:8r*16@?24^@32
v28@0:8^{sqlite3_stmt=}16B24
^{sqlite3_stmt=}32@0:8@16^@24
^{sqlite3_stmt=}32@0:8r*16^B24
^{sqlite3_stmt=}32@0:8@16^B24
v32@0:8^{sqlite3_stmt=}16r*24
v32@0:8^{sqlite3_stmt=}16@24
@"_HDSQLiteStatementCacheStorage"
^{__CFSet=}
^{sqlite3_stmt=}24@0:8r*16
^{sqlite3_stmt=}24@0:8@16
^{__CFDictionary=}
@32@0:8Q16^@24
@"NSCondition"
@"<HDSQLiteDatabasePoolDelegate>"
v56@0:8@16@24@32q40@?48
@"<HDSQLiteDatabaseProvider>"
B56@0:8@16q24Q32@40^@48
B72@0:8@16@24@32@40B48B52^@56@?64
@32@0:8{HDSyncAnchorRange=qq}16
v40@0:8{HDSyncAnchorRange=qq}16@32
B32@0:8^{HDSyncAnchorRange=qq}16@24
@56@0:8@16@24d32@40@48
v48@0:8q16d24@32@40
@"<HDPeriodicActivityDelegate>"
v40@0:8q16d24@?<v@?@"NSNumber"@"NSError">32
@120@0:8@16d24@32@40@48@56@64@72@80@88q96@104^@112
@"HKPersistentTimer"
@"HDGymKitWorkoutAnalyticEvent"
@"CMWorkout"
@"CMWorkoutMets"
@"HDCodableHealthObject"
{?="dataType"b1"endDate"b1"startDate"b1}
^d16@0:8
d24@0:8Q16
v32@0:8^d16Q24
{?="list"^d"count"Q"size"Q}
{?="objectType"b1"userOrdered"b1}
v52@0:8@16Q24q32B40@44
@64@0:8@16@24@32{?=qqq}40
{?="activeCalories"b1"automotive"b1"briskMinutes"b1"cycling"b1"duration"b1"heartRate"b1"other"b1"running"b1"unknown"b1"walking"b1"workout"b1}
{HDDemoDataHeartRate=dq}32@0:8@16d24
{HDDemoDataBloodPressure=dd}32@0:8@16d24
q48@0:8@16d24d32d40
d36@0:8@16d24B32
{?="activeHours"b1"briskMinutes"b1"cacheIndex"b1"endDate"b1"energyBurned"b1"energyBurnedGoal"b1"energyBurnedGoalDate"b1"startDate"b1"stepCount"b1"walkingAndRunningDistance"b1}
v48@0:8@"<HDDataCollector>"16@"HDHeartRateSensorDatum"24@"HKDevice"32@"HKSource"40
{?="accepted"b1}
B40@0:8S16C20^*24r*32
B72@0:8@16@24@32@40Q48@56^@64
B88@0:8@16@24q32q40@48Q56@64@72^@80
B128@0:8q16q24q32q40q48@56@64q72q80@88Q96@104@112^@120
@56@0:8q16q24@32@40^@48
B104@0:8@16@24@32@40@48q56q64Q72@80@88^@96
v32@0:8^{HDSQLiteRow=}16@24
{?="timestamp"b1"activityType"b1"eventType"b1}
333333
ffffff
333333
33333
ffffff
(\B@
fffff&B@
333333B@
Q8B@
QXB@
33333
fffff
