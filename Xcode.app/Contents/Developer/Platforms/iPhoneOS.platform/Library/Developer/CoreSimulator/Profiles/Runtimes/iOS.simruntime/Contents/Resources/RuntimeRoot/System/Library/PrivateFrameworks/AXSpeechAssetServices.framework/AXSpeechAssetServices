orthograpy
language
AXSpeechPronunciationOptions: %@ %@
supportsSecureCoding
TB,R
orthography
T@"NSString",&,N,V_orthography
T@"NSString",&,N,V_language
v8@?0
AXSpeechPronunciationClient
AXAssetAndDataServer
assistant
Received result from server for message: %@
results
error
audioLevel
Request start session: %d
Sending data: %{public}@
Error: %@
options
Request stop session: %d
Request cance session %d
v24@?0@"NSDictionary"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
AXAssetAndDataServer-%@
com.apple.MobileAsset.VoiceServices.CustomVoice.ma.new-asset-installed
com.apple.MobileAsset.VoiceServices.GryphonVoice.ma.new-asset-installed
com.apple.MobileAsset.MacinTalkVoiceAssets.ma.new-asset-installed
com.apple.MobileAsset.VoiceServicesVocalizerVoice.ma.new-asset-installed
com.apple.MobileAsset.VoiceServices.CombinedVocalizerVoices.ma.new-asset-installed
v12@?0i8
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2883/AccessibilityUmbrellaFramework/Frameworks/SpeechAssetServices/AXSpeechAssetMonitorHelper.m
-[AXSpeechAssetMonitorHelper clearCurrentVoicesAndRefreshTTSVoiceListOnNextBoot]
Should not attempt to clear voice cache using clearCurrentVoicesAndRefreshTTSVoiceListOnNextBoot unless we are in the data migrator
com.apple.speech.synthesis.voice.Victoria
com.apple.speech.synthesis.voice.Fred
asset-work-queue
download-voices
B24@?0@"MAAsset"8Q16
(attributes.%@ != %@)
(attributes.%K BETWEEN %@)
((%@ IN attributes.%K) || (%@ IN attributes.%K) || (%@ IN attributes.%K))
(%d = attributes.%K)
((%@ IN attributes.%K) || (%@ = attributes.%K))
 && 
v16@?0q8
v16@?0@"MAProgressNotification"8
AXAssetClient-voice-assets-%@
Starting process of updating available speech assets.
Told AXSpeechAssetUpdater to update available speech assets: %@
completionBlock
Siri
VOICE_SAMPLE_STRING
GeneralAccessibility
gryphon_GetMinCompatibilityVersion
/System/Library/PrivateFrameworks/SiriTTS.framework/SiriTTS
/System/Library/PrivateFrameworks/SiriTTS.framework/Contents/MacOS/SiriTTS
gryphon_GetCurrentCompatibilityVersion
%{public}@
Check for asset updates: %d
Beginning check for asset updates (force: %d
No extant voices available so force asset update:
Did not complete check for asset updates (force: %d, isVoiceOverRunning: %d
Aborting asset update because we updated less than an hour ago. %f - duration: %f
Checking for asset updates (force: %d, isVoiceOverRunning: %d).
Waited 60 seconds for our voices, will monitor network changes to try to get voices again
Starting proces of updating available voices...
Told AXAssetAndDataServer to update available voice assets. Reply: %{public}@
Check for client updates for: %{public}@
Could not register for: %{public}@
Weekly asset update check did fire (force=NO)
Scheduling asset update in one week from today (%{public}@)
fetched asset %{public}@
Querying for siri voice: %@
Not identified as a siri voice, skipping: %@
Could not parse the voiceID %{public}@ as a Nashville voice ID
Querying for: %{public}@ predicate: %@
Retrieved results: %{public}@
Retrieved results local only: %{public}@
Further filtered results: %{public}@
MAAssetQuery error fetching results: %{public}@
Deleting asset: %{public}@
Deleted asset: %{public}@ [error: %{public}@]
starting download asset %{public}@
asset download progress: %{public}@ %{public}f
Asset stalled, cancelling: %{public}@
Cancelled download: %{public}@
Not notifying Siri of voice download because voice download was requested from AXUIServer. Usage should be updated using AXAssetAndDataServer directly.
Error trying to tell Siri that %@ is in use: %@
Begin download: %{public}@
Asset download failed with error: %{public}@
Request asset progres: %{public}@ %{public}@
Error trying to tell Siri that %@ is no longer in use: %@
Stop downloading: %{public}@, %{public}@
Cancel download %{public}@: %{public}@
Deleting asset: %{public}@, %{public}@
PREMIUM: Is reachable: %d
softlink:r:path:/System/Library/PrivateFrameworks/SiriTTS.framework/SiriTTS
AXSpeechPronunciationOptions
NSSecureCoding
NSCoding
AXSpeechPronunciationHelper
AXUIClientDelegate
NSObject
AXSpeechAssetMonitorHelper
AXSettingsVoiceAssetManager
AVSpeechSynthesizerDelegate
init
decodeObjectOfClass:forKey:
setOrthography:
setLanguage:
orthography
encodeObject:forKey:
language
stringWithFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
description
.cxx_destruct
_orthography
_language
initWithIdentifier:serviceBundleName:
_assetUpdaterClient
setDelegate:
dealloc
sharedPreferences
dictationIsEnabled
sharedInstance
ignoreLogging
identifier
objectForKeyedSubscript:
errorWithDomain:code:userInfo:
sendSynchronousMessage:withIdentifier:error:
floatValue
copy
archivedDataWithRootObject:requiringSecureCoding:error:
dictionaryWithObjects:forKeys:count:
mainAccessQueue
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
supportsPronunciationSessions
audioLevel
startPronunciationSession:resultCallback:
stopPronunciationSession
cancelPronunciationSession
_inSession
_resultCallback
_monitorSpeechAssetChanges
siriAutoUpdateListInitialized
numberWithInt:
extantVoicesExist
currentVoicesExist
_areMobileAssetsPresent
dataMigratorRequestedVoiceCacheRefresh
setDataMigratorRequestedVoiceCacheRefresh:
_platformSupportsMobileAssetVoices
_monitorForNetworkChanges
extantVoices
countByEnumeratingWithState:objects:count:
canBeDownloaded
_registerForReachabilityNotifications
_clientUpdateAvailableSpeechAssets
UTF8String
_checkClientForUpdates:
updateAvailableSpeechAssets
_checkForAssetUpdatesNowAndNextWeek
date
speechAssetUpdaterClient
_unregisterForReachabilityNotifications
clearCurrentVoicesAndRefreshTTSVoiceListOnNextBoot
_lastVoiceAssetUpdateTime
_reachability
initWithOptions:
addPointer:
count
removePointerAtIndex:
compact
setAllowsCellularAccess:
setDiscretionary:
isSiriVoiceIdentifier:
isOldSiriVoiceIdentifier:
hasPrefix:
_allAssetsForVoiceId:forDeletion:
state
_assetTypeForVoiceId:
firstObject
axFilterObjectsUsingBlock:
speechVoices
isEqualToString:
initWithType:
setDoNotBlockBeforeFirstUnlock:
addObject:
numberWithUnsignedInt:
arrayWithObjects:count:
stringByReplacingOccurrencesOfString:withString:
addKeyValuePair:with:
isNeuralSiriVoiceIdentifier:
isCombinedVoice
isInstalled
rangeOfString:options:
substringWithRange:
componentsJoinedByString:
predicateWithFormat:argumentArray:
nameWithoutQuality
returnTypes:
queryParams
queryMetaDataSync
results
filteredArrayUsingPredicate:
assetType
removeObject:
setAccessibilityAssetState:
_assetForVoiceId:forDeletion:
_allInstalledAssetsForVoiceId:
arrayWithArray:
objectAtIndexedSubscript:
removeObjectAtIndex:
getLocalFileUrl
alexLocalAssetURL
setAlexLocalAssetURL:
clientUpdateAvailableSpeechAssets
purge:
mobileAssetDownloadQueue
_startDownloadingAlternateVoice:
totalWritten
totalExpected
attributes
objectForKey:
_currentDelegates
assetManagerVoiceLanguageDownloadProgress:progress:storageSize:requiredDiskSpace:versionId:
setObject:forKey:
unsignedIntegerValue
spaceCheck:
_cachedAssetForVoiceId:
isStalled
cancelDownload:
assetManagerFinishedDownloadingAsset:wasCancelled:
diskSizeForAsset:
_handleAssetProgress:voiceId:diskSize:asset:
attachProgressCallBack:
_mobileAssetDownloadOptions
currentVoices
startDownload:then:
mobileAssetWorkQueue
_requestVoiceAlternateVoiceDownloadProgress:
refreshState
removeSiriVoiceUsage:
_accessibilityValueForKey:
setIsInternalSynth:
setUsesApplicationAudioSession:
stopSpeakingAtBoundary:
speechUtteranceWithString:
_accessibilitySetValue:forKey:storageMode:
setVoice:
speakUtterance:
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
addDelegate:
removeDelegate:
setAssetsForTesting:
assetsForTesting
inUnitTestMode
replaceTestAsset:withAsset:
setSelectedIdsForTesting:
selectedIdsForTesting
assetForVoiceId:
allInstalledAssetsForVoiceId:
cleanUpExtraInstalledAssetsIfNecessary:
startDownloadingAlternateVoice:
_voiceIdIsVocalizerVoice:
requestVoiceAlternateVoiceDownloadProgress:
stopDownloadingAlternateVoice:
deleteDownloadAlternateVoice:
updateAvailableSpeechAssetsSynchronously
_updateAllowedToDownload
allowedToDownloadVoiceAssets
playSample:completion:
_delegates
_samplePlayer
assetManagerUpdateToDownloadAvailabilityChanged
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
f16@0:8
v32@0:8@16@?24
v20@0:8B16
^{__SCNetworkReachability=}
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
@28@0:8@16B24
v48@0:8@16@24q32@40
q24@0:8@16
@"NSPointerArray"
@"AVSpeechSynthesizer"
