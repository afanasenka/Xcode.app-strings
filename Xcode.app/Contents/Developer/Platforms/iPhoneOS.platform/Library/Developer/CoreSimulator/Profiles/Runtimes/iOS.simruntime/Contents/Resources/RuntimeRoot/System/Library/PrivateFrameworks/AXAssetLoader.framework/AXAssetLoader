@(#)PROGRAM:AXAssetLoader  PROJECT:Accessibility-1
com.apple.MobileAsset.AXBackTapModel
com.apple.ax.AXBackTapModel.LaunchActivity
clientIdentifier
minimumCompatibilityVersion
maximumCompatibilityVersion
modelStage
modelVersion
modelLanguage
assertionType
%@ Owner:%@ Type:%lu CompatVers:[%@ - %@] Model:[%@ %@ %@]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
assetType
T@"NSString",R,N
TQ,N,V_assertionType
T@"NSString",&,N,V_clientIdentifier
T@"NSNumber",&,N,V_minimumCompatibilityVersion
T@"NSNumber",&,N,V_maximumCompatibilityVersion
T@"NSString",&,N,V_modelVersion
T@"NSString",&,N,V_modelLanguage
T@"NSString",&,N,V_modelStage
com.apple.Accessibility.CharacterVoice
com.apple.MobileAsset.CharacterVoices
Language
Character
characterVoiceLanguage
characterVoiceName
language
T@"NSString",&,N,V_language
com.apple.MobileAsset.SoundDetectionModels
com.apple.ax.SoundDetectionModels.LaunchActivity
AXAssetUpdateMonitor
setting up asset update monitor
AXAssetUpdateMonitor<%p>, %@
v8@?0
stopping refresh timer
refreshing assets after delay: %.1f seconds
installed assets: %@
keeping assets: %@
purging assets: %@
B32@?0@"AXAsset"8Q16^B24
assets to download: %@
v12@?0B8
assetController
T@"AXAssetController",&,N,V_assetController
assetPolicy
T@"AXAssetPolicy",R,N
userInitiated
TB,N
hasInProgressDownloads
TB,R,N
com.apple.Accessibility.Assets
v16@?0@"NSMutableArray"8
v16@?0@"NSMutableDictionary"8
B32@?0@"NSDictionary"8Q16^B24
AssetAssertions
defaults
T@"NSUserDefaults",&,N,V_defaults
com.apple.MobileAsset.AXElementVision
com.apple.ax.AXElementVision.LaunchActivity
%@ (assetType=%@)
minSupportedFormatVersion
T@"NSNumber",&,N,V_minSupportedFormatVersion
maxSupportedFormatVersion
T@"NSNumber",&,N,V_maxSupportedFormatVersion
downloadResourceTimeout
Td,N,V_downloadResourceTimeout
updateCatalogTimeout
Td,N,V_updateCatalogTimeout
refreshRetryInterval
Td,N,V_refreshRetryInterval
downloadRetryInterval
Td,N,V_downloadRetryInterval
shouldCopyLocally
launchActivityIdentifier
T@"NSString",R,N,V_launchActivityIdentifier
updateInterval
Td,N,V_updateInterval
MAAssetQuery
Unable to find class %s
/System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset
/System/Library/PrivateFrameworks/MobileAsset.framework/Contents/MacOS/MobileAsset
MADownloadOptions
AXAssetLoader
generic.download.error
generic.error
FormatVersion
%@, AssetID=%@, Type=%@, Installed=%@, Downloading=%@ compatVers=%lu, contentVers=%lu, fmtVers=%lu, localURL=%@
isInstalled
isDownloading
assetId
compatibilityVersion
contentVersion
formatVersion
originalURL
properties
ClonedAXAsset
supportsSecureCoding
TB,R
T@"NSURL",&,N,V_originalURL
localCopyURL
T@"NSURL",&,N,V_localCopyURL
maAsset
T@"MAAsset",R,N,V_maAsset
TB,R,N,V_isInstalled
TB,R,N,V_isDownloading
T@"NSString",R,N,V_assetId
T@"NSString",R,N,V_assetType
TQ,R,N,V_contentVersion
TQ,R,N,V_compatibilityVersion
TQ,R,N,V_formatVersion
localURL
T@"NSURL",R,N
T@"NSDictionary",R,N,V_properties
downloadSize
T@"NSNumber",R,N
unarchivedFileSize
ASAttributeContentVersion
ASAttributeCompatibilityVersion
ASAttributeDownloadSize
ASAttributeUnarchivedSize
com.apple.MobileAsset.ImageCaptionModel
com.apple.ax.ImageCaptionModel.LaunchActivity
Model
downloadable
installed
imageCaptionModel
T@"AXImageCaptionModel",R,N
Name
Version
Stage
%@ [name:%@ - version:%@ - stage:%@]
name
version
stage
AXAssetLocalizedStrings
AXAssetsService
com.apple.accessibility.axassetsd.service
v16@?0@"NSError"8
com.apple.Accessibility.AXAssetController.MobileAssetQueue.%@
com.apple.Accessibility.AXAssetController.RefreshQueue.%@
%@.ma.new-asset-installed
Registering for asset notifications: %@
v12@?0i8
Deregistering for asset notifications: %@
AXAssetController<%p>, %@
Refreshing assets. Will force update catalog
Did successfully force update catalog
Did fail to force update catalog. Error %ld: %@
v16@?0q8
asset is already downloading: %@
v16@?0@"MAProgressNotification"8
%ld new cached assets: %@
v16@?0@"<AXAssetControllerObserver>"8
add in progress asset: %@
remove in progress asset: %@
starting asset download: %@
download progress for asset: %@, totalWritten=%lld, totalExpected=%lld, isStalled=%@, expectedTimeRemaining=%f
download completed successfully for asset: %@. hasRemainingDownloads=%@
download failed for asset: %@, error=%@, hasRemainingDownloads=%@
Refreshing assets, canRefreshCatalog=%@
Will query for asset metadata with: %@ (%@)
Process not entitled to make MAAssetQuery
queryResult=%ld, error=%@, shouldRefreshCatalog=%@
Did successfully update catalog
Did fail to update catalog. Error %ld: %@
Will update catalog with options: %@
not enough disk space for asset: %@, required disk space: %lld bytes
Will download assets with options: %@
Successfully purged asset: %@
Failed to purge asset: %@. error: %@]
updated download priority for asset: %@, success=%@
mobileAssetQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_mobileAssetQueue
T@"AXAssetPolicy",R,N,V_assetPolicy
TB,N,V_userInitiated
MAStringForMADownloadResult
MAAsset
MADownloadConfig
softlink:r:path:/System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset
softlink:r:path:/System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset
softlink:r:path:/System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset
softlink:r:path:/System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset
softlink:r:path:/System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset
softlink:r:path:/System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset
Asset not installed, not copying locally
Creating clone directory for asset: %@
Could not create clone directory for asset: %@. error: %@
Cloning asset: %@. to: %@
Could not clone asset to url: %@. error: %@
Asset exists at: %@
Finding newest compatible image caption model asset. isInstalled:%ld isDownloadable:%ld
No installed compatible image caption model asset found
No downloadable compatible image caption model asset found (it may already be downloaded/installed though!)
Returning newest %@ compatible image caption model asset: %@ (%@)
Will evaluate installed ImageCaptionModel assets for items to purge
  WIll not purge asset [%@]. Protected by assertion: %@
Will evaluate downloadable ImageCaptionModel assets for items to download
AXAssetsService being deallocated: %@
Connection to service interrupted. client: %@
Connection to service invalidated. client: %@
Failed to get service proxy: %@
Attempted to create an asset controller with nil policy
[%@]: %@
AXPhoenixAssetPolicy
AXImageCaptionModelAssetAssertion
AXAssetAssertion
NSObject
CharacterVoice
AXCharacterVoiceAssetPolicy
AXUltronModelAssetPolicy
AXAssetUpdateMonitor
AXAssetControllerObserver
AXAssetAssertionStore
AXElementVisionModelAssetPolicy
AXAssetPolicy
MobileAsset
AXAsset
NSSecureCoding
NSCoding
ImageCaptionModel
AXImageCaptionModelAssetPolicy
AXImageCaptionModel
AXAssetsService
AXAssetsServiceInterface
AXAssetController
assetType
launchActivityIdentifier
shouldCopyLocally
countByEnumeratingWithState:objects:count:
assertionWithPropertyListRepresentation:error:
assertionType
addObject:
array
objectForKey:
setClientIdentifier:
setMinimumCompatibilityVersion:
setMaximumCompatibilityVersion:
setModelStage:
setModelVersion:
setModelLanguage:
unsignedIntegerValue
setAssertionType:
dictionary
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
description
stringWithFormat:
partitionAssertionsWithPropertyListRepresentations:intoVersionLockedAssertions:upgradableAssertions:
assertionsWithPropertyListRepresentations:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
propertyListRepresentation
clientIdentifier
minimumCompatibilityVersion
maximumCompatibilityVersion
modelVersion
modelLanguage
modelStage
.cxx_destruct
_assertionType
_clientIdentifier
_minimumCompatibilityVersion
_maximumCompatibilityVersion
_modelVersion
_modelLanguage
_modelStage
properties
characterVoiceLanguage
characterVoiceName
setLanguage:
formatVersion
language
isEqualToString:
count
arrayWithCapacity:
objectForKeyedSubscript:
allKeys
firstObject
objectAtIndexedSubscript:
contentVersion
downloadOptionsForOperation:userInitiated:
setAllowsCellularAccess:
init
characterVoiceAssetPolicyWithLanguage:
shouldDownloadAsset:withInstalledAssets:
assetsToPurgeFromInstalledAssets:
_language
_initWithAssetPolicy:qosClass:targetQueue:
weakObjectsHashTable
assetControllerWithPolicy:qosClass:
addObserver:
logInfo:
assetPolicy
userInitiated
setUserInitiated:
hasInProgressDownloads
_workerQueue_refreshAssetsAfterDelay:canRefreshCatalog:
cancel
_performWithinLock:
assetUpdateMonitor:installedAssetsDidChange:
removeObject:
removeObserver:
allObjects
initWithTargetSerialQueue:
assetController
refreshAssetsByForceUpdatingCatalog:updatingCatalogIfNeeded:
afterDelay:processBlock:
arrayWithArray:
removeObjectsInArray:
purgeAssets:
refreshRetryInterval
refreshAssetsAfterDelay:
isInstalled
ax_filteredArrayUsingBlock:
_purgeUnneededAssetsFromInstalledAssets:
_updateCachedInstalledAssets:
assetsToDownloadFromRefreshedAssets:
downloadRetryInterval
downloadAssets:successStartBlock:
updateInterval
assetMonitorWithPolicy:
assetMonitorWithPolicy:qosClass:
assetMonitorWithPolicy:qosClass:targetQueue:
assetController:didFinishRefreshingAssets:wasSuccessful:error:
assetController:asset:downloadProgressTotalWritten:totalExpected:isStalled:expectedTimeRemaining:
assetController:didFinishDownloadingAsset:wasSuccessful:error:hasRemainingDownloads:
assetController:didFinishPurgingAssets:wasSuccessful:error:
assetController:willUpdateCatalogForPolicy:
assetController:didUpdateCatalogForPolicy:wasSuccessful:error:
stop
addUpdateObserver:
removeUpdateObserver:
setAssetController:
_assetsLock
_updateObservers
_cachedInstalledAssets
_refreshDispatchTimer
_workerQueue
_assetController
_init
initWithSuiteName:
setDefaults:
containsObject:
_mutateAssertionsForAssetType:assertions:mutationBlock:
_mutateAssetAssertions:
_performWithLock:
ax_removeObjectsFromArrayUsingBlock:
removeAllObjects
defaults
dictionaryForKey:
addObjectsFromArray:
mutableCopy
setObject:forKey:
store
requestAssertion:
discardAssertion:
discardAllAssertionsOfType:heldByClient:
discardAllAssertionsOfType:
heldAssertionsForAssetType:
_lock
_defaults
isAssetSupportedBasedOnMinMaxFormatVersion:
isAssetContentVersion:greatherThanInstalledAssets:
setDownloadResourceTimeout:
setUpdateCatalogTimeout:
setRefreshRetryInterval:
setDownloadRetryInterval:
setUpdateInterval:
minSupportedFormatVersion
maxSupportedFormatVersion
policy
setMinSupportedFormatVersion:
setMaxSupportedFormatVersion:
downloadResourceTimeout
updateCatalogTimeout
_minSupportedFormatVersion
_maxSupportedFormatVersion
_downloadResourceTimeout
_updateCatalogTimeout
_refreshRetryInterval
_downloadRetryInterval
_launchActivityIdentifier
_updateInterval
initWithType:
setDoNotBlockBeforeFirstUnlock:
returnTypes:
setTimeoutIntervalForResource:
setDiscretionary:
setAllowsExpensiveAccess:
newAssetQuery
autoupdatingCurrentLocale
initWithFormat:locale:arguments:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
initWithMAAsset:
resetPropertiesFromMAAsset:
assetId
state
assetStateIsInstalled:
getLocalFileUrl
attributes
unsignedIntValue
maAsset
refreshState
isDownloading
compatibilityVersion
localURL
encodeBool:forKey:
encodeObject:forKey:
encodeInteger:forKey:
originalURL
decodeBoolForKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodePropertyListForKey:
archivedDataWithRootObject:requiringSecureCoding:error:
arrayWithObjects:count:
setWithArray:
unarchivedObjectOfClasses:fromData:error:
defaultManager
stringByAppendingPathComponent:
pathComponents
fileURLWithPath:isDirectory:
URLByDeletingLastPathComponent
path
fileExistsAtPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
copyItemAtURL:toURL:error:
assetsFromMAAssets:
supportsSecureCoding
archivedAssets:error:
unarchivedAssets:error:
installedAssets:
downloadableAssets:
encodeWithCoder:
initWithCoder:
refreshMAAsset
isEquivalentToMAAsset:
downloadSize
unarchivedFileSize
copyLocally
setOriginalURL:
localCopyURL
setLocalCopyURL:
_isInstalled
_isDownloading
_assetId
_assetType
_contentVersion
_compatibilityVersion
_formatVersion
_properties
_originalURL
_localCopyURL
_maAsset
initWithModelProperties:
imageCaptionModel
version
stage
compare:options:
assertionForVersionLockedImageCaptionModelAsset:
newsestCompatibleImageCaptionModelAssetFromAssets:withStage:language:isInstalled:isDownloadable:
_partitionAssets:intoValidAssets:invalidAssets:
unionSet:
minusSet:
assertionForNewsestCompatibleImageCaptionModelAssetWithStage:language:clientIdentifier:
name
_modelProperties
bundleForClass:
localizedStringForKey:value:table:
invalidate
_destroyXPCConnection
dealloc
initWithMachServiceName:options:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
resume
xpcConnection
remoteObjectProxyWithErrorHandler:
_serviceProxy
refreshAssetCatalogForAssetType:withOverrideTimeout:
updateAssetForAssetType:
refreshAssetCatalogForPolicy:withOverrideTimeout:
updateAssetForPolicy:
_xpcConnection
_xpcConnectionQueue
interfaceWithProtocol:
_initWithAssetPolicy:qosClass:
cStringUsingEncoding:
registerForNotifications
UTF8String
_refreshQueue_refreshAssets:
deregisterForNotifications
refreshAssetsByForceUpdatingCatalog:updatingCatalogIfNeeded:catalogRefreshOverrideTimeout:
mobileAssetQueue
logError:
_updateCatalogWithOverrideTimeout:completion:
_queue_refreshAssets:
performWithinLock:
_queue_downloadAssets:successStartBlock:
_queue_purgeAssets:
_queue_updateDownloadPriorityIfNecessary
_handleAssetProgressUpdate:progressNotification:
attachProgressCallBack:
performBlockOnAssetObservers:
addInProgressAsset:
totalWritten
totalExpected
isStalled
expectedTimeRemaining
logDebug:
removeInProgressAsset:
queryMetaDataSync
results
replaceCachedAssetsWithAssets:error:
longValue
ax_errorWithDomain:description:
startCatalogDownload:options:then:
spaceCheck:
_handleAssetDownloadStarted:
_handleAssetDownloadCompletion:downloadResult:
startDownload:then:
purgeSync
configDownload:completion:
assetControllerWithPolicy:
getCachedAvailableAssets:
getCachedDownloadedAssets:
_observers
_cachedAvailableAssets
_cachedInProgressAssets
_refreshQueue
_notifyToken
_userInitiated
_assetPolicy
_mobileAssetQueue
@16@0:8
B16@0:8
v40@0:8@16@24@32
@24@0:8@16
@32@0:8@16^@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDictionary"16@0:8
@32@0:8@"NSDictionary"16^@24
v24@0:8Q16
v24@0:8@16
v16@0:8
@"NSString"
@"NSNumber"
B32@0:8@16@24
@28@0:8Q16B24
@28@0:8@16I24
@36@0:8@16I24@28
v44@0:8@16@24B32@36
v60@0:8@16@24q32q40B48d52
v48@0:8@16@24B32@36B44
v32@0:8@16@24
v44@0:8@"AXAssetController"16@"NSArray"24B32@"NSError"36
v60@0:8@"AXAssetController"16@"AXAsset"24q32q40B48d52
v48@0:8@"AXAssetController"16@"AXAsset"24B32@"NSError"36B44
v32@0:8@"AXAssetController"16@"AXAssetPolicy"24
v44@0:8@"AXAssetController"16@"AXAssetPolicy"24B32@"NSError"36
v20@0:8B16
v24@0:8d16
v24@0:8@?16
v28@0:8d16B24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSHashTable"
@"NSArray"
@"AXDispatchTimer"
@"NSObject<OS_dispatch_queue>"
@"AXAssetController"
v40@0:8@16@24@?32
@"NSUserDefaults"
d16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8q16
@"NSDictionary"
@"NSURL"
@"MAAsset"
@48@0:8@16@24@32B40B44
@40@0:8@16@24@32
@"NSXPCConnection"
v32@0:8@"NSString"16@"NSNumber"24
v24@0:8@"NSString"16
v24@0:8B16B20
v32@0:8B16B20@24
v32@0:8@16@?24
v32@0:8@16q24
@"NSMutableSet"
@"AXAssetPolicy"
