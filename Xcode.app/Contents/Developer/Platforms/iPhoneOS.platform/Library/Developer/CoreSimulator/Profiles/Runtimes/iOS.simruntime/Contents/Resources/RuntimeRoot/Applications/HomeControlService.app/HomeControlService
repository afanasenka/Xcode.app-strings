HCSNotificationsEnabledReasonForeground
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
dashboardNavigationController
T@"HUDashboardNavigationController",&,N,V_dashboardNavigationController
dashboardPageContainerViewController
T@"HUDashboardPageContainerViewController",&,N,V_dashboardPageContainerViewController
serviceContext
T@"HUHomeControlServiceContext",&,N,V_serviceContext
lockAuthFuture
T@"NAFuture",&,N,V_lockAuthFuture
window
T@"UIWindow",&,N
v16@?0@"NSError"8
Home
JMjIql4w2ryl8XrRuebT
HomePod
Announce
v24@?0@"SBUIRemoteAlertButtonAction"8^B16
v8@?0
v12@?0B8
activationReason
T@"NSString",C,N,V_activationReason
isWakingToLockScreen
TB,R,N,V_isWakingToLockScreen
remoteViewController
T@"HCSRemoteViewController",&,N,V_remoteViewController
viewDidLoad
clearColor
view
setBackgroundColor:
sharedInstance
executionEnvironmentDidEnterBackground
runningState
sharedManager
enableNotificationsForSelectedHomeWithReason:
executionEnvironmentWillEnterForeground
disableNotificationsForSelectedHomeWithReason:
initWithServiceType:homeIdentifier:roomIdentifier:
configureHomeControlServiceWithContext:
serviceType
_layoutDashboardNavigationController
hu_homeControlXPCInterface
hu_homeControlServiceXPCInterface
setLockAuthFuture:
_remoteViewControllerProxy
authorizeIfLocked
lockAuthFuture
quickControlsPresentationDidUpdate:
finishWithResult:
cancel
dashboardPageContainerViewController
willBeginTransition:forCompactModule:
_updateRunningState:
willFinishTransition:forCompactModule:
getTransitionSubviewFramesWithCompletion:
effectWithStyle:
initWithEffect:
bounds
setFrame:
setAutoresizingMask:
addSubview:
initWithLockAuthorizationDelegate:quickControlPresentationDelegate:
setDashboardPageContainerViewController:
initWithRootViewController:
setDashboardNavigationController:
dashboardNavigationController
beginAppearanceTransition:animated:
addChildViewController:
didMoveToParentViewController:
endAppearanceTransition
_remoteViewControllerInterface
_exportedInterface
_isSecureForRemoteViewService
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
authorizeIfLockedForViewController:
configureHomeControlServiceWithHomeUUID:
lockAuthenticationCompleted:
supportedInterfaceOrientations
_canShowWhileLocked
_setupBackgroundViewWithBlurEffectStyle:
serviceContext
setServiceContext:
.cxx_destruct
_dashboardNavigationController
_dashboardPageContainerViewController
_serviceContext
_lockAuthFuture
sharedDispatcher
warmup
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
window
setWindow:
setRemoteViewController:
remoteViewController
setClipsToBounds:
viewWillLayoutSubviews
setCenter:
traitCollection
userInterfaceIdiom
_remoteViewControllerProxyWithErrorHandler:
initWithAlertConfigurationContext:
setRemoteViewControllerProxy:
setAllowsBanners:
setAllowsAlertItems:
setAllowsControlCenter:
setAllowsSiri:
setDismissalAnimationStyle:
setAllowsMenuButtonDismissal:
setDesiredHardwareButtonEvents:
setAllowsAlertStacking:
setStatusBarHidden:withDuration:
setWallpaperStyle:withDuration:
configureWithContext:completion:
events
enumerateObjectsUsingBlock:
visibleBounds
setTransform:
setAlpha:
invalidate
animateWithDuration:delay:options:animations:completion:
reason
setActivationReason:
handleButtonActions:
prepareForActivationWithContext:completion:
activationReason
isWakingToLockScreen
_isWakingToLockScreen
_activationReason
_remoteViewController
HCSRemoteViewController
HULockAuthorizationDelegate
NSObject
HUQuickControlPresentationDelegate
HUHomeControlRemoteService
HCSAppDelegate
UIApplicationDelegate
HCSRemoteAlertServiceViewController
@16@0:8
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"NAFuture"24@0:8@"UIViewController"16
v20@0:8B16
v24@0:8@16
v24@0:8B16B20
v24@0:8@?16
v24@0:8@"NSString"16
v24@0:8@?<v@?@"NSDictionary">16
v16@0:8
v24@0:8q16
@"HUDashboardNavigationController"
@"HUDashboardPageContainerViewController"
@"HUHomeControlServiceContext"
@"NAFuture"
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@16@24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"NSString"
@"HCSRemoteViewController"
%@ Remote View Service Error Handler called with error %@
%@ Remote View Controller Proxy is nil, returning
Home button pressed.
Lock button pressed.
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.coreaudio.CanRecordPastData</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.homekit.allow-setup-payload</key>
<true/>
<key>com.apple.developer.homekit.background-mode</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.mediaremote.send-commands</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>re6Zb+zwFKJNlkQTUeT+/w</string>
</array>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.homekit.allow-secure-access</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.willow</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.willow</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.willow</string>
</array>
<key>com.apple.private.ids.session-private</key>
<array>
<string>com.apple.private.alloy.willow</string>
</array>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCamera</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServicePhotos</string>
<string>kTCCServicePhotosAdd</string>
<string>kTCCServiceWillow</string>
</array>
<key>com.apple.security.application-groups</key>
<array>
<string>com.apple.Home.group</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Caches/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.CompanionLink</string>
<string>com.apple.SharingServices</string>
<string>com.apple.amsaccountsd.multiuser</string>
<string>com.apple.identityservicesd.embedded.auth</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.duetexpertd</string>
<string>com.apple.spotlightui</string>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.Home</string>
<string>com.apple.Home.group</string>
<string>com.apple.Home.wallpaper</string>
<string>com.apple.ImageIO</string>
<string>com.apple.Maps</string>
<string>com.apple.Preferences</string>
<string>com.apple.Sharing</string>
<string>com.apple.applejpeg</string>
<string>com.apple.avfaudio</string>
<string>com.apple.avfoundation.frecents</string>
<string>com.apple.corehaptics</string>
<string>com.apple.homed</string>
<string>com.apple.icloud.fmfd</string>
<string>com.apple.itunescloud</string>
<string>com.apple.itunescloud.internal</string>
<string>com.apple.message</string>
<string>com.apple.mobiletimerd</string>
<string>com.apple.nsurlcache</string>
<string>com.apple.sharingd</string>
<string>com.apple.siri.shortcuts</string>
<string>com.apple.spotlightui</string>
<string>com.apple.springboard</string>
<string>com.apple.sync.NanoHome</string>
<string>com.apple.wifi.ui</string>
<string>group.is.workflow.my.app</string>
</array>
<key>com.apple.security.temporary-exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Caches/</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.CompanionLink</string>
<string>com.apple.SharingServices</string>
<string>com.apple.amsaccountsd.multiuser</string>
<string>com.apple.identityservicesd.embedded.auth</string>
</array>
<key>com.apple.security.temporary-exception.shared-preference.read-write</key>
<array>
<string>com.apple.Home</string>
<string>com.apple.Home.group</string>
<string>com.apple.Home.wallpaper</string>
<string>com.apple.ImageIO</string>
<string>com.apple.Maps</string>
<string>com.apple.Preferences</string>
<string>com.apple.Sharing</string>
<string>com.apple.applejpeg</string>
<string>com.apple.avfaudio</string>
<string>com.apple.avfoundation.frecents</string>
<string>com.apple.corehaptics</string>
<string>com.apple.homed</string>
<string>com.apple.icloud.fmfd</string>
<string>com.apple.itunescloud</string>
<string>com.apple.itunescloud.internal</string>
<string>com.apple.message</string>
<string>com.apple.mobiletimerd</string>
<string>com.apple.nsurlcache</string>
<string>com.apple.sharingd</string>
<string>com.apple.siri.shortcuts</string>
<string>com.apple.spotlightui</string>
<string>com.apple.springboard</string>
<string>com.apple.sync.NanoHome</string>
<string>com.apple.wifi.ui</string>
<string>group.is.workflow.my.app</string>
</array>
<key>com.apple.sharing.Client</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.springboard.lockScreenContentAssertion</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
