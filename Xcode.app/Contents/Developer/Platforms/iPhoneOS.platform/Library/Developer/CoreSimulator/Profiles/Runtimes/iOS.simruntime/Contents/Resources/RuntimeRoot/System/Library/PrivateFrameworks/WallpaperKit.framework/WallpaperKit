v8@?0
com.apple.WallpaperKit.LegacyLoading
DeviceClass
Stills
Live
v16@?0@"NSURL"8
defaultWallpaperBundleLoader
T@"WKLegacyWallpaperBundleLoader",R,N
_loadingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__loadingQueue
_fileManager
T@"NSFileManager",&,N,V__fileManager
_wallpaperBundleLookup
T@"NSDictionary",&,N,V__wallpaperBundleLookup
version
type
identifier
name
family
assets
thumbnailImageFileName
logicalScreenClass
productTypes
appearanceAware
lockAndHome
lock
home
fullSizeImageFileName
videoFileName
stillTimeInVideo
backgroundColor
fullSizeImageFileURL
thumbnailImageFileURL
Dynamic
%@: Wallpaper bundle does not exist at URL '%@'.
Wallpaper.plist
%@: Wallpaper bundle does not contain a metadata file at path '%@'.
%@: Encountered error in loading metadata file (path: '%@') (error: '%@').
%@: Wallpaper bundle thumbnail does not exist at URL '%@'.
wallpaper
+[WKWallpaperBundle shouldLoadWallpaperBundleAtURL:]
XCTestBundlePath
Tq,R,N
T@"NSString",R,C,N
TQ,R,N
backingType
thumbnailImageURL
T@"NSURL",R,C,N
fullsizeImageURL
videoAssetURL
Td,R,N
%@: Attempted to lookup a file based wallpaper for location '%@' and appearance '%@' but found nil
%@: Attempted to lookup a value based wallpaper for location '%@' and appearance '%@' but found nil
%@: (path: '%@') metadata does not contain valid value for keypath: '%@'
%@: Full size image does not exist at path '%@'
%@: Thumbnail image does not exist at path '%@'
%@: Video asset does not exist at path '%@'
@8@?0
@"NAIdentity"8@?0
q16@?0@"WKWallpaperBundle"8
@"<NSObject>"16@?0@"WKWallpaperBundle"8
Could not create temporary wallpaper with  an empty images dictionary.
Could not create temporary wallpaper with dictionaries of different lengths.
+[WKWallpaperBundle createTemporaryWallpaperBundleWithImages:videoAssetURLs:wallpaperOptions:error:]
%@@%@x.jpg
+[WKWallpaperBundle createTemporaryWallpaperBundleWithImages:videoAssetURLs:wallpaperOptions:error:]_block_invoke
UNKNOWN
v16@?0@"NSString"8
Wallpaper bundle only has %ld keys: '[%@]'.
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
na_identity
T@"NAIdentity",R,N
TB,R,N,GisAppearanceAware
distinctWallpapersForLocations
TB,R,N,GhasDistinctWallpapersForLocations
dynamicWallpaperBundle
TB,R,N,GisDynamicWallpaperBundle
identifierString
contentSource
_defaultAppearanceWallpapers
T@"NSMutableDictionary",&,N,V__defaultAppearanceWallpapers
_darkAppearanceWallpapers
T@"NSMutableDictionary",&,N,V__darkAppearanceWallpapers
_bundleURL
T@"NSURL",&,N,V__bundleURL
Tq,R,N,V_version
Tq,R,N,V_identifier
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_family
T@"NSURL",R,C,N,V_thumbnailImageURL
TB,R,N,GisAppearanceAware,V_appearanceAware
TB,R,N,GhasDistinctWallpapersForLocations,V_distinctWallpapersForLocations
TB,R,N,GisDynamicWallpaperBundle,V_dynamicWallpaperBundle
@"NSURL"16@?0@"WKLiveWallpaper"8
d16@?0@"WKLiveWallpaper"8
v16@?0@"NADescriptionBuilder"8
T@"NSURL",C,N,V_thumbnailImageURL
T@"NSURL",C,N,V_fullsizeImageURL
T@"NSURL",C,N,V_videoAssetURL
Td,N,V_stillTimeInVideo
com.apple.WallpaperKit
ignoreProductTypesForWallpaperBundle
ignoreLogicalScreenClassForWallpaperBundle
wk_ignoreProductTypesForWallpaperBundle
TB,N,Swk_setIgnoreProductTypesForWallpaperBundle:
wk_ignoreLogicalScreenClassForWallpaperBundle
TB,N,Swk_setIgnoreLogicalScreenClassForWallpaperBundle:
wk_wallpaperKitUserDefaults
T@"NSUserDefaults",R
Attempted to initialize %@ without using designated initializer.
@"UIColor"16@?0@"WKStripeWallpaper"8
_thumbnailImageURL
wallpaperValue
T@"NSURL",&,N,V__thumbnailImageURL
_backgroundColor
T@"UIColor",&,N,V__backgroundColor
_thumbnailImage
T@"UIImage",&,N,V__thumbnailImage
DYNAMIC_WALLPAPER_COLLECTION_TITLE
wallpaperCollection
Wallpapers
+[_WKSystemWallpaperCollection _createTemporaryWallpaperCollectionWithImage:videoAssetURL:wallpaperOptions:error:]
No URL returned for the wallpaper bundle directory.
DEFAULT_WALLPAPER_COLLECTION_TITLE_KEY
WallpaperCollection.plist
-[_WKSystemWallpaperCollection _loadCollectionContents]
-[_WKSystemWallpaperCollection _loadCollectionContents]_block_invoke
%@: Wallpaper collection does not exist at URL '%@'.
%@: Wallpaper collection does not contain a metadata file at path '%@'.
+[_WKSystemWallpaperCollection shouldLoadWallpaperCollectionAtURL:]
+[_WKSystemWallpaperCollection shouldLoadWallpaperCollectionAtURL:]_block_invoke
%@: No 'Wallpapers' directory found in System wallpaper collection (not legacy) at path '%@'.
%@: Encountered error in loading contents of directory for system wallpape collection (path: '%@') (error: '%@').
B16@?0@"NSURL"8
legacyContent
TB,R,N,GisLegacyContent,V_legacyContent
_identifier
T@"NSUUID",C,N,V__identifier
_bundleForLocalizationResources
T@"NSBundle",&,N,V__bundleForLocalizationResources
displayNameKey
T@"NSString",C,N,V_displayNameKey
wallpaperCollectionURL
T@"NSURL",R,N,V_wallpaperCollectionURL
_hasBeenConfigured
TB,N,V__hasBeenConfigured
_backdropView
T@"_UIBackdropView",&,N,V__backdropView
_activityIndicatorView
T@"UIActivityIndicatorView",&,N,V__activityIndicatorView
_label
T@"UILabel",&,N,V__label
default
%.0fw-%.0fh@%@x~%@
eQd5mlz0BN0amTp/2ccMoA
8olRm6C1xqr7AJGpLRnpSw
ILaGO+KV5JAOq7Q5GEwbWQ
/Library/Wallpaper
/AppleInternal
NSURL * _Nonnull WKWallpapersBaseURL()_block_invoke
UIProceduralWallpaperCapability
You must override %@ in a subclass
q16@?0@"WKAbstractWallpaper"8
@"<NSObject>"16@?0@"WKAbstractWallpaper"8
wk_descriptionBuilder
T@"NADescriptionBuilder",R,N
descriptionBuilderBlock
T@?,R,N
TQ,N,V_type
TQ,N,V_backingType
dark
WKWallpaperLocationCoverSheet
WKWallpaperLocationHomeScreen
WKWallpaperKitErrorDomain
Still
HeritageStripe
%s: Unable to resolve wallpaper type from string: '%@'
WKWallpaperType WKWallpaperTypeFromString(NSString *__strong _Nonnull)
%s: Unknown wallpaper type value: '%@'
NSString * _Nonnull WKStringFromWallpaperType(WKWallpaperType)
File
Value
%s: Invalid backing type value: '%@'
NSString * _Nonnull WKStringFromWallpaperBackingType(WKWallpaperBackingType)
Apple
PhotoLibrary
%s: Unknown Wallpaper Source value: '%@'
WKWallpaperContentSource WKWallpaperContentSourceFromString(NSString *__strong _Nonnull)
%s: Unknown content source value: '%@'
NSString * _Nonnull WKStringFromWallpaperContentSource(WKWallpaperContentSource)
DDDDDDDD-DDDD-DDDD-DDDD-DDDDDDDDDDDD
CCCCCCCC-CCCC-CCCC-CCCC-CCCCCCCCCCCC
/System/Library/PrivateFrameworks/WallpaperKit.framework
WKWallpaperCollectionContentDidChangeNotification
order
isLegacyContent
source
You must override %s in a subclass.
-[WKWallpaperCollection identifier]
-[WKWallpaperCollection displayName]
-[WKWallpaperCollection numberOfWallpapers]
-[WKWallpaperCollection wallpaperBundleAtIndex:]
-[WKWallpaperCollection containsWallpaperRepresentingWithIdentifier:]
-[WKWallpaperCollection wallpaperRepresentingWithIdentifier:]
-[WKWallpaperCollection isDynamicCollection]
_wallpaperBundles
T@"NSMutableArray",&,N,V__wallpaperBundles
_wallpaperLookupTable
T@"NSMapTable",&,N,V__wallpaperLookupTable
T@"NSUUID",R,C,N
displayName
numberOfWallpapers
TQ,R,N,V_source
dynamicCollection
TB,R,N,GisDynamicCollection
wallpaperType
TQ,N,V_wallpaperType
T@"NSString",C,N,V_displayName
previewBundle
T@"WKWallpaperBundle",&,N,V_previewBundle
_wallpaperLookup
T@"NSMutableDictionary",&,N,V__wallpaperLookup
numberOfItems
path
previews
com.apple.SettingsAndCoreApps.BundleImport
Wallpapers~%@.plist
defaultWallpaperBundleImporter
T@"WKWallpaperBundleImporter",R,N
_bundleImportQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__bundleImportQueue
_wallpaperTypesOrdering
T@"NSArray",&,N,V__wallpaperTypesOrdering
_wallpaperTypeToBundleCollection
T@"NSDictionary",&,N,V__wallpaperTypeToBundleCollection
numberOfWallpaperBundleCollections
wallpaperIdentifier
collectionIdentifier
15C2B231-F0DE-471F-978F-8E2090D6ECB1
-[WKDefaultWallpaperManager _loadDefaultWallpaperInformation]
-[WKDefaultWallpaperManager _loadDefaultWallpaperInformation]_block_invoke
400.Solid Black
GSDeviceName
DefaultWallpapers~%@.plist
ProductType
DeviceColor
DeviceEnclosureColor
defaultWallpaperManager
T@"WKDefaultWallpaperManager",R,N
_defaultWallpaperLookup
T@"NSDictionary",&,N,V__defaultWallpaperLookup
_collectionsManager
T@"WKWallpaperCollectionsManager",&,N,V__collectionsManager
_defaultWallpaperCollection
T@"WKWallpaperCollection",&,N,V__defaultWallpaperCollection
_defaultWallpaperBundle
T@"WKWallpaperBundle",&,N,V__defaultWallpaperBundle
-[WKWallpaperCollectionsManager _loadCollections]
-[WKWallpaperCollectionsManager _loadCollections]_block_invoke
-[WKWallpaperCollectionsManager _loadSystemWallpaperCollections]
-[WKWallpaperCollectionsManager _loadSystemWallpaperCollections]_block_invoke
Collections
Collections.plist
wallpapercollection
%@: `Collections.plist` (path: '%@') does not contain valid value for keypath: '%@'
defaultWallpaperCollectionsManager
T@"WKWallpaperCollectionsManager",R,N
_notificationCenter
T@"NSNotificationCenter",&,N,V__notificationCenter
_wallpaperCollections
T@"NSMutableArray",&,N,V__wallpaperCollections
_wallpaperCollectionLookupTable
T@"NSMapTable",&,N,V__wallpaperCollectionLookupTable
numberOfWallpaperCollections
@"NSURL"16@?0@"WKStillWallpaper"8
d16@?0@"WKStillWallpaper"8
renderedImageURL
T@"NSURL",C,N,V_renderedImageURL
com.apple.WallpaperKit.StripesImage
v16@?0@"UIGraphicsImageRendererContext"8
v16@?0@"NAPromise"8
v24@?0@"UIImage"8@"NSError"16
defaultImageGenerator
T@"WKHeritageStripeImageGenerator",R,N
_wallpaperRequestQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__wallpaperRequestQueue
_wallpaperCache
T@"NSCache",&,N,V__wallpaperCache
WKLogForCategory
/Library/Caches/com.apple.xbs/Sources/WallpaperSettings_Sim/WallpaperSettings-1031/WallpaperKit/Utility/WKLogging.m
category < WKLoggingCategoryCount
Base
Import
DefaultWallpaper
Processing
PerformanceSignposts
@"NSDictionary"16@?0@"WKDynamicWallpaper"8
_dynamicDictionary
T@"NSDictionary",&,N,V__dynamicDictionary
%{public}@: Could not find legacy wallpaper directory at path '%{public}@'
%{public}@: Wallpaper bundle does not exist at URL '%{public}@', returning nil.
%{public}@: Attempted to initialize with a `nil` Dynamic wallpaper dictionary, returning nil.
%{public}@: Wallpaper bundle does not exist at URL '%{public}@'
%{public}@: Wallpaper bundle metadata file does not exist at URL '%{public}@'
%{public}@: Encountered error in loading metadata file '%{public}@', error '%{public}@'
%{public}@: Wallpaper bundle thumbnail does not exist at URL '%{public}@'
%{public}@: Could not process wallpaper for location '%{public}@' and appearance '%{public}@'.
%{public}s: URL does not have valid path extension ('.wallpaper') '%{public}@.
%{public}s: No wallpaper bundle found at URL '%{public}@.
%{public}s: No 'Wallpaper.plist' file found at URL '%{public}@.
%{public}s: Wallpaper is in '%{public}@', should load.
%{public}s: Could not decode 'Wallpaper.plist' at URL '%{public}@', error '%{public}@'.
%{public}s: No entry found for '%{public}@' key in 'Wallpaper.plist' at URL '%{public}@'.
%{public}s: Wallpaper logical screen class is '%{public}@'.
%{public}s: Wallpaper Bundle logical screen class '%{public}@' does not match the current device logical screen class '%{public}@'.
%{public}s: Device is configured to load wallpapers for all product types.
%{public}s: Wallpaper bundle has '%{public}@' entry with values '%{public}@', checking if it contains '%{public}@'.
%{public}s: Wallpaper bundle at URL '%{public}@' should be loaded
%{public}s: Failed to create wallpaper bundle directory, error '%{public}@'.
%{public}s: Image: %{public}@.
%{public}s: Image data size: %{public}@.
%{public}s: Failed to write out image for appearance '%{public}@' to url '%{public}@'. Error '%{public}@'.
%{public}s: Failed to copy video asset for appearance '%{public}@' from '%{public}@' to url '%{public}@'. Error '%{public}@
%{public}s: Falling back as a still walllpaper.
%{public}s: Failed to retrieve the source video asset file name from `videoAssetURL` '%{public}@' for wallpaper appearance '%{public}@'.
%{public}@: Could not process wallpaper assets for apperance '%{public}@'.
%{public}@: Could not serialized wallpaper metadata '%{public}@'.  Error: '%{public}@'.
%{public}@: Could not write out wallpaper metadata to path '%{public}@'.  Error: '%{public}@'.
%{public}s: Failed to create directory for wallpaper collection. Error '%{public}@'.
%{public}s: Created temporary wallpaper bundle at path '%{public}@'.
%{public}s: Copying wallpaper bundle at path '%{public}@' to path '%{public}@'.
%{public}s: Failed to copy wallpaper bundle from '%{public}@' to '%{public}@'. Error '%{public}@'.
%{public}s: Failed to serialize wallpaper collection metadata '%{public}@' with error '%{public}@'.
%{public}s: Failed to write out wallpaper collection metadata to path '%{public}@' with error '%{public}@'.
%{public}s: Created custom collection at file path '%{public}@'.
%{public}@: %{public}s start.
%{public}@: %{public}s complete.
%{public}@: No wallpaper collection found at URL '%{public}@.
%{public}@: Wallpaper Collection metadata file does not exist at URL '%{public}@'
%{public}@: Encountered error in loading Wallpaper Collection metadata file '%{public}@', error '%{public}@'
%{public}s: start.
%{public}s: complete.
%{public}s: No wallpaper collection found at path '%{public}@'.
%{public}s: Wallpaper Collection metadata file does not exist at URL '%{public}@'
%{public}@: No 'Wallpapers' directory found in wallpaper collection at path '%{public}@'.
%{public}@: Encountered error in retrieving contents of collection at path '%{public}@', error '%{public}@'
%{public}s: cannot locate '%{public}@' in runtime
%{public}@: No wallpaper configuration file found at URL '%{public}@'.
%{public}@: Unable to load content of wallpaper configuration file at URL '%{public}@', error '%{public}@'.
%{public}@: Wallpaper configuration file at URL '%{public}@' has no entries.
%{public}@: Loading a Default Wallpaper.
%{public}@: Default wallpaper lookup file does not exist at path '%{public}@'
%{public}@: Unable to load default wallpaper lookup file (path: '%{public}@') with error: '%{public}@'
%{public}s: Start.
%{public}s: Complete.
%{public}s: Looking for default wallpaper based on deviceProductType '%{public}@'; logicalScreenClass: '%{public}@'.
%{public}s: Entry found for deviceProductType '%{public}@'.
%{public}s: Looking for device color and enclosure color specific entry for deviceProductType '%{public}@'; deviceColor '%{public}@'; deviceEnclosureColor '%{public}@'.
%{public}s: Default wallpaper entry found for deviceProductType '%{public}@', deviceColor '%{public}@', deviceEnclosureColor '%{public}@'.
%{public}s: Could not find default wallpaper for device color or enclosure, falling back to device default wallpaper for deviceProductType '%{public}@'.
%{public}s: Device specific default wallpaper entry found for deviceProductType '%{public}@'.
%{public}s: Found wallpaper on-disk for deviceProductType '%{public}@', collectionIdentifier '%{public}@', wallpaperIdentifier '%{public}@'.
%{public}s: No device specific default wallpaper found for deviceProductType '%{public}@'; falling back to system default entry (wallpaperIdentifier: '%{public}@'; collectionIdentifier: '%{public}@').
%{public}s: No default wallpaper found from default wallpaper lookup table.  Falling back to static system wallpaper.
%{public}s: No compatible wallpaper found on disk (wallpaperIdentifier: '%{public}@'; collectionIdentifier: '%{public}@'.); falling back to synthesized wallpaper.
%{public}@: Failed to create synthesized wallpaper!
%{public}@: Failed to get default wallpaper!
%{public}s: Resolved default wallpaper (wallpaperIdentifier: '%{public}@'; path '%{public}@'; collectionIdentifier: '%{public}@'; path: '%{public}@').
%{public}@: Resolving default wallpaper for device name '%{public}@'
%{public}@: Resolved to default wallpaper look up file at path '%{public}@'
%{public}@: Resolved to logical screen class '%{public}@'
%{public}@: Unable to load contents of directory at path '%{public}@'. Error '%{public}@'.
%{public}s: Loaded wallpaper collection (identifier: '%{public}@', displayName: '%{public}@').
%{public}s: Adding wallpaper collection (identifier: '%{public}@', displayName: '%{public}@').
%{public}s: Skipping empty wallpaper colleciton (identifier: '%{public}@', displayName: '%{public}@').
333333
?UUUUUU
??r
?
?^^^^^^
WKLegacyWallpaperBundleLoader
WKFileBasedWallpaper
WKWallpaper
NSCopying
WKValueBasedWallpaper
WKWallpaperBundle
NAIdentifiable
NAHashable
NSObject
NAEquatable
WKWallpaperRepresenting
WKHashable
WKLiveWallpaper
WKAdditions
WKStripeWallpaper
_WKSystemWallpaperCollection
WKIndicatorView
WKAbstractWallpaper
WKDescribable
WKWallpaperCollection
WKWallpaperBundleCollection
WKWallpaperBundleImporter
WKDefaultWallpaperManager
WKWallpaperCollectionsManager
WKStillWallpaper
WKHeritageStripeImageGenerator
WKDynamicWallpaper
init
defaultManager
_loadingQueue
_loadAllValidWallpaperBundlesFromLegacyLocation
array
URLByAppendingPathComponent:
na_safeAddObject:
dictionary
_fileManager
path
fileExistsAtPath:isDirectory:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
countByEnumeratingWithState:objects:count:
shouldLoadWallpaperBundleAtURL:
initWithURL:
identifier
numberWithInteger:
setObject:forKeyedSubscript:
legacyWallpaperDirectories
objectForKeyedSubscript:
indexOfObject:
initWithDynamicDictionary:identifier:
set_wallpaperBundleLookup:
_wallpaperBundleLookup
defaultWallpaperBundleLoader
wallpaperBundleForIdentifier:
set_loadingQueue:
set_fileManager:
.cxx_destruct
__loadingQueue
__fileManager
__wallpaperBundleLookup
copy
dictionaryWithCapacity:
_loadBundle
_loadDynamicWallpaper:
initWithIdentifier:dictionary:
_defaultAppearanceWallpapers
_bundleURL
stringWithFormat:
exceptionWithName:reason:userInfo:
raise
dictionaryWithContentsOfURL:error:
_raiseInvalidMetadataExceptionForMetadataKeypath:
unsignedIntegerValue
boolValue
_processAssetDictionary:forLocation:
wallpaperBackingTypeForLocation:
fileExistsAtPath:
isAppearanceAware
arrayWithObjects:count:
componentsJoinedByString:
_stillWallpaperWithMetadataDictionary:wallpaperAppearance:
_liveWallpaperWithMetadataDictionary:wallpaperAppearance:
_stripeWallpaperWithMetadataDictionary:wallpaperAppearance:
isEqualToString:
_darkAppearanceWallpapers
pathExtension
lowercaseString
containsString:
wk_wallpaperKitUserDefaults
wk_ignoreLogicalScreenClassForWallpaperBundle
processInfo
environment
wk_ignoreProductTypesForWallpaperBundle
count
currentDevice
sf_productType
setWithArray:
containsObject:
backingType
fileBasedWallpaperForLocation:andAppearance:
copyWithZone:
name
type
thumbnailImageURL
fullsizeImageURL
videoAssetURL
stillTimeInVideo
valueBasedWallpaperForLocation:andAppearance:
thumbnailImage
wallpaperValue
stringValue
integerValue
dictionaryWithObjects:forKeys:count:
_processCommonFileBackedWallpaperMetadataWithDictionary:wallpaperAppearance:
initWithIdentifier:name:thumbnailImageURL:fullsizeImageURL:renderedImageURL:
doubleValue
initWithIdentifier:name:thumbnailImageURL:fullsizeImageURL:videoAssetURL:stillTimeInVideo:
wk_colorWithHexString:
initWithIdentifier:name:backgroundColor:
builder
version
appendIntegerCharacteristic:
appendCharacteristic:
family
allValues
numberWithBool:
hasDistinctWallpapersForLocations
isDynamicWallpaperBundle
build
na_identity
hashOfObject:
isObject:equalToObject:
errorWithDomain:code:userInfo:
fileURLWithPath:
UUID
UUIDString
stringByAppendingPathExtension:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
mainScreen
nativeScale
numberWithDouble:
length
numberWithUnsignedInteger:
writeToURL:options:error:
componentsSeparatedByString:
firstObject
lastObject
lastPathComponent
copyItemAtURL:toURL:error:
na_safeSetObject:forKey:
allKeys
dataWithPropertyList:format:options:error:
createTemporaryWallpaperBundleWithImages:videoAssetURLs:wallpaperOptions:error:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
fileBasedWallpaperForLocation:
valueBasedWallpaperForLocation:
identifierString
contentSource
set_defaultAppearanceWallpapers:
set_darkAppearanceWallpapers:
set_bundleURL:
_appearanceAware
_distinctWallpapersForLocations
_dynamicWallpaperBundle
_thumbnailImageURL
_version
_identifier
_name
_family
__defaultAppearanceWallpapers
__darkAppearanceWallpapers
__bundleURL
initWithIdentifier:name:
setThumbnailImageURL:
setFullsizeImageURL:
setVideoAssetURL:
setStillTimeInVideo:
builderWithIdentity:
appendDoubleCharacteristic:
descriptionBuilderBlock
appendString:withName:
appendTimeInterval:withName:decomposeUnits:
_fullsizeImageURL
_videoAssetURL
_stillTimeInVideo
initWithSuiteName:
sf_isInternalInstall
setBool:forKey:
boolForKey:
wk_setIgnoreProductTypesForWallpaperBundle:
wk_setIgnoreLogicalScreenClassForWallpaperBundle:
_thumbnailImage
defaultImageGenerator
thumbnailImageWithBackgroundColor:appearanceAware:
set_thumbnailImage:
_backgroundColor
appendObject:withName:
set_thumbnailImageURL:
set_backgroundColor:
__thumbnailImageURL
__backgroundColor
__thumbnailImage
hasPrefix:
substringFromIndex:
substringWithRange:
stringByAppendingString:
scannerWithString:
scanHexInt:
colorWithRed:green:blue:alpha:
initWithSource:
wallpaperCollectionURL
bundleWithURL:
_loadCollectionContents
initWithUUIDString:
set_identifier:
bundleForClass:
set_bundleForLocalizationResources:
setDisplayNameKey:
objectAtIndexedSubscript:
_wallpaperBundles
_wallpaperLookupTable
setObject:forKey:
fileURLWithPath:isDirectory:
removeItemAtURL:error:
isLegacyContent
_loadSystemContentForCollectionWithMetadata:isLegacyContent:
_bundleForLocalizationResources
displayNameKey
localizedStringForKey:value:table:
objectForKey:
na_filter:
na_each:
dynamicWallpaperCollection
_createTemporaryWallpaperCollectionWithImage:videoAssetURL:wallpaperOptions:error:
shouldLoadWallpaperCollectionAtURL:
displayName
isDynamicCollection
numberOfWallpapers
wallpaperBundleAtIndex:
containsWallpaperRepresentingWithIdentifier:
wallpaperRepresentingWithIdentifier:
_legacyContent
_wallpaperCollectionURL
_displayNameKey
__identifier
__bundleForLocalizationResources
initWithFrame:
_hasBeenConfigured
setTranslatesAutoresizingMaskIntoConstraints:
traitCollection
userInterfaceStyle
initWithPrivateStyle:
_backdropView
_setContinuousCornerRadius:
addSubview:
clearColor
_label
setBackgroundColor:
secondaryLabelColor
setTextColor:
boldSystemFontOfSize:
setFont:
setNumberOfLines:
initWithActivityIndicatorStyle:
_activityIndicatorView
trailingAnchor
constraintEqualToAnchor:
leadingAnchor
topAnchor
bottomAnchor
constraintEqualToAnchor:constant:
centerYAnchor
activateConstraints:
setOpaque:
layer
setAllowsGroupOpacity:
set_hasBeenConfigured:
isMainThread
_configureViewIfNeeded
setText:
superview
centerXAnchor
constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:
bringSubviewToFront:
startAnimating
showViewWithMessage:inHostingView:
stopAnimating
removeFromSuperview
hideViewAndRemoveFromHostingView
set_backdropView:
set_activityIndicatorView:
set_label:
__hasBeenConfigured
__backdropView
__activityIndicatorView
__label
fixedCoordinateSpace
bounds
_referenceBounds
sf_deviceSupportsDisplayZoom
scale
sf_isiPad
floatValue
stringByAppendingPathComponent:
allocWithZone:
setType:
setBackingType:
builderWithObject:
activeMultilinePrefix
appendBodySectionWithName:multilinePrefix:block:
wk_descriptionBuilder
appendUnsignedInteger:withName:
_type
_backingType
bestWallpaperSizeForParallaxFactor:
bundleWithPath:
strongToWeakObjectsMapTable
source
set_wallpaperBundles:
set_wallpaperLookupTable:
_source
__wallpaperBundles
__wallpaperLookupTable
_wallpaperLookup
addObject:
initWithWallpaperType:previewBundle:
wallpaperBundleWithIdentifier:
numberOfItems
appendWallpaperBundle:
wallpaperType
setWallpaperType:
setDisplayName:
previewBundle
setPreviewBundle:
set_wallpaperLookup:
_wallpaperType
_displayName
_previewBundle
__wallpaperLookup
_bundleImportQueue
_loadWallpapersFromDisk
_wallpaperTypesOrdering
_wallpaperTypeToBundleCollection
wallpapersConfigurationFileURL
arrayWithContentsOfURL:error:
defaultWallpaperBundleImporter
numberOfWallpaperBundleCollections
wallpaperTypeAtIndex:
wallpaperBundleCollectionForWallpaperType:
set_bundleImportQueue:
set_wallpaperTypesOrdering:
set_wallpaperTypeToBundleCollection:
__bundleImportQueue
__wallpaperTypesOrdering
__wallpaperTypeToBundleCollection
_loadDefaultWallpaperFile
_loadDefaultWallpaperInformation
defaultWallpaperCollectionsManager
initWithCollectionsManager:
defaultWallpaperLookupURL
set_defaultWallpaperLookup:
deviceProductType
_defaultWallpaperLookup
deviceColor
deviceEnclosureColor
_collectionsManager
wallpaperCollectionWithIdentifier:
blackColor
wk_imageFromColor:
setWallpaperMode:
setSupportsCropping:
setName:
_defaultWallpaperBundle
_defaultWallpaperCollection
defaultWallpaperManager
defaultWallpaperBundle
defaultWallpaperCollection
deviceLogicalScreenClass
set_collectionsManager:
set_defaultWallpaperCollection:
set_defaultWallpaperBundle:
__defaultWallpaperLookup
__collectionsManager
__defaultWallpaperCollection
__defaultWallpaperBundle
defaultCenter
weakToWeakObjectsMapTable
_loadCollections
_loadSystemWallpaperCollections
dictionaryWithContentsOfURL:
hasSuffix:
_wallpaperCollections
_wallpaperCollectionLookupTable
numberOfWallpaperCollections
wallpaperCollectionAtIndex:
_notificationCenter
set_notificationCenter:
set_wallpaperCollections:
set_wallpaperCollectionLookupTable:
__notificationCenter
__wallpaperCollections
__wallpaperCollectionLookupTable
renderedImageURL
setRenderedImageURL:
renderedVideoAssetURL
_renderedImageURL
_wallpaperCache
initWithSize:
setFill
fillRect:
wk_parallelogramInRect:stripeIndex:firstStripeBaseY:
CGContext
CGPath
CGColor
colorWithAlphaComponent:
imageWithActions:
finishWithResult:
_wallpaperRequestQueue
schedulerWithDispatchQueue:
lazyFutureWithBlock:scheduler:
addCompletionBlock:
wk_parallelogramInRect:stripeIndex:firstStripeBaseY:sizeScaleFactor:
requestWallpaperImageWithBackgroundColor:completion:
set_wallpaperRequestQueue:
set_wallpaperCache:
__wallpaperRequestQueue
__wallpaperCache
currentTraitCollection
traitCollectionWithUserInterfaceStyle:
traitCollectionWithTraitsFromCollections:
configuration
configurationWithTraitCollection:
imageWithConfiguration:
performAsCurrentTraitCollection:
imageAsset
registerImage:withTraitCollection:
wk_imageWithLightAppearanceImage:darkAppearanceImage:
_dynamicDictionary
set_dynamicDictionary:
__dynamicDictionary
moveToPoint:
addLineToPoint:
closePath
@16@0:8
v16@0:8
@24@0:8q16
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSFileManager"
@"NSDictionary"
@24@0:8^{_NSZone=}16
q16@0:8
Q16@0:8
@"NSString"16@0:8
d16@0:8
@"NSURL"16@0:8
@"UIImage"16@0:8
B24@0:8@16
@48@0:8@16@24@32^@40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NAIdentity"16@0:8
Q24@0:8@16
@24@0:8@16
@32@0:8@16@24
Q24@0:8@"NSString"16
@"<WKFileBasedWallpaper>"24@0:8@"NSString"16
@"<WKFileBasedWallpaper>"32@0:8@"NSString"16@"NSString"24
@"<WKValueBasedWallpaper>"24@0:8@"NSString"16
@"<WKValueBasedWallpaper>"32@0:8@"NSString"16@"NSString"24
@32@0:8@16q24
v32@0:8@16@24
@"NSURL"
@"NSString"
@"NSMutableDictionary"
@64@0:8q16@24@32@40@48d56
@?16@0:8
v24@0:8d16
v20@0:8B16
@32@0:8q16@24
@40@0:8q16@24@32
@"UIColor"
@"UIImage"
v28@0:8@16B24
@"NSUUID"
@"NSBundle"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"_UIBackdropView"
@"UIActivityIndicatorView"
@"UILabel"
@"NADescriptionBuilder"16@0:8
@?<v@?@"NADescriptionBuilder">16@0:8
v24@0:8Q16
@24@0:8Q16
@"NSMutableArray"
@"NSMapTable"
@32@0:8Q16@24
@"WKWallpaperBundle"
Q24@0:8q16
@"NSArray"
@"WKWallpaperCollectionsManager"
@"WKWallpaperCollection"
@"NSNotificationCenter"
@56@0:8q16@24@32@40@48
v32@0:8@16@?24
@28@0:8@16B24
@"NSCache"
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56d64
