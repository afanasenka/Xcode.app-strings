@(#)PROGRAM:ContainerMigrator  PROJECT:MobileContainerManager-318.40.13
fffff
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.MobileContainerManager.dataMigration</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
</dict>
</plist>
MCMUserIdentitySharedCache
MobileContainerManagerAdditions
MCMMigrationStatus
MCMUserIdentityCache
NSObject
MCMRedaction
MCMUserIdentity
NSCopying
MCMManagedPathRegistry
MCMManagedUserPathRegistry
MCMGlobalConfiguration
MCMContainerClassPathCache
MCMUserIdentityCacheObserver
MCMFileManager
MCMFSNode
MCMPOSIXUser
MCMLazyDescription
MCMManagedPath
MCMLibraryRepair
MCMLibraryRepairForUser
MCMContainerClassPath
MCMContainerPathHasComponents
MCMContainerClassDeletedPath
MCMContainerClassBackupPath
MCMContainerClassTransientPath
MCMContainerClassStagingPath
MCMContainerDataMigrator
sharedInstance
MCM_dictionaryWithContentsOfURL:options:fsNode:error:
errorWithDomain:code:userInfo:
dataWithPropertyList:format:options:error:
path
MCM_writeToURL:withOptions:error:
MCM_dictionaryWithContentsOfURL:options:error:
propertyListWithData:options:format:error:
_migrationInfo
_migrationFileURL
initForSystemMigration
initForMobileUserMigration
init
_readStatusFromMarkerFileWithName:andSetAsType:libraryPath:
_removeMarkerFileWithName:libraryPath:
_migrateFromManyMarkerFilesToOneWithLibraryPath:
_readMigrationStatusFromDisk
_writeMigrationStatusToDisk
hasMigrationOccurredForType:
setMigrationCompleteForType:
writeCurrentBuildInfoToDisk
isBuildUpgrade
_iso8601DateFormatter
migrationInfo
setMigrationInfo:
migrationFileURL
setMigrationFileURL:
.cxx_destruct
setFormatOptions:
objectForKeyedSubscript:
currentBuildVersion
setObject:forKeyedSubscript:
dictionaryWithObjects:forKeys:count:
stringFromDate:
date
code
isEqualToString:
domain
mutableCopy
URLByAppendingPathComponent:isDirectory:
_lock
_flushQueue
_registered
_listener
_cacheInvalid
_lock_bundleToDataSeparatedIdentitiesMap
_lock_personaUniqueStringToUserIdentityMap
_lock_personaIDToUserIdentityMap
_lock_userIdentityForPersonalPersona
_lock_userIdentityForUnspecificPersona
_lock_managedPathRegistryForUserIdentity
_lock_libraryRepairForUserIdentity
_previousUserIdentities
_observers
userIdentityForPersonaUniqueString:POSIXUser:
userIdentityForPersonalPersonaWithPOSIXUser:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
userIdentitiesForBundleIdentifier:
isBundleIdentifier:associatedWithUserIdentity:
userIdentityForCurrentUserWithPersonaUniqueString:
userIdentityForClient:
userIdentityForPersonalPersona
unspecificUserIdentity
userIdentityWithPersonaID:
flush
forEachAccessibleUserIdentitySynchronouslyExecuteBlock:
defaultUserIdentity
globalBundleUserIdentity
globalSystemUserIdentity
personaUniqueStringForCurrentContext
userIdentityForCurrentContext
userIdentityForLegacyMobileUser
unregister
flushAndRepopulateWithUserIdentities:
addObserver:
removeObserver:
managedUserPathRegistryForUserIdentity:
libraryRepairForUserIdentity:
dealloc
lock_bundleToDataSeparatedIdentitiesMap
lock_personaUniqueStringToUserIdentityMap
lock_personaIDToUserIdentityMap
lock_userIdentityForPersonalPersona
lock_userIdentityForUnspecificPersona
_lock_userIdentitiesForBundleIdentifier:
_lock_isBundleIdentifier:associatedWithUserIdentity:
_lock_userIdentityForCurrentUserWithPersonaUniqueString:
_lock_resync
_lock_flush
_lock_flushAndRepopulateWithUserIdentities:
_registerForPersonaListUpdate
_notifyObserversOfChangesWithUserIdentities:
personaListDidUpdate
lock_managedPathRegistryForUserIdentity
lock_libraryRepairForUserIdentity
previousUserIdentities
setPreviousUserIdentities:
cacheInvalid
setCacheInvalid:
observers
countByEnumeratingWithState:objects:count:
minusSet:
allObjects
copy
personasAreSupported
numberWithUnsignedInt:
dictionary
containsObject:
setWithObject:
removeObject:
addObject:
count
setWithArray:
allValues
stringWithUTF8String:
weakObjectsHashTable
stringByRedactingHomeContent:
stringByAppendingString:
replaceOccurrencesOfString:withString:options:range:
_homeDirectoryURL
_kernelPersonaID
_personaType
_personaUniqueString
_identifier
_posixUser
copyWithZone:
initWithPOSIXUser:homeDirectoryURL:personaUniqueString:personaType:kernelPersonaID:
initWithPlist:cache:error:
initWithVersion1PlistDictionary:cache:error:
initWithVersion2PlistDictionary:cache:error:
plist
isHomeDirectoryInCommonSandbox
isDataSeparated
isNoSpecificPersona
homeDirectoryExists
userIdentityWithPOSIXUser:
shortDescription
_descriptionForPersonaType:
isEqualToUserIdentity:
personaUniqueString
kernelPersonaID
identifier
posixUser
homeDirectoryURL
personaType
allocWithZone:
stringWithFormat:
unsignedIntegerValue
_identifierForPOSIXUID:personaUniqueString:personaType:
userIdentityWithPlist:cache:error:
isUserIdentityRequiredForContainerClass:
_paths
_daemonUser
_home
_library
_containermanagerLibrary
_containermanagerPendingUpdates
_containermanagerReplaceOperations
_caches
_containermanagerCaches
_containermanagerDeathrow
_logs
_containermanagerLogs
initWithDaemonUser:
orderedPathsFromPaths:
managedPathForURL:
_addPaths:
_initPathPropertiesWithDaemonUser:
paths
daemonUser
home
library
containermanagerLibrary
containermanagerPendingUpdates
containermanagerReplaceOperations
caches
containermanagerCaches
containermanagerDeathrow
logs
containermanagerLogs
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
setByAddingObjectsFromArray:
objectAtIndexedSubscript:
array
arrayWithCapacity:
setWithObjects:
_userIdentity
_userHome
_userLibrary
_containermanagerUserLibrary
initWithUserIdentity:daemonUser:
_initPathPropertiesWithUserHomeDirectoryURL:clientUser:
userIdentity
userHome
userLibrary
containermanagerUserLibrary
arrayWithObjects:count:
_homeDirectory
_cachesDirectory
_canRelay
_isInternalImage
_runmode
_bundleContainerMode
_systemContainerMode
_sharedContainersDirectory
_classPathCache
_defaultUser
_currentUser
_bundleContainerOwner
_systemContainerOwner
_managedPathRegistry
_libraryRepair
initWithRunMode:bundleContainerMode:bundleContainerOwner:systemContainerMode:systemContainerOwner:defaultUser:
classPathCache
sharedContainersDirectory
appUserDataItemNames
excludedFromAppUserData
isInternalImage
isGlobalSystemContainerWithContainerClass:
isUserSystemContainerWithContainerClass:
isUnsupportedSystemContainerWithContainerClass:
isGlobalBundleContainerWithContainerClass:
isUserBundleContainerWithContainerClass:
isUnsupportedBundleContainerWithContainerClass:
isGlobalContainerClass:
canLocallyHandleContainerClass:
canRelay
runmode
defaultUser
currentUser
bundleContainerMode
systemContainerMode
bundleContainerOwner
systemContainerOwner
managedPathRegistry
libraryRepair
setIsInternalImage:
_lookup
_lookupLock
userIdentityCache:didInvalidateUserIdentity:
userIdentityCache:didAddUserIdentity:
containerClassPathForContainerIdentity:typeClass:
containerClassPathForUserIdentity:containerClass:typeClass:
referenceForPOSIXUser:
containerClassPathWithURL:reference:
_lock_containerClassPathForUserIdentity:containerClass:typeClass:
dictionaryWithCapacity:
numberWithUnsignedLongLong:
null
hasPrefix:
_mkstemp_dprotected_np
removeItemAtURL:error:
createDirectoryAtURL:withIntermediateDirectories:mode:owner:class:error:
createDirectoryAtURL:withIntermediateDirectories:mode:owner:class:fsNode:error:
createDirectoryAtURL:withIntermediateDirectories:mode:owner:error:
createDirectoryAtURL:withIntermediateDirectories:mode:class:error:
createDirectoryAtURL:withIntermediateDirectories:mode:error:
symbolicallyLinkURL:toSymlinkTarget:error:
targetOfSymbolicLinkAtURL:error:
_copyItemAtURL:toURL:failIfSrcMissing:error:
_moveItemAtURL:toURL:failIfSrcMissing:error:
copyItemIfExistsAtURL:toURL:error:
moveItemIfExistsAtURL:toURL:error:
copyItemAtURL:toURL:error:
moveItemAtURL:toURL:error:
createTemporaryDirectoryInDirectoryURL:withNamePrefix:error:
createTemporaryDirectoryInDirectoryURL:error:
_traverseDirectory:error:withBlock:
_CreateSystemUserACEInACL:withPermissions:andFlags:withError:
_CopySystemContainerACLWithNumACEs:isDir:inheritOnly:withError:
_CopyTopLevelSystemContainerACLWithError:
setTopLevelSystemContainerACLAtURL:error:
standardizeACLsAtURL:isSystemContainer:error:
standardizeACLsForSystemContainerAtURL:error:
standardizeAllSystemContainerACLsAtURL:error:
standardizeOwnershipAtURL:toPOSIXUser:error:
urlsForItemsInDirectoryAtURL:error:
itemExistsAtURL:
itemAtURL:exists:error:
itemExistsAtURL:isDirectory:
itemAtURL:exists:isDirectory:error:
itemAtURL:followSymlinks:exists:isDirectory:error:
itemAtURL:followSymlinks:exists:isDirectory:fsNode:error:
itemDoesNotExistAtURL:
dataProtectionClassOfItemAtURL:class:error:
setDataProtectionClassOfItemAtURL:toClass:ifPredicate:error:
printDirectoryStructureAtURL:
fastDiskUsageForURL:
diskUsageForURL:
_realPathWhatExistsInPath:
_realPathForURL:allowNonExistentPathComponents:
_validateSymlink:withStartingDepth:andEndingDepth:
realPathForURL:ifChildOfURL:
realPathForURL:isDirectory:error:
readDataFromURL:options:error:
readDataFromURL:options:fsNode:error:
writeData:toURL:options:mode:error:
compareVolumeForURL:versusURL:isSameVolume:error:
checkFileSystemAtURL:isCaseSensitive:canAtomicSwap:error:
checkFileSystemAtURL:supportsPerFileKeys:error:
_enumeratePOSIX1eACLEntriesAtURL:error:usingBlock:
stripACLFromURL:error:
dataWritingOptionsForFileAtURL:
fixUserPermissionsAtURL:limitToTopLevelURL:error:
removeExclusionFromBackupFromURL:error:
copyDescriptionOfURL:
fsNodeOfURL:followSymlinks:error:
fileSystemRepresentation
stringByAppendingFormat:
string
defaultManager
URLByDeletingLastPathComponent
hasDirectoryPath
bytes
dataWithBytesNoCopy:length:
stringByAppendingPathComponent:
stringByDeletingLastPathComponent
pathComponents
fileURLWithPath:
substringFromIndex:
pathWithComponents:
fileURLWithPathComponents:
subarrayWithRange:
UTF8String
_device
_inode
initWithINode:device:
initWithStat:
isEqualToFSNode:
inode
device
initWithString:
appendString:
reason
callStackSymbols
componentsJoinedByString:
currentThread
_root
_roleUser
_UID
_primaryGID
_unvalidatedHomeDirectoryURL
_name
fullDescription
isEqualToPOSIXUser:
initWithUID:primaryGID:homeDirectoryURL:unvalidatedHomeDirectoryURL:name:roleUser:
primaryGID
unvalidatedHomeDirectoryURL
name
isRoot
isRoleUser
currentPOSIXUser
posixUserWithName:
posixUserWithUID:
nobody
root
_posixUserWithPasswdFillBlock:
_posixUserWithPasswdPtr:
_getCachedUID:flush:onCacheMiss:
_isRoleUserWithUID:homeDirectoryURL:
removeAllObjects
redactedDescription
initWithBytes:length:encoding:
stringWithFileSystemRepresentation:length:
stringWithFileSystemRepresentation:
containsDotDotPathComponents
_block
_value
initWithDescriber:
length
characterAtIndex:
getCharacters:range:
_mode
_dpClass
_url
_flags
_ACLConfig
_owner
_parent
_fsNode
flags
parent
mode
dpClass
ACLConfig
owner
fsNode
setFsNode:
initWithURL:flags:ACLConfig:mode:dpClass:owner:parent:
managedPathByAppendingPathComponent:flags:ACLConfig:mode:dpClass:owner:
isEqualToManagedPath:
_pathsCreated
_registry
initWithManagedPathRegistry:
fixPermissionsWithManagedPath:uid:gid:error:
performGenericRepairWithError:
fixAndRetryIfPermissionsErrorWithURL:error:duringBlock:
createPathsIfNecessaryWithError:
managedPathsHaveChanged
_managedPathsForGenericRepair
_canRepairLocally
_removeACLFilesec
_denyDeleteACLFilesecWithACLText:
_withEveryoneDenyDeleteACLDoBlock:
_fixACLOnFD:removeACLFilesec:denyDeleteFilesec:denyDeleteText:path:error:
_fixPOSIXPermsOnFD:FTSENT:stat:error:
_fixPOSIXBitsOnFD:FTSENT:stat:error:
_fixFlagsOnFD:FTSENT:stat:error:
_fixOwnershipOnFD:FTSENT:stat:statfs:uid:gid:error:
registry
pathsCreated
setPathsCreated:
_userRegistry
initWithManagedUserPathRegistry:
fixAndRetryIfPermissionsErrorWithURL:containerRootURL:error:duringBlock:
fixAndRetryIfPermissionsErrorWithURL:containerPath:containerIdentifier:error:duringBlock:
performRepairForContainerPath:containerIdentifier:error:
_setByAddingContainerClassPathsToSet:registry:
_managedPathFromContainerClassPath:registry:
userRegistry
containerPathIdentifier
containerClassPath
initWithFormat:arguments:
numberWithInt:
_caseSensitive
_caseSensitiveDetermined
_supportsDataProtection
_supportsDataProtectionDetermined
_classURLCreated
_symlinkClassURLCreated
_exists
_posixMode
_baseURL
_categoryURL
_classURL
_posixOwner
_containerClass
_categoryComponent
_classComponent
baseURL
categoryURL
classURL
createIfNecessaryWithError:
isCaseSensitive
supportsDataProtection
exists
setExists:
initWithBaseURL:categoryComponent:classComponent:containerClass:POSIXOwner:POSIXMode:userIdentity:
isEqualToContainerClassPath:
_obj1:isEqualToObj2:
_createURLIfNecessary:mode:owner:dataProtectionClass:error:
posixOwner
posixMode
containerClass
categoryComponent
classComponent
_inLibraryRepairBlock_createURLIfNecessary:mode:owner:dataProtectionClass:error:
containerPathTypeClasses
containerPathForContainerIdentity:
containerPathForUserIdentity:containerClass:
posixOwnerForContainerClass:user:
_modeForContainerClass:
_categoryComponentForContainerClass:
_classComponentForContainerClass:
_baseURLForUserIdentity:
_baseURLForUserIdentity:containerClass:
deletedURLWithUserIdentity:
_deletedComponent
systemContainerBackupBaseDirectoryWithUserIdentity:
systemContainerBackupDirectoryWithUserIdentity:
systemGroupContainerBackupDirectoryWithUserIdentity:
transientGlobalBundleURL
transientGlobalURL
transientURLWithUserIdentity:
_globalTemporaryComponent
_temporaryComponent
stagingGlobalURLWithUserIdentity:
stagingURLWithUserIdentity:
_globalStagingComponent
_stagingComponent
_bundleMigrationHasBeenCompleted
_groupIDMigrationHasBeenCompleted
_codeSigningMigrationHasBeenCompleted
dataClassName
performMigration
estimatedDuration
migrationProgress
bundleMigrationHasBeenCompleted
setBundleMigrationHasBeenCompleted:
groupIDMigrationHasBeenCompleted
setGroupIDMigrationHasBeenCompleted:
codeSigningMigrationHasBeenCompleted
setCodeSigningMigrationHasBeenCompleted:
@16@0:8
B40@0:8@16Q24^@32
@40@0:8@16Q24^@32
@48@0:8@16Q24^@32^@40
@"NSMutableDictionary"
@"NSURL"
v40@0:8@16@24@32
v32@0:8@16@24
v24@0:8@16
B16@0:8
B24@0:8@16
v16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_xpc_object>"
@"NSDictionary"
@"MCMUserIdentity"
@"NSSet"
@"NSHashTable"
@"MCMUserIdentity"32@0:8@"NSString"16@"MCMPOSIXUser"24
@"MCMUserIdentity"24@0:8@"MCMPOSIXUser"16
@32@0:8@16@24
@24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
B32@0:8@16@24
@24@0:8^{container_client=*I*II{?=[8I]}i@}16
@20@0:8I16
v24@0:8@?16
v20@0:8B16
@"NSString"
@"MCMPOSIXUser"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32i40I44
@40@0:8@16@24^Q32
@20@0:8i16
I16@0:8
i16@0:8
B24@0:8Q16
@32@0:8I16@20i28
@"MCMManagedPath"
@"MCMContainerClassPathCache"
@"MCMManagedPathRegistry"
@"MCMLibraryRepair"
@52@0:8I16I20@24I32@36@44
v32@0:8@"MCMUserIdentityCache"16@"MCMUserIdentity"24
@32@0:8@16#24
@40@0:8@16Q24#32
B32@0:8@16^@24
B52@0:8@16B24S28@32i40^@44
B60@0:8@16B24S28@32i40^@44^@52
B48@0:8@16B24S28@32^@40
B44@0:8@16B24S28i32^@36
B40@0:8@16B24S28^@32
B40@0:8@16@24^@32
@32@0:8@16^@24
B44@0:8@16@24B32^@36
@40@0:8@16@24^@32
B40@0:8@16^@24@?32
B40@0:8^^{_acl}16i24i28^@32
^{_acl=}36@0:8i16B20B24^@28
^{_acl=}24@0:8^@16
B36@0:8@16B24^@28
B40@0:8@16^B24^@32
B32@0:8@16^B24
B48@0:8@16^B24^B32^@40
B52@0:8@16B24^B28^B36^@44
B60@0:8@16B24^B28^B36^@44^@52
B40@0:8@16^i24^@32
B44@0:8@16i24@?28^@36
Q24@0:8@16
@28@0:8@16B24
B36@0:8@16I24^I28
@36@0:8@16B24^@28
B52@0:8@16@24Q32S40^@44
B48@0:8@16@24^B32^@40
@28@0:8Q16i24
@24@0:8^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}16
@52@0:8I16I20@24@32@40B48
@24@0:8@?16
@24@0:8^{passwd=**IIq****q}16
@32@0:8I16B20@?24
B28@0:8I16@20
@32@0:8r*16Q24
@24@0:8r*16
S24@0:8Q16
v40@0:8^S16{_NSRange=QQ}24
@"<MCMManagedPath>"
@"MCMFSNode"
@"NSURL"16@0:8
@"<MCMManagedPath>"16@0:8
S16@0:8
@"MCMPOSIXUser"16@0:8
@"MCMFSNode"16@0:8
v24@0:8@"MCMFSNode"16
@64@0:8@16Q24Q32S40i44@48@56
@56@0:8@16Q24Q32S40i44@48
B40@0:8@16I24I28^@32
B24@0:8^@16
^{_filesec=}16@0:8
^{_filesec=}24@0:8^*16
B24@0:8@?16
B60@0:8i16^{_filesec=}20^{_filesec=}28r*36r*44^@52
B44@0:8i16^{_ftsent=^{_ftsent}^{_ftsent}^{_ftsent}q^v**iiSSQiSsSSS^{stat}[1c]}20^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}28^@36
B60@0:8i16^{_ftsent=^{_ftsent}^{_ftsent}^{_ftsent}q^v**iiSSQiSsSSS^{stat}[1c]}20^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}28^{statfs=IiQQQQQ{fsid=[2i]}IIII[16c][1024c][1024c]I[7I]}36I44I48^@52
@"MCMManagedUserPathRegistry"
B48@0:8@16@24^@32@?40
B56@0:8@16@24@32^@40@?48
@68@0:8@16@24@32Q40@48S56@60
B48@0:8@16S24@28i36^@40
@32@0:8@16Q24
@32@0:8Q16@24
@24@0:8Q16
f16@0:8
-[NSDictionary(MobileContainerManagerAdditions) MCM_writeToURL:withOptions:error:]
Attempting to write a zero-length plist file at [%@]
LastBuildInfo
BundleMigration
ACLMigration
GroupIdMigration
CodeSigningMigration
MCMMigrationVersionNumber
MCMMigrationTime
migrationInfo
T@"NSMutableDictionary",&,N,V_migrationInfo
migrationFileURL
T@"NSURL",&,N,V_migrationFileURL
-[MCMMigrationStatus isBuildUpgrade]
ReleaseType
-[MCMMigrationStatus writeCurrentBuildInfoToDisk]
-[MCMMigrationStatus setMigrationCompleteForType:]
-[MCMMigrationStatus _writeMigrationStatusToDisk]
-[MCMMigrationStatus _readMigrationStatusFromDisk]
-[MCMMigrationStatus _migrateFromManyMarkerFilesToOneWithLibraryPath:]
mcm_code_signing_migration_complete.plist
mcm_group_id_migration_complete.plist
mcm_acl2_migration_complete.plist
mcm_bundle_migration_complete.plist
-[MCMMigrationStatus _removeMarkerFileWithName:libraryPath:]
-[MCMMigrationStatus _readStatusFromMarkerFileWithName:andSetAsType:libraryPath:]
-[MCMMigrationStatus initForMobileUserMigration]
mcm_user_migration_status.plist
-[MCMMigrationStatus initForSystemMigration]
mcm_migration_status.plist
Unknown
cacheInvalid
TB,N,V_cacheInvalid
lock_bundleToDataSeparatedIdentitiesMap
T@"NSDictionary",R,N,V_lock_bundleToDataSeparatedIdentitiesMap
lock_personaUniqueStringToUserIdentityMap
T@"NSDictionary",R,N,V_lock_personaUniqueStringToUserIdentityMap
lock_personaIDToUserIdentityMap
T@"NSDictionary",R,N,V_lock_personaIDToUserIdentityMap
lock_userIdentityForPersonalPersona
T@"MCMUserIdentity",R,N,V_lock_userIdentityForPersonalPersona
lock_userIdentityForUnspecificPersona
T@"MCMUserIdentity",R,N,V_lock_userIdentityForUnspecificPersona
lock_managedPathRegistryForUserIdentity
T@"NSMutableDictionary",R,N,V_lock_managedPathRegistryForUserIdentity
lock_libraryRepairForUserIdentity
T@"NSMutableDictionary",R,N,V_lock_libraryRepairForUserIdentity
observers
T@"NSHashTable",R,N,V_observers
previousUserIdentities
T@"NSSet",&,N,V_previousUserIdentities
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.containermanagerd.personaListDidUpdate
com.apple.containermanagerd.personaobserver
v16@?0@"NSObject<OS_xpc_object>"8
-[MCMUserIdentityCache forEachAccessibleUserIdentitySynchronouslyExecuteBlock:]
com.apple.containermanagerd.MCMUserIdentityCache.flushQueue
<cm-redacted>
/~~/
identifier
T@"NSString",R,N,V_identifier
plist
T@,R,C,N
posixUser
T@"MCMPOSIXUser",R,N,V_posixUser
homeDirectoryInCommonSandbox
TB,R,N,GisHomeDirectoryInCommonSandbox
dataSeparated
TB,R,N,GisDataSeparated
noSpecificPersona
TB,R,N,GisNoSpecificPersona
personaUniqueString
T@"NSString",R,N,V_personaUniqueString
shortDescription
T@"NSString",R,N
homeDirectoryURL
T@"NSURL",R,N,V_homeDirectoryURL
homeDirectoryExists
TB,R,N
personaType
Ti,R,N,V_personaType
kernelPersonaID
TI,R,N,V_kernelPersonaID
personal
data separated
unspecific
@"NSString"12@?0B8
<%u/%u/%@/%d/%d>
, homeDirectoryURL = [
<%@: %p; posixUser = %@, identifier = %@%s%@%s>
version
type
posixGID
posixUID
-[MCMUserIdentity initWithVersion2PlistDictionary:cache:error:]
-[MCMUserIdentity initWithVersion1PlistDictionary:cache:error:]
personaIdentifier
daemonUser
T@"MCMPOSIXUser",R,N,V_daemonUser
paths
T@"NSSet",R,N,V_paths
home
T@"MCMManagedPath",R,N,V_home
library
T@"MCMManagedPath",R,N,V_library
containermanagerLibrary
T@"MCMManagedPath",R,N,V_containermanagerLibrary
containermanagerPendingUpdates
T@"MCMManagedPath",R,N,V_containermanagerPendingUpdates
containermanagerReplaceOperations
T@"MCMManagedPath",R,N,V_containermanagerReplaceOperations
caches
T@"MCMManagedPath",R,N,V_caches
containermanagerCaches
T@"MCMManagedPath",R,N,V_containermanagerCaches
containermanagerDeathrow
T@"MCMManagedPath",R,N,V_containermanagerDeathrow
logs
T@"MCMManagedPath",R,N,V_logs
containermanagerLogs
T@"MCMManagedPath",R,N,V_containermanagerLogs
SIMULATOR_LOG_ROOT
Logs
Dead
Caches
Replace
PendingUpdates
MobileContainerManager
Library
userIdentity
T@"MCMUserIdentity",R,N,V_userIdentity
userHome
T@"MCMManagedPath",R,N,V_userHome
userLibrary
T@"MCMManagedPath",R,N,V_userLibrary
containermanagerUserLibrary
T@"MCMManagedPath",R,N,V_containermanagerUserLibrary
isInternalImage
TB,N,V_isInternalImage
sharedContainersDirectory
T@"NSURL",R,N,V_sharedContainersDirectory
appUserDataItemNames
T@"NSArray",R,N
excludedFromAppUserData
defaultUser
T@"MCMPOSIXUser",R,N,V_defaultUser
currentUser
T@"MCMPOSIXUser",R,N,V_currentUser
runmode
TI,R,N,V_runmode
bundleContainerMode
TI,R,N,V_bundleContainerMode
systemContainerMode
TI,R,N,V_systemContainerMode
bundleContainerOwner
T@"MCMPOSIXUser",R,N,V_bundleContainerOwner
systemContainerOwner
T@"MCMPOSIXUser",R,N,V_systemContainerOwner
canRelay
TB,R,N,V_canRelay
classPathCache
T@"MCMContainerClassPathCache",R,N,V_classPathCache
managedPathRegistry
T@"MCMManagedPathRegistry",R,N,V_managedPathRegistry
libraryRepair
T@"MCMLibraryRepair",R,N,V_libraryRepair
Requested global configuration when none was set.
com.apple.containermanagerd
SystemData
StoreKit
Documents
-[MCMGlobalConfiguration sharedContainersDirectory]
Containers
-[MCMGlobalConfiguration initWithRunMode:bundleContainerMode:bundleContainerOwner:systemContainerMode:systemContainerOwner:defaultUser:]
containermanagerd cannot obtain a home directory
MCMErrorDomain
FunctionName
SourceFileLine
v16@?0@"MCMUserIdentity"8
-[MCMFileManager fsNodeOfURL:followSymlinks:error:]
Could not determine fsNode of path [%@]
%d/0%o/[%s]/[%s]/%08x/%llx/%x-%x/%d
statfs error = %d 
lstat error = %d 
-[MCMFileManager removeExclusionFromBackupFromURL:error:]
nil path when trying to remove backup exclusion
Removing backup exclusion unimplemented
-[MCMFileManager fixUserPermissionsAtURL:limitToTopLevelURL:error:]
could not fix permissions at [%@]
_fix_permissions_on_path
provided path [%@] not beneath limit path [%@]
-[MCMFileManager dataWritingOptionsForFileAtURL:]
B32@?0^{_acl_entry=}8^B16^@24
-[MCMFileManager stripACLFromURL:error:]_block_invoke
Could not set new permset on ACL entry.
Could not delete ACL_DELETE permission from permset.
Could not get ACL permset.
Could not get ACL tag type.
-[MCMFileManager _enumeratePOSIX1eACLEntriesAtURL:error:usingBlock:]
Could not set ACL for [%s]
Could not get ACL for [%s]
URL is nil
-[MCMFileManager checkFileSystemAtURL:supportsPerFileKeys:error:]
Could not get statfs at [%@]
-[MCMFileManager checkFileSystemAtURL:isCaseSensitive:canAtomicSwap:error:]
Could not get volume capabilities for [%@]
getattrlist did not return correctly sized attributes buffer for [%@]: expected = %lu, got = %d
getattrlist did not return volume capabilities for [%@]
-[MCMFileManager compareVolumeForURL:versusURL:isSameVolume:error:]
Could not get attributes for [%@]
getattrlist did not return device ID for [%@]
-[MCMFileManager writeData:toURL:options:mode:error:]
%s.atomic.XXXXXX
Could not swap temp file [%@] with destination file [%@]
Could not chmod temp file [%@] to 0%o
Could not write to [%@]
Could not open [%@] -> [%@] for create+writing
Could not open temp [%s] for create+writing
Could not allocate memory for temporary filename for [%@]
Unsupported data writing options: 0x%lx
-[MCMFileManager readDataFromURL:options:fsNode:error:]
Could not read [%@]
Could not allocate %llu bytes for [%@]
File [%@] is too large: %llu
Could not stat [%@]
Could not open [%@]
Unsupported data reading options: 0x%lx
-[MCMFileManager realPathForURL:isDirectory:error:]
container_realpath([%s]) failed
-[MCMFileManager realPathForURL:ifChildOfURL:]
private
/private
/private/
-[MCMFileManager _realPathForURL:allowNonExistentPathComponents:]
-[MCMFileManager diskUsageForURL:]
-[MCMFileManager printDirectoryStructureAtURL:]
-[MCMFileManager setDataProtectionClassOfItemAtURL:toClass:ifPredicate:error:]
Failed to setclass(%d) on file %s: %s
Failed to getclass of file %s: %s
Failed to open %s : %s
-[MCMFileManager dataProtectionClassOfItemAtURL:class:error:]
-[MCMFileManager itemAtURL:followSymlinks:exists:isDirectory:fsNode:error:]
Failed to determine if [%s] exists.
_IterateDirectory
-[MCMFileManager urlsForItemsInDirectoryAtURL:error:]
_IterateDirectory for %@ returned %s
%s/%s
opendir of %s failed: %s
B16@?0^{dirent=QQSSC[1024c]}8
-[MCMFileManager standardizeOwnershipAtURL:toPOSIXUser:error:]
.com.apple.mobile_container_manager.metadata.plist
Could not stat %s: %s
B24@?0^{_ftsent=^{_ftsent}^{_ftsent}^{_ftsent}q^v**iiSSQiSsSSS^{stat}[1c]}8^@16
-[MCMFileManager standardizeOwnershipAtURL:toPOSIXUser:error:]_block_invoke
-[MCMFileManager standardizeAllSystemContainerACLsAtURL:error:]
-[MCMFileManager _CopySystemContainerACLWithNumACEs:isDir:inheritOnly:withError:]
acl_init() failed: %s
systemusers
-[MCMFileManager _CreateSystemUserACEInACL:withPermissions:andFlags:withError:]
acl_set_qualifier() failed: %s
acl_set_tag_type() failed: %s
acl_set_flagset_np() failed: %s
acl_add_flag_np() failed to set flags %x: %s
acl_get_flagset_np() failed: %s
acl_set_permset() failed: %s
acl_add_perm() failed to set perms %x: %s
acl_get_permset() failed: %s
mbr_identifier_to_uuid() failed: %s
failed to calloc nameUUID: %s
acl_create_entry() failed: %s
-[MCMFileManager _traverseDirectory:error:withBlock:]
fts_close failed for %s with error %s
Error for path %s: %s
fts_open failed for %s with error %s
temp.
-[MCMFileManager createTemporaryDirectoryInDirectoryURL:withNamePrefix:error:]
Failed to create temp dir at path %s : %s
%@XXXXXX
nil base directory when trying to create temporary directory for %@
-[MCMFileManager _moveItemAtURL:toURL:failIfSrcMissing:error:]
(using copy-delete) 
stat of [%s] failed: %s
rename of [%s] to [%s] failed: %s
-[MCMFileManager _copyItemAtURL:toURL:failIfSrcMissing:error:]
copyfile of %@ to %@ failed: %s
stat of %@ failed: %s
-[MCMFileManager targetOfSymbolicLinkAtURL:error:]
fetching target of symlink from [%@] failed: file exists, is a symlink, but its target could not be read: %s
fetching target of symlink from [%@] failed: file exists and is not a symlink: %s
fetching target of symlink from [%@] failed: file exists and lstat on it failed: %s
-[MCMFileManager symbolicallyLinkURL:toSymlinkTarget:error:]
-[MCMFileManager createDirectoryAtURL:withIntermediateDirectories:mode:owner:class:fsNode:error:]
Failed to setclass(%d) on directory %s: %s
Failed to fstat() on directory %s: %s
mkdir of %s failed: %s
mkpath_np of %s failed: %s
-[MCMFileManager removeItemAtURL:error:]
removefile of [%s] failed
removefile of [%s] failed: (%d) %s
_removefile_error_callback
nil url passed to -removeItemAtURL:error:
mkstemp_dprotected_np
inode
TQ,R,N,V_inode
device
Ti,R,N,V_device
<%@: %p; inode = %llu, device = %d>
TI,R,N,V_UID
primaryGID
TI,R,N,V_primaryGID
unvalidatedHomeDirectoryURL
T@"NSURL",R,N,V_unvalidatedHomeDirectoryURL
name
T@"NSString",R,N,V_name
root
TB,R,N,GisRoot,V_root
roleUser
TB,R,N,GisRoleUser,V_roleUser
<%@: %p; UID = %u, primaryGID = %u, name = [%@], homeDirectoryURL = [%@]>
(%u|%@|%@)
/System/Volumes/Data/private/var/empty
/private/var/empty
/var/empty
@"MCMPOSIXUser"12@?0I8
i40@?0^{passwd=**IIq****q}8*16Q24^^{passwd}32
unknown
HOME
v8@?0
com.apple.containermanager
unspecified
cache
sandbox
locking
database
upcall
lifecycle
startup
test
metadata
codesignmapping
longterm
schema
codesign
repair
disk
<~~~>
T@"NSURL",R,N,V_url
flags
TQ,R,N,V_flags
parent
T@"<MCMManagedPath>",R,N,V_parent
mode
TS,R,N,V_mode
dpClass
Ti,R,N,V_dpClass
ACLConfig
TQ,R,N,V_ACLConfig
owner
T@"MCMPOSIXUser",R,N,V_owner
fsNode
T@"MCMFSNode",&,N,V_fsNode
T@"NSURL",R,N
TQ,R,N
T@"<MCMManagedPath>",R,N
TS,R,N
Ti,R,N
T@"MCMPOSIXUser",R,N
T@"MCMFSNode",&,N
<%@: %p; flags = 0x%lx, ACLConfig = 0x%lx, mode = 0%o, dpClass = %d, owner = %@, parent = %p, fsNode = %@, url = [%@]>
registry
T@"MCMManagedPathRegistry",R,N,V_registry
pathsCreated
TB,N,V_pathsCreated
-[MCMLibraryRepair _fixOwnershipOnFD:FTSENT:stat:statfs:uid:gid:error:]
fchown(uid=%u, gid=%u) failed on path [%s]
-[MCMLibraryRepair _fixFlagsOnFD:FTSENT:stat:error:]
fchflags failed on open fd for path [%s]
-[MCMLibraryRepair _fixPOSIXBitsOnFD:FTSENT:stat:error:]
fchmod (un-setuid) failed on path [%s]
-[MCMLibraryRepair _fixPOSIXPermsOnFD:FTSENT:stat:error:]
fchmod failed on file [%s]
fchmod failed on directory [%s]
-[MCMLibraryRepair _fixACLOnFD:removeACLFilesec:denyDeleteFilesec:denyDeleteText:path:error:]
fchmodx_np() failed when setting default ACL on path [%s]
fchmodx_np() failed when removing ACLs on path [%s]
fstat(...) failed on [%s]
filesec_get_property(..., FILESEC_ACL, ...) failed on path [%s]
fstatx_np failed on path [%s]
filesec_init failed
B16@?0^{_acl=}8
-[MCMLibraryRepair fixPermissionsWithManagedPath:uid:gid:error:]
fstatfs() failed on path [%s]
fstat() failed on path [%s]
open() failed on path [%s]
fts_open() failed on %@
userRegistry
T@"MCMManagedUserPathRegistry",R,N,V_userRegistry
file-write-owner
categoryComponent
T@"NSString",R,N,V_categoryComponent
classComponent
T@"NSString",R,N,V_classComponent
containerClass
TQ,R,N,V_containerClass
caseSensitive
TB,R,N,GisCaseSensitive
supportsDataProtection
exists
TB,N,V_exists
posixOwner
T@"MCMPOSIXUser",R,N,V_posixOwner
posixMode
TS,R,N,V_posixMode
baseURL
T@"NSURL",R,N,V_baseURL
categoryURL
T@"NSURL",R,N,V_categoryURL
classURL
T@"NSURL",R,N,V_classURL
B24@?0@"NSURL"8^@16
<%@: %p; [%@]/[%@]/[%@]>
-[MCMContainerClassPath supportsDataProtection]
-[MCMContainerClassPath isCaseSensitive]
Application
PluginKitPlugin
VPNPlugin
AppGroup
Framework
XPCService
InternalDaemon
TempDir
System
SystemGroup
Shared
Data
Bundle
+[MCMContainerClassPath _inLibraryRepairBlock_createURLIfNecessary:mode:owner:dataProtectionClass:error:]
Library/Backup/SystemContainers
Temp
Staging
@(#)VERSION:Container Manager: Sep 19 2020 22:08:25; MobileContainerManager_Sim-318.40.13~46/x86_64
bundleMigrationHasBeenCompleted
TB,N,V_bundleMigrationHasBeenCompleted
groupIDMigrationHasBeenCompleted
TB,N,V_groupIDMigrationHasBeenCompleted
codeSigningMigrationHasBeenCompleted
TB,N,V_codeSigningMigrationHasBeenCompleted
-[MCMContainerDataMigrator performMigration]
MCMContainerDataMigrator
mobile
_installd
%{public}s(%d): Did not find last build info; we must be upgrading from pre-9.3.1 or this is an erase install.
%{public}s(%d) Could not get build version from last build info dictionary; assuming this is an upgrade
%{public}s(%d) Could not get current build info; assuming this is an upgrade
%{public}s(%d) Could not get current build string; assuming this is an upgrade
%{public}s(%d): Current build version (%@ / %@) equal to last version recorded (%@ / %@); skipping upgrade
%{public}s(%d): Detected upgrade from %@ (%@) to %@ (%@)
%{public}s(%d): Saved last build version of %@
%{public}s(%d): Migration completed on %@ for %@
%{public}s(%d) Failed to write migration status on %@ for %@ : %@
%{public}s(%d) Failed to read migration status file at %@ : %@
%{public}s(%d): Migrating from many marker files down to one
%{public}s(%d) Failed to remove marker file at %@: %@
%{public}s(%d) Failed to read migration marker file at %@ : %@
%{public}s(%d) Error reading user migration file from disk.  This is bad
%{public}s(%d) Failed to get library url.
%{public}s(%d) Error reading system migration file from disk.  This is bad
Got persona list update from UM.
Flushing cache from UM persona list update.
Notifying observer <0x%p; %@> about an invalid user identity: %@
Notifying observer <0x%p; %@> about a new user identity: %@
Found %@ for %@
After refresh, found %@ for %@
Failed creating working directories for %@: %{public}@
%{public}s(%d) Expected to find at least one persona; self = %@, personaAttributeList = %@
Found %@ for ID: %d
After refresh, found %@ for ID: %d
Unable to fetch platform from client for pid [%d]: %{darwin.errno}d
%{public}s(%d) Invalid user identity plist data. Expected persona type for %@, got %@. Data: %@
%{public}s(%d) Invalid user identity plist data. Expected number for %@, got %@. Data: %@
%{public}s(%d) Invalid user identity plist data. Could not get matching uid passwd data. gid: %d, uid: %d, User: %@, Data: %@
POSIX user cannot be nil
Home directory cannot be nil, user '%@'
Computed nil identifier, user '%@'
%{public}s(%d) Failed to create shared container dir at "%@": %@
%{public}s(%d) could not get home directory...aborting
%{public}s(%d) Default user: %@, current user: %@, bundle owner: %@, home dir: [%@]
Container class path cache miss, creating type = [%@], userIdentity = [%@], class = %llu: %@
%{public}s(%d) Path [%s] does not have accepted path prefix [%s] when trying to fix permissions
%{public}s(%d) Failed to stat [%s] when trying to fix permissions, could not recover: (%d) %s
%{public}s(%d) Failed to stat [%s] when trying to fix permissions, attempting to recover: (%d) %s
%{public}s(%d) Failed to stat [%s] when trying to fix permissions, gave up: (%d) %s
%{public}s(%d) Failed to stat [%s] when trying to fix permissions, but no longer a permission error: (%d) %s
%{public}s(%d) Failed to lchflags [%s]: (%d) %s
%{public}s(%d): Unset UF_IMMUTABLE | UF_APPEND on [%s]
%{public}s(%d) lchmod() for [%s] failed during permissions repair: (%d) %s
%{public}s(%d): lchmod u+rw(x) (0%o 
 0%o) on [%s]
%{public}s(%d) Could not check fs capabilities for atomic swap at [%@]: %@
%{public}s(%d) Could not check fs capabilities for data protection at [%@]: %@
Wrote [%{public}@], length = %{public}lu, options = 0x%{public}lx, mode = 0%{public}o
container_realpath([%s]) 
 [%s]
%{public}s(%d) The base path %@ and/or suspicious path %@ were nil
%{public}s(%d) supiscious path %@ does not contain base path %@ as a prefix
%{public}s(%d) The suspicious path %@ contains '..' paths, which are invalid
%{public}s(%d) Readlink failed: %s
%{public}s(%d) Rejecting %@ -> %s, as absolute symlinks are not allowed
%{public}s(%d) Failed to retrieve depth of %@
%{public}s(%d) Rejecting %@ -> %@, as it is points outside or to the base %@
%{public}s(%d) Failed to retrieve realpath for base path %@ 
%{public}s(%d) Failed to retrieve realpath for suspicious path %@
%{public}s(%d) Rejecting %@ with base %@ because real component counts don't make sense (reals %@ ; %@)
%{public}s(%d) Rejecting %@ with base %@ because base component count is greater than child component count (reals %@ ; %@)
%{public}s(%d) Rejecting %@ with base %@ (reals %@ ; %@) because components diverge at %@ != %@
%{public}s(%d) Failed to realpath [%s] : %@
%{public}s(%d) Failed to get path to url %@
Failed to get dirstats on %s using fallback: (err %d) %s
Invalid size (%lld) from dirstats on %s using fallback: (err %d) %s
[%s]: descendants: %llu, total size: %llu, using fallback
CalculatingDiskUsage
 path=%{private, signpost.description:attribute}@  numNodes=%{public, signpost.description:attribute}llu  size=%{private, signpost.description:attribute}llu 
%{public}s(%d) fts_open failed for %@ : %s
%{public}s(%d) 
Orphaned File: %s
%{public}s(%d) FTS returned error for %s : %s
Failed to get data protection class on [%s]: %{darwin.errno}d
Failed to set data protection class (%d) on [%s]: %{darwin.errno}d
Set data protection class (%d) on [%s]
%{public}s(%d) Failed to determine if [%s] exists: (%d) %s
stat [%s]: exists: %d, isDirectory: %d, fsNode: %@
%{public}s(%d) opendir of %s failed: %s
%{public}s(%d) Could not chown %s: %s
%{public}s(%d) Could not chmod %s: %s
%{public}s(%d) Failed to get items at URL%@ : %@
%{public}s(%d): Potential containers requiring ACL migration: %@
%{public}s(%d) Failed to set system container ACL at %@: %@
 path=%{private, signpost.description:attribute}@ 
TraversingDirectory
 path=%{private, signpost.description:attribute}@  numNodes=%{public, signpost.description:attribute}llu 
%{public}s(%d) Failed to remove move source after copy at %@ : %@
Moved %s[%s] 
 [%s].
Creating symlink [%@] 
 [%@]
Created directory [%s] with mode: 0%o, w/intermediates: %d, DP class: %d, owner: %@, fsNode: %@
Created directory [%s] with mode: 0%o, w/intermediates: %d, DP class: %d, owner: %@
Created directory [%s] but could not complete its setup due to error: %@
%{public}s(%d) removefile_state_set REMOVEFILE_STATE_ERROR_CALLBACK failed: %s
%{public}s(%d) removefile_state_set REMOVEFILE_STATE_ERROR_CONTEXT failed: %s
removefile([%s]) succeeded
Hit maximum iterations trying to removefile([%s]); removefile error = %{public}d, recovery error = %{public}d
%{public}s(%d) removefile hit error for [%s]: (%d) %s
%{public}s(%d) removefile hit error for [%s] but we failed to get the error number
%{public}s(%d) lstat of [%s] failed when trying to figure out why unlink failed: (%d) %s
%{public}s(%d) unlink of [%s] failed: (%d) %s
NULL passwd
container_realpath([%{public}@]) 
 [%{public}@]
container_realpath([%{public}@]) failed: %{public, darwin.errno}d
User home directory at [%{public}@] does not exist
nil passwd fill block
Could not get _SC_GETPW_R_SIZE_MAX sysconf.
Could not generate posix user details for uid=%{public}u
Created new POSIX user: %{public}@
Could generate posix user details for user=%{public}@
fchown(uid=%u, gid=%u) failed (%{darwin.errno, public}d) on path [%s]
%{public}s(%d): REPAIR: fchown (%d:%d 
 %d:%d) on [%s]
fchflags failed (%{darwin.errno, public}d) on open fd for path [%s]
%{public}s(%d): REPAIR: fchflags -UF_IMMUTABLE (0x%x 
 0x%x) on [%s]
fchmod (un-setuid) failed (%{darwin.errno, public}d) on path [%s]
%{public}s(%d): REPAIR: fchmod -setuid, -setgid, -sticky (0%o 
 0%o) on [%s]
%{public}s(%d): REPAIR: fchmod u+rwx (0%o 
 0%o) on [%s]
fchmod failed (%{darwin.errno, public}d) on path [%s]
%{public}s(%d): REPAIR: fchmod u+rw (0%o 
 0%o) on [%s]
filesec_init failed
fstatx_np failed (%{darwin.errno, public}d) on path [%s]
filesec_get_property(..., FILESEC_ACL, ...) failed (%{darwin.errno, public}d) on path [%s]
fstat(...) failed (%{darwin.errno, public}d) on [%s]
fchmodx_np() failed (%{darwin.errno, public}d) when removing ACLs on path [%s]
%{public}s(%d): REPAIR: removed ACL (%s) from [%s]
fchmodx_np() failed (%{darwin.errno, public}d) when setting default ACL on path [%s]
%{public}s(%d): REPAIR: added default ACL (%s) on [%s]
mbr_identifier_to_uuid(group, everyone) failed (%d)
acl creation failed (%{darwin.errno}d)
acl_to_text() failed (%{darwin.errno, public}d)
filesec_set_property() for default ACL failed (%{darwin.errno, public}d)
Failed to get fsNode for [%{public}@] when checking for file system changes: %{public}@
Path [%{public}@] changed: old = %{public}@, new = %{public}@
Examining %@ for repair.
Failed to repair [%@]: %@
fts_open() failed (%{darwin.errno, public}d) on %@
open() failed (%{darwin.errno, public}d) on path [%s]
fstat failed (%{darwin.errno, public}d) on open fd for path [%s]
fstatfs failed (%{darwin.errno, public}d) on open fd for path [%s]
path [%s] is hardlinked [nlink: %d], skipping
close() failed (%{darwin.errno}d) on file descriptor.
Including [%@:%@] since it is under [%@]
Skipping [%@:%@] since it isn't under [%@]
User path registry has no user identity
User identity has no home directory URL (%@)
User identity has no home directory path cannot be computed (%@)
Failed to repair generic paths: %@
%{public}s(%{public}d): %{public}@
Attempted to create a class path with no baseURL.
Attempted to create a class path with an unsupported bundle class: %{public}llu
Attempted to create a class path with an unsupported system class: %{public}llu
%{public}s(%d) Could not determine dp support: %@
%{public}s called before createIfNecessaryWithError:, result may not be valid
%{public}s(%d) Could not determine case sensitivity: %@
Container class [%llu] requires a user identity.
%{public}s(%d) Failed to determine if dir at [%@] exists: %@
%{public}s(%d) Failed to create dir at [%@]: %@
Failed to create deathrow at %@: %{public}@
%{public}s(%d) Migration failed with error %llu. Please include a sysdiagnose in a bug report for MobileContainerManager | all.
NULL client when fetching persona unique string
NULL client when fetching euid
Could not allocate memory to initialize a client object for pid [%d].
Could not get platform from audit token to initialize a client object for pid [%d].
Could not get code sign identifier from audit token to initialize a client object for pid [%d].
