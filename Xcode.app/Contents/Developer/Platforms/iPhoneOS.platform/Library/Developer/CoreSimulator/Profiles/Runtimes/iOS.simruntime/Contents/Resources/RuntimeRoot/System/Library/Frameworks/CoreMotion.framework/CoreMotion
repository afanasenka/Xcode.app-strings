N5CMMsl7ALSDataE
N5CMMsl14ARSessionStateE
N5CMMsl5AccelE
N5CMMsl8Accel800E
N5CMMsl10AccelBatchE
N5CMMsl12AccelGestureE
N5CMMsl8AccelGpsE
N5CMMsl13AccelOscarEmuE
N5CMMsl17AccelerometerPaceE
N5CMMsl14AccessoryAccelE
N5CMMsl20AccessoryAccelConfigE
N5CMMsl15AccessoryConfigE
N5CMMsl21AccessoryDeviceMotionE
N5CMMsl27AccessoryDeviceMotionConfigE
N5CMMsl13AccessoryGyroE
N5CMMsl23AccessoryGyroCachedBiasE
N5CMMsl19AccessoryGyroConfigE
N5CMMsl17AccessoryGyroGYTTE
N5CMMsl20AccessoryInEarStatusE
N5CMMsl13AccessoryProxE
N5CMMsl23AccessoryProxSensorDropE
N5CMMsl21AccessoryProxTempCompE
N5CMMsl24AccessoryProximityConfigE
N5CMMsl13AccessoryWakeE
N5CMMsl18AccessoryWakeDebugE
N5CMMsl11AirpodEventE
N5CMMsl16AnchorCorrectionE
N5CMMsl26AudioAccessoryDeviceMotionE
N5CMMsl21AuxiliaryDeviceMotionE
N5CMMsl12BTConnectionE
N5CMMsl13BasebandSpeedE
N5CMMsl13BioMotionPoseE
N5CMMsl21BleedToZeroCorrectionE
N5CMMsl11BodyMetricsE
N5CMMsl15BraveHeartAccelE
N5CMMsl22BraveHeartDeviceMotionE
N5CMMsl21BraveHeartNatalieDataE
N5CMMsl21BraveHeartVO2MaxInputE
N5CMMsl22BraveHeartWorkoutEventE
N5CMMsl21CalorimetryPauseEventE
N5CMMsl22CatherineHealthKitDataE
N5CMMsl15ClefCalibrationE
N5CMMsl20ClefCalibrationPointE
N5CMMsl15ClefMeasurementE
N5CMMsl15ClefTemperatureE
N5CMMsl21CoarseElevationChangeE
N5CMMsl7CompassE
N5CMMsl16CompassAlignmentE
N5CMMsl18CompassCalibrationE
N5CMMsl25CompassCalibrationAttemptE
N5CMMsl18CompassConstraintsE
N5CMMsl17CompassCorrectionE
N5CMMsl25ConstrainedIntegratorPoseE
N5CMMsl27CoprocessorReplyGaitMetricsE
N5CMMsl17CourseConstraintsE
N5CMMsl16CourseCorrectionE
N5CMMsl12DeviceMotionE
N5CMMsl20DeviceMotionAlwaysOnE
N5CMMsl22DeviceMotionCorrectionE
N5CMMsl22DeviceMotionCovarianceE
N5CMMsl9DoubleTapE
N5CMMsl15ElevationChangeE
N5CMMsl14EmergencyStateE
N5CMMsl20EnhancedDeviceMotionE
N5CMMsl8FacePoseE
N5CMMsl21FallDetectionDetectorE
N5CMMsl33FallDetectionGyroControllerReplayE
N5CMMsl19FallDetectionReplayE
N5CMMsl25FallDetectionStateMachineE
N5CMMsl29FallDetectionWristStateReplayE
N5CMMsl36FallFalsePositiveSuppressionFeaturesE
N5CMMsl12FallMetaDataE
N5CMMsl11FallSnippetE
N5CMMsl9FallStateE
N5CMMsl9FallStatsE
N5CMMsl17FrequencyResponseE
N5CMMsl16GaitCycleSegmentE
N5CMMsl26GaitCycleSegmentationStateE
N5CMMsl15GeomagneticDataE
N5CMMsl18GravityConstraintsE
N5CMMsl17GravityCorrectionE
N5CMMsl4GyroE
N5CMMsl19GyroBiasAndVarianceE
N5CMMsl19GyroBiasConstraintsE
N5CMMsl18GyroBiasCorrectionE
N5CMMsl21GyroBiasEstimateErrorE
N5CMMsl11GyroBiasFitE
N5CMMsl26GyroCalibrationDataFactoryE
N5CMMsl38GyroCalibrationDataNonlinearNonFactoryE
N5CMMsl21GyroCalibrationSampleE
N5CMMsl30GyroCalibrationSampleNonlinearE
N5CMMsl11GyroCompassE
N5CMMsl6GyroDtE
N5CMMsl26GyroFactoryCalibrationDataE
N5CMMsl7GyroGpsE
N5CMMsl12GyroOscarEmuE
N5CMMsl15GyroTemperatureE
N5CMMsl20InEarAdditionalStateE
N5CMMsl13InEarBaselineE
N5CMMsl15InEarBaseliningE
N5CMMsl16InEarConstraintsE
N5CMMsl12InEarOpenLidE
N5CMMsl12InEarOpticalE
N5CMMsl12InEarSessionE
N5CMMsl15InEarTransitionE
N5CMMsl20InEarTransitionEntryE
N5CMMsl26InterpolatedAccessoryAccelE
N5CMMsl21IntersiloNSCodingDataE
N5CMMsl4ItemE
N5CMMsl18JointLinkModelPoseE
N5CMMsl12KappaTriggerE
N5CMMsl20LSLHeadingEstimationE
N5CMMsl16LocationOscarEmuE
N5CMMsl22MagneticAccessoryType1E
N5CMMsl22MagneticAccessoryType2E
N5CMMsl12MagnetometerE
N5CMMsl8MetsInfoE
N5CMMsl19MobilityBoutMetricsE
N5CMMsl14MotionActivityE
N5CMMsl17MotionGPSLocationE
N5CMMsl10MotionHintE
N5CMMsl14MotionLocationE
N5CMMsl13MotionLoiDataE
N5CMMsl17MotionStateUpdateE
N5CMMsl21MotionWifiAssociationE
N5CMMsl18MotionWifiLocationE
N5CMMsl13MovementStatsE
N5CMMsl30MovementStatsGravityProjectionE
N5CMMsl19MovementStatsSignalE
N5CMMsl11NatalieDataE
N5CMMsl16NonlinearBiasFitE
N5CMMsl8OdometerE
N5CMMsl20OdometerWithAltitudeE
N5CMMsl18OnsetHeartRateDataE
N5CMMsl13PearlAttitudeE
N5CMMsl29PredictedRelativeDeviceMotionE
N5CMMsl8PressureE
N5CMMsl19PressureCalibrationE
N5CMMsl19PressureCompensatedE
N5CMMsl16PressureFilteredE
N5CMMsl29PressureFilteredNoTemperatureE
N5CMMsl11PressureGpsE
N5CMMsl16PressureOscarEmuE
N5CMMsl4ProxE
N5CMMsl19RelDMInSystemConfigE
N5CMMsl37RelativeDeviceMotionComplexTransitionE
N5CMMsl36RelativeDeviceMotionCorrelatedMotionE
N5CMMsl28RelativeDeviceMotionInternalE
N5CMMsl26RelativeGravityConstraintsE
N5CMMsl25RelativeGravityCorrectionE
N5CMMsl12RotationRateE
N5CMMsl30SPUPlaybackExampleDeviceMotionE
N5CMMsl35SPUPlaybackExampleMotionStateUpdateE
N5CMMsl15SessionOverrideE
N5CMMsl17SignalEnvironmentE
N5CMMsl18SoundPressureLevelE
N5CMMsl28StepCadenceToStrideLengthBinE
N5CMMsl14StepCountEntryE
N5CMMsl22StreamingHeartRateDataE
N5CMMsl12StrideCalBinE
N5CMMsl9TapAcceptE
N5CMMsl9TapDetectE
N5CMMsl31TempestPoCAuxiliaryDeviceMotionE
N5CMMsl29TempestPoCListenerOrientationE
N5CMMsl13TouchOscarEmuE
N5CMMsl14UserStudyEventE
N5CMMsl13VIOEstimationE
N5CMMsl7VIOPoseE
N5CMMsl13VIOReplayPoseE
N5CMMsl11VO2MaxInputE
N5CMMsl12VO2MaxOutputE
N5CMMsl14VibrationEventE
N5CMMsl17VisionCompassBiasE
N5CMMsl18VisualLocalizationE
N5CMMsl37VisualLocalizationAttitudeConstraintsE
N5CMMsl36VisualLocalizationAttitudeCorrectionE
N5CMMsl22WalkingDetectionResultE
N5CMMsl17WatchOnWristStateE
N5CMMsl24WatchOrientationSettingsE
N5CMMsl13WifiScanEntryE
N5CMMsl15WifiScanResultsE
N5CMMsl12WorkoutEventE
N5CMMsl22WorkoutRecorderALSDataE
N5CMMsl20WorkoutRecorderAccelE
N5CMMsl23WorkoutRecorderAccel800E
N5CMMsl26WorkoutRecorderBodyMetricsE
N5CMMsl24WorkoutRecorderElevationE
N5CMMsl28WorkoutRecorderHealthKitInfoE
N5CMMsl24WorkoutRecorderHeartRateE
N5CMMsl23WorkoutRecorderOdometerE
N5CMMsl23WorkoutRecorderPressureE
N5CMMsl27WorkoutRecorderRotationRateE
N5CMMsl39WorkoutRecorderWatchOrientationSettingsE
N5CMMsl30WorkoutRecorderWifiScanResultsE
N5CMMsl27WorkoutRecorderWorkoutEventE
N5CMMsl22ZeroVelocityCorrectionE
@(#)PROGRAM:CoreMotion  PROJECT:CoreLocation-2420.8.7
:NSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
N16CLMotionNotifier10DispatcherE
N16CLMotionNotifier18CallbackDispatcherIbEE
N16CLMotionNotifier18CallbackDispatcherIN10CLPressure6SampleEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
pQBX
A15CLNameValuePair
10BasicMutex
5Mutex
11NonCopyable
N5CMMsl6Reader14MemoryDelegateE
N5CMMsl6Reader8DelegateE
14CLPlatformInfo
16CLDaemonSettings
NSt3__120__shared_ptr_pointerIP16CLDaemonSettingsN12_GLOBAL__N_112null_deleterENS_9allocatorIS1_EEEE
N12_GLOBAL__N_112null_deleterE
#@ff
@N13CLPreferences10OtherPrefsE
13CLPreferences
>fff?
L=Pw
NSt3__120__shared_ptr_pointerIP19CLConnectionMessageNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI19CLConnectionMessageEE
15CLKeyboardState
EnableWakeGestureiPad
EnableWakeGestureLatencyAlert
WakeGestureLatencyAlertThreshold
EnableWakeGestureHaptic
20CMWakeGestureVisitor
N16CLMotionNotifier18CallbackDispatcherIN19CLPowerStateService6SampleEEE
N16CLMotionNotifier18CallbackDispatcherIN5CMSPU13GestureReport6SampleEEE
MbP?
MbP?
MbP?
6N16CLMotionNotifier18CallbackDispatcherIN23CLAccessoryDeviceMotion6ConfigEEE
NSt3__120__shared_ptr_emplaceIN16CLIoHidInterface6DeviceENS_9allocatorIS2_EEEE
N16CLMotionNotifier18CallbackDispatcherIN19CLAccessoryNotifier11InEarStatusEEE
N16CLMotionNotifier18CallbackDispatcherIN14CLDeviceMotion6SampleEEE
N16CLMotionNotifier18CallbackDispatcherIN23CLAccessoryDeviceMotion20AudioAccessorySampleEEE
31CLGyroCalibrationDatabaseRemote
N30CLGyroCalibrationDatabase_Type16NotificationDataE
NSt3__120__shared_ptr_emplaceIN30CLGyroCalibrationDatabase_Type16NotificationDataENS_9allocatorIS2_EEEE
N16CLMotionNotifier18CallbackDispatcherIN23CMCallHandednessService6SampleEEE
15CMPickupService
17CLRunningVector3dIfE
20CLRunningBufferStatsIfE
@16CLMotionNotifier
NSt3__120__shared_ptr_pointerIP10CLSettingsNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI10CLSettingsEE
@20CLPocketStateService
N16CLMotionNotifier18CallbackDispatcherIN21CLOrientationNotifier6SampleEEE
?333333
?ffffff
A5CLLog
NSt3__120__shared_ptr_pointerIP19CLCircularLogBufferNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI19CLCircularLogBufferEE
10CLSettings
@P@{
zt?N16CLMotionNotifier18CallbackDispatcherIN24CLAccessoryAccelerometer6SampleEEE
N16CLMotionNotifier18CallbackDispatcherIN15CLAccessoryGyro6SampleEEE
N16CLMotionNotifier18CallbackDispatcherIN19CLAccessoryNotifier15AccessoryStatusEEE
=PwV=PwV=
23CLCompassDatabaseClient
NSt3__120__shared_ptr_emplaceIN22CLCompassDatabase_Type16NotificationDataENS_9allocatorIS2_EEEE
N22CLCompassDatabase_Type16NotificationDataE
*@14CLNotifierBase
17CLCompassDatabase
10CLNotifierIN22CLCompassDatabase_Type12NotificationENS0_16NotificationDataEccE
20CLNotifierClientBase
kCMActivityAlarmId
kCMActivityAlarmTrigger
kCMActivityAlarmDuration
20CLIoHidEdgeInterface
32CLGeomagneticModelProviderClient
NSt3__120__shared_ptr_emplaceIN31CLGeomagneticModelProvider_Type16NotificationDataENS_9allocatorIS2_EEEE
N31CLGeomagneticModelProvider_Type16NotificationDataE
26CLGeomagneticModelProvider
10CLNotifierIN31CLGeomagneticModelProvider_Type12NotificationENS0_16NotificationDataEccE
N31CLGeomagneticModelProvider_Type6ClientE
16CLNotifierClientIN31CLGeomagneticModelProvider_Type12NotificationENS0_16NotificationDataEccE
N5CMSPU13GestureReport7VisitorE
N16CLBinaryLogTypes10BinaryDataE
N16CLBinaryLogTypes12DeviceMotionE
23CMCallHandednessService
@12CLCoverState
18CLCoverStateClient
A9CLCompass
19CLProximityNotifier
N16CLMotionNotifier18CallbackDispatcherIN15CMPickupService6SampleEEE
?11CLBinaryLog
16CLBinaryLogTypes
APocketStateMaxMonitorTime
DisablePocketState
N16CLMotionNotifier18CallbackDispatcherIN20CLPocketStateService25CLPocketStateInternalTypeEEE
sA-C
Zw+?
Zwk?
21CLOrientationNotifier
?10CLCompass7
21CMDeviceMotionVisitor
N20CMDeviceMotionReport7VisitorE
:9CLLogBase
25CLGyroCalibrationDatabase
10CLNotifierIN30CLGyroCalibrationDatabase_Type12NotificationENS0_16NotificationDataEccE
19CLPowerStateService
<ADDED
REMOVED
16CLIoHidInterface
N16CLIoHidInterface6DeviceE
16CLGestureService
CMMsl.Writer
v8@?0
setFlushTimeout_block_invoke
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Motion/Msl/CMMslWriter.cpp
(fFd == -1) && ("Writer::setFlushTimeout() must be called before ::open().")
Cannot open Msl file
Cannot seek to end of Msl file
Cannot seek to start of Msl file
Short signature in Msl file
Bad signature in Msl file
v12@?0i8
Cannot create dispatch_io for Msl file
zstream status? Msl %d
v24@?0B8^{dispatch_data_s=}12i20
Msl dispatch io write error %s
alsTrustedLux
state
location
timestamp
super
batch
calibrated
lowerBound
upperBound
accel
sensorTime
sequenceNumber
arsc
arscString
config
deviceConfiguration
hardwareModel
serialNumber
side
gyro
temp
gyroCachedBias
gyttString
status
base
broken
peak
sensor
conchaDropped
conchaRecovered
iedState
mean
optical
tragusDropped
tragusRecovered
variance
conchaTemp
prescalar
pwrState
tragusTemp
valid
wdtPeriod
oscl
osclString
pdtc
pdtcString
hostState
s7q8
sensorState
accelDecimated
accelFrontVariance
accelMean
accelNormAutocorr
accelNormMean
accelNormVariance
accelVariance
currentAngleDelta
currentMotionState
lagAtMaxAutocorr
lastBaseline
maxAutocorr
walkingBaseline
widthAtMaxAutocorr
eventTag
correction
lastConvergenceTimestamp
arrivalTimestamp
btcTimestamp
filteredAcceleration
quiescentMode
quiescentNoise
sampleLatency
sensorTimeUponReceival
timeSyncStatus
acceleration
biasCovariance
quaternion
rotationRate
statusDeprecated
userAcceleration
fConnected
fEndTime
fStartTime
reserved
scaledValue
speedRange
speedThreshold
attitude
translation
velocity
withAnchoredStaticPose
betaBlockerUse
biologicalSex
condition
gender
heightM
hrmax
hrmin
hronset
runVo2max
vo2max
weightKG
deviceMotion
basalNatalies
mets
natalies
session
startDate
vo2MaxInput
eventTime
eventType
workoutType
pause
endDate
hkType
gain
offset
point
tempCalA
tempCalB
tempCalEnabled
tempCalT0
distance
concha
tragus
elevationAscended
startTime
accuracy
biasX
biasY
biasZ
calibrationLevel
horizontal
inclination
magneticFieldX
magneticFieldY
magneticFieldZ
magneticHeading
magnitude
trueHeading
compassJustAlignedToStableField
apAwake
cost
coverage
earthDiffRatio
hasConsistency
planarity
poseX
poseY
poseZ
quality
scaleX
scaleY
scaleZ
coverage2d
coverage3d
isPlanar
numberOfSamples
timeSpan
unitDistance
attitudeDelta
calibratedField
doCorrection
isOnSphere
isRotating
isTraversingSphere
predictedField
scale
timerUnitDistanceThreshold
unitDistanceLargeBufferDelta
unitDistanceLargeBufferMax
unitDistanceReference
unitDistanceSmallBufferDelta
unitDistanceThreshold
unitDistanceThresholdApplied
vertical
asymmetryProbabilityEstimate
cycleTime
deviceSide
doubleSupportEstimate
gaitPhase
segmentsRejectedByIsCadenceConcordant
segmentsRejectedByIsFeasibleWalkingSpeed
segmentsRejectedByIsNotRunning
segmentsRejectedByIsPendular
segmentsRejectedByIsSufficientVerticalTwist
segmentsRejectedByIsSwingStanceCycle
stepLengthEstimate
walkSpeedEstimate
clientID
isGyroOn
magneticFieldCalibrationLevel
mode
quaternionW
quaternionX
quaternionY
quaternionZ
rotationRateX
rotationRateY
rotationRateZ
userAccelerationX
userAccelerationY
userAccelerationZ
variant
visionCompassBias
inQuiescentMode
shouldGyroBeOn
estimate
measurement
noisevariance
residual
statevariance
biasvariance
currentMeanAngleY
deltaMeanAngleY
doubleTapCounter
doubleTapStatus
entropyConcha
entropyTragus
tapInterval
elevationDescended
source
doingBiasEstimation
doingYawCorrection
aperture
confidence
exposureDuration
failureCode
orientation
poseLibrary
rollValue
sensorCovered
tooDark
type
accelPathLength
angleChangePostImpact
angleChangePreImpact
crown
iostime
isFall
isNearFall
maxAbsX
maxAbsY
maxAbsZ
maxAccelNorm
maxAngleChangePostImpact
maxAngleChangePreImpact
maxJerkVM
maxMinusMin
minInertialZ
minInertialZHighFreq
multiPeakAccelPathLengthWithPeak
multiPeakPathLengthDecorrelation
multiPeakPathLengthDelaySpread
multiPeakPathLengthHarmonicMean
peakTimestamp
poseAtImpact
posteriorRatio
sumDeltaAngles
swingAngle
tiltAngle
timeto3rdZC
withinHardThresholds
gyroOn
alertCanceledBecauseOfAbsenceOfQuiessence
alertCanceledBecauseOfChargerState
alertCanceledBecauseOfDecimatedLowFrequencyFFT
alertCanceledBecauseOfHighFrequencyFFT
alertCanceledBecauseOfLockedNoMotionPre
alertCanceledBecauseOfLowFrequencyFFT
alertCanceledBecauseOfNumberOfPeaksFFT
alertCanceledBecauseOfOffBody
alertCanceledBecauseOfRepetitiveMotion
alertCanceledBecauseOfSimilarPeaks
alertCanceledBecauseOfWristState
alertCanceledBecauseOfWristStatePost
alertCanceledBecauseOfWristStatePre
fallStatsDispatchResetOnAccelSensorTime
fallStatsDispatchRestoredOnAccelSensorTime
impactCanceledBecauseOfExistingAlert
impactNotConsideredBecauseOfMaxAccelNormThreshold
impactNotConsideredBecauseOfMultiPeaks
impactNotConsideredBecauseOfNaiveBayesClassifier
impactNotConsideredBecauseOfOtherHardThresholds
leavingImpactBecauseOfNewImpactNewImpact
leavingImpactBecauseOfNewImpactOldImpact
skippedFallStatsSensorTime
skippedGyroSensorTime
sosCanceledBecauseOfAbsenceOfLongLie
sosCanceledBecauseOfActive
sosCanceledBecauseOfStand
sosCanceledBecauseOfSteps
sosConsideredFallTimestamp
sosConsideredIOSTime
sosConsideredSensorTime
deltaSteps
didCancelSOS
fallTime
fromState
gyroMaxMean
isActive
isStand
magnitudeDiffUnity
maxAccelStdAxis
maxNumQuiescentBins
maxNumStaticBins
normalizedIQR
numActiveBins
numNonzeroStepEpochs
numPeaks
numQuiescentBins
numSharpPeaks
numStandBins
numStaticBins
onBodyFeature
quiescentThreshold
sentFallAlert
sharpPeaksDelaySpread
sumHighQPeaksInDecLowFreqFFT
sumHighQPeaksInHighFreqFFT
sumHighQPeaksInLowFreqFFT
toState
totalNumStaticBins
absoluteTimestampOfImpact
anyOffWristAfterImpact
aopTimestampOfImpact
continuousLockedBeforeImpact
continuousOffWristBeforeImpact
continuousStaticAndVerticalBeforeImpact
coreMotionWristStateHistoryEndimestamp
coreMotionWristStateHistoryStartTimestamp
coreMotionWristStateHistoryState
gatingEnabled
gatingLockedNoMotionPreImpact
gatingMotionPreImpact
gatingOffWristPostImpact
gatingOffWristPreImpact
gatingOnCharger
hasMotionBeforeImpact
lastChargerState
lastChargerStateDuration
lastChargerStateDurationThreshold
lastCoreMotionWristState
lastCoreMotionWristStateDuration
lastCoreMotionWristStateDurationPostEnd
lastCoreMotionWristStateDurationPostStart
lastCoreMotionWristStateDurationPostThreshold
lastCoreMotionWristStateDurationPreEnd
lastCoreMotionWristStateDurationPreStart
lastLockedStateDurationPreEnd
lastLockedStateDurationPreStart
lastMotionState
lastMotionStateEndTime
lastMotionStateStartTime
lockStateHistoryEndTimestamp
lockStateHistoryStartTimestamp
lockStateHistoryState
motionLookbackBeforeImpactEndOfInterval
motionLookbackBeforeImpactStartOfInterval
motionStateHistoryEndTimestamp
motionStateHistoryStartTimestamp
motionStateHistoryState
relativeTimestampToImpact
aopTsImpact
aopTsNow
aopTsSensor
nPeaks
repetitiveMotion
repetitiveMotionEndTs
repetitiveMotionStartTs
crownUpDown
fallType
impactMaxAccelNormAlertThreshold
impactMaxAccelNormLoggingHeartRateThreshold
impactMaxAccelNormLoggingHighResolutionSensorDataThreshold
impactMaxAccelNormLoggingStatsThreshold
isADLImpact
isFallDetectionFeatureEnabled
metMinutePercentile90
metMinutePercentile95
metMinutePercentile98
metMinutePercentileActual
otherFallPosteriorRatioDetectionThreshold
slipFallPosteriorRatioDetectionThreshold
tripFallPosteriorRatioDetectionThreshold
userAgeBucket
accel100
accel800
aopTimestamp
dmAlwaysOn
fallState
fallStats
gyro100
gyro200
heartRate
meta
pressure
suppressionFeatures
wristState
resolution
response
accelPathLengthWithPeak
extrapolatedMaxAccelNorm
extrapolatedMaxMinusMin
jerkVectorMagMax
magMax
pathLengthDecorrelation
pathLengthDelaySpread
pathLengthHarmonicMean
simulated
trialCount
xJerkScalarMagMax
xMax
xMin
xZCTime
yJerkScalarMagMax
yMax
yMin
yZCTime
zJerkScalarMagMax
zMax
zMin
zZCTime
freq
cadence
horizontalRotationRateMax
impulseMagnitude
impulseStartTime
isCadenceConcordant
isFeasibleWalkingSpeed
isNotRunning
isPendular
isSufficientVerticalTwist
isSwingStanceCycle
isValid
loftEndTime
loftMagnitude
loftStartTime
pendulumResidual
previousImpulseStartTime
rawLoftSpeed
stanceProbability
verticalRotationRateMean
curImpulseStartTime
curLoftEndTime
curLoftStartTime
currentCadence
currentHorzRotRateMax
currentImpulseMagnitude
currentLoftMagnitude
currentMax
currentMin
currentWalkSpeedEstimate
firstLoft
lastZeroTime
loftEndDetected
loftStartDetected
prevLoftStartTime
previousHorzRotRateMax
previousMax
vertRotationRateMean
waitingToConfirmLoft
altitude
decimalYear
declination
latitude
longitude
magnitudeVar
isAvgGrav
sampleNumMod3
subType
triggerEnabled
triggerOn
varianceX
varianceY
varianceZ
allowRelaxedGyroMean
gyroMean
gyroVariance
stillOnAll
temperatureBias
axis
dynamicBiasEstimate
estimateErrorMetric
rawGyroTemperature
subFitError
intercept
lastMiniCal
slope
sample
temperature
fsync
sampleNum
lastSampleId
slowOptical
conchaMinAccepted
newOpenLid
oldOpenLid
tragusMinAccepted
baseline
conchaOpenResponse
filter
minimum
above
below
current
moving
partialin
stable
threshold
upright
upsidedown
walking
last
correlation
deltatip
instability
tilt
maximum
from
ringBufferUpdated
runningMinAccepted
codedInvocation
fromName
toName
accelBatch
accelGesture
accelGps
accelOscarEmu
accelerometerPace
accessoryAccel
accessoryAccelConfig
accessoryConfig
accessoryDeviceMotion
accessoryDeviceMotionConfig
accessoryGyro
accessoryGyroCachedBias
accessoryGyroConfig
accessoryGyroGYTT
accessoryInEarStatus
accessoryProx
accessoryProxSensorDrop
accessoryProxTempComp
accessoryProximityConfig
accessoryWake
accessoryWakeDebug
airpodEvent
alsData
anchorCorrection
arSessionState
audioAccessoryDeviceMotion
auxiliaryDeviceMotion
bTConnection
basebandSpeed
bioMotionPose
bleedToZeroCorrection
bodyMetrics
braveHeartAccel
braveHeartDeviceMotion
braveHeartNatalieData
braveHeartVO2MaxInput
braveHeartWorkoutEvent
calorimetryPauseEvent
catherineHealthKitData
cftime
clefCalibration
coarseElevationChange
compass
compassAlignment
compassCalibration
compassCalibrationAttempt
compassConstraints
compassCorrection
constrainedIntegratorPose
coprocessorReplyGaitMetrics
courseConstraints
courseCorrection
deviceMotionAlwaysOn
deviceMotionCovariance
doubleTap
elevationChange
emergencyState
enhancedDeviceMotion
facePose
fallDetectionDetector
fallDetectionGyroControllerReplay
fallDetectionReplay
fallDetectionStateMachine
fallDetectionWristStateReplay
fallFalsePositiveSuppressionFeatures
fallSnippet
frequencyResponse
gaitCycleSegment
gaitCycleSegmentationState
geomagneticData
gravityConstraints
gravityCorrection
gyroBiasAndVariance
gyroBiasConstraints
gyroBiasCorrection
gyroBiasEstimateError
gyroBiasFit
gyroCalibrationDataFactory
gyroCalibrationDataNonlinearNonFactory
gyroCalibrationSample
gyroCalibrationSampleNonlinear
gyroCompass
gyroDt
gyroFactoryCalibrationData
gyroGps
gyroOscarEmu
gyroTemperature
inEarAdditionalState
inEarBaseline
inEarBaselining
inEarConstraints
inEarOpenLid
inEarOptical
inEarSession
inEarTransition
inEarTransitionEntry
interpolatedAccessoryAccel
intersiloNSCodingData
jointLinkModelPose
kappaTrigger
locationOscarEmu
lslHeadingEstimation
magneticAccessoryType1
magneticAccessoryType2
magnetometer
metsInfo
mobilityBoutMetrics
motionActivity
motionGPSLocation
motionHint
motionLocation
motionLoiData
motionStateUpdate
motionWifiAssociation
motionWifiLocation
movementStats
movementStatsGravityProjection
movementStatsSignal
natalieData
nonlinearBiasFit
odometer
odometerWithAltitude
onsetHeartRateData
pearlAttitude
predictedRelativeDeviceMotion
pressureCalibration
pressureCompensated
pressureFiltered
pressureFilteredNoTemperature
pressureGps
pressureOscarEmu
prox
relDMInSystemConfig
relativeDeviceMotionComplexTransition
relativeDeviceMotionCorrelatedMotion
relativeDeviceMotionInternal
relativeGravityConstraints
relativeGravityCorrection
sessionOverride
signalEnvironment
spuPlaybackExampleDeviceMotion
spuPlaybackExampleMotionStateUpdate
stepCadenceToStrideLengthBin
stepCountEntry
streamingHeartRateData
strideCalBin
tapAccept
tapDetect
tempestPoCAuxiliaryDeviceMotion
tempestPoCListenerOrientation
touchOscarEmu
userStudyEvent
vibrationEvent
vioEstimation
vioPose
vioReplayPose
visualLocalization
visualLocalizationAttitudeConstraints
visualLocalizationAttitudeCorrection
vo2MaxOutput
walkingDetectionResult
watchOnWristState
watchOrientationSettings
wifiScanResults
workoutEvent
workoutRecorderALSData
workoutRecorderAccel
workoutRecorderAccel800
workoutRecorderBodyMetrics
workoutRecorderElevation
workoutRecorderHealthKitInfo
workoutRecorderHeartRate
workoutRecorderOdometer
workoutRecorderPressure
workoutRecorderRotationRate
workoutRecorderWatchOrientationSettings
workoutRecorderWifiScanResults
workoutRecorderWorkoutEvent
zeroVelocityCorrection
avgHorizontalDecelMax
avgHorizontalDecelThresholdCoupled
impactThresholdUncoupled
inertialAccel
isMounted
isSimulated
nAccelGap
nFullAccel
nFullDM
nOldAccel
nOldDM
nOldDt
nPrecondition
nUseNearest
numResets
prevQ
rawClampedAccel
shouldTrigger
triggerPathBitmap
globalReferenceFrame
locationTimestamp
machContinuousLocationTimestamp
machContinuousTimestamp
polylinesLocation1Latitude
polylinesLocation1Longitude
polylinesLocation2Latitude
polylinesLocation2Longitude
roadID
rotationFromGlobalToCameraFrame
rotationFromGlobalToDeviceFrame
rotationalAccuracyInRadians
course
courseAccuracy
horizontalAccuracy
locationLoggingEnabled
speed
speedAccuracy
verticalAccuracy
accessoryType
isAttached
uuid
isCharging
metsDiff
metsHR
metsWR
asymmetryPercentage
asymmetryPercentageIsValid
asymmetryPercentageRejectionStatus
doubleSupportPercentage
doubleSupportPercentageIsValid
doubleSupportPercentageRejectionStatus
endTime
invalidGradePercentage
numGaitMetrics
rejectionStatus
stepCount
stepLength
stepLengthIsValid
stepLengthRejectionStatus
terminationReason
walkingSpeed
walkingSpeedIsValid
walkingSpeedRejectionStatus
drivingArmLikelihoodSum
drivingStowedLikelihoodSum
estExitTime
exitState
isStanding
isVehicleConnected
mountedConfidence
mountedState
rawConfidence
rawType
ssLikelihoodSum
typeYouth
vehicularBasebandHint
vehicularBtHint
vehicularConfidence
vehicularGpsHint
vehicularMotionHint
vehicularWifiHint
workoutDetectionTime
workoutDetectionType
workoutEscalationTime
deltaDistance
deltaDistanceAccuracy
horzUncSemiMaj
horzUncSemiMajAz
horzUncSemiMin
originDevice
timestampGps
undulation
undulationModel
event
value
groundAltitude
groundAltitudeUncertainty
isPrefilteredLocation
matchQuality
maxAbsSlope
rawAltitude
rawUndulation
rawUndulationModel
rawVerticalAccuracy
arrivalDate
confidenceOfGeoLocation
departureDate
distanceToLoi
uncertaintyOfGeoLocation
withinDistance
caltype
hidTimestamp
isMoving
isVehicular
machineFrequency
motionType
mounted
rowStrokeAmplitude
rowStrokeFrequency
rowStrokePower
standing
turn
vectorMagnitude
wallStartTime
isWifiAssociated
walkingVariable01
adjustedTimestamp
gravity
rawProjectedSignal
horizontalRotationRateFiltered
verticalRotationRateFiltered
verticalUserAcceleration
walkSpeedFilteredSample
activityType
duration
fGpsAvailability
fractionalGrade
gradeType
metSource
rawGradeType
error
errorX
errorY
errorZ
overlap
gpsAltitude
gpsSpeedAccuracy
rawSpeed
gpsCourseAccuracy
gpsCourseRadians
smoothedGPSAltitude
smoothedGPSAltitudeUncertainty
context
dataSource
interpolation
sinceLastGood
focalLength
height
origin
pitch
principlePoint
roll
transform
width
lastStateTimestamp
qStartW
qStartX
qStartY
qStartZ
qStopW
qStopX
qStopY
qStopZ
rBoresightX
rBoresightY
rBoresightZ
srcTimestamp
targetTimestamp
useForwardPrediction
inertialX
inertialY
inertialZ
maxTemp
medTocFactoryTemp
medianToc
detectionMask
name
auxHorizontalRotation
auxHorizontalTranslation
auxOmegaInertial_X
auxOmegaInertial_Y
auxOmegaInertial_Z
auxUserAccelInertial_X
auxUserAccelInertial_Y
auxUserAccelInertial_Z
auxVerticalRotation
auxVerticalTranslation
horizontalRotationSimilarity
horizontalRotationSimilarityBaseline
horizontalRotationSimilarityThreshold
horizontalTranslationSimilarity
horizontalTranslationSimilarityBaseline
horizontalTranslationSimilarityThreshold
inComplexTransitionState
srcHorizontalRotation
srcHorizontalTranslation
srcOmegaInertial_X
srcOmegaInertial_Y
srcOmegaInertial_Z
srcUserAccelInertial_X
srcUserAccelInertial_Y
srcUserAccelInertial_Z
srcVerticalRotation
srcVerticalTranslation
verticalRotationSimilarity
verticalRotationSimilarityBaseline
verticalRotationSimilarityThreshold
verticalTranslationSimilarity
verticalTranslationSimilarityBaseline
verticalTranslationSimilarityThreshold
auxAvgOmegaAroundGravLong
auxAvgOmegaAroundGravShort
auxAvgOmegaLong
auxAvgOmegaShort
auxHistoricalOmegaStdMax
dotRotGrav
hasUnCorrelatedSrcMotion
isInCorrelatedActivity
isInCorrelatedMotion
likelyOnGymMachine
relOmegaMeanLong
relOmegaVarLong
relOmegaVarShort
srcAvgOmegaAroundGravLong
srcAvgOmegaAroundGravShort
srcAvgOmegaLong
srcAvgOmegaShort
srcRotationAxisAlignment
btzDisturbanceDuration
btzIsCurrentlyQuiescent
btzQuiescentDurationLoose
btzQuiescentDurationStrict
btzStaticPoseDuration
centeredBoresight
noiseVariance
pinnedBoresight
qHat_W
qHat_X
qHat_Y
qHat_Z
rBoresight_X
rBoresight_Y
rBoresight_Z
rHat_X
rHat_Y
rHat_Z
requestingCamera
stateVariance
tracking1IMU
trackingDisabled
trackingScheme
useRelaxedQuiescenceBounds
vHat_X
vHat_Y
vHat_Z
avgRotationMax
historicalDisturbanceDuration
historicalQuiescenceDuration
instAccelMagDiff
instRotationMax
lpfAccelMagDiff
measNoiseVar
sessionType
begin
strideLength
activeTime
count
currentPace
distanceSource
falseStepDetectorState
falseStepsSuppressed
firstStepTime
floorsAscended
floorsDescended
isOdometerDistance
isOdometerPace
pedometerArmConstrainedState
pushCount
rawDistance
recordId
sourceId
kValue
peakHalfWidth
peakMagnitude
peakTime
tapAcceptStatus
tapCounter
clippedPeakType
direction
peakValue
strideDirection
tapDetectStatus
widthCalculationMethod
auxiliaryIosTimeUncertainty
sensorTimeBeforeAlignment
sentCftime
sourceIosTimeUncertainty
sourceReceiveCftime
sourceReceiveSensorTimestamp
version
angularVelocityConstraintRps
consumedAuxTimestamp
dthetaNormRad
inBTZ
listenerPitch
listenerRoll
listenerYaw
machAbsTimestamp
receivedAuxTimestamp
touchDetected
accelBias
accelBiasCov
cameraImageResolutionHeight
cameraImageResolutionWidth
cameraIntrinsics
cameraPose
gyroBias
gyroBiasCov
machContinuousOriginTimestamp
orientationCov
originTimestamp
position
positionCov
trackingState
velocityCov
currentTimestamp
latestInertialTimestamp
latestInertialTimestampMeta
positionX
positionY
positionZ
predictionComputeTimeMeta
predictionTimeMeta
propagationTimeMeta
rotationMatrixElement
grade
hasGps
hasStrideCal
heartRateConfidence
isStroller
pace
durationInSeconds
estimatedVo2Max
filteredVo2Max
hrMax
hrMin
isDeviceVibrating
compassBias
estimatedBiasUncertainty
estimatedHeading
lslGlobalToDeviceFrameRotationMatrix
lslHeadingAccuracy
lslHeadingConfidence
altitudeOfLocalizedPoseInEcefCoordinate
covariance
horizontalAccuracyOfLocalizedPoseInEcefCoordinate
latitudeOfLocalizedPoseInEcefCoordinate
longitudeOfLocalizedPoseInEcefCoordinate
transformMatrixFromCameraToEcefCoordinate
deltaHeading
gravityZ
meanRotRate
dataRate
isInterpolated
isMissingSamples
isWalkingFiltered
isWalkingRaw
maxSampleDeltaInSecond
pedEnergyPlane
pedEnergyZ
pedEnergyZByPlane
pedEnergyZPeak
reversedTimestampCounts
thetaPitchFaceDeg
thetaRollFaceDeg
thetaYawFaceDeg
date
isForcedOnWristEnabled
isOnCharger
isWristDetectionEnabled
onWrist
onWristConfidence
onWristSensor
wrist
entryId
rssi
entries
workoutLocationType
restingHeartRate
walkingHeartRateAverage
workoutActivityType
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
1.2.11
com.apple.locationd.Legacy
Generic_deprecated
Generic
const CMVectorBufferBase::Element CMVectorBufferBase<float, 3>::mean(size_t, size_t) const [T = float, N = 3]
CoreLocation: Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 93,mean() on empty buffer.
const T &CMQueue<CMVector<float, 3> >::operator[](const size_t) const [T = CMVector<float, 3>]
CoreLocation: Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMQueue.h, line 201,i,%zu,capacity,%u.
T &CMVector<float, 3>::operator[](const size_t) [T = float, N = 3]
CoreLocation: Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMVector.h, line 277,invalid index %zu >= %zu.
T CMVector<float, 3>::operator[](const size_t) const [T = float, N = 3]
CoreLocation: Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMVector.h, line 271,invalid index %zu >= %zu.
CoreLocation: D(%zu) <= 0 non-positive definite matrix!
T CMMatrix<float, 3, 3>::operator()(size_t, size_t) const [T = float, M = 3, N = 3]
CoreLocation: Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMMatrix.h, line 70,invalid row %zu > %zu.
CoreLocation: Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMMatrix.h, line 71,invalid col %zu > %zu.
CoreLocation: Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMFactoredMatrix.h, line 125,invalid element %zu <= %zu.
CMVectorBufferBase::Element CMVectorBufferBase<float, 3>::back() const [T = float, N = 3]
CoreLocation: Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 145,back() on empty buffer.
T &CMMatrix<float, 3, 3>::operator()(size_t, size_t) [T = float, M = 3, N = 3]
CoreLocation: Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMMatrix.h, line 77,invalid row %zu > %zu.
CoreLocation: Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMMatrix.h, line 78,invalid col %zu > %zu.
CoreLocation: Assertion failed: ldx < M*N, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMMatrix.h, line 84,invalid element %zu >= %zu.
CoreLocation: D[%zu] <= 0, matrix ! positive definite
const CMVectorBufferBase::Element &CMVectorBufferBase<float, 3>::operator[](const size_t) const [T = float, N = 3]
CoreLocation: Assertion failed: i < size(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 45,out of buffer range %zu.
const CMVector<T, N> CMVectorBufferBase<float, 3>::variance(size_t, size_t) const [T = float, N = 3]
CoreLocation: Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 210,variance() on empty buffer.
CoreLocation: %zu: alpha <= 0, matrix ! positive definite
void CMMediaSessionAnalyticsTracker::AccumulatedEvent::start(const NSString *)
CoreLocation: [CMMediaSessionAnalyticsTracker] Metric %s: Calling start when we've already started.
void CMMediaSessionAnalyticsTracker::AccumulatedEvent::stop(const NSString *)
CoreLocation: [CMMediaSessionAnalyticsTracker] Metric %s: Calling stop when we haven't started.
double CMMediaSessionAnalyticsTracker::StatEvent::average() const
CoreLocation: [CMMediaSessionAnalyticsTracker] This metric was never initialized before computing average.
void CMMediaSessionAnalyticsTracker::send()
CoreLocation: [CMMediaSessionAnalyticsTracker] Trying to send analytics but the session duration was 0.0, not sending.
CoreLocation: [CMMediaSessionAnalyticsTracker] We've already sent analytics for this instance, was this intended? sent: %{public}d
com.apple.CoreMotion.Tempest.MediaSession
sessionDuration
accessoryHardwareModel
unknown
accessoryBudLocation
void CMMediaSessionAnalyticsTracker::send()_block_invoke
CoreLocation: [CMMediaSessionAnalyticsTracker] Sending basic analytics: 
%{private}@
@"NSDictionary"8@?0
sessionDurationType
percentSessionInBTZ
percentSourceActivityStateStatic
percentSourceActivityStateVehicular
percentSourceActivityStatePedestrian
timeBeforeFirstAuxSample
percent2IMUInVehicle
percent2IMUWhilePedestrian
percent1IMU
trackingModeSwitchCount
percentSessionInCT
percentSessionInCTIn1IMU
percentSessionInCTInVehicle
percentSessionInCTInPedestrian
numberOfCTEvents
numberOfCTEventsIn1IMU
numberOfCTEventsInVehicle
numberOfCTEventsInPedestrian
distractedViewingCount
trackingReEnabledViaTouchCount
trackingReEnabledViaSrcPickUpCount
trackingReEnabledViaAuxStaticCount
timeBeforeFirstValidPose
percentSessionSrcMoving
percentSessionAuxMoving
percentSessionAuxAndSrcMoving
percentSessionAuxAndSrcQuiescent
percentFeedAuxSuccess
percentRecentPoseAvailable
auxGyroBiasConvergenceDuration
maxGapBetweenAuxSamples
avgGapBetweenAuxSamples
maxGapBetweenBTZ
avgGapBetweenBTZ
minGapBetweenCTSeconds
avgGapBetweenCTSeconds
maxGapBetweenCTSeconds
minCTBTZCorrectionAngleDeg
avgCTBTZCorrectionAngleDeg
maxCTBTZCorrectionAngleDeg
minCTSrcYawRateDps
avgCTSrcYawRateDps
maxCTSrcYawRateDps
minCTAuxYawRateDps
avgCTAuxYawRateDps
maxCTAuxYawRateDps
minDistractedViewingDuration
maxDistractedViewingDuration
minBTZCorrectionAngleDeg
avgBTZCorrectionAngleDeg
maxBTZCorrectionAngleDeg
minAuxMotionToPoseLatency
avgAuxMotionToPoseLatency
maxAuxMotionToPoseLatency
CoreLocation: [CMMediaSessionAnalyticsTracker] Sending analytics : 
%{private}@
@"NSMutableDictionary"8@?0
com.apple.locationd.Motion
RelativeDeviceMotion
com.apple.CoreMotion.CMSedentaryTimer.client
com.apple.CoreMotion.CMSedentaryTimer.daemon
com.apple.locationd.registration
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
-[CMSedentaryTimer_Internal init]_block_invoke
CoreLocation: SedentaryAlarm,Error response,%{public}d
-[CMSedentaryTimer_Internal _isActive]
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _isActive.
-[CMSedentaryTimer_Internal _isActive]_block_invoke
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _isActive dispatch sync.
kCLConnectionMessageSedentaryTimerIsArmed
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _isActive, timer is %{public}d.
-[CMSedentaryTimer_Internal _handleStartStopTimerResponse:withHandler:]
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleStartStopTimerResponse dispatching handler.
-[CMSedentaryTimer_Internal _handleStartStopTimerResponse:withHandler:]_block_invoke
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleStartStopTimerResponse calling handler.
CoreLocation: SedentaryAlarm,Error start / stop response,%{public}d
CoreLocation: SedentaryAlarm,Error start / stop response.
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleStartStopTimerResponse CMErrorNULL.
kCLConnectionMessageSedentaryTimerStart
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleStartStopTimerResponse timer is armed.
kCLConnectionMessageSedentaryTimerStop
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleStartStopTimerResponse timer is not armed.
-[CMSedentaryTimer_Internal _handleAlarmDataResponse:withHandler:]
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse nil response dispatching handler.
-[CMSedentaryTimer_Internal _handleAlarmDataResponse:withHandler:]_block_invoke
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse nil response calling handler.
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse error.
CoreLocation: SedentaryAlarm,Error query response,%{public}d
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse error dispatching.
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse alarmDataArray.
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse alarmDataArray dispatching.
CoreLocation: SedentaryAlarm,Error parsing alarm data.
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse else dispatching.
-[CMSedentaryTimer_Internal _registerForAlarmsWithHandler:]
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _registerForAlarmsWithHandler.
kCLConnectionMessageSedentaryTimerAlarm
-[CMSedentaryTimer_Internal _registerForAlarmsWithHandler:]_block_invoke
CoreLocation: [SedentaryTimerTriage] SedentaryAlarm _registerForAlarmsWithHandler, setting handler for message.
timerArmed
TB,N,GisTimerArmed,V_timerArmed
kCLConnectionMessageSedentaryTimerIsAvailable
CMSedentaryTimer.mm
Invalid parameter not satisfying: %@
handler
queryHandler
kCLConnectionMessageSedentaryTimerQuery
updateHandler
kCLConnectionMessageSubscribeKey
_internal
T@"CMSedentaryTimer_Internal",R,N,V_internal
Motion
kCLConnectionMessageMotionActivityAvailable
com.apple.CoreMotion.CMMotionActivityManager
kCLConnectionMessageMotionActivityUpdate
-[CMMotionActivityManager init]_block_invoke
CoreLocation: Error occurred while trying to retrieve motion state update: CMErrorDomain Code:%{public}d
CoreLocation: Unable to parse kCLConnectionMessageMotionActivityUpdate message!
CMMotionActivityManager.mm
start
queue
kCLConnectionMessageMotionActivityQuery
Activity
DeviceMotion
kNatalieDataCodingKeyStartDate
kNatalieDataCodingKeyRecordId
kNatalieDataCodingKeySession
kNatalieDataCodingKeyMets
kNatalieDataCodingKeyNatalies
kNatalieDataCodingKeyBasalNatalies
kNatalieDataCodingKeySourceId
%@, <recordId %lu, startDate %@, session %@, mets %@, natalies %@, basalNatalies %@, sourceId %@>
Tq,R,N
T@"NSUUID",R,N
T@"NSDate",R,N
T@"NSNumber",R,N
kCMAccelerationCodingKeyX
kCMAccelerationCodingKeyY
kCMAccelerationCodingKeyZ
x %f y %f z %f @ %f
T{?=ddd},R,N
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
CMErrorDomain
kCMStrideCalibrationHistoryCodingKeyCalibrationTracks
kCMStrideCalibrationHistoryCodingKeyRawSpeedToKValueBins
kCMStrideCalibrationHistoryCodingKeyStepCadenceToStrideLengthBins
supportsSecureCoding
TB,R
calibrationTracks
T@"NSArray",&,N,V_calibrationTracks
rawSpeedToKValueBins
T@"NSArray",&,N,V_rawSpeedToKValueBins
stepCadenceToStrideLengthBins
T@"NSArray",&,N,V_stepCadenceToStrideLengthBins
kCMAltitudeCodingKeyAltitude
kCMAltitudeCodingKeyPressure
Altitude %f Pressure %f @ %f
relativeAltitude
CMAltitude.mm
sourceId && startDate && endDate && elevationAscended && elevationDescended
kCMSignificantElevationCodingKeyRecordId
kCMSignificantElevationCodingKeySourceId
kCMSignificantElevationCodingKeyStartDate
kCMSignificantElevationCodingKeyEndDate
kCMSignificantElevationCodingKeyElevationAscended
kCMSignificantElevationCodingKeyElevationDescended
%@, <startDate, %@, endDate, %@, elevationAscended, %@ elevationDescended, %@>
TQ,R,N,VfRecordId
T@"NSUUID",R,N,VfSourceId
T@"NSDate",R,N,VfStartDate
T@"NSDate",R,N,VfEndDate
T@"NSNumber",R,N,VfElevationAscended
T@"NSNumber",R,N,VfElevationDescended
kCMVehicleStateDataCodingKeyTimeRange
kCMVehicleStateDataCodingKeyDeviceId
%@,<startDate %@, endDate %@, deviceId %@>
timeRange
T@"CMMotionTimeRange",R,N
deviceId
T@"NSString",R,N
kCLConnectionMessageVehicleStateIsAvailable
kCLConnectionMessageVehicleStateMostRecentVehicleConnection
+[CMVehicleState mostRecentVehicleConnection]
CoreLocation: Error querying most recent vehicle connection, %@
kCLConnectionMessageVehicleStateMostRecentInVehicle
+[CMVehicleState mostRecentInVehicle]
CoreLocation: Error querying most recent in vehicle data, %@
kCLConnectionMessageVehicleStateIsVehicle
+[CMVehicleState isVehicleBasedOnDeviceId:deviceType:]
CoreLocation: Error querying vehicle device status, %@
kCLConnectionMessageVehicularState
kCLConnectionMessageVehicularOperatorState
+[CMVehicleState vehicularOperatorState]
CoreLocation: Error querying vehicular operator state, %@
kRMConnectionMessageNameKey
kRMConnectionMessageDataKey
RMConnectionStreaming
kRMConnectionRequestSteamingKey
assert
[handler conformsToProtocol:@protocol(RMConnectionStreamProducingDelegate)]
%s:%d: assertion failure in %s
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Framework/CoreMotion/RMConnection/RMConnectionEndpoint.m
-[RMConnectionEndpoint handleXpcMessage:replyBlock:]
kRMConnectionMessageSuccess
v24@?0@"NSString"8@"NSData"16
v16@?0@"NSObject<OS_xpc_object>"8
-[RMConnectionEndpoint start]
self.messagingConnection
self.dataDelegate
self.connectionDelegate
-[RMConnectionEndpoint sendMessage:withData:]
-[RMConnectionEndpoint sendMessage:withData:reply:]
kRMConnectionMessageDataStream
kRMConnectionMessageDataStreamKey
v16@?0@"NSData"8
self.streamingServerConnection
-[RMConnectionEndpoint stopServingStream]
[self.dataDelegate conformsToProtocol:@protocol(RMConnectionStreamConsumingDelegate)]
-[RMConnectionEndpoint startReceivingStreamOnConnection:errorHandler:]
kRMConnectionMessageError
!self.streamingClientListener
-[RMConnectionEndpoint requestStreamWithMessage:data:errorHandler:]
streamingServerConnection
T@"NSObject<OS_xpc_object>",&,N,V_streamingServerConnection
streamingClientConnection
T@"NSObject<OS_xpc_object>",&,N,V_streamingClientConnection
streamingClientListener
T@"NSObject<OS_xpc_object>",&,N,V_streamingClientListener
messagingConnection
T@"NSObject<OS_xpc_object>",&,N,V_messagingConnection
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
connection
T@"NSObject<OS_xpc_object>",R,N
connectionDelegate
T@"<RMConnectionLifecycleDelegate>",W,N,V_connectionDelegate
dataDelegate
T@"<RMConnectionDataDelegate>",W,N,V_dataDelegate
com.apple.RelativeMotion
com.apple.locationd
com.apple.springboard
com.apple.locationd.DumpDiagnostics
NSLocationUsageDescription
NSLocationAlwaysUsageDescription
NSLocationWhenInUseUsageDescription
NSLocationAlwaysAndWhenInUseUsageDescription
NSLocationTemporaryUsageDescriptionDictionary
NSLocationDefaultAccuracyReduced
NSWidgetWantsLocation
WKWatchOnly
WKRunsIndependentlyOfCompanionApp
void CLCommonSetRunLoop(CFRunLoopRef)
CoreLocation: #Warning Changing CLCommon's runloop after it was already established
CoreLocation: #Warning Setting CLCommon's runloop after it was already established
CoreLocation: CLCommonSetRunLoop, %p
mobile
int CLCommonCopyFile(const char *, const char *)
CoreLocation: cannot open source file: %{public}s, errno %{public}d
CoreLocation: cannot open target file: %{public}s, errno %{public}d
CoreLocation: error reading source file: %{public}s
CoreLocation: error writing target file: %{public}s
int CLCommonBzipFile(const char *, const char *)
CoreLocation: cannot open compression stream: %{public}s, bzerror %{public}d
CoreLocation: error writing target file: %{public}s, bzerror: %{public}d
CoreLocation: error closing target file: %{public}s, bzerror: %{public}d
compress:%@
CLAutoOSTransaction::CLAutoOSTransaction(const char *, CLAutoOSTransaction::LoggingPolicy)
CoreLocation: os_transaction created: (%p) %@
com.apple.locationd.Utility
CLAutoOSTransaction::~CLAutoOSTransaction()
CoreLocation: os_transaction releasing: (%p) %@
__TEXT
Binary Images:
armv6
armv7
%16p - %lld %c%s %s <
%02X
> %s
SpatialLoggerMutex
CMSpatialLogger::CMSpatialLogger(const char *, const char *)
CoreLocation: [CMSpatialLogger] Starting up.
void CMSpatialLogger::logEvent(const char *const)
CoreLocation: [CMSpatialLogger] Logging event: %{private}s timestamp: %{private}f
CMMsl::WriterManager<CLLegacyFileManager>::WriterManager(CMMsl::WriterManagerConfig) [FileManager = CLLegacyFileManager]
CoreLocation: Unable to create directory at path: %{public}s
fValid
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Motion/Msl/CMMslWriterManager.h
writeItem
_%Y-%m-%d_%H:%M:%S
void CMMsl::WriterManager<CLLegacyFileManager>::openForTimestamp(CFTimeInterval) [FileManager = CLLegacyFileManager]
CoreLocation: Unable to open writer for file: %{public}s
void CMMsl::WriterManager<CLLegacyFileManager>::purgeFiles() [FileManager = CLLegacyFileManager]
CoreLocation: Msl files on disk:
CoreLocation:   %{private}s
CoreLocation: MSLWriter - deleting: %{private}s
com.apple.locationd.Core
Core
activity
CoreLocation: Default handler received message %s
Client
Gyro
void CMRelDMFwdPredictor::feed(const CMOQuaternion &, const CMOQuaternion &, const uint64_t)
CoreLocation: Timestamp %{public}llu not long enough since previous %{public}llu. Skipping this sample.
CoreLocation: Time interval between feeds is %{public}lf, max value is %{public}f
CMOQuaternion CMRelDMFwdPredictor::getPredictedRelAttitude(uint64_t &) const
CoreLocation: History buffer is empty, can't predict
CoreLocation: Prediction target timestamp %{public}llu must be after last timestamp in buffer %{public}llu
CMOQuaternion CMRelDMFwdPredictor::predictKinematics(const CFTimeInterval) const
CoreLocation: [CMRelDMFwdPredictor] dt is less than %f.
CMRelDMFwdPredictor::OmegaState CMRelDMFwdPredictor::medianVector3d(const CMFixedSizeQueue<CMRelDMFwdPredictor::OmegaState, kQBufferLen - 1> &, const size_t) const
CoreLocation: [CMRelDMFwdPredictor] Index out of range of relative w buffer
const T &CMQueue<CMRelDMFwdPredictor::AttitudeState>::operator[](const size_t) const [T = CMRelDMFwdPredictor::AttitudeState]
const T &CMQueue<CMRelDMFwdPredictor::OmegaState>::operator[](const size_t) const [T = CMRelDMFwdPredictor::OmegaState]
static bool CLNameValuePair::encodeBase64(const void *, unsigned long, std::string &)
CoreLocation: processed %p %d to (%s)
CLNameValuePair::CLNameValuePair()
CoreLocation: could not create new mutable dictionary
CLNameValuePair::CLNameValuePair(CFDictionaryRef)
CLNameValuePair::CLNameValuePair(const CLNameValuePair &)
Memory
virtual bool CLNameValuePair::loadFromFile(const char *)
CoreLocation: could not deserialize property list from %{public}s
CoreLocation: file %s does not exist... clearing, error, %s
CoreLocation: #Warning Error reading file %{public}s: %{public}s
bool CLNameValuePair::writeDataToFile(const char *, CFDataRef, CLNameValuePair::CLNVPDataProtection) const
CoreLocation: Could not create NSURL for file: %{public}s
CoreLocation: Could not write data to disk %{public}s, %{public}s
virtual bool CLNameValuePair::saveToFile(const char *) const
CoreLocation: Could not serialize data for file %{public}s
virtual bool CLNameValuePair::saveToBinaryFile(const char *, CLNameValuePair::CLNVPDataProtection) const
virtual void CLNameValuePair::clearInternal(const CFStringRef, int)
CoreLocation: key %{public}s does not have element %{public}d in array of size %{public}ld
CoreLocation: key %{public}s does not have element %{public}d in non-array type %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, bool &, int) const
CoreLocation: Unsupported type at %@:%@ (domain:key)
virtual bool CLNameValuePair::get(CFStringRef, uint16_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, short &, int) const
virtual bool CLNameValuePair::get(CFStringRef, uint32_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int64_t &, int) const
virtual bool CLNameValuePair::get(CFStringRef, int &, int) const
virtual bool CLNameValuePair::get(CFStringRef, long &, int) const
virtual bool CLNameValuePair::get(CFStringRef, double &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CLNameValuePair &, int) const
virtual bool CLNameValuePair::get(CFStringRef, std::string &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFArrayRef &) const
CoreLocation: type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
virtual bool CLNameValuePair::get(CFStringRef, CFDataRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, CFStringRef &, int) const
virtual bool CLNameValuePair::get(CFStringRef, const char *&, unsigned int &, int) const
virtual bool CLNameValuePair::copyInternal(CFStringRef, CFTypeRef &, int) const
CoreLocation: specified index is out of range for key %{public}s (%{public}d of %{public}ld)
CoreLocation: specified index %{public}d not applicable to type %{public}lu for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const bool &)
CoreLocation: could not create cf type for key %{public}s
virtual bool CLNameValuePair::set(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::set(CFStringRef, const short &)
virtual bool CLNameValuePair::set(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::set(CFStringRef, const int &)
virtual bool CLNameValuePair::set(CFStringRef, const long &)
virtual bool CLNameValuePair::set(CFStringRef, const double &)
virtual bool CLNameValuePair::set(CFStringRef, const char *)
virtual bool CLNameValuePair::set(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::insert(CFStringRef, const bool &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint16_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const short &)
virtual bool CLNameValuePair::insert(CFStringRef, const uint32_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int64_t &)
virtual bool CLNameValuePair::insert(CFStringRef, const int &)
virtual bool CLNameValuePair::insert(CFStringRef, const long &)
virtual bool CLNameValuePair::insert(CFStringRef, const double &)
virtual bool CLNameValuePair::insert(CFStringRef, const char *)
virtual bool CLNameValuePair::insert(CFStringRef, const CLNameValuePair &)
virtual bool CLNameValuePair::serializeBinary(CFDataRef *) const
CoreLocation: could not create write stream
CoreLocation: could not open write stream
unknown error
CoreLocation: could not write data, error code, %{public}ld, error domain, %{public}s
virtual bool CLNameValuePair::deserialize(const CFDataRef)
CoreLocation: could not create intermediate property list - %{public}ld (%{public}s)
virtual void CLNameValuePair::print() const
CoreLocation: %s
<empty>
static void CLNameValuePair::printKeyValue(const void *, const void *, void *)
CoreLocation: 
%s = <dictionary (%ld entries)>:
CoreLocation: 
%s = %s
CoreLocation: 
%s = %0.6f
CoreLocation: 
%s = %d
CoreLocation: 
%s = <unhandled value type %lu>
type ID does not match - %lu vs %lu
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
%s[%d]
static bool CLNameValuePair::fromCfType(const CFTypeRef, short &)
CoreLocation: could not get value
static bool CLNameValuePair::fromCfType(const CFTypeRef, int64_t &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, long &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, double &)
CoreLocation: type IDs do not match - %{public}lu vs %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, std::string &)
CoreLocation: could not convert to C string
CoreLocation: can't convert %{public}u data bytes
CoreLocation: #Warning type IDs do not match - %{public}lu
static bool CLNameValuePair::fromCfType(const CFTypeRef, const char *&, unsigned int &)
static bool CLNameValuePair::fromCfType(const CFTypeRef, CLNameValuePair &)
Direct_deprecated
error == 0
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Daemon/Core/CSI/CLMachThreadSupport.mm
lock
info->fCount >= 0
(info->fCount == 0) || (info->fOwner == curThread)
(info->fCount > 0) || (info->fOwner == __null)
info->fCount > 0
unlock
CMFallStats.mm
A fast enumeration is already started
activityLevel
fastAccel
fastGyro
impact
-[CMFallStatsItemsIterator countByEnumeratingWithState:objects:count:]
CoreLocation: Unknown fall snippet node [cftime=%f] - update CMFallStats
CoreLocation: Unknown Msl node in a fall snippet sequence [cftime=%f] - update CMFallStats
kCMFallStatsCodingKeyData
-[CMFallStats _decodeMeta]
CoreLocation: Decoded CMFallStats meta and found fall snippet metadata item [%s]
%@, Time,%.3lf,Type,CMFallStats,fallType,%d,isNearFall,%d
iOStime
Td,R,N,V_iOStime
Ti,R,N,V_fallType
TB,R,N,V_isNearFall
Fall
IsSimulator
<null>
<name>
<version>
<build>
hw.model
IOPlatformExpertDevice
IOPlatformSerialNumber
watch-companion
locationd
static CLPlatformInfo::MotionProviders CLPlatformInfo::motionProviders()
CoreLocation: Unsupported HW type %d; file a radar to Purple Motion Framework
CLPlatformInfo::MotionCapabilities CLPlatformInfo::queryMotionCaps()
CoreLocation: Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0
Utility
com.apple.demo-settings
StoreDemoMode
FProgramNumber
CMWorkout.mm
cmSwimWorkoutLocation == kCMSwimWorkoutLocationPool || cmSwimWorkoutLocation == kCMSwimWorkoutLocationOpenWater
cmWorkoutLocationType == kCMWorkoutLocationTypeIndoor || cmWorkoutLocationType == kCMWorkoutLocationTypeOutdoor
sessionId
type < kCMWorkoutTypeMax
locationType < kCMWorkoutLocationTypeMax
kCMWorkoutDataCodingKeySessionId
kCMWorkoutDataCodingKeyType
kCMWorkoutDataCodingKeyLocationType
kCMWorkoutDataCodingKeyStartDate
kCMWorkoutDataCodingKeyEndDate
NoWorkout
Walking
Running
Cycling
OutdoorCycling
IndoorCycling
Yoga
Dancing
CrossTraining
Elliptical
Climbing
StairClimbing
Rowing
ResistanceTraining
GenericWorkout
OutdoorWalking
IndoorWalking
OutdoorRunning
IndoorRunning
OutdoorWheelchairWalk
OutdoorWheelchairRun
Calisthenics
DownhillSkiing
Hiking
UndeterminedWorkout
Golfing
Unknown
FunctionalStrength
CoolDown
CoreTraining
Indoor
Outdoor
Unhandled workout location type
%@, <sessionId %@, type, %@, locationType, %@, startDate, %@, endDate, %@>
isUserInitiated
TB,R,N,V_isUserInitiated
locationType
location < kCMSwimWorkoutLocationMax
-[CMSwimWorkout initWithSessionId:location:poolLength:]
CoreLocation: Workout, pool length %f for workout is too small and may lead to undefined behavior.
-[CMSwimWorkout initWithSessionId:locationType:poolLength:]
-[CMSwimWorkout initWithSessionId:locationType:poolLength:startDate:endDate:]
kCMWorkoutDataCodingKeySwimLocation
kCMWorkoutDataCodingKeyPoolLength
Pool
OpenWater
%@, <sessionId %@, type, kCMWorkoutTypeSwimming, location, %@, poolLength, %f>
poolLength
Td,R,N
workoutType == kCMWorkoutTypeIndoorRunning || workoutType == kCMWorkoutTypeIndoorWalking || workoutType == kCMWorkoutTypeIndoorCycling || workoutType == kCMWorkoutTypeElliptical || workoutType == kCMWorkoutTypeStairClimbing || workoutType == kCMWorkoutTypeRowing
kCMWorkoutDataCodingKeyFitnessMachineManufacturerName
kCMFitnessMachineWorkoutDataCodingKeyModel
%@, <sessionId %@, type, %@, manufacturerName, %@, model, %@>
manufacturerName
model
kCMWorkoutDataCodingKeyWorkoutLabel
%@, <sessionId %@, label, %lu>
workoutLabel
TQ,R,N
Swimming
/Library/Caches/locationd/
root
static std::string CLPersistentStore::getMutableStorePath(CLPersistentStoreType)
CoreLocation: no mutable store path for type, %{public}d
CoreLocation: could not get mutable store path for type, %{public}d
/System/Library/Frameworks/CoreLocation.framework
SIMULATOR_ROOT
kCMDeviceMotionCodingKeyQuaternionX
kCMDeviceMotionCodingKeyQuaternionY
kCMDeviceMotionCodingKeyQuaternionZ
kCMDeviceMotionCodingKeyQuaternionW
kCMDeviceMotionCodingKeyUserAccelerationX
kCMDeviceMotionCodingKeyUserAccelerationY
kCMDeviceMotionCodingKeyUserAccelerationZ
kCMDeviceMotionCodingKeyRotationRateX
kCMDeviceMotionCodingKeyRotationRateY
kCMDeviceMotionCodingKeyRotationRateZ
kCMDeviceMotionCodingKeyMagneticFieldX
kCMDeviceMotionCodingKeyMagneticFieldY
kCMDeviceMotionCodingKeyMagneticFieldZ
kCMDeviceMotionCodingKeyMagneticFieldCalibrationLevel
kCMDeviceMotionCodingKeyDoingYawCorrection
kCMDeviceMotionCodingKeyDoingBiasEstimation
kCMDeviceMotionCodingKeyHeading
kCMDeviceMotionCodingKeySensorLocation
kCMDeviceMotionCodingKeyHeadingAccuracy
QuaternionX %f QuaternionY %f QuaternionZ %f QuaternionW %f UserAccelX %f UserAccelY %f UserAccelZ %f RotationRateX %f RotationRateY %f RotationRateZ %f MagneticFieldX %f MagneticFieldY %f MagneticFieldZ %f MagneticFieldAccuracy %d Heading %f SensorLocation %d @ %f
TB,R,N
Ti,R,N
headingAccuracy
T@"CMAttitude",R,N
magneticField
T{?={?=ddd}i},R,N
heading
sensorLocation
static bool CLLegacyFileManager::mkdirIfPossible(const std::string &)
CoreLocation: Unable to create directory at path: %{public}@, error, %{public}@
static std::vector<std::string> CLLegacyFileManager::listFilesWithExt(const std::string &, const std::string &)
CoreLocation: Unable to list files at path: %{public}s, error, %{public}@
static void CLLegacyFileManager::deleteFile(const std::string &)
CoreLocation: Unable to delete file %{public}s, error, %{public}@
kCMAttitudeCodingKeyQX
kCMAttitudeCodingKeyQY
kCMAttitudeCodingKeyQZ
kCMAttitudeCodingKeyQW
%@ Pitch: %f, Roll: %f, Yaw: %f
rotationMatrix
T{?=ddddddddd},R,N
T{?=dddd},R,N
void CMRelDMSensorFusionMekf::relativeGravityUpdate(const CMVector3d &, const CMVector3d &, float, float, uint64_t, bool)
CoreLocation: [CMRelDMSensorFusionMekf] Unexpected 0 accel magnitude.
void CMRelDMSensorFusionMekf::initialize(const CMRelDM::IMUData &, const CMRelDM::IMUData &, const CMRelDM::Pose &, uint64_t)
CoreLocation: [CMRelDMSensorFusionMekf] Already initialized
bool CMRelDMSensorFusionMekf::StateHistory::hasValidStateAtAnchorTime(uint64_t)
CoreLocation: [CMRelDMSensorFusionMekf][hasValidStateAtAnchorTime] Failed to find a valid state idx. anchorTime=%{public}llu, newestStateTime=%{public}llu
CoreLocation: [CMRelDMSensorFusionMekf][hasValidStateAtAnchorTime] Anchor time is ahead of current state time. anchorTime=%{public}llu, newestStateTime=%{public}llu
void CMRelDMSensorFusionMekf::bleedToZero(const CMRelDM::Pose &, uint64_t)
CoreLocation: [CMRelDMSensorFusionMekf] Must be initialized before bleeding to zero
void CMRelDMSensorFusionMekf::enter1IMUTracking()
CoreLocation: [CMRelDMSensorFusionMekf] Must be initialized before entering 1-IMU tracking mode
void CMRelDMSensorFusionMekf::exit1IMUTracking(const CMRelDM::BodyFaceTransform &, bool)
CoreLocation: [CMRelDMSensorFusionMekf] Must be initialized before exiting 1-IMU tracking mode
void CMRelDMSensorFusionMekf::propagate(const CMRelDM::IMUData &, const CMRelDM::IMUData &, float, bool)
CoreLocation: [CMRelDMSensorFusionMekf] Must be initialized before propagating
const T &CMQueue<CMRelDM::State>::operator[](const size_t) const [T = CMRelDM::State]
const CMRelDM::State &CMRelDMSensorFusionMekf::StateHistory::getState(size_t) const
CoreLocation: [StateHistory::getState] Invalid idx, returning latest index.
const CMVector3d &CMRelDM::BodyFaceTransform::r_fb() const
CoreLocation: [BodyFaceTransform] BodyFaceTransform has not been set.
const CMOQuaternion &CMRelDM::BodyFaceTransform::q_bf() const
bool CMFactoredMatrix<float, 9>::factor(const CMMatrix<T, N, N> &) [T = float, N = 9]
T CMMatrix<float, 9, 9>::operator()(size_t, size_t) const [T = float, M = 9, N = 9]
T &CMFactoredMatrix<float, 9>::U(size_t, size_t) [T = float, N = 9]
T &CMMatrix<float, 9, 9>::operator()(size_t, size_t) [T = float, M = 9, N = 9]
T CMVector<float, 9>::operator[](const size_t) const [T = float, N = 9]
T &CMMatrix<float, 3, 9>::operator()(size_t, size_t) [T = float, M = 3, N = 9]
CMVector<T, N> CMFactoredMatrix<float, 9>::biermanObservationalUpdate(const CMMatrix<T, P, N> &, const CMVector<T, P> &, const CMVector<T, P> &) [T = float, N = 9, P = 3]
T CMMatrix<float, 3, 9>::operator()(size_t, size_t) const [T = float, M = 3, N = 9]
T &CMVector<float, 9>::operator[](const size_t) [T = float, N = 9]
T &CMMatrix<float, 6, 9>::operator()(size_t, size_t) [T = float, M = 6, N = 9]
T &CMVector<float, 6>::operator[](const size_t) [T = float, N = 6]
CMVector<T, N> CMFactoredMatrix<float, 9>::biermanObservationalUpdate(const CMMatrix<T, P, N> &, const CMVector<T, P> &, const CMVector<T, P> &) [T = float, N = 9, P = 6]
T CMMatrix<float, 6, 9>::operator()(size_t, size_t) const [T = float, M = 6, N = 9]
T CMVector<float, 6>::operator[](const size_t) const [T = float, N = 6]
const T &CMQueue<unsigned long long>::operator[](const size_t) const [T = unsigned long long]
T &CMMatrix<float, 9, 12>::operator()(size_t, size_t) [T = float, M = 9, N = 12]
T CMMatrix<float, 9, 9>::operator[](size_t) const [T = float, M = 9, N = 9]
T &CMVector<float, 12>::operator[](const size_t) [T = float, N = 12]
void CMFactoredMatrix<float, 9>::thorntonTemporalUpdate(CMMatrix<T, N, N> &, CMMatrix<T, N, M> &, const CMVector<T, M> &) [T = float, N = 9, M = 12]
T CMVector<float, 12>::operator[](const size_t) const [T = float, N = 12]
void CMAccessoryWalkingDetector::processData()
CoreLocation: [CMAccessoryWalkingDetector],pedEnergyPlane,%f,pedEnergyZ,%f,pedEnergyZByPlane,%f,pedEnergyZPeak,%f,thetaRollFaceDeg,%f,thetaPitchFaceDeg,%f,thetaYawFaceDeg,%f,isWalkingRaw,%d,isWalkingFiltered,%d,isMissingSamples,%d,timestamp,%lld,isInterpolated,%d,dataRate,%f,maxSampleDeltaInSecond,%f,reversedTimestampCounts,%d
const T &CMQueue<float>::operator[](const size_t) const [T = float]
const T &CMQueue<DistViewDetection>::operator[](const size_t) const [T = DistViewDetection]
void CMQueue<unsigned long long>::deepCopy(const CMQueue<T> &) [T = unsigned long long]
CoreLocation: Assertion failed: rhs.capacity() == capacity(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMQueue.h, line 82,capacity,%zu,%zu.
T@"NSString",R,N,V_name
data
T@"NSData",R,N,V_data
streamingCallback
T@?,R,N,V_streamingCallback
!self.streamingDataCallback
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Framework/CoreMotion/RMConnection/RMConnectionClient.m
-[RMConnectionClient requestStreamingWithMessage:data:callback:]
v16@?0@"NSError"8
endpoint == self.endpoint
-[RMConnectionClient endpointWasInterrupted:]
-[RMConnectionClient endpointWasInvalidated:]
endpoint
T@"RMConnectionEndpoint",&,N,V_endpoint
serviceName
T@"NSString",&,N,V_serviceName
streamingDataCallback
T@?,C,N,V_streamingDataCallback
messageHandler
T@?,C,N,V_messageHandler
messageCache
T@"NSMutableArray",&,N,V_messageCache
connectionTimer
T@"NSObject<OS_dispatch_source>",&,N,V_connectionTimer
connectionTimerDelay
TQ,N,V_connectionTimerDelay
TB,N,GisValid,V_valid
ConnectionClient
kCMAmbientPressureCodingKeyPressure
kCMAmbientPressureCodingKeyTemperature
Pressure %f Temeprature %f @ %f
ambientPressure
T{?=dd},R,N
virtual bool CLPreferences::serialize(CFDataRef *) const
CoreLocation: ***not supported***
virtual bool CLPreferences::serializeBinary(CFDataRef *) const
virtual bool CLPreferences::deserialize(const CFDataRef)
virtual void CLPreferences::print() const
CoreLocation: 
<empty>
virtual void CLPreferences::merge(const CLPreferences &, bool)
virtual bool CLPreferences::loadFromFile(const char *)
virtual bool CLPreferences::saveToFile(const char *) const
virtual bool CLPreferences::saveToBinaryFile(const char *) const
virtual void CLPreferences::setInternal(const CFStringRef, const CFTypeRef)
CoreLocation: Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Daemon/Shared/Utilities/CLPreferences.mm
containsInternal
OtherPref
void CMCorrelatedMotion::updateSrcAuxMovingDuration(const CMRelDM::IMUData &, const CMRelDM::IMUData &, double)
CoreLocation: [CorrelatedMotion] updateSrcAuxMovingDuration: fAuxAvgOmegaShort, %.3f, fSrcAvgOmegaShort, %.3f, aux.qMode, %d, src.qMode, %d, auxMovingDurationSecs, %.3f, srcStaticDurationSecs, %.3f
void CMCorrelatedMotion::feed(const CMRelDM::IMUData &, const CMRelDM::IMUData &, const CMOQuaternion &, const CMRelDM::ActivityState &, uint64_t, uint64_t, double)
CoreLocation: [CorrelatedMotion] isInCorrelatedActivity, %d, onGymMachine, %d, srcWalking, %d, srcVehicle, %d, srcMovingLT, %d, srcStatic, %d, noBTZLT, %d, auxMovingDurationSecs, %.3f, srcStaticDurationSecs, %.3f
bool CMCorrelatedMotion::isLikelyOnGymMachine(const CMRelDM::IMUData &, const CMRelDM::IMUData &) const
CoreLocation: [CorrelatedActivity] auxMovingDuration, %.3f, auxRotGrav, %.3f, auxRot, %.3f, aux.qMode, %d
bool CMCorrelatedMotion::isLikelyInCorrelatedActivity(const CMRelDM::ActivityState &, bool, uint64_t) const
CoreLocation: [CorrelatedActivity] auxRotGravFull, %.3f, srcRotGravFull, %.3f, diff, %.3f
CoreLocation: [CorrelatedActivity] auxRotGrav, %.3f, srcRotGrav, %.3f, relW, %.3f
float CMCorrelatedMotion::getQuiescentMeasureAnchor(const CMRelDM::IMUData &, const CMRelDM::IMUData &, const CMOQuaternion &, uint64_t) const
CoreLocation: [CMRelDMSensorFusionMekf][RelativeGravityConstraints][CorrelatedAnchor] MagnitudeDiffUnity,%{public}.2e, rotationMax,%{public}.2f,timestamp,%{public}llu
float CMCorrelatedMotion::getQuiescentMeasureIMUOnly(const CMRelDM::IMUData &, const CMRelDM::IMUData &, uint64_t) const
CoreLocation: [CMRelDMSensorFusionMekf][RelativeGravityConstraints][CorrelatedBTZ] measNoiseVar,%{public}.2e, timestamp,%{public}llu
%llu, %f, %f, (%f, %f, %f), %f
identifier
TQ,R,V_identifier
T@"NSDate",R
Td,R
Tf,R
%llu, %f, %f, %f, %f
CMSensorRecorder.mm
Unexpected ptr exceeding size of buffer, block id, %llu, block offset %llu, size, %zu
Unexpected sensor type!
-[CMSensorDataList _updatePointers]
CoreLocation: Unable to allocate buffer for sensor recorder.
Data pointer returned should be valid
com.apple.CoreMotion.CMSensorRecorderInternal
kCLConnectionMessageSensorRecorderGetMetaByID
kCLConnectionMessageSensorRecorderGetMetaSinceID
kCLConnectionMessageError
-[CMSensorRecorderInternal _newMetaUsingMessage:withIdentifier:forType:]
CoreLocation: Error occurred while trying to retrieve accelerometer record!
kCLConnectionMessageSensorRecorderGetMetasByDateRange
-[CMSensorRecorderInternal newMetaFrom:to:forType:]
CoreLocation: Error occurred while trying to retrieve accelerometer records!
kCLConnectionMessageSensorRecorderWriteSensorDataToFileByDateRange
-[CMSensorRecorderInternal writeSensorDataToFile:from:to:forType:]
CoreLocation: Successfully wrote accelerometer data to file.
CoreLocation: Error occurred while trying to write accelerometer data to file!
kCLConnectionMessageSensorRecorderSetSensorSampleRate
-[CMSensorRecorderInternal setSensorSampleRate:forType:]
CoreLocation: Successfully set sensor sample rate.
CoreLocation: Error occurred while trying to set sensor sample rate!
kCLConnectionMessageSensorRecorderGetDataByID
-[CMSensorRecorderInternal newDataByID:metaID:forType:]
CoreLocation: Error occurred while trying to retrieve accelerometer data!
kCLConnectionMessageSensorRecorderSensorAvailable
+[CMSensorRecorder isRecordingAvailableForType:]
CoreLocation: Response invalid.
kCLConnectionMessageSensorRecorderAuthorized
+[CMSensorRecorder isAuthorizedForRecording]
*startTime
startTime must be <= to endTime
startTime must be within 3 days of today.
-[CMSensorRecorder sensorDataFromDate:toDate:forType:]
CoreLocation: #Notice -[%{public}s %{public}s] fromDate has been adjusted so that the duration requested is <= 12 hours.
-[CMSensorRecorder sendSensorDataToUrl:fromDate:toDate:forType:]
CoreLocation: #Notice Unable to get file handle for URL %{public}@
duration > 0.0
kCLConnectionMessageSensorRecorderRecordFor
-[CMSensorRecorder recordDataType:forDuration:]
rate <= 100
rotation_x
rotation_y
rotation_z
SensorRecorder
CLKeyboardState
void CLKeyboardState::registerForKeyboardUpdates()
CoreLocation: registering for keyboard updates
IOServiceFirstMatch
AppleHIDKeyboardEventDriverV2
IOServiceTerminate
void CLKeyboardState::registerForKeyboardUpdates()_block_invoke
CoreLocation: #Warning Failed to register for keyboard updates. Could not register for AppleHIDKeyboardEventDriverV2 service kIOFirstMatchNotification and kIOTerminatedNotification.
CoreLocation: #Warning Failed to register for keyboard updates. Could not create KeyboardConnectNotificationPort and KeyboardConnectNotificationPort
void CLKeyboardState::unregisterForKeyboardUpdates()
CoreLocation: unregistering for keyboard updates
Compass
kCMLogItemCodingKeyTimestamp
CMSendWakeGestureNotification
CMSendWakeGestureState
+[CMWakeGestureManager sharedManager]_block_invoke
CoreLocation: CMWakeGestureManager is not supported on this platform!
+[CMWakeGestureManager isWakeGestureAvailable]
CoreLocation: WakeGesture does not run on this platform
-[CMWakeGestureManager setDelegate:]_block_invoke
CoreLocation: CMWakeGestureManagerDelegate selectors: %x
-[CMWakeGestureManager initWithQueue:]
CoreLocation: Could not create instance of CLGestureService. Is wake gesture supported on this platform?
CoreLocation: CLGestureService with external dispatch queue %p
com.apple.CoreMotion.CMWakeGesturePhonePrivateQueue
CoreLocation: CLGestureService with internally created dispatch queue %p
SpringBoard
CoreLocation: Process: %{public}@, IsPrimary: %{public}d
IOPropertyMatch
backlight-control
IOGeneralInterest
CoreLocation: Failed to register for backlight service notification
com.apple.backboardd.backlight.changed
-[CMWakeGestureManager initWithQueue:]_block_invoke
CoreLocation: Backlight level notification (%{public}llu)
CoreLocation: Unable to send display state
-[CMWakeGestureManager startWakeGestureUpdates]
CoreLocation: Unable to start wake gesture updates, service does not exist
CoreLocation: Start Wake Gesture Updates
com.apple.CoreMotion.WakeGesturePreferencesChanged
-[CMWakeGestureManager stopWakeGestureUpdates]
CoreLocation: Stop Wake Gesture Updates
-[CMWakeGestureManager simulateGesture:after:]_block_invoke
CoreLocation: Error simulating gesture: %{public}u, delay,%f
-[CMWakeGestureManager invokeDelegateWithState:]_block_invoke
CoreLocation: Unable to invoke delegate. Please call startWakeGestureUpdates first.
-[CMWakeGestureManager loadPreferences]
CoreLocation: Loaded Preferences. Latency Alert: %d, Latency Threshold: %d, Audio Alert: %d
Detected
Dismissed
Rejected
PreDetection
Switched To Running
Switched To Normal
Suppressed
Unexpected
Normal
FaceUp
Other
Landscape
VerticalOther
Portrait
PortraitUpsideDown
FaceDown
Invalid
Nominal
Level
FaceUpSlanted
FaceUpPortrait
PortraitSlanted
Peek
-[CMWakeGestureManager onNotificationControl:]
CoreLocation: Gesture state %{public}zd is invalid!
CoreLocation: Gesture state updated to %{public}d
CoreLocation: Invalid CMSendWakeGestureNotification payload!
-[CMWakeGestureManager onWakeUpdated:]_block_invoke
CoreLocation: Gesture notification: %{public}d(%{public}@), Mode:%{public}@, Start:%{public}@, End:%{public}@, HostAwake, %{public}d, Inferred:%{public}u
CoreLocation: Skipping redundant gesture update
CoreLocation: No valid delegate found.
CoreLocation: Gesture state notified,%{public}@,currentTime,%{public}f
delegate
T@"<CMWakeGestureDelegate>",N
-[CMWakeGestureManager(BiometricKit) reenableDetectedStateRecognition]_block_invoke
CoreLocation: Attempt re-enabling detected state recognition
biometrickitd
motmonObjc
[intendedClientList containsObject:fProcessName]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Framework/CoreMotion/CMWakeGesturePhone.mm
CoreLocation: Unable to send reenable-detected hint
WakeGesture
kCMOdometerSuitabilityCodingKeyStartDate
kCMOdometerSuitabilityCodingKeySuitableForRunning
kCMOdometerSuitabilityCodingKeySuitableForWalking
%@,<startDate %@, suitableForRunning %s, suitableForWalking %s>
true
false
T@"NSDate",R,N,V_startDate
suitableForRunning
TB,R,N,V_suitableForRunning
suitableForWalking
TB,R,N,V_suitableForWalking
com.apple.CoreMotion.CMOdometer.internal
com.apple.CoreMotion.CMOdometer.callback
-[CMOdometerProxy _startDaemonConnection]_block_invoke
CoreLocation: Failed with CMError code %{public}d
kCLConnectionMessageOdometerGpsAvailability
CoreLocation: CMOdometer client connection interrupt, %@, %d, %p
kCLConnectionMessageStartOdometerUpdate
-[CMOdometerProxy _startOdometerUpdatesWithHandler:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageOdometerUpdate message!
T@"CMOdometer",N,V_odometer
totalDistance
Td,V_totalDistance
averageSpeed
Td,V_averageSpeed
Td,V_startDate
CMOdometer.mm
-[CMOdometer startOdometerUpdatesForActivity:withHandler:]
CoreLocation: #Warning The requested activity %ld is not yet supported
CoreLocation: #Warning Unsupported activity requested
odometerProxy
T@"CMOdometerProxy",R,N,V_odometerProxy
T@"<CMOdometerDelegate>",N,V_delegate
kExerciseMinuteDataCodingKeyStartDate
kExerciseMinuteDataCodingKeyRecordId
kExerciseMinuteDataCodingKeySourceId
%@, <recordId %lu, startDate %@, sourceId %@>
%f %f, (%f, %f, %f)
kCMRotationRateCodingKeyX
kCMRotationRateCodingKeyY
kCMRotationRateCodingKeyZ
%+08.4lf%+09.4lf/
%+08.4lf%+09.4lf%+08.3lf/
AlwaysOnAnchor
OpportunisticAnchor
PredictionIntervalMicroseconds
-[CMMediaSession _enableLoggingForReplayWithFilenamePrefix:filePath:]
CoreLocation: [CMMediaSession] Logging to: %{private}@
CoreLocation: [CMMediaSession] Returning default pose.
Returning default pose
CoreLocation: [CMMediaSession] Returning random pose.
Returning random pose
CoreLocation: [CMMediaSession] Returning pose.
Returning pose
CoreLocation: [CMMediaSession] Always notifying pose at 50Hz.
Always notify pose at 50Hz
CoreLocation: [CMMediaSession] Only notifying pose if valid and hasChanged.
Only notify pose if valid and hasChanged
-[CMMediaSession _createPoseFromListenerOrientation:Pose:]
CoreLocation: [CMMediaSession] quaternion has nans. Replacing with identity quaternion.
-[CMMediaSession _initWithOptions:]
CoreLocation: [CMMediaSession] Creating CMMediaSession with options: %{private}@
CMMediaSession.mm
[predictionIntervalMicrosecondsValue isKindOfClass:[NSNumber class]]
com.apple.CoreMotion
HeadTrackingControllerEnabled
HeadTrackingInEarGatingEnabled
-[CMMediaSession _reset]
CoreLocation: [CMMediaSession] Resetting relDMService.
-[CMMediaSession _start]
CoreLocation: [CMMediaSession] #Warning Not starting head tracking because one bud is out of ear!
v16@?0@"CMMotionActivity"8
-[CMMediaSession _startPoseUpdatesToQueue:andHandler:]
CoreLocation: [CMMediaSession] Starting push updates
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Framework/CoreMotion/CMMediaSession.mm
-[CMMediaSession _stopHeadTracking]
CoreLocation: [CMMediaSession] No accessory DM received during entire session of %.3f seconds
CoreLocation: [CMMediaSession] No valid pose available during entire session of %.3f seconds
CoreLocation: Calling _stop and analytics tracker hasn't been created. Called without _start?
-[CMMediaSession _stop]
CoreLocation: [CMMediaSession] Stopping push updates
TempestMinQuiescentPeriodForBTZ
-[CMMediaSession _updateMinQuiescentPeriodForBTZ]
CoreLocation: [CMMediaSession] minQuiescentPeriodForBTZ new: %f old: %f
-[CMMediaSession _updateUserSettings]
CoreLocation: [CMMediaSession] checking default and random pose preferences. Current defaultPose: %d, randomPose: %d
TempestReturnDefaultPose
TempestReturnRandomPose
CoreLocation: [CMMediaSession] Return default/random pose preferences changed: defaultPose: %d, randomPose: %d
CoreLocation: [CMMediaSession] returning default pose overrides returning random pose preferences
CoreLocation: [CMMediaSession] checking always notify pose preference. Current alwaysNotify50HzPose: %d
TempestAlwaysNotify50HzPose
CoreLocation: [CMMediaSession] always notify 50Hz pose preferences changed: alwaysNotify50HzPose: %d
Always notify 50Hz pose
-[CMMediaSession _startDefaultsPreferenceUpdater]
CoreLocation: [CMMediaSession] Starting preference updater 1Hz
-[CMMediaSession _notifyClientHandler]
CoreLocation: [CMMediaSession] First non unit quaternion pose after %.3f seconds
CoreLocation: [CMMediaSession] %{private}s
CoreLocation: [CMMediaSession] current accessory samples per second: %{private}d
-[CMMediaSession _feedSourceDeviceIMU:]
CoreLocation: [CMMediaSession] Not feeding SrcDM due to uninitialized DM status.
-[CMMediaSession _feedFacePose:rotationMatrix:timestamp:error:]
CoreLocation: [CMMediaSession] Rotation matrix or translation is missing.
-[CMMediaSession _feedPoseAnchor:facePoseError:]
CoreLocation: [CMMediaSession] Missing face sample or error.
-[CMMediaSession _getAuxSampleTimestamp:currentTime:]
CoreLocation: [CMMediaSession] Timesync: Using unsynced timestamp.
CoreLocation: [CMMediaSession]  Timesync: Lost timesync in the middle of session. 
CoreLocation: [CMMediaSession]  Timesync: Switching to use time-synced timestamp. diffMilliSeconds = %f
CoreLocation: [CMMediaSession]  Timesync: large discrepency (imeSynced - unTimesynced). MS = %f
CoreLocation: [CMMediaSession] Timesync: First timesynced sample received after %.3f seconds
CoreLocation: [CMMediaSession]  Timesync: timesync arrived very late, gap %.3f seconds
CoreLocation: [CMMediaSession]  Timesync: Experienced loss of timesync during session. gap = %f
-[CMMediaSession _feedAccessoryDeviceMotion:]
CoreLocation: [CMMediaSession] First accessory DM received after %.3f seconds
CoreLocation: [CMMediaSession] Not feeding AuxDM due to uninitialized DM status.
CoreLocation: [CMMediaSession] Received invalid re-enable route: %d
CoreLocation: [CMMediaSession] Src started moving
CoreLocation: [CMMediaSession] Aux and src started moving
CoreLocation: [CMMediaSession] Aux started moving
CoreLocation: [CMMediaSession] Src stopped moving
CoreLocation: [CMMediaSession] Aux and src entered quiescence
CoreLocation: [CMMediaSession] Aux stopped moving
-[CMMediaSession _feedAccessoryConfig:]
CoreLocation: [CMMediaSession] Received accessoryDeviceMotion config. side,%{public}d,configuration,%{private}s,serialNumber,%{private}s,hardwareModel,%{public}d
CoreLocation: [CMMediaSession] Error -- config side for kAccessoryHardwareModelB298 must be 1 or 2.
CoreLocation: [CMMediaSession] Error -- Unknown AccessoryHardwareModel.
-[CMMediaSession _feedPredictorEstimates]
CoreLocation: [CMMediaSession] Tracking stalled, likely due to data gap > 0.5s
CoreLocation: [CMMediaSession] Tracking stagnation ended. Gap from last estimate: %llu
-[CMMediaSession _feedAccessoryInEarStatus:]
CoreLocation: [CMMediaSession] Both buds are in ear. Resuming head tracking
CoreLocation: [CMMediaSession] One bud is out of ear. Pausing head tracking
[ConvergenceRateForBTZ] %f
totalSourceIMUSamples
TI,V_totalSourceIMUSamples
totalAccessoryIMUSamples
TI,V_totalAccessoryIMUSamples
totalFacePoseAnchorSamples
TI,V_totalFacePoseAnchorSamples
accessoryIMUSampleRate
TI,V_accessoryIMUSampleRate
prevAmbienceBedRoll
Tf,V_prevAmbienceBedRoll
overrideDefaultHeadsetOrientation
TB,V_overrideDefaultHeadsetOrientation
headsetOrientationOverride
T{CMOQuaternion=[4f]},V_headsetOrientationOverride
returnDefaultPose
TB,V_returnDefaultPose
returnRandomPose
TB,V_returnRandomPose
alwaysNotify50HzPose
TB,V_alwaysNotify50HzPose
kRelDmMinQuiescentPeriodForBTZ
auxAndSrcQuiescent
staticActivityStateDuration
vehicularActivityStateDuration
inVehicle2IMUDuration
pedestrianActivityStateDuration
srcPedestrian2IMUDuration
BTZDuration
CTDuration
CTDurationIn1IMU
CTDurationInVehicle
CTDurationInPedestrian
in1IMUDuration
srcMoving
auxAndSrcMoving
auxMoving
virtual void CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::removeClient(int) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CoreLocation: %{public}s; client %{public}d does not exist
Notifier
com.apple.locationd.Support
Support
sizeof(Object_T) == podContainer.serialized.length
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Intersilo/CLCppContainer.h
operator()
virtual bool CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::clientRegistered(int, const Notification_T &) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CoreLocation: %{public}s; notification %{public}s not found
virtual void CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, bool, int, bool) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CoreLocation: %s; client %d has deregistered, not notifying %s
void CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CoreLocation: %{public}s; unknown client %{public}d
virtual void CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::listClients() [Notification_T = CLGyroCalibrationDatabase_Type::Notification, NotificationData_T = CLGyroCalibrationDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CoreLocation: %s; already shutdown; not listing clients
CoreLocation: %s; listing clients, num clients: %zu
CoreLocation: %s; clients, id: %d, notification: %d
virtual bool CLGyroCalibrationDatabaseRemote::getBiasFit(CLMotionTypeGyroBiasFit &)
CoreLocation: successfully got GyroBiasFit from CLGyroCalibrationDatabaseGetBiasFitAtTemperature()
CoreLocation: Warning: can't get GyroBiasFit from CLGyroCalibrationDatabaseGetBiasFitAtTemperature()
kCMCatherineDataCodingKeyCatherine
kCMCatherineDataCodingKeyConfidence
%@,<catherine %f confidence %f @ %f>
catherine
Td,R,N,V_catherine
Td,R,N,V_confidence
com.apple.CoreMotion.CMSpringTracker
-[CMSpringTrackerInternal init]_block_invoke
CoreLocation: Failed with error, %{public}d
CoreLocation: Client connection interrupt, %@, %d, %p
SpringTracking/kCLConnectionMessageSpringTrackerIsTracking
SpringTracking/kCLConnectionMessageSpringTrackerStart
SpringTracking/kCLConnectionMessageSpringTrackerStop
-[CMSpringTrackerInternal _handleStartStopResponse:handler:]
CoreLocation: Error responding to start / stop tracking request, handler unavailable.
CoreLocation: Error parsing start / stop response.
00000000-0000-0000-0000-000000000000
SpringTracking/kCLConnectionMessageSpringTrackerQuery
-[CMSpringTrackerInternal _querySpringDataFromRecord:handler:]_block_invoke
CoreLocation: Error parsing query response.
CMSleepTracker.mm
T@"CMSpringTrackerInternal",R,N,V_internal
com.apple.locationd.Position
Spring
CoreLocation: Empty payload, returning
CMVO2MaxData.mm
kVO2MaxDataCodingMets
kVO2MaxDataCodingKeyStartDate
kVO2MaxDataCodingKeyMets
kVO2MaxDataCodingKeyMetSource
kVO2MaxDataCodingKeyHeartRate
kVO2MaxDataCodingKeyHeartRateConfidence
kVO2MaxDataCodingKeyGrade
kVO2MaxDataCodingKeyGradeType
kVO2MaxDataCodingKeyCadence
kVO2MaxDataCodingKeyPace
kVO2MaxDataCodingKeyHasGPS
kVO2MaxDataCodingKeyHasStrideCal
kVO2MaxDataCodingKeyWorkoutType
%@, <startDate, %@, mets, %.3f, metSource, %lu, hr, %.3f, hrConf, %.3f, grade, %.3f, gradeType, %lu, cadence, %.3f, pace, %.3f, hasGPS, %d, hasStrideCal, %d, workoutType, %lu>
hasGPS
kCMMotionTimeRangeCodingKeyStartDate
kCMMotionTimeRangeCodingKeyEndDate
%@,<startDate %@, endDate %@>
CMMotionTimeRange.mm
CMCallHandednessManager.mm
CMCallHandednessManager is not supported on this platform. Use isCallHandednessAvailable to avoid this error
com.apple.CoreMotion.CMCallHandednessPrivateQueue
-[CMCallHandednessManager startCallHandednessUpdates]_block_invoke
CoreLocation: Started CallHandedness updates. Current Time: %f
CoreLocation: CallHandedness service already started!
-[CMCallHandednessManager stopCallHandednessUpdates]_block_invoke
CoreLocation: Stopped CallHandedness updates. Current Time: %f
CoreLocation: CallHandedness service already stopped!
-[CMCallHandednessManager onCallHandednessStateUpdated:]_block_invoke
CoreLocation: CallHandedness Detection: %ld
T@"<CMCallHandednessDelegate>",N,V_delegate
Gesture
CMPickupService
virtual void CMPickupService::numberOfSpectatorsChanged(int, size_t)
CoreLocation: CMPickupService Spectators, %zd
CoreLocation: CMPickupService stopped, %zd
CoreLocation: CMPickupService started, %zd
CoreLocation: CMPickupService expects only 1 client
void CMPickupService::startDetection()
CoreLocation: #Warning No accelerometer; not starting CMPickupDetector detection!
kCalorieUserInfoCodingKeyAge
kCalorieUserInfoCodingKeyGender
kCalorieUserInfoCodingKeyHeight
kCalorieUserInfoCodingKeyWeight
kCalorieUserInfoCodingKeyCondition
kCalorieUserInfoCodingKeyBetaBlockerUse
Male
Female
%@, <age %f, gender %@, height %f, weight %f, condition %ld, betaBlockerUse %d>
weight
com.apple.locationd.vehicle.connected
com.apple.locationd.vehicle.disconnected
com.apple.locationd.vehicle.exit
com.apple.locationd.vehicular.changed
com.apple.locationd.vehicular.changed.toVehicular
getMedianInPlace
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMPressureUtilities.h
size > 0
kSedentaryTimerDataCodingKeyStartDate
kSedentaryTimerDataCodingKeyFiredDate
kSedentaryTimerDataCodingKeyAlarmType
kSedentaryTimerDataCodingKeyDidWake
yyyy-MM-dd HH:mm:ss Z
Reminder
Final
Reset
ActiveReminder
InVehicleReminder
%@, <startDate %@, firedDate %@, alarmType %@, didWake %@>
firedDate
alarmType
didWake
Sensors
com.apple.CoreMotion.CMExerciseMinute.InternalQueue
com.apple.CoreMotion.CMExerciseMinute.AppQueue
-[CMExerciseMinuteInternal init]_block_invoke
CoreLocation: ExericseMinute, Failed with CMError code %{public}d
CoreLocation: ExericseMinute, client connection interrupt, %@, %d, %d, %p
kCLConnectionMessageExerciseMinuteUpdate
-[CMExerciseMinuteInternal _stopUpdates]_block_invoke
CoreLocation: ExerciseMinute, Error stopping updates, no active clients.
-[CMExerciseMinuteInternal _startUpdatesWithHandler:]_block_invoke
CoreLocation: ExerciseMinute, Unable to parse update.
kCLConnectionMessageExerciseMinuteQuery
-[CMExerciseMinuteInternal _queryExerciseMinutesFromRecord:handler:]_block_invoke
CoreLocation: ExerciseMinute, Unable to parse query.
kCLConnectionMessageNatalimetryAvailable
CMExerciseMinute.mm
com.apple.locationd.activity
T@"CMExerciseMinuteInternal",R,N,V_internal
bool CLMotionNotifier::addDispatcherPrivate(int, CLMotionNotifier::Dispatcher *, const CFTimeInterval &)
CoreLocation: Requested update interval cannot be == 0.0 and dispatcher cannot be NULL. Use interval < 0.0 for spectator.
CoreLocation: CLMotionNotifier::addDispatcherPrivate UpdateInterval is zero!
CoreLocation: CLMotionNotifier::addDispatcherPrivate Added dispatcher for notification:%d, Update Interval:%f(%.1fHz)
void CLMotionNotifier::setUpdateIntervalPrivate(int, CLMotionNotifier::Dispatcher *, const CFTimeInterval &)
CoreLocation: Unknown (notification,dispatcher) pair: (%d, %p)
CoreLocation: CLMotionNotifier::setUpdateIntervalPrivate RequestedUpdateInterval:%f, UpdateInterval:%f
void CLMotionNotifier::updateSamplePeriods(int)
CoreLocation: CLMotionNotifier::updateSamplePeriod UpdateInterval:%f
com.apple.coremotion
Device needs to be moved.
Unable to calibrate device until it is rotated.
Rotate the device around to calibrate.
Failed to get true north.
Unable to access location.
Location Services must be available and enabled for System Services > Compass Calibration.
Unknown failure.
Failure reason unknown.
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Framework/CoreMotion/CMErrorUtils.mm
+[CMErrorUtils CMErrorWithCode:userInfo:]
static void CLMotionCore::create()
CoreLocation: Could not get parent thread parameters
CoreLocation: Motion runloop ref still not set!
CoreLocation: Could not get scheduling parameters for motion thread, error = %{public}d
wrapRunLoopWithAutoreleasePoolHandler
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Motion/CLMotionCore.mm
count > 0
com.apple.CoreMotion.MotionThread
MotionThreadPriority
static void *CLMotionCore::runMotionThread(void *)
CoreLocation: could not create runloop source
CoreLocation: _CFRunLoopSetPerCalloutAutoreleasepoolEnabled() returned a value of, %{private}d.
v16@?0^{__CFRunLoopTimer=}8
static void *CLMotionCore::runMotionThread(void *)_block_invoke
CoreLocation: Ping timer fired, resetting watchdog
CoreLocation: Motion thread deadlock watchdog after %d petting
com.apple.CoreMotion.ThreadDeadlockCount
%@.%@
CoreLocation: Failed to create watchdog timer
CoreLocation: Motion thread exiting
CLPocketStateService
com.apple.CoreMotion.CLPocketStateService
void CLPocketStateService::enableDetection()
CoreLocation: Could not subscribe to system power notifications
CoreLocation: enabled detection successfully
void CLPocketStateService::determineState()
CoreLocation: Device Stationary?, %s, Orientation, %s, Proximity, %s
1 prox corroborated
2 not (FaceDown and static)
3 no prox
4 FaceDown only
5 not FaceDown, prox uncovered
OutOfPocket
FaceDownOnTable
InPocket
Uncovered
Covered
Not FaceDown
started
extended
ignored
void CLPocketStateService::transitionToState(CLPocketStateService::CLPocketStateInternalType, const char *)
CoreLocation: Transition, From: %s, To: %s, %s
CoreLocation: %f: Device Stationary?, %s, Orientation, %s, Proximity, %s, State, %s
virtual void CLPocketStateService::numberOfSpectatorsChanged(int, size_t)
CoreLocation: disable Detection
com.apple.CoreMotion.PocketState.%@
void CLPocketStateService::queryInitiated(NSTimeInterval)
CoreLocation: %f: monitorTime, %f, bksMonitorTime, %f, bksDelay, %f, proxStatus, %s
proxStatus.started
proxStatus.extended
proxStatus.ignored
void CLPocketStateService::feedDeviceOrientationData(const CLOrientationNotifier::Sample *)
CoreLocation: New orientation,%{public}d,Prev orientation,%{public}d
void CLPocketStateService::onSystemPowerChanged(io_service_t, uint32_t, void *)
CoreLocation: received WillSleep
CoreLocation: received WillPowerOn
CoreLocation: received HasPoweredOn
Pocket
com.apple.CoreMotion.CMMotionAlarmManager
-[CMMotionAlarmManagerInternal init]_block_invoke
CoreLocation: CMMotionAlarmManager client connection interrupt, %@, %d, %d, %p
-[CMMotionAlarmManagerInternal _teardown]
CoreLocation: Tearing down CMMotionAlarmManagerInternal
kCLConnectionMessageMotionAlarmFire
-[CMMotionAlarmManagerInternal _stopListeners]_block_invoke
CoreLocation: Unable to stop MotionAlarm data updates as we are are not receiving updates.
-[CMMotionAlarmManagerInternal _registerAlarm:error:]
CoreLocation: Unable to register motion alarm. No delegate assigned.
CoreLocation: Unable to register motion alarm. Invalid alarm object.
kCLConnectionMessageMotionAlarmRegister
-[CMMotionAlarmManagerInternal _registerAlarm:error:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageMotionAlarmRegister message.
-[CMMotionAlarmManagerInternal _unregisterAlarm:error:]
CoreLocation: Unable to unregister motion alarm. No delegate assigned.
CoreLocation: Unable to unregister motion alarm. Invalid alarm object.
kCLConnectionMessageMotionAlarmUnregister
-[CMMotionAlarmManagerInternal _unregisterAlarm:error:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageMotionAlarmUnregister message.
-[CMMotionAlarmManagerInternal _acknowledgeAlarm:error:]
CoreLocation: Unable to acknowledge alarm, alarm does not exist.
kCLConnectionMessageMotionAlarmAcknowledge
-[CMMotionAlarmManagerInternal _acknowledgeAlarm:error:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageMotionAlarmAcknowledge message.
CoreLocation: Unable to call kCLConnectionMessageMotionAlarmAcknowledge message. Code: %d
kCLConnectionMessageMotionAlarmLaunchRemoteApplication
-[CMMotionAlarmManagerInternal _handleAlarmFire:]
CoreLocation: Unable to fire motion alarm. Received invalid message response.
CoreLocation: Unable to fire motion alarm %@. Could not locate valid alarm to fire.
_DefaultManager
T@"<CMMotionAlarmDelegateProtocol>",N,V_delegate
MotionAlarm
com.apple.CoreMotion.CMNatalimeter
-[CMNatalimeterInternal init]_block_invoke
CoreLocation: Calorie response failed with error %{public}d
kCLConnectionMessageNatalimetryQuery
-[CMNatalimeterInternal _queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:]_block_invoke
CoreLocation: %@, pid, %d, query since record, %@, %p
CoreLocation: Attempting to request data older than 24 hours, pid, %d, startDate %@
kCLConnectionMessageNatalimetryUpdate
-[CMNatalimeterInternal _startAbsoluteNatalimetryDataUpdatesWithHandler:]_block_invoke
CoreLocation: %@, pid, %d, update, %@, %p
CoreLocation: Error parsing update.
-[CMNatalimeterInternal _stopAbsoluteNatalimetryDataUpdates]_block_invoke
CoreLocation: Error stopping calorie updates, not active clients.
kCLConnectionMessageNatalimetryCalibrationPromptsNeeded
-[CMNatalimeterInternal _promptsNeeded]
CoreLocation: Prompts needed response invalid.
CoreLocation: Querying for calibration prompts encountered an error: %{public}ld.
kCLConnectionMessageNatalimetryGetUserProfile
+[CMNatalimeter userProfile]
CoreLocation: UserProfile, Invalid response
kCLConnectionMessageNatalimetrySetUserProfile
+[CMNatalimeter setUserProfile:error:]
CoreLocation: UserProfile, Error while setting, %{public}d
kCLConnectionMessageNatalimetryResetCalibration
+[CMNatalimeter resetCalibrationDataWithError:]
CoreLocation: Unable to reset calibration data. Error code %{public}ld.
CoreLocation: Invalid response to reset calibration.
CMNatalimeter.mm
userInfo
activeCalories
+[CMNatalimeter computeTimeToActiveCalories:user:workoutType:]
CoreLocation: TimeToActiveCalories is negative: timeToActiveCalories, %f, %{private}@
CoreLocation: TimeToActiveCalories, %f, target, %f, workoutType, %ld, %{private}@
T@"CMNatalimeterInternal",R,N,V_internal
Calorimetry
LogFile
LogFileDirectory
LogFilePrefix
LogFileFlush
ShowError
LogFence
LogBufferSize
LogShowUI
LogFileLevel
LogBufferLevel
LogConsoleLevel
LogStackLevel
.log
com.apple.locationd.log.compression
vlog
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Logging/CLLog.mm
newFullContentLength == fullContentLength
'\n' == buffer[fullContentLength - 1]
%s,%s,Time,%08.3f,Function,"%s",
%s,%s,Time,%08.3f,
%s,%s,logging locations to %s%s
NOTICE
CLLog
 and flushing immediately
 no flush
%s,%s,logging locations to an internal buffer with capacity %d
.bz2
%s,%s,Failed to move aside log file %s (%d)
ERROR
.log.bz2
%s/%s
Failed to delete log
%s,%s,Rotation path is too long, could not delete old logs.
C16@?0r*8
%s,%s,Failed to write %s
%s,%s,could not open locations log %s, errno %d
Unplugged!
void CLLog::logHeader()
CoreLocation-%s
locationd was compiled on %s at %s
Oct  7 2020
01:23:51
%s @ system model %s / version %s
/usr/libexec/locationd @ system model %s / version %s
IOPlatformSerialNumber: %s
Begin settings dump (read at construction of CLSettings or upon darwin notification 'com.apple.locationd/prefs')
End settings dump
com.apple.timed
%s,%s,dumping internal buffer
LogNatalimetry
LogCalorimetry
userinfo
.plist
cache
.plist.log
%s,%s,could not copy %s log
WARNING
%s,%s,could not dump log file
%s,%s,Time,%08.3f,%d
0x%08lx %s + %lu
STATUS
STACK
%s,%s,Time,%08.3f,%d
0x%08lx 0x%08lx + %lu
%s,%s,Time,%08.3f,%d
0x%08lx
com.apple.CoreMotion.CMOdometerSuitability.internal
com.apple.CoreMotion.CMOdometerSuitability.callback
-[CMOdometerSuitabilityManagerProxy _startDaemonConnection]_block_invoke
CoreLocation: CMOdometerSuitability client connection interrupt, %@, %d, %p
kCLConnectionMessageOdometerSuitabilityUpdate
-[CMOdometerSuitabilityManagerProxy _startOdometerSuitabilityUpdatesWithHandler:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageOdometerSuitabilityUpdate message!
odometerSuitabilityManager
T@"CMOdometerSuitabilityManager",N,V_odometerSuitabilityManager
Td,V_suitableForRunning
Td,V_suitableForWalking
CMOdometerSuitabilityManager.mm
odometerSuitabilityManagerProxy
T@"CMOdometerSuitabilityManagerProxy",R,N,V_odometerSuitabilityManagerProxy
CLCircularLogBuffer
{"pressure": %0.*g, "temperature": %0.*g, "timestamp": %ld}
CMRelDMService::CMRelDMService(CMRelDM::TrackingScheme)
CoreLocation: [RelDMService] Constructing service with scheme %{public}d
void CMRelDMService::clearAll(bool)
CoreLocation: [RelDMService] Clearing src buffers.
CoreLocation: [RelDMService] Clearing all buffers.
void CMRelDMService::resetInternal(bool)
CoreLocation: [RelDMService] Resetting. WithSmoothing, %{public}d
void CMRelDMService::disableTracking()
CoreLocation: [RelDMService] Tracking is disabled.
void CMRelDMService::enableTracking()
CoreLocation: [RelDMService] Tracking is re-enabled.
bool CMRelDMService::isSrcInMovingStateWhenTrackingDisabled(uint64_t)
CoreLocation: [RelDMService] moveDuration, %.3f, var, %.4f, timeSinceAccelNonStatic, %.3f
bool CMRelDMService::isAuxInStaticStateWhenTrackingDisabled(const CMRelDM::IMUData &, uint64_t)
CoreLocation: [RelDMService] ReEnable: ts, %llu, inputTS, %llu, rot, %.3f, qMode, %d, staticDuration, %.3f
CoreLocation: [RelDMService] large gap in aux data, %.3f
CoreLocation: [RelDMService] ReEnable: movement resetted static period.
CoreLocation: [RelDMService] ReEnable: reached staticDuration, %{public}.3f
CoreLocation: [RelDMService] ReEnable: gettingStatic, ts, %llu
bool CMRelDMService::checkSrcIMUTimestamp(uint64_t, bool &) const
CoreLocation: [RelDMService] Src IMU timestamp went backwards. curr=%{public}llu, last=%{public}llu
CoreLocation: [RelDMService] Src IMU sample time went backwards. curr=%{public}llu, last=%{public}llu
CoreLocation: [RelDMService] Src IMU sample time interval is large. dt=%{public}llu
CoreLocation: [RelDMService] Src IMU sample time interval is unexpectedly large. dt=%{public}llu
void CMRelDMService::feedSrcIMU(const CMOQuaternion &, const CMVector3d &, const CMVector3d &, const CMVector3d &, uint64_t)
CoreLocation: [RelDMService] Unexpectedly large time interval since last aux IMU sample, resetting. timestamp, %{public}llu, fLastAuxGyroTimestamp, %{public}llu, dt, %{public}f s
void CMRelDMService::feedAnchor(const CMOQuaternion &, const CMVector3d &, uint64_t)
CoreLocation: [RelDMService] anchor data is far ahead of IMU: anchor, %{public}llu, auxIMU, %{public}llu
CoreLocation: [RelDMService] Entering 2-IMU with opportunistic-anchor.
void CMRelDMService::feedAuxIMU(const CMRelDM::IMUData &, uint64_t)
CoreLocation: [RelDMService] Source IMU data missing
CoreLocation: [RelDMService] Aux data timestamp stayed the same or went backwards: current, %{public}llu, last, %{public}llu
CoreLocation: [RelDMService] Aux data timestamp has large gap: current, %{public}llu, last, %{public}llu
CoreLocation: [RelDMService] failed to find new activeIdxSrc, %{public}llu, last, %{public}lu
CoreLocation: [RelDMService] Unexpected. activeIndex unchanged. %{public}llu, last, %{public}lu
CoreLocation: [RelDMService] Unexpected large discrepency between avgAuxOmega and instAuxOmega. avg, %{public}.3f, inst, %{public}.3f
bool CMRelDMService::calcActiveIndexSrc(uint64_t)
CoreLocation: [RelDMService] calcActiveIndexSrc: srcBuffer is empty.
CoreLocation: [RelDMService] calcActiveIndexSrc: Aux data is too old compared to source data. {%{public}llu > %{public}llu diffMS: %{public}f}
CoreLocation: [RelDMService] calcActiveIndexSrc: Unexpected Aux data is ahead of source IMU data. {aux: %{public}llu source: %{public}llu diffMS: %{public}f}
CoreLocation: [RelDMService] Should not end up here.
void CMRelDMService::processIMUData(const CMRelDM::IMUData &, const CMVector3d &, size_t)
CoreLocation: [RelDMService] Unexpected large IMU dt passed to EKF. dt=%{public}llu
CoreLocation: [RelDMService] Started requesting camera.
CoreLocation: [RelDMService] Stopped requesting camera.
bool CMRelDMService::determineBTZ(const CMRelDM::IMUData &, const CMRelDM::IMUData &, double, uint64_t)
CoreLocation: [RelDMService] Entering complex transition.
CoreLocation: [RelDMService] Exiting complex transition.
CoreLocation: [RelDMService] Entering BTZ.
CoreLocation: [RelDMService] Exiting BTZ.
void CMRelDMService::feedEKFWithData(const CMRelDM::IMUData &, const CMRelDM::IMUData &, double, uint64_t)
CoreLocation: [RelDMService] Missing BodyFace transform prevented feedEKFWithData.
CoreLocation: [RelDMService] Can't initialize due to accessory IMU buffers not being full.
CoreLocation: [RelDMService] Can't initialize when accessory not static.
CoreLocation: [RelDMService] Initializing EKF.
CoreLocation: [RelDMService] Entering 1-IMU.
CoreLocation: [RelDMService] Entering 2-IMU.
void CMRelDMService::setFixedTransforms(const CMOQuaternion &)
CoreLocation: [RelDMService] Fixed transforms changed in session. Resetting RelDM.
CoreLocation: [RelDMService] Headset orientation q_bf set to [%{private}f,%{private}f,%{private}f,%{private}f]
void CMAudioPerceptualFilter::reset(bool)
CoreLocation: [PerceptualFilter] resetting
CMVectorBufferBase::Element &CMVectorBufferBase<float, 3>::operator[](const size_t) [T = float, N = 3]
CoreLocation: Assertion failed: i < size(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 39,out of buffer range %zu.
const T &CMQueue<CMOQuaternion>::operator[](const size_t) const [T = CMOQuaternion]
T CMQueue<float>::getComaprison(int (*)(const T, const T), size_t) const [T = float]
CoreLocation: Assertion failed: n > 0, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMQueue.h, line 167,.
kCMMagneticFieldCodingKeyX
kCMMagneticFieldCodingKeyY
kCMMagneticFieldCodingKeyZ
ForceAnomalyDetectionAvailable
com.apple.CoreMotion.CMAnomalyManagerPrivateQueue
com.apple.CoreMotion.CMAnomalyManagerAppQueue
kCLConnectionMessageAnomalyEvent
CMAnomalyManager.mm
event.response == CMAnomalyEventResponseNone || event.response == response
event.identifier != 0
response > CMAnomalyEventResponseNone
response <= CMAnomalyEventResponseAutomaticActionRequested
event.resolution == CMAnomalyEventResolutionNone || event.resolution == resolution
resolution > CMAnomalyEventResolutionNone
resolution <= CMAnomalyEventResolutionCanceled
anomalyDetectionAvailable
TB,R,N,GisAnomalyDetectionAvailable
T@"<CMAnomalyDelegate>",N,V_delegate
-[CMAudioAccessoryManager onAudioAccessoryAccelerometer:]
CoreLocation: Audio Accessory CMAccelerometerData: %@,now,%f
-[CMAudioAccessoryManager onAudioAccessoryGyro:]
CoreLocation: Audio Accessory CMGyroData: %@,now,%f
-[CMAudioAccessoryManager onAudioAccessoryDeviceMotion:]
CoreLocation: Audio Accessory CMDeviceMotion: %@,now,%f
_audioAccessoryAccelerometerUpdateInterval
Td,D,N,S_setAudioAccessoryAccelerometerUpdateInterval:
_audioAccessoryAccelerometerAvailable
TB,R,D,N,G_isAudioAccessoryAccelerometerAvailable
_audioAccessoryGyroUpdateInterval
Td,D,N,S_setAudioAccessoryGyroUpdateInterval:
_audioAccessoryGyroAvailable
TB,R,D,N,G_isAudioAccessoryGyroAvailable
_audioAccessoryDeviceMotionAvailable
TB,R,D,N,G_isAudioAccessoryDeviceMotionAvailable
_audioAccessoryDeviceMotionUpdateInterval
Td,D,N,S_setAudioAccessoryDeviceMotionUpdateInterval:
com.apple.CoreMotion.CMHealthTracker.InternalQueue
com.apple.CoreMotion.CMHealthTracker.AppQueue
-[CMHealthTrackerInternal init]_block_invoke
CoreLocation: Failed with code %{public}d
Health/kCLConnectionMessageMetMinutesQuery
-[CMHealthTrackerInternal _queryMetMinutesFromDate:toDate:handler:]_block_invoke
CoreLocation: METMinutes,Unable to parse query response
Health/kCLConnectionMessageVO2MaxInputsQuery
-[CMHealthTrackerInternal _queryVO2MaxInputsFromRecord:handler:]_block_invoke
CoreLocation: VO2MaxData,Unable to parse query response
com.apple.locationd.metminutes
CMHealthTracker.mm
fromDate
toDate
com.apple.locationd.vo2max
T@"CMHealthTrackerInternal",R,N,V_internal
Health
void CMAudioPerceptualFilter::feedGravity(const CMVector3d &)
CoreLocation: [CMPerceptualFilter] Gravity vector must be unity norm. gravity.x,%{public}f,.y,%{public}f,.z,%{public}f
void CMAudioPerceptualFilter::feed(const CMVector3d &, uint64_t, uint64_t)
CoreLocation: Error -- cannot set listener orientation using boresight vector at 0 distance.
CoreLocation: [PerceptualFilter] currTimestamp %llu, prevTimestamp, %llu, dq [%.3f, %.3f, %.3f, %.3f], dthetaNorm, %.3f
CMOQuaternion CMAudioPerceptualFilter::rollAboutBoresightToAlignVectors(const CMVector3d &, const CMVector3d &, const CMVector3d &)
CoreLocation: [PerceptualFilter] Entering ambience bed constraints singularity
CoreLocation: [PerceptualFilter] Exiting ambience bed constraints singularity
CoreLocation: [PerceptualFilter] Vectors to align are not perpendicular to boresight vector
void CMAudioPerceptualFilter::initializeAmbienceBedGravity(const CMOQuaternion &)
CoreLocation: [PerceptualFilter] already initialized, should not be calling initializeAmbienceBedGravity
CoreLocation: [PerceptualFilter] fAmbienceBedGravity has already been set, cannot re-initialize ambience bed gravity direction.
CoreLocation: [PerceptualFilter] Accessory gravity has not been set.
CoreLocation: [PerceptualFilter] Accessory gravity is available
CoreLocation: [PerceptualFilter] Initialized ambience bed orientation with fixed gravity direction
T &CMVector<float, 4>::operator[](const size_t) [T = float, N = 4]
T CMVector<float, 4>::operator[](const size_t) const [T = float, N = 4]
GyroOnly
6Axis
9Axis
9AxisWithNorthReference
BuildGYTT
3AxisDynamicGyro
6AxisThrottledGyro
CLDeviceMotionProperties<DeviceMotion=%@>
Ti,N,V_mode
fDeviceMotionLiteClientQueue
T@"NSOperationQueue",&,N,V_fDeviceMotionLiteClientQueue
fDeviceMotionLiteFusedHandler
T@?,C,N,V_fDeviceMotionLiteFusedHandler
fDeviceMotionLitePhysicalDeviceID
T@"NSString",&,N,V_fDeviceMotionLitePhysicalDeviceID
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Framework/CoreMotion/CMMotionManagerIndigo.mm
-[CMMotionManager startDeviceMotionLiteUpdatesForDeviceID:usingConfiguration:toQueue:withFusedHandler:]
-[CMMotionManager startDeviceMotionLiteFusedUpdatesForDeviceID:toQueue:withHandler:]
CoreLocation: Motion manager asked to start device motion lite updates for device id %@
-[CMMotionManager stopDeviceMotionLiteUpdatesForDeviceID:]
CoreLocation: Motion manager asked to stop device motion lite updates for device id %@
isDeviceMotionLiteAvailable
TB,R,N,GisDeviceMotionLiteAvailable
accelerometerUpdateInterval
Td,D,N
accelerometerAvailable
TB,R,D,N,GisAccelerometerAvailable
accelerometerActive
TB,R,D,N,GisAccelerometerActive
accelerometerData
T@"CMAccelerometerData",R,D
gyroUpdateInterval
gyroAvailable
TB,R,D,N,GisGyroAvailable
gyroActive
TB,R,D,N,GisGyroActive
gyroData
T@"CMGyroData",R,D
magnetometerUpdateInterval
Td,N
magnetometerAvailable
TB,R,N,GisMagnetometerAvailable
magnetometerActive
TB,R,N,GisMagnetometerActive
magnetometerData
T@"CMMagnetometerData",R
deviceMotionUpdateInterval
attitudeReferenceFrame
TQ,R,D,N
deviceMotionAvailable
TB,R,D,N,GisDeviceMotionAvailable
deviceMotionActive
TB,R,D,N,GisDeviceMotionActive
T@"CMDeviceMotion",R,D
showsDeviceMovementDisplay
TB,N
com.apple.locationd.appreset
com.apple.locationd.appstatus
com.apple.locationd.techstatus
com.apple.locationd.started
com.apple.locationd.statusbar
com.apple.locationd.authorization
com.apple.locationd.gnssbands
ERROR
WARNING
STATUS
INFO
VERBOSE
NONE
CMElevationData.mm
kCMElevationDataCodingKeyRecordId
kCMElevationDataCodingKeySourceId
kCMElevationDataCodingKeyStartDate
kCMElevationDataCodingKeyEndDate
kCMElevationDataCodingKeyElevationAscended
kCMElevationDataCodingKeyElevationDescended
kCMElevationDataCodingKeySource
Phone
Watch
WatchDEM
WatchGPS
None
%@, <startDate, %@, endDate, %@, elevationAscended, %lu, elevationDescended, %lu, source, %@>
kCMActivityCodingKeyType
kCMActivityCodingKeyConfidence
kCMActivityCodingKeyMounted
kCMActivityCodingKeyMountedConfidence
kCMActivityCodingKeyIsStanding
kCMActivityCodingKeyTiltAngle
kCMActivityCodingKeyTimestamp
kCMActivityCodingKeyVehicleExitState
kCMActivityCodingKeyEstExitTime
kCMActivityCodingKeyStartTime
%@ @ %f,<startDate,%@,type,%s,confidence,%s,mountedState,%d,mountedConfidence,%s,isStanding,%d,tiltAngle,%f,exitState,%d,estExitTime,%f>
isWalking
isRunning
isDriving
maybeExitingVehicle
hasExitedVehicle
static int CMFFTProcessor::idxRound(scalar_32)
CoreLocation: Assertion failed: arg >= 0.0, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMFFTProcessor.cpp, line 41,arg,%f.
static float CMFFTProcessor::getSum(int, int, const FrequencyData *)
CoreLocation: Assertion failed: start < end, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMFFTProcessor.cpp, line 71,start,%d,end,%d.
static float CMFFTProcessor::getMaxInRange(int, int, const FrequencyData *)
CoreLocation: Assertion failed: start < end, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMFFTProcessor.cpp, line 93,start,%d,end,%d.
bool CMComplexTransition::checkFalsePositiveSuppression(const uint64_t) const
CoreLocation: [CMComplexTransition][Head Turn Blocked CT] fInstantaneousHeadTurn: %d, fSustainedHeadTurnCounter: %d, time elapsed: %0.2f
void CMComplexTransition::logVerticalRotationBufferStats(const uint64_t) const
CoreLocation: [CMComplexTransition] Src inertial-Z rot rate buffer stats (dps): Min: %.2f, Mean: %.2f, Max: %.2f, First: %.2f, Mid: %.2f, Last: %.2f 
CoreLocation: [CMComplexTransition] Aux inertial-Z rot rate buffer stats (dps): Min: %.2f, Mean: %.2f, Max: %.2f, First: %.2f, Mid: %.2f, Last: %.2f 
void CMComplexTransition::logEnteringComplexTransition(const uint64_t) const
CoreLocation: [CMComplexTransition][Entering Complex Transition] Timestamp: %llu, VrtRotSim: %.2f, HrzRotSim: %.2f, VrtTrnSim: %.2f, HrzTrnSim: %.2f, VrtRotSimBln: %.2f, HrzRotSimBln: %.2f, VrtTrnSimBln: %.2f, HrzTrnSimBln: %.2f, TimeSincePureYawRot: %0.1f
void CMComplexTransition::logExitingComplexTransition(const uint64_t) const
CoreLocation: [CMComplexTransition][Exiting Complex Transition] Timestamp: %llu, VrtRotSim: %.2f, HrzRotRim: %.2f, VrtTrnSim: %.2f, HrzTrnSim: %.2f, VrtRotSimBln: %.2f, HrzRotSimBln: %.2f, VrtTrnSimBln: %.2f, HrzTrnSimBln: %.2f, TimeSincePureYawRot: %0.1f
const T CMVectorBufferBase<float, 4>::mean(size_t, size_t, size_t) const [T = float, N = 4]
CoreLocation: Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 104,mean() on empty buffer.
const T &CMQueue<CMVector<float, 4> >::operator[](const size_t) const [T = CMVector<float, 4>]
CMVectorBufferBase::Element CMVectorBufferBase<float, 1>::back() const [T = float, N = 1]
const T &CMQueue<CMVector<float, 1> >::operator[](const size_t) const [T = CMVector<float, 1>]
const CMVector<T, N> CMVectorBufferBase<float, 1>::variance(size_t, size_t) const [T = float, N = 1]
size_t CMVectorBufferBase<float, 1>::minElement(size_t, size_t, size_t) const [T = float, N = 1]
CoreLocation: Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 183,minElement() on empty buffer.
const CMVectorBufferBase::Element CMVectorBufferBase<float, 1>::mean(size_t, size_t) const [T = float, N = 1]
size_t CMVectorBufferBase<float, 1>::maxElement(size_t, size_t, size_t) const [T = float, N = 1]
CoreLocation: Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 161,maxElement() on empty buffer.
CMVectorBufferBase::Element CMVectorBufferBase<float, 1>::front() const [T = float, N = 1]
CoreLocation: Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 139,front() on empty buffer.
const CMVectorBufferBase::Element &CMVectorBufferBase<float, 1>::operator[](const size_t) const [T = float, N = 1]
com.apple.CoreMotionCMGestureManagerPrivateQueue
kCLConnectionMessageGesture
-[CMGestureManagerInternal startGestureUpdatesWithHandlerPrivate:]_block_invoke
CoreLocation: Could not get dictionary for kCLConnectionMessageGesture
kCLConnectionMessageNameKey
GestureDetected
GestureCanceled
CoreLocation: Unexpected ear gesture state received: %{public}s
kCLConnectionMessagePriorityKey
-[CMGestureManager gestureHandler]_block_invoke
CoreLocation: #Notice Calling ear gesture handler
gestureHandler
T@?,C
com.apple.CoreMotion.CMActivityManagerPrivateQueue
kCLConnectionMessageMotionState
-[CMActivityManagerInternal connect]_block_invoke
CoreLocation: Could not get dictionary for kCLConnectionMessageMotionState
CoreLocation: Error occurred while trying to retrieve activity update: CMErrorDomain Code:%{public}d
CoreLocation: Unable to parse kCLConnectionMessageMotionState message!
kCLConnectionMessageSidebandOverride
CoreLocation: Could not parse dictionary for kCLConnectionMessageSidebandOverride
kCLConnectionMessageMotionStateSim
CoreLocation: Could not parse dictionary for kCLConnectionMessageMotionStateSim
-[CMActivityManagerInternal overrideOscarSideband:withState:]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Framework/CoreMotion/CMActivityManager.mm
fSidebandOverrideSemaphore && "fSidbandOverrideSemaphore not initialized."
-[CMActivityManagerInternal simulateMotionState:withState:]
fMotionStateSimSemaphore && "fMotionStateSimSemaphore not initialized."
kCLConnectionMessageMotionStateYouthSim
com.apple.CoreMotion.SidebandOverride
-[CMActivityManager overrideOscarSideband:withState:]_block_invoke
CoreLocation: Timeout occurred after 5 seconds during overrideOscarSideband:withState:.  Wait result = %{public}ld
com.apple.CoreMotion.MotionStateSim
activityHandler
activityAvailable
TB,R,N,GisActivityAvailable
Pressure
com.apple.CoreMotion.CMPedometerInternalQueue
com.apple.CoreMotion.CMPedometerUpdateQueue
kCLConnectionMessageStepCountUpdate
CMPedometer.mm
Empty pedometer update.
-[CMPedometerProxy init]_block_invoke
CoreLocation: Empty pedometer dictionary.
CoreLocation: Unable to parse message (%{public}@) when starting updates to queue
CoreLocation: Unable to parse message when starting updates to queue!
kCLConnectionMessagePedometerEvent
CoreLocation: nil pedometer event dictionary received
CoreLocation: Error pedometer event, %{public}ld
CoreLocation: Unrecognizable pedometer event dictionary
CoreLocation: CMPedometer client connection interrupt, %@, %d, %p
kCLConnectionMessageStepCountQuery
-[CMPedometerProxy _startPedometerUpdatesFromDate:withHandler:]_block_invoke
CoreLocation: Error occurred: %{public}@
v32@?0@"CMPedometerData"8@"NSDictionary"16@"NSError"24
-[CMPedometerProxy _handleQueryResponse:onQueue:withHandler:]
CoreLocation: Unable to parse message (%{public}@) for query response 
CoreLocation: Unable to parse message when checking for availability!
Step Counting not available on this platform.
kCLConnectionMessageStepCountRecordQuery
kCLConnectionMessageStrideCalibrationDump
-[CMPedometerProxy _strideCalibrationDump]
CoreLocation: Error occurred while trying to write stride calibration data to file!
-[CMPedometerProxy _queryPedometerCalibrationBinsWithHandler:forType:forRemote:]
CoreLocation: Remote calibrations not available on this platform
kCLConnectionMessagePedometerCalibrationQuery
-[CMPedometerProxy _queryPedometerCalibrationBinsWithHandler:forType:forRemote:]_block_invoke
v16@?0@"NSDictionary"8
kCLConnectionMessageStartStepCountAvailable
kCLConnectionMessagePaceAndCadenceAPIAvailable
-[CMPedometer _queryPedometerDataSinceDataRecord:withHandler:]
CoreLocation: handler not set.
-[CMPedometer sendStrideCalibrationHistoryToFile:]
CoreLocation: fileURL must be a valid fileURL.
CoreLocation: File already exists at URL.
CoreLocation: URL must point to a file path which you have access to write to.
pacebin
kvalue
kvalueTrack
score
steps
percentGrade
gpsSource
history
CoreLocation: Unable to dump stride calibration data.
CoreLocation: Unable to serialize stride cal data to json. Error: %@
CoreLocation: Unable to write stride cal data to output file.
pedometerProxy
T@"CMPedometerProxy",R,N,V_pedometerProxy
Pedometer
frozen
static
moving
walking
driving
cycling
semi-stationary
running
moving coarse
in vehicle frozen
in vehicle static
walking slow
vehicular in hand
driving other
cycling leg
Stationary Cycling
Calisthenics
Elliptical
Cross Training
Stair Climbing
Rowing
Yoga
Dancing
Pushing Wheelchair
Indoor Running
Golfing
Indoor Walking
Swimming
Outdoor Wheelchair Activity
DownhillSkiing
Functional Strength Training
Cool Down
Core Training
unknown
medium
high
virtual void CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, bool, int, bool) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
void CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual void CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::removeClient(int) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::clientRegistered(int, const Notification_T &) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual void CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::listClients() [Notification_T = CLCompassDatabase_Type::Notification, NotificationData_T = CLCompassDatabase_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
CMFitnessJuniorGoals.mm
CMFitnessJuniorGoalLevel must be low, medium, or high
userInfo must not be empty.
+[CMFitnessJuniorGoals recommendedMoveMinutesForLevel:userInfo:error:]
CoreLocation: FitnessJuniorGoals, Unexpected age input: %{private}f yrs. Fitness junior move minute goals are designed for user age interval [5.0, 13.0) yrs.
Unexpected age input. Fitness junior move minute goals are designed for user age interval [5.0, 13.0) yrs.
CMAvailable
CMAuthorized
CMErrorMessage
CMReturnCode
CMTimeRangeKey
CMOnBodyStatusManagerClassifierTheta0
CMOnBodyStatusManagerClassifierTheta1
CMOnBodyStatusManagerClassifierTheta2
CMOnBodyStatusManagerClassifierTheta3
CMOnBodyStatusManagerClassifierTheta4
CMOnBodyStatusManagerClassifierTheta5
CMOnBodyStatusManagerClassifierMinLowPower
CMOnBodyStatusManagerClassifierMaxLowPower
CMOnBodyStatusManagerClassifierMaxHighPower
CMOnBodyStatusManagerLowBandStart
CMOnBodyStatusManagerLowBandStop
CMOnBodyStatusManagerHighBandStart
CMOnBodyStatusManagerHighBandStop
CMOnBodyStatusManagerWakeThreshold
CMOnBodyStatusManagerOddsThreshold
CMOnBodyStatusManagerMedianFilterSize
CMOnBodyStatusManagerConfidenceThreshold
CMOnBodyStatusManagerUseHysteresis
CMOnBodyStatusManagerUseAngleOverride
CMOnBodyStatusManagerAngleMetricThreshold
CMOnBodyStatusManagerManufacturer
CMPedometerDataObject
CMPedometerDataArray
CMPedometerStartTime
CMPedometerStopTime
CMPedometerSpeedSum
CMPedometerEntryCount
CMPedometerEventKey
CMPedometerCalibrationBins
CLMotionSyncStoreLastUpdate
CMPedometerFetchRemoteCalibrations
CMPedometerCalibrationTypeId
CMNatalimetrySessionId
CMNatalimetryRecordId
CMNatalimetryNatalieData
CMNatalimetryNatalieDataStartDate
CMNatalimetryNatalieDataMets
CMNatalimetryNatalieDataNatalies
CMNatalimetryNatalieDataBasalNatalies
CMNatalimetryNatalieDataSourceId
CMNatalimetryNatalieDataArray
CMNatalimeterSetUserHeightMeter
CMNatalimeterSetUserWeightKG
CMNatalimeterSetUserAgeYr
CMNatalimeterSetUserBiologicalSex
CMNatalimeterSetUserCondition
CMNatalimeterSetUserBetaBlockerUse
CMNatalimeterSetUserPal
CMNatalimeterSetUserHrmin
CMNatalimeterSetUserHronset
CMNatalimeterSetUserVo2max
CMNatalimeterSetUserVo2maxReset
CMNatalimeterSetUserHrminReset
CMNatalimeterSetUserRunVo2max
CMNatalimeterSetUserOnsetVo2max
CMWorkoutSessionIdKey
CMWorkoutMetsQueryResult
CMOdometerDataObject
CMOdometerGpsAvailability
CMOdometerSuitabilityObject
CMOnBodyStatusData
CMSedentaryTimerIsArmed
CMSedentaryTimerStartTime
CMSedentaryTimerPeriodInterval
CMSedentaryTimerReminderInterval
CMSedentaryTimerAutoReschedule
CMSedentaryTimerAlarmData
CMSedentaryTimerErrorMessage
CMMotionActivityStartTime
CMMotionActivityStopTime
CMMotionActivityData
CMMotionActivityDataArray
CMActivityData
CMOverrideSidebandOverride
CMStateSidebandState
CMOverrideResult
CMSidebandSensorFusionEnable
CMSidebandSensorFusionLatency
CMSidebandSensorFusionSnoop
CMSidebandSensorFusionSuccess
CMMotionStateSim
CMMotionStateSimState
CMMotionStateSimResult
CMVehicleConnectionStartTime
CMVehicleConnectionEndTime
CMVehicleStateDeviceId
CMVehicleStateDeviceType
CMVehicleStateIsVehicle
CMVehicularStateKey
CMVehicularHintsKey
CMVehicularOperatorStateKey
CMDeviceHasOriginalBackCamera
CMCameraVcmActuatorId
CMCompassCalibrationData
CMExerciseMinuteRecordId
CMExerciseMinuteStartDate
CMExerciseMinuteSourceId
CMExerciseMinuteDataArray
CMWorkoutAttributes
CMWorkoutEventDate
CMWorkoutTimeout
CMWorkoutTriggerWorkoutLocationEventForTesting
CMSwimKeyDataRecord
CMSwimKeyDataArray
CMSignificantElevationKeyQueryTimeRange
CMSignificantElevationKeySample
CMFilteredElevationKeySample
CMAbsoluteAltitudeKey
CMFallSetStatsEnabled
CMFallDataCollectionConfigurationKey
CMFallSetStatsNumberOfAvailableFiles
CMFallSetStatsNameOfCurrentFile
CMFallSetStatsSizeOfCurrentFile
CMFallStatsMode
CMFallStatsSensorRecordingActive
CMFallStatsSimulateFall
CMFallStatsUserStudyPressureDataCollection
CMAnomalyEventType
CMAnomalyDetectorEnabled
CMAnomalyDetectorEvent
CMFallLastReplyAopTimestamp
CMAnomalySensorTestModeEnabled
CMFallConfig
CMFallInternalNotifierState
CMFallInternalMetricState
CMFallBehavioralConfig
CMFallConfigUserAge
CMFallConfigUserMets
CMFallImpactAlertThreshold
CMFallImpactLoggingStatsThreshold
CMFallImpactLoggingHeartRateThreshold
CMFallImpactLoggingHighResolutionSensorDataThreshold
CMFallDefaults
isHeartRateDataCollectionEnabled
fallFullMslLoggingInSensorKitEnabled
fallOffWristLookbackBeforeImpactStartOfInterval
fallOffWristLookbackBeforeImpactEndOfInterval
fallOnWristAfterImpactStartOfInterval
fallOnWristAfterImpactEndOfInterval
fallLockedLookbackBeforeImpactStartOfInterval
fallLockedLookbackBeforeImpactEndOfInterval
fallMinimumOffChargerDurationBeforeGatingAlert
fallDelayBeforeWristAndChargerGating
fallDelayBeforeShuttingDownAlgorithmsAfterLastClientDisconnect
fallDelayBeforeSendingSPUConfiguration
CMFallConfiguration
isBridgeToggleEnabled
userStudyFallStatsEnabled
userStudyPressureDataCollection
shouldDetectorBeRunning
CMFallState
isSensorRecordingEnabled
isSensorKitLoggingEnabled
lastGatedAnomalyAOPTimestamp
CMFallOptInsAndProfiles
isImproveHealthAndFitnessOptInEnabled
lastFallAdditionalProfileLoggingEnabled
fallAdditionalProfileLoggingEnabled
isBackgroundSensorDataLoggingAllowed
isTapToRadarFallSubmissionAllowed
isTapToRadarNearFallSubmissionAllowed
isTapToRadarSubmissionAllowed
isAnyFallDataCollectionEnabled
CMFallAWD
isBackgroundAWDLoggingAllowed
isBackgroundAWDLoggingEnabled
isAWDLoggingEnabled
CMFallHDSCollection
isOptInDataLoggingAvailable
isOptInDataLoggingEnabled
isUnderRateLimit
CMKappaCmdKey
CMKappaGetStateKey
CMKappaStateKey
CMKappaDataObject
CMKappaConfigFastAccel
CMKappaConfigAccel
CMKappaConfigPressure
CMKappaConfigDeviceMotion
CMKappaConfigTimeout
CMSkiKeyDataRecord
CMSkiKeyDataArray
CMSpringKeyDataRecord
CMSpringKeyDataArray
CMFitnessMachineDataRecord
CMDatabaseType
CMExtensions
CMFileSize
CMMotionAlarmKey
CMMetMinutesArray
CMVO2MaxInputsRecord
CMVO2MaxInputsArray
CMDyskinesiaResultsKey
CMTremorResultsKey
CMHealthAssessmentFromDateKey
CMHealthAssessmentToDateKey
CMMovementDisorderLastProcessedKey
CMMovementDisorderMonitorKinesiasExpirationKey
locationd became fatally blocked. Implicated services: %s
CLCompassDatabaseSilo
__null != self.notifier
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Daemon/Motion/Compass/CLCompassDatabase.mm
-[CLCompassDatabaseAdapter beginService]
CLCompassDatabase
kCLMotionTypeGeomagneticModelDataXKey
kCLMotionTypeGeomagneticModelDataYKey
kCLMotionTypeGeomagneticModelDataZKey
kCLMotionTypeGeomagneticModelDataMagnitudeKey
kCLMotionTypeGeomagneticModelDataHorizontalKey
kCLMotionTypeGeomagneticModelDataDeclinationKey
kCLMotionTypeGeomagneticModelDataInclinationKey
kCLMotionTypeGeomagneticModelDataTimestampKey
static bool CLOnBodyNotifier_Type::Params::isValid(NSDictionary *)
CoreLocation: Invalid parameters received:
%{public}s
virtual bool CLGeomagneticModelProviderClient::registerForNotificationInternal(const CLGeomagneticModelProvider_Type::Notification &)
CoreLocation: fLocationdConnection is not NULL
com.apple.CoreMotion.CLGeomagneticModelProviderClientPrivateQueue
kCLConnectionMessageGmm
virtual bool CLGeomagneticModelProviderClient::registerForNotificationInternal(const CLGeomagneticModelProvider_Type::Notification &)_block_invoke
CoreLocation: Could not get geomagnetic model data for message!
virtual bool CLGeomagneticModelProviderClient::unregisterForNotificationInternal(const CLGeomagneticModelProvider_Type::Notification &)
CoreLocation: fLocationdConnection is NULL
virtual void CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::notifyClientsWithData(const Notification_T &, const NotificationData_T &, bool, int, bool) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
void CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual void CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::removeClient(int) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::clientRegistered(int, const Notification_T &) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual bool CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
virtual void CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::listClients() [Notification_T = CLGeomagneticModelProvider_Type::Notification, NotificationData_T = CLGeomagneticModelProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]
kCMAnomalyEventAopTimestamp
kCMAnomalyEventAbsTimestamp
kCMAnomalyEventState
kCMAnomalyEventResponse
kCMAnomalyEventResolution
kCMAnomalyEventIsAcknowledged
Undefined
AnomalyDetected
RecoveryDetected
NoRecoveryDetected
ConfirmedActionRequested
ConfirmedNoActionRequested
AutomaticActionRequested
Completed
Canceled
%@,<date %@ identifier %llu state %@ response %@ resolution %@ absoluteTimestamp %f>
%@,<date %@ identifier %llu state %d response %d resolution %d>
Tq,N,V_response
Tq,N,V_resolution
acknowledgement
TB,N,GisAcknowledgement,V_acknowledgement
absoluteTimestamp
Td,N,V_absoluteTimestamp
TQ,R,N,V_identifier
Tq,R,N,V_state
kCMOdometerDataCodingKeyStartDate
kCMOdometerDataCodingKeyEndDate
kCMOdometerDataCodingKeyDistance
kCMOdometerDataCodingKeyCurrentSpeed
kCMOdometerDataCodingKeyAverageSpeed
%@,<startDate %@, endDate %@, distance %@, currentSpeed %@, averageSpeed %@
T@"NSDate",R,N,V_endDate
T@"NSNumber",R,N,V_distance
currentSpeed
T@"NSNumber",R,N,V_currentSpeed
T@"NSNumber",R,N,V_averageSpeed
CLGeomagneticModelProviderSilo
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Daemon/Motion/Compass/CLGeomagneticModelProvider.mm
-[CLGeomagneticModelProviderAdapter beginService]
CLGeomagneticModelProvider
StrideCalibrationDataBins
kCMStrideCalibrationDataCodingKeyBegin
kCMStrideCalibrationDataCodingKeyEnd
kCMStrideCalibrationDataCodingKeyState
kCMStrideCalibrationDataCodingKeyKValue
%@,%@
Tq,N,V_state
Td,N,V_kValue
Td,N,V_begin
Td,N,V_end
STATUS,SENSOR,Time,%.3lf,Type,DeviceMotion,q.x,%20.20f,q.y,%20.20f,q.z,%20.20f,q.w,%20.20f,userAccel.x,%20.20f,userAccel.y,%20.20f,userAccel.z,%20.20f,rotationRate.x,%20.20f,rotationRate.y,%20.20f,rotationRate.z,%20.20f,magneticField.x,%20.20f,magneticField.y,%20.20f,magneticField.z,%20.20f,magneticFieldCalibrationLevel,%d,heading,%.3f,trueheading,%.3f,accuracy,%.3f,variant,%d,mode,%d,clientID,%#02x,biasEstimation,%d,yawCorrection,%d,gravityCorrection,%d,courseCorrection,%d,visualLocalizationCorrection,%d,initialized,%d,accelSaturated,%d,gyroSaturated,%d,compassCalibration,%d,gyroCalibration,%d,course,%d,gmm,%d,north,%d,visualLocalization,%d,timestamp,%20.20f
com.apple.CoreMotion.CMFitnessMachine
-[CMFitnessMachineInternal init]_block_invoke
CoreLocation: CMFitnessMachine client connection interrupt, %@, %d, %p
CMFitnessMachine.mm
fitnessMachineData
kCLConnectionMessageFitnessMachineData
-[CMFitnessMachineInternal _feedFitnessMachineData:]_block_invoke
CoreLocation: Error feeding fitness machine data
CoreLocation: Error feeding fitness machine data, %@
T@"CMFitnessMachineInternal",R,N,V_internal
CMCallHandednessService
virtual void CMCallHandednessService::numberOfSpectatorsChanged(int, size_t)
CoreLocation: CMCallHandednessService Spectators, %zd
CoreLocation: CMCallHandednessService stopped, %zd
CoreLocation: CMCallHandednessService started, %zd
CoreLocation: CMCallHandednessService expects only 1 client
void CMCallHandednessService::startDetection()
CoreLocation: #Warning No accelerometer; not starting CMCallHandedness detection!
com.apple.locationd.synchronous
-[CLLocationInternalClient_CoreMotion connection]_block_invoke
CoreLocation: #Spi, Interrupted
CoreLocation: #Spi, Invalidated
-[CLLocationInternalClient_CoreMotion synchronousRemoteObject]_block_invoke
CoreLocation: #Spi, Error with proxy, error: %@
v20@?0@"NSError"8i16
v24@?0@"NSError"8@"NSData"16
com.apple.locationd.internalservice.errorDomain
v24@?0@"NSError"8@"NSDictionary"16
v24@?0@"NSError"8@"NSArray"16
-[CLLocationInternalClient_CoreMotion setLocationDefaultForKey:value:]
CoreLocation: #Spi, Key is NULL!
-[CLLocationInternalClient_CoreMotion setLocationDefaultForKey:value:]_block_invoke
CoreLocation: #Spi, Couldn't set location default!
-[CLLocationInternalClient_CoreMotion timeZoneAtLocation:]
LocationInternal.m
nil != location
v24@?0@"NSError"8@"NSString"16
-[CLLocationInternalClient_CoreMotion setPrivateMode:]_block_invoke
CoreLocation: #Spi, setPrivateMode failed
v20@?0@"NSError"8B16
-[CLLocationInternalClient_CoreMotion setLocationServicesEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetLocationServicesEnabled failed
-[CLLocationInternalClient_CoreMotion setAuthorizationPromptMapDisplayEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
-[CLLocationInternalClient_CoreMotion setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:]
data != nil
v24@?0@"NSError"8d16
-[CLLocationInternalClient_CoreMotion setGestureServiceEnabled:]_block_invoke
CoreLocation: #Spi, CLInternalSetGestureServiceEnabled failed
-[CLLocationInternalClient_CoreMotion performMigration]
CoreLocation: #Spi, _CLInternalPerformMigration failed
-[CLLocationInternalClient_CoreMotion shutdownDaemon]
CoreLocation: #Spi, _CLShutdownDaemon failed
-[CLLocationInternalClient_CoreMotion displayStatistics]
CoreLocation: #Spi, _CLDisplayStatistics failed
-[CLLocationInternalClient_CoreMotion dumpLogs:]
CoreLocation: #Spi, _CLDumpLogs failed
v180@?0@"NSError"8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16
v48@?0@"NSError"8{?=dddi}16
-[CLLocationInternalClient_CoreMotion setMapMatchingRouteHint:count:routingType:stepType:]
CoreLocation: #Spi,RouteHintError, Exceeded max number of route hint road segments (%{public}d > %{public}d)
CoreLocation: #Spi,RouteHint,LocationInternal,Received route hint road segments,%{public}d,routeType,%{public}d,stepType,%{public}d
-[CLLocationInternalClient_CoreMotion setMapMatchingRouteHint:count:routingType:stepType:]_block_invoke
CoreLocation: #Spi,RouteHintError,Couldn't set map-matching route hint!
-[CLLocationInternalClient_CoreMotion getAccessoryTypeBitSet]_block_invoke
CoreLocation: #Spi,getAccessoryTypeBitSet,failed
-[CLLocationInternalClient_CoreMotion getAccessoryTypeBitSet]
CoreLocation: #Spi,getAccessoryTypeBitSet,%d
-[CLLocationInternalClient_CoreMotion copyLastLog]
CoreLocation: #Spi, _CLCopyLastLog failed
v32@?0@"NSError"8Q16Q24
CFArrayRef CLCopyGnssBandsInUse(void)
CoreLocation: Invalid bandUse,%{public}d
{CLGnssBandInfo=iddi}
CLStatusBarIconState CLGetStatusBarIconState()
CoreLocation: CLStatusBarIconState received an icon stateu of %d
void CLSetMapMatchingRouteHint(CLClientLocationRouteHintType, CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d,stepType,%d
void CLSetRouteHintsForMapMatching(CLClientLocationRouteHintType, CLMapsRouteHint *, int)
CoreLocation: RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d
int32_t CLGetAccessoryTypeBitSet()
CoreLocation: CLGetAccessoryTypeBitSet
CLCoverState
dataIdentifier
dataSize
dataType
movement
%@,<identifier, %llu, startTime, %f, timestamp, %llu, dataIdentifier, %llu, offset, %u, dataSize, %u, dataType, %d, movement, %d>
TQ,V_identifier
Td,V_startTime
TQ,V_timestamp
TQ,V_dataIdentifier
TI,V_offset
TI,V_dataSize
Ti,V_dataType
TB,V_movement
Td,V_endTime
metaIdentifier
TQ,V_metaIdentifier
Td,V_duration
rate
TI,V_rate
kCMAbsoluteAltitudeCodingKeyAltitude
kCMAbsoluteAltitudeCodingKeyAccuracy
kCMAbsoluteAltitudeCodingKeyPrecision
kCMAbsoluteAltitudeCodingKeyStatusInfo
AbsoluteAltitude: %f, Accuracy: %f, Precision %f; statusInfo: %ld
absoluteAltitude
absoluteAltitudeAccuracy
Td,R,N,V_absoluteAltitudeAccuracy
absoluteAltitudePrecision
Td,R,N,V_absoluteAltitudePrecision
absoluteAltitudeStatusInfo
Tq,R,N,V_absoluteAltitudeStatusInfo
LogCompass
CLCompass
CLCompass::CLCompass()
CoreLocation: Retrieved cached cover state timestamp,%f
CoreLocation: Registered for cover state notifications
virtual CFTimeInterval CLCompass::minimumUpdateIntervalChanged(int, const CFTimeInterval &)
CoreLocation: Could not create timer
void CLCompass::startCompass()
CoreLocation: Cover attached,%d,forced,%d
open
closed
static void CLCompass::onCoverState(const bool *, void *)
CoreLocation: Cover %s
CLProximityNotifier
kCMMotionActivityCodingKeyType
kCMMotionActivityCodingKeyConfidence
kCMMotionActivityCodingKeyStartTime
kCMMotionActivityCodingKeyVehicleConnected
kCMMotionActivityCodingKeyVehicularGpsHint
kCMMotionActivityCodingKeyVehicularBasebandHint
kCMMotionActivityCodingKeyVehicularWifiHint
kCMMotionActivityCodingKeyVehicularMotionHint
kCMMotionActivityCodingKeyVehicularBTHint
kCMMotionActivityCodingKeyTimestamp
%@ @ %f,<startDate,%@,confidence,%ld,unknown,%d,stationary,%d,walking,%d,running,%d,automotive,%d,cycling,%d>
vehicleConnected
TB,R,N,GisVehicleConnected
vehicleWifiHint
TB,R,N,GisVehicleWifiHint
vehicleGpsHint
TB,R,N,GisVehicleGpsHint
vehicleBasebandHint
TB,R,N,GisVehicleBasebandHint
vehicleMotionHint
TB,R,N,GisVehicleMotionHint
vehicleBTHint
TB,R,N,GisVehicleBTHint
stationary
running
automotive
cycling
void CMHeadTrackingController::feedTouchEvent(double)
CoreLocation: [CMHeadTrackingController] Received touch event
void CMHeadTrackingController::feedSrcMovedEvent(double)
CoreLocation: [CMHeadTrackingController] Received srcMoved event
void CMHeadTrackingController::feedAuxHasBeenStaticEvent(double)
CoreLocation: [CMHeadTrackingController] Received auxHasBeenStatic event
void CMHeadTrackingController::feedDistractedViewingState(bool)
CoreLocation: [CMHeadTrackingController] Distracted viewing notified.
No Walking
void CMHeadTrackingController::walkingDetectorCallback(bool, uint64_t)
CoreLocation: [CMHeadTrackingController] Walking Detection changed : From %{public}s -> %{public}s, srcStaticFor, %{public}.2f secs, timeSinceLastSrcFrozen, %{public}.2f secs, triggered, %{public}d
void CMHeadTrackingController::enable(const T *) [T = CMHeadTrackingController::ETouch]
CoreLocation: [CMHeadTrackingController] FSM state: enabled
void CMHeadTrackingController::enable(const T *) [T = CMHeadTrackingController::ESrcMoved]
void CMHeadTrackingController::enable(const T *) [T = CMHeadTrackingController::EAuxHasBeenStatic]
void CMHeadTrackingController::disable(const T *) [T = CMHeadTrackingController::EWalking]
CoreLocation: [CMHeadTrackingController] FSM state: disabled
CMPickupManager.mm
Pickup Detection is not supported on this platform. Use isPickupAvailable to avoid this error.
com.apple.CoreMotion.CMPickupDetectorPrivateQueue
-[CMPickupManager startPickupUpdates]_block_invoke
CoreLocation: Started pickup detection updates
CoreLocation: Pickup detection already started!
-[CMPickupManager stopPickupUpdates]_block_invoke
CoreLocation: Stopped pickup detection updates
CoreLocation: Pickup detection service already stopped!
-[CMPickupManager onPickupStateUpdated:]_block_invoke
CoreLocation: Pickup Detection: %{public}ld
T@"<CMPickupDelegate>",N,V_delegate
CMOQuaternion CMBleedToZero::alignAttitudeWithGravity(const CMVector3d &, const CMVector3d &, const CMOQuaternion &) const
CoreLocation: [CMBleedToZero] unexpected 0 accel magnitude.
CMOQuaternion CMBleedToZero::relAttitudeBTZDefault(const CMVector3d &, const CMVector3d &, const CMOQuaternion &) const
CoreLocation: [CMBleedToZero] Do not BTZ yaw because face or source frame z-axis is aligned with gravity.
CoreLocation: [CMBleedToZero] unexpected 0 accel magnitude on zVecInS_pred_proj.
CoreLocation: [CMBleedToZero] unexpected 0 accel magnitude on zVecInS_BTZ_proj.
CMOQuaternion CMBleedToZero::relAttitudeBTZAnchored(const CMVector3d &, const CMVector3d &, const CMOQuaternion &, const CMOQuaternion &) const
CoreLocation: [CMBleedToZero:withAnchor] Do not BTZ yaw because face or source frame z-axis is aligned with gravity.
void CMBleedToZero::feedInputs(const CMRelDM::IMUData &, const CMRelDM::IMUData &, const CMOQuaternion &, bool, bool, double)
CoreLocation: [CMBleedToZero] unexpected quiescentDurationStrict < dt.
CoreLocation: [CMBleedToZero] unexpected quiescentDurationLoose < dt.
kCMPedometerDataCodingKeyStartDate
kCMPedometerDataCodingKeyEndDate
kCMPedometerDataCodingKeyNumberOfSteps
kCMPedometerDataCodingKeyDistance
kCMPedometerDataCodingKeyFloorAscended
kCMPedometerDataCodingKeyFloorDescended
kCMPedometerDataCodingKeyRecordId
kCMPedometerDataCodingKeyPace
kCMPedometerDataCodingKeyCurrentCadence
kCMPedometerDataCodingKeyFirstStepTime
kCMPedometerDataCodingKeyActiveTime
kCMPedometerDatacodingKeyUUID
kCMPedometerDataCodingKeyIsOdometerDistance
kCMPedometerDataCodingKeyIsOdometerPace
kCMPedometerDataCodingKeyNumberOfPushes
kCMPedometerDataCodingKeyWorkoutType
kCMPedometerDataCodingKeyElevationAscended
kCMPedometerDataCodingKeyElevationDescended
kCMPedometerDataCodingKeyDistanceSource
%@,<startDate %@ endDate %@ steps %@ distance %@ floorsAscended %@ floorsDescended %@ currentPace %@ currentCadence %@ averageActivePace %@>
numberOfPushes
numberOfSteps
averageActivePace
kCMPedometerEventKeyEventDate
kCMPedometerEventKeyEventType
Pause
Resume
%@,<eventDate, %@, eventType, %@>
T@"NSDate",R,N,VfDate
Tq,R,N,VfType
ReadyToFire
Pending0
Pending1
Pending2
Pending3
Pending4
Pending5
Pending6
Pending7
Pending8
Pending9
Expired
StateMax
kCMDeviceOrientationCodingKeyOrientation
%@ orientation %d name %@ @ %f
CMSetDeviceOrientationNotification
CMSetDeviceOrientationTypeKey
CMPersistOrientationCallbackModeKey
+[CMDeviceOrientationManager initialize]
CoreLocation: Orientation Manager initialized
com.apple.backboardd.loggingchanged
OrientationCallbackMode
EnableOrientationNotification
-[CMDeviceOrientationManager onMotionPreferencesUpdated]
CoreLocation: OrientationCallbackMode,%{public}d,EnableOrientationNotification,%{public}d
-[CMDeviceOrientationManager onNotification:]_block_invoke
CoreLocation: The orientation %{public}d is not in bounds
-[CMDeviceOrientationManager startDeviceOrientationUpdatesToQueue:withHandler:]
CoreLocation: Starting orientation updates, callback mode %{public}d, enable %{public}d
-[CMDeviceOrientationManager stopDeviceOrientationUpdates]
CoreLocation: Stopping orientation updates, latest %{public}d, last significant %{public}d
-[CMDeviceOrientationManager onDeviceOrientation:]
CoreLocation: Notifications disabled
CoreLocation: Received orientation. (%{public}@ to %{public}@) Timestamp %{public}f
CoreLocation: Updating client handler: Orientation %{public}@, Callback mode: %{public}d
-[CMDeviceOrientationManager deviceOrientationBlocking]
CoreLocation: Received deviceOrientationBlocking
%@.%@Time
com.apple.CoreMotion.DeviceOrientation
alwaysOn
TB,R,N,GisAlwaysOn
Orientation
static CLDeviceMotion::CLDeviceMotionNotification CLDeviceMotion::CLMotionTypeDeviceMotionModeToCLDeviceMotionNotification(const CLMotionTypeDeviceMotionMode)
CoreLocation: No viable conversion for mode %{public}#x
properties != nullptr
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Motion/Notifiers/CLDeviceMotion.mm
addDeviceMotionDispatcher_block_invoke
void CLDeviceMotion::addDeviceMotionDispatcher(CLDeviceMotion::Dispatcher *, CFTimeInterval)_block_invoke
CoreLocation: CLDeviceMotion::addDeviceMotionDispatcher adding dispatcher with property: %{public}s
removeDeviceMotionDispatcher_block_invoke
void CLDeviceMotion::removeDeviceMotionDispatcher(CLDeviceMotion::Dispatcher *)_block_invoke
CoreLocation: CLDeviceMotion::removeDeviceMotionDispatcher removing dispatcher with property: %{public}s
bool CLDeviceMotion::isModeValid(const CLMotionTypeDeviceMotionMode &) const
CoreLocation: Unsupported mode (%{public}d). Returning.
CoreLocation: Unsupported mode (%{public}d). Compass not found. Returning.
CoreLocation: Unsupported mode (%{public}d). Couldn't do DeviceMotion without Gyro. Returning.
BinaryLogDirectory
static void CLBinaryLog::create()
CoreLocation: creating the BinaryLog instance
CoreLocation: creating fInstance = new CLBinaryLog()
CLBinaryLog::CLBinaryLog()
CoreLocation: kCLBinaryLogDirectory not set!
CoreLocation: #Notice Logging binary sensor data to %{public}s
com.apple.locationd.binlog.compression
void CLBinaryLog::rotateIfNeeded(const double &)
CoreLocation: Failed to determine if log rotation is needed. errno, %{public}d, %{public}s
CoreLocation: #Warning Failed to move aside log file %s to %s (%d)
%s,%s,Failed to delete log: %s
(fMutex).__assertOwned()
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Logging/CLBinaryLog.mm
void CLBinaryLog::open()
CoreLocation: #Warning Unable to open %s
close
LogFileRotationSizeBinary
LogFileStorageCountBinary
%s,%s,Failed to write CLBinaryLog Buffer to disk
%s,%s,Failed to move file %s to %s (%d)
.bin
CoreMotionSensors
logs
CMSetPocketStateNotification
CMSetPocketStateTypeKey
com.apple.CoreMotion.CMPocketStatePrivateQueue
+[CMPocketStateManager isPocketStateAvailable]
CoreLocation: Pocket state disabled by defaults write
-[CMPocketStateManager _disableDispatcher]
CoreLocation: disabling dispatcher
com.apple.CoreMotion.CMPocketStateManager.%@.%@
-[CMPocketStateManager addToAggdScalarWithName:andScalar:]_block_invoke
CoreLocation: ADClient: %s + %llu
-[CMPocketStateManager queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:]
CoreLocation: QueryRequest,%f
com.apple.CoreMotion.PocketState.queryStart
-[CMPocketStateManager queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:]_block_invoke
CoreLocation: %f: query started with timeout %f
queryStart
CoreLocation: Query aborted
queryAbort
CoreLocation: QueryTimerFire,%f
queryTimerFire
queryResponse.%@
CoreLocation: %f: query response external=%u (%s), cbcount=%lu
CoreLocation: timer fired even though fQueryTimer is NULL
CoreLocation: Attempted to exceed max monitor time %f, %f
CoreLocation: Query timer failed to initialize
queryTimerFail
-[CMPocketStateManager onNotification:]_block_invoke
CoreLocation: The pocket state %d is not in bounds
T@"<CMPocketStateDelegate>",N,V_delegate
double CLDistanceCalc::calculateDistance(const CLDaemonLocation &, const CLDaemonLocation &)
CoreLocation: #Warning refAlt < %.1lf,refAlt,%.1lf,using the min
CoreLocation: #Warning refAlt > %.1lf,refAlt,%.1lf,using the max
kCMSpringDataCodingKeyRecordId
kCMSpringDataCodingKeySourceId
kCMSpringDataCodingKeySessionId
kCMSpringDataCodingKeyEventTime
kCMSpringDataCodingKeyEventType
OutOfBid
%@, <eventTime, %@, eventType, %@>
CLOrientationNotifier
CLOrientationNotifier::CLOrientationNotifier()
CoreLocation: hwType, %{public}d
CoreLocation: form factor %{public}u
SBHasSeenACaseLatchCoverOnce
com.apple.springboard.HasSeenACaseLatchCoverNotification
CoreLocation: Registering for SBHasSeenACaseLatchCoverNotification.
CoreLocation: fHasSeenACaseLatchCoverOnce %{public}u
virtual void CLOrientationNotifier::numberOfSpectatorsChanged(int, size_t)
CoreLocation: Unrecognized notification
Built-In
ReportInterval
CoreLocation: Unrecognized notification request %{public}u
void CLOrientationNotifier::startDetection(bool)
CoreLocation: forceAccelOnly for device %{public}d
OrientationGyroTimeout
OrientationStableVariance
CoreLocation: fOrientationGyroTimeout,%{public}f,fEnableGyroTimeout,%{public}d,fMaxAccelerationVarianceForStability,%{public}f
OrientationAccelDecimation
CoreLocation: Not starting orientation detection since requested accelerometer frequency < 0
CoreLocation: No accelerometer; not detecting orientation!
CoreLocation: fHasSeenACaseLatchCoverOnce, %{public}d
void CLOrientationNotifier::stopDetection()
CoreLocation: Stopping orientation detection.
void CLOrientationNotifier::onCoverNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)
static void CLOrientationNotifier::onKeyboardState(const bool *, void *)
CoreLocation: Received keyboard state %{public}u
void CLOrientationNotifier::onIohidEvent(void *, void *, void *, IOHIDEventRef)
CoreLocation: Received wrong event type %{public}u
CoreLocation: Received invalid orientation %{public}ld
CoreLocation: Received stale orientation (%{public}u @ %{public}llu)
CoreLocation: AOO update: %u
kCLConnectionMessageFallStatsAvailable
kCLConnectionMessageFallStatsSetEnabled
-[CMFall setStatsEnabled:]
CoreLocation: #Notice Response invalid.
-[CMFall setDataCollectionConfiguration:]
kCLConnectionMessageFallStatsGetConfig
kCLConnectionMessageFallStatsSendStats
kCLConnectionMessageAnomalyDetectionSimulateEvent
CLPlatformInfo::motionCaps().deviceMotionService
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Motion/Notifiers/Compass/CLCompass7.mm
CLCompass7
virtual void CLCompass7::start(bool)
CoreLocation: Compass for AOP started. CoverAttached %{public}d
virtual void CLCompass7::stop()
CoreLocation: Compass for AOP stopped.
void CLCompass7::setDeviceMotionServiceUpdateInterval(const CFTimeInterval &)
CoreLocation: Setting compass update interval to %{public}f
void CLCompass7::startTurnOffTimer()
CoreLocation: Could not create turn-off timer
CoreLocation: Keeping compass on for %{public}.0f seconds
static void CLCompass7::onDeviceMotionServiceIohidEvent(void *, void *, void *, IOHIDEventRef)
GyroCompass
CLMotionTypeCompass CLCompass7::populateMotionType(const CMDeviceMotionReport::Compass &, const CFTimeInterval &)
CoreLocation: Type,%s,attitude.x,%.8f,.y,%.8f,.z,%.8f,.w,%.8f,calibrated.x,%.8f,.y,%.8f,.z,%.8f,uncalibrated.x,%.8f,.y,%.8f,.z,%.8f,gravity.x,%.8f,.y,%.8f,.z,%.8f,heading,%.1f,trueheading,%.1f,accuracy,%.1f,level,%d,biasEstimation,%d,yawCorrection,%d,gravityCorrection,%d,courseCorrection,%d,visualLocalizationCorrection,%d,initalized,%d,accelSaturated,%d,gyroSaturated,%d,compassCalibration,%d,gyroCalibration,%d,course,%d,gmm,%d,north,%d,visualLocalization,%d,timestamp,%f
com.apple.CoreMotion.CMSkiTracker
-[CMSkiTrackerInternal init]_block_invoke
CoreLocation: CMSkiTracker client connection interrupt, %@, %d, %d, %p
kCLConnectionMessageSkiDataQuery
kCLConnectionMessageSkiDataUpdate
-[CMSkiTrackerInternal _stopUpdates]_block_invoke
CoreLocation: Unable to stop Ski data updates as we are are not receiving updates.
-[CMSkiTrackerInternal _queryUpdatesFromRecord:handler:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageSkiDataQuery message.
-[CMSkiTrackerInternal _handleUpdates:]
CoreLocation: Unable to parse kCLConnectionMessageSkiDataUpdate message.
CMSkiTracker.mm
T@"CMSkiTrackerInternal",R,N,V_internal
Skiing
com.apple.CoreMotion.CMCatherineFeeder.internal
-[CMCatherineFeederInternal _startDaemonConnection]_block_invoke
kCLConnectionMessageCatherineDataKey
kCLConnectionMessageCatherineData
internal
T@"CMCatherineFeederInternal",R,N,V_internal
void CMRelDM::ActivityState::feedActivity(const CLMotionActivity &)
CoreLocation: [RelDM] Activity: initialize srcMotionState. type %{public}s, timestamp, %{public}f
CoreLocation: [RelDM] Activity: detected moving to static. staticStartTime, %{public}llu
CoreLocation: [RelDM] Activity: detected static to moving. movingStartTime, %{public}llu
CoreLocation: [RelDM] Activity: entered frozen state, %{public}llu
CoreLocation: [RelDM] Activity: exited frozen state, %{public}llu
CoreLocation: [RelDM] Activity: walking stopped, %{public}llu
CoreLocation: [RelDM] ActivityType, %{public}s, confidence, %{public}d, lastStaticTS, %{public}llu, lastMovingTS, %{public}llu
void CMRelDM::ActivityState::feedWatchdogTimestamp(uint64_t)
CoreLocation: [RelDM] Activity: Reseting static startTime. Curr %{public}llu, lastMoving, %{public}llu
float CMRelDM::ActivityState::getStaticDuration(uint64_t) const
CoreLocation: [RelDM] Activity:timestamp error: current %{public}llu, lastStatic, %{public}llu
float CMRelDM::ActivityState::getMovingDuration(uint64_t) const
CoreLocation: [RelDM] Activity:timestamp error: current %{public}llu, lastMoving, %{public}llu
float CMRelDM::ActivityState::getTimeSinceWalkingStopped(uint64_t) const
CoreLocation: [RelDM] Activity:timestamp error: current %{public}llu, lastWalkStop, %{public}llu
float CMRelDM::ActivityState::getTimeSinceLastFrozenState(uint64_t) const
CoreLocation: [RelDM] Activity:timestamp error: current %{public}llu, lastFrozenStopTimestamp, %{public}llu
double CMRelDM::UnTimesyncedAuxSampleHelper::getMedianOffset() const
CoreLocation: [RelDM][UnTimesyncedAuxSampleHelper] Buffer is empty.
uint64_t CMRelDM::UnTimesyncedAuxSampleHelper::constructAuxTimestampFromUntimesyncedAuxSample(uint64_t, uint64_t)
CoreLocation: [RelDM] Using auxTimeOfArrival. Offset, %f
CoreLocation: [RelDM] fake auxTimestamp is ahead of src, diffMS: %f, totalUnsynced: %u, totalOutlier, %u
const T &CMQueue<double>::operator[](const size_t) const [T = double]
kKappaDataCodingKeyState
%@, <state %@>
com.apple.CoreMotion.CMWorkoutMets
-[CMWorkoutMetsInternal init]_block_invoke
CoreLocation: CMWorkoutMets, Failed with CMError code %{public}d
CoreLocation: CMWorkoutMets, Client connection interrupt, %{public}s, %{public}d, %{public}p
-[CMWorkoutMetsInternal _queryWorkoutMetsWithSessionId:handler:]
CoreLocation: Workout Mets query for session: %@
kCLConnectionMessageWorkoutMetsQuery
-[CMWorkoutMetsInternal _queryWorkoutMetsWithSessionId:handler:]_block_invoke
CoreLocation: Unable to parse kCLConnectionMessageWorkoutMetsQuery message.
CMWorkoutMets.mm
T@"CMWorkoutMetsInternal",R,N,V_internal
CMSkiData.mm
sourceId && sessionId && startDate && endDate
kCMSkiDataCodingKeyRecordId
kCMSkiDataCodingKeySourceId
kCMSkiDataCodingKeySessionId
kCMSkiDataCodingKeyStartDate
kCMSkiDataCodingKeyEndDate
kCMSkiDataCodingKeyRunDistance
kCMSkiDataCodingKeyRunAvgSpeed
kCMSkiDataCodingKeyRunMaxSpeed
kCMSkiDataCodingKeyRunSlope
kCMSkiDataCodingKeyRunElevationDescent
%@, <sessionId %@, startDate %@, endDate %@, runDistance %.2f, runAvgSpeed %.2f, runMaxSpeed %.2f, runSlope %.2f, runElevationDescent %.2f>
runDistance
runAvgSpeed
runMaxSpeed
runSlope
runElevationDescent
EventType
Connect
Disconnect
com.apple.CoreMotion.CMHeadphoneMotionManager
com.apple.relatived.public
v32@?0@"NSString"8@"NSData"16@?<v@?@"NSString"@"NSData">24
T@"CMDeviceMotion",&,V_deviceMotion
initialReferenceAttitude
T@"CMAttitude",&,N,V_initialReferenceAttitude
lowLatency
kRMStartStreamingHeadphoneMotion
v24@?0@"NSData"8@"NSError"16
-[CMHeadphoneMotionManager onDeviceMotionPrivate:]_block_invoke
CoreLocation: [CMHeadphoneMotionManager] deviceMotion: %{private}@
-[CMHeadphoneMotionManager onDeviceMotionEventPrivate:]
CoreLocation: [CMHeadphoneMotionManager] Unknown eventType: %{public}@
-[CMHeadphoneMotionManager notifyDeviceConnectedEventToClientPrivate]_block_invoke
CoreLocation: [CMHeadphoneMotionManager] Device connected
-[CMHeadphoneMotionManager notifyDeviceDisconnectedEventToClientPrivate]_block_invoke
CoreLocation: [CMHeadphoneMotionManager] Device disconnected
T@"<CMHeadphoneMotionManagerDelegate>",W,N,V_delegate
TB,R,N,GisDeviceMotionAvailable
TB,R,N,GisDeviceMotionActive
T@"CMDeviceMotion",R
CLLogBase
yyyy-MM-dd_HH-mm-ss
/Library/Logs/CrashReporter/com.apple.locationd
mobile
Library
Caches
Logs
CrashReporter
CLGyroCalibrationDatabaseSilo
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Motion/SensorCalibration/CLGyroCalibrationDatabase.mm
-[CLGyroCalibrationDatabaseAdapter beginService]
CLGyroCalibrationDatabase
virtual bool CLGyroCalibrationDatabase::getGyroStats(CLMotionTypeRotationRate &, CLMotionTypeRotationRate &, CLMotionTypeRotationRate &, bool)
CoreLocation: Warning: Not implemented.
virtual int CLGyroCalibrationDatabase::getMaxDynamicTemperature()
kCMPedometerBinCodingKeyValueOut
kCMPedometerBinCodingKeyBegin
kCMPedometerBinCodingKeyEnd
kCMPedometerBinCodingKeyState
Begin,%.4f,End,%.4f,State,%ld,ValueOut,%.4f
valueOut
Td,R,N,V_valueOut
Td,R,N,V_begin
lowerQuartile
center
upperQuartile
Td,R,N,V_end
kCMMovementDisorderResultCodingKeyStartDate
kCMMovementDisorderResultCodingKeyEndDate
kCMMovementDisorderResultCodingKeyNoObservation
kCMMovementDisorderResultCodingKeyDyskinesiaLikely
%@, <startDate %@, endDate %@, percentUnlikely %.2f, percentLikely %.2f
T@"NSDate",R,C,N,V_startDate
T@"NSDate",R,C,N,V_endDate
percentUnlikely
Tf,R,N,V_percentUnlikely
percentLikely
Tf,R,N,V_percentLikely
kCMMovementDisorderResultCodingKeyPercTremorAbsent
kCMMovementDisorderResultCodingKeyPercTremorSlight
kCMMovementDisorderResultCodingKeyPercTremorMild
kCMMovementDisorderResultCodingKeyPercTremorModerate
kCMMovementDisorderResultCodingKeyPercTremorStrong
%@, <startDate %@, endDate %@, percentUnknown %.2f, percentNone %.2f, percentSlight %.2f, percentMild %.2f, percentModerate %.2f, percentStrong %.2f
percentUnknown
Tf,R,N,V_percentUnknown
percentNone
Tf,R,N,V_percentNone
percentSlight
Tf,R,N,V_percentSlight
percentMild
Tf,R,N,V_percentMild
percentModerate
Tf,R,N,V_percentModerate
percentStrong
Tf,R,N,V_percentStrong
kCMHeartRateDataCodingKeyHeartRate
kCMHeartRateDataCodingKeyConfidence
kCMHeartRateDataCodingKeyStartDate
kCMHeartRateDataCodingKeyError
kCMHeartRateDataCodingKeyDataSource
kCMHeartRateDataCodingKeyMode
Default
Historical
Computed
FirstParty
ThirdParty
Streaming
Periodic
SpotCheck
%@,<heartRate %f, confidence %f, @ %f, startDate %@, error %s, dataSource %@, mode %@>
Td,R,N,V_heartRate
TB,R,N,V_error
Tq,R,N,V_dataSource
Tq,R,N,V_mode
CoreMotion
com.apple.CoreMotion.CMMotionUtils.AsyncMessageQueue
com.apple.CoreMotion.CMMotionUtils.SyncMessageQueue
+[CMMotionUtils sendMessageSync:]
CoreLocation: Warning: sendMessageSync failed to finish after 5 seconds
+[CMMotionUtils tccServiceMotionAccessWithLabel:]
CoreLocation: API not supported on current platform.
CoreLocation: Warning - invoking %@ on main may lead to deadlock.
_kTCCAccessRequestOptionSyncCallback
v12@?0C8
+[CMMotionUtils tccServiceMotionAccessWithBlock:]
com.apple.CoreMotion.tcc
+[CMMotionUtils fileHandleForWritingToURL:]
CoreLocation: #Notice URL must specify a file.
CoreLocation: #Notice File already exists at URL.
CoreLocation: #Notice URL must point to a file path which you have access to write to.
CoreLocation: #Notice Unable to get file handle for URL %{public}s: %{public}s
B298
OutOfEar
bool CLAccessoryNotifier::selectActiveAudioRoute(NSString *, NSString *)
CoreLocation: [AccessoryNotifier] Resetting active audio route
BT_ADDR
%hhx:%hhx:%hhx:%hhx:%hhx:%hhx
CoreLocation: [AccessoryNotifier] The current active route is identical to the requsting device %{private}@
CoreLocation: [AccessoryNotifier] Selecting active audio route for BT Address %{private}@
CoreLocation: [AccessoryNotifier] Warning! Invalid input BT address %{private}@
CoreLocation: [AccessoryNotifier] selectActiveAudioRoute retry #%{public}d
BTHeadphones%d,%d
CoreLocation: [AccessoryNotifier] The active audio route is A2083/A2084
CoreLocation: [AccessoryNotifier] The active audio route is unknown
CoreLocation: [AccessoryNotifier] Warning! Failed to obtain the hardware model from modelID %{public}@
bool CLAccessoryNotifier::selectActiveAudioRoute(NSString *, NSString *)_block_invoke
CoreLocation: [AccessoryNotifier] BT address of the active audio route : %{private}llx
CoreLocation: [AccessoryNotifier] Failed to get an updated BT address
CFRunLoopGetCurrent() == CLMotionCore::instance()->getMotionRunLoop()
void CLAccessoryNotifier::openHidDevice()
CoreLocation: [AccessoryNotifier] Accessory notifier (usage page:%{public}d,usage:%{public}d) unavailable on this platform!
Accessory
Ambiguous
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
FaceUp
FaceDown
Unexpected
kCMPoseCodingKeyQuaternionW
kCMPoseCodingKeyQuaternionX
kCMPoseCodingKeyQuaternionY
kCMPoseCodingKeyQuaternionZ
kCMPoseCodingKeyTranslationX
kCMPoseCodingKeyTranslationY
kCMPoseCodingKeyTranslationZ
kCMPoseCodingKeyConsumedAuxTimestamp
kCMPoseCodingKeyReceivedAuxTimestamp
kCMPoseCodingKeyMachAbsTimestamp
CMPose,q.x,%f,q.y,%f,q.z,%f,q.w,%f,translation.x,%f,translation.y,%f,translation.z,%f,consumedAuxTimestamp,%f,receivedAuxTimestamp,%f,machAbsTimestamp,%f,timestamp,%f
com.apple.CoreMotion.CMActivityAlarmProxyPrivateQueue
kCLConnectionMessageActivityAlarmStart
-[CMActivityAlarmProxy init]_block_invoke
CoreLocation: #Warning Did not find the triggered activity alarm in the current set of alarms.
CoreLocation: Could not get dictionary for kCLConnectionMessageActivityAlarm
kCLConnectionMessageActivityAlarmAvailable
-[CMActivityAlarmProxy listenForActivityAlarm:]
CoreLocation: #Warning Was not able to listen for alarm.  Activity alarms are not available for this system.
-[CMActivityAlarmProxy stopListeningForActivityAlarm:]
CoreLocation: #Warning Cannot unsubscribe from activity alarm (Trigger:%d, Duration:%f).  This alarm is not being listened for.
ActivityAlarm
kCMVehicleConnectionDataCodingKeyStartDate
kCMVehicleConnectionDataCodingKeyEndDate
kCLConnectionMessageVehicleConnectionMostRecent
CMActivityAlarm.mm
trigger < kActivityAlarmTriggerCount
-[CMActivityAlarm initWithTrigger:duration:onQueue:withHandler:]
CoreLocation: Unable to create sharedInstance of CMActivityAlarmProxy.
-[CMActivityAlarm initWithTrigger:duration:onRunLoop:withHandler:]
Td,N,V_duration
trigger
TI,N,V_trigger
CLPowerStateService
CMStepCounterQueue
-[CMStepCounterProxy init]_block_invoke
-[CMStepCounterProxy _startStepCountingUpdatesToQueue:updateOn:withHandler:]_block_invoke
CoreLocation: Unable to parse mesage (%{public}@) when starting updates to queue
-[CMStepCounterProxy _handleQueryResponse:onQueue:withHandler:]
CoreLocation: Unable to parse mesage (%{public}@) for query response
CMStepCounter.mm
-[CMStepCounter startStepCountingUpdatesToQueue:updateOn:withHandler:]_block_invoke
CoreLocation: Unable to start additional step updates while it is already active
-[CMStepCounter stopStepCountingUpdates]_block_invoke
CoreLocation: Unable to stop step updates as we are are not receiving updates
kCLConnectionMessageStepCountReset
stepcounterProxy
T@"CMStepCounterProxy",R,N,V_stepcounterProxy
enabled
kCMDeviceMotionLiteCodingKeyQuaternionW
kCMDeviceMotionLiteCodingKeyQuaternionX
kCMDeviceMotionLiteCodingKeyQuaternionY
kCMDeviceMotionLiteCodingKeyQuaternionZ
kCMDeviceMotionLiteCodingKeyUserAccelerationX
kCMDeviceMotionLiteCodingKeyUserAccelerationY
kCMDeviceMotionLiteCodingKeyUserAccelerationZ
kCMDeviceMotionLiteCodingKeyRotationRateX
kCMDeviceMotionLiteCodingKeyRotationRateY
kCMDeviceMotionLiteCodingKeyRotationRateZ
kCMDeviceMotionLiteCodingKeyRawAccelerationX
kCMDeviceMotionLiteCodingKeyRawAccelerationY
kCMDeviceMotionLiteCodingKeyRawAccelerationZ
kCMDeviceMotionLiteCodingKeyRawRotationRateX
kCMDeviceMotionLiteCodingKeyRawRotationRateY
kCMDeviceMotionLiteCodingKeyRawRotationRateZ
kCMDeviceMotionLiteCodingKeyMachTimestamp
kCMDeviceMotionLiteCodingKeyUsingCompass
kCMDeviceMotionLiteCodingKeyGyroTemperature
kCMDeviceMotionLiteCodingKeyCompassTemperature
kCMDeviceMotionLiteCodingKeyRawMagneticFieldX
kCMDeviceMotionLiteCodingKeyRawMagneticFieldY
kCMDeviceMotionLiteCodingKeyRawMagneticFieldZ
kCMDeviceMotionLiteCodingKeyPhysicalDeviceUniqueID
CMDeviceMotionLite.mm
[encoder allowsKeyedCoding]
%@,Gravity,%f,%f,%f,UserAcceleration,%f,%f,%f,Tip,%f,Tilt,%f,Attitude,%f,%f,%f,%f,RotationRate,%f,%f,%f,MachTimestamp,%f,UsingCompass,%d,PhysicalDeviceUniqueID,%@
%@,Gravity,%f,%f,%f,UserAcceleration,%f,%f,%f,Tip,%f,Tilt,%f,MachTimestamp,%f,UsingCompass,%d,PhysicalDeviceUniqueID,%@
Carbon,%f,%f,%f,%f,%f,%f,%f,MachTimestamp,%f,PhysicalDeviceUniqueID,%@
Magnesium,%f,%f,%f,%f,MachTimestamp,%f,PhysicalDeviceUniqueID,%@
%@,Quaternion,%f,%f,%f,%f,RotationRate,%f,%f,%f, RawAcceleration,%f,%f,%f,RawRotationRate,%f,%f,%f,MachTimestamp,%f,UsingCompass,%d PhysicalDeviceUniqueID,%@
rawAcceleration
T{?=ddd},R,N,V_rawAcceleration
rawRotationRate
T{?=ddd},R,N,V_rawRotationRate
machTimestamp
TQ,R,N,V_machTimestamp
Tf,R,N,V_gyroTemperature
compassTemperature
Tf,R,N,V_compassTemperature
rawMagneticField
T{?=ddd},R,N,V_rawMagneticField
T{?=ddd},R,N,V_gravity
T{?=ddd},R,N,V_userAcceleration
Tf,R,N
T@"CMAttitude",R,N,V_attitude
T{?=ddd},R,N,V_rotationRate
usingCompass
TB,R,N,GisUsingCompass,V_usingCompass
physicalDeviceUniqueID
T@"NSString",R,C,N,V_physicalDeviceUniqueID
BKDigitizerSignpostsEnabled
com.apple.backboardd
NRPairedDeviceRegistry
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
NRDevicePropertyIsAltAccount
com.apple.CoreMotion.CMAltimeterInternalQueue
com.apple.CoreMotion.CMAltimeterAppQueue
kCLConnectionMessageSignificantElevationUpdate
-[CMAltimeterInternal init]_block_invoke
CoreLocation: Unable to parse message (%{public}s) when starting updates to queue
kCLConnectionMessageFilteredElevationUpdate
CoreLocation: Received empty filtered elevation update
kCLConnectionMessageAbsoluteAltitudeUpdate
kCLConnectionMessageSignificantElevationDeltaQuery
-[CMAltimeterInternal _querySignificantElevationChangeFromDate:toDate:withHandler:]_block_invoke
CoreLocation: Unable to parse message (%{public}s) for query response
-[CMAltimeterInternal _handleAbsoluteAltitudeUpdate:]
CoreLocation: Error; NULL message received in AbsoluteAltimeter update
CoreLocation: Error; NULL dictionary received in AbsoluteAltimeter update
CoreLocation: Error %d received in AbsoluteAltimeter update
CoreLocation: Error; NULL data received in AbsoluteAltimeter update
CMAltimeter.mm
-[CMAltimeter onFilteredPressure:]
CoreLocation: relativeAltitude,%f,pressure,%f
AbsoluteAltitudeEnabled
+[CMAltimeter isAbsoluteAltitudeAvailable]
CoreLocation: altimeter not supported, default %d
absoluteAltitudeUpdateInterval
Td,N,V_absoluteAltitudeUpdateInterval
T@"CMAltimeterInternal",R,N,V_internal
Altimeter
com.apple.CoreMotion.CMSwimTracker
-[CMSwimTrackerInternal init]_block_invoke
CoreLocation: Failed with CMError code %{public}d, %p
CoreLocation: Client connection interrupt, %@, %d, %d, %p
kCLConnectionMessageSwimDataQuery
kCLConnectionMessageSwimDataUpdate
-[CMSwimTrackerInternal _stopUpdates]_block_invoke
CoreLocation: Unable to stop swim data updates as we are are not receiving updates, %p
-[CMSwimTrackerInternal _querySwimUpdatesFromRecord:handler:]_block_invoke
CoreLocation: Unable to parse query message, %p
-[CMSwimTrackerInternal _handleUpdates:]
CoreLocation: Unable to parse update message, %p
CoreLocation: #Warning Empty swim update, %p
CoreLocation: Setting offset record for live updates, %@, %@, %d, %p
CoreLocation: Negative distance from offset, %f, %@, %p
CoreLocation: (Approximately) Zero distance from offset, %f, %@, %p
CoreLocation: %@, %@, %d, %p
CMSwimTracker.mm
T@"CMSwimTrackerInternal",R,N,V_internal
CMMotionAlarm.mm
type == kCMMotionAlarmTypeTimer || type == kCMMotionAlarmTypeClassATimer
type < kMotionAlarmTypeCount
kCMMotionAlarmName
kCMMotionAlarmType
kCMMotionAlarmDuration
kCMMotionAlarmRepeats
kCMMotionAlarmId
kCMMotionAlarmBundleId
kCMMotionAlarmState
Name: %@, Type: %d, Duration: %d, Repeats: %d, AlarmID: %llu, BundleID: %@, AlarmState: %@
alarmId
TQ,N,V_alarmId
bundleId
T@"NSString",&,N,V_bundleId
Ti,N,V_state
manager
T@"CMMotionAlarmManager",&,N,V_manager
T@"NSString",R,&,N,V_name
TI,R,N,V_duration
repeats
TB,R,N,V_repeats
TI,R,N,V_type
%@,<startDate, %@, endDate, %@, mets, %@, sessionId, %@, sourceId, %@>
kWorkoutMetsCodingKeyStartDate
kWorkoutMetsCodingKeyEndDate
kWorkoutMetsCodingKeyMets
kWorkoutMetsCodingKeySourceId
kWorkoutMetsCodingKeySessionId
kCMStrideCalibrationEntryCodingKeyStartTime
kCMStrideCalibrationEntryCodingKeyPacebin
kCMStrideCalibrationEntryCodingKeyKvalue
kCMStrideCalibrationEntryCodingKeyKvalueTrack
kCMStrideCalibrationEntryCodingKeyScore
kCMStrideCalibrationEntryCodingKeyEndTime
kCMStrideCalibrationEntryCodingKeyDistance
kCMStrideCalibrationEntryCodingKeySteps
kCMStrideCalibrationEntryCodingKeySession
kCMStrideCalibrationEntryCodingKeySpeed
kCMStrideCalibrationEntryCodingKeyPercentGrade
kCMStrideCalibrationEntryCodingKeyGpsSource
TI,R,N
kMetMinuteDataCodingKeyStartDate
kMetMinuteDataCodingKeyAverageIntensity
%@, <startDate, %@, averageIntensity, %f>
averageIntensity
CMSwimData.mm
sourceId && sessionId && startDate && endDate && strokeType < kCMSwimStrokeTypeMax
kCMSwimDataCodingKeyRecordId
kCMSwimDataCodingKeySourceId
kCMSwimDataCodingKeySessionId
kCMSwimDataCodingKeyStartDate
kCMSwimDataCodingKeyEndDate
kCMSwimDataCodingKeyStrokeCount
kCMSwimDataCodingKeyDistance
kCMSwimDataCodingKeyAvgPace
kCMSwimDataCodingKeyLapCount
kCMSwimDataCodingKeyStrokeType
kCMSwimDataCodingKeySegmentCount
Freestyle
Backstroke
Breaststroke
Butterfly
Mixed
%@, <sessionId %@, startDate %@, endDate %@, strokeCount %lu, distance %.2f, avgPace %.2f, lapCount %lu, strokeType %@, segment %lu>
strokeCount
avgPace
lapCount
strokeType
segment
kCMOnBodyStatusResult
kCMOnBodyStatusConfidence
result %d confidence %d timestamp %f
result
T@,R,&,N,V_value
dirty
TB,N,V_dirty
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Motion/IO/CLIoHidInterface.mm
addDevice
void CLIoHidInterface::addDevice(std::shared_ptr<CLIoHidInterface::Device>)
CoreLocation: [CLIoHidInterface] Adding new Device with usage pair {%{public}d, %{public}d}
initializeHidIfNecessary
HighFrequency
void CLIoHidInterface::initializeHidIfNecessary()
CoreLocation: [CLIoHidInterface] Could not create event system client. All bets are off
PreserveTimestamp
CoreLocation: [CLIoHidInterface] Event system client initialized successfully
closeHid
void CLIoHidInterface::closeHid()
CoreLocation: [CLIoHidInterface] Hid interface closed
refreshDeviceServiceRefs
void CLIoHidInterface::refreshDeviceServiceRefs(const IOHIDServiceClientRef)
CoreLocation: [CLIoHidInterface] Refreshing service refs
PrimaryUsagePage
PrimaryUsage
CoreLocation: [CLIoHidInterface] Check service ref %{private}p with usage pair {%{public}d, %{public}d} as a potential match
invalidateDeviceServiceRefs
void CLIoHidInterface::invalidateDeviceServiceRefs()
CoreLocation: [CLIoHidInterface] invalidating hid service refs
setPropertyIoHid
bool CLIoHidInterface::setPropertyIoHid(IOHIDServiceClientRef, CFStringRef, CFTypeRef)
CoreLocation: [CLIoHidInterface] property can not be set for null hidServiceRef
CoreLocation: [CLIoHidInterface] IOHIDServiceClientSetProperty() returned false
applyAllDirtyDeviceProperties
void CLIoHidInterface::applyAllDirtyDeviceProperties()
CoreLocation: [CLIoHidInterface] apply all dirty device properties
CoreLocation: [CLIoHidInterface] Service for device with usage pair {%{public}d, %{public}d} is not ready
successfully
unsuccessfully
CoreLocation: [CLIoHidInterface] Property for usage pair {%{public}d, %{public}d}: {%{public}@ = %{public}@} was set %{public}s
CoreLocation: [CLIoHidInterface] Could not set all properties. Setting timer to fire %{public}f seconds from now
CoreLocation: [CLIoHidInterface] Could not set all properties after too many retries. Giving up.
setMatchingForDevices
void CLIoHidInterface::setMatchingForDevices()
CoreLocation: [CLIoHidInterface] Prox: remove set matching multiple
CoreLocation: [CLIoHidInterface] Adding match entry for usage pair {%{public}d, %{public}d}
CoreLocation: [CLIoHidInterface] Setting matching multiple for %{public}lu events
void CLIoHidInterface::onEvent(void *, void *, IOHIDEventRef)
CoreLocation: [CLIoHidInterface] Received null sender
CoreLocation: [CLIoHidInterface] Got null event,sender %{private}p,registryID %{public}llx
CoreLocation: [CLIoHidInterface] Fetching historical events
CoreLocation: [CLIoHidInterface] Did not fetch historical events
void CLIoHidInterface::onEventSystemReset(void *)
CoreLocation: [CLIoHidInterface] It looks like our HID event system just become available (again)
void CLIoHidInterface::onServiceRegistration(void *, IOHIDServiceClientRef)
CoreLocation: [CLIoHidInterface] New IOHIDServiceClientRef for usage pair {%{public}d, %{public}d} just became available.
void CLIoHidInterface::onServiceRemoval(void *, IOHIDServiceClientRef)
CoreLocation: [CLIoHidInterface] onServiceRemoval - IOHIDServiceClientRef for service %{private}p with usage pair {%{public}d, %{public}d} and property %{private}@ will be removed.
CoreLocation: [CLIoHidInterface] onServiceRemoval - successfully switch to service %{private}p with usage pair {%{public}d, %{public}d} and property %{private}@.
CoreLocation: [CLIoHidInterface] onServiceRemoval - no available alternatives
setCallback
setProperty
virtual void CLIoHidInterface::Device::setProperty(NSString *, id)
CoreLocation: [CLIoHidInterface] Could not set property value for %{public}@
copyProperty
copyEvent
eventType > 0
setEventType
setMatchingProperties
void CLIoHidInterface::Device::setMatchingProperties(NSDictionary<NSString *,id> *)
CoreLocation: [CLIoHidInterface] setMatchingProperties - Early return for identical properties %{private}@
CoreLocation: [CLIoHidInterface] setMatchingProperties - Previously matched service ref %{private}p does not match new properties %{public}@. Clearing and refreshing.
CoreLocation: [CLIoHidInterface] setMatchingProperties - Failed to stop streaming from the old service
CoreLocation: [CLIoHidInterface] setMatchingProperties - successfully switch to new service %{private}p
initializeServiceRef
bool CLIoHidInterface::Device::initializeServiceRef()
CoreLocation: [CLIoHidInterface] Service for usage pair {%{public}d, %{public}d} is not ready
getServiceRef
updateServiceRef
void CLIoHidInterface::Device::updateServiceRef(IOHIDServiceClientRef, bool)
CoreLocation: [CLIoHidInterface] Failed to stop streaming from the old service before switching to the new one
CoreLocation: [CLIoHidInterface] Device,usagePage,%{public}d,usage,%{public}d,hidserviceref,old,%{private}p,new,%{private}p
CoreLocation: [CLIoHidInterface] Service ref with usage pair {%{public}d, %{public}d} is %{private}p
static bool CLIoHidInterface::Device::serviceMatchesProperties(IOHIDServiceClientRef, NSDictionary<NSString *,id> *)
CoreLocation: [CLIoHidInterface] Checking matching property %{public}@ = %{private}@ for service ref %{private}p
CoreLocation: [CLIoHidInterface] Invalid matching property %{public}@ = %{public}@ for service ref %{private}p
CoreLocation: [CLIoHidInterface] Property mismatch! %{public}@ = %{public}@ for service ref %{private}p
void CLIoHidInterface::Device::print() const
CoreLocation: [CLIoHidInterface] Device,hidUsagePage,%{public}d,hidUsage,%{public}d,hasCallback,%{public}d,serviceRef,%{private}p
void CLIoHidInterface::Device::printProperties() const
CoreLocation: [CLIoHidInterface] 
Property: %{public}@ = %{public}@,dirty,%{public}d
Possible
CMFitnessMachineData.mm
kCMFitnessMachineDataKeyTimestamp
kCMFitnessMachineDataKeyElapsedTime
kCMFitnessMachineDataKeyTotalEnergy
kCMFitnessMachineDataKeyTotalDistance
kCMFitnessMachineDataKeyTotalElevationAscended
kCMFitnessMachineDataKeyTotalStrideCount
kCMFitnessMachineDataKeyTotalStrokeCount
kCMFitnessMachineDataKeyTotalFloorsClimbed
kCMFitnessMachineDataKeyInstantaneousSpeed
kCMFitnessMachineDataKeyInstantaneousCadence
kCMFitnessMachineDataKeyInstantaneousPower
kCMFitnessMachineDataKeyInclination
kCMFitnessMachineDataKeyResistanceLevel
%@, <timestamp, %f, elapsedTime, %f, totalEnergy, %f, totalDistance, %f, totalElevationAscended, %f,  totalStrideCount, %ld, totalStokeCount, %ld,totalFloorsClimbed, %ld, instantaneousSpeed, %f, instantaneousCadence, %f, instantaneousPower, %f, inclination, %f, resistanceLevel, %f>
elapsedTime
Td,N,V_elapsedTime
totalEnergy
Td,N,V_totalEnergy
Td,N,V_totalDistance
totalElevationAscended
Td,N,V_totalElevationAscended
totalStrideCount
Tq,N,V_totalStrideCount
totalStrokeCount
Tq,N,V_totalStrokeCount
totalFloorsClimbed
Tq,N,V_totalFloorsClimbed
instantaneousSpeed
Td,N,V_instantaneousSpeed
instantaneousCadence
Td,N,V_instantaneousCadence
instantaneousPower
Td,N,V_instantaneousPower
Td,N,V_inclination
resistanceLevel
Td,N,V_resistanceLevel
void CLAudioAccessoryInterface::setBTAddress(uint64_t)
CoreLocation: [CLAudioAccessoryInterface] clear the BT address
%02x:%02x:%02x:%02x:%02x:%02x
CoreLocation: [CLAudioAccessoryInterface] BT address of the current device is %{private}s
void CLAudioAccessoryInterface::refreshBTDevice()
CoreLocation: [CLAudioAccessoryInterface] refresh device handle - invalid BT session
CoreLocation: [CLAudioAccessoryInterface] refresh device handle - invalid BT address %{private}s
CoreLocation: [CLAudioAccessoryInterface] refresh device handle - Failed to convert %{private}s into a valid BT address
CoreLocation: [CLAudioAccessoryInterface] refresh device handle - Failed to get the device handle with BT address %{private}s
CoreLocation: [CLAudioAccessoryInterface] refresh device handle - Failed to get the product ID
CLAudioAccessoryInterface
void CLAudioAccessoryInterface::attachBTSession()
CoreLocation: [CLAudioAccessoryInterface] Failed to register BT session callback
void CLAudioAccessoryInterface::updateTimeSync()
CoreLocation: [CLAudioAccessoryInterface] update TimeSync failed due to invalid BT device or BT address %{private}s
enable
disable
succeeded
failed
CoreLocation: [CLAudioAccessoryInterface] %{public}s high precision TimeSync %{public}s
CoreLocation: [CLAudioAccessoryInterface] %{public}s low precision TimeSync %{public}s
InEar
InCase
void CLAudioAccessoryInterface::getInEarStatus(BTAccessoryInEarStatus &, BTAccessoryInEarStatus &) const
CoreLocation: [CLAudioAccessoryInterface] in ear status - invalid BT device
CoreLocation: [CLAudioAccessoryInterface] in ear status - invalid BT address %{private}s
CoreLocation: [CLAudioAccessoryInterface] in ear status - failed to get IED setting
CoreLocation: [CLAudioAccessoryInterface] in ear status - IED is disabled
CoreLocation: [CLAudioAccessoryInterface] in ear status - failed to get inear status
CoreLocation: [CLAudioAccessoryInterface] in ear status - Primary:%{public}@, Secondary:%{public}@
void CLAudioAccessoryInterface::btSessionEventHandler(BTSession, BTSessionEvent, BTResult)
CoreLocation: [CLAudioAccessoryInterface] BT ssession terminated
CoreLocation: [CLAudioAccessoryInterface] BT session attached
CoreLocation: [CLAudioAccessoryInterface] Accessory Mananger unavailable. Status %{private}d
CoreLocation: [CLAudioAccessoryInterface] Failed to register BT accessory callback.  Status %{private}d
%llu, %f, %f, (%f, %f, %f)
accel_x
accel_y
accel_z
CLGestureService
isGestureServiceAvailable()
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Motion/Notifiers/CLGestureService.mm
bool CLGestureService::sendGestureCommand(const void *, size_t)
CoreLocation: #Warning Gesture service is not available on this platform
notification == kNotificationGestureReport
numberOfSpectatorsChanged
com.apple.CoreMotion.CMOnBodyStatusManagerPrivateQueue
kCLConnectionMessageOnBodyDetectionParams
kCLConnectionMessageOnBodyDetection
-[CMOnBodyStatusManager connect]_block_invoke
-[CMOnBodyStatusManager startOnBodyStatusDetectionPrivateToQueue:withParameters:handler:]
CoreLocation: Neither the queue nor the handler can be nil
payload
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Shared/Motion/IO/CLIoHidUtils.mm
sensorTimeFromHidChildEvent
length == sensorTimeSize
uint64_t sensorTimeFromHidChildEvent(IOHIDEventRef)
CoreLocation: Event has no timestamp
CoreLocation: Event has no children
CoreLocation: #Warning Key %{public}@ not found!
bool getBytesFromHIDService(void *, IOHIDServiceClientRef, CFStringRef, size_t)
[data length] == expected_length
getBytesFromHIDService
void kf_work(kiss_fft_cpx *, const CMQueue<scalar_32> &, int, const size_t, int, int *, const kiss_fft_cfg)
CoreLocation: Error in FFT,p,%d
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Daemon/Shared/Utilities/CLNotifierClientAdapter.mm
-[CLNotifierClientAdapter init]
_client
-[CLNotifierClientAdapter onNotification:withData:]
CLNotifierClientBase: %p
TB,N,V_valid
com.apple.CoreMotion.CMKappa
-[CMKappaInternal init]_block_invoke
CoreLocation: Kappa response failed with error %{public}d
-[CMKappaInternal _startKappaUpdatesForItem:withHandler:]_block_invoke
CoreLocation: returning, handler already set or updates already started
kCLConnectionMessageKappaGetStateRequest
CoreLocation: returning error unknown
kCLConnectionMessageKappaSubscriptionTypeKey
-[CMKappaInternal _stopKappaUpdates]_block_invoke
CoreLocation: Error stopping kappa updates, no active clients.
CMKappa.mm
kCLConnectionMessageKappaStatsAvailable
kCLConnectionMessageKappaSendConfig
kCLConnectionMessageKappaSendAPConfig
-[CMKappa sendCmd:]
CoreLocation: kappa command = %d
kCLConnectionMessageKappaSendCommand
-[CMKappa sendAPCmd:]
CoreLocation: kappa ap command = %d
kCLConnectionMessageKappaSendAPCommand
-[CMKappa getState]
CoreLocation: get state updates
kCLConnectionMessageKappaGetState
T@"CMKappaInternal",R,N,V_internal
Kappa
nullptr == _notifier
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Daemon/Shared/Utilities/CLNotifierServiceAdapter.mm
-[CLNotifierServiceAdapter setAdaptedNotifier:]
[self valid]
_notifier
-[CLNotifierServiceAdapter notifierClientNumForCoparty:]
ClientIntegerMap: (
%p = %d
notifier
T^{CLNotifierBase=^^?},R,N,V_notifier
void CMFiniteStateMachine::signal(uint8_t, const void *)
CoreLocation: signal,from,%d,event,%d
CoreLocation: guard check,arc,%d,passed,%d
CoreLocation: [FSM] %u,event,%u,transition,from,%u,to,%u
CoreLocation: no transition
com.apple.CoreMotion.CMWorkoutManager
-[CMWorkoutManagerInternal init]_block_invoke
CoreLocation: Workout, client connection interrupt, %@, %d, %d, %p
kCLConnectionMessageWorkoutEvent
-[CMWorkoutManagerInternal _startWorkout:]
CoreLocation: Workout, START, %@, %@, %d, %p
CoreLocation: Trying to start a swim session without using a CMSwimWorkout!  Treating this swim as an open water swim.
CoreLocation: Trying to start a generic workout without using CMGenericWorkout!
kCLConnectionMessageWorkoutStart
-[CMWorkoutManagerInternal _stopWorkout:]
CoreLocation: Workout, STOP, %@, %@, %d, %p
kCLConnectionMessageWorkoutStop
-[CMWorkoutManagerInternal _setSuggestedStopTimeout:]
CoreLocation: Workout, Registering suggested stop timeout, %@, %d, %p
kCLConnectionMessageSetWorkoutTimeout
-[CMWorkoutManagerInternal _userDismissedWorkoutAlert]
CoreLocation: Workout, User dismissed workout alert, %@, %d, %p
kCLConnectionMessageUserDismissedWorkoutAlert
-[CMWorkoutManagerInternal _triggerWorkoutLocationUpdateForTesting:]
CoreLocation: Workout, SET LOCATION FOR TESTING, %zd, %@, %d, %p
kCLConnectionMessageTriggerWorkoutLocationEventForTesting
-[CMWorkoutManagerInternal _handleDaemonResponse:]
CoreLocation: Workout, nil event dictionary, %@
CoreLocation: Workout, Error, %d, %@
-[CMWorkoutManagerInternal _handleDaemonEvent:]
CoreLocation: Workout, ERROR, %d, %@
CoreLocation: Workout, DID START at %f, %@
CoreLocation: Workout, DID STOP at %f, %@
CoreLocation: Workout, WILL PAUSE at %f, %@
CoreLocation: Workout, WILL RESUME at %f, %@
CoreLocation: Workout, SUGGESTED STOP at %f, %@
CoreLocation: Workout, PREDICTION, event %lu, %@
CoreLocation: Workout, PREDICTION START DID MUTE at %f, %@
CoreLocation: Workout, (internal only) PREDICTION UPDATE, %@
CoreLocation: Workout, LOCATION DID UPDATE at %f, %@
CoreLocation: Workout, Unrecognized event, %@
CoreLocation: Workout, Unrecognizable event dictionary, %@
kCLConnectionMessageWorkoutPrompts
-[CMWorkoutManagerInternal _getPromptsNeededForWorkoutType:handler:]_block_invoke
CMWorkoutManager.mm
workout
workoutType > kCMWorkoutTypeNoWorkout && workoutType < kCMWorkoutTypeMax
seconds > 0
workoutLocation >= kCMWorkoutLocationTypeUnknown && workoutLocation < kCMWorkoutLocationTypeTbd
T@"CMWorkoutManagerInternal",R,N,V_internal
T@"<CMWorkoutManagerDelegate>",N
Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 93,mean() on empty buffer.
Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMQueue.h, line 201,i,%zu,capacity,%u.
Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMVector.h, line 277,invalid index %zu >= %zu.
Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMVector.h, line 271,invalid index %zu >= %zu.
D(%zu) <= 0 non-positive definite matrix!
Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMMatrix.h, line 70,invalid row %zu > %zu.
Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMMatrix.h, line 71,invalid col %zu > %zu.
Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMFactoredMatrix.h, line 125,invalid element %zu <= %zu.
Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 145,back() on empty buffer.
Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMMatrix.h, line 77,invalid row %zu > %zu.
Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMMatrix.h, line 78,invalid col %zu > %zu.
Assertion failed: ldx < M*N, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/Math/CMMatrix.h, line 84,invalid element %zu >= %zu.
D[%zu] <= 0, matrix ! positive definite
Assertion failed: i < size(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 45,out of buffer range %zu.
Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 210,variance() on empty buffer.
%zu: alpha <= 0, matrix ! positive definite
[CMMediaSessionAnalyticsTracker] Metric %s: Calling start when we've already started.
[CMMediaSessionAnalyticsTracker] Metric %s: Calling stop when we haven't started.
[CMMediaSessionAnalyticsTracker] This metric was never initialized before computing average.
[CMMediaSessionAnalyticsTracker] Trying to send analytics but the session duration was 0.0, not sending.
[CMMediaSessionAnalyticsTracker] We've already sent analytics for this instance, was this intended? sent: %{public}d
[CMMediaSessionAnalyticsTracker] Sending basic analytics: 
%{private}@
[CMMediaSessionAnalyticsTracker] Sending analytics : 
%{private}@
SedentaryAlarm,Error response,%{public}d
[SedentaryTimerTriage] SedentaryAlarm _isActive.
[SedentaryTimerTriage] SedentaryAlarm _isActive dispatch sync.
[SedentaryTimerTriage] SedentaryAlarm _isActive, timer is %{public}d.
[SedentaryTimerTriage] SedentaryAlarm _handleStartStopTimerResponse dispatching handler.
[SedentaryTimerTriage] SedentaryAlarm _handleStartStopTimerResponse calling handler.
SedentaryAlarm,Error start / stop response,%{public}d
SedentaryAlarm,Error start / stop response.
[SedentaryTimerTriage] SedentaryAlarm _handleStartStopTimerResponse CMErrorNULL.
[SedentaryTimerTriage] SedentaryAlarm _handleStartStopTimerResponse timer is armed.
[SedentaryTimerTriage] SedentaryAlarm _handleStartStopTimerResponse timer is not armed.
[SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse nil response dispatching handler.
[SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse nil response calling handler.
[SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse error.
SedentaryAlarm,Error query response,%{public}d
[SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse error dispatching.
[SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse alarmDataArray.
[SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse alarmDataArray dispatching.
SedentaryAlarm,Error parsing alarm data.
[SedentaryTimerTriage] SedentaryAlarm _handleAlarmDataResponse else dispatching.
[SedentaryTimerTriage] SedentaryAlarm _registerForAlarmsWithHandler.
[SedentaryTimerTriage] SedentaryAlarm _registerForAlarmsWithHandler, setting handler for message.
Error occurred while trying to retrieve motion state update: CMErrorDomain Code:%{public}d
Unable to parse kCLConnectionMessageMotionActivityUpdate message!
Error querying most recent vehicle connection, %@
Error querying most recent in vehicle data, %@
Error querying vehicle device status, %@
Error querying vehicular operator state, %@
The client did not send streaming endpoint correctly
Failed to create connection from endpoint %@
Failed to start the streaming with handler %@
Cancelling the streaming connection
{"msg%{public}.0s":"Start streaming requested but the handler doesn't conform to the RMConnectionStreamProducingDelegate delegate", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Steaming session started, sending acknowledment
Message received but the handler doesn't implement the selector 'endpoint:didReceiveMessage:withData:replyBlock:'
XPC message missing key "%s"
#Warning Connection interrupted!
#Warning Connection invalidated!
Got unexpected xpc event
{"msg%{public}.0s":"Trying to send a message while no connection is in place", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning Connection interrupted in sendMessageWithReply!
#Warning Streaming connection interrupted!
#Warning Streaming connection invalidated!
shouldStartStreamingDataToReceiver retruned : %s
{"msg%{public}.0s":"Asked to stop a stream while no streaming is in progress", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning Streaming connection interrupted
#Warning Streaming connection dropped
Unknown xpc error received %@
{"msg%{public}.0s":"The MessageHandler MUST conform to RMConnectionStreamConsumingDelegate", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Error received on the streaming connection
Message without a payload received from the stream connection
Error while receiving a stream : %@
Can't decode the error returned to the streaming request. Unarchiver error: %@
No data in error message: %@
Streaming connection acknowledged from remote endpoint
{"msg%{public}.0s":"Request already in progress", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Peer connection detected
Error received while trying to start the streaming connection
Streaming request sent
#Warning Changing CLCommon's runloop after it was already established
#Warning Setting CLCommon's runloop after it was already established
CLCommonSetRunLoop, %p
cannot open source file: %{public}s, errno %{public}d
cannot open target file: %{public}s, errno %{public}d
error reading source file: %{public}s
error writing target file: %{public}s
cannot open compression stream: %{public}s, bzerror %{public}d
error writing target file: %{public}s, bzerror: %{public}d
error closing target file: %{public}s, bzerror: %{public}d
os_transaction created: (%p) %@
os_transaction releasing: (%p) %@
[CMSpatialLogger] Starting up.
[CMSpatialLogger] Logging event: %{private}s timestamp: %{private}f
Unable to create directory at path: %{public}s
{"msg%{public}.0s":"On call to writeItem client should check if the logger was opened", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Unable to open writer for file: %{public}s
Msl files on disk:
  %{private}s
MSLWriter - deleting: %{private}s
Default handler received message %s
Timestamp %{public}llu not long enough since previous %{public}llu. Skipping this sample.
Time interval between feeds is %{public}lf, max value is %{public}f
History buffer is empty, can't predict
Prediction target timestamp %{public}llu must be after last timestamp in buffer %{public}llu
[CMRelDMFwdPredictor] dt is less than %f.
[CMRelDMFwdPredictor] Index out of range of relative w buffer
processed %p %d to (%s)
could not create new mutable dictionary
could not deserialize property list from %{public}s
file %s does not exist... clearing, error, %s
#Warning Error reading file %{public}s: %{public}s
Could not create NSURL for file: %{public}s
Could not write data to disk %{public}s, %{public}s
Could not serialize data for file %{public}s
key %{public}s does not have element %{public}d in array of size %{public}ld
key %{public}s does not have element %{public}d in non-array type %{public}lu
Unsupported type at %@:%@ (domain:key)
type IDs do not match for key %{public}s - %{public}lu vs %{public}lu
specified index is out of range for key %{public}s (%{public}d of %{public}ld)
specified index %{public}d not applicable to type %{public}lu for key %{public}s
could not create cf type for key %{public}s
could not create write stream
could not open write stream
could not write data, error code, %{public}ld, error domain, %{public}s
could not create intermediate property list - %{public}ld (%{public}s)
%s = <dictionary (%ld entries)>:
%s = %s
%s = %0.6f
%s = %d
%s = <unhandled value type %lu>
could not get value
type IDs do not match - %{public}lu vs %{public}lu
could not convert to C string
can't convert %{public}u data bytes
#Warning type IDs do not match - %{public}lu
{"msg%{public}.0s":"CSI assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Unknown fall snippet node [cftime=%f] - update CMFallStats
Unknown Msl node in a fall snippet sequence [cftime=%f] - update CMFallStats
Decoded CMFallStats meta and found fall snippet metadata item [%s]
Unsupported HW type %d; file a radar to Purple Motion Framework
Unsupported HW type %{private}d; file a radar to CoreMotion Factory | 1.0
Workout, pool length %f for workout is too small and may lead to undefined behavior.
no mutable store path for type, %{public}d
could not get mutable store path for type, %{public}d
Unable to create directory at path: %{public}@, error, %{public}@
Unable to list files at path: %{public}s, error, %{public}@
Unable to delete file %{public}s, error, %{public}@
[CMRelDMSensorFusionMekf] Unexpected 0 accel magnitude.
[CMRelDMSensorFusionMekf] Already initialized
[CMRelDMSensorFusionMekf][hasValidStateAtAnchorTime] Failed to find a valid state idx. anchorTime=%{public}llu, newestStateTime=%{public}llu
[CMRelDMSensorFusionMekf][hasValidStateAtAnchorTime] Anchor time is ahead of current state time. anchorTime=%{public}llu, newestStateTime=%{public}llu
[CMRelDMSensorFusionMekf] Must be initialized before bleeding to zero
[CMRelDMSensorFusionMekf] Must be initialized before entering 1-IMU tracking mode
[CMRelDMSensorFusionMekf] Must be initialized before exiting 1-IMU tracking mode
[CMRelDMSensorFusionMekf] Must be initialized before propagating
[StateHistory::getState] Invalid idx, returning latest index.
[BodyFaceTransform] BodyFaceTransform has not been set.
[CMAccessoryWalkingDetector],pedEnergyPlane,%f,pedEnergyZ,%f,pedEnergyZByPlane,%f,pedEnergyZPeak,%f,thetaRollFaceDeg,%f,thetaPitchFaceDeg,%f,thetaYawFaceDeg,%f,isWalkingRaw,%d,isWalkingFiltered,%d,isMissingSamples,%d,timestamp,%lld,isInterpolated,%d,dataRate,%f,maxSampleDeltaInSecond,%f,reversedTimestampCounts,%d
Assertion failed: rhs.capacity() == capacity(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMQueue.h, line 82,capacity,%zu,%zu.
Sending cached message %@
Restoring the streaming channel
Trying to connect after invalidation
{"msg%{public}.0s":"Stream requested while one is already present", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning The streaming connection has been interrupted
Stopping the streaming session
Reconnection attempt
Connection stil invalid, next reconnection attempt will be in %lu seconds
{"msg%{public}.0s":"Received interruption event for an unmanaged endpoint", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Received invalidation event for an unmanaged endpoint", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Connection invalidated, setting up the reconnection timer
***not supported***
<empty>
Attempt to set key %{public}s for read-only preferences %{public}s/%{public}s!
{"msg%{public}.0s":"Assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CorrelatedMotion] updateSrcAuxMovingDuration: fAuxAvgOmegaShort, %.3f, fSrcAvgOmegaShort, %.3f, aux.qMode, %d, src.qMode, %d, auxMovingDurationSecs, %.3f, srcStaticDurationSecs, %.3f
[CorrelatedMotion] isInCorrelatedActivity, %d, onGymMachine, %d, srcWalking, %d, srcVehicle, %d, srcMovingLT, %d, srcStatic, %d, noBTZLT, %d, auxMovingDurationSecs, %.3f, srcStaticDurationSecs, %.3f
[CorrelatedActivity] auxMovingDuration, %.3f, auxRotGrav, %.3f, auxRot, %.3f, aux.qMode, %d
[CorrelatedActivity] auxRotGravFull, %.3f, srcRotGravFull, %.3f, diff, %.3f
[CorrelatedActivity] auxRotGrav, %.3f, srcRotGrav, %.3f, relW, %.3f
[CMRelDMSensorFusionMekf][RelativeGravityConstraints][CorrelatedAnchor] MagnitudeDiffUnity,%{public}.2e, rotationMax,%{public}.2f,timestamp,%{public}llu
[CMRelDMSensorFusionMekf][RelativeGravityConstraints][CorrelatedBTZ] measNoiseVar,%{public}.2e, timestamp,%{public}llu
Unable to allocate buffer for sensor recorder.
Error occurred while trying to retrieve accelerometer record!
Error occurred while trying to retrieve accelerometer records!
Successfully wrote accelerometer data to file.
Error occurred while trying to write accelerometer data to file!
Successfully set sensor sample rate.
Error occurred while trying to set sensor sample rate!
Error occurred while trying to retrieve accelerometer data!
Response invalid.
#Notice -[%{public}s %{public}s] fromDate has been adjusted so that the duration requested is <= 12 hours.
#Notice Unable to get file handle for URL %{public}@
registering for keyboard updates
#Warning Failed to register for keyboard updates. Could not register for AppleHIDKeyboardEventDriverV2 service kIOFirstMatchNotification and kIOTerminatedNotification.
#Warning Failed to register for keyboard updates. Could not create KeyboardConnectNotificationPort and KeyboardConnectNotificationPort
unregistering for keyboard updates
CMWakeGestureManager is not supported on this platform!
WakeGesture does not run on this platform
CMWakeGestureManagerDelegate selectors: %x
Could not create instance of CLGestureService. Is wake gesture supported on this platform?
CLGestureService with external dispatch queue %p
CLGestureService with internally created dispatch queue %p
Process: %{public}@, IsPrimary: %{public}d
Failed to register for backlight service notification
Backlight level notification (%{public}llu)
Unable to send display state
Unable to start wake gesture updates, service does not exist
Start Wake Gesture Updates
Stop Wake Gesture Updates
Error simulating gesture: %{public}u, delay,%f
Unable to invoke delegate. Please call startWakeGestureUpdates first.
Loaded Preferences. Latency Alert: %d, Latency Threshold: %d, Audio Alert: %d
Gesture state %{public}zd is invalid!
Gesture state updated to %{public}d
Invalid CMSendWakeGestureNotification payload!
Gesture notification: %{public}d(%{public}@), Mode:%{public}@, Start:%{public}@, End:%{public}@, HostAwake, %{public}d, Inferred:%{public}u
Skipping redundant gesture update
No valid delegate found.
Gesture state notified,%{public}@,currentTime,%{public}f
Attempt re-enabling detected state recognition
{"msg%{public}.0s":"This is not the SPI you are looking for", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Unable to send reenable-detected hint
Failed with CMError code %{public}d
CMOdometer client connection interrupt, %@, %d, %p
Unable to parse kCLConnectionMessageOdometerUpdate message!
#Warning The requested activity %ld is not yet supported
#Warning Unsupported activity requested
[CMMediaSession] Logging to: %{private}@
[CMMediaSession] Returning default pose.
[CMMediaSession] Returning random pose.
[CMMediaSession] Returning pose.
[CMMediaSession] Always notifying pose at 50Hz.
[CMMediaSession] Only notifying pose if valid and hasChanged.
[CMMediaSession] quaternion has nans. Replacing with identity quaternion.
[CMMediaSession] Creating CMMediaSession with options: %{private}@
[CMMediaSession] Resetting relDMService.
[CMMediaSession] #Warning Not starting head tracking because one bud is out of ear!
[CMMediaSession] Starting push updates
{"msg%{public}.0s":"[CMMediaSession] client queue is nil", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"[CMMediaSession] client handler is nil", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CMMediaSession] No accessory DM received during entire session of %.3f seconds
[CMMediaSession] No valid pose available during entire session of %.3f seconds
Calling _stop and analytics tracker hasn't been created. Called without _start?
[CMMediaSession] Stopping push updates
[CMMediaSession] minQuiescentPeriodForBTZ new: %f old: %f
[CMMediaSession] checking default and random pose preferences. Current defaultPose: %d, randomPose: %d
[CMMediaSession] Return default/random pose preferences changed: defaultPose: %d, randomPose: %d
[CMMediaSession] returning default pose overrides returning random pose preferences
[CMMediaSession] checking always notify pose preference. Current alwaysNotify50HzPose: %d
[CMMediaSession] always notify 50Hz pose preferences changed: alwaysNotify50HzPose: %d
[CMMediaSession] Starting preference updater 1Hz
[CMMediaSession] First non unit quaternion pose after %.3f seconds
[CMMediaSession] current accessory samples per second: %{private}d
[CMMediaSession] %{private}s
[CMMediaSession] Not feeding SrcDM due to uninitialized DM status.
[CMMediaSession] Rotation matrix or translation is missing.
[CMMediaSession] Missing face sample or error.
[CMMediaSession] Timesync: Using unsynced timestamp.
[CMMediaSession]  Timesync: Lost timesync in the middle of session. 
[CMMediaSession]  Timesync: Switching to use time-synced timestamp. diffMilliSeconds = %f
[CMMediaSession]  Timesync: large discrepency (imeSynced - unTimesynced). MS = %f
[CMMediaSession] Timesync: First timesynced sample received after %.3f seconds
[CMMediaSession]  Timesync: timesync arrived very late, gap %.3f seconds
[CMMediaSession]  Timesync: Experienced loss of timesync during session. gap = %f
[CMMediaSession] First accessory DM received after %.3f seconds
[CMMediaSession] Not feeding AuxDM due to uninitialized DM status.
[CMMediaSession] Received invalid re-enable route: %d
[CMMediaSession] Src started moving
[CMMediaSession] Aux started moving
[CMMediaSession] Aux and src started moving
[CMMediaSession] Src stopped moving
[CMMediaSession] Aux stopped moving
[CMMediaSession] Aux and src entered quiescence
[CMMediaSession] Received accessoryDeviceMotion config. side,%{public}d,configuration,%{private}s,serialNumber,%{private}s,hardwareModel,%{public}d
[CMMediaSession] Error -- config side for kAccessoryHardwareModelB298 must be 1 or 2.
[CMMediaSession] Error -- Unknown AccessoryHardwareModel.
[CMMediaSession] Tracking stalled, likely due to data gap > 0.5s
[CMMediaSession] Tracking stagnation ended. Gap from last estimate: %llu
[CMMediaSession] Both buds are in ear. Resuming head tracking
[CMMediaSession] One bud is out of ear. Pausing head tracking
%{public}s; client %{public}d does not exist
Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly
{"msg%{public}.0s":"The total size of the POD types on the 2 architectures is expected to be the same.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
%{public}s; notification %{public}s not found
CL: notifyClientsWithData (Fallback)
{"msg%{public}.0s":"notifyClientsWithData", "event":%{public, location:escape_only}s, "name":%{public, location:escape_only}s, "notification":%{public}lld}
%s; client %d has deregistered, not notifying %s
%{public}s; unknown client %{public}d
%s; already shutdown; not listing clients
%s; listing clients, num clients: %zu
%s; clients, id: %d, notification: %d
successfully got GyroBiasFit from CLGyroCalibrationDatabaseGetBiasFitAtTemperature()
Warning: can't get GyroBiasFit from CLGyroCalibrationDatabaseGetBiasFitAtTemperature()
Failed with error, %{public}d
Client connection interrupt, %@, %d, %p
Error responding to start / stop tracking request, handler unavailable.
Error parsing start / stop response.
Error parsing query response.
Empty payload, returning
Started CallHandedness updates. Current Time: %f
CallHandedness service already started!
Stopped CallHandedness updates. Current Time: %f
CallHandedness service already stopped!
CallHandedness Detection: %ld
CMPickupService Spectators, %zd
CMPickupService stopped, %zd
CMPickupService started, %zd
CMPickupService expects only 1 client
#Warning No accelerometer; not starting CMPickupDetector detection!
ExericseMinute, Failed with CMError code %{public}d
ExericseMinute, client connection interrupt, %@, %d, %d, %p
ExerciseMinute, Error stopping updates, no active clients.
ExerciseMinute, Unable to parse update.
ExerciseMinute, Unable to parse query.
Requested update interval cannot be == 0.0 and dispatcher cannot be NULL. Use interval < 0.0 for spectator.
CLMotionNotifier::addDispatcherPrivate UpdateInterval is zero!
CLMotionNotifier::addDispatcherPrivate Added dispatcher for notification:%d, Update Interval:%f(%.1fHz)
Unknown (notification,dispatcher) pair: (%d, %p)
CLMotionNotifier::setUpdateIntervalPrivate RequestedUpdateInterval:%f, UpdateInterval:%f
CLMotionNotifier::updateSamplePeriod UpdateInterval:%f
{"msg%{public}.0s":"CMError must be defined", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Could not get parent thread parameters
Motion runloop ref still not set!
Could not get scheduling parameters for motion thread, error = %{public}d
could not create runloop source
_CFRunLoopSetPerCalloutAutoreleasepoolEnabled() returned a value of, %{private}d.
Ping timer fired, resetting watchdog
Motion thread deadlock watchdog after %d petting
Failed to create watchdog timer
Motion thread exiting
Could not subscribe to system power notifications
enabled detection successfully
Device Stationary?, %s, Orientation, %s, Proximity, %s
Transition, From: %s, To: %s, %s
%f: Device Stationary?, %s, Orientation, %s, Proximity, %s, State, %s
disable Detection
%f: monitorTime, %f, bksMonitorTime, %f, bksDelay, %f, proxStatus, %s
New orientation,%{public}d,Prev orientation,%{public}d
received WillSleep
received WillPowerOn
received HasPoweredOn
CMMotionAlarmManager client connection interrupt, %@, %d, %d, %p
Tearing down CMMotionAlarmManagerInternal
Unable to stop MotionAlarm data updates as we are are not receiving updates.
Unable to register motion alarm. No delegate assigned.
Unable to register motion alarm. Invalid alarm object.
Unable to parse kCLConnectionMessageMotionAlarmRegister message.
Unable to unregister motion alarm. No delegate assigned.
Unable to unregister motion alarm. Invalid alarm object.
Unable to parse kCLConnectionMessageMotionAlarmUnregister message.
Unable to acknowledge alarm, alarm does not exist.
Unable to call kCLConnectionMessageMotionAlarmAcknowledge message. Code: %d
Unable to parse kCLConnectionMessageMotionAlarmAcknowledge message.
Unable to fire motion alarm. Received invalid message response.
Unable to fire motion alarm %@. Could not locate valid alarm to fire.
Calorie response failed with error %{public}d
%@, pid, %d, query since record, %@, %p
Attempting to request data older than 24 hours, pid, %d, startDate %@
%@, pid, %d, update, %@, %p
Error parsing update.
Error stopping calorie updates, not active clients.
Prompts needed response invalid.
Querying for calibration prompts encountered an error: %{public}ld.
UserProfile, Invalid response
UserProfile, Error while setting, %{public}d
Unable to reset calibration data. Error code %{public}ld.
Invalid response to reset calibration.
TimeToActiveCalories is negative: timeToActiveCalories, %f, %{private}@
TimeToActiveCalories, %f, target, %f, workoutType, %ld, %{private}@
Failed parse os_log format specifier for shimming:missing closing brace,format,%{public}s
CMOdometerSuitability client connection interrupt, %@, %d, %p
Unable to parse kCLConnectionMessageOdometerSuitabilityUpdate message!
[RelDMService] Constructing service with scheme %{public}d
[RelDMService] Clearing src buffers.
[RelDMService] Clearing all buffers.
[RelDMService] Resetting. WithSmoothing, %{public}d
[RelDMService] Tracking is disabled.
[RelDMService] Tracking is re-enabled.
[RelDMService] moveDuration, %.3f, var, %.4f, timeSinceAccelNonStatic, %.3f
[RelDMService] ReEnable: ts, %llu, inputTS, %llu, rot, %.3f, qMode, %d, staticDuration, %.3f
[RelDMService] large gap in aux data, %.3f
[RelDMService] ReEnable: movement resetted static period.
[RelDMService] ReEnable: reached staticDuration, %{public}.3f
[RelDMService] ReEnable: gettingStatic, ts, %llu
[RelDMService] Src IMU timestamp went backwards. curr=%{public}llu, last=%{public}llu
[RelDMService] Src IMU sample time went backwards. curr=%{public}llu, last=%{public}llu
[RelDMService] Src IMU sample time interval is large. dt=%{public}llu
[RelDMService] Src IMU sample time interval is unexpectedly large. dt=%{public}llu
[RelDMService] Unexpectedly large time interval since last aux IMU sample, resetting. timestamp, %{public}llu, fLastAuxGyroTimestamp, %{public}llu, dt, %{public}f s
[RelDMService] anchor data is far ahead of IMU: anchor, %{public}llu, auxIMU, %{public}llu
[RelDMService] Entering 2-IMU with opportunistic-anchor.
[RelDMService] Source IMU data missing
[RelDMService] Aux data timestamp stayed the same or went backwards: current, %{public}llu, last, %{public}llu
[RelDMService] Aux data timestamp has large gap: current, %{public}llu, last, %{public}llu
[RelDMService] failed to find new activeIdxSrc, %{public}llu, last, %{public}lu
[RelDMService] Unexpected. activeIndex unchanged. %{public}llu, last, %{public}lu
[RelDMService] Unexpected large discrepency between avgAuxOmega and instAuxOmega. avg, %{public}.3f, inst, %{public}.3f
[RelDMService] calcActiveIndexSrc: srcBuffer is empty.
[RelDMService] calcActiveIndexSrc: Aux data is too old compared to source data. {%{public}llu > %{public}llu diffMS: %{public}f}
[RelDMService] calcActiveIndexSrc: Unexpected Aux data is ahead of source IMU data. {aux: %{public}llu source: %{public}llu diffMS: %{public}f}
[RelDMService] Should not end up here.
[RelDMService] Unexpected large IMU dt passed to EKF. dt=%{public}llu
[RelDMService] Started requesting camera.
[RelDMService] Stopped requesting camera.
[RelDMService] Entering complex transition.
[RelDMService] Exiting complex transition.
[RelDMService] Entering BTZ.
[RelDMService] Exiting BTZ.
[RelDMService] Missing BodyFace transform prevented feedEKFWithData.
[RelDMService] Can't initialize due to accessory IMU buffers not being full.
[RelDMService] Can't initialize when accessory not static.
[RelDMService] Initializing EKF.
[RelDMService] Entering 1-IMU.
[RelDMService] Entering 2-IMU.
[RelDMService] Fixed transforms changed in session. Resetting RelDM.
[RelDMService] Headset orientation q_bf set to [%{private}f,%{private}f,%{private}f,%{private}f]
[PerceptualFilter] resetting
Assertion failed: i < size(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 39,out of buffer range %zu.
Assertion failed: n > 0, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMQueue.h, line 167,.
{"msg%{public}.0s":"CMAnomalyManager: client code unregistered delegate, unregistering for anomaly detection"}
{"msg%{public}.0s":"CMAnomalyManager: client code registered delegate, registering for anomaly detection"}
{"msg%{public}.0s":"CMAnomalyManager: checking availability", "available":%{public}hhd, "forced":%{public}hhd}
{"msg%{public}.0s":"CMAnomalyManager received event notification", "identifier":%{public}llu, "state":%{private}ld, "response":%{private}ld, "resolution":%{private}ld}
{"msg%{public}.0s":"Received same event identifier but state went from recovered to detected", "identifier":%{public}llu}
{"msg%{public}.0s":"Invalid event state", "state":%{public}ld}
{"msg%{public}.0s":"CMAnomalyManager dispatch avoided, this event is non event", "identifier":%{public}llu, "state":%{private}ld, "response":%{private}ld, "resolution":%{private}ld}
{"msg%{public}.0s":"CMAnomalyManager dispatch avoided, this event state has already been dispatched before", "identifier":%{public}llu, "state":%{private}ld, "response":%{private}ld, "resolution":%{private}ld}
{"msg%{public}.0s":"CMAnomalyManager dispatch avoided, this event state is already resolved", "identifier":%{public}llu, "state":%{private}ld, "response":%{private}ld, "resolution":%{private}ld}
{"msg%{public}.0s":"CMAnomalyManager dispatches event through onAnomalyEvent", "identifier":%{public}llu, "state":%{private}ld, "response":%{private}ld, "resolution":%{private}ld}
{"msg%{public}.0s":"CMAnomalyManager did not dispatch event through didDetectAnomalyEvent, function was deprecated", "identifier":%{public}llu, "state":%{private}ld, "response":%{private}ld, "resolution":%{private}ld}
{"msg%{public}.0s":"CMAnomalyManager did not dispatch event - no suitable selector", "identifier":%{public}llu, "state":%{private}ld, "response":%{private}ld, "resolution":%{private}ld}
{"msg%{public}.0s":"CMAnomalyManager did not dispatch event - registered delegate was released", "identifier":%{public}llu, "state":%{private}ld, "response":%{private}ld, "resolution":%{private}ld}
{"msg%{public}.0s":"CMAnomalyManager client connection interrupt", "path":%{public, location:escape_only}s, "pid":%{public}llu, "self":"%{private}p"}
{"msg%{public}.0s":"CMAnomalyManager: client code tried to startAnomalyDetection which was deprecated"}
{"msg%{public}.0s":"CMAnomalyManager: client code tried to stopAnomalyDetection which was deprecated"}
{"msg%{public}.0s":"CMAnomalyManager: registering for anomaly detection", "registerFlag":%{public}hhd}
{"msg%{public}.0s":"CMAnomalyManager: client code tried to ackAnomalyEvent which was deprecated"}
{"msg%{public}.0s":"CMAnomalyManager: sendRegistrationForAnomalyEvent with no event", "registerFlag":%{public}hhd}
{"msg%{public}.0s":"CMAnomalyManager: sendRegistrationForAnomalyEvent with event", "registerFlag":%{public}hhd, "identifier":%{public}llu, "state":%{private}ld, "response":%{private}ld, "resolution":%{private}ld}
{"msg%{public}.0s":"CMAnomalyManager: respondToAnomalyEvent", "identifier":%{public}llu, "response":%{private}ld}
{"msg%{public}.0s":"CMAnomalyManager: resolveAnomalyEvent", "identifier":%{public}llu, "resolution":%{private}ld}
Audio Accessory CMAccelerometerData: %@,now,%f
Audio Accessory CMGyroData: %@,now,%f
Audio Accessory CMDeviceMotion: %@,now,%f
Failed with code %{public}d
METMinutes,Unable to parse query response
VO2MaxData,Unable to parse query response
[CMPerceptualFilter] Gravity vector must be unity norm. gravity.x,%{public}f,.y,%{public}f,.z,%{public}f
Error -- cannot set listener orientation using boresight vector at 0 distance.
[PerceptualFilter] currTimestamp %llu, prevTimestamp, %llu, dq [%.3f, %.3f, %.3f, %.3f], dthetaNorm, %.3f
[PerceptualFilter] Entering ambience bed constraints singularity
[PerceptualFilter] Exiting ambience bed constraints singularity
[PerceptualFilter] Vectors to align are not perpendicular to boresight vector
[PerceptualFilter] already initialized, should not be calling initializeAmbienceBedGravity
[PerceptualFilter] fAmbienceBedGravity has already been set, cannot re-initialize ambience bed gravity direction.
[PerceptualFilter] Accessory gravity has not been set.
[PerceptualFilter] Accessory gravity is available
[PerceptualFilter] Initialized ambience bed orientation with fixed gravity direction
{"msg%{public}.0s":"Motion manager can not start device motion lite updates, use isDeviceMotionLiteAvailable before using this API", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Motion manager asked to start device motion lite updates for device id %@
Motion manager asked to stop device motion lite updates for device id %@
Assertion failed: arg >= 0.0, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMFFTProcessor.cpp, line 41,arg,%f.
Assertion failed: start < end, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMFFTProcessor.cpp, line 71,start,%d,end,%d.
Assertion failed: start < end, file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMFFTProcessor.cpp, line 93,start,%d,end,%d.
[CMComplexTransition][Head Turn Blocked CT] fInstantaneousHeadTurn: %d, fSustainedHeadTurnCounter: %d, time elapsed: %0.2f
[CMComplexTransition] Src inertial-Z rot rate buffer stats (dps): Min: %.2f, Mean: %.2f, Max: %.2f, First: %.2f, Mid: %.2f, Last: %.2f 
[CMComplexTransition] Aux inertial-Z rot rate buffer stats (dps): Min: %.2f, Mean: %.2f, Max: %.2f, First: %.2f, Mid: %.2f, Last: %.2f 
[CMComplexTransition][Entering Complex Transition] Timestamp: %llu, VrtRotSim: %.2f, HrzRotSim: %.2f, VrtTrnSim: %.2f, HrzTrnSim: %.2f, VrtRotSimBln: %.2f, HrzRotSimBln: %.2f, VrtTrnSimBln: %.2f, HrzTrnSimBln: %.2f, TimeSincePureYawRot: %0.1f
[CMComplexTransition][Exiting Complex Transition] Timestamp: %llu, VrtRotSim: %.2f, HrzRotRim: %.2f, VrtTrnSim: %.2f, HrzTrnSim: %.2f, VrtRotSimBln: %.2f, HrzRotSimBln: %.2f, VrtTrnSimBln: %.2f, HrzTrnSimBln: %.2f, TimeSincePureYawRot: %0.1f
Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 104,mean() on empty buffer.
Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 183,minElement() on empty buffer.
Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 161,maxElement() on empty buffer.
Assertion failed: !empty(), file /Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/CoreLocation-2420.8.7/Oscar/CMVectorBuffer.h, line 139,front() on empty buffer.
Could not get dictionary for kCLConnectionMessageGesture
Unexpected ear gesture state received: %{public}s
#Notice Calling ear gesture handler
Could not get dictionary for kCLConnectionMessageMotionState
Error occurred while trying to retrieve activity update: CMErrorDomain Code:%{public}d
Unable to parse kCLConnectionMessageMotionState message!
Could not parse dictionary for kCLConnectionMessageSidebandOverride
Could not parse dictionary for kCLConnectionMessageMotionStateSim
Timeout occurred after 5 seconds during overrideOscarSideband:withState:.  Wait result = %{public}ld
Empty pedometer dictionary.
Unable to parse message (%{public}@) when starting updates to queue
Unable to parse message when starting updates to queue!
nil pedometer event dictionary received
Error pedometer event, %{public}ld
Unrecognizable pedometer event dictionary
CMPedometer client connection interrupt, %@, %d, %p
Error occurred: %{public}@
Unable to parse message (%{public}@) for query response 
Unable to parse message when checking for availability!
Error occurred while trying to write stride calibration data to file!
Remote calibrations not available on this platform
handler not set.
fileURL must be a valid fileURL.
File already exists at URL.
URL must point to a file path which you have access to write to.
Unable to dump stride calibration data.
Unable to serialize stride cal data to json. Error: %@
Unable to write stride cal data to output file.
FitnessJuniorGoals, Unexpected age input: %{private}f yrs. Fitness junior move minute goals are designed for user age interval [5.0, 13.0) yrs.
{"msg%{public}.0s":"lookupBias was called on the base CLCompassDatabase class"}
Invalid parameters received:
%{public}s
fLocationdConnection is not NULL
Could not get geomagnetic model data for message!
fLocationdConnection is NULL
CMFitnessMachine client connection interrupt, %@, %d, %p
Error feeding fitness machine data
Error feeding fitness machine data, %@
CMCallHandednessService Spectators, %zd
CMCallHandednessService stopped, %zd
CMCallHandednessService started, %zd
CMCallHandednessService expects only 1 client
#Warning No accelerometer; not starting CMCallHandedness detection!
#Spi, Interrupted
#Spi, Invalidated
#Spi, Error with proxy, error: %@
#Spi, Key is NULL!
#Spi, Couldn't set location default!
{"msg%{public}.0s":"#Spi, getLocationDefaultForKey, ", "error":%{public, location:escape_only}@}
#Spi, setPrivateMode failed
#Spi, CLInternalSetLocationServicesEnabled failed
#Spi, CLInternalSetAuthorizationPromptMapDisplayEnabled failed
{"msg%{public}.0s":"#Spi, CLSetClientTransientAuthorizationInfo failed", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Spi, CLGetClientTransientAuthorizationInfo failed", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Spi, CLInternalChangeClientAuthorizationTime failed", "error":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Spi, CLInternalTriggerExpiredAuthorizationPurge failed", "error":%{public, location:escape_only}@}
#Spi, CLInternalSetGestureServiceEnabled failed
{"msg%{public}.0s":"#Spi, CLInternalGetPrecisionPermission failed", "error":%{public, location:escape_only}@}
#Spi, _CLInternalPerformMigration failed
#Spi, _CLShutdownDaemon failed
#Spi, _CLDisplayStatistics failed
#Spi, _CLDumpLogs failed
#Spi,RouteHintError, Exceeded max number of route hint road segments (%{public}d > %{public}d)
#Spi,RouteHint,LocationInternal,Received route hint road segments,%{public}d,routeType,%{public}d,stepType,%{public}d
#Spi,RouteHintError,Couldn't set map-matching route hint!
#Spi,getAccessoryTypeBitSet,failed
#Spi,getAccessoryTypeBitSet,%d
#Spi, _CLCopyLastLog failed
{"msg%{public}.0s":"#Spi, Setting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
{"msg%{public}.0s":"Getting status bar enabled for entity class failed", "entityClass":%{public, location:CLLocationDictionaryUtilitiesEntityClass}lld}
CL: CLCopyAppsUsingLocation
{"msg%{public}.0s":"CLCopyAppsUsingLocation", "event":%{public, location:escape_only}s}
CL: CLSetLocationDefault
{"msg%{public}.0s":"CLSetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLCopyTechnologiesInUse
{"msg%{public}.0s":"CLCopyTechnologiesInUse", "event":%{public, location:escape_only}s}
CL: CLCopyGnssBandsInUse
{"msg%{public}.0s":"CLCopyGnssBandsInUse", "event":%{public, location:escape_only}s}
Invalid bandUse,%{public}d
CL: CLGetLocationDefault
{"msg%{public}.0s":"CLGetLocationDefault", "event":%{public, location:escape_only}s, "key":%{public, location:escape_only}@}
CL: CLCopyActivityAlarms
{"msg%{public}.0s":"CLCopyActivityAlarms", "event":%{public, location:escape_only}s}
CL: CLGetPipelinedCaches
{"msg%{public}.0s":"CLGetPipelinedCaches", "event":%{public, location:escape_only}s}
CL: CLGetMotionSensorLogs
{"msg%{public}.0s":"CLGetMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLGetAccessoryMotionSensorLogs
{"msg%{public}.0s":"CLGetAccessoryMotionSensorLogs", "event":%{public, location:escape_only}s}
CL: CLApplyArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLApplyArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLGetArchivedAuthorizationDecisions
{"msg%{public}.0s":"CLGetArchivedAuthorizationDecisions", "event":%{public, location:escape_only}s}
CL: CLStartStopAdvertisingBeacon
{"msg%{public}.0s":"CLStartStopAdvertisingBeacon", "event":%{public, location:escape_only}s, "region":%{private, location:escape_only}@, "power":%{public, location:escape_only}@}
CL: CLPingDaemon
{"msg%{public}.0s":"CLPingDaemon", "event":%{public, location:escape_only}s}
CL: CLPassKitNotifyPassUsage
{"msg%{public}.0s":"CLPassKitNotifyPassUsage", "event":%{public, location:escape_only}s}
CL: CLWeatherNotifyForecastUsage
{"msg%{public}.0s":"CLWeatherNotifyForecastUsage", "event":%{public, location:escape_only}s}
CL: CLGetClientTransientAuthorizationInfo
{"msg%{public}.0s":"CLGetClientTransientAuthorizationInfo", "event":%{public, location:escape_only}s}
CL: CLSetClientTransientAuthorizationInfo
{"msg%{public}.0s":"CLSetClientTransientAuthorizationInfo", "event":%{public, location:escape_only}s}
CL: CLInternalPerformMigration
{"msg%{public}.0s":"CLInternalPerformMigration", "event":%{public, location:escape_only}s}
CL: CLGetStatusBarIconState
{"msg%{public}.0s":"CLGetStatusBarIconState", "event":%{public, location:escape_only}s}
CLStatusBarIconState received an icon stateu of %d
CL: CLSetMapMatchingRouteHint
{"msg%{public}.0s":"CLSetMapMatchingRouteHint", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d,stepType,%d
CL: CLSetRouteHintsForMapMatching
{"msg%{public}.0s":"CLSetRouteHintsForMapMatching", "event":%{public, location:escape_only}s}
RouteHints,CLSetRouteHintsForMapMatching,received,%lu,routeType,%d
CLGetAccessoryTypeBitSet
Retrieved cached cover state timestamp,%f
Registered for cover state notifications
Could not create timer
Cover attached,%d,forced,%d
Cover %s
[CMHeadTrackingController] Received touch event
[CMHeadTrackingController] Received srcMoved event
[CMHeadTrackingController] Received auxHasBeenStatic event
[CMHeadTrackingController] Distracted viewing notified.
[CMHeadTrackingController] Walking Detection changed : From %{public}s -> %{public}s, srcStaticFor, %{public}.2f secs, timeSinceLastSrcFrozen, %{public}.2f secs, triggered, %{public}d
[CMHeadTrackingController] FSM state: enabled
[CMHeadTrackingController] FSM state: disabled
Started pickup detection updates
Pickup detection already started!
Stopped pickup detection updates
Pickup detection service already stopped!
Pickup Detection: %{public}ld
[CMBleedToZero] unexpected 0 accel magnitude.
[CMBleedToZero] Do not BTZ yaw because face or source frame z-axis is aligned with gravity.
[CMBleedToZero] unexpected 0 accel magnitude on zVecInS_pred_proj.
[CMBleedToZero] unexpected 0 accel magnitude on zVecInS_BTZ_proj.
[CMBleedToZero:withAnchor] Do not BTZ yaw because face or source frame z-axis is aligned with gravity.
[CMBleedToZero] unexpected quiescentDurationStrict < dt.
[CMBleedToZero] unexpected quiescentDurationLoose < dt.
Orientation Manager initialized
OrientationCallbackMode,%{public}d,EnableOrientationNotification,%{public}d
The orientation %{public}d is not in bounds
Starting orientation updates, callback mode %{public}d, enable %{public}d
Stopping orientation updates, latest %{public}d, last significant %{public}d
Notifications disabled
Received orientation. (%{public}@ to %{public}@) Timestamp %{public}f
Updating client handler: Orientation %{public}@, Callback mode: %{public}d
Received deviceOrientationBlocking
No viable conversion for mode %{public}#x
CLDeviceMotion::addDeviceMotionDispatcher adding dispatcher with property: %{public}s
CLDeviceMotion::removeDeviceMotionDispatcher removing dispatcher with property: %{public}s
Unsupported mode (%{public}d). Returning.
Unsupported mode (%{public}d). Compass not found. Returning.
Unsupported mode (%{public}d). Couldn't do DeviceMotion without Gyro. Returning.
creating the BinaryLog instance
creating fInstance = new CLBinaryLog()
kCLBinaryLogDirectory not set!
#Notice Logging binary sensor data to %{public}s
Failed to determine if log rotation is needed. errno, %{public}d, %{public}s
#Warning Failed to move aside log file %s to %s (%d)
#Warning Unable to open %s
Pocket state disabled by defaults write
disabling dispatcher
ADClient: %s + %llu
QueryRequest,%f
%f: query started with timeout %f
Query aborted
QueryTimerFire,%f
%f: query response external=%u (%s), cbcount=%lu
timer fired even though fQueryTimer is NULL
Attempted to exceed max monitor time %f, %f
Query timer failed to initialize
The pocket state %d is not in bounds
#Warning refAlt < %.1lf,refAlt,%.1lf,using the min
#Warning refAlt > %.1lf,refAlt,%.1lf,using the max
hwType, %{public}d
form factor %{public}u
Registering for SBHasSeenACaseLatchCoverNotification.
fHasSeenACaseLatchCoverOnce %{public}u
Unrecognized notification request %{public}u
Unrecognized notification
forceAccelOnly for device %{public}d
fOrientationGyroTimeout,%{public}f,fEnableGyroTimeout,%{public}d,fMaxAccelerationVarianceForStability,%{public}f
Not starting orientation detection since requested accelerometer frequency < 0
No accelerometer; not detecting orientation!
Stopping orientation detection.
fHasSeenACaseLatchCoverOnce, %{public}d
Received keyboard state %{public}u
Received wrong event type %{public}u
Received invalid orientation %{public}ld
Received stale orientation (%{public}u @ %{public}llu)
AOO update: %u
#Notice Response invalid.
{"msg%{public}.0s":"CLCompass7 requires deviceMotionService", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Compass for AOP started. CoverAttached %{public}d
Compass for AOP stopped.
Setting compass update interval to %{public}f
Could not create turn-off timer
Keeping compass on for %{public}.0f seconds
Type,%s,attitude.x,%.8f,.y,%.8f,.z,%.8f,.w,%.8f,calibrated.x,%.8f,.y,%.8f,.z,%.8f,uncalibrated.x,%.8f,.y,%.8f,.z,%.8f,gravity.x,%.8f,.y,%.8f,.z,%.8f,heading,%.1f,trueheading,%.1f,accuracy,%.1f,level,%d,biasEstimation,%d,yawCorrection,%d,gravityCorrection,%d,courseCorrection,%d,visualLocalizationCorrection,%d,initalized,%d,accelSaturated,%d,gyroSaturated,%d,compassCalibration,%d,gyroCalibration,%d,course,%d,gmm,%d,north,%d,visualLocalization,%d,timestamp,%f
CMSkiTracker client connection interrupt, %@, %d, %d, %p
Unable to stop Ski data updates as we are are not receiving updates.
Unable to parse kCLConnectionMessageSkiDataQuery message.
Unable to parse kCLConnectionMessageSkiDataUpdate message.
[RelDM] Activity: initialize srcMotionState. type %{public}s, timestamp, %{public}f
[RelDM] Activity: detected moving to static. staticStartTime, %{public}llu
[RelDM] Activity: detected static to moving. movingStartTime, %{public}llu
[RelDM] Activity: entered frozen state, %{public}llu
[RelDM] Activity: exited frozen state, %{public}llu
[RelDM] Activity: walking stopped, %{public}llu
[RelDM] ActivityType, %{public}s, confidence, %{public}d, lastStaticTS, %{public}llu, lastMovingTS, %{public}llu
[RelDM] Activity: Reseting static startTime. Curr %{public}llu, lastMoving, %{public}llu
[RelDM] Activity:timestamp error: current %{public}llu, lastStatic, %{public}llu
[RelDM] Activity:timestamp error: current %{public}llu, lastMoving, %{public}llu
[RelDM] Activity:timestamp error: current %{public}llu, lastWalkStop, %{public}llu
[RelDM] Activity:timestamp error: current %{public}llu, lastFrozenStopTimestamp, %{public}llu
[RelDM][UnTimesyncedAuxSampleHelper] Buffer is empty.
[RelDM] Using auxTimeOfArrival. Offset, %f
[RelDM] fake auxTimestamp is ahead of src, diffMS: %f, totalUnsynced: %u, totalOutlier, %u
CMWorkoutMets, Failed with CMError code %{public}d
CMWorkoutMets, Client connection interrupt, %{public}s, %{public}d, %{public}p
Workout Mets query for session: %@
Unable to parse kCLConnectionMessageWorkoutMetsQuery message.
[CMHeadphoneMotionManager] deviceMotion: %{private}@
[CMHeadphoneMotionManager] Unknown eventType: %{public}@
[CMHeadphoneMotionManager] Device connected
[CMHeadphoneMotionManager] Device disconnected
Warning: Not implemented.
Warning: sendMessageSync failed to finish after 5 seconds
API not supported on current platform.
Warning - invoking %@ on main may lead to deadlock.
#Notice URL must specify a file.
#Notice File already exists at URL.
#Notice URL must point to a file path which you have access to write to.
#Notice Unable to get file handle for URL %{public}s: %{public}s
[AccessoryNotifier] Resetting active audio route
[AccessoryNotifier] The current active route is identical to the requsting device %{private}@
[AccessoryNotifier] Selecting active audio route for BT Address %{private}@
[AccessoryNotifier] Warning! Invalid input BT address %{private}@
[AccessoryNotifier] selectActiveAudioRoute retry #%{public}d
[AccessoryNotifier] The active audio route is A2083/A2084
[AccessoryNotifier] The active audio route is unknown
[AccessoryNotifier] Warning! Failed to obtain the hardware model from modelID %{public}@
[AccessoryNotifier] BT address of the active audio route : %{private}llx
[AccessoryNotifier] Failed to get an updated BT address
[AccessoryNotifier] Accessory notifier (usage page:%{public}d,usage:%{public}d) unavailable on this platform!
#Warning Did not find the triggered activity alarm in the current set of alarms.
Could not get dictionary for kCLConnectionMessageActivityAlarm
#Warning Was not able to listen for alarm.  Activity alarms are not available for this system.
#Warning Cannot unsubscribe from activity alarm (Trigger:%d, Duration:%f).  This alarm is not being listened for.
Unable to create sharedInstance of CMActivityAlarmProxy.
Unable to parse mesage (%{public}@) when starting updates to queue
Unable to parse mesage (%{public}@) for query response
Unable to start additional step updates while it is already active
Unable to stop step updates as we are are not receiving updates
Unable to parse message (%{public}s) when starting updates to queue
{"msg%{public}.0s":"Error receiving filtered elevation updates", "error":%{public}d}
Received empty filtered elevation update
Unable to parse message (%{public}s) for query response
Error; NULL message received in AbsoluteAltimeter update
Error; NULL dictionary received in AbsoluteAltimeter update
Error %d received in AbsoluteAltimeter update
Error; NULL data received in AbsoluteAltimeter update
relativeAltitude,%f,pressure,%f
altimeter not supported, default %d
Failed with CMError code %{public}d, %p
Client connection interrupt, %@, %d, %d, %p
Unable to stop swim data updates as we are are not receiving updates, %p
Unable to parse query message, %p
Unable to parse update message, %p
#Warning Empty swim update, %p
Setting offset record for live updates, %@, %@, %d, %p
Negative distance from offset, %f, %@, %p
(Approximately) Zero distance from offset, %f, %@, %p
%@, %@, %d, %p
{"msg%{public}.0s":"[CLIoHidInterface] addDevice should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Adding new Device with usage pair {%{public}d, %{public}d}
{"msg%{public}.0s":"[CLIoHidInterface] initializeHidIfNecessary should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Could not create event system client. All bets are off
[CLIoHidInterface] Event system client initialized successfully
{"msg%{public}.0s":"[CLIoHidInterface] closeHid should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Hid interface closed
{"msg%{public}.0s":"[CLIoHidInterface] refreshDeviceServiceRefs should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Refreshing service refs
[CLIoHidInterface] Check service ref %{private}p with usage pair {%{public}d, %{public}d} as a potential match
{"msg%{public}.0s":"[CLIoHidInterface] invalidateDeviceServiceRefs should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] invalidating hid service refs
{"msg%{public}.0s":"[CLIoHidInterface] setPropertyIoHid should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] property can not be set for null hidServiceRef
[CLIoHidInterface] IOHIDServiceClientSetProperty() returned false
{"msg%{public}.0s":"[CLIoHidInterface] applyAllDirtyDeviceProperties should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] apply all dirty device properties
[CLIoHidInterface] Service for device with usage pair {%{public}d, %{public}d} is not ready
[CLIoHidInterface] Property for usage pair {%{public}d, %{public}d}: {%{public}@ = %{public}@} was set %{public}s
[CLIoHidInterface] Could not set all properties. Setting timer to fire %{public}f seconds from now
[CLIoHidInterface] Could not set all properties after too many retries. Giving up.
{"msg%{public}.0s":"[CLIoHidInterface] setMatchingForDevices should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Prox: remove set matching multiple
[CLIoHidInterface] Adding match entry for usage pair {%{public}d, %{public}d}
[CLIoHidInterface] Setting matching multiple for %{public}lu events
[CLIoHidInterface] Received null sender
[CLIoHidInterface] Got null event,sender %{private}p,registryID %{public}llx
[CLIoHidInterface] Fetching historical events
[CLIoHidInterface] Did not fetch historical events
[CLIoHidInterface] It looks like our HID event system just become available (again)
[CLIoHidInterface] New IOHIDServiceClientRef for usage pair {%{public}d, %{public}d} just became available.
[CLIoHidInterface] onServiceRemoval - IOHIDServiceClientRef for service %{private}p with usage pair {%{public}d, %{public}d} and property %{private}@ will be removed.
[CLIoHidInterface] onServiceRemoval - successfully switch to service %{private}p with usage pair {%{public}d, %{public}d} and property %{private}@.
[CLIoHidInterface] onServiceRemoval - no available alternatives
{"msg%{public}.0s":"[CLIoHidInterface] setCallback should be called from motion thread", "usagePage":%{public}d, "usage":%{public}d, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"[CLIoHidInterface] setProperty should be called from motion thread", "usagePage":%{public}d, "usage":%{public}d, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Could not set property value for %{public}@
{"msg%{public}.0s":"[CLIoHidInterface] copyProperty should be called from motion thread", "usagePage":%{public}d, "usage":%{public}d, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"[CLIoHidInterface] must have event type set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"[CLIoHidInterface] setEventType should be called from motion thread", "usagePage":%{public}d, "usage":%{public}d, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"[CLIoHidInterface] setMatchingProperties should be called from motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] setMatchingProperties - Early return for identical properties %{private}@
[CLIoHidInterface] setMatchingProperties - Previously matched service ref %{private}p does not match new properties %{public}@. Clearing and refreshing.
[CLIoHidInterface] setMatchingProperties - Failed to stop streaming from the old service
[CLIoHidInterface] setMatchingProperties - successfully switch to new service %{private}p
[CLIoHidInterface] Service for usage pair {%{public}d, %{public}d} is not ready
{"msg%{public}.0s":"[CLIoHidInterface] should be running on motion thread", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
[CLIoHidInterface] Failed to stop streaming from the old service before switching to the new one
[CLIoHidInterface] Device,usagePage,%{public}d,usage,%{public}d,hidserviceref,old,%{private}p,new,%{private}p
[CLIoHidInterface] Service ref with usage pair {%{public}d, %{public}d} is %{private}p
[CLIoHidInterface] Checking matching property %{public}@ = %{private}@ for service ref %{private}p
[CLIoHidInterface] Invalid matching property %{public}@ = %{public}@ for service ref %{private}p
[CLIoHidInterface] Property mismatch! %{public}@ = %{public}@ for service ref %{private}p
[CLIoHidInterface] Device,hidUsagePage,%{public}d,hidUsage,%{public}d,hasCallback,%{public}d,serviceRef,%{private}p
[CLIoHidInterface] 
Property: %{public}@ = %{public}@,dirty,%{public}d
[CLAudioAccessoryInterface] clear the BT address
[CLAudioAccessoryInterface] BT address of the current device is %{private}s
[CLAudioAccessoryInterface] refresh device handle - invalid BT session
[CLAudioAccessoryInterface] refresh device handle - invalid BT address %{private}s
[CLAudioAccessoryInterface] refresh device handle - Failed to convert %{private}s into a valid BT address
[CLAudioAccessoryInterface] refresh device handle - Failed to get the device handle with BT address %{private}s
[CLAudioAccessoryInterface] refresh device handle - Failed to get the product ID
[CLAudioAccessoryInterface] Failed to register BT session callback
[CLAudioAccessoryInterface] update TimeSync failed due to invalid BT device or BT address %{private}s
[CLAudioAccessoryInterface] %{public}s high precision TimeSync %{public}s
[CLAudioAccessoryInterface] %{public}s low precision TimeSync %{public}s
[CLAudioAccessoryInterface] in ear status - invalid BT device
[CLAudioAccessoryInterface] in ear status - invalid BT address %{private}s
[CLAudioAccessoryInterface] in ear status - failed to get IED setting
[CLAudioAccessoryInterface] in ear status - IED is disabled
[CLAudioAccessoryInterface] in ear status - failed to get inear status
[CLAudioAccessoryInterface] in ear status - Primary:%{public}@, Secondary:%{public}@
[CLAudioAccessoryInterface] BT ssession terminated
[CLAudioAccessoryInterface] BT session attached
[CLAudioAccessoryInterface] Accessory Mananger unavailable. Status %{private}d
[CLAudioAccessoryInterface] Failed to register BT accessory callback.  Status %{private}d
{"msg%{public}.0s":"Service required to send command", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning Gesture service is not available on this platform
Neither the queue nor the handler can be nil
{"msg%{public}.0s":"Invalid child event payload!", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Unexpected sensor time length!", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Event has no timestamp
Event has no children
#Warning Key %{public}@ not found!
{"msg%{public}.0s":"Unexpected length!", "key":%{public, location:escape_only}s, "length":%{public}lu, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Error in FFT,p,%d
Kappa response failed with error %{public}d
returning, handler already set or updates already started
returning error unknown
Error stopping kappa updates, no active clients.
kappa command = %d
kappa ap command = %d
get state updates
signal,from,%d,event,%d
guard check,arc,%d,passed,%d
[FSM] %u,event,%u,transition,from,%u,to,%u
no transition
Workout, client connection interrupt, %@, %d, %d, %p
Workout, START, %@, %@, %d, %p
Trying to start a swim session without using a CMSwimWorkout!  Treating this swim as an open water swim.
Trying to start a generic workout without using CMGenericWorkout!
Workout, STOP, %@, %@, %d, %p
Workout, Registering suggested stop timeout, %@, %d, %p
Workout, User dismissed workout alert, %@, %d, %p
Workout, SET LOCATION FOR TESTING, %zd, %@, %d, %p
Workout, nil event dictionary, %@
Workout, Error, %d, %@
Workout, ERROR, %d, %@
Workout, DID START at %f, %@
Workout, DID STOP at %f, %@
Workout, WILL PAUSE at %f, %@
Workout, WILL RESUME at %f, %@
Workout, SUGGESTED STOP at %f, %@
Workout, PREDICTION, event %lu, %@
Workout, PREDICTION START DID MUTE at %f, %@
Workout, (internal only) PREDICTION UPDATE, %@
Workout, LOCATION DID UPDATE at %f, %@
Workout, Unrecognized event, %@
Workout, Unrecognizable event dictionary, %@
CMSedentaryTimer_Internal
CMSedentaryTimer
CMMotionActivityManager
CMNatalieData
CMAccelerometerDataInternal
NSCopying
CMAccelerometerData
SensorKit
SRSampling
NSObject
CMAccelerometerDataArray
CMStrideCalibrationHistory
NSSecureCoding
NSCoding
CMAltitudeDataInternal
CMAltitudeData
CMSignificantElevationSample
CMVehicleStateData
CMVehicleState
RMConnectionStreamProducingDelegate
RMConnectionDataDelegate
RMConnectionStreamConsumingDelegate
RMConnectionEndpoint
CMFallStatsItemsIterator
NSFastEnumeration
CMFallStats
SRSampleExporting
CMWorkout
CMSwimWorkout
CMFitnessMachineWorkout
CMGenericWorkout
CMDeviceMotionInternal
CMDeviceMotion
CMAttitudeInternal
CMAttitude
RMConnectionClientCachedMessage
RMConnectionClient
RMConnectionLifecycleDelegate
CMAmbientPressureDataInternal
CMAmbientPressureData
CMAmbientPressureDataArray
CMRecordedGyroData
CMRecordedPressureData
CMSensorDataList
CMSensorRecorderInternal
CMSensorRecorder
CMLogItemInternal
CMLogItem
CMWakeGestureManager
BiometricKit
CMOdometerSuitability
CMOdometerProxy
CMOdometer
CMExerciseMinuteData
CMRotationRateDataInternal
CMRotationRateData
CMRecordedRotationRateData
CMGyroDataInternal
CMGyroData
CMGyroDataArray
CMMediaSession
CMCatherineData
CMSpringTrackerInternal
CMSleepTracker
CMVO2MaxInputs
CMMotionTimeRange
CMCallHandednessManager
CMCalorieUserInfo
CMSedentaryTimerData
CMExerciseMinuteInternal
CMExerciseMinute
CMErrorUtils
CMMotionAlarmManagerInternal
CMMotionAlarmManager
CMNatalimeterInternal
CMNatalimeter
CMOdometerSuitabilityManagerProxy
CMOdometerSuitabilityManager
SRSampleDirectExporting
CMMagnetometerDataInternal
CMMagnetometerData
CMAnomalyManager
CMAudioAccessoryManagerInternal
CMAudioAccessoryManager
CMHealthTrackerInternal
CMHealthTracker
CLDeviceMotionProperties
CMMotionManagerInternal
CMMotionManager
CMElevationData
CMActivity
CMGestureManagerInternal
CMGestureManager
CMActivityManagerInternal
CMActivityManager
CMPedometerProxy
CMPedometer
CMFitnessJuniorGoals
CLCompassDatabaseProtocol
CLNotifierServiceProtocol
CLIntersiloServiceProtocol
CLIntersiloProxyDelegateProtocol
CLCompassDatabaseClientProtocol
CLNotifierServiceClientProtocol
CLIntersiloClientProtocol
CLCompassDatabaseAdapter
IsSupported
CMAnomalyEvent
CMOdometerData
CLGeomagneticModelProviderProtocol
CLGeomagneticModelProviderClientProtocol
CLGeomagneticModelProviderAdapter
CMStrideCalibrationData
CMFitnessMachineInternal
CMFitnessMachine
CLLocationInternalServiceProtocol
CLLocationInternalClient_CoreMotion
CLSensorRecorderSensorMeta
CLSensorRecorderSensorMetaRequestById
CLSensorRecorderSensorMetaRequestByDateRange
CLSensorRecorderSensorDataRequestById
CLSensorRecorderRecordSensorTypeFor
CLSensorRecorderWriteSensorDataToFileForDateRange
CLSensorRecorderSensorAvailable
CLSensorRecorderSensorSampleRate
CMAbsoluteAltitudeData
CMAnomalyMessenger
CMMotionActivity
CMPickupManager
CMPedometerData
CMPedometerEvent
CMDeviceOrientation
CMDeviceOrientationManagerInternal
CMDeviceOrientationManager
CMPocketStateQueueBlockPair
CMPocketStateManager
CMSleepData
CMFall
CMSkiTrackerInternal
CMSkiTracker
CMCatherineFeederInternal
CMCatherineFeeder
CMKappaData
CMWorkoutMetsInternal
CMWorkoutMets
CMSkiData
CMHeadphoneMotionManagerInternal
CMHeadphoneMotionManager
CLGyroCalibrationDatabaseProtocol
CLGyroCalibrationDatabaseClientProtocol
CLGyroCalibrationDatabaseAdapter
CMPedometerBin
CMDyskineticSymptomResult
CMTremorResult
CLHealthAssessmentRecordTypeForDuration
CMHeartRateData
CMMotionUtils
CMPoseInternal
CMPose
CMActivityAlarmProxy
CMVehicleConnectionData
CMVehicleConnection
CMActivityAlarm
CMStepCounterProxy
CMStepCounter
CMDeviceMotionLite
CMFitnessShared
CMAltimeterInternal
CMAltimeter
CMElevation
CMSwimTrackerInternal
CMSwimTracker
CMMotionAlarm
CMWorkoutMetsData
CMStrideCalibrationEntry
CMStrideCalibrationEntryInternal
CMStrideCalibrationEntryArray
CMMetMinute
CMSwimData
CMOnBodyStatus
CLPropertyValue
Helper
CMFitnessMachineData
CMRecordedAccelerometerData
CMOnBodyStatusManager
CLNotifierClientAdapter
CMKappaInternal
CMKappa
CLNotifierServiceAdapter
CMWorkoutManagerInternal
CMWorkoutManager
intValue
boolValue
UTF8String
numberWithDouble:
numberWithInt:
dictionaryWithObjects:forKeys:count:
dictionary
numberWithFloat:
setDictionary:
setObject:forKeyedSubscript:
init
setWithObjects:
objectForKeyedSubscript:
dealloc
sendMessage:withReplyClassesSync:
setTimerArmed:
isTimerArmed
errorWithDomain:code:userInfo:
integerValue
_handleAlarmDataResponse:withHandler:
_teardown
_isActive
_handleStartStopTimerResponse:withHandler:
_registerForAlarmsWithHandler:
fClientQueue
fDaemonQueue
fLocationdConnection
_timerArmed
featureAvailability:
_internal
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
timeIntervalSinceReferenceDate
numberWithBool:
isAvailable
isActive
startTimerWithStartTime:periodInterval:reminderInterval:autoReschedule:handler:
stopTimerWithHandler:
queryAlarmDataSince:withHandler:
registerForAlarmsWithHandler:
authorizationStatus
addOperationWithBlock:
_handleQueryResponse:onQueue:withHandler:
tccServiceMotionAccessWithBlock:
isActivityAvailable
queryActivityStartingFromDate:toDate:toQueue:withHandler:
startActivityUpdatesToQueue:withHandler:
stopActivityUpdates
fLocationConnection
fQueue
fHandler
fHandlerQueue
initWithTimestamp:
copy
initWithCoder:
decodeDoubleForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
allocWithZone:
initWithStartDate:recordId:activityType:mets:natalies:basalNatalies:sourceId:
encodeWithCoder:
encodeDouble:forKey:
encodeInteger:forKey:
encodeObject:forKey:
dateWithTimeIntervalSinceReferenceDate:
recordId
startDate
workoutName:
mets
stringValue
natalies
basalNatalies
sourceId
stringWithFormat:
supportsSecureCoding
maxNatalieEntries
copyWithZone:
activityType
description
fRecordId
fStartDate
fActivityType
fMets
fNatalies
fBasalNatalies
fSourceId
setAcceleration:
initWithAcceleration:
fAcceleration
timestamp
initWithAcceleration:andTimestamp:
acceleration
length
initWithDataType:
bytes
setDataSize:
setTimestamp:
setStartTime:
array
dataSize
startTime
initWithData:timestamp:walltime:identifier:
addObject:
initWithArray:
initWithBinarySampleRepresentation:metadata:timestamp:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
binarySampleRepresentation
decodeObjectOfClasses:forKey:
initWithCalibrationTracks:rawSpeedToKValueBins:stepCadenceToStrideLengthBins:
calibrationTracks
setCalibrationTracks:
rawSpeedToKValueBins
setRawSpeedToKValueBins:
stepCadenceToStrideLengthBins
setStepCadenceToStrideLengthBins:
_calibrationTracks
_rawSpeedToKValueBins
_stepCadenceToStrideLengthBins
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClasses:fromData:error:
setAltitude:andPressure:
initWithAltitude:andPressure:
fAltitude
fPressure
initWithAltitude:andTimestamp:atBaseAltitude:
initWithTimestamp:pressure:relativeAltitude:
relativeAltitude
pressure
initWithUUIDBytes:
initWithTimeIntervalSinceReferenceDate:
initWithDouble:
initWithRecordId:sourceId:startDate:endDate:elevationAscended:elevationDescended:
endDate
elevationAscended
elevationDescended
initWithSignificantElevation:
initWithFilteredElevation:
fEndDate
fElevationAscended
fElevationDescended
timeRange
deviceId
initWithTimeRange:deviceId:
fTimeRange
fDeviceId
objectForKey:
doubleValue
initWithStartDate:endDate:
numberWithUnsignedInt:
unsignedIntegerValue
mostRecentVehicleConnection
mostRecentInVehicle
isVehicleBasedOnDeviceId:deviceType:
vehicularState
vehicularHints
vehicularOperatorState
messagingConnection
dataDelegate
setStreamingServerConnection:
startServingStreamWithHandler:
stringWithUTF8String:
initWithBytes:length:
endpoint:didReceiveMessage:withData:replyBlock:
endpoint:didReceiveStreamingRequest:withData:
endpoint:shouldStartStreamingDataToReceiver:
endpointShouldStopStreamingData:
startServingStreamToEndpoint:error:
wrapReplyToXpcMessage:withName:data:
setMessagingConnection:
setQueue:
handleInterruption
invalidate
handleXpcMessage:replyBlock:
queue
connectionDelegate
streamingServerConnection
stopServingStream
endpoint:didReceiveStreamedData:
setStreamingClientConnection:
streamingClientConnection
handleStreamXpcError:withErrorHandler:
stopReceivingStream
streamingClientListener
setStreamingClientListener:
isEqualToString:
setWithObject:
startReceivingStreamOnConnection:errorHandler:
handleStreamXpcReply:withErrorHandler:
endpointWasInvalidated:
endpointWasInterrupted:
initWithConnection:queue:
start
pause
sendMessage:withData:
sendMessage:withData:reply:
requestStreamWithMessage:data:errorHandler:
isValid
connection
setConnectionDelegate:
setDataDelegate:
.cxx_destruct
_queue
_connectionDelegate
_dataDelegate
_streamingServerConnection
_streamingClientConnection
_streamingClientListener
_messagingConnection
lastPathComponent
boolForKey:defaultValue:
hasValueForKey:
objectForInfoDictionaryKey:
fileURLWithPath:isDirectory:
dataWithContentsOfURL:options:error:
instancesRespondToSelector:
dataWithContentsOfURL:
domain
code
writeToURL:options:error:
assertInside
sharedApplication
applicationState
numberWithUnsignedLongLong:
countByEnumeratingWithState:objects:count:
initWithData:
.cxx_construct
_data
_item
fMslReader
fMslReaderDelegate
fMslIterator
_decodeMeta
dataWithBytes:length:
initWithBufferAndLength:length:
itemsIterator
iOStime
fallType
isNearFall
_isNearFall
_fallType
_iOStime
sr_exportRepresentationEnumerator
sr_dictionaryRepresentation
processInfo
processName
compare:
workoutIsTypeWalking:
workoutIsTypeRunning:
workoutLocationTypeFromCMWorkoutType:
initWithSessionId:type:
initWithSessionId:type:locationType:
containsValueForKey:
sessionId
type
locationType
initWithSessionId:type:locationType:startDate:endDate:
workoutLocationName:
CLMotionActivityTypeFromCMWorkoutType:
CMWorkoutTypeFromCLMotionActivityType:
CMWorkoutLocationTypeFromCMSwimWorkoutLocation:
CMSwimWorkoutLocationFromCMWorkoutLocationType:
workoutIsTypePedestrian:
setLocationType:
setIsUserInitiated:
setWorkoutType:
isUserInitiated
fSessionId
fType
fLocationType
fIsUserInitiated
_isUserInitiated
location
poolLength
initWithSessionId:locationType:poolLength:startDate:endDate:
swimLocationName:
swimWorkoutInstance:
initWithSessionId:location:poolLength:
initWithSessionId:locationType:poolLength:
fLocation
fPoolLength
initWithSessionId:workoutType:manufacturerName:model:
manufacturerName
model
fitnessMachineWorkoutInstance:
fManufacturerName
fModel
workoutLabel
initWithSessionId:workoutLabel:
genericWorkoutInstance:
fWorkoutLabel
defaultManager
currentDirectoryPath
stringByAppendingString:
silo
newTimer
setHandler:
setNextFireDelay:
setQuaternion:
initWithQuaternion:
setDeviceMotion:internal:
initWithDeviceMotion:internal:
fGravity
fUserAcceleration
fRotationRate
fAttitude
fMagneticField
fMagneticFieldCalibrationLevel
fDoingYawCorrection
fDoingBiasEstimation
fHeading
fHeadingAccuracy
fSensorLocation
decodeBoolForKey:
quaternion
encodeBool:forKey:
magneticField
initWithDeviceMotion:internal:timestamp:
attitude
rotationRate
gravity
userAcceleration
magneticFieldCalibrationLevel
doingYawCorrection
doingBiasEstimation
heading
headingAccuracy
sensorLocation
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileURLWithPath:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
pathExtension
compare:options:
fileSystemRepresentation
attributesOfItemAtPath:error:
fileSize
removeItemAtPath:error:
fQuaternion
pitch
roll
rotationMatrix
multiplyByInverseOfAttitude:
initWithName:data:
initWithName:data:streamingCallback:
name
data
streamingCallback
_name
_streamingCallback
setServiceName:
setMessageHandler:
setMessageCache:
setValid:
messageCache
endpoint
requestStreamingWithMessage:data:callback:
serviceName
setEndpoint:
removeObjectAtIndex:
streamingDataCallback
setStreamingDataCallback:
stopStreamingInternal
connectionTimer
setConnectionTimer:
removeAllObjects
stopStreaming
connect
replayCache
connectionTimerDelay
setConnectionTimerDelay:
handleDaemonStart
messageHandler
initWithQueue:serviceName:messageHandler:
sendCachedMessage:withData:
_valid
_endpoint
_serviceName
_streamingDataCallback
_messageHandler
_messageCache
_connectionTimer
_connectionTimerDelay
setAmbientPressure:
initWithPressure:
initWithPressure:andTimestamp:
ambientPressure
mutableCopy
addEntriesFromDictionary:
resetWithData:timestamp:walltime:identifier:
decodeFloatForKey:
encodeFloat:forKey:
temperature
identifier
_startDateValue
_rotationRate
_timestampValue
_temperatureValue
_identifier
_pressureValue
newMetaSinceID:forType:
initWithCapacity:
_updateCurrentBlockProperties
_updatePointers
newMetaFrom:to:forType:
count
objectAtIndexedSubscript:
teardown
dataIdentifier
offset
setObject:atIndexedSubscript:
newMetaByID:forType:
newDataByID:metaID:forType:
initWithIdentifier:andType:
initFrom:to:withType:
fProxy
fDataBuffer
fCurrentBlock
fCurrentBlockIdentifier
fCurrentBlockDataIdentifier
fCurrentBlockStartTime
fCurrentBlockTimestamp
fDataBufferPtr
fDataBufferLength
fCurrentIdentifier
fStartingIdentifier
fRetrievedDataBufferIdentifier
fBlockOffset
fAccelUnpacker
fGyroUnpacker
fPressureUnpacker
fCachedData
fMetaArray
fDataType
_newMetaUsingMessage:withIdentifier:forType:
setIdentifier:
setDataType:
setEndTime:
fileDescriptor
setRate:
setMetaIdentifier:
writeSensorDataToFile:from:to:forType:
setSensorSampleRate:forType:
fInternalQueue
isRecordingAvailableForType:
tccServiceMotionAccessWithLabel:
sensorDataFromDate:toDate:forType:
timeIntervalSinceDate:
dateByAddingTimeInterval:
validateTimesFromDate:toDate:
sendSensorDataToUrl:fromDate:toDate:forType:
fileHandleForWritingToURL:
absoluteString
removeItemAtURL:error:
recordDataType:forDuration:
setDuration:
isAccelerometerRecordingAvailable
isGyroRecordingAvailable
isPressureRecordingAvailable
isAuthorizedForRecording
accelerometerDataSinceId:
gyroDataSinceId:
pressureDataSinceId:
accelerometerDataFromDate:toDate:
gyroDataFromDate:toDate:
pressureDataFromDate:toDate:
sendAccelDataToUrl:fromDate:toDate:
sendGyroDataToUrl:fromDate:toDate:
sendPressureDataToUrl:fromDate:toDate:
recordAccelerometerForDuration:
recordGyroForDuration:
recordPressureForDuration:
accelerometerDataFrom:to:
recordAccelerometerFor:
accelerometerDataSince:
setAccelSampleRate:
setGyroSampleRate:
setPressureSampleRate:
date
vendor
proxyForService:
dumpDatabase:onCompletion:
initWithMode:
mode
register:forNotification:registrationInfo:
unregister:forNotification:
fTimestamp
_internalLogItem
isWakeGestureAvailable
initWithQueue:
isWakeGestureOverrideEnabled
wakeGestureManager:didUpdateWakeGesture:
wakeGestureManager:didUpdateWakeGesture:orientation:
wakeGestureManager:didUpdateWakeGesture:orientation:detectedAt:
initWithString:
loadPreferences
stopWakeGestureUpdates
defaultCenter
onNotificationControl:
addObserver:selector:name:object:suspensionBehavior:
removeObserver:name:object:
toRaw:
userInfo
invokeDelegateWithState:
onWakeUpdated:
onPowerStateUpdated:
onBacklightServiceUpdated:
stringForNotification:
stringForMode:
stringForStartPose:
stringForViewPose:
toState:
stringForGestureState:
playAlert
logWakeLatency
sharedManager
hasSlowBootArgs
setDelegate:
delegate
startWakeGestureUpdates
simulateGestureWithDelay:Duration:
simulateGesture:after:
forceDetected
fDispatchQ
gestureUpdatesStarted
fWakeDispatcher
fPowerStateDispatcher
fWakeGestureVisitor
fCurrentState
fMeasureLatencyState
fWakePacketTimestamp
fIoNotifyPort
fIoNotification
backlightService
fLastNotificationTime
fScreenDimmingNotificationToken
fLockScreenToken
fLastDisplayOnTime
fProcessName
fIsRunningInPrimaryProcess
fEnableLatencyAlert
fEnableAudioAlert
fLatencyAlertThreshold
fDisplayState
fSelector
fUpdatedDelegate
fDelegate
containsObject:
reenableDetectedStateRecognition
initWithStartDate:suitableForRunning:suitableForWalking:
suitableForRunning
suitableForWalking
_suitableForRunning
_suitableForWalking
_startDate
unarchivedObjectOfClass:fromData:error:
_stopOdometerUpdates
odometer
odometer:didUpdateGpsAvailability:
getExecutablePathFromPid:
setTotalDistance:
totalDistance
setStartDate:
setAverageSpeed:
distance
currentSpeed
averageSpeed
initWithDistance:startDate:endDate:currentSpeed:averageSpeed:
initWithOdometer:
_startDaemonConnection
_startOdometerUpdatesWithHandler:
setOdometer:
fCallbackQueue
fGpsAvailability
_odometer
_totalDistance
_averageSpeed
odometerProxy
startOdometerUpdatesForActivity:withHandler:
stopOdometerUpdates
_delegate
_odometerProxy
initWithStartDate:recordId:sourceId:
maxExerciseMinuteDataEntries
setRotationRate:
initWithRotationRate:
initWithRotationRate:andTimestamp:
initWithData:timestamp:walltime:
cStringUsingEncoding:
returnDefaultPose
_logEvent:
returnRandomPose
alwaysNotify50HzPose
initWithPose:timestamp:
_initWithOptions:
valueForKey:
unsignedLongLongValue
_updateUserSettings
_stop
_disableLoggingForReplay
_startDefaultsPreferenceUpdater
_startHeadTracking
_notifyClientHandler
motionActivity
_start
_stopHeadTracking
_stopDefaultsPreferenceUpdater
setReturnDefaultPose:
setReturnRandomPose:
setAlwaysNotify50HzPose:
_updateMinQuiescentPeriodForBTZ
_feedPredictorEstimates
_createPoseFromListenerOrientation:Pose:
machAbsTimestamp
consumedAuxTimestamp
receivedAuxTimestamp
totalSourceIMUSamples
setTotalSourceIMUSamples:
floatValue
_feedPoseAnchor:facePoseError:
totalFacePoseAnchorSamples
setTotalFacePoseAnchorSamples:
feedPoseAnchorWithAttitude:position:timestampUs:
totalAccessoryIMUSamples
setTotalAccessoryIMUSamples:
_getAuxSampleTimestamp:currentTime:
_setFixedTransforms:
getCString:maxLength:encoding:
_isAvailable
_enableLoggingForReplayWithFilenamePrefix:filePath:
_reset
_startPoseUpdatesToQueue:andHandler:
_feedTouchEventTimestamp:
_feedSourceDeviceIMU:
_feedFacePose:rotationMatrix:timestamp:error:
_feedAccessoryDeviceMotion:
_feedAccessoryConfig:
_feedAccessoryInEarStatus:
_getLastAudioAccessorySample
_currentAudioListenerOrientation:
_setConvergenceRateForBTZ:
accessoryIMUSampleRate
setAccessoryIMUSampleRate:
prevAmbienceBedRoll
setPrevAmbienceBedRoll:
overrideDefaultHeadsetOrientation
setOverrideDefaultHeadsetOrientation:
headsetOrientationOverride
setHeadsetOrientationOverride:
_headTrackingService
_deviceMotionDispatcher
_accessoryDeviceMotionDispatcher
_accessoryDeviceMotionConfigDispatcher
_accessoryDeviceMotionInEarStatusDispatcher
_clientQueue
_clientHandler
_predictionIntervalMicroseconds
_scheme
_q_bf
_unsyncedAuxHelper
_analyticsTracker
_previousBTZState
_lastInBTZTime
_previousMotionActivityType
_lastAccessoryDMTime
_previousTracking1IMU
_previousCTState
_lastExitCTTime
_lastAngleBetweenCurrentBoresightToDefault
_previousTrackingEnabled
_lastDistractedViewingStartTime
_previousSrcMoving
_previousAuxMoving
_lastAudioAccessorySample
_lastAccessoryTimestamp
_lastSourceTimestamp
_lastStateTimestamp
_trackingEstimatesStagnated
_logForReplay
_printPoseTimer
_accessorySampleTimer
_accessorySamplesPerSecond
_activityManager
_activityQueue
_ioHidTouch
_lastTouchEventTimestamp
_motionSettings
_defaultsPreferenceTimer
_minQuiescentPeriodForBTZ
_notify50HzPoseDecimator
_sessionStartTime
_firstAccessoryDMTime
_firstValidPoseTime
_lastTimesyncLostTime
_logger
_inEarStatus
_inEarStatusGatingEnabled
_overrideDefaultHeadsetOrientation
_returnDefaultPose
_returnRandomPose
_alwaysNotify50HzPose
_totalSourceIMUSamples
_totalAccessoryIMUSamples
_totalFacePoseAnchorSamples
_accessoryIMUSampleRate
_prevAmbienceBedRoll
_headsetOrientationOverride
binaryVersion
sizeOfType
cppObjectPtr
compatibilityInfo
serialized
setCppObjectPtr:
setAdaptedNotifier:
containerWithObject:destructor:binaryVersion:typeSize:
onNotification:withData:
initWithCatherine:confidence:timestamp:
catherine
confidence
_catherine
_confidence
_startWithHandler:
_handleStartStopResponse:handler:
initWithUUIDString:
initWithSessionId:
_isTracking
_stopWithHandler:
_querySpringDataFromRecord:handler:
fTrackingStarted
isTracking
startWithHandler:
stopWithHandler:
querySleepDataFromRecord:handler:
initWithSample:
heartRate
heartRateConfidence
gradeType
grade
hasGPS
hasStrideCal
metSource
workoutType
cadence
pace
VO2MaxInputFromCMVO2MaxInputs:
initWithRecordId:startDate:mets:metSource:heartRate:heartRateConfidence:grade:gradeType:cadence:pace:hasGPS:hasStrideCal:workoutType:
fMetSource
fHeartRate
fHeartRateConfidence
fGrade
fGradeType
fCadence
fPace
fHasGPS
fHasStrideCal
fWorkoutType
resetBytesInRange:
CMMotionTimeRangeFromCLMotionTimeRange:
CLMotionTimeRangeFromCMMotionTimeRange:
isCallHandednessAvailable
onCallHandednessStateUpdated:
callHandednessManager:didUpdateState:
startCallHandednessUpdates
stopCallHandednessUpdates
fPrivateQueue
fDispatcher
mainBundle
resourcePath
initWithAge:gender:height:weight:condition:betaBlockerUse:
gender
genderString:
height
weight
condition
betaBlockerUse
initWithAge:gender:height:weight:
initWithAge:gender:height:weight:condition:
fAge
fGender
fHeight
fWeight
fCondition
fBetaBlockerUse
initWithStartDate:firedDate:alarmType:didWake:
setDateFormat:
stringFromDate:
firedDate
didWake
alarmType
fFiredDate
fAlarmType
fDidWake
arrayWithCapacity:
arrayWithArray:
_startUpdatesFromRecord:handler:
_queryExerciseMinutesFromRecord:handler:
_startUpdatesWithHandler:
lastObject
numberWithInteger:
UUIDString
UUID
_stopUpdates
fAppQueue
fStartedUpdates
fMostRecentRecord
isAuthorizedForEntitlement:
isExerciseMinuteAvailable
startUpdatesFromRecord:handler:
stopUpdates
startUpdatesWithHandler:
queryExerciseMinutesFromRecord:handler:
initWithBool:
bundleWithIdentifier:
localizedStringForKey:value:table:
CMErrorWithCode:userInfo:
CMErrorWithCode:
main
newSharedVendorUniverseWithSilo:
initWithFormat:
setUnderlyingQueue:
stationary
_startListeners
_stopListeners
_handleAlarmFire:
manager
setObject:forKey:
alarmDidRegister:error:
copyPropertiesFromAlarm:
alarmDidUnregister:error:
removeObjectForKey:
repeats
alarmId
remoteAppLaunchedWithResult:error:
alarmDidFire:error:
instance
_registerAlarm:error:
_unregisterAlarm:error:
_acknowledgeAlarm:error:
_launchRemoteAppWithError:delegate:
fAlarms
fListening
initWithName:
initWithName:type:duration:repeats:
setManager:
unregisterAlarmWithName:error:
acknowledgeAlarmWithName:error:
registerAlarmWithName:type:duration:repeats:error:
launchRemoteAppWithError:
unregisterAlarm:error:
acknowledgeAlarm:error:
_handleQueryResponse:withHandler:
_queryAbsoluteNatalimetryDataSinceRecord:withHandler:
_queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:
_startAbsoluteNatalimetryDataUpdatesWithHandler:
_stopAbsoluteNatalimetryDataUpdates
_promptsNeeded
setUserProfile:error:
briskMinuteMetsThreshold
activeMetsThreshold
userProfile
defaultUserProfile
setUserInfo:error:
resetCalibrationDataWithError:
isNatalimeterAvailable
computeRestingCaloriesAtRate:user:duration:
computeTimeToActiveCalories:user:workoutType:
queryAbsoluteNatalimetryDataSinceRecord:withHandler:
queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:
startAbsoluteNatalimetryDataUpdatesWithHandler:
stopAbsoluteNatalimetryDataUpdates
_stopOdometerSuitabilityUpdates
initWithOdometerSuitability:
_startOdometerSuitabilityUpdatesWithHandler:
odometerSuitabilityManager
setOdometerSuitabilityManager:
setSuitableForRunning:
setSuitableForWalking:
_odometerSuitabilityManager
odometerSuitabilityManagerProxy
startOdometerSuitabilityUpdatesWithHandler:
stopOdometerSuitabilityUpdates
_odometerSuitabilityManagerProxy
write:maxLength:
sr_writeUTF8RepresentationToOutputStream:
sr_prefersUTF8StringRepresentation
setMagneticField:
initWithMagneticField:
initWithMagneticField:andTimestamp:
_registerForAnomalyDetection:
state
response
resolution
anomalyManager:onAnomalyEvent:
setAcknowledgement:
_sendRegistrationForAnomalyEvent:
anomalyManager:didDetectAnomalyEvent:
setResponse:
setResolution:
isAnomalyDetectionAvailable
getAnomalyFeatureEnablingStrategyForUserAge:
startAnomalyDetection
stopAnomalyDetection
ackAnomalyEvent:withResolution:
respondToAnomalyEvent:withResponse:
resolveAnomalyEvent:withResolution:
fLastReceivedEvent
fLastDispatchedEvent
fRegisteredForNotification
contentsOfDirectoryAtPath:error:
reverseObjectEnumerator
objectEnumerator
onAudioAccessoryAccelerometer:
onAudioAccessoryGyro:
onAudioAccessoryDeviceMotion:
onAudioAccessoryDeviceMotionConfig:
onAudioAccessoryDeviceMotionStatus:
fSampleLock
fAudioAccessoryAccelerometerDispatcher
fAudioAccessoryAccelerometerUpdateInterval
fAudioAccessoryAccelerometerHandler
fAudioAccessoryAccelerometerQueue
fLatestAudioAccessoryAccelerometerSample
fAudioAccessoryGyroDispatcher
fAudioAccessoryGyroUpdateInterval
fAudioAccessoryGyroHandler
fAudioAccessoryGyroQueue
fLatestAudioAccessoryGyroSample
fAudioAccessoryDeviceMotionDispatcher
fAudioAccessoryDeviceMotionConfigDispatcher
fAudioAccessoryDeviceMotionUpdateInterval
fAudioAccessoryDeviceMotionHandler
fAudioAccessoryDeviceMotionQueue
fFrameRotation
fAudioAccessoryDeviceMotionStatusDispatcher
fAudioAccessoryDeviceMotionStatusHandler
fAudioAccessoryDeviceMotionStatusQueue
fAudioAccessoryAccelerometerAvailable
fAudioAccessoryGyroAvailable
fAudioAccessoryDeviceMotionAvailable
initPrivate
deallocPrivate
_setAudioAccessoryAccelerometerUpdateIntervalPrivate:
_isAudioAccessoryAccelerometerAvailablePrivate
_startAudioAccessoryAccelerometerUpdatesPrivateToQueue:withHandler:
_stopAudioAccessoryAccelerometerUpdatesPrivate
_isAudioAccessoryAccelerometerAvailable
_setAudioAccessoryGyroUpdateIntervalPrivate:
_isAudioAccessoryGyroAvailablePrivate
_startAudioAccessoryGyroUpdatesPrivateToQueue:withHandler:
_stopAudioAccessoryGyroUpdatesPrivate
_isAudioAccessoryGyroAvailable
_isAudioAccessoryDeviceMotionAvailablePrivate
_setAudioAccessoryDeviceMotionUpdateIntervalPrivate:
_startAudioAccessoryDeviceMotionUpdatesPrivate:lowLatencyMode:withHandler:
_stopAudioAccessoryDeviceMotionUpdatesPrivate
_startAudioAccessoryDeviceMotionStatusUpdatesPrivate:withHandler:
_stopAudioAccessoryDeviceMotionStatusUpdatesPrivate
_isAudioAccessoryDeviceMotionAvailable
_selectActiveAudioRouteForAccelerometerWithBTAddress:modelID:
_selectActiveAudioRouteForGyroWithBTAddress:modelID:
_selectActiveAudioRouteForDeviceMotionWithBTAddress:modelID:
_selectActiveAudioRouteWithBTAddress:modelID:
_setAudioAccessoryAccelerometerUpdateInterval:
_audioAccessoryAccelerometerUpdateInterval
_audioAccessoryAccelerometerData
_startAudioAccessoryAccelerometerUpdatesToQueue:withHandler:
_stopAudioAccessoryAccelerometerUpdates
_setAudioAccessoryGyroUpdateInterval:
_audioAccessoryGyroUpdateInterval
_audioAccessoryGyroData
_startAudioAccessoryGyroUpdatesToQueue:withHandler:
_stopAudioAccessoryGyroUpdates
_setAudioAccessoryDeviceMotionUpdateInterval:
_audioAccessoryDeviceMotionUpdateInterval
_startAudioAccessoryDeviceMotionUpdatesToQueue:lowLatencyMode:withHandler:
_stopAudioAccessoryDeviceMotionUpdates
_startAudioAccessoryDeviceMotionStatusUpdatesToQueue:withHandler:
_stopAudioAccessoryDeviceMotionStatusUpdates
_queryMetMinutesFromDate:toDate:handler:
_queryVO2MaxInputsFromRecord:handler:
isMetMinutesAvailable
isAuthorizedForMetMinutes
isVO2MaxDataAvailable
isAuthorizedForVO2MaxData
queryMetMinutesFromDate:toDate:handler:
queryVO2MaxInputsFromRecord:handler:
setMode:
_mode
fDeviceMotionLiteClientQueue
setFDeviceMotionLiteClientQueue:
fDeviceMotionLiteFusedHandler
setFDeviceMotionLiteFusedHandler:
fDeviceMotionLitePhysicalDeviceID
setFDeviceMotionLitePhysicalDeviceID:
fAccelerometerUpdateInterval
fGyroUpdateInterval
fDeviceMotionUpdateInterval
fMagnetometerUpdateInterval
fShowsDeviceMovementDisplay
fDeviceMotionLiteService
_fDeviceMotionLiteClientQueue
_fDeviceMotionLiteFusedHandler
_fDeviceMotionLitePhysicalDeviceID
initWithDeviceMotionLite:andDeviceID:
availableAttitudeReferenceFrames
isAccelerometerAvailable
isAccelerometerActive
setAccelerometerUpdateInterval:
accelerometerUpdateInterval
accelerometerData
startAccelerometerUpdatesToQueue:withHandler:
startAccelerometerUpdates
stopAccelerometerUpdates
isGyroAvailable
isGyroActive
setGyroUpdateInterval:
gyroUpdateInterval
gyroData
startGyroUpdates
startGyroUpdatesToQueue:withHandler:
stopGyroUpdates
isDeviceMotionAvailable
isDeviceMotionActive
setDeviceMotionUpdateInterval:
deviceMotionUpdateInterval
attitudeReferenceFrame
deviceMotion
startDeviceMotionUpdatesToQueue:withHandler:
startDeviceMotionUpdates
startDeviceMotionUpdatesUsingReferenceFrame:
startDeviceMotionUpdatesUsingReferenceFrame:toQueue:withHandler:
stopDeviceMotionUpdates
setShowsDeviceMovementDisplay:
showsDeviceMovementDisplay
dismissDeviceMovementDisplay
isMagnetometerAvailable
isMagnetometerActive
setMagnetometerUpdateInterval:
magnetometerUpdateInterval
magnetometerData
startMagnetometerUpdatesToQueue:withHandler:
startMagnetometerUpdates
stopMagnetometerUpdates
isDeviceMotionLiteAvailable
startDeviceMotionLiteUpdatesForDeviceID:usingConfiguration:toQueue:withFusedHandler:
startDeviceMotionLiteFusedUpdatesForDeviceID:toQueue:withHandler:
stopDeviceMotionLiteUpdatesForDeviceID:
initWithStartDate:endDate:elevationAscended:elevationDescended:source:recordId:sourceId:
source
sourceName:
initWithSignificantElevationSample:
fSource
activity
initWithMotionActivity:
isMoving
isWalking
isRunning
isDriving
maybeExitingVehicle
hasExitedVehicle
fActivity
initWithPriority:
startGestureUpdatesWithHandlerPrivate:
stopGestureUpdatesPrivate
fPriority
fGestureHandler
isGestureServiceEnabled
isGestureServiceAvailable
setGestureServiceEnabled:
setGestureHandler:
gestureHandler
disconnect
startActivityUpdatesWithHandlerPrivate:
stopActivityUpdatesPrivate
overrideOscarSideband:withState:
simulateMotionState:withState:
simulateMotionStateYouthWithState:
fActivityHandler
fSubscribedToMotionState
fSidebandOverrideSemaphore
fSidebandOverrideQueue
fSidebandOverrideWaiting
fSidebandOverrideResult
fMotionStateSimSemaphore
fMotionStateSimQueue
fMotionStateSimWaiting
fMotionStateSimResult
fMotionStateYouthSimResult
setActivityHandler:
activityHandler
isFloorCountingAvailable
isPaceAvailable
isAllDayElevationAvailable
arrayWithObjects:count:
numberOfSteps
numberOfPushes
floorsAscended
floorsDescended
activeTime
firstStepTime
currentPace
currentCadence
isOdometerDistance
isOdometerPace
initWithStartDate:endDate:steps:distance:floorsAscended:floorsDescended:recordID:currentPace:currentCadence:firstStepTime:activeTime:sourceId:isOdometerDistance:isOdometerPace:pushes:workoutType:elevationAscended:elevationDescended:distanceSource:
_internalQueryPedometerDataFromDate:toDate:onQueue:withHandler:
isStepCountingAvailable
localizedDescription
_queryPedometerDataSinceDataRecord:withHandler:shouldStartUpdates:
_handleRecordQueryResponse:withHandler:shouldStartUpdates:
_subscribeToCumulativePedometerUpdates:
maxPedometerEntries
sendMessageSync:
sendMessage:withReplyClasses:callback:
_queryPedometerDataFromDate:toDate:withHandler:
_startPedometerUpdatesFromDate:withHandler:
_stopPedometerUpdates
_startPedometerUpdatesSinceDataRecord:withHandler:
_startPedometerEventUpdatesWithHandler:
_stopPedometerEventUpdates
_strideCalibrationDump
_queryPedometerCalibrationBinsWithHandler:forType:forRemote:
fOffsetUpdateHandler
fCumulativeUpdateHandler
fStepCountFromStart
fPushCountFromStart
fStepCountOffset
fPushCountOffset
fDistanceFromStart
fDistanceOffset
fFloorAscendedStart
fFloorAscendedOffset
fFloorDescendedStart
fFloorDescendedOffset
fActiveTimeFromStart
fActiveTimeOffset
fValidStartDate
fStopUpdates
fFloorCountingAvailable
fPaceAndCadenceAvailable
fEventHandler
fStopEventUpdates
fElevationAscendedStart
fElevationAscendedOffset
fElevationDescendedStart
fElevationDescendedOffset
fElevationCountingAvailable
fDistanceSource
pedometerProxy
_pedometerDataWithRecordID:
_queryPedometerDataSinceDataRecord:withHandler:
isFileURL
path
fileExistsAtPath:
createFileAtPath:contents:attributes:
strideCalibrationDump
pacebin
kvalue
kvalueTrack
score
endTime
steps
session
speed
percentGrade
gpsSource
begin
kValue
dataWithJSONObject:options:error:
writeToURL:atomically:
isDistanceAvailable
isCadenceAvailable
isPedometerEventTrackingAvailable
queryPedometerDataFromDate:toDate:withHandler:
startPedometerUpdatesFromDate:withHandler:
stopPedometerUpdates
queryPedometerDataSinceRecord:withHandler:
queryPedometerDataSinceDataRecord:withHandler:
startPedometerEventUpdatesWithHandler:
stopPedometerEventUpdates
sendStrideCalibrationHistoryToFile:
queryRawSpeedToKValueBinsWithHandler:
queryRemoteRawSpeedToKValueBinsWithHandler:
queryStepCadenceToStrideLengthBinsWithHandler:
queryRemoteStepCadenceToStrideLengthBinsWithHandler:
_pedometerProxy
recommendedMoveMinutesForLevel:userInfo:error:
getBiasWithMagneticField:acceleration:
setBias:withMagneticField:level:magnitude:inclination:
becameFatallyBlocked:index:
sync:
initWithIdentifier:
valid
isSupported
getSilo
performSyncOnSilo:invoker:
beginService
endService
registerDelegate:inSilo:
setDelegateEntityName:
forget:
doAsync:
doAsync:withReply:
syncgetDoSync:
syncgetPendingSetBiasCount
syncgetLookupBiasWithMagneticField:acceleration:bias:level:noResults:
initWithInboundProtocol:outboundProtocol:
universe
notifier
adaptee
async:
initWithClient:
sharedInterface
extendSelectorInfoWithProtocol:bases:
proxyForRecipientObject:inSilo:recipientName:
dictionaryWithDictionary:
unsignedIntValue
initWithIdentifier:absoluteTimestamp:state:response:resolution:
decodeInt64ForKey:
initWithIdentifier:absoluteTimestamp:state:response:resolution:acknowledgement:
encodeInt64:forKey:
isAcknowledgement
absoluteTimestamp
setAbsoluteTimestamp:
_acknowledgement
_state
_response
_resolution
_absoluteTimestamp
_endDate
_distance
_currentSpeed
fetchGeomagneticModelData:
showCalibrationAlert
dismissCalibrationAlert
initWithBegin:end:state:kValue:
setState:
setKValue:
setBegin:
setEnd:
_kValue
_begin
_end
_feedFitnessMachineData:
feedFitnessMachineData:
initWithMachServiceName:options:
getTechnologiesInUseWithReplyBlock:
getGnssBandsInUseWithReplyBlock:
getAppsUsingLocationWithReplyBlock:
setLocationDefaultForKey:andValue:replyBlock:
getLocationDefaultForKey:replyBlock:
timeZoneForLocation:replyBlock:
setGestureServiceEnabled:replyBlock:
triggerExpiredAuthorizationPurgeWithReplyBlock:
setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:replyBlock:
getTemporaryAuthorizationStatusForBundleId:orBundlePath:replyBlock:
modifyOrSetAuthorizationTime:forBundleID:orBundlePath:replyBlock:
performMigrationWithReplyBlock:
shutdownDaemonWithReplyBlock:
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:replyBlock:
setPrivateMode:replyBlock:
getPrivateMode:
setLocationServicesEnabled:replyBlock:
getLocationServicesEnabledWithReplyBlock:
setAuthorizationPromptMapDisplayEnabled:replyBlock:
getAuthorizationPromptMapDisplayEnabledWithReplyBlock:
getGestureServiceEnabledWithReplyBlock:
pingDaemonWithReplyBlock:
getAuthorizationStatusForBundleID:orBundlePath:replyBlock:
getIncidentalUseModeForBundleID:orBundlePath:replyBlock:
getPrecisionPermissionForBundleID:orBundlePath:replyBlock:
displayStatisticsWithReplyBlock:
dumpLogsWithDescription:replyBlock:
copyLastLogWithReplyBlock:
getMonitoredRegionsForBundleID:orBundlePath:replyBlock:
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:replyBlock:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:replyBlock:
getGroundAltitudeForBundleID:orBundlePath:location:replyBlock:
resetAllClientsWithReplyBlock:
applyArchivedAuthorizationDecisions:withConfirmationToken:replyBlock:
getArchivedAuthorizationDecisionsWithReplyBlock:
setStatusBarIconEnabledForEntityClass:enabled:replyBlock:
getStatusBarIconEnabledForEntityClass:replyBlock:
getStatusBarIconState:
setMapMatchingRouteHint:routingType:stepType:replyBlock:
getAccessoryTypeBitSetWithReplyBlock:
getPipelinedCacheWithReply:
getActivitiesWithReplyBlock:
updateCorrectiveCompensationChoiceForOutstandingPrompt:replyBlock:
setIncidentalUseMode:forBundleID:orBundlePath:replyBlock:
setAuthorizationStatusByType:withCorrectiveCompensation:forBundleID:orBundlePath:replyBlock:
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:replyBlock:
gyroCalibrationDatabaseSupportsMiniCalibrationWithReplyBlock:
setBackgroundIndicatorEnabled:forBundleID:orBundlePath:replyBlock:
getOscarTimeSyncWithReplyBlock:
notifyPassKitPayment:transaction:info:
notifyWeatherForecast:airQualityConditions:hourlyForecasts:dailyForecasts:latitude:longitude:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
resume
synchronousRemoteObjectProxyWithErrorHandler:
synchronousRemoteObject
initWithDomain:code:userInfo:
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
handleFailureInFunction:file:lineNumber:description:
clientLocation
sharedServiceClient
setAuthorizationStatus:withCorrectiveCompensation:forBundleID:orBundlePath:
getIncidentalUseMode:forBundleID:orBundlePath:
clearLocationAuthorizations
getArchivedAuthorizationDecisionsWithError:
applyArchivedAuthorizationDecisions:
copyAppsUsingLocation
copyTechnologiesInUse
copyGnssBandsInUse
setLocationDefaultForKey:value:
getLocationDefaultForKey:
timeZoneAtLocation:
setPrivateMode:
getPrivateMode
pingDaemon
setLocationServicesEnabled:
getLocationServicesEnabled:
setAuthorizationPromptMapDisplayEnabled:
getAuthorizationPromptMapDisplayEnabled:
setTemporaryAuthorizationStatusForBundleId:orBundlePath:statusData:
getTemporaryAuthorizationStatusForBundleId:orBundlePath:error:
modifyOrSetAuthorizationTime:forBundleID:orBundlePath:
triggerExpiredAuthorizationPurgeOnClientManager
getGestureServiceEnabled:
getAuthorizationStatus:forBundleID:orBundlePath:
getPrecisionPermission:forBundleID:orBundlePath:
performMigration
shutdownDaemon
displayStatistics
dumpLogs:
copyMonitoredRegionsForBundleIdentifier:orBundlePath:
checkAndExerciseAuthorizationForBundleID:orBundlePath:services:error:
getLocationForBundleID:orBundlePath:dynamicAccuracyReductionEnabled:allowsAlteredAccessoryLocations:location:
getGroundAltitudeForBundleID:orBundlePath:location:groundAltitude:
setMapMatchingRouteHint:count:routingType:stepType:
getAccessoryTypeBitSet
copyLastLog
setStatusBarIconEnabled:forEntityClass:
getStatusBarIconEnabled:forEntityClass:
getStatusBarIconState
getPipelinedCache
getMotionSensorLogs
getAccessoryMotionSensorLogs
copyActivityAlarms
setAuthorizationStatusByType:withCorrectiveCompensation:forBundleID:orBundlePath:
updateCorrectiveCompensationChoiceForOutstandingPrompt:
setIncidentalUseMode:forBundleID:orBundlePath:
setTemporaryAuthorizationGranted:forBundleID:orBundlePath:
setBackgroundIndicatorForBundleID:orBundlePath:enabled:
gyroCalibrationDatabaseSupportsMiniCalibration:
timeSyncMachTimeStamp:oscarTimeStamp:
_connection
valueWithBytes:objCType:
arrayWithObjects:
initWithDictionary:copyItems:
coordinate
decodeInt32ForKey:
encodeInt32:forKey:
setDataIdentifier:
setOffset:
dataType
movement
setMovement:
_movement
_offset
_dataSize
_dataType
_startTime
_timestamp
_dataIdentifier
_endTime
metaIdentifier
_metaIdentifier
duration
_duration
rate
_rate
setAltitudeData:accuracy:precision:andStatus:
initWithAltitude:accuracy:precision:status:timestamp:
absoluteAltitude
absoluteAltitudeAccuracy
absoluteAltitudePrecision
absoluteAltitudeStatusInfo
_altitude
_absoluteAltitudeAccuracy
_absoluteAltitudePrecision
_absoluteAltitudeStatusInfo
reportAnomalousEventWithDate:results:
unknown
walking
running
automotive
cycling
isVehicleConnected
isVehicleWifiHint
isVehicleGpsHint
isVehicleBasebandHint
isVehicleMotionHint
isVehicleBTHint
fState
isPickupAvailable
onPickupStateUpdated:
pickupManager:didUpdateState:
startPickupUpdates
stopPickupUpdates
initWithInt:
initWithInteger:
averageActivePace
distanceSource
fNumberOfSteps
fDistance
fFloorsAscended
fFloorsDescended
fCurrentPace
fCurrentCadence
fFirstStepTime
fActiveTime
fIsOdometerDistance
fIsOdometerPace
fNumberOfPushes
initWithEventDate:type:
eventStringFromType:
fDate
decodeIntForKey:
encodeInt:forKey:
initWithOrientation:andTimestamp:
orientation
fOrientation
onDeviceOrientation:
fDeviceOrientationDispatcher
fDeviceOrientationHandler
fDeviceOrientationQueue
fDeviceOrientationSemaphore
fDidSignalSemaphore
fOrientationCallbackMode
fEnableOrientationNotification
fLatestDeviceOrientationSample
fLastSignificantOrientationSample
currentThread
isMainThread
isMultiThreaded
dummySelector:
detachNewThreadSelector:toTarget:withObject:
onMotionPreferencesUpdated
removeObserver:
stopDeviceOrientationUpdatesPrivate
onNotification:
setDeviceOrientationCallbackModePrivate:
startDeviceOrientationUpdatesPrivateToQueue:withHandler:
startDeviceOrientationUpdatesToQueue:withHandler:
stopDeviceOrientationUpdates
isDeviceOrientationAvailable
signalAndReleaseSemaphoreIfNecessaryPrivate
updateAggregateDictionaryPrivate
orientationNotificationsDisabled
stringForOrientation:
initialize
isAlwaysOn
isDeviceOrientationActive
stop
deviceOrientationBlocking
initWithQueue:andBlock:
dispatchWithState:andError:
fQueryQueue
fQueryBlock
isPocketStateAvailable
onPocketStateUpdated:
queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:
addToAggdScalarWithName:andScalar:
translateInternalState:
externalStateToString:
pocketStateManager:didUpdateState:
_disableDispatcher
queryStateOntoQueue:withTimeout:andHandler:
fQueryTimer
fCachedState
fMaxMonitorTime
fQueryBlocks
getUUIDBytes:
initWithRecordId:sourceId:sessionId:eventTime:eventType:
eventTime
eventType
eventTypeName:
convertToSpringTrackerEntry:
initWithSpringEntry:
fEventTime
fEventType
numberWithUnsignedInteger:
areStatsAvailable
setStatsEnabled:
setDataCollectionConfiguration:
fallConfig
sendStatsDataToUrl:
sendStatsDataToUrl:onCompletion:
simulateEvent:
_handleUpdates:
firstObject
runDistance
runElevationDescent
runAvgSpeed
runMaxSpeed
runSlope
initWithRecordId:sourceId:sessionId:startDate:endDate:runDistance:runAvgSpeed:runMaxSpeed:runSlope:runElevationDescent:
_queryUpdatesFromRecord:handler:
fRunDistanceOffset
fRunElevationDescendedOffset
querySkiUpdatesFromRecord:handler:
_feedCatherine:confidence:timestamp:
internal
feedCatherine:confidence:
initWithState:
_queryWorkoutMetsWithSessionId:handler:
queryWorkoutMetsWithSessionId:handler:
initWithSkiEntry:
convertToSkiEntry:
fRunDistance
fRunAvgSpeed
fRunMaxSpeed
fRunSlope
fRunElevationDescent
setDeviceMotion:
initialReferenceAttitude
setInitialReferenceAttitude:
_dispatchQueue
_connectionClient
_callbackQueue
_callbackHandler
_deviceMotionActive
_deviceMotionStreaming
_deviceConnected
_deviceMotionStartTime
_deviceMotion
_initialReferenceAttitude
pauseDeviceMotionStreamingPrivate
startDeviceMotionUpdatesPrivateToQueue:withHandler:
stopDeviceMotionUpdatesPrivate
mainQueue
resumeDeviceMotionStreamingPrivate
onDeviceMotionPrivate:
onDeviceMotionEventPrivate:
applyInitialReferencePrivate:
notifyDeviceConnectedEventToClientPrivate
notifyDeviceDisconnectedEventToClientPrivate
delegateQueuePrivate
headphoneMotionManagerDidConnect:
headphoneMotionManagerDidDisconnect:
componentsJoinedByString:
stringByAppendingPathComponent:
syncgetGyroStatsWithBias:slope:l2Error:isDynamic:deltaBias:deltaSlope:deltaError:isDeltaDynamic:
syncgetMaxDynamicTemperature
startFactoryGYTT
syncgetBiasFit:
syncgetNonFactoryRoundCount
syncgetSupportsMiniCalibration
syncgetLastMiniCalibration
syncgetInsertWithBias:variance:temperature:timestamp:
syncgetWipeDatabase
syncgetNumTemperatures
isServiceEnabled:
valueOut
initWithValueOut:begin:end:state:
lowerQuartile
center
upperQuartile
_valueOut
initWithStartDate:endDate:percentDyskinesiaUnlikely:percentDyskinesiaLikely:
percentUnlikely
percentLikely
initWithParkinsonsResult:
_percentUnlikely
_percentLikely
initWithStartDate:endDate:percentUnknown:percentNone:percentSlight:percentMild:percentModerate:percentStrong:
percentUnknown
percentNone
percentSlight
percentMild
percentModerate
percentStrong
_percentUnknown
_percentNone
_percentSlight
_percentMild
_percentModerate
_percentStrong
dataSourceName:
modeName:
initWithHeartRate:confidence:timestamp:startDate:error:dataSource:mode:
error
dataSource
_error
_heartRate
_dataSource
URLsForDirectory:inDomains:
objectAtIndex:
bundleIdentifier
hasEntitlement:
isMotionActivityEntitled
fileHandleForWritingToURL:error:
seekToFileOffset:
readDataOfLength:
writeData:
logDirectory
copyDataFrom:to:
isEqualToPoseInternal:
initWithPose:
fTranslation
fConsumedAuxTimestamp
fReceivedAuxTimestamp
fMachAbsTimestamp
isEqualToPose:
translation
fire
trigger
activityAlarmAvailable
sharedInstance
listenForActivityAlarm:
stopListeningForActivityAlarm:
fAlarmCounter
fReplyQueue
fAlarmAvailable
setTrigger:
activityAlarmInfo
initWithTrigger:duration:onQueue:withHandler:
initWithTrigger:duration:onRunLoop:withHandler:
fIsValid
fRunLoop
_trigger
_queryStepCountStartingFromInternal:to:toQueue:withHandler:
_startStepCountingUpdatesToQueue:updateOn:withHandler:
fPrevStepCount
stepcounterProxy
queryStepCountStartingFrom:to:toQueue:withHandler:
startStepCountingUpdatesToQueue:updateOn:withHandler:
stopStepCountingUpdates
enabled
getTotalCountToQueue:withHandler:
deleteHistory
setEnabled:
_stepcounterProxy
allowsKeyedCoding
tilt
isUsingCompass
physicalDeviceUniqueID
rawAcceleration
rawRotationRate
machTimestamp
gyroTemperature
compassTemperature
rawMagneticField
_usingCompass
_gyroTemperature
_compassTemperature
_attitude
_physicalDeviceUniqueID
_machTimestamp
_gravity
_userAcceleration
_rawAcceleration
_rawRotationRate
_rawMagneticField
activePairedDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
valueForProperty:
isDeviceSatellitePaired
isWorkoutStartReminderEnabledWhenDeviceIsSatellitePaired:isInMoveTimeMode:withCurrentSetting:
isWorkoutEndReminderEnabledWhenDeviceIsInMoveTimeMode:withCurrentSetting:
_handleAbsoluteAltitudeUpdate:
_releaseHandlerObjects
_startElevationUpdatesWithHandler:
_stopElevationUpdates
_startSignificantElevationUpdatesWithHandler:
_stopSignificantElevationUpdates
_querySignificantElevationChangeFromDate:toDate:withHandler:
_startRelativeAltitudeUpdates
_stopRelativeAltitudeUpdates
_startAbsoluteAltitudeUpdatesToQueue:withHandler:
_stopAbsoluteAltitudeUpdates
_pauseAbsoluteAltitudeUpdates
_resumeAbsoluteAltitudeUpdates
fFilteredPressureDispatcher
fRelativeAltimeterHandler
fRelativeAltimeterQueue
fBaseAltimeterSample
fBarometricBaseAltitude
fBaselineReceived
fMostRecentFilteredPressure
fPressureSamples
fSignificantElevationSampleHandler
fStopSignificantElevationUpdates
fFilteredElevationOffset
fStopRelativeAltitudeUpdates
fAbsoluteAltitudeClientQueue
fAbsoluteAltitudeClientHandler
onFilteredPressure:
cancelAllOperations
stopRelativeAltitudeUpdatesPrivate
isRelativeAltitudeAvailable
startRelativeAltitudeUpdatesPrivateToQueue:withHandler:
isAbsoluteAltitudeAvailable
isSignificantElevationAvailable
startRelativeAltitudeUpdatesToQueue:withHandler:
stopRelativeAltitudeUpdates
startSignificantElevationUpdatesWithHandler:
stopSignificantElevationUpdates
querySignificantElevationChangeFromDate:toDate:withHandler:
startAbsoluteAltitudeUpdatesToQueue:withHandler:
stopAbsoluteAltitudeUpdates
pauseAbsoluteAltitudeUpdates
resumeAbsoluteAltitudeUpdates
absoluteAltitudeUpdateInterval
setAbsoluteAltitudeUpdateInterval:
_absoluteAltitudeUpdateInterval
isElevationAvailable
startElevationUpdatesWithHandler:
stopElevationUpdates
_resetOffsets
strokeCount
lapCount
segment
strokeType
initWithRecordId:sourceId:sessionId:startDate:endDate:strokeCount:distance:avgPace:lapCount:strokeType:segment:
_querySwimUpdatesFromRecord:handler:
fStrokeCountOffset
fLapCountOffset
fSegmentCountOffset
maxSwimDataEntries
querySwimUpdatesFromRecord:handler:
initWithName:type:duration:repeats:alarmId:bundleId:state:
setAlarmId:
bundleId
setBundleId:
acknowledgeWithError:
unregisterWithError:
_repeats
_type
_alarmId
_bundleId
_manager
initWithSessionId:sourceId:startDate:endDate:mets:
initWithCLWorkoutMets:
initWithCLStrideCalEntry:
_strideCalStruct
initWithStartDate:averageIntensity:
averageIntensity
fAverageIntensity
avgPace
strokeTypeName:
convertToSwimEntry:
initWithSwimEntry:
fStrokeCount
fAvgPace
fLapCount
fStrokeType
fSegment
initWithOnBodyResult:confidence:timestamp:
result
fResult
fConfidence
initWithValue:dirty:
value
dirty
setDirty:
_dirty
_value
initWithLong:
isEqualToDictionary:
setElapsedTime:
setTotalEnergy:
setTotalElevationAscended:
setTotalStrideCount:
setTotalStrokeCount:
setTotalFloorsClimbed:
setInstantaneousSpeed:
setInstantaneousCadence:
setInstantaneousPower:
setInclination:
setResistanceLevel:
convertToCLFitnessMachineData:
elapsedTime
totalEnergy
totalElevationAscended
totalStrideCount
totalStrokeCount
totalFloorsClimbed
instantaneousSpeed
instantaneousCadence
instantaneousPower
inclination
resistanceLevel
_elapsedTime
_totalEnergy
_totalElevationAscended
_totalStrideCount
_totalStrokeCount
_totalFloorsClimbed
_instantaneousSpeed
_instantaneousCadence
_instantaneousPower
_inclination
_resistanceLevel
_accelerationValue
isOnBodyStatusDetectionAvailable
startOnBodyStatusDetectionPrivateToQueue:withParameters:handler:
stopOnBodyStatusDetectionPrivate
sharedOnBodyStatusManager
startOnBodyStatusDetectionToQueue:withParameters:handler:
stopOnBodyStatusDetection
setPropertiesWithDictionary:
fSubscribedToOnBodyStatusDetection
fOnBodyStatusQueue
fOnBodyStatusHandler
_client
_startKappaUpdatesForItem:withHandler:
_stopKappaUpdates
startKappaUpdatesForItem:withHandler:
stopKappaUpdates
sendConfigNumFastAccel:andNumAccel:andNumPressure:andNumDeviceMotion:andTimeout:
sendAPConfigNumFastAccel:andNumAccel:andNumPressure:andNumDeviceMotion:andTimeout:
sendCmd:
sendAPCmd:
getState
notifierClientNumForCoparty:
appendString:
appendFormat:
_clients
_notifier
_handleDaemonEvent:
_startWorkout:
_unregisterForWorkoutEvents
_handleDaemonResponse:
workoutManager:didFailWorkout:withError:
workoutManagerDidFail:workout:error:
workoutManager:didStartWorkout:atDate:
workoutManagerDidStartWorkout:workout:startDate:
workoutManager:didStopWorkout:atDate:
workoutManagerDidStopWorkout:workout:stopDate:
workoutManager:willPauseWorkout:atDate:
workoutManagerWillPauseWorkout:workout:pauseDate:
workoutManager:willResumeWorkout:atDate:
workoutManagerWillResumeWorkout:workout:resumeDate:
workoutManager:suggestedStopWorkout:atDate:
workoutManagerSuggestedStop:workout:stopDate:
workoutManager:issuedPrediction:
workoutManager:workoutLocationEventUpdate:
_shouldAllowMotionCalibrationPromptsForWorkoutType:
_stopWorkout:
_setSuggestedStopTimeout:
_userDismissedWorkoutAlert
_triggerWorkoutLocationUpdateForTesting:
_registerForWorkoutEvents
_getPromptsNeededForWorkoutType:handler:
fSender
fWorkout
fResumeWorkoutOnInterrupt
startWorkout:
stopWorkout:
supportedMetricsForWorkoutType:
getPromptsNeededForWorkoutType:handler:
setSuggestedStopTimeout:
userDismissedWorkoutAlert
triggerWorkoutLocationUpdateForTesting:
@16@0:8
v16@0:8
B16@0:8
v40@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16@?32
v24@0:8@?16
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
^{CLConnectionClient=@{CLCallbackDropManager=^^?{shared_ptr<int>=^i^{__shared_weak_count}}}{shared_ptr<CLConnectionClientInternal>=^{CLConnectionClientInternal}^{__shared_weak_count}}^{CLConnectionClientNotificationContext}}
v52@0:8@16d24d32B40@?44
v32@0:8@16@?24
@"CMSedentaryTimer_Internal"
q16@0:8
v48@0:8@16@24@32@?40
v48@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16@32@?40
@"NSOperationQueue"
@72@0:8d16q24q32d40d48d56@64
@24@0:8@16
@24@0:8^{_NSZone=}16
v24@0:8@16
@"NSUUID"
v28@0:8{?=fff}16
@28@0:8{?=fff}16
{?="x"f"y"f"z"f}
@36@0:8{?=fff}16d28
{?=ddd}16@0:8
@40@0:8@16@24d32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8@"NSData"16@"NSDictionary"24d32
@"NSData"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
@"NSArray"
v24@0:8f16f20
@24@0:8f16f20
@32@0:8f16d20f28
@32@0:8d16f24f28
@64@0:8Q16@24@32@40@48@56
@24@0:8r^{CLSignificantElevation=i[16C]ddII}16
@24@0:8r^{CLElevationChangeEntry=ddIIidiifCSf}16
@"NSDate"
@"NSNumber"
@32@0:8@16@24
@"CMMotionTimeRange"
@"NSString"
Q28@0:8@16i24
v48@0:8@"RMConnectionEndpoint"16@"NSString"24@"NSData"32@?<v@?@"NSString"@"NSData">40
v40@0:8@16@24@32
B32@0:8@16@?24
v40@0:8@"RMConnectionEndpoint"16@"NSString"24@"NSData"32
B32@0:8@"RMConnectionEndpoint"16@?<v@?@"NSData">24
v24@0:8@"RMConnectionEndpoint"16
v32@0:8@16@24
v32@0:8@"RMConnectionEndpoint"16@"NSData"24
v32@0:8@16^@24
v40@0:8@16@24@?32
@"<RMConnectionLifecycleDelegate>"
@"<RMConnectionDataDelegate>"
@"NSObject<OS_xpc_object>"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"NSData"
@"NSDictionary"
{Reader="fDelegate"^{Delegate}"fFd"i"fMappedSize"Q"fMappedOffset"Q"fMappedData"*"fMustScan"B"fZStream"{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}"fUncompressedSens"{vector<unsigned char, std::__1::allocator<unsigned char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >="__value_"*}}"fSensRemaining"Q"fSensData"*}
{MemoryDelegate="_vptr$Delegate"^^?"fBuffer"*"fLength"Q}
{ReaderIterator="fReader"^{Reader}"fItem"{Item="_vptr$Base"^^?"_accel"{unique_ptr<CMMsl::Accel, std::__1::default_delete<CMMsl::Accel> >="__ptr_"{__compressed_pair<CMMsl::Accel *, std::__1::default_delete<CMMsl::Accel> >="__value_"^{Accel}}}"_accel800"{unique_ptr<CMMsl::Accel800, std::__1::default_delete<CMMsl::Accel800> >="__ptr_"{__compressed_pair<CMMsl::Accel800 *, std::__1::default_delete<CMMsl::Accel800> >="__value_"^{Accel800}}}"_accelBatch"{unique_ptr<CMMsl::AccelBatch, std::__1::default_delete<CMMsl::AccelBatch> >="__ptr_"{__compressed_pair<CMMsl::AccelBatch *, std::__1::default_delete<CMMsl::AccelBatch> >="__value_"^{AccelBatch}}}"_accelGesture"{unique_ptr<CMMsl::AccelGesture, std::__1::default_delete<CMMsl::AccelGesture> >="__ptr_"{__compressed_pair<CMMsl::AccelGesture *, std::__1::default_delete<CMMsl::AccelGesture> >="__value_"^{AccelGesture}}}"_accelGps"{unique_ptr<CMMsl::AccelGps, std::__1::default_delete<CMMsl::AccelGps> >="__ptr_"{__compressed_pair<CMMsl::AccelGps *, std::__1::default_delete<CMMsl::AccelGps> >="__value_"^{AccelGps}}}"_accelOscarEmu"{unique_ptr<CMMsl::AccelOscarEmu, std::__1::default_delete<CMMsl::AccelOscarEmu> >="__ptr_"{__compressed_pair<CMMsl::AccelOscarEmu *, std::__1::default_delete<CMMsl::AccelOscarEmu> >="__value_"^{AccelOscarEmu}}}"_accelerometerPace"{unique_ptr<CMMsl::AccelerometerPace, std::__1::default_delete<CMMsl::AccelerometerPace> >="__ptr_"{__compressed_pair<CMMsl::AccelerometerPace *, std::__1::default_delete<CMMsl::AccelerometerPace> >="__value_"^{AccelerometerPace}}}"_accessoryAccel"{unique_ptr<CMMsl::AccessoryAccel, std::__1::default_delete<CMMsl::AccessoryAccel> >="__ptr_"{__compressed_pair<CMMsl::AccessoryAccel *, std::__1::default_delete<CMMsl::AccessoryAccel> >="__value_"^{AccessoryAccel}}}"_accessoryAccelConfig"{unique_ptr<CMMsl::AccessoryAccelConfig, std::__1::default_delete<CMMsl::AccessoryAccelConfig> >="__ptr_"{__compressed_pair<CMMsl::AccessoryAccelConfig *, std::__1::default_delete<CMMsl::AccessoryAccelConfig> >="__value_"^{AccessoryAccelConfig}}}"_accessoryConfig"{unique_ptr<CMMsl::AccessoryConfig, std::__1::default_delete<CMMsl::AccessoryConfig> >="__ptr_"{__compressed_pair<CMMsl::AccessoryConfig *, std::__1::default_delete<CMMsl::AccessoryConfig> >="__value_"^{AccessoryConfig}}}"_accessoryDeviceMotion"{unique_ptr<CMMsl::AccessoryDeviceMotion, std::__1::default_delete<CMMsl::AccessoryDeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::AccessoryDeviceMotion *, std::__1::default_delete<CMMsl::AccessoryDeviceMotion> >="__value_"^{AccessoryDeviceMotion}}}"_accessoryDeviceMotionConfig"{unique_ptr<CMMsl::AccessoryDeviceMotionConfig, std::__1::default_delete<CMMsl::AccessoryDeviceMotionConfig> >="__ptr_"{__compressed_pair<CMMsl::AccessoryDeviceMotionConfig *, std::__1::default_delete<CMMsl::AccessoryDeviceMotionConfig> >="__value_"^{AccessoryDeviceMotionConfig}}}"_accessoryGyro"{unique_ptr<CMMsl::AccessoryGyro, std::__1::default_delete<CMMsl::AccessoryGyro> >="__ptr_"{__compressed_pair<CMMsl::AccessoryGyro *, std::__1::default_delete<CMMsl::AccessoryGyro> >="__value_"^{AccessoryGyro}}}"_accessoryGyroCachedBias"{unique_ptr<CMMsl::AccessoryGyroCachedBias, std::__1::default_delete<CMMsl::AccessoryGyroCachedBias> >="__ptr_"{__compressed_pair<CMMsl::AccessoryGyroCachedBias *, std::__1::default_delete<CMMsl::AccessoryGyroCachedBias> >="__value_"^{AccessoryGyroCachedBias}}}"_accessoryGyroConfig"{unique_ptr<CMMsl::AccessoryGyroConfig, std::__1::default_delete<CMMsl::AccessoryGyroConfig> >="__ptr_"{__compressed_pair<CMMsl::AccessoryGyroConfig *, std::__1::default_delete<CMMsl::AccessoryGyroConfig> >="__value_"^{AccessoryGyroConfig}}}"_accessoryGyroGYTT"{unique_ptr<CMMsl::AccessoryGyroGYTT, std::__1::default_delete<CMMsl::AccessoryGyroGYTT> >="__ptr_"{__compressed_pair<CMMsl::AccessoryGyroGYTT *, std::__1::default_delete<CMMsl::AccessoryGyroGYTT> >="__value_"^{AccessoryGyroGYTT}}}"_accessoryInEarStatus"{unique_ptr<CMMsl::AccessoryInEarStatus, std::__1::default_delete<CMMsl::AccessoryInEarStatus> >="__ptr_"{__compressed_pair<CMMsl::AccessoryInEarStatus *, std::__1::default_delete<CMMsl::AccessoryInEarStatus> >="__value_"^{AccessoryInEarStatus}}}"_accessoryProx"{unique_ptr<CMMsl::AccessoryProx, std::__1::default_delete<CMMsl::AccessoryProx> >="__ptr_"{__compressed_pair<CMMsl::AccessoryProx *, std::__1::default_delete<CMMsl::AccessoryProx> >="__value_"^{AccessoryProx}}}"_accessoryProxSensorDrop"{unique_ptr<CMMsl::AccessoryProxSensorDrop, std::__1::default_delete<CMMsl::AccessoryProxSensorDrop> >="__ptr_"{__compressed_pair<CMMsl::AccessoryProxSensorDrop *, std::__1::default_delete<CMMsl::AccessoryProxSensorDrop> >="__value_"^{AccessoryProxSensorDrop}}}"_accessoryProxTempComp"{unique_ptr<CMMsl::AccessoryProxTempComp, std::__1::default_delete<CMMsl::AccessoryProxTempComp> >="__ptr_"{__compressed_pair<CMMsl::AccessoryProxTempComp *, std::__1::default_delete<CMMsl::AccessoryProxTempComp> >="__value_"^{AccessoryProxTempComp}}}"_accessoryProximityConfig"{unique_ptr<CMMsl::AccessoryProximityConfig, std::__1::default_delete<CMMsl::AccessoryProximityConfig> >="__ptr_"{__compressed_pair<CMMsl::AccessoryProximityConfig *, std::__1::default_delete<CMMsl::AccessoryProximityConfig> >="__value_"^{AccessoryProximityConfig}}}"_accessoryWake"{unique_ptr<CMMsl::AccessoryWake, std::__1::default_delete<CMMsl::AccessoryWake> >="__ptr_"{__compressed_pair<CMMsl::AccessoryWake *, std::__1::default_delete<CMMsl::AccessoryWake> >="__value_"^{AccessoryWake}}}"_accessoryWakeDebug"{unique_ptr<CMMsl::AccessoryWakeDebug, std::__1::default_delete<CMMsl::AccessoryWakeDebug> >="__ptr_"{__compressed_pair<CMMsl::AccessoryWakeDebug *, std::__1::default_delete<CMMsl::AccessoryWakeDebug> >="__value_"^{AccessoryWakeDebug}}}"_airpodEvent"{unique_ptr<CMMsl::AirpodEvent, std::__1::default_delete<CMMsl::AirpodEvent> >="__ptr_"{__compressed_pair<CMMsl::AirpodEvent *, std::__1::default_delete<CMMsl::AirpodEvent> >="__value_"^{AirpodEvent}}}"_alsData"{unique_ptr<CMMsl::ALSData, std::__1::default_delete<CMMsl::ALSData> >="__ptr_"{__compressed_pair<CMMsl::ALSData *, std::__1::default_delete<CMMsl::ALSData> >="__value_"^{ALSData}}}"_anchorCorrection"{unique_ptr<CMMsl::AnchorCorrection, std::__1::default_delete<CMMsl::AnchorCorrection> >="__ptr_"{__compressed_pair<CMMsl::AnchorCorrection *, std::__1::default_delete<CMMsl::AnchorCorrection> >="__value_"^{AnchorCorrection}}}"_arSessionState"{unique_ptr<CMMsl::ARSessionState, std::__1::default_delete<CMMsl::ARSessionState> >="__ptr_"{__compressed_pair<CMMsl::ARSessionState *, std::__1::default_delete<CMMsl::ARSessionState> >="__value_"^{ARSessionState}}}"_audioAccessoryDeviceMotion"{unique_ptr<CMMsl::AudioAccessoryDeviceMotion, std::__1::default_delete<CMMsl::AudioAccessoryDeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::AudioAccessoryDeviceMotion *, std::__1::default_delete<CMMsl::AudioAccessoryDeviceMotion> >="__value_"^{AudioAccessoryDeviceMotion}}}"_auxiliaryDeviceMotion"{unique_ptr<CMMsl::AuxiliaryDeviceMotion, std::__1::default_delete<CMMsl::AuxiliaryDeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::AuxiliaryDeviceMotion *, std::__1::default_delete<CMMsl::AuxiliaryDeviceMotion> >="__value_"^{AuxiliaryDeviceMotion}}}"_bTConnection"{unique_ptr<CMMsl::BTConnection, std::__1::default_delete<CMMsl::BTConnection> >="__ptr_"{__compressed_pair<CMMsl::BTConnection *, std::__1::default_delete<CMMsl::BTConnection> >="__value_"^{BTConnection}}}"_basebandSpeed"{unique_ptr<CMMsl::BasebandSpeed, std::__1::default_delete<CMMsl::BasebandSpeed> >="__ptr_"{__compressed_pair<CMMsl::BasebandSpeed *, std::__1::default_delete<CMMsl::BasebandSpeed> >="__value_"^{BasebandSpeed}}}"_bioMotionPose"{unique_ptr<CMMsl::BioMotionPose, std::__1::default_delete<CMMsl::BioMotionPose> >="__ptr_"{__compressed_pair<CMMsl::BioMotionPose *, std::__1::default_delete<CMMsl::BioMotionPose> >="__value_"^{BioMotionPose}}}"_bleedToZeroCorrection"{unique_ptr<CMMsl::BleedToZeroCorrection, std::__1::default_delete<CMMsl::BleedToZeroCorrection> >="__ptr_"{__compressed_pair<CMMsl::BleedToZeroCorrection *, std::__1::default_delete<CMMsl::BleedToZeroCorrection> >="__value_"^{BleedToZeroCorrection}}}"_bodyMetrics"{unique_ptr<CMMsl::BodyMetrics, std::__1::default_delete<CMMsl::BodyMetrics> >="__ptr_"{__compressed_pair<CMMsl::BodyMetrics *, std::__1::default_delete<CMMsl::BodyMetrics> >="__value_"^{BodyMetrics}}}"_braveHeartAccel"{unique_ptr<CMMsl::BraveHeartAccel, std::__1::default_delete<CMMsl::BraveHeartAccel> >="__ptr_"{__compressed_pair<CMMsl::BraveHeartAccel *, std::__1::default_delete<CMMsl::BraveHeartAccel> >="__value_"^{BraveHeartAccel}}}"_braveHeartDeviceMotion"{unique_ptr<CMMsl::BraveHeartDeviceMotion, std::__1::default_delete<CMMsl::BraveHeartDeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::BraveHeartDeviceMotion *, std::__1::default_delete<CMMsl::BraveHeartDeviceMotion> >="__value_"^{BraveHeartDeviceMotion}}}"_braveHeartNatalieData"{unique_ptr<CMMsl::BraveHeartNatalieData, std::__1::default_delete<CMMsl::BraveHeartNatalieData> >="__ptr_"{__compressed_pair<CMMsl::BraveHeartNatalieData *, std::__1::default_delete<CMMsl::BraveHeartNatalieData> >="__value_"^{BraveHeartNatalieData}}}"_braveHeartVO2MaxInput"{unique_ptr<CMMsl::BraveHeartVO2MaxInput, std::__1::default_delete<CMMsl::BraveHeartVO2MaxInput> >="__ptr_"{__compressed_pair<CMMsl::BraveHeartVO2MaxInput *, std::__1::default_delete<CMMsl::BraveHeartVO2MaxInput> >="__value_"^{BraveHeartVO2MaxInput}}}"_braveHeartWorkoutEvent"{unique_ptr<CMMsl::BraveHeartWorkoutEvent, std::__1::default_delete<CMMsl::BraveHeartWorkoutEvent> >="__ptr_"{__compressed_pair<CMMsl::BraveHeartWorkoutEvent *, std::__1::default_delete<CMMsl::BraveHeartWorkoutEvent> >="__value_"^{BraveHeartWorkoutEvent}}}"_calorimetryPauseEvent"{unique_ptr<CMMsl::CalorimetryPauseEvent, std::__1::default_delete<CMMsl::CalorimetryPauseEvent> >="__ptr_"{__compressed_pair<CMMsl::CalorimetryPauseEvent *, std::__1::default_delete<CMMsl::CalorimetryPauseEvent> >="__value_"^{CalorimetryPauseEvent}}}"_catherineHealthKitData"{unique_ptr<CMMsl::CatherineHealthKitData, std::__1::default_delete<CMMsl::CatherineHealthKitData> >="__ptr_"{__compressed_pair<CMMsl::CatherineHealthKitData *, std::__1::default_delete<CMMsl::CatherineHealthKitData> >="__value_"^{CatherineHealthKitData}}}"_cftime"d"_clefCalibration"{unique_ptr<CMMsl::ClefCalibration, std::__1::default_delete<CMMsl::ClefCalibration> >="__ptr_"{__compressed_pair<CMMsl::ClefCalibration *, std::__1::default_delete<CMMsl::ClefCalibration> >="__value_"^{ClefCalibration}}}"_coarseElevationChange"{unique_ptr<CMMsl::CoarseElevationChange, std::__1::default_delete<CMMsl::CoarseElevationChange> >="__ptr_"{__compressed_pair<CMMsl::CoarseElevationChange *, std::__1::default_delete<CMMsl::CoarseElevationChange> >="__value_"^{CoarseElevationChange}}}"_compass"{unique_ptr<CMMsl::Compass, std::__1::default_delete<CMMsl::Compass> >="__ptr_"{__compressed_pair<CMMsl::Compass *, std::__1::default_delete<CMMsl::Compass> >="__value_"^{Compass}}}"_compassAlignment"{unique_ptr<CMMsl::CompassAlignment, std::__1::default_delete<CMMsl::CompassAlignment> >="__ptr_"{__compressed_pair<CMMsl::CompassAlignment *, std::__1::default_delete<CMMsl::CompassAlignment> >="__value_"^{CompassAlignment}}}"_compassCalibration"{unique_ptr<CMMsl::CompassCalibration, std::__1::default_delete<CMMsl::CompassCalibration> >="__ptr_"{__compressed_pair<CMMsl::CompassCalibration *, std::__1::default_delete<CMMsl::CompassCalibration> >="__value_"^{CompassCalibration}}}"_compassCalibrationAttempt"{unique_ptr<CMMsl::CompassCalibrationAttempt, std::__1::default_delete<CMMsl::CompassCalibrationAttempt> >="__ptr_"{__compressed_pair<CMMsl::CompassCalibrationAttempt *, std::__1::default_delete<CMMsl::CompassCalibrationAttempt> >="__value_"^{CompassCalibrationAttempt}}}"_compassConstraints"{unique_ptr<CMMsl::CompassConstraints, std::__1::default_delete<CMMsl::CompassConstraints> >="__ptr_"{__compressed_pair<CMMsl::CompassConstraints *, std::__1::default_delete<CMMsl::CompassConstraints> >="__value_"^{CompassConstraints}}}"_compassCorrection"{unique_ptr<CMMsl::CompassCorrection, std::__1::default_delete<CMMsl::CompassCorrection> >="__ptr_"{__compressed_pair<CMMsl::CompassCorrection *, std::__1::default_delete<CMMsl::CompassCorrection> >="__value_"^{CompassCorrection}}}"_constrainedIntegratorPose"{unique_ptr<CMMsl::ConstrainedIntegratorPose, std::__1::default_delete<CMMsl::ConstrainedIntegratorPose> >="__ptr_"{__compressed_pair<CMMsl::ConstrainedIntegratorPose *, std::__1::default_delete<CMMsl::ConstrainedIntegratorPose> >="__value_"^{ConstrainedIntegratorPose}}}"_coprocessorReplyGaitMetrics"{unique_ptr<CMMsl::CoprocessorReplyGaitMetrics, std::__1::default_delete<CMMsl::CoprocessorReplyGaitMetrics> >="__ptr_"{__compressed_pair<CMMsl::CoprocessorReplyGaitMetrics *, std::__1::default_delete<CMMsl::CoprocessorReplyGaitMetrics> >="__value_"^{CoprocessorReplyGaitMetrics}}}"_courseConstraints"{unique_ptr<CMMsl::CourseConstraints, std::__1::default_delete<CMMsl::CourseConstraints> >="__ptr_"{__compressed_pair<CMMsl::CourseConstraints *, std::__1::default_delete<CMMsl::CourseConstraints> >="__value_"^{CourseConstraints}}}"_courseCorrection"{unique_ptr<CMMsl::CourseCorrection, std::__1::default_delete<CMMsl::CourseCorrection> >="__ptr_"{__compressed_pair<CMMsl::CourseCorrection *, std::__1::default_delete<CMMsl::CourseCorrection> >="__value_"^{CourseCorrection}}}"_deviceMotion"{unique_ptr<CMMsl::DeviceMotion, std::__1::default_delete<CMMsl::DeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::DeviceMotion *, std::__1::default_delete<CMMsl::DeviceMotion> >="__value_"^{DeviceMotion}}}"_deviceMotionAlwaysOn"{unique_ptr<CMMsl::DeviceMotionAlwaysOn, std::__1::default_delete<CMMsl::DeviceMotionAlwaysOn> >="__ptr_"{__compressed_pair<CMMsl::DeviceMotionAlwaysOn *, std::__1::default_delete<CMMsl::DeviceMotionAlwaysOn> >="__value_"^{DeviceMotionAlwaysOn}}}"_deviceMotionCovariance"{unique_ptr<CMMsl::DeviceMotionCovariance, std::__1::default_delete<CMMsl::DeviceMotionCovariance> >="__ptr_"{__compressed_pair<CMMsl::DeviceMotionCovariance *, std::__1::default_delete<CMMsl::DeviceMotionCovariance> >="__value_"^{DeviceMotionCovariance}}}"_doubleTap"{unique_ptr<CMMsl::DoubleTap, std::__1::default_delete<CMMsl::DoubleTap> >="__ptr_"{__compressed_pair<CMMsl::DoubleTap *, std::__1::default_delete<CMMsl::DoubleTap> >="__value_"^{DoubleTap}}}"_elevationChange"{unique_ptr<CMMsl::ElevationChange, std::__1::default_delete<CMMsl::ElevationChange> >="__ptr_"{__compressed_pair<CMMsl::ElevationChange *, std::__1::default_delete<CMMsl::ElevationChange> >="__value_"^{ElevationChange}}}"_emergencyState"{unique_ptr<CMMsl::EmergencyState, std::__1::default_delete<CMMsl::EmergencyState> >="__ptr_"{__compressed_pair<CMMsl::EmergencyState *, std::__1::default_delete<CMMsl::EmergencyState> >="__value_"^{EmergencyState}}}"_enhancedDeviceMotion"{unique_ptr<CMMsl::EnhancedDeviceMotion, std::__1::default_delete<CMMsl::EnhancedDeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::EnhancedDeviceMotion *, std::__1::default_delete<CMMsl::EnhancedDeviceMotion> >="__value_"^{EnhancedDeviceMotion}}}"_facePose"{unique_ptr<CMMsl::FacePose, std::__1::default_delete<CMMsl::FacePose> >="__ptr_"{__compressed_pair<CMMsl::FacePose *, std::__1::default_delete<CMMsl::FacePose> >="__value_"^{FacePose}}}"_fallDetectionDetector"{unique_ptr<CMMsl::FallDetectionDetector, std::__1::default_delete<CMMsl::FallDetectionDetector> >="__ptr_"{__compressed_pair<CMMsl::FallDetectionDetector *, std::__1::default_delete<CMMsl::FallDetectionDetector> >="__value_"^{FallDetectionDetector}}}"_fallDetectionGyroControllerReplay"{unique_ptr<CMMsl::FallDetectionGyroControllerReplay, std::__1::default_delete<CMMsl::FallDetectionGyroControllerReplay> >="__ptr_"{__compressed_pair<CMMsl::FallDetectionGyroControllerReplay *, std::__1::default_delete<CMMsl::FallDetectionGyroControllerReplay> >="__value_"^{FallDetectionGyroControllerReplay}}}"_fallDetectionReplay"{unique_ptr<CMMsl::FallDetectionReplay, std::__1::default_delete<CMMsl::FallDetectionReplay> >="__ptr_"{__compressed_pair<CMMsl::FallDetectionReplay *, std::__1::default_delete<CMMsl::FallDetectionReplay> >="__value_"^{FallDetectionReplay}}}"_fallDetectionStateMachine"{unique_ptr<CMMsl::FallDetectionStateMachine, std::__1::default_delete<CMMsl::FallDetectionStateMachine> >="__ptr_"{__compressed_pair<CMMsl::FallDetectionStateMachine *, std::__1::default_delete<CMMsl::FallDetectionStateMachine> >="__value_"^{FallDetectionStateMachine}}}"_fallDetectionWristStateReplay"{unique_ptr<CMMsl::FallDetectionWristStateReplay, std::__1::default_delete<CMMsl::FallDetectionWristStateReplay> >="__ptr_"{__compressed_pair<CMMsl::FallDetectionWristStateReplay *, std::__1::default_delete<CMMsl::FallDetectionWristStateReplay> >="__value_"^{FallDetectionWristStateReplay}}}"_fallFalsePositiveSuppressionFeatures"{unique_ptr<CMMsl::FallFalsePositiveSuppressionFeatures, std::__1::default_delete<CMMsl::FallFalsePositiveSuppressionFeatures> >="__ptr_"{__compressed_pair<CMMsl::FallFalsePositiveSuppressionFeatures *, std::__1::default_delete<CMMsl::FallFalsePositiveSuppressionFeatures> >="__value_"^{FallFalsePositiveSuppressionFeatures}}}"_fallSnippet"{unique_ptr<CMMsl::FallSnippet, std::__1::default_delete<CMMsl::FallSnippet> >="__ptr_"{__compressed_pair<CMMsl::FallSnippet *, std::__1::default_delete<CMMsl::FallSnippet> >="__value_"^{FallSnippet}}}"_fallStats"{unique_ptr<CMMsl::FallStats, std::__1::default_delete<CMMsl::FallStats> >="__ptr_"{__compressed_pair<CMMsl::FallStats *, std::__1::default_delete<CMMsl::FallStats> >="__value_"^{FallStats}}}"_frequencyResponse"{unique_ptr<CMMsl::FrequencyResponse, std::__1::default_delete<CMMsl::FrequencyResponse> >="__ptr_"{__compressed_pair<CMMsl::FrequencyResponse *, std::__1::default_delete<CMMsl::FrequencyResponse> >="__value_"^{FrequencyResponse}}}"_gaitCycleSegment"{unique_ptr<CMMsl::GaitCycleSegment, std::__1::default_delete<CMMsl::GaitCycleSegment> >="__ptr_"{__compressed_pair<CMMsl::GaitCycleSegment *, std::__1::default_delete<CMMsl::GaitCycleSegment> >="__value_"^{GaitCycleSegment}}}"_gaitCycleSegmentationState"{unique_ptr<CMMsl::GaitCycleSegmentationState, std::__1::default_delete<CMMsl::GaitCycleSegmentationState> >="__ptr_"{__compressed_pair<CMMsl::GaitCycleSegmentationState *, std::__1::default_delete<CMMsl::GaitCycleSegmentationState> >="__value_"^{GaitCycleSegmentationState}}}"_geomagneticData"{unique_ptr<CMMsl::GeomagneticData, std::__1::default_delete<CMMsl::GeomagneticData> >="__ptr_"{__compressed_pair<CMMsl::GeomagneticData *, std::__1::default_delete<CMMsl::GeomagneticData> >="__value_"^{GeomagneticData}}}"_gravityConstraints"{unique_ptr<CMMsl::GravityConstraints, std::__1::default_delete<CMMsl::GravityConstraints> >="__ptr_"{__compressed_pair<CMMsl::GravityConstraints *, std::__1::default_delete<CMMsl::GravityConstraints> >="__value_"^{GravityConstraints}}}"_gravityCorrection"{unique_ptr<CMMsl::GravityCorrection, std::__1::default_delete<CMMsl::GravityCorrection> >="__ptr_"{__compressed_pair<CMMsl::GravityCorrection *, std::__1::default_delete<CMMsl::GravityCorrection> >="__value_"^{GravityCorrection}}}"_gyro"{unique_ptr<CMMsl::Gyro, std::__1::default_delete<CMMsl::Gyro> >="__ptr_"{__compressed_pair<CMMsl::Gyro *, std::__1::default_delete<CMMsl::Gyro> >="__value_"^{Gyro}}}"_gyroBiasAndVariance"{unique_ptr<CMMsl::GyroBiasAndVariance, std::__1::default_delete<CMMsl::GyroBiasAndVariance> >="__ptr_"{__compressed_pair<CMMsl::GyroBiasAndVariance *, std::__1::default_delete<CMMsl::GyroBiasAndVariance> >="__value_"^{GyroBiasAndVariance}}}"_gyroBiasConstraints"{unique_ptr<CMMsl::GyroBiasConstraints, std::__1::default_delete<CMMsl::GyroBiasConstraints> >="__ptr_"{__compressed_pair<CMMsl::GyroBiasConstraints *, std::__1::default_delete<CMMsl::GyroBiasConstraints> >="__value_"^{GyroBiasConstraints}}}"_gyroBiasCorrection"{unique_ptr<CMMsl::GyroBiasCorrection, std::__1::default_delete<CMMsl::GyroBiasCorrection> >="__ptr_"{__compressed_pair<CMMsl::GyroBiasCorrection *, std::__1::default_delete<CMMsl::GyroBiasCorrection> >="__value_"^{GyroBiasCorrection}}}"_gyroBiasEstimateError"{unique_ptr<CMMsl::GyroBiasEstimateError, std::__1::default_delete<CMMsl::GyroBiasEstimateError> >="__ptr_"{__compressed_pair<CMMsl::GyroBiasEstimateError *, std::__1::default_delete<CMMsl::GyroBiasEstimateError> >="__value_"^{GyroBiasEstimateError}}}"_gyroBiasFit"{unique_ptr<CMMsl::GyroBiasFit, std::__1::default_delete<CMMsl::GyroBiasFit> >="__ptr_"{__compressed_pair<CMMsl::GyroBiasFit *, std::__1::default_delete<CMMsl::GyroBiasFit> >="__value_"^{GyroBiasFit}}}"_gyroCalibrationDataFactory"{unique_ptr<CMMsl::GyroCalibrationDataFactory, std::__1::default_delete<CMMsl::GyroCalibrationDataFactory> >="__ptr_"{__compressed_pair<CMMsl::GyroCalibrationDataFactory *, std::__1::default_delete<CMMsl::GyroCalibrationDataFactory> >="__value_"^{GyroCalibrationDataFactory}}}"_gyroCalibrationDataNonlinearNonFactory"{unique_ptr<CMMsl::GyroCalibrationDataNonlinearNonFactory, std::__1::default_delete<CMMsl::GyroCalibrationDataNonlinearNonFactory> >="__ptr_"{__compressed_pair<CMMsl::GyroCalibrationDataNonlinearNonFactory *, std::__1::default_delete<CMMsl::GyroCalibrationDataNonlinearNonFactory> >="__value_"^{GyroCalibrationDataNonlinearNonFactory}}}"_gyroCalibrationSample"{unique_ptr<CMMsl::GyroCalibrationSample, std::__1::default_delete<CMMsl::GyroCalibrationSample> >="__ptr_"{__compressed_pair<CMMsl::GyroCalibrationSample *, std::__1::default_delete<CMMsl::GyroCalibrationSample> >="__value_"^{GyroCalibrationSample}}}"_gyroCalibrationSampleNonlinear"{unique_ptr<CMMsl::GyroCalibrationSampleNonlinear, std::__1::default_delete<CMMsl::GyroCalibrationSampleNonlinear> >="__ptr_"{__compressed_pair<CMMsl::GyroCalibrationSampleNonlinear *, std::__1::default_delete<CMMsl::GyroCalibrationSampleNonlinear> >="__value_"^{GyroCalibrationSampleNonlinear}}}"_gyroCompass"{unique_ptr<CMMsl::GyroCompass, std::__1::default_delete<CMMsl::GyroCompass> >="__ptr_"{__compressed_pair<CMMsl::GyroCompass *, std::__1::default_delete<CMMsl::GyroCompass> >="__value_"^{GyroCompass}}}"_gyroDt"{unique_ptr<CMMsl::GyroDt, std::__1::default_delete<CMMsl::GyroDt> >="__ptr_"{__compressed_pair<CMMsl::GyroDt *, std::__1::default_delete<CMMsl::GyroDt> >="__value_"^{GyroDt}}}"_gyroFactoryCalibrationData"{unique_ptr<CMMsl::GyroFactoryCalibrationData, std::__1::default_delete<CMMsl::GyroFactoryCalibrationData> >="__ptr_"{__compressed_pair<CMMsl::GyroFactoryCalibrationData *, std::__1::default_delete<CMMsl::GyroFactoryCalibrationData> >="__value_"^{GyroFactoryCalibrationData}}}"_gyroGps"{unique_ptr<CMMsl::GyroGps, std::__1::default_delete<CMMsl::GyroGps> >="__ptr_"{__compressed_pair<CMMsl::GyroGps *, std::__1::default_delete<CMMsl::GyroGps> >="__value_"^{GyroGps}}}"_gyroOscarEmu"{unique_ptr<CMMsl::GyroOscarEmu, std::__1::default_delete<CMMsl::GyroOscarEmu> >="__ptr_"{__compressed_pair<CMMsl::GyroOscarEmu *, std::__1::default_delete<CMMsl::GyroOscarEmu> >="__value_"^{GyroOscarEmu}}}"_gyroTemperature"{unique_ptr<CMMsl::GyroTemperature, std::__1::default_delete<CMMsl::GyroTemperature> >="__ptr_"{__compressed_pair<CMMsl::GyroTemperature *, std::__1::default_delete<CMMsl::GyroTemperature> >="__value_"^{GyroTemperature}}}"_inEarAdditionalState"{unique_ptr<CMMsl::InEarAdditionalState, std::__1::default_delete<CMMsl::InEarAdditionalState> >="__ptr_"{__compressed_pair<CMMsl::InEarAdditionalState *, std::__1::default_delete<CMMsl::InEarAdditionalState> >="__value_"^{InEarAdditionalState}}}"_inEarBaseline"{unique_ptr<CMMsl::InEarBaseline, std::__1::default_delete<CMMsl::InEarBaseline> >="__ptr_"{__compressed_pair<CMMsl::InEarBaseline *, std::__1::default_delete<CMMsl::InEarBaseline> >="__value_"^{InEarBaseline}}}"_inEarBaselining"{unique_ptr<CMMsl::InEarBaselining, std::__1::default_delete<CMMsl::InEarBaselining> >="__ptr_"{__compressed_pair<CMMsl::InEarBaselining *, std::__1::default_delete<CMMsl::InEarBaselining> >="__value_"^{InEarBaselining}}}"_inEarConstraints"{unique_ptr<CMMsl::InEarConstraints, std::__1::default_delete<CMMsl::InEarConstraints> >="__ptr_"{__compressed_pair<CMMsl::InEarConstraints *, std::__1::default_delete<CMMsl::InEarConstraints> >="__value_"^{InEarConstraints}}}"_inEarOpenLid"{unique_ptr<CMMsl::InEarOpenLid, std::__1::default_delete<CMMsl::InEarOpenLid> >="__ptr_"{__compressed_pair<CMMsl::InEarOpenLid *, std::__1::default_delete<CMMsl::InEarOpenLid> >="__value_"^{InEarOpenLid}}}"_inEarOptical"{unique_ptr<CMMsl::InEarOptical, std::__1::default_delete<CMMsl::InEarOptical> >="__ptr_"{__compressed_pair<CMMsl::InEarOptical *, std::__1::default_delete<CMMsl::InEarOptical> >="__value_"^{InEarOptical}}}"_inEarSession"{unique_ptr<CMMsl::InEarSession, std::__1::default_delete<CMMsl::InEarSession> >="__ptr_"{__compressed_pair<CMMsl::InEarSession *, std::__1::default_delete<CMMsl::InEarSession> >="__value_"^{InEarSession}}}"_inEarTransition"{unique_ptr<CMMsl::InEarTransition, std::__1::default_delete<CMMsl::InEarTransition> >="__ptr_"{__compressed_pair<CMMsl::InEarTransition *, std::__1::default_delete<CMMsl::InEarTransition> >="__value_"^{InEarTransition}}}"_inEarTransitionEntry"{unique_ptr<CMMsl::InEarTransitionEntry, std::__1::default_delete<CMMsl::InEarTransitionEntry> >="__ptr_"{__compressed_pair<CMMsl::InEarTransitionEntry *, std::__1::default_delete<CMMsl::InEarTransitionEntry> >="__value_"^{InEarTransitionEntry}}}"_interpolatedAccessoryAccel"{unique_ptr<CMMsl::InterpolatedAccessoryAccel, std::__1::default_delete<CMMsl::InterpolatedAccessoryAccel> >="__ptr_"{__compressed_pair<CMMsl::InterpolatedAccessoryAccel *, std::__1::default_delete<CMMsl::InterpolatedAccessoryAccel> >="__value_"^{InterpolatedAccessoryAccel}}}"_intersiloNSCodingData"{unique_ptr<CMMsl::IntersiloNSCodingData, std::__1::default_delete<CMMsl::IntersiloNSCodingData> >="__ptr_"{__compressed_pair<CMMsl::IntersiloNSCodingData *, std::__1::default_delete<CMMsl::IntersiloNSCodingData> >="__value_"^{IntersiloNSCodingData}}}"_jointLinkModelPose"{unique_ptr<CMMsl::JointLinkModelPose, std::__1::default_delete<CMMsl::JointLinkModelPose> >="__ptr_"{__compressed_pair<CMMsl::JointLinkModelPose *, std::__1::default_delete<CMMsl::JointLinkModelPose> >="__value_"^{JointLinkModelPose}}}"_kappaTrigger"{unique_ptr<CMMsl::KappaTrigger, std::__1::default_delete<CMMsl::KappaTrigger> >="__ptr_"{__compressed_pair<CMMsl::KappaTrigger *, std::__1::default_delete<CMMsl::KappaTrigger> >="__value_"^{KappaTrigger}}}"_locationOscarEmu"{unique_ptr<CMMsl::LocationOscarEmu, std::__1::default_delete<CMMsl::LocationOscarEmu> >="__ptr_"{__compressed_pair<CMMsl::LocationOscarEmu *, std::__1::default_delete<CMMsl::LocationOscarEmu> >="__value_"^{LocationOscarEmu}}}"_lslHeadingEstimation"{unique_ptr<CMMsl::LSLHeadingEstimation, std::__1::default_delete<CMMsl::LSLHeadingEstimation> >="__ptr_"{__compressed_pair<CMMsl::LSLHeadingEstimation *, std::__1::default_delete<CMMsl::LSLHeadingEstimation> >="__value_"^{LSLHeadingEstimation}}}"_magneticAccessoryType1"{unique_ptr<CMMsl::MagneticAccessoryType1, std::__1::default_delete<CMMsl::MagneticAccessoryType1> >="__ptr_"{__compressed_pair<CMMsl::MagneticAccessoryType1 *, std::__1::default_delete<CMMsl::MagneticAccessoryType1> >="__value_"^{MagneticAccessoryType1}}}"_magneticAccessoryType2"{unique_ptr<CMMsl::MagneticAccessoryType2, std::__1::default_delete<CMMsl::MagneticAccessoryType2> >="__ptr_"{__compressed_pair<CMMsl::MagneticAccessoryType2 *, std::__1::default_delete<CMMsl::MagneticAccessoryType2> >="__value_"^{MagneticAccessoryType2}}}"_magnetometer"{unique_ptr<CMMsl::Magnetometer, std::__1::default_delete<CMMsl::Magnetometer> >="__ptr_"{__compressed_pair<CMMsl::Magnetometer *, std::__1::default_delete<CMMsl::Magnetometer> >="__value_"^{Magnetometer}}}"_metsInfo"{unique_ptr<CMMsl::MetsInfo, std::__1::default_delete<CMMsl::MetsInfo> >="__ptr_"{__compressed_pair<CMMsl::MetsInfo *, std::__1::default_delete<CMMsl::MetsInfo> >="__value_"^{MetsInfo}}}"_mobilityBoutMetrics"{unique_ptr<CMMsl::MobilityBoutMetrics, std::__1::default_delete<CMMsl::MobilityBoutMetrics> >="__ptr_"{__compressed_pair<CMMsl::MobilityBoutMetrics *, std::__1::default_delete<CMMsl::MobilityBoutMetrics> >="__value_"^{MobilityBoutMetrics}}}"_motionActivity"{unique_ptr<CMMsl::MotionActivity, std::__1::default_delete<CMMsl::MotionActivity> >="__ptr_"{__compressed_pair<CMMsl::MotionActivity *, std::__1::default_delete<CMMsl::MotionActivity> >="__value_"^{MotionActivity}}}"_motionGPSLocation"{unique_ptr<CMMsl::MotionGPSLocation, std::__1::default_delete<CMMsl::MotionGPSLocation> >="__ptr_"{__compressed_pair<CMMsl::MotionGPSLocation *, std::__1::default_delete<CMMsl::MotionGPSLocation> >="__value_"^{MotionGPSLocation}}}"_motionHint"{unique_ptr<CMMsl::MotionHint, std::__1::default_delete<CMMsl::MotionHint> >="__ptr_"{__compressed_pair<CMMsl::MotionHint *, std::__1::default_delete<CMMsl::MotionHint> >="__value_"^{MotionHint}}}"_motionLocation"{unique_ptr<CMMsl::MotionLocation, std::__1::default_delete<CMMsl::MotionLocation> >="__ptr_"{__compressed_pair<CMMsl::MotionLocation *, std::__1::default_delete<CMMsl::MotionLocation> >="__value_"^{MotionLocation}}}"_motionLoiData"{unique_ptr<CMMsl::MotionLoiData, std::__1::default_delete<CMMsl::MotionLoiData> >="__ptr_"{__compressed_pair<CMMsl::MotionLoiData *, std::__1::default_delete<CMMsl::MotionLoiData> >="__value_"^{MotionLoiData}}}"_motionStateUpdate"{unique_ptr<CMMsl::MotionStateUpdate, std::__1::default_delete<CMMsl::MotionStateUpdate> >="__ptr_"{__compressed_pair<CMMsl::MotionStateUpdate *, std::__1::default_delete<CMMsl::MotionStateUpdate> >="__value_"^{MotionStateUpdate}}}"_motionWifiAssociation"{unique_ptr<CMMsl::MotionWifiAssociation, std::__1::default_delete<CMMsl::MotionWifiAssociation> >="__ptr_"{__compressed_pair<CMMsl::MotionWifiAssociation *, std::__1::default_delete<CMMsl::MotionWifiAssociation> >="__value_"^{MotionWifiAssociation}}}"_motionWifiLocation"{unique_ptr<CMMsl::MotionWifiLocation, std::__1::default_delete<CMMsl::MotionWifiLocation> >="__ptr_"{__compressed_pair<CMMsl::MotionWifiLocation *, std::__1::default_delete<CMMsl::MotionWifiLocation> >="__value_"^{MotionWifiLocation}}}"_movementStats"{unique_ptr<CMMsl::MovementStats, std::__1::default_delete<CMMsl::MovementStats> >="__ptr_"{__compressed_pair<CMMsl::MovementStats *, std::__1::default_delete<CMMsl::MovementStats> >="__value_"^{MovementStats}}}"_movementStatsGravityProjection"{unique_ptr<CMMsl::MovementStatsGravityProjection, std::__1::default_delete<CMMsl::MovementStatsGravityProjection> >="__ptr_"{__compressed_pair<CMMsl::MovementStatsGravityProjection *, std::__1::default_delete<CMMsl::MovementStatsGravityProjection> >="__value_"^{MovementStatsGravityProjection}}}"_movementStatsSignal"{unique_ptr<CMMsl::MovementStatsSignal, std::__1::default_delete<CMMsl::MovementStatsSignal> >="__ptr_"{__compressed_pair<CMMsl::MovementStatsSignal *, std::__1::default_delete<CMMsl::MovementStatsSignal> >="__value_"^{MovementStatsSignal}}}"_natalieData"{unique_ptr<CMMsl::NatalieData, std::__1::default_delete<CMMsl::NatalieData> >="__ptr_"{__compressed_pair<CMMsl::NatalieData *, std::__1::default_delete<CMMsl::NatalieData> >="__value_"^{NatalieData}}}"_nonlinearBiasFit"{unique_ptr<CMMsl::NonlinearBiasFit, std::__1::default_delete<CMMsl::NonlinearBiasFit> >="__ptr_"{__compressed_pair<CMMsl::NonlinearBiasFit *, std::__1::default_delete<CMMsl::NonlinearBiasFit> >="__value_"^{NonlinearBiasFit}}}"_odometer"{unique_ptr<CMMsl::Odometer, std::__1::default_delete<CMMsl::Odometer> >="__ptr_"{__compressed_pair<CMMsl::Odometer *, std::__1::default_delete<CMMsl::Odometer> >="__value_"^{Odometer}}}"_odometerWithAltitude"{unique_ptr<CMMsl::OdometerWithAltitude, std::__1::default_delete<CMMsl::OdometerWithAltitude> >="__ptr_"{__compressed_pair<CMMsl::OdometerWithAltitude *, std::__1::default_delete<CMMsl::OdometerWithAltitude> >="__value_"^{OdometerWithAltitude}}}"_onsetHeartRateData"{unique_ptr<CMMsl::OnsetHeartRateData, std::__1::default_delete<CMMsl::OnsetHeartRateData> >="__ptr_"{__compressed_pair<CMMsl::OnsetHeartRateData *, std::__1::default_delete<CMMsl::OnsetHeartRateData> >="__value_"^{OnsetHeartRateData}}}"_pearlAttitude"{unique_ptr<CMMsl::PearlAttitude, std::__1::default_delete<CMMsl::PearlAttitude> >="__ptr_"{__compressed_pair<CMMsl::PearlAttitude *, std::__1::default_delete<CMMsl::PearlAttitude> >="__value_"^{PearlAttitude}}}"_predictedRelativeDeviceMotion"{unique_ptr<CMMsl::PredictedRelativeDeviceMotion, std::__1::default_delete<CMMsl::PredictedRelativeDeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::PredictedRelativeDeviceMotion *, std::__1::default_delete<CMMsl::PredictedRelativeDeviceMotion> >="__value_"^{PredictedRelativeDeviceMotion}}}"_pressure"{unique_ptr<CMMsl::Pressure, std::__1::default_delete<CMMsl::Pressure> >="__ptr_"{__compressed_pair<CMMsl::Pressure *, std::__1::default_delete<CMMsl::Pressure> >="__value_"^{Pressure}}}"_pressureCalibration"{unique_ptr<CMMsl::PressureCalibration, std::__1::default_delete<CMMsl::PressureCalibration> >="__ptr_"{__compressed_pair<CMMsl::PressureCalibration *, std::__1::default_delete<CMMsl::PressureCalibration> >="__value_"^{PressureCalibration}}}"_pressureCompensated"{unique_ptr<CMMsl::PressureCompensated, std::__1::default_delete<CMMsl::PressureCompensated> >="__ptr_"{__compressed_pair<CMMsl::PressureCompensated *, std::__1::default_delete<CMMsl::PressureCompensated> >="__value_"^{PressureCompensated}}}"_pressureFiltered"{unique_ptr<CMMsl::PressureFiltered, std::__1::default_delete<CMMsl::PressureFiltered> >="__ptr_"{__compressed_pair<CMMsl::PressureFiltered *, std::__1::default_delete<CMMsl::PressureFiltered> >="__value_"^{PressureFiltered}}}"_pressureFilteredNoTemperature"{unique_ptr<CMMsl::PressureFilteredNoTemperature, std::__1::default_delete<CMMsl::PressureFilteredNoTemperature> >="__ptr_"{__compressed_pair<CMMsl::PressureFilteredNoTemperature *, std::__1::default_delete<CMMsl::PressureFilteredNoTemperature> >="__value_"^{PressureFilteredNoTemperature}}}"_pressureGps"{unique_ptr<CMMsl::PressureGps, std::__1::default_delete<CMMsl::PressureGps> >="__ptr_"{__compressed_pair<CMMsl::PressureGps *, std::__1::default_delete<CMMsl::PressureGps> >="__value_"^{PressureGps}}}"_pressureOscarEmu"{unique_ptr<CMMsl::PressureOscarEmu, std::__1::default_delete<CMMsl::PressureOscarEmu> >="__ptr_"{__compressed_pair<CMMsl::PressureOscarEmu *, std::__1::default_delete<CMMsl::PressureOscarEmu> >="__value_"^{PressureOscarEmu}}}"_prox"{unique_ptr<CMMsl::Prox, std::__1::default_delete<CMMsl::Prox> >="__ptr_"{__compressed_pair<CMMsl::Prox *, std::__1::default_delete<CMMsl::Prox> >="__value_"^{Prox}}}"_relDMInSystemConfig"{unique_ptr<CMMsl::RelDMInSystemConfig, std::__1::default_delete<CMMsl::RelDMInSystemConfig> >="__ptr_"{__compressed_pair<CMMsl::RelDMInSystemConfig *, std::__1::default_delete<CMMsl::RelDMInSystemConfig> >="__value_"^{RelDMInSystemConfig}}}"_relativeDeviceMotionComplexTransition"{unique_ptr<CMMsl::RelativeDeviceMotionComplexTransition, std::__1::default_delete<CMMsl::RelativeDeviceMotionComplexTransition> >="__ptr_"{__compressed_pair<CMMsl::RelativeDeviceMotionComplexTransition *, std::__1::default_delete<CMMsl::RelativeDeviceMotionComplexTransition> >="__value_"^{RelativeDeviceMotionComplexTransition}}}"_relativeDeviceMotionCorrelatedMotion"{unique_ptr<CMMsl::RelativeDeviceMotionCorrelatedMotion, std::__1::default_delete<CMMsl::RelativeDeviceMotionCorrelatedMotion> >="__ptr_"{__compressed_pair<CMMsl::RelativeDeviceMotionCorrelatedMotion *, std::__1::default_delete<CMMsl::RelativeDeviceMotionCorrelatedMotion> >="__value_"^{RelativeDeviceMotionCorrelatedMotion}}}"_relativeDeviceMotionInternal"{unique_ptr<CMMsl::RelativeDeviceMotionInternal, std::__1::default_delete<CMMsl::RelativeDeviceMotionInternal> >="__ptr_"{__compressed_pair<CMMsl::RelativeDeviceMotionInternal *, std::__1::default_delete<CMMsl::RelativeDeviceMotionInternal> >="__value_"^{RelativeDeviceMotionInternal}}}"_relativeGravityConstraints"{unique_ptr<CMMsl::RelativeGravityConstraints, std::__1::default_delete<CMMsl::RelativeGravityConstraints> >="__ptr_"{__compressed_pair<CMMsl::RelativeGravityConstraints *, std::__1::default_delete<CMMsl::RelativeGravityConstraints> >="__value_"^{RelativeGravityConstraints}}}"_relativeGravityCorrection"{unique_ptr<CMMsl::RelativeGravityCorrection, std::__1::default_delete<CMMsl::RelativeGravityCorrection> >="__ptr_"{__compressed_pair<CMMsl::RelativeGravityCorrection *, std::__1::default_delete<CMMsl::RelativeGravityCorrection> >="__value_"^{RelativeGravityCorrection}}}"_rotationRate"{unique_ptr<CMMsl::RotationRate, std::__1::default_delete<CMMsl::RotationRate> >="__ptr_"{__compressed_pair<CMMsl::RotationRate *, std::__1::default_delete<CMMsl::RotationRate> >="__value_"^{RotationRate}}}"_sessionOverride"{unique_ptr<CMMsl::SessionOverride, std::__1::default_delete<CMMsl::SessionOverride> >="__ptr_"{__compressed_pair<CMMsl::SessionOverride *, std::__1::default_delete<CMMsl::SessionOverride> >="__value_"^{SessionOverride}}}"_signalEnvironment"{unique_ptr<CMMsl::SignalEnvironment, std::__1::default_delete<CMMsl::SignalEnvironment> >="__ptr_"{__compressed_pair<CMMsl::SignalEnvironment *, std::__1::default_delete<CMMsl::SignalEnvironment> >="__value_"^{SignalEnvironment}}}"_spl"{unique_ptr<CMMsl::SoundPressureLevel, std::__1::default_delete<CMMsl::SoundPressureLevel> >="__ptr_"{__compressed_pair<CMMsl::SoundPressureLevel *, std::__1::default_delete<CMMsl::SoundPressureLevel> >="__value_"^{SoundPressureLevel}}}"_spuPlaybackExampleDeviceMotion"{unique_ptr<CMMsl::SPUPlaybackExampleDeviceMotion, std::__1::default_delete<CMMsl::SPUPlaybackExampleDeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::SPUPlaybackExampleDeviceMotion *, std::__1::default_delete<CMMsl::SPUPlaybackExampleDeviceMotion> >="__value_"^{SPUPlaybackExampleDeviceMotion}}}"_spuPlaybackExampleMotionStateUpdate"{unique_ptr<CMMsl::SPUPlaybackExampleMotionStateUpdate, std::__1::default_delete<CMMsl::SPUPlaybackExampleMotionStateUpdate> >="__ptr_"{__compressed_pair<CMMsl::SPUPlaybackExampleMotionStateUpdate *, std::__1::default_delete<CMMsl::SPUPlaybackExampleMotionStateUpdate> >="__value_"^{SPUPlaybackExampleMotionStateUpdate}}}"_stepCadenceToStrideLengthBin"{unique_ptr<CMMsl::StepCadenceToStrideLengthBin, std::__1::default_delete<CMMsl::StepCadenceToStrideLengthBin> >="__ptr_"{__compressed_pair<CMMsl::StepCadenceToStrideLengthBin *, std::__1::default_delete<CMMsl::StepCadenceToStrideLengthBin> >="__value_"^{StepCadenceToStrideLengthBin}}}"_stepCountEntry"{unique_ptr<CMMsl::StepCountEntry, std::__1::default_delete<CMMsl::StepCountEntry> >="__ptr_"{__compressed_pair<CMMsl::StepCountEntry *, std::__1::default_delete<CMMsl::StepCountEntry> >="__value_"^{StepCountEntry}}}"_streamingHeartRateData"{unique_ptr<CMMsl::StreamingHeartRateData, std::__1::default_delete<CMMsl::StreamingHeartRateData> >="__ptr_"{__compressed_pair<CMMsl::StreamingHeartRateData *, std::__1::default_delete<CMMsl::StreamingHeartRateData> >="__value_"^{StreamingHeartRateData}}}"_strideCalBin"{unique_ptr<CMMsl::StrideCalBin, std::__1::default_delete<CMMsl::StrideCalBin> >="__ptr_"{__compressed_pair<CMMsl::StrideCalBin *, std::__1::default_delete<CMMsl::StrideCalBin> >="__value_"^{StrideCalBin}}}"_tapAccept"{unique_ptr<CMMsl::TapAccept, std::__1::default_delete<CMMsl::TapAccept> >="__ptr_"{__compressed_pair<CMMsl::TapAccept *, std::__1::default_delete<CMMsl::TapAccept> >="__value_"^{TapAccept}}}"_tapDetect"{unique_ptr<CMMsl::TapDetect, std::__1::default_delete<CMMsl::TapDetect> >="__ptr_"{__compressed_pair<CMMsl::TapDetect *, std::__1::default_delete<CMMsl::TapDetect> >="__value_"^{TapDetect}}}"_tempestPoCAuxiliaryDeviceMotion"{unique_ptr<CMMsl::TempestPoCAuxiliaryDeviceMotion, std::__1::default_delete<CMMsl::TempestPoCAuxiliaryDeviceMotion> >="__ptr_"{__compressed_pair<CMMsl::TempestPoCAuxiliaryDeviceMotion *, std::__1::default_delete<CMMsl::TempestPoCAuxiliaryDeviceMotion> >="__value_"^{TempestPoCAuxiliaryDeviceMotion}}}"_tempestPoCListenerOrientation"{unique_ptr<CMMsl::TempestPoCListenerOrientation, std::__1::default_delete<CMMsl::TempestPoCListenerOrientation> >="__ptr_"{__compressed_pair<CMMsl::TempestPoCListenerOrientation *, std::__1::default_delete<CMMsl::TempestPoCListenerOrientation> >="__value_"^{TempestPoCListenerOrientation}}}"_touchOscarEmu"{unique_ptr<CMMsl::TouchOscarEmu, std::__1::default_delete<CMMsl::TouchOscarEmu> >="__ptr_"{__compressed_pair<CMMsl::TouchOscarEmu *, std::__1::default_delete<CMMsl::TouchOscarEmu> >="__value_"^{TouchOscarEmu}}}"_userStudyEvent"{unique_ptr<CMMsl::UserStudyEvent, std::__1::default_delete<CMMsl::UserStudyEvent> >="__ptr_"{__compressed_pair<CMMsl::UserStudyEvent *, std::__1::default_delete<CMMsl::UserStudyEvent> >="__value_"^{UserStudyEvent}}}"_vibrationEvent"{unique_ptr<CMMsl::VibrationEvent, std::__1::default_delete<CMMsl::VibrationEvent> >="__ptr_"{__compressed_pair<CMMsl::VibrationEvent *, std::__1::default_delete<CMMsl::VibrationEvent> >="__value_"^{VibrationEvent}}}"_vioEstimation"{unique_ptr<CMMsl::VIOEstimation, std::__1::default_delete<CMMsl::VIOEstimation> >="__ptr_"{__compressed_pair<CMMsl::VIOEstimation *, std::__1::default_delete<CMMsl::VIOEstimation> >="__value_"^{VIOEstimation}}}"_vioPose"{unique_ptr<CMMsl::VIOPose, std::__1::default_delete<CMMsl::VIOPose> >="__ptr_"{__compressed_pair<CMMsl::VIOPose *, std::__1::default_delete<CMMsl::VIOPose> >="__value_"^{VIOPose}}}"_vioReplayPose"{unique_ptr<CMMsl::VIOReplayPose, std::__1::default_delete<CMMsl::VIOReplayPose> >="__ptr_"{__compressed_pair<CMMsl::VIOReplayPose *, std::__1::default_delete<CMMsl::VIOReplayPose> >="__value_"^{VIOReplayPose}}}"_visionCompassBias"{unique_ptr<CMMsl::VisionCompassBias, std::__1::default_delete<CMMsl::VisionCompassBias> >="__ptr_"{__compressed_pair<CMMsl::VisionCompassBias *, std::__1::default_delete<CMMsl::VisionCompassBias> >="__value_"^{VisionCompassBias}}}"_visualLocalization"{unique_ptr<CMMsl::VisualLocalization, std::__1::default_delete<CMMsl::VisualLocalization> >="__ptr_"{__compressed_pair<CMMsl::VisualLocalization *, std::__1::default_delete<CMMsl::VisualLocalization> >="__value_"^{VisualLocalization}}}"_visualLocalizationAttitudeConstraints"{unique_ptr<CMMsl::VisualLocalizationAttitudeConstraints, std::__1::default_delete<CMMsl::VisualLocalizationAttitudeConstraints> >="__ptr_"{__compressed_pair<CMMsl::VisualLocalizationAttitudeConstraints *, std::__1::default_delete<CMMsl::VisualLocalizationAttitudeConstraints> >="__value_"^{VisualLocalizationAttitudeConstraints}}}"_visualLocalizationAttitudeCorrection"{unique_ptr<CMMsl::VisualLocalizationAttitudeCorrection, std::__1::default_delete<CMMsl::VisualLocalizationAttitudeCorrection> >="__ptr_"{__compressed_pair<CMMsl::VisualLocalizationAttitudeCorrection *, std::__1::default_delete<CMMsl::VisualLocalizationAttitudeCorrection> >="__value_"^{VisualLocalizationAttitudeCorrection}}}"_vo2MaxInput"{unique_ptr<CMMsl::VO2MaxInput, std::__1::default_delete<CMMsl::VO2MaxInput> >="__ptr_"{__compressed_pair<CMMsl::VO2MaxInput *, std::__1::default_delete<CMMsl::VO2MaxInput> >="__value_"^{VO2MaxInput}}}"_vo2MaxOutput"{unique_ptr<CMMsl::VO2MaxOutput, std::__1::default_delete<CMMsl::VO2MaxOutput> >="__ptr_"{__compressed_pair<CMMsl::VO2MaxOutput *, std::__1::default_delete<CMMsl::VO2MaxOutput> >="__value_"^{VO2MaxOutput}}}"_walkingDetectionResult"{unique_ptr<CMMsl::WalkingDetectionResult, std::__1::default_delete<CMMsl::WalkingDetectionResult> >="__ptr_"{__compressed_pair<CMMsl::WalkingDetectionResult *, std::__1::default_delete<CMMsl::WalkingDetectionResult> >="__value_"^{WalkingDetectionResult}}}"_watchOnWristState"{unique_ptr<CMMsl::WatchOnWristState, std::__1::default_delete<CMMsl::WatchOnWristState> >="__ptr_"{__compressed_pair<CMMsl::WatchOnWristState *, std::__1::default_delete<CMMsl::WatchOnWristState> >="__value_"^{WatchOnWristState}}}"_watchOrientationSettings"{unique_ptr<CMMsl::WatchOrientationSettings, std::__1::default_delete<CMMsl::WatchOrientationSettings> >="__ptr_"{__compressed_pair<CMMsl::WatchOrientationSettings *, std::__1::default_delete<CMMsl::WatchOrientationSettings> >="__value_"^{WatchOrientationSettings}}}"_wifiScanResults"{unique_ptr<CMMsl::WifiScanResults, std::__1::default_delete<CMMsl::WifiScanResults> >="__ptr_"{__compressed_pair<CMMsl::WifiScanResults *, std::__1::default_delete<CMMsl::WifiScanResults> >="__value_"^{WifiScanResults}}}"_workoutEvent"{unique_ptr<CMMsl::WorkoutEvent, std::__1::default_delete<CMMsl::WorkoutEvent> >="__ptr_"{__compressed_pair<CMMsl::WorkoutEvent *, std::__1::default_delete<CMMsl::WorkoutEvent> >="__value_"^{WorkoutEvent}}}"_workoutRecorderALSData"{unique_ptr<CMMsl::WorkoutRecorderALSData, std::__1::default_delete<CMMsl::WorkoutRecorderALSData> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderALSData *, std::__1::default_delete<CMMsl::WorkoutRecorderALSData> >="__value_"^{WorkoutRecorderALSData}}}"_workoutRecorderAccel"{unique_ptr<CMMsl::WorkoutRecorderAccel, std::__1::default_delete<CMMsl::WorkoutRecorderAccel> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderAccel *, std::__1::default_delete<CMMsl::WorkoutRecorderAccel> >="__value_"^{WorkoutRecorderAccel}}}"_workoutRecorderAccel800"{unique_ptr<CMMsl::WorkoutRecorderAccel800, std::__1::default_delete<CMMsl::WorkoutRecorderAccel800> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderAccel800 *, std::__1::default_delete<CMMsl::WorkoutRecorderAccel800> >="__value_"^{WorkoutRecorderAccel800}}}"_workoutRecorderBodyMetrics"{unique_ptr<CMMsl::WorkoutRecorderBodyMetrics, std::__1::default_delete<CMMsl::WorkoutRecorderBodyMetrics> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderBodyMetrics *, std::__1::default_delete<CMMsl::WorkoutRecorderBodyMetrics> >="__value_"^{WorkoutRecorderBodyMetrics}}}"_workoutRecorderElevation"{unique_ptr<CMMsl::WorkoutRecorderElevation, std::__1::default_delete<CMMsl::WorkoutRecorderElevation> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderElevation *, std::__1::default_delete<CMMsl::WorkoutRecorderElevation> >="__value_"^{WorkoutRecorderElevation}}}"_workoutRecorderHealthKitInfo"{unique_ptr<CMMsl::WorkoutRecorderHealthKitInfo, std::__1::default_delete<CMMsl::WorkoutRecorderHealthKitInfo> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderHealthKitInfo *, std::__1::default_delete<CMMsl::WorkoutRecorderHealthKitInfo> >="__value_"^{WorkoutRecorderHealthKitInfo}}}"_workoutRecorderHeartRate"{unique_ptr<CMMsl::WorkoutRecorderHeartRate, std::__1::default_delete<CMMsl::WorkoutRecorderHeartRate> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderHeartRate *, std::__1::default_delete<CMMsl::WorkoutRecorderHeartRate> >="__value_"^{WorkoutRecorderHeartRate}}}"_workoutRecorderOdometer"{unique_ptr<CMMsl::WorkoutRecorderOdometer, std::__1::default_delete<CMMsl::WorkoutRecorderOdometer> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderOdometer *, std::__1::default_delete<CMMsl::WorkoutRecorderOdometer> >="__value_"^{WorkoutRecorderOdometer}}}"_workoutRecorderPressure"{unique_ptr<CMMsl::WorkoutRecorderPressure, std::__1::default_delete<CMMsl::WorkoutRecorderPressure> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderPressure *, std::__1::default_delete<CMMsl::WorkoutRecorderPressure> >="__value_"^{WorkoutRecorderPressure}}}"_workoutRecorderRotationRate"{unique_ptr<CMMsl::WorkoutRecorderRotationRate, std::__1::default_delete<CMMsl::WorkoutRecorderRotationRate> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderRotationRate *, std::__1::default_delete<CMMsl::WorkoutRecorderRotationRate> >="__value_"^{WorkoutRecorderRotationRate}}}"_workoutRecorderWatchOrientationSettings"{unique_ptr<CMMsl::WorkoutRecorderWatchOrientationSettings, std::__1::default_delete<CMMsl::WorkoutRecorderWatchOrientationSettings> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderWatchOrientationSettings *, std::__1::default_delete<CMMsl::WorkoutRecorderWatchOrientationSettings> >="__value_"^{WorkoutRecorderWatchOrientationSettings}}}"_workoutRecorderWifiScanResults"{unique_ptr<CMMsl::WorkoutRecorderWifiScanResults, std::__1::default_delete<CMMsl::WorkoutRecorderWifiScanResults> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderWifiScanResults *, std::__1::default_delete<CMMsl::WorkoutRecorderWifiScanResults> >="__value_"^{WorkoutRecorderWifiScanResults}}}"_workoutRecorderWorkoutEvent"{unique_ptr<CMMsl::WorkoutRecorderWorkoutEvent, std::__1::default_delete<CMMsl::WorkoutRecorderWorkoutEvent> >="__ptr_"{__compressed_pair<CMMsl::WorkoutRecorderWorkoutEvent *, std::__1::default_delete<CMMsl::WorkoutRecorderWorkoutEvent> >="__value_"^{WorkoutRecorderWorkoutEvent}}}"_zeroVelocityCorrection"{unique_ptr<CMMsl::ZeroVelocityCorrection, std::__1::default_delete<CMMsl::ZeroVelocityCorrection> >="__ptr_"{__compressed_pair<CMMsl::ZeroVelocityCorrection *, std::__1::default_delete<CMMsl::ZeroVelocityCorrection> >="__value_"^{ZeroVelocityCorrection}}}"_has"{?="cftime"b1}}}
@32@0:8*16Q24
d16@0:8
i16@0:8
@"NSDictionary"16@0:8
@"<NSFastEnumeration>"16@0:8
i24@0:8q16
q20@0:8i16
q24@0:8q16
B24@0:8q16
@24@0:8q16
@32@0:8@16q24
@40@0:8@16q24q32
@56@0:8@16q24q32@40@48
v24@0:8q16
@40@0:8@16q24d32
@56@0:8@16q24d32@40@48
@48@0:8@16q24@32@40
@32@0:8@16Q24
v108@0:8{?={?=dddd}{?=fff}{?=fff}{?=fff}iBBBfi}16{?=f}104
@108@0:8{?={?=dddd}{?=fff}{?=fff}{?=fff}iBBBfi}16{?=f}104
{?="x"d"y"d"z"d}
@"CMAttitude"
@116@0:8{?={?=dddd}{?=fff}{?=fff}{?=fff}iBBBfi}16{?=f}104d108
{?={?=ddd}i}16@0:8
v48@0:8{?=dddd}16
@48@0:8{?=dddd}16
{?="w"d"x"d"y"d"z"d}
{?=ddddddddd}16@0:8
{?=dddd}16@0:8
@40@0:8@16@24@?32
@?16@0:8
v24@0:8Q16
@"RMConnectionEndpoint"
@"NSMutableArray"
@"NSObject<OS_dispatch_source>"
v24@0:8{?=ff}16
@24@0:8{?=ff}16
{?="pressure"f"temperature"f}
@32@0:8{?=ff}16d24
{?=dd}16@0:8
@48@0:8^{CMGyro50=ffffQ}16Q24d32Q40
v48@0:8^{CMGyro50=ffffQ}16Q24d32Q40
f16@0:8
@48@0:8^{CMPressure=ffQ}16Q24d32Q40
v48@0:8^{CMPressure=ffQ}16Q24d32Q40
@28@0:8Q16i24
@36@0:8d16d24i32
@"CMSensorRecorderInternal"
@"CLSensorRecorderSensorMeta"
{AccelUnpacker="fData"*"fBitsLeft"I"fPartial"C"fTimestampLast"Q"fTimestampLastDelta"q"fSampleLast"[3i]}
{GyroUnpacker="fData"*"fBitsLeft"I"fPartial"C"fTimestampLast"Q"fTimestampLastDelta"q"fSampleLast"[4i]}
{PressureUnpacker="fData"*"fBitsLeft"I"fPartial"C"fTimestampLast"Q"fTimestampLastDelta"q"fSampleLast"[2i]}
@36@0:8r*16Q24i32
B44@0:8@16d24d32i40
B24@0:8I16i20
@36@0:8Q16Q24i32
B20@0:8i16
@24@0:8Q16
B32@0:8^@16@24
@36@0:8@16@24i32
B40@0:8@16@24@32
B44@0:8@16@24@32i40
v24@0:8d16
v28@0:8i16d20
B20@0:8I16
@24@0:8d16
q20@0:8C16
C24@0:8q16
@20@0:8C16
B32@0:8d16d24
v32@0:8q16d24
v24@0:8r^{Sample=Q^{GestureReport}}16
v24@0:8r^{Sample=I}16
v20@0:8I16
^{Dispatcher=^^?@}
{unique_ptr<CMWakeGestureVisitor, std::__1::default_delete<CMWakeGestureVisitor> >="__ptr_"{__compressed_pair<CMWakeGestureVisitor *, std::__1::default_delete<CMWakeGestureVisitor> >="__value_"^{CMWakeGestureVisitor}}}
^{IONotificationPort=}
@"<CMWakeGestureDelegate>"
@32@0:8@16B24B28
@"CMOdometer"
v32@0:8q16@?24
@"<CMOdometerDelegate>"
@"CMOdometerProxy"
@40@0:8d16q24@32
@40@0:8^{CMGyro200=ffffQ}16Q24d32
i32@0:8r^{ListenerOrientation={CMOQuaternion=[4f]}QQBB}16^@24
v24@0:8r^{Sample=d{?={?=dddd}{?=fff}{?=fff}{?=fff}iBBBfi}{?=f}BIC{Status=S}f}16
v48@0:8@16@24d32^{?=fBBid}40
v32@0:8r^{Sample=d{?=dii{?=dddd}{?=fff}fffffI}}16^{?=fBBid}24
v68@0:8{?=dddd}16{CMVector<float, 3>=[3f]}48Q60
Q32@0:8r^{AudioAccessorySample={?={CMOQuaternion=[4f]}{CMVector<float, 3>=[3f]}{CMVector<float, 3>=[3f]}{CMVector<float, 3>=[3f]}{Status=S}}Qdd{CMVector<float, 3>=[3f]}fiIiiQd}16d24
v24@0:8r^{AudioAccessorySample={?={CMOQuaternion=[4f]}{CMVector<float, 3>=[3f]}{CMVector<float, 3>=[3f]}{CMVector<float, 3>=[3f]}{Status=S}}Qdd{CMVector<float, 3>=[3f]}fiIiiQd}16
v24@0:8r^{Config=i{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}i{CMOQuaternion=[4f]}}16
v24@0:8r^i16
{AudioAccessorySample={?={CMOQuaternion=[4f]}{CMVector<float, 3>=[3f]}{CMVector<float, 3>=[3f]}{CMVector<float, 3>=[3f]}{Status=S}}Qdd{CMVector<float, 3>=[3f]}fiIiiQd}16@0:8
i24@0:8^@16
v20@0:8f16
v24@0:8r^{CMOQuaternion=[4f]}16
I16@0:8
{CMOQuaternion=[4f]}16@0:8
v32@0:8{CMOQuaternion=[4f]}16
{unique_ptr<CMHeadTrackingService, std::__1::default_delete<CMHeadTrackingService> >="__ptr_"{__compressed_pair<CMHeadTrackingService *, std::__1::default_delete<CMHeadTrackingService> >="__value_"^{CMHeadTrackingService}}}
{CMOQuaternion="elements"[4f]}
{UnTimesyncedAuxSampleHelper="totalUnsyncedSamples"I"totalUnsyncedOutlierSamples"I"auxAndSrcSensorTimeOffset"d"auxAndSrcSensorTimeOffsetBuffer"{CMFixedSizeQueue<double, 10>="fHeadAndSize"{?="fHead"S"fSize"S}"fCapacity"I"fBuffer"[8c]"fStorage"{CMQueueStorage<double, 10>="buffer"[72c]}}}
{unique_ptr<CMMediaSessionAnalyticsTracker, std::__1::default_delete<CMMediaSessionAnalyticsTracker> >="__ptr_"{__compressed_pair<CMMediaSessionAnalyticsTracker *, std::__1::default_delete<CMMediaSessionAnalyticsTracker> >="__value_"^{CMMediaSessionAnalyticsTracker}}}
{AudioAccessorySample="auxDM"{?="quaternion"{CMOQuaternion="elements"[4f]}"rotationRate"{CMVector<float, 3>="elements"[3f]}"biasCovariance"{CMVector<float, 3>="elements"[3f]}"userAcceleration"{CMVector<float, 3>="elements"[3f]}"status"{Status="bits"S}}"sensorTime"Q"timestamp"d"arrivalTimestamp"d"filteredAcceleration"{CMVector<float, 3>="elements"[3f]}"quiescentNoise"f"quiescentMode"i"sequenceNumber"I"sensorLocation"i"timeSyncStatus"i"btcTimestamp"Q"sampleLatency"d}
@"CMMotionActivityManager"
{shared_ptr<CLIoHidInterface::Device>="__ptr_"^{Device}"__cntrl_"^{__shared_weak_count}}
{unique_ptr<CLSettings, std::__1::default_delete<CLSettings> >="__ptr_"{__compressed_pair<CLSettings *, std::__1::default_delete<CLSettings> >="__value_"^{CLSettings}}}
{unique_ptr<CMSpatialLogger, std::__1::default_delete<CMSpatialLogger> >="__ptr_"{__compressed_pair<CMSpatialLogger *, std::__1::default_delete<CMSpatialLogger> >="__value_"^{CMSpatialLogger}}}
@40@0:8d16d24d32
@"CMSpringTrackerInternal"
{VO2MaxInput=Q[16C]fdffidBBiqddB}24@0:8@16
@112@0:8Q16@24d32q40d48d56d64q72d80d88B96B100q104
@120@0:8{VO2MaxInput=Q[16C]fdffidBBiqddB}16
@32@0:8{?=dd}16
{?=dd}24@0:8@16
@32@0:8d16d24
v24@0:8r^{Sample=Cd}16
@"<CMCallHandednessDelegate>"
@48@0:8d16q24d32d40
@56@0:8d16q24d32d40q48
@60@0:8d16q24d32d40q48B56
@44@0:8d16d24q32B40
@"CMExerciseMinuteData"
@"CMExerciseMinuteInternal"
@28@0:8i16@20
@20@0:8i16
B32@0:8@16^@24
@"NSMutableDictionary"
B44@0:8@16I24I28B32^@36
B24@0:8^@16
@"<CMMotionAlarmDelegateProtocol>"
@40@0:8Q16@24d32
d40@0:8@16@24q32
@"CMNatalimeterInternal"
@"CMOdometerSuitabilityManager"
@"CMOdometerSuitabilityManagerProxy"
q24@0:8@16
q24@0:8@"NSOutputStream"16
v32@0:8@16q24
@"CMAnomalyEvent"
@"<CMAnomalyDelegate>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{Sample="timestamp"d"acceleration"{?="x"f"y"f"z"f}"sensorTime"Q"sequenceNumber"S}
{Sample="timestamp"d"gyro"{?="x"f"y"f"z"f}"sensorTime"Q"sequenceNumber"S"temperature"f}
B32@0:8@16@24
v36@0:8@16B24@?28
v24@0:8r^{Sample=d{?=fff}QS}16
v24@0:8r^{Sample=d{?=fff}QSf}16
@"CMHealthTrackerInternal"
v20@0:8i16
{unique_ptr<CLDeviceMotionLiteService, std::__1::default_delete<CLDeviceMotionLiteService> >="__ptr_"{__compressed_pair<CLDeviceMotionLiteService *, std::__1::default_delete<CLDeviceMotionLiteService> >="__value_"^{CLDeviceMotionLiteService}}}
v40@0:8Q16@24@?32
v44@0:8@16{?=i}24@28@?36
@72@0:8@16@24Q32Q40q48Q56@64
@128@0:8{CLMotionActivity=iiiiBfdBiddii{?=b1b1b1b1b1}ifffidQi}16
{CLMotionActivity=iiiiBfdBiddii{?=b1b1b1b1b1}ifffidQi}16@0:8
{CLMotionActivity="type"i"confidence"i"mountedState"i"mountedConfidence"i"isStanding"B"tilt"f"timestamp"d"isVehicleConnected"B"exitState"i"estExitTime"d"startTime"d"rawType"i"rawConfidence"i"vehicularFlags"{?="motionHint"b1"gpsHint"b1"basebandHint"b1"wifiHint"b1"btHint"b1}"vehicularConfidence"i"drivingStowedLikelihoodSum"f"drivingArmLikelihoodSum"f"ssLikelihoodSum"f"workoutDetectionType"i"workoutDetectionTime"d"workoutEscalationTime"Q"typeYouth"i}
v28@0:8B16q20
@"NSObject<OS_dispatch_semaphore>"
q28@0:8B16q20
v36@0:8@16@?24B32
v44@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16@?32B40
v36@0:8@?16q24B32
@"CMPedometerProxy"
Q40@0:8q16@24^@32
v32@0:8@16Q24
v24@0:8r*16
@"CLSilo"16@0:8
v32@0:8@"NSArray"16Q24
v32@0:8@"CLSilo"16@?<v@?>24
v32@0:8@"<CLIntersiloProxyDelegateProtocol>"16@"CLSilo"24
v36@0:8R@16i24@28
v28@0:8R@16i24
v24@0:8R@16
v36@0:8R@"<CLNotifierServiceClientProtocol>"16i24@"CLCppContainer"28
v28@0:8R@"<CLNotifierServiceClientProtocol>"16i24
v24@0:8R@"<CLNotifierServiceClientProtocol>"16
v32@0:8@?16@?24
B24@0:8@?16
v52@0:8{?=fff}16{?=fff}28i40f44f48
v40@0:8{?=fff}16{?=fff}28
B64@0:8{?=fff}16{?=fff}28^{?=fff}40^i48^B56
v24@0:8@?<v@?^{CLCompassDatabase=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB{BasicMutex=^^?^{MutexInfo}}i}>16
v32@0:8@?<v@?^{CLCompassDatabase=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB{BasicMutex=^^?^{MutexInfo}}i}>16@?<v@?>24
B24@0:8@?<v@?^{CLCompassDatabase=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB{BasicMutex=^^?^{MutexInfo}}i}>16
v32@0:8@"NSString"16@?<v@?@"NSString">24
v28@0:8i16@20
v28@0:8i16@"CLCppContainer"20
^{CLCompassDatabase=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLCompassDatabase_Type::Notification, CLCompassDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB{BasicMutex=^^?^{MutexInfo}}i}16@0:8
@56@0:8Q16d24q32q40q48
@60@0:8Q16d24q32q40q48B56
@56@0:8@16@24@32@40@48
v24@0:8@?<v@?^{CLGeomagneticModelProvider=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16
v32@0:8@?<v@?^{CLGeomagneticModelProvider=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16@?<v@?>24
B24@0:8@?<v@?^{CLGeomagneticModelProvider=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16
^{CLGeomagneticModelProvider=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}16@0:8
@48@0:8d16d24q32d40
@"CMFitnessMachineInternal"
v188@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16@?180
v28@0:8B16@?20
v48@0:8d16@24@32@?40
v48@0:8B16i20@24@32@?40
v48@0:8@16@24Q32@?40
v48@0:8@16@24B32B36@?40
v32@0:8I16B20@?24
v28@0:8I16@?20
v40@0:8@16i24i28@?32
v28@0:8i16@?20
v44@0:8i16@20@28@?36
v48@0:8i16i20@24@32@?40
v44@0:8B16@20@28@?36
v64@0:8@16@24@32@40d48d56
v24@0:8@?<v@?@"NSError"@"NSArray">16
v24@0:8@?<v@?@"NSError"@"NSDictionary">16
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSData">24
v188@0:8{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}16@?<v@?@"NSError"@"NSString">180
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?@"NSError">16
v48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSData">32
v48@0:8d16@"NSString"24@"NSString"32@?<v@?@"NSError"d>40
v48@0:8B16i20@"NSString"24@"NSString"32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSError"B>16
v24@0:8@?<v@?@"NSError"i>16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"i>32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"B>32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError"@"NSDictionary">32
v48@0:8@"NSString"16@"NSString"24Q32@?<v@?@"NSError"B>40
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSError"{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}>40
v48@0:8@"NSString"16@"NSString"24@"CLLocation"32@?<v@?@"NSError"{?=dddi}>40
v40@0:8@"NSData"16@"NSUUID"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError"@"NSData">16
v32@0:8I16B20@?<v@?@"NSError">24
v28@0:8I16@?<v@?@"NSError"B>20
v40@0:8@"NSData"16i24i28@?<v@?@"NSError">32
v28@0:8i16@?<v@?@"NSError">20
v44@0:8i16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v48@0:8i16i20@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8B16@"NSString"20@"NSString"28@?<v@?@"NSError">36
v24@0:8@?<v@?@"NSError"QQ>16
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
v64@0:8@"NSDictionary"16@"NSDictionary"24@"NSArray"32@"NSArray"40d48d56
C40@0:8C16i20r^{__CFString=}24r^{__CFString=}32
C40@0:8^i16r^{__CFString=}24r^{__CFString=}32
C16@0:8
@24@0:8^@16
r^{__CFDictionary=}16@0:8
r^{__CFArray=}16@0:8
v32@0:8r^{__CFString=}16r^v24
r^v24@0:8r^{__CFString=}16
v20@0:8C16
C24@0:8*16
@40@0:8@16@24^@32
d40@0:8d16@24@32
C40@0:8*16r^{__CFString=}24r^{__CFString=}32
C24@0:8r^{__CFString=}16
r^{__CFDictionary=}32@0:8r^{__CFString=}16r^{__CFString=}24
B48@0:8@16@24Q32^@40
C48@0:8r^{__CFString=}16r^{__CFString=}24C32C36^{?=ii{?=dd}ddddddddddidi{?=dd}diIiii}40
C48@0:8r^{__CFString=}16r^{__CFString=}24@32^{?=dddi}40
v36@0:8^{?=Qdddd}16i24i28i32
C24@0:8B16I20
C28@0:8^B16I24
C40@0:8i16i20r^{__CFString=}24r^{__CFString=}32
C20@0:8i16
C36@0:8i16r^{__CFString=}20r^{__CFString=}28
C36@0:8C16r^{__CFString=}20r^{__CFString=}28
C36@0:8r^{__CFString=}16r^{__CFString=}24C32
C24@0:8^i16
C32@0:8^Q16^Q24
@"NSXPCConnection"
@56@0:8d16d24d32q40d48
v48@0:8d16d24d32q40
^{CLMotionActivity=iiiiBfdBiddii{?=b1b1b1b1b1}ifffidQi}16@0:8
@"<CMPickupDelegate>"
@152@0:8d16d24i32d36@44@52q60@68@76d84@92@100@108@116i124i128@132@140i148
@28@0:8i16d20
{Sample="timestamp"d"orientation"i}
v24@0:8r^{Sample=di}16
@32@0:8@16@?24
v32@0:8q16@24
v40@0:8@16d24@?32
v48@0:8@16d24d32@?40
@"<CMPocketStateDelegate>"
v24@0:8^{CLSpringTrackerEntry=Q[16C][16C]dq}16
@56@0:8Q16@24@32@40q48
@24@0:8r^{CLSpringTrackerEntry=Q[16C][16C]dq}16
B20@0:8B16
Q24@0:8Q16
@"CMSkiData"
@"CMSkiTrackerInternal"
v40@0:8d16d24d32
v32@0:8d16d24
@"CMCatherineFeederInternal"
@"CMWorkoutMetsInternal"
@96@0:8Q16@24@32@40@48d56d64d72d80d88
@24@0:8r^{CLSkiEntry=Q[16C][16C]ddddddd}16
v24@0:8^{CLSkiEntry=Q[16C][16C]ddddddd}16
@"RMConnectionClient"
@"CMDeviceMotion"
@"CMHeadphoneMotionManagerInternal"
@"<CMHeadphoneMotionManagerDelegate>"
B72@0:8^{?=fff}16^{?=fff}24^{?=fff}32B40^{?=fff}44^{?=fff}52^{?=fff}60B68
B24@0:8^{?=idd(?={?={?=fff}{?=fff}}{?=B[282c]})}16
B44@0:8r^{?=fff}16r^{?=fff}24f32d36
v24@0:8@?<v@?^{CLGyroCalibrationDatabase=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16
v32@0:8@?<v@?^{CLGyroCalibrationDatabase=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16@?<v@?>24
B24@0:8@?<v@?^{CLGyroCalibrationDatabase=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}>16
^{CLGyroCalibrationDatabase=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}@@@{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> >=Q}}}{map<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >={__tree<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGyroCalibrationDatabase_Type::Notification, CLGyroCalibrationDatabase_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> >=Q}}}iB}16@0:8
@48@0:8d16d24d32q40
@40@0:8@16@24f32f36
@24@0:8r^{ParkinsonsResult=ddfffffff}16
@56@0:8@16@24f32f36f40f44f48f52
@68@0:8d16d24d32@40B48q52q60
@40@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16@32
{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}32@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16
B24@0:8r*16
Q32@0:8@16@24
@96@0:8{?={?=dddd}{?=ddd}ddd}16
@104@0:8{?={?=dddd}{?=ddd}ddd}16d96
@44@0:8I16d20@28@?36
@44@0:8I16d20^{__CFRunLoop=}28@?36
^{__CFRunLoop=}
v40@0:8@16q24@?32
@"CMStepCounterProxy"
@144@0:8{?={?=dddd}{?=fff}{?=fff}{?=fff}{?=fff}QBff{?=fff}[3C]}16@136
B32@0:8B16B20@24
B28@0:8B16@20
v32@0:8{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}16
{Sample="timestamp"d"pressureData"{?="pressure"f"temperature"f}}
{deque<float, std::__1::allocator<float> >="__map_"{__split_buffer<float *, std::__1::allocator<float *> >="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::__1::allocator<float *> >="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<float> >="__value_"Q}}
v24@0:8r^{Sample=d{?=ff}}16
@"CMAltimeterInternal"
@"CMSwimTrackerInternal"
@36@0:8@16I24I28B32
@56@0:8@16I24I28B32Q36@44i52
@"CMMotionAlarmManager"
@24@0:8r^{CLWorkoutMets=dd[16C][16C]d}16
@120@0:8{?=idIdddddiiddid}16
{?="recordId"i"startTime"d"pacebin"I"kvalue"d"kvalueTrack"d"score"d"endTime"d"distance"d"steps"i"session"i"speed"d"percentGrade"d"gpsSource"i"timestamp"d}
@32@0:8{CLMetMinute=dd}16
v24@0:8^{CLSwimEntry=Q[16C][16C]ddddddiiiifffii}16
@104@0:8Q16@24@32@40@48Q56d64d72Q80q88Q96
@24@0:8r^{CLSwimEntry=Q[16C][16C]ddddddiiiifffii}16
@32@0:8i16i20d24
@28@0:8@16B24
v24@0:8^{_CLFitnessMachineData=dddddqqqdddddd}16
@48@0:8^{CMAccel100=fffQ}16Q24d32Q40
v48@0:8^{CMAccel100=fffQ}16Q24d32Q40
@24@0:8^{CLNotifierClientBase=^^?}16
^{CLNotifierClientBase=^^?}
v36@0:8i16i20i24i28i32
@"CMKappaInternal"
v24@0:8^{CLNotifierBase=^^?}16
i24@0:8@16
^{CLNotifierBase=^^?}16@0:8
{map<unsigned long, int, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, int> > >="__tree_"{__tree<std::__1::__value_type<unsigned long, int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, int> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, int>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true> >="__value_"Q}}}
^{CLNotifierBase=^^?}
@"<CMWorkoutManagerDelegate>"
@"CMWorkoutManager"
@"CMWorkout"
Q24@0:8q16
@"CMWorkoutManagerInternal"
