com.apple.itunesstored.DownloadsDatabase
PRAGMA journal_mode=WAL;
B8@?0
v8@?0
v16@?0@"SSSQLiteDatabase"8
%@: Reloading for %ld download policy change(s)
{public}
%@: Restarting %ld download(s) by request
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v40@?0q8r^@16Q24^B32
%@: Finishing download: %lld with phase: %@
[%@]: Not installing placeholder because appstored will handle it
%@: Prioritizing download: %lld
v32@?0q8Q16^B24
%@: Prioritizing downloads of kind: %@ for client: %@
%@: Reconciling %lu software downloads
%@: Cancel %lu downloads during software reconciliation
%@: Finished reconciling downloads with IDs: %@
%@: Reset download: %lld
%@: Reset automatic download: %lld
applicationWorkspaceChanges
T@"NSArray",R,C,N,V_applicationWorkspaceChanges
SSAppWakeRequests
T@"NSArray",R,C,N,V_SSAppWakeRequests
canceledAppDataRestoreIDs
T@"NSSet",R,C,N,V_canceledAppDataRestoreIDs
canceledIPodLibraryDownloadIDs
T@"NSSet",R,C,N,V_canceledIPodLibraryDownloadIDs
changedDownloadKinds
T@"NSSet",R,C,N,V_changedDownloadKinds
deletedHTTPCookies
T@"NSArray",R,C,N,V_deletedHTTPCookies
deletedIPodLibraryDownloadIDs
T@"NSSet",R,C,N,V_deletedIPodLibraryDownloadIDs
downloadChangeTypes
Tq,R,N,V_downloadChangeTypes
finishedDownloadKinds
T@"NSSet",R,C,N,V_finishedDownloadKinds
HTTPCookies
T@"NSArray",R,C,N,V_cookies
IPodLibraryItems
T@"NSArray",R,C,N,V_ipodLibraryItems
policyChangedDownloadIDs
T@"NSOrderedSet",R,C,N,V_policyChangedDownloadIDs
pipelineAdditions
T@"NSOrderedSet",R,C,N,V_pipelineAdditions
pipelineRestarts
T@"NSOrderedSet",R,C,N,V_pipelineRestarts
removedDownloadIDs
T@"NSOrderedSet",R,C,N,V_removedDownloadIDs
removedPersistentDownloadIDs
T@"NSOrderedSet",R,C,N,V_removedPersistentDownloadIDs
restorableDownloadIDs
T@"NSOrderedSet",R,C,N,V_restorableDownloadIDs
restoreReason
T@"NSString",C,N,V_restoreReason
statusChangedDownloadIDs
T@"NSSet",R,C,N,V_statusChangedDownloadIDs
updatedDownloadIDs
T@"NSSet",R,C,N,V_updatedDownloadIDs
changedDownloadProperties
T@"NSDictionary",C,N,V_changedDownloadProperties
changedExternalDownloadProperties
T@"NSDictionary",C,N,V_changedExternalDownloadProperties
Privacy link needs to be displayed first
Aborted fetching subscription status
%{public}@: Aborted fetching subscription status because privacy link needs to be displayed first.
cellular-data
%{public}@: Setting subscription status on an account. Saving %{public}@.
guid
getSubscriptionStatusSrv
failureType
allowsBypassOfPrivacyAcknowledgement
authenticatesIfNecessary
authenticationContext
T@"SSAuthenticationContext",C
carrierBundleProvisioningStyle
localizedAuthenticationReason
T@"NSString",C
reason
statusBlock
T@?,C
Daemon: Exiting
PurchaseManifest.m
Must have directory path
com.apple.itunesstored.PurchaseManifest
StorePurchasesInfo.plist
assetOrdering
%@: Rebuilding manifest for path: %@
plist
%@: Adding file to purchase manifest: %@
%@: Path: %@ not valid for manifest: %@
relativeMediaAssetPath
%@: Removing item from purchase manifest: %@
relativeArtworkAssetPath
relativeFeedAssetPath
relativeTrackPropertiesPath
%@: Missing %lu paths from manifest
%@: Deleting %lu secondary files for %lu removed manifest items
%@: Deleted secondary file: %@
%@: Could not delete secondary file: %@: %@
PurchaseManifest
%@: Path does not exist: %@
%@: Path returned empty plist: %@
%@: Wrote dictionary (success: %d)
path
T@"NSString",R
purchaseManifestItems
T@"NSArray",R
trackPersistentID
manifestItemDictionary
T@"NSDictionary",R,N,V_dictionary
libraryPersistentIdentifier
T@"NSNumber",C,N
relativeArtworkPath
T@"NSString",C,N
relativeMetadataPath
%@: Couldn't load bag to get family-info url
family-info
fetchAccountNames
true
%@: Using cached family after error: %@
account
circle
timestamp
com.apple.itunesstored
JFamilyCircle.plist
family
members
ITunesPreferredDsid
ICloudDsid
firstName
lastName
accountName
sharingPurchases
iTunesAccountNames
B24@?0@"SSFamilyMember"8@"NSDictionary"16
q24@?0@8@16
authenticationPromptStyle
Tq,N,V_authenticationPromptStyle
clientAuditTokenData
T@"NSData",&,N,V_clientAuditTokenData
fetchITunesAccountNames
TB,N,V_fetchITunesAccountNames
userAgent
T@"NSString",C,N,V_userAgent
familyCircle
T@"SSFamilyCircle",R,N,V_familyCircle
cancel-purchase-batch
customerMessage
dsPersonId
failed-items
item-id
items
songList
keybag
more
page-type
template-name
preorder-success
appClusterAssignmentsResultSet
clusterVersionId
appsClusterAssignments
adamId
clusterAssignments
com.apple.itunesstored.StoreDownloadQueueResponse
clusterMappings
T@"NSOrderedSet",R,V_clusterMappings
downloads
T@"NSOrderedSet",R
storeCorrelationID
T@"NSString",V_storeCorrelationID
error
T@"NSError",&
T@"NSData",R
rangesToLoad
shouldCancelPurchaseBatch
triggeredQueueCheck
userIdentifier
T@"NSNumber",R
clientIdentifier
T@"NSString",V_clientIdentifier
_downloadID
T@"NSNumber",C,N,G_downloadID,S_setDownloadID:
state
Tq,R,N
downloadState
contentLength
contentIdentifier
T@"NSString",R,N
contentURL
T@"NSURL",R,N
contentVersion
T@"NSError",R,N
progress
Tf,R,N
timeRemaining
Td,R,N
transaction
T@"SKPaymentTransaction",R,N
T@"NSNumber",C,N,V_contentLength
T@"NSURL",C,N,V_contentURL
downloadID
T@"NSNumber",C,N,V_downloadID
T@"NSNumber",C,N,V_downloadState
T@"NSError",C,N,V_error
T@"NSNumber",C,N,V_progress
T@"NSNumber",C,N,V_timeRemaining
%@: Operation started
%@: Terminating with no account
%@: Failed to retrieve conditions: %@
%@: Terms and conditions are valid.
%@: Terms and conditions are empty.
%@: Terms and conditions are being copied.
v24@?0@"SSTermsAndConditions"8@"NSError"16
%@: Ending alert with acceptance: %@
%@: Server-side acceptance of [%lld] failed with error: %@
v20@?0B8@"NSError"12
terms-check
POST
accepted
%@: Disabling %lu power assertions before user interaction
ServiceTermsPageViewController
terms
%@: Could not display terms sheet
v16@?0@"SpringBoardAlertProxy"8
userAccepted
TB,R,N,GisUserAccepted
com.apple.itunesstored.download-queue
@"NSURL"16@?0@"SSURLBagContext"8
%@.%@
%@: Could not load URL bag: %@
%@: Finished loading download queue (%@, %@, %@)
%@: Importing keybag from response: %@
%@: Loading download queue (%@, %@, %@) with reason: %ld
unknown
%@: Download queue response (key: %@ startID: %@ endID: %@) %@.
%llu
metricsLoadURLSessionDuration
T@"NSNumber",R,N
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
requestProperties
T@"SSURLRequestProperties",R
accountIdentifier
T@"NSNumber",&
needsAuthentication
requestIdentifier
hasBeenAuthedForBuy
backgroundUpdateProduct
buyProduct
p2-in-app-buy
paidRedownloadProduct
redownloadProduct
redownloadAllTones
updateProduct
p2-client-authentication
countryCode
caller
is-background
creditDisplay
afds
playback
serialNumber
metrics
newsEntitlements
activityEntitlements
appStoreEntitlements
need-apple-pay-auto-enroll-retry
aps-allowed-product-type
productType
salableAdamId
duAnonymousPings
originatingBundleID
product
com.apple.itunesstored.purchase
MCProfileConnection
%{public}@: [%{public}@] Starting purchase for adamID: %@
%@: Retry purchase operation after dialog
%@: Retry after delayed goto
%@: Retry purchase operation after changed buy parameters
%@: Retry purchase with MD sync state
%@: Retry purchase operation after machine data action
%{public}@: We've attempted silent auth multiple times and the purchase continues to fail. Refusing to retry again.
%{public}@: [%{public}@] Purchase finished with error: %{public}@
%{public}@: [%{public}@] Purchase completed
com.apple.itunesstored.PurchaseOperation
%{public}@: Unable to find productType in buyParams
com.apple.Music.StoreFlowExtension
com.apple.StoreKitUIService
tidContinue
%{public}@: Auto-enrollment found countryCode: %{public}@
%{public}@: Auto-enrollment failed for no bag
disabled
false
%{public}@: [%{public}@] Changing buy parameters after auth dialog: %@
GENERIC_PURCHASE_ERROR
%{public}@: [%{public}@] Purchase failed with code %@: %@
%@: Purchase failed with retry dialog: %@
%@: Purchase: %@ failed with dialog and error: %@
%{public}@: Attaching auto-enrollment payment token
pkPayment
%{public}@: Attaching FPAN ID
fpanID
requirePasswordImmediately
%@: Forcing authentication for restriction
disableTouchID
application/x-apple-plist
Content-Type
deviceScore
purchaseProductType
X-Apple-Client-Address
X-Apple-Purchase-UUID
isUpdateAll
generateBuyParams
icloud-backup-enabled
v32@?0@"NSString"8@"NSString"16^B24
%@: Performing machine-data action: %@ with accountID: %@
%{public}@: apple-pay-classic: Failed to no country code
%{public}@: apple-pay-classic: Failed for no payment networks
%{public}@: apple-pay-classic: Failed for no biometrics
%{public}@: apple-pay-classic: ACL evaluation completed with result: %{public}@
%{public}@: apple-pay-classic: Skipping Apple Pay Classic for ACL version: %{public}@
%{public}@: apple-pay-classic: Availability completed with result: %{public}@
%{public}@: apple-pay-classic: Performing Apple Pay Classic with payment services URL: %@
applePayPaymentServiceURL
%{public}@: apple-pay-classic: Failed for no payment services URL
%{public}@: apple-pay-classic: Skipping Apple Pay Classic
%{public}@: Attempting auto-enrollment check with countryCode: %{public}@
%{public}@: Attempting auto-enrollment check without countryCode
%{public}@: Skipping auto-enrollment due to disabled biometrics
%{public}@: ACL support evaluation completed with result: %{public}@
%{public}@: Performing auto-enrollment with payment services URL: %@
%{public}@: Auto-enrollment failed for no payment services URL
%{public}@: Skipping auto-enrollment with ACL version: %{public}@
price
%@: Skipping confirmation dialog with buy parameters: %@
%@: Prompting user with buy confirmation
%{public}@: [ASN] DisplayPaymentSheetOperation did complete
%{public}@: [ASN] Payment sheet authorized failed with error: %@
DisplayPaymentSheetOperation Error
User cancelled
%{public}@: [ASN] Payment sheet authorization failed with error: %{public}@
%{public}@: [ASN] Payment sheet did authorize payment with A/S/N
v36@?0@"NSData"8@"NSString"16B24@"NSError"28
%{public}@: Payment sheel container operation failed with error: %{public}@
v32@?0@"ISDialogButton"8Q16^B24
%{public}@: User confirmed buy using payment sheet
%{poublic}@: Authorized payment, but failed to find buy button
v24@?0@"SSVDialogResponse"8@"NSError"16
%@: User confirmed buy confirmation: %@
%@: User attempted Ask to Buy: %@
%@: User declined buy confirmation: %@
%{public}@: Clearing credentials after buy confirm cancel. Saving %{public}@.
%{public}@: Storefront changed: %{public}@. Checking with delegate if purchase should continue.
storefront
%{public}@: [%{public}@] Issuing purchase request: %@
%{public}@: Did not finish auto-enrollment, leaving DPAN cache unchanged.
%{public}@: Finished auto-enrollment, performing DPAN update check
%{public}@: Clearing DPAN cache for auto-enrollment, server-driven instruction
%{public}@: Updating cached DPAN identifier for auto-enrollment
%{public}@: Skipping DPAN update check for auto-enrollment with buyParams: %{public}@ %{public}@
x-apple-jingle-correlation-key
%@: storeCorrelationID: %{public}@
PurchaseOperation: Failed to score device
v16@?0@"NSString"8
%{public}@: Failed to create device scorer
subDownload
sbDownload
%@: Using client auth for purchase bag key: %@
%@: Using server auth for purchase bag key: %@
T@"NSString",R,C,V_deviceScore
displayedErrorDialog
TB,V_displayedErrorDialog
rawOutput
T@"NSDictionary",&,V_rawOutput
affiliateIdentifier
allowsBootstrapCellularData
TB,V_allowsBootstrapCellularData
bagType
Tq,V_bagType
buyParameters
T@"NSString",&,V_buyParameters
logKey
T@"NSString",C,V_logKey
remoteAuthenticationHandler
T@?,C,V_remoteAuthenticationHandler
T@"NSData",&,V_clientAuditTokenData
clientIdentifierHeader
originalProductOwnerAccountDSID
T@"NSNumber",C
delegate
T@"<PurchaseOperationDelegate>",W
backgroundPurchase
TB,GisBackgroundPurchase
microPayment
TB,V_microPayment
playbackRequest
TB,GisPlaybackRequest
moveToiOS
TB,R,GisMoveToiOS,V_moveToiOS
originatingStorefront
T@"NSString",C,V_originatingStorefront
preauthenticated
TB,GisPreauthenticated,V_preauthenticated
requiresAuthentication
TB,V_requiresAuthentication
requiresSerialNumber
TB,V_requiresSerialNumber
shouldSendKeyBagSyncData
TB,V_shouldSendKeyBagSyncData
skipsConfirmationDialogs
TB,V_skipsConfirmationDialogs
tidHeaders
T@"NSDictionary",R
useRemoteAuthentication
TB,V_useRemoteAuthentication
urlBagKey
requestPerformanceMetrics
T@"ISURLRequestPerformance",R
URLResponse
T@"SSURLConnectionResponse",R
T@"NSString",C,N,V_storeCorrelationID
changedBuyParameters
T@"NSString",&,N,V_changedBuyParameters
dialog
T@"ISDialog",&,N,V_dialog
didPasswordAuthenticate
TB,N,V_didPasswordAuthenticate
delayedGotoRetryCount
Tq,N,V_delayedGotoRetryCount
machineDataRetryCount
Tq,N,V_machineDataRetryCount
machineDataSyncState
T@"NSString",C,N,V_machineDataSyncState
redirectURL
T@"NSURL",C,N,V_redirectURL
shouldRetryForDelayedGoto
TB,N,V_shouldRetryForDelayedGoto
shouldRetryForMachineData
TB,N,V_shouldRetryForMachineData
shouldRetryWithOriginalProductOwnerAccount
TB,N,V_shouldRetryWithOriginalProductOwnerAccount
%@: Blocks: %d, Ignores: (%@)
handlerIdentifier
disavowedSessionProperties
T@"NSSet",R
downloadPhasesToIgnore
T@"NSSet",C
sessionsNeedPowerAssertion
sessionsShouldBlockOtherDownloads
activityIdentifier
T@"NSString",C,N,V_activityIdentifier
T@"NSNumber",C,N,V_accountIdentifier
pollingDuration
Td,N,V_pollingDuration
pollingInterval
Td,N,V_pollingInterval
postIdentifier
Tq,N,V_postIdentifier
sourceApplicationIdentifier
T@"NSString",C,N,V_sourceApplicationIdentifier
postCreateTime
Td,N,V_postCreateTime
%@: [A: %lld, D: %lld, H: %lld, P: %@]
T@"NSString",R,C,N,V_clientIdentifier
Tq,R,N,V_handlerIdentifier
assetIdentifier
Tq,N,V_assetID
downloadIdentifier
Tq,N,V_downloadID
downloadPhase
T@"NSString",C,N,V_downloadPhase
duetBudget
T@"NSNumber",C,N,V_duetBudget
storeDownload
TB,N,GisStoreDownload,V_storeDownload
shouldSupressErrorDialogs
TB,N,V_shouldSupressErrorDialogs
authenticationChallenge
T@"NSURLAuthenticationChallenge",&,N,V_authenticationChallenge
downloadHandle
T@"DownloadHandle",&,N,V_downloadHandle
mediaAssetIdentifier
assetBlockedReason
Tq,N,V_assetBlockedReason
downloadHandlerSession
T@"DownloadHandlerSession",C,N,V_downloadHandlerSession
mediaAssetInstallPath
T@"NSString",C,N,V_mediaAssetInstallPath
result
Tq,N,V_result
%@: Processing file: %@
v12@?0f8
%@: Failed with error: %@
mediaPath
sinfs
T@,R
mediaFileExtension
AVFileProcessor
AVFileProcessorAttribute_ChunkMD5Array
AVFileProcessorAttribute_FileMD5
AVFileProcessorAttribute_MD5ChunkSize
AVFileProcessorAttribute_NewFileExtension
AVFileProcessorAttribute_RentalPeriod
AVFileProcessorAttribute_RentalPlaybackPeriod
AVFileProcessorAttribute_RentalPlaybackStartDate
AVFileProcessorAttribute_RentalStartDate
AVFileProcessorAttribute_Sinfs
com.apple.itunesstored.RentalAdded
CheckoutRentalKeysOperation.m
Must have sinfs
Must have account and rental key identifier
%@: Invalid primary sinf
%@: Could not get rental bag
%@: Could not get rental bag request
%@: Could not get DSID
%@: Could not get rental identifier
%@: Could not generate checkout request body
play
download-done
dsid
hw.model
device-diversity
rbsync
rental-bag
rental-id
download
checkout-type
stream
%@: Rental checkout body: %@
rental-bag-response
%@: Received failure type: %@
%@: Succeeding because no rental bag data
%@: Could not process rental bag keys
%@: Rental checkout response: %@
%@: Rental period ends in %.2f seconds at %@
%@: Playback not started, duration is %lu
%@: Rental playback period ends in %.2f seconds at %@
rental-checkout
%@: Checking out rental keys
%@: Performing checkout attempt #%ld of %d
%@: Giving up after checkout failure
%@: Verified rental information
%@: Giving up after repeated failure
rentalKeyIdentifier
backgroundCheckout
TB,GisBackgroundCheckout,V_backgroundCheckout
shouldValidateRentalInfo
TB,N,V_shouldValidateRentalInfo
checkoutWithPlay
TB,N,GshouldCheckoutWithPlay,V_checkoutWithPlay
checkoutType
TQ,N,V_checkoutType
SELECT dsid FROM account WHERE apple_id = '%@'
v16@?0^{sqlite3_stmt=}8
Library
MusicLibrary
AccountCache.sqlitedb
T@"<BatterySaverWatcherDelegate>",R,W,V_delegate
FairPlayErrorDomain
playbackDuration
TI,N,V_playbackDuration
playbackStartTime
TI,N,V_playbackStartTime
rentalDuration
TI,N,V_rentalDuration
rentalStartTime
TI,N,V_rentalStartTime
SinfPropertyAccountIdentifier
SinfPropertyFairPlayKeyIdentifier
SinfPropertyRentalInformation
FairPlayUtility.m
Must have at least one sinf
%lld
iTunesMetadata.plist
%llx
B16@?0@"DownloadsExternalTransaction"8
auto_update_state
blocked_reason
can_cancel
can_pause
can_prioritize
audit_token_data
phase
did_restore_data
bundle_id
download_error
has_restore_data
is_restricted
is_server_finished
last_odr_action
restore_data_size
restore_state
store_queue_refresh_count
download_id
asset
client_id
client
download_state
effective_client_id
application_id
LEFT OUTER JOIN download_state ON download.pid = download_state.download_id
LEFT OUTER JOIN client ON download.client_id = client.client_id
LEFT OUTER JOIN application_id ON download.effective_client_id = application_id.effective_client_id
allAssetCookies
T@"NSArray",R,N
downloadKind
itemIdentifier
TQ,R,N
ITunesSafeGUID
airplay_content_type
artist_name
artwork_is_prerendered
artwork_template_name
is_automatic
download_state.auto_update_state
auto_update_time
beta_external_version_identifier
download_state.blocked_reason
bundle_version
download_state.can_cancel
cancel_url
download_state.can_pause
download_state.can_prioritize
client.audit_token_data
collection_artist_name
collection_group_count
collection_item_count
collection_name
composer_name
download_state.did_restore_data
download_state.phase
download_permalink
document_target_id
duet_transfer_type
duration_in_ms
application_id.bundle_id
enable_extensions
download_state.download_error
episode_id
episode_sort_id
genre_name
handler_id
has_4k
has_dolby_vision
has_hdr
has_messages_extension
download_state.has_restore_data
hls_playlist_url
index_in_collection
index_in_collection_group
is_compilation
is_explicit
is_hd
is_hls
is_store_queued
is_premium
is_private
is_purchase
is_redownload
is_rental
is_restore
download_state.is_restricted
is_sample
download_state.is_server_finished
is_device_based_vpp
is_from_store
is_shared
is_tv_template
is_music_show
show_composer
work_name
kind
download_state.last_odr_action
launch_prohibited
library_id
loading_priority
long_description
long_season_description
messages_artwork_url
network_name
order_key
order_seed
override_audit_token_data
page_progression_direction
podcast_episode_guid
podcast_feed_url
podcast_type
policy_id
preferred_asset_flavor
priority
purchase_id
rate_limit
ref_app
ref_url
release_date
release_year
rental_id
resource_timeout_interval
download_state.restore_data_size
download_state.restore_state
season_number
series_name
short_description
cancel_if_duplicate
cancel_on_failure
software_type
store_account_name
store_account_id
store_artist_id
store_collection_id
store_cohort
store_composer_id
store_download_key
store_front_id
store_genre_id
store_item_id
store_match_status
store_preorder_id
store_publication_version
store_purchase_date
download_state.store_queue_refresh_count
store_redownload_parameters
store_redownload_status
store_saga_id
store_software_version_id
store_transaction_id
store_url
store_xid
suppress_error_dialogs
thumbnail_newsstand_binding_edge
thumbnail_newsstand_binding_type
thumbnail_url
timeout_interval
title
transaction_id
variant_id
IFNULL(download_state.auto_update_state, 0)
IFNULL(download_state.blocked_reason, 0)
IFNULL(download_state.can_pause, 1)
IFNULL(download_state.can_cancel, 1)
IFNULL(download_state.can_prioritize, 1)
IFNULL(application_id.bundle_id, download.client_id)
IFNULL(download_state.phase, "SSDownloadPhaseWaiting")
IFNULL(download_state.has_restore_data, -1)
IFNULL(download_state.is_restricted, 0)
IFNULL(download_state.is_server_finished, 0)
IFNULL(download_state.restore_data_size, 0)
IFNULL(download_state.restore_state, 0)
IFNULL(download.store_item_id, 0)
rental-sync
SyncRentalOperation.m
Must have account
%@: Could not generate sync request body
%@: Rental sync response: %@
%@: Syncing rental
T@"NSArray",R,V_sinfs
T@"NSNumber",R,V_accountIdentifier
T@"NSNumber",R,V_rentalKeyIdentifier
T@"NSString",C,V_clientIdentifierHeader
T@"NSString",C,V_userAgent
T@"SSURLConnectionResponse",R,V_URLResponse
accountId
downloaderId
softwareVersionExternalIdentifier
familyId
itemId
purchaserId
dictionaryRepresentation
T@"NSDictionary",R,C,N
restoreDownloadItem
T@"RestoreDownloadItem",R,N
externalVersionIdentifier
T@"NSNumber",C,N,V_externalVersionIdentifier
T@"NSNumber",C,N,V_itemIdentifier
storeFrontIdentifier
T@"NSNumber",C,N,V_storeFrontIdentifier
vendorIdentifier
T@"NSString",C,N,V_vendorIdentifier
T@"NSString",C,N,V_accountIdentifier
downloaderIdentifier
T@"NSNumber",C,N,V_downloaderIdentifier
familyIdentifier
T@"NSNumber",C,N,V_familyIdentifier
purchaserIdentifier
T@"NSNumber",C,N,V_purchaserIdentifier
afds-enabled
freeBuy
paidBuy
review
challengeResponse
T@"NSData",C,V_challengeResponse
hostChallenge
T@"NSData",C,V_hostChallenge
secureElementID
T@"NSString",C,V_secureElementID
serverEndpoint
Tq,V_serverEndpoint
%{public}@: Device scoring not available
%02x
%{public}@: Load bag operation failed for timeout
%{public}@: Failed to find bag
Tq,N,V_downloadIdentifier
Tq,N,V_mediaAssetIdentifier
automaticType
Tq,N,V_automaticType
bundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
T@"NSString",&,N,V_kind
legacyClient
TB,N,GisLegacyClient,VlegacyClient
requiresDownloadHandler
TB,N,V_requiresDownloadHandler
transferBytesExpected
Tq,N,V_transferBytesExpected
transferBytesWritten
Tq,N,V_transferBytesWritten
transferProgressFraction
Td,N,V_transferProgressFraction
transferResumptionOffset
TQ,N,V_transferResumptionOffset
overallProgress
T@"SSOperationProgress",R,N
com.apple.itunestored.MicroPaymentQueue
com.apple.itunestored.MicroPaymentQueue.PurchaseActionsDBQueue
MicroPaymentQueueAlive
[%{public}@]: Purchase intent bundleId nil, aborting (productIdentifier: %@)
[%{public}@]: Purchase intent productIdentifier nil, aborting (appBundleId: %@)
[%{public}@]: Adding purchase intent for productID: %{public}@, productName: %{public}@, bundleID: %{public}@, appName: %{public}@
[%{public}@]: FBSystemService failed to open application %{public}@ with error: %{public}@
[%{public}@]: Opened app: %{public}@
%@: Checking queue for client: %@
%@: Failing %lu downloads
v24@?0@"NSNumber"8@"MicroPaymentDownload"16
v16@?0@"DownloadsSession"8
%@: Finishing %lu downloads
%@: Deleting %lu downloads and checking %lu downloads after migrating properties
B16@?0@"DownloadsTransaction"8
downloadID=%lld
payment
offer-name
productIdentifier=%@
%@: Updating payment after unexpected purchase response: %@
[%{public}@]: Client entered foreground: %{public}@
[%{public}@]: Client registered: %{public}@
state=%@ AND askPermissionRequestIdentifier=%@
%@: Could not update deferred payment: %@, error: %@
%@: Fail payment after request deny: %@
%@: Invalid status for requestID: %@
%@: Refresh %ld queues after payment approval
[%{public}@]: Got IAP order: %@, for app: %{public}@
v16@?0@"NSArray"8
[%{public}@]: Timed out getting promoted IAP order for bundle id: %@
[%{public}@]: Error setting IAP order: %@, for app: %{public}@
[%{public}@]: Set IAP order: %@, for app: %{public}@
v12@?0B8
[%{public}@]: Timed out setting promoted IAP order for bundle id: %@, IAPs: %@
[%{public}@]: Got IAP visibility: %@, for app: %{public}@
v16@?0@"NSDictionary"8
[%{public}@]: Timed out getting promoted IAP visibility for bundle id: %{public}@, IAP: %@
[%{public}@]: Error setting IAP visibility: %{public}li, for product: %@, app: %{public}@
[%{public}@]: Set IAP visibility: %{public}li, for product: %@, app: %{public}@
[%{public}@]: Timed out setting promoted IAP visibility for product: %@, app: %{public}@
[%{public}@]: (Internal client) Got IAP info for app: %{public}@. Order: %@, hidden product ids: %@, shown product ids: %@
v40@?0@"NSArray"8@"NSSet"16@"NSSet"24@"NSError"32
[%{public}@]: Timed out getting promoted IAP internal info for bundle id: %@
inAppReviewRequestLimitWindow
inAppReviewRequiredDaysAfterReview
inAppReviewRequestsPerWindow
inAppReviewRequireNewVersionAfterReview
bundleIdentifier = %@
date
%@: Client disconnected: %@
%@: Could not load clients: %@
MicroPaymentQueueCleanupClients
%@: Merging duplicate client %@ into client %@
%@: Found %lu existing clients
B24@?0Q8@"NSObject<OS_xpc_object>"16
com.apple.itunesstored.MicroPaymentQueue
downloadID=%@
[%{public}@]: Tring to send purchase intents for client: %{public}@, got intents: %{public}@
[%{public}@]: Sending purchase intents for client: %{public}@, intents within time limit: %{public}@
%@: Starting payment: %@
array
T@"NSArray",R,V_array
MicroPaymentClient
%@: Merged existing payment with response payment
%@: Merged in new payment from response
%@: Could not find payment to merge with existing payment
identifier
T@"NSString",&,D,N
lastQueueCheckDate
T@"NSDate",&,D,N
payments
T@"NSMutableSet",&,D,N
sandboxed
T@"NSNumber",&,D,N
bundleVersion
storeIdentifier
storeVersion
usesIdentityAttributes
hidesConfirmationDialogs
ignoresInAppPurchaseRestriction
receiptDirectoryPath
requiresAuthenticationForPayment
didChange
TB,R,N
addedPayments
T@"NSArray",C,N,V_addedPayments
changedPayments
T@"NSArray",C,N,V_changedPayments
T@"NSOrderedSet",C,N,V_removedDownloadIDs
removedPayments
T@"NSArray",C,N,V_removedPayments
transaction-id
MicroPayment
quantity
receipt-data
request-data
applicationUsername
purchase-date
original-purchase-date
original-transaction-id
transactionIdentifier
isStoreOriginated
assetList
ready
TB,R,N,GisReady
transientFailed
TB,N,GisTransientFailed,V_transientFailed
matchingIdentifier
actionParams
askPermissionRequestIdentifier
T@"MicroPaymentClient",&,D,N
T@"NSSet",&,D,N
errorData
T@"NSData",&,D,N
insertDate
originalPurchaseDate
T@"NSString",C,D,N
originalTransactionIdentifier
partnerIdentifier
partnerTransactionIdentifier
productIdentifier
purchaseDate
receiptData
requestData
simulatesAskToBuyInSandbox
supportsDeferredPayment
userDSID
discountIdentifier
discountKeyIdentifier
discountNonceString
discountSignature
discountTimestamp
appDsid
partnerId
partnerTransactionId
offerName
storeCohort
adHocOfferId
adHocKeyId
adHocNonce
adHocSignature
adHocTimestamp
%@: Could not generate buy parameters
&%@=%@
%@: Could not parse response
[%{public}@]: Got invalid application proxy for bundle id: %{public}@. Checking for plugin
%@: Could not find application for identifier: %@
?=&+
&beta=true
&requiresAskToBuy=true
T@"<BuyMicroPaymentOperationDelegate>",W,D
paymentID
T@"NSManagedObjectID",C,V_paymentID
T@"NSData",&
clientIdentity
T@"StoreKitClientIdentity",&
T@"NSData",C
T@"NSString",&,V_discountIdentifier
T@"NSString",&,V_discountKeyIdentifier
T@"NSString",&,V_discountNonceString
T@"NSString",&,V_discountSignature
T@"NSNumber",&,V_discountTimestamp
response
T@"MicroPaymentQueueResponse",R
com.apple.itunesstored.MediaContentTasteUpdateController.accessQueue
com.apple.itunesstored.MediaContentTasteUpdateController.operationQueue
[%@] Not performing refresh operation because SetupAssistant hasn't completed
[%@] Kick off content taste refresh operation, invalidate local cache: %d
[%@] updating expiration time from %{public}@ to %{public}@.
[%@] Account store changed.
com.apple.itunesstored.media-content-taste-update
MediaContentTasteAccountUniqueID
BYSetupAssistantFinishedDarwinNotification
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
BYSetupAssistantNeedsToRun
_transactionIdentifier
originalTransaction
T@"SKPayment",R,N
transactionDate
T@"NSDate",R,N
transactionReceipt
T@"NSData",R,N
transactionState
[%@] Deciding to append receipt: [Current: %ld bytes] [New: %ld bytes]
app-list
requestType
Tq,R
appReceipt
T@"NSArray",C
serverPaymentCount
shouldTriggerQueueCheck
modeType
recurringSubscriptionPeriod
numOfPeriods
type
PayAsYouGo
PayUpFront
FreeTrial
IntroOffer
AdhocOffer
T@"NSNumber",C,N,V_price
subscriptionPeriod
T@"MicroPaymentProductSubscriptionPeriod",&,N,V_subscriptionPeriod
numberOfPeriods
TQ,N,V_numberOfPeriods
paymentMode
TQ,N,V_paymentMode
TQ,N,V_type
T@"NSString",&,N,V_identifier
data
DWMY
numberOfUnits
unit
_localeIdentifier
T@"NSString",C,N,G_localeIdentifier,S_setLocaleIdentifier:
localizedDescription
localizedTitle
T@"NSDecimalNumber",R,N
priceLocale
T@"NSLocale",R,N
downloadable
TB,R,N,GisDownloadable
contentLengths
downloadContentLengths
downloadContentVersion
T@"SKProductSubscriptionPeriod",R,N
introductoryPrice
T@"SKProductDiscount",R,N
subscriptionGroupIdentifier
discounts
%@: Loading match status for account: %@
isMatchServiceEnabled
cloud-welcome
isMatchSubscriber
%@: Could not load match status: %@
%@: Loaded match status: %ld for account: %@
getMatchStatusSrv
matchStatus
transactionId
p2-in-app-transaction-done
%@: Finishing payment: %@
%@: Failed with non-dictionary response
%@: Failed with failureType: %@
T@"StoreKitClientIdentity",C
application_workspace_state
[%@] Ignoring complete notification for %@ because appstored is enabled
[%@] Ignoring incomplete notification for %lld because appstored is enabled: %@
[%@] Requesting [%@] Notification: [%@]
expected_phase
retry_count
time_updated
Could not save modal context: %p: %@
-- %ld, %@, %@, %@
com.apple.itunesstored.SpringBoardAlertProxy.delegate
com.apple.itunesstored.SpringBoardAlertProxy
v24@?0@"NSObject<OS_xpc_object>"8@"NSObject<OS_xpc_object>"16
T@"<SpringBoardAlertProxyDelegate>",W
XPCEndpoint
T@"NSObject<OS_xpc_object>",R,V_inputEndpoint
%{public}@: AdHocOfferNotFound: %d
%{public}@: AdHocOfferPriceNotValid: %d
%{public}@: AdHocOfferMissingKeyParams: %d
%{public}@: AdHocOfferSignatureNotValid: %d
%{public}@: [PW] DisplayPaymentSheetOperation did complete
%{public}@: [PW] Payment sheet authorized failed with error: %@
%{public}@: [PW] Payment sheet did cancel
%{public}@: [PW] Payment sheet did authorize payment with password
%{public}@: [PW] Payment sheet encountered an unknown error
%{public}@: Preparing to display payment sheet
%{public}@: Display payment sheet container operation failed with error: %{public}@
%{public}@: Server-driven authentication failed with error: %{public}@
redirectActionParameters
T@"NSString",C,V_redirectActionParameters
applicationHandle
T@"ApplicationHandle",R,N,V_applicationHandle
blocksAppInstallation
/private/var
com.apple.itunesstored.CacheDelete
com.apple.itunesstored.CacheDeleteCoordinator.dispatch
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
[%@]: Registered cache delete callbacks for clienID: %@ with osResult: %d
[%@]: Requested cancel purge for service
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
[%@]: Requested to periodic purge %@ with urgency %ld
[%@]: Purge requested: %@ actual purge: %lld with urgency: %ld
[%@]: Requested purgeable with urgency: %ld
[%@]: Total purgeable is %lld bytes for urgency: %ld
CACHE_DELETE_ID
[%@]: Pushed combined purgeable amounts: %@
[%@]: Refreshing purgeable storage
scheduledTimer
T@"NSObject<OS_dispatch_source>",&,V_scheduledTimer
database
T@"SSSQLiteDatabase",R,N,V_database
[%@] error fetching attributes of manifest file at path %@ %@
[%@] keeping current manfiest %@
[%@] manifest file is too recent to be removed %@
[%@] manifest file at url is too new to remove %@ %@
[%@] error removing manifest file at url %@ %@
[%@] successfuly removed manifest file at url %@
[%@] error fetching asset file urls from asset directory %@ %@
[%@] error fetching attributes of asset file at path %@ %@
[%@] keeping asset file at url %@
[%@] asset file at url is too new to remove %@ %@
[%@] error removing asset file at url %@ %@
[%@] successfuly removed asset file at url %@
v16@?0@"NSObject<OS_xpc_object>"8
%@: No app for ID: %@
%@: Products load failed/cancelled: %@
%@: Loaded products for %lu identifiers
%@: Couldn't load bag to get batch size
p2-product-offers-batch-limit
appAdamId
icuLocale
offerNames
sfId
appExtVrsId
p2-product-offers
%@: Loading products for %lu identifiers with batch size %ld
productIdentifiers
sandboxReceipt
receipt
[%{public}@]: Updating receipt for: %{public}@
bundle-id
version-id
want-expired
want-revoked
want-vpp
revoked
adam-id
software-version-external-identifier
resultBlock
com.apple.DirectUploadSessionController
%@: Adding %ld upload requests
%@: Preparation failed for upload: %@, error: %@
v32@?0@"NSURLSessionConfiguration"8@"NSURLRequest"16@"NSError"24
%@: Canceling task: %lu, to cancel upload: %@
v24@?0@"NSURLSessionTask"8@"NSNumber"16
%@: Canceling task: %lu, to pause upload: %@
%@: Fail upload: %@, after HTTP error: %@
%@: Task did stop for upload: %@
%@: Upload: %@ failed in session: %@ with error: %@
%@: Upload: %@ finished in session: %@
v32@?0@"DirectUploadProgress"8Q16^B24
%@: Starting task: %lu, for upload: %@, session: %@
v32@?0@"NSArray"8@"NSArray"16@"NSArray"24
%@: Upload %lld did update progress: %.2f
T@"<DirectUploadSessionDelegate>",W,N,V_delegate
numberOfTasks
com.apple.itunesstored.upload.stop-reason
com.apple.itunesstored.upload.id
com.apple.itunesstored.upload.response
com.apple.itunesstored.upload.error
%@: Attempting claim before authorization for contentID: %@
v28@?0B8@"NSArray"12@"NSError"20
%@: Could not claim apps: %@
%@: Running authorize operation for account ID: %@, family account ID: %@
claimedBundleIdentifiers
T@"NSArray",R,V_claimedBundleIdentifiers
available-subproducts
expectedIdentifiers
T@"NSArray",C,N,V_expectedIdentifiers
invalidIdentifiers
T@"NSArray",R,N,V_invalidIdentifiers
products
T@"NSArray",R,N,V_products
DirectUploadController
com.apple.itunesstored.DirectUploadController
v32@?0@"DirectUploadEntity"8Q16^B24
%@: Inserted media social post: %lld, with %ld uploads
v24@?0@"SSVDirectUpload"8^B16
%@: Failure count is now: %ld for upload: %lld
%@: Resuming uploads after authentication
%@: Canceling uploads after canceled authentication
%@: Deleting post after error dialog: %@
%@: Deleting upload after error dialog: %@
%@: Retry post after error dialog: %@
%@: Retrying %ld uploads after error dialog
%@: Disconnect client: %@
%@: No reply to send XPC access denied message
%@: Deleting upload: %@, for client: %@
%@: Deleting post: %lld, for client: %@
%@: Removing pending upload with pid: %lld.
%@: Keeping pending upload with pid: %lld.
%@: %lu pending upload(s) removed.
%@: Adding poll request pid: %lld.
v16@?0@"MediaSocialPostResponse"8
%@: Post failed due to polling timeout, removing from database: %lld
%@: Post succeeded, removing from database: %lld
%@: Failed to process post: %lld is now due to unrecoverable error: %@
%@: Failed to process post: %lld is now due to a recoverable error: %@
%@: Failure count for post: %lld is now: %ld, after error: %@
%@: Pausing upload: %lld, for client: %@
com.apple.itunesstored.DirectUploadController.post
%@: Invalid register message, no endpoint
%@: Registered observer client: %@
%@: Reset upload: %lld, for client: %@
%@: Reset upload: %lld
%@: Retrying failed media social post: %lld
TQ,N,V_numberOfUnits
TQ,N,V_unit
icu-locale
is-hosted
version
subscriptionFamilyId
STDQ
size
%@: Received invalid product dictionary
contentSize
Tq,N,V_contentSize
T@"NSString",C,N,V_contentVersion
T@"NSArray",&,N,V_discounts
hosted
TB,N,GisHosted,V_hosted
T@"MicroPaymentProductDiscount",&,N,V_introductoryPrice
localeIdentifier
T@"NSString",C,N,V_localeIdentifier
T@"NSString",C,N,V_localizedDescription
T@"NSString",C,N,V_localizedTitle
T@"NSString",C,N,V_productIdentifier
T@"NSString",C,N,V_subscriptionGroupIdentifier
CheckDownloadQueueOperation.m
Must have a request
%@: Running request: %@
%@: Request %@ failed: %@
download-queue-item-count
%@: Found %ld downloads for request: %@
downloadQueueRequest
T@"StoreDownloadQueueRequest",R
numberOfAvailableDownloads
v40@?0@"SSVMediaSocialPostAttachment"8@"NSString"16Q24^B32
v32@?0@"SSVMediaSocialPostAttachment"8Q16^B24
v32@?0@"SSVMediaSocialPostItem"8Q16^B24
v32@?0@"SSVMediaSocialPostExternalDestination"8Q16^B24
(%@.%@ != 0) ASC
post
contentItems
externalServiceDestinations
readyToSend
TB,R,N,GisReadyToSend
statusPollRequest
T@"MediaSocialStatusPollRequest",R,C,N
uploadedAttachments
account_id
activity_id
author_id
author_type
creation_time
failure_count
is_attributed
is_failed
poll_count
poll_interval
poll_duration
message
source_app
bvrs
p2-in-app-regrant-purchase-history
%@: Could not find app for identifier: %@
%@: Fetching range [%@, %@]
%@: Range [%@, %@] failed with error: %@
[%@] Deciding to write receipt: %d bytes -- %@
paymentBatchBlock
partialFailure
TB,R,GisPartialFailure
[ApplicationWorkspace]: No placeholder with progress to cancel, skipping uninstall: %@
[ApplicationWorkspace]: Cancelled progress for %@ progress: %@
[ApplicationWorkspace]: Could not find progress to cancel for %@ progress: %@
RingtonePurchase
TLToneManager
CNContactStore
CNContactCallAlertKey
CNContactTextAlertKey
CNActivityAlert
CNSaveRequest
%@: Assigning tone (%@) to contact (%@).
%@: Failed to assign tone to contact. %@
adamID
assigneeToneStyle
assignToContactID
assignToPersonID
shouldMakeDefault
shouldMakeDefaultTextTone
transactionID
transactionID != %@
adamID = %llu AND transactionID = %@
UpdateAssetsOperationErrorDomain
%@: Error downloading manifest from URL %@: %@
%@: Error parsing manifest from URL %@: %@
%@: Manifest at URL has no version %@: %@
%@: Version of Manifest at URL is older than cached version. URL %@ fetched manifest version %@ cached manifest version %@
%@: Version of Manifest at URL is older than bundled version. URL %@ fetched manifest version %@ bundled manifest version %@
%@: Error creating assets directory %@: %@
%@: Error creating manifests directory %@: %@
%@: Error copying bundled asset %@. manifest URL %@ manifest version %@ bundled asset version %@ bundled asset file URL %@ asset version %@ asset file URL %@: %@
%@: Error retriving asset %@. manifest URL %@ manifest version %@ asset URL %@ asset version %@ asset file URL %@: %@
%@: Error writing manifest to file URL %@: %@
%@: Invalid asset on manifest %@ %@:  %@
%@: Error creating symbolic link for current manifest %@ -> %@:  %@
[%@]: Unable to load bundled manifest data at url %@
[%@]: Error parsing bundled manifest %@: %@
[%@]: Unknown error parsing bundled manifest %@
[%@]: Bundled manifest at path has a no version %@
ASDJobActivity
com.apple.itunesstored.%@.%p
%@: Cancel operation: %@
%@: Disconnect operation: %@
operationQueue
T@"ISOperationQueue",&
com.apple.itunesstored.RequestQueue.client
PROMPT_REASON_NEW_FINGERS_FORMAT_%@
Mesa
PROMPT_REASON_NEW_FACE_FORMAT_%@
%{public}@: Failed to determine device biometric style for new identity map
PROMPT_REASON_NEW_FINGERS_ANONYMOUS
PROMPT_REASON_NEW_FACE_ANONYMOUS
%{public}@: Failed to determine device biometric style for new anonymous idenitty map
PROMPT_REASON_FACE_GENERIC
PROMPT_REASON_GENERIC
%{public}@: Failed to determine device biometric style for enabling biometrics
%{public}@: Authenticating to opt-in to biometrics.
%{public}@: Auth response was no-op: %{public}@
%{public}@: Auth response returned new account: %{public}@
%@: UpdateTouchIDSettings request completed with status: %@
%@: UpdateTouchIDSettings request failed with status: %@, error: %@
v24@?0q8@"NSError"16
%@: Biometrics enabled and cached for DSID: %@
requiresStoreAuthentication
%@: Restoring mid based download: %lld bundleIdentifier: %@
%@: Restoring MID hard failed with state: %ld download: %lld bundleIdentifier: %@
%@: Restoring data done with state: %ld download: %lld bundleIdentifier: %@
%@: Restoring data (attempt %ld) for software download: %lld / %@
%@: Restoring data with priority = %ld
%@: Skipping data restore after fatal error: %lld / %@
%@: Giving up after %d attempts for download: %lld / %@
%@: Cancelled after %ld attempts for download: %lld / %@
%@: Waiting a bit before retrying after error: %lld / %@
%@: Cannot load manifest for unentitled client: %@
%@: Cannot authorize for unentitled client: %@
%@: Cannot checkin rental for unentitled client: %@
%@: Cannot get purchase history for unentitled client: %@
%@: Could get family circle for unentitled client
%@: Cannot get play info for unentitled client: %@
%@: Cannot get software library for unentitled client
%@: Ignoring purchase intent action from unentitled client: %@
%@: Could discover if there are demoted applications for unentitled client
v24@?0@"LSBundleProxy"8^B16
%@: Cannot invalidate URL bag for unentitled client: %@
%@: Cannot check if application is installed for unentitled client: %@
%@: Cannot check if application is hidden for unentitled client: %@
[%@]: Cannot check if applications are playable for unentitled client: %@
%@: Cannot request keybag for unentitled client: %@
%@: Cannot personalize for unentitled client: %@
%{public}@: Rejecting push notification request from unentitled client: %{public}@
%{public}@: Received request to post push tokens
%@: Rejecting push notification request from unentitled client: %@
%@: Cannot redeem codes for unentitled client: %@
%@: Cannot sync for unentitled client: %@
%@: Ignoring install attribution params from unentitled client: %@
%{public}@: Cannot load storefront country code for unauthorized client
storefrontCountryCode
advancedSearch
%@: Could not do ATB for unentitled client
[%{public}@]: Did not find proxy for bundle id: %{public}@
[%{public}@]: Did not find adam id for bundle id: %{public}@
%@: Cannot show dialog for unentitled client: %@
%@: Cannot show prompt for unentitled client
%@: Cannot set software properties for unentitled client
%@: Cannot collect .har file for unentitled client
value
header
headerIcon
touchIDChallengeSigningDelay
com.apple.itunesstored.DisplayPaymentSheetOperation.dispatchQueue
%{public}@: Should use client-driven upper-casing: %{public}@
%{public}@: Payment sheet failed for no username
Invalid AuthKit context
Username is nil
%{public}@: Failed to configure payment request
%{public}@: Created payment request with requestType: %{public}@
%{public}@: Failed to present payment sheet with error: %{public}@
%{public}@: Completion block with success: %{public}@, error: %{public}@
%{public}@: Failed to load URL bag with error: %{public}@
PKPaymentRequest
PKPaymentSummaryItem
PKPaymentContentItem
%{public}@: Attempted apple-pay-classic but failed for no merchant Session, setting request type to CoF instead
%{public}@: Setting request type to apple-pay-classic
%{public}@: Setting request type to CoF
%{public}@: Configured payment request with requestor: %{public}@, localizedTitle: %{public}@
PKPaymentMerchantSession
%{public}@: Attaching merchant session to payment request
%{public}@: Failed to configure PKPaymentMerchantSession
%{public}@: No merchant session in server response.
%{public}@: Failed to find Apple Pay Classic country code
%{public}@: Failed to find Apple Pay Classic payment networks
%{public}@: Skipping merchant session for incorrect ACL version: %{public}@
%{public}@: Failed to load salable icon image at URL: %{public}@
%{public}@: Found %{public}@ inline images
%{public}@: Fetching server-supplied inline image at URL: %{public}@
%{public}@: Generating client-supplied inline image with rating value: %{public}@
%{public}@: Fetching client-supplied inline image with rating type: %{public}@, name: %{public}@
%{public}@: Failed to fetch rating image for unknown rating image type
v32@?0@"SSPaymentSheetRatingImage"8Q16^B24
%{public}@: No inline images to display
%{public}@: Failed to finalized inline rating image
%@: Array out of bounds warning for tag: %@, index: %@
%{public}@: Failed to load flexList icon image at URL: %{public}@
v32@?0@"NSDictionary"8Q16^B24
useLargeSize
v40@?0@8{_NSRange=QQ}16^B32
v32@?0@"NSString"8Q16^B24
%@ %@
CONFIRMATION_TITLE_PAY
%{public}@: Skipping attributedList for no items
%{public}@: Failed to obtain or format account name
v32@?0@"SSPaymentSheetPriceSectionItem"8Q16^B24
%{public}@: Attempting to create authorization controller
PKPaymentAuthorizationController
%{public}@: Failed to create authorization controller
%{public}@: Attempting to present payment sheet
%{public}@: Failed to present payment sheet
%{public}@: Presented payment sheet
%{public}@: Challenge singing delay disabled
%{public}@: Challenge signing delay value found: %{public}@
%{public}@: No bag key found for challenge signing delay
%{public}@: Bag failed to load for challenge signing delay
%{public}@: Failed to insert metrics event with error: %{public}@
v16@?0@"NSError"8
%{public}@: Failed to flush metrics events with error: %{public}@
%{public}@: Metrics failed with no bag key
%{public}@: Metrics failed with no bag
%{public}@: Begin loading image resource at: %{public}@
%{public}@: Failed to load image resource at: %{public}@, error: %{public}@
%{public}@: Finished loading image resource at: %{public}@
%@: Warning: Attempting to mask image with an unsupported color model: %{public}@
San Francisco
%{public}@: [AUTH] Payment sheet did authorize payment
%{public}@: [AUTH] Did authorize payment with AuthKit
%{public}@: [AUTH] Did authorize payment with A/S/N
%{public}@: [AUTH] AuthKit authorization did fail
%{public}@: [AUTH] Failed to sign challenge with error: %{public}@
%{public}@: [AUTH] Failed to sign challenge
%{public}@: [AUTH] Cancelation detected before challenge was signed
%{public}@: [AUTH] Signed challenge successfully
PKPaymentAuthorizationResult
%{public}@: [AUTH] Saving payment token
%{public}@: [AUTH] Skipping payment token
%{public}@: [AUTH] Unknown error occured when authorizing payment
%{public}@: Payment sheet did finish
%{public}@: Did encounter authorization event: %{public}@
%{public}@: Payment sheet will finish with error: %{public}@
T@"NSNumber",C,V_accountIdentifier
T@"NSString",C,V_accountName
T@"AKAppleIDAuthenticationContext",&,V_authenticationContext
challenge
T@"NSData",C,V_challenge
touchIDDelayEnabled
TB,V_touchIDDelayEnabled
containerCompletionHandler
T@?,C,V_containerCompletionHandler
completionHandler
T@?,C,V_completionHandler
completionHandlerForAutoEnrollment
T@?,C,V_completionHandlerForAutoEnrollment
dialogId
T@"NSString",C,V_dialogId
localAuthOptions
T@"NSDictionary",C,V_localAuthOptions
localAuthAccessControlRef
T^{__SecAccessControl=},V_localAuthAccessControlRef
localAuthContext
T@"LAContext",&,V_localAuthContext
paymentSheet
T@"SSPaymentSheet",R
%@: Invalid url request
%@: Running for manifest format: %ld
%@: Finished with %lu valid downloads, %lu invalid downloads
%@: Could not parse manifest data
%@: User cancelled manifest confirmation
%@: Processing %lu downloads from an external manifest request
external manifest
%@: Request failed with error: %@
[ERROR]: Cannot load non-https manifest URL: %@
external
CONFIRM_MANIFEST_DOWNLOADS_%@_%ld
CONFIRM_MANIFEST_DOWNLOAD_SPECIFIC_%@_%@
CONFIRM_MANIFEST_DOWNLOAD_GENERIC_%@
CONFIRM_MANIFEST_CANCEL
CONFIRM_MANIFEST_INSTALL
Could not load download manifest with underlying error: %@
DOWNLOAD_MANIFEST_SSL_ERROR_%@
DOWNLOAD_MANIFEST_ERROR_FORMAT_%@
manifestFormat
shouldHideUserPrompts
URLRequest
T@"NSURLRequest",C
manifest
T@"ExternalDownloadManifest",R
manifestResponse
T@"SSDownloadManifestResponse",R
v32@?0@"SSMemoryEntity"8Q16^B24
DownloaderID
FamilyID
PurchaserID
sourceApp
variantID
ITunesMetadataDestinationPath
storeMetadata
T@"StoreDownload",&,N,V_storeMetadata
mediaAsset
T@"FinishDownloadAssetMemoryEntity",R,N,V_mediaAsset
secondaryAssets
T@"NSArray",R,N,V_secondaryAssets
artistName
artworkTemplateName
collectionName
deviceBasedVPP
TB,R,N,GisDeviceBasedVPP
documentTargetIdentifier
downloadPermalink
durationInMilliseconds
genreName
hasRestoreData
libraryItemIdentifier
T@,R,N
TB,R,N,GisHLS
podcastDownload
TB,R,N,GisPodcastDownload
rentalDownload
TB,R,N,GisRentalDownload
restoreDownload
TB,R,N,GisRestoreDownload
restoreState
sampleDownload
TB,R,N,GisSampleDownload
storeAccountIdentifier
storeAccountName
storeCollectionIdentifier
sharedDownload
TB,R,N,GisSharedDownload
TB,R,N,GisStoreDownload
storeItemIdentifier
storePublicationVersion
storeSagaIdentifier
storeTransactionIdentifier
storeXID
tvTemplate
TB,R,N,GisTvTemplate
Found nil parameter when creating SKPaymentDiscount
T@"NSString",R,C,N,V_identifier
keyIdentifier
T@"NSString",R,C,N,V_keyIdentifier
nonce
T@"NSUUID",R,C,N,V_nonce
signature
T@"NSString",R,C,N,V_signature
T@"NSNumber",R,C,N,V_timestamp
CREATE TABLE IF NOT EXISTS promoted_iaps_visibility_table (product_id TEXT, bundle_id TEXT, visibility INTEGER, pid INTEGER PRIMARY KEY);
CREATE TABLE IF NOT EXISTS promoted_iaps_order_table (product_id TEXT, bundle_id TEXT, iap_order INTEGER, pid INTEGER PRIMARY KEY);
[%{public}@] No Promoted IAP Database migration function for %li => %li
[%{public}@] Failed updating Promoted IAP Database to version %li
promoted_iaps.sqlitedb
Caches
PromotedIAPs.sqlitedb
-shm
-wal
PRAGMA legacy_file_format = 0;
PRAGMA journal_mode = WAL;
metadata
bundle-identifier
User
%@: Skipping download and install of: %@
invalidDownloads
validDownloads
%@: Fixing file permissions for %@
%@: Could not get sub-paths of %@: %@
%@: Could not stat %@: %s
%@: Could not set file attributes for file: %@, error: %@
extractCPIO
extractPKZip
%@: Extracting %s to %s
%@: BOMCopier failed with error: %d
destinationFilePath
T@"NSString",&,V_destinationFilePath
fileAttributes
T@"NSDictionary",C,V_fileAttributes
sourceFilePath
T@"NSString",&,V_sourceFilePath
sourceFileType
Ti,V_sourceFileType
%@: Fatal error: %s
%@: Fatal file error: %d: %s
%@: File conflict error: %s
%@: File error: %d: %s
%@: Checking eligibility for %ld demoted apps
%@: Fallback appleID from is %@
%@: Fallback accountID is %@
%@: Could not restore ineligible app: %@, error: %@
%@: Found %ld eligible restore item(s) for %ld account(s)
%@: Running operation for %ld items, account: %@
%@: Restore for account: %@, failed with error: %@
v32@?0@"NSNumber"8@"NSArray"16^B24
v32@?0@"StoreDownload"8Q16^B24
bundleID
%@: Received zero downloads with error: %@, for apps: %@
%@: No download for app: %@, error: %@
%@: Added download: %lld for app: %@
appleId
com.apple.itunes.DemotedApplicationsRestoredNotification
%@: Can't perform request with no accountID
push-notification-types
remove-push-notification-type-url
add-push-notification-type-url
%@: Unknown request type: %ld
%@: Can't perform request with no URL
%@: Waiting for token register for environment: %@, URL: %@
%@: Performing push notification request: %@
FairPlayDecryptFileOperation.m
Must have a path and DPInfo
%@: Could not begin decrypt
%@: Running decrypt %@
%@: Decrypt failed [%@]
%@: Failed with reason: %@
DRMFree
TB,R,GisDRMFree
pinfsArray
T@"SinfsArray",R
sinfsArray
dpInfo
pinf
sinf
p2-in-app-download-queue-check-interval
%@: Throttling queue check for client: %@
%@: Running %@ request: %@
%@: Server claims %@ items for %@
queueItemCount
Tq,V_queueItemCount
T@"NSDate",&,V_lastQueueCheckDate
request
T@"MicroPaymentQueueRequest",C,V_request
URLBagKey
T@"NSString",&,V_urlBagKey
%@: (%@, user: %@, range: [%@,%@])
URLBagType
usesSoftwareMap
TB,R
rangeEndIdentifier
rangeStartIdentifier
p2-in-app-check-download-queue
p2-in-app-pending-transactions
p2-in-app-check-recurring-download-queue
p2-in-app-recurring-transactions
%@: Fetched %lu total payments
paymentsResponse
T@"MicroPaymentQueueResponse",&,V_paymentsResponse
T@"NSDate",C
Tq,V_reason
userDSIDs
T@"NSArray",C,V_userDSIDs
%@: Received invalid response
%@: Fetched %lu payments for %@
T@"MicroPaymentQueueResponse",&,V_response
T@"NSString",&,N,V_productIdentifier
productName
T@"NSString",&,N,V_productName
appBundleId
T@"NSString",&,N,V_appBundleId
appName
T@"NSString",&,N,V_appName
T@"NSNumber",&,N,V_timestamp
expectedCount
Tq,V_expectedCount
queueCountURLBagKey
T@"NSString",&,V_queueCountURLBagKey
queuePaymentsURLBagKey
T@"NSString",&,V_queuePaymentsURLBagKey
kTonePurchasedKey
kToneSyncIdentifierKey
kToneGloballyUniqueIdentifierKey
kToneStoreItemIdentifierKey
kToneStoreFrontIdentifierKey
kToneAlbumKey
kToneArtistKey
kToneGenreKey
kToneTitleKey
kToneDurationKey
kToneMediaKindAlertTone
kToneMediaKindRingtone
kToneMediaKindKey
%{public}@: Successfully imported tone into Tone Library: "%{public}@". Finalizing with tone identifier: "%{public}@".
%{public}@: Tone import was skipped because it was a duplicate entry: "%{public}@". Finalizing with tone identifier: "%{public}@".
%{public}@: Tone import failed unexpectedly. This seems to be a transient failure, so rolling back asset: "%{public}@".
PersistentStore.m
Must provide a configuration
itunesstored.store-context.%d
itunesstored.store-count.%d
%@: Checking integrity with cookie: %@
%@: Found integrity cookie, reloading store coordinator
%@: Could not load old model for migration
%@: Could not create inferred mapping model: %@
migrated
%@: Performing lightweight migration for %@
%@: Could not migrate: %@
%@: Could not move migrated store: %@
%@: Destroy persistent store: %@
%@: Moving %@ to %@
%@: Could not load model
%@: Could not create directory for file: %@
%@: Loading persistent store: %@
%@: Detected incompatible model, attempting migration
%@: Could not add persistent store: %@
%@: Loading model: %@
%@: Could not load model: %@
integrity_check
NSStoreModelVersionHashes
configuration
T@"PersistentStoreConfiguration",R
databaseFileURL
T@"NSURL",R
modelFileURL
itunesstored_private.sqlitedb
itunesstored_private
itunesstored_private.2.0
itunesstored_private.momd
itunesstored2.sqlitedb
itunesstored
itunesstored.2.0
itunesstored.3.0
itunesstored.4.0
itunesstored.5
itunesstored.6
itunesstored.7
itunesstored.7.1
itunesstored.8
itunesstored.8.1
itunesstored.8.3
itunesstored.10.3
itunesstored.momd
cookie
databaseFileName
T@"NSString",&,N,V_databaseFileName
integrityCookieFileName
legacyModelVersionIdentifiers
T@"NSArray",C,N,V_legacyModelVersionIdentifiers
modelFileName
T@"NSString",&,N,V_modelFileName
storeType
Ti,N,V_storeType
%@: Fetching subscription entitlements from the server.
fsEntitlementsSrv
status
errorNumber
errorMessage
entitlements
T@"NSString",C,V_clientIdentifier
ignoreCaches
TB,V_ignoreCaches
subscriptionEntitlementsBlock
T@?,C,V_subscriptionEntitlementsBlock
v20@?0@"NSError"8B16
SZExtractorErrorDomain
v24@?0Q8@"NSError"16
SZExtractor
%@: Can't calculate usage if no path given
%@: Failed to open directory %@: %s
%@: getattrlistbulk on entry %llu in %@ returned error %s
%@: Got error %s while processing entry %llu in %@
%@: Failed to get name for directory item %llu in %@; not counting its children
%@: Failed to create path to child directory by appending "%s" to %@
%@: Skipping empty directory at %@/%s
%@: Skipping hardlinked file at %@/%s
%@: Could not generate request body: %@
get-play-info
%@: Fetching play info
content-id
%@: Could not get key identifier: %@
rental-ids
key-ids
subPlayType
player-guid
%@: Could not get DSID: %@
%@: Received failure status code: %@
play-info
playInfoContext
T@"SSPlayInfoRequestContext",R
playInfoResponse
T@"SSPlayInfoResponse",R
refetch
%@: Importing %lu keybag bytes
%@: Failing authorization: could not get kbsync
authorizeMachine
X-FM-Dsid
%@: Missing account for authorize
%@: Needs authentication for account: %@ token error: %@
%@: Failing silent request needing authentication for account: %@
%{public}@: Performing authentication.
%@: Authorizing with token: %@, authentication: %d
%@: Could not encode plist: %@
familyMemberAccountIdentifier
allowSilentAuthentication
authorizationToken
T@,C
keybagPath
shouldAddKeysToKeyBag
shouldPromptForCredentials
com.apple.itunesstore.PushNotificationController
push-notifications
environment
com.apple.itunesstored.PushNotificationController
com.apple.itunesstored.PushNotificationController.notify
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
APNS_Sounds
%@: Could not post client notification, no client: %@
%@: Posting notification to client: %@
%@: Could not launch client application: %@
%{public}@: Posting push tokens
v16@?0@"XPCClient"8
%@: Register client: %@
%@: Received unregister for unknown client: %@
%@: Unregister client: %@
%@: Environment token changed: %@
%@: Received push notification: %@: %@
%@: Ignoring push notification while disabled
%@: Ignoring push notification for inactive account: %@
%@: Ignoring push notification for unregistered client: %@
%@: The device's name changed. Sending the new name to the server.
clientIdentifier=%@
%@: Could not fetch clients: %@
%@: Deleting environment: %@
%@: Destroying connection for %@
environmentName = %@
%@: Could not fetch environments: %@
%@: Firing %ld register blocks
%@: Reloading APS connections
%@: Could not fetch environment entities: %@
%@: Reloading APS connections for %lu environments
%@: Creating connection for environment: %@
com.apple.itunesstored.aps
com.apple.itunesstored.aps.dev
client=%@
%@: Client has %ld pending notifications: %@
%{public}@: Unable to post token because push is not enabled (%ld)
%{public}@: Forcing the token request due to stored value
(tokenData != nil) AND (lastAccountIdentifier != %@)
%@: Could not fetch environments to post: %@
%{public}@: Posting %lu environment tokens. Forced: %d
%{public}@: Unable to post tokens in context. Push not enabled.
%@: Environment is now %@
environmentName != %@
%{public}@: Unable to add environment -- environment is nil
%@: Adding APS client for itunesstored
%@: Removing APS client for itunesstored
%@: Push enabledness changed: %ld
ShouldForcePushTokenRequest
%@: Posted token for %@ for account %@
%{public}@: Updated push state to %ld -- no active account
%{public}@: Updated push state to %ld -- no production bag
%{public}@: Updated push state to %ld
block
T@?,C,N,V_block
environmentName
T@"NSString",C,N,V_environmentName
PushNotificationClient
notifications
T@"NSArray",C,D,N
account-flags
trustedDomains
appleMusicDeviceOfferDeepLink
iCloudDeviceOfferDeepLink
apsEnabledPatterns
T@"AMSBagValue",R,N
apsSamplingPercent
apsAllowedProductTypes
guidRegexes
guidSchemes
mescalContract
T@"<AMSMescalBagContract>",R,N
storefrontSuffix
TLSSamplingPercentage
TLSSamplingSessionDuration
TFOSamplingPercentage
TFOSamplingSessionDuration
metricsContract
T@"<AMSMetricsBagContract>",R,N
metricsURL
accountFlagsURL
com.apple.itunesstore.PipelineDownloadTaskState
com.apple.itunesstore.PipelineDownloadTaskState.persistKeys
fps-cert
fps-request
%@: Adding media item to iPod library: %@
libraryItem
T@"IPodLibraryItem",R,N,V_libraryItem
rentalIdentifier
Tq,R,N,V_rentalIdentifier
Tq,R,N,V_storeItemIdentifier
T@"<DownloadAssetFairPlayStreamingKeyLoaderDelegate>",W,V_delegate
Tq,R,V_downloadIdentifier
com.apple.itunesstored.WatchMetricsController
com.apple.itunesstored.watch-metrics-publish
v24@?0@"NSString"8@"NSObject<OS_xpc_object>"16
[%@] Setting task observer: %@
[%@] Insert Watch Metrics Event received through XPC: requested by [%@]
[%@] Ignoring request to run report - already running
AllowAutoDownloadOnCellular
LastWatchMetricsTime
[%@] Not scheduling because report is running
[%@] Connection refused because entitlements are missing
PushNotification
T@"PushNotificationClient",&,D,N
userInfo
T@"NSData",C,D,N
sound-files
%@: Sound file expires in %.2f seconds
%@: Downloading sound file %@ to %@
%@: Cache sound file expiring in %.2f seconds
%@: Loading %lu sound files
name
%@: Removing %lu dead sound files
com.apple.itunesstored.APNS_Sounds_Cache
PushNotificationEnvironment
lastAccountIdentifier
tokenData
%@: Environment name mismatch, skipping token POST
register-success
%@: No URL for %@
%@: No token to push
%{public}@: Posting APS token for %{public}@. Token: %@
token
device-name-data
serial-number
PushNotificationDisplayOperation.m
Must provide user info
[%@]: Ignoring notification: no matching client: %@
[%@]: Ignoring notification: no handler for URL: %@
[%@]: Ignoring notification: invalid client ID
[%@]: Display notification with enabled types: %@ => %ld
com.apple.AppStore
com.apple.iBooks
com.apple.MobileStore
com.apple.appstore
[%@]: Posted bulletin request complete with result: %d error: %@
CANCEL
v16@?0Q8
%{public}@: Received a push notification to update an account's account flags.
%{public}@: Unable to update an account's account flags. No account exists with the specified DSID, %{public}@.
accountFlags
com.apple.itunesstored.PlaybackLeaseDidEnd
[%@]: Finish delayed goto for identifier: %@
%{public}@: Received a push notification to update an account's privacy acknowledgement.
%{public}@: Unable to update an account's privacy acknowledgement. No account exists with the specified DSID, %{public}@.
privacyAcknowledgement
%{public}@: Unable to update an account's privacy acknowledgement. The value for 'privacyAcknowledgement' in the push notification is nil.
%{public}@: Updating an account's privacy acknowledgement. account = %{public}@ | newPrivacyAcknowledgement = %{public}@
%{public}@: Failed to save the account after updating its privacyAcknowledgement. error = %{public}@
v28@?0@"SSVSubscriptionStatus"8B16@"NSError"20
com.apple.itunesstored.mediacontenttastechangednotification
%{public}@: Resume buy failed to parse accountIdentifier
%{public}@: Resume buy failed to parse buyParams
%{public}@: Attempting to resume buy
%{public}@: Resume buy failed for invalid notification arguments
%{public}@: Setting account credits. Saving %{public}@.
APRequestHandler
notificationUserInfo
requiresClientIdentifier
TB,N,V_allowsBootstrapCellularData
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_bundleVersion
environmentType
Tq,N,V_environmentType
TB,N,V_hidesConfirmationDialogs
TB,N,V_ignoresInAppPurchaseRestriction
T@"NSString",C,N,V_receiptDirectoryPath
TB,N,V_requiresAuthenticationForPayment
storeExternalVersion
T@"NSNumber",C,N,V_storeExternalVersion
T@"NSNumber",C,N,V_storeItemIdentifier
automatic-downloads2
automatic-downloads
discovery-prompt
configurations
media-types
downloads-url
register-media-types
enabled-media-types
DirtyAutoDownloadKinds
%@: Skipping since kinds are no longer dirty
SetAutomaticDownloadKindsOperation
%@: Filtered download kinds: %@ => %@
%@: Setting automatic download kinds: %@
%@: Received invalid status: %@
%@: Rolling back automatic download kinds after fatal error: %@
downloadKinds
previousDownloadKinds
runsOnlyIfKindsAreDirty
shouldSuppressServerDialogs
IPodLibraryItem
T@"IPodLibraryItem",R
insertedItemPersistentIdentifier
%@: Prompt does not need display: %@
%@: No operation for prompt identifier: %@
%@: Showing prompt for prompt identifier: %@
promptIdentifier
fsEntitlementsRefreshIntervalInSeconds
%@: Cached subscription entitlements have expired.
%@: Returning cached subscription entitlements.
%@: Marking the cached subscription entitlements as expired.
%@: Caching subscription entitlements.
%@: Clearing cached subscription entitlements.
%@: Failed to read the subscription entitlements from disk. %@
SubscriptionEntitlements_v2.plist
%@: Unable to determine the path of the cached subscription entitlements.
%@: Failed to write the subscription entitlements to disk. %@
CheckinRentalOperation.m
%@: Could not generate checkin request body
%@: Could not generate checkin ack request body
checkin-ack-sar
checkin-sar
rental-checkin
%@: Checking in rental
rental-ack-checkin
%@: Acking rental checkin
XPCClientApplicationStateDidChangeNotification
XPCClientDisconnectNotification
newsstand-content
com.apple.lowtide
com.apple.springboard
com.apple.itunesstored.XPCClient
v16@?0@"NSNotification"8
com.apple.itunesstored.xpcclient
%@: Began background task (%d, %@): %@
%@: Ending background task: %@
com.apple.itunesstored.XPCClient.block
%@: %@
%@: Application state for %@ changed to "%@"
UIBackgroundModes
UINewsstandApp
_applicationState
TI,R,N
_clientType
appleSigned
TB,R,GisAppleSigned
applicationState
TI,R
auditTokenData
canReceiveMessages
clientVersion
clientType
hasEntitlements
newsstandApp
TB,R,GisNewsstandApp
betaApp
TB,R,GisBetaApp
adHocCodeSigned
TB,R,GisAdHocCodeSigned
processIdentifier
Ti,R
outputConnection
T@"SSXPCConnection",R
invalidationBlock
T@?,R,N
processAssertion
T@"BKSProcessAssertion",R,N
downloadKey
[%@] Using HTTPBodyDataFilePath: %@
[%@] HTTPBodyDataFilePath is present but does not exist on disk: %@
asset_order
avfoundation_blocked
bytes_total
destination_url
download_token
dpinfo_data
uncompressed_size
file_protection
hash_array
hash_type
body_data
body_data_file_path
http_headers
http_method
initial_odr_size
is_discretionary
is_downloaded
is_drm_free
is_external
is_local_cache_server
is_zip_streamable
local_path
service_type
bytes_to_hash
path_extension
processing_types
protection_type
request_parameters
server_guid
sinfs_data
store_flavor
asset_type
url_session_task_id
video_dimensions
IFNULL(asset.blocked_reason, 0)
IFNULL(asset.local_path, ITSDGetAssetPath(asset.download_id, asset.ROWID))
external_target
facebook
twitter
access_token
page_access_token
page_id
post_id
%@: Client '%@' cannot access kind: %@
%@: Could not create import download for client download
%@: Performing newsstand migration for client: %@
PrivateDownloadKinds
%@: Client "%@" not entitled for download kinds: %@
persistenceIdentifier
prefetchedDownloadExternalProperties
prefetchedDownloadProperties
shouldFilterExternalDownloads
trnsaction
failed
com.apple.itunesstore.StoreDownloadQueue
StoreAutomaticDownloadConstraintsChangedNotification
account-change
trigger-download
other
cancel-retry
com.apple.tv
com.apple.videos
com.apple.itunesstored.StoreDownloadQueue
[%@]: Ignoring automatic download queue check: no account
[%@]: Ignoring automatic download queue check: disabled
[%@]: No enabled automatic download kinds - syncing with the server
[%@]: Synchronize automatic kinds back with:  [%@]
Books
bl_use_ams
%{public}@: Unable to set automatic download kinds because there's no active iTunes account.
%@: Committing automatic download kinds: %@
%{public}@: Failed to save the active account after setting automatic download kinds. error = %{public}@
%@: disabling automatic download for reason: %@
%@: enabling automatic download for reason: %@
%@: Skipping software download restore for downloadID: %@ since appstored will pick it up
%@: Checking download queues at client request
union
minus
%@: Checking download queues for trigger-downloads
%@: Resending dirty automatic download kinds
%@: Loading %lu queues with reason: %@
%@: Checking %lu queues with reason: %@
[%@]: Checking automatic download queue
[%@]: Skipping software download: %@
[%@]: Skipping video download: %@
B16@?0@"PurchaseDownloadsTransaction"8
MCFeatureTVAllowed
%@: Remove placeholder after queue check: %lld
%@: Deleting all %lu downloads for request: %@
%@: Fetching queue contents: count changed
%@: Skipping load contents: count has not changed
auto download queue
%@: Retrying all canceled restore downloads
%@: Retrying all soft-failed restore downloads
downloadKindsBeingChecked
automaticDownloadKinds
T@"NSSet",C,N
enabledDownloadKinds
T@"NSSet",R,N
CarrierBundlingEligibilityErrorDomain
errorCode
fuseCarrierBundleStatus
checkBack
startFuseHeaderEnrichment
startFuseManualSms
hasFuseCarrierBundleSubscription
fuseHeaderEnrichmentMessage
fuseHeaderEnrichmentSessionId
fuseHeaderEnrichmentUrl
fuseSilentSMSMessage
fuseSilentSMSNumber
fuseSmsSessionId
waitTime
isFamily
bundlingStatus
Tq,N,V_bundlingStatus
familySubscription
TB,R,N,GisFamilySubscription,V_familySubscription
T@"NSError",R,N,V_error
SMSSessionIdentifier
T@"NSString",R,N,V_smsSessionIdentifier
delayInterval
Td,R,N,V_delayInterval
wantsDelayedRetry
TB,R,N,V_wantsDelayedRetry
headerEnrichmentMessage
T@"NSString",R,N,V_headerEnrichmentMessage
headerEnrichmentSessionIdentifier
T@"NSString",R,N,V_headerEnrichmentSessionIdentifier
headerEnrichmentURL
T@"NSURL",R,N,V_headerEnrichmentURL
needsHeaderEnrichment
TB,R,N,V_needsHeaderEnrichment
needsSilentSMS
TB,R,N,V_needsSilentSMS
silentSMSMessage
T@"NSString",R,N,V_silentSMSMessage
silentSMSNumber
T@"NSString",R,N,V_silentSMSNumber
%@: %@ / %@
pendingApps
pendingBooks
pendingSongs
checkAppQueue
checkBookQueue
check-download-queue
T@"NSNumber",&,N,V_accountIdentifier
cancelsDuplicateDownloads
TB,N,V_cancelsDuplicateDownloads
purchaseIdentifier
Tq,N,V_purchaseIdentifier
queueIdentifier
T@"NSString",C,N,V_queueIdentifier
queueContentsURLBagKey
T@"NSString",C,N,V_reason
v32@?0@8@16^B24
apps
books
media
com.apple.itunesstored.UpdateMigrator
[%@]: Migrating iTunes data.
[%@]: Upgrade Migration
[%@]: Restore From Backup Migration
[%@]: Migrate from Different Device Migration
[%@]: Queued demoted app restore for bundleIDs: %@
[%@]: Network Changed
[%@]: Loading Bag Prior to migration
[%@]: Unable to load bag, but attempting migration anyway: %@
[%@]: Running checks after adding first migration.
[%@]: Wating for network to migrate store data.
[%@]: Waiting for checks to complete.
[%@]: Restoring all demoted applications
[%@]: Restoring demoted applications with bundle identifiers: %@
operationType
requestingOfflineSlot
TB,GisRequestingOfflineSlot
T@"SSVSubscriptionResponse",R,C
%@: File not readable for upload: %lld, URL: %@
%@: Missing account for upload: %lld
%@: Preparing upload: %lld with request URL: %@
.cell
RP.AudioCoverArt
X-Apple-Upload-Validation-RuleSets
com.apple.coreaudio-format
audio/x-caf
X-Original-Filename
directUploaderRichPostAudio
directUploaderRichPostImage
directUploaderRichPostVideo
ISDirectUploadURL
%@: Using base URL from user defaults: %@
upload/rich-post-audio
upload/rich-post-image
upload/rich-post-video
outputBlock
Reason
itunesstored app demotion functionality has moved to appstored
fairplay:sData
sinfData
T@"NSData",R,N,V_sinfData
matched-status
redownloaded-status
%@: %llu / %@
[%@]: Enumerating delta packages for: %@
[%@]: Found delta package for: %@
[%@]: Delta had no assets for: %@
local-server-info
[%@]: Found version match for %@: %@ -> %@
[%@]: Found variant match for %@: %@ -> %@
assets
matchedStatus
redownloadedStatus
purchaserAccountIdentifier
downloaderAccountIdentifier
familyAccountIdentifier
[ApplicationWorkspace]: Installing software package with bundleID: %@: bundleVersion: %@ path: %@
[ApplicationWorkspace]: Failed to install application: %@; %@; %@
Error
%@: Succeeded in installing application: %@ -- %@
%@: No receipt data For: %@
%@: Failed to write receipt for %@
%@: Could not create writable metadata
%@: Could not serialize metadata: %@
CFBundleIdentifier
softwareProperties
T@"SoftwareProperties",R
appReceiptData
T@"NSData",C,N,V_appReceiptData
artworkData
T@"NSData",C,N,V_artworkData
installType
T@"NSNumber",C,N,V_installType
ITunesMetadata
T@"NSDictionary",C,N,V_iTunesMetadata
isFromStore
TB,N,V_isFromStore
newsstandArtworkData
T@"NSData",C,N,V_newsstandArtworkData
packagePath
T@"NSString",C,N,V_packagePath
scratchDirectory
T@"NSString",C,N,V_scratchDirectory
T@"NSData",C,N,V_sinfData
transitMapData
T@"NSData",C,N,V_transitMapData
v24@?0@"CarrierBundlingEligibilityResponse"8@"NSError"16
fuseHeaderEnrichmentResponse
application/json
responseMessage
sessionId
deepLink
carrier
IMEI
responseCode
error-domain
error-code
error-title
error-message
error-underlying
ValidateMobile
SOAPAction
InternalBuild
ISHeaderEnrichmentAllowsWiFi
text/xml; charset=utf-8
%@: Sending header enrichment request
HTTP/1.1
%@: Performing delayed retry: still need header enrichment
fuseHeaderEnrichment
%@: Loaded bag successfully, but no enrichment URL found. Assuming carrier bundle status not eligible.
phoneNumber
%@: Running preflight operation
%@: Silent SMS succeeded
%@: Silent SMS failed
%@: Performing delayed retry: still need silent SMS
TB,GisDeepLink
cellularProviderName
eligibilityResponse
T@"CarrierBundlingEligibilityResponse",R
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
songDownloadDone
songId
download-id
%@: Finishing %ld downloads
finishedDownloadPredicate
T@"SSSQLitePredicate",R
T@"NSNumber",&,N,V_pid
[%{public}@] Fatal Error: Failed to create the database schema
DELETE FROM purchase_intents_table WHERE app_bundle_id = ?;
B16@?0@"PurchaseActionsDatabaseTransaction"8
SELECT * FROM purchase_intents_table WHERE app_bundle_id = ?;
INSERT OR REPLACE INTO purchase_intents_table (product_identifier, app_bundle_id, timestamp, product_name, app_name) VALUES (?, ?, ?, ?, ?);
(?, ?, ?, ?, ?, ?), 
INSERT OR REPLACE INTO purchase_intents_table (product_identifier, app_bundle_id, timestamp, pid, product_name, app_name) VALUES %@;
[%{public}@]: Trying to insert a nil install attribution param
INSERT OR REPLACE INTO install_attribution_params_table (app_adam_id, ad_network_id, campaign_id, impression_id, timestamp, attribution_signature, local_timestamp) VALUES (?, ?, ?, ?, ?, ?, ?);
[%{public}@]: Trying to get install attribution param for a nil adamId
SELECT * FROM install_attribution_params_table WHERE app_adam_id = ?;
[%{public}@]: Trying to remove install attribution param for a nil adamId
DELETE FROM install_attribution_params_table WHERE app_adam_id = ?;
[%{public}@]: Trying to remove install attribution params before a nil date
DELETE FROM install_attribution_params_table WHERE local_timestamp < ?;
[%{public}@]: Trying to insert a nil install attribution pingback
INSERT INTO install_attribution_pingback_table (app_adam_id, ad_network_id, campaign_id, transaction_id, attribution_signature, pingback_url, pending, retry_count, local_timestamp) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
[%{public}@]: Trying to get install attribution pingback for a nil adamId
SELECT * FROM install_attribution_pingback_table WHERE app_adam_id = ?;
[%{public}@]: Trying to set pending = 1 on install attribution pingback for a nil adamId
UPDATE install_attribution_pingback_table SET pending = 1 WHERE app_adam_id = ?;
SELECT * FROM install_attribution_pingback_table WHERE pending = 1;
[%{public}@]: Trying to remove install attribution pingbacks for a nil adamId
DELETE FROM install_attribution_pingback_table WHERE app_adam_id = ?;
[%{public}@]: Trying to remove non pending install attribution pingbacks before a nil date
DELETE FROM install_attribution_pingback_table WHERE local_timestamp < ? AND pending = 0;
[%{public}@]: Trying to increment install attribution pingback retry count on a nil adamId
UPDATE install_attribution_pingback_table SET retry_count = retry_count + 1 WHERE app_adam_id = ?;
finished_download
finish_url
thumbnail
%@: Using cached thumbnail for download: %lld
%@: Loading thumbnail from URL: %@
file
%@: Could not load artwork file: %@: %@
com.apple.itunesstored.AccountPasswordSettings
%{public}@: Setting an account's password settings. Saving %{public}@.
%{public}@: Creating an ServerAuthenticationOperation. callStack = %{public}@
%{public}@: User picked non-actionable button
[%{public}@]: [%{public}@] Performing authentication. redirectURL = %{public}@.
%{public}@: Could not authenticate. error = %@
serverDialog
createSession
%{public}@: Appending server-driven title: %{public}@
%{public}@: Appending server-driven reason: %{public}@
%{public}@: Appending server-driven buy button label: %{public}@
signup
%{public}@: Performing default action instead of redirecting
Password
%{public}@: Skipping explanation because of password default
%{public}@: Skipping explanation as strings are empty
%{public}@: [%{public}@] Skipping explanation because of consolidated auth dialogs
%{public}@: Skipping dialog because we are authenticated and not forced
T@"ISDialog",R,V_dialog
T@"SSAuthenticationContext",C,V_authenticationContext
performsButtonAction
TB,V_performsButtonAction
authenticatedAccountCredentialSource
TQ,V_authenticatedAccountCredentialSource
authenticatedAccountDSID
T@"NSNumber",R,V_authenticatedAccountDSID
performedButton
T@"ISDialogButton",R,V_performedButton
T@"NSURL",R,V_redirectURL
selectedButton
T@"ISDialogButton",R,V_selectedButton
%@: Remove successful '%d' of media file for persistent download: %@
%@: Finishing persistent download: %@
%@: Pruned orphaned persistent download [%lld, %@, %@]
%@: Pruned orphaned download: %@
persistent_manager
manager_id
persistent_download
persistent_manager_kind
filters_external_downloads
migration_version
persistence_id
wake_up_on_finish
download_kind
action
download-manifest
redeem-codes
code
adkit-product-url
addItemsToWishlistBaseUrl
NetworkRequestQueueSubscriptionStatusAccessQueue
%@: Cannot get match status for unentitled client: %@
%{public}@: Cannot disable automatic download kinds for unentitled client. client = %{public}@
%@: Deny unentitled client: %@
%@: Cannot install items for unentitled client: %@
pendingRentals
count
%@: Cannot import item for unentitled client: %@
%@: Cannot load cloud service capabilities for unauthorized client
com.apple.itunesstored.privacy-acknowledged
v24@?0@"SSVCloudServiceCapabilitiesResponse"8@"NSError"16
v24@?0@"SSVSubscriptionEntitlements"8@"NSError"16
%@: Sending managed application request from client: %@ for itemID: %@
%@: App Store daemon responded to managed application request for itemID: %@ result: %d changeType: %ld
v36@?0B8@"NSDictionary"12q20@"NSError"28
[%@] Managed application request requires an itemIdentifier
%@: Cannot kbsync for unentitled client: %@
%@: Cannot load URL bag for unentitled client
%@: Cannot lookup items for unentitled client: %@
%@: Cannot lookup for unentitled client: %@
com.apple.Health
%@: Cannot perform migration for unentitled client: %@
[%@]: Scheduling AppStore Migrator
ASDMigrationRequestOptions
ASDMigrationRequest
[%@]: AppStore Migrator scheduled: %@
%@: Cannot show web view for unentitled client: %@
%@: Cannot read item for unentitled client: %@
%@: Cannot repair items for unentitled client: %@
[%@]: Repair request account DSID: %@ and bundleID %@
[%@]: Repair complete for bundleID: %@ result: %d changedBundleIdentifiers: [%@]
%@: Cannot load URL for unentitled client: %@
%@: Cannot demote unentitled client: %@
%@: Cannot load storefront identifier for unauthorized client
%@: Cannot fetch api token for unauthorized client
v16@?0@"SSVCloudServiceAPITokenResponse"8
%{public}@: Silent enrollment XPC failed for no entitlements: %{public}@
NetworkRequestQueue: Silent enrollment failed to parse server response
%{public}@: Cannot authenticate for unentitled client: %{public}@
v24@?0@"SSAuthenticateResponse"8@"NSError"16
%@: Cannot authenticate for unentitled client: %@
v24@?0@"SSVMediaContentTasteUpdateResponse"8@"NSError"16
%@: Cannot add wishlist items for unentitled client: %@
%@: Cannot change subscription for unentitled client: %@
v24@?0@"NSString"8@"NSString"16
%@: Loading %lu download manifests from URL
ASDExternalManifestRequestOptions
ASDExternalManifestRequest
%@: Download manifest installation is restricted
%@: Redeeming %lu codes from URL
%@: Received unknown action: %@
ERROR: SubscriptionStatusOperation dequeued: %@ where currentSubscriptiontStatusOperation = %@
com.apple.itunesstored.MediaSocialAuthenticationCoordinator
com.apple.storeservices
MEDIA_SOCIAL_ENTER_PASSWORD_FORMAT_%@
MediaSocial
MEDIA_SOCIAL_ENTER_PASSWORD_NO_ACCOUNT
T@"<MediaSocialAuthenticationDelegate>",W,N,V_delegate
finished
TB,R,N,GisFinished
authenticateResponse
T@"SSAuthenticateResponse",&,N,V_authenticateResponse
postIdentifiers
T@"NSOrderedSet",C,N,V_postIdentifiers
uploadIdentifiers
T@"NSOrderedSet",C,N,V_uploadIdentifiers
com.apple.itunesstored.IPodLibrary
%@: Deleting all OTA tracks
B16@?0@"ML3DatabaseConnection"8
%@: Scheduling %lu iPod library items
%@: importing item with existing library pid %lld
%@: skipping import of item with existing library pid %lld
succeeded
%@: import %s
%@: post process item %d. pid=%lld
%@: existingPath=%@, existingFamilyAccoundID=%@
%@: Skipping existing track with location data: %lld: "%@"
%@: Skipping existing track, no location data: %lld
%@: Defering populating artwork for %lld
inserted track id %lld
%@: Setting location data for track: %lld
%@: Adding %lu scheduled iPod library items
%@: Deleting download from iPod library: %lld
%@: Removing download properties from iPod library: %lld
RestoreSuppressTermsAndConditions
%{public}@: Skipping authentication after cancel retry was cancelled
%{public}@: Prompting user for restore cancel retry
%{public}@: User cancelled cancel retry
%{public}@: User cancelled auth during cancel retry
%{public}@: Attempting restore for %lu download(s)
%{public}@: Falling back to primary account to restore download: %lld
%{public}@: Updating an account during a restore operation. Saving %{public}@.
%{public}@: Unabled to save an account during a restore operation. Saving %{public}@. Error: %{public}@
%{public}@: Hard fail invalid restore items: [%{public}@]
[%@]: Hard fail invalid restore items: [%@]
%{public}@: Soft fail invalid restore items: [%{public}@]
[%@]: Soft fail invalid restore items: [%@]
%{public}@: Cancel invalid restore items: [%{public}@]
[%@]: Cancel invalid restore items: [%@]
%{public}@: Failing restore items: [%{public}@] after account preflight failure: %{public}@
[%@]: Failing restore items: [%@] after account preflight failure for account: %@ error: %@
%{public}@: Attempting restore for %lu accounts
%{public}@: Attempting restore of podcast items: [%{public}@]
%{public}@: Restore transient failed for item: %{public}@
%{public}@: Restore failed for item: %{public}@
%{public}@: Attempting to resolve unknown Apple ID: %@
%{public}@: Resolved AppleID: %{public}@ to AppleID: %{public}@ and DSID: %{public}@
%{public}@: Could not resolve AppleID: %{public}@ error: %{public}@
%{public}@: Forwarding download: %lld itemID: %{public}@ to bookassetd
restoring books
%{public}@: Cancelling forwarded book download: %lld itemID: %@
%{public}@: Restore transient failed item: %{public}@
[%@]: Restore transient failed for item: %@
[%@]: Restore failed for item: %@
%{public}@: Restore cancel retry failed for item: %{public}@
[%@]: Restore cancel retry failed for item: %@
%{public}@: Attempt to establish primary account
%{public}@: Podcast not found on server for item: %{public}@
[%@]: Podcast not found on server for item: %@
%{public}@: Restore hard failed item: %{public}@ error: %{public}@
[%@]: Restore hard failed item: %@ error: %@
%{public}@: Cannot restore without an AppleID for account: %{public}@
%{public}@: Preflight account: %{public}@
RESTORE_CANCEL_RETRY_TITLE
RESTORE_CANCEL_RETRY_BODY
RESTORE_CANCEL_RETRY_DELETE_BUTTON
RESTORE_CANCEL_RETRY_DOWNLOAD_BUTTON
%{public}@: Soft failed item: %{public}@ error: %{public}@
[%@]: Soft failed item: %@ error: %@
%{public}@: Updating download %lld with restore metadata for item: [%llu, "%{public}@", "%{public}@"]
downloadIdentifiers
errors
(DH: T:%lld / D:%lld)
Tq,R,N,V_downloadID
Tq,R,N,V_transactionID
cbio
cbtn
ckon
odel
osgn
pbioc
pbiot
pkofn
pmoc
pmuc
com.apple.itunesstored.DaemonBiometricKeychain
com.apple.itunesstored.DaemonBiometricKeychain.X509
%{public}@: Create X509 cert chain data timed out for DSID: %@, purpose: %{public}@
%{public}@: Public key data copy timed out for DSID: %@
%{public}@: Sign data timed out for DSID: %@
%@-cert
%{public}@: Failed to find public key cert for DSID: %@, purpose: %{public}@, status: %{public}@
%{public}@: Failed to find intermediate cert for DSID: %@, purpose: %{public}@, status: %{public}@
%@: Failed to generate label for DSID: %@, purpose: %@
%{public}@: Failed to find X509 certs in Keychain, generating new X509 cert chain for DSID: %@, purpose: %{public}@
%{public}@: Failed to create new X509 certs for DSID: %@, purpose: %{public}@, error: %{public}@
%{public}@: Copy ACL for key failed to fetch key attributes
%{public}@: Copy ACL for key failed to find ACL associated with key
%{public}@: Copy ACL for context failed to copy private key with error: %{public}@
%{public}@: Copy ACL for context failed to copy private key
v20@?0B8@"NSObject<OS_xpc_object>"12
DaemonBiometricKeychain: Legacy data signing operation failed with no payload in XPC message for DSID: %@, PID: %{public}@
DaemonBiometricKeychain: Preparing legacy data signing operation over XPC for DSID: %@, PID: %{public}@
DaemonBiometricKeychain: Context-based data signing operation failed with no payload in XPC message for DSID: %@, PID: %{public}@
DaemonBiometricKeychain: Preparing context-based data signing operation over XPC for DSID: %@, PID: %{public}@
com.apple.AppleMediaServices.cert.X509.client.primary
com.apple.AppleMediaServices.cert.X509.client.extended
com.apple.AppleMediaServices.cert.X509.primary
com.apple.AppleMediaServices.primaryKey
com.apple.AppleMediaServices.cert.X509.extended
com.apple.AppleMediaServices.extendedKey
%{public}@: Rejecting message from unentitled client
%{public}@: [BIO] DisplayPaymentSheetOperation did complete
%{public}@: [BIO] Payment sheet authorization failed with error: %{public}@
%{public}@: [BIO] Payment sheet did cancel
%{public}@: [BIO] Payment sheet did sign challenge
%{public}@: [BIO] Payment sheet did fallback to password
%{public}@: [BIO] Found payment token
%{public}@: [BIO] Found FPAN ID
v52@?0@"NSData"8@"NSString"16B24@"NSData"28@"NSString"36@"NSError"44
%{public}@: Presenting payment sheet
%{public}@: Query dictionary failed with no label
Documents
Containers
%@: Downloading asset: %lld for download: %lld
%@: Installing asset: %lld for download: %lld
%@: Failed to download and install asset: %lld for download: %lld
%@: Downloading asset: %lld with type: %@ for download: %lld
%@-%ld
DownloadInstaller: File delete failed: %@
DownloadInstaller: File rename failed after too many tries: %@
DownloadInstaller: File move failed: %@
%{public}@: Removing installed file at: %{public}@.
%{public}@: Installed asset removal at %{public}@ failed with error: %{public}@.
%{public}@: Installed asset couldn't be found at %{public}@. Reporting successful removal.
%@: Rolling file back to %@
%@: File rollback failed: %@
DownloadInstaller: Could not serialize plist: %@
DownloadInstaller: Wrote plist to: %@
DownloadInstaller: Could not write plist: %@
T@"FinishDownloadMemoryEntity",R,N,V_download
progressFraction
p2-content-restore
allowed-kinds
allowed-match-status
gzip
max-item-count
device-name
%@: Restoring items: [%{public}@]for account: (%@ / %@)
[%@]: Restoring items: [%@] for account: %@
%@: Can't restore using account: %@ with no account name
%@: Cannot restore: no URL
%@: Invalid URL: %@
Content-Encoding
%@: No body data for items: [%{public}@] error: %{public}@
%@: Received failure for items: [%{public}@] response error: %{public}@
[%@]: Received failure for items: [%@] response error: %@
%@: Received content restore metadata for %lu items for restore items: [%{public}@]
ExtraRestoreKinds
%@: Adding extra allowed kinds: %@
%@: Filtering disallowed kind: "%@" for item: %@
%@: Filtering disallowed match status: %@ for item: %@
%@: Restoring %ld items with kind %@ with chunk size %ld
%@: Making chunk request for %lu items with kind: %@
%@: Cancel restore items: [%{public}@] error: %{public}@
[%@]: Cancel restore items: [%@] error: %@
%@: Skipping terms and conditions failure
T@"SSAccount",R
downloadItems
T@"<RestoreDownloadItemsOperationDelegate>",W,D
shouldShowTermsAndConditionsDialog
responses
ASDJobAsset
getAddCreditPassUrl
%@: Loading pass for account ID: %@
PKPass
%@: Failed to load pass for account ID: %@, error: %@
%@: Loaded account ID: %@, pass: %@
com.apple.itunesstored.subscription-poll
subscription-status-refresh-interval-in-seconds
%@: Firing timer for start: %@
:CellularOverride
:LastCheckTime
:WiFiOverride
:WindowOverride
eventBlock
T@?,C,N,V_eventBlock
preconditionsBlock
T@?,C,N,V_preconditionsBlock
bagKey
T@"NSString",C,N,V_bagKey
cellularBagKey
T@"NSString",C,N,V_cellularBagKey
defaultInterval
Td,N,V_defaultInterval
defaultWindow
Td,N,V_defaultWindow
%@: Cancel application restore: %@
%@: Could not cancel application restore for bundle ID: %@ error: %@
%@: Could not cancel application restore with bundle ID: %@ because it is a MID based restore to save for later.
Tq,R,V_priority
TB,R,GisFailed
com.apple.itunesstored.ApplicationWorkspace.callback
com.apple.itunesstored.ApplicationWorkspace
com.apple.itunesstored.ApplicationWorkspace.background
[ApplicationWorkspace]: Registered user switch stakeholder.
[ApplicationWorkspace]: Added placeholder thumbnail operation for %@
[ApplicationWorkspace]: Skipping queing of placeholder thumbnail operation for %@ because we have one
[ApplicationWorkspace]: Resuming sync bubble.
[ApplicationWorkspace]: Checking if we are installing item with itemIdentifier: %@
[ApplicationWorkspace]: Persistent state installing item with itemIdentifier: %@ phase: %@
[ApplicationWorkspace]: Workspace is installing item with itemIdentifier: %@
[ApplicationWorkspace]: We are currently installing %@
[%@] Skipping install placeholder because appstored will
DeviceBasedVPP
[%@] Replaying Incomplete Operations before [%@]
[ApplicationWorkspace]: Retrying incomplete due to download fail: [%@] [%@] [%@]
[ApplicationWorkspace]: Retrying incomplete installing: [%@] [%@] [%@]
[ApplicationWorkspace]: Retrying incomplete download canceled: [%@] [%@] [%@]
[ApplicationWorkspace]:Unexpected incomplete operation type: [%@] [%@] [%@]
[ApplicationWorkspace]: Cannot retry incomplete operation again: [%@] [%@] [%@]
[%@]: Seeing if we can resume quotas
[%@]: Still downloading item with itemIdentifier: %lld phase: %@
[%@]: Resuming quotas
[%@]: Not resuming quotas due to %i current downloads
[ApplicationWorkspace]: Setting placeholder thumbnail icon data for %@
[%@]: Suspending quotas
[%@]: Error suspending quotas: %@
[ApplicationWorkspace]: Waiting for pending placeholder installs of download: %lld
SC_Info
[ApplicationWorkspace]: About to switch with %lu current install(s)
terminate multiuser mode
user is going to change
[ApplicationWorkspace]: Successfully canceled downloadID: %lld bundleID: %@ phase: %@
[ApplicationWorkspace]: Successfully removed placeholder for : %lld bundleID: %@
[ApplicationWorkspace]: Failed to uninstall placeholder for downloadID: %lld bundleID: %@
[ApplicationWorkspace]: Failed to cancel downloadID: %lld phase: %@ bundleID: %@
[ApplicationWorkspace]: Waiting for downloadID: %lld to finish installing
[ApplicationWorkspace]: Timed out waiting for downloadID %lld to finish installing
[ApplicationWorkspace]: Application with downloadID: %lld to finish installing
[ApplicationWorkspace]: Switch complete with %ld install(s) successful
B32@?0@"ApplicationWorkspaceOperation"8Q16^B24
[ApplicationWorkspace]: Canceled placeholder thumbnail operation for %@ because we are installing
v28@?0B8@"NSProgress"12@"NSError"20
fractionCompleted
[%@] Decrementing pending installs for %lld but none found
v16@?0^{sqlite3=}8
ITSDGetAssetPath
SELECT name FROM sqlite_master WHERE name='download';
CREATE TABLE IF NOT EXISTS application_id (effective_client_id INTEGER, bundle_id TEXT NOT NULL, UNIQUE (bundle_id))
CREATE TABLE IF NOT EXISTS asset (pid INTEGER, download_id INTEGER, asset_order INTEGER DEFAULT 0, asset_type TEXT, bytes_total INTEGER, url TEXT, local_path TEXT, destination_url TEXT, path_extension TEXT, retry_count INTEGER, http_method TEXT, initial_odr_size INTEGER, is_discretionary INTEGER DEFAULT 0, is_downloaded INTEGER DEFAULT 0, is_drm_free INTEGER DEFAULT 0, is_external INTEGER DEFAULT 0, is_hls INTEGER DEFAULT 0, is_local_cache_server INTEGER DEFAULT 0, is_zip_streamable INTEGER DEFAULT 0, processing_types INTEGER DEFAULT 0, video_dimensions TEXT, timeout_interval REAL, store_flavor TEXT, download_token INTEGER DEFAULT 0, blocked_reason INTEGER DEFAULT 0, avfoundation_blocked INTEGER DEFAULT 0, service_type INTEGER DEFAULT 0, protection_type INTEGER DEFAULT 0,store_download_key TEXT, etag TEXT, bytes_to_hash INTEGER, hash_type INTEGER DEFAULT 0, server_guid TEXT, file_protection TEXT, variant_id TEXT, hash_array BLOB, http_headers BLOB, request_parameters BLOB, body_data BLOB, body_data_file_path TEXT,sinfs_data BLOB, dpinfo_data BLOB, uncompressed_size INTEGER DEFAULT 0, url_session_task_id INTEGER DEFAULT -1, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS download (pid INTEGER, airplay_content_type TEXT, artist_name TEXT, artwork_is_prerendered INTEGER DEFAULT 0, artwork_template_name TEXT, auto_update_time INTEGER, beta_external_version_identifier INTEGER DEFAULT 0, bundle_id TEXT, bundle_version TEXT, cancel_if_duplicate INTEGER DEFAULT 0, cancel_on_failure INTEGER DEFAULT 0, cancel_url TEXT, client_id TEXT, collection_artist_name TEXT, collection_group_count INTEGER, collection_item_count INTEGER, collection_name TEXT, composer_name TEXT, diverted_job_id INTEGER, document_target_id TEXT, download_permalink TEXT, duet_transfer_type INTEGER DEFAULT 0, duration_in_ms INTEGER DEFAULT 0, effective_client_id INTEGER DEFAULT 0, enable_extensions INTEGER DEFAULT 0, episode_id TEXT, episode_sort_id INTEGER, handler_id INTEGER DEFAULT 0, has_4k INTEGER DEFAULT 0, has_dolby_vision INTEGER DEFAULT 0, has_hdr INTEGER DEFAULT 0, has_messages_extension INTEGER DEFAULT 0, hls_playlist_url TEXT, genre_name TEXT, index_in_collection INTEGER DEFAULT 0, index_in_collection_group INTEGER, is_automatic INTEGER DEFAULT 0, is_compilation INTEGER DEFAULT 0, is_device_based_vpp INTEGER DEFAULT 0, is_diverted INTEGER DEFAULT 0, is_explicit INTEGER DEFAULT 0, is_from_store INTEGER DEFAULT 0, is_hd INTEGER DEFAULT 0, is_hls INTEGER DEFAULT 0, is_premium INTEGER DEFAULT 0, is_private INTEGER DEFAULT 0, is_purchase INTEGER DEFAULT 0, is_redownload INTEGER DEFAULT 0, is_restore INTEGER DEFAULT 0, is_rental INTEGER DEFAULT 0, is_sample INTEGER DEFAULT 0, is_shared INTEGER DEFAULT 0, is_store_queued INTEGER DEFAULT 0, is_tv_template INTEGER DEFAULT 0, is_music_show INTEGER DEFAULT 0, kind TEXT, launch_prohibited INTEGER DEFAULT 0, library_id TEXT, loading_priority REAL, long_description TEXT, long_season_description TEXT, messages_artwork_url TEXT, network_name TEXT, order_key DOUBLE DEFAULT 0, order_seed INTEGER DEFAULT 0, override_audit_token_data BLOB, page_progression_direction TEXT, podcast_episode_guid TEXT, podcast_feed_url TEXT, podcast_type TEXT, policy_id INTEGER DEFAULT 0, priority INTEGER DEFAULT 0, preferred_asset_flavor TEXT, purchase_id INTEGER DEFAULT 0, rate_limit INTEGER, reason INTEGER DEFAULT 0,ref_app TEXT, ref_url TEXT, release_date INTEGER, release_year INTEGER, rental_id INTEGER, resource_timeout_interval REAL, season_number INTEGER, series_name TEXT, software_type TEXT, short_description TEXT, show_composer INTEGER DEFAULT 0, suppress_error_dialogs INTEGER NOT NULL DEFAULT 0, store_account_id INTEGER, store_account_name TEXT, store_artist_id INTEGER, store_cohort TEXT, store_collection_id INTEGER, store_composer_id INTEGER, store_download_key TEXT, store_front_id TEXT, store_genre_id INTEGER, store_item_id INTEGER, store_match_status INTEGER NOT NULL DEFAULT 0, store_publication_version INTEGER DEFAULT 0, store_preorder_id INTEGER, store_purchase_date INTEGER, store_redownload_parameters TEXT, store_redownload_status INTEGER NOT NULL DEFAULT 0, store_saga_id INTEGER, store_software_version_id INTEGER, store_transaction_id TEXT, store_url TEXT, store_xid TEXT, thumbnail_newsstand_binding_edge TEXT, thumbnail_newsstand_binding_type TEXT, thumbnail_url TEXT, timeout_interval REAL, timestamp INTEGER DEFAULT (strftime('%s', 'now')), title TEXT, transaction_id INTEGER DEFAULT 0, variant_id TEXT, work_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS download_policy (pid INTEGER, policy_data BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS download_state (pid INTEGER, download_id INTEGER, phase TEXT, is_restricted INTEGER DEFAULT 0, restore_state INTEGER DEFAULT 0, blocked_reason INTEGER NOT NULL DEFAULT 0, can_pause INTEGER DEFAULT 1, can_cancel INTEGER DEFAULT 1, can_prioritize INTEGER DEFAULT 1, is_server_finished INTEGER DEFAULT 0, has_restore_data INTEGER DEFAULT -1, last_odr_action INTEGER DEFAULT 0, restore_data_size INTEGER DEFAULT 0, store_queue_refresh_count INTEGER DEFAULT 0, did_restore_data INTEGER DEFAULT 0, auto_update_state INTEGER NOT NULL DEFAULT 0, download_error BLOB, restore_error BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS finished_download (pid INTEGER, finish_url TEXT, store_account_id INTEGER NOT NULL, store_item_id INTEGER, store_transaction_id TEXT, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS persistent_download (download_id INTEGER, manager_id INTEGER, PRIMARY KEY (download_id, manager_id));
CREATE TABLE IF NOT EXISTS persistent_manager (pid INTEGER, client_id TEXT, filters_external_downloads INTEGER DEFAULT 0, migration_version INTEGER DEFAULT 0, wake_up_on_finish INTEGER DEFAULT 0, persistence_id TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS persistent_manager_kind (pid INTEGER, manager_id INTEGER, download_kind TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS preorder (pid INTEGER, artist_name TEXT, kind TEXT, release_date INTEGER, release_date_string TEXT, store_account_id INTEGER, store_item_id INTEGER, store_preorder_id INTEGER, title TEXT, image_collection_data BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS canceled_preorder (pid INTEGER, store_account_id INTEGER NOT NULL DEFAULT 0, store_item_id INTEGER NOT NULL DEFAULT 0, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS client (pid INTEGER, audit_token_data BLOB, client_type INTEGER DEFAULT 0, client_id TEXT NOT NULL, PRIMARY KEY (pid), UNIQUE (client_id));
CREATE TABLE IF NOT EXISTS purchase (pid INTEGER, batch_id INTEGER DEFAULT 0, client_id INTEGER DEFAULT 0, order_id DOUBLE DEFAULT 0, state INTEGER DEFAULT 0, encoded_data BLOB, encoded_error BLOB, encoded_response BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS purchase_manager (pid INTEGER, client_id_header TEXT, manager_id TEXT, process_id TEXT, url_bag_type TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS application_workspace_state (pid INTEGER, bundle_id TEXT NOT NULL, download_id INTEGER, expected_phase TEXT NOT NULL DEFAULT 0, retry_count INTEGER NOT NULL DEFAULT 0, time_updated INTEGER NOT NULL DEFAULT 0, transaction_id INTEGER, PRIMARY KEY (pid), UNIQUE (bundle_id));
CREATE INDEX IF NOT EXISTS application_workspace_state_bundle_id ON application_workspace_state (bundle_id);
CREATE TABLE IF NOT EXISTS trnsaction (pid INTEGER, bundle_id TEXT, type INTEGER DEFAULT 0, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS asset_download_id ON asset (download_id);
CREATE INDEX IF NOT EXISTS download_priority_order_key ON download (priority DESC, order_key ASC);
CREATE INDEX IF NOT EXISTS download_is_restore ON download (is_restore);
CREATE INDEX IF NOT EXISTS download_kind ON download (kind);
CREATE INDEX IF NOT EXISTS preorder_preorder_id ON preorder (store_preorder_id);
Media
Downloads
downloads.28.sqlitedb
PRAGMA user_version;
No database migration function for %d => %d
Database migration failed for version: %d
com.apple.Music
INSERT INTO application_id (effective_client_id, bundle_id) VALUES (%ld, "%@")
ALTER TABLE download ADD COLUMN store_account_name TEXT;
ALTER TABLE download ADD COLUMN suppress_error_dialogs SchemaUserVersionEGER NOT NULL DEFAULT 0;
ALTER TABLE download_state ADD COLUMN blocked_reason INTEGER NOT NULL DEFAULT 0;
ALTER TABLE download ADD COLUMN store_match_status INTEGER NOT NULL DEFAULT 0;
ALTER TABLE download ADD COLUMN store_redownload_status INTEGER NOT NULL DEFAULT 0;
ALTER TABLE download ADD COLUMN is_store_queued INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN store_redownload_parameters TEXT;
ALTER TABLE download ADD COLUMN thumbnail_newsstand_binding_edge TEXT;
ALTER TABLE download ADD COLUMN thumbnail_newsstand_binding_type TEXT;
ALTER TABLE download ADD COLUMN is_cellular_restricted INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN requires_device_plugged_in INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN cancel_on_failure INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN size_limit_4G INTEGER;
ALTER TABLE download ADD COLUMN size_limit_5G INTEGER;
ALTER TABLE download ADD COLUMN size_limit_6G INTEGER;
ALTER TABLE download ADD COLUMN size_limit_7G INTEGER;
ALTER TABLE download ADD COLUMN size_limit_8G INTEGER;
ALTER TABLE download ADD COLUMN size_limit_9G INTEGER;
ALTER TABLE persistent_manager ADD COLUMN migration_version INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN download_token INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN policy_id INTEGER DEFAULT 0;
size_limit_2G
size_limit_3G
size_limit_4G
size_limit_5G
size_limit_6G
size_limit_7G
size_limit_8G
size_limit_9G
size_limit_WiFi
requires_device_plugged_in
void ConvertConstraintsToPolicies(SSSQLiteDatabase *)
%{public}s: Failed to archive download policy. Error = %{public}@
ALTER TABLE download ADD COLUMN preferred_asset_flavor TEXT;
ALTER TABLE download ADD COLUMN cancel_if_duplicate INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN sinfs_data BLOB;
ALTER TABLE asset ADD COLUMN etag TEXT;
ALTER TABLE asset ADD COLUMN blocked_reason INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN store_download_key TEXT;
ALTER TABLE download_state ADD COLUMN is_server_finished INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN service_type INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN is_hash_verified INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN store_url TEXT;
ALTER TABLE download_state ADD COLUMN has_restore_data INTEGER DEFAULT -1;
ALTER TABLE download_state ADD COLUMN restore_data_size INTEGER DEFAULT 0;
ALTER TABLE download_state ADD COLUMN store_queue_refresh_count INTEGER DEFAULT 0;
ALTER TABLE download_state ADD COLUMN did_restore_data INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN is_explicit INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN page_progression_direction TEXT;
ALTER TABLE asset ADD COLUMN asset_order INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN is_local_cache_server INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN server_guid TEXT;
ALTER TABLE download ADD COLUMN purchase_id INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN auto_update_time INTEGER;
ALTER TABLE download_state ADD COLUMN auto_update_state INTEGER NOT NULL DEFAULT 0;
ALTER TABLE download ADD COLUMN is_hd INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN is_zip_streamable INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN uncompressed_size INTEGER DEFAULT 0;
ALTER TABLE client ADD COLUMN audit_token_data BLOB;
ALTER TABLE asset ADD COLUMN body_data_file_path TEXT;
ALTER TABLE download_state ADD COLUMN can_cancel INTEGER DEFAULT 1;
ALTER TABLE download_state ADD COLUMN can_prioritize INTEGER DEFAULT 1;
ALTER TABLE download ADD COLUMN override_audit_token_data BLOB;
ALTER TABLE download ADD COLUMN effective_client_id INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN order_seed INTEGER DEFAULT 0;
UPDATE download SET priority=1 WHERE priority>1;
UPDATE download SET priority=-1 WHERE priority<0;
UPDATE download SET priority=-2 WHERE is_restore=1;
ALTER TABLE asset ADD COLUMN is_downloaded INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN duet_transfer_type INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN airplay_content_type TEXT;
ALTER TABLE asset ADD COLUMN hash_type INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN url_session_task_id INTEGER DEFAULT -1;
ALTER TABLE asset ADD COLUMN processing_types INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN dpinfo_data BLOB;
ALTER TABLE asset ADD COLUMN file_protection TEXT;
ALTER TABLE asset ADD COLUMN is_discretionary INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN avfoundation_blocked INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN store_cohort TEXT;
ALTER TABLE download ADD COLUMN ref_app TEXT;
ALTER TABLE download ADD COLUMN ref_url TEXT;
ALTER TABLE download ADD COLUMN reason INTEGER DEFAULT 0;
UPDATE application_id SET effective_client_id=%ld WHERE bundle_id="com.apple.Music";
ALTER TABLE asset ADD COLUMN protection_type INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN variant_id TEXT;
ALTER TABLE download ADD COLUMN loading_priority REAL;
ALTER TABLE download ADD COLUMN rate_limit INTEGER;
ALTER TABLE download ADD COLUMN timeout_interval REAL;
ALTER TABLE download ADD COLUMN variant_id TEXT;
ALTER TABLE download ADD COLUMN beta_external_version_identifier INTEGER DEFAULT 0;
ALTER TABLE download_state ADD COLUMN last_odr_action INTEGER DEFAULT 0;
ALTER TABLE asset ADD COLUMN initial_odr_size INTEGER;
ALTER TABLE download ADD COLUMN is_tv_template INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN is_device_based_vpp INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN is_shared INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN transaction_id INTEGER DEFAULT 0;
ALTER TABLE application_workspace_state ADD COLUMN transaction_id INTEGER;
ALTER TABLE download ADD COLUMN store_publication_version INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN download_permalink TEXT;
ALTER TABLE download ADD COLUMN is_diverted INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN diverted_job_id INTEGER;
ALTER TABLE download ADD COLUMN rental_id INTEGER;
ALTER TABLE download ADD COLUMN hls_playlist_url TEXT;
ALTER TABLE download ADD COLUMN has_messages_extension INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN launch_prohibited INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN messages_artwork_url TEXT;
ALTER TABLE download ADD COLUMN enable_extensions INTEGER DEFAULT 0;
ALTER TABLE download RENAME TO _download;
INSERT INTO download (pid, airplay_content_type, artist_name, artwork_is_prerendered, artwork_template_name, auto_update_time, beta_external_version_identifier, bundle_id, bundle_version, cancel_if_duplicate, cancel_on_failure, cancel_url, client_id, collection_artist_name, collection_group_count, collection_item_count, collection_name, composer_name, diverted_job_id, document_target_id, download_permalink, duet_transfer_type, duration_in_ms, effective_client_id, enable_extensions, episode_id, episode_sort_id, handler_id, has_messages_extension, hls_playlist_url, genre_name, index_in_collection, index_in_collection_group, is_automatic, is_compilation, is_device_based_vpp, is_diverted, is_explicit, is_from_store, is_hd, is_private, is_purchase, is_redownload, is_restore, is_rental, is_sample, is_shared, is_store_queued, is_tv_template, kind, launch_prohibited, library_id, loading_priority, long_description, long_season_description, messages_artwork_url, network_name, order_key, order_seed, override_audit_token_data, page_progression_direction, podcast_episode_guid, podcast_feed_url, podcast_type, policy_id, priority, preferred_asset_flavor, purchase_id, rate_limit, reason, ref_app, ref_url, release_date, release_year, rental_id, season_number, series_name, software_type, short_description, suppress_error_dialogs, store_account_id, store_account_name, store_artist_id, store_cohort, store_collection_id, store_composer_id, store_download_key, store_front_id, store_genre_id, store_item_id, store_match_status, store_publication_version, store_preorder_id, store_purchase_date, store_redownload_parameters, store_redownload_status, store_saga_id, store_software_version_id, store_transaction_id, store_url, store_xid, thumbnail_newsstand_binding_edge, thumbnail_newsstand_binding_type, thumbnail_url, timeout_interval, title, transaction_id, variant_id) SELECT pid, airplay_content_type, artist_name, artwork_is_prerendered, artwork_template_name, auto_update_time, beta_external_version_identifier, bundle_id, bundle_version, cancel_if_duplicate, cancel_on_failure, cancel_url, client_id, collection_artist_name, collection_group_count, collection_item_count, collection_name, composer_name, diverted_job_id, document_target_id, download_permalink, duet_transfer_type, duration_in_ms, effective_client_id, enable_extensions, episode_id, episode_sort_id, handler_id, has_messages_extension, hls_playlist_url, genre_name, index_in_collection, index_in_collection_group, is_automatic, is_compilation, is_device_based_vpp, is_diverted, is_explicit, is_from_store, is_hd, is_private, is_purchase, is_redownload, is_restore, is_rental, is_sample, is_shared, is_store_queued, is_tv_template, kind, launch_prohibited, library_id, loading_priority, long_description, long_season_description, messages_artwork_url, network_name, order_key, order_seed, override_audit_token_data, page_progression_direction, podcast_episode_guid, podcast_feed_url, podcast_type, policy_id, priority, preferred_asset_flavor, purchase_id, rate_limit, reason, ref_app, ref_url, release_date, release_year, rental_id, season_number, series_name, software_type, short_description, suppress_error_dialogs, store_account_id, store_account_name, store_artist_id, store_cohort, store_collection_id, store_composer_id, store_download_key, store_front_id, store_genre_id, store_item_id, store_match_status, store_publication_version, store_preorder_id, store_purchase_date, store_redownload_parameters, store_redownload_status, store_saga_id, store_software_version_id, store_transaction_id, store_url, store_xid, thumbnail_newsstand_binding_edge, thumbnail_newsstand_binding_type, thumbnail_url, timeout_interval, title, transaction_id, variant_id FROM _download;
DROP TABLE _download;
ALTER TABLE download ADD COLUMN is_music_show INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN show_composer INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN work_name TEXT;
ALTER TABLE asset ADD COLUMN is_hls INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN is_hls INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN is_premium INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN has_hdr INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN has_4k INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN has_dolby_vision INTEGER DEFAULT 0;
ALTER TABLE download ADD COLUMN resource_timeout_interval REAL;
T@"NSNumber",C,N,V_rentalKeyIdentifier
rentalInformation
T@"NSDictionary",R,C,N,V_rentalInformation
%@: Running install for download: %lld using operation: %@
v16@?0@"FinishDownloadResponse"8
%@: No installer for download: %lld
com.apple.itunesstored.IPodLibraryItem
duration
tracks
assetType
chapters
downloading
TB,R,GisDownloading
durationInSeconds
downloadType
itemDownloadIdentifier
hasItemArtwork
itemArtworkData
itemMediaPath
protectionType
itemMetadata
T@"StoreDownload",C
updateType
additionalEntityProperties
T@"NSDictionary",C
CMTimeGetSeconds
dialogButton
T@"ISDialogButton",&,V_dialogButton
SKErrorDomain
preorder
canceled_preorder
image_collection_data
release_date_string
content_item
item_id
%@: Loading preorder queue
%@: Could not load preorder queue: %@
%@: Loaded %lu preorder items
p2-pre-order-queue
preorderItems
%@: Checking preorder queue
%@: Could not check preorder queue: %@
pre-order-queue-count
%@: Found %@ preorders in the queue
p2-check-pre-order-queue
numberOfPreordersInQueue
com.apple.itunesstored.StorePreorderQueue
%@: Adding new preorder: %lld
%@: Checking preorder queue for %lu accounts
%@: Deny preorder cancel for unentitled client: %@
%@: Cancel %ld preorders
v24@?0@"PreorderQueueClient"8@"NSObject<OS_xpc_object>"16
%@: Checking queue for %@
v16@?0@"PreorderQueueClient"8
%@: Deny get preorders from unentitled client: %@
%@: Ignore register from unentitled client: %@
%@: Registered client: %@ with kinds: %@
%@: Client disconnect: %@
%@: Deleting all preorders for account: %@
%@: Updating existing preorder: %@
%@: Pruning disappeared preorder: %@
receipt-max-lookup-count
[%{public}@]: Skipping receipt refresh for non installed bundleID: %{public}@.
[%{public}@]: Unexpected status code: %{public}@
[%{public}@]: No new receipt for %{public}@
[%{public}@]: Failed to re-write the receipt for app: [%{public}@] [%ld bytes]
[%{public}@]: Attempted VPP migration of server revoked app with bundleIdentifier: %{public}@ with result: %d
[%{public}@]: Rewrote a Revoked receipt for app: [%{public}@] [%{public}@] [%ld bytes]
[%{public}@]: Rewrote the receipt for app: [%{public}@] [%ld bytes]
[%{public}@]: Attempted VPP migration of revoked app with bundleIdentifier: %{public}@ with result: %d
[%@]: Rewrote a Revoked receipt for app: [%{public}@] [%{public}@] [%ld bytes]
[%{public}@]: Using family primary account: %{public}@ to restore bundleID: %{public}@ storeFront: %{public}@
[%{public}@]: Using app account: %{public}@ item with bundleID: %{public}@ due to different item storeFront: %{public}@ primary account storeFront: %{public}@
[%{public}@]: Error creating receipt request: %{public}@
[%{public}@]: Receipt refresh failed for: %{public}@, error: %{public}@
T@"NSString",R,C,N
requestParameters
T@"NSData",R,C,N
paymentDiscount
T@"SKPaymentDiscount",R,C,N
The request data must be less than %d bytes
TB,D,N
T@"NSDictionary",C,D,N
T@"SKPaymentDiscount",C,N
Tq,D,N
destinationFileName
T@"NSString",&,N,V_downloadKind
T@"NSDictionary",R,N
destinationURLString
DPInfoData
TB,R,N,GisDRMFree
externalAsset
TB,R,N,GisExternalAsset
fileProtectionType
localPath
mediaLibraryProtectionType
pathExtension
processingTypes
SINFData
sourceURLString
variantIdentifier
SINFs
com.apple.itunesstored.CancelPreordersOperation
%@: Invalid response type: %@
%@: Cancel failed with failureType: %@
p2-cancel-pre-order
MEDIA_SOCIAL_ERROR_BUTTON_TRY_LATER
MEDIA_SOCIAL_ERROR_BUTTON_DELETE
MEDIA_SOCIAL_ERROR_MESSAGE_FORMAT_PLURAL_%@
MEDIA_SOCIAL_COMBINED_ERROR_%@_POST_%@_UPLOAD
MEDIA_SOCIAL_COMBINED_ERROR_%@_POST_%@_UPLOADS
MEDIA_SOCIAL_COMBINED_ERROR_%@_POSTS_%@_UPLOAD
MEDIA_SOCIAL_COMBINED_ERROR_%@_POSTS_%@_UPLOADS
UPLOAD_ERROR_MESSAGE_FORMAT_PLURAL_%@
MEDIA_SOCIAL_ERROR_MESSAGE_FORMAT_%@
UPLOAD_ERROR_MESSAGE_FORMAT_%@
UPLOAD_ERROR_MESSAGE_AUDIO
UPLOAD_ERROR_MESSAGE_IMAGE
UPLOAD_ERROR_MESSAGE_SOUND_BITE
UPLOAD_ERROR_MESSAGE_VIDEO
MEDIA_SOCIAL_ERROR_BUTTON_OK
MEDIA_SOCIAL_ERROR_MESSAGE_FORMAT_%@_DUE_TO_ERROR_%@
T@"<MediaSocialErrorDelegate>",W,N,V_delegate
T@"NSArray",R,C,N
itemKinds
%@: Could not delete asset file: %@, URL: %@
v32@?0@"SSVMediaSocialPostArtist"8Q16^B24
upload
artists
postEntity
T@"MediaSocialPostEntity",R,N
album_id
asset_token
asset_token_type
asset_url
category_name
error_code
error_domain
error_message
owns_asset
parent_relationship_type
parent_upload_id
preview_frame_time
subtitle
upload_time
%@: Invalid chunk index: %ld, for bytes written: %lld, bytes to hash: %ld
%@: Hash mismatch for chunk: (%lld:%lld), %@ should be %@
com.apple.itunesstored.DownloadErrorController
B16@?0@"DownloadError"8
_notification
T@,&,N,G_notification,S_setNotification:,V_notification
T@"NSOrderedSet",R,N
T@"NSString",C,N,V_downloadKind
downloadTitle
T@"NSString",C,N,V_downloadTitle
validError
TB,R,N,GisValidError
DOWNLOAD_FAILED_TITLE_GENERIC_PLURAL
DOWNLOAD_FAILED_TITLE_GENERIC
DOWNLOAD_FATAL_MESSAGE_%@
DOWNLOAD_FATAL_MESSAGE_ONE_%@
DOWNLOAD_FATAL_MESSAGE_PLURAL_%@_%ld
DOWNLOAD_FAILED_DONE
DOWNLOAD_FAILED_RETRY
%@: Retry downloads from error alert
INSTALL_FAILED_BODY_FORMAT_%@
INSTALL_FAILED_BODY_FORMAT_ONE_%@
INSTALL_FAILED_BODY_FORMAT_PLURAL_%@_%ld
DOWNLOAD_FAILED_BODY_FORMAT_%@
DOWNLOAD_FAILED_BODY_FORMAT_ONE_%@
DOWNLOAD_FAILED_BODY_FORMAT_PLURAL_%@_%ld
DOWNLOAD_FAILED_BODY_GENERIC
DOWNLOAD_FAILED_BODY_GENERIC_PLURAL_%@
DOWNLOAD_FAILED_TITLE_AUDIOBOOK_PLURAL
DOWNLOAD_FAILED_TITLE_AUDIOBOOK
DOWNLOAD_FAILED_TITLE_MOVIE_PLURAL
DOWNLOAD_FAILED_TITLE_MOVIE
DOWNLOAD_FAILED_TITLE_SONG_PLURAL
DOWNLOAD_FAILED_TITLE_SONG
DOWNLOAD_FAILED_TITLE_MUSIC_VIDEO_PLURAL
DOWNLOAD_FAILED_TITLE_MUSIC_VIDEO
DOWNLOAD_FAILED_TITLE_PODCAST_PLURAL
DOWNLOAD_FAILED_TITLE_PODCAST
DOWNLOAD_FAILED_TITLE_RINGTONE_PLURAL
DOWNLOAD_FAILED_TITLE_RINGTONE
DOWNLOAD_FAILED_TITLE_APPLICATION_PLURAL
DOWNLOAD_FAILED_TITLE_APPLICATION
DOWNLOAD_FAILED_TITLE_TV_PLURAL
DOWNLOAD_FAILED_TITLE_TV
DOWNLOAD_FAILED_TITLE_TONE_PLURAL
DOWNLOAD_FAILED_TITLE_TONE
NOT_ENOUGH_SPACE_TITLE
NOT_ENOUGH_SPACE_SETTINGS
NOT_ENOUGH_SPACE_SPECIFIC_%@
NOT_ENOUGH_SPACE_SPECIFIC_PLUS_ONE_%@
NOT_ENOUGH_SPACE_SPECIFIC_PLURAL_%@_%ld
NOT_ENOUGH_SPACE_SINGULAR
NOT_ENOUGH_SPACE_PLURAL
prefs:root=General&path=USAGE
_PLURAL
_PLUS_ONE_%@
_PLURAL_%@_%d
TOO_BIG_FOR_NETWORK_SPECIFIC
TOO_BIG_FOR_NETWORK_SPECIFIC_NO_ITUNES
TOO_BIG_FOR_NETWORK_SPECIFIC_NO_WIFI
TOO_BIG_FOR_NETWORK_BODY
TOO_BIG_FOR_NETWORK_BODY_NO_ITUNES
TOO_BIG_FOR_NETWORK_BODY_NO_WIFI
ITEM_TOO_BIG_FOR_NETWORK_BODY
ITEM_TOO_BIG_FOR_NETWORK_BODY_NO_ITUNES
ITEM_TOO_BIG_FOR_NETWORK_BODY_NO_WIFI
TOO_BIG_FOR_NETWORK_TITLE
TOO_BIG_FOR_NETWORK_TITLE_PLURAL
ITEM_TOO_BIG_FOR_NETWORK_TITLE
ITEM_TOO_BIG_FOR_NETWORK_TITLE_PLURAL
canDownloadInITunes
TB,N,V_canDownloadInITunes
constrainedSizeLimit
Tq,N,V_sizeLimit
com.apple.itunesstored.UserNotificationCenter
completionBlock
T@?,C,N,V_completionBlock
canceled
TB,R,N,GisCanceled,V_isCanceled
userNotification
T^{__CFUserNotification=},R,N
T@"NSNumber",&,N,V_appAdamId
adNetworkId
T@"NSString",&,N,V_adNetworkId
campaignId
T@"NSNumber",&,N,V_campaignId
impressionId
T@"NSString",&,N,V_impressionId
attributionSignature
T@"NSString",&,N,V_attributionSignature
localTimestamp
T@"NSNumber",&,N,V_localTimestamp
client_type
{ d: %lld itemID: %@ t: %@ a: %@  c: %@ }
Tq,R,N,V_downloadIdentifier
downloadSessionProperties
T@"DownloadSessionProperties",C,N,V_downloadSessionProperties
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_handlerIdentifier
TB,N,V_hasRestoreData
restoreDataSize
Tq,N,V_restoreDataSize
T@"NSError",&,N,V_error
(AH: T:%lld / D:%lld / B:%@)
T@"NSString",R,N,V_bundleID
%@: Checking purchase history for %lu items
ownsCheck
bundle-owns-check
bids
%@: Found %lu purchased items
T@"SSAuthenticationContext",R
purchaseHistoryItems
purchasedItems
diskUsage
hasConsumedData
overrideProgress
TB,N,V_overrideProgress
percentComplete
resumptionOffset
%@: Checking %lu hashes with chunk size: %lld for file: %@
%@: Could not open asset to check hashes: %@
%@: Could not malloc data buffer to check hashes
%@: Read failed during hash check: %@
%@: Got md5: %@ when expecting md5: %@
filePath
hashes
numberOfBytesToHash
T@"ISDialog",R
displaysOnLockscreen
dialogResponse
T@"SSVDialogResponse",R,C
Scratch
[%@]: Could not exclude path from backup: %@
[%@]: Could not look up path to scratch container: %llu
resultingError
soonestExpiring
T@"LSApplicationProxy",&,N,V_soonestExpiring
soonestExpirationDate
T@"NSDate",&,N,V_soonestExpirationDate
expiring
T@"NSSet",R,N,V_expiring
refreshed
T@"NSSet",R,N,V_refreshed
T@"NSSet",R,N,V_revoked
PASSCODE_CANCEL
PASSCODE_OK
tokenBlock
com.apple.message-payload-provider
%@: Fetching enabled kinds
%@: Could not fetch kinds: %@
enabled-media-kinds
%@: Found enabled kinds: %@
_MediaContentTasteUpdateResponseTimeIntervalSinceReferenceDate
preference-service-scheduled-sync-period-in-minutes
preference-service-sync-url
[%@] Refresh interval in the bag (%lf), setting syncInterval to %lf
If-None-Match
If-Match
application/x-protobuf
B16@?0@"SSVMediaContentTasteItem"8
SSVMediaContentTasteItemTasteTypeToMPMediaEntityLikedState
[%@] Operation was created without an active account, sending error.
[%@] Returning response: %@, error: %@
[%@] Entity with persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
[%@] Entity with persistenID: %lld is imported and liked state updated from: %lld to: %lld for property: %@
[%@] Entity with persistenID: %lld is imported and liked state could not be updated from: %lld to: %lld for property: %@
[%@] Updating liked state for entity with persistenID: %lld of type %@ is not supported
MPMediaLibrary
[%@] processing %lu storeAdamId updates
NonMediaItemStoreAdamIds
longLongValue
[%@] Removing [Count:(%lu), items:(%@)] non media items from import list
subscription_store_item_id
SELECT item_pid, liked_state, store_item_id, subscription_store_item_id, store_saga_id, is_subscription FROM item_store JOIN item_stats USING (item_pid) WHERE 
[%@] processing tracks with pendingItemCount: %lu, currentBatchCount: %lu for property: %@
[%@] Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ will be imported to include subscription data source
[%@] Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ has a storeSagaID: %lld and will not be updated
[%@] Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
[%@] Track with storeItemID: %lld will be imported
v32@?0@"ML3DatabaseRow"8@"NSError"16^B24
[%@] Updated liked state to: %lld for track with persistenID:%lld
[%@] Error updating liked state to: %lld for track with persistenID:%lld
v32@?0@"NSNumber"8@"NSNumber"16^B24
[%@] processing albums with pendingItemCount: %lu, currentBatchCount: %lu
SELECT album_pid, liked_state, store_playlist_id, item_store.item_pid, item_store.store_saga_id, item_store.is_subscription FROM album JOIN item_store ON (album.representative_item_pid == item_store.ROWID) WHERE item_store.store_playlist_id
[%@] Album with albumStoreID: %lld, persistenID: %lld will be imported to include subscription data source
[%@] Album with storeItemId: %lld, albumPid: %lld, has storeSagaID: %lld and will not be updated
[%@] Album with storeItemId: %lld, albumPid: %lld, liked_state: %lld is imported and has the correct liked state
[%@] Album with storeItemID: %lld will be imported
[%@] Updated liked_state to:%lld for album with albumPid:%lld
[%@] Error updating liked_state to:%lld for album with albumPid:%lld
[%@] updated tracks:(%lu), updated albums:(%lu), new items to import[Count:(%lu), items:(%@)]
[%@] Error importing %lu tracks to the library. %@
[%@] Imported %lu mediaItems for %lu storeAdamIds
[%@] Not updating liked_state for track with persistentID: %lld, storeAdamID: %lld as it has a valid storeSagaID: %lld
[%@] StoreAdamIds (%@) are marked as non-importable and will not be retried
[%@] Error updating StoreAdamIds (%@) as non-importable
v24@?0@"NSArray"8@"NSError"16
[%@] Finished updating media taste for tracks/albums in %f seconds
[%@] processing %lu playlist updates
[%@] processing playlists with pendingplayListCount: %lu, currentBatchCount: %lu
SELECT container_pid, liked_state, cloud_global_id FROM container WHERE cloud_global_id
[%@] Container with PlaylistGlobalId: %@, persistentID: %lld, liked_state: %lld is imported and has the correct liked state
[%@] Ending loop with pendingplayListCount: %lu
[%@] Updated liked_state to:%lld for playlist with playlistID:%lld
[%@] Error updating liked_state to:%lld for playlist with playlistID:%lld
[%@] Playlist Import [Count:(%lu) - Ids:(%@)]
[%@] Error %@ adding tasty playlists
[%@] tasty playlist %@ was not imported
v32@?0@"NSString"8@"NSNumber"16^B24
v24@?0@"NSDictionary"8@"NSError"16
[%@] Finished updating media taste for global playlists in %f seconds
MediaContentTaste
SyncResponse-%llu
%{public}@: Failed to unarchive cached response. Error = %{public}@
%{public}@: Failed to archive cached response. Error = %{public}@
ETag
contentTasteItemUpdates
T@"NSArray",C,V_contentTasteItemUpdates
T@"SSVMediaContentTasteUpdateResponse",R,V_response
shouldInvalidateLocalCache
TB,V_shouldInvalidateLocalCache
invalidProductIdentifiers
uuid
otid
odate
rcpt
rdata
desc
hosted-id
hosted-version
hosted-content-length
disc
per-count
^v16@?0@"NSObject<OS_xpc_object>"8
B24@?0r*8@"NSObject<OS_xpc_object>"16
EBookManifest.m
Empty path
com.apple.itunesstored.EBookManifest
com.apple.books.plist.changed
Purchases.plist
Shared.plist
Books.plist
Purchases
%@: Removed manifest itemID entry at index: %ld
%@: Removed manifest permalink entry at index: %ld
%@: Could not serialize data: %@
%@: Could not write data: %@
%@: Invalidating after external change: %@
%@: Could not read data: %@
%@: Could not unserialize data: %@
manifestPath
Album
Artist
artwork-template-name
Copyright
DSID
AppleID
Flavor
Genre
Path
Human Readable Publication Version
isExplicit
isSample
iTunesU Permlink
Languages
PageProgression
Page Progression Direction
Persistent ID
PlaylistID
Publication Version
Release Date
Sort Album
Sort Artist
Sort Name
Storefront ID
Name
usesSharedAsset
com.apple.itunesstored.DownloadPipeline
CoreMediaErrorDomain
com.apple.itunesstored.DownloadPipeline.background
com.apple.itunesstored.DownloadPipeline.prepare
com.apple.itunesstored.DownloadPipeline.processing
com.apple.itunesstored.DownloadPipeline.discretionaryDownloads
com.apple.itunesstored.DownloadPipeline.nonDiscretionaryDownloads
[Download]: Adding download(s): %{public}@
[%@]: Adding download(s): %@
%@: Ignoring request to reprioritize download %@ for legacy client.
[Download]: Reprioritizing to high task: %lu for download: %@
%@: Not reprioritizing task for legacy client: %lu for download: %@
%@: Reprioritizing to default task: %lu to restart download: %@
[Download]: Reprioritized download: %@
%@: Cancel task: %lu to restart download: %@
%@: Stop preparation operation for download: %@
%@: Stop session: %lld for download: %@
%@: Stop task: %lu for download: %@
%@: Cancel operation: %@ for download: %@
[Download]: Fail download: %lld after session error: %{public}@
v16@?0@"FinishDownloadOperation"8
[Download]: Consumer failed for task: %lu for download: %lld with error: %@
%@: Did not receive partial content response for task: %lu
%@: Restart task: %lu after 408 response
%@: Truncate and restart task: %lu after 416 response
%@: Cancel download task: %lu for invalid HTTP status code: %ld
X-Apple-JADownloadQueue-Token
Retry-After
[Download] URLSession task complete. task=%@
[Download] Received task did finish with no task state: %lu, error: %@
[Download]: Restarting download: %lld after task cancel: %lu
[Download]: Download task did finish: %lu for download: %lld
[Download]: Restarting podcast download %lld with a wifi only policy after task cancelled because the file was too large to download over cellular: %lu
[Download]: Download task failed: %lu for download: %lld with error: %@
[Download]: task: %lu, for download: %lld, after local cache failure
[Download]: Falling back to file download: %lld, after error: %@
v24@?0q8@"NSURLCredential"16
[Download]: Cancel local-cache download: %lld, for error: %@
[Download]: Retry scheduled for task: %lu, download: %lld, error: %@
[Download]: Reset data consumer for task: %lu, with resumption offset: %llu
bytes=%llu-
Range
%@: Providing resumption offset: %llu for task: %lu
%@: Removed resumption offset for task: %lu
[Download] Cancelling task: %lu for download: %lld due to error: %@
v24@?0@"ExpiredDownloadRecoveryOperation"8@"ExpiredDownloadRecoveryResponse"16
com.apple.itunesstored.DownloadPipeline.auth
%@: Set download progress: %lld [%.2f, %.2f sec]
[Download] Fail download: %lld after disavow from required handler
[Download]: Ignoring finish result after download removed: %lld
[Download]: Fail download: %lld after error: %{public}@
[%@]: Fail download: %lld after error: %@
[Download]: Cancel failed download: %lld after error: %{public}@
[%@]: Cancel failed download: %lld after error: %@
[Download]: Saved safe harbor data for download: %lld with bundleIdentifier: %@
[Download]: Cancel failed download due to verfication error: %lld after error: %@
[Download]: Download operation complete for download: %lld
%@: Starting handler: %lld for download: %lld
%@: Set download token: %llu for asset: %lld of download: %lld
%@: Skipping changing asset: %lld to downloading phase because download: %lld was cancelled
[Download]: Finshing prepare with 0 download ID
[Download]: Created Scratch directory: %@ for download: %lld bundleIdentifier: %@
[Download]: Created Scratch directory: %@ for download: %lld
[Download]: About to set download phase and apply resource loader if is HLS: %d
[Download]: Updated per device download: %lld restore state to: %@
[Download]: Processing download after "finish only" response: %lld
[Download]: Cancel download after failed prepare: %lld
[Download]: Queue download: %lld to discover assets later.
[Download]: Fail download after failed prepare: %lld
[Download]: Starting handler: %lld for download: %lld
[Download]: Starting task: %lu with priority: %ld for download: %lld in session: %{public}@
[%@]: Starting task: %lu with priority: %ld for download: %lld in session: %@
[Download]: download task creation complete task=%@
[Download]: Fail download %lld after recovery attempt
[Download]: Cancel download %lld after recovery attempt
[Download]: Ignoring authentication challenge for download %lld
[Download]: Supressing authentication challenge for download %lld
v24@?0@"PrepareDownloadOperation"8@"PrepareDownloadResponse"16
v24@?0@"PrepareDownloadOperation"8^B16
v24@?0@"FinishDownloadOperation"8@"FinishDownloadResponse"16
User Stopped
Unrecoverable Error
Download Error
[Download]: Download Failed for download: %lld reason: %@
%@: Reconnect with nsurlsessiond
[Download]: Setting phase with download ID of 0
[Download]: waiting for task completion
[Download]: download task complete!
T@"PrepareDownloadResponse",&,V_response
waitForDownload
TB,V_waitForDownload
com.apple.itunesstored.DistributedNotificationCenter
DistributedNotificationObservers
%@: Register observer: %@ / %@
%@: Unregister observer: %@ / %@
observedNotificationNames
com.apple.itunesstored.KeyValueObserver
T@?,R,N,V_block
keyPath
T@"NSString",R,N,V_keyPath
object
T@,R,N,V_object
com.apple.itunesstored.EventMonitor
EventMonitor
%@: Scheduling poll in %.2f seconds
_lastOccurrenceCheckTime
Td,N,G_lastOccurrenceCheckTime,S_setLastOccurrenceCheckTime:,V_lastOccurrenceCheckTime
hasOccurred
pollInterval
Tq,N,V_pollInterval
shouldKeepDaemonAlive
TB,N,V_shouldKeepDaemonAlive
testBlock
T@?,C,N,V_testBlock
RestoreAccountIDs
accountCount
dataError
hardError
installError
RestoreItemKinds
%@.itemCount.total
com.apple.itunesstored.restore
%@.itemCount.%@
softError
RestoreStoreFrontIDs
storeFrontCount
%@.successCount.%@
transferError
%@.%@.%@.%@.%ld
%@.%@.%@.total
com.apple.itunesstored.EventDispatcher
%@: Posting event: %@
%@: Cannot register unentitled event monitor: %@
%@: Registered event monitor: %@
assertion
tcc-acceptance-date
createMusicToken
error_description
music_token
%{public}@: Got 403 status code while requesting user token for bundle ID: %{public}@. Just reset TCC access with status: %{public}@.
clientToken
requestingBundleID
requestingBundleVersion
responseBlock
ICDefaults
/System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud
StoreKitClientPaymentOptionSupportsDeferredPayment
StoreKitClientPaymentOptionGrandfatherRequestData
StoreKitClientRefreshDidFinishNotification
com.apple.itunesstored.StoreKitClient.%p
com.apple.itunesstored.StoreKitClient.external.%p
%{public}@: Adding payment: [%ld, %@] for client: %@
[%{public}@]: No DB client object ID when adding payment
%{public}@: Not allowed to make payment: %@
AllowStoreKitPaymentWithRequestDataWithoutEntitlement
%{public}@: Allowing payment request without entitlement on internal device from unentitled client: %@
%{public}@: Payment has request data from unentitled client: %@
%{public}@: Cancel %lu downloads for client: %@
%{public}@: Adding client to DB: %d / %@ / %@
%@: Pause %lu downloads for client: %@
%{public}@: Ignoring repeat restore request: %@
%{public}@: Not allowed to restore transactions: %@
v16@?0@"MicroPaymentQueueResponse"8
%{public}@: Restoring completed transactions for client: %@
%{public}@: Resume %lu downloads for client: %@
%{public}@: Starting %lu downloads for client: %@
%{public}@: Adding %lu new downloads for client: %@
%{public}@: Requesting privacy acknowledgement for payment: %@
%{public}@: Buying payment: %@
%{public}@: Finishing payment: %@
[%{public}@]: Sending purchase intents for client: %{public}@, successfully looked up products: %{public}@
[%{public}@]: Sending purchase intents for client: %{public}@, product lookup failed with error: %{public}@
%{public}@: Finishing unknown payment: %@
%{public}@: Finishing for state: %ld, payment: %@
%{public}@: Finishing purchased payment: %@
%{public}@: Received finish for payment that is finishing or finished: %@
%{public}@: Canceling %lu downloads
%{public}@: Buy failed with error: %{public}@ for payment: %@
%{public}@: Buy finished for payment: %@
%{public}@: Deleting payment after finish: %@
%{public}@: Flagging payment as transient failed: %@
(downloadID=%@) AND (payment.client=%@)
com.apple.itunesstored.StoreKitClient
%{public}@: Refresh failed with error: %@: %{public}@
%{public}@: Refresh finished: %@
%{public}@: Restore completed transactions finished for client: %@
%{public}@: Restore completed transactions failed for client: %@ with error: %{public}@
StoreDemoMode
com.apple.demo-settings
%{public}@: Received restore batch response for client: %@
%{public}@: Client checked in mid-refresh: %@
%{public}@: Tried to refresh from server, but either had no payments or no usable DSIDs
%{public}@: Refreshing from server (%ld; %@; %@)
%{public}@: Privacy acknowledgement completed for payment: %@
%{public}@: Privacy acknowledgement failed with error: %{public}@ for payment: %@
MICRO_PAYMENTS_RESTRICTED_BODY
MICRO_PAYMENTS_RESTRICTED_TITLE
microPaymentClientID
T@"NSManagedObjectID",R
XPCClient
T@"XPCClient",&
clientState
TB,R,GisSandboxed
firstReadyPaymentID
openTransactions
MCFeatureInAppPurchasesAllowed
com.apple.itunesstored.StoreKitClient.completion
en_US_POSIX
yyyy-MM-dd HH:mm:ss ZZZ
X-Request-TimeStamp
nearby-apps
AppStore
storefront-header-suffix
v24@?0@"SSLookupResponse"8@"NSError"16
%@: Performing location lookup
storeplatform-lookup-url
%@: Performing platform lookup
%@: Authenticating to personalize response
%@: Authentication failed: %@
%@: Authenticated for account: %@
%@: Performing personalization lookup
lookupProperties
T@"SSLookupProperties",R
shouldSuppressCookies
personalizationStyle
lookupResponse
T@"SSLookupResponse",R
is32BitOnly
rating_label
rating_rank
thinned-assets
v24@?0q8^B16
software
vpn-plugin
bundle-version
has-messages-extension
launch-prohibited
display-image
needs-shine
UINewsstandBindingEdge
UINewsstandBindingType
messages-display-image
T@"NSArray",C,N,V_assets
downloadPolicy
T@"SSDownloadPolicy",C,N,V_downloadPolicy
com.apple.itunesstored.cancelError
com.apple.itunesstored.cancelReason
com.apple.itunesstored.dataConsumer
systemgroup.com.apple.media.shared.books
META-INF
sinf.xml
%@: We have a normal download: %lld
iTunesArtwork
%@: Writing EPR data for download: %lld to path: %@
%@: Error EPR data for download: %lld to path: %@ error: %@
Using system group container path is %s
Staging
Error getting system group container: %llu
Using system group container path is: %s
%@: Updating purchase manifest at shared path: %@
%@: Updating shared manifest at path: %@
%@: Updating purchase manifest: %@
%@: Moved file URL: %@ to downloads directory: %@
%@: Could not install non-existant file: %@
%@: Saving Book to : %@
%@: Book already at destination: %@
%@: Moving file: %@ to path: %@
%@: Installed file: %@
epub
ibooks
%@: Failing install after unzip failure for file: %@, error: %@
privacyAcknowledgementUrl
%{public}@: Privacy prompt operation completed with result: %{public}@, error: %{public}@
%{public}@: Remote handle did deactivate
%{public}@: Remote handle did invalidate with error: %{public}@
%{public}@: Error fetching bag
privacyIdentifier
T@"NSString",C,N,V_privacyIdentifier
privacyPromptSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_privacyPromptSemaphore
completion
T@?,C,V_completion
full-size-image
software-package
vpn-plugin-package
newsstand-image
transit-data
asset-pack-manifest
variantIds
md5s
md5-size
%@ [url = %@, variantID = %@]
%@: Running claim with body: %@
up-to-date-claim
authenticationReasonDescription
T@"NSData",&,N
suppressesErrorDialogs
%@: Validation failure. sourceURL required for bundleIdentifier: %@
%@: Download was incomplete for bundlerIdenfier: %@ path: %@
%@: Invalid scratch directory for bundlerIdenfier: %@ path: %@
%@: Failed to extract Info.plist for bundleIdentifier: %@
%@: Invalid archive for bundlerIdenfier: %@ path: %@
%@: Invalid path for bundlerIdenfier: %@ path: %@
%@: Scratch directory for %@ result: %d
Payload
.app
%@: appName: %@
%@: App payloadDirectory: %@
Info.plist
%@: Info.plist path: %@
%@: Warning: bundleVersion: %@ does not match expected bundleVersion: %@
%@: Failed bundleIdentifier: %@ does not match expected bundleIdentifier: %@
%@: Unable to load application meta data to verify bundleIdentifier: %@
%@: Unable to locate application meta data to verify bundleIdentifier: %@
bundleFileType
Ti,N,V_bundleFileType
sourceURL
T@"NSString",C,N,V_sourceURL
Failed to open %s : %s
Failed to read %lu bytes (got %ld) from start of %s : %s
File starts with 0x%02hhx%02hhx%02hhx%02hhx; expected 0x%02hhx%02hhx%02hhx%02hhx
com.apple.streamingzip.incomplete_extraction
Got unknown error from getxattr when checking for %s on %s : %s
scratch
.app/Info.plist
%@: Preparing to rescue application with bundleID: %@
%@: Attempting rescue restore for bundleID: %@
%@: Rescue restore attempt for bundleID: %@ failed due to error: %@
%@: iTunes sync in progress for bundleID: %@
%@: Restore in progress for bundleID: %@
%@: Application does not need rescue, bundleID: %@ is already installed!
%@: Cannot find application with bundleID: %@
T@?,C,N
artist
artist_id
order_index
upload_id
activityId
pollDuration
pending
processing
published
success
serviceErrorLabel
serviceErrorMessage
FacebookError
FacebookAuthError
InvalidArgument
MissingParameter
NotAuthorized
ResourceAlreadyExists
TwitterAuthError
TwitterError
activityURL
T@"NSURL",C,N,V_activityURL
Td,N,V_pollDuration
T@"NSString",C,N,V_status
T@"NSString",C,N,V_serviceErrorLabel
T@"NSString",C,N,V_serviceErrorMessage
statusCode
Tq,N,V_statusCode
SpringBoardUtilityApplicationStateChangeNotification
com.apple.itunesstore.SpringBoardUtility
com.apple.itunesstore.SpringBoardUtility.springboard
com.apple.itunesstore.notifications
%@: Activating alert: %@
com.apple.ios.StoreKitUIService
Snapshots
%@: Removing snapshots at path: %@
%@: Invalid value type for badge (%@, %@)
AppWakeup
%@: Could not launch: %@: %@
%@: No pid for display ID: %@
%@: Taking process assertion: %@ for: %.2f seconds with reason: %@
%@: Could not take process assertion: %@
%@: Releasing power assertion: %@
[%@]: SSClient requested to set badge of %@ to '%@'
ServiceTouchIDAlertViewController
account@example.com
Touch ID
Use Password
Cancel
v16@?0@"SSXPCConnection"8
%@: Plugin connection disappeared: %@
%@: Registered plugin connection: %@
%@: Requesting plugin connection
com.apple.itunesstored.sbplugin.requestconnection
%@: Plugin timeout with connection: %@
frontmostClientIdentifier
screenLocked
TB,R,GisScreenLocked
options
T@"NSDictionary",C,N,V_options
viewControllerName
T@"NSString",C,N,V_viewControllerName
timeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimer
com.apple.itunesstored.DownloadController
com.apple.itunesstored.DownloadController.external
com.apple.itunesstored.SSDownloadManager.downloadCompleted.%@
SSDownloadQueue
%@: Unable to rescue VPP Applicaton with bundleID: %@
%@: Reset %ld downloads after prioritize
[Download]: User triggered prioritization but placeholder has no corresponding download.
%@: Canceling all %lu downloads for %@
v24@?0@"DownloadManagerClient"8@"NSObject<OS_xpc_object>"16
%@: Finishing %lu downloads for client: %@
v24@?0@"NSIndexSet"8@"NSArray"16
v24@?0q8r^@16
insert download via SSDownloadManager
%{public}@: Inserting %lu downloads for %{public}@
%{public}@: Download insert failed with error code: %ld client: %{public}@
%@: Updated download with final phase: %@ downloadID: %@
%@: Updated download with phase: %@ downloadID: %@
v16@?0@"DownloadManagerClient"8
%@: No endpoint for client manager: %@
%@: No client identifier for client manager
%@: Could not create connection for endpoint: %@
%@: Registered client: %@, %@, %@
%@: Setting handler: %lld for download: %lld client: %@
%@: Failed to apply download handler: %@
%@: Replacing %lu downloads with %zu downloads for client: %@
%@: Cancel %lu downloads for client: %@
%@: Retry %lu downloads for client: %@
%@: No endpoint for asset handler: %lld
%@: Could not create connection for endpoint: %lld
%@: Finish session %lld with type %lld
%{public}@: Failed to unarchive credential. Error = %{public}@
%{public}@: Failed to archive auth challenge. Error = %{public}@
%@: Changing handler properties: %lld, %@
v16@?0@"DownloadHandlerClient"8
%@: Canceling download %@ for client: %@
%@: Cancel requested for a non-cancellable download %@ for client: %@
%@: Pausing %ld downloads for %@, forced: %d
[%@]: Ignoring pausing of software downloadID: %@
%@: Can't pause download: %lld
%@: Can't pause phase: %@
[%@]: Unable to prioritize software downloadID: %@
[Download]: Attempting rescue restore for bundle ID: %@
%@: Rescue for %@, success: %d, error: %@
%@: Ignoring rescue for %@, operation already queued.
%@: Resuming %lld downloads for %@
[%@]: Unable to resume software downloadID: %@
%@: Restarting %lld downloads for %@
[%@]: Unable to restart software downloadID: %@
%@: Retrying all failed restore downloads
com.apple.itunesstored.Daemon
Oct  7 2020
02:34:51
%@: Starting... (Built: %s %s)
%@: Starting XPC server
com.apple.itunesstored.launch
%@: Started
change-language
%{public}@: Failed to get the change-language URL from the bag. error = %{public}@
%{public}@: Failed to get the trustedDomains from the bag. error = %{public}@
%@: battery saver mode started
battery saver mode started
%@: battery saver mode ended
battery saver mode ended
Removing default png snapshots after storefront change
[%@]: Received low memory warning
com.apple.itunesstored.keepQueuesAlive
Logs
changeLanguageURL
Daemon: Setup finished
Daemon: Not performing silent auth because setup has not finished
Daemon: Attempting to perform silent auth.
Daemon: There's no active iTunes account. Trying to find an inactive iTunes account matching the active iCloud account.
B16@?0@"ACAccount"8
Daemon: We don't have an iTunes account to perform the silent auth with.
Daemon: Failed to fetch IDMS account with error: %{public}@
Daemon: Setting PET to nil
Daemon: Skip Setting PET to nil
v16@?0@"AMSAuthenticateResult"8
Daemon: Device offers auth succeeded with result: %{public}@
Daemon: Device offers auth failed with error: %{public}@
[ApplicationWorkspace]: Restoring placeholder for %@
[ApplicationWorkspace]: Updating placeholder for %@
restored
updated
[ApplicationWorkspace]: Placeholder %@ for %@ success: %d
[ApplicationWorkspace]: Placeholder not installed for %@ because application not installed
T@"NSString",C,N,V_requestIdentifier
CREATE TABLE IF NOT EXISTS purchase_intents_table (product_identifier TEXT, app_bundle_id TEXT, timestamp INTEGER, pid INTEGER PRIMARY KEY, product_name TEXT, app_name TEXT);
CREATE TABLE IF NOT EXISTS install_attribution_params_table (app_adam_id INTEGER PRIMARY KEY, ad_network_id TEXT, campaign_id INTEGER, impression_id TEXT, timestamp INTEGER, attribution_signature TEXT, local_timestamp INTEGER);
CREATE TABLE IF NOT EXISTS install_attribution_pingback_table (app_adam_id INTEGER PRIMARY KEY, ad_network_id TEXT, campaign_id INTEGER, transaction_id TEXT, attribution_signature TEXT, pingback_url TEXT, pending INTEGER, retry_count INTEGER, local_timestamp INTEGER);
[%{public}@] No Purchase Intent Database migration function for %li => %li
[%{public}@] Failed updating Purchase Intent Database to version %li
purchase_intents.sqlitedb
ALTER TABLE purchase_intents_table ADD COLUMN product_name TEXT;
ALTER TABLE purchase_intents_table ADD COLUMN app_name TEXT;
ALTER TABLE install_attribution_params_table ADD COLUMN local_timestamp INTEGER;
ALTER TABLE install_attribution_pingback_table ADD COLUMN retry_count INTEGER;
DROP TABLE install_attribution_params_table;
DROP TABLE install_attribution_pingback_table;
ALTER TABLE install_attribution_pingback_table ADD COLUMN local_timestamp INTEGER;
[%@]: Adding download with bundleID: %@
[%@]: Skipping store download %@ due to lack of bundleID
[%@]: Skipped over unexpected download kind %@
ASDJobManifest
%{public}@: Failed to archive policy. Error = %{public}@
pipeline
T@"DownloadPipeline",R,N,V_pipeline
policyManager
T@"DownloadPolicyManager",R,N,V_policyManager
activeDownloadIdentifiers
T@"SSSQLiteDatabase",&,N,V_database
externalState
T@"ExternalDownloadState",&,N,V_externalState
T@"DownloadPipeline",&,N,V_pipeline
T@"DownloadPolicyManager",&,N,V_policyManager
com.apple.MobileAsset
%@: Preparing download: %lld
%@: Flagging download %lld asset: %lld as not downloaded
%@: Download %lld asset: %lld is already downloaded
%@: Ignoring software download: %lld
%@: Skip prepare for finished download: %lld
%@: Cancel download that exists in library: %lld
%@: Cancel invalid automatic download: %lld
%@: Flagging as "finish only" for hard-failed restore download: %lld
%@: Keeping no asset download safe harbor data with finish only for download: %lld bundleID: %@
%@: Updated download: %lld bundleID: %@ to only restore data
%@: Skip prepare for download with no media asset: %lld
%@: Flagging download %lld as "finish only", already have asset: %lld
%@: Skipping prepare for file URL download: %lld
%@: Keeping safe harbor data with finish only for atc download: %lld bundleID: %@
[%{public}@] Skipping AV asset download for podcast restore download: %lld asset: %lld
%@: Asking data consumer to override progress value
%@: Fail download without enough disk space: %lld
com.apple.podcasts
%@: Set infersdiscretionary for podcast download: %lld
localhost
[Download]: No download policy was set for video download.  Looking up whether cellular is allowed from TV app prefs
CellularDataModeDownload
com.apple.videos-preferences
BestQualityDownload
DownloadQualityWifi
DownloadQualityCellular
[Download]: Cellular data status: %d for asset: %lld of size: %lld, %lld
Content-Range
%@: Using media asset: %lld, for download: %lld, is local cache: %d, URL: %@
%@: No local cache URL for asset: %lld, error: %@
%@: Replacing URL for asset: %lld, with local cache URL: %@
v32@?0^{__CFURL=}8^{__CFDictionary=}16^{__CFError=}24
HEAD
%@: Running HEAD operation to get size for asset: %lld
%@: Found size: %lld for asset: %lld
%@: Failed to find size for asset: %lld error: %@
[Download]: Podcast Request allows cellular for %lld
[Download]: Setting podcast request cellular size limit to %lld for %lld
purchaseHistory
match
movie
music
musicvideo
tvshow
SZExtractorOptionsHashType
SZExtractorHashTypeMD5
SZExtractorHashTypeSHA1
SZExtractorOptionsHashesArray
SZExtractorOptionsHashedChunkSize
SZExtractorOptionsDenyInvalidSymlinks
%@: Setting timeout interval to %d for podcast restore: %lld
MCFeatureITunesAllowed
MCFeatureBookstoreAllowed
%@: Determined asset size to be %llu bytes
%@: Discovered %llu bytes already transfered
%@: Accounted for %llu bytes of initial ODR
%@: Not enough disk space for %lld/%lld, only %llu is available: %@
v28@?0C8Q12^{__CFError=}20
ignoresDownloadHandler
com.apple.itunesstored.
discretionary.
infersdiscretionary.
powered.
wifi.
resource_timeout_%f.
timeout_%f.
default
[Download]: Looking for existing task: %lu for download: %lld in session: %{public}@
[Download]: Request for existing tasks timed out when looking for existing task: %lu for download: %lld in session: %{public}@
[Download]: We have a task to evaluate: %lu
[Download]: Task %lu is an aggregate download: %d
[Download]: Reusing existing task: %lu for download: %lld in session: %{public}@
[Download]: Ignoring existing task: %lu for download: %lld in session: %{public}@
AVAssetDownloadSessionOptions
T@"NSDictionary",C,N,V_AVAssetDownloadSessionOptions
bytesPerSecondLimit
Tq,N,V_bytesPerSecondLimit
clientSecondaryIdentifier
T@"NSString",C,N,V_clientSecondaryIdentifier
dataConsumer
T@"DownloadDataConsumer",&,N,V_dataConsumer
infersDiscretionary
TB,N,V_infersDiscretionary
discretionary
TB,N,GisDiscretionary,V_discretionary
destinationPath
T@"NSString",C,N,V_destinationPath
TB,N,GisHLS,V_isHLS
loadingPriority
T@"NSNumber",C,N,V_loadingPriority
requiresPowerPluggedIn
TB,N,V_requiresPowerPluggedIn
taskPriority
Tq,N,V_taskPriority
taskIdentifier
T@"NSNumber",C,N,V_taskIdentifier
timeoutIntervalForResource
Td,N,V_timeoutIntervalForResource
timeoutIntervalForRequest
Td,N,V_timeoutIntervalForRequest
T@"NSURLRequest",C,N,V_URLRequest
hasHDR
TB,N,V_hasHDR
has4K
TB,N,V_has4K
T@"NSString",C,N,V_kind
backgroundOperations
T@"NSArray",C,N,V_backgroundOperations
numAudioSelectionsToBeDownloaded
TQ,N,V_numAudioSelectionsToBeDownloaded
numSubtitleSelectionsToBeDownloaded
TQ,N,V_numSubtitleSelectionsToBeDownloaded
TB,N,V_ignoresDownloadHandler
TB,N,GisLegacyClient,V_legacyClient
mediaAssetSize
Tq,N,V_mediaAssetSize
Tq,N,VrentalIdentifier
Tq,N,V_storeItemIdentifier
T@"NSString",C,N,V_title
URLSessionIdentifier
downloadRestoreState
T@"NSNumber",C,N,V_downloadRestoreState
isPerDeviceVPP
TB,N,V_isPerDeviceVPP
itml-app-urls
manifestURL
T@"NSURL",&,N,V_manifestURL
bundledManifestURL
T@"NSURL",&,N,V_bundledManifestURL
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_userAgent
scheduledInBackground
TB,N,V_scheduledInBackground
T@?,C,N,V_completion
com.apple.itunesstored.UpdatableAssetController
com.apple.itunesstored.updatable-assets-refresh
[%@ _scheduleUpdateAssetsOperationWithManifestURL] manifestURL: %@, bundledManifestURL:%@, clientIdentifier: %@, userAgent: %@, scheduledInBackground: %@
[%@ _scheduleUpdateAssetsOperationWithManifestURL] network type is none, so deferring
[%@ _scheduleUpdateAssetsOperationWithManifestURL] defer background task until we have wifi, so deferring
v24@?0@"NSError"8@"NSString"16
[%@ _scheduleUpdateAssetsOperationWithManifestURL] error performing asset garbage collection for client: %@ %@
[%@] Bag did load: [kUpdatableAssetManifestBagKey: %@]
MusicUISupport
manifest.json
[%@ _networkTypeChangedNotification]
com.apple.itunesstored.UpdatableAssetController.updateAssets
com.apple.itunesstored.ReceiptRevocation
com.apple.itunesstored.AppReceiptController
[%@]: Cannot register unentitled event monitor: %@
StoreKit
[%@]:  Responding to XPC -- NOOP SSXPCMessageRefreshAllAppReceipts
[%@]: Responding to XPC -- NOOP SKXPCMessageRefreshReceipt [%@]
com.apple.itunesstore.AppReceiptController.self
com.apple.itunesstored.MetricsController
sendDisabled
%{public}@: Operation failed with no dialog event to report
[%@] Insert Events received through XPC: %d requested by [%@]
%{public}@: Failed to find metrics dialog event
[%@] Ignore report event for request during backoff for client: %@
[%@] Report Events requested by [%@]
com.apple.itunesstored.MetricsController.report
[%@] ignoring request to report events, since there already are %@ operations queued
%{public}@: Maximum event count reached. Flushing %ld unreported events
%{public}@: Event count: %ld
[%@] Giving up after %ld retries
[%@] Scheduling backoff retry in %ld minutes
T@"SSAccount",R,N,V_account
T@"NSURL",R,N,V_URL
account.upToDateClaim
%@: Redirecting claim to URL: %@
redirectedClaimURL
T@"NSURL",C,V_redirectedClaimURL
assetToken
T@"NSString",C,N,V_assetToken
assetTokenType
T@"NSString",C,N,V_assetTokenType
uploadTime
Td,N,V_uploadTime
InAppReviewRequest
%@%@%@
rated
activities
%@: Polling status for activity: %@
activityStatus
statusPollRequests
T@"NSArray",R,C
download_policy
policy_data
ExplicitOffAndPreferencesEnabled
ExplicitOffAndPreferencesDisabled
ExplicitPreferenceManagerDefaultsKeyExplicitOff
ExplicitPreferenceManagerDefaultsKeyExplicitPreferencesDisabled
%{public}@: Explicit restriction preference setting changed to `disabled` for this storefront. Disallow all explicit content and hide the preference.
%{public}@: Explicit restriction preference setting changed to `enabled` for this storefront. Configure default values and show the preference.
ITUNES_STORE
%{public}@: No explicit restriction in place. Setting to [bagExplicitOff: %d]
%{public}@: User hasn't overriden explicit restriction, but bag default has changed. Setting new restriction to [bagExplicitOff: %d]
%{public}@: No need to update explicit restrictions. [isUserOverriden: %d, bagValueChangedSinceLastChangeInducingExplicitOff: %d]
com.apple.itunesstored.RemoteWebView
%{public}@: Presenting remote SKUI with URL: %{public}@
%{public}@: Error presenting remote SKUI view controller. Error: %{public}@
%{public}@: Remote SKUI view controller presented
%{public}@: Remote handle did activate
alertSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_alertSemaphore
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
didActivate
TB,N,V_didActivate
activationHandler
T@?,C,N,V_activationHandler
T@"SSRemoteWebViewRequest",R,N,V_request
systemgroup.com.apple.ondemandresources
systemgroup.com.apple.media.books.managed
Updates
%@: Warning: Reverting to default behavior due to the shared documentsPath: %@ not matching the shared container path: %@
%@: Using document path: %@ with container relative path: %@
%@: Unzip document for download: %lld, at path: %@
%@: Error: file exists at document path: %@
%@: Created document path: %@ error: %@
%@: Moved staged download: %lld from source: %@ to document path: %@ result: %d
%@: Installed document for download: %lld at path: %@
[%@] Staging path set to: %@
[%@] Error: Unable to get staging path for relative path: %@
%{public}@: Failed to unarchive download policy. Error = %{public}@
policyData
T@"NSData",C,N
T@"SSDownloadPolicy",R,N
%@: Adding download policy %@ with size limit %lld
%@: Initialized with %lu download policies
downloadsDatabase
T@"DownloadsDatabase",R,W,N,V_database
policyIdentifiers
T@"NSSet",C,N,V_policyIDs
changesetType
Ti,N,V_changesetType
downloadPropertiesForStoppedDownloads
T@"NSDictionary",C,N,V_downloadProperties
networkType
Tq,N,V_networkType
com.apple.itunesstored.DownloadHandlerManager
com.apple.itunesstored.DownloadHandlerManager.observers
%@: Adding download handler: %@, %@
%@: Begin session with ID: %lld
%@: Client handler returned NO for open session: %lld
%@: Cancel authentication session with ID: %lld
%@: Cancel session with ID: %lld
%@: Continue authentication session with ID: %lld
%@: Disavow session with ID: %lld error: %@
%@: Disconnect session with ID: %lld
v32@?0@8@"DownloadHandlerClient"16^B24
%@: Fail session with ID: %lld error: %@
%@: Finish session with ID: %lld
%@: Pause session with ID: %lld
%@: Perform default authentication for session with ID: %lld
%@: Reject space for authentication session with ID: %lld
%@: Release session with ID: %lld
%@: Reset %ld disavowed properties for client: %@
%@: Retry session with ID: %lld
%@: Removing download handler for client: %@
%@: Using download handler %lld for client: %@
%@: Use credential: %@ for session with ID: %lld
%@: Disconnecting %lu sessions for client: %@ after 20 seconds
%@: Timing out sessions for client: %@
%@: Send session message: %lld to client: %@
%@: Running download phase: %@ for download: %lld
v32@?0@"FinishDownloadStepOperation"8Q16^B24
[ApplicationWorkspace] Install complete for download: %lld result: %@
[%@]: Download complete for download: %lld result: %@
Failed
Asset Blocked
Download Removed
Failed Permanently
Success
Using Handler
Failed Installation Verfication
Finish download result keeping safe harbor data
Unknown
Restore Data Hard Fail
Restore Data
Install
[ApplicationWorkspace] Installing download: %lld with step(s): %@
handlerReleasedDownloadPhase
initialDownloadPhase
sessionProperties
T@"DownloadSessionProperties",R,N,V_sessionProperties
sessionID
Tq,R,N,V_sessionID
activeHandlerIdentifier
Tq,N,V_activeHandlerIdentifier
blocksOtherDownloads
TB,N
canBePaused
needsPowerAssertion
Tf,N
sessionState
Tq,N
statusDescription
URLCredential
T@"NSURLCredential",C,N,V_urlCredential
blocks
pausable
needspowerassert
percent
watch-metrics-api-endpoint
[%@] Running report
v32@?0@"SSWatchMetricsEvent"8Q16^B24
[%@] Not running report
controller
T@"SSWatchMetricsEventsController",R,N,V_controller
%@: No session for properties: %@
%@: Launched download handler: %@
T@"DownloadSessionProperties",R
downloadSessionState
T@"NSURLCredential",R
[%@]: Failed Placeholder for %@
changeset
T@"DownloadsChangeset",R,C,N,V_changeset
T@"ApplicationHandle",C,N,V_applicationHandle
completedUnitCount
Tq,N,V_completedUnitCount
totalUnitCount
Tq,N,V_totalUnitCount
AMSDeviceBiometricsState
com.apple.AppleMediaServices
%{public}@: Clearing biometric account identifier
BiometricAccountID
BiometricKit
BiometricStateEnabled
%{public}@: AMS Identity map lookup failed with error: %{public}@
%{public}@: Failed to query public key for purchase with error: %{public}@
%{public}@: Failed to query public key for extended actions with error: %{public}@
%{public}@: Resetting biometrics for DSID: %@
BiometricState
DaemonBiometricStore: [%{public}@] tokenUpdateDidFinish
BiometricTokenUpdateTime
DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Current Time: %{public}@
DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Found value: %{public}@
DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Should cancel update
DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: No value found
DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Writing value: %{public}@
DaemonBiometricStore: tokenUpdateState: Current time: %{public}@
DaemonBiometricStore: tokenUpdateState: Found value: %{public}@
DaemonBiometricStore: tokenUpdateState: Should cancel update
DaemonBiometricStore: tokenUpdateState: No value found
%{public}@: Failed to find touchID continue token
%{public}@: Failed to find DSID
%{public}@: Looking up biometric HTTP headers for token: %{public}@, DSID: %@
%{public}@: Looking up biometric authentication context for token: %{public}@
%{public}@: Key count failed with no account identifier
%{public}@: Retrieved biometric state: %{public}@
%{public}@: Falling back to unknown state
Not Available
Set-allowed for biometrics has been deprecated
%{public}@: Disable biometrics for client: %{public}@
%{public}@: Enable biometrics for client: %{public}@
com.apple.purplebuddy
%{public}@: Reset keychain tokens failed while disabling biometric state for DSID: %@, error: %{public}@
%{public}@: Resetting biometrics for account %@, client = %{public}@
com.apple.itunesstored.DaemonBiometricStore.updateToken
biometricState
canPerformBiometricOptIn
isBiometricStateEnabled
lastRegisteredAccountIdentifier
DelayedGoto
body
delay
apnsToken
v16@?0@"NSMutableDictionary"8
%@: Waiting up to %.2f seconds for push: %@
%@: Waiting for %.2f seconds
com.apple.itunesstored.DelayedGotoSemaphore
bodyDictionary
T@"NSDictionary",R,N,V_bodyDictionary
T@"NSURL",R,N,V_url
T@,&,N,V_object
chunks
chunkSize
file-size
MicroPaymentDownload
hashArrayData
hashChunkSize
remoteURL
localURL
T@"MicroPayment",&,D,N
%@: Moved download: %lld to path: %@
[%{public}@]: Did not find Info.plist for app: %@
Could not find Info.plist
Could not find Ad Network data in Info.plist
[%{public}@]: Found non-dictionary SKAdNetworkItem in Info.plist for app: %@
[%{public}@]: App: %@ did not have ad network: %@ in Info.plist
Ad network not allowed
The ad network specified was not found in the app's list of allowed networks
Timed out waiting for database
%@: Attemping claim before in-app activity: %@
T@"StoreKitClientIdentity",R,C
%@: Canceling unrecoverable download after 403 response: %lld
%@: Skipping recovery after too many attempts: %lld
%@: Refreshing download: %lld using operation: %@
%@: Reset download after 403 recovery: %lld
%@: Recovery failed for download: %lld with error: %@
%@: Could not encode message: %@
createSocialPost
%@: No URL to create social post
%@: Sending post with identifier: %lld
%@: Post failed with error: %@
albumId
contentToken
contentTokenType
AssetToken
category
Explicit
parentalAdvisoryType
artistAdamId
allArtistAdamIds
Song
audioType
Audio
Image
SoundBite
%.0f
previewFrameTimeCode
Video
VideoClip
videoType
coverArtToken
coverArtTokenType
uploadTimestamp
accessToken
pageId
pageToken
facebook_page
facebook_wall
client_post_id
shareText
owner
content
createTime
isAttributed
target
shareTo
postID
Tq,N,V_postID
com.apple
v32@?0@"LSApplicationProxy"8Q16^B24
bundleIdentifiers
itemIdentifiers
softwareLibraryItems
%@: Changing %lu keys for %@ at %@
v32@?0@"NSString"8@16^B24
%@: Could not serialize property list: %@
%@: Could not write property list: %@
p2-podcast-restore
epguid
%@: Restoring %lu podcasts
%@: Failing podcast restore, no bag key: %@
T@"<RestorePodcastItemsOperationDelegate>",W,D
databaseIdentifier
Tq,N,V_databaseIdentifier
localAssetURL
T@"NSURL",C,N,V_localAssetURL
T@"NSString",C,N,V_uti
parentRelationshipType
T@"NSString",C,N,V_parentRelationshipType
parentUploadIdentifier
Tq,N,V_parentUploadIdentifier
sourceApplication
T@"NSString",C,N,V_sourceApplication
requestItems
T@"NSArray",C,N,V_requestItems
serverResponse
T@"StoreDownloadQueueResponse",&,N,V_serverResponse
responseDownloads
T@"NSArray",C,N,V_responseDownloads
responseError
T@"NSError",&,N,V_responseError
uploadDatabaseIdentifier
Tq,N,V_uploadDatabaseIdentifier
countOfBytesExpectedToSend
Tq,N,V_countOfBytesExpectedToSend
countOfBytesSent
Tq,N,V_countOfBytesSent
[%{public}@]: One or more initializer arguments was nil: %@
appAdamId: %@, adNetworkId: %@, campaignId: %@, transactionId: %@, attributionSignature: %@, pingbackUrl: %@, retryCount: %ld, localTimestamp: %@
T@"NSNumber",R,N,V_appAdamId
T@"NSString",R,N,V_transactionId
T@"NSNumber",R,N,V_campaignId
T@"NSString",R,N,V_adNetworkId
T@"NSString",R,N,V_attributionSignature
pingbackUrl
T@"NSURL",R,N,V_pingbackUrl
retryCount
Tq,R,N,V_retryCount
T@"NSNumber",R,N,V_localTimestamp
%@: Enabling all download kinds
%@: Skipping icon download for placeholder with icons: %@
%@: Missing URL for software download: %@
%@: Back with icon data for: %@
TB,GisStoreDownload
redeemCodeLanding
p2-headless-redemption
certId
userPresentableErrorMessage
%{public}@: [%{public}@] The server told us to redeem the code again using the iCloud account. iCloudAccount = %{public}@
%{public}@: [%{public}@] The user cancelled the redeem. error = %{public}@
%{public}@: [%{public}@] Failed to authenticate the iCloud account. The redeem will fail. error = %{public}@
%{public}@: [%{public}@] Redeeming %lu codes headless
%{public}@: [%{public}@] Canceled redeem batch
%{public}@: [%{public}@] Redeemed %lu codes with %lu failures
%{public}@: [%{public}@] Fetch redeem code metadata failed with error: %{public}@
%{public}@: [%{public}@] Redeeming %lu codes
hideError
%{public}@: [%{public}@] Redeem operation failed for code: %@, error: %{public}@
response-content-type
cameraRecognizedCode
installed-version
redeemCodeSrv
dialogData
LAErrorDomain
%{public}@: Fetching metadata for %{public}lu codes
%{public}@: Failed to fetch metadata for redeem code: %@, error: %{public}@
%{public}@: Canceled redeem metadata batch
%{public}@: No iTunes identifier
%{public}@: No installed external version
%{public}@: Found metadata for %{public}lu codes
%{public}@: Failed to fetch bag.
%{public}@: Sending redeem succeeded notification
%{public}@: Failed to archive response. Error = %{public}@
redeemCodes
headless
TB,V_headless
cameraRecognized
TB,V_cameraRecognized
logCorrelationKey
T@"NSString",&,N,V_logCorrelationKey
params
T@"NSDictionary",&,N,V_params
redeemResponse
T@"SSRedeemCodesResponse",R
preferences
T@"NSMutableArray",&,N,V_preferences
com.apple.itunesstored.KeyValueStore
v16@?0@8
v16@?0@"SSKeyValueStoreSession"8
B16@?0@"SSKeyValueStoreTransaction"8
%@: Reloading accounts after KVS change
com.apple.appstored.StoreKit.ForcedSandbox
%{public}@: Forcing sandbox for %{public}@ until %{public}@
%@: [bid: %@, bv: %@, sid: %@, sv: %@, sbox: %d
T@"NSNumber",C,N,V_storeIdentifier
T@"NSNumber",C,N,V_storeVersion
TB,N,GisSandboxed,V_sandboxed
TB,N,V_usesIdentityAttributes
renew-vpp-receipt
app-receipt-create
receiptFlags
TQ,N,V_flags
TB,N,V_needsAuthentication
performSinfMirartionCheckBeforeFailing
TB,N,V_performSinfMirartionCheckBeforeFailing
targetAccount
T@"NSNumber",C,N,V_targetAccount
bookkeeperDomain:com.apple.upp
put-parameters
mzbookkeeper
notification-type
sbsync
logout
DownloadsScratchGarbageCollectionTime
[%@]: Garbage collecting %lu persistent managers
[%@]: Garbage collecting software downloads
[%@]: Removing expired software download: %lld
[%@]: Garbage collecting download scratch directory: %@
[%@]: Queuing directory: %lld phase: %@
[%@]: Queuing stale directory: %lld phase: %@ last modification: %f
[%@]: Keeping directory: %lld phase: %@ last modification: %f
[%@]: Keeping directory: %lld phase: %@
[%@]: Garbage collecting %lu scratch directories
[%@]: Removed: %@
%@ no events to report
%@ could not load URL bag
%@ could not get metrics dict from url bag
xp_its_main
xp_ci
clientId
%@ failed to insert events: %@
%@ failed to flush events: %@
eventTopicOverride
T@"NSString",C,N,V_eventTopicOverride
T@"NSString",C,N,V_appBundleId
System
T@"NSArray",C,V_softwareLibraryItems
com.apple.itunesstored.ErrorHandlerManager.%p
com.apple.itunesstored.ErrorHandlerManager.completion.%p
%@: Opening session: %@ for client: %@
%@: Client disconnected: %@ with %lu sessions
%@: Cannot connect unentitled error handler
%@: Ignoring error handler re-connect
%@: Invalid enpoint for error handler
%@: Invalid failure types for error handler
%@: Conflicted failure types for error handler
%@: Started client: %@ with failure types: %@
com.apple.itunesstored.ErrorHandlerManager
%@: Resolving session: %lld for client: %@
failureTypes
sessionIdentifier
T@"NSDictionary",C,N,V_sessionProperties
Podcasts
label
rank
yyyy-MM-dd'T'HH:mm:ss'Z'
responseType
Tq,N,V_responseType
T@"NSURL",C,N,V_url
%@: Redirect from error handler: %@
%@: Error handler resolved with type: %ld
v16@?0@"ErrorHandlerResponse"8
willBeginProcessingDictionaryHandler
T@?,C,N,V_willBeginProcessingDictionaryHandler
endId
startId
%@: Refreshing download: %lld / %@
%@: Unexpected download count: %lu when refreshing download: %lld
%@: Refreshed download: %lld, changed download key from: "%@" to: "%@"
tokenType
localizedMessage
T@"NSString",R,C,N,V_assetToken
T@"NSString",R,C,N,V_assetTokenType
T@"NSError",R,C,N,V_error
%@: Could not get download: %lld, error: %@
%@: Refreshed download: %lld
%@: No transaction ID for download: %lld
%@: No identity for download: %lld
%@: Could not refresh download: %lld, error: %@
%@: Unexpected count: %lu when refreshing download: %lld
%@: Could not refresh download: %lld, incorrect count: %lu
%@: Reloaded download: %lld, with download key: %@
%@: Reloading iTunes Match download: %lld / %@
always
sometimes
never
update-password-settings
jingleDocType
settings
free
paid
freeDownloadsPasswordSetting
paidPurchasesPasswordSetting
here in init
hasDemotedApplications
TB,R,V_hasDemotedApplications
[%{public}@]: [%{public}@] Remote authentication requested for unsupported client, forcing local authentication
[%{public}@]: [%{public}@] Sending remote authentication request
[%{public}@]: [%{public}@] Connection interrupted, forcing local authentication
[%{public}@]: [%{public}@] Invalid authentication response, forcing local authentication
[%{public}@]: [%{public}@] Received remote authentication response
[%{public}@]: [%{public}@] No output connection to client, forcing local authentication
[%{public}@] Will send purchase succeeded notification
[%{public}@] Purchase failed, not sending purchase succeeded notification
finishesPurchases
uniqueIdentifier
SELECT product_id, visibility FROM promoted_iaps_visibility_table WHERE product_id IN (%@) AND bundle_id = ?;
B16@?0@"PromotedIAPDatabaseTransaction"8
SELECT product_id, visibility FROM promoted_iaps_visibility_table WHERE bundle_id = ?;
SELECT pid FROM promoted_iaps_visibility_table WHERE product_id = ? AND bundle_id = ?;
INSERT OR REPLACE INTO promoted_iaps_visibility_table (product_id, bundle_id, visibility, pid) VALUES (?, ?, %li, %@);
INSERT OR REPLACE INTO promoted_iaps_visibility_table (product_id, bundle_id, visibility) VALUES (?, ?, %li);
SELECT product_id, iap_order FROM promoted_iaps_order_table WHERE bundle_id = ? ORDER BY iap_order ASC;
DELETE FROM promoted_iaps_order_table WHERE bundle_id = ?;
(?, ?, %i), 
INSERT OR REPLACE INTO promoted_iaps_order_table (product_id, bundle_id, iap_order) VALUES %@;
DELETE FROM promoted_iaps_visibility_table WHERE bundle_id = ?;
com.apple.itunesstored.PurchaseController
%@: Canceling purchases for %ld downloads
v24@?0@"PurchaseManagerClient"8@"NSObject<OS_xpc_object>"16
%@: Cancel %zu purchases for client: %@
%@: Connected purchase manager: %@
%@: Finishing: %zu purchases for client: %@
%@: Inserting %lu purchases for client: %@
%@: Reset %ld existing downloads for purchases
v24@?0@"NSArray"8@"NSDictionary"16
%@: Skipping %ld existing purchases from client: %@
%@: Canceled inflight purchase: %@
[%@]: Adding %lu purchases from client: %@
v24@?0@"NSNumber"8@"NSError"16
com.apple.itunesstored.PurchaseController.auth
%@: Requesting %llu bytes for %lu purchases
%@: Space is available for all purchases
%@: Only %llu bytes available: %@
%@: Failing purchases due to lack of space: %@
%@: Proceeding with purchases that fit in remaining space: %@
%@: Checking queue(s) after purchase trigger-download with kind: %@
v24@?0@"SSAuthenticationContext"8@?<v@?@"SSAuthenticateResponse"@"NSError">16
v16@?0@"DaemonPurchaseResponse"8
Found existing book download, sending to bookassetd to sort it out
%@: Canceling purchase batch after authentication failure
book
%@: Canceling purchase batch after purchase failure
%@: Not queuing downloads for purchase because placeholder download was canceled
%@: Pruned %ld orphaned purchases
com.apple.iTunesStore
com.apple.itunesstored.PurchaseController.purchase
SPECIFIC_PURCHASE_ERROR_TITLE
SPECIFIC_PURCHASE_ERROR_BODY_%@
SPECIFIC_PURCHASE_ERROR_BODY_PLUS_ONE_%@
SPECIFIC_PURCHASE_ERROR_BODY_PLURAL_%@_%ld
com.apple.itunesstored.fairplay.decryptfile.%@
[%@] No DPInfo provided
%@: Decrypt failed
CREATE TABLE IF NOT EXISTS artist (pid INTEGER,upload_id INTEGER NOT NULL,artist_id TEXT,order_index INTEGER DEFAULT 0,name TEXT,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS content_item (pid INTEGER,post_id INTEGER NOT NULL,item_id TEXT,type TEXT,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS external_target (pid INTEGER,access_token TEXT,page_access_token TEXT,page_id TEXT,post_id INTEGER NOT NULL,service_type INTEGER NOT NULL,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS post (pid INTEGER,account_id INTEGER NOT NULL,activity_id TEXT,author_id TEXT,author_type TEXT,creation_time DOUBLE,failure_count INTEGER DEFAULT 0,is_attributed INTEGER DEFAULT 0,is_failed INTEGER DEFAULT 0,message TEXT,poll_count INTEGER DEFAULT 0,poll_interval DOUBLE DEFAULT 0,poll_duration DOUBLE DEFAULT 10800,source_app TEXT,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS upload (pid INTEGER,album_id TEXT,asset_token TEXT,asset_token_type TEXT,asset_url TEXT NOT NULL,category_name TEXT,creation_time DOUBLE,description TEXT,error_code INTEGER,error_domain TEXT,error_message TEXT,failure_count INTEGER DEFAULT 0,is_explicit INTEGER DEFAULT 0,kind TEXT,owns_asset INTEGER DEFAULT 0,parent_relationship_type TEXT,parent_upload_id INTEGER DEFAULT 0,preview_frame_time DOUBLE DEFAULT 0,post_id INTEGER,source_app TEXT,state INTEGER DEFAULT 0,subtitle TEXT,thumbnail_url TEXT,title TEXT,upload_time DOUBLE,uti TEXT NOT NULL,PRIMARY KEY (pid));
uploads.sqlitedb
ALTER TABLE post ADD COLUMN author_type TEXT;
ALTER TABLE upload ADD COLUMN failure_count INTEGER DEFAULT 0;
ALTER TABLE upload ADD COLUMN asset_token_type TEXT;
ALTER TABLE upload ADD COLUMN owns_asset INTEGER DEFAULT 0;
ALTER TABLE upload ADD COLUMN parent_relationship_type TEXT;
ALTER TABLE upload ADD COLUMN parent_upload_id INTEGER DEFAULT 0;
ALTER TABLE upload ADD COLUMN preview_frame_time DOUBLE DEFAULT 0;
ALTER TABLE upload ADD COLUMN upload_time DOUBLE;
ALTER TABLE post ADD COLUMN is_failed INTEGER DEFAULT 0;
ALTER TABLE upload ADD COLUMN album_id TEXT;
ALTER TABLE artist ADD COLUMN order_index INTEGER DEFAULT 0;
ALTER TABLE post ADD COLUMN is_attributed INTEGER DEFAULT 0;
ALTER TABLE post ADD COLUMN activity_id TEXT;
ALTER TABLE post ADD COLUMN poll_count INTEGER DEFAULT 0;
ALTER TABLE post ADD COLUMN poll_interval DOUBLE DEFAULT 0;
ALTER TABLE post ADD COLUMN poll_duration DOUBLE DEFAULT 10800;
%@: Authenticating for purchase batch
authenticationBlock
com.apple.iTunesStore.downloadInfo
accountInfo
ad-network
ad-network-id
campaign-id
newCustomer
%@: Capabilities mismatch for purchase: %@
jingleAction
inAppBuy
[%{public}@]: Install attribution response error: %@
[%{public}@]: Account lookup failed for invalid proxy: %{public}@
[%{public}@]: Account lookup failed when composing bundle URL for proxy: %{public}@
CapabilitiesMatch
%@&ownerDsid=%@
B16@?0@"SSAppPurchaseHistoryTransaction"8
ownerDsid
%@: Using local buy parameters for purchase: %@
&ownerDsid=%llu
%{public}@: Adding an account for purchases. Saving %{public}@.
%{public}@: Failed to find account name for %{public}@ error: %{public}@
[%{public}@]: Failed to load URL bag to check Install Attribution params age
{ ad-network-id = "%@"; campaign-id = "%@"; adam-id = "%@"; impression-id = "%@"; timestamp = "%@"; signature = "%@"; }
v16@?0@"InstallAttributionParams"8
[%{public}@]: Timed out waiting to get install attribution params from DB
offer
redownload
passwordSettings
p2-order-pre-order
purchase
T@"SSPurchase",R
purchaseBlock
-[MappedPropertyList initWithURL:]: nil URL argument
Found existing download for purchase but no matching purchase, canceling download.
%@: Redirecting software download to App Store daemon: %@
%@: Skipping queue update to in flight download: %llu with downloadPhase: %@
%@: Resetting existing download: %llu phase: %@ with store queue download
%@: Restart existing download: %llu phase: %@ with store queue download with result: %d
%@: Insert new store queue download: %@
%@: Inserted new store queue download with downloadID: %llu
%@: Pruning incompatible app download: %@
v32@?0@8Q16^B24
%@: Pruning %lu removed downloads
download queue request
%@: Using custom policy for purchase: %@
%@: Using custom network constraints for purchase: %@
%@: Replacing purchase %lld with %lu downloads, filtering asset types: %@
v32@?0@"DownloadAsset"8Q16^B24
%@: Removing existing for software purchase: %lld
%@: Updating existing download: %lld
%@: Updating placeholder download: %lld
%@: Adding new download from purchase
%@: Remove placeholder for purchase: %lld
purchase response
v32@?0@"SSPurchase"8Q16^B24
DisplayPaymentSheetContainerOperation Error
com.apple.itunesstored.DisplayPaymentSheetContainerOperation
%{public}@:  - LocalAuth ACL:     %{public}@
%{public}@:  - LocalAuth Context: %{public}@
%{public}@:  - LocalAuth Options: %{public}@
%{public}@:  - AuthKit Context:   %{public}@
%{public}@:  - Account ID:        %@
%{public}@: Display payment sheet operation did complete
Operation timed out
%{public}@: Display payment sheet operation timed out.
%{public}@: Display payment sheet operation failed with error: %{public}@
No argument operation supplied
%{public}@: Failed to load display payment sheet operation
X-Apple-Application-Instance
Apple-Timing-App
giftBuySrv
destinationFileURL
T@"NSURL",C
sendsResponseForHTTPFailures
shouldMescalSign
com.apple.itunesstored.WiFiManager
IPAddress
decodedResponse
T@"StoreDownloadQueueResponse",&,N,V_decodedResponse
preference
adam_id
external_id
created_offset_millis
preference_type
Ti,N,V_preference
hasAdamId
Tq,N,V_adamId
hasExternalId
externalId
T@"NSString",&,N,V_externalId
hasCreatedOffsetMillis
createdOffsetMillis
Tq,N,V_createdOffsetMillis
hasPreferenceType
preferenceType
Ti,N,V_preferenceType
%@: Could not install media download: %lld, error: %@
%@: Missing library ID for download: %lld
Rentals
Kind
iTunes_Control
iTunes
Rentals.plist
%@: Updated rental plist for "%@"
batch_id
encoded_data
encoded_error
encoded_response
order_id
purchase_manager
client_id_header
process_id
url_bag_type
[%{public}@]: Checking the automatic download queue
ASDCheckQueueRequestOptions
ASDCheckQueueRequest
[%{public}@]: Download queue request completed with result: %d error: %@
[%{public}@]: Making claim for bundleIDs: %{public}@
ASDClaimApplicationsRequestOptions
ASDClaimApplicationsRequest
[%{public}@]: Claim completed with result: %d claimedBundleIdentifiers: [%{public}@] error: %@
[%{public}@]: Hiding pending updates badge
ASDSoftwareUpdatesStore
[%{public}@]: Sending managed application request for itemID: %@ externalVersionID: %@
ASDManagedApplicationRequestOptions
ASDManagedApplicationRequest
[%{public}@]: Sending post bulletin request with title: %@
ASDPostBulletinRequestOptions
ASDPostBulletinRequest
[%{public}@]: Checking for updates
[%{public}@]: Sending application repair request for bundleID: %@ accountDSID: %@ repairType: %ld
ASDRepairApplicationRequestOptions
ASDRepairApplicationRequest
[%{public}@]: Sending request to restore %lu demoted applications: %@
ASDRestoreDemotedApplicationsRequestOptions
ASDRestoreDemotedApplicationsRequest
[%{public}@]: Error requesting restore for demoted applications: %@
[%{public}@]: Sending %lu cluster mapping(s)
ASDAppClusterMapping
ASDPersonalizationStore
[%{public}@]: Error syncing cluster mapping(s) error: %{public}@
[%{public}@]: Sent %lu cluster mapping(s) with result: %d
[%{public}@]: Sending %lu downloads from %{public}@
[%{public}@]: Sending News subscription entitlements
ASDSubscriptionEntitlements
[%{public}@]: Sending Activity subscription entitlements
[%{public}@]: Sending AppStore subscription entitlements
v32@?0@"Download"8Q16^B24
[%{public}@]: Checking claims for accountID: %@ claimStyle: %ld
[%{public}@]: appstored replied to claim request with result: %d claimedBundleIdentifiers: [%{public}@] error: %@
ASDInstallManifestRequestOptions
ASDInstallManifestRequest
[%{public}@]: Completed sending downloads for %{public}@ with job(s): %@ error: %@
SKAdNetworkItems
SKAdNetworkIdentifier
install-attribution-max-campaign-id
install-attribution-max-cache-age
install-attribution-max-pingback-cache-age
install-attribution-max-ping-back-attempts
%{public}@: Failed to load URL bag
%{public}@: Tried to insert IA params with campaign ID %{public}li, must be between 0 and %{public}li
Campaign id must be between 0 and %li
[%{public}@]: Removing IA params before date: %{public}@
com.apple.itunesstored.PurchaseActionManager.IAParamsClean
[%@]: setting criteria for Install Attribution clean params task
[%@]: running Install Attribution clean params task
[%{public}@]: Failed to load URL bag in Install Attribution clean params task
[%@] Could not set state of the Install Attribution clean params task activity to XPC_ACTIVITY_STATE_DONE.
[%@] Unknown state: %d when processing Install Attribution clean params task
[%{public}@]: Failed to load URL bag when sending Install Attribution pingbacks
app-id
attribution-signature
[%{public}@]: Install attribution pingback serialization for app: %@ failed with error: %{public}@
App Store
User-Agent
[%{public}@]: Install attribution pingback for app: %@ failed with error: %{public}@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
com.apple.itunesstored.PurchaseActionManager.IAPingbackRetry
[%@]: setting criteria for Install Attribution send pending pingbacks task
[%@]: running Install Attribution send pending pingbacks task
[%@] Could not set state of the Install Attribution send pending pingbacks task activity to XPC_ACTIVITY_STATE_DONE.
[%@]: Unknown state: %d when processing Install Attribution send pending pingbacks task
com.apple.itunesstored.MediaSocialStatusPollingCoordinator
%@: Request %@ exceeded poll for now: %f timeout time: %f
T@"<MediaSocialStatusPollingDelegate>",W,N,V_delegate
numberOfPollRequests
%@: Requesting termination of sync bubble for download: %lld bundleID: %@
%@: Continuing after bubble termination complete for download: %lld bundleID: %@
%@: Application termination denied: %lld / %@
%@: Could not find app for automatic update: %lld / %@
%@: Missing sinf data for store download: %lld / %@
%@: Installing placeholder for auto-update: %@
%@: Installing download: %lld / %@
%@: Loading missing receipt for app: %@
%@: Adding bundle ID to KVS: %@
PackagePatchFailed
ApplicationVerificationFailed
AppBlacklisted
%@: Fail permanently for blacklisted app: %@
BundleiTunesMetadataVersionMismatch
[ApplicationWorkspace]: Fail permanently for bundle version mismatch: %lld
InstallSoftwareDownloadOperation: Retry download after termination allowed: %lld / %@
Music
allowsPromptingForPrivacyAcknowledgement
clusterId
launchCountWeight
usageDurationWeight
{ itemID: %@ clusterID: %@  clusterVersion: %@ forgroundUsageWeight: %@ launchWeight: %@ }
T@"NSString",R,V_bundleID
clusterID
T@"NSNumber",R,V_clusterID
clusterVersionID
T@"NSNumber",R,V_clusterVersionID
foregroundUsageWeight
T@"NSNumber",R,V_foregroundUsageWeight
itemID
T@"NSNumber",R,V_itemID
launchWeight
T@"NSNumber",R,V_launchWeight
com.apple.StoreKit.SKXPCConnection
disconnectBlock
messageBlock
[%@]: Skipping most of server registration for server %@ since we are using appstored software updates
[%@]: Update check complete with result: %d error: %@
T@,W,N,V_object
T@"NSObject<LSApplicationWorkspaceObserverProtocol>",N
numMediaSelectionsCompleted
TQ,R,N,V_numMediaSelectionsCompleted
[%@] No receipt data for: %@
[%@] No LSApplicationProxy for: %@
[%@] No LSPlugInKitProxy for: %@
mobile
[%@] Could not create receipt URL: %@
[%@] Wrote receipt to path: %@
AnalyticsReportingOperation
[%@] Submitting events to URL: %@
[%@]: Received backoff response for URL (with DSID): %@
[%@]: Received backoff response for URL (without DSID): %@
[%@] Exception Caught at outer-loop: %@
[%@] Deleted Reported Events. [Success: %d]
[%@] Deleted Out-Of-Date Events. [Max Age: %lld] [Success: %d]
com.apple.itunesstored.AnalyticsReportingOperation
DisableMetricsFileCleanup
[%@]: Output stream exception: %@
[%@]: Metrics post failed. Digest is nil
[%@] Reporting analytics events to %@
application/json; charset=utf-8
X-Apple-Canary-Id
Content-Length
xp.apple.com
[%@] Success reporting analytics events. [Marked As Reported: %d]
[%@] Error Reporting Events: %@
[%@] Exception Caught: %@
v24@?0@"NSData"8@"NSError"16
finishBlock
track_items
%{public}@: Failed to archive track items. Error = %{public}@
%{public}@: Failed to unarchived items. Error = %{public}@
store import complete. success=%d, err=%@
v28@?0B8@"NSError"12@"NSData"20
store_collection_id=%llu
store_item_id=%llu
%@|%@|%ld|%@
%@: Checking out rental keys for download: %lld
%@: Decrypting asset for download: %lld at path: %@
%@: Unprotect asset for download: %lld at path: %@
%@: Download unprotect failed: %lld, deleted file: %@
changeType
Tq,N,V_changeType
mst-notification-category
com.apple.itunesstored.UserNotifications
%{public}@: Unhandled notification
%{public}@: Settings did change
%{public}@: Authorization granted
%{public}@: Failed to aquire authorization. Error: %{public}@
sharedManager
T@"UserNotificationManager",R,N
center
T@"UNUserNotificationCenter",&,N,V_center
delegateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
executeSQL:
createSchemaInDatabase:
createFunctionsInDatabase:
performTransactionWithBlock:
databasePath
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
init
fileURLWithPath:
initWithDatabaseURL:
_setupDatabase:
setSetupBlock:
initWithDownloadsDatabase:
handlerManager
addHandlerObserver:
weakReferenceWithObject:
newDispatchSourceWithType:
object
_notifyProgressTickTimer
removeHandlerObserver:
dealloc
daemon
takeKeepAliveAssertion:
releaseKeepAliveAssertion:
dispatchAfter:block:
dispatchBlockAsync:
dispatchBlockSync:
modifyUsingPurchaseTransactionBlock:
modifyUsingTransactionBlock:
modifyExternalUsingTransactionBlock:
_newSessionDescription
initWithSessionDescriptor:
changeset
_modifyUsingTransaction:block:
updateAfterSessionsChanged:
canceledAppDataRestoreIDs
count
cancelApplicationRestoresWithBundleIDs:
keepAliveWithAssertion:block:
applicationWorkspaceChanges
defaultWorkspace
applyWorkspaceChanges:
deletedHTTPCookies
HTTPCookies
sharedHTTPCookieStorage
countByEnumeratingWithState:objects:count:
deleteCookie:
setCookie:
_saveCookies
IPodLibraryItems
deviceIPodLibrary
scheduleLibraryItems:
deletedIPodLibraryDownloadIDs
removeDownloadsWithIdentifiers:canceled:
canceledIPodLibraryDownloadIDs
sharedController
cancelPurchasesForDownloadsWithIdentifiers:
SSAppWakeRequests
sharedInstance
wakeAppUsingRequest:
downloadChangeTypes
resetEnabledRemoteNotificationTypes
mainQueue
addOperation:
restoreReason
sharedDownloadQueue
restoreAllRestorableDownloadsWithReason:
restorableDownloadIDs
restoreDownloadsWithIdentifiers:reason:
changedDownloadKinds
containsObject:
paymentQueue
removedPersistentDownloadIDs
finishDownloadsWithIdentifiers:
controller
notifyClientsOfChangeset:
policyChangedDownloadIDs
sharedDaemonConfig
sharedConfig
shouldLog
OSLogObject
shouldLogToDisk
stringByReplacingOccurrencesOfString:withString:
restartDownloadsWithIdentifiers:
mutableCopy
pipelineRestarts
minusOrderedSet:
unionOrderedSet:
pipelineAdditions
addDownloadsWithIdentifiers:
_commitExternalChangesForChangeset:
setDatabase:
setExternalState:
setPipeline:
setPolicyManager:
downloadsDatabase
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
downloadHandlerManagerHandlersDidChange:
downloadHandlerManager:sessionsDidChange:
modifyAsyncUsingPurchaseTransactionBlock:
modifyAsyncUsingTransactionBlock:
modifyExternalAsyncUsingTransactionBlock:
readUsingTransactionBlock:
.cxx_destruct
_database
_dirtyProgressByID
_dirtyProgressTimer
_externalState
_pipeline
_policyManager
_progressTickTimer
database
maxValueForProperty:predicate:database:
doubleValue
orderKeyIncrement
importDownloads:initialOrderKey:orderKeyIncrement:
addDownloadsToPipelineWithIDs:
copy
predicateWithProperty:equalToValue:
arrayWithObjects:
predicateMatchingAllPredicates:
anyInDatabase:predicate:
persistentID
deletePersistentDownloadManagerWithID:
predicateWithProperty:equalToLongLong:
queryWithDatabase:predicate:
addObject:
enumeratePersistentIDsAndProperties:count:usingBlock:
initWithPersistentID:inDatabase:
deleteFromDatabase
longLongValue
addDownloadChangeTypes:
finishDownloadWithID:finalPhase:updatePipeline:
numberWithLongLong:
initWithObjects:
stopDownloadsWithIdentifiers:reason:
finishWithFinalPhase:
unionChangeset:
deleteScratchDirectory
isMultiUser
valueForProperty:
shouldModifyQuota:
resumeQuotas
orderedSet
orderingBucketSize
numberWithDouble:
setValue:forProperty:
numberWithInt:
externalPropertyValues
objectForKey:
downloadPolicy
policyManager
addDownloadPolicy:
_copyEffectiveBundleIDForDownload:
_addEffectiveClientWithBundleID:database:
setObject:forKey:
propertyValues
initWithPropertyValues:inDatabase:
_newTransactionForDownload:inDatabase:
setExternalPropertyValues:forDownloadWithID:
setAssetsUsingDownload:
copyDownloadingIPodLibraryItem
addIPodLibraryItem:
integerValue
initWithTransactionIdentifier:downloadIdentifier:bundleIdentifier:
addAppPlaceholderWithHandle:
length
incompleteNotificationForInstallingDownload:bundleIdentifier:
addDownloadKind:
boolValue
addRestorableDownloadID:
addDownloads:
_orderKeyAdjacentToOrderKey:comparisonType:
_moveDownloadWithID:relativeToDownloadWithID:comparisonType:
downloadKind
addStatusChangedDownloadID:
initWithObjectsAndKeys:
setChangedDownloadProperties:
existsInDatabase
moveDownloadWithID:beforeDownloadWithID:
prioritizeDownloadWithIdentifier:
predicateWithProperty:value:comparisonType:
minValueForProperty:predicate:database:
setEntityClass:
setOrderingDirections:
setOrderingProperties:
setPredicate:
initWithDatabase:descriptor:
initWithLongLong:
enumeratePersistentIDsUsingBlock:
predicateMatchingAnyPredicates:
arrayWithObjects:count:
doesNotContainPredicateWithProperty:values:
finishDownloadsWithIdentifiers:finalPhase:
resetDownloadsMatchingPredicate:isUserInitiated:
_resetDownload:withValues:isUserIntiated:
resetDownloadsWithIdentifiers:isUserInitiated:
getValues:forProperties:count:
restartDownloadsInPipelineWithIDs:
retryDownloadsWithIdentifiers:
retryDownload
initWithInteger:
setValuesWithDictionary:
addDownloadToPipelineWithID:
addUpdatedDownloadID:
isEqualToString:
_setPolicy:forDownloadWithID:
setValue:forExternalProperty:ofDownloadID:
getBytes:length:
numberWithInteger:
setLimitCount:
arrayWithObject:
initWithDownloadKind:URLBagType:
addPolicyChangedDownloadID:
deletePersistentDownloadManagerWithClientID:persistenceID:
finishDownloadWithID:finalPhase:
insertDownloads:afterDownloadWithID:
insertDownloads:beforeDownloadWithID:
moveDownloadWithID:afterDownloadWithID:
pauseDownloadsWithIdentifiers:
prioritizeDownloadWithID:aboveDownloadWithID:error:
prioritizeDownloadsWithKind:clientID:
reconcileSoftwareDownloads:fromITunesStore:
resetDownloadsMatchingPredicate:
resetDownloadsWithIdentifiers:
retryDownloadWithIdentifier:
unblockDownloadsWithClientIdentifiers:
updateDownloadEntityWithIdentifier:withDownload:
_initDownloadsChangeset
_SSAppWakeRequests
_applicationWorkspaceChanges
_addApplicationWorkspaceChangeWithHandle:changeType:
_canceledAppDataRestoreIDs
_canceledIPodLibraryDownloadIDs
_deletedHTTPCookies
addObjectsFromArray:
_deletedIPodLibraryDownloadIDs
_finishedDownloadKinds
_cookies
_policyChangedDownloadIDs
removeObject:
unionSet:
changedDownloadProperties
addEntriesFromDictionary:
changedExternalDownloadProperties
setChangedExternalDownloadProperties:
finishedDownloadKinds
removedDownloadIDs
statusChangedDownloadIDs
updatedDownloadIDs
allocWithZone:
mutableCopyWithZone:
copyWithZone:
setChangeType:
setApplicationHandle:
addApplicationWorkspaceChange:
addSSAppWakeRequest:
addAppPlaceholderUpdateWithHandle:
addCanceledAppWithHandle:
addCanceledAppDataRestoreID:
addCanceledIPodLibraryDownloadID:
addDeletedHTTPCookies:
addDeletedIPodLibraryDownloadID:
addFailedAppWithHandle:
addFinishedAppWithHandle:
addFinishedDownloadKind:
addHTTPCookie:
addRemovedDownloadID:
addRemovedPersistentDownloadID:
addRetryAppWithHandle:
removeDownloadFromPipelineWithID:
setRestoreReason:
_changedDownloadKinds
_changedDownloadProperties
_changedExternalDownloadProperties
_downloadChangeTypes
_ipodLibraryItems
_pipelineAdditions
_pipelineRestarts
_removedDownloadIDs
_removedPersistentDownloadIDs
_restorableDownloadIDs
_restoreReason
_statusChangedDownloadIDs
_updatedDownloadIDs
lock
unlock
deviceIsAppleWatch
deviceIsAudioAccessory
shouldDisplayPrivacyLinkWithIdentifier:
sharedAccountsConfig
_getInitialStatus:
_cacheAccountEligibilityWithStatus:
setCarrierBundlingStatus:
carrierBundlingStatus
carrierBundleProvisioningStyle
accountStatus
copyStatusFromUserDefaults
_carrierBundleStatusIsValidForCachedStatus:
cellularOperatorName
setCellularOperatorName:
phoneNumber
setPhoneNumber:
sessionIdentifier
setSessionIdentifier:
reason
setDeepLink:
runSubOperation:returningError:
eligibilityResponse
bundlingStatus
cellularProviderName
domain
code
isFamilySubscription
setFamilySubscription:
SMSSessionIdentifier
headerEnrichmentSessionIdentifier
setCarrierBundlingErrorCode:
accountIdentifier
defaultStore
activeAccount
uniqueIdentifier
isEqualToNumber:
updateUserDefaultsWithStatus:
isEqualToStatus:
sendChangeNotification
setError:
setStatusBlock:
setSuccess:
accountWithUniqueIdentifier:
setEligibility:forServiceType:
accountName
saveAccount:verifyCredentials:completion:
authenticationContext
promptStyle
authenticatesIfNecessary
_loadStatusOnce:
initWithAccount:
reasonDescription
localizedAuthenticationReason
setReasonDescription:
setCanCreateNewAccount:
setPromptStyle:
copyAccountID:credentialSource:byAuthenticatingWithContext:returningError:
setCanSendGUIDParameter:
provider
setDataProvider:
setAuthenticationContext:
currentDevice
uniqueDeviceIdentifier
setValue:forRequestParameter:
setURLBagKey:
setRequestProperties:
dataProvider
output
setValuesUsingStatusDictionary:
authenticatedAccountDSID
requiredUniqueIdentifier
setAccountIdentifier:
allowsBypassOfPrivacyAcknowledgement
setAllowsBypassOfPrivacyAcknowledgement:
setAuthenticatesIfNecessary:
setCarrierBundleProvisioningStyle:
setLocalizedAuthenticationReason:
setReason:
statusBlock
_allowsBypassOfPrivacyAcknowledgement
_authenticatesIfNecessary
_authenticationContext
_carrierBundleProvisioningStyle
_localizedAuthenticationReason
_reason
_statusBlock
start
initWithPurchaseDirectory:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
stringByAppendingPathComponent:
jetsam
makeObjectsPerformSelector:
path
_dictionary
manifestItemDictionary
_writeToFile
array
initWithManifestItemDictionary:
relativeMetadataPath
contentsOfDirectoryAtPath:error:
pathExtension
initWithContentsOfFile:
valueForMetadataKey:
setRelativeMetadataPath:
setRelativeArtworkPath:
setRelativeMediaAssetPath:
setRelativeFeedAssetPath:
hasPrefix:
substringFromIndex:
errorWithDomain:code:userInfo:
objectAtIndex:
removeObjectAtIndex:
removeAllObjects
removeItemAtPath:error:
_sharedManifestWithManifestType:
purchaseManifestItems
relativeArtworkPath
relativeMediaAssetPath
relativeFeedAssetPath
_handleMessage:connection:usingBlock:
getPathsWithMessage:connection:
addObserver:selector:forMessage:
rebuildWithMessage:connection:
removeItemWithMessage:connection:
rebuildManifest
initWithArray:
removeItemsWithAssetPaths:error:
minusSet:
allObjects
sharedManifestForDownloadKind:
ensureDirectoryExists:
fileSystemRepresentation
propertyListWithData:options:format:error:
dataWithPropertyList:format:options:error:
observeXPCServer:
addCompletedItem:
_dispatchQueue
_path
_setValue:forKey:
removeObjectForKey:
libraryPersistentIdentifier
setLibraryPersistentIdentifier:
contextWithBagType:
setValue:forHTTPHeaderField:
loadedURLBagWithContext:returningError:
valueForKey:
URLWithString:
URLByAppendingQueryParameter:value:
clientAuditTokenData
setClientAuditTokenData:
setURL:
setCachePolicy:
userAgent
authenticationPromptStyle
_familyCircleForDictionary:
_writeCacheWithFamilyCircle:accountIdentifier:
_cachedFamilyCircleWithAccountIdentifier:
_cachePath
date
timeIntervalSinceDate:
initWithCacheRepresentation:
lastObject
pathWithComponents:
setITunesIdentifier:
setFirstName:
setLastName:
setICloudAccountName:
setICloudIdentifier:
setSharingPurchases:
aa_primaryAppleAccount
aa_personID
iCloudIdentifier
stringValue
iTunesIdentifier
predicateWithBlock:
filteredArrayUsingPredicate:
firstObject
setMe:
firstName
isMe
localizedCaseInsensitiveCompare:
sortUsingComparator:
setITunesAccountNames:
setFamilyMembers:
newCacheRepresentation
writeToFile:options:error:
setAuthenticationPromptStyle:
familyCircle
fetchITunesAccountNames
setFetchITunesAccountNames:
setUserAgent:
_authenticationPromptStyle
_clientAuditTokenData
_familyCircle
_fetchITunesAccountNames
_userAgent
_initStoreDownloadQueueResponse
initWithDictionary:userIdentifier:preferredAssetFlavor:
_errorWithFailureType:customerMessage:
initWithDictionary:
itemIdentifier
bundleIdentifier
numberWithUnsignedLongLong:
setPreferredAssetFlavor:
objectForKeyedSubscript:
initWithItemID:bundleID:clusterVersionID:dictionary:
initWithResponseDictionary:
actionsWithActionType:
intValue
initWithDictionary:userIdentifier:
initWithError:userIdentifier:
downloads
error
errorForItemIdentifier:
keybag
rangesToLoad
setShouldCancelPurchaseBatch:
setTriggeredQueueCheck:
shouldCancelPurchaseBatch
triggeredQueueCheck
userIdentifier
clusterMappings
storeCorrelationID
setStoreCorrelationID:
clientIdentifier
setClientIdentifier:
_clusterMappings
_downloads
_error
_itemErrors
_keybag
_rangesToLoad
_shouldCancelPurchaseBatch
_triggeredQueueCheck
_userIdentifier
_storeCorrelationID
_clientIdentifier
_downloadID
_productID
_state
_progress
_contentURL
_timeRemaining
_contentLength
_contentVersion
_transaction
contentLength
_setContentLength:
contentURL
_setContentURL:
downloadState
_setDownloadState:
_setError:
progress
floatValue
_setProgress:
timeRemaining
_setTimeRemaining:
payment
productIdentifier
_setContentIdentifier:
contentIdentifier
initWithString:
absoluteString
contentURLForProductID:
deleteContentForProductID:
state
contentVersion
transaction
_applyChangeset:
_setDownloadID:
_setTransaction:
_setVersion:
initWithXPCEncoding:
copyXPCEncoding
_internal
setDownloadID:
setDownloadState:
changesetWithDownloadID:state:
setContentLength:
setContentURL:
downloadID
setProgress:
setTimeRemaining:
_downloadState
localizedDescription
isUserAccepted
currentText
_checkTermsAndConditionsWithBlock:
_presentTermsAndConditions
_dismissTermsAndConditionsWithAcceptance:
_newTermsAcceptSrvOperation
setNeedsAuthentication:
setNeedsTermsAndConditionsAcceptance:
initWithResponseData:error:
_newTermsCheckSrvOperation
setDelegate:
currentVersionIdentifier
_acceptTermsAndConditionsWithBlock:
setITunesStoreRequest:
setHTTPMethod:
dataWithJSONObject:options:error:
setHTTPBody:
copyActivePowerAssertionIdentifiers
releasePowerAssertion:
beginShowingDialog
activateAlertWithDescription:options:completionBlock:
endShowingDialog
takePowerAssertion:
alertProxy:didReceiveMessage:
alertProxyDidCancel:
setUserAccepted:
_account
_alertProxy
_alertSemaphore
_conditions
_result
_userAccepted
initWithRequestProperties:
setPowerAssertionIdentifier:
URLBagKey
setRequestIdentifier:
sharedCache
URLBagForContext:
setURLBagURLBlock:
stringWithFormat:
loadURLBagWithContext:returningError:
isCancelled
_loadDownloadsFromStart:toEnd:
removeObjectsInRange:
requestIdentifier
_newURLOperationWithStartIdentifier:endIdentifier:
sharedWriteToDiskConfig
response
initWithURLResponse:
_runMachineDataOperationWithRequest:syncState:
_handleResponse:
setWaitsForPurchaseOperations:
initWithMachineDataRequest:
syncState
setMachineDataStyle:
needsAuthentication
setUseUserSpecificURLBag:
setAllowedRetryCount:
accountScope
setURLBagType:
guid
thinnedApplicationVariantIdentifier
itemIdentifierValue
newLoadAutomaticDownloadQueueOperation
operation:failedWithError:
operation:updatedProgress:
operationFinished:
operationWillStart:
operation:didDiscoverContentLength:
operation:didReceiveResponse:
operation:finishedWithOutput:
operation:needNewBodyStream:
operation:processData:error:
operation:willSendRequest:
operation:sanitizedStringForString:
operation:dispositionForAuthenticationChallenge:
operation:credentialForAuthenticationChallenge:
URLCache
URLCacheID
metricsLoadURLSessionDuration
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
operation:didAuthenticateWithDSID:
operation:shouldAuthenticateWithContext:responseHandler:
operation:shouldSetStoreFrontID:
requestProperties
_shouldSendKeyBagSync
_accountIdentifier
_needsAuthentication
_requestIdentifier
_requestProperties
_mdSyncState
initWithPurchase:
affiliateIdentifier
initWithAccountIdentifier:
buyParameters
valueForDownloadProperty:
displaysOnLockScreen
ignoresForcedPasswordRestriction
isBackgroundPurchase
isPlaybackRequest
logUUID
storeFrontIdentifier
isPreauthenticated
tokenUpdateState
tidHeaders
setIsPayment:
setShouldContinueTouchIDSession:
setChallenge:
setSignature:
uppercaseString
setDidFallbackToPassword:
_setMoveToiOS
sharedConnection
isAppAnalyticsAllowed
setQueuePriority:
_setUsesPrivateCookieStore:
initWithURL:
setTimeoutInterval:
challenge
signature
didFallbackToPassword
copyDictionaryForQueryString:unescapedValues:
logKey
_URLBagContext
shouldUseApplePayClassic
_performApplePayClassicCheck
shouldUseAutoEnrollment
_performAutoEnrollmentCheck
deviceScoringSupported
_scoreDevice
dialog
reset
_runPurchaseRequest
_runDialogOperationForDialog:
changedBuyParameters
success
shouldRetryForDelayedGoto
delayedGotoRetryCount
setBuyParameters:
setDelayedGotoRetryCount:
machineDataSyncState
shouldRetryForMachineData
machineDataRetryCount
setMachineDataRetryCount:
shouldRetryWithOriginalProductOwnerAccount
setLogUUID:
URLBagType
accountWithUniqueIdentifier:scope:
ams_sharedAccountStoreForMediaType:
ams_iTunesAccountWithDSID:
initWithBackingAccount:
popBiometricToken
setIgnorePreexistingSecureToken:
base64EncodedStringWithOptions:
setDidPasswordAuthenticate:
numberWithBool:
setValuesWithAccount:
useRemoteAuthentication
remoteAuthenticationHandler
valueForHTTPHeaderField:
unsignedLongLongValue
setPaymentTokenData:
setFpanID:
setIsExtendedAction:
setXAppleAMDHeader:
setXAppleAMDMHeader:
microPayment
buttons
dictionary
initWithBagContext:
URLBag
deviceScore
redirectActionParameters
setShouldRetryWithOriginalProductOwnerAccount:
_setChangedBuyParameters:fromDataProvider:
bundleForClass:
localizedStringForKey:value:table:
initWithDialogDictionary:
dialogIdForMetricsDictionary:
paymentSheet
setDialogId:
_continueTouchIDSessionWithDialog:
kind
actionType
setDialog:
setDisplayedErrorDialog:
UUIDString
addContextToCache:withToken:
setTouchIDContinueToken:
initWithDialog:
setDisplaysOnLockscreen:
setMachineDataSyncState:
_performMachineDataActionForURLResponse:
setLogKey:
setShouldCancelBiometricTokenUpdate:
setShouldSendXTokenHeader:
setTracksPerformanceMetrics:
allowsBootstrapCellularData
setAllowsBootstrapCellularData:
setDisplaysOnLockScreen:
urlBagKey
setCanSetActiveAccount:
_clientIsViewService
setPreferredITunesStoreClient:
setSignupRequestParameters:
paymentTokenData
bytes
setObject:forKeyedSubscript:
queryStringForDictionary:escapedValues:
fpanID
HTTPHeaders
requestParameters
setRequestParameters:
_shouldUseClientAuthentication
_newRequestParameters
didPasswordAuthenticate
biometricState
isPasscodeSet
identityMap
biometricAuthenticationContext
setShouldSendFallbackHeader:
setBiometricSessionDelegate:
shouldContinueTouchIDSession
isExtendedAction
isPayment
_buyParamProductType
setTouchIDDelayEnabled:
setShouldProcessDialogs:
setShouldTriggerDownloads:
setBiometricAuthenticationContext:
setShouldDecodeResponse:
_shouldDisableReversePush
setShouldDisableReversePush:
setShouldDisableReversePushSampling:
bagType
_deviceScoreMetricsParam
setAdditionalMetrics:
redirectURL
clientIdentifierHeader
canBeResolved
_addFairPlayToRequestProperties:withAccountIdentifier:
sharedWiFiManager
IPAddress
deviceIsInternalBuild
UUID
_shouldSendSBSyncData
isMoveToiOS
isAuthenticated
requiresSerialNumber
serialNumber
isEnabledForDataclass:
creditsString
enumerateKeysAndObjectsUsingBlock:
initWithDelayedGoto:
wait
bodyDictionary
setRedirectURL:
setShouldRetryForDelayedGoto:
setBlocksPurchaseRequests:
setHidesServerDrivenDialogs:
actionName
setShouldRetryForMachineData:
_countryCode
applePayClassicNetworks
setWithArray:
copyAccessControlListForPrivateKeyWithBiometricAuthenticationContext:error:
isActionSupported:withAccessControl:
ACLVersionForAccessControl:
shouldAttemptApplePayClassicWithCountryCode:paymentNetworks:accessControlRef:
paymentServicesMerchantURL
shouldAttemptAutoEnrollmentWithCountryCode:
shouldAttemptAutoEnrollment
setNumberStyle:
numberFromString:
skipsConfirmationDialogs
parameter
setChangedBuyParameters:
initWithPaymentSheet:
dialogId
setAccountName:
setCompletionHandler:
initWithDisplayPaymentSheetOperation:
enumerateObjectsUsingBlock:
selectedButtonIndex
setOutputBlock:
initWithURL:account:
performDefaultActionForDialog:
tokenType
setSecureToken:
saveAccount:completion:
originatingStorefront
delegate
purchaseOperation:shouldContinueWithNewStorefront:
_newPurchaseRequestOperation
_handleFailureForOperation:
processDialogFromDictionary:error:
_performDelayedGotoForOperation:
_fairPlaySubscriptionController
importSubscriptionKeyBagData:returningError:
reportAnonymousPings:
sendNewsSubscriptionEntitlementsWithDictionary:forAccountID:
sendAppStoreSubscriptionEntitlementsWithDictionary:forAccountID:
sendActivitySubscriptionEntitlementsWithDictionary:forAccountID:
lowercaseString
clearAutoEnrollmentIdentifier
updateAutoEnrollmentIdentifier
authenticatedAccountCredentialSource
setRawOutput:
performanceMetrics
initWithURLResponse:bodyData:
allHeaderFields
_priceFromBuyParams
initWithServerEndpoint:
deviceScoreWithNonce:completion:
_accountWithUniqueIdentifier:
dictionaryWithObjects:forKeys:count:
reversePushEnabled
_randomDouble
shouldSendKeyBagSyncData
valueForKey:inBagContext:
urlForKey:inBagContext:
sender:didFallbackToPassword:
sender:shouldContinueTouchIDSession:
sender:willSendChallenge:andSignature:andPaymentTokenData:andFpanID:isExtendedAction:isPayment:additionalHeaders:
originalProductOwnerAccountDSID
requestPerformanceMetrics
setAffiliateIdentifier:
setBackgroundPurchase:
setPlaybackRequest:
setClientIdentifierHeader:
setOriginalProductOwnerAccountDSID:
setUrlBagKey:
setUseRemoteAuthentication:
URLResponse
uniqueKey
_shouldSendKeyBagSyncData
setBagType:
displayedErrorDialog
setOriginatingStorefront:
setPreauthenticated:
rawOutput
requiresAuthentication
setRequiresAuthentication:
setRequiresSerialNumber:
setShouldSendKeyBagSyncData:
setSkipsConfirmationDialogs:
setRemoteAuthenticationHandler:
setMicroPayment:
_accountID
_affiliateIdentifier
_allowsBootstrapCellularData
_bagType
_biometricAuthenticationContext
_buyParameters
_clientIdentifierHeader
_deviceScorer
_didAuthenticate
_displayedErrorDialog
_displaysOnLockScreen
_downloadKind
_ignoresForcedPasswordRestriction
_isBackgroundPurchase
_isPlaybackRequest
_mToken
_originalProductOwnerAccountDSID
_preauthenticated
_rawOutput
_requestPerformanceMetrics
_requiresAuthentication
_requiresSerialNumber
_responseInfo
_shouldCancelBiometricTokenUpdate
_silentAuthCount
_skipsConfirmationDialogs
_suppressDialogs
_urlBagKey
_urlResponse
_moveToiOS
_useRemoteAuthentication
_microPayment
_deviceScore
_originatingStorefront
_logKey
_remoteAuthenticationHandler
_changedBuyParameters
_delayedGotoRetryCount
_dialog
_didPasswordAuthenticate
_machineDataRetryCount
_machineDataSyncState
_redirectURL
_shouldRetryForMachineData
_shouldRetryForDelayedGoto
_shouldRetryWithOriginalProductOwnerAccount
initWithInputConnection:
initWithFormat:
addDisavowedSessionProperties:
disavowedSessionProperties
downloadPhasesToIgnore
handlerIdentifier
resetDisavowedSessionProperties
sessionsNeedPowerAssertion
sessionsShouldBlockOtherDownloads
setDownloadPhasesToIgnore:
setHandlerIdentifier:
setSessionsNeedPowerAssertion:
setSessionsShouldBlockOtherDownloads:
_disavowedSessionProperties
_downloadPhasesToIgnore
_handlerIdentifier
_sessionsNeedPowerAssertion
_sessionsShouldBlockOtherDownloads
checkInDialog:
checkOutDialog:
setActivityIdentifier:
setPollingDuration:
setPollingInterval:
setPostIdentifier:
setSourceApplicationIdentifier:
setPostCreateTime:
activityIdentifier
pollingDuration
pollingInterval
postIdentifier
sourceApplicationIdentifier
postCreateTime
_activityIdentifier
_pollingDuration
_pollingInterval
_postIdentifier
_sourceApplicationIdentifier
_postCreateTime
downloadIdentifier
assetIdentifier
downloadPhase
authenticationChallenge
initWithClientIdentifier:handlerIdentifier:
setAssetIdentifier:
setAuthenticationChallenge:
setDownloadIdentifier:
setDownloadPhase:
duetBudget
setDuetBudget:
isStoreDownload
setStoreDownload:
shouldSupressErrorDialogs
setShouldSupressErrorDialogs:
_assetID
_authenticationChallenge
_downloadPhase
_duetBudget
_storeDownload
_shouldSupressErrorDialogs
assetBlockedReason
setAssetBlockedReason:
downloadHandle
setDownloadHandle:
downloadHandlerSession
setDownloadHandlerSession:
mediaAssetIdentifier
setMediaAssetIdentifier:
mediaAssetInstallPath
setMediaAssetInstallPath:
result
setResult:
_assetBlockedReason
_downloadHandle
_downloadHandlerSession
_mediaAssetInstallPath
setMaxValue:
setUnits:
fileProcessor
setCurrentValue:
snapshot
sendProgressToDelegate
processPurchasedItem:withAttributes:resultInfo:progressBlock:
initWithMediaPath:sinfs:
mediaFileExtension
mediaPath
sinfs
_mediaFileExtension
_mediaPath
_sinfs
initWithSinfs:
initWithSinfArray:
dataForSinfDataKey:
_primarySINF
_copyAccountIdentifier
_copyRentalIdentifier
shouldCheckoutWithPlay
productType
checkoutType
initWithSINFs:
copyValueForProperty:error:
errorBySettingFatalError:
_showErrorDialogForOutput:
rentalDuration
rentalStartTime
dateWithTimeIntervalSince1970:
dateWithTimeInterval:sinceDate:
timeIntervalSinceNow
playbackStartTime
playbackDuration
_bodyData
isBackgroundCheckout
_handleResponse:error:
_performCheckout:
userInfo
_haveValidRentalInformation
defaultCenter
postNotificationName:
operationWithError:
initWithAccountIdentifier:rentalKeyIdentifier:
initWithStoreDownloadSinfs:
rentalKeyIdentifier
_run
setBackgroundCheckout:
shouldValidateRentalInfo
setShouldValidateRentalInfo:
setCheckoutWithPlay:
setCheckoutType:
_backgroundCheckout
_rentalKeyIdentifier
_shouldValidateRentalInfo
_checkoutWithPlay
_checkoutType
_databasePath
initWithDatabaseURL:readOnly:
statementHasRowAfterStepping:
prepareStatementForSQL:cache:usingBlock:
fileURLWithPath:isDirectory:
dSIDForAppleID:
_registerNotifier
batterySaverWatcherDidChangeState:
_getState
_notifyDelegate
initWithDelegate:
batterySaverEnabled
_updateStatus
_enabled
_notifyQueue
_token
_delegate
setPlaybackDuration:
setPlaybackStartTime:
setRentalDuration:
setRentalStartTime:
_playbackDuration
_playbackStartTime
_rentalDuration
_rentalStartTime
initWithUnsignedLongLong:
_isRecognizedProperty:
_copyValueForSINF:property:error:
copyValueForField:error:
newDownloadProperties
copyDatabaseDictionaryToSetClientDictionary:
cookiesForURL:
copyLockdownRepresentation
ITunesSafeGUID
queryWithDatabase:predicate:orderingProperties:
anyAssetForAssetType:
setDownloadType:
setProtectionType:
copyStoreDownloadMetadata
setItemMetadata:
setItemDownloadIdentifier:
directoryPathForDownloadID:kind:createIfNeeded:
initWithDownload:
incompleteNotificationForFailedDownload:bundleIdentifier:
failDownloadsWithIdentifiers:
addPersistentDownloadsWithClientID:kind:
_shouldSuppressDialogForError:
initWithError:
addDownloadIdentifier:
setDownloadKind:
setDownloadTitle:
sharedErrorController
showDownloadError:
allAssetCookies
incompleteNotificationForCanceledDownload:bundleIdentifier:
newsstandFinishRequestWithAppIdentifier:issueIdentifiers:
sinfsArray
rentalID
numberWithUnsignedInt:
_resetAssetProperty:
assets
_databaseAssetForAsset:
copyStoreDownloadKeyCookie
disambiguatedSQLForProperty:
_deleteTransaction
removeExternalValuesForDownloadID:
fileExistsAtPath:
isNullPredicateWithProperty:
copyValueDictionaryWithMetadata:
databasePropertyToGetClientProperty:
databasePropertyToSetClientProperty:
databaseTable
foreignDatabaseColumnForProperty:
foreignDatabaseTableForProperty:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
joinClauseForProperty:
memoryEntityClass
initialize
copyAdditionalMetadataForStoreDownload:
copyAssetsWithAssetType:
failWithError:
rentalInformation
resetAssetLocalPaths
resetAssetURLs
_URLResponse
applicationDSID
downloaderDSID
externalVersionIdentifier
familyID
itemID
purchaserDSID
storeFront
deviceIdentifierForVendor
setHasRestoreData:
setRestoreDataSize:
setStoreFrontID:
setStoreItemID:
setStoreSoftwareVersionID:
setVendorIdentifier:
setStoreAccountID:
setStoreOriginalPurchaserAccountID:
setDownloaderIdentifier:
setExternalVersionIdentifier:
setFamilyIdentifier:
setItemIdentifier:
setPurchaserIdentifier:
setStoreFrontIdentifier:
initWithApplication:
initWithDictionaryRepresentation:
dictionaryRepresentation
restoreDownloadItem
downloaderIdentifier
familyIdentifier
purchaserIdentifier
vendorIdentifier
_downloaderIdentifier
_externalVersionIdentifier
_familyIdentifier
_itemIdentifier
_purchaserIdentifier
_storeFrontIdentifier
_vendorIdentifier
challengeResponse
setChallengeResponse:
hostChallenge
setHostChallenge:
secureElementID
setSecureElementID:
serverEndpoint
setServerEndpoint:
_challengeResponse
_hostChallenge
_secureElementID
_serverEndpoint
_initDeviceScorerWithContext:
appendFormat:
stringWithString:
setCompletionBlock:
_loadURLBag
_hexEncodingForData:
_shouldEnableDeviceScoring
_serverEndpointIdentifierForServerEndpoint:
automaticType
setAutomaticType:
setBundleIdentifier:
setKind:
isLegacyClient
setLegacyClient:
requiresDownloadHandler
setRequiresDownloadHandler:
transferProgressFraction
setTransferProgressFraction:
_overallProgress
maxValue
setTransferProgress:
initWithPrepareDownloadResponse:
overallProgress
setFinishProgress:
setTransferProgressWithBytesWritten:totalBytesExpected:
transferBytesExpected
setTransferBytesExpected:
transferBytesWritten
setTransferBytesWritten:
transferResumptionOffset
setTransferResumptionOffset:
_automaticType
_downloadIdentifier
_bundleIdentifier
_kind
_legacyClient
_mediaAssetIdentifier
_requiresDownloadHandler
_storeItemIdentifier
_transferBytesExpected
_transferBytesWritten
_transferProgressFraction
legacyClient
_transferResumptionOffset
_refreshDidFinishNotification:
addObserver:selector:name:object:
_clientDisconnectNotification:
removeObserver:name:object:
setProductIdentifier:
setProductName:
setAppBundleId:
setAppName:
timeIntervalSince1970
setTimestamp:
insertPurchaseIntent:
launchApplicationWithIdentifier:options:error:
_clients
isSandboxed
_beginManagedContextSession
entityForContext:
initWithEntity:insertIntoManagedObjectContext:
setIdentifier:
setSandboxed:
objectID
initWithMicroPaymentClientID:
endManagedContextSession
refreshFromServerWithReason:accountIdentifier:
_dispatchAsync:
client
_enumerateDownloadsForIdentifiers:context:usingBlock:
setState:
numberWithFloat:
_clientForObjectID:
sendDownloadChangesets:
setLocalURL:
downloadEntityFromContext:
setEntity:
predicateWithFormat:
setPropertiesToFetch:
executeFetchRequest:error:
_clientForPayment:
addPaymentWithMessage:connection:
cancelDownloadsWithMessage:connection:
cancelRequestWithMessage:connection:
checkQueueForClientWithMessage:connection:
connectedAppEnteredForegroundWithMessage:connection:
finishPaymentWithMessage:connection:
getTransactionsWithMessage:connection:
pauseDownloadsWithMessage:connection:
productsRequestWithMessage:connection:
registerClientWithMessage:connection:
restoreCompletedTransactionsWithMessage:connection:
resumeDownloadsWithMessage:connection:
startDownloadsWithMessage:connection:
updateDeferredPaymentWithMessage:connection:
addInAppReviewRequestWithMessage:connection:
updateInAppReviewRequestWithMessage:connection:
resetInAppReviewRequestsWithMessage:connection:
addPurchaseIntentWithMessage:connection:
getPromotedIAPOrderWithMessage:connection:
setPromotedIAPOrderWithMessage:connection:
getPromotedIAPVisibilityWithMessage:connection:
setPromotedIAPVisibilityWithMessage:connection:
getPromotedIAPInfoInternalWithMessage:connection:
installSheetStateUpdatedWithMessage:connection:
forceSandboxWithMessage:connection:
_startFirstReadyPayment
payments
paymentEntityFromContext:
updatePaymentWithObjectID:purchaseResponse:
_newPaymentQueueClientWithMessage:connection:parameter:
_clientForConnection:paymentQueueClient:
addPaymentTransaction:withOptions:
addPurchaseIntentWithProductIdentifier:productName:appBundleId:appName:
_copyDownloadsIDsFromMessage:key:
cancelDownloadsWithIDs:
cancelOperationForConnection:
checkQueueForClientWithIdentifier:URLBagContext:
_sendPurchaseIntentsForApp:storeKitClient:force:
forceSandboxForBundleIdentifier:untilDate:
finishPaymentWithMessage:
incrementNetworkCounterForBagContext:
refreshFromServerWithReason:
openTransactions
decrementNetworkCounterForBagContext:
setAppBundleIdForCurrentInstallSheet:
pauseDownloadsWithIDs:
requestProductsWithMessage:connection:
XPCClient
setOutputConnectionWithConnection:
outputConnection
sendMessage:
createMicroPaymentClientIfNecessary
restoreCompletedTransactionsWithApplicationUsername:
resumeDownloadsWithIDs:
startDownloadsWithIDs:
setFailedWithError:
sendPaymentsUpdatedWithObjectIDs:
hasEntitlements
getOrderForIAPsInApp:completionHandler:
setOrderForIAPs:app:completionHandler:
getVisibilityForIAPs:app:completionHandler:
setVisibility:forIAP:app:completionHandler:
getInfoInternalForApp:completionHandler:
isBetaApp
isAdHocCodeSigned
isAppleSigned
_inAppReviewEnabled
_inAppReviewRequestConstants
sortDescriptorWithKey:ascending:
setSortDescriptors:
dateWithTimeIntervalSinceNow:
compare:
rated
bundleVersion
clientVersion
setBundleVersion:
setDate:
valueHash
setRated:
deleteObject:
hasChanges
setXPCClient:
networkType
firstReadyPaymentID
checkIntegrityWithInitializationBlock:
beginManagedContextSession
isEqualToXPCConnection:paymentQueueClient:
setPaymentQueueClient:
microPaymentClientID
initWithCapacity:
usesIdentityAttributes
identifier
storeIdentifier
storeVersion
sandboxed
setClient:
allValues
_setActivePaymentID:
_networkTypeChanged:
objectWithID:
insertDate
timestamp
sendPurchaseIntents:forApp:
deletePurchaseIntentsForApp:
getPurchaseIntentsForApp:completionHandler:
_firstReadyPaymentInContext:
_finishPaymentOperationForPaymentID:result:error:
startPaymentWithObjectID:withCompletionBlock:
notifyClientsOfExternalPropertyChanges:ofDownloadID:
startFirstReadyPayment
updateWithPurchaseResponse:
_activePaymentID
_aliveState
_changeSetCount
_observingNetworkChanges
_purchaseActionsDBQueue
_array
persistentStoreCoordinator
managedObjectModel
entitiesByName
transactionIdentifier
supportsDeferredPayment
managedObjectContext
requestType
isEqualToResponse:compareAllFields:
mergeValuesFromResponse:
originalTransactionIdentifier
rollback
setAddedPayments:
setChangedPayments:
setRemovedDownloadIDs:
setRemovedPayments:
setStoreIdentifier:
setStoreVersion:
setUsesIdentityAttributes:
hidesConfirmationDialogs
setHidesConfirmationDialogs:
ignoresInAppPurchaseRestriction
setIgnoresInAppPurchaseRestriction:
receiptDirectoryPath
setReceiptDirectoryPath:
requiresAuthenticationForPayment
setRequiresAuthenticationForPayment:
mergeResponse:withOptions:
replacePayment:withPurchaseResponse:
setValuesWithClientIdentity:
didChange
addedPayments
changedPayments
removedPayments
_addedPayments
_changedPayments
_removedPayments
applicationUsername
setApplicationUsername:
partnerIdentifier
setPartnerIdentifier:
partnerTransactionIdentifier
setPartnerTransactionIdentifier:
quantity
setQuantity:
requestData
setRequestData:
simulatesAskToBuyInSandbox
setSimulatesAskToBuyInSandbox:
discountIdentifier
discountNonceString
initWithUUIDString:
discountKeyIdentifier
discountSignature
discountTimestamp
initWithIdentifier:keyIdentifier:nonce:signature:timestamp:
setPaymentDiscount:
actionParams
initWithPayment:
errorData
purchaseDate
_setTransactionDate:
receiptData
_setTransactionReceipt:
_clientStateForServerState:
_setTransactionState:
_setTransactionIdentifier:
_temporaryIdentifier
_setTemporaryIdentifier:
originalPurchaseDate
_setOriginalTransaction:
copySKDownload
_setDownloads:
userDSID
setReceiptData:
setUserDSID:
setPurchaseDate:
setOriginalPurchaseDate:
setTransactionIdentifier:
setOriginalTransactionIdentifier:
_updateDownloadsFromResponse:
setAskPermissionRequestIdentifier:
setErrorData:
matchingIdentifier
awakeFromInsert
setInsertDate:
willChangeValueForKey:
setPrimitiveValue:forKey:
didChangeValueForKey:
transactionState
_serverStateForClientState:
transactionDate
transactionReceipt
paymentDiscount
setDiscountIdentifier:
keyIdentifier
setDiscountKeyIdentifier:
nonce
setDiscountNonceString:
setDiscountSignature:
setDiscountTimestamp:
isStoreOriginated
setActionParams:
originalTransaction
setDownloads:
anyObject
setValuesWithAssetDictionary:
setPayment:
remoteURL
responseIsValid:
copyPaymentTransaction
isReady
setValuesWithPaymentTransaction:
isTransientFailed
setTransientFailed:
_transientFailed
buyMicroPaymentOperation:shouldContinueWithNewStorefront:
clientIdentity
initWithClientIdentity:
setClientIdentity:
_appProxy
_fullBuyParametersWithAppProxy:
applicationProxyForIdentifier:
supportedProxyExtensionForBundleIdentifier:
hasMIDBasedSINF
escapedStringForString:
stringByAppendingFormat:
ams_activeiTunesAccount
setShouldCreateNewSession:
setTokenType:
setUserIdentifier:
loadFromPropertyList:
appReceipt
writeReceipt:forStoreKitClient:
shouldTriggerQueueCheck
appState
isValid
setValuesWithSoftwareApplicationProxy:
copyUTF8StringOfLength:
URLQueryAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
storeCohortMetadata
appendString:
characterSetWithCharactersInString:
paymentID
setPaymentID:
_applicationUsername
_clientIdentity
_partnerIdentifier
_partnerTransactionIdentifier
_productIdentifier
_quantity
_requestData
_response
_simulatesAskToBuyInSandbox
_paymentID
_discountIdentifier
_discountKeyIdentifier
_discountNonceString
_discountSignature
_discountTimestamp
setMaxConcurrentOperationCount:
setName:
removeAllCachedResponses
sharedCoordinator
_accountStoreDidChangeNotification:
getStatusWithOptions:statusBlock:
contentTasteItemUpdates
setContentTasteItemUpdates:
shouldInvalidateLocalCache
setShouldInvalidateLocalCache:
expirationDate
isEqualToDate:
currentLocale
descriptionWithLocale:
_addBackgroundRefreshTask
isCachedResponse
responseRevisionID
_sendChangeNotificationWithRevisionID:
operations
addDependency:
updateMediaContentTasteWithRequest:completionHandler:
_accessQueue
_currentAccountUniqueID
_didChangeNotifyToken
_expirationDate
_hasValidDidChangeNotifyToken
_operationQueue
isEqualToArray:
makeObjectsPerformSelector:withObject:
mergeWithServerTransaction:
arrayWithCapacity:
setIsStoreOriginated:
getPaymentDiscountFromTransactionXPCEncoding:
canMergeWithTransaction:
mergeWithTransaction:
_transactionIdentifier
initWithServerTransaction:
_uuid
_originalTransaction
_payment
_transactionDate
_transactionReceipt
_transactionState
_ntsLoadFromPropertyList:
_dsidFromDictionary:
UTF8String
_copyPaymentsFromDictionary:
_copyAppReceiptFromDictionary:
initWithRequestType:
appendResponse:
serverPaymentCount
setServerPaymentCount:
setPayments:
setRangesToLoad:
setShouldTriggerQueueCheck:
_appReceipt
_lock
_payments
_requestType
_serverPaymentCount
_shouldTriggerQueueCheck
setPrice:
setPaymentMode:
unsignedIntegerValue
setNumberOfPeriods:
periodFromISO8601String:
setSubscriptionPeriod:
setType:
price
decimalNumberWithString:
_setPrice:
paymentMode
_setPaymentMode:
numberOfPeriods
_setNumberOfPeriods:
_setIdentifier:
type
_setType:
unit
_setUnit:
subscriptionPeriod
numberOfUnits
_setNumberOfUnits:
_setSubscriptionPeriod:
copyProductDiscount
_price
_subscriptionPeriod
_numberOfPeriods
_paymentMode
_type
_identifier
initWithContentsOfFile:options:error:
_numberOfUnits
_unit
scannerWithString:
scanString:intoString:
scanInteger:
scanCharactersFromSet:intoString:
initWithISO8601String:
initMinusLocaleWithDictionary:
initWithLocaleIdentifier:
_setLocale:
introductoryPrice
_setPriceLocale:
initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:
decimalNumberByRoundingAccordingToBehavior:
downloadContentLengths
downloadContentVersion
_localeIdentifier
_setLocaleIdentifier:
initMinusLocaleWithXPCEncoding:
productsFromDictionaries:
productsFromXPCEncodingsArray:
contentLengths
isDownloadable
downloadable
localizedTitle
priceLocale
subscriptionGroupIdentifier
discounts
_setContentVersion:
_setDownloadContentLengths:
_setDownloadable:
_setIntroductoryPrice:
_setLocalizedDescription:
_setLocalizedTitle:
_setProductIdentifier:
_setSubscriptionGroupIdentifier:
_setDiscounts:
_downloadable
_downloadContentLengths
_introductoryPrice
_localizedDescription
_localizedTitle
_priceLocale
_subscriptionGroupIdentifier
_discounts
setIgnoresCaches:
_newMatchStatusOperationWithURLBag:
matchStatus
_matchStatus
_parseResponse:returningError:
_userDSID
_completeNotification:bundleIdentifier:
_incompleteNotification:forDownload:bundleIdentifier:
generateSymbolicatedStackShot
timeIntervalSinceReferenceDate
completeNotificationForCanceledBundleIdentifier:
completeNotificationForFailedBundleIdentifier:
completeNotificationForInstallingBundleIdentifier:
deleteIncompleteNotification:forBundleIdentifier:
beginThreadContextSession
endThreadContextSession
beginPrivateManagedContextSession
endPrivateManagedContextSession
save:
initWithStoreType:
initWithConfiguration:error:
initWithXPCConnection:
createXPCEndpoint
_disconnect
setDisconnectBlock:
_handleMessage:connection:
setMessageBlock:
initWithMessage:
XPCEndpoint
_delegateQueue
_inputConnection
_inputEndpoint
_outputConnection
setRedirectActionParameters:
urlType
processDictionary:error:
_processBuyFailuresFromDictionary:error:
setPerformsButtonAction:
defaultAuthKitAuthenticationContext
runSubOperation:error:
setPasswordEquivalentToken:
selectedButton
_performActionsForButton:withDialog:
setAuthenticatedAccountCredentialSource:
setAuthenticatedAccountDSID:
_runServerAuthenticationOperation:error:
_redirectActionParameters
isInstalled
isPlaceholder
initWithApplicationHandle:
applicationIsInstalled:
blocksAppInstallation
runWithCompletionBlock:
applicationHandle
_applicationHandle
registerCacheDeleteInfoCallbacks
scheduledTimer
_purgeable:urgency:
_purge:urgency:
_cancelPurge
setScheduledTimer:
_pushUpdatedAvailableStorage
purgeableSpace
sharedCFURLCache
_currentPurgeable
_purchaseHistoryCache
purge:
_isStale
_refreshPurgeableStorage
updatePurgeableStorage
_periodic:urgency:
_combinedSpaceByUrgency
_lastUpdate
__purchaseHistoryCache
_scheduledTimer
initWithDatabase:
initWithClientIdentifier:
defaultManager
allCachedManifests
version
compare:options:
sortedArrayUsingComparator:
currentManifestFileURL
URLByResolvingSymlinksInPath
cacheURL
attributesOfItemAtPath:error:
fileCreationDate
removeItemAtURL:error:
URLByStandardizingPath
assetsDirectoryURL
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
initWithClientIdentifier:completion:
_cacheManager
_completion
setOperationQueue:
initWithProductIdentifiers:
setValuesWithPaymentQueueClient:
copyProductsResponse
addOperation:forMessage:connection:replyBlock:
addOperation:forClient:withMessageBlock:
setSharedInstance:
setAdjustsMaxConcurrentOperationCount:
addKeepAliveOperationQueue:
bundleType
_batchSizeForIdentity:error:
_loadResponseForIdentity:batchSize:returningError:
autoupdatingCurrentLocale
localeIdentifier
componentsJoinedByString:
_copyQueryStringDictionaryForIdentity:productIdentifiers:
setExpectedIdentifiers:
loadFromDictionary:error:
productIdentifiers
sortedArrayUsingSelector:
_copyResponseForIdentity:identifiers:returningError:
products
invalidIdentifiers
copyProduct
_setInvalidIdentifiers:
_setProducts:
_productIdentifiers
_isSandboxed
_postBodyData
initWithReceiptFlags:
receiptFlags
setAccountScope:
resultBlock
setResultBlock:
storeExternalVersion
storeItemIdentifier
isRevoked
initWithClient:requestingClientIdentifier:receiptFlags:
_client
_existingReceipt
_flags
_requestingClientIdentifier
_resultBlock
removeKeepAliveOperationQueue:
databaseIdentifier
initWithRequest:
_addUploadTaskWithRequest:configuration:URLRequest:
_failUploadWithDatabaseID:error:
taskIdentifier
cancel
_asyncModifyTasksForDatabaseIDs:usingBlock:
invalidateAndCancel
initWithURLResponse:data:
countOfBytesSent
setCountOfBytesSent:
itunes_statusCode
_cleanupForDatabaseID:
uploadSessionController:taskDidStopWithDatabaseID:
configuration
uploadSessionController:uploadDidFinishWithDatabaseID:response:
uploadDatabaseIdentifier
setUploadDatabaseIdentifier:
setCountOfBytesExpectedToSend:
_flushProgress
uploadSessionController:uploadDidBeginTransferWithDatabaseID:
sessionWithConfiguration:delegate:delegateQueue:
localAssetURL
uploadTaskWithRequest:fromFile:
resume
getTasksWithCompletionHandler:
uploadSessionController:uploadDidFailWithDatabaseID:error:
uploadSessionController:uploadProgressDidChange:
countOfBytesExpectedToSend
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
initWithDispatchQueue:
addUploadTasksWithRequests:
cancelUploadTasksWithDatabaseIdentifiers:
invalidURLSessions
numberOfTasks
pauseUploadTasksWithDatabaseIdentifiers:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
_preparationQueue
_progressFlushTimer
_sessions
_uploadDatabaseIDs
profileValidated
checkClaimsEstablishingActiveAccounts:ignoringPreviousClaimAttempts:completionBlock:
setShouldAddKeysToKeyBag:
accountID
_getDownloaderIdentifier:purchaserIdentifier:forApplication:
setFamilyMemberAccountIdentifier:
keybagOptions
setShouldPromptForCredentials:
initWithKeybagRequest:clientIdentifierHeader:userAgent:
initWithKeybagRequest:client:
claimedBundleIdentifiers
_request
_claimedBundleIdentifiers
expectedIdentifiers
_expectedIdentifiers
_invalidIdentifiers
_products
removeBackgroundTaskObserver:
newEntityValuesWithMediaSocialPost:
contentItems
insertEntitiesForContentItems:
externalServiceDestinations
insertEntitiesForExternalDestinations:
attachments
insertEntitiesForAttachments:withProperties:
initWithEntity:accountIdentifier:
_enqueueNextReadyMediaSocialPostOperationWithDatabase:
_newAddUploadsMessageWithDatabase:hydratedUploadIDs:
_sessionController
_databaseIfExists
_cleanupPendingUploads:database:
_resumeUploadsWithPredicate:clientIdentifier:resetFailureCount:error:
_isConnectionEntitled:
_sendAccessDeniedErrorWithMessage:connection:
_copyPersistentIdentifiersArrayWithXPCArray:
containsPredicateWithProperty:values:
_cancelUploadsWithPredicate:clientIdentifier:error:
_handleMessage:connection:usingReplyBlock:
_orderedUploadQueryWithDatabase:predicate:
_enumerateSSVDirectUploadsWithQuery:block:
cancelUploadsWithMessage:connection:
getUploadsWithMessage:connection:
pauseUploadsWithMessage:connection:
registerObserverWithMessage:connection:
resumeUploadsWithMessage:connection:
_pauseUploadsWithPredicate:clientIdentifier:error:
_registerObserverWithMessage:connection:
_cleanupSessionController
_newSSVDirectUploadWithProgress:state:
setPersistentIdentifier:
_sendChangeUploadsMessageWithUploads:
postEntity
_errorCoordinator
addDialogForUpload:
_authenticationCoordinator
authenticateForUploadWithIdentifier:accountIdentifier:
_scheduleDelayedRetry
setProcessingWithResponse:
authenticateResponse
authenticatedAccount
containsPredicateWithProperty:query:queryProperty:
authenticateResponseType
addDialogForUploadIdentifiers:
isFinished
postIdentifiers
uploadIdentifiers
allUploadPersistentIdentifiers
_sendRemoveUploadsMessageWithUploadIdentifiers:
setValue:forKey:
updateWithPollingResponse:
_finishPostWithPostIdentifier:response:
numberOfPollRequests
indexOfObjectIdenticalTo:
isOverPollDuration
statusPollRequest
_pollingCoordinator
addPollRequest:
initFileURLWithPath:isDirectory:
fileExistsAtPath:isDirectory:
_postOperationQueue
operationCount
_orderedPostQueryWithDatabase:predicate:
isReadyToSend
postID
initWithPostEntity:
_operationDidFinishForPostIdentifier:response:
persistentIdentifier
enumerateSSVDirectUploadsUsingBlock:
status
serviceErrorMessage
addDialogForPost:errorMessage:canRetry:
addDialogForPost:
pollDuration
resetStatusProperties
dismissAllDialogs
authenticationCoordinator:didFinishAuthenticationWithResponse:
mediaSocialErrorCoordinator:didFinishWithResult:
pollingCoordinator:didPollWithResponses:
addMediaSocialPostWithDescription:client:
_retryFailedEntities
_backgroundTaskObserver
_progressDictionary
setNumberOfUnits:
setUnit:
setLocaleIdentifier:
setLocalizedDescription:
setHosted:
setLocalizedTitle:
setContentVersion:
setSubscriptionGroupIdentifier:
setContentSize:
setIntroductoryPrice:
arrayWithArray:
setDiscounts:
isHosted
contentSize
_contentSize
_hosted
initWithDownloadQueueRequest:
_runPendingCancelDownloadOperations
_newURLOperation
queueCountURLBagKey
downloadQueueRequest
numberOfAvailableDownloads
_numberOfAvailableDownloads
authorIdentifier
authorType
text
isAttributed
setAccessToken:
setPageAccessToken:
setPageIdentifier:
setServiceIdentifier:
initWithDouble:
_insertUploadWithAttachment:properties:database:
enumerateChildAttachmentsUsingBlock:
newEntityValuesWithMediaSocialPostItem:
newEntityValuesWithMediaSocialExternalDestination:
hasActiivtyID
setOrderingClause:
setAlbumIdentifier:
setAssetToken:
setAssetTokenType:
setAttachmentDescription:
setCategoryName:
setExplicitContent:
setPreviewFrameTimestamp:
setTitle:
setUploadTime:
setUTI:
artists
setArtists:
setChildAttachment:forRelationship:
deleteAllEntities
newEntityValuesWithMediaSocialAttachment:
insertEntitiesForArtists:withProperties:
uploadedAttachments
_runForIdentity:
_newFetchOperationForIdentity:startID:endID:
paymentBatchBlock
_copyResponseForIdentity:startID:endID:returningError:
isPartialFailure
setPaymentBatchBlock:
_partialFailure
_paymentBatchBlock
bundleID
applicationProxyForIdentifier:placeholder:
foundBackingBundle
installProgressForApplication:withPhase:
_bundleID
assignToPersonID
_assignToPersonWithID:withIdentifier:
assignToContactID
_assignToContactWithID:withIdentifier:
shouldMakeDefault
shouldMakeDefaultTextTone
setCurrentToneIdentifier:forAlertType:
setAdamID:
assigneeToneStyle
setAssigneeToneStyle:
assigneeIdentifier
setAssignToPersonID:
assigneeContactIdentifier
setAssignToContactID:
shouldMakeDefaultRingtone
setShouldMakeDefault:
setShouldMakeDefaultTextTone:
unifiedContactWithIdentifier:keysToFetch:error:
_assignToContact:inContactStore:withSoundIdentifier:
contactIdentifierFromPersonID:
initWithSound:vibration:ignoreMute:
setTextAlert:
setCallAlert:
updateContact:
executeSaveRequest:error:
entityFromContext:
applyUserActionWithToneIdentifier:
loadFromPurchase:
initWithMangedObjectContext:
ringtonesForAdamID:transactionID:
null
setTransactionID:
addRingtonesForPurchases:
finalizeRingtoneForAdamID:transactionID:toneIdentifier:
prunePurchasedRingtones
removeRingtonesForPurchases:
removeRingtoneForAdamID:transactionID:
updateRingtonesForPurchases:withDownloads:
_context
_ownsContext
_downloadRemoteFile:toLocalPath:expectedMD5:ifModifiedSince:error:
itunes_allHeaderFields
parseJSONData:error:
loadCurrentCachedManifest
_bundledManifest
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
manifestsDirectoryURL
_uncachedAssetsForManifest:
assetFileURL:
name
assetWithName:
copyItemAtURL:toURL:error:
serverURL
scheme
URLByDeletingLastPathComponent
URLByAppendingPathComponent:
manifestFileURL:
writeToURL:options:error:
setCacheURLsOnManifestAndAssets:error:
createSymbolicLinkAtURL:withDestinationURL:error:
lastPathComponent
dataWithContentsOfURL:
_setCacheURL:
_allCachedAssetFileNames
assetFileName:
initWithManifestURL:bundledManifestURL:clientIdentifier:userAgent:scheduledInBackground:previousLastModified:completion:
_bundledManifestURL
_manifestURL
_previousLastModified
_scheduledInBackground
setArtistID:
setArtistName:
setBundleID:
setBetaExternalVersionIdentifier:
setThirtyTwoBitOnly:
setBuyParams:
setCancelDownloadURL:
setCancelIfDuplicate:
setClientID:
setCollectionName:
databaseID
setDivertedTrackingID:
setIsDeviceBasedVPP:
setEnableExtensions:
setIsFromStore:
setIsTVTemplate:
setGenre:
setGenreID:
setIsInQueue:
setIsPurchasedRedownload:
setIsRestore:
setItemID:
setHasMessagesExtension:
setLaunchProhibited:
setMessagesArtworkURL:
setExternalOrderKey:
dateWithTimeIntervalSinceReferenceDate:
setRatingLabel:
setRatingRank:
setReleaseDate:
setStoreAccountName:
setStorefront:
setStoreDownloadKey:
setStoreTransactionID:
setSoftwareIconNeedsShine:
setSoftwareVersionExternalIdentifier:
setStoreCohort:
setThumbnailURL:
setVariantID:
_newAssetArrayWithDownloadAssets:
setAssets:
copyJobAsset
copyJobActivity
operationForConnection:
_cancelRequest:connection:
_disconnectRequest:connection:
operationQueue
copyInputConnection
disconnectOperationForConnection:
setClient:forOperation:
tokenAvailabilityForAccountIdentifier:
deviceBiometricStyle
sharedAccountsAuthenticationConfig
initWithAuthenticationContext:
setBiometricState:
saveIdentityMap:forAccountIdentifier:
registerAccountIdentifier:
requiresStoreAuthentication
setRequiresStoreAuthentication:
_authenticateWithAccount:error:
_updateTouchIDSettingsForAccount:
_authToken
_requiresStoreAuthentication
download
transactionID
initWithTransactionIdentifier:downloadIdentifier:
mediaAsset
restoreState
keepSafeHarborDataForBundleID:
_restoreDataForBundleID:restoreState:error:
finishWithDownloadResponse:
priority
initWithBundleIdentifier:withPriority:isFailed:
_isFatalRestoreError:
sleepForTimeInterval:
addDownloadsUsingManifestWithMessage:connection:
authorizeMachineWithMessage:connection:
checkinRentalWithMessage:connection:
checkoutRentalWithMessage:connection:
demoteApplicationWithMessage:connection:
getAccountPurchaseHistoryWithMessage:connection:
getApplicationWithMessage:connection:
getApplicationCapabilitiesMessage:connection:
getAvailableItemKindsWithMessage:connection:
getFamilyCircleWithMessage:connection:
getKBSyncWithMessage:connection:
getPlayInfoWithMessage:connection:
getSoftwareLibraryItemsWithMessage:connection:
getUserApplicationsWithMessage:connection:
haveApplicationsOfTypeWithMessage:connection:
invalidateURLBagWithMessage:connection:
keybagRequestWithMessage:connection:
personalizeOffersWithMessage:connection:
pushNotificationRequestWithMessage:connection:
pushNotificationTokenRequestWithMessage:connection:
redeemCodesWithMessage:connection:
rentalSyncRequestWithMessage:connection:
sendAskToBuyWithMessage:connection:
showDialogRequestWithMessage:connection:
showServerPromptWithMessage:connection:
softwareLibraryItemSetValuesWithMessage:connection:
addMediaSocialPostWithMessage:connection:
getMediaSocialShareExtensionVisibilityWithMessage:connection:
isRemovedSystemAppWithMessage:connection:
playableApplicationsWithMessage:connection:
hasDemotedApplicationsWithMessage:connection:
getRemovableSytemApplicationsWithMessage:connection:
isInstalledAppWithMessage:connection:
sdk_getStorefrontCountryCodeWithMessage:connection:
handlePurchaseIntentActionWithMessage:connection:
saveInstallAttributionParamsWithMessage:connection:
sendInstallAttributionPingbackWithMessage:connection:
collectURLSessionDataWithMessage:connection:
_newClientWithMessage:connection:
_sendUnentitledMessageToClient:
manifestResponse
postDescription
_sendMessageWithError:toClient:
initWithAuthorizationRequest:
shouldPromptForCredentials
shouldAddKeysToKeyBag
initWithCheckinRequest:
_sendUnentitledReplyForMessage:connection:
initWithBundleIdentifier:
initWithPurchaseHistoryItems:authenticationContext:
purchasedItems
applicationForBundleIdentifier:applicationType:
applicationForBundleIdentifier:
copyCachedAvailableItemKinds
availableStorefrontItemKinds
auditTokenData
isCurrentUserAdmin
playInfoContext
initWithPlayInfoRequestContext:
playInfoResponse
initWithItemIdentifiers:
initWithBundleIdentifiers:
softwareLibraryItems
loadedMap
applications
hasDemotedApplications
enumerateApplicationsOfType:block:
invalidateURLBagForContext:
isInstalledApp:
isRemovedSystemApp:
items
initWithItems:
initWithPersonalizeOffersRequest:
postPushTokens
pushNotificationParameters
initWithPushNotificationParameters:
redeemCodes
initWithRedeemCodes:
headless
setHeadless:
cameraRecognized
setCameraRecognized:
logCorrelationKey
setLogCorrelationKey:
params
setParams:
redeemResponse
initWithURL:resolvingAgainstBaseURL:
queryItems
value
initWithAdamId:
encodedDialog
dialogResponse
initWithPromptIdentifier:
initWithBundleIdentifier:changeset:
sharedManager
_saveHTTPArchiveBufferToDiskDecompressed:
hasDemotedApplicationsWithMessage2:connection:
setPrivateDelegate:
dismissWithCompletion:
shouldUppercaseText
username
_completeWithSuccess:error:
_paymentRequest
numberWithUnsignedInteger:
_presentPaymentSheetWithPaymentRequest:error:
_metricsDialogEvent
_postMetricsWithDialogEvent:
completionHandlerForAutoEnrollment
completionHandler
setCompletionHandlerForAutoEnrollment:
containerCompletionHandler
setContainerCompletionHandler:
hasSuffix:
localAuthAccessControlRef
localAuthContext
localAuthOptions
setAccesssControlRef:
setAppleIDAuthenticationContext:
externalizedContext
setExternalizedContext:
isApplePayClassic
merchantSession
setRequestType:
appleIDAuthenticationContext
currencyCode
setCurrencyCode:
countryCode
setCountryCode:
titleType
title
setLocalizedNavigationTitle:
payeeType
_paymentRequestorTypeForPayeeType:
setRequestor:
requestor
localizedNavigationTitle
setMerchantSession:
setMerchantCapabilities:
setWithObject:
setSupportedCountries:
setSupportedNetworks:
salableInfoLabel
salableIconURL
salableIconType
_createImageRefWithURL:adornmentStyle:
setImage:
inlineImages
isServerSupplied
urlString
ratingType
_createRatingImageWithStringValue:assetScale:
localAssetName
tint
numberWithLong:
setLabel:
ratingHeader
ratingValue
flexList
string
attributedList
componentsSeparatedByString:
summaryItemWithLabel:amount:type:
setLocalizedAmount:
setUseDarkColor:
setUseLargeFont:
enumerateAttribute:inRange:options:usingBlock:
paymentSummary
storeName
decimalValue
decimalNumberWithDecimal:
summaryItemWithLabel:amount:
accountHeader
stringWithFormattedUsernameForString:username:
setPaymentContentItems:
setPaymentSummaryItems:
setPaymentSummaryPinned:
setSuppressTotal:
priceSectionItems
label
zero
setLocalizedSummaryItemsTitle:
shouldSuppressPrice
confirmationTitleType
setConfirmationStyle:
initWithPaymentRequest:
presentWithCompletion:
_paymentSheetStyle
userActionDictionaryForBiometricMatchState:didBiometricsLockout:
userActionDictionaryForUserAction:didBiometricsLockout:
buyParams
authorizationDialogEventForParameters:
setUserActions:
initWithGlobalConfiguration:
setGlobalConfiguration:
insertEvent:withCompletionHandler:
flushUnreportedEventsWithCompletionHandler:
setNeedsURLBag:
_imageTypeForURL:
_createBorderPathForAdornmentStyle:iconWidth:iconHeight:
_createDefaultImageWithImageRef:size:borderPath:
_createMaskedImageRefForImageRef:withPathRef:andAdornmentStyle:
_createRGBImageRefForGreyScaleImageRef:width:height:
_createImageMaskRefWithSize:andPath:
screenScale
authKitAuthenticationResults
_isChallengeReadyToBeSigned
signDataWithKeychain:accountIdentifier:purpose:localAuthContext:localAuthOptions:error:
_challengeSigningDelay
initWithStatus:errors:
token
paymentData
paymentAuthorizationControllerDidFinish:
paymentAuthorizationController:didAuthorizePayment:handler:
paymentAuthorizationController:didAuthorizePayment:completion:
paymentAuthorizationControllerWillAuthorizePayment:
paymentAuthorizationController:didRequestMerchantSessionUpdate:
paymentAuthorizationController:didSelectShippingMethod:handler:
paymentAuthorizationController:didSelectShippingContact:handler:
paymentAuthorizationController:didSelectPaymentMethod:handler:
paymentAuthorizationController:didSelectShippingMethod:completion:
paymentAuthorizationController:didSelectShippingContact:completion:
paymentAuthorizationController:didSelectPaymentMethod:completion:
presentationWindowForPaymentAuthorizationController:
dismiss
setLocalAuthAccessControlRef:
_createResizedImageWithOriginalImage:targetHeight:
paymentAuthorizationController:didEncounterAuthorizationEvent:
paymentAuthorizationController:willFinishWithError:
touchIDDelayEnabled
setLocalAuthOptions:
setLocalAuthContext:
_assetScaleIndex
_assetScaleRef
_controller
_imageArrayIndex
_imageArrayRef
_inlineImageArrayIndex
_inlineImageArrayRef
_tintArrayIndex
_tintArrayRef
_didAuthorizePayment
_didAttemptDualActionBuy
_didBiometricsLockout
_didCancelHomeButton
_didFinishPayment
_fpanID
_isASNPurchase
_paymentSheet
_paymentTokenData
_passwordEquivalentToken
_signedChallenge
_urlBag
_userActions
_touchIDDelayEnabled
_localAuthAccessControlRef
_accountName
_challenge
_containerCompletionHandler
_completionHandler
_completionHandlerForAutoEnrollment
_dialogId
_localAuthOptions
_localAuthContext
manifestFormat
shouldHideUserPrompts
URLRequest
_initWithPersistentIdentifier:
setValidDownloads:
_runForPurchaseFormatWithURLRequest:error:
_runForPublicFormatWithURLRequest:error:
manifest
validDownloads
_processValidDownloads:
invalidDownloads
_showDialogForError:
initWithPropertyList:
_showConfirmationPromptForManifest:response:
setDatabaseID:
sendSoftwareDownloads:withReason:manifestType:
setShouldProcessProtocol:
initWithURLRequest:
setRequiresExtendedValidationCertificates:
setRequiresHTTPS:
setRequiresExternal:
_handlePublicResponseForOperation:error:
initWithStoreDownload:
sendBookStoreDownloads:withReason:
initWithValidDownloads:invalidDownloads:
host
substringToIndex:
initWithTitle:message:
buttonWithTitle:
setButtons:
operationWithDialog:
setManifestFormat:
setShouldHideUserPrompts:
setURLRequest:
_downloadIDs
_manifest
_manifestFormat
_shouldHideUserPrompts
_urlRequest
destinationURLString
stringByAppendingPathExtension:
enumerateMemoryEntitiesUsingBlock:
copyWritableMetadata
pinfsArray
downloaderAccountIdentifier
familyAccountIdentifier
purchaserAccountIdentifier
variantIdentifier
assetType
databaseEntityClass
defaultProperties
artistName
artworkTemplateName
collectionName
destinationDirectoryPathForAsset:
documentTargetIdentifier
downloadPermalink
durationInMilliseconds
genreName
hasRestoreData
isDeviceBasedVPP
isHLS
isPodcastDownload
isRentalDownload
isRestoreDownload
isSampleDownload
isSharedDownload
isTvTemplate
ITunesMetadataDestinationPath
libraryItemIdentifier
loadAssetsUsingSession:
newITunesMetadataDictionary
secondaryAssetForType:
storeAccountIdentifier
storeAccountName
storeCollectionIdentifier
storePublicationVersion
storeSagaIdentifier
storeTransactionIdentifier
storeXID
storeMetadata
setStoreMetadata:
secondaryAssets
_mediaAsset
_secondaryAssets
_storeMetadata
_keyIdentifier
_nonce
_signature
_timestamp
userVersion
createOrUpdateSchemaInDatabase:
databasePath_11_0_00
stringByAppendingString:
setUserVersion:
_parsePropertyList:
applicationType
initWithExternalManifestDictionary:
_invalidDownloads
_validDownloads
_initializeProgress
_performBOMCopy:
destinationFilePath
_applyFileAttributesToDirectory:error:
subpathsOfDirectoryAtPath:error:
fileAttributes
initWithDomain:code:userInfo:
initWithShort:
setAttributes:ofItemAtPath:error:
drain
_copierUpdatedFileWithPath:size:
initWithCString:encoding:
cStringUsingEncoding:
_updateProgressWithByteCount:
sourceFilePath
resetSnapshots
sourceFileType
_newBOMCopierOptions
currentValue
_copierFinishedFileWithPath:size:
_copierStartedFileWithPath:size:
setDestinationFilePath:
setFileAttributes:
setSourceFilePath:
setSourceFileType:
_activeFileBytesCopied
_activeFilePath
_destinationFilePath
_fileAttributes
_lastSnapshotTime
_sourceFilePath
_sourceFileType
installType
enumerateBundlesOfType:block:
storeAccountID
_appleIDForApp:
_accountIdForAppleID:
setStoreAccountAppleID:
isEligibleForRestore:
initWithDownloadItems:account:
setShouldShowTermsAndConditionsDialog:
_notifyCompletion
requestItems
serverResponse
storeItemID
bundleContainerURL
restoreDownloadItemsOperation:didReceiveResponse:
initWithBundleIdentifiers:options:
_bundleIDs
_options
_accountsCacheDB
environmentName
registerTokenForEnvironmentName:accountIdentifier:completionBlock:
_loadResponseWithAccountIdentifier:URL:error:
_copyParametersDictionary
_parameters
initWithPath:dpInfo:
initWithDPInfo:
_decryptWithSession:error:
fileHandleForUpdatingAtPath:
_initializeProgressWithFileHandle:
readDataOfLength:
decryptBytes:error:
offsetInFile
seekToFileOffset:
writeData:
synchronizeFile
closeFile
fileDescriptor
_dpInfo
_fairplayDecryptSession
firstDataForSinfDataKey:
_sinfsArrayWithDataKey:
isDRMFree
sinfForIdentifier:
_info
request
lastQueueCheckDate
_loadCountReturningError:
newStoreURLOperation:
_setCountWithResponse:error:
setQueueItemCount:
setLastQueueCheckDate:
queueItemCount
setRequest:
_lastQueueCheckDate
_queueItemCount
_ntsQueryParameters:
_copyApplicationIdentity:
rangeEndIdentifier
rangeStartIdentifier
setRangeEndIdentifier:
setRangeStartIdentifier:
usesSoftwareMap
_rangeEndIdentifier
_rangeStartIdentifier
_appendNormalQueueToResponse:error:
_shouldCheckAutoRenewQueue
_appendAutoRenewQueueToResponse:error:
setPaymentsResponse:
setQueueCountURLBagKey:
setQueuePaymentsURLBagKey:
_appendToResponse:usingOperation:error:
userDSIDs
expectedCount
setExpectedCount:
queuePaymentsURLBagKey
urlForKey:
paymentsResponse
setUserDSIDs:
_paymentsResponse
_userDSIDs
_loadResponseReturningError:
_parsePropertyList:error:
_appendRangeRequestsToResponse:error:
setResponse:
productName
appBundleId
appName
_productName
_appBundleId
_appName
_getQueueCount:error:
_loadPaymentsWithExpectedCount:error:
_expectedCount
_queueCountURLBagKey
_queuePaymentsURLBagKey
installAsset:error:
_performImport
removeInstalledAsset:error:
rollbackAsset:error:
_ringtoneGUID
_newRingtoneDictionary
destinationFileName
_importPurchasedToneWithMetadata:fileName:
statusCode
toneIdentifier
writeBinaryPropertyList:toPath:error:
addPurchaseManifestItem
_loadStoreCoordinatorWithIntegrityCheck:error:
storeType
currentThread
threadDictionary
initWithConcurrencyType:
setPersistentStoreCoordinator:
setUndoManager:
_baseFilePath
integrityCookieFileName
createFileAtPath:contents:attributes:
databaseFileName
processInfo
arguments
modelFileName
_newLegacyManagedObjectModel
inferredMappingModelForSourceModel:destinationModel:error:
databaseFileURL
URLByAppendingPathExtension:
registeredStoreTypes
pointerValue
migrationManagerClass
initWithSourceModel:destinationModel:
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
moveItemAtURL:toURL:error:
destroyPersistentStoreAtURL:withType:options:error:
moveItemAtPath:toPath:error:
initWithManagedObjectModel:
addPersistentStoreWithType:configuration:URL:options:error:
performLightweightMigration:
modelFileURL
initWithContentsOfURL:
loadStoreCoordinatorWithOptions:error:
resetStore:
metadataForPersistentStoreOfType:URL:options:error:
legacyModelVersionIdentifiers
entityVersionHashesByName
isEqualToDictionary:
_configuration
_model
_storeCoordinator
_threadContextKey
_threadCountKey
setDatabaseFileName:
setLegacyModelVersionIdentifiers:
setModelFileName:
setStoreType:
_databaseFileName
_legacyModelVersionIdentifiers
_modelFileName
_storeType
subscriptionEntitlementsBlock
ignoreCaches
cachedSubscriptionEntitlementsExpired:
_fetchSubscriptionEntitlements:
setSubscriptionEntitlementsBlock:
_parseJSONDictionary:
setCachedSubscriptionEntitlements:
setIgnoreCaches:
_ignoreCaches
_subscriptionEntitlementsBlock
_initializeExtractorWithPath:options:
setExtractorDelegate:
supplyBytes:withCompletionBlock:
resumptionOffset
_diskUsageForPath:
finishStreamWithCompletionBlock:
suspend
suspendStreamWithCompletionBlock:
initWithPath:options:
finishWithResult:
prepareForExtraction:
waitUntilFinished
setWithCapacity:
_stringWithFileSystemRepresentation:length:
stringWithFileSystemRepresentation:length:
setExtractionProgress:
extractionCompleteAtArchivePath:
extractionEnteredPassThroughMode
consumeData:error:
diskUsage
finish:
truncate
_stringWithFileSystemRepresentation:
hasConsumedData
percentComplete
_extractor
_hasConsumedData
_percentComplete
_resumptionOffset
_copyRequestBody:
_failWithError:
_setResponseForOutput:
playbackType
playerGUID
SICData
initWithPlayInfoData:error:
_setPlayInfoResponse:
allowSilentAuthentication
keybagPath
authorizationToken
setAllowsSilentAuthentication:
isScreenLocked
deviceName
_newBodyDictionary
_newAuthenticationContext
setAuthorizationToken:
_runAuthentication:
_runAuthorizationWithAuthentication:error:
_setResponse:
_newMachineDataOperationWithResponse:
familyMemberAccountIdentifier
setAllowSilentAuthentication:
setKeybagPath:
_allowSilentAuthentication
_familyMemberAccountIdentifier
_keybagPath
_mdRetryCount
_shouldAddKeysToKeyBag
_shouldPromptForCredentials
_resetLastRegisterAttemptTime
_updatePushEnabledState
_loadConnectionsInContext:
_postTokensIfNecessaryInContext:
_urlBagDidLoadNotification:
_accountStoreChangedNotification:
_storeFrontChangedNotification:
_deviceNameChanged
initWithEnabledActionTypes:
setUserNotificationExtensionId:
initWithConfiguration:bagContract:
removeFromRunLoop
_clientForIdentifier:createIfNeeded:inContext:
_addNotificationWithUserInfo:client:context:
_postTokensInContext:force:
_environmentForName:createIfNeeded:inContext:
lastAccountIdentifier
setBlock:
setEnvironmentName:
_shouldAggressivelySendToken
_postTokenForEnvironment:
popRemoteNotificationWithMessage:connection:
registerNotificationClientWithMessage:connection:
showLocalNotificationWithMessage:connection:
unregisterNotificationClientWithMessage:connection:
notifications
initWithNotificationUserInfo:
_reloadActiveEnvironmentInContext:
_postNotificationsAvailableForClient:inContext:
_environmentNameForConnection:
tokenData
setLastAccountIdentifier:
setTokenData:
_isPushEnabled
shouldHandleNotification:
handleNotification:
requiresClientIdentifier
_reloadPushStateInContext:
setUserInfo:
setEnabledTopics:
block
insertObject:atIndex:
_openConnectionForEnvironment:
_portNameForEnvironmentName:
initWithEnvironmentName:namedDelegatePort:
_enabledTopics
mainRunLoop
scheduleInRunLoop:
initWithEnvironmentName:tokenData:
countForFetchRequest:error:
_isValidEnvironment:
_newAPSConnectionWithEnvironment:
publicToken
_setShouldAggressivelySendToken:
_newPostTokenOperationForEnvironment:account:
_updateEnvironmentAfterTokenPost:
removeObjectIdenticalTo:
_fireRegisterBlocksAfterOperation:
_bag
_numberOfClientsInContext:
_closeEnvironment:inContext:
_reloadDaemonClientInContext:
soundFilesDirectoryPath
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
postClientNotificationWithUserInfo:
_connections
_deviceNameChangedToken
_lastRegisterAttemptTime
_notificationQueue
_pushEnabledState
_pushHandler
_registerBlocks
_tokenOperations
_block
_environmentName
_bagWithError:
failingBagValueWithKey:valueType:error:
frozenBagValueWithKey:value:valueType:
apsEnabledPatterns
apsSamplingPercent
apsAllowedProductTypes
guidRegexes
guidSchemes
mescalContract
storefrontSuffix
TLSSamplingPercentage
TLSSamplingSessionDuration
TFOSamplingPercentage
TFOSamplingSessionDuration
trustedDomains
metricsContract
metricsURL
accountFlagsURL
appleMusicDeviceOfferDeepLink
iCloudDeviceOfferDeepLink
setDelegate:queue:
predicateWithProperty:equalToInt64:
sharedLibrary
anyInLibrary:predicate:
libraryItem
itemMediaPath
addLibraryItem:error:
initWithPersistentID:inLibrary:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
initWithDownloadEntity:
applyResourceLoaderDelegate:
persistKeys
_pastisCertificateURL
_pastisKeyServerURL
_persistKeys
_persistURI:persistentContentKey:
_track
rentalIdentifier
_resourceLoaderQueue
_persistenceQueue
_mutableCachedKeys
_libraryItem
_rentalIdentifier
_handleTaskEvent
addObserverForBackgroundTaskWithIdentifierPrefix:withBlock:
_cellularSettingChanged
_scheduleTask
_stopBackgroundTask
_hasEntitlements:
_sendUnentitledResponseToMessage:connection:
insertWatchMetricEvent:error:
insertWatchEventWithMessage:connection:
_startBackgroundTaskAtSecondsFromNow:window:
_reportEventsOnCompletion:
initWithController:
_lastRunTime
_eventsController
_reportRunning
_taskObserver
_downloadSoundFiles:error:
cachedResponseForRequest:
_calculatedExpiration
setLocalFilePath:
resetStream
localFilePath
initWithLength:
initWithResponse:data:
storeCachedResponse:forRequest:
saveMemoryCacheToDisk
_newSoundFileURLCache
_downloadSoundFileWithURL:name:cache:error:
setDiskCapacity:
setMemoryCapacity:
initWithCacheConfiguration:
_postTokenToURL:error:
dataUsingEncoding:allowLossyConversion:
_tokenData
notificationUserInfo
_clientExistsWithIdentifier:
_URLHandlerExists
_notificationClass
_displayBadge
alertBodyString
_displayAlert
_performNotificationAction:
alertTitleString
_shouldUseBulletinBoardForNotification:
alertOKString
postBulletinWithTitle:message:destinations:actionButtonTitle:actionButtonURL:launchURL:completionBlock:
alertCancelString
setDismissOnLock:
setMessage:
setShouldDismissAfterUnlock:
setShouldDisplayAsTopMost:
setUnlockActionButtonIndex:
copyUserNotification
showUserNotification:withCompletionBlock:
badgeValue
setBadgeValue:forIdentifier:
requestWithURL:
setITunesStoreURL:
initWithOpenURLRequest:
sharedPushNotificationConfig
ams_sharedAccountStore
ams_accountFlags
ams_dictionaryByAddingEntriesFromDictionary:
ams_setAccountFlags:
ams_saveAccount:verifyCredentials:
checkAutomaticDownloadQueue
checkQueuesWithReason:
signalSemaphoreForPushToken:
_loadNotificationDownloadManifest
_openNotificationURL
sharedAccountsMultiUserConfig
proxyObjectAsync
backingAccount
updateMultiUserTokenForAccount:completion:
privacyAcknowledgement
allKeys
arrayByAddingObjectsFromArray:
hashedDescription
setPrivacyAcknowledgement:
saveAccount:verifyCredentials:error:
initWithDownloadKinds:
markCachedSubscriptionEntitlementsAsExpired
setCreditsString:
didReceiveStorePushNotificationWithPayload:
tapUrl
applicationsAvailableForOpeningURL:
_clientIdentifierForDownloadKinds:
_notification
setEnvironmentType:
setStoreExternalVersion:
setStoreItemIdentifier:
environmentType
_bundleVersion
_environmentType
_hidesConfirmationDialogs
_ignoresInAppPurchaseRestriction
_receiptDirectoryPath
_requiresAuthenticationForPayment
_storeExternalVersion
runsOnlyIfKindsAreDirty
_isFatalError:
copyAllowedAutomaticDownloadKindsInBagContext:
intersectSet:
commitAutomaticDownloadKinds:markAsDirty:
shouldSuppressServerDialogs
setShouldProcessAuthenticationDialogs:
_copyFilteredDownloadKinds
_postDownloadKinds:error:
previousDownloadKinds
downloadKinds
setPreviousDownloadKinds:
setRunsOnlyIfKindsAreDirty:
setShouldSuppressServerDialogs:
shouldFailAfterUniquePredecessorError:
_downloadKinds
_previousDownloadKinds
_runsOnlyIfKindsAreDirty
_shouldSuppressServerDialogs
_setInsertedItemPersistentIdentifier:
initWithIPodLibraryItem:
IPodLibraryItem
insertedItemPersistentIdentifier
_insertedItemPersistentIdentifier
_promptNeedsDisplay
setLastPromptAttemptDate:forPromptWithIdentifier:
_newStoreURLOperation:
setPromptWithIdentifier:needsDisplay:
isManagedAppleID
promptNeedsDisplay:
_automaticDownloadsPromptNeedsDisplay
promptIdentifier
_promptIdentifier
_cachedSubscriptionEntitlementsDictionary
dateByAddingTimeInterval:
_setCachedSubscriptionEntitlementsDictionary:
_notifyClientsOfChangedSubscriptionEntitlements
_cachedSubscriptionEntitlementsPath
dataWithContentsOfFile:
writeToFile:atomically:
_runCheckinAckOperationWithResponseData:error:
_bodyDataWithCheckinAckResponseData:
_handleCheckinAckResponse:error:
_initCommon
userAgentWithBundleRef:isCachable:
userAgentWithClientName:version:
initWithBytes:length:
_applicationStateChanged:
addObserverForName:object:queue:usingBlock:
beginGeneratingStateChangeNotificationsForIdentifiers:
removeObserver:
processAssertion
setInvalidationHandler:
endGeneratingStateChangeNotificationsForIdentifiers:
_applicationState
clientType
initWithPID:flags:reason:name:
valid
initWithProcessAssertion:invalidationBlock:
_invalidateBackgroundTaskAssertion:
_clientType
_applicationBackgroundModes
_isNewsstandApp
_isBetaApp
_isAdHocCodeSigned
containsIndex:
addIndex:
removeIndex:
sendMessage:withReply:
_handleOutputConnectionDisconnect
unsignedIntValue
postNotificationName:object:
copyBundleInfoValueForKey:PID:
applicationStateForIdentifier:
mostElevatedApplicationStateForPID:
removeAllIndexes
invalidationBlock
initWithApplicationIdentifier:isAppleSigned:
applicationState
beginBackgroundTaskWithReason:expirationBlock:
canReceiveMessages
copyApplicationBackgroundModes
endBackgroundTaskWithIdentifier:
isNewsstandApp
loadSpringBoardStateWithCompletionBlock:
processIdentifier
sendCoalescedMessageWithIdentifier:
valueForEntitlement:
_entitlements
_legacyEntitlements
_appleSigned
_auditTokenData
_backgroundModes
_backgroundTasks
_clientVersion
_inflightMessages
_pid
_stateChangeObserver
invalidate
_invalidationBlock
_processAssertion
allowedRetryCount
isITunesStoreRequest
networkServiceType
timeoutInterval
HTTPBody
HTTPMethod
initWithProperties:
newDownloadKeyCookieWithValue:URL:
setNetworkServiceType:
initWithFileAtPath:
setHTTPBodyStream:
setHTTPHeaders:
setExpectedContentLength:
removeExternalValuesForAssetID:
copyDatabaseDictionaryWithRequestProperties:
copyURLRequestProperties
directoryPathForDownloadID:assetID:createIfNeeded:
accessToken
pageAccessToken
pageIdentifier
serviceIdentifier
canAccessDownload:
supportsDownloadKind:
persistentDownloadManagerInDatabase:
_supportsDownloadKind:
initWithClientXPCDownload:
_isBackgroundApp
disableCellularNetworkTypes
unionNetworkConstraints:
persistenceIdentifier
performNewsstandMigration1InDatabase:
shouldFilterExternalDownloads
sendDownloadsRemovedWithIdentifiers:
sendDownloadsUpdatedWithIdentifiers:
sendDownloadStatesChangedWithIdentifiers:
sendDownloadStateChangedWithID:externalValues:propertyValues:
_sendCoalescableMessage:withDownloadIDs:
_copyFilteredKindsForKinds:
_copyPrivateDownloadKinds
_copyDownloadKindsFromEntitlement
_copyAllowedThirdPartyKinds
addClientEntityToDatabase:
canAccessAsset:
downloadsQueryForMessage:database:
newDownloadWithClientXPCDownload:error:
prefetchedDownloadExternalProperties
prefetchedDownloadProperties
reloadPersistenceStateInDatabase:
sendChangeset:
sendDownloadKindsUsingNetwork:
setClientOptions:
setDownloadKinds:
setPersistenceIdentifier:
setPrefetchedDownloadProperties:
setPrefetchedDownloadExternalProperties:
setShouldFilterExternalDownloads:
_isDownloadsEntitled
_persistenceIdentifier
_prefetchedDownloadExternalProperties
_prefetchedDownloadProperties
_shouldFilterExternalDownloads
_typeForDownload:
_accountAuthenticatedNotification:
_networkTypeChangedNotification:
automaticDownloadKinds
enabledDownloadKinds
_checkAutomaticDownloadQueue:
checkDownloadQueue
checkAutomaticDownloads
_synchronizeAutomaticDownloadKinds:
_newQueueRequestsWithReason:session:
_addOperationsForRequests:reason:
setAutomaticDownloadKinds:
queueIdentifier
_restorableDownloadsQueryInDatabase:
initWithDownloadIdentifiers:restoreReason:
setAutomaticDownloadKinds:account:
_newOperationByCommitingAutomaticDownloadKinds:account:
cancelAllRedownloads
cancelRedownloadsWithMessage:connection:
getAutomaticDownloadKindsWithMessage:connection:
reloadFromServerWithMessage:connection:
setAutomaticDownloadKindsWithMessage:connection:
synchronizeAutomaticDownloadKindsWithMessage:connection:
triggerDownloadsWithMessage:connection:
synchronizeAutomaticDownloadKinds
_newSetAutomaticDownloadKindsOperationWithDownloadKinds:account:
_validQueueIdentifiersForDaemon
_newLoadQueueOperationForQueueRequest:
_newCheckQueueOperationForQueueRequest:
predicateWithProperty:values:comparisonType:
_ignoreVideos
isSoftwareKind
cancelDownloadURL
isVideosKind
_automaticDownloadsQueryWithDatabase:accountID:
replaceDownloadsInQuery:withStoreDownloads:accountID:
effectiveBoolValueForSetting:
_setLastCheckedAccountID:
purchaseIdentifier
placeholderDownloadForPurchaseIdentifier:
_downloadQueryWithQueueRequest:database:
copyEntityIdentifiers
countOfEntities
queueContentsURLBagKey
removeObjectsAtIndexes:
cancelsDuplicateDownloads
setValue:forMetadataKey:
isEqualToSet:
setReturnsDistinctEntities:
isNotNullPredicateWithProperty:
setQueueIdentifier:
_validQueueIdentifiersForPlatform
resetShouldSuppressTermsAndConditionsDialogs
checkQueuesWithRequest:
downloadKindsBeingChecked
disableAutomaticDownloadsWithReason:
enableAutomaticDownloadsWithReason:
_retryCanceledRestoreDownloads
_retrySoftFailedRestoreDownloads
_activeRestoreIDs
_automaticDownloadsAreDisabled
_checkAutomaticDownloadQueueOnEnable
_lastCheckedAccountID
_loadAutomaticDownloadQueueOperation
_restoreOperationQueue
_storeQueueRequests
_trackedPurchaseDownloadIDs
initWithEligibilityDictionary:
setBundlingStatus:
delayInterval
headerEnrichmentMessage
headerEnrichmentURL
needsHeaderEnrichment
needsSilentSMS
silentSMSMessage
silentSMSNumber
wantsDelayedRetry
_bundlingStatus
_delayInterval
_headerEnrichmentMessage
_headerEnrichmentSessionIdentifier
_headerEnrichmentURL
_smsSessionIdentifier
_needsHeaderEnrichment
_wantsDelayedRetry
_needsSilentSMS
_familySubscription
_silentSMSMessage
_silentSMSNumber
setCancelsDuplicateDownloads:
setPurchaseIdentifier:
_cancelsDuplicateDownloads
_purchaseIdentifier
_queueIdentifier
_queueMigration:
_loadBagAndPerformMigration
_performMigration
performMigration
destroyInstance
performMigration:
restoreDemotedBundleIdentifiers:options:
_updateType
_loadURLBagOperation
_migrations
sharedNetworkRequestQueue
isRequestingOfflineSlot
operationType
setOperationType:
setRequestingOfflineSlot:
_newMachineDataOperationWithAccount:response:
_requestPropertiesWithAccount:syncState:fairPlaySubscriptionController:
_operationType
_requestingOfflineSlot
isFileURL
isReadableFileAtPath:
_uploadURL
_newURLRequestWithURL:
sourceApplication
allowsCellularAccess
backgroundSessionConfigurationWithIdentifier:
setAllowsCellularAccess:
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
setSessionSendsLaunchEvents:
set_allowsRetryForBackgroundDataTasks:
set_sourceApplicationBundleIdentifier:
outputBlock
addITunesStoreHeadersToRequest:withAccountIdentifier:
sharedStorage
cookieHeadersForURL:userIdentifier:
parentRelationshipType
_outputBlock
initWithData:
parse
initWithBase64EncodedString:options:
parserDidStartDocument:
parserDidEndDocument:
parser:foundNotationDeclarationWithName:publicID:systemID:
parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:
parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:
parser:foundElementDeclarationWithName:model:
parser:foundInternalEntityDeclarationWithName:value:
parser:foundExternalEntityDeclarationWithName:publicID:systemID:
parser:didStartElement:namespaceURI:qualifiedName:attributes:
parser:didEndElement:namespaceURI:qualifiedName:
parser:didStartMappingPrefix:toURI:
parser:didEndMappingPrefix:
parser:foundCharacters:
parser:foundIgnorableWhitespace:
parser:foundProcessingInstructionWithTarget:data:
parser:foundComment:
parser:foundCDATA:
parser:resolveExternalEntityName:systemID:
parser:parseErrorOccurred:
parser:validationErrorOccurred:
initWithXMLData:
sinfData
_sinfData
_buffer
_isSinfElement
setDownloadPermalink:
setCloudIdentifier:
setCollectionArtistName:
setCollectionIndexInCollectionGroup:
setComposerName:
setDocumentTargetIdentifier:
setDownloadKey:
setDurationInMilliseconds:
setEpisodeIdentifier:
setEpisodeSortIdentifier:
setIndexInCollection:
setLongDescription:
setLongSeasonDescription:
setNumberOfCollectionsInCollectionGroup:
setNumberOfItemsInCollection:
setPageProgressionDirection:
setPodcastEpisodeGUID:
setPodcastFeedURL:
setPodcastType:
setReleaseYear:
setSeasonNumber:
setSeriesName:
setShortDescription:
setThumbnailImageURL:
setPublicationVersion:
setRedownloadActionParameters:
setThumbnailNewsstandBindingEdge:
setThumbnailNewsstandBindingType:
setViewStoreItemURL:
setKeyStyle:
setArtistIdentifier:
setCollectionIdentifier:
setComposerIdentifier:
setGenreIdentifier:
setPreOrderIdentifier:
setArtworkIsPrerendered:
setAutomaticDownload:
setCompilation:
setRental:
setSample:
setMusicShow:
setHighDefinition:
primaryAssetDictionary
_newDeltaPackageAssetsWithAssetDictionary:
_newPrimaryAssetsWithAssetDictionary:assetType:
fullSizeImageURL
_newAssetWithURL:assetType:
podcastFeedURL
transitMapDataURL
thumbnailImageCollection
imagesForKind:
_copyPinfValueWithField:
_copySinfValueWithField:
_copySinfValueFromEpubRightsDataWithField:
matchedStatus
redownloadedStatus
_epubRightsSinfData
epubRightsData
valueForFirstAvailableKey:
initWithURLRequestProperties:
_patchPackageDictionary:matchesInstallApplication:
_newAssetPropertiesWithStoreDictionary:assetType:
fileExtension
applicationVariant
_installPackage:
_newInstallationOptions
packagePath
initFileURLWithPath:
installApplication:withOptions:error:
appReceiptData
writeReceipt:forBundleIdentifier:style:
artworkData
newsstandArtworkData
transitMapData
ITunesMetadata
setSourceURL:
validate:
initWithSoftwareProperties:
softwareProperties
_verifyApplication:error:
_softwareProperties
setAppReceiptData:
setArtworkData:
setInstallType:
isFromStore
setITunesMetadata:
setNewsstandArtworkData:
setPackagePath:
setSinfData:
setTransitMapData:
scratchDirectory
setScratchDirectory:
_appReceiptData
_artworkData
_installType
_isFromStore
_iTunesMetadata
_newsstandArtworkData
_packagePath
_transitMapData
_scratchDirectory
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
providerName
IMEI
_sendPreflightRequest:
_sendEnrichmentRequestWithPreflightResponse:outputBlock:
_sendSilentSMSRequestWithPreflightResponse:outputBlock:
_newDefaultRequestBodyDictionaryWithResponseCode:error:
isDeepLink
_newDefaultRequestBodyDictionary
_setLoadsHTTPFailures:
setRequiresCellularDataNetwork:
dataUsingEncoding:
initWithURL:statusCode:HTTPVersion:headerFields:
initWithData:encoding:
_finishEnrichmentWithSessionID:carrierResponse:URLResponse:URLError:outputBlock:
sendSMSWithText:toPhoneNumber:countryCode:error:
_finishSilentSMSWithSessionID:responseCode:smsSendingError:outputBlock:
_cellularProviderName
_deepLink
_eligibilityResponse
_mobileSubscriberCountryCode
_mobileSubscriberNetworkCode
_phoneNumber
_IMEI
applicationProxyForItemID:
initWithFinishedDownloadPredicate:
finishedDownloadPredicate
_predicate
setPid:
statementDidFinishAfterStepping:
stringWithUTF8String:
readAsyncUsingTransactionBlock:
deleteCharactersInRange:
appAdamId
adNetworkId
campaignId
impressionId
attributionSignature
localTimestamp
setAppAdamId:
setAdNetworkId:
setCampaignId:
setImpressionId:
setAttributionSignature:
setLocalTimestamp:
transactionId
pingbackUrl
retryCount
initWithAppAdamId:transactionId:campaignId:adNetworkId:attributionSignature:pingbackUrl:retryCount:localTimestamp:
resetTimestampsForApp:
insertInstallAttributionParams:completionHandler:
getInstallAttributionParamsForApp:completionHandler:
removeInstallAttributionParamsForApp:
removeInstallAttributionParamsBeforeDate:
insertInstallAttributionPingback:
getInstallAttributionPingbackForApp:completionHandler:
setPingbackPendingForApp:
getPendingInstallAttributionPingbacksWithCompletionHandler:
removeInstallAttributionPingbackForApp:
removeNonPendingInstallAttributionPingbacksBeforeDate:
incrementPingbackRetryCountForApp:
caseInsensitiveCompare:
initWithContentsOfURL:options:error:
setUrlKnownToBeTrusted:
_setArtworkData:
initWithDownloadIdentifier:thumbnailURL:
initWithStoreDownloadIdentifier:thumbnailURL:
_isStoreDownload
_thumbnailURL
updateAccountPasswordSettings:connection:
initWithFreeDownloadsPasswordSetting:paidPurchasesPasswordSetting:requestProperties:
setFreeDownloadsPasswordSetting:
setPaidPurchasesPasswordSetting:
_shouldSkipInitialDialog:
_copyButtonToSkipDialog:
_copySelectedButton:returningError:
_shouldAuthenticateForButton:
performsButtonAction
_copyAccountIdentifier:returningError:
_handleSelectedButton:
_copyAuthenticationContext
authorizationIsForced
_isLocalizationAlreadyConfiguredForAuthContext:
setPromptTitle:
message
setOkButtonLabel:
subtarget
containsString:
shouldFollowAccountButtons
okButtonLabel
promptTitle
isExpiredForTokenType:
performedButton
_authenticatedAccountCredentialSource
_authenticatedAccountDSID
_performsButtonAction
_performedButton
_selectedButton
finishPersistentDownloadsWithDownloadIDs:
claimAppsWithMessage:connection:
getMatchStatusWithMessage:connection:
disableAutomaticDownloadKindsWithMessage:connection:
keybagSyncWithMessage:connection:
installManagedAppWithMessage:connection:
installManagedAppWithMessageAndDetailedResponse:connection:
getDownloadQueueWithMessage:connection:
importDownloadToIPodLibraryWithMessage:connection:
loadURLBagWithMessage:connection:
lookupItemsWithMessage:connection:
lookupWithMessage:connection:
sdk_loadStoreFrontIdentifierWithMessage:connection:
sdk_getCloudServiceCapabilities:connection:
performMigrationWithMessage:connection:
repairAppWithMessage:connection:
requestURLWithMessage:connection:
restoreDemotedApplicationsWithMessage:connection:
serverAuthenticateWithMessage:connection:
authenticationRequestWithMessage:connection:
updateMediaContentTasteWithMessage:connection:
wishlistAddItemsWithMessage:connection:
presentRemoteWebViewWithMessage:connection:
disableSubscriptionWithMessage:connection:
enableSubscriptionWithMessage:connection:
getSubscriptionStatusWithMessage:connection:
getSubscriptionEntitlements:connection:
refreshSubscriptionWithMessage:connection:
rentalInformationRequestWithMessage:connection:
sdk_requestAPITokenWithMessage:connection:
silentEnrollmentWithMessage:connection:
silentEnrollmentVerificationWithMessage:connection:
claimStyle
checkFirstPartyClaimsWithCompletionBlock:
_copyAuthenticationContextWithContext:client:
_addSubscriptionOperationWithType:message:connection:
_dequeueSubscriptionStatusOperation:
_enqueueSubscriptionStatusOperation:forClient:
queueType
downloadMetadata
purchaseResponse
purchase
downloadMetadataForItemIdentifier:
isRental
setUpdateType:
setItemArtworkData:
allowsPromptingForPrivacyAcknowledgement
setAllowsPromptingForPrivacyAcknowledgement:
setResponseBlock:
installManagedAppWithMessage:connection:provideDetailedResponse:
installManagedAppWithRequest:completionBlock:
initWithKeybagSyncRequest:
URLBagDictionary
invalidationTime
copyQueryStringParameters
dictionaryByEvaluatingConditions
itunes_expirationDate
_lookupProperties
valueForRequestParameter:
initWithLookupProperties:
personalizationStyle
setPersonalizationStyle:
setShouldSuppressCookies:
lookupResponse
initWithMigrationType:
initWithOptions:
startWithCompletionBlock:
initWithWebViewRequest:
accountDSID
repairAppWithRequest:completionBlock:
_enqueueOperationsForStoreServicesURL:
destinationFileURL
setDestinationFileURL:
sendsResponseForHTTPFailures
setSendsResponseForHTTPFailures:
shouldMescalSign
setShouldMescalSign:
restoreDemotedAppsWithBundleIDs:
clientToken
setClientToken:
setRequestingBundleID:
setRequestingBundleVersion:
context
headerADSID
headerGSToken
headerGuid
headerMMeClientInfo
headerMMeDeviceId
URLString
parameters
setHTTPContentType:
beginSuspendingSubscriptionStatusChangeNotifications
endSuspendingSubscriptionStatusChangeNotifications
startWithAuthenticateResponseBlock:
setAuthenticatedAccountIdentifier:
indexOfObject:
setPerformedButtonIndex:
setSelectedButtonIndex:
setString:
enumerateQueryWithBlock:
_managedQueue
_subscriptionStatusOperationAccessQueue
_currentSubsctionStatusOperation
_pendingSubscriptionStatusOperations
_enqueueOperationIfNecessaryWithAccountIdentifier:
addPostIdentifier:
addUploadIdentifier:
_newAuthenticateOperationWithAccountIdentifier:
setAuthenticateResponse:
_finishResponse:
bundleWithIdentifier:
authenticateForPostWithIdentifier:accountIdentifier:
_pendingResponses
setPostIdentifiers:
setUploadIdentifiers:
_authenticateResponse
_postIdentifiers
_uploadIdentifiers
deviceIsAppleTV
cancelAllOperations
_addLibraryItems:toMusicLibrary:itemPids:error:
_commitScheduledLibraryItems
predicateWithProperty:equalToInteger:
queryWithLibrary:predicate:
deleteAllEntitiesFromLibrary
performDatabaseTransactionWithBlock:
_removeDownloadWithIdentifier:canceled:inLibrary:
accountCacheDatabase
setAppleID:forDSID:
deleteAllOTATracks
deleteIPodPurchaseWithMessage:connection:
itemMetadata
mediaTypeForStoreDownload:
importLibraryItems:toMusicLibrary:importedItemPids:
isDownloading
_setDownloadPropertiesForTrack:usingLibraryItem:
updateType
itemArtworkData
populateArtworkCacheWithArtworkData:
protectionType
populateLocationPropertiesWithPath:protectionType:
addLibraryItems:error:
deleteFromLibrary
setValues:forProperties:count:
itemDownloadIdentifier
commitScheduledLibraryItems
removeDownloadWithIdentifier:canceled:
scheduleLibraryItem:
setAppleIdentifier:forAccountIdentifier:
_scheduledItems
_scheduledItemTimer
_shouldAuthenticateForCancelRetry
_establishPrimaryAccount
allITunesIdentifiers
_newRestoreItemsWithDownloadIDs:
storeAccountAppleID
_accountIDForAccountName:error:
setDownloadSessionProperties:
_isErrorCancelFailure:
_isErrorSoftFail:
_shouldAutomaticallyRetryAfterSoftFailError:
storeOriginalPurchaserAccountID
setUniqueIdentifier:
storeFrontID
setRequestItems:
setServerResponseWithError:
_applyResponses:withTransaction:
_preflightAccountWithID:isFamily:error:
addAccountWithAccountID:
addStoreFrontWithStoreFrontID:
countForObject:
addItemsWithKind:count:
shouldSuppressTermsAndConditionsDialogs
responses
setShouldSuppressTermsAndConditionsDialogs:
initWithDownloadItems:
_scheduleAutomaticRetry
_scheduleCancelRetry
responseDownloads
initWithItemIdentifier:
podcastEpisodeGUID
responseError
_downloadRestoreStateForError:
_updateDownloadEntity:withTransaction:storeDownload:accountID:
_copyDownloadSessionPropertiesForItem:download:
canOpenSessionWithProperties:
_softFailRestoreItem:download:withRestoreState:error:
_hardFailRestoreItem:download:transaction:error:
accounts
setAccountNameEditable:
setPersistsAcrossDeviceLock:
requiredDeviceCapabilities
checkCapabilities:withMismatches:
setRequestPersistentID:
sendRestoreDownloads:withReason:
downloadSessionProperties
addHardFailureWithKind:error:
initWithDownloadIdentifier:
setValue:forDownloadProperty:
setValue:forAssetProperty:
isExpired
setDefaultButtonIndex:
addSoftFailureWithKind:error:
_newDownloadWithStoreDownload:
restorePodcastItemsOperation:didReceiveResponse:
downloadIdentifiers
errors
_accountIDsByAppleID
_cancelRetryAlertState
_errors
_hadAutoRetrySoftFailure
_hadCancelFailure
_transactionID
_createX509CertChainDataForAccountIdentifier:purpose:error:
_deleteKeychainTokensForAccountIdentifier:error:
publicKeyDataForAccountIdentifier_:purpose:regenerateKeys:error:
_publicKeyDataForAccountIdentifier:purpose:regenerateKeys:error:
_signData:context:error:
keychainLabelForKeyWithAccountID:purpose:
createX509CertChainDataForAccountIdentifier_:purpose:error:
keychainLabelForAccountID:purpose:
_amsKeychainLabelForPurpose:
copyAccessControlListForKey:error:
createAttestationDataWithMessage:connection:
createX509CertChainDataWithMessage:connection:
deleteKeychainTokensWithMessage:connection:
getPublicKeyDataWithMessage:connection:
signDataWithMessage:connection:
signDataUsingContextWithMessage:connection:
x509CertChainDataWithMessage:connection:
createAttestationDataForAccountIdentifier_:purpose:error:
_handleMessage:connection:withReplyBlock:
deleteKeychainTokensForAccountIdentifier_:error:
publicKeyDataForAccountIdentifier_:purpose:error:
setConsolidatedDialog:
signData_:context:error:
x509CertChainDataForAccountIdentifier_:purpose:regenerateCerts:error:
shouldUseX509
dictionaryWithDictionary:
_queryForPrivateKeyWithLabel:prompt:useTokenID:
_amsCertificateLabelForPurpose:
_isDeviceUnlocked
_constraintsForExtendedActions
_constraintsForPurchase
_copyPublicKeyDataForAccountIdentifier:purpose:error:
_createAttestationDataForAccountIdentifier:purpose:error:
_deleteKeychainTokensForAccountIdentifier:purpose:error:
_generateKeychainTokensForAccountIdentifier:purpose:error:
_presentPaymentSheetForChallenge:authContext:biometricContext:touchIDContext:touchIDOptions:accessControlRef:passwordToken:paymentTokenData:fpanID:error:
_queryForPrivateKeyWithLabel:prompt:
_regenerateKeychainTokensForAccountIdentifier:purpose:error:
_dispatchQueueX509
addPurchaseManifestItemWithLibraryIdentifier:
dataContainerURL
_newURLOperationWithAsset:
localPath
moveAsset:toPath:installBehavior:error:
moveFile:toPath:installBehavior:error:
stringByDeletingPathExtension
setShouldRunWithBackgroundPriority:
sourceURLString
isExternalAsset
documentsDirectoryPathWithClientIdentifier:downloadKind:
downloadAndInstallAsset:error:
downloadAsset:error:
progressFraction
setProgressFraction:
unzipAsset:unzippedPath:error:
_download
_progressFraction
setServerResponse:
copyRestoreDictionary
_newResponseWithItems:error:
_addResponse:
_runWithOptions:error:
_showDialogsForResponse:
_plistDataWithItems:options:error:
_runWithBodyData:contentEncoding:options:error:
cloudMatchStatus
_runWithItems:options:
subarrayWithRange:
shouldShowTermsAndConditionsDialog
account
downloadItems
_downloadItems
_responses
_shouldShowTermsAndConditionsDialog
setAssetType:
setAssetURL:
setBytesTotal:
setExpectedDiskspace:
setHashArrayData:
setHashType:
setNumberOfBytesToHash:
setSinfs:
setDPInfo:
setInitialODRSize:
setIsLocallyCacheable:
valueForExternalProperty:
setIsExternal:
setIsZipStreamable:
initWithData:error:
_attemptFireForJob:withName:
initWithIdentifier:
setBagKey:
setDefaultInterval:
setDefaultWindow:
_setLastFireDate:
_resetBackgroundTaskJobs
_userDefaultsKeyLastTimeCheck
_timerInterval
_fireTimer
initWithTimeInterval:sinceDate:
earlierDate:
_userDefaultsKeyWiFiOverride
_timerIntervalWithBagKey:userDefaultsKey:
_userDefaultsKeyCellularOverride
_readTimeIntervalFromUserDefaultsKey:
subscriptionRenewTimer
_addJobWithDate:window:allowsCellular:
_nextFireDateWithInterval:
_userDefaultsKeyWindowOverride
_windowWithUserDefaultsKey:
bagKey
cellularBagKey
setCellularBagKey:
defaultInterval
defaultWindow
eventBlock
setEventBlock:
preconditionsBlock
setPreconditionsBlock:
_bagKey
_cellularBagKey
_defaultInterval
_defaultWindow
_eventBlock
_started
_preconditionsBlock
cancelApplicationRestoreWithBundleID:error:
restoreDataExistsForApplicationWithBundleID:size:
isFailed
_isFailed
_semaphore
_priority
registerUserSwitchStakeHolder:
changeType
uninstallPlaceholderForApplicationHandle:
markFailedPlaceholderForApplicationHandle:
finishInstallOfApplicationHandle:
installPlaceholderForApplicationHandle:
updatePlaceholderForApplicationHandle:
_hasThumbnailDownloadOperationForDownloadID:
_incrementPendingInstallsForDownloadIdentifier:
_cancelPlaceholderThumbnailInstallForDownloadID:
_decrementPendingInstallsForDownloadIdentifier:
_fireWaitBlocksIfNecessaryForDownloadWithIdentifier:
_removeApplicationDownloadProgressForApplicationHandle:
_removeOperationsForDownloadIdentifier:
_addOperationAtBeginning:
_performNextOperation
resumeSync
_isInstallingForDownloadIdentifier:
initWithApplicationHandle:forceUpdate:
dictionaryWithContentsOfFile:
enumerateMemoryEntitiesWithProperties:usingBlock:
initWithApplicationHandle:isPlaceholderRestore:
initWithApplicationHandle:iconData:
suspendQuotasWithCompletionHandler:
_copyCombinedApplicationProgress:forApplicationHandle:
initWithApplicationDownloadProgress:
_addProgressOperation:
_fireWaitBlocksForSyncTermination
terminateSyncWithCompletionHandler:
bundleURL
bundleExecutable
taskWithName:reason:
begin
uninstallApplication:withOptions:
waitForInstallOfDownloadIdentifier:completionBlock:
indexOfObjectWithOptions:passingTest:
_thumbnailDownloadOperationForDownloadID:
completedUnitCount
totalUnitCount
setCompletedUnitCount:
setTotalUnitCount:
_removeOperationsForDownloadIdentifier:operationClass:
removeObserver:forKeyPath:context:
willSwitchUser
addPlaceholderThumbnailOperation:
beginExternalInstallationForDownloadIdentifier:
cancelPlaceholderInstallationForDownloadIdentifier:
endExternalInstallationForDownloadIdentifier:
isDownloadingOrInstallingForItemIdentifier:
replayIncompleteOperations
resetProgressForApplicationHandle:
restorePlaceholderForApplicationHandle:
setIconData:forApplicationHandle:
suspendQuotas
updatePlaceholderWithApplicationProgress:
waitForSyncBubbleToTerminateWithCompletionBlock:
sinfPathForBundleID:
_stopObservingODRProgress:
_updatePlaceholderWithODRProgressForApplicationHandle:
_appProgress
_callbackQueue
_operations
_pendingInstalls
_placeholderIconOperationQueue
_syncWaitBlocks
_waitBlocks
accessDatabaseUsingBlock:
_migrateToCurrentUserVersionUsingDatabase:
setDownloadSizeLimit:
setNetworkTypes:
setPolicyRule:
setPowerStates:
unionPolicyRule:
archivedDataWithRootObject:requiringSecureCoding:error:
sharedStoreServicesConfig
setRentalKeyIdentifier:
_rentalInformation
cacheRoot
podcastType
initWithURL:options:
loadValuesAsynchronouslyForKeys:completionHandler:
tracksWithMediaType:
_copyChapterVideoTracksForAsset:
importChaptersByParsingAsset:
duration
trackReferences
trackWithTrackID:
mediaType
additionalEntityProperties
chapters
downloadType
durationInSeconds
hasItemArtwork
loadPropertiesFromMediaPath:includeTracks:
setAdditionalEntityProperties:
setChapters:
setDurationInSeconds:
setItemMediaPath:
setValue:forAdditionalEntityProperty:
_additionalEntityProperties
_assetType
_chapters
_downloadType
_durationInSeconds
_libraryPersistentIdentifier
_metadata
_protectionType
setDialogButton:
dialogButton
_dialogButton
_setArtistName:
_setItemKind:
_setReleaseDateString:
_setStoreAccountIdentifier:
_setTitle:
_setReleaseDate:
_setStoreItemIdentifier:
_setStorePreorderIdentifier:
_setImageCollection:
itemKind
releaseDate
releaseDateString
ITunesStoreIdentifier
preOrderIdentifier
itemTitle
imageCollection
newValueDictionaryWithItem:
allProperties
newClientPreorderWithPersistentID:allValues:
setValuesWithItem:
initWithItemDictionary:
preorderItems
_items
numberOfPreordersInQueue
_numberOfPreorders
_sendChangeNotificationForKinds:
_copyPreorderAccountIdentifiers
_handleCheckQueueFinish:
sharedPreorderQueue
checkPreorderQueue
itemKinds
getObjects:range:
cancelPreordersWithMessage:connection:
checkQueueWithMessage:connection:
getPreordersWithMessage:connection:
registerManagerWithMessage:connection:
setItemKinds:
_preorderQueryWithAccountID:database:
_handleLoadQueueFinish:
_clientForConnection:
intersectsSet:
addPreordersWithItems:accountID:
removePreordersWithPreorderIdentifiers:
setPerformSinfMirartionCheckBeforeFailing:
vppStateFlagsWithProxy:
_refreshReceiptForApplication:withOptions:vppState:error:
_optionsWithVPPState:
receiptPathForProxy:
addRefreshed:
performSinfMirartionCheckBeforeFailing
_preformMigrationCheckForApp:
addRevoked:
itemName
setReceiptFlags:
ams_DSID
setTargetAccount:
_postBodyDataWithApplication:options:vppState:error:
targetAccount
_handleResponse:forApp:options:
resultingError
setResultingError:
setResultsBlock:
receiptExpirationDateForProxy:
_familyAccountIDs
_operationResult
_resultsBlock
paymentWithProduct:
paymentFromPurchaseIntentWithProduct:
paymentWithProductIdentifier:
raise:format:
_requestParameters
_isStoreOriginated
_paymentDiscount
fileProtectionType
dictionaryWithObjectsAndKeys:
directoryPathForDownloadID:assetID:kind:createIfNeeded:
SINFData
DPInfoData
mediaLibraryProtectionType
processingTypes
SINFs
_newURLOperationWithItemID:accountID:
_cancelPreorderWithOperation:error:
_newPluralErrorDialogWithPostCount:uploadCount:
_newPluralErrorDialogWithPostCount:
_newSingleErrorDialogWithPost:
_showDialog:
_newErrorDialogWithServerMessageWithPost:erroMessage:canRetry:
_newPluralErrorDialogWithUploadCount:
_newSingleErrorDialogWithUpload:
cancelUserNotification:
setButtonsWithTitles:
localizedShortName
stringFromNumber:
_newPluralErrorDialogWithCount:formatString:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
updateUserNotification:withDialog:
_sendDidFinishWithResponseFlags:
showDialog:withCompletionBlock:
_postIDs
_temporaryPostIDs
_temporaryUploadIDs
_uploadIDs
supportsItemKind:
_itemKinds
albumIdentifier
assetURL
attachmentDescription
categoryName
subtitle
deletesAssetWhenFinished
isExplicitContent
previewFrameTimestamp
newEntityValuesWithMediaSocialArtist:
initWithUnsignedInteger:
assetToken
assetTokenType
deleteAssetFile
setSubtitle:
_setUploadKind:
_openFile
_hashAndWriteData:error:
_checkHashForByteCount:
_truncateToSize:
initWithPath:MD5Hashes:numberOfBytesToHash:
_bytesWritten
_hashes
_md5Context
_numberOfBytesToHash
_verifiedBytes
representsDownloadWithIdentifier:
_cancelErrorsPassingTest:
canCoalesceWithError:
addDownloadIdentifiers:
updateUserNotification:withUserNotification:
_scheduleErrorDisplay:
isValidError
cancelUserNotifications:
performActionForResponseFlags:
_setNotification:
_displayScheduledErrors
cancelDialogsWithDownloadIdentifier:
_scheduledErrors
_scheduledErrorTimer
removeDownloadIdentifier:
downloadTitle
_downloadIdentifiers
_downloadTitle
initWithDictionary:options:
_isInstallError:
_notificationTitle
_notificationBody
localizedFailureReason
constrainedSizeLimit
canDownloadInITunes
supportsDeviceCapability:
_specificStringWithLocalizedKeyBase:
_genericStringWithLocalizedKeyBase:
setCanDownloadInITunes:
setConstrainedSizeLimit:
_canDownloadInITunes
_sizeLimit
completionBlock
optionFlags
initWithDictionary:options:completionBlock:
_showPreparedNotification:
showUserNotification:withOptions:completionBlock:
updateWithDictionary:options:
updateUserNotification:withDictionary:options:
userNotification
isCanceled
show
prepareUserNotificationWithDialog:
showPreparedNotification:withCompletionBlock:
_finishUserNotification:withResponseFlags:
_userNotifications
_completionBlock
_isCanceled
_notificationDictionary
_notificationOptions
_runLoopSource
_userNotification
_appAdamId
_adNetworkId
_campaignId
_impressionId
_attributionSignature
_localTimestamp
restoreDataSize
_downloadSessionProperties
_hasRestoreData
_restoreDataSize
initWithDownloadHandle:bundleIdentifier:
_setOutputItemsWithMapping:
purchaseHistoryItems
_inputItems
_outputItems
overrideProgress
setOverrideProgress:
_overrideProgress
initWithFilePath:hashes:bytesToHash:
filePath
hashes
numberOfBytesToHash
_bytesToHash
_filePath
displaysOnLockscreen
setPerformDefaultActions:
textFieldValues
setTextFieldValues:
_dialogResponse
_displaysOnLockscreen
_baseDirectoryPath
_containerDirectoryPath
_directoryPathForDownloadID:createIfNeeded:atBasePath:
setResourceValue:forKey:error:
baseDirectoryPath
containerDirectoryPath
setSoonestExpirationDate:
setSoonestExpiring:
addExpiring:expirationDate:
expiring
refreshed
revoked
soonestExpiring
soonestExpirationDate
_expiring
_refreshed
_revoked
_soonestExpiring
_soonestExpirationDate
_keyboardType
setKeyboardType:
setSecure:
setTextFields:
tokenBlock
unlockScreenType
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
setTokenBlock:
_tokenBlock
_passcodeEntrySemaphore
supportedAppExtensionTypes
pluginKitProxyForIdentifier:
protocol
containingBundle
_authContext
_enabledDownloadKinds
_getData:forContentTasteItemUpdates:includedContentTasteItemUpdates:
copyURLRequest
_cachedMediaContentSyncURLResponseForAccount:
data
storagePolicy
initWithResponse:data:userInfo:storagePolicy:
_storeCachedMediaContentSyncURLResponse:forAccount:
isNSNumber__
_revisionIDForURLResponse:
_ETagValueWithResponse:
_responseWithResponseData:expirationDate:revisionID:isCachedResponse:
playlistGlobalID
storeAdamID
tasteType
item
contentTasteItems
setItem:
setContentTasteItems:
_saveAdamIdLikedStatesToLibrary:
_savePlaylistGlobalIdLikedStatesToLibrary:
sharedDaemonConfigOversize
checkoutReaderConnection
deviceMediaLibrary
defaultRenderer
valueForDatabaseProperty:
removeObjectsInArray:
statementWithPrefix:inParameterCount:
executeQuery:withParameters:
int64ForColumnIndex:
enumerateRowsWithBlock:
newWithPersistentID:inLibrary:
_setLikedState:forEntity:
setValue:forDatabaseProperty:
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
checkInDatabaseConnection:
stringForColumnIndex:
addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:
_mediaContentTasteCacheDirectoryPath
_mediaContentTasteSyncURLResponseCacheFilePathForAccount:
unarchivedObjectOfClass:fromData:error:
_iTunesStore_valueForHTTPHeader:
setAdamId:
setExternalId:
setPreference:
contentType
setPreferenceType:
updateDate
setCreatedOffsetMillis:
setPreferences:
preferences
adamId
setStoreAdamID:
preferenceType
setContentType:
hasExternalId
externalId
setPlaylistGlobalID:
preference
setTasteType:
setExpirationDate:
setResponseRevisionID:
setCachedResponse:
main
_contentTasteItemUpdates
_shouldInvalidateLocalCache
invalidProductIdentifiers
initWithBytesNoCopy:length:freeWhenDone:
initWithManifestPath:
sharedBookContainerPath
addManifestEntries:
manifestEntriesWithProperty:equalToValue:limitCount:
_entries
purchasedBookManifest
sharedPurchasedBookManifest
syncedBookManifest
addManifestEntry:
bookPathPermalink:
bookPathForAdamID:withPublicationVersion:
manifestPath
removeManifestEntryWithStoreItemID:
removeManifestEntryWithDownloadPermalink:
synchronizeData
_invalidateAfterExternalChange
_manifestPath
initWithKeyOptions:valueOptions:capacity:
_prepareDownloadsMatchingPredicate:ignoreDownloadHandlers:filtersExistingTasks:
_reloadKeepAliveAssertion
_downloadIsForLegacyClientWithIdentifier:
setPriority:
cancelWithITunesStoreReason:error:
sessionProperties
sessionID
pauseSessionWithID:
cancelSessionWithID:
stopWithFinishResult:
member:
sessionState
_startProgressTimer
_disavowDownloadHandlerSession:withTaskState:
_failDownloadWithIdentifier:error:transaction:
setInitialDownloadPhase:
_processDownloadWithTaskState:databaseSession:setupBlock:
_releaseDownloadHandlerSession:withTaskState:
ITunesStoreDataConsumer
countOfBytesReceived
countOfBytesExpectedToReceive
signalDownloadCompletion
setITunesStoreDataConsumer:
ITunesStoreCancelReason
_processDownloadFailureWithTaskState:cancelReason:
_isPodcast:
downloadPolicyForID:
addNetworkType:
ITunesStoreCancelError
canAttemptRecoveryWithError:
_attemptRecoveryForDownloadWithTaskState:databaseSession:
_scheduleReconnect
_logDownloadEvent:forTaskWithState:session:
_downloadSessionPropertiesWithPhase:taskState:databaseSession:
_performDefaultHandlingForAuthenticationChallenge:withSessionProperties:completionHandler:
initWithSessionProperties:
_authenticationChallengeQueue
setOverrideDownloadSizeLimit:forDownloadIdentifier:
_setDownloadPhase:forDownloadIdentifier:databaseTransaction:
removeOverrideDownloadSizeLimitForDownloadIdentifier:
initWithDownloadIdentifier:databaseSession:
_finishRecoveryWithOperation:response:
estimatedTimeRemaining
externalValuesForDownloadID:
notifyClientsOfExternalPropertyChanges:forDownloadID:downloadKind:
beginSessionWithID:
notifyClientsOfPropertyChanges:forDownloadID:downloadKind:
URLSessionIdentifier
sessionConfiguration
sessionWithConfiguration:assetDownloadDelegate:delegateQueue:
sessionTaskWithSession:
ignoresDownloadHandler
openSessionWithProperties:
URLAsset
resourceLoader
downloadToken
mediaAssetSize
isPerDeviceVPP
downloadRestoreState
backgroundOperations
setWaitForDownload:
newEventDictionaryWithDownloadIdentifier:assetIdentifier:
eventDispatcher
postEventWithName:userInfo:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
initWithAuthenticationChallenge:
initWithAuthenticationChallege:
initWithUser:password:persistence:
setIgnoresDownloadHandler:
initWithDownloadPipeline:response:
isDiscretionary
enumerateOperationsWithDownloadQuery:session:usingBlock:
_queueFinishDownloadWithtaskState:databaseSession:setupBlock:
_finishDownloadWithOperation:response:
setHandlerReleasedDownloadPhase:
reconnectWithURLSessionTasks
_commitProgressTimer
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:_willRetryBackgroundDataTask:withError:
downloadAssetFairPlayStreamingKeyLoader:didFailWithError:
_applicationBundleIdentifierForDownloadIdentifier:databaseTransaction:
_applicationHandleForDownloadIdentifier:databaseTransaction:
_taskReceived:persistAVAssetDownloadToken:
_performDownloadOperation:
_hasAutomaticUpdateTasks
_aggregateDownloadProgress
_backgroundOperationQueue
_dirtyTaskStates
_downloadHandlerSessions
_holdingKeepAliveAssertion
_preparationDownloadIDs
_preparationOperationQueue
_processingOperationQueue
_progressTimer
_reconnectTimer
_resourceLoaders
_taskStates
_urlSessions
_downloadOperationsByTask
_discretionaryDownloadOperationQueue
_nonDiscretionaryDownloadOperationQueue
waitForDownload
_downloadTaskWaitSemaphore
_waitForSignal
_waitForDownload
initWithServiceName:
addObservedNotificationNames:
postNotificationName:message:
unregisterObserverWithMessage:connection:
_addObserverWithPortName:notificationName:
_removeObserverWithPortName:notificationName:
addObservedNotificationName:
_saveRegisteredPortNames
removeObservedNotificationName:
observedNotificationNames
_observers
_connection
_notificationNames
keyPath
initWithObject:keyPath:block:
addObserver:forKeyPath:options:context:
observeObject:keyPath:options:usingBlock:
observeValueForKeyPath:ofObject:change:context:
_keyPath
_object
_cancelPollTimer
_setLastOccurrenceCheckTime:
shouldKeepDaemonAlive
_reloadPollTimer
_willRemoveEvent:
_lastOccurrenceCheckTime
pollInterval
hasOccurred
performAction
_fireEventsAfterPollTimer
sharedEventMonitor
monitorEvent:
removeEvent:
_events
_lastPollTime
_pollTimer
setPollInterval:
setShouldKeepDaemonAlive:
_pollInterval
_shouldKeepDaemonAlive
testBlock
setTestBlock:
_testBlock
_addUniqueValue:withDefaultsKey:aggregateKey:
_addFailureWithKind:downloadKind:error:
_addScalarValue:forKey:
addDataRestoreFailureWithKind:error:
addInstallFailureWithKind:error:
addSuccessfulRestoreWithKind:
addTransferFailureWithKind:error:
_addClient:
connectEventMonitorWithMessage:connection:
_eventMonitors
standardDefaults
mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
initWithToken:error:
requestingBundleID
requestingBundleVersion
responseBlock
_clientToken
_requestingBundleID
_requestingBundleVersion
_responseBlock
_initStoreKitClient
setSupportsDeferredPayment:
_isPaymentRestricted
_showPaymentsRestrictedAlert
_sendPaymentsAdded:
_copyDownloadsForDownloadIDs:properties:context:
_reloadClientProperties
initWithKey:ascending:
_sendDownloadChangesets:
_refreshFromServerWithReason:accountIdentifier:
_sendPaymentsRemoved:
_sendRestoreCompletedWithError:
_finishRestoreOperation:
_mergeBatchResponse:forRestoreOperation:
_sendPaymentsUpdated:
propertiesForDownloadEntities
initWithMicroPaymentDownload:clientID:
_showPrivacyPromptForPayment:withCompletionBlock:
_sendBuyRequestForPayment:withCompletionBlock:
_sendFinishRequestForPayment:withCompletionBlock:
_cancelDownloadsForDownloadIDs:
_sendMergeResults:
_cancelDownloadsForPayments:
clientState
_setClientState:
effectiveRestrictedBoolValueForSetting:
_copyAccountIDsForRefreshReason:
_finishLoadQueueOperation:
initWithPrivacyIdentifier:
setCompletion:
_completeBuyRequest:forPaymentID:withBlock:
_completeFinishRequest:forPaymentID:withBlock:
_sendMessage:forPayments:
initWithXPCClient:
removePaymentWithObjectID:
_databaseClientObjectID
_externalQueue
_lastRefreshReason
_loadQueueOperation
_restoreOperation
_transientFailedIDs
location
_performLocationLookup:
_performJSSignLookupWithURLBag:error:
_performPlatformLookup:
setLocale:
setDateFormat:
stringFromDate:
itunes_expirationInterval
copyRequestParameters
initWithBagDictionary:
unpersonalizedLookupURLString
initWithPlatformContext:
keyProfile
setKeyProfile:
setStoreFrontSuffix:
_setUserAgent:
setShouldSuppressUserInfo:
shouldSuppressCookies
setItemIdentifiers:
_setCaller:
_setLookupResponse:
initWithBaseURL:location:
setPointOfInterestIdentifier:
setPointOfInterestProviderIdentifier:
setPointOfInterestProviderURL:
_newStoreURLOperationWithBagKey:
_newLookupResponseWithResultsFromOperation:
_setAccountID:
setRequiredUniqueIdentifier:
lookupProperties
_personalizationStyle
_properties
_shouldSuppressCookies
setExternalValuesWithDictionary:
initWithClientXPCAsset:
_setDatabasePropertiesWithExternalMetadata:error:
_setAssetsWithExternalAssets:error:
_setThumbnailImageWithExternalAssets:error:
_setAssetsWithExternalThinnedAssets:error:
contentRating
ratingLabel
rank
is32BitOnly
setSizeLimitsWithStoreConstraintDictionary:
initWithNetworkConstraints:
policyRules
setCellularDataStates:
setPolicyRules:
sizeLimitForNetworkType:
initWithExternalManifestDictionary:validateVariants:
_copyValidAssetsWithExternalAssets:validateVariants:
compatibleProductType
assetForAssetIdentifier:
copyInMemoryStoreDownloadMetadata
removeAssetsWithAssetType:
setDownloadPolicy:
_assets
_downloadPolicy
_bookManifest
_installMediaAsset:assetInstalledPath:fileName:drmPath:error:
_addPurchaseManifestItem:
_removeDuplicateEntry:
_newManifestEntry:
_newManifestEntry:withFileName:
_existingManifestEntry
_syncedBooksPath
sharedBookContainerCachesPath
copyright
pageProgressionDirection
sortArtistName
sortCollectionName
sortTitle
_isSharedDownload
_bookPath
completion
_privacyAcknowledgementURLString
privacyIdentifier
setPrivacyIdentifier:
privacyPromptSemaphore
setPrivacyPromptSemaphore:
_privacyIdentifier
_privacyPromptSemaphore
initWithRequestStyle:
gratisIdentifiers
setBundleIdentifiers:
_newDefaultRequestProperties
redirectedClaimURL
_newRetryRequestPropertiesWithURL:
suppressesErrorDialogs
setShouldSuppressDialogs:
authenticationReasonDescription
propertyListBodyData
initWithRequestBody:
setAuthenticationReasonDescription:
setSuppressesErrorDialogs:
_authenticationReasonDescription
_defaultRequestProperties
_requestBody
_suppressesErrorDialogs
_createScratchDirectory
_extraMetaDataFromBOM:error:
_verifyBundleIdentfiier:bundleVersion:packagePath:
_removeScratchDirectory:
bundleFileType
sourceURL
setBundleFileType:
_sourceURL
_bundleFileType
_fetchAppProxyForBundleID:error:
_canRescueInstallTypeForBundleID:proxy:error:
_attemptRescueForBundleID:error:
_isRestoreRunning
setPollDuration:
setStatus:
setServiceErrorMessage:
_isUnrecoverable:statusCode:
setActivityURL:
_unrecoverableErrors
setValuesWithResponseDictionary:
activityURL
setStatusCode:
serviceErrorLabel
setServiceErrorLabel:
_activityURL
_pollDuration
_status
_statusCode
_serviceErrorLabel
_serviceErrorMessage
setHandler:
setOptions:
setViewControllerName:
setTimeoutTimer:
_applicationStateMonitor
applicationStateForApplication:
_setApplicationState:forClientID:
updateInterestedBundleIDs:states:
_setApplicationStatesWithDictionary:
bundleInfoValueForKey:PID:
sharedService
openApplication:options:withResult:
setBadgeValue:
appIdentifier
shouldLaunchApp
launchOptions
_getProcessID:forApplicationIdentifier:
processAssertionIdentifier
processAssertionInterval
processAssertionReason
viewControllerName
options
cancelTimeoutTimer
_dequeueAlertWithMessage:connection:
dequeueAlertWithMessage:connection:
registerPluginConnectionWithMessage:connection:
testBadgingWithMessage:connection:
testLockscreenAccountSheetWithMessage:connection:
testPluginAlertWithMessage:connection:
restartApplicationWithMessage:connection:
terminateApplication:forReason:andReport:withDescription:
_registerPluginConnectionWithMessage:
sendPluginMessage:
dialogDictionary
_requestPluginConnectionWithCompletionBlock:
initWithBundleIDs:states:
applicationInfoForApplication:completion:
_getApplicationInfoForIdentifier:key:
_disconnectPluginConnection:
_fireDeferredPluginBlocksWithConnection:
_timeoutPluginConnection
postNotificationName:object:userInfo:
beginGeneratingStateChangeNotificationsWithCompletionBlock:
endGeneratingStateChangeNotifications
frontmostClientIdentifier
removeDefaultPNGSnapshotsForIdentifier:
suspendFrontApplication
sendPluginMessage:withReplyBlock:
_enabledRemoteNotificationTypes
_observeAllIdentifiersCount
_observedApplicationIdentifiers
_pendingAlerts
_pluginConnection
_pluginConnectionTimeout
_pluginDeferredBlocks
_springBoardQueue
_stateCache
timeoutTimer
_timeoutTimer
_viewControllerName
stopObserving
_sendDownloadKindsUsingNetwork:
cancelAllDownloadsWithMessage:connection:
finishDownloadsWithMessage:connection:
getActiveDownloadsWithMessage:connection:
getDownloadAssetPropertiesWithMessage:connection:
getDownloadAssetsWithMessage:connection:
getDownloadKindsUsingNetworkWithMessage:connection:
getDownloadPropertiesWithMessage:connection:
getDownloadsWithMessage:connection:
getEntityExistsWithMessage:connection:
insertDownloadsWithMessage:connection:
moveDownloadWithMessage:connection:
notifyClientsOfExternalPropertyChanges:connection:
notifyClientsOfExternalStateChanges:connection:
prioritizeDownloadWithMessage:connection:
reevaluateBackgroundDownloadsWithMessage:connection:
registerClientDownloadManager:connection:
removePersistenceIDWithMessage:connection:
restartDownloadsWithMessage:connection:
retryRestoreDownloadsWithMessage:connection:
setAssetPropertiesWithMessage:connection:
setDownloadHandlerWithMessage:connection:
setDownloadPropertiesWithMessage:connection:
setDownloadsWithMessage:connection:
getCellularNetworkAllowed:connection:
setCellularNetworkAllowed:connection:
finishSessionWithMessage:connection:
getSessionPropertiesWithMessage:connection:
connectDownloadHandlerWithMessage:connection:
resetDisavowedSessionsWithMessage:connection:
setClientDownloadHandlerWithMessage:connection:
setSessionProgressWithMessage:connection:
setHandlerPropertiesWithMessage:connection:
setSessionPropertiesWithMessage:connection:
setSessionStatusDescriptionWithMessage:connection:
pipeline
garbageCollectionTimerIsExpired
startObserving
applicationIdentifier
_downloadPersistentIDsFromBundleIDs:
_pauseDownloads:isForced:client:
orderedSetWithArray:
_resumeDownloads:client:
_cancelDownloads:client:
_retryRestoreIfNecessaryForTransaction:
_rescueStuckPlaceholderWithBundleID:
activeDownloadIdentifiers
copyXPCEncodedValuesForClientProperties:
valueForExternalProperty:ofAssetID:
valueForExternalProperty:ofDownloadID:
_filterAndTranslateProperties:usingBlock:
_prioritizeDownload:aboveDownload:client:error:
_restartDownloads:client:
initWithObject:
addDownloadHandler:
_handleSessionMessage:connection:usingBlock:
cancelAuthenticationSessionWithID:
continueAuthenticationSessionWithID:
useCredential:forAuthenticationSessionWithID:
performDefaultForAuthenticationSessionWithID:
rejectSpaceForAuthenticationSessionWithID:
disavowDownloadSessionWithID:error:
failDownloadSessionWithID:error:
finishDownloadSessionWithID:
releaseDownloadSessionWithID:
sessionForSessionID:
_handleSessionMessage:connection:usingReplyBlock:
resetDisavowedSessionsForHandlerWithID:
setGlobalDownloadHandlerID:forClientID:
modifyDownloadHandlerWithID:usingBlock:
setSessionProperties:forSessionWithID:
_managerClientForConnection:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
beginUsingNetworkForDownloadKind:
endUsingNetworkForDownloadKind:
_managerClients
_networkKinds
_rescuingBundleIdentifiers
_thumbnailOperationQueue
_thumbnailRequestsByDownloadID
_workspaceDownloadObserver
_warmUpSharedURLCache
_networkUsageStateChangeNotification:
_operationCountChanged:
_reloadOperationKeepAliveTransaction
setObject:
_expireCachedObjectForKey:
setExpirationTimer:
_setGlobalState
_initBackgroundTaskAgent
_observeNotifications
mainServer
_getShowingDialogWithMessage:connection:
registerInstallAttributionDatabaseCleanTask
registerInstallAttributionPingbackRetryTask
finishWithSuccess
addOperations:waitUntilFinished:
resultWithTimeout:error:
carrierBundleStatusForService:
subscriptionStatusForAccountUniqueIdentifier:
hasSubscriptionSlot
sharedURLCache
isUsingNetwork
setClientType:
_setTakesTaskCompletionAssertions:
setLogFileBaseName:
setLogDirectoryPath:
copyProtocolConditionalContext
setDefaultConditionalContext:
_reloadWiFiManager
changeLanguageURL
addBackgroundTaskWithRequest:
cachedObjectForKey:
cacheObject:withKey:expirationInterval:
cancelBackgroundTaskWithIdentifier:
removeCachedObjectForKey:
_handleWakeWithName:job:
_aliveForOperationQueues
_backgroundTaskObservers
_bagTimers
_batterySaverWatcher
_cachedObjects
_dialogCount
_jetsamSource
_keepAliveTransactions
_keepAliveTransactionStore
_keepAliveOperationQueues
_notifyToken
_satisfiedWakeRequests
deviceOffers
ams_activeiCloudAccount
ams_iTunesAccounts
ams_altDSID
ams_firstObjectPassingTest:
_ss_IDMSAccountForAccount:error:
securityLevelForAccount:
ams_setPassword:
setAuthenticationType:
setCanMakeAccountActive:
initWithAccount:options:
performAuthentication
addSuccessBlock:
addErrorBlock:
installState
setInstallState:
installPhaseFinishedForProgress:
_isPlaceholderRestore
networkAvailableRequest
pluggedInRequest
wifiAvailableRequest
initWithBackgroundTaskAgentJob:
copyBackgroundTaskAgentJob
setValue:forBackgroundTaskAgentKey:
valueForBackgroundTaskAgentKey:
_job
_newManifestWithStoreDownloadQueueResponse:accountID:accountName:
initWithManifestType:
addActivity:
copyJobManifestWithAccountID:accountName:
enumerateActivitiesWithAccountID:accountName:usingBlock:
externalState
initWithDatabaseEntity:properties:
overrideDownloadSizeLimitForDownloadIdentifier:
downloadSizeLimitForPolicyWithID:
downloadForStoreDownload:
placeholderDownloadCanceledForPurchaseIdentifier:
placeholderDownloadForPurchase:
initWithObjects:count:
_mediaAssetsForDownloadIdentifier:session:
_initWithDownload:mediaAssets:policy:
setRentalIdentifier:
_bestMediaAsset
setTaskIdentifier:
_shouldFailForFinishedDownload
_shouldCancelAsDuplicate
_shouldCancelAutomaticDownload
setIsPerDeviceVPP:
setDownloadRestoreState:
_loadSizeIfNecessaryForAsset:
setMediaAssetSize:
setDestinationPath:
setHasHDR:
setHas4K:
_newURLRequestWithAsset:
_isPodcastRestore
_newAVAssetDownloadSessionOptionsWithAsset:URLRequest:
setAVAssetDownloadSessionOptions:
_newDataConsumerWithAsset:destinationPath:
_isDTServiceHubIssuedRequest:
setDataConsumer:
setHLS:
dataConsumer
_shouldFailForDiskSpaceWithAsset:dataConsumer:
setInfersDiscretionary:
setDiscretionary:
_requiresPoweredPluggedIn
setRequiresPowerPluggedIn:
_transferProgressFractionWithAsset:
setBytesPerSecondLimit:
setTimeoutIntervalForResource:
setTimeoutIntervalForRequest:
setLoadingPriority:
setClientSecondaryIdentifier:
_URLSessionTaskPriorityForDownload:
setTaskPriority:
initWithApplicationHandle:thumbnailURL:
setBackgroundOperations:
cellularDataStates
isCellularAllowed
userDefaultStates
currentBoolValue
downloadSizeLimit
networkConstraintsForDownloadKind:
_isPodcast
rangeOfCharacterFromSet:
expectedContentLength
predicateMatchingPredicates:
enumeratePersistentIDsAndProperties:usingBlock:
_loadSizeForAsset:error:
_sendsStoreHeadersForAsset:
_newAVContentInfoDictionary
allHTTPHeaderFields
userAgentWithBundleIdentifier:version:
_usesStreamingZipDataConsumerForAsset:
_allowsCellularAccessForAsset:
_setRequiresShortConnectionTimeout:
powerStates
_itemIsInMediaLibrary
_itemIsInSoftwareLibrary
isAppInstallationAllowed
isAutomaticAppDownloadsAllowed
requestFreeSpace:atPath:withOptions:completionBlock:
_assetNeedsDecryption:
_URLSessionTaskPriorityForDownloadPriority:
_assetSizeFromURLResponse:
_ignoresDownloadHandler
_mediaAssets
_policy
_AVBackgroundSessionConfigurationWithIdentifier:
setRequestCachePolicy:
set_requiresPowerPluggedIn:
set_sourceApplicationSecondaryIdentifier:
infersDiscretionary
set_infersDiscretionaryFromOriginatingClient:
_reuseExistingTaskInSession:
dataTaskWithRequest:
set_priority:
set_loadingPriority:
getAllTasksWithCompletionHandler:
_getExistingTaskInSession:
URLSession:assetDownloadTask:didFinishDownloadingToURL:
URLSession:assetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
URLSession:assetDownloadTask:didResolveMediaSelection:
URLSession:aggregateAssetDownloadTask:willDownloadToURL:
URLSession:aggregateAssetDownloadTask:didCompleteForMediaSelection:
URLSession:aggregateAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
originalRequest
AVAssetDownloadSessionOptions
bytesPerSecondLimit
clientSecondaryIdentifier
loadingPriority
requiresPowerPluggedIn
taskPriority
timeoutIntervalForResource
timeoutIntervalForRequest
numAudioSelectionsToBeDownloaded
setNumAudioSelectionsToBeDownloaded:
numSubtitleSelectionsToBeDownloaded
setNumSubtitleSelectionsToBeDownloaded:
destinationPath
hasHDR
has4K
_AVAssetDownloadSessionOptions
_backgroundOperations
_bytesPerSecondLimit
_clientSecondaryIdentifier
_dataConsumer
_destinationPath
_discretionary
_isHLS
_loadingPriority
_mediaAssetSize
_requiresPowerPluggedIn
_taskPriority
_taskIdentifier
_timeoutIntervalForResource
_timeoutIntervalForRequest
_title
_URLRequest
_numAudioSelectionsToBeDownloaded
_numSubtitleSelectionsToBeDownloaded
_infersDiscretionary
_isPerDeviceVPP
_hasHDR
_has4K
_downloadRestoreState
manifestURL
setManifestURL:
bundledManifestURL
setBundledManifestURL:
scheduledInBackground
setScheduledInBackground:
_scheduleUpdateAssetsOperationWithManifestURL:bundledManifestURL:clientIdentifier:userAgent:scheduledInBackground:completion:
_bagDidLoadNotification:
refreshCache:connection:
clearCache:connection:
_bundledManifestURLForClientIdentifier:
_deferredScheduleValuesByClientID
_lastModifiedHeaderValueByClientID
applicationProxyForBundleURL:
getApplicationReceiptPathWithMessage:connection:
refreshAllReceipts:connection:
refreshAppReceipt:connection:
connectionHasEntitlement:
_addOperation:
configureDuet
getInternalSettingsWithMessage:connection:
insertEventWithMessage:connection:
reportEventsWithMessage:connection:
recordAnalyticsWithMetricsDialogEventWithMessage:connection:
setInternalSettingsWithMessage:connection:
initWithMetricsEvents:
setEventTopicOverride:
insertEventSummaries:error:
_reportEvents
_cancelBackoffRetryTimer
_scheduleBackoffRetry
_cancelBackoffRetry
setFinishBlock:
countUnreportedEventsBefore:
recordAnalyticsWithMetricsDialogEvent:forTopic:
_reportEventsIfNeeded
_backoffRetryCount
_backoffRetryTimer
_eventController
addRequestWithURL:account:completion:
_URL
setRedirectedClaimURL:
_redirectedClaimURL
uploadTime
_assetToken
_assetTokenType
_uploadTime
_requestURL
initWithStatusPollRequests:
statusPollRequests
_statusPollRequests
explicitPreferencesDisabled:
MCSetBoolRestriction:value:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
setExplicitPreferencesDisabled:
setBoolValue:forSetting:
setLastChangeInducingBagExplicitOff:
lastChangeInducingBagExplicitOff:
_sendActivationWithError:
queue
activationHandler
didActivate
setDidActivate:
setActivationHandler:
alertSemaphore
setAlertSemaphore:
setQueue:
_didActivate
_activationHandler
_queue
_sharedContainerPath
_sharedAssetStagingPath:
pathComponents
_moveSharedAssetFromPath:toPath:error:
_sharedContainerPath:
_isSharedMDMDownload
_isSharedODRDownload
policyData
setPolicyData:
_cachedPolicy
_initializePolicy
_addPolicy:
downloadSizeLimitForPolicyWithID:networkType:
_sizeLimitForPolicy:networkType:
networkTypes
_isPolicyRuleNetworkTypeAllowed:networkType:
_isPolicyRuleCellularDataAllowed:networkType:
_isPolicyRuleSatisfied:forPolicy:networkType:
_policies
_sizeLimitOverrides
initWithPolicyIdentifiers:
changesetType
setChangesetType:
downloadPropertiesForStoppedDownloads
setDownloadPropertiesForStoppedDownloads:
setNetworkType:
policyIdentifiers
setPolicyIdentifiers:
_changesetType
_downloadProperties
_networkType
_policyIDs
weakObjectsHashTable
_endDisconnectedSessionsForClientID:
_notifyObserversOfHandlersChange
_clientForSession:
disconnectDownloadSessionWithID:
_sendMessage:forSessionID:replyBlock:
_endSessionWithID:state:
_clientForProperties:
_popDownloadSessionForSessionID:
setSessionState:
_notifyObserversOfSessionChange:
setActiveHandlerIdentifier:
setBlocksOtherDownloads:
setNeedsPowerAssertion:
_globalHandlerIDForClientID:
_disconnectSessionsForHandlerID:
_notifyObserversOfSessionChanges:
setSessionPropertyValues:
setURLCredential:
activeHandlerIdentifier
beginBackgroundTaskForSessionWithID:reason:expirationBlock:
closeUnstartedSessionWithID:
endBackgroundTaskForSessionWithID:identifier:
retrySessionWithID:
_clientsByHandlerID
_disconnectedSessionsByClientID
_globalHandlersByClientID
_observersQueue
_sessionsByID
_stepOperations
handlerReleasedDownloadPhase
initialDownloadPhase
_downloadSessionPropertiesWithDownloadPhase:
_sendProgressToDelegate:
_finishResult:
_needsDRMOperationForDownloadKind:
_handlerReleasedDownloadPhase
_initialDownloadPhase
_stopResult
setCanBePaused:
setValue:forSessionProperty:
valueForSessionProperty:
blocksOtherDownloads
canBePaused
needsPowerAssertion
setPercentComplete:
setStatusDescription:
statusDescription
URLCredential
_activeHandlerIdentifier
_propertyValues
_sessionID
_sessionProperties
_urlCredential
unreportedEventsSinceTimestamp:
financeDictionaryRepresentation
userDsid
markAsFailed:
markAsCompleted:
discardUnreportableEvents
_insertTimestamp
_openSession
_setState:
downloadSessionState
_setURLCredential:
_copyValueForEntity:property:dictionary:
_setValue:forEntity:property:dictionary:
_setValues:forEntity:dictionary:
externalValuesForAssetID:
setBytesDownloaded:forAssetID:ofDownloadID:
setBytesUploaded:forAssetID:ofDownloadID:
setExternalValuesWithDictionary:forAssetID:
setExternalValuesWithDictionary:forDownloadID:
setValue:forExternalProperty:ofAssetID:
_externalAssetValues
_externalDownloadValues
setExternalPropertyValues:forAssetWithID:
_changeset
_completedUnitCount
_totalUnitCount
_newBodyDataWithBodyPlist:error:
_newRequestPropertiesWithBodyData:
manager
identities:
isIdentityMapValid
resultWithError:
saveIdentityMap
lastRegisteredAccountIdentifier
_deleteKeychainTokensForAccountIdentifier:
_dispatchQueueUpdateToken
getAllCachedBiometricHTTPHeadersWithMessage:connection:
getCachedBiometricAuthenticationContextWithMessage:connection:
getCachedBiometricHTTPHeadersWithMessage:connection:
getConstraintsDictionaryWithMessage:connection:
getCurrentACLVersionWithMessage:connection:
getIdentityMapCountWithMessage:connection:
getKeyCountWithMessage:connection:
getStateWithMessage:connection:
isIdentityMapValidWithMessage:connection:
resetAccountWithMessage:connection:
resetWithMessage:connection:
saveIdentityMapWithMessage:connection:
setEnabledWithMessage:connection:
setAllowedWithMessage:connection:
tokenUpdateDidFinishWithMessage:connection:
tokenUpdateShouldStartWithMessage:connection:
tokenUpdateStateWithMessage:connection:
fetchContextFromCacheWithToken:evict:
xAppleAMDHeader
xAppleAMDMHeader
publicKeyDataForAccountIdentifier:purpose:error:
keyCountForAccountIdentifier:
canPerformBiometricOptIn
isIdentityMapValidForAccountIdentifier:
_resetAccount:withConnection:
tokenUpdateDidFinishWithLogKey:
tokenUpdateShouldStartWithLogKey:
systemUptime
obliterateBiometricsForAccountIdentifier:
clearLastRegisteredAccountIdentifier
isBiometricStateEnabled
_bootDate
_accessSemaphorePoolUsingBlock:
_bodyDictionary
_delay
_pushToken
_url
copyExpirationTimer
_expirationTimer
localURL
setHashChunkSize:
setRemoteURL:
setVersion:
downloadKey
hashArrayData
hashChunkSize
originatingBundleId
overrideCampaignLimit
insertInstallAttributionParams:overrideCampaignLimit:completionHandler:
_params
_originatingBundleId
_overrideCampaignLimit
checkFirstPartyClaimsWithAuditTokenData:completionBlock:
_requestBodyDictionary
setPassThroughErrors:
attachmentType
childAttachmentForRelationship:
_attachmentDictionaryWithAttachment:
_targetDictionaryWithContentItem:
_externalServiceDictionaryWithDestination:
initWithPostDescription:
setPostID:
_attachments
_authorID
_authorType
_contentItems
_createTime
_externalServiceDestinations
_isAttributed
_text
_postID
shortVersionString
bundleProxyForIdentifier:
_loadFromItemIdentifiers
_loadFromBundleIdentifiers
_newSoftwareLibraryItemWithApplication:
applicationProxyForSystemPlaceholder:
setPlaceholder:
_setValue:forProperty:
_newSoftwareLibraryItemWithContainerPath:
setBeta:
setProfileValidated:
isLaunchProhibited
_initWithITunesMetadata:
bundleIdentifiers
itemIdentifiers
_itemIDs
_softwareLibraryItems
_newURLOperationForItem:error:
_addResponseForItem:operation:
setResponseError:
initWithItem:
primaryAssetURL
setResponseDownloads:
setError:forItemIdentifier:
setDatabaseIdentifier:
setLocalAssetURL:
setParentRelationshipType:
setParentUploadIdentifier:
setSourceApplication:
parentUploadIdentifier
_databaseIdentifier
_localAssetURL
_parentRelationshipType
_parentUploadIdentifier
_sourceApplication
_uti
_requestItems
_serverResponse
_responseDownloads
_responseError
_countOfBytesExpectedToSend
_countOfBytesSent
_uploadDatabaseIdentifier
_transactionId
_pingbackUrl
_retryCount
sendBookDownloads:withReason:
iconsDictionary
_artworkDataWithError:
_runHeadless
_runNonHeadless
aa_altDSID
accountWithAltDSID:uniqueIdentifier:accountName:
setAltDSID:
completionHandlerAdapter
_canPerformExtendedBiometricActions
_postNotificationWithResponse:
setCodeResponses:
setFailedCodes:
setRedeemedCodes:
_useLegacyRedeem
_fetchRedeemCodeMetadataWithError:
_newURLRequestPropertiesForCode:
_processDictionary:dialog:error:
sharedAccountStore
primaryAppleAccount
_authenticateAppleAccount:withTitle:error:
_newURLRequestPropertiesForServiceActionButton:
_installedExternalVersionForRedeemCodeMetadata:
canPerformExtendedBiometricActionsForAccountIdentifier:
initWithRedeemCodeDictionary:
_didUserCancelWithError:
operation:selectedButton:
_biometricStore
_cameraRecognized
_headless
_installedExternalVersionByiTunesIdentifier
_redeemCodes
_redeemMetadataByCode
_redeemResponse
_logCorrelationKey
addPreferences:
clearPreferences
preferencesCount
preferencesAtIndex:
readFrom:
writeTo:
mergeFrom:
_preferences
setValue:forDomain:key:
getValueForDomain:key:usingBlock:
defaultKeyValueStore
_getValuesWithMessage:connection:
getValuesWithMessage:connection:
removeAccountWithMessage:connection:
removeAllValuesWithMessage:connection:
removeValuesWithMessage:connection:
setValuesWithMessage:connection:
_removeAccountWithMessage:connection:
_removeAllValuesWithMessage:connection:
_removeValuesWithMessage:connection:
_setValuesWithMessage:connection:
copyDataForDomain:key:
readUsingSessionBlock:
removeAccountFromDomain:
_handleMessage:connection:withBlock:
removeAllValuesWithCompletionBlock:
removeAllValuesForDomain:completionBlock:
initWithUTF8String:
setData:forDomain:key:
valueForDomain:key:
_keyValueStore
_storeIdentifier
_storeVersion
_sandboxed
_usesIdentityAttributes
_performSinfMirartionCheckBeforeFailing
_targetAccount
_disableAutomaticDownloadKinds
_disableBookkeeper
_sendLogoutRequest
_sbsyncData
_garbageCollectWorkingDirectory
_garbageCollectPersistentManagers
_garbageCollectSoftwareDownloads
_garbageCollectWorkingDirectoryPath:
allCookiesForAccount:
allCookiesForUserIdentifier:
setTopic:
setProperty:forBodyKey:
setApplicationIdentifier:
insertEvents:withCompletionHandler:
eventTopicOverride
_metricsController
_eventTopicOverride
isDeletable
setSoftwareLibraryItems:
failureTypes
setResponseType:
addSession:
connectHandlerWithMessage:connection:
resolveSessionWithMessage:connection:
errorHandlerManager
_connectHandlerWithMessage:connection:
_resolveSessionWithMessage:connection:
popAllSessions
setFailureTypes:
popSessionWithIdentifier:
openSession:withCompletionBlock:
_completionBlocks
_completionQueue
_failureTypes
setSessionProperties:
artistIdentifier
redownloadActionParameters
enableExtensions
genre
genreIdentifier
hasMessagesExtension
launchProhibited
messagesArtworkURL
artworkIsPrerendered
thumbnailImageURL
setIAdAttribution:
_newDateFormatter
dateFromString:
setIAdConversionDate:
setIAdImpressionDate:
setLenient:
timeZoneForSecondsFromGMT:
setTimeZone:
responseType
_responseType
setErrorHandlerResponseType:
updateWithResponseDictionary:accountIdentifier:
_presentDialog:
willBeginProcessingDictionaryHandler
setWillBeginProcessingDictionaryHandler:
_willBeginProcessingDictionaryHandler
_refreshDownload:error:
_URLBagKeyForDownload:
consumer
objectForData:response:error:
getVisibilityForAllIAPsInApp:completionHandler:
setWithSet:
removeOverridesForApp:completionHandler:
_newIdentityForPayment:
_newRequestWithIdentity:transactionID:
_updateDownload:withDictionary:
setIgnoresForcedPasswordRestriction:
_newPurchaseForDownload:
_applyResultsOfOperation:toDownload:error:
setShouldSendSecureToken:
_requestDictionary
_newAccountPasswordSettingsDictionary
_serverValueForAccountPasswordSettingValue:defaultValue:
_accountPasswordSettingValueForServerValue:
initWithFreeDownloadsPasswordSetting:paidPurchasesPasswordSetting:
freeDownloadsPasswordSetting
paidPurchasesPasswordSetting
_freeDownloadsPasswordSetting
_paidPurchasesPasswordSetting
_hasDemotedApplications
setCancelsPurchaseBatch:
sendResponse:forPurchases:
postNotificationWithResponse:
sendResponses:
setPurchase:
setClassName:forClass:
ackConnection
finishesPurchases
sendAuthenticateRequestWithContext:responseHandler:
sendError:forPurchases:
sendResponse:
setFinishesPurchases:
_finishesPurchases
_purchases
_uniqueIdentifier
_createDatabaseDirectory
_addPurchases:forClient:
_beginPurchaseBatch:forClient:
_newEncodedPurchaseEntityPropertiesWithResponse:
_clientForUniqueIdentifier:
_newResponsesToPurchasesForClient:inDatabase:
_enqueueNextPurchase
_cancelEncodedPurchases:forClient:
_connectClient:withOutputConnection:
newPurchaseWithDatabaseEncoding:
_finishEncodedPurchaseIdentifiers:forClient:
_moveEncodedPurchaseIDs:afterPurchaseID:forClient:
addPurchasesWithMessage:connection:
cancelPurchasesWithMessage:connection:
connectClientWithMessage:connection:
getPurchasesWithMessage:connection:
finishPurchasesWithMessage:connection:
insertPurchasesWithMessage:connection:
movePurchasesWithMessage:connection:
_newPurchasesFromEncodedArray:client:
_markInFlightCanceledPurchaseIdentifier:
_filterPurchases:withTransaction:block:
insertPurchases:afterPurchaseWithIdentifier:forClient:
setDownloadIdentifiers:
_authenticateForPurchases:client:
_newPurchaseIdentifiersFromEncodedArray:
movePurchasesWithIdentifiers:afterPurchaseWithIdentifier:
initWithDatabaseEncoding:
setURLResponse:
addPurchases:forClient:
batchIdentifier
initWithPurchases:
_finishAuthenticationRequestForBatchIdentifier:client:withAccountID:error:
setAuthenticationBlock:
_authenticationOperationQueue
createsDownloads
expectedDownloadFileSize
_cancelPurchasesForLackOfDiskSpace:client:
cancelPurchaseWithIdentifier:applyingProperties:
_showNotEnoughDiskSpaceDialogForPurchases:
setBatchIdentifier:
deletePurchaseWithIdentifier:
_garbageCollectInflightPurchases
buyParametersValueForKey:
_sendAuthenticateRequestForClientUniqueID:withContext:responseHandler:
_finishPurchaseRequestForClientUniqueID:withResponse:
setPurchaseBlock:
_purchaseOperationQueue
existingDownloadForPurchase:
_cancelPurchasesWithBatchIdentifier:client:response:
databaseEncoding
cancelsPurchaseBatch
createsJobs
decodedResponse
replacePurchase:withDownloadQueueResponse:withClientIdentifier:
_checkStoreDownloadQueuesForPurchase:response:
_showPurchasesFailedDialogWithFirstTitle:count:
_clientForMessage:connection:
newPurchaseWithXPCEncoding:
setDefaultUserAgent:
addPurchases:
beginPurchaseBatch:
_addEncodedPurchases:forClient:
_insertEncodedPurchases:afterPurchaseID:forClient:
_placeholderAppPathForBundleIdentifier:
_authenticatingBatchIdentifiers
_didGarbageCollect
_inflightCanceledIdentifiers
_purchasingIdentifiers
_decryptSession
_clientIdentifierForPurchases:
_userAgentForPurchases:
authenticationBlock
_authenticationBlock
_isDeviceCapableForPurchase
_incompatibleErrorWithPurchase:
_showDialogForPurchase:error:
_performSetup
_newPurchaseOperationWithPurchase:
isGratisSoftwareClaim
claimAppsWithPurchase:
_updateAccount:withPurchaseResponse:
_performTeardownWithResult:queueResponse:
enabledServiceType
purchaseBlock
setDecodedResponse:
setTidHeaders:
startTime
setRequestStartTime:
receivedResponseInterval
setResponseStartTime:
finishInterval
setResponseEndTime:
readKeyPath:fromURL:error:
newDefaultInstance
usesLocalRedownloadParametersIfPossible
_installedSoftwareApplicationForPurchase:
_personalizedRedownloadParametersForPurchase:
_localRedownloadParametersForPurchase:
skipSoftwareAccountPreflight
_familyPurchaserAccountIdentifierForApplication:
ownerAccountDSID
_appleIDForApp:error:
setActive:
downloadProperties
sharediTunesStoreConfig
itemForKey:
offers
offerType
setNewCustomer:
_applicationOwnerAccountDSID
_purchase
_purchaseBlock
_urlBagType
exceptionWithName:reason:userInfo:
readKeyPath:error:
readKeyPaths:error:
dataWithContentsOfURL:options:error:
readKeyPaths:fromURL:error:
_data
_maxOrderIdentifier
_insertPurchases:forClient:orderIdentifier:orderSpacing:
_cancelDownloadForPurchaseIdentifier:
_getInsertOrderID:nextOrderID:afterPurchaseID:
orderedSetWithObjects:
sendSoftwareDownloads:withReason:
networkConstraints
filteredAssetTypes
sendSoftwareDownloads:withReason:forClientID:
sendClusterMappings:
placeholderDownloadIdentifier
_nextBatchIdentifier
_addEntityForPurchase:managerIdentifier:orderIdentifier:
_addPlaceholderDownloadForPurchase:clientIdentifier:
resetPurchasedAutoUpdateForStoreItemID:
replacePurchase:withDownloadQueueResponse:
_postMetricsEventForError:
_displayPaymentSheetOperation
shouldDecodeResponse
_newStoreURLOperationWithProperties:
KBSyncType
_importKeybagFromDictionary:
_metricsPageEventWithResponse:performance:
setMetricsPageEvent:
setPageURL:
setServerApplicationInstance:
setServerTiming:
shouldProcessProtocol
shouldSendSecureToken
_addKBSyncDataToRequestProperties:forAccountID:
_shouldSendMachineDataHeadersForProperties:
machineDataStyle
shouldSetCookies
_setShouldSetCookies:
rangeOfString:options:
_destinationFileURL
_sendsResponseForHTTPFailures
_shouldMescalSign
_wifiClient
_wifiClientTypeForManagerType:
_wifiInterfaceName
_decodedResponse
setHasAdamId:
hasAdamId
setHasCreatedOffsetMillis:
hasCreatedOffsetMillis
setHasPreferenceType:
hasPreferenceType
createdOffsetMillis
_adamId
_createdOffsetMillis
_externalId
_preference
_preferenceType
_has
_areSourceAndDestinationEqual
_isDaemonOwned
_installExternalDownload:
_installDaemonOwnedDownload:
_updateRentalsPlist
_newIPodLibraryItem
_checkClaimsForAccountID:claimStyle:clientAuditTokenData:establishActiveAccounts:ignoresPreviousClaimAttempts:completionBlock:
initWithReason:
sendRequestCompletionBlock:
setAccountID:
setSuppressErrorDialogs:
setPurchaseID:
setHttpHeaders:
sendRequestWithCompletionBlock:
hideApplicationBadgeForPendingUpdates
skipDownloads
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
setDestinations:
setActionButtonTitle:
setActionButtonURL:
setLaunchURL:
reloadForSettingsFromServerWithCompletionBlock:
initWithBundleID:accountIdentifier:claimStyle:
initWithBundleIDs:
clusterID
setClusterID:
clusterVersionID
setClusterVersion:
launchWeight
setLaunchesWeight:
foregroundUsageWeight
setUsageWeight:
setClusterMappings:completionBlock:
sendSoftwareDownloads:withReason:forClientID:manifestType:
_newManifestWithManifestType:
_addDownloads:toManifest:forClientID:
_sendSoftwareManifest:withReason:
setSubscriptionEntitlementsWithDictionary:forAccountID:segment:
clientID
addActivity:withIdentifier:
initWithClaimStyle:
setEstablishesActiveAccount:
setIgnoresPreviousClaimAttempts:
initWithManifest:
_newRequestWithManifest:
hidePendingUpdatesBadge
reloadUpdatesWithCompletionBlock:
sendPendingPingbacks
unregisterInstallAttributionPingbackRetryTask
initWithURL:cachePolicy:timeoutInterval:
sharedSession
dataTaskWithRequest:completionHandler:
_bundleIdForCurrentInstallSheet
_addBackgroundTaskJob
_handleBackgroundTaskEvent:
_finishRequests:withResponses:
_btaObserver
_nextScheduledPoll
_requests
_downloadSecondaryAssets:
_monitorForTerminationOfBundleID:
_newSoftwarePropertiesWithDownload:
setSubscriptionStatus:
setSupportsMusicCatalogPlayback:
activeLockerAccount
setSupportsAddToCloudMusicLibrary:
supportsMusicCatalogPlayback
setCanSubscribeToMusicCatalog:
_newResponseWithSubscriptionStatus:
_allowsPromptingForPrivacyAcknowledgement
_updateWithDictionary:
_clusterID
_clusterVersionID
_foregroundUsageWeight
_itemID
_launchWeight
_initSKXPCConnection
_reloadEventHandler
disconnectBlock
messageBlock
sendSynchronousMessage:withReply:
_disconnectBlock
_messageBlock
hideAppstoredPendingUpdatesBadgeWithMessage:connection:
reloadAppstoredUpdatesWithMessage:connection:
addObserver:
strongToStrongObjectsMapTable
fractionCompleted
progressWithTotalUnitCount:
_newProgressForMediaSelection:
addChild:withPendingUnitCount:
asset
mediaSelectionGroupForMediaCharacteristic:
selectedMediaOptionInMediaSelectionGroup:
setProgress:forMediaSelection:
setMediaSelectionDidComplete:
numMediaSelectionsCompleted
_mediaSelectionToProgressMap
_numMediaSelectionsCompleted
_writeReceipt:withContainerDirectory:style:
plugInKitPlugins
URLByAppendingPathComponent:isDirectory:
writeToURL:atomically:
unreportedEventURLsSince:
_runForReportingURL:suppressUserInfo:error:
_shouldBackoffAfterError:
deleteReportedEvents
deleteEventsInsertedBefore:
finishBlock
initWithReportingURL:insertTimestamp:suppressUserInfo:eventController:
anyUnreportedEvents
_destroyOutputFile:
initToFileAtPath:append:
open
writeEventsToStream:uncompressedMaxSize:
close
streamContentLength
sessionCanaryIdentifier
_shouldClearEventsDespiteError:
markEventsAsReported
sharedDefaultSession
signData:completionBlock:
_signatureWithData:error:
_directory
_finishBlock
_importPropertiesFromLibraryItem:fromAccount:usingLibrary:
sharedLibraryDatabasePath
initWithLibraryPath:trackData:playlistData:
sharedMediaLibraryService
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
performImport:fromSource:withProgressBlock:completionHandler:
dictionaryWithCapacity:
collectionIndexInCollectionGroup
indexInCollection
episodeSortIdentifier
seriesName
collectionArtistName
composerName
showComposer
isMusicShow
numberOfCollectionsInCollectionGroup
numberOfItemsInCollection
releaseYear
isCompilation
_absoluteTimeValueForDateValue:
shortDescription
longDescription
longSeasonDescription
workName
movementName
movementNumber
movementCount
composerIdentifier
collectionIdentifier
cloudIdentifier
_stringValueForURLValue:
viewStoreItemURL
launchExtrasUrl
isHighDefinition
seasonNumber
episodeIdentifier
networkName
_currentTrackMovieInfoFromMetadata:
_extendedContentRatingStringForLibraryItem:
hlsPlaylistURL
_storeArtworkTokenFromLibraryItem:metadata:
_currentTrackChapterDataForTrackPid:libraryItem:usingLibrary:
videoDetailsDictionary
flattenedChapterDataWithImportChapters:library:trackPersistentID:
ratingSystem
stringForRatingSystem:
ratingDescription
action
_action
_decryptAsset:
_unprotectMediaAsset:
_checkoutRentalKeys:
_changeType
categoryWithIdentifier:actions:intentIdentifiers:options:
setNotificationCategories:
setWantsNotificationResponsesDelivered
_requestAuthorization:
delegateQueue
shouldHandleNotificationResponse:
handleNotificationResponse:bag:
addFinishBlock:
notificationCenter:didChangeSettings:bag:
initWithURLBag:
requestAuthorizationWithOptions:completionHandler:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:didChangeSettings:
userNotificationCenter:didOpenApplicationForResponse:
center
setCenter:
setDelegateQueue:
_center
_applicationProgress
DownloadsDatabase
DownloadHandlerObserver
NSObject
DownloadsTransaction
DownloadsChangeset
NSCopying
SubscriptionStatusOperation
PurchaseManifest
PurchaseManifestItem
FamilyCircleOperation
StoreDownloadQueueResponse
SKDownloadInternal
SKDownload
SKDownloadChangeset
AcceptTermsAndConditionsOperation
SpringBoardAlertProxyDelegate
LoadDownloadQueueOperation
ISStoreURLOperationDelegate
ISURLOperationDelegate
ISOperationDelegate
PurchaseOperation
ISBiometricSessionDelegate
PurchaseResponseInfo
DownloadHandlerClient
DialogManager
MediaSocialStatusPollRequest
DownloadSessionProperties
FinishDownloadResponse
MediaDRMOperation
CheckoutRentalKeysOperation
AccountCacheDBClient
BatterySaverWatcher
ISFairPlayRentalInfo
SinfsArray
DownloadEntity
SyncRentalOperation
DemotedApplication
DeviceScorerContext
DeviceScorer
PipelineDownloadTaskState
MicroPaymentQueue
ArrayHash
MicroPaymentClient
MicroPaymentClientMergeResults
MicroPayment
BuyMicroPaymentOperation
PurchaseOperationDelegate
MediaContentTasteUpdateController
SKPaymentTransaction
SKPaymentTransactionInternal
MicroPaymentQueueResponse
MicroPaymentProductDiscount
SKProductSubscriptionPeriodInternal
SKProductSubscriptionPeriod
SKProduct
SKProductInternal
LoadMatchStatusOperation
FinishMicroPaymentOperation
ApplicationWorkspaceState
CoreDataAdditions
SpringBoardAlertProxy
PurchaseProtocolDataProvider
ApplicationWorkspaceOperation
CacheDeleteCoordinator
PurchaseActionsDatabaseTransaction
GarbageCollectAssetsOperation
StoreKitRequestQueue
ISSingleton
LoadMicroPaymentProductsOperation
ReceiptRefreshOperation
DirectUploadSessionController
NSURLSessionTaskDelegate
NSURLSessionDelegate
KeybagRequestOperation
MicroPaymentProductsResponse
DirectUploadController
DirectUploadSessionDelegate
MediaSocialAuthenticationDelegate
MediaSocialErrorDelegate
MediaSocialStatusPollingDelegate
MicroPaymentProductSubscriptionPeriod
MicroPaymentProduct
CheckDownloadQueueOperation
MediaSocialPostEntity
LoadCompletedMicroPaymentsOperation
ApplicationWorkspaceClearProgressOperation
RingtonePurchase
RingtonePurchaseStore
UpdateAssetsOperation
ASDAdditions
RequestQueue
DaemonBiometricOptInOperation
RestoreDownloadDataOperation
StoreServicesRequestQueue
DisplayPaymentSheetOperation
PKPaymentAuthorizationControllerDelegate
LoadExternalDownloadManifestOperation
FinishDownloadMemoryEntity
SKPaymentDiscount
PromotedIAPDatabaseSchema
ExternalDownloadManifest
ExtractFileOperation
RestoreDemotedApplicationsOperation
RestoreDownloadItemsOperationDelegate
PushNotificationRequestOperation
FairPlayDecryptFileOperation
DownloadDRM
DownloadSinf
LoadMicroPaymentQueueCountOperation
MicroPaymentQueueRequest
LoadMicroPaymentQueuesOperation
LoadMicroPaymentQueuePaymentsOperation
PurchaseIntent
LoadMicroPaymentQueueOperation
InstallToneOperation
PersistentStore
PersistentStoreConfiguration
SubscriptionEntitlementsOperation
StreamingZipDownloadDataConsumer
SZExtractorDelegate
GetPlayInfoOperation
AuthorizeMachineOperation
PushNotificationController
APSConnectionDelegate
PushNotificationRegisterBlock
PushNotificationClient
BagContract
AMSAccountBagContract
AMSURLBagContract
AMSDeviceOfferBagContract
DownloadAssetFairPlayStreamingKeyLoader
AVAssetResourceLoaderDelegate
WatchMetricsController
PushNotification
PushNotificationSoundsSyncOperation
PushNotificationEnvironment
PostPushNotificationTokenOperation
PushNotificationDisplayOperation
SKPaymentQueueClient
SetAutomaticDownloadKindsOperation
AutomaticDownloadAdditions
AddItemToIPodLibraryOperation
ShowServerPromptOperation
Daemon
CheckinRentalOperation
XPCClient
XPCClientBackgroundTask
DownloadAssetEntity
MediaSocialExternalTargetEntity
DownloadManagerClient
TransactionEntity
StoreDownloadQueue
CarrierBundlingEligibilityResponse
StoreDownloadQueueRequest
UpdateMigrator
UpdateMigratorOperation
UpdateMigratorPromotionOperation
UpdateMigratorAutoUpdateOperation
SubscriptionOperation
PrepareDirectUploadOperation
DemoteApplicationOperation
EpubRightsDataParser
NSXMLParserDelegate
StoreDownload
InstallSoftwareOperation
SoftwareProperties
CarrierBundlingEligibilityOperation
FinishDownloadsOperation
PurchaseIntentDatabaseRow
PurchaseActionsDatabase
FinishedDownloadEntity
DownloadArtworkCacheOperation
AccountPasswordSettingsController
ServerAuthenticationOperation
PersistentDownloadManagerEntity
PersistentDownloadEntity
PersistentDownloadManagerKindEntity
NetworkRequestQueue
MediaSocialAuthenticationCoordinator
MediaSocialAuthenticationResponse
IPodLibrary
RestoreDownloadsOperation
RestorePodcastItemsOperationDelegate
DownloadHandle
DaemonBiometricKeychain
FinishDownloadStepOperation
RestoreDownloadItemsOperation
LoadPassbookPassOperation
URLBagTimer
DownloadApplicationIdentifierEntity
RestoreBackupOperation
ApplicationWorkspace
UMUserSwitchStakeholder
DownloadDatabaseSchema
LoadRentalInformationOperation
InstallDownloadOperation
ClearAssetCacheOperation
IPodLibraryItem
RedeemCodesProtocolDataProvider
PreorderEntity
CanceledPreorderEntity
MediaSocialContentItemEntity
LoadPreorderQueueOperation
CheckPreorderQueueOperation
StorePreorderQueue
AppReceiptRefreshOperation
SKPayment
NSMutableCopying
SKMutablePayment
SKPaymentInternal
FinishDownloadAssetMemoryEntity
CancelPreordersOperation
MediaSocialErrorCoordinator
PreorderQueueClient
DirectUploadEntity
FilesystemDownloadDataConsumer
DownloadErrorController
DownloadError
DownloadFatalError
DownloadGenericError
DownloadDiskSpaceError
DownloadIncompatibleAppError
DownloadNetworkConstraintError
UserNotificationCenter
UserNotification
InstallAttributionParams
DownloadClientEntity
RestoreDownloadItem
ApplicationHandle
PurchaseHistoryOperation
DownloadDataConsumer
CheckHashesOperation
DaemonDialogOperation
ScratchManager
AppReceiptOperationResult
DevicePasscodePromptOperation
SBSRemoteAlertHandleObserver
AppExtensionSupport
GetAutomaticDownloadKindsOperation
MediaContentTasteUpdateOperation
SKProductsResponse
SKProductsResponseInternal
EBookManifest
DownloadPipeline
NSURLSessionDataDelegate
PerformDownloadOperation
DistributedNotificationCenter
DistributedNotificationObserver
KeyValueObserver
KeyValueObserverItem
SKProductDiscountInternal
SKProductDiscount
EventMonitor
EventMonitorEvent
EventMonitorBlockEvent
RestoreStatistics
EventDispatcher
CloudServiceAPITokenOperation
StoreKitClient
BuyMicroPaymentOperationDelegate
LookupRequestOperation
Download
InstallEBookDownloadOperation
PrivacyPromptOperation
DownloadAsset
GratisClaimOperation
BundleValidator
RescueAbandonedPlaceholderOperation
DirectUploadArtistEntity
MediaSocialPostResponse
SpringBoardUtility
SpringBoardPendingAlert
DownloadController
LSApplicationWorkspaceObserverProtocol
AMSDeviceLanguageContract
BatterySaverWatcherDelegate
ApplicationWorkspaceFinishOperation
BackgroundTaskRequest
PurchaseActionsDatabaseSchema
DownloadsSession
DownloadsSessionDescriptor
PromotedIAPDatabaseTransaction
PrepareDownloadOperation
AVAssetDownloadDelegate
PrepareDownloadResponse
UpdatableAssetControllerDeferredScheduleValues
UpdatableAssetController
AppReceiptController
MetricsController
AskPermissionActionOperation
GratisClaimProtocolDataProvider
MediaSocialPostAttachment
InAppReviewRequest
MediaSocialStatusPollOperation
DownloadPolicyEntity
ExplicitPreferenceManager
RemoteWebViewOperation
InstallDocumentDownloadOperation
DownloadPolicy
DownloadPolicyManager
DownloadPolicyChangeset
DownloadHandlerManager
FinishDownloadOperation
DownloadHandlerSession
WatchAnalyticsReportingOperation
DownloadHandlerAuthenticationOperation
ExternalDownloadState
ApplicationWorkspaceFailedPlaceholderOperation
DownloadsExternalTransaction
ApplicationDownloadProgress
KeybagSyncOperation
DaemonBiometricStore
DelayedGotoSemaphore
DaemonCachedObject
MicroPaymentDownload
InstallMicroPaymentDownloadOperation
SaveInstallAttributionParamsOperation
ClaimStoreKitClientOperation
ExpiredDownloadRecoveryOperation
ExpiredDownloadRecoveryResponse
MediaSocialPostOperation
SoftwareLibraryLookupOperation
SoftwareLibraryUpdateOperation
RestorePodcastItemsOperation
DirectUploadRequest
RestoreDownloadItemsResponse
RestorePodcastItemsResponse
DirectUploadProgress
InstallAttributionPingback
EnableAllAutomaticDownloadKindsOperation
BookAssetDaemonUtility
LoadSoftwareThumbnailOperation
RedeemCodesOperation
ISDialogOperationDelegate
DaemonPBFusePreferences
KeyValueStore
StoreKitClientIdentity
AppReceiptRefreshOperationOptions
LogoutOperation
DownloadsDatabaseGarbageCollectionOperation
AnalyticsRecordingOperation
RemoveableSoftwareLookupOperation
SendInstallAttributionPingbackOperation
ErrorHandlerManager
Transaction
ErrorHandlerClient
ErrorHandlerSession
ErrorHandlerResponse
DaemonProtocolDataProvider
RefreshStoreQueueDownloadOperation
DirectUploadResponse
PromotedIAPManager
RefreshMicroPaymentDownloadOperation
RefreshITunesMatchDownloadOperation
UpdateAccountPasswordSettingsOperation
CheckForDemotedApplicationsOperation
PurchaseManagerClient
PromotedIAPDatabase
PurchaseController
FairPlayDecryptSession
DirectUploadDatabaseSchema
PurchaseAuthenticateOperation
PurchaseManagerOperation
MappedPropertyList
PurchaseDownloadsTransaction
DisplayPaymentSheetContainerOperation
URLConnectionRequestOperation
WiFiManager
DaemonPurchaseResponse
DaemonPBFuseItemPreference
InstallMediaDownloadOperation
PurchaseEntity
PurchaseManagerEntity
AppStoreUtility
PurchaseActionsManager
PurchaseManager
MediaSocialStatusPollingCoordinator
ApplicationWorkspaceInstallPlaceholderOperation
InstallSoftwareDownloadOperation
CloudServiceCapabilitiesOperation
AppClusterMapping
SKXPCConnection
SoftwareUpdatesStore
SKWeakReference
ApplicationWorkspaceUninstallOperation
WorkspaceDownloadObserverClient
WorkspaceDownloadObserver
DownloadAssetProgress
AppReceipt
AnalyticsReportingOperation
IPodLibraryML3TrackImporter
PurchaseIntentActionOperation
DownloadDRMOperation
ApplicationWorkspaceChange
UserNotificationManager
UNUserNotificationCenterDelegate
UNUserNotificationCenterDelegatePrivate
ApplicationWorkspaceProgressOperation
%@: Reloading for %ld download policy change(s)
%@: Restarting %ld download(s) by request
%@: Finishing download: %lld with phase: %@
[%@]: Not installing placeholder because appstored will handle it
%@: Prioritizing download: %lld
%@: Prioritizing downloads of kind: %@ for client: %@
%@: Reconciling %lu software downloads
%@: Cancel %lu downloads during software reconciliation
%@: Finished reconciling downloads with IDs: %@
%@: Reset download: %lld
%@: Reset automatic download: %lld
%{public}@: Aborted fetching subscription status because privacy link needs to be displayed first.
%{public}@: Setting subscription status on an account. Saving %{public}@.
Daemon: Exiting
%@: Rebuilding manifest for path: %@
%@: Adding file to purchase manifest: %@
%@: Path: %@ not valid for manifest: %@
%@: Removing item from purchase manifest: %@
%@: Missing %lu paths from manifest
%@: Deleting %lu secondary files for %lu removed manifest items
%@: Deleted secondary file: %@
%@: Could not delete secondary file: %@: %@
%@: Path does not exist: %@
%@: Path returned empty plist: %@
%@: Wrote dictionary (success: %d)
%@: Couldn't load bag to get family-info url
%@: Using cached family after error: %@
%@: Operation started
%@: Terminating with no account
%@: Failed to retrieve conditions: %@
%@: Terms and conditions are valid.
%@: Terms and conditions are empty.
%@: Terms and conditions are being copied.
%@: Ending alert with acceptance: %@
%@: Server-side acceptance of [%lld] failed with error: %@
%@: Disabling %lu power assertions before user interaction
%@: Could not display terms sheet
%@: Could not load URL bag: %@
%@: Finished loading download queue (%@, %@, %@)
%@: Importing keybag from response: %@
%@: Loading download queue (%@, %@, %@) with reason: %ld
%@: Download queue response (key: %@ startID: %@ endID: %@) %@.
%{public}@: [%{public}@] Starting purchase for adamID: %@
%@: Retry purchase operation after dialog
%@: Retry after delayed goto
%@: Retry purchase operation after changed buy parameters
%@: Retry purchase with MD sync state
%@: Retry purchase operation after machine data action
%{public}@: We've attempted silent auth multiple times and the purchase continues to fail. Refusing to retry again.
%{public}@: [%{public}@] Purchase finished with error: %{public}@
%{public}@: [%{public}@] Purchase completed
%{public}@: Unable to find productType in buyParams
%{public}@: Auto-enrollment found countryCode: %{public}@
%{public}@: Auto-enrollment failed for no bag
%{public}@: [%{public}@] Changing buy parameters after auth dialog: %@
%{public}@: [%{public}@] Purchase failed with code %@: %@
%@: Purchase failed with retry dialog: %@
%@: Purchase: %@ failed with dialog and error: %@
%{public}@: Attaching auto-enrollment payment token
%{public}@: Attaching FPAN ID
%@: Forcing authentication for restriction
%@: Performing machine-data action: %@ with accountID: %@
%{public}@: apple-pay-classic: Failed to no country code
%{public}@: apple-pay-classic: Failed for no payment networks
%{public}@: apple-pay-classic: Failed for no biometrics
%{public}@: apple-pay-classic: ACL evaluation completed with result: %{public}@
%{public}@: apple-pay-classic: Skipping Apple Pay Classic for ACL version: %{public}@
%{public}@: apple-pay-classic: Availability completed with result: %{public}@
%{public}@: apple-pay-classic: Performing Apple Pay Classic with payment services URL: %@
%{public}@: apple-pay-classic: Failed for no payment services URL
%{public}@: apple-pay-classic: Skipping Apple Pay Classic
%{public}@: Attempting auto-enrollment check with countryCode: %{public}@
%{public}@: Attempting auto-enrollment check without countryCode
%{public}@: Skipping auto-enrollment due to disabled biometrics
%{public}@: ACL support evaluation completed with result: %{public}@
%{public}@: Performing auto-enrollment with payment services URL: %@
%{public}@: Auto-enrollment failed for no payment services URL
%{public}@: Skipping auto-enrollment with ACL version: %{public}@
%@: Skipping confirmation dialog with buy parameters: %@
%@: Prompting user with buy confirmation
%{public}@: [ASN] DisplayPaymentSheetOperation did complete
%{public}@: [ASN] Payment sheet authorized failed with error: %@
%{public}@: [ASN] Payment sheet authorization failed with error: %{public}@
%{public}@: [ASN] Payment sheet did authorize payment with A/S/N
%{public}@: Payment sheel container operation failed with error: %{public}@
%{public}@: User confirmed buy using payment sheet
%{poublic}@: Authorized payment, but failed to find buy button
%@: User confirmed buy confirmation: %@
%@: User attempted Ask to Buy: %@
%@: User declined buy confirmation: %@
%{public}@: Clearing credentials after buy confirm cancel. Saving %{public}@.
%{public}@: Storefront changed: %{public}@. Checking with delegate if purchase should continue.
%{public}@: [%{public}@] Issuing purchase request: %@
%{public}@: Did not finish auto-enrollment, leaving DPAN cache unchanged.
%{public}@: Finished auto-enrollment, performing DPAN update check
%{public}@: Clearing DPAN cache for auto-enrollment, server-driven instruction
%{public}@: Updating cached DPAN identifier for auto-enrollment
%{public}@: Skipping DPAN update check for auto-enrollment with buyParams: %{public}@ %{public}@
%@: storeCorrelationID: %{public}@
PurchaseOperation: Failed to score device
%{public}@: Failed to create device scorer
%@: Using client auth for purchase bag key: %@
%@: Using server auth for purchase bag key: %@
%@: Processing file: %@
%@: Failed with error: %@
%@: Invalid primary sinf
%@: Could not get rental bag
%@: Could not get rental bag request
%@: Could not get DSID
%@: Could not get rental identifier
%@: Could not generate checkout request body
%@: Rental checkout body: %@
%@: Received failure type: %@
%@: Succeeding because no rental bag data
%@: Could not process rental bag keys
%@: Rental checkout response: %@
%@: Rental period ends in %.2f seconds at %@
%@: Playback not started, duration is %lu
%@: Rental playback period ends in %.2f seconds at %@
%@: Checking out rental keys
%@: Performing checkout attempt #%ld of %d
%@: Giving up after checkout failure
%@: Verified rental information
%@: Giving up after repeated failure
%@: Could not generate sync request body
%@: Rental sync response: %@
%@: Syncing rental
%{public}@: Device scoring not available
%{public}@: Load bag operation failed for timeout
%{public}@: Failed to find bag
[%{public}@]: Purchase intent bundleId nil, aborting (productIdentifier: %@)
[%{public}@]: Purchase intent productIdentifier nil, aborting (appBundleId: %@)
[%{public}@]: Adding purchase intent for productID: %{public}@, productName: %{public}@, bundleID: %{public}@, appName: %{public}@
[%{public}@]: FBSystemService failed to open application %{public}@ with error: %{public}@
[%{public}@]: Opened app: %{public}@
%@: Checking queue for client: %@
%@: Failing %lu downloads
%@: Finishing %lu downloads
%@: Deleting %lu downloads and checking %lu downloads after migrating properties
%@: Updating payment after unexpected purchase response: %@
[%{public}@]: Client entered foreground: %{public}@
[%{public}@]: Client registered: %{public}@
%@: Could not update deferred payment: %@, error: %@
%@: Fail payment after request deny: %@
%@: Invalid status for requestID: %@
%@: Refresh %ld queues after payment approval
[%{public}@]: Got IAP order: %@, for app: %{public}@
[%{public}@]: Timed out getting promoted IAP order for bundle id: %@
[%{public}@]: Error setting IAP order: %@, for app: %{public}@
[%{public}@]: Set IAP order: %@, for app: %{public}@
[%{public}@]: Timed out setting promoted IAP order for bundle id: %@, IAPs: %@
[%{public}@]: Got IAP visibility: %@, for app: %{public}@
[%{public}@]: Timed out getting promoted IAP visibility for bundle id: %{public}@, IAP: %@
[%{public}@]: Error setting IAP visibility: %{public}li, for product: %@, app: %{public}@
[%{public}@]: Set IAP visibility: %{public}li, for product: %@, app: %{public}@
[%{public}@]: Timed out setting promoted IAP visibility for product: %@, app: %{public}@
[%{public}@]: (Internal client) Got IAP info for app: %{public}@. Order: %@, hidden product ids: %@, shown product ids: %@
[%{public}@]: Timed out getting promoted IAP internal info for bundle id: %@
%@: Client disconnected: %@
%@: Could not load clients: %@
%@: Merging duplicate client %@ into client %@
%@: Found %lu existing clients
[%{public}@]: Tring to send purchase intents for client: %{public}@, got intents: %{public}@
[%{public}@]: Sending purchase intents for client: %{public}@, intents within time limit: %{public}@
%@: Starting payment: %@
%@: Merged existing payment with response payment
%@: Merged in new payment from response
%@: Could not find payment to merge with existing payment
%@: Could not generate buy parameters
%@: Could not parse response
[%{public}@]: Got invalid application proxy for bundle id: %{public}@. Checking for plugin
%@: Could not find application for identifier: %@
[%@] Not performing refresh operation because SetupAssistant hasn't completed
[%@] Kick off content taste refresh operation, invalidate local cache: %d
[%@] updating expiration time from %{public}@ to %{public}@.
[%@] Account store changed.
[%@] Deciding to append receipt: [Current: %ld bytes] [New: %ld bytes]
%@: Loading match status for account: %@
%@: Could not load match status: %@
%@: Loaded match status: %ld for account: %@
%@: Finishing payment: %@
%@: Failed with non-dictionary response
%@: Failed with failureType: %@
[%@] Ignoring complete notification for %@ because appstored is enabled
[%@] Ignoring incomplete notification for %lld because appstored is enabled: %@
[%@] Requesting [%@] Notification: [%@]
Could not save modal context: %p: %@
-- %ld, %@, %@, %@
%{public}@: AdHocOfferNotFound: %d
%{public}@: AdHocOfferPriceNotValid: %d
%{public}@: AdHocOfferMissingKeyParams: %d
%{public}@: AdHocOfferSignatureNotValid: %d
%{public}@: [PW] DisplayPaymentSheetOperation did complete
%{public}@: [PW] Payment sheet authorized failed with error: %@
%{public}@: [PW] Payment sheet did cancel
%{public}@: [PW] Payment sheet did authorize payment with password
%{public}@: Preparing to display payment sheet
%{public}@: [PW] Payment sheet encountered an unknown error
%{public}@: Display payment sheet container operation failed with error: %{public}@
%{public}@: Server-driven authentication failed with error: %{public}@
[%@]: Registered cache delete callbacks for clienID: %@ with osResult: %d
[%@]: Requested cancel purge for service
[%@]: Requested to periodic purge %@ with urgency %ld
[%@]: Purge requested: %@ actual purge: %lld with urgency: %ld
[%@]: Requested purgeable with urgency: %ld
[%@]: Total purgeable is %lld bytes for urgency: %ld
[%@]: Pushed combined purgeable amounts: %@
[%@]: Refreshing purgeable storage
[%@] error fetching attributes of manifest file at path %@ %@
[%@] keeping current manfiest %@
[%@] manifest file is too recent to be removed %@
[%@] manifest file at url is too new to remove %@ %@
[%@] error removing manifest file at url %@ %@
[%@] successfuly removed manifest file at url %@
[%@] error fetching asset file urls from asset directory %@ %@
[%@] error fetching attributes of asset file at path %@ %@
[%@] keeping asset file at url %@
[%@] asset file at url is too new to remove %@ %@
[%@] error removing asset file at url %@ %@
[%@] successfuly removed asset file at url %@
%@: No app for ID: %@
%@: Products load failed/cancelled: %@
%@: Loaded products for %lu identifiers
%@: Couldn't load bag to get batch size
%@: Loading products for %lu identifiers with batch size %ld
[%{public}@]: Updating receipt for: %{public}@
%@: Adding %ld upload requests
%@: Preparation failed for upload: %@, error: %@
%@: Canceling task: %lu, to cancel upload: %@
%@: Canceling task: %lu, to pause upload: %@
%@: Fail upload: %@, after HTTP error: %@
%@: Task did stop for upload: %@
%@: Upload: %@ failed in session: %@ with error: %@
%@: Upload: %@ finished in session: %@
%@: Starting task: %lu, for upload: %@, session: %@
%@: Upload %lld did update progress: %.2f
%@: Attempting claim before authorization for contentID: %@
%@: Could not claim apps: %@
%@: Running authorize operation for account ID: %@, family account ID: %@
%@: Inserted media social post: %lld, with %ld uploads
%@: Failure count is now: %ld for upload: %lld
%@: Resuming uploads after authentication
%@: Canceling uploads after canceled authentication
%@: Deleting upload after error dialog: %@
%@: Deleting post after error dialog: %@
%@: Retry post after error dialog: %@
%@: Retrying %ld uploads after error dialog
%@: Disconnect client: %@
%@: No reply to send XPC access denied message
%@: Deleting upload: %@, for client: %@
%@: Deleting post: %lld, for client: %@
%@: Removing pending upload with pid: %lld.
%@: Keeping pending upload with pid: %lld.
%@: %lu pending upload(s) removed.
%@: Adding poll request pid: %lld.
%@: Post failed due to polling timeout, removing from database: %lld
%@: Post succeeded, removing from database: %lld
%@: Failed to process post: %lld is now due to unrecoverable error: %@
%@: Failed to process post: %lld is now due to a recoverable error: %@
%@: Failure count for post: %lld is now: %ld, after error: %@
%@: Pausing upload: %lld, for client: %@
%@: Invalid register message, no endpoint
%@: Registered observer client: %@
%@: Reset upload: %lld, for client: %@
%@: Reset upload: %lld
%@: Retrying failed media social post: %lld
%@: Received invalid product dictionary
%@: Running request: %@
%@: Request %@ failed: %@
%@: Found %ld downloads for request: %@
%@: Could not find app for identifier: %@
%@: Fetching range [%@, %@]
%@: Range [%@, %@] failed with error: %@
[%@] Deciding to write receipt: %d bytes -- %@
[ApplicationWorkspace]: No placeholder with progress to cancel, skipping uninstall: %@
[ApplicationWorkspace]: Cancelled progress for %@ progress: %@
[ApplicationWorkspace]: Could not find progress to cancel for %@ progress: %@
%@: Assigning tone (%@) to contact (%@).
%@: Failed to assign tone to contact. %@
%@: Error downloading manifest from URL %@: %@
%@: Error parsing manifest from URL %@: %@
%@: Manifest at URL has no version %@: %@
%@: Version of Manifest at URL is older than cached version. URL %@ fetched manifest version %@ cached manifest version %@
%@: Version of Manifest at URL is older than bundled version. URL %@ fetched manifest version %@ bundled manifest version %@
%@: Error creating assets directory %@: %@
%@: Error creating manifests directory %@: %@
%@: Error copying bundled asset %@. manifest URL %@ manifest version %@ bundled asset version %@ bundled asset file URL %@ asset version %@ asset file URL %@: %@
%@: Error retriving asset %@. manifest URL %@ manifest version %@ asset URL %@ asset version %@ asset file URL %@: %@
%@: Error writing manifest to file URL %@: %@
%@: Invalid asset on manifest %@ %@:  %@
%@: Error creating symbolic link for current manifest %@ -> %@:  %@
[%@]: Unable to load bundled manifest data at url %@
[%@]: Error parsing bundled manifest %@: %@
[%@]: Unknown error parsing bundled manifest %@
[%@]: Bundled manifest at path has a no version %@
%@: Cancel operation: %@
%@: Disconnect operation: %@
%{public}@: Failed to determine device biometric style for new identity map
%{public}@: Failed to determine device biometric style for new anonymous idenitty map
%{public}@: Failed to determine device biometric style for enabling biometrics
%{public}@: Authenticating to opt-in to biometrics.
%{public}@: Auth response was no-op: %{public}@
%{public}@: Auth response returned new account: %{public}@
%@: UpdateTouchIDSettings request completed with status: %@
%@: UpdateTouchIDSettings request failed with status: %@, error: %@
%@: Biometrics enabled and cached for DSID: %@
%@: Restoring mid based download: %lld bundleIdentifier: %@
%@: Restoring MID hard failed with state: %ld download: %lld bundleIdentifier: %@
%@: Restoring data done with state: %ld download: %lld bundleIdentifier: %@
%@: Restoring data (attempt %ld) for software download: %lld / %@
%@: Restoring data with priority = %ld
%@: Skipping data restore after fatal error: %lld / %@
%@: Giving up after %d attempts for download: %lld / %@
%@: Cancelled after %ld attempts for download: %lld / %@
%@: Waiting a bit before retrying after error: %lld / %@
%@: Cannot load manifest for unentitled client: %@
%@: Cannot authorize for unentitled client: %@
%@: Cannot checkin rental for unentitled client: %@
%@: Cannot get purchase history for unentitled client: %@
%@: Could get family circle for unentitled client
%@: Cannot get play info for unentitled client: %@
%@: Cannot get software library for unentitled client
%@: Ignoring purchase intent action from unentitled client: %@
%@: Could discover if there are demoted applications for unentitled client
%@: Cannot invalidate URL bag for unentitled client: %@
%@: Cannot check if application is installed for unentitled client: %@
%@: Cannot check if application is hidden for unentitled client: %@
[%@]: Cannot check if applications are playable for unentitled client: %@
%@: Cannot request keybag for unentitled client: %@
%@: Cannot personalize for unentitled client: %@
%{public}@: Rejecting push notification request from unentitled client: %{public}@
%{public}@: Received request to post push tokens
%@: Rejecting push notification request from unentitled client: %@
%@: Cannot redeem codes for unentitled client: %@
%@: Cannot sync for unentitled client: %@
%@: Ignoring install attribution params from unentitled client: %@
%{public}@: Cannot load storefront country code for unauthorized client
%@: Could not do ATB for unentitled client
[%{public}@]: Did not find proxy for bundle id: %{public}@
[%{public}@]: Did not find adam id for bundle id: %{public}@
%@: Cannot show dialog for unentitled client: %@
%@: Cannot show prompt for unentitled client
%@: Cannot set software properties for unentitled client
%@: Cannot collect .har file for unentitled client
%{public}@: Should use client-driven upper-casing: %{public}@
%{public}@: Payment sheet failed for no username
%{public}@: Failed to configure payment request
%{public}@: Created payment request with requestType: %{public}@
%{public}@: Failed to present payment sheet with error: %{public}@
%{public}@: Completion block with success: %{public}@, error: %{public}@
%{public}@: Failed to load URL bag with error: %{public}@
%{public}@: Attempted apple-pay-classic but failed for no merchant Session, setting request type to CoF instead
%{public}@: Setting request type to apple-pay-classic
%{public}@: Setting request type to CoF
%{public}@: Configured payment request with requestor: %{public}@, localizedTitle: %{public}@
%{public}@: Attaching merchant session to payment request
%{public}@: Failed to configure PKPaymentMerchantSession
%{public}@: No merchant session in server response.
%{public}@: Failed to find Apple Pay Classic country code
%{public}@: Failed to find Apple Pay Classic payment networks
%{public}@: Skipping merchant session for incorrect ACL version: %{public}@
%{public}@: Failed to load salable icon image at URL: %{public}@
%{public}@: Found %{public}@ inline images
%{public}@: Fetching server-supplied inline image at URL: %{public}@
%{public}@: Generating client-supplied inline image with rating value: %{public}@
%{public}@: Fetching client-supplied inline image with rating type: %{public}@, name: %{public}@
%{public}@: Failed to fetch rating image for unknown rating image type
%{public}@: No inline images to display
%{public}@: Failed to finalized inline rating image
%@: Array out of bounds warning for tag: %@, index: %@
%{public}@: Failed to load flexList icon image at URL: %{public}@
%{public}@: Skipping attributedList for no items
%{public}@: Failed to obtain or format account name
%{public}@: Attempting to create authorization controller
%{public}@: Failed to create authorization controller
%{public}@: Attempting to present payment sheet
%{public}@: Failed to present payment sheet
%{public}@: Presented payment sheet
%{public}@: Challenge singing delay disabled
%{public}@: Challenge signing delay value found: %{public}@
%{public}@: No bag key found for challenge signing delay
%{public}@: Bag failed to load for challenge signing delay
%{public}@: Failed to insert metrics event with error: %{public}@
%{public}@: Failed to flush metrics events with error: %{public}@
%{public}@: Metrics failed with no bag key
%{public}@: Metrics failed with no bag
%{public}@: Begin loading image resource at: %{public}@
%{public}@: Failed to load image resource at: %{public}@, error: %{public}@
%{public}@: Finished loading image resource at: %{public}@
%@: Warning: Attempting to mask image with an unsupported color model: %{public}@
%{public}@: [AUTH] Payment sheet did authorize payment
%{public}@: [AUTH] Did authorize payment with AuthKit
%{public}@: [AUTH] Did authorize payment with A/S/N
%{public}@: [AUTH] AuthKit authorization did fail
%{public}@: [AUTH] Failed to sign challenge with error: %{public}@
%{public}@: [AUTH] Failed to sign challenge
%{public}@: [AUTH] Cancelation detected before challenge was signed
%{public}@: [AUTH] Signed challenge successfully
%{public}@: [AUTH] Saving payment token
%{public}@: [AUTH] Skipping payment token
%{public}@: [AUTH] Unknown error occured when authorizing payment
%{public}@: Payment sheet did finish
%{public}@: Did encounter authorization event: %{public}@
%{public}@: Payment sheet will finish with error: %{public}@
%@: Invalid url request
%@: Running for manifest format: %ld
%@: Finished with %lu valid downloads, %lu invalid downloads
%@: Could not parse manifest data
%@: User cancelled manifest confirmation
%@: Processing %lu downloads from an external manifest request
%@: Request failed with error: %@
[ERROR]: Cannot load non-https manifest URL: %@
Could not load download manifest with underlying error: %@
Found nil parameter when creating SKPaymentDiscount
[%{public}@] No Promoted IAP Database migration function for %li => %li
[%{public}@] Failed updating Promoted IAP Database to version %li
%@: Skipping download and install of: %@
%@: Fixing file permissions for %@
%@: Could not get sub-paths of %@: %@
%@: Could not stat %@: %s
%@: Could not set file attributes for file: %@, error: %@
%@: Extracting %s to %s
%@: BOMCopier failed with error: %d
%@: Fatal error: %s
%@: Fatal file error: %d: %s
%@: File conflict error: %s
%@: File error: %d: %s
%@: Checking eligibility for %ld demoted apps
%@: Fallback appleID from is %@
%@: Fallback accountID is %@
%@: Could not restore ineligible app: %@, error: %@
%@: Found %ld eligible restore item(s) for %ld account(s)
%@: Running operation for %ld items, account: %@
%@: Restore for account: %@, failed with error: %@
%@: Received zero downloads with error: %@, for apps: %@
%@: No download for app: %@, error: %@
%@: Added download: %lld for app: %@
%@: Can't perform request with no accountID
%@: Unknown request type: %ld
%@: Can't perform request with no URL
%@: Waiting for token register for environment: %@, URL: %@
%@: Performing push notification request: %@
%@: Could not begin decrypt
%@: Running decrypt %@
%@: Decrypt failed [%@]
%@: Failed with reason: %@
%@: Throttling queue check for client: %@
%@: Running %@ request: %@
%@: Server claims %@ items for %@
%@: Fetched %lu total payments
%@: Received invalid response
%@: Fetched %lu payments for %@
%{public}@: Successfully imported tone into Tone Library: "%{public}@". Finalizing with tone identifier: "%{public}@".
%{public}@: Tone import was skipped because it was a duplicate entry: "%{public}@". Finalizing with tone identifier: "%{public}@".
%{public}@: Tone import failed unexpectedly. This seems to be a transient failure, so rolling back asset: "%{public}@".
%@: Checking integrity with cookie: %@
%@: Found integrity cookie, reloading store coordinator
%@: Could not load old model for migration
%@: Could not create inferred mapping model: %@
%@: Performing lightweight migration for %@
%@: Could not migrate: %@
%@: Could not move migrated store: %@
%@: Destroy persistent store: %@
%@: Moving %@ to %@
%@: Could not load model
%@: Could not create directory for file: %@
%@: Loading persistent store: %@
%@: Detected incompatible model, attempting migration
%@: Could not add persistent store: %@
%@: Loading model: %@
%@: Could not load model: %@
%@: Fetching subscription entitlements from the server.
%@: Can't calculate usage if no path given
%@: Failed to open directory %@: %s
%@: getattrlistbulk on entry %llu in %@ returned error %s
%@: Got error %s while processing entry %llu in %@
%@: Failed to get name for directory item %llu in %@; not counting its children
%@: Failed to create path to child directory by appending "%s" to %@
%@: Skipping empty directory at %@/%s
%@: Skipping hardlinked file at %@/%s
%@: Could not generate request body: %@
%@: Fetching play info
%@: Could not get key identifier: %@
%@: Could not get DSID: %@
%@: Received failure status code: %@
%@: Importing %lu keybag bytes
%@: Failing authorization: could not get kbsync
%@: Missing account for authorize
%@: Needs authentication for account: %@ token error: %@
%@: Failing silent request needing authentication for account: %@
%{public}@: Performing authentication.
%@: Authorizing with token: %@, authentication: %d
%@: Could not encode plist: %@
%@: Could not post client notification, no client: %@
%@: Posting notification to client: %@
%@: Could not launch client application: %@
%{public}@: Posting push tokens
%@: Register client: %@
%@: Received unregister for unknown client: %@
%@: Unregister client: %@
%@: Environment token changed: %@
%@: Received push notification: %@: %@
%@: Ignoring push notification while disabled
%@: Ignoring push notification for inactive account: %@
%@: Ignoring push notification for unregistered client: %@
%@: The device's name changed. Sending the new name to the server.
%@: Could not fetch clients: %@
%@: Deleting environment: %@
%@: Destroying connection for %@
%@: Could not fetch environments: %@
%@: Firing %ld register blocks
%@: Reloading APS connections
%@: Could not fetch environment entities: %@
%@: Reloading APS connections for %lu environments
%@: Creating connection for environment: %@
%@: Client has %ld pending notifications: %@
%{public}@: Unable to post token because push is not enabled (%ld)
%{public}@: Forcing the token request due to stored value
%@: Could not fetch environments to post: %@
%{public}@: Posting %lu environment tokens. Forced: %d
%{public}@: Unable to post tokens in context. Push not enabled.
%@: Environment is now %@
%{public}@: Unable to add environment -- environment is nil
%@: Adding APS client for itunesstored
%@: Removing APS client for itunesstored
%@: Push enabledness changed: %ld
%@: Posted token for %@ for account %@
%{public}@: Updated push state to %ld -- no active account
%{public}@: Updated push state to %ld -- no production bag
%{public}@: Updated push state to %ld
%@: Adding media item to iPod library: %@
[%@] Setting task observer: %@
[%@] Insert Watch Metrics Event received through XPC: requested by [%@]
[%@] Ignoring request to run report - already running
[%@] Not scheduling because report is running
[%@] Connection refused because entitlements are missing
%@: Sound file expires in %.2f seconds
%@: Downloading sound file %@ to %@
%@: Cache sound file expiring in %.2f seconds
%@: Loading %lu sound files
%@: Removing %lu dead sound files
%@: Environment name mismatch, skipping token POST
%@: No URL for %@
%@: No token to push
%{public}@: Posting APS token for %{public}@. Token: %@
[%@]: Ignoring notification: no matching client: %@
[%@]: Ignoring notification: no handler for URL: %@
[%@]: Ignoring notification: invalid client ID
[%@]: Display notification with enabled types: %@ => %ld
[%@]: Posted bulletin request complete with result: %d error: %@
%{public}@: Received a push notification to update an account's account flags.
%{public}@: Unable to update an account's account flags. No account exists with the specified DSID, %{public}@.
[%@]: Finish delayed goto for identifier: %@
%{public}@: Received a push notification to update multi-user tokens.
%{public}@: Unable to update multi-user tokens. No account exists with the specified DSID. dsid = %{public}@.
%{public}@: Successfully updated the multi-user tokens.
%{public}@: Failed to update the multi-user tokens. error = %{public}@
%{public}@: Received a push notification to update an account's privacy acknowledgement.
%{public}@: Unable to update an account's privacy acknowledgement. No account exists with the specified DSID, %{public}@.
%{public}@: Unable to update an account's privacy acknowledgement. The value for 'privacyAcknowledgement' in the push notification is nil.
%{public}@: Updating an account's privacy acknowledgement. account = %{public}@ | newPrivacyAcknowledgement = %{public}@
%{public}@: Failed to save the account after updating its privacyAcknowledgement. error = %{public}@
%{public}@: Resume buy failed to parse accountIdentifier
%{public}@: Resume buy failed to parse buyParams
%{public}@: Attempting to resume buy
%{public}@: Resume buy failed for invalid notification arguments
%{public}@: Setting account credits. Saving %{public}@.
%@: Skipping since kinds are no longer dirty
%@: Filtered download kinds: %@ => %@
%@: Setting automatic download kinds: %@
%@: Received invalid status: %@
%@: Rolling back automatic download kinds after fatal error: %@
%@: Prompt does not need display: %@
%@: No operation for prompt identifier: %@
%@: Showing prompt for prompt identifier: %@
%@: Cached subscription entitlements have expired.
%@: Returning cached subscription entitlements.
%@: Marking the cached subscription entitlements as expired.
%@: Caching subscription entitlements.
%@: Clearing cached subscription entitlements.
%@: Failed to read the subscription entitlements from disk. %@
%@: Unable to determine the path of the cached subscription entitlements.
%@: Failed to write the subscription entitlements to disk. %@
%@: Could not generate checkin request body
%@: Could not generate checkin ack request body
%@: Checking in rental
%@: Acking rental checkin
%@: Began background task (%d, %@): %@
%@: Ending background task: %@
%@: Application state for %@ changed to "%@"
[%@] Using HTTPBodyDataFilePath: %@
[%@] HTTPBodyDataFilePath is present but does not exist on disk: %@
%@: Client '%@' cannot access kind: %@
%@: Could not create import download for client download
%@: Performing newsstand migration for client: %@
%@: Client "%@" not entitled for download kinds: %@
[%@]: Ignoring automatic download queue check: no account
[%@]: Ignoring automatic download queue check: disabled
[%@]: No enabled automatic download kinds - syncing with the server
[%@]: Synchronize automatic kinds back with:  [%@]
%{public}@: Unable to set automatic download kinds because there's no active iTunes account.
%@: Committing automatic download kinds: %@
%{public}@: Failed to save the active account after setting automatic download kinds. error = %{public}@
%@: disabling automatic download for reason: %@
%@: enabling automatic download for reason: %@
%@: Skipping software download restore for downloadID: %@ since appstored will pick it up
%@: Checking download queues at client request
%@: Resending dirty automatic download kinds
%@: Loading %lu queues with reason: %@
%@: Checking %lu queues with reason: %@
[%@]: Checking automatic download queue
[%@]: Skipping software download: %@
[%@]: Skipping video download: %@
%@: Remove placeholder after queue check: %lld
%@: Deleting all %lu downloads for request: %@
%@: Fetching queue contents: count changed
%@: Skipping load contents: count has not changed
%@: Retrying all canceled restore downloads
%@: Retrying all soft-failed restore downloads
%@: Checking download queues for trigger-downloads
[%@]: Migrating iTunes data.
[%@]: Upgrade Migration
[%@]: Restore From Backup Migration
[%@]: Migrate from Different Device Migration
[%@]: Queued demoted app restore for bundleIDs: %@
[%@]: Network Changed
[%@]: Loading Bag Prior to migration
[%@]: Unable to load bag, but attempting migration anyway: %@
[%@]: Running checks after adding first migration.
[%@]: Wating for network to migrate store data.
[%@]: Waiting for checks to complete.
[%@]: Restoring all demoted applications
[%@]: Restoring demoted applications with bundle identifiers: %@
%@: File not readable for upload: %lld, URL: %@
%@: Missing account for upload: %lld
%@: Preparing upload: %lld with request URL: %@
%@: Using base URL from user defaults: %@
[%@]: Enumerating delta packages for: %@
[%@]: Found delta package for: %@
[%@]: Delta had no assets for: %@
[%@]: Found version match for %@: %@ -> %@
[%@]: Found variant match for %@: %@ -> %@
[ApplicationWorkspace]: Installing software package with bundleID: %@: bundleVersion: %@ path: %@
[ApplicationWorkspace]: Failed to install application: %@; %@; %@
%@: Succeeded in installing application: %@ -- %@
%@: No receipt data For: %@
%@: Failed to write receipt for %@
%@: Could not create writable metadata
%@: Could not serialize metadata: %@
%@: Sending header enrichment request
%@: Performing delayed retry: still need header enrichment
%@: Loaded bag successfully, but no enrichment URL found. Assuming carrier bundle status not eligible.
%@: Running preflight operation
%@: Silent SMS succeeded
%@: Silent SMS failed
%@: Performing delayed retry: still need silent SMS
%@: Finishing %ld downloads
[%{public}@] Fatal Error: Failed to create the database schema
[%{public}@]: Trying to insert a nil install attribution param
[%{public}@]: Trying to get install attribution param for a nil adamId
[%{public}@]: Trying to remove install attribution param for a nil adamId
[%{public}@]: Trying to remove install attribution params before a nil date
[%{public}@]: Trying to insert a nil install attribution pingback
[%{public}@]: Trying to get install attribution pingback for a nil adamId
[%{public}@]: Trying to set pending = 1 on install attribution pingback for a nil adamId
[%{public}@]: Trying to remove install attribution pingbacks for a nil adamId
[%{public}@]: Trying to remove non pending install attribution pingbacks before a nil date
[%{public}@]: Trying to increment install attribution pingback retry count on a nil adamId
%@: Using cached thumbnail for download: %lld
%@: Loading thumbnail from URL: %@
%@: Could not load artwork file: %@: %@
%{public}@: Setting an account's password settings. Saving %{public}@.
%{public}@: Creating an ServerAuthenticationOperation. callStack = %{public}@
%{public}@: User picked non-actionable button
[%{public}@]: [%{public}@] Performing authentication. redirectURL = %{public}@.
%{public}@: Could not authenticate. error = %@
%{public}@: Appending server-driven title: %{public}@
%{public}@: Appending server-driven reason: %{public}@
%{public}@: Appending server-driven buy button label: %{public}@
%{public}@: Performing default action instead of redirecting
%{public}@: Skipping explanation because of password default
%{public}@: Skipping explanation as strings are empty
%{public}@: [%{public}@] Skipping explanation because of consolidated auth dialogs
%{public}@: Skipping dialog because we are authenticated and not forced
%@: Remove successful '%d' of media file for persistent download: %@
%@: Finishing persistent download: %@
%@: Pruned orphaned persistent download [%lld, %@, %@]
%@: Pruned orphaned download: %@
%@: Cannot get match status for unentitled client: %@
%{public}@: Cannot disable automatic download kinds for unentitled client. client = %{public}@
%@: Deny unentitled client: %@
%@: Cannot install items for unentitled client: %@
%@: Cannot import item for unentitled client: %@
%@: Cannot load cloud service capabilities for unauthorized client
%@: Sending managed application request from client: %@ for itemID: %@
%@: App Store daemon responded to managed application request for itemID: %@ result: %d changeType: %ld
[%@] Managed application request requires an itemIdentifier
%@: Cannot kbsync for unentitled client: %@
%@: Cannot load URL bag for unentitled client
%@: Cannot lookup items for unentitled client: %@
%@: Cannot lookup for unentitled client: %@
%@: Cannot perform migration for unentitled client: %@
[%@]: Scheduling AppStore Migrator
[%@]: AppStore Migrator scheduled: %@
%@: Cannot show web view for unentitled client: %@
%@: Cannot read item for unentitled client: %@
%@: Cannot repair items for unentitled client: %@
[%@]: Repair request account DSID: %@ and bundleID %@
[%@]: Repair complete for bundleID: %@ result: %d changedBundleIdentifiers: [%@]
%@: Cannot load URL for unentitled client: %@
%@: Cannot demote unentitled client: %@
%@: Cannot load storefront identifier for unauthorized client
%@: Cannot fetch api token for unauthorized client
%{public}@: Silent enrollment XPC failed for no entitlements: %{public}@
NetworkRequestQueue: Silent enrollment failed to parse server response
%{public}@: Cannot authenticate for unentitled client: %{public}@
%@: Cannot authenticate for unentitled client: %@
%@: Cannot add wishlist items for unentitled client: %@
%@: Cannot change subscription for unentitled client: %@
%@: Loading %lu download manifests from URL
%@: Download manifest installation is restricted
%@: Redeeming %lu codes from URL
%@: Received unknown action: %@
ERROR: SubscriptionStatusOperation dequeued: %@ where currentSubscriptiontStatusOperation = %@
%@: Deleting all OTA tracks
%@: Scheduling %lu iPod library items
%@: importing item with existing library pid %lld
%@: skipping import of item with existing library pid %lld
%@: import %s
%@: post process item %d. pid=%lld
%@: existingPath=%@, existingFamilyAccoundID=%@
%@: Skipping existing track with location data: %lld: "%@"
%@: Skipping existing track, no location data: %lld
%@: Defering populating artwork for %lld
inserted track id %lld
%@: Setting location data for track: %lld
%@: Adding %lu scheduled iPod library items
%@: Deleting download from iPod library: %lld
%@: Removing download properties from iPod library: %lld
%{public}@: Skipping authentication after cancel retry was cancelled
%{public}@: Prompting user for restore cancel retry
%{public}@: User cancelled cancel retry
%{public}@: User cancelled auth during cancel retry
%{public}@: Attempting restore for %lu download(s)
%{public}@: Falling back to primary account to restore download: %lld
%{public}@: Updating an account during a restore operation. Saving %{public}@.
%{public}@: Unabled to save an account during a restore operation. Saving %{public}@. Error: %{public}@
%{public}@: Hard fail invalid restore items: [%{public}@]
%{public}@: Soft fail invalid restore items: [%{public}@]
%{public}@: Cancel invalid restore items: [%{public}@]
%{public}@: Failing restore items: [%{public}@] after account preflight failure: %{public}@
%{public}@: Attempting restore for %lu accounts
%{public}@: Attempting restore of podcast items: [%{public}@]
%{public}@: Restore transient failed for item: %{public}@
%{public}@: Restore failed for item: %{public}@
%{public}@: Attempting to resolve unknown Apple ID: %@
%{public}@: Resolved AppleID: %{public}@ to AppleID: %{public}@ and DSID: %{public}@
%{public}@: Could not resolve AppleID: %{public}@ error: %{public}@
%{public}@: Forwarding download: %lld itemID: %{public}@ to bookassetd
%{public}@: Cancelling forwarded book download: %lld itemID: %@
%{public}@: Restore transient failed item: %{public}@
%{public}@: Restore cancel retry failed for item: %{public}@
%{public}@: Attempt to establish primary account
%{public}@: Podcast not found on server for item: %{public}@
%{public}@: Restore hard failed item: %{public}@ error: %{public}@
%{public}@: Cannot restore without an AppleID for account: %{public}@
%{public}@: Preflight account: %{public}@
%{public}@: Soft failed item: %{public}@ error: %{public}@
%{public}@: Updating download %lld with restore metadata for item: [%llu, "%{public}@", "%{public}@"]
%{public}@: Create X509 cert chain data timed out for DSID: %@, purpose: %{public}@
%{public}@: Public key data copy timed out for DSID: %@
%{public}@: Sign data timed out for DSID: %@
%{public}@: Failed to find public key cert for DSID: %@, purpose: %{public}@, status: %{public}@
%{public}@: Failed to find intermediate cert for DSID: %@, purpose: %{public}@, status: %{public}@
%@: Failed to generate label for DSID: %@, purpose: %@
%{public}@: Failed to find X509 certs in Keychain, generating new X509 cert chain for DSID: %@, purpose: %{public}@
%{public}@: Failed to create new X509 certs for DSID: %@, purpose: %{public}@, error: %{public}@
%{public}@: Copy ACL for key failed to fetch key attributes
%{public}@: Copy ACL for key failed to find ACL associated with key
%{public}@: Copy ACL for context failed to copy private key with error: %{public}@
%{public}@: Copy ACL for context failed to copy private key
DaemonBiometricKeychain: Legacy data signing operation failed with no payload in XPC message for DSID: %@, PID: %{public}@
DaemonBiometricKeychain: Preparing legacy data signing operation over XPC for DSID: %@, PID: %{public}@
DaemonBiometricKeychain: Context-based data signing operation failed with no payload in XPC message for DSID: %@, PID: %{public}@
DaemonBiometricKeychain: Preparing context-based data signing operation over XPC for DSID: %@, PID: %{public}@
%{public}@: Rejecting message from unentitled client
%{public}@: [BIO] DisplayPaymentSheetOperation did complete
%{public}@: [BIO] Payment sheet authorization failed with error: %{public}@
%{public}@: [BIO] Payment sheet did cancel
%{public}@: [BIO] Payment sheet did sign challenge
%{public}@: [BIO] Payment sheet did fallback to password
%{public}@: [BIO] Found payment token
%{public}@: [BIO] Found FPAN ID
%{public}@: Presenting payment sheet
%{public}@: Query dictionary failed with no label
%@: Downloading asset: %lld for download: %lld
%@: Installing asset: %lld for download: %lld
%@: Failed to download and install asset: %lld for download: %lld
%@: Downloading asset: %lld with type: %@ for download: %lld
DownloadInstaller: File delete failed: %@
DownloadInstaller: File rename failed after too many tries: %@
DownloadInstaller: File move failed: %@
%{public}@: Removing installed file at: %{public}@.
%{public}@: Installed asset removal at %{public}@ failed with error: %{public}@.
%{public}@: Installed asset couldn't be found at %{public}@. Reporting successful removal.
%@: Rolling file back to %@
%@: File rollback failed: %@
DownloadInstaller: Could not serialize plist: %@
DownloadInstaller: Wrote plist to: %@
DownloadInstaller: Could not write plist: %@
%@: Restoring items: [%{public}@]for account: (%@ / %@)
%@: Can't restore using account: %@ with no account name
%@: Cannot restore: no URL
%@: Invalid URL: %@
%@: No body data for items: [%{public}@] error: %{public}@
%@: Received failure for items: [%{public}@] response error: %{public}@
%@: Received content restore metadata for %lu items for restore items: [%{public}@]
%@: Adding extra allowed kinds: %@
%@: Filtering disallowed kind: "%@" for item: %@
%@: Filtering disallowed match status: %@ for item: %@
%@: Restoring %ld items with kind %@ with chunk size %ld
%@: Making chunk request for %lu items with kind: %@
%@: Cancel restore items: [%{public}@] error: %{public}@
%@: Skipping terms and conditions failure
%@: Loading pass for account ID: %@
%@: Failed to load pass for account ID: %@, error: %@
%@: Loaded account ID: %@, pass: %@
%@: Firing timer for start: %@
%@: Cancel application restore: %@
%@: Could not cancel application restore for bundle ID: %@ error: %@
%@: Could not cancel application restore with bundle ID: %@ because it is a MID based restore to save for later.
[ApplicationWorkspace]: Registered user switch stakeholder.
[ApplicationWorkspace]: Added placeholder thumbnail operation for %@
[ApplicationWorkspace]: Skipping queing of placeholder thumbnail operation for %@ because we have one
[ApplicationWorkspace]: Resuming sync bubble.
[ApplicationWorkspace]: Checking if we are installing item with itemIdentifier: %@
[ApplicationWorkspace]: Persistent state installing item with itemIdentifier: %@ phase: %@
[ApplicationWorkspace]: Workspace is installing item with itemIdentifier: %@
[ApplicationWorkspace]: We are currently installing %@
[%@] Skipping install placeholder because appstored will
[%@] Replaying Incomplete Operations before [%@]
[ApplicationWorkspace]: Retrying incomplete due to download fail: [%@] [%@] [%@]
[ApplicationWorkspace]: Retrying incomplete installing: [%@] [%@] [%@]
[ApplicationWorkspace]: Retrying incomplete download canceled: [%@] [%@] [%@]
[ApplicationWorkspace]:Unexpected incomplete operation type: [%@] [%@] [%@]
[ApplicationWorkspace]: Cannot retry incomplete operation again: [%@] [%@] [%@]
[%@]: Seeing if we can resume quotas
[%@]: Still downloading item with itemIdentifier: %lld phase: %@
[%@]: Resuming quotas
[%@]: Not resuming quotas due to %i current downloads
[ApplicationWorkspace]: Setting placeholder thumbnail icon data for %@
[%@]: Suspending quotas
[%@]: Error suspending quotas: %@
[ApplicationWorkspace]: Waiting for pending placeholder installs of download: %lld
[ApplicationWorkspace]: About to switch with %lu current install(s)
[ApplicationWorkspace]: Successfully canceled downloadID: %lld bundleID: %@ phase: %@
[ApplicationWorkspace]: Successfully removed placeholder for : %lld bundleID: %@
[ApplicationWorkspace]: Failed to uninstall placeholder for downloadID: %lld bundleID: %@
[ApplicationWorkspace]: Failed to cancel downloadID: %lld phase: %@ bundleID: %@
[ApplicationWorkspace]: Waiting for downloadID: %lld to finish installing
[ApplicationWorkspace]: Timed out waiting for downloadID %lld to finish installing
[ApplicationWorkspace]: Application with downloadID: %lld to finish installing
[ApplicationWorkspace]: Switch complete with %ld install(s) successful
[ApplicationWorkspace]: Canceled placeholder thumbnail operation for %@ because we are installing
[%@] Decrementing pending installs for %lld but none found
No database migration function for %d => %d
Database migration failed for version: %d
%{public}s: Failed to archive download policy. Error = %{public}@
%@: Running install for download: %lld using operation: %@
%@: No installer for download: %lld
%@: Loading preorder queue
%@: Could not load preorder queue: %@
%@: Loaded %lu preorder items
%@: Checking preorder queue
%@: Could not check preorder queue: %@
%@: Found %@ preorders in the queue
%@: Adding new preorder: %lld
%@: Checking preorder queue for %lu accounts
%@: Deny preorder cancel for unentitled client: %@
%@: Cancel %ld preorders
%@: Checking queue for %@
%@: Deny get preorders from unentitled client: %@
%@: Ignore register from unentitled client: %@
%@: Registered client: %@ with kinds: %@
%@: Client disconnect: %@
%@: Deleting all preorders for account: %@
%@: Updating existing preorder: %@
%@: Pruning disappeared preorder: %@
[%{public}@]: Skipping receipt refresh for non installed bundleID: %{public}@.
[%{public}@]: Unexpected status code: %{public}@
[%{public}@]: No new receipt for %{public}@
[%{public}@]: Failed to re-write the receipt for app: [%{public}@] [%ld bytes]
[%{public}@]: Attempted VPP migration of server revoked app with bundleIdentifier: %{public}@ with result: %d
[%{public}@]: Rewrote a Revoked receipt for app: [%{public}@] [%{public}@] [%ld bytes]
[%{public}@]: Rewrote the receipt for app: [%{public}@] [%ld bytes]
[%{public}@]: Attempted VPP migration of revoked app with bundleIdentifier: %{public}@ with result: %d
[%@]: Rewrote a Revoked receipt for app: [%{public}@] [%{public}@] [%ld bytes]
[%{public}@]: Using family primary account: %{public}@ to restore bundleID: %{public}@ storeFront: %{public}@
[%{public}@]: Using app account: %{public}@ item with bundleID: %{public}@ due to different item storeFront: %{public}@ primary account storeFront: %{public}@
[%{public}@]: Error creating receipt request: %{public}@
[%{public}@]: Receipt refresh failed for: %{public}@, error: %{public}@
%@: Invalid response type: %@
%@: Cancel failed with failureType: %@
%@: Could not delete asset file: %@, URL: %@
%@: Invalid chunk index: %ld, for bytes written: %lld, bytes to hash: %ld
%@: Hash mismatch for chunk: (%lld:%lld), %@ should be %@
%@: Retry downloads from error alert
%@: Checking purchase history for %lu items
%@: Found %lu purchased items
%@: Checking %lu hashes with chunk size: %lld for file: %@
%@: Could not open asset to check hashes: %@
%@: Could not malloc data buffer to check hashes
%@: Read failed during hash check: %@
%@: Got md5: %@ when expecting md5: %@
[%@]: Could not exclude path from backup: %@
[%@]: Could not look up path to scratch container: %llu
%@: Fetching enabled kinds
%@: Could not fetch kinds: %@
%@: Found enabled kinds: %@
[%@] Refresh interval in the bag (%lf), setting syncInterval to %lf
[%@] Operation was created without an active account, sending error.
[%@] Returning response: %@, error: %@
[%@] Entity with persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
[%@] Entity with persistenID: %lld is imported and liked state updated from: %lld to: %lld for property: %@
[%@] Entity with persistenID: %lld is imported and liked state could not be updated from: %lld to: %lld for property: %@
[%@] Updating liked state for entity with persistenID: %lld of type %@ is not supported
[%@] processing %lu storeAdamId updates
[%@] Removing [Count:(%lu), items:(%@)] non media items from import list
[%@] processing tracks with pendingItemCount: %lu, currentBatchCount: %lu for property: %@
[%@] Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ will be imported to include subscription data source
[%@] Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ has a storeSagaID: %lld and will not be updated
[%@] Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld, liked_state: %lld for property: %@ is imported and has the correct liked state
[%@] Track with storeItemID: %lld will be imported
[%@] Updated liked state to: %lld for track with persistenID:%lld
[%@] Error updating liked state to: %lld for track with persistenID:%lld
[%@] processing albums with pendingItemCount: %lu, currentBatchCount: %lu
[%@] Album with albumStoreID: %lld, persistenID: %lld will be imported to include subscription data source
[%@] Album with storeItemId: %lld, albumPid: %lld, has storeSagaID: %lld and will not be updated
[%@] Album with storeItemId: %lld, albumPid: %lld, liked_state: %lld is imported and has the correct liked state
[%@] Album with storeItemID: %lld will be imported
[%@] Updated liked_state to:%lld for album with albumPid:%lld
[%@] Error updating liked_state to:%lld for album with albumPid:%lld
[%@] updated tracks:(%lu), updated albums:(%lu), new items to import[Count:(%lu), items:(%@)]
[%@] Error importing %lu tracks to the library. %@
[%@] Imported %lu mediaItems for %lu storeAdamIds
[%@] Not updating liked_state for track with persistentID: %lld, storeAdamID: %lld as it has a valid storeSagaID: %lld
[%@] StoreAdamIds (%@) are marked as non-importable and will not be retried
[%@] Error updating StoreAdamIds (%@) as non-importable
[%@] Finished updating media taste for tracks/albums in %f seconds
[%@] processing %lu playlist updates
[%@] processing playlists with pendingplayListCount: %lu, currentBatchCount: %lu
[%@] Container with PlaylistGlobalId: %@, persistentID: %lld, liked_state: %lld is imported and has the correct liked state
[%@] Ending loop with pendingplayListCount: %lu
[%@] Updated liked_state to:%lld for playlist with playlistID:%lld
[%@] Error updating liked_state to:%lld for playlist with playlistID:%lld
[%@] Playlist Import [Count:(%lu) - Ids:(%@)]
[%@] Error %@ adding tasty playlists
[%@] tasty playlist %@ was not imported
[%@] Finished updating media taste for global playlists in %f seconds
%{public}@: Failed to unarchive cached response. Error = %{public}@
%{public}@: Failed to archive cached response. Error = %{public}@
%@: Removed manifest itemID entry at index: %ld
%@: Removed manifest permalink entry at index: %ld
%@: Could not serialize data: %@
%@: Could not write data: %@
%@: Invalidating after external change: %@
%@: Could not read data: %@
%@: Could not unserialize data: %@
[Download]: Adding download(s): %{public}@
%@: Ignoring request to reprioritize download %@ for legacy client.
[Download]: Reprioritizing to high task: %lu for download: %@
%@: Not reprioritizing task for legacy client: %lu for download: %@
%@: Reprioritizing to default task: %lu to restart download: %@
[Download]: Reprioritized download: %@
%@: Cancel task: %lu to restart download: %@
%@: Stop preparation operation for download: %@
%@: Stop session: %lld for download: %@
%@: Stop task: %lu for download: %@
%@: Cancel operation: %@ for download: %@
[Download]: Fail download: %lld after session error: %{public}@
[Download]: Consumer failed for task: %lu for download: %lld with error: %@
%@: Did not receive partial content response for task: %lu
%@: Restart task: %lu after 408 response
%@: Truncate and restart task: %lu after 416 response
%@: Cancel download task: %lu for invalid HTTP status code: %ld
[Download] URLSession task complete. task=%@
[Download] Received task did finish with no task state: %lu, error: %@
[Download]: Restarting download: %lld after task cancel: %lu
[Download]: Download task did finish: %lu for download: %lld
[Download]: Restarting podcast download %lld with a wifi only policy after task cancelled because the file was too large to download over cellular: %lu
[Download]: Download task failed: %lu for download: %lld with error: %@
[Download]: task: %lu, for download: %lld, after local cache failure
[Download]: Falling back to file download: %lld, after error: %@
[Download]: Cancel local-cache download: %lld, for error: %@
[Download]: Retry scheduled for task: %lu, download: %lld, error: %@
[Download]: Reset data consumer for task: %lu, with resumption offset: %llu
%@: Providing resumption offset: %llu for task: %lu
%@: Removed resumption offset for task: %lu
[Download] Cancelling task: %lu for download: %lld due to error: %@
%@: Set download progress: %lld [%.2f, %.2f sec]
[Download] Fail download: %lld after disavow from required handler
[Download]: Ignoring finish result after download removed: %lld
[Download]: Fail download: %lld after error: %{public}@
[Download]: Cancel failed download: %lld after error: %{public}@
[Download]: Saved safe harbor data for download: %lld with bundleIdentifier: %@
[Download]: Cancel failed download due to verfication error: %lld after error: %@
[Download]: Download operation complete for download: %lld
%@: Starting handler: %lld for download: %lld
%@: Set download token: %llu for asset: %lld of download: %lld
%@: Skipping changing asset: %lld to downloading phase because download: %lld was cancelled
[Download]: Finshing prepare with 0 download ID
[Download]: Created Scratch directory: %@ for download: %lld bundleIdentifier: %@
[Download]: Created Scratch directory: %@ for download: %lld
[Download]: About to set download phase and apply resource loader if is HLS: %d
[Download]: Updated per device download: %lld restore state to: %@
[Download]: Processing download after "finish only" response: %lld
[Download]: Cancel download after failed prepare: %lld
[Download]: Queue download: %lld to discover assets later.
[Download]: Fail download after failed prepare: %lld
[Download]: Starting handler: %lld for download: %lld
[Download]: Starting task: %lu with priority: %ld for download: %lld in session: %{public}@
[Download]: download task creation complete task=%@
[Download]: Fail download %lld after recovery attempt
[Download]: Cancel download %lld after recovery attempt
[Download]: Ignoring authentication challenge for download %lld
[Download]: Supressing authentication challenge for download %lld
[Download]: Download Failed for download: %lld reason: %@
%@: Reconnect with nsurlsessiond
[Download]: Setting phase with download ID of 0
[Download]: waiting for task completion
[Download]: download task complete!
%@: Register observer: %@ / %@
%@: Unregister observer: %@ / %@
%@: Scheduling poll in %.2f seconds
%@: Posting event: %@
%@: Cannot register unentitled event monitor: %@
%@: Registered event monitor: %@
%{public}@: Got 403 status code while requesting user token for bundle ID: %{public}@. Just reset TCC access with status: %{public}@.
%{public}@: Adding payment: [%ld, %@] for client: %@
[%{public}@]: No DB client object ID when adding payment
%{public}@: Not allowed to make payment: %@
%{public}@: Allowing payment request without entitlement on internal device from unentitled client: %@
%{public}@: Payment has request data from unentitled client: %@
%{public}@: Cancel %lu downloads for client: %@
%{public}@: Adding client to DB: %d / %@ / %@
%@: Pause %lu downloads for client: %@
%{public}@: Ignoring repeat restore request: %@
%{public}@: Not allowed to restore transactions: %@
%{public}@: Restoring completed transactions for client: %@
%{public}@: Resume %lu downloads for client: %@
%{public}@: Starting %lu downloads for client: %@
%{public}@: Adding %lu new downloads for client: %@
%{public}@: Requesting privacy acknowledgement for payment: %@
%{public}@: Buying payment: %@
%{public}@: Finishing payment: %@
[%{public}@]: Sending purchase intents for client: %{public}@, successfully looked up products: %{public}@
[%{public}@]: Sending purchase intents for client: %{public}@, product lookup failed with error: %{public}@
%{public}@: Finishing unknown payment: %@
%{public}@: Finishing for state: %ld, payment: %@
%{public}@: Finishing purchased payment: %@
%{public}@: Received finish for payment that is finishing or finished: %@
%{public}@: Canceling %lu downloads
%{public}@: Buy failed with error: %{public}@ for payment: %@
%{public}@: Buy finished for payment: %@
%{public}@: Deleting payment after finish: %@
%{public}@: Flagging payment as transient failed: %@
%{public}@: Refresh failed with error: %@: %{public}@
%{public}@: Refresh finished: %@
%{public}@: Restore completed transactions finished for client: %@
%{public}@: Restore completed transactions failed for client: %@ with error: %{public}@
%{public}@: Received restore batch response for client: %@
%{public}@: Client checked in mid-refresh: %@
%{public}@: Tried to refresh from server, but either had no payments or no usable DSIDs
%{public}@: Refreshing from server (%ld; %@; %@)
%{public}@: Privacy acknowledgement completed for payment: %@
%{public}@: Privacy acknowledgement failed with error: %{public}@ for payment: %@
%@: Performing location lookup
%@: Performing platform lookup
%@: Authenticating to personalize response
%@: Authentication failed: %@
%@: Authenticated for account: %@
%@: Performing personalization lookup
%@: We have a normal download: %lld
%@: Writing EPR data for download: %lld to path: %@
%@: Error EPR data for download: %lld to path: %@ error: %@
Using system group container path is %s
Error getting system group container: %llu
Using system group container path is: %s
%@: Updating purchase manifest at shared path: %@
%@: Updating shared manifest at path: %@
%@: Updating purchase manifest: %@
%@: Moved file URL: %@ to downloads directory: %@
%@: Could not install non-existant file: %@
%@: Saving Book to : %@
%@: Installed file: %@
%@: Failing install after unzip failure for file: %@, error: %@
%@: Book already at destination: %@
%@: Moving file: %@ to path: %@
%{public}@: Privacy prompt operation completed with result: %{public}@, error: %{public}@
%{public}@: Remote handle did deactivate
%{public}@: Remote handle did invalidate with error: %{public}@
%{public}@: Error fetching bag
%@: Running claim with body: %@
%@: Validation failure. sourceURL required for bundleIdentifier: %@
%@: Download was incomplete for bundlerIdenfier: %@ path: %@
%@: Invalid scratch directory for bundlerIdenfier: %@ path: %@
%@: Failed to extract Info.plist for bundleIdentifier: %@
%@: Invalid archive for bundlerIdenfier: %@ path: %@
%@: Invalid path for bundlerIdenfier: %@ path: %@
%@: Scratch directory for %@ result: %d
%@: appName: %@
%@: App payloadDirectory: %@
%@: Info.plist path: %@
%@: Warning: bundleVersion: %@ does not match expected bundleVersion: %@
%@: Failed bundleIdentifier: %@ does not match expected bundleIdentifier: %@
%@: Unable to load application meta data to verify bundleIdentifier: %@
%@: Unable to locate application meta data to verify bundleIdentifier: %@
Failed to open %s : %s
Failed to read %lu bytes (got %ld) from start of %s : %s
File starts with 0x%02hhx%02hhx%02hhx%02hhx; expected 0x%02hhx%02hhx%02hhx%02hhx
Got unknown error from getxattr when checking for %s on %s : %s
%@: Preparing to rescue application with bundleID: %@
%@: Attempting rescue restore for bundleID: %@
%@: Rescue restore attempt for bundleID: %@ failed due to error: %@
%@: iTunes sync in progress for bundleID: %@
%@: Restore in progress for bundleID: %@
%@: Application does not need rescue, bundleID: %@ is already installed!
%@: Cannot find application with bundleID: %@
%@: Activating alert: %@
%@: Removing snapshots at path: %@
%@: Invalid value type for badge (%@, %@)
%@: Could not launch: %@: %@
%@: No pid for display ID: %@
%@: Taking process assertion: %@ for: %.2f seconds with reason: %@
%@: Could not take process assertion: %@
%@: Releasing power assertion: %@
[%@]: SSClient requested to set badge of %@ to '%@'
%@: Plugin connection disappeared: %@
%@: Registered plugin connection: %@
%@: Requesting plugin connection
%@: Plugin timeout with connection: %@
%@: Unable to rescue VPP Applicaton with bundleID: %@
%@: Reset %ld downloads after prioritize
[Download]: User triggered prioritization but placeholder has no corresponding download.
%@: Canceling all %lu downloads for %@
%@: Finishing %lu downloads for client: %@
%{public}@: Inserting %lu downloads for %{public}@
%{public}@: Download insert failed with error code: %ld client: %{public}@
%@: Updated download with final phase: %@ downloadID: %@
%@: Updated download with phase: %@ downloadID: %@
%@: No endpoint for client manager: %@
%@: No client identifier for client manager
%@: Could not create connection for endpoint: %@
%@: Registered client: %@, %@, %@
%@: Setting handler: %lld for download: %lld client: %@
%@: Failed to apply download handler: %@
%@: Replacing %lu downloads with %zu downloads for client: %@
%@: Cancel %lu downloads for client: %@
%@: Retry %lu downloads for client: %@
%@: No endpoint for asset handler: %lld
%@: Could not create connection for endpoint: %lld
%@: Finish session %lld with type %lld
%{public}@: Failed to unarchive credential. Error = %{public}@
%{public}@: Failed to archive auth challenge. Error = %{public}@
%@: Changing handler properties: %lld, %@
%@: Canceling download %@ for client: %@
%@: Cancel requested for a non-cancellable download %@ for client: %@
%@: Pausing %ld downloads for %@, forced: %d
[%@]: Ignoring pausing of software downloadID: %@
%@: Can't pause download: %lld
%@: Can't pause phase: %@
[%@]: Unable to prioritize software downloadID: %@
[Download]: Attempting rescue restore for bundle ID: %@
%@: Rescue for %@, success: %d, error: %@
%@: Ignoring rescue for %@, operation already queued.
%@: Resuming %lld downloads for %@
[%@]: Unable to resume software downloadID: %@
%@: Restarting %lld downloads for %@
[%@]: Unable to restart software downloadID: %@
%@: Retrying all failed restore downloads
%@: Starting... (Built: %s %s)
%@: Starting XPC server
%@: Started
%{public}@: Failed to get the change-language URL from the bag. error = %{public}@
%{public}@: Failed to get the trustedDomains from the bag. error = %{public}@
%@: battery saver mode started
%@: battery saver mode ended
Removing default png snapshots after storefront change
[%@]: Received low memory warning
Daemon: Setup finished
Daemon: Not performing silent auth because setup has not finished
Daemon: Attempting to perform silent auth.
Daemon: There's no active iTunes account. Trying to find an inactive iTunes account matching the active iCloud account.
Daemon: We don't have an iTunes account to perform the silent auth with.
Daemon: Failed to fetch IDMS account with error: %{public}@
Daemon: Setting PET to nil
Daemon: Skip Setting PET to nil
Daemon: Device offers auth succeeded with result: %{public}@
Daemon: Device offers auth failed with error: %{public}@
[ApplicationWorkspace]: Restoring placeholder for %@
[ApplicationWorkspace]: Updating placeholder for %@
[ApplicationWorkspace]: Placeholder %@ for %@ success: %d
[ApplicationWorkspace]: Placeholder not installed for %@ because application not installed
[%{public}@] No Purchase Intent Database migration function for %li => %li
[%{public}@] Failed updating Purchase Intent Database to version %li
[%@]: Adding download with bundleID: %@
[%@]: Skipping store download %@ due to lack of bundleID
[%@]: Skipped over unexpected download kind %@
%{public}@: Failed to archive policy. Error = %{public}@
%@: Preparing download: %lld
%@: Flagging download %lld asset: %lld as not downloaded
%@: Download %lld asset: %lld is already downloaded
%@: Ignoring software download: %lld
%@: Skip prepare for finished download: %lld
%@: Cancel download that exists in library: %lld
%@: Cancel invalid automatic download: %lld
%@: Flagging as "finish only" for hard-failed restore download: %lld
%@: Keeping no asset download safe harbor data with finish only for download: %lld bundleID: %@
%@: Updated download: %lld bundleID: %@ to only restore data
%@: Skip prepare for download with no media asset: %lld
%@: Flagging download %lld as "finish only", already have asset: %lld
%@: Skipping prepare for file URL download: %lld
%@: Keeping safe harbor data with finish only for atc download: %lld bundleID: %@
[%{public}@] Skipping AV asset download for podcast restore download: %lld asset: %lld
%@: Asking data consumer to override progress value
%@: Fail download without enough disk space: %lld
%@: Set infersdiscretionary for podcast download: %lld
[Download]: No download policy was set for video download.  Looking up whether cellular is allowed from TV app prefs
[Download]: Cellular data status: %d for asset: %lld of size: %lld, %lld
%@: Using media asset: %lld, for download: %lld, is local cache: %d, URL: %@
%@: No local cache URL for asset: %lld, error: %@
%@: Replacing URL for asset: %lld, with local cache URL: %@
%@: Running HEAD operation to get size for asset: %lld
%@: Found size: %lld for asset: %lld
%@: Failed to find size for asset: %lld error: %@
[Download]: Podcast Request allows cellular for %lld
[Download]: Setting podcast request cellular size limit to %lld for %lld
%@: Setting timeout interval to %d for podcast restore: %lld
%@: Determined asset size to be %llu bytes
%@: Discovered %llu bytes already transfered
%@: Accounted for %llu bytes of initial ODR
%@: Not enough disk space for %lld/%lld, only %llu is available: %@
[Download]: Looking for existing task: %lu for download: %lld in session: %{public}@
[Download]: Request for existing tasks timed out when looking for existing task: %lu for download: %lld in session: %{public}@
[Download]: We have a task to evaluate: %lu
[Download]: Task %lu is an aggregate download: %d
[Download]: Reusing existing task: %lu for download: %lld in session: %{public}@
[Download]: Ignoring existing task: %lu for download: %lld in session: %{public}@
[%@ _scheduleUpdateAssetsOperationWithManifestURL] manifestURL: %@, bundledManifestURL:%@, clientIdentifier: %@, userAgent: %@, scheduledInBackground: %@
[%@ _scheduleUpdateAssetsOperationWithManifestURL] network type is none, so deferring
[%@ _scheduleUpdateAssetsOperationWithManifestURL] defer background task until we have wifi, so deferring
[%@ _scheduleUpdateAssetsOperationWithManifestURL] error performing asset garbage collection for client: %@ %@
[%@] Bag did load: [kUpdatableAssetManifestBagKey: %@]
[%@ _networkTypeChangedNotification]
[%@]: Cannot register unentitled event monitor: %@
[%@]:  Responding to XPC -- NOOP SSXPCMessageRefreshAllAppReceipts
[%@]: Responding to XPC -- NOOP SKXPCMessageRefreshReceipt [%@]
%{public}@: Operation failed with no dialog event to report
[%@] Insert Events received through XPC: %d requested by [%@]
%{public}@: Failed to find metrics dialog event
[%@] Ignore report event for request during backoff for client: %@
[%@] Report Events requested by [%@]
[%@] ignoring request to report events, since there already are %@ operations queued
%{public}@: Maximum event count reached. Flushing %ld unreported events
%{public}@: Event count: %ld
[%@] Giving up after %ld retries
[%@] Scheduling backoff retry in %ld minutes
%@: Redirecting claim to URL: %@
%@: Polling status for activity: %@
%{public}@: Explicit restriction preference setting changed to `disabled` for this storefront. Disallow all explicit content and hide the preference.
%{public}@: Explicit restriction preference setting changed to `enabled` for this storefront. Configure default values and show the preference.
%{public}@: No explicit restriction in place. Setting to [bagExplicitOff: %d]
%{public}@: User hasn't overriden explicit restriction, but bag default has changed. Setting new restriction to [bagExplicitOff: %d]
%{public}@: No need to update explicit restrictions. [isUserOverriden: %d, bagValueChangedSinceLastChangeInducingExplicitOff: %d]
%{public}@: Presenting remote SKUI with URL: %{public}@
%{public}@: Error presenting remote SKUI view controller. Error: %{public}@
%{public}@: Remote SKUI view controller presented
%{public}@: Remote handle did activate
%@: Warning: Reverting to default behavior due to the shared documentsPath: %@ not matching the shared container path: %@
%@: Using document path: %@ with container relative path: %@
%@: Unzip document for download: %lld, at path: %@
%@: Error: file exists at document path: %@
%@: Created document path: %@ error: %@
%@: Moved staged download: %lld from source: %@ to document path: %@ result: %d
%@: Installed document for download: %lld at path: %@
[%@] Staging path set to: %@
[%@] Error: Unable to get staging path for relative path: %@
%{public}@: Failed to unarchive download policy. Error = %{public}@
%@: Adding download policy %@ with size limit %lld
%@: Initialized with %lu download policies
%@: Adding download handler: %@, %@
%@: Begin session with ID: %lld
%@: Client handler returned NO for open session: %lld
%@: Cancel authentication session with ID: %lld
%@: Cancel session with ID: %lld
%@: Continue authentication session with ID: %lld
%@: Disavow session with ID: %lld error: %@
%@: Disconnect session with ID: %lld
%@: Fail session with ID: %lld error: %@
%@: Finish session with ID: %lld
%@: Pause session with ID: %lld
%@: Perform default authentication for session with ID: %lld
%@: Reject space for authentication session with ID: %lld
%@: Release session with ID: %lld
%@: Reset %ld disavowed properties for client: %@
%@: Retry session with ID: %lld
%@: Removing download handler for client: %@
%@: Using download handler %lld for client: %@
%@: Use credential: %@ for session with ID: %lld
%@: Disconnecting %lu sessions for client: %@ after 20 seconds
%@: Timing out sessions for client: %@
%@: Send session message: %lld to client: %@
%@: Running download phase: %@ for download: %lld
[ApplicationWorkspace] Install complete for download: %lld result: %@
[ApplicationWorkspace] Installing download: %lld with step(s): %@
[%@] Running report
[%@] Not running report
%@: No session for properties: %@
%@: Launched download handler: %@
[%@]: Failed Placeholder for %@
%{public}@: Clearing biometric account identifier
%{public}@: AMS Identity map lookup failed with error: %{public}@
%{public}@: Failed to query public key for purchase with error: %{public}@
%{public}@: Failed to query public key for extended actions with error: %{public}@
%{public}@: Resetting biometrics for DSID: %@
DaemonBiometricStore: [%{public}@] tokenUpdateDidFinish
DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Current Time: %{public}@
DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Found value: %{public}@
DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Should cancel update
DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: No value found
DaemonBiometricStore: [%{public}@] tokenUpdateShouldStart: Writing value: %{public}@
DaemonBiometricStore: tokenUpdateState: Current time: %{public}@
DaemonBiometricStore: tokenUpdateState: Found value: %{public}@
DaemonBiometricStore: tokenUpdateState: Should cancel update
DaemonBiometricStore: tokenUpdateState: No value found
%{public}@: Failed to find touchID continue token
%{public}@: Failed to find DSID
%{public}@: Looking up biometric HTTP headers for token: %{public}@, DSID: %@
%{public}@: Looking up biometric authentication context for token: %{public}@
%{public}@: Key count failed with no account identifier
%{public}@: Retrieved biometric state: %{public}@
%{public}@: Falling back to unknown state
%{public}@: Disable biometrics for client: %{public}@
%{public}@: Enable biometrics for client: %{public}@
%{public}@: Reset keychain tokens failed while disabling biometric state for DSID: %@, error: %{public}@
%{public}@: Resetting biometrics for account %@, client = %{public}@
%@: Waiting up to %.2f seconds for push: %@
%@: Waiting for %.2f seconds
%@: Moved download: %lld to path: %@
[%{public}@]: Did not find Info.plist for app: %@
[%{public}@]: Found non-dictionary SKAdNetworkItem in Info.plist for app: %@
[%{public}@]: App: %@ did not have ad network: %@ in Info.plist
%@: Attemping claim before in-app activity: %@
%@: Canceling unrecoverable download after 403 response: %lld
%@: Skipping recovery after too many attempts: %lld
%@: Refreshing download: %lld using operation: %@
%@: Reset download after 403 recovery: %lld
%@: Recovery failed for download: %lld with error: %@
%@: Could not encode message: %@
%@: No URL to create social post
%@: Sending post with identifier: %lld
%@: Post failed with error: %@
%@: Changing %lu keys for %@ at %@
%@: Could not serialize property list: %@
%@: Could not write property list: %@
%@: Restoring %lu podcasts
%@: Failing podcast restore, no bag key: %@
[%{public}@]: One or more initializer arguments was nil: %@
%@: Enabling all download kinds
%@: Skipping icon download for placeholder with icons: %@
%@: Missing URL for software download: %@
%@: Back with icon data for: %@
%{public}@: [%{public}@] The server told us to redeem the code again using the iCloud account. iCloudAccount = %{public}@
%{public}@: [%{public}@] The user cancelled the redeem. error = %{public}@
%{public}@: [%{public}@] Failed to authenticate the iCloud account. The redeem will fail. error = %{public}@
%{public}@: [%{public}@] Redeeming %lu codes headless
%{public}@: [%{public}@] Canceled redeem batch
%{public}@: [%{public}@] Redeemed %lu codes with %lu failures
%{public}@: [%{public}@] Fetch redeem code metadata failed with error: %{public}@
%{public}@: [%{public}@] Redeeming %lu codes
%{public}@: [%{public}@] Redeem operation failed for code: %@, error: %{public}@
%{public}@: Fetching metadata for %{public}lu codes
%{public}@: Failed to fetch metadata for redeem code: %@, error: %{public}@
%{public}@: Canceled redeem metadata batch
%{public}@: No iTunes identifier
%{public}@: No installed external version
%{public}@: Found metadata for %{public}lu codes
%{public}@: Failed to fetch bag.
%{public}@: Sending redeem succeeded notification
%{public}@: Failed to archive response. Error = %{public}@
%@: Reloading accounts after KVS change
%{public}@: Forcing sandbox for %{public}@ until %{public}@
[%@]: Garbage collecting %lu persistent managers
[%@]: Garbage collecting software downloads
[%@]: Removing expired software download: %lld
[%@]: Garbage collecting download scratch directory: %@
[%@]: Queuing directory: %lld phase: %@
[%@]: Queuing stale directory: %lld phase: %@ last modification: %f
[%@]: Keeping directory: %lld phase: %@ last modification: %f
[%@]: Keeping directory: %lld phase: %@
[%@]: Garbage collecting %lu scratch directories
[%@]: Removed: %@
%@ no events to report
%@ could not load URL bag
%@ could not get metrics dict from url bag
%@ failed to insert events: %@
%@ failed to flush events: %@
%@: Opening session: %@ for client: %@
%@: Client disconnected: %@ with %lu sessions
%@: Cannot connect unentitled error handler
%@: Ignoring error handler re-connect
%@: Invalid enpoint for error handler
%@: Invalid failure types for error handler
%@: Conflicted failure types for error handler
%@: Started client: %@ with failure types: %@
%@: Resolving session: %lld for client: %@
%@: Redirect from error handler: %@
%@: Error handler resolved with type: %ld
%@: Refreshing download: %lld / %@
%@: Unexpected download count: %lu when refreshing download: %lld
%@: Refreshed download: %lld, changed download key from: "%@" to: "%@"
%@: Could not get download: %lld, error: %@
%@: Refreshed download: %lld
%@: No transaction ID for download: %lld
%@: No identity for download: %lld
%@: Could not refresh download: %lld, error: %@
%@: Unexpected count: %lu when refreshing download: %lld
%@: Could not refresh download: %lld, incorrect count: %lu
%@: Reloaded download: %lld, with download key: %@
%@: Reloading iTunes Match download: %lld / %@
[%{public}@]: [%{public}@] Remote authentication requested for unsupported client, forcing local authentication
[%{public}@]: [%{public}@] Sending remote authentication request
[%{public}@]: [%{public}@] Connection interrupted, forcing local authentication
[%{public}@]: [%{public}@] Invalid authentication response, forcing local authentication
[%{public}@]: [%{public}@] Received remote authentication response
[%{public}@]: [%{public}@] No output connection to client, forcing local authentication
[%{public}@] Will send purchase succeeded notification
[%{public}@] Purchase failed, not sending purchase succeeded notification
%@: Canceling purchases for %ld downloads
%@: Cancel %zu purchases for client: %@
%@: Connected purchase manager: %@
%@: Finishing: %zu purchases for client: %@
%@: Inserting %lu purchases for client: %@
%@: Reset %ld existing downloads for purchases
%@: Skipping %ld existing purchases from client: %@
%@: Canceled inflight purchase: %@
[%@]: Adding %lu purchases from client: %@
%@: Requesting %llu bytes for %lu purchases
%@: Space is available for all purchases
%@: Only %llu bytes available: %@
%@: Failing purchases due to lack of space: %@
%@: Proceeding with purchases that fit in remaining space: %@
%@: Checking queue(s) after purchase trigger-download with kind: %@
Found existing book download, sending to bookassetd to sort it out
%@: Canceling purchase batch after authentication failure
%@: Canceling purchase batch after purchase failure
%@: Not queuing downloads for purchase because placeholder download was canceled
%@: Pruned %ld orphaned purchases
[%@] No DPInfo provided
%@: Decrypt failed
%@: Authenticating for purchase batch
%@: Capabilities mismatch for purchase: %@
[%{public}@]: Install attribution response error: %@
[%{public}@]: Account lookup failed for invalid proxy: %{public}@
[%{public}@]: Account lookup failed when composing bundle URL for proxy: %{public}@
%@: Using local buy parameters for purchase: %@
%{public}@: Adding an account for purchases. Saving %{public}@.
%{public}@: Failed to find account name for %{public}@ error: %{public}@
[%{public}@]: Failed to load URL bag to check Install Attribution params age
[%{public}@]: Timed out waiting to get install attribution params from DB
Found existing download for purchase but no matching purchase, canceling download.
%@: Redirecting software download to App Store daemon: %@
%@: Skipping queue update to in flight download: %llu with downloadPhase: %@
%@: Resetting existing download: %llu phase: %@ with store queue download
%@: Restart existing download: %llu phase: %@ with store queue download with result: %d
%@: Insert new store queue download: %@
%@: Inserted new store queue download with downloadID: %llu
%@: Pruning incompatible app download: %@
%@: Pruning %lu removed downloads
%@: Using custom policy for purchase: %@
%@: Using custom network constraints for purchase: %@
%@: Replacing purchase %lld with %lu downloads, filtering asset types: %@
%@: Removing existing for software purchase: %lld
%@: Updating existing download: %lld
%@: Updating placeholder download: %lld
%@: Adding new download from purchase
%@: Remove placeholder for purchase: %lld
%{public}@:  - LocalAuth ACL:     %{public}@
%{public}@:  - LocalAuth Context: %{public}@
%{public}@:  - LocalAuth Options: %{public}@
%{public}@:  - AuthKit Context:   %{public}@
%{public}@:  - Account ID:        %@
%{public}@: Display payment sheet operation did complete
%{public}@: Display payment sheet operation timed out.
%{public}@: Display payment sheet operation failed with error: %{public}@
%{public}@: Failed to load display payment sheet operation
%@: Could not install media download: %lld, error: %@
%@: Missing library ID for download: %lld
%@: Updated rental plist for "%@"
[%{public}@]: Checking the automatic download queue
[%{public}@]: Download queue request completed with result: %d error: %@
[%{public}@]: Making claim for bundleIDs: %{public}@
[%{public}@]: Claim completed with result: %d claimedBundleIdentifiers: [%{public}@] error: %@
[%{public}@]: Hiding pending updates badge
[%{public}@]: Sending managed application request for itemID: %@ externalVersionID: %@
[%{public}@]: Sending post bulletin request with title: %@
[%{public}@]: Checking for updates
[%{public}@]: Sending application repair request for bundleID: %@ accountDSID: %@ repairType: %ld
[%{public}@]: Sending request to restore %lu demoted applications: %@
[%{public}@]: Error requesting restore for demoted applications: %@
[%{public}@]: Sending %lu cluster mapping(s)
[%{public}@]: Error syncing cluster mapping(s) error: %{public}@
[%{public}@]: Sent %lu cluster mapping(s) with result: %d
[%{public}@]: Sending %lu downloads from %{public}@
[%{public}@]: Sending News subscription entitlements
[%{public}@]: Sending Activity subscription entitlements
[%{public}@]: Sending AppStore subscription entitlements
[%{public}@]: Checking claims for accountID: %@ claimStyle: %ld
[%{public}@]: appstored replied to claim request with result: %d claimedBundleIdentifiers: [%{public}@] error: %@
[%{public}@]: Completed sending downloads for %{public}@ with job(s): %@ error: %@
%{public}@: Failed to load URL bag
%{public}@: Tried to insert IA params with campaign ID %{public}li, must be between 0 and %{public}li
[%{public}@]: Removing IA params before date: %{public}@
[%@]: setting criteria for Install Attribution clean params task
[%@]: running Install Attribution clean params task
[%{public}@]: Failed to load URL bag in Install Attribution clean params task
[%@] Could not set state of the Install Attribution clean params task activity to XPC_ACTIVITY_STATE_DONE.
[%@] Unknown state: %d when processing Install Attribution clean params task
[%{public}@]: Failed to load URL bag when sending Install Attribution pingbacks
[%{public}@]: Install attribution pingback serialization for app: %@ failed with error: %{public}@
[%{public}@]: Install attribution pingback for app: %@ failed with error: %{public}@
[%@]: setting criteria for Install Attribution send pending pingbacks task
[%@]: running Install Attribution send pending pingbacks task
[%@] Could not set state of the Install Attribution send pending pingbacks task activity to XPC_ACTIVITY_STATE_DONE.
[%@]: Unknown state: %d when processing Install Attribution send pending pingbacks task
%@: Request %@ exceeded poll for now: %f timeout time: %f
%@: Requesting termination of sync bubble for download: %lld bundleID: %@
%@: Continuing after bubble termination complete for download: %lld bundleID: %@
%@: Application termination denied: %lld / %@
%@: Could not find app for automatic update: %lld / %@
%@: Missing sinf data for store download: %lld / %@
%@: Installing placeholder for auto-update: %@
%@: Installing download: %lld / %@
%@: Loading missing receipt for app: %@
%@: Adding bundle ID to KVS: %@
%@: Fail permanently for blacklisted app: %@
[ApplicationWorkspace]: Fail permanently for bundle version mismatch: %lld
InstallSoftwareDownloadOperation: Retry download after termination allowed: %lld / %@
[%@]: Skipping most of server registration for server %@ since we are using appstored software updates
[%@]: Update check complete with result: %d error: %@
[%@] No receipt data for: %@
[%@] No LSApplicationProxy for: %@
[%@] No LSPlugInKitProxy for: %@
[%@] Could not create receipt URL: %@
[%@] Wrote receipt to path: %@
[%@] Submitting events to URL: %@
[%@]: Received backoff response for URL (with DSID): %@
[%@]: Received backoff response for URL (without DSID): %@
[%@] Exception Caught at outer-loop: %@
[%@] Deleted Reported Events. [Success: %d]
[%@] Deleted Out-Of-Date Events. [Max Age: %lld] [Success: %d]
[%@]: Output stream exception: %@
[%@]: Metrics post failed. Digest is nil
[%@] Reporting analytics events to %@
[%@] Success reporting analytics events. [Marked As Reported: %d]
[%@] Error Reporting Events: %@
[%@] Exception Caught: %@
%{public}@: Failed to archive track items. Error = %{public}@
%{public}@: Failed to unarchived items. Error = %{public}@
store import complete. success=%d, err=%@
%@: Checking out rental keys for download: %lld
%@: Decrypting asset for download: %lld at path: %@
%@: Unprotect asset for download: %lld at path: %@
%@: Download unprotect failed: %lld, deleted file: %@
%{public}@: Unhandled notification
%{public}@: Settings did change
%{public}@: Authorization granted
%{public}@: Failed to aquire authorization. Error: %{public}@
v24@0:8@16
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v24@0:8@"DownloadHandlerManager"16
v32@0:8@"DownloadHandlerManager"16@"NSArray"24
v16@0:8
v32@0:8Q16@?24
v24@0:8@?16
@24@0:8@?16
@24@0:8^{dispatch_source_type_s=}16
@32@0:8@16@?24
@"SSSQLiteDatabase"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_source>"
@"ExternalDownloadState"
@"DownloadPipeline"
@"DownloadPolicyManager"
I16@0:8
d16@0:8
@24@0:8@16
B32@0:8@16@24
B24@0:8q16
B32@0:8q16@24
B36@0:8q16@24B32
@40@0:8@16d24d32
@32@0:8@16q24
B32@0:8q16q24
B40@0:8q16q24^@32
v28@0:8@16B24
B28@0:8@16B24
v40@0:8@16@24q32
@32@0:8@16@24
B40@0:8q16q24q32
d32@0:8d16q24
B36@0:8@16r^@24B32
v32@0:8@16q24
@24@0:8^{_NSZone=}16
v24@0:8q16
q16@0:8
@"NSMutableArray"
@"NSMutableSet"
@"NSDictionary"
@"NSMutableOrderedSet"
@"NSString"
v20@0:8B16
@?16@0:8
@24@0:8^@16
@"SSAuthenticationContext"
v40@0:8@16@24@?32
@24@0:8q16
@32@0:8@16^@24
@"NSObject<OS_dispatch_queue>"
@"NSData"
@"SSFamilyCircle"
@40@0:8@16@24@32
@"NSError"
@"NSArray"
@"NSNumber"
@"NSURL"
@"SKPaymentTransaction"
f16@0:8
v20@0:8f16
v24@0:8d16
v32@0:8@"SpringBoardAlertProxy"16@"NSObject<OS_xpc_object>"24
v24@0:8@"SpringBoardAlertProxy"16
@"SSAccount"
@"SpringBoardAlertProxy"
@"NSObject<OS_dispatch_semaphore>"
@"SSTermsAndConditions"
v32@0:8@"ISOperation"16@"NSError"24
v32@0:8@"ISOperation"16@"SSOperationProgress"24
v24@0:8@"ISOperation"16
B40@0:8@16@24^@32
q32@0:8@16@24
v32@0:8@"ISURLOperation"16@"NSNumber"24
v32@0:8@"ISURLOperation"16@"NSURLResponse"24
v32@0:8@"ISURLOperation"16@24
@"NSInputStream"32@0:8@"ISURLOperation"16@"NSURLRequest"24
B40@0:8@"ISURLOperation"16@"NSMutableData"24^@32
v32@0:8@"ISURLOperation"16@"NSMutableURLRequest"24
@"NSString"32@0:8@"ISURLOperation"16@"NSString"24
q32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCredential"32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCache"16@0:8
@"NSNumber"16@0:8
v32@0:8@"ISStoreURLOperation"16@"NSNumber"24
v40@0:8@"ISStoreURLOperation"16@"SSAuthenticationContext"24@?<v@?@"SSAuthenticateResponse"@"NSError">32
B32@0:8@"ISStoreURLOperation"16@"NSString"24
B32@0:8@16^@24
@"SSURLRequestProperties"
v72@0:8@16@24@32@40@48B56B60@64
v72@0:8@16@"NSString"24@"NSString"32@"NSData"40@"NSString"48B56B60@"NSDictionary"64
v32@0:8@16Q24
@"SSBiometricAuthenticationContext"
@"DeviceScorer"
@"SSVFairPlaySubscriptionController"
@"ISURLRequestPerformance"
@"PurchaseResponseInfo"
@"SSURLConnectionResponse"
@"ISDialog"
@"NSSet"
@"NSURLAuthenticationChallenge"
@"DownloadHandle"
@"DownloadHandlerSession"
B24@0:8^@16
v24@0:8Q16
@"<BatterySaverWatcherDelegate>"
v20@0:8I16
@32@0:8q16^@24
@40@0:8@16@24^@32
v32@0:8@16@?24
v32@0:8q16q24
@"SSOperationProgress"
v48@0:8@16@24@32@40
@32@0:8@16r*24
v36@0:8@16B24@28
@40@0:8@16@24r*32
v36@0:8@16@24B32
@"NSManagedObjectID"
@"NSOrderedSet"
q24@0:8q16
B32@0:8@"PurchaseOperation"16@"NSString"24
@"StoreKitClientIdentity"
@"MicroPaymentQueueResponse"
@"NSDate"
@"NSOperationQueue"
@"SKPayment"
@"NSLock"
@"MicroPaymentProductSubscriptionPeriod"
@"SKProductDiscount"
@"NSDecimalNumber"
@"NSLocale"
@"SKProductSubscriptionPeriod"
B40@0:8@16q24@32
@"<SpringBoardAlertProxyDelegate>"
@"SSXPCConnection"
@"NSObject<OS_xpc_object>"
@"ApplicationHandle"
@28@0:8@16i24
@"SSAppPurchaseHistoryCache"
@"SSUpdatableAssetCacheManager"
v48@0:8@16@24@32@?40
q32@0:8@16^@24
B40@0:8@16q24^@32
@"<SKProductsResponse>"
@40@0:8@16@24Q32
@"<SKPaymentQueueClient>"
@"SSPurchaseReceipt"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
@"<DirectUploadSessionDelegate>"
@"ISOperationQueue"
v40@0:8^@16^@24@32
@"SSKeybagRequest"
v40@0:8@16q24@32
v32@0:8@"DirectUploadSessionController"16q24
v40@0:8@"DirectUploadSessionController"16q24@"NSError"32
v40@0:8@"DirectUploadSessionController"16q24@"DirectUploadResponse"32
v32@0:8@"DirectUploadSessionController"16@"NSArray"24
v32@0:8@"MediaSocialAuthenticationCoordinator"16@"MediaSocialAuthenticationResponse"24
v32@0:8@"MediaSocialErrorCoordinator"16q24
v32@0:8@"MediaSocialStatusPollingCoordinator"16@"NSArray"24
v32@0:8q16@24
B44@0:8@16@24B32^@36
@"MediaSocialAuthenticationCoordinator"
@"MediaSocialErrorCoordinator"
@"MediaSocialStatusPollingCoordinator"
@"DirectUploadSessionController"
@"MicroPaymentProductDiscount"
@"StoreDownloadQueueRequest"
@48@0:8@16@24@32^@40
v28@0:8i16@20
v40@0:8Q16@24@32
v32@0:8Q16@24
@32@0:8Q16@24
@"NSManagedObjectContext"
@68@0:8@16@24@32@40B48@52@?60
@56@0:8@16@24@32@40^@48
v24@0:8@"PKPaymentAuthorizationController"16
v40@0:8@"PKPaymentAuthorizationController"16@"PKPayment"24@?<v@?@"PKPaymentAuthorizationResult">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPayment"24@?<v@?q>32
v32@0:8@"PKPaymentAuthorizationController"16@?<v@?@"PKPaymentRequestMerchantSessionUpdate">24
v40@0:8@"PKPaymentAuthorizationController"16@"PKShippingMethod"24@?<v@?@"PKPaymentRequestShippingMethodUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKContact"24@?<v@?@"PKPaymentRequestShippingContactUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPaymentMethod"24@?<v@?@"PKPaymentRequestPaymentMethodUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKShippingMethod"24@?<v@?q@"NSArray">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKContact"24@?<v@?q@"NSArray"@"NSArray">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPaymentMethod"24@?<v@?@"NSArray">32
@"UIWindow"24@0:8@"PKPaymentAuthorizationController"16
^{__SecAccessControl=}16@0:8
v24@0:8^{__SecAccessControl=}16
v28@0:8B16@20
q24@0:8@16
Q24@0:8q16
^{CGImage=}48@0:8^{CGImage=}16{CGSize=dd}24^{CGPath=}40
^{CGPath=}40@0:8q16d24d32
^{CGImage=}40@0:8{CGSize=dd}16^{CGPath=}32
^{CGImage=}32@0:8@16q24
^{CGImage=}40@0:8^{CGImage=}16^{CGPath=}24q32
^{CGImage=}32@0:8@16^f24
^{CGImage=}32@0:8^{CGImage=}16d24
^{CGImage=}40@0:8^{CGImage=}16Q24Q32
^{__CFArray=}
@"PKPaymentAuthorizationController"
@"SSPaymentSheet"
@"ISURLBag"
^{__SecAccessControl=}
@"AKAppleIDAuthenticationContext"
@"LAContext"
@"ExternalDownloadManifest"
@"NSURLRequest"
@"FinishDownloadAssetMemoryEntity"
@"StoreDownload"
@56@0:8@16@24@32@40@48
@"NSUUID"
v32@0:8r*16q24
i16@0:8
v20@0:8i16
v32@0:8@"RestoreDownloadItemsOperation"16@"RestoreDownloadItemsResponse"24
@"AccountCacheDBClient"
@"SSVPushNotificationParameters"
@"FairPlayDecryptSession"
@"MicroPaymentQueueRequest"
B32@0:8^q16^@24
B32@0:8q16^@24
B28@0:8B16^@20
@"PersistentStoreConfiguration"
@"NSManagedObjectModel"
@"NSPersistentStoreCoordinator"
@20@0:8i16
v24@0:8@"NSString"16
Q24@0:8@16
@24@0:8r*16
@32@0:8r*16Q24
@"SZExtractor"
@"SSPlayInfoRequestContext"
@"SSPlayInfoResponse"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@36@0:8@16B24@28
^{MGNotificationTokenStruct=}
@"AMSPushHandler"
@"AMSBagValue"16@0:8
@"<AMSMescalBagContract>"16@0:8
@"<AMSMetricsBagContract>"16@0:8
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
@"<DownloadAssetFairPlayStreamingKeyLoaderDelegate>"
@"IPodLibraryItem"
v32@0:8d16d24
@"SSWatchMetricsEventsController"
B48@0:8@16@24@32^@40
@"SSRemoteNotification"
@24@0:8^B16
@28@0:8@16B24
@28@0:8I16@?20
@"NSMutableIndexSet"
@"BKSProcessAssertion"
v40@0:8q16@24@32
@"LoadDownloadQueueOperation"
B24@0:8Q16
@"ISLoadURLBagOperation"
@"SSVSubscriptionResponse"
@"DirectUploadRequest"
v56@0:8@16@24@32@40@48
v24@0:8@"NSXMLParser"16
v48@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48
v40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSXMLParser"16@"NSString"24
v32@0:8@"NSXMLParser"16@"NSData"24
@"NSData"40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v32@0:8@"NSXMLParser"16@"NSError"24
@"NSMutableString"
B40@0:8@16Q24^@32
@"SoftwareProperties"
v48@0:8@16q24@32@?40
@32@0:8q16@24
@"CarrierBundlingEligibilityResponse"
@"SSSQLitePredicate"
B32@0:8^@16^@24
@"ISDialogButton"
@"SubscriptionStatusOperation"
@"<MediaSocialAuthenticationDelegate>"
@"SSAuthenticateResponse"
v28@0:8q16B24
B48@0:8@16@24^q32^@40
B36@0:8q16B24@28
v32@0:8@"RestorePodcastItemsOperation"16@"RestorePodcastItemsResponse"24
B48@0:8^@16^Q24@32^@40
B36@0:8@16B24^@28
@48@0:8@16@24q32@40
B48@0:8@16@24@32@40
@32@0:8q16q24
@40@0:8@16q24^@32
@44@0:8@16q24B32^@36
^{__SecAccessControl=}32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^@24
^{__SecAccessControl=}32@0:8@16^@24
@64@0:8@16@24q32@40@48^@56
@96@0:8@16@24@32@40@48^{__SecAccessControl=}56^@64^@72^@80^@88
@36@0:8@16@24B32
B48@0:8@16N^@24q32^@40
B40@0:8@16^@24^@32
@"FinishDownloadMemoryEntity"
v36@0:8@16d24B32
@24@0:8d16
d24@0:8@16
d32@0:8@16@24
B32@0:8@16^Q24
@36@0:8@16q24B32
v32@0:8q16@?24
v32@0:8q16#24
@"NSCountedSet"
I24@0:8@16
@32@0:8q16r^@24
B40@0:8@16@24@32
@48@0:8@16@24q32^@40
B48@0:8@16@24q32^@40
@"AppReceiptOperationResult"
@"AppReceiptRefreshOperationOptions"
@"SKPaymentDiscount"
B36@0:8@16@24B32
@"<MediaSocialErrorDelegate>"
@40@0:8@16@24q32
{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}
@40@0:8^{__CFDictionary=}16Q24@?32
v40@0:8@16^{__CFDictionary=}24Q32
v32@0:8^{__CFUserNotification=}16Q24
v32@0:8^{__CFDictionary=}16Q24
^{__CFUserNotification=}16@0:8
^{__CFDictionary=}
^{__CFRunLoopSource=}
^{__CFUserNotification=}
@"DownloadSessionProperties"
@40@0:8q16q24@32
@"SSVDialogResponse"
@36@0:8q16q24B32
@44@0:8q16q24@32B40
@36@0:8q16@24B32
@36@0:8q16B24@28
@"LSApplicationProxy"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v40@0:8^@16@24^@32
@44@0:8@16@24Q32B40
@"SSVMediaContentTasteUpdateResponse"
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v32@0:8@16B24B28
@"NSMapTable"
@"DownloadsDatabase"
@"PrepareDownloadResponse"
v24@0:8^{__CFString=}16
@48@0:8@16@24Q32@?40
v48@0:8@16@24@32^v40
@40@0:8@16@24@?32
v40@0:8@16^{__CFString=}24@32
B32@0:8@"BuyMicroPaymentOperation"16@"NSString"24
@"XPCClient"
@"LoadMicroPaymentQueuesOperation"
@"LoadCompletedMicroPaymentsOperation"
@"SSLookupProperties"
@"SSLookupResponse"
@"SSDownloadPolicy"
B56@0:8@16^@24^@32^@40^@48
@28@0:8B16@20
@"SSVGratisRequestBody"
B32@0:8@16q24
I20@0:8i16
B32@0:8^i16@24
v28@0:8I16@20
@"BKSApplicationStateMonitor"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
B36@0:8@16B24@28
@"WorkspaceDownloadObserver"
v24@0:8@"BatterySaverWatcher"16
v40@0:8@16@24d32
v32@0:8r*16@24
@"BatterySaverWatcher"
v32@0:8@16r*24
@"SSMemoryEntity"
v136@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80{?={?=qiIq}{?=qiIq}}88
v144@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80{?={?=qiIq}{?=qiIq}}88@136
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"NSURL"32
v136@0:8@"NSURLSession"16@"AVAssetDownloadTask"24{?={?=qiIq}{?=qiIq}}32@"NSArray"80{?={?=qiIq}{?=qiIq}}88
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"AVMediaSelection"32
v40@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24@"NSURL"32
v40@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24@"AVMediaSelection"32
v144@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24{?={?=qiIq}{?=qiIq}}32@"NSArray"80{?={?=qiIq}{?=qiIq}}88@"AVMediaSelection"136
@"DownloadDataConsumer"
v60@0:8@16@24@32@40B48@?52
@"SSMetricsEventController"
B24@0:8*16
@"SSRemoteWebViewRequest"
q32@0:8q16q24
B40@0:8@16@24q32
q32@0:8@16q24
@36@0:8q16I24@?28
v40@0:8q16q24@?32
@"NSHashTable"
@"NSURLCredential"
v40@0:8q16q24q32
@40@0:8q16@24@32
v48@0:8@16q24@32@40
@"DownloadsChangeset"
@"InstallAttributionParams"
@"StoreDownloadQueueResponse"
@80@0:8@16@24@32@40@48@56q64@72
v32@0:8@"ISDialogOperation"16@"ISDialogButton"24
@"ISBiometricStore"
@"SSRedeemCodesResponse"
@24@0:8Q16
@"SSKeyValueStore"
@"SSMetricsController"
v48@0:8q16@24@32@?40
@"PromotedIAPDatabase"
@"SSMutableURLRequestProperties"
B40@0:8q16@24@32
v48@0:8q16@24@32@40
v40@0:8q16@24@?32
@"SSMutableAuthenticationContext"
@"SSPurchase"
@40@0:8@16q24d32
v40@0:8^d16^d24q32
B48@0:8@16@24d32d40
@"DisplayPaymentSheetOperation"
^v16@0:8
q20@0:8i16
{?="adamId"b1"createdOffsetMillis"b1"preferenceType"b1}
v32@0:8B16B20@?24
v72@0:8@16@24Q32@40@48@56@?64
v48@0:8@16@24@32q40
v56@0:8@16q24@32B40B44@?48
v36@0:8@16B24@?28
@"PurchaseActionsDatabase"
@"<MediaSocialStatusPollingDelegate>"
@48@0:8@16@24@32@40
@"NSObject<LSApplicationWorkspaceObserverProtocol>"
v32@0:8d16@24
@"NSProgress"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationSettings"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24
@"UNUserNotificationCenter"
@"ApplicationDownloadProgress"
_(knN
A333333
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>itunesstored</string>
<key>CFBundleIdentifier</key>
<string>com.apple.itunesstored</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.itunesstored</string>
<key>aps-connection-initiate</key>
<true/>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.appstored.iap-info</key>
<true/>
<key>com.apple.appstored.private</key>
<true/>
<key>com.apple.appstored.xpc.updates</key>
<true/>
<key>com.apple.asd.client</key>
<string>9824938448</string>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.developer.pass-type-identifiers</key>
<array>
<string>*.pass.com.apple.itunes.storecredit</string>
</array>
<key>com.apple.frontboard.app-badge-value-access</key>
<true/>
<key>com.apple.ibooks.BLService.private</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.keybagd.UserManager.suspendquota</key>
<true/>
<key>com.apple.keystore.absinthe</key>
<true/>
<key>com.apple.keystore.auth-token</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.xpc</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.multitasking.newsstandassertions</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.networkd.set_source_application</key>
<true/>
<key>com.apple.odr.itunesstored</key>
<true/>
<key>com.apple.passes.add-silently</key>
<true/>
<key>com.apple.payment.all-access</key>
<true/>
<key>com.apple.payment.amp-card-enrollment</key>
<true/>
<key>com.apple.payment.card-on-file</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGE_ENTITLEMENT</string>
<string>CLIENT_ENTITLEMENT</string>
<string>ITEMIZED_PURGEABLE_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileContainerManager.stageSharedContent</key>
<true/>
<key>com.apple.private.ProvInfoIOKitUserClient.access</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.appstored</key>
<array>
<string>Personalization</string>
</array>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.in-app-payments</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>CheckCapabilitiesMatch</string>
<string>Install</string>
<string>Lookup</string>
<string>UpdateSinfForLaunchServices</string>
</array>
<key>com.apple.private.network.delegation-whitelist</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.media-asset-download.can-specify-destination-url</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceFaceID</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.MobileStore</string>
</array>
<key>com.apple.remotenotification.preferences</key>
<true/>
<key>com.apple.rootless.storage.com.apple.MobileAsset.DuetExpertCenterAsset</key>
<true/>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.asd.scoring</string>
<string>com.apple.usernotifications.usernotificationservice</string>
</array>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.media.books.managed</string>
<string>systemgroup.com.apple.media.shared.books</string>
<string>systemgroup.com.apple.ondemandresources</string>
</array>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlswhenlocked</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
