?333333
0E@(#)PROGRAM:CoreSuggestionsML  PROJECT:Suggestions-1115.501
featuresModelId
T@"NSString",R,C,N,V_featuresModelId
featuresVersion
T@"NSString",R,C,N,V_featuresVersion
characterNGramRange
T{_NSRange=QQ},R,N,V_characterNGramRange
tokenNGramRange
T{_NSRange=QQ},R,N,V_tokenNGramRange
vectorLength
TQ,R,N,V_vectorLength
VL=%lu&CL=%lu&CH=%lu&TL=%lu&TH=%lu&FV=%@
TOKEN_N_GRAM_RANGE_N_LENGTH
TOKEN_N_GRAM_MINIMUM_N
CHARACTER_N_GRAM_RANGE_N_LENGTH
CHARACTER_N_GRAM_MINIMUM_N
VECTOR_LENGTH
FEATURES_VERSION
FEATURES_MODEL_ID
positiveSamplingRate
Td,R,N,V_positiveSamplingRate
dynamicLabelSamplingRate
Td,R,N,V_dynamicLabelSamplingRate
negativeSamplingRate
Td,R,N,V_negativeSamplingRate
maxReplyLength
TQ,R,N,V_maxReplyLength
maxPromptLength
TQ,R,N,V_maxPromptLength
maxPromptWindowSeconds
Td,R,N,V_maxPromptWindowSeconds
promptJoiningString
T@"NSString",R,N,V_promptJoiningString
PROMPT_JOINING_STRING
MAX_PROMPT_WINDOW_SECONDS
MAX_REPLY_LENGTH
MAX_PROMPT_LENGTH
NEGATIVE_SAMPLING_RATE
DYNAMIC_LABEL_SAMPLING_RATE
POSITIVE_SAMPLING_RATE
isPersonalizationDisabled
TB,R,N,V_isPersonalizationDisabled
isReplyTextRandomized
TB,R,N,V_isReplyTextRandomized
isPerCategory
TB,R,N,V_isPerCategory
weightForCategoryAverage
Td,R,N,V_weightForCategoryAverage
weightForCategoryMax
Td,R,N,V_weightForCategoryMax
weightForIndividualModel
Td,R,N,V_weightForIndividualModel
classDiscount
Td,R,N,V_classDiscount
responsesBonus
Td,R,N,V_responsesBonus
minToShowThreshold
Td,R,N,V_minToShowThreshold
defaultResponsesToReturn
TQ,R,N,V_defaultResponsesToReturn
responsesToShowAtTopForDiversity
TQ,R,N,V_responsesToShowAtTopForDiversity
personalizationExplorationFactor
Td,R,N,V_personalizationExplorationFactor
personalizationDisplayedPseudocount
Td,R,N,V_personalizationDisplayedPseudocount
personalizationSelectedPseudocountPerSemanticClass
Td,R,N,V_personalizationSelectedPseudocountPerSemanticClass
modelTypeName
T@"NSString",R,N,V_modelTypeName
subModelKeyString
T@"NSString",R,N,V_subModelKeyString
dynamicLabelsEnabled
TB,R,N,V_dynamicLabelsEnabled
hasNegativeClass
TB,R,N,V_hasNegativeClass
negativeClassMaximumToPredict
Td,R,N,V_negativeClassMaximumToPredict
SUB_MODEL_KEY_STRING
MODEL_TYPE_NAME
NEGATIVE_CLASS_MAXIMUM_TO_PREDICT
HAS_NEGATIVE_CLASS
DYNAMIC_LABELS_ENABLED
PERSONALIZATION_EXPLORATION_FACTOR
PERSONALIZATION_DISPLAYED_PSEUDOCOUNT
PERSONALIZATION_SELECTED_PSEUDOCOUNT_PER_SEMANTIC_CLASS
RESPONSES_AT_TOP_WITH_MORE_DIVERSITY
DEFAULT_RESPONSES_TO_RETURN
MINIMUM_TO_SHOW_THRESHOLD
RESPONSE_COUNT_FACTOR_RESPONSE_BONUS
RESPONSE_COUNT_FACTOR_CLASS_DISCOUNT
RANKING_WEIGHT_CATEGORY_MAX
RANKING_WEIGHT_CATEGORY_AVERAGE
RANKING_AND_RESPONSE_COUNT_IS_PER_CATEGORY
REPLY_TEXT_IS_RANDOMIZED
PERSONALIZATION_IS_DISABLED
semanticClassIndex
TQ,R,N,V_semanticClassIndex
semanticClasses
T@"NSArray",R,N,V_semanticClasses
selectedPseudocounts
T@"NSArray",R,N,V_selectedPseudocounts
scoreWeight
Td,R,N,V_scoreWeight
category
TQ,R,N,V_category
dynamicLabel
TB,R,N,V_dynamicLabel
DYNAMIC_LABEL
MODEL_CATEGORY
MODEL_SCORE_WEIGHT
REPLY_TEXT_SELECTED_PSEUDOCOUNTS
RESPONSE_CLASSES
models
T@"NSArray",R,N,V_models
styleGroups
T@"NSArray",R,N,V_styleGroups
replyTexts
T@"NSArray",R,N,V_replyTexts
semanticClassReplyTextStrings
T@"NSArray",R,N,V_semanticClassReplyTextStrings
semanticClassSelectedPseudocounts
T@"NSArray",R,N,V_semanticClassSelectedPseudocounts
semanticClassParent
T@"NSArray",R,N,V_semanticClassParent
styleGroupParent
T@"NSArray",R,N,V_styleGroupParent
replyTextParent
T@"NSArray",R,N,V_replyTextParent
categoryModels
T@"NSArray",R,N,V_categoryModels
categorySemanticClasses
T@"NSArray",R,N,V_categorySemanticClasses
categoryStyleGroups
T@"NSArray",R,N,V_categoryStyleGroups
semanticClassStyleGroups
T@"NSArray",R,N,V_semanticClassStyleGroups
semanticClassReplyTexts
T@"NSArray",R,N,V_semanticClassReplyTexts
styleGroupReplyTexts
T@"NSArray",R,N,V_styleGroupReplyTexts
replyTextsSet
T@"NSSet",R,N,V_replyTextsSet
@max.category
@max.unsignedIntegerValue
@min.unsignedIntegerValue
v44@?0@8@"NSArray"16Q24Q32B40
isCustomResponsesEnabled
TB,R,N,V_isCustomResponsesEnabled
filterBatchSize
TQ,R,N,V_filterBatchSize
minimumTimeIntervalSecs
Td,R,N,V_minimumTimeIntervalSecs
minimumDistinctRecipients
TQ,R,N,V_minimumDistinctRecipients
minimumReplyOccurences
TQ,R,N,V_minimumReplyOccurences
timeDecayFactor
Td,R,N,V_timeDecayFactor
countExponent
Td,R,N,V_countExponent
distanceThreshold
Td,R,N,V_distanceThreshold
minDecayedCountForPruning
Td,R,N,V_minDecayedCountForPruning
minDecayedCountForPrediction
Td,R,N,V_minDecayedCountForPrediction
maxStoredMessages
TQ,R,N,V_maxStoredMessages
maxStoredCustomResponses
TQ,R,N,V_maxStoredCustomResponses
maxRowsInPerRecipientTable
TQ,R,N,V_maxRowsInPerRecipientTable
knowledgeStoreQueryLimit
TQ,R,N,V_knowledgeStoreQueryLimit
maxReplyGapSecs
Td,R,N,V_maxReplyGapSecs
usageSpreadExponent
Td,R,N,V_usageSpreadExponent
allowProfanity
TB,R,N,V_allowProfanity
compatibilityVersion
TQ,R,N,V_compatibilityVersion
useNonNegativeClassesOnly
TB,R,N,V_useNonNegativeClassesOnly
USE_NON_NEGATIVE_CLASSES_ONLY
USAGE_SPREAD_EXPONENT
MAX_REPLY_GAP_SECS
KNOWLEDGE_STORE_QUERY_LIMIT
ALLOW_PROFANITY
CUSTOM_RESPONSES_COMPATIBILITY_VERSION
MAX_ROWS_IN_PER_RECIPIENT_TABLE
MAX_STORED_CUSTOM_RESPONSES
MAX_STORED_MESSAGES
MIN_DECAYED_COUNT_FOR_PRUNING
MIN_DECAYED_COUNT_FOR_PREDICTION
DISTANCE_THRESHOLD
COUNT_EXPONENT
TIME_DECAY_FACTOR
MINIMUM_REPLY_OCCURENCES
MINIMUM_DISTINCT_RECIPIENTS
MINIMUM_TIME_INTERVAL_SECS
FILTER_BATCH_SIZE
IS_CUSTOM_RESPONSES_ENABLED
modelHyperparameters
T@"SGModelHyperparameters",R,N,V_modelHyperparameters
preprocessingMethods
T@"NSArray",R,N,V_preprocessingMethods
labels
T@"NSArray",R,N,V_labels
replies
T@"SGQuickResponsesReplies",R,N,V_replies
classificationParams
T@"SGQuickResponsesClassificationParameters",R,N,V_classificationParams
predictionParams
T@"SGQuickResponsesPredictionParameters",R,N,V_predictionParams
customResponsesParameters
T@"SGCustomResponsesParameters",R,N,V_customResponsesParameters
language
T@"NSString",R,C,N,V_language
mode
TQ,R,N,V_mode
sessionDescriptor
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
CUSTOM_RESPONSES_PARAMETERS
CLASSIFICATION_PARAMETERS
CLASSIFICATION_PREPROCESSING_METHODS
CLASSIFICATION_MODEL_HYPERPARAMETERS
CLASSIFICATION_LABELS
PREDICTION_PARAMETERS
PREDICTION_PREPROCESSING_METHODS
PREDICTION_MODEL_HYPERPARAMETERS
PREDICTION_REPLIES
SGModelAsset-notifications
v16@?0@"_PASAsset2"8
suggestionsmodelassets
Assets
/System/Library/AssetTypeDescriptors/com.apple.MobileAsset.AssetTypeDescriptor.CoreSuggestionsModelAssets.plist
NameDetectorRules.plist
DPRecorderRules.plist
SignatureDetectorRules.plist
MetricsConfig.plist
MLQuickResponsesTraining.plist
MLModelMappings.plist
MLModelRules.plist
position
T@"NSNumber",R,N,V_position
T@"NSNumber",R,N,V_ucb
@sum.self
d16@?0@8
superclass
description
T@"NSString",R,C
METHODS
v32@?0@"SGTokenString"8Q16^B24
http
:/.?=&_-+$!*'(),;@
valueLen <= patternLen
SGStringPreprocessingTransformer.m
value.length == 1
-[SGStringPreprocessingTransformer transform:]
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1115.501/CoreSuggestionsML/Transformers/SGStringPreprocessingTransformer.m
%s%s%s%s
%s%s%s%s%s
size >= 0 && size < BUF_SIZE
:withValue:
methods.count % 2 == 0
transformers
T@"NSArray",&,V_transformers
TRANSFORMERS
@16@?0@"<PMLPlistAndChunksSerializableProtocol>"8
v32@?0@"<PMLTransformerProtocol>"8Q16^B24
text
T@"NSString",R,C,N,V_text
T@"NSString",R,C,N,V_lang
replyTextId
TQ,R,N,V_replyTextId
styleGroupId
TQ,R,N,V_styleGroupId
semanticClassId
TQ,R,N,V_semanticClassId
modelId
TQ,R,N,V_modelId
categoryId
TQ,R,N,V_categoryId
isCustomResponse
TB,R,N,V_isCustomResponse
proactiveTrigger
T@"NSDictionary",R,N,V_proactiveTrigger
lang.length
text.length
SGQuickResponsesInference.m
@"NSArray"16@?0@"NSArray"8
@16@?0@8
v32@?0@8@16^B24
quickResponsesEspressoClassifierMultiLabel
quickResponsesBinaryLogisticMultiLabel
personalization != nil || model.config.predictionParams.isPersonalizationDisabled
ranking
model
@"NSMutableDictionary"24@?0@"NSDictionary"8@"NSString"16
thirdPartyPostalUE9TVEFMLjFwCg
thirdPartyEmailRU1BSUwuMXAK
thirdPartyPhoneUEhPTkUuM3AK
v8@?0
SGNameDetector
photosharing
photoSharingUEhPVE8K
firstPartyLocTE9DLjFwCg
firstPartyPostalUE9TVEFMLjFwCg
firstPartyEmailRU1BSUwuMXAK
firstPartyPhoneUEhPTkUuMXAK
v32@?0@"SGQuickResponsesClassScore"8Q16^B24
model.outputDimension == configCount
SGQuickResponsesModel.m
-[SGQuickResponsesModel predict:]
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1115.501/CoreSuggestionsML/SGQuickResponsesModel.m
[[self class] isEqual:features.source.modelClass]
%@ must implement +newTransformerInstanceForLanguage:mode:plistPath:
NSString *modelModeName(SGModelMode)
TRAINING
PREDICTION
EVALUATION
Unexpected SGModelMode mode: %lX
%@%lu%@%@
Chunk file at %@ not the same class as type %@
%@_%@_%@%@Model.chunk
EspressoClassifierMultiLabel
%@:%@
BinaryLogisticMultiLabel
quickResponses
[label isKindOfClass:NSNumber.class]
[data isKindOfClass:NSString.class]
[vector isKindOfClass:PMLSparseVector.class]
T@"SGQuickResponsesConfig",R,N,V_config
featurizer
T@"<PMLTransformerProtocol>",R,N,V_featurizer
source
T@"SGModelSource",R,N,V_source
labeler
T@"<PMLTransformerProtocol>",R,N,V_labeler
sampler
T@"SGModelSampler",R,N,V_sampler
sampler != nil || config.mode == SGModelModePrediction
labeler != nil || config.mode == SGModelModePrediction
config
v32@?0@8@"NSDictionary"16^B24
+[SGQuickResponsesModelRules areModelsAvailableInLanguage:]_block_invoke
[objectives isKindOfClass:[NSDictionary class]]
SGQuickResponses
SGQRTextMessage
v24@?0@"_PASSqliteDatabase"8@?<{_PASDBIterAction_=B}@?@"NSError">16
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
usage_spread
v16@?0@"_PASSqliteStatement"8
$reply
$language
SELECT usage_spread FROM custom_responses WHERE reply=$reply AND language=$language
decayed_times_used
$recipient
SELECT decayed_times_used FROM cr_per_recipient_counts WHERE reply=$reply AND language=$language AND recipient=$recipient
v16@?0@"SGLazyInit"8
SGQuickResponsesStore failed to destroy instance in memory.
flakyDatabaseHandle.getObject.db.isInMemory
SGQuickResponsesStore.m
lang_response
selected
matched
response
T@"NSString",R,N,V_response
T@"NSString",R,N,V_lang
displayed
Ti,R,N,V_displayed
Ti,R,N,V_selected
Ti,R,N,V_matched
supportsSecureCoding
TB,R
lang
matched >= 0
selected >= 0
displayed >= 0
CREATE INDEX idx_responses_snapshot_lang_response ON responses_snapshot (lang_response)
CREATE TABLE responses_snapshot AS     SELECT *     FROM responses 
DROP TABLE responses_snapshot
SELECT t1.lang_response AS lang_response        ,CASE            WHEN t2.displayed IS NULL THEN t1.displayed            ELSE t1.displayed - t2.displayed         END AS displayed        ,CASE            WHEN t2.selected IS NULL THEN t1.selected            ELSE t1.selected - t2.selected         END AS selected        ,CASE            WHEN t2.matched IS NULL THEN t1.matched            ELSE t1.matched - t2.matched         END AS matched FROM responses t1 LEFT JOIN responses_snapshot t2     ON t1.lang_response = t2.lang_response ORDER BY RANDOM() 
$table_limit
DELETE FROM custom_responses ORDER BY decayed_times_used ASC LIMIT $table_limit
SELECT COUNT(ROWID) as c from custom_responses
$threshold
DELETE FROM custom_responses WHERE decayed_times_used < $threshold
$decay_factor
UPDATE cr_per_recipient_counts SET decayed_times_used = decayed_times_used * $decay_factor
rowid
prompt_embedding
$prompt_embedding
$rowid
UPDATE custom_responses SET prompt_embedding = $prompt_embedding, decayed_times_used = decayed_times_used * $decay_factor WHERE rowid = $rowid
SELECT rowid, prompt_embedding from custom_responses
SGDeduper
/System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
q24@?0@"_PASTuple2"8@"_PASTuple2"16
reply
$minimum_decayed_count
$minimum_time_interval
SELECT reply, prompt_embedding, decayed_times_used, usage_spread FROM custom_responses WHERE language = $language   AND decayed_times_used >= $minimum_decayed_count   AND last_seen - first_seen >= $minimum_time_interval
$n_rows
DELETE FROM cr_per_recipient_counts WHERE reply=$reply AND language=$language ORDER BY decayed_times_used ASC LIMIT $n_rows 
second
SELECT reply, language, COUNT(ROWID) as n FROM cr_per_recipient_counts GROUP BY reply, language
SELECT COUNT(ROWID) as n FROM cr_per_recipient_counts
UPDATE custom_responses SET usage_spread = (SELECT CAST(u AS FLOAT)/c FROM    (SELECT count(distinct(recipient)) AS u FROM messages WHERE messages.reply=custom_responses.reply AND messages.language=custom_responses.language),    (SELECT count(distinct(recipient)) AS c FROM messages))
recipient
sent_at
SELECT prompt_embedding FROM custom_responses WHERE reply=$reply AND language=$language
SELECT rowid, reply, language, prompt, sent_at, recipient FROM messages WHERE filtering AND NOT filtered
UPDATE messages SET filtering = false, filtered = false
DELETE FROM custom_responses
$current_version
$profanity_locale
INSERT INTO custom_responses_version (current_version, profanity_locale) VALUES($current_version, $profanity_locale)
DELETE FROM custom_responses_version
current_version
SELECT current_version FROM custom_responses_version
profanity_locale
SELECT profanity_locale FROM custom_responses_version
$row_id
UPDATE messages SET filtering = false, filtered = true WHERE rowid = $row_id
SELECT rowid, reply FROM messages WHERE filtering
$recipients
$replies
UPDATE messages SET filtering = false, filtered = true WHERE filtering AND reply IN (SELECT reply FROM messages GROUP BY reply HAVING COUNT(DISTINCT(recipient)) < $recipients OR COUNT(reply) < $replies)
$limit
UPDATE messages SET filtering = true WHERE NOT filtered ORDER BY sent_at LIMIT $limit
SELECT m.rowid, m.filtering, m.filtered, m.recipient, m.prompt, m.language, m.reply, m.sent_at, cr.prompt_embedding FROM messages as m, (SELECT reply, language, prompt_embedding from custom_responses) as cr WHERE m.filtering AND NOT m.filtered AND m.reply = cr.reply AND m.language = cr.language
SELECT COUNT(ROWID) as c from messages where NOT filtered
DELETE FROM messages ORDER BY sent_at DESC LIMIT -1 OFFSET $table_limit
$prompt
$sent_at
INSERT INTO messages (reply, language, prompt, recipient, sent_at, filtering, filtered) VALUES($reply, $language, $prompt, $recipient, $sent_at, false, false)
%@%@
UPDATE messages SET filtered = true, filtering = false WHERE rowid=$row_id
INSERT INTO cr_per_recipient_counts (reply,  language,  recipient, decayed_times_used)                              VALUES($reply, $language, $recipient,                  1) ON CONFLICT(reply, language, recipient) DO UPDATE SET decayed_times_used = decayed_times_used + 1
UPDATE custom_responses SET prompt_embedding = $prompt_embedding,     decayed_times_used = decayed_times_used + 1,     first_seen = MIN($sent_at, first_seen),     last_seen = MAX($sent_at, last_seen) WHERE language = $language AND reply = $reply
INSERT INTO custom_responses (reply,  language,  prompt_embedding, decayed_times_used,  first_seen,  last_seen)                       VALUES($reply, $language, $prompt_embedding,                  1,    $sent_at,   $sent_at)
$lang_response
INSERT INTO responses_totals (language, unmatched) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET unmatched=unmatched+1
INSERT INTO responses_totals (language, matched) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET matched=matched+1
INSERT INTO responses (lang_response, matched) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET matched=matched+1
INSERT INTO responses_totals (language, selected) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET selected=selected+1
INSERT INTO responses (lang_response, selected) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET selected=selected+1
$count
INSERT INTO responses_totals (language, opportunities, displayed) VALUES ($language,1,$count) ON CONFLICT(language) DO UPDATE SET opportunities=opportunities+1, displayed=displayed+$count
INSERT INTO responses (lang_response, displayed) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET displayed=displayed+1
replyRecords
T@"NSArray",R,N,V_replyRecords
totalOpportunities
Td,R,N,V_totalOpportunities
totalDisplayed
Td,R,N,V_totalDisplayed
totalSelected
Td,R,N,V_totalSelected
totalMatched
Td,R,N,V_totalMatched
totalUnmatched
Td,R,N,V_totalUnmatched
totalUnmatched >= 0
totalMatched >= 0
totalSelected >= 0
totalDisplayed >= 0
totalOpportunities >= 0
opportunities
unmatched
langResponse
T@"NSString",R,N,V_langResponse
Td,R,N,V_displayed
Td,R,N,V_selected
Td,R,N,V_matched
SELECT * FROM responses_totals WHERE language=$language
SELECT * FROM responses WHERE lang_response=$lang_response
B8@?0
{_PASDBIterAction_=B}16@?0@"NSError"8
v16@?0@8
@8@?0
SGLexicon
SGTokenizer
v16@?0@"NSMutableArray"8
B32@?0@"<SGConversationTurnProtocol>"8Q16^B24
q24@?0@"<SGConversationTurnProtocol>"8@"<SGConversationTurnProtocol>"16
sender
T@"NSString",R,N,V_text
senderID
T@"NSString",R,N,V_senderID
timestamp
T@"NSDate",R,N,V_timestamp
T@"NSString",R,N
T@"NSDate",R,N
<SGConversationTurn txt_sz:%tu sid_sz:%tu tsp:%@>
[otherTurn isKindOfClass:[SGConversationTurn class]]
SGConversationTurn.m
LABEL_MAPPING
-[SGStringLabelingTransformer transform:]
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1115.502.1/CoreSuggestionsML/Transformers/SGStringLabelingTransformer.m
mapping
SGStringLabelingTransformer.m
duplicate label %@
hash
LABELER
PREPROCESSOR
-[SGTextLabelTransformer transform:]
/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1115.502.1/CoreSuggestionsML/Transformers/SGTextLabelTransformer.m
[input isKindOfClass:[NSString class]]
preprocessor
SGTextLabelTransformer.m
methods
SGTextLabelTransformer: Unexpected null value for flattened labels
@unionOfArrays.self
SGQuickResponsesClassificationModel.m
v40@?0@"NSString"8{_NSRange=QQ}16^B32
NSMaxRange(textTagRange) <= text.length
SGLanguageDetection.m
NSMaxRange(lowercaseRange) <= lowercaseText.length
sr-Latn
uz-Latn
uz-Arab
Latn
Arab
Cyrl
zh-Hans
zh-Hant
Hant
Hans
localeIdentifier.length >= 2
plist
MLQuickResponsesPrediction
no path for filename %@
SGDefaultAssets.m
T@"NSString",&,N,V_reply
prompt
T@"NSString",&,N,V_prompt
handle
T@"NSString",&,N,V_handle
sentAt
T@"NSDate",&,N,V_sentAt
latestProcessedDate
T@"NSDate",R,N,V_latestProcessedDate
messageEvents is nil
Iterator exhausted!
SGMessagePairIterator.m
startDate
com.apple.MobileSMS
startDate > %@
INSendMessageIntent
IMBreadcrumbCharacterString
/System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation
IMAttachmentCharacterString
T@"PMLSessionDescriptor",&,N,V_sessionDescriptor
modelClass
T#,&,N,V_modelClass
SGModelFeatures.m
vector
k <= n
Invalid parameter not satisfying: %@
SGRandomization.m
v32@?0@8Q16^B24
valueBlock
NSMaxRange(range) <= mutableArray.count
separator
T@"NSString",&,V_separator
TQ,R
T#,R
SEPARATOR
Unexpected input: %@. %@ requires an NSArray.
SGTokenJoiningTransformer.m
transformer
T@"<PMLTransformerProtocol>",&,V_transformer
inputKey
T@"NSString",&,V_inputKey
INPUTKEY
TRANSFORMER
Unexpected input: %@. %@ requires dictionary with inputKey: %@.
SGSelectiveTransformer.m
v32@?0@"NSNumber"8Q16^B24
num.unsignedIntegerValue >= headerCount
SGQuickResponsesRanking.m
value
Td,R,N,V_value
index
TQ,R,N,V_index
responsesToFill %d out of range [%d, %d]
validClasses %d out of range [1, %d]
average
Td,R,N,V_average
maximum
Td,R,N,V_maximum
score >= 0
v32@?0@"SGQuickResponsesReplyModel"8Q16^B24
v32@?0@"SGQuickResponsesCategoryScore"8Q16^B24
T@"_PASSqliteDatabase",R,N,V_db
debugDescription
CREATE TABLE responses_snapshot (    lang_response TEXT PRIMARY KEY,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
UPDATE custom_responses SET usage_spread = (SELECT CAST(u AS FLOAT)/c FROM    (SELECT count(distinct(recipient)) AS u FROM messages WHERE messages.reply=custom_responses.reply AND messages.language=custom_responses.language),    (SELECT count(distinct(recipient)) AS c FROM messages));
ALTER TABLE custom_responses ADD COLUMN usage_spread DOUBLE NOT NULL DEFAULT 0.0
CREATE TABLE cr_per_recipient_counts (    reply TEXT NOT NULL,     language TEXT NOT NULL,     recipient TEXT NOT NULL,     decayed_times_used DOUBLE NOT NULL, UNIQUE(reply, language, recipient))
CREATE TABLE custom_responses_version (    current_version INTEGER NOT NULL,     profanity_locale TEXT NOT NULL )
CREATE TABLE custom_responses (    reply TEXT NOT NULL,     language TEXT NOT NULL,     prompt_embedding BLOB NOT NULL,     decayed_times_used DOUBLE NOT NULL,     first_seen DOUBLE NOT NULL,     last_seen DOUBLE NOT NULL )
CREATE TABLE messages (    reply TEXT NOT NULL,    language TEXT NOT NULL,     prompt TEXT NOT NULL,     recipient TEXT NOT NULL,     sent_at DOUBLE NOT NULL,     filtering BOOL NOT NULL,     filtered BOOL NOT NULL )
CREATE TABLE responses_totals (    language TEXT PRIMARY KEY,     opportunities INTEGER NOT NULL DEFAULT 0,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0,     unmatched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
CREATE TABLE responses (    lang_response TEXT PRIMARY KEY,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
quickresponses.db
PRAGMA synchronous=NORMAL
PRAGMA journal_mode=WAL
dictionary
_featuresModelId.length > 0
_featuresVersion.length > 0
NSMaxRange(_characterNGramRange) <= 100
NSMaxRange(_tokenNGramRange) <= 100
0 <= _positiveSamplingRate && _positiveSamplingRate <= 1
0 <= _dynamicLabelSamplingRate && _dynamicLabelSamplingRate <= 1
0 <= _negativeSamplingRate && _negativeSamplingRate <= 1
SGQuickResponsesConfig: negativeSamplingRate=%f and positiveSamplingRate=%f do not satisfy strict DP constraint
0 <= _maxPromptWindowSeconds
_weightForCategoryAverage + _weightForCategoryMax < 1 + EPSILON_OF_DOUBLE_COMPARISON
fabs(1 - _weightForCategoryAverage - _weightForCategoryMax - _weightForIndividualModel) < EPSILON_OF_DOUBLE_COMPARISON
!_isPerCategory || fabs(1 - _weightForCategoryAverage - _weightForCategoryMax) < EPSILON_OF_DOUBLE_COMPARISON
0 <= _weightForCategoryAverage && _weightForCategoryAverage <= 1
0 <= _weightForCategoryMax && _weightForCategoryMax <= 1
0 <= _weightForIndividualModel && _weightForIndividualModel <= 1
0 <= _classDiscount && _classDiscount <= 1
0 <= _responsesBonus && _responsesBonus <= 1
_personalizationSelectedPseudocountPerSemanticClass <= _personalizationDisplayedPseudocount
_promptJoiningString.length
_scoreWeight >= 0
[semanticClass isKindOfClass:NSArray.class]
[replyGroup isKindOfClass:NSArray.class]
[string isKindOfClass:NSString.class]
array
indexedArrays.count >= 4
parentArrays.count >= 4
_selectedPseudocounts.count == _replyTexts.count
[array isKindOfClass:NSArray.class]
[dictionary isKindOfClass:NSDictionary.class]
replyModel != nil
[SGQuickResponsesReplies isZeroBasedAndContiguous:replyModels]
0 <= _minimumTimeIntervalSecs
0 <= _timeDecayFactor && _timeDecayFactor <= 1
0 <= _countExponent
dict
[dict isKindOfClass:NSDictionary.class]
SGQuickResponses: no available configuration found to support prediction for language %@
SGQuickResponses: no available configuration found to support training for language %@
SGQuickResponsesConfig: Training class count exceeds maximum
SGQuickResponses: no available configuration found to support custom responses for language %@
SGQuickResponses: Invalid plist path %@
SGQuickResponsesConfig: Object for key %@ is not a dictionary.
SGQuickResponsesConfig: Object for key %@ is not an array.
SGQuickResponsesConfig: Object for key %@ is not a string.
SGQuickResponsesConfig: Object for key %@ is not a number.
SGQuickResponsesConfig: Object for key %@ not found in dictionary.
Error finding model plist path for %@
No reply text string exists in config for selected response %@
No reply text string exists in config for displayed response
SGStringPreprocessor error: NSSelectorFromString returned NULL
SGStringPreprocessor received an invalid method %@
[SGStringPreprocessingTransformer replaceContactNamesWithString:withValue:] - Incorrect format for value: %@
Failed to soft-link CoreSuggestionsInternals: %s
Start
AddCustomResponses
Completed
Returning nil because message length exceeds maximum length %ld)
Cannot predict for locale %@ using model with language %@
Could not featurize (prediction for language %@ not supported?)
Could not predict score (prediction for language %@ not supported?)
QuickResponses - trigger: %@, score: %f
QuickResponsesForMessage
SGQuickResponses: attempted to register a canned response but not using QuickResponses.
SGQuickResponses: attempted to register a response but language is nil.
SGQuickResponses: attempted to register a response but config at %@ is nil (language %@ not supported?).
SGQuickResponses: attempted to register a canned response at position %@ that is not likely to have come from QuickResponses.
SGQuickResponses: attempted to register displayed responses with 0 responses.
SGQuickResponses: attempted to register displayed responses but language is nil.
SGQuickResponses: attempted to register displayed responses but config is nil (language %@ not supported?).
SGQuickResponses: attempted to register displayed responses but personalization is disabled.
SGQuickResponses: dynamic label (score index %tu) should have one semantic class (count - %tu)!
SGQuickResponses: dynamic label (score index %tu) should have one reply text per semantic class (count - %tu)!
SGQuickResponses: Could not find trigger for dynamic label %@
SGQuickResponses: No name found for thirdparty dynamic label: %@
Required model file(s) not specified.
Could not find inference model (an error occurred, or possibly prediction for language %@ not supported)
QuickResponses: No message was passed in.
QuickResponses: Message length 0 passed in, ignoring.
QuickResponses: No locale was passed in.
QuickResponses: No language was detected from the message.
No transformer instance for model %@ in language %@ and mode %@ at path %@
Failed to locate assets resource %s
Failed to load model file resource %s, with type:%@, modelEntity:%@, mode:%lu, language:%@
config not found for language %@ and plist path %@
missing subModelKeyString in espresso model name: %s
Unknown model name: %s
Row returned in deltaForResponsesOnRow was null, continuing to iterate as best effort
SGQuickResponsesEngagementDeltas displayed value %lld is out of range for int32_t, casting to boundary value
SGQuickResponsesEngagementDeltas selected value %lld is out of range for int32_t, casting to boundary value
SGQuickResponsesEngagementDeltas matched value %lld is out of range for int32_t, casting to boundary value
Language in deltaForResponsesOnRow was null, continuing to iterate as best effort
SelectCustomResponseRows
SortCustomResponses
DedupeCustomResponses
RemoveProfaneCustomResponses
SGQuickResponsesStore: Unexpected null value for custom_responses.reply
SGQuickResponsesStore: Unexpected null value for custom_responses.prompt_embedding
SGQuickResponsesStore: mis-matched dimensions (a possible plist error) between embedding and densePromptEmbedding in store: %tu v,s. %tu
ComputeCustomResponseDistance
SingleCustomResponseRow
SGQuickreponsesStore: Unexpected null value for custom_responses.reply
SGQuickResponsesStore: Unexpected null value for custom_responses.language
SGQuickResponsesStore: Unexpected null value for custom_responses.recipient
SGQuickResponsesStore write error: %@
SGQuickResponsesStore read error: %@
Added message id already in conversation. conversation id = %@
Most recent message in conversation turns does not match specified current message.
SGLanguageDetection: mismatched lowercase rangeEnd %d, stringEnd %d / original rangeEnd %d, stringEnd %d
SGLanguageDetection: lowercase tokenRange is loc %d, len %d but original range is loc %d, len %d
SGLanguageDetection: strange! lowercase is loc %d, len %d but original is loc %d, len %d
SGLanguageDetection: possible problem! lowercase '%@' strlen %d and original '%@' strlen %d
SGLanguageDetection: original len %d is longer than the lowercased len %d in locale %@, detected %@
SGLanguageDetection: lowercase len %d, range loc %d / len %d found no range in original len %d
Error loading model plist %@: %@
Error deserializing model plist %@: %@
Failed to retrieve message events from CoreDuet. Error: %@
Failed to soft-link IMFoundation: %s
SGQuickResponsesDatabase not migrating, too many attempts (%d)
SGQuickResponsesDatabase migrating db
SGQuickResponsesDatabase could not perform migrations (device locked?), try again later
SGQuickResponsesDatabase migrations failed, cannot use database
SGQuickResponsesDatabase has a future schema version, cannot use database
SGQuickResponsesDatabase got unexpected migration result of 'step completed', will not use database
SGQuickResponsesDatabase failed to remove corruption marker at %@: %@
SGQuickResponsesDatabase: Unable to create directory for database
SGQuickResponsesDatabase: Migrations failed
SGQuickResponsesDatabase: Unable to open existing database: %@
SGQuickResponsesDatabase: Unable to initialize database.
SGModelHyperparameters
SGQuickResponsesClassificationParameters
SGQuickResponsesPredictionParameters
SGQuickResponsesReplyModel
SGQuickResponsesReplies
SGCustomResponsesParameters
SGQuickResponsesConfig
SGQuickResponsesConfigDictionary
SGModelAsset
SGNestedArray
SGQuickResponsesReplyOption
SGQuickResponsesPersonalization
SGStringPreprocessingTransformer
PMLTransformerProtocol
PMLPlistAndChunksSerializableProtocol
NSObject
SGStringPreprocessor
SGPipelineTransformer
SGQuickResponse
SGQuickResponsesInference
SGQuickResponsesModel
SGModelSampler
SGQuickResponsesTransformerInstance
SGQuickResponsesModelRules
SGQuickResponsesStore
SGQuickResponsesEngagementDeltas
NSSecureCoding
NSCoding
SGQuickResponsesRecords
SGQuickResponsesReplyRecord
SGLazyInit
SGConversationTracker
SGConversationTurn
SGConversationTurnProtocol
NSCopying
SGStringLabelingTransformer
SGTextLabelTransformer
SGQuickResponsesClassificationModel
SGLanguageDetection
0 0@
0 3C
SGDefaultAssets
SGMessagePair
SGMessagePairIterator
SGModelSource
SGModelFeatures
SGRandomization
SGTokenJoiningTransformer
SGSelectiveTransformer
SGQuickResponsesRanking
SGQuickResponsesDistributingCount
SGQuickResponsesClassScore
SGQuickResponsesScoring
SGQuickResponsesCategoryScore
SGQuickResponsesDatabase
_PASDatabaseMigrationProtocol
_featuresModelId
_featuresVersion
_vectorLength
_characterNGramRange
_tokenNGramRange
initWithDictionary:
sessionDescriptorForLanguage:
featuresModelId
featuresVersion
characterNGramRange
tokenNGramRange
vectorLength
.cxx_destruct
descriptorForName:version:locale:
initWithFormat:
length
unsignedIntegerValue
numberAssertedForKey:
stringAssertedForKey:
_positiveSamplingRate
_dynamicLabelSamplingRate
_negativeSamplingRate
_maxReplyLength
_maxPromptLength
_maxPromptWindowSeconds
_promptJoiningString
initWithDictionary:language:
positiveSamplingRate
dynamicLabelSamplingRate
negativeSamplingRate
maxReplyLength
maxPromptLength
maxPromptWindowSeconds
promptJoiningString
integerValue
dictAssertedForKey:
doubleValue
_isPersonalizationDisabled
_isReplyTextRandomized
_isPerCategory
_dynamicLabelsEnabled
_hasNegativeClass
_weightForCategoryAverage
_weightForCategoryMax
_weightForIndividualModel
_classDiscount
_responsesBonus
_minToShowThreshold
_defaultResponsesToReturn
_responsesToShowAtTopForDiversity
_personalizationExplorationFactor
_personalizationDisplayedPseudocount
_personalizationSelectedPseudocountPerSemanticClass
_modelTypeName
_subModelKeyString
_negativeClassMaximumToPredict
isPersonalizationDisabled
isReplyTextRandomized
isPerCategory
weightForCategoryAverage
weightForCategoryMax
weightForIndividualModel
classDiscount
responsesBonus
minToShowThreshold
defaultResponsesToReturn
responsesToShowAtTopForDiversity
personalizationExplorationFactor
personalizationDisplayedPseudocount
personalizationSelectedPseudocountPerSemanticClass
modelTypeName
subModelKeyString
dynamicLabelsEnabled
hasNegativeClass
negativeClassMaximumToPredict
objectForKeyedSubscript:
boolValue
_dynamicLabel
_semanticClassIndex
_semanticClasses
_selectedPseudocounts
_scoreWeight
_category
initWithDictionary:index:
semanticClassIndex
semanticClasses
selectedPseudocounts
scoreWeight
category
dynamicLabel
semanticClassesForArray:
arrayAssertedForKey:
initWithObjects:
addObject:
countByEnumeratingWithState:objects:count:
_models
_styleGroups
_replyTexts
_semanticClassReplyTextStrings
_semanticClassSelectedPseudocounts
_semanticClassParent
_styleGroupParent
_replyTextParent
_categoryModels
_categorySemanticClasses
_categoryStyleGroups
_semanticClassStyleGroups
_semanticClassReplyTexts
_styleGroupReplyTexts
_replyTextsSet
initWithArray:
models
styleGroups
replyTexts
semanticClassReplyTextStrings
semanticClassSelectedPseudocounts
semanticClassParent
styleGroupParent
replyTextParent
categoryModels
categorySemanticClasses
categoryStyleGroups
semanticClassStyleGroups
semanticClassReplyTexts
styleGroupReplyTexts
replyTextsSet
nestedArrayFromFlatArray:nestedIndexes:
selectedPseudocountsFromModels:
subclassesFromClasses:subclassArray:
categoryModelsFromModels:
parentArraysFromNestedArray:models:
flattenedArraysFromNestedArray:
objectAtIndexedSubscript:
count
indexedArraysFromNestedArray:
nestedArrayFromModels:
replyModelsForArray:
isZeroBasedAndContiguous:
modelSemanticClassesFromModels:
addObjectsFromArray:
initWithUnsignedInteger:
lastObject
enumerateObjectsUsingBlock:
valueForKeyPath:
allObjects
_isCustomResponsesEnabled
_allowProfanity
_useNonNegativeClassesOnly
_filterBatchSize
_minimumTimeIntervalSecs
_minimumDistinctRecipients
_minimumReplyOccurences
_timeDecayFactor
_countExponent
_distanceThreshold
_minDecayedCountForPruning
_minDecayedCountForPrediction
_maxStoredMessages
_maxStoredCustomResponses
_maxRowsInPerRecipientTable
_knowledgeStoreQueryLimit
_maxReplyGapSecs
_usageSpreadExponent
_compatibilityVersion
isCustomResponsesEnabled
filterBatchSize
minimumTimeIntervalSecs
minimumDistinctRecipients
minimumReplyOccurences
timeDecayFactor
countExponent
distanceThreshold
minDecayedCountForPruning
minDecayedCountForPrediction
maxStoredMessages
maxStoredCustomResponses
maxRowsInPerRecipientTable
knowledgeStoreQueryLimit
maxReplyGapSecs
usageSpreadExponent
allowProfanity
compatibilityVersion
useNonNegativeClassesOnly
_modelHyperparameters
_preprocessingMethods
_labels
_replies
_classificationParams
_predictionParams
_customResponsesParameters
_language
_mode
_sessionDescriptor
initWithLanguage:mode:plistPath:
initWithLanguage:mode:dictionary:
modelHyperparameters
preprocessingMethods
labels
replies
classificationParams
predictionParams
customResponsesParameters
language
mode
sessionDescriptor
objectAssertedForKey:
objectForKey:
registerOnUpdateBlock:
_invokeOnUpdateBlock
_reset
_assetWithName:andLoadBlock:
rules
mappings
quickResponses
metricsConfig
signatureRules
dpRecorderRules
nameDetectorRules
dictionaryWithPlistFilename:
asset
registerUpdateHandler:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:
pathForResource:ofType:
bundleForClass:
filesystemPathForAssetDataRelativePath:
unlock
null
setObject:forKey:
lock
removeAllObjects
copy
bundleWithIdentifier:
traversalWithNestedArray:depthCallback:itemCallback:
setObject:atIndexedSubscript:
reverseObjectEnumerator
removeLastObject
initWithInteger:
_position
_ucb
initWithPosition:records:actualOptionsDisplayedCount:imputedOptionsDisplayedCount:imputedOptionsDisplayed:config:
compare:
position
isEqualToNumber:
initWithDouble:
ucbCombinedForSelected:displayed:actualOptionsDisplayed:matched:imputedDisplayed:imputedOptionsDisplayed:explorationFactor:
init
ucbTunedVarianceForMean:displayed:totalDisplayed:
ucbWithMean:varianceOfMean:explorationFactor:
ucbCombinedWithMeanA:meanB:varianceA:varianceB:explorationFactor:
sortedReplyOptionsForRecords:config:
totalDisplayedCountForRecords:
imputedDisplayedForRecords:config:
sortUsingSelector:
_store
_rng
initWithStore:withRng:
replyTextsForSemanticClass:responseCount:config:
sortedReplyPositionsForSemanticClass:config:
registerDisplayedResponses:config:
registerSelectedResponse:config:
registerWrittenResponse:config:
containsObject:
stringByTrimmingCharactersInSet:
whitespaceAndNewlineCharacterSet
augmentRecords:selectedPseudocounts:config:
deduplicatedReplyTextsForReplyPositions:semanticClass:responseCount:config:
firstObject
_methodNames
_methodValues
_methodSignatureNoValue
_methodSignatureWithValue
transform:
toPlistWithChunks:
initWithPlist:chunks:context:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
initWithMethods:
transformBatch:
selectorForMethod:preprocessor:
applySelector:preprocesor:string:value:
isEqualToStringPreprocessingTransformer:
dictionaryWithObjects:forKeys:count:
substringWithRange:
rangeOfString:
methodForSelector:
mutableCopy
initWithCapacity:
_buffer
bufferPtrWithMinimumLength:
replace:withBuffer:toIndex:
removeCharacters:withExceptions:fromString:
characterSetFromString:
lowerCase:
separateCharacter:withValue:
removeCharacters:withValue:
replaceCharactersWithSpaces:withValue:
removeNonASCII:
removePunctuation:
removeSpacingModifierLetters:
removeDuplicateWhitespace:
mergeNumbersSeparatedByASCIISpace:
replaceNumbersWithString:withValue:
mergeTwoOrMoreConsecutiveCharacters:
mergeAnyConsecutiveCharacters:
replaceLinksWithString:withValue:
trimWhitespace:
removeNonBasicMultilingualPlane:
decomposeStringWithCompatibilityMapping:
decomposeAndRecomposeStringWithCompatibilityMapping:
stripCombiningMarks:
stripNonBaseCharacters:
removeNonBaseCharacters:
replaceAllWhitespaceWithSpaces:
removePunctuationWithExceptions:withValue:
removeSymbols:
removeSymbolsWithExceptions:withValue:
transformFullwidthToHalfwidth:
transformFullwidthToHalfwidthASCII:
replaceContactNamesWithString:withValue:
addToStart:withValue:
addToEnd:withValue:
appendString:
insertString:atIndex:
replaceCharactersInRange:withString:
range
detectNames:algorithm:
initWithLanguage:
componentsSeparatedByString:
initWithCharactersNoCopy:length:freeWhenDone:
symbolCharacterSet
punctuationCharacterSet
nonBaseCharacterSet
characterSetWithRange:
getCharacters:range:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
characterIsMember:
characterAtIndex:
decimalDigitCharacterSet
invertedSet
characterSetWithCharactersInString:
mutableBytes
increaseLengthBy:
signatureWithObjCTypes:
withMethods:
_transformers
initWithTransformers:
transform:stopAfterTransformerWithIndex:
isEqualToPipelineTransformer:
transformers
setTransformers:
readObjectWithPlist:chunks:context:
initWithClassNameKey:
writeToPlistWithObject:andChunks:
withTransformers:
_isCustomResponse
_text
_lang
_replyTextId
_styleGroupId
_semanticClassId
_modelId
_categoryId
_proactiveTrigger
initWithText:lang:replyTextId:styleGroupId:semanticClassId:modelId:categoryId:isCustomResponse:
initWithProactiveTrigger:
initWithText:lang:replyTextId:styleGroupId:semanticClassId:modelId:categoryId:isCustomResponse:proactiveTrigger:
text
lang
replyTextId
styleGroupId
semanticClassId
modelId
categoryId
isCustomResponse
proactiveTrigger
_model
_ranking
_personalization
initWithModel:ranking:personalization:rng:store:
initWithLanguage:chunkPath:plistPath:espressoBinFilePath:
_getMergedPromptForMessage:conversationTurns:
quickResponsesForMessage:maximumResponses:conversationHistory:context:time:language:locale:recipients:
quickResponsesForMessage:maximumResponses:conversationHistory:context:time:language:locale:recipients:useContactNames:
replyTextsFromSemanticClasses:config:
replyTextIdsForSemanticClass:responseCount:config:
randomizedReplyTextIdsForSemanticClass:responseCount:config:
quickResponsesFromReplyTextIds:config:
addCustomResponsesToCommonResponses:language:locale:recipient:modelScores:maxResponses:customResponsesParams:
subarrayWithRange:
arrayWithObject:
dedupe:bucketer:resolver:
normalizeStringForDeduping:
bucketerWithMapping:
arrayByAddingObjectsFromArray:
next
enumerateKeysAndObjectsUsingBlock:
setObject:forKeyedSubscript:
normalizeLabelScores:
removeObjectsAtIndexes:
first
arrayWithObjects:count:
proactiveTriggerForDynamicLabel:context:language:useContactNames:
dynamicLabelForScore:config:
second
dynamicIndicesAndTopIsDynamic:config:
numberWithDouble:
isEqualToString:
languageForLocale:withLanguageDetectionForMessage:
stringsForQuickResponses:
quickResponsesForMessage:context:time:maxResponses:locale:recipientHandles:chunkPath:plistPath:espressoBinFilePath:lexiconFilePath:
quickResponsesForMessage:conversationTurns:maxResponses:localeIdentifier:recipientHandles:chunkPath:plistPath:espressoBinFilePath:useContactNames:
proactiveTriggerForDynamicLabel:context:language:
registerDisplayedQuickResponses:plistPath:
registerResponse:position:isCanned:isUsingQuickResponses:locale:plistPath:
tupleWithFirst:second:
addIndex:
lowercaseString
_transformer
config
predict:
featuresOf:
labelOf:
shouldSampleForLabel:isDynamicLabel:
initWithLazyMultiLabelModel:language:mode:plistPath:
setTransformer:
outputDimension
transformerInstanceForLanguage:mode:plistPath:
sampler
labelOf:withLabeler:
labeler
featuresOf:withFeaturizer:source:
source
featurizer
vectorWithConstantColumn
configForLanguage:mode:plistPath:
featuresOf:inLanguage:andMode:
labelOf:inLanguage:
shouldSampleForLabel:inLanguage:isDynamicLabel:
modelForLanguage:mode:chunkPath:plistPath:
modelForEntity:type:mode:language:class:chunkPath:plistPath:
transformerInstanceForLanguage:mode:
newTransformerInstanceForLanguage:mode:plistPath:
setGlobalTransformerForTesting:
handleFailureInFunction:file:lineNumber:description:
stringWithUTF8String:
setCountLimit:
UTF8String
classifierWithEspressoModelFile:intercept:
_positiveRate
_dynamicLabelRate
_negativeRate
initWithPositiveRate:dynamicLabelRate:negativeRate:rng:
nextFloat
_config
_featurizer
_source
_labeler
_sampler
initWithConfig:featurizer:source:labeler:sampler:
areModelsAvailableInLanguage:
_readerWriter
initInDirectory:inMemory:withMigration:
initInDirectory:inMemory:withMigration:forTools:
frailReadTransaction:
frailWriteTransaction:
recordsForResponses:language:
addDisplayedToResponses:language:
addSelectedToResponse:language:
addWrittenToResponse:language:isMatch:
_addCustomResponseToDb:reply:language:embedding:sentAt:recipient:messagesRowId:onError:
_incrementCustomResponseInDb:reply:language:embedding:sentAt:recipient:messagesRowId:onError:
addingMessageExceedsBatchLimit:tableLimit:message:language:prompt:recipientHandle:sentAt:
embeddingForPrompt:language:embedder:
recordKnownCustomResponsesInBatchWithEmbedder:compatibilityVersion:
designateFilteringBatch:
filterBatchWithMinimumDistinctRecipients:minimumReplyOccurences:
getProfanityLocale
getModelVersion
setProfanityLocale:andModelVersion:
resetDbIfNeededCompareWithCompatibilityVersion:
recordMessagesInBatchAsCustomResponsesWithEmbedder:compatibilityVersion:
calculateUsageSpreads
prunePerRecipientTableWithMaxRows:
nearestCustomResponsesToPromptEmbedding:recipient:limit:withinRadius:responseCountExponent:minimumDecayedCount:compatibilityVersion:language:locale:allowProfanity:minimumTimeInterval:usageSpreadExponent:
decayAllCustomResponsesWithDecayFactor:filteringBatchSize:
countCustomResponsesAfterPruningWithMinimumCountThreshold:
countCustomResponsesAfterTruncatingTable:
deltaForResponsesOnRow:completion:
destroyInstanceInMemory
getPerRecipientCountForReply:language:recipient:
getUsageSpreadForReply:language:
prepAndRunQuery:onPrep:onRow:onError:
getDoubleForColumnAlias:
bindNamedParam:toNSString:
runWithLockAcquired:
isInMemory
initWithLangResponse:displayed:selected:matched:
_displayed
_selected
_matched
_response
supportsSecureCoding
encodeWithCoder:
initWithCoder:
isEqualToQuickResponsesEngagementDeltas:
response
displayed
selected
matched
decodeInt32ForKey:
decodeObjectOfClass:forKey:
encodeInt32:forKey:
encodeObject:forKey:
getInt64ForColumnAlias:
getNSStringForColumnAlias:
getIntegerForColumnAlias:
bindNamedParam:toInt64:
bindNamedParam:toDouble:
bindNamedParam:toNSData:
data
scaleInPlaceWithFactor:
initWithData:
getNSDataForColumnAlias:
isProfane:inLocales:
sortUsingComparator:
numberWithFloat:
cosineDistanceFrom:
scaleInPlaceWithInversedFactor:
initWithNumbers:
numberWithLong:
sortUsingDescriptors:
initWithKey:ascending:
numberWithLongLong:
sumInPlaceWithVector:
preferredLanguages
timeIntervalSinceReferenceDate
substringFromIndex:
substringToIndex:
keyWithLanguage:andResponse:
initWithReplyRecords:totalOpportunities:totalDisplayed:totalSelected:totalMatched:totalUnmatched:
_replyRecords
_totalOpportunities
_totalDisplayed
_totalSelected
_totalMatched
_totalUnmatched
replyRecords
totalOpportunities
totalDisplayed
totalSelected
totalMatched
totalUnmatched
getInt64ForColumnName:table:
_langResponse
initWithDisplayed:selected:matched:
langResponse
userInfo
initWithGuardedData:
closePermanently
sharedInstance
instanceInMemory
profanityInTokens:forLocaleIdentifier:
tokenize:
_initializer
_destructor
_cachedObject
initWithInitializer:destructor:
getObject
peekAtCachedObject
destroyCachedObject
dealloc
_conversations
conversationForSenderID:
addMessage:
clear
removeObjectAtIndex:
indexOfObjectWithOptions:passingTest:
initWithCountLimit:
instance
sgConversationTurnsForStrings:
getMergedPromptForMessage:conversationTurns:maxPromptLength:maxPromptWindowSeconds:promptJoiningString:
timeIntervalSinceDate:
sortedArrayWithOptions:usingComparator:
dateWithTimeIntervalSince1970:
timeIntervalSince1970
date
_senderID
_timestamp
isEqualToConversationTurn:
senderID
timestamp
copyWithZone:
initWithText:senderID:timestamp:
_labelMapping
initWithLabelStrings:
initWithLabelMapping:
isEqualToStringLabelingTransformer:
convertLabelsToMapping:
withLabelStrings:
numberWithUnsignedLong:
objectAtIndex:
_preprocessor
initWithMethods:withLabelStrings:
initWithPreprocessor:labeler:
isEqualToTextLabelTransformer:
_preprocessedLabelsWithLabels:andPreprocessor:
withMethods:withLabelStrings:
newTransformerInstanceForLanguage:withDictionary:withSeed:forMode:
featurizerWithMethods:bucketSize:characterNGramRange:tokenNGramRange:
newTransformerInstanceForConfig:seed:useSeed:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:withIntercept:
languageForLocaleIdentifier:
defaultLanguage
detectLanguageFromText:
detectLanguageFromText:withMaxLength:withMaxTags:withMinimumCount:withMinimumAgreement:
detectLanguageFromLanguageTags:
detectLanguageFromLanguageTags:withMinimumCount:withMinimumAgreement:
dominantLanguageTagFromText:
dominantLanguageTagFromText:withMaxLength:withMaxTags:withMinimumCount:withMinimumAgreement:
dominantLanguageTagFromLanguageTags:
dominantLanguageTagFromLanguageTags:withMinimumCount:withMinimumAgreement:
languageTagsFromText:withMaxLength:withMaxTags:
tokenRangeForText:maxTruncatedLength:tagger:taggerOptions:prevTextTokenMaxRange:originalLengthShortfall:lowercaseText:lowercaseRange:
logMatchingForRange:lowercaseRange:text:lowercaseText:
dominantLanguageForString:
enumerateTagsInRange:unit:scheme:options:usingBlock:
setString:
tagAtIndex:unit:scheme:tokenRange:
string
rangeOfCharacterFromSet:
uppercaseLetterCharacterSet
localizedLowercaseString
initWithTagSchemes:options:
currentLocale
countForObject:
stringByReplacingOccurrencesOfString:withString:
filesystemPathForFilename:
quickResponsesPrediction
dictionaryWithPlistAssetPath:
propertyListWithData:options:format:error:
initWithContentsOfFile:options:error:
pathExtension
stringByDeletingPathExtension
_reply
_prompt
_handle
_sentAt
initWithReply:prompt:handle:sentAt:
reply
setReply:
prompt
setPrompt:
handle
setHandle:
sentAt
setSentAt:
_messageEvents
_messageEventCount
_messageEventIndex
_maxReplyGap
_done
_attachmentCharacterString
_breadcrumbCharacterString
_latestPromptForHandle
_latestProcessedDate
handleFromConversationId:
initWithStartDate:maxBatchSize:maxReplyLength:maxReplyGap:
removeBreadcrumbsFromMessage:
nextMessagePair
isDoneIterating
latestProcessedDate
direction
content
conversationIdentifier
intent
interaction
startDate
executeQuery:error:
setDeviceIDs:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
sortDescriptorWithKey:ascending:
appIntentsStream
predicateForEventsWithSourceID:bundleID:
intentsSourceID
predicateWithFormat:
andPredicateWithSubpredicates:
predicateForObjectsWithMetadataKey:inValues:
intentClass
knowledgeStore
dictionary
_modelClass
initWithSessionDescriptor:modelClass:
setSessionDescriptor:
modelClass
setModelClass:
_vector
initWithSource:vector:
vector
shuffleMutableArray:withRng:
shuffleMutableArray:inRange:withRng:
shuffleMutableArray:inApproxEqualEpsilon:withValueBlock:withRng:
shuffledSamplingWithoutReplacementForK:fromN:withRng:
exchangeObjectAtIndex:withObjectAtIndex:
_separator
initWithSeparator:
isEqualToSGTokenJoiningTransformer:
separator
setSeparator:
componentsJoinedByString:
withSeparator:
_inputKey
initWithTransformer:appliedToInputKey:
isEqualToSGSelectiveTransformer:
transformer
inputKey
setInputKey:
withTransformer:appliedToInputKey:
initWithSeed:
resultsForModelScores:responseCount:config:
classResultsForScores:numResponses:responseCount:config:
indexesForScores:numResponses:
semanticClassesForResults:scores:numResponses:config:
semanticClassesForCategory:responseCount:config:
index
numResponsesForScores:responseCount:config:
validClassesForClassCount:responseCount:config:
responsesToFillForResponseCount:config:
probsForClasses:withCount:
_value
_index
initWithValue:index:
value
sortedWithUnweightedScores:config:
modelScoresWithUnweightedScores:config:
categoryScoresWithModelScores:config:
_modelCount
_average
_maximum
addScore:
average
maximum
databaseHandle
migrations
queriesToSkipFromEmptyToVersion:
_handleCorruptionWithCheck:path:inMemory:
_performMigrationsWithPath:inMemory:attemptIteration:
migrateDatabases
initWithMigrationObjects:
_openFreshHandleForPath:inMemory:
localizedDescription
removeItemAtPath:error:
truncateDatabaseAtPath:
fileExistsAtPath:isDirectory:
defaultManager
corruptionMarkerPathForPath:
_openAnotherHandleForPath:
stringByAppendingPathComponent:
suggestionsDirectory
sqliteDatabaseWithFilename:contentProtection:errorHandler:error:
initializeDatabase:withContentProtection:newDatabaseCreated:errorHandler:
sqliteDatabaseInMemoryWithError:errorHandler:
fastestEncoding
initWithCharacters:length:
@"NSString"
{_NSRange="location"Q"length"Q}
@24@0:8@16
@16@0:8
{_NSRange=QQ}16@0:8
Q16@0:8
v16@0:8
@32@0:8@16@24
d16@0:8
B16@0:8
@"NSArray"
@32@0:8@16Q24
@"NSSet"
B24@0:8@16
@"SGModelHyperparameters"
@"SGQuickResponsesReplies"
@"SGQuickResponsesClassificationParameters"
@"SGQuickResponsesPredictionParameters"
@"SGCustomResponsesParameters"
@"PMLSessionDescriptor"
@40@0:8@16Q24@32
v24@0:8@?16
@32@0:8@16@?24
v40@0:8@16@?24@?32
@"NSNumber"
@64@0:8Q16@24d32d40@48@56
q24@0:8@16
d40@0:8d16d24d32
d56@0:8d16d24d32d40d48
d72@0:8d16d24d32d40d48d56d64
d24@0:8@16
@"SGQuickResponsesStore"
@"_PASRng"
@40@0:8Q16Q24@32
@32@0:8Q16@24
v32@0:8@16@24
@48@0:8@16Q24Q32@40
@40@0:8@16@24@32
@"NSMethodSignature"
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
:32@0:8@16@24
v48@0:8:16@24@32@40
@"NSMutableData"
^S24@0:8Q16
v40@0:8@16^S24Q32
v40@0:8@16@24@32
v24@0:8@16
@"NSDictionary"
@76@0:8@16@24Q32Q40Q48Q56Q64B72
@84@0:8@16@24Q32Q40Q48Q56Q64B72@76
@"SGQuickResponsesModel"
@"SGQuickResponsesRanking"
@"SGQuickResponsesPersonalization"
@56@0:8@16@24@32@40@48
@48@0:8@16@24@32@40
@80@0:8@16Q24@32@40@48@56@64@72
@84@0:8@16Q24@32@40@48@56@64@72B80
@72@0:8@16@24@32@40@48Q56@64
@96@0:8@16@24@32Q40@48@56@64@72@80@88
@84@0:8@16@24Q32@40@48@56@64@72B80
@44@0:8@16@24@32B40
v56@0:8@16@24B32B36@40@48
@"<PMLMultiLabelClassifierProtocol>"
@"SGQuickResponsesTransformerInstance"
B28@0:8@16B24
@48@0:8@16@24Q32@40
@40@0:8@16@24Q32
B36@0:8@16@24B32
@48@0:8@16Q24@32@40
@72@0:8@16@24Q32@40#48@56@64
@48@0:8d16d24d32@40
@"SGQuickResponsesConfig"
@"<PMLTransformerProtocol>"
@"SGModelSource"
@"SGModelSampler"
@"_PASLock"
@32@0:8@16B24B28
@36@0:8@16B24B28B32
B24@0:8@?16
v36@0:8@16@24B32
v80@0:8@16@24@32@40d48@56q64@?72
B72@0:8Q16Q24@32@40@48@56@64
@40@0:8@16@24@?32
v32@0:8@?16Q24
v24@0:8Q16
v32@0:8Q16Q24
v32@0:8@16q24
B24@0:8Q16
@92@0:8@16@24Q32f40f44f48Q52@60@68B76d80f88
v32@0:8d16Q24
Q24@0:8d16
Q24@0:8Q16
B32@0:8@?16@?24
d40@0:8@16@24@32
d32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8@16i24i28i32
i16@0:8
@64@0:8@16d24d32d40d48d56
@40@0:8d16d24d32
B32@0:8@16@24
@32@0:8@?16@?24
@"_PASLRUCache"
@56@0:8@16@24Q32d40@48
@"NSDate"
B24@0:8@"<SGConversationTurnProtocol>"16
@"NSDate"16@0:8
@24@0:8^{_NSZone=}16
@"SGStringPreprocessingTransformer"
@"SGStringLabelingTransformer"
@48@0:8@16@24Q32Q40
@64@0:8@16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@36@0:8@16Q24B32
@56@0:8@16Q24Q32Q40d48
@40@0:8@16Q24d32
@40@0:8@16Q24Q32
{_NSRange=QQ}88@0:8@16Q24@32Q40Q48Q56@64{_NSRange=QQ}72
v64@0:8{_NSRange=QQ}16{_NSRange=QQ}32@48@56
@"NSMutableDictionary"
@48@0:8@16Q24Q32d40
@32@0:8@16#24
v24@0:8#16
@"PMLSparseVector"
v48@0:8@16{_NSRange=QQ}24@40
v48@0:8@16d24@?32@40
@24@0:8Q16
Q40@0:8Q16Q24@32
Q32@0:8Q16@24
@32@0:8d16Q24
v24@0:8d16
@"_PASSqliteDatabase"
@"_PASSqliteDatabase"16@0:8
@"NSDictionary"16@0:8
@"NSArray"24@0:8^I16
@24@0:8^I16
B32@0:8B16@20B28
B32@0:8@16B24i28
@28@0:8@16B24
