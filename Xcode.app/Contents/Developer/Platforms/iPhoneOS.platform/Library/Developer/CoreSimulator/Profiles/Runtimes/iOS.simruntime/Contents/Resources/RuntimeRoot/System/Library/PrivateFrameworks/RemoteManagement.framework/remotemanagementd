@(#)PROGRAM:remotemanagementd  PROJECT:RemoteManagement-2.0
v8@?0
com.apple.remotemanagementd
daemon
T@"NSObject<OS_os_log>",R
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.remotemanagement.config
com.apple.remotemanagement.configs
v28@?0I8Q12@"NSObject<OS_xpc_object>"20
v12@?0i8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
activationEngine
managementSourceObjectID
T@"NSManagedObjectID",R,N,V_managementSourceObjectID
context
T@"NSManagedObjectContext",R,N,V_context
none
(%K == %@) && (%K == %d)
managementSource
loadState
declarationType
(%K == %@) && ((%K == NULL) || (%K == %d))
activation.managementSource
configuration
configuration.loadState
(%K == %@) && (%K == %d) && (%K IN %@)
identifier
assetIdentifier
configuration.managementSource
asset
asset.loadState
(%K == %@) AND ((%K == %d) OR ((%K != NULL) AND (%K.%K == YES)))
inactive
predicateDescription
configurationReferences
predicateDescription_
T@"NSData",&,D,N
T@"NSSet",&,D,N
T@"RMPredicateDescription",&,N
state
T@"RMActivationPayloadState",&,D,N
configurationIdentifier
T@"NSString",C,N
Ts,N
T@"RMManagementSource",&,N
T@"NSData",R,C,N
T@,R,N
inactiveReasons
active
TB,R,N
TB,D,N
inactiveReasons_
T@"NSData",C,D,N
activation
T@"RMActivationPayload",&,D,N
T@"NSArray",C,N
prefetch
assetReferences
T@"RMAssetPayloadState",&,D,N
(not present)
T@"NSString",C,D,N
T@"RMConfigurationPayload",&,D,N
T@"RMAssetPayload",&,D,N
error
T@"NSDictionary",&,D,N
retryAfterDate
T@"NSDate",C,D,N
Ts,D,N
deviceAuthenticationCredential
X-Apple-RM-Signature-Data
X-Apple-RM-Signature-Certificates
v32@?0^{__SecKey=}8@"NSArray"16@"NSError"24
genericAuthenticationCredential
%@ %@
%@="%@"
1.0.0
status
T@"RMModelStatusManagementClientCapabilities",R,N,V_status
versionHash
T@"NSString",R,N,V_versionHash
client
conduit
engine
com.apple.remotemanagementd.client
v16@?0@"NSError"8
v20@?0B8@"NSError"12
 only if needed
com.apple.remotemanagementd.needs-syncing
managementSourceIdentifier
T@"NSString",R,N,V_managementSourceIdentifier
T@"<RMConduit>",&,N,V_conduit
commandEngine
T@"RMCommandEngine",&,N,V_commandEngine
T@"RMActivationEngine",&,N,V_activationEngine
statusEngine
T@"RMStatusEngine",&,N,V_statusEngine
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
delegate
T@"<RMClientDelegate>",W,N,V_delegate
%@/%@
supportedKeyPaths
T@"NSSet",R,N
sharedController
T@"RMClientCapabilitiesController",R,N
clientCapabilitiesVersionHashByChannelType
T@"NSDictionary",R,N,V_clientCapabilitiesVersionHashByChannelType
subscribedStatusUpdater
T@"RMSubscribedStatusKeyPathUpdater",&,N,V_subscribedStatusUpdater
T@"<RMClientCapabilitiesControllerDelegate>",W,N,V_delegate
clientController
com.apple.remotemanagement.accountsChanged
com.apple.remotemanagement.cloudConfigAvailable
ClientController
com.apple.RemoteManagement.RMClientController
v32@?0@"NSString"8@"NSManagedObjectID"16^B24
com.apple.RemoteManagement.syncing-accounts
(%K != NULL)
accountIdentifier
v24@?0@"NSString"8^B16
v24@?0@"NSString"8@"NSError"16
(%K != NULL) AND (%K == YES) AND (NOT (%K IN %@))
enrolled
com.apple.RemoteManagement.checking-cloud-config
Device Channel
v32@?0@"NSString"8@"RMClient"16^B24
T@"RMClientController",R,N
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
processingClientStateChanges
T@"NSMutableSet",&,N,V_processingClientStateChanges
clientByManagementSourceIdentifier
T@"NSMutableDictionary",R,N,V_clientByManagementSourceIdentifier
http
https
file
cloudConfigController
HasCloudConfigBeenChecked
CloudConfigEnrollmentURL
ConfigurationURL
MDMProtocolVersion
DEP.plist
v24@?0@"NSError"8@"NSDictionary"16
com.apple.remotemanagementd.command-engine.syncing
v52@?0@"NSString"8s16@"NSDictionary"20@"NSArray"28@"NSArray"36@"NSError"44
(%K == %@) && (%K == %@)
%K == %@
executingCommands
TB,N,V_executingCommands
state.status
T@"RMCommandPayloadState",&,D,N
command
T@"RMCommandPayload",&,D,N
reasons
T@"NSArray",C,D,N
result
T@"NSDictionary",C,D,N
modifiedDate
lastReceivedPushTimestamp
lastReceivedCommandToken
lastReceivedDeclarationsToken
lastReceivedOrganizationDetailsToken
lastReceivedServerCapabilitiesToken
lastReceivedServerTokensTimestamp
T@"RMConduitState",&,D,N
T@"RMManagementSource",&,D,N
enrollmentToken
errorState
lastProcessedCommandToken
lastProcessedDeclarationsToken
lastProcessedOrganizationDetailsToken
lastProcessedServerCapabilitiesToken
lastReceivedServerTokensFromServerTimestamp
organizationDetails
serverCapabilities
configurationPublisherSubscription
token
TQ,R,N,V_token
configurationTypes
T@"NSSet",R,C,N,V_configurationTypes
T@"RMConfigurationPayloadState",&,D,N
required
configurationPublisher
ConfigurationTypes
com.apple.remotemanagement.private.apps-did-change
management.declarations
XPCEventPublisher
T@"NSObject<OS_xpc_event_publisher>",&,N,V_XPCEventPublisher
T@"<RMConfigurationPublisherDelegate>",W,N,V_delegate
%K == YES
assetReferences.asset
configurationQuerier
(%K != nil) && (%K == %d) && (%K == YES) && (%K in %@)
state.active
persistentContainer
T@"NSPersistentContainer",R,N,V_persistentContainer
configurationStatusQuerier
v32@?0@"NSDictionary"8Q16^B24
<%@ { identifier = %@, token = %@ }>
managementSource.identifier
payload
serverToken
T@"NSString",R,C,N
T@,&,D,N
type
<%@: %p { managementSourceIdentifier = %@, type = %@, identifier = %@, serverToken = %@ }>
T@"NSString",R,C,N,V_managementSourceIdentifier
T@"NSString",R,C,N,V_type
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_serverToken
UniqueDeviceID
SerialNumber
DeviceClass
ProductType
marketing-name
CJcvxERO5v/3IWjDFKZKRw
DeviceBackingColor
DeviceColor
9N7qIucqhr0Cy2/Tk27/hw
DeviceCoverGlassColor
DeviceEnclosureColor
DeviceEnclosureRGBColor
NJsxTSI2WuD+13rxShXX9w
DeviceHousingColor
DeviceRGBColor
DiskUsage
iPad
iPadOS
j9Th5smJpdztHwc+i39zIg
ProductVersion
BuildVersion
currentDevice
T@"RMDevice",R,N
UDID
serialNumber
modelFamily
modelIdentifier
modelMarketingName
colorInfo
T@"NSDictionary",R,N
storageTotalInGB
T@"NSNumber",R,N
operatingSystem
operatingSystemMarketingName
operatingSystemVersion
operatingSystemBuildVersion
deviceIdentity
self_signed_identity_cert.plist
v32@?0^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}8@"NSArray"16@"NSError"24
sharedDeviceIdentity
T@"RMDeviceIdentity",R,N
privateKey
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_privateKey
certificates
T@"NSArray",&,N,V_certificates
extensionConfigurationSubscriberLoader
extensionFinder
com.apple.remotemanagement.service
RMExtensionConfigurationSubscriber
RMExtensionStatusPublisher
B24@?0@"NSExtension"8@"NSDictionary"16
extensionLoader
extensionStatusPublisherLoader
v32@?0@8@"NSXPCConnection"16@"NSError"24
v24@?0@"NSDictionary"8@"NSError"16
OverrideCloudConfig
TestOrganizationID
fileConduit
ServerCapabilities.json
OrganizationDetails.json
OverallStatus.json
Commands
Completed-Commands
Declarations
Subscriptions
Status
Result
Reasons
_Status
json
StatusItems
commands
declarations
v32@?0@"NSString"8@16^B24
T@"<RMFileConduitDelegate>",W,N,V_delegate
T@"RMFileConduitState",&,D,N
T@"RMFileConduitConfig",&,D,N
httpConduit
WWW-Authenticate
Authorization
X-Apple-Request-UUID
test-org-id
Accept
Content-Type
application/json
text/html
User-Agent
RemoteManagementDaemon
Retry-After
DELETE
POST
%@/%@ (%@) %@/%@
v32@?0@"RMModelPayloadBase"8@"NSHTTPURLResponse"16@"NSError"24
activations
configurations
assets
v32@?0@"NSString"8@"RMDeclarationPayload"16^B24
{identifier}
Unexpected status code
Empty Response Body
{channel}
{enrollmenttoken}
, %@="%@"
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
T@"<RMConduitDelegate>",W,N
userAgent
T@"NSString",R,N
persistentHistoryNotifier
T@"RMPersistentHistoryNotifier",&,N,V_persistentHistoryNotifier
session
T@"NSURLSession",&,N,V_session
T@"<RMConduitDelegate>",W,N,V_delegate
%@-%@
en_US_POSIX
EEE, dd MMM yyyy HH:mm:ss Z
T@"RMHTTPConduitState",&,D,N
httpconduitstate
chosenAuthenticationScheme
localRetryAfterDate
numberOfConsecutiveAuthErrors
numberOfConsecutiveErrors
numberOfConsecutiveFailures
pushEnvironment
pushTopic
referralBaseURL
referralCount
serverRetryAfterDate
baseURL
T@"NSURL",C,D,N
checkOutOnRemove
Tq,D,N
conduitConfig
T@"RMHTTPConduitConfig",&,D,N
InternalStateArchiver.PersistentActiveIdentifiers
InternalStateArchiver.CommandAndDeclarationsPersistentHistoryToken
InternalStateArchiver.DeviceStatusByKeyPath
InternalStateArchiver.PushTokenByEnvironmentName
InternalStateArchiver.ClientCapabilitiesByChannelType
sharedArchiver
T@"RMInternalStateArchiver",R,N
T@"NSDictionary",&,N
commandAndDeclarationStatusPersistentHistoryToken
T@"NSPersistentHistoryToken",&,N
deviceStatusByKeyPath
persistentActiveIdentifiers
T@"RMPersistentActiveIdentifiers",&,N
pushTokenByEnvironmentName
internalStatusPublisher
sharedPublisher
T@"RMInternalStatusPublisher",R,N
subscribedStatusKeyPathUpdater
T@"RMSubscribedStatusKeyPathUpdater",&,N,V_subscribedStatusKeyPathUpdater
T@"<RMInternalStatusPublisherDelegate>",W,N,V_delegate
statusIdentifier
statusServerToken
v24@?0@"RMAssetPayloadReference"8^B16
yyyy-MM-dd'T'HH:mm:ssZZZZZ
v32@?0@8@16^B24
dateFormatter
T@"NSDateFormatter",R,N
Name
managementSettings
ManagementSettings.plist
sharedSettings
T@"RMManagementSettings",R,N
settingsURL
T@"NSURL",&,N,V_settingsURL
cachedSettings
T@"NSMutableDictionary",&,N,V_cachedSettings
bootstrapURI
channelType
(%K == %@)
authenticationCredential
user
device
statusSubscriptions
subscribedStatusKeyPaths
accountDescription
T@"RMAuthenticationCredential",&,D,N
T@"RMConduitConfig",&,D,N
T@"NSString",R,C,D,N
com.apple.RemoteManagement.MDMv1Liaison
enrolledInMDMv1
TB,R,N,GisEnrolledInMDMv1
Executed
Echo
Failed
Pending
com.apple.activation
com.apple.asset
com.apple.configuration
com.apple.command
Error.UnknownPayloadKeys
Unknown Payload Keys
UnknownPayloadKeys
Info.Predicate
Identifier
ServerToken
Predicate
Error.PredicateFailed
Domain
Code
Error.MissingAssets
Configuration (%@:%@) is missing assets.
AssetIdentifiers
Error.MissingConfigurations
Activation (%@:%@) is missing configurations.
ConfigurationIdentifiers
Error.InvalidPayload
%@ (%@:%@) has an invalid payload.
Error.MissingState
%@ (%@:%@) is missing state.
Info.NotReferencedByActivation
Info.NotReferencedByConfiguration
Activation
Asset
Configuration
periodicSync
com.apple.remotemanagement.periodic-sync
v16@?0@?<v@?q>8
periodicSyncActivity
T@"NSBackgroundActivityScheduler",&,N,V_periodicSyncActivity
uniqueIdentifiersByConfigurationType
T@"NSDictionary",&,N,V_uniqueIdentifiersByConfigurationType
persistentController
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
v16@?0@"NSMutableDictionary"8
managedObjectModelURL
T@"NSURL",R,N
managedObjectModel
T@"NSManagedObjectModel",R,N
T@"RMPersistentController",R,N
com.apple.remotemanagementd.persistent-history-notifier
B16@?0@"NSPersistentHistoryChange"8
(none)
T@"NSPersistentHistoryToken",&,V_persistentHistoryToken
shouldUsePersistentHistoryToken
TB,R,N,V_shouldUsePersistentHistoryToken
hasStarted
TB,N,V_hasStarted
queryNeeded
TB,N,V_queryNeeded
T@"<RMPersistentHistoryNotifierDelegate>",W,N,V_delegate
ignoredTransactionAuthors
T@"NSSet",C,V_ignoredTransactionAuthors
interestingEntities
T@"NSSet",C,V_interestingEntities
B24@?0@"NSPersistentHistoryTransaction"8@"NSDictionary"16
name
persistentHistoryToken
T@"NSPersistentHistoryToken",C,N,V_persistentHistoryToken
insertedObjectIDs
updatedObjectIDs
updatedPropertiesByObjectID
T@"NSDictionary",R,C,N
deletedObjectIDs
tombstoneByObjectID
predicate
keyPaths
Unknown
<%@: %p { keyPaths = %@, predicate = %@ }>
supportsSecureCoding
TB,R
T@"NSPredicate",R,N,V_predicate
T@"NSArray",R,C,V_keyPaths
T@"NSSet",R,C,N
Error.Unknown
An unknown error occurred: %@
push
com.apple.aps.remotemanagementd.http.apns-dev
com.apple.aps.remotemanagementd.http.apns-prod
PushController
com.apple.remotemanagementd.push
v32@?0@"NSString"8@"APSConnection"16^B24
v32@?0@"NSString"8@"NSSet"16^B24
(%K == %@) && (%K == %@) && (%K == %@)
state.pushEnvironment
state.enrollmentToken
state.pushTopic
T@"RMPushController",R,N
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"<RMPushControllerDelegate>",W,N,V_delegate
(%K != NULL) && (%K != NULL)
Management Sources
Orphaned Entities
Error
%K == nil
(%K == nil) && (%K == nil)
(%K == nil)
securityUtilities
PrivateKey
Certificates
SelfSigned-%@
Apple Inc.
Remote Management
%K == %d
subscription.sourceType
T@"NSManagedObjectContext",&,N,V_context
T@"NSManagedObjectID",&,N,V_managementSourceObjectID
statusQuerier
T@"RMStatusQuerier",&,N,V_statusQuerier
T@"<RMStatusEngineDelegate>",W,N,V_delegate
(%K == %@) && ((%K == NULL) OR (%K != %K))
lastAcknowledgedDate
lastReceivedDate
(%K == %@) AND (SUBQUERY(%K, $statusSubscriptionItem, $statusSubscriptionItem.%K IN %@).@count > 0)
statusSubscriptionItems
subscription.sourceIdentifier
keyPath
%K IN %@
%K == NULL
(%K == NULL) OR (%K != %K)
(%K == %@) AND (%K == %@) AND (%K == %d)
sourceIdentifier
sourceType
(%K == %@) AND (%K == %d)
(%K == %@) AND (%K == %@) AND (%K == YES)
RMExtensionStatusPublisher.KeyPaths
statusPublishers
T@"NSArray",R,N,V_statusPublishers
<%@: %p { extension = %@ }>
extension
T@"NSExtension",R,N,V_extension
v32@?0@"NSString"8Q16^B24
statusKeyPaths
T@"NSSet",R,C,N,V_statusKeyPaths
statusByKeyPath
T@"NSDictionary",R,C,N,V_statusByKeyPath
errorByKeyPath
T@"NSDictionary",R,C,N,V_errorByKeyPath
lastReceivedDateByKeyPath
T@"NSDictionary",R,C,N,V_lastReceivedDateByKeyPath
protocolStatusReport
T@"RMProtocolStatusReport",R,N
v32@?0@"NSString"8@"NSError"16^B24
%@.%ld
items
sourceServerToken
properties
T@"NSString",&,D,N
T@"NSPredicate",&,D,N
subscription
T@"RMStatusSubscription",&,D,N
T@"NSDate",&,D,N
RMSubscribedStatusKeyPathDidChangeNotification
RMUserInfoKeyUpdatedManagementSourceObjectIDs
statusNotificationCenter
sharedUpdater
T@"RMSubscribedStatusKeyPathUpdater",R,N
T@"NSPersistentContainer",&,N,V_persistentContainer
%K BEGINSWITH %@
v32@?0@"NSManagedObjectID"8@"NSSet"16^B24
XPCListenerDelegate
AAACCOUNTS.com.apple.accountsd
com.apple.purplebuddy
com.apple.Preferences
com.apple.private.remotemanagement.account-changes
application-identifier
com.apple.private.remotemanagement
com.apple.private.remotemanagement.configuration-subscriber
com.apple.private.remotemanagement.enrollment
allowedToRun
TB,R,N,V_allowedToRun
v24@?0@"RMManagementChannel"8@"NSError"16
hasCommandLineEntitlement
TB,R,N,V_hasCommandLineEntitlement
hasAccountChangesEntitlement
TB,R,N,V_hasAccountChangesEntitlement
hasConfigurationSubscriberEntitlement
TB,R,N,V_hasConfigurationSubscriberEntitlement
hasEnrollmentEntitlement
TB,R,N,V_hasEnrollmentEntitlement
daemon
RMAdditions
RMCommandExecutor
NSObject
activationEngine
RMActivationEngine
RMActivationPayload
Loading
RMPartialObject
RMActivationPayloadState
RMDeclarationPayloadActivatableState
RMReportDetails
RMAssetPayload
RMAssetPayloadReference
RMAssetPayloadState
deviceAuthenticationCredential
RemoteManagement
RMURLRequestPreparer
genericAuthenticationCredential
RMCapabilities
client
RMClient
RMConduitDelegate
RMStatusEngineDelegate
RMClientCapabilitiesController
RMStatusPublisher
clientController
RMClientController
RMClientDelegate
cloudConfigController
RMCloudConfigController
commandEngine
RMCommandEngine
RMCommandPayload
RMCommandPayloadState
RMConduitConfig
RMConduitState
configurationPublisherSubscription
RMConfigurationEventStreamSubscription
RMConfigurationPayload
RMConfigurationPayloadReference
RMConfigurationPayloadState
configurationPublisher
RMConfigurationPublisher
configurationQuerier
RMConfigurationQuerier
configurationStatusQuerier
RMConfigurationStatusQuerier
RMDeclarationPayload
RMDeclarationUniqueIdentifier
NSCopying
device
RMDevice
deviceIdentity
RMDeviceIdentity
extensionConfigurationSubscriberLoader
RMExtensionConfigurationSubscriberLoader
extensionFinder
RMExtensionFinder
extensionLoader
RMExtensionLoader
extensionStatusPublisherLoader
RMExtensionStatusPublisherLoader
fileConduit
RMFileConduit
RMFileConduitConfig
RMFileConduitState
httpConduit
RMHTTPConduit
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
RMConduit
RMPersistentHistoryNotifierDelegate
RMHTTPConduitConfig
httpconduitstate
RMHTTPConduitState
RMInternalStateArchiver
RMClientCapabilitiesControllerDelegate
RMConfigurationPublisherDelegate
RMInternalStatusPublisherDelegate
RMPushControllerDelegate
internalStatusPublisher
RMInternalStatusPublisher
RMJSONSerialization
managementSettings
RMManagementSettings
RMManagementSource
RMMDMv1Liaison
Error
periodicSync
RMPeriodicSync
RMPersistentActiveIdentifiers
persistentController
RMPersistentController
RMPersistentHistoryNotifier
RMPersistentHistoryNotifierChanges
predicateDescription
RMPredicateDescription
NSSecureCoding
NSCoding
_RMPredicateVisitor
NSPredicateVisitor
push
RMPushController
APSConnectionDelegate
RMReport
securityUtilities
RMSecurityUtilities
statusEngine
RMStatusEngine
StatusSubscription
RMStatusQuerier
_RMExtensionStatusPublisher
RMStatusQueryResult
RMStatusSubscriptionQueryResult
RMProtocolStatusReport
RMStatusSubscription
RMStatusSubscriptionItem
RMSubscribedStatusKeyPath
statusNotificationCenter
RMSubscribedStatusKeyPathUpdater
XPCListenerDelegate
RMXPCListenerDelegate
NSXPCListenerDelegate
RMXPCProxyHandler
RMXPCService
daemon
isEnabled
statusDirectoryURLCreateIfNeeded:
mainBundle
bundleIdentifier
UTF8String
sharedController
persistentContainer
start
initWithPersistentContainer:allowedToRun:
initWithMachServiceName:
setDelegate:
resume
newBackgroundContext
sharedArchiver
persistentActiveIdentifiers
initWithPersistentActiveIdentifiers:XPCEventPublisher:context:
addEventStreamSubscriberWithSubscription:
removeEventStreamSubscriberForToken:
eventDescriptionWithEventsDictionary:
configurationSubscriberDescription
types
setWithArray:
initWithToken:configurationTypes:
startListeningForNotifications
unknownPayloadKeys
allObjects
commandIdentifier
rm_executeRequestOnBehalfOfManagementChannel:completionHandler:
rm_requestExecutesWithoutReturning
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
activationEngine
context
managementSourceObjectID
objectWithID:
hasChanges
save:
rollback
createInternalError
performBlockAndWait:
initWithManagementSourceObjectID:context:
syncWithCompletionHandler:
_managementSourceObjectID
_context
fetchRequest
setIncludesPendingChanges:
predicateWithFormat:
setPredicate:
setPropertiesToFetch:
execute:
entityName
arrayWithCapacity:
managedObjectContext
deleteObject:
configuration
configurationIdentifier
activation
setConfiguration:
dictionaryWithCapacity:
identifier
asset
assetIdentifier
setAsset:
unionSet:
containsObject:
entity
isKindOfEntity:
setRelationshipKeyPathsForPrefetching:
name
firstObject
managementSource
initWithManagementSource:
queryForStatusWithKeyPaths:onBehalfOfManagementChannel:
statusByKeyPath
keyPaths
addObjectsFromArray:
evaluateWithProperties:error:
predicateEvaluatedToFalseForActivation:
predicateEvaluationFailedWithError:forActivation:
assetReferences
serverToken
missingAssetIdentifiers:forConfiguration:
missingConfigurationIdentifiers:forActivation:
componentsJoinedByString:
state
initWithContext:
setActivation:
isInserted
willAccessValueForKey:
primitiveValueForKey:
didAccessValueForKey:
predicateDescription_
unarchivedObjectOfClass:fromData:error:
setPrimitiveValue:forKey:
willChangeValueForKey:
archivedDataWithRootObject:requiringSecureCoding:error:
setPredicateDescription_:
didChangeValueForKey:
reportDetails
mutableCopy
configurationReferences
setObject:forKeyedSubscript:
predicateDescription
copy
setPredicateDescription:
count
valueForKey:
caseInsensitiveCompare:
sortedArrayUsingSelector:
rm_payloadTypeName
createIncorrectPayloadTypeErrorWithExpectedType:actualType:
setDeclarationType:
payloadStandardConfigurations
payloadPredicate
setConfigurationIdentifier:
setRequired:
setConfigurationReferences:
inactiveReasons_
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
active
setActive:
setInactiveReasons_:
numberWithBool:
inactiveReasons
countByEnumeratingWithState:objects:count:
serializeWithType:
addObject:
setInactiveReasons:
prefetch
deviceAuthenticationCredential
HTTPBody
dataUsingEncoding:
genericAuthenticationCredential
_updateTestPropertiesAccountIdentifier:afterFailure:
_updateWebAuthenticationPropertiesAccountIdentifier:afterFailure:
rm_remoteManagementAccountForIdentifier:
stringValue
_deviceChannelClientCapabilitiesModel
initWithClientCapabilitiesModel:
_userChannelClientCapabilitiesModel
dictionaryWithObjects:forKeys:count:
numberWithShort:
objectForKeyedSubscript:
init
buildFromDictionary:
buildWithSupportedVersions:supportedFeatures:supportedPayloads:
capabilitiesForChannelType:
status
versionHash
.cxx_destruct
_status
_versionHash
registeredIdentifier
arrayWithObjects:count:
buildWithActivations:assets:configurations:
buildWithCommands:declarations:statusItems:
dataWithJSONObject:options:error:
RMModelSHA1HexString
client
_makeConduitWithManagementSourceObjectID:inContext:
initWithManagementSourceObjectID:statusQuerier:inContext:
initWithConduit:commandEngine:activationEngine:statusEngine:managementSourceIdentifier:
initWithCondition:
setName:
setMaxConcurrentOperationCount:
setQualityOfService:
conduitConfig
initWithManagementSourceObjectID:inContext:
statusEngine
conduit
errorState
_processConduitErrorState:
_syncOnlyIfNeeded:completionHandler:
startWithCompletionHandler:
implicitlySubscribeToStatusKeyPaths:
statusItemsToSendDuringEnrollment
queryForStatusWithKeyPaths:
acknowledgeStatusSubscriptions:
enrollWithStatusItems:completionHandler:
clearAllLastAcknowledgedDate
unenrollWithCompletionHandler:
tryLockWhenCondition:
lockWhenCondition:
unlockWithCondition:
queryForUnacknowledgedStatusSubscriptions
queryForStatusSubscriptions
_haltSyncing
createMultipleErrorOrReturnTheSingleErrorWithErrors:
errorByKeyPath
commandEngine
_setNeedsSyncing:
_syncConduitOnlyIfNeeded:completionHandler:
_sendStatusQueryResultIfNeeded:completionHandler:
isSyncAllowed
createStatePreventsSyncingError
_handleConduitError
syncIfNeededWithCompletionHandler:
sendStatusData:completionHandler:
queryForStatusSubscriptionsWithIdentifiers:
protocolStatusReport
serializeAsDataWithType:error:
delegate
managementSourceIdentifier
clientNeedsToUnenrollWithManagementSourceIdentifier:
clientNeedsToReenrollWithManagementSourceIdentifier:
subscribeToStatusKeyPathsThenStopAfterAcknowledged:
operationQueue
_syncIfNeeded
addOperationWithBlock:
conduitNeedsToSync:
conduitNeedsToSendStatusForKeyPaths:
statusEngineHasUnacknowledgedSubscription:
initWithManagementSourceObjectID:managementSourceIdentifier:statusQuerier:persistentContainer:
enrollWithCompletionHandler:
reenrollWithCompletionHandler:
sendStatusForSubscriptionsWithIdentifiers:completionHandler:
setConduit:
setCommandEngine:
setActivationEngine:
setStatusEngine:
setOperationQueue:
_needsSyncingLock
_syncLock
_needsSyncing
_delegate
_managementSourceIdentifier
_conduit
_commandEngine
_activationEngine
_statusEngine
_operationQueue
setAutomaticallyMergesChangesFromParent:
stringWithFormat:
setTransactionAuthor:
clientCapabilitiesVersionHashByChannelType
sharedUpdater
initWithClientCapabilitiesVersionHashByChannelType:subscribedStatusKeyPathUpdater:
_notifyChangesIfNeeded
isEqualToDictionary:
clientCapabilitiesController:didChangeClientCapabilitiesVersionHashByChannelType:
subscribedStatusUpdater
notifyStatusDidChangeForKeyPath:
setWithObject:
type
queryForStatusWithKeyPaths:onBehalfOfManagementChannel:error:
supportedKeyPaths
setSubscribedStatusUpdater:
_clientCapabilitiesVersionHashByChannelType
_subscribedStatusUpdater
integerValue
clientController
initWithPersistentContainer:context:
_start
_startListeningForNotifications
_makeClientWithManagementSourceObjectID:managementSourceIdentifier:persistentContainer:
_registerForAccountChangeNotificationsIfNeeded
_registerForCloudConfigAvailableNotificationIfNeeded
_shouldRegisterForAccountChangeNotifications
dispatchQueue
_syncAccounts
_registerForDarwinNotificationWithName:notifyToken:queue:notificationHandler:
_unenrollAccountsMissingFromAccountIdentifiers:
_updateExistingAccounts
_enrollNewAccountsInAccountIdentifiers:
executeFetchRequest:error:
valueForKeyPath:
accountWithIdentifier:
condition
_enrollAccount:fromStore:completionHandler:
_updateAuthenticationCredentialsForManagementObjectID:
syncWithIdentifier:completionHandler:
unenrollWithIdentifier:completionHandler:
_completedClientStateChanges:
enrollDeviceChannelWithURI:completionHandler:
_shouldRegisterForCloudConfigAvailableNotification
_checkCloudConfig
_checkForMandatoryDeviceEnrollmentWithCompletionHandler:
createFeatureDisabledError:
isEnrolledInMDMv1
createAlreadyEnrolledInMDMv1Error
scheme
errorWithDomain:code:userInfo:
createManagementSourceAlreadyExistsErrorWithURI:
createTooManyDeviceManagementSourcesError
setBootstrapURI:
setChannelType:
setConduitConfig:
_didFailToEnrollClientForManagementObjectID:
_didEnrollClient:managementSourceObjectID:account:accountStore:completionHandler:
_clientWithIdentifier:
createManagementSourceNotFoundErrorWithIdentifier:
_unenrollAndReenrollIfDEP:
_bootstrapURIForAccount:
createBootstrapURINotFound
_genericCredentialForAccount:fromStore:
setAccountIdentifier:
rm_isAccountSchemeTest
rm_isAccountSchemeWebAuthentication
rm_enrollmentURL
rm_accountScheme
username
initWithAuthenticationScheme:properties:
rm_webAuthenticationToken
setAccountDescription:
rm_setEnrollmentToken:
rm_setManagementSourceIdentifier:
saveAccount:withCompletionHandler:
accountDescription
remoteManagementDidEnroll
_didUnenrollClientWithIdentifier:error:
fetchRequestWithIdentifier:
longLongValue
remoteManagementDidUnenroll
fetchRequestWithAccountIdentifier:
_canProcessClientStateChanges:
reenrollWithIdentifier:completionHandler:
processingClientStateChanges
removeObject:
_checkCloudConfigAsync:
deviceChannelEnrollmentExistsWithCompletionHandler:
managementChannelWithAccountIdentifier:completionHandler:
syncAllManagementSourcesWithCompletionHandler:
sendStatusData:toManagementSourceWithIdentifier:completionHandler:
queryForStatusSubscriptionsWithIdentifiers:fromManagementSourceWithIdentifier:completionHandler:
sendStatusForSubscriptionsWithIdentifiers:toManagementSourceWithIdentifier:completionHandler:
setDispatchQueue:
setProcessingClientStateChanges:
clientByManagementSourceIdentifier
_accountsLock
_cloudConfigLock
_dispatchQueue
_processingClientStateChanges
_clientByManagementSourceIdentifier
rm_RemoteManagementAccounts
fetchRequestWithDeviceChannel
fetchRequestWithBootstrapURI:channelType:
cloudConfigController
sharedSettings
removeValueForKey:
isDeviceChannelEnabled
_enrollmentURLFromUpdatedCloudConfig
_updatedCloudConfig
_enrollmentURLFromCloudConfig:
setValue:forKey:
intValue
absoluteString
overrideCloudConfig
applicationSupportDirectoryURLCreateIfNeeded:
dictionaryWithContentsOfURL:
sharedConnection
storeCloudConfigurationDetails:completion:
retrieveCloudConfigurationDetailsCompletionBlock:
cloudConfigurationDetails
cloudConfigEnrollmentURL
cloudConfigEnrollmentURLWithUpdateFromServer
_processCommand:
_fetchCommand
setState:
payload
loadData:serializationType:error:
markFailedWithError:reasons:
_executeCommand:managementChannel:error:
lock
unlock
_handleResultForCommand:status:result:reasons:unknownPayloadKeys:error:outError:
null
setFetchLimit:
markExecutedWithResult:reasons:unknownPayloadKeys:
markPending
executingCommands
setExecutingCommands:
_executingCommands
setStatus:
setModifiedDate:
setResult:
failedWithUnknownPayloadKeys:
arrayByAddingObject:
setReasons:
reasonWithError:
markQueued
lastReceivedPushTimestamp
lastReceivedCommandToken
lastReceivedDeclarationsToken
lastReceivedOrganizationDetailsToken
lastReceivedServerCapabilitiesToken
lastReceivedServerTokensTimestamp
enrollmentToken
lastProcessedCommandToken
lastProcessedDeclarationsToken
lastProcessedOrganizationDetailsToken
lastProcessedServerCapabilitiesToken
lastReceivedServerTokensFromServerTimestamp
organizationDetails
serverCapabilities
configurationPublisherSubscription
_token
_configurationTypes
setAssetIdentifier:
setAssetReferences:
required
configurationPublisher
managedObjectContextDidSave:
_loadAllConfigurationSubscribersAllowingThemToCheckForChanges
_notifyChangedConfigurationsIfNeeded
token
numberWithUnsignedLongLong:
allConfigurationSubscriberExtensions
_loadExtensions:
applyConfigurationsWithExtension:error:
_notifyChangedConfigurationsForTypes:
_notifyExtensionSubscribersWithConfigurationTypes:
_notifyEventStreamSubscribersWithConfigurationTypes:
_postDarwinNotificationsForConfigurationTypes:
configurationSubscriberExtensionsForConfigurationTypes:
XPCEventPublisher
_shouldNotifyXPCEventPublisher:
allValues
configurationTypes
intersectSet:
_firePayload:atSubscriptionWithToken:XPCEventPublisher:
setXPCEventPublisher:
_notificationLock
_persistentActiveIdentifiers
_eventSventStreamSubscriptionByToken
_started
_XPCEventPublisher
initWithConfigurationPayloads:
uniqueIdentifiersByConfigurationType
arrayByAddingObjectsFromArray:
isEqualToSet:
configurationQuerier
initWithCapacity:
declarationType
initWithPersistentContainer:
activeConfigurationsByTypeForTypes:error:
_persistentContainer
initWithType:identifier:serverToken:content:channel:assetByIdentifier:
initWithType:identifier:serverToken:content:channel:
configurationStatusQuerier
getStatusDirectoryURLForChannel:declarationType:declarationIdentifier:serverToken:
defaultManager
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
dataWithContentsOfURL:options:error:
JSONObjectWithData:options:error:
boolValue
load:serializationType:error:
enumerateObjectsUsingBlock:
statusForChannel:declarationType:declarationIdentifier:serverToken:
validateForInsert:
_validateManagementSourceWithErrors:
_validateLoadStateWithErrors:
validateForUpdate:
_validateSetOncePropertiesWithErrors:
createMissingMandatoryPropertyErrorWithPropertyNamed:onObject:
changedValues
committedValuesForKeys:
createCannotChangeValueErrorForPropertyNamed:onObject:
_currentLoadState
createMismatchedValuesErrorForPropertyNamed:onObject:expected:actual:
keyPathsForValuesAffectingManagementSourceIdentifier
createMultipleValidationErrorOrReturnTheSingleErrorWithErrors:
initWithManagementSourceIdentifier:type:identifier:serverToken:
isEqualToDeclarationIdentifier:
copyWithZone:
_type
_identifier
_serverToken
device
doubleValue
numberWithDouble:
deviceIdentity
privateKey
certificates
objectAtIndexedSubscript:
checkValidAfterWithCertificate:interval:
setPrivateKey:
setCertificates:
_validDeviceIdentityCache
createDeviceIdentityNotFoundError
_cachePrivateKey:certificates:
_fetchDeviceIdentityCertificateWithCompletionHandler:
_issueDeviceIdentityCertificateWithCompletionHandler:
_fetchOrCreateSelfSignedCertificateWithCompletionHandler:
UDID
_persistIdentityWithPrivateKey:certificateChain:fileName:isBAA:
generateSelfSignedCertificateAndPrivateKeyWithID:completionHandler:
_copyPersistedIdentityWithFileName:isBAA:completionHandler:
identityDirectoryURLCreateIfNeeded:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dictionaryWithContentsOfURL:error:
deserializeBAAIdentity:completionHandler:
deserializeIdentity:completionHandler:
serializeBAAIdentityWithPrivateKey:certificateChain:error:
serializeIdentityWithPrivateKey:certificateChain:error:
writeToURL:atomically:
sharedDeviceIdentity
deviceIdentityForTesting
deviceIdentityWithCompletionHandler:
_identityLock
_privateKey
_certificates
extensionConfigurationSubscriberLoader
fetchThenApplyConfigurationsWithCompletionHandler:
extensionFinder
_extensionsWithAttributes:
attributes
eventDescriptionWithExtensionDictionary:
intersectsSet:
predicateWithBlock:
filteredArrayUsingPredicate:
allStatusPublisherExtensions
statusPublisherDescription
extensionsWithMatchingAttributes:error:
statusPublisherExtensionsForKeyPaths:
extensionLoader
beginExtensionRequestWithOptions:inputItems:error:
beginRequestWithExtension:block:
_extensionContextForUUID:
_auxiliaryConnection
cancelExtensionRequestWithIdentifier:
extensionStatusPublisherLoader
queryExtension:forStatusWithKeyPaths:onBehalfOfManagementChannel:error:
synchronousRemoteObjectProxyWithErrorHandler:
queryForStatusWithKeyPaths:onBehalfOfManagementChannel:completionHandler:
boolForDefaultsKey:
stringForDefaultsKey:
fileConduit
_prepareDirectoryWithURL:error:
getResourceValue:forKey:error:
_syncWithManagementSource:onlyIfNeeded:error:
_fetchServerCapabilitiesIfNeededWithManagementSource:error:
_processOrganizationDetailsIfNeededWithManagementSource:error:
_syncCommandWithManagementSource:error:
_syncDeclarationsWithManagementSource:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
reasons
writeToURL:options:error:
lastPathComponent
moveItemAtURL:toURL:error:
nextObject
commandType
setFormatOptions:
URLByAppendingPathExtension:
_statusWritingLock
httpConduit
bundleForClass:
currentDevice
objectForInfoDictionaryKey:
operatingSystem
operatingSystemVersion
operatingSystemBuildVersion
defaultSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
initWithManagementSourceObjectID:inContext:session:
_startObservers
bootstrapURI
transactionAuthor
setIgnoredTransactionAuthors:
setPersistentHistoryNotifier:
persistentHistoryNotifier
channelType
setBaseURL:
_generateEnrollmentToken
setEnrollmentToken:
setCheckOutOnRemove:
_makeURLRequestWithManagementSource:method:endpoint:
requestWithEnrollmentToken:statusItems:
_setRequestPayload:onURLRequest:error:
_resumeEnrollmentTaskForRequest:enrollmentToken:completionHandler:
UUIDString
_didReceiveEnrollReferralWithOriginalRequest:responsePayload:response:error:completionHandler:
_didFinishEnrollingWithResponsePayload:response:error:completionHandler:
_resumeTaskForRequest:enrollmentToken:expectedResponseClassByStatusCode:completionHandler:
responseReferralBaseURL
createMissingReferralURLError
URLWithString:
createCouldNotParseURLErrorWithString:
referralCount
createTooManyReferralsError
setReferralBaseURL:
setReferralCount:
referralBaseURL
pathComponents
subarrayWithRange:
URLByAppendingPathComponent:isDirectory:
setURL:
build
requestWithVersion:supportedFeatures:
responseCapabilitiesToken
requestWithCapabilitiesToken:capabilities:
responseCapabilities
setResponseCapabilities:
responsePushTopic
setPushTopic:
responsePushEnvironment
setPushEnvironment:
_processServerCapabilitiesResponse:conduitState:
responseOrganizationDetailsToken
responseOrganizationDetails
requestWithOrganizationDetailsToken:organizationDetails:
_processOrganizationDetailsResponse:managementSource:
responseStatusItems
detailsName
_stopObservers
checkOutOnRemove
_didFinishUnenrollingToldRemote:completionHandler:
session
finishTasksAndInvalidate
setEnrolled:
_didFinishFetchingServerTokens:response:error:completionHandler:
responseSyncTokens
tokensCommandToken
setLastReceivedCommandToken:
tokensDeclarationsToken
setLastReceivedDeclarationsToken:
tokensOrganizationDetailsToken
setLastReceivedOrganizationDetailsToken:
tokensCapabilitiesToken
setLastReceivedServerCapabilitiesToken:
tokensTimestamp
setLastReceivedServerTokensTimestamp:
setLastReceivedServerTokensFromServerTimestamp:
_didFinishFetchingOrganizationDetails:response:error:completionHandler:
setLastProcessedOrganizationDetailsToken:
setOrganizationDetails:
_didFinishFetchingServerCapabilities:response:error:completionHandler:
setLastProcessedServerCapabilitiesToken:
setServerCapabilities:
_generateCommandRequestWithManagementSource:
requestStatus
_didFinishFetchingCommand:response:statusSent:error:completionHandler:
command
result
requestWithStatus:identifier:result:reasons:
_processCommandResponse:statusSent:context:
responseCommandToken
setLastProcessedCommandToken:
isEqualToString:
responseCommand
responseIdentifier
setIdentifier:
responseType
setType:
setPayload:
setManagementSource:
enrolled
_fetchCommandOnlyIfNeeded:completionHandler:
_fetchPartialObjectsWithCompletionHandler:
_fetchDeclarationItemsOnlyIfNeeded:completionHandler:
_fetchOrganizationDetailsOnlyIfNeeded:completionHandler:
_fetchServerCapabilitiesOnlyIfNeeded:completionHandler:
_fetchTokensOnlyIfNeeded:completionHandler:
_didFinishFetchingDeclarationItems:response:error:lastReceivedPushTimestamp:completionHandler:
responseDeclarations
responseActivations
_processDeclarationItemsWithContext:infos:declarationItemClass:declarationItemKeyPath:
responseConfigurations
responseAssets
responseDeclarationsToken
setLastProcessedDeclarationsToken:
responseServerToken
setServerToken:
removeObjectForKey:
loadState
setLoadState:
enumerateKeysAndObjectsUsingBlock:
_fetchNextObjectOfClass:endpoint:completionHandler:
objectID
stringByReplacingOccurrencesOfString:withString:
_didFinishFetchingObject:objectID:class:endpoint:response:error:completionHandler:
statusCode
failedLoadingWithError:
loadPayload:error:
_setBody:onURLRequest:
_didFinishSendingStatusWithResponse:error:completionHandler:
_processUnauthorizedResponse:shouldRetry:error:
numberWithInteger:
objectForKey:
_incrementConduitStateError:serverRetryAfter:error:
createHTTPErrorWithStatusCode:reason:
_processErrorResponse:data:error:
base64EncodedStringWithOptions:
allHeaderFields
createUnhandledContentTypeErrorWithContentType:
length
authenticationCredential
authenticationScheme
createUnsupportedAuthenticationSchemeErrorWithScheme:
chosenAuthenticationScheme
setChosenAuthenticationScheme:
numberOfConsecutiveAuthErrors
createTooManyFailedAuthenticationsError
setNumberOfConsecutiveAuthErrors:
accountIdentifier
updatePropertiesForAccountIdentifier:afterFailure:
setAuthenticationCredential:
responseCode
setErrorState:
numberOfConsecutiveErrors
setNumberOfConsecutiveErrors:
setNumberOfConsecutiveFailures:
setServerRetryAfterDate:
dateWithTimeIntervalSinceNow:
setLocalRetryAfterDate:
baseURL
URLByAppendingPathComponent:
requestWithURL:cachePolicy:timeoutInterval:
setHTTPMethod:
userAgent
setValue:forHTTPHeaderField:
HTTPMethod
allHTTPHeaderFields
prepareURLRequest:error:
testOrganizationID
valueForHTTPHeaderField:
stringByAppendingFormat:
setHTTPBody:
_authenticationCredential
_prepareURLRequest:withAuthenticationCredential:error:
logHTTPDetailsForEnrollmentToken:request:response:responseData:responseError:
_processResponse:data:payloadClassByStatusCode:shouldRetry:error:
dataTaskWithRequest:completionHandler:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
changeType
changedObjectID
updatedProperties
propertiesByName
insertedObjectIDs
updatedObjectIDs
deletedObjectIDs
persistentHistoryToken
isExistingPersistentHistoryToken:fromSameStoreAsUpdatedToken:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
persistentHistoryNotifier:isChangeInteresting:stop:
persistentHistoryNotifier:hasChanges:
setSession:
_persistentHistoryNotifier
_session
distantPast
compare:
rangeOfString:
substringToIndex:
substringFromIndex:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
dateFromString:
httpconduitstate
localRetryAfterDate
numberWithLongLong:
numberOfConsecutiveFailures
pushEnvironment
pushTopic
serverRetryAfterDate
_archiveObject:forKey:
_unarchiveObjectOfClasses:forKey:
_unarchiveObjectOfClass:forKey:
setPersistentActiveIdentifiers:
setDeviceStatusByKeyPath:
setCommandAndDeclarationStatusPersistentHistoryToken:
setPushTokenByEnvironmentName:
setClientCapabilitiesVersionHashByChannelType:
persistentStoreCoordinator
persistentStores
archiveObject:forKey:intoMetadataForPersistentStore:
unarchiveObjectOfClass:forKey:fromMetadataForPersistentStore:
unarchiveObjectOfClasses:forKey:fromMetadataForPersistentStore:
configurationPublisher:didChangePersistentActiveIdentifiers:
internalStatusPublisher:didChangeDeviceStatusByKeyPath:
internalStatusPublisher:didChangeCommandAndDeclarationsPersistentHistoryToken:
pushController:didChangePushTokenByEnvironmentName:
commandAndDeclarationStatusPersistentHistoryToken
deviceStatusByKeyPath
pushTokenByEnvironmentName
internalStatusPublisher
initWithInternalDeviceStatusByKeyPath:subscribedStatusKeyPathUpdater:persistentHistoryNotifier:context:
_notifyInternalDeviceStatusChangesIfNeeded
subscribedStatusKeyPathUpdater
_queryForStatusWithKeyPaths:onBehalfOfManagementSource:
restrictedKeyPaths
createDisallowedStatusValueErrorWithKeyPath:
setSubscribedStatusKeyPathUpdater:
_internalDeviceStatusByKeyPathNotificationLock
_internalDeviceStatusByKeyPathLock
_internalDeviceStatusByKeyPath
_subscribedStatusKeyPathUpdater
colorInfo
modelFamily
modelIdentifier
modelMarketingName
operatingSystemMarketingName
serialNumber
storageTotalInGB
buildRequiredOnlyWithActivations:configurations:assets:
invalidPayloadForDeclaration:
buildWithIdentifier:serverToken:active:valid:reasons:
missingStateForDeclaration:
configurationIsNotReferencedByAnActivation:
assetIsNotReferencedByConfiguration:
localeWithLocaleIdentifier:
timeZoneForSecondsFromGMT:
setTimeZone:
dateFormatter
stringFromDate:
serializeValue:
initWithType:identifier:enrollmentToken:accountIdentifier:accountDescription:organizationDescription:isEnrolled:
managementSettings
dataVaultDirectoryURLCreateIfNeeded:
initWithURL:
setSettingsURL:
_readCachedSettings
cachedSettings
removeAllObjects
_writeCachedSettings
settingsURL
inputStreamWithURL:
open
propertyListWithStream:options:format:error:
close
domain
code
setCachedSettings:
outputStreamWithURL:append:
writePropertyList:toStream:format:options:error:
reset
_settingsLock
_settingsURL
_cachedSettings
awakeFromInsert
activations
configurations
assets
statusSubscriptions
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
installedMDMProfileIdentifier
_didEnroll:
MCSetBoolRestriction:value:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
payloadReturnStatus
payloadEcho
buildWithCode:description:details:
statusDetails
dictKeys
setDictionary:
setStatusDetails:
localizedDescription
localizedFailureReason
periodicSync
sharedInstance
initWithIdentifier:
setPreregistered:
_setAdditionalXPCActivityProperties:
repeats
interval
forceSyncWithCompletion:
scheduleWithBlock:
invalidate
dealloc
periodicSyncActivity
setPeriodicSyncActivity:
_periodicSyncActivity
initWithDeclarationPayload:
initWithUniqueIdentifiersByConfigurationType:
setUniqueIdentifiersByConfigurationType:
_uniqueIdentifiersByConfigurationType
persistentController
persistentStoreURLCreateIfNeeded:
_createLoadedPersistentContainerWithURL:
persistentStoreDescriptionWithURL:
setOption:forKey:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
managedObjectModel
initWithName:managedObjectModel:
setPersistentStoreDescriptions:
loadPersistentStoresWithCompletionHandler:
managedObjectModelURL
initWithContentsOfURL:
metadataForPersistentStore:
setMetadata:forPersistentStore:
metadataOnPersistentStore:updateHandler:
currentPersistentHistoryTokenFromStores:
currentPersistentHistoryTokenForContainer:
hasStarted
setHasStarted:
shouldUsePersistentHistoryToken
_managedObjectContextDidSave:
_scheduleQueryForTransactions
object
_delayedQuery
setQueryNeeded:
sharedQueryQueue
queryNeeded
_queryForTransactionsWithCompletion:
ignoredTransactionAuthors
interestingEntities
author
changes
initWithPersistentHistoryToken:context:
setInterestingEntities:
_queryCondition
_shouldUsePersistentHistoryToken
_hasStarted
_queryNeeded
_ignoredTransactionAuthors
_interestingEntities
fetchHistoryAfterToken:
executeRequest:error:
compareToken:error:
_updatePropertiesWithChange:
tombstone
updatedPropertiesByObjectID
tombstoneByObjectID
updateWithChange:
setPersistentHistoryToken:
_insertedObjectIDs
_updatedObjectIDs
_updatedPropertiesByObjectID
_tombstoneByObjectID
_persistentHistoryToken
initWithFormat:
acceptVisitor:flags:
createUnableToParsePredicateErrorWithFormat:reason:
reason
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
allowEvaluation
predicate
encodeObject:forKey:
predicateFormat
evaluateWithObject:
createUnableToEvaluatePredicateErrorWithFormat:reason:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithFormat:error:
_keyPaths
_predicate
expressionType
operatorType
symbol
createUnableToParsePredicateErrorWithCustomOperator:predicateFormat:
exceptionWithName:reason:userInfo:
visitPredicate:
visitPredicateExpression:
visitPredicateOperator:
_format
push
initWithPushTokenByEnvironmentName:subscribedStatusKeyPathUpdater:context:
_stop
shutdown
_updateConnections
_notifyPushTokenDidChangeIfNeeded
serialQueue
_connectionWithEnvironmentName:queue:
setEnabledTopics:ignoredTopics:
initWithEnvironmentName:namedDelegatePort:queue:
_currentPushTokenByEnvironmentName
publicToken
_pushEnvironmentNameForManagementChannel:error:
_cachedPushTokenByEnvironment
_environmentNameForConnection:
topic
messageEnrollmentToken
messageSyncTokens
_updatePushReceivedWithTopic:enrollmentToken:syncTokens:forEnvironmentName:
setLastReceivedPushTimestamp:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
setSerialQueue:
_connectionByEnvironmentName
_pushTokenByEnvironmentNameLock
_pushTokenByEnvironmentName
_serialQueue
managementSources
orphanedEntities
reportWithContext:
managedObjectClassName
securityUtilities
_serializeIdentityWithPrivateKey:certificateChain:privateKeyIsExportable:error:
_serializePrivateKey:privateKeyIsExportable:
serializeCertificateChain:
_deserializeIdentity:privateKeyIsExportable:completionHandler:
_deserializePrivateKey:privateKeyIsExportable:
deserializeCertificateChain:
initWithBase64EncodedString:options:
data
bytes
numberWithUnsignedInt:
date
timeIntervalSinceReferenceDate
defaultCenter
_statusDidChange:
addObserver:selector:name:object:
_notifyDelegateOfUnacknowledgedStatusSubscriptionsIfNeeded
userInfo
_updateStatusSubscriptions
_queryForStatusSubscriptionsReturningOnlyUnacknowledgedOnes:
_queryForStatusWithLastReceivedDateByKeyPath:
setLastAcknowledgedDate:
allKeys
statusQuerier
initWithQueryResult:lastReceivedDateByKeyPath:
statusKeyPaths
localizedCompare:
lastReceivedDateByKeyPath
keyPath
lastReceivedDate
isEqualToDate:
lastAcknowledgedDate
statusSubscriptionItems
filteredSetUsingPredicate:
queryForStatusSubscriptionsWithKeyPaths:
setContext:
setManagementSourceObjectID:
setStatusQuerier:
_statusQuerier
_subscribeToStatusKeyPaths:sourceType:
setResultType:
sourceType
items
subscribedStatusKeyPaths
existingObjectWithID:error:
setSourceIdentifier:
setSourceType:
minusSet:
setSubscription:
setKeyPath:
subscription
addStatusSubscriptionItemsObject:
removeStatusSubscriptionItemsObject:
dictionaryWithObjects:forKeys:
declarationIdentifier
sourceServerToken
declarationServerToken
setSourceServerToken:
payloadStatusItems
payloadName
payloadProperties
setProperties:
setWithCapacity:
hasPrefix:
sharedPublisher
initWithStatusPublishers:
initWithExtension:
statusPublishers
_findStatusPublishersForKeyPaths:
setWithSet:
_statusPublishers
extension
_extension
initWithStatusKeyPaths:statusByKeyPath:errorByKeyPath:
stringByAppendingPathExtension:
setValue:forKeyPath:
createUnsupportedStatusValueErrorWithKeyPath:
_statusKeyPaths
_statusByKeyPath
_errorByKeyPath
initWithStatusKeyPaths:lastReceivedDateByKeyPath:statusByKeyPath:errorByKeyPath:
_lastReceivedDateByKeyPath
requestWithStatusItems:errors:
buildWithStatusItem:reasons:
sourceIdentifier
prepareForDeletion
properties
statusNotificationCenter
notifyStatusDidChangeForKeyPaths:
_updateSubscribedStatusKeyPathsWithFetchPredicate:
setMergePolicy:
setLastReceivedDate:
postNotificationName:object:userInfo:
notifyStatusDidChangeForKeyPathsByManagementSourceObjectID:
setPersistentContainer:
orPredicateWithSubpredicates:
pathExtension
stringByDeletingPathExtension
stringByAppendingString:
andPredicateWithSubpredicates:
XPCListenerDelegate
allowedToRun
newInterface
setExportedInterface:
initWithXPCConnection:persistentContainer:
setExportedObject:
listener:shouldAcceptNewConnection:
_allowedToRun
_doesConnection:haveEntitlement:
valueForEntitlement:
_isConnection:fromApplicationIdentifier:
hasEnrollmentEntitlement
createConnectionNotEntitledWithName:
hasCommandLineEntitlement
_managementChannelWithIdentifier:error:
hasConfigurationSubscriberEntitlement
_activeConfigurationsByTypeForTypes:persistentContainer:error:
enrollUserChannelWithURI:authenticationCredential:withDataSeparation:passcodeData:completionHandler:
queryForStatusWithKeyPaths:fromManagementSourceWithIdentifier:completionHandler:
sendStatusForKeyPaths:toManagementSourceWithIdentifier:completionHandler:
fetchConfigurationsWithTypes:completionHandler:
hasAccountChangesEntitlement
_hasCommandLineEntitlement
_hasAccountChangesEntitlement
_hasConfigurationSubscriberEntitlement
_hasEnrollmentEntitlement
@16@0:8
v32@0:8@16@?24
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"RMManagementChannel"16@?<v@?@"NSString"s@"NSDictionary"@"NSArray"@"NSArray"@"NSError">24
@32@0:8@16@24
v24@0:8@?16
@"NSManagedObjectID"
@"NSManagedObjectContext"
v24@0:8@16
B32@0:8@"RMModelPayloadBase"16^@24
v24@0:8@"NSError"16
@"RMManagementSource"16@0:8
v24@0:8@"RMManagementSource"16
@"NSData"16@0:8
@"NSDictionary"16@0:8
B32@0:8@"NSMutableURLRequest"16^@24
@20@0:8s16
@24@0:8@16
v16@0:8
@"RMModelStatusManagementClientCapabilities"
@"NSString"
v24@0:8@"<RMConduit>"16
v24@0:8@"NSSet"16
v24@0:8@"RMStatusEngine"16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
v28@0:8B16@?20
v20@0:8s16
v20@0:8B16
@"NSObject"
@"NSConditionLock"
@"<RMClientDelegate>"
@"<RMConduit>"
@"RMCommandEngine"
@"RMActivationEngine"
@"RMStatusEngine"
@"NSOperationQueue"
@40@0:8@16@24^@32
@"NSDictionary"40@0:8@"NSSet"16@"RMManagementChannel"24^@32
@"NSSet"16@0:8
@"NSDictionary"
@"RMSubscribedStatusKeyPathUpdater"
@"<RMClientCapabilitiesControllerDelegate>"
I48@0:8@16^i24@32@?40
v24@0:8@"NSString"16
B32@0:8@16^@24
@"NSObject<OS_dispatch_queue>"
B40@0:8@16@24^@32
B68@0:8@16s24@28@36@44@52^@60
v40@0:8@16@24@32
v32@0:8@16@24
@32@0:8Q16@24
@"NSSet"
v40@0:8@16Q24@32
v24@0:8Q16
@"RMPersistentActiveIdentifiers"
@"NSMutableDictionary"
@"<RMConfigurationPublisherDelegate>"
@"NSObject<OS_xpc_event_publisher>"
@32@0:8@16^@24
@"NSPersistentContainer"
B24@0:8^@16
@24@0:8^{_NSZone=}16
v32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
v36@0:8@16B24@?28
v44@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24@32B40
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
v24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
@"NSArray"
@48@0:8@16@24@32^@40
B36@0:8@16B24^@28
@"<RMFileConduitDelegate>"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
s16@0:8
@32@0:8@"NSManagedObjectID"16@"NSManagedObjectContext"24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?>16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSError">24
@"<RMConduitDelegate>"16@0:8
v24@0:8@"<RMConduitDelegate>"16
B40@0:8@16@24^B32
B40@0:8@"RMPersistentHistoryNotifier"16@"NSPersistentHistoryChange"24^B32
v32@0:8@"RMPersistentHistoryNotifier"16@"RMPersistentHistoryNotifierChanges"24
@40@0:8@16@24@32
v48@0:8@16@24#32@40
v40@0:8#16@24@?32
v72@0:8@16@24#32@40@48@56@?64
@56@0:8@16@24@32^B40^@48
B40@0:8@16^B24^@32
B36@0:8s16@20^@28
@"<RMConduitDelegate>"
@"RMPersistentHistoryNotifier"
@"NSURLSession"
v32@0:8@"RMClientCapabilitiesController"16@"NSDictionary"24
v32@0:8@"RMConfigurationPublisher"16@"RMPersistentActiveIdentifiers"24
v32@0:8@"RMInternalStatusPublisher"16@"NSDictionary"24
v32@0:8@"RMInternalStatusPublisher"16@"NSPersistentHistoryToken"24
v32@0:8@"RMPushController"16@"NSDictionary"24
@32@0:8#16@24
@"<RMInternalStatusPublisherDelegate>"
@"NSURL"
@28@0:8@16s24
@"NSBackgroundActivityScheduler"
@40@0:8#16@24@32
@"<RMPersistentHistoryNotifierDelegate>"
B32@0:8@16@24
@"NSPersistentHistoryToken"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q32@0:8@16^@24
@"NSPredicate"
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
@"NSMutableSet"
v48@0:8@16@24@32@40
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@"<RMPushControllerDelegate>"
@40@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24^@32
@44@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24B32^@36
@28@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16B24
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}28@0:8@16B24
B32@0:8^{__SecCertificate=}16d24
@20@0:8B16
@"<RMStatusEngineDelegate>"
@"RMStatusQuerier"
v28@0:8@16s24
@"NSExtension"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@28@0:8@16B24
v52@0:8@16@24B32@36@?44
v32@0:8@"NSURL"16@?<v@?@"NSString"@"NSError">24
v52@0:8@"NSURL"16@"RMGenericAuthenticationCredential"24B32@"NSData"36@?<v@?@"NSString"@"NSError">44
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"RMManagementChannel"@"NSError">24
v40@0:8@"NSData"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
Starting: remotemanagementd
Starting remotemanagementd...
Crippled daemon, this feature is not available.
Started remotemanagementd
Start remotemanagementd
failed to initialze sandbox: %{darwin.errno}d
Received XPC notifyd event channel: %{public}s
Configuration event publisher action = %d, token = %llu, descriptor = %@
Starting configuration publisher...
Configuration event publisher failed with an error: %{public}s
AcitvationEngine: syncing
Syncing activation engine...
Updating activations and configurations...
Updated activations and configurations.
Failed to update activations and configurations: %{public}@
No changes to activations or configurations.
Synced activation engine...
Deleting activations, configurations, and assets that are no longer needed...
Failed to delete configurations.
Failed to delete activations.
Failed to delete assets.
Deleting activations: %{public}@
Deleting configurations: %{public}@
Deleting assets: %{public}@
Unable to retrieve %@ ear marked for deletion: %@
Attaching configuration references...
Failed to attach configuration references.
No configuration references to attach.
Reattaching configuration reference for %@ to from %@ to %@...
Attaching configuration reference for %@ to %@...
Attached configuration references.
Could not query for configuration references: %@
Unable to get eligible %@ by identifiers: %@
Attaching asset references...
Failed to attach asset references.
No asset references to attach.
Reattaching asset reference for %@ to from %@ to %@...
Attaching asset reference for %@ to %@...
Attached asset references.
Could not query for asset references: %@
Unable to retrieve eligible %{public}@ to be evaluated, could not query for activations: %{public}@
Configuration (%@:%@) is missing assets: %@
Activation (%@:%@) is missing configurations: %@
%@ state changed to %@
Could not deserialize data for %{public}@: %{public}@
Could not serialize data for %{public}@: %{public}@
Signing request body with device identity
Device identity failure generating signature: %{public}@
Device identity failure generating certificate list: %{public}@
Device identity failure: %{public}@
Building signed request with device identity
Test token changed for %{public}@
User name changed for RM account %{public}@
Auth token changed for RM account %{public}@
Client: Starting
Starting client...
Processing client error state on startup: %u
Started.
Client: Enrolling
Enrolling...
Enrolled.
Client: Re-enrolling
re-enrolling...
Client: Unenrolling
Unenrolling...
Unenrolled.
Client: Syncing
Waiting for previous sync to finish...
Syncing%{public}@...
Failed to send status data: %{public}@
Sync %{public}@ finished
Successfully sent status data
Failed to sync with conduit: %{public}@
Successfully synced with conduit
Command engine sync failed: %{public}@
Successfully synced with command engine - another sync has been scheduled.
Successfully synced with command engine - another sync is not needed.
Activation engine sync failed: %{public}@
Successfully synced with activation engine
Cannot sync due to client state not ready
Cannot sync due to client error state
Failed to sync conduit: %{public}@
Successfully sync'd conduit
Client: Sending arbitrary status
Cannot send status due to client state not ready
Cannot send status due to client error state
Sending arbitrary status...
Failed to send arbitrary status: %{public}@
Successfully sent arbitrary status
Client: querying for status subscriptions
Querying for status subscriptions with identifiers %{public}@...
Found status from status subscriptions with identifiers %{public}@
Client: sending status for subscriptions
Querying for status subscriptions with identifiers %{public}@ then sending status...
There was no status report to send.
Sending status report...
Could not serialize status: %{public}@
Handle client error state: %u
Conduit needs sync...
Conduit needs to send status items: %{public}@
Status engine needs sync...
Ignoring needs syncing.
Scheduling sync if needed...
Sync if needed already scheduled...
Syncing if needed...
Finished sync if needed.
ClientController: starting
Starting client controller...
Unable to fetch management source objects: %{public}@
Found and deleting orphaned management source: %{public}@
Could not remove orphaned management sources: %{public}@
Started client controller.
Not registering for notification: %{public}@
Registering for notification: %{public}@
Received accounts change notification
Registered for notification %{public}@
Couldn't register for notification %{public}@: %d
ClientController: synchronizing accounts
Starting to sync accounts...
Waiting for previous sync accounts to finish...
Syncing accounts...
Unable to synchronize accounts due to missing account list.
Accounts synchronized.
Enrolling new accounts...
Could not find management sources: %{public}@
Failed to enroll with account %{public}@: %{public}@
Waiting for remaining enrollments to finish...
Updating existing accounts...
Updating existing account %{public}@
Failed to sync during update with account %{public}@: %{public}@
Not updating existing account %{public}@
Waiting for remaining updates to finish...
Unenrolling removed accounts...
Failed to unenroll with account %{public}@: %{public}@
Waiting for remaining unenrollments to finish...
Executing queued unenroll for client identifier %{public}@
Forced unenroll for client identifier %{public}@ failed: %{public}@
Forced unenroll for client identifier %{public}@
Mandatory device channel enrollment required: %{public}@
Unable to enroll device channel after server initiated unenroll: %{public}@
Mandatory device channel enrollment complete
No mandatory device channel enrollment required.
Queued unenroll for client %{public}@
ClientController: checking cloud config
Starting to check cloud config...
Waiting for previous checking cloud config to finish...
Checking cloud config...
Checked cloud config.
Forcing mandatory enrollment of device channel: %{public}@
Mandatory enrollment of device channel already established
Mandatory enrollment of device channel already established, but URLs are mismatched: %{public}@ vs %{public}@
ClientController: enrolling management source
Enrolling with device channel at %{public}@...
Failed to enroll device channel at %{public}@: feature disabled
Failed to enroll device channel at %{public}@: Already enrolled in MDMv1
Failed to enroll device channel at %{public}@: Unsupported scheme
A device channel management source for %{public}@ already exists
Cannot enroll %{public}@ because there is an existing device based management source.
Failed to enroll device channel at %{public}@: %{public}@
ClientController: reenrolling
Reenrolling %{public}@...
Could not reenroll; could not find client for identifier: %{public}@
Error reenrolling: %{public}@ Will unenroll
Enrolling with user channel at %{public}@...
Failed to enroll user channel at %{public}@: Already enrolled in MDMv1
Failed to enroll user channel at %{public}@: Unsupported scheme
Failed to enroll user channel at %{public}@: %{public}@
Failed to enroll user channel: invalid or missing enrollment URL for account: %{public}@
Failed to enroll user channel: unknown account scheme %{public}@ for account: %{public}@
Failed to create credential: unknown account scheme %{public}@ for account: %{public}@
Unable to save while removing %{public}@: %{public}@
Saving account...
Accounts finished saving.
Could not save management sources after enrollment: %{public}@
Unable to save while updating authentication credentials for %{public}@: %{public}@
ClientController: unenrolling
Unenrolling %{public}@...
Could not unenroll; could not find client for identifier: %{public}@
Could not fetch unenrolled management source for %{public}@: %{public}@
Management source for %{public}@ disappeared before we could delete it.
Could not count enrolled management sources: %{public}@
ClientController: syncing
Syncing %{public}@...
Could not sync, could not find client for identifier: %{public}@
Could not sync identifier %{public}@: %{public}@
Synced identifier: %{public}@
ClientController: sending arbitrary status
Sending arbitrary status to %{public}@...
Could not send arbitrary status, could not find client for identifier: %{public}@
ClientController: query for status subscriptions
Querying for status subscriptions with identifiers %{public}@ from %{public}@...
Could not query for status subscriptions with identifiers %{public}@, could not find client for identifier: %{public}@
ClientController: sending specific status
Querying for status subscriptions with identifiers %{public}@ then sending to %{public}@...
Queuing re-enroll for client %{public}@
Ignoring re-enroll for client identifier %{public}@ because it is already being processed
Executing queued re-enroll for client identifier %{public}@
reenrollWithIdentifier %{public}@  error %{public}@
Queued re-enroll for client %{public}@
Queuing unenroll for client %{public}@
Ignoring unenroll for client identifier %{public}@ because it is already being processed
Unable to fetch device channel management source: %{public}@
Unable to fetch management source objects with uri %{public}@ and channel %d: %{public}@
Unable to fetch device management source objects: %{public}@
CloudConfig is not available
CloudConfig protocol version is not for us: %{public}@
CloudConfig server URL missing
CloudConfig server URL cannot be parsed: %{public}@
CloudConfig has an RM server configured: %{public}@
Using OverrideCloudConfig
Cannot update CloudConfig from server: %{public}@
Updated CloudConfig from server: %{public}@
Cannot store CloudConfig from server: %{public}@
Stored CloudConfig from server: %{public}@
CommandEngine: executing pending command
Starting command queue processing
Processing pending command
Pending command to process: %{public}@
Failed to initialize payload for command %{public}@: %{public}@
Failed to save context when processing command %{public}@: %{public}@
%{public}@ %{public}@ does not conform to %{public}@
No command to process
Command queue processing completed with error
Command queue processing completed with nothing to do
Executing command
Command queue processing is complete
Error fetching next command: %{public}@
CommandEngine: processing command result
Error fetching command %{public}@ to process its result: %{public}@
Missing command %{public}@ when processing result
Executed command: %{public}@, result: %d
Configuration publisher has already started, ignoring start.
ConfigurationPublisher: Starting...
Started configuration publisher.
Adding subscription for %llu: %{public}@
Added subscriber for %llu: %{public}@.
Couldn't add subscriber for %llu, token already exists: %{public}@.
Removing subscriber for %llu...
Removed subscriber for %llu: %{public}@.
Couldn't remove subscriber for %llu, it didn't exist.
ConfigurationPublisher: Loading extensions...
Loading configuration subscribers: %{public}@
Loading configuration subscriber for %{public}@...
Loaded configuration subscriber for %{public}@.
Could not load configuration subscriber for %{public}@: %{public}@
Finished loading configuration subscribers: %{public}@
Ignoring %{public}@, the publisher has not finish starting yet.
Notifying changed configuration types if needed...
Changed configuration types: %{public}@
Nothing has changed.
ConfigurationPublisher: notifying configuration subscribers
Notifying configuration subscribers with configurations of types: %{public}@
Notified configuration subscribers with configurations of types: %{public}@
ConfigurationPublisher: notifying extensions
ConfigurationPublisher: notifying event stream subscribers
ConfigurationPublisher: post darwin notifications
Unable to fetch active configurations: %{public}@
Posting darwin notifications: %{public}@...
Posted darwin notifications: %{public}@.
Can't fetch configurations for types %{public}@: %{public}@
Could not read status file: %{public}@ %{public}@
Could not deserialize status: %{public}@
Could not deserialize status reason: %{public}@
Could not get  %{public}@
Could not query for %{public}@
No in-memory cache...
Creating in-memory cache...
DeviceIdentity: retrieving
Retrieving device identity...
Could not get device identity: %{public}@
Did not get device identity, reference key is missing
Did not get device identity, incorrect number of certificates: %@
Retrieved device identity
Device identity not supported on this device: using self-signed certificate instead
Could not get self signed certificate public and/or private keys: %{public}@
Could not request %{public}@ to fetch and apply configuration changes: %{public}@
Applying configurations for %{public}@
Could not apply configuration for %{public}@: %{public}@
Applied configurations for %{public}@.
Unable to fetch for extensions with %{public}@: %{public}@
Beginning extension request for %{public}@...
Could not begin extension request for %{public}@: %{public}@
Began extension request for %{public}@: %{public}@
Auxiliary connection does not exist.
Cancelling extension request for %{public}@: %{public}@
Canceled extension request for %{public}@: %{public}@
Could not request %{public}@ to query for status: %{public}@
Querying for status with key paths %{public}@: %{public}@
Could not query for status with key paths %{public}@: %{public}@
Queried for status with key paths %{public}@: %{public}@.
FileConduit: starting
Started file conduit for %{public}@
FileConduit: enrolling
Enrolling with URI: %{public}@
Could not prepare bootstrap URL %{public}@: %{public}@
Enrolled with URI: %{public}@
FileConduit: unenrolling
Unenrolling identifier: %{public}@
Unable to remove management source %{public}@: %{public}@
Unenrolled identifier: %{public}@
FileConduit: forced syncing
FileConduit: syncing only if needed
Sync succeeded
Sync failed: %{public}@
FileConduit: conditionally reading server capabilities
Could not read server capabilities %{public}@: %{public}@
Server capabilities does not exist at %{public}@
New server capabilities token matches last-received token; ignoring
FileConduit: conditionally reading organization details
Could not read organization details %{public}@: %{public}@
Organization details does not exist at %{public}@
New organization details token matches last-received token; ignoring
Ignoring command sync due to pending command: %{public}@
Could not parse JSON data from file data: %{public}@ %{public}@
Could not parse command from file data: %{public}@ %{public}@
Could not serialize new JSON data containing command status: %{public}@
Could not write updated command file data: %{public}@ %{public}@
Cannot move completed command from %{public}@ to %{public}@: %{public}@
Could not read command file data: %{public}@ %{public}@
Wrong type of payload when parsing a command from file data: %{public}@ %{public}@
Successfully synced data
Unable to sync data: %{public}@
Could not read declaration file data: %{public}@ %{public}@
Could not parse declaration from file data: %{public}@ %{public}@
Ignoring declaration file %{public}@ because identifier matches file %{public}@
Invalid type %{public}@ for declaration: %{public}@
Unable to load payload for declaration %{public}@: %{public}@
Marked for declaration deletion: %{public}@
Could not deserialize status report: %{public}@
Could not deserialize status report. Missing StatusItem key %{public}@
Could not deserialize data to make it pretty JSON: %{public}@
Could not write status to disk %{public}@: %{public}@
Could not deserialize overall status: %{public}@
Could not read overall status from %{public}@: %{public}@
Updated overall status %{public}@
Could not update overall status %{public}@: %{public}@
Could not serialize overall status from %{public}@
HTTPConduit: starting
Starting conduit...
Started HTTP conduit for %{public}@
HTTPConduit: enrolling
Enrolling conduit...
Failed to save conduit state during enrollment: %{public}@
Could not serialize request payload: %{public}@
Error while enrolling with a referral: %{public}@
Processing enrollment referral
Missing referral URL
Cannot parse referral URL value: %{public}@
Too many referrals
Could not process enrollment referral: %{public}@
Error while enrolling: %{public}@
Server capabilities in enroll response missing required items: %{public}@
Unable to save while enrolling: %{public}@
Enrolled %{public}@ with organization %{public}@: %{public}@
HTTPConduit: unenrolling
Unenrolling conduit...
Error while unenrolling: %{public}@
Unenrolled from URI: %{public}@
Unable to save while unenrolling: %{public}@
HTTPConduit: fetching server tokens
Fetching server tokens...
Tokens are up to date, ignoring fetch server tokens
Error while fetching server tokens: %{public}@
Unable to save server tokens: %{public}@
Successfully saved server tokens
HTTPConduit: fetching organization details
Fetching organization details...
Organization details tokens are the same; ignoring fetch organization details
Error while fetching organization details: %{public}@
Unable to save organization details: %{public}@
Successfully saved organization details
HTTPConduit: fetching server capabilities
Fetching server capabilities...
Server capabilities tokens are the same; ignoring fetch server capabilities
Error while fetching server capabilities: %{public}@
Unable to save server capabilities: %{public}@
Successfully saved server capabilities
HTTPConduit: fetching command
Fetching command...
Command tokens are the same; ignoring fetch command
Could not serialize command request: %{public}@
Error while fetching command: %{public}@
Unable to save command: %{public}@
Successfully saved command
Server sent a command even though it was sent busy status. Command ignored: %{public}@.
Command response ignored whilst busy.
Removed completed/failed command after receiving command response.
Unable to deserialize the command: %{public}@.
Unable to serialize command payload data: %{public}@.
Added new command with identifier: %{public}@.
Processed empty command response.
HTTPConduit: forced syncing
HTTPConduit: syncing only if needed
HTTPConduit: fetching declaration items
Fetching declaration items...
Last declarations token received matches last one processed; ignoring fetch declaration items
Error while fetching declaration items: %{public}@
Failed to save partial objects: %{public}@
Successfully saved partial object
Marked for deletion: %{public}@
HTTPConduit: fetching next object from server
Fetching next %{public}@...
All %{public}@ downloaded
Couldn't get %{public}@ object ID for %{public}@
Error while fetching object %{public}@ (%{public}@): %{public}@
Object with %{public}@ disappeared while filling in contents.
Error while processing fetched data for object %{public}@ (%{public}@): %{public}@
Fetched from URI: %{public}@
Unable to load payload into %{public}@: %{public}@
Unable to save fetched object %{public}@: %{public}@
Successfully saved object, fetching next one
HTTPConduit: sending status
Sending conduit status...
Error while sending status: %{public}@
Unable to save status state changes: %{public}@
Successfully sent status
Got back from HTTP: %ld
Unused Content-Type parameter: %{public}@
Schemes: %@
Did match supported scheme
Current credential scheme %{public}@ is not advertised by the server %{public}@
No authentication scheme currently being used. Setting new scheme: %{public}@
Too may failed authentication attempts: %lld
Refreshing account credentials for scheme: %{public}@
Previous authentication scheme %{public}@ not recognized. Setting new scheme: %{public}@
Could not process HTTP authentication: %{public}@
Unable to save while process error: %{public}@
Preparing URL request for %{public}@ %{public}@ (%{public}@)
>>>> %{public}@ %{public}@ (%{public}@)
<<<< %{public}@ %{public}@ (%{public}@): %{public}@
<<<< %{public}@ %{public}@ (%{public}@)
Retrying: %{public}@ %{public}@
Handling challenge: %@
Authentication method is server-trust
Valid server certificate
Server trust is not valid %@: %@
Invalid server certificate
Unsupported authentication method
Need to manually fetch Sync Tokens
Need to manually fetch Sync Tokens after push without sync tokens
Organization Details mismatch
Server Capabilities mismatch
Command sync needed
Declarations mismatch
Unable to search for partial objects of class %{public}@: %{public}@
WWWAuthenticate header: %@
JSON Error response is not an RMProtocolErrorResponse: %{public}@
InternalStatusPublisher: Starting...
Starting internal status notifier...
Started internal status notifier.
Unable to fetch management sources for management channel (%{public}@): %{public}@
Management settings cache does not currently exist
Failed to cache management settings: %{public}@
Failed to cache management settings - invalid property list type: %{public}@
Cached management settings: %{public}@
Failed to write management settings: %{public}@
Wrote management settings: %{public}@
applyRestrictionDictionary(%{public}@) failed: %{public}@
periodic sync repeats: %d, interval: %f
Could not sync all management sources: %{public}@
All management sources synchronized
Creating loaded persistent container at %{public}@...
Unable to load persistent store %{public}@: %{public}@...
Created loaded persistent container at %{public}@
Unable to archive %{public}@ for %{public}@: %{public}@
Unable to unarchive %{public}@ for %{public}@ %{public}@: %{public}@
Unexpected class %{public}@ for %{public}@
Stopped persistent history notifier (%p).
Persistent history notifier (%p) is already observing
Starting persistent history notifier
Starting persistent history notifier (%p)...
Started persistent history notifier (%p).
Managed object context (%p) did save for persistent history notifier (%p).
Persistent history notifier (%p) creating new query.
Persistent history notifier (%p) has pending query.
Persistent history notifier (%p) already running a query.
Persistent history notifier (%p) query complete, another is needed.
Persistent history notifier (%p) query complete.
Querying for transactions for persistent history notifier (%p).
Persistent history notifier (%p) processing transactions: %ld { authors = %@, entities = %@, old token = %@, new token = %@ }.
Persistent history notifier (%p) ignoring transaction from author %@
Unable to parse 
%{public}@
: %{public}@
Unable to evaluate 
%{public}@
: %{public}@
PushController: starting
Push token for %{public}@ has been removed, ignoring change...
Push tokens have not changed, skipping notification...
Push token received: %{public}@ in environment: %{public}@
Push notification received: %{public}@ in environment: %{public}@
Push notification missing message for topic: %{public}@ in environment: %{public}@
Unable to parse push message for topic: %{public}@ in environment: %{public}@: %{public}@
Received push for environment: %{public}@ enrollment token: %{public}@ topic: %{public}@
Unable to look for push tokens to update: %{public}@
No conduit configs for environment: %{public}@ enrollment token: %{public}@ topic: %{public}@
Updating %{public}@ for environment: %{public}@ enrollment token: %{public}@ topic: %{public}@
Error saving push received timestamps: %{public}@
PushController: refreshing
Unable to look for push subscriptions: %{public}@
Invalid push environment: 
%{public}@
Unable to extract private key from identity: %{public}@
Unable to extract certificate chain from identity: %{public}@
Unable to create certificate from identity: %{public}@
Unable to persist private key: %{public}@
Unable to extract private key: %{public}@
Unable to create private key: %{public}@
Unable to create certificate from data: %{public}@
Unable to generate key for self signed certificate: %{public}@}
Unable to retrieve public key from private key for self signed certificate: %{public}@}
Unable to generate self signed certificate from key pair
Starting status engine...
Started status engine...
There are unacknowledged status subscriptions...
Notifying delegate of unacknowledged status subscriptions...
Notified delegate of unacknowledged status subscriptions.
cleared lastAcknowledgedDate
Could not clear lastAcknowledgedDate %{public}@
Acknowledging status subscriptions: %{public}@...
Acknowledged status subscriptions: %{public}@
Could not acknowledge status subscriptions %{public}@: %{public}@
Status subscriptions already acknowledged: %{public}@
Making implicit status subscriptions for %@
Could not create subscription for %{public}@
Implicitly subscribed to %@
Could not implicitly subscribe to %{public}@: %{public}@
Could not update subscribed status key paths: %{public}@
Could not get subscribed status keypaths for identifiers %{public}@ from %{public}@: %{public}@
Could not get subscribed status key paths %{public}@ from %{public}@: %{public}@
Could not get subscribed status types from %{public}@: %{public}@
Could not get status subscriptions from %{public}@: %{public}@
Could not query for implicit status subscription.
Could not get or status status subscription for %d from %{public}@: %{public}@
Could not fetch management source for %{public}@: %{public}@
Unable to de-serialize declaration %{public}@: %{public}@
Could not fetch status subscriptions: %{public}@
Could not fetch status subscription configurations: %{public}@
Unable to fetch for subscribed status key paths for %{public}@: %{public}@
No subscribed status key paths matching %{public}@
Evaluating new connection %{public}@
%{public}@ cannot run, this feature is not enabled.
Accepted new connection %{public}@ 
application-identifier from connection is: %{public}@
XPCProxyHandler: Enrolling from proxy handler
Enrolling with %{public}@...
Could not enroll with %{public}@: %{public}@
Enrolled with %{public}@: %{public}@
enrollUserChannelWithURI is deprecated
XPCProxyHandler: Unenrolling from proxy handler
Could not unenroll with %{public}@: %{public}@
Unenrolled %{public}@ (checked out with the server)
Unenrolled %{public}@
XPCProxyHandler: Syncing from proxy handler
Could not sync with %{public}@: %{public}@
Synced with %{public}@
XPCProxyHandler: Checking device enrollment from proxy handler
Checking device enrollment
Could not check device enrollment: %{public}@
Device channel enrollment exists
Device channel enrollment does not exist
XPCProxyHandler: Finding management channel from proxy handler
Finding management channel
Failed to find management channel: %{public}@
Did not find management channel
Found management channel
XPCProxyHandler: Sending status data from proxy handler
Sending status data to %{public}@...
Could not send status with %{public}@: %{public}@
Sent status with %{public}@
Could not fetch for management sources with identifier %{public}@: %{public}@
XPCProxyHandler: Querying for status from proxy handler
Querying for status with key paths %{public}@ from %{public}@...
XPCProxyHandler: Querying and sending status of specific type from proxy handler
Querying and sending status with key paths %{public}@ to %{public}@...
Could not send status of types %{public}@ with %{public}@: %{public}@
Sent status of types %{public}@ with %{public}@
XPCProxyHandler: Querying for status subscriptions from proxy handler
Could not query for status subscriptions from %{public}@: %{public}@
Queried for status subscriptions from %{public}@
XPCProxyHandler: Querying and sending status subscriptions from proxy handler
Querying and sending status subscriptions with identifiers %{public}@ to %{public}@...
Could not send status subscriptions with identifiers %{public}@ with %{public}@: %{public}@
Sent status subscriptions with identifiers %{public}@ with %{public}@
XPCProxyHandler: Fetching configurations
Fetching configurations for: %{public}@
Fetched configurations of types %{public}@: %{public}@
Could not fetch configurations of types %{public}@: %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>19A603013</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>remotemanagementd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.remotemanagementd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>remotemanagementd</string>
<key>CFBundleShortVersionString</key>
<string>2.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>2.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>12A8179f</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>14.2</string>
<key>DTSDKBuild</key>
<string>18B5072c</string>
<key>DTSDKName</key>
<string>iphonesimulator14.2.internal</string>
<key>DTXcode</key>
<string>1200</string>
<key>DTXcodeBuild</key>
<string>12A8179f</string>
<key>MinimumOSVersion</key>
<string>14.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.remotemanagementd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
</array>
<key>com.apple.managedconfiguration.teslad-access</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
<string>SysCfg</string>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.rootless.storage.remotemanagementd</key>
<true/>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/rmd_test/</string>
<string>/private/var/tmp/com.apple.remotemanagementd/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Application Support/com.apple.remotemanagementd/</string>
<string>/Library/Caches/com.apple.remotemanagementd/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accountsd.accountmanager</string>
<string>com.apple.apsd</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.managedconfiguration.teslad</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobile.keybagd.UserManager.xpc</string>
<string>com.apple.mobileactivationd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.remotemanagementd</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
</array>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.create</key>
<true/>
<key>com.apple.usermanagerd.persona.delete</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
<string>lockdown-identities</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
