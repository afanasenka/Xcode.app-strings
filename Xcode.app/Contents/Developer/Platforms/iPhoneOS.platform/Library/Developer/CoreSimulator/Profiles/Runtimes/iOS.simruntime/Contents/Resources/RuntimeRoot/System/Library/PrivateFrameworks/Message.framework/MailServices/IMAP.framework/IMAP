aolAccountIcon
%@@aol.com
Sent
Trash
Drafts
Spam
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
AOL_DELIVERY_HOSTNAME
AOL SMTP Server
Delayed
mailAccount
T@"AOLAccount",&,N,GmailAccountIfAvailable,V_account
email
name
Username
FullUserName
EmailAddress
imapHostname
imapPort
imapRequiresSSL
smtpHostname
smtpPort
smtpRequiresSSL
sendFromAddressJSONURL
aliases
emails
account
address
canSendFrom
fullName
dotMacMailSupported
CastleIMAPErrorDomain
icloud.com
iCloud-%@
iCloud
%@-%p
com.apple.message.icloud.alias-update
CastleIMAPAccount.m
Invalid parameter not satisfying: %@
nil != _appleAccountLock
mac.com
me.com
v8@?0
Mailbox is over quota
%@ (%@)
%@:%@
X-MobileMe-AuthToken %@
EEE, dd MMM yyyy HH:mm:ss zzz
Current thread is main
Authorization
X-Apple-I-MD-M
X-Apple-I-MD
%llu
X-Apple-I-MD-RINFO
If-Modified-Since
p99-
v20@?0B8@"NSError"12
jsonrpc
update
method
params
POST
application/json-rpc; charset=UTF-8
castleAccountIcon
appleAccount
T@"ACAccount",R,N
accountStore
T@"ACAccountStore",R,N
deliveryHostname
T@"NSString",R,N
deliveryPortNumber
TI,R,N
deliveryUsesSSL
TB,R,N
aliasLookupURL
T@"NSURL",R,N
personID
T@"NSString",R,&,N
authToken
clientInfo
AKAnisetteProvisioningController
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
### Failed to Soft Linked: /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
(CHANGEDSINCE %@)
(FLAGS)
IMAPESearchMinKey
IMAPESearchMaxKey
IMAPESearchAllKey
IMAPESearchCountKey
IMAPESearchTagKey
-[MFIMAPConnection(ESearch) eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.20.0.1.22/Message/MessageStores.subproj/IMAP.subproj/ESearch.m
returning && "Should have at least one return request on an esearch command."
RETURN
Expected space
Expected number for minimum result
Expected number for maximum result
COUNT
Expected number for count result
Did not find a valid search return.
Expected right paren
Exchange
StoreDraftsOnServer
StoreSentMessagesOnServer
Sent Items
Deleted Items
Contacts
Calendar
Journal
Notes
Tasks
\Important
\Starred
\AllMail
\Spam
gmail.com
Gmail
Your account is not enabled for IMAP use.
IDToken
gmailAccountIcon
VERIFICATION_REQUIRED_TITLE
Verification Required
WEBLOGIN_PROMPT_FORMAT
Log in to your %@ account
MailErrorHandlerDoNotSanitize
xwebalert
webalert
EnableSchema
EnableHost
EnablePath
apple
GMAIL_ALL_MAIL_SPECIAL_MAILBOX_NAME
All Mail
self
GMAIL_DELIVERY_HOSTNAME
Gmail SMTP Server
T@"GmailAccount",&,N,GmailAccountIfAvailable,V_account
PLAIN-CLIENTTOKEN
MESSAGE_AUTH_GMAIL_CLIENTTOKEN
Gmail Client Token
IMAPAccountOfflineOperationQueued
ServerPathPrefix
lastPushRegistrationTime
CompactWhenClosingMailboxes
ListsSubscribedOnly
DaysBetweenSyncs
DateOfLastSync
PreventDismemberment
PushedMailboxes
NotesPushedMailboxes
NotesNotificationPrefix
urls
T@"NSArray",C,Vurls
paths
T@"NSArray",C,Vpaths
T@"IMAPAccount",&,Vaccount
path
T@"NSString",R,Vpath
TI,R,Vuid
changes
T@"NSDictionary",R,Vchanges
commitTime
Td,VcommitTime
connectionTag
TI,VconnectionTag
com.apple.email
separator
namespace
capabilities
push-service-level
aps-topic
push-registered-mailboxes
connectionLock
163AccountIcon
126AccountIcon
qqAccountIcon
imapmbox
imap
imaps
IMAP
IMAP_SERVER_ALERT_FORMAT
WARNING_TITLE
Warning
DeleteInPlace
IMAP_OPEN_FAILED_TITLE_FORMAT
VerifiedESEARCH
com.apple.mail.IMAPAccount.ESearchVerificationFailure
hostname
@"NSDictionary"8@?0
MailboxName
Apple Mail To Do
IMAPAccount
_releaseAllConnectionsAndCallSuper
edgeOnly
IMAP account %@ (%@)
com.apple.mail.imap.offlinestatuschange
INBOX
INBOX%@INBOX
-[IMAPAccount _newMailboxWithParent:name:attributes:dictionary:withCreationOption:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.20.0.1.22/Message/Accounts.subproj/IMAPAccount.m
creationOption == MailboxCreationOptionDefault
SYNCHRONIZING_WITH_SERVER_FORMAT
Synchronizing with server
CHECKING_FOR_MAIL
Main
v32@?0@"NSString"8@"NSDictionary"16^B24
B16@?0@"MFMailboxUid"8
@16@?0@"MFMailboxUid"8
IMAP_REMOVING_CACHE_FILES
Removing old cache files...
MAILBOX_NAME_INCLUDES_PATH_SEPARATOR
NO_OFFLINE_MAILBOX_RENAMING
.OfflineCache
Account
RelativePath
v32@?0@"NSString"8@"NSString"16^B24
.%@.%@
RelatedMessagesShouldIncludeDrafts
could not create mailbox names for: %@, pushed mailboxes: %@ (sep: %@ prefix: %@)
not 
CANNOT
is NOT
    topic: %@
    known capabilities: %@
    negotiated push service level: %@
    last push registration time: %@
<never>
    mailboxes registered for push: %@
MOVE
Got store of class %@ for mailbox %@
IMAPAccount.m
Got wrong type of store for mailboxURL
mail-automation: IMAPAccount
T@"NSObject<OS_os_log>",R
apsSenderArgument
T@"NSString",C,N,V_apsSenderArgument
apsVersion
Ti,N,V_apsVersion
isOffline
TB,R
StoreTrashOnServer
StoreArchiveOnServer
<null>
<unavailable>
<unknown>
version 1
version 2
version 3
_pushServiceLevelName
0 && "unknown push service level"
IMAPMailboxAttributes
DELETED
Source UIDS
Destination UIDS
\All
\Archive
\Drafts
\Flagged
\Junk
\Sent
\Trash
XAPPLEPUSHSERVICE
aps-version
sender
NONE
aps-account-id
aps-device-token
aps-subtopic
mailboxes
mailbox
(BODY.PEEK[HEADER.FIELDS (MESSAGE-ID)])
(UID X-GM-MSGID)
(UID FLAGS)
+FLAGS.SILENT
-FLAGS.SILENT
command
Ti,N,V_command
arguments
T@"NSArray",&,N,V_arguments
untaggedResponses
T@"NSMutableArray",&,N,V_untaggedResponses
sequenceNumber
TQ,N,V_sequenceNumber
responseConsumer
T@"MFIMAPResponseConsumer",&,N,V_responseConsumer
d-MMM-yyyy
(){ %*\"
    supports IDLE: %@
    using IDLE: %@ (seq=%lu)
STARTTLS
LITERAL+
LITERAL-
UIDPLUS
CHILDREN
IDLE
QUOTA
NAMESPACE
MULTIAPPEND
UNSELECT
LOGINDISABLED
XLIST
COMPRESS=DEFLATE
ESEARCH
CONDSTORE
SASL-IR
XYMHIGHESTMODSEQ
X-GM-EXT-1
SPECIAL-USE
LIST-STATUS
LIST-EXTENDED
"%@"
"%@ (%@)"
"name"
"version"
"os"
"iOS"
"os-version"
%@%@
DEFLATE
FAILED_FETCH_TITLE
Cannot Get Mail
IMAPConnection.m
outNonSynchronizingLiteral
{%lu%s}
%lu 
v40@?0r^v8{_NSRange=QQ}16^B32
B32@?0r*8Q16B24B28
IMAP_OPEN_FAILED_MSG_FORMAT
IMAP_COMMAND_FAILED_FORMAT1
AUTH_NOT_SUPPORTED_FORMAT
FAILED_LOGIN
STATUS %@
RETURN (%@)
@"NSNull"16@?0^@8
*** Server doesn't support UIDPLUS
(NOT A CRASH) see <rdar://problem/26633447> : term should be an NSString, but is %@
B8@?0
(\Deleted)
BEFORE
uids
mailboxName
-[MFIMAPConnection storeGmailLabels:state:forUIDs:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.20.0.1.22/Message/MessageStores.subproj/IMAP.subproj/IMAPConnection.m
MinFetchChunkSize
MaxFetchChunkSize
FetchDeltaTarget
%llu:*
%llu:%llu
v32@?0{_NSRange=QQ}8^B24
TLS_NOT_SUPPORTED_FORMAT
TLS_FAILED_FORMAT
Disconnected
Non-authenticated
Authenticated
Selected
<%@:%p> [%@%s] delegate=%p mailbox=<%@>
, Fetching
<%@:%p> [%@%s] delegate=%p
%@ delegate=%p
<%p:%@> [%@ (%@)]
<%p:%@> [%@]
-[MFIMAPConnection _fetchArgumentForMessageSkeletonsWithHeaders:]
requiredHeaders
(INTERNALDATE UID RFC822.SIZE FLAGS 
MODSEQ 
X-GM-MSGID 
BODY.PEEK[HEADER.FIELDS (
%@ ...
%@ %@
 ...
%@ %@%@
%lu %s %@
hasValidConnection
ef_publicDescription
T@"NSString",R,C,N
idleCommandSequenceNumber
TQ,N,V_idleCommandSequenceNumber
idleSubscriptionCancelable
T@"<EFCancelable>",&,N,V_idleSubscriptionCancelable
permanentFlags
TI,N,V_permanentFlags
fetchPipeline
T@"MFIMAPCommandPipeline",R,&,N,V_fetchPipeline
downloadCache
T@"MFIMAPDownloadCache",R,&,N,V_downloadCache
delegate
T@"<MFIMAPConnectionDelegate>",W,N,V_delegate
Ti,N,V_tag
connectTime
Td,R,N,V_connectTime
gotBadResponse
TB,R,N,V_gotBadResponse
idle
TB,R,N,GisIdle
<%@: %p>
%@ set %@
%@ unset %@
mask
TQ,R,N,V_mask
searchTerms
T@"NSArray",R,N,V_searchTerms
isPositiveMatch
TB,R,N,V_isPositiveMatch
CAPABILITY
NOOP
LOGOUT
AUTHENTICATE
LOGIN
LIST
LSUB
STATUS
EXAMINE
CREATE
DELETE
RENAME
SELECT
SUBSCRIBE
UNSUBSCRIBE
EXPUNGE
UID EXPUNGE
CLOSE
APPEND
FETCH
UID FETCH
UID STORE
UID COPY
UID SEARCH
GETQUOTAROOT
GETQUOTA
DONE
SEARCH
XDELIVER
COMPRESS
UID MOVE
DisableESEARCH
DisableCOMPRESS
DisableCONDSTORE
"dd-MMM-yyyy HH:mm:ss ZZ"
 remoteID=%@
%s%u
temp-
operations
In-Reply-To:
References:
BODY[HEADER.FIELDS (REFERENCES IN-REPLY-TO)]
HEADER
Message-ID
v32@?0@"NSString"8Q16^B24
UNDELETED
dataHolder
T@"MFDataHolder",&,N,V_dataHolder
q24@?0@8@16
-[MFBaseSyncResponseQueue sequenceIdentifierForItem:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.20.0.1.22/Message/MessageStores.subproj/IMAP.subproj/LibraryIMAPStore.m
[item isKindOfClass:[NSArray class]]
indexSet
T@"NSIndexSet",R,&,N,VindexSet
SupportsCustomFlags
CachedConnectionLock
%@ - '%@'
Store %@ has no mailboxURL
LibraryIMAPStore.m
We have a library IMAP store without a mailboxURL
@"EDServerMessagePersistence"16@?0^@8
DOWNLOADING_STATUS_FORMAT
Downloading %@ of %@
UNSEEN
SEEN
FLAGGED
ANSWERED
KEYWORD
$Forwarded
Forwarded
%lu:*
v16@?0@"MFIMAPConnection"8
store and connection mailboxes differ
HIGHESTMODSEQ
%lu:%lu
@"MFMessageCriterion"16@?0@"MFMessageCriterion"8
LibraryIMAPStoreErrorDomain
v32@?0Q8@"NSIndexSet"16@"NSError"24
IMAP_COMPACT_FAILED
Couldn't make replayer for action %@
[message isKindOfClass:[MFMailMessage class]]
@"NSString"12@?0I8
temp-%lu
multipart
Download fetched 0 bytes
X-GM-MSGID
Junk
$Junk
NotJunk
$NotJunk
@"NSNumber"16@?0@"MFAppStateMonitor"8
@"NSNumber"16@?0@"NSArray"8
com.apple.message.imap (IDLE)
v16@?0@"NSError"8
v16@?0@"NSNumber"8
%@ - %@
DeletedSearchLimit
shouldUseIDLE
TB,V_shouldUseIDLE
cancelationToken
T@"EFCancelationToken",&,N,V_cancelationToken
serverMessagePersistence
T@"EDServerMessagePersistence",R,&,N
compactMessagesToUID
limit
remoteID
CHARSET
UTF-8
v16@?0@"NSString"8
SUBJECT
fetchArgumentsForCriterion
0 && "Message ID header criterion must have a MessageRuleIsEqualTo qualifier"
FROM
(OR TO
NOT 
NSArray *fetchArgumentsForCriterion(MFMessageCriterion *__strong, BOOL)
could not map expression to flag: %@
UNKEYWORD 
KEYWORD 
SINCE
0 && "Need to handle criterion for IMAP headers"
(OR FROM
(OR SUBJECT
(OR CC
BODY
MFAPSManagerDeviceTokenChangedNote
com.apple.mobilemail.dummyTopicToForceServerConnection
com.apple.mobilemail.push.
com.apple.mail.
account-id
com.apple.email.maild.aps
com.apple.message.apsManager
System/Library/PrivateFrameworks/ApplePushService.framework
APSConnection
development
production
MFUseAPSDevelopmentEnvironment
==== MFAPSManager ====
  push service: %@
  watched topics: {%@}
  ignored topics: {%@}
  device token (%@): '%@'
waiting for token
has token
_tokenConditionString
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.20.0.1.22/Message/Accounts.subproj/MFAPSManager.m
0 && "unknown token condition"
content-class
urn:content-classes:message
urn:content-classes:appointment
(UID FLAGS BODY.PEEK[HEADER.FIELDS (content-class)])
 content-class
BODYSTRUCTURE
.PEEK
bodyDataConsumer
T@"<MFDataConsumer>",&,N,V_bodyDataConsumer
consumerSection
T@"NSString",&,N,V_consumerSection
fetchItem
T@"NSString",C,N,V_fetchItem
TI,N,V_uid
mainConsumer
T@"MFBaseFilterDataConsumer",R,N,V_mainConsumer
TEXT
BODY.PEEK[
B16@?0@"MFIMAPDownload"8
-[MFIMAPFetchResult envelope]
MFIMAPFetchResult.m
Invalid item type %d
-[MFIMAPFetchResult setEnvelope:]
-[MFIMAPFetchResult internalDate]
-[MFIMAPFetchResult setInternalDate:]
-[MFIMAPFetchResult fetchData]
-[MFIMAPFetchResult setFetchData:]
-[MFIMAPFetchResult messageSize]
-[MFIMAPFetchResult setMessageSize:]
-[MFIMAPFetchResult bodyStructure]
-[MFIMAPFetchResult setBodyStructure:]
-[MFIMAPFetchResult startOffset]
-[MFIMAPFetchResult setStartOffset:]
-[MFIMAPFetchResult section]
-[MFIMAPFetchResult setSection:]
-[MFIMAPFetchResult uid]
-[MFIMAPFetchResult setUid:]
-[MFIMAPFetchResult uniqueRemoteId]
-[MFIMAPFetchResult setUniqueRemoteId:]
-[MFIMAPFetchResult flagsArray]
-[MFIMAPFetchResult setFlagsArray:]
-[MFIMAPFetchResult setMessageFlags:]
-[MFIMAPFetchResult setCustomFlagsArray:]
-[MFIMAPFetchResult customFlagsArray]
* INVALID *
ENVELOPE %@
INTERNALDATE
RFC822.SIZE %u
BODYSTRUCTURE %@
BODY[%@]<%lu> {%lu}...
BODY[%@] {%lu}...
UID %u
X-GM-MSGID %llu
FLAGS (%@%@%@)
MODSEQ %d
MFIMAPMessageDownload
boundary
q16@?0@"NSData"8
\Seen
\Answered
\Deleted
\Draft
\Recent
$MDNSent
$SubmitPending
$Submitted
Redirected
JunkRecorded
$MailFlagBit0
$MailFlagBit1
$MailFlagBit2
%@: Unexpected byte %x at position %lu
MFIMAPOperation.m
Invalid method for type %d
CREATE [%@]
DELETE [%@]
[%@] STORE 
 ** expunged **
 <+FLAGS.SILENT%@>
 <-FLAGS.SILENT%@> 
APPEND [%@] %@ {%u}
COPY [%@] [%@]
-[MFIMAPParseContext setStart:]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.20.0.1.22/Message/MessageStores.subproj/IMAP.subproj/MFIMAPParseContext.m
start >= _originalStart && "Should not put the start before the original start."
-[MFIMAPParseContext setEnd:]
end <= _originalEnd && "Should not put the end past the original end."
Error while parsing IMAP response %@: %@
Remaining text: <%@>
Expected number in literal
Expected right curly brace
Expected end-of-line
Read failure
Ignoring extra bytes read during literal
d-MMM-yyyy H:mm:ss ZZZ
Can't parse array contents
MESSAGES
RECENT
EXISTS
_IMAPNameQuotaKey
_IMAPCurrentUsageQuotaKey
_IMAPMaxUsageQuotaKey
_IMAPNamespacePrefixKey
_IMAPNamespaceDelimiterKey
_IMAPNamespaceExtensionsKey
CHARSET=
MFIMAPResponse.m
%@ is invalid for %s
%@ is invalid for response type %d
-[MFIMAPResponse fetchResults]
/Library/Caches/com.apple.xbs/Sources/Mail_Message_Sim/Mail-3654.20.0.1.22/Message/MessageStores.subproj/IMAP.subproj/MFIMAPResponse.m
_responseType == IMAPFetchResponse && "Invalid response type for fetchResults"
(%@)
 ==> (%@)
 "%@"
 (%@ %@/%@)
 %@ %c%@
*nil*
("%@" 
 "%@" ("%@")
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"NSArray"8
 TAG ("%@") UID ALL (returned %lu uids, lowest = %lu, highest = %lu)
 TAG ("%@") UID MAX %@
 TAG ("%@") UID MIN %@
 TAG ("%@") UID COUNT %@
privateNamespaces
T@"NSArray",C,N
publicNamespaces
sharedNamespaces
should not register multiple consumers for the same section: %@
--Not Set--
PREAUTH
FLAGS
QUOTAROOT
--OTHER--
X-UID-FLAGS
ALERT
UNAVAILABLE
AUTHENTICATIONFAILED
AUTHORIZATIONFAILED
EXPIRED
PRIVACYREQUIRED
CONTACTADMIN
NOPERM
INUSE
EXPUNGEISSUED
CORRUPTION
SERVERBUG
LIMIT
OVERQUOTA
ALREADYEXISTS
NONEXISTENT
BADCHARSET
NEWNAME
PARSE
READ-ONLY
READ-WRITE
TRYCREATE
UIDNEXT
UIDVALIDITY
NOMODSEQ
PERMANENTFLAGS
APPENDUID
COPYUID
CLIENTBUG
Expected ]
Expected list or NIL
\Noinferiors
\Noselect
\Marked
\Unmarked
\HasChildren
\HasNoChildren
\NonExistent
Invalid FETCH response
Couldn't parse FETCH: no space character in input
ENVELOPE
RFC822.SIZE
RFC822
RFC822.HEADER
RFC822.TEXT
MODSEQ
BODY[
HEADER.
Unable to parse header keys array
Couldn't parse FETCH: no square brace character in input
Expected number
Expected >
Unrecognized FETCH key
Expected a right paren
couldn't parse NAMESPACE: unexpected atom
couldn't parse namespace response: prefix and/or delimiter were not strings
couldn't parse namespace response extensions: invalid key or value
couldn't parse namespace response extensions: not enough values for keys
@"NSArray"8@?0
--EXTENSION--
Incomplete response
Junk at end of response
EmailAuthNone
EmailAuthCRAMMD5
EmailAuthNTLM
EmailAuthHTTPMD5
EmailAddresses
EmailDomain
EmailAccountName
IncomingMailServerAuthentication
OutgoingMailServerAuthentication
OSXServerIMAPErrorDomain
OS X Server
%@@%@
T@"MFOSXServerIMAPAccount",&,N,GmailAccountIfAvailable,V_mailAccount
parentAccountMailProperties
T@"NSDictionary",R,N
ATOKEN
MESSAGE_AUTH_ATOKEN
Apple Token
castleAccount
T@"CastleIMAPAccount",&,N,V_castleAccount
CASTLE_SMTP_SERVER
iCloud SMTP Server
XOAUTH2
MESSAGE_AUTH_OAUTH2TOKEN
OAuth 2.0 Token
user=%@
auth=Bearer %@
yahoo.com
YahooAllowSSL
YahooIMAPPort
Draft
Bulk Mail
%@@yahoo.com
Inbox
ymail://?fid=%@&mid=%@
yahoo.co.jp
ybb.ne.jp
yahooAccountIcon
YAHOO_DELIVERY_HOSTNAME
Yahoo! SMTP Server
T@"YahooAccount",&,N,GmailAccountIfAvailable,V_account
%@ (%@) failed to get auth token: %{public}@
anisetteDataWithError failure: %@ (%.3f sec)
anisetteDataWithError success: %@ (%.3f sec)
Over quota error message: %@
#Warning #CloudSync AnisetteData not found for account: %{public}@ error: %{public}@
#CloudSync Starting request for aliases for account %@.
#CloudSync Response from new alias %@. Status Code: %lu
Data: %@
#CloudSync Alias Data: %@
Email alias request to [%@] failed with error code [%lu]
Email alias requests configured to use [%@], scheduling reprovision
#CloudSync Unable to push new alias data to server %@. Received response code %lu, with error %{public}@.
JSON:%@
#CloudSync response: %@.
JSON: %@
Got a response, but it was not for our tag.  Throwing out the results.
Got invalid value in sequence set
#Warning failed to get client token
Connection %{public}@ state: %d
*** Unable to determine name for %@
Checking in connection and clearing delegate: %{public}@
#Warning Unselected connection checked back in, mailbox: %@, connection: %@
#Network %@: -[%@ _releaseAllConnectionsAndCallSuper:%{BOOL}d synchronously:%{BOOL}d edgeForcedOnly:%{BOOL}d saveOfflineCache:%{BOOL}d]
#Network All connections: %@
#Network EDGE ONLY
#Network Dropping connections: %@
No connection!! What's going on?
%{public}@ deleting messages from mailbox: %{public}@ older than %d days
#aps-push warning, can't find mailbox with name '%{public}@' (%{public}@)
#aps-push failed to generate hash for mailbox named '%{public}@'
#aps-push Setting aps-topic '%@' for account %@
#aps-push account <%@:%p> scheduling push registration connection
#aps-push account %@ forcing push registration connection
#aps-push account %@ will NOT force push registration connection, didRequestPushRegistration: %s, mustRegisterOnNextConnection: %s
#aps-push account %@ has no pushed mailboxes, skipping
#aps-push account %@ last registered for push %.3f seconds ago
#aps-push {mailboxes=%@, topic=%@, version=%d}
#aps-push external push client registration failed: %{public}@
#aps-push %@
#aps-push Received notification for account '%@', will %@handle push
#aps-push warning, %@ got a notification for mailbox %@, but we're not enabled for the appropriate dataclass
#aps-push warning, %@ got a notification for mailbox with hash '%@', but can't find that mailbox.
#aps-push account %@ will NOT start listening for notifications, canRegisterForAPSPush returned NO
#aps-push account %@ will NOT start listening for notifications, battery-saver mode is ON
#aps-push account %@ told to start listening for notifications
#aps-push account %@ did NOT register for push, %s register for push and PCConnectionStyle %s push
#aps-push account %@ told to stop listening for notifications
Couldn't get store from mailbox %@
Couldn't get mailbox from URL
Attempting to find a cached connection. _cachedConnections:
%{public}@
Checking out cached connection: %{public}@
No cached connection found. Creating new connection: %{public}@
sending ID command: %@
server response to ID request: %@
server does not support ID extension
#aps-push not registering for push on unauthenticated connection for account %@
#aps-push connection doesn't support XAPPLEPUSHSERVICE for account %@
#aps-push MCC push settings are not set to push (%d != PCStylePush) for account %@
#aps-push account %@ not registering for push
#aps-push failed to get device token while registering for push on account %@
#aps-push Including Sender paramenter. Argument: {%{public}@}
#aps-push account %@ registering for push: {%@}
#aps-push account %@ will send pushes for mailbox '%@'
#aps-push account %@ (version %@) ignoring invalid version in push response '%@'
#aps-push account %@ (version %@) sent unknown push response %@
#aps-push account %@ will NOT push these mailboxes {%@}
#aps-push account %@ will push all requested mailboxes
#aps-push account %@ specified bad version/topic in response: %@
#aps-push account %@ received mailbox responses but version 1 response, ignoring mailboxes
#aps-push account %@ rejected XAPPLEPUSHSERVICE request: %@
server supports deflate compression, sending COMPRESS request
server rejected our COMPRESS request: %@
*** Failed to read initial response from %@
*** Expected untagged initial response from %@
*** Invalid IMAP command %d
%{public}@ WROTE: %{public}@
%{public}@ failed to write commands
%{public}@ READ: %d untagged fetch responses
%{public}@ READ: %d untagged list responses
%{public}@ READ: %{public}@
LOGIN failed due to non-ascii username: %{public}@
LOGIN failed with error %{public}@
Idle: connection <%p> received response while idling: %@
Idle: connection <%p> starting IDLE state for delegate %@
Idle: connection <%p> failed to enter IDLE state: %@
Idle: connection <%p> delegate rejected starting IDLE state: %@
Idle: connection <%p> leaving IDLE state for delegate: %@
Idle: connection <%p> timer fired for delayed IDLE reset after %0.2fs delay: %@
Idle: connection <%p> resetting IDLE state: %@
%{public}@
inconsistent esearch counts detected, ignoring esearch capability
#Warning Invalid response from SEARCH command
IMAPConnection: source UIDs count is different from destination UIDs (source: %@; destination: %@)
#Warning %@ claimed to support initial response data, and didn't supply an initial response
IMAP protocol error: %@
IMAP auth failure: %@
*** Unexpected response during authentication: %@
Unhandled response to command %s: %@
MFIMAPConnection was lost during processing of command %s: %@.
*** Error while creating %@: %{public}@
replaying %lu operations with connection %@
replaying %@
removing failed operation from offline cache: %@
*** Error while selecting %@: %{public}@
ERROR: UNKNOWN RESULT: %@ %d
#Power [New Message] subject=%@;
#Warning %@: Cannot set library to %@. See rdar://problem/42167098.
%{public}@: Fetching skeletons for %lu uids (%lu new)
%{public}@: Fetching flags for %lu uids
%{public}@: Compacting %lu messages during IMAP sync
%{public}@: Search for recent UIDs returned %lu items (success=%@)
%{public}@: starting UID sync idRange=%@ limit=%lu topUIDToCompact=%lu topKnownUID=%lu UIDCount=%lu lowUID=%lu highUID=%lu serverMessagesIndex=%lu serverMessagesUIDs found=%u to %u
%{public}@: preserving UID %lu!
%{public}@: Compacting %u (1)
Syncing %lu
%{public}@: Fetching %lu
%{public}@: Compacting %lu (2)
%{public}@: _fetchMessagesWithArguments returns %lu
%{public}@: fetchNumMessages started with options 0x%lX, numMessages = %lu
%@: "Connecting..." starting
store and connection mailboxes differ: store=%@ connection=%@ (%p, valid: '%{public}@')
canceling fetch because connection is invalid
canceling fetch because mailbox could not be selected
%@: "Connecting..." completed
%{public}@: fetchNumMessages finished with result %ld
IMAP Account %{public}@ deleting messages from store: %@ older than %d days using connection: %@
-[MFLibraryIMAPStore _dataForMessage:] bad message data
Download fetched 0 bytes for UID %u
failed to download data, message.remoteID may be null
performOperationRequiringConnection: mailbox='%{public}@' connection=%p cached=%@ options=%d
%{public}@: Received UIDNEXT = %u
%{public}@: Forcing reload of '%{public}@' because of UIDVALIDITY change (old:%lu new:%lu)
%{public}@: Got EXISTS = %llu
#imap-idle error occurred while observing conditions for IDLE: %{public}@
#imap-idle scheduling IDLE transition (should-use-idle %@): %@
%{public}@: Got new UIDNEXT (old = %u, new = %u)
%{public}@: No messages to compact
%{public}@: Compacting all messages. Found %u (> %u).
%{public}@: Compacting messages with UIDs <= %lu. Found %u (> %u).
%{public}@: Not compacting messages. Found %u (<= %u).
#Warning unsupported header criterion type %@
#Warning need to handle criterion for IMAP search: %@
#aps-push Unable to open ApplePushService at %@
#aps-push Push service already running.
#aps-push Using %@ APS environment.
#aps-push A launchd mach service name is required but none was provided, pushes will not work - this will turn into an assert in the future
#aps-push Starting MFAPSManager.
#aps-push Starting MFAPSManager. Waiting for public token.
#aps-push Stopped MFAPSManager.
#aps-push Start watching topic '%@'
#aps-push Stop watching topic '%@'
#aps-push Swapping registered topic '%@' for topic '%@'
#aps-push Received public token '%@'.
#aps-push received notification on topic '%@', userInfo=%@
Server returned less bytes than expected for part %{public}@ (%lu versus %lu)
uid of message %{public}@ is 0
Unexpected byte %u at position %lu
deserialized offline operation was invalid - skipping
attempt to create an invalid offline operation of type %d with no mailbox name %p
attempt to create an invalid store-flags offline operation: %lu true flags, %lu false flags, %lu uids
attempt to create an invalid copy-message offline operation: %lu srcUids, %lu dstUids, dstMailbox=%p (%lu)
*** Warning while parsing %@: %@
Remaining text: <%@>
Invalid for response type %d
#Warning caught %@: %@
caught %@: %@
server returned data we don't have a consumer for, might be expected for section %@
We did something bad: we just got back a CLIENTBUG from the server.
#Power [Server Fetch Time] InternalDate=%@
#Warning couldn't find our CastleAccount for our sending account: %@
AOLAccount
MFOAuth2TokenAuthProtocol
NSObject
MFAOLSMTPAccount
CastleIMAPAccount
CondStore
ESearch
ExchangeAccount
GmailAccount
MFClientTokenAuthProtocol
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
MFGmailSMTPAccount
MFGmailClientTokenAuthScheme
_MFGmailClientTokenAuthenticator
_MFIMAPMailboxDeletionQueueEntry
_MFFlagChangeEntry
IMAPAccount
MFIMAPConnectionDelegate
EFLoggable
MFIMAPMailboxListFilter
_MFIMAPCommandParameters
MFIMAPConnection
ECIMAPServerInterface
EFPubliclyDescribable
MFIMAPConnectionFlagSearchResults
MFIMAPConnectionFlagSearchRequest
MFIMAPMessage
IMAPNameEncoding
MFIMAPOperationCache
ReferenceSearching
_MFIMAPAppendMessagesContext
_MFWholeMessageSection
MFMessageDataSection
MFFetchResponseQueue
MFSearchFetchResponseQueue
MFBaseSyncResponseQueue
MFSyncResponseQueue
MFSearchResponseQueue
MFLibraryIMAPStore
MFIMAPSequenceIdentifierProvider
ECIMAPLocalActionReplayerDelegate
ECLocalActionReplayerDelegate
MFAPSManager
APSConnectionDelegate
MFDiagnosticsGenerator
MFExchangeConnection
MFIMAPCommandPipeline
_MFIMAPFetchUnit
MFIMAPDownload
MFIMAPSimpleDownload
MFIMAPCompoundDownload
MFIMAPDownloadCache
MFIMAPFetchResult
MFIMAPMessageDownload
MFIMAPMessageWithCache
MFIMAPOperation
MFIMAPOfflineCopyOnStupidServerOperation
MFIMAPParseContext
MFIMAPResponse
MFIMAPResponseConsumer
MFOSXServerIMAPAccount
MFOSXServerSMTPAccount
MFNewcastleAuthScheme
_MFNewcastleAuthenticator
MFNewcastleSMTPAccount
MFOAuth2TokenAuthScheme
_MFOAuth2TokenAuthenticator
YahooDeliveryAccount
YahooAccount
MFYahooSMTPAccount
isEqualToString:
rangeOfString:
stringWithFormat:
_defaultSpecialMailboxNameForType:
setMailAccount:
standardAccountClass:valueForKey:
boolValue
unsignedIntValue
displayedAccountTypeString
accountTypeIdentifier
emailAddressWithUsername:
deliveryAccountHostname
deliveryAccountUsesSSL
deliveryAccountPortNumber
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
username
password
oauth2Token
statisticsKind
iconString
derivesDeliveryAccountInfoFromMailAccount
URLForMessage:
_deliveryAccountCreateIfNeeded:
accountForRenewingCredentials
preferredAuthScheme
displayHostname
shouldUseAuthentication
usesSSL
hostname
portNumber
shouldFetchACEDBInfoForError:
mailAccountIfAvailable
.cxx_destruct
_account
initWithLibrary:persistentAccount:
initWithName:andDelegate:
_resetAppleAccount
dealloc
isAccountClassEquivalentTo:
isUsernameEquivalentTo:
shouldRegisterForPush
canAttemptPushRegistration
canReceiveNewMailNotifications
separatorChar
startListeningForNotifications
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
lock
persistentAccount
parentAccount
defaultCenter
_accountsChanged:
accountStore
addObserver:selector:name:object:
unlock
removeObserver:name:object:
sharedAccountStore
persistentStore
appleAccount
propertiesForDataclass:
objectForKey:
dictionary
isProvisionedForDataclass:
errorWithDomain:code:localizedDescription:
childAccounts
countByEnumeratingWithState:objects:count:
accountType
identifier
setObject:forKey:
emailAddressValue
domain
containsObject:
arrayWithObjects:count:
setValue:forKey:
aa_firstName
setGivenName:
aa_lastName
setFamilyName:
localizedStringFromPersonNameComponents:style:options:
accountWithProperties:
defaultPath
setPath:
setUsesSSL:
setParentAccount:
setAuthenticationType:
persistentAccountDidChange:previousAccount:
parentAccountIdentifier
_mailPropertyFromAppleAccountForKey:
accountPropertiesValueForKey:value:
setUsername:
defaultEmailAddress
aa_personID
authTokenWithError:
aa_authTokenWithError:
ef_publicDescription
anisetteDataWithError:
clientInfoHeader
copy
length
mf_isInaccessibleAccountCredentialError
schemeWithName:
firstEmailAddress
emailAddressStrings
count
emailAddressesAndAliases
allKeys
_fromEmailAddressesIncludingDisabled:
emailAddressesDictionary
receiveEmailAliasAddresses
array
valueForKey:
addObject:
aa_password
handleOverQuotaResponse:
handleAlertResponse:
initForDataclass:
showWithHandler:
displayName
setDisplayName:
deliveryHostname
setHostname:
deliveryPortNumber
setPortNumber:
deliveryUsesSSL
setPreferredAuthScheme:
setCastleAccount:
URLWithString:
initWithFormat:
aa_authToken
dataUsingEncoding:
mf_encodeBase64WithoutLineBreaks
JSONObjectWithData:options:error:
objectForKeyedSubscript:
componentsWithString:
stringValue
numberWithBool:
setDefaultEmailAddress:
setLocalDefaultEmailAddress:
mutableCopy
setEmailAddresses:
setReceiveEmailAliasAddresses:
setLocallyEnabled:forEmailAddress:
ef_posixLocale
setLocale:
setDateFormat:
stringFromDate:
_updateEmailAddressAndAliases
aliasLookupURL
sharedInstance
isNetworkUp
requestWithURL:
setHTTPMethod:
_aliasAuthorizationHeader
setValue:forHTTPHeaderField:
_aliasUserAgent
ak_addDeviceUDIDHeader
ak_addClientInfoHeader
machineID
oneTimePassword
routingInfo
lastEmailAliasesSyncDate
_headerStringFromDate:
statusCode
initWithData:encoding:
_aliasesFromData:
_emailsFromData:
_defaultEmailAddressFromData:
isEqualToDictionary:
fromEmailAddresses
objectAtIndex:
objectAtIndexedSubscript:
savePersistentAccount
date
setLastEmailAliasesSyncDate:
host
hasPrefix:
aa_updatePropertiesForAppleAccount:completion:
dictionaryWithObjectsAndKeys:
arrayWithCapacity:
_prepareAliasData
dataWithJSONObject:options:error:
setHTTPBody:
isEnabledForDataclass:
accountDescription
initialize
emailAddressHostPart
defaultPathNameForAccountWithHostname:username:
accountTypeString
isPredefinedAccountType
usernameIsEmailAddress
primaryDeliveryAccountIsDynamic
newChildAccountWithParentAccount:error:
shouldDisplayHostnameInErrorMessages
isEquivalentTo:hostname:username:
uniqueIdForPersistentConnection
allowsTrustPrompt
displayUsername
personID
authToken
clientInfo
credentialAccessibility
emailAddressesAndAliasesList
fromEmailAddressesIncludingDisabled
setPasswordInKeychain:
_removePasswordInKeychain
passwordFromKeychain
_aliasesFromOldData:
setEnabled:forEmailAddress:
updateEmailAliases
pushUpdateForAliasData
supportsArchiving
_appleAccountLock
_appleAccount
_deliveryAccount
_readyForPushRegistration
_aliasChanges
_updatedDefaultEmail
_aliasUpdateQueue
simpleAddress
messageSetForNumbers:
initWithCommand:arguments:
_responseFromSendingCommands:
responseType
untaggedResponses
fetchResults
modSequenceNumber
addItem:
didFinishCommands:
sendResponsesForCondStoreFlagFetchForUIDs:withSequenceIdentifier:toQueue:
initWithCapacity:
appendString:
addObjectsFromArray:
keyValuePairs
intValue
sequenceNumber
removeObjectAtIndex:
copyArgumentForSearchTerm:
eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:
initWithString:
isAtEnd
scanInteger:
scanLocation
characterAtIndex:
setScanLocation:
addIndexesInRange:
addIndex:
start
match:
parseSpace
emitWarning:
copyNumber
emitError:
response
copyMessageSet
parseIndexSetFromSequenceSet:
copyQuotedString
parseSearchReturn:
eSearchIDSet:areMessageSequenceNumbers:forTerms:success:returning:
parseESearchResponseWithContext:
_filterMailboxList:forMailboxWithPath:iisServer:
connectionClass
_syncOnly_defaultValueForShouldStoreJunkOnServer
storeDraftsOnServer
storeSentMessagesOnServer
shouldExpungeMessagesOnDelete
filterMailboxList:forMailbox:options:
_boolForAccountInfoKey:defaultValue:
authSchemesForAccountClass
mf_lock
mf_unlock
removePasswordForServiceName:accountName:
passwordForServiceName:accountName:synchronizable:error:
_consumeExistingPreAuthToken
UUID
UUIDString
addClientToken:forAccount:
clientTokenForAccount:
archiveDestinationForMailbox:
setPassword:
emptyFrequencyForMailboxType:
previousFailureCount
initWithUser:password:persistence:
sender
useCredential:forAuthenticationChallenge:
finishWithResult:
finishWithError:
setObject:forKeyedSubscript:
errorWithDomain:code:localizedDescription:title:userInfo:
stringByRemovingPercentEncoding
ef_gmailAuthAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
responseCode
responseInfo
caseInsensitiveCompare:
_URLFromUncleanString:
_webLoginErrorWithURL:
errorForResponse:
sharedCredentialStorage
allCredentials
allValues
removeCredential:forProtectionSpace:
future
setScheme:
setHost:
initWithURL:
ephemeralSessionConfiguration
sourceApplicationBundleIdentifier
set_sourceApplicationBundleIdentifier:
sessionWithConfiguration:delegate:delegateQueue:
dataTaskWithRequest:
resume
resultWithTimeout:error:
invalidateAndCancel
_removeCredential:
localizedDescription
supportsCapability:
mailboxUidOfType:createIfNeeded:
specialUseAttributeForType:
specialUseAttributesForMailbox:
extraAttributes
setWithObject:
mailboxType
displayNameUsingSpecialNamesForMailboxUid:
anyObject
initWithKey:ascending:
initWithObjects:
sortedArrayUsingDescriptors:
firstObject
_childOfMailbox:withComponentName:
childWithExtraAttribute:
imapNotEnabledPrefix
clientToken
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_deleteHook
shouldArchiveByDefault
supportsFastRemoteBodySearch
archiveSentMessages
enableAccount
shouldEnableAfterError:
xListSupportedOnConnection:
allMailMailboxUid
persistentNameForMailbox:
_enablingPromise
_credential
_clientToken
continuationResponses
initWithArray:
failureReason
statusString
substringWithRange:
substringFromIndex:
substringToIndex:
_urlFromResponse:
registerSchemeClass:
authenticationMechanisms
authenticatorForAccount:connection:
isSubclassOfClass:
canAuthenticateAccountClass:connection:
authenticatorClass
name
humanReadableName
authenticationState
setAuthenticationState:
account
setMissingPasswordError
data
appendBytes:length:
appendData:
saslName
supportsInitialClientResponse
justSentPlainTextPassword
responseForServerData:
_sentResponse
urls
setUrls:
paths
setPaths:
setAccount:
init
initWithPath:UID:changes:
path
changes
commitTime
setCommitTime:
connectionTag
setConnectionTag:
UTF8String
flushOfflineCache
setHandlerForOfflineCacheFlush:
userInfo
lastObject
primaryMailboxUid
library
URLString
maximumRemoteIDForMailbox:
apsVersion
_readCustomInfoFromMailboxCache:
numberWithInteger:
_writeCustomInfoToMailboxCache:
sharedManager
stopWatchingForTopic:
offlineCacheIfExists
saveChanges
saveState
_renameLocalSpecialMailboxesToName:
compactWhenClosingMailboxes
setAccountProperty:forKey:
_queueAccountInfoDidChange
calendarWithIdentifier:
dateByAddingUnit:value:toDate:options:
components:fromDate:toDate:options:
numberWithUnsignedInt:
resetSpecialMailboxes
setConnectionError:
isResponseWithCode:
isAlertResponse
offlineCacheDirectoryPath
stringByAppendingPathComponent:
initWithContentsOfFile:options:error:
readBufferSize
deleteInPlaceForAllMailboxes
isOffline
currentMonitor
connectionState
shouldCancel
connectUsingAccount:
error
mf_isUserCancelledError
authenticateUsingAccount:
setError:
reportAuthenticationError:authScheme:
_updateSeparatorAndNamespaceWithConnection:
throttledGetMailboxListWithConnection:
replayHandler
connectionEstablished
setIsOffline:
setReadBufferSize:
mailboxUid
mailboxName
_nameForMailboxUid:
noop
examineMailbox:
selectMailbox:withAccount:
isValid
setShortDescription:
checkInConnection:
checkInConnection:destroy:
mf_tryLock
setDelegate:
gotBadResponse
_setCapabilities:
selectedMailbox
delegate
_shouldLogDeleteActivity
logout
disconnectAndNotifyDelegate:
accountPropertyForKey:
dictionaryWithObjects:forKeys:count:
isMainThread
powerlog:eventData:
_releaseAllConnectionsAndCallSuper:synchronously:edgeForcedOnly:saveOfflineCache:
_invokeBlock:
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
retainArguments
sharedInvocationQueue
addInvocation:
isCellularConnection
isFetching
closeAndLogout
_mailboxUidForName:
autofetchAccount:mailboxUid:
releaseAllConnections
releaseAllForcedConnections
connectionForStore:delegate:options:failedToSelectMailbox:
_flushOfflineCache
invocationWithSelector:target:taskName:priority:canBeCancelled:
uniqueID
networkAssertionWithIdentifier:
networkChanged
userString
command
statusEntries
userInfoObjectForKey:
setUserInfoObject:forKey:
unsignedIntegerValue
updateMostRecentStatusCount:
_releaseAllConnectionsAndCallSuper:
isActive
notificationWithName:object:userInfo:
postNotification:
serverPathPrefix
rootMailboxUid
_incrementCacheDirtyCount
isEqualToArray:
_writeMailboxCacheWithPrejudice:
isFatPipe
isPluggedIn
is3GConnection
is4GConnection
setFetchMinBytes:
setMinBytesLeft:
setFetchMaxBytes:
serverPathPrefixAccountValue
subscribedListingForMailbox:options:
listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
removeObject:
arrayWithArray:
initWithDictionary:
replaceObjectAtIndex:withObject:
ef_insertObject:usingSortFunction:context:allowDuplicates:
_listingForMailboxUid:listAllChildren:onlySubscribed:statusDataItems:withConnection:statusEntriesByMailbox:
_listingForMailboxUid:listAllChildren:onlySubscribed:
_copyMailboxWithParent:name:attributes:dictionary:
accountRelativePath
mailboxUidForRelativePath:create:
pathComponents
mf_fileSystemString
createMailbox:
offlineCache
_newMailboxWithParent:name:attributes:dictionary:withCreationOption:
_deleteMailbox:
unselectMailbox:
offlineCacheIfOffline
deleteMailbox:
isStore
parent
_listingForMailboxUid:listAllChildren:
mf_indexOfMailboxDictionaryWithName:
_setSpecialMailbox:forType:
setStoreMailboxType:onServer:
storeMailboxTypeOnServer:
_localMailboxNameForType:usingDisplayName:
renameMailbox:newName:parent:
isMailboxLocalForType:
localAccount
descendantWithExtraAttribute:
specialMailboxNameForType:
setRepresentedAccount:
isSpecialMailbox:
setWithArray:
intersectSet:
_synchronizeAccountWithServer
getMailboxListWithConnection:statusDataItems:statusEntriesByMailbox:
postNotificationName:object:userInfo:
_loadMailboxListingIntoCache:attributes:children:parent:
_mailboxListingChanged
_writeMailboxCacheWithPrejudice:completionHandler:
isForeground
setMailbox:
mainBundle
localizedStringForKey:value:table:
isDraftsMailboxType:
enumerateKeysAndObjectsUsingBlock:
allMailboxUids
ef_filter:
nameForMailboxUid:
ef_compactMap:
fetchStatusForMailboxes:args:
globalAsyncScheduler
reset
afterDelay:performBlock:
emptyTrash
canUsePersistence
_copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:
_assignSpecialMailboxToAppropriateIvar:forType:
setName:
setAttributes:
setExtraAttributes:
attributes
_deleteQueuedMailboxes:
_mailboxesWereRemovedFromTree:withFileSystemPaths:
_waitForMailboxListingLoadToComplete
mailboxUidFromActiveAccountsForURL:
deleteMailboxes:account:
newMailboxNameIsAcceptable:reasonForFailure:
_uidNameForPathComponent:
renameMailbox:toMailbox:
store
reselectMailbox
mf_decodedIMAPMailboxName
mf_encodedIMAPMailboxName
isShared
rangeOfString:options:
componentsSeparatedByString:
childWithName:
canMailboxBeDeleted:
makeObjectsPerformSelector:
removeAccountPropertyForKey:
nowWouldBeAGoodTimeToStartBackgroundSynchronization
setServerPathPrefix:shouldSync:
_pathComponentForUidName:
componentsJoinedByString:
_fileSystemServerPathPrefix
deleteMessagesFromMailboxUid:olderThanNumberOfDays:
initWithIMAPAccount:
hasPendingOfflineOperations
subarrayWithRange:
setServerPathPrefix:
setValueInAccountProperties:forKey:
setLibrary:
messagesAdded:
dictionaryWithCapacity:
redactedName:
removeAllObjects
dataUsingEncoding:allowLossyConversion:
ef_md5Digest
ef_hexString
startWatchingForTopic:
swapTopic:forNewTopic:
mustRegisterForPushOnNextConnection
authenticatedConnection
pushedMailboxUids
initWithSet:
_externalMailboxUids
unionSet:
setMustRegisterForPushOnNextConnection:
lastPushRegistration
supportedPushServiceLevel
updatePushRegisteredMailboxes:
setSupportedPushServiceLevel:
setAPSTopic:
setLastPushRegistration:
stringByAppendingFormat:
_notificationNameForMailbox:withPrefix:
notificationNamesForPrefix:mailboxUids:
setWithCapacity:
setAccountIdentifier:
setNotificationNamePrefix:
allObjects
setMailboxNames:
registerForPush:
localizedCompare:
sortUsingSelector:
_copyMailboxListForNames:
resetMailboxTimer
fetchMailboxList
_schedulePushRegistrationConnection
canFetch
isSyncingNotes
_copyMailboxListPreferenceForKey:
supportsUserPushedMailboxes
_copyUserPushedMailboxes
standardUserDefaults
boolForKey:
_updatePushedMailboxesAndNotify:
setWithSet:
setValueInAccountInfo:forKey:
_notesPrefix
_copyPushedMailboxesForPrefix:
mailboxesRegisteredForPushByHash
uppercaseString
dictionaryWithDictionary:
_apsDeviceTokenChanged:
connect
canRegisterForAPSPush
isBatterySaverModeEnabled
_registerForDeviceTokenChanges
apsTopic
_unregisterForDeviceTokenChanges
stopListeningForNotifications
copyDiagnosticInformation
descriptionWithLocale:indent:
appendFormat:
dateWithTimeIntervalSinceReferenceDate:
lastKnownCapabilities
mailboxURL
absoluteString
storeForMailboxUid:
replayAction:
defaultPortNumber
defaultSecurePortNumber
saslProfileName
csAccountTypeString
legacyKeychainProtocol
connection:shouldHandleUntaggedResponse:forCommand:
connection:didReceiveResponse:forCommand:
connectionDidDisconnect:
willRemoveDelegation:
setServerMessageCount:
setHighestModSequence:
shouldStartIdleForConnection:
mf_lockOrdering
certUIService
greatestInboxUid
minUID
minID
storeClass
mailboxPathExtension
serviceName
secureServiceName
requiresAuthentication
setCompactWhenClosingMailboxes:
needToSynchronizeMailboxCaches
_didSynchronizeMailboxCachesAndFoundChanges:
_dataForTemporaryUid:
minimumPartialDownloadSize
allowsPartialDownloads
setAllowsPartialDownloads:
deleteInPlaceForMailbox:
connectAndAuthenticate:
checkInConnectionsForStore:
verifyESearchSupportWithBlock:
releaseAllConnectionsSynchronously
acquireNetworkAssertion
releaseNetworkAssertion
canGoOffline
fetchLimits
_specialMailboxUidWithType:create:
getMailboxListWithConnection:
_synchronouslyLoadListingForParent:
_mailboxPathPrefix
requiresDataForOfflineTransfersFromStore:
_URLScheme
_infoForMatchingURL:
supportsAppend
supportsRemoteAppend
supportsMailboxEditing
shouldRestoreMessagesAfterFailedDelete
serverRegisteredMailboxes:withTopic:version:
registerPushNotificationPrefix:forMailboxUids:
_registerPushNotificationPrefix:forMailboxNames:
changePushedMailboxUidsAdded:deleted:
mailboxNamesForPushRegistration
handlePushNotificationOnMailboxes:missedNotifications:notificationPayload:
transferNotificationSessionToAccount:
moveSupported
stateCaptureTitle
apsSenderArgument
setApsSenderArgument:
setApsVersion:
_separatorChar
_serverNamespace
_cachedConnections
_mailboxesToSynchronize
_offlineCache
_greatestInboxUid
_timeLastFetchedMailboxList
_connectionLock
_nextConnectionTag
_packetContextAssertion
_lockOrderingArray
_readBufferSize
_offlineCacheFlushHandler
_fetchedMailboxList
_isOffline
_lastKnownCapabilities
_eSearchSupportedLock
_eSearchSupported
_lastPushRegistration
_apsTopic
_pushedMailboxUids
_pushRegisteredMailboxes
_supportedPushServiceLevel
_observingPushedFoldersPrefsChanged
_mustRegisterForPushOnNextConnection
_didRequestPushRegistration
_listeningForDeviceTokenChanges
_didUpdateSeparatorAndNamespace
_apsVersion
_apsSenderArgument
_objectForAccountInfoKey:
_newConnection
setTag:
setMailboxListFilter:
isMobileMail
performDeferredOperationsWithConnection:
hasSuffix:
flushCriteria
initWithCommand:
initWithCommand:sequenceNumber:
setCommand:
arguments
setArguments:
setUntaggedResponses:
setSequenceNumber:
responseConsumer
setResponseConsumer:
_command
_arguments
_untaggedResponses
_sequenceNumber
_responseConsumer
stringWithCString:encoding:
setReadSizeParameters
cancel
isIdle
idleCommandSequenceNumber
capabilities
_addCapabilities:
arrayWithObjects:
parenthesizedStringWithObjects:
copyDeviceToken
stringWithString:
isMaild
bundleIdentifier
serverInfo
minusSet:
startCompression
_connectSocketUsingAccount:
_copyNextServerResponseForCommand:
remoteHostname
isUntagged
_clearCapabilities
_doBasicConnectionUsingAccount:
securityProtocol
startTLSForAccount:
clientCertificates
setClientCertificates:
enableSSL
_updateCapabilitiesForAccount:withAuthenticationResponse:
inaccessiblePasswordErrorWithTitle:
missingPasswordErrorWithTitle:
_tryConnectionUsingAccount:
unregisterForBytesAvailable
close
endCompression
setLength:
isReadable
locked_finishIdle
mf_appendCString:
numberOfNewlinesNeedingConversion:
fillLiteralBuffer:count:dataLength:nonSynchronizingLiteral:
writeData:dontLogBytesInRange:
_copyNextTaggedOrContinuationResponseForCommand:
writeBytes:length:dontLogBytesInRange:
enumerateByteRangesUsingBlock:
writeData:
enumerateConvertingNewlinesUsingBlock:
bytes
_connectionLogPrefix
_logStringForCommand:
initWithConnection:responseConsumer:
useGenericDescription:
_fetchCapabilities
timeout
setTimeout:
loginDisabled
loginWithAccount:password:
loginDisabledErrorWithTitle:
_sendApplePushForAccountIfSupported:
_sendClientInfoIfSupported
_enableCompressionIfSupported
_serverErrorForAccount:response:command:
setMoreInfo:
_doIMAPLoginForAccount:quotedUsername:password:
_sendCommands:response:
_doListCommand:withReference:mailboxName:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
_doNamespaceCommand
privateNamespaces
mailboxAttributes
separator
rangeOfString:options:range:
numberWithUnsignedInteger:
_listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:withCommand:
_handleBytesAvailableInternal
mf_invocationWithSelector:target:
hasBytesAvailable
handleBytesAvailable
registerForBytesAvailableWithHandler:
null
lazyFutureWithBlock:
result:
locked_scheduleIdleResetAfterDelay:
idleSubscriptionCancelable
hasValidConnection
globalAsyncSchedulerWithQualityOfService:
locked_startIdle
setIdleSubscriptionCancelable:
_errorForResponse:commandParams:
messageSetForUIDs:
_updateSearchCapabilityWithAccount:
_sendMailboxCommand:withArguments:
quotas
initWithFloat:
firstIndex
indexGreaterThanIndex:
searchIDSet:forTerms:success:
searchUidSet:forTerms:success:
countForSearchOfIDSet:forTerms:success:
searchResults
initWithType:
setFlagsArray:
setResponseType:
setUidFlagsChange:
setUids:
setFlagsFetchResult:
storeFlags:state:forMessageSet:
messageSetForRange:
storeFlags:state:forUIDs:
_responseFromSendingCommand:andPossiblyCreateMailbox:
copyInfoForMessageInfo:
setUidValidity:
_dictionaryFromSourceUIDs:destinationUIDs:
setSourceUIDsToDestinationUIDs:
permanentFlags
appendData:toMailboxNamed:flags:dateReceived:newMessageInfo:
setNewMessageUID:
doesNotRecognizeSelector:
arrayByAddingObjectsFromArray:
_headersToFetchIncludingThoseRequiredForRouting:withRecipients:
_fetchArgumentForMessageSkeletonsWithHeaders:
fetchResultWithType:
fetchData
initWithData:
mf_convertNetworkLineEndingsToUnix
initWithHeaderData:encoding:
copyFirstStringValueForKey:
uniqueRemoteId
numberWithUnsignedLongLong:
insertObject:atIndex:
integerForKey:
floatForKey:
removeIndexes:
messageSetForUIDs:maxTokens:remainder:
stringWithCapacity:
indexSetWithIndexesInRange:
enumerateRangesUsingBlock:
authenticationScheme
arrayWithObject:
userData
usesBase64EncodeResponseData
setData:
securityLayer
mf_lockWithPriority
currentDevice
isInternal
accountLogString
partiallyRedactedStringForString:
readBytesIntoData:desiredLength:
readLineIntoData:
mutableBytes
mutableCopyWithZone:
locked_scheduleIdle
sendResponsesForCommand:toQueue:
fetchArgumentForMessageSkeletonsWithTo:
sendResponsesForUIDFetchForUIDs:fields:toQueue:
sequenceIdentifierForUIDs:
flush
setSequenceIdentifier:forUIDs:
_fetchArgumentForMessageUidsAndFlags
sendResponsesForUIDs:fields:flagSearchResults:toQueue:
setSearchResults:
searchTerms
mask
isPositiveMatch
cacheStateForUIDs:mask:existenceSetsFlag:
integerValue
copyResponseForUID:
number
unsignedLongLongValue
_logStringForIDs:
expunge
expungeUIDs:
storeFlagChange:forUIDs:
storeGmailLabels:state:forUIDs:
copyUIDs:toMailboxNamed:copyInfo:error:
moveUIDs:toMailboxNamed:copyInfo:error:
appendData:toMailboxNamed:flags:dateReceived:appendInfo:error:
fetchPipeline
downloadCache
mailboxListFilter
disconnect
unselect
finishIdle
scheduleIdleReset
subscribeMailbox:
unsubscribeMailbox:
quotaPercentagesForMailbox:
countForSearchOfUidSet:forTerms:success:
getMailboxIDForUID:
storeFlags:state:forRange:
deleteMessagesOlderThanNumberOfDays:
_indexSetForIMAPInlineSet:
fetchMessageIdsForUids:
fetchUniqueRemoteIDsForUids:
performCustomCommand:withArguments:
setReadBufferSizeFromElapsedTime:bytesRead:
messageSetForRange:butNotNumbers:
authenticateUsingAccount:authenticator:
copyWithZone:
literalChunkSize
_readDataOfLength:
_isFetchResponseValid:
sendSkeletonResponsesForUIDs:includeTo:toQueue:
sendUidAndFlagResponsesForUIDs:sequenceIdentifierProvider:flagSearchResults:toQueue:
sendUidResponsesForSearchArguments:toQueue:
searchUIDs:withFlagRequests:
connectTime
setIdleCommandSequenceNumber:
setPermanentFlags:
_mailboxListFilter
_capabilityFlags
_verifiedESearchResponse
_gotBadResponse
_tag
_connectTime
_connectionState
_selectedMailbox
_capabilities
_lastRequiredHeadersArray
_lastRequiredHeaders
_commandNumber
_data
_expirationTime
_streamEventQueue
_noModSequence
_delegateState
_permanentFlags
_downloadCache
_fetchPipeline
_delegate
_idleCommandSequenceNumber
_idleSubscriptionCancelable
containsIndex:
indexSet
_indexSetFromUIDs:
addIndexes:
removeObjectForKey:
setUid:
_flagsForUID:
setMessageFlags:
setFetchResults:
_uidsWithFlagMaskSet
_uidsWithoutFlagMaskSet
initWithMask:searchTerms:positiveMatch:
requestWithMask:searchTerms:positiveMatch:
_isPositiveMatch
_mask
_searchTerms
isPlatform:
compare:
_privacySafeDescription
remoteID
messageStore
hasValidCacheFileForMessage:
setPreferredEncoding:
mailbox
remoteMailboxURL
initWithFlags:customFlags:size:uid:
messageSize
messageID
compareByNumberWithMessage:
setUniqueRemoteId:
isPartial
setIsPartial:
isMessageContentsLocallyAvailable
hasTemporaryUid
setHasTemporaryUid:
customFlags
originalMailboxURL
_size
_customFlags
_uid
_uniqueRemoteId
mf_encodeModifiedBase64
dataWithBytes:length:
initWithLength:
mf_decodeModifiedBase64
initWithCharacters:length:
operationType
flagsToSet
usesRealUids
uids
copyRemoteIDForTemporaryUid:
flagsToClear
initWithFlagsToSet:flagsToClear:forUIDs:inMailbox:
setUsesRealUids:
initWithMailboxToCreate:
_queueDeferredOperation:
initWithMailboxToDelete:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
headerDataForMessage:downloadIfNecessary:
writeToFile:options:error:
firstTemporaryUid
headers
firstHeaderForKey:
dateReceived
initWithAppendedUid:approximateSize:flags:internalDate:mailbox:
isSourceOfTemporaryUid:
actsOnTemporaryUid:
expungeTemporaryUid:
approximateSize
acquireExclusiveAccessKey
_performCreateOperation:withContext:
_performDeleteOperation:withContext:
_performStoreOperation:withContext:
_performAppendOperation:withContext:
_performCopyOperation:withContext:
drain
failureCount
setFailureCount:
removeObjectsInRange:
relinquishExclusiveAccessKey:
setShouldFlattenCacheOperations:
setFlags:andClearFlags:forMessages:
setFlags:andClearFlags:forUIDs:forMailbox:
firstUidForCopyingMessages:fromMailbox:toMailbox:
uidForAppendingMessageData:withFlags:andInternalDate:toMailbox:
hasOperationsForMailbox:
deferredOperations
_handle
_ops
_lastUid
_lastSave
_lastUidValidity
_opsPending
deserializedCopyFromData:cursor:
lastTemporaryUid
initWithUidsToCopy:fromMailbox:toMailbox:firstNewUid:
defaultManager
mf_makeCompletePath:mode:
serializeIntoData:
initWithBytes:length:encoding:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
type
_messageIDsFromFetchResultData:
enumerateObjectsUsingBlock:
ef_subarraysOfSize:
_searchUidsForMessageIDs:excludeDeleted:
_uidsForMessageIDs:excludeDeleted:
_getReferencesForMessageSet:
_getFirstLevelMessageIDsForReference:
uidsReferencedBy:
messages
customFlagsToSet
someMsgsWentToServer
msgsAppendedOffline
missedMessages
newMessageIDs
newMessages
unreadCountDelta
destUidNext
partName
isComplete
dataHolder
setDataHolder:
_dataHolder
initWithMaximumSize:latency:
messageChangeManager
reflectNewMessages:mailboxURL:
insertMessages:
gotNewMessagesState
dateWithTimeIntervalSinceNow:
timeIntervalSince1970
messageFlags
dateReceivedAsTimeIntervalSince1970
conversationFlags
setGotNewMessagesState:
mf_makeImmutable
internalDate
encoding
customFlagsArray
shouldAddUID:
setDateReceivedTimeIntervalSince1970:
loadCachedHeaderValuesFromHeaders:
setHeaders:
setMessageStore:
setModSequenceNumber:
subject
setCurrentCount:
serverMessagePersistence
initWithIndex:
serverMessagesForIMAPUIDs:limit:returnLastEntries:
messagePersistentID
longLongValue
numberWithLongLong:
clearServerSearchFlagsForMessagesWithLibraryIDs:
messageToSyncFlagsForUID:
handleItems:
_store
_connection
_numNewUIDs
_newMessageCount
_highestModSequence
_flags
_isSearching
messageForRemoteID:
uidForItem:
sortedArrayUsingComparator:
persistence
serverMessagePersistenceFactory
serverMessagePersistenceForMailboxURL:
initWithIndexesInRange:
imapUID
shouldSyncFlags
flagsForItem:
sequenceIdentifierForItem:
setSequenceIdentifier:forMessageWithLibraryID:
reflectDeletedMessagesWithRemoteIDs:mailboxURL:
_url
_currentUID
_missingUIDs
_serverMessages
_shouldCompact
_shouldFetch
_shouldSyncFlags
setMaximumLatency:
removeIndex:
lastIndex
indexLessThanIndex:
limit
initWithMailboxUid:readOnly:
userInfoBoolForKey:
focusedMessageDidChange:
_observeChangesInIdleConditions
addCancelable:
setDisplayName:maxCount:
fetchMessagesWithUIDs:connection:newCount:flagsToSet:queueClass:
syncMessagesWithUIDs:connection:serverMessages:flagSearchResults:
object
unreadCount
_updateSelectedUID:
_searchFlagsForUIDs:usingConnection:
_performActionsOnConnection:uidsToFetch:uidsToSync:messagesToCompact:serverMessages:flagSearchResults:shouldForce:newUIDsToFetch:
serverFlags
ef_insertObject:usingComparator:allowDuplicates:
messageWithLibraryID:options:inMailbox:
setFlagsLocallyFromDictionary:forMessages:
performOperationRequiringConnection:withOptions:failedToSelectMailbox:operation:
updateDeletedCountWithNotDeletedCount:
growFetchWindow
willFetchMessages
objectID
initWithDomain:type:
startActivity
fullyRedactedStringForString:
_selectMailbox:withConnection:
setIsFetching:
notifyConnectionEstablished
minimumIMAPUID
maximumIMAPUID
_shouldContinueToPreservedUID:
_fetchMessagesWithArguments:idRange:onConnection:synchronize:limit:topUIDToCompact:topKnownUID:success:examinedRange:fetchableUIDsFound:preserveUID:numFetchedUIDs:
_fetchServerUnreadCountWithConnection:
stopActivityWithSuccess:
totalCount
shouldUseNonDeletedForUnreadCount
_updateServerUnreadCount:
setLastSyncAndMostRecentStatusCount:forMailbox:
unseenCountForMailbox:
postNotificationName:object:
setServerUnreadOnlyOnServerCount:forMailbox:
criterionType
includeRemoteBodyContent
setIncludeRemoteBodyContent:
criterionByApplyingTransform:
messageIsDeletedCriterion:
andCompoundCriterionWithCriteria:
criterionForSQL
_remoteBodySearchForCriterion:
errorWithDomain:code:userInfo:
_newSearchResponseQueueForConnection:limit:
_fetchMessagesMatchingCriterion:limit:withOptions:handler:
addRemoteID:mailbox:
serverMessageCount
allNonDeletedCountIncludingServerSearch:andThreadSearch:
canCompact
doCompact
deletedMessages
messagesForMailbox:olderThanNumberOfDays:
compactMessages:
deleteMessages:moveToTrash:
initWithAction:
setServerInterface:
replayAction
failActionWithError:
messageDataIsComplete:downloadIfNecessary:
accountWithURL:
_fetchFullMessageDataForMessage:download:
setFlagsForAllMessagesFromDictionary:
setPreferredEncoding:forMessage:
preferredEncoding
setFlagsFromDictionary:forMessages:
messageData
mf_rangeOfRFC822HeaderData
mf_subdataWithRange:
range
mimeBody
message
partNumber
fetchMinBytes
minBytesLeft
downloadCacheForConnection:
downloadForUid:section:range:consumer:
downloadForUid:section:length:consumer:
downloadForUid:section:expectedLength:consumer:
_waitForDataFromDownload:uid:downloadCache:connection:
bytesFetched
transportType
recordTransportType:
initWithData:partial:incomplete:
_cachedBodyDataContainerForMessage:valueIfNotPresent:
filterWithConsumer:
fetchPipelineForConnection:
expectedLength
percentDone
enableThroughputMonitoring:
setChunkSize:
isFull
addCommandsForDownload:toPipeline:
failureResponsesFromSendingCommandsWithConnection:
handleFetchResponses:
processResultsForUid:
partial
setExpectedLength:
setPercentDone:
isSuccessful
cleanUpDownloadsForUid:
downloadForMessage:
setFetchBodyData:
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
_dataForMessage:readHeadersOnly:
_downloadForMessageBodyData:usingDownloadCache:
_performBodyDataDownload:usingConnection:downloadCache:isPartial:
_fetchHeaderDataForMessage:downloadIfNecessary:
stopActivity
indexOfObject:
setMailboxUidValidity:
_flushAllMessageData
structureDidChange
messagesForMailbox:limit:
deleteAllServerMessagesInMailbox
shouldUseIDLE
lowPowerModeObservable
pluggedInObservable
wifiObservable
lockStateObservable
appStateObservable
startWith:
map:
combineLatest:
serialDispatchQueueSchedulerWithName:qualityOfService:
distinctUntilChanged
doOnError:
observeOn:
_idleConditionsObservable
_scheduleIdleTransition:
observerWithResultBlock:
subscribe:
setShouldUseIDLE:
isSending
handleFetchResponse:forUid:
fileExistsAtPath:
criterionForMailboxURL:
messagesMatchingCriterion:options:
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
messageForRemoteID:inMailbox:
messageWithRemoteID:inRemoteMailbox:
numberWithUnsignedLong:
isRemoteSearch
updateDeletedCount
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
messageDataForMessage:
moveSupportedFromMailboxURL:toURL:
imapMailboxNameForMailboxURL:
flagsForIMAPUIDs:mailboxURL:
checkUIDValidity:mailboxURL:
messageDataForRemoteID:mailboxURL:
errorIsIMAPError:
fetchNumMessages:preservingUID:options:
updateServerUnreadCountClosingConnection:
canFetchSearchResults
messageIdRollCall:
fetchMessagesMatchingCriterion:limit:
storeSearchResultMatchingCriterion:limit:offset:error:
canFetchMessageIDs
fetchMessagesWithMessageIDs:andSetFlags:
fetchMessagesWithRemoteIDs:andSetFlags:
mailboxUidValidity
deleteMessagesOlderThanNumberOfDays:compact:
allowsAppend
_fetchDataForMimePart:range:isComplete:consumer:
_fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:
bodyFetchRequiresNetworkActivity
remoteIDsFromUniqueRemoteIDs:
uniqueRemoteIDsForMessages:
relativePath
cancelationToken
setCancelationToken:
_supportsCustomPermanentFlags
_supportsJunkFlag
_supportsDollarJunkFlag
_supportsNotJunkFlag
_supportsDollarNotJunkFlag
_supportsForwardedFlag
_supportsDollarForwardedFlag
_supportsFlagColorBitFlags
_updatingCache
_updateMetadata
_readyToDealloc
_didSynchronizeOldMessages
_recentsExist
_settingServerCount
_reserved
_activeFetchVsReplayLock
_mailboxName
_serverCountLock
_serverMessageCount
_serverDeletedCount
_serverUidNext
_lastHighestModSequence
_selectedUID
_currentFetchUid
_relativePath
_cachedConnection
_cachedConnectionLock
_serverMessagePersistenceFuture
_loggingPrefix
_shouldUseIDLE
_cancelationToken
changeFrom:to:
hasChanges
reflectFlagChanges:forMessagesWithRemoteIDs:mailboxURL:
expression
criterionIdentifier
qualifier
criteria
allCriteriaMustBeSatisfied
string
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
doubleValue
dateWithTimeIntervalSince1970:
whitespaceCharacterSet
expressionLanguages
ef_localesFromLanguages:
ef_stringByRemovingQuotedSubstringsForLocales:tokenizationHandler:
ef_stringByRemovingTokenizedLinksUsingTokenizationHandler:
ef_wordComponentsForLocale:minimumWordLength:
mf_boolForKey:
stringByAppendingString:
initWithCondition:
sharedController
addDiagnosticsGenerator:
bundleWithPath:
classNamed:
em_userDefaults
apsEnvironment
APSConnection
initWithEnvironmentName:namedDelegatePort:queue:
publicToken
connection:didReceivePublicToken:
unlockWithCondition:
_startAPS_nts
enabledTopicsWithTopics:
setEnabledTopics:ignoredTopics:
countForObject:
cloudKitAPSTopics
lockWhenCondition:beforeDate:
topic
wasFromStorage
accountWithUniqueId:
condition
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
setLaunchMachServiceName:
_stopAPS_nts
_queue
_pushService
_watchedTopics
_unwatchedTopics
_deviceTokenLock
_deviceToken
_launchMachServiceName
insertString:atIndex:
setFetchItem:
setBodyDataConsumer:
setConsumerSection:
matchesFetchResponse:
fetchItem
bodyDataConsumer
consumerSection
addConsumer:forSection:
_removeFetchUnitMatchingResponse:
copyFailedFetchResponse
addFetchCommandForUid:fetchItem:expectedLength:bodyDataConsumer:consumerSection:
expectedSize
chunkSize
setFull:
_chunkSize
_expectedSize
_full
_sending
_fetchUnits
setSection:
setStartOffset:
_setupExpectedFetchResult
section
setNumber:
initWithObjects:count:
_expectedFetchResult
_bodyDataConsumer
_consumerSection
_fetchItem
initWithUid:
handleFetchResult:
processResults
addCommandsToPipeline:withCache:
lengthOfDataBeforeLineConversion
mainConsumer
_pendingFetchResults
_countingConsumer
_mainConsumer
initWithConsumers:
initWithUid:section:length:lengthIsKnown:range:consumer:
sortUsingFunction:context:
mf_shouldFailDownload
done
initWithUid:section:estimatedLength:consumer:
initWithUid:section:length:consumer:
initWithUid:section:range:consumer:
_section
_error
_length
_lastBytesFetched
_knownLength
_complete
_range
_originalDataLength
_offsetAdjustment
indexOfObjectIdenticalTo:
removeObjectIdenticalTo:
ef_all:
subdownloads
addSubdownload:
removeSubdownload:
_subdownloads
startOffset
initWithMessage:
_downloads
consumers
flagsArray
envelope
bodyStructure
setEnvelope:
setInternalDate:
setFetchData:
setMessageSize:
setBodyStructure:
setCustomFlagsArray:
_itemType
_modSequenceNumber
_typeSpecific
initWithBytes:length:
bodyParameterForKey:
appendDataForMimePart:toData:withPartData:
setMessageData:isPartial:
parseIMAPPropertyList:
getNumberOfAttachments:isSigned:isEncrypted:
initWithConsumer:
initWithAppendHandler:doneHandler:
filterWithConsumers:
_networkConverterWithConsumer:didReceiveData:
topLevelPart
setTopLevelPart:
fetchBodyData
_message
_topLevelPart
_allowsPartialDownloads
_usingPartialDownloads
_startedFetch
_fetchingMessageContents
_fetchingBodyText
_doneAddingSubdownloads
_fetchBodyData
_headerConsumer
_textConsumer
_receivedHeaders
_receivedText
ef_caseInsensitiveIsEqualToString:
headerData
headersIfAvailable
_messageData
_headers
getBytes:range:
raise:format:
_deserializeOpSpecificValuesFromData:cursor:
_magic
initWithType:mailbox:
timeIntervalSinceReferenceDate
flags
sourceUids
destinationUids
destinationMailbox
sourceUidForTemporaryUid:
getMessageId:andInternalDate:forDestinationUid:
setMessageId:andInternalDate:forMessageWithSourceUid:
_type
_failureCount
_temporaryUids
_opSpecific
messageIds
internalDates
initWithUTF8String:
copyStringFrom:to:withCaseOption:
logReadChars:length:
lookAhead
getNumber:
initWithUnsignedLongLong:
literalWithResponseConsumer:section:
appendData:forSection:
copyLiteral
copyLiteralString
copyAtom
dateFromString:
copyArrayAllowingNulls:
increment
hadWarningOrError
resetWarningOrError
initWithConnection:response:start:end:
connection
setStart:
setEnd:
logReadChars
match:upToSpecial:
copyNilOrString
copyAString
copyDateTime
copyArray
nextSeparator
_response
_start
_end
_originalStart
_originalEnd
_lastLoggedChar
_invalid
isValidBase64:
mf_decodeBase64
_descriptionWithFullData:
quotaRootNames
quotaRootName
uidFlagsChange
flagsFetchResult
publicNamespaces
sharedNamespaces
responseName
parameters
reason
setUserData:responseCode:responseInfo:
setCapabilities:
setServerInfo:
setFlags:
setMailboxName:statusEntries:
setMailboxAttributes:separator:mailboxName:extraAttributes:
setMailboxName:quotaRootNames:
setQuotaRootName:quotas:
setPrivateNamespaces:
setPublicNamespaces:
setSharedNamespaces:
setResponseName:parameters:
initWithResponseType:
_responseType
_keyValuePairs
consumersBySection
_consumersBySection
mf_addObject:forKey:
compare:options:
initWithImmutableData:
credentialWithError:
userFullName
_authSchemeForAuthenticationMethod:
_credentialCreateIfNecessary:error:
parentAccountMailProperties
_mailAccount
requiresPassword
initWithAuthenticationScheme:account:connection:
castleAccount
dataWithCapacity:
_castleAccount
isSSLEditable
predefinedValueForKey:
ef_defaultAllowedCharacterSet
getConfigurationFromServerForEmail:
transferDisabledMailboxUids
saveSentFolder
@16@0:8
@24@0:8@16
B16@0:8
I16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@20@0:8i16
@20@0:8B16
v24@0:8@16
v16@0:8
@"AOLAccount"
@32@0:8@16@24
@32@0:8@16^@24
B40@0:8@16@24@32
v32@0:8@16@24
v20@0:8I16
v20@0:8B16
@24@0:8^@16
v28@0:8B16@20
@"MFLock"
@"ACAccount"
@"DeliveryAccount"
@"NSMutableDictionary"
@"NSString"
@"NSObject<OS_dispatch_queue>"
B40@0:8@16^@24@32
@48@0:8@16B24@28^B36i44
v36@0:8@16@24i32
v40@0:8@16@24@32
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
i24@0:8@16
i20@0:8i16
@"EFPromise"
@"NSURLCredential"
@"GmailAccount"
B32@0:8#16@24
@"NSArray"
@"IMAPAccount"
@36@0:8@16I24@28
d16@0:8
v24@0:8d16
@"NSDictionary"
^v16@0:8
v24@0:8Q16
B40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24@"_MFIMAPCommandParameters"32
v40@0:8@"MFIMAPConnection"16@"MFIMAPResponse"24@"_MFIMAPCommandParameters"32
v24@0:8@"MFIMAPConnection"16
B24@0:8@"MFIMAPConnection"16
@"NSObject<OS_os_log>"16@0:8
v36@0:8@"NSMutableArray"16@"NSString"24i32
B20@0:8i16
v24@0:8i16B20
@20@0:8I16
@44@0:8@16@24i32^B36
v28@0:8@16B24
B24@0:8@?16
v24@0:8@?16
v32@0:8B16B20B24B28
@56@0:8@16B24B28@32@40^@48
@32@0:8@16B24B28
@28@0:8@16B24
@48@0:8@16@24I32@36i44
v28@0:8@16i24
@24@0:8i16B20
B40@0:8@16@24^@32
@52@0:8@16@24I32@36@44
B32@0:8@16^@24
v28@0:8@16I24
i16@0:8
v20@0:8i16
B32@0:8@16@24
v36@0:8@16B24@28
^{__CFArray=}
@"MFIMAPOperationCache"
@"NSRecursiveLock"
@"NSLock"
@"NSNumber"
@"NSSet"
@28@0:8i16@20
@28@0:8i16Q20
@"NSMutableArray"
@"MFIMAPResponseConsumer"
B36@0:8@16B24@28
B48@0:8@16@24^@32^@40
B64@0:8@16@24@32@40^@48^@56
B24@0:8@"NSIndexSet"16
B32@0:8@"ECMessageFlagChange"16@"NSIndexSet"24
B36@0:8@"NSArray"16B24@"NSIndexSet"28
B48@0:8@"NSIndexSet"16@"NSString"24^@32^@40
B64@0:8@"NSData"16@"NSString"24@"ECMessageFlags"32@"NSDate"40^@48^@56
i48@0:8*16Q24Q32^B40
Q32@0:8@16^@24
@40@0:8@16@24@32
i40@0:8@16@24@32
@60@0:8i16@20@28i36B40@44^@52
@52@0:8@16i24B28@32^@40i48
@48@0:8@16i24B28@32^@40
@28@0:8@16i24
B28@0:8i16@20
@40@0:8@16@24^B32
Q40@0:8@16@24^B32
I20@0:8I16
B36@0:8@16B24{?=II}28
B56@0:8@16@24@32@40^@48
@24@0:8B16B20
v32@0:8d16Q24
@24@0:8{?=II}16
@32@0:8{?=II}16@24
@40@0:8@16Q24^@32
@24@0:8^{_NSZone=}16
@24@0:8q16
B48@0:8@16@24@32@40
@"<MFIMAPMailboxListFilter>"
@"NSMutableSet"
@"NSMutableData"
@"MFInvocationQueue"
{?="shouldHandleUntaggedResponse"b1"didReceiveResponse"b1"didFinishSelect"b1"didDisconnect"b1"setServerMessageCount"b1"setHighestModSequence"b1"willRemoveDelegation"b1"shouldStartIdle"b1}
@"MFIMAPDownloadCache"
@"MFIMAPCommandPipeline"
@"<MFIMAPConnectionDelegate>"
@"<EFCancelable>"
Q24@0:8Q16
v36@0:8@16Q24B32
@24@0:8Q16
@36@0:8Q16@24B32
@44@0:8Q16@24Q32I40
q24@0:8@16
v48@0:8@16@24@32@40
I40@0:8@16@24@32
I48@0:8@16@24@32@40
v32@0:8@16^{?=@@^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIi}24
@"NSFileHandle"
@"MFMailMessageStore"
@"MFDataHolder"16@0:8
@"MFDataHolder"
B24@0:8Q16
@"MFLibraryIMAPStore"
@"MFIMAPConnection"
B20@0:8I16
Q24@0:8@16
@"NSMutableIndexSet"
@"NSString"24@0:8@"NSArray"16
v32@0:8@"NSString"16@"NSArray"24
@"NSData"24@0:8@"<ECMessage>"16
B32@0:8@"NSURL"16@"NSURL"24
B28@0:8I16@20
@"NSString"24@0:8@"NSURL"16
@"NSDictionary"32@0:8@"NSIndexSet"16@"NSURL"24
B28@0:8I16@"NSURL"20
@"NSData"32@0:8@"NSString"16@"NSURL"24
B24@0:8@"NSError"16
Q56@0:8@16@24Q32Q40#48
Q48@0:8@16@24@32@40
v76@0:8@16^@24^@32^@40@48@56B64^I68
v24@0:8^Q16
Q108@0:8@16@24@32B40Q44Q52Q60^B68^{_NSRange=QQ}76^Q84^Q92^Q100
q40@0:8Q16@24Q32
@28@0:8@16I24
v40@0:8@16I24i28@?32
q28@0:8@16I24
@44@0:8@16I24@28^@36
q32@0:8@16Q24
B56@0:8@16{_NSRange=QQ}24^B40@48
@44@0:8@16^@24B32^B36
B44@0:8@16I24@28@36
@48@0:8@16@24@32^B40
B40@0:8B16i20^B24@?32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"EFFuture"
@"EFCancelationToken"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSString"24
@"NSData"16@0:8
@"APSConnection"
@"NSCountedSet"
@"NSConditionLock"
@"NSData"
v52@0:8I16@20Q28@36@44
@"MFIMAPFetchResult"
@"<MFDataConsumer>"
@"MFCountingDataConsumer"
@"MFBaseFilterDataConsumer"
@64@0:8I16@20Q28B36{_NSRange=QQ}40@56
@44@0:8I16@20Q28@36
@52@0:8I16@20{_NSRange=QQ}28@44
@"NSError"
{_NSRange="location"Q"length"Q}
(?="envelope"@"NSArray""internalDate"@"NSDate""messageSize"Q"bodyStructure"@"NSArray""bodySectionInfo"{?="section"@"NSString""startOffset"Q"sectionData"@"NSData"}"uid"I"uniqueRemoteId"Q"flags"{?="messageFlags"Q"customFlags"@"NSArray"})
@32@0:8@16@?24
@"MFMessage"
@"MFMimePart"
@"<MFCollectingDataConsumer>"
@"MFMessageHeaders"
@32@0:8@16^Q24
C16@0:8
@48@0:8@16@24@32@40
@44@0:8@16@24@32I40
@48@0:8I16I20@24@32@40
B36@0:8^@16^@24I32
v36@0:8@16@24I32
(?="store"{?="trueFlags"@"NSArray""falseFlags"@"NSArray""uids"^{__CFArray}}"append"{?="uid"I"flags"@"NSArray""internalDate"i"size"I}"copy"{?="srcUids"^{__CFArray}"dstUids"^{__CFArray}"destinationMailbox"@"NSString"})
@48@0:8@16@24r*32r*40
r*16@0:8
v24@0:8r*16
B24@0:8^Q16
B24@0:8r*16
B32@0:8r*16r*24
^{__CFArray=}20@0:8B16
@36@0:8r*16r*24i32
@"MFIMAPResponse"
v36@0:8@16i24@28
v48@0:8Q16@24@32@40
(_IMAPResponseData="basic"{?="responseCode"i"responseInfoAndOrUserData"@}"capabilities"@"NSArray""number"Q"flags"@"NSArray""status"{?="mailboxName"@"NSString""entries"@"NSDictionary"}"searchResults"@"NSArray""list"{?="mailboxAttributes"Q"separatorAndOrMboxName"@"extraAttributes"@"NSArray"}"fetch"{?="number"Q"items"@"NSArray""modSeqNumber"Q}"quotaRoot"{?="mailboxName"@"NSString""quotaRootNames"@"NSArray"}"quota"{?="quotaRootName"@"NSString""quotas"@"NSArray"}"uidFlags"{?="uids"@"NSString""flagsFetchResult"@"MFIMAPFetchResult""change"b1}"serverInfo"@"NSDictionary""namespace"{?="private"@"NSArray""public"@"NSArray""shared"@"NSArray"}"other"{?="name"@"NSString""parameters"@"NSArray"})
@28@0:8B16^@20
@"MFOSXServerIMAPAccount"
@"CastleIMAPAccount"
@"YahooAccount"
