@333333
MbP?
1@ffffff
?333333
?333333
 l@333333
?ffffff
?333333
?@:Q
@UUUUUU
 ,AUUUUUU
?333333
|?5^
_(knN
<ZN6mlcore11LibraryView12performQueryINS_20LocalizedSearchQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__117bad_function_callE
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_20LocalizedSearchQueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore11QueryResultEEEEEE
Z60-[MPMediaLibraryView performCoreSearchQuery:withCompletion:]E3$_1
NSt3__110__function6__funcIZ60-[MPMediaLibraryView performCoreSearchQuery:withCompletion:]E3$_1NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore26LocalizedSearchQueryResultEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore26LocalizedSearchQueryResultEEEEEE
ZN6mlcore11LibraryView12performQueryINS_5QueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_5QueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
Z54-[MPMediaLibraryView performCoreQuery:withCompletion:]E3$_0
N6mlcore11QueryResultE
NSt3__110__function6__funcIZ54-[MPMediaLibraryView performCoreQuery:withCompletion:]E3$_0NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore11QueryResultEEEEEE
BNSt3__120__shared_ptr_emplaceINS_6vectorINS_10shared_ptrIN6mlcore6EntityEEENS_9allocatorIS5_EEEENS6_IS8_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11EntityQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14UnaryPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore17EntityQueryResultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS5_IS7_EEEENS5_IS9_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore24SmartPlaylistEntityCacheENS_9allocatorIS2_EEEE
N6mlcore17PropertyCacheBaseIJN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJEEE
N6mlcore17PropertyCacheBaseIJNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJdNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJidNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJxidNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
NSt3__114default_deleteINS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEEEE
NSt3__120__shared_ptr_pointerIPNS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEENS_14default_deleteIS6_EENS4_IS6_EEEE
NSt3__114default_deleteINS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEEEE
NSt3__120__shared_ptr_pointerIPNS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEENS_14default_deleteIS6_EENS4_IS6_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore20LocalizedSearchScopeENS_9allocatorIS2_EEEE
N6mlcore4NoopE
NSt3__110__function6__funcIN6mlcore4NoopENS_9allocatorIS3_EEFvdEEE
NSt3__110__function6__baseIFvdEEE
N6mlcore19ComparisonPredicateIiEE
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore22AggregateFunctionQueryENS_9allocatorIS2_EEEE
ZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0
NSt3__110__function6__funcIZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
NSt3__110__function6__baseIFvRKN6mlcore13PropertyCacheERbEEE
NSt3__120__shared_ptr_emplaceIN6mlcore15PropertiesQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_3mapIxNS_10shared_ptrIN6mlcore17EntityQueryResultEEENS_4lessIxEENS_9allocatorINS_4pairIKxS5_EEEEEENS8_ISD_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11EntityCacheENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore20LocalizedSearchQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14UnaryPredicateIxEENS_9allocatorIS3_EEEE
N6mlcore19ComparisonPredicateIxEE
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateIxEENS_9allocatorIS3_EEEE
N6mlcore11InPredicateIxEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateIxEENS_9allocatorIS3_EEEE
ZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb0_E3$_1
NSt3__110__function6__funcIZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb0_E3$_1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb_E3$_0
NSt3__110__function6__funcIZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
N6mlcore14AnyInPredicateIxEE
NSt3__120__shared_ptr_emplaceIN6mlcore14AnyInPredicateIxEENS_9allocatorIS3_EEEE
ZZ59-[MPModelLibraryPlaylistEditChangeRequestOperation execute]EUb_E3$_0
NSt3__110__function6__funcIZZ59-[MPModelLibraryPlaylistEditChangeRequestOperation execute]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
N6mlcore19ComparisonPredicateINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS6_IS9_EEEE
N6mlcore11InPredicateINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS6_IS9_EEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
N6mlcore11InPredicateIiEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore15SearchPredicateENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore6TVShowENS_9allocatorIS2_EEEE
ZN6mlcore11LibraryView12performQueryINS_11EntityQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_11EntityQueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
ZZL33_MPMLInitPropertyPlaylistEntryMapvEUb_E3$_4
NSt3__110__function6__funcIZZL33_MPMLInitPropertyPlaylistEntryMapvEUb_E3$_4NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEE
NSt3__120__shared_ptr_emplaceIN6mlcore8PlaylistENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore8ComposerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore5GenreENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore6ArtistENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore16MultiEntityQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN6mlcore17ModelPropertyBaseENS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEENS5_ISH_EEEE
allowsRadioStations
TB,N,V_allowsRadioStations
allowsVideoContent
TB,N,V_allowsVideoContent
Standalone
Non-Linear
Linear
MusicShouldFakeTVEpisodes
allMediaDownloadLibraryIdentifiers
T@"NSArray",R,N
activeDownloadsCount
Tq,R,N
-init is not supported, use +sharedInstance
sharedManager
T@"MPMediaDownloadManager",R,N
MusicUpsellShelf
MusicSuperHeroShelf
MusicNotesHeroShelf
MusicCoverShelf
library-albums
library-playlists
uploaded-videos
uploaded-audios
tv-shows
social-upsells
social-profiles
music-movies
music-videos
editorial-items
playlists
curators
apple-curators
albums
artists
OnboardingRequired
account
autos
omit[resource]
listen-now
iphone
v16@?0@"MPModelForYouRecommendationGroup"8
v32@?0@"MPModelForYouRecommendationGroup"8q16^B24
v32@?0@"NSNull"8q16^B24
v32@?0@"MPModelForYouRecommendationItem"8q16^B24
resultsAndFlatSectionedItems
<nil>
responses
style
Tq,N,V_style
initatorStyle
Tq,N,V_initatorStyle
routingContextUID
T@"NSString",C,N,V_routingContextUID
presentingAppBundleID
T@"NSString",C,N,V_presentingAppBundleID
shouldPreventAutorotation
TB,N,V_shouldPreventAutorotation
allowsNowPlayingApplicationLaunch
TB,N,V_allowsNowPlayingApplicationLaunch
sortByIsVideoRoute
TB,N,V_sortByIsVideoRoute
sourceRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_sourceRect
routeUID
T@"NSString",C,N,V_routeUID
supportsSecureCoding
TB,R
initiatorStyle
<%@:%p routingContextUID=%@, style=%@, presentingAppBundleID=%@, sourcRect=%@>
MPMediaControlsStyleControlCenter
MPMediaControlsStyleSingleSelect
MPMediaControlsStyleMultiSelect
MPMediaControlsStyleSharedQueue
MPMediaControlsStyleVideoPicker
MPMediaControlsStyleLocalTransportControls
MPMediaControlsStyleAirPlayBluePill
MPMediaControlsStyleMediumConfidenceVideoPicker
MPMediaControlsStyleUpNextControls
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
person
T@"MPModelSocialPerson",&,N
T@"MPModelSocialPerson",&,N,V_person
unBlockSocialUser
mlCoreView
T{shared_ptr<mlcore::DeviceLibraryView>=^{DeviceLibraryView}^{__shared_weak_count}},R,N
library
T@"MPMediaLibrary",R,N,V_library
filteringOptions
TQ,R,N,V_filteringOptions
Invalid format string- missing numeric value.
Invalid format options reference: Must be of form {*<index>} but no trailing '}' found.
Parameter index out of bounds.
MediaLibraryCore
v48@?0^{CGContext=}8{CGRect={CGPoint=dd}{CGSize=dd}}16
calloutQueue
T@"NSOperationQueue",R,N,V_calloutQueue
cancelationError
T@"NSError",R,N,V_cancelationError
cleanupQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_cleanupQueue
queue
T@"NSOperationQueue",R,N,V_queue
middlewareClasses
T@"NSArray",C,N,V_middlewareClasses
label
T@"NSString",C,N,V_label
qualityOfService
Tq,N,V_qualityOfService
timeoutInterval
Td,N,V_timeoutInterval
com.apple.MPRequest.invalidationQueue
v16@?0@"NSString"8
error
T@"NSError",R,N
invalidationHandler
T@?,C,N
invalidationObservers
class.description
MPRequestErrorDomain
MPRequestUnderlyingErrorsUserInfoKey
com.apple.MediaPlaybackCore/%@.callout
com.apple.MediaPlaybackCore/%@
<NULL>
-[MPRequest _performWithCompletion: failed to call completion %@
MPRequest.m
com.apple.MediaPlaybackCore/%@.cleanup
<%@: %p label=%@>
[MPRequest class]
Subclass %@ must implement -%@ defined in %@.
middleware
T@"NSArray",C,N,V_middleware
builder
T@,R,N,V_builder
request
T@,R,C,N,V_request
valid
TB,R,N,GisValid,V_valid
_middleware
<%@:%p>
_obj
MPResponseDidInvalidateNotification
<%@: %p request=%p>
[MPResponse class]
player
T@"MPAVController",&,N,V_player
TVHudAlpha
TVHudFadeOut
ov_rwd_1only_
ov_ffwd_1only_
ov_pause_1only_
ov_play_1only_
MPModelResponseDidInvalidateNotification
deferredSectionProperties
T@"MPPropertySet",&,N,V_deferredSectionProperties
deferredItemProperties
T@"MPPropertySet",&,N,V_deferredItemProperties
results
T@"MPSectionedCollection",C,N,V_results
empty
TB,R,N,GisEmpty
T@"MPModelRequest",R,C,N,V_request
; results = %@
; deferredSectionProperties = %@
; deferredItemProperties = %@
; isValid = NO
<%@: %p
request != nil
Invalid parameter not satisfying: %@
MPModelResponse.m
-initWithRequest: must be used.
text
T@"NSString",C,D,N
TTML
hasStoreLyrics
TB,D,N
hasTimeSyncedLyrics
MPModelPropertyLyricsHasTimeSyncedLyrics
MPModelPropertyLyricsHasStoreLyrics
MPModelPropertyLyricsTTML
MPModelPropertyLyricsText
playerViewController
T@"AVPlayerViewController",R,N,V_playerViewController
contentURL
T@"NSURL",C,N,V_contentURL
view
T@"UIView",R,N
backgroundView
playbackState
loadState
TQ,R,N
controlStyle
Tq,N,V_controlStyle
repeatMode
Tq,N,V_repeatMode
shouldAutoplay
TB,N,V_shouldAutoplay
fullscreen
TB,N,GisFullscreen
scalingMode
Tq,N
readyForDisplay
TB,R,N
movieMediaTypes
movieSourceType
Tq,N,V_movieSourceType
duration
Td,R,N
playableDuration
naturalSize
T{CGSize=dd},R,N
initialPlaybackTime
Td,N,V_initialPlaybackTime
endPlaybackTime
Td,N,V_endPlaybackTime
allowsAirPlay
TB,N
airPlayVideoActive
TB,R,N,GisAirPlayVideoActive
isPreparedToPlay
currentPlaybackTime
Td,N
currentPlaybackRate
Tf,N
MPMovieDurationAvailableNotification
playerController.contentDuration
MPMovieNaturalSizeAvailableNotification
playerController.contentDimensions
playerController.isPlaying
MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification
player.isExternalPlaybackActive
MPMoviePlayerPlaybackStateDidChangeNotification
MPMoviePlayerNowPlayingMovieDidChangeNotification
player.currentItem
MPMoviePlayerReadyForDisplayDidChangeNotification
isReadyForDisplay
MPMoviePlayerPlaybackDidFinishNotification
MPMoviePlayerPlaybackDidFinishReasonUserInfoKey
MPMoviePlayerLoadStateDidChangeNotification
playerController.status
MPMoviePlayerScalingModeDidChangeNotification
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
MPMoviePlayerDidExitFullscreenNotification
MPMoviePlayerWillExitFullscreenNotification
MPMoviePlayerDidEnterFullscreenNotification
MPMoviePlayerWillEnterFullscreenNotification
extendedLogData
T@"NSData",R,N
extendedLogDataStringEncoding
events
date
T@"NSDate",R,N
T@"NSString",R,N
serverAddress
playbackSessionID
errorStatusCode
errorDomain
errorComment
numberOfSegmentsDownloaded
playbackStartDate
numberOfServerAddressChanges
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfStalls
numberOfBytesTransferred
observedBitrate
indicatedBitrate
numberOfDroppedVideoFrames
keyspace
value
T@,R,N
timestamp
allMetadata
T@"NSDictionary",R,N
org.iana.media-type
languageCode
dataType
mimeType
MPTimedMetadata cannot be created directly
MPMoviePlayerThumbnailImageRequestDidFinishNotification
MPMoviePlayerThumbnailTimeKey
MPMoviePlayerThumbnailImageKey
controller
T@"MPMoviePlayerController",R,W,N,V_controller
AVPlayerViewController
MPMoviePlayerThumbnailErrorKey
MPMoviePlayerTimedMetadataUpdatedNotification
MPMoviePlayerTimedMetadataUserInfoKey
MPMoviePlayerFullscreenAnimationDurationUserInfoKey
MPMoviePlayerFullscreenAnimationCurveUserInfoKey
MPMovieMediaTypesAvailableNotification
MPMovieSourceTypeAvailableNotification
MediaPlayerErrorDomain
AFAnalyticsContextsMerge
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
endTimeReciever
refId
AFAnalytics
com.apple.MediaPlayer.MPAssistantAnalyticsReportingController.eventQueue
sharedController
T@"MPAssistantAnalyticsReportingController",R
displayName
T@"NSString",&,N,V_displayName
option
T@"AVMediaSelectionOption",R,N,V_option
isMainProgram
TB,R,N,V_isMainProgram
isDVS
TB,R,N,V_isDVS
canonicalLanguageIdentifier
T@"NSString",R,N,V_canonicalLanguageIdentifier
%@ '%@' %@ %@
Main
en-US
mpUniversalTrackIDType
mpUniversalTrackIDBaseID
additionalUserInfo
T@"NSDictionary",C,N
clientName
T@"NSString",C,N
clientType
Ti,N
clientVersion
serviceIdentifier
hierarchyToken
T@,&,N
sessionID
TI,N
hasCompleteSessionSetup
hasInitializedSession
v40@?0@"RTCReporting"8@"NSDictionary"16@"NSArray"24@"NSError"32
com.apple.MediaPlayer.MPRTCReportingSession.accessQueue
com.apple.MediaPlayer.MPRTCReportingSession.operationQueue
MPAlternateTextTrackWillChangeNotification
MPAlternateTextTrackDidOutputNotification
MPAlternateTextOutputStrings
MPAlternateTextOutputNativeSampleBuffers
MPAlternateTextOutputTime
MACaptionAppearanceCopySelectedLanguages
loaded
TB,R,N,GisLoaded
outOfBandTextTracks
T@"NSArray",&,N,V_outOfBandTextTracks
disableAlternateTextTrackRendering
TB,N,V_disableAlternateTextTrackRendering
selectedAlternateTextTrack
T@"MPAlternateTextTrack",&,N
MACaptionAppearanceCopyPreferredCaptioningMediaCharacteristics
availableMediaCharacteristicsWithMediaSelectionOptions
tried to select an unknown track
MPAlternateTracks.m
MACaptionAppearanceSetDisplayType
MACaptionAppearanceAddSelectedLanguage
AlternateTracksLogging
MPStoreClientTokenDidChangeNotification
v24@?0@"ICLibraryAuthServiceClientTokenStatus"8@"NSError"16
artworkCatalogsBlock
T@?,C,N,V_artworkCatalogsBlock
allowsSynchronousArtworkCatalogsBlockExecution
TB,N,V_allowsSynchronousArtworkCatalogsBlockExecution
numberOfColumns
TQ,N,V_numberOfColumns
numberOfRows
TQ,N,V_numberOfRows
tileSpacing
Td,N,V_tileSpacing
entityIdentifier
T@"<NSCopying>",C,N,V_entityIdentifier
namespaceIdentifier
T@"<NSCopying>",C,N,V_namespaceIdentifier
revisionIdentifier
T@"<NSCopying>",C,N,V_revisionIdentifier
rtcReportingCategory
TS,R,N,V_rtcReportingCategory
rtcReportingType
TS,R,N,V_rtcReportingType
networkInterfaceType
Tq,N,V_networkInterfaceType
NetworkInterface
kRTCReportingMessageParametersCategory
kRTCReportingMessageParametersType
kRTCReportingMessageParametersPayload
Code
Domain
@"NSString"16@?0@"NSString"8
-%ld
T@"MPModelLibraryDeleteEntityChangeRequest",C,N,V_request
responseHandler
T@?,C,N,V_responseHandler
v24@?0@"MPModelLibraryResponse"8@"NSError"16
com.apple.MediaPlayer.MPModelLibraryKeepLocalChangeRequestOperation.operationQueue
MPAVItemPlaybackModeAvailableNotification
MPAVItemArtworkDidChangeNotification
MPAVItemAssetIsLoadedNotification
MPAVItemTypeAvailableNotification
MPAVItemAlternateTracksAvailableNotification
MPAVItemDisplayableTextAvailableNotification
MPAVItemDurationAvailableNotification
MPAVItemIsExplicitDidChangeNotification
MPAVItemLikedStateDidChangeNotification
MPAVItemNaturalSizeAvailableNotification
MPAVItemRatingDidChangeNotification
MPAVItemTimeMarkersAvailableNotification
MPAVItemTitlesDidChangeNotification
MPAVItemModelGenericObjectDidChangeNotification
MPAVItemBookmarkTimeDidChangeNotification
MPAVItemPlayerItemDidChangeNotification
MPAVItemPlayerItemWillChangeNotification
MPAVItemTimebaseDidChangeNotification
MediaPlayerAVItemErrorDomain
_MPAVItemInternalLikedStateDidChangeNotification
MPAVItemPlaybackProperties_NextPlayStartTime
MPAVItemPlaybackProperties_StartTime
MPAVItemPlaybackProperties_EndTime
MPAVItemPlaybackProperties_LookForLyrics
MPAVItemPlaybackProperties_RampInDuration
MPAVItemPlaybackProperties_RampOutDuration
MPAVItemPlaybackProperties_AudibleDRMGroupID
MPAVItemShouldPreventPlaybackDidChangeNotification
MPAVItemHasFinishedDownloadingDidChangeNotification
MPAVItemSecureKeyDeliveryRequestDidFinishNotification
MPAVItemUserInfoKeyLoadDuration
MPAVItemUserInfoKeyRequestEndDate
MPAVItemUserInfoKeyRequestError
MPAVItemUserInfoKeyRequestStartDate
MPAVItemUserInfoKeyStoreDialogDictionary
isAssetLoaded
TB,V_isAssetLoaded
chapterTimeMarkers
T@"NSArray",&,N,V_chapterTimeMarkers
artworkTimeMarkers
T@"NSArray",&,N,V_artworkTimeMarkers
urlTimeMarkers
T@"NSArray",&,N,V_urlTimeMarkers
placeholder
TB,R,N,GisPlaceholder
tailPlaceholder
TB,R,N,GisTailPlaceholder,V_tailPlaceholder
startItem
TB,N,GisStartItem,V_startItem
repeatIndex
Tq,N,V_repeatIndex
lastChangeDirection
Tq,N,V_lastChangeDirection
shouldPreventPlayback
TB,R,N,V_shouldPreventPlayback
modelGenericObject
T@"MPModelGenericObject",R,N,V_modelGenericObject
modelPlayEvent
T@"MPModelPlayEvent",R,N
bookmarkTime
T@"NSNumber",R,C,N
initialPlaybackStartTime
initialPlaybackStartTimeOverride
T@"NSNumber",C,N,V_initialPlaybackStartTimeOverride
allowsAirPlayFromCloud
TB,R,N,V_allowsAirPlayFromCloud
allowsExternalPlayback
TB,R,N,V_allowsExternalPlayback
requiresLoadedAssetForAirPlayProperties
TB,R,N,V_requiresLoadedAssetForAirPlayProperties
aggregateDictionaryItemIdentifier
T@"NSString",R,C,N,V_aggregateDictionaryItemIdentifier
_currentPlaybackRate
Tf,N,G_currentPlaybackRate,S_setCurrentPlaybackRate:,V_currentPlaybackRate
hasFinishedDownloading
TB,R,N,V_hasFinishedDownloading
hasPerformedErrorResolution
TB,N,V_hasPerformedErrorResolution
playbackInfo
T@"NSDictionary",R,C,N
playerItem
T@"AVPlayerItem",&,N
timebase
T^{OpaqueCMTimebase=},R,N
activeItem
TB,N,GisActiveItem,V_activeItem
storeFrontIdentifier
T@"NSString",R,C,N,V_storeFrontIdentifier
externalDisplay
TB,N,GhasExternalDisplay,V_externalDisplay
_playerItemDurationIfAvailable
T{?=qiIq},R,N
storeAccountID
T@"NSNumber",R,N,V_storeAccountID
useListeningHistory
T@"NSNumber",R,N,V_useListeningHistory
leasePlaybackPreventionState
Tq,R,N,V_leasePlaybackPreventionState
leaseStatus
T@"ICMusicSubscriptionLeaseStatus",R,C,N,V_leaseStatus
explicitBadge
T@"NSString",C,N,V_explicitBadge
didReachEnd
TB,R,N,V_didReachEnd
canUseLoadedAsset
contentItemID
T@"NSString",C,N,V_contentItemID
previousContentItemID
T@"NSString",C,N,V_previousContentItemID
contentItem
T@"MPNowPlayingContentItem",R,N
observer
T@"<MPAVItemObserver>",W,N,V_observer
meetsPlaybackHistoryThreshold
TB,R,N,V_meetsPlaybackHistoryThreshold
assetLoaded
TB,R,N,GisAssetLoaded,V_assetLoaded
assetURLValid
TB,R,N,GisAssetURLValid
didAttemptToLoadAsset
TB,R,N,V_didAttemptToLoadAsset
asset
T@"AVAsset",R,N
canReusePlayerItem
TB,R,N,V_canReusePlayerItem
playbackError
T@"NSError",R,C,N
itemError
T@"NSError",&,N,V_itemError
status
queueIdentifier
T@"NSString",&,N,V_queueIdentifier
alwaysLive
TB,R,N,GisAlwaysLive
userAdvancedDuringPlayback
userChangedItemsDuringPlayback
userSkippedPlayback
feeder
T@"MPQueueFeeder",W,N,V_feeder
hasPlayedThisSession
playbackMode
Tq,R,N,V_playbackMode
accessLog
T@"AVPlayerItemAccessLog",R,N
currentTimeDisplayOverride
defaultPlaybackRate
Tf,N,V_defaultPlaybackRate
closedCaptionTimeMarkers
T@"NSArray",&,N
useEmbeddedChapterData
type
customAVEQPreset
allowsEQ
alternateTracks
T@"MPAlternateTracks",R,N,V_alternateTracks
displayableText
displayableTextLoaded
album
albumStoreID
Tq,R,N,V_albumStoreID
artist
albumArtist
artistStoreID
albumTrackNumber
albumTrackCount
buyOffers
T@"NSArray",R,C,N,V_buyOffers
canSeedGenius
composer
copyrightText
T@"NSString",R,C,N,V_copyrightText
discNumber
discCount
explicitTrack
TB,R,N,GisExplicitTrack
externalContentIdentifier
T@"NSString",R,C,N,V_externalContentIdentifier
genre
likedState
likedStateEnabled
TB,R,N,GisLikedStateEnabled,V_likedStateEnabled
supportsLikedState
TB,R,N,V_supportsLikedState
lyrics
libraryLyrics
containerUniqueID
T@"NSString",R,C,N
mainTitle
podcastURL
T@"NSURL",R,N
streamable
TB,R,N,GisStreamable
persistentID
databaseID
personID
cloudAlbumID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
shouldShowComposer
storeItemID
storeItemInt64ID
Tq,R,N,V_storeItemInt64ID
storePurchasedAdamID
storeSubscriptionAdamID
Tq,R,N,V_storeSubscriptionAdamID
Tf,R,N
supportsRewindAndFastForward15Seconds
durationIsValid
durationIfAvailable
durationFromExternalMetadata
playableDurationIfAvailable
timeOfSeekableStart
timeOfSeekableEnd
timedMetadataIfAvailable
usesSubscriptionLease
mediaItem
T@"MPMediaItem",R,&,N,V_mediaItem
loudnessInfoVolumeNormalization
Tf,N,V_loudnessInfoVolumeNormalization
soundCheckVolumeNormalization
Tf,N,V_soundCheckVolumeNormalization
supportsRating
prefersSeekOverSkip
TB,R,N,V_prefersSeekOverSkip
isAd
hasProtectedContent
TB,R,N,V_hasProtectedContent
inWishList
TB,N,GisInWishList
radioItem
TB,R,N,GisRadioItem
stationAllowsItemLiking
stationHash
stationID
stationName
stationStringID
supportsRadioTrackActions
stationProviderID
forwardPlaybackEndTime
T{?=qiIq},N
presentationSize
rtcReportingParentHierarchyToken
T@,R,N,V_rtcReportingParentHierarchyToken
v16@?0@"MPNowPlayingContentItem"8
kMACaptionAppearanceSettingsChangedNotification
/System/Library/Frameworks/MediaAccessibility.framework/MediaAccessibility
RampInOutInfoOutDuration
RampInOutInfoInDuration
AVItemPlaybackProperties_RampOutDuration
AVItemPlaybackProperties_RampInDuration
AudibleDRMInfoGroupID
v16@?0@"MPAVController"8
trackReferences
MPAVItemTimebaseObservationContext
MPAVItemLoadedTimeRangesObservationContext
loadedTimeRanges
MPAVItemDurationObservationContext
MACaptionAppearanceGetDisplayType
availableChapterLocales
v32@?0@"MPTimeMarker"8Q16^B24
extraAttributes
commonKey
INTERNALONLY-%@
v16@?0@"MPExportableArtworkProperties"8
%lli
com.apple.MediaPlayer.MPAVItem.accessQueue
com.apple.MediaPlayer.MPAVItem.assetQueue
MPAVItem
T@"MPAVItem",&,N
@"MPAVItem"8@?0
clientInfo
T@"ICClientInfo",C,N,V_clientInfo
delegatedUserIdentity
T@"ICUserIdentity",C,N,V_delegatedUserIdentity
userIdentity
T@"ICUserIdentity",C,N,V_userIdentity
userIdentityStore
T@"ICUserIdentityStore",&,N,V_userIdentityStore
storePlatformRequest
T@"ICStorePlatformRequest",R,C,N
allowLocalEquivalencies
TB,N,V_allowLocalEquivalencies
reason
TQ,N,V_reason
itemIdentifiers
T@"NSArray",C,N,V_itemIdentifiers
T@"NSNumber",C,N,V_timeoutInterval
platform
T@"NSString",C,N,V_platform
retryDelay
Td,N,V_retryDelay
shouldIgnoreCache
TB,N,V_shouldIgnoreCache
shouldIgnoreExpiration
TB,N,V_shouldIgnoreExpiration
shouldRequireCachedResults
TB,N,V_shouldRequireCachedResults
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
requestingBundleIdentifier
requestingBundleVersion
personalized
TB,R,N,GisPersonalized
personalizationStyle
Tq,N,V_personalizationStyle
MPQueueFeederErrorDomain
playActivityFeatureName
T@"NSString",C,N,V_playActivityFeatureName
playActivityRecommendationData
T@"NSData",C,N,V_playActivityRecommendationData
siriReferenceIdentifier
T@"NSString",C,N,V_siriReferenceIdentifier
siriWHAMetricsInfo
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
T@"MPModelPlayEvent",R,N,V_modelPlayEvent
uniqueIdentifier
T@"NSString",R,N,V_uniqueIdentifier
[MPQueueFeeder class]
MPQueueFeeder.m
modelObject
T@"MPModelObject",&,N,V_modelObject
standard
short
bannerUber
subscriptionCover
subscriptionHero
storeFlowcase
browseCover
fullscreenBackground
brandLogo
masterArt
activity
brand
iTunesBrand
showBrand
musicVideo
tvSeason
tvShow
socialProfile
uploadedAudio
uploadedVideo
tvtrailer
username
shortUrl
socialProfileId
isPrivate
isVerified
songs
shows
tv-episodes
tv-seasons
parentStoreItemMetadata
T@"MPStoreItemMetadata",R,C,N,V_parentStoreItemMetadata
artistName
artworkRequestToken
T@"MPStoreArtworkRequestToken",R,N
stationGlyphRequestToken
T@,R,C,N
artworkTrackIDs
T@"NSArray",R,C,N
artistUploadedContentType
beats1
TB,R,N,GisBeats1
childrenStoreIDs
childStoreItemMetadatas
collectionName
collectionStoreID
compilation
TB,R,N,GisCompilation
composerName
curatorName
curatorHandle
curatorID
descriptionText
editorNotes
expirationDate
T@"NSDate",R,C,N
expired
TB,R,N,GisExpired
shortEditorNotes
effectiveStorePlatformDictionary
importableStorePlatformDictionary
explicitContent
TB,R,N,GisExplicitContent
explicitRating
hasArtistBiography
hasLyrics
hasSocialPosts
hasSubscriptionOffer
genreNames
isPreorder
itemKind
playlistType
iTunesBrandType
latestAlbumArtworkRequestToken
movementCount
movementName
movementNumber
movieClipsCount
movieClips
offers
playlistIdentifiers
popularity
releaseDate
lastModifiedDate
shortName
shouldBookmarkPlayPosition
versionHash
shouldReportPlayEvents
showComposer
purchasedAdamID
subscriptionAdamID
formerStoreAdamIDs
socialProfileID
storeRedownloadable
TB,R,N,GisStoreRedownloadable
trackCount
seasonNumber
episodeCount
shortURL
T@"NSURL",R,C,N
videoSubtype
workName
handle
nameRaw
privatePerson
TB,R,N,GisPrivatePerson
verifiedPerson
TB,R,N,GisVerifiedPerson
radioStationTypeID
isChart
radioStationProviderName
live
TB,R,N,GisLive
radioStationEvents
en_US_POSIX
yyyy-MM-dd'T'HH:mm:ss'Z'
YYYY-MM-dd
editorialNotes
itunesNotes
children
artworkTracks
stationGlyph
avatarArtwork
uber
screenshots
editorialArtwork
v16@?0@"MPRadioStationEvent<MPMutableRadioStationEvent>"8
isLive
stationProviderName
radioStationTypeId
work
videoSubType
subscribedAdamID
purchasedAdamId
formerIds
itemId
libraryPlaylistId
libraryTrackId
playlistIds
itemName
latestAlbumArtwork
playParams
music-video
isAvailable
isMasteredForItunes
isCompilation
contentRatingsBySystem
contentRating
explicit
genres
hasArtistBio
riaa
isBeats1
curatorId
copyright
collectionId
childrenIds
artworkTrackIds
artistId
durationInMillis
curatorSocialHandle
playlistId
sagaId
libraryAlbumId
MPStoreItemMetadataStorePlatformDictionary
MPStoreItemMetadataParentStoreItemMetadata
MPStoreItemMetadataOverrideChildStorePlatformDictionaries
MPStoreItemMetadataHasOverrideChildStorePlatformDictionaries
MPStoreItemMetadataExpirationDate
MPStoreItemMetadataMusicAPIDictionary
MPStoreItemMetadataDownloadAssetDictionary
<%@:%p storeID=%@ name=%@ subscriptionOffer=%@>
comparableTime
Td,N,V_duration
index
TQ,N,V_index
hasArtworkAtPlaybackTime
Td,N,V_time
maxTime
T@"NSString",&,N,V_title
T@"NSURL",&,N,V_url
metadata
T@"NSDictionary",&,N,V_metadata
markerType
Tq,R,N,V_markerType
<%@: %p> time = range = [%@, %@), property = %ld, _title = %@, url = %@, metadata = %@
%@%02lu:%02lu:%02lu.%02ld
MPShuffleTypeOff
MPShuffleTypeItems
MPShuffleTypeCollections
MPShuffleTypeUserDefault
<MPShuffleTypeUnknown>
MPRepeatTypeOff
MPRepeatTypeOne
MPRepeatTypeAll
MPRepeatTypeUserDefault
<MPRepeatTypeUnknown>
None
PrepareToPlay
Play
Proactive
User Selected
subtitleTextState
T@"MPAVRoutingTableViewCellSubtitleTextState",&,N,V_subtitleTextState
delegate
T@"<MPAVRoutingTableViewCellDelegate>",W,N,V_delegate
mirroringSwitchVisible
TB,N,V_mirroringSwitchVisible
mirroringStyle
TQ,N,V_mirroringStyle
iconStyle
TQ,N,V_iconStyle
pendingSelection
TB,N,GisPendingSelection,V_pendingSelection
isDisplayedAsPicked
TB,N,V_isDisplayedAsPicked
useSmartAudioCheckmarkStyle
TB,N,V_useSmartAudioCheckmarkStyle
provideOwnSeparator
TB,N,V_provideOwnSeparator
subtitleViewAlpha
Td,N,V_subtitleViewAlpha
volumeSlider
T@"MPVolumeSlider",&,N,V_volumeSlider
showingVolumeSlider
TB,N,GisShowingVolumeSlider,V_showingVolumeSlider
v16@?0@"NSTimer"8
checkmark
checkmark.circle.fill
circle
MediaPlayer
AIRPLAY_IN_USE_ON_PAIRED_DEVICE_%@
com.apple.MediaPlayer
%@  %@
AIRPLAY_DEVICE_BATTERY_LEVEL_CASE_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_RIGHT_FORMAT_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_LEFT_FORMAT_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_SINGLE_FORMAT_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_COMBINED_FORMAT_%@_%@
chevron.forward
mediaControls
T@"MPMediaControls",&,N,V_mediaControls
configuration
T@"MPMediaControlsConfiguration",R,N,V_configuration
didDismissHandler
T@?,C,N,V_didDismissHandler
T@"<MPMediaControlsViewControllerDelegate>",W,N,V_delegate
com.apple.MediaPlayer.MPTiledArtworkDataSource.loadingTileDataAccessQueue
Artwork catalogs found, but at least one had an empty image
No artwork catalogs were found
Tiling artwork request was cancelled
Tiled artwork count cannot be 0.
com.apple.MediaPlayer.MPTiledArtworkDataSource.LoadingTiledArtworkRequestsQueue
com.apple.MediaPlayer.MPTiledArtworkDataSource.RenderingTiledArtworkRequestsQueue
com.apple.MediaPlayer.MPTiledArtworkDataSource.TilingArtworkCatalogOperationQueue
MPTiledArtworkError
libraryView
T@"MPMediaLibraryView",&,N,V_libraryView
query
T{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}},N,V_query
resultHandler
T@?,C,N,V_resultHandler
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
serialAccessQueue
T@"NSOperationQueue",&,N,V_serialAccessQueue
T@"MPModelLibraryRequest",C,N,V_request
scopedContainers cannot contain a MPModelObject subclass matching the itemKind's modelClass
MPModelLibraryRequestOperation.mm
{shared_ptr<mlcore::PlaylistItemEntityQuery>=^{PlaylistItemEntityQuery}^{__shared_weak_count}}8@?0
com.apple.MediaPlayer.MPModelLibraryRequest.serialQueue
-[MPModelLibraryRequestOperation _executeRequest]_block_invoke
Results should not be nil!
com.apple.MediaPlayer.MPModelLibraryRequest.itemQueryOperationQueue
-[MPModelLibraryRequestOperation _executeLegacyRequest]
v32@?0@"MPMediaQuerySection"8Q16^B24
episode
T@"MPModelTVEpisode",&,N,V_episode
MPAVControllerAvailableRoutesChangedNotification
MPAVControllerBufferingStateChangedNotification
MPAVControllerOldStateParameter
MPAVControllerNewStateParameter
MPAVControllerContentsChangedNotification
MPAVControllerCrossedTimeMarkerNotification
MPAVControllerChapterTimeMarkerParameter
MPAVControllerArtworkTimeMarkerParameter
MPAVControllerURLTimeMarkerParameter
MPAVControllerClosedCaptionTimeMarkerParameter
MPAVControllerFirstVideoFrameDisplayedNotification
MPAVControllerIsExternalPlaybackActiveDidChangeNotification
MPAVControllerItemChangedNotification
MPAVControllerItemParameter
MPAVControllerItemDidFinishLoadingNotification
MPAVControllerItemReadyToPlayNotification
MPAVControllerItemPlaybackDidEndNotification
MPAVControllerItemWillChangeNotification
MPAVControllerPlaybackErrorNotification
MPAVControllerErrorParameter
MPAVControllerErrorReasonParameter
MPAVControllerPlaybackStateChangedNotification
MPAVControllerSeekabilityDidChangeNotification
MPAVControllerServerDiedNotification
MPAVControllerSizeDidChangeNotification
MPAVControllerTimeDidJumpNotification
MPAVControllerTimeParameter
MPAVControllerTickNotification
MPAVControllerValidityChangedNotification
MPAVControllerValidParameter
MPAVControllerTimedMetadataAvailableNotification
MPAVControllerTimedMetadataParameter
MPAVControllerTimedImageMetadataAvailableNotification
MPAVControllerTimedImageMetadataParameter
MPAVControllerRateDidChangeNotification
MPAVControllerVolumeDidChangeNotification
MPAVControllerDidReloadWithPlaybackContextNotification
MPAVControllerFailedToReloadPlaybackContextNotification
MPAVControllerFailedToReloadErrorParameter
MPAVControllerDidSetCurrentTimeNotification
MPAVControllerWillReloadWithPlaybackContextNotification
MPAVControllerPlaybackContextParameter
MPAVControllerWillSetCurrentTimeNotification
MPAVControllerPlaylistManagerFailedToQueueNotification
MPAVControllerPictureInPictureIsPossibleDidChange
MPAVControllerErrorDomain
MPAVControllerErrorUserInfoKeyAlertDefaultButtonActionURLString
MPAVControllerErrorUserInfoKeyAlertDefaultButtonTitle
MPAVControllerErrorUserInfoKeyAlertMessage
MPAVControllerErrorUserInfoKeyAlertTitle
MPAVControllerPreviousItemDidTransitionNaturally
MPAVControllerPlaybackStateParameter
MPAVControllerUpdatedPlaybackStateParameter
MPAVControllerItemDidChangeWhenReloadingPlaybackContextNotification
MPAVControllerNextItemStateParameter
MPAVControllerCurrentTimeParameter
policyEnforcer
T@"MPAVPolicyEnforcer",&,N,V_policyEnforcer
actionAfterQueueLoadOverride
Tq,N,V_actionAfterQueueLoadOverride
avPlayer
T@"MPQueuePlayer",R,N
queuePlayer
T@"MPQueuePlayer",&,N,V_queuePlayer
queueCoordinator
T@"<MPAVQueueCoordinating>",&,N,V_queueCoordinator
queueController
T@"<MPAVQueueController>",R,N,V_queueController
externalPlaybackType
ubiquitousBookkeepingEnabled
alwaysPlayWheneverPossible
displayOverridePlaybackState
Tq,N,V_displayOverridePlaybackState
disableAirPlayMirroringDuringPlayback
durationOfCurrentItemIfAvailable
nextFadeOutDuration
Td,N,V_nextFadeOutDuration
playableDurationOfCurrentItemIfAvailable
stopAtEnd
autoPlayWhenLikelyToKeepUp
externalPlaybackActive
TB,R,N,GisExternalPlaybackActive
shouldEnforceHDCP
TB,N,V_shouldEnforceHDCP
showPlaybackStateOverlaysOnTVOut
destinationIsTVOut
TB,N,SsetDestinationIsTVOut:
useApplicationAudioSession
shouldPostCompatibilityNotifications
TB,N,V_shouldPostCompatibilityNotifications
isReloadingForPlaybackContextChange
TB,N,V_isReloadingForPlaybackContextChange
canAttemptErrorResolution
TB,R,N,V_canAttemptErrorResolution
identifier
T@"NSString",R,C,N,V_identifier
videoView
T@"MPVideoView",R,N
videoLayer
T@"AVPlayerLayer",R,N
externalPlaybackVideoGravity
state
Tq,N,V_state
_displayPlaybackState
shouldDisplayAsPlaying
useAirPlayMusicMode
TB,N,V_useAirPlayMusicMode
managesAirPlayBehaviors
TB,N,V_managesAirPlayBehaviors
rate
stateBeforeInterruption
Tq,R,N,V_stateBeforeInterruption
automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds
TB,N,V_automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds
wantsPictureInPicture
TB,N,V_wantsPictureInPicture
pictureInPictureController
T@"AVPictureInPictureController",R,N,V_pictureInPictureController
T@"MPQueueFeeder",R,N
currentItem
T@"MPAVItem",R,N
routingController
T@"MPAVRoutingController",R,N
lastDirection
Tq,R,N,V_lastDirection
hasVolumeControl
volume
muted
TB,R,N,V_muted
currentTime
bufferingState
TQ,R,N,V_bufferingState
currentItemReady
TB,R,N,GisCurrentItemReady
Tq,N,V_playbackMode
playing
TB,R,N,GisPlaying
TB,R,N,GisValid
Movie/video screen capture
APIC
MPAVControllerDidRegisterItemNotificationsObject
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4018.200.29.1/MediaPlayer/Playback/Old Engine/_ios_tvos_watchos/MPAVController.m
com.apple.MediaPlayer.MPAVController.AutoPlay
_AVPlayer_VolumeDidChangeNotification
MPAudiblePlaybackPerformanceEnabled
_MPAVControllerExternalPlaybackVideoClient
Picked route doesn't have a UI to nicely present audio-only items
Picked route can't play local file from a sending device
Picked route can't play encrypted local files via progressive download
iPodAVControllerErrorDomain
HDCP_PROTECTION_ERROR_BODY
HDCP_PROTECTION_ERROR_TITLE
-[MPAVController _applicationDidRemoveDeactivationReason:]
-[MPAVController _applicationWillAddDeactivationReason:]
pictureInPicturePossible
tracks
timedMetadata
playbackLikelyToKeepUp
playbackBufferFull
playbackBufferEmpty
canPlayFastReverse
canPlayFastForward
AVPictureInPictureController
/System/Library/Frameworks/AVKit.framework/AVKit
%s-%i
Phone
not loaded
itemDidChange nil
mediaCharacteristic
selectionCriteria
contentsOpaque
-[MPAVController setDisableAirPlayMirroringDuringPlayback:shouldIgnorePlaybackQueueTransactions:]
-[MPAVController setClient:wantsToAllowExternalPlayback:shouldIgnorePlaybackQueueTransactions:]
_allowAirPlayVideoCount incorrect
MPAVController.m
-[MPAVController togglePlaybackWithOptions:]
-[MPAVController pause]
changing track, no more tracks
invalid parameters
MPCQueueController
PlayVideoInBackground
outputSupportsAC3
prefersApplicationAudioSession
queueController.currentItem
home-sharing://
http://
https://
redownload
subscription
downloaded
downloading
long
medium
assets
buyParameters
formattedPrice
offerType
price
lookupDictionary
T@"NSDictionary",R,C,N,V_lookupDictionary
actionText
priceFormatted
action-params
buyParams
Only keyed archiving is supported.
MPStoreItemOfferLookupDictionary
@"MPArtworkCatalog"16@?0d8
previewArtworkRequestToken
T@"MPStoreArtworkRequestToken",R,C,N
previewArtwork
clipAssets
fallbackStreamingKeyServerURL
T@"NSURL",C,N,V_fallbackStreamingKeyServerURL
fallbackStreamingKeyCertificateURL
T@"NSURL",C,N,V_fallbackStreamingKeyCertificateURL
item
T@"MPStoreRedownloadProductItem",R,N
responseDictionary
T@"NSDictionary",R,C,N,V_responseDictionary
songList
T@"NSString",C,N,V_title
T@"NSString",C,N,V_descriptionText
T@"NSDate",C,N,V_startTime
endTime
T@"NSDate",C,N,V_endTime
T@"NSDate",C,N
MPRadioControllerRadioAvailabilityDidChangeNotification
MPRadioControllerRecentStationsDidChangeNotification
radioAvailable
TB,R,N,GisRadioAvailable
com.apple.mobileipod
MPRadioControllerRadioAvailability
com.apple.MediaPlayer.MPRadioController.connection
BKSProcessAssertion
/System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
FBSOpenApplicationOptionKeyActivateSuspended
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSSystemService
v16@?0@"NSXPCConnection"8
com.apple.MediaPlayer.MPRadioController.accessQueue
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
v16@?0@"<MPMutableRadioIdentifiers>"8
T@"MPModelAlbum",&,D,N
T@"MPModelArtist",&,D,N
T@"MPModelGenre",&,D,N
T@"MPModelComposer",&,D,N
grouping
localFileAsset
T@"MPModelFileAsset",&,D,N
homeSharingAsset
T@"MPModelHomeSharingAsset",&,D,N
playbackPosition
T@"MPModelPlaybackPosition",&,D,N
storeAsset
T@"MPModelStoreAsset",&,D,N
Td,D,N
Tq,D,N
playCount
skipCount
explicitSong
TB,D,N,GisExplicitSong
artistUploadedContent
TB,D,N,GisArtistUploadedContent
hasVideo
beatsPerMinute
T@"MPModelLyrics",&,D,N
Tf,D,N
artworkCatalogBlock
T@?,C,D,N
hasCloudSyncSource
TB,D,N,GisLibraryAdded
libraryAddedDate
T@"NSDate",C,D,N
libraryAddEligible
TB,D,N,GisLibraryAddEligible
keepLocalEnableState
keepLocalManagedStatus
year
gaplessInfo
T@"MPGaplessInfo",&,D,N
volumeAdjustment
classicalWork
classicalMovementCount
T@"NSDate",R,C,D,N
lastDevicePlaybackDate
MPModelPropertySongTitle
%@ %@
MPModelPropertySongHasVideo
MPModelPropertySongDownloadedDate
MPModelRelationshipSongPlaybackPosition
MPModelPropertySongVolumeAdjustment
MPModelPropertySongGaplessInfo
MPModelPropertySongCloudStatus
MPModelPropertySongUserRating
MPModelRelationshipSongStoreAsset
MPModelRelationshipSongHomeSharingAsset
MPModelPropertySongYear
MPModelPropertySongClassicalMovementNumber
MPModelPropertySongClassicalMovementCount
MPModelPropertySongClassicalMovement
MPModelPropertySongClassicalWork
MPModelPropertySongHasCloudSyncSource
MPModelPropertySongLibraryAddEligible
MPModelPropertySongLastDevicePlaybackDate
MPModelPropertySongLibraryAddedDate
MPModelPropertySongLibraryAdded
MPModelPropertySongKeepLocalManagedStatus
MPModelPropertySongKeepLocalEnableState
MPModelRelationshipSongLocalFileAsset
MPModelPropertySongArtwork
MPModelPropertySongVolumeNormalization
MPModelPropertySongShouldShowComposer
MPModelRelationshipSongLyrics
MPModelPropertySongBeatsPerMinute
MPModelPropertySongArtistUploadedContent
MPModelPropertySongExplicit
MPModelPropertySongSkipCount
MPModelPropertySongPlayCount
MPModelPropertySongDiscNumber
MPModelPropertySongTrackNumber
_MPModelPropertySongTrackCount
MPModelPropertySongDuration
MPModelPropertySongCopyrightText
MPModelPropertySongGrouping
MPModelRelationshipSongComposer
MPModelRelationshipSongGenre
MPModelRelationshipSongArtist
MPModelRelationshipSongAlbum
variants
TQ,R,N,V_variants
options
TQ,R,N,V_options
cloud library 
shuffleable 
 or 
artist uploaded content
music videos
v16@?0@"MPModelSongKind"8
Song:v%lu:o%lu
MPModelChildSongAlbum
MPModelChildSongArtists
com.apple.MediaPlayer.MPAVTelevisionRoutingDataSource/serialQueue
eventName
eventCode
eventPayload
T@"NSMutableDictionary",R,N
TI,N,V_sessionID
siriSessionIdentifier
T@"NSString",C,N,V_siriSessionIdentifier
RTCSessionIdentifier
version
Tq,R,N,V_version
popularityDictionary
appDataDictionaryVersion
%lld
assetURL
downloadKey
fairPlayInfoList
flavorType
fileExtension
fileSize
T@"NSData",R,C,N
protectionType
artworkGenerator
T@"<MPMediaRemoteEntityArtworkGenerator>",&,N,V_artworkGenerator
keyPath
T@"NSString",R,N,V_keyPath
valueTransformBlock
T@?,R,N,V_valueTransformBlock
deviceSpecificUserInfo.
userInfo.
@24@?0@"MPNowPlayingContentItem"8@"MPMediaRemoteEntityTranslatorContext"16
enableState
Tq,N,V_enableState
MPVideoViewTVOutCapabilityChangedNotification
MPVideoViewDidDisplayVideoNotification
canShowQTAudioOnlyUI
videoOverlayViewIfLoaded
T@"UIView<MPVideoOverlay>",R,N
allowsTVOutInBackground
transitioningToFullscreen
TB,R,N,GisTransitioningToFullscreen
transitioningFromFullscreen
TB,R,N,GisTransitioningFromFullscreen
artworkImageView
showArtworkInImageView
showArtworkForTVOut
allowsDetailScrubbing
allowsWirelessPlayback
alwaysAllowHidingControlsOverlay
artworkImageStyle
Tq,N,V_artworkImageStyle
attemptAutoPlayWhenControlsHidden
backstopColor
T@"UIColor",&,N,V_backstopColor
canAnimateControlsOverlay
canChangeScaleMode
canShowControlsOverlay
controlsOverlayVisible
desiredParts
TQ,N,V_desiredParts
disableAutoRotation
disableControlsAutohide
disabledParts
TQ,N,V_disabledParts
displayPlaybackErrorAlerts
hostedWindow
T@"_UIHostedWindow",R,N
hostedWindowContextID
TI,R,N
inlinePlaybackUsesTVOut
itemTypeOverride
Tq,N,V_itemTypeOverride
posterImage
T@"UIImage",&,N,V_posterImage
scaleMode
Tq,N,V_scaleMode
TVOutEnabled
viewControllerWillRequestExit
videoOverlayView
T@"UIView<MPVideoOverlay>",R,&,N
T@"MPVideoView",R,&,N
visibleParts
TQ,N,V_visibleParts
T@,W,N
orientation
T@"MPAVController",&,N
T@"UIView",R,&,N
T@"UIColor",&,N
TQ,N
T@"UIImage",&,N
COULD_NOT_LOAD_MOVIE_ERROR_FMT_%@
GENERIC_COULD_NOT_LOAD_MOVIE
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4018.200.29.1/MediaPlayer/Playback/Deprecated UI/_ios/MPVideoViewController.m
frame
disableMovieHUDAutoHide
.GlobalPreferences
AirPlayEverywhereEnabled
zoomin_icon.png
zoomout_icon.png
registeredForPlayerNotifications
TB,N,V_registeredForPlayerNotifications
observesApplicationSuspendResumeEventsOnly
idleTimerDisabled
TB,N,GidleTimerDisabled,SsetIdleTimerDisabled:,V_idleTimerDisabled
T@,W,N,V_delegate
T@"MPAVItem",&,N,V_item
Tq,N,V_interfaceOrientation
media player
v32@?0@"MPViewController"8Q16^B24
predicates
T@"NSMutableArray",&,N,V_predicates
T@"MPAVController",R,W,N,V_controller
com.apple.fig.screen.is.probably.being.recorded
SSVPlaybackResponseErrorUserInfoKeyDialogDictionary
T@"NSString",R,C,N,V_buyParameters
TQ,R,N,V_endpointType
redownloadProductResponse
T@"MPStoreRedownloadProductResponse",R,N
responseError
streamingRental
TB,N,GisStreamingRental,V_streamingRental
T@"NSString",C,N,V_requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleVersion
dialog
failureType
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
com.apple.MPStoreRedownloadProductOperation.accessQueue
image
squareImage
TB,N,V_squareImage
imageView
T@"UIImageView",R,N,V_imageView
; scaledFittingSize = %@
; tileSpacing = %.2f
; numberOfRows = %lu
; numberOfColumns = %lu
; revisionIdentifier = %@
; namespaceIdentifier = %@
; entityIdentifier = %@
currentVisibleTextType
TQ,N,V_currentVisibleTextType
hasVisibleTextTypeToShow
hasVisibleTextTypeToTransitionTo
stringForCurrentVisibleTextType
batteryText
T@"NSString",C,N,V_batteryText
pairedDeviceText
T@"NSString",C,N,V_pairedDeviceText
localizedSubtitle
T@"NSString",C,N,V_localizedSubtitle
animating
TB,N,GisAnimating,V_animating
mediaQuery
T@"MPMediaQuery",R,N,V_mediaQuery
firstItem
T@"MPMediaItem",R,N,V_firstItem
shuffleType
Tq,R,N,V_shuffleType
repeatType
Tq,R,N,V_repeatType
The provided queue has no items or collections.
<%@ %p, query = %@, firstItem = %@, shuffleType = %@, repeatType = %@>
_mediaRemotePlaybackQueue
T^{_MRSystemAppPlaybackQueue=},R,N
mediaRemoteOptions
T@"NSDictionary",R,N,V_mediaRemoteOptions
userInfo
requestingImmediatePlayback
TB,N,GisRequestingImmediatePlayback
shouldOverrideManuallyCuratedQueue
replaceIntent
siriRecommendationIdentifier
siriAssetInfo
featureName
T@"ICUserIdentity",R,N,V_userIdentity
You must provide %@ with a MediaRemote playback queue. Use %@ instead.
<%@:%p EmptyQueue>
data
<%@:%p identifier=%@ dataLength=%lu>
seedTrack
<%@ %p, seedTrack = %@>
firstTrackIdentifier
T@"NSString",R,N,V_firstTrackIdentifier
trackIdentifiers
T@"NSArray",R,N,V_trackIdentifiers
collectionIdentifierSet
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
Empty track IDs array provided
<%@ %p, shuffleType = %@, trackIDs = %@>
Tq,R,N,V_stationID
T@"NSString",R,N,V_stationStringID
Radio station is invalid or not found.
<%@ %p, stationID = %@, stationStringID = %@>
mrQueue
MPRemotePlaybackQueue.m
accessoryImage
accessoryImageSpacing
Td,N,V_accessoryImageSpacing
font
T@"UIFont",&,N,V_font
hitRectInsets
T{UIEdgeInsets=dddd},N,V_hitRectInsets
route
T@"MPAVRoute",&,N,V_route
routeTitle
T@"NSString",R,C,N,V_routeTitle
routeLabelHidden
TB,N,GisRouteLabelHidden,V_routeLabelHidden
forcesUppercaseText
TB,N,V_forcesUppercaseText
overrideColor
T@"UIColor",&,N,V_overrideColor
routeLabelAxis
Tq,N,V_routeLabelAxis
MPStoreLyricsRequestErrorDomain
song
T@"MPModelSong",&,N,V_song
MPModelPropertyPersonName
localizedTitle
T@"NSString",C,N,V_localizedTitle
stations
T@"NSArray",C,N,V_stations
MPRadioRecentStationsGroupLocalizedTitle
MPRadioRecentStationsGroupStations
requestedPropertySet
T@"MPPropertySet",R,N,V_requestedPropertySet
requestedPropertySetExcludingInternalOnlyProperties
T@"MPPropertySet",R,N
T@"MPAVController",&,N,Vplayer
Next
Previous
AlternateTracks
ShowChapters
Email
AddBookmark
30SecondRewind
ToggleFullScreen
15SecondRewind
15SecondFastForward
Pause
target
T@,W,N,V_target
TB,N,V_allowsWirelessPlayback
playButtonImage
pauseButtonImage
playPauseButtonImage
ToggleFullscreen
ScaleButton
PrevButton
NextButton
PlayButton
LikeOrBanButton
EmailLinkButton
ChaptersButton
BookmarkButton
AlternateTracksButton
nexttrack
addbookmark
email
showchapters
alternatetracks
prev30
prevtrack
airplay
airplay_on
pause.png
play.png
accountDSID
T@"MPSectionedCollection",R,N
editorial-elements
links
contents
editorialElementKind
/v1/editorial/%@/rooms/%@
countryCode
viewRoomUrlRegex
musicSubscription
emphasize
link
seeAllUrl
tabs
; disallowEmptyTitleSections = %@
; useOneLevelHeroListHierarchy = %@
; createIndependentSectionsForLiveRadioStations = %@
v16@?0@"MPModelGenre"8
@"MPArtworkCatalog"16@?0@"MPModelAlbum"8
shuffleStartingSectionIdentifier
T@"NSString",C,N,V_shuffleStartingSectionIdentifier
shuffleStartingItemIdentifier
T@"NSString",C,N,V_shuffleStartingItemIdentifier
T@"<MPShuffleableSectionedIdentifierListDelegate>",W,D,N
Tq,N,V_shuffleType
Invalid insertion (no item identifiers) in section: %@
MPShuffleableSectionedIdentifierList.m
Can only move after a section tail that is in the shuffled SIL: afterSectionIdentifier=%@
Can only move after a section head that is in the shuffled SIL: afterSectionIdentifier=%@
Unsupported shuffle type: MPShuffleTypeUserDefault
T@"<_MPSSILDelegate>",W,D,N
randomDistribution
T@"MPRandomDistribution",R,N,V_randomDistribution
candidateItems
T@"NSMutableArray",&,N,V_candidateItems
B32@?0@"MPSectionedIdentifierListEntry"8Q16^B24
rand
cani
coreScope
T{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}},R,N
T@"MPModelKind",&,N,V_itemKind
T@"NSString",R,C,N,V_name
itemProperties
T@"MPPropertySet",R,C,N,V_itemProperties
{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}}24@?0@"MPModelKind"8@"MPPropertySet"16
v32@?0@"NSString"8@"MPModelKind"16^B24
Couldn't create scope for modelKind: %@
MPModelLibrarySearchScope.mm
MPModelLibrarySearchScopeItemProperties
MPModelLibrarySearchScopeName
MPModelLibrarySearchScopeItemKind
; itemProperties = %@
; name = %@
; itemKind = %@
T@"MPModelLibraryAlbumAppDataChangeRequest",C,N,V_request
MPModelLibraryAddToPlaylistChangeRequestErrorDomain
playlist
T@"MPModelPlaylist",&,N,V_playlist
representativeModelObject
T@"MPModelObject",&,N,V_representativeModelObject
referralObject
T@"MPModelObject",&,N,V_referralObject
songResults
T@"MPSectionedCollection",&,N,V_songResults
storeImportAllowedHandler
T@?,C,N,V_storeImportAllowedHandler
interfaceOrientation
backgroundPlaceholderImage
backgroundPlaceholderView
backgroundPlaceholderPosterImageView
T@"UIView",&,N,V_backgroundPlaceholderPosterImageView
destinationPlaceholderStyle
Tq,N,V_destinationPlaceholderStyle
destinationName
T@"NSString",C,N,V_destinationName
layoutSubviewsPostflightHandler
T@?,C,N,V_layoutSubviewsPostflightHandler
AIRTUNES_VIDEO_PLACEHOLDER_SUBTITLE_FORMAT_%@
TVOUT_PLACEHOLDER_SUBTITLE
AIRTUNES_VIDEO_POPOVER_TITLE
TVOUT_PLACEHOLDER_TITLE
NoContentVideosOverlay
QTAudioOnlyBackground
parser
T@"MPModelStoreBrowseResponseParser",&,N,V_parser
changeDetails
T@"MPChangeDetails",&,N,V_changeDetails
hasAdditionalContentItems
artworkResizingAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_artworkResizingAccessQueue
artworkResizingOperationQueue
T@"NSOperationQueue",&,N,V_artworkResizingOperationQueue
artworkResizingOperations
T@"NSMapTable",&,N,V_artworkResizingOperations
com.apple.mediaplayer.artworkservice.resizing.queue
com.apple.mediaplayer.artworkservice.resizing.OperationQueue
discoveryMode
Tq,N,V_discoveryMode
pickedRoutes
devicePresenceDetected
TB,R,N,GisDevicePresenceDetected
T@"<MPAVLightweightRoutingControllerDelegate>",W,N,V_delegate
The lightweight routing controller only supports disabled and presence discovery modes. If detailed is needed please use MPAVRoutingController.
MPAVLightweightRoutingController.m
<%@:%p "%@"
firstSection
lastSection
lastItem
totalItemCount
section
B24@?0q8q16
v16@?0@"NSIndexPath"8
globalIndex must be greater than or equal to 0
MPSectionedCollection.m
v32@?0@"NSArray"8Q16^B24
    %@ (%lu %@),
; %lu %@
    
        %@,
    %@ (%lu %@): [
@"MPArtworkCatalog"16@?0@"MPModelTVShow"8
layer
T@"AVPlayerLayer",R,D,N
T@"AVPlayer",&,N
videoGravity
videoBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
playerLayerView
T@"_MPAVPlayerViewPlayerLayerView",R,N
targetVideoGravity
T@"NSString",C,N,V_targetVideoGravity
videoGravityAnimator
T@"UIViewPropertyAnimator",&,N,V_videoGravityAnimator
MPVideoViewDidMoveToWindowNotification
MPVideoViewEffectiveScaleModeDidChangeNotification
MPVideoViewMoviePathWillChangeNotification
MPVideoViewMoviePathDidChangeNotification
MPVideoViewScaleModeDidChangeNotification
T@"MPAVController",W,N,V_player
movieSubtitle
T@"NSString",&,N,V_movieSubtitle
movieTitle
T@"NSString",&,N,V_movieTitle
Td,N,V_startTime
Td,N,V_stopTime
effectiveScaleMode
movieFrame
movieContentFrame
AVURLAssetOptions
T@"NSDictionary",&,N,V_AVURLAssetOptions
playerLayer
contentView
T@"UIView",R,N,V_contentView
MPModelPropertyPlayEventDatePlayed
MPModelRelationshipPlayEventAlbum
MPModelRelationshipPlayEventArtist
MPModelRelationshipPlayEventPlaylist
MPModelRelationshipPlayEventRadioStation
T@"MPModelPlaylist",&,D,N
radioStation
T@"MPModelRadioStation",&,D,N
v16@?0@"MPModelRadioStation"8
v16@?0@"MPModelStoreBrowseSection"8
subscriber
nonsubscriber
optout
include[stations]
include
MPVideoOverlayViewBackgroupGroupName
viewControllerForModalPresentationOrientation
T@"UIViewController",W,N,V_viewControllerForModalPresentationOrientation
topBarBackdropView
T@"_UIBackdropView",R,N,V_topBarBackdropView
bottomBarBackdropView
T@"_UIBackdropView",R,N,V_bottomBarBackdropView
overrideType
Tq,N,S_setOverrideType:,V_overrideType
T@"MPVideoView",W,N,V_videoView
automaticallyHandleTransportControls
TB,N,V_automaticallyHandleTransportControls
allowsScrubbing
allowsExitFromFullscreen
TB,N,V_allowsExitFromFullscreen
allowsPictureInPicture
TB,N,V_allowsPictureInPicture
allowsAudioAndSubtitles
TB,N,V_allowsAudioAndSubtitles
bottomBarHeight
videoViewController
T@"<MPVideoControllerProtocol>",W,N,VvideoViewController
navigationBarHidden
TB,N,VnavigationBarHidden
navigationBar
T@"UINavigationBar",R,&,N
T@"<MPVideoOverlayDelegate>",W,N,V_delegate
TQ,N,VdesiredParts
TQ,N,VvisibleParts
TQ,N,VdisabledParts
T@"<MPVideoControllerProtocol>",W,N
T@"<MPVideoOverlayDelegate>",W,N
DeviceCornerRadius
VideoPlayer_Speaker_Low
VideoPlayer_Speaker_Off
VideoPlayer_Speaker_Hi
VideoPlayer_Speaker_Mid
[_doneButton]-(TOP_BAR_MARGIN)-[_scrubber]-(TOP_BAR_MARGIN)-[_topBarItemsGuide]
|-(TOP_BAR_OUTER_MARGIN@999)-[_doneButton]
TOP_BAR_OUTER_MARGIN
TOP_BAR_MARGIN
_statusBar, _doneButton, _scrubber, _topBarItemsGuide
[_loadingIndicator]-(TOP_BAR_MARGIN_COMPACT)-[_loadingLabel]
_loadingIndicator, _loadingLabel
TOP_BAR_MARGIN_COMPACT
LOADING_MOVIE_LABEL
VideoPlayer_ScaleToFit
VideoPlayer_ScaleToFill
VideoPlayer_Airplay
-highlighted
-normal
-disabled
VideoPlayer_FastForward
VideoPlayer_SkipForward
VideoPlayer_Play
VideoPlayer_Pause
VideoPlayer_Rewind
VideoPlayer_SkipBackward
pictureInPictureController.pictureInPicturePossible
INLINE_BAR_MARGIN
|-(INLINE_BAR_MARGIN)-[_playPauseButton]-(INLINE_BAR_MARGIN)-[_scrubber]-(INLINE_BAR_MARGIN)-[_bottomBarItemsGuide]
_playPauseButton, _scrubber, _bottomBarItemsGuide
|-(BOTTOM_BAR_MARGIN@999)-[_volumeSlider]
TRANSPORT_BUTTON_PADDING
PLAY_PAUSE_BUTTON_WIDTH
BOTTOM_BAR_MARGIN
[_leftButton]-(TRANSPORT_BUTTON_PADDING)-[_playPauseButton(PLAY_PAUSE_BUTTON_WIDTH)]-(TRANSPORT_BUTTON_PADDING)-[_rightButton]
_bottomBarTopLayoutGuide, _bottomBarBottomLayoutGuide, _leftButton, _playPauseButton, _rightButton, _volumeSlider, _bottomBarItemsGuide
VideoPlayer_AlternateTracks
|[_topBarLayoutGuide]
V:[_statusBar][_topBarLayoutGuide]
V:|[_statusBar(STATUS_BAR_HEIGHT)]
|[_statusBar]|
|[_topBarBackdropView]|
V:|[_topBarBackdropView]
STATUS_BAR_HEIGHT
_topBarBackdropView, _statusBar, _topBarLayoutGuide, _doneButton, _scrubber, _scrubInstructions1, _scrubInstructions2, _topBarItemsGuide
DETAIL_SCRUB_INSTRUCTIONS
DONE
VideoPlayer_PictureInPicture
VideoPlayer_ExitFullscreen
|[_bottomBarBottomLayoutGuide]|
V:[_bottomBarBottomLayoutGuide(BOTTOM_BAR_HEIGHT)]
|[_bottomBarTopLayoutGuide]|
BOTTOM_BAR_HEIGHT
V:|[_bottomBarTopLayoutGuide(BOTTOM_BAR_HEIGHT)]
|[_bottomBarBackdropView]|
V:[_bottomBarBackdropView]|
_bottomBarBackdropView, _bottomBarTopLayoutGuide, _bottomBarBottomLayoutGuide
T@"NSDictionary",R,N,V_responseDictionary
usesCurrentAccountIfAvailable
TB,N,V_usesCurrentAccountIfAvailable
allFlavors
T@"MPStoreRedownloadProductItemAsset",R,N
firstAsset
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
HLSPlaylistURL
HLSKeyCertificateURL
HLSKeyServerURL
alternateHLSPlaylistURL
alternateHLSKeyServerURL
alternateHLSKeyCertificateURL
v32@?0@"NSString"8@"NSDictionary"16^B24
mp-hls-key-cert-url
mp-hls-key-server-url
mp-hls-playlist-url
is-itunes-stream
hls-playlist-url
hls-key-server-url
hls-key-cert-url
TQ,N,V_options
contexts
T@"NSMutableArray",&,N,V_contexts
nextEmittableEnumerationResults
T@"NSMutableArray",&,N,V_nextEmittableEnumerationResults
endEntry
T@"MPSectionedIdentifierListEntry",&,N,V_endEntry
sectionedIdentifierList
T@"MPSectionedIdentifierList",R,N,V_sectionedIdentifierList
branchDepth
entryType
Tq,R,N,V_entryType
<%@: %p entryType=%@>
MPSectionedIdentifierListEntryTypeUnknown
MPSectionedIdentifierListEntryTypeStart
MPSectionedIdentifierListEntryTypeHead
MPSectionedIdentifierListEntryTypeItem
MPSectionedIdentifierListEntryTypeTail
MPSectionedIdentifierListEntryTypeEnd
innerEntry not found in innerEntry.previousEntry.nextEntries
_startEntries
endEntry cannot be the same as the startingEntry
Cannot instantiate forward enumerator with MPSectionedIdentifierListEnumerationOptionReverse set
MPSectionedIdentifierListEnumerator.m
entriesToEmit
T@"NSMutableArray",&,N,V_entriesToEmit
entryToEmit not found in entryToEmit.previousEntry.nextEntries
playlistURL
keyCertificateURL
keyServerURL
alternatePlaylistURL
alternateKeyCertificateURL
alternateKeyServerURL
blockingSecureKeyLoadDuration
Td,N,V_blockingSecureKeyLoadDuration
perceivedTotalStartupTime
T@"NSNumber",C,N,V_perceivedTotalStartupTime
tracklistLoadDuration
Td,N,V_tracklistLoadDuration
TracklistLoadDuration
PerceivedTotalStartupTime
SecureKeyBlockingLoadDuration
AFAnalyticsEventTypeMusicPlaybackSummary
MPVolumeSliderVolumeControlLabelDidChangeNotification
MPVolumeSliderVolumeControlAvailabilityDidChangeNotification
MPVolumeSliderVolumeControlCapabilitiesDidChangeNotification
_isOffScreen
TB,N,S_setIsOffScreen:
trackLayoutGuide
T@"UILayoutGuide",R,N,V_trackLayoutGuide
thumbView
T@"UIView",R,W,N
volumeController
T@"MPVolumeController",&,N,V_volumeController
T@"MPAVRoute",&,N
groupRoute
T@"MPAVEndpointRoute",&,N,V_groupRoute
outputDeviceRoute
T@"MPAVOutputDeviceRoute",&,N,V_outputDeviceRoute
optimisticState
TB,N,GisInOptimisticState,V_optimisticState
optimisticValue
Tf,N,V_optimisticValue
Tq,R,N,V_style
volumeWarningTrackImage
T@"UIImage",&,N,V_volumeWarningTrackImage
volumeControlLabel
windowSceneForVolumeDisplay
T@"UIWindowScene",R,N
onScreenForVolumeDisplay
TB,R,N,GisOnScreenForVolumeDisplay
volumeAudioCategory
onScreen
TB,R,N,GisOnScreen
VolumeWarning
VideoPlayer_Slider_Groove
VideoPlayer_Slider_Track
ControlCenter_Slider_Thumb
VideoPlayer_Slider_Thumb
VideoPlayer_Slider_Thumb_Small
MPVolumeSlider.route must be an MPAVEndpointRoute
MPVolumeSlider.m
<%@: %p value: %f dataSource: %@
MPVolumeViewVisibilityChangedNotification
MPVolumeViewRouteButtonChangedNotification
MPVolumeViewRoutePickerPresentedNotification
MPVolumeViewWirelessRoutesAvailableDidChangeNotification
MPVolumeViewWirelessRouteActiveDidChangeNotification
T@"MPVolumeSlider",R,N
volumeSliderShrinksFromBothEnds
hidesRouteLabelWhenNoRouteChoice
isVisible
isShowingRouteButton
routeButtonShowsTouchWhenHighlighted
showsVolumeSlider
showsRouteButton
wirelessRoutesAvailable
TB,R,N,GareWirelessRoutesAvailable
wirelessRouteActive
TB,R,N,GisWirelessRouteActive
volumeWarningSliderImage
NO_VOLUME_AVAILABLE
MPVolumeViewShowsRouteButton
MPVolumeViewShowsVolumeSlider
only keyed archiving is supported
legacyMediaQuery
T@"MPMediaQuery",C,N,V_legacyMediaQuery
mediaLibrary
T@"MPMediaLibrary",&,N,V_mediaLibrary
allowedItemIdentifiers
T@"NSArray",C,N,V_allowedItemIdentifiers
allowedSectionIdentifiers
T@"NSArray",C,N,V_allowedSectionIdentifiers
scopedContainers
T@"NSArray",C,N,V_scopedContainers
TQ,N,V_filteringOptions
filterText
T@"NSString",C,N,V_filterText
contentRange
T{_NSRange=QQ},N,V_contentRange
wantsDetailedKeepLocalRequestableResponse
TB,N,V_wantsDetailedKeepLocalRequestableResponse
MPModelLibraryRequestLegacyMediaQuery
MPModelLibraryRequestMediaLibrary
MPModelLibraryRequestFilterText
MPModelLibraryRequestFilteringOptions
MPModelLibraryRequestContentRangeLength
MPModelLibraryRequestContentRangeLocation
MPModelLibraryRequestAllowedItemIdentifiers
MPModelLibraryRequestWantsDetailedKeepLocalRequestableResponse
 filterText="%@"
 scopedContainers=[%@]
 allowedSectionIdentifiers=[%@]
 allowedItemIdentifiers=[%@]
sectionKeepLocalStatusConfigurations
T@"NSArray",C,N,V_sectionKeepLocalStatusConfigurations
libraryAssertion
T@"MPMediaLibraryConnectionAssertion",&,N,V_libraryAssertion
Detailed keep local status only supported when request wantsDetailedKeepLocalRequestableResponse.
Detailed keep local status only supported when request is sectioned.
MPModelLibraryRequest.mm
downloadablePlaylistItemEntityQueryBlock
T@?,C,N,V_downloadablePlaylistItemEntityQueryBlock
downloadableItemsQuery
T{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}},N,V_downloadableItemsQuery
assetFlavor
T@"NSString",C,N,V_assetFlavor
assetQuality
TQ,N,V_assetQuality
didStartLeaseSession
TB,N,V_didStartLeaseSession
downloadToken
TQ,N,V_downloadToken
isHLSAsset
TB,N,V_isHLSAsset
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
TQ,N,V_protectionType
purchaseBundle
T@"NSDictionary",C,N,V_purchaseBundle
responseAssetDictionary
T@"NSDictionary",&,N,V_responseAssetDictionary
streamingKeyServerURL
T@"NSURL",C,N,V_streamingKeyServerURL
streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyCertificateURL
sourceURL
T@"NSURL",C,N,V_sourceURL
alternateSourceURL
T@"NSURL",C,N,V_alternateSourceURL
T@"NSURL",C,N,V_alternateHLSPlaylistURL
T@"NSURL",C,N,V_alternateHLSKeyServerURL
T@"NSURL",C,N,V_alternateHLSKeyCertificateURL
<%@ %p assetFlavor:'%@' assetQuality:%@ didStartLeaseSession:%@ downloadToken:%llu isHLSAsset:%@ protectionType:%@ hasPurchaseBundle:%@ hasResponseItemMetadata:%@ sourceURL:'%@'>
destinationURL
T@"NSURL",C,N,V_destinationURL
<%@ %p destinationURL:'%@' downloadToken:%llu hasPurchaseBundle:%@ sourceURL:'%@'>
writeQueue
T@"NSObject<OS_dispatch_queue>",&,N,G_writeQueue,V_writeQueue
T@"MPMediaItem",&,N
com.apple.MediaPlayer.MPMediaLibraryPlaybackItemMetadata.writeQueue
v24@?0@"MPMediaItem"8@"NSError"16
v16@?0@"MPModelFileAsset"8
plist
@"MPArtworkCatalog"16@?0@"MPModelSong"8
v16@?0@"MPModelHomeSharingAsset"8
movpkg
com.apple.MPMediaLibraryPlaybackItemMetadata
%@%@%@.%@
cloudid-%llu
adamid-%lli
persistentid-%llu
filteringPolicy
Tq,N,V_filteringPolicy
requestEndpoint
Tq,N,V_requestEndpoint
mode
Tq,N,V_mode
types
Tq,N,V_types
withSocial
TB,N,V_withSocial
withPlainEditorialNotes
TB,N,V_withPlainEditorialNotes
displayFilterKinds
Tq,N,V_displayFilterKinds
withRecentlyPlayed
TB,N,V_withRecentlyPlayed
customForYouURL
T@"NSURL",C,N,V_customForYouURL
MPModelStoreForYouDisplayFilterKind
MPModelStoreForYouRequestMode
MPModelStoreForYouRequestEndpoint
MPModelStoreForYouRequestFilteringPolicy
volumeView
T@"MPVolumeView",R,N,V_volumeView
hostingWindow
T@"UIWindow",W,N,V_hostingWindow
previousWindow
T@"UIWindow",W,N,V_previousWindow
deviceIdentifier
T@"NSString",C,N,V_deviceIdentifier
generation
T@"NSString",C,N,V_generation
positionKey
T@"MPSectionedIdentifierListEntryPositionKey",R,N,V_positionKey
sectionIdentifier
T@"NSString",R,N,V_sectionIdentifier
hostedSectionIdentifier
T@"NSString",C,N,V_hostedSectionIdentifier
nextEntries
T@"NSArray",R,N,V_nextEntries
previousEntry
T@"MPSectionedIdentifierListEntry",W,N,V_previousEntry
Tq,N,V_branchDepth
dataSourceRemoved
TB,R,N,GisDataSourceRemoved,V_dataSourceRemoved
Non-linear entries in MPSectionedIdentifierListEntryAddBranch
Non-contiguous entries in MPSectionedIdentifierListEntryAddBranch [disconnected previous]
Non-contiguous entries in MPSectionedIdentifierListEntryAddBranch [too many next]
Cannot add empty branch
MPSectionedIdentifierListEntry.m
itemIdentifier
removed
TB,R,N,GisRemoved
<%@: %p> %@
sectionHeadEntry
T@"MPSectionedIdentifierListHeadEntry",W,N,V_sectionHeadEntry
identifiersItemEntryMap
T@"NSMutableDictionary",R,N,V_identifiersItemEntryMap
tailEntry
T@"MPSectionedIdentifierListTailEntry",&,N,V_tailEntry
lastItemEntry
T@"MPSectionedIdentifierListItemEntry",&,N,V_lastItemEntry
dataSource
T@"<MPSectionedIdentifierListDataSource>",&,N,V_dataSource
shuffledHead
TB,N,GisShuffledHead,V_shuffledHead
<%@: %p> %@%@
T@"NSString",R,N,V_itemIdentifier
rootEntry
T@"MPSectionedIdentifierListItemEntry",W,N,V_rootEntry
latestUserClone
T@"MPSectionedIdentifierListItemEntry",R,N
latestDataSourceClone
hasClones
TB,R,N,V_hasClones
clonedEntries
T@"NSMutableArray",&,N,V_clonedEntries
T{?=BBBBBBBBq},R,N
dataSourceCloned
TB,R,N,GisDataSourceCloned,V_dataSourceCloned
dataSourceMoved
TB,R,N,GisDataSourceMoved,V_dataSourceMoved
userRemoved
TB,R,N,GisUserRemoved,V_userRemoved
userMoved
TB,R,N,GisUserMoved,V_userMoved
userCloned
TB,R,N,GisUserCloned,V_userCloned
<%@: %p> %@ - %@
moviePlayer
T@"MPMoviePlayerController",R,N,V_moviePlayer
command
T@"MPRemoteCommand",R,N,V_command
Td,R,N,V_timestamp
%@ (%@)
kMRMediaRemoteOptionSenderID
<%@: %p command=%@>
%@s cannot be initialized externally.
TQ,R,N,V_type
queueEndAction
Tq,R,N,V_queueEndAction
preservesQueueEndAction
TB,R,N,V_preservesQueueEndAction
T@"NSString",R,N,V_identifier
revision
T@"NSString",R,N,V_revision
kMRMediaRemoteOptionPlaybackSessionRevision
T@"NSString",R,N,V_type
playbackSessionData
T@"NSData",R,N,V_playbackSessionData
insertBeforeContextItemID
T@"NSString",R,N,V_insertBeforeContextItemID
insertAfterContextItemID
T@"NSString",R,N,V_insertAfterContextItemID
destinationOffset
Tq,R,N,V_destinationOffset
preservesRepeatMode
TB,R,N,V_preservesRepeatMode
preservesShuffleMode
TB,R,N,V_preservesShuffleMode
supportedInsertionPositions
T@"NSArray",C,N,V_supportedInsertionPositions
insertionPosition
Tq,R,N,V_insertionPosition
playbackQueue
T@"MPRemotePlaybackQueue",R,N,V_playbackQueue
privateListeningOverride
T@"NSNumber",R,N,V_privateListeningOverride
insertAfterContentItemID
T@"NSString",R,N,V_insertAfterContentItemID
stationURL
T@"NSURL",R,N,V_stationURL
requestingPlaybackInitialization
TB,R,N,GisRequestingPlaybackInitialization,V_requestingPlaybackInitialization
positionTime
Td,R,N,V_positionTime
languageOption
T@"MPNowPlayingInfoLanguageOption",R,N,V_languageOption
setting
Tq,R,N,V_setting
requestingDefermentToPlaybackQueuePosition
TB,R,N,GisRequestingDefermentToPlaybackQueuePosition,V_requestingDefermentToPlaybackQueuePosition
negative
TB,R,N,GisNegative,V_negative
rating
Tf,R,N,V_rating
playbackRate
Tf,R,N,V_playbackRate
interval
Td,R,N,V_interval
indexPathToContainerUniqueIDMap
T@"NSDictionary",&,N,V_indexPathToContainerUniqueIDMap
itemIdentifierQueryResults
T{shared_ptr<std::__1::vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > > >=^{vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > >}^{__shared_weak_count}},R,N,V_itemIdentifierQueryResults
itemQueryResults
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_itemQueryResults
T@"MPModelLibraryRequest",R,N,V_request
_allowedItemPersistentIDToItemQueryResultsIndexMap must contain an entry for every value in _allowedItemIdentifiers
MPModelLibraryDefaultSectionedCollectionDataSource.mm
faulting not implemented yet
loadAdditionalContentURL
T@"NSURL",C,N,V_loadAdditionalContentURL
previousRetrievedNestedResponse
T@"MPModelStoreBrowseResponse",&,N,V_previousRetrievedNestedResponse
domain
Tq,N,V_domain
additionalContent
Tq,N,V_additionalContent
flattenRadioList
subscriptionStatus
Tq,N,V_subscriptionStatus
previousResponse
T@"MPModelStoreBrowseResponse",&,N,V_previousResponse
MPModelStoreBrowseRequestOptions
MPModelStoreBrowseRequestAdditionalContent
MPModelStoreBrowseRequestSubscriptionStatus
MPModelStoreBrowseRequestEndpoint
MPModelStoreBrowseRequestFilteringPolicy
MPModelStoreBrowseRequestDomain
MPModelStoreBrowseRequestLoadAdditionalContentURL
hasBiography
songCount
albumCount
T@"MPModelGenre",C,D,N
editorialArtworkCatalogBlock
MPModelPropertyArtistLibraryAddedDate
MPModelPropertyArtistAlbumCount
MPModelPropertyArtistSongCount
MPModelRelationshipArtistGenre
MPModelPropertyArtistEditorialArtwork
MPModelPropertyArtistArtwork
MPModelPropertyArtistHasBiography
albumKind
T@"MPModelAlbumKind",R,C,N,V_albumKind
artists with %@
v16@?0@"MPModelArtistKind"8
Artist:a%p
MPModelPropertyPersonHasSocialPosts
MPModelChildArtistAlbums
MPAVRoutingControllerActiveSystemRouteDidChangeNotification
MPAVRoutingControllerDidPickRouteNotification
MPAVRoutingControllerRouteUserInfoKey
MPAVRoutingControllerDidUpdateVolumeControlStateNotification
legacyCachedRoute
T@"MPAVRoute",&,N,V_legacyCachedRoute
playbackDataSource
T@"<MPAVOutputDevicePlaybackDataSource>",W,N,V_playbackDataSource
presentedBundleID
T@"NSString",C,N,V_presentedBundleID
representedBundleID
T@"NSString",C,N,V_representedBundleID
representsLongFormVideoContent
TB,R,N,V_representsLongFormVideoContent
T@"<MPAVRoutingControllerDelegate>",W,N,V_delegate
T@"MPAVRoutingDataSource",R,N,V_dataSource
T@"NSString",C,N,V_name
fetchAvailableRoutesSynchronously
TB,N,V_fetchAvailableRoutesSynchronously
externalScreenType
availableRoutes
category
T@"NSString",C,N,V_category
routeTypes
Tq,N,V_routeTypes
pickedRoute
T@"MPAVRoute",R,N
pendingPickedRoutes
T@"NSSet",R,N
pendingPickedRoute
hasPendingPickedRoutes
volumeControlIsAvailable
supportsMultipleSelection
pendingRoutes
cachedPickedRoutes
cachedRoutes
<NONE>
MPAVRoutingController.m
com.apple.airplay.deviceAvailability
-[MPAVRoutingController _activeAudioRouteDidChangeNotification:]_block_invoke
v24@?0^v8^{__CFError=}16
represents NowPlaying App
does NOT represent NowPlaying App
<%@ %p dataSource=%@>
<%@ %p "%@" dataSource=%@>
T@"MPAVRoutingController",R,W,N,V_routingController
TB,R,N,V_hasPendingPickedRoutes
Route in progress was interrupted by a new selection for the same route.
Enqueued route was cancelled because a new selection for the same route was enqueued.
Selection was cancelled due to removePendingRoute.
routes
T@"NSArray",&,N,V_routes
selectionOperation
Tq,N,V_selectionOperation
completion
T@?,C,N,V_completion
<%@: %p operationName=%@ routes=%@>
remove
Route selection cancelled by MPAVRoutingController cancelInProgressSelectionForRoute:
com.apple.MediaPlayer.MPAVRoutingControllerSelection/serialQueue
systemRoute
DeviceClass
appleTV
AppleTV
ipod
iPod
ipad
iPad
iPhone
Active route must be of type MPAVEndpointRoute.
person.2.fill
odeon
speaker.wave.3.fill
homePod-pair
b520-pair
tv-stick
tv-settopbox
hearingaid.ear
carplay
beats-b372
beats-b364
beats-b419
beats-powerbeats-pro
beats-x
beats-studio
beats-solo
beats-powerbeats
speaker
genericTV
speaker.bluetooth.fill
car.fill
homePod
b520
airpods
airpods-pro
com.apple.MediaPlayer.MPAVRoutingController/sharedSerialQueue
MPModelPropertyComposerLibraryAddedDate
composers with %@
v16@?0@"MPModelComposerKind"8
Composer:a%p
payload
T@,&,N,V_payload
T@"ICUserIdentity",&,N,V_userIdentity
T@"NSDate",C,N,V_expirationDate
annotatedPayload
T@,R,N,V_annotatedPayload
[MPServerObjectDatabaseMetadataImportRequest class]
MPServerObjectDatabaseImportRequest.m
B56@?0@"NSString"8@"NSMutableDictionary"16@"NSString"24@"MPIdentifierSet"32q40^@48
superLightweight
lightweightPlus
LWHQ
lightweight
plus
attributes.assetUrls
activities
apple-curators|playlists
playlists|apple-curators
personal-recommendation
assetUrls
[MPServerObjectDatabaseAssetImportRequest class]
flavors
adamIds
T@"_MPModelShimRequestMiddleware",&,N,V_middleware
modelRequest
T@"MPModelRequest",&,N,V_modelRequest
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
v24@?0@"MPModelResponse"8@"NSError"16
Model response invalidation notification
Model response invalid before completion
modelResponse
T@"MPModelResponse",&,N,V_modelResponse
T@"NSArray",&,N,V_invalidationObservers
 modelRequest=%@
RTCReporting
kRTCReportingSessionInfoClientType
kRTCReportingSessionInfoClientVersion
kRTCReportingSessionInfoSessionID
kRTCReportingSessionInfoBatchEvent
kRTCReportingSessionInfoRequireUserInfo
kRTCReportingSessionInfoHierarchyToken
kRTCReportingUserInfoClientName
kRTCReportingUserInfoServiceName
RTCReporting.framework
PrivateFrameworks
System
T@"NSDictionary",C,N,V_additionalUserInfo
T@"NSString",C,N,V_clientName
Ti,N,V_clientType
Tq,N,V_clientVersion
T@,&,N,V_hierarchyToken
T@"NSString",C,N,V_serviceIdentifier
Tq,N,V_sessionID
_MediaLibrary_coreLibrary
T{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}},N,V__MediaLibrary_coreLibrary
T{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}},R,N
InsignificantSortPrefixes
Headers
LastCharacter
FirstCharacterAfterLanguage
NameTransform
LocalizedSectionIndices
SectionIndices
LocalizedSectionHeaders
SectionHeaders
MediaLibraryCore.framework
supplementalReason
actionAfterQueueLoad
Tq,N,V_actionAfterQueueLoad
containsRestorableContent
shouldBecomeActive
Tq,N,V_repeatType
Tq,N,V_queueEndAction
supported
TB,R,N,GisSupported
queueDescriptor
T@"MPMusicPlayerQueueDescriptor",C,N,V_queueDescriptor
T@"NSString",C,N,V_siriAssetInfo
sessionIdentifier
T@"NSString",C,N,V_sessionIdentifier
supportsAccountRectification
TB,N,V_supportsAccountRectification
 %@=%@
<%@:%p
repeat/shuffle
%@/%@
MPPlaybackContextPlayActivityRecommendationData
MPPlaybackContextPlayActivityFeatureName
MPPlaybackContextActionAfterQueueLoad
MPPlaybackContextQueueEndAction
MPPlaybackContextRepeatType
MPPlaybackContextShuffleType
supportsAutoPlay
enabledGestureTypes
Tq,N,V_enabledGestureTypes
simultaneousGestureTypes
Tq,N,V_simultaneousGestureTypes
swipeDelegate
T@"<MPSwipableViewDelegate>",W,N,V_swipeDelegate
swipeDirection
Tq,R,N,V_swipeDirection
tapCount
TQ,V_lastTapCount
MPContentTasteControllerDidChangeNotification
MPContentTasteControllerNotificationUserInfoKeyContentType
MPContentTasteControllerNotificationUserInfoKeyMediaEntity
MPContentTasteControllerNotificationUserInfoKeyPlaylistGlobalID
MPContentTasteControllerNotificationUserInfoKeyStoreAdamID
MPContentTasteControllerNotificationUserInfoKeyTasteType
MPContentTasteControllerWillSetTasteTypeNotification
invalid playlist global ID
unknown entity type
com.apple.MediaPlayer.MPContentTasteController.accessQueue
globalSerialQueue
T@"NSObject<OS_dispatch_queue>",R,N
controllers
T@"MPContentTasteController",R,N
v32@?0@"MPContentTasteController"8Q16^B24
SingletonTasteController
NoDSID
com.apple.mediaplayer.MPContentTasteController.global.serial.queue
cacheSize
Tq,N,V_cacheSize
v32@?0@"MPStoreItemMetadataCacheKey"8@"MPStoreItemMetadataCache"16^B24
com.apple.MediaPlayer.MPStoreItemMetadataRequestController
v32@?0@"NSArray"8@"<ICStorePlatformResponse>"16@"NSError"24
v24@?0@"ICStorePlatformMetadata"8^B16
Attempting to end a transaction that never began
MPStoreItemMetadataRequestController.m
com.apple.MediaPlayer/MPStoreItemMetadata.callout
com.apple.MediaPlayer.MPStoreItemMetadataRequestController.operationQueue
importToServerObjectDatabase
sharedStoreItemMetadataRequestController
T@"MPStoreItemMetadataRequestController",R,N
alignmentRectInsets
T{UIEdgeInsets=dddd},N,V_alignmentRectInsets
holdDelayInterval
Td,N,V_holdDelayInterval
holding
TB,R,N,GisHolding
hitTestDebugEnabled
TB,N,V_hitTestDebugEnabled
easyTouchDefaultHitRectInsets
T{UIEdgeInsets=dddd},R,N
easyTouchDefaultCharge
playlistPersistentID
dateCreated
isWorkoutMix
isGeniusMix
isGeniusPlaylist
geniusMixRepresentativeArtists
isVoiceMemos
isActivePlaylist
isActiveGeniusPlaylist
isActiveOnTheGoPlaylist
isUserEditable
isDeletable
isLimitedDynamicSmartPlaylist
descriptionInfo
isEditable
parentPersistentID
isPurchasesPlaylist
isCurrentDevicePurchasesPlaylist
isPlaybackHistoryPlaylist
isIgnoredSyncing
hasItems
cloudShareURL
cloudIsPublic
cloudIsVisible
cloudIsSubscribed
cloudIsCuratorPlaylist
cloudAuthorStoreID
cloudAuthorDisplayName
cloudAuthorStoreURL
cloudUserCount
cloudGlobalPlayCount
cloudGlobalLikeCount
distinguishedKind
isITunesSynced
externalVendorDisplayName
externalVendorContainerTag
externalVendorIdentifier
isExternalVendorPlaylist
cloudPlaylistUniversalLibraryID
cloudGlobalID
playlistAttributes
seedItems
authorDisplayName
subclass must implement
MPMediaPlaylist.m
Playlist was initialized with a multiverse identifier containing the wrong object type (%d)
T@"NSString",C,N,V_authorDisplayName
CFBundleExecutable
CFBundleDisplayName
musicShow
TB,D,N,GisMusicShow
episodeNumber
season
T@"MPModelTVSeason",&,D,N
show
T@"MPModelTVShow",&,D,N
episodeTypeDisplayName
MPModelPropertyTVEpisodeTitle
TV episode %@
MPModelPropertyTVEpisodeDownloadedDate
MPModelPropertyTVEpisodeArtwork
MPModelPropertyTVEpisodeKeepLocalManagedStatus
MPModelPropertyTVEpisodeKeepLocalEnableState
MPModelPropertyTVEpisodeLibraryAddEligible
MPModelPropertyTVEpisodeLastDevicePlaybackDate
MPModelPropertyTVEpisodeLibraryAddedDate
MPModelPropertyTVEpisodeLibraryAdded
MPModelPropertyTVEpisodeTypeDisplayName
MPModelPropertyTVEpisodeType
MPModelPropertyTVEpisodeReleaseDate
MPModelRelationshipTVEpisodeShow
MPModelRelationshipTVEpisodeSeason
MPModelRelationshipTVEpisodeStoreAsset
MPModelRelationshipTVEpisodePlaybackPosition
MPModelRelationshipTVEpisodeLocalFileAsset
MPModelPropertyTVEpisodeExplicitRating
MPModelPropertyTVEpisodeNumber
MPModelPropertyTVEpisodeMusicShow
MPModelPropertyTVEpisodeHasCloudSyncSource
MPModelPropertyTVEpisodeDuration
MPModelPropertyTVEpisodeDescriptionText
Apple Music episodes
episodes
v16@?0@"MPModelTVEpisodeKind"8
TVEpisode:v%lu:o%lu
multiUserDevice
TB,R,N,GisMultiUserDevice
globalPlaylistID
T@"NSString",C,N,V_globalPlaylistID
shouldLibraryAdd
TB,N,V_shouldLibraryAdd
MPPlaybackArchiveErrorDomain
preferredArtworkSize
T{CGSize=dd},N,V_preferredArtworkSize
copyOptions
TQ,N,V_copyOptions
queueControlOptions
TQ,N,V_queueControlOptions
storage
T@"NSMutableDictionary",&,N,V_storage
Tq,R,N,V_type
playbackSessionIdentifier
T@"NSString",R,C,N,V_playbackSessionIdentifier
playbackSessionType
T@"NSString",R,C,N,V_playbackSessionType
T@"NSData",R,C,N,V_playbackSessionData
displayProperties
T@"MPPlaybackArchiveDisplayProperties",R,N,V_displayProperties
bundleIdentifier
T@"NSString",R,C,N,V_bundleIdentifier
supportedOptions
TQ,R,N,V_supportedOptions
bundleID
archiveType
<%@: %p type=%ld playbackSessionIdentifier=%@ playbackSessionData=%@ playbackSessionType=%@ bundleIdentifier=%@ supportedOptions=%lu queueControlOptions=%lu displayProperties=%@ copyOptions=%lu> storage=%@
TOTAL
T@"MPMediaLibrary",&,N
itemPropertiesToFetch
T@"NSSet",C,N
collectionPropertiesToFetch
orderingProperties
T@"NSArray",C,N,G_orderingProperties,S_setOrderingProperties:
orderingDirectionMappings
T@"NSDictionary",C,N,G_orderingDirectionMappings,S_setOrderingDirectionMappings:
sortItems
useSections
entityLimit
_hasItems
_hasCollections
_countOfItems
_countOfCollections
_hasStaticEntities
itemPersistentIdentifiers
collectionPersistentIdentifiers
itemSectionInfo
T@"MPMediaQuerySectionInfo",R,N
collectionSectionInfo
excludesEntitiesWithBlankNames
includeEntitiesWithBlankNames
specifiesPlaylistItems
shouldIncludeNonLibraryEntities
willGroupEntities
ignoreSystemFilterPredicates
ignoreRestrictionsPredicates
_representativeCollection
T@"MPMediaItemCollection",R,N
_representativeCollectionGroupingType
playlistItemsQuery
TB,R,N,GisPlaylistItemsQuery
filterPredicates
T@"NSSet",&,N
items
collections
groupingType
itemSections
collectionSections
v32@?0q8@"NSDictionary"16^B24
T@,C,N
comparisonType
Cannot decode object of type %@
MPMediaQuery.m
<%@ %p> '%@' %@ %@
equal to
ends with
starts with
contains
bit test
less than or equal
less than
greater than or equal
greater than
not equal to
'%@' %@
'%@'
MPComparisonType
MPValue
MPProperty
MPMediaPredicate is an abstract class and cannot be encoded.
MPMediaPredicate is an abstract class and cannot be decoded.
MPMediaPropertyPredicate cannot filter using the %@ property.
v24@?0q8^B16
v16@?0@8
v32@?0@"MPMediaItemCollection"8Q16^B24
Cannot decode protobuf object of type %@
MPStaticEntityType
MPStaticEntities
MLIsFilteringDisabled
MPIncludeEntitiesWithBlankNames
MPIncludeNonLibraryEntities
MPIgnoreRestrictionsPredicates
MPIgnoreSystemFilterPredicates
MPEntityOrder
MPGroupingType
MPFilterPredicates
MLEntityOrderSorted
MLEntityOrder
 ordered by %@
<%@:%p %@, %@, SystemFilters=%@>
DISABLED
MPMediaGroupingTitle
MPMediaGroupingSongsByAlbumArtist
MPMediaGroupingAlbum
MPMediaGroupingAlbumByArtist
MPMediaGroupingAlbumByAlbumArtist
MPMediaGroupingAlbumByComposer
MPMediaGroupingArtist
MPMediaGroupingAlbumArtist
MPMediaGroupingComposer
MPMediaGroupingGenre
MPMediaGroupingPlaylist
MPMediaGroupingPodcastTitle
MPMediaGroupingSeriesName
MPMediaGroupingSeasonName
MPMediaGroupingAudioBookTitle
MPMediaGroupingAlbumPersistentID
MPMediaGroupingAlbumRecentlyAdded
MPMediaGroupingAlbumArtistRecentlyAdded
MPMediaGroupingAlbumArtistRecentlyPlayed
MPMediaGroupingComposerRecentlyAdded
MPMediaGroupingComposerRecentlyPlayed
MPMediaGroupingGenreRecentlyAdded
MPMediaGroupingGenreRecentlyPlayed
(unknown grouping type)
filtering_disabled
conditionPredicate
T@"MPMediaPredicate",R,C,N,V_conditionPredicate
thenPredicate
T@"MPMediaPredicate",R,C,N,V_thenPredicate
elsePredicate
T@"MPMediaPredicate",R,C,N,V_elsePredicate
T@"NSArray",R,C,N,V_predicates
<%@ %p> %@
MPPredicates
T@"NSString",R,C,N,V_property
values
T@"NSSet",R,C,N,V_values
<%@ %p property:'%@' values:%@>
containmentValues
containmentProperty
count
TQ,R,N,V_count
persistentIDs
Tr^q,R,N,V_persistentIDs
shouldContain
TB,R,N,V_shouldContain
<%@ %p> should%@ contain %lu persistent IDs
searchString
T@"NSString",C,N,V_searchString
properties
T@"NSSet",C,N,V_properties
<%@ %p> %@ matches '%@'
MPProperties
MPSearchString
T@"MPModelLibraryImportChangeRequest",C,N,V_request
com.apple.MediaPlayer.MPModelLibraryImportChangeRequestOperation.accessQueue
v24@?0@"MPMediaPlaylist"8@"NSError"16
com.apple.MediaPlayer.MPModelLibraryImportChangeRequestOperation.operationQueue
v16@?0@"MPModelCurator"8
@"MPArtworkCatalog"16@?0@"MPModelPlaylist"8
personal-mix
user-shared
external
editorial
MPMusicPlayerControllerErrorDomain
MPMusicPlayerControllerPlaybackStateDidChangeNotification
MPMusicPlayerControllerNowPlayingItemDidChangeNotification
MPMusicPlayerControllerVolumeDidChangeNotification
MPMusicPlayerControllerQueueDidChangeNotification
MPMediaPlaybackIsPreparedToPlayDidChangeNotification
MPMusicPlayerControllerItemPlaybackDidEndNotification
_MPMusicPlayerControllerArtworkDidChangeNotification
_MPMusicPlayerControllerQueueDidEndNotification
com.apple.Music.MPMusicPlayerControllerInternal
com.apple.Music.MPMusicPlayerApplicationControllerInternal
T@"NSString",R,C,N,V_clientIdentifier
connection
T@"NSXPCConnection",R,N,V_connection
serverNowPlaying
T@"MPMusicPlayerControllerNowPlaying",R,N,V_serverNowPlaying
serverTimeSnapshot
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",R,N,V_serverTimeSnapshot
serverQueueDescriptor
T@"MPMusicPlayerQueueDescriptor",R,N,V_serverQueueDescriptor
lastServerTimeSnapshot
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",R,N,V_lastServerTimeSnapshot
lastServerNowPlaying
T@"MPMusicPlayerControllerNowPlaying",R,N,V_lastServerNowPlaying
targetQueueDescriptor
T@"MPMusicPlayerQueueDescriptor",R,N,V_targetQueueDescriptor
notificationsCounter
Tq,R,N,V_notificationsCounter
T@"MPVolumeController",R,N,V_volumeController
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
playbackSpeed
isNowPlayingItemFromGeniusMix
currentChapterIndex
shuffleMode
nowPlayingItem
T@"MPMediaItem",C,N
indexOfNowPlayingItem
TB,R,N,V_isPreparedToPlay
T@"MPMediaItem",R,N,V_item
@"MPArtworkCatalog"8@?0
v16@?0@"MPMusicPlayerControllerNowPlayingTimeSnapshot"8
v24@?0@"MPMusicPlayerControllerNowPlaying"8@"NSError"16
v24@?0@"MPMusicPlayerQueueDescriptor"8@"NSError"16
[MPMusicPlayerController class]
MPMusicPlayerController.m
<%@:%p client=%@>
Must initialize a concrete instance of MPMusicPlayerController.
applicationMusicPlayer
T@"MPMusicPlayerController",R
applicationQueuePlayer
T@"MPMusicPlayerApplicationController",R
systemMusicPlayer
T@"MPMusicPlayerController<MPSystemMusicPlayerController>",R
iPodMusicPlayer
MPArtworkCatalogEffectOptionColorAnalyzerAlgorithm
MPArtworkRepresentationBackingFileURLAssociatedKey
MPArtworkCatalogErrorDomain
kind
Tq,N,V_kind
T@"UIImage",&,N,V_image
video
T@"AVAsset",&,N,V_video
representationSize
T{CGSize=dd},N,V_representationSize
representationToken
T@,&,N,V_representationToken
imageRepresentation
T@"MPArtworkRepresentation",&,N,V_imageRepresentation
videoRepresentation
T@"MPArtworkRepresentation",&,N,V_videoRepresentation
bestRepresentationKinds
TQ,N,V_bestRepresentationKinds
cacheIdentifier
T@"NSString",C,N,V_cacheIdentifier
requestingContext
T@,W,N,V_requestingContext
destination
T@,W,N,V_destination
configurationBlock
T@?,C,N,V_configurationBlock
representationKinds
TQ,N,V_representationKinds
bestAvailableRepresentationCollection
T@"MPArtworkRepresentationCollection",&,N,V_bestAvailableRepresentationCollection
loadingRepresentation
TB,GisLoadingRepresentation,V_loadingRepresentation
token
T@,R,N,V_token
T@"<MPArtworkDataSource>",R,W,N,V_dataSource
cache
T@"NSCache",R,N
videoCache
visualIdenticalityIdentifier
T@"<MPArtworkDataSourceVisualIdenticality>",R,N
renderHint
TQ,N,V_renderHint
destinationScale
Td,N,V_destinationScale
fittingSize
T{CGSize=dd},N,V_fittingSize
scaledFittingSize
hasImageOnDisk
allowsVideoConstrainedNetworkAccess
TB,N,V_allowsVideoConstrainedNetworkAccess
preferredVideoFormat
Tq,N,V_preferredVideoFormat
v24@?0@8@"MPArtworkRepresentationCollection"16
v24@?0@"MPExportableArtworkProperties"8@"NSError"16
v16@?0@?<v@?@@"NSError">8
v16@?0^{CGImage=}8
v24@?0@"MPArtworkColorAnalyzer"8@"MPArtworkColorAnalysis"16
v16@?0@"MPArtworkRepresentation"8
artworkCatalog
<%@: %p token=%@ fittingSize=%@ destinationScale=%lf destination=%@>
<%@: %p [redacted description due to non-main thread]>
imageArtworkIdentifier
T@"NSString",C,N,V_imageArtworkIdentifier
videoArtworkIdentifier
T@"NSString",C,N,V_videoArtworkIdentifier
i=%@/v=%@
T@"MPArtworkCatalog",R,N
artworkCatalogBackingFileURL
q24@?0@"NSValue"8@"NSValue"16
hasConditionalPredicate
conditionalPredicate
T@"MPPMediaPredicate",&,N,V_conditionalPredicate
hasThenPredicate
T@"MPPMediaPredicate",&,N,V_thenPredicate
hasElsePredicate
T@"MPPMediaPredicate",&,N,V_elsePredicate
T@"NSError",R,C,N,V_error
T@"ICUserIdentity",C,N
isExecuting
isFinished
[MPAsyncOperation class]
MPAsyncOperation.m
com.apple.MediaPlayer.MPAsyncOperation.accessQueue
containerItemPID
chosenByAutoFill
storeItemAdamID
storeDownloaderAccountID
storeFamilyAccountID
storeItemURL
storePlaylistAdamID
storeArtistAdamID
storeAlbumArtistAdamID
storeComposerAdamID
storeGenreAdamID
storeRentalID
isPremium
isAudible
isMusicVideo
isHD
includeInShuffle
shortDescriptionInfo
movieInfo
seasonName
showSortType
episodeSubSortOrder
isMusicShow
collectionDescription
sortTitle
sortArtist
sortAlbumTitle
sortAlbumArtist
sortComposer
verifiedIntegrity
locationFileName
hasAvailableItemArtwork
chapterArtworkTimes
albumPID
albumArtistPID
genrePID
composerPID
podcastPID
isDemoRental
rentalDuration
rentalPlaybackDuration
rentalPlaybackStartTime
rentalStartTime
rentalExpirationDate
rentalWindowEndDate
isOTAPurchased
isStreamingQuality
isTemporaryCloudDownload
podcastGUID
eqPreset
audioTrackID
audioTrackLocale
hasAlternateAudio
hasSubtitles
isPendingSync
hasProtectedAsset
hasAppleMusicDRM
needsRestore
storeCloudStatus
storeRedownloadParameters
restricted
storeBookmarkIdentifier
storeBookmarkTimestamp
storeBookmarkEntityRevision
isCloudItem
isAlarm
likedStateChanged
artistOrderSection
isLocal
isDeprotected
albumKeepLocal
artistKeepLocal
albumArtistKeepLocal
genreKeepLocal
storeDatePurchased
storeExtrasURL
storeNeedsReporting
bitRate
subscriptionStoreItemAdamID
storePlaybackEndpointType
storeAssetProtectionType
advertisementUniqueID
advertisementType
isArtistUploadedContent
cloudIsInMyLibrary
albumArtistCloudUniversalLibraryID
isExplicit
isPlayable
isMatchAudio
isNonLibraryOwnedSubscriptionContent
significantAmountHasBeenPlayed
entityRevision
remoteLocationId
isInMyLibrary
storeCloudAssetAvailable
composerOrArtist
hasHLSVideo
storeLyricsAvailable
colorCapability
hlsColorCapability
videoQuality
hlsVideoQuality
hlsPlaylistURL
audioCapability
hlsAudioCapability
availableItemArtworkToken
fetchableItemArtworkToken
fetchableItemArtworkSource
availableItemScreenshotToken
fetchableItemScreenshotToken
fetchableItemScreenshotSource
chapters
lastPlayedDate
isRental
isITunesU
skipCountSinceSync
playCountSinceSync
lastSkippedDate
dateAccessed
hasBeenPlayed
rememberBookmarkTime
dateDownloaded
effectiveStopTime
effectiveAlbumArtist
isUsableAsRepresentativeItem
TQ,R,D,N
albumTitle
playbackDuration
artwork
T@"MPMediaItemArtwork",R,N
explicitItem
TB,R,N,GisExplicitItem
comments
cloudItem
TB,R,N,GisCloudItem
protectedAsset
TB,R,N,GhasProtectedAsset
podcastTitle
podcastPersistentID
userGrouping
dateAdded
playbackStoreID
itms://?action=library-link%@
&%@=%@
podcast-url
%llu
feature-movie
book
podcast-episode
tv-episode
http://itunes.apple.com/WebObjects/MZStore.woa/wa/
viewTVSeason?id=%1$llu
viewAlbum?id=%1$llu
viewMovie?id=%2$llu
viewAudiobook?id=%2$llu
viewPodcast?id=%1$llu
invalid parameter
MPMediaItem.m
com.apple.LegacyMusic
com.apple.Music
[MPMediaItem class]
v24@?0@8^B16
MPPersistentID
[MPNondurableMediaItem class]
bounds
imageCropRect
requestHandler must be non-nil
image must be non-nil
anyMedia
iTunesU-video
podcast-video
home-video
anyVideo
iTunesU-audio
voiceMemo
audioBook
music
anyAudio
AnyMedia
MusicVideo
VideoPodcast
HomeVideo
TVShow
Movie
AnyVideo
ITunesUAudio
VoiceMemo
AudioBook
Podcast
Music
AnyAudio
identifyingModelObject
T@"MPModelObject",&,N,V_identifyingModelObject
T@"MPMediaLibraryView",C,N,V_libraryView
redownloadableItemCount
T@"NSNumber",C,N,V_redownloadableItemCount
Invalid creation options for MPModelLibraryKeepLocalStatusRequestOperation. downloadableItemsQuery or downloadablePlaylistItemEntityQueryBlock  must be specified
Library view must not be nil.
MPModelLibraryKeepLocalStatusRequestOperation.mm
MPMediaLibraryDidChangeNotification
MPMediaLibraryPathDidChangeNotification
MPMediaLibraryChangeTypes
MPMediaLibraryChangeTypePlaylists
MPMediaLibraryChangeTypeItemsKey
_MPMediaLibraryAvailableMediaLibrariesDidChangePrivateNotification
MPMediaLibraryAvailableMediaLibrariesDidChangeNotification
MPMediaLibraryDefaultMediaLibraryDidChangeNotification
MPMediaLibraryDynamicPropertiesDidChangeNotification
MPMediaLibraryInvisiblePropertiesDidChangeNotification
MPMediaLibraryDisplayValuesDidChangeNotification
MPMediaLibraryDisplayValuesWillChangeNotification
MPMediaLibrarySyncGenerationDidChangeNotification
MPMediaLibraryConnectionProgressDidChange
MPMediaLibraryStatusDidChangeNotification
MPMediaLibraryRestrictionsDidChangeNotification
MPMediaLibraryFilteringDidChangeNotification
MPMediaLibraryCloudLibraryAvailabilityDidChangeNotification
MPMediaLibraryEntitiesAddedOrRemovedNotification
MPMediaLibraryContentTasteCatalogUpdateOptionInvalidateLocalCache
libraryChangeObservers
Tq,R,N,V_libraryChangeObservers
removalReason
_MLCoreStorageLock
T{os_unfair_lock_s=I},R,N,V__MLCoreStorageLock
activeUserChangeMonitor
T@"_MPActiveUserChangeMonitor",&,N,V_activeUserChangeMonitor
_MLCoreStorage
T@,&,N,S_setMLCoreStorage:,V__MLCoreStorage
_MLCoreStorageLockPointer
T^{os_unfair_lock_s=I},R,N,V__MLCoreStorageLockPointer
ml3Library
T@"ML3MusicLibrary",R,N
T@"ICUserIdentity",R,C,N,V_userIdentity
MPMediaLibraryErrorDomain
unimplemented
One or more persistentID failed to be converted into MPMediaItem.
One or more store item metadata instances didn't have a valid storeID.
One or more store item metadata instances failed to be converted into SSLookupItems.
-[MPMediaLibrary getPlaylistWithUUID:creationMetadata:completionHandler:]
UNKNOWN_ERROR
PERMISSION_DENIED
NOT_FOUND
com.apple.mediaplayer.MPMediaLibraryRemote
com.apple.mediaplayer.MPMediaLibrary.connectionAssertions
com.apple.mediaplayer.MPMediaLibrary.additionalLibraryFilterPredicatesAccessQueue
v16@?0@"NSNotification"8
@"NSNumber"16@?0@"NSArray"8
v24@?0@"MPMediaQueryCriteria"8@?<v@?@"NSNumber">16
v16@?0Q8
v16@?0@"NSNumber"8
v32@?0@?<v@?@"NSNumber">8Q16^B24
only one of item/itemsResultSet should be set
MPMediaLibrary.m
ipod-library
%p: %@
values/properties must have the same count (%lu != %lu)
v16@?0@"MPStoreDownload"8
MLSyncPlaylistId
v32@?0@"NSString"8@"MPMediaLibrary"16^B24
CAPABILITY_MISSING
v12@?0f8
Unable to connect
Connection already in progress
MPUserDSID
MPLibraryDataProviderUID
only keyed coding is supported
 [%@]
-[MPMediaLibrary _initWithUserIdentity:]
com.apple.mediaplayer.MPMediaLibrary
-[MPMediaLibrary _initWithUserIdentity:]_block_invoke
q24@?0@"MPMediaLibrary"8@"MPMediaLibrary"16
+[MPMediaLibrary requestAuthorization:]_block_invoke
TCCAccessRequest completion was not called
validatePermissionsExpiryWithCompletion completion was not called
com.apple.itunescloudd.tcchelper
kTCCServiceMediaLibrary
com.apple.private.tcc.allow
v16@?0@"MPMediaLibrary"8
Attempting to access a method only available for tv and audio accessory device
default_media_library
com.apple.MPMediaLibrary.global.serial.queue
entity
T@"MPMediaEntity",R,N,V_entity
anchor
T@"NSString",R,C,N,V_anchor
deletionType
Tq,R,N,V_deletionType
protectedContentSupportStorageURL
_syncValidity
v48@?0q8q16@"NSString"24q32^B40
v40@?0q8@"NSString"16q24^B32
sectionKind
T@"MPModelKind",&,N,V_sectionKind
sectionProperties
T@"MPPropertySet",C,N,V_sectionProperties
sectionSortDescriptors
T@"NSArray",C,N,V_sectionSortDescriptors
T@"MPPropertySet",C,N,V_itemProperties
itemSortDescriptors
T@"NSArray",C,N,V_itemSortDescriptors
sectionClass
T#,&,N
itemClass
[MPModelRequest class]
MPModelRequest.m
MPModelRequestItemSortDescriptors
MPModelRequestSectionSortDescriptors
MPModelRequestItemProperties
MPModelRequestSectionProperties
MPModelRequestLabel
; label = %@
; itemKind=%@
; sectionProperties = %@
; sectionKind=%@
requiresNetwork
preferredQueue
T@"NSOperationQueue",R,N
com.apple.MediaPlayer.MPModelRequest.sharedNetworkQueue
com.apple.MediaPlayer.MPModelRequest.sharedQueue
MPModelPropertySectionTitle
mediaPickerController
T@"MPMediaPickerController",W,N,V_mediaPickerController
remoteViewController
T@"UIViewController",R,N,V_remoteViewController
T@"MPMediaPickerController",W,N
T@"UIViewController",R,N
v32@?0@"<NSCopying>"8@"MPMusicMediaPickerRemoteViewController"16@"NSError"24
com.apple.Music.MediaPicker
B12@?0B8
supportedContentOptions
Tq,N,V_supportedContentOptions
mediaTypes
TQ,N,V_mediaTypes
allowsPickingMultipleItems
TB,N,V_allowsPickingMultipleItems
showsCloudItems
TB,N,V_showsCloudItems
showsItemsWithProtectedAssets
TB,N,V_showsItemsWithProtectedAssets
prompt
T@"NSString",C,N,V_prompt
picksSingleCollectionEntity
TB,N,V_picksSingleCollectionEntity
watchCompatibilityVersion
TI,N,V_watchCompatibilityVersion
typeIdentifiers
T@"NSArray",C,N,V_typeIdentifiers
selectionMode
Tq,N,V_selectionMode
showsCatalogContent
showsLibraryContent
supportsUnavailableContent
pickingForExternalPlayer
TB,N,V_pickingForExternalPlayer
playbackArchiveConfiguration
T@"MPPlaybackArchiveConfiguration",&,N,V_playbackArchiveConfiguration
loader
T@"<MPMediaPickerRemoteViewLoader>",&,N,V_loader
T@"<MPMediaPickerControllerDelegate>",W,N,V_delegate
CANCEL
MEDIAPICKER_NAVIGATION_TITLE
showsLibraryContent and showsCatalogContent can't both be NO.
MPMediaPickerController.m
com.apple.Keynote
KNMPMediaPickerController
MPAVQueueCoordinatorFailedToQueueAnyItemsNotification
MPAVQueueCoordinatorWillInsertItemAfterItemNotification
T@"MPQueuePlayer",R,N,V_player
T@"<MPAVQueueCoordinatingDataSource>",R,W,N,V_dataSource
equilibriumAchievedHandler
T@?,C,N,V_equilibriumAchievedHandler
T@"MPAVItem",R,N,V_currentItem
shouldExpectEmptyQueue
TB,N,V_shouldExpectEmptyQueue
shouldDeferItemLoading
TB,N,V_shouldDeferItemLoading
T@"NSArray",R,N,V_items
@"MPAVItem"16@?0@"AVPlayerItem"8
v32@?0@"MPAVItem"8Q16^B24
[reused]
 [anchored]
MPAVQueueCoordinator
MP_associatedQueuePlayer
T@"MPQueuePlayer",W,N
%@:%@
MP_weakAssociatedQueuePlayer
@"MPQueuePlayer"8@?0
v24@?0@"MPNowPlayingContentItem"8@"MPIdentifierSet<MPMutableIdentifierSet>"16
allowsAddImage
TB,N,V_allowsAddImage
controlStatus
T{MPAddKeepLocalControlStatus=qd},N,V_controlStatus
displayStyle
Tq,N,V_displayStyle
scaleImageForAccessibility
TB,N,V_scaleImageForAccessibility
filledTintColor
T@"UIColor",&,N,V_filledTintColor
_MPAddKeepLocalControlWaitingSpinnerAnimationKey
transform.rotation.z
UniversalAddControlPaused
UniversalAddControlError
UniversalAddControlDownloadable
UniversalAddControlDownloaded
MPKeepLocalControlShouldShowDownloadedIndicator
UniversalAddControlAdd
UniversalAddControlWaiting
UniversalDownloadProgressStopButton
v16@?0@"MPModelMediaClip"8
v16@?0@"MPModelStaticAsset"8
@"MPArtworkCatalog"16@?0@"MPModelMediaClip"8
q24@?0@"MPStoreItemMovieClipAsset"8@"MPStoreItemMovieClipAsset"16
T@"MPLibraryKeepLocalStatusObserverConfiguration",&,N,V_configuration
currentStatus
T{MPLibraryActiveKeepLocalStatus=qd},R,N,V_currentStatus
downloadPausedReason
TQ,R,N,V_downloadPausedReason
statusBlock
T@?,C,N,V_statusBlock
collectionType
TB,N,GisCollectionType,V_collectionType
managedStatus
Tq,N,V_managedStatus
TB,N,V_hasNonPurgeableAsset
TB,N,GisStoreRedownloadable,V_storeRedownloadable
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
void _MSVHasherAppend32(MSVHasher * _Nonnull, uint32_t)
_MSVHasherAppend32: invalid byte count detected [byteCount & 3]: %lld
_MSVHasherAppend32: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasherAppend64: invalid byte count detected [byteCount & 3]: %lld
_MSVHasherAppend64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
MSVHasher.h
pendingItemIdentifiers
T@"NSArray",C,N,V_pendingItemIdentifiers
downloadEnabledItemCount
Tq,N,V_downloadEnabledItemCount
nonPurgeableItemCount
Tq,N,V_nonPurgeableItemCount
Tq,N,V_redownloadableItemCount
albumSortName
albumAlbumArtistPersistentID
albumAlbumArtist
albumRepresentativeItemPersistentID
albumRepresentativeItemArtworkToken
albumCloudStatus
albumAlbumYear
albumLikedState
artistSortName
artistRepresentativeItemPersistentID
artistRepresentativeItemArtworkToken
artistCloudStatus
albumArtistSortName
albumArtistRepresentativeItemPersistentID
albumArtistRepresentativeItemArtworkToken
albumArtistCloudStatus
albumArtistStoreID
composerSortName
composerRepresentativeItemPersistentID
composerRepresentativeItemArtworkToken
composerCloudStatus
composerStoreID
genreRepresentativeItemPersistentID
genreRepresentativeItemArtworkToken
genreCloudStatus
genreStoreID
artistCount
representativeItem
T@"MPMediaItem",R,N
MPMediaItemCollection.m
MPMediaItemsQuery
MPItems
MPInitializedContainedMediaTypes
MPContainedMediaTypes
MPRepresentativeItem
MPItemsCount
-init is not supported, use -initWithItems:
MPMediaItemCollectionInitException
object
T@,R,W,N,V_object
handler
T@?,R,C,N,V_handler
libraryID
Tq,V_libraryID
storeSagaID
Tq,V_storeSagaID
downloadReason
Tq,N,V_downloadReason
downloadProgress
Td,N,V_downloadProgress
TQ,N,V_downloadPausedReason
deviceLibraryID
Tq,R,N,V_deviceLibraryID
Tq,R,N,V_storeItemID
<%@ %lld %lld %f %d>
v16@?0@"MPModelArtist"8
@"MPArtworkCatalog"16@?0@"MPModelArtist"8
errorResolver
T@"MPAVErrorResolver",R,N,V_errorResolver
resolutionHandler
T@?,C,N,V_resolutionHandler
T@"<MPDetailSliderDelegate>",W,N,V_delegate
TB,N,V_allowsScrubbing
detailScrubbingVerticalRange
Td,N,V_detailScrubbingVerticalRange
availableDuration
Td,N,V_availableDuration
detailScrubbingAvailableForCurrentDuration
timeLabelStyle
Tq,N,V_timeLabelStyle
minTimeLabelWidth
Td,N,V_minTimeLabelWidth
localizedScrubSpeedText
VideoPlayer_Slider_Track_Hollow
pulseAnimation
UNKNOWN_DURATION
LIVE
FINE_SCRUBBING
QUARTER_SPEED_SCRUBBING
HALF_SPEED_SCRUBBING
HI_SPEED_SCRUBBING
opacity
scrubberglow
serviceConnection
T@"NSXPCConnection",R,N,V_serviceConnection
v24@?0@"<MPMusicPlayerControllerServer>"8@?<v@?>16
v16@?0@"NSXPCListenerEndpoint"8
com.apple.MediaPlayer.RemotePlayerService
v24@?0@"<MPMusicPlayerControllerApplicationServer>"8@?<v@?>16
T@"MPMusicPlayerApplicationController",R,W,N,V_controller
insertedDescriptors
T@"NSMutableDictionary",&,N,V_insertedDescriptors
removedItems
T@"NSMutableArray",&,N,V_removedItems
modifications
T@"MPMusicPlayerControllerApplicationQueueModifications",R,N
MPSupportsExternallyPlayableContent
context
T@"MPPlayableContentManagerContext",&,N,V_context
T@"<MPPlayableContentDataSource>",W,N,V_dataSource
T@"<MPPlayableContentDelegate>",W,N,V_delegate
nowPlayingIdentifiers
T@"NSArray",C,N,V_nowPlayingIdentifiers
CARSessionLimitUserInterfacesChangedNotification
v24@?0@"MPContentItem"8@"NSError"16
void _MPContentItemsForIdentifiersCallback(CFArrayRef, void *, void (^__strong)(CFArrayRef, CFErrorRef))_block_invoke
MPPlayableContentManager.datasource did not respond to contentItemForIdentifier: before timeout.
-contentItemForIdentifier:completionHandler: completion handler was released without being called.
MPPlayableContentManager.m
void _MPInitiatePlaybackCallback(MRMediaRemoteIndexPath, void *)_block_invoke
MPPlayableContentManager.datasource did not respond to playableContentManager:initiatePlaybackOfContentItemAtIndexPath: before timeout.
-playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler: completion handler was released without being called.
indexPath
T@"NSIndexPath",R,N,V_indexPath
serviced
TB,N,V_serviced
CFArrayRef _MPCopyChildContentItemsCallback(MRMediaRemoteIndexPath, CFRange, void *)
Hierarchy depth has exceeded the limit of %d
void _MPBeginLoadingContentCallback(MRMediaRemoteIndexPath, void *, void (^__strong)(CFErrorRef))_block_invoke
MPPlayableContentManager.datasource did not respond to beginLoadingChildItemsAtIndexPath: before timeout.
-beginLoadingChildItemsAtIndexPath:completionHandler: completion handler was released without being called.
-[MPPlayableContentManager setNowPlayingIdentifiers:] nowPlayingIdentifiers cannot be nil.
-init is invalid. Use +sharedManager.
com.apple.MediaRemote.MPPlayableContentManagerSerialQueue
StarkCapability
ttmlLyrics
T@"MPStoreLyricsRequest",C,N,V_request
lyricsId
ttml
HTTPStatusCodeKey
com.apple.MediaPlayer.MPStoreLyricsRequestOperation.operationQueue
T@"NSString",C,N,V_key
TQ,N,V_type
MPAVRoutingControllerErrorDomain
T@"<MPLazySectionedCollectionDataSource>",&,N,V_dataSource
Request for identifiers for section out of bounds: %lld
MPLazySectionedCollection.mm
Request for item identifiers out of bound in section (%lld): %lld
Index path must have two components.
Request for item out of bound in section (%lld): %lld
Request for number of items in section out of bounds: %lld
Request for section out of bounds: %lld
T@"NSURL",C,D,N
MPModelPropertyStaticAssetURL
MPModelPropertyStaticAssetMediaType
MPModelPropertyStaticAssetFlavorType
MPModelPropertyStaticAssetDuration
static asset
T@"NSNumber",C,N,V_version
oldItems
T@"MPSectionedCollection",C,N,V_oldItems
updatedItems
T@"MPSectionedCollection",C,N,V_updatedItems
isEqualBlock
T@?,C,N,V_isEqualBlock
isUpdatedBlock
T@?,C,N,V_isUpdatedBlock
yyyy-MM-dd_HH:mm:ss
Tap to Radar
Attachments
I Didn't Try
Reproducibility
Serious Bug
Classification
ComponentVersion
MediaPlayer Framework
ComponentName
318903
ComponentID
Description
Updating Routes Issue - Caught Crash
Title
tap-to-radar://new
We detected an inconsistent state in the routing view controller. This was about to crash, but we collected additional logging in the attached .crashlog file.
Please describe what you were doing before seeing this alert, and the type of environment you are in. For example:
"The crash happened while choosing my AirPods from the system route picker in my device-rich office environment."
Cancel
[Internal only] We caught a crash while updating routes. Please help us capture the logs with Tap to Radar
*** CAUGHT CRASH ***
UpdateDisplayedRoutes_%@.crashlog
UpdateDisplayedRoutesLogs
MediaServices
Logs
exception
callStackSymbols
isUpdatedItems
isEqualItems
isUpdatedSections
isEqualSections
@"NSArray"32@?0@"NSArray"8@"NSArray"16@?<B@?@"NSIndexPath"@"NSIndexPath">24
@"NSDictionary"32@?0@"MPSectionedCollection"8@"MPSectionedCollection"16@?<B@?@"NSIndexPath"@"NSIndexPath">24
oldSections
v32@?0@"MPAVRoutingViewItem"8q16^B24
routeGroup
@"NSArray"16@?0@"MPSectionedCollection"8
_MPAVRoutingViewCellIdentifier
_MPAVRoutingViewHeaderIdentifier
inCarPlay
TB,R,N,GisInCarPlay
themeDelegate
T@"<MPAVRoutingViewControllerThemeDelegate>",W,N,V_themeDelegate
_routingController
endpointRoute
T@"MPAVEndpointRoute",&,N,V_endpointRoute
_tableView
T@"UITableView",R,N
_normalCellHeight
_expandedCellHeight
continuousCornerRadius
Td,N,G_continuousCornerRadius,S_setContinuousCornerRadius:,V_continuousCornerRadius
_tableCellsBackgroundColor
T@"UIColor",&,N,S_setTableCellsBackgroundColor:
_tableCellsContentColor
T@"UIColor",&,N,S_setTableCellsContentColor:
_shouldAutomaticallyUpdateRoutesList
TB,N,S_setShouldAutomaticallyUpdateRoutesList:
_shouldPickRouteOnSelection
TB,N,S_setShouldPickRouteOnSelection:
outputDeviceVolumeSliders
T@"NSMapTable",&,N,V_outputDeviceVolumeSliders
groupSliderCoordinator
T@"MPVolumeGroupSliderCoordinator",&,N,V_groupSliderCoordinator
TQ,R,N,V_style
T@"<MPAVRoutingViewControllerDelegate>",W,N,V_delegate
avItemType
Tq,N,SsetAVItemType:,V_avItemType
allowMirroring
discoveryModeOverride
T@"NSNumber",C,N,V_discoveryModeOverride
MediaControls
routingViewItems
routeDiscoveryMode
displayedEndpointRoute
ROUTING_VIEW_HEADER_SPEAKERS_AND_TVS
ROUTING_VIEW_SHARE_AUDIO
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARKIT
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARPLAY
ROUTING_VIEW_HEADER_HEADPHONES
2zyzecwSf2ZYRpB3tuQhOQ
LOCAL DEVICES
routeGrouping
T@"NSDictionary",C,N,V_routeGrouping
localDevices
T@"NSArray",C,N,V_localDevices
headphones
T@"NSArray",C,N,V_headphones
speakersAndTVs
T@"NSArray",C,N,V_speakersAndTVs
v32@?0@"NSString"8@"NSArray"16^B24
v24@?0@"NSIndexPath"8@"NSIndexPath"16
T@"NSArray",C,N,V_pickedRoutes
T@"NSArray",C,N,V_pendingPickedRoutes
displayableAvailableRoutes
T@"NSArray",C,N,V_displayableAvailableRoutes
displayAsPickedRoutes
T@"NSArray",C,N,V_displayAsPickedRoutes
volumeCapableRoutes
T@"NSArray",C,N,V_volumeCapableRoutes
canGroup
TB,N,V_canGroup
TB,N,V_hasPendingPickedRoutes
shouldReload
TB,N,V_shouldReload
v16@?0@"MPAVRoutingViewControllerUpdate"8
q24@?0@"MPAVRoute"8@"MPAVRoute"16
com.apple.airplay.startlogging
CARSessionStatus
/System/Library/PrivateFrameworks/CarKit.framework/CarKit
mirroring switches are no longer supported in MPAVRoutingViewController
v16@?0@"UIAlertAction"8
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_SPEAKER_MESSAGE
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_TV_MESSAGE
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_SPEAKER_TITLE
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_TV_TITLE
ROUTING_SPEAKER_HIJACK_NAG_CONFIRM
ROUTING_SPEAKER_HIJACK_NAG_CANCEL
ROUTING_SPEAKER_HIJACK_INTERRUPT_LOCAL_MULTITASK_MESSAGE
ROUTING_SPEAKER_HIJACK_INTERRUPT_LOCAL_MULTITASK_TITLE
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARKIT_SAME_OWNER
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARPLAY_SAME_OWNER
com.apple.mediaplayer.airPlayPasswordAlertDidCancel
AIRTUNES_POPOVER_TITLE
v16@?0@"MPModelLyrics"8
v16@?0@"MPModelComposer"8
availabilityController
T@"RadioAvailabilityController",R,N,V_availabilityController
recentStationsController
T@"RadioRecentStationsController",R,N,V_recentStationsController
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
/System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
com.apple.MediaPlayer.MPRemoteRadioController.accessQueue
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
RadioRecentStationsControllerStationsDidChangeNotification
RadioRecentStationsController
RadioAvailabilityControllerRadioAvailableDidChangeNotification
RadioAvailabilityController
T@"MPModelObject",R,N,V_modelObject
fallbackArtworkCatalogBlock
T@?,C,N,V_fallbackArtworkCatalogBlock
flavor
previewDuration
previewURL
size
preview
cacheableItemIdentifier
mediaRemoteLyricsItemToken
T^v,R,N,V_mediaRemoteLyricsItemToken
mediaRemoteLyricsItem
T^v,R,N,V_mediaRemoteLyricsItem
T@"MPNowPlayingInfoLyricsItemToken",R,N
userProvided
mediaRemoteLyricsEvent
T^v,R,N,V_mediaRemoteLyricsEvent
startDate
endDate
followProfile
unable to find MediaPlayer bundle
NSBundle_MPAdditions.m
MPNowPlayingInfoCenter
uniqueID
T@"NSString",R,N,V_uniqueID
productName
T@"NSString",R,N,V_productName
deviceName
T@"NSString",R,N,V_deviceName
modelIdentifier
T@"NSString",R,N,V_modelIdentifier
TB,R,N,GisPlaying,V_playing
imageAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_imageAccessQueue
videoAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_videoAccessQueue
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
fallbackImageArtworkRepresentationCache
T@"NSCache",&,N,V_fallbackImageArtworkRepresentationCache
pendingRequestURLToCompletionHandlers
T@"NSMutableDictionary",&,N,V_pendingRequestURLToCompletionHandlers
catalogImageTaskMap
T@"NSMapTable",&,N,V_catalogImageTaskMap
resourceLoadingRequestVideoTaskMap
T@"NSMapTable",&,N,V_resourceLoadingRequestVideoTaskMap
imageURLSession
T@"NSURLSession",&,N,V_imageURLSession
videoURLSession
T@"NSURLSession",&,N,V_videoURLSession
URLSessionConfiguration
T@"NSURLSessionConfiguration",R,N,V_URLSessionConfiguration
usesFallbackCache
TB,N,V_usesFallbackCache
videoArtworkCacheURL
T@"NSURL",&,N,V_videoArtworkCacheURL
@"MPArtworkRepresentation"32@?0{CGSize=dd}8^q24
v16@?0@"ICRequestContext"8
@"NSCachedURLResponse"32@?0{CGSize=dd}8^q24
image/jpeg
v40@?0@"NSURLSessionDataTask"8@"NSData"16@"NSURLResponse"24@"NSError"32
MPAbstractNetworkArtworkDataSource
Failed to create URL request for catalog: %@
@32@?0{CGSize=dd}8^q24
Radiosity
[MPAbstractNetworkArtworkDataSource class]
MPAbstractNetworkArtworkDataSource.m
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.imageAccessQueue
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.videoAccessQueue
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.callbackQueue
{-1,-1}
com.apple.mediaplayer.MPArtworkDataSourceURLCache.accessQueue
T@"NSString",R,N,V_requestingBundleIdentifier
T@"NSString",R,N,V_requestingBundleVersion
startTimes
T@"NSDictionary",R,N,V_startTimes
endTimes
T@"NSDictionary",R,N,V_endTimes
[MPMusicPlayerQueueDescriptor class]
MPMusicPlayerQueueDescriptor.m
bundleVersion
MPMusicPlayerQueueDescriptorEndTimes
MPMusicPlayerQueueDescriptorStartTimes
T@"MPMediaQuery",R,C,N
itemCollection
T@"MPMediaItem",&,N,V_startItem
MPMusicPlayerMediaItemQueueDescriptorStartItem
MPMusicPlayerMediaItemQueueDescriptorItemCollection
MPMusicPlayerMediaItemQueueDescriptorQuery
assetStoreFronts
T@"NSDictionary",C,N,V_assetStoreFronts
storeIDs
T@"NSArray",C,N,V_storeIDs
startItemID
T@"NSString",C,N,V_startItemID
MPMusicPlayerStoreQueueDescriptorStoreFronts
MPMusicPlayerStoreQueueDescriptorStartItemID
MPMusicPlayerStoreQueueDescriptorStoreIDs
identifiers
T@"MPIdentifierSet",R,C,N,V_identifiers
T@"NSString",R,C,N,V_itemKind
libraryContent
TB,R,N,GisLibraryContent,V_libraryContent
itemID
T@"NSString",R,C,N,V_itemID
dictionary
T@"NSDictionary",R,C,N,V_dictionary
<%@:%p %@>
MPMusicPlayerPlayParametersIsLibraryContent
MPMusicPlayerPlayParametersItemKind
MPMusicPlayerPlayParametersIdentifiers
MPMusicPlayerPlayParametersItemID
MPMusicPlayerPlayParametersDictionary
isLibrary
playParametersQueue
T@"NSArray",C,N,V_playParametersQueue
startItemPlayParameters
T@"MPMusicPlayerPlayParameters",&,N,V_startItemPlayParameters
<%@:%p queue=%@ startItem=%@>
MPMusicPlayerPlayParametersQueueDescriptorStartItemPlayParameters
MPMusicPlayerPlayParametersQueueDescriptorPlayParameters
T@"MPRadioStation",R,N,V_radioStation
<%@:%p radioStation=%@>
playbackArchive
T@"MPPlaybackArchive",R,C,N,V_playbackArchive
T@"NSArray",C,N,V_keyPath
relatedProperties
T@"NSDictionary",C,N,V_relatedProperties
itemEntityQueryResults
T{shared_ptr<std::__1::map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > > >=^{map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > >}^{__shared_weak_count}},R,N,V_itemEntityQueryResults
sectionEntityQueryResult
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_sectionEntityQueryResult
_allowedSectionPersistentIDToSectionQueryResultsIndexMap must contain an entry for every value in _allowedSectionIdentifiers
MPModelLibraryModelSectionedCollectionDataSource.mm
T@"<MPAVErrorResolverDelegate>",W,N,V_delegate
previewArtworkCatalogBlock
staticAssets
T@"NSArray",C,D,N
MPModelPropertyMediaClipTitle
mediaClip %@
MPModelRelationshipMediaClipStaticAssets
MPModelPropertyMediaClipPreviewArtwork
media clip
Share Audio
mainRoute
T@"NSArray",R,N,V_routes
leader
T@"MPAVRoute",R,N,V_leader
T@"NSString",R,C,N,V_localizedTitle
T@"NSString",R,C,N,V_localizedSubtitle
enabled
TB,R,N,V_enabled
T@"UIImage",R,N,V_image
actionIdentifier
T@"NSString",R,C,N,V_actionIdentifier
ROUTING_GROUP_SUBTITLE_COUNT
unwrappedValue
T^v,R,N
Disabled
Presence Scan
Detailed Scan
cachedPropertyValues
T@"MPConcreteMediaEntityPropertiesCache",R,&,N
v24@?0@"NSString"8^B16
v24@?0@8@"NSString"16
@"UIImage"24@?0{CGSize=dd}8
MPLibrary
 %llu
com.apple.MediaPlayer.MPConcreteMediaItem.utilitySerialQueue
-init is not supported, use -initWithPersistentID:library:
MPConcreteMediaItemInitException
@"MPMediaItem"16@?0@"MPConcreteMediaEntityPropertiesCache"8
group
MPQuery
No persistent ID property could be found for media object of type %d
MPMediaLibraryDataProvider.m
@"MPMediaItemCollection"16@?0@"MPConcreteMediaEntityPropertiesCache"8
NOT_SUPPORTED
SKCloudServiceController
/System/Library/Frameworks/StoreKit.framework/StoreKit
com.apple.MediaPlayer.MPConcreteMediaPlaylist.accessQueue
sectionInfo
T@"MPMediaQuerySectionInfo",R,C,D,N
resultSet
T@"<MPMediaLibraryResultSet>",R,N,V_resultSet
Wrong class %@
com.apple.mediaplayer.ResultSetEntities
v40@?0Q8@"NSString"16Q24^B32
dataProvider
T@"<MPMediaLibraryDataProvider>",R,W,N,V_dataProvider
dataProviderEntityClass
T#,R,N,V_dataProviderEntityClass
Tq,R,N,V_identifier
Property can't be nil
com.apple.mediaplayer.EntityProperty
ml3td_artwork_data
ml3td_radio_station_id
ml3td_advertisement_unique_id
ml3td_advertisement_type
T@"ML3MusicLibrary",&,N,V_library
T@"MPMediaLibrary",W,N,V_mediaLibrary
databasePath
playbackHistoryPlaylistPersistentID
isGeniusEnabled
preferredAudioLanguages
preferredSubtitleLanguages
completeMyCollectionArtworkDataSource
T@"<MPArtworkDataSource>",R,N
localizedSectionIndexTitles
entityCache
T@"MPMediaEntityCache",R,N,V_entityCache
artworkDataSource
T@"<MPArtworkDataSource>",R,N,V_artworkDataSource
requiresAuthentication
propertiesToCache
syncValidity
onDiskProviders
T@"NSArray",C,N
T@"MPMediaEntityCache",R,N
isSourceExternal
localizedReason
localizedRating
ratingProvider
v20@?0@"MPMediaChapter"8I16
@"UIImage"8@?0
v28@?0q8i16@?<v@?@"MPMediaChapter"I>20
SEASON_DISPLAY_FORMAT_%@
TestVideo
TestAudio
Media-SimTestFiles
/Library/
Media
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4018.200.29.1/MediaPlayer/Core/MusicLibrary Support/_ios_tvos_watchos/MPMediaLibraryDataProviderML3.m
iapd
continuous
UIBackgroundModes
v48@?0q8q16i24i28q32^B40
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"UIImage"8
B16@?0@"ML3DatabaseConnection"8
v40@?0q8r^@16Q24^B32
No ML3Property for MPProperty: %@
MPMediaLibraryDataProviderML3.m
v16@?0@"ML3DatabaseConnection"8
v24@?0@"ICStorePlatformResponse"8@"NSError"16
item not found
items not found
v28@?0B8@"NSError"12@"NSData"20
NanoMusic
v32@?0q8Q16^B24
SELECT revision FROM entity_revision WHERE class = 1 ORDER BY revision DESC LIMIT 1;
device
com.apple.MPMediaLibraryDataProviderML3.backgroundTask
com.apple.MPMediaLibraryDataProviderML3.cloudUpdateQueue
com.apple.MPMediaLibraryDataProviderML3.entitiesAddedOrRemovedNotificationQueue
NSUInteger MPITScaledVolumeNormalization(float)
MPITScaledVolumeNormalization is Unimplemented
v40@?0{_NSRange=QQ}8Q24^B32
MPAVRouteConnectionErrorDomain
_MPAVRouteConnectionDidInvalidateNotification
_MPAVRouteConnectionDidConnectNotification
_MPAVRouteConnectionDidAttemptConnectionNotification
MPAVRouteConnectionCorrelationIDUserInfoKey
MPAVRouteConnectionReasonUserInfoKey
MPAVRouteConnectionVolumeDidChangeNotification
MPAVRouteConnectionVolumeUserInfoKey
MPAVRouteConnectionEndpointIdentifierUserInfoKey
MPAVRouteConnectionOutputDeviceIdentifierUserInfoKey
externalDevice
T^v,R,N,V_externalDevice
connected
TB,R,N,GisConnected
connecting
TB,R,N,GisConnecting
invalidated
TB,R,N,GisInvalidated
v20@?0I8^{__CFArray=}12
MPAVRouteConnectionCustomData
MPAVRouteConnection
deprecated
<%@: %p valid: %@, connected: %@>
com.apple.MediaPlayerFramework.MPAVRouteConnection.accessQueue
com.apple.MediaPlayerFramework.MPAVRouteConnection.calloutQueue
MPAVRouteConnection.m
staticResponse
T@"MPModelStaticResponse",&,N,V_staticResponse
albumAppData
T@"MPMediaLibraryAlbumAppData",&,N,V_albumAppData
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPOD
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPAD
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPHONE
AIRPLAY_MIRRORING_TITLE
responseSinfDictionary
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
@24@?0:8@"MPMediaPredicate"16
@"NSMutableArray"16@?0:8
playbackItemMetadata
T@"MPMediaPlaybackItemMetadata",&,N,V_playbackItemMetadata
preferredAssetQuality
TQ,N,V_preferredAssetQuality
prefersHLS
TB,N,V_prefersHLS
shouldStartLeaseSession
TB,N,V_shouldStartLeaseSession
shouldUseAccountLessStreaming
TB,N,V_shouldUseAccountLessStreaming
shouldUseStreamingRedownload
TB,N,V_shouldUseStreamingRedownload
assetSourceStoreFrontID
T@"NSString",C,N,V_assetSourceStoreFrontID
equivalencySourceAdamID
Tq,N,V_equivalencySourceAdamID
Tq,R,N,V_endpointType
Tq,R,N,V_storeAdamID
downloadSessionAlternativeConfigurationOptionsBlock
T@?,C,N,V_downloadSessionAlternativeConfigurationOptionsBlock
T@"MPMediaLibrary",R,N
multiverseIdentifier
T@"MIPMultiverseIdentifier",R,N,V_multiverseIdentifier
MPMediaEntity.m
sectionIndexTitles
sections
T@"NSArray",R,C,N,V_sections
hasUnknownSection
TB,N,V_hasUnknownSection
MPSectionIndexTitles
MPSections
MPStorePlayWhileDownloadControllerDidFinishPlayWhileDownloadSessionNotification
MPStorePlayWhileDownloadControllerUserInfoKeyPlayWhileDownloadSession
MPStorePlayWhileDownloadControllerErrorDomain
downloadHandlerIdentifier
v16@?0@"MPStorePlayWhileDownloadProperties"8
SSDownloadPropertyIsHLS
SSDownloadAssetPropertyURL
SSDownloadAssetPropertyDownloadToken
SSDownloadAssetPropertyLocalPath
SSDownloadAssetTypeMedia
SSDownloadPropertyCanPause
v24@?0@"MPStorePlayWhileDownloadProperties"8@"NSError"16
SSAVAssetDownloadTokenDownloadComplete
v24@?0@"MPStorePlayWhileDownloadSession"8@"NSError"16
PLAY_WHILE_DOWNLOAD_STATUS
SSDownloadAssetPropertyType
com.apple.MediaPlayer.MPStorePlayWhileDownloadController.accessQueue
SSDownloadHandler
T@"NSString",C,N,V_volumeAudioCategory
T@"<MPVolumeControllerDataSourceDelegate>",W,N,V_delegate
applicationShouldOverrideHardwareVolumeBehavior
T@"NSString",R,C,N,V_volumeControlLabel
volumeControlAvailable
TB,R,N,GisVolumeControlAvailable,V_volumeControlAvailable
Tf,N,V_volume
TB,N,GisMuted,V_muted
volumeWarningEnabled
TB,R,N,V_volumeWarningEnabled
volumeWarningState
Tq,R,N,V_volumeWarningState
EUVolumeLimit
Tf,R,N,V_EUVolumeLimit
T@"<MPVolumeControllerDataSourceDelegate>",W,N
TB,R,N,GisVolumeControlAvailable
TB,N,GisMuted
MPDebugEUVolumeLimit
RegionalBehaviorEUVolumeLimit
CannotExceedEUVolumeLimit
v20@?0I8^{__CFError=}12
v20@?0f8^{__CFError=}12
com.apple.MediaPlayer.SystemVolumeDataSource.reloadQueue
MediaPlayback
<%@: %p %@>
not available
T@"<MPVolumeControllerDelegate>",W,N,V_delegate
volumeCapabilities
TI,R,N,V_volumeCapabilities
volumeValue
T@"<MPVolumeControllerDataSource>",&,N,V_dataSource
MPVolumeController.m
Aborted
Active
Enforce
Overridden
T@"MPAVRoute",&,N,V_groupRoute
T@"MPAVRoute",&,N,V_outputDeviceRoute
<%@: %p %@ volume control %@>
Endpoint: %@
Endpoint: %@ OutputDevice: %@
Output device route must be an output device.
Group route must be an endpoint route.
T@,&,N,V_value
valueLoader
T@?,C,N,V_valueLoader
chapterType
Tq,N,V_chapterType
playbackTime
Td,N,V_playbackTime
Td,N,V_playbackDuration
indexInChaptersWithSameType
TQ,N,V_indexInChaptersWithSameType
indexInChaptersWithAnyType
TQ,N,V_indexInChaptersWithAnyType
artworkRequest
T@"MPMediaLibraryArtworkRequest",&,N,V_artworkRequest
T@"MPMediaLibraryArtworkDataSource",W,N,V_artworkDataSource
MPPlaybackTime
MPPlaybackDuration
MPChapterType
MPIndexInChaptersOfSameType
MPIndexInChaptersOfAnyType
MPChapterIndex
<%@: %p> chapter %lu, time = range = [%.2f, %.2f], %@ = %@
urlDescription
unpersonalizedContentDescriptors
T@"MPSectionedCollection",&,N,V_unpersonalizedContentDescriptors
itemIndexPathToOverridePropertySet
T@"NSDictionary",C,N,V_itemIndexPathToOverridePropertySet
translatingContext
T@"MPMediaLibraryEntityTranslationContext",&,N,V_translatingContext
relativeModelClassToMappingResponse
T@"NSMapTable",C,N,V_relativeModelClassToMappingResponse
sectionToLibraryAddedOverride
T@"NSMutableDictionary",&,N,V_sectionToLibraryAddedOverride
com.apple.MediaPlayer.MPStoreLbraryPersonalizationCollectionDataSource.accessSerialQueue
v16@?0@"MPModelAlbum"8
chapterIndex
TQ,N,V_chapterIndex
T@"NSArray",&,N,V_chapters
TB,N,V_hasArtworkAtPlaybackTime
mirroringOnly
TB,N,V_mirroringOnly
Mirroring is no longer supported by MPAudioVideoRoutingPopoverController
MPAudioVideoRoutingPopoverController.m
com.apple.mediaplayer.airPlayPasswordAlertWillAppear
MPMediaPlaybackItemMetadataDidChangeNotification
MPMediaPlaybackItemMetadataLikedStateDidChangeNotification
MPMediaPlaybackItemMetadataNetworkConstraintsDidChangeNotification
prefersStoreContentInfo
TB,R,N,V_prefersStoreContentInfo
rentalIdentifier
T@"NSNumber",R,N,G_rentalIdentifier,V_rentalIdentifier
hlsOfflinePlaybackKeys
T@"NSDictionary",R,N,V_hlsOfflinePlaybackKeys
offlineHLS
TB,R,N,GisOfflineHLS,V_offlineHLS
hlsPlaylistURLString
T@"NSString",R,C,N,V_hlsPlaylistURLString
allowsCellularNetworking
allowsInitiatingPlayWhileDownload
TB,R,N,V_allowsInitiatingPlayWhileDownload
albumArtistName
T@"NSString",R,C,N,V_albumArtistName
albumStoreAdamID
Tq,R,N,V_albumStoreAdamID
T@"NSString",R,C,N,V_albumTitle
allowsAssetCaching
T@"NSString",R,C,N,V_artistName
artistStoreAdamID
Tq,R,N,V_artistStoreAdamID
T@"NSString",R,N,V_buyParameters
T@"NSString",R,C,N,V_composerName
contentTitle
T@"NSString",R,C,N,V_contentTitle
contentType
TQ,R,N,V_contentType
downloadIdentifier
Tq,R,N,V_downloadIdentifier
expectedDuration
Td,R,N,V_expectedDuration
genreTitle
T@"NSString",R,C,N,V_genreTitle
additionalHTTPHeaderFields
isExplicitTrack
TB,R,N,V_isExplicitTrack
localNetworkContentURL
T@"NSURL",R,C,N,V_localNetworkContentURL
T@"MPMediaItem",R,N,V_mediaItem
mediaLibraryPersistentID
Tq,R,N,V_mediaLibraryPersistentID
T@"NSURL",R,C,N,V_protectedContentSupportStorageURL
requiresPlayWhileDownload
TB,R,N,V_requiresPlayWhileDownload
TB,R,N,V_showComposer
shouldReportPlayEventsToStore
TB,R,N,V_shouldReportPlayEventsToStore
Td,R,N,V_bookmarkTime
shouldRememberBookmarkTime
TB,R,N,V_shouldRememberBookmarkTime
storeUbiquitousIdentifier
T@"NSString",R,C,N,V_storeUbiquitousIdentifier
TQ,R,N,V_storeAccountID
TQ,R,N,V_storeSagaID
subscriptionRequired
TB,R,N,GisSubscriptionRequired,V_subscriptionRequired
Tf,R,N,V_volumeNormalization
iTunesStoreContentID
T@"NSNumber",R,C,N,V_iTunesStoreContentID
iTunesStoreContentType
iTunesStoreContentDownloadParameters
iTunesStoreContentDSID
T@"NSNumber",R,C,N,V_iTunesStoreContentDSID
iTunesStoreContentPurchasedMediaKind
iTunesStoreContentUserAgent
match
purchaseHistory
musicvideo
uploadedaudio
uploadedvideo
tvshow
User-Agent
com.apple.MediaPlayer.MPMediaPlaybackItemMetadata.accessQueue
salableAdamId
uploaded-audio
uploaded-video
high
none
unknown
T@"NSString",R,C,N,V_keyPath
T@"MPModelLibrarySearchRequest",C,N,V_request
v32@?0{shared_ptr<mlcore::LocalizedSearchQueryResult>=^{LocalizedSearchQueryResult}^{__shared_weak_count}}8@"NSError"24
v32@?0@"MPModelLibrarySearchScope"8Q16^B24
com.apple.MediaPlayer.MPModelLibrarySearchRequestOperation.accessSerialQueue
MPModelClass
T#,R,N,V_MPModelClass
[%@] Property mapping missing for %@ : %@
MPBaseEntityTranslator.m
[%@] Relationship mapping missing for %@ : %@
No identifiers for model class: %@ from source: %@
_identifiers
[%@] Attempting to unsupport a relationship with an existing mapping: %@
[%@] Attempting to unsupport a property with an existing mapping: %@
[%@] Attempting to unsupport identifiers for %@
[%@] Attempting to set a source preprocessor for %@, but one is already set.
<%@:%p modelClass=%@>
[%@] Already an existing translator for %@
[MPBaseEntityTranslator class]
relatedMPModelClass
T#,R,N,V_relatedMPModelClass
T#,R,N
[%@] Attempting to replace existing identifiers translator for %@
[%@] Attempting to replace existing property translator for %@ : %@
[%@] Attempting to map an already unsupported property for %@ : %@
[%@] Attempting to replace existing relationship translator for %@ : %@
[%@] Attempting to map an already unsupported relationship for %@ : %@
AirPlayPortExtendedInfo
MPAVRouteDidChangeNotification
MPAVRouteUserInfoRouteKey
routeType
Tq,R,N,V_routeType
routeSubtype
Tq,R,N,V_routeSubtype
T@"NSString",R,N,V_uid
T^v,R,N,G_externalDevice,V_externalDevice
isSplitRoute
numberOfOutputDevices
routeName
picked
TB,N,GisPicked
routingToWirelessDevice
TB,R,N,GisRoutingToWirelessDevice
avRouteDescription
wirelessDisplayRoute
displayRouteType
originalRouteSubtype
Tq,R,N,V_originalRouteSubtype
T@"MPAVRouteConnection",R,N,V_connection
designatedGroupLeaderName
routeNames
T@"NSString",R,N,V_routeUID
productIdentifier
T@"NSString",R,N,V_productIdentifier
groupUID
T@"NSString",R,N,V_groupUID
pickableRouteType
Tq,R,N,V_pickableRouteType
clusterComposition
T@"NSArray",R,N,V_clusterComposition
canAccessRemoteAssets
TB,R,N,V_canAccessRemoteAssets
canPlayEncryptedProgressiveDownloadAssets
TB,R,N,V_canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
TB,R,N,V_canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
TB,R,N,V_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
isDeviceRoute
proxyGroupPlayer
TB,R,N,GisProxyGroupPlayer
supportsGrouping
supportsAirPlayGrouping
supportsRemoteControl
splitRoute
TB,R,N,GisSplitRoute
splitterCapable
TB,R,N,GisSplitterCapable
batteryLevel
T@"MPAVBatteryLevel",R,N,V_batteryLevel
auxiliaryDevices
T@"NSArray",R,N,V_auxiliaryDevices
playingPairedDeviceName
T@"NSString",R,N,V_playingPairedDeviceName
pickedOnPairedDevice
TB,R,N,GisPickedOnPairedDevice,V_pickedOnPairedDevice
playingOnPairedDevice
TB,R,N,GisPlayingOnPairedDevice,V_playingOnPairedDevice
airPlayingToDevice
TB,R,N,GisAirPlayingToDevice
groupLeaderAirplayIdentifier
requiresPassword
TB,R,N,V_requiresPassword
supportsWirelessDisplay
passwordType
displayAsPicked
TB,R,N,GisDisplayedAsPicked
airpodsRoute
TB,R,N,GisAirpodsRoute
appleTVRoute
TB,R,N,GisAppleTVRoute
beatsSoloRoute
TB,R,N,GisBeatsSoloRoute
beatsStudioRoute
TB,R,N,GisBeatsStudioRoute
beatsXRoute
TB,R,N,GisBeatsXRoute
carplayRoute
TB,R,N,GisCarplayRoute,V_carplayRoute
deviceSpeakerRoute
TB,R,N,GisDeviceSpeakerRoute
hearingDeviceRoute
TB,R,N,GisHearingDeviceRoute
homePodRoute
TB,R,N,GisHomePodRoute,V_homePodRoute
powerbeatsRoute
TB,R,N,GisPowerbeatsRoute
smartAudio
TB,R,N,GisSmartAudio
w1Route
TB,R,N,GisW1Route
airPlayRoute
TB,R,N,GisAirPlayRoute
w2Route
TB,R,N,GisW2Route
h1Route
TB,R,N,GisH1Route
shareableRoute
TB,R,N,GisShareableRoute
headphonesRoute
TB,R,N,GisHeadphonesRoute
stereoPair
TB,R,N,GisStereoPair
tvRoute
TB,R,N,GisTVRoute
tvStickRoute
TB,R,N,GisTVStickRoute
setTopBoxRoute
TB,R,N,GisSetTopBoxRoute
b444Route
TB,R,N,GisB444Route
b298Route
TB,R,N,GisB298Route
b419Route
TB,R,N,GisB419Route
b364Route
TB,R,N,GisB364Route
b372Route
TB,R,N,GisB372Route
b520Route
TB,R,N,GisB520Route,V_b520Route
homeTheaterRoute
TB,R,N,GisHomeTheaterRoute,V_homeTheaterRoute
lowLatencyRoute
TB,R,N,GisLowLatencyRoute
clusterRoute
TB,R,N,GisClusterRoute,V_clusterRoute
<%@: %p name=%@ uid=%@>
| Mirroring Route: %@
<%@: %p, "%@", picked=%@ uid=%@>
B24@?0@"MPAVOutputDeviceDescription"8@"NSDictionary"16
76,8205
76,8204
76,8203
76,8208
76,8206
76,8207
76,8194
-tlea
76,8197
76,8201
76,8198
76,8195
isUnavailableInAppleMusic
contentId
storePlatformData
recommendations
B32@?0@"NSURLQueryItem"8Q16^B24
trackBadging
isSocialEnabled
isIcloudLibraryEnabled
isInternalInstall
true
apple-internal-install
MPStoreDownloadExpectationControllerErrorDomain
searchBlock
timeout
com.apple.MediaPlayer.MPStoreDownloadExpectationController.accessQueue
libraryAddedStatus
Tq,N,V_libraryAddedStatus
centerImage
T@"UIImage",&,N,V_centerImage
outerRingColor
T@"UIColor",&,N,V_outerRingColor
progress
Td,N,V_progress
strokeEnd
round
containingPlaylist
T@"MPMediaPlaylist",R,N
collectionByJoiningCollections
DEFAULT_GENIUS_PLAYLIST_NAME
com.apple.MediaPlayer.MPModelStoreBrowseRequestOperation.sectionsToNestedResponseAccessQueue
v32@?0@"MPModelStoreBrowseContentItem"8q16^B24
v24@?0@"MPModelStoreBrowseResponse"8@"NSError"16
com.apple.MediaPlayer.MPModelStoreBrowseRequestOperation.nestedRequestsOperationQueue
_MPMKT_transformedType
_composers
_lyrics
_storeAsset
_playbackPosition
transformedType
T@"NSString",R,N,V_transformedType
transformedPayload
relationships
T@"NSMutableDictionary",R,N,V_relationships
T@"NSString",C,N,V_identifier
attributes
T@"NSMutableDictionary",R,N,V_attributes
meta
T@"NSMutableDictionary",R,N,V_meta
MPMediaKitEntityTranslator.m
T@"NSString",C,N,V_personID
relationshipPayloadProvider
T@"<MPMediaKitEntityRelationshipPayloadProvider>",&,N,V_relationshipPayloadProvider
mediaKitType
T@"NSString",C,N,V_mediaKitType
payloadTransformBlock
T@?,R,N,V_payloadTransformBlock
-[MPMediaKitEntityTranslator mapRelationshipKey:toModelClass:mediaKitType:]
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"MPMediaKitEntityPayloadTransformer"24
Can only call %s on generic object translators.
Use +createGenericObjectTranslator instead.
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"MPIdentifierSet<MPMutableIdentifierSet>"24
clips
tagline
movieInfoDictionary
T@"NSDictionary",C,D,N
MPModelPropertyMovieTitle
MPModelPropertyMovieDownloadedDate
MPModelPropertyMovieKeepLocalManagedStatus
MPModelPropertyMovieKeepLocalEnableState
MPModelPropertyMovieLibraryAddEligible
MPModelPropertyMovieLastDevicePlaybackDate
MPModelPropertyMovieLibraryAddedDate
MPModelPropertyMovieLibraryAdded
MPModelPropertyMovieHasCloudSyncSource
MPModelPropertyMovieDuration
MPModelPropertyMovieEditorialArtwork
MPModelPropertyMovieArtwork
MPModelRelationshipMovieStoreAsset
MPModelRelationshipMoviePlaybackPosition
MPModelRelationshipMovieLocalFileAsset
MPModelPropertyMovieReleaseDate
MPModelRelationshipMovieClips
MPModelPropertyMovieInfoDictionary
MPModelPropertyMovieTagline
MPModelPropertyMovieExplicitRating
MPModelPropertyMovieDescriptionText
rentals
Apple Music movies
movies
v16@?0@"MPModelMovieKind"8
Movie:v%lu:o%lu
TB,D,N,GisBeats1
TB,D,N,GisLive
hasExplicitContent
stationEvents
stationGlyphBlock
allowsItemLiking
subtype
attributionLabel
providerName
TB,D,N,GisSubscriptionRequired
providerUniversalLink
providerBundleIdentifier
startingAirDate
endingAirDate
currentStationEvent
T@"MPRadioStationEvent",R,N
upcomingStationEvent
providerID
Tq,R,D,N
MPModelPropertyRadioStationName
radio station %@
MPModelPropertyRadioStationEndingAirDate
MPModelPropertyRadioStationStartingAirDate
MPModelPropertyRadioStationProviderID
MPModelPropertyRadioStationProviderBundleIdentifier
MPModelPropertyRadioStationProviderUniversalLink
MPModelPropertyRadioStationSubscriptionRequired
MPModelPropertyRadioStationProviderName
MPModelPropertyRadioStationAttributionLabel
MPModelPropertyRadioStationSubtype
MPModelPropertyRadioStationType
MPModelPropertyRadioStationAllowsItemLiking
MPModelPropertyRadioStationGlyph
MPModelPropertyRadioStationArtwork
MPModelPropertyRadioStationEvents
MPModelPropertyRadioStationHasExplicitContent
MPModelPropertyRadioStationShortEditorNotes
MPModelPropertyRadioStationEditorNotes
MPModelPropertyRadioStationLive
MPModelPropertyRadioStationBeats1
radio station
Unknown
SongSeeded
ArtistSeeded
Siri
Streaming
Format
Editorial
GracenoteGenre
User
PlaylistSeeded
AlbumSeeded
Episode
Broadcast
MPModelPropertyTVShowCreatorArtwork
MPPlaceholderArtwork-Podcast
MPPlaceholderArtwork-Audiobook
MPPlaceholderArtwork-Videos
MPPlaceholderArtwork-Music
sectionBackgroundViews
T@"NSMutableDictionary",&,N,V_sectionBackgroundViews
headerBackgroundView
T@"UIView",&,N,V_headerBackgroundView
footerBackgroundView
T@"UIView",&,N,V_footerBackgroundView
v32@?0@"NSNumber"8@"UIView"16^B24
v32@?0@"NSIndexPath"8Q16^B24
T@"MPModelPlaylistEntriesShareEligibilityRequest",C,N,V_request
%@://%@/%@.%@?%@=%lli
T@"MPModelLibraryAddToPlaylistChangeRequest",C,N,V_request
com.apple.MediaPlayer.MPModelLibraryAddToPlaylistChangeRequestOperation.operationQueue
v16@?0@"MPModelPlaybackPosition"8
supportsSubscription
author
T@"MPModelPodcastAuthor",&,D,N
MPModelPropertyPodcastTitle
podcast %@
MPModelPropertyPodcastArtwork
MPModelRelationshipPodcastAuthor
MPModelPropertyPodcastSupportsSubscription
MPModelPropertyPodcastShareURL
MPModelPropertyPodcastFeedURL
episodeKind
T@"MPModelPodcastEpisodeKind",R,N,V_episodeKind
podcasts containing %@
v16@?0@"MPModelPodcastKind"8
Podcast:e%p
MPErrorDomain
activeDataSource
T@"<MPVolumeControllerDataSource>",&,N,V_activeDataSource
VOL-
VOL+
T@"MPVolumeHardwareButtonController",R,N
model
T@"MPModelObject",R,N,V_model
TB,N,V_hasBeenPlayed
maxHEICRequestPercentage
Td,N,V_maxHEICRequestPercentage
maxHEICRequestPercentage's value must fall in range [0, 1.0]
MPStoreArtworkDataSource.m
buster
sharedStoreArtworkDataSource
T@"MPStoreArtworkDataSource",R,N
range
T{_NSRange=QQ},N,V_range
sectionIndexTitleIndex
TQ,N,V_sectionIndexTitleIndex
MPSectionIndex
MPRangeLength
MPRangeLocation
MPTitle
 title=%@, range=%@, sectionIndexTitleIndex=%lu
MPMediaQuerySection is a read-only object
seed
T@"NSData",C,N,V_seed
bytes
failed to generate secure random bytes
lowestValue
Tq,R,N,V_lowestValue
highestValue
Tq,R,N,V_highestValue
numberOfPossibleOutcomes
TQ,R,N,V_numberOfPossibleOutcomes
upper bound provided is less than lowestInclusive
upper
highestInclusive
lowestInclusive
highest
lowest
source
T{CGSize=dd},N,V_scaledFittingSize
usesExactFittingSizeAsDestinationSize
TB,N,V_usesExactFittingSizeAsDestinationSize
resizedImage
T@"UIImage",R,N,V_resizedImage
T@"NSError",R,N,V_error
T@"NSURL",R,N,V_destinationURL
operationGroup
T@"NSObject<OS_dispatch_group>",R,N,V_operationGroup
MPArtworkResizeErrorDomain
Failed to resize nil image.
Failed to resize image with invalid scaled fitting size: {%f, %f}.
Input image has invalid scale: %f.
Input image has invalid size: {%f, %f}.
backgroundColor
T@"UIColor",&,D,N
backgroundColorLight
TB,D,N,GisBackgroundColorLight
primaryTextColor
primaryTextColorLight
TB,D,N,GisPrimaryTextColorLight
secondaryTextColor
secondaryTextColorLight
TB,D,N,GisSecondaryTextColorLight
T@"UIColor",R,N,V_backgroundColor
TB,R,N,GisBackgroundColorLight,V_backgroundColorLight
T@"UIColor",R,N,V_primaryTextColor
TB,R,N,GisPrimaryTextColorLight,V_primaryTextColorLight
T@"UIColor",R,N,V_secondaryTextColor
TB,R,N,GisSecondaryTextColorLight,V_secondaryTextColorLight
<%@: %p> (
  backgroundColor: %@ (%@)
  primaryTextColor: %@ (%@)
  secondaryTextColor: %@ (%@)
Dark
Light
masterVolumeSlider
T@"MPVolumeSlider",R,N,V_masterVolumeSlider
individualVolumeSliders
synced
TB,R,N,V_synced
We don't have a master or individual slider.
MPVolumeGroupSliderCoordinator.m
WHAOptimisticStateVolumeDisabled
%@ %@ %@ %@ %@
- %@
%@ %@ %@ %@ %@
UNKNOWN
 (%ld)
%@%@%@%@%@%@
B16@?0@"<MPExclusiveAccessToken>"8
debugDescription is counting on itemResult being an instance of %@
MPSectionedIdentifierList+Debugging.m
MPModelStoreBrowseContentItemPropertyItemType
MPModelStoreBrowseContentItemPropertyDetailedItemType
MPModelStoreBrowseContentItemPropertyArtistUploadedContentType
MPModelStoreBrowseContentItemRelationshipAlbum
MPModelStoreBrowseContentItemRelationshipArtist
MPModelStoreBrowseContentItemRelationshipCurator
MPModelStoreBrowseContentItemRelationshipMediaClip
MPModelStoreBrowseContentItemRelationshipMovie
MPModelStoreBrowseContentItemRelationshipPlaylist
MPModelStoreBrowseContentItemRelationshipRadioStation
MPModelStoreBrowseContentItemRelationshipSocialPerson
MPModelStoreBrowseContentItemRelationshipSong
MPModelStoreBrowseContentItemRelationshipTVEpisode
MPModelStoreBrowseContentItemRelationshipTVSeason
MPModelStoreBrowseContentItemRelationshipTVShow
MPModelStoreBrowseContentItemRelationshipTVShowCreator
itemType
TQ,D,N
curator
T@"MPModelCurator",&,D,N
mediaClip
T@"MPModelMediaClip",&,D,N
movie
T@"MPModelMovie",&,D,N
socialPerson
T@"MPModelSocialPerson",&,D,N
T@"MPModelSong",&,D,N
T@"MPModelTVEpisode",&,D,N
showCreator
T@"MPModelTVShowCreator",&,D,N
detailedItemType
v16@?0@"MPModelStoreBrowseContentItem"8
@24@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16
attributes.videoKind
attributes.playParams.reporting
attributes.artwork
attributes.isVerified
attributes.isPrivate
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"NSMutableDictionary"24
videoKind
attributes.releaseDate
attributes.contentRatingsBySystem
durationInMilliseconds
attributes.offers
attributes.offers.0.durationInMilliseconds
attributes.description.short
attributes.description.standard
attributes.previews
attributes.episodeNumber
attributes.editorialNotes.tagline
attributes.editorialNotes.standard
attributes.episodeCount
attributes.editorialArtwork.subscriptionCover
attributes.editorialNotes.short
attributes.handle
attributes.editorialNotes.name
attributes.requiresSubscription
attributes.airTime.end
attributes.airTime.start
Shoutcast
attributes.streamingRadioSubType
attributes.stationGlyph
attributes.stationProviderName
attributes.isLive
attributes.url
attributes.isChart
attributes.playlistType
attributes.lastModifiedDate
attributes.artistName
relationships.artists.data.id.@firstObject
attributes.isPreorder
attributes.isCompilation
attributes.contentRating
clean
attributes.discCount
attributes.trackCount
attributes.hasTimedSyncedLyrics
attributes.hasLyrics
attributes.albumName
relationships.albums.data.id.@firstObject
attributes.movementNumber
attributes.movementCount
attributes.movementName
attributes.workName
attributes.copyright
attributes.showComposer
attributes.trackNumber
attributes.discNumber
attributes.durationInMillis
attributes.name
attributes.offers.kind
attributes.playParams
meta.formerIds
roomID
T@"NSString",C,N,V_roomID
T@"MPModelMovie",&,N,V_movie
T@"<MPVideoControllerProtocol>",W,N,V_videoViewController
v16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelTVSeason"8
v16@?0@"MPModelTVShow"8
@"MPArtworkCatalog"16@?0@"MPModelTVEpisode"8
systemFiltersPerLibrary
Given library has no library identifier
MPMediaLibrarySystemFilters.mm
com.apple.%@.global.serial.queue
hasSearchString
T@"NSString",&,N,V_searchString
T@"NSMutableArray",&,N,V_properties
v44@?0q8q16i24q28^B36
B8@?0
com.apple.mediaplayer.systemdataprovider
GENIUS_FEATURE_NOT_AVAILABLE_SUBTITLE
GENIUS_FEATURE_NOT_AVAILABLE_TITLE
GENIUS_PICKER_NO_RESULTS_MESSAGE
GENIUS_PICKER_NO_RESULTS_TITLE
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_WIFI
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_WLAN
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_CELLULAR
GENIUS_PLAYLIST_OFFLINE_TITLE
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_ALL
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_ALL_WLAN
shouldUsePlaylistEntry
TB,N,V_shouldUsePlaylistEntry
sourceKeyPaths
T@"NSArray",R,N,V_sourceKeyPaths
valueTransformFunction
T^?,R,N,V_valueTransformFunction
streamProtocol
streamURL
leftPercentage
T@"NSNumber",R,N,V_leftPercentage
rightPercentage
T@"NSNumber",R,N,V_rightPercentage
singlePercentage
T@"NSNumber",R,N,V_singlePercentage
casePercentage
T@"NSNumber",R,N,V_casePercentage
 none
 single=%@
 case=%@
 right=%@
 left=%@
NSNumber *MPAVGetBatteryLevelFromAVODDS(MRAVOutputDeviceRef, NSDictionary *__strong, MPAVBatteryLevelType)
battery level value is not a number
MPAVBatteryLevel.m
NSString *MPAVGetRouteDescriptionKey(MPAVBatteryLevelType)
NSNumber *MPAVGetBatteryLevelFromRouteDescription(NSDictionary *__strong, MPAVBatteryLevelType)
unable to find route description key for battery level
BTDetails_BatteryLevelSingle
BTDetails_BatteryLevelCase
BTDetails_BatteryLevelRight
BTDetails_BatteryLevelLeft
T@"MPStoreLibraryPersonalizationRequest",C,N,V_request
T@"MPMediaLibraryView",N,V_libraryView
T{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}},N,V_persistentIDs
v32@?0@8q16^B24
B16@?0@8
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequestOperation.operationQueue
MPPlaybackUserDefaultsAllowsHighQualityMusicStreamingOnCellularDidChangeNotification
MPPlaybackUserDefaultsMusicEQPresetDidChangeNotification
MPPlaybackUserDefaultsMusicRepeatTypeDidChangeNotification
MPPlaybackUserDefaultsMusicShuffleTypeDidChangeNotification
MPPlaybackUserDefaultsPrivateListeningEnabledDidChangeNotification
MPPlaybackUserDefaultsSoundCheckEnabledDidChangeNotification
allowsHighQualityMusicStreamingOnCellular
musicEQPreset
Ti,R,N,V_musicEQPreset
musicRepeatType
musicShuffleType
soundCheckEnabled
speakerRouteEnabled
includeContentItemDebugFields
preferredVideosAssetQualityOnCellular
preferredVideosAssetQualityOnWifi
privateListeningEnabled
T@"NSNumber",C,N,GisPrivateListeningEnabled
devicePrivateListeningEnabled
T@"NSNumber",C,N,GisDevicePrivateListeningEnabled,V_devicePrivateListeningEnabled
v16@?0@"ICMutableUserIdentityProperties"8
com.apple.mediaplaybackcore
MPCPlaybackPrivateListeningEnabled
MusicSoundCheckEnabledSetting
com.apple.mobileipod-prefsChanged
Albums
Songs
MusicShuffleSetting
MusicRepeatSetting
MusicEQPresetName
com.apple.mobileipod.playbackPreferencesChanged-
ACAccountStore
/System/Library/Frameworks/Accounts.framework/Accounts
%@.%@.lastSiriPlaybackContextID
BestQuality
com.apple.videos-preferences
PlaybackQuality
PlaybackQualityCellular
MPShuffleType-Unknown
MPRepeatType-Unknown
com.apple.MediaPlayer.MPPlaybackUserDefaults.accessQueue
com.apple.MediaPlayer.MPPlaybackUserDefaults.calloutQueue
com.apple.MediaPlayer.MPPlaybackUserDefaults.userDefaultsMutationQueue
com.apple.MediaPlayer.MPPlaybackUserDefaults.loadValuesQueue
v16@?0@"MPPlaybackUserDefaults"8
IncludeContentItemDebugFields
SpeakerRouteEnabled
MusicAllowsHighQualityStreamingOnCellular
com.apple.song
com.apple.radio-station
com.apple.audiobook
com.apple.podcast
com.apple.audio-podcast
com.apple.video-podcast
com.apple.show
com.apple.music-video
public-audio
public-movie
public.audiovisual-content
mainContext
sharedInstance
T@"MPVolumeHUDController",R,N
v16@?0@"<MPMusicPlayerControllerServer>"8
music://show-now-playing
v16@?0@"<MPMusicPlayerControllerSystemServer>"8
dialogDictionary
fileAssetInfoList
hlsAssetInfo
T@"MPStoreHLSAssetInfo",&,D,N
liveRadioStream
TB,D,N,GisLiveRadioStream
radioStreamAssetInfoList
suzeLeaseID
T@,&,D,N
onlineSubscriptionKeysRequired
T@"NSDictionary",R,C,N,V_dialogDictionary
T@"NSDate",R,C,N,V_expirationDate
T@"NSArray",R,C,N,V_fileAssetInfoList
T@"MPStoreHLSAssetInfo",R,N,V_hlsAssetInfo
TB,R,N,GisLiveRadioStream,V_liveRadioStream
T@"NSArray",R,C,N,V_radioStreamAssetInfoList
T@,R,N,V_suzeLeaseID
TB,R,N,V_onlineSubscriptionKeysRequired
MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification
MPCloudServiceStatusControllerFairPlaySubscriptionStatusDidChangeNotification
MPCloudServiceStatusControllerMatchStatusDidChangeNotification
MPCloudServiceStatusControllerPurchaseHistoryEnabledDidChangeNotification
MPCloudServiceStatusControllerShouldPlaybackRequireSubscriptionLeaseDidChangeNotification
MPCloudServiceStatusControllerSubscriptionAvailabilityDidChangeNotification
MPCloudServiceStatusControllerSubscriptionLeaseDidBeginNotification
MPCloudServiceStatusControllerSubscriptionLeaseDidEndeNotification
MPCloudServiceStatusControllerSubscriptionStatusDidChangeNotification
MPCloudServiceStatusControllerUserInfoKeyLeaseEndReasonType
serialQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
lastKnownFairPlaySubscriptionStatus
T@"SSVFairPlaySubscriptionStatus",R,N
lastKnownSubscriptionFairPlayKeyStatus
T@"ICMusicSubscriptionFairPlayKeyStatus",R,N,V_lastKnownSubscriptionFairPlayKeyStatus
matchStatus
hasLoadedSubscriptionAvailability
subscriptionAvailable
TB,R,N,GisSubscriptionAvailable
T@"SSVSubscriptionStatus",R,C,N,V_subscriptionStatus
musicSubscriptionStatus
T@"ICMusicSubscriptionStatus",R,C,N
shouldPlaybackRequireSubscriptionLease
cloudLibraryEnabled
TB,R,N,GisCloudLibraryEnabled
purchaseHistoryEnabled
TB,R,N,GisPurchaseHistoryEnabled
_MPCloudServiceStatusControllerSubscriptionAvailability
v28@?0@"NSError"8B16B20B24
_MPCloudServiceStatusControllerMatchStatus
v16@?0@"MPCloudServiceStatusController"8
com.apple.MediaPlayer.MPCloudServiceStatusController.accessQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.calloutQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.cloudLibraryStatusAccessQueue
v24@?0@"ICMusicSubscriptionStatusMonitor"8@"ICMusicSubscriptionStatus"16
T@"MPCloudServiceStatusController",R,N
com.apple.mediaplayer.MPCloudServiceStatusController.global.serial.queue
T@"NSMutableArray",&,N,V_filterPredicates
hasGroupingType
Ti,N,V_groupingType
hasFilteringDisabled
filteringDisabled
TB,N,V_filteringDisabled
hasEntityOrder
entityOrder
Ti,N,V_entityOrder
staticEntityIdentifiers
T@"NSMutableArray",&,N,V_staticEntityIdentifiers
hasStaticEntityType
staticEntityType
Ti,N,V_staticEntityType
hasIncludeNonLibraryEntities
includeNonLibraryEntities
TB,N,V_includeNonLibraryEntities
Item
Collection
Physical
Sorted
Album
Artist
AlbumArtist
Composer
Genre
Playlist
PodcastTitle
SeriesName
SeasonName
AudioBookTitle
AlbumPersistentID
AlbumByArtist
(unknown: %i)
Exclusive access not for this owner %@ != %@
MPExclusiveAccessToken.m
Exclusive access failed
v16@?0@"MPModelStoreAsset"8
ISO8601TimeZoneOffsetFromUTC
%@%@
%@%@%@
:%02d
%02d
sourceItemIdentifiers
T@"MPIdentifierSet",&,N,V_sourceItemIdentifiers
fileAsset
T@"MPModelFileAsset",&,N,V_fileAsset
com.apple.MediaPlayer.MPModelVerifyLocalFileAssetIntegrityRequest.operationQueue
T@"NSSet",C,N,V_filterPredicates
T@"NSSet",C,N,V_itemPropertiesToFetch
T@"NSSet",C,N,V_collectionPropertiesToFetch
Tq,N,V_groupingType
TQ,N,V_entityLimit
TQ,N,V_entityOrder
T@"NSArray",C,N,V_orderingProperties
TB,N,V_ignoreSystemFilterPredicates
TB,N,V_ignoreRestrictionsPredicates
TB,N,V_includeEntitiesWithBlankNames
T@"NSDictionary",C,N,V_orderingDirectionMappings
filter predicates must be an NSSet
 with sort direction=%@
<%@: %p> %@, %@
action
Tq,R,N,V_action
actionType
followRequests
followRequest
approveAll
approve
cancel
decline
importElements
T@"NSArray",R,N,V_importElements
v32@?0@"NSDictionary"8Q16^B24
we should have a complete set of metadata here.
MPStoreItemImportTrackData.m
assetLoadError
T@"NSError",C,N,V_assetLoadError
assetLoadDuration
Td,N,V_assetLoadDuration
blockingSecureKeyLoadCount
Tq,N,V_blockingSecureKeyLoadCount
maximumSecureKeyLoadDuration
Td,N,V_maximumSecureKeyLoadDuration
secureKeyLoadCount
Tq,N,V_secureKeyLoadCount
secureKeyError
T@"NSError",C,N,V_secureKeyError
tracklistLoadError
T@"NSError",C,N,V_tracklistLoadError
hadBlockingTracklistLoad
TB,N,V_hadBlockingTracklistLoad
playbackEndError
T@"NSError",C,N,V_playbackEndError
endReasonType
Tq,N,V_endReasonType
startupState
Tq,N,V_startupState
interfaceTypeChangeCount
Tq,N,V_interfaceTypeChangeCount
startInterfaceType
Tq,N,V_startInterfaceType
SiriSessionIdentifier
NetworkInterfaceStart
NetworkInterfaceChangeCount
StartupState
EndReason
PlaybackEndError
TracklistLoadError
TracklistLoadRequired
SecureKeyError
SecureKeyMaxLoadDuration
SecureKeyLoadCount
SecureKeyBlockingLoadCount
AssetLoadError
AssetLoadDuration
MPModelForYouRecommendationItemPropertyItemType
MPModelForYouRecommendationItemPropertyURL
MPModelForYouRecommendationItemRelationshipAlbum
MPModelForYouRecommendationItemRelationshipPlaylist
MPModelForYouRecommendationItemRelationshipRadioStation
MPModelForYouRecommendationItemPropertyBackedByStoreItemMetadata
MPModelForYouRecommendationItemPropertyParentGroup
MPModelForYouRecommendationItemPropertySubgroupIndex
MPModelForYouRecommendationItemRelationshipSubgroup
parentGroup
T@"MPModelForYouRecommendationGroup",W,D,N
subgroupIndex
backedByStoreItemMetadata
TB,D,N,GisBackedByStoreItemMetadata
subgroup
T@"MPModelForYouRecommendationGroup",R,N
com.apple.amp.mediaplayer
Default
Default_Oversize
Artwork
Assistant
Assistant_Oversize
Download
Download_Oversize
HomeSharing
InternalSettings
Library
Library_Oversize
Middleware
Middleware_Oversize
Playback
Playback_Oversize
RemoteControl
RemoteControl_Oversize
Routing
ServerObjects
SDKLibrary
SDKLibrary_Oversize
SDKPlayback
SDKPlayback_Oversize
Volume
Volume_Oversize
CloudController
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
libraryAddStatusObserverConfiguration
T{MPLibraryAddStatusObserverConfiguration=BBBBB},R,N
T@"NSString",R,C,N,V_clientName
Ti,R,N,V_clientType
Tq,R,N,V_clientVersion
T@"MPAVController",R,W,N,V_player
T@?,C,N,V_handler
app.%@.unknown
QueueSource
QueueUniqueID
MediaAVType
AUDIO
VIDEO
AssetType
FILE
UNDETERMINED
rtcReportingPlayQueueSourceIdentifier
rtcReportingSessionAdditionalUserInfo
rtcReportingServiceIdentifier
rtcReportingAssetType
MPRTCReportingControllerErrorDomain
T@"MPModelLibraryPlaylistEditChangeRequest",C,N,V_request
localPersistenceResponseHandler
T@?,C,N,V_localPersistenceResponseHandler
completeResponseHandler
T@?,C,N,V_completeResponseHandler
com.apple.MediaPlayer.MPModelLibraryPlaylistEditChangeRequestOperation.accessQueue
MPModelLibraryPlaylistEditChangeRequestOperationErrorDomain
v24@?0Q8@"NSError"16
v224@?0{PropertyCache=^^?{unordered_map<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data, std::__1::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::__1::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::__1::allocator<std::__1::pair<mlcore::ModelProperty<mediaplatform::Data> *const, mediaplatform::Data> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__1::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *, std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__1::hash<mlcore::ModelProperty<mediaplatform::Data> *>, true>, std::__1::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *, std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__1::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *, std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__1::hash<mlcore::ModelProperty<mediaplatform::Data> *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *, std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__1::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, true> >=f}}}{unordered_map<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char>, std::__1::hash<mlcore::ModelProperty<std::__1::basic_string<char> > *>, std::__1::equal_to<mlcore::ModelProperty<std::__1::basic_string<char> > *>, std::__1::allocator<std::__1::pair<mlcore::ModelProperty<std::__1::basic_string<char> > *const, std::__1::basic_string<char> > > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, std::__1::__unordered_map_hasher<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, std::__1::hash<mlcore::ModelProperty<std::__1::basic_string<char> > *>, true>, std::__1::__unordered_map_equal<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, std::__1::equal_to<mlcore::ModelProperty<std::__1::basic_string<char> > *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, std::__1::hash<mlcore::ModelProperty<std::__1::basic_string<char> > *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, std::__1::equal_to<mlcore::ModelProperty<std::__1::basic_string<char> > *>, true> >=f}}}{unordered_map<mlcore::ModelProperty<double> *, double, std::__1::hash<mlcore::ModelProperty<double> *>, std::__1::equal_to<mlcore::ModelProperty<double> *>, std::__1::allocator<std::__1::pair<mlcore::ModelProperty<double> *const, double> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__1::__unordered_map_hasher<mlcore::ModelProperty<double> *, std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__1::hash<mlcore::ModelProperty<double> *>, true>, std::__1::__unordered_map_equal<mlcore::ModelProperty<double> *, std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__1::equal_to<mlcore::ModelProperty<double> *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelProperty<double> *, std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__1::hash<mlcore::ModelProperty<double> *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelProperty<double> *, std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__1::equal_to<mlcore::ModelProperty<double> *>, true> >=f}}}{unordered_map<mlcore::ModelProperty<int> *, int, std::__1::hash<mlcore::ModelProperty<int> *>, std::__1::equal_to<mlcore::ModelProperty<int> *>, std::__1::allocator<std::__1::pair<mlcore::ModelProperty<int> *const, int> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__1::__unordered_map_hasher<mlcore::ModelProperty<int> *, std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__1::hash<mlcore::ModelProperty<int> *>, true>, std::__1::__unordered_map_equal<mlcore::ModelProperty<int> *, std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__1::equal_to<mlcore::ModelProperty<int> *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelProperty<int> *, std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__1::hash<mlcore::ModelProperty<int> *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelProperty<int> *, std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__1::equal_to<mlcore::ModelProperty<int> *>, true> >=f}}}{unordered_map<mlcore::ModelProperty<long long> *, long long, std::__1::hash<mlcore::ModelProperty<long long> *>, std::__1::equal_to<mlcore::ModelProperty<long long> *>, std::__1::allocator<std::__1::pair<mlcore::ModelProperty<long long> *const, long long> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__1::__unordered_map_hasher<mlcore::ModelProperty<long long> *, std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__1::hash<mlcore::ModelProperty<long long> *>, true>, std::__1::__unordered_map_equal<mlcore::ModelProperty<long long> *, std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__1::equal_to<mlcore::ModelProperty<long long> *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelProperty<long long> *, std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__1::hash<mlcore::ModelProperty<long long> *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelProperty<long long> *, std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__1::equal_to<mlcore::ModelProperty<long long> *>, true> >=f}}}^^?}8
protocol
T@"Protocol",&,N,V_protocol
objects
T@"NSHashTable",&,N,V_objects
MPModelLibraryTransientStateControllerDidChangeNotification
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
v32@?0@"_MPModelLibraryRegisteredTransientState"8Q16^B24
addState
Tq,N,V_addState
keepLocalState
Tq,N,V_keepLocalState
modelObjects
T@"MPSectionedCollection",C,N,V_modelObjects
relatedModelObjects
T@"MPSectionedCollection",C,N,V_relatedModelObjects
T@"NSUUID",C,N,V_token
com.apple.MediaPlayer.MPModelLibraryTransientStateController.accessQueue
com.apple.MediaPlayer.MPModelLibraryTransientStateController.notificationQueue
com.apple.MediaPlayer.MPModelLibraryTransientStateController.operationQueue
playerPath
T@"MRPlayerPath",R,N,V_playerPath
supportsArtworkCatalogLoading
playbackQueueDelegate
T@"<MPNowPlayingPlaybackQueueDelegate>",W,N,V_playbackQueueDelegate
playerID
T@"NSString",R,N,V_playerID
representedApplicationBundleIdentifier
T@"NSString",C,N,V_representedApplicationBundleIdentifier
playbackQueueDataSource
T@"<MPNowPlayingPlaybackQueueDataSource>",W,N
nowPlayingContentItem
T@"MPNowPlayingContentItem",&,N
lyricsDelegate
T@"<MPNowPlayingInfoLyricsDelegate>",W,N
dataSourceQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dataSourceQueue
nowPlayingInfo
_MPNowPlayingContentItemsDidChangeNotification
v32@?0^v8^v16@?<v@?^{__CFError=}>24
v24@?0@"MPNowPlayingInfoLyricsItem"8@"NSError"16
v48@?0@"MPNowPlayingContentItem"8@"NSData"16{CGSize=dd}24@"NSError"40
^v24@?0q8^v16
^v16@?0^{__CFString=}8
^v16@?0^v8
v24@?0^v8@?<v@?^v^{__CFError=}>16
v24@?0@"MPNowPlayingInfoTransportableSessionResponse"8@"NSError"16
v32@?0^v8^{__CFError=}16@?<v@?^{__CFError=}>24
v24@?0^v8@?<v@?^{__CFError=}>16
v16@?0^^v8
v32@?0@"NSString"8@"MPNowPlayingContentItem"16^B24
v24@?0@"NSArray"8q16
_MPNowPlayingInfoCenterPlaybackQueueDidChangeNotification
IPQI: Mismatch in contentItemIdentifiers (%ld) and loadedContentItemsRange (%ld)
MPNowPlayingInfoCenter.m
v24@?0@"NSData"8@"NSError"16
sessionType
T@"NSString",R,N,V_sessionType
T@"NSData",R,N,V_data
transportablePlaybackSession
<missing queue identifier>
preferredSessionType
T@"NSString",R,N,V_preferredSessionType
MPNowPlayingPlaybackQueueDataSource getTransportablePlaybackSessionRepresentationWithCompletion completion was released without being called.
CIIR: Mismatch in contentItemIdentifiers=%ld, loadedContentItemsRange=%ld, previousContentItemIDCount=%ld, dataSourceContentItemIDs=%ld, replacementRange: [(_loaded) %@ : (loaded) %@] => (replacement) %@
MediaRemote
-init is not supported, use +defaultCenter
com.apple.MediaPlayer.MPNowPlayingInfoCenter/accessQueue
com.apple.MediaPlayer.MPNowPlayingInfoCenter/calloutQueue
com.apple.MediaPlayer.MPNowPlayingInfoCenter/utilityQueue
@"NSDictionary"16@?0^{os_state_hints_s=I*II}8
queuedNowPlayingInfo
mutatedPlaybackQueueRequests
mutatedContentItems
cachedContentItems
requestedRange
loadedRange
contentItemIDs
_playerID
Cannot have two MPNowPlayingInfoCenters for the same playerID: %@
serviceQueue
com.apple.MediaPlayer.MPNowPlayingInfoCenter/serviceQueue
_MPNowPlayingCollectionInfoKeyTitle
_MPNowPlayingCollectionInfoKeyIdentifiers
_MPNowPlayingCollectionInfoKeyCollectionType
_MPNowPlayingCollectionInfoCollectionTypePlaylist
_MPNowPlayingCollectionInfoCollectionTypeAlbum
_MPNowPlayingCollectionInfoCollectionTypeRadio
classesForSecureCoding
v24@?0^{objc_property=}8^B16
__%@_KEY
v32@?0^{objc_property=}8:16:24
v@:@
v@:B
v@:c
v@:i
v@:s
v@:l
v@:q
v@:C
v@:I
v@:S
v@:L
v@:Q
v@:f
v@:d
originalIdentifierSet
T@"MPIdentifierSet",R,N
humanDescription
_copy
_init
_copyTrace
_initTrace
Attempt to set enforced property after initialization: %@ %@
MPModelObject.m
Attempt to retrieve enforced uninitialized property: %@ %@
MPModelObject mergeWithObject: called with a different object class: %@ %@
oids
original
classesForSecureCoding cannot contain NSObject
<%@: %p identifiers=%@ properties=%@>
modelClass
T#,R,N,V_modelClass
identityKind
T@"MPModelKind",R,N
<%@: %@>
Must have produced a model kind!
v16@?0@"MPModelKind"8
[MPModelKind class]
artworkIdentifier
T@"NSString",C,N,V_artworkIdentifier
T@"MPMediaItemArtwork",&,N,V_artwork
artworkData
T@"NSData",&,N,V_artworkData
_MPNowPlayingInfoPropertyArtworkData
_MPNowPlayingInfoPropertyArtworkMIMEType
MPNowPlayingInfoPropertyChapterCount
MPNowPlayingInfoPropertyAvailableLanguageOptions
MPNowPlayingInfoPropertyCurrentLanguageOption
MPNowPlayingInfoCollectionIdentifier
_MPNowPlayingInfoPropertyCollectionInfo
MPNowPlayingInfoPropertyChapterNumber
MPNowPlayingInfoPropertyElapsedPlaybackTime
_MPNowPlayingInfoPropertyIsSharable
_MPNowPlayingInfoPropertyIsAdvertisement
MPNowPlayingInfoPropertyIsLiveStream
_MPNowPlayingInfoPropertyIsBanned
_MPNowPlayingInfoPropertyIsInWishList
_MPNowPlayingInfoPropertyIsLiked
_MPNowPlayingInfoPropertyIsMusicApp
_MPNowPlayingInfoPropertyIsVideosApp
MPNowPlayingInfoPropertyPlaybackQueueCount
MPNowPlayingInfoPropertyPlaybackQueueIndex
MPNowPlayingInfoPropertyPlaybackRate
MPNowPlayingInfoPropertyDefaultPlaybackRate
_MPNowPlayingInfoPropertyDefaultPlaybackRate
_MPNowPlayingInfoPropertyAppMetrics
_MPNowPlayingInfoPropertyIsSteerable
_MPNowPlayingInfoPropertyProhibitsSkip
_MPNowPlayingInfoPropertyRadioStationIdentifier
_MPNowPlayingInfoPropertyRadioStationHash
_MPNowPlayingInfoPropertyRadioStationName
_MPNowPlayingInfoPropertyRadioStationStringIdentifier
_MPNowPlayingInfoPropertyiTunesStoreIdentifier
_MPNowPlayingInfoPropertyiTunesStoreSubscriptionAdamIdentifier
_MPNowPlayingInfoPropertyArtistiTunesStoreAdamIdentifier
_MPNowPlayingInfoPropertyAlbumiTunesStoreAdamIdentifier
_MPNowPlayingInfoPropertyPlaylistGlobalIdentifier
_MPNowPlayingInfoPropertyRepeatMode
_MPNowPlayingInfoPropertyShuffleMode
_MPNowPlayingInfoPropertyPurchaseInfoData
_MPNowPlayingInfoPropertyIsLoading
_MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalUserProfileIdentifier
MPNowPlayingInfoPropertyServiceIdentifier
MPNowPlayingInfoPropertyPlaybackProgress
MPNowPlayingInfoPropertyMediaType
MPNowPlayingInfoPropertyAssetURL
MPNowPlayingInfoPropertyCurrentPlaybackDate
_MPNowPlayingInfoPropertyArtworkIdentifier
_MPNowPlayingInfoPropertySupportsIsBanned
_MPNowPlayingInfoPropertySupportsIsLiked
_MPNowPlayingInfoPropertySupportsFastForward15Seconds
_MPNowPlayingInfoPropertySupportsRewind15Seconds
_MPNowPlayingInfoPropertySupportsWishlisting
libraryRemovalSupportedOptions
definitiveInformation
TB,R,N,GisDefinitiveInformation,V_definitiveInformation
hasPlaybackCapability
TB,R,N,V_hasPlaybackCapability
requiresCarrierManualVerification
TB,R,N,V_requiresCarrierManualVerification
shouldUseLease
TB,R,N,V_shouldUseLease
TB,R,N,V_shouldUseAccountLessStreaming
<%@ %p subscriptionStatusObject: %@>
HomeSharingML3DataProviderCredentialsDidChangeNotification
homeSharingLibrary
T@"HSHomeSharingLibrary",R,N,V_homeSharingLibrary
isSupportedSharingVersion
TI,N,V_databaseID
Tokens
home-sharing
daap.songuserskipcount
daap.songuserplaycount
daap.songbookmark
daap.songuserrating
com.apple.itunes.liked-state
Library.itdb
com.apple.mobileipod.containerfill
com.apple.MediaPlayer.MPHomeSharingML3DataProvider/serialQueue
Unable to determine groupID
libraryDataProvider
SharingDisabled
@"MPArtworkCatalog"16@?0@"MPModelCurator"8
TB,R,N,GisLive,V_live
Tf,R,N,V_rate
Tq,R,N,V_state
elapsed
T@"NSString",R,N,V_artworkIdentifier
Tq,R,N,V_index
Tq,R,N,V_count
artworkID
T@"NSDictionary",R,N,V_insertedDescriptors
removedItemIdentifiers
T@"NSArray",R,N,V_removedItemIdentifiers
inserted
Client-Daap-Request-Id
Client-Daap-Validation
text/plain
&hs-mobile-device-client=1
&hsgid=%@
HomeSharingURLProtocolErrorDomain
&daap-no-disconnect=1
http
springCubicTimingParameters
T@"UICubicTimingParameters",C,N,V_springCubicTimingParameters
T@"ML3MusicLibrary",R,N,V_library
artworkType
Tq,R,N,V_artworkType
TQ,R,N,V_libraryID
entityType
Tq,R,N,V_entityType
libraryArtwork
T@"MPMediaLibraryArtwork",R,N,V_libraryArtwork
retrievalTime
Td,N,V_retrievalTime
T@"NSString",C,N,V_availableArtworkToken
T@"NSString",C,N,V_fetchableArtworkToken
fetchableArtworkSource
T@"NSNumber",C,N,V_fetchableArtworkSource
v32@?0@"NSString"8@"NSString"16q24
 retrievalTime=%f
<%@:%p libraryID=%llu entityType=%ld artworkType=%ld
com.apple.MPMediaLibraryArtworkRequest.accessQueue
T@"MPMediaLibraryArtworkRequest",W,N,V_artworkRequest
T@"ML3Artwork",&,N,V_artwork
stateLock
T{os_unfair_lock_s=I},R,N,V_stateLock
validSizes
T@"NSArray",R,N,V_validSizes
originalFileURL
effectsMetadata
MPMediaLibraryArtworkErrorDomain
Unknown artwork source type for artwork info request.
Unknown artwork source type.
MP_artworkType
playlistEntry
T@"MPModelPlaylistEntry",&,N,V_playlistEntry
sagaAccountID
T@"NSNumber",C,N
sagaLastItemPlayDataUploadDate
sagaLastPlaylistPlayDataUploadDate
sagaDatabaseUserVersion
storefrontIdentifier
sagaLastLibraryUpdateTime
sagaLastSubscribedContainersUpdateTime
sagaOnDiskDatabaseRevision
T@"MPModelPlaylist",R,N,V_playlist
Unknown-PersonID
accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
database
T@"MSVSQLDatabase",R,N,V_database
observers
T@"NSHashTable",R,N,V_observers
CREATE TABLE IF NOT EXISTS object_relationships (parent_identifier TEXT NOT NULL, child_identifier TEXT NOT_NULL, person_id TEXT NOT NULL, suborder INTEGER NOT NULL DEFAULT 0, child_key TEXT NOT NULL, PRIMARY KEY (parent_identifier, child_identifier, person_id), UNIQUE (parent_identifier, child_identifier, person_id, child_key)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS assets (identifier TEXT NOT NULL, hashed_person_id TEXT NOT NULL, flavor TEXT NOT NULL, url TEXT NOT NULL, mini_sinf BLOB, PRIMARY KEY (identifier, hashed_person_id, flavor)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS objects (identifier TEXT NOT NULL, person_id TEXT NOT NULL, source INTEGER NOT NULL DEFAULT 0, expiration_date INTEGER NOT NULL DEFAULT 0, type TEXT NOT NULL, payload TEXT, PRIMARY KEY (identifier, person_id)) WITHOUT ROWID
@hashedPersonID
@identifier
com.apple.MediaPlayer.MPServerObjectDatabase/accessQueue
SOD: Unable to create database schema on disk or in-memory.
SOD: Unable to create server objects database in-memory
MPServerObjectDatabase.m
@source
@personID
SELECT payload FROM objects WHERE identifier = @identifier AND person_id = @personID AND source = @source LIMIT 1
UPDATE assets SET mini_sinf = @miniSINF WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
DELETE FROM object_relationships WHERE parent_identifier = @parentIdentifier AND person_id = @personID AND child_key = @childKey
INSERT OR REPLACE INTO object_relationships (parent_identifier, child_identifier, person_id, child_key, suborder) VALUES (@parentIdentifier, @childIdentifier, @personID, @childKey, @suborder)
INSERT OR REPLACE INTO assets (identifier, hashed_person_id, flavor, url) VALUES (@identifier, @hashedPersonID, @flavor, @url)
INSERT OR REPLACE INTO objects (identifier, person_id, source, expiration_date, type, payload) VALUES (@identifier, @personID, @source, @expirationDate, @type, @payload)
MPServerObjectDatabaseImport-
@childKey
@parentIdentifier
Cannot remove relationships without a personID
childKey
@suborder
@childIdentifier
Cannot relate without a personID
@flavor
@miniSINF
@url
SELECT identifier, hashed_person_id, flavor, url, mini_sinf FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
Cannot import an asset without a personID
@payload
@expirationDate
@type
Cannot import an object without a personID
SELECT identifier, hashed_person_id, flavor, url, mini_sinf FROM assets WHERE mini_sinf IS NULL AND hashed_person_id = @hashedPersonID AND cast(identifier AS INT) != 0
SELECT identifier, hashed_person_id, flavor, url, mini_sinf FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND LENGTH(mini_sinf) > 1
SELECT identifier, hashed_person_id, flavor, url, mini_sinf FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID
SELECT child_identifier FROM object_relationships WHERE parent_identifier = @parentIdentifier AND person_id = @personID AND child_key = @childKey ORDER BY suborder
PropertySet does not contain mapping for %@
Cannot have a source without a payload.
SELECT source, payload FROM objects WHERE identifier = @identifier AND person_id = @personID LIMIT 1
prefersInMemoryDatabase
sharedServerObjectDatabase
T@"MPServerObjectDatabase",R,N
@"MSVSQLDatabase"8@?0
Database
_MP_CLEAR_SOD
ServerObjectDatabase.sqlpkg
hashedPersonID
T@"NSString",R,C,N,V_hashedPersonID
Tq,R,N,V_flavor
T@"NSURL",R,C,N,V_url
miniSINF
T@"NSData",R,C,N,V_miniSINF
<%@: %p hashedPersonID=%@ identifier=%@ flavor=%@ miniSinf=%lld bytes  url=%@
URLRequest
T@"NSURLRequest",R,C,N
URLRequests
T@"NSArray",R,C,N,V_URLRequests
requestedItemIdentifiers
T@"NSArray",R,N,V_requestedItemIdentifiers
itemMetadataRequestReason
TQ,R,N,V_itemMetadataRequestReason
Media/HomeSharingRentals.plist
SSRentalCheckinRequest
attempted to remove rental with no item ID
MPHomeSharingRentalTracker.m
attempted to add rental with item ID: %llu, databaseID: %@
com.apple.mobileipod.home-sharing-rental-tracker
enforcedContentItemsCount
Tq,N,V_enforcedContentItemsCount
enforcedContentTreeDepth
Tq,N,V_enforcedContentTreeDepth
contentLimitsEnforced
TB,N,V_contentLimitsEnforced
endpointAvailable
TB,N,V_endpointAvailable
contentLimitsEnabled
requestedGroupPropertySet
T@"MPPropertySet",R,N,V_requestedGroupPropertySet
requestedItemPropertySet
T@"MPPropertySet",R,N,V_requestedItemPropertySet
storeItemMetadataResults
T@"NSDictionary",R,N,V_storeItemMetadataResults
flatSectionedItems
T@"MPMutableSectionedCollection",R,N,V_flatSectionedItems
isGroupRecommendation
href
stringForDisplay
display
RECENTLY_PLAYED_VIEW_TITLE
sinfs
showAllTVShows
T@"MPHomeSharingML3DataProvider",&,N,V_dataProvider
family
SSAuthorizationRequest
keybag
MPRemoteCommandCenterCommandsDidChangeNotification
specialSeekForwardCommand
T@"MPRemoteCommand",R,N,V_specialSeekForwardCommand
specialSeekBackwardCommand
T@"MPRemoteCommand",R,N,V_specialSeekBackwardCommand
advanceShuffleModeCommand
T@"MPAdvanceShuffleModeCommand",R,N,V_advanceShuffleModeCommand
advanceRepeatModeCommand
T@"MPAdvanceRepeatModeCommand",R,N,V_advanceRepeatModeCommand
removeFromPlaybackQueueCommand
T@"MPRemoteCommand",R,N,V_removeFromPlaybackQueueCommand
reorderQueueCommand
T@"MPReorderQueueCommand",R,N,V_reorderQueueCommand
playItemInQueueCommand
T@"MPRemoteCommand",R,N,V_playItemInQueueCommand
createRadioStationCommand
T@"MPRemoteCommand",R,N,V_createRadioStationCommand
setPlaybackQueueCommand
T@"MPSetPlaybackQueueCommand",R,N,V_setPlaybackQueueCommand
prepareForSetPlaybackQueueCommand
T@"MPRemoteCommand",R,N,V_prepareForSetPlaybackQueueCommand
insertIntoPlaybackQueueCommand
T@"MPInsertIntoPlaybackQueueCommand",R,N,V_insertIntoPlaybackQueueCommand
addNowPlayingItemToLibraryCommand
T@"MPFeedbackCommand",R,N,V_addNowPlayingItemToLibraryCommand
addItemToLibraryCommand
T@"MPFeedbackCommand",R,N,V_addItemToLibraryCommand
setPlaybackSessionCommand
T@"MPSetPlaybackSessionCommand",R,N,V_setPlaybackSessionCommand
preloadPlaybackSessionCommand
T@"MPPreloadPlaybackSessionCommand",R,N,V_preloadPlaybackSessionCommand
setPriorityForPlaybackSessionCommand
T@"MPSetPriorityForPlaybackSessionCommand",R,N,V_setPriorityForPlaybackSessionCommand
discardPlaybackSessionCommand
T@"MPRemoteCommand",R,N,V_discardPlaybackSessionCommand
reshuffleCommand
T@"MPRemoteCommand",R,N,V_reshuffleCommand
changeQueueEndActionCommand
T@"MPChangeQueueEndActionCommand",R,N,V_changeQueueEndActionCommand
T@"NSString",R,C,N,V_playerID
disableAutomaticCanBeNowPlaying
TB,N,V_disableAutomaticCanBeNowPlaying
wantsSerializedEventDelivery
TB,N,V_wantsSerializedEventDelivery
pauseCommand
T@"MPRemoteCommand",R,N,V_pauseCommand
playCommand
T@"MPRemoteCommand",R,N,V_playCommand
stopCommand
T@"MPRemoteCommand",R,N,V_stopCommand
togglePlayPauseCommand
T@"MPRemoteCommand",R,N,V_togglePlayPauseCommand
enableLanguageOptionCommand
T@"MPRemoteCommand",R,N,V_enableLanguageOptionCommand
disableLanguageOptionCommand
T@"MPRemoteCommand",R,N,V_disableLanguageOptionCommand
changePlaybackRateCommand
T@"MPChangePlaybackRateCommand",R,N,V_changePlaybackRateCommand
changeRepeatModeCommand
T@"MPChangeRepeatModeCommand",R,N,V_changeRepeatModeCommand
changeShuffleModeCommand
T@"MPChangeShuffleModeCommand",R,N,V_changeShuffleModeCommand
nextTrackCommand
T@"MPRemoteCommand",R,N,V_nextTrackCommand
previousTrackCommand
T@"MPRemoteCommand",R,N,V_previousTrackCommand
skipForwardCommand
T@"MPSkipIntervalCommand",R,N,V_skipForwardCommand
skipBackwardCommand
T@"MPSkipIntervalCommand",R,N,V_skipBackwardCommand
seekForwardCommand
T@"MPRemoteCommand",R,N,V_seekForwardCommand
seekBackwardCommand
T@"MPRemoteCommand",R,N,V_seekBackwardCommand
changePlaybackPositionCommand
T@"MPChangePlaybackPositionCommand",R,N,V_changePlaybackPositionCommand
ratingCommand
T@"MPRatingCommand",R,N,V_ratingCommand
likeCommand
T@"MPFeedbackCommand",R,N,V_likeCommand
dislikeCommand
T@"MPFeedbackCommand",R,N,V_dislikeCommand
bookmarkCommand
T@"MPFeedbackCommand",R,N,V_bookmarkCommand
v28@?0I8^{__CFDictionary=}12@?<v@?^{__CFArray=}>20
B32@?0@"MPRemoteCommand"8Q16^B24
Attempted to create remote command object of unknown class %@
MPRemoteCommandCenter.m
@"NSMutableArray"16@?0@"NSArray"8
v16@?0@?<v@?>8
com.apple.MediaPlayer.MPRemoteCommandCenter
pendingEventsCount
canBeNowPlayingApplication
activeCommands
MPRemoteCommandCenter:
Cannot have two MPRemoteCommandCenters for the same playerID: %@
LaunchCommandBuilder
TQ,R,N,V_itemID
v16@?0@"HSResponse"8
SSRentalCheckoutRequest
MPStreamingDownloadSessionControllerDidFailDownloadSessionNotification
MPStreamingDownloadSessionControllerErrorDomain
MPStreamingDownloadSessionControllerUserInfoKeyDownloadSession
MPStreamingDownloadSessionControllerUserInfoKeyError
MPStreamingDownloadSessionControllerUserInfoKeyDialogDictionary
pinf
AVAssetDownloadSessionAlternativeConfigurationOptionsKey
v16@?0@"ICNetworkConstraints"8
v32@?0@"AVAssetDownloadSession"8Q16^B24
v36@?0B8@"NSString"12Q20Q28
v24@?0@"ICMusicSubscriptionLeaseSession"8@"NSError"16
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
v16@?0@"ICStoreRequestContext"8
v32@?0@"ICMusicSubscriptionPlaybackResponse"8d16@"NSError"24
v24@?0@"MPStreamingDownloadSession"8@"NSError"16
com.apple.MediaPlayer.MPStreamingDownloadSessionController.accessQueue
com.apple.MediaPlayer.MPStreamingDownloadSessionController.streamingOperationQueue
MPModelPropertyHomeSharingAssetAvailable
MPModelPropertyHomeSharingAssetProtectedContentSupportStorageFileURL
MPModelPropertyHomeSharingAssetURL
available
TB,D,N,GisAvailable
protectedContentSupportStorageFileURL
T@"MPModelLibraryHasPurchasesRequest",C,N,V_request
MPStoreItemLibraryImportMetadataKeyAlbumLikedState
MPStoreItemLibraryImportMetadataKeyTrackLikedState
additionalTrackMetadata
T@"NSDictionary",R,N,V_additionalTrackMetadata
T@"NSDictionary",R,N,V_lookupDictionary
addToCloudLibrary
TB,R,N,V_addToCloudLibrary
T@"MPModelObject",R,N,V_referralObject
television
T^v,R,N,V_television
MPAVTelevisionRoute.m
viewControllerForOrientation
T@"UIViewController",W,N,V_viewControllerForOrientation
SUBTITLES_2013
AUDIO_2013
AUDIO_AND_SUBTITLES_POPOVER_TITLE
T#,N,V_modelClass
identifierSets
T@"NSArray",C,N,V_identifierSets
v32@?0{shared_ptr<mlcore::QueryResult>=^{QueryResult}^{__shared_weak_count}}8@"NSError"24
MPStoreLibraryMappingRequestOperation.mm
TB,N,GisTailPlaceholder,V_tailPlaceholder
T@"NSString",&,N,V_album
T@"NSString",&,N,V_artist
Td,N,V_durationFromExternalMetadata
TB,N,GisExplicitTrack,V_explicitTrack
TB,N,GisLikedStateEnabled,V_likeStateEnabled
T@"NSString",&,N,V_mainTitle
TB,N,V_supportsLikedState
T@?,C,N,V_artworkCatalogBlock
LOADING_AUDIO_LABEL
T@"MPModelPlaylistEntry",&,D,N
tvEpisode
podcast
T@"MPModelPodcast",&,D,N
podcastEpisode
T@"MPModelPodcastEpisode",&,D,N
generic %@
MPModelObject mergeWithObject: called with a different generic relationship type: %@ %@
MPModelGenericObject.m
MPModelRelationshipGenericSocialPerson
MPModelRelationshipGenericCurator
MPModelRelationshipGenericGenre
MPModelRelationshipGenericComposer
MPModelRelationshipGenericRadioStation
MPModelRelationshipGenericPodcastEpisode
MPModelRelationshipGenericPodcast
MPModelRelationshipGenericMediaClip
MPModelRelationshipGenericMovie
MPModelRelationshipGenericTVShow
MPModelRelationshipGenericTVSeason
MPModelRelationshipGenericTVEpisode
MPModelRelationshipGenericPlaylistEntry
MPModelRelationshipGenericPlaylist
MPModelRelationshipGenericArtist
MPModelRelationshipGenericAlbum
MPModelRelationshipGenericSong
Unsupported generic object type: %ld
relationshipKinds
T@"NSDictionary",R,N,V_relationshipKinds
any generic (%@)
; or 
v16@?0@"MPModelGenericObjectKind"8
%@-%p
GenericObject:k
audio
Info
insertedSections
T@"NSIndexSet",C,N,V_insertedSections
deletedSections
T@"NSIndexSet",C,N,V_deletedSections
updatedSections
T@"NSIndexSet",C,N,V_updatedSections
insertedItemIndexPaths
T@"NSArray",C,N,V_insertedItemIndexPaths
deletedItemIndexPaths
T@"NSArray",C,N,V_deletedItemIndexPaths
updatedItemIndexPaths
T@"NSArray",C,N,V_updatedItemIndexPaths
hasChanges
insertedIndexes
T@"NSIndexSet",R,C,N
deletedIndexes
updatedIndexes
v32@?0@"NSIndexPath"8@"NSIndexPath"16^B24
v32@?0@"NSNumber"8@"NSNumber"16^B24
Attempt to mutate immutable change details
MPChangeDetails.m
v28@?0@"NSIndexPath"8@"NSIndexPath"16B24
; none [UNNECESSARY]
; updated item moves %@
; item moves %@
; updated items %@
; deleted items %@
; inserted items %@
; %@ updated moves %@
; %@ moves %@
; updated %@ %@
; deleted %@ %@
; inserted %@ %@
indexes
; %lu updated moves %@
; %lu moved %@
; %lu updated %@
; %lu deleted %@
; %lu inserted %@
MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _Nonnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)
void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)
MPChangeDetailOperation *_MPChangeDetailOperationsFromOperationList(MPChangeDetailOperation *, size_t, MPChangeDetailOperationNode *, size_t *)
startNode
existingOperations
void _MPChangeDetailOperationNodeRelease(MPChangeDetailOperationNode *)
Overrelease of Operation
Invalid operation type MPChangeDetailOperationTypeReplace
Invalid operation type MPChangeDetailOperationTypeInsert
Invalid operation type MPChangeDetailOperationTypeDelete
Not enough operationCapacity
operationCount
<MPChangeDetailOperation type=none>
<MPChangeDetailOperation type=replace previousIndex=%d finalIndex=%d>
<MPChangeDetailOperation type=insert finalIndex=%d>
<MPChangeDetailOperation type=delete previousIndex=%d>
<MPChangeDetailOperations {
preventStoreItemMetadataCaching
TB,N,V_preventStoreItemMetadataCaching
<unknown-store-id>
MediaRemoteLanguageOption/%@/%@ "%@"
NULL
MPCloudControllerErrorDomain
MPCloudControllerEnableCloudLibraryOptionStartInitialImport
MPCloudControllerEnableCloudLibraryOptionMergeWithCloudLibrary
MPCloudControllerCanShowCloudDownloadButtonsDidChangeNotification
MPCloudControllerCanShowCloudTracksDidChangeNotification
MPCloudControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification
MPCloudControllerIsCellularDataRestrictedDidChangeNotification
MPCloudControllerIsCloudEnabledDidChangeNotification
MPCloudControllerCloudLibraryFailureDidChangeNotification
MPCloudControllerIsGeniusEnabledDidChangeNotification
MPCloudControllerIsUpdateInProgressDidChangeNotification
MPCloudControllerIsJaliscoGeniusEnabledDidChangeNotification
MPCloudControllerCloudAddToPlaylistBehaviorDidChangeNotification
cloudItemIDList
T@"ICCloudItemIDList",&,N,V_cloudItemIDList
cloudAvailabilityController
T@"NSObject<ICCloudAvailability>",R,N,V_cloudAvailabilityController
T@"ICConnectionConfiguration",R,N
activeCount
Tq,N,V_activeCount
preferencesChangedNotifyToken
Ti,N,V_preferencesChangedNotifyToken
preferencesChangedNotifyTokenIsValid
TB,N,V_preferencesChangedNotifyTokenIsValid
cloudClientCallbackQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_cloudClientCallbackQueue
addToPlaylistBehaviorChangedObserver
T@"MSVDistributedNotificationObserver",R,N,V_addToPlaylistBehaviorChangedObserver
canShowCloudDownloadButtons
TB,N,V_canShowCloudDownloadButtons
canDefaultMediaLibraryShowCloudContent
TB,N,V_canDefaultMediaLibraryShowCloudContent
canShowCloudMusic
TB,N,V_canShowCloudMusic
canShowCloudVideo
TB,N,V_canShowCloudVideo
cloudEnabledValid
TB,N,GisCloudEnabledValid,V_cloudEnabledValid
cloudEnabled
TB,N,GisCloudEnabled,V_cloudEnabled
cloudLockerAccount
TB,N,GhasCloudLockerAccount,V_cloudLockerAccount
purchaseHistoryAccount
TB,N,GhasPurchaseHistoryAccount,V_purchaseHistoryAccount
updateInProgress
TB,N,GisUpdateInProgress,V_updateInProgress
initialImport
TB,N,GisInitialImport,V_initialImport
cloudLibraryUpdateInProgress
TB,N,GisCloudLibraryUpdateInProgress,V_cloudLibraryUpdateInProgress
cloudLibraryInitialImport
TB,N,GisCloudLibraryInitialImport,V_cloudLibraryInitialImport
jaliscoUpdateInProgress
TB,N,GisJaliscoUpdateInProgress,V_jaliscoUpdateInProgress
jaliscoInitialImport
TB,N,GisJaliscoInitialImport,V_jaliscoInitialImport
active
TB,R,N,GisActive,V_active
cloudClient
T@"ICCloudClient",R,N,V_cloudClient
T@"ICUserIdentity",R,N
enablingCloudLibraryDestructive
TB,R,N,GisEnablingCloudLibraryDestructive
jaliscoGeniusEnabled
TB,R,N,GisJaliscoGeniusEnabled,V_jaliscoGeniusEnabled
enablingJaliscoGeniusRequiresTerms
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v16@?0B8B12
-[MPCloudController fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:]
MPCloudController.m
v24@?0@"NSString"8@"NSError"16
Invalid update reason: %ld
v32@?0@"NSString"8@16^B24
v16@?0@"MPCloudController"8
v32@?0@"NSString"8@"MPCloudController"16^B24
Artwork info loading not supported for artworkType=%ld, sourceType=%ld
Artwork info loading failed. Got no artwork info dictionary for item with persistent ID %lld
Artwork info loading failed. No artwork URL found in the artwork info dictionary for item with persistent ID %lld
One-off loading not supported for artworkType=%ld, sourceType=%ld
Cannot set cloud properties for groupingType=%ld properties=%@
com.apple.mediaplayer.MPCloudController.serial.queue
com.apple.mediaplayer.MPCloudController.cloudClient.callback.queue
sharedCloudController
T@"MPCloudController",R,N
Attempting to access a method only available for multi user device
com.apple.NanoBooks
com.apple.podcasts
com.apple.SessionTrackerApp
com.apple.NanoRadio
com.apple.NanoMusic
com.apple.Carousel
com.apple.tv
com.apple.springboard
com.apple.iBooks
com.apple.itunescloudd
com.apple.videos
com.apple.mediaplayer.MPCloudController.global.serial.queue
T@"MPModelObject",C,N,V_referralObject
isQueryResultSetInvalidated
rawRate
Tf,R,N,V_rawRate
actionAtItemEnd
usesExternalPlaybackWhileExternalScreenIsActive
usesAudioOnlyModeForExternalPlayback
defaultItemEQPresetType
Tq,N,V_defaultItemEQPresetType
outputObscuredDueToInsufficientExternalProtection
T@"AVPlayerItem",R,N
playbackQueueCommitHandler
T@?,C,N,V_playbackQueueCommitHandler
isPlaybackQueueTransactionActive
_player
T@"AVPlayer",R,N
_externalProtectionStatus
playerAVAudioSession
com.apple.MediaPlayer.MPQueuePlayer.periodicTimeObserverSerialQueue
v32@?0{?=qiIq}8
MPQueuePlayerInsufficientExternalProtectionContext
AVPlayerStatusUnknown
AVPlayerStatusFailed
AVPlayerStatusReadyToPlay
MPQueuePlayerStatusObservationContext
MPQueuePlayerRateObservationContext
MPQueuePlayerExternalPlaybackActiveObservationContext
MPQueuePlayerCurrentItemObservationContext
com.apple.MediaPlayer.MPQueuePlayer.accessQueue
curatorKind
brandLogoArtworkCatalogBlock
MPModelPropertyCuratorHandle
MPModelPropertyCuratorBrandLogoArtwork
MPModelPropertyCuratorEditorialArtwork
MPModelPropertyCuratorKind
MPModelPropertyCuratorShortEditorNotes
MPModelPropertyCuratorEditorNotes
MPModelPropertyCuratorShortName
remainingTimeInterval
T@"MPStoreModelRequest",C,N,V_request
v16@?0@"ICMusicKitRequestContext"8
Failed to get response body objects for each request in the compound URL load group.
errors
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
com.apple.MediaPlayer.MPStoreModelRequestOperation.accessSerialQueue
durationInFrames
TQ,N,V_durationInFrames
encodingDelayInFrames
TI,N,V_encodingDelayInFrames
encodingDrainInFrames
TI,N,V_encodingDrainInFrames
heuristicInfo
TI,N,V_heuristicInfo
lastPacketsResync
TQ,N,V_lastPacketsResync
T@"MPSectionedCollection",R,N,V_unpersonalizedContentDescriptors
representedObjects
T@"MPSectionedCollection",&,N,V_representedObjects
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequest.sharedQueue
representedObjectResults
T@"MPSectionedCollection",&,N,V_representedObjectResults
libraryResponse
T@"MPModelResponse",&,N,V_libraryResponse
v32@?0@8@"NSIndexPath"16^B24
v16@?0@"MPModelPlaylistEntry"8
T@"MPModelCurator",C,D,N
hasCleanContent
curatorPlaylist
TB,D,N,GisCuratorPlaylist
owner
TB,D,N,GisOwner
publicPlaylist
TB,D,N,GisPublicPlaylist
visiblePlaylist
TB,D,N,GisVisiblePlaylist
subscribed
TB,D,N,GisSubscribed
userEditableComponents
shareShortURL
releaseDateComponents
T@"NSDateComponents",C,D,N
lastModifiedDateComponents
cloudVersionHash
tiledArtworkRequest
T@"MPTiledArtworkRequest",C,D,N
MPModelPlaylist
MPModelPropertyPlaylistName
playlist %@
MPModelPropertyPlaylistDownloadedDate
MPModelPropertyPlaylistCloudVersionHash
MPModelPropertyPlaylistLastDevicePlaybackDate
MPModelPropertyPlaylistKeepLocalManagedStatus
MPModelPropertyPlaylistKeepLocalEnableState
MPModelPropertyPlaylistTracksTiledArtwork
MPModelPropertyPlaylistLibraryAddedDate
MPModelPropertyPlaylistLibraryAdded
MPModelPropertyPlaylistEditorialArtwork
MPModelPropertyPlaylistArtwork
MPModelPropertyPlaylistLastModifiedDateComponents
MPModelPropertyPlaylistReleaseDateComponents
MPModelPropertyPlaylistShareShortURL
MPModelPropertyPlaylistShareURL
MPModelPropertyPlaylistShortEditorNotes
MPModelPropertyPlaylistEditorNotes
MPModelPropertyPlaylistTrackCount
MPModelPropertyPlaylistType
MPModelPropertyPlaylistUserEditableComponents
MPModelPropertyPlaylistSubscribed
MPModelPropertyPlaylistVisiblePlaylist
MPModelPropertyPlaylistPublicPlaylist
MPModelPropertyPlaylistIsOwner
MPModelPropertyPlaylistCuratorPlaylist
MPModelPropertyPlaylistHasExplicitContent
MPModelPropertyPlaylistHasCleanContent
MPModelRelationshipPlaylistCurator
MPModelPropertyPlaylistDescriptionText
playlistEntryKind
T@"MPModelPlaylistEntryKind",R,N,V_playlistEntryKind
 containing %@
non-empty 
mutable 
previously played 
 or folders
administered
genius
smart
v16@?0@"MPModelPlaylistKind"8
Playlist:v%lu:o%lu:pe%p
MPModelChildPlaylistEntries
T@"<MPStoreSocialRequestOperationDataSource>",R,N,V_dataSource
success
Content-Type
com.apple.MPStoreSocialRequestOperation.accessQueue
POST
DELETE
application/x-www-form-urlencoded
application/json; charset=utf-8
MPNetworkPlayabilityMonitorNetworkTypeDidChangeNotification
MPNetworkPlayabilityMonitorEffectiveNetworkTypeForPlaybackDidChangeNotification
lastAverageBitrate
networkType
effectiveNetworkTypeForPlayback
com.apple.MediaPlayer.MPNetworkPlayabilityMonitor
v24@?0@"NSArray"8@"NSError"16
com.apple.mediaplayer.radio.private
com.apple.MediaPlayer.MPRadioControllerServer
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
response
T@,&,N,V_response
T@,&,N,V_request
T@"<MPRequestResponseControllerDelegate>",W,N,V_delegate
v24@?0@"MPResponse"8@"NSError"16
MPRequestResponseController delegate did not call block passed to defersResponseReplacement.
Must get a response or an error
MPRequestResponseController.m
Mismatched begin/endAutomaticResponseLoading.
Response must be subclass of MPResponse.
Request must be subclass of MPRequest.
com.apple.MediaPlayer/MPRequestResponseController
com.apple.MediaPlayer/MPRequestResponseController.calloutQueue
MPRequestResponseController
retryInterval
lastError
pendingResponse
<%@: %p>
needsReload
automaticLoad
v24@?0@"MPMediaItem"8^B16
MPMediaPlaylist
outputDevices
T@"NSArray",R,N,V_outputDevices
logicalLeaderOutputDevice
T^v,R,N,V_logicalLeaderOutputDevice
groupLeader
TB,R,N,GisGroupLeader
B16@?0^v8
AudioAccessory5
AudioAccessory
MRAVOutputDevice
MPAVOutputDeviceRoute.m
localDeviceUID
LOCAL
preferredStoreOfferVariant
presentationStyle
Tq,R,N,V_presentationStyle
storeURL
T@"NSURL",R,C,N,V_storeURL
collectionWithCompletionItems
T@"MPStoreOfferMediaItemCollection",R,N
Tq,R,N,V_preferredStoreOfferVariant
offeredCollection
T@"MPStoreOfferMediaItemCollection",R,N,V_offeredCollection
mergedCollection
T@"MPStoreOfferMediaItemCollection",R,N,V_mergedCollection
itemsWithCompletionsCollection
localItems
'pass type' is unsupported
B16@?0@"NSString"8
v32@?0@"NSURL"8@"MPStoreCollectionCompletionOffering"16q24
https
ampMusicAPIDomains
default
listenNow
carPlayFCKindWhitelist
/v1/editorial
groupings
browseTabGroupingName
radioTabGroupingName
art[editorial-elements:url]
rooms
/v1/me/recommendations
timezone
extend
plainEditorialNotes
with
friendsMix
social
displayFilter[kind]
/v1/me/recent/played
/v1/me/recent/radio-stations
language
artistNameObject
MPStoreCompletionOfferingErrorDomain
albumItemsQuery
T@"MPMediaQuery",R,N,V_albumItemsQuery
wantsArtwork
TB,R,N,V_wantsArtwork
tokenID
TQ,R,N,V_tokenID
responseBlock
T@?,R,C,N,V_responseBlock
storeLookupID
T@"NSNumber",R,N,V_storeLookupID
storeLookupIDString
%dx%d
v44@?0{CGSize=dd}8B24@"NSArray"28@"NSMutableSet"36
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
There was an underlying store issue
Can't be merged with store offers
No store IDs present
Store use is restricted
v32@?0@"MPStoreCompletionOfferingLookupItem"8Q16^B24
v24@?0@"MPStoreCompletionOffering"8@"NSError"16
Invalid query: %@
MPStoreCompletionOfferingController.m
com.apple.MPStoreCompletionOffering
access MPStoreCompletionOfferingController using +storeOfferingController only.
default library is not the device media library (eg. is a homeshare)
store use is restricted
v16@?0@"MPAsyncBlockOperation"8
ubiquitousIdentifier
T@"NSString",R,C,N,V_ubiquitousIdentifier
bookmarkTimestamp
Td,N,V_bookmarkTimestamp
Td,N,V_bookmarkTime
userPlayCount
TQ,N,V_userPlayCount
T@"NSError",C,N,V_error
Error
Duration
tileArtworkVisualIdenticalityIdentifiers
T@"NSArray",C,N,V_tileArtworkVisualIdenticalityIdentifiers
%@ id=%llu, disc#=%@, track#=%@, name=%@, preferredStoreOfferVariant=%@
MPStoreOfferContentRating
MPPreferredStoreOfferVariant
MPItemID
MPLookupCollectionPropertyValues
v32@?0@"MPMediaItem"8Q16^B24
B32@?0@"MPMediaItem"8Q16^B24
isDownloadable
isDownloadableStoreOffer
isPurchasableStoreOffer
T@"NSMutableArray",&,N,V_identifiers
T@"NSMutableArray",&,N,V_identifierSets
T@"NSMapTable",&,N,V_index
v32@?0@"MPIdentifierSet"8Q16^B24
Index not found for itemIdentifier: %@
MPQueueFeederIdentifierRegistry.m
v24@?0Q8^B16
_MPContentItemDidChangeUserInfoKeyDeltaRequest
info
availableLanguageOptions
currentLanguageOptions
T@"MPNowPlayingInfoLyricsItem",C,N
T@"MPMediaItemArtwork",&,D,N
elapsedTime
storeAlbumID
storeArtistID
storeSubscriptionID
legacyUniqueID
deviceSpecificUserInfo
sharableItem
TB,N,GisSharableItem
steerable
TB,N,GisSteerable
auxiliaryNowPlayingInfo
loading
TB,N,GisLoading
T@"<MPNowPlayingContentItemArtworkDataSource>",&,N,V_artworkDataSource
collectionInfo
calculatedElapsedTime
TB,N,GisExplicitItem
albumName
trackArtistName
directorName
genreName
seriesName
totalDiscCount
totalTrackCount
albumYear
localizedContentRating
collectionIdentifier
profileIdentifier
radioStationType
radioStationName
radioStationStringIdentifier
numberOfChildren
alwaysLiveItem
TB,N,GisAlwaysLiveItem
localizedDurationString
elapsedTimeTimestamp
editingStyleFlags
hasArtwork
artworkURL
artworkURLTemplates
hasDescription
hasLanguageOptions
^{__CFArray=}16@?0@"NSArray"8
@"NSMutableArray"16@?0^{__CFArray=}8
@16@?0@"NSArray"8
@16@?0^{__CFArray=}8
@"NSDictionary"16@?0^{__CFDictionary=}8
prid
clid
ulid
claid
apid
aarpid
arpid
gpid
cpid
peid
ppid
pclid
colLibAdded
libAdded
klEnable
klStatus
nonPurge
procType
endpt
rembok
lrcsGzpData
purID
shComp
endT
load
hsStLy
hsTSL
cntrUID
libEligible
phold
rdwn
subReq
sfid
urlART
tmpART
lokART
supART
podURL
podSupSub
podShURL
podEpStrURL
podEpShURL
raAttrLbl
raTy
raSty
raPUL
raBID
raPrID
aPly
acid
lisHist
algorithm
Tq,R,N,V_algorithm
T@"MPModelFileAsset",R,N
T@"MPModelHomeSharingAsset",R,N
T@"MPModelPlaybackPosition",R,N,V_playbackPosition
T@"MPModelStoreAsset",R,N
modelObjectDelegate
T@"<MPModelObjectPlaybackItemMetadataDelegate>",W,N,V_modelObjectDelegate
com.apple.MediaPlayer.MPModelObjectPlaybackItemMetadata.writeQueue
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
com.apple.MediaPlayer.MPStoreAssetInfoPlaybackCache.accessQueue
sharedCache
T@"MPStoreAssetInfoPlaybackCache",R
accountID
TQ,N,V_accountID
delegatedAccountID
TQ,N,V_delegatedAccountID
requestType
Tq,N,V_requestType
redownloadParameters
T@"NSString",C,N,V_redownloadParameters
T@"NSString",C,N,V_cloudUniversalLibraryID
Tq,N,V_storeSubscriptionAdamID
TQ,N,V_storeCloudID
Tq,N,V_storePurchasedAdamID
storeRadioAdamID
Tq,N,V_storeRadioAdamID
MPModelPropertyGenreName
genre %@
MPModelPropertyGenreLibraryAddedDate
MPModelPropertyGenreArtwork
genres with %@
v16@?0@"MPModelGenreKind"8
Genre:a%p
inputProtocols
outputProtocols
inputOperations
T@"NSMapTable",&,N
builderSelector
T:,N,V_builderSelector
v12@?0B8
Unknown builder protocol method return type: -(%s)%@. Consider calling +[MPMiddlewareChain registerReturnType:returnValueBlock:]
MPRequestMiddleware.m
#24@?0@8#16
d24@?0@8d16
f20@?0@8f16
Q24@?0@8Q16
q24@?0@8q16
I20@?0@8I16
i20@?0@8i16
B20@?0@8B16
@24@?0@8@16
T@"NSArray",R,D,N
itemsByRemovingStoreOffers
itemsByRemovingLocalItems
isCollectionOfferPresentable
B32@?0@8Q16^B24
CMA COLLECTION: %@
%@, items = %@
MPLocalItemsQuery
MPUnmergedStoreMediaItems
MPStoreOfferResponse
invalid collection specification
MPStoreOfferMediaItemCollection.m
MPMusicAPIErrorDomain
T@"NSString",C,N,V_clientVersion
clientPlatformIdentifier
T@"NSString",C,N,V_clientPlatformIdentifier
authenticationOptions
TQ,N,V_authenticationOptions
MPStoreModelRequestAuthenticationOptions
MPStoreModelRequestClientPlatformIdentifier
MPStoreModelRequestClientVersion
MPStoreModelRequestClientIdentifier
MPStoreModelRequestTimeoutInterval
MPModelPropertyPlaybackPositionBookmarkTime
MPModelPropertyPlaybackPositionShouldRememberBookmarkTime
MPModelPropertyPlaybackPositionHasBeenPlayed
MPModelPropertyPlaybackPositionStartTime
MPModelPropertyPlaybackPositionStopTime
MPModelPropertyPlaybackPositionStoreUbiquitousIdentifier
MPModelPropertyPlaybackPositionUserPlayCount
T@"NSNumber",C,D,N
sdVideo
sd480pVideo
720pHdVideo
1080pHdVideo
hlsURL
hlsUrl
<%@: %p, playbackContext=%@>
refreshUrl
FOR_YOU_PERSONAL_MIXES_TITLE
ALBUM_RECO
NEW_RELEASES
ARTIST_PLAYLISTS
ALBUM_GROUPS
HEAVY_ROTATION
TODAYS_PLAYLISTS
RECENTLY_PLAYED
RECOMMEND_FRIENDS
FRIENDS_LISTENING
PERSONALIZED_MIX
moduleType
recoId
sectionDataSources
T@"NSDictionary",R,N,G_sectionDataSources
annotationDelegate
T@"<MPSectionedIdentifierListAnnotationDelegate>",W,N,V_annotationDelegate
T@"<MPSectionedIdentifierListDelegate>",W,N,V_delegate
itemCount
automaticallyReversesNonDestructiveDataSourceEdits
TB,N,V_automaticallyReversesNonDestructiveDataSourceEdits
allSectionIdentifiers
No tail exists for %@
MPSectionedIdentifierList.m
v32@?0@"NSString"8@"MPSectionedIdentifierListHeadEntry"16^B24
mutableItemIdentifiers
T@"NSMutableArray",&,N,V_mutableItemIdentifiers
T@"NSString",R,C,N,V_sectionIdentifier
T@"MPSectionedIdentifierList",R,W,N,V_sectionedIdentifierList
v32@?0{_NSRange=QQ}8^B24
v28@?0q8q16B24
Did not find item %@ to move after.
Did not find item %@ to insert after.
No item exists at %@:%@
Unsupported position type
entryToMoveLatestUserClone cannot be nil
entryToMove cannot be nil
Could not find tail item entry for section identifier: %@
v16@?0@"<MPExclusiveAccessToken>"8
Could not find head entry for section identifier: %@
Could not find last entry (tailEntry.previous) for section identifier: %@
Could not find tail entry for section identifier: %@
Could not head entry for section identifier: %@
Could not find item entry for identifier: %@
@16@?0@"<MPExclusiveAccessToken>"8
arne
@"_MPSectionedIdentifierListCloneIndexEntry"24@?0@"NSString"8@"NSString"16
T@"MPSectionedIdentifierListItemEntry",&,N,V_rootEntry
T@"NSMutableSet",&,N,V_clonedEntries
v32@?0@"MSVPair"8@"_MPSectionedIdentifierListCloneIndexEntry"16^B24
com.apple.mediaplayer.MPSectionedIdentifierList/accessQueue
Tail: %@
Head: %@
Item: %@ - %@
<%@: %p> 
cmcAlternateCollectionsUrl
complete
variant
actionText.short
actionText.long
preview.url
preview.duration
entityPersistentID
TQ,R,N,V_entityPersistentID
entityTitle
T@"NSString",R,C,N,V_entityTitle
buyType
passType
Tq,R,N,V_passType
displayTitle
actionDisplayTitle
requiresConfirmation
displayPrice
regularPriceDisplayPrice
downloadSize
B16@?0q8
MPStoreOfferVariantDefault
MPStoreOfferVariantStandardQuality
MPStoreOfferVariantHighQuality
MPStoreOfferVariant (Unknown)
didSetPlaylistUserImage
TB,R,N,V_didSetPlaylistUserImage
playlistEntries
T@"MPSectionedCollection",C,N,V_playlistEntries
playlistDescription
T@"NSString",C,N,V_playlistDescription
playlistName
T@"NSString",C,N,V_playlistName
playlistUserImage
T@"UIImage",&,N,V_playlistUserImage
T@"NSNumber",C,N,GisPublicPlaylist,V_publicPlaylist
T@"NSNumber",C,N,GisVisiblePlaylist,V_visiblePlaylist
T@"NSNumber",C,N,GisCuratorPlaylist,V_curatorPlaylist
isOwner
T@"NSNumber",C,N,V_isOwner
authorStoreIdentifier
T@"NSString",C,N,V_authorStoreIdentifier
parentPlaylist
T@"MPModelPlaylist",&,N,V_parentPlaylist
shouldCreatePlaylist
TB,N,V_shouldCreatePlaylist
listener
T@"NSXPCListener",&,N,V_listener
T@"NSXPCConnection",&,N,V_connection
dismissHandlerWithReason
T@?,C,N,V_dismissHandlerWithReason
dismissHandler
T@?,C,N,V_dismissHandler
T@"NSString",&,N,V_routeUID
MPMediaControlsDismissalReasonUnknown
MPMediaControlsDismissalReasonUserCancelled
SupportsSharedQueue
B24@?0@"NSIndexPath"8@"NSIndexPath"16
MPNetworkObserverIsUsingNetworkDidChangeNotification
MPNetworkObserverIsMusicCellularStreamingAllowedDidChangeNotification
MPNetworkObserverIsVideoCellularStreamingAllowedDidChangeNotification
MPNetworkObserverIsMusicCellularDownloadingAllowedDidChangeNotification
MusicAllowsCellularData
AllowsCellularDataDownloads
isUsingNetwork
musicCellularStreamingAllowed
TB,N,GisMusicCellularStreamingAllowed
videoCellularStreamingAllowed
TB,N,GisVideoCellularStreamingAllowed
musicCellularDownloadingAllowed
TB,N,GisMusicCellularDownloadingAllowed
storeCellularNetworkingAllowed
TB,R,N,GisStoreCellularNetworkingAllowed
com.apple.itunesstored
AllowAutoDownloadOnCellular
-[MPNetworkObserver setMusicCellularDownloadingAllowed:]
com.apple.Music-AllowsCellularDataDownloads
CellularDataMode
-[MPNetworkObserver setMusicCellularStreamingAllowed:]
com.apple.mobileipod.playbackPreferencesChanged-MusicAllowsCellularData
com.apple.MediaPlayer.MPNetworkObserver
com.apple.videos-preferences-changed
v12@?0i8
-init is not supported, use +sharedNetworkObserver
MPNetworkObserverInitException
sharedNetworkObserver
T@"MPNetworkObserver",R,N
v32@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16@"MPIdentifierSet<MPMutableIdentifierSet>"24
v32@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16@"NSMutableDictionary"24
@24@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16
itunesNotes.standard
itunesNotes.short
children.offers.type
@max.self
contentRatingsBySystem.riaa.value
children.contentRatingsBySystem.riaa.value
@min.self
@max.children.trackNumber
@count.children
composer.name
offers.type
assets.@max.duration
mpIsOnlyAC3
mpIsSDH
removeFollower
__localRepresentativeItem
artistID
childrenIdsByAlbumOrder
description.long
description.standard
studioName
multi
itunes
shortFilm
standardAudio
plusAudio
sdVideoWithPlusAudio
hdMusicVideo
collectionRepresentativeItem
T@"MPMediaItem",&,N,V_collectionRepresentativeItem
mpIsPersonalizedOffer
@"NSDictionary"24@?0@"NSDictionary"8q16
!$%.2f
v32@?0@8@"NSDictionary"16^B24
v32@?0@"NSNumber"8Q16^B24
q24@?0@"NSDictionary"8@"NSDictionary"16
v32@?0@"NSString"8Q16^B24
@24@?0@"NSString"8^@16
@16@?0@?<@@?@"NSString"^@>8
yyyy-MM-dd
studio
CMC-showNonCompletionOffers
CMC-verboseLogging
v16@?0@"MPModelForYouRecommendationItem"8
v16@?0@"MPModelPlaylist"8
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
endpoints
T@"NSMutableDictionary",&,N,V_endpoints
discoverySessionConfiguration
T@"MRAVRoutingDiscoverySessionConfiguration",R,N
MPAVEndpointRoutingDataSource.m
com.apple.MediaPlayer.MPAVEndpointRoutingDataSource/serialQueue
v16@?0^{__CFArray=}8
nullRef
TB,N,GisNullRef,V_nullRef
refValue
Tr^v,R,N,V_refValue
startHandler
T@?,R,C,N,V_startHandler
storeAccountIdentifier
T@"NSNumber",R,C,N,V_storeAccountIdentifier
ColorSyncProfileCopyData
/System/Library/PrivateFrameworks/ColorSync.framework/ColorSync
ColorSyncProfileCreateWithName
kColorSyncSRGBProfile
T@"NSObject<OS_dispatch_queue>",R,&,N,V_queue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_serviceQueue
uppServiceProxy
T@"SBCPlaybackPositionSyncService",&,N,V_uppServiceProxy
uppDomain
T@"SBCPlaybackPositionDomain",&,N,V_uppDomain
serviceActive
TB,N,GisServiceActive,V_isServiceActive
beganUsingPlaybackPositionMetadata
TB,N,GisServiceActive,V_beganUsingPlaybackPositionMetadata
databaseHasBookmarkableContents
TB,N,V_databaseHasBookmarkableContents
applicationBecomingActive
TB,R,N,V_applicationBecomingActive
externallyActive
TB,N,V_externallyActive
SBCPlaybackPositionService
/System/Library/PrivateFrameworks/StoreBookkeeperClient.framework/StoreBookkeeperClient
SBCPlaybackPositionDomain
SBCPlaybackPositionEntity
v28@?0B8@"NSError"12@"NSArray"20
v32@?0@"SBCPlaybackPositionEntity"8Q16^B24
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4018.200.29.1/MediaPlayer/Core/StoreBookkeeper Support/_ios_tvos_watchos/MPUbiquitousPlaybackPositionController.m
MP_onServiceQueue_resignActiveService
com.apple.%@.serviceQueue.%p
com.apple.%@.queue.%p
sharedUbiquitousPlaybackPositionController
T@"MPUbiquitousPlaybackPositionController",R,N
disableUPP
ratingLevel
Tq,N,V_ratingLevel
ratingLabel
T@"NSString",C,N,V_ratingLabel
ratingSystem
TQ,N,V_ratingSystem
ratingDescription
T@"NSString",C,N,V_ratingDescription
restrictedContent
TB,R,N,GisRestrictedContent
restrictedPurchase
TB,R,N,GisRestrictedPurchase
mediaPropertyContentRatingValue
MPStoreOfferContentRatingDictionary
system
clientId
apple
us-cable
jp-tv
au-tv
ca-tv
de-tv
fr-tv
uk-tv
us-tv
pt-movies
dk-movies
no-movies
fi-movies
se-movies
mx-movies
lu-movies
nl-movies
be-movies
gr-movies
it-movies
es-movies
ch-movies
nz-oflc
jp-eirin
au-oflc
ie-ifco
ca-chvrs
de-fsk
fr-cnc
bbfc
mpaa
games
esrb
itunes-games
_MPContentItemDidChangeNotification
_MPContentItemDidChangeUserInfoKeyDeltaItem
_MPContentItemDidChangeUserInfoKeyImmediately
_mediaRemoteContentItem
T^v,R,N,V_mediaRemoteContentItem
subtitle
playbackProgress
streamingContent
TB,N,GisStreamingContent
TB,N,GisExplicitContent
container
TB,N,GisContainer
playable
TB,N,GisPlayable
v32@?0@"NSData"8{CGSize=dd}16
_MPContentItemNotificationsImmediateKey
_MPContentItemNotificationsSuppressedKey
<%@: %p id=%@ title="%@">
Can't create an MPContentItem object with a nil identifier.
MPContentItem.m
unfollowProfile
localFilePath
T@"NSString",C,N,V_localFilePath
T@"NSArray",C,N,V_sinfs
Tq,R,N,V_currentStatus
T{MPLibraryAddStatusObserverConfiguration=BBBBB},R,N,V_configuration
T@"MPModelObject",R,N,V_identifyingModelObject
MP_lightness
MPRadioLibraryErrorDomain
MPRadioLibraryStationsDidChangeNotification
isEnabled
stationCount
RadioModel
/System/Library/PrivateFrameworks/Radio.framework/Radio
v32@?0@"RadioStation"8Q16@"NSError"24
RadioAddStationRequest
RadioModelDidChangeNotification
storeItemMetadata
T@"MPStoreItemMetadata",&,N,V_storeItemMetadata
_MPStorePlatformDictionary
TQ,R,N,V_persistentID
T{CGSize=dd},R,N,V_size
T@"HSHomeSharingLibrary",&,N,V_library
UserDefault[%@]
Clear
Reset
AutoPlay
public.main-program-content
public.auxiliary-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.accessibility.describes-video
public.easy-to-read
public.translation
public.translation.dubbed
public.translation.voice-over
mrLanguageOption
T^v,R,N,V_mrLanguageOption
languageOptionType
languageTag
T@"NSString",R,D,N
languageOptionCharacteristics
mrLanguageOptionGroup
T^v,R,N,V_mrLanguageOptionGroup
languageOptions
defaultLanguageOption
T@"MPNowPlayingInfoLanguageOption",R,D,N
allowEmptySelection
TB,R,D,N
T@"NSString",C,N,V_stationStringID
Tq,N,V_uniqueIdentifier
localizedName
T@"NSString",C,N,V_localizedName
localizedDescription
T@"NSString",C,N,V_localizedDescription
expectedNotifications
T@"NSSet",R,N,V_expectedNotifications
receivedNotifications
T@"NSMutableSet",&,N,V_receivedNotifications
notificationTimer
T@"NSObject<OS_dispatch_source>",&,N,V_notificationTimer
T@"<_MPActiveUserChangeMonitorDelegate>",W,N,V_delegate
Must provide a reason for logging.
_MPActiveUserChangeMonitor.m
Cancel existing timer before starting a new one.
Received %@
MPRemoteCommandTargetsDidChangeNotification
commandCenterDelegate
T@"<MPRemoteCommandDelegate_Internal>",W,N,V_commandCenterDelegate
observing
TB,N,GisObserving,V_observing
hasTargets
supportedAndEnabled
TB,R,N,GisSupportedAndEnabled
mediaRemoteCommandType
TI,R,N,V_mediaRemoteCommandType
T@"<MPRemoteCommandDelegate_Private>",W,N,V_delegate
skipSerializedEventDelivery
TB,N,V_skipSerializedEventDelivery
TB,N,GisEnabled,V_enabled
v32@?0@"NSString"8@?<v@?@"MPRemoteCommandEvent"@?<v@?q>>16^B24
v16@?0q8
MPRemoteCommand.m
{bool}
{BOOL}
{public}
Command handler completion deallocated without being called. event=%{public}@
v24@?0@"MPRemoteCommandEvent"8@?<v@?q>16
%p:%s
Unsupported action method signature. Must return MPRemoteCommandHandlerStatus or take a completion handler as the second argument.
v16@?0@?<v@?q>8
<%@: %p name=%@ type=%ld>
com.apple.MediaPlayer/%@
preferredIntervals
T@"NSArray",C,N,V_preferredIntervals
TB,N,GisActive,V_active
localizedShortTitle
T@"NSString",C,N,V_localizedShortTitle
minimumRating
Tf,N,V_minimumRating
maximumRating
Tf,N,V_maximumRating
supportedPlaybackRates
T@"NSArray",C,N,V_supportedPlaybackRates
currentRepeatType
Tq,N,V_currentRepeatType
currentShuffleType
Tq,N,V_currentShuffleType
MPSystemAppSpecializedQueueProminentStationIdentifier
upNextItemCount
Tq,N,V_upNextItemCount
com.apple.MediaPlayer.MPSetPlaybackQueueCommand/serialQueue
canBeControlledByScrubbing
TB,N,V_canBeControlledByScrubbing
com.apple.MediaPlayer.MPInsertIntoPlaybackQueueCommand/serialQueue
currentPlaybackSessionIdentifier
T@"NSString",C,N,V_currentPlaybackSessionIdentifier
currentPlaybackSessionRevision
T@"NSString",C,N,V_currentPlaybackSessionRevision
exportableSessionTypes
T@"NSArray",C,N,V_exportableSessionTypes
supportedSessionTypes
T@"NSArray",C,N,V_supportedSessionTypes
preloadedSessions
T@"NSDictionary",C,N,V_preloadedSessions
kMRMediaRemoteCommandInfoPreloadedPlaybackSessions
currentQueueEndAction
Tq,N,V_currentQueueEndAction
supportedQueueEndActions
T@"NSArray",C,N,V_supportedQueueEndActions
groupType
lastUpdatedDate
T@"NSDate",&,D,N
sectionedItems
T@"MPSectionedCollection",&,D,N
sectionIndex
subgroups
refreshURL
groupRecommendation
TB,N,GisGroupRecommendation,V_groupRecommendation
displaysAsGridCellInCarPlay
MPModelForYouRecommendationGroupPropertyDisplaysAsGridCellInCarPlay
MPModelForYouRecommendationGroupPropertyRefreshURL
MPModelForYouRecommendationGroupPropertyLoadAdditionalContentURL
MPModelForYouRecommendationGroupPropertyTitle
MPModelForYouRecommendationGroupPropertySubgroups
MPModelForYouRecommendationGroupPropertySectionIndex
MPModelForYouRecommendationGroupPropertySectionedItems
MPModelForYouRecommendationGroupPropertyLastUpdatedDate
MPModelForYouRecommendationGroupPropertyGroupType
recommendation group
socialContributor
_artworkCatalog
T@"MPArtworkCatalog",&,D,N
playlist entry %@+%@
_MPModelPropertyPlaylistEntryArtwork
MPModelRelationshipPlaylistEntrySocialContributor
MPModelRelationshipPlaylistEntryMovie
MPModelRelationshipPlaylistEntryTVEpisode
MPModelRelationshipPlaylistEntrySong
MPModelRelationshipPlaylistEntryPlaylist
MPModelPropertyPlaylistEntryPosition
kinds
T@"NSArray",R,N,V_kinds
playlist entries of (%@)
v16@?0@"MPModelPlaylistEntryKind"8
PlaylistEntry:k
rawResponseOutput
T@,R,N,V_rawResponseOutput
T{?=BB},R,N,V_options
previousParser
T@"MPModelStoreBrowseResponseParser",R,N,V_previousParser
additionalStoreItemMetadataResponse
T@"MPStoreItemMetadataResponse",R,N,V_additionalStoreItemMetadataResponse
sectionBuilder
T@"MPModelStoreBrowseSectionBuilder",R,N,V_sectionBuilder
contentItemBuilder
T@"MPModelStoreBrowseContentItemBuilder",R,N,V_contentItemBuilder
T@"MPChangeDetails",R,N,V_changeDetails
additionalContentIdentifiers
allAdditionalContentIdentifiersNeedingLookup
v32@?0@8@16^B24
unAvailableContentIds
v16@?0@"MPChangeDetails"8
v32@?0@"MPModelStoreBrowseSection"8q16^B24
v32@?0@"NSString"8q16^B24
pageTitle
kindIds
content
fcKind
selectedChart
fcStructure
pageData
accountIdentifier
T@"NSNumber",C,N,V_accountIdentifier
enqueuerAccountIdentifier
T@"NSNumber",C,N,V_enqueuerAccountIdentifier
TB,N,GisPersonalized,V_personalized
T@"NSString",C,N,V_storefrontIdentifier
%@: [Account: %@, Enqueuer: %@, Personalized? %d, Storefront: %@]
v24@?0@"NSURLRequest"8@"NSError"16
https:///
com.apple.MediaPlayer.MPStoreItemMetadataCacheKey
v16@?0@"MPStoreItemMetadataCacheKey"8
hasProperty
T@"NSString",&,N,V_property
hasValue
T@"MPPMediaPredicateValue",&,N,V_value
hasComparisonType
Ti,N,V_comparisonType
MPModelStoreBrowseSectionPropertyTitle
MPModelStoreBrowseSectionPropertyType
MPModelStoreBrowseSectionPropertyLoadAdditionalContentURL
MPModelStoreBrowseSectionPropertyUniformContentItemType
MPModelStoreBrowseSectionPropertyMemberOfChartSet
MPModelStoreBrowseSectionPropertyBrick
MPModelStoreBrowseSectionPropertyPreviouslyRetrievedNestedResponse
MPModelStoreBrowseSectionPropertyDisplaysAsGridCellInCarPlay
MPModelStoreBrowseSectionRelationshipRadioStation
sectionType
uniformContentItemType
memberOfChartSet
TB,D,N,GisMemberOfChartSet
brick
TB,D,N,GisBrick
previouslyRetrievedNestedResponse
T@"MPModelStoreBrowseResponse",&,D,N
containsOnlyEditorialElements
TB,N,V_containsOnlyEditorialElements
T@"NSSet",R,N,V_properties
T@"NSDictionary",R,N,V_relationships
<EMPTY>
MPPropertySetRelationships
MPPropertySetProperties
relationship
%@: %@%@
;%@%lu %@
finalResponse
TB,N,GisFinalResponse,V_finalResponse
cacheMissItemIdentifiers
T@"NSArray",C,N,V_cacheMissItemIdentifiers
requestItemIdentifiers
T@"NSArray",C,N,V_requestItemIdentifiers
lastBatchItemIdentifiers
T@"NSArray",C,N,V_lastBatchItemIdentifiers
allStoreItemDictionaries
earliestExpirationDate
v32@?0@"NSString"8@"MPStoreItemMetadata"16^B24
opengles-2
fakeTVOutCable
number
episodesCount
representativeEpisode
Season %ld 
MPModelPropertyTVSeasonNumber
TV season %@
MPModelPropertyTVSeasonDownloadedDate
MPModelPropertyTVSeasonArtwork
MPModelRelationshipTVSeasonRepresentativeEpisode
MPModelRelationshipTVSeasonShow
MPModelPropertyTVSeasonSortType
MPModelPropertyTVSeasonLibraryAddEligible
MPModelPropertyTVSeasonLibraryAdded
MPModelPropertyTVSeasonLibraryAddedDate
MPModelPropertyTVSeasonHasExplicitContent
MPModelPropertyTVSeasonHasCleanContent
MPModelPropertyTVSeasonEpisodesCount
MPModelPropertyTVSeasonYear
MPModelPropertyTVSeasonDescriptionText
T@"MPModelTVEpisodeKind",R,N,V_episodeKind
seasons with %@
v16@?0@"MPModelTVSeasonKind"8
TVSeason:e%p
Tq,N,SsetAVItemType:
scopes
T@"NSArray",C,N,V_scopes
maximumResultsPerScope
Tq,N,V_maximumResultsPerScope
MPModelLibrarySearchRequestSearchString
MPModelLibrarySearchRequestScopes
MPModelLibrarySearchRequestMaximumResultsPerScope
, scopes = %@
, searchString = %@
advertisementView
T@"UIView",R,N,V_advertisementView
fullscreenView
playbackErrorDescription
T@"NSString",C,N,V_playbackErrorDescription
TB,N,V_navigationBarHidden
subtitlesView
T@"UIView",R,N,V_subtitlesView
videoOverlayStyle
Tq,N,V_videoOverlayStyle
TB,N,V_allowsDetailScrubbing
TB,N,V_alwaysAllowHidingControlsOverlay
TB,N,V_attemptAutoPlayWhenControlsHidden
T@"UIView",R,N,V_backgroundView
TB,N,V_canAnimateControlsOverlay
TB,N,V_canShowControlsOverlay
TB,N,V_controlsOverlayVisible
TB,N,V_disableAutoRotation
TB,N,V_displayPlaybackErrorAlerts
TB,N,V_inlinePlaybackUsesTVOut
TB,N,V_TVOutEnabled
MPInlineVideoTransitionToFullscreen
MPInlineVideoTransitionFromFullscreen
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4018.200.29.1/MediaPlayer/Playback/Deprecated UI/_ios/MPInlineVideoController.m
MPInlineVideoChaptersHide
resultContainers
T@"NSArray",R,C,N,V_resultContainers
entityQueryResult
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_entityQueryResult
scope
T@"MPModelLibrarySearchScope",R,C,N,V_scope
entityTranslationContext
T@"MPMediaLibraryEntityTranslationContext",R,N,V_entityTranslationContext
unknown property type
storeID
cloudID
cloudUniversalLibraryID
excludeFromShuffle
subscriptionStoreID
storeCloudAlbumID
syncID
userRating
title
titleOrder
trackNumber
hasTrackNumber
classicalMovement
classicalMovementNumber
volumeNormalization
durationInSamples
gaplessHeuristicInfo
gaplessEncodingDelay
gaplessEncodingDrain
gaplessLastFrameResync
relativeVolume
time
itemPID
mediaType
availableArtworkToken
fetchableArtworkToken
fetchableArtworkSourceType
libraryAdded
downloadedDate
datePlayed
hasNonPurgeableAsset
isStoreRedownloadable
keepLocal
keepLocalStatus
location
baseLocationPath
hasStreamingAsset
protected
hasLoFiStreamingAsset
homeSharingID
matchRedownloadParams
purchaseHistoryRedownloadParams
storeCloudID
purchaseHistoryID
cloudAssetAvailable
cloudStatus
endpointType
storeAdamID
isAUC
episodeType
hasTitle
dateReleased
datePlayedLocal
representativeItemExplicit
appData
globalID
name
nameOrder
isTracklistUserEditable
isSmart
isGenius
isSubscribed
shareURL
playlistPID
isHidden
dateModified
isFolder
shouldDisplayIndex
externalVendorName
hasName
artistPID
artistAvailableArtworkToken
artistFetchableArtworkToken
artistFetchableArtworkSourceType
itemPid
position
cloudKVSBookmarkTime
cloudKVSKey
startTime
stopTime
cloudKVSHasBeenPlayed
cloudKVSPlayCount
feedURL
externalGUID
movieInfoPlist
sortID
subOrder
sortType
imageURL
@"MPArtworkCatalog"16@?0@"MPModelObject"8
height
width
v64@?0@"MPMediaLibraryEntityTranslationContext"8{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}40@"MPIdentifierSet<MPMutableIdentifierSet>"56
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
{vector<std::__1::shared_ptr<mlcore::Predicate>, std::__1::allocator<std::__1::shared_ptr<mlcore::Predicate> > >=^{shared_ptr<mlcore::Predicate>}^{shared_ptr<mlcore::Predicate>}{__compressed_pair<std::__1::shared_ptr<mlcore::Predicate> *, std::__1::allocator<std::__1::shared_ptr<mlcore::Predicate> > >=^{shared_ptr<mlcore::Predicate>}}}16@?0@"NSArray"8
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}32@?0@"MPMediaLibraryEntityTranslationContext"8{shared_ptr<mlcore::LibraryView>=^{LibraryView}^{__shared_weak_count}}16
void _MPMLInitPropertyTVShowMap()_block_invoke_4
Must have TV Show kind to generate TV Show entity query.
MPMediaLibraryTranslatorSchema.mm
void _MPMLInitPropertyTVSeasonMap()_block_invoke_4
_MPMLInitPropertyTVSeasonMap_block_invoke_4
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4018.200.29.1/MediaPlayer/Model/Translators/MediaLibraryCore/_ios_watchos_tvos/MPMediaLibraryTranslatorSchema.mm
Must have TV Season kind to generate TV Season entity query.
void _MPMLInitPropertyTVEpisodeMap()_block_invoke_5
_MPMLInitPropertyTVEpisodeMap_block_invoke_5
Must have TV Episode kind to generate TV Episode entity query.
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
void _MPMLInitPropertyMovieMap()_block_invoke_5
Must have Movie kind to generate Movie entity query.
void _MPMLInitPropertyPodcastEpisodeMap()_block_invoke_4
_MPMLInitPropertyPodcastEpisodeMap_block_invoke_4
Must have Podcast Episode kind to generate Podcast Episode entity query.
void _MPMLInitPropertyPodcastMap()_block_invoke_3
Must have podcast kind to generate podcast entity query.
B40@?0@"MPMediaLibraryEntityTranslationContext"8^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24
void _MPMLInitPropertyPlaylistEntryMap()_block_invoke_5
library()->isValid()
performQuery
/System/Volumes/Data/SWE/iOS/BuildRoots/BuildRoot857/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator14.2.Internal.sdk/System/Library/PrivateFrameworks/MediaLibraryCore.framework/PrivateHeaders/LibraryView.hpp
Library must be validated before use
Must have PlaylistEntry kind to generate PlaylistEntry entity query.
Attempted to query playlist entries without scoping to a playlist.
void _MPMLInitPropertyGenreMap()_block_invoke_3
Must have Genre kind to generate Genre entity query.
void _MPMLInitPropertyComposerMap()_block_invoke_3
Must have composer kind to generate composer entity query.
void _MPMLInitPropertyArtistMap()_block_invoke_4
Must have artist kind to generate artist entity query.
@"NSArray"16@?0Q8
void _MPMLInitPropertyPlaylistMap()_block_invoke_5
Must have playlist kind to generate playlist entity query.
@"NSNumber"24@?0@"MPModelAlbum"8@"MPIdentifierSet"16
void _MPMLInitPropertyAlbumMap()_block_invoke_4
_MPMLInitPropertyAlbumMap_block_invoke_4
Must have album kind to generate album entity query.
void _MPMLInitPropertySongMap()_block_invoke
_MPMLInitPropertySongMap_block_invoke
Must have song kind to generate song entity query.
Multiple alert controllers assigned to the same window: %@
MPModalPresentationWindow.m
fallbackCache
T@"NSCache",&,N,V_fallbackCache
artworkResizeUtility
T@"MPArtworkResizeUtility",&,N,V_artworkResizeUtility
MPArtworkResizeDomain
Image did not exist at URL: %@
v24@?0@"UIImage"8@"NSError"16
v16@?0@"NSError"8
catalogIdentifier
T@,C,N,V_catalogIdentifier
v24@?0@8@"NSError"16
ColorAnalysis
T@"NSString",R,N,V_availableArtworkToken
T@"NSString",R,N,V_fetchableArtworkToken
; fetchableArtworkToken = %@
; availableArtworkToken = %@
; artworkType = %@
screenshot
chapter
artist-hero
v24@?0@"MPArtworkRepresentation"8@"NSError"16
v24@?0@"MPMediaLibraryArtwork"8@"NSError"16
blockSocialUser
filePath
nonPurgeable
TB,D,N,GisNonPurgeable
purchaseBundleFilePath
qualityType
MPModelPropertyFileAssetPurchaseBundleFilePath
MPModelPropertyFileAssetProtectionType
MPModelPropertyFileAssetQualityType
MPModelPropertyFileAssetNonPurgeable
MPModelPropertyFileAssetFilePath
MPModelPropertyFileAssetFileSize
file asset
applicationOutputContext
T@"MPMRAVOutputContextWrapper",&,N,V_applicationOutputContext
TB,N,V_supportsMultipleSelection
detachesRoutesToGroup
TB,N,V_detachesRoutesToGroup
supportsQueueHandoff
TB,N,V_supportsQueueHandoff
initiator
T@"NSString",&,N,V_initiator
supportsRoutePrediction
TB,N,V_supportsRoutePrediction
RouteUID
must be an MPAVOutputDeviceRoute
MPAVOutputDeviceRoutingDataSource.m
v16@?0^{__CFError=}8
invalid class for %@
v24@?0@"MRAVEndpoint"8@"NSError"16
invalid class for %@ (%@)
v32@?0^{__CFArray=}8^v16^{__CFError=}24
Analytics: Picked endpoint route, clear system endpoint
B24@?0@"MPAVRoute"8@"NSDictionary"16
q24@?0@8@16
com.apple.MediaPlayer.MPAVOutputDeviceRoutingDataSource/serialQueue
masterController
T@"MPInlineVideoController",W,N,V_masterController
com.apple.mobilesafari
externalMediaContentIdentifier
v40@?0@"UAUserActivity"8@16@"NSString"24@?<v@?@"NSString"@"NSData"^@B>32
UAPayloadIdentifierExternalMediaContentBundleIdentifier
UAPayloadIdentifierExternalMediaContentIdentifier
scrubbingControl
T@"UIControl<MPDetailedScrubbing>",W,N,V_scrubbingControl
T@"<MPDetailScrubControllerDelegate>",W,N,V_delegate
scrubbingVerticalRange
Td,N,V_scrubbingVerticalRange
detailedScrubbingEnabled
TB,N,V_detailedScrubbingEnabled
durationAllowsForDetailedScrubbing
isTracking
TB,R,N,V_isTracking
currentScrubSpeed
Tq,R,N,V_currentScrubSpeed
-init is invalid. Use -initWithScrubbingControl: instead.
requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
v16@?0@"MPModelGenericObject"8
v16@?0@"MPModelSong"8
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
No personalization properties for modelClass: %@
MPStoreLibraryPersonalizationContentDescriptor.m
Tq,R,N,V_personalizationStyle
cfUserNotification
T^{__CFUserNotification=},R,N,V_cfUserNotification
willShowNotificationHandler
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4018.200.29.1/MediaPlayer/UI/_ios_tvos_watchos/MPUserNotification.m
MPUserNotification.responseCompletionHandlerInvocation
com.apple.MediaPlayer.MPUserNotification.accessQueue
com.apple.MediaPlayer.MPUserNotification.callbackInvocationQueue
MPUserNotification.m
com.apple.MediaPlayer.MPUserNotification.userNotificationConversionAccessQueue
-[MPMediaEntityCache _entityWithIdentifier:mediaEntityType:collectionGroupingType:loadEntityBlock:]
v16@?0^{map<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >={__tree<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true> >=Q}}}8
Invalid entity
MPMediaEntityCache.mm
v16@?0r^{map<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >={__tree<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true> >=Q}}}8
map::at:  key not found
com.apple.MediaPlayer.MPMediaEntityCache/deallocLaterQueue
T@"MPAVRouteConnection",&,N
endpoint
endpointWrapper
T@"MPMRAVEndpointWrapper",&,N,V_endpointWrapper
sortName
canModifyGroupMembership
MPAVEndpointRoute.m
 connection=%@
com.apple.mediaplayer.MPAVEndpointRoute/accessQueue
com.apple.mediaplayer.MPAVEndpointRoute/calloutQueue
localEndpoint
v16@?0^v8
deleteSocialPost
musicConnect
deleteComment
v16@?0@"NSDictionary"8
reportConcern
musicCommon
reasonsForArtistPost
reasonsForSocialProfile
reasonsForSharedPlaylist
reasonsForUserComment
reasonsForArtistComment
displayText
T@"NSString",C,N,V_displayText
userID
T@"NSString",C,N,V_userID
contentID
T@"NSString",C,N,V_contentID
concernItemType
Tq,N,V_concernItemType
commentText
T@"NSString",C,N,V_commentText
aucType
T@"NSString",C,N,V_aucType
concernTypeID
T@"NSString",C,N,V_concernTypeID
<%@: %p %@:'%@'>
v24@?0@"ICURLBag"8@"NSError"16
v16@?0@"ICAsyncBlockOperation"8
v24@?0@"ICURLResponse"8@"NSError"16
commentId
concernItemAUCType
concernItemId
concernTypeId
ARTIST_POST
ARTIST_COMMENT
USER_COMMENT
PUBLIC_PLAYLIST
SOCIAL_PROFILE
com.apple.MediaPlayer.MPStoreContentReporter.operationQueue
sharedReporter
T@"MPStoreContentReporter",R,N
cacheID
T@"NSString",R,N,V_cacheID
AFAnalyticsEventTypeMusicPlaybackAssetLoad
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subtitle
artworkImageData
T@"NSData",R,C,N,V_artworkImageData
<%@: %p. title=%@ subtitle=%@ artworkImageData=%@ storage=%@>
T@"MPMediaItem",&,N,V_mediaItem
Tq,N,V_keepLocal
T@"MPModelLibraryKeepLocalChangeRequest",C,N,V_request
v24@?0@"MPStoreLibraryMappingResponse"8@"NSError"16
MPAVRoutingDataSourceActiveAudioRouteDidChangeNotification
MPAVRoutingDataSourceRoutesDidChangeNotification
MPAVRoutingDataSourceVolumeControlAvailabilityDidChangeNotification
MPAVRoutingDataSourceExternalScreenTypeDidChangeNotification
MPAVRoutingDataSourceFailureNotification
Route
VolumeControlAvailability
ExternalScreenType
TB,R,N,V_devicePresenceDetected
filterMode
Tq,N,V_filterMode
%@ is abstract
v12@?0C8
v12@?0I8
com.apple.MediaPlayer.MPAVRoutingDataSource/serialQueue
MPModelPropertyStoreAssetNeedsUserUpload
MPModelPropertyStoreAssetEndpointType
MPModelPropertyStoreAssetRedownloadParameters
MPModelPropertyStoreAssetRedownloadable
MPModelPropertyStoreAssetAccountIdentifier
MPModelPropertyStoreAssetShouldReportPlayEvents
MPModelPropertyStoreAssetSubscriptionRequired
redownloadable
TB,D,N,GisRedownloadable
needsUserUpload
playlistGlobalID
T@"NSString",R,N,V_playlistGlobalID
tasteType
Tq,R,N,V_tasteType
UUID
T@"NSUUID",R,N,V_UUID
creator
T@"MPModelTVShowCreator",C,D,N
shortTitle
MPModelPropertyTVShowTitle
TV show %@
MPModelPropertyTVShowTagline
MPModelPropertyTVShowEpisodeCount
MPModelPropertyTVShowEditorialArtwork
MPModelPropertyTVShowArtwork
MPModelRelationshipTVShowCreator
MPModelPropertyTVShowShortEditorNotes
MPModelPropertyTVShowEditorNotes
MPModelPropertyTVShowShortTitle
seasonKind
T@"MPModelTVSeasonKind",R,C,N,V_seasonKind
shows with %@
v16@?0@"MPModelTVShowKind"8
TVShow:s%p
hasShouldContain
TB,N,V_shouldContain
persistentIDsCount
T^q,R,N
idx (%ld) is out of range (%ld)
artworkInfo
T@"ICStoreArtworkInfo",R,N
resolvedURLString
T@"NSString",C,N,V_resolvedURLString
artworkTemplateItems
T@"NSArray",C,N,V_artworkTemplateItems
TQ,N,V_mediaType
mediaLibraryArtworkType
Tq,N,V_mediaLibraryArtworkType
<%@: %p resolvedURL:%@ artworkTemplateItems:%@ mediaType:%ld artworkType:%ld>
Ti,N,V_type
hasIntegerPredicateValue
integerPredicateValue
Tq,N,V_integerPredicateValue
hasDoublePredicateValue
doublePredicateValue
Td,N,V_doublePredicateValue
hasFloatPredicateValue
floatPredicateValue
Tf,N,V_floatPredicateValue
hasBoolPredicateValue
boolPredicateValue
TB,N,V_boolPredicateValue
hasStringPredicateValue
stringPredicateValue
T@"NSString",&,N,V_stringPredicateValue
hasBytesPredicateValue
bytesPredicateValue
T@"NSData",&,N,V_bytesPredicateValue
uncensoredName
biography
TB,D,N,GisPrivate
verified
TB,D,N,GisVerified
pendingRequestsCount
social person
MPModelPropertySocialPersonArtwork
MPModelPropertySocialPersonPendingRequestsCount
MPModelPropertySocialPersonIsVerified
MPModelPropertySocialPersonIsPrivate
MPModelPropertySocialPersonBiography
MPModelPropertySocialPersonHandle
MPModelPropertySocialPersonUncensoredName
edgeInsets
T{UIEdgeInsets=dddd},N,V_edgeInsets
VideoPlayer_External
nowPlaying
T@"MPMusicPlayerControllerNowPlaying",&,N
T@"MPMusicPlayerQueueDescriptor",&,N
hasCachedData
musicPlayerStateRestorationCache-queueDescriptor
musicPlayerStateRestorationCache-nowPlaying
T@"MPMusicPlayerControllerSystemCache",R,N
titleInsets
T{UIEdgeInsets=dddd},N,V_titleInsets
musicFriends
MPStoreSocialErrorDomain
MPStoreSocialServiceControllerTransientStatesDidChangeNotification
MPStoreSocialServiceControllerTransientStatesSnapshotKey
_MPStoreSocialTransientStateDidChangeNotification
v16@?0@"_MPStoreSocialTransientState"8
T@"MPModelSocialPerson",R,N,V_person
followState
followPendingRequestState
completionBlock
T@?,C,N,V_completionBlock
com.apple.MediaPlayer._MPStoreSocialTransientState.accessQueue
com.apple.MediaPlayer._MPStoreSocialTransientState.calloutQueue
v24@?0@"_MPStoreSocialTransientState"8^B16
v24@?0q8@"NSError"16
com.apple.MediaPlayer.MPStoreSocialServiceController.accessQueue
com.apple.MediaPlayer.MPStoreSocialServiceController.operationQueue
propertiesToFetchMap
T{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >=^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}^{__shared_weak_count}},N,V_propertiesToFetchMap
propertiesToSortMap
T{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >=^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}^{__shared_weak_count}},N,V_propertiesToSortMap
sortTransformer
T@?,C,N,V_sortTransformer
valueTransformer
T@?,C,N,V_valueTransformer
transient
TB,R,N,GisTransient,V_transient
entityClass
T^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=q[56c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}},R,N,V_entityClass
allowedItemPredicatesBlock
T@?,C,N,V_allowedItemPredicatesBlock
entityQueryBlock
T@?,C,N,V_entityQueryBlock
v32@?0@"NSString"8@"MPPropertySet"16^B24
Relationship mapping missing for %@:%@
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Property translator mapping missing for %@:%@
Property mapping missing for %@:%@
MPMediaLibraryEntityTranslator.mm
_default
v16@?0@"MPModelObject"8
Sort descriptor missing transformer: %@
Sort descriptor must have at least one key.
v32@?0@"NSString"8@"NSString"16^B24
All relatedProperties must have the same number of core sort descriptors.
MPModelGenericObject can only be sorted by MPMulitSortDescriptor.
%@ entityQueryBlock did not return a query.
No entityQueryBlock was mapped for %@
relationshipModelClass
T#,N,V_relationshipModelClass
TB,N,V_transient
foreignPropertyBase
T^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}},N,V_foreignPropertyBase
relationshipValidationProperties
T{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >=^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}^{__shared_weak_count}},N,V_relationshipValidationProperties
validRelationshipHandler
T@?,C,N,V_validRelationshipHandler
entityTranslator
T@"MPMediaLibraryEntityTranslator",R,N
joinProperty
{vector<mlcore::SortDescriptor, std::__1::allocator<mlcore::SortDescriptor> >=^{SortDescriptor}^{SortDescriptor}{__compressed_pair<mlcore::SortDescriptor *, std::__1::allocator<mlcore::SortDescriptor> >=^{SortDescriptor}}}40@?0{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}8@"NSSortDescriptor"32
Sorting by %@ is ambiguous, please define sortTransformer.
property
@56@?0@"MPMediaLibraryEntityTranslationContext"8{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}40
Missing generic object kind relationship for %@.
+[MPMediaLibraryEntityTranslator _translatorForMPModelClass:mlcoreEntityClass:create:transient:]
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4018.200.29.1/MediaPlayer/Model/Translators/MediaLibraryCore/_ios_watchos_tvos/MPMediaLibraryEntityTranslator.mm
MPModelClass && (entityClass || transient)
allowedEntityIdentifiers
T@"NSArray",&,N,V_allowedEntityIdentifiers
T@"NSArray",&,N,V_scopedContainers
multiQuery
TB,N,GisMultiQuery,V_multiQuery
modelKind
T@"MPModelKind",&,N,V_modelKind
T@"NSString",&,N,V_personID
T@"NSString",&,N,V_filterText
v16@?0@"MPModelMovie"8
@"MPArtworkCatalog"16@?0@"MPModelMovie"8
T@"NSString",C,N,V_containerUniqueID
handoffCorrelationID
T@"NSString",C,N,V_handoffCorrelationID
lyricsID
T@"NSString",C,N,V_lyricsID
shouldExcludeFromShuffle
TB,N,V_shouldExcludeFromShuffle
TB,N,GisPlaceholder,V_placeholder
vendorID
T@"NSString",C,N,V_vendorID
needsPersonalization
deviceLibraryPersistentID
radioStationStringID
radioStationID
Tq,N,V_syncID
T@"NSString",C,N,V_socialProfileID
radioStationHash
storeRecommendationID
informalMediaClipID
T@"NSString",C,N,V_informalMediaClipID
informalStaticAssetID
T@"NSString",C,N,V_informalStaticAssetID
T@"MPModelKind",R,N,V_modelKind
T@"<MPLocalLibraryIdentifiers>",R,N
personalizedStore
T@"<MPPersonalStoreIdentifiers>",R,N
universalStore
T@"<MPUniversalStoreIdentifiers>",R,N
radio
T@"<MPRadioIdentifiers>",R,N
Tq,N,V_persistentID
containedPersistentID
Tq,N,V_containedPersistentID
T@"NSString",R,N,V_databaseID
TQ,N,V_cloudID
T@"NSString",C,N,V_cloudAlbumID
recommendationID
T@"NSString",C,N,V_recommendationID
T@"NSString",R,N,V_personID
adamID
Tq,N,V_adamID
formerAdamIDs
T@"NSArray",C,N,V_formerAdamIDs
universalCloudLibraryID
T@"NSString",C,N,V_universalCloudLibraryID
Tq,N,V_purchasedAdamID
Tq,N,V_subscriptionAdamID
T@"NSString",C,N,V_stationHash
Tq,N,V_stationID
TB,N,GisPlaceholder
syncID=%lld
socialProfileID="%@"
informalStaticAssetID="%@"
informalMediaClipID="%@"
vendorID="%@"
placeholder=YES
shouldExcludeFromShuffle=YES
lyricsID="%@"
contentItemID="%@"
handoffCorrelationID="%@"
containerUniqueID="%@"
storeRecommendationID="%@"
globalPlaylistID="%@"
radioStationHash="%@"
radioStationID=%lld
radioStationStringID="%@"
storeSubscriptionAdamID=%lld
formerStoreAdamIDs=[%@]
storePurchasedAdamID=%lld
cloudUniversalLibraryID="%@"
storeCloudID=%lld
storeCloudAlbumID="%@"
storeAdamID=%lld
containedPersistentID=%lld
persistentID=%lld
personID="%@"
databaseID="%@"
kind=%@
<EMPTY (not-singleton)>
personID.length > 0
MPIdentifierSet.m
databaseID.length > 0
MPIdentifierSetRadioStationID
MPIdentifierSetRadioStationHash
MPIdentifierSetRadioStationStringID
MPIdentifierSetInformalStaticAssetID
MPIdentifierSetInformalMediaClipID
MPIdentifierSetSocialProfileID
MPIdentifierSetStoreSubscriptionAdamID
MPIdentifierSetStorePurchasedAdamID
MPIdentifierSetCloudUniversalLibraryID
MPIdentifierSetFormerStoreAdamIDs
MPIdentifierSetStoreAdamID
MPIdentifierSetGlobalPlaylistID
MPIdentifierSetStoreRecommendationID
MPIdentifierSetStoreCloudAlbumID
MPIdentifierSetStoreCloudID
MPIdentifierSetCodingKeyPersonID
MPIdentifierSetSyncID
MPIdentifierSetDeviceLibraryContainedPersistentID
MPIdentifierSetDeviceLibraryPersistentID
MPIdentifierSetCodingKeyDatabaseID
MPIdentifierSetVendorID
MPIdentifierSetIsPlaceholder
MPIdentifierSetShouldExcludeFromShuffle
MPIdentifierSetLyricsID
MPIdentifierSetContentItemID
MPIdentifierSetHandoffCorrelationID
MPIdentifierSetContainerUniqueID
MPIdentifierSetCodingKeyModelKind
(%@)
<%@ %@>
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
emptyIdentifierSet
T@"MPIdentifierSet",R
isInBand
locale
T@"NSLocale",R,N
Tq,N,V_tag
UNKNOWN_LANGUAGE
CC_SUBTITLE_FORMAT_%@
SUBTITLE_TRACK_DISPLAY_FORMAT_%@_%@
AUTO_SUBTITLES
clippingContentView
T@"UIView",&,N,V_clippingContentView
clippingMaskView
T@"UIView",&,N,V_clippingMaskView
clippingInsets
T{UIEdgeInsets=dddd},N,V_clippingInsets
topSeparatorView
T@"UIView",R,N,V_topSeparatorView
bottomSeparatorView
T@"UIView",R,N,V_bottomSeparatorView
shouldHideSectionBottomSeparator
TB,N,V_shouldHideSectionBottomSeparator
explicitEpisode
TB,D,N,GisExplicitEpisode
MPModelPropertyPodcastEpisodeTitle
podcast episode %@
MPModelPropertyPodcastEpisodeArtwork
MPModelRelationshipPodcastEpisodePlaybackPosition
MPModelRelationshipPodcastEpisodeAuthor
MPModelRelationshipPodcastEpisodePodcast
MPModelRelationshipPodcastEpisodeLocalFileAsset
MPModelPropertyPodcastEpisodeSeasonNumber
MPModelPropertyPodcastEpisodeNumber
MPModelPropertyPodcastEpisodeType
MPModelPropertyPodcastEpisodeShareURL
MPModelPropertyPodcastEpisodeStreamURL
MPModelPropertyPodcastEpisodeDatePlayed
MPModelPropertyPodcastEpisodeDescriptionText
MPModelPropertyPodcastEpisodeHasVideo
MPModelPropertyPodcastEpisodeExplicit
MPModelPropertyPodcastEpisodeUserRating
MPModelPropertyPodcastEpisodeDuration
MPModelPropertyPodcastEpisodeReleaseDateComponents
unplayed 
video 
audio 
podcasts
v16@?0@"MPModelPodcastEpisodeKind"8
PodcastEpisode:v%lu:o%lu
minimumEndCharacterCount
Tq,N,V_minimumEndCharacterCount
T@"NSString",R,C,N,V_text
truncationMode
Tq,N,V_truncationMode
displayAsSiriSuggestion
TB,N,V_displayAsSiriSuggestion
titleLabel
T@"UILabel",R,N,V_titleLabel
textColor
T@"UIColor",&,N,V_textColor
_baselineOffsetFromBottom
textAlignment
Tq,N,V_textAlignment
_textColorFollowsTintColor
TB,N,S_setTextColorFollowsTintColor:
NOW_PLAYING_SIRI_SUGGESTION
ROUTE_NAME_PLUS_COUNT
@"NSString"24@?0@"NSString"8q16
v32@?0@8Q16^B24
B24@?0@"NSString"8@"NSString"16
ROUTE_NAME_CENTER_TRUNCATING_SEPARATOR
ROUTE_NAME_PLUS_SEPARATOR
q24@?0@"NSString"8@"NSString"16
ROUTE_NAME_ARROW_FORMAT
ROUTE_NAME_HEADPHONES_COUNT
MPRouteLabel's minimumEndCharacter property must be greater than or equal to 0.
MPRouteLabel.m
artworkConfiguration
T@"ML3ArtworkConfiguration",&,N,V_artworkConfiguration
<%@ %p %@>
MPRestrictionsMonitorAllowsAccountModificationDidChangeNotification
MPRestrictionsMonitorAllowsDeletionDidChangeNotification
MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification
MPRestrictionsMonitorMusicSubscriptionDidChangeNotification
MPRestrictionsMonitorAllowsRadioPurchasesDidChangeNotification
MPRestrictionsMonitorAllowsStorePurchasesDidChangeNotification
MPRestrictionsMonitorAllowsMusicVideosDidChangeNotification
maximumTVShowRatingForAgeGate
Tq,N,V_maximumTVShowRatingForAgeGate
maximumMovieRatingForAgeGate
Tq,N,V_maximumMovieRatingForAgeGate
allowsAccountModification
TB,R,N,V_allowsAccountModification
allowsDeletion
TB,R,N,V_allowsDeletion
allowsExplicitContent
TB,R,N,V_allowsExplicitContent
allowsMusicSubscription
TB,R,N,V_allowsMusicSubscription
allowsStorePurchases
TB,R,N,V_allowsStorePurchases
allowsRadioPurchases
TB,R,N,V_allowsRadioPurchases
allowsMusicVideos
TB,R,N,V_allowsMusicVideos
maximumTVShowRating
maximumMovieRating
hasRestrictionsPasscode
PSRestrictionsPasscodeController
/System/Library/PrivateFrameworks/Preferences.framework/Preferences
com.apple.MediaPlayer.MPRestrictionsMonitor.accessQueue
sharedRestrictionsMonitor
T@"MPRestrictionsMonitor",R,N
artworkInfoType
Tq,N,V_artworkInfoType
imageArtworkInfo
T@"ICStoreArtworkInfo",C,N,V_imageArtworkInfo
videoArtworkInfo
T@"ICStoreVideoArtworkInfo",C,N,V_videoArtworkInfo
cropStyle
T@"NSString",C,N,V_cropStyle
format
T@"NSString",C,N,V_format
sourceEditorialArtworkKind
T@"NSString",C,N,V_sourceEditorialArtworkKind
T@"NSURL",C,N,V_artworkURL
imageArtwork
videoArtwork
hdmv
SDMV
480p
720p
1080p
MPStoreDownloadAttributeBackgroundRequest
MPStoreDownloadAttributeBuyParameters
MPStoreDownloadAttributeClientBundleIdentifier
MPStoreDownloadAttributeDisplaysOnLockscreen
MPStoreDownloadAttributeDownloadHandlerIdentifier
MPStoreDownloadAttributeKind
MPStoreDownloadAttributeLibraryItemIdentifier
MPStoreDownloadAttributeOriginator
MPStoreDownloadAttributeReason
MPStoreDownloadAttributeShouldDisableCellularRestrictionEnforcement
MPStoreDownloadAttributeShouldRespectMusicCellularDataRestriction
MPStoreDownloadAttributeShouldRespectStoreCellularDataRestriction
MPStoreDownloadAttributeStoreSagaItemIdentifier
MPStoreDownloadAttributeStoreItemIdentifier
MPStoreDownloadAttributeTitle
MPStoreDownloadAttributeURLBagKey
MPStoreDownloadAttributeSkipInstall
MPStoreDownloadErrorDomain
tilthistory
tiltmediacontrols
tiltnowplaying
tiltstore
tiltwishlist
MPStoreDownloadPhaseCanceled
MPStoreDownloadPhaseDataRestore
MPStoreDownloadPhaseDownloading
MPStoreDownloadPhaseFailed
MPStoreDownloadPhaseFinished
MPStoreDownloadPhaseInstalling
MPStoreDownloadPhasePaused
MPStoreDownloadPhasePreflight
MPStoreDownloadPhaseProcessing
MPStoreDownloadPhasePurchasing
MPStoreDownloadPhaseWaiting
buyProduct
paidRedownloadProduct
redownloadProduct
subDownload
T@"NSDictionary",R,N,V_attributes
bytesDownloaded
bytesTotal
canceled
TB,R,N,GisCanceled
downloadSizeLimit
failureError
finished
TB,R,N,GisFinished
purchasing
TB,R,N,GisPurchasing
paused
TB,R,N,GisPaused
libraryItemIdentifier
percentComplete
phaseIdentifier
purchaseError
rentalInformation
restore
TB,R,N,GisRestore
storeItemIdentifier
SSDownloadPhaseWaiting
SSDownloadPhaseProcessing
SSDownloadPhasePreflight
SSDownloadPhasePaused
SSDownloadPhaseInstalling
SSDownloadPhaseDownloading
SSDownloadPhaseDataRestore
SSDownloadPhaseCanceled
<%@ %p %@ error:%@ canceled:%@>
com.apple.MediaPlayer.MPStoreDownload.accessQueue
SSMutableURLRequestProperties
MPStoreDownloadURLBagKeyOverride
%@-%@
SSDownloadPropertyShouldSuppressErrorDialogs
SSDownloadPropertyShouldCancelOnFailure
SSDownloadSizeLimitDisabled
SSDownloadPolicyUserDefaultState
SSDownloadSizeLimitNoLimit
SSDownloadPolicyRule
SSDownloadPolicy
SSDownloadPropertyStoreSagaIdentifier
&reporting=%@
videoPodcast
;stationHash:%@
;stationId:%llu
MPStoreDownloadManagerDidFetchInitialDownloadsNotification
activeDownloads
downloads
userDownloads
usingNetwork
TB,R,N,GisUsingNetwork
SSDownloadPropertyLibraryItemIdentifier
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
SSDownloadPhaseFinished
SSDownload
SSPurchase
SSDownloadPropertyClientBundleIdentifier
SSDownloadPropertyKind
SSDownloadPropertyStoreItemIdentifier
SSDownloadPropertyStoreAccountIdentifier
SSDownloadPropertyIsStoreDownload
SSDownloadMetadata
didFinishDownloadHandler
T@?,C,N,V_didFinishDownloadHandler
didFinishPurchaseHandler
T@?,C,N,V_didFinishPurchaseHandler
download
T@"MPStoreDownload",R,N,V_download
Downloads must not be empty.
MPStoreDownloadManager.m
SSDownloadPhaseFailed
SSDownloadPhaseIsFinishedPhase
v20@?0B8@"NSError"12
v8@?0
v16@?0@"NSArray"8
com.apple.MediaPlayer.MPStoreDownloadManager.accessQueue
com.apple.MediaPlayer.MPStoreDownloadManager.calloutQueue
%@.%@
SSPurchaseManager
SSDownloadPropertyCollectionName
SSDownloadPropertyHandlerID
SSDownloadPropertyTitle
SSDownloadPropertyThumbnailImageURL
SSDownloadPropertyReason
SSDownloadPropertyPreferredAssetFlavor
SSDownloadPropertyIsRestore
SSDownloadPropertyEncodedErrorData
SSDownloadPropertyDownloadPhase
SSDownloadExternalPropertyRentalInformation
SSDownloadExternalPropertyPolicySizeLimit
SSDownloadExternalPropertyPercentComplete
SSDownloadExternalPropertyBytesDownloaded
com.apple.MediaPlayer.MPStoreDownloadManager
SSDownloadManager
SSDownloadKindMovie
SSDownloadKindTelevisionEpisode
SSDownloadKindMusicVideo
SSDownloadKindMusic
SSDownloadManagerOptions
-init is not supported. Use +sharedManager instead.
MPStoreDownloadManagerInitException
v16@?0@"MPModelSocialPerson"8
@"MPArtworkCatalog"16@?0@"MPModelSocialPerson"8
maximumItemTrackNumber
TB,D,N,GisCompilation
classical
TB,D,N,GisClassical
representativeSong
preorder
TB,D,N,GisPreorder
songPopularityBlock
MPModelPropertyAlbumTitle
album %@
MPModelPropertyAlbumDownloadedDate
MPModelPropertyAlbumSongPopularity
MPModelPropertyAlbumShortEditorNotes
MPModelPropertyAlbumEditorNotes
MPModelPropertyAlbumPreorder
MPModelPropertyAlbumLastDevicePlaybackDate
MPModelPropertyAlbumLibraryAddEligible
MPModelPropertyAlbumKeepLocalManagedStatus
MPModelPropertyAlbumKeepLocalEnableState
MPModelPropertyAlbumVolumeNormalization
MPModelPropertyAlbumLibraryAdded
MPModelPropertyAlbumYear
MPModelPropertyAlbumLibraryAddedDate
MPModelPropertyAlbumCopyrightText
MPModelPropertyAlbumArtwork
MPModelPropertyAlbumReleaseDateComponents
MPModelPropertyAlbumIsClassical
MPModelPropertyAlbumIsCompilation
MPModelPropertyAlbumHasExplicitContent
MPModelPropertyAlbumHasCleanContent
MPModelPropertyAlbumDiscCount
MPModelPropertyAlbumMaximumItemTrackNumber
MPModelPropertyAlbumTrackCount
MPModelRelationshipAlbumRepresentativeSong
MPModelRelationshipAlbumGenre
MPModelRelationshipAlbumArtist
songKind
T@"MPModelSongKind",R,N,V_songKind
compilations
v16@?0@"MPModelAlbumKind"8
Album:v%lu:o%lu:s%p
MPModelChildAlbumSongs
MPModelChildAlbumArtists
hasType
hasPropertyPredicate
propertyPredicate
T@"MPPPropertyPredicate",&,N,V_propertyPredicate
hasCompoundPredicate
compoundPredicate
T@"MPPCompoundPredicate",&,N,V_compoundPredicate
T@"MPPConditionalPredicate",&,N,V_conditionalPredicate
hasPersistentIDsPredicate
persistentIDsPredicate
T@"MPPPersistentIDsPredicate",&,N,V_persistentIDsPredicate
hasSearchStringPredicate
searchStringPredicate
T@"MPPSearchStringPredicate",&,N,V_searchStringPredicate
MIDDLEWARE: [%{public}@]
INVALIDATE: Middleware: %{public}@ [%{public}@] request: %{public}@
INVALIDATE: Middleware: %{public}@ [%{public}@, but already invalid] request: %{public}@
INVALIDATE: Response invalid before completion. Request: %{public}@
START Request: %{public}@ aka [%{public}@]
FINISH Request: %{public}@ Response: %{public}@ [%fs] error: %{public}@
FINISH Request: %{public}@ Response: %{public}@ [%fs]
TIMEOUT Request: %{public}@ timing out.
TIMEOUT Request: %{public}@ timing out. Remaining operations: [%{public}@]
TIMEOUT Request: %{public}@ Operation: %{public}@
INVALIDATE: Notifying invalidation for request: %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackStart %lld %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackReady %lld %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackQueueReceived %lld %{public}@
[AFAnalytics] %{public}@ %lld %{public}@
[Alternate Tracks] AVF selected invalid option %{public}@
[Alternate Tracks] Audio:
[Alternate Tracks] - excluded AC-3 option %{public}@
[Alternate Tracks] - added %{public}@ from %{public}@
[Alternate Tracks] - added %{public}@ as fallback from option %{public}@
[Alternate Tracks] Subtitles/CC:
[Alternate Tracks] - skipped %{public}@ because it's forced
[Alternate Tracks] - skipped %{public}@ because it's not SDH/CC
[Alternate Tracks] - skipped %{public}@ because it's SDH/CC
[Alternate Tracks] - skipped %{public}@ because it's not the first of its locale
[Alternate Tracks] - added %{public}@
[Alternate Tracks] Subtitles/CC Second Pass:
[Alternate Tracks] - added %{public}@ as fallback
[Alternate Tracks] %{public}@
[Alternate Tracks] - selecting audio %{public}@
[Alternate Tracks] - saving as track ID %d
[Alternate Tracks] - saving as track locale %{public}@
[Alternate Tracks] - selecting subtitle %{public}@
[Alternate Tracks] - selecting forced subtitles %{public}@
[Alternate Tracks] - automatic subtitles
[Alternate Tracks] - disabling subtitles
MPStoreGetClientToken failed to get identity properties for token request. err=%{public}@
MPStoreGetClientToken not fetching auth token because there's no active account
 %{public}@ loadedTimeRanges %.2f of %.2f
 %{public}@ Finished downloading asset with loadedTimeRanges: %.2f of %.2f
setupPlaybackInfo:
%{public}@: Seeking to start time: %f [override: %{BOOL}u]
%{public}@: Setting forward playback end time to: %f
%{public}@: Setting Audible DRM info: %{public}@
%{public}@: Setting ramp in/out info: %{public}@
Setting item %{public}@ EQ to %d
%{public}@: Setting volume normalization to %f on %{public}@
%{public}@: ignoring volume normalization %f on %{public}@
Failed to get exportable URL with error: %{public}@
MP->AV Asset Log Mapping: %{public}@ -> %{public}@   
Assets should not be loaded on the main thread.
    AVPlayerItem: %{public}@
routingTableView %p updateForEndpoint: routeUpdate: %@
Attempting to present media controls using a deprecated class: %@
MPModelLibraryRequestOperation: %p _sanityCheckRequest: allowedItemIdentifiers must contain unique array elements -- cannot contain duplicates. allowedItemIdentifiers=%{public}@
AVController: queue boundary, ending playback [%{public}@]
_resumePlaybackIfNecessary
_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:
MPAVController: %p: Pausing [UIApp isSuspendedUnderLock]
MPAVController: %p: Pausing [application state]
Resolution for item %{public}@ resolved error: %{public}@ with resolution error: %{public}@
Resolution for item %{public}@ could not resolve error: %{public}@ with resolution error: %{public}@
 Cannot play restricted item in PIP when device is locked.
 Cannot play restricted item when device is locked.
 Cannot play restricted item when no video layer is attached.
 Cannot play restricted item with AirPlay speaker route unless this app is in the foreground. %ld
Using %{public}@ to resolve error %{public}@
Playback failed with error: %{public}@, not resolving (canResolve: %{public}@, allowsItemErrorResolution: %{public}@)
Found pictureType: %{public}@
Created image of size: %{public}@
Delayed time time change fired: %f
SCAN: Rate: %f, Interval: %f
 _inflightSeekRate already set, which means multiple setRate:error: calls have been made before a _rateDidChange: was received
%{public}@ %{public}@: called with item: %{public}@ with asset loaded: %{public}@ and therefore player item: %{public}@
 MPAVController _setState: %ld -> %ld
MPAVController: %p: _pausedDuringInterruption=NO [state changed from interrupted]
Setting actionAtItemEnd to %ld for state %ld
BackgroundTask: Took assertion (%lli) for playback stall
Disabling autoplay after buffer stall timeout
BackgroundTask: End assertion (%lli) at %s:%d
Skipping autoplay, disabled (for current item: %d, on player: %d, state: %ld)
Likely to keep up or full buffer: %d
Skipping autoplay, not enough buffered to keep up.
Taking autoplay background task assertion.
Scheduling autoplay background task assertion ending...
Ending autoplay background task from timing out waiting for likely to keep up.
Scheduled autoplay background task assertion is no longer relevant.
Ending autoplay background task.
- Registering for AVItem notifications from %{public}@
-- Asset loaded with player item: %{public}@
 Registering %{public}@ for double observation on %{public}@ (%{public}@)
END SEEKING: %ld
MPAVController: %p: setQueueController: %{public}@
BackgroundTask: End assertion (%lli) at %{public}s:%d
Overriding wantsExternalPlayback to NO because the picked route does not support it for the current item %{public}@
pickedRouteSubtype: %{public}ld, itemAllowsExternalPlayback: %{BOOL}u, hasAirPlayCloudRoute: %{BOOL}u, itemAllowsAirPlayFromCloud: %{BOOL}u, externalScreenType: %{public}ld, clientWantsExternalPlayback:%{BOOL}u, itemType: %{public}ld, itemPlaybackMode: %{public}ld, itemHasProtectedContent: %{BOOL}u
usesExternalPlaybackWhileExternalScreenIsActive: %{BOOL}u, usesAudioOnlyMode: %{BOOL}u, wantsExternalPlayback: %{BOOL}u
_verifyDisplayProtection
    ignoring because state is %d
 insufficient external protection
applying throttled index change of %ld tracks
%{public}@ %{public}@: with item: %{public}@ currentItem: %{public}@
%{public}@ _audioSessionMediaServicesWereResetNotification:
%{public}@:%d
 readyForDisplay 
 [<%{public}@:%p>] <%{public}@:%p>."duration" changed: %{public}@ -> %{public}@
 [<%{public}@:%p>] <%{public}@:%p>."tracks" changed: %{public}@ -> %{public}@
 timedMetadata 
 %{public}@
 canPlayFastReverse 
 canPlayFastForward 
 externalPlaybackActive 
 outputObscuredDueToInsufficientExternalProtection 
 rate
 playbackBufferEmpty 
 playbackBufferFull 
 playbackLikelyToKeepUp 
 status 
 %ld
Ending playback due to AirPlay failure
MPAVController: %p: Pausing [airPlayVideoEnded]
 AVPlayerItemTimeJumpedNotification 
 %.1fs
 _streamUnlikelyToKeepUp
 _streamRanDry
 _streamLikelyToKeepUp
 _streamBufferFull
 [<%{public}@:%p>] <%{public}@:%p>."presentationSize" changed: %{public}@ -> %{public}@
 _serverConnectionDidDie
  -- notification: %{public}@
  -- error: %{public}@
  -- currentTime: %0.2f
  -- contentItemID: %{public}@
MPAVController: %p: Disconnecting AVPlayer for reason %d
%{public}@ %{public}@: unregistering due to disconnect for reason: %li
MPAVController: %p: Creating AVPlayer and MPAVQueueCoordinator - deferItemLoading=%{BOOL}u
Setting allowsExternalPlayback: %{public}@
Setting usesExternalPlaybackWhileExternalScreenIsActive: %{public}@
Setting actionAtItemEnd to AVPlayerActionAtItemEndAdvance when connecting to the AVPlayer
_configureAudioSession
 _rateDidChange %.2f 
 %.2f
MP AVAudioSessionDelegateMediaPlayerOnly - end interruption [received from CM]. Interruptor <%{public}@> category <%{public}@> resumable <%lu>,  _state = %lu
paused during interruption: do not resume
current item requests playback prevention: do not resume
interruptor is not phone app, etc: do not resume
video while in background: do not resume
MP endInterruptionFromInterruptor :: resuming playback at %f
AVAudioSessionDelegateMediaPlayerOnly - begin interruption [received from CM]
 _itemWillChange %{public}@ 
 %{public}@
 playback state=%d, didPreviousItemReachEnd=%d, previousItemAssetLoaded: %{public}@, _isReloadingForPlaybackContextChange=%{BOOL}u
 _itemReadyToPlay
 AVPlayerItemDidPlayToEndTimeNotification
 _itemFailedToPlayToEnd %{public}@
 AVPlayerItemFailedToPlayToEndTimeNotification
 %{public}@
 %{public}@
 _itemDidChange 
 %{public}@
 asset loaded %{public}@ : current item %{public}@
MPAVController: %p: Pausing [active route change, disabling autoplay]
Ignoring pause from active route change due to state being interrupted.
reloadWithPlaybackContext:completionHandler:
 playbackContext: %{public}@
 currentPlaybackState=%d, posting MPAVControllerWillReloadWithPlaybackContextNotification
Error loading tracklist for queue feeder: %{public}@
MPAVController: %p: Honoring context action after queue load [shouldStartPlayback=%{BOOL}u]
MPAVController: %p: Overriding context action after queue load [Play]
MPAVController: %p: Overriding context action after queue load [Pause]
MPAVController: %p: Pausing [reloadWithPlaybackContext, was running, context should not start playback]
Ending playback because we don't have a current item after reload.
MPAVController: %p - setCurrentTime:options:completion: - Saving start time override - startTimeOverride: %3.2fs
Committing time change: %f
Delaying time change: %f
MPAVController: %p: Set audio session active
Enabling autoplay
Disabling autoplay
Setting rate on player: %{public}@ to %f
Preparing item: %{public}@ for rate: %f
Finished preparing item: %{public}@ for rate: %f, setting.
%{public}@ %d
%{public}@ %{public}@ %{public}@
MPAVController: %p: playWithOptions: %d allowsEnablingAutoPlay: %{BOOL}u
MPAVController: %p: Pausing [unable to set rate]
Disabling autoplay for pause
MPAVController: %p: _pausedDuringInterruption=YES
%{public}@
MPAVController: %p: endPlayback
MPAVController: %p: changePlaybackIndexBy:deltaType:ignoreElapsedTime:error:
throttling playback changes for %.2fs
applying an additional %ld delta from throttled changes
attempting to change chapter
changing by %ld to track to %{public}@
BEGIN SEEKING: %d
[MPRadioController] Connection invalidated.
[MPRadioController] Connection interrupted.
[TelevisionRoutingDataSource] Beginning discovery using controller: %{public}@
[TelevisionRoutingDataSource] Ending discovery with controller: %{public}@
Could not play the movie %@.  We received the AVController_ItemFailedToPlayNotification with info: %@ 
BackgroundTask: Took assertion (%lli) at %{public}s:%d
Unable to start background task, TV Out window may not tear down.
 Enforcing policy due to screen recording. setMuted/setHidden: %{BOOL}u
[MPStoreRedownloadProductOperation] %{public}@: Sending request: %{public}@
[MPStoreRedownloadProductOperation] %{public}@: Received response %{public}@ with error: %{public}@
Initializing local playback queue from binary plist data
Initializing local playback queue from protobuf-encoded media query: %@
Could not decode media query from supposed protobuffer data.
Using first item with multiverse ID: %@
Could not find first item for playback queue with multiverse ID: %{public}@
Using first item with PID: %lld
Found first item in library: %@
Could not find first item for playback queue with PID: %lld
userIdentityForMediaRemoteOptions -
No user identity data. Using active account.
userIdentityForMediaRemoteOptions -
Cannot decode override user identity. Using active account.
userIdentityForMediaRemoteOptions - Decoded override user identity: %{private}@.
Dropping link without label: %{public}@
No match found, URL is not supported: %{public}@
countryCode not found in bag: %{public}@
Match didn't capture an identifier: %{public}@
Regex cannot be generated from pattern: %{public}@ with error %{public}@
Dropping node without title: %{public}@
Can't parse because input has unexpected type: %{public}@
Can't parse because %{public}@ property doesn't exist: %{public}@
Can't parse because array doesn't contain anything: %{public}@
Can't parse because %{public}@ property is not of expected (NSArray) type: %{public}@
Can't parse because array first object is not of expected (NSArray) type: %{public}@
Can't parse because %{public}@ property is not of expected (NSDictionary) type: %{public}@
Can't parse because array first object is not of expected (NSDictionary) type: %{public}@
Could not register tap handler for status bar override
[MPVolumeSlider] volumeValueDidChange %f (coalesced) for %{public}@
[MPVolumeSlider] Not committing volume change because in optimistic state
[MPVolumeSlider] Committing volume change of: %f
[MPVolumeSlider] volumeWarningStateDidChange warningState: %li slider: %{public}@
[MPVolumeSlider] EUVolumeLimitEnforcedDidChange enforced: %{BOOL}u slider: %{public}@
[MPVolumeSlider] EUVolumeLimitDidChange limit: %f slider: %{public}@
[MPVolumeSlider] volumeControlCapabilitiesDidChange controller: %{public}@ capabilities:%{public}@
[MPVolumeSlider] volumeControlAvailableDidChange available: %{BOOL}u slider: %{public}@
[MPVolumeSlider] <%@: %p> setVolumeDataSource: %@
[MPVolumeSlider] Tracked to %f for %{public}@
[MPVolumeSlider] allowUserToExceedEUVolumeLimit
[MPVolumeSlider] Tracked from %f for %{public}@
Failed to decode hls key data. err=%{public}@
MPModelLibraryDefaultSectionedCollectionDataSource %p: indexPathForItemWithIdentifiersIntersectingSet: hasEntityPosition is NO [persistentID not found in entityPersistentIDs] persistentID=%lld
Present remote view controller.
Error occurred while attempting to present remote view controller. %@
Failed to pick single route %{public}@ error: %{public}@
Successfully picked single route %{public}@
 %{public}s %{public}@
Hijack - Requesting playbackState for %@
Skipping playback checks. Route: %{public}@, playbackDataSource: %{public}@
Hijack - playbackState is %{BOOL}u for %@
Hijack - RoutingController %{public}@ Presenting: %{public}@ NowPlaying: %{public}@
Perform hijack for %@
Do not perform hijack for %@
%{public}@ returning single pickedRoute: %{public}@
%{public}@ updated routes: [%@]
%{public}@ updated picked routes: [%@]
RCS _processSelection:completion: routing controller missing
RCS cannot add local speaker route. Picked route: %{public}@
RCS cannot add route to routing controller that does not support multiple selection routingController: %{public}@
RCS treating Add as a Set
Set command invoked with >1 route. (localSpeakerRoute=%{BOOL}U|toNonGroupableOutputContext=%{BOOL}U|nonGroupableRoute=%{BOOL}U: %{public}@
RCS set picked route %{public}@
RCS add routes %{public}@
RCS remove routes %{public}@
RCS dequeue %{public}@
RCS failed to process selection: %{public}@ error: %{public}@
RCS _dequeue routing controller missing
RCS successfully processed selection: %{public}@
RCS _dequeueSelectionWhenPossible timed out for selection %{public}@
RCS enqueue %{public}@
RCS will use existing selection %{public}@
RCS changing selection in progress from %{public}@ to %{public}@
RCS removePendingRoute routing controller missing
RCS removePendingRoute %{public}@
RCS ignoring addPendingRoute - route already pending %{public}@
RCS addPendingRoute routing controller missing
RCS addPendingRoute %{public}@
RCS pending route timed out %{public}@
RCS pickedRouteDidChange caused us to drop selection %{public}@
RCS cancelling in-progress selection %{public}@
Encountered unsupported MediaKit type: %@
Encountered unsupported data type in assetURLs [MediaKit]: flavorStringType=%{public}@ urlStringType=%{public}@ flavorString=%{public}@ urlString=%{public}@
Encountered unexpected media kit relationship parent=%@ type=%@
Encountered unsupported StorePlatform kind: %@
Encountered unsupported data type in assetURLs [StorePlatform]: flavorStringType=%{public}@ urlStringType=%{public}@ flavorString=%{public}@ urlString=%{public}@
Encountered unexpected store platform relationship parent=%@ type=%@
Failed to add cache content to library. %{public}@
Failed to add cache playlist to library. %{public}@
Cannot create playlist with an empty name
Could not resolve default author display name
Unknown comparison type %ld.
attempt to *nil* filter predicate to query: %@
No static entity found for multiverse ID %p
getTimeSnapshot
getNowPlaying
Failed to get server now playing error: %{public}@
getDescriptor
Failed to get server queue descriptor error: %{public}@
Failed to obtain remoteObject: %{public}@
ASYNC-WATCHDOG-2: Tearing down connection
ASYNC-WATCHDOG-1: Attempting to wake up the remote process
Failed to obtain synchronousRemoteObject: %{public}@
SYNC-WATCHDOG-2: Tearing down connection
SYNC-WATCHDOG-1: Attempting to wake up the remote process
endSeeking
beginSeekingBackward
beginSeekingForward
setCurrentPlaybackRate
rate=%g
setCurrentPlaybackTime
time=%g
stop
pause
play
prepareToPlay:sync
Failed to prepareToPlay error: %{public}@
skipToBeginningOrPreviousItem
duration=%f
pauseWithFadeoutDuration
shuffle
index=%lld
nowPlayingAtIndex
Failed getting nowPlayingAtIndex: %ld error: %{public}@
skipToPreviousItem
skipToBeginning
skipToNextItem
prepareToPlay short-circuit [already prepared to play]
prepareToPlay failed [no target descriptor]
prepareToPlay:async
Failed to prepareToPlay [nil server]
nil server
appendQueueDescriptor
appendQueueDescriptor failed error: %{public}@
prependQueueDescriptor
prependQueueDescriptor failed error: %{public}@
setQueue
descriptor=%{public}@
setNowPlayingItem
Failed to set now playing item error: %{public}@
shuffleMode=%ld
setShuffleMode
getShuffleMode
setRepeatMode
repeatMode=%ld
getRepeatMode
[MPArtwork] HALTING -- Error loading artwork for catalog: %{public}@ kind: %ld error: %{public}@
[MPArtwork] Loaded nil representation -- Error loading artwork for catalog: %{public}@ kind: %ld error: %{public}@
Imported %{public}@ playlists
Failed to import %{public}@ playlists with error: %{public}@
%{public}@: Could not determine UUID string
Could not find playlist for %{public}@ and no creation metadata was provided
Creating playlist for %{public}@
Create playlist failed, not authorized
dataProvider: %{public}@ does not allow creating a playlist using the SDK
Cloud createPlaylist for %{public}@ failed: %{public}@
%{public}@ - Notifications - Reading libraryChangeObservers from deviceMediaLibrary
%@ Deferring disconnect due to active assertions: %{public}@
%p Releasing connection assertion: %{public}@
%p Active assertions: %{public}@
Not authorized, skipping filter predicate application
%{public}@ - Active user change completed - Firing notifications for path change
%p Taking connection assertion: %{public}@
MPMediaLibrary - initWithCoder - User change detected between encoding/decoding [recoverable] - Library=%@ - EncodedUser=%@ - DecodedLibraryUser=%@
MPMediaLibraryAuthorizationStatus has not been determined, %{public}@
%{public}@: app not authorized for access
%{public}@ - New library created for user identity: %@
%{public}@ - New library init called
Reloading data provider for significant change %@
Reloading data provider %@
Removing data provider %@
Adding data provider %@
%{public}@: app has expired authorization, and couldn't be renewed
%p error validating expiration: %{public}@
%p Connection to com.apple.itunescloudd.tcchelper failed to get remote object proxy: %{public}@
%p Connection to com.apple.itunescloudd.tcchelper invalidated
%p Connection to com.apple.itunescloudd.tcchelper interrupted
%{public}@ - Posting notification [%@]
%{public}@ - Related library posting notification [%@]
%{public}@ - No pre-existing library for user identity: %@
%{public}@ - Request for a library with user identity: %@
%{public}@ - Singleton
Media library access is not authorized. Users need to grant media library access for your app in Settings > Privacy to interact with MPMediaPickerController. Dismissing.
setPicksSingleCollectionEntity mutually-exclusive with setAllowsPickingMultipleItems
setAllowsPickingMultipleItems mutually-exclusive with setPicksSingleCollectionEntity
MPMediaPickerController must be presented modally.
Unsupported media types (%ld), using MPMediaTypeAny.
Reloading items due to preferred queue depth change from %lu to %lu
+ SYNC ITEMS: [PRUNING] %{public}@
Current Item changed: %{public}@ -> %{public}@
Attempting to achieve equilibrium between MP and AV queues
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _syncPlayerItems
Clearing loaded asset because it cannot be reused for item: %{public}@
= SYNC PLAYER: Removing %{public}@ because it was not the correct item for the index in the queue.
= SYNC PLAYER: Removing %{public}@ because it was at an index beyond where it should be.
= SYNC PLAYER: %{public}@ was already in player. Making copy.
= SYNC PLAYER: %{public}@ -> %{public}@
= SYNC PLAYER: %{public}@ removed for being beyond active range.
Achieved equilibrium between %{public}@ and %{public}@.
Has not yet achieved equilibrium.
Skipping player sync because we've already achieved equilibrium.
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _syncPlayerItems
Skipping loading items.
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _syncItemsWithPreviousItems:
Beginning with active queue depth: %lu
+ SYNC ITEMS: %{public}@%{public}@ -> %{public}@ %{public}@
Updated active queue depth to: %lu
Failed to queue any items.
+ SYNC ITEMS: %{public}@ -> (null) [removal]
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _syncItemsWithPreviousItems:
Committing playback transaction because of reload without keeping current item.
+ SYNC ITEMS: [CLEARING]
+ SYNC ITEMS: %{public}@ [keeping current item]
LoadAsset
item=%{public}@
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _loadAssetForItem:
Beginning transaction for first item load.
> Loading asset for: %{public}@
< Loaded asset for: %{public}@ [%.2fs]
Dropping asset because %{public}@ is no longer in queue.
Failed loading asset for: %{public}@ [%.2fs]
Committing transaction for first item load.
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _loadAssetForItem:
Removing failed item: %{public}@
[BackgroundTasks] MPAVQueueCoordinator End [%lu]
[BackgroundTasks] MPAVQueueCoordinator Background Task Failed to Start.
[BackgroundTasks] MPAVQueueCoordinator Start [%lu]
[BackgroundTasks] MPAVQueueCoordinator Expired [%lu]
applicationMusicPlayer _establishConnectionIfNeeded failed [
 denied due to authorization status]
resumed connection
applicationQueuePlayer:xpc:connect:wake
applicationQueuePlayer _establishConnectionIfNeeded timeout [ping did not pong]
applicationMusicPlayer:connect
applicationQueuePlayer:xpc:connect
applicationMusicPlayer: connection invalidated
applicationMusicPlayer: failed to get synchronousRemoteObject %{public}@
error=%{public}@
applicationController: xpc service connection invalidated
applicationController: xpc service connection interrupted
Updating supported browsable content APIs: %{public}@
Error updating browsable content APIs. MediaRemote error %ld
Content manager updated limited UI: %@
The completion handler for the current %{public}@ procedure has already been called once. You should only call MediaPlayer's completion handler once after servicing the call.
Playback initialization completed at index path: %{public}@, error: %{public}@
Pushing content items update with items: %@
Content manager setting up media remote endpoint.
-contentItemForIdentifier:completionHandler: completion handler was released without being called
-playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler: completion handler was released without being called
Loading operation at completed at index path: %{public}@, error: %{public}@
-beginLoadingChildItemsAtIndexPath:completionHandler: completion handler was released without being called
Content manager has no available session.
Content manager session connected.
Content manager initializing context.
[PlayableContentManager] Content item %@ mutated. Enqueueing for update.
Warning: -[MPPlayableContentManager setNowPlayingIdentifiers:] nowPlayingIdentifiers cannot be nil. The argument has been replaced with an empty array, please change usage to match this expectation. An assertion will be triggered for apps built on or after the iOS 12.2 SDK.
Content manager updated now playing identifiers. Pushing new identifiers.
Content manager stopped coalescing content item updates. Pushing changes, if any.
Content manager beginning to coalesce content item updates.
Content manager invalidating browsable content...
Content manager skipping dataSource reload; awaiting context.
Content manager initialized, awaiting session status.
CarPlay connected: %{BOOL}u
RCS cannot remove device route
Can't share audio while in the Car. Route: %{public}@, picked: %{public}@
RCS attempted to select a nil route, ignoring.
RCS user selected: %{public}@
[MPRemoteRadioController] Connection invalidated.
[MPRemoteRadioController] Connection interrupted.
MPAbstractNetworkArtworkDataSource: -resourceLoader:shouldWaitForLoadingOfRequestedResource: data task finished with error: %@ URLSessionDataTask=%@
MPAbstractNetworkArtworkDataSource: -resourceLoader:shouldWaitForLoadingOfRequestedResource: didn't respond to request for data [dataResponse was nil] length=%lu requestedOffset=%lld requestedLength=%ld
Artwork request cannot have a size of zero, catalog: %@, representation kind: %ld
%{public}@ Encountered error while requesting artwork for NSURLSessionDataTask: %{public}@. %{public}@
MPAbstractNetworkArtworkDataSource: %p setVideoArtworkCacheURL: error creating directory at URL %{public}@
MPAbstractNetworkArtworkDataSource: %p setVideoArtworkCacheURL: Can't use videoArtworkCacheURL as cache directory [Non-directory file already exists at path] videoArtworkCacheURL=%{public}@
[MPArtwork] Asked to cache response for %{public}@, but no size was set.
-[MPMusicPlayerPlayParameters initWithDictionary:] id or kind missing from playParams dictionary. Returning nil.
MPModelLibraryModelSectionedCollectionDataSource %p: indexPathForItemWithIdentifiersIntersectingSet: adjustedSectionIndex not translated [currentSectionPersistentID not found in _allowedSectionPersistentIDs] adjustedSectionIndex=%zu currentSectionPersistentID=%lld
Received cloud library availability did change notification
Created timer to coalesce MPMediaLibraryEntitiesAddedOrRemovedNotification
Postponing MPMediaLibraryEntitiesAddedOrRemovedNotification timer due to continued notifications
Posting MPMediaLibraryEntitiesAddedOrRemovedNotification
Unexpected content rating format: %@
checking test media folder: %{public}@ -- %{public}@
no fallback test audio file found [TestAudio.<foo>]
no fallback test video file found [TestVideo.<foo>]
NOTE: Mapping file %@ to path %@
While setting library filter predicates, caught exception %{public}@ trying to read media library
Requesting artwork for %lld - %@
Skipping artwork fetch for %lld - %@
Received artwork for %lld - %@
Disabled keep_local on %lu tracks with status:%d for playlist:%lld
Cancelled keep_local on %lu tracks with status:%d for playlist:%lld
Cleared keep_local on %lu tracks with status:%d for playlist:%lld
Cleared keep_local_status for playlist %lld with status:%d
entityClass %@ (groupingType = %ld) has no ML3Property for MPProperty %@
Disabled keep_local on %lu tracks with status:%d for collection:%lld
Cancelled keep_local on %lu tracks with status:%d for collection: %lld
Cleared keep_local on %lu tracks with status:%d for collection:%lld
Cleared keep_local_status for collection %lld with status:%d
Fetching global playlists with IDs %{public}@...
Found playlist data for %{public}@
Did not find playlist data for %{public}@
Error fetching playlist data. %{public}@
Successfully imported playlist data. Imported tracks: %@
found container_pid:%lld for global playlistid:%{public}@
Error importing playlist data.
import global playlist with id %@ - add to cloud library: %s...
Successfully added playlist to cloud library.
Failed to add global playlist to cloud library. %{public}@
Adding %llu store items to library (also add to cloud library: %d): %{public}@
Successfully imported track data.
Adding %lld to cloud library...
Failed to import track data. %{public}@
Error adding track(s) to cloud library. %{public}@
Successfully added track(s) to cloud library.
Parsing track data...
Importing %lu tracks...
Error fetching store content for item add. %{public}@
no ML3 collection query for grouping type %@, using items query
Unable to create orderingTerms for properties: %@
Cannot filter search string by %@
[MPStorePlayWhileDownloadController] Pausing downloads due to prioritization: %{public}@
[MPStorePlayWhileDownloadController] Resuming downloads due to prioritization: %{public}@
[MPStorePlayWhileDownloadController] Ending observation of download: %{public}@
[MPStorePlayWhileDownloadController] Starting observation of download: %{public}@
[MPStorePlayWhileDownloadController] Releasing download session: %{public}@
[MPStorePlayWhileDownloadController] Download session %{public}@ was last for download %{public}@, cleaning up...
[MPStorePlayWhileDownloadController] Acquiring play while download session for download: %{public}@
[MPStorePlayWhileDownloadController] Suspending until valid download state for download: %{public}@
[MPStorePlayWhileDownloadController] Finished suspending for valid download: %{public}@
[MPStorePlayWhileDownloadController] Finished suspending for invalid download: %{public}@
[MPStorePlayWhileDownloadController] Returning existing (new) session: %{public}@ for download: %{public}@
[MPStorePlayWhileDownloadController] Getting download token for download: %{public}@
[MPStorePlayWhileDownloadController] Finished getting download token for download: %{public}@ (%llu)
[MPStorePlayWhileDownloadController] Download handler is already proper for download %{public}@
[MPStorePlayWhileDownloadController] Setting download handler for download %{public}@
[MPStorePlayWhileDownloadController] Finished getting download token for invalid download: %{public}@ (%llu)
[MPStorePlayWhileDownloadController] Download is not in proper state: %{public}@
[MPStorePlayWhileDownloadController] Finishing session acquisition for download %{public}@ with new session %{public}@
[MPStorePlayWhileDownloadController] Download handler: %{public}@ handle session: %{public}@ with phase: %{public}@
[MPStorePlayWhileDownloadController] Releasing session control for session because it's not a media asset: %{public}@
[MPStorePlayWhileDownloadController] Releasing session control for session because it's not in the processing phase: %{public}@
[MPStorePlayWhileDownloadController] Handling session (processing) for download: %{public}@
Adjusting local endpoint volume by: %f
Setting local endpoint volume to: %f
Setting AVSystemController volume to: %f
Error getting master volume: %{public}@
Error getting output device volume: %{public}@
Error getting group volume control capabilities: %{public}@
Error getting output device volume control capabilities: %{public}@
setOutputDeviceVolume: %@ to: %f for endpoint: %@
setVolume to: %f endpoint: %@
Error setting group volume: %{public}@
Error setting output device volume: %{public}@
[MPMediaPlaybackItemMetadata] Store download cannot be created for %@ due to missing buy parameters with endpoint type: %ld
[MPMediaPlaybackItemMetadata] Store download cannot be created for %@ due to missing adam ID with endpoint type: %ld
MPModelLibrarySearchRequestOperation: NULL utf8 from string: '%{public}@'
-setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler: completed.
-addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler: completed.
-addItemWithSagaID:toPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-addItemWithSagaID:toPlaylistWithPersistentID:completionHandler: completed.
[HardwareButtonController] Received hardware volume event: %{public}@, pressed: %{BOOL}u
[HardwareButtonController] Committing volume change to: %f
[HardwareButtonController] Volume dataSource changed to: %{public}@
[MPArtwork] Failed to create directory at '%{public}@' with error: %{public}@
[MPArtwork] Could not write resized image to %{public}@: Failed to finalize CGImageDestination
Do not update optimistic value cache since master volume was set to 0.
MPVolumeGroupSliderCoordinator changing %f to %f for %{public}@
End optimistic state.
Committing optimistic values
Begin optimistic state with %lu individual sliders
MPMediaLibrarySystemFilters %p - Updating filters - Library: %@ - has cloud library revision: %{BOOL}u - purchase history excluded: %{BOOL}u
MPMediaLibrarySystemFilters %p - Init with library: %@
+MPMediaLibrarySystemFilters - filtersForLibrary: %@ - filters:%@
%{public}@ timed out waiting for account properties to load - some properties may be out of sync
%{public}@ Failed to load account properties. err=%{public}@
[PlaybackUserDefaults] setAutoPlayEnabled:forUserIdentity: %{BOOL}u userIdentity=%{public}@
[PlaybackUserDefaults] autoPlayEnabledForUserIdentity: %{BOOL}u userIdentity=%{public}@
%{public}@ Failed to save private listening setting for home user id %{public}@. err=%{public}@
%{public}@ Failed to find account for home user id %{public}@. err=%{public}@
Attempting to setSystemVolumeHUDEnabled for application that supports UIScene lifecycle (enabled: %{BOOL}u | category: %{public}@ | volumeDisplays: %{public}@)
systemMusicPlayer _establishConnectionIfNeeded failed [
 denied due to authorization status]
systemMusicPlayer _establishConnectionIfNeeded failed [application not installed]
systemMusicPlayer _establishConnectionIfNeeded timeout [ping did not pong]
systemMusicPlayer:connect
woke=%{BOOL}u
systemMusicPlayer connection invalidated
openToPlayQueueDescriptor
openToPlayQueueDescriptor:prepare
openToPlayQueueDescriptor: failed [prepare failed] error=%{public}@
openToPlayQueueDescriptor:openURL
success=%{BOOL}u
openToPlayQueueDescriptor: failed [open URL failed]
failed to open URL
setUserQueueModificationsDisabled:
userQueueModificationsDisabled
disabled=%{BOOL}u
systemMusicPlayer playbackState returning paused due to cached data
MPNowPlayingInfoQueueCoordinator %p: reloadItemsKeepingCurrentItem: Current Item changed: %@ -> %@
No country code found in bag, can't create storefront endpoint URL: %{public}@
No music subscription dictionary in bag, can't get subscription properties to generate URL: %{public}@
No grouping name in music subscription dictionary of bag, can't generate URL pointing to right grouping: %{public}@
%{public}@ instantiated parser: %{public}@.
%{public}@ - endObservingCloudLibraryEnabled - Unregistering for ICCloudClientIsAuthenticatedDidChangeNotification
%{public}@ - beginObservingCloudLibraryEnabled - Registering for ICCloudClientIsAuthenticatedDidChangeNotification
%{public}@ - Error retrieving user identity properties [Processing identity change] - identity=%@ - error=%{public}@
%{public}@ - Cloud library status changed [%ld -> %ld] - Posting MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification
%{public}@ - Received notification [ICCloudClientIsAuthenticatedDidChangeNotification]
%{public}@ - Received notification [%{public}@]
%{public}@ - Creating new controller for user identity %@
%{public}@ - New instance created for user identity: %@
%{public}@ - Related controller posting notification [%@]
%{public}@ - No pre-existing controller for user identity %@
%{public}@ - Request for a controller with user identity %@
[MPStoreItemImportTrackData] Unknown import property for metadata key %{public}@
Error serializing state capture: %{public}@
[InfoCenter] (%{public}@) sending content items changed: %{public}@
[InfoCenter] (%{public}@) sending content item changed: %{public}@
[InfoCenter] (%{public}@) Content item mutated [already enqueued for update]: %{public}@
[InfoCenter] (%{public}@) Content item mutated: %{public}@
Using deprecated contentItem-based artwork.
Using deprecated -contentItemForOffset: playback queue datasource.
[InfoCenter] (%{public}@) invalidatePlaybackQueue [no change detected]
[InfoCenter] (%{public}@) invalidatePlaybackQueue [nowPlayingItemDidChange] %{public}@ -> %{public}@
[InfoCenter] (%{public}@) invalidatePlaybackQueue [identifiersDidChange]
becomeActivePlayerIfPossible: %{public}@ error: %{public}@
becomeActivePlayerIfPossible: %{public}@
becomeActivePlayer: %{public}@ failed %{public}@
becomeActivePlayer: %{public}@
MPNowPlayingInfoCenter resigned active system fallback error: %{public}@
MPNowPlayingInfoCenter resigned active system fallback
MPNowPlayingInfoCenter becoming active system fallback
MPNowPlayingInfoCenter became active system fallback error: %{public}@
MPNowPlayingInfoCenter became active system fallback
NPIC: setNowPlayingInfo: sending to MediaRemote
NPIC: setNowPlayingInfo: finished error: %{public}@
NPIC: setNowPlayingInfo: finished
Could not populate container %{public}@: %{public}@
[MPHomeSharingML3DataProvider] Home Sharing Library became unavailable: %{public}@
%{public}@: Failure to update shared library: %{public}@
[MPHomeSharingML3DataProvider] Home sharing group ID changed to: %{public}@
Updating rental playback start date
[MPHomeSharingML3DataProvider] Creating error resolver for item ID: %llu, account ID: %llu, rental ID: %llu
[MPHomeSharingML3DataProvider] Creating error resolver for media item: %{public}@ (accountID: %llu, accountTokenData: %llu bytes, downloaderAccountID: %llu, downloaderTokenData: %llu bytes)
Cannot create error resolver for media item: %{public}@ (accountID: %llu, accountTokenData: %llu bytes, downloaderAccountID: %llu, downloaderTokenData: %llu bytes)
[MPHomeSharingML3DataProvider] Creating error resolver for account ID: %llu, token data length: %lu
Cannot create error resolver for media item: %{public}@ (accountID: %llu, tokenData: %llu bytes)
[MPHomeSharingML3DataProvider] Sending request '%{public}@'
[MPHomeSharingML3DataProvider] Setting property '%{public}@' to '%{public}@' returned status code %lu
[MPHomeSharingML3DataProvider] Removing oldest cached library: %{public}@
[MPHomeSharingML3DataProvider] [Browse] No group ID known, trying to determine it from user defaults account / password.
[MPHomeSharingML3DataProvider] Determined group ID: %{public}@
[MPHomeSharingML3DataProvider] [Browse] Ending scan.
[MPHomeSharingML3DataProvider] [Browse] Beginning scan.
[MPHomeSharingML3DataProvider] [Browse] Group ID: %{public}@
[MPHomeSharingML3DataProvider] [Browse] No group ID, skipping scan.
[MPHomeSharingML3DataProvider] [Browse] Searching for libraries in home sharing group: %{public}@
[MPHomeSharingML3DataProvider] [Browse] Browser: %{public}@ Removed %{public}@
[MPHomeSharingML3DataProvider] [Browse] Found library %{public}@
[MPHomeSharingML3DataProvider] [Browse] Added %{public}@
[MPHomeSharingURLProtocol] Starting loading for %{public}@
[MPArtwork] Failed to deprioritize artwork request %{public}@ 
 unknown artwork source type
SOD: Unable to create objects table. error: %{public}@
SOD: Unable to create assets table. error: %{public}@
SOD: Unable to create object relationships table. error: %{public}@
SOD: _MPServerObjectDatabaseAssetsMatchingIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: _MPServerObjectDatabaseAssetsMatchingIdentifierSet query='%{public}@' stepError=%{public}@
SOD: Unable to create database schema. Attempting fallback to in-memory database.
SOD: payloadForRelatedEntityWithIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: payloadForRelatedEntityWithIdentifierSet stepError: %{public}@
SOD: payloadForRelatedEntityWithIdentifierSet jsonError: %{public}@
SOD: Unable to create statements. error: %{public}@
SOD: removeRelationshipsForParentIdentifiersError: %{public}@
SOD: relateIdentifiers:toParentIdentifiers:order: %{public}@
SOD: importAssetMiniSINF: %{public}@
SOD: importAssetURL stepError: %{public}@
SOD: importAssetURL: skipping [existing asset already in database] id=%{public}@ / flavor=%{public}@
SOD: insertAssetError: %{public}@
SOD: insertObjectError: %{public}@
SOD: enumerateAssetsMissingSINFsUsingBlock stepError: %{public}@
SOD: relatedIdentifierSetsForParentIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: relatedIdentifierSetsForParentIdentifierSet stepError: %{public}@
SOD: modelObjectMatchingIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: modelObjectMatchingIdentifierSet jsonError: %{public}@
SOD: modelObjectMatchingIdentifierSet stepError: %{public}@
SOD: databasePath: %{public}@
SOD: Unable to create server objects database at path=%{public}@ error=%{public}@
[MPHomeSharingRentalTracker] Saving rentals to %{public}@
[MPHomeSharingRentalTracker] Removing all rentals for database ID: %{public}@
[MPHomeSharingRentalTracker] Removing rental with item ID: %{public}@
Failed to checkin rental to iTunes Store.
[MPHomeSharingRentalTracker] iTunes rental checkout response: %{public}@
Failed iTunes side checkout request (response code = %lu)
[MPHomeSharingRentalTracker] Adding rental with item ID: %llu, database ID: %{public}@
[MPHomeSharingRentalTracker] Loading rentals from %{public}@
Dropping empty node: %{public}@
Property href of contents dictionary not found for recommendation item: %{public}@
Contents dictionary not found on relationships of recommendation item: %{public}@
Relationships dictionary not found on recommendation item: %{public}@
Recommendation item should be a dictionary: %{public}@
Recommendation item modeling failure: %{public}@
[MPHomeSharingErrorResolver] Token response: %{public}@
[MPHomeSharingErrorResolver] Got keybag data of length: %lu
[MPHomeSharingErrorResolver] Got token data of length: %lu
[MPHomeSharingErrorResolver] Reconnecting to HomeSharing Library for error: %{public}@
[MPRemoteCommandCenter] setSupportedCommands playerID=%{public}@ %{public}@
Error setting supported commands error: %{public}@
RCC: dispatchCommandEvent: command=%{public}@
CommandDispatch
commandType=%ld
RCC: dispatchCommandEvent: command=%p finished
Updated launch commands error: %{public}@
Updated launch commands
[MPHomeSharingRentalErrorResolver] Rental checkout finished
[MPHomeSharingRentalErrorResolver] iTunes set rental playback start date response: %{public}@
[MPHomeSharingRentalErrorResolver] Rental checkout failed: %{public}@
[MPHomeSharingRentalErrorResolver] Checking out rental on iTunes side after failure with item ID: %llu homesharing ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental checkout response: %{public}@
[MPHomeSharingRentalErrorResolver] Checking in rental on iTunes side with item ID: %llu homesharing ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental check-in response: %{public}@
[MPHomeSharingRentalErrorResolver] Checking out rental for rental ID: %llu, account ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental check-in failed
 [MPStreamingDownloadSessionController] Removing file at path: %{public}@ for asset download session: %{public}@
 [MPStreamingDownloadSessionController] 
Posting failure for download session: %{public}@
 [MPStreamingDownloadSessionController] 
 File already exists at path: %{public}@, removing it.
 [MPStreamingDownloadSessionController] Prioritizing download token %llu due to download token %llu finishing.
 [MPStreamingDownloadSessionController] Verifying file size for asset download session is valid: %{public}@, file size limit: %lli, available file size: %lli
 [MPStreamingDownloadSessionController] 
Stopping asset download session due to it being too large: %{public}@
 [MPStreamingDownloadSessionController] Purging %llu bytes for %{public}@ because needed space: %llu is greater than available capacity: %llu
 [MPStreamingDownloadSessionController] Asset download session finished successfully: %{public}@ (%{public}@)
 [MPStreamingDownloadSessionController] 
Invalid file path for %{public}@ due to it being a directory: %{public}@
 [MPStreamingDownloadSessionController] Removing file at file path for %{public}@ due to it using DP info: %{public}@
 [MPStreamingDownloadSessionController] 
Invalid file path for %{public}@ due to it being missing: %{public}@
 [MPStreamingDownloadSessionController] Removing file at file path for %{public}@ due to playback item metadata not allowing asset caching: %{public}@
 [MPStreamingDownloadSessionController] Removing file at file path for %{public}@ due to it missing the playback item metadata: %{public}@
 [MPStreamingDownloadSessionController] Set the file path for %{public}@ (%{public}@) to %{public}@, replaced file path: %{public}@
 [MPStreamingDownloadSessionController] Didn't set the file path for %{public}@ (%{public}@) due to the playback item metadata rejecting it.
 [MPStreamingDownloadSessionController] 
Asset download session failed: %{public}@ (%{public}@) error: %{public}@
 [MPStreamingDownloadSessionController] Deferring start of download session %{public}@ due to another download token being prioritized: %llu
 [MPStreamingDownloadSessionController] Deferring start of download session %{public}@ due to all downloads being paused.
 [MPStreamingDownloadSessionController] Releasing download session: %{public}@
 [MPStreamingDownloadSessionController] Stopping asset download session (%{public}@) due to download session (%{public}@) being released.
 [MPStreamingDownloadSessionController] Deferring newly prioritized download token %llu due to all downloads being paused.
 [MPStreamingDownloadSessionController] Prioritizing download session: %{public}@
 [MPStreamingDownloadSessionController] Deferring prioritization of download session %{public}@ %llu due to all downloads being paused.
 [MPStreamingDownloadSessionController] %{public}@: No playback item metadata, finishing...
 [MPStreamingDownloadSessionController] %{public}@: Attempting to acquire download session...
 [MPStreamingDownloadSessionController] 
 %{public}@: Missing adam ID, which is required for endpoint type %ld. Finishing...
 [MPStreamingDownloadSessionController] %{public}@: Running operation %{public}@ for endpoint type %ld...
 [MPStreamingDownloadSessionController] 
 %{public}@: Missing buy parameters, which are required for endpoint type %ld. Finishing...
 [MPStreamingDownloadSessionController] 
 %{public}@: Unable to create download session with HLS playlist URL: %{public}@
 [MPStreamingDownloadSessionController] 
 %{public}@: Unable to create download session with source URL: %{public}@
 [MPStreamingDownloadSessionController] %{public}@: Finishing with download session: %{public}@ error: %{public}@
 [MPStreamingDownloadSessionController] 
%{public}@: Unknown endpoint type (%ld), unable to create request. Finishing...
 [MPStreamingDownloadSessionController] 
 %{public}@: Missing sourceURL from response: %{public}@
 [MPStreamingDownloadSessionController] 
 %{public}@: Redownload operation returned error: %{public}@
 [MPStreamingDownloadSessionController] 
 %{public}@: Lease item found (%{public}@), but it didn't have a valid source URL
 [MPStreamingDownloadSessionController] 
 %{public}@: No lease item found in response
 [MPStreamingDownloadSessionController] 
 %{public}@: Get asset request returned error: %{public}@
 [MPStreamingDownloadSessionController] Ending pause of all download sessions...
 [MPStreamingDownloadSessionController] Pausing all download sessions...
%{public}@ - _resignActive - Resigning
%{public}@ - _resignActive - Removing update handlers on inactive account
%{public}@ - _becomeActiveAndWaitUntilDone: - Activating
%{public}@ - _initializeUpdateInProgressState - Setting up Saga update progress handler
%{public}@ - _initializeUpdateInProgressState - Setting up Jalisco update progress handler
%{public}@ - Setting JaliscoLibraryUpdateInProgress to %{BOOL}u JaliscoLibraryInitialImport to %{BOOL}u - Posting MPCloudControllerIsUpdateInProgressDidChangeNotification [Jalisco]
%{public}@ - Setting CloudLibraryUpdateInProgress to %{BOOL}u CloudLibraryInitialImport to %{BOOL}u - Posting MPCloudControllerIsUpdateInProgressDidChangeNotification [Saga]
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Requesting cloud authentication state [cloudEnabled=%{BOOL}u]
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Retrieved cloud authentication state [isAuthenticated=%{BOOL}u]
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Cloud authentication did change [%{BOOL}u -> %{BOOL}u] - Posting notifications [MPCloudControllerIsCloudEnabledDidChangeNotification]
%{public}@ - isCloudEnabled=%d, didHandleStateChange=%d
%{public}@ - Skipping all properties for setItemProperties:forPurchaseHistoryID: %{public}@
[MPCloudController] Failed to find ML3 equivalent for property: %{public}@
%{public}@ - reason=%d, disableCloudLibraryReason=%d
[CloudPersonalization] Deprioritize artwork request not supported for artworkType=%ld, sourceType=%ld
%{public}@ - Skipping all properties for setItemProperties:forSagaID: %@
%{public}@ - Skipping all properties for setPlaylistProperties:trackList:forPlaylist:completionHandler: %@
%{public}@ - Received notification [%@]
%{public}@ was paused for playback queue transaction, but route changed. Not resuming after playback queue transaction commits.
Setting default EQ to %ld
 AVPlayerCurrentItemDidChangeNotification
[{public}%@] Setting uses external playback while external screen is active to %{public}@ on player %{public}@ (not enqueued)
[%{public}@] Setting uses external playback while external screen is active to %{public}@ on player %{public}@ (enqueued)
[%{public}@] Setting uses audio only mode for external playback to %{public}@ on player %{public}@ (not enqueued)
[%{public}@] Setting uses audio only mode for external playback to %{public}@ on player %{public}@ (enqueued)
Setting rate on AVQueuePlayer: %f
Ignoring requested rate (%f), route changed during playback queue transaction.
[%{public}@] Setting allows external playback to %{public}@ on player %{public}@ (not enqueued)
[%{public}@] Setting allows external playback to %{public}@ on player %{public}@ (enqueued)
Restoring rate to %f after playback queue transaction.
Committing playback queue transaction, %lu queued operations.
Setting rate to 0 for playback queue transaction.
Beginning playback queue transaction.
 MPQueuePlayer currentItem changed: %{public}@ -> %{public}@
 MPQueuePlayer rate changed: %f -> %f
 MPQueuePlayer item status changed: %{public}@ -> %{public}@
 insufficient external protection changed
MP->AV QueuePlayer Log Mapping: %{public}@ -> %{public}@
%{public}@: Got bag from server environment %{public}@ with correlation key %{public}@.
Determined effective cloud network type: %ld
Determined average bitrate for %{public}@: %f
RRC %{public}@: Request loading skipped [no request]
RRC %{public}@: Request loading skipped [already loading]
RRC %{public}@: Request loading skipped [not needed]
RRC <%{public}@ %p>: Request finished loading
RRC <%{public}@ %p>: Request failed with error: %{public}@
RRC <%{public}@ %p>: Recovering from error. shouldRetry: %d
RRC <%{public}@ %p>: Delegate %p returned shouldRetry: %d
RRC %{public}@: Reloading [retry mismatched request revision]
RRC <%{public}@ %p>: Deferring replacement of %p to delegate %p
RRC <%{public}@ %p>: Replacing response
RRC <%{public}@ %p>: Delegate %p replacing response with %p
RRC <%{public}@ %p>: Delegate %p timeout replacing response.
RRC <%{public}@ %p>: Needs reload [failed request]
RRC <%{public}@ %p>: Scheduling retry after %fs
RRC %{public}@: Reloading [retry, failed request]
RRC %{public}@: Scheduled reload skipped.
RRC %{public}@: Needs reload [response invalid]
RRC %{public}@: Reloading [automatic, response invalid]
RRC %{public}@: Reloading [requested by client]
RRC %{public}@: Deferring clearing of %p to delegate %p
RRC %{public}@: Clearing response
RRC %{public}@: Delegate %p clearing response with %p
RRC %{public}@: Delegate %p timeout replacing response.
RRC %{public}@: Needs reload [request by client]
RRC %{public}@: Canceling request [request by client]
RRC %{public}@: Reloading [automatic, requested by client]
RRC %{public}@: Ending automatic reloading
RRC %{public}@: Starting automatic reloading
RRC %{public}@: Reloading [automatic, beginLoading]
RRC %{public}@: Removing observer for %p
RRC %{public}@: Updating response to %p
RRC %{public}@: Needs reload [response invalid before -setResponse:]
RRC %{public}@: Reloading [response invalid before -setResponse:]
RRC %{public}@: Adding observer for %p
RRC %{public}@: Needs reload [response invalid before -setResponse: after adding observer]
RRC %{public}@: Reloading [response invalid before -setResponse: after adding observer]
RRC %{public}@: Canceling request [request changed]
RRC %{public}@: Needs reload [request changed]
RRC %{public}@: Reloading [automatic, request changed]
RRC %{public}@: Ending automatic reloading [dealloc]
collection offer could not be merged.  Using link instead.
showing debugging offer for '%@' since real offer is unusable...
collection offer is not purchasable: %@.
No domains in music common dictionary of bag, can't generate URL: %{public}@
No host found for API domain requested (%{public}@): %{public}@
No music subscription dictionary in bag, can't get allowed FCKinds for CarPlay: %{public}@
CarPlay FCKinds whitelist not found in musicSubscription dictionary, wrongly typed or empty: %{public}@
Encountered negative FCKind in CarPlay FCKinds whitelist in bag, dropping it: %{public}@
No completion offer available for storeLookupID = %@ (%@)
No completion offer available for storeLookupID = %@ (no store album IDs available)
No completion offer available storeLookupID = %@ (local content is not mergable with store offers)
Issuing lookup request for storeLookupID = %@
Could not receive response for storeLookupID = %@, error = %@
Received response for storeLookupID = %@
No completion offer available for storeLookupID = %@ (offer is not personalized - weak token may be invalid...)
No completion offers available for storeLookupID = %@.  Underlying error = %@.
exception while handling SSLookupResponse for storeLookupID = %@, exception = %@, userInfo = %@
The previously available offer for storeLookupID = %@ is no longer available from the store.  Either the offer has been purchased, or the offer is not available for some other reason
Warning: property %{public}@ not handled yet.
Invalid media item.  No property values present for %@
Ignored %lu items with no property values %@
NULL image being analyzed.
Zero-sized image being analyzed.
property %{public}@ not handled yet.
offer for collection '%@' did not contain any items.
NOTE: offer for collection '%@' did not contain any items not already present.
No items available in offer for collection %lld
No offer will be presented - offered collection is restricted %lld
No unrestricted items available in offer for collection %lld
All items in CMC response already exist locally for collection %lld
No downloadable or purchasable items available in offer for collection %lld
SIL-Proxy %{public}@: updateItem item=%{public}@
SIL-Proxy %{public}@: updateSection
SIL-Proxy %{public}@: removeItem item=%{public}@
SIL-Proxy %{public}@: moveItemToTail item=%{public}@
SIL-Proxy %{public}@: moveItem:afterItem: item=%{public}@ afterItem=%{public}@
SIL-Proxy %{public}@: moveItemToHead item=%{public}@
SIL-Proxy %{public}@: insertItemsAtTail itemsCount=%lld
SIL-Proxy %{public}@: insertItems:afterItem: afterItem=%{public}@ itemsCount=%lld
SIL-Proxy %{public}@: insertItemsAtHead itemsCount=%lld
SIL-Proxy %{public}@: init sil=%{public}@ itemsCount=%lld
section=%{public}@
SIL-Replace-Reload
SIL-Replace
SIL-Replace-Enumerate
Updating remote view controller routing context UID : %{public}@
MediaControls dismissed with reason : %@
Connection established to remote view controller.
Received request to accept new connection.
Connection to remote view controller invalidated.
Dismissing remote view controller at app's request.
Stop prewarming remote view controller.
Start prewarming remote view controller. Configuration : %{public}@
Started observing routing context UID changes for app bundle: %{public}@
%{public}s: Changing %{public}@ preference to %{BOOL}u.
WARNING: Generated debug completion offer from buy-only offer (collection level only)
contentRatingDictionary expected to be a dictionary, and not %@
[CMC] WARNING: contentRatingDictionary expected to be a dictionary, and not %@
[EndpointRoutingDataSource] Route search failed with error: %@
[EndpointRoutingDataSource] Successfully found and picked route.
<%{public}@: %p> setting routing context UID = %{public}@
Received artwork with length %llu for content item %@.
Cannot post _MPContentItemDidChangeNotification, item is missing required identifier.
<_MPActiveUserChangeMonitor %p> - Canceled notification timer %p [%{public}@]
<_MPActiveUserChangeMonitor %p> - Started notification timer %p
<_MPActiveUserChangeMonitor %p> - Ingesting notification %{public}@ [%ld of %ld]
<_MPActiveUserChangeMonitor %p> - Firing notification timer %p [%ld of %ld notifications received] - received=[%{public}@] - expected=[%{public}@]
RCC: invokeCommandWithEvent: handler=%{public}@ event=%{public}@
RCC: invokeCommandWithEvent: finished handler=%{public}@ event=%p
RCC: Command handler completion timeout. Not waiting on completion.
Command handler completion deallocated without being called. event=%{public}@
Unsupported action method signature. Must return MPRemoteCommandHandlerStatus or take a completion handler as the second argument. ** This will break in a future release. **
available modes: %@
 checking mode with size %@
  found preferred display mode: %@
  found larger than ideal display mode: %@
  found smaller than ideal display mode: %@
using mode: %@
no suitable mode found for external display, available modes are %@
Error: no external display attached in tv out mode
Chapters are not implemented in Modern UI.
Did not find playlist for identifiers: %{public}@
Output device UIDs determined to be available. Output devices from AVODDS will no longer be ignored.
Output device UIDs determined to be unavailable. Output devices from AVODDS will be ignored.
picked endpoint route, set devices: %{public}@
picked endpoint route, clear system endpoint: %{public}@
<%{public}@:%p> setting routing context UID = %{public}@
Created new application output context: %{public}@ for data source: %{public}@
<%{public}@: %p> External device: %{public}@ changed endpoint to: %{public}@
[BaseRoutingDataSource] Received active audio route did change notification: %{public}@
[BaseRoutingDataSource] Received external screen type did change notification with screen type = %ld
[BaseRoutingDataSource] Unpicking AirPlay AV routes...
[BaseRoutingDataSource] Failed to unpick AirPlay AV routes: %{public}@
[BaseRoutingDataSource] Successfully unpicked AirPlay AV routes
Failed to encode cached queue descriptor error: %{public}@
Failed to decode cached queue descriptor error: %{public}@
Failed to encode cached now playing error: %{public}@
Failed to decode cached now playing error: %{public}@
Omitting personalizedStore IDs [missing databaseID] identifierSet=%{public}@
Omitting library IDs [missing databaseID] identifierSet=%{public}@
Download did change %{public}@ with no existing download.
Download did change: %{public}@. Download: %{public}@
Download states did change: %{public}@, progressed downloads: %{public}@, added downloads: %{public}@, finished: %{public}@
[%{public}@] UNKNOWN PURCHASE TYPE: %li
Failed to move download: %{public}@ with error: %{public}@
Failed to move purchase: %{public}@ with error: %{public}@
Failed to restart downloads %{public}@ with error %{public}@
Finished attempted restart with removed downloads: %{public}@
Failed to resume downloads %{public}@ with error %{public}@
Failed to pause downloads %{public}@ with error %{public}@
Caneled purchases %{public}@ error: %{public}@
Caneled purchases %{public}@
Paused downloads %{public}@ error: %{public}@
Paused downloads %{public}@
Failed to cancel downloads %{public}@ with error %{public}@
Failed to cancel purchases %{public}@ with error %{public}@
Cancelled purchases %{public}@, result %d error: %{public}@
Cancelled purchases %{public}@, result %d
Cancelled downloads %{public}@ error: %{public}@
Cancelled downloads %{public}@
MPModelStoreBrowseContentItemBuilder
NSFastEnumeration
MPMediaDownloadManager
MPModelForYouRecommendationsMusicKitRequestOperation
MPMediaControlsConfiguration
NSCopying
NSSecureCoding
NSCoding
NSObject
MPStoreSocialRequestOperationDataSource
MPStoreSocialUnblockOperationDataSource
MPMediaLibraryView
MPUtilities
MPRequest
_MPStateDumpPropertyListTransformable
MPRequestCancellationToken
MPMiddlewareOperation
MPResponse
MPMovieTVHUDView
MPModelResponse
MPModelLyrics
MPModelLyricsKind
MPMoviePlayerController
MPMediaPlayback
AVPlayerViewControllerDelegatePrivate
AVPlayerViewControllerDelegate
MPMovieErrorLog
MPMovieErrorLogEvent
MPMovieAccessLog
MPMovieAccessLogEvent
MPTimedMetadata
_MPMoviePlayerProxyView
MPAssistantAnalyticsReportingController
MPAlternateTrack
MPUniversalTrackIDAdditions
MPRTCReportingSession
AVPlayerItemOutputPushDelegate
AVPlayerItemLegibleOutputPushDelegate
MPAlternateTracks
MPTiledArtworkRequest
MPRTCReportingEvent
MPModelLibraryDeleteEntityChangeRequestOperation
MPAVItem
MPAVItemAdditions
MPStoreItemMetadataRequest
MPQueueFeeder
MPModelLibraryDeleteEntityChangeRequest
MPStoreItemMetadata
MPTimeMarker
MPAVRoutingTableViewCell
MPAVRoutingThemeableCellView
MPMediaControlsViewController
UIViewControllerAnimatedTransitioning
UIViewControllerTransitioningDelegate
_MPMediaControlsPresentationController
MPMediaControlsStandaloneViewController
MPTiledArtworkDataSource
MPArtworkDataSource
_MPModelLibraryRequestItemsQueryOperation
MPModelLibraryRequestOperation
4@P a
MPModelTVEpisodePlaybackItemMetadata
MPAVController
AVAudioSessionDelegateMediaPlayerOnly
AVAudioSessionDelegate
MPAVQueueControllerDelegate
MPAVRoutingControllerDelegate
MPStoreItemOffer
MPArtworkCatalog
MPStoreItemMovieClip
MPStoreRedownloadProductResponse
MPRadioStationEvent
MPMutableRadioStationEvent
MPRadioController
MPClientRadioController
MPStoreModelRadioStationBuilder
MPModelSong
MPModelSongKind
MPAVTelevisionRoutingDataSource
MPAssistantLogEvent
MPAssistantMusicLogEvent
MPMediaLibraryAlbumAppData
MPStoreFileAssetInfo
MPMediaRemoteEntityTranslatorContext
MPEntityPropertyTranslator
_MPMediaRemoteEntityPropertyTranslator
MPMediaRemoteEntityTranslator
MPWeakTimer
MPModelLibraryKeepLocalChangeRequest
MPVideoViewController
MPSwipableViewDelegate
MPVideoControllerProtocol
MPControllerProtocol
MPViewController
MPAVControllerNode
MPPCompoundPredicate
MPAVPolicyEnforcer
MPStoreRedownloadProductOperation
MPReflectionImageView
MPTiledArtworkRepresentationCacheKey
MPAVRoutingTableViewCellSubtitleTextState
MPLocalMediaQueryRemotePlaybackQueue
MPRemotePlaybackQueue
MPEmptyPlaybackQueue
MPCustomDataPlaybackQueue
MPGeniusPlaybackQueue
MPGenericTracklistPlaybackQueue
MPRadioStationRemotePlaybackQueue
MPRouteButton
MPStoreLyricsRequest
MPModelPodcastAuthor
MPRadioRecentStationsGroup
MPModelStoreBrowseSectionBuilder
MPTransportButton
MPTransportControls
MPAdditions
MPModelStoreGroupingsMusicKitResponseParser
MPStoreModelAlbumBuilder
MPShuffleableSectionedIdentifierList
_MPSSILDelegate
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
_MPSSILImplementation
_MPSSILImplementationInitToken
MPModelLibrarySearchScope
MPModelLibraryAlbumAppDataChangeRequestOperation
MPModelRecentlyPlayedRequest
MPModelLibraryAddToPlaylistChangeRequest
MPVideoBackgroundView
MPVideoDestinationBackgroundView
MPModelStoreBrowseResponse
MPArtworkResizeUtility
MPAVLightweightRoutingController
MPSectionedCollection
NSMutableCopying
MPMutableSectionedCollection
MPModelSupport
MPStoreModelTVShowBuilder
_MPAVPlayerViewPlayerLayerView
_MPAVPlayerView
MPVideoView
MPModelPlayEvent
Convenience
MPModelForYouRecommendationsResponse
MPMediaControlsStatusBarStyleOverridesCoordinator
SBSStatusBarStyleOverridesCoordinatorDelegate
MPModelStoreRadioMusicKitRequestOperation
MPVideoPlaybackOverlayView
MPDetailSliderDelegate
MPVolumeControllerDelegate
MPAVLightweightRoutingControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
MPKnockoutButton
MPStoreRedownloadProductItem
MPSectionedIdentifierListEnumerator
_MPSectionedIdentifierListProxyEntry
MPSectionedIdentifierListEnumerationResult
MPSectionedIdentifierListReverseEnumerator
MPFastForward
MPStoreHLSAssetInfo
MPAssistantMusicSummaryLogEvent
MPVolumeSlider
MPVolumeDisplaying
MPVolumeView
MPModelLibraryRequest
MPModelRequestDetailedKeepLocalStatusRequesting
MPModelLibraryResponse
MPModelResponseDetailedKeepLocalStatusRequesting
MPModelLibraryResponseKeepLocalStatusConfiguration
MPStreamingDownloadSession
MPStorePlayWhileDownloadSession
MPMediaLibraryPlaybackItemMetadata
MPModelForYouRecommendationsRequest
MPVolumeViewController
MPVolumeSettingsController
MPSectionedIdentifierListEntryPositionKey
MPSectionedIdentifierListEntry
MPSectionedIdentifierListEnumerationTrackingEntry
MPSectionedIdentifierListEnumerationItem
MPSectionedIdentifierListTailEntry
MPSectionedIdentifierListHeadEntry
MPSectionedIdentifierListItemEntry
MPMoviePlayerViewController
MPRemoteCommandEvent
MPSeekCommandEvent
MPChangeQueueEndActionCommandEvent
MPPlaybackSessionCommandEvent
MPSetPlaybackSessionCommandEvent
MPReorderQueueCommandEvent
MPAdvanceRepeatModeCommandEvent
MPAdvanceShuffleModeCommandEvent
MPInsertIntoPlaybackQueueCommandEvent
MPSetPlaybackQueueCommandEvent
MPCreateRadioStationCommandEvent
MPChangeShuffleModeCommandEvent
MPChangeRepeatModeCommandEvent
MPChangePlaybackPositionCommandEvent
MPSpecialSeekCommandEvent
MPChangeLanguageOptionCommandEvent
MPSkipTrackCommandEvent
MPFeedbackCommandEvent
MPRatingCommandEvent
MPChangePlaybackRateCommandEvent
MPSkipIntervalCommandEvent
MPModelLibraryDefaultSectionedCollectionDataSource
MPLazySectionedCollectionDataSource
MPModelStoreBrowseRequest
MPMediaControlsLanguageOptions
MPModelArtist
MPModelArtistKind
MPAVRoutingController
MPAVRoutingControllerSelectionQueue
MPAVRoutingControllerSelection
MPCompleteMyCollectionArtworkDataSource
MPModelComposer
MPModelComposerKind
MPServerObjectDatabaseImportRequest
MPServerObjectDatabaseImportResult
MPServerObjectDatabaseMetadataImportRequest
MPServerObjectDatabaseMediaKitImportRequest
MPServerObjectDatabaseStorePlatformImportRequest
MPServerObjectDatabaseAssetImportRequest
MPServerObjectDatabaseSubPlaybackDispatchImportRequest
MPServerObjectDatabaseSINFImportRequest
_MPModelShimRequestMiddlewareOperation
MPModelShimRequest
_MPModelShimRequestMiddleware
MPMiddleware
MPModelShimResponse
_MPModelShimResponseBuilder
MPRTCReportingPrepareInternalSessionOperation
_MPMediaLibraryMLCoreStorage
MediaLibraryCore
MPModelStoreBrowseSectionUniformContentItemTypeResolver
MPContentItemAdditions
MPPlaybackContext
MPSwipableView
UIGestureRecognizerDelegate
MPActivityGestureRecognizer
MPSwipeGestureRecognizer
MPTapGestureRecognizer
MPContentTasteController
MPStoreItemMetadataRequestController
MPModelStoreBrowseMusicKitRequestOperation
MPButton
MPMediaPlaylist
MPMediaPlaylistCreationMetadata
MPModelTVEpisode
MPModelTVEpisodeKind
MPModelLibraryGlobalPlaylistImportChangeRequestOperation
MPPlaybackArchiveConfiguration
MPPlaybackArchive
MPMediaQuery
MPPProtobufferCoding
MPMediaPropertyPredicate
MPMediaPredicate
MPMediaConditionalPredicate
MPMediaCompoundPredicate
MPMediaCompoundAllPredicate
MPMediaCompoundAnyPredicate
MPMediaContainmentPredicate
MPMediaPersistentIDsPredicate
_MPMediaSearchStringPredicate
MPMediaQueryAdditions
MPModelLibraryImportChangeRequestOperation
MPStoreModelPlaylistBuilder
MPMusicPlayerController
MPMusicPlayerControllerClient
_MPMusicPlayerMediaItemProxy
NewMP
MPArtworkRepresentation
MPArtworkRepresentationCollection
_MPArtworkCatalogStaticDataSource
_MPStaticArtworkVisualIdenticalityIdentifier
MPArtworkDataSourceVisualIdenticality
MPPConditionalPredicate
MPAsyncOperation
MPUserIdentityConsuming
MPMediaItem
MPNondurableMediaItem
MPMediaItemArtwork
MPSectionedIdentifierListIdentifierPair
MPModelLibraryKeepLocalStatusRequestOperation
QueryCriteriaResultsCache
MPMediaLibrary
_MPActiveUserChangeMonitorDelegate
MPMediaLibraryConnectionAssertion
ICMediaLibraryAccessPermissionsHelper
0 0@
_MPMediaLibraryEntityChange
MPMediaLibraryContentProtectionAdditions
MPMediaLibrarySyncAnchorSupport
MPModelRequest
MPMediaPickerController_Appex
MPMediaPickerRemoteViewLoader
MPMediaPickerConfiguration
MPMediaPickerController
MPMusicMediaPickerClientController
MPMediaPickerControllerDelegatePrivate
MPMediaPickerControllerDelegate
MPAVQueueCoordinator
MPAVQueueCoordinating
MPLogDescription
MPAVQueueCoordinatorAdditions
_MPModelMediaRemoteItemArtist
_MPModelMediaRemotePodcastEpisodeAuthor
MPAddKeepLocalControl
MPStoreModelMovieMediaClipBuilder
MPLibraryKeepLocalStatusObserver
MPMediaDownloadObserver
MPLibraryKeepLocalStatusObserverIndividualEntityConfiguration
MPLibraryKeepLocalStatusObserverConfiguration
MPLibraryKeepLocalStatusObserverDetailedContainerConfiguration
MPMediaItemCollection
MPNotificationObserver
MPMediaDownload
MPStoreModelArtistBuilder
MPAVErrorResolverBlockHandler
MPAVErrorResolverDelegate
MPDetailSlider
MPDetailScrubControllerDelegate
MPDetailedScrubbing
MPMusicPlayerApplicationController
MPMusicPlayerControllerApplicationServer
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerActions
MPRemotePlayerServiceProtocol
MPMusicPlayerControllerQueue
_MPMusicPlayerQueueItemsProxy
MPMusicPlayerControllerMutableQueue
MPPlayableContentManager
CARSessionObserving
MPPlayableContentCallbackContext
MPStoreLyricsRequestOperation
MPModelRecentlyPlayedResponse
MPMediaAPIParserLayer
MPAudioDeviceController
_MPLazySectionedCollectionStorage
MPLazySectionedCollection
MPModelStaticAsset
MPModelStaticAssetKind
MPAVRoutingViewControllerUpdateDisplayedRoutesState
Debugging
MPAVRoutingViewController
MPAVRoutingTableViewCellDelegate
UITableViewDelegate
UIScrollViewDelegate
UITableViewDataSource
MPAVRoutingViewControllerItems
MPAVRoutingViewControllerUpdate
MPStoreModelSongBuilder
MPRemoteRadioController
NSXPCListenerDelegate
MPServiceRadioController
MPModelObjectMediaItem
MPStoreItemOfferAsset
MPStoreItemMetadataCache
MPNowPlayingInfoLyricsItemToken
MPNowPlayingInfoLyricsItem
MPNowPlayingInfoLyricsEvent
MPStoreSocialFollowOperationDataSource
MPAVAuxiliaryDevice
_MPAbstractNetworkArtworkDataSourceVisualIdenticalityIdentifier
MPAbstractNetworkArtworkDataSource
AVAssetResourceLoaderDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
_MPArtworkDataSourceURLCache
MPMusicPlayerQueueDescriptor
MPMusicPlayerMediaItemQueueDescriptor
MPMusicPlayerStoreQueueDescriptor
MPMusicPlayerPlayParameters
MPMusicPlayerPlayParametersQueueDescriptor
MPMusicPlayerRadioStationQueueDescriptor
MPMusicPlayerPlaybackArchiveQueueDescriptor
MPModelSortDescriptor
MPMultiSortDescriptor
MPModelLibraryModelSectionedCollectionDataSource
MPAVErrorResolver
MPAVErrorResolverAdditions
MPModelMediaClip
MPModelMediaClipKind
MPAVRoutingViewItem
MPMRAVEndpointWrapper
MPMRAVOutputContextWrapper
MPMRAVEndpointObserverWrapper
MPConcreteMediaItem
MPCacheableConcreteMediaEntity
MPConcreteMediaItemArtwork
MPConcreteMediaItemCollection
MPConcreteMediaPlaylist
MPMediaArray
MPMediaEntityResultSetArray
MPConcreteMediaEntityPropertiesCache
MPMediaLibraryDataProviderML3
MPMediaLibraryDataProviderPrivate
MPMediaLibraryDataProvider
MPMediaLibraryAdditions
MPMediaLibraryDataProviderML3Additions
MPAVRouteConnection
ML3Additions
MPModelStaticRequest
MPModelStaticResponse
MPModelLibraryAlbumAppDataChangeRequest
MPAVRoutingTableHeaderView
MPStoreFileAssetFairPlayInfo
MPStreamingDownloadSessionRequest
MPMediaEntity
MPMediaQuerySectionInfo
MPMediaQueryMutableSectionInfo
MPStorePlayWhileDownloadController
SSDownloadHandlerDelegate
MPStoreDownloadManagerObserver
MPVolumeControllerSystemDataSource
MPVolumeControllerDataSource
MPVolumeController
MPVolumeControllerDataSourceDelegate
MPVolumeControllerRouteDataSource
MPMediaChapter
MPStoreLibraryPersonalizationCollectionDataSource
MPMediaChapterTimeMarker
MPAudioVideoRoutingPopoverController
MPAVRoutingViewControllerDelegate
MPMediaPlaybackItemMetadata
MPMediaPlaybackItemMetadataAdditions
MPKeyValueObserver
MPModelLibrarySearchRequestOperation
MPBaseEntityTranslator
_MPBaseEntityRelationshipTranslator
MPEntityRelationshipTranslator
MPAVOutputDeviceDescription
MPAVRoute
MPModelForYouRecommendationsRequestOperation
MPStoreDownloadExpectationController
MPStoreLibraryMappingResponse
MPDownloadProgressView
_MPDownloadProgressRingView
MPModelStoreBrowseRequestOperation
MPMediaKitEntityPayloadTransformer
MPMediaKitEntityTranslatorContext
_MPMediaKitEntityPropertyTranslator
_MPMediaKitEntityRelationshipTranslator
MPMediaKitEntityTranslator
MPMediaKitGenericObjectTranslator
MPModelMovie
MPModelMovieKind
MPModelRadioStation
MPModelRadioStationKind
MPModelTVShowCreator
MPPlaceholderArtwork
MPMediaAdditions
MPAVClippingTableView
MPModelPlaylistEntriesShareEligibilityRequestOperation
MPModelLibraryAddToPlaylistChangeRequestOperation
MPStoreModelPlaybackPositionBuilder
MPModelPodcast
MPModelPodcastKind
MPVolumeHardwareButtonController
MPModelLibraryHasBeenPlayedChangeRequest
MPStoreArtworkDataSource
MPMediaQuerySection
MPARC4RandomSource
MPRandom
MPRandomDistribution
MPArtworkResizeOperation
MPBrowsableContentItem
MPMutableArtworkColorAnalysis
MPArtworkColorAnalysis
MPVolumeGroupSliderCoordinator
Padding
MPModelStoreBrowseContentItem
MPModelStoreBrowseRoomRequest
MPModelMoviePlaybackItemMetadata
MPVideoOverlay
MPStoreModelTVEpisodeBuilder
MPMediaLibrarySystemFilters
MPPSearchStringPredicate
MPMediaLibraryDataProviderSystemML3
MPMediaLibraryDataProviderSystemML3StringCoercion
MPStoreModelGenericObjectBuilder
_MPKeyPathEntityPropertyTranslator
_MPKeyPathEntityRelationshipTranslator
MPStoreRadioStreamAssetInfo
MPAVBatteryLevel
MPStoreLibraryPersonalizationRequestOperation
4AP`
_MPStoreLibraryPersonalizationAggregateLibraryAddedOperation
MPPlaybackUserDefaults
MPVolumeHUDController
MPMusicPlayerSystemController
MPSystemMusicPlayerController
MPMusicPlayerControllerSystemServer
MPNowPlayingInfoQueueCoordinator
MPModelStoreGroupingsMusicKitRequestOperation
MPMutableStoreAssetPlaybackResponse
MPStoreAssetPlaybackResponse
MPCloudServiceStatusController
ICEnvironmentMonitorObserver
MPModelStoreBrowseRoomMusicKitResponseParser
MPPMediaQuery
MPDispatchQueueExclusiveAccessToken
MPPThreadKeyExclusiveAccessToken
MPExclusiveAccessToken
MPStoreModelStoreAssetBuilder
MPModelVerifyLocalFileAssetIntegrityRequest
MPMediaQueryCriteria
MPStoreSocialPendingFollowRequestOperationDataSource
MPStoreItemImportTrackData
MPRTCReportingSessionSummaryEvent
MPModelForYouRecommendationItem
MPLibraryAddStatusObserverAdditions
MPRTCReportingController
_MPRTCReportingAVItemDeallocationHandler
MPRTCReportingItemSessionContaining
MPRTCReportingItemSessionCreating
MPModelLibraryPlaylistEditChangeRequestOperation
MPProtocolProxy
MPModelLibraryTransientStateController
_MPModelLibraryRegisteredTransientState
MPNowPlayingInfoCenter
MPMediaRemoteEntityArtworkGenerator
MPNowPlayingInfoTransportableSessionResponse
_MPNowPlayingInfoTransportableSessionRequest
MPNowPlayingInfoTransportableSessionRequest
MPModelObject
MPModelKind
MPNowPlayingInfoCenterArtworkContext
NowPlayingInfo
MPLibraryRemovalAdditions
MPLibraryKeepLocalStatusObserverAdditions
MPSubscriptionStatusPlaybackInformation
MPHomeSharingML3DataProvider
MPHSBrowserDelegate
HSBrowserDelegate
MPStoreModelCuratorBuilder
MPMusicPlayerControllerNowPlayingTimeSnapshot
MPMusicPlayerControllerNowPlaying
MPMusicPlayerControllerApplicationQueueModifications
MPHomeSharingURLProtocol
MPCubicSpringTimingParameters
MPCubicSpringAnimator
MPMediaLibraryArtworkRequest
MPMediaLibraryArtwork
MPMediaLibraryArtworkCatalog
MPModelPlaylistEntryTVEpisodePlaybackItemMetadata
Saga
MPModelPlaylistEntriesShareEligibilityRequest
MPServerObjectDatabase
MPMediaKitEntityRelationshipPayloadProvider
_MPServerObjectDatabaseImporter
MPServerObjectDatabaseOperations
MPServerObjectDatabaseAsset
MPStoreModelRequestConfiguration
MPHomeSharingRentalTracker
MPPlayableContentManagerContext
MPModelForYouRecommendationMusicKitGroupBuilder
MPStoreRedownloadProductItemAsset
MPHomeSharingErrorResolver
SSAuthorizationRequestDelegate
SSRequestDelegate
_MPRemoteLaunchCommandCenter
MPRemoteCommandCenter
MPRemoteCommandDelegate_Internal
MPStoreModelTVSeasonBuilder
MPHomeSharingRentalErrorResolver
MPStreamingDownloadSessionController
MPModelHomeSharingAsset
MPModelLibraryHasPurchasesRequestOperation
MPModelLibraryHasPurchasesRequest
MPStoreItemLibraryImportElement
MPStoreItemLibraryImportLookupElement
MPStoreItemLibraryImport
MPMusicMediaPickerRemoteViewController
MPAVTelevisionRoute
MPAudioAndSubtitlesController
_MPAudioAndSubtitlesController
MPStoreLibraryMappingRequestOperation
MPModelRecentlyPlayedRequestOperation
MPPlaceholderAVItem
MPModelGenericObject
MPModelGenericObjectKind
MPChangeDetails
MPStoreModelObjectBuilder
MPNowPlayingInfoLanguageOptionGroupAdditions
MPNowPlayingInfoLanguageOptionAdditions
MPCloudControllerItemIDList
MPCloudController
MPModelLibraryImportChangeRequest
MediaAdditions
MPQueuePlayer
MPModelCurator
MPModelCuratorActualKind
MPStoreModelRequestOperation
MPGaplessInfo
MPStoreLibraryPersonalizationRequest
MPStoreLibraryPersonalizationResponse
MPStoreLibraryPersonalizingAdditions
MPModelSongPlaybackItemMetadata
MPModelPlaylist
MPModelPlaylistKind
MPStoreSocialRequestOperation
MPNetworkPlayabilityMonitor
MPModelLibraryStoreIDsImportChangeRequestOperation
MPRequestResponseController
MPAVOutputDeviceRoute
MPStoreCompletionOffering
MPStoreCollectionCompletionOffering
MPModelForYouRecommendationMusicKitItemBuilder
MPStoreCompletionOfferingLookupItem
MPStoreCompletionOfferingController
MCProfileConnectionObserver
MPModelLibraryIncrementSkipCountChangeRequest
MPUbiquitousPlaybackPositionEntity
MPRTCReportingSecureKeyLoadEvent
MPTiledArtworkRepresentationToken
MPStoreOfferMediaItem
MPStoreOfferMediaItemMethods
MPQueueFeederIdentifierRegistry
MPNowPlayingContentItem
MPArtworkColorAnalyzer
MPArtworkColorAnalyzerAlgorithmiTunesAdditions
MPArtworkColorAnalyzerAdditions_
MPModelObjectPlaybackItemMetadata
MPStoreAssetInfoPlaybackCache
MPStoreAssetInfoPlaybackCacheRequest
MPModelGenre
MPModelGenreKind
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperationMap
_MPMiddlewareChainBuilderProxy
MPMiddlewareChain
MPStoreOfferMediaItemCollection
MPStoreModelRequest
MPModelPlaybackPosition
MPStoreItemMovieClipAsset
MPPlaybackContextRemotePlaybackQueue
MPModelForYouRecommendationGroupBuilder
MPSectionedIdentifierList
MPExclusiveAccessible
_MPIdentifierListSectionProxy
MPMutableIdentifierListSection
_MPSectionedIdentifierListCloneIndexEntry
_MPSectionedIdentifierListEncodableNextEntriesProviding
MPSectionedIdentifierListPosition
MPStoreOffer
MPModelLibraryPlaylistEditChangeRequest
MPStorePlatformEntityTranslatorContext
_MPStorePlatformEntityPropertyTranslator
_MPStorePlatformEntityRelationshipTranslator
MPStorePlatformEntityTranslator
MPMediaControls
MPMediaControlsProtocol
MPMediaControlsRemoteViewControllerProtocol
_MPModelLibraryDownloadQueueDataSource
MPModelLibraryDownloadQueueResponse
MPModelLibraryDownloadQueueRequest
MPNetworkObserver
MPModelStoreBrowseRoomMusicKitRequestOperation
MPRTCReportingAssetLoadEvent
MediaPlayer
MPStoreSocialRemoveFollowerOperationDataSource
MPSSLookupResponseTransformContext
MPStoreOfferCMCParsing
MPStoreOfferCMC
MPModelForYouRecommendationItemBuilder
MPAVEndpointRoutingDataSource
MPAVCompanionProxiedEndpointRoutingDataSource
MPAVCompanionEndpointRoutingDataSource
MPCFWrapper
MPAsyncBlockOperation
MPStorePurchaseErrorResolver
MPUbiquitousPlaybackPositionController
MPStoreOfferContentRating
MPContentItem
MPStoreSocialUnfollowOperationDataSource
MPStoreOfferMediaItemArtwork
MPStorePlayWhileDownloadProperties
MPModelPerson
MPLibraryAddStatusObserver
MPRadioLibrary
MPStorePlatformMediaItem
_MPHomeSharingArtworkCacheKey
MPHomeSharingArtworkDataSource
MPNowPlayingInfoLanguageOption
MPNowPlayingInfoLanguageOptionGroup
MPRadioStation
_MPActiveUserChangeMonitor
MPRemoteCommand
MPSkipIntervalCommand
MPFeedbackCommand
MPRatingCommand
MPChangePlaybackRateCommand
MPChangeRepeatModeCommand
MPChangeShuffleModeCommand
MPSkipTrackCommand
MPSetPlaybackQueueCommand
MPChangePlaybackPositionCommand
MPReorderQueueCommand
MPInsertIntoPlaybackQueueCommand
MPAdvanceShuffleModeCommand
MPAdvanceRepeatModeCommand
MPSetPlaybackSessionCommand
MPPreloadPlaybackSessionCommand
MPSetPriorityForPlaybackSessionCommand
MPChangeQueueEndActionCommand
MPModelForYouRecommendationGroup
MPModelForYouRecommendationGroupKind
MPModelPlaylistEntry
MPModelPlaylistEntryKind
MPModelStoreBrowseResponseParser
MPStoreCompletionOfferResponse
MPStoreItemMetadataCacheKey
MPPPropertyPredicate
MPModelStoreBrowseSection
MPPropertySet
MPMutablePropertySet
MPStoreItemMetadataResponse
MPTVOutWindow
MPModelTVSeason
MPModelTVSeasonKind
MPAVRoutingSheet
_MPAVRoutingSheetSecureWindow
MPModelLibrarySearchRequest
MPModelLibrarySearchResponse
Ba"!
MPInlineVideoController
UIAlertViewDelegate
MPTransportControlsTarget
MPVideoOverlayDelegate
MPFullscreenWindow
MPFullScreenTransitionViewController
MPVideoContainerView
MPSubtitlesContainerView
MPAdvertisementContainerView
MPAlternateTracksContainerViewController
MPModelLibrarySearchSectionedCollectionDataSource
MPModelLibrarySearchEntityResultContainer
_MPModelLibraryItemArtist
_MPModelLibraryPodcastEpisodeAuthor
MPMediaLibraryTranslatorSchema
MPModalPresentationWindow
MPMediaLibraryArtworkDataSource
_MPMediaLibraryArtworkDataSourceCacheKey
_MPMediaLibraryArtworkVisualIdenticalityIdentifier
MPStoreSocialBlockOperationDataSource
MPModelFileAsset
MPModelFileAssetKind
MPAVOutputDeviceRoutingDataSource
MPAVCompanionProxiedOutputDeviceRoutingDataSource
MPMusicMediaPickerServiceController
MPMusicMediaPickerXPCInterfaces
MPInlineVideoFullscreenViewController
MPStoreModelTVShowCreatorBuilder
MediaPlayerAdditions
MPDetailScrubController
MPModelStorePlatformMetadataGenericObjectBuilder
MPStoreLibraryPersonalizationContentDescriptor
MPUserNotification
MPMediaEntityCache
MPAbstractFullScreenVideoViewController
MPAVEndpointRoute
MPStoreContentReporter
MPStoreContentReport
MPStoreOfferMediaItemArtworkDescriptor
MPAssistantMusicAssetLoadLogEvent
MPModelPlaylistEntrySongPlaybackItemMetadata
MPPlaybackArchiveDisplayProperties
_MPModelLibraryKeepLocalChangeRequestUpdateItemOperation
MPModelLibraryKeepLocalChangeRequestOperation
MPAVRoutingDataSource
MPModelStoreAsset
MPContentTastePendingUpdateRecord
MPModelTVShow
MPModelTVShowKind
MPPPersistentIDsPredicate
MPExportableArtworkProperties
MPPMediaPredicateValue
MPModelSocialPerson
MPModelSocialPersonKind
MPVideoPlaybackBackgroundView
MPMusicPlayerControllerSystemCache
MPAVRoutingTableViewHeaderView
MPStoreSocialServiceController
MPStoreSocialServiceTransientStatesSnapshot
_MPStoreSocialTransientState
_MPMediaLibraryEntityPropertyTranslator
MPMediaLibraryEntityTranslator
_MPMediaLibraryEntityRelationshipTranslator
MPMediaLibraryEntityTranslationContext
MPMediaLibraryEntityTranslatorAdditions
MPStoreModelMovieBuilder
MPModelPlaylistEntryMoviePlaybackItemMetadata
MPIdentifierSet
MPMutableIdentifierSet
MPMutableRadioIdentifiers
MPRadioIdentifiers
MPMutableUniversalStoreIdentifiers
MPUniversalStoreIdentifiers
MPMutablePersonalStoreIdentifiers
MPPersonalStoreIdentifiers
MPMutableLocalLibraryIdentifiers
MPLocalLibraryIdentifiers
MPAlternateTextTrack
MPModelLibraryIncrementPlayCountChangeRequest
MPAVClippingTableViewCell
MPModelPodcastEpisode
MPModelPodcastEpisodeKind
MPRouteLabel
MPArtworkConfiguration
MPRTCReportingNetworkInterfaceChangeEvent
MPRestrictionsMonitor
MPStoreArtworkRequestToken
MPStoreDownload
MPStoreDownloadManager
SSPurchaseManagerDelegate
SSDownloadManagerObserver
_MPStoreDownloadBlockObserver
MPStoreDownloadAdditions
MPStoreModelSocialPersonBuilder
MPModelAlbum
MPModelAlbumKind
MPPMediaPredicate
_requestedBrowseContentItemProperties
_albumBuilder
_artistBuilder
_curatorBuilder
_episodeBuilder
_movieBuilder
_radioStationBuilder
_socialPersonBuilder
_playlistBuilder
_seasonBuilder
_songBuilder
_showBuilder
_showCreatorBuilder
_shouldFakeEpisodes
_allowsRadioStations
_allowsVideoContent
initWithRequestedPropertySet:
contentItemTypeForRawResponseKindIdentifierValue:
contentItemTypeForRawResponseKindIdentifiers:
contentItemTypeForStoreItemMetadata:
contentItemTypeForMusicAPIType:
modelObjectWithStoreItemMetadata:sourceModelObject:userIdentity:
allowsRadioStations
setAllowsRadioStations:
allowsVideoContent
setAllowsVideoContent:
.cxx_destruct
setArtistUploadedContentType:
setSocialPerson:
setShowCreator:
setShow:
setSeason:
setRadioStation:
setCurator:
setDetailedItemType:
setItemType:
showCreator
show
season
socialPerson
curator
objectForKey:
containsObject:
isEqualToString:
integerValue
countByEnumeratingWithState:objects:count:
boolForKey:
allSupportedProperties
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
init
_init
addObserver:
removeObserver:
prioritizeDownload:
allMediaDownloadLibraryIdentifiers
enqueueAssetForDownload:withCompletionHandler:
sendKeepLocalStatusChanged:forLibraryIdentifier:entityType:withCompletionHandler:
cancelDownloads:
activeDownloadsCount
hasActiveDownloads
activeDownloadForMediaItemPersistentID:
activeDownloadForStoreID:
downloadForIdentifierSet:downloadState:
downloadLibraryWithCompletionHandler:
array
raise:format:
sharedManager
_storeBagDictionary
configurationForLoadingModelDataWithStoreBagDictionary:error:
produceResponseWithLoadedOutput:completion:
sectionProperties
itemProperties
_recommendationGroupBuilder
_recommendationGroupBuilderWithFlatSectionedItems:
_produceResultsWithItemsArray:
_produceResultsWithRecommendationsArray:recentlyPlayedArray:
_responseWithResults:personalizationResponse:
_personalizeRecommendationGroup:flatPersonalizedSectionedItems:
queryItemsWithStoreBagDictionary:
recommendationsURLWithStoreBagDictionary:
recentlyPlayedURLWithStoreBagDictionary:
isOnboardingRequired:
typesArrayWithTypes:
displayFilterKindsValueForOptions:
copy
addObject:
setPath:
setPercentEncodedQuery:
stringByReplacingOccurrencesOfString:withString:
percentEncodedQuery
setQueryItems:
queryItemWithName:value:
componentsJoinedByString:
arrayWithArray:
arrayWithObject:
addObjectsFromArray:
localTimeZone
setSubgroups:
subgroups
setSectionedItems:
groupType
isBackedByStoreItemMetadata
objectAtIndexedSubscript:
errorWithDomain:code:userInfo:
arrayWithCapacity:
setHTTPMethod:
arrayByAddingObjectsFromArray:
componentsWithURL:resolvingAgainstBaseURL:
_shouldPreventAutorotation
_allowsNowPlayingApplicationLaunch
_sortByIsVideoRoute
_style
_initatorStyle
_routingContextUID
_presentingAppBundleID
_routeUID
_sourceRect
copyWithZone:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
description
isEqual:
setStyle:
style
initatorStyle
setInitatorStyle:
routingContextUID
setRoutingContextUID:
presentingAppBundleID
setPresentingAppBundleID:
shouldPreventAutorotation
setShouldPreventAutorotation:
allowsNowPlayingApplicationLaunch
setAllowsNowPlayingApplicationLaunch:
sortByIsVideoRoute
setSortByIsVideoRoute:
sourceRect
setSourceRect:
routeUID
setRouteUID:
encodeCGRect:forKey:
encodeBool:forKey:
encodeObject:forKey:
encodeInteger:forKey:
decodeCGRectForKey:
decodeBoolForKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
stringWithFormat:
debugDescription
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
fallbackBagKeys
fallbackURLString
bagKey
httpBody
httpBodyType
httpMethod
queryItems
person
setPerson:
_person
dataWithJSONObject:options:error:
_coreView
_library
_filteringOptions
initWithLibrary:filteringOptions:
hasEntitiesForModelKind:
mlCoreView
performCoreQuery:withCompletion:
performCoreSearchQuery:withCompletion:
_performCoreQuery:error:
library
filteringOptions
.cxx_construct
stringWithUTF8String:
deviceSupportsASTC
initWithCGImage:
scale
CGImage
dataWithContentsOfFile:options:error:
CGColor
shadowOffset
shadowBlurRadius
shadowColor
clearColor
initWithContentsOfExactFilePath:
imageWithEtchedBorderOfColor:radius:
imageWithShadow:
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
mainScreen
imageWithCGImage:scale:orientation:
bytes
length
_label
_qualityOfService
_timeoutInterval
_calloutQueue
_cancelationError
_cleanupQueue
_queue
_middlewareClasses
_stateDumpObject
cancel
prepareForResponseWithCompletion:
performWithCompletion:
_performWithCompletion:
label
setLabel:
qualityOfService
setQualityOfService:
timeoutInterval
setTimeoutInterval:
calloutQueue
cancelationError
cleanupQueue
queue
middlewareClasses
setMiddlewareClasses:
cancelAllOperations
addOperations:waitUntilFinished:
timeoutDescription
error
invalidationHandler
setInvalidationHandler:
invalidationObservers
addDependency:
valueForKeyPath:
blockOperationWithBlock:
invalidate
initWithRequest:middleware:
responseClass
disarm
timeIntervalSinceNow
initWithDeallocHandler:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
operations
expectedMaximumResponseTimeInterval
UTF8String
instanceMethodForSelector:
_valid
_request
_middleware
_builder
chain
request
isValid
middleware
setMiddleware:
builder
numberWithBool:
builderProtocol
postNotificationName:object:
didChangeValueForKey:
willChangeValueForKey:
_currentState
_playbackMode
_player
initWithFrame:
dealloc
setPlayer:
_changeState
_fadeOut
animationDidStop:
_playbackStateDidChangeNotification:
player
unsignedIntegerValue
performSelector:withObject:afterDelay:
endAnimations
setAnimationDuration:
beginAnimations:
alpha
setAnimationDelegate:
addObserver:selector:name:object:
removeObserver:name:object:
addSubview:
imageNamed:inBundle:
setOpaque:
_deferredSectionProperties
_deferredItemProperties
_results
initWithRequest:
getChangeDetailsFromPreviousResponse:completion:
isEmpty
_invalidate
deferredSectionProperties
setDeferredSectionProperties:
deferredItemProperties
setDeferredItemProperties:
results
setResults:
isMainThread
appendFormat:
appendString:
initWithFormat:
__text_KEY
__TTML_KEY
__hasStoreLyrics_KEY
__hasTimeSyncedLyrics_KEY
identityKind
humanDescription
_proxyView
_backgroundView
_useApplicationAudioSession
_isFullscreen
_shouldAutoplay
_movieSourceType
_contentURL
_controlStyle
_repeatMode
_initialPlaybackTime
_endPlaybackTime
_playerViewController
prepareToPlay
play
pause
stop
beginSeekingForward
beginSeekingBackward
endSeeking
isPreparedToPlay
currentPlaybackTime
setCurrentPlaybackTime:
currentPlaybackRate
setCurrentPlaybackRate:
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
initWithContentURL:
setContentURL:
view
backgroundView
playbackState
loadState
setControlStyle:
setRepeatMode:
setShouldAutoplay:
isFullscreen
setFullscreen:
setFullscreen:animated:
scalingMode
setScalingMode:
readyForDisplay
movieMediaTypes
duration
playableDuration
naturalSize
setInitialPlaybackTime:
setEndPlaybackTime:
allowsAirPlay
setAllowsAirPlay:
isAirPlayVideoActive
thumbnailImageAtTime:timeOption:
requestThumbnailImagesAtTimes:timeOption:
cancelAllThumbnailImageRequests
timedMetadata
accessLog
errorLog
useApplicationAudioSession
setUseApplicationAudioSession:
_advertisementView
_videoViewController
_avPlayerItemDidPlayToEndNotification:
observeValueForKeyPath:ofObject:change:context:
movieSourceType
setMovieSourceType:
contentURL
controlStyle
repeatMode
shouldAutoplay
initialPlaybackTime
endPlaybackTime
playerViewController
postNotificationName:object:userInfo:
playerController
animateAlongsideTransition:completion:
isCancelled
setAudioSession:
auxiliarySession
_initWithAVItemErrorLog:
_errorLog
extendedLogData
extendedLogDataStringEncoding
events
_event
_initWithAVItemErrorLogEvent:
date
serverAddress
playbackSessionID
errorStatusCode
errorDomain
errorComment
initWithCapacity:
_initWithAVItemAccessLog:
_accessLog
_initWithAVItemAccessLogEvent:
numberOfSegmentsDownloaded
playbackStartDate
numberOfServerAddressChanges
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfStalls
numberOfBytesTransferred
observedBitrate
indicatedBitrate
numberOfDroppedVideoFrames
numberOfMediaRequests
_metadataItem
_initWithMetadataItem:
keyspace
value
timestamp
allMetadata
numberWithDouble:
setObject:forKey:
mutableCopy
extraAttributes
keySpace
endScanningForward:
endScanningBackward:
beginScanningBackward:
beginScanningForward:
pause:
play:
setAutomaticallyWaitsToMinimizeStalling:
playerWithURL:
setAllowsExternalPlayback:
setMaxTime:
setMinTime:
contentDimensions
contentDurationWithinEndTimes
contentDuration
isReadyForDisplay
exitFullScreenWithCompletion:
enterFullScreenWithCompletion:
setLooping:
setAllowsEnteringFullScreen:
setShowsPlaybackControls:
initWithMoviePlayerController:
_controller
willMoveToWindow:
willMoveToSuperview:
setFrame:
_updateContainmentInWindow:superview:
controller
didMoveToParentViewController:
parentViewController
viewControllerForView:
removeFromParentViewController
window
superview
removeObserver:forKeyPath:context:
addObserver:forKeyPath:options:context:
setUpdatesNowPlayingInfoCenter:
setAllowsPictureInPicturePlayback:
_eventQueue
_lastSiriReferenceIdentifierForPlaybackStart
_lastSiriReferenceIdentifierForWillReload
_lastSiriReferenceIdentifierWithLikelyToKeepUp
_players
_playerToObservedTimebase
registerPlayer:
unregisterPlayer:
logAssistantEvent:withTimestamp:
_bufferingStateDidChangeNotification:
_itemDidChangeNotification:
_itemTimebaseDidChangeNotification:
_willReloadWithPlaybackContextNotification:
_attemptLikelyToKeepUpReportingEventWithPlayer:
_attemptPlaybackStartReportingEventWithPlayer:
_createContextDictionaryWithSiriReferenceIdentifier:siriWHAMetricsInfo:
_timebaseEffectiveRateChangedNotification
timeIntervalSinceReferenceDate
logEventWithType:machAbsoluteTime:context:
sharedAnalytics
doubleValue
allObjects
removeObject:
initWithOptions:capacity:
sharedController
_displayName
_canonicalLanguageIdentifier
_option
_isMainProgram
_isDVS
initWithOption:
compare:
_setDisplayNameFromOption:
displayName
setDisplayName:
canonicalLanguageIdentifier
option
isMainProgram
isDVS
localizedCaseInsensitiveCompare:
displayNameForKey:value:
canonicalLanguageIdentifierFromString:
localeIdentifier
currentLocale
hasMediaCharacteristic:
threeCharCodesForEncodedISO639_2_T:
shortValue
_mpUTITypeFromMRUTIType:
mpUniversalTrackIDType
mpUniversalTrackIDBaseID
_accessQueue
_additionalUserInfo
_clientName
_clientType
_clientVersion
_hasCompleteSessionSetup
_hasInitializedSession
_hierarchyToken
_internalSession
_operationQueue
_pendingReportingEvents
_serviceIdentifier
_sessionID
_sessionUserInfo
hasCompleteSessionSetup
hasInitializedSession
additionalUserInfo
clientName
clientType
clientVersion
hierarchyToken
serviceIdentifier
sessionID
setAdditionalUserInfo:
setClientName:
setClientType:
setClientVersion:
setHierarchyToken:
setServiceIdentifier:
setSessionID:
initializeSession
completeSessionSetup
finalizeSession
recordEvent:
addOperationWithBlock:
_recordEvent:withInternalSession:
_isRTCReportingSupported
fetchReportingStatesWithUserInfo:fetchComplete:
addEntriesFromDictionary:
setMaxConcurrentOperationCount:
newHierarchyTokenFromParentToken:
sendMessageWithDictionary:error:
outputSequenceWasFlushed:
legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:
subtitleLanguages
_item
_alternateTracks
_trackChangeDictionary
_disableAlternateTextTrackRendering
_legibleOutput
_currentTextTrack
_outOfBandTextTracks
initWithItem:
beginTrackChanges
commitTrackChanges
currentTrackForType:
indexOfCurrentTrackForType:
isLoaded
setDisableAlternateTextTrackRendering:
selectedAlternateTextTrack
setSelectedAlternateTextTrack:
setOutOfBandTextTracks:
setTrack:forType:
tracksForType:
hasTracksForTypes:
trackCountForTypes:
reloadData
reloadDataWithChangedCaptionDisplayType:
enableLegibleOutputIfNecessary
_keyForTrackType:
_currentTextTrackAccordingToAVF
_suppressAVFSubtitleRendering
outOfBandTextTracks
disableAlternateTextTrackRendering
addOutput:
setSuppressesPlayerRendering:
removeOutput:
selectedMediaOptionInMediaSelectionGroup:
mediaSelectionGroupForMediaCharacteristic:
numberWithUnsignedInteger:
setAdvanceIntervalForDelegateInvocation:
setTextStylingResolution:
setDelegate:queue:
insertObject:atIndex:
selectMediaOptionAutomaticallyInMediaSelectionGroup:
playableMediaSelectionOptionsFromArray:
sortUsingSelector:
associatedMediaSelectionOptionInMediaSelectionGroup:
statusOfValueForKey:error:
dictionaryWithCapacity:
selectMediaOption:inMediaSelectionGroup:
indexOfObject:
trackID
tokenResult
defaultIdentityStore
DSID
setWithObject:
sharedProvider
allValues
firstObject
timeToLiveMillis
getTokenStatusForDSIDs:forcingRefresh:completion:
getPropertiesForUserIdentity:completionHandler:
lastError
activeAccount
_cacheLock
_artworkCatalogsCache
_artworkCatalogsCacheCount
_allowsSynchronousArtworkCatalogsBlockExecution
_artworkCatalogsBlock
_numberOfColumns
_numberOfRows
_tileSpacing
_entityIdentifier
_namespaceIdentifier
_revisionIdentifier
artworkCatalogsWithCount:
existingArtworkCatalogsWithCount:
hasExistingArtworkCatalogsWithCount:
artworkCatalogsBlock
setArtworkCatalogsBlock:
allowsSynchronousArtworkCatalogsBlockExecution
setAllowsSynchronousArtworkCatalogsBlockExecution:
numberOfColumns
setNumberOfColumns:
numberOfRows
setNumberOfRows:
tileSpacing
setTileSpacing:
entityIdentifier
setEntityIdentifier:
namespaceIdentifier
setNamespaceIdentifier:
revisionIdentifier
setRevisionIdentifier:
subarrayWithRange:
_rtcReportingCategory
_rtcReportingType
_networkInterfaceType
newRTCReportingMessageDictionary
newRTCReportingPayloadDictionary
networkInterfaceType
setNetworkInterfaceType:
rtcReportingCategory
rtcReportingType
numberWithInteger:
numberWithUnsignedShort:
code
_responseHandler
execute
_handlePersistentID:modelClass:mediaLibrary:
_deleteItems:withLibrary:
_isCloudLibraryEnabled
setRequest:
responseHandler
setResponseHandler:
unsignedLongLongValue
isSubclassOfClass:
currentThread
_asset
_assetQueue
_avPlayerItem
_isAssetLoaded
_feeder
_soundCheckVolumeNormalization
_chapterTimeMarkers
_artworkTimeMarkers
_urlTimeMarkers
_closedCaptionTimeMarkers
_cachedDuration
_cachedPlayableDuration
_cachedSeekableTimeRanges
_seekableTimeRangesCacheTime
_type
_contentItem
_defaultPlaybackRate
_advancedDuringPlayback
_handledFinishTime
_hasPlayedThisSession
_wasCountedAsSkipped
_isStreamable
_watchingAttributes
_userChangedItemsDuringPlayback
_lyricsAvailable
_timeMarkersNeedLoading
_rtcReportingParentHierarchyToken
_hasLoadedHasProtectedContent
_hasLoadedPlaybackMode
_hasPostedNaturalSizeChange
_hasRegisteredForCaptionsAppearanceChanged
_hasValidPlayerItemDuration
_lastLoggedTotalDuration
_likedState
_playerItemDuration
_exportableArtworkRevision
_meetsPlaybackHistoryThreshold
_assetLoaded
_didAttemptToLoadAsset
_canReusePlayerItem
_likedStateEnabled
_supportsLikedState
_prefersSeekOverSkip
_hasProtectedContent
_tailPlaceholder
_startItem
_shouldPreventPlayback
_allowsAirPlayFromCloud
_allowsExternalPlayback
_requiresLoadedAssetForAirPlayProperties
_hasFinishedDownloading
_hasPerformedErrorResolution
_activeItem
_externalDisplay
_didReachEnd
_currentPlaybackRate
_loudnessInfoVolumeNormalization
_observer
_itemError
_queueIdentifier
_albumStoreID
_buyOffers
_copyrightText
_externalContentIdentifier
_storeItemInt64ID
_storeSubscriptionAdamID
_mediaItem
_explicitBadge
_repeatIndex
_lastChangeDirection
_modelGenericObject
_initialPlaybackStartTimeOverride
_aggregateDictionaryItemIdentifier
_storeFrontIdentifier
_storeAccountID
_useListeningHistory
_leasePlaybackPreventionState
_leaseStatus
_contentItemID
_previousContentItemID
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
isPlaceholder
isSupportedDefaultPlaybackSpeed:
initWithURL:
initWithURL:options:
initWithAsset:
initWithPlayerItem:
_releaseAllTimeMarkers
flushNowPlayingCaches
canUseLoadedAsset
disableItemReuse
loadAssetAndPlayerItem
_loadAssetAndPlayerItem
asset
playerItem
setPlayerItem:
status
playbackError
bookmarkTime
initialPlaybackStartTime
resetBookkeeping
setAlternateAudioTrackID:
setAlternateAudioTrackLocale:
setPlaybackStoppedTime:
notePlaybackFinishedByHittingEnd
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
setRating:
subtitleTrackID
setSubtitleTrackID:
setUserAdvancedDuringPlayback:
setUserChangedItemsDuringPlayback:
setUserSkippedPlayback:
userAdvancedDuringPlayback
userSkippedPlayback
userChangedItemsDuringPlayback
durationInSeconds
path
album
albumYear
artist
albumArtist
artistStoreID
albumTrackNumber
albumTrackCount
applyVolumeNormalizationWithSoundCheckEnabled:
canSeedGenius
composer
discNumber
discCount
isValidPlayerSubstituteForItem:
isAssetURLValid
isExplicitTrack
setExplicitBadge:
setLastChangeDirection:
genre
currentTimeDisplayOverride
usesSubscriptionLease
displayableTextLoaded
displayableText
feeder
likedState
lyrics
libraryLyrics
hasStoreLyrics
hasTimeSyncedLyrics
containerUniqueID
hasAlternatesForTypes:
alternatesCountForTypes:
hasDataForItemArtwork
hasDisplayableText
hasPlayedThisSession
isAd
isAlwaysLive
isStreamable
customAVEQPreset
allowsEQ
mainTitle
podcastURL
playbackRateForLevel:direction:paused:
prepareForRate:completionHandler:
presentationSize
forwardPlaybackEndTime
setFeeder:
setForwardPlaybackEndTime:
scanIntervalForLevel:paused:
setHasPlayedThisSession:
setOverrideDuration:
setLikedState:
setLikedState:forUserIdentity:
setSoundCheckVolumeNormalization:
storeItemID
supportsRewindAndFastForward15Seconds
supportsRating
_realoadEmbeddedTimeMarkers
timedMetadataIfAvailable
setContentItemID:
contentItem
isInWishList
isRadioItem
setInWishList:
stationAllowsItemLiking
stationID
stationHash
stationName
stationStringID
stationProviderID
supportsRadioTrackActions
useEmbeddedChapterData
_loadTimeMarkersBlocking
_loadTimeMarkersAsync
chapterTimeMarkers
artworkTimeMarkers
urlTimeMarkers
setClosedCaptionTimeMarkers:
closedCaptionTimeMarkers
_timeMarkerFromMarkers:forTime:
chapterTimeMarkerForTime:
artworkTimeMarkerForTime:
urlTimeMarkerForTime:
closedCaptionTimeMarkerForTime:
_imageChapterTrackIDsForAsset:
type
userRating
mediaType
persistentID
databaseID
cloudID
personID
cloudUniversalLibraryID
cloudAlbumID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
shouldShowComposer
durationFromExternalMetadata
durationIsValid
_durationFromExternalMetadataIfAvailable
durationIfAvailable
playableDurationIfAvailable
_playerItemDurationIfAvailable
timebase
timeOfSeekableStart
timeOfSeekableEnd
_internalLikedStateDidChangeNotification:
_itemAttributeAvailableKey:
_captionAppearanceSettingsChanged
_applicationDidBecomeActive:
_addObservationsForAVPlayerItem:
_removeObservationsForAVPlayerItem:
_currentContentItemDeviceSpecificUserInfo
_likedStateDidChange
_initialPlaybackStartTimeForPlaybackInfo:
_loadAvailableMediaCharacteristicsIfNeeded
_seekableTimeRanges
_playableDurationForLoadedTimeRanges:
_loadAssetProperties
_updateSoundCheckVolumeNormalizationForPlayerItem
_shouldPublishArtworkURL
_performContentItemUpdate:
blockForDirectAVControllerNotificationReferencingItem:
_clearAsset
playbackInfo
setupEQPresetWithDefaultPreset:
setupPlaybackInfo
_isBackgroundPlaybackRestricted
_updateDurationSnapshotWithElapsedTime:playbackRate:
_currentPlaybackRateDidChange:
_applyLoudnessInfo
_expectedStartTimeWithPlaybackInfo:
_expectedStopTimeWithPlaybackInfo:
_handleUpdatedLikedState:forUserIdentity:completion:
_persistedLikedState
_setCurrentPlaybackRate:
_setNeedsPersistedLikedStateUpdate
_setListeningForCaptionsAppearanceSettingsChanged:
invalidateContentItemDeviceSpecificUserInfo
modelPlayEvent
reevaluateHasProtectedContent
reevaluateType
replacePlayerItemWithPlayerItem:
resolvePlaybackError:withCompletion:
_updateHasFinishedDownloading
_willBecomeActivePlayerItem
_willResignActivePlayerItem
alternateTracks
setArtworkTimeMarkers:
setChapterTimeMarkers:
defaultPlaybackRate
setDefaultPlaybackRate:
isAssetLoaded
setIsAssetLoaded:
soundCheckVolumeNormalization
setUrlTimeMarkers:
rtcReportingParentHierarchyToken
observer
setObserver:
meetsPlaybackHistoryThreshold
didAttemptToLoadAsset
canReusePlayerItem
itemError
setItemError:
queueIdentifier
setQueueIdentifier:
playbackMode
albumStoreID
buyOffers
copyrightText
externalContentIdentifier
isLikedStateEnabled
supportsLikedState
storeItemInt64ID
storeSubscriptionAdamID
mediaItem
loudnessInfoVolumeNormalization
setLoudnessInfoVolumeNormalization:
prefersSeekOverSkip
hasProtectedContent
explicitBadge
isTailPlaceholder
isStartItem
setStartItem:
repeatIndex
setRepeatIndex:
lastChangeDirection
shouldPreventPlayback
modelGenericObject
initialPlaybackStartTimeOverride
setInitialPlaybackStartTimeOverride:
allowsAirPlayFromCloud
allowsExternalPlayback
requiresLoadedAssetForAirPlayProperties
aggregateDictionaryItemIdentifier
hasFinishedDownloading
hasPerformedErrorResolution
setHasPerformedErrorResolution:
isActiveItem
setActiveItem:
storeFrontIdentifier
hasExternalDisplay
setExternalDisplay:
storeAccountID
useListeningHistory
leasePlaybackPreventionState
leaseStatus
didReachEnd
contentItemID
previousContentItemID
setPreviousContentItemID:
CMTimeRangeValue
loadedTimeRanges
isFileURL
assetTrack
tracks
isPlaybackLikelyToKeepUp
isPlaybackBufferFull
boolValue
_setRampInOutInfo:
_setAudibleDRMInfo:
dictionaryWithObject:forKey:
seekToTime:completionHandler:
loadValuesAsynchronouslyForKeys:completionHandler:
seekableTimeRanges
numberWithFloat:
isNonPurgeable
keepLocalManagedStatus
keepLocalEnableState
isLibraryAdded
dataUsingEncoding:
numberWithLongLong:
setObject:forKeyedSubscript:
numberWithUnsignedLongLong:
CMTimeValue
trackWithTrackID:
intValue
trackReferences
stringValue
URLWithString:
commonKey
chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:
arrayWithObjects:
enumerateObjectsUsingBlock:
initWithLocaleIdentifier:
availableChapterLocales
isLibraryAddEligible
isRedownloadable
providerBundleIdentifier
absoluteString
providerUniversalLink
subtype
attributionLabel
longLongValue
loggingIdentifier
cancelPreviousPerformRequestsWithTarget:
UUIDString
playerItemWithAsset:
URLAssetWithURL:options:
defaultScaleMode
setDefaultScaleMode:
URLFromPath:
fileURLWithPath:isDirectory:
stringByAddingPercentEncodingWithAllowedCharacters:
URLPathAllowedCharacterSet
stringByRemovingPercentEncoding
scheme
URLWithString:relativeToURL:
MPAVItem
setMPAVItem:
_allowLocalEquivalencies
_shouldIgnoreCache
_shouldIgnoreExpiration
_shouldRequireCachedResults
_reason
_itemIdentifiers
_platform
_retryDelay
_clientIdentifier
_personalizationStyle
_clientInfo
_delegatedUserIdentity
_userIdentity
_userIdentityStore
clientIdentifier
clientInfo
isPersonalized
itemIdentifiers
requestingBundleIdentifier
requestingBundleVersion
setRequestingBundleIdentifier:
setRequestingBundleVersion:
userIdentity
userIdentityStore
storePlatformRequest
allowLocalEquivalencies
setAllowLocalEquivalencies:
reason
setReason:
setItemIdentifiers:
platform
setPlatform:
retryDelay
setRetryDelay:
shouldIgnoreCache
setShouldIgnoreCache:
shouldIgnoreExpiration
setShouldIgnoreExpiration:
shouldRequireCachedResults
setShouldRequireCachedResults:
setClientIdentifier:
personalizationStyle
setPersonalizationStyle:
setClientInfo:
delegatedUserIdentity
setDelegatedUserIdentity:
setUserIdentity:
setUserIdentityStore:
setPlatformIdentifier:
setRequestContext:
setIdentityStore:
setIdentity:
setDelegatedIdentity:
setReturnsLocalEquivalencies:
setKeyProfile:
defaultInfo
_identifierRegistry
_identifierRegistryLock
_uniqueIdentifier
_playActivityFeatureName
_playActivityRecommendationData
_siriReferenceIdentifier
_siriWHAMetricsInfo
_modelPlayEvent
replaceIdentifierRegistry:
identifierRegistryWithExclusiveAccess:
identifierRegistryWithExclusiveAccessReturningObject:
identifierRegistryWithExclusiveAccessReturningBOOL:
identifierRegistryWithExclusiveAccessReturningInteger:
supplementalPlaybackContextBehavior
supplementalPlaybackContextWithReason:
getRepresentativeMetadataForPlaybackContext:completion:
errorResolverForItem:
applyVolumeNormalizationForItem:
playbackInfoForItem:
uniqueIdentifier
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
siriReferenceIdentifier
setSiriReferenceIdentifier:
siriWHAMetricsInfo
setSiriWHAMetricsInfo:
_modelObject
newOperationWithResponseHandler:
performWithResponseHandler:
modelObject
setModelObject:
_downloadAssetDictionary
_downloadMetadataDictionary
_storeMusicAPIDictionary
_expirationDate
_hasOverrideChildStorePlatformDictionaries
_hasSubscriptionOffer
_overrideChildStorePlatformDictionaries
_storePlatformDictionary
_parentStoreItemMetadata
initWithDownloadAssetDictionary:
initWithStoreMusicAPIDictionary:
initWithStorePlatformDictionary:
initWithStorePlatformDictionary:expirationDate:
initWithStorePlatformDictionary:parentStoreItemMetadata:
initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:
artistName
artistUploadedContentType
artworkRequestToken
stationGlyphRequestToken
artworkTrackIDs
isBeats1
childrenStoreIDs
childStoreItemMetadatas
collectionName
collectionStoreID
composerName
curatorName
curatorHandle
curatorID
descriptionText
editorNotes
expirationDate
isExpired
shortEditorNotes
effectiveStorePlatformDictionary
importableStorePlatformDictionary
hasArtistBiography
hasLyrics
hasSocialPosts
hasSubscriptionOffer
genreNames
isExplicitContent
explicitRating
isCompilation
isMasteredForITunes
isPreorder
isStoreRedownloadable
itemKind
playlistType
iTunesBrandType
latestAlbumArtworkRequestToken
movementCount
movementName
movementNumber
movieClipsCount
movieClips
name
offers
playlistIdentifiers
popularity
releaseDate
lastModifiedDate
shortName
shouldBookmarkPlayPosition
shouldReportPlayEvents
showComposer
storeID
formerStoreAdamIDs
socialProfileID
purchasedAdamID
subscriptionAdamID
trackCount
trackNumber
episodeCount
seasonNumber
shortURL
versionHash
videoSubtype
workName
handle
nameRaw
isPrivatePerson
isVerifiedPerson
radioStationTypeID
isChart
radioStationProviderName
isLive
radioStationEvents
artworkRequestTokenForEditorialArtworkKind:
artworkRequestTokenForScreenshotArtwork
artworkRequestTokenForUberArtworkKind:
avatarArtworkRequestToken
artworkRequestTokenForStorePlatformDictionary:
stationGlyphRequestTokenForStorePlatformDictionary:
childStorePlatformDictionaryForArtworkTrackID:
childStorePlatformDictionaryForStoreID:
descriptionTextWithStyle:
editorNotesWithStyle:
tvEpisodeArtworkRequestToken
tvShowArtworkRequestToken
movieArtworkRequestToken
flowcaseEditorialArtworkRequestToken
brickEditorialArtworkRequestToken
metadataByAppendingMetadata:
metadataWithChildStorePlatformDictionaries:
metadataWithParentMetadata:
_storePlatformReleaseDateFormatter
_musicAPIDateFormatter
_storePlatformLastModifiedDateFormatter
parentStoreItemMetadata
setCalendar:
storeServerCalendar
setLenient:
setTimeZone:
timeZoneForSecondsFromGMT:
setLocale:
localeWithLocaleIdentifier:
setDateFormat:
earlierDate:
artworkRequestTokenForStorePlatformArtworkValue:
initWithArtworkResponseDictionary:
dateFromString:
numberWithInt:
stringFromDate:
allocWithZone:
decodeObjectOfClasses:forKey:
setWithObjects:
calendarWithIdentifier:
initWithArtworkResponseArray:
currentCalendar
component:fromDate:
_duration
_index
_time
_title
_url
_markerType
_metadata
initWithMarkerType:
comparableTime
maxTime
hasArtworkAtPlaybackTime
urlTitleTrimmingCharacterSet
setTitle:
setDuration:
index
setIndex:
time
setTime:
title
setUrl:
markerType
metadata
setMetadata:
stringByTrimmingCharactersInSet:
whitespaceAndNewlineCharacterSet
_iconImageView
_routeNameLabel
_subtitleTextLabel
_subtitleTextUpdateTimer
_spinnerView
_smartAudioImageView
_checkmarkImageView
_chevronImageView
_expandTargetView
_mirroringSwitchVisible
_pendingSelection
_isDisplayedAsPicked
_useSmartAudioCheckmarkStyle
_provideOwnSeparator
_showingVolumeSlider
_delegate
_mirroringStyle
_iconStyle
_subtitleViewAlpha
_volumeSlider
_subtitleTextState
titleView
subtitleView
iconView
separatorView
volumeSlider
setSubtitleViewAlpha:
initWithStyle:reuseIdentifier:
prepareForReuse
updateForEndpoint:routeItem:inferLocalizedModelName:
volumeView
setMirroringStyle:
setPendingSelection:
setUseSmartAudioCheckmarkStyle:
setVolumeSlider:
setShowingVolumeSlider:
layoutSubviews
setTintColor:
setIconStyle:
setAccessoryType:
_handleContentSizeCategoryDidChangeNotification:
_configureLabel:
_configureDetailLabel:
_shouldShowSeparateBatteryPercentagesForBatteryLevel:
_batteryTextForRoute:
_pairedDeviceTextForRoute:
_iconImageForRoutes:
_iconImageForRoute:
_checkmarkImageNameForSmartAudio
_checkmarkAccessibilityLabelForSmartAudio
_checkmarkImageForSmartAudio
_updateAccessory
_updateSubtitleTextLabelForRouteItem:
_updateSpinnerColor
_animateSubtitleLabelToNextAvailableText
didTapToExpand
delegate
setDelegate:
mirroringSwitchVisible
setMirroringSwitchVisible:
mirroringStyle
iconStyle
isPendingSelection
isDisplayedAsPicked
setIsDisplayedAsPicked:
useSmartAudioCheckmarkStyle
provideOwnSeparator
setProvideOwnSeparator:
subtitleViewAlpha
isShowingVolumeSlider
subtitleTextState
setSubtitleTextState:
animateWithDuration:animations:completion:
setText:
setColor:
whiteColor
scheduledTimerWithTimeInterval:repeats:block:
removeAllAnimations
layer
systemImageNamed:
accessoryType
sizeToFit
setAccessibilityLabel:
startAnimating
localizedStringForKey:value:table:
bundleWithIdentifier:
floatValue
stringFromNumber:
setUsesGroupingSeparator:
setUsesSignificantDigits:
setNumberStyle:
lightGrayColor
setHighlightedTextColor:
_setWantsUnderlineForAccessibilityButtonShapesEnabled:
blackColor
setNeedsLayout
setCenter:
maskView
center
isHidden
preferredFontForTextStyle:compatibleWithTraitCollection:
frame
displayScale
traitCollection
_defaultAccessoryView
accessoryView
setPreferredSymbolConfiguration:
configurationWithTextStyle:scale:
stopAnimating
initWithActivityIndicatorStyle:
setContentMode:
isSymbolImage
configurationWithFont:scale:
fontWithDescriptor:size:
fontDescriptorWithSymbolicTraits:
defaultFontDescriptorWithTextStyle:
darkGrayColor
configurationWithPointSize:weight:scale:
setSelectedBackgroundView:
colorWithWhite:alpha:
_configuration
_didDismissHandler
_mediaControls
interruptibleAnimatorForTransition:
animationEnded:
transitionDuration:
animateTransition:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
initWithConfiguration:
viewDidLoad
viewWillAppear:
prefersStatusBarHidden
configuration
setMediaControls:
_createMediaControlsIfNeeded
_present
prepareRemoteViewController
startPrewarming
stopPrewarming
dismiss
setOverrideRouteSharingPolicy:routingContextUID:
didDismissHandler
setDidDismissHandler:
mediaControls
completeTransition:
initWithPresentedViewController:presentingViewController:
shouldRemovePresentersView
dismissViewControllerAnimated:completion:
setModalPresentationStyle:
setTransitioningDelegate:
presentAnimated:completion:
dismissAfter:
_loadingTiledArtworkRequests
_loadingTiledArtworkRequestsAccessQueue
_renderingTiledArtworkRequestsQueue
_tiledArtworkRepresentationFallbackCache
_tilingArtworkCatalogOperationQueue
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
getExportableArtworkPropertiesForCatalog:completionHandler:
areRepresentationsOfKind:availableForCatalog:
existingRepresentationOfKind:forArtworkCatalog:
loadRepresentationOfKind:forArtworkCatalog:completionHandler:
areRepresentationsAvailableForCatalog:
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_addLoadingRequestForArtworkCatalog:
_hasLoadingRequestForArtworkCatalog:
_performAsyncBlock:
_performSyncBlock:
_removeLoadingRequestForArtworkCatalog:
_loadingRequestForArtworkCatalog:
replaceObjectAtIndex:withObject:
drawInRect:
null
_tileSizeForFittingSize:rows:columns:spacing:
isEqualToArray:
_representationCacheKeyForArtworkCatalog:forAnyRevision:
_errorWithDescription:
setCountLimit:
sharedDataSource
_libraryView
_resultHandler
_query
libraryView
setLibraryView:
query
setQuery:
resultHandler
setResultHandler:
_serialAccessQueue
_executeLegacyRequest
_executeRequest
_itemProperties
_sanityCheckRequest
_sectionProperties
operationQueue
setOperationQueue:
serialAccessQueue
setSerialAccessQueue:
arrayByAddingObject:
handleFailureInFunction:file:lineNumber:description:
currentRevision
currentContentRevision
filtersOnDynamicProperties
enumeratePersistentIDsAndProperties:usingBlock:
_episode
albumArtistName
albumStoreAdamID
albumTitle
allowsInitiatingPlayWhileDownload
artistStoreAdamID
artworkCatalogForPlaybackTime:
contentTitle
contentType
expectedDuration
storeAdamID
storeSagaID
localFileAsset
playbackPosition
storeAsset
_invalidateModelObjectPlaybackItemMetadata
setEpisode:
episode
setTvEpisode:
requiredProperties
_currentItemHasFinishedDownloading
_didResolveError
_disableAirPlayMirroringDuringPlayback
_shouldPreventStateChangesForRateChange
_stallBackgroundTaskIdentifier
_usesAudioOnlyModeForExternalPlayback
_allowsItemErrorResolution
_routingController
_pickedRoute
_videoLayer
_videoLayerUsageCount
_videoView
_periodicTimeObserverToken
_tickTimerEnabled
_tickTimer
_tickInterval
_currentItemBookkeepingTimer
_indexChangeDirection
_contentItemIDAtDeath
_lastDisconnectReason
_lastKnownTimeBeforeDeath
_lastPlaybackIndexChangeTime
_lastSetTime
_lastSetTimeChangeTime
_hasDelayedCurrentTimeToSet
_forceDelayedCurrentTimeToSet
_delayedCurrentTimeToSet
_pendingCurrentTime
_delayedCurrentTimeOptions
_lastSetTimeMarker
_temporaryChapterTime
_autoPlayWhenLikelyToKeepUp
_autoplayDisabledForCurrentItem
_autoPlayBackgroundTaskAssertionEnabled
_autoPlayBackgroundTaskCount
_appHasBeenSuspended
_deactivationReasons
_autoPlayBackgroundTaskIdentifier
_autoPlayTimeoutSource
_nextFadeOutDuration
_hasPendingRate
_hasSentTracePlaybackStartDidFinish
_pendingRateItem
_pendingRate
_pendingChangeForScanning
_boundaryTimeObserver
_boundaryTimes
_boundaryTimeIndexLastPosted
_observerInfos
_observerInfoToCoreMediaObserver
_rateBeforeSeek
_inflightSeekRate
_scanLevel
_scanDirection
_resetRateAfterSeekingUpdateDisabled
_seeklessState
_isSeekingOrScrubbing
_resetRateAfterSeeking
_activeRewindHoldingAtStart
_lastSeekableEnd
_whenSawSeekableEnd
_maxSeekableFwd
_seekFwdSlop
_lastSeekableStart
_whenSawSeekableStart
_maxSeekableRev
_seekRevSlop
_canSeekRev
_canSeekFwd
_alwaysPlayWheneverPossible
_stopAtEnd
_pausedDuringInterruption
_resumePlaybackWhenActive
_playInBackgroundUserDefaultEnabled
_canPlayFastForward
_canPlayFastReverse
_shouldAutoclearDisplayOverride
_state
_displayOverridePlaybackState
_bufferingState
_delayedPlaybackStateNotification
_stallTimerSource
_hasProvidedAudibleLikelyToKeepUp
_hasProvidedAudiblePlay
_itemInitialBookmarkTime
_rateBeforeResignActive
_ubiquitousBookkeepingDisabledCount
_secondsSinceUbiquitousCheckpoint
_videoViewClass
_lastInterruptionEnd
_shouldEnforceHDCP
_clientsWantingExternalPlayback
_currentItemRevisionID
_muted
_shouldPostCompatibilityNotifications
_isReloadingForPlaybackContextChange
_canAttemptErrorResolution
_useAirPlayMusicMode
_managesAirPlayBehaviors
_automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds
_wantsPictureInPicture
_lastDirection
_policyEnforcer
_actionAfterQueueLoadOverride
_queuePlayer
_queueCoordinator
_queueController
_identifier
_stateBeforeInterruption
_pictureInPictureController
beginInterruptionFromInterruptor:
endInterruptionFromInterruptor:category:flags:
beginInterruption
endInterruptionWithFlags:
endInterruption
inputIsAvailableChanged:
queueControllerDidChangeContents:
queueController:failedToLoadItem:
queueController:didChangeContentsWithReplacementPlaybackContext:
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
queueController:didChangeActionAtQueueEnd:
queueController:didIncrementVersionForSegment:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
beginSeek:
_clearLastSetTimeIfPlayerTimeIsValid
_hasValidPlayerTime
_updateLastSetTimeForCurrentItemIfNeeded
changePlaybackIndexBy:deltaType:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:error:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error:
endSeek
isSeekingOrScrubbing
currentTimeForBookmarking
currentTime
endPlayback
pauseWithFadeout:
_pauseWithFadeout:forScanning:
playWithOptions:
_playWithOptions:allowsEnablingAutoPlay:
setAutoPlayWhenLikelyToKeepUp:
setCurrentTime:
togglePlayback
togglePlaybackWithOptions:
forceRestartPlaybackIfNecessary
beginTickTimerWithInterval:
endTickTimer
isTickTimerEnabled
setClient:wantsToAllowExternalPlayback:
setClient:wantsToAllowExternalPlayback:shouldIgnorePlaybackQueueTransactions:
autoPlayWhenLikelyToKeepUp
currentItem
_showsPlayingWhenInState:
_seeklessStateForState:
isExternalPlaybackActive
isPlaying
shouldDisplayAsPlaying
alwaysPlayWheneverPossible
setAlwaysPlayWheneverPossible:
rate
disableAirPlayMirroringDuringPlayback
_sendTracePlaybackStartDidFinishIfNeededForItem:
setDisableAirPlayMirroringDuringPlayback:
setDisableAirPlayMirroringDuringPlayback:shouldIgnorePlaybackQueueTransactions:
setNextFadeOutDuration:
setRate:
setRate:completion:
_setRate:forScanning:withItem:completion:
hasVolumeControl
volume
setVolume:
stopAtEnd
setStopAtEnd:
routingController
setUseAirPlayMusicMode:
setWantsPictureInPicture:
setManagesAirPlayBehaviors:
isCurrentItemReady
disableAutoplayForCurrentItem
enableAutoplayForCurrentItem
avPlayer
beginUsingVideoLayer
endUsingVideoLayer
_expectedAssetTypesForPlaybackMode:
externalPlaybackType
externalPlaybackVideoGravity
preferredLanguages
_playerAVAudioSession
setActive:
becomeActiveWithError:
setExternalPlaybackVideoGravity:
setCurrentTime:options:
setCurrentTime:options:completion:
setUsesAudioOnlyModeForExternalPlayback:
setUsesAudioOnlyModeForExternalPlayback:shouldIgnorePlaybackQueueTransactions:
_setLastSetTime:
destinationIsTVOut
setDestinationIsTVOut:
videoLayer
videoView
reloadWithPlaybackContext:
reloadWithPlaybackContext:completionHandler:
loadSessionWithQueueController:completionHandler:
updateBookkeepingNow
finalizeBookkeepingNow
setState:
shouldHaveNoActionAtEndForState:
showPlaybackStateOverlaysOnTVOut
durationOfCurrentItemIfAvailable
playableDurationOfCurrentItemIfAvailable
timeOfPlayableStart
timeOfPlayableEnd
isLiveStreaming
canSeekBackwards
canSeekForwards
canPlayFastReverse
canSkipToSeekableEnd
skipToSeekableStart
skipToSeekableEnd
_postMPAVControllerSizeDidChangeNotificationWithItem:
_postMPAVControllerItemReadyToPlayNotificationWithItem:
_firstVideoFrameDisplayed:
_isExternalPlaybackActiveDidChange:
_itemAssetIsLoadedNotification:
_itemBookmarkTimeDidChangeNotification:
_itemHasFinishedDownloadingDidChangeNotification:
_updateStateForPlaybackPrevention
_itemTimeMarkersAvailableNotification:
_itemMediaSelectionCriteriaDidLoadNotification:
_itemTypeAvailableNotification:
_itemDidChange:
_playerFailedToQueueNotification:
_itemFailedToPlayToEndNotification:
_itemFailedToPlayToEnd:
_itemPlaybackDidEndNotification:
_itemReadyToPlay:
_itemWillChange:
setUbiquitousBookkeepingEnabled:
ubiquitousBookkeepingEnabled
_updateCurrentItemBookkeepingMarkedAsCheckpoint:
_updateCurrentItemBookkeepingForTimerCallback
_rateDidChange:
_configureAudioSession
_connectAVPlayer
_connectAVPlayerDeferringItemLoading:
_disconnectAVPlayerWithReason:
_serverConnectionDidDie:
_sizeDidChange:
_streamBufferFull:
_streamLikelyToKeepUp:
_streamRanDry:
_streamUnlikelyToKeepUp:
_timeHasJumpedNotification:
_volumeDidChangeNotification:
airPlayVideoEnded
airPlayFailedRentalDownloadRequired
_airPlayFailedUnsupportedVideoFormatForDeviceWithError:
_contentsChanged
_canPlayFastForwardDidChange:
_canPlayFastReverseDidChange:
_timedMetadataDidChange:
_tracksDidChange:
_durationDidChange:
_readyForDisplayDidChange:
_shouldPausePlaybackForDeactivationReasons:
_applicationWillAddDeactivationReason:
_applicationDidRemoveDeactivationReason:
_applicationDidEnterBackgroundNotification:
_applicationWillEnterForegroundNotification:
_audioSessionMediaServicesWereResetNotification:
_itemPlayerItemWillChangeNotification:
_itemPlayerItemDidChangeNotification:
_delayedPlaybackIndexChange
_delayedUpdateScanningRate
_delayedUpdateTimeMarker
_verifyDisplayProtection
_applyAirPlayMusicMode
_applyAirPlayMusicModeForItem:shouldIgnorePlaybackQueueTransactions:
_cancelStallTimer
_changeChapterTimeMarkerIndexBy:
_clearVideoLayer:
_currentTimeWithPreloadedPlayerTime:value:
_shouldProvideAudiblePlaybackPerformance
_unregisterForPlayer:
_setQueueController:deferItemLoading:
_endSeekAndChangeRate:
_prepareToPlayItem:
embeddedDataTimesForItem:
_currentIndexInBoundaryCMTimes:
_checkForBoundaryTimeCrossing
_reloadTimeMarkerObservationsForItem:
_registerForAVItemNotifications:
_resetInternalState
_setAutoPlayBackgroundTaskAssertionEnabled:
_attemptAutoPlay
_hasEnoughDataToPlay
_setBufferingState:
_setActionAtEndAttributeForState:
_delayedPostPlaybackStateChangedNotification
_postPlaybackStateChangedNotificationWithOriginalState:newState:delayable:
autoclearDisplayOverride
setAutoclearingDisplayOverridePlaybackState:
setDisplayOverridePlaybackState:
_displayPlaybackState
_scheduleUpdateCurrentItemBookkeepingTimer
_pauseBookkeepingTimer
_resumeBookkeepingTimer
_cancelUpdateCurrentItemBookkeepingTimer
_configureUpdateCurrentItemBookkeepingTimer
_clearResetRateAfterSeeking
_setAllowsItemErrorResolution:
_setState:
_isVideoLayerAttachedToPlayer
_setVideoLayerAttachedToPlayer:force:pauseIfNecessary:
_setValid:
_unregisterForAVItemNotifications:
_updateCurrentItemHasFinishedDownloading
_updateProgress:
setRateForScanning:
_updateHasProtectedContentForItem:
_updateScanningRate
_updateTypeForItem:
_delayedSetCurrentTime
_updateSeekingIntervalsForStreaming
_clearSeekingIntervalsForStreaming
_extractImageFromMetadata:
_pauseTickTimer
_resumeTickTimer
_playbackFailedWithError:canResolve:
playbackHasStartedForItem:
handlePlaybackErrorWithUserInfo:
_canPlayItem:
_handlePlaybackErrorResolutionType:forItem:playbackError:resolutionError:
_pausePlaybackIfNecessary
_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:
_resumePlaybackIfNecessary
_updateCurrentItemDurationSnapshotWithPlayerTime:
_updateDirectionForChangeDelta:
_queueDidEndWithReason:lastItem:
_itemDidSignificantlyChangeElapsedTime:rate:
_enforcingPolicy:
addPeriodicTimeObserverForInterval:usingBlock:
removeTimeObserver:
displayOverridePlaybackState
lastDirection
muted
bufferingState
setPlaybackMode:
state
policyEnforcer
setPolicyEnforcer:
actionAfterQueueLoadOverride
setActionAfterQueueLoadOverride:
queuePlayer
setQueuePlayer:
queueCoordinator
setQueueCoordinator:
queueController
nextFadeOutDuration
shouldEnforceHDCP
setShouldEnforceHDCP:
shouldPostCompatibilityNotifications
setShouldPostCompatibilityNotifications:
isReloadingForPlaybackContextChange
setIsReloadingForPlaybackContextChange:
canAttemptErrorResolution
identifier
useAirPlayMusicMode
managesAirPlayBehaviors
stateBeforeInterruption
automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds
setAutomaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds:
wantsPictureInPicture
pictureInPictureController
isPictureInPictureActive
isSuspendedUnderLock
jumpToContentItemID:userInitiated:
applicationState
imageWithData:
dataValue
metadataItemsFromArray:withKey:keySpace:
removeObserver:forKeyPath:
_itemKeysToObserve
initWithObjectsAndKeys:
cancelPreviousPerformRequestsWithTarget:selector:object:
postNotification:
performSelector:target:argument:order:modes:
currentRunLoop
notificationWithName:object:userInfo:
beginBackgroundTaskWithExpirationHandler:
endBackgroundTask:
sharedApplication
beginBackgroundTaskWithName:expirationHandler:
removeObjectsAtIndexes:
addIndex:
isEqualToValue:
sortUsingComparator:
valueWithCMTime:
_playerKeysToObserve
flush
commit
begin
superlayer
initWithDomain:code:userInfo:
dictionaryWithObjectsAndKeys:
player:currentItemDidChangeFromItem:toItem:
stopPictureInPicture
initWithPlayerLayer:
isPictureInPictureSupported
jumpToContentItemID:
setApplicationAudioSession:
setCategory:error:
isApplicationAudioSession
canPlayFastForward
isSuspended
silenceOutput:error:
setActive:error:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
animateWithDuration:animations:
prefersApplicationAudioSession
initialize
isNetworkSupportedPath:
keyPathsForValuesAffectingCurrentItem
outputSupportsAC3
automaticallyNotifiesObserversOfPlaylistManager
initWithObjects:
unsignedIntValue
audioFormats
compare:options:range:
_lookupDictionary
initWithLookupDictionary:
assets
buyParameters
formattedPrice
offerType
price
actionTextForType:
lookupDictionary
allowsKeyedCoding
decodePropertyListForKey:
isEqualToDictionary:
artworkCatalogBlock
previewArtworkRequestToken
_responseDictionary
_fallbackStreamingKeyServerURL
_fallbackStreamingKeyCertificateURL
initWithResponseDictionary:
item
responseDictionary
fallbackStreamingKeyServerURL
setFallbackStreamingKeyServerURL:
fallbackStreamingKeyCertificateURL
setFallbackStreamingKeyCertificateURL:
lastObject
_descriptionText
_startTime
_endTime
setDescriptionText:
startTime
setStartTime:
endTime
setEndTime:
initWithBlock:
_connection
_hasLaunchedService
_isRadioAvailable
_remoteProcessAssertion
_remoteProcessAssertionCompletionHandler
_remoteProcessAssertionCount
clientRadioControllerRadioAvailabilityDidChange:
clientRadioControllerRecentStationsDidChange
isRadioAvailable
getRecentStationGroupsWithCompletionHandler:
_beginRemoteProcessAssertionWithCompletionHandler:
_endRemoteProcessAssertion
_setRadioAvailable:
_getConnectionWithCompletionHandler:
remoteObjectProxyWithErrorHandler:
resume
setInterruptionHandler:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
initWithMachServiceName:options:
openApplication:options:withResult:
initWithBundleIdentifier:flags:reason:name:withHandler:
sharedService
_requestedRadioStationProperties
setStationEvents:
setAttributionLabel:
setStationGlyphBlock:
setLive:
setProviderName:
setHasExplicitContent:
setShortEditorNotes:
setEditorNotes:
setBeats1:
artworkCatalog
insertString:atIndex:
hasVideo
kindWithVariants:
kindWithVariants:options:
__title_KEY
__album_KEY
__artist_KEY
__genre_KEY
__composer_KEY
__grouping_KEY
__copyrightText_KEY
__duration_KEY
__trackCount_KEY
__trackNumber_KEY
__discNumber_KEY
__playCount_KEY
__skipCount_KEY
__explicitSong_KEY
__artistUploadedContent_KEY
__hasVideo_KEY
__beatsPerMinute_KEY
__lyrics_KEY
__shouldShowComposer_KEY
__volumeNormalization_KEY
__artworkCatalogBlock_KEY
__localFileAsset_KEY
__keepLocalEnableState_KEY
__keepLocalManagedStatus_KEY
__libraryAdded_KEY
__libraryAddedDate_KEY
__lastDevicePlaybackDate_KEY
__libraryAddEligible_KEY
__hasCloudSyncSource_KEY
__classicalWork_KEY
__classicalMovement_KEY
__classicalMovementCount_KEY
__classicalMovementNumber_KEY
__year_KEY
__homeSharingAsset_KEY
__storeAsset_KEY
__userRating_KEY
__cloudStatus_KEY
__gaplessInfo_KEY
__volumeAdjustment_KEY
__playbackPosition_KEY
__downloadedDate_KEY
_variants
_options
variants
options
stringWithString:
_discoveryController
_discoveredTelevisions
_serialQueue
setDiscoveryMode:
devicePresenceDetected
getRoutesForCategory:
getPickedRouteHasVolumeControlWithCompletion:
_onQueue_controllerDidDiscoverTelevision:
_onQueue_controllerDidRemoveTelevision:
eventName
eventCode
eventPayload
_siriSessionIdentifier
siriSessionIdentifier
setSiriSessionIdentifier:
numberWithUnsignedInt:
_version
_appDataDict
_dirtyPopularityDict
initWithAppDataDictionary:
setSongPopularity:forIdentifierSet:
songPopularityForIdentifiers:
setSongPopularity:forAdamID:
songPopularityForAdamID:
createAppDataDictionary
version
dictionaryWithDictionary:
_internalInfo
initWithiTunesCloudStoreFileAssetInfo:
assetURL
downloadKey
fairPlayInfoList
flavorType
fileExtension
fileSize
protectionType
_artworkGenerator
artworkGenerator
setArtworkGenerator:
valueFromSource:context:
translatorWithKeyPath:
translatorWithBlock:
_keyPath
_valueTransformBlock
keyPath
valueTransformBlock
buildSchemaIfNeeded
identifiersForContentItem:
objectForPropertySet:contentItem:context:
sectionObjectForPropertySet:contentItem:context:
mapIdentifierCreationBlock:
mapPropertyKey:toMPContentItemSelector:
mapArtworkPropertyKey:
mapPropertyKey:toUserInfoKey:
mapPropertyKey:toDeviceSpecificUserInfoKey:
mapPropertyKey:toValueTransformer:
mapRelationshipKey:toModelClass:
stringByAppendingString:
screenshotArtworkCatalog
_timerSource
initWithInterval:queue:block:
initWithInterval:repeats:queue:block:
timerWithInterval:block:
timerWithInterval:repeats:block:
timerWithInterval:queue:block:
timerWithInterval:repeats:queue:block:
_enableState
enableState
setEnableState:
_backstopView
_batteryMonitoringWasEnabled
_desiredParts
_disabledParts
_visibleParts
_tvOutEnabled
_allowsTVOutInBackground
_itemTypeOverride
_scaleMode
_scaleModeOverride
_backstopColor
_loadingIndicator
_tvOutWindow
_backgroundTaskId
_artworkImageStyle
_posterImage
_canAnimateControlsOverlay
_canShowControlsOverlay
_disableControlsAutohide
_playAfterPop
_scheduledLoadingIndicator
_displayPlaybackErrorAlerts
_allowsDetailScrubbing
_attemptAutoPlayWhenControlsHidden
_alwaysAllowHidingControlsOverlay
_hasShownFirstVideoFrame
_allowsWirelessPlayback
_disableAutoRotation
_inlinePlaybackUsesTVOut
_alertController
swipableView:willMoveToSuperview:
swipableView:didMoveToSuperview:
swipableView:willMoveToWindow:
swipableView:overrideHitTest:withEvent:
swipableView:swipedInDirection:
swipableView:tappedWithCount:atLocation:
swipableView:tappedWithCount:
swipableView:pinchedToScale:withVelocity:
swipableViewHadActivity:
canHideOverlay:
displayVideoView
exitFullscreen
prepareToDisplayVideo
setControlsNeedLayout
setControlsOverlayVisible:animate:
setControlsOverlayVisible:animate:force:
setDesiredParts:animate:
setScaleModeOverride:animated:
setUseHostedWindowWhenFullscreen:
setVisibleParts:animate:
setOwnsStatusBar:
allowsDetailScrubbing
setAllowsDetailScrubbing:
allowsWirelessPlayback
setAllowsWirelessPlayback:
alwaysAllowHidingControlsOverlay
setAlwaysAllowHidingControlsOverlay:
artworkImageStyle
setArtworkImageStyle:
attemptAutoPlayWhenControlsHidden
setAttemptAutoPlayWhenControlsHidden:
backstopColor
setBackstopColor:
canAnimateControlsOverlay
setCanAnimateControlsOverlay:
canChangeScaleMode
canShowControlsOverlay
setCanShowControlsOverlay:
controlsOverlayVisible
setControlsOverlayVisible:
desiredParts
setDesiredParts:
disableAutoRotation
setDisableAutoRotation:
disableControlsAutohide
setDisableControlsAutohide:
disabledParts
setDisabledParts:
displayPlaybackErrorAlerts
setDisplayPlaybackErrorAlerts:
hostedWindow
hostedWindowContextID
inlinePlaybackUsesTVOut
setInlinePlaybackUsesTVOut:
itemTypeOverride
setItemTypeOverride:
posterImage
setPosterImage:
scaleMode
setScaleMode:
TVOutEnabled
setTVOutEnabled:
viewControllerWillRequestExit
videoOverlayView
visibleParts
setVisibleParts:
clearWeakReferencesToObject:
noteIgnoredChangeTypes:
setOrientation:animate:
setItem:
orientation
setOrientation:
registerForPlayerNotifications
unregisterForPlayerNotifications
isFullscreenForLayoutPurposes
displayArtworkImageStyle
calculateFullScreenArtworkImageViewFrame
calculateArtworkImageViewFrame
_itemTypeWithActualTypePreference
showArtworkInImageView
newArtworkImageView
reloadArtworkImageView
enableAirPlayVideoRoutesIfNecessary
_updateAlwaysPlayWheneverPossible
setScaleMode:animated:
visiblePartsForProposedParts:
toggleScaleMode:
showArtworkForTVOut
artworkImageView
loadView
removeChildViewController:
viewDidAppear:
viewWillDisappear:
setAllowsTVOutInBackground:
allowsTVOutInBackground
videoOverlayViewIfLoaded
isTransitioningToFullscreen
isTransitioningFromFullscreen
canShowQTAudioOnlyUI
_endBackgroundTask
_videoView_applicationSuspendedNotification:
_videoView_applicationWillEnterForegroundNotification:
_videoView_availableRoutesDidChangeNotification:
_videoView_batteryStateDidChangeNotification:
_videoView_effectiveScaleModeChangedNotification:
_videoView_isExternalPlaybackActiveDidChangeNotification:
_videoView_playbackErrorNotification:
_exitPlayerForPlaybackError
videoView_playbackStateChangedNotification:
_videoView_resumeEventsOnlyNotification:
_videoView_scaleModeChangedNotification:
_videoView_sizeChangedNotification:
_videoView_timedImageMetadataAvailableNotification:
videoView_tvOutCapabilityDidChangeNotification:
_videoView_validityChangedNotification:
videoView_itemTypeAvailableNotification:
videoView_firstVideoFrameDisplayedNotification:
_updateBackgroundView:
videoView_bufferingStateChangedNotification:
_popForTimeJump:
_screenDidConnect:
_screenDidDisconnect:
_itemDurationDidChange:
_delayedPopForTimeJump
_delayedShowLoading
tearDownTVOutWindow
displayVideoViewOnScreen
displayVideoViewOnTV
handleScaleModeChange
handleExternalPlaybackDidChange
_showStillFrameIfNotAlreadyPlaying
_scheduleLoadingIndicatorIfNeeded
backgroundViewDidUpdate
disabledPartsForProposedParts:
_canEnableAirPlayVideoRoutes
_delayedUpdateBackgroundView
_hideLoadingIndicator
_showDestinationPlaceholder
_updateIdleTimerDisabledFromPlaybackState:
_updateProgressControlForItem:
batteryState
currentDevice
setNeedsDisplay
videoController:scaleModeDidChange:
makeKeyWindow
makeKeyAndVisible
keyWindow
setKeepContextInBackground:
setAutoresizingMask:
shouldMakeUIForDefaultPNG
endIgnoringInteractionEvents
viewControllerRequestsExit:
viewControllerRequestsExit:reason:
viewControllerFailedToPlay:withError:
addAction:
actionWithTitle:style:handler:
alertControllerWithTitle:message:preferredStyle:
videoController:shouldDisplayAlertForError:
presentedViewController
setBatteryMonitoringEnabled:
videoControllerShouldAutohide:
layoutIfNeeded
calculateArtworkImageViewFrameInRect:
heightForStyle:orientation:
isBatteryMonitoringEnabled
supportsFullscreenDisplay
_interfaceOrientation
_appearing
_observesApplicationSuspendResumeEventsOnly
_showOverlayWhileAppearingDisabled
_registeredForPlayerNotifications
_playerLockedCount
_idleTimerDisabled
lockPlayer
unlockPlayer
beginIgnoringChangeTypes:
canDisplayItem:withInterfaceOrientation:
copyOverlayViewForTransitionToItem:
beginTransitionOverlayHidding
endTransitionOverlayHidingWithTransferedOverlayView:
didChangeToInterfaceOrientation:
displayableInterfaceOrientationForInterfaceOrientation:
endIgnoringChangeTypes:
isAppearing
startTicking
stopTicking
applicationDidSuspendEventsOnly
applicationDidResumeEventsOnly
applicationResumed
observesApplicationSuspendResumeEventsOnly
setObservesApplicationSuspendResumeEventsOnly:
willChangeToInterfaceOrientation:
setAppearing:
setRegisteredForPlayerNotifications:
setIdleTimerDisabled:
setView:
addChildViewController:
_canReloadView
registeredForPlayerNotifications
idleTimerDisabled
removeViewControllerForView:
setParentViewController:
_setIdleTimerDisabled:forReason:
childViewControllers
viewController:endIgnoringChangeType:
viewController:beginIgnoringChangeTypes:
_predicates
clearPredicates
addPredicates:
predicatesCount
predicatesAtIndex:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
predicates
setPredicates:
writeData:forTag:
_screenRecordingNotifyToken
_lastKnownScreenRecordingState
initWithAVController:
_applicationWillEnterForeground:
_isScreenRecordingDidChange:
_registerForScreenRecordingNotifications
_updateScreenRecordingState
_unregisterForScreenRecordingNotifications
_redownloadProductResponse
_responseError
_shouldUseStreamingRedownload
_redownloadRequest
_streamingRental
_buyParameters
_endpointType
_requestingBundleIdentifier
_requestingBundleVersion
initWithBuyParameters:endpointType:
initWithBuyParameters:endpointType:shouldUseStreamingRedownload:
main
redownloadProductResponse
responseError
endpointType
isStreamingRental
setStreamingRental:
urlForBagKey:
performRequestWithResponseHandler:
setPlaybackRequest:
initWithRequestContext:redownloadParametersString:
getBagForRequestContext:withCompletionHandler:
sharedBagProvider
initWithIdentity:
_imageView
_squareImage
albumArtImage
setAlbumVisible:reflectionVisible:
setImage:
image
setFrame:withReflectionHeight:
setReflectionVisible:withDuration:
imageView
squareImage
setSquareImage:
setReflectionAlpha:
setReflectionFraction:
containerView
setEdgeAntialiasingMask:
setAllowsEdgeAntialiasing:
reflectionAlpha
setMask:
setOpacity:
setAnchorPoint:
setPosition:
defaultReflectionHeight
_scaledFittingSize
stringRepresentation
initWithTiledArtworkRequest:scaledFittingSize:
_animating
_batteryText
_pairedDeviceText
_localizedSubtitle
_currentVisibleTextType
hasVisibleTextTypeToShow
hasVisibleTextTypeToTransitionTo
transitionToNextAvailableVisibleTextType
stringForCurrentVisibleTextType
_stringForVisibleTextType:
_nextAvailableVisibleTextType
resetForNewRoute
batteryText
setBatteryText:
pairedDeviceText
setPairedDeviceText:
localizedSubtitle
setLocalizedSubtitle:
isAnimating
setAnimating:
currentVisibleTextType
setCurrentVisibleTextType:
_mediaQuery
_firstItem
_shuffleType
_repeatType
initWithMediaRemotePlaybackQueue:options:
verifyWithError:
playbackItemMetadataForMediaItem:
mediaQuery
firstItem
shuffleType
repeatType
initWithData:
_mediaRemotePlaybackQueue
_mediaRemoteOptions
isRequestingImmediatePlayback
setRequestingImmediatePlayback:
siriRecommendationIdentifier
siriAssetInfo
featureName
setSiriRecommendationIdentifier:
shouldOverrideManuallyCuratedQueue
setShouldOverrideManuallyCuratedQueue:
replaceIntent
setReplaceIntent:
userInfo
setUserInfo:
mediaRemoteOptions
unarchivedObjectOfClass:fromData:error:
valueForKey:
queueWithMediaRemotePlaybackQueue:
queueWithMediaRemotePlaybackQueue:options:
registerRemotePlaybackQueueClass:forPlaybackQueueType:
removeObjectForKey:
initWithIdentifier:data:
data
seedTrack
_firstTrackIdentifier
_trackIdentifiers
_collectionIdentifierSet
firstTrackIdentifier
trackIdentifiers
collectionIdentifierSet
_stationID
_stationStringID
_routeLabel
_accessoryImageView
_alphaOverride
_routeLabelHidden
_forcesUppercaseText
_accessoryImageSpacing
_font
_route
_routeTitle
_overrideColor
_routeLabelAxis
_hitRectInsets
intrinsicContentSize
pointInside:withEvent:
sizeThatFits:
setHighlighted:
setAlpha:
tintColorDidChange
accessoryImage
setAccessoryImage:
setAccessoryImageSpacing:
setFont:
setRoute:
setForcesUppercaseText:
setRouteLabelHidden:
setRouteLabelAxis:
_intrinsicContentSizeInvalidatedForChildView:
accessoryImageSpacing
font
hitRectInsets
setHitRectInsets:
route
routeTitle
isRouteLabelHidden
forcesUppercaseText
overrideColor
setOverrideColor:
routeLabelAxis
invalidateIntrinsicContentSize
tintColor
animateWithDuration:delay:options:animations:completion:
subviews
supportsLyricsForURLBagDictionary:
_song
song
setSong:
_localizedTitle
_stations
localizedTitle
setLocalizedTitle:
stations
setStations:
_requestedBrowseSectionProperties
_requestedPropertySet
requestedPropertySetExcludingInternalOnlyProperties
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:previouslyRetrievedNestedResponse:
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:displaysAsGridCellInCarPlay:previouslyRetrievedNestedResponse:onlyContainsEditorialElements:featuredContentKind:
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:displaysAsGridCellInCarPlay:previouslyRetrievedNestedResponse:onlyContainsEditorialElements:featuredContentKind:modelObject:
requestedPropertySet
setPreviouslyRetrievedNestedResponse:
setBrick:
setMemberOfChartSet:
setUniformContentItemType:
setSectionType:
setDisplaysAsGridCellInCarPlay:
allSupportedInternalOnlyProperties
allSupportedPropertiesIncludingInternalOnlyProperties:
_automationID
_target
_heldParts
_playing
_alternatesButton
_bookmarkButton
_chaptersButton
_emailButton
_fastForward15SecondsButton
_likeOrBanButton
_nextButton
_playButton
_previousButton
_rewind15SecondsButton
_rewind30SecondsButton
_scaleButton
_toggleFullscreenButton
didMoveToWindow
didMoveToSuperview
setHidden:
buttonForPart:
setDesiredParts:animated:
setVisibleParts:animated:
playButtonImage
pauseButtonImage
playPauseButtonImage
_alternateTypesChangedNotification:
_availableRoutesChangedNotification:
_isExternalPlaybackActiveDidChangeNotification:
_itemDurationDidChangeNotification:
_timeMarkersAvailableNotification:
_itemChangedNotification:
_playbackStateChangedNotification:
_validityChangedNotification:
allowsWirelessPlaybackForCurrentItem
buttonDown:
buttonHeld:
buttonHoldReleased:
buttonUp:
newButtonForPart:
newVolumeSlider
reloadForAdditions:removals:animate:
buttonImageForPart:
disabledButtonImageForPart:
highlightedButtonImageForPart:
showsVolumeSliderWhenNoVolumeControlAvailable
tintColorForPart:
alwaysHidesSystemVolumeHUD
usesTintColorForControls
_applyPossibleVisiblePartsToParts:
_applyDesiredPartsWithAnimation:
_handleHoldForPart:
_handleReleaseForPart:
_handleTapForPart:
_reloadViewWithAnimation:
_updateAdditions:removals:forPart:
_updatePlayButtonImage
_updateTintColorForPart:
_updateEnabledStates:
target
setTarget:
setImage:forState:
setBackgroundImage:forState:
buttonImagesUseBackgroundImage
accessibilitySetIdentification:
addTarget:action:forControlEvents:
setCharge:
setShowsTouchWhenHighlighted:
setExclusiveTouch:
buttonWithType:
buttonType
buttonClass
containsIndex:
removeIndex:
cancelTouchTracking
removeTarget:action:forControlEvents:
defaultVisibleParts
DSIDForUserIdentity:outError:
accountDSID
_parseOnceToken
_rawResponseOutput
_sectionBuilder
_contentItemBuilder
_filteredFCKinds
_storeBagLinkRegularExpression
_rootObjectIdentifier
initWithRawResponseOutput:sectionBuilder:contentItemBuilder:filteredFCKinds:userIdentity:rootObjectIdentifier:options:storeBagDictionary:
_parsedSectionedCollection
_parsedEditorialElements:
_parsedEditorialElementX:
_parsedEditorialElement:
bagRoomURLRegularExpression
musicAPIURLWithLinkURLString:
linkSectionWithDictionary:
featuredContentKindForNode:
attributesForContentNode:
firstChildOfContentNode:
childrenOfContentNode:
linksForContentNode:
featuredContentKindCorrespondsToItem:
isContentNodeAnEditorialElement:
_parsedContentNode:uniformContentItemTypeResolver:additionalAttributesFromParent:
substringWithRange:
rangeWithName:
matchesInString:options:range:
regularExpressionWithPattern:options:error:
enumerateIndexesUsingBlock:
sectionType
_requestedAlbumProperties
setRepresentativeSong:
setSongPopularityBlock:
setGenre:
setVolumeNormalization:
setPreorder:
setYear:
components:fromDate:
setReleaseDateComponents:
setCopyrightText:
setClassical:
setCompilation:
setKeepLocalManagedStatus:
setKeepLocalEnableState:
setLibraryAdded:
setMaximumItemTrackNumber:
setLibraryAddEligible:
setHasCleanContent:
setDiscCount:
setTrackCount:
_shuffledList
_shuffleStartingSectionIdentifier
_shuffleStartingItemIdentifier
didDequeueShuffledItemsInSSIL:
didDequeueShuffledItemsInSectionedIdentifierList:
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
encodeWithCoder:withExclusiveAccessToken:
setShuffleType:
setShuffleType:startingItem:inSection:
setShuffleType:startingItem:inSection:randomSource:
safelyReshuffleAfterItem:inSection:
enumeratorWithOptions:startPosition:endPosition:withExclusiveAccessToken:
addDataSourceAtStart:section:completion:
addDataSource:section:afterItem:inSection:completion:
addDataSource:section:afterTailOfSection:completion:
addDataSourceAtEnd:section:completion:
addDataSourceAtStart:section:sequentially:completion:
addDataSource:section:sequentially:afterItem:inSection:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
addDataSourceAtEnd:section:sequentially:completion:
replaceDataSource:forSection:completion:
moveItemToStart:fromSection:
moveItemToEnd:fromSection:
moveItem:fromSection:afterItem:inSection:
moveItem:fromSection:afterHeadOfSection:
moveItem:fromSection:afterTailOfSection:
removeItem:fromSection:
_itemCountWithExclusiveAccessToken:
dataSourceInsertItemsAtHead:inSection:
dataSourceInsertItems:afterItem:inSection:
dataSourceInsertItemsAtTail:inSection:
dataSourceRemoveItem:fromSection:
dataSourceReloadItem:inSection:
_candidateItemsWithExclusiveAccessToken:
_dequeueCandidatesWithQuota:withExclusiveAccessToken:
_shuffledListWithExclusiveAccessToken:
addDataSource:section:afterHeadOfSection:
shuffleStartingSectionIdentifier
setShuffleStartingSectionIdentifier:
shuffleStartingItemIdentifier
setShuffleStartingItemIdentifier:
doesNotRecognizeSelector:
assertHasExclusiveAccessForOwner:
dequeueCandidatesWithQuota:
candidateItems
itemCount
_isSequentialSection:withExclusiveAccessToken:
addDataSourceAtEnd:section:sequentially:
addDataSource:section:sequentially:afterTailOfSection:
addDataSource:section:sequentially:afterItem:inSection:
addDataSourceAtStart:section:sequentially:
initWithSectionedIdentifierList:randomSource:startingItemEntry:withExclusiveAccessToken:
_randomDistribution
_candidateItems
_beforeInitWithCoder:
_enumerator:didEncounterEntry:withExclusiveAccessToken:
_reverseEnumeratorWillStartAtEnd:withExclusiveAccessToken:
_addShuffleSection:dataSource:withExclusiveAccessToken:
_appendShuffledItems:withExclusiveAccessToken:
_createShuffleCloneForItem:inSection:withExclusiveAccessToken:
randomDistribution
setCandidateItems:
section:shouldShuffleExcludeItem:
removeObjectAtIndex:
indexOfObjectPassingTest:
enumerateKeysAndObjectsUsingBlock:
_coreScope
_itemKind
_name
initWithItemKind:name:properties:
coreScope
setItemKind:
setValues:forProperties:async:withCompletionBlock:
anyInLibrary:predicate:
autoupdatingSharedLibrary
predicateWithProperty:equalToInt64:
dataWithPropertyList:format:options:error:
allSupportedItemProperties
allSupportedSectionProperties
_playlist
_representativeModelObject
_referralObject
_songResults
_storeImportAllowedHandler
playlist
setPlaylist:
representativeModelObject
setRepresentativeModelObject:
referralObject
setReferralObject:
songResults
setSongResults:
storeImportAllowedHandler
setStoreImportAllowedHandler:
_iconView
_backgroundPlaceholderImageView
_backgroundPlaceholderPosterImageView
_backgroundPlaceholderView
_customBackgroundImageView
_destinationName
_destinationPlaceholderStyle
_layoutSubviewsPostflightHandler
setInterfaceOrientation:
qtIcon
setShowQTAudioOnlyUI:
_createInformationalTitleView:systemFont:lineBreakMode:
setCustomBackgroundImage:
setBackgroundPlaceholderImage:
setBackgroundPlaceholderPosterImageView:
backgroundPlaceholderImage
backgroundPlaceholderView
setDestinationName:
setDestinationPlaceholderStyle:
setShowDestinationPlaceholder:animated:
_tvOutCapabilityDidChangeNotification:
_updateDestinationBackgroundViewAnimated:
backgroundPlaceholderPosterImageView
destinationName
destinationPlaceholderStyle
interfaceOrientation
layoutSubviewsPostflightHandler
setLayoutSubviewsPostflightHandler:
_destinationSubtitleLabel
_destinationTitleLabel
_videosImageView
layoutBelowIfNeeded
lineHeight
systemFontOfSize:
userInterfaceIdiom
viewWithTag:
screen
insertSubview:atIndex:
insertSubview:aboveSubview:
setClipsToBounds:
setLineBreakMode:
insertSubview:belowSubview:
_flatImageWithColor:
systemGrayColor
_artworkCatalogWithArtworkType:
artworkCatalogCacheProperties
screenshotArtworkCatalogCacheProperties
_changeDetails
_parser
hasAdditionalContentItems
changeDetails
setChangeDetails:
parser
setParser:
_artworkResizingAccessQueue
_artworkResizingOperationQueue
_artworkResizingOperations
resizeImage:scaledFittingSize:useExactFittingSizeAsDestinationSize:saveToDestinationURL:completionHandler:
cancelResizeImage:
artworkResizingAccessQueue
setArtworkResizingAccessQueue:
artworkResizingOperationQueue
setArtworkResizingOperationQueue:
artworkResizingOperations
setArtworkResizingOperations:
strongToStrongObjectsMapTable
_avDiscoverySession
_discoveryMode
initWithName:
isDevicePresenceDetected
pickedRoutes
_availableOutputDevicesDidChangeNotification:
_outputContextDevicesDidChangeNotification:
discoveryMode
outputContextForID:
initWithDeviceFeatures:
_sectionedItems
_sections
mutableCopyWithZone:
lastItem
allItems
allSections
numberOfSections
sectionAtIndex:
numberOfItemsInSection:
itemAtIndexPath:
enumerateSectionsUsingBlock:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateItemsUsingBlock:
firstSection
globalIndexForIndexPath:
indexPathForGlobalIndex:
itemsInSectionAtIndex:
hasSameContentAsSectionedCollection:
lastSection
totalItemCount
changeDetailsToSectionedCollection:isEqualBlock:isUpdatedBlock:
changeDetailsToSectionedCollection:applyingUIKitWorkarounds:isEqualBlock:isUpdatedBlock:
_initializeAsEmptySectionedCollection
indexPathByAddingIndex:
section
indexPathWithIndex:
indexSet
indexPathForItem:inSection:
insertSection:atIndex:
removeSectionAtIndex:
moveSectionFromIndex:toIndex:
replaceSectionAtIndex:withObject:
appendSection:
insertItem:atIndexPath:
removeItemAtIndexPath:
replaceObjectAtIndexPath:withObject:
moveItemFromIndexPath:toIndexPath:
appendItem:
appendItems:
removeAllObjects
replaceSectionsUsingBlock:
replaceItemsUsingBlock:
exchangeObjectAtIndex:withObjectAtIndex:
identifiersForItemAtIndexPath:
identifiersForSectionAtIndex:
enumerateItemIdentifiersUsingBlock:
enumerateSectionIdentifiersUsingBlock:
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
indexPathForItemWithIdentifiersIntersectingSet:
_storeAssetBuilder
_storeAssetProperties
_requestedTVShowProperties
setEditorialArtworkCatalogBlock:
setTagline:
setEpisodesCount:
setShortTitle:
layerClass
_playerLayerView
_targetVideoGravity
_videoGravityAnimator
videoBounds
videoGravity
setVideoGravity:
setVideoGravity:duration:
playerLayerView
_isDescendantOfScrollView
_updatePlayerLayerViewFrame
_updatePlayerLayerViewFrame:
_mediaTimingFunctionForCurrentAnimationCurve
targetVideoGravity
setTargetVideoGravity:
videoGravityAnimator
setVideoGravityAnimator:
functionWithName:
_currentAnimationCurve
convertRect:toCoordinateSpace:
_peripheryInsets
coordinateSpace
safeAreaInsets
_isClassic
displayCornerRadius
convertRect:fromView:
startAnimation
addCompletion:
initWithDuration:curve:animations:
finishAnimationAtPosition:
stopAnimation:
isInterruptible
isRunning
setAnimationTimingFunction:
_currentAnimationDuration
_isInAnimationBlock
videoRect
_stopTime
_AVURLAssetOptions
_playerView
_contentView
_movieSubtitle
_movieTitle
setScaleMode:duration:
effectiveScaleMode
contentView
movieFrame
movieContentFrame
playerLayer
AVURLAssetOptions
setAVURLAssetOptions:
movieSubtitle
setMovieSubtitle:
movieTitle
setMovieTitle:
stopTime
setStopTime:
__datePlayed_KEY
__playlist_KEY
__radioStation_KEY
itemType
genericObjectRepresentation
_statusBarStyleOverride
_coordinator
statusBarCoordinator:receivedTapWithContext:completionBlock:
statusBarCoordinator:invalidatedRegistrationWithError:
presentMediaControls
setRegisteredStyleOverrides:reply:
additionalURLRequestsWithStoreBagDictionary:
additionalCatalogURLQueryItems
groupingNameBagKey
groupingNameWithMusicSubscriptionDictionary:
rootObjectIdentifierWithSubscriptionStatus:
recentlyPlayedSectionWithTitle:
recentlyPlayedItemsWithAPILoadedOutput:
recentlyPlayedItemWithDictionary:
radioStationWithDictionary:
requestWithURL:
_scrubber
_playPauseButton
_fullscreenButton
_pictureInPictureButton
_airplayButton
_statusBar
_doneButton
_loadingLabel
_scrubInstructions1
_scrubInstructions2
_leftButton
_rightButton
_audioAndSubtitlesButton
_lightweightRoutingController
_volumeController
_topBarLayoutGuide
_topBarItemsGuide
_bottomBarTopLayoutGuide
_bottomBarBottomLayoutGuide
_bottomBarItemsGuide
_audioAndSubtitlesController
_ticking
_ignoreTouchUp
_shouldResumePlayback
_seekDirection
_topBarBottomConstraint
_topBarHeightConstraint
_topBarLayoutGuideHeightConstraint
_topItemsTopConstraint
_topItemsTrailingConstraint
_bottomBarHeightConstraint
_bottomItemsBottomConstraint
_bottomItemsLeftConstraint
_bottomItemsRightConstraint
_volumeSliderRightConstraint
_volumeSliderWidthConstraint
_topItemsConstraints
_bottomItemsConstraints
_previousTopBarMargin
_topBarTraitCollectionConstraints
_topItems
_bottomItems
navigationBarHidden
_automaticallyHandleTransportControls
_allowsExitFromFullscreen
_allowsPictureInPicture
_allowsAudioAndSubtitles
videoViewController
_viewControllerForModalPresentationOrientation
_topBarBackdropView
_bottomBarBackdropView
_overrideType
detailSliderTrackingDidBegin:
detailSliderTrackingDidEnd:
detailSliderTrackingDidCancel:
detailSlider:didChangeValue:
detailSlider:didChangeScrubSpeed:
updateTimeBasedValues
showAlternateTracks
hideAlternateTracks
setVideoViewController:
setNavigationBarHidden:
navigationBar
volumeController:volumeControlAvailableDidChange:
volumeController:volumeControlCapabilitiesDidChange:
volumeController:volumeControlLabelDidChange:
volumeController:volumeValueDidChange:
volumeController:mutedStateDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
lightweightRoutingController:didChangeDevicePresenceDetected:
lightweightRoutingController:didChangePickedRoutes:
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentationControllerDidDismiss:
presentationControllerDidAttemptToDismiss:
initWithFrame:style:
updateConstraints
traitCollectionDidChange:
setBounds:
removeFromSuperview
allowsScrubbing
setAllowsScrubbing:
setAllowsExitFromFullscreen:
setAllowsPictureInPicture:
bottomBarHeight
setVideoView:
setHidden:animated:
setHidden:animated:completionBlock:
setHidden:animated:animateAlongside:completionBlock:
_hideScrubInstructions
_showScrubInstructions
_handleDismissAudioAndSubtitlesController
_audioAndSubtitlesButtonTapped:
_buttonInteractionBegan:
_buttonInteractionCanceled:
_buttonInteractionEnded:
_doneButtonTapped:
_airplayButtonTapped:
_fullscreenButtonTapped:
_pictureInPictureButtonTapped:
_observeControl:
_playPauseButtonTapped:
_scaleButtonTapped:
_skipButtonTouchDown:
_skipButtonTouchCancel:
_skipButtonTouchUpInside:
_skipButtonTouchUpOutside:
_activeAudioRouteDidChange:
_alternateTracksAvailable:
_durationAvailable:
_effectiveScaleModeDidChange:
_itemChanged:
_playbackStateChanged:
_seekabilityChanged:
_tick:
_videoViewDidMoveToWindow:
_setButtons:inBar:animated:
_configureAuxiliaryButtons:
_configureTransportControls
_imageNamed:
_imageNamed:forControlState:
_newFrostedGlassBackdropView
_registerForItemNotifications:
_registerForPlayerNotifications:
_notifyDelegateOfUserEvent:
_notifyDelegateOfUserEventBegin:
_notifyDelegateOfUserEventCancel:
_notifyDelegateOfUserEventEnd:
_setScrubberDuration:
_setOverrideType:
_setScrubberValue:
_startSeeking
_unregisterForItemNotifications:
_unregisterForPlayerNotifications:
_updateAirplayButton
_updateScaleButton
_updateLoadingIndicator
_updateTopBarBoundsBasedConstraints
_updateVolumeSlider
_updateVolumeImage:
_shouldHideStatusBar
automaticallyHandleTransportControls
setAutomaticallyHandleTransportControls:
allowsExitFromFullscreen
allowsPictureInPicture
allowsAudioAndSubtitles
setAllowsAudioAndSubtitles:
viewControllerForModalPresentationOrientation
setViewControllerForModalPresentationOrientation:
topBarBackdropView
bottomBarBackdropView
overrideType
verticalSizeClass
horizontalSizeClass
showsContentsOnScreen
statusBar
setMinimumValueImage:
addConstraints:
constraintsWithVisualFormat:options:metrics:views:
removeConstraints:
addConstraint:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
colorWithAlphaComponent:
_setDrawsAsBackdropOverlayWithBlendMode:
setTranslatesAutoresizingMaskIntoConstraints:
_setDrawsAsBackdropOverlay:
systemBlueColor
setGroupName:
setColorTintAlpha:
setColorTint:
setBlurRadius:
inputSettings
initWithFrame:privateStyle:
bundleForClass:
isPictureInPicturePossible
setNeedsUpdateConstraints
minusSet:
setWithArray:
setOverrideTraitCollection:
presentationController
setSourceView:
popoverPresentationController
_isInPopoverPresentation
_viewControllerForAncestor
setPreferredContentSize:
removeConstraint:
currentHeight
boldSystemFontOfSize:
setTitleColor:forState:
setTitle:forState:
requestStyle:animated:
easyTouchButtonWithType:
setSelected:
_drawingAsSelected
_updateSelected:highlighted:
_updateForStateChangeAnimated:
isHighlighted
isSelected
setPriority:
beginIgnoringInteractionEvents
constant
presentingViewController
convertPoint:toView:
setConstant:
sharedAVSystemController
setAllowsGroupOpacity:
setAllowsGroupBlending:
_usesCurrentAccountIfAvailable
_initWithResponseDictionary:
allFlavors
firstAsset
HLSKeyCertificateURL
HLSKeyServerURL
HLSPlaylistURL
isiTunesStoreStream
alternateHLSPlaylistURL
alternateHLSKeyServerURL
alternateHLSKeyCertificateURL
assetForFlavor:
_enumerateAssetDictionariesWithBlock:
usesCurrentAccountIfAvailable
setUsesCurrentAccountIfAvailable:
_sectionedIdentifierList
_contexts
_nextEmittableEnumerationResults
_endEntry
initWithSectionedIdentifierList:options:startEntry:endEntry:withExclusiveAccessToken:
nextObjectWithExclusiveAccessToken:
nextObject
sectionedIdentifierList
setOptions:
contexts
setContexts:
nextEmittableEnumerationResults
setNextEmittableEnumerationResults:
endEntry
setEndEntry:
removeLastObject
reverseObjectEnumerator
_entryType
itemResult
trackingEntryResult
branchDepth
entryType
startEntry
nextObjectIdenticalTo:
_startEntryProxy
_entriesToEmit
entriesToEmit
setEntriesToEmit:
indexOfObjectIdenticalTo:
objectEnumerator
initWithiTunesCloudStoreHLSAssetInfo:
playlistURL
keyCertificateURL
keyServerURL
alternatePlaylistURL
alternateKeyCertificateURL
alternateKeyServerURL
_blockingSecureKeyLoadDuration
_perceivedTotalStartupTime
_tracklistLoadDuration
blockingSecureKeyLoadDuration
setBlockingSecureKeyLoadDuration:
perceivedTotalStartupTime
setPerceivedTotalStartupTime:
tracklistLoadDuration
setTracklistLoadDuration:
_commitTimer
_thumbImageView
_isOffScreen
_forcingOffscreenVisibility
_thumbIsDefault
_configuredLayoutGuide
_volumeWarningView
_volumeWarningBlinking
_volumeWarningTrackImage
_beganTrackingFromEUVolumeLimit
_originalMinTrackViewAlphaOverride
_originalMinValueViewAlphaOverride
_originalMaxValueViewAlphaOverride
_isCurrentlyTracking
_setVolumeStartValue
_coalescedVolumeDidChangeLogCount
_optimisticState
_optimisticValue
_trackLayoutGuide
_groupRoute
_outputDeviceRoute
windowSceneForVolumeDisplay
isOnScreenForVolumeDisplay
volumeAudioCategory
isOnScreen
initWithFrame:style:endpointRoute:outputDeviceRoute:
createThumbView
maximumValue
minimumValue
setThumbImage:forState:
setValue:animated:
thumbRectForBounds:trackRect:value:
trackRectForBounds:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
_endTracking
hitRect
setUserInteractionEnabled:
_dynamicUserInterfaceTraitDidChange
volumeControlLabel
setOptimisticValue:
setVolumeController:
setGroupRoute:
setOutputDeviceRoute:
setVolumeDataSource:
setVolumeWarningTrackImage:
updateVolume
_setIsOffScreen:
thumbView
_commitVolumeChange
_thumbImageForStyle:
_minTrackImageForStyle:
_maxTrackImageForStyle:
_resetThumbImageForState:
_layoutForAvailableRoutes
_layoutVolumeWarningView
_beginBlinkingWarningView
_blinkWarningView
_endBlinkingWarningView
_newVolumeWarningView
_routeName
_logVolumeValueDidChange:
volumeWarningTrackImage
trackLayoutGuide
volumeController
groupRoute
outputDeviceRoute
isInOptimisticState
setOptimisticState:
optimisticValue
resizableImageWithCapInsets:
colorWithRed:green:blue:alpha:
stretchableImageWithLeftCapWidth:topCapHeight:
performWithoutAnimation:
_maxValueView
_minValueView
_minTrackView
maximumTrackImageForState:
minimumTrackImageForState:
_systemInteractionTintColor
thumbImageForState:
setShadowOffset:
setShadowBlurRadius:
setShadowColor:
sendActionsForControlEvents:
windowScene
activateConstraints:
_maxTrackView
trailingAnchor
leadingAnchor
bottomAnchor
constraintEqualToAnchor:
topAnchor
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setShadowPath:
CGPath
bezierPathWithOvalInRect:
allowUserToExceedEUVolumeLimit
setShadowOpacity:
setShadowRadius:
addLayoutGuide:
setMaximumTrackImage:forState:
setMinimumTrackImage:forState:
_hasNonDefaultRouteButtonImages
_hasNonDefaultMaxVolumeSliderImage
_hasNonDefaultMinVolumeSliderImage
_hidesRouteLabelWhenNoRouteChoice
_routeButton
_routeButtonShowsTouchWhenHighlighted
_routeDiscoveryEnabled
_showingButton
_showingLabel
_showingSlider
_showsRouteButton
_showsVolumeSlider
_volumeSliderShrinksFromBothEnds
_wirelessRouteIsPicked
_wirelessRoutesAvailable
_pushedRouteDiscoveryModeState
_initWithStyle:
isWirelessRouteActive
areWirelessRoutesAvailable
minimumVolumeSliderImageForState:
maximumVolumeSliderImageForState:
volumeWarningSliderImage
routeButtonImageForState:
routeButtonShowsTouchWhenHighlighted
routeButtonRectForBounds:
setMinimumVolumeSliderImage:forState:
setMaximumVolumeSliderImage:forState:
setVolumeWarningSliderImage:
setRouteButtonImage:forState:
setRouteButtonShowsTouchWhenHighlighted:
setShowsRouteButton:
setShowsVolumeSlider:
setVolumeThumbImage:forState:
showsRouteButton
showsVolumeSlider
volumeSliderRectForBounds:
volumeThumbImageForState:
volumeThumbRectForBounds:volumeSliderRect:value:
hidesRouteLabelWhenNoRouteChoice
volumeSliderShrinksFromBothEnds
setHidesRouteLabelWhenNoRouteChoice:
setVolumeSliderShrinksFromBothEnds:
isVisible
isShowingRouteButton
_createSubviews
_defaultRouteButtonImageAsSelected:
_loadAudioRoutePickerIfNeeded
_displayAudioRoutePicker
_startPrewarmingAudioRoutePicker
_stopPrewarmingAudioRoutePicker
_getDefaultVolumeSliderFrame:routeButtonFrame:forBounds:
_setShowsRouteButton:animated:
_setShowsVolumeSlider:
_setRouteDiscoveryEnabled:
_updateWirelessRouteStatus
_volumeSliderVolumeControlAvailabilityDidChangeNotification:
convertRect:toView:
_setChargeEnabled:
showsTouchWhenHighlighted
imageForState:
convertPoint:fromView:
containsValueForKey:
objCType
_wantsDetailedKeepLocalRequestableResponse
_mediaLibrary
_allowedItemIdentifiers
_allowedSectionIdentifiers
_scopedContainers
_filterText
_legacyMediaQuery
_contentRange
wantsDetailedKeepLocalRequestableResponse
setWantsDetailedKeepLocalRequestableResponse:
mediaLibrary
setLegacyMediaQuery:
itemTranslationContext
sectionTranslationContext
setMediaLibrary:
allowedItemIdentifiers
setAllowedItemIdentifiers:
allowedSectionIdentifiers
setAllowedSectionIdentifiers:
scopedContainers
setScopedContainers:
setFilteringOptions:
filterText
setFilterText:
contentRange
setContentRange:
legacyMediaQuery
encodeInt64:forKey:
deleteCharactersInRange:
_sectionKeepLocalStatusConfigurations
_libraryAssertion
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
_mediaLibraryDidChangeNotification:
sectionKeepLocalStatusConfigurations
setSectionKeepLocalStatusConfigurations:
libraryAssertion
setLibraryAssertion:
setDownloadablePlaylistItemEntityQueryBlock:
downloadablePlaylistItemEntityQueryBlock
setDownloadableItemsQuery:
downloadableItemsQuery
_downloadablePlaylistItemEntityQueryBlock
_downloadableItemsQuery
_didStartLeaseSession
_iTunesStoreStream
_isHLSAsset
_assetFlavor
_assetQuality
_downloadToken
_protectionType
_purchaseBundle
_responseAssetDictionary
_sourceURL
_streamingKeyServerURL
_streamingKeyCertificateURL
_alternateSourceURL
_alternateHLSPlaylistURL
_alternateHLSKeyServerURL
_alternateHLSKeyCertificateURL
assetFlavor
setAssetFlavor:
assetQuality
setAssetQuality:
didStartLeaseSession
setDidStartLeaseSession:
downloadToken
setDownloadToken:
setITunesStoreStream:
isHLSAsset
setIsHLSAsset:
setProtectionType:
purchaseBundle
setPurchaseBundle:
responseAssetDictionary
setResponseAssetDictionary:
sourceURL
setSourceURL:
streamingKeyServerURL
setStreamingKeyServerURL:
streamingKeyCertificateURL
setStreamingKeyCertificateURL:
alternateSourceURL
setAlternateSourceURL:
setAlternateHLSPlaylistURL:
setAlternateHLSKeyServerURL:
setAlternateHLSKeyCertificateURL:
_destinationURL
destinationURL
setDestinationURL:
_hasValidMediaItemValuesForProperties
_hasEvaluatedOfflineHLS
_isOfflineHLS
_mediaItemValuesForProperties
_playbackKeys
_writeQueue
initWithMediaItem:
cachedLocalPlaybackAssetFilePathReturningAssetQuality:protectionType:usesPurchaseBundle:
downloadIdentifier
prefersStoreContentInfo
hlsPlaylistURLString
hlsOfflinePlaybackKeys
isOfflineHLS
isSubscriptionRequired
iTunesStoreContentID
iTunesStoreContentDSID
localNetworkContentURL
mediaLibraryPersistentID
protectedContentSupportStorageURL
setCachedLocalPlaybackAssetFilePath:protectionType:assetQuality:withCompletionHandler:
clearLocalPlaybackAssetFilePathWithCompletionHandler:
shouldRememberBookmarkTime
shouldReportPlayEventsToStore
storeUbiquitousIdentifier
streamingPlaybackAssetDestinationFilePathForAssetQuality:assetFlavor:protectionType:pathExtension:
volumeNormalization
setMediaItem:
_persistURI:persistentContentKey:
_cachedLocalPlaybackAssetFilePathWithIntegrityCheck:returningAssetQuality:protectionType:usesPurchaseBundle:
_invalidateMediaItemProperties
_onqueue_mediaItemValuesForProperties
setWriteQueue:
removeItemAtPath:error:
defaultManager
streamingPlaybackAssetDestinationFilePathForMediaLibraryPersistentID:storeAdamID:storeSagaID:assetQuality:assetFlavor:protectionType:pathExtension:
setHasStoreLyrics:
setShouldShowComposer:
setLocalFileAsset:
setQualityType:
setFilePath:
setPurchaseBundleFilePath:
stringByAppendingPathExtension:
stringByDeletingPathExtension
setNonPurgeable:
setComposer:
setHomeSharingAsset:
setURL:
setAvailable:
setStoreAsset:
setShouldReportPlayEvents:
setEndpointType:
setRedownloadable:
setPlaybackPosition:
setUserRating:
setHasVideo:
setArtistUploadedContent:
setExplicitSong:
pathExtension
fileExistsAtPath:isDirectory:
unarchivedObjectOfClasses:fromData:error:
_highQualityCachedAssetDestinationDirectory
_lowQualityCachedAssetDestinationDirectory
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:
pathForResourceFileOrFolder:
stringByAppendingPathComponent:
_withSocial
_withPlainEditorialNotes
_withRecentlyPlayed
_filteringPolicy
_requestEndpoint
_mode
_types
_displayFilterKinds
_customForYouURL
filteringPolicy
setFilteringPolicy:
requestEndpoint
setRequestEndpoint:
mode
setMode:
types
setTypes:
withSocial
setWithSocial:
withPlainEditorialNotes
setWithPlainEditorialNotes:
displayFilterKinds
setDisplayFilterKinds:
withRecentlyPlayed
setWithRecentlyPlayed:
customForYouURL
setCustomForYouURL:
_volumeView
preferredContentSize
_audioCategory
_hostingWindow
_previousWindow
initWithAudioCategory:
presentAlertControllerInWindow:
dismissAlertController
_keyWindowDidChange:
_flip
hostingWindow
setHostingWindow:
previousWindow
setPreviousWindow:
setContentViewController:
resignKeyWindow
setRootViewController:
_deviceIdentifier
_generation
deviceIdentifier
setDeviceIdentifier:
generation
setGeneration:
positionKeyWithDeviceIdentifier:generation:
_nextEntries
_dataSourceRemoved
_positionKey
_sectionIdentifier
_hostedSectionIdentifier
_previousEntry
_branchDepth
initWithPositionKey:sectionIdentifier:
addBranch:forceBranchDepthIncrease:
addNextEntry:
prepareForDealloc
setDataSourceRemoved
isDataSourceRemoved
nextEntries
positionKey
sectionIdentifier
hostedSectionIdentifier
setHostedSectionIdentifier:
previousEntry
setPreviousEntry:
setBranchDepth:
itemIdentifier
isRemoved
tailEntryWithSectionHeadEntry:
_sectionHeadEntry
sectionHeadEntry
setSectionHeadEntry:
lastItemEntry
_shuffledHead
_identifiersItemEntryMap
_tailEntry
_lastItemEntry
_dataSource
identifiersItemEntryMap
tailEntry
setTailEntry:
setLastItemEntry:
dataSource
setDataSource:
isShuffledHead
setShuffledHead:
headEntryWithSectionIdentifier:
_hasClones
_dataSourceCloned
_dataSourceMoved
_userRemoved
_userMoved
_userCloned
_itemIdentifier
_rootEntry
_clonedEntries
setDataSourceCloned
setDataSourceMoved
setUserRemoved
setUserMoved
setUserCloned
latestUserClone
latestDataSourceClone
newClonedEntry
_generationNumber
rootEntry
setRootEntry:
hasClones
clonedEntries
setClonedEntries:
isDataSourceCloned
isDataSourceMoved
isUserRemoved
isUserMoved
isUserCloned
itemEntryWithSectionIdentifier:itemIdentifier:generationPrefix:
itemEntryWithSectionIdentifier:itemIdentifier:
_moviePlayer
initWithNibName:bundle:
moviePlayer
presentMoviePlayerViewControllerAnimated:
dismissMoviePlayerViewControllerAnimated
_contextID
_commandID
_command
_timestamp
initWithCommand:mediaRemoteType:options:
contextID
commandID
interfaceID
sourceID
playbackQueueOffset
command
eventWithCommand:mediaRemoteType:options:
_preservesQueueEndAction
_queueEndAction
queueEndAction
preservesQueueEndAction
_revision
revision
_playbackSessionData
playbackSessionData
_insertBeforeContextItemID
_insertAfterContextItemID
_destinationOffset
insertBeforeContextItemID
insertAfterContextItemID
destinationOffset
_preservesRepeatMode
preservesRepeatMode
_preservesShuffleMode
preservesShuffleMode
_supportedInsertionPositions
_insertionPosition
_playbackQueue
_privateListeningOverride
_insertAfterContentItemID
initWithCommand:playbackQueue:options:
supportedInsertionPositions
setSupportedInsertionPositions:
insertionPosition
playbackQueue
privateListeningOverride
insertAfterContentItemID
initWithCommand:playbackQueue:
_requestingPlaybackInitialization
_stationURL
stationURL
isRequestingPlaybackInitialization
_positionTime
positionTime
_languageOption
_setting
languageOption
setting
_requestingDefermentToPlaybackQueuePosition
isRequestingDefermentToPlaybackQueuePosition
_negative
isNegative
_rating
rating
_playbackRate
playbackRate
_interval
interval
_entityTranslationContext
_allowedItemPersistentIDs
_allowedItemPersistentIDToItemQueryResultsIndexMap
_indexPathToContainerUniqueIDMap
_itemIdentifierQueryResults
_itemQueryResults
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
initWithRequest:itemQueryResults:itemIdentifierQueryResults:
_usesSections
_populateIndexMap
_adjustedGlobalIndexForIndexPath:
_allowedEntityIdentifiersContainsAllPersistentIDs
_buildIndexPathToContainerUniqueIDMapFromItemQueryResults:
indexPathToContainerUniqueIDMap
setIndexPathToContainerUniqueIDMap:
itemIdentifierQueryResults
itemQueryResults
indexPathForRow:inSection:
_loadAdditionalContentURL
_previousRetrievedNestedResponse
_domain
_additionalContent
_subscriptionStatus
_previousResponse
configureWithParentSection:
flattenRadioList
setFlattenRadioList:
loadAdditionalContentURL
setLoadAdditionalContentURL:
previousRetrievedNestedResponse
setPreviousRetrievedNestedResponse:
domain
setDomain:
additionalContent
setAdditionalContent:
subscriptionStatus
setSubscriptionStatus:
previousResponse
setPreviousResponse:
previouslyRetrievedNestedResponse
_center
initWithRouteUID:atCenter:
presentWithCompletion:
editorialArtworkCatalog
editorialArtworkCatalogBlock
kindWithAlbumKind:
__hasBiography_KEY
__editorialArtworkCatalogBlock_KEY
__songCount_KEY
__albumCount_KEY
_albumKind
albumKind
_cachedRoutes
_cachedPickedRoutes
_externalScreenType
_hasExternalScreenType
_scheduledSendDelegateRoutesChanged
_volumeControlStateForPickedRoute
_routingControllerSelectionQueue
_deviceAvailabilityNotifyToken
_deviceAvailabilityOverrideState
_fetchAvailableRoutesSynchronously
_representsLongFormVideoContent
_category
_routeTypes
_legacyCachedRoute
_playbackDataSource
_presentedBundleID
_representedBundleID
initWithDataSource:name:
cachedRoutes
setCachedRoutes:
cachedPickedRoutes
availableRoutes
externalScreenType
hasPendingPickedRoutes
pickedRoute
pendingPickedRoute
pendingPickedRoutes
routeIsLeaderOfEndpoint:
routeIsPendingPick:
setCategory:
setRouteTypes:
volumeControlIsAvailable
setPresentedBundleID:
setRepresentedBundleID:
airtunesRouteIsPicked
updateAvailableRoutes
updatePickedRoutes
fetchAvailableRoutesWithCompletionQueue:completionHandler:
fetchAvailableRoutesWithCompletionHandler:
getActiveRouteWithTimeout:completion:
handsetRouteIsPicked
pickBestDeviceRoute
pickHandsetRoute
pickSpeakerRoute
selectRoute:operation:completion:
selectRoutes:operation:completion:
speakerRouteIsPicked
receiverRouteIsPicked
routeOtherThanHandsetAndSpeakerAvailable
routeOtherThanHandsetAvailable
unpickAirPlayScreenRouteWithCompletion:
videoRouteForRoute:
wirelessDisplayRouteIsPicked
wirelessDisplayRoutesAvailable
clearCachedRoutes
unpickTVRoutes
_syncUpdateRoutes
_clearLegacyCachedRoute
_externalScreenType:
_onQueueSetExternalScreenType:
_pickedRouteInArray:
_pickedRoutesInArray:
_promptForHijackIfNeeded:handler:
_scheduleSendDelegateRoutesChanged
_sendDelegateFailedToPickRouteWithError:
_sendDelegatePickedRoutesChanged
_setExternalScreenType:
_setVolumeControlStateForPickedRoute:
_unregisterNotifications
_updateCachedRoutes
_activeAudioRouteDidChangeNotification:
_externalScreenTypeDidChangeNotification:
_mediaServerDiedNotification:
_pickableRoutesDidChangeNotification:
_routeStatusDidChangeNotification:
_volumeControlAvailabilityDidChangeNotification:
_registerNotifications
pickRoute:
pickRoute:withPassword:
pickRoute:withPassword:completion:
_pickRoute:completion:
supportsMultipleSelection
addPickedRoute:
addPickedRoute:completion:
removePickedRoute:
removePickedRoute:completion:
setName:
fetchAvailableRoutesSynchronously
setFetchAvailableRoutesSynchronously:
category
routeTypes
legacyCachedRoute
setLegacyCachedRoute:
playbackDataSource
setPlaybackDataSource:
presentedBundleID
representedBundleID
representsLongFormVideoContent
removePendingRoutes:
addPendingRoutes:
_sharedSerialQueue
cancelInProgressSelectionForRoute:
pickedRouteDidChange
isEqualToSet:
getOutputDeviceIsPlaying:completion:
setAttribute:forKey:error:
applicationProxyForIdentifier:
setOutputDevices:
sharedAudioPresentationOutputContext
enqueueSelectionOperation:forRoutes:completion:
_getActiveRouteWithTimeout:discoveredRoutes:completion:
bundleIdRepresentsLongFormVideoContent:
hasPendingRoutes
initWithRoutingController:
_selectionsEnqueued
_selectionInProgress
_pendingRoutes
_selectionInProgressTimer
_pendingSelectionTimers
_hasPendingPickedRoutes
removeAllPendingRoutes
removePendingRoutes:withError:
_enqueue:
_dequeueSelectionWhenPossible
_dequeue
_processSelection:completion:
selectionOperation
routes
setCompletion:
completion
setSelectionOperation:
initWithRoutes:selectionOperation:
_routes
_selectionOperation
_completion
setRoutes:
weakToStrongObjectsMapTable
_iconImageForIdentifier:
_iconNameForRoute:
_currentDeviceRoutingIconImage
_iconImageNameForClusterRoute:
_iconImageNameForDeviceSubtypes:route:
getActiveRouteWithCompletion:
setActiveRoute:completion:
setActiveRoute:reason:completion:
systemRoute
systemRouteWithContextUID:
_currentDeviceRoutingIconImageName
addObserverForName:object:queue:usingBlock:
hasRouteSharingPolicyLongFormVideo:
_imageThatSuppressesAccessibilityHairlineThickening
_systemImageNamed:
cacheKeyForCatalog:size:
requestForCatalog:size:
sortedSupportedSizesForCatalog:
supportedSizesForCatalog:
_artworkTypeForCatalog:
requestWithURL:cachePolicy:timeoutInterval:
_payload
_initWithPayload:
setExpirationDate:
payload
setPayload:
isEqualToIdentity:inStore:
dateByAddingTimeInterval:
_annotatedPayload
initWithAnnotatedPayload:
annotatedPayload
performWithDatabaseOperations:augmentingPayload:error:
_relationshipKeyForObject:
initWithPayload:
_childKeyForParentType:type:
_unsupportedMediaKitTypes
_unsupportedParentChildRelationships
allKeys
_unsupportedStorePlatformKinds
performWithDatabaseOperations:error:
_requestPayload
_hashedPersonID
initWithPayload:requestPayload:hashedPersonID:
initWithBase64EncodedString:options:
_invalidationObservers
_invalidationHandler
_modelRequest
initWithMiddleware:modelRequest:
modelRequest
setModelRequest:
setModelResponse:
_modelResponse
operationsForRequest:
setInvalidationObservers:
modelResponse
stringByReplacingCharactersInRange:withString:
isRTCReportingSupported
RTCReportingFrameworkPath
pathWithComponents:
startConfigurationWithCompletionHandler:
initWithSessionInfo:userInfo:frameworksToCheck:
__MediaLibrary_coreLibrary
_MediaLibrary_coreLibrary
set_MediaLibrary_coreLibrary:
lastPathComponent
stringByDeletingLastPathComponent
fileSystemRepresentation
sharedResourceManager
resources
sectionsInfo
sortingDetails
_hasValidUniformContentItemType
_contentItemTypeOccurrences
_totalNumberOfOccurrences
_uniformContentItemType
addContentItemType:
uniformContentItemType
contentItemCollectionInfo
_playerCurrentItem
_supportsAccountRectification
_actionAfterQueueLoad
_queueDescriptor
_siriAssetInfo
_sessionIdentifier
shouldBecomeActive
descriptionComponents
containsRestorableContent
isSupported
clearStartItem
actionAfterQueueLoad
setActionAfterQueueLoad:
setRepeatType:
setQueueEndAction:
queueDescriptor
setQueueDescriptor:
setSiriAssetInfo:
sessionIdentifier
setSessionIdentifier:
supportsAccountRectification
setSupportsAccountRectification:
sortedArrayUsingSelector:
caseInsensitiveCompare:
queueFeederClass
supportsAutoPlay
_enabledGestureTypes
_simultaneousGestureTypes
_swipeDelegate
_tapGestureRecognizer
_swipeGestureRecognizer
_activityGestureRecognizer
_pinchGestureRecognizer
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
hitTest:withEvent:
addGestureRecognizer:
removeGestureRecognizer:
_swipeGestureRecognized:
_tapGestureRecognized:
_activityGestureRecognized:
_pinchGestureRecognized:
setEnabledGestureTypes:
_updateGestureRecognizersForEnabledTypes
swipeDelegate
setSwipeDelegate:
enabledGestureTypes
simultaneousGestureTypes
setSimultaneousGestureTypes:
initWithTarget:action:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
_touchesTerminated:withEvent:
_reportOngoingActivity
_stopReportingOngoingActivity
phase
allTouches
setDelaysTouchesEnded:
setCancelsTouchesInView:
requireGestureRecognizerToFail:
_startLocation
_trackingTouch
_swipeDirection
reset
swipeDirection
locationInView:
_lastTapCount
_tapLocation
_tapHandleTimer
_setTapTimerWithDuration:
_resetTapTimer
_delayedHandleTaps:
tapCount
setTapCount:
isUserInteractionEnabled
addTimer:forMode:
timerWithTimeInterval:target:selector:userInfo:repeats:
velocity
_pendingUpdateRecordByPlaylistGlobalID
_pendingUpdateRecordByStoreAdamID
_initWithUserIdentity:
setTasteType:forModel:withCompletionHandler:
setTasteType:forMediaEntity:withCompletionHandler:
setTasteType:forPlaylistGlobalID:withCompletionHandler:
setTasteType:forStoreAdamID:withContentType:completionHandler:
tasteTypeForModel:
tasteTypeForMediaEntity:
tasteTypeForPlaylistGlobalID:
tasteTypeForStoreAdamID:
_libraryPathDidChangeForTasteController:
_deviceMediaLibraryDidChangeNotification:
_libraryEntityForModel:
_libraryPlaylistWithGlobalID:
_libraryEntityWithStoreID:contentType:
_ML3QueryWithEntityClass:predicate:options:
_addPendingUpdateRecord:withKey:inDictionary:
_addPendingUpdateRecordForPlaylistGlobalID:contentTasteType:
_addPendingUpdateRecordForStoreAdamID:contentTasteType:
_removePendingUpdateRecordForPlaylistGlobalID:token:
_removePendingUpdateRecordForStoreAdamID:token:
_pendingUpdateRecordForKey:inDictionary:
_pendingUpdateRecordForStoreAdamID:
_pendingUpdateRecordForPlaylistGlobalID:
_postNotificationName:controller:
queryWithLibrary:predicate:orderingTerms:usingSections:options:
enumeratePersistentIDsAndProperties:ordered:usingBlock:
anyEntityPersistentID
predicateWithProperty:equalToValue:
controllerWithUserIdentity:
_postNotificationName:controller:userInfo:
globalSerialQueue
controllers
_tasteControllerWithUserIdentity:isSingleton:createIfRequired:
_lastExpiredMetadataPurgeMachTime
_itemCaches
_transactionLock
_transactionCount
_cacheSize
beginTransaction
endTransaction
setCacheSize:
addStoreItemMetadata:
requestStoreItemMetadataForReason:withItemIdentifiers:responseHandler:
getStoreItemMetadataForRequest:responseHandler:
_removeExpiredItemsPeriodically
cacheSize
addChild:withPendingUnitCount:
setBatchResultsHandler:
metadataDictionary
setCancellable:
setCompletedUnitCount:
progressWithTotalUnitCount:
importToServerObjectDatabase
sharedStoreItemMetadataRequestController
optimalBatchSize
setImportToServerObjectDatabase:
_holding
_hitTestDebugView
_hitTestDebugEnabled
_holdDelayInterval
_alignmentRectInsets
alignmentRectInsets
isHolding
setAlignmentRectInsets:
setHitTestDebugEnabled:
_delayedTriggerHold
_handleTouchCancel
_handleTouchDown
_handleTouchUp
holdDelayInterval
setHoldDelayInterval:
hitTestDebugEnabled
setBorderWidth:
setBorderColor:
redColor
easyTouchDefaultHitRectInsets
easyTouchDefaultCharge
_representativeArtists
_seedTracksQuery
initWithPersistentID:
initWithPersistentID:mediaLibrary:
initWithMultiverseIdentifier:library:
valueForProperty:
addItemWithProductID:completionHandler:
addMediaItems:completionHandler:
existsInLibrary
playlistAttributes
seedItems
authorDisplayName
removeFirstItem
items
count
mediaTypes
representativeItem
multiverseIdentifier
representativeArtists
seedTracksQuery
isCloudMix
cloudGlobalID
setUserSelectedArtworkImage:
notifyDisplayValuesPropertyDidChange
componentsSeparatedByString:
_isValidPlaylistProperty:
storeId
hasStoreId
cloudUniversalLibraryId
hasCloudUniversalLibraryId
sagaId
hasSagaId
libraryName
libraryId
libraryIdentifiersCount
libraryIdentifiers
mediaObjectType
canFilterByProperty:
_createFilterableDictionary
_defaultAuthorDisplayName
_authorDisplayName
setAuthorDisplayName:
infoDictionary
localizedInfoDictionary
mainBundle
__descriptionText_KEY
__musicShow_KEY
__episodeNumber_KEY
__explicitRating_KEY
__season_KEY
__show_KEY
__releaseDate_KEY
__episodeType_KEY
__episodeTypeDisplayName_KEY
string
isAppleTV
isAudioAccessory
isMultiUserDevice
_shouldLibraryAdd
_globalPlaylistID
globalPlaylistID
setGlobalPlaylistID:
shouldLibraryAdd
setShouldLibraryAdd:
_preferredArtworkSize
initWithPreferredArtworkSize:
preferredArtworkSize
setPreferredArtworkSize:
decodeCGSizeForKey:
encodeCGSize:forKey:
_displayProperties
_bundleIdentifier
_supportedOptions
_copyOptions
_queueControlOptions
_storage
_playbackSessionIdentifier
_playbackSessionType
initWithType:sessionIdentifier:data:dataType:bundleIdentifier:supportedOptions:displayProperties:
setBOOLValue:forOption:
boolValueForOption:
copyWithOptions:
displayProperties
bundleIdentifier
supportedOptions
copyOptions
setCopyOptions:
queueControlOptions
setQueueControlOptions:
storage
setStorage:
playbackSessionIdentifier
playbackSessionType
_criteria
_isFilteringDisabled
_staticEntities
_staticEntityType
initWithProtobufferDecodableObject:library:
initWithProtobufferDecodableObject:
protobufferEncodableObjectFromLibrary:
protobufferEncodableObject
initWithFilterPredicates:
initWithFilterPredicates:library:
initWithCriteria:library:
initWithEntities:entityType:
copyByRemovingStaticEntities
copyBySanitizingStaticEntities
filterPredicates
setFilterPredicates:
addFilterPredicate:
removeFilterPredicate:
collections
groupingType
setGroupingType:
entityLimit
setEntityLimit:
shouldIncludeNonLibraryEntities
setShouldIncludeNonLibraryEntities:
includeEntitiesWithBlankNames
setIncludeEntitiesWithBlankNames:
ignoreSystemFilterPredicates
setIgnoreSystemFilterPredicates:
ignoreRestrictionsPredicates
setIgnoreRestrictionsPredicates:
itemPropertiesToFetch
setItemPropertiesToFetch:
collectionPropertiesToFetch
setCollectionPropertiesToFetch:
_hasItems
_hasCollections
_hasStaticEntities
_countOfItems
_countOfCollections
itemPersistentIdentifiers
collectionPersistentIdentifiers
itemSectionInfo
collectionSectionInfo
_setOrderingProperties:
_orderingProperties
_setOrderingDirectionMappings:
_orderingDirectionMappings
_getRepresentativeCollectionGrouping:propertyPredicate:
_representativeCollection
_representativeCollectionGroupingType
setSortItems:
sortItems
setUseSections:
useSections
excludesEntitiesWithBlankNames
specifiesPlaylistItems
groupingThreshold
willGroupEntities
itemSections
collectionSections
_valueForAggregateFunction:onProperty:entityType:
valueForAggregateFunction:onItemsForProperty:
valueForAggregateFunction:onCollectionsForProperty:
_enumerateItemsUsingBlock:
_enumerateUnorderedItemsUsingBlock:
_enumerateItemPersistentIDsUsingBlock:
_enumerateUnorderedItemPersistentIDsUsingBlock:
_enumerateItemsInOrder:usingBlock:
_enumerateItemPersistentIDsInOrder:usingBlock:
_enumerateCollectionsUsingBlock:
_enumerateUnorderedCollectionsUsingBlock:
_enumerateCollectionPersistentIDsUsingBlock:
_enumerateUnorderedCollectionPersistentIDsUsingBlock:
_enumerateCollectionPersistentIDsInOrder:usingBlock:
_enumerateCollectionsInOrder:usingBlock:
setStaticEntities:entityType:
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
criteria
setCriteria:
predicateMatchingPredicates:
predicateWithValue:forProperty:
_property
_value
_comparisonType
descriptionOfValue:forProperty:
property
setProperty:
setValue:
comparisonType
setComparisonType:
hasSuffix:
encodeValueOfObjCType:at:
encodeObject:
decodeValueOfObjCType:at:
decodeObject
evaluateEntity:
predicateWithValue:forProperty:comparisonType:
isFilteringDisabled
initWithInteger:
setFilteringDisabled:
hasLibraryName
stringByAppendingFormat:
albumsQuery
artistsQuery
songsQuery
playlistsQuery
podcastsQuery
ITunesUQuery
ITunesUAudioQuery
videoITunesUQuery
audiobooksQuery
audibleAudiobooksQuery
compilationsQuery
composersQuery
genresQuery
initFilteringDisabled
albumArtistsQuery
videosQuery
musicVideosQuery
tvShowsQuery
homeVideosQuery
moviesQuery
movieRentalsQuery
audioPodcastsQuery
videoPodcastsQuery
geniusMixesQuery
playlistsRecentlyAddedQuery
_conditionPredicate
_thenPredicate
_elsePredicate
initWithConditionPredicate:thenPredicate:elsePredicate:
conditionPredicate
thenPredicate
elsePredicate
predicateWithConditionPredicate:thenPredicate:elsePredicate:
initWithPredicates:
setByAddingObject:
_values
values
predicateWithProperty:values:
_persistentIDs
_shouldContain
_count
persistentIDs
shouldContain
initWithLongLong:
predicateWithPersistentIDs:count:shouldContain:
_searchString
_properties
searchString
setSearchString:
properties
setProperties:
initWithArray:
predicateWithSearchString:forProperties:
MPIsEmpty
removeItemAtIndex:
moveItemFromIndex:toIndex:
_requestedPlaylistProperties
setHandle:
setTiledArtworkRequest:
setShareShortURL:
setShareURL:
setUserEditableComponents:
setSubscribed:
setOwner:
setLastModifiedDateComponents:
setCloudVersionHash:
_lock
_isPreparedToPlay
_serverNowPlaying
_serverTimeSnapshot
_serverQueueDescriptor
_lastServerTimeSnapshot
_lastServerNowPlaying
_targetQueueDescriptor
_notificationsCounter
setServerQueueDescriptor:
setServerNowPlaying:
setServerTimeSnapshot:
serverPlaybackModeDidChangeAffectingQueue:
serverItemDidEnd
serverQueueDidEnd
initWithClientIdentifier:
initWithClientIdentifier:queue:
shuffleMode
setShuffleMode:
nowPlayingItem
setNowPlayingItem:
indexOfNowPlayingItem
setQueueWithQuery:
setQueueWithItemCollection:
setQueueWithStoreIDs:
setQueueWithDescriptor:
prependQueueDescriptor:
appendQueueDescriptor:
prepareToPlayWithCompletionHandler:
skipToNextItem
skipToBeginning
skipToPreviousItem
beginGeneratingPlaybackNotifications
endGeneratingPlaybackNotifications
setQueueWithQuery:firstItem:
setQueueWithRadioStation:
queueAsQuery
queueAsRadioStation
nowPlayingAtIndex:
nowPlayingItemAtIndex:
shuffle
pauseWithFadeoutDuration:
skipToBeginningOrPreviousItem
prepareQueueForPlayback
numberOfItems
userQueueModificationsDisabled
setUserQueueModificationsDisabled:
setVolumePrivate:
playbackSpeed
setPlaybackSpeed:
isNowPlayingItemFromGeniusMix
currentChapterIndex
setCurrentChapterIndex:
isGeniusAvailable
isGeniusAvailableForSeedItems:
setQueueWithSeedItems:
setQueueWithGeniusMixPlaylist:
adjustLoadedQueueRangeToReverseCount:forwardCount:
_clearConnection
_establishConnectionIfNeeded
onServer:
onServerAsync:
_nowPlaying
_snapshot
_mediaItemFromNowPlaying:
connection
serverNowPlaying
serverTimeSnapshot
serverQueueDescriptor
lastServerTimeSnapshot
lastServerNowPlaying
targetQueueDescriptor
notificationsCounter
initWithItemIdentifier:item:
forwardInvocation:
methodSignatureForSelector:
invokeWithTarget:
initWithTimeout:interruptionHandler:
synchronousRemoteObjectProxyWithErrorHandler:
systemMusicPlayer
applicationQueuePlayer
applicationMusicPlayer
alloc
iPodMusicPlayer
setRunLoopForNotifications:
genericModelObjectWithRequestedProperties:
_kind
_image
_video
_representationToken
_representationSize
debugQuickLookObject
kind
setKind:
video
setVideo:
representationSize
setRepresentationSize:
representationToken
setRepresentationToken:
representationWithSize:image:
representationWithSize:video:
_imageRepresentation
_videoRepresentation
_bestRepresentationKinds
isBestRepresentationForKind:
resetForRepresentationKinds:
imageRepresentation
setImageRepresentation:
videoRepresentation
setVideoRepresentation:
bestRepresentationKinds
setBestRepresentationKinds:
collectionWithImageRepresentation:videoRepresentation:
collectionWithImageRepresentation:videoRepresentation:bestRepresentationKinds:
_fittingSize
_modelRevisionID
_allowsVideoConstrainedNetworkAccess
_loadingRepresentation
_destinationScale
_preferredVideoFormat
_cacheIdentifier
_requestingContext
_destination
_configurationBlock
_representationKinds
_bestAvailableRepresentationCollection
_token
_renderHint
initWithToken:dataSource:
setDestinationScale:
scaledFittingSize
setFittingSize:
requestImageWithCompletionHandler:
bestImageFromDisk
hasImageOnDisk
setDestination:
setDestination:configurationBlock:
requestVideoWithCompletionHandler:
setAllowsVideoConstrainedNetworkAccess:
setPreferredVideoKind:
setDestination:forRepresentationKinds:configurationBlock:
isArtworkVisuallyIdenticalToCatalog:
visualIdenticalityIdentifier
existingColorAnalysisWithAlgorithm:
requestColorAnalysisWithAlgorithm:completionHandler:
requestRadiosityImageWithCompletionHandler:
requestExportableArtworkPropertiesWithCompletion:
setCacheIdentifier:forRequestingContext:
cache
videoCache
_loadBestRepresentationIfNeededOfKind:
_loadRepresentationOfKind:completionHandler:
_existingRepresentationOfKind:
_updateRepresentations
_updateRepresentationOfKind:
_updateWithRepresentation:isBestRepresentation:modelRevisionID:
_requestBestRepresentationOfKind:completionHandler:
setDestination:progressiveConfigurationBlock:
destinationScale
fittingSize
allowsVideoConstrainedNetworkAccess
preferredVideoFormat
setPreferredVideoFormat:
cacheIdentifier
setCacheIdentifier:
requestingContext
setRequestingContext:
destination
configurationBlock
setConfigurationBlock:
representationKinds
setRepresentationKinds:
bestAvailableRepresentationCollection
setBestAvailableRepresentationCollection:
isLoadingRepresentation
setLoadingRepresentation:
token
renderHint
setRenderHint:
_artworkLoadQueue
_artworkCacheForIdentifier:requestingContext:representationKind:
radiosityImageWithImage:displayScale:completionHandler:
staticArtworkCatalogWithImage:
staticArtworkCatalogWithRepresentationCollection:
setCacheLimit:forCacheIdentifier:requestingContext:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:
setCacheLimit:forCacheIdentifier:requestingContext:representationKind:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:representationKind:
setEvictsObjectsWhenApplicationEntersBackground:
setVideoArtworkIdentifier:
setImageArtworkIdentifier:
_imageArtworkIdentifier
_videoArtworkIdentifier
imageArtworkIdentifier
videoArtworkIdentifier
CGSizeValue
sortedArrayUsingComparator:
clearArtworkCatalogs
artworkCatalogBackingFileURL
_conditionalPredicate
hasConditionalPredicate
hasThenPredicate
hasElsePredicate
conditionalPredicate
setConditionalPredicate:
setThenPredicate:
setElsePredicate:
_isExecuting
_isFinished
_error
isAsynchronous
isConcurrent
isExecuting
isFinished
start
finish
finishWithError:
valuesForProperties:
didSkipWithPlayedToTime:
incrementPlayCount
markNominalAmountHasBeenPlayed
noteWasPlayedToTime:skipped:
incrementSkipCount
incrementPlayCountForPlayingToEnd
incrementPlayCountForStopTime:
updateDateAccessedToCurrentDateWithWriteCompletionBlock:
nominalHasBeenPlayedThreshold
didReceiveMemoryWarning
_bestStoreURL
populateLocationPropertiesWithPath:
populateLocationPropertiesWithPath:assetProtectionType:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
clearLocationProperties
chapters
effectiveAlbumArtist
artwork
beatsPerMinute
dateAdded
comments
isRental
isITunesU
isCloudItem
hasProtectedAsset
playbackDuration
effectiveStopTime
podcastTitle
podcastPersistentID
year
predicateForProperty:
playCount
setPlayCount:
playCountSinceSync
setPlayCountSinceSync:
lastPlayedDate
setLastPlayedDate:
dateAccessed
setDateAccessed:
skipCount
setSkipCount:
skipCountSinceSync
setSkipCountSinceSync:
lastSkippedDate
setLastSkippedDate:
hasBeenPlayed
setHasBeenPlayed:
playbackStoreID
rememberBookmarkTime
isExplicitItem
userGrouping
chaptersOfType:
chapterOfType:atIndex:
chapterOfType:atTime:
countOfChaptersOfType:
gaplessHeuristicInfo:durationInSamples:lastPacketsResync:encodingDelay:encodingDrain:
isUsableAsRepresentativeItem
dateDownloaded
_directStoreURL
_libraryLinkArtist
_libraryLinkKind
_libraryLinkPlaylistName
_libraryLinkURL
URLQueryAllowedCharacterSet
enumerateValuesForProperties:usingBlock:
_isValidItemProperty:
itemFromModelObject:
itemFromSong:
persistentIDPropertyForGroupingType:
ULIDPropertyForGroupingType:
titlePropertyForGroupingType:
fallbackTitlePropertyForGroupingType:
dynamicProperties
_persistentID
setValue:forKey:
decodeInt64ForKey:
defaultPropertyValues
_bounds
_requestHandler
initWithImage:
initWithBoundsSize:requestHandler:
imageWithSize:
bounds
imageCropRect
jpegDataWithSize:
pngDataWithSize:
pngDataFromImage:
_identifyingModelObject
_redownloadableItemCount
identifyingModelObject
setIdentifyingModelObject:
redownloadableItemCount
setRedownloadableItemCount:
longValue
_libraryDataProvider
_entityCacheQueue
_fixedQueue
_notificationObservers
_itemsForCriteriaCache
_hasItemsForCriteriaCache
_countOfItemsForCriteriaCache
_itemResultSetsForCriteriaCache
_collectionsForCriteriaCache
_hasCollectionsForCriteriaCache
_countOfCollectionsForCriteriaCache
_collectionsResultSetsForCriteriaCache
_hasItemsDidLoadForCriteria
_hasCollectionsDidLoadForCriteria
_countOfCollectionsDidLoadForCriteria
_countOfItemsDidLoadForCriteria
_additionalLibraryFilterPredicates
_additionalLibraryFilterPredicatesAccessQueue
_connectionAssertions
_connectionAssertionsQueue
_disconnectAfterReleasingAssertions
_connectionProgress
_removalReason
_determinedHasMedia
_hasMedia
_determinedHasSongs
_hasSongs
_determinedHasGeniusMixes
_hasGeniusMixes
_determinedHasPlaylists
_hasPlaylists
_determinedHasComposers
_hasComposers
_determinedHasPodcasts
_hasPodcasts
_determinedHasUbiquitousBookmarkableItems
_hasUbiquitousBookmarkableContent
_determinedHasAudiobooks
_hasAudiobooks
_cloudFilteringType
_filteringDisabled
_hasVideos
_determinedHasVideos
_hasMusicVideos
_determinedHasMusicVideos
_hasAudibleAudioBooks
_determinedHasAudibleAudioBooks
_hasMovies
_determinedHasMovies
_hasCompilations
_determinedHasCompilations
_hasITunesU
_determinedHasITunesU
_hasVideoITunesU
_determinedHasVideoITunesU
_hasMovieRentals
_determinedHasMovieRentals
_hasTVShows
_determinedHasTVShows
_hasHomeVideos
_determinedHasHomeVideos
_hasVideoPodcasts
_determinedHasVideoPodcasts
_originalCellNetworkFlags
_originalWiFiNetworkFlags
__MLCoreStorageLock
__MLCoreStorage
_libraryChangeObservers
_activeUserChangeMonitor
__MLCoreStorageLockPointer
activeUserChangeDidFinish
_clearCachedEntitiesIncludingResultSets:
_clearCachedContentDataAndResultSets:
_scheduleLibraryChangeNotificationPostingBlock:
_reloadLibraryForRestrictionsChange
_reloadLibraryForContentsChangeWithNotificationInfo:
_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:
_reloadLibraryForInvisiblePropertyChangeWithNotificationInfo:
_reloadLibraryForPathChange
_activeUserDidChangeNotification:
_canShowCloudTracksDidChangeNotification:
_didReceiveMemoryWarning:
_displayValuesDidChangeNotification:
beginGeneratingLibraryChangeNotifications
endGeneratingLibraryChangeNotifications
connectWithCompletionHandler:
disconnect
currentEntityRevision
syncGenerationID
playlistGeneration
isDeviceLibrary
isHomeSharingLibrary
writable
additionalLibraryFilterPredicates
addLibraryFilterPredicate:
removeLibraryFilterPredicate:
removalReason
setRemovalReason:
databasePath
hasMediaOfType:
hasMedia
hasGeniusMixes
hasPlaylists
hasArtists
hasAlbums
hasSongs
hasPodcasts
hasUbiquitousBookmarkableItems
hasGenres
hasComposers
hasAudiobooks
_checkHasContent:determined:queryHasEntitiesBlock:
_checkHasContent:determined:mediaType:queryHasEntitiesBlock:
hasVideos
hasMusicVideos
hasAudibleAudioBooks
hasMovies
hasCompilations
hasITunesUContent
hasAudioITunesUContent
hasVideoITunesUContent
hasMovieRentals
hasTVShows
hasHomeVideos
hasVideoPodcasts
hasUserPlaylists
hasAddedToLibraryAppleMusicContent
hasUserPlaylistsContainingAppleMusicContent
itemExistsWithPersistentID:
itemExistsInDatabaseWithPersistentID:
playlistExistsWithPersistentID:
collectionExistsWithPersistentID:groupingType:
collectionWithPersistentID:groupingType:
collectionWithPersistentID:groupingType:verifyExistence:
itemWithPersistentID:
itemWithPersistentID:verifyExistence:
itemWithStoreID:
decodeItemWithCoder:
newPlaylistWithPersistentID:
localizedSectionHeaderForSectionIndex:
localizedSectionIndexTitles
playbackHistoryPlaylist
playlistWithPersistentID:
addPlaylistWithName:
addPlaylistWithName:activeGeniusPlaylist:
setSyncPlaylistId:
syncPlaylistId
homeSharingDatabaseID
URLForHomeSharingRequest:
deleteItems:
removeItems:
removePlaylist:
downloadAsset:completionHandler:
populateLocationPropertiesOfItem:withPath:assetProtectionType:
populateLocationPropertiesOfItem:withPath:assetProtectionType:completionBlock:
clearLocationPropertiesOfItem:
setValues:forProperties:forItemPersistentIDs:
geniusItemsForSeedItem:completion:
isGeniusEnabled
preferredAudioLanguages
preferredSubtitleLanguages
requiresAuthentication
connectWithAuthenticationData:completionBlock:
connectionAssertionWithIdentifier:
performTransactionWithBlock:
performReadTransactionWithBlock:
isCurrentThreadInTransaction
connectionProgress
syncValidity
entityCache
valueForDatabaseProperty:
setValue:forDatabaseProperty:
deleteDatabaseProperty:
multiverseIdentifierForTrackWithPersistentID:
multiverseIdentifierForCollectionWithPersistentID:groupingType:
entityWithMultiverseIdentifier:
entityWithLibraryURL:
entityWithSpotlightIdentifier:
entityWithPersistentID:entityType:
isValidAssetURL:
pathForAssetURL:
_persistentIDForAssetURL:
_handlesSameAccountAs:
_performBlockOnLibraryHandlingTheSameAccount:
collectionExistsContainedWithinPersistentIDs:count:groupingType:existentPID:
collectionExistsWithName:groupingType:existentPID:
collectionExistsWithStoreID:groupingType:existentPID:
collectionExistsWithSagaID:groupingType:existentPID:
collectionExistsWithCloudUniversalLibraryID:groupingType:existentPID:
collectionExistsContainedWithinSyncIDs:groupingType:existentPID:
_itemsForQueryCriteria:
_getCachedValueForQueryCritiera:valueCriteriaCache:entitiesForCriteriaCache:didLoadBlocksByQueryCriteria:valueLoadedFromEntitiesArrayBlock:loadValueFromDataProviderBlock:
_hasItemsForQueryCriteria:
_hasCollectionsForQueryCriteria:
_countOfItemsForQueryCriteria:
_countOfCollectionsForQueryCriteria:
_itemPersistentIdentifiersForQueryCriteria:
_collectionPersistentIdentifiersForQueryCriteria:
_clearPendingDisconnection
setCloudFilteringType:
cloudFilteringType
_setLibraryFilterPredicates
_collectionsForQueryCriteria:
_removeConnectionAssertion:
_disconnect
_setupNotifications
_tearDownNotifications
ml3Library
libraryChangeObservers
_initWithLibraryDataProvider:
libraryDataProvider
artworkDataSource
completeMyCollectionArtworkDataSource
addStoreItem:andAddTracksToCloudLibrary:withCompletion:
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
addStoreItemIDs:referralObject:andAddTracksToCloudLibrary:withCompletion:
performStoreItemLibraryImport:withCompletion:
getPlaylistWithUUID:creationMetadata:completionHandler:
addPlaylistStoreItemsWithMetadata:completion:
addTracksToMyLibrary:
importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:
importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:
addGlobalPlaylistWithID:andAddToCloudLibrary:completion:
addNonLibraryOwnedPlaylistWithGlobalID:completion:
addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:
recordPlayEventForAlbumPersistentID:
recordPlayEventForPlaylistPersistentID:
_MLCoreStorage
_setMLCoreStorage:
_MLCoreStorageLock
activeUserChangeMonitor
setActiveUserChangeMonitor:
_MLCoreStorageLockPointer
deviceMediaLibrary
initWithMetadataDictionary:
requestCapabilitiesWithCompletionHandler:
authorizationStatus
compact
_endDiscoveringMediaLibrariesIfAllowed
removePointerAtIndex:
pointerAtIndex:
updateToLibraryCurrentRevision
_mediaLibraries
enumeratePersistentIDsUsingBlock:
_deviceMediaLibraryWithUserIdentity:createIfRequired:
currentDeviceInfo
scanLongLong:
scannerWithString:
host
entityFromURL:inLibrary:
addPointer:
weakObjectsPointerArray
_initWithMediaLibrary:identifier:
initWithUnsignedLongLong:
_postNotificationName:library:
_postNotificationName:library:userInfo:
specificAccountWithDSID:
mediaLibraryWithUniqueIdentifier:
defaultMediaLibrary
requestAuthorization:
callStackSymbols
musicLibraryForUserAccount:
setDefaultMediaLibrary:
deviceMediaLibraryWithUserIdentity:
beginDiscoveringMediaLibraries
endDiscoveringMediaLibraries
validatePermissionsExpiryWithCompletion:
isLibraryServerDisabled
setLibraryServerDisabled:
mediaLibraries
sharedMediaLibraries
_libraryForDataProvider:
_libraryDataProviders
libraryDataProviders
addLibraryDataProvider:
removeLibraryDataProvider:removalReason:
reloadLibraryDataProvider:
postEntitiesAddedOrRemovedNotificationForLibraryDataProvider:
reloadDynamicPropertiesForLibraryDataProvider:
reloadInvisiblePropertiesForLibraryDataProvider:
reloadDisplayValuesForLibraryDataProvider:
syncGenerationDidChangeForLibraryDataProvider:
uniqueIdentifierDidChangeForLibraryDataProvider:
libraryPathDidChangeForDataProvider:
removeObjectIdenticalTo:
validateExpirationForBundleIdentifier:withReplyBlock:
interfaceWithProtocol:
_entity
_anchor
_deletionType
initWithEntity:anchor:deletionType:
entity
anchor
deletionType
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:usingBlock:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:usingBlock:
_syncValidity
enumerateEntityChangesAfterSyncAnchor:usingBlock:
_sectionKind
_sectionSortDescriptors
_itemSortDescriptors
sectionClass
setSectionClass:
itemClass
setItemClass:
_kindForClass:
sectionKind
setSectionKind:
setSectionProperties:
sectionSortDescriptors
setSectionSortDescriptors:
setItemProperties:
itemSortDescriptors
setItemSortDescriptors:
preferredQueue
sharedQueue
sharedNetworkQueue
requiresNetwork
_remoteViewContainerViewController
_musicRemoteViewController
_mediaPickerController
_remoteViewController
requestRemoteViewController
synchronizeSettings
mediaPickerController
setMediaPickerController:
remoteViewController
serviceController
serviceViewControllerProxy
isViewLoaded
willMoveToParentViewController:
instantiateWithExtension:completion:
_endDelayingPresentation
extensionWithIdentifier:error:
_beginDelayingPresentation:cancellationHandler:
_allowsPickingMultipleItems
_showsCloudItems
_showsItemsWithProtectedAssets
_picksSingleCollectionEntity
_pickingForExternalPlayer
_watchCompatibilityVersion
_mediaTypes
_prompt
_typeIdentifiers
_selectionMode
_playbackArchiveConfiguration
_supportedContentOptions
showsCatalogContent
setShowsCatalogContent:
showsLibraryContent
setShowsLibraryContent:
supportsUnavailableContent
setSupportsUnavailableContent:
setMediaTypes:
allowsPickingMultipleItems
setAllowsPickingMultipleItems:
showsCloudItems
setShowsCloudItems:
showsItemsWithProtectedAssets
setShowsItemsWithProtectedAssets:
prompt
setPrompt:
picksSingleCollectionEntity
setPicksSingleCollectionEntity:
watchCompatibilityVersion
setWatchCompatibilityVersion:
typeIdentifiers
setTypeIdentifiers:
selectionMode
setSelectionMode:
pickingForExternalPlayer
setPickingForExternalPlayer:
playbackArchiveConfiguration
setPlaybackArchiveConfiguration:
supportedContentOptions
setSupportedContentOptions:
decodeInt32ForKey:
encodeInt32:forKey:
_loader
remoteMediaPickerDidCancel
remoteMediaPickerDidPickMediaItems:
remoteMediaPickerDidPickPlaybackArchive:
_sharedInit
initWithMediaTypes:
initWithSupportedTypeIdentifiers:selectionMode:
_canShowWhileLocked
modalPresentationStyle
supportedInterfaceOrientations
preferredInterfaceOrientationForPresentation
_preferredModalPresentationStyle
_forceDismissal
_pickerDidCancel
_pickerDidPickItems:
_pickerDidPickPlaybackArchive:
_hasAddedRemoteView
_addRemoteView
_resetRemoteViewController
_synchronizeSettings
_checkLibraryAuthorization
_mediaPickerController_supportedInterfaceOrientations
_mediaPickerController_preferredInterfaceOrientationForPresentation
_keynote_supportedInterfaceOrientations
_keynote_preferredInterfaceOrientationForPresentation
loader
setLoader:
mediaPicker:didPickPlaybackArchive:
mediaPicker:didPickMediaItems:
mediaPickerDidCancel:
setRightBarButtonItem:
setLeftBarButtonItem:
initWithTitle:style:target:action:
navigationItem
initWithRootViewController:
preheatMediaPicker
load
_backgroundTaskIdentifier
_backgroundTasks
_holdingPlaybackTransactionForFirstItem
_isPendingPlayerItemSync
_isSyncingPlayerItems
_itemsPendingAssetLoading
_lastItemAnchor
_lastPreferredQueueDepth
_needsCurrentItemUpdateAfterPlayerItemSync
_preventLoadingItems
_reusableItems
_shouldExpectEmptyQueue
_shouldDeferItemLoading
_currentItem
_items
_equilibriumAchievedHandler
reloadItemsKeepingCurrentItem:
shouldExpectEmptyQueue
setShouldExpectEmptyQueue:
shouldDeferItemLoading
setShouldDeferItemLoading:
initWithPlayer:dataSource:
_currentItemHasFinishedDownloadingDidChangeNotification:
_beginBackgroundTaskAssertion
_endBackgroundTaskAssertion
_dequeueFailedItem:
_hasAchievedEquilibrium
_loadAssetForItem:
_preferredQueueDepthWithFirstItem:
_reloadItemsKeepingCurrentItem:
_syncItemsWithPreviousItems:
_syncPlayerItems
_playerItems
_removeItemFromPlayer:
_sendItemsDidChange
_updateCurrentItem
_updateQueueDepthIfNeeded
equilibriumAchievedHandler
setEquilibriumAchievedHandler:
MP_shortDescription
removeObjectsInRange:
queueCoordinatorDidChangeItems:
queueCoordinator:willInsertItem:afterItem:
setMP_associatedQueuePlayer:
setAudioTimePitchAlgorithm:
audioTimePitchAlgorithm
MP_associatedQueuePlayer
queueCoordinator:itemToFollowItem:
queueCoordinator:didLoadItem:
queueCoordinator:willLoadItem:
queueCoordinator:failedToLoadItem:
initWithData:encoding:
_controlTitleLabel
_controlImageView
_controlStatusTypeToTitle
_controlStatusRevision
_downloadProgressView
_hadFirstTouchHighlight
_controlImageEdgeInsets
_transientContentView
_transientContentViewTransactionCount
_traitCollectionDidChangeWasCalled
_allowsAddImage
_scaleImageForAccessibility
_displayStyle
_filledTintColor
_controlStatus
maximumSizeWithPreferredHeight:
_removeAllAnimations:
setContentHorizontalAlignment:
setAllowsAddImage:
setDisplayStyle:
setControlStatus:
setControlStatus:animated:
setFilledTintColor:
setTitle:forControlStatusType:
titleForControlStatusType:
_beginTransientContentViewTransaction
_endTransientContentViewTransaction
_currentContentSuperview
_updateControlTitleLabelVisualProperties
_updateBackgroundViewCornerRadius
_updateControlStatusProperties
_updateControlImageViewAnimation
allowsAddImage
controlStatus
displayStyle
scaleImageForAccessibility
setScaleImageForAccessibility:
filledTintColor
removeAnimationForKey:
addAnimation:forKey:
setBeginTime:
setBeginTimeMode:
setFillMode:
setRepeatCount:
setRemovedOnCompletion:
setToValue:
setFromValue:
presentationLayer
animationWithKeyPath:
controlTitleFontForControlStatusType:
_newControlTitleLabel
setAdjustsImageSizeForAccessibilityContentSizeCategory:
systemLightGrayColor
systemFillColor
_imageNamed:compatibleWithTraitCollection:
preferredContentSizeCategory
setCornerRadius:
contentHorizontalAlignment
_expectedSizeForControlStatusType:controlTitle:hasControlImage:displayScale:preferredHeight:
_scaledValueForValue:
preferredFontForTextStyle:
_isInAWindow
imageNamed:inBundle:compatibleWithTraitCollection:
smallSystemFontSize
_requestedClipProperties
mediaClipWithStoreItemMetadata:storeItemMovieClip:
setStaticAssets:
setFlavorType:
setPreviewArtworkCatalogBlock:
_activeDownloads
_pausedDownloads
_downloadPausedReason
_statusBlock
_currentStatus
downloadManager:didEnqueueAssetDownloads:didRemoveAssetDownloads:
downloadManager:didUpdateDownloadProgress:
downloadManager:didFinishAsset:withError:
downloadManager:didCancelAssets:
downloadManager:didChangeDownloadPausedReasonForAssets:
setConfiguration:
_transientStateDidChangeNotification:
_handleDownloadStateChanged:
_calculateCurrentStatus
_updateActiveDownloadsAllowingDownloadRemoval:
_updateCurrentStatus
currentStatus
downloadPausedReason
statusBlock
setStatusBlock:
isCollectionType
_collectionType
_hasNonPurgeableAsset
_storeRedownloadable
_managedStatus
setCollectionType:
managedStatus
setManagedStatus:
hasNonPurgeableAsset
setHasNonPurgeableAsset:
setStoreRedownloadable:
pendingItemIdentifiers
_pendingItemIdentifiers
_downloadEnabledItemCount
_nonPurgeableItemCount
setPendingItemIdentifiers:
downloadEnabledItemCount
setDownloadEnabledItemCount:
nonPurgeableItemCount
setNonPurgeableItemCount:
_containedMediaTypes
_initializedContainedMediaTypes
_itemsCount
_itemsQuery
_representativeItem
initWithItems:
initWithItemsQuery:
itemsQuery
setValue:forProperty:
setValue:forProperty:withCompletionBlock:
collectionWithItems:
sortTitlePropertyForGroupingType:
representativePersistentIDPropertyForGroupingType:
_object
_handler
initWithName:object:handler:
_handleNotification:
object
handler
_deviceLibraryID
_storeItemID
_downloadReason
_downloadProgress
_libraryID
_storeSagaID
initWithMPStoreDownload:
deviceLibraryID
downloadReason
setDownloadReason:
downloadProgress
setDownloadProgress:
setDownloadPausedReason:
libraryID
setLibraryID:
setStoreSagaID:
_downloadReasonFromStoreDownload:
MPMediaDownloadsFromMPStoreDownloads:
MPMediaDownloadsFromATAssets:
MPMediaDownloadPauseReasonForATAsset:
_requestedArtistProperties
setHasSocialPosts:
setHasBiography:
_strongSelf
_errorResolver
_resolutionHandler
errorResolver:didResolveError:withResolution:
initWithErrorResolver:
resolveError:
errorResolver
resolutionHandler
setResolutionHandler:
_currentTimeInverseLabel
_currentTimeLabel
_scrubController
_allowsScrubbing
_autoscrubActive
_autoscrubTimer
_canCommit
_currentTime
_downloadingTrackOverlay
_glowDetailScrubImageView
_isTracking
_maxTrackWidth
_previousLocationInView
_trackInset
_formatter
_detailScrubbingVerticalRange
_availableDuration
_timeLabelStyle
_minTimeLabelWidth
detailScrubControllerDidBeginScrubbing:
detailScrubControllerDidEndScrubbing:
detailScrubController:didChangeValue:
detailScrubController:didChangeScrubSpeed:
thumbHitRect
initWithFrame:style:maxTrackWidth:
viewForFirstBaselineLayout
viewForLastBaselineLayout
currentThumbImage
setValue:duration:
_setValueWhileTracking:duration:
_thumbHitEdgeInsets
_autoscrubTick:
isTracking
detailScrubbingAvailableForCurrentDuration
cancelTracking
localizedScrubSpeedText
setAvailableDuration:
setMinTimeLabelWidth:
setTimeLabelStyle:
timeLabelFontForStyle:
timeLabelTextColorForStyle:
_modernThumbImageWithColor:height:includeShadow:
_colorSliceImageWithColor:height:
_setupControlsForStyle
_updateTrackInset
_updateTimeDisplayForTime:
_updateTimeDisplayForTime:force:
_stringForTime:elapsed:
_stringForCurrentTime:
_stringForInverseCurrentTime:
_resetScrubInfo
_commitValue
_updateForAvailableDuraton
detailScrubbingVerticalRange
setDetailScrubbingVerticalRange:
availableDuration
timeLabelStyle
minTimeLabelWidth
stringFromSeconds:
_legacy_sizeWithFont:
userInterfaceStyle
setFill
alphaComponent
fill
bezierPathWithRoundedRect:cornerRadius:
fontDescriptorByAddingAttributes:
fontDescriptor
isContinuous
setAutoreverses:
statusBarOrientation
animationKeys
labelClass
setSemanticContentAttribute:
setDeliversTouchesForGesturesToSuperview:
_serviceConnection
performQueueTransaction:completionHandler:
prerollWithCompletion:
beginPlaybackAtHostTime:
onApplicationServerAsync:
serviceConnection
getServerEndpointWithReply:
proxyWithObject:protocol:
setClasses:forSelector:argumentIndex:ofReply:
remoteObjectInterface
performQueueModifications:completion:
getNowPlayingWithReply:
getNowPlayingAtIndex:reply:
setNowPlayingItem:itemIdentifier:completion:
getImageForArtworkIdentifier:itemIdentifier:atSize:reply:
getTimeSnapshotWithReply:
getDescriptorWithReply:
setDescriptor:completion:
prependDescriptor:completion:
appendDescriptor:completion:
pauseWithFadeDuration:
skipWithBehavior:
reshuffle
beginSeekWithDirection:
getRepeatModeWithReply:
getShuffleModeWithReply:
setElapsedTime:completion:
setPlaybackRate:completion:
initWithListenerEndpoint:
setWantsReverseProcessAssertion:
remoteObjectProxy
initWithServiceName:
initWithController:
fault
objectAtIndex:
modifications
_insertedDescriptors
_removedItems
insertQueueDescriptor:afterItem:
removeItem:
insertedDescriptors
setInsertedDescriptors:
removedItems
setRemovedItems:
_mutatedContentItems
_contentItemIdentifiersSentToMediaRemote
_artworkUpdateQueue
_coalescingUpdates
_scheduledSupportedAPIsChange
_currentSessionStatus
_context
_nowPlayingIdentifiers
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
beginUpdates
endUpdates
setNowPlayingIdentifiers:
_contentItemChangedNotification:
_enqueueArtworkUpdate:withCompletion:
_enqueueArtworkUpdate:size:withCompletion:
_setupMediaRemoteEndpoint
_tearDownMediaRemoteEndpoint
_pushContentItemsUpdate
_handlePlaybackInitializationCompletedWithContext:error:
_contentItemWasSentToMediaRemote:
_onQueueContentItemWasSentToMediaRemote:
_markContentItemsAsSentToMediaRemote:
_limitedUIChanged:
_browsableContentEndpointChanged:
_musicListsLimited
_areContentLimitsEnforced
_updateSupportedAPIs
_scheduleUpdateSupportedAPIs
context
setContext:
nowPlayingIdentifiers
childItemsDisplayPlaybackProgressAtIndexPath:
contentItemAtIndexPath:
beginLoadingChildItemsAtIndexPath:completionHandler:
playableContentManager:didUpdateContext:
playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:
limitUserInterfaces
currentSession
limitableUserInterfaces
setServiced:
indexAtPosition:
indexPath
serviced
waitUntilAllOperationsAreFinished
unlock
lock
contentItemForIdentifier:completionHandler:
initWithIndexPath:
_serviced
_indexPath
initWithIndexes:length:
numberOfChildItemsAtIndexPath:
sharedContentManager
_deviceIsCarplayCapable
_lyricsURLForURLBagDictionary:
_enqueueOperationWithURL:bagDictionary:allowingAuthentication:
enqueueDataRequest:withCompletionHandler:
setTTML:
ic_stringValueForKey:
ic_intValueForKey:
statusCode
parsedBody
urlResponse
defaultSession
initWithURLRequest:requestContext:
setAuthenticationProvider:
initWithUserInteractionLevel:
initWithName:value:
initWithURL:resolvingAgainstBaseURL:
layerWithKey:ofType:
layerWithFirstObjectOfType:
setType:
setKey:
_key
wirelessRouteIsPicked
_cachedNumberOfItemsInSections
_cachedNumberOfSections
_hasValidCachedNumberOfSections
_itemsCache
_itemIdentifierSetMap
_sectionsCache
_sectionIdentifierSetMap
_mapLock
initWithDataSource:
_cachedObjectAtIndexPath:
_updateCacheWithObject:atIndexPath:
__flavorType_KEY
__mediaType_KEY
__url_KEY
_oldItems
_updatedItems
_isEqualBlock
_isUpdatedBlock
setVersion:
oldItems
setOldItems:
updatedItems
setUpdatedItems:
isEqualBlock
setIsEqualBlock:
isUpdatedBlock
setIsUpdatedBlock:
_crashLogDateFormatter
URLByAppendingPathComponent:isDirectory:
writeToURL:options:error:
componentsWithString:
openURL:options:completionHandler:
timeZoneWithAbbreviation:
_generatePropertyListFromUpdateDisplayedRoutesState:exception:
_writeToDiskWithUpdateDisplayedRoutesStatePropertyList:error:
_alertControllerForUpdateDisplayedRoutesCrashWithLogFileURL:exception:
fileURLWithPathComponents:
_tableView
_pendingUpdate
_optimisticUpdate
_isAnimatingUpdate
_displayedEndpointRoute
_routingViewItems
_cachedDisplayableAvailableRoutes
_cachedPendingPickedRoutes
_cachedDisplayAsPickedRoutes
_cachedVolumeCapableRoutes
_cachedRouteGrouping
_expandedGroupUIDs
_updateTimer
_routeDiscoveryMode
_tableCellsBackgroundColor
_tableCellsContentColor
_airPlayPasswordAlertDidAppearToken
_airPlayPasswordAlertDidCancelToken
_airPlayPasswordAlertDidAppearTokenIsValid
_needsDisplayedRoutesUpdate
_suspendedDiscoveryModeDueToApplicationState
_shouldAutomaticallyUpdateRoutesList
_shouldPickRouteOnSelection
_onScreen
_hasUserSelections
_carPlayStatus
_updatesSincePresentation
_discoveryModeBeforeEnteringBackground
_avItemType
_discoveryModeOverride
_themeDelegate
_endpointRoute
_continuousCornerRadius
_outputDeviceVolumeSliders
_groupSliderCoordinator
routingCell:mirroringSwitchValueDidChange:
routingCellDidTapToExpand:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
_initWithStyle:routingController:
initWithStyle:
initWithStyle:routingController:
setAVItemType:
allowMirroring
setAllowMirroring:
setDiscoveryModeOverride:
setGroupSliderCoordinator:
isInCarPlay
hasCarKitRoute
isInVehicle
resetDisplayedRoutes
resetScrollPosition
_setContinuousCornerRadius:
registerTableViewCells
viewDidDisappear:
viewDidMoveToWindow:shouldAppearOrDisappear:
viewWillLayoutSubviews
shouldOverrideContentSizeCategory:
enqueueRefreshUpdate
setEndpointRoute:
_expandedCellHeight
_normalCellHeight
_setShouldAutomaticallyUpdateRoutesList:
_setShouldPickRouteOnSelection:
_setTableCellsBackgroundColor:
_setTableCellsContentColor:
_wouldShareAudioForPickedRoute:operation:pickedRoutes:
_diplayShareAudioDisabledAlertForReason:
_tableViewHeightAccordingToDataSource
_operationRequiresOptimisticState:routes:
_configureCell:forIndexPath:
_registerCarPlayObserver
_beginRouteDiscovery
_endRouteDiscovery
_setupUpdateTimerIfNecessary
_setRouteDiscoveryMode:
_setNeedsRouteDiscoveryModeUpdate
_setNeedsDisplayedRoutesUpdate
_displayableRoutesInRoutes:
_displayAsPickedRoutesInRoutes:
_volumeCapableRoutesInRoutes:
_createUpdateWithCompletion:
_updateDisplayedRoutes
setOptimisticUpdate:
_enqueueUpdate:
_createRefreshUpdate
_createReloadUpdate
endpointGroupUID
updateExpandedGroups
_applyUpdate:
_tableViewHeaderViewHeight
_tableViewFooterViewHeight
_shouldDisplayRouteAsPicked:
_createVolumeSlider
_endUpdates
groupUIDForRoute:
_createRoutingViewItemsForRoutes:
_collapseAllGroups
_createSectionedCollection:withPickedRoutes:
shouldGroupRoutingViewItems
avItemType
discoveryModeOverride
themeDelegate
setThemeDelegate:
endpointRoute
outputDeviceVolumeSliders
setOutputDeviceVolumeSliders:
groupSliderCoordinator
speakersAndTVs
headphones
localDevices
setSpeakersAndTVs:
setLocalDevices:
setHeadphones:
setRouteGrouping:
_routeGrouping
_localDevices
_headphones
_speakersAndTVs
routeGrouping
outputDeviceUIDs
raise
performBatchUpdates:completion:
reloadRowsAtIndexPaths:withRowAnimation:
moveRowAtIndexPath:toIndexPath:
insertRowsAtIndexPaths:withRowAnimation:
deleteRowsAtIndexPaths:withRowAnimation:
insertSections:withRowAnimation:
deleteSections:withRowAnimation:
shouldReload
volumeCapableRoutes
displayAsPickedRoutes
displayableAvailableRoutes
intersectSet:
groupID
designatedGroupLeader
setShouldReload:
setVolumeCapableRoutes:
setDisplayAsPickedRoutes:
setPendingPickedRoutes:
setPickedRoutes:
setDisplayableAvailableRoutes:
_canGroup
_shouldReload
_pickedRoutes
_pendingPickedRoutes
_displayableAvailableRoutes
_displayAsPickedRoutes
_volumeCapableRoutes
canGroup
setCanGroup:
setHasPendingPickedRoutes:
compare:options:
setSessionObserver:
setSeparatorInset:
showViewController:sender:
indexPathForCell:
deselectRowAtIndexPath:animated:
routingViewController:willDisplayCell:
dequeueReusableCellWithIdentifier:forIndexPath:
dequeueReusableHeaderFooterViewWithIdentifier:
_setLocalOverrideTraitCollection:
traitCollectionWithPreferredContentSizeCategory:
registerClass:forCellReuseIdentifier:
registerClass:forHeaderFooterViewReuseIdentifier:
setIndicatorStyle:
setMasksToBounds:
setTableFooterView:
setContentOffset:
_playbackPositionBuilder
_requestedSongProperties
setHasTimeSyncedLyrics:
setClassicalMovementNumber:
setClassicalMovementCount:
setClassicalMovement:
setClassicalWork:
setGrouping:
setVolumeAdjustment:
setCloudStatus:
setGaplessInfo:
setHasCloudSyncSource:
_connections
_hasRefreshedStations
_listener
_availabilityController
_recentStationsController
listener:shouldAcceptNewConnection:
serviceRadioControllerGetRadioAvailabilityWithCompletionHandler:
serviceRadioControllerGetRecentStationGroupsWithCompletionHandler:
_radioAvailabilityControllerRadioAvailableDidChangeNotification:
_recentStationsControllerDidChangeStationsNotification:
_playActivityReportingControllerDidFlushEventsNotification:
_addConnection:
_removeConnection:
_handleRecentStationsControllerDidChange
availabilityController
recentStationsController
initWithMachServiceName:
valueForEntitlement:
stationGroups
refreshWithCompletionHandler:
getRadioAvailabilityWithCompletionHandler:
_propertyValues
_fallbackArtworkCatalogBlock
initWithModelObject:
fallbackArtworkCatalogBlock
setFallbackArtworkCatalogBlock:
mediaItemPropertyValues
releaseDateComponents
tvEpisode
dateFromComponents:
isExplicitSong
filePath
number
flavor
previewDuration
previewURL
size
_itemIdentifierToCompositeStoreItemMetadataLRUDictionary
_itemIdentifierToCompositeStoreItemMetadataMapTable
initWithCacheSize:
addMetadata:forItemIdentifier:
metadataForItemIdentifier:
metadataForItemIdentifier:ignoreExpiration:
removeExpiredMetadata
initWithKeyOptions:valueOptions:capacity:
cacheableItemIdentifier
initWithMaximumCapacity:
hasMetadataForRequestReason:
_mediaRemoteLyricsItemToken
initWithIdentifier:userInfo:
initWithMediaRemoteLyricsItemToken:
mediaRemoteLyricsItemToken
_mediaRemoteLyricsItem
initWithLyrics:userProvided:
initWithLyrics:userProvided:token:
initWithMediaRemoteLyricsItem:
userProvided
mediaRemoteLyricsItem
_mediaRemoteLyricsEvent
initWithMediaRemoteLyricsEvent:
startDate
endDate
mediaRemoteLyricsEvent
mediaPlayerBundle
_uniqueID
_productName
_deviceName
_modelIdentifier
initWithDictionary:
uniqueID
productName
deviceName
modelIdentifier
otherConnectedDevicesFromRouteDescription:
_usesFallbackCache
_URLSessionConfiguration
_videoArtworkCacheURL
_imageAccessQueue
_videoAccessQueue
_callbackQueue
_fallbackImageArtworkRepresentationCache
_pendingRequestURLToCompletionHandlers
_catalogImageTaskMap
_resourceLoadingRequestVideoTaskMap
_imageURLSession
_videoURLSession
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
updateURLSessionWithCachePolicy:cachePath:
fallbackImageArtworkRepresentationCache
setVideoArtworkCacheURL:
shouldLookForLargerImageRepresentationsWhenBestRepresentationIsUnavailable
wantsBackgroundImageDecompression
requestForCatalog:kind:size:
bestAvailableSizeForCatalog:
cacheKeyForCatalog:kind:size:
_artworkRepresentationWithImageFromData:forURLResponse:size:immediateImageDecompressionAllowed:
_existingRepresentationFromURLCacheForArtworkCatalog:immediateImageDecompressionAllowed:
_isRepresentationSize:validForCatalog:
_existingRepresentativeObjectForArtworkCatalog:kind:handler:
_requestForCatalog:kind:size:
_performAsyncBarrierBlockOnQueue:block:
_performSyncBlockOnQueue:block:
_bestVideoArtworkRepresentationForCatalog:
_cacheKeyForCatalog:kind:size:
_bestAvailableSizeForCatalog:kind:
_subclassImplementsSelector:
URLSessionConfiguration
usesFallbackCache
setUsesFallbackCache:
videoArtworkCacheURL
imageAccessQueue
setImageAccessQueue:
videoAccessQueue
setVideoAccessQueue:
callbackQueue
setCallbackQueue:
setFallbackImageArtworkRepresentationCache:
pendingRequestURLToCompletionHandlers
setPendingRequestURLToCompletionHandlers:
catalogImageTaskMap
setCatalogImageTaskMap:
resourceLoadingRequestVideoTaskMap
setResourceLoadingRequestVideoTaskMap:
imageURLSession
setImageURLSession:
videoURLSession
setVideoURLSession:
resourceLoader
setValue:forHTTPHeaderField:
userAgent
valueWithCGSize:
URLCache
MIMEType
msv_dataTaskWithRequest:completionHandler:
finishLoading
respondWithData:
dataWithBytes:length:
requestedLength
requestedOffset
requestsAllDataToEndOfResource
dataRequest
finishLoadingWithError:
setRepresentationSize:forRequest:
removeItemAtURL:error:
getResourceValue:forKey:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
writeToURL:atomically:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLForDirectory:inDomain:appropriateForURL:create:error:
dataWithContentsOfURL:
sessionWithConfiguration:
finishTasksAndInvalidate
_applyVideoCacheURL:toConfiguration:
_applyImageURLCachePolicy:cacheDiskPath:toConfiguration:
setHTTPShouldUsePipelining:
defaultSessionConfiguration
weakToWeakObjectsMapTable
setURLCache:
initWithMemoryCapacity:diskCapacity:directoryURL:
setDiskCapacity:
setMemoryCapacity:
initWithMemoryCapacity:diskCapacity:diskPath:
_requestSizeMap
storeCachedResponse:forRequest:
initWithResponse:data:userInfo:storagePolicy:
setRequestCachePolicy:
_startTimes
_endTimes
_setStartTime:forIdentifiers:
_setEndTime:forIdentifiers:
startTimes
endTimes
dictionary
second
first
pairWithFirst:second:
bundleVersion
shortVersionString
bundleProxyForCurrentProcess
_itemCollection
initWithQuery:
initWithItemCollection:
setStartTime:forItem:
setEndTime:forItem:
itemCollection
startItem
_storeIDs
_storeFronts
_startItemID
_assetStoreFronts
initWithStoreIDs:
setStartTime:forItemWithStoreID:
setEndTime:forItemWithStoreID:
setSourceStorefront:forItemWithStoreID:
storeIDs
assetStoreFronts
setStoreIDs:
startItemID
setStartItemID:
setAssetStoreFronts:
_libraryContent
_dictionary
_identifiers
_itemID
identifiers
isLibraryContent
itemID
_playParametersQueue
_startItemPlayParameters
initWithPlayParametersQueue:
setStartTime:forItemWithPlayParameters:
setEndTime:forItemWithPlayParameters:
playParametersQueue
setPlayParametersQueue:
startItemPlayParameters
setStartItemPlayParameters:
_radioStation
initWithRadioStation:
radioStation
_playbackArchive
initWithPlaybackArchive:
playbackArchive
setKeyPath:
sortDescriptorWithKeyPath:ascending:
initWithKey:ascending:
_relatedProperties
relatedProperties
setRelatedProperties:
sortDescriptorWithRelatedProperties:ascending:
_itemTranslationContext
_sectionTranslationContext
_allowedSectionPersistentIDs
_allowedSectionPersistentIDToSectionQueryResultsIndexMap
_itemEntityQueryResults
_sectionEntityQueryResult
initWithRequest:sectionQueryResults:itemQueryResults:
_adjustedIndexForSectionIndex:
itemEntityQueryResults
sectionEntityQueryResult
sendDidResolveError:withResolution:
previewArtworkCatalog
previewArtworkCatalogBlock
classesForSecureCoding
__previewArtworkCatalogBlock_KEY
__staticAssets_KEY
_enabled
_leader
_actionIdentifier
mainRoute
leader
enabled
actionIdentifier
itemWithRoute:
itemWithLeader:members:
itemWithActionTitle:subtitle:enabled:identifier:image:
initWithMRAVEndpoint:
unwrappedValue
initWithMRAVOutputContext:
initWithMRAVEndpointObserver:
_propertiesCache
_utilitySerialQueue
cachedPropertyValues
initWithPersistentID:library:
_initWithPersistentID:library:propertiesCache:
invalidateCachedProperties
classForCoder
_nonBatchableOrCachedValueForProperty:needsFetch:
cachedValueForProperty:isCached:
cachePropertyValues:forProperties:persistValueInBackgroundBlock:
cacheValue:forProperty:persistValueInBackgroundBlock:
valueForProperty:isCached:
initWithArtworkCatalog:
_catalog
initWithArtworkCatalog:allowsNetworking:
concreteMediaItemWithPersistentID:library:
dataProviderEntityClass
concreteMediaItemWithPersistentID:
createUncachedConcreteMediaItemWithPersistentID:library:
_grouping
_initWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:propertiesCache:
initWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:
initWithIdentifier:itemsQuery:grouping:
hasName
createUncachedMediaItemCollectionWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:
_clusterPlaylist
initWithProperties:itemsQuery:
_updateLibraryForPlaylistEdit:
replaceItems:completion:
replaceItemsWithPersistentIDs:completion:
appendItem:completion:
appendItems:completion:
removeItems:atFilteredIndexes:completionBlock:
removeAllItems
moveItemFromIndex:toIndex:completionBlock:
populateWithSeedItem:completionBlock:
populateWithSeedItem:queue:completionBlock:
beginGeneratingGeniusClusterItemsWithSeedItems:error:
geniusClusterItemsWithCount:error:
endGeneratingGeniusClusterItems
_allowsEditing
_resultSet
_entityClass
_sectionInfo
_entities
_entitiesQueue
_queryCriteria
initWithResultSet:queryCriteria:entityType:library:
isQueryResultSetInvalidated
resultSet
sectionInfo
setObject:atIndexedSubscript:
persistentIDAtIndex:
localRevision
_dataProviderEntityClass
_valuePersistenceBlocks
_propertiesQueue
_dataProvider
initWithLibraryDataProvider:dataProviderEntityClass:identifier:
_onBarrierCacheValues:persistValueInBackgroundBlock:
delete
dataProvider
_backgroundTaskQueue
_cloudUpdateQueue
_backgroundTask
_backgroundTaskCount
_hasScheduledEventPosting
_refreshState
_setValuesWidthLimitedQueue
_entitiesAddedOrRemovedNotificationQueue
_entitiesAddedOrRemovedCoalescingTimer
_entityCache
_artworkDataSource
onDiskProviders
setOnDiskProviders:
itemPersistentIDForStoreID:
setValue:forProperty:ofItemWithIdentifier:completionBlock:
setValue:forProperty:ofPlaylistWithIdentifier:completionBlock:
setValue:forProperty:ofCollectionWithIdentifier:groupingType:completionBlock:
addPlaylistWithValuesForProperties:
sdk_addPlaylistWithValuesForProperties:
deleteItemsWithIdentifiers:count:
removeItemsWithIdentifiers:count:
removePlaylistWithIdentifier:
setItemsWithIdentifiers:forPlaylistWithIdentifier:completionBlock:
addItemWithIdentifier:toPlaylistWithIdentifier:completionBlock:
addItemsWithIdentifiers:toPlaylistWithIdentifier:completionBlock:
sdk_addItemWithOpaqueIdentifier:toPlaylistWithIdentifier:completionBlock:
removeItemsAtIndexes:inPlaylistWithIdentifier:completionBlock:
removeAllItemsInPlaylistWithIdentifier:
removeFirstItemFromPlaylistWithIdentifier:
moveItemFromIndex:toIndex:inPlaylistWithIdentifier:completionBlock:
seedPlaylistWithIdentifier:withItemWithIdentifier:completionBlock:
createGeniusClusterPlaylistWithSeedItemIdentifiers:count:error:
generateItemIdentifiersForGeniusClusterPlaylist:count:error:
releaseGeniusClusterPlaylist:
populateLocationPropertiesOfItemWithIdentifier:withPath:assetProtectionType:
populateLocationPropertiesOfItemWithIdentifier:withPath:assetProtectionType:completionBlock:
clearLocationPropertiesOfItemWithIdentifier:
supportsEntityChangeTrackingForMediaEntityType:collectionGroupingType:dataProviderClass:
updateEntitesToCurrentRevision
sdk_addItemWithOpaqueID:withCompletion:
addPlaylistStoreItemsForLookupItems:withCompletion:
playbackHistoryPlaylistPersistentID
enumerateItemIdentifiersForQueryCriteria:ordered:cancelBlock:usingBlock:
enumerateCollectionIdentifiersForQueryCriteria:ordered:cancelBlock:usingBlock:
connectWithAuthenticationData:completionBlock:progressHandler:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:itemBlock:collectionBlock:
setLibraryEntityFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryContainerFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryPublicEntityFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryPublicContainerFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
propertiesToCache
loadValueForAggregateFunction:onItemsForProperty:queryCriteria:completionBlock:
loadValueForAggregateFunction:onCollectionsForProperty:queryCriteria:completionBlock:
loadProperties:ofItemWithIdentifier:completionBlock:
loadProperties:ofCollectionWithIdentifier:groupingType:completionBlock:
itemResultSetForQueryCriteria:
collectionResultSetForQueryCriteria:
loadQueryCriteria:hasItemsWithCompletionBlock:
loadQueryCriteria:hasCollectionsWithCompletionBlock:
loadQueryCriteria:countOfItemsWithCompletionBlock:
loadQueryCriteria:countOfCollectionsWithCompletionBlock:
initWithLibrary:
setLibrary:
_storePlatformRequestContext
_importStoreItemElements:withReferralObject:andAddTracksToCloudLibrary:usingCloudAdamID:withCompletion:
_addGlobalPlaylistsToLibraryDatabase:asLibraryOwned:completion:
systemFilterPredicatesWithGroupingType:cloudTrackFilteringType:subscriptionFilteringOptions:
ML3SystemFilterPredicatesWithGroupingType:cloudTrackFilteringType:subscriptionFilteringOptions:additionalFilterPredicates:
performBackgroundTaskWithBlock:
_adjustedPlaylistPropertySeedItemsOfEntity:withDefaultValue:
_adjustedPropertyMediaTypeOfEntity:withDefaultValue:
_adjustedItemTimeOfEntity:withDefaultValue:
_adjustedItemPropertyVolumeNormalizationOfEntity:withDefaultValue:
_adjustedItemPropertyVolumeAdjustmentOfEntity:withDefaultValue:
_adjustedItemPropertyRatingOfEntity:withDefaultValue:
_adjustedItemDateOfEntity:withDefaultValue:
_adjustedItemNonnullDateOfEntity:withDefaultValue:
_adjustedItemPropertyFilePathOfEntity:withDefaultValue:
_adjustedItemPropertyMovieInfoOfEntity:withDefaultValue:
_adjustedItemPropertyEpisodeNumberOfEntity:withDefaultValue:
_adjustedItemPropertyChapterArtworkTimesOfEntity:withDefaultValue:
_adjustedItemPropertySeasonNumberOfEntity:withDefaultValue:
_adjustedItemPropertySeasonNameOfEntity:withDefaultValue:
_adjustedItemPropertyChaptersOfEntity:withDefaultValue:
_adjustedItemPropertyContentRatingOfEntity:withDefaultValue:
_adjustedItemPropertyEQPresetOfEntity:withDefaultValue:
_adjustedItemPropertyAssetURLOfEntity:withDefaultValue:
_adjustedItemPropertyVerifiedIntegrityOfEntity:withDefaultValue:
adjustedValueForMPProperty:ofEntity:withDefaultValue:
_coalesceEvents
_postEvents
_dataProviderSupportsEntityChangeTracking
_libraryContentsDidChange:
_libraryPathDidChange:
_libraryEntitiesAddedOrRemoved:
_dynamicPropertiesDidChange:
_invisiblePropertiesDidChange:
_displayValuesDidChange:
_syncGenerationDidChange:
_libraryUIDDidChange:
_libraryCloudLibraryAvailabilityDidChange:
_loadProperties:ofEntityWithIdentifier:ML3EntityClass:completionBlock:
_loadValueForAggregateFunction:entityClass:property:query:completionBlock:
_removeEntitiesWithIdentifiers:count:entityClass:
deleteFromLibrary:deletionType:persistentIDs:count:
unlinkRedownloadableAssetsFromLibrary:persistentIDs:
valueForAggregateFunction:onEntitiesForProperty:
getValues:forProperties:count:
newWithPersistentID:inLibrary:
_sortByChapterIndex:
urlTitlePropertyOfChapterAtIndex:
urlPropertyOfChapterAtIndex:
titlePropertyOfChapterAtIndex:
durationInMSOfGroupAtIndex:groupingProperty:
timeLocationInMSOfChapterAtIndex:
chapterIndexForGroupIndex:groupingProperty:
countOfGroupsForProperty:
countOfChapters
chapterTOC
localizedStringWithFormat:
propertyListWithData:options:format:error:
hasPrefix:
contentsOfDirectoryAtPath:error:
substringToIndex:
rangeOfString:
stringByStandardizingPath
dateWithTimeIntervalSinceReferenceDate:
processName
processInfo
setLibraryPublicContainerFilterPredicates:
setLibraryPublicEntityFilterPredicates:
setLibraryContainerFilterPredicates:
setLibraryEntityFilterPredicates:
clearLocationFromLibrary:persistentIDs:disableKeepLocal:
populateLocationPropertiesWithPath:protectionType:completionBlock:
populateLocationPropertiesWithPath:protectionType:
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:
revisionTrackingCode
libraryUID
preferredSubtitleTracks
preferredAudioTracks
moveTrackFromIndex:toIndex:
setTracksWithPersistentIDs:notify:
countOfEntities
containerQueryWithContainer:
removeFirstTrack
removeAllTracks
removeTracksAtIndexes:notify:
appendTracksWithPersistentIDs:notify:
removeFromMyLibrary:deletionType:persistentIDs:count:
newWithDictionary:inLibrary:
currentDevicePlaybackHistoryPlaylist
performDatabaseTransactionWithBlock:
setValues:forProperties:usingConnection:
predicateWithProperty:equalToInteger:
containerQueryWithContainer:predicate:
predicateWithProperty:value:comparison:
setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:
queryWithLibrary:predicate:orderingTerms:usingSections:
trackForeignPersistentID
_unadjustedValueForMPProperty:withDefaultValue:
databaseConnectionAllowingWrites:withBlock:
enumeratePersistentIDsAndProperties:ordered:cancelBlock:usingBlock:
getObjects:range:
recordPlayEventForContainerPersistentID:
performImport:fromSource:withProgressBlock:completionHandler:
queryWithLibrary:predicate:options:
sharedMediaLibraryService
setPendingMatch:
setPlaylistsAreLibraryOwnedContent:
setTracksAreLibraryOwnedContent:
initWithLibraryPath:trackData:playlistData:
playlistsData
trackData
initWithLookupItems:
itemForIdentifier:
isWatch
initWithPersistentID:inLibrary:
hasEntities
queryWithLibrary:predicate:
trackWithPersistentID:visibleInLibrary:
int64ValueForFirstRowAndColumn
executeQuery:
fileModificationDate
attributesOfItemAtPath:error:
_databaseFilePaths
_unadjustedValueForItemPropertyVolumeNormalizationWithDefaultValue:
_unadjustedValueForItemPropertyVolumeAdjustmentWithDefaultValue:
_unadjustedValueForItemPropertyRatingWithDefaultValue:
_unadjustedValueForItemTimeWithDefaultValue:
_unadjustedValueForItemDateWithDefaultValue:
allLibraries
sectionIndexTitleIndexForSectionIndex:
enumerateSectionHeadersUsingBlock:
_invalidated
_pendingConnectionHandlers
_externalDevice
initWithExternalDevice:
isConnected
isConnecting
connectWithCompletion:
connectWithOptions:completion:
connectWithUserInfo:completion:
connectWithOptions:userInfo:completion:
isInvalidated
sendCustomData:
sendMediaRemoteCommand:withOptions:completionHandler:
_connectionStateDidChange:error:
_externalDeviceConnectionStateDidChangeNotification:
externalDevice
connectWithOptions:userInfo:
initWithString:
orderingTermWithProperty:
allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:
setLimit:
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
queryWithLibrary:predicate:orderingTerms:
aggregateQueryWithUnitQuery:foreignPersistentIDProperty:
ML3ItemsQueryInLibrary:
ML3CollectionsQueryInLibrary:
orderingTermWithProperty:direction:
albumsDefaultOrderingTerms
albumsByAlbumArtistDefaultOrderingTerms
artistsDefaultOrderingTerms
composersDefaultOrderingTerms
genresDefaultOrderingTerms
podcastsDefaultOrderingTerms
TVShowEpisodesDefaultOrderingTerms
podcastsEpisodesDefaultOrderingTerms
albumAllArtistsDefaultOrderingTerms
defaultOrderingTerms
ML3OrderingTermsForMPOrderingProperties:directionalityMapping:entityClass:
ML3ItemsQueryInLibrary:orderingTerms:nameBlankProperty:
predicateWithProperty:
ML3OrderingTermsForGroupingType:
containerQueryWithContainer:predicate:orderingTerms:
_staticResponse
staticResponse
setStaticResponse:
_albumAppData
albumAppData
setAlbumAppData:
_edgeInsets
_titleLabel
_detailLabel
_borderLayer
_mirroringTitleTextAttributes
_mirroringCompactDescription
_mirroringCompactDescriptionTextAttributes
tableCellGrayTextColor
defaultFontForTextStyle:
setAlignment:
boundingRectWithSize:options:attributes:context:
addLineToPoint:
moveToPoint:
addSublayer:
setFillColor:
setLineWidth:
setStrokeColor:
setNumberOfLines:
setAttributedText:
initWithString:attributes:
initWithResponseSinfDictionary:
initWithiTunesCloudStoreFileAssetFairPlayInfo:
responseSinfDictionary
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
predicateWithProperties:searchString:
predicateWithConcatenatedProperties:searchString:
_ML3PredicateForML3EntityProperty:
predicateWithPredicate:
predicateWithProperty:value:comparison:caseInsensitive:
ML3PredicateForTrack
ML3PredicateForContainer
_ML3PredicateForEntityClass:
_ML3PredicateForEntityTypeSelector:
_prefersHLS
_shouldStartLeaseSession
_shouldUseAccountLessStreaming
_playbackItemMetadata
_preferredAssetQuality
_assetSourceStoreFrontID
_equivalencySourceAdamID
_storeAdamID
_downloadSessionAlternativeConfigurationOptionsBlock
setPlaybackItemMetadata:
playbackItemMetadata
preferredAssetQuality
setPreferredAssetQuality:
prefersHLS
setPrefersHLS:
shouldStartLeaseSession
setShouldStartLeaseSession:
shouldUseAccountLessStreaming
setShouldUseAccountLessStreaming:
shouldUseStreamingRedownload
setShouldUseStreamingRedownload:
assetSourceStoreFrontID
setAssetSourceStoreFrontID:
equivalencySourceAdamID
setEquivalencySourceAdamID:
downloadSessionAlternativeConfigurationOptionsBlock
setDownloadSessionAlternativeConfigurationOptionsBlock:
_multiverseIdentifier
objectForKeyedSubscript:
_sectionIndexTitles
_hasUnknownSection
setSectionIndexTitles:
sections
hasUnknownSection
setHasUnknownSection:
addSectionWithHeaderTitle:sectionIndexTitleIndex:count:
_downloadHandler
_downloadToActiveSessions
_downloadToDownloadTokenPendingCompletionHandlers
_downloadToProcessingDownloadHandlerSessions
_downloadToObservationTransactionCount
_downloadToValidStatePendingCompletionHandlers
_prioritizedDownloads
downloadHandlerDidDisconnect:
downloadHandler:handleSession:
downloadHandler:cancelSession:
downloadHandler:pauseSession:
downloadHandler:handleAuthenticationSession:
downloadManager:didAddDownloads:removeDownloads:
downloadManager:didAddActiveDownloads:removeActiveDownloads:
downloadManager:downloadDidFinish:
downloadManager:downloadDidProgress:
downloadManager:downloadPurchaseDidFinish:
downloadManager:downloadsDidProgress:
downloadManagerNetworkUsageDidChange:
downloadHandlerIdentifier
acquirePlayWhileDownloadSessionForDownload:withCompletionHandler:
beginPrioritizingDownloadSession:
endPrioritizingDownloadSession:
releasePlayWhileDownloadSession:
_beginDownloadObservationForDownload:
_beginPrioritizingDownload:
_beginPrioritizingDownloadSession:
_endDownloadObservationForDownload:
_endPrioritizingDownload:
_endPrioritizingDownloadSession:
_getDownloadPropertiesForStoreDownload:withCompletionHandler:
_getDownloadTokenForStoreDownload:withCompletionHandler:
_handleDownloadPrioritization
_isStoreDownloadValidForPlayWhileDownload:
_postActiveSessionsDidFinishForStoreDownload:
_suspendUntilValidDownloadStateForStoreDownload:withCompletionHandler:
_updateActiveSessionsForDownload:
_updateForDownloadStateRefreshWithDownload:
_updateForDownloadTokenRefreshWithDownload:
releaseSessionControl
setDownloadHandler:completionBlock:
handlerIdentifier
fileURLWithPath:
setStatusDescription:
setCanBePaused:
downloadAsset
downloadPhase
keyEnumerator
setSessionsShouldBlockOtherDownloads:
setSessionsNeedPowerAssertion:
setDownloadPhasesToIgnore:
_debugVolumeWarning
_volumeInitialized
_volumeControlCapabilitiesInitialized
_avSystemController
_volumeControlAvailable
_volumeWarningEnabled
_volume
_EUVolumeLimit
_volumeAudioCategory
_volumeControlLabel
_volumeWarningState
reloadWarning
beginIncreasingRelativeVolume
endIncreasingRelativeVolume
beginDecreasingRelativeVolume
endDecreasingRelativeVolume
adjustVolumeValue:
initializeVolume
reload
getVolumeValueWithCompletion:
applicationShouldOverrideHardwareVolumeBehavior
isVolumeControlAvailable
isMuted
setMuted:
volumeWarningEnabled
volumeWarningState
EUVolumeLimit
setVolumeAudioCategory:
updateVolume:
updateVolumeControlCapabilities:
_mediaPlaybackVolumeAudioCategory
_reloadQueue
_EUVolumeLimitDidChange:
_EUVolumeLimitEnforcedDidChange:
_routeDidChangeNotification:
_updateRouteLabelForRoute:
_volumeControlCapabilitiesDidChangeNotification:
_systemVolumeDidChange:
_systemMuteDidChange:
_reloadEUVolumeLimits
_setup
_tearDown
_volumeApplyingEUVolumePolicyToVolume:
volumeControllerDataSource:didChangeVolumeWarning:
volumeControllerDataSource:didChangeEUVolumeLimit:
volumeControllerDataSource:didChangeEUVolumeLimitEnforced:
attributeForKey:
volumeControllerDataSource:didChangeMuted:
volumeControllerDataSource:didChangeVolume:
volumeControllerDataSource:didChangeVolumeLabel:
currentRouteHasVolumeControl
getVolume:forCategory:
volumeCategoryForAudioCategory:
volumeControllerDataSource:didChangeVolumeCapabilities:
volumeControllerDataSource:didChangeVolumeControlAvailability:
setVolumeTo:forCategory:
volumeControllerDataSource:didChangeVolumeAudioCategory:
_volumeChangeCoalescingCount
_volumeCapabilities
volumeValue
setVolumeValue:
updateVolumeValue
setVolume:withNoticationDelay:
updateVolumeWarningState
_updateVolumeControlAvailability
volumeCapabilities
descriptionForWarningState:
_pendingVolume
_hasPendingVolume
_hasVolumeInFlight
_volumeCapabilitiesInitialized
initWithGroupRoute:outputDeviceRoute:
_setPendingVolumeIfNeeded
_sendVolumeButtonEventWithUsagePage:usage:down:
_updateVolumeControlCapabilities:
_routeVolumeDidChangeNotification:
_routeVolumeControlCapabilitiesDidChangeNotification:
containsUID:
_chapterType
_indexInChaptersWithAnyType
_indexInChaptersWithSameType
_playbackDuration
_playbackTime
_valueLoader
_artworkRequest
indexInChaptersWithAnyType
setIndexInChaptersWithAnyType:
indexInChaptersWithSameType
setIndexInChaptersWithSameType:
chapterType
setChapterType:
setPlaybackDuration:
playbackTime
setPlaybackTime:
valueLoader
setValueLoader:
artworkRequest
setArtworkRequest:
setArtworkDataSource:
decodeObjectForKey:
decodeDoubleForKey:
encodeDouble:forKey:
_accessSerialQueue
_entityCaches
_unpersonalizedContentDescriptors
_itemIndexPathToOverridePropertySet
_translatingContext
_relativeModelClassToMappingResponse
_sectionToLibraryAddedOverride
_libraryObjectWithRelativeModelClass:identifierSet:propertySet:
_entityCacheForEntityClass:propertiesToFetch:
unpersonalizedContentDescriptors
setUnpersonalizedContentDescriptors:
itemIndexPathToOverridePropertySet
setItemIndexPathToOverridePropertySet:
translatingContext
setTranslatingContext:
relativeModelClassToMappingResponse
setRelativeModelClassToMappingResponse:
sectionToLibraryAddedOverride
setSectionToLibraryAddedOverride:
_completePersonalizedObjectWithLibraryObject:personalizationProperties:overrideLibraryAddedStatus:
_lightweightPersonalizedObjectWithUnpersonalizedObject:libraryObject:personalizationProperties:overrideLibraryAddedStatus:
_requiredLightweightPersonalizationPropertiesForModelClass:requestedProperties:
_lightweightPersonalizedPlaybackPositionWithUnpersonalizedPlaybackPosition:libraryPlaybackPosition:personalizationProperties:
_lightweightPersonalizedPlaybackPositionWithUnpersonalizedPlaybackPosition:identifiers:personalizationProperties:
_lightweightPersonalizedStoreAssetWithUnpersonalizedAsset:libraryAsset:personalizationProperties:
hasCloudSyncSource
setStoreUbiquitousIdentifier:
_chapterIndex
_chapters
_hasArtworkAtPlaybackTime
chapterIndex
setChapterIndex:
setChapters:
setHasArtworkAtPlaybackTime:
_mirroringIncluded
_routingViewController
_mirroringOnly
routingViewController:didPickRoute:
routingViewControllerDidUpdateContents:
routingViewControllerDidShowAirPlayDebugScreen:
routingViewController:didSelectRoutingViewItem:
initWithType:
initWithType:includeMirroring:
initWithContentViewController:
setMirroringOnly:
mirroringOnly
setPopoverContentSize:animated:
contentViewController
popoverControllerDidDismissPopover:
dismissPopoverAnimated:
_allowsCellularNetworking
_allowsInitiatingPlayWhileDownload
_isExplicitTrack
_requiresPlayWhileDownload
_showComposer
_shouldReportPlayEventsToStore
_shouldRememberBookmarkTime
_subscriptionRequired
_prefersStoreContentInfo
_offlineHLS
_volumeNormalization
_albumArtistName
_albumStoreAdamID
_albumTitle
_artistName
_artistStoreAdamID
_composerName
_contentTitle
_contentType
_downloadIdentifier
_expectedDuration
_genreTitle
_localNetworkContentURL
_mediaLibraryPersistentID
_protectedContentSupportStorageURL
_bookmarkTime
_storeUbiquitousIdentifier
_iTunesStoreContentID
_iTunesStoreContentDSID
_rentalIdentifier
_hlsOfflinePlaybackKeys
_hlsPlaylistURLString
allowsAssetCaching
allowsCellularNetworking
additionalHTTPHeaderFields
likedState:
iTunesStoreContentDownloadParameters
iTunesStoreContentPurchasedMediaKind
iTunesStoreContentType
iTunesStoreContentUserAgent
getNetworkConstraintsForDownloadKind:withCompletionHandler:
loadMediaItemWithCompletionHandler:
setLikedState:withCompletionHandler:
setLikedState:forUserIdentity:withCompletionHandler:
streamingPlaybackPurchaseBundleDestinationFilePathForAssetFilePath:
_calculateAllowsCellularNetworking
_setNeedsAllowsCellularNetworkingUpdate
_requiresPendingItemDownload
_storeRedownloadProductItem
_contentTasteControllerDidChangeNotification:
_musicCellularNetworkingAllowedDidChangeNotification:
_storeCellularNetworkingAllowedDidChangeNotification:
genreTitle
requiresPlayWhileDownload
_shouldRespectStoreCellularDataSetting
_shouldRespectMusicCellularDataSetting
setShouldAllowDataForCellularNetworkTypes:
mediaTypeNetworkConstraintsFromURLBag:
downloadForMediaPlaybackItemMetadata:
_getEffectiveStoreDownloadAttributes:forPlaybackItemMetadata:attributes:
canCreateStoreDownloadForPlaybackItemMetadata:type:attributes:
storeDownloadForPlaybackItemMetadata:type:attributes:
initWithObject:keyPath:options:handler:
_runningQuery
_propertiesToTranslators
_relationshipsToTranslators
_sourcePreprocessorBlock
_unsupportedKeys
_optionalHooks
_MPModelClass
initWithMPModelClass:
classForRelationshipKey:
prepareSource:context:properties:
setSourcePreprocessorBlock:
mapUnsupportedPropertyKey:
mapUnsupportedRelationshipKey:
_objectForPropertySet:source:context:
_objectForRelationshipKey:propertySet:source:context:
_valueForPropertyKey:source:context:
MPModelClass
propertyTranslatorForPropertyKey:
translatorForMPModelClass:
relatedMPModelClass
prepareSource:context:
relationshipTranslatorForRelationshipKey:
createTranslatorForMPModelClass:
_relatedMPModelClass
initWithRelatedMPModelClass:
mapIdentifiersToPropertyTranslator:
mapPropertyKey:toPropertyTranslator:
mapRelationshipKey:ofModelClass:toRelationshipTranslator:
_routeType
_routeSubtype
_uid
initWithDeviceType:deviceSubtype:uid:
routeType
routeSubtype
_picked
_avRouteDescription
_wirelessDisplayRoute
_displayRouteType
_batteryLevel
_canAccessRemoteAssets
_canPlayEncryptedProgressiveDownloadAssets
_canFetchMediaDataFromSender
_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
_pickedOnPairedDevice
_playingOnPairedDevice
_requiresPassword
_carplayRoute
_homePodRoute
_b520Route
_homeTheaterRoute
_clusterRoute
_productIdentifier
_groupUID
_pickableRouteType
_clusterComposition
_auxiliaryDevices
_playingPairedDeviceName
_originalRouteSubtype
routeName
designatedGroupLeaderName
routeNames
setRouteName:
avRouteDescription
setAVRouteDescription:
isAirPlayingToDevice
groupLeaderAirplayIdentifier
isAppleTVRoute
isDeviceRoute
isProxyGroupPlayer
supportsGrouping
supportsAirPlayGrouping
supportsRemoteControl
isSplitterCapable
isSplitRoute
numberOfOutputDevices
isPicked
setPicked:
isRoutingToWirelessDevice
wirelessDisplayRoute
setWirelessDisplayRoute:
passwordType
displayRouteType
setDisplayRouteType:
isShareableRoute
isHeadphonesRoute
isAirpodsRoute
isB298Route
isB372Route
isPowerbeatsRoute
isBeatsSoloRoute
isBeatsStudioRoute
isBeatsXRoute
isDeviceSpeakerRoute
isHearingDeviceRoute
isSmartAudio
isStereoPair
isTVRoute
isTVStickRoute
isSetTopBoxRoute
isW1Route
isAirPlayRoute
isH1Route
isW2Route
isB444Route
isB419Route
isB364Route
isLowLatencyRoute
supportsWirelessDisplay
containsDeviceWithSubtype:
productIdentifier
groupUID
pickableRouteType
clusterComposition
canAccessRemoteAssets
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
batteryLevel
auxiliaryDevices
playingPairedDeviceName
isPickedOnPairedDevice
isPlayingOnPairedDevice
requiresPassword
isCarplayRoute
isHomePodRoute
isB520Route
isHomeTheaterRoute
isClusterRoute
originalRouteSubtype
filteredArrayUsingPredicate:
predicateWithBlock:
containsString:
routeSubtypeForMRSubtype:withOverridesFromMRType:
routeSubtypeForMRSubtype:mrType:
clusterCompositionForOutputDevice:
deviceType
deviceSubtype
_missingContentIdentifiersInRecommendationsArray:storeItemMetadataResults:
_produceResponseWithRecommendationsArray:storeItemMetadataResults:completion:
_completionHandler
_dispatchSource
_downloadManagerMonitorCount
_searchBlock
_timeout
searchBlock
setSearchBlock:
setTimeout:
timeout
startWithCompletionHandler:
_attemptDownloadSearch
_finishWithDownload:error:
_beginMonitoringDownloadManager
_endMonitoringDownloadManager
_storeIdentifierSetToLibraryIdentifierSet
_libraryAddedStatus
libraryIdentifierSetForIdentifierSet:
setLibraryIdentifierSet:forIdentifierSet:
libraryAddedStatus
setLibraryAddedStatus:
_centerImageView
_outerRingView
_progressView
_centerImage
_outerRingColor
setCenterImage:
setOuterRingColor:
centerImage
outerRingColor
setProgress:
_progress
_shouldAnimatePropertyWithKey:
_updateShapePath
progress
addArcWithCenter:radius:startAngle:endAngle:clockwise:
bezierPath
lineWidth
setStrokeEnd:
setLineCap:
setStrokeStart:
removePredicatesForProperty:
setFilterPredicate:forProperty:
containingPlaylist
setFilterPropertyPredicate:
_updatePredicateForProperty:withPropertyPredicate:
collectionByJoiningCollections
activeGeniusPlaylist
currentDevicePurchasesPlaylist
_didInitializeTimeoutIntervalAdditions
_errorReportingDisabled
_individualPendingNestedRequestOperation
_nestedRequestOperationsGroup
_nestedRequestsOperationQueue
_requestType
_sectionsToPendingNestedRequestOperations
_timeoutIntervalAdditions
adjustTimeoutInterval:
_produceCarPlayResponseWithParser:withNestedRequestsForEmptyBrickSectionsInOperationQueue:completion:
_produceRegularResponseWithParser:completion:
_produceResponseWithParser:results:changeDetails:completion:
isBrick
isMemberOfChartSet
_attributes
_meta
_transformedType
_relationships
initWithType:transformedType:
transformedPayload
setIdentifier:
attributes
meta
transformedType
relationships
_personID
_relationshipPayloadProvider
setPersonID:
relationshipPayloadProvider
setRelationshipPayloadProvider:
_mediaKitType
_payloadTransformBlock
initWithRelatedMPModelClass:mediaKitType:payloadTransformBlock:
mediaKitType
setMediaKitType:
payloadTransformBlock
identifiersForPayload:context:
mapRelationshipKey:toModelClass:mediaKitType:
mapIdentifierCreationKeyPaths:transformBlock:
mapPropertyKey:toPayloadKeyPath:
mapPropertyKey:toPayloadKeyPaths:valueTransformer:
mapPropertyKey:toPayloadKeyPaths:valueTransformerFunction:
mapRelationshipKey:toModelClass:mediaKitType:payloadTransform:
mapRelationshipKey:toModelClass:mediaKitType:attributePayloadTransform:
objectForPropertySet:payload:context:
createGenericObjectTranslator
translatorForType:
__tagline_KEY
__movieInfoDictionary_KEY
__clips_KEY
stationGlyph
currentStationEvent
upcomingStationEvent
stationEvents
containsDate:
initWithStartDate:endDate:
stationGlyphBlock
__beats1_KEY
__live_KEY
__name_KEY
__editorNotes_KEY
__shortEditorNotes_KEY
__hasExplicitContent_KEY
__stationEvents_KEY
__stationGlyphBlock_KEY
__allowsItemLiking_KEY
__type_KEY
__subtype_KEY
__attributionLabel_KEY
__providerName_KEY
__subscriptionRequired_KEY
__providerUniversalLink_KEY
__providerBundleIdentifier_KEY
__providerID_KEY
__startingAirDate_KEY
__endingAirDate_KEY
noArtPlaceholderImageForMediaType:
initWithObjects:forKeys:count:
propertyForMPMediaEntityProperty:
spotlightPropertyForMPMediaEntityProperty:
_headerBackgroundView
_footerBackgroundView
_sectionBackgroundViews
backgroundViewForSection:
_createBackgroundView
headerBackgroundView
setHeaderBackgroundView:
footerBackgroundView
setFooterBackgroundView:
sectionBackgroundViews
setSectionBackgroundViews:
rectForSection:
headerViewForSection:
cellForRowAtIndexPath:
indexPathsForVisibleRows
contentSize
contentOffset
setSeparatorStyle:
_updateCloudLibraryForPlaylist:
_requestedPlaybackPositionProperties
setShouldRememberBookmarkTime:
kindWithEpisodeKind:
__feedURL_KEY
__shareURL_KEY
__supportsSubscription_KEY
__author_KEY
_episodeKind
episodeKind
_pendingVolumeChange
_debounceVolumeRepeat
_didRegisterForButtonNotifications
_activeDataSource
setActiveDataSource:
_changeVolumeBy:
_calculateButtonRepeatDelay
increaseVolume
decreaseVolume
cancelVolumeEvent
handleVolumeButtonWithType:down:
handleVolumeDownButton
handleVolumeUpButton
_volumeUpButtonTouchDown:
_volumeUpButtonTouchUp:
_volumeDownButtonTouchDown:
_volumeDownButtonTouchUp:
_applicationDidBecomeActiveNotification
_applicationWillResignActiveNotification
_registerForButtonNotificationsIfNeeded
_unregisterForButtonNotificationsIfNeeded
activeDataSource
setWantsVolumeButtonEvents:
performSelector:withObject:afterDelay:inModes:
_hasBeenPlayed
_model
initWithModel:
model
_totalImageRequestCount
_HEICImageRequestCount
_maxHEICRequestPercentage
_bestURLForCatalog:kind:size:
_bestSizeForImageSizeInfo:catalog:
maxHEICRequestPercentage
setMaxHEICRequestPercentage:
supportedSizes
maxSupportedSize
hasMaxSupportedSize
HLSVideoURLForAspectRatio:
CRABSVideoURLMatchingSize:
previewFrameArtworkInfoMatchingAspectRatio:
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
sizeInfo
supportedSizesForCRABSVideoForAspectRatio:
ic_URLByAppendingQueryItems:
isLegacyStoreCacheBusterEnabled
standardDefaults
responseArray
colorWithCGColor:
copyColorWithKind:
sharedStoreArtworkDataSource
_sectionIndexTitleIndex
_range
range
setRange:
sectionIndexTitleIndex
setSectionIndexTitleIndex:
_seed
nextIntWithUpperBound:
initWithSeed:
setSeed:
seed
encodeBytes:length:forKey:
encodeInt:forKey:
decodeBytesForKey:returnedLength:
decodeIntForKey:
exceptionWithName:reason:userInfo:
initWithBytesNoCopy:length:freeWhenDone:
_source
_lowestValue
_highestValue
_numberOfPossibleOutcomes
initWithRandomSource:lowestValue:highestValue:
lowestValue
highestValue
numberOfPossibleOutcomes
_usesExactFittingSizeAsDestinationSize
_resizedImage
_operationGroup
initWithImage:scaledFittingSize:
initWithImage:scaledFittingSize:destinationURL:
initWithImage:scaledFittingSize:useExactFittingSizeAsDestinationSize:destinationURL:
_resizedScaledSizeForScaledImageSize:scaledFittingSize:
resizedImage
operationGroup
setScaledFittingSize:
usesExactFittingSizeAsDestinationSize
setUsesExactFittingSizeAsDestinationSize:
devicePreferredImageFormat
URLByDeletingLastPathComponent
imageWithCGImage:
setBackgroundColor:
setBackgroundColorLight:
setPrimaryTextColor:
setPrimaryTextColorLight:
setSecondaryTextColor:
setSecondaryTextColorLight:
_copyWithClass:
_backgroundColor
_backgroundColorLight
_primaryTextColor
_primaryTextColorLight
_secondaryTextColor
_secondaryTextColorLight
backgroundColor
isBackgroundColorLight
primaryTextColor
isPrimaryTextColorLight
secondaryTextColor
isSecondaryTextColorLight
_allSliders
_individualVolumeSliders
_trackingSlider
_optimisticValues
_optimisticScales
_inFlightDisableOptimisticStateRequests
_shouldOverrideTracking
_synced
_masterVolumeSlider
initWithMasterVolumeSlider:individualVolumeSliders:
individualVolumeSliders
addIndividualVolumeSlider:
removeIndividualVolumeSlider:
removeAllIndividualVolumeSliders
volumeSliderValueChanged:
volumeSliderDidEndTracking:
_maxOptimisticValue
_resetOptimisticScales
_updateOptimisticValueCache
_resetMasterVolumeSlider
syncSliders:
_findExistingVolumeSlider:
_addControlEventsForVolumeSlider:
_addControlEventsForVolumeSliders:
_removeControlEventsForVolumeSlider:
_removeControlEventsForVolumeSliders:
_setControlEventsForVolumeSlider:add:
masterVolumeSlider
synced
addAnimations:
initWithDuration:timingParameters:
initWithControlPoint1:controlPoint2:
initWithMass:stiffness:damping:initialVelocity:
_debugDescriptionWithEnumerator:lengths:
debugDescriptionForItem:inSection:
stringByLeftPaddingToLength:withString:startingAtIndex:
debugDescriptionStartingAtItem:inSection:
stringByPaddingToLength:withString:startingAtIndex:
debugDescriptionForSection:
__itemType_KEY
__detailedItemType_KEY
__artistUploadedContentType_KEY
__curator_KEY
__mediaClip_KEY
__movie_KEY
__socialPerson_KEY
__song_KEY
__episode_KEY
__showCreator_KEY
requiredStoreLibraryPersonalizationProperties
innerObject
personalizationScopedPropertiesForProperties:
relativeModelObjectForStoreLibraryPersonalization
objectWithStoreLibraryPersonalizationRelativeModelObject:
mediaClip
setFormatOptions:
_roomID
roomID
setRoomID:
_movie
setMovie:
movie
_scrubControl
_controlsAutohideDisabled
_wantsTick
_tickTimeEvents
_lastTickTime
_endSliderTracking
_tickNotification:
performSelector:whenTickingPastTime:
cancelPreviousPerformTickEventsForSelector:
_playableDuration
initWithDouble:
_requestedEpisodeProperties
setCreator:
setNumber:
setExplicitRating:
setMusicShow:
_shouldExcludePurchaseHistoryContent
_initWithLibrary:
shouldExcludePurchaseHistoryContent
_cloudLibraryAvailabilityDidChange:
_updateFilters
systemFiltersPerLibrary
filtersForLibrary:
hasSearchString
clearProperties
addProperties:
propertiesCount
propertiesAtIndex:
writeString:forTag:
_completeMyCollectionArtworkDataSource
_currentRevision
_initInstanceVariableOnce
_seedCloudPlaylistWithTrack:container:completionBlock:
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:usingBlock:
dictionaryWithSharedKeySet:
sharedKeySetForKeys:
_localizedGeniusErrorForError:geniusEnabled:
_localizedCloudGeniusErrorForError:
sharedMonitor
geniusTracksForSeedTrack:error:
tracksFromClusterForCount:error:
playlistControllerWithSeedTracks:error:
populateContainer:withSeedTrack:completionBlock:
hasGeniusDataAvailable
hasGeniusFeatureEnabled
hasWAPICapability
hasWiFiCapability
hasCellularDataCapability
MPMediaLibraryDataProviderSystemML3CoercedString
_baseContentItemIDToOccurrenceCount
_tvEpisodeBuilder
_tvSeasonBuilder
_tvShowBuilder
_shouldUsePlaylistEntry
_modelObjectWithUniqueContentItemIDForModelObject:
shouldUsePlaylistEntry
setShouldUsePlaylistEntry:
_sourceKeyPaths
_valueTransformFunction
sourceKeyPaths
valueTransformFunction
translatorForKeyPaths:valueTransformBlock:
translatorForKeyPaths:valueTransformFunction:
initWithiTunesCloudStoreRadioStreamAssetInfo:
streamProtocol
streamURL
isITunesStoreStream
MPStoreRadioStreamFlavorFromICStoreRadioStreamFlavor:
MPStoreRadioStreamProtocolFromICStoreRadioStreamProtocol:
_leftPercentage
_rightPercentage
_singlePercentage
_casePercentage
initWithRouteDescription:
initWithOutputDevice:
leftPercentage
rightPercentage
singlePercentage
casePercentage
initWithFloat:
setPersistentIDs:
personalizedResponseForContentDescriptor:requestedProperties:
_allowsHighQualityMusicStreamingOnCellular
_musicEQPreset
_musicRepeatType
_musicShuffleType
_soundCheckEnabled
_speakerRouteEnabled
_includeContentItemDebugFields
_lastSiriPlaybackContextIDs
_notifyTokens
_userDefaultsMutationQueue
_currentPrivateListeningEnabledValue
_loadValuesQueue
_devicePrivateListeningEnabled
allowsHighQualityMusicStreamingOnCellular
musicRepeatType
musicShuffleType
setMusicRepeatType:
setMusicShuffleType:
soundCheckEnabled
speakerRouteEnabled
includeContentItemDebugFields
preferredVideosAssetQualityOnCellular
preferredVideosAssetQualityOnWifi
isPrivateListeningEnabled
isDevicePrivateListeningEnabled
setPrivateListeningEnabled:
lastSiriPlaybackContextIDForPlayerID:
setLastSiriPlaybackContextID:forPlayerID:
privateListeningEnabledForHomeUserIdentifier:error:
setPrivateListeningEnabled:forHomeUserIdentifier:error:
autoPlayEnabledForUserIdentity:
setAutoPlayEnabled:forUserIdentity:
_addNotificationObserver:forUserDefaultKey:
_calculateCurrentMusicEQPreset
_calculateCurrentMusicRepeatType
_calculateCurrentMusicShuffleType
_postRepeatShuffleTypeGlobalNotification
_mobileiPodPrefsDidChange
_loadAccountProperties
_accountStoreChangedNotification:
musicEQPreset
setDevicePrivateListeningEnabled:
updatePropertiesForUserIdentity:usingBlock:
privateListeningEnabled
typeForAVController
eqPresetForName:
ams_saveAccount:
ams_setAccountFlagValue:forAccountFlag:
ic_storeAccountForStoreAccountID:error:
ic_sharedAccountStore
ams_accountFlagValueForAccountFlag:
saveVerifiedAccount:error:
ic_setPrivateListeningEnabledForHomeUsers:
ic_privateListeningEnabledForHomeUsers
ic_storeAccountForHomeUserIdentifier:error:
standardUserDefaults
_scenes
_displays
_categories
_needsUpdate
addVolumeDisplay:
removeVolumeDisplay:
setNeedsUpdate
mainContext
registerView:inContext:
unregisterView:inContext:
_addCategory:
_updateVisibility
_updateVisibilityForVolumeDisplays:inWindowScene:
setSystemVolumeHUDEnabled:forAudioCategory:
_appAdoptsUISceneLifecycle
_setSystemVolumeHUDEnabled:forAudioCategory:
weakObjectsHashTable
sharedInstance
openToPlayQueueDescriptor:
_shouldAccessCache
onSystemServer:
getUserQueueModificationsDisabledWithReply:
_whitelistedFCKinds
_produceResponseWithParser:results:error:
catalogURLWithStoreBagDictionary:
setDialogDictionary:
setFileAssetInfoList:
setHlsAssetInfo:
setLiveRadioStream:
setRadioStreamAssetInfoList:
setSuzeLeaseID:
setSubscriptionRequired:
setOnlineSubscriptionKeysRequired:
_copyWithPlaybackResponseClass:
_dialogDictionary
_fileAssetInfoList
_hlsAssetInfo
_liveRadioStream
_radioStreamAssetInfoList
_suzeLeaseID
_onlineSubscriptionKeysRequired
dialogDictionary
fileAssetInfoList
hlsAssetInfo
isLiveRadioStream
radioStreamAssetInfoList
suzeLeaseID
onlineSubscriptionKeysRequired
_cloudLibraryStatusAccessQueue
_cloudLibraryStatus
_cloudLibraryObservationCount
_hasLoadedMatchStatus
_hasLoadedSubscriptionAvailability
_subscriptionStatusMonitor
_subscriptionStatusObservationToken
_matchStatusObservationCount
_matchStatus
_observingNetworkReachability
_hasSubscriptionLease
_shouldPlaybackRequireSubscriptionLease
_subscriptionAvailable
_lastKnownSubscriptionFairPlayKeyStatus
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
_allowsMusicSubscriptionDidChange:
_cloudClientAuthenticationDidChange
_userIdentityStoreDidChange:
_enableICMLErrorReasonChange:
isCloudLibraryEnabled
isPurchaseHistoryEnabled
hasLoadedSubscriptionAvailability
isSubscriptionAvailable
lastKnownFairPlaySubscriptionStatus
matchStatus
shouldPlaybackRequireSubscriptionLease
musicSubscriptionStatus
beginObservingCloudLibraryEnabled
beginObservingMatchStatus
refreshMusicSubscriptionStatus
beginObservingFairPlaySubscriptionStatus
beginObservingPurchaseHistoryEnabled
beginObservingSubscriptionAvailability
endObservingCloudLibraryEnabled
endObservingMatchStatus
endObservingFairPlaySubscriptionStatus
endObservingPurchaseHistoryEnabled
endObservingSubscriptionAvailability
_calculateShouldPlaybackRequireSubscriptionLeaseReturningLikelyToReachRemoteServer:
_currentCloudLibraryEnabled
_currentPurchaseHistoryEnabled
_updateMatchStatus
_updateSubscriptionAvailability
_updateSubscriptionAvailabilityWithValue:
_beginObservingCloudLibraryEnabled
_endObservingCloudLibraryEnabled
_beginObservingMatchStatus
_endObservingMatchStatus
_copyObservationStateFrom:
_performBlockOnControllerHandlingTheSameAccount:
lastKnownSubscriptionFairPlayKeyStatus
serialQueue
_cloudServiceStatusControllerWithUserIdentity:createIfRequired:
setBool:forKey:
valueForBagKey:
setAllowsExpiredBags:
setInteger:forKey:
initWithStoreRequestContext:
isActiveLocker
isRemoteServerLikelyReachable
refreshSubscriptionStatus
integerForKey:
endObservingSubscriptionStatusWithToken:
beginObservingSubscriptionStatusWithHandler:
sharedMonitorForIdentity:
autoupdatingActiveAccount
cloudServiceStatusControllerWithUserIdentity:
initWithRawResponseOutput:sectionBuilder:contentItemBuilder:filteredFCKinds:userIdentity:
_parsedElements:
_parsedContentNode:additionalAttributesFromParent:
_entityOrder
_filterPredicates
_groupingType
_staticEntityIdentifiers
_includeNonLibraryEntities
_has
clearFilterPredicates
addFilterPredicates:
filterPredicatesCount
filterPredicatesAtIndex:
setHasGroupingType:
hasGroupingType
groupingTypeAsString:
StringAsGroupingType:
setHasFilteringDisabled:
hasFilteringDisabled
entityOrder
setEntityOrder:
setHasEntityOrder:
hasEntityOrder
entityOrderAsString:
StringAsEntityOrder:
clearStaticEntityIdentifiers
addStaticEntityIdentifiers:
staticEntityIdentifiersCount
staticEntityIdentifiersAtIndex:
staticEntityType
setStaticEntityType:
setHasStaticEntityType:
hasStaticEntityType
staticEntityTypeAsString:
StringAsStaticEntityType:
setIncludeNonLibraryEntities:
setHasIncludeNonLibraryEntities:
hasIncludeNonLibraryEntities
mergeFrom:
filteringDisabled
staticEntityIdentifiers
setStaticEntityIdentifiers:
includeNonLibraryEntities
filterPredicatesType
staticEntityIdentifiersType
_owner
tokenWithQueue:owner:
tokenWithKey:owner:
_requestedStoreAssetProperties
secondsFromGMT
ISO8601TimeZoneOffsetFromUTC
_sourceItemIdentifiers
_fileAsset
initWithFileAsset:sourceItemIdentifiers:
mediaLibraryForItemIdentifiers:
sourceItemIdentifiers
setSourceItemIdentifiers:
fileAsset
setFileAsset:
_entityLimit
_itemPropertiesToFetch
_collectionPropertiesToFetch
_useSections
_ignoreSystemFilterPredicates
_ignoreRestrictionsPredicates
_includeEntitiesWithBlankNames
orderingProperties
setOrderingProperties:
orderingDirectionMappings
setOrderingDirectionMappings:
_action
initWithAction:
_actionTypeString
action
_importElements
initWithImportElements:
parsedStoreItemsImportProperties
_associatedElementForPropertyDict:
importElements
_importPropertiesDictFromImportMetadataDict:
_hadBlockingTracklistLoad
_assetLoadError
_assetLoadDuration
_blockingSecureKeyLoadCount
_maximumSecureKeyLoadDuration
_secureKeyLoadCount
_secureKeyError
_tracklistLoadError
_playbackEndError
_endReasonType
_startupState
_interfaceTypeChangeCount
_startInterfaceType
assetLoadError
setAssetLoadError:
assetLoadDuration
setAssetLoadDuration:
blockingSecureKeyLoadCount
setBlockingSecureKeyLoadCount:
maximumSecureKeyLoadDuration
setMaximumSecureKeyLoadDuration:
secureKeyLoadCount
setSecureKeyLoadCount:
secureKeyError
setSecureKeyError:
tracklistLoadError
setTracklistLoadError:
hadBlockingTracklistLoad
setHadBlockingTracklistLoad:
playbackEndError
setPlaybackEndError:
endReasonType
setEndReasonType:
startupState
setStartupState:
interfaceTypeChangeCount
setInterfaceTypeChangeCount:
startInterfaceType
setStartInterfaceType:
__backedByStoreItemMetadata_KEY
__parentGroup_KEY
__subgroupIndex_KEY
subgroup
subgroupIndex
parentGroup
isNSArray__
isNSDictionary__
propertyList:isValidForFormat:
libraryAddStatusObserverConfiguration
supportsLibraryAddStatusObservation
hasCleanContent
hasExplicitContent
requiredLibraryAddStatusObservationProperties
isArtistUploadedContent
_currentInterfaceType
_isReloadingWithPlaybackContext
_pendingFailureQueueFeeder
_tracklistStartUptime
_tracklistSummaryEvent
_uniqueIdentifierToReportingSession
_uniqueIdentifierToSummaryEvent
initWithPlayer:clientName:clientType:clientVersion:
_avControllerBufferingStateDidChangeNotification:
_avControllerDidReloadWithPlaybackContextNotification:
_avControllerPlaylistManagerFailedToQueueNotification:
_avControllerItemWillChangeNotification:
_avControllerWillReloadWithPlaybackContextNotification:
_avItemAssetLoadedNotification:
_avItemSecureKeyDeliveryRequestDidFinishNotification:
_avItemTypeDidChangeNotification:
_networkTypeDidChangeNotification:
_configureBaseEventPropertiesForEvent:
_completeSetupForReportingSession:avItem:
_completeSetupForReportingSession:avItem:fallbackQueueFeeder:
_initializeReportingSession:forAVItem:
_configureStartupStateForSummaryEvent:withItem:
_handleDeallocationForUniqueIdentifier:
_isAVItemReadyForReportingSessionInitialization:
_isAVItemReadyForReportingSessionSetupCompletion:
_newReportingSession
_preparedSummaryEventForAVItem:
_reportingSessionForAVItem:
_setPerceivedTotalStartupTimeForItem:withSummaryEvent:
_uniqueIdentifierForAVItem:
setHandler:
rtcReportingServiceIdentifier
rtcReportingPlayQueueSourceIdentifier
rtcReportingAssetType
rtcReportingSessionAdditionalUserInfo
defaultClientVersion
requiredPlaylistEntryProperties
_localPersistenceResponseHandler
_completeResponseHandler
localPersistenceResponseHandler
setLocalPersistenceResponseHandler:
completeResponseHandler
setCompleteResponseHandler:
proxyForObject:protocol:
proxyForObjects:protocol:
objects
setProtocol:
setObjects:
_protocol
_objects
protocol
signatureWithObjCTypes:
selector
_notificationQueue
_registeredTransientState
addOperation:
registerTransientAddState:forModelObjects:relatedModelObjects:
registerTransientKeepLocalState:forModelObjects:relatedModelObjects:
unregisterTransientState:
transientAddStateForModelObject:
transientKeepLocalStateForModelObject:
performDeleteEntityChangeRequest:withRelatedModelObjects:
performDeleteEntityChangeRequest:withRelatedModelObjects:completion:
performLibraryImportChangeRequest:withRelatedModelObjects:
performLibraryImportChangeRequest:withRelatedModelObjects:completion:
performKeepLocalChangeRequest:withRelatedModelObjects:
performKeepLocalChangeRequest:withRelatedModelObjects:completion:
modelObjects
keepLocalState
relatedModelObjects
addState
setToken:
setRelatedModelObjects:
setModelObjects:
setKeepLocalState:
_addState
_keepLocalState
_modelObjects
_relatedModelObjects
setAddState:
sharedDeviceLibraryController
_nowPlayingInfo
_queuedNowPlayingInfo
_convertedNowPlayingInfo
_pushDate
_publishedContext
_mutatedPlaybackQueueRequests
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIdentifiers
_contentItems
_nowPlayingContentItem
_playbackState
_utilityQueue
_artworkResizeUtility
_contentItemInvalidationTimer
_playbackQueueDataSource
_lyricsDelegate
_callbacks
_fallbackActivity
_stateHandle
_playerPath
_playbackQueueDelegate
_playerID
_representedApplicationBundleIdentifier
_dataSourceQueue
artworkCatalogBlockForContentItem:
initWithPlayerID:
setPlaybackState:
becomeActive
becomeActiveSystemFallback
resignActiveSystemFallback
setRepresentedApplicationBundleIdentifier:
setPlaybackQueueDataSource:
playbackQueueDataSource
setLyricsDelegate:
lyricsDelegate
invalidatePlaybackQueue
invalidatePlaybackQueueWithCompletion:
nowPlayingContentItem
setNowPlayingContentItem:
setDataSourceQueue:
supportsArtworkCatalogLoading
_artworkCatalogForContentItem:
_becomeActiveWithCompletion:
_becomeActiveIfPossibleWithCompletion:
_childContentItemForContentItem:index:
_contentItemIDsInRange:itemsRange:
_contentItemForIdentifier:
_contentItemForIdentifier:alreadyOnDataSourceQueue:
_createPlaybackQueueForRequest:
_getMetadataForContentItem:completion:
_getTransportablePlaybackSessionRepresentationWithIdentifier:preferredSessionType:completion:
_invalidatePlaybackQueueImmediatelyWithCompletion:
_onDataSourceQueue_artworkCatalogForContentItem:
_onDataSourceQueue_getContentItemIDsInRange:completion:
_onQueue_clearPlaybackQueueDataSourceCallbacks
_onQueue_registerLyricsDelegateCallbacks:
_onQueue_registerPlaybackQueueDataSourceCallbacks:
_onQueue_pushContentItemsUpdate
playerPath
playbackQueueDelegate
setPlaybackQueueDelegate:
playerID
representedApplicationBundleIdentifier
dataSourceQueue
defaultCenter
serviceQueue
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:infoForContentItem:completion:
nowPlayingInfoCenter:lyricsForContentItem:completion:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
sessionType
nowPlayingInfoCenter:didEndMigrationWithIdentifier:error:
nowPlayingInfoCenter:willBeginSessionMigrationWithIdentifier:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
nowPlayingInfoCenter:didEndLyricsEvent:
contentItemForOffset:
nowPlayingInfoCenter:contentItemIDForOffset:
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
nowPlayingInfoCenter:artworkCatalogForContentItem:
playbackQueueIdentifierForNowPlayingInfoCenter:
responseWithIdentifier:sessionType:data:
_sessionType
_data
requestWithIdentifier:preferredSessionType:
_preferredSessionType
preferredSessionType
nowPlayingInfoCenter:contentItemForID:
replaceObjectsInRange:withObjectsFromArray:
infoCenterForPlayerID:
strongToWeakObjectsMapTable
resolveInstanceMethod:
performWithoutEnforcement:
_indexProperties
_lookupPropertyForSelector:result:
_modelKeyForPropertySelector:
keyForObject:
replaceCharactersInRange:withString:
uppercaseString
bidirectionalDictionary
setValue:forModelKey:
numberWithUnsignedLong:
numberWithUnsignedChar:
numberWithLong:
numberWithShort:
valueForModelKey:
unsignedLongValue
unsignedShortValue
unsignedCharValue
_originalIdentifierSet
_isFinalized
initWithIdentifiers:
initWithIdentifiers:block:
valueForUndefinedKey:
setValue:forUndefinedKey:
copyWithIdentifiers:
copyWithIdentifiers:block:
copyWithPropertySet:
copyWithIdentifiers:propertySet:
originalIdentifierSet
hasLoadedValueForKey:
hasLoadedValuesForPropertySet:
mergeWithObject:
_isModelKey:
_sanitizedStorage
setWithCapacity:
_modelClass
_initWithModelClass:
modelClass
kindWithModelClass:
kindWithModelClass:cacheKey:block:
_kindWithModelClass:cacheKey:block:
_artworkIdentifier
_artwork
_artworkData
artworkIdentifier
setArtworkIdentifier:
setArtwork:
artworkData
setArtworkData:
_onQueue_pushNowPlayingInfoAndRetry:
_initializeNowPlayingInfo
setNowPlayingInfo:
nowPlayingInfo
libraryRemovalSupportedOptions
requiredLibraryRemovalProperties
supportsLibraryRemoval
newKeepLocalStatusObserverConfiguration
requiredKeepLocalStatusObservationProperties
supportsKeepLocalStatusObservation
_subscriptionStatusObject
_definitiveInformation
_hasPlaybackCapability
_requiresCarrierManualVerification
_shouldUseLease
initWithICSubscriptionStatus:
isDefinitiveInformation
hasPlaybackCapability
requiresCarrierManualVerification
shouldUseLease
carrierBundlingStatusType
statusType
_homeSharingLibrary
_tokenDataForDSIDs
_loadedContainerPIDs
_blocksForLoadingContainerPIDs
_containerFillQueue
_databaseID
URLForItemDataRequest:
initWithHomeSharingLibrary:
setRentalPlaybackStartDateForItemID:
_homeSharingGroupIDDidChangeNotification:
_homeSharingLibraryDidUpdateRevisionNumber:
_homeSharingLibraryDidBecomeUnavailable:
isSupportedSharingVersion
setTokenData:forAuthorizedDSID:
_fetchTokensForAuthorizedDSIDs
_tokenDataForAccountID:
_fillContainerForQueryCriteria:completionBlock:
homeSharingLibrary
setDatabaseID:
fillContainerForHomeSharingLibrary:containerID:completionHandler:
sendRequest:withResponseHandler:
tokenData
requestWithDSID:deviceGUID:
authorizedDSIDs
deviceGUID
homeSharingGroupID
mutableBytes
initWithLength:
beginScanningForLibraries
endScanningForLibraries
checkForChangesInHomeSharingLibrary:completionHandler:
isScanningForLibraries
urlForRequest:
requestWithDatabaseID:itemID:format:
punctuationCharacterSet
responseCode
setValue:forArgument:
requestWithDatabaseID:itemID:
buildDatabaseFromHomeSharingLibrary:atPath:completionHandler:progressHandler:
initWithPath:
connectionState
hs_homeSharingErrorWithCode:userInfo:
_determineHomeSharingGroupIDWithCompletionHandler:
determineGroupIDWithCompletionHandler:
defaultStore
homeSharingBrowserWithGroupID:
browser:didAddLibrary:
browser:didRemoveLibrary:
_requestedCuratorProperties
setBrandLogoArtworkCatalogBlock:
setCuratorKind:
setShortName:
_elapsedTime
_live
_rate
encodeFloat:forKey:
decodeFloatForKey:
liveSnapshotWithRate:state:
snapshotWithElapsedTime:duration:rate:atTimestamp:state:
nowPlayingWithItem:itemIdentifier:artworkIdentifier:index:count:
_removedItemIdentifiers
initWithInsertedDescriptors:removedItemIdentifiers:
removedItemIdentifiers
startLoading
stopLoading
URLProtocolDidFinishLoading:
URLProtocol:wasRedirectedToRequest:redirectResponse:
setAllHTTPHeaderFields:
securityInfoForURL:
allHTTPHeaderFields
initWithURL:MIMEType:expectedContentLength:textEncodingName:
URLProtocol:didFailWithError:
client
baseURL
canInitWithRequest:
canonicalRequestForRequest:
registerClass:
_springCubicTimingParameters
cubicTimingParameters
springCubicTimingParameters
setSpringCubicTimingParameters:
standardTimingParameters
_basicAnimationForView:withKeyPath:
setTimingFunction:
_mediaTimingFunction
timingParameters
standardSpringAnimator
_mediaType
_hasRetrievedTokens
_retrievalTime
_availableArtworkToken
_fetchableArtworkToken
_fetchableArtworkSource
_entityType
_artworkType
_libraryArtwork
initWithLibrary:identifier:entityType:artworkType:
initWithLibrary:identifier:entityType:artworkType:mediaType:
initWithIdentifier:entityType:artworkType:
initWithML3Library:identifier:entityType:artworkType:
availableArtworkToken
setAvailableArtworkToken:
fetchableArtworkToken
setFetchableArtworkToken:
fetchableArtworkSource
setFetchableArtworkSource:
libraryArtwork
setLibraryArtwork:
retrievalTime
setRetrievalTime:
entityType
artworkType
clearFailedFetchableToken
promoteFetchableArtworkTokenIfNeeded
_onQueue_updateTokens
retrieveBestArtworkTokensForEntityPersistentID:entityType:artworkType:retrievalTime:completionHandler:
_stateLock
_validSizes
originalFileURL
imageFileURLForSize:
imageFileURLForEffect:
validSizes
effectsMetadata
setEffectsMetadata:
stateLock
setInterestDictionary:
interestDictionary
fileURLForEffect:
fileURLForSize:
artworkExistsForRequest:
needsToFetchArtworkForRequest:
availableArtworkWithRequest:
fetchArtworkForRequest:completionHandler:
cancelFetchingArtworkForRequest:
fetchArtworkInfoForRequest:completionHandler:
sourceType
initWithToken:artworkType:musicLibrary:
isArtworkTokenAvailable:
MP_artworkType
_playlistEntry
setPlaylistEntry:
playlistEntry
sagaAccountID
setSagaLastPlaylistPlayDataUploadDate:
sagaDatabaseUserVersion
setSagaDatabaseUserVersion:
storefrontIdentifier
setStorefrontIdentifier:
sagaOnDiskDatabaseRevision
setSagaOnDiskDatabaseRevision:
sagaLastLibraryUpdateTime
setSagaLastLibraryUpdateTime:
sagaLastSubscribedContainersUpdateTime
setSagaAccountID:
setSagaLastSubscribedContainersUpdateTime:
clearSagaCloudAccountID
clearSagaLastItemPlayDataUploadDate
clearSagaLastPlaylistPlayDataUploadDate
sagaLastItemPlayDataUploadDate
setSagaLastItemPlayDataUploadDate:
sagaLastPlaylistPlayDataUploadDate
initWithPlaylist:
_database
_observers
payloadForRelatedEntityWithIdentifierSet:
importObjectsFromRequest:options:error:
modelObjectMatchingIdentifierSet:propertySet:
relatedIdentifierSetsForParentIdentifierSet:childKey:
assetsMatchingIdentifierSet:
assetsWithMiniSINFsMatchingIdentifierSet:
enumerateAssetsMissingSINFsForHashedPersonID:usingBlock:
importAssetsFromRequest:error:
_initWithDatabaseCreationBlock:
_assetsMatchingIdentifierSet:query:
_createDatabaseSchema
accessQueue
database
observers
executeStatement:error:
statementWithString:error:
nextObjectWithError:
resultsForStatement:
bindStringValue:toParameterNamed:
initWithMemory
jsonValueAtColumnIndex:error:
bindInt64Value:toParameterNamed:
transactionWithName:
_transaction
_insertObjectStatement
_insertObjectRelationshipStatement
_insertAssetURLStatement
_removeRelationshipsStatement
_updateMiniSINFStatement
importObject:type:identifiers:source:expiration:
importAssetURL:forIdentifiers:flavor:
importAssetMiniSINF:forIdentifier:hashedPersonID:flavor:
relateIdentifiers:toParentIdentifiers:childKey:order:
removeRelationshipsForParentIdentifiers:childKey:
bindDataValue:toParameterNamed:
bindJSONValue:toParameterNamed:error:
stringValueAtColumnIndex:
int64ValueAtColumnIndex:
database:didFinishImportRequest:
database:didFailImportRequest:withErrror:
sharedServerObjectDatabase
prefersInMemoryDatabase
setPrefersInMemoryDatabase:
initWithURL:error:
URLByDeletingPathExtension
URLsForDirectory:inDomains:
_flavor
_miniSINF
initWithIdentifier:hashedPersonID:flavor:url:miniSINF:
initWithSQLRowResult:
hashedPersonID
miniSINF
dataValueAtColumnIndex:
_URLRequests
_requestedItemIdentifiers
_itemMetadataRequestReason
initWithURLRequest:
initWithURLRequests:
URLRequest
initWithRequestedItemIdentifiers:reason:
URLRequests
requestedItemIdentifiers
itemMetadataRequestReason
_rentalTrackerQueue
_rentals
addRentalWithItemID:databaseID:
removeRentalWithItemID:
removeAllRentalsForDatabaseID:
_saveRentals
writeToFile:atomically:
startWithCompletionBlock:
initWithAccountIdentifier:rentalKeyIdentifier:
dictionaryWithContentsOfFile:
_contentLimitsEnforced
_endpointAvailable
_enforcedContentItemsCount
_enforcedContentTreeDepth
contentLimitsEnabled
enforcedContentItemsCount
setEnforcedContentItemsCount:
enforcedContentTreeDepth
setEnforcedContentTreeDepth:
contentLimitsEnforced
setContentLimitsEnforced:
endpointAvailable
setEndpointAvailable:
_requestedGroupProperties
_itemBuilder
_lastUpdatedDateFormatter
_isListenNow
_requestedGroupPropertySet
_requestedItemPropertySet
_storeItemMetadataResults
_flatSectionedItems
initWithRequestedGroupPropertySet:requestedItemPropertySet:storeItemMetadataResults:flatSectionedItems:storeBagDictionary:isListenNow:
initializeRequestedGroupProperties
modelObjectForRecentlyPlayedArray:userIdentity:
modelObjectForItemsArray:userIdentity:
modelObjectForRecommendationDictionary:userIdentity:
requestedGroupPropertySet
requestedItemPropertySet
storeItemMetadataResults
flatSectionedItems
setSectionIndex:
setLastUpdatedDate:
setGroupType:
allSupportedGroupProperties
sinfs
filterAvailableContentGroups:withOptions:
_keybagURL
_accountID
_accountTokenData
_downloaderAccountID
_downloaderAccountTokenData
_familyAccountID
_requests
_activeRequest
_atLeastOneAuthorizationRequestSuccessful
authorizationRequest:didReceiveResponse:
request:didFailWithError:
requestDidFinish:
initWithKeybagURL:accountID:accountTokenData:
initWithKeybagURL:accountID:accountTokenData:downloaderAccountID:downloaderAccountTokenData:familyAccountID:
_errorIsFairPlayError:
_performMachineAuthorization
_processNextAuthorizationRequest
setDataProvider:
setKeybagPath:
initWithAuthorizationToken:accountIdentifier:
bodyData
_scheduleSupportedCommandsChanged
_startMediaRemoteSync
_stopMediaRemoteSync
_activeCommands
_mediaRemoteCommandHandler
_scheduledSupportedCommandsChangedNotification
_canBeNowPlayingApplication
_processingEvent
_stateHandler
_disableAutomaticCanBeNowPlaying
_wantsSerializedEventDelivery
_pauseCommand
_playCommand
_stopCommand
_togglePlayPauseCommand
_enableLanguageOptionCommand
_disableLanguageOptionCommand
_nextTrackCommand
_previousTrackCommand
_skipForwardCommand
_skipBackwardCommand
_seekForwardCommand
_seekBackwardCommand
_ratingCommand
_changePlaybackRateCommand
_likeCommand
_dislikeCommand
_bookmarkCommand
_changePlaybackPositionCommand
_changeRepeatModeCommand
_changeShuffleModeCommand
_specialSeekForwardCommand
_specialSeekBackwardCommand
_advanceShuffleModeCommand
_advanceRepeatModeCommand
_createRadioStationCommand
_setPlaybackQueueCommand
_prepareForSetPlaybackQueueCommand
_insertIntoPlaybackQueueCommand
_removeFromPlaybackQueueCommand
_reorderQueueCommand
_playItemInQueueCommand
_addNowPlayingItemToLibraryCommand
_addItemToLibraryCommand
_setPlaybackSessionCommand
_preloadPlaybackSessionCommand
_setPriorityForPlaybackSessionCommand
_discardPlaybackSessionCommand
_reshuffleCommand
_changeQueueEndActionCommand
remoteCommandDidMutatePropagatableProperty:
_pushMediaRemoteCommand:withOptions:completion:
dispatchCommandEvent:completion:
_flushEventQueue
getPendingCommandTypesWithCompletion:
pauseCommand
playCommand
stopCommand
togglePlayPauseCommand
enableLanguageOptionCommand
disableLanguageOptionCommand
nextTrackCommand
previousTrackCommand
skipForwardCommand
skipBackwardCommand
seekForwardCommand
seekBackwardCommand
ratingCommand
changePlaybackRateCommand
likeCommand
dislikeCommand
bookmarkCommand
changePlaybackPositionCommand
changeRepeatModeCommand
changeShuffleModeCommand
specialSeekForwardCommand
specialSeekBackwardCommand
advanceShuffleModeCommand
advanceRepeatModeCommand
createRadioStationCommand
setPlaybackQueueCommand
prepareForSetPlaybackQueueCommand
insertIntoPlaybackQueueCommand
removeFromPlaybackQueueCommand
reorderQueueCommand
playItemInQueueCommand
addNowPlayingItemToLibraryCommand
addItemToLibraryCommand
setPlaybackSessionCommand
preloadPlaybackSessionCommand
setPriorityForPlaybackSessionCommand
discardPlaybackSessionCommand
reshuffleCommand
changeQueueEndActionCommand
_createRemoteCommandWithConcreteClass:mediaRemoteType:
_commandTargetsDidChangeNotification:
disableAutomaticCanBeNowPlaying
setDisableAutomaticCanBeNowPlaying:
wantsSerializedEventDelivery
setWantsSerializedEventDelivery:
_numberOfCommandCentersWithTargets
commandCenterForPlayerID:
updateLaunchCommandsWithConfigurationHandler:
sharedCommandCenter
_homeSharingID
_rentalID
initWithItemID:homeSharingID:rentalID:accountID:
_assetDownloadSessionToDownloadSession
_assetDownloadSessionToPlaybackMetadata
_assetDownloadSessionsPendingStart
_pausingAllDownloadsTransactionCount
_prioritizedDownloadTokens
_streamingOperationQueue
beginPausingAllDownloadSessions
endPausingAllDownloadSessions
acquireDownloadSessionWithRequest:completionHandler:
releaseDownloadSession:
startDownloadSession:
_assetDownloadSessionDownloadFailedNotification:
_assetDownloadSessionDownloadSucceededNotification:
_assetDownloadSessionFileSizeAvailableNotification:
_playbackItemMetadataNetworkConstraintsDidChangeNotification:
_assetDownloadSessionForDownloadSession:
_assetQualityForAssetFlavor:
_auditAssetDownloadSession:withNetworkConstraints:
_auditNetworkConstraintsForAssetDownloadSession:playbackItemMetadata:
_downloadKeyCookieWithValue:URL:
_getNetworkConstraintsForPlaybackItemMetadata:withCompletionHandler:
_handleNewDownloadSession:withAssetDownloadSession:forPlaybackItemMetadata:
_handlePrioritizationForFinishingAssetDownloadSession:
_newDownloadSessionForRequest:sourceURL:downloadKey:sinfs:pathExtension:assetFlavor:allowAssetCaching:allowITunesContentConfiguration:protectionType:returningAssetDownloadSession:
_postFailedForDownloadSession:
_postFailedForDownloadSession:withError:
_preferredAssetFlavorsForAssetQuality:
_removeFileForAssetDownloadSession:playbackItemMetadata:
_registerForNotificationsForAssetDownloadSession:
_registerForNotificationsForPlaybackItemMetadata:
_sinfsByCleaningSinfs:
_unregisterDownloadSession:
_unregisterForNotificationsForAssetDownloadSession:
_unregisterForNotificationsForPlaybackItemMetadata:
has720pCapability
has1080pCapability
assetDownloadSessionWithURL:destinationURL:options:
_saveCookies
setCookie:
sharedHTTPCookieStorage
cookieWithProperties:
sizeLimitForNetworkType:
isCurrentNetworkLinkExpensive
availableFileSize
deleteAutoFilledTracksOfAtLeastTotalSize:urgency:respectSongMattress:
writeToFile:options:error:
getLeaseSessionWithRequestContext:completionHandler:
performPlaybackRequest:completionHandler:
setAssetSourceStorefrontID:
initWithRequestContext:
initWithRequestContext:storeSubscriptionAdamID:
fileAssets
fileAssetWithFlavorType:
hlsAsset
itemWithStoreAdamID:
sharedDownloadSessionController
__available_KEY
__protectedContentSupportStorageFileURL_KEY
__URL_KEY
_additionalTrackMetadata
initWithStoreItemID:additionalTrackMetadata:
storeItem
additionalTrackMetadata
_storeItem
initWithLookupDictionary:additionalTrackMetadata:
_addToCloudLibrary
initWithImportElements:usingCloudLibraryDestination:
initWithImportElements:referralObject:usingCloudLibraryDestination:
addToCloudLibrary
exportedInterface
serviceViewControllerInterface
viewServiceDidTerminateWithError:
_television
initWithTelevision:
television
_viewController
_navController
_viewControllerForOrientation
initWithAVItem:completionHandler:
setViewControllerForOrientation:
viewControllerForOrientation
_setIgnoreAppSupportedOrientations:
_avItem
_hasAudio
_hasSubtitles
_originalAudioTrack
_originalSubtitleTrack
_newAudioTrack
_newSubtitleTrack
_backdropView
viewDidLayoutSubviews
_configurePopover
_applyChanges
_trackAtIndexPath:
setCompositingFilter:
textLabel
visibleCells
dequeueReusableCellWithIdentifier:
setTitleTextAttributes:
setTranslucent:
setBarStyle:
navigationController
insertSubview:below:
initWithPrivateStyle:
setSeparatorColor:
supportsModelClass:
_identifierSets
setModelClass:
identifierSets
setIdentifierSets:
_produceResponseWithRecentlyPlayedArray:completion:
setCachePolicy:
_explicitTrack
_likeStateEnabled
_album
_artist
_durationFromExternalMetadata
_mainTitle
_artworkCatalogBlock
setAlbum:
setArtist:
setDurationFromExternalMetadata:
setExplicitTrack:
setLikedStateEnabled:
setMainTitle:
setSupportsLikedState:
setTailPlaceholder:
setArtworkCatalogBlock:
anyObject
flattenedGenericObject
podcastEpisode
podcast
genericObjectWithModelObject:
relationshipKeyForGenericObjectType:
kindWithRelationshipKinds:
__playlistEntry_KEY
__tvEpisode_KEY
__podcast_KEY
__podcastEpisode_KEY
setPodcastEpisode:
setPodcast:
setMediaClip:
_relationshipKinds
relationshipKinds
pathForResource:ofType:
dataWithContentsOfFile:
_sectionMoves
_updatedSectionMoveFromIndexes
_itemMoves
_updatedItemMoveFromIndexPaths
_isFlatCollection
_insertedSections
_deletedSections
_updatedSections
_insertedItemIndexPaths
_deletedItemIndexPaths
_updatedItemIndexPaths
hasChanges
appendSectionMoveFromIndex:toIndex:updated:
removeSectionMoveFromIndex:
enumerateSectionMovesWithBlock:
enumerateSectionMovesUsingBlock:
appendItemMoveFromIndexPath:toIndexPath:updated:
removeItemMoveFromIndexPath:
enumerateItemMovesWithBlock:
enumerateItemMovesUsingBlock:
insertedIndexes
deletedIndexes
updatedIndexes
enumerateMovesWithBlock:
enumerateMovesUsingBlock:
applyUIKitWorkarounds
insertedSections
setInsertedSections:
deletedSections
setDeletedSections:
updatedSections
setUpdatedSections:
insertedItemIndexPaths
setInsertedItemIndexPaths:
deletedItemIndexPaths
setDeletedItemIndexPaths:
updatedItemIndexPaths
setUpdatedItemIndexPaths:
removeAllIndexes
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
_preventStoreItemMetadataCaching
modelObjectWithStoreItemMetadata:
modelObjectWithStoreItemMetadata:sourceModelObject:
modelObjectWithStorePlatformDictionary:
modelObjectWithStoreItemMetadata:userIdentity:
modelObjectWithStorePlatformDictionary:userIdentity:
preventStoreItemMetadataCaching
setPreventStoreItemMetadataCaching:
availableMediaCharacteristicsWithMediaSelectionOptions
createLanguageOptionGroups
makeNowPlayingInfoLanguageOption
createLanguageOptions
mediaCharacteristics
extendedLanguageTag
_languageOptionIdentifier
defaultOption
allowsEmptySelection
makeNowPlayingInfoLanguageOptionGroup
mpLoadValuesAsynchronouslyForKeys:completionQueue:completionHandler:
_cloudItemIDList
addCloudItemID:idType:
insertCloudItemID:idType:atIndex:
ICCloudItemIDList
cloudItemIDList
setCloudItemIDList:
cloudItemIDListForPlaylist:
_active
_cloudEnabled
_jaliscoGeniusEnabled
_preferencesChangedNotifyTokenIsValid
_canShowCloudDownloadButtons
_canDefaultMediaLibraryShowCloudContent
_canShowCloudMusic
_canShowCloudVideo
_cloudEnabledValid
_cloudLockerAccount
_purchaseHistoryAccount
_updateInProgress
_initialImport
_cloudLibraryUpdateInProgress
_cloudLibraryInitialImport
_jaliscoUpdateInProgress
_jaliscoInitialImport
_preferencesChangedNotifyToken
_cloudClient
_cloudAvailabilityController
_activeCount
_cloudClientCallbackQueue
_addToPlaylistBehaviorChangedObserver
canShowCloudDownloadButtonsDidChangeNotification:
canShowCloudTracksDidChangeNotification:
hasProperNetworkConditionsToShowCloudMediaDidChangeNotification:
isCellularDataRestrictedDidChangeNotification:
authenticatedDidChangeNotification:
activeUserDidChangeNotification:
enableICMLErrorReasonChange:
hasProperNetworkConditionsToPlayMedia
hasProperNetworkConditionsToShowCloudMedia
isCellularDataRestrictedForMusic
shouldProhibitMusicActionForCurrentNetworkConditions
isCellularDataRestrictedForVideos
shouldProhibitVideosActionForCurrentNetworkConditions
isCellularDataRestrictedForStoreApps
shouldProhibitStoreAppsActionForCurrentNetworkConditions
isCellularDataRestricted
shouldProhibitActionsForCurrentNetworkConditions
canShowCloudDownloadButtons
canDefaultMediaLibraryShowCloudContent
canShowCloudMusic
canShowCloudVideo
hasCloudLockerAccount
hasPurchaseHistoryAccount
updateSubscribedPlaylistWithSagaID:ignoreMinRefreshInterval:completionHandler:
createPlaylistWithPersistentID:properties:trackList:completionHandler:
sdk_createPlaylistWithPersistenID:properties:tracklist:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:completionHandler:
setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:toPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:completionHandler:
uploadCloudPlaylistProperties
removePlaylistsWithSagaIDs:completionHandler:
publishPlaylistWithSagaID:completionHandler:
uploadArtworkForPlaylist:completionHandler:
setItemProperties:forSagaID:
uploadCloudItemProperties
setCollectionProperties:forCollectionWithPersistentID:groupingType:completionHandler:
addStoreItemWithAdamID:completionHandler:
addStoreItemWithAdamID:referralObject:completionHandler:
sdk_addStoreItemWithOpaqueID:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
removeItemsWithSagaIDs:completionHandler:
loadArtworkForEntityPersistentID:entityType:artworkType:artworkSourceType:completionHandler:
loadArtworkInfoForEntityPersistentID:entityType:artworkType:artworkSourceType:completionHandler:
deprioritizeArtworkRequestForEntityPersistentID:entityType:artworkType:artworkSourceType:
becomeActiveAndWaitUntilDone:
resignActive
isActive
isInitialImport
isCloudLibraryInitialImport
isJaliscoInitialImport
isUpdateInProgress
isCloudLibraryUpdateInProgress
isJaliscoUpdateInProgress
loadGeniusItemsForSagaID:completionHandler:
loadUpdateProgressWithCompletionHandler:
loadCloudMusicLibraryUpdateProgressWithCompletionHandler:
loadJaliscoLibraryUpdateProgressWithCompletionHandler:
loadLastKnownEnableICMLErrorStatusWithCompletionHander:
isEnablingCloudLibraryDestructive
enableCloudLibraryWithOptions:completionHandler:
disableCloudLibraryWithCompletionHandler:
disableCloudLibraryWithReason:completionHandler:
isAutomaticDownloadsEnabled
hasSetPreferenceForAutomaticDownloads
enableAutomaticDownloadsWithCompletionHandler:
disableAutomaticDownloadsWithCompletionHandler:
cloudAddToPlaylistBehavior
setCloudAddToPlaylistBehavior:completionHandler:
hideItemsWithPurchaseHistoryIDs:completionHandler:
setItemProperties:forPurchaseHistoryID:
updateJaliscoMediaLibraryWithReason:completionHandler:
enablingJaliscoGeniusRequiresTerms
fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:
setLikedState:forEntityWithStoreID:withMediaType:
setLikedState:forEntityWithStoreID:withMediaType:completion:
setLikedState:forAlbumWithStoreID:
setLikedState:forAlbumWithStoreID:completion:
setLikedState:forPlaylistWithGlobalID:
setLikedState:forPlaylistWithGlobalID:completion:
_loadIsJaliscoGeniusSupportedWithCompletion:
_loadIsSagaAuthenticatedWithCompletion:
_initializeUpdateInProgressState
_referralForModelObject:
_becomeActiveAndWaitUntilDone:
_resignActive
isCloudEnabled
setCloudEnabled:
cloudClient
isJaliscoGeniusEnabled
cloudAvailabilityController
activeCount
setActiveCount:
preferencesChangedNotifyToken
setPreferencesChangedNotifyToken:
preferencesChangedNotifyTokenIsValid
setPreferencesChangedNotifyTokenIsValid:
cloudClientCallbackQueue
addToPlaylistBehaviorChangedObserver
setCanShowCloudDownloadButtons:
setCanDefaultMediaLibraryShowCloudContent:
setCanShowCloudMusic:
setCanShowCloudVideo:
isCloudEnabledValid
setCloudEnabledValid:
setCloudLockerAccount:
setPurchaseHistoryAccount:
setUpdateInProgress:
setInitialImport:
setCloudLibraryUpdateInProgress:
setCloudLibraryInitialImport:
setJaliscoUpdateInProgress:
setJaliscoInitialImport:
setUpdateJaliscoInProgressChangedHandler:
setUpdateSagaInProgressChangedHandler:
_controllerWithUserIdentity:createIfRequired:
sharedCloudController
referralWithAlbumAdamID:
referralWithPlaylistGlobalID:
loadIsJaliscoUpdateInProgressWithCompletionHandler:
updateJaliscoInProgressChangedHandler
loadIsSagaUpdateInProgressWithCompletionHandler:
updateSagaInProgressChangedHandler
isAuthenticatedWithCompletionHandler:
loadIsJaliscoGeniusSupportedWithCompletionHandler:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
sharedCloudContentTasteRequestListener
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
setContentTaste:forMediaItem:storeIdentifier:configuration:withCompletionHandler:
initWithRequestContext:seedItemID:isLibraryID:maxResultCount:
loadJaliscoGeniusCUIDWithCompletionHandler:
updateJaliscoLibraryWithReason:completionHandler:
canSetItemProperty:
handleAutomaticDownloadPreferenceChangedForMediaKindMusic:withCompletionHandler:
isAutomaticDownloadsEnabledForMediaKindMusic
enableCloudLibraryWithPolicy:startInitialImport:completionHandler:
isAuthenticated
loadJaliscoUpdateProgressWithCompletionHandler:
deprioritizeAlbumArtistHeroImageForPersistentID:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeContainerArtworkForSagaID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeScreenshotForSagaID:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeItemArtworkForSagaID:
loadArtworkInfoForSubscriptionContainerPersistentID:completionHandler:
loadArtworkInfoForContainerSagaID:completionHandler:
loadScreenshotInfoForSubscriptionPersistentID:completionHandler:
loadScreenshotInfoForPurchaseHistoryID:completionHandler:
loadScreenshotInfoForSagaID:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentID:completionHandler:
loadArtworkInfoForPurchaseHistoryID:completionHandler:
loadArtworkInfoForSagaID:completionHandler:
JSONObjectWithData:options:error:
importAlbumArtistHeroImageForPersistentID:completionHandler:
importArtistHeroImageForPersistentID:completionHandler:
importSubscriptionContainerArtworkForPersistentID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
importSubscriptionScreenshotForPersistentID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
importScreenshotForSagaID:completionHandler:
importSubscriptionItemArtworkForPersistentID:completionHandler:
importItemArtworkForPurchaseHistoryID:completionHandler:
importItemArtworkForSagaID:completionHandler:
addStoreItemWithAdamID:referral:completionHandler:
setAlbumProperties:forAlbumPersistentID:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
canSetPlaylistProperty:
sdk_createPlaylistWithPersistentID:properties:tracklist:completionHandler:
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:completionHandler:
isMediaApplication
observerWithDistributedName:localName:queue:
migrateCellularDataPreferencesIfNeeded
_allowsExternalPlaybackRevisionID
_isExternalPlaybackActive
_pausedForPlaybackQueueTransaction
_lastPickedRoute
_playbackQueueCommitHandler
_playbackQueueTransactionCount
_queuedOperations
_rateBeforePlaybackQueueTransaction
_routeDidChangeDuringPlaybackQueueTransaction
_status
_defaultItemEQPresetType
_outputObscuredDueToInsufficientExternalProtection
_usesAudioOnlyModeForExternalPlaybackRevisionID
_usesExternalPlaybackWhileExternalScreenIsActiveRevisionID
_rawRate
actionAtItemEnd
addBoundaryTimeObserverForTimes:queue:usingBlock:
addPeriodicTimeObserverForInterval:queue:usingBlock:
advanceToNextItem
beginPlaybackQueueTransactionAndPause:
isPlaybackQueueTransactionActive
commitPlaybackQueueTransaction
_externalProtectionStatus
insertItem:afterItem:
prepareItem:withCompletionHandler:
setCurrentPlaybackQueueTransactionDisplayTime:
seekToTime:
seekToTime:toleranceBefore:toleranceAfter:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
setActionAtItemEnd:
setAllowsExternalPlayback:shouldIgnorePlaybackQueueTransactions:
setMediaSelectionCriteria:forMediaCharacteristic:
setUsesExternalPlaybackWhileExternalScreenIsActive:shouldIgnorePlaybackQueueTransactions:
usesAudioOnlyModeForExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
playerAVAudioSession
outputObscuredDueToInsufficientExternalProtection
_CALayerDestinationIsTVOut
_currentItemDidChangeNotification:
_resumePlayback:
_setCALayerDestinationIsTVOut:
_setClientName:
setDefaultItemEQPresetType:
_setEQPreset:
_setExpectedAssetTypes:
_setPreferredLanguageList:
_setStoppingFadeOutDuration:
_setUserVolume:
_setWantsVolumeChangesWhenPausedOrInactive:
_userVolume
playbackQueueCommitHandler
setPlaybackQueueCommitHandler:
defaultItemEQPresetType
rawRate
setExpectedAssetTypes:
_resumePlayback:error:
setUsesExternalPlaybackWhileExternalScreenIsActive:
_setPausesAudioVisualPlaybackInBackground:
setPreparesItemsForPlaybackAsynchronously:
setAppliesMediaSelectionCriteriaAutomatically:
_setUsesLegacyAutomaticWaitingBehavior:
brandLogoArtworkCatalog
brandLogoArtworkCatalogBlock
__shortName_KEY
__curatorKind_KEY
__brandLogoArtworkCatalogBlock_KEY
__handle_KEY
_childOperation
_response
_startExecutingTimeStamp
_timeoutTimerSource
initWithRequest:responseHandler:
remainingTimeInterval
assertRunningInAccessQueue
dispatchAsync:
dispatchSync:
_finishWithResponse:error:
_executeItemMetadataLoadForRequestedItemIdentifiers:reason:requestContext:
_executeURLLoadWithRequest:storeBagDictionary:requestContext:
_executeURLLoadWithRequests:storeBagDictionary:requestContext:
_handleTimeout
_tearDownTimeoutTimerSource
_URLLoadRequestWithRequest:requestContext:
identity
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
serverCorrelationKey
serverEnvironment
initWithIdentity:clientInfo:
_encodingDelayInFrames
_encodingDrainInFrames
_heuristicInfo
_durationInFrames
_lastPacketsResync
durationInFrames
setDurationInFrames:
encodingDelayInFrames
setEncodingDelayInFrames:
encodingDrainInFrames
setEncodingDrainInFrames:
heuristicInfo
setHeuristicInfo:
lastPacketsResync
setLastPacketsResync:
_representedObjects
initWithUnpersonalizedContentDescriptors:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
propertiesForItemAtIndexPath:
setProperties:forItemAtIndexPath:
representedObjects
setRepresentedObjects:
libraryViewWithUserIdentity:
_representedObjectResults
_libraryResponse
setLibraryResponse:
_libraryResponseDidInvalidateNotification:
representedObjectResults
setRepresentedObjectResults:
libraryResponse
homeSharingAsset
trackArtworkCatalogsWithCount:
tracksTiledArtworkCatalogWithRows:columns:
tiledArtworkRequest
kindWithPlaylistEntryKind:options:
kindWithVariants:playlistEntryKind:options:
__hasCleanContent_KEY
__curatorPlaylist_KEY
__owner_KEY
__publicPlaylist_KEY
__visiblePlaylist_KEY
__subscribed_KEY
__userEditableComponents_KEY
__shareShortURL_KEY
__releaseDateComponents_KEY
__lastModifiedDateComponents_KEY
__tiledArtworkRequest_KEY
__cloudVersionHash_KEY
_playlistEntryKind
playlistEntryKind
_requestURLFromBagDictionary:
_urlStringForKey:inBag:
setHTTPBody:
_stringRepresentationForHTTPBodyType:
_stringRepresentationForHTTPMethod:
cancelRequest:
_effectiveNetworkTypeForCloudPlayback
_networkType
_lastAverageBitrate
adjustEffectiveNetworkTypeUsingPreviouslyPlayedItem:
effectiveNetworkTypeForPlayback
networkType
lastAverageBitrate
_onQueueEffectiveNetworkTypeForAverageBitrate:
_onQueueUpdateEffectiveNetworkTypesForPlayback
sharedNetworkPlayabilityMonitor
_numberOfObservers
_requestRevision
_shouldAutomaticallyLoad
_needsReload
_cancelToken
_retryInterval
_retryTimer
_lastError
_pendingResponse
response
setResponse:
beginAutomaticResponseLoading
endAutomaticResponseLoading
setNeedsReload
setNeedsReloadForSignificantRequestChange
reloadIfNeeded
_responseDidInvalidate:
_onQueue_scheduleRetryAfterInterval:
_onQueue_reloadIfNeeded
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
didFinishLoadingRequestForController:
willBeginLoadingRequestForController:
artworkCatalogsWithMaximumCount:
tiledArtworkCatalogWithRows:columns:
_logicalLeaderOutputDevice
_outputDevices
initWithOutputDevices:
isGroupLeader
_anyOutputDevicePassesMRFunction:
_anyOutputDevicePassesTest:
outputDevices
logicalLeaderOutputDevice
clusterType
pickableRouteTypeForOutputDevice:
logicalLeaderFromOutputDevices:
localDeviceUID
_preferredStoreOfferVariant
_storeOfferResponse
_localItemsQuery
_collectionWithCompletionItemsOffering
_presentationStyle
_storeURL
initWithResponse:localItemsQuery:
copyByInvalidatingCalculatedContent
_loadOfferingData
setPreferredStoreOfferVariant:
preferredStoreOfferVariant
collectionWithCompletionItems
presentationStyle
storeURL
itemsWithCompletionsCollection
setDefaultOfferVariant:
mergedCollection
initWithOfferedCollection:localItemsQuery:preferredStoreOfferVariant:
_offeredCollection
_mergedCollection
localItems
offeredCollection
defaultOfferVariant
offeringWithResponse:localItemsQuery:
setScheme:
setHost:
_requestedItemProperties
_subgroupBuilder
initWithRequestedPropertySet:storeItemMetadataResults:flatSectionedItems:storeBagDictionary:isListenNow:
modelObjectForRecommendationChildDictionary:parentGroup:subgroupsAccumulator:userIdentity:
storeItemMetadataWithMusicAPIMetadataDictionary:
convertToStoreItemMetadataDictionary:
setBackedByStoreItemMetadata:
setSubgroupIndex:
setParentGroup:
_wantsArtwork
_albumItemsQuery
_tokenID
_responseBlock
_storeLookupID
initWithAlbumItemsQuery:tokenID:wantsArtwork:responseBlock:
storeLookupIDString
lookupRequestForStorePlaylistIdentifier:
lookupRequestForAlbumWithRepresentativeItem:
newLookupRequest
_specificationForArtworkSizesToRequest
albumItemsQuery
tokenID
responseBlock
wantsArtwork
storeLookupID
indexOfObject:inSortedRange:options:usingComparator:
storeLookupIDForAlbumItemsQuery:
_offeringCache
_lookupItemsByStoreLookupID
_lookupItemsByTokenID
_nextTokenID
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
_defaultMediaLibraryDidChangeNotification:
_storeAccountsDidChangeNotification:
_sanitizedQuery:
completionOfferingForAlbumItemsQuery:
cancelCompletionOfferingLookup:
startCompletionOfferingLookupForAlbumItemsQuery:responseBlock:
_dumpCache
_onQueueGetInsertedLookupItemForAlbumItemsQuery:requestAlreadyIssued:responseBlock:
_onQueueRemoveLookupItem:
_onQueueRemoveLookupItemsForStoreLookupID:
_onQueueCancelCompletionOfferingLookupTokenID:
_onQueuePostLookupCompletedForLookupItem:offering:error:
_lookupCompletedWithResponse:lookupItem:error:
_onQueueStartCompletionOfferingLookupForAlbumItemsQuery:responseBlock:
_onQueueCompletionOfferingForAlbumItemsQuery:
_onQueueSetCachedCompletionOffering:forStoreLookupID:
_onQueueClearCache
_getIsCMCDisabled:disabledReason:
_isCmcEnabled
sharedConnection
storeOfferingController
setWantsArtwork:
effectiveBoolValueForSetting:
_ubiquitousIdentifier
_bookmarkTimestamp
_userPlayCount
initWithUbiquitousIdentifier:
setBookmarkTimestamp:
setBookmarkTime:
setUserPlayCount:
hasBeenPlayedModified
userPlayCountModified
bookmarkTimeModified
bookmarkTimestampModified
ubiquitousIdentifier
bookmarkTimestamp
userPlayCount
ubiquitousIdentifierWithStoreAdamID:
ubiquitousIdentifierWithUniqueStoreID:
setError:
_tileArtworkVisualIdenticalityIdentifiers
tileArtworkVisualIdenticalityIdentifiers
setTileArtworkVisualIdenticalityIdentifiers:
_lookupCollectionPropertyValues
_contentRating
_offerArtworkDescriptor
_offerArtworkDescriptorOnceToken
_pid
_discNumber
_trackNumber
initWithLookupLookupCollectionPropertyValues:preferredStoreOfferVariant:itemID:
_offeredItemAlreadyExists
isDownloadable
buyOfferForVariant:
offerArtworkDescriptor
_lookupOfferDictionaries
mediaItemsWithStoreLookupCollectionPropertyValues:preferredStoreOfferVariant:
canMergeStoreOfferWithLocalMediaItems:
canRequestStoreOfferForLocalMediaItems:
mediaItemsByMergingStoreOfferMediaItems:localItems:
mediaItemsByRemovingRestrictedContentFromMediaItems:
distantPast
buyOffer
completionOfferForVariant:
isDownloadableStoreOffer
isPurchasableStoreOffer
replaceItemAndIdentifierSet:atIndex:
applyChanges:identifierSetLookupBlock:
itemAtIndex:
indexForItem:
identifierSetAtIndex:
identifierSetForItem:
itemForIdentifierSet:
setIdentifiers:
indexSetWithIndexesInRange:
MSVBase64UUIDString
addIndexes:
objectsAtIndexes:
firstIndex
mapTableWithKeyOptions:valueOptions:
copyWithNewIdentifier:
setReleaseDate:
deviceSpecificUserInfo
setDeviceSpecificUserInfo:
setAlbumArtistName:
albumName
setAlbumName:
setAlbumYear:
collectionIdentifier
setCollectionIdentifier:
directorName
setDirectorName:
info
setInfo:
localizedContentRating
setLocalizedContentRating:
profileIdentifier
setProfileIdentifier:
radioStationName
setRadioStationName:
seriesName
setSeriesName:
trackArtistName
setTrackArtistName:
artworkURL
setArtworkURL:
artworkURLTemplates
setArtworkURLTemplates:
localizedDurationString
setLocalizedDurationString:
setDiscNumber:
episodeNumber
setEpisodeNumber:
setSeasonNumber:
totalDiscCount
setTotalDiscCount:
totalTrackCount
setTotalTrackCount:
setTrackNumber:
setComposerName:
genreName
setGenreName:
radioStationStringIdentifier
setRadioStationStringIdentifier:
setExternalContentIdentifier:
isAlwaysLiveItem
setAlwaysLiveItem:
isSharableItem
setSharableItem:
isSteerable
setSteerable:
isLoading
setLoading:
numberOfChildren
setNumberOfChildren:
storeAlbumID
setStoreAlbumID:
storeArtistID
setStoreArtistID:
setStoreID:
storeSubscriptionID
setStoreSubscriptionID:
legacyUniqueID
setLegacyUniqueID:
setPlaylistType:
radioStationType
setRadioStationType:
episodeType
setEpisodeType:
editingStyleFlags
setEditingStyleFlags:
elapsedTime
setElapsedTime:
setPlaybackRate:
elapsedTimeTimestamp
collectionInfo
setCollectionInfo:
setMediaType:
auxiliaryNowPlayingInfo
calculatedElapsedTime
setElapsedTime:playbackRate:
hasLanguageOptions
setHasLanguageOptions:
availableLanguageOptions
setAvailableLanguageOptions:
currentLanguageOptions
setCurrentLanguageOptions:
invalidateLanguageOptions
setSections:
hasDescription
setHasDescription:
invalidateDescription
setHasLyrics:
setLyrics:
invalidateLyrics
hasArtwork
setHasArtwork:
invalidateArtwork
_mergeContentItem:
setExplicitItem:
shouldPushArtworkData
_algorithm
initWithImage:algorithm:
analyzeWithCompletionHandler:
_fallbackColorAnalysis
algorithm
colorWithITColor:
getWhite:alpha:
getRed:green:blue:alpha:
ITColor
MP_isArtworkColorAnalyzerLightColorForAlgorithm:
userInterfaceLayoutDirection
_modelObjectDelegate
_playbackPosition
modelObjectDelegate
setModelObjectDelegate:
purchaseBundleFilePath
qualityType
protectedContentSupportStorageFileURL
modelObjectPlaybackItemMetadataWillDeallocate:
requiredHomeSharingAssetProperties
requiredLocalFileAssetProperties
requiredPlaybackPositionProperties
requiredStoreAssetProperties
_accessOrderedRequests
_requestToCachedResponse
addCachedResponse:forRequest:
cachedResponseForRequest:
updateForPlaybackOfFileAsset:fromResponse:
laterDate:
sharedCache
_delegatedAccountID
_redownloadParameters
_cloudUniversalLibraryID
_storeCloudID
_storePurchasedAdamID
_storeRadioAdamID
accountID
setAccountID:
delegatedAccountID
setDelegatedAccountID:
requestType
setRequestType:
redownloadParameters
setRedownloadParameters:
setCloudUniversalLibraryID:
setStoreSubscriptionAdamID:
storeCloudID
setStoreCloudID:
setStorePurchasedAdamID:
storeRadioAdamID
setStoreRadioAdamID:
inputProtocols
outputProtocols
inputOperations
setInputOperations:
_middlewareOperationMap
_operations
operationsForMiddleware:
allMiddleware
allOperations
mapForRequest:
_methodDescriptionFromProtocol:selector:
_methodDescriptionFromProtocolHierarchy:selector:
setBuilderSelector:
getArgument:atIndex:
numberOfArguments
methodSignature
allocWithProtocol:
_middlewareEnumerator
_builderSelector
initWithMiddleware:protocol:
builderSelector
_addBuilderProtocol:
builderProxyForProtocol:
registerReturnType:returnValueBlock:
methodReturnType
_unmergedStoreMediaItems
_localCollection
_hasHiddenRestrictedContent
_collectionContentRating
_checkIsUsableOffer
initWithStoreOfferResponse:preferredStoreOfferVariant:offerMediaItems:localItemsQuery:
initWithStoreOfferResponse:preferredStoreOfferVariant:
copyByOverlayingMediaItemsWithItemsQuery:preferredStoreOfferVariant:
itemsByRemovingStoreOffers
countOfItemsByRemovingLocalItems
itemsByRemovingLocalItems
isCheaperToPurchaseIndividualItems
isCollectionOfferPresentable
_hasRestrictedContent
hasDownloadableStoreOfferItemsForVariant:
hasPurchasableStoreOfferItemsForVariant:
_loadLocalCollection
removeObjectsInArray:
indexesOfObjectsPassingTest:
_didSetTimeoutInterval
_clientPlatformIdentifier
_authenticationOptions
clientPlatformIdentifier
setClientPlatformIdentifier:
authenticationOptions
setAuthenticationOptions:
__bookmarkTime_KEY
__shouldRememberBookmarkTime_KEY
__hasBeenPlayed_KEY
__startTime_KEY
__stopTime_KEY
__storeUbiquitousIdentifier_KEY
__userPlayCount_KEY
hlsURL
_playbackContext
_replaceIntent
initWithPlaybackContext:
getPlaybackContextWithCompletion:
initWithRequestedGroupPropertySet:requestedItemPropertySet:storeItemMetadataResults:flatSectionedItems:
_itemCount
_startEntries
_sectionHeadEntryMap
_automaticallyReversesNonDestructiveDataSourceEdits
_annotationDelegate
performWithExclusiveAccess:
performWithExclusiveAccessAndReturnObject:
performWithExclusiveAccessAndReturnBOOL:
performWithExclusiveAccessAndReturnInteger:
initWithIdentifier:
_stitchWithPreviousEntry:list:cloneIndex:
_stitchLastItemEntryToHeadEntry:branchList:
_stitchPreviousEntry:toEntry:cloneIndex:
_encodeEntry:withExclusiveAccessToken:
enumeratorWithOptions:
enumeratorWithOptions:startPosition:endPosition:
addDataSource:section:afterHeadOfSection:completion:
allSectionIdentifiers
hasItem:inSection:
hasSection:
isDeletedItem:inSection:
dataSourceMoveItemToHead:inSection:
dataSourceMoveItem:afterItem:inSection:
dataSourceMoveItemToTail:inSection:
dataSourceUpdateSection:
_addBranchToEntry:entries:withExclusiveAccessToken:
_dataSourceInsertItems:fromSection:afterEntry:withExclusiveAccessToken:
_dataSourceMoveItem:inSection:afterEntry:withExclusiveAccessToken:
_entryForPosition:withExclusiveAccessToken:
_insertDataSourceHead:afterEntry:withExclusiveAccessToken:
_insertDataSource:forSection:afterEntry:withExclusiveAccessToken:
_itemEntry:sectionIdentifier:withExclusiveAccessToken:
_loadDataSource:forSection:completion:
_sectionDataSources
_startEntriesWithExclusiveAccessToken:
_tailEntryForSectionIdentifier:withExclusiveAccessToken:
_sectionHeadEntryMapWithExclusiveAccessToken:
_endEntryWithExclusiveAccessToken:
automaticallyReversesNonDestructiveDataSourceEdits
setAutomaticallyReversesNonDestructiveDataSourceEdits:
annotationDelegate
setAnnotationDelegate:
reloadSection:completion:
initWithSection:sectionedIdentifierList:existingItemIdentifiers:
_mutableItemIdentifiers
insertItemsAtHead:
insertItems:afterItem:
insertItemsAtTail:
moveItemToHead:
moveItem:afterItem:
moveItemToTail:
updateSection
updateItem:
applyChanges:itemLookupBlock:
mutableItemIdentifiers
setMutableItemIdentifiers:
enumerateRangesUsingBlock:
insertObjects:atIndexes:
encodableNextEntriesWithExclusiveAccessToken:
sortedArrayUsingDescriptors:
sortDescriptorWithKey:ascending:
_performWithoutRequiringExclusivity:
positionForItem:inSection:
positionForHeadOfSection:
positionForTailOfSection:
_offerDictionary
_regularPriceOffer
_mediaAssetDictionary
_entityPersistentID
_entityTitle
_passType
initWithStoreOfferDictionary:regularPriceOfferDictionary:passType:entityType:persistentID:title:
buyType
_isBuy
buyURL
displayTitle
actionDisplayTitle
requiresConfirmation
displayPrice
regularPriceDisplayPrice
downloadSize
storeOfferDictionary
entityPersistentID
entityTitle
passType
uppercaseStringWithLocale:
buyTypeForOfferDictionary:regularPriceOffer:
offerVariantResponseKeyForOfferVariant:
getBuyOfferDictionary:regularPriceOfferDictionary:inOfferDictionaries:variantString:
getBuyOfferDictionary:regularPriceOfferDictionary:inOfferDictionaries:variant:
bestOfferVariantInOfferDictionaries:withPreferredVariant:
_priceForOfferDictionary:
_shouldCreatePlaylist
_didSetPlaylistUserImage
_playlistEntries
_playlistDescription
_playlistName
_playlistUserImage
_publicPlaylist
_visiblePlaylist
_curatorPlaylist
_isOwner
_authorStoreIdentifier
_parentPlaylist
setPlaylistUserImage:
newOperationWithLocalPersistenceResponseHandler:completeResponseHandler:
playlistEntries
setPlaylistEntries:
playlistDescription
setPlaylistDescription:
playlistName
setPlaylistName:
playlistUserImage
isPublicPlaylist
setPublicPlaylist:
isVisiblePlaylist
setVisiblePlaylist:
isCuratorPlaylist
setCuratorPlaylist:
isOwner
setIsOwner:
authorStoreIdentifier
setAuthorStoreIdentifier:
parentPlaylist
setParentPlaylist:
shouldCreatePlaylist
setShouldCreatePlaylist:
didSetPlaylistUserImage
initWithRelatedMPModelClass:payloadTransformBlock:
mapRelationshipKey:toModelClass:payloadTransform:
translatorForKind:
_shouldObserveRoutingContextUIDChanges
_dismissalReason
_dismissHandler
_dismissHandlerWithReason
openConnection
setDismissalReason:
initWithRouteSharingPolicy:routingContextUID:
initWithConfiguration:shouldObserveRoutingContextUIDChanges:
present
listener
_reset
_updateAudioSessionRoutingContext
_audioSessionRoutingContextDidChangeNotification
_mediaControlsStyleForRouteSharingPolicy:
_MPRouteSharingPolicyToAVRouteSharingPolicy:
_dismissalReasonString:
_shouldUpdateStyleForCurrentConfigurationStyle:
dismissHandler
setDismissHandler:
setListener:
setConnection:
dismissHandlerWithReason
setDismissHandlerWithReason:
updateMediaControlsWithConfiguration:
routeSharingPolicy
anonymousListener
_endpoint
archivedDataWithRootObject:requiringSecureCoding:error:
_entityTranslator
_entityQueryResult
_musicCellularNetworkingAllowedNotifyToken
_videosPreferencesChangedToken
_networkUsageCount
_videosAllowsCellularStreaming
beginUsingNetwork
endUsingNetwork
isMusicCellularStreamingAllowed
setMusicCellularStreamingAllowed:
isVideoCellularStreamingAllowed
setVideoCellularStreamingAllowed:
isMusicCellularDownloadingAllowed
setMusicCellularDownloadingAllowed:
isStoreCellularNetworkingAllowed
isUsingNetwork
sharedNetworkObserver
roomURLWithRoomID:storeBagDictionary:
countForObject:
mediaSubTypes
mpIsOnlyAC3
mpIsSDH
_collectionRepresentativeItem
initWithCollectionRepresentativeItem:
collectionRepresentativeItem
setCollectionRepresentativeItem:
collectionLookupKeyForMediaProperty:
mediaValueForStoreLookupCollectionPropertyValues:mediaProperty:
contentRatingForCollectionPropertyValues:
offerDictionariesForLookupCollectionPropertyValues:
offerPassTypeForLookupCollectionPropertyValues:
albumOrderedChildItemIDsForLookupCollectionPropertyValues:
itemLookupKeyForMediaProperty:
offerLookupKeyForItemMediaProperty:
offerDictionaryWithPreferredAssetDictionaryInItemResponseDictionary:
assetLookupKeyForItemMediaProperty:
preferredAssetDictionaryInOfferDictionary:
localRepresentativeItemPropertyForMediaProperty:
contentRatingForCollectionPropertyValues:itemID:
hasMediaItemValuesForStoreLookupCollectionPropertyValues:itemID:
mediaValueForStoreLookupCollectionPropertyValues:itemID:mediaProperty:
offerArtworkDescriptorForLookupCollectionPropertyValues:itemID:
offerDictionariesForLookupCollectionPropertyValues:itemID:
mpShowBuysWithNoCompletionOffer
resultsDictionary
mpIsPersonalizedOffer
mpCompletionOfferResponseDictionaryWithLocalAlbumsCollection:
mpVerboseCMCLogging
mpFakeCompletionDataForBuys
initWithRequestedPropertySet:storeItemMetadataResults:flatSectionedItems:
_discoverySession
_callbackToken
_endpoints
initWithThrottlingEnabled:
discoverySessionConfiguration
setPickedRoute:withPassword:completion:
_endpointsDidChange:
setSerialQueue:
endpoints
setEndpoints:
initWithEndpointFeatures:
discoverySessionWithConfiguration:
setEnableThrottling:
_nullRef
_refValue
initWithCFType:
refValue
isNullRef
setNullRef:
_startHandler
initWithStartHandler:
startHandler
_storeAccountIdentifier
initWithStoreAccountIdentifier:
storeAccountIdentifier
_isServiceActive
_externallyActive
_beganUsingPlaybackPositionMetadata
_databaseHasBookmarkableContents
_applicationBecomingActive
_serviceQueue
_uppServiceProxy
_uppDomain
beginUsingPlaybackPositionMetadata
_applicationDidEnterForegroundNotification:
noteChangedPlaybackPositionMetadataForTrackPersistentID:isCheckpoint:
setExternallyActive:
externallyActive
playbackPositionForLocalEntityIdentifier:
playbackPositionForLocalEntityIdentifiers:
persistPlaybackPositionMetadataEntity:isCheckpoint:completion:
_playbackPositionEntityWithValuesFromMusicLibraryTrackPersistentID:
_onQueue_shouldBeActive
_onQueue_isEnabled
_onServiceQueue_connectedUPPServiceProxy
_onServiceQueue_resignActiveService
_onServiceQueue_becomeActiveService
_onServiceQueue_updateActiveServiceIfNeeded
isServiceActive
setServiceActive:
uppServiceProxy
setUppServiceProxy:
uppDomain
setUppDomain:
setBeganUsingPlaybackPositionMetadata:
databaseHasBookmarkableContents
setDatabaseHasBookmarkableContents:
applicationBecomingActive
beginAccessingPlaybackPositionEntities
endAccessingPlaybackPositionEntities
serviceForSyncDomain:
domainForSyncingMusicLibraryWithLibraryPath:
initWithPlaybackPositionDomain:ubiquitousIdentifier:foreignDatabaseEntityID:
playbackPositionDomain
persistPlaybackPositionEntity:isCheckpoint:completionBlock:
pullLocalPlaybackPositionForEntityIdentifiers:completionBlock:
sharedUbiquitousPlaybackPositionController
_ratingLevel
_ratingDescription
_ratingLabel
_ratingSystem
isRestrictedContent
isRestrictedPurchase
_isRatingSystemForApps:
_isRatingSystemForMovies:
_isRatingSystemForMusic:
_isRatingSystemForTV:
mediaPropertyContentRatingValue
ratingLevel
setRatingLevel:
ratingDescription
setRatingDescription:
ratingLabel
setRatingLabel:
ratingSystem
setRatingSystem:
ratingSystemFromString:
_mediaRemoteContentItem
initWithExternalRepresentation:
_initWithMediaRemoteContentItem:
createExternalRepresentation
subtitle
setSubtitle:
playbackProgress
setPlaybackProgress:
isContainer
setContainer:
setExplicitContent:
isStreamingContent
setStreamingContent:
isPlayable
setPlayable:
_postItemChangedNotificationWithDeltaBlock:
_loadArtwork:completion:
threadDictionary
isEqualToData:
isSuppressingChangeNotifications
performSuppressingChangeNotifications:
performChangeImmediately:
_artworkDescriptor
_localFilePath
_sinfs
localFilePath
setLocalFilePath:
setSinfs:
__hasSocialPosts_KEY
_needsStatusUpdate
_cloudController
_cloudServiceStatusController
initWithUserIdentity:
configureWithModelObject:
setConfiguration:identifyingModelObject:
_allowsExplicitContentDidChangeNotification:
_cloudLibraryEnabledDidChangeNotification:
_subscriptionStatusDidChangeNotification:
_updateInProgressDidChangeNotification:
MP_lightness
_radioController
isEnabled
stationCount
stationWithIdentifier:
addStationBasedOnTrackIDs:completion:
_radioAvailabilityDidChangeNotification:
_radioRecentStationsDidChangeNotification:
_radioModelDidChangeNotification:
_radioModel
sharedModel
startWithAddStationCompletionHandler:
setIncludeCleanTracksOnly:
initWithRadioTrackDictionary:useArtist:
stationWithID:
userStations
stationSortOrdering
defaultRadioLibrary
_storeItemMetadata
initWithStoreItemMetadata:
_valueFromMetadataForProperty:
storeItemMetadata
setStoreItemMetadata:
_size
initWithPersistentID:size:
signedRequestFromURLRequest:
requestWithDatabaseID:itemID:size:
_mrLanguageOption
initWithType:languageTag:characteristics:displayName:identifier:
initWithMRLanguageOption:
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
languageOptionType
languageTag
languageOptionCharacteristics
copyExternalRepresentation
isEqualToLanguageOption:
mrLanguageOption
_mrLanguageOptionGroup
initWithLanguageOptions:defaultLanguageOption:allowEmptySelection:
initWithMRLanguageOptionGroup:
languageOptions
defaultLanguageOption
allowEmptySelection
mrLanguageOptionGroup
_localizedName
_localizedDescription
initWithPlayParameters:
initWithModelStation:
initWithStation:
setUniqueIdentifier:
localizedName
setLocalizedName:
localizedDescription
setLocalizedDescription:
setStationStringID:
stationDescription
_expectedNotifications
_receivedNotifications
_notificationTimer
initWithDelegate:
ingestNotificationName:
_startNotificationTimerWithEventHandler:
_cancelNotificationTimerWithReason:
expectedNotifications
receivedNotifications
setReceivedNotifications:
notificationTimer
setNotificationTimer:
_handlers
_observing
_skipSerializedEventDelivery
_mediaRemoteCommandType
_commandCenterDelegate
initWithMediaRemoteCommandType:
setEnabled:
isSupportedForContentItemIdentifier:
isEnabledForContentItemIdentifier:
addTarget:action:
removeTarget:action:
removeTarget:
addTargetWithHandler:
isSupportedAndEnabled
hasTargets
invokeCommandWithEvent:completion:
createCommandInfoRepresentation
notifyPropagatablePropertyChanged
newCommandEvent
newCommandEventWithContentItemIdentifier:
newCommandEventWithPlaybackQueueOffset:
newCommandEventWithCommandType:options:
newSeekCommandEventWithType:
_mediaRemoteCommandInfoOptions
commandCenterDelegate
setCommandCenterDelegate:
isObserving
setObserving:
mediaRemoteCommandType
skipSerializedEventDelivery
setSkipSerializedEventDelivery:
methodForSelector:
remoteCommand:isEnabledForContentItemIdentifier:
remoteCommand:isSupportedForContentItemIdentifier:
_preferredIntervals
setPreferredIntervals:
newCommandEventWithInterval:
preferredIntervals
_localizedShortTitle
setLocalizedShortTitle:
setPresentationStyle:
newCommandEventWithState:
localizedShortTitle
_minimumRating
_maximumRating
setMinimumRating:
setMaximumRating:
newCommandEventWithRating:
minimumRating
maximumRating
_preferredRate
_supportedPlaybackRates
setSupportedPlaybackRates:
preferredRate
setPreferredRate:
newCommandEventWithPlaybackRate:
supportedPlaybackRates
_supportedRepeatTypes
_currentRepeatType
setCurrentRepeatType:
setSupportedRepeatTypes:
newCommandEventWithType:
newCommandEventWithType:preservesRepeatMode:
currentRepeatType
_supportedShuffleTypes
_currentShuffleType
setCurrentShuffleType:
setSupportedShuffleTypes:
newCommandEventWithType:preservesShuffleMode:
currentShuffleType
_registeredSpecializedQueues
_registeredQueueTypes
_registeredCustomQueueIdentifiers
_supportsSharedQueue
_upNextItemCount
setUpNextItemCount:
registerSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
unregisterSpecializedQueueIdentifier:
registerSupportedQueueType:
unregisterSupportedQueueType:
registerSupportedCustomQueueIdentifier:
unregisterSupportedCustomQueueIdentifier:
setSupportedSharedQueue:
upNextItemCount
_canBeControlledByScrubbing
setCanBeControlledByScrubbing:
newCommandEventWithPositionTime:
canBeControlledByScrubbing
newCommandEventWithInsertingContentItemID:afterContentItemID:
newCommandEventWithPreservesShuffleMode:
newCommandEventWithPreservesRepeatMode:
_currentPlaybackSessionIdentifier
_currentPlaybackSessionRevision
_exportableSessionTypes
_supportedSessionTypes
setCurrentPlaybackSessionIdentifier:
setExportableSessionTypes:
setSupportedSessionTypes:
currentPlaybackSessionIdentifier
currentPlaybackSessionRevision
setCurrentPlaybackSessionRevision:
exportableSessionTypes
supportedSessionTypes
_preloadedSessions
setPreloadedSessions:
preloadedSessions
_currentQueueEndAction
_supportedQueueEndActions
setCurrentQueueEndAction:
setSupportedQueueEndActions:
currentQueueEndAction
supportedQueueEndActions
_refreshURL
_groupRecommendation
refreshURL
setRefreshURL:
isGroupRecommendation
setGroupRecommendation:
sectionedItems
sectionIndex
timeIntervalSince1970
__groupType_KEY
__lastUpdatedDate_KEY
__sectionedItems_KEY
__sectionIndex_KEY
__subgroups_KEY
__loadAdditionalContentURL_KEY
__refreshURL_KEY
__displaysAsGridCellInCarPlay_KEY
kindWithKinds:
__position_KEY
__socialContributor_KEY
___artworkCatalog_KEY
_kinds
kinds
_additionalContentIdentifiers
_allAdditionalContentIdentifiersNeedingLookup
_storePlatformDataResults
_unavailableContentIdentifiers
_previousParser
_additionalStoreItemMetadataResponse
initWithRawResponseOutput:options:sectionBuilder:contentItemBuilder:userIdentity:
initWithPreviousParser:additionalStoreItemMetadataResponse:options:sectionBuilder:contentItemBuilder:userIdentity:
additionalContentIdentifiers
allAdditionalContentIdentifiersNeedingLookup
_parse
_parseFeaturedContentStructureModelChildren:
_parseFeaturedContentChild:isMemberOfChartSet:insertingResultsToSectionedCollection:atSectionIndex:additionalContentIdentifiers:allAdditionalContentIdentifiersNeedingLookup:
_parseSingleContentListFromPageDataDictionary:isMemberOfChartSet:
_parseUsingAdditionalContentIdentifiersFromPreviousParser
_populateStorePlatformDataResultsFromRawResponseOutputDictionary:
_populateUnavailableContentIdentifiersFromPageDataDictionary:
_storeItemMetadataForContentIdentifier:
_storeItemMetadataIsAvailableForContentIdentifier:
rawResponseOutput
previousParser
additionalStoreItemMetadataResponse
sectionBuilder
contentItemBuilder
detailedItemType
_itemsByVariant
mediaItemsWithStoreOfferVariant:
_personalized
_accountIdentifier
_enqueuerAccountIdentifier
_storefrontIdentifier
initWithRequest:response:
_isGoodCacheKey
accountIdentifier
setAccountIdentifier:
enqueuerAccountIdentifier
setEnqueuerAccountIdentifier:
setPersonalized:
isEqualToNumber:
getCacheKeyWithRequest:completionHandler:
_fastGetCacheKeyWithRequest:completionHandler:
_slowGetCacheKeyWithRequest:completionHandler:
buildURLRequestWithCompletionHandler:
ic_valueForHTTPHeaderField:
setShouldUseMescalSigning:
setAnisetteVersion:
initWithURL:requestContext:
localStoreAccountProperties
isDelegated
hasProperty
hasValue
setHasComparisonType:
hasComparisonType
writeInt32:forTag:
__sectionType_KEY
__uniformContentItemType_KEY
__memberOfChartSet_KEY
__brick_KEY
__previouslyRetrievedNestedResponse_KEY
_containsOnlyEditorialElements
containsOnlyEditorialElements
setContainsOnlyEditorialElements:
initWithProperties:relationships:
containsPropertySet:
propertySetByCombiningWithPropertySet:
propertySetByIntersectingWithPropertySet:
emptyPropertySet
isSubsetOfSet:
addProperty:
removeProperty:
addRelationship:properties:
removeRelationship:
propertySetWithProperties:
_cacheMissItemIdentifiers
_itemIdentifierToStoreItemMetadata
_allStoreItemDictionaries
_finalResponse
_lastBatchItemIdentifiers
_requestItemIdentifiers
allStoreItemDictionaries
cacheMissItemIdentifiers
earliestExpirationDate
storeItemMetadataForItemIdentifier:
storeItemMetadataForItemIdentifier:returningIsFinalMetadata:
setStoreItemMetadata:forItemIdentifier:
isFinalResponse
setFinalResponse:
lastBatchItemIdentifiers
setLastBatchItemIdentifiers:
requestItemIdentifiers
setRequestItemIdentifiers:
setCacheMissItemIdentifiers:
_hudView
_setupTargetScreen:
_screenModeDidChange:
isDescendantOfView:
setCurrentMode:
availableModes
preferredMode
setOverscanCompensation:
setBitsPerComponent:
setScreen:
_isWorkspaceCapable
screens
mirroredScreen
__number_KEY
__episodesCount_KEY
__sortType_KEY
__representativeEpisode_KEY
_presentationWindow
_dismissBackgroundButton
_dismissControlsViewButton
_controlsView
_cancelButton
initWithAVItemType:
showInView:withCompletionHandler:
_cancelButtonAction:
_animateControls:withCompletionHandler:
_updateRoutingSheetFrame
_updateDismissButtonText
_routingViewFrame
_cancelButtonFrame
_controlsViewFrame
_maxRoutingViewSize
_animateUsingDefaultTimingWithOptions:animations:completion:
setWindowLevel:
_canAffectStatusBarAppearance
_isSecure
_setVisualAltitude:
_setSeparatorBackdropOverlayBlendMode:
_scopes
_maximumResultsPerScope
scopes
setScopes:
maximumResultsPerScope
setMaximumResultsPerScope:
hasMoreResultsForSectionAtIndex:
searchWeightForIndexPath:
_activeOverlayUserEvents
_controlsOverlayVisible
_needsTVWindowSetup
_needsTVWindowTeardown
_TVOutEnabled
_TVOutEnabledMaster
_useHostedWindowWhenFullscreen
_view
_videoOverlayView
_navigationBarHidden
_playbackErrorDescription
_videoOverlayStyle
_alertSheet
_alternateTracksWindow
_chaptersContainerController
_containerView
_doubleTapGestureRecognizer
_fullscreenViewController
_fullscreenViewSizeIsExternallyManaged
_fullscreenWindow
_idleTimer
_inCloneMirrorMode
_isAnimatingOverlay
_isTransitioningFromFullscreen
_isTransitioningToFullscreen
_subtitlesView
_swallowNextTapGesture
_videoBackgroundView
_viewsToFade
_wantsOverlayVisibleWhenItemIsAvailable
_wasPlaying
_windowForDisablingAutorotation
_windowForFullscreenTransition
_shouldDestroyVideoSnapshot
alertView:clickedButtonAtIndex:
alertViewCancel:
willPresentAlertView:
didPresentAlertView:
alertView:willDismissWithButtonIndex:
alertView:didDismissWithButtonIndex:
alertViewShouldEnableFirstOtherButton:
transportControls:heldButtonPart:
transportControls:releasedHeldButtonPart:
transportControls:tappedButtonPart:
transportControlsDidResize:
overlayTappedBackButton:
overlayDidBeginScrubbing:
overlayDidEndScrubbing:
overlayTappedScaleModeButton:
overlayDidDismissAlternateTracksPopover:
overlayTappedFullscreenButton:
overlayTappedPictureInPictureButton:
overlay:didBeginUserEvent:
overlay:didCancelUserEvent:
overlay:didEndUserEvent:
overlay:interpretCurrentTime:
overlay:interpretDuration:
overlayShouldAcceptSkipForwardEvent:
overlayShouldAcceptSkipBackwardEvent:
fullscreenOverlayWillHideAnimated:
fullscreenOverlayWillShowAnimated:
fullscreenOverlayDidHide
fullscreenOverlayDidShow
fullscreenView
setPlaybackErrorDescription:
setVideoOverlayStyle:
setVideoSnapshotEnabled:
_applicationResumedEventsOnly:
_applicationSuspended:
_applicationWillResignActive:
_applicationDidFinishSuspensionSnapshot:
_availableRoutesChanged:
_batteryStateDidChange:
_bufferingStateChanged:
_itemTypeAvailable:
_playbackError:
_scaleModeDidChange:
_timedImageMetadataAvailable:
_validityChanged:
_cancelOverlayIdleTimer
_delayedShowLoadingIndicator
_destroyVideoOverlayView
_destroyVideoSnapshotView
_doneWithChapters:
_effectiveItemType
_enableAirPlayVideoRoutesIfNecessary
_flipFromChaptersDidStop:finished:context:
_flipToChaptersDidStop:finished:context:
_hideOverlayAnimated:
_hideOverlayDidEnd
_isAnimatingFullscreenTransition
_overlayIdleTimerFired:
_overlayViewIsVisible
_postScaleModeDidChange
_postViewControllerRequestsExitWithReason:
_registerForPlayerNotifications
_resetOverlayIdleTimer
_resetOverlayIdleTimer:
_setupSubviews
_setupTVOutWindow
_shouldShowDestinationPlaceholder
_showOverlayAnimated:
_showOverlayAnimated:quickHide:
_showOverlayDidEnd:
_showVideoSnapshotView
_tearDownTVOutWindow
_transitionFromFullscreenAnimated:
_transitionFromFullscreenAnimated:fromDoneButton:
_transitionFromFullscreenDidEnd
_transitionToFullscreenAnimated:
_transitionToFullscreenDidEnd
_unregisterForPlayerNotifications
_updateBackgroundViewConfiguration:
_updateBackgroundViewInformation
_updateDisableAirPlayMirroringDuringPlayback
_updateDoubleTapGestureRecognizer
_updateTVOutEnabled
_useInlineControls
_viewWasTapped:
_viewWasPinched:
advertisementView
videoOverlayStyle
playbackErrorDescription
subtitlesView
numberOfTapsRequired
setIgnoresInteractionEvents:
endDisablingInterfaceAutorotation
sendSubviewToBack:
videoControllerDidEnterFullscreen:
_viewControllerForFullScreenPresentationFromView:
commitAnimations
setAnimationDidStopSelector:
setAnimationCurve:
beginAnimations:context:
videoControllerDidCreateFullscreenView:
beginDisablingInterfaceAutorotation
shouldAutorotate
videoControllerWillEnterFullscreen:
videoControllerDidExitFullscreen:
mpAddSubviewAndArrange:
_performWithoutDeferringTransitions:
videoControllerWillExitFullscreen:
videoControllerWillExitFullscreen:reason:
captureSnapshotOfView:withSnapshotType:
videoControllerDidShowOverlay:
videoController:willShowOverlayWithDuration:
videoControllerDidHideOverlay:
videoController:willHideOverlayWithDuration:
setAnimationTransition:forView:cache:
initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
_performBlockAfterCATransactionCommits:
dismissWithClickedButtonIndex:animated:
videoController:tappedButtonPart:
videoControllerDidEndScrubbing:
videoControllerDidBeginScrubbing:
convertRect:fromLayer:
convertRect:toLayer:
setTransform:
setNumberOfTapsRequired:
setNumberOfTouchesRequired:
bringSubviewToFront:
_resultContainers
initWithEntitiesQueryResultContainers:
resultContainers
entityQueryResult
entityTranslationContext
scope
_scope
initWithEntityQueryResult:forScope:entityTranslationContext:
predicateWithBaseProperty:
applyToView:withContext:
representedSearchScopePredicate
isInternalWindow
presentViewController:animated:completion:
presentAlertController:animated:completion:
_presentationViewController
setSizesWindowToScene:
rootViewController
_fallbackCache
_existingRepresentationForArtworkCatalog:fromCacheOnly:
_resizeOriginalArtworkForArtworkCatalog:completionHandler:
fallbackCache
_cacheRepresentation:forCatalog:
_cachedRepresentationForCatalog:
_isRepresentation:validForCatalog:
_isRepresentationSize:validForFittingSize:
_representationAtSize:forCatalog:
_resizeArtwork:forCatalog:toSize:completionHandler:
setFallbackCache:
artworkResizeUtility
setArtworkResizeUtility:
sendRequest:completionHandler:
addDestinationWithFormat:size:url:
addJPEGDestinationWithSize:compressionQuality:url:
initWithSourceURL:
initWithArtworkCatalog:representativeSize:
_catalogIdentifier
catalogIdentifier
setCatalogIdentifier:
initWithContentsOfFile:
initWithArtworkType:availableArtworkToken:fetchableArtworkToken:
__filePath_KEY
__fileSize_KEY
__nonPurgeable_KEY
__protectionType_KEY
__purchaseBundleFilePath_KEY
__qualityType_KEY
_artworkCatalogRepresentativeItem
artworkCatalogCachePropertiesForGroupingType:
albumArtistArtworkCatalog
artistArtworkCatalog
_attemptedToInitializeAppOutputContext
_supportsMultipleSelection
_devicePresenceDetected
_outputDeviceRoutes
_shouldSourceOutputDevicesFromAVODDS
_routingSessionManager
_detachesRoutesToGroup
_supportsQueueHandoff
_supportsRoutePrediction
_applicationOutputContext
_initiator
applicationOutputContext
routingSessionManager
createGroupFromOutputDevices:queue:completion:
addRouteToGroup:completion:
addRoutesToGroup:completion:
removeRouteFromGroup:completion:
removeRoutesFromGroup:completion:
_endpointsDidChangeNotification:
_outputDevicesDidChangeNotification:
outputDevicesForRoutes:
_shouldDetachOutputDevicesToGroup:
_outputDevicesDidChange:
_outputDeviceRouteWithUID:
_setShouldSourceOutputDevicesFromAVODDS:
setApplicationOutputContext:
setSupportsMultipleSelection:
detachesRoutesToGroup
setDetachesRoutesToGroup:
supportsQueueHandoff
setSupportsQueueHandoff:
initiator
setInitiator:
supportsRoutePrediction
setSupportsRoutePrediction:
isGroupable
migrateToOrAddOutputDevices:initiator:withReplyQueue:completion:
addOutputDevices:initiator:withReplyQueue:completion:
createEndpointWithOutputDeviceUIDs:queue:completion:
setOutputDevices:initiator:withReplyQueue:completion:
migrateToOrSetOutputDevices:initiator:withReplyQueue:completion:
deviceID
outputDeviceDescriptions
currentRoutingSession
longFormVideoRoutingSessionManager
_globalAudioSessionLock
updateWithConfiguration:
serviceInterface
clientInterface
_disableTaps
_masterController
_overlayView
_shouldForwardRotationEvents
_swipableView
_statusBarWasHidden
didRotateFromInterfaceOrientation:
willAnimateRotationToInterfaceOrientation:duration:
willRotateToInterfaceOrientation:duration:
viewWillTransitionToSize:withTransitionCoordinator:
cancelOverlayIdleTimer
hideLoadingIndicator
prepareForTransitionFromFullscreen
resetOverlayIdleTimer
setMasterController:
showLoadingIndicator
showOverlayAnimated:
updateOverlayView
_overlayIdleTimerFired
_showOverlayDidEnd
masterController
setStatusBarHidden:
_internalUserActivity
setPayloadIdentifier:object:withBlock:
_setExternalMediaContentBundleIdentifier:
externalMediaContentIdentifier
setExternalMediaContentIdentifier:
_externalMediaContentBundleIdentifier
objectForIdentifier:
payloadForIdentifier:
setPayload:object:identifier:
_didBeginTracking
_needsCommit
_accumulatedDelta
_beginLocationInView
_lastCommittedLocationInView
_currentValue
_feedbackGenerator
_detailedScrubbingEnabled
_scrubbingControl
_scrubbingVerticalRange
_currentScrubSpeed
initWithScrubbingControl:
durationAllowsForDetailedScrubbing
scaleForVerticalPosition:
_minimumScale
_scaleForIdealValueForVerticalPosition:
_beginScrubbing
_endScrubbing
_commitValue:
scrubbingControl
setScrubbingControl:
scrubbingVerticalRange
setScrubbingVerticalRange:
detailedScrubbingEnabled
setDetailedScrubbingEnabled:
currentScrubSpeed
selectionChanged
prepare
_requestedProperties
initWithRequestedProperties:
genericObjectForStorePlatformMetadata:userIdentity:
requestedProperties
collectionStoreAdamID
offerWithType:
lightweightPersonalizationPropertiesForModelClass:
_lightweightPersonalizationPropertiesForPlaybackPosition
_lightweightPersonalizationPropertiesForStoreAsset
initWithModel:personalizationStyle:
_callbackInvocationQueue
_willShowNotificationHandler
strongSelf
_isShowing
_runLoopSource
_showingCompletionHandlers
_cfUserNotification
initWithCFUserNotification:
willShowNotificationHandler
setWillShowNotificationHandler:
showWithCompletionHandler:
_cancelSynchronously:
_didReceiveResponseWithFlags:
cfUserNotification
_userNotificationForCFUserNotification:
_setUserNotification:forCFUserNotification:
_userNotificationConversionAccessQueue
_mediaLibraryDataProvider
_mediaLibraryDataProviderRespondsToSupportsEntityChangeTrackingMethod
_rwlock
_entityCacheMapLock
_deallocLaterQueue
_concreteEntitiesByDataProviderEntityClass
_entityTemporaryReferences
initWithMediaLibraryDataProvider:
itemWithIdentifier:
itemWithIdentifier:loadEntityBlock:
collectionWithIdentifier:grouping:loadEntityBlock:
updatePropertyValuesInEntityWithIdentifier:dataProviderEntityClass:deleted:
removeEntityWithIdentifier:dataProviderEntityClass:
_entityWithIdentifier:mediaEntityType:collectionGroupingType:loadEntityBlock:
_entityMapForDataProviderEntityClass:
_clearSomeGlobalEntityTemporaryReferences
_performWithExclusiveAccessForDataProviderEntityClass:block:
_performWithSharedAccessForDataProviderEntityClass:block:
_requestExitAfterHidingControls
_rotateAfterHidingControls
_showControlsAfterRotate
_autoHidingForItemChange
_scheduledAutoHide
showOverlayIfNecessary
inhibitOverlay
setInhibitOverlay:
forceScaleToFitInPortrait
_shouldUseFullScreenLayoutInWindow:parentViewController:
_resumedEventsOnlyNotification:
transformVideoForInterfaceOrientation:animate:
hideOverlayAnimated:
cancelControlsOverlayAutohide
scheduleControlsOverlayAutohideAfterDelay:
_autohideControlsOverlay
_hideOverlayWithAnimation:
_hideOverlayWithAnimation:shouldUpdateAutohideFlag:
_validInterfaceOrientation
overlayView
isIgnoringInteractionEvents
_sortName
_endpointWrapper
initWithEndpoint:
sortName
establishGroup
endpoint
endpointWrapper
setEndpointWrapper:
canModifyGroupMembership
_endpointDidChange:
_endpointOutputDevicesDidChange:
_groupLeaderIsOfDeviceSubtype:
_outputDevicesComposition
canRelayCommunicationChannel
isRemoteControllable
isLocalEndpoint
modelID
getActiveEndpointRouteWithCompletion:
_reportConcernBagDictionary
submitReport:completion:
deleteComment:activityID:completion:
deletePost:completion:
_performWithBag:
reportsForType:contentID:aucType:commentText:
baseURLStringForReport
_dictionariesForType:
_deleteCommentURLComponentsFromBag:
_deletePostURLComponentsFromBag:
_userID
_contentID
_concernItemType
_commentText
_aucType
_concernTypeID
_displayText
userID
setUserID:
contentID
setContentID:
concernItemType
setConcernItemType:
commentText
setCommentText:
aucType
setAucType:
concernTypeID
setConcernTypeID:
displayText
setDisplayText:
parsedBodyDictionary
ic_URLByAppendingQueryParameters:
sharedReporter
_itemPersistentID
_screenshotURLs
_itemArtworkURLs
_containerArtworkURLs
_screenshotSizes
_itemArtworkSizes
_containerArtworkSizes
_hash
_cacheID
initWithItemPersistentID:screenshotDictionaries:itemArtworkDictionaries:containerArtworkDictionaries:
artworkURLForSize:type:
availableSizesForArtworkOfType:
_preferredArtworkURLsForType:
_availableSizesForArtworkURLs:
_sizeToURLDictionaryFromStoreDictionariesArray:
cacheID
_subtitle
_artworkImageData
initWithTitle:subtitle:artworkImageData:
artworkImageData
_keepLocal
keepLocal
setKeepLocal:
_handlePersistentID:modelClass:keepLocal:mediaLibrary:
_handleKeepLocalUpdateStatus:forLibraryIdentifier:mediaType:completedWithError:
_filterMode
getExternalScreenTypeWithCompletion:
unpickAirPlayAVRoutesWithCompletion:
_superclassRegisterNotifications
_superclassUnregisterNotifications
filterMode
setFilterMode:
__endpointType_KEY
__redownloadParameters_KEY
__redownloadable_KEY
__accountIdentifier_KEY
__shouldReportPlayEvents_KEY
__needsUserUpload_KEY
_playlistGlobalID
_tasteType
_UUID
initWithPlaylistGlobalID:tasteType:
initWithStoreAdamID:tasteType:
_initializeWithType:tasteType:
playlistGlobalID
tasteType
UUID
kindWithSeasonKind:
__shortTitle_KEY
__creator_KEY
_seasonKind
seasonKind
setShouldContain:
setHasShouldContain:
hasShouldContain
persistentIDsCount
clearPersistentIDs
addPersistentIDs:
persistentIDsAtIndex:
setPersistentIDs:count:
writeInt64:forTag:
writeBOOL:forTag:
_resolvedURLString
_artworkTemplateItems
_mediaLibraryArtworkType
artworkInfo
resolvedURLString
setResolvedURLString:
artworkTemplateItems
setArtworkTemplateItems:
mediaLibraryArtworkType
setMediaLibraryArtworkType:
initWithArtworkURL:
_doublePredicateValue
_integerPredicateValue
_bytesPredicateValue
_floatPredicateValue
_stringPredicateValue
_boolPredicateValue
setIntegerPredicateValue:
setHasIntegerPredicateValue:
hasIntegerPredicateValue
setDoublePredicateValue:
setHasDoublePredicateValue:
hasDoublePredicateValue
setFloatPredicateValue:
setHasFloatPredicateValue:
hasFloatPredicateValue
setBoolPredicateValue:
setHasBoolPredicateValue:
hasBoolPredicateValue
hasStringPredicateValue
hasBytesPredicateValue
integerPredicateValue
doublePredicateValue
floatPredicateValue
boolPredicateValue
stringPredicateValue
setStringPredicateValue:
bytesPredicateValue
setBytesPredicateValue:
writeFloat:forTag:
writeDouble:forTag:
__uncensoredName_KEY
__biography_KEY
__privatePerson_KEY
__verified_KEY
__pendingRequestsCount_KEY
_subtitleLabel
setEdgeInsets:
_updateDisplay
edgeInsets
_defaults
hasCachedData
clearCache
nowPlaying
setNowPlaying:
_objectOfClass:forKey:error:
_saveObject:forKey:error:
encodedDataWithRootObject:error:
decodedObjectOfClass:fromData:error:
dataForKey:
initWithSuiteName:
_titleInsets
initWithReuseIdentifier:
_updateFont
titleInsets
setTitleInsets:
_preferredFontForTextStyle:maximumContentSizeCategory:
_transientStates
followPerson:completion:
unfollowPerson:completion:
requestFollowPerson:completion:
cancelFollowRequestOnPerson:completion:
blockPerson:completion:
unblockPerson:completion:
removeFollower:completion:
transientFollowStateForPerson:
acceptAllFollowRequestsWithCompletion:
acceptFollowRequestFromPerson:completion:
declineFollowRequestFromPerson:completion:
transientFollowPendingRequestStateForPerson:
_handleTransientStateForPersonDidChangeNotification:
_performTransientFollowState:onPerson:completion:
_performTransientFollowPendingRequestState:onPerson:completion:
_transientStateForPerson:shouldCreate:
_populateTransientStatesSnapshot:
_notifyTransientStatesDidChangeWithSnapshot:
_transientStatesDidChange
_queue_transientStatesDidChange
_newOperationForRemovingFollower:completion:
_transientFollowStatesPerProfileID
_transientFollowPendingRequestStatesPerProfileID
_addTransientFollowState:transientFollowPendingRequestState:forPerson:
followPendingRequestState
followState
setCompletionBlock:
initWithPerson:
_followState
_followPendingRequestState
_latestFollowOperation
_latestFollowPendingRequestOperation
_completionBlock
newOperationForTransientFollowState:completion:
newOperationForTransientFollowPendingRequestState:completion:
_endIfNeeded
completionBlock
_internalErrorForHTTPResponseCode:
_sortTransformer
_valueTransformer
_propertiesToFetchMap
_propertiesToSortMap
propertiesToFetchMap
setPropertiesToFetchMap:
propertiesToSortMap
setPropertiesToSortMap:
sortTransformer
setSortTransformer:
valueTransformer
setValueTransformer:
_transient
_allowedItemPredicatesBlock
_entityQueryBlock
mapIdentifierMLProperties:identifierCreationBlock:
mapPropertyKey:toMLProperty:
mapPropertyKey:withPropertiesToFetch:valueTransformer:
mapPropertyKey:withPropertiesToFetch:propertiesToSort:sortTransformer:valueTransformer:
mapRelationshipKey:toModelClass:usingForeignPropertyBase:
mapRelationshipKey:toModelClass:transient:usingForeignPropertyBase:
mapRelationshipKey:toModelClass:transient:usingForeignPropertyBase:relationshipValidationProperties:isValidRelationshipHandler:
objectForPropertySet:entity:context:
identifiersForEntity:context:
entityQueryForPropertySet:sortDescriptors:context:view:
propertiesQueryForPropertySet:scopedContainers:allowedItemIdentifiers:view:
MLCorePropertiesForPropertySet:
MLCoreSortDescriptorsForModelSortDescriptors:
propertiesToFetchForPropertyKey:
_propertyTranslatorForKeyPath:
_propertyForKeyPath:
_propertyMapForKeyPath:includePropertiesToSort:
_valueForKeyPath:forEntity:context:
_objectForPropertySet:entity:baseTranslator:prependKeyPath:context:
_MLCorePropertiesForPropertySet:withForeignPropertyBase:
isTransient
entityClass
allowedItemPredicatesBlock
setAllowedItemPredicatesBlock:
entityQueryBlock
setEntityQueryBlock:
foreignPropertyBase
entityTranslator
transient
relationshipValidationProperties
validRelationshipHandler
relationshipModelClass
ascending
setModelKind:
modelKind
setRelationshipValidationProperties:
setValidRelationshipHandler:
setForeignPropertyBase:
setRelationshipModelClass:
setTransient:
_relationshipModelClass
_foreignPropertyBase
_validRelationshipHandler
_relationshipValidationProperties
_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering
isMultiQuery
_translatorForMPModelClass:mlcoreEntityClass:create:transient:
translatorForMPModelClass:mlcoreEntityClass:
translatorForTransientMPModelClass:
_multiQuery
_allowedEntityIdentifiers
_modelKind
allowedEntityIdentifiers
setAllowedEntityIdentifiers:
setMultiQuery:
_mediaClipBuilder
_requestedMovieProperties
setClips:
_shouldExcludeFromShuffle
_placeholder
_containedPersistentID
_syncID
_cloudID
_cloudAlbumID
_recommendationID
_adamID
_formerAdamIDs
_universalCloudLibraryID
_purchasedAdamID
_subscriptionAdamID
_socialProfileID
_informalMediaClipID
_informalStaticAssetID
_stationHash
_containerUniqueID
_handoffCorrelationID
_lyricsID
_vendorID
setLibraryIdentifiersWithDatabaseID:block:
setPersonalStoreIdentifiersWithPersonID:block:
setUniversalStoreIdentifiersWithBlock:
setRadioIdentifiersWithBlock:
setContainerUniqueID:
handoffCorrelationID
setHandoffCorrelationID:
lyricsID
setLyricsID:
shouldExcludeFromShuffle
setShouldExcludeFromShuffle:
setPlaceholder:
vendorID
setVendorID:
setStationHash:
setStationID:
adamID
setAdamID:
formerAdamIDs
setFormerAdamIDs:
universalCloudLibraryID
setUniversalCloudLibraryID:
setPurchasedAdamID:
setSubscriptionAdamID:
setSocialProfileID:
informalMediaClipID
setInformalMediaClipID:
informalStaticAssetID
setInformalStaticAssetID:
setCloudID:
setCloudAlbumID:
recommendationID
setRecommendationID:
setPersistentID:
containedPersistentID
setContainedPersistentID:
syncID
setSyncID:
_initWithModelKind:block:
initWithModelKind:block:
copyWithBlock:
personalizedStore
universalStore
radio
intersectsSet:
hasCommonIdentifierWithIdentifierSet:
unionSet:
deviceLibraryPersistentID
setDeviceLibraryPersistentID:
radioStationStringID
setRadioStationStringID:
radioStationHash
setRadioStationHash:
radioStationID
setRadioStationID:
setStoreAdamID:
setFormerStoreAdamIDs:
storeCloudAlbumID
setStoreCloudAlbumID:
storeRecommendationID
setStoreRecommendationID:
identifierDescriptions:
preferredStoreStringIdentifierForPersonID:
prioritizedStoreStringIdentifiersForPersonID:
needsPersonalization
_setDefaultDatabaseIDIfNeeded
_setDefaultPersonIDIfNeeded
emptyIdentifierSet
_locale
_tag
initWithType:name:locale:
isInBand
locale
_displayNameForName:
setTag:
autoTrack
offTrack
canonicalLocaleIdentifierFromString:
_shouldHideSectionBottomSeparator
_topSeparatorView
_bottomSeparatorView
_clippingContentView
_clippingMaskView
_clippingInsets
setAccessoryView:
setClippingInsets:
_setShouldHaveFullLengthTopSeparator:
_setShouldHaveFullLengthBottomSeparator:
topSeparatorView
bottomSeparatorView
shouldHideSectionBottomSeparator
setShouldHideSectionBottomSeparator:
clippingContentView
setClippingContentView:
clippingMaskView
setClippingMaskView:
clippingInsets
_separatorFrame
setMaskView:
__explicitEpisode_KEY
__streamURL_KEY
__seasonNumber_KEY
_designatedGroupLeaderName
_previousDesignatedGroupLeaderName
_previousBounds
_previousFont
_previousRouteNames
_previousForcesUppercaseText
_previousDisplayAsSiriSuggestion
_previousTruncationMode
_routeNames
_sizingLabel
_displayAsSiriSuggestion
_minimumEndCharacterCount
_text
_truncationMode
_textColor
_textAlignment
_baselineOffsetFromBottom
_textColorFollowsTintColor
setMinimumEndCharacterCount:
setTextColor:
setTextAlignment:
setTruncationMode:
setDisplayAsSiriSuggestion:
_setTextColorFollowsTintColor:
addRouteName:
addRouteNamesFromArray:
removeRouteName:
removeRouteNamesFromArray:
_formattedRouteNameForDesignatedGroupLeaderNameText:routeNamesText:
_routeNamesSortedAlphanumeric:
_routeNamesSortedLength:
_plusSeparatedRouteNames:
_labelSizeForText:
_labelFitsText:withSize:
_updateRouteLabel
_truncateText:by:
_updateTitleIfNeeded
_bestStringThatFitsSize:
_marketingNames
_compareLength:with:
minimumEndCharacterCount
text
truncationMode
displayAsSiriSuggestion
titleLabel
textColor
textAlignment
localizedUppercaseString
_artworkConfiguration
initWithConfigurationDictionaries:
supportedSizesForMediaType:artworkType:
sizesToAutogenerateForMediaType:artworkType:
artworkConfiguration
setArtworkConfiguration:
systemConfiguration
_cachedSettings
_allowsAccountModification
_allowsDeletion
_allowsExplicitContent
_allowsMusicSubscription
_allowsStorePurchases
_allowsRadioPurchases
_allowsMusicVideos
_maximumTVShowRatingForAgeGate
_maximumMovieRatingForAgeGate
hasRestrictionsPasscode
maximumTVShowRating
maximumMovieRating
effectiveValueForSetting:
synchronizeWithCompletionHandler:
_isRunningInStoreDemoMode
_cacheValue:forSetting:
_updateWithCanPostNotifications:
allowsAccountModification
allowsDeletion
allowsExplicitContent
allowsMusicSubscription
allowsStorePurchases
allowsRadioPurchases
allowsMusicVideos
maximumTVShowRatingForAgeGate
setMaximumTVShowRatingForAgeGate:
maximumMovieRatingForAgeGate
setMaximumMovieRatingForAgeGate:
notificationWithName:object:
isRunningInStoreDemoMode
settingEnabled
sharedRestrictionsMonitor
_artworkInfoType
_imageArtworkInfo
_videoArtworkInfo
_cropStyle
_format
_sourceEditorialArtworkKind
_artworkURL
artworkInfoType
setArtworkInfoType:
imageArtworkInfo
setImageArtworkInfo:
videoArtworkInfo
setVideoArtworkInfo:
cropStyle
setCropStyle:
format
setFormat:
sourceEditorialArtworkKind
setSourceEditorialArtworkKind:
tokenWithImageArtworkInfo:
tokenWithVideoArtworkInfo:
_canceled
_overridePhaseIdentifiers
_SSDownload
_SSPurchase
_SSPurchaseResponse
_downloadFilePath
initWithType:attributes:
bytesDownloaded
bytesTotal
downloadSizeLimit
failureError
isCanceled
isPurchasing
isRestore
isPaused
libraryItemIdentifier
percentComplete
phaseIdentifier
purchaseError
rentalInformation
storeItemIdentifier
assetsForType:
resetCachedRentalInformation
_isCanceled
_setCanceled:
_setSSDownload:
_setSSPurchase:SSPurchaseResponse:
_getDownloadFilePath
_setDownloadFilePath:
_addOverridePhaseIdentifier:
_removeOverridePhaseIdentifier:
_currentOverridePhaseIdentifier
_valueForDownloadProperty:
valueForDownloadProperty:
enumerateObjectsWithOptions:usingBlock:
resetCachedExternalProperties:count:
valueForExternalProperty:
downloadPhaseIdentifier
placeholderDownloadIdentifier
persistentIdentifier
_SSPurchaseForType:attributes:
storeDownloadForMediaItem:type:attributes:
storeDownloadForStoreItemOffer:attributes:
storeDownloadForStoreOffer:type:attributes:
storeDownloadWithDownloadIdentifier:
setRequestProperties:
setURLBagKey:
setValue:forDownloadProperty:
setDisplaysOnLockScreen:
setBackgroundPurchase:
setShouldInvertBoolValue:
addUserDefaultState:
setFallbackNumberValue:
setDownloadSizeLimit:
setNetworkTypes:
setDownloadPolicy:
setPolicyRules:
policyRules
setCellularDataStates:
initWithDownloadKind:URLBagType:
downloadPolicy
setIgnoresForcedPasswordRestriction:
setBuyParameters:
initWithPersistentIdentifier:
_calloutSerialQueue
_blockObservers
_downloadKindToRequiredClientBundleIdentifiers
_downloads
_userDownloads
_downloadIdentifiersToDownloads
_downloadsToObservers
_libraryIdentifiersToDownloads
_observersForAllDownloads
_storeIdentifiersToDownloads
_fetchedInitialDownloads
_downloadManager
_purchaseManager
purchaseManager:didFinishPurchasesWithResponses:
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
activeDownloads
downloads
userDownloads
addDownloads:
addFinishHandler:forDownloads:
addObserver:forDownloads:
pauseDownloads:
resumeDownloads:
restartDownloads:
downloadForDownloadPersistentIdentifier:
downloadForMediaItem:
downloadForMediaItemPersistentID:
downloadForStoreID:
prioritizeDownloads:
removeObserver:forDownloads:
reloadFromServer
requestPermissionToDownloadWithType:completionHandler:
_addPurchaseFinishedHandler:forDownloads:
_addStoreDownloadForRedownloadProductItem:
hasFetchedInitialDownloads
_existingDownloadForSSDownload:
_observersForDownload:
_onQueue_addDownloadToMapTables:
_onQueue_findStoreDownloadWithSSDownload:SSPurchase:
_onQueue_hasExistingDownloadForStoreDownload:
_onQueue_removeDownloadFromMapTables:
_registerBlockObserver:
_sendActiveDownloadsDidChangeToObserversWithAddedDownloads:removedDownloads:
_sendDownloadsDidChangeToObserversWithAddedDownloads:removedDownloads:
_sendDownloadsDidFinishPurchasesToObserversForDownloads:
_sendDownloadsDidFinishToObserversForDownloads:notifyDownloadManager:completionHandler:
_sendDownloadsDidProgressToObserversForDownloads:
_shouldHideDownload:
_unregisterBlockObserver:
_updateActiveDownloadsWithChangedActiveDownloads:inactiveDownloads:
_updateDownloadsWithAdditions:removals:
_updateMediaItemPropertiesForFinishedStoreDownload:SSDownload:
_addNonCancelledDownloadsToActiveList:
_updateActiveDownloadsWithCancelledDownloads:
_isActiveDownload:
finishDownloads:
insertDownloads:afterDownload:completionBlock:
initWithDownloadMetadata:
_didFinishDownloadHandler
_didFinishPurchaseHandler
_download
initWithDownload:
didFinishDownloadHandler
setDidFinishDownloadHandler:
didFinishPurchaseHandler
setDidFinishPurchaseHandler:
download
purchase
prioritizeAboveDownload:completionBlock:
movePurchases:afterPurchase:withCompletionBlock:
moveDownload:afterDownload:completionBlock:
restartDownloads:completionBlock:
resumeDownloads:completionBlock:
cancelPurchases:withCompletionBlock:
pauseDownloads:completionBlock:
cancelDownloads:completionBlock:
addPurchases:withCompletionBlock:
getPurchasesUsingBlock:
initWithManagerIdentifier:
getDownloadsUsingBlock:
initWithManagerOptions:
setShouldFilterExternalOriginatedDownloads:
setPrefetchedDownloadProperties:
setPrefetchedDownloadExternalProperties:
setPersistenceIdentifier:
IPodDownloadKinds
setDownloadKinds:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
initWithOptions:
setDescriptionFunction:
setSizeFunction:
setIsEqualFunction:
setHashFunction:
setRelinquishFunction:
setAcquireFunction:
MPSD_mediaQueryForDownloadableEntities
MPSD_mediaQueryForDownloadingEntities
MPSD_hasDownloadableEntities
MPSD_hasDownloadingEntities
MPSD_mediaItemPropertiesForDownloadability
MPSD_isDownloadable
MPSD_isDownloadInProgress
_requestedSocialPersonProperties
setVerified:
setPrivatePerson:
setUncensoredName:
songPopularityBlock
kindWithSongKind:
kindWithSongKind:options:
kindWithVariants:songKind:
kindWithVariants:songKind:options:
__representativeSong_KEY
__maximumItemTrackNumber_KEY
__discCount_KEY
__compilation_KEY
__classical_KEY
__preorder_KEY
__songPopularityBlock_KEY
_songKind
songKind
MPSD_hasDownloadableItem
MPSD_hasDownloadingItem
_compoundPredicate
_persistentIDsPredicate
_propertyPredicate
_searchStringPredicate
setHasType:
hasType
hasPropertyPredicate
hasCompoundPredicate
hasPersistentIDsPredicate
hasSearchStringPredicate
propertyPredicate
setPropertyPredicate:
compoundPredicate
setCompoundPredicate:
persistentIDsPredicate
setPersistentIDsPredicate:
searchStringPredicate
setSearchStringPredicate:
{?="initialized"b1"itemType"b1"detailedItemType"b1"artist"b1"album"b1"curator"b1"episode"b1"movie"b1"playlist"b1"radioStation"b1"socialPerson"b1"song"b1"season"b1"show"b1"showCreator"b1"aucType"b1}
@"MPStoreModelAlbumBuilder"
@"MPStoreModelArtistBuilder"
@"MPStoreModelCuratorBuilder"
@"MPStoreModelTVEpisodeBuilder"
@"MPStoreModelMovieBuilder"
@"MPStoreModelRadioStationBuilder"
@"MPStoreModelSocialPersonBuilder"
@"MPStoreModelPlaylistBuilder"
@"MPStoreModelTVSeasonBuilder"
@"MPStoreModelSongBuilder"
@"MPStoreModelTVShowBuilder"
@"MPStoreModelTVShowCreatorBuilder"
@24@0:8@16
q24@0:8q16
q24@0:8@16
@40@0:8@16@24@32
B16@0:8
v20@0:8B16
v16@0:8
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@16@0:8
v24@0:8@16
v24@0:8q16
v32@0:8q16@?24
v48@0:8q16q24q32@?40
q16@0:8
@24@0:8q16
@32@0:8@16^q24
v24@0:8@?16
@"NSDictionary"
@32@0:8@16^@24
v32@0:8@16@?24
@32@0:8@16@24
B24@0:8@16
@"NSString"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"NSData"16@0:8
@"NSArray"16@0:8
@"MPModelSocialPerson"16@0:8
v24@0:8@"MPModelSocialPerson"16
@"MPModelSocialPerson"
{shared_ptr<mlcore::DeviceLibraryView>="__ptr_"^{DeviceLibraryView}"__cntrl_"^{__shared_weak_count}}
@"MPMediaLibrary"
@32@0:8@16Q24
{shared_ptr<mlcore::DeviceLibraryView>=^{DeviceLibraryView}^{__shared_weak_count}}16@0:8
v40@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16@?32
v40@0:8{shared_ptr<mlcore::LocalizedSearchQuery>=^{LocalizedSearchQuery}^{__shared_weak_count}}16@?32
{shared_ptr<mlcore::QueryResult>=^{QueryResult}^{__shared_weak_count}}40@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16^@32
@32@0:8@16d24
@"NSOperationQueue"
@"NSError"
@"NSObject<OS_dispatch_queue>"
@"NSArray"
@24@0:8@?16
d16@0:8
v24@0:8d16
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@?16@0:8
@"UIImageView"
@"MPAVController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"MPModelRequest"
@"MPPropertySet"
@"MPSectionedCollection"
@"_MPMoviePlayerProxyView"
@"UIView"
@"NSURL"
@"AVPlayerViewController"
f16@0:8
v20@0:8f16
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
@"UIView"32@0:8@"AVPlayerViewController"16@"UIView"24
v48@0:8@"AVPlayerViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
B24@0:8@"AVPlayerViewController"16
v36@0:8@16B24@28
v48@0:8@16{CGSize=dd}24@40
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v32@0:8@16@24
v24@0:8B16B20
{CGSize=dd}16@0:8
@32@0:8d16q24
v32@0:8@16q24
v48@0:8@16@24@32^v40
@"AVPlayerItemErrorLog"
@"AVPlayerItemErrorLogEvent"
@"AVPlayerItemAccessLog"
@"AVPlayerItemAccessLogEvent"
@"AVMetadataItem"
@"MPMoviePlayerController"
@"NSHashTable"
@"NSMapTable"
v32@0:8@16Q24
@"AVMediaSelectionOption"
q20@0:8I16
@"RTCReporting"
@"NSMutableArray"
i16@0:8
I16@0:8
v20@0:8i16
v20@0:8I16
v24@0:8@"AVPlayerItemOutput"16
v64@0:8@"AVPlayerItemLegibleOutput"16@"NSArray"24@"NSArray"32{?=qiIq}40
v64@0:8@16@24@32{?=qiIq}40
@"MPAVItem"
@"NSMutableDictionary"
@"AVPlayerItemLegibleOutput"
@"MPAlternateTextTrack"
@24@0:8Q16
Q24@0:8Q16
B24@0:8Q16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<NSCopying>"
B24@0:8q16
v24@0:8Q16
S16@0:8
@"MPModelLibraryDeleteEntityChangeRequest"
v40@0:8q16#24@32
@"AVAsset"
@"AVPlayerItem"
@"MPQueueFeeder"
@"MPAlternateTracks"
@"MPNowPlayingContentItem"
{?="value"q"timescale"i"flags"I"epoch"q}
@"<MPAVItemObserver>"
@"MPMediaItem"
@"MPModelGenericObject"
@"NSNumber"
@"ICMusicSubscriptionLeaseStatus"
v32@0:8d16d24
f36@0:8Q16q24B32
v28@0:8f16@?20
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
f28@0:8Q16B24
v32@0:8q16@24
@24@0:8d16
^{OpaqueCMTimebase=}16@0:8
d24@0:8@16
@?24@0:8@16
v28@0:8d16f24
v40@0:8q16@24@?32
@"ICClientInfo"
@"ICUserIdentity"
@"ICUserIdentityStore"
@"MPQueueFeederIdentifierRegistry"
@"NSData"
@"MPModelPlayEvent"
B24@0:8@?16
q24@0:8@?16
@"MPModelObject"
@"NSDate"
@"MPStoreItemMetadata"
@"UILabel"
@"NSTimer"
@"UIActivityIndicatorView"
@"<MPAVRoutingTableViewCellDelegate>"
@"MPVolumeSlider"
@"MPAVRoutingTableViewCellSubtitleTextState"
@"UILabel"16@0:8
@"UIImageView"16@0:8
@"UIView"16@0:8
@"MPVolumeSlider"16@0:8
@32@0:8q16@24
v36@0:8@16@24B32
@"MPMediaControlsConfiguration"
@"<MPMediaControlsViewControllerDelegate>"
@"MPMediaControls"
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
v32@0:8Q16@24
v28@0:8B16@?20
@"NSCountedSet"
@"NSCache"
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
B32@0:8q16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"32@0:8q16@"MPArtworkCatalog"24
v40@0:8q16@"MPArtworkCatalog"24@?<v@?@"MPArtworkRepresentation"@"NSError">32
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B32@0:8q16@24
B32@0:8@16@24
@28@0:8@16B24
{CGSize=dd}56@0:8{CGSize=dd}16Q32Q40d48
@"MPMediaLibraryView"
{shared_ptr<mlcore::Query>="__ptr_"^{Query}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16
@"MPModelLibraryRequest"
@"MPModelTVEpisode"
@"MPAVRoutingController"
@"MPAVRoute"
@"AVPlayerLayer"
@"MPVideoView"
^{__CFRunLoopTimer=}
@"NSObject<OS_dispatch_source>"
@"NSNotification"
@"NSMutableSet"
@"MPAVPolicyEnforcer"
@"MPQueuePlayer"
@"<MPAVQueueCoordinating>"
@"<MPAVQueueController>"
@"AVPictureInPictureController"
v24@0:8@"NSString"16
v40@0:8@"NSString"16@"NSString"24Q32
v40@0:8@16@24Q32
v24@0:8@"<MPAVQueueController>"16
v32@0:8@"<MPAVQueueController>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueController>"16@"MPPlaybackContext"24
v32@0:8@"<MPAVQueueController>"16q24
v32@0:8@"<MPAVQueueController>"16@"NSString"24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
B32@0:8q16q24
B36@0:8q16q24B32
B44@0:8q16q24B32^@36
B48@0:8q16q24B32B36^@40
v24@0:8f16B20
v28@0:8Q16B24
v32@0:8@16B24B28
B20@0:8f16
B28@0:8f16@?20
B40@0:8f16B20@24@?32
B24@0:8^@16
v32@0:8d16q24
v40@0:8d16q24@?32
d44@0:8B16{?=qiIq}20
Q24@0:8@16
v36@0:8q16q24B32
v28@0:8B16B20B24
v24@0:8^{__CFRunLoopTimer=}16
v48@0:8q16@24@32@40
@32@0:8d16@?24
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"NSXPCConnection"
@"BKSProcessAssertion"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"b1"type"b1"artwork"b1"stationGlyph"b1"attributionLabel"b1"providerName"b1"live"b1}
@32@0:8Q16Q24
v24@0:8^v16
@"NSMutableDictionary"16@0:8
@"ICStoreFileAssetInfo"
@"<MPMediaRemoteEntityArtworkGenerator>"
v32@0:8@16:24
v32@0:8@16#24
@40@0:8d16@24@?32
@44@0:8d16B24@28@?36
@36@0:8d16B24@?28
@"MPVideoBackgroundView"
@"MPSwipableView"
@"UIColor"
@"MPTVOutWindow"
@"UIImage"
@"UIAlertController"
v32@0:8@"MPSwipableView"16@"UIView"24
v32@0:8@"MPSwipableView"16@"UIWindow"24
@"UIView"48@0:8@"MPSwipableView"16{CGPoint=dd}24@"UIEvent"40
v32@0:8@"MPSwipableView"16q24
v48@0:8@"MPSwipableView"16Q24{CGPoint=dd}32
v32@0:8@"MPSwipableView"16Q24
v40@0:8@"MPSwipableView"16d24d32
v24@0:8@"MPSwipableView"16
@48@0:8@16{CGPoint=dd}24@40
v48@0:8@16Q24{CGPoint=dd}32
v40@0:8@16d24d32
B20@0:8B16
v28@0:8q16B24
@"UIColor"16@0:8
v24@0:8@"UIColor"16
@"_UIHostedWindow"16@0:8
@"UIImage"16@0:8
v24@0:8@"UIImage"16
@"UIView<MPVideoOverlay>"16@0:8
@"MPVideoView"16@0:8
@"MPAVItem"16@0:8
v24@0:8@"MPAVItem"16
@"MPAVController"16@0:8
v24@0:8@"MPAVController"16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B32@0:8@16q24
@"MPStoreRedownloadProductResponse"
@"ICMediaRedownloadRequest"
@36@0:8@16Q24B32
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
v24@0:8B16f20
{CGSize="width"d"height"d}
@40@0:8@16{CGSize=dd}24
@"MPMediaQuery"
@32@0:8^{_MRSystemAppPlaybackQueue=}16@24
^{_MRSystemAppPlaybackQueue=}
^{_MRSystemAppPlaybackQueue=}16@0:8
@24@0:8^{_MRSystemAppPlaybackQueue=}16
v28@0:8#16i24
@"MPIdentifierSet"
@"MPRouteLabel"
@"UIFont"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
B40@0:8{CGPoint=dd}16@32
{CGSize=dd}32@0:8{CGSize=dd}16
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
@"MPModelSong"
{?="initialized"b1"title"b1"type"b1"loadAdditionalContentURL"b1"previouslyRetrievedNestedResponse"b1"uniformContentItemType"b1"memberOfChartSet"b1"displaysAsGridCellInCarPlay"b1"brick"b1}
@56@0:8@16@24q32B40B44@48
@72@0:8@16@24q32B40B44B48@52B60q64
@80@0:8@16@24q32B40B44B48@52B60q64@72
@20@0:8B16
@"NSMutableIndexSet"
@"MPButton"
@40@0:8@16@24Q32
@"MPModelStoreBrowseSectionBuilder"
@"MPModelStoreBrowseContentItemBuilder"
@"NSIndexSet"
@"NSRegularExpression"
@80@0:8@16@24@32@40@48@56Q64@72
{?="initialized"b1"copyrightText"b1"title"b1"trackCount"b1"maximumItemTrackNumber"b1"discCount"b1"hasCleanContent"b1"hasExplicitContent"b1"libraryAdded"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"libraryAddEligible"b1"compilation"b1"classical"b1"releaseDate"b1"artwork"b1"year"b1"preorder"b1"editorNotes"b1"shortEditorNotes"b1"volumeNormalization"b1"songPopularity"b1"representativeSong"b1"artist"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}}
@"_MPSSILImplementation"
v24@0:8@"_MPSSILImplementation"16
v24@0:8@"MPShuffleableSectionedIdentifierList"16
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v40@0:8@16@24@32
v40@0:8q16@24@32
@48@0:8Q16@24@32@40
v40@0:8@16@24@?32
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@?40
v44@0:8@16@24B32@?36
v60@0:8@16@24B32@36@44@?52
v52@0:8@16@24B32@36@?44
v48@0:8@16@24@32@40
@"MPRandomDistribution"
@48@0:8@16@24@32@40
v52@0:8@16@24B32@36@44
v44@0:8@16@24B32@36
{shared_ptr<mlcore::LocalizedSearchScope>="__ptr_"^{LocalizedSearchScope}"__cntrl_"^{__shared_weak_count}}
@"MPModelKind"
{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}}16@0:8
@"MPModelLibraryAlbumAppDataChangeRequest"
@"MPModelPlaylist"
v40@0:8^@16@24q32
@"MPChangeDetails"
@"MPModelStoreBrowseResponseParser"
@60@0:8@16{CGSize=dd}24B40@44@?52
@"AVOutputDeviceDiscoverySession"
@"<MPAVLightweightRoutingControllerDelegate>"
@40@0:8@16@?24@?32
@44@0:8@16B24@?28@?36
v32@0:8q16q24
@"MPStoreModelStoreAssetBuilder"
{?="initialized"b1"title"b1"shortTitle"b1"editorNotes"b1"shortEditorNotes"b1"editorialArtwork"b1"artwork"b1"episodeCount"b1"tagline"b1}
@"_MPAVPlayerViewPlayerLayerView"
@"UIViewPropertyAnimator"
v28@0:8@16f24
@"_MPAVPlayerView"
v28@0:8q16f24
@"SBSStatusBarStyleOverridesAssertion"
@"SBSStatusBarStyleOverridesCoordinator"
v32@0:8@"SBSStatusBarStyleOverridesCoordinator"16@"NSError"24
B40@0:8@"SBSStatusBarStyleOverridesCoordinator"16@"<SBSStatusBarTapContext>"24@?<v@?>32
B40@0:8@16@24@?32
@"MPDetailSlider"
@"MPKnockoutButton"
@"UIStatusBar"
@"UIButton"
@"MPAVLightweightRoutingController"
@"MPVolumeController"
@"MPAudioAndSubtitlesController"
@"NSLayoutConstraint"
@"<MPVideoOverlayDelegate>"
@"<MPVideoControllerProtocol>"
@"UIViewController"
@"_UIBackdropView"
v24@0:8@"MPDetailSlider"16
v28@0:8@"MPDetailSlider"16f24
v32@0:8@"MPDetailSlider"16q24
@"<MPVideoControllerProtocol>"16@0:8
v24@0:8@"<MPVideoControllerProtocol>"16
@"UINavigationBar"16@0:8
@"<MPVideoOverlayDelegate>"16@0:8
v24@0:8@"<MPVideoOverlayDelegate>"16
v28@0:8@"MPVolumeController"16B24
v28@0:8@"MPVolumeController"16I24
v32@0:8@"MPVolumeController"16@"NSString"24
v28@0:8@"MPVolumeController"16f24
v32@0:8@"MPVolumeController"16q24
v28@0:8@16I24
v28@0:8@"MPAVLightweightRoutingController"16B24
v32@0:8@"MPAVLightweightRoutingController"16@"NSArray"24
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
q32@0:8@16@24
@32@0:8@16q24
v40@0:8@16q24@32
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v32@0:8B16B20@?24
v40@0:8B16B20@?24@?32
@"MPSectionedIdentifierList"
@"MPSectionedIdentifierListEntry"
@56@0:8@16Q24@32@40@48
@"<MPSectionedIdentifierListEnumerationItem>"16@0:8
@"<MPSectionedIdentifierListEnumerationTrackingEntry>"16@0:8
@"_MPSectionedIdentifierListProxyEntry"
@"ICStoreHLSAssetInfo"
@"UILayoutGuide"
@"MPAVEndpointRoute"
@"MPAVOutputDeviceRoute"
@"UIWindowScene"16@0:8
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48@56@64
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
v64@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}32
{_NSRange="location"Q"length"Q}
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
@"MPMediaLibraryConnectionAssertion"
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@32@0:8q16@?24
{shared_ptr<mlcore::EntityQuery>="__ptr_"^{EntityQuery}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}16
@40@0:8^Q16^Q24^B32
v48@0:8@16Q24Q32@?40
@48@0:8Q16@24Q32@40
@44@0:8B16^Q20^Q28^B36
@72@0:8q16q24Q32Q40@48Q56@64
@"MPVolumeView"
@"UIWindow"
@"MPSectionedIdentifierListEntryPositionKey"
@"MPSectionedIdentifierListHeadEntry"
@"MPSectionedIdentifierListTailEntry"
@"MPSectionedIdentifierListItemEntry"
@"<MPSectionedIdentifierListDataSource>"
{?=BBBBBBBBq}16@0:8
@"MPRemoteCommand"
@36@0:8@16I24@28
@"MPRemotePlaybackQueue"
@"MPNowPlayingInfoLanguageOption"
@"MPMediaLibraryEntityTranslationContext"
{vector<long long, std::__1::allocator<long long> >="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::__1::allocator<long long> >="__value_"^q}}
{map<long long, unsigned long, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<long long, unsigned long>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, unsigned long>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, unsigned long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, unsigned long>, std::__1::less<long long>, true> >="__value_"Q}}}
{shared_ptr<std::__1::vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > > >="__ptr_"^{vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > >}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::EntityQueryResult>="__ptr_"^{EntityQueryResult}"__cntrl_"^{__shared_weak_count}}
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@56@0:8@16{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}24{shared_ptr<std::__1::vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > > >=^{vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > >}^{__shared_weak_count}}40
@32@0:8{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16
{shared_ptr<std::__1::vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > > >=^{vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > >}^{__shared_weak_count}}16@0:8
{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16@0:8
@"MPModelStoreBrowseResponse"
{CGPoint="x"d"y"d}
@40@0:8@16{CGPoint=dd}24
@"MPModelAlbumKind"
@"MPAVRoutingControllerSelectionQueue"
@"<MPAVRoutingControllerDelegate>"
@"MPAVRoutingDataSource"
@"<MPAVOutputDevicePlaybackDataSource>"
v32@0:8d16@?24
v40@0:8@16q24@?32
q24@0:8^B16
B32@0:8@16@?24
@"MPAVRoutingControllerSelection"
@"MSVTimer"
v40@0:8d16@24@?32
B40@0:8@16^@24^@32
B32@0:8@16^@24
@"_MPModelShimRequestMiddleware"
@"MPModelResponse"
@"NSArray"24@0:8@"MPRequest"16
v24@0:8@"NSArray"16
{shared_ptr<mlcore::DeviceLibrary>="__ptr_"^{DeviceLibrary}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}}16
{map<MPModelStoreBrowseDetailedContentItemType, unsigned long, std::__1::less<MPModelStoreBrowseDetailedContentItemType>, std::__1::allocator<std::__1::pair<const MPModelStoreBrowseDetailedContentItemType, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::__1::__map_value_compare<MPModelStoreBrowseDetailedContentItemType, std::__1::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::__1::less<MPModelStoreBrowseDetailedContentItemType>, true>, std::__1::allocator<std::__1::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<MPModelStoreBrowseDetailedContentItemType, std::__1::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::__1::less<MPModelStoreBrowseDetailedContentItemType>, true> >="__value_"Q}}}
@"MPMusicPlayerQueueDescriptor"
@"<MPSwipableViewDelegate>"
@"MPTapGestureRecognizer"
@"MPSwipeGestureRecognizer"
@"MPActivityGestureRecognizer"
@"UIPinchGestureRecognizer"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
@40@0:8{CGPoint=dd}16@32
@32@0:8@16:24
@"UITouch"
{CGPoint=dd}24@0:8@16
@32@0:8q16q24
@40@0:8#16@24q32
@32@0:8@16B24B28
v40@0:8Q16@24@?32
@32@0:8@16@?24
@32@0:8Q16@24
@32@0:8{CGSize=dd}16
v32@0:8{CGSize=dd}16
@"MPPlaybackArchiveDisplayProperties"
@72@0:8q16@24@32@40@48Q56@64
v28@0:8B16q20
@"MPMediaQueryCriteria"
@"<MPPProtobufferCoding>"32@0:8@"PBCodable"16@"MPMediaLibrary"24
@"<MPPProtobufferCoding>"24@0:8@"PBCodable"16
@"PBCodable"24@0:8@"MPMediaLibrary"16
@"PBCodable"16@0:8
v32@0:8^q16^@24
@40@0:8@16@24q32
@"MPMediaPredicate"
@"NSSet"
r^q16@0:8
@36@0:8r^q16Q24B32
v32@0:8Q16Q24
@"MPModelLibraryImportChangeRequest"
{?="initialized"b1"name"b1"trackCount"b1"editorNotes"b1"shortEditorNotes"b1"releaseDate"b1"lastModifiedDate"b1"artwork"b1"editorialArtwork"b1"tracksTiledArtwork"b1"hasCleanContent"b1"hasExplicitContent"b1"type"b1"libraryAdded"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"curatorPlaylist"b1"owner"b1"publicPlaylist"b1"visiblePlaylist"b1"subscribed"b1"userEditableComponents"b1"shareURL"b1"shareShortURL"b1"descriptionText"b1"cloudVersionHash"b1"curator"{?="identifiers"b1"name"b1"handle"b1}}
@"MPMusicPlayerControllerNowPlaying"
@"MPMusicPlayerControllerNowPlayingTimeSnapshot"
v24@0:8@"MPMusicPlayerQueueDescriptor"16
v24@0:8@"MPMusicPlayerControllerNowPlaying"16
v24@0:8@"MPMusicPlayerControllerNowPlayingTimeSnapshot"16
@40@0:8{CGSize=dd}16@32
@"MPArtworkRepresentation"
@"MPArtworkRepresentationCollection"
@"<MPArtworkDataSource>"
v40@0:8@16Q24@?32
v36@0:8@16B24q28
v36@0:8B16@20@28
v48@0:8q16@24@32q40
v44@0:8B16@20@28q36
@"MPPMediaPredicate"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
B24@0:8d16
v28@0:8d16B24
@32@0:8q16Q24
@32@0:8q16d24
Q24@0:8q16
v56@0:8^I16^Q24^Q32^I40^I48
@40@0:8{CGSize=dd}16@?32
@"<MPMediaLibraryDataProviderPrivate>"
@"QueryCriteriaResultsCache"
@"NSPointerArray"
@"_MPActiveUserChangeMonitor"
^{os_unfair_lock_s=I}
B40@0:8^B16^B24@?32
B48@0:8^B16^B24Q32@?40
B32@0:8Q16q24
@32@0:8Q16q24
@36@0:8Q16q24B32
@28@0:8Q16B24
v40@0:8@16@24q32
v48@0:8@16@24q32@?40
B48@0:8r^Q16Q24q32^Q40
B40@0:8@16q24^Q32
B40@0:8q16q24^Q32
@64@0:8@16@24@32@40@?48@?56
v36@0:8q16B24@?28
v36@0:8@16B24@?28
v56@0:8Q16q24@32q40q48
B56@0:8@16@24q32q40Q48
{os_unfair_lock_s=I}16@0:8
^{os_unfair_lock_s=I}16@0:8
v32@0:8@"NSString"16@?<v@?B@"NSError">24
@"MPMediaEntity"
v44@0:8@16q24B32@?36
v24@0:8#16
@24@0:8#16
@"_UIResilientRemoteViewContainerViewController"
@"MPMusicMediaPickerRemoteViewController"
@"MPMediaPickerController"
@"MPMediaPickerController"16@0:8
v24@0:8@"MPMediaPickerController"16
@"UIViewController"16@0:8
@"MPPlaybackArchiveConfiguration"
@"MPMediaPickerConfiguration"
@"<MPMediaPickerControllerDelegate>"
@"<MPMediaPickerRemoteViewLoader>"
v24@0:8@"MPMediaItemCollection"16
v24@0:8@"MPPlaybackArchive"16
v32@0:8@"MPMediaPickerController"16@"MPPlaybackArchive"24
v32@0:8@"MPMediaPickerController"16@"MPMediaItemCollection"24
@"<MPAVQueueCoordinatingDataSource>"
@"MPDownloadProgressView"
{MPAddKeepLocalControlStatus="statusType"q"downloadProgress"d}
{CGSize=dd}24@0:8d16
v32@0:8{MPAddKeepLocalControlStatus=qd}16
v36@0:8{MPAddKeepLocalControlStatus=qd}16B32
{MPAddKeepLocalControlStatus=qd}16@0:8
{CGSize=dd}52@0:8q16@24B32d36d44
{?="initialized"b1"title"b1"previewArtwork"b1"staticAssets"{?="identifiers"b1"duration"b1"flavorType"b1"mediaType"b1"url"b1}}
@"MPLibraryKeepLocalStatusObserverConfiguration"
{MPLibraryActiveKeepLocalStatus="statusType"q"downloadProgress"d}
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPMediaDownloadManager"16@"NSArray"24
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSError"32
{MPLibraryActiveKeepLocalStatus=qd}16@0:8
@40@0:8@16@24@?32
{?="initialized"b1"name"b1"hasBiography"b1"hasSocialPosts"b1"artwork"b1"editorialArtwork"b1"genre"{?="identifiers"b1"name"b1}}
@"MPAVErrorResolverBlockHandler"
@"MPAVErrorResolver"
v40@0:8@"MPAVErrorResolver"16@"NSError"24q32
@"MPDetailScrubController"
@"AVTimeFormatter"
@"<MPDetailSliderDelegate>"
v24@0:8@"MPDetailScrubController"16
v28@0:8@"MPDetailScrubController"16f24
v32@0:8@"MPDetailScrubController"16q24
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
v28@0:8f16d20
@36@0:8@16d24B32
@28@0:8d16B24
v32@0:8@?16@?24
v32@0:8@"MPMusicPlayerControllerApplicationQueueModifications"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v24@0:8@"NSDictionary"16
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">16
v32@0:8q16@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">24
v40@0:8@"MPMediaItem"16@"NSString"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"NSString"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlayingTimeSnapshot">16
v24@0:8@?<v@?@"MPMusicPlayerQueueDescriptor"@"NSError">16
v32@0:8@"MPMusicPlayerQueueDescriptor"16@?<v@?@"NSError">24
v56@0:8@16@24{CGSize=dd}32@?48
v24@0:8@?<v@?q>16
v32@0:8d16@?<v@?>24
v28@0:8f16@?<v@?>20
v24@0:8@?<v@?@"NSXPCListenerEndpoint">16
@"MPMusicPlayerApplicationController"
@"CARSessionStatus"
@"<MPPlayableContentDataSource>"
@"<MPPlayableContentDelegate>"
@"MPPlayableContentManagerContext"
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
v48@0:8@16{CGSize=dd}24@?40
@"NSIndexPath"
@"MPStoreLyricsRequest"
{vector<long, std::__1::allocator<long> >="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::__1::allocator<long> >="__value_"^q}}
{map<long, MPIdentifierSet *, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, MPIdentifierSet *> > >="__tree_"{__tree<std::__1::__value_type<long, MPIdentifierSet *>, std::__1::__map_value_compare<long, std::__1::__value_type<long, MPIdentifierSet *>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, MPIdentifierSet *> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, MPIdentifierSet *>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, MPIdentifierSet *>, std::__1::less<long>, true> >="__value_"Q}}}
@"_MPLazySectionedCollectionStorage"
@"<MPLazySectionedCollectionDataSource>"
@"MPAVClippingTableView"
@"MPAVRoutingViewControllerUpdate"
@"MPWeakTimer"
@"<MPAVRoutingViewControllerDelegate>"
@"<MPAVRoutingViewControllerThemeDelegate>"
@"MPVolumeGroupSliderCoordinator"
v28@0:8@"MPAVRoutingTableViewCell"16B24
v24@0:8@"MPAVRoutingTableViewCell"16
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
d32@0:8@16@24
d32@0:8@16q24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
q40@0:8@16@24q32
q32@0:8@16q24
B40@0:8@16q24@32
@"MPStoreModelPlaybackPositionBuilder"
{?="initialized"b1"title"b1"duration"b1"trackCount"b1"trackNumber"b1"discNumber"b1"grouping"b1"explicit"b1"artistUploadedContent"b1"hasVideo"b1"artwork"b1"copyrightText"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"shouldShowComposer"b1"volumeNormalization"b1"year"b1"userRating"b1"cloudStatus"b1"gaplessInfo"b1"volumeAdjustment"b1"classicalWork"b1"classicalMovement"b1"classicalMovementCount"b1"classicalMovementNumber"b1"album"{?="identifiers"b1"title"b1"releaseDate"b1"year"b1"artist"b1"trackCount"b1}"artist"{?="identifiers"b1"name"b1}"composer"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}"homeSharingAsset"{?="identifiers"b1}"lyrics"{?="identifiers"b1"text"b1"hasStoreLyrics"b1"hasTimeSyncedLyrics"b1}}
@"NSXPCListener"
@"RadioAvailabilityController"
@"RadioRecentStationsController"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
@"CPLRUDictionary"
@24@0:8^v16
^v16@0:8
@36@0:8@16B24@28
@"NSURLSessionConfiguration"
@"NSURLSession"
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@48@0:8@16q24{CGSize=dd}32
{CGSize=dd}24@0:8@16
@52@0:8@16@24{CGSize=dd}32B48
B40@0:8{CGSize=dd}16@32
@40@0:8@16q24@?32
{CGSize=dd}32@0:8@16q24
v40@0:8Q16@24@32
@40@0:8Q16Q24@32
v40@0:8{CGSize=dd}16@32
v32@0:8d16@24
@"MPMediaItemCollection"
@"MPMusicPlayerPlayParameters"
@"MPRadioStation"
@"MPPlaybackArchive"
{shared_ptr<std::__1::map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > > >="__ptr_"^{map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > >}"__cntrl_"^{__shared_weak_count}}
@48@0:8@16{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}24^{map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > >={__tree<std::__1::__value_type<long long, std::__1::shared_ptr<mlcore::EntityQueryResult> >, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::shared_ptr<mlcore::EntityQueryResult> >, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, std::__1::shared_ptr<mlcore::EntityQueryResult> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::shared_ptr<mlcore::EntityQueryResult> >, std::__1::less<long long>, true> >=Q}}}40
{shared_ptr<std::__1::map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > > >=^{map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > >}^{__shared_weak_count}}16@0:8
@"<MPAVErrorResolverDelegate>"
@52@0:8@16@24B32@36@44
@"MPConcreteMediaEntityPropertiesCache"
@"MPConcreteMediaEntityPropertiesCache"16@0:8
@40@0:8Q16@24@32
@32@0:8@16^B24
@"MPArtworkCatalog"
@64@0:8q16@24@32q40q48@56
@56@0:8q16@24@32q40q48
@40@0:8q16@24q32
v40@0:8Q16Q24@?32
@32@0:8Q16^@24
@"<MPMediaLibraryResultSet>"
@"MPMediaQuerySectionInfo"
@48@0:8@16@24q32@40
@"<MPMediaLibraryDataProvider>"
@40@0:8@16#24q32
@"ML3MusicLibrary"
@"MPMediaEntityCache"
B40@0:8@"NSString"16q24^Q32
B40@0:8@"NSArray"16q24^Q32
B24@0:8@?<B@?>16
v24@0:8@?<v@?>16
v48@0:8@16@"NSString"24q32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSArray"24@"NSArray"32
v56@0:8@16@"NSString"24q32q40@?<v@?B@"NSError">48
q24@0:8@"NSDictionary"16
B32@0:8^q16Q24
v40@0:8@"NSArray"16q24@?<v@?B>32
v40@0:8q16q24@?<v@?B>32
v40@0:8@"NSString"16q24@?<v@?@"NSError">32
v40@0:8@"NSIndexSet"16q24@?<v@?B>32
v48@0:8Q16Q24q32@?<v@?B>40
v40@0:8q16q24@?<v@?B@"NSError">32
^v40@0:8^q16Q24^@32
^q40@0:8^v16^Q24^@32
v32@0:8@"MPMediaItem"16@?<v@?@"NSArray">24
v40@0:8q16@"NSString"24q32
v48@0:8q16@"NSString"24q32@?<v@?B@"NSError">40
B40@0:8q16q24o^#32
@"NSString"24@0:8Q16
@24@0:8@"NSString"16
B32@0:8@16@"NSString"24
B24@0:8@"NSString"16
@"MIPMultiverseIdentifier"24@0:8q16
@"MIPMultiverseIdentifier"32@0:8q16q24
v32@0:8@"MPStoreItemLibraryImport"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
B56@0:8@"NSData"16@"NSString"24q32q40Q48
v56@0:8Q16q24@"NSString"32q40q48
@"<MPArtworkDataSource>"16@0:8
v56@0:8@16@24q32q40@?48
v40@0:8q16q24@?32
v48@0:8Q16Q24q32@?40
v40@0:8q16@24q32
v48@0:8q16@24q32@?40
v48@0:8@"NSString"16@"NSString"24@"MPMediaQueryCriteria"32@?<v@?@>40
v40@0:8@"NSSet"16q24@?<v@?@"NSDictionary">32
v48@0:8@"NSSet"16q24q32@?<v@?@"NSDictionary">40
@"<MPMediaLibraryResultSet>"24@0:8@"MPMediaQueryCriteria"16
v32@0:8@"MPMediaQueryCriteria"16@?<v@?B>24
v32@0:8@"MPMediaQueryCriteria"16@?<v@?Q>24
@"MPMediaEntityCache"16@0:8
v44@0:8@"MPMediaQueryCriteria"16B24@?<B@?>28@?<v@?q^B>36
v44@0:8@"MPMediaQueryCriteria"16B24@?<B@?>28@?<v@?q@"NSDictionary"^B>36
v40@0:8@"NSData"16@?<v@?B@"NSError">24@?<v@?f>32
v52@0:8@"NSString"16q24B32@?<v@?q@"NSString"q^B>36@?<v@?qq@"NSString"q^B>44
v32@0:8q16@"NSArray"24
@"NSSet"16@0:8
v44@0:8@16B24@?28@?36
v40@0:8@16@?24@?32
v52@0:8@16q24B32@?36@?44
v48@0:8@16q24q32@?40
v52@0:8@16@24B32q36@?44
@40@0:8q16q24q32
@48@0:8q16q24q32@40
v48@0:8@16q24#32@?40
v56@0:8@16#24@32@40@?48
B40@0:8^q16Q24#32
v32@0:8Q16@?24
v36@0:8I16@20@?28
v28@0:8I16@20
@40@0:8@16@24#32
@"MPModelStaticResponse"
@"MPMediaLibraryAlbumAppData"
@"CAShapeLayer"
@"ICStoreFileAssetFairPlayInfo"
@"MPMediaPlaybackItemMetadata"
@"MIPMultiverseIdentifier"
v40@0:8@16Q24Q32
@"SSDownloadHandler"
v24@0:8@"SSDownloadHandler"16
v32@0:8@"SSDownloadHandler"16@"SSDownloadHandlerSession"24
v32@0:8@"SSDownloadHandler"16@"SSDownloadSession"24
B32@0:8@"SSDownloadHandler"16@"SSDownloadSession"24
v32@0:8@"SSDownloadHandler"16@"SSDownloadAuthenticationSession"24
v40@0:8@"MPStoreDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPStoreDownloadManager"16@"MPStoreDownload"24
v32@0:8@"MPStoreDownloadManager"16@"NSArray"24
v24@0:8@"MPStoreDownloadManager"16
@"AVSystemController"
@"<MPVolumeControllerDataSourceDelegate>"
v24@0:8@?<v@?f>16
@"<MPVolumeControllerDataSourceDelegate>"16@0:8
v24@0:8@"<MPVolumeControllerDataSourceDelegate>"16
f20@0:8f16
@"<MPVolumeControllerDataSource>"
@"<MPVolumeControllerDelegate>"
v28@0:8@"<MPVolumeControllerDataSource>"16f24
v28@0:8@"<MPVolumeControllerDataSource>"16B24
v32@0:8@"<MPVolumeControllerDataSource>"16q24
v32@0:8@"<MPVolumeControllerDataSource>"16@"NSString"24
v28@0:8@"<MPVolumeControllerDataSource>"16I24
v24@0:8f16f20
v28@0:8I16I20B24
@"MPMediaLibraryArtworkRequest"
@"MPMediaLibraryArtworkDataSource"
{vector<std::__1::shared_ptr<mlcore::EntityCache>, std::__1::allocator<std::__1::shared_ptr<mlcore::EntityCache> > >="__begin_"^{shared_ptr<mlcore::EntityCache>}"__end_"^{shared_ptr<mlcore::EntityCache>}"__end_cap_"{__compressed_pair<std::__1::shared_ptr<mlcore::EntityCache> *, std::__1::allocator<std::__1::shared_ptr<mlcore::EntityCache> > >="__value_"^{shared_ptr<mlcore::EntityCache>}}}
@40@0:8#16@24@32
{shared_ptr<mlcore::EntityCache>=^{EntityCache}^{__shared_weak_count}}48@0:8^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=q[56c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}16{vector<mlcore::ModelPropertyBase *, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}}}24
@48@0:8@16@24@32q40
@32@0:8#16@24
@"MPAVRoutingViewController"
v32@0:8@"MPAVRoutingViewController"16@"MPAVRoute"24
v24@0:8@"MPAVRoutingViewController"16
v32@0:8@"MPAVRoutingViewController"16@"MPAVRoutingViewItem"24
@28@0:8q16B24
@40@0:8@16q24@32
B40@0:8^@16@24@32
@48@0:8@16@24Q32@?40
{shared_ptr<mlcore::LocalizedSearchQuery>="__ptr_"^{LocalizedSearchQuery}"__cntrl_"^{__shared_weak_count}}
@"MPModelLibrarySearchRequest"
{?="_relationshipPreparesSource"b1}
#24@0:8@16
@40@0:8q16q24@32
@"MPAVBatteryLevel"
@"MPAVRouteConnection"
q24@0:8I16I20
@"_MPDownloadProgressRingView"
@"NSOperation"
@"NSObject<OS_dispatch_group>"
d24@0:8d16
@"<MPMediaKitEntityRelationshipPayloadProvider>"
@40@0:8#16@24@?32
v40@0:8@"NSString"16#24@"NSString"32
v40@0:8@16#24@32
v40@0:8@16@24^?32
v48@0:8@16#24@32@?40
@"MPModelPlaylistEntriesShareEligibilityRequest"
@"MPModelLibraryAddToPlaylistChangeRequest"
{?="initialized"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}
@"MPModelPodcastEpisodeKind"
{CGSize=dd}32@0:8@16@24
^{Arc4State=II*}
@"<MPRandom>"
@40@0:8@16q24q32
@48@0:8@16{CGSize=dd}24@40
@52@0:8@16{CGSize=dd}24B40@44
{CGSize=dd}48@0:8{CGSize=dd}16{CGSize=dd}32
@32@0:8@16^{?=iiii}24
@40@0:8Q16@24Q32
@"MPModelMovie"
v32@0:8:16d24
v24@0:8:16
{?="initialized"b1"title"b1"descriptionText"b1"duration"b1"artwork"b1"screenshotArtwork"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"musicShow"b1"episodeNumber"b1"explicitRating"b1"season"{?="identifiers"b1"number"b1"year"b1"show"{?="identifiers"b1"title"b1"showCreator"{?="identifiers"b1"name"b1"artwork"b1}}}"show"{?="identifiers"b1"title"b1"showCreator"{?="identifiers"b1"name"b1"artwork"b1}}}
^?16@0:8
@32@0:8@16^?24
@"ICStoreRadioStreamAssetInfo"
@"MPStoreLibraryPersonalizationRequest"
{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}16@0:8
v40@0:8{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}16
{vector<int, std::__1::allocator<int> >="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::__1::allocator<int> >="__value_"^i}}
v36@0:8B16@20^@28
v28@0:8B16@20
v32@0:8@?16^{__CFString=}24
@40@0:8@16@24^@32
@"MPStoreHLSAssetInfo"
@"ICMusicSubscriptionStatusMonitor"
@"ICMusicSubscriptionFairPlayKeyStatus"
@"SSVSubscriptionStatus"
v24@0:8@"ICEnvironmentMonitor"16
B24@0:8^B16
@56@0:8@16@24@32@40@48
{?="entityOrder"b1"groupingType"b1"staticEntityType"b1"filteringDisabled"b1"includeNonLibraryEntities"b1}
@20@0:8i16
i24@0:8@16
{?="initialized"b1"endpointType"b1"redownloadParameters"b1"redownloadable"b1"accountIdentifier"b1"shouldReportPlayEvents"b1"subscriptionRequired"b1}
@"MPModelFileAsset"
{MPLibraryAddStatusObserverConfiguration=BBBBB}16@0:8
@"MPRTCReportingSessionSummaryEvent"
@44@0:8@16@24i32q36
@"NSDictionary"16@0:8
@"MPModelLibraryPlaylistEditChangeRequest"
@"Protocol"
@"NSUUID"
@"MPNowPlayingInfoCenterArtworkContext"
{_MSVSignedRange="location"q"length"q}
@"MSVLRUDictionary"
@"MPArtworkResizeUtility"
@"<MPNowPlayingPlaybackQueueDataSource>"
@"<MPNowPlayingInfoLyricsDelegate>"
{?="createPlaybackQueue"^v"createContentItem"^v"createChildItem"^v"metadata"^v"artwork"^v"info"^v"languageOptions"^v"lyrics"^v}
@"MRPlayerPath"
@"<MPNowPlayingPlaybackQueueDelegate>"
@?<@"MPArtworkCatalog"@?@"MPModelObject">24@0:8@"MPNowPlayingContentItem"16
@40@0:8{?=qq}16^{?=qq}32
^v24@0:8^v16
v40@0:8{_MSVSignedRange=qq}16@?32
B32@0:8:16@?24
@"MPMediaItemArtwork"
@"ICMusicSubscriptionStatus"
@"HSHomeSharingLibrary"
v32@0:8@"HSBrowser"16@"HSHomeSharingLibrary"24
{?="initialized"b1"name"b1"shortName"b1"hasSocialPosts"b1"editorNotes"b1"shortEditorNotes"b1"curatorKind"b1"editorialArtwork"b1"brandLogoArtwork"b1}
@28@0:8f16q20
@52@0:8d16d24f32d36q44
@56@0:8@16@24@32q40q48
@"UICubicTimingParameters"
@"MPMediaLibraryArtwork"
@48@0:8@16Q24q32q40
@56@0:8@16Q24q32q40Q48
@40@0:8Q16q24q32
@"ML3Artwork"
@"MPModelPlaylistEntry"
@"MSVSQLDatabase"
@"NSDictionary"24@0:8@"MPIdentifierSet"16
@40@0:8@16Q24^@32
@"MSVSQLDatabaseTransaction"
@"MSVSQLStatement"
B56@0:8@"NSDictionary"16@"NSString"24@"MPIdentifierSet"32q40@"NSDate"48
B40@0:8@"NSURL"16@"MPIdentifierSet"24q32
B48@0:8@"NSData"16@"NSString"24@"NSString"32q40
B48@0:8@"MPIdentifierSet"16@"MPIdentifierSet"24@"NSString"32q40
B32@0:8@"MPIdentifierSet"16@"NSString"24
B56@0:8@16@24@32q40@48
B40@0:8@16@24q32
B48@0:8@16@24@32q40
@56@0:8@16@24q32@40@48
{?="initialized"b1"groupType"b1"lastUpdatedDate"b1"title"b1"subgroups"b1"loadAdditionalContentURL"b1"refreshURL"b1"displaysAsGridCellInCarPlay"b1}
@"MPModelForYouRecommendationMusicKitItemBuilder"
@"NSDateFormatter"
@"MPMutableSectionedCollection"
@60@0:8@16@24@32@40@48B56
Q32@0:8Q16Q24
@"SSAuthorizationRequest"
@"MPHomeSharingML3DataProvider"
v32@0:8@"SSAuthorizationRequest"16@"SSURLConnectionResponse"24
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
@40@0:8@16Q24@32
@64@0:8@16Q24@32Q40@48Q56
@"MPSkipIntervalCommand"
@"MPRatingCommand"
@"MPChangePlaybackRateCommand"
@"MPFeedbackCommand"
@"MPChangePlaybackPositionCommand"
@"MPChangeRepeatModeCommand"
@"MPChangeShuffleModeCommand"
@"MPAdvanceShuffleModeCommand"
@"MPAdvanceRepeatModeCommand"
@"MPSetPlaybackQueueCommand"
@"MPInsertIntoPlaybackQueueCommand"
@"MPReorderQueueCommand"
@"MPSetPlaybackSessionCommand"
@"MPPreloadPlaybackSessionCommand"
@"MPSetPriorityForPlaybackSessionCommand"
@"MPChangeQueueEndActionCommand"
v24@0:8@"MPRemoteCommand"16
v36@0:8I16^{__CFDictionary=}20@?28
@28@0:8#16I24
@"SSRentalCheckoutRequest"
@48@0:8Q16Q24Q32Q40
{vector<unsigned long long, std::__1::allocator<unsigned long long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >="__value_"^Q}}
@88@0:8@16@24@32@40@48@56B64B68Q72^@80
@"MPModelLibraryHasPurchasesRequest"
@"ICStorePlatformMetadata"
@36@0:8@16@24B32
@"_MPAudioAndSubtitlesController"
@"UINavigationController"
@"UITableView"
@"MPAlternateTrack"
@48@0:8q16q24@?32@?40
@"ICCloudItemIDList"
v32@0:8Q16q24
v40@0:8Q16q24Q32
@"ICCloudClient"
@"NSObject<ICCloudAvailability>"
@"MSVDistributedNotificationObserver"
v36@0:8Q16B24@?28
v48@0:8Q16@24@32@?40
v56@0:8Q16@24@32@40@?48
v48@0:8@16@24Q32@?40
v40@0:8q16Q24@?32
v48@0:8q16@24Q32@?40
v56@0:8q16q24q32q40@?48
v48@0:8q16q24q32q40
v48@0:8q16q24Q32@?40
v40@0:8q16q24Q32
@"AVQueuePlayer"
@56@0:8{?=qiIq}16@40@?48
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
@"MPStoreModelRequest"
v40@0:8@16Q24@32
@"MPModelPlaylistEntryKind"
@"ICStoreURLRequest"
@"<MPStoreSocialRequestOperationDataSource>"
q24@0:8d16
@"<MPRequestCancellationToken>"
@"<MPRequestResponseControllerDelegate>"
B24@0:8^?16
^v24@0:8@16
q24@0:8^v16
@"MPStoreCompletionOfferResponse"
@"MPStoreCollectionCompletionOffering"
@"MPStoreOfferMediaItemCollection"
{?="isInitialized"B"itemType"B"url"B"backedByStoreItemMetadata"B"album"B"playlist"B"radioStation"B"subgroup"B}
@"MPModelForYouRecommendationMusicKitGroupBuilder"
@52@0:8@16@24@32@40B48
@44@0:8@16q24B32@?36
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
Q32@0:8@16@?24
@40@0:8@16^B24@?32
v32@0:8^B16^@24
@"MPStoreOfferContentRating"
@"MPStoreOfferMediaItemArtworkDescriptor"
@"<MPNowPlayingContentItemArtworkDataSource>"
{ITColor=dddd}16@0:8
@48@0:8{ITColor=dddd}16
@"<MPModelObjectPlaybackItemMetadataDelegate>"
@"MPModelPlaybackPosition"
@"NSMapTable"16@0:8
v24@0:8@"NSMapTable"16
{objc_method_description=:*}32@0:8@16:24
@"NSEnumerator"
:16@0:8
v32@0:8r*16@24
@48@0:8@16q24@32@40
@"MPPlaybackContext"
{?="initialized"b1"groupType"b1"lastUpdatedDate"b1"title"b1"subgroups"b1"loadAdditionalContentURL"b1"refreshURL"b1}
@"MPModelForYouRecommendationItemBuilder"
@"<MPSectionedIdentifierListDelegate>"
@"<MPSectionedIdentifierListAnnotationDelegate>"
v24@0:8@?<v@?@"<MPExclusiveAccessToken>">16
@24@0:8@?<@@?@"<MPExclusiveAccessToken>">16
B24@0:8@?<B@?@"<MPExclusiveAccessToken>">16
q24@0:8@?<q@?@"<MPExclusiveAccessToken>">16
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"MPChangeDetails"16@?<@"NSString"@?q>24
@"NSArray"24@0:8@"<MPExclusiveAccessToken>"16
@"MPStoreOffer"
@64@0:8@16@24q32q40Q48@56
v48@0:8^@16^@24@32@40
v48@0:8^@16^@24@32q40
@32@0:8@?16@?24
@32@0:8#16@?24
v40@0:8@16#24@?32
q24@0:8Q16
v24@0:8@"MPMediaControlsConfiguration"16
@"MPModelLibraryDownloadQueueRequest"
@"MPMediaLibraryEntityTranslator"
{?="initialized"b1"itemType"b1"backedByStoreItemMetadata"b1"album"b1"playlist"b1"radioStation"b1"subgroup"b1}
@"MPModelForYouRecommendationGroupBuilder"
r^v16@0:8
@"SBCPlaybackPositionSyncService"
@"SBCPlaybackPositionDomain"
@"MPCloudController"
@"MPCloudServiceStatusController"
{MPLibraryAddStatusObserverConfiguration="isValidContentType"B"isLibraryAdded"B"hasCleanContent"B"hasExplicitContent"B"isLibraryAddEligible"B}
v29@0:8{MPLibraryAddStatusObserverConfiguration=BBBBB}16@21
@"MPRadioController"
@40@0:8Q16{CGSize=dd}24
@56@0:8Q16@24@32@40@48
@"<_MPActiveUserChangeMonitorDelegate>"
@"<MPRemoteCommandDelegate_Internal>"
@"<MPRemoteCommandDelegate_Private>"
@20@0:8I16
@28@0:8I16@20
@20@0:8f16
v48@0:8@16@24q32@40
{?="useCarPlayBrowseTopLevelContentOnly"B"useCarPlayBrowseTopLevelRequestReorderingHeuristics"B}
@"MPStoreItemMetadataResponse"
@50@0:8@16{?=BB}24@26@34@42
@58@0:8@16@24{?=BB}32@34@42@50
B60@0:8@16B24@28q36@44@52
{?=BB}16@0:8
@"MPPMediaPredicateValue"
{?="comparisonType"b1}
@"MPMovieTVHUDView"
@"MPModelTVEpisodeKind"
@"MPVideoPlaybackOverlayView"
@"UIAlertView"
@"MPVideoContainerView"
@"UITapGestureRecognizer"
@"MPInlineVideoFullscreenViewController"
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
B32@0:8@"MPTransportControls"16Q24
v24@0:8@"MPTransportControls"16
B32@0:8@16Q24
v24@0:8@"UIView<MPVideoOverlay>"16
v32@0:8@"UIView<MPVideoOverlay>"16Q24
d32@0:8@"UIView<MPVideoOverlay>"16d24
B24@0:8@"UIView<MPVideoOverlay>"16
d32@0:8@16d24
v40@0:8@16@24^v32
@"MPModelLibrarySearchScope"
@48@0:8{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16@32@40
v40@0:8{shared_ptr<mlcore::LibraryView>=^{LibraryView}^{__shared_weak_count}}16@32
{shared_ptr<mlcore::Predicate>=^{Predicate}^{__shared_weak_count}}16@0:8
{shared_ptr<mlcore::Predicate>=^{Predicate}^{__shared_weak_count}}24@0:8^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}16
B48@0:8{CGSize=dd}16{CGSize=dd}32
@56@0:8@16@24{CGSize=dd}32@?48
@"AVRoutingSessionManager"
@"MPMRAVOutputContextWrapper"
v24@0:8@"MPMediaPickerConfiguration"16
@"MPInlineVideoController"
v32@0:8q16d24
@"UISelectionFeedbackGenerator"
@"UIControl<MPDetailedScrubbing>"
@"<MPDetailScrubControllerDelegate>"
f24@0:8d16
{?="initialized"b1"title"b1"duration"b1"trackNumber"b1"trackCount"b1"discNumber"b1"grouping"b1"explicit"b1"artistUploadedContent"b1"hasVideo"b1"artwork"b1"copyrightText"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"shouldShowComposer"b1"volumeNormalization"b1"year"b1"userRating"b1"cloudStatus"b1"gaplessInfo"b1"volumeAdjustment"b1"classicalWork"b1"classicalMovement"b1"classicalMovementCount"b1"classicalMovementNumber"b1"album"{?="identifiers"b1"title"b1"releaseDate"b1"year"b1"artist"b1}"artist"{?="identifiers"b1"name"b1}"composer"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}"homeSharingAsset"{?="identifiers"b1}"lyrics"{?="identifiers"b1"text"b1"hasStoreLyrics"b1"hasTimeSyncedLyrics"b1}}
^{__CFRunLoopSource=}
^{__CFUserNotification=}
@24@0:8^{__CFUserNotification=}16
^{__CFUserNotification=}16@0:8
v32@0:8@16^{__CFUserNotification=}24
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
^{__CFDictionary=}
@40@0:8q16q24@?32
v36@0:8q16#24B32
v32@0:8q16#24
@48@0:8q16q24q32@?40
^{map<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >={__tree<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true> >=Q}}}24@0:8#16
v32@0:8#16@?24
@"MPMRAVEndpointWrapper"
B20@0:8I16
@48@0:8q16@24@32@40
@40@0:8{CGSize=dd}16q32
@"MPModelLibraryKeepLocalChangeRequest"
v48@0:8q16#24q32@40
v48@0:8q16q24q32@40
@"MPModelTVSeasonKind"
{?="list"^q"count"Q"size"Q}
{?="shouldContain"b1}
^q16@0:8
v32@0:8^q16Q24
{?="doublePredicateValue"b1"integerPredicateValue"b1"floatPredicateValue"b1"boolPredicateValue"b1}
@"NSUserDefaults"
@40@0:8#16@24^@32
v40@0:8@16@24^@32
v40@0:8q16q24@32
@"MPStoreSocialRequestOperation"
{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >="__ptr_"^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >=^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >=^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}^{__shared_weak_count}}16
^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=q[56c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}
v32@0:8r^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@?24
v32@0:8@16^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}24
v40@0:8@16r^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}24@?32
v56@0:8@16r^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}24r^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}32@?40@?48
v40@0:8@16#24^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}32
v44@0:8@16#24B32^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}36
v60@0:8@16#24B32^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}36r^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}44@?52
@48@0:8@16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24@40
@40@0:8{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}16@32
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}48@0:8@16@24@32@40
{shared_ptr<mlcore::PropertiesQuery>=^{PropertiesQuery}^{__shared_weak_count}}48@0:8@16@24@32@40
{vector<mlcore::ModelPropertyBase *, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}}}24@0:8@16
{vector<mlcore::SortDescriptor, std::__1::allocator<mlcore::SortDescriptor> >=^{SortDescriptor}^{SortDescriptor}{__compressed_pair<mlcore::SortDescriptor *, std::__1::allocator<mlcore::SortDescriptor> >=^{SortDescriptor}}}24@0:8@16
{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}24@0:8@16
^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}24@0:8@16
{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}28@0:8@16B24
@64@0:8@16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24@40@48@56
{vector<mlcore::ModelPropertyBase *, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}}}32@0:8@16^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}24
^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=q[56c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}16@0:8
^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}
^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}16@0:8
v24@0:8^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}16
@40@0:8#16^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=q[56c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}24B32B36
@32@0:8#16^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=q[56c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}24
@"MPStoreModelMovieMediaClipBuilder"
{?="initialized"b1"title"b1"description"b1"duration"b1"explicitRating"b1"tagline"b1"artwork"b1"editorialArtwork"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1}
v32@0:8@"NSString"16@?<v@?@"<MPMutableLocalLibraryIdentifiers>">24
v32@0:8@"NSString"16@?<v@?@"<MPMutablePersonalStoreIdentifiers>">24
v24@0:8@?<v@?@"<MPMutableUniversalStoreIdentifiers>">16
v24@0:8@?<v@?@"<MPMutableRadioIdentifiers>">16
@"NSLocale"
B40@0:8@16{CGSize=dd}24
@"ML3ArtworkConfiguration"
@"MCProfileConnection"
@"ICStoreArtworkInfo"
@"ICStoreVideoArtworkInfo"
@"SSDownload"
@"SSPurchase"
@"SSPurchaseResponse"
@"SSDownloadManager"
@"SSPurchaseManager"
v32@0:8@"SSPurchaseManager"16@"NSArray"24
v32@0:8@"SSDownloadManager"16@"NSArray"24
v24@0:8@"SSDownloadManager"16
v32@0:8@?16@24
@"MPStoreDownload"
{?="initialized"b1"name"b1"uncensoredName"b1"handle"b1"biography"b1"artwork"b1"isVerified"b1"isPrivate"b1}
@"MPModelSongKind"
@"MPPCompoundPredicate"
@"MPPConditionalPredicate"
@"MPPPersistentIDsPredicate"
@"MPPPropertyPredicate"
@"MPPSearchStringPredicate"
{?="type"b1}
&nld
9swe
Nspa
Ndan
Anor
9heb
 heb
 jpn
*ara
l&mlt
5tur
Rhrv
V"zho
izho
iurd
DVhin
.!tha
Qkor
-lit
41pol
Ahun
"est
60smi
Mfao
Jzho
izho
inld
9nld
9gle
)Nron
Ices
slk
Mslv
Myid
$eyid
$esrp
PNsrp
PNsrp
PNmkd
d5bul
rUbel
BWkaz
:,aze
%#kat
4,mol
5kir
2-tgk
Ptuk
Rmon
5mon
5pus
Bkur
.kas
3,snd
Mbod
8san
.Lmar
24ben
.@ori
I>mal
,4kan
.,tam
-Ptel
Psin
.Mmya
!7khm
-lao
/0vie
%Yind
%ind
%tgl
Pmsa
a6msa
a6amh
2Qorm
M>som
Mswa
Nkin
.-run
Jnya
!;mlg
5epo
4lat
40que
Fgrn
4Puig
'Udzo
6(und
Usun
Nglg
u%gla
Qgrc
,,abk
5 haw
7 ibo
O$ina
%ile
%ipk
&kau
5,lin
.1mni
5mri
I6nau
58oci
i<pap
0@roh
Ismo
Msag
'Lsot
Mtsn
nRsna
Mssw
wNsyr
2Otso
oRtwi
Rven
Xvol
Ywol
]xho
ayor
ezul
jcos
2zha
inob
9non
